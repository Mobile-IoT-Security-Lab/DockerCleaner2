#
#   NOTE: THIS DOCKERFILE IS GENERATED VIA "update.sh"
#
#   PLEASE DO NOT EDIT IT DIRECTLY.
#
FROM alpine:3.4
#   persistent / runtime deps
ENV PHPIZE_DEPS="autoconf  file  g++  gcc  libc-dev  make  pkgconf  re2c"
RUN apk add ca-certificates=20161130-r0 curl=7.60.0-r1 tar=1.29-r1 xz=5.2.2-r1 --no-cache --virtual .persistent-deps
#   ensure www-data user exists
RUN set -x \
 && addgroup -g 82 -S www-data \
 && adduser -u 82 -D -S -G www-data www-data
#   82 is the standard uid/gid for "www-data" in Alpine
#   http://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.3.2
#   http://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.3.2
#   http://git.alpinelinux.org/cgit/aports/tree/main/nginx-initscripts/nginx-initscripts.pre-install?h=v3.3.2
ENV PHP_INI_DIR="/usr/local/etc/php"
RUN mkdir -p $PHP_INI_DIR/conf.d
#  #<autogenerated>##
#  #</autogenerated>##
ENV GPG_KEYS="1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763"
ENV PHP_VERSION="7.0.11"
ENV PHP_FILENAME="php-7.0.11.tar.xz"
ENV PHP_SHA256="d4cccea8da1d27c11b89386f8b8e95692ad3356610d571253d00ca67d524c735"
RUN set -xe \
 && apk add gnupg=2.1.12-r1 --no-cache --virtual .fetch-deps \
 && mkdir -p /usr/src \
 && cd /usr/src \
 && curl -fSL "https://secure.php.net/get/$PHP_FILENAME/from/this/mirror" -o php.tar.xz \
 && echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c - \
 && curl -fSL "https://secure.php.net/get/$PHP_FILENAME.asc/from/this/mirror" -o php.tar.xz.asc \
 && export GNUPGHOME="$( mktemp -d ;)" \
 && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ; done \
 && gpg --batch --verify php.tar.xz.asc php.tar.xz \
 && rm -r "$GNUPGHOME" \
 && apk del .fetch-deps
COPY docker-php-source /usr/local/bin/
RUN set -xe \
 && apk add curl-dev=7.60.0-r1 libedit-dev=20150325.3.1-r3 libxml2-dev=2.9.5-r0 openssl-dev=1.0.2n-r0 sqlite-dev=3.13.0-r2 $PHPIZE_DEPS --no-cache --virtual .build-deps \
 && docker-php-source extract \
 && cd /usr/src/php \
 && ./configure --with-config-file-path="$PHP_INI_DIR" --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \
 && make -j"$( getconf _NPROCESSORS_ONLN ;)" \
 && make install \
 && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \
 && make clean \
 && docker-php-source delete \
 && runDeps="$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)" \
 && apk add $runDeps --no-cache --virtual .php-rundeps \
 && apk del .build-deps
COPY docker-php-ext-* /usr/local/bin/
#  #<autogenerated>##
CMD ["php", "-a"]
#  #</autogenerated>##
RUN addgroup -S docker-user ; adduser -S -G docker-user docker-user
USER docker-user
# Please add your HEALTHCHECK here!!!
