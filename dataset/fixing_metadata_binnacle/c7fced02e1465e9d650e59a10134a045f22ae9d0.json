{"seed":2134365419,"processedDockerfileHash":"fe7c8b308e2fefded49da5d94d919f25","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n#   Licensed under the Amazon Software License (the \"License\"). You may not use this file except in compliance with the License.\n#   A copy of the License is located at\n#\n#      http://aws.amazon.com/asl/\n#\n#   or in the \"license\" file accompanying this file.\n#   This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.\n#   See the License for the specific language governing permissions and limitations under the License.\n#\nFROM ubuntu:14.04.5\nENV LANG=\"C.UTF-8\"\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"17.09.0-ce\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.21.2\" \\\n    GITVERSION_VERSION=\"3.6.5\"\n#   Install git, SSH, and other utilities\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=1.0.1ubuntu2.24 -y \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-trusty main\" | tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y \\\n && apt-add-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends git=1:2.* -y \\\n && git version \\\n && apt-get install --no-install-recommends openssh-client=1:6.6* -y \\\n && mkdir ~/.ssh \\\n && touch ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts \\\n && chmod 600 ~/.ssh/known_hosts \\\n && apt-get install --no-install-recommends ca-certificates=20170717~14.04.2 mono-devel=3.2.8+dfsg-4ubuntu1.1 wget=1.15-* fakeroot=1.20-* autoconf=2.69-* automake=1:1.14.* less=458-* groff=1.22.* bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.* libbz2-dev=1.0.* libc6-dev=2.19-* curl=7.35.* libdb-dev=1:5.3.* libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.* libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.* libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.* libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-* libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.* libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-* patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* tcl=8.6.* tk=8.6.* e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.* liberror-perl=0.17-* unzip=6.0-* asciidoc=8.6.* build-essential=11.* bzr=2.6.* cvs=2:1.12.* cvsps=2.1-* docbook-xml=4.5-* docbook-xsl=1.78.* dpkg-dev=1.17.* gettext=0.18.* gettext-base=0.18.* libapr1=1.5.* libaprutil1=1.5.* libasprintf0c2=0.18.* libdbd-sqlite3-perl=1.40-* libdbi-perl=1.630-* libdpkg-perl=1.17.* libhttp-date-perl=6.02-* libio-pty-perl=1:1.08-* libserf-1-1=1.3.* libsvn-perl=1.8.* libsvn1=1.8.* libtcl8.6=8.6.* libtimedate-perl=2.3000-* libunistring0=0.9.* libxml2-utils=2.9.* libyaml-perl=0.84-* python-bzrlib=2.6.* python-configobj=4.7.* sgml-base=1.26+* sgml-data=2.0.* subversion=1.8.* tcl=8.6.* tcl8.6=8.6.* xml-core=0.13+* xmlto=0.0.* xsltproc=1.1.* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#   Download and set up GitVersion\nRUN set -ex \\\n && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe $@\" >> /usr/local/bin/gitversion \\\n && chmod +x /usr/local/bin/gitversion\n#   Install Docker\nRUN set -ex \\\n && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n && rm docker.tgz \\\n && docker -v \\\n && addgroup dockremap \\\n && useradd -g dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid \\\n && wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n && docker-compose version\nVOLUME /var/lib/docker\nCOPY dockerd-entrypoint.sh /usr/local/bin/\nENV PATH=\"/usr/local/bin:$PATH\" \\\n    GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\" \\\n    PYTHON_VERSION=\"3.6.5\" \\\n    PYTHON_PIP_VERSION=\"10.0.0\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends tcl-dev=8.6.0+6ubuntu3 tk-dev=8.6.0+6ubuntu3 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && (gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" || gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEY\" || gpg --keyserver keyserver.ubuntu.com --recv-keys \"$GPG_KEY\" ) \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-loadable-sqlite-extensions --enable-shared \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && if [ ! -e /usr/local/bin/pip3 ] ; then : \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py ; fi \\\n && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n && pip install boto3==1.26.114 pipenv==2023.3.20 virtualenv==20.21.0 awscli==1.* --no-cache-dir \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth\nCMD [\"python3\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n#  Licensed under the Amazon Software License (the \"License\"). You may not use this file except in compliance with the License.\n#  A copy of the License is located at\n#\n#     http://aws.amazon.com/asl/\n#\n#  or in the \"license\" file accompanying this file.\n#  This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.\n#  See the License for the specific language governing permissions and limitations under the License.\n#\nFROM ubuntu:14.04.5\nENV LANG=\"C.UTF-8\"\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"17.09.0-ce\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.21.2\" \\\n    GITVERSION_VERSION=\"3.6.5\"\n#  Install git, SSH, and other utilities\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && apt-get install -y apt-transport-https \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-trusty main\" | tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && apt-add-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends git=1:2.* -y \\\n && git version \\\n && apt-get install --no-install-recommends openssh-client=1:6.6* -y \\\n && mkdir ~/.ssh \\\n && touch ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts \\\n && chmod 600 ~/.ssh/known_hosts \\\n && apt-get install --no-install-recommends ca-certificates mono-devel wget=1.15-* fakeroot=1.20-* autoconf=2.69-* automake=1:1.14.* less=458-* groff=1.22.* bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.* libbz2-dev=1.0.* libc6-dev=2.19-* curl=7.35.* libdb-dev=1:5.3.* libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.* libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.* libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.* libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-* libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.* libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-* patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* tcl=8.6.* tk=8.6.* e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.* liberror-perl=0.17-* unzip=6.0-* asciidoc=8.6.* build-essential=11.* bzr=2.6.* cvs=2:1.12.* cvsps=2.1-* docbook-xml=4.5-* docbook-xsl=1.78.* dpkg-dev=1.17.* gettext=0.18.* gettext-base=0.18.* libapr1=1.5.* libaprutil1=1.5.* libasprintf0c2=0.18.* libdbd-sqlite3-perl=1.40-* libdbi-perl=1.630-* libdpkg-perl=1.17.* libhttp-date-perl=6.02-* libio-pty-perl=1:1.08-* libserf-1-1=1.3.* libsvn-perl=1.8.* libsvn1=1.8.* libtcl8.6=8.6.* libtimedate-perl=2.3000-* libunistring0=0.9.* libxml2-utils=2.9.* libyaml-perl=0.84-* python-bzrlib=2.6.* python-configobj=4.7.* sgml-base=1.26+* sgml-data=2.0.* subversion=1.8.* tcl=8.6.* tcl8.6=8.6.* xml-core=0.13+* xmlto=0.0.* xsltproc=1.1.* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#  Download and set up GitVersion\nRUN set -ex \\\n && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe $@\" >> /usr/local/bin/gitversion \\\n && chmod +x /usr/local/bin/gitversion\n#  Install Docker\nRUN set -ex \\\n && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n && rm docker.tgz \\\n && docker -v \\\n && addgroup dockremap \\\n && useradd -g dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid \\\n && wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n && docker-compose version\nVOLUME /var/lib/docker\nCOPY dockerd-entrypoint.sh /usr/local/bin/\nENV PATH=\"/usr/local/bin:$PATH\" \\\n    GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\" \\\n    PYTHON_VERSION=\"3.6.5\" \\\n    PYTHON_PIP_VERSION=\"10.0.0\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends tcl-dev tk-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && (gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" || gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEY\" || gpg --keyserver keyserver.ubuntu.com --recv-keys \"$GPG_KEY\" ) \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-loadable-sqlite-extensions --enable-shared \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && if [ ! -e /usr/local/bin/pip3 ] ; then : \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py ; fi \\\n && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n && pip install boto3 pipenv virtualenv awscli==1.* --no-cache-dir \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth ( ( -type d -a -name test -o -name tests ) -o ( -type f -a -name '*.pyc' -o -name '*.pyo' ) ) -exec rm -rf '{}' + \\\n && apt-get purge -y --auto-remove tcl-dev tk-dev \\\n && rm -rf /usr/src/python ~/.cache \\\n && cd /usr/local/bin \\\n && { [ -e easy_install ] || ln -s easy_install-* easy_install ; } \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCMD [\"python3\"]\n","injectedSmells":[],"originalDockerfileHash":"80f965d6fd8307b61d5104e37f37d4eb","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n#   Licensed under the Amazon Software License (the \"License\"). You may not use this file except in compliance with the License.\n#   A copy of the License is located at\n#\n#      http://aws.amazon.com/asl/\n#\n#   or in the \"license\" file accompanying this file.\n#   This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.\n#   See the License for the specific language governing permissions and limitations under the License.\n#\nFROM ubuntu:14.04.5\nENV LANG=\"C.UTF-8\"\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"17.09.0-ce\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.21.2\" \\\n    GITVERSION_VERSION=\"3.6.5\"\n#   Install git, SSH, and other utilities\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && apt-get install apt-transport-https -y \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-trusty main\" | tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && apt-add-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends git=1:2.* -y \\\n && git version \\\n && apt-get install --no-install-recommends openssh-client=1:6.6* -y \\\n && mkdir ~/.ssh \\\n && touch ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts \\\n && chmod 600 ~/.ssh/known_hosts \\\n && apt-get install --no-install-recommends ca-certificates mono-devel wget=1.15-* fakeroot=1.20-* autoconf=2.69-* automake=1:1.14.* less=458-* groff=1.22.* bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.* libbz2-dev=1.0.* libc6-dev=2.19-* curl=7.35.* libdb-dev=1:5.3.* libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.* libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.* libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.* libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-* libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.* libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-* patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* tcl=8.6.* tk=8.6.* e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.* liberror-perl=0.17-* unzip=6.0-* asciidoc=8.6.* build-essential=11.* bzr=2.6.* cvs=2:1.12.* cvsps=2.1-* docbook-xml=4.5-* docbook-xsl=1.78.* dpkg-dev=1.17.* gettext=0.18.* gettext-base=0.18.* libapr1=1.5.* libaprutil1=1.5.* libasprintf0c2=0.18.* libdbd-sqlite3-perl=1.40-* libdbi-perl=1.630-* libdpkg-perl=1.17.* libhttp-date-perl=6.02-* libio-pty-perl=1:1.08-* libserf-1-1=1.3.* libsvn-perl=1.8.* libsvn1=1.8.* libtcl8.6=8.6.* libtimedate-perl=2.3000-* libunistring0=0.9.* libxml2-utils=2.9.* libyaml-perl=0.84-* python-bzrlib=2.6.* python-configobj=4.7.* sgml-base=1.26+* sgml-data=2.0.* subversion=1.8.* tcl=8.6.* tcl8.6=8.6.* xml-core=0.13+* xmlto=0.0.* xsltproc=1.1.* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#   Download and set up GitVersion\nRUN set -ex \\\n && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe $@\" >> /usr/local/bin/gitversion \\\n && chmod +x /usr/local/bin/gitversion\n#   Install Docker\nRUN set -ex \\\n && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n && rm docker.tgz \\\n && docker -v \\\n && addgroup dockremap \\\n && useradd -g dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid \\\n && wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n && docker-compose version\nVOLUME /var/lib/docker\nCOPY dockerd-entrypoint.sh /usr/local/bin/\nENV PATH=\"/usr/local/bin:$PATH\" \\\n    GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\" \\\n    PYTHON_VERSION=\"3.6.5\" \\\n    PYTHON_PIP_VERSION=\"10.0.0\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends tcl-dev tk-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && (gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" || gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEY\" || gpg --keyserver keyserver.ubuntu.com --recv-keys \"$GPG_KEY\" ) \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-loadable-sqlite-extensions --enable-shared \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && if [ ! -e /usr/local/bin/pip3 ] ; then : \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py ; fi \\\n && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n && pip install boto3 pipenv virtualenv awscli==1.* --no-cache-dir \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth\nCMD [\"python3\"]\n","originalDockerfileUglifiedHash":"705734b6f4fbca2fff868ebe56089120","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c7fced02e1465e9d650e59a10134a045f22ae9d0.dockerfile"}