{"seed":1954225996,"processedDockerfileHash":"ee80dd03b52b9c39f5f88487c38192c6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add"],"processedDockerfile":"FROM debian:stretch\nMAINTAINER support@openremote.io\n#   Install utilities\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=1.4.11 gnupg2=2.1.18-8~deb9u4 software-properties-common=0.96.20.2-1+deb9u1 procps=2:3.3.12-3+deb9u1 ca-certificates=20200601~deb9u2 curl=7.52.1-5+deb9u16 wget=1.18-5+deb9u3 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\n#   do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe\nRUN ln -svT \"/usr/lib/jvm/java-8-openjdk-$( dpkg --print-architecture ;)\" /docker-java-home\nENV JAVA_HOME=\"/docker-java-home\"\nRUN set -ex ; if [ ! -d /usr/share/man/man1 ] ; then mkdir -p /usr/share/man/man1 ; fi ; apt-get update ; apt-get install --no-install-recommends openjdk-8-jdk=8u332-ga-1~deb9u1 ca-certificates-java=20170929~deb9u3 -y ; rm -rf /var/lib/apt/lists/* ; [ \"$( readlink -f \"$JAVA_HOME\" ;)\" = \"$( docker-java-home ;)\" ] ; update-alternatives --get-selections | awk -v home=\"$( readlink -f \"$JAVA_HOME\" ;)\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }' ; update-alternatives --query java | grep -q 'Status: manual'\n#   Run postinst because it might not happen on install\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#   Add git commit label must be specified at build time using --build-arg GIT_COMMIT=dadadadadad\nARG GIT_COMMIT=unknown\nLABEL git-commit=\"$GIT_COMMIT\"\n#  ########### EDITS ABOVE THIS LINE SHOULD BE DONE IN ALL DOCKERFILES! ################\n#   Install dependencies for JBoss AS\nRUN apt-get update \\\n && apt-get install --no-install-recommends jq=1.5+dfsg-1.3 xmlstarlet=1.6.1-2 libsaxon-java=1:6.5.5-10 unzip=6.0-21+deb9u2 bsdtar=3.2.2-2+deb9u3 bzip2=1.0.6-8.1 xz-utils=5.2.2-1.2+deb9u1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Create a user and group used to launch processes\n#   The user ID 1000 is the default for the first \"regular\" user on Fedora/RHEL,\n#   so there is a high chance that this ID will be equal to the current user\n#   making it easier to use volumes (no permission issues)\nRUN groupadd -r jboss -g 1000 \\\n && useradd -u 1000 -r -g jboss -m -d /opt/jboss -s /sbin/nologin -c \"JBoss user\" jboss \\\n && chmod 755 /opt/jboss\n#   Set the working directory to jboss' user home directory\nWORKDIR /opt/jboss\nCOPY docker-entrypoint.sh /opt/jboss/\nRUN chmod +x /opt/jboss/docker-entrypoint.sh\nENV JBOSS_HOME=\"/opt/jboss/keycloak\"\n#   Switch to jboss user\nUSER jboss\nENV KEYCLOAK_VERSION=\"2.5.5.Final\"\nENV POSTGRESQL_DRIVER_VERSION=\"42.1.4\"\n#   Enables signals getting passed from startup script to JVM\n#   ensuring clean shutdown when container is stopped.\nENV LAUNCH_JBOSS_IN_BACKGROUND=\"1\"\nRUN curl -L https://downloads.jboss.org/keycloak/$KEYCLOAK_VERSION/keycloak-$KEYCLOAK_VERSION.tar.gz | tar zx \\\n && mv /opt/jboss/keycloak-$KEYCLOAK_VERSION $JBOSS_HOME\nCOPY setLogLevel.xsl /opt/jboss/keycloak/\nRUN java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/setLogLevel.xsl\nCOPY changeDatabase.xsl /opt/jboss/keycloak/\nRUN java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/changeDatabase.xsl \\\n && java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone-ha.xml /opt/jboss/keycloak/standalone/configuration/standalone-ha.xml /opt/jboss/keycloak/changeDatabase.xsl \\\n && rm /opt/jboss/keycloak/changeDatabase.xsl\nRUN mkdir -p /opt/jboss/keycloak/modules/system/layers/base/org/postgresql/jdbc/main \\\n && curl -o /opt/jboss/keycloak/modules/system/layers/base/org/postgresql/jdbc/main/postgresql-jdbc.jar http://repo1.maven.org/maven2/org/postgresql/postgresql/${POSTGRESQL_DRIVER_VERSION}/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar 2> /dev/null\nCOPY module.xml /opt/jboss/keycloak/modules/system/layers/base/org/postgresql/jdbc/main/\nCOPY setProxyForwarding.xsl /opt/jboss/keycloak/\nRUN java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/setProxyForwarding.xsl\nRUN rm /opt/jboss/keycloak/*.xsl\nHEALTHCHECK --interval=3s --timeout=3s --start-period=2s --retries=30 CMD curl --fail --silent http://localhost:8080/auth || exit 1\nEXPOSE 8080/tcp\nENTRYPOINT [\"/opt/jboss/docker-entrypoint.sh\"]\nCMD [\"-b\", \"0.0.0.0\"]\n","originalDockerfile":"FROM debian:stretch\nMAINTAINER support@openremote.io\n#  Install utilities\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https gnupg2 software-properties-common procps ca-certificates curl wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#  add a simple script that can auto-detect the appropriate JAVA_HOME value\n#  based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\n#  do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe\nRUN ln -svT \"/usr/lib/jvm/java-8-openjdk-$( dpkg --print-architecture ;)\" /docker-java-home\nENV JAVA_HOME=\"/docker-java-home\"\nRUN set -ex ; if [ ! -d /usr/share/man/man1 ] ; then mkdir -p /usr/share/man/man1 ; fi ; apt-get update ; apt-get install openjdk-8-jdk ca-certificates-java -y ; rm -rf /var/lib/apt/lists/* ; [ \"$( readlink -f \"$JAVA_HOME\" ;)\" = \"$( docker-java-home ;)\" ] ; update-alternatives --get-selections | awk -v home=\"$( readlink -f \"$JAVA_HOME\" ;)\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }' ; update-alternatives --query java | grep -q 'Status: manual'\n#  Run postinst because it might not happen on install\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#  Add git commit label must be specified at build time using --build-arg GIT_COMMIT=dadadadadad\nARG GIT_COMMIT=unknown\nLABEL git-commit=\"$GIT_COMMIT\"\n# ########### EDITS ABOVE THIS LINE SHOULD BE DONE IN ALL DOCKERFILES! ################\n#  Install dependencies for JBoss AS\nRUN apt-get update \\\n && apt-get install --no-install-recommends jq xmlstarlet libsaxon-java unzip bsdtar bzip2 xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Create a user and group used to launch processes\n#  The user ID 1000 is the default for the first \"regular\" user on Fedora/RHEL,\n#  so there is a high chance that this ID will be equal to the current user\n#  making it easier to use volumes (no permission issues)\nRUN groupadd -r jboss -g 1000 \\\n && useradd -u 1000 -r -g jboss -m -d /opt/jboss -s /sbin/nologin -c \"JBoss user\" jboss \\\n && chmod 755 /opt/jboss\n#  Set the working directory to jboss' user home directory\nWORKDIR /opt/jboss\nADD docker-entrypoint.sh /opt/jboss/\nRUN chmod +x /opt/jboss/docker-entrypoint.sh\nENV JBOSS_HOME=\"/opt/jboss/keycloak\"\n#  Switch to jboss user\nUSER jboss\nENV KEYCLOAK_VERSION=\"2.5.5.Final\"\nENV POSTGRESQL_DRIVER_VERSION=\"42.1.4\"\n#  Enables signals getting passed from startup script to JVM\n#  ensuring clean shutdown when container is stopped.\nENV LAUNCH_JBOSS_IN_BACKGROUND=\"1\"\nRUN curl -L https://downloads.jboss.org/keycloak/$KEYCLOAK_VERSION/keycloak-$KEYCLOAK_VERSION.tar.gz | tar zx \\\n && mv /opt/jboss/keycloak-$KEYCLOAK_VERSION $JBOSS_HOME\nADD setLogLevel.xsl /opt/jboss/keycloak/\nRUN java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/setLogLevel.xsl\nADD changeDatabase.xsl /opt/jboss/keycloak/\nRUN java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/changeDatabase.xsl \\\n && java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone-ha.xml /opt/jboss/keycloak/standalone/configuration/standalone-ha.xml /opt/jboss/keycloak/changeDatabase.xsl \\\n && rm /opt/jboss/keycloak/changeDatabase.xsl\nRUN mkdir -p /opt/jboss/keycloak/modules/system/layers/base/org/postgresql/jdbc/main \\\n && curl -o /opt/jboss/keycloak/modules/system/layers/base/org/postgresql/jdbc/main/postgresql-jdbc.jar http://repo1.maven.org/maven2/org/postgresql/postgresql/${POSTGRESQL_DRIVER_VERSION}/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar 2> /dev/null\nADD module.xml /opt/jboss/keycloak/modules/system/layers/base/org/postgresql/jdbc/main/\nADD setProxyForwarding.xsl /opt/jboss/keycloak/\nRUN java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/setProxyForwarding.xsl\nRUN rm /opt/jboss/keycloak/*.xsl\nHEALTHCHECK --interval=3s --timeout=3s --start-period=2s --retries=30 CMD curl --fail --silent http://localhost:8080/auth || exit 1\nEXPOSE 8080/tcp\nENTRYPOINT [\"/opt/jboss/docker-entrypoint.sh\"]\nCMD [\"-b\", \"0.0.0.0\"]\n","injectedSmells":[],"originalDockerfileHash":"008fe42c28b5879cd542d31e747b1f4c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch\nMAINTAINER support@openremote.io\n#   Install utilities\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https gnupg2 software-properties-common procps ca-certificates curl wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\n#   do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe\nRUN ln -svT \"/usr/lib/jvm/java-8-openjdk-$( dpkg --print-architecture ;)\" /docker-java-home\nENV JAVA_HOME=\"/docker-java-home\"\nRUN set -ex ; if [ ! -d /usr/share/man/man1 ] ; then mkdir -p /usr/share/man/man1 ; fi ; apt-get update ; apt-get install openjdk-8-jdk ca-certificates-java -y ; rm -rf /var/lib/apt/lists/* ; [ \"$( readlink -f \"$JAVA_HOME\" ;)\" = \"$( docker-java-home ;)\" ] ; update-alternatives --get-selections | awk -v home=\"$( readlink -f \"$JAVA_HOME\" ;)\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }' ; update-alternatives --query java | grep -q 'Status: manual'\n#   Run postinst because it might not happen on install\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#   Add git commit label must be specified at build time using --build-arg GIT_COMMIT=dadadadadad\nARG GIT_COMMIT=unknown\nLABEL git-commit=\"$GIT_COMMIT\"\n#  ########### EDITS ABOVE THIS LINE SHOULD BE DONE IN ALL DOCKERFILES! ################\n#   Install dependencies for JBoss AS\nRUN apt-get update \\\n && apt-get install --no-install-recommends jq xmlstarlet libsaxon-java unzip bsdtar bzip2 xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Create a user and group used to launch processes\n#   The user ID 1000 is the default for the first \"regular\" user on Fedora/RHEL,\n#   so there is a high chance that this ID will be equal to the current user\n#   making it easier to use volumes (no permission issues)\nRUN groupadd -r jboss -g 1000 \\\n && useradd -u 1000 -r -g jboss -m -d /opt/jboss -s /sbin/nologin -c \"JBoss user\" jboss \\\n && chmod 755 /opt/jboss\n#   Set the working directory to jboss' user home directory\nWORKDIR /opt/jboss\nADD docker-entrypoint.sh /opt/jboss/\nRUN chmod +x /opt/jboss/docker-entrypoint.sh\nENV JBOSS_HOME=\"/opt/jboss/keycloak\"\n#   Switch to jboss user\nUSER jboss\nENV KEYCLOAK_VERSION=\"2.5.5.Final\"\nENV POSTGRESQL_DRIVER_VERSION=\"42.1.4\"\n#   Enables signals getting passed from startup script to JVM\n#   ensuring clean shutdown when container is stopped.\nENV LAUNCH_JBOSS_IN_BACKGROUND=\"1\"\nRUN curl -L https://downloads.jboss.org/keycloak/$KEYCLOAK_VERSION/keycloak-$KEYCLOAK_VERSION.tar.gz | tar zx \\\n && mv /opt/jboss/keycloak-$KEYCLOAK_VERSION $JBOSS_HOME\nADD setLogLevel.xsl /opt/jboss/keycloak/\nRUN java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/setLogLevel.xsl\nADD changeDatabase.xsl /opt/jboss/keycloak/\nRUN java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/changeDatabase.xsl \\\n && java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone-ha.xml /opt/jboss/keycloak/standalone/configuration/standalone-ha.xml /opt/jboss/keycloak/changeDatabase.xsl \\\n && rm /opt/jboss/keycloak/changeDatabase.xsl\nRUN mkdir -p /opt/jboss/keycloak/modules/system/layers/base/org/postgresql/jdbc/main \\\n && curl -o /opt/jboss/keycloak/modules/system/layers/base/org/postgresql/jdbc/main/postgresql-jdbc.jar http://repo1.maven.org/maven2/org/postgresql/postgresql/${POSTGRESQL_DRIVER_VERSION}/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar 2> /dev/null\nADD module.xml /opt/jboss/keycloak/modules/system/layers/base/org/postgresql/jdbc/main/\nADD setProxyForwarding.xsl /opt/jboss/keycloak/\nRUN java -jar /usr/share/java/saxon.jar -o /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/standalone/configuration/standalone.xml /opt/jboss/keycloak/setProxyForwarding.xsl\nRUN rm /opt/jboss/keycloak/*.xsl\nHEALTHCHECK --interval=3s --timeout=3s --start-period=2s --retries=30 CMD curl --fail --silent http://localhost:8080/auth || exit 1\nEXPOSE 8080/tcp\nENTRYPOINT [\"/opt/jboss/docker-entrypoint.sh\"]\nCMD [\"-b\", \"0.0.0.0\"]\n","originalDockerfileUglifiedHash":"29b895b919888888a64fc2894360840a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/41a616179d4d0e3a6439f0f33e61196725709a3e.dockerfile"}