{"seed":3936232926,"processedDockerfileHash":"8ae7c46466e11db467cd7520d336e549","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER lyysdy@foxmail.com\nUSER root\n#   install dev tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 tar=1.27.1-1ubuntu0.1 g++-4.8=4.8.4-2ubuntu1~14.04.4 gcc=4:4.8.2-1ubuntu6 libtool=2.4.2-1.7ubuntu1 pkg-config=0.26-1ubuntu4 autoconf=2.69-6 openssh-server=1:6.6p1-2ubuntu2.13 openssh-client=1:6.6p1-2ubuntu2.13 rsync=3.1.0-2ubuntu0.4 build-essential=11.6ubuntu6 automake=1:1.14.1-2ubuntu1 vim=2:7.4.052-1ubuntu3.1 gdb=7.7.1-0ubuntu5~14.04.3 git=1:1.9.1-1ubuntu0.10 libopenmpi-dev=1.6.5-8 openmpi-bin=1.6.5-8 cmake=2.8.12.2-0ubuntu3 gfortran=4:4.8.2-1ubuntu6 python-nose=1.3.1-2 python-numpy=1:1.8.2-0ubuntu0.1 python-scipy=0.13.3-1build1 python-dev=2.7.5-5ubuntu3 python-pip=1.5.4-1ubuntu4 libopenblas-dev=0.2.8-6ubuntu1 software-properties-common=0.92.37.8 libssl-dev=1.0.1f-1ubuntu2.27 libzmq3-dev=4.0.4+dfsg-2ubuntu0.1 python-zmq=14.0.1-1build2 -qqy\n#   java\nRUN mkdir -p /usr/local/java/default \\\n && curl -Ls 'http://download.oracle.com/otn-pub/java/jdk/8u65-b17/jdk-8u65-linux-x64.tar.gz' -H 'Cookie: oraclelicense=accept-securebackup-cookie' | tar --strip-components=1 -xz -C /usr/local/java/default/\nENV JAVA_HOME=\"/usr/local/java/default/ \"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\n#   hadoop\nRUN wget -cq -t 0 http://www.eu.apache.org/dist/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\nRUN tar -xz -C /usr/local/ -f hadoop-2.6.0.tar.gz \\\n && rm hadoop-2.6.0.tar.gz \\\n && cd /usr/local \\\n && ln -s ./hadoop-2.6.0 hadoop \\\n && cp -r /usr/local/hadoop/include/* /usr/local/include\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/local/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n#   fixing the libhadoop.so like a boss\nRUN rm /usr/local/hadoop/lib/native/* \\\n && curl -Ls http://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.6.0.tar | tar -x -C /usr/local/hadoop/lib/native/\n#   install Theano-dev\nRUN mkdir -p /theano \\\n && cd /theano \\\n && git clone git://github.com/Theano/Theano.git \\\n && cd /theano/Theano \\\n && python setup.py develop\n#   Install Jupyter Notebook for iTorch\nRUN pip install notebook==6.5.4 ipywidgets==8.0.6\n#   Run Torch7 installation scripts\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && ./install.sh\n#   Export environment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\"\nENV LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\"\nENV PATH=\"/root/torch/install/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\"\nENV DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\nWORKDIR /dmtk\nRUN cd /dmtk \\\n && git clone https://github.com/Microsoft/multiverso.git \\\n && cd multiverso \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make \\\n && make install\n#   python tests\nRUN cd /dmtk/multiverso/binding/python \\\n && python setup.py install \\\n && nosetests\n#   lua tests\nRUN cd /dmtk/multiverso/binding/lua \\\n && make install \\\n && make test\n#   run cpp tests\nRUN cd /dmtk/multiverso/build \\\n && mpirun -np 4 ./Test/multiverso.test kv \\\n && mpirun -np 4 ./Test/multiverso.test array \\\n && mpirun -np 4 ./Test/multiverso.test net \\\n && mpirun -np 4 ./Test/multiverso.test ip \\\n && mpirun -np 4 ./Test/multiverso.test checkpoint \\\n && mpirun -np 4 ./Test/multiverso.test restore \\\n && mpirun -np 4 ./Test/multiverso.test allreduce\n#   - mpirun -np 4 ./Test/multiverso.test matrix  # TODO the matrix test won't stop\n#   - mpirun -np 4 ./Test/multiverso.test TestSparsePerf # TODO TestSparsePerf takes too much time\n#   - mpirun -np 4 ./Test/multiverso.test TestDensePerf # TODO TestDensePerf takes too much time\n#   clean unnessary packages\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER lyysdy@foxmail.com\nUSER root\n#  install dev tools\nRUN apt-get update \\\n && apt-get install curl tar g++-4.8 gcc libtool pkg-config autoconf openssh-server openssh-client rsync build-essential automake vim gdb git libopenmpi-dev openmpi-bin cmake gfortran python-nose python-numpy python-scipy python-dev python-pip libopenblas-dev software-properties-common libssl-dev libzmq3-dev python-zmq -qqy\n#  java\nRUN mkdir -p /usr/local/java/default \\\n && curl -Ls 'http://download.oracle.com/otn-pub/java/jdk/8u65-b17/jdk-8u65-linux-x64.tar.gz' -H 'Cookie: oraclelicense=accept-securebackup-cookie' | tar --strip-components=1 -xz -C /usr/local/java/default/\nENV JAVA_HOME=\"/usr/local/java/default/ \"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\n#  hadoop\nRUN wget -cq -t 0 http://www.eu.apache.org/dist/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\nRUN tar -xz -C /usr/local/ -f hadoop-2.6.0.tar.gz \\\n && rm hadoop-2.6.0.tar.gz \\\n && cd /usr/local \\\n && ln -s ./hadoop-2.6.0 hadoop \\\n && cp -r /usr/local/hadoop/include/* /usr/local/include\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/local/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n#  fixing the libhadoop.so like a boss\nRUN rm /usr/local/hadoop/lib/native/* \\\n && curl -Ls http://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.6.0.tar | tar -x -C /usr/local/hadoop/lib/native/\n#  install Theano-dev\nRUN mkdir -p /theano \\\n && cd /theano \\\n && git clone git://github.com/Theano/Theano.git \\\n && cd /theano/Theano \\\n && python setup.py develop\n#  Install Jupyter Notebook for iTorch\nRUN pip install notebook ipywidgets\n#  Run Torch7 installation scripts\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && ./install.sh\n#  Export environment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\"\nENV LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\"\nENV PATH=\"/root/torch/install/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\"\nENV DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\nWORKDIR /dmtk\nRUN cd /dmtk \\\n && git clone https://github.com/Microsoft/multiverso.git \\\n && cd multiverso \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make \\\n && make install\n#  python tests\nRUN cd /dmtk/multiverso/binding/python \\\n && python setup.py install \\\n && nosetests\n#  lua tests\nRUN cd /dmtk/multiverso/binding/lua \\\n && make install \\\n && make test\n#  run cpp tests\nRUN cd /dmtk/multiverso/build \\\n && mpirun -np 4 ./Test/multiverso.test kv \\\n && mpirun -np 4 ./Test/multiverso.test array \\\n && mpirun -np 4 ./Test/multiverso.test net \\\n && mpirun -np 4 ./Test/multiverso.test ip \\\n && mpirun -np 4 ./Test/multiverso.test checkpoint \\\n && mpirun -np 4 ./Test/multiverso.test restore \\\n && mpirun -np 4 ./Test/multiverso.test allreduce\n#  - mpirun -np 4 ./Test/multiverso.test matrix  # TODO the matrix test won't stop\n#  - mpirun -np 4 ./Test/multiverso.test TestSparsePerf # TODO TestSparsePerf takes too much time\n#  - mpirun -np 4 ./Test/multiverso.test TestDensePerf # TODO TestDensePerf takes too much time\n#  clean unnessary packages\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n","injectedSmells":[],"originalDockerfileHash":"6b2056d4b5b74fe3f927b04fea9e25de","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER lyysdy@foxmail.com\nUSER root\n#   install dev tools\nRUN apt-get update \\\n && apt-get install curl tar g++-4.8 gcc libtool pkg-config autoconf openssh-server openssh-client rsync build-essential automake vim gdb git libopenmpi-dev openmpi-bin cmake gfortran python-nose python-numpy python-scipy python-dev python-pip libopenblas-dev software-properties-common libssl-dev libzmq3-dev python-zmq -qqy\n#   java\nRUN mkdir -p /usr/local/java/default \\\n && curl -Ls 'http://download.oracle.com/otn-pub/java/jdk/8u65-b17/jdk-8u65-linux-x64.tar.gz' -H 'Cookie: oraclelicense=accept-securebackup-cookie' | tar --strip-components=1 -xz -C /usr/local/java/default/\nENV JAVA_HOME=\"/usr/local/java/default/ \"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\n#   hadoop\nRUN wget -cq -t 0 http://www.eu.apache.org/dist/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\nRUN tar -xz -C /usr/local/ -f hadoop-2.6.0.tar.gz \\\n && rm hadoop-2.6.0.tar.gz \\\n && cd /usr/local \\\n && ln -s ./hadoop-2.6.0 hadoop \\\n && cp -r /usr/local/hadoop/include/* /usr/local/include\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/local/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n#   fixing the libhadoop.so like a boss\nRUN rm /usr/local/hadoop/lib/native/* \\\n && curl -Ls http://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.6.0.tar | tar -x -C /usr/local/hadoop/lib/native/\n#   install Theano-dev\nRUN mkdir -p /theano \\\n && cd /theano \\\n && git clone git://github.com/Theano/Theano.git \\\n && cd /theano/Theano \\\n && python setup.py develop\n#   Install Jupyter Notebook for iTorch\nRUN pip install notebook ipywidgets\n#   Run Torch7 installation scripts\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && ./install.sh\n#   Export environment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\"\nENV LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\"\nENV PATH=\"/root/torch/install/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\"\nENV DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\nWORKDIR /dmtk\nRUN cd /dmtk \\\n && git clone https://github.com/Microsoft/multiverso.git \\\n && cd multiverso \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make \\\n && make install\n#   python tests\nRUN cd /dmtk/multiverso/binding/python \\\n && python setup.py install \\\n && nosetests\n#   lua tests\nRUN cd /dmtk/multiverso/binding/lua \\\n && make install \\\n && make test\n#   run cpp tests\nRUN cd /dmtk/multiverso/build \\\n && mpirun -np 4 ./Test/multiverso.test kv \\\n && mpirun -np 4 ./Test/multiverso.test array \\\n && mpirun -np 4 ./Test/multiverso.test net \\\n && mpirun -np 4 ./Test/multiverso.test ip \\\n && mpirun -np 4 ./Test/multiverso.test checkpoint \\\n && mpirun -np 4 ./Test/multiverso.test restore \\\n && mpirun -np 4 ./Test/multiverso.test allreduce\n#   - mpirun -np 4 ./Test/multiverso.test matrix  # TODO the matrix test won't stop\n#   - mpirun -np 4 ./Test/multiverso.test TestSparsePerf # TODO TestSparsePerf takes too much time\n#   - mpirun -np 4 ./Test/multiverso.test TestDensePerf # TODO TestDensePerf takes too much time\n#   clean unnessary packages\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n","originalDockerfileUglifiedHash":"ba498dcd33b501110e4599c5aad850ef","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7e7399df35e96a50b6eadc759399125459cdeb69.dockerfile"}