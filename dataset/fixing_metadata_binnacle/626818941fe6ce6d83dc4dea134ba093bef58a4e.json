{"seed":715064617,"processedDockerfileHash":"0755c4ec9197dba58415318acb106328","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\nMAINTAINER Jonathan Gautheron \"jgautheron@neverblend.in\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Define versions\nENV OPENRESTY_VERSION=\"1.9.7.2\"\nENV PAGESPEED_VERSION=\"1.10.33.5-beta\"\nENV PAGESPEED_PSOL_VERSION=\"1.10.33.5\"\nENV OPENSSL_VERSION=\"1.0.2f\"\nENV PCRE_VERSION=\"8.38\"\nENV ZLIB_VERSION=\"1.2.8\"\n#   Default environment\n#   Can be overridden at runtime using -e ENVIRONMENT=...\nENV ENVIRONMENT=\"development\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends build-essential wget ca-certificates -yqq\nRUN (wget -qO - https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget --no-check-certificate -qO - https://dl.google.com/dl/page-speed/psol/${PAGESPEED_PSOL_VERSION}.tar.gz | tar zxf - -C /tmp/ngx_pagespeed-${PAGESPEED_VERSION}/ ) \\\n && (wget -qO - http://openresty.org/download/ngx_openresty-${OPENRESTY_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget -qO - https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget -qO - ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${PCRE_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget -qO - http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz | tar zxf - -C /tmp )\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VERSION} \\\n && ./configure --prefix=/usr/share/nginx --user=www-data --group=www-data --with-luajit --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/lib/nginx/proxy --lock-path=/var/lock/nginx.lock --pid-path=/var/run/nginx.pid --with-ipv6 --with-http_ssl_module --with-http_v2_module --with-pcre=/tmp/pcre-${PCRE_VERSION} --with-zlib=/tmp/zlib-${ZLIB_VERSION} --with-openssl=/tmp/openssl-${OPENSSL_VERSION} --with-md5=/tmp/openssl-${OPENSSL_VERSION} --with-md5-asm --with-sha1=/tmp/openssl-${OPENSSL_VERSION} --with-sha1-asm --with-pcre-jit --with-http_stub_status_module --with-http_secure_link_module --with-http_gzip_static_module --with-http_gunzip_module --without-http_uwsgi_module --without-http_scgi_module --without-http_memc_module --without-http_memcached_module --without-http_coolkit_module --without-http_form_input_module --without-http_rds_json_module --without-http_rds_csv_module --without-http_empty_gif_module --without-http_browser_module --without-http_userid_module --without-http_autoindex_module --without-http_geo_module --without-http_split_clients_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --without-http_encrypted_session_module --without-lua_resty_memcached --add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION} \\\n && make \\\n && make install\n#   Cleanup\nRUN rm -Rf /tmp/* \\\n && apt-get purge -yqq build-essential wget ca-certificates \\\n && apt-get autoremove -yqq \\\n && apt-get clean all\n#   Create folders required by nginx & set proper permissions\nRUN mkdir /var/lib/nginx \\\n && chown -R www-data:www-data /var/lib/nginx \\\n && mkdir /var/lib/nginx/proxy \\\n && mkdir /var/lib/nginx/body \\\n && mkdir /var/lib/nginx/fastcgi \\\n && chmod 777 /var/log/nginx\n#   Add full write permissions to the pagespeed cache folder\nRUN mkdir /var/ngx_pagespeed_cache \\\n && chmod 777 /var/ngx_pagespeed_cache\n#   Copy our custom configuration\nCOPY nginx /etc/nginx/\n#   Define mountable directories.\nVOLUME [\"/etc/nginx/sites-enabled\", \"/etc/nginx/certs\", \"/etc/nginx/conf\", \"/var/www\"]\n#   Define working directory.\nWORKDIR /etc/nginx\n#   Run nginx\nCMD [\"nginx\"]\nEXPOSE 80/tcp 443/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nMAINTAINER Jonathan Gautheron \"jgautheron@neverblend.in\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Define versions\nENV OPENRESTY_VERSION=\"1.9.7.2\"\nENV PAGESPEED_VERSION=\"1.10.33.5-beta\"\nENV PAGESPEED_PSOL_VERSION=\"1.10.33.5\"\nENV OPENSSL_VERSION=\"1.0.2f\"\nENV PCRE_VERSION=\"8.38\"\nENV ZLIB_VERSION=\"1.2.8\"\n#  Default environment\n#  Can be overridden at runtime using -e ENVIRONMENT=...\nENV ENVIRONMENT=\"development\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends build-essential wget ca-certificates -yqq\nRUN (wget -qO - https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget --no-check-certificate -qO - https://dl.google.com/dl/page-speed/psol/${PAGESPEED_PSOL_VERSION}.tar.gz | tar zxf - -C /tmp/ngx_pagespeed-${PAGESPEED_VERSION}/ ) \\\n && (wget -qO - http://openresty.org/download/ngx_openresty-${OPENRESTY_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget -qO - https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget -qO - ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${PCRE_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget -qO - http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz | tar zxf - -C /tmp )\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VERSION} \\\n && ./configure --prefix=/usr/share/nginx --user=www-data --group=www-data --with-luajit --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/lib/nginx/proxy --lock-path=/var/lock/nginx.lock --pid-path=/var/run/nginx.pid --with-ipv6 --with-http_ssl_module --with-http_v2_module --with-pcre=/tmp/pcre-${PCRE_VERSION} --with-zlib=/tmp/zlib-${ZLIB_VERSION} --with-openssl=/tmp/openssl-${OPENSSL_VERSION} --with-md5=/tmp/openssl-${OPENSSL_VERSION} --with-md5-asm --with-sha1=/tmp/openssl-${OPENSSL_VERSION} --with-sha1-asm --with-pcre-jit --with-http_stub_status_module --with-http_secure_link_module --with-http_gzip_static_module --with-http_gunzip_module --without-http_uwsgi_module --without-http_scgi_module --without-http_memc_module --without-http_memcached_module --without-http_coolkit_module --without-http_form_input_module --without-http_rds_json_module --without-http_rds_csv_module --without-http_empty_gif_module --without-http_browser_module --without-http_userid_module --without-http_autoindex_module --without-http_geo_module --without-http_split_clients_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --without-http_encrypted_session_module --without-lua_resty_memcached --add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION} \\\n && make \\\n && make install\n#  Cleanup\nRUN rm -Rf /tmp/* \\\n && apt-get purge -yqq build-essential wget ca-certificates \\\n && apt-get autoremove -yqq \\\n && apt-get clean all\n#  Create folders required by nginx & set proper permissions\nRUN mkdir /var/lib/nginx \\\n && chown -R www-data:www-data /var/lib/nginx \\\n && mkdir /var/lib/nginx/proxy \\\n && mkdir /var/lib/nginx/body \\\n && mkdir /var/lib/nginx/fastcgi \\\n && chmod 777 /var/log/nginx\n#  Add full write permissions to the pagespeed cache folder\nRUN mkdir /var/ngx_pagespeed_cache \\\n && chmod 777 /var/ngx_pagespeed_cache\n#  Copy our custom configuration\nADD nginx /etc/nginx/\n#  Define mountable directories.\nVOLUME [\"/etc/nginx/sites-enabled\", \"/etc/nginx/certs\", \"/etc/nginx/conf\", \"/var/www\"]\n#  Define working directory.\nWORKDIR /etc/nginx\n#  Run nginx\nCMD [\"nginx\"]\nEXPOSE 80/tcp 443/tcp\n","injectedSmells":[],"originalDockerfileHash":"9098efcab94be151a37433d22a9f0529","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nMAINTAINER Jonathan Gautheron \"jgautheron@neverblend.in\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Define versions\nENV OPENRESTY_VERSION=\"1.9.7.2\"\nENV PAGESPEED_VERSION=\"1.10.33.5-beta\"\nENV PAGESPEED_PSOL_VERSION=\"1.10.33.5\"\nENV OPENSSL_VERSION=\"1.0.2f\"\nENV PCRE_VERSION=\"8.38\"\nENV ZLIB_VERSION=\"1.2.8\"\n#   Default environment\n#   Can be overridden at runtime using -e ENVIRONMENT=...\nENV ENVIRONMENT=\"development\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends build-essential wget ca-certificates -yqq\nRUN (wget -qO - https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget --no-check-certificate -qO - https://dl.google.com/dl/page-speed/psol/${PAGESPEED_PSOL_VERSION}.tar.gz | tar zxf - -C /tmp/ngx_pagespeed-${PAGESPEED_VERSION}/ ) \\\n && (wget -qO - http://openresty.org/download/ngx_openresty-${OPENRESTY_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget -qO - https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget -qO - ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${PCRE_VERSION}.tar.gz | tar zxf - -C /tmp ) \\\n && (wget -qO - http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz | tar zxf - -C /tmp )\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VERSION} \\\n && ./configure --prefix=/usr/share/nginx --user=www-data --group=www-data --with-luajit --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/lib/nginx/proxy --lock-path=/var/lock/nginx.lock --pid-path=/var/run/nginx.pid --with-ipv6 --with-http_ssl_module --with-http_v2_module --with-pcre=/tmp/pcre-${PCRE_VERSION} --with-zlib=/tmp/zlib-${ZLIB_VERSION} --with-openssl=/tmp/openssl-${OPENSSL_VERSION} --with-md5=/tmp/openssl-${OPENSSL_VERSION} --with-md5-asm --with-sha1=/tmp/openssl-${OPENSSL_VERSION} --with-sha1-asm --with-pcre-jit --with-http_stub_status_module --with-http_secure_link_module --with-http_gzip_static_module --with-http_gunzip_module --without-http_uwsgi_module --without-http_scgi_module --without-http_memc_module --without-http_memcached_module --without-http_coolkit_module --without-http_form_input_module --without-http_rds_json_module --without-http_rds_csv_module --without-http_empty_gif_module --without-http_browser_module --without-http_userid_module --without-http_autoindex_module --without-http_geo_module --without-http_split_clients_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --without-http_encrypted_session_module --without-lua_resty_memcached --add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION} \\\n && make \\\n && make install\n#   Cleanup\nRUN rm -Rf /tmp/* \\\n && apt-get purge -yqq build-essential wget ca-certificates \\\n && apt-get autoremove -yqq \\\n && apt-get clean all\n#   Create folders required by nginx & set proper permissions\nRUN mkdir /var/lib/nginx \\\n && chown -R www-data:www-data /var/lib/nginx \\\n && mkdir /var/lib/nginx/proxy \\\n && mkdir /var/lib/nginx/body \\\n && mkdir /var/lib/nginx/fastcgi \\\n && chmod 777 /var/log/nginx\n#   Add full write permissions to the pagespeed cache folder\nRUN mkdir /var/ngx_pagespeed_cache \\\n && chmod 777 /var/ngx_pagespeed_cache\n#   Copy our custom configuration\nADD nginx /etc/nginx/\n#   Define mountable directories.\nVOLUME [\"/etc/nginx/sites-enabled\", \"/etc/nginx/certs\", \"/etc/nginx/conf\", \"/var/www\"]\n#   Define working directory.\nWORKDIR /etc/nginx\n#   Run nginx\nCMD [\"nginx\"]\nEXPOSE 80/tcp 443/tcp\n","originalDockerfileUglifiedHash":"fde464fe104c3095b0282e3a9ce0ba77","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/626818941fe6ce6d83dc4dea134ba093bef58a4e.dockerfile"}