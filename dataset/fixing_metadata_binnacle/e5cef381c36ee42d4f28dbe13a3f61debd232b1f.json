{"seed":1958616743,"processedDockerfileHash":"d22891becf930fb95bb898ea8b0f7b14","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck"],"processedDockerfile":"#  ##\n#  ## DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#  ##\nFROM openjdk:10-ea-46-jdk-sid\n#   make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   man directory is missing in some base images\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install --no-install-recommends git mercurial xvfb locales sudo openssh-client ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget -y\n#   Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#   install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   Install Docker\n#   Docker.com returns the URL of the latest binary when you hit a directory listing\n#   We curl this URL and `grep` the version out.\n#   The output looks like this:\n#  >    # To install, run the following commands as root:\n#  >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#  >\n#  >    # Then start docker in daemon mode:\n#  >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\n#   docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n && chmod +x /usr/bin/docker-compose \\\n && docker-compose version\n#   install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n && dockerize --version\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#   BEGIN IMAGE CUSTOMIZATIONS\n#   cacerts from OpenJDK 9-slim to workaround http://bugs.java.com/view_bug.do?bug_id=8189357\n#   AND https://github.com/docker-library/openjdk/issues/145\n#\n#   Created by running:\n#   docker run --rm openjdk:9-slim cat /etc/ssl/certs/java/cacerts | #   aws s3 cp - s3://circle-downloads/circleci-images/cache/linux-amd64/openjdk-9-slim-cacerts --acl public-read\nRUN if java -fullversion 2>&1 | grep -q '\"9.' ; then curl --silent --show-error --location --fail --retry 3 --output /etc/ssl/certs/java/cacerts https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/openjdk-9-slim-cacerts ; fi\n#   Install Maven Version: 3.5.3\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/apache-maven.tar.gz https://www.apache.org/dist/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.tar.gz \\\n && tar xf /tmp/apache-maven.tar.gz -C /opt/ \\\n && rm /tmp/apache-maven.tar.gz \\\n && ln -s /opt/apache-maven-* /opt/apache-maven \\\n && /opt/apache-maven/bin/mvn -version\n#   Install Ant Version: 1.10.3\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/apache-ant.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.3-bin.tar.gz \\\n && tar xf /tmp/apache-ant.tar.gz -C /opt/ \\\n && ln -s /opt/apache-ant-* /opt/apache-ant \\\n && rm -rf /tmp/apache-ant.tar.gz \\\n && /opt/apache-ant/bin/ant -version\nENV ANT_HOME=\"/opt/apache-ant\"\n#   Install Gradle Version: 4.7\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/gradle.zip https://services.gradle.org/distributions/gradle-4.7-bin.zip \\\n && unzip -d /opt /tmp/gradle.zip \\\n && rm /tmp/gradle.zip \\\n && ln -s /opt/gradle-* /opt/gradle \\\n && /opt/gradle/bin/gradle -version\n#   Install sbt from https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/sbt-latest.tgz\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/sbt.tgz https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/sbt-latest.tgz \\\n && tar -xzf /tmp/sbt.tgz -C /opt/ \\\n && rm /tmp/sbt.tgz \\\n && /opt/sbt/bin/sbt sbtVersion\n#   Install openjfx\nRUN apt-get install --no-install-recommends openjfx -y\n#   Update PATH for Java tools\nENV PATH=\"/opt/sbt/bin:/opt/apache-maven/bin:/opt/apache-ant/bin:/opt/gradle/bin:$PATH\"\n#   smoke test with path\nRUN mvn -version \\\n && ant -version \\\n && gradle -version \\\n && sbt sbtVersion\n#   END IMAGE CUSTOMIZATIONS\nUSER circleci\nCMD [\"/bin/sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##\n# ## DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n# ##\nFROM openjdk:10-ea-46-jdk-sid\n#  make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  man directory is missing in some base images\n#  https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install git mercurial xvfb locales sudo openssh-client ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget -y\n#  Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#  Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#  install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#  Install Docker\n#  Docker.com returns the URL of the latest binary when you hit a directory listing\n#  We curl this URL and `grep` the version out.\n#  The output looks like this:\n# >    # To install, run the following commands as root:\n# >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n# >\n# >    # Then start docker in daemon mode:\n# >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\n#  docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n && chmod +x /usr/bin/docker-compose \\\n && docker-compose version\n#  install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n && dockerize --version\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#  BEGIN IMAGE CUSTOMIZATIONS\n#  cacerts from OpenJDK 9-slim to workaround http://bugs.java.com/view_bug.do?bug_id=8189357\n#  AND https://github.com/docker-library/openjdk/issues/145\n#\n#  Created by running:\n#  docker run --rm openjdk:9-slim cat /etc/ssl/certs/java/cacerts | #   aws s3 cp - s3://circle-downloads/circleci-images/cache/linux-amd64/openjdk-9-slim-cacerts --acl public-read\nRUN if java -fullversion 2>&1 | grep -q '\"9.' ; then curl --silent --show-error --location --fail --retry 3 --output /etc/ssl/certs/java/cacerts https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/openjdk-9-slim-cacerts ; fi\n#  Install Maven Version: 3.5.3\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/apache-maven.tar.gz https://www.apache.org/dist/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.tar.gz \\\n && tar xf /tmp/apache-maven.tar.gz -C /opt/ \\\n && rm /tmp/apache-maven.tar.gz \\\n && ln -s /opt/apache-maven-* /opt/apache-maven \\\n && /opt/apache-maven/bin/mvn -version\n#  Install Ant Version: 1.10.3\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/apache-ant.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.3-bin.tar.gz \\\n && tar xf /tmp/apache-ant.tar.gz -C /opt/ \\\n && ln -s /opt/apache-ant-* /opt/apache-ant \\\n && rm -rf /tmp/apache-ant.tar.gz \\\n && /opt/apache-ant/bin/ant -version\nENV ANT_HOME=\"/opt/apache-ant\"\n#  Install Gradle Version: 4.7\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/gradle.zip https://services.gradle.org/distributions/gradle-4.7-bin.zip \\\n && unzip -d /opt /tmp/gradle.zip \\\n && rm /tmp/gradle.zip \\\n && ln -s /opt/gradle-* /opt/gradle \\\n && /opt/gradle/bin/gradle -version\n#  Install sbt from https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/sbt-latest.tgz\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/sbt.tgz https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/sbt-latest.tgz \\\n && tar -xzf /tmp/sbt.tgz -C /opt/ \\\n && rm /tmp/sbt.tgz \\\n && /opt/sbt/bin/sbt sbtVersion\n#  Install openjfx\nRUN apt-get install --no-install-recommends openjfx -y\n#  Update PATH for Java tools\nENV PATH=\"/opt/sbt/bin:/opt/apache-maven/bin:/opt/apache-ant/bin:/opt/gradle/bin:$PATH\"\n#  smoke test with path\nRUN mvn -version \\\n && ant -version \\\n && gradle -version \\\n && sbt sbtVersion\n#  END IMAGE CUSTOMIZATIONS\nUSER circleci\nCMD [\"/bin/sh\"]\n","injectedSmells":[],"originalDockerfileHash":"f8cce955e0e81479e14102f974be1ea7","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##\n#  ## DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#  ##\nFROM openjdk:10-ea-46-jdk-sid\n#   make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   man directory is missing in some base images\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install git mercurial xvfb locales sudo openssh-client ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget -y\n#   Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#   install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   Install Docker\n#   Docker.com returns the URL of the latest binary when you hit a directory listing\n#   We curl this URL and `grep` the version out.\n#   The output looks like this:\n#  >    # To install, run the following commands as root:\n#  >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#  >\n#  >    # Then start docker in daemon mode:\n#  >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\n#   docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n && chmod +x /usr/bin/docker-compose \\\n && docker-compose version\n#   install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n && dockerize --version\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#   BEGIN IMAGE CUSTOMIZATIONS\n#   cacerts from OpenJDK 9-slim to workaround http://bugs.java.com/view_bug.do?bug_id=8189357\n#   AND https://github.com/docker-library/openjdk/issues/145\n#\n#   Created by running:\n#   docker run --rm openjdk:9-slim cat /etc/ssl/certs/java/cacerts | #   aws s3 cp - s3://circle-downloads/circleci-images/cache/linux-amd64/openjdk-9-slim-cacerts --acl public-read\nRUN if java -fullversion 2>&1 | grep -q '\"9.' ; then curl --silent --show-error --location --fail --retry 3 --output /etc/ssl/certs/java/cacerts https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/openjdk-9-slim-cacerts ; fi\n#   Install Maven Version: 3.5.3\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/apache-maven.tar.gz https://www.apache.org/dist/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.tar.gz \\\n && tar xf /tmp/apache-maven.tar.gz -C /opt/ \\\n && rm /tmp/apache-maven.tar.gz \\\n && ln -s /opt/apache-maven-* /opt/apache-maven \\\n && /opt/apache-maven/bin/mvn -version\n#   Install Ant Version: 1.10.3\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/apache-ant.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.3-bin.tar.gz \\\n && tar xf /tmp/apache-ant.tar.gz -C /opt/ \\\n && ln -s /opt/apache-ant-* /opt/apache-ant \\\n && rm -rf /tmp/apache-ant.tar.gz \\\n && /opt/apache-ant/bin/ant -version\nENV ANT_HOME=\"/opt/apache-ant\"\n#   Install Gradle Version: 4.7\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/gradle.zip https://services.gradle.org/distributions/gradle-4.7-bin.zip \\\n && unzip -d /opt /tmp/gradle.zip \\\n && rm /tmp/gradle.zip \\\n && ln -s /opt/gradle-* /opt/gradle \\\n && /opt/gradle/bin/gradle -version\n#   Install sbt from https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/sbt-latest.tgz\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/sbt.tgz https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/sbt-latest.tgz \\\n && tar -xzf /tmp/sbt.tgz -C /opt/ \\\n && rm /tmp/sbt.tgz \\\n && /opt/sbt/bin/sbt sbtVersion\n#   Install openjfx\nRUN apt-get install --no-install-recommends openjfx -y\n#   Update PATH for Java tools\nENV PATH=\"/opt/sbt/bin:/opt/apache-maven/bin:/opt/apache-ant/bin:/opt/gradle/bin:$PATH\"\n#   smoke test with path\nRUN mvn -version \\\n && ant -version \\\n && gradle -version \\\n && sbt sbtVersion\n#   END IMAGE CUSTOMIZATIONS\nUSER circleci\nCMD [\"/bin/sh\"]\n","originalDockerfileUglifiedHash":"489d50d0e951047b87c3c76e4699d726","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e5cef381c36ee42d4f28dbe13a3f61debd232b1f.dockerfile"}