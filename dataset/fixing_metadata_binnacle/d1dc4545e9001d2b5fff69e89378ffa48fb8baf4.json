{"seed":2429672523,"processedDockerfileHash":"db33327c2abc4d1594d6e25df0d928a5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"#   Dockerfile for the TerraRef hyperspectral image conversion extractor\n#   August 17, 2016\nFROM ubuntu:14.04\nMAINTAINER Yan Y. Liu <yanliu@illinois.edu>\n#   install common libraries and python modules\nUSER root\nRUN :\nRUN apt-get upgrade -y -q\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 m4=1.4.17-2ubuntu1 swig=2.0.11-1ubuntu2 antlr=2.7.7+dfsg-5 libantlr-dev=2.7.7+dfsg-5 udunits-bin=2.2.0-1 libudunits2-dev=2.2.0-1 unzip=6.0-9ubuntu1.5 cmake=2.8.12.2-0ubuntu3 wget=1.15-1ubuntu1.14.04.5 git=1:1.9.1-1ubuntu0.10 libjpeg-dev=8c-2ubuntu8 libpng-dev libtiff-dev -y -q )\nRUN (apt-get update ;apt-get install --no-install-recommends python-dev=2.7.5-5ubuntu3 python-numpy=1:1.8.2-0ubuntu0.1 python-pip=1.5.4-1ubuntu4 python-virtualenv=1.11.4-1ubuntu1 -y -q )\n#   set up dirs for user installed software\nRUN useradd -m -s /bin/bash ubuntu\nRUN mkdir /srv/downloads \\\n && chown -R ubuntu: /srv/downloads \\\n && mkdir /srv/sw \\\n && chown -R ubuntu: /srv/sw\nUSER ubuntu\n#   set env vars for common libraries and python paths\nENV PYTHONPATH=\"/usr/lib/python2.7/dist-packages:${PYTHONPATH}\"\n#  # install from source \n#   hdf5\nRUN cd /srv/downloads \\\n && wget -q https://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.17/src/hdf5-1.8.17.tar.gz \\\n && tar xfz hdf5-1.8.17.tar.gz \\\n && cd hdf5-1.8.17 \\\n && ./configure --prefix=/srv/sw/hdf5-1.8.17 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/hdf5-1.8.17/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/hdf5-1.8.17/lib:${LD_LIBRARY_PATH}\"\n#   netcdf4\nRUN cd /srv/downloads \\\n && wget -q ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.1.tar.gz \\\n && tar xfz netcdf-4.4.1.tar.gz \\\n && cd netcdf-4.4.1 \\\n && CFLAGS=\"-I/srv/sw/hdf5-1.8.17/include \" LDFLAGS=\" -L/srv/sw/hdf5-1.8.17/lib \" LIBS=\" -lhdf5 -lhdf5_hl \" ./configure --prefix=/srv/sw/netcdf-4.4.1 --enable-netcdf4 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/netcdf-4.4.1/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/netcdf-4.4.1/lib:${LD_LIBRARY_PATH}\"\n#   geos\nRUN cd /srv/downloads \\\n && wget -q http://download.osgeo.org/geos/geos-3.5.0.tar.bz2 \\\n && tar xfj geos-3.5.0.tar.bz2 \\\n && cd geos-3.5.0 \\\n && ./configure --prefix=/srv/sw/geos --enable-python \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/geos/bin:${PATH}\" \\\n    PYTHONPATH=\"/srv/sw/geos/lib/python2.7/site-packages:${PYTHONPATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/geos/lib:${LD_LIBRARY_PATH}\"\n#   proj4\nRUN cd /srv/downloads \\\n && wget -q https://github.com/OSGeo/proj.4/archive/4.9.2.tar.gz -O proj.4-4.9.2.tar.gz \\\n && tar xfz proj.4-4.9.2.tar.gz \\\n && cd proj.4-4.9.2 \\\n && ./configure --prefix=/srv/sw/proj4 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/proj4/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/proj4/lib:${LD_LIBRARY_PATH}\"\n#   gdal\nRUN cd /srv/downloads \\\n && wget -q http://download.osgeo.org/gdal/2.1.1/gdal-2.1.1.tar.gz \\\n && tar xfz gdal-2.1.1.tar.gz \\\n && cd gdal-2.1.1 \\\n && ./configure --with-libtiff=internal --with-geotiff=internal --with-png=internal --with-jpeg=internal --with-gif=internal --without-curl --with-python --with-hdf5=/srv/sw/hdf5-1.8.17 --with-netcdf=/srv/sw/netcdf-4.4.1 --with-geos=/srv/sw/geos/bin/geos-config --with-threads --prefix=/srv/sw/gdal \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/gdal/bin:${PATH}\" \\\n    PYTHONPATH=\"/srv/sw/gdal/lib/python2.7/site-packages:${PYTHONPATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/gdal/lib:${LD_LIBRARY_PATH}\"\n#   nco\nRUN cd /srv/downloads \\\n && wget -q https://github.com/nco/nco/archive/4.6.1.tar.gz -O nco-4.6.1.tar.gz \\\n && tar xfz nco-4.6.1.tar.gz \\\n && cd nco-4.6.1 \\\n && ./configure NETCDF_ROOT=/srv/sw/netcdf-4.4.1 --prefix=/srv/sw/nco-4.6.1 --enable-ncap2 --enable-udunits2 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/nco-4.6.1/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/nco-4.6.1/lib:${LD_LIBRARY_PATH}\"\nENV USERHOME=\"/home/ubuntu\"\nWORKDIR \"${USERHOME}\"\n#  # install pyclowder \n#   install python modules\nRUN cd ${USERHOME} \\\n && virtualenv pyenv \\\n && . pyenv/bin/activate \\\n && pip install pika==1.3.1 \\\n && CC=gcc CXX=g++ USE_SETUPCFG=0 HDF5_INCDIR=/srv/sw/hdf5-1.8.17/include HDF5_LIBDIR=/srv/sw/hdf5-1.8.17/lib NETCDF4_INCDIR=/srv/sw/netcdf-4.4.1/include NETCDF4_LIBDIR=/srv/sw/netcdf-4.4.1/lib pip install netCDF4 \\\n && pip install git+https://opensource.ncsa.illinois.edu/stash/scm/cats/pyclowder.git@bugfix/CATS-554-add-pyclowder-support-for-dataset \\\n && deactivate\n#  # install hyperspectral image converter script\nENV PIPELINEDIR=\"${USERHOME}/computing-pipeline\"\nRUN git clone https://github.com/terraref/computing-pipeline.git \"${PIPELINEDIR}\"\n#  # create workspace directories\nENV INPUTDIR=\"${USERHOME}/input\" \\\n    OUTPUTDIR=\"${USERHOME}/output\"\nRUN mkdir -p \"${INPUTDIR}\" \\\n && mkdir -p \"${OUTPUTDIR}\" \\\n && mkdir -p \"${USERHOME}/logs\" mkdir -p \"${USERHOME}/test-data\"\n#  # download test input data\nRUN wget -q http://141.142.168.44/nfiedata/yanliu/terraref-hyperspectral-input-sample.tgz \\\n && tar -xf terraref-hyperspectral-input-sample.tgz -C \"./test-data\" --strip-components 1\n#  # install extractor\nENV RABBITMQ_URI=\"\" \\\n    RABBITMQ_EXCHANGE=\"clowder\" \\\n    RABBITMQ_VHOST=\"%2F\" \\\n    RABBITMQ_QUEUE=\"terra.hyperspectral\" \\\n    WORKER_SCRIPT=\"${PIPELINEDIR}/scripts/hyperspectral/terraref.sh\"\nCOPY entrypoint.sh extractor_info.json config.py terra.hyperspectral.py ./\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"python\", \"./terra.hyperspectral.py\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for the TerraRef hyperspectral image conversion extractor\n#  August 17, 2016\nFROM ubuntu:14.04\nMAINTAINER Yan Y. Liu <yanliu@illinois.edu>\n#  install common libraries and python modules\nUSER root\nRUN apt-get update\nRUN apt-get upgrade -y -q\nRUN apt-get install build-essential m4 swig antlr libantlr-dev udunits-bin libudunits2-dev unzip cmake wget git libjpeg-dev libpng-dev libtiff-dev -y -q\nRUN apt-get install python-dev python-numpy python-pip python-virtualenv -y -q\n#  set up dirs for user installed software\nRUN useradd -m -s /bin/bash ubuntu\nRUN mkdir /srv/downloads \\\n && chown -R ubuntu: /srv/downloads \\\n && mkdir /srv/sw \\\n && chown -R ubuntu: /srv/sw\nUSER ubuntu\n#  set env vars for common libraries and python paths\nENV PYTHONPATH=\"/usr/lib/python2.7/dist-packages:${PYTHONPATH}\"\n# # install from source \n#  hdf5\nRUN cd /srv/downloads \\\n && wget -q https://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.17/src/hdf5-1.8.17.tar.gz \\\n && tar xfz hdf5-1.8.17.tar.gz \\\n && cd hdf5-1.8.17 \\\n && ./configure --prefix=/srv/sw/hdf5-1.8.17 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/hdf5-1.8.17/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/hdf5-1.8.17/lib:${LD_LIBRARY_PATH}\"\n#  netcdf4\nRUN cd /srv/downloads \\\n && wget -q ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.1.tar.gz \\\n && tar xfz netcdf-4.4.1.tar.gz \\\n && cd netcdf-4.4.1 \\\n && CFLAGS=\"-I/srv/sw/hdf5-1.8.17/include \" LDFLAGS=\" -L/srv/sw/hdf5-1.8.17/lib \" LIBS=\" -lhdf5 -lhdf5_hl \" ./configure --prefix=/srv/sw/netcdf-4.4.1 --enable-netcdf4 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/netcdf-4.4.1/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/netcdf-4.4.1/lib:${LD_LIBRARY_PATH}\"\n#  geos\nRUN cd /srv/downloads \\\n && wget -q http://download.osgeo.org/geos/geos-3.5.0.tar.bz2 \\\n && tar xfj geos-3.5.0.tar.bz2 \\\n && cd geos-3.5.0 \\\n && ./configure --prefix=/srv/sw/geos --enable-python \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/geos/bin:${PATH}\" \\\n    PYTHONPATH=\"/srv/sw/geos/lib/python2.7/site-packages:${PYTHONPATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/geos/lib:${LD_LIBRARY_PATH}\"\n#  proj4\nRUN cd /srv/downloads \\\n && wget -q https://github.com/OSGeo/proj.4/archive/4.9.2.tar.gz -O proj.4-4.9.2.tar.gz \\\n && tar xfz proj.4-4.9.2.tar.gz \\\n && cd proj.4-4.9.2 \\\n && ./configure --prefix=/srv/sw/proj4 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/proj4/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/proj4/lib:${LD_LIBRARY_PATH}\"\n#  gdal\nRUN cd /srv/downloads \\\n && wget -q http://download.osgeo.org/gdal/2.1.1/gdal-2.1.1.tar.gz \\\n && tar xfz gdal-2.1.1.tar.gz \\\n && cd gdal-2.1.1 \\\n && ./configure --with-libtiff=internal --with-geotiff=internal --with-png=internal --with-jpeg=internal --with-gif=internal --without-curl --with-python --with-hdf5=/srv/sw/hdf5-1.8.17 --with-netcdf=/srv/sw/netcdf-4.4.1 --with-geos=/srv/sw/geos/bin/geos-config --with-threads --prefix=/srv/sw/gdal \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/gdal/bin:${PATH}\" \\\n    PYTHONPATH=\"/srv/sw/gdal/lib/python2.7/site-packages:${PYTHONPATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/gdal/lib:${LD_LIBRARY_PATH}\"\n#  nco\nRUN cd /srv/downloads \\\n && wget -q https://github.com/nco/nco/archive/4.6.1.tar.gz -O nco-4.6.1.tar.gz \\\n && tar xfz nco-4.6.1.tar.gz \\\n && cd nco-4.6.1 \\\n && ./configure NETCDF_ROOT=/srv/sw/netcdf-4.4.1 --prefix=/srv/sw/nco-4.6.1 --enable-ncap2 --enable-udunits2 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/nco-4.6.1/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/nco-4.6.1/lib:${LD_LIBRARY_PATH}\"\nENV USERHOME=\"/home/ubuntu\"\nWORKDIR \"${USERHOME}\"\n# # install pyclowder \n#  install python modules\nRUN cd ${USERHOME} \\\n && virtualenv pyenv \\\n && . pyenv/bin/activate \\\n && pip install pika \\\n && CC=gcc CXX=g++ USE_SETUPCFG=0 HDF5_INCDIR=/srv/sw/hdf5-1.8.17/include HDF5_LIBDIR=/srv/sw/hdf5-1.8.17/lib NETCDF4_INCDIR=/srv/sw/netcdf-4.4.1/include NETCDF4_LIBDIR=/srv/sw/netcdf-4.4.1/lib pip install netCDF4 \\\n && pip install git+https://opensource.ncsa.illinois.edu/stash/scm/cats/pyclowder.git@bugfix/CATS-554-add-pyclowder-support-for-dataset \\\n && deactivate\n# # install hyperspectral image converter script\nENV PIPELINEDIR=\"${USERHOME}/computing-pipeline\"\nRUN git clone https://github.com/terraref/computing-pipeline.git \"${PIPELINEDIR}\"\n# # create workspace directories\nENV INPUTDIR=\"${USERHOME}/input\" \\\n    OUTPUTDIR=\"${USERHOME}/output\"\nRUN mkdir -p \"${INPUTDIR}\" \\\n && mkdir -p \"${OUTPUTDIR}\" \\\n && mkdir -p \"${USERHOME}/logs\" mkdir -p \"${USERHOME}/test-data\"\n# # download test input data\nRUN wget -q http://141.142.168.44/nfiedata/yanliu/terraref-hyperspectral-input-sample.tgz \\\n && tar -xf terraref-hyperspectral-input-sample.tgz -C \"./test-data\" --strip-components 1\n# # install extractor\nENV RABBITMQ_URI=\"\" \\\n    RABBITMQ_EXCHANGE=\"clowder\" \\\n    RABBITMQ_VHOST=\"%2F\" \\\n    RABBITMQ_QUEUE=\"terra.hyperspectral\" \\\n    WORKER_SCRIPT=\"${PIPELINEDIR}/scripts/hyperspectral/terraref.sh\"\nCOPY entrypoint.sh extractor_info.json config.py terra.hyperspectral.py ./\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"python\", \"./terra.hyperspectral.py\"]\n","injectedSmells":[],"originalDockerfileHash":"4e1e027c90c1ce26253c77d490d1dc4b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for the TerraRef hyperspectral image conversion extractor\n#   August 17, 2016\nFROM ubuntu:14.04\nMAINTAINER Yan Y. Liu <yanliu@illinois.edu>\n#   install common libraries and python modules\nUSER root\nRUN apt-get update\nRUN apt-get upgrade -y -q\nRUN apt-get install build-essential m4 swig antlr libantlr-dev udunits-bin libudunits2-dev unzip cmake wget git libjpeg-dev libpng-dev libtiff-dev -y -q\nRUN apt-get install python-dev python-numpy python-pip python-virtualenv -y -q\n#   set up dirs for user installed software\nRUN useradd -m -s /bin/bash ubuntu\nRUN mkdir /srv/downloads \\\n && chown -R ubuntu: /srv/downloads \\\n && mkdir /srv/sw \\\n && chown -R ubuntu: /srv/sw\nUSER ubuntu\n#   set env vars for common libraries and python paths\nENV PYTHONPATH=\"/usr/lib/python2.7/dist-packages:${PYTHONPATH}\"\n#  # install from source \n#   hdf5\nRUN cd /srv/downloads \\\n && wget -q https://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.17/src/hdf5-1.8.17.tar.gz \\\n && tar xfz hdf5-1.8.17.tar.gz \\\n && cd hdf5-1.8.17 \\\n && ./configure --prefix=/srv/sw/hdf5-1.8.17 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/hdf5-1.8.17/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/hdf5-1.8.17/lib:${LD_LIBRARY_PATH}\"\n#   netcdf4\nRUN cd /srv/downloads \\\n && wget -q ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.1.tar.gz \\\n && tar xfz netcdf-4.4.1.tar.gz \\\n && cd netcdf-4.4.1 \\\n && CFLAGS=\"-I/srv/sw/hdf5-1.8.17/include \" LDFLAGS=\" -L/srv/sw/hdf5-1.8.17/lib \" LIBS=\" -lhdf5 -lhdf5_hl \" ./configure --prefix=/srv/sw/netcdf-4.4.1 --enable-netcdf4 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/netcdf-4.4.1/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/netcdf-4.4.1/lib:${LD_LIBRARY_PATH}\"\n#   geos\nRUN cd /srv/downloads \\\n && wget -q http://download.osgeo.org/geos/geos-3.5.0.tar.bz2 \\\n && tar xfj geos-3.5.0.tar.bz2 \\\n && cd geos-3.5.0 \\\n && ./configure --prefix=/srv/sw/geos --enable-python \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/geos/bin:${PATH}\" \\\n    PYTHONPATH=\"/srv/sw/geos/lib/python2.7/site-packages:${PYTHONPATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/geos/lib:${LD_LIBRARY_PATH}\"\n#   proj4\nRUN cd /srv/downloads \\\n && wget -q https://github.com/OSGeo/proj.4/archive/4.9.2.tar.gz -O proj.4-4.9.2.tar.gz \\\n && tar xfz proj.4-4.9.2.tar.gz \\\n && cd proj.4-4.9.2 \\\n && ./configure --prefix=/srv/sw/proj4 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/proj4/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/proj4/lib:${LD_LIBRARY_PATH}\"\n#   gdal\nRUN cd /srv/downloads \\\n && wget -q http://download.osgeo.org/gdal/2.1.1/gdal-2.1.1.tar.gz \\\n && tar xfz gdal-2.1.1.tar.gz \\\n && cd gdal-2.1.1 \\\n && ./configure --with-libtiff=internal --with-geotiff=internal --with-png=internal --with-jpeg=internal --with-gif=internal --without-curl --with-python --with-hdf5=/srv/sw/hdf5-1.8.17 --with-netcdf=/srv/sw/netcdf-4.4.1 --with-geos=/srv/sw/geos/bin/geos-config --with-threads --prefix=/srv/sw/gdal \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/gdal/bin:${PATH}\" \\\n    PYTHONPATH=\"/srv/sw/gdal/lib/python2.7/site-packages:${PYTHONPATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/gdal/lib:${LD_LIBRARY_PATH}\"\n#   nco\nRUN cd /srv/downloads \\\n && wget -q https://github.com/nco/nco/archive/4.6.1.tar.gz -O nco-4.6.1.tar.gz \\\n && tar xfz nco-4.6.1.tar.gz \\\n && cd nco-4.6.1 \\\n && ./configure NETCDF_ROOT=/srv/sw/netcdf-4.4.1 --prefix=/srv/sw/nco-4.6.1 --enable-ncap2 --enable-udunits2 \\\n && make \\\n && make install\nENV PATH=\"/srv/sw/nco-4.6.1/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/nco-4.6.1/lib:${LD_LIBRARY_PATH}\"\nENV USERHOME=\"/home/ubuntu\"\nWORKDIR \"${USERHOME}\"\n#  # install pyclowder \n#   install python modules\nRUN cd ${USERHOME} \\\n && virtualenv pyenv \\\n && . pyenv/bin/activate \\\n && pip install pika \\\n && CC=gcc CXX=g++ USE_SETUPCFG=0 HDF5_INCDIR=/srv/sw/hdf5-1.8.17/include HDF5_LIBDIR=/srv/sw/hdf5-1.8.17/lib NETCDF4_INCDIR=/srv/sw/netcdf-4.4.1/include NETCDF4_LIBDIR=/srv/sw/netcdf-4.4.1/lib pip install netCDF4 \\\n && pip install git+https://opensource.ncsa.illinois.edu/stash/scm/cats/pyclowder.git@bugfix/CATS-554-add-pyclowder-support-for-dataset \\\n && deactivate\n#  # install hyperspectral image converter script\nENV PIPELINEDIR=\"${USERHOME}/computing-pipeline\"\nRUN git clone https://github.com/terraref/computing-pipeline.git \"${PIPELINEDIR}\"\n#  # create workspace directories\nENV INPUTDIR=\"${USERHOME}/input\" \\\n    OUTPUTDIR=\"${USERHOME}/output\"\nRUN mkdir -p \"${INPUTDIR}\" \\\n && mkdir -p \"${OUTPUTDIR}\" \\\n && mkdir -p \"${USERHOME}/logs\" mkdir -p \"${USERHOME}/test-data\"\n#  # download test input data\nRUN wget -q http://141.142.168.44/nfiedata/yanliu/terraref-hyperspectral-input-sample.tgz \\\n && tar -xf terraref-hyperspectral-input-sample.tgz -C \"./test-data\" --strip-components 1\n#  # install extractor\nENV RABBITMQ_URI=\"\" \\\n    RABBITMQ_EXCHANGE=\"clowder\" \\\n    RABBITMQ_VHOST=\"%2F\" \\\n    RABBITMQ_QUEUE=\"terra.hyperspectral\" \\\n    WORKER_SCRIPT=\"${PIPELINEDIR}/scripts/hyperspectral/terraref.sh\"\nCOPY entrypoint.sh extractor_info.json config.py terra.hyperspectral.py ./\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"python\", \"./terra.hyperspectral.py\"]\n","originalDockerfileUglifiedHash":"899eb1edcc0469e58bb2c7e215eb0a45","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d1dc4545e9001d2b5fff69e89378ffa48fb8baf4.dockerfile"}