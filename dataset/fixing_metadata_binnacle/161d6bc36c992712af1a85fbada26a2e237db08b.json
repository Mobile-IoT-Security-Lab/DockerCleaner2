{"seed":2676272532,"processedDockerfileHash":"df0ec6a67f7b3c93b2b3d3f5ec4d5aee","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ###########################################################\n#   Dockerfile to build a VFX Platform docker image\nFROM centos/devtoolset-7-toolchain-centos7\nLABEL maintainer=\"Aloys.Baillet - Animal Logic\"\nARG current_host_ip_address\nENV BUILD_PROCS=\"7\"\nENV BUILD_DIR=\"/opt/vfx\"\nENV TMP_DIR=\"/tmp/vfx-build\"\nENV DOWNLOADS_DIR=\"/tmp/vfx-downloads\"\nENV PATH=\"$BUILD_DIR/bin:$PATH\"\nENV PKG_CONFIG_PATH=\"$BUILD_DIR/lib/pkgconfig:$PKG_CONFIG_PATH\"\nENV LD_LIBRARY_PATH=\"$BUILD_DIR/lib64:$BUILD_DIR/lib:$LD_LIBRARY_PATH\"\nENV PYTHON_SITE_PACKAGES=\"$BUILD_DIR/lib/python2.7/site-packages\"\nENV PYTHON_EXECUTABLE=\"python\"\nENV PYTHONPATH=\"$PYTHONPATH:/opt/usd/lib/python:/opt/usd/lib/python/site-packages:/opt/usd/lib64/python/site-packages\"\nENV HTTP_HOSTNAME=\"$current_host_ip_address\"\nUSER root\nRUN yum install -y --setopt=tsflags=nodocs make wget bzip2 which python-devel zlib-devel bzip2-devel \\\n && yum clean all -y\nCOPY scripts/download_vfx-lite-2018.sh /tmp/\nRUN /tmp/download_vfx-lite-2018.sh\nRUN mkdir -p $TMP_DIR\n#  ----------------------------------------------\n#   build and install cmake\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/cmake-3.12.3.tar.gz \\\n && cd $TMP_DIR/cmake-3.12.3 \\\n && ./bootstrap --prefix=$BUILD_DIR \\\n && make -j ${BUILD_PROCS} \\\n && make install\n#  ----------------------------------------------\n#   build and install boost\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -jxf $DOWNLOADS_DIR/boost_1_61_0.tar.bz2 \\\n && cd $TMP_DIR/boost_1_61_0 \\\n && ./bootstrap.sh --prefix=$BUILD_DIR \\\n && ./bjam variant=release link=shared threading=multi install\n#  ----------------------------------------------\n#   build and install TBB\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/tbb2017_U6.tar.gz \\\n && cd $TMP_DIR/tbb-2017_U6 \\\n && make -j ${BUILD_PROCS} \\\n && cp build/*_release/*.so* $BUILD_DIR/lib \\\n && cp -R include/* $BUILD_DIR/include/\n#  ----------------------------------------------\n#   build and install ilmbase\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/ilmbase-2.2.0.tar.gz \\\n && cd $TMP_DIR/ilmbase-2.2.0 \\\n && ./configure --prefix=$BUILD_DIR \\\n && make -j ${BUILD_PROCS} \\\n && make install\n#  ----------------------------------------------\n#   build and install openexr\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/openexr-2.2.0.tar.gz \\\n && cd $TMP_DIR/openexr-2.2.0 \\\n && ./configure --prefix=$BUILD_DIR --disable-ilmbasetest \\\n && make -j ${BUILD_PROCS} \\\n && make install\n#  ----------------------------------------------\n#   build and install jemalloc\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -xjf $DOWNLOADS_DIR/jemalloc-5.1.0.tar.bz2 \\\n && cd $TMP_DIR/jemalloc-5.1.0 \\\n && ./configure --prefix=$BUILD_DIR \\\n && make -j ${BUILD_PROCS} \\\n && make install\n#  ----------------------------------------------\n#   build and install OpenSubdiv\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/OpenSubdiv-3_3_3.tar.gz \\\n && cd $TMP_DIR/OpenSubdiv-3_3_3 \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DCMAKE_INSTALL_PREFIX=$BUILD_DIR -DTBB_LOCATION=$BUILD_DIR -DNO_EXAMPLES=1 -DNO_REGRESSION=1 -DNO_PTEX=1 -DNO_OMP=1 -DNO_OPENCL=1 -DNO_OPENGL=1 -DNO_CLEW=1 -DNO_CUDA=1 -DNO_TUTORIALS=1 \\\n && make -j ${BUILD_PROCS} VERBOSE=1 \\\n && make install\nRUN rm -rf $TMP_DIR\nCMD bash\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###########################################################\n#  Dockerfile to build a VFX Platform docker image\nFROM centos/devtoolset-7-toolchain-centos7\nLABEL maintainer=\"Aloys.Baillet - Animal Logic\"\nARG current_host_ip_address\nENV BUILD_PROCS=\"7\"\nENV BUILD_DIR=\"/opt/vfx\"\nENV TMP_DIR=\"/tmp/vfx-build\"\nENV DOWNLOADS_DIR=\"/tmp/vfx-downloads\"\nENV PATH=\"$BUILD_DIR/bin:$PATH\"\nENV PKG_CONFIG_PATH=\"$BUILD_DIR/lib/pkgconfig:$PKG_CONFIG_PATH\"\nENV LD_LIBRARY_PATH=\"$BUILD_DIR/lib64:$BUILD_DIR/lib:$LD_LIBRARY_PATH\"\nENV PYTHON_SITE_PACKAGES=\"$BUILD_DIR/lib/python2.7/site-packages\"\nENV PYTHON_EXECUTABLE=\"python\"\nENV PYTHONPATH=\"$PYTHONPATH:/opt/usd/lib/python:/opt/usd/lib/python/site-packages:/opt/usd/lib64/python/site-packages\"\nENV HTTP_HOSTNAME=\"$current_host_ip_address\"\nUSER root\nRUN yum install -y --setopt=tsflags=nodocs make wget bzip2 which python-devel zlib-devel bzip2-devel \\\n && yum clean all -y\nCOPY scripts/download_vfx-lite-2018.sh /tmp/\nRUN /tmp/download_vfx-lite-2018.sh\nRUN mkdir -p $TMP_DIR\n# ----------------------------------------------\n#  build and install cmake\n# ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/cmake-3.12.3.tar.gz \\\n && cd $TMP_DIR/cmake-3.12.3 \\\n && ./bootstrap --prefix=$BUILD_DIR \\\n && make -j ${BUILD_PROCS} \\\n && make install\n# ----------------------------------------------\n#  build and install boost\n# ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -jxf $DOWNLOADS_DIR/boost_1_61_0.tar.bz2 \\\n && cd $TMP_DIR/boost_1_61_0 \\\n && ./bootstrap.sh --prefix=$BUILD_DIR \\\n && ./bjam variant=release link=shared threading=multi install\n# ----------------------------------------------\n#  build and install TBB\n# ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/tbb2017_U6.tar.gz \\\n && cd $TMP_DIR/tbb-2017_U6 \\\n && make -j ${BUILD_PROCS} \\\n && cp build/*_release/*.so* $BUILD_DIR/lib \\\n && cp -R include/* $BUILD_DIR/include/\n# ----------------------------------------------\n#  build and install ilmbase\n# ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/ilmbase-2.2.0.tar.gz \\\n && cd $TMP_DIR/ilmbase-2.2.0 \\\n && ./configure --prefix=$BUILD_DIR \\\n && make -j ${BUILD_PROCS} \\\n && make install\n# ----------------------------------------------\n#  build and install openexr\n# ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/openexr-2.2.0.tar.gz \\\n && cd $TMP_DIR/openexr-2.2.0 \\\n && ./configure --prefix=$BUILD_DIR --disable-ilmbasetest \\\n && make -j ${BUILD_PROCS} \\\n && make install\n# ----------------------------------------------\n#  build and install jemalloc\n# ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -xjf $DOWNLOADS_DIR/jemalloc-5.1.0.tar.bz2 \\\n && cd $TMP_DIR/jemalloc-5.1.0 \\\n && ./configure --prefix=$BUILD_DIR \\\n && make -j ${BUILD_PROCS} \\\n && make install\n# ----------------------------------------------\n#  build and install OpenSubdiv\n# ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/OpenSubdiv-3_3_3.tar.gz \\\n && cd $TMP_DIR/OpenSubdiv-3_3_3 \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DCMAKE_INSTALL_PREFIX=$BUILD_DIR -DTBB_LOCATION=$BUILD_DIR -DNO_EXAMPLES=1 -DNO_REGRESSION=1 -DNO_PTEX=1 -DNO_OMP=1 -DNO_OPENCL=1 -DNO_OPENGL=1 -DNO_CLEW=1 -DNO_CUDA=1 -DNO_TUTORIALS=1 \\\n && make -j ${BUILD_PROCS} VERBOSE=1 \\\n && make install\nRUN rm -rf $TMP_DIR\nCMD bash\n","injectedSmells":[],"originalDockerfileHash":"77bf78f273e5bea6d5eec6969f84ad94","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###########################################################\n#   Dockerfile to build a VFX Platform docker image\nFROM centos/devtoolset-7-toolchain-centos7\nLABEL maintainer=\"Aloys.Baillet - Animal Logic\"\nARG current_host_ip_address\nENV BUILD_PROCS=\"7\"\nENV BUILD_DIR=\"/opt/vfx\"\nENV TMP_DIR=\"/tmp/vfx-build\"\nENV DOWNLOADS_DIR=\"/tmp/vfx-downloads\"\nENV PATH=\"$BUILD_DIR/bin:$PATH\"\nENV PKG_CONFIG_PATH=\"$BUILD_DIR/lib/pkgconfig:$PKG_CONFIG_PATH\"\nENV LD_LIBRARY_PATH=\"$BUILD_DIR/lib64:$BUILD_DIR/lib:$LD_LIBRARY_PATH\"\nENV PYTHON_SITE_PACKAGES=\"$BUILD_DIR/lib/python2.7/site-packages\"\nENV PYTHON_EXECUTABLE=\"python\"\nENV PYTHONPATH=\"$PYTHONPATH:/opt/usd/lib/python:/opt/usd/lib/python/site-packages:/opt/usd/lib64/python/site-packages\"\nENV HTTP_HOSTNAME=\"$current_host_ip_address\"\nUSER root\nRUN yum install -y --setopt=tsflags=nodocs make wget bzip2 which python-devel zlib-devel bzip2-devel \\\n && yum clean all -y\nCOPY scripts/download_vfx-lite-2018.sh /tmp/\nRUN /tmp/download_vfx-lite-2018.sh\nRUN mkdir -p $TMP_DIR\n#  ----------------------------------------------\n#   build and install cmake\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/cmake-3.12.3.tar.gz \\\n && cd $TMP_DIR/cmake-3.12.3 \\\n && ./bootstrap --prefix=$BUILD_DIR \\\n && make -j ${BUILD_PROCS} \\\n && make install\n#  ----------------------------------------------\n#   build and install boost\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -jxf $DOWNLOADS_DIR/boost_1_61_0.tar.bz2 \\\n && cd $TMP_DIR/boost_1_61_0 \\\n && ./bootstrap.sh --prefix=$BUILD_DIR \\\n && ./bjam variant=release link=shared threading=multi install\n#  ----------------------------------------------\n#   build and install TBB\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/tbb2017_U6.tar.gz \\\n && cd $TMP_DIR/tbb-2017_U6 \\\n && make -j ${BUILD_PROCS} \\\n && cp build/*_release/*.so* $BUILD_DIR/lib \\\n && cp -R include/* $BUILD_DIR/include/\n#  ----------------------------------------------\n#   build and install ilmbase\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/ilmbase-2.2.0.tar.gz \\\n && cd $TMP_DIR/ilmbase-2.2.0 \\\n && ./configure --prefix=$BUILD_DIR \\\n && make -j ${BUILD_PROCS} \\\n && make install\n#  ----------------------------------------------\n#   build and install openexr\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/openexr-2.2.0.tar.gz \\\n && cd $TMP_DIR/openexr-2.2.0 \\\n && ./configure --prefix=$BUILD_DIR --disable-ilmbasetest \\\n && make -j ${BUILD_PROCS} \\\n && make install\n#  ----------------------------------------------\n#   build and install jemalloc\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -xjf $DOWNLOADS_DIR/jemalloc-5.1.0.tar.bz2 \\\n && cd $TMP_DIR/jemalloc-5.1.0 \\\n && ./configure --prefix=$BUILD_DIR \\\n && make -j ${BUILD_PROCS} \\\n && make install\n#  ----------------------------------------------\n#   build and install OpenSubdiv\n#  ----------------------------------------------\nRUN cd $TMP_DIR \\\n && tar -zxf $DOWNLOADS_DIR/OpenSubdiv-3_3_3.tar.gz \\\n && cd $TMP_DIR/OpenSubdiv-3_3_3 \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DCMAKE_INSTALL_PREFIX=$BUILD_DIR -DTBB_LOCATION=$BUILD_DIR -DNO_EXAMPLES=1 -DNO_REGRESSION=1 -DNO_PTEX=1 -DNO_OMP=1 -DNO_OPENCL=1 -DNO_OPENGL=1 -DNO_CLEW=1 -DNO_CUDA=1 -DNO_TUTORIALS=1 \\\n && make -j ${BUILD_PROCS} VERBOSE=1 \\\n && make install\nRUN rm -rf $TMP_DIR\nCMD bash\n","originalDockerfileUglifiedHash":"3f4b15ab3c5fe2bc8525eaed9a6fdf58","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/161d6bc36c992712af1a85fbada26a2e237db08b.dockerfile"}