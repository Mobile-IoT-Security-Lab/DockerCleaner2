{"seed":1656034052,"processedDockerfileHash":"6fceecde678f8ec341828b4e19835a62","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Licensed to the Apache Software Foundation (ASF) under one or more\n#   contributor license agreements.  See the NOTICE file distributed with\n#   this work for additional information regarding copyright ownership.\n#   The ASF licenses this file to You under the Apache License, Version 2.0\n#   (the \"License\"); you may not use this file except in compliance with\n#   the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#   apigateway\n#\n#   VERSION               1.13.6.1\n#\n#   From https://hub.docker.com/_/alpine/\n#\nFROM alpine:3.9\n#   Busybox's ash shell supports pipefail, which is useful for tarballs\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n#   install dependencies\nRUN apk update \\\n && apk add gcc=8.3.0-r0 tar=1.32-r0 libtool=2.4.6-r5 zlib=1.2.11-r1 perl=5.26.3-r1 tzdata=2020c-r1 ca-certificates=20191127-r2 wget=1.20.3-r0 make=4.2.1-r2 musl-dev=1.1.20-r6 openssl-dev=1.1.1k-r0 openssl=1.1.1k-r0 pcre-dev=8.42-r2 g++=8.3.0-r0 zlib-dev=1.2.11-r1 curl=7.64.0-r5 python perl-test-longstring=0.17-r0 perl-list-moreutils=0.419-r1 perl-http-message=6.18-r0 geoip-dev=1.6.12-r1 dumb-init=1.2.2-r1 jq=1.6-r0 \\\n && update-ca-certificates \\\n && rm -rf /var/cache/apk/*\n#   openresty build\nENV OPENRESTY_VERSION=\"1.13.6.2\" \\\n    PCRE_VERSION=\"8.37\" \\\n    TEST_NGINX_VERSION=\"0.24\" \\\n    OPM_VERSION=\"0.0.3\" \\\n    LUA_RESTY_HTTP_VERSION=\"0.10\" \\\n    LUA_RESTY_IPUTILS_VERSION=\"0.2.1\" \\\n    LUA_RESTY_STRING_VERSION=\"0.09\" \\\n    LUA_RESTY_LRUCACHE_VERSION=\"0.06\" \\\n    LUA_RESTY_CJOSE_VERSION=\"0.4\" \\\n    NETURL_LUA_VERSION=\"0.9-1\" \\\n    CJOSE_VERSION=\"0.5.1\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    _prefix=\"/usr/local\" \\\n    _exec_prefix=\"/usr/local\" \\\n    _localstatedir=\"/var\" \\\n    _sysconfdir=\"/etc\" \\\n    _sbindir=\"/usr/local/sbin\"\nRUN if [ x`uname -m ` = xs390x ] ; then echo \"Building LuaJIT for s390x\" \\\n && mkdir -p /tmp/luajit \\\n && cd /tmp/luajit \\\n && curl -k -L https://api.github.com/repos/linux-on-ibm-z/LuaJIT/tarball/v2.1 > luajit.tar.gz \\\n && tar -zxf luajit.tar.gz \\\n && cd linux-on-ibm-z-LuaJIT-* \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/luajit ; fi\nRUN if [ x`uname -m ` = xppc64le ] ; then echo \"Building LuaJIT for ppc64le\" \\\n && mkdir /tmp/luajit \\\n && cd /tmp/luajit \\\n && curl -k -L https://api.github.com/repos/PPC64/LuaJIT/tarball > luajit.tar.gz \\\n && tar -zxf luajit.tar.gz \\\n && cd PPC64-LuaJIT-* \\\n && make \\\n && make install \\\n && rm -rf /tmp/luajit ; fi\nRUN echo \" ... adding Openresty, NGINX and PCRE\" \\\n && mkdir -p /tmp/api-gateway \\\n && readonly NPROC=$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) \\\n && echo \"using up to $NPROC threads\" \\\n && cd /tmp/api-gateway/ \\\n && curl -k -L https://ftp.pcre.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz -o /tmp/api-gateway/pcre-${PCRE_VERSION}.tar.gz \\\n && curl -k -L https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz -o /tmp/api-gateway/openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./pcre-${PCRE_VERSION}.tar.gz \\\n && cd /tmp/api-gateway/openresty-${OPENRESTY_VERSION} \\\n && case \"$( uname -m ;)\" in (aarch64) luajitdir=\"\" pcrejit=\"--with-pcre-jit\" ; echo \" ... Patching ngx_lua and LuaJIT modules for ARM64 ... \" \\\n && rm -rf ./bundle/ngx_lua-* \\\n && curl -k -L https://github.com/openresty/lua-nginx-module/archive/v0.10.14rc3.tar.gz | tar -zxf - -C ./bundle \\\n && mv ./bundle/lua-nginx-module-0.10.14rc3 ./bundle/ngx_lua-0.10.14rc3 \\\n && rm -rf ./bundle/LuaJIT-* \\\n && curl -k -L https://github.com/openresty/luajit2/archive/v2.1-20181029.tar.gz | tar -zxf - -C ./bundle \\\n && mv ./bundle/luajit2-2.1-20181029 ./bundle/LuaJIT-2.2.1-20181029 ;;(s390x) luajitdir=\"=/usr/local/\" pcrejit=\"\" ;;(ppc64le) luajitdir=\"=/usr/local/\" pcrejit=\"--with-pcre-jit\" ;;(*) luajitdir=\"\" pcrejit=\"--with-pcre-jit\" ;; esac \\\n && echo \" - building debugging version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway-debug --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ ${pcrejit} --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_auth_request_module --with-http_v2_module --with-luajit${luajitdir} --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module --with-debug -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - building regular version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ ${pcrejit} --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_auth_request_module --with-http_v2_module --with-luajit${luajitdir} --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - adding Nginx Test support\" \\\n && curl -k -L https://github.com/openresty/test-nginx/archive/v${TEST_NGINX_VERSION}.tar.gz -o ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cd ${_prefix} \\\n && tar -xf ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && rm ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cp -r ${_prefix}/test-nginx-0.24/inc/* /usr/local/share/perl5/site_perl/ \\\n && ln -s ${_sbindir}/api-gateway-debug ${_sbindir}/nginx \\\n && cp /tmp/api-gateway/openresty-${OPENRESTY_VERSION}/build/install ${_prefix}/api-gateway/bin/resty-install \\\n && apk del g++ gcc make \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nRUN echo \" ... installing opm...\" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -k -L https://github.com/openresty/opm/archive/v${OPM_VERSION}.tar.gz -o /tmp/api-gateway/opm-${OPM_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/opm-${OPM_VERSION}.tar.gz -C /tmp/api-gateway \\\n && cd /tmp/api-gateway/opm-${OPM_VERSION} \\\n && cp bin/opm ${_prefix}/api-gateway/bin \\\n && cd ${_prefix}/api-gateway \\\n && mkdir -p site/manifest site/pod \\\n && cd site \\\n && ([ -x ../lualib ] || ln -s ../lualib ./ ) \\\n && ln -s ${_prefix}/api-gateway/bin/opm /usr/bin/opm \\\n && ln -s ${_prefix}/api-gateway/bin/resty /usr/bin/resty \\\n && rm -rf /tmp/api-gateway\nRUN echo \" ... installing opm packages ... \" \\\n && opm get pintsized/lua-resty-http=${LUA_RESTY_HTTP_VERSION} hamishforbes/lua-resty-iputils=${LUA_RESTY_IPUTILS_VERSION} openresty/lua-resty-string=${LUA_RESTY_STRING_VERSION} openresty/lua-resty-lrucache=${LUA_RESTY_LRUCACHE_VERSION} taylorking/lua-resty-cjose=${LUA_RESTY_CJOSE_VERSION} taylorking/lua-resty-rate-limit\nRUN echo \" ... installing neturl.lua ... \" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -k -L https://github.com/golgote/neturl/archive/${NETURL_LUA_VERSION}.tar.gz -o /tmp/api-gateway/neturl.lua-${NETURL_LUA_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/neturl.lua-${NETURL_LUA_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && export LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n && cd /tmp/api-gateway/neturl-${NETURL_LUA_VERSION} \\\n && cp lib/net/url.lua ${LUA_LIB_DIR} \\\n && rm -rf /tmp/api-gateway\nRUN echo \" ... installing cjose ... \" \\\n && apk add automake=1.16.1-r0 autoconf=2.69-r2 git=2.20.4-r0 gcc=8.3.0-r0 make=4.2.1-r2 jansson=2.11-r0 jansson-dev=2.11-r0 \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L -k https://github.com/cisco/cjose/archive/${CJOSE_VERSION}.tar.gz -o /tmp/api-gateway/cjose-${CJOSE_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/cjose-${CJOSE_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/cjose-${CJOSE_VERSION} \\\n && sh configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/api-gateway\nENV CONFIG_SUPERVISOR_VERSION=\"1.0.1-RC1\"\nCOPY build_config_supervisor.sh /tmp/build_config_supervisor.sh\nRUN sh +x /tmp/build_config_supervisor.sh\nCOPY init.sh /etc/init-container.sh\n#   add the default configuration for the Gateway\nCOPY . /etc/api-gateway\nRUN adduser -S nginx-api-gateway \\\n && addgroup -S nginx-api-gateway\nEXPOSE 80/tcp 8080/tcp 8423/tcp 9000/tcp\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/etc/init-container.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Licensed to the Apache Software Foundation (ASF) under one or more\n#  contributor license agreements.  See the NOTICE file distributed with\n#  this work for additional information regarding copyright ownership.\n#  The ASF licenses this file to You under the Apache License, Version 2.0\n#  (the \"License\"); you may not use this file except in compliance with\n#  the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\n#  apigateway\n#\n#  VERSION               1.13.6.1\n#\n#  From https://hub.docker.com/_/alpine/\n#\nFROM alpine:3.9\n#  Busybox's ash shell supports pipefail, which is useful for tarballs\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n#  install dependencies\nRUN apk update \\\n && apk add gcc tar libtool zlib perl tzdata ca-certificates wget make musl-dev openssl-dev openssl pcre-dev g++ zlib-dev curl python perl-test-longstring perl-list-moreutils perl-http-message geoip-dev dumb-init jq \\\n && update-ca-certificates \\\n && rm -rf /var/cache/apk/*\n#  openresty build\nENV OPENRESTY_VERSION=\"1.13.6.2\" \\\n    PCRE_VERSION=\"8.37\" \\\n    TEST_NGINX_VERSION=\"0.24\" \\\n    OPM_VERSION=\"0.0.3\" \\\n    LUA_RESTY_HTTP_VERSION=\"0.10\" \\\n    LUA_RESTY_IPUTILS_VERSION=\"0.2.1\" \\\n    LUA_RESTY_STRING_VERSION=\"0.09\" \\\n    LUA_RESTY_LRUCACHE_VERSION=\"0.06\" \\\n    LUA_RESTY_CJOSE_VERSION=\"0.4\" \\\n    NETURL_LUA_VERSION=\"0.9-1\" \\\n    CJOSE_VERSION=\"0.5.1\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    _prefix=\"/usr/local\" \\\n    _exec_prefix=\"/usr/local\" \\\n    _localstatedir=\"/var\" \\\n    _sysconfdir=\"/etc\" \\\n    _sbindir=\"/usr/local/sbin\"\nRUN if [ x`uname -m ` = xs390x ] ; then echo \"Building LuaJIT for s390x\" \\\n && mkdir -p /tmp/luajit \\\n && cd /tmp/luajit \\\n && curl -k -L https://api.github.com/repos/linux-on-ibm-z/LuaJIT/tarball/v2.1 > luajit.tar.gz \\\n && tar -zxf luajit.tar.gz \\\n && cd linux-on-ibm-z-LuaJIT-* \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/luajit ; fi\nRUN if [ x`uname -m ` = xppc64le ] ; then echo \"Building LuaJIT for ppc64le\" \\\n && mkdir /tmp/luajit \\\n && cd /tmp/luajit \\\n && curl -k -L https://api.github.com/repos/PPC64/LuaJIT/tarball > luajit.tar.gz \\\n && tar -zxf luajit.tar.gz \\\n && cd PPC64-LuaJIT-* \\\n && make \\\n && make install \\\n && rm -rf /tmp/luajit ; fi\nRUN echo \" ... adding Openresty, NGINX and PCRE\" \\\n && mkdir -p /tmp/api-gateway \\\n && readonly NPROC=$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) \\\n && echo \"using up to $NPROC threads\" \\\n && cd /tmp/api-gateway/ \\\n && curl -k -L https://ftp.pcre.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz -o /tmp/api-gateway/pcre-${PCRE_VERSION}.tar.gz \\\n && curl -k -L https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz -o /tmp/api-gateway/openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./pcre-${PCRE_VERSION}.tar.gz \\\n && cd /tmp/api-gateway/openresty-${OPENRESTY_VERSION} \\\n && case \"$( uname -m ;)\" in (aarch64) luajitdir=\"\" pcrejit=\"--with-pcre-jit\" ; echo \" ... Patching ngx_lua and LuaJIT modules for ARM64 ... \" \\\n && rm -rf ./bundle/ngx_lua-* \\\n && curl -k -L https://github.com/openresty/lua-nginx-module/archive/v0.10.14rc3.tar.gz | tar -zxf - -C ./bundle \\\n && mv ./bundle/lua-nginx-module-0.10.14rc3 ./bundle/ngx_lua-0.10.14rc3 \\\n && rm -rf ./bundle/LuaJIT-* \\\n && curl -k -L https://github.com/openresty/luajit2/archive/v2.1-20181029.tar.gz | tar -zxf - -C ./bundle \\\n && mv ./bundle/luajit2-2.1-20181029 ./bundle/LuaJIT-2.2.1-20181029 ;;(s390x) luajitdir=\"=/usr/local/\" pcrejit=\"\" ;;(ppc64le) luajitdir=\"=/usr/local/\" pcrejit=\"--with-pcre-jit\" ;;(*) luajitdir=\"\" pcrejit=\"--with-pcre-jit\" ;; esac \\\n && echo \" - building debugging version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway-debug --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ ${pcrejit} --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_auth_request_module --with-http_v2_module --with-luajit${luajitdir} --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module --with-debug -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - building regular version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ ${pcrejit} --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_auth_request_module --with-http_v2_module --with-luajit${luajitdir} --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - adding Nginx Test support\" \\\n && curl -k -L https://github.com/openresty/test-nginx/archive/v${TEST_NGINX_VERSION}.tar.gz -o ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cd ${_prefix} \\\n && tar -xf ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && rm ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cp -r ${_prefix}/test-nginx-0.24/inc/* /usr/local/share/perl5/site_perl/ \\\n && ln -s ${_sbindir}/api-gateway-debug ${_sbindir}/nginx \\\n && cp /tmp/api-gateway/openresty-${OPENRESTY_VERSION}/build/install ${_prefix}/api-gateway/bin/resty-install \\\n && apk del g++ gcc make \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nRUN echo \" ... installing opm...\" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -k -L https://github.com/openresty/opm/archive/v${OPM_VERSION}.tar.gz -o /tmp/api-gateway/opm-${OPM_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/opm-${OPM_VERSION}.tar.gz -C /tmp/api-gateway \\\n && cd /tmp/api-gateway/opm-${OPM_VERSION} \\\n && cp bin/opm ${_prefix}/api-gateway/bin \\\n && cd ${_prefix}/api-gateway \\\n && mkdir -p site/manifest site/pod \\\n && cd site \\\n && ([ -x ../lualib ] || ln -s ../lualib ./ ) \\\n && ln -s ${_prefix}/api-gateway/bin/opm /usr/bin/opm \\\n && ln -s ${_prefix}/api-gateway/bin/resty /usr/bin/resty \\\n && rm -rf /tmp/api-gateway\nRUN echo \" ... installing opm packages ... \" \\\n && opm get pintsized/lua-resty-http=${LUA_RESTY_HTTP_VERSION} hamishforbes/lua-resty-iputils=${LUA_RESTY_IPUTILS_VERSION} openresty/lua-resty-string=${LUA_RESTY_STRING_VERSION} openresty/lua-resty-lrucache=${LUA_RESTY_LRUCACHE_VERSION} taylorking/lua-resty-cjose=${LUA_RESTY_CJOSE_VERSION} taylorking/lua-resty-rate-limit\nRUN echo \" ... installing neturl.lua ... \" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -k -L https://github.com/golgote/neturl/archive/${NETURL_LUA_VERSION}.tar.gz -o /tmp/api-gateway/neturl.lua-${NETURL_LUA_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/neturl.lua-${NETURL_LUA_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && export LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n && cd /tmp/api-gateway/neturl-${NETURL_LUA_VERSION} \\\n && cp lib/net/url.lua ${LUA_LIB_DIR} \\\n && rm -rf /tmp/api-gateway\nRUN echo \" ... installing cjose ... \" \\\n && apk add automake autoconf git gcc make jansson jansson-dev \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L -k https://github.com/cisco/cjose/archive/${CJOSE_VERSION}.tar.gz -o /tmp/api-gateway/cjose-${CJOSE_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/cjose-${CJOSE_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/cjose-${CJOSE_VERSION} \\\n && sh configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/api-gateway\nENV CONFIG_SUPERVISOR_VERSION=\"1.0.1-RC1\"\nCOPY build_config_supervisor.sh /tmp/build_config_supervisor.sh\nRUN sh +x /tmp/build_config_supervisor.sh\nCOPY init.sh /etc/init-container.sh\n#  add the default configuration for the Gateway\nCOPY . /etc/api-gateway\nRUN adduser -S nginx-api-gateway \\\n && addgroup -S nginx-api-gateway\nEXPOSE 80/tcp 8080/tcp 8423/tcp 9000/tcp\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/etc/init-container.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"9e0b08b60406e4a3fcafbac262b51304","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Licensed to the Apache Software Foundation (ASF) under one or more\n#   contributor license agreements.  See the NOTICE file distributed with\n#   this work for additional information regarding copyright ownership.\n#   The ASF licenses this file to You under the Apache License, Version 2.0\n#   (the \"License\"); you may not use this file except in compliance with\n#   the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#   apigateway\n#\n#   VERSION               1.13.6.1\n#\n#   From https://hub.docker.com/_/alpine/\n#\nFROM alpine:3.9\n#   Busybox's ash shell supports pipefail, which is useful for tarballs\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n#   install dependencies\nRUN apk update \\\n && apk add gcc tar libtool zlib perl tzdata ca-certificates wget make musl-dev openssl-dev openssl pcre-dev g++ zlib-dev curl python perl-test-longstring perl-list-moreutils perl-http-message geoip-dev dumb-init jq \\\n && update-ca-certificates \\\n && rm -rf /var/cache/apk/*\n#   openresty build\nENV OPENRESTY_VERSION=\"1.13.6.2\" \\\n    PCRE_VERSION=\"8.37\" \\\n    TEST_NGINX_VERSION=\"0.24\" \\\n    OPM_VERSION=\"0.0.3\" \\\n    LUA_RESTY_HTTP_VERSION=\"0.10\" \\\n    LUA_RESTY_IPUTILS_VERSION=\"0.2.1\" \\\n    LUA_RESTY_STRING_VERSION=\"0.09\" \\\n    LUA_RESTY_LRUCACHE_VERSION=\"0.06\" \\\n    LUA_RESTY_CJOSE_VERSION=\"0.4\" \\\n    NETURL_LUA_VERSION=\"0.9-1\" \\\n    CJOSE_VERSION=\"0.5.1\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    _prefix=\"/usr/local\" \\\n    _exec_prefix=\"/usr/local\" \\\n    _localstatedir=\"/var\" \\\n    _sysconfdir=\"/etc\" \\\n    _sbindir=\"/usr/local/sbin\"\nRUN if [ x`uname -m ` = xs390x ] ; then echo \"Building LuaJIT for s390x\" \\\n && mkdir -p /tmp/luajit \\\n && cd /tmp/luajit \\\n && curl -k -L https://api.github.com/repos/linux-on-ibm-z/LuaJIT/tarball/v2.1 > luajit.tar.gz \\\n && tar -zxf luajit.tar.gz \\\n && cd linux-on-ibm-z-LuaJIT-* \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/luajit ; fi\nRUN if [ x`uname -m ` = xppc64le ] ; then echo \"Building LuaJIT for ppc64le\" \\\n && mkdir /tmp/luajit \\\n && cd /tmp/luajit \\\n && curl -k -L https://api.github.com/repos/PPC64/LuaJIT/tarball > luajit.tar.gz \\\n && tar -zxf luajit.tar.gz \\\n && cd PPC64-LuaJIT-* \\\n && make \\\n && make install \\\n && rm -rf /tmp/luajit ; fi\nRUN echo \" ... adding Openresty, NGINX and PCRE\" \\\n && mkdir -p /tmp/api-gateway \\\n && readonly NPROC=$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) \\\n && echo \"using up to $NPROC threads\" \\\n && cd /tmp/api-gateway/ \\\n && curl -k -L https://ftp.pcre.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz -o /tmp/api-gateway/pcre-${PCRE_VERSION}.tar.gz \\\n && curl -k -L https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz -o /tmp/api-gateway/openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./pcre-${PCRE_VERSION}.tar.gz \\\n && cd /tmp/api-gateway/openresty-${OPENRESTY_VERSION} \\\n && case \"$( uname -m ;)\" in (aarch64) luajitdir=\"\" pcrejit=\"--with-pcre-jit\" ; echo \" ... Patching ngx_lua and LuaJIT modules for ARM64 ... \" \\\n && rm -rf ./bundle/ngx_lua-* \\\n && curl -k -L https://github.com/openresty/lua-nginx-module/archive/v0.10.14rc3.tar.gz | tar -zxf - -C ./bundle \\\n && mv ./bundle/lua-nginx-module-0.10.14rc3 ./bundle/ngx_lua-0.10.14rc3 \\\n && rm -rf ./bundle/LuaJIT-* \\\n && curl -k -L https://github.com/openresty/luajit2/archive/v2.1-20181029.tar.gz | tar -zxf - -C ./bundle \\\n && mv ./bundle/luajit2-2.1-20181029 ./bundle/LuaJIT-2.2.1-20181029 ;;(s390x) luajitdir=\"=/usr/local/\" pcrejit=\"\" ;;(ppc64le) luajitdir=\"=/usr/local/\" pcrejit=\"--with-pcre-jit\" ;;(*) luajitdir=\"\" pcrejit=\"--with-pcre-jit\" ;; esac \\\n && echo \" - building debugging version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway-debug --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ ${pcrejit} --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_auth_request_module --with-http_v2_module --with-luajit${luajitdir} --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module --with-debug -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - building regular version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ ${pcrejit} --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_auth_request_module --with-http_v2_module --with-luajit${luajitdir} --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - adding Nginx Test support\" \\\n && curl -k -L https://github.com/openresty/test-nginx/archive/v${TEST_NGINX_VERSION}.tar.gz -o ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cd ${_prefix} \\\n && tar -xf ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && rm ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cp -r ${_prefix}/test-nginx-0.24/inc/* /usr/local/share/perl5/site_perl/ \\\n && ln -s ${_sbindir}/api-gateway-debug ${_sbindir}/nginx \\\n && cp /tmp/api-gateway/openresty-${OPENRESTY_VERSION}/build/install ${_prefix}/api-gateway/bin/resty-install \\\n && apk del g++ gcc make \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nRUN echo \" ... installing opm...\" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -k -L https://github.com/openresty/opm/archive/v${OPM_VERSION}.tar.gz -o /tmp/api-gateway/opm-${OPM_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/opm-${OPM_VERSION}.tar.gz -C /tmp/api-gateway \\\n && cd /tmp/api-gateway/opm-${OPM_VERSION} \\\n && cp bin/opm ${_prefix}/api-gateway/bin \\\n && cd ${_prefix}/api-gateway \\\n && mkdir -p site/manifest site/pod \\\n && cd site \\\n && ([ -x ../lualib ] || ln -s ../lualib ./ ) \\\n && ln -s ${_prefix}/api-gateway/bin/opm /usr/bin/opm \\\n && ln -s ${_prefix}/api-gateway/bin/resty /usr/bin/resty \\\n && rm -rf /tmp/api-gateway\nRUN echo \" ... installing opm packages ... \" \\\n && opm get pintsized/lua-resty-http=${LUA_RESTY_HTTP_VERSION} hamishforbes/lua-resty-iputils=${LUA_RESTY_IPUTILS_VERSION} openresty/lua-resty-string=${LUA_RESTY_STRING_VERSION} openresty/lua-resty-lrucache=${LUA_RESTY_LRUCACHE_VERSION} taylorking/lua-resty-cjose=${LUA_RESTY_CJOSE_VERSION} taylorking/lua-resty-rate-limit\nRUN echo \" ... installing neturl.lua ... \" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -k -L https://github.com/golgote/neturl/archive/${NETURL_LUA_VERSION}.tar.gz -o /tmp/api-gateway/neturl.lua-${NETURL_LUA_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/neturl.lua-${NETURL_LUA_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && export LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n && cd /tmp/api-gateway/neturl-${NETURL_LUA_VERSION} \\\n && cp lib/net/url.lua ${LUA_LIB_DIR} \\\n && rm -rf /tmp/api-gateway\nRUN echo \" ... installing cjose ... \" \\\n && apk add automake autoconf git gcc make jansson jansson-dev \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L -k https://github.com/cisco/cjose/archive/${CJOSE_VERSION}.tar.gz -o /tmp/api-gateway/cjose-${CJOSE_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/cjose-${CJOSE_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/cjose-${CJOSE_VERSION} \\\n && sh configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/api-gateway\nENV CONFIG_SUPERVISOR_VERSION=\"1.0.1-RC1\"\nCOPY build_config_supervisor.sh /tmp/build_config_supervisor.sh\nRUN sh +x /tmp/build_config_supervisor.sh\nCOPY init.sh /etc/init-container.sh\n#   add the default configuration for the Gateway\nCOPY . /etc/api-gateway\nRUN adduser -S nginx-api-gateway \\\n && addgroup -S nginx-api-gateway\nEXPOSE 80/tcp 8080/tcp 8423/tcp 9000/tcp\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/etc/init-container.sh\"]\n","originalDockerfileUglifiedHash":"00b6be05adbcc0517773f708faa6c187","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/47dd8e13e74493f4edbb3b00eb0d7de8085bac7c.dockerfile"}