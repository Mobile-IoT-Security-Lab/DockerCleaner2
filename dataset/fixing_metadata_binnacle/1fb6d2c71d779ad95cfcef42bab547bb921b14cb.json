{"seed":926095692,"processedDockerfileHash":"30d31da2c04079d9fd2e7bf33bca5ed6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Microsoft CNTK 2.6 (CUDA9) & Python 3.6\n#   ref: https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-Linux-Python\n#   mount from pre-builded common-cntk:2.6-py36-cuda9 as wheel binary.\nFROM lablup/common-cntk:2.6-py36-cuda9 AS cntk-binary\n#   base image\nFROM nvidia/cuda:9.2-cudnn7-runtime-ubuntu18.04\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n#   Install CNTK as the default backend for Keras\nENV KERAS_BACKEND=\"cntk\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget curl git-core vim-tiny zip unzip python3 python3-pip openmpi-bin libopenmpi2 libssl-dev libmpdec2 proj-bin libproj-dev libgeos-dev libgeos++-dev mime-support -y \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/\nENV PYTHONUNBUFFERED=\"1\" \\\n    PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n    LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/local/openmpi/lib\" \\\n    LANG=\"C.UTF-8\"\n#   Install CUDA-9.2 + cuDNN 7.4\nRUN ln -s /usr/local/cuda-9.2 /usr/local/cuda \\\n && ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.7.4.1 /usr/local/cuda/lib64/libcudnn.so \\\n && ldconfig\nCOPY --from=cntk-binary /tmp/*.whl /tmp\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3 \\\n && python3 -m pip install --no-cache-dir -U setuptools \\\n && python3 -m pip install --no-cache-dir wheel \\\n && python3 -m pip install --no-cache-dir pyzmq simplejson msgpack-python uvloop \\\n && python3 -m pip install --no-cache-dir aiozmq dataclasses tabulate \\\n && python3 -m pip install --no-cache-dir namedlist six \"python-dateutil>=2\" \\\n && python3 -m pip install --no-cache-dir h5py \\\n && python3 -m pip install --no-cache-dir Cython \\\n && python3 -m pip install --no-cache-dir numpy scipy \\\n && python3 -m pip install --no-cache-dir versioneer==0.17 \\\n && python3 -m pip install --no-cache-dir pyproj Cartopy==0.16 \\\n && python3 -m pip install --no-cache-dir matplotlib bokeh \\\n && python3 -m pip install --no-cache-dir pandas \\\n && python3 -m pip install --no-cache-dir seaborn \\\n && python3 -m pip install --no-cache-dir pillow \\\n && python3 -m pip install --no-cache-dir networkx cvxpy \\\n && python3 -m pip install --no-cache-dir scikit-learn scikit-image \\\n && python3 -m pip install --no-cache-dir pygments \\\n && python3 -m pip install --no-cache-dir wheel /tmp/*.whl \\\n && python3 -m pip install --no-cache-dir keras \\\n && python3 -m pip install --no-cache-dir keras_applications \\\n && python3 -m pip install --no-cache-dir keras_preprocessing \\\n && python3 -m pip install --no-cache-dir ipython \\\n && python3 -m pip install --no-cache-dir jupyter \\\n && python3 -m pip install --no-cache-dir jupyterlab \\\n && rm -rf /root/.cache \\\n && rm -f /tmp/*.whl\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2\n#   verification CNTK\n#  RUN python -c \"import cntk; print(cntk.__version__)\"\n#   Install ipython kernelspec\nRUN python -m ipykernel install --display-name \"CNTK 2.6 on Python 3.6 (CUDA 9.2)\" \\\n && cat /usr/local/share/jupyter/kernels/python3/kernel.json\n#   Install Jupyter notebook logo\nRUN mkdir -p /home/work/.jupyter/custom\nCOPY custom.css /home/work/.jupyter/custom/custom.css\nCOPY logo.svg /home/work/.jupyter/custom/logo.svg\n#   Backend.AI specifics LABEL ai.backend.kernelspec=\"1\" \\\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.envs.corecount=\"OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC\" \\\n      ai.backend.features=\"batch query uid-match user-input\" \\\n      ai.backend.base-distro=\"ubuntu16.04\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"1g\" \\\n      ai.backend.resource.min.cuda.device=\"1\" \\\n      ai.backend.resource.min.cuda.shares=\"0.1\" \\\n      ai.backend.runtime-type=\"python\" \\\n      ai.backend.runtime-path=\"/usr/bin/python\" \\\n      ai.backend.service-ports=\"ipython:pty:3000,jupyter:http:8080,jupyterlab:http:8090\"\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\n#   vim: ft=dockerfile\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Microsoft CNTK 2.6 (CUDA9) & Python 3.6\n#  ref: https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-Linux-Python\n#  mount from pre-builded common-cntk:2.6-py36-cuda9 as wheel binary.\nFROM lablup/common-cntk:2.6-py36-cuda9 AS cntk-binary\n#  base image\nFROM nvidia/cuda:9.2-cudnn7-runtime-ubuntu18.04\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n#  Install CNTK as the default backend for Keras\nENV KERAS_BACKEND=\"cntk\"\nRUN apt-get update \\\n && apt-get install ca-certificates wget curl git-core vim-tiny zip unzip python3 python3-pip openmpi-bin libopenmpi2 libssl-dev libmpdec2 proj-bin libproj-dev libgeos-dev libgeos++-dev mime-support -y \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/\nENV PYTHONUNBUFFERED=\"1\" \\\n    PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n    LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/local/openmpi/lib\" \\\n    LANG=\"C.UTF-8\"\n#  Install CUDA-9.2 + cuDNN 7.4\nRUN ln -s /usr/local/cuda-9.2 /usr/local/cuda \\\n && ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.7.4.1 /usr/local/cuda/lib64/libcudnn.so \\\n && ldconfig\nCOPY --from=cntk-binary /tmp/*.whl /tmp\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3 \\\n && python3 -m pip install --no-cache-dir -U setuptools \\\n && python3 -m pip install --no-cache-dir wheel \\\n && python3 -m pip install --no-cache-dir pyzmq simplejson msgpack-python uvloop \\\n && python3 -m pip install --no-cache-dir aiozmq dataclasses tabulate \\\n && python3 -m pip install --no-cache-dir namedlist six \"python-dateutil>=2\" \\\n && python3 -m pip install --no-cache-dir h5py \\\n && python3 -m pip install --no-cache-dir Cython \\\n && python3 -m pip install --no-cache-dir numpy scipy \\\n && python3 -m pip install --no-cache-dir versioneer==0.17 \\\n && python3 -m pip install --no-cache-dir pyproj Cartopy==0.16 \\\n && python3 -m pip install --no-cache-dir matplotlib bokeh \\\n && python3 -m pip install --no-cache-dir pandas \\\n && python3 -m pip install --no-cache-dir seaborn \\\n && python3 -m pip install --no-cache-dir pillow \\\n && python3 -m pip install --no-cache-dir networkx cvxpy \\\n && python3 -m pip install --no-cache-dir scikit-learn scikit-image \\\n && python3 -m pip install --no-cache-dir pygments \\\n && python3 -m pip install --no-cache-dir wheel /tmp/*.whl \\\n && python3 -m pip install --no-cache-dir keras \\\n && python3 -m pip install --no-cache-dir keras_applications \\\n && python3 -m pip install --no-cache-dir keras_preprocessing \\\n && python3 -m pip install --no-cache-dir ipython \\\n && python3 -m pip install --no-cache-dir jupyter \\\n && python3 -m pip install --no-cache-dir jupyterlab \\\n && rm -rf /root/.cache \\\n && rm -f /tmp/*.whl\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2\n#  verification CNTK\n# RUN python -c \"import cntk; print(cntk.__version__)\"\n#  Install ipython kernelspec\nRUN python -m ipykernel install --display-name \"CNTK 2.6 on Python 3.6 (CUDA 9.2)\" \\\n && cat /usr/local/share/jupyter/kernels/python3/kernel.json\n#  Install Jupyter notebook logo\nRUN mkdir -p /home/work/.jupyter/custom\nCOPY custom.css /home/work/.jupyter/custom/custom.css\nCOPY logo.svg /home/work/.jupyter/custom/logo.svg\n#  Backend.AI specifics LABEL ai.backend.kernelspec=\"1\" \\\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.envs.corecount=\"OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC\" \\\n      ai.backend.features=\"batch query uid-match user-input\" \\\n      ai.backend.base-distro=\"ubuntu16.04\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"1g\" \\\n      ai.backend.resource.min.cuda.device=\"1\" \\\n      ai.backend.resource.min.cuda.shares=\"0.1\" \\\n      ai.backend.runtime-type=\"python\" \\\n      ai.backend.runtime-path=\"/usr/bin/python\" \\\n      ai.backend.service-ports=\"ipython:pty:3000,jupyter:http:8080,jupyterlab:http:8090\"\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\n#  vim: ft=dockerfile\n","injectedSmells":[],"originalDockerfileHash":"683d94c5dd3f06b7940d58d83733194c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Microsoft CNTK 2.6 (CUDA9) & Python 3.6\n#   ref: https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-Linux-Python\n#   mount from pre-builded common-cntk:2.6-py36-cuda9 as wheel binary.\nFROM lablup/common-cntk:2.6-py36-cuda9 AS cntk-binary\n#   base image\nFROM nvidia/cuda:9.2-cudnn7-runtime-ubuntu18.04\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n#   Install CNTK as the default backend for Keras\nENV KERAS_BACKEND=\"cntk\"\nRUN apt-get update \\\n && apt-get install ca-certificates wget curl git-core vim-tiny zip unzip python3 python3-pip openmpi-bin libopenmpi2 libssl-dev libmpdec2 proj-bin libproj-dev libgeos-dev libgeos++-dev mime-support -y \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/\nENV PYTHONUNBUFFERED=\"1\" \\\n    PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n    LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/local/openmpi/lib\" \\\n    LANG=\"C.UTF-8\"\n#   Install CUDA-9.2 + cuDNN 7.4\nRUN ln -s /usr/local/cuda-9.2 /usr/local/cuda \\\n && ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.7.4.1 /usr/local/cuda/lib64/libcudnn.so \\\n && ldconfig\nCOPY --from=cntk-binary /tmp/*.whl /tmp\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3 \\\n && python3 -m pip install --no-cache-dir -U setuptools \\\n && python3 -m pip install --no-cache-dir wheel \\\n && python3 -m pip install --no-cache-dir pyzmq simplejson msgpack-python uvloop \\\n && python3 -m pip install --no-cache-dir aiozmq dataclasses tabulate \\\n && python3 -m pip install --no-cache-dir namedlist six \"python-dateutil>=2\" \\\n && python3 -m pip install --no-cache-dir h5py \\\n && python3 -m pip install --no-cache-dir Cython \\\n && python3 -m pip install --no-cache-dir numpy scipy \\\n && python3 -m pip install --no-cache-dir versioneer==0.17 \\\n && python3 -m pip install --no-cache-dir pyproj Cartopy==0.16 \\\n && python3 -m pip install --no-cache-dir matplotlib bokeh \\\n && python3 -m pip install --no-cache-dir pandas \\\n && python3 -m pip install --no-cache-dir seaborn \\\n && python3 -m pip install --no-cache-dir pillow \\\n && python3 -m pip install --no-cache-dir networkx cvxpy \\\n && python3 -m pip install --no-cache-dir scikit-learn scikit-image \\\n && python3 -m pip install --no-cache-dir pygments \\\n && python3 -m pip install --no-cache-dir wheel /tmp/*.whl \\\n && python3 -m pip install --no-cache-dir keras \\\n && python3 -m pip install --no-cache-dir keras_applications \\\n && python3 -m pip install --no-cache-dir keras_preprocessing \\\n && python3 -m pip install --no-cache-dir ipython \\\n && python3 -m pip install --no-cache-dir jupyter \\\n && python3 -m pip install --no-cache-dir jupyterlab \\\n && rm -rf /root/.cache \\\n && rm -f /tmp/*.whl\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2\n#   verification CNTK\n#  RUN python -c \"import cntk; print(cntk.__version__)\"\n#   Install ipython kernelspec\nRUN python -m ipykernel install --display-name \"CNTK 2.6 on Python 3.6 (CUDA 9.2)\" \\\n && cat /usr/local/share/jupyter/kernels/python3/kernel.json\n#   Install Jupyter notebook logo\nRUN mkdir -p /home/work/.jupyter/custom\nCOPY custom.css /home/work/.jupyter/custom/custom.css\nCOPY logo.svg /home/work/.jupyter/custom/logo.svg\n#   Backend.AI specifics LABEL ai.backend.kernelspec=\"1\" \\\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.envs.corecount=\"OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC\" \\\n      ai.backend.features=\"batch query uid-match user-input\" \\\n      ai.backend.base-distro=\"ubuntu16.04\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"1g\" \\\n      ai.backend.resource.min.cuda.device=\"1\" \\\n      ai.backend.resource.min.cuda.shares=\"0.1\" \\\n      ai.backend.runtime-type=\"python\" \\\n      ai.backend.runtime-path=\"/usr/bin/python\" \\\n      ai.backend.service-ports=\"ipython:pty:3000,jupyter:http:8080,jupyterlab:http:8090\"\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\n#   vim: ft=dockerfile\n","originalDockerfileUglifiedHash":"1023f6538fcb4787b6d8d26023569a86","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1fb6d2c71d779ad95cfcef42bab547bb921b14cb.dockerfile"}