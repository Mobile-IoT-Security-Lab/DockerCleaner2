{"seed":1055340326,"processedDockerfileHash":"959d131035560d1f34d1781ef0b57e4b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM swerpbox/alpine-base\nARG NGINX_VERSION=1.11.9\nARG BROTLI_COMMIT=1b364aeb42a0919e7c08646aa4f2f50e28d69fa5\nARG NGX_BROTLI_COMMIT=12529813a9f8475718370a19007c7905601a62ad\nLABEL org.label-schema.vendor=\"SwerpBox: Frontend\" \\\n      org.label-schema.build-date=\"2017-01-27T00:12:00+00:00\" \\\n      org.label-schema.name=\"Frontend (nginx) running on Alpine 3.5\" \\\n      org.label-schema.vcs-type=\"git\" \\\n      org.label-schema.vcs-url=\"https://github.com/strues/swerpbox\" \\\n      maintainer=\"Steven Truesdell <steven@strues.io>\"\nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && CONFIG=\" --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/logs/frontend/nginx-error.log --http-log-path=/logs/frontend/nginx-access.log --pid-path=/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=swerp --group=swerp --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_perl_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-file-aio --with-http_v2_module --with-ipv6 --add-module=/usr/src/ngx_brotli --with-cc-opt=-Wno-error \" \\\n && apk add gcc=12.2.1_git20220924-r4 libc-dev=0.7.2-r3 make=4.3-r1 openssl-dev=3.0.8-r3 pcre-dev=8.45-r2 zlib-dev=1.2.13-r0 linux-headers=5.19.5-r0 curl=7.88.1-r1 gnupg=2.2.40-r0 libxslt-dev=1.1.37-r1 gd-dev=2.3.3-r3 geoip-dev=1.6.12-r3 perl-dev=5.36.0-r0 --no-cache --virtual .build-deps \\\n && apk add autoconf=2.71-r1 libtool=2.4.7-r1 automake=1.16.5-r1 git=2.38.4-r1 g++=12.2.1_git20220924-r4 cmake=3.24.4-r0 --no-cache --virtual .brotli-build-deps \\\n && mkdir -p /usr/src \\\n && mkdir -p /logs/frontend \\\n && cd /usr/src \\\n && git clone https://github.com/google/brotli.git \\\n && cd brotli \\\n && git checkout -b $BROTLI_COMMIT $BROTLI_COMMIT \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=/usr/lib -DBUILD_SHARED_LIBS=ON \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && cd .. \\\n && rm -rf brotli \\\n && git clone https://github.com/google/ngx_brotli.git \\\n && cd ngx_brotli \\\n && git checkout -b $NGX_BROTLI_COMMIT $NGX_BROTLI_COMMIT \\\n && cd .. \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \\\n && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && rm -rf /etc/nginx/conf.d/* \\\n && mkdir /etc/nginx/vhost.d/ \\\n && mkdir -p /var/www/public \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n && rm -rf /usr/src/ngx_brotli \\\n && apk add gettext=0.21.1-r1 --no-cache --virtual .gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --no-cache --virtual .nginx-rundeps \\\n && apk del .build-deps \\\n && apk del .brotli-build-deps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && ln -sf /dev/stdout /logs/frontend/nginx-access.log \\\n && ln -sf /dev/stderr /logs/frontend/nginx-error.log \\\n && chmod -R 0777 /logs/frontend \\\n && mkdir -p /var/cache/nginx/client_temp \\\n && chmod 0777 /var/cache/nginx/client_temp\nRUN apk add apache2-utils=2.4.57-r0 --no-cache\nEXPOSE 80/tcp 443/tcp\nCOPY rootfs/ /\nVOLUME [\"/config\", \"/data\", \"/logs\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM swerpbox/alpine-base\nARG NGINX_VERSION=1.11.9\nARG BROTLI_COMMIT=1b364aeb42a0919e7c08646aa4f2f50e28d69fa5\nARG NGX_BROTLI_COMMIT=12529813a9f8475718370a19007c7905601a62ad\nLABEL org.label-schema.vendor=\"SwerpBox: Frontend\" \\\n      org.label-schema.build-date=\"2017-01-27T00:12:00+00:00\" \\\n      org.label-schema.name=\"Frontend (nginx) running on Alpine 3.5\" \\\n      org.label-schema.vcs-type=\"git\" \\\n      org.label-schema.vcs-url=\"https://github.com/strues/swerpbox\" \\\n      maintainer=\"Steven Truesdell <steven@strues.io>\"\nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && CONFIG=\" --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/logs/frontend/nginx-error.log --http-log-path=/logs/frontend/nginx-access.log --pid-path=/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=swerp --group=swerp --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_perl_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-file-aio --with-http_v2_module --with-ipv6 --add-module=/usr/src/ngx_brotli --with-cc-opt=-Wno-error \" \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev perl-dev \\\n && apk add --no-cache --virtual .brotli-build-deps autoconf libtool automake git g++ cmake \\\n && mkdir -p /usr/src \\\n && mkdir -p /logs/frontend \\\n && cd /usr/src \\\n && git clone https://github.com/google/brotli.git \\\n && cd brotli \\\n && git checkout -b $BROTLI_COMMIT $BROTLI_COMMIT \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=/usr/lib -DBUILD_SHARED_LIBS=ON \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && cd .. \\\n && rm -rf brotli \\\n && git clone https://github.com/google/ngx_brotli.git \\\n && cd ngx_brotli \\\n && git checkout -b $NGX_BROTLI_COMMIT $NGX_BROTLI_COMMIT \\\n && cd .. \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \\\n && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && rm -rf /etc/nginx/conf.d/* \\\n && mkdir /etc/nginx/vhost.d/ \\\n && mkdir -p /var/www/public \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n && rm -rf /usr/src/ngx_brotli \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && apk del .brotli-build-deps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && ln -sf /dev/stdout /logs/frontend/nginx-access.log \\\n && ln -sf /dev/stderr /logs/frontend/nginx-error.log \\\n && chmod -R 0777 /logs/frontend \\\n && mkdir -p /var/cache/nginx/client_temp \\\n && chmod 0777 /var/cache/nginx/client_temp\nRUN apk add --no-cache apache2-utils\nEXPOSE 80/tcp 443/tcp\nCOPY rootfs/ /\nVOLUME [\"/config\", \"/data\", \"/logs\"]\n","injectedSmells":[],"originalDockerfileHash":"82a15de0e3029d9864a3273d3ee73726","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM swerpbox/alpine-base\nARG NGINX_VERSION=1.11.9\nARG BROTLI_COMMIT=1b364aeb42a0919e7c08646aa4f2f50e28d69fa5\nARG NGX_BROTLI_COMMIT=12529813a9f8475718370a19007c7905601a62ad\nLABEL org.label-schema.vendor=\"SwerpBox: Frontend\" \\\n      org.label-schema.build-date=\"2017-01-27T00:12:00+00:00\" \\\n      org.label-schema.name=\"Frontend (nginx) running on Alpine 3.5\" \\\n      org.label-schema.vcs-type=\"git\" \\\n      org.label-schema.vcs-url=\"https://github.com/strues/swerpbox\" \\\n      maintainer=\"Steven Truesdell <steven@strues.io>\"\nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && CONFIG=\" --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/logs/frontend/nginx-error.log --http-log-path=/logs/frontend/nginx-access.log --pid-path=/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=swerp --group=swerp --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_perl_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-file-aio --with-http_v2_module --with-ipv6 --add-module=/usr/src/ngx_brotli --with-cc-opt=-Wno-error \" \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev perl-dev \\\n && apk add --no-cache --virtual .brotli-build-deps autoconf libtool automake git g++ cmake \\\n && mkdir -p /usr/src \\\n && mkdir -p /logs/frontend \\\n && cd /usr/src \\\n && git clone https://github.com/google/brotli.git \\\n && cd brotli \\\n && git checkout -b $BROTLI_COMMIT $BROTLI_COMMIT \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=/usr/lib -DBUILD_SHARED_LIBS=ON \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && cd .. \\\n && rm -rf brotli \\\n && git clone https://github.com/google/ngx_brotli.git \\\n && cd ngx_brotli \\\n && git checkout -b $NGX_BROTLI_COMMIT $NGX_BROTLI_COMMIT \\\n && cd .. \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \\\n && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && rm -rf /etc/nginx/conf.d/* \\\n && mkdir /etc/nginx/vhost.d/ \\\n && mkdir -p /var/www/public \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n && rm -rf /usr/src/ngx_brotli \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && apk del .brotli-build-deps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && ln -sf /dev/stdout /logs/frontend/nginx-access.log \\\n && ln -sf /dev/stderr /logs/frontend/nginx-error.log \\\n && chmod -R 0777 /logs/frontend \\\n && mkdir -p /var/cache/nginx/client_temp \\\n && chmod 0777 /var/cache/nginx/client_temp\nRUN apk add --no-cache apache2-utils\nEXPOSE 80/tcp 443/tcp\nCOPY rootfs/ /\nVOLUME [\"/config\", \"/data\", \"/logs\"]\n","originalDockerfileUglifiedHash":"82a15de0e3029d9864a3273d3ee73726","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ac955ebf6ba000e5e7a43952faa1f8da7580fe8d.dockerfile"}