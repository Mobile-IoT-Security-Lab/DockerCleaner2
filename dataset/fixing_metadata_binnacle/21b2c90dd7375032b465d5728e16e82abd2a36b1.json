{"seed":2089519343,"processedDockerfileHash":"41220b9a67edec2c07f5753d9e0d8743","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM node:10-alpine AS glibcbuild\nENV LANG=\"C.UTF-8\"\n#   Here we install GNU libc (aka glibc) and set C.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.29-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add wget=1.20.3-r0 ca-certificates=20191127-r2 --no-cache --virtual=.build-dependencies \\\n && echo \"-----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m 1QIDAQAB -----END PUBLIC KEY-----\" | sed 's/ */\\n/g' > \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" --no-cache \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nFROM glibcbuild\nARG GITHUB_TOKEN\nARG PY_REQUIREMENTS\nENV TINI_VERSION=\"v0.16.1\"\nLABEL band.images.theia.version=\"0.2.0\"\nENV RST_UID=\"472\" \\\n    RST_GID=\"472\" \\\n    WORKSPACE_PATH=\"/home/theia/project\" \\\n    BUILD_PATH=\"/home/theia/.build\" \\\n    THEIA=\"/home/theia/.build/theia\" \\\n    LANG=\"C.UTF-8\"\nRUN apk add ca-certificates=20191127-r2 make=4.2.1-r2 gcc=9.3.0-r0 g++=9.3.0-r0 util-linux=2.34-r1 pciutils=3.6.2-r1 usbutils=012-r1 coreutils=8.31-r0 binutils=2.33.1-r1 findutils=4.7.0-r0 grep=3.3-r0 libffi-dev=3.2.1-r6 gzip=1.10-r0 bzip2=1.0.8-r1 curl=7.79.1-r0 nano=4.6-r0 jq=1.6-r0 git=2.24.4-r0 openssh-client=8.1_p1-r1 su-exec=0.2-r1 sudo=1.9.5p2-r1 zsh=5.7.1-r0 python --no-cache\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/zsh ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh \\\n && /opt/conda/bin/conda clean -tipsy \\\n && chmod 0755 /opt/conda/etc/profile.d/conda.sh\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/bin/tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini\nRUN chmod +x /usr/bin/tini\nWORKDIR /home/theia\nRUN echo \"theia ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/default \\\n && chmod 0440 /etc/sudoers.d/default \\\n && addgroup -g ${RST_GID} theia \\\n && adduser -u ${RST_UID} -G theia -s /bin/sh -D theia \\\n && chmod g+rw /home/theia \\\n && mkdir -p ${HOME}/.build ${HOME}/project \\\n && chown -R theia:theia /opt/conda\nUSER theia\nENV PORT_THEIA=\"${PORT_THEIA:-8000}\" \\\n    PORT=\"${PORT_DEV:-8080}\" \\\n    SHELL=\"/bin/zsh\" \\\n    USE_LOCAL_GIT=\"true\" \\\n    VIRTUAL_ENV_DISABLE_PROMPT=\"yes\" \\\n    JSON_LOGS=\"0\"\n#   ##### ZSH\nCOPY --chown=theia:theia prezto.tgz init_zprezto ${BUILD_PATH}/\nRUN cd ${BUILD_PATH} \\\n && tar -zxf prezto.tgz \\\n && mv prezto $HOME/.zprezto \\\n && ./init_zprezto\n#   ##### Node.js part\nCOPY --chown=theia:theia package/package.json ./.build\nRUN cd ${BUILD_PATH} \\\n && yarn --cache-folder ./ycache \\\n && rm -rf ./ycache\nRUN cd ${BUILD_PATH} \\\n && yarn theia build\nENV NODE_ENV=\"production\"\n#   ##### Python part\nRUN /opt/conda/bin/conda upgrade -y pip \\\n && /opt/conda/bin/conda config --add channels conda-forge \\\n && /opt/conda/bin/conda clean --all\nENV PATH=\"/opt/conda/bin:$PATH\"\nCOPY --chown=theia:theia requirements.txt .editorconfig ${BUILD_PATH}/\nRUN pip install git+https://github.com/rockstat/band@master#egg==and -U \\\n && pip install -U -r ${BUILD_PATH}/requirements.txt\nCOPY --chown=theia:theia init_app ./.build/\nCOPY --chown=theia:theia .theia/settings.json .theia/tasks.json .theia/tasks.json-tmpl ./.build/.theia/\nEXPOSE 8080/tcp 8000/tcp\n#   ENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD ${BUILD_PATH}/init_app\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\n","originalDockerfile":"FROM node:10-alpine AS glibcbuild\nENV LANG=\"C.UTF-8\"\n#  Here we install GNU libc (aka glibc) and set C.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.29-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add --no-cache --virtual=.build-dependencies wget ca-certificates \\\n && echo \"-----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m 1QIDAQAB -----END PUBLIC KEY-----\" | sed 's/ */\\n/g' > \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add --no-cache \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nFROM glibcbuild\nARG GITHUB_TOKEN\nARG PY_REQUIREMENTS\nENV TINI_VERSION=\"v0.16.1\"\nLABEL band.images.theia.version=\"0.2.0\"\nENV RST_UID=\"472\" \\\n    RST_GID=\"472\" \\\n    WORKSPACE_PATH=\"/home/theia/project\" \\\n    BUILD_PATH=\"/home/theia/.build\" \\\n    THEIA=\"/home/theia/.build/theia\" \\\n    LANG=\"C.UTF-8\"\nRUN apk add --no-cache ca-certificates make gcc g++ util-linux pciutils usbutils coreutils binutils findutils grep libffi-dev gzip bzip2 curl nano jq git openssh-client su-exec sudo zsh python\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/zsh ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh \\\n && /opt/conda/bin/conda clean -tipsy \\\n && chmod 0755 /opt/conda/etc/profile.d/conda.sh\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\nWORKDIR /home/theia\nRUN echo \"theia ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/default \\\n && chmod 0440 /etc/sudoers.d/default \\\n && addgroup -g ${RST_GID} theia \\\n && adduser -u ${RST_UID} -G theia -s /bin/sh -D theia \\\n && chmod g+rw /home/theia \\\n && mkdir -p ${HOME}/.build ${HOME}/project \\\n && chown -R theia:theia /opt/conda\nUSER theia\nENV PORT_THEIA=\"${PORT_THEIA:-8000}\" \\\n    PORT=\"${PORT_DEV:-8080}\" \\\n    SHELL=\"/bin/zsh\" \\\n    USE_LOCAL_GIT=\"true\" \\\n    VIRTUAL_ENV_DISABLE_PROMPT=\"yes\" \\\n    JSON_LOGS=\"0\"\n#  ##### ZSH\nCOPY --chown=theia:theia prezto.tgz init_zprezto ${BUILD_PATH}/\nRUN cd ${BUILD_PATH} \\\n && tar -zxf prezto.tgz \\\n && mv prezto $HOME/.zprezto \\\n && ./init_zprezto\n#  ##### Node.js part\nCOPY --chown=theia:theia package/package.json ./.build\nRUN cd ${BUILD_PATH} \\\n && yarn --cache-folder ./ycache \\\n && rm -rf ./ycache\nRUN cd ${BUILD_PATH} \\\n && yarn theia build\nENV NODE_ENV=\"production\"\n#  ##### Python part\nRUN /opt/conda/bin/conda upgrade -y pip \\\n && /opt/conda/bin/conda config --add channels conda-forge \\\n && /opt/conda/bin/conda clean --all\nENV PATH=\"/opt/conda/bin:$PATH\"\nCOPY --chown=theia:theia requirements.txt .editorconfig ${BUILD_PATH}/\nRUN pip install git+https://github.com/rockstat/band@master#egg==and -U \\\n && pip install -U -r ${BUILD_PATH}/requirements.txt\nCOPY --chown=theia:theia init_app ./.build/\nCOPY --chown=theia:theia .theia/settings.json .theia/tasks.json .theia/tasks.json-tmpl ./.build/.theia/\nEXPOSE 8080/tcp 8000/tcp\n#  ENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD ${BUILD_PATH}/init_app\n","injectedSmells":[],"originalDockerfileHash":"0ac309515ecd70fe229f7a6a7c8b88ef","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM node:10-alpine AS glibcbuild\nENV LANG=\"C.UTF-8\"\n#   Here we install GNU libc (aka glibc) and set C.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.29-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add --no-cache --virtual=.build-dependencies wget ca-certificates \\\n && echo \"-----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m 1QIDAQAB -----END PUBLIC KEY-----\" | sed 's/ */\\n/g' > \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add --no-cache \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nFROM glibcbuild\nARG GITHUB_TOKEN\nARG PY_REQUIREMENTS\nENV TINI_VERSION=\"v0.16.1\"\nLABEL band.images.theia.version=\"0.2.0\"\nENV RST_UID=\"472\" \\\n    RST_GID=\"472\" \\\n    WORKSPACE_PATH=\"/home/theia/project\" \\\n    BUILD_PATH=\"/home/theia/.build\" \\\n    THEIA=\"/home/theia/.build/theia\" \\\n    LANG=\"C.UTF-8\"\nRUN apk add --no-cache ca-certificates make gcc g++ util-linux pciutils usbutils coreutils binutils findutils grep libffi-dev gzip bzip2 curl nano jq git openssh-client su-exec sudo zsh python\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/zsh ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh \\\n && /opt/conda/bin/conda clean -tipsy \\\n && chmod 0755 /opt/conda/etc/profile.d/conda.sh\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\nWORKDIR /home/theia\nRUN echo \"theia ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/default \\\n && chmod 0440 /etc/sudoers.d/default \\\n && addgroup -g ${RST_GID} theia \\\n && adduser -u ${RST_UID} -G theia -s /bin/sh -D theia \\\n && chmod g+rw /home/theia \\\n && mkdir -p ${HOME}/.build ${HOME}/project \\\n && chown -R theia:theia /opt/conda\nUSER theia\nENV PORT_THEIA=\"${PORT_THEIA:-8000}\" \\\n    PORT=\"${PORT_DEV:-8080}\" \\\n    SHELL=\"/bin/zsh\" \\\n    USE_LOCAL_GIT=\"true\" \\\n    VIRTUAL_ENV_DISABLE_PROMPT=\"yes\" \\\n    JSON_LOGS=\"0\"\n#   ##### ZSH\nCOPY --chown=theia:theia prezto.tgz init_zprezto ${BUILD_PATH}/\nRUN cd ${BUILD_PATH} \\\n && tar -zxf prezto.tgz \\\n && mv prezto $HOME/.zprezto \\\n && ./init_zprezto\n#   ##### Node.js part\nCOPY --chown=theia:theia package/package.json ./.build\nRUN cd ${BUILD_PATH} \\\n && yarn --cache-folder ./ycache \\\n && rm -rf ./ycache\nRUN cd ${BUILD_PATH} \\\n && yarn theia build\nENV NODE_ENV=\"production\"\n#   ##### Python part\nRUN /opt/conda/bin/conda upgrade -y pip \\\n && /opt/conda/bin/conda config --add channels conda-forge \\\n && /opt/conda/bin/conda clean --all\nENV PATH=\"/opt/conda/bin:$PATH\"\nCOPY --chown=theia:theia requirements.txt .editorconfig ${BUILD_PATH}/\nRUN pip install git+https://github.com/rockstat/band@master#egg==and -U \\\n && pip install -U -r ${BUILD_PATH}/requirements.txt\nCOPY --chown=theia:theia init_app ./.build/\nCOPY --chown=theia:theia .theia/settings.json .theia/tasks.json .theia/tasks.json-tmpl ./.build/.theia/\nEXPOSE 8080/tcp 8000/tcp\n#   ENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD ${BUILD_PATH}/init_app\n","originalDockerfileUglifiedHash":"fbcdc281dcd79e6810ddcae06477e4f2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/21b2c90dd7375032b465d5728e16e82abd2a36b1.dockerfile"}