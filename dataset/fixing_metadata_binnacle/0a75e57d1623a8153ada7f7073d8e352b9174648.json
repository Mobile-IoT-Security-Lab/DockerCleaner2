{"seed":477659991,"processedDockerfileHash":"803761e17ac768fdd22dfc0218597b65","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nENV HOME=\"/home/scion\"\nENV BASE=\"/home/scion/go/src/github.com/scionproto/scion\"\nENV GOPATH=\"$HOME/go\"\nENV PATH=\"$HOME/bin:/usr/local/go/bin:$GOPATH/bin:$HOME/.local/bin:$PATH\"\nWORKDIR $BASE\n#   Use eatmydata to speed up a lot of the building\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y eatmydata sudo \\\n && apt-get clean\nRUN set -ex ; ln -s /usr/bin/eatmydata /usr/local/bin/apt-get ; ln -s /usr/bin/eatmydata /usr/local/bin/dpkg ; ln -s /usr/bin/eatmydata /usr/local/bin/pip ; ln -s /usr/bin/eatmydata /usr/local/bin/pip3\nRUN useradd -u 30041 -s /bin/bash scion\nRUN groupadd -g 939 --system docker\nRUN usermod -aG docker scion\nRUN echo \"scion ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/scion\n#   Provide tmpfs at /run/shm while inside non-privileged docker\nRUN ln -s /dev/shm /run/shm\nUSER scion\nRUN sudo chown -R scion: $HOME\n#  ################################################################################\n#  # Install dependencies\n#  ################################################################################\nCOPY env/common.sh env/\n#   Debian packages\nCOPY env/debian env/debian\nRUN sudo apt-get update \\\n && APTARGS=-y env/debian/deps \\\n && sudo apt-get clean\n#   Install Bazel\nCOPY tools/install_bazel install_bazel\nRUN sudo ./install_bazel \\\n && rm install_bazel\n#   Prepare a directory for caching\nRUN sudo mkdir -p /scioncache\n#   Pip packages\nCOPY env/pip3 env/pip3\nCOPY env/pip2 env/pip2\nRUN set -ex ; env/pip2/deps ; env/pip3/deps ; sudo tar czf /scioncache/python_local.tar.gz --owner=scion -C ~ .local ; rm -r ~/.cache/pip ~/.local\n#   Pip2 packages\nCOPY env/pip2 env/pip2\nRUN env/pip2/deps \\\n && rm -r ~/.cache/pip\n#   zlog packages\nCOPY env/zlog env/zlog\nRUN eatmydata env/zlog/deps\n#   Dependencies managed by Bazel.\nCOPY WORKSPACE .\nCOPY tools/fetch.sh tools/\nRUN set -ex ; tools/fetch.sh > BUILD.bazel; bazel fetch --noshow_progress //:fetch 2>&1; rm -rf /home/scion/.cache/bazel/_bazel_scion/*/external/*/.git ; sudo tar czf /scioncache/bazel.tar.gz --owner=scion -C ~ .cache/bazel ; sudo rm -r ~/.cache/bazel ; sudo rm -r ./*\n#   Install docker and docker-compose\nCOPY tools/install_docker install_docker\nRUN sudo ./install_docker \\\n && rm install_docker \\\n && sudo usermod -aG docker scion\n#   Install su-exec\nARG SU_EXEC_COMMIT=e9664105e1f0b48024e52f454c6b78d15b5daa57\nRUN set -ex ; mkdir su-exec ; curl -SL https://github.com/anapaya/su-exec/archive/${SU_EXEC_COMMIT}.tar.gz | tar xz -C su-exec --strip-components=1 ; make -C su-exec ; sudo mv su-exec/su-exec /sbin/ ; rm -r su-exec\n#  ################################################################################\n#  # Dependencies are now installed, carry on with the rest.\n#  ################################################################################\n#   Install bash config\nCOPY docker/profile $HOME/.profile\n#   Install basic screen config\nCOPY docker/screenrc $HOME/.screenrc\n#   Fix ownership one last time. Chown is an expensive operation in terms of docker\n#   image size so chown only the files that belong to different users.\nRUN sudo find $HOME -not -user scion -execdir chown scion {} +\nCOPY docker/docker-entrypoint.sh /\nCMD []\nENTRYPOINT [\"/bin/bash\", \"-l\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nENV HOME=\"/home/scion\"\nENV BASE=\"/home/scion/go/src/github.com/scionproto/scion\"\nENV GOPATH=\"$HOME/go\"\nENV PATH=\"$HOME/bin:/usr/local/go/bin:$GOPATH/bin:$HOME/.local/bin:$PATH\"\nWORKDIR $BASE\n#  Use eatmydata to speed up a lot of the building\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y eatmydata sudo \\\n && apt-get clean\nRUN set -ex ; ln -s /usr/bin/eatmydata /usr/local/bin/apt-get ; ln -s /usr/bin/eatmydata /usr/local/bin/dpkg ; ln -s /usr/bin/eatmydata /usr/local/bin/pip ; ln -s /usr/bin/eatmydata /usr/local/bin/pip3\nRUN useradd -u 30041 -s /bin/bash scion\nRUN groupadd -g 939 --system docker\nRUN usermod -aG docker scion\nRUN echo \"scion ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/scion\n#  Provide tmpfs at /run/shm while inside non-privileged docker\nRUN ln -s /dev/shm /run/shm\nUSER scion\nRUN sudo chown -R scion: $HOME\n# ################################################################################\n# # Install dependencies\n# ################################################################################\nCOPY env/common.sh env/\n#  Debian packages\nCOPY env/debian env/debian\nRUN sudo apt-get update \\\n && APTARGS=-y env/debian/deps \\\n && sudo apt-get clean\n#  Install Bazel\nCOPY tools/install_bazel install_bazel\nRUN sudo ./install_bazel \\\n && rm install_bazel\n#  Prepare a directory for caching\nRUN sudo mkdir -p /scioncache\n#  Pip packages\nCOPY env/pip3 env/pip3\nCOPY env/pip2 env/pip2\nRUN set -ex ; env/pip2/deps ; env/pip3/deps ; sudo tar czf /scioncache/python_local.tar.gz --owner=scion -C ~ .local ; rm -r ~/.cache/pip ~/.local\n#  Pip2 packages\nCOPY env/pip2 env/pip2\nRUN env/pip2/deps \\\n && rm -r ~/.cache/pip\n#  zlog packages\nCOPY env/zlog env/zlog\nRUN eatmydata env/zlog/deps\n#  Dependencies managed by Bazel.\nCOPY WORKSPACE .\nCOPY tools/fetch.sh tools/\nRUN set -ex ; tools/fetch.sh > BUILD.bazel; bazel fetch --noshow_progress //:fetch 2>&1; rm -rf /home/scion/.cache/bazel/_bazel_scion/*/external/*/.git ; sudo tar czf /scioncache/bazel.tar.gz --owner=scion -C ~ .cache/bazel ; sudo rm -r ~/.cache/bazel ; sudo rm -r ./*\n#  Install docker and docker-compose\nCOPY tools/install_docker install_docker\nRUN sudo ./install_docker \\\n && rm install_docker \\\n && sudo usermod -aG docker scion\n#  Install su-exec\nARG SU_EXEC_COMMIT=e9664105e1f0b48024e52f454c6b78d15b5daa57\nRUN set -ex ; mkdir su-exec ; curl -SL https://github.com/anapaya/su-exec/archive/${SU_EXEC_COMMIT}.tar.gz | tar xz -C su-exec --strip-components=1 ; make -C su-exec ; sudo mv su-exec/su-exec /sbin/ ; rm -r su-exec\n# ################################################################################\n# # Dependencies are now installed, carry on with the rest.\n# ################################################################################\n#  Install bash config\nCOPY docker/profile $HOME/.profile\n#  Install basic screen config\nCOPY docker/screenrc $HOME/.screenrc\n#  Fix ownership one last time. Chown is an expensive operation in terms of docker\n#  image size so chown only the files that belong to different users.\nRUN sudo find $HOME -not -user scion -execdir chown scion {} +\nCOPY docker/docker-entrypoint.sh /\nCMD []\nENTRYPOINT [\"/bin/bash\", \"-l\"]\n","injectedSmells":[],"originalDockerfileHash":"dded7bb75706a7a6309300de1c788357","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nENV HOME=\"/home/scion\"\nENV BASE=\"/home/scion/go/src/github.com/scionproto/scion\"\nENV GOPATH=\"$HOME/go\"\nENV PATH=\"$HOME/bin:/usr/local/go/bin:$GOPATH/bin:$HOME/.local/bin:$PATH\"\nWORKDIR $BASE\n#   Use eatmydata to speed up a lot of the building\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y eatmydata sudo \\\n && apt-get clean\nRUN set -ex ; ln -s /usr/bin/eatmydata /usr/local/bin/apt-get ; ln -s /usr/bin/eatmydata /usr/local/bin/dpkg ; ln -s /usr/bin/eatmydata /usr/local/bin/pip ; ln -s /usr/bin/eatmydata /usr/local/bin/pip3\nRUN useradd -u 30041 -s /bin/bash scion\nRUN groupadd -g 939 --system docker\nRUN usermod -aG docker scion\nRUN echo \"scion ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/scion\n#   Provide tmpfs at /run/shm while inside non-privileged docker\nRUN ln -s /dev/shm /run/shm\nUSER scion\nRUN sudo chown -R scion: $HOME\n#  ################################################################################\n#  # Install dependencies\n#  ################################################################################\nCOPY env/common.sh env/\n#   Debian packages\nCOPY env/debian env/debian\nRUN sudo apt-get update \\\n && APTARGS=-y env/debian/deps \\\n && sudo apt-get clean\n#   Install Bazel\nCOPY tools/install_bazel install_bazel\nRUN sudo ./install_bazel \\\n && rm install_bazel\n#   Prepare a directory for caching\nRUN sudo mkdir -p /scioncache\n#   Pip packages\nCOPY env/pip3 env/pip3\nCOPY env/pip2 env/pip2\nRUN set -ex ; env/pip2/deps ; env/pip3/deps ; sudo tar czf /scioncache/python_local.tar.gz --owner=scion -C ~ .local ; rm -r ~/.cache/pip ~/.local\n#   Pip2 packages\nCOPY env/pip2 env/pip2\nRUN env/pip2/deps \\\n && rm -r ~/.cache/pip\n#   zlog packages\nCOPY env/zlog env/zlog\nRUN eatmydata env/zlog/deps\n#   Dependencies managed by Bazel.\nCOPY WORKSPACE .\nCOPY tools/fetch.sh tools/\nRUN set -ex ; tools/fetch.sh > BUILD.bazel; bazel fetch --noshow_progress //:fetch 2>&1; rm -rf /home/scion/.cache/bazel/_bazel_scion/*/external/*/.git ; sudo tar czf /scioncache/bazel.tar.gz --owner=scion -C ~ .cache/bazel ; sudo rm -r ~/.cache/bazel ; sudo rm -r ./*\n#   Install docker and docker-compose\nCOPY tools/install_docker install_docker\nRUN sudo ./install_docker \\\n && rm install_docker \\\n && sudo usermod -aG docker scion\n#   Install su-exec\nARG SU_EXEC_COMMIT=e9664105e1f0b48024e52f454c6b78d15b5daa57\nRUN set -ex ; mkdir su-exec ; curl -SL https://github.com/anapaya/su-exec/archive/${SU_EXEC_COMMIT}.tar.gz | tar xz -C su-exec --strip-components=1 ; make -C su-exec ; sudo mv su-exec/su-exec /sbin/ ; rm -r su-exec\n#  ################################################################################\n#  # Dependencies are now installed, carry on with the rest.\n#  ################################################################################\n#   Install bash config\nCOPY docker/profile $HOME/.profile\n#   Install basic screen config\nCOPY docker/screenrc $HOME/.screenrc\n#   Fix ownership one last time. Chown is an expensive operation in terms of docker\n#   image size so chown only the files that belong to different users.\nRUN sudo find $HOME -not -user scion -execdir chown scion {} +\nCOPY docker/docker-entrypoint.sh /\nCMD []\nENTRYPOINT [\"/bin/bash\", \"-l\"]\n","originalDockerfileUglifiedHash":"6aa4fcf45286737026f6cb8dec3c68ea","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0a75e57d1623a8153ada7f7073d8e352b9174648.dockerfile"}