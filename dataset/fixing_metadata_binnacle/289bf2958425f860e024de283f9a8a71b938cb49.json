{"seed":3177521731,"processedDockerfileHash":"a05f67adea0bd10a96b0ca872213f729","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed under the Apache License, Version 2.0 (the \"License\"); \n#   you may not use this file except in compliance with the License. \n#   You may obtain  a copy of the License at \n#\n#   http://www.apache.org/licenses/LICENSE-2.0 Unless \n#   \n#   required by applicable law or agreed to in writing, software \n#   distributed under the License is distributed on an \"AS IS\" \n#   BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either \n#   express or implied. See the License for the specific language \n#   governing permissions and limitations under the License. \n#   This Dockerfile will build the required environment and software \n#   stack to easily get up and running with mudrod\n#   For more documentation please see https://github.com/mudrod/mudrod\nFROM ubuntu:16.04\nMAINTAINER Mudrod Team <mudrod-all@jpl.nasa.gov>\n#   Get the package containing apt-add-repository installed for adding repositories\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y\n#   Install openJDK 1.8\nRUN apt-get install --no-install-recommends openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 -y\n#   Install various dependencies\nRUN apt-get install --no-install-recommends build-essential=12.1ubuntu2 git=1:2.7.4-0ubuntu1.10 maven=3.3.9-3 openssh-client=1:7.2p2-4ubuntu2.10 openssh-server=1:7.2p2-4ubuntu2.10 vim=2:7.4.1689-3ubuntu1.5 wget=1.17.1-1ubuntu1.5 -y\nRUN echo \"JAVA_HOME=/usr/bin\" >> /etc/environment\nRUN echo 'PATH=$PATH:HOME/bin:$JAVA_HOME/bin' >> /etc/profile \\\n && echo 'export JAVA_HOME' >> /etc/profile \\\n && echo 'export PATH' >> /etc/profile\nUSER root\nWORKDIR /tmp\n#  #######################\n#   Apache Spark 1.6.2   #\n#  #######################\nENV SPARK_PKG_NAME=\"spark-1.6.2\"\nRUN wget http://archive.apache.org/dist/spark/$SPARK_PKG_NAME/$SPARK_PKG_NAME-bin-without-hadoop.tgz \\\n && tar -xvzf $SPARK_PKG_NAME-bin-without-hadoop.tgz \\\n && rm -f $SPARK_PKG_NAME-bin-without-hadoop.tgz \\\n && mv $SPARK_PKG_NAME-bin-without-hadoop /usr/local/spark\nWORKDIR /usr/local\n#   ENV needs to be used, as the above doesn't seem to be visible from cli\nENV JAVA_HOME=\"/usr\"\nENV SPARK_HOME=\"/usr/local/spark\"\n#   so you can call 'spark-class', 'spark-shell', 'spark-sql', 'spark-submit', etc.\nENV PATH=\"$PATH:$SPARK_HOME/bin\"\n#  ######################\n#   Elasticsearch 2.3.4 #\n#  ######################\nENV ES_PKG_NAME=\"elasticsearch-2.3.4\"\nRUN wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.3.4/$ES_PKG_NAME.tar.gz \\\n && tar -xvzf $ES_PKG_NAME.tar.gz \\\n && rm -f $ES_PKG_NAME.tar.gz \\\n && mv $ES_PKG_NAME /usr/local/elasticsearch\n#   Define mountable directories.\nVOLUME [\"/data\"]\n#   Mount elasticsearch.yml config\nCOPY config/elasticsearch.yml /usr/local/elasticsearch/config/elasticsearch.yml\n#   Expose ports.\n#   - 9200: HTTP\n#   - 9300: transport\nEXPOSE 9200/tcp\nEXPOSE 9300/tcp\n#  ########################\n#   Mudrod Master Branch  #\n#  ########################\nWORKDIR /usr/local\nRUN git clone https://github.com/mudrod/mudrod.git\nENV MUDROD_HOME=\"/usr/local/mudrod \"\nWORKDIR $MUDROD_HOME\n#   So you can call 'mudrod'\nENV PATH=\"$PATH:$MUDROD_HOME/bin\"\nRUN mvn clean install\n#   Expose ports.\n#   - 8080: HTTP Jetty Port\nEXPOSE 8080/tcp\n#   Ensure that all of the services are running\nCMD sh $MUDROD_HOME/docker/run_services.sh\n#   Set entry point to the Mudrod executable\nENTRYPOINT [\"/usr/local/mudrod/bin/mudrod\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed under the Apache License, Version 2.0 (the \"License\"); \n#  you may not use this file except in compliance with the License. \n#  You may obtain  a copy of the License at \n#\n#  http://www.apache.org/licenses/LICENSE-2.0 Unless \n#  \n#  required by applicable law or agreed to in writing, software \n#  distributed under the License is distributed on an \"AS IS\" \n#  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either \n#  express or implied. See the License for the specific language \n#  governing permissions and limitations under the License. \n#  This Dockerfile will build the required environment and software \n#  stack to easily get up and running with mudrod\n#  For more documentation please see https://github.com/mudrod/mudrod\nFROM ubuntu:16.04\nMAINTAINER Mudrod Team <mudrod-all@jpl.nasa.gov>\n#  Get the package containing apt-add-repository installed for adding repositories\nRUN apt-get update \\\n && apt-get install software-properties-common -y\n#  Install openJDK 1.8\nRUN apt-get install openjdk-8-jdk -y\n#  Install various dependencies\nRUN apt-get install build-essential git maven openssh-client openssh-server vim wget -y\nRUN echo \"JAVA_HOME=/usr/bin\" >> /etc/environment\nRUN echo 'PATH=$PATH:HOME/bin:$JAVA_HOME/bin' >> /etc/profile \\\n && echo 'export JAVA_HOME' >> /etc/profile \\\n && echo 'export PATH' >> /etc/profile\nUSER root\nWORKDIR /tmp\n# #######################\n#  Apache Spark 1.6.2   #\n# #######################\nENV SPARK_PKG_NAME=\"spark-1.6.2\"\nRUN wget http://archive.apache.org/dist/spark/$SPARK_PKG_NAME/$SPARK_PKG_NAME-bin-without-hadoop.tgz \\\n && tar -xvzf $SPARK_PKG_NAME-bin-without-hadoop.tgz \\\n && rm -f $SPARK_PKG_NAME-bin-without-hadoop.tgz \\\n && mv $SPARK_PKG_NAME-bin-without-hadoop /usr/local/spark\nWORKDIR /usr/local\n#  ENV needs to be used, as the above doesn't seem to be visible from cli\nENV JAVA_HOME=\"/usr\"\nENV SPARK_HOME=\"/usr/local/spark\"\n#  so you can call 'spark-class', 'spark-shell', 'spark-sql', 'spark-submit', etc.\nENV PATH=\"$PATH:$SPARK_HOME/bin\"\n# ######################\n#  Elasticsearch 2.3.4 #\n# ######################\nENV ES_PKG_NAME=\"elasticsearch-2.3.4\"\nRUN wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.3.4/$ES_PKG_NAME.tar.gz \\\n && tar -xvzf $ES_PKG_NAME.tar.gz \\\n && rm -f $ES_PKG_NAME.tar.gz \\\n && mv $ES_PKG_NAME /usr/local/elasticsearch\n#  Define mountable directories.\nVOLUME [\"/data\"]\n#  Mount elasticsearch.yml config\nADD config/elasticsearch.yml /usr/local/elasticsearch/config/elasticsearch.yml\n#  Expose ports.\n#  - 9200: HTTP\n#  - 9300: transport\nEXPOSE 9200/tcp\nEXPOSE 9300/tcp\n# ########################\n#  Mudrod Master Branch  #\n# ########################\nWORKDIR /usr/local\nRUN git clone https://github.com/mudrod/mudrod.git\nENV MUDROD_HOME=\"/usr/local/mudrod \"\nWORKDIR $MUDROD_HOME\n#  So you can call 'mudrod'\nENV PATH=\"$PATH:$MUDROD_HOME/bin\"\nRUN mvn clean install\n#  Expose ports.\n#  - 8080: HTTP Jetty Port\nEXPOSE 8080/tcp\n#  Ensure that all of the services are running\nCMD sh $MUDROD_HOME/docker/run_services.sh\n#  Set entry point to the Mudrod executable\nENTRYPOINT [\"/usr/local/mudrod/bin/mudrod\"]\n","injectedSmells":[],"originalDockerfileHash":"f134fa8c87ee5310d6006bdabd652243","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed under the Apache License, Version 2.0 (the \"License\"); \n#   you may not use this file except in compliance with the License. \n#   You may obtain  a copy of the License at \n#\n#   http://www.apache.org/licenses/LICENSE-2.0 Unless \n#   \n#   required by applicable law or agreed to in writing, software \n#   distributed under the License is distributed on an \"AS IS\" \n#   BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either \n#   express or implied. See the License for the specific language \n#   governing permissions and limitations under the License. \n#   This Dockerfile will build the required environment and software \n#   stack to easily get up and running with mudrod\n#   For more documentation please see https://github.com/mudrod/mudrod\nFROM ubuntu:16.04\nMAINTAINER Mudrod Team <mudrod-all@jpl.nasa.gov>\n#   Get the package containing apt-add-repository installed for adding repositories\nRUN apt-get update \\\n && apt-get install software-properties-common -y\n#   Install openJDK 1.8\nRUN apt-get install openjdk-8-jdk -y\n#   Install various dependencies\nRUN apt-get install build-essential git maven openssh-client openssh-server vim wget -y\nRUN echo \"JAVA_HOME=/usr/bin\" >> /etc/environment\nRUN echo 'PATH=$PATH:HOME/bin:$JAVA_HOME/bin' >> /etc/profile \\\n && echo 'export JAVA_HOME' >> /etc/profile \\\n && echo 'export PATH' >> /etc/profile\nUSER root\nWORKDIR /tmp\n#  #######################\n#   Apache Spark 1.6.2   #\n#  #######################\nENV SPARK_PKG_NAME=\"spark-1.6.2\"\nRUN wget http://archive.apache.org/dist/spark/$SPARK_PKG_NAME/$SPARK_PKG_NAME-bin-without-hadoop.tgz \\\n && tar -xvzf $SPARK_PKG_NAME-bin-without-hadoop.tgz \\\n && rm -f $SPARK_PKG_NAME-bin-without-hadoop.tgz \\\n && mv $SPARK_PKG_NAME-bin-without-hadoop /usr/local/spark\nWORKDIR /usr/local\n#   ENV needs to be used, as the above doesn't seem to be visible from cli\nENV JAVA_HOME=\"/usr\"\nENV SPARK_HOME=\"/usr/local/spark\"\n#   so you can call 'spark-class', 'spark-shell', 'spark-sql', 'spark-submit', etc.\nENV PATH=\"$PATH:$SPARK_HOME/bin\"\n#  ######################\n#   Elasticsearch 2.3.4 #\n#  ######################\nENV ES_PKG_NAME=\"elasticsearch-2.3.4\"\nRUN wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.3.4/$ES_PKG_NAME.tar.gz \\\n && tar -xvzf $ES_PKG_NAME.tar.gz \\\n && rm -f $ES_PKG_NAME.tar.gz \\\n && mv $ES_PKG_NAME /usr/local/elasticsearch\n#   Define mountable directories.\nVOLUME [\"/data\"]\n#   Mount elasticsearch.yml config\nADD config/elasticsearch.yml /usr/local/elasticsearch/config/elasticsearch.yml\n#   Expose ports.\n#   - 9200: HTTP\n#   - 9300: transport\nEXPOSE 9200/tcp\nEXPOSE 9300/tcp\n#  ########################\n#   Mudrod Master Branch  #\n#  ########################\nWORKDIR /usr/local\nRUN git clone https://github.com/mudrod/mudrod.git\nENV MUDROD_HOME=\"/usr/local/mudrod \"\nWORKDIR $MUDROD_HOME\n#   So you can call 'mudrod'\nENV PATH=\"$PATH:$MUDROD_HOME/bin\"\nRUN mvn clean install\n#   Expose ports.\n#   - 8080: HTTP Jetty Port\nEXPOSE 8080/tcp\n#   Ensure that all of the services are running\nCMD sh $MUDROD_HOME/docker/run_services.sh\n#   Set entry point to the Mudrod executable\nENTRYPOINT [\"/usr/local/mudrod/bin/mudrod\"]\n","originalDockerfileUglifiedHash":"c013b757bd0bc7a0fe101a0ce7b0602f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/289bf2958425f860e024de283f9a8a71b938cb49.dockerfile"}