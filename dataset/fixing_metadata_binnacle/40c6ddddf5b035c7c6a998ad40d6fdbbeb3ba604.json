{"seed":606018514,"processedDockerfileHash":"5f1b16833b7ec507b461bc41d64b7397","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM lsiobase/ubuntu:xenial\n#   set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\n#   environment variables\nARG DEBIAN_FRONTEND=\"noninteractive\"\nENV MYSQL_DIR=\"/data\"\nENV DATADIR=\"$MYSQL_DIR/database\"\n#   packages as variables\nARG BUILD_DEPENDENCIES=\" cmake  dh-autoreconf  dpatch  g++  gcc  git  libavcodec-dev  libavdevice-dev  libavfilter-dev  libavformat-dev  libavresample-dev  libavutil-dev  libcurl4-openssl-dev  libjpeg-turbo8-dev  libmp4v2-dev  libmysqlclient-dev  libnetpbm10-dev  libpcre3-dev  libpolkit-gobject-1-dev  libpostproc-dev  libswscale-dev  libtheora-dev  libtool  libv4l-dev  libvlccore-dev  libvlc-dev  libvorbis-dev  libvpx-dev  libx264-dev  php-dev  php-pear  yasm\"\nARG RUNTIME_DEPENDENCIES=\" apache2  ffmpeg  libapache2-mod-php  libarchive-zip-perl  libav-tools  libbz2-dev  libclass-std-fast-perl  libcurl3  libdata-dump-perl  libdata-uuid-perl  libdate-manip-perl  libdbd-mysql-perl  libdbi-perl  libdevice-serialport-perl  libio-socket-multicast-perl  libjpeg-turbo8  libmime-lite-perl  libmime-perl  libmp4v2-2  libpcre3  libsoap-wsdl-perl  libssl-dev  libsys-cpu-perl  libsys-meminfo-perl  libsys-mmap-perl  libvlc5  libvlccore8  libwww-perl  mariadb-client  mariadb-server  net-tools  php  php-cli  php-mysql  unzip  vlc-data  zip\"\nRUN echo \"**** add repositories ****\" \\\n && apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8 \\\n && echo \"deb [arch=amd64,i386] http://mirrors.coreix.net/mariadb/repo/10.1/ubuntu xenial main\" >> /etc/apt/sources.list.d/mariadb.list \\\n && echo \"deb-src http://mirrors.coreix.net/mariadb/repo/10.1/ubuntu xenial main\" >> /etc/apt/sources.list.d/mariadb.list \\\n && echo \"**** install packages ****\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $BUILD_DEPENDENCIES $RUNTIME_DEPENDENCIES -y \\\n && echo \"**** install php_apcu and php_apcu-bc ****\" \\\n && pecl install apcu \\\n && pecl install apcu_bc-beta \\\n && echo \"extension=apc.so\" >> /etc/php/7.0/mods-available/z_apc.ini \\\n && echo \"extension=apcu.so\" >> /etc/php/7.0/mods-available/apcu.ini \\\n && ln -sf /etc/php/7.0/mods-available/apcu.ini /etc/php/7.0/apache2/conf.d/20-apcu.ini \\\n && ln -sf /etc/php/7.0/mods-available/apcu.ini /etc/php/7.0/cli/conf.d/20-apcu.ini \\\n && ln -sf /etc/php/7.0/mods-available/z_apc.ini /etc/php/7.0/apache2/conf.d/40-apc.ini \\\n && ln -sf /etc/php/7.0/mods-available/z_apc.ini /etc/php/7.0/cli/conf.d/40-apc.ini \\\n && echo \"**** build zoneminder ****\" \\\n && git clone https://github.com/ZoneMinder/ZoneMinder /tmp/zoneminder \\\n && cd /tmp/zoneminder \\\n && git submodule update --init --recursive \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DZM_CGIDIR=/usr/share/webapps/zoneminder/cgi-bin -DZM_CONFIG_DIR=/etc/zm -DZM_CONFIG_SUBDIR=/etc/zm/conf.d -DZM_DIR_EVENTS=/data/zoneminder/events -DZM_DIR_IMAGES=/data/zoneminder/images -DZM_DIR_SOUNDS=/data/zoneminder/sounds -DZM_LOGDIR=/config/log/zoneminder -DZM_PATH_ARP=/usr/sbin/arp -DZM_RUNDIR=/var/run/zoneminder -DZM_SOCKDIR=/var/run/zoneminder -DZM_WEBDIR=/usr/share/webapps/zoneminder/htdocs -DZM_WEB_GROUP=abc -DZM_WEB_USER=abc . \\\n && make \\\n && make install \\\n && echo \"**** configure zoneminder exports folder and add abc to video group ****\" \\\n && sed -i -e \"s#\\(ZM_DIR_EXPORTS.*=\\).*#\\1/data/zoneminder/exports#g\" /etc/zm/conf.d/01-system-paths.conf \\\n && adduser abc video \\\n && echo \"**** configure apache ****\" \\\n && cp misc/apache.conf /defaults/default.conf \\\n && a2enmod cgi rewrite \\\n && sed -i -e \"s/\\(.*APACHE_RUN_USER=\\).*/\\1abc/g\" -e \"s/\\(.*APACHE_RUN_GROUP=\\).*/\\1abc/g\" /etc/apache2/envvars \\\n && echo \"**** configure my.cnf and mysqld_safe ****\" \\\n && sed -i -e 's/^#sql_mode/sql_mode/g' -i -e 's/NO_ENGINE_SUBSTITUTION.*/NO_ENGINE_SUBSTITUTION/g' -i -e 's/key_buffer\\b/key_buffer_size/g' -i -e 's#/var/log/mysql#/config/log/mysql#g' -i -e 's/\\(max_allowed_packet.*=\\).*/\\1 128M/g' -i -e 's/\\(user.*=\\).*/\\1 abc/g' -i -e 's/\\(wait_timeout.*=\\).*/\\1 1200/g' -i -e \"s#\\(datadir.*=\\).*#\\1 $DATADIR#g\" -ri -e 's/^(bind-address|skip-networking)/;\\1/' /etc/mysql/my.cnf \\\n && sed -i \"s/user='mysql'/user='abc'/g\" /usr/bin/mysqld_safe \\\n && echo \"**** uninstall build packages and reinstall runtime packages ****\" \\\n && apt-get purge -y --auto-remove $BUILD_DEPENDENCIES \\\n && apt-get install --no-install-recommends $RUNTIME_DEPENDENCIES -y \\\n && echo \"**** cleanup ****\" \\\n && rm -rf /tmp/* /var/lib/apt/lists/* /var/lib/mysql /var/tmp/* \\\n && mkdir -p /var/lib/mysql\n#   add local files\nCOPY root/ /\n#   ports and volumes\nEXPOSE 80/tcp\nVOLUME /config /data\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM lsiobase/ubuntu:xenial\n#  set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\n#  environment variables\nARG DEBIAN_FRONTEND=\"noninteractive\"\nENV MYSQL_DIR=\"/data\"\nENV DATADIR=\"$MYSQL_DIR/database\"\n#  packages as variables\nARG BUILD_DEPENDENCIES=\" cmake  dh-autoreconf  dpatch  g++  gcc  git  libavcodec-dev  libavdevice-dev  libavfilter-dev  libavformat-dev  libavresample-dev  libavutil-dev  libcurl4-openssl-dev  libjpeg-turbo8-dev  libmp4v2-dev  libmysqlclient-dev  libnetpbm10-dev  libpcre3-dev  libpolkit-gobject-1-dev  libpostproc-dev  libswscale-dev  libtheora-dev  libtool  libv4l-dev  libvlccore-dev  libvlc-dev  libvorbis-dev  libvpx-dev  libx264-dev  php-dev  php-pear  yasm\"\nARG RUNTIME_DEPENDENCIES=\" apache2  ffmpeg  libapache2-mod-php  libarchive-zip-perl  libav-tools  libbz2-dev  libclass-std-fast-perl  libcurl3  libdata-dump-perl  libdata-uuid-perl  libdate-manip-perl  libdbd-mysql-perl  libdbi-perl  libdevice-serialport-perl  libio-socket-multicast-perl  libjpeg-turbo8  libmime-lite-perl  libmime-perl  libmp4v2-2  libpcre3  libsoap-wsdl-perl  libssl-dev  libsys-cpu-perl  libsys-meminfo-perl  libsys-mmap-perl  libvlc5  libvlccore8  libwww-perl  mariadb-client  mariadb-server  net-tools  php  php-cli  php-mysql  unzip  vlc-data  zip\"\nRUN echo \"**** add repositories ****\" \\\n && apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8 \\\n && echo \"deb [arch=amd64,i386] http://mirrors.coreix.net/mariadb/repo/10.1/ubuntu xenial main\" >> /etc/apt/sources.list.d/mariadb.list \\\n && echo \"deb-src http://mirrors.coreix.net/mariadb/repo/10.1/ubuntu xenial main\" >> /etc/apt/sources.list.d/mariadb.list \\\n && echo \"**** install packages ****\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $BUILD_DEPENDENCIES $RUNTIME_DEPENDENCIES -y \\\n && echo \"**** install php_apcu and php_apcu-bc ****\" \\\n && pecl install apcu \\\n && pecl install apcu_bc-beta \\\n && echo \"extension=apc.so\" >> /etc/php/7.0/mods-available/z_apc.ini \\\n && echo \"extension=apcu.so\" >> /etc/php/7.0/mods-available/apcu.ini \\\n && ln -sf /etc/php/7.0/mods-available/apcu.ini /etc/php/7.0/apache2/conf.d/20-apcu.ini \\\n && ln -sf /etc/php/7.0/mods-available/apcu.ini /etc/php/7.0/cli/conf.d/20-apcu.ini \\\n && ln -sf /etc/php/7.0/mods-available/z_apc.ini /etc/php/7.0/apache2/conf.d/40-apc.ini \\\n && ln -sf /etc/php/7.0/mods-available/z_apc.ini /etc/php/7.0/cli/conf.d/40-apc.ini \\\n && echo \"**** build zoneminder ****\" \\\n && git clone https://github.com/ZoneMinder/ZoneMinder /tmp/zoneminder \\\n && cd /tmp/zoneminder \\\n && git submodule update --init --recursive \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DZM_CGIDIR=/usr/share/webapps/zoneminder/cgi-bin -DZM_CONFIG_DIR=/etc/zm -DZM_CONFIG_SUBDIR=/etc/zm/conf.d -DZM_DIR_EVENTS=/data/zoneminder/events -DZM_DIR_IMAGES=/data/zoneminder/images -DZM_DIR_SOUNDS=/data/zoneminder/sounds -DZM_LOGDIR=/config/log/zoneminder -DZM_PATH_ARP=/usr/sbin/arp -DZM_RUNDIR=/var/run/zoneminder -DZM_SOCKDIR=/var/run/zoneminder -DZM_WEBDIR=/usr/share/webapps/zoneminder/htdocs -DZM_WEB_GROUP=abc -DZM_WEB_USER=abc . \\\n && make \\\n && make install \\\n && echo \"**** configure zoneminder exports folder and add abc to video group ****\" \\\n && sed -i -e \"s#\\(ZM_DIR_EXPORTS.*=\\).*#\\1/data/zoneminder/exports#g\" /etc/zm/conf.d/01-system-paths.conf \\\n && adduser abc video \\\n && echo \"**** configure apache ****\" \\\n && cp misc/apache.conf /defaults/default.conf \\\n && a2enmod cgi rewrite \\\n && sed -i -e \"s/\\(.*APACHE_RUN_USER=\\).*/\\1abc/g\" -e \"s/\\(.*APACHE_RUN_GROUP=\\).*/\\1abc/g\" /etc/apache2/envvars \\\n && echo \"**** configure my.cnf and mysqld_safe ****\" \\\n && sed -i -e 's/^#sql_mode/sql_mode/g' -i -e 's/NO_ENGINE_SUBSTITUTION.*/NO_ENGINE_SUBSTITUTION/g' -i -e 's/key_buffer\\b/key_buffer_size/g' -i -e 's#/var/log/mysql#/config/log/mysql#g' -i -e 's/\\(max_allowed_packet.*=\\).*/\\1 128M/g' -i -e 's/\\(user.*=\\).*/\\1 abc/g' -i -e 's/\\(wait_timeout.*=\\).*/\\1 1200/g' -i -e \"s#\\(datadir.*=\\).*#\\1 $DATADIR#g\" -ri -e 's/^(bind-address|skip-networking)/;\\1/' /etc/mysql/my.cnf \\\n && sed -i \"s/user='mysql'/user='abc'/g\" /usr/bin/mysqld_safe \\\n && echo \"**** uninstall build packages and reinstall runtime packages ****\" \\\n && apt-get purge -y --auto-remove $BUILD_DEPENDENCIES \\\n && apt-get install --no-install-recommends $RUNTIME_DEPENDENCIES -y \\\n && echo \"**** cleanup ****\" \\\n && rm -rf /tmp/* /var/lib/apt/lists/* /var/lib/mysql /var/tmp/* \\\n && mkdir -p /var/lib/mysql\n#  add local files\nCOPY root/ /\n#  ports and volumes\nEXPOSE 80/tcp\nVOLUME /config /data\n","injectedSmells":[],"originalDockerfileHash":"07a3c36fd1ffa5d6a7e793ba241f1bd2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM lsiobase/ubuntu:xenial\n#   set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\n#   environment variables\nARG DEBIAN_FRONTEND=\"noninteractive\"\nENV MYSQL_DIR=\"/data\"\nENV DATADIR=\"$MYSQL_DIR/database\"\n#   packages as variables\nARG BUILD_DEPENDENCIES=\" cmake  dh-autoreconf  dpatch  g++  gcc  git  libavcodec-dev  libavdevice-dev  libavfilter-dev  libavformat-dev  libavresample-dev  libavutil-dev  libcurl4-openssl-dev  libjpeg-turbo8-dev  libmp4v2-dev  libmysqlclient-dev  libnetpbm10-dev  libpcre3-dev  libpolkit-gobject-1-dev  libpostproc-dev  libswscale-dev  libtheora-dev  libtool  libv4l-dev  libvlccore-dev  libvlc-dev  libvorbis-dev  libvpx-dev  libx264-dev  php-dev  php-pear  yasm\"\nARG RUNTIME_DEPENDENCIES=\" apache2  ffmpeg  libapache2-mod-php  libarchive-zip-perl  libav-tools  libbz2-dev  libclass-std-fast-perl  libcurl3  libdata-dump-perl  libdata-uuid-perl  libdate-manip-perl  libdbd-mysql-perl  libdbi-perl  libdevice-serialport-perl  libio-socket-multicast-perl  libjpeg-turbo8  libmime-lite-perl  libmime-perl  libmp4v2-2  libpcre3  libsoap-wsdl-perl  libssl-dev  libsys-cpu-perl  libsys-meminfo-perl  libsys-mmap-perl  libvlc5  libvlccore8  libwww-perl  mariadb-client  mariadb-server  net-tools  php  php-cli  php-mysql  unzip  vlc-data  zip\"\nRUN echo \"**** add repositories ****\" \\\n && apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8 \\\n && echo \"deb [arch=amd64,i386] http://mirrors.coreix.net/mariadb/repo/10.1/ubuntu xenial main\" >> /etc/apt/sources.list.d/mariadb.list \\\n && echo \"deb-src http://mirrors.coreix.net/mariadb/repo/10.1/ubuntu xenial main\" >> /etc/apt/sources.list.d/mariadb.list \\\n && echo \"**** install packages ****\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $BUILD_DEPENDENCIES $RUNTIME_DEPENDENCIES -y \\\n && echo \"**** install php_apcu and php_apcu-bc ****\" \\\n && pecl install apcu \\\n && pecl install apcu_bc-beta \\\n && echo \"extension=apc.so\" >> /etc/php/7.0/mods-available/z_apc.ini \\\n && echo \"extension=apcu.so\" >> /etc/php/7.0/mods-available/apcu.ini \\\n && ln -sf /etc/php/7.0/mods-available/apcu.ini /etc/php/7.0/apache2/conf.d/20-apcu.ini \\\n && ln -sf /etc/php/7.0/mods-available/apcu.ini /etc/php/7.0/cli/conf.d/20-apcu.ini \\\n && ln -sf /etc/php/7.0/mods-available/z_apc.ini /etc/php/7.0/apache2/conf.d/40-apc.ini \\\n && ln -sf /etc/php/7.0/mods-available/z_apc.ini /etc/php/7.0/cli/conf.d/40-apc.ini \\\n && echo \"**** build zoneminder ****\" \\\n && git clone https://github.com/ZoneMinder/ZoneMinder /tmp/zoneminder \\\n && cd /tmp/zoneminder \\\n && git submodule update --init --recursive \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DZM_CGIDIR=/usr/share/webapps/zoneminder/cgi-bin -DZM_CONFIG_DIR=/etc/zm -DZM_CONFIG_SUBDIR=/etc/zm/conf.d -DZM_DIR_EVENTS=/data/zoneminder/events -DZM_DIR_IMAGES=/data/zoneminder/images -DZM_DIR_SOUNDS=/data/zoneminder/sounds -DZM_LOGDIR=/config/log/zoneminder -DZM_PATH_ARP=/usr/sbin/arp -DZM_RUNDIR=/var/run/zoneminder -DZM_SOCKDIR=/var/run/zoneminder -DZM_WEBDIR=/usr/share/webapps/zoneminder/htdocs -DZM_WEB_GROUP=abc -DZM_WEB_USER=abc . \\\n && make \\\n && make install \\\n && echo \"**** configure zoneminder exports folder and add abc to video group ****\" \\\n && sed -i -e \"s#\\(ZM_DIR_EXPORTS.*=\\).*#\\1/data/zoneminder/exports#g\" /etc/zm/conf.d/01-system-paths.conf \\\n && adduser abc video \\\n && echo \"**** configure apache ****\" \\\n && cp misc/apache.conf /defaults/default.conf \\\n && a2enmod cgi rewrite \\\n && sed -i -e \"s/\\(.*APACHE_RUN_USER=\\).*/\\1abc/g\" -e \"s/\\(.*APACHE_RUN_GROUP=\\).*/\\1abc/g\" /etc/apache2/envvars \\\n && echo \"**** configure my.cnf and mysqld_safe ****\" \\\n && sed -i -e 's/^#sql_mode/sql_mode/g' -i -e 's/NO_ENGINE_SUBSTITUTION.*/NO_ENGINE_SUBSTITUTION/g' -i -e 's/key_buffer\\b/key_buffer_size/g' -i -e 's#/var/log/mysql#/config/log/mysql#g' -i -e 's/\\(max_allowed_packet.*=\\).*/\\1 128M/g' -i -e 's/\\(user.*=\\).*/\\1 abc/g' -i -e 's/\\(wait_timeout.*=\\).*/\\1 1200/g' -i -e \"s#\\(datadir.*=\\).*#\\1 $DATADIR#g\" -ri -e 's/^(bind-address|skip-networking)/;\\1/' /etc/mysql/my.cnf \\\n && sed -i \"s/user='mysql'/user='abc'/g\" /usr/bin/mysqld_safe \\\n && echo \"**** uninstall build packages and reinstall runtime packages ****\" \\\n && apt-get purge -y --auto-remove $BUILD_DEPENDENCIES \\\n && apt-get install --no-install-recommends $RUNTIME_DEPENDENCIES -y \\\n && echo \"**** cleanup ****\" \\\n && rm -rf /tmp/* /var/lib/apt/lists/* /var/lib/mysql /var/tmp/* \\\n && mkdir -p /var/lib/mysql\n#   add local files\nCOPY root/ /\n#   ports and volumes\nEXPOSE 80/tcp\nVOLUME /config /data\n","originalDockerfileUglifiedHash":"5847318bb4bdcfd8e4105ba2772f50d8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/40c6ddddf5b035c7c6a998ad40d6fdbbeb3ba604.dockerfile"}