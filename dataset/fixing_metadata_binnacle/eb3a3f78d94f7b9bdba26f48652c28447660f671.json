{"seed":1542200365,"processedDockerfileHash":"7bd1f54e3c59f874c2bcb9b5e137a72a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-npm","have-a-healthcheck"],"processedDockerfile":"#   Copyright 2015 Telefónica Investigación y Desarrollo, S.A.U\n#\n#   This file is part of the IoT Agent for the Ultralight 2.0 protocol (IOTAUL) component\n#\n#   IOTAUL is free software: you can redistribute it and/or\n#   modify it under the terms of the GNU Affero General Public License as\n#   published by the Free Software Foundation, either version 3 of the License,\n#   or (at your option) any later version.\n#\n#   IOTAUL is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n#   See the GNU Affero General Public License for more details.\n#\n#   You should have received a copy of the GNU Affero General Public\n#   License along with IOTAUL.\n#   If not, see http://www.gnu.org/licenses/.\n#\n#   For those usages not covered by the GNU Affero General Public License\n#   please contact with: [daniel.moranjimenez@telefonica.com]\nARG NODE_VERSION=8.16.0-slim\nFROM node:${NODE_VERSION}\nARG GITHUB_ACCOUNT=telefonicaid\nARG GITHUB_REPOSITORY=iotagent-ul\nARG DOWNLOAD=latest\nARG SOURCE_BRANCH=master\n#   Copying Build time arguments to environment variables so they are persisted at run time and can be \n#   inspected within a running container.\n#   see: https://vsupalov.com/docker-build-time-env-values/  for a deeper explanation.\nENV GITHUB_ACCOUNT=\"${GITHUB_ACCOUNT}\"\nENV GITHUB_REPOSITORY=\"${GITHUB_REPOSITORY}\"\nENV DOWNLOAD=\"${DOWNLOAD}\"\nMAINTAINER FIWARE IoTAgent Team. Telefónica I+D\n#   IMPORTANT: For production environments use Docker Secrets to protect values of the sensitive ENV \n#   variables defined below, by adding _FILE to the name of the relevant variable.\n#\n#   - IOTA_AUTH_USER, IOTA_AUTH_PASSWORD - when using Keystone Security \n#   - IOTA_AUTH_CLIENT_ID, IOTA_AUTH_CLIENT_SECRET - when using OAuth2 Security\n#\n#   The following RUN command retrieves the source code from GitHub.\n#   \n#   To obtain the latest stable release run this Docker file with the parameters\n#   --no-cache --build-arg DOWNLOAD=stable\n#   To obtain any speciifc version of a release run this Docker file with the parameters\n#   --no-cache --build-arg DOWNLOAD=1.7.0\n#\n#   The default download is the latest tip of the master of the named repository on GitHub\n#\n#   Alternatively for local development, just copy this Dockerfile into file the root of the repository and \n#   replace the whole RUN statement by the following COPY statement in your local source using :\n#\n#   COPY . /opt/iotaul/\n#\nRUN if [ \"${DOWNLOAD}\" = \"latest\" ] ; then RELEASE=\"${SOURCE_BRANCH}\" ;echo \"INFO: Building Latest Development from ${SOURCE_BRANCH} branch.\" ; elif [ \"${DOWNLOAD}\" = \"stable\" ] ; then RELEASE=$( curl -s https://api.github.com/repos/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/releases/latest | grep 'tag_name' | cut -d\\\" -f4 ;) ;echo \"INFO: Building Latest Stable Release: ${RELEASE}\" ; else RELEASE=\"${DOWNLOAD}\" ;echo \"INFO: Building Release: ${RELEASE}\" ; fi \\\n && RELEASE_CONCAT=$( echo \"${RELEASE}\" | tr / - ;) ; apt-get update \\\n && apt-get install --no-install-recommends unzip -y \\\n && wget --no-check-certificate -O source.zip https://github.com/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/archive/\"${RELEASE}\".zip \\\n && unzip source.zip \\\n && rm source.zip \\\n && mv \"${GITHUB_REPOSITORY}-${RELEASE_CONCAT}\" /opt/iotaul \\\n && apt-get clean \\\n && apt-get remove -y unzip \\\n && apt-get -y autoremove\nWORKDIR /opt/iotaul\nRUN apt-get update \\\n && apt-get install --no-install-recommends git -y \\\n && npm install pm2@3.2.2 -g \\\n && echo \"INFO: npm install --production...\" \\\n && npm install --production \\\n && apt-get clean \\\n && apt-get remove -y git \\\n && apt-get -y autoremove \\\n && chmod +x docker/entrypoint.sh\nUSER node\nENV NODE_ENV=\"production\"\n#   Expose 4061 for NORTH PORT, 7896 for HTTP PORT\nEXPOSE ${IOTA_NORTH_PORT:-4061} ${IOTA_HTTP_PORT:-7896}\nENTRYPOINT [\"docker/entrypoint.sh\"]\nCMD [\"--\", \"config.js\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\n","originalDockerfile":"#  Copyright 2015 Telefónica Investigación y Desarrollo, S.A.U\n#\n#  This file is part of the IoT Agent for the Ultralight 2.0 protocol (IOTAUL) component\n#\n#  IOTAUL is free software: you can redistribute it and/or\n#  modify it under the terms of the GNU Affero General Public License as\n#  published by the Free Software Foundation, either version 3 of the License,\n#  or (at your option) any later version.\n#\n#  IOTAUL is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n#  See the GNU Affero General Public License for more details.\n#\n#  You should have received a copy of the GNU Affero General Public\n#  License along with IOTAUL.\n#  If not, see http://www.gnu.org/licenses/.\n#\n#  For those usages not covered by the GNU Affero General Public License\n#  please contact with: [daniel.moranjimenez@telefonica.com]\nARG NODE_VERSION=8.16.0-slim\nFROM node:${NODE_VERSION}\nARG GITHUB_ACCOUNT=telefonicaid\nARG GITHUB_REPOSITORY=iotagent-ul\nARG DOWNLOAD=latest\nARG SOURCE_BRANCH=master\n#  Copying Build time arguments to environment variables so they are persisted at run time and can be \n#  inspected within a running container.\n#  see: https://vsupalov.com/docker-build-time-env-values/  for a deeper explanation.\nENV GITHUB_ACCOUNT=\"${GITHUB_ACCOUNT}\"\nENV GITHUB_REPOSITORY=\"${GITHUB_REPOSITORY}\"\nENV DOWNLOAD=\"${DOWNLOAD}\"\nMAINTAINER FIWARE IoTAgent Team. Telefónica I+D\n#  IMPORTANT: For production environments use Docker Secrets to protect values of the sensitive ENV \n#  variables defined below, by adding _FILE to the name of the relevant variable.\n#\n#  - IOTA_AUTH_USER, IOTA_AUTH_PASSWORD - when using Keystone Security \n#  - IOTA_AUTH_CLIENT_ID, IOTA_AUTH_CLIENT_SECRET - when using OAuth2 Security\n#\n#  The following RUN command retrieves the source code from GitHub.\n#  \n#  To obtain the latest stable release run this Docker file with the parameters\n#  --no-cache --build-arg DOWNLOAD=stable\n#  To obtain any speciifc version of a release run this Docker file with the parameters\n#  --no-cache --build-arg DOWNLOAD=1.7.0\n#\n#  The default download is the latest tip of the master of the named repository on GitHub\n#\n#  Alternatively for local development, just copy this Dockerfile into file the root of the repository and \n#  replace the whole RUN statement by the following COPY statement in your local source using :\n#\n#  COPY . /opt/iotaul/\n#\nRUN if [ \"${DOWNLOAD}\" = \"latest\" ] ; then RELEASE=\"${SOURCE_BRANCH}\" ;echo \"INFO: Building Latest Development from ${SOURCE_BRANCH} branch.\" ; elif [ \"${DOWNLOAD}\" = \"stable\" ] ; then RELEASE=$( curl -s https://api.github.com/repos/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/releases/latest | grep 'tag_name' | cut -d\\\" -f4 ;) ;echo \"INFO: Building Latest Stable Release: ${RELEASE}\" ; else RELEASE=\"${DOWNLOAD}\" ;echo \"INFO: Building Release: ${RELEASE}\" ; fi \\\n && RELEASE_CONCAT=$( echo \"${RELEASE}\" | tr / - ;) ; apt-get update \\\n && apt-get install --no-install-recommends unzip -y \\\n && wget --no-check-certificate -O source.zip https://github.com/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/archive/\"${RELEASE}\".zip \\\n && unzip source.zip \\\n && rm source.zip \\\n && mv \"${GITHUB_REPOSITORY}-${RELEASE_CONCAT}\" /opt/iotaul \\\n && apt-get clean \\\n && apt-get remove -y unzip \\\n && apt-get -y autoremove\nWORKDIR /opt/iotaul\nRUN apt-get update \\\n && apt-get install git -y \\\n && npm install pm2@3.2.2 -g \\\n && echo \"INFO: npm install --production...\" \\\n && npm install --production \\\n && apt-get clean \\\n && apt-get remove -y git \\\n && apt-get -y autoremove \\\n && chmod +x docker/entrypoint.sh\nUSER node\nENV NODE_ENV=\"production\"\n#  Expose 4061 for NORTH PORT, 7896 for HTTP PORT\nEXPOSE ${IOTA_NORTH_PORT:-4061} ${IOTA_HTTP_PORT:-7896}\nENTRYPOINT [\"docker/entrypoint.sh\"]\nCMD [\"--\", \"config.js\"]\n","injectedSmells":[],"originalDockerfileHash":"faea51ac64f42960d2fc01de5bec1c2d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2015 Telefónica Investigación y Desarrollo, S.A.U\n#\n#   This file is part of the IoT Agent for the Ultralight 2.0 protocol (IOTAUL) component\n#\n#   IOTAUL is free software: you can redistribute it and/or\n#   modify it under the terms of the GNU Affero General Public License as\n#   published by the Free Software Foundation, either version 3 of the License,\n#   or (at your option) any later version.\n#\n#   IOTAUL is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n#   See the GNU Affero General Public License for more details.\n#\n#   You should have received a copy of the GNU Affero General Public\n#   License along with IOTAUL.\n#   If not, see http://www.gnu.org/licenses/.\n#\n#   For those usages not covered by the GNU Affero General Public License\n#   please contact with: [daniel.moranjimenez@telefonica.com]\nARG NODE_VERSION=8.16.0-slim\nFROM node:${NODE_VERSION}\nARG GITHUB_ACCOUNT=telefonicaid\nARG GITHUB_REPOSITORY=iotagent-ul\nARG DOWNLOAD=latest\nARG SOURCE_BRANCH=master\n#   Copying Build time arguments to environment variables so they are persisted at run time and can be \n#   inspected within a running container.\n#   see: https://vsupalov.com/docker-build-time-env-values/  for a deeper explanation.\nENV GITHUB_ACCOUNT=\"${GITHUB_ACCOUNT}\"\nENV GITHUB_REPOSITORY=\"${GITHUB_REPOSITORY}\"\nENV DOWNLOAD=\"${DOWNLOAD}\"\nMAINTAINER FIWARE IoTAgent Team. Telefónica I+D\n#   IMPORTANT: For production environments use Docker Secrets to protect values of the sensitive ENV \n#   variables defined below, by adding _FILE to the name of the relevant variable.\n#\n#   - IOTA_AUTH_USER, IOTA_AUTH_PASSWORD - when using Keystone Security \n#   - IOTA_AUTH_CLIENT_ID, IOTA_AUTH_CLIENT_SECRET - when using OAuth2 Security\n#\n#   The following RUN command retrieves the source code from GitHub.\n#   \n#   To obtain the latest stable release run this Docker file with the parameters\n#   --no-cache --build-arg DOWNLOAD=stable\n#   To obtain any speciifc version of a release run this Docker file with the parameters\n#   --no-cache --build-arg DOWNLOAD=1.7.0\n#\n#   The default download is the latest tip of the master of the named repository on GitHub\n#\n#   Alternatively for local development, just copy this Dockerfile into file the root of the repository and \n#   replace the whole RUN statement by the following COPY statement in your local source using :\n#\n#   COPY . /opt/iotaul/\n#\nRUN if [ \"${DOWNLOAD}\" = \"latest\" ] ; then RELEASE=\"${SOURCE_BRANCH}\" ;echo \"INFO: Building Latest Development from ${SOURCE_BRANCH} branch.\" ; elif [ \"${DOWNLOAD}\" = \"stable\" ] ; then RELEASE=$( curl -s https://api.github.com/repos/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/releases/latest | grep 'tag_name' | cut -d\\\" -f4 ;) ;echo \"INFO: Building Latest Stable Release: ${RELEASE}\" ; else RELEASE=\"${DOWNLOAD}\" ;echo \"INFO: Building Release: ${RELEASE}\" ; fi \\\n && RELEASE_CONCAT=$( echo \"${RELEASE}\" | tr / - ;) ; apt-get update \\\n && apt-get install --no-install-recommends unzip -y \\\n && wget --no-check-certificate -O source.zip https://github.com/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/archive/\"${RELEASE}\".zip \\\n && unzip source.zip \\\n && rm source.zip \\\n && mv \"${GITHUB_REPOSITORY}-${RELEASE_CONCAT}\" /opt/iotaul \\\n && apt-get clean \\\n && apt-get remove -y unzip \\\n && apt-get -y autoremove\nWORKDIR /opt/iotaul\nRUN apt-get update \\\n && apt-get install git -y \\\n && npm install pm2@3.2.2 -g \\\n && echo \"INFO: npm install --production...\" \\\n && npm install --production \\\n && apt-get clean \\\n && apt-get remove -y git \\\n && apt-get -y autoremove \\\n && chmod +x docker/entrypoint.sh\nUSER node\nENV NODE_ENV=\"production\"\n#   Expose 4061 for NORTH PORT, 7896 for HTTP PORT\nEXPOSE ${IOTA_NORTH_PORT:-4061} ${IOTA_HTTP_PORT:-7896}\nENTRYPOINT [\"docker/entrypoint.sh\"]\nCMD [\"--\", \"config.js\"]\n","originalDockerfileUglifiedHash":"1c01fb155410314c0d8b80f771a6c241","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/eb3a3f78d94f7b9bdba26f48652c28447660f671.dockerfile"}