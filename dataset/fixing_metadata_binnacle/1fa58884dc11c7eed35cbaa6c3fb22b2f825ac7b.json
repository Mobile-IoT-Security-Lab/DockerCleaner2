{"seed":649564481,"processedDockerfileHash":"630651a340c7c2c8691f5a67bd941b6e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\n#  #########\n#  # CUDA ##\n#  #########\n#   https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-14.04/cuda/8.0/runtime/Dockerfile\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nRUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 \\\n && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n && apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub \\\n && echo \"$NVIDIA_GPGKEY_SUM cudasign.pub\" | sha256sum -c --strict - \\\n && rm cudasign.pub \\\n && echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list\nENV CUDA_VERSION=\"8.0\"\nLABEL com.nvidia.cuda.version=\"8.0\"\nENV CUDA_PKG_VERSION=\"8-0=8.0.44-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-nvrtc-$CUDA_PKG_VERSION cuda-nvgraph-$CUDA_PKG_VERSION cuda-cusolver-$CUDA_PKG_VERSION cuda-cublas-$CUDA_PKG_VERSION cuda-cufft-$CUDA_PKG_VERSION cuda-curand-$CUDA_PKG_VERSION cuda-cusparse-$CUDA_PKG_VERSION cuda-npp-$CUDA_PKG_VERSION cuda-cudart-$CUDA_PKG_VERSION -y \\\n && ln -s cuda-$CUDA_VERSION /usr/local/cuda\nRUN echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf \\\n && echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf \\\n && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\n#   https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-14.04/cuda/8.0/devel/Dockerfile\nRUN apt-get install --no-install-recommends cuda-core-$CUDA_PKG_VERSION cuda-misc-headers-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION cuda-nvrtc-dev-$CUDA_PKG_VERSION cuda-nvml-dev-$CUDA_PKG_VERSION cuda-nvgraph-dev-$CUDA_PKG_VERSION cuda-cusolver-dev-$CUDA_PKG_VERSION cuda-cublas-dev-$CUDA_PKG_VERSION cuda-cufft-dev-$CUDA_PKG_VERSION cuda-curand-dev-$CUDA_PKG_VERSION cuda-cusparse-dev-$CUDA_PKG_VERSION cuda-npp-dev-$CUDA_PKG_VERSION cuda-cudart-dev-$CUDA_PKG_VERSION cuda-driver-dev-$CUDA_PKG_VERSION -y\nENV LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}\"\n#  ##########\n#  # cuDNN ##\n#  ##########\n#   https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-14.04/cuda/8.0/devel/cudnn5/Dockerfile\nRUN apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 -y\nENV CUDNN_VERSION=\"5\"\nLABEL com.nvidia.cudnn.version=\"5\"\nRUN CUDNN_DOWNLOAD_SUM=a87cb2df2e5e7cc0a05e266734e679ee1a2fadad6f06af82a76ed81a23b102c8 \\\n && curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v5.1/cudnn-8.0-linux-x64-v5.1.tgz -O \\\n && echo \"$CUDNN_DOWNLOAD_SUM cudnn-8.0-linux-x64-v5.1.tgz\" | sha256sum -c --strict - \\\n && tar -xzf cudnn-8.0-linux-x64-v5.1.tgz -C /usr/local \\\n && rm cudnn-8.0-linux-x64-v5.1.tgz \\\n && ldconfig\n#  ##############\n#  # Miniconda ##\n#  ##############\n#   https://hub.docker.com/r/continuumio/miniconda/~/dockerfile/\nRUN apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 ca-certificates=20170717~14.04.2 -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget https://repo.continuum.io/miniconda/Miniconda2-4.1.11-Linux-x86_64.sh -O miniconda.sh \\\n && /bin/bash miniconda.sh -b -p /opt/conda \\\n && rm miniconda.sh\n#  ###############\n#  # TensorFlow ##\n#  ###############\n#   https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN apt-get install --no-install-recommends build-essential=11.6ubuntu6 libfreetype6-dev=2.5.2-1ubuntu2.8 libpng12-dev=1.2.50-1ubuntu2.14.04.3 libzmq3-dev=4.0.4+dfsg-2ubuntu0.1 pkg-config=0.26-1ubuntu4 software-properties-common=0.92.37.8 unzip=6.0-9ubuntu1.5 -y\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /opt/conda/bin\n#   https://github.com/ContinuumIO/anaconda-issues/issues/542\nRUN ./conda update -y setuptools\n#   https://www.tensorflow.org/versions/r0.11/get_started/os_setup.html#pip-installation\n#   Ubuntu/Linux 64-bit, GPU enabled, Python 2.7; Requires CUDA toolkit 8.0 and CuDNN v5.\nRUN ./pip install --upgrade pip\nENV TF_BINARY_URL=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl\"\nRUN ./pip install --ignore-installed --upgrade $TF_BINARY_URL\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64\"\nENV CUDA_HOME=\"/usr/local/cuda\"\n#  ##########\n#  # Keras ##\n#  ##########\n#   https://keras.io/#installation\nRUN ./pip install keras \\\n && ./pip install h5py\n#  ###########\n#  # OpenCV ##\n#  ###########\n#   http://askubuntu.com/questions/761589/installing-libgtk-x11-2-0-so-0-in-ubuntu-15-04\nRUN apt-get install --no-install-recommends libgtk2.0-0=2.24.23-0ubuntu1.4 -y\n#   https://anaconda.org/menpo/opencv3\nRUN ./conda install -y -c menpo opencv3=3.1.0\n#  ############################\n#  # Other Python libraries ##\n#  ############################\nRUN ./pip install zmq\n#  ###########\n#  ## Misc. ##\n#  ###########\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/conda/bin:$PATH\"\nWORKDIR /research-master\nCMD bash\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\n# #########\n# # CUDA ##\n# #########\n#  https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-14.04/cuda/8.0/runtime/Dockerfile\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nRUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 \\\n && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n && apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub \\\n && echo \"$NVIDIA_GPGKEY_SUM cudasign.pub\" | sha256sum -c --strict - \\\n && rm cudasign.pub \\\n && echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list\nENV CUDA_VERSION=\"8.0\"\nLABEL com.nvidia.cuda.version=\"8.0\"\nENV CUDA_PKG_VERSION=\"8-0=8.0.44-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-nvrtc-$CUDA_PKG_VERSION cuda-nvgraph-$CUDA_PKG_VERSION cuda-cusolver-$CUDA_PKG_VERSION cuda-cublas-$CUDA_PKG_VERSION cuda-cufft-$CUDA_PKG_VERSION cuda-curand-$CUDA_PKG_VERSION cuda-cusparse-$CUDA_PKG_VERSION cuda-npp-$CUDA_PKG_VERSION cuda-cudart-$CUDA_PKG_VERSION -y \\\n && ln -s cuda-$CUDA_VERSION /usr/local/cuda\nRUN echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf \\\n && echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf \\\n && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\n#  https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-14.04/cuda/8.0/devel/Dockerfile\nRUN apt-get install --no-install-recommends cuda-core-$CUDA_PKG_VERSION cuda-misc-headers-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION cuda-nvrtc-dev-$CUDA_PKG_VERSION cuda-nvml-dev-$CUDA_PKG_VERSION cuda-nvgraph-dev-$CUDA_PKG_VERSION cuda-cusolver-dev-$CUDA_PKG_VERSION cuda-cublas-dev-$CUDA_PKG_VERSION cuda-cufft-dev-$CUDA_PKG_VERSION cuda-curand-dev-$CUDA_PKG_VERSION cuda-cusparse-dev-$CUDA_PKG_VERSION cuda-npp-dev-$CUDA_PKG_VERSION cuda-cudart-dev-$CUDA_PKG_VERSION cuda-driver-dev-$CUDA_PKG_VERSION -y\nENV LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}\"\n# ##########\n# # cuDNN ##\n# ##########\n#  https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-14.04/cuda/8.0/devel/cudnn5/Dockerfile\nRUN apt-get install --no-install-recommends curl -y\nENV CUDNN_VERSION=\"5\"\nLABEL com.nvidia.cudnn.version=\"5\"\nRUN CUDNN_DOWNLOAD_SUM=a87cb2df2e5e7cc0a05e266734e679ee1a2fadad6f06af82a76ed81a23b102c8 \\\n && curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v5.1/cudnn-8.0-linux-x64-v5.1.tgz -O \\\n && echo \"$CUDNN_DOWNLOAD_SUM cudnn-8.0-linux-x64-v5.1.tgz\" | sha256sum -c --strict - \\\n && tar -xzf cudnn-8.0-linux-x64-v5.1.tgz -C /usr/local \\\n && rm cudnn-8.0-linux-x64-v5.1.tgz \\\n && ldconfig\n# ##############\n# # Miniconda ##\n# ##############\n#  https://hub.docker.com/r/continuumio/miniconda/~/dockerfile/\nRUN apt-get install --no-install-recommends wget ca-certificates -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget https://repo.continuum.io/miniconda/Miniconda2-4.1.11-Linux-x86_64.sh -O miniconda.sh \\\n && /bin/bash miniconda.sh -b -p /opt/conda \\\n && rm miniconda.sh\n# ###############\n# # TensorFlow ##\n# ###############\n#  https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN apt-get install --no-install-recommends build-essential libfreetype6-dev libpng12-dev libzmq3-dev pkg-config software-properties-common unzip -y\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /opt/conda/bin\n#  https://github.com/ContinuumIO/anaconda-issues/issues/542\nRUN ./conda update -y setuptools\n#  https://www.tensorflow.org/versions/r0.11/get_started/os_setup.html#pip-installation\n#  Ubuntu/Linux 64-bit, GPU enabled, Python 2.7; Requires CUDA toolkit 8.0 and CuDNN v5.\nRUN ./pip install --upgrade pip\nENV TF_BINARY_URL=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl\"\nRUN ./pip install --ignore-installed --upgrade $TF_BINARY_URL\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64\"\nENV CUDA_HOME=\"/usr/local/cuda\"\n# ##########\n# # Keras ##\n# ##########\n#  https://keras.io/#installation\nRUN ./pip install keras \\\n && ./pip install h5py\n# ###########\n# # OpenCV ##\n# ###########\n#  http://askubuntu.com/questions/761589/installing-libgtk-x11-2-0-so-0-in-ubuntu-15-04\nRUN apt-get install --no-install-recommends libgtk2.0-0 -y\n#  https://anaconda.org/menpo/opencv3\nRUN ./conda install -y -c menpo opencv3=3.1.0\n# ############################\n# # Other Python libraries ##\n# ############################\nRUN ./pip install zmq\n# ###########\n# ## Misc. ##\n# ###########\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/conda/bin:$PATH\"\nWORKDIR /research-master\nCMD bash\n","injectedSmells":[],"originalDockerfileHash":"7515f66c3d0520cd8d6a6cf026b79141","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\n#  #########\n#  # CUDA ##\n#  #########\n#   https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-14.04/cuda/8.0/runtime/Dockerfile\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nRUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 \\\n && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n && apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub \\\n && echo \"$NVIDIA_GPGKEY_SUM cudasign.pub\" | sha256sum -c --strict - \\\n && rm cudasign.pub \\\n && echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list\nENV CUDA_VERSION=\"8.0\"\nLABEL com.nvidia.cuda.version=\"8.0\"\nENV CUDA_PKG_VERSION=\"8-0=8.0.44-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-nvrtc-$CUDA_PKG_VERSION cuda-nvgraph-$CUDA_PKG_VERSION cuda-cusolver-$CUDA_PKG_VERSION cuda-cublas-$CUDA_PKG_VERSION cuda-cufft-$CUDA_PKG_VERSION cuda-curand-$CUDA_PKG_VERSION cuda-cusparse-$CUDA_PKG_VERSION cuda-npp-$CUDA_PKG_VERSION cuda-cudart-$CUDA_PKG_VERSION -y \\\n && ln -s cuda-$CUDA_VERSION /usr/local/cuda\nRUN echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf \\\n && echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf \\\n && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\n#   https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-14.04/cuda/8.0/devel/Dockerfile\nRUN apt-get install --no-install-recommends cuda-core-$CUDA_PKG_VERSION cuda-misc-headers-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION cuda-nvrtc-dev-$CUDA_PKG_VERSION cuda-nvml-dev-$CUDA_PKG_VERSION cuda-nvgraph-dev-$CUDA_PKG_VERSION cuda-cusolver-dev-$CUDA_PKG_VERSION cuda-cublas-dev-$CUDA_PKG_VERSION cuda-cufft-dev-$CUDA_PKG_VERSION cuda-curand-dev-$CUDA_PKG_VERSION cuda-cusparse-dev-$CUDA_PKG_VERSION cuda-npp-dev-$CUDA_PKG_VERSION cuda-cudart-dev-$CUDA_PKG_VERSION cuda-driver-dev-$CUDA_PKG_VERSION -y\nENV LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}\"\n#  ##########\n#  # cuDNN ##\n#  ##########\n#   https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-14.04/cuda/8.0/devel/cudnn5/Dockerfile\nRUN apt-get install --no-install-recommends curl -y\nENV CUDNN_VERSION=\"5\"\nLABEL com.nvidia.cudnn.version=\"5\"\nRUN CUDNN_DOWNLOAD_SUM=a87cb2df2e5e7cc0a05e266734e679ee1a2fadad6f06af82a76ed81a23b102c8 \\\n && curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v5.1/cudnn-8.0-linux-x64-v5.1.tgz -O \\\n && echo \"$CUDNN_DOWNLOAD_SUM cudnn-8.0-linux-x64-v5.1.tgz\" | sha256sum -c --strict - \\\n && tar -xzf cudnn-8.0-linux-x64-v5.1.tgz -C /usr/local \\\n && rm cudnn-8.0-linux-x64-v5.1.tgz \\\n && ldconfig\n#  ##############\n#  # Miniconda ##\n#  ##############\n#   https://hub.docker.com/r/continuumio/miniconda/~/dockerfile/\nRUN apt-get install --no-install-recommends wget ca-certificates -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget https://repo.continuum.io/miniconda/Miniconda2-4.1.11-Linux-x86_64.sh -O miniconda.sh \\\n && /bin/bash miniconda.sh -b -p /opt/conda \\\n && rm miniconda.sh\n#  ###############\n#  # TensorFlow ##\n#  ###############\n#   https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN apt-get install --no-install-recommends build-essential libfreetype6-dev libpng12-dev libzmq3-dev pkg-config software-properties-common unzip -y\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /opt/conda/bin\n#   https://github.com/ContinuumIO/anaconda-issues/issues/542\nRUN ./conda update -y setuptools\n#   https://www.tensorflow.org/versions/r0.11/get_started/os_setup.html#pip-installation\n#   Ubuntu/Linux 64-bit, GPU enabled, Python 2.7; Requires CUDA toolkit 8.0 and CuDNN v5.\nRUN ./pip install --upgrade pip\nENV TF_BINARY_URL=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl\"\nRUN ./pip install --ignore-installed --upgrade $TF_BINARY_URL\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64\"\nENV CUDA_HOME=\"/usr/local/cuda\"\n#  ##########\n#  # Keras ##\n#  ##########\n#   https://keras.io/#installation\nRUN ./pip install keras \\\n && ./pip install h5py\n#  ###########\n#  # OpenCV ##\n#  ###########\n#   http://askubuntu.com/questions/761589/installing-libgtk-x11-2-0-so-0-in-ubuntu-15-04\nRUN apt-get install --no-install-recommends libgtk2.0-0 -y\n#   https://anaconda.org/menpo/opencv3\nRUN ./conda install -y -c menpo opencv3=3.1.0\n#  ############################\n#  # Other Python libraries ##\n#  ############################\nRUN ./pip install zmq\n#  ###########\n#  ## Misc. ##\n#  ###########\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/conda/bin:$PATH\"\nWORKDIR /research-master\nCMD bash\n","originalDockerfileUglifiedHash":"57019b2f77d956bc99e50500b35e95a6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1fa58884dc11c7eed35cbaa6c3fb22b2f825ac7b.dockerfile"}