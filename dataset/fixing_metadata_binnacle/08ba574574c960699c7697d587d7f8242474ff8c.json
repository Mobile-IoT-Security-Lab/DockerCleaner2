{"seed":2867800906,"processedDockerfileHash":"445cd8f9b0280abb90ee146538d87a69","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM gcr.io/kaggle-images/python\nLABEL maintainer=\"florian.geigl@gmail.com\"\nCOPY layer_cleanup.sh /usr/local/bin/\n#   pre-req to find fastest apt mirror\nRUN chmod +x /usr/local/bin/layer_cleanup.sh \\\n && mkdir -p /data/ \\\n && apt-key update \\\n && apt-get update \\\n && apt-get install --no-install-recommends netselect-apt -y --no-upgrade \\\n && layer_cleanup.sh\n#   Define mount volume\nVOLUME [\"/data\", \"/var/log\"]\n#   Install apt stuff, graph-tool, setup ssh, set timezone and update conda\nRUN cat /etc/apt/sources.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 \\\n && echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" | tee /etc/apt/sources.list.d/mongodb-org-4.0.list \\\n && echo \"deb http://deb.debian.org/debian stretch-backports main\" | tee /etc/apt/sources.list.d/stretch-backports.list \\\n && cat /etc/apt/sources.list \\\n && apt-key update \\\n && apt-get update \\\n && apt-get install --no-install-recommends bash-completion=1:2.11-6ubuntu1 vim-tiny=2:9.0.1000-4ubuntu2 screen=4.9.0-4 htop=3.2.2-1 less=590-1.2 git=1:2.39.2-1ubuntu1 openssh-server=1:9.0p1-1ubuntu8 supervisor=4.2.1-1ubuntu1 dos2unix=7.4.3-1 mongodb-org-shell mongodb-org-tools -y --no-upgrade \\\n && mkdir /var/run/sshd \\\n && echo 'root:datascience' | chpasswd \\\n && sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n && conda config --add channels conda-forge \\\n && echo \"/opt/conda/lib\" > /etc/ld.so.conf \\\n && ldconfig \\\n && layer_cleanup.sh\n#   Install conda/pip python3 libs and notebook extensions\nCOPY jupyter_custom.js py_default_imports.js /tmp/\nRUN pip install pip==23.1 --upgrade \\\n && conda install libev jupyterlab flake8 jupyter_contrib_nbextensions yapf ipywidgets pandasql dask distributed pyodbc pymc3 geopy hdf5 h5py ffmpeg autopep8 datashader bqplot pyspark bokeh python-snappy lz4 gxx_linux-64 pika pathos pymssql tabulate gensim textblob geocoder scikit-optimize matplotlib-venn dask-searchcv jupyterthemes libarchive pyhive elasticsearch-dsl libpng libtiff jupyter_latex_envs tmux kafka-python scikit-plot fire pdir2 h2o turbodbc -y --no-channel-priority \\\n && conda install -c damianavila82 rise -y \\\n && jupyter serverextension enable --py jupyterlab --sys-prefix \\\n && jupyter contrib nbextension install --sys-prefix \\\n && git clone https://github.com/Calysto/notebook-extensions.git /opt/calysto_notebook-extensions \\\n && cd /opt/calysto_notebook-extensions \\\n && jupyter nbextension install calysto --sys-prefix \\\n && echo \"codefolding/main code_font_size/code_font_size toc2/main autosavetime/main scratchpad/main search-replace/main comment-uncomment/main select_keymap/main spellchecker/main toggle_all_line_numbers/main chrome-clipboard/main execute_time/ExecuteTime notify/notify tree-filter/index printview/main table_beautifier/main highlighter/highlighter navigation-hotkeys/main addbefore/main snippets_menu/main datestamper/main help_panel/help_panel hide_header/main freeze/main limit_output/main varInspector/main calysto/cell-tools/main calysto/document-tools/main\" | xargs -n1 jupyter nbextension enable \\\n && jupyter nbextension enable --py --sys-prefix widgetsnbextension \\\n && mkdir -p /root/.jupyter/custom/ \\\n && cat /tmp/jupyter_custom.js >> /root/.jupyter/custom/custom.js \\\n && mkdir -p /tmp/py_default_imports/ \\\n && mv /tmp/py_default_imports.js /tmp/py_default_imports/main.js \\\n && jupyter nbextension install --sys-prefix /tmp/py_default_imports \\\n && jupyter nbextension enable --sys-prefix py_default_imports/main \\\n && pip install ftfy==6.1.1 scales==1.0.9 pyflux==0.4.15 cookiecutter==2.1.1 segtok==1.5.11 pandas-ply==0.2.1 influxdb==5.3.1 bpython==0.24 implicit==0.6.2 cassandra-driver==3.26.0 sklearn-pandas==2.2.0 readchar==4.0.5 lightfm==1.17 python-tds==1.12.0 tpot==0.11.7 dask-ec2==0.5.0 pylzma==0.5.0 hdfs==2.7.0 cqlsh==6.1.2 tables==3.8.0 xgbfir==0.3.1 pygelf==0.4.2 featexp==0.0.7 pycm==3.8 awscli==1.27.114 lime==0.2.0.1 \\\n && jt -t grade3 -f sourcemed -T -N -cellw 1200 \\\n && echo \"c.NotebookApp.token = ''\\nc.NotebookApp.password = ''\\n\" >> /root/.jupyter/jupyter_notebook_config.py \\\n && layer_cleanup.sh\n#   Copy some start script into the container.\nCOPY export_environment.sh init.sh /usr/local/bin/\n#   Fix permissions and bash-completion\nCOPY append2bashprofile.sh append2bashrc.sh /tmp/\nRUN chmod +x /usr/local/bin/init.sh /usr/local/bin/export_environment.sh \\\n && cat /tmp/append2bashrc.sh >> /etc/bash.bashrc \\\n && cat /tmp/append2bashrc.sh >> ~/.bashrc \\\n && cat /tmp/append2bashprofile.sh >> ~/.bash_profile \\\n && layer_cleanup.sh\n#   Expose jupyter notebook (8888), jupyter labs (8889), ss port (22) and supervisor web interface (9001).\nEXPOSE 8888/tcp 8889/tcp 22/tcp 9001/tcp\n#   copy supervisor conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   Start all scripts\nENTRYPOINT [\"init.sh\"]\nCMD []\n#   test basic notebook\nCOPY tests/py3_test_notebook.ipynb /tmp/\nRUN cd /tmp/ \\\n && jupyter nbconvert --ExecutePreprocessor.timeout=600 --to notebook --execute py3_test_notebook.ipynb \\\n && layer_cleanup.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM gcr.io/kaggle-images/python\nLABEL maintainer=\"florian.geigl@gmail.com\"\nCOPY layer_cleanup.sh /usr/local/bin/\n#  pre-req to find fastest apt mirror\nRUN chmod +x /usr/local/bin/layer_cleanup.sh \\\n && mkdir -p /data/ \\\n && apt-key update \\\n && apt-get update \\\n && apt-get install --no-install-recommends netselect-apt -y --no-upgrade \\\n && layer_cleanup.sh\n#  Define mount volume\nVOLUME [\"/data\", \"/var/log\"]\n#  Install apt stuff, graph-tool, setup ssh, set timezone and update conda\nRUN cat /etc/apt/sources.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 \\\n && echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" | tee /etc/apt/sources.list.d/mongodb-org-4.0.list \\\n && echo \"deb http://deb.debian.org/debian stretch-backports main\" | tee /etc/apt/sources.list.d/stretch-backports.list \\\n && cat /etc/apt/sources.list \\\n && apt-key update \\\n && apt-get update \\\n && apt-get install --no-install-recommends bash-completion vim-tiny screen htop less git openssh-server supervisor dos2unix mongodb-org-shell mongodb-org-tools -y --no-upgrade \\\n && mkdir /var/run/sshd \\\n && echo 'root:datascience' | chpasswd \\\n && sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n && conda config --add channels conda-forge \\\n && echo \"/opt/conda/lib\" > /etc/ld.so.conf \\\n && ldconfig \\\n && layer_cleanup.sh\n#  Install conda/pip python3 libs and notebook extensions\nCOPY jupyter_custom.js py_default_imports.js /tmp/\nRUN pip install pip --upgrade \\\n && conda install libev jupyterlab flake8 jupyter_contrib_nbextensions yapf ipywidgets pandasql dask distributed pyodbc pymc3 geopy hdf5 h5py ffmpeg autopep8 datashader bqplot pyspark bokeh python-snappy lz4 gxx_linux-64 pika pathos pymssql tabulate gensim textblob geocoder scikit-optimize matplotlib-venn dask-searchcv jupyterthemes libarchive pyhive elasticsearch-dsl libpng libtiff jupyter_latex_envs tmux kafka-python scikit-plot fire pdir2 h2o turbodbc -y --no-channel-priority \\\n && conda install -c damianavila82 rise -y \\\n && jupyter serverextension enable --py jupyterlab --sys-prefix \\\n && jupyter contrib nbextension install --sys-prefix \\\n && git clone https://github.com/Calysto/notebook-extensions.git /opt/calysto_notebook-extensions \\\n && cd /opt/calysto_notebook-extensions \\\n && jupyter nbextension install calysto --sys-prefix \\\n && echo \"codefolding/main code_font_size/code_font_size toc2/main autosavetime/main scratchpad/main search-replace/main comment-uncomment/main select_keymap/main spellchecker/main toggle_all_line_numbers/main chrome-clipboard/main execute_time/ExecuteTime notify/notify tree-filter/index printview/main table_beautifier/main highlighter/highlighter navigation-hotkeys/main addbefore/main snippets_menu/main datestamper/main help_panel/help_panel hide_header/main freeze/main limit_output/main varInspector/main calysto/cell-tools/main calysto/document-tools/main\" | xargs -n1 jupyter nbextension enable \\\n && jupyter nbextension enable --py --sys-prefix widgetsnbextension \\\n && mkdir -p /root/.jupyter/custom/ \\\n && cat /tmp/jupyter_custom.js >> /root/.jupyter/custom/custom.js \\\n && mkdir -p /tmp/py_default_imports/ \\\n && mv /tmp/py_default_imports.js /tmp/py_default_imports/main.js \\\n && jupyter nbextension install --sys-prefix /tmp/py_default_imports \\\n && jupyter nbextension enable --sys-prefix py_default_imports/main \\\n && pip install ftfy scales pyflux cookiecutter segtok pandas-ply influxdb bpython implicit cassandra-driver sklearn-pandas readchar lightfm python-tds tpot dask-ec2 pylzma hdfs cqlsh tables xgbfir pygelf featexp pycm awscli lime \\\n && jt -t grade3 -f sourcemed -T -N -cellw 1200 \\\n && echo \"c.NotebookApp.token = ''\\nc.NotebookApp.password = ''\\n\" >> /root/.jupyter/jupyter_notebook_config.py \\\n && layer_cleanup.sh\n#  Copy some start script into the container.\nCOPY export_environment.sh init.sh /usr/local/bin/\n#  Fix permissions and bash-completion\nCOPY append2bashprofile.sh append2bashrc.sh /tmp/\nRUN chmod +x /usr/local/bin/init.sh /usr/local/bin/export_environment.sh \\\n && cat /tmp/append2bashrc.sh >> /etc/bash.bashrc \\\n && cat /tmp/append2bashrc.sh >> ~/.bashrc \\\n && cat /tmp/append2bashprofile.sh >> ~/.bash_profile \\\n && layer_cleanup.sh\n#  Expose jupyter notebook (8888), jupyter labs (8889), ss port (22) and supervisor web interface (9001).\nEXPOSE 8888/tcp 8889/tcp 22/tcp 9001/tcp\n#  copy supervisor conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  Start all scripts\nENTRYPOINT [\"init.sh\"]\nCMD []\n#  test basic notebook\nCOPY tests/py3_test_notebook.ipynb /tmp/\nRUN cd /tmp/ \\\n && jupyter nbconvert --ExecutePreprocessor.timeout=600 --to notebook --execute py3_test_notebook.ipynb \\\n && layer_cleanup.sh\n","injectedSmells":[],"originalDockerfileHash":"a0f4a9cfa3c27eecda65895eaaef2b4a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM gcr.io/kaggle-images/python\nLABEL maintainer=\"florian.geigl@gmail.com\"\nCOPY layer_cleanup.sh /usr/local/bin/\n#   pre-req to find fastest apt mirror\nRUN chmod +x /usr/local/bin/layer_cleanup.sh \\\n && mkdir -p /data/ \\\n && apt-key update \\\n && apt-get update \\\n && apt-get install --no-install-recommends netselect-apt -y --no-upgrade \\\n && layer_cleanup.sh\n#   Define mount volume\nVOLUME [\"/data\", \"/var/log\"]\n#   Install apt stuff, graph-tool, setup ssh, set timezone and update conda\nRUN cat /etc/apt/sources.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 \\\n && echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" | tee /etc/apt/sources.list.d/mongodb-org-4.0.list \\\n && echo \"deb http://deb.debian.org/debian stretch-backports main\" | tee /etc/apt/sources.list.d/stretch-backports.list \\\n && cat /etc/apt/sources.list \\\n && apt-key update \\\n && apt-get update \\\n && apt-get install --no-install-recommends bash-completion vim-tiny screen htop less git openssh-server supervisor dos2unix mongodb-org-shell mongodb-org-tools -y --no-upgrade \\\n && mkdir /var/run/sshd \\\n && echo 'root:datascience' | chpasswd \\\n && sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n && conda config --add channels conda-forge \\\n && echo \"/opt/conda/lib\" > /etc/ld.so.conf \\\n && ldconfig \\\n && layer_cleanup.sh\n#   Install conda/pip python3 libs and notebook extensions\nCOPY jupyter_custom.js py_default_imports.js /tmp/\nRUN pip install pip --upgrade \\\n && conda install libev jupyterlab flake8 jupyter_contrib_nbextensions yapf ipywidgets pandasql dask distributed pyodbc pymc3 geopy hdf5 h5py ffmpeg autopep8 datashader bqplot pyspark bokeh python-snappy lz4 gxx_linux-64 pika pathos pymssql tabulate gensim textblob geocoder scikit-optimize matplotlib-venn dask-searchcv jupyterthemes libarchive pyhive elasticsearch-dsl libpng libtiff jupyter_latex_envs tmux kafka-python scikit-plot fire pdir2 h2o turbodbc -y --no-channel-priority \\\n && conda install -c damianavila82 rise -y \\\n && jupyter serverextension enable --py jupyterlab --sys-prefix \\\n && jupyter contrib nbextension install --sys-prefix \\\n && git clone https://github.com/Calysto/notebook-extensions.git /opt/calysto_notebook-extensions \\\n && cd /opt/calysto_notebook-extensions \\\n && jupyter nbextension install calysto --sys-prefix \\\n && echo \"codefolding/main code_font_size/code_font_size toc2/main autosavetime/main scratchpad/main search-replace/main comment-uncomment/main select_keymap/main spellchecker/main toggle_all_line_numbers/main chrome-clipboard/main execute_time/ExecuteTime notify/notify tree-filter/index printview/main table_beautifier/main highlighter/highlighter navigation-hotkeys/main addbefore/main snippets_menu/main datestamper/main help_panel/help_panel hide_header/main freeze/main limit_output/main varInspector/main calysto/cell-tools/main calysto/document-tools/main\" | xargs -n1 jupyter nbextension enable \\\n && jupyter nbextension enable --py --sys-prefix widgetsnbextension \\\n && mkdir -p /root/.jupyter/custom/ \\\n && cat /tmp/jupyter_custom.js >> /root/.jupyter/custom/custom.js \\\n && mkdir -p /tmp/py_default_imports/ \\\n && mv /tmp/py_default_imports.js /tmp/py_default_imports/main.js \\\n && jupyter nbextension install --sys-prefix /tmp/py_default_imports \\\n && jupyter nbextension enable --sys-prefix py_default_imports/main \\\n && pip install ftfy scales pyflux cookiecutter segtok pandas-ply influxdb bpython implicit cassandra-driver sklearn-pandas readchar lightfm python-tds tpot dask-ec2 pylzma hdfs cqlsh tables xgbfir pygelf featexp pycm awscli lime \\\n && jt -t grade3 -f sourcemed -T -N -cellw 1200 \\\n && echo \"c.NotebookApp.token = ''\\nc.NotebookApp.password = ''\\n\" >> /root/.jupyter/jupyter_notebook_config.py \\\n && layer_cleanup.sh\n#   Copy some start script into the container.\nCOPY export_environment.sh init.sh /usr/local/bin/\n#   Fix permissions and bash-completion\nCOPY append2bashprofile.sh append2bashrc.sh /tmp/\nRUN chmod +x /usr/local/bin/init.sh /usr/local/bin/export_environment.sh \\\n && cat /tmp/append2bashrc.sh >> /etc/bash.bashrc \\\n && cat /tmp/append2bashrc.sh >> ~/.bashrc \\\n && cat /tmp/append2bashprofile.sh >> ~/.bash_profile \\\n && layer_cleanup.sh\n#   Expose jupyter notebook (8888), jupyter labs (8889), ss port (22) and supervisor web interface (9001).\nEXPOSE 8888/tcp 8889/tcp 22/tcp 9001/tcp\n#   copy supervisor conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   Start all scripts\nENTRYPOINT [\"init.sh\"]\nCMD []\n#   test basic notebook\nCOPY tests/py3_test_notebook.ipynb /tmp/\nRUN cd /tmp/ \\\n && jupyter nbconvert --ExecutePreprocessor.timeout=600 --to notebook --execute py3_test_notebook.ipynb \\\n && layer_cleanup.sh\n","originalDockerfileUglifiedHash":"d5d03a58297399259419cb794878cfc9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/08ba574574c960699c7697d587d7f8242474ff8c.dockerfile"}