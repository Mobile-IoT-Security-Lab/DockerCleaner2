{"seed":1944926625,"processedDockerfileHash":"b558008f3aa961f0289424defbb20a36","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.8\nLABEL Description=\"reverse with nginx based on alpine\" \\\n      tags=\"latest 1.15.7 1.15\" \\\n      maintainer=\"xataz <https://github.com/xataz>\" \\\n      build_ver=\"201812072230\"\nARG NGINX_VER=1.15.7\nARG NGINX_GPG=\"573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62  A09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D  4C2C85E705DC730833990C38A9376139A524C53E  65506C02EFC250F1B7A3D694ECF0E90B2C172083  B0F4253373F8F6F510D42178520A9993A1C052F8  7338973069ED3F443F4D37DFA64FD5B17ADB39A8\"\nARG BUILD_CORES\nARG NGINX_CONF=\"--prefix=/nginx  --sbin-path=/usr/local/sbin/nginx  --http-log-path=/nginx/log/nginx_access.log  --error-log-path=/nginx/log/nginx_error.log  --pid-path=/nginx/run/nginx.pid  --lock-path=/nginx/run/nginx.lock  --user=reverse --group=reverse  --with-http_ssl_module  --with-http_v2_module  --with-http_gzip_static_module  --with-http_stub_status_module  --with-threads  --with-pcre-jit  --with-ipv6  --with-file-aio  --without-http_ssi_module  --without-http_scgi_module  --without-http_uwsgi_module  --without-http_geo_module  --without-http_autoindex_module  --without-http_split_clients_module  --without-http_memcached_module  --without-http_empty_gif_module  --without-http_browser_module\"\nARG NGINX_3RD_PARTY_MODULES=\"--add-module=/tmp/headers-more-nginx-module  --add-module=/tmp/nginx-ct  --add-module=/tmp/ngx_brotli\"\nARG OPENSSL_VER=1.1.1a\nARG LEGO_VER=v1.2.1\nRUN export BUILD_DEPS=\"build-base pcre-dev zlib-dev libc-dev wget gnupg go git autoconf automake libtool cmake binutils linux-headers jemalloc-dev\" \\\n && NB_CORES=${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && apk upgrade --no-cache \\\n && apk add s6=2.7.1.1-r1 su-exec=0.2-r0 ca-certificates=20191127-r2 curl=7.61.1-r3 jq=1.6_rc1-r1 pcre=8.42-r0 zlib=1.2.11-r1 bash=4.4.19-r1 libgcc=6.4.0-r9 libstdc++=6.4.0-r9 jemalloc=5.1.0-r0 bind-tools=9.12.4_p2-r0 libressl=2.7.5-r0 ${BUILD_DEPS} --no-cache \\\n && cd /tmp \\\n && git clone https://github.com/openresty/headers-more-nginx-module --depth=1 /tmp/headers-more-nginx-module \\\n && git clone https://github.com/bagder/libbrotli --depth=1 /tmp/libbrotli \\\n && git clone https://github.com/google/ngx_brotli --depth=1 /tmp/ngx_brotli \\\n && wget -q http://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget -q http://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget -q https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz -O /tmp/openssl-${OPENSSL_VER}.tar.gz \\\n && git clone https://github.com/grahamedgecombe/nginx-ct --depth=1 /tmp/nginx-ct \\\n && cd /tmp/libbrotli \\\n && ./autogen.sh \\\n && ./configure \\\n && mkdir brotli/c/tools/.deps \\\n && touch brotli/c/tools/.deps/brotli-brotli.Po \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/ngx_brotli \\\n && git submodule update --init \\\n && cd /tmp \\\n && tar xzf openssl-${OPENSSL_VER}.tar.gz \\\n && cd /tmp \\\n && for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys $NGINX_GPG \\\n && found=yes \\\n && break ; done \\\n && gpg --batch --verify nginx-${NGINX_VER}.tar.gz.asc nginx-${NGINX_VER}.tar.gz \\\n && tar xzf nginx-${NGINX_VER}.tar.gz \\\n && cd /tmp/nginx-${NGINX_VER} \\\n && ./configure ${NGINX_CONF} ${NGINX_3RD_PARTY_MODULES} --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -Wno-deprecated-declarations\" --with-ld-opt=\"-lrt -ljemalloc -Wl,-Bsymbolic-functions -Wl,-z,relro\" --with-openssl-opt='no-async enable-ec_nistp_64_gcc_128 no-shared no-ssl2 no-ssl3 no-comp no-idea no-weak-ssl-ciphers -DOPENSSL_NO_HEARTBEATS -O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2' --with-openssl=/tmp/openssl-${OPENSSL_VER} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && mkdir -p /tmp/go/bin \\\n && export GOPATH=/tmp/go \\\n && export GOBIN=$GOPATH/bin \\\n && git config --global http.https://gopkg.in.followRedirects true \\\n && git clone -b ${LEGO_VER} https://github.com/xenolf/lego /tmp/go/src/github.com/xenolf/lego \\\n && if [ \"${LEGO_VER}\" == \"v0.5.0\" ] ; then sed -i '70s/record/egoscale.UpdateDNSRecord(record)/' /tmp/go/src/github.com/xenolf/lego/providers/dns/exoscale/exoscale.go ; fi \\\n && go get -v github.com/xenolf/lego \\\n && mv /tmp/go/bin/lego /usr/local/bin/lego \\\n && go get github.com/grahamedgecombe/ct-submit \\\n && mv /tmp/go/bin/ct-submit /usr/local/bin/ct-submit \\\n && go get github.com/noqcks/gucci \\\n && mv /tmp/go/bin/gucci /usr/local/bin/gucci \\\n && apk del --no-cache ${BUILD_DEPS} \\\n && rm -rf /tmp/* /root/.cache\nCOPY rootfs /\nRUN chmod +x /usr/local/bin/startup /etc/s6.d/*/*\nEXPOSE 8080/tcp 8443/tcp\nENV UID=\"991\" \\\n    GID=\"991\" \\\n    EMAIL=\"admin@mydomain.local\" \\\n    SWARM=\"disable\" \\\n    TLS_VERSIONS=\"TLSv1.1 TLSv1.2\" \\\n    CIPHER_SUITE=\"EECDH+CHACHA20:EECDH+AESGCM\" \\\n    ECDH_CURVE=\"X25519:P-521:P-384:P-256\"\nENTRYPOINT [\"/usr/local/bin/startup\"]\nCMD [\"/bin/s6-svscan\", \"/etc/s6.d\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.8\nLABEL Description=\"reverse with nginx based on alpine\" \\\n      tags=\"latest 1.15.7 1.15\" \\\n      maintainer=\"xataz <https://github.com/xataz>\" \\\n      build_ver=\"201812072230\"\nARG NGINX_VER=1.15.7\nARG NGINX_GPG=\"573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62  A09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D  4C2C85E705DC730833990C38A9376139A524C53E  65506C02EFC250F1B7A3D694ECF0E90B2C172083  B0F4253373F8F6F510D42178520A9993A1C052F8  7338973069ED3F443F4D37DFA64FD5B17ADB39A8\"\nARG BUILD_CORES\nARG NGINX_CONF=\"--prefix=/nginx  --sbin-path=/usr/local/sbin/nginx  --http-log-path=/nginx/log/nginx_access.log  --error-log-path=/nginx/log/nginx_error.log  --pid-path=/nginx/run/nginx.pid  --lock-path=/nginx/run/nginx.lock  --user=reverse --group=reverse  --with-http_ssl_module  --with-http_v2_module  --with-http_gzip_static_module  --with-http_stub_status_module  --with-threads  --with-pcre-jit  --with-ipv6  --with-file-aio  --without-http_ssi_module  --without-http_scgi_module  --without-http_uwsgi_module  --without-http_geo_module  --without-http_autoindex_module  --without-http_split_clients_module  --without-http_memcached_module  --without-http_empty_gif_module  --without-http_browser_module\"\nARG NGINX_3RD_PARTY_MODULES=\"--add-module=/tmp/headers-more-nginx-module  --add-module=/tmp/nginx-ct  --add-module=/tmp/ngx_brotli\"\nARG OPENSSL_VER=1.1.1a\nARG LEGO_VER=v1.2.1\nRUN export BUILD_DEPS=\"build-base pcre-dev zlib-dev libc-dev wget gnupg go git autoconf automake libtool cmake binutils linux-headers jemalloc-dev\" \\\n && NB_CORES=${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && apk upgrade --no-cache \\\n && apk add --no-cache ${BUILD_DEPS} s6 su-exec ca-certificates curl jq pcre zlib bash libgcc libstdc++ jemalloc bind-tools libressl \\\n && cd /tmp \\\n && git clone https://github.com/openresty/headers-more-nginx-module --depth=1 /tmp/headers-more-nginx-module \\\n && git clone https://github.com/bagder/libbrotli --depth=1 /tmp/libbrotli \\\n && git clone https://github.com/google/ngx_brotli --depth=1 /tmp/ngx_brotli \\\n && wget -q http://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget -q http://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget -q https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz -O /tmp/openssl-${OPENSSL_VER}.tar.gz \\\n && git clone https://github.com/grahamedgecombe/nginx-ct --depth=1 /tmp/nginx-ct \\\n && cd /tmp/libbrotli \\\n && ./autogen.sh \\\n && ./configure \\\n && mkdir brotli/c/tools/.deps \\\n && touch brotli/c/tools/.deps/brotli-brotli.Po \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/ngx_brotli \\\n && git submodule update --init \\\n && cd /tmp \\\n && tar xzf openssl-${OPENSSL_VER}.tar.gz \\\n && cd /tmp \\\n && for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys $NGINX_GPG \\\n && found=yes \\\n && break ; done \\\n && gpg --batch --verify nginx-${NGINX_VER}.tar.gz.asc nginx-${NGINX_VER}.tar.gz \\\n && tar xzf nginx-${NGINX_VER}.tar.gz \\\n && cd /tmp/nginx-${NGINX_VER} \\\n && ./configure ${NGINX_CONF} ${NGINX_3RD_PARTY_MODULES} --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -Wno-deprecated-declarations\" --with-ld-opt=\"-lrt -ljemalloc -Wl,-Bsymbolic-functions -Wl,-z,relro\" --with-openssl-opt='no-async enable-ec_nistp_64_gcc_128 no-shared no-ssl2 no-ssl3 no-comp no-idea no-weak-ssl-ciphers -DOPENSSL_NO_HEARTBEATS -O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2' --with-openssl=/tmp/openssl-${OPENSSL_VER} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && mkdir -p /tmp/go/bin \\\n && export GOPATH=/tmp/go \\\n && export GOBIN=$GOPATH/bin \\\n && git config --global http.https://gopkg.in.followRedirects true \\\n && git clone -b ${LEGO_VER} https://github.com/xenolf/lego /tmp/go/src/github.com/xenolf/lego \\\n && if [ \"${LEGO_VER}\" == \"v0.5.0\" ] ; then sed -i '70s/record/egoscale.UpdateDNSRecord(record)/' /tmp/go/src/github.com/xenolf/lego/providers/dns/exoscale/exoscale.go ; fi \\\n && go get -v github.com/xenolf/lego \\\n && mv /tmp/go/bin/lego /usr/local/bin/lego \\\n && go get github.com/grahamedgecombe/ct-submit \\\n && mv /tmp/go/bin/ct-submit /usr/local/bin/ct-submit \\\n && go get github.com/noqcks/gucci \\\n && mv /tmp/go/bin/gucci /usr/local/bin/gucci \\\n && apk del --no-cache ${BUILD_DEPS} \\\n && rm -rf /tmp/* /root/.cache\nCOPY rootfs /\nRUN chmod +x /usr/local/bin/startup /etc/s6.d/*/*\nEXPOSE 8080/tcp 8443/tcp\nENV UID=\"991\" \\\n    GID=\"991\" \\\n    EMAIL=\"admin@mydomain.local\" \\\n    SWARM=\"disable\" \\\n    TLS_VERSIONS=\"TLSv1.1 TLSv1.2\" \\\n    CIPHER_SUITE=\"EECDH+CHACHA20:EECDH+AESGCM\" \\\n    ECDH_CURVE=\"X25519:P-521:P-384:P-256\"\nENTRYPOINT [\"/usr/local/bin/startup\"]\nCMD [\"/bin/s6-svscan\", \"/etc/s6.d\"]\n","injectedSmells":[],"originalDockerfileHash":"2635da46c2914a24ae4856e473ed39a1","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.8\nLABEL Description=\"reverse with nginx based on alpine\" \\\n      tags=\"latest 1.15.7 1.15\" \\\n      maintainer=\"xataz <https://github.com/xataz>\" \\\n      build_ver=\"201812072230\"\nARG NGINX_VER=1.15.7\nARG NGINX_GPG=\"573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62  A09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D  4C2C85E705DC730833990C38A9376139A524C53E  65506C02EFC250F1B7A3D694ECF0E90B2C172083  B0F4253373F8F6F510D42178520A9993A1C052F8  7338973069ED3F443F4D37DFA64FD5B17ADB39A8\"\nARG BUILD_CORES\nARG NGINX_CONF=\"--prefix=/nginx  --sbin-path=/usr/local/sbin/nginx  --http-log-path=/nginx/log/nginx_access.log  --error-log-path=/nginx/log/nginx_error.log  --pid-path=/nginx/run/nginx.pid  --lock-path=/nginx/run/nginx.lock  --user=reverse --group=reverse  --with-http_ssl_module  --with-http_v2_module  --with-http_gzip_static_module  --with-http_stub_status_module  --with-threads  --with-pcre-jit  --with-ipv6  --with-file-aio  --without-http_ssi_module  --without-http_scgi_module  --without-http_uwsgi_module  --without-http_geo_module  --without-http_autoindex_module  --without-http_split_clients_module  --without-http_memcached_module  --without-http_empty_gif_module  --without-http_browser_module\"\nARG NGINX_3RD_PARTY_MODULES=\"--add-module=/tmp/headers-more-nginx-module  --add-module=/tmp/nginx-ct  --add-module=/tmp/ngx_brotli\"\nARG OPENSSL_VER=1.1.1a\nARG LEGO_VER=v1.2.1\nRUN export BUILD_DEPS=\"build-base pcre-dev zlib-dev libc-dev wget gnupg go git autoconf automake libtool cmake binutils linux-headers jemalloc-dev\" \\\n && NB_CORES=${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && apk upgrade --no-cache \\\n && apk add --no-cache ${BUILD_DEPS} s6 su-exec ca-certificates curl jq pcre zlib bash libgcc libstdc++ jemalloc bind-tools libressl \\\n && cd /tmp \\\n && git clone https://github.com/openresty/headers-more-nginx-module --depth=1 /tmp/headers-more-nginx-module \\\n && git clone https://github.com/bagder/libbrotli --depth=1 /tmp/libbrotli \\\n && git clone https://github.com/google/ngx_brotli --depth=1 /tmp/ngx_brotli \\\n && wget -q http://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget -q http://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget -q https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz -O /tmp/openssl-${OPENSSL_VER}.tar.gz \\\n && git clone https://github.com/grahamedgecombe/nginx-ct --depth=1 /tmp/nginx-ct \\\n && cd /tmp/libbrotli \\\n && ./autogen.sh \\\n && ./configure \\\n && mkdir brotli/c/tools/.deps \\\n && touch brotli/c/tools/.deps/brotli-brotli.Po \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/ngx_brotli \\\n && git submodule update --init \\\n && cd /tmp \\\n && tar xzf openssl-${OPENSSL_VER}.tar.gz \\\n && cd /tmp \\\n && for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys $NGINX_GPG \\\n && found=yes \\\n && break ; done \\\n && gpg --batch --verify nginx-${NGINX_VER}.tar.gz.asc nginx-${NGINX_VER}.tar.gz \\\n && tar xzf nginx-${NGINX_VER}.tar.gz \\\n && cd /tmp/nginx-${NGINX_VER} \\\n && ./configure ${NGINX_CONF} ${NGINX_3RD_PARTY_MODULES} --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -Wno-deprecated-declarations\" --with-ld-opt=\"-lrt -ljemalloc -Wl,-Bsymbolic-functions -Wl,-z,relro\" --with-openssl-opt='no-async enable-ec_nistp_64_gcc_128 no-shared no-ssl2 no-ssl3 no-comp no-idea no-weak-ssl-ciphers -DOPENSSL_NO_HEARTBEATS -O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2' --with-openssl=/tmp/openssl-${OPENSSL_VER} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && mkdir -p /tmp/go/bin \\\n && export GOPATH=/tmp/go \\\n && export GOBIN=$GOPATH/bin \\\n && git config --global http.https://gopkg.in.followRedirects true \\\n && git clone -b ${LEGO_VER} https://github.com/xenolf/lego /tmp/go/src/github.com/xenolf/lego \\\n && if [ \"${LEGO_VER}\" == \"v0.5.0\" ] ; then sed -i '70s/record/egoscale.UpdateDNSRecord(record)/' /tmp/go/src/github.com/xenolf/lego/providers/dns/exoscale/exoscale.go ; fi \\\n && go get -v github.com/xenolf/lego \\\n && mv /tmp/go/bin/lego /usr/local/bin/lego \\\n && go get github.com/grahamedgecombe/ct-submit \\\n && mv /tmp/go/bin/ct-submit /usr/local/bin/ct-submit \\\n && go get github.com/noqcks/gucci \\\n && mv /tmp/go/bin/gucci /usr/local/bin/gucci \\\n && apk del --no-cache ${BUILD_DEPS} \\\n && rm -rf /tmp/* /root/.cache\nCOPY rootfs /\nRUN chmod +x /usr/local/bin/startup /etc/s6.d/*/*\nEXPOSE 8080/tcp 8443/tcp\nENV UID=\"991\" \\\n    GID=\"991\" \\\n    EMAIL=\"admin@mydomain.local\" \\\n    SWARM=\"disable\" \\\n    TLS_VERSIONS=\"TLSv1.1 TLSv1.2\" \\\n    CIPHER_SUITE=\"EECDH+CHACHA20:EECDH+AESGCM\" \\\n    ECDH_CURVE=\"X25519:P-521:P-384:P-256\"\nENTRYPOINT [\"/usr/local/bin/startup\"]\nCMD [\"/bin/s6-svscan\", \"/etc/s6.d\"]\n","originalDockerfileUglifiedHash":"2635da46c2914a24ae4856e473ed39a1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/19e427906f4d29b17e7912e44d20b67527e7d6c3.dockerfile"}