{"seed":2716155478,"processedDockerfileHash":"592a146ced7a61dcb2369d6baf1da19b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  JENKINS expects this file to be copied as Dockerfile to the root of the repo when Jenkins job is run for building\nFROM ubuntu:14.04\n#  # Not supported by docker-compose\nARG GITHUB_TAG\nARG GITHUB_DIR=tags/\n#  ### Basic image utilities\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends python=2.7.5-5ubuntu3 -y \\\n && apt-get install --no-install-recommends python3-pip=1.5.4-1ubuntu4 -y \\\n && apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 curl=7.35.0-1ubuntu2.20 unzip=6.0-9ubuntu1.5 gcc=4:4.8.2-1ubuntu6 python-dev=2.7.5-5ubuntu3 python-setuptools=3.3-1ubuntu2 git=1:1.9.1-1ubuntu0.10 less=458-2 lynx=2.8.8pre4-1 hdfview=2.9-1 -y\n#  #########\n#   Install some more useful tools\nRUN apt-get install --no-install-recommends aufs-tools=1:3.2+20130722-1.1 automake=1:1.14.1-2ubuntu1 bedtools=2.17.0-1 btrfs-tools=3.12-1ubuntu0.2 build-essential=11.6ubuntu6 dpkg-sig=0.13.1+nmu1 iptables=1.4.21-1ubuntu1 samtools=0.1.19-1 software-properties-common=0.92.37.8 -y\n#  ### Specific for google cloud support\nRUN wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n && unzip google-cloud-sdk.zip \\\n && rm google-cloud-sdk.zip\nRUN google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/.bashrc --disable-installation-options\nVOLUME [\"/root/.config\"]\nENV PATH=\"/google-cloud-sdk/bin:$PATH\"\nRUN yes | gcloud components update\nRUN yes | gcloud components update preview\n#  ##########\n#   Set environment variables.\nENV HOME=\"/root\"\n#   Define working directory.\nWORKDIR /root\n#   Define default command.\nCMD [\"bash\"]\n#   Installing Java 8.... dockerfile snippet from https://github.com/dockerfile/java/blob/master/oracle-java8/Dockerfile\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install --no-install-recommends oracle-java8-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk8-installer\n#   Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\nENV JAVA_LIBRARY_PATH=\"/usr/lib/jni\"\n#   Added from GATK4 public (Getting R setup)\nRUN mkdir -p /usr/local/lib/R/ \\\n && mkdir -p ~/site-library \\\n && ln -sFv ~/site-library /usr/local/lib/R/site-library\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && add-apt-repository \"deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends r-base-dev=3.1.3-1trusty r-base-core=3.1.3-1trusty -y --force-yes\n#   R setup complete...\n#   Installing GATK4 protected (from repo: gatk-protected)\n#    This Dockerfile is getting the specified tag of gatk4-protected\n#    This Dockerfile generates a jar file that will work without spark or in spark standalone.  Not on a spark cluster.\n#   Install R dependencies and build the shadowJar\nENV GITHUB_TAG=\"${GITHUB_TAG}\"\nENV GITHUB_DIR=\"${GITHUB_DIR}\"\nRUN mkdir -p /root/gatk-protected/\nCOPY . /root/gatk-protected/\nWORKDIR /root/gatk-protected/\nRUN Rscript /root/gatk-protected/scripts/install_R_packages.R\nRUN ./gradlew clean compileTestJava shadowJar\nWORKDIR /root\n#   Make sure we can see a help message\nRUN ln -sFv /root/gatk-protected/build/libs/gatk-protected.jar\nRUN java -jar gatk-protected.jar -h\n#   Install git lfs and get latest big files\nWORKDIR /root/gatk-protected/\nRUN bash scripts/install_git_lfs.sh\nRUN echo This docker image is running gatk-protected `git describe --tags ` > /root/GATK_PROTECTED_VERSION\n#   Create a simple unit test runner\nENV CI=\"true\"\nRUN echo \"cd /root/gatk-protected/ \\\n && ./gradlew test\" > /root/run_unit_tests.sh\nWORKDIR /root\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# JENKINS expects this file to be copied as Dockerfile to the root of the repo when Jenkins job is run for building\nFROM ubuntu:14.04\n# # Not supported by docker-compose\nARG GITHUB_TAG\nARG GITHUB_DIR=tags/\n# ### Basic image utilities\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install python -y \\\n && apt-get install python3-pip -y \\\n && apt-get install wget curl unzip gcc python-dev python-setuptools git less lynx hdfview -y\n# #########\n#  Install some more useful tools\nRUN apt-get install aufs-tools automake bedtools btrfs-tools build-essential dpkg-sig iptables samtools software-properties-common -y\n# ### Specific for google cloud support\nRUN wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n && unzip google-cloud-sdk.zip \\\n && rm google-cloud-sdk.zip\nRUN google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/.bashrc --disable-installation-options\nVOLUME [\"/root/.config\"]\nENV PATH=\"/google-cloud-sdk/bin:$PATH\"\nRUN yes | gcloud components update\nRUN yes | gcloud components update preview\n# ##########\n#  Set environment variables.\nENV HOME=\"/root\"\n#  Define working directory.\nWORKDIR /root\n#  Define default command.\nCMD [\"bash\"]\n#  Installing Java 8.... dockerfile snippet from https://github.com/dockerfile/java/blob/master/oracle-java8/Dockerfile\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java8-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk8-installer\n#  Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\nENV JAVA_LIBRARY_PATH=\"/usr/lib/jni\"\n#  Added from GATK4 public (Getting R setup)\nRUN mkdir -p /usr/local/lib/R/ \\\n && mkdir -p ~/site-library \\\n && ln -sFv ~/site-library /usr/local/lib/R/site-library\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && add-apt-repository \"deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\" \\\n && apt-get update \\\n && apt-get install r-base-dev=3.1.3-1trusty r-base-core=3.1.3-1trusty -y --force-yes\n#  R setup complete...\n#  Installing GATK4 protected (from repo: gatk-protected)\n#   This Dockerfile is getting the specified tag of gatk4-protected\n#   This Dockerfile generates a jar file that will work without spark or in spark standalone.  Not on a spark cluster.\n#  Install R dependencies and build the shadowJar\nENV GITHUB_TAG=\"${GITHUB_TAG}\"\nENV GITHUB_DIR=\"${GITHUB_DIR}\"\nRUN mkdir -p /root/gatk-protected/\nCOPY . /root/gatk-protected/\nWORKDIR /root/gatk-protected/\nRUN Rscript /root/gatk-protected/scripts/install_R_packages.R\nRUN ./gradlew clean compileTestJava shadowJar\nWORKDIR /root\n#  Make sure we can see a help message\nRUN ln -sFv /root/gatk-protected/build/libs/gatk-protected.jar\nRUN java -jar gatk-protected.jar -h\n#  Install git lfs and get latest big files\nWORKDIR /root/gatk-protected/\nRUN bash scripts/install_git_lfs.sh\nRUN echo This docker image is running gatk-protected `git describe --tags ` > /root/GATK_PROTECTED_VERSION\n#  Create a simple unit test runner\nENV CI=\"true\"\nRUN echo \"cd /root/gatk-protected/ \\\n && ./gradlew test\" > /root/run_unit_tests.sh\nWORKDIR /root\n","injectedSmells":[],"originalDockerfileHash":"45757ae253cf6b7f93d1fba3a1e53e56","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  JENKINS expects this file to be copied as Dockerfile to the root of the repo when Jenkins job is run for building\nFROM ubuntu:14.04\n#  # Not supported by docker-compose\nARG GITHUB_TAG\nARG GITHUB_DIR=tags/\n#  ### Basic image utilities\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install python -y \\\n && apt-get install python3-pip -y \\\n && apt-get install wget curl unzip gcc python-dev python-setuptools git less lynx hdfview -y\n#  #########\n#   Install some more useful tools\nRUN apt-get install aufs-tools automake bedtools btrfs-tools build-essential dpkg-sig iptables samtools software-properties-common -y\n#  ### Specific for google cloud support\nRUN wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n && unzip google-cloud-sdk.zip \\\n && rm google-cloud-sdk.zip\nRUN google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/.bashrc --disable-installation-options\nVOLUME [\"/root/.config\"]\nENV PATH=\"/google-cloud-sdk/bin:$PATH\"\nRUN yes | gcloud components update\nRUN yes | gcloud components update preview\n#  ##########\n#   Set environment variables.\nENV HOME=\"/root\"\n#   Define working directory.\nWORKDIR /root\n#   Define default command.\nCMD [\"bash\"]\n#   Installing Java 8.... dockerfile snippet from https://github.com/dockerfile/java/blob/master/oracle-java8/Dockerfile\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java8-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk8-installer\n#   Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\nENV JAVA_LIBRARY_PATH=\"/usr/lib/jni\"\n#   Added from GATK4 public (Getting R setup)\nRUN mkdir -p /usr/local/lib/R/ \\\n && mkdir -p ~/site-library \\\n && ln -sFv ~/site-library /usr/local/lib/R/site-library\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && add-apt-repository \"deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\" \\\n && apt-get update \\\n && apt-get install r-base-dev=3.1.3-1trusty r-base-core=3.1.3-1trusty -y --force-yes\n#   R setup complete...\n#   Installing GATK4 protected (from repo: gatk-protected)\n#    This Dockerfile is getting the specified tag of gatk4-protected\n#    This Dockerfile generates a jar file that will work without spark or in spark standalone.  Not on a spark cluster.\n#   Install R dependencies and build the shadowJar\nENV GITHUB_TAG=\"${GITHUB_TAG}\"\nENV GITHUB_DIR=\"${GITHUB_DIR}\"\nRUN mkdir -p /root/gatk-protected/\nCOPY . /root/gatk-protected/\nWORKDIR /root/gatk-protected/\nRUN Rscript /root/gatk-protected/scripts/install_R_packages.R\nRUN ./gradlew clean compileTestJava shadowJar\nWORKDIR /root\n#   Make sure we can see a help message\nRUN ln -sFv /root/gatk-protected/build/libs/gatk-protected.jar\nRUN java -jar gatk-protected.jar -h\n#   Install git lfs and get latest big files\nWORKDIR /root/gatk-protected/\nRUN bash scripts/install_git_lfs.sh\nRUN echo This docker image is running gatk-protected `git describe --tags ` > /root/GATK_PROTECTED_VERSION\n#   Create a simple unit test runner\nENV CI=\"true\"\nRUN echo \"cd /root/gatk-protected/ \\\n && ./gradlew test\" > /root/run_unit_tests.sh\nWORKDIR /root\n","originalDockerfileUglifiedHash":"0e995d2395bf273d24624b7b07d1f2b2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/861631f583067ef3865c73621c9224844f2a16c5.dockerfile"}