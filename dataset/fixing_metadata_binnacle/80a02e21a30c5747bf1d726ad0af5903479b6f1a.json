{"seed":908228571,"processedDockerfileHash":"c332ca850cb507bf14268d440bd569c0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG ALPINE_VERSION=edge\n#  #######################\n#   Build pagespeed psol #\n#  #######################\nFROM alpine:$ALPINE_VERSION AS pagespeed\n#   Check https://github.com/apache/incubator-pagespeed-mod/tags\nARG MOD_PAGESPEED_TAG=v1.13.35.2\nRUN apk add apache2-dev apr-dev apr-util-dev build-base curl gettext-dev git gperf icu-dev libjpeg-turbo-dev libpng-dev libressl-dev pcre-dev py-setuptools zlib-dev --no-cache\nWORKDIR /usr/src\nRUN git clone -b ${MOD_PAGESPEED_TAG} --recurse-submodules --depth=1 -c advice.detachedHead=false -j`nproc ` https://github.com/apache/incubator-pagespeed-mod.git modpagespeed\nWORKDIR /usr/src/modpagespeed\nCOPY patches/modpagespeed/*.patch ./\nRUN for i in *.patch; do printf \"\\r\\nApplying patch ${i%%.*}\\r\\n\" ;patch -p1 < $i || exit 1 ; done\nWORKDIR /usr/src/modpagespeed/tools/gyp\nRUN ./setup.py install\nWORKDIR /usr/src/modpagespeed\nRUN build/gyp_chromium --depth=. -D use_system_libs=1 \\\n && cd /usr/src/modpagespeed/pagespeed/automatic \\\n && make psol BUILDTYPE=Release CFLAGS+=\"-I/usr/include/apr-1\" CXXFLAGS+=\"-I/usr/include/apr-1 -DUCHAR_TYPE=uint16_t\" -j`nproc `\nRUN mkdir -p /usr/src/ngxpagespeed/psol/lib/Release/linux/x64 \\\n && mkdir -p /usr/src/ngxpagespeed/psol/include/out/Release \\\n && cp -R out/Release/obj /usr/src/ngxpagespeed/psol/include/out/Release/ \\\n && cp -R pagespeed/automatic/pagespeed_automatic.a /usr/src/ngxpagespeed/psol/lib/Release/linux/x64/ \\\n && cp -R net pagespeed testing third_party url /usr/src/ngxpagespeed/psol/include/\n#  #########################################\n#   Build Nginx with support for PageSpeed #\n#  #########################################\nFROM alpine:$ALPINE_VERSION AS nginx\n#   Check https://github.com/apache/incubator-pagespeed-ngx/tags\nARG NGX_PAGESPEED_TAG=v1.13.35.2-stable\n#   Check http://nginx.org/en/download.html for the latest version.\nARG NGINX_VERSION=1.15.6\nARG NGINX_PGPKEY=520A9993A1C052F8\nARG NGINX_BUILD_CONFIG=\" --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=/usr/lib/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-http_ssl_module  --with-http_realip_module  --with-http_addition_module  --with-http_sub_module  --with-http_dav_module  --with-http_flv_module  --with-http_mp4_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_random_index_module  --with-http_secure_link_module  --with-http_stub_status_module  --with-http_auth_request_module  --with-http_xslt_module=dynamic  --with-http_image_filter_module=dynamic  --with-http_geoip_module=dynamic  --with-threads  --with-stream  --with-stream_ssl_module  --with-stream_ssl_preread_module  --with-stream_realip_module  --with-stream_geoip_module=dynamic  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-compat  --with-file-aio  --with-http_v2_module  \"\nRUN apk add apr-dev apr-util-dev build-base ca-certificates gd-dev geoip-dev git gnupg icu-dev libjpeg-turbo-dev libpng-dev libxslt-dev linux-headers libressl-dev pcre-dev tar zlib-dev --no-cache\nWORKDIR /usr/src\nRUN git clone -b ${NGX_PAGESPEED_TAG} --recurse-submodules --shallow-submodules --depth=1 -c advice.detachedHead=false -j`nproc ` https://github.com/apache/incubator-pagespeed-ngx.git ngxpagespeed\nRUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz.asc \\\n && (gpg --keyserver ha.pool.sks-keyservers.net --keyserver-options timeout=10 --recv-keys ${NGINX_PGPKEY} || gpg --keyserver hkp://keyserver.ubuntu.com:80 --keyserver-options timeout=10 --recv-keys ${NGINX_PGPKEY} || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --keyserver-options timeout=10 --recv-keys $NGINX_PGPKEY} ) \\\n && gpg --trusted-key ${NGINX_PGPKEY} --verify nginx-${NGINX_VERSION}.tar.gz.asc\nCOPY --from=pagespeed /usr/src/ngxpagespeed /usr/src/ngxpagespeed/\nWORKDIR /usr/src/nginx\nRUN tar zxf ../nginx-${NGINX_VERSION}.tar.gz --strip-components=1 -C . \\\n && ./configure ${NGINX_BUILD_CONFIG} --add-module=/usr/src/ngxpagespeed --with-ld-opt=\"-Wl,-z,relro,--start-group -lapr-1 -laprutil-1 -licudata -licuuc -lpng -lturbojpeg -ljpeg\" \\\n && make install -j`nproc `\nRUN rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && sed -i 's|^</body>|<p><a href=\"https://www.ngxpagespeed.com/\"><img src=\"pagespeed.png\" title=\"Nginx module for rewriting web pages to reduce latency and bandwidth\" /></a></p>\\n</body>|' html/index.html \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* /usr/lib/nginx/modules/*.so\nCOPY conf/nginx.conf /etc/nginx/nginx.conf\nCOPY conf/nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nCOPY pagespeed.png /usr/share/nginx/html/\n#  #########################################\n#   Combine everything with minimal layers #\n#  #########################################\nFROM alpine:$ALPINE_VERSION\nLABEL maintainer=\"Nico Berlee <nico.berlee@on2it.net>\" \\\n      version.mod-pagespeed=\"1.13.35.2\" \\\n      version.nginx=\"1.15.6\" \\\n      version.ngx-pagespeed=\"1.13.35.2\"\nCOPY --from=pagespeed /usr/bin/envsubst /usr/local/bin\nCOPY --from=nginx /usr/sbin/nginx /usr/sbin/nginx\nCOPY --from=nginx /usr/lib/nginx/modules/ /usr/lib/nginx/modules/\nCOPY --from=nginx /etc/nginx /etc/nginx\nCOPY --from=nginx /usr/share/nginx/html/ /usr/share/nginx/html/\nRUN apk --no-cache upgrade \\\n && scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /usr/local/bin/envsubst | tr ',' '\\n' | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' | xargs apk add --no-cache \\\n && apk add tzdata --no-cache\nRUN addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && install -g nginx -o nginx -d /var/cache/ngx_pagespeed \\\n && mkdir -p /var/log/nginx \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"/usr/sbin/nginx\", \"-g\", \"daemon\", \"off\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG ALPINE_VERSION=edge\n# #######################\n#  Build pagespeed psol #\n# #######################\nFROM alpine:$ALPINE_VERSION AS pagespeed\n#  Check https://github.com/apache/incubator-pagespeed-mod/tags\nARG MOD_PAGESPEED_TAG=v1.13.35.2\nRUN apk add --no-cache apache2-dev apr-dev apr-util-dev build-base curl gettext-dev git gperf icu-dev libjpeg-turbo-dev libpng-dev libressl-dev pcre-dev py-setuptools zlib-dev\nWORKDIR /usr/src\nRUN git clone -b ${MOD_PAGESPEED_TAG} --recurse-submodules --depth=1 -c advice.detachedHead=false -j`nproc ` https://github.com/apache/incubator-pagespeed-mod.git modpagespeed\nWORKDIR /usr/src/modpagespeed\nCOPY patches/modpagespeed/*.patch ./\nRUN for i in *.patch; do printf \"\\r\\nApplying patch ${i%%.*}\\r\\n\" ;patch -p1 < $i || exit 1 ; done\nWORKDIR /usr/src/modpagespeed/tools/gyp\nRUN ./setup.py install\nWORKDIR /usr/src/modpagespeed\nRUN build/gyp_chromium --depth=. -D use_system_libs=1 \\\n && cd /usr/src/modpagespeed/pagespeed/automatic \\\n && make psol BUILDTYPE=Release CFLAGS+=\"-I/usr/include/apr-1\" CXXFLAGS+=\"-I/usr/include/apr-1 -DUCHAR_TYPE=uint16_t\" -j`nproc `\nRUN mkdir -p /usr/src/ngxpagespeed/psol/lib/Release/linux/x64 \\\n && mkdir -p /usr/src/ngxpagespeed/psol/include/out/Release \\\n && cp -R out/Release/obj /usr/src/ngxpagespeed/psol/include/out/Release/ \\\n && cp -R pagespeed/automatic/pagespeed_automatic.a /usr/src/ngxpagespeed/psol/lib/Release/linux/x64/ \\\n && cp -R net pagespeed testing third_party url /usr/src/ngxpagespeed/psol/include/\n# #########################################\n#  Build Nginx with support for PageSpeed #\n# #########################################\nFROM alpine:$ALPINE_VERSION AS nginx\n#  Check https://github.com/apache/incubator-pagespeed-ngx/tags\nARG NGX_PAGESPEED_TAG=v1.13.35.2-stable\n#  Check http://nginx.org/en/download.html for the latest version.\nARG NGINX_VERSION=1.15.6\nARG NGINX_PGPKEY=520A9993A1C052F8\nARG NGINX_BUILD_CONFIG=\" --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=/usr/lib/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-http_ssl_module  --with-http_realip_module  --with-http_addition_module  --with-http_sub_module  --with-http_dav_module  --with-http_flv_module  --with-http_mp4_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_random_index_module  --with-http_secure_link_module  --with-http_stub_status_module  --with-http_auth_request_module  --with-http_xslt_module=dynamic  --with-http_image_filter_module=dynamic  --with-http_geoip_module=dynamic  --with-threads  --with-stream  --with-stream_ssl_module  --with-stream_ssl_preread_module  --with-stream_realip_module  --with-stream_geoip_module=dynamic  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-compat  --with-file-aio  --with-http_v2_module  \"\nRUN apk add --no-cache apr-dev apr-util-dev build-base ca-certificates gd-dev geoip-dev git gnupg icu-dev libjpeg-turbo-dev libpng-dev libxslt-dev linux-headers libressl-dev pcre-dev tar zlib-dev\nWORKDIR /usr/src\nRUN git clone -b ${NGX_PAGESPEED_TAG} --recurse-submodules --shallow-submodules --depth=1 -c advice.detachedHead=false -j`nproc ` https://github.com/apache/incubator-pagespeed-ngx.git ngxpagespeed\nRUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz.asc \\\n && (gpg --keyserver ha.pool.sks-keyservers.net --keyserver-options timeout=10 --recv-keys ${NGINX_PGPKEY} || gpg --keyserver hkp://keyserver.ubuntu.com:80 --keyserver-options timeout=10 --recv-keys ${NGINX_PGPKEY} || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --keyserver-options timeout=10 --recv-keys $NGINX_PGPKEY} ) \\\n && gpg --trusted-key ${NGINX_PGPKEY} --verify nginx-${NGINX_VERSION}.tar.gz.asc\nCOPY --from=pagespeed /usr/src/ngxpagespeed /usr/src/ngxpagespeed/\nWORKDIR /usr/src/nginx\nRUN tar zxf ../nginx-${NGINX_VERSION}.tar.gz --strip-components=1 -C . \\\n && ./configure ${NGINX_BUILD_CONFIG} --add-module=/usr/src/ngxpagespeed --with-ld-opt=\"-Wl,-z,relro,--start-group -lapr-1 -laprutil-1 -licudata -licuuc -lpng -lturbojpeg -ljpeg\" \\\n && make install -j`nproc `\nRUN rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && sed -i 's|^</body>|<p><a href=\"https://www.ngxpagespeed.com/\"><img src=\"pagespeed.png\" title=\"Nginx module for rewriting web pages to reduce latency and bandwidth\" /></a></p>\\n</body>|' html/index.html \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* /usr/lib/nginx/modules/*.so\nCOPY conf/nginx.conf /etc/nginx/nginx.conf\nCOPY conf/nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nCOPY pagespeed.png /usr/share/nginx/html/\n# #########################################\n#  Combine everything with minimal layers #\n# #########################################\nFROM alpine:$ALPINE_VERSION\nLABEL maintainer=\"Nico Berlee <nico.berlee@on2it.net>\" \\\n      version.mod-pagespeed=\"1.13.35.2\" \\\n      version.nginx=\"1.15.6\" \\\n      version.ngx-pagespeed=\"1.13.35.2\"\nCOPY --from=pagespeed /usr/bin/envsubst /usr/local/bin\nCOPY --from=nginx /usr/sbin/nginx /usr/sbin/nginx\nCOPY --from=nginx /usr/lib/nginx/modules/ /usr/lib/nginx/modules/\nCOPY --from=nginx /etc/nginx /etc/nginx\nCOPY --from=nginx /usr/share/nginx/html/ /usr/share/nginx/html/\nRUN apk --no-cache upgrade \\\n && scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /usr/local/bin/envsubst | tr ',' '\\n' | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' | xargs apk add --no-cache \\\n && apk add --no-cache tzdata\nRUN addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && install -g nginx -o nginx -d /var/cache/ngx_pagespeed \\\n && mkdir -p /var/log/nginx \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"/usr/sbin/nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"78334f7da8bf60309ea352e0362277db","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG ALPINE_VERSION=edge\n#  #######################\n#   Build pagespeed psol #\n#  #######################\nFROM alpine:$ALPINE_VERSION AS pagespeed\n#   Check https://github.com/apache/incubator-pagespeed-mod/tags\nARG MOD_PAGESPEED_TAG=v1.13.35.2\nRUN apk add --no-cache apache2-dev apr-dev apr-util-dev build-base curl gettext-dev git gperf icu-dev libjpeg-turbo-dev libpng-dev libressl-dev pcre-dev py-setuptools zlib-dev\nWORKDIR /usr/src\nRUN git clone -b ${MOD_PAGESPEED_TAG} --recurse-submodules --depth=1 -c advice.detachedHead=false -j`nproc ` https://github.com/apache/incubator-pagespeed-mod.git modpagespeed\nWORKDIR /usr/src/modpagespeed\nCOPY patches/modpagespeed/*.patch ./\nRUN for i in *.patch; do printf \"\\r\\nApplying patch ${i%%.*}\\r\\n\" ;patch -p1 < $i || exit 1 ; done\nWORKDIR /usr/src/modpagespeed/tools/gyp\nRUN ./setup.py install\nWORKDIR /usr/src/modpagespeed\nRUN build/gyp_chromium --depth=. -D use_system_libs=1 \\\n && cd /usr/src/modpagespeed/pagespeed/automatic \\\n && make psol BUILDTYPE=Release CFLAGS+=\"-I/usr/include/apr-1\" CXXFLAGS+=\"-I/usr/include/apr-1 -DUCHAR_TYPE=uint16_t\" -j`nproc `\nRUN mkdir -p /usr/src/ngxpagespeed/psol/lib/Release/linux/x64 \\\n && mkdir -p /usr/src/ngxpagespeed/psol/include/out/Release \\\n && cp -R out/Release/obj /usr/src/ngxpagespeed/psol/include/out/Release/ \\\n && cp -R pagespeed/automatic/pagespeed_automatic.a /usr/src/ngxpagespeed/psol/lib/Release/linux/x64/ \\\n && cp -R net pagespeed testing third_party url /usr/src/ngxpagespeed/psol/include/\n#  #########################################\n#   Build Nginx with support for PageSpeed #\n#  #########################################\nFROM alpine:$ALPINE_VERSION AS nginx\n#   Check https://github.com/apache/incubator-pagespeed-ngx/tags\nARG NGX_PAGESPEED_TAG=v1.13.35.2-stable\n#   Check http://nginx.org/en/download.html for the latest version.\nARG NGINX_VERSION=1.15.6\nARG NGINX_PGPKEY=520A9993A1C052F8\nARG NGINX_BUILD_CONFIG=\" --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=/usr/lib/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-http_ssl_module  --with-http_realip_module  --with-http_addition_module  --with-http_sub_module  --with-http_dav_module  --with-http_flv_module  --with-http_mp4_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_random_index_module  --with-http_secure_link_module  --with-http_stub_status_module  --with-http_auth_request_module  --with-http_xslt_module=dynamic  --with-http_image_filter_module=dynamic  --with-http_geoip_module=dynamic  --with-threads  --with-stream  --with-stream_ssl_module  --with-stream_ssl_preread_module  --with-stream_realip_module  --with-stream_geoip_module=dynamic  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-compat  --with-file-aio  --with-http_v2_module  \"\nRUN apk add --no-cache apr-dev apr-util-dev build-base ca-certificates gd-dev geoip-dev git gnupg icu-dev libjpeg-turbo-dev libpng-dev libxslt-dev linux-headers libressl-dev pcre-dev tar zlib-dev\nWORKDIR /usr/src\nRUN git clone -b ${NGX_PAGESPEED_TAG} --recurse-submodules --shallow-submodules --depth=1 -c advice.detachedHead=false -j`nproc ` https://github.com/apache/incubator-pagespeed-ngx.git ngxpagespeed\nRUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz.asc \\\n && (gpg --keyserver ha.pool.sks-keyservers.net --keyserver-options timeout=10 --recv-keys ${NGINX_PGPKEY} || gpg --keyserver hkp://keyserver.ubuntu.com:80 --keyserver-options timeout=10 --recv-keys ${NGINX_PGPKEY} || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --keyserver-options timeout=10 --recv-keys $NGINX_PGPKEY} ) \\\n && gpg --trusted-key ${NGINX_PGPKEY} --verify nginx-${NGINX_VERSION}.tar.gz.asc\nCOPY --from=pagespeed /usr/src/ngxpagespeed /usr/src/ngxpagespeed/\nWORKDIR /usr/src/nginx\nRUN tar zxf ../nginx-${NGINX_VERSION}.tar.gz --strip-components=1 -C . \\\n && ./configure ${NGINX_BUILD_CONFIG} --add-module=/usr/src/ngxpagespeed --with-ld-opt=\"-Wl,-z,relro,--start-group -lapr-1 -laprutil-1 -licudata -licuuc -lpng -lturbojpeg -ljpeg\" \\\n && make install -j`nproc `\nRUN rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && sed -i 's|^</body>|<p><a href=\"https://www.ngxpagespeed.com/\"><img src=\"pagespeed.png\" title=\"Nginx module for rewriting web pages to reduce latency and bandwidth\" /></a></p>\\n</body>|' html/index.html \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* /usr/lib/nginx/modules/*.so\nCOPY conf/nginx.conf /etc/nginx/nginx.conf\nCOPY conf/nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nCOPY pagespeed.png /usr/share/nginx/html/\n#  #########################################\n#   Combine everything with minimal layers #\n#  #########################################\nFROM alpine:$ALPINE_VERSION\nLABEL maintainer=\"Nico Berlee <nico.berlee@on2it.net>\" \\\n      version.mod-pagespeed=\"1.13.35.2\" \\\n      version.nginx=\"1.15.6\" \\\n      version.ngx-pagespeed=\"1.13.35.2\"\nCOPY --from=pagespeed /usr/bin/envsubst /usr/local/bin\nCOPY --from=nginx /usr/sbin/nginx /usr/sbin/nginx\nCOPY --from=nginx /usr/lib/nginx/modules/ /usr/lib/nginx/modules/\nCOPY --from=nginx /etc/nginx /etc/nginx\nCOPY --from=nginx /usr/share/nginx/html/ /usr/share/nginx/html/\nRUN apk --no-cache upgrade \\\n && scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /usr/local/bin/envsubst | tr ',' '\\n' | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' | xargs apk add --no-cache \\\n && apk add --no-cache tzdata\nRUN addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && install -g nginx -o nginx -d /var/cache/ngx_pagespeed \\\n && mkdir -p /var/log/nginx \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"/usr/sbin/nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"2651069b162fcb5d85d95648ba0cb457","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/80a02e21a30c5747bf1d726ad0af5903479b6f1a.dockerfile"}