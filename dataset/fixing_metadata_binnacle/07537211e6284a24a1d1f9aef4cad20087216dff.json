{"seed":4289129412,"processedDockerfileHash":"3181128886d60bb7d405394a614c73b4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Use an official Python runtime as a parent image\nFROM gadgetron/ubuntu_1804_cuda92_cudnn7_base:latest\n#   set arguments\nARG GADGETRON_URL=https://github.com/gadgetron/gadgetron\nARG ISMRMRD_URL=https://github.com/ismrmrd/ismrmrd.git\nARG ISMRMRD_PYTHON_API_URL=https://github.com/ismrmrd/ismrmrd-python.git\nARG ISMRMRD_PYTHON_TOOLS_URL=https://github.com/ismrmrd/ismrmrd-python-tools.git\nARG BART_URL=https://github.com/mrirecon/bart.git\nARG SIEMENS_TO_ISMRMRD_URL=https://github.com/ismrmrd/siemens_to_ismrmrd.git\nARG PHILIPS_TO_ISMRMRD_URL=https://github.com/ismrmrd/philips_to_ismrmrd.git\nARG ITK_URL=http://itk.org/ITK.git\nARG ITK_BRANCH=v4.13.1\nARG ELASTIX_URL=https://github.com/SuperElastix/elastix.git\nARG CSMOCO_URL=https://github.com/thomaskuestner/CS_MoCo_LAB.git\n#   Copy the current directory contents into the container at /app\nCOPY . /tmp\n#   install newest version of cmake\nRUN apt-get -y purge cmake \\\n && wget https://cmake.org/files/v3.13/cmake-3.13.0.tar.gz \\\n && tar -xzvf cmake-*.tar.gz \\\n && cd cmake-3*/ \\\n && ./bootstrap \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd .. \\\n && rm -rf cmake-3* \\\n && apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends python-numpy -y \\\n && apt-get install --no-install-recommends gcc-6 g++-6 gfortran=4:12.2.0-3ubuntu1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   install ISMRMRD\nRUN cd /opt/code \\\n && git clone ${ISMRMRD_URL} \\\n && cd ismrmrd \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && rm -rf ismrmrd/build\n#   Fix compiler error with CUDA for now\nRUN sed -i \"s;#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!;//#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!;g\" /usr/local/cuda/include/host_config.h\n#   install BART\nRUN cd /opt/code \\\n && git clone ${BART_URL} \\\n && cd bart \\\n && mkdir build \\\n && cd build \\\n && cmake -DBART_FPIC=ON -DBART_ENABLE_MEM_CFL=ON -DBART_REDEFINE_PRINTF_FOR_TRACE=ON -DBART_LOG_BACKEND=ON -DBART_LOG_GADGETRON_BACKEND=ON ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && rm -rf bart/build\n#   install GADGETRON\nRUN cd /opt/code \\\n && git clone ${GADGETRON_URL} \\\n && cd gadgetron \\\n && mkdir build \\\n && cd build \\\n && cmake -DCUDA_NVCC_FLAGS=\"-ccbin gcc-6\" -DBUILD_WITH_PYTHON3=ON ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.gadgetron.sha1 --value `git rev-parse HEAD ` \\\n && cp ${GADGETRON_HOME}/share/gadgetron/config/gadgetron.xml.example ${GADGETRON_HOME}/share/gadgetron/config/gadgetron.xml \\\n && cp /opt/code/gadgetron/docker/start_supervisor /opt/ \\\n && cp /opt/code/gadgetron/docker/supervisord.conf /opt/ \\\n && cd ../.. \\\n && rm -rf gadgetron/build\n#   HASH for ISMRMRD\nRUN cd /opt/code/ismrmrd \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrd.sha1 --value `git rev-parse HEAD `\n#   install ISMRMRD PYTHON API\nRUN cd /opt/code \\\n && git clone ${ISMRMRD_PYTHON_API_URL} \\\n && cd ismrmrd-python \\\n && python3 setup.py install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrdpython.sha1 --value `git rev-parse HEAD `\n#   install ISMRMRD PYTHON TOOLS\nRUN cd /opt/code \\\n && git clone ${ISMRMRD_PYTHON_TOOLS_URL} \\\n && cd ismrmrd-python-tools \\\n && python3 setup.py install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrdpythontools.sha1 --value `git rev-parse HEAD `\n#   install SIEMENS_TO_ISMRMRD\nRUN cd /opt/code \\\n && git clone ${SIEMENS_TO_ISMRMRD_URL} \\\n && cd siemens_to_ismrmrd \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.siemens_to_ismrmrd.sha1 --value `git rev-parse HEAD ` \\\n && cd ../.. \\\n && rm -rf siemens_to_ismrmrd/build\n#   install PHILIPS_TO_ISMRMRD\nRUN cd /opt/code \\\n && git clone ${PHILIPS_TO_ISMRMRD_URL} \\\n && cd philips_to_ismrmrd \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j $( nproc ;) \\\n && make install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.philips_to_ismrmrd.sha1 --value `git rev-parse HEAD ` \\\n && cd ../.. \\\n && rm -rf philips_to_ismrmrd/build\n#   install ITK\nRUN cd /opt/code \\\n && git clone -b ${ITK_BRANCH} ${ITK_URL} \\\n && mkdir ITK/build \\\n && cd ITK/build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && rm -rf ITK/build\n#   install elastix (twice)\nRUN cd /opt/code \\\n && git clone ${ELASTIX_URL} \\\n && mkdir elastix/build \\\n && cd elastix/build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && patch elastix/CMakeLists.txt < /tmp/elastix.patch \\\n && rm -rf elastix/build \\\n && mkdir elastix/build \\\n && cd elastix/build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && mkdir /usr/local/lib/cmake/Elastix \\\n && ln -s /opt/code/elastix/build/ElastixConfig.cmake /usr/local/lib/cmake/Elastix/ElastixConfig.cmake\n#   install CS_MoCo_LAB\nRUN cd /opt/code \\\n && git clone ${CSMOCO_URL} \\\n && cd CS_MoCo_LAB/reconstruction/gadgetron/CS_LAB_Gadget \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd .. \\\n && rm -rf build\n#   Set the shell entry point to the container\nWORKDIR /opt/data\n#   set CMD\nCMD [\"/opt/start_supervisor\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Use an official Python runtime as a parent image\nFROM gadgetron/ubuntu_1804_cuda92_cudnn7_base:latest\n#  set arguments\nARG GADGETRON_URL=https://github.com/gadgetron/gadgetron\nARG ISMRMRD_URL=https://github.com/ismrmrd/ismrmrd.git\nARG ISMRMRD_PYTHON_API_URL=https://github.com/ismrmrd/ismrmrd-python.git\nARG ISMRMRD_PYTHON_TOOLS_URL=https://github.com/ismrmrd/ismrmrd-python-tools.git\nARG BART_URL=https://github.com/mrirecon/bart.git\nARG SIEMENS_TO_ISMRMRD_URL=https://github.com/ismrmrd/siemens_to_ismrmrd.git\nARG PHILIPS_TO_ISMRMRD_URL=https://github.com/ismrmrd/philips_to_ismrmrd.git\nARG ITK_URL=http://itk.org/ITK.git\nARG ITK_BRANCH=v4.13.1\nARG ELASTIX_URL=https://github.com/SuperElastix/elastix.git\nARG CSMOCO_URL=https://github.com/thomaskuestner/CS_MoCo_LAB.git\n#  Copy the current directory contents into the container at /app\nADD . /tmp\n#  install newest version of cmake\nRUN apt-get -y purge cmake \\\n && wget https://cmake.org/files/v3.13/cmake-3.13.0.tar.gz \\\n && tar -xzvf cmake-*.tar.gz \\\n && cd cmake-3*/ \\\n && ./bootstrap \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd .. \\\n && rm -rf cmake-3* \\\n && apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install python-numpy -y \\\n && apt-get install gcc-6 g++-6 gfortran -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  install ISMRMRD\nRUN cd /opt/code \\\n && git clone ${ISMRMRD_URL} \\\n && cd ismrmrd \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && rm -rf ismrmrd/build\n#  Fix compiler error with CUDA for now\nRUN sed -i \"s;#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!;//#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!;g\" /usr/local/cuda/include/host_config.h\n#  install BART\nRUN cd /opt/code \\\n && git clone ${BART_URL} \\\n && cd bart \\\n && mkdir build \\\n && cd build \\\n && cmake -DBART_FPIC=ON -DBART_ENABLE_MEM_CFL=ON -DBART_REDEFINE_PRINTF_FOR_TRACE=ON -DBART_LOG_BACKEND=ON -DBART_LOG_GADGETRON_BACKEND=ON ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && rm -rf bart/build\n#  install GADGETRON\nRUN cd /opt/code \\\n && git clone ${GADGETRON_URL} \\\n && cd gadgetron \\\n && mkdir build \\\n && cd build \\\n && cmake -DCUDA_NVCC_FLAGS=\"-ccbin gcc-6\" -DBUILD_WITH_PYTHON3=ON ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.gadgetron.sha1 --value `git rev-parse HEAD ` \\\n && cp ${GADGETRON_HOME}/share/gadgetron/config/gadgetron.xml.example ${GADGETRON_HOME}/share/gadgetron/config/gadgetron.xml \\\n && cp /opt/code/gadgetron/docker/start_supervisor /opt/ \\\n && cp /opt/code/gadgetron/docker/supervisord.conf /opt/ \\\n && cd ../.. \\\n && rm -rf gadgetron/build\n#  HASH for ISMRMRD\nRUN cd /opt/code/ismrmrd \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrd.sha1 --value `git rev-parse HEAD `\n#  install ISMRMRD PYTHON API\nRUN cd /opt/code \\\n && git clone ${ISMRMRD_PYTHON_API_URL} \\\n && cd ismrmrd-python \\\n && python3 setup.py install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrdpython.sha1 --value `git rev-parse HEAD `\n#  install ISMRMRD PYTHON TOOLS\nRUN cd /opt/code \\\n && git clone ${ISMRMRD_PYTHON_TOOLS_URL} \\\n && cd ismrmrd-python-tools \\\n && python3 setup.py install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrdpythontools.sha1 --value `git rev-parse HEAD `\n#  install SIEMENS_TO_ISMRMRD\nRUN cd /opt/code \\\n && git clone ${SIEMENS_TO_ISMRMRD_URL} \\\n && cd siemens_to_ismrmrd \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.siemens_to_ismrmrd.sha1 --value `git rev-parse HEAD ` \\\n && cd ../.. \\\n && rm -rf siemens_to_ismrmrd/build\n#  install PHILIPS_TO_ISMRMRD\nRUN cd /opt/code \\\n && git clone ${PHILIPS_TO_ISMRMRD_URL} \\\n && cd philips_to_ismrmrd \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j $( nproc ;) \\\n && make install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.philips_to_ismrmrd.sha1 --value `git rev-parse HEAD ` \\\n && cd ../.. \\\n && rm -rf philips_to_ismrmrd/build\n#  install ITK\nRUN cd /opt/code \\\n && git clone -b ${ITK_BRANCH} ${ITK_URL} \\\n && mkdir ITK/build \\\n && cd ITK/build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && rm -rf ITK/build\n#  install elastix (twice)\nRUN cd /opt/code \\\n && git clone ${ELASTIX_URL} \\\n && mkdir elastix/build \\\n && cd elastix/build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && patch elastix/CMakeLists.txt < /tmp/elastix.patch \\\n && rm -rf elastix/build \\\n && mkdir elastix/build \\\n && cd elastix/build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && mkdir /usr/local/lib/cmake/Elastix \\\n && ln -s /opt/code/elastix/build/ElastixConfig.cmake /usr/local/lib/cmake/Elastix/ElastixConfig.cmake\n#  install CS_MoCo_LAB\nRUN cd /opt/code \\\n && git clone ${CSMOCO_URL} \\\n && cd CS_MoCo_LAB/reconstruction/gadgetron/CS_LAB_Gadget \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd .. \\\n && rm -rf build\n#  Set the shell entry point to the container\nWORKDIR /opt/data\n#  set CMD\nCMD [\"/opt/start_supervisor\"]\n","injectedSmells":[],"originalDockerfileHash":"14addc4156a7ed2702fd364bffa6ebc4","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Use an official Python runtime as a parent image\nFROM gadgetron/ubuntu_1804_cuda92_cudnn7_base:latest\n#   set arguments\nARG GADGETRON_URL=https://github.com/gadgetron/gadgetron\nARG ISMRMRD_URL=https://github.com/ismrmrd/ismrmrd.git\nARG ISMRMRD_PYTHON_API_URL=https://github.com/ismrmrd/ismrmrd-python.git\nARG ISMRMRD_PYTHON_TOOLS_URL=https://github.com/ismrmrd/ismrmrd-python-tools.git\nARG BART_URL=https://github.com/mrirecon/bart.git\nARG SIEMENS_TO_ISMRMRD_URL=https://github.com/ismrmrd/siemens_to_ismrmrd.git\nARG PHILIPS_TO_ISMRMRD_URL=https://github.com/ismrmrd/philips_to_ismrmrd.git\nARG ITK_URL=http://itk.org/ITK.git\nARG ITK_BRANCH=v4.13.1\nARG ELASTIX_URL=https://github.com/SuperElastix/elastix.git\nARG CSMOCO_URL=https://github.com/thomaskuestner/CS_MoCo_LAB.git\n#   Copy the current directory contents into the container at /app\nADD . /tmp\n#   install newest version of cmake\nRUN apt-get -y purge cmake \\\n && wget https://cmake.org/files/v3.13/cmake-3.13.0.tar.gz \\\n && tar -xzvf cmake-*.tar.gz \\\n && cd cmake-3*/ \\\n && ./bootstrap \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd .. \\\n && rm -rf cmake-3* \\\n && apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install python-numpy -y \\\n && apt-get install gcc-6 g++-6 gfortran -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   install ISMRMRD\nRUN cd /opt/code \\\n && git clone ${ISMRMRD_URL} \\\n && cd ismrmrd \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && rm -rf ismrmrd/build\n#   Fix compiler error with CUDA for now\nRUN sed -i \"s;#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!;//#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!;g\" /usr/local/cuda/include/host_config.h\n#   install BART\nRUN cd /opt/code \\\n && git clone ${BART_URL} \\\n && cd bart \\\n && mkdir build \\\n && cd build \\\n && cmake -DBART_FPIC=ON -DBART_ENABLE_MEM_CFL=ON -DBART_REDEFINE_PRINTF_FOR_TRACE=ON -DBART_LOG_BACKEND=ON -DBART_LOG_GADGETRON_BACKEND=ON ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && rm -rf bart/build\n#   install GADGETRON\nRUN cd /opt/code \\\n && git clone ${GADGETRON_URL} \\\n && cd gadgetron \\\n && mkdir build \\\n && cd build \\\n && cmake -DCUDA_NVCC_FLAGS=\"-ccbin gcc-6\" -DBUILD_WITH_PYTHON3=ON ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.gadgetron.sha1 --value `git rev-parse HEAD ` \\\n && cp ${GADGETRON_HOME}/share/gadgetron/config/gadgetron.xml.example ${GADGETRON_HOME}/share/gadgetron/config/gadgetron.xml \\\n && cp /opt/code/gadgetron/docker/start_supervisor /opt/ \\\n && cp /opt/code/gadgetron/docker/supervisord.conf /opt/ \\\n && cd ../.. \\\n && rm -rf gadgetron/build\n#   HASH for ISMRMRD\nRUN cd /opt/code/ismrmrd \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrd.sha1 --value `git rev-parse HEAD `\n#   install ISMRMRD PYTHON API\nRUN cd /opt/code \\\n && git clone ${ISMRMRD_PYTHON_API_URL} \\\n && cd ismrmrd-python \\\n && python3 setup.py install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrdpython.sha1 --value `git rev-parse HEAD `\n#   install ISMRMRD PYTHON TOOLS\nRUN cd /opt/code \\\n && git clone ${ISMRMRD_PYTHON_TOOLS_URL} \\\n && cd ismrmrd-python-tools \\\n && python3 setup.py install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrdpythontools.sha1 --value `git rev-parse HEAD `\n#   install SIEMENS_TO_ISMRMRD\nRUN cd /opt/code \\\n && git clone ${SIEMENS_TO_ISMRMRD_URL} \\\n && cd siemens_to_ismrmrd \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.siemens_to_ismrmrd.sha1 --value `git rev-parse HEAD ` \\\n && cd ../.. \\\n && rm -rf siemens_to_ismrmrd/build\n#   install PHILIPS_TO_ISMRMRD\nRUN cd /opt/code \\\n && git clone ${PHILIPS_TO_ISMRMRD_URL} \\\n && cd philips_to_ismrmrd \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j $( nproc ;) \\\n && make install \\\n && /opt/code/gadgetron/docker/manifest --key .io.gadgetron.philips_to_ismrmrd.sha1 --value `git rev-parse HEAD ` \\\n && cd ../.. \\\n && rm -rf philips_to_ismrmrd/build\n#   install ITK\nRUN cd /opt/code \\\n && git clone -b ${ITK_BRANCH} ${ITK_URL} \\\n && mkdir ITK/build \\\n && cd ITK/build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && rm -rf ITK/build\n#   install elastix (twice)\nRUN cd /opt/code \\\n && git clone ${ELASTIX_URL} \\\n && mkdir elastix/build \\\n && cd elastix/build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && patch elastix/CMakeLists.txt < /tmp/elastix.patch \\\n && rm -rf elastix/build \\\n && mkdir elastix/build \\\n && cd elastix/build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd ../.. \\\n && mkdir /usr/local/lib/cmake/Elastix \\\n && ln -s /opt/code/elastix/build/ElastixConfig.cmake /usr/local/lib/cmake/Elastix/ElastixConfig.cmake\n#   install CS_MoCo_LAB\nRUN cd /opt/code \\\n && git clone ${CSMOCO_URL} \\\n && cd CS_MoCo_LAB/reconstruction/gadgetron/CS_LAB_Gadget \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make -j$( expr $( nproc ;) + 1 ;) \\\n && make install \\\n && cd .. \\\n && rm -rf build\n#   Set the shell entry point to the container\nWORKDIR /opt/data\n#   set CMD\nCMD [\"/opt/start_supervisor\"]\n","originalDockerfileUglifiedHash":"a6edff9654da71dfc5e2b5676d614c50","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/07537211e6284a24a1d1f9aef4cad20087216dff.dockerfile"}