{"seed":730966180,"processedDockerfileHash":"1a5d0f9013efd98925f21c0b7d2a16ba","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV PG_BRANCH=\"master\" \\\n    WEBWORK_URL=\"/webwork2\" \\\n    WEBWORK_ROOT_URL=\"http://localhost\" \\\n    WEBWORK_DB_HOST=\"db\" \\\n    WEBWORK_DB_PORT=\"3306\" \\\n    WEBWORK_DB_NAME=\"webwork\" \\\n    WEBWORK_DB_USER=\"webworkWrite\" \\\n    WEBWORK_SMTP_SERVER=\"localhost\" \\\n    WEBWORK_SMTP_SENDER=\"webwork@example.com\" \\\n    WEBWORK_TIMEZONE=\"America/New_York\" \\\n    APACHE_RUN_USER=\"www-data\" \\\n    APACHE_RUN_GROUP=\"www-data\" \\\n    APACHE_PID_FILE=\"/var/run/apache2/apache2.pid\" \\\n    APACHE_RUN_DIR=\"/var/run/apache2\" \\\n    APACHE_LOCK_DIR=\"/var/lock/apache2\" \\\n    APACHE_LOG_DIR=\"/var/log/apache2\" \\\n    APP_ROOT=\"/opt/webwork\" \\\n    DEV=\"0\"\nENV WEBWORK_DB_DSN=\"DBI:mysql:${WEBWORK_DB_NAME}:${WEBWORK_DB_HOST}:${WEBWORK_DB_PORT}\" \\\n    WEBWORK_ROOT=\"$APP_ROOT/webwork2\" \\\n    PG_ROOT=\"$APP_ROOT/pg\" \\\n    PATH=\"$PATH:$APP_ROOT/webwork2/bin\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2=2.4.18-2ubuntu3.17 curl=7.47.0-1ubuntu2.19 dvipng=1.15-0ubuntu1 gcc=4:5.3.1-1ubuntu1 libapache2-request-perl=2.13-4ubuntu2 libcrypt-ssleay-perl=0.73.04-1build1 libdatetime-perl=2:1.21-1build1 libdancer-perl=1.3202+dfsg-1 libdancer-plugin-database-perl=2.12-1 libdbd-mysql-perl=4.033-1ubuntu0.1 libemail-address-perl=1.908-1 libexception-class-perl=1.40-1 libextutils-xsbuilder-perl=0.28-3 libfile-find-rule-perl-perl=1.15-1 libgd-perl=2.53-2.1 libhtml-scrubber-perl=0.15-1 libjson-perl=2.90-1 liblocale-maketext-lexicon-perl=1.00-1 libmail-sender-perl=0.8.16-2 libmime-tools-perl=5.507-1 libnet-ip-perl=1.26-1 libnet-ldap-perl=1:0.6500+dfsg-1 libnet-oauth-perl=0.28-2 libossp-uuid-perl=1.6.2-1.5build2 libpadwalker-perl=2.2-1build1 libpath-class-perl=0.36-1 libphp-serialization-perl=0.34-1 libsoap-lite-perl=1.19-1 libsql-abstract-perl=1.81-1 libstring-shellquote-perl=1.03-1.2 libtemplate-perl=2.24-1.2build2 libtext-csv-perl=1.33-1 libtimedate-perl=2.3000-2 libuuid-tiny-perl=1.0400-1 libxml-parser-perl=2.44-1build1 libxml-writer-perl=0.625-1 libapache2-reload-perl=0.13-1 make=4.1-6 netpbm=2:10.0-15.3 preview-latex-style=11.88-1.1ubuntu1 texlive=2015.20160320-1ubuntu0.1 texlive-latex-extra=2015.20160320-1 libc6-dev=2.23-0ubuntu11.3 git=1:2.7.4-0ubuntu1.10 mysql-client=5.7.33-0ubuntu0.16.04.1 -y --no-install-suggests \\\n && curl -Lk https://cpanmin.us | perl - App::cpanminus \\\n && cpanm install XML::Parser::EasyTree Iterator Iterator::Util Pod::WSDL Array::Utils HTML::Template XMLRPC::Lite Mail::Sender Email::Sender::Simple Data::Dump Statistics::R::IO \\\n && rm -fr /var/lib/apt/lists/* ./cpanm /root/.cpanm /tmp/*\nRUN mkdir -p $APP_ROOT/courses $APP_ROOT/libraries $APP_ROOT/webwork2\n#   Block to include webwork2 in the container, when needed, instead of  getting it from a bind mount.\n#      Uncomment when needed, and set the correct branch name on the following line.\n#  ENV WEBWORK_BRANCH=master   # need a valid branch name from https://github.com/openwebwork/webwork2\n#  RUN curl -fSL https://github.com/openwebwork/webwork2/archive/${WEBWORK_BRANCH}.tar.gz -o /tmp/${WEBWORK_BRANCH}.tar.gz \\\n#      && cd /tmp \\\n#      && tar xzf /tmp/${WEBWORK_BRANCH}.tar.gz \\\n#      && mv webwork2-${WEBWORK_BRANCH} $APP_ROOT/webwork2 \\\n#      && rm -rf /tmp/${WEBWORK_BRANCH}.tar.gz /tmp/webwork2-${WEBWORK_BRANCH}\nRUN curl -fSL https://github.com/openwebwork/pg/archive/${PG_BRANCH}.tar.gz -o /tmp/${PG_BRANCH}.tar.gz \\\n && tar xzf /tmp/${PG_BRANCH}.tar.gz \\\n && mv pg-${PG_BRANCH} $APP_ROOT/pg \\\n && rm /tmp/${PG_BRANCH}.tar.gz \\\n && curl -fSL https://github.com/openwebwork/webwork-open-problem-library/archive/master.tar.gz -o /tmp/opl.tar.gz \\\n && tar xzf /tmp/opl.tar.gz \\\n && mv webwork-open-problem-library-master $APP_ROOT/libraries/webwork-open-problem-library \\\n && rm /tmp/opl.tar.gz\nRUN curl -fSL https://github.com/mathjax/MathJax/archive/master.tar.gz -o /tmp/mathjax.tar.gz \\\n && tar xzf /tmp/mathjax.tar.gz \\\n && mv MathJax-master $APP_ROOT/MathJax \\\n && rm /tmp/mathjax.tar.gz\n#  && rm /tmp/VERSION\n#  curl -fSL https://github.com/openwebwork/webwork2/archive/WeBWorK-${WEBWORK_VERSION}.tar.gz -o /tmp/WeBWorK-${WEBWORK_VERSION}.tar.gz \\\n#  && tar xzf /tmp/WeBWorK-${WEBWORK_VERSION}.tar.gz \\\n#  && mv webwork2-WeBWorK-${WEBWORK_VERSION} $APP_ROOT/webwork2 \\\n#  && rm /tmp/WeBWorK-${WEBWORK_VERSION}.tar.gz \\\nRUN echo \"PATH=$PATH:$APP_ROOT/webwork2/bin\" >> /root/.bashrc\nCOPY . $APP_ROOT/webwork2\n#   Move these lines into docker-entrypoint.sh so the bind mount of courses\n#   will be available\n#  RUN cd $APP_ROOT/webwork2/courses.dist \\\n#      && cp *.lst $APP_ROOT/courses/ \\\n#      && cp -R modelCourse $APP_ROOT/courses/\nRUN cd $APP_ROOT/pg/lib/chromatic \\\n && gcc color.c -o color\n#   setup apache\nRUN cd $APP_ROOT/webwork2/conf \\\n && cp webwork.apache2.4-config.dist webwork.apache2.4-config \\\n && cp $APP_ROOT/webwork2/conf/webwork.apache2.4-config /etc/apache2/conf-enabled/webwork.conf \\\n && a2dismod mpm_event \\\n && a2enmod mpm_prefork \\\n && sed -i -e 's/Timeout 300/Timeout 1200/' /etc/apache2/apache2.conf \\\n && sed -i -e 's/MaxRequestWorkers 150/MaxRequestWorkers 20/' -e 's/MaxConnectionsPerChild 0/MaxConnectionsPerChild 100/' /etc/apache2/mods-available/mpm_prefork.conf \\\n && cp $APP_ROOT/webwork2/htdocs/favicon.ico /var/www/html \\\n && sed -i -e 's/^<Perl>$/ PerlPassEnv WEBWORK_URL\\n PerlPassEnv WEBWORK_ROOT_URL\\n PerlPassEnv WEBWORK_DB_DSN\\n PerlPassEnv WEBWORK_DB_USER\\n PerlPassEnv WEBWORK_DB_PASSWORD\\n PerlPassEnv WEBWORK_SMTP_SERVER\\n PerlPassEnv WEBWORK_SMTP_SENDER\\n PerlPassEnv WEBWORK_TIMEZONE\\n \\n<Perl>/' /etc/apache2/conf-enabled/webwork.conf\nRUN cd $APP_ROOT/webwork2/ \\\n && chown www-data DATA ../courses htdocs/tmp htdocs/applets logs tmp $APP_ROOT/pg/lib/chromatic \\\n && chmod -R u+w DATA ../courses htdocs/tmp htdocs/applets logs tmp $APP_ROOT/pg/lib/chromatic\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 80/tcp\nWORKDIR $APP_ROOT\nCMD [\"apache2\", \"-DFOREGROUND\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nENV PG_BRANCH=\"master\" \\\n    WEBWORK_URL=\"/webwork2\" \\\n    WEBWORK_ROOT_URL=\"http://localhost\" \\\n    WEBWORK_DB_HOST=\"db\" \\\n    WEBWORK_DB_PORT=\"3306\" \\\n    WEBWORK_DB_NAME=\"webwork\" \\\n    WEBWORK_DB_USER=\"webworkWrite\" \\\n    WEBWORK_DB_PASSWORD=\"passwordRW\" \\\n    WEBWORK_SMTP_SERVER=\"localhost\" \\\n    WEBWORK_SMTP_SENDER=\"webwork@example.com\" \\\n    WEBWORK_TIMEZONE=\"America/New_York\" \\\n    APACHE_RUN_USER=\"www-data\" \\\n    APACHE_RUN_GROUP=\"www-data\" \\\n    APACHE_PID_FILE=\"/var/run/apache2/apache2.pid\" \\\n    APACHE_RUN_DIR=\"/var/run/apache2\" \\\n    APACHE_LOCK_DIR=\"/var/lock/apache2\" \\\n    APACHE_LOG_DIR=\"/var/log/apache2\" \\\n    APP_ROOT=\"/opt/webwork\" \\\n    DEV=\"0\"\nENV WEBWORK_DB_DSN=\"DBI:mysql:${WEBWORK_DB_NAME}:${WEBWORK_DB_HOST}:${WEBWORK_DB_PORT}\" \\\n    WEBWORK_ROOT=\"$APP_ROOT/webwork2\" \\\n    PG_ROOT=\"$APP_ROOT/pg\" \\\n    PATH=\"$PATH:$APP_ROOT/webwork2/bin\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2 curl dvipng gcc libapache2-request-perl libcrypt-ssleay-perl libdatetime-perl libdancer-perl libdancer-plugin-database-perl libdbd-mysql-perl libemail-address-perl libexception-class-perl libextutils-xsbuilder-perl libfile-find-rule-perl-perl libgd-perl libhtml-scrubber-perl libjson-perl liblocale-maketext-lexicon-perl libmail-sender-perl libmime-tools-perl libnet-ip-perl libnet-ldap-perl libnet-oauth-perl libossp-uuid-perl libpadwalker-perl libpath-class-perl libphp-serialization-perl libsoap-lite-perl libsql-abstract-perl libstring-shellquote-perl libtemplate-perl libtext-csv-perl libtimedate-perl libuuid-tiny-perl libxml-parser-perl libxml-writer-perl libapache2-reload-perl make netpbm preview-latex-style texlive texlive-latex-extra libc6-dev git mysql-client -y --no-install-suggests \\\n && curl -Lk https://cpanmin.us | perl - App::cpanminus \\\n && cpanm install XML::Parser::EasyTree Iterator Iterator::Util Pod::WSDL Array::Utils HTML::Template XMLRPC::Lite Mail::Sender Email::Sender::Simple Data::Dump Statistics::R::IO \\\n && rm -fr /var/lib/apt/lists/* ./cpanm /root/.cpanm /tmp/*\nRUN mkdir -p $APP_ROOT/courses $APP_ROOT/libraries $APP_ROOT/webwork2\n#  Block to include webwork2 in the container, when needed, instead of  getting it from a bind mount.\n#     Uncomment when needed, and set the correct branch name on the following line.\n# ENV WEBWORK_BRANCH=master   # need a valid branch name from https://github.com/openwebwork/webwork2\n# RUN curl -fSL https://github.com/openwebwork/webwork2/archive/${WEBWORK_BRANCH}.tar.gz -o /tmp/${WEBWORK_BRANCH}.tar.gz \\\n#     && cd /tmp \\\n#     && tar xzf /tmp/${WEBWORK_BRANCH}.tar.gz \\\n#     && mv webwork2-${WEBWORK_BRANCH} $APP_ROOT/webwork2 \\\n#     && rm -rf /tmp/${WEBWORK_BRANCH}.tar.gz /tmp/webwork2-${WEBWORK_BRANCH}\nRUN curl -fSL https://github.com/openwebwork/pg/archive/${PG_BRANCH}.tar.gz -o /tmp/${PG_BRANCH}.tar.gz \\\n && tar xzf /tmp/${PG_BRANCH}.tar.gz \\\n && mv pg-${PG_BRANCH} $APP_ROOT/pg \\\n && rm /tmp/${PG_BRANCH}.tar.gz \\\n && curl -fSL https://github.com/openwebwork/webwork-open-problem-library/archive/master.tar.gz -o /tmp/opl.tar.gz \\\n && tar xzf /tmp/opl.tar.gz \\\n && mv webwork-open-problem-library-master $APP_ROOT/libraries/webwork-open-problem-library \\\n && rm /tmp/opl.tar.gz\nRUN curl -fSL https://github.com/mathjax/MathJax/archive/master.tar.gz -o /tmp/mathjax.tar.gz \\\n && tar xzf /tmp/mathjax.tar.gz \\\n && mv MathJax-master $APP_ROOT/MathJax \\\n && rm /tmp/mathjax.tar.gz\n# && rm /tmp/VERSION\n# curl -fSL https://github.com/openwebwork/webwork2/archive/WeBWorK-${WEBWORK_VERSION}.tar.gz -o /tmp/WeBWorK-${WEBWORK_VERSION}.tar.gz \\\n# && tar xzf /tmp/WeBWorK-${WEBWORK_VERSION}.tar.gz \\\n# && mv webwork2-WeBWorK-${WEBWORK_VERSION} $APP_ROOT/webwork2 \\\n# && rm /tmp/WeBWorK-${WEBWORK_VERSION}.tar.gz \\\nRUN echo \"PATH=$PATH:$APP_ROOT/webwork2/bin\" >> /root/.bashrc\nCOPY . $APP_ROOT/webwork2\n#  Move these lines into docker-entrypoint.sh so the bind mount of courses\n#  will be available\n# RUN cd $APP_ROOT/webwork2/courses.dist \\\n#     && cp *.lst $APP_ROOT/courses/ \\\n#     && cp -R modelCourse $APP_ROOT/courses/\nRUN cd $APP_ROOT/pg/lib/chromatic \\\n && gcc color.c -o color\n#  setup apache\nRUN cd $APP_ROOT/webwork2/conf \\\n && cp webwork.apache2.4-config.dist webwork.apache2.4-config \\\n && cp $APP_ROOT/webwork2/conf/webwork.apache2.4-config /etc/apache2/conf-enabled/webwork.conf \\\n && a2dismod mpm_event \\\n && a2enmod mpm_prefork \\\n && sed -i -e 's/Timeout 300/Timeout 1200/' /etc/apache2/apache2.conf \\\n && sed -i -e 's/MaxRequestWorkers 150/MaxRequestWorkers 20/' -e 's/MaxConnectionsPerChild 0/MaxConnectionsPerChild 100/' /etc/apache2/mods-available/mpm_prefork.conf \\\n && cp $APP_ROOT/webwork2/htdocs/favicon.ico /var/www/html \\\n && sed -i -e 's/^<Perl>$/ PerlPassEnv WEBWORK_URL\\n PerlPassEnv WEBWORK_ROOT_URL\\n PerlPassEnv WEBWORK_DB_DSN\\n PerlPassEnv WEBWORK_DB_USER\\n PerlPassEnv WEBWORK_DB_PASSWORD\\n PerlPassEnv WEBWORK_SMTP_SERVER\\n PerlPassEnv WEBWORK_SMTP_SENDER\\n PerlPassEnv WEBWORK_TIMEZONE\\n \\n<Perl>/' /etc/apache2/conf-enabled/webwork.conf\nRUN cd $APP_ROOT/webwork2/ \\\n && chown www-data DATA ../courses htdocs/tmp htdocs/applets logs tmp $APP_ROOT/pg/lib/chromatic \\\n && chmod -R u+w DATA ../courses htdocs/tmp htdocs/applets logs tmp $APP_ROOT/pg/lib/chromatic\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 80/tcp\nWORKDIR $APP_ROOT\nCMD [\"apache2\", \"-DFOREGROUND\"]\n","injectedSmells":[],"originalDockerfileHash":"01877ac02681083bb9984d012b91a8a4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nENV PG_BRANCH=\"master\" \\\n    WEBWORK_URL=\"/webwork2\" \\\n    WEBWORK_ROOT_URL=\"http://localhost\" \\\n    WEBWORK_DB_HOST=\"db\" \\\n    WEBWORK_DB_PORT=\"3306\" \\\n    WEBWORK_DB_NAME=\"webwork\" \\\n    WEBWORK_DB_USER=\"webworkWrite\" \\\n    WEBWORK_DB_PASSWORD=\"passwordRW\" \\\n    WEBWORK_SMTP_SERVER=\"localhost\" \\\n    WEBWORK_SMTP_SENDER=\"webwork@example.com\" \\\n    WEBWORK_TIMEZONE=\"America/New_York\" \\\n    APACHE_RUN_USER=\"www-data\" \\\n    APACHE_RUN_GROUP=\"www-data\" \\\n    APACHE_PID_FILE=\"/var/run/apache2/apache2.pid\" \\\n    APACHE_RUN_DIR=\"/var/run/apache2\" \\\n    APACHE_LOCK_DIR=\"/var/lock/apache2\" \\\n    APACHE_LOG_DIR=\"/var/log/apache2\" \\\n    APP_ROOT=\"/opt/webwork\" \\\n    DEV=\"0\"\nENV WEBWORK_DB_DSN=\"DBI:mysql:${WEBWORK_DB_NAME}:${WEBWORK_DB_HOST}:${WEBWORK_DB_PORT}\" \\\n    WEBWORK_ROOT=\"$APP_ROOT/webwork2\" \\\n    PG_ROOT=\"$APP_ROOT/pg\" \\\n    PATH=\"$PATH:$APP_ROOT/webwork2/bin\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2 curl dvipng gcc libapache2-request-perl libcrypt-ssleay-perl libdatetime-perl libdancer-perl libdancer-plugin-database-perl libdbd-mysql-perl libemail-address-perl libexception-class-perl libextutils-xsbuilder-perl libfile-find-rule-perl-perl libgd-perl libhtml-scrubber-perl libjson-perl liblocale-maketext-lexicon-perl libmail-sender-perl libmime-tools-perl libnet-ip-perl libnet-ldap-perl libnet-oauth-perl libossp-uuid-perl libpadwalker-perl libpath-class-perl libphp-serialization-perl libsoap-lite-perl libsql-abstract-perl libstring-shellquote-perl libtemplate-perl libtext-csv-perl libtimedate-perl libuuid-tiny-perl libxml-parser-perl libxml-writer-perl libapache2-reload-perl make netpbm preview-latex-style texlive texlive-latex-extra libc6-dev git mysql-client -y --no-install-suggests \\\n && curl -Lk https://cpanmin.us | perl - App::cpanminus \\\n && cpanm install XML::Parser::EasyTree Iterator Iterator::Util Pod::WSDL Array::Utils HTML::Template XMLRPC::Lite Mail::Sender Email::Sender::Simple Data::Dump Statistics::R::IO \\\n && rm -fr /var/lib/apt/lists/* ./cpanm /root/.cpanm /tmp/*\nRUN mkdir -p $APP_ROOT/courses $APP_ROOT/libraries $APP_ROOT/webwork2\n#   Block to include webwork2 in the container, when needed, instead of  getting it from a bind mount.\n#      Uncomment when needed, and set the correct branch name on the following line.\n#  ENV WEBWORK_BRANCH=master   # need a valid branch name from https://github.com/openwebwork/webwork2\n#  RUN curl -fSL https://github.com/openwebwork/webwork2/archive/${WEBWORK_BRANCH}.tar.gz -o /tmp/${WEBWORK_BRANCH}.tar.gz \\\n#      && cd /tmp \\\n#      && tar xzf /tmp/${WEBWORK_BRANCH}.tar.gz \\\n#      && mv webwork2-${WEBWORK_BRANCH} $APP_ROOT/webwork2 \\\n#      && rm -rf /tmp/${WEBWORK_BRANCH}.tar.gz /tmp/webwork2-${WEBWORK_BRANCH}\nRUN curl -fSL https://github.com/openwebwork/pg/archive/${PG_BRANCH}.tar.gz -o /tmp/${PG_BRANCH}.tar.gz \\\n && tar xzf /tmp/${PG_BRANCH}.tar.gz \\\n && mv pg-${PG_BRANCH} $APP_ROOT/pg \\\n && rm /tmp/${PG_BRANCH}.tar.gz \\\n && curl -fSL https://github.com/openwebwork/webwork-open-problem-library/archive/master.tar.gz -o /tmp/opl.tar.gz \\\n && tar xzf /tmp/opl.tar.gz \\\n && mv webwork-open-problem-library-master $APP_ROOT/libraries/webwork-open-problem-library \\\n && rm /tmp/opl.tar.gz\nRUN curl -fSL https://github.com/mathjax/MathJax/archive/master.tar.gz -o /tmp/mathjax.tar.gz \\\n && tar xzf /tmp/mathjax.tar.gz \\\n && mv MathJax-master $APP_ROOT/MathJax \\\n && rm /tmp/mathjax.tar.gz\n#  && rm /tmp/VERSION\n#  curl -fSL https://github.com/openwebwork/webwork2/archive/WeBWorK-${WEBWORK_VERSION}.tar.gz -o /tmp/WeBWorK-${WEBWORK_VERSION}.tar.gz \\\n#  && tar xzf /tmp/WeBWorK-${WEBWORK_VERSION}.tar.gz \\\n#  && mv webwork2-WeBWorK-${WEBWORK_VERSION} $APP_ROOT/webwork2 \\\n#  && rm /tmp/WeBWorK-${WEBWORK_VERSION}.tar.gz \\\nRUN echo \"PATH=$PATH:$APP_ROOT/webwork2/bin\" >> /root/.bashrc\nCOPY . $APP_ROOT/webwork2\n#   Move these lines into docker-entrypoint.sh so the bind mount of courses\n#   will be available\n#  RUN cd $APP_ROOT/webwork2/courses.dist \\\n#      && cp *.lst $APP_ROOT/courses/ \\\n#      && cp -R modelCourse $APP_ROOT/courses/\nRUN cd $APP_ROOT/pg/lib/chromatic \\\n && gcc color.c -o color\n#   setup apache\nRUN cd $APP_ROOT/webwork2/conf \\\n && cp webwork.apache2.4-config.dist webwork.apache2.4-config \\\n && cp $APP_ROOT/webwork2/conf/webwork.apache2.4-config /etc/apache2/conf-enabled/webwork.conf \\\n && a2dismod mpm_event \\\n && a2enmod mpm_prefork \\\n && sed -i -e 's/Timeout 300/Timeout 1200/' /etc/apache2/apache2.conf \\\n && sed -i -e 's/MaxRequestWorkers 150/MaxRequestWorkers 20/' -e 's/MaxConnectionsPerChild 0/MaxConnectionsPerChild 100/' /etc/apache2/mods-available/mpm_prefork.conf \\\n && cp $APP_ROOT/webwork2/htdocs/favicon.ico /var/www/html \\\n && sed -i -e 's/^<Perl>$/ PerlPassEnv WEBWORK_URL\\n PerlPassEnv WEBWORK_ROOT_URL\\n PerlPassEnv WEBWORK_DB_DSN\\n PerlPassEnv WEBWORK_DB_USER\\n PerlPassEnv WEBWORK_DB_PASSWORD\\n PerlPassEnv WEBWORK_SMTP_SERVER\\n PerlPassEnv WEBWORK_SMTP_SENDER\\n PerlPassEnv WEBWORK_TIMEZONE\\n \\n<Perl>/' /etc/apache2/conf-enabled/webwork.conf\nRUN cd $APP_ROOT/webwork2/ \\\n && chown www-data DATA ../courses htdocs/tmp htdocs/applets logs tmp $APP_ROOT/pg/lib/chromatic \\\n && chmod -R u+w DATA ../courses htdocs/tmp htdocs/applets logs tmp $APP_ROOT/pg/lib/chromatic\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 80/tcp\nWORKDIR $APP_ROOT\nCMD [\"apache2\", \"-DFOREGROUND\"]\n","originalDockerfileUglifiedHash":"d0d774f3e64c1c7f414094a721b5d2b1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0c4dfdde2f4ec2a1a8b051636f2734327d2f2d29.dockerfile"}