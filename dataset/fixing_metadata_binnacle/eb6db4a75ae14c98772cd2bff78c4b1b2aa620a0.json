{"seed":2762794195,"processedDockerfileHash":"c601fe6caa7e23af4a8adaacedf4c9b2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   State 1: Create a base image which includes the Go toolchain,\n#   RocksDB library, its tools, and dependencies.\nFROM golang:1.11 AS base\nARG ROCKSDB_VERSION=5.17.2\nARG ZSTD_VERSION=1.3.5\n#   Install dependencies for building & running RocksDB.\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends build-essential curl libbz2-dev libgflags-dev libjemalloc-dev liblz4-dev libsnappy-dev unzip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Build zstd. The packaged version (libzstd-dev) is currently 1.1.2 on Debian stretch.\n#   We need at least 1.3\nRUN curl -L -o /opt/zstd.tgz https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz \\\n && mkdir -p /opt/zstd \\\n && tar xzf /opt/zstd.tgz -C /opt/zstd --strip-components=1 \\\n && rm /opt/zstd.tgz \\\n && cd /opt/zstd \\\n && make install -j$( nproc ;) \\\n && rm -r /opt/zstd\n#   Install RocksDB and the \"ldb\" & \"sst_dump\" tools.\nRUN curl -L -o /opt/rocksdb.tgz https://github.com/facebook/rocksdb/archive/v${ROCKSDB_VERSION}.tar.gz \\\n && mkdir -p /opt/rocksdb \\\n && tar xzf /opt/rocksdb.tgz -C /opt/rocksdb --strip-components=1 \\\n && rm /opt/rocksdb.tgz \\\n && cd /opt/rocksdb \\\n && USE_SSE=1 DEBUG_LEVEL=0 USE_RTTI=1 make shared_lib tools -j$( nproc ;) \\\n && make install-shared -j$( nproc ;) \\\n && cp ldb sst_dump /usr/local/bin \\\n && rm -r /opt/rocksdb \\\n && ldconfig\n#   Stage 2: Create an image with the vendored dependencies, suitable for using\n#   as a cache to speed up CI build times.\nFROM base AS vendor\nARG DEP_VERSION=v0.5.0\nRUN curl -fsSL -o /usr/local/bin/dep https://github.com/golang/dep/releases/download/${DEP_VERSION}/dep-linux-amd64 \\\n && chmod +x /usr/local/bin/dep\nCOPY Gopkg.toml Gopkg.lock /go/src/github.com/LiveRamp/gazette/\nRUN cd /go/src/github.com/LiveRamp/gazette/ \\\n && dep ensure -vendor-only \\\n && rm -rf \"$GOPATH/pkg/dep\"\n#   Stage 3: Create a build image with source, which is built and tested.\nFROM vendor AS build\n#   Copy, install, and test library and main packages.\nCOPY v2/pkg /go/src/github.com/LiveRamp/gazette/v2/pkg\nRUN go install -race -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nRUN go test -race -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nRUN go install -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nCOPY v2/cmd /go/src/github.com/LiveRamp/gazette/v2/cmd\nRUN go install github.com/LiveRamp/gazette/v2/cmd/...\nRUN go test github.com/LiveRamp/gazette/v2/cmd/...\n#   Build & test examples.\nCOPY v2/examples /go/src/github.com/LiveRamp/gazette/v2/examples\nRUN go install -tags rocksdb github.com/LiveRamp/gazette/v2/examples/...\nRUN go test -tags rocksdb github.com/LiveRamp/gazette/v2/examples/...\n#   Stage 4: Pluck gazette binaries onto base.\nFROM base AS gazette\n#   Install vim in gazette image as it is required for some gazctl commands\nRUN apt-get update \\\n && apt-get install --no-install-recommends vim -y\nCOPY --from=build /go/bin/gazctl /go/bin/gazette /go/bin/\n#   Stage 5: Pluck example binaries onto gazette.\nFROM gazette AS examples\nCOPY --from=build /go/bin/chunker /go/bin/counter /go/bin/summer /go/bin/wordcountctl /go/bin/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  State 1: Create a base image which includes the Go toolchain,\n#  RocksDB library, its tools, and dependencies.\nFROM golang:1.11 AS base\nARG ROCKSDB_VERSION=5.17.2\nARG ZSTD_VERSION=1.3.5\n#  Install dependencies for building & running RocksDB.\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends build-essential curl libbz2-dev libgflags-dev libjemalloc-dev liblz4-dev libsnappy-dev unzip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Build zstd. The packaged version (libzstd-dev) is currently 1.1.2 on Debian stretch.\n#  We need at least 1.3\nRUN curl -L -o /opt/zstd.tgz https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz \\\n && mkdir -p /opt/zstd \\\n && tar xzf /opt/zstd.tgz -C /opt/zstd --strip-components=1 \\\n && rm /opt/zstd.tgz \\\n && cd /opt/zstd \\\n && make install -j$( nproc ;) \\\n && rm -r /opt/zstd\n#  Install RocksDB and the \"ldb\" & \"sst_dump\" tools.\nRUN curl -L -o /opt/rocksdb.tgz https://github.com/facebook/rocksdb/archive/v${ROCKSDB_VERSION}.tar.gz \\\n && mkdir -p /opt/rocksdb \\\n && tar xzf /opt/rocksdb.tgz -C /opt/rocksdb --strip-components=1 \\\n && rm /opt/rocksdb.tgz \\\n && cd /opt/rocksdb \\\n && USE_SSE=1 DEBUG_LEVEL=0 USE_RTTI=1 make shared_lib tools -j$( nproc ;) \\\n && make install-shared -j$( nproc ;) \\\n && cp ldb sst_dump /usr/local/bin \\\n && rm -r /opt/rocksdb \\\n && ldconfig\n#  Stage 2: Create an image with the vendored dependencies, suitable for using\n#  as a cache to speed up CI build times.\nFROM base AS vendor\nARG DEP_VERSION=v0.5.0\nRUN curl -fsSL -o /usr/local/bin/dep https://github.com/golang/dep/releases/download/${DEP_VERSION}/dep-linux-amd64 \\\n && chmod +x /usr/local/bin/dep\nCOPY Gopkg.toml Gopkg.lock /go/src/github.com/LiveRamp/gazette/\nRUN cd /go/src/github.com/LiveRamp/gazette/ \\\n && dep ensure -vendor-only \\\n && rm -rf \"$GOPATH/pkg/dep\"\n#  Stage 3: Create a build image with source, which is built and tested.\nFROM vendor AS build\n#  Copy, install, and test library and main packages.\nCOPY v2/pkg /go/src/github.com/LiveRamp/gazette/v2/pkg\nRUN go install -race -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nRUN go test -race -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nRUN go install -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nCOPY v2/cmd /go/src/github.com/LiveRamp/gazette/v2/cmd\nRUN go install github.com/LiveRamp/gazette/v2/cmd/...\nRUN go test github.com/LiveRamp/gazette/v2/cmd/...\n#  Build & test examples.\nCOPY v2/examples /go/src/github.com/LiveRamp/gazette/v2/examples\nRUN go install -tags rocksdb github.com/LiveRamp/gazette/v2/examples/...\nRUN go test -tags rocksdb github.com/LiveRamp/gazette/v2/examples/...\n#  Stage 4: Pluck gazette binaries onto base.\nFROM base AS gazette\n#  Install vim in gazette image as it is required for some gazctl commands\nRUN apt-get update \\\n && apt-get install --no-install-recommends vim -y\nCOPY --from=build /go/bin/gazctl /go/bin/gazette /go/bin/\n#  Stage 5: Pluck example binaries onto gazette.\nFROM gazette AS examples\nCOPY --from=build /go/bin/chunker /go/bin/counter /go/bin/summer /go/bin/wordcountctl /go/bin/\n","injectedSmells":[],"originalDockerfileHash":"dc79cc3d9f1ed7d2ce39e56aa4ace4d3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   State 1: Create a base image which includes the Go toolchain,\n#   RocksDB library, its tools, and dependencies.\nFROM golang:1.11 AS base\nARG ROCKSDB_VERSION=5.17.2\nARG ZSTD_VERSION=1.3.5\n#   Install dependencies for building & running RocksDB.\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends build-essential curl libbz2-dev libgflags-dev libjemalloc-dev liblz4-dev libsnappy-dev unzip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Build zstd. The packaged version (libzstd-dev) is currently 1.1.2 on Debian stretch.\n#   We need at least 1.3\nRUN curl -L -o /opt/zstd.tgz https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz \\\n && mkdir -p /opt/zstd \\\n && tar xzf /opt/zstd.tgz -C /opt/zstd --strip-components=1 \\\n && rm /opt/zstd.tgz \\\n && cd /opt/zstd \\\n && make install -j$( nproc ;) \\\n && rm -r /opt/zstd\n#   Install RocksDB and the \"ldb\" & \"sst_dump\" tools.\nRUN curl -L -o /opt/rocksdb.tgz https://github.com/facebook/rocksdb/archive/v${ROCKSDB_VERSION}.tar.gz \\\n && mkdir -p /opt/rocksdb \\\n && tar xzf /opt/rocksdb.tgz -C /opt/rocksdb --strip-components=1 \\\n && rm /opt/rocksdb.tgz \\\n && cd /opt/rocksdb \\\n && USE_SSE=1 DEBUG_LEVEL=0 USE_RTTI=1 make shared_lib tools -j$( nproc ;) \\\n && make install-shared -j$( nproc ;) \\\n && cp ldb sst_dump /usr/local/bin \\\n && rm -r /opt/rocksdb \\\n && ldconfig\n#   Stage 2: Create an image with the vendored dependencies, suitable for using\n#   as a cache to speed up CI build times.\nFROM base AS vendor\nARG DEP_VERSION=v0.5.0\nRUN curl -fsSL -o /usr/local/bin/dep https://github.com/golang/dep/releases/download/${DEP_VERSION}/dep-linux-amd64 \\\n && chmod +x /usr/local/bin/dep\nCOPY Gopkg.toml Gopkg.lock /go/src/github.com/LiveRamp/gazette/\nRUN cd /go/src/github.com/LiveRamp/gazette/ \\\n && dep ensure -vendor-only \\\n && rm -rf \"$GOPATH/pkg/dep\"\n#   Stage 3: Create a build image with source, which is built and tested.\nFROM vendor AS build\n#   Copy, install, and test library and main packages.\nCOPY v2/pkg /go/src/github.com/LiveRamp/gazette/v2/pkg\nRUN go install -race -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nRUN go test -race -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nRUN go install -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nCOPY v2/cmd /go/src/github.com/LiveRamp/gazette/v2/cmd\nRUN go install github.com/LiveRamp/gazette/v2/cmd/...\nRUN go test github.com/LiveRamp/gazette/v2/cmd/...\n#   Build & test examples.\nCOPY v2/examples /go/src/github.com/LiveRamp/gazette/v2/examples\nRUN go install -tags rocksdb github.com/LiveRamp/gazette/v2/examples/...\nRUN go test -tags rocksdb github.com/LiveRamp/gazette/v2/examples/...\n#   Stage 4: Pluck gazette binaries onto base.\nFROM base AS gazette\n#   Install vim in gazette image as it is required for some gazctl commands\nRUN apt-get update \\\n && apt-get install --no-install-recommends vim -y\nCOPY --from=build /go/bin/gazctl /go/bin/gazette /go/bin/\n#   Stage 5: Pluck example binaries onto gazette.\nFROM gazette AS examples\nCOPY --from=build /go/bin/chunker /go/bin/counter /go/bin/summer /go/bin/wordcountctl /go/bin/\n","originalDockerfileUglifiedHash":"f583647010c3ae597145169c16e22499","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/eb6db4a75ae14c98772cd2bff78c4b1b2aa620a0.dockerfile"}