{"seed":674665178,"processedDockerfileHash":"a7c7421fdde037bb88f9981c941642d6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM aqzt/docker-alpine:jdk8\nLABEL maintainer=\"aqzt.com (ppabc@qq.com)\"\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#   let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\nRUN apk add gnupg --no-cache\n#   see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#   see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nRUN set -ex ; for key in $GPG_KEYS; do gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"$key\" ; done\nENV TOMCAT_MAJOR=\"7\"\nENV TOMCAT_VERSION=\"7.0.79\"\n#   https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394\nENV TOMCAT_TGZ_URL=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\n#   not all the mirrors actually carry the .asc files :'(\nENV TOMCAT_ASC_URL=\"https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\n#   if the version is outdated, we have to pull from the archive :/\nENV TOMCAT_TGZ_FALLBACK_URL=\"https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_FALLBACK_URL=\"https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -x \\\n && apk add ca-certificates tar openssl --no-cache --virtual .fetch-deps \\\n && { wget -O tomcat.tar.gz \"$TOMCAT_TGZ_URL\" || wget -O tomcat.tar.gz \"$TOMCAT_TGZ_FALLBACK_URL\" ; } \\\n && { wget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_URL\" || wget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_FALLBACK_URL\" ; } \\\n && gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz \\\n && tar -xvf tomcat.tar.gz --strip-components=1 \\\n && rm bin/*.bat \\\n && rm tomcat.tar.gz* \\\n && nativeBuildDir=\"$( mktemp -d ;)\" \\\n && tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 \\\n && apk add apr-dev coreutils dpkg-dev dpkg gcc libc-dev make openjdk8 openssl-dev --no-cache --virtual .native-build-deps \\\n && (export CATALINA_HOME=\"$PWD\" \\\n && cd \"$nativeBuildDir/native\" \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$JAVA_HOME\" --with-ssl=yes \\\n && make -j \"$( nproc ;)\" \\\n && make install ) \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive \"$TOMCAT_NATIVE_LIBDIR\" | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --virtual .tomcat-native-rundeps \\\n && apk del .fetch-deps .native-build-deps \\\n && rm -rf \"$nativeBuildDir\" \\\n && rm bin/tomcat-native.tar.gz \\\n && apk add bash --no-cache \\\n && find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' + \\\n && set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\n#  ## Add Files\nCOPY root /\n#  ## Networking Configuration\nEXPOSE 8080/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM aqzt/docker-alpine:jdk8\nLABEL maintainer=\"aqzt.com (ppabc@qq.com)\"\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#  let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\nRUN apk add --no-cache gnupg\n#  see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#  see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nRUN set -ex ; for key in $GPG_KEYS; do gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"$key\" ; done\nENV TOMCAT_MAJOR=\"7\"\nENV TOMCAT_VERSION=\"7.0.79\"\n#  https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394\nENV TOMCAT_TGZ_URL=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\n#  not all the mirrors actually carry the .asc files :'(\nENV TOMCAT_ASC_URL=\"https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\n#  if the version is outdated, we have to pull from the archive :/\nENV TOMCAT_TGZ_FALLBACK_URL=\"https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_FALLBACK_URL=\"https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -x \\\n && apk add --no-cache --virtual .fetch-deps ca-certificates tar openssl \\\n && { wget -O tomcat.tar.gz \"$TOMCAT_TGZ_URL\" || wget -O tomcat.tar.gz \"$TOMCAT_TGZ_FALLBACK_URL\" ; } \\\n && { wget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_URL\" || wget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_FALLBACK_URL\" ; } \\\n && gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz \\\n && tar -xvf tomcat.tar.gz --strip-components=1 \\\n && rm bin/*.bat \\\n && rm tomcat.tar.gz* \\\n && nativeBuildDir=\"$( mktemp -d ;)\" \\\n && tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 \\\n && apk add --no-cache --virtual .native-build-deps apr-dev coreutils dpkg-dev dpkg gcc libc-dev make openjdk8 openssl-dev \\\n && (export CATALINA_HOME=\"$PWD\" \\\n && cd \"$nativeBuildDir/native\" \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$JAVA_HOME\" --with-ssl=yes \\\n && make -j \"$( nproc ;)\" \\\n && make install ) \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive \"$TOMCAT_NATIVE_LIBDIR\" | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .tomcat-native-rundeps $runDeps \\\n && apk del .fetch-deps .native-build-deps \\\n && rm -rf \"$nativeBuildDir\" \\\n && rm bin/tomcat-native.tar.gz \\\n && apk add --no-cache bash \\\n && find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' + \\\n && set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\n# ## Add Files\nADD root /\n# ## Networking Configuration\nEXPOSE 8080/tcp\n","injectedSmells":[],"originalDockerfileHash":"0ed2ab4a48b8ca920063c75c283692da","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM aqzt/docker-alpine:jdk8\nLABEL maintainer=\"aqzt.com (ppabc@qq.com)\"\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#   let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\nRUN apk add --no-cache gnupg\n#   see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#   see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nRUN set -ex ; for key in $GPG_KEYS; do gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"$key\" ; done\nENV TOMCAT_MAJOR=\"7\"\nENV TOMCAT_VERSION=\"7.0.79\"\n#   https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394\nENV TOMCAT_TGZ_URL=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\n#   not all the mirrors actually carry the .asc files :'(\nENV TOMCAT_ASC_URL=\"https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\n#   if the version is outdated, we have to pull from the archive :/\nENV TOMCAT_TGZ_FALLBACK_URL=\"https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_FALLBACK_URL=\"https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -x \\\n && apk add --no-cache --virtual .fetch-deps ca-certificates tar openssl \\\n && { wget -O tomcat.tar.gz \"$TOMCAT_TGZ_URL\" || wget -O tomcat.tar.gz \"$TOMCAT_TGZ_FALLBACK_URL\" ; } \\\n && { wget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_URL\" || wget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_FALLBACK_URL\" ; } \\\n && gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz \\\n && tar -xvf tomcat.tar.gz --strip-components=1 \\\n && rm bin/*.bat \\\n && rm tomcat.tar.gz* \\\n && nativeBuildDir=\"$( mktemp -d ;)\" \\\n && tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 \\\n && apk add --no-cache --virtual .native-build-deps apr-dev coreutils dpkg-dev dpkg gcc libc-dev make openjdk8 openssl-dev \\\n && (export CATALINA_HOME=\"$PWD\" \\\n && cd \"$nativeBuildDir/native\" \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$JAVA_HOME\" --with-ssl=yes \\\n && make -j \"$( nproc ;)\" \\\n && make install ) \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive \"$TOMCAT_NATIVE_LIBDIR\" | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .tomcat-native-rundeps $runDeps \\\n && apk del .fetch-deps .native-build-deps \\\n && rm -rf \"$nativeBuildDir\" \\\n && rm bin/tomcat-native.tar.gz \\\n && apk add --no-cache bash \\\n && find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' + \\\n && set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\n#  ## Add Files\nADD root /\n#  ## Networking Configuration\nEXPOSE 8080/tcp\n","originalDockerfileUglifiedHash":"552ebec611b6ea07c5c22f52e774a908","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5403fbba6410382e735361bc512d22f5da5b41ab.dockerfile"}