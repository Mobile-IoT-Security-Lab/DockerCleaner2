{"seed":3868280968,"processedDockerfileHash":"c24e290b3394ec4c846f06db366b7ef9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM frolvlad/alpine-glibc:alpine-3.7\nMAINTAINER yyu <yyu [at] mental.poker>\nENV TEXLIVE_DEPS=\"xz  tar  fontconfig-dev\"\nENV TEXLIVE_PATH=\"/usr/local/texlive\"\nENV PANDOC_DEPS=\"alpine-sdk  coreutils  ghc  gmp  libffi  linux-headers  musl-dev  zlib-dev  cabal  tar\"\nENV FONT_DEPS=\"unzip  fontconfig-dev\"\nENV FONT_PATH=\"/usr/share/fonts/\"\nENV PERSISTENT_DEPS=\"python3  wget  make  perl  ghostscript  inkscape  bash  git\"\nENV PANDOC_VERSION=\"2.1.3\"\nENV PANDOC_DOWNLOAD_URL=\"https://hackage.haskell.org/package/pandoc-$PANDOC_VERSION/pandoc-$PANDOC_VERSION.tar.gz\"\nENV PANDOC_ROOT=\"/usr/local/pandoc\"\nENV PATH=\"$TEXLIVE_PATH/bin/x86_64-linuxmusl:$PANDOC_ROOT/bin:$PATH\"\nRUN apk upgrade --update\n#   Install basic dependencies\nRUN apk add $PERSISTENT_DEPS --no-cache --virtual .persistent-deps\n#   Setup fonts\nRUN mkdir -p $FONT_PATH \\\n && apk add $FONT_DEPS --no-cache --virtual .font-deps \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSerif-unhinted.zip \\\n && unzip -d NotoSerif-unhinted NotoSerif-unhinted.zip \\\n && cp NotoSerif-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoSerif-unhinted.zip NotoSerif-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoNaskhArabic-unhinted.zip \\\n && unzip -d NotoNaskhArabic-unhinted NotoNaskhArabic-unhinted.zip \\\n && cp NotoNaskhArabic-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoNaskhArabic-unhinted.zip NotoNaskhArabic-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSerifCJKjp-hinted.zip \\\n && unzip -d NotoSerifCJKjp-hinted NotoSerifCJKjp-hinted.zip \\\n && cp NotoSerifCJKjp-hinted/*.otf $FONT_PATH \\\n && rm -rf NotoSerifCJKjp-hinted.zip NotoSerifCJKjp-hinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSansDevanagari-unhinted.zip \\\n && unzip -d NotoSansDevanagari-unhinted NotoSansDevanagari-unhinted.zip \\\n && cp NotoSansDevanagari-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoSansDevanagari-unhinted.zip NotoSansDevanagari-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoEmoji-unhinted.zip \\\n && unzip -d NotoEmoji-unhinted NotoEmoji-unhinted.zip \\\n && cp NotoEmoji-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoEmoji-unhinted.zip NotoEmoji-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSansHebrew-unhinted.zip \\\n && unzip -d NotoSansHebrew-unhinted NotoSansHebrew-unhinted.zip \\\n && cp NotoSansHebrew-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoSansHebrew-unhinted.zip NotoSansHebrew-unhinted \\\n && wget https://github.com/adobe-fonts/source-code-pro/archive/2.030R-ro/1.050R-it.zip \\\n && unzip 1.050R-it.zip \\\n && cp source-code-pro-2.030R-ro-1.050R-it/OTF/*.otf $FONT_PATH \\\n && rm -rf 1.050R-it.zip source-code-pro-2.030R-ro-1.050R-it \\\n && fc-cache -f -v \\\n && apk del .font-deps\n#   Install Pandoc\n#   See https://github.com/skyzyx/alpine-pandoc/blob/master/Dockerfile\nRUN apk add $PANDOC_DEPS --no-cache --virtual .pandoc-deps \\\n && apk add cabal --no-cache --virtual .cabal -X http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n && wget -qO- \"$PANDOC_DOWNLOAD_URL\" | tar -xzf - \\\n && (cd pandoc-$PANDOC_VERSION \\\n && cabal update \\\n && cabal install --only-dependencies \\\n && cabal configure --prefix=$PANDOC_ROOT \\\n && cabal build \\\n && cabal copy \\\n && cd .. ) \\\n && rm -Rf pandoc-$PANDOC_VERSION/ \\\n && rm -Rf /root/.cabal/ /root/.ghc/ \\\n && apk del .pandoc-deps .cabal\n#   Install Pandocfilter\nCOPY requirements.txt ./\nRUN pip3 install --upgrade pip \\\n && pip3 install -r requirements.txt \\\n && rm requirements.txt\n#   Install TeXLive\nRUN apk add $TEXLIVE_DEPS --no-cache --virtual .texlive-deps \\\n && mkdir /tmp/install-tl-unx \\\n && wget -qO- http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz | tar -xz -C /tmp/install-tl-unx --strip-components=1 \\\n && printf \"%s\\n\" \"TEXDIR $TEXLIVE_PATH\" \"selected_scheme scheme-small\" \"option_doc 0\" \"option_src 0\" > /tmp/install-tl-unx/texlive.profile \\\n && /tmp/install-tl-unx/install-tl -profile /tmp/install-tl-unx/texlive.profile \\\n && tlmgr install latexmk collection-luatex collection-langjapanese collection-fontsrecommended type1cm mdframed needspace fncychap everyhook svn-prov enumitem background everypage \\\n && rm -fr /tmp/install-tl-unx \\\n && apk del .texlive-deps\nVOLUME [\"/workdir\"]\nWORKDIR /workdir\nENTRYPOINT [\"/bin/bash\", \"-c\", \"./setup.sh\", \"&&\", \"make\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM frolvlad/alpine-glibc:alpine-3.7\nMAINTAINER yyu <yyu [at] mental.poker>\nENV TEXLIVE_DEPS=\"xz  tar  fontconfig-dev\"\nENV TEXLIVE_PATH=\"/usr/local/texlive\"\nENV PANDOC_DEPS=\"alpine-sdk  coreutils  ghc  gmp  libffi  linux-headers  musl-dev  zlib-dev  cabal  tar\"\nENV FONT_DEPS=\"unzip  fontconfig-dev\"\nENV FONT_PATH=\"/usr/share/fonts/\"\nENV PERSISTENT_DEPS=\"python3  wget  make  perl  ghostscript  inkscape  bash  git\"\nENV PANDOC_VERSION=\"2.1.3\"\nENV PANDOC_DOWNLOAD_URL=\"https://hackage.haskell.org/package/pandoc-$PANDOC_VERSION/pandoc-$PANDOC_VERSION.tar.gz\"\nENV PANDOC_ROOT=\"/usr/local/pandoc\"\nENV PATH=\"$TEXLIVE_PATH/bin/x86_64-linuxmusl:$PANDOC_ROOT/bin:$PATH\"\nRUN apk upgrade --update\n#  Install basic dependencies\nRUN apk add --no-cache --virtual .persistent-deps $PERSISTENT_DEPS\n#  Setup fonts\nRUN mkdir -p $FONT_PATH \\\n && apk add --no-cache --virtual .font-deps $FONT_DEPS \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSerif-unhinted.zip \\\n && unzip -d NotoSerif-unhinted NotoSerif-unhinted.zip \\\n && cp NotoSerif-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoSerif-unhinted.zip NotoSerif-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoNaskhArabic-unhinted.zip \\\n && unzip -d NotoNaskhArabic-unhinted NotoNaskhArabic-unhinted.zip \\\n && cp NotoNaskhArabic-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoNaskhArabic-unhinted.zip NotoNaskhArabic-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSerifCJKjp-hinted.zip \\\n && unzip -d NotoSerifCJKjp-hinted NotoSerifCJKjp-hinted.zip \\\n && cp NotoSerifCJKjp-hinted/*.otf $FONT_PATH \\\n && rm -rf NotoSerifCJKjp-hinted.zip NotoSerifCJKjp-hinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSansDevanagari-unhinted.zip \\\n && unzip -d NotoSansDevanagari-unhinted NotoSansDevanagari-unhinted.zip \\\n && cp NotoSansDevanagari-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoSansDevanagari-unhinted.zip NotoSansDevanagari-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoEmoji-unhinted.zip \\\n && unzip -d NotoEmoji-unhinted NotoEmoji-unhinted.zip \\\n && cp NotoEmoji-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoEmoji-unhinted.zip NotoEmoji-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSansHebrew-unhinted.zip \\\n && unzip -d NotoSansHebrew-unhinted NotoSansHebrew-unhinted.zip \\\n && cp NotoSansHebrew-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoSansHebrew-unhinted.zip NotoSansHebrew-unhinted \\\n && wget https://github.com/adobe-fonts/source-code-pro/archive/2.030R-ro/1.050R-it.zip \\\n && unzip 1.050R-it.zip \\\n && cp source-code-pro-2.030R-ro-1.050R-it/OTF/*.otf $FONT_PATH \\\n && rm -rf 1.050R-it.zip source-code-pro-2.030R-ro-1.050R-it \\\n && fc-cache -f -v \\\n && apk del .font-deps\n#  Install Pandoc\n#  See https://github.com/skyzyx/alpine-pandoc/blob/master/Dockerfile\nRUN apk add --no-cache --virtual .pandoc-deps $PANDOC_DEPS \\\n && apk add --no-cache --virtual .cabal cabal -X http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n && wget -qO- \"$PANDOC_DOWNLOAD_URL\" | tar -xzf - \\\n && (cd pandoc-$PANDOC_VERSION \\\n && cabal update \\\n && cabal install --only-dependencies \\\n && cabal configure --prefix=$PANDOC_ROOT \\\n && cabal build \\\n && cabal copy \\\n && cd .. ) \\\n && rm -Rf pandoc-$PANDOC_VERSION/ \\\n && rm -Rf /root/.cabal/ /root/.ghc/ \\\n && apk del .pandoc-deps .cabal\n#  Install Pandocfilter\nCOPY requirements.txt ./\nRUN pip3 install --upgrade pip \\\n && pip3 install -r requirements.txt \\\n && rm requirements.txt\n#  Install TeXLive\nRUN apk add --no-cache --virtual .texlive-deps $TEXLIVE_DEPS \\\n && mkdir /tmp/install-tl-unx \\\n && wget -qO- http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz | tar -xz -C /tmp/install-tl-unx --strip-components=1 \\\n && printf \"%s\\n\" \"TEXDIR $TEXLIVE_PATH\" \"selected_scheme scheme-small\" \"option_doc 0\" \"option_src 0\" > /tmp/install-tl-unx/texlive.profile \\\n && /tmp/install-tl-unx/install-tl -profile /tmp/install-tl-unx/texlive.profile \\\n && tlmgr install latexmk collection-luatex collection-langjapanese collection-fontsrecommended type1cm mdframed needspace fncychap everyhook svn-prov enumitem background everypage \\\n && rm -fr /tmp/install-tl-unx \\\n && apk del .texlive-deps\nVOLUME [\"/workdir\"]\nWORKDIR /workdir\nENTRYPOINT [\"/bin/bash\", \"-c\", \"./setup.sh\", \"&&\", \"make\"]\n","injectedSmells":[],"originalDockerfileHash":"20aa9d958ebe3e4149fe2c0ee6914888","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM frolvlad/alpine-glibc:alpine-3.7\nMAINTAINER yyu <yyu [at] mental.poker>\nENV TEXLIVE_DEPS=\"xz  tar  fontconfig-dev\"\nENV TEXLIVE_PATH=\"/usr/local/texlive\"\nENV PANDOC_DEPS=\"alpine-sdk  coreutils  ghc  gmp  libffi  linux-headers  musl-dev  zlib-dev  cabal  tar\"\nENV FONT_DEPS=\"unzip  fontconfig-dev\"\nENV FONT_PATH=\"/usr/share/fonts/\"\nENV PERSISTENT_DEPS=\"python3  wget  make  perl  ghostscript  inkscape  bash  git\"\nENV PANDOC_VERSION=\"2.1.3\"\nENV PANDOC_DOWNLOAD_URL=\"https://hackage.haskell.org/package/pandoc-$PANDOC_VERSION/pandoc-$PANDOC_VERSION.tar.gz\"\nENV PANDOC_ROOT=\"/usr/local/pandoc\"\nENV PATH=\"$TEXLIVE_PATH/bin/x86_64-linuxmusl:$PANDOC_ROOT/bin:$PATH\"\nRUN apk upgrade --update\n#   Install basic dependencies\nRUN apk add --no-cache --virtual .persistent-deps $PERSISTENT_DEPS\n#   Setup fonts\nRUN mkdir -p $FONT_PATH \\\n && apk add --no-cache --virtual .font-deps $FONT_DEPS \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSerif-unhinted.zip \\\n && unzip -d NotoSerif-unhinted NotoSerif-unhinted.zip \\\n && cp NotoSerif-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoSerif-unhinted.zip NotoSerif-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoNaskhArabic-unhinted.zip \\\n && unzip -d NotoNaskhArabic-unhinted NotoNaskhArabic-unhinted.zip \\\n && cp NotoNaskhArabic-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoNaskhArabic-unhinted.zip NotoNaskhArabic-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSerifCJKjp-hinted.zip \\\n && unzip -d NotoSerifCJKjp-hinted NotoSerifCJKjp-hinted.zip \\\n && cp NotoSerifCJKjp-hinted/*.otf $FONT_PATH \\\n && rm -rf NotoSerifCJKjp-hinted.zip NotoSerifCJKjp-hinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSansDevanagari-unhinted.zip \\\n && unzip -d NotoSansDevanagari-unhinted NotoSansDevanagari-unhinted.zip \\\n && cp NotoSansDevanagari-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoSansDevanagari-unhinted.zip NotoSansDevanagari-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoEmoji-unhinted.zip \\\n && unzip -d NotoEmoji-unhinted NotoEmoji-unhinted.zip \\\n && cp NotoEmoji-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoEmoji-unhinted.zip NotoEmoji-unhinted \\\n && wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSansHebrew-unhinted.zip \\\n && unzip -d NotoSansHebrew-unhinted NotoSansHebrew-unhinted.zip \\\n && cp NotoSansHebrew-unhinted/*.ttf $FONT_PATH \\\n && rm -rf NotoSansHebrew-unhinted.zip NotoSansHebrew-unhinted \\\n && wget https://github.com/adobe-fonts/source-code-pro/archive/2.030R-ro/1.050R-it.zip \\\n && unzip 1.050R-it.zip \\\n && cp source-code-pro-2.030R-ro-1.050R-it/OTF/*.otf $FONT_PATH \\\n && rm -rf 1.050R-it.zip source-code-pro-2.030R-ro-1.050R-it \\\n && fc-cache -f -v \\\n && apk del .font-deps\n#   Install Pandoc\n#   See https://github.com/skyzyx/alpine-pandoc/blob/master/Dockerfile\nRUN apk add --no-cache --virtual .pandoc-deps $PANDOC_DEPS \\\n && apk add --no-cache --virtual .cabal cabal -X http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n && wget -qO- \"$PANDOC_DOWNLOAD_URL\" | tar -xzf - \\\n && (cd pandoc-$PANDOC_VERSION \\\n && cabal update \\\n && cabal install --only-dependencies \\\n && cabal configure --prefix=$PANDOC_ROOT \\\n && cabal build \\\n && cabal copy \\\n && cd .. ) \\\n && rm -Rf pandoc-$PANDOC_VERSION/ \\\n && rm -Rf /root/.cabal/ /root/.ghc/ \\\n && apk del .pandoc-deps .cabal\n#   Install Pandocfilter\nCOPY requirements.txt ./\nRUN pip3 install --upgrade pip \\\n && pip3 install -r requirements.txt \\\n && rm requirements.txt\n#   Install TeXLive\nRUN apk add --no-cache --virtual .texlive-deps $TEXLIVE_DEPS \\\n && mkdir /tmp/install-tl-unx \\\n && wget -qO- http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz | tar -xz -C /tmp/install-tl-unx --strip-components=1 \\\n && printf \"%s\\n\" \"TEXDIR $TEXLIVE_PATH\" \"selected_scheme scheme-small\" \"option_doc 0\" \"option_src 0\" > /tmp/install-tl-unx/texlive.profile \\\n && /tmp/install-tl-unx/install-tl -profile /tmp/install-tl-unx/texlive.profile \\\n && tlmgr install latexmk collection-luatex collection-langjapanese collection-fontsrecommended type1cm mdframed needspace fncychap everyhook svn-prov enumitem background everypage \\\n && rm -fr /tmp/install-tl-unx \\\n && apk del .texlive-deps\nVOLUME [\"/workdir\"]\nWORKDIR /workdir\nENTRYPOINT [\"/bin/bash\", \"-c\", \"./setup.sh\", \"&&\", \"make\"]\n","originalDockerfileUglifiedHash":"6567c9f9f2af62b3c6b2a53539cab21e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/af54d56f8d7022c7786539567dc30a34dae1d8e3.dockerfile"}