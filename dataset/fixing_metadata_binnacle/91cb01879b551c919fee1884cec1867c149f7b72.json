{"seed":3557828377,"processedDockerfileHash":"f5f4f1ab5f3c47b63a00fc818406a86f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#   Based on Code.org CircleCI-dependencies Dockerfile in .circle directory\n#   Pushed to Docker Hub at wintercdo/code-dot-org:0.7\nFROM ubuntu:14.04\nUSER root\n#   set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#   add circleci user\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci\n#   essential tools\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 apt-transport-https=1.0.1ubuntu2.24 -y )\n#   add yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n#   more tools\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends git=1:1.9.1-1ubuntu0.10 xvfb=2:1.15.1-0ubuntu2.11 yarn=1.6.0-1 sudo=1.8.9p5-1ubuntu1.4 openssh-client=1:6.6p1-2ubuntu2.13 ca-certificates=20170717~14.04.2 tar=1.27.1-1ubuntu0.1 gzip=1.6-3ubuntu1 wget=1.15-1ubuntu1.14.04.5 xz-utils=5.1.1alpha+20120614-2ubuntu2 autoconf=2.69-6 build-essential=11.6ubuntu6 zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 libssl-dev=1.0.1f-1ubuntu2.27 curl=7.35.0-1ubuntu2.20 libreadline-dev=6.3-4ubuntu2 python=2.7.5-5ubuntu3 python-dev=2.7.5-5ubuntu3 -y )\n#   install node\nRUN wget https://nodejs.org/dist/v8.15.0/node-v8.15.0.tar.gz \\\n && tar -xzvf node-v8.15.0.tar.gz \\\n && rm node-v8.15.0.tar.gz \\\n && cd node-v8.15.0 \\\n && ./configure \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r node-v8.15.0\n#   more more tools\nRUN (apt-get update ;apt-get install --no-install-recommends unzip=6.0-9ubuntu1.5 -y )\n#   install firefox\nRUN curl --output /tmp/firefox.deb https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb \\\n && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb /tmp/firefox.deb' | sha256sum -c \\\n && sudo dpkg -i /tmp/firefox.deb || sudo apt-get -f install \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends libgtk3.0-cil-dev=2.99.2-2ubuntu1 -y ) \\\n && rm -rf /tmp/firefox.deb\n#   install chrome\nRUN curl -sSL -o /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n && (sudo dpkg -i /tmp/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install ) \\\n && rm -rf /tmp/google-chrome-stable_current_amd64.deb \\\n && sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \"/opt/google/chrome/google-chrome\"\n#   install chromedriver\nRUN export CHROMEDRIVER_RELEASE=$( curl http://chromedriver.storage.googleapis.com/LATEST_RELEASE ;) \\\n && curl -sSL -o /tmp/chromedriver_linux64.zip \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip\" \\\n && cd /tmp \\\n && unzip chromedriver_linux64.zip \\\n && rm -rf chromedriver_linux64.zip \\\n && sudo mv chromedriver /usr/local/bin/chromedriver \\\n && sudo chmod +x /usr/local/bin/chromedriver\n#   install mysql\nRUN curl -sSL -o /tmp/mysql-apt-config_0.8.9-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.9-1_all.deb \\\n && echo \"mysql-apt-config mysql-apt-config/select-server select mysql-5.7\" | /usr/bin/debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.9-1_all.deb || (apt-get update ;apt-get install --no-install-recommends -fy ) \\\n && rm -rf /tmp/mysql-apt-config_0.8.9-1_all.deb \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server libmysqlclient-dev\nRUN service mysql start \\\n && echo \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';\" | mysql \\\n && service mysql stop\n#   install a couple more things from config.yml\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends parallel=20161222-1~ubuntu0.14.04.2 libmagickwand-dev=8:6.7.7.10-6ubuntu3.13 imagemagick=8:6.7.7.10-6ubuntu3.13 -y )\nRUN mv /usr/bin/parallel /usr/bin/gnu_parallel\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends libicu-dev=52.1-3ubuntu0.8 enscript=1.6.5.90-2 moreutils=0.50 pdftk=2.01-1 libmysqlclient-dev=5.5.62-0ubuntu0.14.04.1 libsqlite3-dev=3.8.2-1ubuntu2.2 -y )\nRUN wget https://github.com/htacg/tidy-html5/releases/download/5.4.0/tidy-5.4.0-64bit.deb \\\n && dpkg -i tidy-5.4.0-64bit.deb \\\n && rm tidy-5.4.0-64bit.deb\nRUN mv /usr/bin/gnu_parallel /usr/bin/parallel\nRUN (apt-get update ;apt-get install --no-install-recommends rbenv=0.4.0+debian1-2 -y )\n#   install https://github.com/boxboat/fixuid\nRUN USER=circleci \\\n && GROUP=circleci \\\n && curl -SsL https://github.com/boxboat/fixuid/releases/download/v0.4/fixuid-0.4-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf - \\\n && chown root:root /usr/local/bin/fixuid \\\n && chmod 4755 /usr/local/bin/fixuid \\\n && mkdir -p /etc/fixuid \\\n && printf \"user: $USER\\ngroup: $GROUP\\n\" > /etc/fixuid/config.yml\nUSER circleci\n#   Install ruby-build: https://github.com/rbenv/ruby-build#readme\nRUN mkdir -p \"$( rbenv root ;)\"/plugins\nRUN git clone https://github.com/rbenv/ruby-build.git \"$( rbenv root ;)\"/plugins/ruby-build\nRUN rbenv install 2.5.0\nRUN eval \"$( rbenv init - ;)\" \\\n && rbenv global 2.5.0 \\\n && rbenv rehash \\\n && gem install bundler --version 1.17\n#   This bashrc file will be used whenever someone runs bash in interactive mode.\n#   This is mostly intended for the use case where you want to start a shell into a running container with\n#   docker exec -it <container_name> bash, which bypasses the entrypoint script.\nRUN echo 'eval \"$(rbenv init -)\"' >> ~/.bashrc\n#   We need git >= 2.15 to use git rev-parse --is-shallow-clone feature\n#   TODO: consolidate apt-get installs\nRUN sudo apt-get install -y software-properties-common \\\n && sudo add-apt-repository ppa:git-core/ppa \\\n && sudo apt-get update \\\n && sudo apt-get install -y git\nRUN sudo apt-get install -y jq\n#   en_US.UTF-8 locale not available by default\nRUN sudo locale-gen en_US.UTF-8\nCOPY entrypoint.sh /entrypoint.sh\nRUN sudo chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Based on Code.org CircleCI-dependencies Dockerfile in .circle directory\n#  Pushed to Docker Hub at wintercdo/code-dot-org:0.7\nFROM ubuntu:14.04\nUSER root\n#  set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#  use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#  add circleci user\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci\n#  essential tools\nRUN apt-get update \\\n && apt-get install curl apt-transport-https -y\n#  add yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n#  more tools\nRUN apt-get update \\\n && apt-get install git xvfb yarn=1.6.0-1 sudo openssh-client ca-certificates tar gzip wget xz-utils autoconf build-essential zlib1g-dev libssl-dev curl libreadline-dev python python-dev -y\n#  install node\nRUN wget https://nodejs.org/dist/v8.15.0/node-v8.15.0.tar.gz \\\n && tar -xzvf node-v8.15.0.tar.gz \\\n && rm node-v8.15.0.tar.gz \\\n && cd node-v8.15.0 \\\n && ./configure \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r node-v8.15.0\n#  more more tools\nRUN apt-get install unzip -y\n#  install firefox\nRUN curl --output /tmp/firefox.deb https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb \\\n && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb /tmp/firefox.deb' | sha256sum -c \\\n && sudo dpkg -i /tmp/firefox.deb || sudo apt-get -f install \\\n && apt-get update \\\n && apt-get install libgtk3.0-cil-dev -y \\\n && rm -rf /tmp/firefox.deb\n#  install chrome\nRUN curl -sSL -o /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n && (sudo dpkg -i /tmp/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install ) \\\n && rm -rf /tmp/google-chrome-stable_current_amd64.deb \\\n && sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \"/opt/google/chrome/google-chrome\"\n#  install chromedriver\nRUN export CHROMEDRIVER_RELEASE=$( curl http://chromedriver.storage.googleapis.com/LATEST_RELEASE ;) \\\n && curl -sSL -o /tmp/chromedriver_linux64.zip \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip\" \\\n && cd /tmp \\\n && unzip chromedriver_linux64.zip \\\n && rm -rf chromedriver_linux64.zip \\\n && sudo mv chromedriver /usr/local/bin/chromedriver \\\n && sudo chmod +x /usr/local/bin/chromedriver\n#  install mysql\nRUN curl -sSL -o /tmp/mysql-apt-config_0.8.9-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.9-1_all.deb \\\n && echo \"mysql-apt-config mysql-apt-config/select-server select mysql-5.7\" | /usr/bin/debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.9-1_all.deb || apt-get install -fy \\\n && rm -rf /tmp/mysql-apt-config_0.8.9-1_all.deb \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server libmysqlclient-dev\nRUN service mysql start \\\n && echo \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';\" | mysql \\\n && service mysql stop\n#  install a couple more things from config.yml\nRUN apt-get update \\\n && apt-get install parallel libmagickwand-dev imagemagick -y\nRUN mv /usr/bin/parallel /usr/bin/gnu_parallel\nRUN apt-get update\nRUN apt-get install libicu-dev enscript moreutils pdftk libmysqlclient-dev libsqlite3-dev -y\nRUN wget https://github.com/htacg/tidy-html5/releases/download/5.4.0/tidy-5.4.0-64bit.deb \\\n && dpkg -i tidy-5.4.0-64bit.deb \\\n && rm tidy-5.4.0-64bit.deb\nRUN mv /usr/bin/gnu_parallel /usr/bin/parallel\nRUN apt-get install rbenv -y\n#  install https://github.com/boxboat/fixuid\nRUN USER=circleci \\\n && GROUP=circleci \\\n && curl -SsL https://github.com/boxboat/fixuid/releases/download/v0.4/fixuid-0.4-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf - \\\n && chown root:root /usr/local/bin/fixuid \\\n && chmod 4755 /usr/local/bin/fixuid \\\n && mkdir -p /etc/fixuid \\\n && printf \"user: $USER\\ngroup: $GROUP\\n\" > /etc/fixuid/config.yml\nUSER circleci\n#  Install ruby-build: https://github.com/rbenv/ruby-build#readme\nRUN mkdir -p \"$( rbenv root ;)\"/plugins\nRUN git clone https://github.com/rbenv/ruby-build.git \"$( rbenv root ;)\"/plugins/ruby-build\nRUN rbenv install 2.5.0\nRUN eval \"$( rbenv init - ;)\" \\\n && rbenv global 2.5.0 \\\n && rbenv rehash \\\n && gem install bundler --version 1.17\n#  This bashrc file will be used whenever someone runs bash in interactive mode.\n#  This is mostly intended for the use case where you want to start a shell into a running container with\n#  docker exec -it <container_name> bash, which bypasses the entrypoint script.\nRUN echo 'eval \"$(rbenv init -)\"' >> ~/.bashrc\n#  We need git >= 2.15 to use git rev-parse --is-shallow-clone feature\n#  TODO: consolidate apt-get installs\nRUN sudo apt-get install -y software-properties-common \\\n && sudo add-apt-repository ppa:git-core/ppa \\\n && sudo apt-get update \\\n && sudo apt-get install -y git\nRUN sudo apt-get install -y jq\n#  en_US.UTF-8 locale not available by default\nRUN sudo locale-gen en_US.UTF-8\nCOPY entrypoint.sh /entrypoint.sh\nRUN sudo chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"24fbc168209b467b6d2495bed4102719","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Based on Code.org CircleCI-dependencies Dockerfile in .circle directory\n#   Pushed to Docker Hub at wintercdo/code-dot-org:0.7\nFROM ubuntu:14.04\nUSER root\n#   set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#   add circleci user\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci\n#   essential tools\nRUN apt-get update \\\n && apt-get install curl apt-transport-https -y\n#   add yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n#   more tools\nRUN apt-get update \\\n && apt-get install git xvfb yarn=1.6.0-1 sudo openssh-client ca-certificates tar gzip wget xz-utils autoconf build-essential zlib1g-dev libssl-dev curl libreadline-dev python python-dev -y\n#   install node\nRUN wget https://nodejs.org/dist/v8.15.0/node-v8.15.0.tar.gz \\\n && tar -xzvf node-v8.15.0.tar.gz \\\n && rm node-v8.15.0.tar.gz \\\n && cd node-v8.15.0 \\\n && ./configure \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r node-v8.15.0\n#   more more tools\nRUN apt-get install unzip -y\n#   install firefox\nRUN curl --output /tmp/firefox.deb https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb \\\n && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb /tmp/firefox.deb' | sha256sum -c \\\n && sudo dpkg -i /tmp/firefox.deb || sudo apt-get -f install \\\n && apt-get update \\\n && apt-get install libgtk3.0-cil-dev -y \\\n && rm -rf /tmp/firefox.deb\n#   install chrome\nRUN curl -sSL -o /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n && (sudo dpkg -i /tmp/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install ) \\\n && rm -rf /tmp/google-chrome-stable_current_amd64.deb \\\n && sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \"/opt/google/chrome/google-chrome\"\n#   install chromedriver\nRUN export CHROMEDRIVER_RELEASE=$( curl http://chromedriver.storage.googleapis.com/LATEST_RELEASE ;) \\\n && curl -sSL -o /tmp/chromedriver_linux64.zip \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip\" \\\n && cd /tmp \\\n && unzip chromedriver_linux64.zip \\\n && rm -rf chromedriver_linux64.zip \\\n && sudo mv chromedriver /usr/local/bin/chromedriver \\\n && sudo chmod +x /usr/local/bin/chromedriver\n#   install mysql\nRUN curl -sSL -o /tmp/mysql-apt-config_0.8.9-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.9-1_all.deb \\\n && echo \"mysql-apt-config mysql-apt-config/select-server select mysql-5.7\" | /usr/bin/debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.9-1_all.deb || apt-get install -fy \\\n && rm -rf /tmp/mysql-apt-config_0.8.9-1_all.deb \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server libmysqlclient-dev\nRUN service mysql start \\\n && echo \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';\" | mysql \\\n && service mysql stop\n#   install a couple more things from config.yml\nRUN apt-get update \\\n && apt-get install parallel libmagickwand-dev imagemagick -y\nRUN mv /usr/bin/parallel /usr/bin/gnu_parallel\nRUN apt-get update\nRUN apt-get install libicu-dev enscript moreutils pdftk libmysqlclient-dev libsqlite3-dev -y\nRUN wget https://github.com/htacg/tidy-html5/releases/download/5.4.0/tidy-5.4.0-64bit.deb \\\n && dpkg -i tidy-5.4.0-64bit.deb \\\n && rm tidy-5.4.0-64bit.deb\nRUN mv /usr/bin/gnu_parallel /usr/bin/parallel\nRUN apt-get install rbenv -y\n#   install https://github.com/boxboat/fixuid\nRUN USER=circleci \\\n && GROUP=circleci \\\n && curl -SsL https://github.com/boxboat/fixuid/releases/download/v0.4/fixuid-0.4-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf - \\\n && chown root:root /usr/local/bin/fixuid \\\n && chmod 4755 /usr/local/bin/fixuid \\\n && mkdir -p /etc/fixuid \\\n && printf \"user: $USER\\ngroup: $GROUP\\n\" > /etc/fixuid/config.yml\nUSER circleci\n#   Install ruby-build: https://github.com/rbenv/ruby-build#readme\nRUN mkdir -p \"$( rbenv root ;)\"/plugins\nRUN git clone https://github.com/rbenv/ruby-build.git \"$( rbenv root ;)\"/plugins/ruby-build\nRUN rbenv install 2.5.0\nRUN eval \"$( rbenv init - ;)\" \\\n && rbenv global 2.5.0 \\\n && rbenv rehash \\\n && gem install bundler --version 1.17\n#   This bashrc file will be used whenever someone runs bash in interactive mode.\n#   This is mostly intended for the use case where you want to start a shell into a running container with\n#   docker exec -it <container_name> bash, which bypasses the entrypoint script.\nRUN echo 'eval \"$(rbenv init -)\"' >> ~/.bashrc\n#   We need git >= 2.15 to use git rev-parse --is-shallow-clone feature\n#   TODO: consolidate apt-get installs\nRUN sudo apt-get install -y software-properties-common \\\n && sudo add-apt-repository ppa:git-core/ppa \\\n && sudo apt-get update \\\n && sudo apt-get install -y git\nRUN sudo apt-get install -y jq\n#   en_US.UTF-8 locale not available by default\nRUN sudo locale-gen en_US.UTF-8\nCOPY entrypoint.sh /entrypoint.sh\nRUN sudo chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"008c4286af1c3d9eae7e8f0373f0a528","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/91cb01879b551c919fee1884cec1867c149f7b72.dockerfile"}