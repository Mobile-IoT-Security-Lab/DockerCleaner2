{"seed":3911606705,"processedDockerfileHash":"45e9f8f069206bf0855d55846b7100fc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  upstream https://github.com/docker-library/cassandra\n#   vim:set ft=dockerfile:\nFROM debian:stretch-slim\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\n#   explicitly set user/group IDs\nRUN groupadd -r cassandra --gid=999 \\\n && useradd -r -g cassandra --uid=999 cassandra\nRUN set -ex ; apt-get update ; (apt-get update ;apt-get install --no-install-recommends libjemalloc1 procps iproute2 -y ) ; if ! command -v gpg > /dev/null; then (apt-get update ;apt-get install --no-install-recommends dirmngr gnupg -y ) ; fi ; rm -rf /var/lib/apt/lists/*\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -x \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ca-certificates wget -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#   https://wiki.apache.org/cassandra/DebianPackaging#Adding_Repository_Keys\nENV GPG_KEYS=\"514A2AD631A57A16DD0047EC749D6EEC0353B12C  A26E528B271F19B9E5D8E19EA278B781FE4B2BDA\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nENV CASSANDRA_VERSION=\"3.11.2\"\nRUN set -ex ; mkdir -p /usr/share/man/man1/ ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (amd64|i386) echo 'deb http://www.apache.org/dist/cassandra/debian 311x main' > /etc/apt/sources.list.d/cassandra.list; apt-get update ;;(*) savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; (apt-get update ;apt-get install --no-install-recommends wget ca-certificates dpkg-dev -y ) ; apt-mark showmanual | xargs apt-mark auto > /dev/null; apt-mark manual $savedAptMark ; tempDir=\"$( mktemp -d ;)\" ; for pkg in cassandra cassandra-tools; do deb=\"${pkg}_${CASSANDRA_VERSION}_all.deb\" ;wget -O \"$tempDir/$deb\" \"https://www.apache.org/dist/cassandra/debian/pool/main/c/cassandra/$deb\" ; done ; ls -lAFh \"$tempDir\" ; (cd \"$tempDir\" \\\n && dpkg-scanpackages . > Packages) ; grep '^Package: ' \"$tempDir/Packages\" ; echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; apt-get -o Acquire::GzipIndexes=false update ;; esac ; (apt-get update ;apt-get install --no-install-recommends cassandra=\"$CASSANDRA_VERSION\" cassandra-tools=\"$CASSANDRA_VERSION\" -y ) ; rm -rf /var/lib/apt/lists/* ; if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove ;rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\nENV CASSANDRA_CONFIG=\"/etc/cassandra\"\nRUN set -ex ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (ppc64el) if grep -q -- '^-Xss' \"$CASSANDRA_CONFIG/jvm.options\" ; then grep -- '^-Xss256k$' \"$CASSANDRA_CONFIG/jvm.options\" ;sed -ri 's/^-Xss256k$/-Xss512k/' \"$CASSANDRA_CONFIG/jvm.options\" ;grep -- '^-Xss512k$' \"$CASSANDRA_CONFIG/jvm.options\" ; elif grep -q -- '-Xss256k' \"$CASSANDRA_CONFIG/cassandra-env.sh\" ; then sed -ri 's/-Xss256k/-Xss512k/g' \"$CASSANDRA_CONFIG/cassandra-env.sh\" ;grep -- '-Xss512k' \"$CASSANDRA_CONFIG/cassandra-env.sh\" ; fi ;; esac ; sed -ri 's/^(JVM_PATCH_VERSION)=.*/\\1=25/' \"$CASSANDRA_CONFIG/cassandra-env.sh\"\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nRUN mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n && chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n && chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\"\nVOLUME /var/lib/cassandra\n#   7000: intra-node communication\n#   7001: TLS intra-node communication\n#   7199: JMX\n#   9042: CQL\n#   9160: thrift service\nEXPOSE 7000/tcp 7001/tcp 7199/tcp 9042/tcp 9160/tcp\nCMD [\"cassandra\", \"-f\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/docker-library/cassandra\n#  vim:set ft=dockerfile:\nFROM debian:stretch-slim\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n#  Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  Install required packages\nRUN apt-get dist-upgrade -y\n#  explicitly set user/group IDs\nRUN groupadd -r cassandra --gid=999 \\\n && useradd -r -g cassandra --uid=999 cassandra\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends libjemalloc1 procps iproute2 -y ; if ! command -v gpg > /dev/null; then apt-get install --no-install-recommends dirmngr gnupg -y ; fi ; rm -rf /var/lib/apt/lists/*\n#  grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#  https://wiki.apache.org/cassandra/DebianPackaging#Adding_Repository_Keys\nENV GPG_KEYS=\"514A2AD631A57A16DD0047EC749D6EEC0353B12C  A26E528B271F19B9E5D8E19EA278B781FE4B2BDA\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nENV CASSANDRA_VERSION=\"3.11.2\"\nRUN set -ex ; mkdir -p /usr/share/man/man1/ ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (amd64|i386) echo 'deb http://www.apache.org/dist/cassandra/debian 311x main' > /etc/apt/sources.list.d/cassandra.list; apt-get update ;;(*) savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends wget ca-certificates dpkg-dev -y ; apt-mark showmanual | xargs apt-mark auto > /dev/null; apt-mark manual $savedAptMark ; tempDir=\"$( mktemp -d ;)\" ; for pkg in cassandra cassandra-tools; do deb=\"${pkg}_${CASSANDRA_VERSION}_all.deb\" ;wget -O \"$tempDir/$deb\" \"https://www.apache.org/dist/cassandra/debian/pool/main/c/cassandra/$deb\" ; done ; ls -lAFh \"$tempDir\" ; (cd \"$tempDir\" \\\n && dpkg-scanpackages . > Packages) ; grep '^Package: ' \"$tempDir/Packages\" ; echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; apt-get -o Acquire::GzipIndexes=false update ;; esac ; apt-get install cassandra=\"$CASSANDRA_VERSION\" cassandra-tools=\"$CASSANDRA_VERSION\" -y ; rm -rf /var/lib/apt/lists/* ; if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove ;rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\nENV CASSANDRA_CONFIG=\"/etc/cassandra\"\nRUN set -ex ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (ppc64el) if grep -q -- '^-Xss' \"$CASSANDRA_CONFIG/jvm.options\" ; then grep -- '^-Xss256k$' \"$CASSANDRA_CONFIG/jvm.options\" ;sed -ri 's/^-Xss256k$/-Xss512k/' \"$CASSANDRA_CONFIG/jvm.options\" ;grep -- '^-Xss512k$' \"$CASSANDRA_CONFIG/jvm.options\" ; elif grep -q -- '-Xss256k' \"$CASSANDRA_CONFIG/cassandra-env.sh\" ; then sed -ri 's/-Xss256k/-Xss512k/g' \"$CASSANDRA_CONFIG/cassandra-env.sh\" ;grep -- '-Xss512k' \"$CASSANDRA_CONFIG/cassandra-env.sh\" ; fi ;; esac ; sed -ri 's/^(JVM_PATCH_VERSION)=.*/\\1=25/' \"$CASSANDRA_CONFIG/cassandra-env.sh\"\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nRUN mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n && chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n && chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\"\nVOLUME /var/lib/cassandra\n#  7000: intra-node communication\n#  7001: TLS intra-node communication\n#  7199: JMX\n#  9042: CQL\n#  9160: thrift service\nEXPOSE 7000/tcp 7001/tcp 7199/tcp 9042/tcp 9160/tcp\nCMD [\"cassandra\", \"-f\"]\n","injectedSmells":[],"originalDockerfileHash":"6b393462d04f3381137b6730e92661b1","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/docker-library/cassandra\n#   vim:set ft=dockerfile:\nFROM debian:stretch-slim\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\n#   explicitly set user/group IDs\nRUN groupadd -r cassandra --gid=999 \\\n && useradd -r -g cassandra --uid=999 cassandra\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends libjemalloc1 procps iproute2 -y ; if ! command -v gpg > /dev/null; then apt-get install --no-install-recommends dirmngr gnupg -y ; fi ; rm -rf /var/lib/apt/lists/*\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#   https://wiki.apache.org/cassandra/DebianPackaging#Adding_Repository_Keys\nENV GPG_KEYS=\"514A2AD631A57A16DD0047EC749D6EEC0353B12C  A26E528B271F19B9E5D8E19EA278B781FE4B2BDA\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nENV CASSANDRA_VERSION=\"3.11.2\"\nRUN set -ex ; mkdir -p /usr/share/man/man1/ ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (amd64|i386) echo 'deb http://www.apache.org/dist/cassandra/debian 311x main' > /etc/apt/sources.list.d/cassandra.list; apt-get update ;;(*) savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends wget ca-certificates dpkg-dev -y ; apt-mark showmanual | xargs apt-mark auto > /dev/null; apt-mark manual $savedAptMark ; tempDir=\"$( mktemp -d ;)\" ; for pkg in cassandra cassandra-tools; do deb=\"${pkg}_${CASSANDRA_VERSION}_all.deb\" ;wget -O \"$tempDir/$deb\" \"https://www.apache.org/dist/cassandra/debian/pool/main/c/cassandra/$deb\" ; done ; ls -lAFh \"$tempDir\" ; (cd \"$tempDir\" \\\n && dpkg-scanpackages . > Packages) ; grep '^Package: ' \"$tempDir/Packages\" ; echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; apt-get -o Acquire::GzipIndexes=false update ;; esac ; apt-get install cassandra=\"$CASSANDRA_VERSION\" cassandra-tools=\"$CASSANDRA_VERSION\" -y ; rm -rf /var/lib/apt/lists/* ; if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove ;rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\nENV CASSANDRA_CONFIG=\"/etc/cassandra\"\nRUN set -ex ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (ppc64el) if grep -q -- '^-Xss' \"$CASSANDRA_CONFIG/jvm.options\" ; then grep -- '^-Xss256k$' \"$CASSANDRA_CONFIG/jvm.options\" ;sed -ri 's/^-Xss256k$/-Xss512k/' \"$CASSANDRA_CONFIG/jvm.options\" ;grep -- '^-Xss512k$' \"$CASSANDRA_CONFIG/jvm.options\" ; elif grep -q -- '-Xss256k' \"$CASSANDRA_CONFIG/cassandra-env.sh\" ; then sed -ri 's/-Xss256k/-Xss512k/g' \"$CASSANDRA_CONFIG/cassandra-env.sh\" ;grep -- '-Xss512k' \"$CASSANDRA_CONFIG/cassandra-env.sh\" ; fi ;; esac ; sed -ri 's/^(JVM_PATCH_VERSION)=.*/\\1=25/' \"$CASSANDRA_CONFIG/cassandra-env.sh\"\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nRUN mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n && chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n && chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\"\nVOLUME /var/lib/cassandra\n#   7000: intra-node communication\n#   7001: TLS intra-node communication\n#   7199: JMX\n#   9042: CQL\n#   9160: thrift service\nEXPOSE 7000/tcp 7001/tcp 7199/tcp 9042/tcp 9160/tcp\nCMD [\"cassandra\", \"-f\"]\n","originalDockerfileUglifiedHash":"c74b1913e739526c9736071e57f2195f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b95bc26a80763f53cbe4a935d4c7b03b52b2c9b9.dockerfile"}