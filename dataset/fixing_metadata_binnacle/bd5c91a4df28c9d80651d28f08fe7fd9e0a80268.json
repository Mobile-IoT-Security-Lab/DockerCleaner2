{"seed":840756076,"processedDockerfileHash":"8ea884176df2cad07c4cdb916b0303ca","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM buildpack-deps:xenial\n#  ============\n#   Packages\n#  ============\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 swftools=0.9.2+git20130725-4.1~build0.16.04.1 git=1:2.7.4-0ubuntu1.10 xvfb=2:1.18.4-0ubuntu0.12 wget=1.17.1-1ubuntu1.5 bzip2=1.0.6-8ubuntu0.2 ca-certificates=20210119~16.04.1 tzdata=2021a-0ubuntu0.16.04 sudo=1.8.16-0ubuntu1.10 unzip=6.0-20ubuntu1.1 cron=3.0pl1-128ubuntu2 locales=2.23-0ubuntu11.3 rsyslog=8.16.0-1ubuntu3.1 coreutils=8.25-2ubuntu3~16.04 -y\n#   rsyslog: for get cron error logs\n#   coreutils: for sleep command\n#  =========\n#   Ruby\n#   see Dockerfiles on https://hub.docker.com/_/ruby/\n#  =========\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.4\"\nENV RUBY_VERSION=\"2.4.2\"\nENV RUBYGEMS_VERSION=\"2.7.2\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n && buildDeps=' bison libgdbm-dev ruby ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && ./configure --disable-install-doc --enable-shared \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && cd / \\\n && rm -r /usr/src/ruby\nENV BUNDLER_VERSION=\"1.16.0\"\nRUN gem install bundler --version 2.4.12\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_BIN=\"$GEM_HOME/bin\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH=\"$BUNDLE_BIN:$PATH\"\nRUN mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\"\n#  =========\n#   ffmpeg\n#  =========\nRUN wget --no-verbose -O /tmp/ffmpeg.tar.gz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz \\\n && tar -C /tmp -xf /tmp/ffmpeg.tar.gz \\\n && mv /tmp/ffmpeg-*-amd64-static/ffmpeg /usr/bin \\\n && rm -rf /tmp/ffmpeg*\n#  =========\n#   rtmpdump\n#  =========\nRUN git clone git://git.ffmpeg.org/rtmpdump \\\n && cd /rtmpdump \\\n && make \\\n && make install\n#  =========\n#   youtube-dl\n#  =========\nRUN wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl \\\n && chmod a+rx /usr/local/bin/youtube-dl\n#  =========\n#   livedl\n#  =========\nRUN wget https://github.com/yayugu/livedl/releases/download/20181107.38/livedl -O /usr/local/bin/livedl \\\n && chmod a+rx /usr/local/bin/livedl\n#  ============\n#   Timezone\n#   see: https://bugs.launchpad.net/ubuntu/+source/tzdata/+bug/1554806\n#  ============\nENV TZ=\"\\\"Asia/Tokyo\\\"\"\nRUN echo 'Asia/Tokyo' > /etc/timezone \\\n && rm /etc/localtime \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n#  ============\n#   Locale\n#  ============\nENV LC_ALL=\"C.UTF-8\"\n#  ============\n#   Copy bundler env to /etc/environment to load on cron\n#  ============\nRUN printenv | grep -E \"^BUNDLE\" >> /etc/environment\n#  ============\n#   Rails\n#  ============\nRUN mkdir /myapp\nWORKDIR /myapp\nCOPY Gemfile /myapp/Gemfile\nCOPY Gemfile.lock /myapp/Gemfile.lock\nCOPY niconico /myapp/niconico\nRUN bundle install -j4 --without development test\nCOPY . /myapp\nRUN RAILS_ENV=production bundle exec rake db:create db:migrate \\\n && RAILS_ENV=production bundle exec whenever --update-crontab \\\n && chmod 0600 /var/spool/cron/crontabs/root\nCMD rsyslogd \\\n && /usr/sbin/cron -f\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM buildpack-deps:xenial\n# ============\n#  Packages\n# ============\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends nodejs swftools git xvfb wget bzip2 ca-certificates tzdata sudo unzip cron locales rsyslog coreutils -y\n#  rsyslog: for get cron error logs\n#  coreutils: for sleep command\n# =========\n#  Ruby\n#  see Dockerfiles on https://hub.docker.com/_/ruby/\n# =========\n#  skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.4\"\nENV RUBY_VERSION=\"2.4.2\"\nENV RUBYGEMS_VERSION=\"2.7.2\"\n#  some of ruby's build scripts are written in ruby\n#    we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n && buildDeps=' bison libgdbm-dev ruby ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && ./configure --disable-install-doc --enable-shared \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && cd / \\\n && rm -r /usr/src/ruby\nENV BUNDLER_VERSION=\"1.16.0\"\nRUN gem install bundler\n#  install things globally, for great justice\n#  and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_BIN=\"$GEM_HOME/bin\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH=\"$BUNDLE_BIN:$PATH\"\nRUN mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\"\n# =========\n#  ffmpeg\n# =========\nRUN wget --no-verbose -O /tmp/ffmpeg.tar.gz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz \\\n && tar -C /tmp -xf /tmp/ffmpeg.tar.gz \\\n && mv /tmp/ffmpeg-*-amd64-static/ffmpeg /usr/bin \\\n && rm -rf /tmp/ffmpeg*\n# =========\n#  rtmpdump\n# =========\nRUN git clone git://git.ffmpeg.org/rtmpdump \\\n && cd /rtmpdump \\\n && make \\\n && make install\n# =========\n#  youtube-dl\n# =========\nRUN wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl \\\n && chmod a+rx /usr/local/bin/youtube-dl\n# =========\n#  livedl\n# =========\nRUN wget https://github.com/yayugu/livedl/releases/download/20181107.38/livedl -O /usr/local/bin/livedl \\\n && chmod a+rx /usr/local/bin/livedl\n# ============\n#  Timezone\n#  see: https://bugs.launchpad.net/ubuntu/+source/tzdata/+bug/1554806\n# ============\nENV TZ=\"\\\"Asia/Tokyo\\\"\"\nRUN echo 'Asia/Tokyo' > /etc/timezone \\\n && rm /etc/localtime \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n# ============\n#  Locale\n# ============\nENV LC_ALL=\"C.UTF-8\"\n# ============\n#  Copy bundler env to /etc/environment to load on cron\n# ============\nRUN printenv | grep -E \"^BUNDLE\" >> /etc/environment\n# ============\n#  Rails\n# ============\nRUN mkdir /myapp\nWORKDIR /myapp\nADD Gemfile /myapp/Gemfile\nADD Gemfile.lock /myapp/Gemfile.lock\nADD niconico /myapp/niconico\nRUN bundle install -j4 --without development test\nADD . /myapp\nRUN RAILS_ENV=production bundle exec rake db:create db:migrate \\\n && RAILS_ENV=production bundle exec whenever --update-crontab \\\n && chmod 0600 /var/spool/cron/crontabs/root\nCMD rsyslogd \\\n && /usr/sbin/cron -f\n","injectedSmells":[],"originalDockerfileHash":"17c39964111ec703e14b749e321ceb6c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM buildpack-deps:xenial\n#  ============\n#   Packages\n#  ============\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends nodejs swftools git xvfb wget bzip2 ca-certificates tzdata sudo unzip cron locales rsyslog coreutils -y\n#   rsyslog: for get cron error logs\n#   coreutils: for sleep command\n#  =========\n#   Ruby\n#   see Dockerfiles on https://hub.docker.com/_/ruby/\n#  =========\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.4\"\nENV RUBY_VERSION=\"2.4.2\"\nENV RUBYGEMS_VERSION=\"2.7.2\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n && buildDeps=' bison libgdbm-dev ruby ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && ./configure --disable-install-doc --enable-shared \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && cd / \\\n && rm -r /usr/src/ruby\nENV BUNDLER_VERSION=\"1.16.0\"\nRUN gem install bundler\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_BIN=\"$GEM_HOME/bin\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH=\"$BUNDLE_BIN:$PATH\"\nRUN mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\"\n#  =========\n#   ffmpeg\n#  =========\nRUN wget --no-verbose -O /tmp/ffmpeg.tar.gz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz \\\n && tar -C /tmp -xf /tmp/ffmpeg.tar.gz \\\n && mv /tmp/ffmpeg-*-amd64-static/ffmpeg /usr/bin \\\n && rm -rf /tmp/ffmpeg*\n#  =========\n#   rtmpdump\n#  =========\nRUN git clone git://git.ffmpeg.org/rtmpdump \\\n && cd /rtmpdump \\\n && make \\\n && make install\n#  =========\n#   youtube-dl\n#  =========\nRUN wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl \\\n && chmod a+rx /usr/local/bin/youtube-dl\n#  =========\n#   livedl\n#  =========\nRUN wget https://github.com/yayugu/livedl/releases/download/20181107.38/livedl -O /usr/local/bin/livedl \\\n && chmod a+rx /usr/local/bin/livedl\n#  ============\n#   Timezone\n#   see: https://bugs.launchpad.net/ubuntu/+source/tzdata/+bug/1554806\n#  ============\nENV TZ=\"\\\"Asia/Tokyo\\\"\"\nRUN echo 'Asia/Tokyo' > /etc/timezone \\\n && rm /etc/localtime \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n#  ============\n#   Locale\n#  ============\nENV LC_ALL=\"C.UTF-8\"\n#  ============\n#   Copy bundler env to /etc/environment to load on cron\n#  ============\nRUN printenv | grep -E \"^BUNDLE\" >> /etc/environment\n#  ============\n#   Rails\n#  ============\nRUN mkdir /myapp\nWORKDIR /myapp\nADD Gemfile /myapp/Gemfile\nADD Gemfile.lock /myapp/Gemfile.lock\nADD niconico /myapp/niconico\nRUN bundle install -j4 --without development test\nADD . /myapp\nRUN RAILS_ENV=production bundle exec rake db:create db:migrate \\\n && RAILS_ENV=production bundle exec whenever --update-crontab \\\n && chmod 0600 /var/spool/cron/crontabs/root\nCMD rsyslogd \\\n && /usr/sbin/cron -f\n","originalDockerfileUglifiedHash":"50111c33156f3bd5b0e6d4701427bf5b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bd5c91a4df28c9d80651d28f08fe7fd9e0a80268.dockerfile"}