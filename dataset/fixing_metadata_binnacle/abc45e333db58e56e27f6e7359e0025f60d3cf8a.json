{"seed":3927783606,"processedDockerfileHash":"a0519f00fa38da73a039dce7412b3901","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Docker image to build a SonarQube platform container for \n#   continuous inspection of code quality based on OpenJDK 8 image.\n#   \n#   ######################## INFOS ##########################\n#    Image based on https://hub.docker.com/_/openjdk\n#\n#     - Expose \n#           9000 Sonar Web App HTTP\n#           9092 H2 Database \n#\n#     - Data path:    /opt/sonarqube/data\n#     - Plugins path: /opt/sonarqube/extensions/plugins\n#\n#     - Web Application\n#           User:    admin:admin \n#           Path:    /    e.g. http://localhost:9000\n#   ######################## INFOS ##########################\n#\n#\n#   ######################## DOCKER #########################\n#   BUILD\n#   docker build -t blogging-it/internal-sonarqube:1.0.0 .\n#\n#   RUN (add -d parameter to start a container in detached mode)\n#   docker run -P -it --rm -p 9000:9000 -p 9092:9092 --name internal-sonarqube blogging-it/internal-sonarqube:1.0.0\n#\n#   STOP\n#   docker stop internal-sonarqube\n#\n#   REMOVE CONTAINER AND IMAGE\n#   docker rm -f internal-sonarqube ; docker rmi -f blogging-it/internal-sonarqube:1.0.0\n#\n#   LOGIN INTO CONTAINER\n#   docker exec -i -t internal-sonarqube /bin/bash\n#\n#   COPY FILE FROM CONTAINER TO HOST\n#   docker cp internal-sonarqube:/opt/sonarqube/data ./data\n#\n#   CHECK CONTAINER LOGS\n#   docker logs internal-sonarqube\n#\n#   ######################## DOCKER #########################\n#\n#   ######################## BASE ###########################\nFROM openjdk:8\nMAINTAINER \"Markus Eschenbach <mail@blogging-it.com>\"\n#   ***************** ENVIRONMENT VARIABLES *****************\nENV SQ_HOME=\"/opt/sonarqube\" \\\n    SQ_VERSION=\"6.3\" \\\n    SQ_WEB_JVM_OPTS=\"\" \\\n    SQ_LOG_CONSOLE=\"true\" \\\n    SQ_DOWNLOAD_URL=\"https://sonarsource.bintray.com/Distribution/sonarqube\" \\\n    SQ_TS_PLUGIN_VERSION=\"1.1.0\" \\\n    SQ_TS_PLUGIN_URL=\"https://github.com/Pablissimo/SonarTsPlugin/releases/download/v\"\nENV SQ_TS_PLUGIN_NAME=\"sonar-typescript-plugin-$SQ_TS_PLUGIN_VERSION.jar\"\n#   Database configuration\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV SQ_JDBC_USERNAME=\"sonar\" \\\n    SQ_JDBC_PORT=\"9092\" \\\n    SQ_JDBC_URL=\"jdbc:h2:tcp://localhost:9092/sonar\"\n#     SQ_JDBC_URL=jdbc:postgresql://localhost/sonar\n#   ************ DOWNLOAD AND INSTALL SONARQUBE *************\nRUN set -x \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys F1182E81C792928921DBCAB4CFCA4A29D26468DE \\\n && cd /opt \\\n && curl -o sonarqube.zip -fSL $SQ_DOWNLOAD_URL/sonarqube-$SQ_VERSION.zip \\\n && curl -o sonarqube.zip.asc -fSL $SQ_DOWNLOAD_URL/sonarqube-$SQ_VERSION.zip.asc \\\n && gpg --batch --verify sonarqube.zip.asc sonarqube.zip \\\n && unzip sonarqube.zip \\\n && mv sonarqube-$SQ_VERSION sonarqube \\\n && rm sonarqube.zip* \\\n && rm -rf $SQ_HOME/bin/*\n#   *************** INSTALL SONARQUBE PLUGINS ***************\n#   SonarTsPlugin - https://github.com/Pablissimo/SonarTsPlugin\nRUN set -x \\\n && mkdir -p $SQ_HOME/extensions/plugins \\\n && cd $SQ_HOME/extensions/plugins \\\n && curl -o $SQ_TS_PLUGIN_NAME -fSLk $SQ_TS_PLUGIN_URL$SQ_TS_PLUGIN_VERSION/$SQ_TS_PLUGIN_NAME\n#   ********************* EXPOSE PORTS *********************\n#   Sonar Web App HTTP\nEXPOSE 9000/tcp\n#   H2 Database \nEXPOSE 9092/tcp\n#   *********************** VOLUMES ************************\nVOLUME [\"$SQ_HOME/data\", \"$SQ_HOME/extensions\"]\n#   *********************** RUNSCRIPT **********************\nWORKDIR $SQ_HOME\nCOPY run.sh $SQ_HOME/bin/\nRUN set -x \\\n && chmod +x $SQ_HOME/bin/run.sh\n#   ********************** ENTRYPOINT **********************\nENTRYPOINT [\"./bin/run.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Docker image to build a SonarQube platform container for \n#  continuous inspection of code quality based on OpenJDK 8 image.\n#  \n#  ######################## INFOS ##########################\n#   Image based on https://hub.docker.com/_/openjdk\n#\n#    - Expose \n#          9000 Sonar Web App HTTP\n#          9092 H2 Database \n#\n#    - Data path:    /opt/sonarqube/data\n#    - Plugins path: /opt/sonarqube/extensions/plugins\n#\n#    - Web Application\n#          User:    admin:admin \n#          Path:    /    e.g. http://localhost:9000\n#  ######################## INFOS ##########################\n#\n#\n#  ######################## DOCKER #########################\n#  BUILD\n#  docker build -t blogging-it/internal-sonarqube:1.0.0 .\n#\n#  RUN (add -d parameter to start a container in detached mode)\n#  docker run -P -it --rm -p 9000:9000 -p 9092:9092 --name internal-sonarqube blogging-it/internal-sonarqube:1.0.0\n#\n#  STOP\n#  docker stop internal-sonarqube\n#\n#  REMOVE CONTAINER AND IMAGE\n#  docker rm -f internal-sonarqube ; docker rmi -f blogging-it/internal-sonarqube:1.0.0\n#\n#  LOGIN INTO CONTAINER\n#  docker exec -i -t internal-sonarqube /bin/bash\n#\n#  COPY FILE FROM CONTAINER TO HOST\n#  docker cp internal-sonarqube:/opt/sonarqube/data ./data\n#\n#  CHECK CONTAINER LOGS\n#  docker logs internal-sonarqube\n#\n#  ######################## DOCKER #########################\n#\n#  ######################## BASE ###########################\nFROM openjdk:8\nMAINTAINER \"Markus Eschenbach <mail@blogging-it.com>\"\n#  ***************** ENVIRONMENT VARIABLES *****************\nENV SQ_HOME=\"/opt/sonarqube\" \\\n    SQ_VERSION=\"6.3\" \\\n    SQ_WEB_JVM_OPTS=\"\" \\\n    SQ_LOG_CONSOLE=\"true\" \\\n    SQ_DOWNLOAD_URL=\"https://sonarsource.bintray.com/Distribution/sonarqube\" \\\n    SQ_TS_PLUGIN_VERSION=\"1.1.0\" \\\n    SQ_TS_PLUGIN_URL=\"https://github.com/Pablissimo/SonarTsPlugin/releases/download/v\"\nENV SQ_TS_PLUGIN_NAME=\"sonar-typescript-plugin-$SQ_TS_PLUGIN_VERSION.jar\"\n#  Database configuration\nENV SQ_JDBC_USERNAME=\"sonar\" \\\n    SQ_JDBC_PASSWORD=\"sonar\" \\\n    SQ_JDBC_PORT=\"9092\" \\\n    SQ_JDBC_URL=\"jdbc:h2:tcp://localhost:9092/sonar\"\n#    SQ_JDBC_URL=jdbc:postgresql://localhost/sonar\n#  ************ DOWNLOAD AND INSTALL SONARQUBE *************\nRUN set -x \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys F1182E81C792928921DBCAB4CFCA4A29D26468DE \\\n && cd /opt \\\n && curl -o sonarqube.zip -fSL $SQ_DOWNLOAD_URL/sonarqube-$SQ_VERSION.zip \\\n && curl -o sonarqube.zip.asc -fSL $SQ_DOWNLOAD_URL/sonarqube-$SQ_VERSION.zip.asc \\\n && gpg --batch --verify sonarqube.zip.asc sonarqube.zip \\\n && unzip sonarqube.zip \\\n && mv sonarqube-$SQ_VERSION sonarqube \\\n && rm sonarqube.zip* \\\n && rm -rf $SQ_HOME/bin/*\n#  *************** INSTALL SONARQUBE PLUGINS ***************\n#  SonarTsPlugin - https://github.com/Pablissimo/SonarTsPlugin\nRUN set -x \\\n && mkdir -p $SQ_HOME/extensions/plugins \\\n && cd $SQ_HOME/extensions/plugins \\\n && curl -o $SQ_TS_PLUGIN_NAME -fSLk $SQ_TS_PLUGIN_URL$SQ_TS_PLUGIN_VERSION/$SQ_TS_PLUGIN_NAME\n#  ********************* EXPOSE PORTS *********************\n#  Sonar Web App HTTP\nEXPOSE 9000/tcp\n#  H2 Database \nEXPOSE 9092/tcp\n#  *********************** VOLUMES ************************\nVOLUME [\"$SQ_HOME/data\", \"$SQ_HOME/extensions\"]\n#  *********************** RUNSCRIPT **********************\nWORKDIR $SQ_HOME\nCOPY run.sh $SQ_HOME/bin/\nRUN set -x \\\n && chmod +x $SQ_HOME/bin/run.sh\n#  ********************** ENTRYPOINT **********************\nENTRYPOINT [\"./bin/run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"797af1b3c3341e1e78719c0cea1d38b6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Docker image to build a SonarQube platform container for \n#   continuous inspection of code quality based on OpenJDK 8 image.\n#   \n#   ######################## INFOS ##########################\n#    Image based on https://hub.docker.com/_/openjdk\n#\n#     - Expose \n#           9000 Sonar Web App HTTP\n#           9092 H2 Database \n#\n#     - Data path:    /opt/sonarqube/data\n#     - Plugins path: /opt/sonarqube/extensions/plugins\n#\n#     - Web Application\n#           User:    admin:admin \n#           Path:    /    e.g. http://localhost:9000\n#   ######################## INFOS ##########################\n#\n#\n#   ######################## DOCKER #########################\n#   BUILD\n#   docker build -t blogging-it/internal-sonarqube:1.0.0 .\n#\n#   RUN (add -d parameter to start a container in detached mode)\n#   docker run -P -it --rm -p 9000:9000 -p 9092:9092 --name internal-sonarqube blogging-it/internal-sonarqube:1.0.0\n#\n#   STOP\n#   docker stop internal-sonarqube\n#\n#   REMOVE CONTAINER AND IMAGE\n#   docker rm -f internal-sonarqube ; docker rmi -f blogging-it/internal-sonarqube:1.0.0\n#\n#   LOGIN INTO CONTAINER\n#   docker exec -i -t internal-sonarqube /bin/bash\n#\n#   COPY FILE FROM CONTAINER TO HOST\n#   docker cp internal-sonarqube:/opt/sonarqube/data ./data\n#\n#   CHECK CONTAINER LOGS\n#   docker logs internal-sonarqube\n#\n#   ######################## DOCKER #########################\n#\n#   ######################## BASE ###########################\nFROM openjdk:8\nMAINTAINER \"Markus Eschenbach <mail@blogging-it.com>\"\n#   ***************** ENVIRONMENT VARIABLES *****************\nENV SQ_HOME=\"/opt/sonarqube\" \\\n    SQ_VERSION=\"6.3\" \\\n    SQ_WEB_JVM_OPTS=\"\" \\\n    SQ_LOG_CONSOLE=\"true\" \\\n    SQ_DOWNLOAD_URL=\"https://sonarsource.bintray.com/Distribution/sonarqube\" \\\n    SQ_TS_PLUGIN_VERSION=\"1.1.0\" \\\n    SQ_TS_PLUGIN_URL=\"https://github.com/Pablissimo/SonarTsPlugin/releases/download/v\"\nENV SQ_TS_PLUGIN_NAME=\"sonar-typescript-plugin-$SQ_TS_PLUGIN_VERSION.jar\"\n#   Database configuration\nENV SQ_JDBC_USERNAME=\"sonar\" \\\n    SQ_JDBC_PASSWORD=\"sonar\" \\\n    SQ_JDBC_PORT=\"9092\" \\\n    SQ_JDBC_URL=\"jdbc:h2:tcp://localhost:9092/sonar\"\n#     SQ_JDBC_URL=jdbc:postgresql://localhost/sonar\n#   ************ DOWNLOAD AND INSTALL SONARQUBE *************\nRUN set -x \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys F1182E81C792928921DBCAB4CFCA4A29D26468DE \\\n && cd /opt \\\n && curl -o sonarqube.zip -fSL $SQ_DOWNLOAD_URL/sonarqube-$SQ_VERSION.zip \\\n && curl -o sonarqube.zip.asc -fSL $SQ_DOWNLOAD_URL/sonarqube-$SQ_VERSION.zip.asc \\\n && gpg --batch --verify sonarqube.zip.asc sonarqube.zip \\\n && unzip sonarqube.zip \\\n && mv sonarqube-$SQ_VERSION sonarqube \\\n && rm sonarqube.zip* \\\n && rm -rf $SQ_HOME/bin/*\n#   *************** INSTALL SONARQUBE PLUGINS ***************\n#   SonarTsPlugin - https://github.com/Pablissimo/SonarTsPlugin\nRUN set -x \\\n && mkdir -p $SQ_HOME/extensions/plugins \\\n && cd $SQ_HOME/extensions/plugins \\\n && curl -o $SQ_TS_PLUGIN_NAME -fSLk $SQ_TS_PLUGIN_URL$SQ_TS_PLUGIN_VERSION/$SQ_TS_PLUGIN_NAME\n#   ********************* EXPOSE PORTS *********************\n#   Sonar Web App HTTP\nEXPOSE 9000/tcp\n#   H2 Database \nEXPOSE 9092/tcp\n#   *********************** VOLUMES ************************\nVOLUME [\"$SQ_HOME/data\", \"$SQ_HOME/extensions\"]\n#   *********************** RUNSCRIPT **********************\nWORKDIR $SQ_HOME\nCOPY run.sh $SQ_HOME/bin/\nRUN set -x \\\n && chmod +x $SQ_HOME/bin/run.sh\n#   ********************** ENTRYPOINT **********************\nENTRYPOINT [\"./bin/run.sh\"]\n","originalDockerfileUglifiedHash":"6791fbb18e824763c702c6d04df4e5ff","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/abc45e333db58e56e27f6e7359e0025f60d3cf8a.dockerfile"}