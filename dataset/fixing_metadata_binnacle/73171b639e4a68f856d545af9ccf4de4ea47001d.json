{"seed":108202920,"processedDockerfileHash":"87e4d6ea7021d03bd524cabbce95302d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ------------------------------------------------------------------------------#\n#   This file contains the setup for building a base image for the MiniZinc\n#   challenges. It uses multi-stage builds in order to keep the images small.\n#   Note that the statements ADD, RUN, and COPY can add image layers.\n#  ------------------------------------------------------------------------------#\n#   The build image\n#   Setup Alpine Linux as build image\nFROM alpine:latest AS builder\n#   Retrieve MiniZinc IDE distribution\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /minizinc.tgz https://github.com/MiniZinc/MiniZincIDE/releases/download/2.1.7/MiniZincIDE-2.1.7-bundle-linux-x86_64.tgz\n#   Unpack compressed MiniZinc archive and renamed folder\nRUN tar -zxf /minizinc.tgz \\\n && mv /MiniZincIDE-2.1.7-bundle-linux-x86_64 /minizinc\n#  ------------------------------------------------------------------------------#\n#   Script for executing a FlatZinc or MiniZinc solver in the FD class\nRUN echo \"#!/bin/bash \" > /minizinc/mzn-exec-fd \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-fd \\\n && echo \"# Script for running solver in the class 'FD search' \" >> /minizinc/mzn-exec-fd \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-fd \\\n && echo \"# FlatZinc Solver \" >> /minizinc/mzn-exec-fd \\\n && echo \"# (comment following line for MiniZinc solver) \" >> /minizinc/mzn-exec-fd \\\n && echo \"minizinc -k -f \\\"$FZNEXEC\\\" -G exec \\\"$@\\\" \" >> /minizinc/mzn-exec-fd \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-fd \\\n && echo \"# MiniZinc Solver \" >> /minizinc/mzn-exec-fd \\\n && echo \"# (add call to your solver here, e.g.) \" >> /minizinc/mzn-exec-fd \\\n && echo \"# mzn-gecode -G gecode \\\"$@\\\" \" >> /minizinc/mzn-exec-fd \\\n && chmod a+x /minizinc/mzn-exec-fd\n#  ------------------------------------------------------------------------------#\n#   Script for executing a FlatZinc or MiniZinc solver in the FREE class\nRUN echo \"#!/bin/bash \" > /minizinc/mzn-exec-free \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-free \\\n && echo \"# Script for running solver in the class 'FREE search' \" >> /minizinc/mzn-exec-free \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-free \\\n && echo \"# FlatZinc Solver \" >> /minizinc/mzn-exec-free \\\n && echo \"# (comment following line for MiniZinc solver) \" >> /minizinc/mzn-exec-free \\\n && echo \"minizinc -k -f \\\"$FZNEXEC -f\\\" -G exec \\\"$@\\\" \" >> /minizinc/mzn-exec-free \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-free \\\n && echo \"# MiniZinc Solver \" >> /minizinc/mzn-exec-free \\\n && echo \"# (add call to your solver here, e.g.) \" >> /minizinc/mzn-exec-free \\\n && echo \"# mzn-gecode -f -G gecode \\\"$@\\\" \" >> /minizinc/mzn-exec-free \\\n && chmod a+x /minizinc/mzn-exec-free\n#  ------------------------------------------------------------------------------#\n#   Script for executing a FlatZinc or MiniZinc solver in the PAR class\n#   (NOTE that this script will be invoke including the parameter \"-p <n>\".)\nRUN echo \"#!/bin/bash \" > /minizinc/mzn-exec-par \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-par \\\n && echo \"# Script for running solver in the class 'PAR search' \" >> /minizinc/mzn-exec-par \\\n && echo \"# NOTE that the argument \\\"-p <n>\\\" will pass to this script!\" >> /minizinc/mzn-exec-par \\\n && echo \"# Your solver needs to handle this parameter. \" >> /minizinc/mzn-exec-par \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-par \\\n && echo \"# FlatZinc Solver \" >> /minizinc/mzn-exec-par \\\n && echo \"# (comment following line for MiniZinc solver) \" >> /minizinc/mzn-exec-par \\\n && echo \"minizinc -k -f \\\"$FZNEXEC\\\" -G exec \\\"$@\\\" \" >> /minizinc/mzn-exec-par \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-par \\\n && echo \"# MiniZinc Solver \" >> /minizinc/mzn-exec-par \\\n && echo \"# (add call to your solver here, e.g.) \" >> /minizinc/mzn-exec-par \\\n && echo \"# mzn-gecode -G gecode \\\"$@\\\" \" >> /minizinc/mzn-exec-par \\\n && chmod a+x /minizinc/mzn-exec-par\n#  ------------------------------------------------------------------------------#\n#   Script for executing a FlatZinc or MiniZinc solver from outside the container\nRUN echo \"#!/bin/bash \" > /minizinc/solver \\\n && echo \"#------------------------------------------#\" >> /minizinc/solver \\\n && echo \"EXEC=mzn-exec-fd \" >> /minizinc/solver \\\n && echo \"while (( \\\"$#\\\" )) \" >> /minizinc/solver \\\n && echo \"do \" >> /minizinc/solver \\\n && echo \" case $1 in \" >> /minizinc/solver \\\n && echo \" -p) \" >> /minizinc/solver \\\n && echo \" EXEC=mzn-exec-par \" >> /minizinc/solver \\\n && echo \" ARGS=\\\"$ARGS $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" --free-search) \" >> /minizinc/solver \\\n && echo \" EXEC=mzn-exec-free \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" --fzn-flag|--fzn-flags) \" >> /minizinc/solver \\\n && echo \" shift \" >> /minizinc/solver \\\n && echo \" FLAGS=\\\"$FLAGS $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" -D|--cmdline-data) \" >> /minizinc/solver \\\n && echo \" shift \" >> /minizinc/solver \\\n && echo \" DATA=\\\"$DATA $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" *) \" >> /minizinc/solver \\\n && echo \" ARGS=\\\"$ARGS $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" esac \" >> /minizinc/solver \\\n && echo \" shift \" >> /minizinc/solver \\\n && echo \"done \" >> /minizinc/solver \\\n && echo \"if [ -z \\\"$FLAGS\\\" ] \\\n && [ -z \\\"$DATA\\\" ] \" >> /minizinc/solver \\\n && echo \"then \" >> /minizinc/solver \\\n && echo \" $EXEC $ARGS \" >> /minizinc/solver \\\n && echo \"elif [ -n \\\"$FLAGS\\\" ] \\\n && [ -z \\\"$DATA\\\" ]\" >> /minizinc/solver \\\n && echo \"then \" >> /minizinc/solver \\\n && echo \" $EXEC --fzn-flags \\\"$FLAGS\\\" $ARGS \" >> /minizinc/solver \\\n && echo \"elif [ -z \\\"$FLAGS\\\" ] \\\n && [ -n \\\"$DATA\\\" ]\" >> /minizinc/solver \\\n && echo \"then \" >> /minizinc/solver \\\n && echo \" $EXEC -D \\\"$DATA\\\" $ARGS \" >> /minizinc/solver \\\n && echo \"else \" >> /minizinc/solver \\\n && echo \" $EXEC --fzn-flags \\\"$FLAGS\\\" -D \\\"$DATA\\\" $ARGS \" >> /minizinc/solver \\\n && echo \"fi \" >> /minizinc/solver \\\n && chmod a+x /minizinc/solver\n#  ------------------------------------------------------------------------------#\n#   Adding MiniZinc test files\nRUN echo \"int: a; \" > /minizinc/test.mzn \\\n && echo \"var 1..100: x; \" >> /minizinc/test.mzn \\\n && echo \"constraint a <= x /\\ x < 2*a; \" >> /minizinc/test.mzn \\\n && echo \"solve :: int_search([x], input_order, indomain_min, complete) satisfy; \" >> /minizinc/test.mzn \\\n && echo \"a = 2;\" > /minizinc/2.dzn\n#  ------------------------------------------------------------------------------#\n#   Setup of the base image\n#   Get base image from the latest Ubuntu LTS\nFROM ubuntu:16.04\n#   Update Ubuntu and install necessary packages\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends vim=2:9.0.1000-4ubuntu2 libmpfr4 libglib2.0-0=2.76.0-1ubuntu1 libx11-6=2:1.8.4-2 libpng12-0 libharfbuzz0b=6.0.0+dfsg-3build1 libgl1-mesa-glx=23.0.1-1ubuntu1 libpcre16-3=2:8.39-15 -y\n#   Copy unpacked MiniZinc installation from the build image\nCOPY --from=builder /minizinc /minizinc\n#   Create folder for the solver submission and link solver MiniZinc library\nRUN mkdir /entry_data \\\n && mkdir /entry_data/mzn-lib \\\n && ln -s /entry_data/mzn-lib /minizinc/share/minizinc/exec\n#  ------------------------------------------------------------------------------#\n#   Environment Variables\n#   Add FlatZinc solver absolute path\nENV FZNEXEC=\"/entry_data/fzn-exec\"\n#   Add MiniZinc's binary path to PATH\nENV PATH=\"/minizinc:${PATH}\"\n#   Add MiniZinc's library path to LD_LIBRARY_PATH\nENV LD_LIBRARY_PATH=\"/minizinc/lib:${LD_LIBRARY_PATH}\"\n#  ------------------------------------------------------------------------------#\n#   Setup Working Directory\nWORKDIR /minizinc\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ------------------------------------------------------------------------------#\n#  This file contains the setup for building a base image for the MiniZinc\n#  challenges. It uses multi-stage builds in order to keep the images small.\n#  Note that the statements ADD, RUN, and COPY can add image layers.\n# ------------------------------------------------------------------------------#\n#  The build image\n#  Setup Alpine Linux as build image\nFROM alpine:latest AS builder\n#  Retrieve MiniZinc IDE distribution\nADD https://github.com/MiniZinc/MiniZincIDE/releases/download/2.1.7/MiniZincIDE-2.1.7-bundle-linux-x86_64.tgz /minizinc.tgz\n#  Unpack compressed MiniZinc archive and renamed folder\nRUN tar -zxf /minizinc.tgz \\\n && mv /MiniZincIDE-2.1.7-bundle-linux-x86_64 /minizinc\n# ------------------------------------------------------------------------------#\n#  Script for executing a FlatZinc or MiniZinc solver in the FD class\nRUN echo \"#!/bin/bash \" > /minizinc/mzn-exec-fd \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-fd \\\n && echo \"# Script for running solver in the class 'FD search' \" >> /minizinc/mzn-exec-fd \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-fd \\\n && echo \"# FlatZinc Solver \" >> /minizinc/mzn-exec-fd \\\n && echo \"# (comment following line for MiniZinc solver) \" >> /minizinc/mzn-exec-fd \\\n && echo \"minizinc -k -f \\\"$FZNEXEC\\\" -G exec \\\"$@\\\" \" >> /minizinc/mzn-exec-fd \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-fd \\\n && echo \"# MiniZinc Solver \" >> /minizinc/mzn-exec-fd \\\n && echo \"# (add call to your solver here, e.g.) \" >> /minizinc/mzn-exec-fd \\\n && echo \"# mzn-gecode -G gecode \\\"$@\\\" \" >> /minizinc/mzn-exec-fd \\\n && chmod a+x /minizinc/mzn-exec-fd\n# ------------------------------------------------------------------------------#\n#  Script for executing a FlatZinc or MiniZinc solver in the FREE class\nRUN echo \"#!/bin/bash \" > /minizinc/mzn-exec-free \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-free \\\n && echo \"# Script for running solver in the class 'FREE search' \" >> /minizinc/mzn-exec-free \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-free \\\n && echo \"# FlatZinc Solver \" >> /minizinc/mzn-exec-free \\\n && echo \"# (comment following line for MiniZinc solver) \" >> /minizinc/mzn-exec-free \\\n && echo \"minizinc -k -f \\\"$FZNEXEC -f\\\" -G exec \\\"$@\\\" \" >> /minizinc/mzn-exec-free \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-free \\\n && echo \"# MiniZinc Solver \" >> /minizinc/mzn-exec-free \\\n && echo \"# (add call to your solver here, e.g.) \" >> /minizinc/mzn-exec-free \\\n && echo \"# mzn-gecode -f -G gecode \\\"$@\\\" \" >> /minizinc/mzn-exec-free \\\n && chmod a+x /minizinc/mzn-exec-free\n# ------------------------------------------------------------------------------#\n#  Script for executing a FlatZinc or MiniZinc solver in the PAR class\n#  (NOTE that this script will be invoke including the parameter \"-p <n>\".)\nRUN echo \"#!/bin/bash \" > /minizinc/mzn-exec-par \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-par \\\n && echo \"# Script for running solver in the class 'PAR search' \" >> /minizinc/mzn-exec-par \\\n && echo \"# NOTE that the argument \\\"-p <n>\\\" will pass to this script!\" >> /minizinc/mzn-exec-par \\\n && echo \"# Your solver needs to handle this parameter. \" >> /minizinc/mzn-exec-par \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-par \\\n && echo \"# FlatZinc Solver \" >> /minizinc/mzn-exec-par \\\n && echo \"# (comment following line for MiniZinc solver) \" >> /minizinc/mzn-exec-par \\\n && echo \"minizinc -k -f \\\"$FZNEXEC\\\" -G exec \\\"$@\\\" \" >> /minizinc/mzn-exec-par \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-par \\\n && echo \"# MiniZinc Solver \" >> /minizinc/mzn-exec-par \\\n && echo \"# (add call to your solver here, e.g.) \" >> /minizinc/mzn-exec-par \\\n && echo \"# mzn-gecode -G gecode \\\"$@\\\" \" >> /minizinc/mzn-exec-par \\\n && chmod a+x /minizinc/mzn-exec-par\n# ------------------------------------------------------------------------------#\n#  Script for executing a FlatZinc or MiniZinc solver from outside the container\nRUN echo \"#!/bin/bash \" > /minizinc/solver \\\n && echo \"#------------------------------------------#\" >> /minizinc/solver \\\n && echo \"EXEC=mzn-exec-fd \" >> /minizinc/solver \\\n && echo \"while (( \\\"$#\\\" )) \" >> /minizinc/solver \\\n && echo \"do \" >> /minizinc/solver \\\n && echo \" case $1 in \" >> /minizinc/solver \\\n && echo \" -p) \" >> /minizinc/solver \\\n && echo \" EXEC=mzn-exec-par \" >> /minizinc/solver \\\n && echo \" ARGS=\\\"$ARGS $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" --free-search) \" >> /minizinc/solver \\\n && echo \" EXEC=mzn-exec-free \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" --fzn-flag|--fzn-flags) \" >> /minizinc/solver \\\n && echo \" shift \" >> /minizinc/solver \\\n && echo \" FLAGS=\\\"$FLAGS $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" -D|--cmdline-data) \" >> /minizinc/solver \\\n && echo \" shift \" >> /minizinc/solver \\\n && echo \" DATA=\\\"$DATA $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" *) \" >> /minizinc/solver \\\n && echo \" ARGS=\\\"$ARGS $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" esac \" >> /minizinc/solver \\\n && echo \" shift \" >> /minizinc/solver \\\n && echo \"done \" >> /minizinc/solver \\\n && echo \"if [ -z \\\"$FLAGS\\\" ] \\\n && [ -z \\\"$DATA\\\" ] \" >> /minizinc/solver \\\n && echo \"then \" >> /minizinc/solver \\\n && echo \" $EXEC $ARGS \" >> /minizinc/solver \\\n && echo \"elif [ -n \\\"$FLAGS\\\" ] \\\n && [ -z \\\"$DATA\\\" ]\" >> /minizinc/solver \\\n && echo \"then \" >> /minizinc/solver \\\n && echo \" $EXEC --fzn-flags \\\"$FLAGS\\\" $ARGS \" >> /minizinc/solver \\\n && echo \"elif [ -z \\\"$FLAGS\\\" ] \\\n && [ -n \\\"$DATA\\\" ]\" >> /minizinc/solver \\\n && echo \"then \" >> /minizinc/solver \\\n && echo \" $EXEC -D \\\"$DATA\\\" $ARGS \" >> /minizinc/solver \\\n && echo \"else \" >> /minizinc/solver \\\n && echo \" $EXEC --fzn-flags \\\"$FLAGS\\\" -D \\\"$DATA\\\" $ARGS \" >> /minizinc/solver \\\n && echo \"fi \" >> /minizinc/solver \\\n && chmod a+x /minizinc/solver\n# ------------------------------------------------------------------------------#\n#  Adding MiniZinc test files\nRUN echo \"int: a; \" > /minizinc/test.mzn \\\n && echo \"var 1..100: x; \" >> /minizinc/test.mzn \\\n && echo \"constraint a <= x /\\ x < 2*a; \" >> /minizinc/test.mzn \\\n && echo \"solve :: int_search([x], input_order, indomain_min, complete) satisfy; \" >> /minizinc/test.mzn \\\n && echo \"a = 2;\" > /minizinc/2.dzn\n# ------------------------------------------------------------------------------#\n#  Setup of the base image\n#  Get base image from the latest Ubuntu LTS\nFROM ubuntu:16.04\n#  Update Ubuntu and install necessary packages\nRUN apt-get update -y \\\n && apt-get install vim libmpfr4 libglib2.0-0 libx11-6 libpng12-0 libharfbuzz0b libgl1-mesa-glx libpcre16-3 -y\n#  Copy unpacked MiniZinc installation from the build image\nCOPY --from=builder /minizinc /minizinc\n#  Create folder for the solver submission and link solver MiniZinc library\nRUN mkdir /entry_data \\\n && mkdir /entry_data/mzn-lib \\\n && ln -s /entry_data/mzn-lib /minizinc/share/minizinc/exec\n# ------------------------------------------------------------------------------#\n#  Environment Variables\n#  Add FlatZinc solver absolute path\nENV FZNEXEC=\"/entry_data/fzn-exec\"\n#  Add MiniZinc's binary path to PATH\nENV PATH=\"/minizinc:${PATH}\"\n#  Add MiniZinc's library path to LD_LIBRARY_PATH\nENV LD_LIBRARY_PATH=\"/minizinc/lib:${LD_LIBRARY_PATH}\"\n# ------------------------------------------------------------------------------#\n#  Setup Working Directory\nWORKDIR /minizinc\n","injectedSmells":[],"originalDockerfileHash":"238a1c9b39364a8f3ece51ca06730ba8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ------------------------------------------------------------------------------#\n#   This file contains the setup for building a base image for the MiniZinc\n#   challenges. It uses multi-stage builds in order to keep the images small.\n#   Note that the statements ADD, RUN, and COPY can add image layers.\n#  ------------------------------------------------------------------------------#\n#   The build image\n#   Setup Alpine Linux as build image\nFROM alpine:latest AS builder\n#   Retrieve MiniZinc IDE distribution\nADD https://github.com/MiniZinc/MiniZincIDE/releases/download/2.1.7/MiniZincIDE-2.1.7-bundle-linux-x86_64.tgz /minizinc.tgz\n#   Unpack compressed MiniZinc archive and renamed folder\nRUN tar -zxf /minizinc.tgz \\\n && mv /MiniZincIDE-2.1.7-bundle-linux-x86_64 /minizinc\n#  ------------------------------------------------------------------------------#\n#   Script for executing a FlatZinc or MiniZinc solver in the FD class\nRUN echo \"#!/bin/bash \" > /minizinc/mzn-exec-fd \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-fd \\\n && echo \"# Script for running solver in the class 'FD search' \" >> /minizinc/mzn-exec-fd \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-fd \\\n && echo \"# FlatZinc Solver \" >> /minizinc/mzn-exec-fd \\\n && echo \"# (comment following line for MiniZinc solver) \" >> /minizinc/mzn-exec-fd \\\n && echo \"minizinc -k -f \\\"$FZNEXEC\\\" -G exec \\\"$@\\\" \" >> /minizinc/mzn-exec-fd \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-fd \\\n && echo \"# MiniZinc Solver \" >> /minizinc/mzn-exec-fd \\\n && echo \"# (add call to your solver here, e.g.) \" >> /minizinc/mzn-exec-fd \\\n && echo \"# mzn-gecode -G gecode \\\"$@\\\" \" >> /minizinc/mzn-exec-fd \\\n && chmod a+x /minizinc/mzn-exec-fd\n#  ------------------------------------------------------------------------------#\n#   Script for executing a FlatZinc or MiniZinc solver in the FREE class\nRUN echo \"#!/bin/bash \" > /minizinc/mzn-exec-free \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-free \\\n && echo \"# Script for running solver in the class 'FREE search' \" >> /minizinc/mzn-exec-free \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-free \\\n && echo \"# FlatZinc Solver \" >> /minizinc/mzn-exec-free \\\n && echo \"# (comment following line for MiniZinc solver) \" >> /minizinc/mzn-exec-free \\\n && echo \"minizinc -k -f \\\"$FZNEXEC -f\\\" -G exec \\\"$@\\\" \" >> /minizinc/mzn-exec-free \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-free \\\n && echo \"# MiniZinc Solver \" >> /minizinc/mzn-exec-free \\\n && echo \"# (add call to your solver here, e.g.) \" >> /minizinc/mzn-exec-free \\\n && echo \"# mzn-gecode -f -G gecode \\\"$@\\\" \" >> /minizinc/mzn-exec-free \\\n && chmod a+x /minizinc/mzn-exec-free\n#  ------------------------------------------------------------------------------#\n#   Script for executing a FlatZinc or MiniZinc solver in the PAR class\n#   (NOTE that this script will be invoke including the parameter \"-p <n>\".)\nRUN echo \"#!/bin/bash \" > /minizinc/mzn-exec-par \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-par \\\n && echo \"# Script for running solver in the class 'PAR search' \" >> /minizinc/mzn-exec-par \\\n && echo \"# NOTE that the argument \\\"-p <n>\\\" will pass to this script!\" >> /minizinc/mzn-exec-par \\\n && echo \"# Your solver needs to handle this parameter. \" >> /minizinc/mzn-exec-par \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-par \\\n && echo \"# FlatZinc Solver \" >> /minizinc/mzn-exec-par \\\n && echo \"# (comment following line for MiniZinc solver) \" >> /minizinc/mzn-exec-par \\\n && echo \"minizinc -k -f \\\"$FZNEXEC\\\" -G exec \\\"$@\\\" \" >> /minizinc/mzn-exec-par \\\n && echo \"#----------------------------------------------------------#\" >> /minizinc/mzn-exec-par \\\n && echo \"# MiniZinc Solver \" >> /minizinc/mzn-exec-par \\\n && echo \"# (add call to your solver here, e.g.) \" >> /minizinc/mzn-exec-par \\\n && echo \"# mzn-gecode -G gecode \\\"$@\\\" \" >> /minizinc/mzn-exec-par \\\n && chmod a+x /minizinc/mzn-exec-par\n#  ------------------------------------------------------------------------------#\n#   Script for executing a FlatZinc or MiniZinc solver from outside the container\nRUN echo \"#!/bin/bash \" > /minizinc/solver \\\n && echo \"#------------------------------------------#\" >> /minizinc/solver \\\n && echo \"EXEC=mzn-exec-fd \" >> /minizinc/solver \\\n && echo \"while (( \\\"$#\\\" )) \" >> /minizinc/solver \\\n && echo \"do \" >> /minizinc/solver \\\n && echo \" case $1 in \" >> /minizinc/solver \\\n && echo \" -p) \" >> /minizinc/solver \\\n && echo \" EXEC=mzn-exec-par \" >> /minizinc/solver \\\n && echo \" ARGS=\\\"$ARGS $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" --free-search) \" >> /minizinc/solver \\\n && echo \" EXEC=mzn-exec-free \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" --fzn-flag|--fzn-flags) \" >> /minizinc/solver \\\n && echo \" shift \" >> /minizinc/solver \\\n && echo \" FLAGS=\\\"$FLAGS $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" -D|--cmdline-data) \" >> /minizinc/solver \\\n && echo \" shift \" >> /minizinc/solver \\\n && echo \" DATA=\\\"$DATA $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" *) \" >> /minizinc/solver \\\n && echo \" ARGS=\\\"$ARGS $1\\\" \" >> /minizinc/solver \\\n && echo \" ;; \" >> /minizinc/solver \\\n && echo \" esac \" >> /minizinc/solver \\\n && echo \" shift \" >> /minizinc/solver \\\n && echo \"done \" >> /minizinc/solver \\\n && echo \"if [ -z \\\"$FLAGS\\\" ] \\\n && [ -z \\\"$DATA\\\" ] \" >> /minizinc/solver \\\n && echo \"then \" >> /minizinc/solver \\\n && echo \" $EXEC $ARGS \" >> /minizinc/solver \\\n && echo \"elif [ -n \\\"$FLAGS\\\" ] \\\n && [ -z \\\"$DATA\\\" ]\" >> /minizinc/solver \\\n && echo \"then \" >> /minizinc/solver \\\n && echo \" $EXEC --fzn-flags \\\"$FLAGS\\\" $ARGS \" >> /minizinc/solver \\\n && echo \"elif [ -z \\\"$FLAGS\\\" ] \\\n && [ -n \\\"$DATA\\\" ]\" >> /minizinc/solver \\\n && echo \"then \" >> /minizinc/solver \\\n && echo \" $EXEC -D \\\"$DATA\\\" $ARGS \" >> /minizinc/solver \\\n && echo \"else \" >> /minizinc/solver \\\n && echo \" $EXEC --fzn-flags \\\"$FLAGS\\\" -D \\\"$DATA\\\" $ARGS \" >> /minizinc/solver \\\n && echo \"fi \" >> /minizinc/solver \\\n && chmod a+x /minizinc/solver\n#  ------------------------------------------------------------------------------#\n#   Adding MiniZinc test files\nRUN echo \"int: a; \" > /minizinc/test.mzn \\\n && echo \"var 1..100: x; \" >> /minizinc/test.mzn \\\n && echo \"constraint a <= x /\\ x < 2*a; \" >> /minizinc/test.mzn \\\n && echo \"solve :: int_search([x], input_order, indomain_min, complete) satisfy; \" >> /minizinc/test.mzn \\\n && echo \"a = 2;\" > /minizinc/2.dzn\n#  ------------------------------------------------------------------------------#\n#   Setup of the base image\n#   Get base image from the latest Ubuntu LTS\nFROM ubuntu:16.04\n#   Update Ubuntu and install necessary packages\nRUN apt-get update -y \\\n && apt-get install vim libmpfr4 libglib2.0-0 libx11-6 libpng12-0 libharfbuzz0b libgl1-mesa-glx libpcre16-3 -y\n#   Copy unpacked MiniZinc installation from the build image\nCOPY --from=builder /minizinc /minizinc\n#   Create folder for the solver submission and link solver MiniZinc library\nRUN mkdir /entry_data \\\n && mkdir /entry_data/mzn-lib \\\n && ln -s /entry_data/mzn-lib /minizinc/share/minizinc/exec\n#  ------------------------------------------------------------------------------#\n#   Environment Variables\n#   Add FlatZinc solver absolute path\nENV FZNEXEC=\"/entry_data/fzn-exec\"\n#   Add MiniZinc's binary path to PATH\nENV PATH=\"/minizinc:${PATH}\"\n#   Add MiniZinc's library path to LD_LIBRARY_PATH\nENV LD_LIBRARY_PATH=\"/minizinc/lib:${LD_LIBRARY_PATH}\"\n#  ------------------------------------------------------------------------------#\n#   Setup Working Directory\nWORKDIR /minizinc\n","originalDockerfileUglifiedHash":"8265eda039dad50731ba576bd330a62a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/73171b639e4a68f856d545af9ccf4de4ea47001d.dockerfile"}