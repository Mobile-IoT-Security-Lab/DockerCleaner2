{"seed":1553786420,"processedDockerfileHash":"30e9b06db11a1c88cc52d9b44d16b920","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nARG TERM=linux\nARG DEBIAN_FRONTEND=noninteractive\nARG SCIDB_NAME=scidb\nARG SCIDB_LOG_LEVEL=WARN\nARG SHIM_SHA1=fbec1fc3aadcf3134cea0ceabb3fa32321474b23\nENV SCIDB_VER=\"19.3\" \\\n    SCIDB_NAME=\"scidb\"\nENV SCIDB_INSTALL_PATH=\"/opt/scidb/$SCIDB_VER\"\nENV PATH=\"$PATH:$SCIDB_INSTALL_PATH/bin\"\nARG SCIDB_SCRIPT_URL=\"https://downloads.paradigm4.com/community/$SCIDB_VER/install-scidb-ce.sh\"\n#  # Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=1.0.1ubuntu2.24 ca-certificates=20170717~14.04.2 liblog4cxx10-dev=0.10.0-1.2ubuntu3 libprotobuf-dev=2.5.0-9ubuntu1 libssl-dev=1.0.1f-1ubuntu2.27 openssh-client=1:6.6p1-2ubuntu2.13 openssh-server=1:6.6p1-2ubuntu2.13 patch=2.7.1-4ubuntu2.4 psmisc=22.20-1ubuntu2 software-properties-common=0.92.37.8 wget=1.15-1ubuntu1.14.04.5 zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n#  # Get SciDB install script\nRUN wget --no-verbose --output-document /install-scidb-ce.sh $SCIDB_SCRIPT_URL\nRUN chmod +x /install-scidb-ce.sh\n#  # Run SciDB install script\nRUN apt-get update \\\n && yes | /install-scidb-ce.sh \\\n && apt-get install --no-install-recommends make=3.81-8.2ubuntu3 scidb-$SCIDB_VER-dev scidb-$SCIDB_VER-libboost1.54-dev scidb-$SCIDB_VER-libboost-system1.54-dev --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n#  # Setup SSH\nRUN echo 'StrictHostKeyChecking no' >> /etc/ssh/ssh_config \\\n && ssh-keygen -f /root/.ssh/id_rsa -q -N \"\" \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  # Setup SciDB config file\nCOPY config.ini $SCIDB_INSTALL_PATH/etc/\n#  # Setup PostgreSQL and SciDB\nRUN echo \"127.0.0.1:5432:$SCIDB_NAME:$SCIDB_NAME:`date +%s | sha256sum | base64 | head -c 32 `\" > /root/.pgpass \\\n && chmod go-r /root/.pgpass \\\n && chmod a+r $SCIDB_INSTALL_PATH/etc/config.ini \\\n && service ssh start \\\n && service postgresql start \\\n && until pg_isready ; do sleep 1 ; done \\\n && su --command=\" $SCIDB_INSTALL_PATH/bin/scidbctl.py init-syscat $SCIDB_NAME --db-password `cut --delimiter : --fields 5 /root/.pgpass `\" postgres \\\n && $SCIDB_INSTALL_PATH/bin/scidbctl.py init-cluster --force $SCIDB_NAME \\\n && service postgresql stop \\\n && sed --in-place s/log4j.rootLogger=INFO/log4j.rootLogger=$SCIDB_LOG_LEVEL/ $SCIDB_INSTALL_PATH/share/scidb/log4cxx.properties\nRUN wget --no-verbose --output-document - https://github.com/Paradigm4/shim/archive/$SHIM_SHA1.tar.gz | tar --extract --gzip --directory=/usr/local/src \\\n && cd /usr/local/src/shim-$SHIM_SHA1 \\\n && make service \\\n && openssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 -subj \"/C=US/ST=MA/L=Waltham/O=Paradigm4/CN=$( hostname ;)\" -keyout /var/lib/shim/ssl_cert.pem 2> /dev/null >> /var/lib/shim/ssl_cert.pem\n#  # Setup container entrypoint\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#  # Port | App\n#  # -----+-----\n#  # 1239 | SciDB iquery\n#  # 8080 | SciDB Shim (HTTP)\n#  # 8083 | SciDB Shim (HTTPS)\nEXPOSE 1239/tcp 8080/tcp 8083/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nARG TERM=linux\nARG DEBIAN_FRONTEND=noninteractive\nARG SCIDB_NAME=scidb\nARG SCIDB_LOG_LEVEL=WARN\nARG SHIM_SHA1=fbec1fc3aadcf3134cea0ceabb3fa32321474b23\nENV SCIDB_VER=\"19.3\" \\\n    SCIDB_NAME=\"scidb\"\nENV SCIDB_INSTALL_PATH=\"/opt/scidb/$SCIDB_VER\"\nENV PATH=\"$PATH:$SCIDB_INSTALL_PATH/bin\"\nARG SCIDB_SCRIPT_URL=\"https://downloads.paradigm4.com/community/$SCIDB_VER/install-scidb-ce.sh\"\n# # Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates liblog4cxx10-dev libprotobuf-dev libssl-dev openssh-client openssh-server patch psmisc software-properties-common wget zlib1g-dev --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n# # Get SciDB install script\nRUN wget --no-verbose --output-document /install-scidb-ce.sh $SCIDB_SCRIPT_URL\nRUN chmod +x /install-scidb-ce.sh\n# # Run SciDB install script\nRUN apt-get update \\\n && yes | /install-scidb-ce.sh \\\n && apt-get install --no-install-recommends make scidb-$SCIDB_VER-dev scidb-$SCIDB_VER-libboost1.54-dev scidb-$SCIDB_VER-libboost-system1.54-dev --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n# # Setup SSH\nRUN echo 'StrictHostKeyChecking no' >> /etc/ssh/ssh_config \\\n && ssh-keygen -f /root/.ssh/id_rsa -q -N \"\" \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n# # Setup SciDB config file\nCOPY config.ini $SCIDB_INSTALL_PATH/etc/\n# # Setup PostgreSQL and SciDB\nRUN echo \"127.0.0.1:5432:$SCIDB_NAME:$SCIDB_NAME:`date +%s | sha256sum | base64 | head -c 32 `\" > /root/.pgpass \\\n && chmod go-r /root/.pgpass \\\n && chmod a+r $SCIDB_INSTALL_PATH/etc/config.ini \\\n && service ssh start \\\n && service postgresql start \\\n && until pg_isready ; do sleep 1 ; done \\\n && su --command=\" $SCIDB_INSTALL_PATH/bin/scidbctl.py init-syscat $SCIDB_NAME --db-password `cut --delimiter : --fields 5 /root/.pgpass `\" postgres \\\n && $SCIDB_INSTALL_PATH/bin/scidbctl.py init-cluster --force $SCIDB_NAME \\\n && service postgresql stop \\\n && sed --in-place s/log4j.rootLogger=INFO/log4j.rootLogger=$SCIDB_LOG_LEVEL/ $SCIDB_INSTALL_PATH/share/scidb/log4cxx.properties\nRUN wget --no-verbose --output-document - https://github.com/Paradigm4/shim/archive/$SHIM_SHA1.tar.gz | tar --extract --gzip --directory=/usr/local/src \\\n && cd /usr/local/src/shim-$SHIM_SHA1 \\\n && make service \\\n && openssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 -subj \"/C=US/ST=MA/L=Waltham/O=Paradigm4/CN=$( hostname ;)\" -keyout /var/lib/shim/ssl_cert.pem 2> /dev/null >> /var/lib/shim/ssl_cert.pem\n# # Setup container entrypoint\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n# # Port | App\n# # -----+-----\n# # 1239 | SciDB iquery\n# # 8080 | SciDB Shim (HTTP)\n# # 8083 | SciDB Shim (HTTPS)\nEXPOSE 1239/tcp 8080/tcp 8083/tcp\n","injectedSmells":[],"originalDockerfileHash":"0317e1d433dee8fbc6063ff95c9ce634","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nARG TERM=linux\nARG DEBIAN_FRONTEND=noninteractive\nARG SCIDB_NAME=scidb\nARG SCIDB_LOG_LEVEL=WARN\nARG SHIM_SHA1=fbec1fc3aadcf3134cea0ceabb3fa32321474b23\nENV SCIDB_VER=\"19.3\" \\\n    SCIDB_NAME=\"scidb\"\nENV SCIDB_INSTALL_PATH=\"/opt/scidb/$SCIDB_VER\"\nENV PATH=\"$PATH:$SCIDB_INSTALL_PATH/bin\"\nARG SCIDB_SCRIPT_URL=\"https://downloads.paradigm4.com/community/$SCIDB_VER/install-scidb-ce.sh\"\n#  # Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates liblog4cxx10-dev libprotobuf-dev libssl-dev openssh-client openssh-server patch psmisc software-properties-common wget zlib1g-dev --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n#  # Get SciDB install script\nRUN wget --no-verbose --output-document /install-scidb-ce.sh $SCIDB_SCRIPT_URL\nRUN chmod +x /install-scidb-ce.sh\n#  # Run SciDB install script\nRUN apt-get update \\\n && yes | /install-scidb-ce.sh \\\n && apt-get install --no-install-recommends make scidb-$SCIDB_VER-dev scidb-$SCIDB_VER-libboost1.54-dev scidb-$SCIDB_VER-libboost-system1.54-dev --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n#  # Setup SSH\nRUN echo 'StrictHostKeyChecking no' >> /etc/ssh/ssh_config \\\n && ssh-keygen -f /root/.ssh/id_rsa -q -N \"\" \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  # Setup SciDB config file\nCOPY config.ini $SCIDB_INSTALL_PATH/etc/\n#  # Setup PostgreSQL and SciDB\nRUN echo \"127.0.0.1:5432:$SCIDB_NAME:$SCIDB_NAME:`date +%s | sha256sum | base64 | head -c 32 `\" > /root/.pgpass \\\n && chmod go-r /root/.pgpass \\\n && chmod a+r $SCIDB_INSTALL_PATH/etc/config.ini \\\n && service ssh start \\\n && service postgresql start \\\n && until pg_isready ; do sleep 1 ; done \\\n && su --command=\" $SCIDB_INSTALL_PATH/bin/scidbctl.py init-syscat $SCIDB_NAME --db-password `cut --delimiter : --fields 5 /root/.pgpass `\" postgres \\\n && $SCIDB_INSTALL_PATH/bin/scidbctl.py init-cluster --force $SCIDB_NAME \\\n && service postgresql stop \\\n && sed --in-place s/log4j.rootLogger=INFO/log4j.rootLogger=$SCIDB_LOG_LEVEL/ $SCIDB_INSTALL_PATH/share/scidb/log4cxx.properties\nRUN wget --no-verbose --output-document - https://github.com/Paradigm4/shim/archive/$SHIM_SHA1.tar.gz | tar --extract --gzip --directory=/usr/local/src \\\n && cd /usr/local/src/shim-$SHIM_SHA1 \\\n && make service \\\n && openssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 -subj \"/C=US/ST=MA/L=Waltham/O=Paradigm4/CN=$( hostname ;)\" -keyout /var/lib/shim/ssl_cert.pem 2> /dev/null >> /var/lib/shim/ssl_cert.pem\n#  # Setup container entrypoint\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#  # Port | App\n#  # -----+-----\n#  # 1239 | SciDB iquery\n#  # 8080 | SciDB Shim (HTTP)\n#  # 8083 | SciDB Shim (HTTPS)\nEXPOSE 1239/tcp 8080/tcp 8083/tcp\n","originalDockerfileUglifiedHash":"35759f2eb81f560b8d682515060cf9bf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c9aba3be8fdd5c6948009c86fe3af812e8da1b25.dockerfile"}