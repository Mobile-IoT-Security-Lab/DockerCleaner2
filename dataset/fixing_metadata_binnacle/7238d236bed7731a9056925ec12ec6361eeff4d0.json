{"seed":3141876754,"processedDockerfileHash":"aad968fa98fa1dd7a800ce6340dd0464","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.6\nARG RTORRENT_VER=0.9.6\nARG LIBTORRENT_VER=0.13.6\nARG MEDIAINFO_VER=0.7.99\nARG FILEBOT_VER=4.7.9\nARG CHROMAPRINT_VER=1.4.2\nARG LIBZEN_VER=0.4.37\nARG FLOOD_VER=1.0.0\nARG BUILD_CORES\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV UID=\"991\" \\\n    GID=\"991\" \\\n    CONTEXT_PATH=\"/\" \\\n    RTORRENT_SCGI=\"0\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nENV FILEBOT_RENAME_METHOD=\"symlink\" \\\n    FILEBOT_RENAME_MOVIES=\"{n} ({y})\" \\\n    FILEBOT_RENAME_SERIES=\"{n}/Season {s.pad(2)}/{s00e00} - {t}\" \\\n    FILEBOT_RENAME_ANIMES=\"{n}/{e.pad(3)} - {t}\" \\\n    FILEBOT_RENAME_MUSICS=\"{artist}/{album}/{fn}\"\nRUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF `} \\\n && apk -U upgrade \\\n && apk add build-base=0.5-r0 git=2.13.7-r2 libtool=2.4.6-r1 automake=1.15.1-r0 autoconf=2.69-r0 wget=1.20.3-r0 tar=1.32-r0 xz=5.2.3-r0 zlib-dev=1.2.11-r0 cppunit-dev=1.13.2-r1 libressl-dev=2.5.5-r2 ncurses-dev=6.0_p20171125-r1 curl-dev=7.61.1-r2 binutils=2.30-r1 -t build-dependencies \\\n && apk add ca-certificates=20161130-r3 curl=7.61.1-r2 ncurses=6.0_p20171125-r1 libressl=2.5.5-r2 gzip=1.8-r0 zip=3.0-r4 zlib=1.2.11-r0 unrar=5.4.5-r0 s6=2.5.1.0-r0 su-exec=0.2-r0 python nodejs=6.10.3-r2 nodejs-npm=6.10.3-r2 openjdk8-jre=8.212.04-r0 java-jna-native=4.3.0-r0 \\\n && cd /tmp \\\n && mkdir libtorrent rtorrent \\\n && cd libtorrent \\\n && wget -qO- https://github.com/rakshasa/libtorrent/archive/${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && cd ../rtorrent \\\n && wget -qO- https://github.com/rakshasa/rtorrent/archive/${RTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && cd /tmp \\\n && git clone https://github.com/mirror/xmlrpc-c.git \\\n && git clone https://github.com/Rudde/mktorrent.git \\\n && git clone https://github.com/acoustid/chromaprint.git \\\n && cd /tmp/mktorrent \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/xmlrpc-c/stable \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/libtorrent \\\n && ./autogen.sh \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/rtorrent \\\n && ./autogen.sh \\\n && ./configure --with-xmlrpc-c \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp \\\n && wget -q http://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget -q http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget -q https://github.com/MediaArea/ZenLib/archive/v${LIBZEN_VER}.tar.gz -O libzen.tar.gz \\\n && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf libzen.tar.gz \\\n && cd /tmp/ZenLib-${LIBZEN_VER}/Project/GNU/Library \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr --enable-shared --disable-static \\\n && make \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource \\\n && ./SO_Compile.sh \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource \\\n && ./CLI_Compile.sh \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource/MediaInfo/Project/GNU/CLI \\\n && make install \\\n && strip -s /usr/local/bin/rtorrent \\\n && strip -s /usr/local/bin/mktorrent \\\n && strip -s /usr/local/bin/mediainfo \\\n && mkdir /filebot \\\n && cd /filebot \\\n && wget https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VER}/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && tar xvf chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && mv chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64/fpcalc /usr/local/bin \\\n && strip -s /usr/local/bin/fpcalc \\\n && wget -q https://netcologne.dl.sourceforge.net/project/filebot/filebot/FileBot_${FILEBOT_VER}/FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && tar xJf FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && rm FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && mkdir /usr/flood \\\n && cd /usr/flood \\\n && wget -qO- https://github.com/jfurrow/flood/archive/v${FLOOD_VER}.tar.gz | tar xz --strip 1 \\\n && npm install --production \\\n && ln -sf /usr/local/lib/libmediainfo.so.0.0.0 /filebot/lib/x86_64/libmediainfo.so \\\n && ln -sf /usr/local/lib/libzen.la /filebot/lib/x86_64/libzen.so \\\n && ln -sf /usr/local/bin/mediainfo /usr/bin/mediainfo \\\n && apk del build-dependencies \\\n && rm -rf /var/cache/apk/* /tmp/*\nCOPY config.js /usr/flood/\nCOPY s6.d /etc/s6.d\nCOPY run.sh /usr/bin/\nCOPY postdl /usr/bin/\nCOPY postrm /usr/bin/\nCOPY config.js /usr/flood/\nCOPY rtorrent.rc /home/torrent/.rtorrent.rc\nRUN chmod +x /usr/bin/* /etc/s6.d/*/* /etc/s6.d/.s6-svscan/*\nVOLUME /data /flood-db\nEXPOSE 3000/tcp 49184/tcp 49184/udp\nLABEL description=\"BitTorrent client with WebUI front-end\" \\\n      rtorrent=\"rTorrent BiTorrent client v$RTORRENT_VER\" \\\n      libtorrent=\"libtorrent v$LIBTORRENT_VER\" \\\n      filebot=\"Filebot v$FILEBOT_VER\" \\\n      maintainer=\"Wonderfall <wonderfall@targaryen.house>\"\nCMD [\"run.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.6\nARG RTORRENT_VER=0.9.6\nARG LIBTORRENT_VER=0.13.6\nARG MEDIAINFO_VER=0.7.99\nARG FILEBOT_VER=4.7.9\nARG CHROMAPRINT_VER=1.4.2\nARG LIBZEN_VER=0.4.37\nARG FLOOD_VER=1.0.0\nARG BUILD_CORES\nENV UID=\"991\" \\\n    GID=\"991\" \\\n    FLOOD_SECRET=\"supersecret\" \\\n    CONTEXT_PATH=\"/\" \\\n    RTORRENT_SCGI=\"0\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nENV FILEBOT_RENAME_METHOD=\"symlink\" \\\n    FILEBOT_RENAME_MOVIES=\"{n} ({y})\" \\\n    FILEBOT_RENAME_SERIES=\"{n}/Season {s.pad(2)}/{s00e00} - {t}\" \\\n    FILEBOT_RENAME_ANIMES=\"{n}/{e.pad(3)} - {t}\" \\\n    FILEBOT_RENAME_MUSICS=\"{artist}/{album}/{fn}\"\nRUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF `} \\\n && apk -U upgrade \\\n && apk add -t build-dependencies build-base git libtool automake autoconf wget tar xz zlib-dev cppunit-dev libressl-dev ncurses-dev curl-dev binutils \\\n && apk add ca-certificates curl ncurses libressl gzip zip zlib unrar s6 su-exec python nodejs nodejs-npm openjdk8-jre java-jna-native \\\n && cd /tmp \\\n && mkdir libtorrent rtorrent \\\n && cd libtorrent \\\n && wget -qO- https://github.com/rakshasa/libtorrent/archive/${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && cd ../rtorrent \\\n && wget -qO- https://github.com/rakshasa/rtorrent/archive/${RTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && cd /tmp \\\n && git clone https://github.com/mirror/xmlrpc-c.git \\\n && git clone https://github.com/Rudde/mktorrent.git \\\n && git clone https://github.com/acoustid/chromaprint.git \\\n && cd /tmp/mktorrent \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/xmlrpc-c/stable \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/libtorrent \\\n && ./autogen.sh \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/rtorrent \\\n && ./autogen.sh \\\n && ./configure --with-xmlrpc-c \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp \\\n && wget -q http://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget -q http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget -q https://github.com/MediaArea/ZenLib/archive/v${LIBZEN_VER}.tar.gz -O libzen.tar.gz \\\n && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf libzen.tar.gz \\\n && cd /tmp/ZenLib-${LIBZEN_VER}/Project/GNU/Library \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr --enable-shared --disable-static \\\n && make \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource \\\n && ./SO_Compile.sh \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource \\\n && ./CLI_Compile.sh \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource/MediaInfo/Project/GNU/CLI \\\n && make install \\\n && strip -s /usr/local/bin/rtorrent \\\n && strip -s /usr/local/bin/mktorrent \\\n && strip -s /usr/local/bin/mediainfo \\\n && mkdir /filebot \\\n && cd /filebot \\\n && wget https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VER}/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && tar xvf chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && mv chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64/fpcalc /usr/local/bin \\\n && strip -s /usr/local/bin/fpcalc \\\n && wget -q https://netcologne.dl.sourceforge.net/project/filebot/filebot/FileBot_${FILEBOT_VER}/FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && tar xJf FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && rm FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && mkdir /usr/flood \\\n && cd /usr/flood \\\n && wget -qO- https://github.com/jfurrow/flood/archive/v${FLOOD_VER}.tar.gz | tar xz --strip 1 \\\n && npm install --production \\\n && ln -sf /usr/local/lib/libmediainfo.so.0.0.0 /filebot/lib/x86_64/libmediainfo.so \\\n && ln -sf /usr/local/lib/libzen.la /filebot/lib/x86_64/libzen.so \\\n && ln -sf /usr/local/bin/mediainfo /usr/bin/mediainfo \\\n && apk del build-dependencies \\\n && rm -rf /var/cache/apk/* /tmp/*\nCOPY config.js /usr/flood/\nCOPY s6.d /etc/s6.d\nCOPY run.sh /usr/bin/\nCOPY postdl /usr/bin/\nCOPY postrm /usr/bin/\nCOPY config.js /usr/flood/\nCOPY rtorrent.rc /home/torrent/.rtorrent.rc\nRUN chmod +x /usr/bin/* /etc/s6.d/*/* /etc/s6.d/.s6-svscan/*\nVOLUME /data /flood-db\nEXPOSE 3000/tcp 49184/tcp 49184/udp\nLABEL description=\"BitTorrent client with WebUI front-end\" \\\n      rtorrent=\"rTorrent BiTorrent client v$RTORRENT_VER\" \\\n      libtorrent=\"libtorrent v$LIBTORRENT_VER\" \\\n      filebot=\"Filebot v$FILEBOT_VER\" \\\n      maintainer=\"Wonderfall <wonderfall@targaryen.house>\"\nCMD [\"run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"3eed30dfa5903cb90d234f8bbb453c12","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.6\nARG RTORRENT_VER=0.9.6\nARG LIBTORRENT_VER=0.13.6\nARG MEDIAINFO_VER=0.7.99\nARG FILEBOT_VER=4.7.9\nARG CHROMAPRINT_VER=1.4.2\nARG LIBZEN_VER=0.4.37\nARG FLOOD_VER=1.0.0\nARG BUILD_CORES\nENV UID=\"991\" \\\n    GID=\"991\" \\\n    FLOOD_SECRET=\"supersecret\" \\\n    CONTEXT_PATH=\"/\" \\\n    RTORRENT_SCGI=\"0\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nENV FILEBOT_RENAME_METHOD=\"symlink\" \\\n    FILEBOT_RENAME_MOVIES=\"{n} ({y})\" \\\n    FILEBOT_RENAME_SERIES=\"{n}/Season {s.pad(2)}/{s00e00} - {t}\" \\\n    FILEBOT_RENAME_ANIMES=\"{n}/{e.pad(3)} - {t}\" \\\n    FILEBOT_RENAME_MUSICS=\"{artist}/{album}/{fn}\"\nRUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF `} \\\n && apk -U upgrade \\\n && apk add -t build-dependencies build-base git libtool automake autoconf wget tar xz zlib-dev cppunit-dev libressl-dev ncurses-dev curl-dev binutils \\\n && apk add ca-certificates curl ncurses libressl gzip zip zlib unrar s6 su-exec python nodejs nodejs-npm openjdk8-jre java-jna-native \\\n && cd /tmp \\\n && mkdir libtorrent rtorrent \\\n && cd libtorrent \\\n && wget -qO- https://github.com/rakshasa/libtorrent/archive/${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && cd ../rtorrent \\\n && wget -qO- https://github.com/rakshasa/rtorrent/archive/${RTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && cd /tmp \\\n && git clone https://github.com/mirror/xmlrpc-c.git \\\n && git clone https://github.com/Rudde/mktorrent.git \\\n && git clone https://github.com/acoustid/chromaprint.git \\\n && cd /tmp/mktorrent \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/xmlrpc-c/stable \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/libtorrent \\\n && ./autogen.sh \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/rtorrent \\\n && ./autogen.sh \\\n && ./configure --with-xmlrpc-c \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp \\\n && wget -q http://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget -q http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget -q https://github.com/MediaArea/ZenLib/archive/v${LIBZEN_VER}.tar.gz -O libzen.tar.gz \\\n && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf libzen.tar.gz \\\n && cd /tmp/ZenLib-${LIBZEN_VER}/Project/GNU/Library \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr --enable-shared --disable-static \\\n && make \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource \\\n && ./SO_Compile.sh \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource \\\n && ./CLI_Compile.sh \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource/MediaInfo/Project/GNU/CLI \\\n && make install \\\n && strip -s /usr/local/bin/rtorrent \\\n && strip -s /usr/local/bin/mktorrent \\\n && strip -s /usr/local/bin/mediainfo \\\n && mkdir /filebot \\\n && cd /filebot \\\n && wget https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VER}/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && tar xvf chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && mv chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64/fpcalc /usr/local/bin \\\n && strip -s /usr/local/bin/fpcalc \\\n && wget -q https://netcologne.dl.sourceforge.net/project/filebot/filebot/FileBot_${FILEBOT_VER}/FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && tar xJf FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && rm FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && mkdir /usr/flood \\\n && cd /usr/flood \\\n && wget -qO- https://github.com/jfurrow/flood/archive/v${FLOOD_VER}.tar.gz | tar xz --strip 1 \\\n && npm install --production \\\n && ln -sf /usr/local/lib/libmediainfo.so.0.0.0 /filebot/lib/x86_64/libmediainfo.so \\\n && ln -sf /usr/local/lib/libzen.la /filebot/lib/x86_64/libzen.so \\\n && ln -sf /usr/local/bin/mediainfo /usr/bin/mediainfo \\\n && apk del build-dependencies \\\n && rm -rf /var/cache/apk/* /tmp/*\nCOPY config.js /usr/flood/\nCOPY s6.d /etc/s6.d\nCOPY run.sh /usr/bin/\nCOPY postdl /usr/bin/\nCOPY postrm /usr/bin/\nCOPY config.js /usr/flood/\nCOPY rtorrent.rc /home/torrent/.rtorrent.rc\nRUN chmod +x /usr/bin/* /etc/s6.d/*/* /etc/s6.d/.s6-svscan/*\nVOLUME /data /flood-db\nEXPOSE 3000/tcp 49184/tcp 49184/udp\nLABEL description=\"BitTorrent client with WebUI front-end\" \\\n      rtorrent=\"rTorrent BiTorrent client v$RTORRENT_VER\" \\\n      libtorrent=\"libtorrent v$LIBTORRENT_VER\" \\\n      filebot=\"Filebot v$FILEBOT_VER\" \\\n      maintainer=\"Wonderfall <wonderfall@targaryen.house>\"\nCMD [\"run.sh\"]\n","originalDockerfileUglifiedHash":"3eed30dfa5903cb90d234f8bbb453c12","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7238d236bed7731a9056925ec12ec6361eeff4d0.dockerfile"}