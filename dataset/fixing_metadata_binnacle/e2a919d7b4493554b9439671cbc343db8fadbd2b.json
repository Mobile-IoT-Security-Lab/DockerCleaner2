{"seed":1761232061,"processedDockerfileHash":"397ebfa3a401c369ff5b85d9d5869758","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  upstream https://github.com/docker-library/tomcat/tree/master/8.5/jre8\nFROM debian:stretch\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils curl dialog vim-tiny locales openssl \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\n#   Add Oracle Java PPA\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.2-1+deb9u1 apt-transport-https=1.4.11 gnupg2=2.1.18-8~deb9u4 ca-certificates=20200601~deb9u2 -y ) \\\n && echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main' > etc/apt/sources.list.d/webupd8team-ubuntu-java-xenial.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 \\\n && apt-get update -y \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && (apt-get update ;apt-get install --no-install-recommends libpq-dev=9.6.24-0+deb9u1 oracle-java8-installer -y ) \\\n && rm -f /var/cache/oracle-jdk8-installer/jdk-*.tar.g\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#   let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\n#   runtime dependencies for Tomcat Native Libraries\n#   Tomcat Native 1.2+ requires a newer version of OpenSSL than debian:jessie has available\n#   > checking OpenSSL library version >= 1.0.2...\n#   > configure: error: Your version of OpenSSL is not compatible with this version of tcnative\n#   see http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5046024.html (and following discussion)\n#   and https://github.com/docker-library/tomcat/pull/31\nENV OPENSSL_VERSION=\"1.1.0f-3+deb9u2\"\nRUN set -ex ; currentVersion=\"$( dpkg-query --show --showformat '${Version}\\n' openssl ;)\" ; if dpkg --compare-versions \"$currentVersion\" '<<' \"$OPENSSL_VERSION\" ; then if ! grep -q stretch /etc/apt/sources.list ; then { echo 'deb http://deb.debian.org/debian stretch main' ;echo 'deb http://security.debian.org stretch/updates main' ;echo 'deb http://deb.debian.org/debian stretch-updates main' ; } > /etc/apt/sources.list.d/stretch.list;{ echo 'Package: *' ;echo 'Pin: release n=stretch*' ;echo 'Pin-Priority: -10' ;echo ;echo 'Package: openssl libssl*' ;echo \"Pin: version $OPENSSL_VERSION\" ;echo 'Pin-Priority: 990' ; } > /etc/apt/preferences.d/stretch-openssl; fi ;apt-get update ;(apt-get update ;apt-get install --no-install-recommends openssl=\"$OPENSSL_VERSION\" -y ) ;rm -rf /var/lib/apt/lists/* ; fi\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends libapr1=1.5.2-5+deb9u1 -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#   see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nENV TOMCAT_MAJOR=\"8\"\nENV TOMCAT_VERSION=\"8.5.30\"\nENV TOMCAT_SHA512=\"f7e84fed604dc183dc1bdad07f3b025547d95d024ccfb05da68f5f45256f3082af6ba28c7f0148ae4ee43637248a0074c92bb12198ab58331d0c4f04906b86b6\"\nENV TOMCAT_TGZ_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; (apt-get update ;apt-get install --no-install-recommends gnupg=2.1.18-8~deb9u4 dirmngr=2.1.18-8~deb9u4 -y ) ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; (apt-get update ;apt-get install --no-install-recommends wget=1.18-5+deb9u3 ca-certificates=20200601~deb9u2 -y ) ; success= ; for url in $TOMCAT_TGZ_URLS; do if wget -O tomcat.tar.gz \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; echo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c - ; success= ; for url in $TOMCAT_ASC_URLS; do if wget -O tomcat.tar.gz.asc \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz ; tar -xvf tomcat.tar.gz --strip-components=1 ; rm bin/*.bat ; rm tomcat.tar.gz* ; rm -rf \"$GNUPGHOME\" ; nativeBuildDir=\"$( mktemp -d ;)\" ; tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 ; (apt-get update ;apt-get install --no-install-recommends dpkg-dev=1.18.26 gcc=4:6.3.0-4 libapr1-dev=1.5.2-5+deb9u1 libssl-dev=1.1.0l-1~deb9u6 make=4.1-9.1 -y ) ; (export CATALINA_HOME=\"$PWD\" ;cd \"$nativeBuildDir/native\" ;gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ;./configure --build=\"$gnuArch\" --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$JAVA_HOME\" --with-ssl=yes ;make -j \"$( nproc ;)\" ;make install ) ; rm -rf \"$nativeBuildDir\" ; rm bin/tomcat-native.tar.gz ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; rm -rf /var/lib/apt/lists/* ; find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +\n#   verify Tomcat Native is working properly\nRUN set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\nEXPOSE 8080/tcp\nCMD [\"catalina.sh\", \"run\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/docker-library/tomcat/tree/master/8.5/jre8\nFROM debian:stretch\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n#  Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils curl dialog vim-tiny locales openssl \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  Install required packages\nRUN apt-get dist-upgrade -y\n#  Add Oracle Java PPA\nRUN apt-get update -y \\\n && apt-get install software-properties-common apt-transport-https gnupg2 ca-certificates -y \\\n && echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main' > etc/apt/sources.list.d/webupd8team-ubuntu-java-xenial.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 \\\n && apt-get update -y \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && apt-get install libpq-dev oracle-java8-installer -y \\\n && rm -f /var/cache/oracle-jdk8-installer/jdk-*.tar.g\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#  let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\n#  runtime dependencies for Tomcat Native Libraries\n#  Tomcat Native 1.2+ requires a newer version of OpenSSL than debian:jessie has available\n#  > checking OpenSSL library version >= 1.0.2...\n#  > configure: error: Your version of OpenSSL is not compatible with this version of tcnative\n#  see http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5046024.html (and following discussion)\n#  and https://github.com/docker-library/tomcat/pull/31\nENV OPENSSL_VERSION=\"1.1.0f-3+deb9u2\"\nRUN set -ex ; currentVersion=\"$( dpkg-query --show --showformat '${Version}\\n' openssl ;)\" ; if dpkg --compare-versions \"$currentVersion\" '<<' \"$OPENSSL_VERSION\" ; then if ! grep -q stretch /etc/apt/sources.list ; then { echo 'deb http://deb.debian.org/debian stretch main' ;echo 'deb http://security.debian.org stretch/updates main' ;echo 'deb http://deb.debian.org/debian stretch-updates main' ; } > /etc/apt/sources.list.d/stretch.list;{ echo 'Package: *' ;echo 'Pin: release n=stretch*' ;echo 'Pin-Priority: -10' ;echo ;echo 'Package: openssl libssl*' ;echo \"Pin: version $OPENSSL_VERSION\" ;echo 'Pin-Priority: 990' ; } > /etc/apt/preferences.d/stretch-openssl; fi ;apt-get update ;apt-get install --no-install-recommends openssl=\"$OPENSSL_VERSION\" -y ;rm -rf /var/lib/apt/lists/* ; fi\nRUN apt-get update \\\n && apt-get install --no-install-recommends libapr1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#  see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nENV TOMCAT_MAJOR=\"8\"\nENV TOMCAT_VERSION=\"8.5.30\"\nENV TOMCAT_SHA512=\"f7e84fed604dc183dc1bdad07f3b025547d95d024ccfb05da68f5f45256f3082af6ba28c7f0148ae4ee43637248a0074c92bb12198ab58331d0c4f04906b86b6\"\nENV TOMCAT_TGZ_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends gnupg dirmngr -y ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; apt-get install --no-install-recommends wget ca-certificates -y ; success= ; for url in $TOMCAT_TGZ_URLS; do if wget -O tomcat.tar.gz \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; echo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c - ; success= ; for url in $TOMCAT_ASC_URLS; do if wget -O tomcat.tar.gz.asc \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz ; tar -xvf tomcat.tar.gz --strip-components=1 ; rm bin/*.bat ; rm tomcat.tar.gz* ; rm -rf \"$GNUPGHOME\" ; nativeBuildDir=\"$( mktemp -d ;)\" ; tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 ; apt-get install --no-install-recommends dpkg-dev gcc libapr1-dev libssl-dev make -y ; (export CATALINA_HOME=\"$PWD\" ;cd \"$nativeBuildDir/native\" ;gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ;./configure --build=\"$gnuArch\" --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$JAVA_HOME\" --with-ssl=yes ;make -j \"$( nproc ;)\" ;make install ) ; rm -rf \"$nativeBuildDir\" ; rm bin/tomcat-native.tar.gz ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; rm -rf /var/lib/apt/lists/* ; find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +\n#  verify Tomcat Native is working properly\nRUN set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\nEXPOSE 8080/tcp\nCMD [\"catalina.sh\", \"run\"]\n","injectedSmells":[],"originalDockerfileHash":"763adfa284041e84b8ae8bef68fa44bd","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/docker-library/tomcat/tree/master/8.5/jre8\nFROM debian:stretch\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils curl dialog vim-tiny locales openssl \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\n#   Add Oracle Java PPA\nRUN apt-get update -y \\\n && apt-get install software-properties-common apt-transport-https gnupg2 ca-certificates -y \\\n && echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main' > etc/apt/sources.list.d/webupd8team-ubuntu-java-xenial.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 \\\n && apt-get update -y \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && apt-get install libpq-dev oracle-java8-installer -y \\\n && rm -f /var/cache/oracle-jdk8-installer/jdk-*.tar.g\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#   let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\n#   runtime dependencies for Tomcat Native Libraries\n#   Tomcat Native 1.2+ requires a newer version of OpenSSL than debian:jessie has available\n#   > checking OpenSSL library version >= 1.0.2...\n#   > configure: error: Your version of OpenSSL is not compatible with this version of tcnative\n#   see http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5046024.html (and following discussion)\n#   and https://github.com/docker-library/tomcat/pull/31\nENV OPENSSL_VERSION=\"1.1.0f-3+deb9u2\"\nRUN set -ex ; currentVersion=\"$( dpkg-query --show --showformat '${Version}\\n' openssl ;)\" ; if dpkg --compare-versions \"$currentVersion\" '<<' \"$OPENSSL_VERSION\" ; then if ! grep -q stretch /etc/apt/sources.list ; then { echo 'deb http://deb.debian.org/debian stretch main' ;echo 'deb http://security.debian.org stretch/updates main' ;echo 'deb http://deb.debian.org/debian stretch-updates main' ; } > /etc/apt/sources.list.d/stretch.list;{ echo 'Package: *' ;echo 'Pin: release n=stretch*' ;echo 'Pin-Priority: -10' ;echo ;echo 'Package: openssl libssl*' ;echo \"Pin: version $OPENSSL_VERSION\" ;echo 'Pin-Priority: 990' ; } > /etc/apt/preferences.d/stretch-openssl; fi ;apt-get update ;apt-get install --no-install-recommends openssl=\"$OPENSSL_VERSION\" -y ;rm -rf /var/lib/apt/lists/* ; fi\nRUN apt-get update \\\n && apt-get install --no-install-recommends libapr1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#   see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nENV TOMCAT_MAJOR=\"8\"\nENV TOMCAT_VERSION=\"8.5.30\"\nENV TOMCAT_SHA512=\"f7e84fed604dc183dc1bdad07f3b025547d95d024ccfb05da68f5f45256f3082af6ba28c7f0148ae4ee43637248a0074c92bb12198ab58331d0c4f04906b86b6\"\nENV TOMCAT_TGZ_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends gnupg dirmngr -y ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; apt-get install --no-install-recommends wget ca-certificates -y ; success= ; for url in $TOMCAT_TGZ_URLS; do if wget -O tomcat.tar.gz \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; echo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c - ; success= ; for url in $TOMCAT_ASC_URLS; do if wget -O tomcat.tar.gz.asc \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz ; tar -xvf tomcat.tar.gz --strip-components=1 ; rm bin/*.bat ; rm tomcat.tar.gz* ; rm -rf \"$GNUPGHOME\" ; nativeBuildDir=\"$( mktemp -d ;)\" ; tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 ; apt-get install --no-install-recommends dpkg-dev gcc libapr1-dev libssl-dev make -y ; (export CATALINA_HOME=\"$PWD\" ;cd \"$nativeBuildDir/native\" ;gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ;./configure --build=\"$gnuArch\" --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$JAVA_HOME\" --with-ssl=yes ;make -j \"$( nproc ;)\" ;make install ) ; rm -rf \"$nativeBuildDir\" ; rm bin/tomcat-native.tar.gz ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; rm -rf /var/lib/apt/lists/* ; find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +\n#   verify Tomcat Native is working properly\nRUN set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\nEXPOSE 8080/tcp\nCMD [\"catalina.sh\", \"run\"]\n","originalDockerfileUglifiedHash":"710c7d091e8beadd16294939b6893c62","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e2a919d7b4493554b9439671cbc343db8fadbd2b.dockerfile"}