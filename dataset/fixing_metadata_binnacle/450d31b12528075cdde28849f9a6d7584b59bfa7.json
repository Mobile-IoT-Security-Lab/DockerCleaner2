{"seed":2038039279,"processedDockerfileHash":"bd6b9b8c30959f92ba759bf558314744","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER Alex Gude\nRUN apt-get install --no-install-recommends module-init-tools=15-0ubuntu7 -y\n#   Mount the installer to Docker\nENV NVIDIA_DRIVER_VERSION=\"352.68\"\nLABEL com.nvidia.driver.version=\"352.68\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nRUN cd /tmp/ \\\n && wget http://us.download.nvidia.com/XFree86/Linux-x86_64/${NVIDIA_DRIVER_VERSION}/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run \\\n && chmod a+x ./NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run \\\n && ./NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run -s -N --no-kernel-module \\\n && rm ./NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run\n#   Install CUDA\n#   We do not include the patch version number in CUDA_VERSION because it is used\n#   to link to the CUDA directory, which excludes the patch\nENV CUDA_VERSION=\"7.5\"\nENV CUDA_PKG_VERSION=\"7-5=7.5-18\"\nLABEL com.nvidia.cuda.version=\"7.5-18\"\nENV NVIDIA_GPGKEY_SUM=\"bd841d59a27a406e513db7d405550894188a4c1cd96bf8aa4f82f1b39e0b5c1c\"\nENV NVIDIA_GPGKEY_FPR=\"889bee522da690103c4b085ed88c3d385c37d3be\"\nRUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/GPGKEY \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub \\\n && echo \"$NVIDIA_GPGKEY_SUM cudasign.pub\" | sha256sum -c --strict - \\\n && rm cudasign.pub \\\n && echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-nvrtc-$CUDA_PKG_VERSION cuda-cusolver-$CUDA_PKG_VERSION cuda-cublas-$CUDA_PKG_VERSION cuda-cufft-$CUDA_PKG_VERSION cuda-curand-$CUDA_PKG_VERSION cuda-cusparse-$CUDA_PKG_VERSION cuda-npp-$CUDA_PKG_VERSION cuda-cudart-$CUDA_PKG_VERSION -y --force-yes \\\n && ln -s cuda-$CUDA_VERSION /usr/local/cuda \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf \\\n && echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf \\\n && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-core-$CUDA_PKG_VERSION cuda-misc-headers-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION cuda-license-$CUDA_PKG_VERSION cuda-nvrtc-dev-$CUDA_PKG_VERSION cuda-cusolver-dev-$CUDA_PKG_VERSION cuda-cublas-dev-$CUDA_PKG_VERSION cuda-cufft-dev-$CUDA_PKG_VERSION cuda-curand-dev-$CUDA_PKG_VERSION cuda-cusparse-dev-$CUDA_PKG_VERSION cuda-npp-dev-$CUDA_PKG_VERSION cuda-cudart-dev-$CUDA_PKG_VERSION cuda-driver-dev-$CUDA_PKG_VERSION -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\n#   Install cuDNN\nENV CUDNN_VERSION=\"4\"\nLABEL com.nvidia.cudnn.version=\"4\"\nENV CUDNN_PKG_VERSION=\"4.0.7\"\nRUN echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn4=$CUDNN_PKG_VERSION libcudnn4-dev=$CUDNN_PKG_VERSION -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nENV LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}\"\n#   Install Anaconda\n#   From: https://github.com/ContinuumIO/docker-images/tree/master/anaconda\n#\n#   Except where noted below, docker-anaconda is released under the following terms:\n#\n#   (c) 2012 Continuum Analytics, Inc. / http://continuum.io\n#   All Rights Reserved\n#\n#   Redistribution and use in source and binary forms, with or without\n#   modification, are permitted provided that the following conditions are met:\n#       * Redistributions of source code must retain the above copyright\n#         notice, this list of conditions and the following disclaimer.\n#       * Redistributions in binary form must reproduce the above copyright\n#         notice, this list of conditions and the following disclaimer in the\n#         documentation and/or other materials provided with the distribution.\n#       * Neither the name of Continuum Analytics, Inc. nor the\n#         names of its contributors may be used to endorse or promote products\n#         derived from this software without specific prior written permission.\n#\n#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n#   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n#   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n#   DISCLAIMED. IN NO EVENT SHALL CONTINUUM ANALYTICS BE LIABLE FOR ANY\n#   DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n#   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n#   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n#   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nRUN apt-get update --fix-missing \\\n && apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 bzip2=1.0.6-5 ca-certificates=20170717~14.04.2 libglib2.0-0=2.40.2-0ubuntu1.1 libxext6=2:1.3.2-1ubuntu0.0.14.04.1 libsm6=2:1.2.1-2 libxrender1=1:0.9.8-1build0.14.04.1 git=1:1.9.1-1ubuntu0.10 mercurial=2.8.2-1ubuntu1.4 subversion=1.8.8-1ubuntu3.3 -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda2-4.0.0-Linux-x86_64.sh \\\n && /bin/bash /Anaconda2-4.0.0-Linux-x86_64.sh -b -p /opt/conda \\\n && rm /Anaconda2-4.0.0-Linux-x86_64.sh\nRUN apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 grep=2.16-1 sed=4.2.2-4ubuntu1 dpkg=1.17.5ubuntu5.8 -y \\\n && TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\\\"\" | sed 's:^..\\\\(.*\\\\).$:\\\\1:' ` \\\n && curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb \\\n && dpkg -i tini.deb \\\n && rm tini.deb \\\n && apt-get clean\nENV PATH=\"/opt/conda/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   Set up build tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=11.6ubuntu6 -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER Alex Gude\nRUN apt-get install module-init-tools -y\n#  Mount the installer to Docker\nENV NVIDIA_DRIVER_VERSION=\"352.68\"\nLABEL com.nvidia.driver.version=\"352.68\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nRUN cd /tmp/ \\\n && wget http://us.download.nvidia.com/XFree86/Linux-x86_64/${NVIDIA_DRIVER_VERSION}/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run \\\n && chmod a+x ./NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run \\\n && ./NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run -s -N --no-kernel-module \\\n && rm ./NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run\n#  Install CUDA\n#  We do not include the patch version number in CUDA_VERSION because it is used\n#  to link to the CUDA directory, which excludes the patch\nENV CUDA_VERSION=\"7.5\"\nENV CUDA_PKG_VERSION=\"7-5=7.5-18\"\nLABEL com.nvidia.cuda.version=\"7.5-18\"\nENV NVIDIA_GPGKEY_SUM=\"bd841d59a27a406e513db7d405550894188a4c1cd96bf8aa4f82f1b39e0b5c1c\"\nENV NVIDIA_GPGKEY_FPR=\"889bee522da690103c4b085ed88c3d385c37d3be\"\nRUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/GPGKEY \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub \\\n && echo \"$NVIDIA_GPGKEY_SUM cudasign.pub\" | sha256sum -c --strict - \\\n && rm cudasign.pub \\\n && echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-nvrtc-$CUDA_PKG_VERSION cuda-cusolver-$CUDA_PKG_VERSION cuda-cublas-$CUDA_PKG_VERSION cuda-cufft-$CUDA_PKG_VERSION cuda-curand-$CUDA_PKG_VERSION cuda-cusparse-$CUDA_PKG_VERSION cuda-npp-$CUDA_PKG_VERSION cuda-cudart-$CUDA_PKG_VERSION -y --force-yes \\\n && ln -s cuda-$CUDA_VERSION /usr/local/cuda \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf \\\n && echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf \\\n && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-core-$CUDA_PKG_VERSION cuda-misc-headers-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION cuda-license-$CUDA_PKG_VERSION cuda-nvrtc-dev-$CUDA_PKG_VERSION cuda-cusolver-dev-$CUDA_PKG_VERSION cuda-cublas-dev-$CUDA_PKG_VERSION cuda-cufft-dev-$CUDA_PKG_VERSION cuda-curand-dev-$CUDA_PKG_VERSION cuda-cusparse-dev-$CUDA_PKG_VERSION cuda-npp-dev-$CUDA_PKG_VERSION cuda-cudart-dev-$CUDA_PKG_VERSION cuda-driver-dev-$CUDA_PKG_VERSION -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\n#  Install cuDNN\nENV CUDNN_VERSION=\"4\"\nLABEL com.nvidia.cudnn.version=\"4\"\nENV CUDNN_PKG_VERSION=\"4.0.7\"\nRUN echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn4=$CUDNN_PKG_VERSION libcudnn4-dev=$CUDNN_PKG_VERSION -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nENV LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}\"\n#  Install Anaconda\n#  From: https://github.com/ContinuumIO/docker-images/tree/master/anaconda\n#\n#  Except where noted below, docker-anaconda is released under the following terms:\n#\n#  (c) 2012 Continuum Analytics, Inc. / http://continuum.io\n#  All Rights Reserved\n#\n#  Redistribution and use in source and binary forms, with or without\n#  modification, are permitted provided that the following conditions are met:\n#      * Redistributions of source code must retain the above copyright\n#        notice, this list of conditions and the following disclaimer.\n#      * Redistributions in binary form must reproduce the above copyright\n#        notice, this list of conditions and the following disclaimer in the\n#        documentation and/or other materials provided with the distribution.\n#      * Neither the name of Continuum Analytics, Inc. nor the\n#        names of its contributors may be used to endorse or promote products\n#        derived from this software without specific prior written permission.\n#\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n#  DISCLAIMED. IN NO EVENT SHALL CONTINUUM ANALYTICS BE LIABLE FOR ANY\n#  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n#  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n#  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nRUN apt-get update --fix-missing \\\n && apt-get install wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda2-4.0.0-Linux-x86_64.sh \\\n && /bin/bash /Anaconda2-4.0.0-Linux-x86_64.sh -b -p /opt/conda \\\n && rm /Anaconda2-4.0.0-Linux-x86_64.sh\nRUN apt-get install curl grep sed dpkg -y \\\n && TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\\\"\" | sed 's:^..\\\\(.*\\\\).$:\\\\1:' ` \\\n && curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb \\\n && dpkg -i tini.deb \\\n && rm tini.deb \\\n && apt-get clean\nENV PATH=\"/opt/conda/bin:$PATH\"\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  Set up build tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\n","injectedSmells":[],"originalDockerfileHash":"8bc82649d2782ee5521d5aaa797a02ef","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER Alex Gude\nRUN apt-get install module-init-tools -y\n#   Mount the installer to Docker\nENV NVIDIA_DRIVER_VERSION=\"352.68\"\nLABEL com.nvidia.driver.version=\"352.68\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nRUN cd /tmp/ \\\n && wget http://us.download.nvidia.com/XFree86/Linux-x86_64/${NVIDIA_DRIVER_VERSION}/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run \\\n && chmod a+x ./NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run \\\n && ./NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run -s -N --no-kernel-module \\\n && rm ./NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run\n#   Install CUDA\n#   We do not include the patch version number in CUDA_VERSION because it is used\n#   to link to the CUDA directory, which excludes the patch\nENV CUDA_VERSION=\"7.5\"\nENV CUDA_PKG_VERSION=\"7-5=7.5-18\"\nLABEL com.nvidia.cuda.version=\"7.5-18\"\nENV NVIDIA_GPGKEY_SUM=\"bd841d59a27a406e513db7d405550894188a4c1cd96bf8aa4f82f1b39e0b5c1c\"\nENV NVIDIA_GPGKEY_FPR=\"889bee522da690103c4b085ed88c3d385c37d3be\"\nRUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/GPGKEY \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub \\\n && echo \"$NVIDIA_GPGKEY_SUM cudasign.pub\" | sha256sum -c --strict - \\\n && rm cudasign.pub \\\n && echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-nvrtc-$CUDA_PKG_VERSION cuda-cusolver-$CUDA_PKG_VERSION cuda-cublas-$CUDA_PKG_VERSION cuda-cufft-$CUDA_PKG_VERSION cuda-curand-$CUDA_PKG_VERSION cuda-cusparse-$CUDA_PKG_VERSION cuda-npp-$CUDA_PKG_VERSION cuda-cudart-$CUDA_PKG_VERSION -y --force-yes \\\n && ln -s cuda-$CUDA_VERSION /usr/local/cuda \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf \\\n && echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf \\\n && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-core-$CUDA_PKG_VERSION cuda-misc-headers-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION cuda-license-$CUDA_PKG_VERSION cuda-nvrtc-dev-$CUDA_PKG_VERSION cuda-cusolver-dev-$CUDA_PKG_VERSION cuda-cublas-dev-$CUDA_PKG_VERSION cuda-cufft-dev-$CUDA_PKG_VERSION cuda-curand-dev-$CUDA_PKG_VERSION cuda-cusparse-dev-$CUDA_PKG_VERSION cuda-npp-dev-$CUDA_PKG_VERSION cuda-cudart-dev-$CUDA_PKG_VERSION cuda-driver-dev-$CUDA_PKG_VERSION -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\n#   Install cuDNN\nENV CUDNN_VERSION=\"4\"\nLABEL com.nvidia.cudnn.version=\"4\"\nENV CUDNN_PKG_VERSION=\"4.0.7\"\nRUN echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn4=$CUDNN_PKG_VERSION libcudnn4-dev=$CUDNN_PKG_VERSION -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nENV LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}\"\n#   Install Anaconda\n#   From: https://github.com/ContinuumIO/docker-images/tree/master/anaconda\n#\n#   Except where noted below, docker-anaconda is released under the following terms:\n#\n#   (c) 2012 Continuum Analytics, Inc. / http://continuum.io\n#   All Rights Reserved\n#\n#   Redistribution and use in source and binary forms, with or without\n#   modification, are permitted provided that the following conditions are met:\n#       * Redistributions of source code must retain the above copyright\n#         notice, this list of conditions and the following disclaimer.\n#       * Redistributions in binary form must reproduce the above copyright\n#         notice, this list of conditions and the following disclaimer in the\n#         documentation and/or other materials provided with the distribution.\n#       * Neither the name of Continuum Analytics, Inc. nor the\n#         names of its contributors may be used to endorse or promote products\n#         derived from this software without specific prior written permission.\n#\n#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n#   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n#   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n#   DISCLAIMED. IN NO EVENT SHALL CONTINUUM ANALYTICS BE LIABLE FOR ANY\n#   DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n#   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n#   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n#   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nRUN apt-get update --fix-missing \\\n && apt-get install wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda2-4.0.0-Linux-x86_64.sh \\\n && /bin/bash /Anaconda2-4.0.0-Linux-x86_64.sh -b -p /opt/conda \\\n && rm /Anaconda2-4.0.0-Linux-x86_64.sh\nRUN apt-get install curl grep sed dpkg -y \\\n && TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\\\"\" | sed 's:^..\\\\(.*\\\\).$:\\\\1:' ` \\\n && curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb \\\n && dpkg -i tini.deb \\\n && rm tini.deb \\\n && apt-get clean\nENV PATH=\"/opt/conda/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   Set up build tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\n","originalDockerfileUglifiedHash":"b203e540bc511f0645b68b0ec52b9629","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/450d31b12528075cdde28849f9a6d7584b59bfa7.dockerfile"}