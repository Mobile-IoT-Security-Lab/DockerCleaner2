{"seed":831718333,"processedDockerfileHash":"22549d3d65f910cc35f9cdb42239b24e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","pin-package-manager-versions-gem","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Stefano Pacifici <stefano@cliqz.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Install the required packages. 1st Set is for Browser Project and the 2nd for Ruby and NodeJS.\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 git=1:2.7.4-0ubuntu1.10 gnupg2=2.1.11-6ubuntu2.1 language-pack-en=1:16.04+20161009 lib32z1=1:1.2.8.dfsg-2ubuntu4.3 libc6:i386 libncurses5:i386 libstdc++6:i386 openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 python-dev=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 python-virtualenv=15.0.1+ds-3ubuntu1.1 unzip=6.0-20ubuntu1.1 wget=1.17.1-1ubuntu1.5 xz-utils=5.1.1alpha+20120614-2ubuntu2 -y \\\n && apt-get install --no-install-recommends apt-transport-https=1.2.35 autoconf=2.69-9 automake=1:1.15-4ubuntu1 bison=2:3.0.4.dfsg-1 build-essential=12.1ubuntu2 ca-certificates=20210119~16.04.1 gawk=1:4.1.3+dfsg-0.1 libffi-dev=3.2.1-4 libgdbm-dev=1.8.3-13.1 libgmp-dev=2:6.1.0+dfsg-2 libgmp-dev=2:6.1.0+dfsg-2 libncurses5-dev=6.0+20160213-1ubuntu1 libreadline6-dev=6.3-8ubuntu2 libsqlite3-dev=3.11.0-1ubuntu1.5 libssl-dev=1.0.2g-1ubuntu4.20 libtool=2.4.6-0.1 libyaml-dev=0.1.6-3 pkg-config=0.29.1-0ubuntu1 sqlite3=3.11.0-1ubuntu1.5 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Set the locale\nRUN locale-gen en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#   Add jenkins to the user group\nARG UID\nARG GID\nRUN getent group $GID || groupadd jenkins --gid $GID \\\n && useradd --create-home --shell /bin/bash jenkins --uid $UID --gid $GID\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\nENV ANDROID_HOME=\"/home/jenkins/android_home\"\nENV GRADLE_USER_HOME=\"/home/jenkins/gradle_home\"\nENV NVM_DIR=\"/home/jenkins/nvm \"\nENV NODE_VERSION=\"8.9.3\"\nUSER jenkins\n#  Install Android SDK and the Required SDKs\nRUN mkdir -p $ANDROID_HOME ; mkdir -p $GRADLE_USER_HOME ; cd $ANDROID_HOME ; wget --output-document=sdktools.zip --quiet 'https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip' ; unzip sdktools.zip ; rm -r sdktools.zip ; (while (true ) ; do echo y ;sleep 2 ; done ) | tools/bin/sdkmanager \"build-tools;26.0.2\" \"platforms;android-23\" \"platforms;android-27\" \"platform-tools\" \"tools\" \"platforms;android-25\" \"extras;google;m2repository\" \"extras;android;m2repository\" \"extras;google;google_play_services\"\nENV LD_LIBRARY_PATH=\"\\\"/home/jenkins/android_home/emulator/lib64/qt/lib\\\"\"\n#   Install Node.JS\nSHELL [\"/bin/bash\", \"-l\", \"-c\"]\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n && . $NVM_DIR/nvm.sh\nENV PATH=\"\\\"$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\\\"\"\n#  Installation of 'yarn'; 'appium' & 'wd' for Integration Tests\nRUN npm install yarn@1.22.19 appium@1.22.3 wd@1.14.0 --global\n#  Install Ruby and Fastlane\nRUN gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \\\n && curl -sSL https://get.rvm.io | bash -s stable --ruby=2.4.1 --autolibs=read-fail\nRUN gem install fastlane --version 2.212.1\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Stefano Pacifici <stefano@cliqz.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# Install the required packages. 1st Set is for Browser Project and the 2nd for Ruby and NodeJS.\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install curl git gnupg2 language-pack-en lib32z1 libc6:i386 libncurses5:i386 libstdc++6:i386 openjdk-8-jdk python-dev python-pip python-virtualenv unzip wget xz-utils -y \\\n && apt-get install apt-transport-https autoconf automake bison build-essential ca-certificates gawk libffi-dev libgdbm-dev libgmp-dev libgmp-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev libtool libyaml-dev pkg-config sqlite3 zlib1g-dev -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Set the locale\nRUN locale-gen en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#  Add jenkins to the user group\nARG UID\nARG GID\nRUN getent group $GID || groupadd jenkins --gid $GID \\\n && useradd --create-home --shell /bin/bash jenkins --uid $UID --gid $GID\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\nENV ANDROID_HOME=\"/home/jenkins/android_home\"\nENV GRADLE_USER_HOME=\"/home/jenkins/gradle_home\"\nENV NVM_DIR=\"/home/jenkins/nvm \"\nENV NODE_VERSION=\"8.9.3\"\nUSER jenkins\n# Install Android SDK and the Required SDKs\nRUN mkdir -p $ANDROID_HOME ; mkdir -p $GRADLE_USER_HOME ; cd $ANDROID_HOME ; wget --output-document=sdktools.zip --quiet 'https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip' ; unzip sdktools.zip ; rm -r sdktools.zip ; (while (true ) ; do echo y ;sleep 2 ; done ) | tools/bin/sdkmanager \"build-tools;26.0.2\" \"platforms;android-23\" \"platforms;android-27\" \"platform-tools\" \"tools\" \"platforms;android-25\" \"extras;google;m2repository\" \"extras;android;m2repository\" \"extras;google;google_play_services\"\nENV LD_LIBRARY_PATH=\"\\\"/home/jenkins/android_home/emulator/lib64/qt/lib\\\"\"\n#  Install Node.JS\nSHELL [\"/bin/bash\", \"-l\", \"-c\"]\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n && . $NVM_DIR/nvm.sh\nENV PATH=\"\\\"$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\\\"\"\n# Installation of 'yarn'; 'appium' & 'wd' for Integration Tests\nRUN npm install yarn appium wd --global\n# Install Ruby and Fastlane\nRUN gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \\\n && curl -sSL https://get.rvm.io | bash -s stable --ruby=2.4.1 --autolibs=read-fail\nRUN gem install fastlane\n","injectedSmells":[],"originalDockerfileHash":"7ec746395537444a59088808319303bd","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Stefano Pacifici <stefano@cliqz.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Install the required packages. 1st Set is for Browser Project and the 2nd for Ruby and NodeJS.\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install curl git gnupg2 language-pack-en lib32z1 libc6:i386 libncurses5:i386 libstdc++6:i386 openjdk-8-jdk python-dev python-pip python-virtualenv unzip wget xz-utils -y \\\n && apt-get install apt-transport-https autoconf automake bison build-essential ca-certificates gawk libffi-dev libgdbm-dev libgmp-dev libgmp-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev libtool libyaml-dev pkg-config sqlite3 zlib1g-dev -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Set the locale\nRUN locale-gen en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#   Add jenkins to the user group\nARG UID\nARG GID\nRUN getent group $GID || groupadd jenkins --gid $GID \\\n && useradd --create-home --shell /bin/bash jenkins --uid $UID --gid $GID\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\nENV ANDROID_HOME=\"/home/jenkins/android_home\"\nENV GRADLE_USER_HOME=\"/home/jenkins/gradle_home\"\nENV NVM_DIR=\"/home/jenkins/nvm \"\nENV NODE_VERSION=\"8.9.3\"\nUSER jenkins\n#  Install Android SDK and the Required SDKs\nRUN mkdir -p $ANDROID_HOME ; mkdir -p $GRADLE_USER_HOME ; cd $ANDROID_HOME ; wget --output-document=sdktools.zip --quiet 'https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip' ; unzip sdktools.zip ; rm -r sdktools.zip ; (while (true ) ; do echo y ;sleep 2 ; done ) | tools/bin/sdkmanager \"build-tools;26.0.2\" \"platforms;android-23\" \"platforms;android-27\" \"platform-tools\" \"tools\" \"platforms;android-25\" \"extras;google;m2repository\" \"extras;android;m2repository\" \"extras;google;google_play_services\"\nENV LD_LIBRARY_PATH=\"\\\"/home/jenkins/android_home/emulator/lib64/qt/lib\\\"\"\n#   Install Node.JS\nSHELL [\"/bin/bash\", \"-l\", \"-c\"]\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n && . $NVM_DIR/nvm.sh\nENV PATH=\"\\\"$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\\\"\"\n#  Installation of 'yarn'; 'appium' & 'wd' for Integration Tests\nRUN npm install yarn appium wd --global\n#  Install Ruby and Fastlane\nRUN gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \\\n && curl -sSL https://get.rvm.io | bash -s stable --ruby=2.4.1 --autolibs=read-fail\nRUN gem install fastlane\n","originalDockerfileUglifiedHash":"78a76a8d5bfaf098c604cb10e4f21e40","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9269d52b7505d2efb6f39736ddc27cbdd8d7b959.dockerfile"}