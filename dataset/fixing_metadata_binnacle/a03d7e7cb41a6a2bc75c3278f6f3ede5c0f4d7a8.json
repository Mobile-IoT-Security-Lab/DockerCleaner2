{"seed":4103525714,"processedDockerfileHash":"c616b246104140df579c123b06fb637b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:fpm\nMAINTAINER yesterday679 <yesterday679@gmail.com>\nRUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends apt-utils=2.2.4 -y \\\n && sh -c \"echo 'Asia/Shanghai' > /etc/timezone\"\n#  ####################################\n#   PHP Mysqli:\n#  ####################################\nARG INSTALL_MYSQLI=false\nRUN if [ ${INSTALL_MYSQLI} = true ] ; then docker-php-ext-install mysqli \\\n && docker-php-ext-enable mysqli ; fi\n#  ####################################\n#   PHP pdo_mysql:\n#  ####################################\nARG INSTALL_PDO_MYSQL=false\nRUN if [ ${INSTALL_PDO_MYSQL} = true ] ; then docker-php-ext-install pdo_mysql \\\n && docker-php-ext-enable pdo_mysql ; fi\n#  ####################################\n#   PHP Swoole:\n#  ####################################\nARG INSTALL_SWOOLE=false\nRUN if [ ${INSTALL_SWOOLE} = true ] ; then pecl install swoole \\\n && docker-php-ext-enable swoole ; fi\n#  ####################################\n#   PHP Redis:\n#  ####################################\nARG INSTALL_REDIS=false\nRUN if [ ${INSTALL_REDIS} = true ] ; then pecl install redis \\\n && docker-php-ext-enable redis ; fi\n#  ####################################\n#   Gd: Gd library.\n#  ####################################\nARG INSTALL_GD=false\nRUN if [ ${INSTALL_GD} = true ] ; then apt-get install --no-install-recommends libpng-dev=1.6.37-3 -y \\\n && docker-php-ext-install -j$( nproc ;) gd ; fi\n#  ####################################\n#   Imagick: ImageMagick library.\n#  ####################################\nARG INSTALL_IMAGICK=false\nRUN if [ ${INSTALL_IMAGICK} = true ] ; then apt-get install --no-install-recommends libmagickwand-dev=8:6.9.11.60+dfsg-1.3+deb11u1 libmagickcore-dev=8:6.9.11.60+dfsg-1.3+deb11u1 -y \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick ; fi\n#  ####################################\n#   bcmath: 精准计算模块\n#  ####################################\nARG INSTALL_BCMATH=false\nRUN if [ ${INSTALL_BCMATH} = true ] ; then docker-php-ext-install bcmath ; fi\n#  ####################################\n#   Opcache: 如果 Xdebug 扩展和 OPcache 一起使用，必须在 Xdebug 扩展之前加载 OPcache 扩展。\n#  ####################################\nARG INSTALL_OPCACHE=false\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache ; fi\n#  ####################################\n#   xDebug:\n#  ####################################\nARG INSTALL_XDEBUG=false\nARG PHP_XDEBUG_VERSION=xdebug\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install ${PHP_XDEBUG_VERSION} \\\n && docker-php-ext-enable xdebug ; fi\n#  ####################################\n#   PCNTL:\n#  ####################################\nARG INSTALL_PCNTL=false\nRUN if [ ${INSTALL_PCNTL} = true ] ; then docker-php-ext-install pcntl \\\n && docker-php-ext-enable pcntl ; fi\n#  ####################################\n#   XHPROF:\n#  ####################################\nARG INSTALL_XHPROF=false\nRUN if [ ${INSTALL_XHPROF} = true ] ; then apt-get install --no-install-recommends git=1:2.30.2-1+deb11u2 -y \\\n && git clone https://github.com/longxinH/xhprof.git /tmp/xhprof \\\n && cd /tmp/xhprof/extension/ \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && docker-php-ext-enable xhprof \\\n && apt-get remove -y git \\\n && apt-get install --no-install-recommends graphviz=2.42.2-5 -y ; fi\n#  ####################################\n#   Zip: ZipArchive\n#  ####################################\nARG INSTALL_ZIP=false\nRUN if [ ${INSTALL_ZIP} = true ] ; then apt-get install --no-install-recommends libzip-dev=1.7.3-1 -y \\\n && pecl install zip \\\n && docker-php-ext-enable zip ; fi\n#  ####################################\n#   MongoDB\n#  ####################################\nARG INSTALL_MONGO=false\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && docker-php-ext-enable mongodb ; fi\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCMD [\"php-fpm\"]\nEXPOSE 9000/tcp 9501/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:fpm\nMAINTAINER yesterday679 <yesterday679@gmail.com>\nRUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends apt-utils -y \\\n && sh -c \"echo 'Asia/Shanghai' > /etc/timezone\"\n# ####################################\n#  PHP Mysqli:\n# ####################################\nARG INSTALL_MYSQLI=false\nRUN if [ ${INSTALL_MYSQLI} = true ] ; then docker-php-ext-install mysqli \\\n && docker-php-ext-enable mysqli ; fi\n# ####################################\n#  PHP pdo_mysql:\n# ####################################\nARG INSTALL_PDO_MYSQL=false\nRUN if [ ${INSTALL_PDO_MYSQL} = true ] ; then docker-php-ext-install pdo_mysql \\\n && docker-php-ext-enable pdo_mysql ; fi\n# ####################################\n#  PHP Swoole:\n# ####################################\nARG INSTALL_SWOOLE=false\nRUN if [ ${INSTALL_SWOOLE} = true ] ; then pecl install swoole \\\n && docker-php-ext-enable swoole ; fi\n# ####################################\n#  PHP Redis:\n# ####################################\nARG INSTALL_REDIS=false\nRUN if [ ${INSTALL_REDIS} = true ] ; then pecl install redis \\\n && docker-php-ext-enable redis ; fi\n# ####################################\n#  Gd: Gd library.\n# ####################################\nARG INSTALL_GD=false\nRUN if [ ${INSTALL_GD} = true ] ; then apt-get install libpng-dev -y \\\n && docker-php-ext-install -j$( nproc ;) gd ; fi\n# ####################################\n#  Imagick: ImageMagick library.\n# ####################################\nARG INSTALL_IMAGICK=false\nRUN if [ ${INSTALL_IMAGICK} = true ] ; then apt-get install libmagickwand-dev libmagickcore-dev -y \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick ; fi\n# ####################################\n#  bcmath: 精准计算模块\n# ####################################\nARG INSTALL_BCMATH=false\nRUN if [ ${INSTALL_BCMATH} = true ] ; then docker-php-ext-install bcmath ; fi\n# ####################################\n#  Opcache: 如果 Xdebug 扩展和 OPcache 一起使用，必须在 Xdebug 扩展之前加载 OPcache 扩展。\n# ####################################\nARG INSTALL_OPCACHE=false\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache ; fi\n# ####################################\n#  xDebug:\n# ####################################\nARG INSTALL_XDEBUG=false\nARG PHP_XDEBUG_VERSION=xdebug\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install ${PHP_XDEBUG_VERSION} \\\n && docker-php-ext-enable xdebug ; fi\n# ####################################\n#  PCNTL:\n# ####################################\nARG INSTALL_PCNTL=false\nRUN if [ ${INSTALL_PCNTL} = true ] ; then docker-php-ext-install pcntl \\\n && docker-php-ext-enable pcntl ; fi\n# ####################################\n#  XHPROF:\n# ####################################\nARG INSTALL_XHPROF=false\nRUN if [ ${INSTALL_XHPROF} = true ] ; then apt-get install git -y \\\n && git clone https://github.com/longxinH/xhprof.git /tmp/xhprof \\\n && cd /tmp/xhprof/extension/ \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && docker-php-ext-enable xhprof \\\n && apt-get remove -y git \\\n && apt-get install graphviz -y ; fi\n# ####################################\n#  Zip: ZipArchive\n# ####################################\nARG INSTALL_ZIP=false\nRUN if [ ${INSTALL_ZIP} = true ] ; then apt-get install libzip-dev -y \\\n && pecl install zip \\\n && docker-php-ext-enable zip ; fi\n# ####################################\n#  MongoDB\n# ####################################\nARG INSTALL_MONGO=false\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && docker-php-ext-enable mongodb ; fi\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCMD [\"php-fpm\"]\nEXPOSE 9000/tcp 9501/tcp\n","injectedSmells":[],"originalDockerfileHash":"4e1227d432e6b11f1db61ceef496d552","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:fpm\nMAINTAINER yesterday679 <yesterday679@gmail.com>\nRUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends apt-utils -y \\\n && sh -c \"echo 'Asia/Shanghai' > /etc/timezone\"\n#  ####################################\n#   PHP Mysqli:\n#  ####################################\nARG INSTALL_MYSQLI=false\nRUN if [ ${INSTALL_MYSQLI} = true ] ; then docker-php-ext-install mysqli \\\n && docker-php-ext-enable mysqli ; fi\n#  ####################################\n#   PHP pdo_mysql:\n#  ####################################\nARG INSTALL_PDO_MYSQL=false\nRUN if [ ${INSTALL_PDO_MYSQL} = true ] ; then docker-php-ext-install pdo_mysql \\\n && docker-php-ext-enable pdo_mysql ; fi\n#  ####################################\n#   PHP Swoole:\n#  ####################################\nARG INSTALL_SWOOLE=false\nRUN if [ ${INSTALL_SWOOLE} = true ] ; then pecl install swoole \\\n && docker-php-ext-enable swoole ; fi\n#  ####################################\n#   PHP Redis:\n#  ####################################\nARG INSTALL_REDIS=false\nRUN if [ ${INSTALL_REDIS} = true ] ; then pecl install redis \\\n && docker-php-ext-enable redis ; fi\n#  ####################################\n#   Gd: Gd library.\n#  ####################################\nARG INSTALL_GD=false\nRUN if [ ${INSTALL_GD} = true ] ; then apt-get install libpng-dev -y \\\n && docker-php-ext-install -j$( nproc ;) gd ; fi\n#  ####################################\n#   Imagick: ImageMagick library.\n#  ####################################\nARG INSTALL_IMAGICK=false\nRUN if [ ${INSTALL_IMAGICK} = true ] ; then apt-get install libmagickwand-dev libmagickcore-dev -y \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick ; fi\n#  ####################################\n#   bcmath: 精准计算模块\n#  ####################################\nARG INSTALL_BCMATH=false\nRUN if [ ${INSTALL_BCMATH} = true ] ; then docker-php-ext-install bcmath ; fi\n#  ####################################\n#   Opcache: 如果 Xdebug 扩展和 OPcache 一起使用，必须在 Xdebug 扩展之前加载 OPcache 扩展。\n#  ####################################\nARG INSTALL_OPCACHE=false\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache ; fi\n#  ####################################\n#   xDebug:\n#  ####################################\nARG INSTALL_XDEBUG=false\nARG PHP_XDEBUG_VERSION=xdebug\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install ${PHP_XDEBUG_VERSION} \\\n && docker-php-ext-enable xdebug ; fi\n#  ####################################\n#   PCNTL:\n#  ####################################\nARG INSTALL_PCNTL=false\nRUN if [ ${INSTALL_PCNTL} = true ] ; then docker-php-ext-install pcntl \\\n && docker-php-ext-enable pcntl ; fi\n#  ####################################\n#   XHPROF:\n#  ####################################\nARG INSTALL_XHPROF=false\nRUN if [ ${INSTALL_XHPROF} = true ] ; then apt-get install git -y \\\n && git clone https://github.com/longxinH/xhprof.git /tmp/xhprof \\\n && cd /tmp/xhprof/extension/ \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && docker-php-ext-enable xhprof \\\n && apt-get remove -y git \\\n && apt-get install graphviz -y ; fi\n#  ####################################\n#   Zip: ZipArchive\n#  ####################################\nARG INSTALL_ZIP=false\nRUN if [ ${INSTALL_ZIP} = true ] ; then apt-get install libzip-dev -y \\\n && pecl install zip \\\n && docker-php-ext-enable zip ; fi\n#  ####################################\n#   MongoDB\n#  ####################################\nARG INSTALL_MONGO=false\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && docker-php-ext-enable mongodb ; fi\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCMD [\"php-fpm\"]\nEXPOSE 9000/tcp 9501/tcp\n","originalDockerfileUglifiedHash":"153253149e801b1b0b52b9367b30c696","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a03d7e7cb41a6a2bc75c3278f6f3ede5c0f4d7a8.dockerfile"}