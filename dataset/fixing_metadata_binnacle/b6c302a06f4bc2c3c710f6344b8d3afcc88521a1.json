{"seed":586153564,"processedDockerfileHash":"8253161570be281694334ae805c5da97","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##############################################################\n#   Dockerfile generated by Bocker-v1.3. Do not edit this file. #\n#  ##############################################################\nFROM debian:wheezy\nMAINTAINER My name <myemail@example.net>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n#   Here is from `__ed_before_ship` method. You may need your own\n#   custom one to advance the base image when it doesn't have Bash.\n#\n#   The default `__ed_before_ship` method is to print this message.\n#   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n#   Bocker method => __ed_ship\n#   * The output is /bocker.sh in the result image.\n#   * List of methods:\n#     - ed_apt_clean\n#     - ed_apt_purge\n#\n#   | set -eux\n#   | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#   | ed_apt_clean () \n#   | { \n#   |     rm -fv /var/cache/apt/*.bin;\n#   |     rm -fv /var/cache/apt/archives/*.*;\n#   |     rm -fv /var/lib/apt/lists/*.*;\n#   |     apt-get autoclean\n#   | }\n#   | ed_apt_purge () \n#   | { \n#   |     apt-get purge -y --auto-remove $@;\n#   |     ed_apt_clean\n#   | }\n#   | echo '#!/usr/bin/env bash' > '/bocker.sh'\n#   | echo '# This file is generated by Bocker.' >> '/bocker.sh'\n#   | declare -f >> '/bocker.sh'\n#   | echo 'if [ -n \"$@\" ]; then $@; fi; ' >> '/bocker.sh'\n#   | chmod 755 '/bocker.sh'\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9hcHRfY2xlYW4gKCkgCnsgCiAgICBybSAtZnYgL3Zhci9jYWNoZS9hcHQvKi5iaW47CiAgICBybSAtZnYgL3Zhci9jYWNoZS9hcHQvYXJjaGl2ZXMvKi4qOwogICAgcm0gLWZ2IC92YXIvbGliL2FwdC9saXN0cy8qLio7CiAgICBhcHQtZ2V0IGF1dG9jbGVhbgp9CmVkX2FwdF9wdXJnZSAoKSAKeyAKICAgIGFwdC1nZXQgcHVyZ2UgLXkgLS1hdXRvLXJlbW92ZSAkQDsKICAgIGVkX2FwdF9jbGVhbgp9CmVjaG8gJyMhL3Vzci9iaW4vZW52IGJhc2gnID4gJy9ib2NrZXIuc2gnCmVjaG8gJyMgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBCb2NrZXIuJyA+PiAnL2JvY2tlci5zaCcKZGVjbGFyZSAtZiA+PiAnL2JvY2tlci5zaCcKZWNobyAnaWYgWyAtbiAiJEAiIF07IHRoZW4gJEA7IGZpOyAnID4+ICcvYm9ja2VyLnNoJwpjaG1vZCA3NTUgJy9ib2NrZXIuc2gnCg== | base64 -d | /usr/bin/env bash\n#   Bocker method => ed_install_curl\n#\n#   | set -eux\n#   | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#   | ed_install_curl () \n#   | { \n#   |     apt-get update;\n#   |     apt-get install -y curl;\n#   |     ed_apt_clean\n#   | }\n#   | ed_install_curl\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9pbnN0YWxsX2N1cmwgKCkgCnsgCiAgICBhcHQtZ2V0IHVwZGF0ZTsKICAgIGFwdC1nZXQgaW5zdGFsbCAteSBjdXJsOwogICAgZWRfYXB0X2NsZWFuCn0KZWRfaW5zdGFsbF9jdXJsCg== | base64 -d | /usr/bin/env bash\n#   Bocker methods:\n#   - ed_group_part_1\n#   - ed_group_part_2\n#\n#   | set -eux\n#   | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#   | ed_group_part_1 () \n#   | { \n#   |     echo \"This is part 1 of the group.\"\n#   | }\n#   | ed_group_part_2 () \n#   | { \n#   |     echo \"This is part 2 of the group.\"\n#   | }\n#   | ed_group_part_1\n#   | ed_group_part_2\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9ncm91cF9wYXJ0XzEgKCkgCnsgCiAgICBlY2hvICJUaGlzIGlzIHBhcnQgMSBvZiB0aGUgZ3JvdXAuIgp9CmVkX2dyb3VwX3BhcnRfMiAoKSAKeyAKICAgIGVjaG8gIlRoaXMgaXMgcGFydCAyIG9mIHRoZSBncm91cC4iCn0KZWRfZ3JvdXBfcGFydF8xCmVkX2dyb3VwX3BhcnRfMgo= | base64 -d | /usr/bin/env bash\nCOPY enabled/test.txt /example/\n#   Bocker method => __ed_ship\n#   * The output is /bocker.sh in the result image.\n#   * List of methods:\n#     - ed_ship_later_example\n#\n#   | set -eux\n#   | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#   | ed_ship_later_example () \n#   | { \n#   |     echo \"This is an example.\";\n#   |     echo \"This is shipped at the end of Dockerfile.\";\n#   |     echo 'Quoting example.'\n#   | }\n#   | echo '#!/usr/bin/env bash' > '/bocker.sh'\n#   | echo '# This file is generated by Bocker.' >> '/bocker.sh'\n#   | declare -f >> '/bocker.sh'\n#   | echo 'if [ -n \"$@\" ]; then $@; fi; ' >> '/bocker.sh'\n#   | chmod 755 '/bocker.sh'\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9zaGlwX2xhdGVyX2V4YW1wbGUgKCkgCnsgCiAgICBlY2hvICJUaGlzIGlzIGFuIGV4YW1wbGUuIjsKICAgIGVjaG8gIlRoaXMgaXMgc2hpcHBlZCBhdCB0aGUgZW5kIG9mIERvY2tlcmZpbGUuIjsKICAgIGVjaG8gJ1F1b3RpbmcgZXhhbXBsZS4nCn0KZWNobyAnIyEvdXNyL2Jpbi9lbnYgYmFzaCcgPiAnL2JvY2tlci5zaCcKZWNobyAnIyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IEJvY2tlci4nID4+ICcvYm9ja2VyLnNoJwpkZWNsYXJlIC1mID4+ICcvYm9ja2VyLnNoJwplY2hvICdpZiBbIC1uICIkQCIgXTsgdGhlbiAkQDsgZmk7ICcgPj4gJy9ib2NrZXIuc2gnCmNobW9kIDc1NSAnL2JvY2tlci5zaCcK | base64 -d | /usr/bin/env bash\nCMD /bin/true\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##############################################################\n#  Dockerfile generated by Bocker-v1.3. Do not edit this file. #\n# ##############################################################\nFROM debian:wheezy\nMAINTAINER My name <myemail@example.net>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n#  Here is from `__ed_before_ship` method. You may need your own\n#  custom one to advance the base image when it doesn't have Bash.\n#\n#  The default `__ed_before_ship` method is to print this message.\n#  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n#  Bocker method => __ed_ship\n#  * The output is /bocker.sh in the result image.\n#  * List of methods:\n#    - ed_apt_clean\n#    - ed_apt_purge\n#\n#  | set -eux\n#  | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#  | ed_apt_clean () \n#  | { \n#  |     rm -fv /var/cache/apt/*.bin;\n#  |     rm -fv /var/cache/apt/archives/*.*;\n#  |     rm -fv /var/lib/apt/lists/*.*;\n#  |     apt-get autoclean\n#  | }\n#  | ed_apt_purge () \n#  | { \n#  |     apt-get purge -y --auto-remove $@;\n#  |     ed_apt_clean\n#  | }\n#  | echo '#!/usr/bin/env bash' > '/bocker.sh'\n#  | echo '# This file is generated by Bocker.' >> '/bocker.sh'\n#  | declare -f >> '/bocker.sh'\n#  | echo 'if [ -n \"$@\" ]; then $@; fi; ' >> '/bocker.sh'\n#  | chmod 755 '/bocker.sh'\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9hcHRfY2xlYW4gKCkgCnsgCiAgICBybSAtZnYgL3Zhci9jYWNoZS9hcHQvKi5iaW47CiAgICBybSAtZnYgL3Zhci9jYWNoZS9hcHQvYXJjaGl2ZXMvKi4qOwogICAgcm0gLWZ2IC92YXIvbGliL2FwdC9saXN0cy8qLio7CiAgICBhcHQtZ2V0IGF1dG9jbGVhbgp9CmVkX2FwdF9wdXJnZSAoKSAKeyAKICAgIGFwdC1nZXQgcHVyZ2UgLXkgLS1hdXRvLXJlbW92ZSAkQDsKICAgIGVkX2FwdF9jbGVhbgp9CmVjaG8gJyMhL3Vzci9iaW4vZW52IGJhc2gnID4gJy9ib2NrZXIuc2gnCmVjaG8gJyMgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBCb2NrZXIuJyA+PiAnL2JvY2tlci5zaCcKZGVjbGFyZSAtZiA+PiAnL2JvY2tlci5zaCcKZWNobyAnaWYgWyAtbiAiJEAiIF07IHRoZW4gJEA7IGZpOyAnID4+ICcvYm9ja2VyLnNoJwpjaG1vZCA3NTUgJy9ib2NrZXIuc2gnCg== | base64 -d | /usr/bin/env bash\n#  Bocker method => ed_install_curl\n#\n#  | set -eux\n#  | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#  | ed_install_curl () \n#  | { \n#  |     apt-get update;\n#  |     apt-get install -y curl;\n#  |     ed_apt_clean\n#  | }\n#  | ed_install_curl\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9pbnN0YWxsX2N1cmwgKCkgCnsgCiAgICBhcHQtZ2V0IHVwZGF0ZTsKICAgIGFwdC1nZXQgaW5zdGFsbCAteSBjdXJsOwogICAgZWRfYXB0X2NsZWFuCn0KZWRfaW5zdGFsbF9jdXJsCg== | base64 -d | /usr/bin/env bash\n#  Bocker methods:\n#  - ed_group_part_1\n#  - ed_group_part_2\n#\n#  | set -eux\n#  | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#  | ed_group_part_1 () \n#  | { \n#  |     echo \"This is part 1 of the group.\"\n#  | }\n#  | ed_group_part_2 () \n#  | { \n#  |     echo \"This is part 2 of the group.\"\n#  | }\n#  | ed_group_part_1\n#  | ed_group_part_2\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9ncm91cF9wYXJ0XzEgKCkgCnsgCiAgICBlY2hvICJUaGlzIGlzIHBhcnQgMSBvZiB0aGUgZ3JvdXAuIgp9CmVkX2dyb3VwX3BhcnRfMiAoKSAKeyAKICAgIGVjaG8gIlRoaXMgaXMgcGFydCAyIG9mIHRoZSBncm91cC4iCn0KZWRfZ3JvdXBfcGFydF8xCmVkX2dyb3VwX3BhcnRfMgo= | base64 -d | /usr/bin/env bash\nCOPY enabled/test.txt /example/\n#  Bocker method => __ed_ship\n#  * The output is /bocker.sh in the result image.\n#  * List of methods:\n#    - ed_ship_later_example\n#\n#  | set -eux\n#  | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#  | ed_ship_later_example () \n#  | { \n#  |     echo \"This is an example.\";\n#  |     echo \"This is shipped at the end of Dockerfile.\";\n#  |     echo 'Quoting example.'\n#  | }\n#  | echo '#!/usr/bin/env bash' > '/bocker.sh'\n#  | echo '# This file is generated by Bocker.' >> '/bocker.sh'\n#  | declare -f >> '/bocker.sh'\n#  | echo 'if [ -n \"$@\" ]; then $@; fi; ' >> '/bocker.sh'\n#  | chmod 755 '/bocker.sh'\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9zaGlwX2xhdGVyX2V4YW1wbGUgKCkgCnsgCiAgICBlY2hvICJUaGlzIGlzIGFuIGV4YW1wbGUuIjsKICAgIGVjaG8gIlRoaXMgaXMgc2hpcHBlZCBhdCB0aGUgZW5kIG9mIERvY2tlcmZpbGUuIjsKICAgIGVjaG8gJ1F1b3RpbmcgZXhhbXBsZS4nCn0KZWNobyAnIyEvdXNyL2Jpbi9lbnYgYmFzaCcgPiAnL2JvY2tlci5zaCcKZWNobyAnIyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IEJvY2tlci4nID4+ICcvYm9ja2VyLnNoJwpkZWNsYXJlIC1mID4+ICcvYm9ja2VyLnNoJwplY2hvICdpZiBbIC1uICIkQCIgXTsgdGhlbiAkQDsgZmk7ICcgPj4gJy9ib2NrZXIuc2gnCmNobW9kIDc1NSAnL2JvY2tlci5zaCcK | base64 -d | /usr/bin/env bash\nCMD /bin/true\n","injectedSmells":[],"originalDockerfileHash":"bebf31a84fcacaf8fe1d0b2c22effe5c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##############################################################\n#   Dockerfile generated by Bocker-v1.3. Do not edit this file. #\n#  ##############################################################\nFROM debian:wheezy\nMAINTAINER My name <myemail@example.net>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n#   Here is from `__ed_before_ship` method. You may need your own\n#   custom one to advance the base image when it doesn't have Bash.\n#\n#   The default `__ed_before_ship` method is to print this message.\n#   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n#   Bocker method => __ed_ship\n#   * The output is /bocker.sh in the result image.\n#   * List of methods:\n#     - ed_apt_clean\n#     - ed_apt_purge\n#\n#   | set -eux\n#   | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#   | ed_apt_clean () \n#   | { \n#   |     rm -fv /var/cache/apt/*.bin;\n#   |     rm -fv /var/cache/apt/archives/*.*;\n#   |     rm -fv /var/lib/apt/lists/*.*;\n#   |     apt-get autoclean\n#   | }\n#   | ed_apt_purge () \n#   | { \n#   |     apt-get purge -y --auto-remove $@;\n#   |     ed_apt_clean\n#   | }\n#   | echo '#!/usr/bin/env bash' > '/bocker.sh'\n#   | echo '# This file is generated by Bocker.' >> '/bocker.sh'\n#   | declare -f >> '/bocker.sh'\n#   | echo 'if [ -n \"$@\" ]; then $@; fi; ' >> '/bocker.sh'\n#   | chmod 755 '/bocker.sh'\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9hcHRfY2xlYW4gKCkgCnsgCiAgICBybSAtZnYgL3Zhci9jYWNoZS9hcHQvKi5iaW47CiAgICBybSAtZnYgL3Zhci9jYWNoZS9hcHQvYXJjaGl2ZXMvKi4qOwogICAgcm0gLWZ2IC92YXIvbGliL2FwdC9saXN0cy8qLio7CiAgICBhcHQtZ2V0IGF1dG9jbGVhbgp9CmVkX2FwdF9wdXJnZSAoKSAKeyAKICAgIGFwdC1nZXQgcHVyZ2UgLXkgLS1hdXRvLXJlbW92ZSAkQDsKICAgIGVkX2FwdF9jbGVhbgp9CmVjaG8gJyMhL3Vzci9iaW4vZW52IGJhc2gnID4gJy9ib2NrZXIuc2gnCmVjaG8gJyMgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBCb2NrZXIuJyA+PiAnL2JvY2tlci5zaCcKZGVjbGFyZSAtZiA+PiAnL2JvY2tlci5zaCcKZWNobyAnaWYgWyAtbiAiJEAiIF07IHRoZW4gJEA7IGZpOyAnID4+ICcvYm9ja2VyLnNoJwpjaG1vZCA3NTUgJy9ib2NrZXIuc2gnCg== | base64 -d | /usr/bin/env bash\n#   Bocker method => ed_install_curl\n#\n#   | set -eux\n#   | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#   | ed_install_curl () \n#   | { \n#   |     apt-get update;\n#   |     apt-get install -y curl;\n#   |     ed_apt_clean\n#   | }\n#   | ed_install_curl\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9pbnN0YWxsX2N1cmwgKCkgCnsgCiAgICBhcHQtZ2V0IHVwZGF0ZTsKICAgIGFwdC1nZXQgaW5zdGFsbCAteSBjdXJsOwogICAgZWRfYXB0X2NsZWFuCn0KZWRfaW5zdGFsbF9jdXJsCg== | base64 -d | /usr/bin/env bash\n#   Bocker methods:\n#   - ed_group_part_1\n#   - ed_group_part_2\n#\n#   | set -eux\n#   | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#   | ed_group_part_1 () \n#   | { \n#   |     echo \"This is part 1 of the group.\"\n#   | }\n#   | ed_group_part_2 () \n#   | { \n#   |     echo \"This is part 2 of the group.\"\n#   | }\n#   | ed_group_part_1\n#   | ed_group_part_2\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9ncm91cF9wYXJ0XzEgKCkgCnsgCiAgICBlY2hvICJUaGlzIGlzIHBhcnQgMSBvZiB0aGUgZ3JvdXAuIgp9CmVkX2dyb3VwX3BhcnRfMiAoKSAKeyAKICAgIGVjaG8gIlRoaXMgaXMgcGFydCAyIG9mIHRoZSBncm91cC4iCn0KZWRfZ3JvdXBfcGFydF8xCmVkX2dyb3VwX3BhcnRfMgo= | base64 -d | /usr/bin/env bash\nCOPY enabled/test.txt /example/\n#   Bocker method => __ed_ship\n#   * The output is /bocker.sh in the result image.\n#   * List of methods:\n#     - ed_ship_later_example\n#\n#   | set -eux\n#   | if [ -f '/bocker.sh' ]; then source '/bocker.sh'; fi\n#   | ed_ship_later_example () \n#   | { \n#   |     echo \"This is an example.\";\n#   |     echo \"This is shipped at the end of Dockerfile.\";\n#   |     echo 'Quoting example.'\n#   | }\n#   | echo '#!/usr/bin/env bash' > '/bocker.sh'\n#   | echo '# This file is generated by Bocker.' >> '/bocker.sh'\n#   | declare -f >> '/bocker.sh'\n#   | echo 'if [ -n \"$@\" ]; then $@; fi; ' >> '/bocker.sh'\n#   | chmod 755 '/bocker.sh'\n#\nRUN echo c2V0IC1ldXgKaWYgWyAtZiAnL2JvY2tlci5zaCcgXTsgdGhlbiBzb3VyY2UgJy9ib2NrZXIuc2gnOyBmaQplZF9zaGlwX2xhdGVyX2V4YW1wbGUgKCkgCnsgCiAgICBlY2hvICJUaGlzIGlzIGFuIGV4YW1wbGUuIjsKICAgIGVjaG8gIlRoaXMgaXMgc2hpcHBlZCBhdCB0aGUgZW5kIG9mIERvY2tlcmZpbGUuIjsKICAgIGVjaG8gJ1F1b3RpbmcgZXhhbXBsZS4nCn0KZWNobyAnIyEvdXNyL2Jpbi9lbnYgYmFzaCcgPiAnL2JvY2tlci5zaCcKZWNobyAnIyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IEJvY2tlci4nID4+ICcvYm9ja2VyLnNoJwpkZWNsYXJlIC1mID4+ICcvYm9ja2VyLnNoJwplY2hvICdpZiBbIC1uICIkQCIgXTsgdGhlbiAkQDsgZmk7ICcgPj4gJy9ib2NrZXIuc2gnCmNobW9kIDc1NSAnL2JvY2tlci5zaCcK | base64 -d | /usr/bin/env bash\nCMD /bin/true\n","originalDockerfileUglifiedHash":"ef8cfc39f67bb3ccbbdebce0674fa1bd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b6c302a06f4bc2c3c710f6344b8d3afcc88521a1.dockerfile"}