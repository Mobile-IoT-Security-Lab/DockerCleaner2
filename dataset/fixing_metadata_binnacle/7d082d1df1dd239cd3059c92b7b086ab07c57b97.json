{"seed":498621531,"processedDockerfileHash":"36832773a08588c1f27091cf2eecb776","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-user"],"processedDockerfile":"#   Image metadata and config\nFROM debian:jessie\nLABEL name=\"angular.io PR preview\" \\\n      description=\"This image implements the PR preview functionality for angular.io.\" \\\n      vendor=\"Angular\" \\\n      version=\"1.0\"\nVOLUME /aio-secrets\nVOLUME /var/www/aio-builds\nEXPOSE 80/tcp 443/tcp\n#   Build-time args and env vars\nARG AIO_BUILDS_DIR=/var/www/aio-builds\nARG TEST_AIO_BUILDS_DIR=/tmp/aio-builds\nARG AIO_DOMAIN_NAME=ngbuilds.io\nARG TEST_AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME.localhost\nARG AIO_GITHUB_ORGANIZATION=angular\nARG TEST_AIO_GITHUB_ORGANIZATION=angular\nARG AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors\nARG TEST_AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors\nARG AIO_NGINX_HOSTNAME=$AIO_DOMAIN_NAME\nARG TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_DOMAIN_NAME\nARG AIO_NGINX_PORT_HTTP=80\nARG TEST_AIO_NGINX_PORT_HTTP=8080\nARG AIO_NGINX_PORT_HTTPS=443\nARG TEST_AIO_NGINX_PORT_HTTPS=4433\nARG AIO_REPO_SLUG=angular/angular\nARG TEST_AIO_REPO_SLUG=test-repo/test-slug\nARG AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG TEST_AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG AIO_UPLOAD_HOSTNAME=upload.localhost\nARG TEST_AIO_UPLOAD_HOSTNAME=upload.localhost\nARG AIO_UPLOAD_MAX_SIZE=20971520\nARG TEST_AIO_UPLOAD_MAX_SIZE=20971520\nARG AIO_UPLOAD_PORT=3000\nARG TEST_AIO_UPLOAD_PORT=3001\nENV AIO_BUILDS_DIR=\"$AIO_BUILDS_DIR\" \\\n    TEST_AIO_BUILDS_DIR=\"$TEST_AIO_BUILDS_DIR\" \\\n    AIO_DOMAIN_NAME=\"$AIO_DOMAIN_NAME\" \\\n    TEST_AIO_DOMAIN_NAME=\"$TEST_AIO_DOMAIN_NAME\" \\\n    AIO_GITHUB_ORGANIZATION=\"$AIO_GITHUB_ORGANIZATION\" \\\n    TEST_AIO_GITHUB_ORGANIZATION=\"$TEST_AIO_GITHUB_ORGANIZATION\" \\\n    AIO_GITHUB_TEAM_SLUGS=\"$AIO_GITHUB_TEAM_SLUGS\" \\\n    TEST_AIO_GITHUB_TEAM_SLUGS=\"$TEST_AIO_GITHUB_TEAM_SLUGS\" \\\n    AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts\" \\\n    TEST_AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts-test\" \\\n    AIO_NGINX_HOSTNAME=\"$AIO_NGINX_HOSTNAME\" \\\n    TEST_AIO_NGINX_HOSTNAME=\"$TEST_AIO_NGINX_HOSTNAME\" \\\n    AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx\" \\\n    TEST_AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx-test\" \\\n    AIO_NGINX_PORT_HTTP=\"$AIO_NGINX_PORT_HTTP\" \\\n    TEST_AIO_NGINX_PORT_HTTP=\"$TEST_AIO_NGINX_PORT_HTTP\" \\\n    AIO_NGINX_PORT_HTTPS=\"$AIO_NGINX_PORT_HTTPS\" \\\n    TEST_AIO_NGINX_PORT_HTTPS=\"$TEST_AIO_NGINX_PORT_HTTPS\" \\\n    AIO_REPO_SLUG=\"$AIO_REPO_SLUG\" \\\n    TEST_AIO_REPO_SLUG=\"$TEST_AIO_REPO_SLUG\" \\\n    AIO_SCRIPTS_JS_DIR=\"/usr/share/aio-scripts-js\" \\\n    AIO_SCRIPTS_SH_DIR=\"/usr/share/aio-scripts-sh\" \\\n    AIO_TRUSTED_PR_LABEL=\"$AIO_TRUSTED_PR_LABEL\" \\\n    TEST_AIO_TRUSTED_PR_LABEL=\"$TEST_AIO_TRUSTED_PR_LABEL\" \\\n    AIO_UPLOAD_HOSTNAME=\"$AIO_UPLOAD_HOSTNAME\" \\\n    TEST_AIO_UPLOAD_HOSTNAME=\"$TEST_AIO_UPLOAD_HOSTNAME\" \\\n    AIO_UPLOAD_MAX_SIZE=\"$AIO_UPLOAD_MAX_SIZE\" \\\n    TEST_AIO_UPLOAD_MAX_SIZE=\"$TEST_AIO_UPLOAD_MAX_SIZE\" \\\n    AIO_UPLOAD_PORT=\"$AIO_UPLOAD_PORT\" \\\n    TEST_AIO_UPLOAD_PORT=\"$TEST_AIO_UPLOAD_PORT\" \\\n    AIO_WWW_USER=\"www-data\" \\\n    NODE_ENV=\"production\"\n#   Create directory for logs\nRUN mkdir /var/log/aio\n#   Add extra package sources\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends curl -y\nRUN curl --silent --show-error --location https://deb.nodesource.com/setup_6.x | bash -\nRUN curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN echo \"deb http://ftp.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/backports.list\n#   Install packages\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends chkconfig cron dnsmasq nano nodejs openssl rsyslog yarn -y\nRUN apt-get install --no-install-recommends jessie-backports nginx -t -y\nRUN yarn global add pm2@2\n#   Set up log rotation\nCOPY logrotate/* /etc/logrotate.d/\nRUN chmod 0644 /etc/logrotate.d/*\n#   Set up cronjobs\nCOPY cronjobs/aio-builds-cleanup /etc/cron.d/\nRUN chmod 0744 /etc/cron.d/aio-builds-cleanup\nRUN crontab /etc/cron.d/aio-builds-cleanup\nRUN printenv | grep AIO_ >> /etc/environment\n#   Set up dnsmasq\nCOPY dnsmasq/dnsmasq.conf /etc/\nRUN sed -i \"s|{{$AIO_NGINX_HOSTNAME}}|$AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_NGINX_HOSTNAME}}|$TEST_AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf\n#   Set up SSL/TLS certificates\nCOPY nginx/create-selfsigned-cert.sh /tmp/\nRUN chmod a+x /tmp/create-selfsigned-cert.sh\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-prod\" \"$AIO_NGINX_HOSTNAME\" \"$AIO_LOCALCERTS_DIR\"\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-test\" \"$TEST_AIO_NGINX_HOSTNAME\" \"$TEST_AIO_LOCALCERTS_DIR\"\nRUN rm /tmp/create-selfsigned-cert.sh\nRUN update-ca-certificates\n#   Set up nginx (for production and testing)\nRUN sed -i -E \"s|^user\\s+\\S+;|user $AIO_WWW_USER;|\" /etc/nginx/nginx.conf\nRUN rm -f /etc/nginx/conf.d/*\nRUN rm -f /etc/nginx/sites-enabled/*\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_MAX_SIZE}}|$AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_PORT}}|$AIO_UPLOAD_PORT|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$TEST_AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$TEST_AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$TEST_AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$TEST_AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$TEST_AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$TEST_AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_MAX_SIZE}}|$TEST_AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_PORT}}|$TEST_AIO_UPLOAD_PORT|g\" /etc/nginx/conf.d/aio-builds-test.conf\n#   Set up pm2\nRUN pm2 startup systemv -u root > /dev/null\nRUN chkconfig pm2-root on\n#   Set up the shell scripts\nCOPY scripts-sh/ $AIO_SCRIPTS_SH_DIR/\nRUN chmod a+x $AIO_SCRIPTS_SH_DIR/*\nRUN find $AIO_SCRIPTS_SH_DIR -maxdepth 1 -type f -printf \"%P\\n\" | while read file ; do ln -s $AIO_SCRIPTS_SH_DIR/$file /usr/local/bin/aio-${file%.*} ; done\n#   Set up the Node.js scripts\nCOPY scripts-js/ $AIO_SCRIPTS_JS_DIR/\nWORKDIR $AIO_SCRIPTS_JS_DIR/\nRUN yarn install --production --frozen-lockfile\n#   Set up health check\nHEALTHCHECK --interval=300s CMD /usr/local/bin/aio-health-check\n#   Go!\nWORKDIR /\nCMD aio-init \\\n && tail -f /dev/null\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n","originalDockerfile":"#  Image metadata and config\nFROM debian:jessie\nLABEL name=\"angular.io PR preview\" \\\n      description=\"This image implements the PR preview functionality for angular.io.\" \\\n      vendor=\"Angular\" \\\n      version=\"1.0\"\nVOLUME /aio-secrets\nVOLUME /var/www/aio-builds\nEXPOSE 80/tcp 443/tcp\n#  Build-time args and env vars\nARG AIO_BUILDS_DIR=/var/www/aio-builds\nARG TEST_AIO_BUILDS_DIR=/tmp/aio-builds\nARG AIO_DOMAIN_NAME=ngbuilds.io\nARG TEST_AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME.localhost\nARG AIO_GITHUB_ORGANIZATION=angular\nARG TEST_AIO_GITHUB_ORGANIZATION=angular\nARG AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors\nARG TEST_AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors\nARG AIO_NGINX_HOSTNAME=$AIO_DOMAIN_NAME\nARG TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_DOMAIN_NAME\nARG AIO_NGINX_PORT_HTTP=80\nARG TEST_AIO_NGINX_PORT_HTTP=8080\nARG AIO_NGINX_PORT_HTTPS=443\nARG TEST_AIO_NGINX_PORT_HTTPS=4433\nARG AIO_REPO_SLUG=angular/angular\nARG TEST_AIO_REPO_SLUG=test-repo/test-slug\nARG AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG TEST_AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG AIO_UPLOAD_HOSTNAME=upload.localhost\nARG TEST_AIO_UPLOAD_HOSTNAME=upload.localhost\nARG AIO_UPLOAD_MAX_SIZE=20971520\nARG TEST_AIO_UPLOAD_MAX_SIZE=20971520\nARG AIO_UPLOAD_PORT=3000\nARG TEST_AIO_UPLOAD_PORT=3001\nENV AIO_BUILDS_DIR=\"$AIO_BUILDS_DIR\" \\\n    TEST_AIO_BUILDS_DIR=\"$TEST_AIO_BUILDS_DIR\" \\\n    AIO_DOMAIN_NAME=\"$AIO_DOMAIN_NAME\" \\\n    TEST_AIO_DOMAIN_NAME=\"$TEST_AIO_DOMAIN_NAME\" \\\n    AIO_GITHUB_ORGANIZATION=\"$AIO_GITHUB_ORGANIZATION\" \\\n    TEST_AIO_GITHUB_ORGANIZATION=\"$TEST_AIO_GITHUB_ORGANIZATION\" \\\n    AIO_GITHUB_TEAM_SLUGS=\"$AIO_GITHUB_TEAM_SLUGS\" \\\n    TEST_AIO_GITHUB_TEAM_SLUGS=\"$TEST_AIO_GITHUB_TEAM_SLUGS\" \\\n    AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts\" \\\n    TEST_AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts-test\" \\\n    AIO_NGINX_HOSTNAME=\"$AIO_NGINX_HOSTNAME\" \\\n    TEST_AIO_NGINX_HOSTNAME=\"$TEST_AIO_NGINX_HOSTNAME\" \\\n    AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx\" \\\n    TEST_AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx-test\" \\\n    AIO_NGINX_PORT_HTTP=\"$AIO_NGINX_PORT_HTTP\" \\\n    TEST_AIO_NGINX_PORT_HTTP=\"$TEST_AIO_NGINX_PORT_HTTP\" \\\n    AIO_NGINX_PORT_HTTPS=\"$AIO_NGINX_PORT_HTTPS\" \\\n    TEST_AIO_NGINX_PORT_HTTPS=\"$TEST_AIO_NGINX_PORT_HTTPS\" \\\n    AIO_REPO_SLUG=\"$AIO_REPO_SLUG\" \\\n    TEST_AIO_REPO_SLUG=\"$TEST_AIO_REPO_SLUG\" \\\n    AIO_SCRIPTS_JS_DIR=\"/usr/share/aio-scripts-js\" \\\n    AIO_SCRIPTS_SH_DIR=\"/usr/share/aio-scripts-sh\" \\\n    AIO_TRUSTED_PR_LABEL=\"$AIO_TRUSTED_PR_LABEL\" \\\n    TEST_AIO_TRUSTED_PR_LABEL=\"$TEST_AIO_TRUSTED_PR_LABEL\" \\\n    AIO_UPLOAD_HOSTNAME=\"$AIO_UPLOAD_HOSTNAME\" \\\n    TEST_AIO_UPLOAD_HOSTNAME=\"$TEST_AIO_UPLOAD_HOSTNAME\" \\\n    AIO_UPLOAD_MAX_SIZE=\"$AIO_UPLOAD_MAX_SIZE\" \\\n    TEST_AIO_UPLOAD_MAX_SIZE=\"$TEST_AIO_UPLOAD_MAX_SIZE\" \\\n    AIO_UPLOAD_PORT=\"$AIO_UPLOAD_PORT\" \\\n    TEST_AIO_UPLOAD_PORT=\"$TEST_AIO_UPLOAD_PORT\" \\\n    AIO_WWW_USER=\"www-data\" \\\n    NODE_ENV=\"production\"\n#  Create directory for logs\nRUN mkdir /var/log/aio\n#  Add extra package sources\nRUN apt-get update -y \\\n && apt-get install curl -y\nRUN curl --silent --show-error --location https://deb.nodesource.com/setup_6.x | bash -\nRUN curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN echo \"deb http://ftp.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/backports.list\n#  Install packages\nRUN apt-get update -y \\\n && apt-get install chkconfig cron dnsmasq nano nodejs openssl rsyslog yarn -y\nRUN apt-get install jessie-backports nginx -t -y\nRUN yarn global add pm2@2\n#  Set up log rotation\nCOPY logrotate/* /etc/logrotate.d/\nRUN chmod 0644 /etc/logrotate.d/*\n#  Set up cronjobs\nCOPY cronjobs/aio-builds-cleanup /etc/cron.d/\nRUN chmod 0744 /etc/cron.d/aio-builds-cleanup\nRUN crontab /etc/cron.d/aio-builds-cleanup\nRUN printenv | grep AIO_ >> /etc/environment\n#  Set up dnsmasq\nCOPY dnsmasq/dnsmasq.conf /etc/\nRUN sed -i \"s|{{$AIO_NGINX_HOSTNAME}}|$AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_NGINX_HOSTNAME}}|$TEST_AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf\n#  Set up SSL/TLS certificates\nCOPY nginx/create-selfsigned-cert.sh /tmp/\nRUN chmod a+x /tmp/create-selfsigned-cert.sh\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-prod\" \"$AIO_NGINX_HOSTNAME\" \"$AIO_LOCALCERTS_DIR\"\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-test\" \"$TEST_AIO_NGINX_HOSTNAME\" \"$TEST_AIO_LOCALCERTS_DIR\"\nRUN rm /tmp/create-selfsigned-cert.sh\nRUN update-ca-certificates\n#  Set up nginx (for production and testing)\nRUN sed -i -E \"s|^user\\s+\\S+;|user $AIO_WWW_USER;|\" /etc/nginx/nginx.conf\nRUN rm -f /etc/nginx/conf.d/*\nRUN rm -f /etc/nginx/sites-enabled/*\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_MAX_SIZE}}|$AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_PORT}}|$AIO_UPLOAD_PORT|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$TEST_AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$TEST_AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$TEST_AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$TEST_AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$TEST_AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$TEST_AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_MAX_SIZE}}|$TEST_AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_PORT}}|$TEST_AIO_UPLOAD_PORT|g\" /etc/nginx/conf.d/aio-builds-test.conf\n#  Set up pm2\nRUN pm2 startup systemv -u root > /dev/null\nRUN chkconfig pm2-root on\n#  Set up the shell scripts\nCOPY scripts-sh/ $AIO_SCRIPTS_SH_DIR/\nRUN chmod a+x $AIO_SCRIPTS_SH_DIR/*\nRUN find $AIO_SCRIPTS_SH_DIR -maxdepth 1 -type f -printf \"%P\\n\" | while read file ; do ln -s $AIO_SCRIPTS_SH_DIR/$file /usr/local/bin/aio-${file%.*} ; done\n#  Set up the Node.js scripts\nCOPY scripts-js/ $AIO_SCRIPTS_JS_DIR/\nWORKDIR $AIO_SCRIPTS_JS_DIR/\nRUN yarn install --production --frozen-lockfile\n#  Set up health check\nHEALTHCHECK --interval=300s CMD /usr/local/bin/aio-health-check\n#  Go!\nWORKDIR /\nCMD aio-init \\\n && tail -f /dev/null\n","injectedSmells":[],"originalDockerfileHash":"1330bf211f00f0e96a3885691db85c5b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Image metadata and config\nFROM debian:jessie\nLABEL name=\"angular.io PR preview\" \\\n      description=\"This image implements the PR preview functionality for angular.io.\" \\\n      vendor=\"Angular\" \\\n      version=\"1.0\"\nVOLUME /aio-secrets\nVOLUME /var/www/aio-builds\nEXPOSE 80/tcp 443/tcp\n#   Build-time args and env vars\nARG AIO_BUILDS_DIR=/var/www/aio-builds\nARG TEST_AIO_BUILDS_DIR=/tmp/aio-builds\nARG AIO_DOMAIN_NAME=ngbuilds.io\nARG TEST_AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME.localhost\nARG AIO_GITHUB_ORGANIZATION=angular\nARG TEST_AIO_GITHUB_ORGANIZATION=angular\nARG AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors\nARG TEST_AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors\nARG AIO_NGINX_HOSTNAME=$AIO_DOMAIN_NAME\nARG TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_DOMAIN_NAME\nARG AIO_NGINX_PORT_HTTP=80\nARG TEST_AIO_NGINX_PORT_HTTP=8080\nARG AIO_NGINX_PORT_HTTPS=443\nARG TEST_AIO_NGINX_PORT_HTTPS=4433\nARG AIO_REPO_SLUG=angular/angular\nARG TEST_AIO_REPO_SLUG=test-repo/test-slug\nARG AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG TEST_AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG AIO_UPLOAD_HOSTNAME=upload.localhost\nARG TEST_AIO_UPLOAD_HOSTNAME=upload.localhost\nARG AIO_UPLOAD_MAX_SIZE=20971520\nARG TEST_AIO_UPLOAD_MAX_SIZE=20971520\nARG AIO_UPLOAD_PORT=3000\nARG TEST_AIO_UPLOAD_PORT=3001\nENV AIO_BUILDS_DIR=\"$AIO_BUILDS_DIR\" \\\n    TEST_AIO_BUILDS_DIR=\"$TEST_AIO_BUILDS_DIR\" \\\n    AIO_DOMAIN_NAME=\"$AIO_DOMAIN_NAME\" \\\n    TEST_AIO_DOMAIN_NAME=\"$TEST_AIO_DOMAIN_NAME\" \\\n    AIO_GITHUB_ORGANIZATION=\"$AIO_GITHUB_ORGANIZATION\" \\\n    TEST_AIO_GITHUB_ORGANIZATION=\"$TEST_AIO_GITHUB_ORGANIZATION\" \\\n    AIO_GITHUB_TEAM_SLUGS=\"$AIO_GITHUB_TEAM_SLUGS\" \\\n    TEST_AIO_GITHUB_TEAM_SLUGS=\"$TEST_AIO_GITHUB_TEAM_SLUGS\" \\\n    AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts\" \\\n    TEST_AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts-test\" \\\n    AIO_NGINX_HOSTNAME=\"$AIO_NGINX_HOSTNAME\" \\\n    TEST_AIO_NGINX_HOSTNAME=\"$TEST_AIO_NGINX_HOSTNAME\" \\\n    AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx\" \\\n    TEST_AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx-test\" \\\n    AIO_NGINX_PORT_HTTP=\"$AIO_NGINX_PORT_HTTP\" \\\n    TEST_AIO_NGINX_PORT_HTTP=\"$TEST_AIO_NGINX_PORT_HTTP\" \\\n    AIO_NGINX_PORT_HTTPS=\"$AIO_NGINX_PORT_HTTPS\" \\\n    TEST_AIO_NGINX_PORT_HTTPS=\"$TEST_AIO_NGINX_PORT_HTTPS\" \\\n    AIO_REPO_SLUG=\"$AIO_REPO_SLUG\" \\\n    TEST_AIO_REPO_SLUG=\"$TEST_AIO_REPO_SLUG\" \\\n    AIO_SCRIPTS_JS_DIR=\"/usr/share/aio-scripts-js\" \\\n    AIO_SCRIPTS_SH_DIR=\"/usr/share/aio-scripts-sh\" \\\n    AIO_TRUSTED_PR_LABEL=\"$AIO_TRUSTED_PR_LABEL\" \\\n    TEST_AIO_TRUSTED_PR_LABEL=\"$TEST_AIO_TRUSTED_PR_LABEL\" \\\n    AIO_UPLOAD_HOSTNAME=\"$AIO_UPLOAD_HOSTNAME\" \\\n    TEST_AIO_UPLOAD_HOSTNAME=\"$TEST_AIO_UPLOAD_HOSTNAME\" \\\n    AIO_UPLOAD_MAX_SIZE=\"$AIO_UPLOAD_MAX_SIZE\" \\\n    TEST_AIO_UPLOAD_MAX_SIZE=\"$TEST_AIO_UPLOAD_MAX_SIZE\" \\\n    AIO_UPLOAD_PORT=\"$AIO_UPLOAD_PORT\" \\\n    TEST_AIO_UPLOAD_PORT=\"$TEST_AIO_UPLOAD_PORT\" \\\n    AIO_WWW_USER=\"www-data\" \\\n    NODE_ENV=\"production\"\n#   Create directory for logs\nRUN mkdir /var/log/aio\n#   Add extra package sources\nRUN apt-get update -y \\\n && apt-get install curl -y\nRUN curl --silent --show-error --location https://deb.nodesource.com/setup_6.x | bash -\nRUN curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN echo \"deb http://ftp.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/backports.list\n#   Install packages\nRUN apt-get update -y \\\n && apt-get install chkconfig cron dnsmasq nano nodejs openssl rsyslog yarn -y\nRUN apt-get install jessie-backports nginx -t -y\nRUN yarn global add pm2@2\n#   Set up log rotation\nCOPY logrotate/* /etc/logrotate.d/\nRUN chmod 0644 /etc/logrotate.d/*\n#   Set up cronjobs\nCOPY cronjobs/aio-builds-cleanup /etc/cron.d/\nRUN chmod 0744 /etc/cron.d/aio-builds-cleanup\nRUN crontab /etc/cron.d/aio-builds-cleanup\nRUN printenv | grep AIO_ >> /etc/environment\n#   Set up dnsmasq\nCOPY dnsmasq/dnsmasq.conf /etc/\nRUN sed -i \"s|{{$AIO_NGINX_HOSTNAME}}|$AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_NGINX_HOSTNAME}}|$TEST_AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf\n#   Set up SSL/TLS certificates\nCOPY nginx/create-selfsigned-cert.sh /tmp/\nRUN chmod a+x /tmp/create-selfsigned-cert.sh\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-prod\" \"$AIO_NGINX_HOSTNAME\" \"$AIO_LOCALCERTS_DIR\"\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-test\" \"$TEST_AIO_NGINX_HOSTNAME\" \"$TEST_AIO_LOCALCERTS_DIR\"\nRUN rm /tmp/create-selfsigned-cert.sh\nRUN update-ca-certificates\n#   Set up nginx (for production and testing)\nRUN sed -i -E \"s|^user\\s+\\S+;|user $AIO_WWW_USER;|\" /etc/nginx/nginx.conf\nRUN rm -f /etc/nginx/conf.d/*\nRUN rm -f /etc/nginx/sites-enabled/*\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_MAX_SIZE}}|$AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_PORT}}|$AIO_UPLOAD_PORT|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$TEST_AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$TEST_AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$TEST_AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$TEST_AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$TEST_AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$TEST_AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_MAX_SIZE}}|$TEST_AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_UPLOAD_PORT}}|$TEST_AIO_UPLOAD_PORT|g\" /etc/nginx/conf.d/aio-builds-test.conf\n#   Set up pm2\nRUN pm2 startup systemv -u root > /dev/null\nRUN chkconfig pm2-root on\n#   Set up the shell scripts\nCOPY scripts-sh/ $AIO_SCRIPTS_SH_DIR/\nRUN chmod a+x $AIO_SCRIPTS_SH_DIR/*\nRUN find $AIO_SCRIPTS_SH_DIR -maxdepth 1 -type f -printf \"%P\\n\" | while read file ; do ln -s $AIO_SCRIPTS_SH_DIR/$file /usr/local/bin/aio-${file%.*} ; done\n#   Set up the Node.js scripts\nCOPY scripts-js/ $AIO_SCRIPTS_JS_DIR/\nWORKDIR $AIO_SCRIPTS_JS_DIR/\nRUN yarn install --production --frozen-lockfile\n#   Set up health check\nHEALTHCHECK --interval=300s CMD /usr/local/bin/aio-health-check\n#   Go!\nWORKDIR /\nCMD aio-init \\\n && tail -f /dev/null\n","originalDockerfileUglifiedHash":"a631bc6022d4aae8247fe6184522ca2b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7d082d1df1dd239cd3059c92b7b086ab07c57b97.dockerfile"}