{"seed":2313620414,"processedDockerfileHash":"f0a86ae5fe246463b37907cfd2c1998a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM quay.io/fenicsproject/stable:2017.2.0.r4\nMAINTAINER pf4d <mail@cummings.evan@gmail.com>\nUSER fenics\nENV CSLVR_VERSION=\"2017.2.0\"\nCOPY WELCOME $FENICS_HOME/WELCOME\nUSER root\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip python-netcdf4 python-matplotlib git curl wget subversion patch gmsh libxrender1 libglu1-mesa libsm6 libxcursor1 libgeos-dev texlive-base texlive-fonts-recommended texlive-latex-extra texlive-math-extra texlive-fonts-extra texlive-science -y\n#   get the latest python packages :\nRUN pip install colored==1.4.4 termcolor==2.2.0 shapely==2.0.1 pyproj==3.5.0 tifffile==2023.4.12 --upgrade\n#   install libadjoint :\nRUN git clone -b libadjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/libadjoint\nRUN cd libadjoint \\\n && mkdir build ; cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=\"/usr/local\" .. \\\n && make install \\\n && cd ../.. \\\n && rm -r libadjoint\n#   install dolfin-adjoint :\nRUN git clone -b dolfin-adjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/dolfin-adjoint\nENV PYTHONPATH=\"/home/fenics/dolfin-adjoint:$PYTHONPATH\"\n#   install ipopt with default packages -- these overlap with those used by \n#   fenics, but it works, and is supported by IPOPT crew :\nRUN svn co https://projects.coin-or.org/svn/Ipopt/stable/3.12 CoinIpopt\nRUN cd CoinIpopt/ThirdParty/Metis \\\n && ./get.Metis \\\n && cd ../Lapack \\\n && ./get.Lapack \\\n && cd ../Blas \\\n && ./get.Blas \\\n && cd ../Mumps \\\n && ./get.Mumps \\\n && cd ../ASL \\\n && ./get.ASL \\\n && cd ../../ \\\n && ./configure --prefix=\"/usr/local\" \\\n && make -j 8 \\\n && make install \\\n && cd ../ \\\n && rm -r CoinIpopt\n#   install pyipopt :\nRUN git clone https://github.com/xuy/pyipopt.git\nRUN cd pyipopt \\\n && python setup.py build \\\n && python setup.py install \\\n && cd ../ \\\n && ldconfig \\\n && rm -r pyipopt\n#   install basemap for matplotlib :\nRUN git clone https://github.com/matplotlib/basemap.git\nRUN cd basemap \\\n && python setup.py install \\\n && cd ..\n#   install gmsh :\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git\nRUN cd gmsh \\\n && mkdir build \\\n && cd build \\\n && cmake -D ENABLE_WRAP_PYTHON=ON -D ENABLE_FLTK=ON -D ENABLE_PRIVATE_API=ON -D PYTHON_EXECUTABLE:FILEPATH=$( which python ;) -D ENABLE_PETSC=OFF -D ENABLE_SLEPC=OFF -D ENABLE_PETSC4PY=OFF -D ENABLE_MPI=ON -D CMAKE_C_COMPILER=mpicc -D CMAKE_CXX_COMPILER=mpicxx -D CMAKE_Fortran_COMPILER=mpifort -D CMAKE_INSTALL_PREFIX=\"/usr/local\" .. \\\n && make \\\n && make install\n#  # install cslvr :\n#  RUN git clone https://github.com/pf4d/cslvr\n#  ENV PYTHONPATH /home/fenics/cslvr:$PYTHONPATH\n#   finally, cleanup :\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM quay.io/fenicsproject/stable:2017.2.0.r4\nMAINTAINER pf4d <mail@cummings.evan@gmail.com>\nUSER fenics\nENV CSLVR_VERSION=\"2017.2.0\"\nCOPY WELCOME $FENICS_HOME/WELCOME\nUSER root\nRUN apt-get update \\\n && apt-get install python-pip python-netcdf4 python-matplotlib git curl wget subversion patch gmsh libxrender1 libglu1-mesa libsm6 libxcursor1 libgeos-dev texlive-base texlive-fonts-recommended texlive-latex-extra texlive-math-extra texlive-fonts-extra texlive-science -y\n#  get the latest python packages :\nRUN pip install colored termcolor shapely pyproj tifffile --upgrade\n#  install libadjoint :\nRUN git clone -b libadjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/libadjoint\nRUN cd libadjoint \\\n && mkdir build ; cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=\"/usr/local\" .. \\\n && make install \\\n && cd ../.. \\\n && rm -r libadjoint\n#  install dolfin-adjoint :\nRUN git clone -b dolfin-adjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/dolfin-adjoint\nENV PYTHONPATH=\"/home/fenics/dolfin-adjoint:$PYTHONPATH\"\n#  install ipopt with default packages -- these overlap with those used by \n#  fenics, but it works, and is supported by IPOPT crew :\nRUN svn co https://projects.coin-or.org/svn/Ipopt/stable/3.12 CoinIpopt\nRUN cd CoinIpopt/ThirdParty/Metis \\\n && ./get.Metis \\\n && cd ../Lapack \\\n && ./get.Lapack \\\n && cd ../Blas \\\n && ./get.Blas \\\n && cd ../Mumps \\\n && ./get.Mumps \\\n && cd ../ASL \\\n && ./get.ASL \\\n && cd ../../ \\\n && ./configure --prefix=\"/usr/local\" \\\n && make -j 8 \\\n && make install \\\n && cd ../ \\\n && rm -r CoinIpopt\n#  install pyipopt :\nRUN git clone https://github.com/xuy/pyipopt.git\nRUN cd pyipopt \\\n && python setup.py build \\\n && python setup.py install \\\n && cd ../ \\\n && ldconfig \\\n && rm -r pyipopt\n#  install basemap for matplotlib :\nRUN git clone https://github.com/matplotlib/basemap.git\nRUN cd basemap \\\n && python setup.py install \\\n && cd ..\n#  install gmsh :\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git\nRUN cd gmsh \\\n && mkdir build \\\n && cd build \\\n && cmake -D ENABLE_WRAP_PYTHON=ON -D ENABLE_FLTK=ON -D ENABLE_PRIVATE_API=ON -D PYTHON_EXECUTABLE:FILEPATH=$( which python ;) -D ENABLE_PETSC=OFF -D ENABLE_SLEPC=OFF -D ENABLE_PETSC4PY=OFF -D ENABLE_MPI=ON -D CMAKE_C_COMPILER=mpicc -D CMAKE_CXX_COMPILER=mpicxx -D CMAKE_Fortran_COMPILER=mpifort -D CMAKE_INSTALL_PREFIX=\"/usr/local\" .. \\\n && make \\\n && make install\n# # install cslvr :\n# RUN git clone https://github.com/pf4d/cslvr\n# ENV PYTHONPATH /home/fenics/cslvr:$PYTHONPATH\n#  finally, cleanup :\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","injectedSmells":[],"originalDockerfileHash":"41b92817f58419e4ceaf0fe489e70bbe","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM quay.io/fenicsproject/stable:2017.2.0.r4\nMAINTAINER pf4d <mail@cummings.evan@gmail.com>\nUSER fenics\nENV CSLVR_VERSION=\"2017.2.0\"\nCOPY WELCOME $FENICS_HOME/WELCOME\nUSER root\nRUN apt-get update \\\n && apt-get install python-pip python-netcdf4 python-matplotlib git curl wget subversion patch gmsh libxrender1 libglu1-mesa libsm6 libxcursor1 libgeos-dev texlive-base texlive-fonts-recommended texlive-latex-extra texlive-math-extra texlive-fonts-extra texlive-science -y\n#   get the latest python packages :\nRUN pip install colored termcolor shapely pyproj tifffile --upgrade\n#   install libadjoint :\nRUN git clone -b libadjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/libadjoint\nRUN cd libadjoint \\\n && mkdir build ; cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=\"/usr/local\" .. \\\n && make install \\\n && cd ../.. \\\n && rm -r libadjoint\n#   install dolfin-adjoint :\nRUN git clone -b dolfin-adjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/dolfin-adjoint\nENV PYTHONPATH=\"/home/fenics/dolfin-adjoint:$PYTHONPATH\"\n#   install ipopt with default packages -- these overlap with those used by \n#   fenics, but it works, and is supported by IPOPT crew :\nRUN svn co https://projects.coin-or.org/svn/Ipopt/stable/3.12 CoinIpopt\nRUN cd CoinIpopt/ThirdParty/Metis \\\n && ./get.Metis \\\n && cd ../Lapack \\\n && ./get.Lapack \\\n && cd ../Blas \\\n && ./get.Blas \\\n && cd ../Mumps \\\n && ./get.Mumps \\\n && cd ../ASL \\\n && ./get.ASL \\\n && cd ../../ \\\n && ./configure --prefix=\"/usr/local\" \\\n && make -j 8 \\\n && make install \\\n && cd ../ \\\n && rm -r CoinIpopt\n#   install pyipopt :\nRUN git clone https://github.com/xuy/pyipopt.git\nRUN cd pyipopt \\\n && python setup.py build \\\n && python setup.py install \\\n && cd ../ \\\n && ldconfig \\\n && rm -r pyipopt\n#   install basemap for matplotlib :\nRUN git clone https://github.com/matplotlib/basemap.git\nRUN cd basemap \\\n && python setup.py install \\\n && cd ..\n#   install gmsh :\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git\nRUN cd gmsh \\\n && mkdir build \\\n && cd build \\\n && cmake -D ENABLE_WRAP_PYTHON=ON -D ENABLE_FLTK=ON -D ENABLE_PRIVATE_API=ON -D PYTHON_EXECUTABLE:FILEPATH=$( which python ;) -D ENABLE_PETSC=OFF -D ENABLE_SLEPC=OFF -D ENABLE_PETSC4PY=OFF -D ENABLE_MPI=ON -D CMAKE_C_COMPILER=mpicc -D CMAKE_CXX_COMPILER=mpicxx -D CMAKE_Fortran_COMPILER=mpifort -D CMAKE_INSTALL_PREFIX=\"/usr/local\" .. \\\n && make \\\n && make install\n#  # install cslvr :\n#  RUN git clone https://github.com/pf4d/cslvr\n#  ENV PYTHONPATH /home/fenics/cslvr:$PYTHONPATH\n#   finally, cleanup :\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","originalDockerfileUglifiedHash":"bdc8314283f0b41146da8e07675ac654","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1b6a6132a6d12ed0cf25451cf74e62f84c200cc2.dockerfile"}