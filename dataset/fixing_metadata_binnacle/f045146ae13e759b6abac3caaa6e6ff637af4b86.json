{"seed":1833302745,"processedDockerfileHash":"67b4d724129b06ae67022a361de2905a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG alpine=3.8\nARG go=1.11.0\nARG grpc\nARG grpc_java\nFROM golang:$go-alpine$alpine AS build\n#   TIL docker arg variables need to be redefined in each build stage\nARG grpc\nARG grpc_java\nRUN set -ex \\\n && apk add bash make cmake autoconf automake curl tar libtool g++ git openjdk8-jre libstdc++ ca-certificates nss --update --no-cache\nWORKDIR /tmp\nCOPY all/install-protobuf.sh /tmp\nRUN chmod +x /tmp/install-protobuf.sh\nRUN /tmp/install-protobuf.sh ${grpc} ${grpc_java}\nRUN git clone https://github.com/googleapis/googleapis\nRUN curl -sSL https://github.com/uber/prototool/releases/download/v1.3.0/prototool-$( uname -s ;)-$( uname -m ;) -o /usr/local/bin/prototool \\\n && chmod +x /usr/local/bin/prototool\n#   Go get go-related bins\nRUN go get -u google.golang.org/grpc\nRUN go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway\nRUN go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger\nRUN go get -u github.com/golang/protobuf/protoc-gen-go\nRUN go get -u github.com/gogo/protobuf/protoc-gen-gogo\nRUN go get -u github.com/gogo/protobuf/protoc-gen-gogofast\nRUN go get -u github.com/ckaznocha/protoc-gen-lint\nRUN go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc\n#   Add grpc-web support\nRUN curl -sSL https://github.com/grpc/grpc-web/releases/download/1.0.4/protoc-gen-grpc-web-1.0.4-linux-x86_64 -o /tmp/grpc_web_plugin \\\n && chmod +x /tmp/grpc_web_plugin\nFROM alpine:3.9 AS protoc-all\nRUN set -ex \\\n && apk add bash libstdc++ libc6-compat ca-certificates nodejs nodejs-npm --update --no-cache\n#   Add TypeScript support\nRUN npm install ts-protoc-gen@0.10.0 -g\nCOPY --from=build /tmp/grpc/bins/opt/grpc_* /usr/local/bin/\nCOPY --from=build /tmp/grpc/bins/opt/protobuf/protoc /usr/local/bin/\nCOPY --from=build /tmp/grpc/libs/opt/ /usr/local/lib/\nCOPY --from=build /tmp/grpc-java/compiler/build/exe/java_plugin/protoc-gen-grpc-java /usr/local/bin/\nCOPY --from=build /tmp/googleapis/google/ /opt/include/google\nCOPY --from=build /usr/local/include/google/ /opt/include/google\nCOPY --from=build /usr/local/bin/prototool /usr/local/bin/prototool\nCOPY --from=build /go/bin/* /usr/local/bin/\nCOPY --from=build /tmp/grpc_web_plugin /usr/local/bin/grpc_web_plugin\nCOPY --from=build /go/src/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options/ /opt/include/protoc-gen-swagger/options/\nCOPY all/entrypoint.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/entrypoint.sh\nWORKDIR /defs\nENTRYPOINT [\"entrypoint.sh\"]\n#   protoc\nFROM protoc-all AS protoc\nENTRYPOINT [\"protoc\", \"-I/opt/include\"]\n#   prototool\nFROM protoc-all AS prototool\nENTRYPOINT [\"prototool\"]\n#   grpc-cli\nFROM protoc-all AS grpc-cli\nCOPY ./cli/entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nWORKDIR /run\nENTRYPOINT [\"/entrypoint.sh\"]\n#   gen-grpc-gateway\nFROM protoc-all AS gen-grpc-gateway\nCOPY gwy/templates /templates\nCOPY gwy/generate_gateway.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/generate_gateway.sh\nWORKDIR /defs\nENTRYPOINT [\"generate_gateway.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG alpine=3.8\nARG go=1.11.0\nARG grpc\nARG grpc_java\nFROM golang:$go-alpine$alpine AS build\n#  TIL docker arg variables need to be redefined in each build stage\nARG grpc\nARG grpc_java\nRUN set -ex \\\n && apk --update --no-cache add bash make cmake autoconf automake curl tar libtool g++ git openjdk8-jre libstdc++ ca-certificates nss\nWORKDIR /tmp\nCOPY all/install-protobuf.sh /tmp\nRUN chmod +x /tmp/install-protobuf.sh\nRUN /tmp/install-protobuf.sh ${grpc} ${grpc_java}\nRUN git clone https://github.com/googleapis/googleapis\nRUN curl -sSL https://github.com/uber/prototool/releases/download/v1.3.0/prototool-$( uname -s ;)-$( uname -m ;) -o /usr/local/bin/prototool \\\n && chmod +x /usr/local/bin/prototool\n#  Go get go-related bins\nRUN go get -u google.golang.org/grpc\nRUN go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway\nRUN go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger\nRUN go get -u github.com/golang/protobuf/protoc-gen-go\nRUN go get -u github.com/gogo/protobuf/protoc-gen-gogo\nRUN go get -u github.com/gogo/protobuf/protoc-gen-gogofast\nRUN go get -u github.com/ckaznocha/protoc-gen-lint\nRUN go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc\n#  Add grpc-web support\nRUN curl -sSL https://github.com/grpc/grpc-web/releases/download/1.0.4/protoc-gen-grpc-web-1.0.4-linux-x86_64 -o /tmp/grpc_web_plugin \\\n && chmod +x /tmp/grpc_web_plugin\nFROM alpine:3.9 AS protoc-all\nRUN set -ex \\\n && apk --update --no-cache add bash libstdc++ libc6-compat ca-certificates nodejs nodejs-npm\n#  Add TypeScript support\nRUN npm install ts-protoc-gen@0.10.0 -g\nCOPY --from=build /tmp/grpc/bins/opt/grpc_* /usr/local/bin/\nCOPY --from=build /tmp/grpc/bins/opt/protobuf/protoc /usr/local/bin/\nCOPY --from=build /tmp/grpc/libs/opt/ /usr/local/lib/\nCOPY --from=build /tmp/grpc-java/compiler/build/exe/java_plugin/protoc-gen-grpc-java /usr/local/bin/\nCOPY --from=build /tmp/googleapis/google/ /opt/include/google\nCOPY --from=build /usr/local/include/google/ /opt/include/google\nCOPY --from=build /usr/local/bin/prototool /usr/local/bin/prototool\nCOPY --from=build /go/bin/* /usr/local/bin/\nCOPY --from=build /tmp/grpc_web_plugin /usr/local/bin/grpc_web_plugin\nCOPY --from=build /go/src/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options/ /opt/include/protoc-gen-swagger/options/\nADD all/entrypoint.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/entrypoint.sh\nWORKDIR /defs\nENTRYPOINT [\"entrypoint.sh\"]\n#  protoc\nFROM protoc-all AS protoc\nENTRYPOINT [\"protoc\", \"-I/opt/include\"]\n#  prototool\nFROM protoc-all AS prototool\nENTRYPOINT [\"prototool\"]\n#  grpc-cli\nFROM protoc-all AS grpc-cli\nADD ./cli/entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nWORKDIR /run\nENTRYPOINT [\"/entrypoint.sh\"]\n#  gen-grpc-gateway\nFROM protoc-all AS gen-grpc-gateway\nCOPY gwy/templates /templates\nCOPY gwy/generate_gateway.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/generate_gateway.sh\nWORKDIR /defs\nENTRYPOINT [\"generate_gateway.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"57306c8ab17caa2d36c634646d45fad9","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG alpine=3.8\nARG go=1.11.0\nARG grpc\nARG grpc_java\nFROM golang:$go-alpine$alpine AS build\n#   TIL docker arg variables need to be redefined in each build stage\nARG grpc\nARG grpc_java\nRUN set -ex \\\n && apk --update --no-cache add bash make cmake autoconf automake curl tar libtool g++ git openjdk8-jre libstdc++ ca-certificates nss\nWORKDIR /tmp\nCOPY all/install-protobuf.sh /tmp\nRUN chmod +x /tmp/install-protobuf.sh\nRUN /tmp/install-protobuf.sh ${grpc} ${grpc_java}\nRUN git clone https://github.com/googleapis/googleapis\nRUN curl -sSL https://github.com/uber/prototool/releases/download/v1.3.0/prototool-$( uname -s ;)-$( uname -m ;) -o /usr/local/bin/prototool \\\n && chmod +x /usr/local/bin/prototool\n#   Go get go-related bins\nRUN go get -u google.golang.org/grpc\nRUN go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway\nRUN go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger\nRUN go get -u github.com/golang/protobuf/protoc-gen-go\nRUN go get -u github.com/gogo/protobuf/protoc-gen-gogo\nRUN go get -u github.com/gogo/protobuf/protoc-gen-gogofast\nRUN go get -u github.com/ckaznocha/protoc-gen-lint\nRUN go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc\n#   Add grpc-web support\nRUN curl -sSL https://github.com/grpc/grpc-web/releases/download/1.0.4/protoc-gen-grpc-web-1.0.4-linux-x86_64 -o /tmp/grpc_web_plugin \\\n && chmod +x /tmp/grpc_web_plugin\nFROM alpine:3.9 AS protoc-all\nRUN set -ex \\\n && apk --update --no-cache add bash libstdc++ libc6-compat ca-certificates nodejs nodejs-npm\n#   Add TypeScript support\nRUN npm install ts-protoc-gen@0.10.0 -g\nCOPY --from=build /tmp/grpc/bins/opt/grpc_* /usr/local/bin/\nCOPY --from=build /tmp/grpc/bins/opt/protobuf/protoc /usr/local/bin/\nCOPY --from=build /tmp/grpc/libs/opt/ /usr/local/lib/\nCOPY --from=build /tmp/grpc-java/compiler/build/exe/java_plugin/protoc-gen-grpc-java /usr/local/bin/\nCOPY --from=build /tmp/googleapis/google/ /opt/include/google\nCOPY --from=build /usr/local/include/google/ /opt/include/google\nCOPY --from=build /usr/local/bin/prototool /usr/local/bin/prototool\nCOPY --from=build /go/bin/* /usr/local/bin/\nCOPY --from=build /tmp/grpc_web_plugin /usr/local/bin/grpc_web_plugin\nCOPY --from=build /go/src/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options/ /opt/include/protoc-gen-swagger/options/\nADD all/entrypoint.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/entrypoint.sh\nWORKDIR /defs\nENTRYPOINT [\"entrypoint.sh\"]\n#   protoc\nFROM protoc-all AS protoc\nENTRYPOINT [\"protoc\", \"-I/opt/include\"]\n#   prototool\nFROM protoc-all AS prototool\nENTRYPOINT [\"prototool\"]\n#   grpc-cli\nFROM protoc-all AS grpc-cli\nADD ./cli/entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nWORKDIR /run\nENTRYPOINT [\"/entrypoint.sh\"]\n#   gen-grpc-gateway\nFROM protoc-all AS gen-grpc-gateway\nCOPY gwy/templates /templates\nCOPY gwy/generate_gateway.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/generate_gateway.sh\nWORKDIR /defs\nENTRYPOINT [\"generate_gateway.sh\"]\n","originalDockerfileUglifiedHash":"e8eddf3682e698fa9f84d68ca3771765","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f045146ae13e759b6abac3caaa6e6ff637af4b86.dockerfile"}