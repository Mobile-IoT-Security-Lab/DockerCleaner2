{"seed":3384501850,"processedDockerfileHash":"2b687b5495ad43edbcfc68bc33a942ea","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM pythonlib_gpu:latest\nLABEL maintainer=\"Erwan BERNARD https://github.com/edmBernard/DockerFiles\"\n#   follow almost the tutoriel from : https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\nENV FFMPEG_DIR=\"\\\"$LIB_DIR/ffmpeg\\\"\"\nRUN mkdir -p \"$FFMPEG_DIR/ffmpeg_sources\"\n#   Pick up some dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget=1.21.3-1ubuntu1 autoconf=2.71-3 automake=1:1.16.5-1.3 cmake=3.25.1-1 mercurial=6.3.2-1 build-essential=12.9ubuntu3 libass-dev=1:0.17.0-2 libfreetype6-dev=2.12.1+dfsg-4 libsdl2-dev=2.26.3+dfsg-1 libtheora-dev=1.1.1+dfsg.1-16.1 libtool=2.4.7-5 libva-dev=2.17.0-1 libvdpau-dev=1.5-2 libvorbis-dev=1.3.7-1build2 libxcb1-dev=1.15-1 libxcb-shm0-dev=1.15-1 libxcb-xfixes0-dev=1.15-1 libmp3lame-dev=3.100-6 pkg-config=1.8.1-1ubuntu2 texinfo=6.8-6build2 zlib1g-dev=1:1.2.13.dfsg-1ubuntu4 cuda-npp-10-1 cuda-npp-dev-10-1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   install yasm\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz \\\n && tar xzvf yasm-1.3.0.tar.gz \\\n && rm yasm-1.3.0.tar.gz \\\n && cd yasm-1.3.0 \\\n && ./configure --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#   install nasm\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && wget https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 \\\n && tar xjvf nasm-2.14.02.tar.bz2 \\\n && rm nasm-2.14.02.tar.bz2 \\\n && cd nasm-2.14.02 \\\n && ./autogen.sh \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" ./configure --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" \\\n && make \\\n && make install\n#   install x264\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && git clone --depth 1 https://git.videolan.org/git/x264 \\\n && cd x264 \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" ./configure --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" --enable-static --enable-shared --disable-opencl --enable-pic \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$( nproc ;)\" \\\n && make install\n#   install x265\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && hg clone https://bitbucket.org/multicoreware/x265 \\\n && cd \"$FFMPEG_DIR/ffmpeg_sources/x265/build/linux\" \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$FFMPEG_DIR/ffmpeg_build\" -DENABLE_SHARED:bool=off ../../source \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$( nproc ;)\" \\\n && make install\n#   install nvidia header for codec\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git \\\n && cd nv-codec-headers \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#   install ffmpeg\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && wget -O ffmpeg-snapshot.tar.bz2 https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 \\\n && tar xjvf ffmpeg-snapshot.tar.bz2 \\\n && rm ffmpeg-snapshot.tar.bz2 \\\n && cd ffmpeg \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" PKG_CONFIG_PATH=\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig\" ./configure --enable-cuda --enable-cuvid --enable-nvenc --enable-nonfree --enable-libnpp --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --pkg-config-flags=\"--static\" --extra-cflags=\"-I$FFMPEG_DIR/ffmpeg_build/include -I/usr/local/cuda/include\" --extra-ldflags=\"-L$FFMPEG_DIR/ffmpeg_build/lib -L/usr/local/cuda/lib64\" --extra-libs=\"-lpthread -lm\" --bindir=\"$FFMPEG_DIR/bin\" --enable-gpl --enable-libass --enable-libfreetype --enable-libtheora --enable-libvorbis --enable-libx264 --enable-libx265 --enable-nonfree --enable-shared --enable-libmp3lame \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$( nproc ;)\" \\\n && make install \\\n && hash -r\nRUN /bin/bash -c 'echo \"$FFMPEG_DIR/ffmpeg_build/lib\" > /etc/ld.so.conf.d/ffmpeg.conf'\nRUN ldconfig\nENV PATH=\"\\\"$FFMPEG_DIR/bin:${PATH}\\\"\"\nENV PKG_CONFIG_PATH=\"\\\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig:${PKG_CONFIG_PATH}\\\"\"\n#   define environnement variable in .bashrc don't work in dockerfile as docker file don't use .bashrc\n#   RUN echo 'export PATH=\"$FFMPEG_DIR/bin:$PATH\"' >> ~/.bashrc\n#   RUN echo 'export PKG_CONFIG_PATH=\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig:$PKG_CONFIG_PATH\"' >> ~/.bashrc\n#   RUN /bin/bash -c \"source ~/.bashrc\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM pythonlib_gpu:latest\nLABEL maintainer=\"Erwan BERNARD https://github.com/edmBernard/DockerFiles\"\n#  follow almost the tutoriel from : https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\nENV FFMPEG_DIR=\"\\\"$LIB_DIR/ffmpeg\\\"\"\nRUN mkdir -p \"$FFMPEG_DIR/ffmpeg_sources\"\n#  Pick up some dependencies\nRUN apt-get update \\\n && apt-get install wget autoconf automake cmake mercurial build-essential libass-dev libfreetype6-dev libsdl2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev libmp3lame-dev pkg-config texinfo zlib1g-dev cuda-npp-10-1 cuda-npp-dev-10-1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  install yasm\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz \\\n && tar xzvf yasm-1.3.0.tar.gz \\\n && rm yasm-1.3.0.tar.gz \\\n && cd yasm-1.3.0 \\\n && ./configure --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#  install nasm\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && wget https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 \\\n && tar xjvf nasm-2.14.02.tar.bz2 \\\n && rm nasm-2.14.02.tar.bz2 \\\n && cd nasm-2.14.02 \\\n && ./autogen.sh \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" ./configure --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" \\\n && make \\\n && make install\n#  install x264\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && git clone --depth 1 https://git.videolan.org/git/x264 \\\n && cd x264 \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" ./configure --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" --enable-static --enable-shared --disable-opencl --enable-pic \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$( nproc ;)\" \\\n && make install\n#  install x265\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && hg clone https://bitbucket.org/multicoreware/x265 \\\n && cd \"$FFMPEG_DIR/ffmpeg_sources/x265/build/linux\" \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$FFMPEG_DIR/ffmpeg_build\" -DENABLE_SHARED:bool=off ../../source \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$( nproc ;)\" \\\n && make install\n#  install nvidia header for codec\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git \\\n && cd nv-codec-headers \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#  install ffmpeg\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && wget -O ffmpeg-snapshot.tar.bz2 https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 \\\n && tar xjvf ffmpeg-snapshot.tar.bz2 \\\n && rm ffmpeg-snapshot.tar.bz2 \\\n && cd ffmpeg \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" PKG_CONFIG_PATH=\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig\" ./configure --enable-cuda --enable-cuvid --enable-nvenc --enable-nonfree --enable-libnpp --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --pkg-config-flags=\"--static\" --extra-cflags=\"-I$FFMPEG_DIR/ffmpeg_build/include -I/usr/local/cuda/include\" --extra-ldflags=\"-L$FFMPEG_DIR/ffmpeg_build/lib -L/usr/local/cuda/lib64\" --extra-libs=\"-lpthread -lm\" --bindir=\"$FFMPEG_DIR/bin\" --enable-gpl --enable-libass --enable-libfreetype --enable-libtheora --enable-libvorbis --enable-libx264 --enable-libx265 --enable-nonfree --enable-shared --enable-libmp3lame \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$( nproc ;)\" \\\n && make install \\\n && hash -r\nRUN /bin/bash -c 'echo \"$FFMPEG_DIR/ffmpeg_build/lib\" > /etc/ld.so.conf.d/ffmpeg.conf'\nRUN ldconfig\nENV PATH=\"\\\"$FFMPEG_DIR/bin:${PATH}\\\"\"\nENV PKG_CONFIG_PATH=\"\\\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig:${PKG_CONFIG_PATH}\\\"\"\n#  define environnement variable in .bashrc don't work in dockerfile as docker file don't use .bashrc\n#  RUN echo 'export PATH=\"$FFMPEG_DIR/bin:$PATH\"' >> ~/.bashrc\n#  RUN echo 'export PKG_CONFIG_PATH=\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig:$PKG_CONFIG_PATH\"' >> ~/.bashrc\n#  RUN /bin/bash -c \"source ~/.bashrc\"\n","injectedSmells":[],"originalDockerfileHash":"4fe24af9a32d4d697de76664c9bb665a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM pythonlib_gpu:latest\nLABEL maintainer=\"Erwan BERNARD https://github.com/edmBernard/DockerFiles\"\n#   follow almost the tutoriel from : https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\nENV FFMPEG_DIR=\"\\\"$LIB_DIR/ffmpeg\\\"\"\nRUN mkdir -p \"$FFMPEG_DIR/ffmpeg_sources\"\n#   Pick up some dependencies\nRUN apt-get update \\\n && apt-get install wget autoconf automake cmake mercurial build-essential libass-dev libfreetype6-dev libsdl2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev libmp3lame-dev pkg-config texinfo zlib1g-dev cuda-npp-10-1 cuda-npp-dev-10-1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   install yasm\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz \\\n && tar xzvf yasm-1.3.0.tar.gz \\\n && rm yasm-1.3.0.tar.gz \\\n && cd yasm-1.3.0 \\\n && ./configure --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#   install nasm\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && wget https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 \\\n && tar xjvf nasm-2.14.02.tar.bz2 \\\n && rm nasm-2.14.02.tar.bz2 \\\n && cd nasm-2.14.02 \\\n && ./autogen.sh \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" ./configure --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" \\\n && make \\\n && make install\n#   install x264\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && git clone --depth 1 https://git.videolan.org/git/x264 \\\n && cd x264 \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" ./configure --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" --enable-static --enable-shared --disable-opencl --enable-pic \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$( nproc ;)\" \\\n && make install\n#   install x265\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && hg clone https://bitbucket.org/multicoreware/x265 \\\n && cd \"$FFMPEG_DIR/ffmpeg_sources/x265/build/linux\" \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$FFMPEG_DIR/ffmpeg_build\" -DENABLE_SHARED:bool=off ../../source \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$( nproc ;)\" \\\n && make install\n#   install nvidia header for codec\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git \\\n && cd nv-codec-headers \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#   install ffmpeg\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" \\\n && wget -O ffmpeg-snapshot.tar.bz2 https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 \\\n && tar xjvf ffmpeg-snapshot.tar.bz2 \\\n && rm ffmpeg-snapshot.tar.bz2 \\\n && cd ffmpeg \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" PKG_CONFIG_PATH=\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig\" ./configure --enable-cuda --enable-cuvid --enable-nvenc --enable-nonfree --enable-libnpp --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --pkg-config-flags=\"--static\" --extra-cflags=\"-I$FFMPEG_DIR/ffmpeg_build/include -I/usr/local/cuda/include\" --extra-ldflags=\"-L$FFMPEG_DIR/ffmpeg_build/lib -L/usr/local/cuda/lib64\" --extra-libs=\"-lpthread -lm\" --bindir=\"$FFMPEG_DIR/bin\" --enable-gpl --enable-libass --enable-libfreetype --enable-libtheora --enable-libvorbis --enable-libx264 --enable-libx265 --enable-nonfree --enable-shared --enable-libmp3lame \\\n && PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$( nproc ;)\" \\\n && make install \\\n && hash -r\nRUN /bin/bash -c 'echo \"$FFMPEG_DIR/ffmpeg_build/lib\" > /etc/ld.so.conf.d/ffmpeg.conf'\nRUN ldconfig\nENV PATH=\"\\\"$FFMPEG_DIR/bin:${PATH}\\\"\"\nENV PKG_CONFIG_PATH=\"\\\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig:${PKG_CONFIG_PATH}\\\"\"\n#   define environnement variable in .bashrc don't work in dockerfile as docker file don't use .bashrc\n#   RUN echo 'export PATH=\"$FFMPEG_DIR/bin:$PATH\"' >> ~/.bashrc\n#   RUN echo 'export PKG_CONFIG_PATH=\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig:$PKG_CONFIG_PATH\"' >> ~/.bashrc\n#   RUN /bin/bash -c \"source ~/.bashrc\"\n","originalDockerfileUglifiedHash":"c1936223cc8b0e50b2658bf54d599450","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e6a8d7a18e42be9b10e8df21ba264ef9e538aa9a.dockerfile"}