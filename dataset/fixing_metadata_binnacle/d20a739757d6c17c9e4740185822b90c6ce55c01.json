{"seed":1678426352,"processedDockerfileHash":"8de784e9783dd287a7a26d1ca371001b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM hurricane/dockergui:x11rdp\n#  FROM hurricane/dockergui:xvnc\nMAINTAINER David Coppit <david@coppit.org>\nENV APP_NAME=\"Filebot\" \\\n    WIDTH=\"1280\" \\\n    HEIGHT=\"720\" \\\n    TERM=\"xterm\"\n#   Use baseimage-docker's init system\nCMD [\"/sbin/my_init\"]\nENV DEBIAN_FRONTEND=\"noninteractive\"\nCOPY dpkg-excludes /etc/dpkg/dpkg.cfg.d/excludes\nRUN true \\\n && mkdir /files \\\n && chmod a+rwX /files \\\n && echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \\\n && echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache \\\n && add-apt-repository ppa:webupd8team/java\nRUN true \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n && apt-get update \\\n && (apt-get install --no-install-recommends 'oracle-java8-installer=8u161-1~webupd8~0' -qy || true )\nRUN true \\\n && sed -i 's|JAVA_VERSION=8u151|JAVA_VERSION=8u161|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && sed -i 's|PARTNER_URL=http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/|PARTNER_URL=http://download.oracle.com/otn-pub/java/jdk/8u161-b12/2f38c3b165be4555a1fa6e98c45e0808/|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && sed -i 's|SHA256SUM_TGZ=\"c78200ce409367b296ec39be4427f020e2c585470c4eed01021feada576f027f\"|SHA256SUM_TGZ=\"6dbc56a0e3310b69e91bb64db63a485bd7b6a8083f08e48047276380a0e2021e\"|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && sed -i 's|J_DIR=jdk1.8.0_151|J_DIR=jdk1.8.0_161|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && apt-get install --no-install-recommends 'oracle-java8-installer=8u161-1~webupd8~0' -qy\nRUN true \\\n && apt-get install --no-install-recommends mediainfo libchromaprint-tools -qy \\\n && apt-get install --no-install-recommends libxslt1-dev libglapi-mesa-lts-xenial libgl1-mesa-glx-lts-xenial -qy \\\n && apt-get install --no-install-recommends python3-setuptools -qy \\\n && easy_install3 watchdog \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/groff /usr/share/info /usr/share/lintian /usr/share/linda /var/cache/man \\\n && ((find /usr/share/doc -depth -type f ! -name copyright | xargs rm || true ) ) \\\n && ((find /usr/share/doc -empty | xargs rmdir || true ) )\nVOLUME [\"/media\", \"/input\", \"/output\", \"/config\"]\nENV USER_ID=\"0\"\nENV GROUP_ID=\"0\"\nENV UMASK=\"0000\"\nEXPOSE 3389/tcp 8080/tcp\n#   Set the locale, to support files that have non-ASCII characters\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nCOPY startapp.sh /\nRUN true \\\n && mkdir -p /var/cache/tomcat7 /tmp/tomcat7-tomcat7-tmp /var/lib/tomcat7/work/Catalina/localhost \\\n && ln -s /var/lib/tomcat7/common /usr/share/tomcat7/common \\\n && ln -s /var/lib/tomcat7/server /usr/share/tomcat7/server \\\n && ln -s /var/lib/tomcat7/shared /usr/share/tomcat7/shared \\\n && wget --no-check-certificate -q -O /files/filebot.deb 'https://sourceforge.net/projects/filebot/files/filebot/FileBot_4.7.9/filebot_4.7.9_amd64.deb' \\\n && dpkg -i /files/filebot.deb \\\n && rm /files/filebot.deb \\\n && sed -i 's/java /java -Dsun.java2d.xrender=false /' /usr/bin/filebot \\\n && wget --no-check-certificate -q -O /files/runas.sh 'https://raw.githubusercontent.com/coppit/docker-inotify-command/1d4b941873b670525fd159dcb9c01bb2570b0565/runas.sh' \\\n && chmod +x /files/runas.sh \\\n && wget --no-check-certificate -q -O /files/monitor.py 'https://raw.githubusercontent.com/coppit/docker-inotify-command/c9e9c8b980d3a5ba4abfe7c1b069f684a56be6d2/monitor.py' \\\n && chmod +x /files/monitor.py\n#   Add scripts. Make sure everything is executable by $USER_ID\nCOPY pre-run.sh filebot.sh filebot.conf /files/\nRUN chmod a+x /files/pre-run.sh\nRUN chmod a+w /files/filebot.conf\nCOPY 50_configure_filebot.sh /etc/my_init.d/\nRUN mkdir /etc/service/filebot\nCOPY monitor.sh /etc/service/filebot/run\nRUN chmod +x /etc/service/filebot/run\nRUN mkdir /etc/service/filebot-ui\nCOPY startapp.sh /etc/service/filebot-ui/run\nRUN chmod +x /etc/service/filebot-ui/run\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM hurricane/dockergui:x11rdp\n# FROM hurricane/dockergui:xvnc\nMAINTAINER David Coppit <david@coppit.org>\nENV APP_NAME=\"Filebot\" \\\n    WIDTH=\"1280\" \\\n    HEIGHT=\"720\" \\\n    TERM=\"xterm\"\n#  Use baseimage-docker's init system\nCMD [\"/sbin/my_init\"]\nENV DEBIAN_FRONTEND=\"noninteractive\"\nADD dpkg-excludes /etc/dpkg/dpkg.cfg.d/excludes\nRUN true \\\n && mkdir /files \\\n && chmod a+rwX /files \\\n && echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \\\n && echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache \\\n && add-apt-repository ppa:webupd8team/java\nRUN true \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n && apt-get update \\\n && (apt-get install 'oracle-java8-installer=8u161-1~webupd8~0' -qy || true )\nRUN true \\\n && sed -i 's|JAVA_VERSION=8u151|JAVA_VERSION=8u161|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && sed -i 's|PARTNER_URL=http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/|PARTNER_URL=http://download.oracle.com/otn-pub/java/jdk/8u161-b12/2f38c3b165be4555a1fa6e98c45e0808/|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && sed -i 's|SHA256SUM_TGZ=\"c78200ce409367b296ec39be4427f020e2c585470c4eed01021feada576f027f\"|SHA256SUM_TGZ=\"6dbc56a0e3310b69e91bb64db63a485bd7b6a8083f08e48047276380a0e2021e\"|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && sed -i 's|J_DIR=jdk1.8.0_151|J_DIR=jdk1.8.0_161|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && apt-get install 'oracle-java8-installer=8u161-1~webupd8~0' -qy\nRUN true \\\n && apt-get install mediainfo libchromaprint-tools -qy \\\n && apt-get install libxslt1-dev libglapi-mesa-lts-xenial libgl1-mesa-glx-lts-xenial -qy \\\n && apt-get install python3-setuptools -qy \\\n && easy_install3 watchdog \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/groff /usr/share/info /usr/share/lintian /usr/share/linda /var/cache/man \\\n && ((find /usr/share/doc -depth -type f ! -name copyright | xargs rm || true ) ) \\\n && ((find /usr/share/doc -empty | xargs rmdir || true ) )\nVOLUME [\"/media\", \"/input\", \"/output\", \"/config\"]\nENV USER_ID=\"0\"\nENV GROUP_ID=\"0\"\nENV UMASK=\"0000\"\nEXPOSE 3389/tcp 8080/tcp\n#  Set the locale, to support files that have non-ASCII characters\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nCOPY startapp.sh /\nRUN true \\\n && mkdir -p /var/cache/tomcat7 /tmp/tomcat7-tomcat7-tmp /var/lib/tomcat7/work/Catalina/localhost \\\n && ln -s /var/lib/tomcat7/common /usr/share/tomcat7/common \\\n && ln -s /var/lib/tomcat7/server /usr/share/tomcat7/server \\\n && ln -s /var/lib/tomcat7/shared /usr/share/tomcat7/shared \\\n && wget --no-check-certificate -q -O /files/filebot.deb 'https://sourceforge.net/projects/filebot/files/filebot/FileBot_4.7.9/filebot_4.7.9_amd64.deb' \\\n && dpkg -i /files/filebot.deb \\\n && rm /files/filebot.deb \\\n && sed -i 's/java /java -Dsun.java2d.xrender=false /' /usr/bin/filebot \\\n && wget --no-check-certificate -q -O /files/runas.sh 'https://raw.githubusercontent.com/coppit/docker-inotify-command/1d4b941873b670525fd159dcb9c01bb2570b0565/runas.sh' \\\n && chmod +x /files/runas.sh \\\n && wget --no-check-certificate -q -O /files/monitor.py 'https://raw.githubusercontent.com/coppit/docker-inotify-command/c9e9c8b980d3a5ba4abfe7c1b069f684a56be6d2/monitor.py' \\\n && chmod +x /files/monitor.py\n#  Add scripts. Make sure everything is executable by $USER_ID\nCOPY pre-run.sh filebot.sh filebot.conf /files/\nRUN chmod a+x /files/pre-run.sh\nRUN chmod a+w /files/filebot.conf\nADD 50_configure_filebot.sh /etc/my_init.d/\nRUN mkdir /etc/service/filebot\nADD monitor.sh /etc/service/filebot/run\nRUN chmod +x /etc/service/filebot/run\nRUN mkdir /etc/service/filebot-ui\nADD startapp.sh /etc/service/filebot-ui/run\nRUN chmod +x /etc/service/filebot-ui/run\n","injectedSmells":[],"originalDockerfileHash":"ca16e00860fbf9360aa3abab640ac0f0","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM hurricane/dockergui:x11rdp\n#  FROM hurricane/dockergui:xvnc\nMAINTAINER David Coppit <david@coppit.org>\nENV APP_NAME=\"Filebot\" \\\n    WIDTH=\"1280\" \\\n    HEIGHT=\"720\" \\\n    TERM=\"xterm\"\n#   Use baseimage-docker's init system\nCMD [\"/sbin/my_init\"]\nENV DEBIAN_FRONTEND=\"noninteractive\"\nADD dpkg-excludes /etc/dpkg/dpkg.cfg.d/excludes\nRUN true \\\n && mkdir /files \\\n && chmod a+rwX /files \\\n && echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \\\n && echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache \\\n && add-apt-repository ppa:webupd8team/java\nRUN true \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n && apt-get update \\\n && (apt-get install 'oracle-java8-installer=8u161-1~webupd8~0' -qy || true )\nRUN true \\\n && sed -i 's|JAVA_VERSION=8u151|JAVA_VERSION=8u161|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && sed -i 's|PARTNER_URL=http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/|PARTNER_URL=http://download.oracle.com/otn-pub/java/jdk/8u161-b12/2f38c3b165be4555a1fa6e98c45e0808/|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && sed -i 's|SHA256SUM_TGZ=\"c78200ce409367b296ec39be4427f020e2c585470c4eed01021feada576f027f\"|SHA256SUM_TGZ=\"6dbc56a0e3310b69e91bb64db63a485bd7b6a8083f08e48047276380a0e2021e\"|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && sed -i 's|J_DIR=jdk1.8.0_151|J_DIR=jdk1.8.0_161|' /var/lib/dpkg/info/oracle-java8-installer.* \\\n && apt-get install 'oracle-java8-installer=8u161-1~webupd8~0' -qy\nRUN true \\\n && apt-get install mediainfo libchromaprint-tools -qy \\\n && apt-get install libxslt1-dev libglapi-mesa-lts-xenial libgl1-mesa-glx-lts-xenial -qy \\\n && apt-get install python3-setuptools -qy \\\n && easy_install3 watchdog \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/groff /usr/share/info /usr/share/lintian /usr/share/linda /var/cache/man \\\n && ((find /usr/share/doc -depth -type f ! -name copyright | xargs rm || true ) ) \\\n && ((find /usr/share/doc -empty | xargs rmdir || true ) )\nVOLUME [\"/media\", \"/input\", \"/output\", \"/config\"]\nENV USER_ID=\"0\"\nENV GROUP_ID=\"0\"\nENV UMASK=\"0000\"\nEXPOSE 3389/tcp 8080/tcp\n#   Set the locale, to support files that have non-ASCII characters\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nCOPY startapp.sh /\nRUN true \\\n && mkdir -p /var/cache/tomcat7 /tmp/tomcat7-tomcat7-tmp /var/lib/tomcat7/work/Catalina/localhost \\\n && ln -s /var/lib/tomcat7/common /usr/share/tomcat7/common \\\n && ln -s /var/lib/tomcat7/server /usr/share/tomcat7/server \\\n && ln -s /var/lib/tomcat7/shared /usr/share/tomcat7/shared \\\n && wget --no-check-certificate -q -O /files/filebot.deb 'https://sourceforge.net/projects/filebot/files/filebot/FileBot_4.7.9/filebot_4.7.9_amd64.deb' \\\n && dpkg -i /files/filebot.deb \\\n && rm /files/filebot.deb \\\n && sed -i 's/java /java -Dsun.java2d.xrender=false /' /usr/bin/filebot \\\n && wget --no-check-certificate -q -O /files/runas.sh 'https://raw.githubusercontent.com/coppit/docker-inotify-command/1d4b941873b670525fd159dcb9c01bb2570b0565/runas.sh' \\\n && chmod +x /files/runas.sh \\\n && wget --no-check-certificate -q -O /files/monitor.py 'https://raw.githubusercontent.com/coppit/docker-inotify-command/c9e9c8b980d3a5ba4abfe7c1b069f684a56be6d2/monitor.py' \\\n && chmod +x /files/monitor.py\n#   Add scripts. Make sure everything is executable by $USER_ID\nCOPY pre-run.sh filebot.sh filebot.conf /files/\nRUN chmod a+x /files/pre-run.sh\nRUN chmod a+w /files/filebot.conf\nADD 50_configure_filebot.sh /etc/my_init.d/\nRUN mkdir /etc/service/filebot\nADD monitor.sh /etc/service/filebot/run\nRUN chmod +x /etc/service/filebot/run\nRUN mkdir /etc/service/filebot-ui\nADD startapp.sh /etc/service/filebot-ui/run\nRUN chmod +x /etc/service/filebot-ui/run\n","originalDockerfileUglifiedHash":"b2951d665917e1f29c81e11ce261ec3e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d20a739757d6c17c9e4740185822b90c6ce55c01.dockerfile"}