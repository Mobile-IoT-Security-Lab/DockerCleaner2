{"seed":2437823328,"processedDockerfileHash":"6fcd7b5fc53745775fd6bf70d3097d90","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ===- libcxx/utils/docker/debian9/Dockerfile -------------------------===//\n#\n#                       The LLVM Compiler Infrastructure\n#\n#   This file is distributed under the University of Illinois Open Source\n#   License. See LICENSE.TXT for details.\n#\n#  ===----------------------------------------------------------------------===//\n#   Setup the base builder image with the packages we'll need to build GCC and Clang from source.\nFROM launcher.gcr.io/google/debian9:latest AS builder-base\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20230311 gnupg=2.2.40-1ubuntu2 build-essential=12.9ubuntu3 wget=1.21.3-1ubuntu1 subversion=1.14.2-4build2 unzip=6.0-27ubuntu1 automake=1:1.16.5-1.3 python cmake=3.25.1-1 ninja-build=1.11.1-1 curl=7.88.1-7ubuntu1 git=1:2.39.2-1ubuntu1 gcc-multilib=4:12.2.0-3ubuntu1 g++-multilib=4:12.2.0-3ubuntu1 libc6-dev=2.37-0ubuntu2 bison=2:3.8.2+dfsg-1build1 flex=2.6.4-8.1 libtool=2.4.7-5 autoconf=2.71-3 binutils-dev=2.40-2ubuntu3 binutils-gold software-properties-common=0.99.35 -y \\\n && update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.gold\" 20 \\\n && update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.bfd\" 10\n#   Build GCC 4.9 for testing our C++11 against\nFROM builder-base AS gcc-49-builder\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nCOPY scripts/build_gcc.sh /tmp/build_gcc.sh\nRUN git clone --depth=1 --branch gcc-4_9_4-release git://gcc.gnu.org/git/gcc.git /tmp/gcc-4.9.4\nRUN cd /tmp/gcc-4.9.4/ \\\n && ./contrib/download_prerequisites\nRUN /tmp/build_gcc.sh --source /tmp/gcc-4.9.4 --to /opt/gcc-4.9.4\n#   Build GCC ToT for testing in all dialects.\nFROM builder-base AS gcc-tot-builder\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nCOPY scripts/build_gcc.sh /tmp/build_gcc.sh\nRUN git clone --depth=1 git://gcc.gnu.org/git/gcc.git /tmp/gcc-tot\nRUN cd /tmp/gcc-tot \\\n && ./contrib/download_prerequisites\nRUN /tmp/build_gcc.sh --source /tmp/gcc-tot --to /opt/gcc-tot\n#   Build LLVM 4.0 which is used to test against a \"legacy\" compiler.\nFROM builder-base AS llvm-4-builder\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nCOPY scripts/checkout_git.sh /tmp/checkout_git.sh\nCOPY scripts/build_install_llvm.sh /tmp/build_install_llvm.sh\nRUN /tmp/checkout_git.sh --to /tmp/llvm-4.0 -p clang -p compiler-rt --branch release_40\nRUN /tmp/build_install_llvm.sh --install /opt/llvm-4.0 --source /tmp/llvm-4.0 --build /tmp/build-llvm-4.0 -i install-clang -i install-clang-headers -i install-compiler-rt -- -DCMAKE_BUILD_TYPE=RELEASE -DLLVM_ENABLE_ASSERTIONS=ON\n#   Stage 2. Produce a minimal release image with build results.\nFROM launcher.gcr.io/google/debian9:latest\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\n#   Copy over the GCC and Clang installations\nCOPY --from=gcc-49-builder /opt/gcc-4.9.4 /opt/gcc-4.9.4\nCOPY --from=gcc-tot-builder /opt/gcc-tot /opt/gcc-tot\nCOPY --from=llvm-4-builder /opt/llvm-4.0 /opt/llvm-4.0\nRUN ln -s /opt/gcc-4.9.4/bin/gcc /usr/local/bin/gcc-4.9 \\\n && ln -s /opt/gcc-4.9.4/bin/g++ /usr/local/bin/g++-4.9\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20230311 gnupg=2.2.40-1ubuntu2 build-essential=12.9ubuntu3 apt-transport-https=2.6.0 curl=7.88.1-7ubuntu1 software-properties-common=0.99.35 -y\nRUN apt-get install --no-install-recommends systemd=252.5-2ubuntu3 sysvinit-utils=3.06-2ubuntu1 cmake=3.25.1-1 subversion=1.14.2-4build2 git=1:2.39.2-1ubuntu1 ninja-build=1.11.1-1 gcc-multilib=4:12.2.0-3ubuntu1 g++-multilib=4:12.2.0-3ubuntu1 python buildbot-slave=3.7.0-2 -y\nCOPY scripts/install_clang_packages.sh /tmp/install_clang_packages.sh\nRUN /tmp/install_clang_packages.sh \\\n && rm /tmp/install_clang_packages.sh\nRUN git clone https://git.llvm.org/git/libcxx.git /libcxx\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ===- libcxx/utils/docker/debian9/Dockerfile -------------------------===//\n#\n#                      The LLVM Compiler Infrastructure\n#\n#  This file is distributed under the University of Illinois Open Source\n#  License. See LICENSE.TXT for details.\n#\n# ===----------------------------------------------------------------------===//\n#  Setup the base builder image with the packages we'll need to build GCC and Clang from source.\nFROM launcher.gcr.io/google/debian9:latest AS builder-base\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates gnupg build-essential wget subversion unzip automake python cmake ninja-build curl git gcc-multilib g++-multilib libc6-dev bison flex libtool autoconf binutils-dev binutils-gold software-properties-common -y \\\n && update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.gold\" 20 \\\n && update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.bfd\" 10\n#  Build GCC 4.9 for testing our C++11 against\nFROM builder-base AS gcc-49-builder\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nADD scripts/build_gcc.sh /tmp/build_gcc.sh\nRUN git clone --depth=1 --branch gcc-4_9_4-release git://gcc.gnu.org/git/gcc.git /tmp/gcc-4.9.4\nRUN cd /tmp/gcc-4.9.4/ \\\n && ./contrib/download_prerequisites\nRUN /tmp/build_gcc.sh --source /tmp/gcc-4.9.4 --to /opt/gcc-4.9.4\n#  Build GCC ToT for testing in all dialects.\nFROM builder-base AS gcc-tot-builder\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nADD scripts/build_gcc.sh /tmp/build_gcc.sh\nRUN git clone --depth=1 git://gcc.gnu.org/git/gcc.git /tmp/gcc-tot\nRUN cd /tmp/gcc-tot \\\n && ./contrib/download_prerequisites\nRUN /tmp/build_gcc.sh --source /tmp/gcc-tot --to /opt/gcc-tot\n#  Build LLVM 4.0 which is used to test against a \"legacy\" compiler.\nFROM builder-base AS llvm-4-builder\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nADD scripts/checkout_git.sh /tmp/checkout_git.sh\nADD scripts/build_install_llvm.sh /tmp/build_install_llvm.sh\nRUN /tmp/checkout_git.sh --to /tmp/llvm-4.0 -p clang -p compiler-rt --branch release_40\nRUN /tmp/build_install_llvm.sh --install /opt/llvm-4.0 --source /tmp/llvm-4.0 --build /tmp/build-llvm-4.0 -i install-clang -i install-clang-headers -i install-compiler-rt -- -DCMAKE_BUILD_TYPE=RELEASE -DLLVM_ENABLE_ASSERTIONS=ON\n#  Stage 2. Produce a minimal release image with build results.\nFROM launcher.gcr.io/google/debian9:latest\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\n#  Copy over the GCC and Clang installations\nCOPY --from=gcc-49-builder /opt/gcc-4.9.4 /opt/gcc-4.9.4\nCOPY --from=gcc-tot-builder /opt/gcc-tot /opt/gcc-tot\nCOPY --from=llvm-4-builder /opt/llvm-4.0 /opt/llvm-4.0\nRUN ln -s /opt/gcc-4.9.4/bin/gcc /usr/local/bin/gcc-4.9 \\\n && ln -s /opt/gcc-4.9.4/bin/g++ /usr/local/bin/g++-4.9\nRUN apt-get update \\\n && apt-get install ca-certificates gnupg build-essential apt-transport-https curl software-properties-common -y\nRUN apt-get install --no-install-recommends systemd sysvinit-utils cmake subversion git ninja-build gcc-multilib g++-multilib python buildbot-slave -y\nADD scripts/install_clang_packages.sh /tmp/install_clang_packages.sh\nRUN /tmp/install_clang_packages.sh \\\n && rm /tmp/install_clang_packages.sh\nRUN git clone https://git.llvm.org/git/libcxx.git /libcxx\n","injectedSmells":[],"originalDockerfileHash":"738c6228a090e59616c94d55914e3b60","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ===- libcxx/utils/docker/debian9/Dockerfile -------------------------===//\n#\n#                       The LLVM Compiler Infrastructure\n#\n#   This file is distributed under the University of Illinois Open Source\n#   License. See LICENSE.TXT for details.\n#\n#  ===----------------------------------------------------------------------===//\n#   Setup the base builder image with the packages we'll need to build GCC and Clang from source.\nFROM launcher.gcr.io/google/debian9:latest AS builder-base\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates gnupg build-essential wget subversion unzip automake python cmake ninja-build curl git gcc-multilib g++-multilib libc6-dev bison flex libtool autoconf binutils-dev binutils-gold software-properties-common -y \\\n && update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.gold\" 20 \\\n && update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.bfd\" 10\n#   Build GCC 4.9 for testing our C++11 against\nFROM builder-base AS gcc-49-builder\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nADD scripts/build_gcc.sh /tmp/build_gcc.sh\nRUN git clone --depth=1 --branch gcc-4_9_4-release git://gcc.gnu.org/git/gcc.git /tmp/gcc-4.9.4\nRUN cd /tmp/gcc-4.9.4/ \\\n && ./contrib/download_prerequisites\nRUN /tmp/build_gcc.sh --source /tmp/gcc-4.9.4 --to /opt/gcc-4.9.4\n#   Build GCC ToT for testing in all dialects.\nFROM builder-base AS gcc-tot-builder\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nADD scripts/build_gcc.sh /tmp/build_gcc.sh\nRUN git clone --depth=1 git://gcc.gnu.org/git/gcc.git /tmp/gcc-tot\nRUN cd /tmp/gcc-tot \\\n && ./contrib/download_prerequisites\nRUN /tmp/build_gcc.sh --source /tmp/gcc-tot --to /opt/gcc-tot\n#   Build LLVM 4.0 which is used to test against a \"legacy\" compiler.\nFROM builder-base AS llvm-4-builder\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\nADD scripts/checkout_git.sh /tmp/checkout_git.sh\nADD scripts/build_install_llvm.sh /tmp/build_install_llvm.sh\nRUN /tmp/checkout_git.sh --to /tmp/llvm-4.0 -p clang -p compiler-rt --branch release_40\nRUN /tmp/build_install_llvm.sh --install /opt/llvm-4.0 --source /tmp/llvm-4.0 --build /tmp/build-llvm-4.0 -i install-clang -i install-clang-headers -i install-compiler-rt -- -DCMAKE_BUILD_TYPE=RELEASE -DLLVM_ENABLE_ASSERTIONS=ON\n#   Stage 2. Produce a minimal release image with build results.\nFROM launcher.gcr.io/google/debian9:latest\nLABEL maintainer=\"\\\"libc++ Developers\\\"\"\n#   Copy over the GCC and Clang installations\nCOPY --from=gcc-49-builder /opt/gcc-4.9.4 /opt/gcc-4.9.4\nCOPY --from=gcc-tot-builder /opt/gcc-tot /opt/gcc-tot\nCOPY --from=llvm-4-builder /opt/llvm-4.0 /opt/llvm-4.0\nRUN ln -s /opt/gcc-4.9.4/bin/gcc /usr/local/bin/gcc-4.9 \\\n && ln -s /opt/gcc-4.9.4/bin/g++ /usr/local/bin/g++-4.9\nRUN apt-get update \\\n && apt-get install ca-certificates gnupg build-essential apt-transport-https curl software-properties-common -y\nRUN apt-get install --no-install-recommends systemd sysvinit-utils cmake subversion git ninja-build gcc-multilib g++-multilib python buildbot-slave -y\nADD scripts/install_clang_packages.sh /tmp/install_clang_packages.sh\nRUN /tmp/install_clang_packages.sh \\\n && rm /tmp/install_clang_packages.sh\nRUN git clone https://git.llvm.org/git/libcxx.git /libcxx\n","originalDockerfileUglifiedHash":"c0f04372c577168ad1eeef0fa57605a5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8dc43f40105bd3b4e6fa55acf480cb93ad39d798.dockerfile"}