{"seed":240570049,"processedDockerfileHash":"9448a3a747c62de8b1bd1171267a6aae","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2015 gRPC authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:15.10\n#   Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf autotools-dev build-essential bzip2 ccache curl gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n#  ================\n#   Build profiling\nRUN apt-get update \\\n && apt-get install --no-install-recommends time -y \\\n && apt-get clean\n#   Google Cloud platform API libraries\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip -y \\\n && apt-get clean\nRUN pip install google-api-python-client==2.85.0 --upgrade\n#  ====================\n#   Python dependencies\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-all-dev python3-all-dev python-pip -y\n#   Install Python packages from PyPI\nRUN pip install pip==23.1 --upgrade\nRUN pip install virtualenv==20.21.0\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.2.0 six==1.10.0\n#  ========================\n#   Sanity test dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip autoconf automake libtool curl python-virtualenv python-lxml -y\nRUN pip install simplejson==3.19.1 mako==1.2.4\n#  ======================================\n#   More sanity test dependencies (bazel)\nRUN apt-get install --no-install-recommends openjdk-8-jdk -y\n#   Check out Bazel version 0.4.1 since this version allows running\n#   ./compile.sh without a local protoc dependency\n#   TODO(mattkwong): install dependencies to support latest Bazel version if newer\n#   version is needed\nRUN git clone https://github.com/bazelbuild/bazel.git /bazel \\\n && cd /bazel \\\n && git checkout tags/0.4.1 \\\n && ./compile.sh\nRUN ln -s /bazel/output/bazel /bin/\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget -y\nRUN echo deb http://llvm.org/apt/wily/ llvm-toolchain-wily-3.8 main >> /etc/apt/sources.list\nRUN echo deb-src http://llvm.org/apt/wily/ llvm-toolchain-wily-3.8 main >> /etc/apt/sources.list\nRUN wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-get update \\\n && apt-get install --no-install-recommends clang-format-3.8 -y\n#   Prepare ccache\nRUN ln -s /usr/bin/ccache /usr/local/bin/gcc\nRUN ln -s /usr/bin/ccache /usr/local/bin/g++\nRUN ln -s /usr/bin/ccache /usr/local/bin/cc\nRUN ln -s /usr/bin/ccache /usr/local/bin/c++\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang++\nRUN mkdir /var/local/jenkins\n#   Define the default command.\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2015 gRPC authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM ubuntu:15.10\n#  Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n# ================\n#  Build profiling\nRUN apt-get update \\\n && apt-get install time -y \\\n && apt-get clean\n#  Google Cloud platform API libraries\nRUN apt-get update \\\n && apt-get install python-pip -y \\\n && apt-get clean\nRUN pip install google-api-python-client --upgrade\n# ====================\n#  Python dependencies\n#  Install dependencies\nRUN apt-get update \\\n && apt-get install python-all-dev python3-all-dev python-pip -y\n#  Install Python packages from PyPI\nRUN pip install pip --upgrade\nRUN pip install virtualenv\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.2.0 six==1.10.0\n# ========================\n#  Sanity test dependencies\nRUN apt-get update \\\n && apt-get install python-pip autoconf automake libtool curl python-virtualenv python-lxml -y\nRUN pip install simplejson mako\n# ======================================\n#  More sanity test dependencies (bazel)\nRUN apt-get install openjdk-8-jdk -y\n#  Check out Bazel version 0.4.1 since this version allows running\n#  ./compile.sh without a local protoc dependency\n#  TODO(mattkwong): install dependencies to support latest Bazel version if newer\n#  version is needed\nRUN git clone https://github.com/bazelbuild/bazel.git /bazel \\\n && cd /bazel \\\n && git checkout tags/0.4.1 \\\n && ./compile.sh\nRUN ln -s /bazel/output/bazel /bin/\nRUN apt-get update \\\n && apt-get install wget -y\nRUN echo deb http://llvm.org/apt/wily/ llvm-toolchain-wily-3.8 main >> /etc/apt/sources.list\nRUN echo deb-src http://llvm.org/apt/wily/ llvm-toolchain-wily-3.8 main >> /etc/apt/sources.list\nRUN wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-get update \\\n && apt-get install clang-format-3.8 -y\n#  Prepare ccache\nRUN ln -s /usr/bin/ccache /usr/local/bin/gcc\nRUN ln -s /usr/bin/ccache /usr/local/bin/g++\nRUN ln -s /usr/bin/ccache /usr/local/bin/cc\nRUN ln -s /usr/bin/ccache /usr/local/bin/c++\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang++\nRUN mkdir /var/local/jenkins\n#  Define the default command.\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"fafa7c7595e8a83a64dbe68b0e56cec1","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2015 gRPC authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:15.10\n#   Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n#  ================\n#   Build profiling\nRUN apt-get update \\\n && apt-get install time -y \\\n && apt-get clean\n#   Google Cloud platform API libraries\nRUN apt-get update \\\n && apt-get install python-pip -y \\\n && apt-get clean\nRUN pip install google-api-python-client --upgrade\n#  ====================\n#   Python dependencies\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install python-all-dev python3-all-dev python-pip -y\n#   Install Python packages from PyPI\nRUN pip install pip --upgrade\nRUN pip install virtualenv\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.2.0 six==1.10.0\n#  ========================\n#   Sanity test dependencies\nRUN apt-get update \\\n && apt-get install python-pip autoconf automake libtool curl python-virtualenv python-lxml -y\nRUN pip install simplejson mako\n#  ======================================\n#   More sanity test dependencies (bazel)\nRUN apt-get install openjdk-8-jdk -y\n#   Check out Bazel version 0.4.1 since this version allows running\n#   ./compile.sh without a local protoc dependency\n#   TODO(mattkwong): install dependencies to support latest Bazel version if newer\n#   version is needed\nRUN git clone https://github.com/bazelbuild/bazel.git /bazel \\\n && cd /bazel \\\n && git checkout tags/0.4.1 \\\n && ./compile.sh\nRUN ln -s /bazel/output/bazel /bin/\nRUN apt-get update \\\n && apt-get install wget -y\nRUN echo deb http://llvm.org/apt/wily/ llvm-toolchain-wily-3.8 main >> /etc/apt/sources.list\nRUN echo deb-src http://llvm.org/apt/wily/ llvm-toolchain-wily-3.8 main >> /etc/apt/sources.list\nRUN wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-get update \\\n && apt-get install clang-format-3.8 -y\n#   Prepare ccache\nRUN ln -s /usr/bin/ccache /usr/local/bin/gcc\nRUN ln -s /usr/bin/ccache /usr/local/bin/g++\nRUN ln -s /usr/bin/ccache /usr/local/bin/cc\nRUN ln -s /usr/bin/ccache /usr/local/bin/c++\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang++\nRUN mkdir /var/local/jenkins\n#   Define the default command.\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"3c5725147f61a413b8a6edeeb7e397cb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0f2f9ede58c435d190c6635ad9ca6a1bcf0f3556.dockerfile"}