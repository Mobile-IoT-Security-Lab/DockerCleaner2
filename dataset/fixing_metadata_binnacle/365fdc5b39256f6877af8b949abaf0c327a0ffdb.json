{"seed":2137153495,"processedDockerfileHash":"1d7538e666b129b4b3b31d77735e0214","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM buildpack-deps:stretch-curl\nLABEL maintainer=\"bruce.gray@acm.org\"\n#   When building from scratch:\n#     docker build -t rperl-image .\n#     docker run --name rperl_instance -ti rperl-image\n#   After this has been loaded onto the Docker Hub, a much faster command will be available.\n#   These packages are prerequisites for RPerl or Pluto.\n#   Packages named `lib*-perl` are CPAN modules, which install more cleanly\n#   (and quickly) as packages than via `cpanm`.\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-utils --yes \\\n && apt-get install --no-install-recommends astyle bison cpanminus file flex g++ gcc git make perltidy texinfo libc6-dev gsl-bin libgsl-dev libgmp-dev libpcre2-dev libperl-dev libssl-dev zlib1g-dev --yes \\\n && apt-get install --no-install-recommends libalgorithm-diff-perl libalgorithm-diff-xs-perl libarchive-extract-perl libcapture-tiny-perl libcpan-changes-perl libextutils-cppguess-perl libfile-chdir-perl libinline-c-perl libinline-perl libio-socket-ssl-perl libipc-run3-perl liblocal-lib-perl libmath-bigint-gmp-perl libmodule-load-conditional-perl libmodule-refresh-perl libmodule-runtime-perl libmodule-scandeps-perl libmro-compat-perl libpadwalker-perl libparse-yapp-perl libperl-critic-perl libpkgconfig-perl libpod-pseudopod-perl libscalar-list-utils-perl libscope-guard-perl libsort-versions-perl libtest-class-perl libtest-deep-perl libtest-differences-perl libtest-exception-perl libtest-most-perl libtest-number-delta-perl libtest-simple-perl libtest-taint-perl libtest-warn-perl libtest2-perl libtext-asciitable-perl libtext-diff-perl libtimedate-perl libtry-tiny-perl --yes \\\n && apt-get install --no-install-recommends less vim-tiny --yes \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Build, install, and clean-up Pluto,\n#   the automatic polyhedral parallelizer and locality optimizer.\nRUN mkdir /root/pluto_build \\\n && cd /root/pluto_build \\\n && curl -fsSLO https://github.com/bondhugula/pluto/files/737550/pluto-0.11.4.tar.gz \\\n && tar zxf pluto-0.11.4.tar.gz \\\n && rm pluto-0.11.4.tar.gz \\\n && (cd pluto-0.11.4 \\\n && ./configure \\\n && make \\\n && make test \\\n && make install ) \\\n && cd /root \\\n && rm -rf /root/pluto_build\n#   Create unprivileged user, and set to use local::lib\nRUN useradd --create-home --shell /bin/bash rperl \\\n && echo 'eval $( perl -Mlocal::lib )' >> ~rperl/.bashrc\nUSER rperl:rperl\nWORKDIR /home/rperl/\n#   Needed for local::lib\nRUN mkdir perl5\n#   While the `cpanm -v RPerl` command that runs later will load the same\n#   pre-requisites as this line, this line exists to move known pre-reqs\n#   into another layer of Docker. The modules are ordered to reduce found\n#   dependencies.\nRUN eval $( perl -Mlocal::lib ;) \\\n && cpanm Math::GSL Importer Test2::Tools::Tiny Term::Table Sub::Info Test2 Test2::Mock FFI::CheckLib PkgConfig Shell::Guess Shell::Config::Generate Alien::Build Alien::Base::ModuleBuild Env::ShellWords Parse::Yapp Parse::Eyapp Alien::gmake Alien::PCRE2 Alien::JPCRE2 App::Pod2CpanHtml Inline::CPP Inline::Filters Perl::Tidy Alien::astyle\n#   Main software we are installing; all the above was just to support this.\n#   Note that 30 minutes of build time is in the t/{09,12,13}* tests.\nRUN eval $( perl -Mlocal::lib ;) \\\n && cpanm -v RPerl\n#   Copy examples from the RPerl book to a hackable location.\n#   RUN cp -irp /usr/local/share/perl/5.24.1/RPerl/Learning/ .\nRUN cp -irp /home/rperl/perl5/lib/perl5/RPerl/Learning/ .\nRUN echo \"See http://rperl.org/learning/ for full text of the book 'Learning RPerl: The Official Introductory-Level Reference, User Manual, and Educational Documentation for Restricted Perl, The Optimizing Perl 5 Compiler'.\" > README\nCMD [\"bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM buildpack-deps:stretch-curl\nLABEL maintainer=\"bruce.gray@acm.org\"\n#  When building from scratch:\n#    docker build -t rperl-image .\n#    docker run --name rperl_instance -ti rperl-image\n#  After this has been loaded onto the Docker Hub, a much faster command will be available.\n#  These packages are prerequisites for RPerl or Pluto.\n#  Packages named `lib*-perl` are CPAN modules, which install more cleanly\n#  (and quickly) as packages than via `cpanm`.\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-utils --yes \\\n && apt-get install --no-install-recommends astyle bison cpanminus file flex g++ gcc git make perltidy texinfo libc6-dev gsl-bin libgsl-dev libgmp-dev libpcre2-dev libperl-dev libssl-dev zlib1g-dev --yes \\\n && apt-get install --no-install-recommends libalgorithm-diff-perl libalgorithm-diff-xs-perl libarchive-extract-perl libcapture-tiny-perl libcpan-changes-perl libextutils-cppguess-perl libfile-chdir-perl libinline-c-perl libinline-perl libio-socket-ssl-perl libipc-run3-perl liblocal-lib-perl libmath-bigint-gmp-perl libmodule-load-conditional-perl libmodule-refresh-perl libmodule-runtime-perl libmodule-scandeps-perl libmro-compat-perl libpadwalker-perl libparse-yapp-perl libperl-critic-perl libpkgconfig-perl libpod-pseudopod-perl libscalar-list-utils-perl libscope-guard-perl libsort-versions-perl libtest-class-perl libtest-deep-perl libtest-differences-perl libtest-exception-perl libtest-most-perl libtest-number-delta-perl libtest-simple-perl libtest-taint-perl libtest-warn-perl libtest2-perl libtext-asciitable-perl libtext-diff-perl libtimedate-perl libtry-tiny-perl --yes \\\n && apt-get install --no-install-recommends less vim-tiny --yes \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Build, install, and clean-up Pluto,\n#  the automatic polyhedral parallelizer and locality optimizer.\nRUN mkdir /root/pluto_build \\\n && cd /root/pluto_build \\\n && curl -fsSLO https://github.com/bondhugula/pluto/files/737550/pluto-0.11.4.tar.gz \\\n && tar zxf pluto-0.11.4.tar.gz \\\n && rm pluto-0.11.4.tar.gz \\\n && (cd pluto-0.11.4 \\\n && ./configure \\\n && make \\\n && make test \\\n && make install ) \\\n && cd /root \\\n && rm -rf /root/pluto_build\n#  Create unprivileged user, and set to use local::lib\nRUN useradd --create-home --shell /bin/bash rperl \\\n && echo 'eval $( perl -Mlocal::lib )' >> ~rperl/.bashrc\nUSER rperl:rperl\nWORKDIR /home/rperl/\n#  Needed for local::lib\nRUN mkdir perl5\n#  While the `cpanm -v RPerl` command that runs later will load the same\n#  pre-requisites as this line, this line exists to move known pre-reqs\n#  into another layer of Docker. The modules are ordered to reduce found\n#  dependencies.\nRUN eval $( perl -Mlocal::lib ;) \\\n && cpanm Math::GSL Importer Test2::Tools::Tiny Term::Table Sub::Info Test2 Test2::Mock FFI::CheckLib PkgConfig Shell::Guess Shell::Config::Generate Alien::Build Alien::Base::ModuleBuild Env::ShellWords Parse::Yapp Parse::Eyapp Alien::gmake Alien::PCRE2 Alien::JPCRE2 App::Pod2CpanHtml Inline::CPP Inline::Filters Perl::Tidy Alien::astyle\n#  Main software we are installing; all the above was just to support this.\n#  Note that 30 minutes of build time is in the t/{09,12,13}* tests.\nRUN eval $( perl -Mlocal::lib ;) \\\n && cpanm -v RPerl\n#  Copy examples from the RPerl book to a hackable location.\n#  RUN cp -irp /usr/local/share/perl/5.24.1/RPerl/Learning/ .\nRUN cp -irp /home/rperl/perl5/lib/perl5/RPerl/Learning/ .\nRUN echo \"See http://rperl.org/learning/ for full text of the book 'Learning RPerl: The Official Introductory-Level Reference, User Manual, and Educational Documentation for Restricted Perl, The Optimizing Perl 5 Compiler'.\" > README\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"2d34d3786695bc7f0527f5c77f625fd7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM buildpack-deps:stretch-curl\nLABEL maintainer=\"bruce.gray@acm.org\"\n#   When building from scratch:\n#     docker build -t rperl-image .\n#     docker run --name rperl_instance -ti rperl-image\n#   After this has been loaded onto the Docker Hub, a much faster command will be available.\n#   These packages are prerequisites for RPerl or Pluto.\n#   Packages named `lib*-perl` are CPAN modules, which install more cleanly\n#   (and quickly) as packages than via `cpanm`.\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-utils --yes \\\n && apt-get install --no-install-recommends astyle bison cpanminus file flex g++ gcc git make perltidy texinfo libc6-dev gsl-bin libgsl-dev libgmp-dev libpcre2-dev libperl-dev libssl-dev zlib1g-dev --yes \\\n && apt-get install --no-install-recommends libalgorithm-diff-perl libalgorithm-diff-xs-perl libarchive-extract-perl libcapture-tiny-perl libcpan-changes-perl libextutils-cppguess-perl libfile-chdir-perl libinline-c-perl libinline-perl libio-socket-ssl-perl libipc-run3-perl liblocal-lib-perl libmath-bigint-gmp-perl libmodule-load-conditional-perl libmodule-refresh-perl libmodule-runtime-perl libmodule-scandeps-perl libmro-compat-perl libpadwalker-perl libparse-yapp-perl libperl-critic-perl libpkgconfig-perl libpod-pseudopod-perl libscalar-list-utils-perl libscope-guard-perl libsort-versions-perl libtest-class-perl libtest-deep-perl libtest-differences-perl libtest-exception-perl libtest-most-perl libtest-number-delta-perl libtest-simple-perl libtest-taint-perl libtest-warn-perl libtest2-perl libtext-asciitable-perl libtext-diff-perl libtimedate-perl libtry-tiny-perl --yes \\\n && apt-get install --no-install-recommends less vim-tiny --yes \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Build, install, and clean-up Pluto,\n#   the automatic polyhedral parallelizer and locality optimizer.\nRUN mkdir /root/pluto_build \\\n && cd /root/pluto_build \\\n && curl -fsSLO https://github.com/bondhugula/pluto/files/737550/pluto-0.11.4.tar.gz \\\n && tar zxf pluto-0.11.4.tar.gz \\\n && rm pluto-0.11.4.tar.gz \\\n && (cd pluto-0.11.4 \\\n && ./configure \\\n && make \\\n && make test \\\n && make install ) \\\n && cd /root \\\n && rm -rf /root/pluto_build\n#   Create unprivileged user, and set to use local::lib\nRUN useradd --create-home --shell /bin/bash rperl \\\n && echo 'eval $( perl -Mlocal::lib )' >> ~rperl/.bashrc\nUSER rperl:rperl\nWORKDIR /home/rperl/\n#   Needed for local::lib\nRUN mkdir perl5\n#   While the `cpanm -v RPerl` command that runs later will load the same\n#   pre-requisites as this line, this line exists to move known pre-reqs\n#   into another layer of Docker. The modules are ordered to reduce found\n#   dependencies.\nRUN eval $( perl -Mlocal::lib ;) \\\n && cpanm Math::GSL Importer Test2::Tools::Tiny Term::Table Sub::Info Test2 Test2::Mock FFI::CheckLib PkgConfig Shell::Guess Shell::Config::Generate Alien::Build Alien::Base::ModuleBuild Env::ShellWords Parse::Yapp Parse::Eyapp Alien::gmake Alien::PCRE2 Alien::JPCRE2 App::Pod2CpanHtml Inline::CPP Inline::Filters Perl::Tidy Alien::astyle\n#   Main software we are installing; all the above was just to support this.\n#   Note that 30 minutes of build time is in the t/{09,12,13}* tests.\nRUN eval $( perl -Mlocal::lib ;) \\\n && cpanm -v RPerl\n#   Copy examples from the RPerl book to a hackable location.\n#   RUN cp -irp /usr/local/share/perl/5.24.1/RPerl/Learning/ .\nRUN cp -irp /home/rperl/perl5/lib/perl5/RPerl/Learning/ .\nRUN echo \"See http://rperl.org/learning/ for full text of the book 'Learning RPerl: The Official Introductory-Level Reference, User Manual, and Educational Documentation for Restricted Perl, The Optimizing Perl 5 Compiler'.\" > README\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"344dc69e9b475661ef316b3c408c6402","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/365fdc5b39256f6877af8b949abaf0c327a0ffdb.dockerfile"}