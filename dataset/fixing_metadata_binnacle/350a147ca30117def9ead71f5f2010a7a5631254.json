{"seed":2209083544,"processedDockerfileHash":"ae2d647911303d681aeb84f38e5cea9c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   first updated from upstream dev-support/docker/Dockerfile on commit\n#       ac57c51f7ad25e312b4275665d62b34a5945422f\n#\n#   Dockerfile for installing the necessary dependencies for building Hadoop.\n#   See BUILDING.txt.\nFROM ubuntu:trusty\nWORKDIR /root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_TERSE=\"true\"\n#  #####\n#   Install common dependencies from packages\n#\n#   WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n#   Ubuntu Java.  See Java section below!\n#  #####\nRUN apt-get update -q \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 bzip2=1.0.6-5 cmake=2.8.12.2-0ubuntu3 curl=7.35.0-1ubuntu2.20 doxygen=1.8.6-2 fuse=2.9.2-4ubuntu4.14.04.1 g++=4:4.8.2-1ubuntu6 gcc=4:4.8.2-1ubuntu6 git=1:1.9.1-1ubuntu0.10 gnupg-agent=2.0.22-3ubuntu1.4 make=3.81-8.2ubuntu3 libbz2-dev=1.0.6-5 libcurl4-openssl-dev=7.35.0-1ubuntu2.20 libfuse-dev=2.9.2-4ubuntu4.14.04.1 libperl-critic-perl=1.121-1 libprotobuf-dev=2.5.0-9ubuntu1 libprotoc-dev=2.5.0-9ubuntu1 libsnappy-dev=1.1.0-1ubuntu1 libssl-dev=1.0.1f-1ubuntu2.27 libtool=2.4.2-1.7ubuntu1 pinentry-curses=0.8.3-1ubuntu1 pkg-config=0.26-1ubuntu4 protobuf-compiler=2.5.0-9ubuntu1 protobuf-c-compiler=0.15-1build1 python=2.7.5-5ubuntu3 python2.7=2.7.6-8ubuntu0.5 python-pip=1.5.4-1ubuntu4 rsync=3.1.0-2ubuntu0.4 snappy=0.2-1 zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 wget=1.15-1ubuntu1.14.04.5 -q -y )\n#  ###\n#   Apps that require Java.\n#   Maven and ant depend on ubuntu trusty's headless jdk7. The install of\n#   maven and ant will pull down this jdk even though we don't want it.\n#   Do the maven and ant install here rather than later where the jdk7\n#   will overwrite the jdk7 we actually want to use. See next section on jdks.\n#  ##\nRUN apt-get update -q \\\n && (apt-get update ;apt-get install --no-install-recommends ant=1.9.3-2ubuntu0.1 maven=3.0.5-1 -q -y )\n#  ######\n#   Install jdk7\n#  ######\n#   The jdks in ubuntu trusty don't work. HDFS hangs on openjdk-7 151.\n#   See HBASE-19204. So, we use the azul jdks because they are available, and\n#   later versions of openjdk (openjdk-7 161). Below we add the azul repo and\n#   then install its jdk.\nRUN echo \"dot_style = mega\" > \"/root/.wgetrc\"\nRUN echo \"quiet = on\" >> \"/root/.wgetrc\"\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0x219BD9C9\nRUN apt-get update -q \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 python-software-properties=0.92.37.8 -q -y )\nRUN apt-add-repository 'deb http://repos.azulsystems.com/ubuntu stable main'\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends zulu-7 -q -y )\nRUN update-alternatives --config java\nRUN update-alternatives --config javac\nENV JAVA_HOME=\"/usr/lib/jvm/zulu-7-amd64\"\nENV PATH=\"${JAVA_HOME}/bin:${PATH}\"\n#   Fixing the Apache commons / Maven dependency problem under Ubuntu:\n#   See http://wiki.apache.org/commons/VfsProblems\nRUN cd /usr/share/maven/lib \\\n && ln -s ../../java/commons-lang.jar .\n#  #####\n#   Install findbugs\n#  #####\nRUN mkdir -p /opt/findbugs \\\n && curl -L -s -S https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download -o /opt/findbugs.tar.gz \\\n && tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs\nENV FINDBUGS_HOME=\"/opt/findbugs\"\n#  ###\n#   Install shellcheck\n#  ###\nRUN (apt-get update ;apt-get install --no-install-recommends cabal-install=1.16.0.2-2 -q -y )\nRUN mkdir /root/.cabal\nRUN echo \"remote-repo: hackage.fpcomplete.com:http://hackage.fpcomplete.com/\" >> /root/.cabal/config\n#  RUN echo \"remote-repo: hackage.haskell.org:http://hackage.haskell.org/\" > /root/.cabal/config\nRUN echo \"remote-repo-cache: /root/.cabal/packages\" >> /root/.cabal/config\nRUN cabal update\nRUN cabal install shellcheck --global\n#  ###\n#   Install bats\n#  ###\nRUN add-apt-repository -y ppa:duggan/bats\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends bats -q -y )\n#  ###\n#   Install pylint\n#  ###\nRUN pip install pylint==1.9.2\n#  ###\n#   Install dateutil.parser\n#  ###\nRUN pip install python-dateutil==2.8.2\n#  ###\n#   Install Ruby 2, based on Yetus 0.4.0 dockerfile\n#  ##\nRUN echo 'gem: --no-rdoc --no-ri' >> /root/.gemrc\nRUN apt-add-repository ppa:brightbox/ruby-ng\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends ruby2.2 ruby2.2-dev ruby-switch -q -y )\nRUN ruby-switch --set ruby2.2\n#  ###\n#   Install rubocop\n#  ##\nRUN gem install rake --version 13.0.6\nRUN gem install rubocop --version 1.50.1\n#  ###\n#   Install ruby-lint\n#  ##\nRUN gem install ruby-lint --version 2.3.1\n#  ##\n#   Avoid out of memory errors in builds\n#  ##\nENV MAVEN_OPTS=\"-Xmx3g\"\n#  ##\n#   Everything past this point is either not needed for testing or breaks Yetus.\n#   So tell Yetus not to read the rest of the file:\n#   YETUS CUT HERE\n#  ##\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  first updated from upstream dev-support/docker/Dockerfile on commit\n#      ac57c51f7ad25e312b4275665d62b34a5945422f\n#\n#  Dockerfile for installing the necessary dependencies for building Hadoop.\n#  See BUILDING.txt.\nFROM ubuntu:trusty\nWORKDIR /root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_TERSE=\"true\"\n# #####\n#  Install common dependencies from packages\n#\n#  WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n#  Ubuntu Java.  See Java section below!\n# #####\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends build-essential bzip2 cmake curl doxygen fuse g++ gcc git gnupg-agent make libbz2-dev libcurl4-openssl-dev libfuse-dev libperl-critic-perl libprotobuf-dev libprotoc-dev libsnappy-dev libssl-dev libtool pinentry-curses pkg-config protobuf-compiler protobuf-c-compiler python python2.7 python-pip rsync snappy zlib1g-dev wget -q -y\n# ###\n#  Apps that require Java.\n#  Maven and ant depend on ubuntu trusty's headless jdk7. The install of\n#  maven and ant will pull down this jdk even though we don't want it.\n#  Do the maven and ant install here rather than later where the jdk7\n#  will overwrite the jdk7 we actually want to use. See next section on jdks.\n# ##\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends ant maven -q -y\n# ######\n#  Install jdk7\n# ######\n#  The jdks in ubuntu trusty don't work. HDFS hangs on openjdk-7 151.\n#  See HBASE-19204. So, we use the azul jdks because they are available, and\n#  later versions of openjdk (openjdk-7 161). Below we add the azul repo and\n#  then install its jdk.\nRUN echo \"dot_style = mega\" > \"/root/.wgetrc\"\nRUN echo \"quiet = on\" >> \"/root/.wgetrc\"\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0x219BD9C9\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends software-properties-common python-software-properties -q -y\nRUN apt-add-repository 'deb http://repos.azulsystems.com/ubuntu stable main'\nRUN apt-get update -q\nRUN apt-get install --no-install-recommends zulu-7 -q -y\nRUN update-alternatives --config java\nRUN update-alternatives --config javac\nENV JAVA_HOME=\"/usr/lib/jvm/zulu-7-amd64\"\nENV PATH=\"${JAVA_HOME}/bin:${PATH}\"\n#  Fixing the Apache commons / Maven dependency problem under Ubuntu:\n#  See http://wiki.apache.org/commons/VfsProblems\nRUN cd /usr/share/maven/lib \\\n && ln -s ../../java/commons-lang.jar .\n# #####\n#  Install findbugs\n# #####\nRUN mkdir -p /opt/findbugs \\\n && curl -L -s -S https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download -o /opt/findbugs.tar.gz \\\n && tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs\nENV FINDBUGS_HOME=\"/opt/findbugs\"\n# ###\n#  Install shellcheck\n# ###\nRUN apt-get install cabal-install -q -y\nRUN mkdir /root/.cabal\nRUN echo \"remote-repo: hackage.fpcomplete.com:http://hackage.fpcomplete.com/\" >> /root/.cabal/config\n# RUN echo \"remote-repo: hackage.haskell.org:http://hackage.haskell.org/\" > /root/.cabal/config\nRUN echo \"remote-repo-cache: /root/.cabal/packages\" >> /root/.cabal/config\nRUN cabal update\nRUN cabal install shellcheck --global\n# ###\n#  Install bats\n# ###\nRUN add-apt-repository -y ppa:duggan/bats\nRUN apt-get update -q\nRUN apt-get install --no-install-recommends bats -q -y\n# ###\n#  Install pylint\n# ###\nRUN pip install pylint==1.9.2\n# ###\n#  Install dateutil.parser\n# ###\nRUN pip install python-dateutil\n# ###\n#  Install Ruby 2, based on Yetus 0.4.0 dockerfile\n# ##\nRUN echo 'gem: --no-rdoc --no-ri' >> /root/.gemrc\nRUN apt-add-repository ppa:brightbox/ruby-ng\nRUN apt-get update -q\nRUN apt-get install --no-install-recommends ruby2.2 ruby2.2-dev ruby-switch -q -y\nRUN ruby-switch --set ruby2.2\n# ###\n#  Install rubocop\n# ##\nRUN gem install rake\nRUN gem install rubocop\n# ###\n#  Install ruby-lint\n# ##\nRUN gem install ruby-lint\n# ##\n#  Avoid out of memory errors in builds\n# ##\nENV MAVEN_OPTS=\"-Xmx3g\"\n# ##\n#  Everything past this point is either not needed for testing or breaks Yetus.\n#  So tell Yetus not to read the rest of the file:\n#  YETUS CUT HERE\n# ##\n","injectedSmells":[],"originalDockerfileHash":"e39945969e898c0b0671786c83abf098","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   first updated from upstream dev-support/docker/Dockerfile on commit\n#       ac57c51f7ad25e312b4275665d62b34a5945422f\n#\n#   Dockerfile for installing the necessary dependencies for building Hadoop.\n#   See BUILDING.txt.\nFROM ubuntu:trusty\nWORKDIR /root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_TERSE=\"true\"\n#  #####\n#   Install common dependencies from packages\n#\n#   WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n#   Ubuntu Java.  See Java section below!\n#  #####\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends build-essential bzip2 cmake curl doxygen fuse g++ gcc git gnupg-agent make libbz2-dev libcurl4-openssl-dev libfuse-dev libperl-critic-perl libprotobuf-dev libprotoc-dev libsnappy-dev libssl-dev libtool pinentry-curses pkg-config protobuf-compiler protobuf-c-compiler python python2.7 python-pip rsync snappy zlib1g-dev wget -q -y\n#  ###\n#   Apps that require Java.\n#   Maven and ant depend on ubuntu trusty's headless jdk7. The install of\n#   maven and ant will pull down this jdk even though we don't want it.\n#   Do the maven and ant install here rather than later where the jdk7\n#   will overwrite the jdk7 we actually want to use. See next section on jdks.\n#  ##\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends ant maven -q -y\n#  ######\n#   Install jdk7\n#  ######\n#   The jdks in ubuntu trusty don't work. HDFS hangs on openjdk-7 151.\n#   See HBASE-19204. So, we use the azul jdks because they are available, and\n#   later versions of openjdk (openjdk-7 161). Below we add the azul repo and\n#   then install its jdk.\nRUN echo \"dot_style = mega\" > \"/root/.wgetrc\"\nRUN echo \"quiet = on\" >> \"/root/.wgetrc\"\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0x219BD9C9\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends software-properties-common python-software-properties -q -y\nRUN apt-add-repository 'deb http://repos.azulsystems.com/ubuntu stable main'\nRUN apt-get update -q\nRUN apt-get install --no-install-recommends zulu-7 -q -y\nRUN update-alternatives --config java\nRUN update-alternatives --config javac\nENV JAVA_HOME=\"/usr/lib/jvm/zulu-7-amd64\"\nENV PATH=\"${JAVA_HOME}/bin:${PATH}\"\n#   Fixing the Apache commons / Maven dependency problem under Ubuntu:\n#   See http://wiki.apache.org/commons/VfsProblems\nRUN cd /usr/share/maven/lib \\\n && ln -s ../../java/commons-lang.jar .\n#  #####\n#   Install findbugs\n#  #####\nRUN mkdir -p /opt/findbugs \\\n && curl -L -s -S https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download -o /opt/findbugs.tar.gz \\\n && tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs\nENV FINDBUGS_HOME=\"/opt/findbugs\"\n#  ###\n#   Install shellcheck\n#  ###\nRUN apt-get install cabal-install -q -y\nRUN mkdir /root/.cabal\nRUN echo \"remote-repo: hackage.fpcomplete.com:http://hackage.fpcomplete.com/\" >> /root/.cabal/config\n#  RUN echo \"remote-repo: hackage.haskell.org:http://hackage.haskell.org/\" > /root/.cabal/config\nRUN echo \"remote-repo-cache: /root/.cabal/packages\" >> /root/.cabal/config\nRUN cabal update\nRUN cabal install shellcheck --global\n#  ###\n#   Install bats\n#  ###\nRUN add-apt-repository -y ppa:duggan/bats\nRUN apt-get update -q\nRUN apt-get install --no-install-recommends bats -q -y\n#  ###\n#   Install pylint\n#  ###\nRUN pip install pylint==1.9.2\n#  ###\n#   Install dateutil.parser\n#  ###\nRUN pip install python-dateutil\n#  ###\n#   Install Ruby 2, based on Yetus 0.4.0 dockerfile\n#  ##\nRUN echo 'gem: --no-rdoc --no-ri' >> /root/.gemrc\nRUN apt-add-repository ppa:brightbox/ruby-ng\nRUN apt-get update -q\nRUN apt-get install --no-install-recommends ruby2.2 ruby2.2-dev ruby-switch -q -y\nRUN ruby-switch --set ruby2.2\n#  ###\n#   Install rubocop\n#  ##\nRUN gem install rake\nRUN gem install rubocop\n#  ###\n#   Install ruby-lint\n#  ##\nRUN gem install ruby-lint\n#  ##\n#   Avoid out of memory errors in builds\n#  ##\nENV MAVEN_OPTS=\"-Xmx3g\"\n#  ##\n#   Everything past this point is either not needed for testing or breaks Yetus.\n#   So tell Yetus not to read the rest of the file:\n#   YETUS CUT HERE\n#  ##\n","originalDockerfileUglifiedHash":"da914a0ac71c28c5266577d2301648b6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/350a147ca30117def9ead71f5f2010a7a5631254.dockerfile"}