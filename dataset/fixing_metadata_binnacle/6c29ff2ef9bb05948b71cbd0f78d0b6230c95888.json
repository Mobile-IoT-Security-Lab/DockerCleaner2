{"seed":3981343639,"processedDockerfileHash":"2a7274aeb24b6be00305a765c18aa838","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER David Lung \"lungdm@gmail.com\"\nARG INTEL_SDK_VERSION=2017_7.0.0.2511_x64\nCOPY ./silent-intel-sdk.cfg /tmp/silent-intel-sdk.cfg\nARG USR=ow\nENV USER=\"$USR\"\nRUN : \\\n && apt-get upgrade -y \\\n && apt-get dist-upgrade -y\nRUN mkdir -p /etc/sudoers.d \\\n && export uid=1000 gid=1000 \\\n && mkdir -p /home/$USER \\\n && echo \"$USER:x:${uid}:${gid}:$USER,,,:/home/$USER:/bin/bash\" >> /etc/passwd \\\n && echo \"$USER:x:${uid}:\" >> /etc/group \\\n && echo \"$USER ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$USER \\\n && chmod 0440 /etc/sudoers.d/$USER \\\n && chown ${uid}:${gid} -R /home/$USER\nENV DEBIAN_FRONTEND=\"noninteractive # TODO: change\"\n#  RUN useradd -ms /bin/bash $USER\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-utils=1.2.35 wget=1.17.1-1ubuntu1.5 nano=2.5.3-2ubuntu2 htop=2.0.1-1ubuntu1 build-essential=12.1ubuntu2 make=4.1-6 git=1:2.7.4-0ubuntu1.10 automake=1:1.15-4ubuntu1 autoconf=2.69-9 g++=4:5.3.1-1ubuntu1 rpm=4.12.0.1+dfsg1-3build3 libtool=2.4.6-0.1 libncurses5-dev=6.0+20160213-1ubuntu1 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 bison=2:3.0.4.dfsg-1 flex=2.6.0-11 lsb-core=9.20160110ubuntu0.2 sudo=1.8.16-0ubuntu1.10 xorg=1:7.7+13ubuntu3.1 openbox=3.6.1-1ubuntu2.1 x11-xserver-utils=7.7+7 libxext-dev=2:1.3.3-1 libncurses-dev python-dev=2.7.12-1~16.04 mercurial=3.7.3-1ubuntu1.2 freeglut3-dev=2.8.1-2 libglu1-mesa-dev=9.0.0-2.1 libglew-dev=1.13.0-2 python-dev=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 python-lxml=3.5.0-1ubuntu0.4 python-numpy=1:1.11.0-1ubuntu1 python-scipy=0.17.0-1 python-tk=2.7.12-1~16.04 kmod=22-1ubuntu5.2 dkms=2.2.0.3-2ubuntu11.8 linux-source=4.4.0.210.216 linux-headers-generic=4.4.0.210.216 maven=3.3.9-3 openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 python-setuptools=20.7.0-1 python-yaml=3.11-3build1 libnuma1=2.0.11-1ubuntu1.1 openmpi-bin=1.10.2-8ubuntu1 libopenmpi-dev=1.10.2-8ubuntu1 libgl1-mesa-glx=18.0.5-0ubuntu0~16.04.1 libgl1-mesa-dri=18.0.5-0ubuntu0~16.04.1 libfreetype6-dev=2.6.1-0.1ubuntu2.5 libpng12-dev=1.2.54-1ubuntu1.1 libxft-dev=2.3.2-1 python-matplotlib=1.5.1-1ubuntu1 xubuntu-desktop=2.206 ffmpeg=7:2.8.17-0ubuntu0.1 xvfb=2:1.18.4-0ubuntu0.12 tmux=2.1-3build1 -y )\n#  RUN  sudo pip install --upgrade matplotlib \n#  RUN sudo apt-get install nvidia-opencl-dev\nRUN sudo usermod -a -G video $USER\nUSER $USER\nENV HOME=\"/home/$USER\"\nWORKDIR $HOME\nRUN mkdir neuron \\\n && cd neuron \\\n && git clone https://github.com/nrnhines/iv.git \\\n && git clone https://github.com/nrnhines/nrn.git \\\n && cd iv \\\n && git checkout 76c123b \\\n && ./build.sh \\\n && ./configure --prefix=`pwd ` \\\n && make \\\n && sudo make install \\\n && cd ../nrn \\\n && git checkout e0950a1 \\\n && ./build.sh \\\n && ./configure --prefix=`pwd ` --with-iv=$HOME/neuron/iv --with-nrnpython=/usr/bin/python --with-paranrn \\\n && make \\\n && sudo make install \\\n && cd src/nrnpython \\\n && sudo python setup.py install\nRUN mkdir intel-opencl-tmp \\\n && cd intel-opencl-tmp \\\n && mkdir intel-opencl \\\n && wget http://registrationcenter-download.intel.com/akdlm/irc_nas/11396/SRB5.0_linux64.zip \\\n && unzip SRB5.0_linux64.zip \\\n && tar -C intel-opencl -Jxf intel-opencl-r5.0-63503.x86_64.tar.xz \\\n && tar -C intel-opencl -Jxf intel-opencl-devel-r5.0-63503.x86_64.tar.xz \\\n && tar -C intel-opencl -Jxf intel-opencl-cpu-r5.0-63503.x86_64.tar.xz \\\n && sudo cp -R intel-opencl/* / \\\n && sudo ldconfig \\\n && cd .. \\\n && sudo rm -r intel-opencl-tmp\nRUN wget http://registrationcenter-download.intel.com/akdlm/irc_nas/vcp/11705/intel_sdk_for_opencl_$INTEL_SDK_VERSION.tgz \\\n && tar xvf intel_sdk_for_opencl_$INTEL_SDK_VERSION.tgz \\\n && cd intel_sdk_for_opencl_$INTEL_SDK_VERSION \\\n && sudo ./install.sh --silent /tmp/silent-intel-sdk.cfg \\\n && cd $HOME \\\n && rm intel_sdk_for_opencl_$INTEL_SDK_VERSION.tgz \\\n && sudo rm /tmp/silent-intel-sdk.cfg\nRUN git clone https://github.com/NeuroML/pyNeuroML.git \\\n && cd pyNeuroML \\\n && git checkout ow-0.8a \\\n && sudo python setup.py install\nRUN git clone https://github.com/openworm/PyOpenWorm.git \\\n && cd PyOpenWorm \\\n && git checkout 7ff1266 \\\n && sudo python setup.py install\nRUN git clone https://github.com/openworm/CElegansNeuroML.git \\\n && cd CElegansNeuroML \\\n && git checkout c8b1364\nRUN git clone https://github.com/openworm/sibernetic.git \\\n && cd sibernetic \\\n && git checkout 3eb9914 \\\n && make clean \\\n && make all\nENV JNML_HOME=\"$HOME/jNeuroML\"\nENV PATH=\"$PATH:$JNML_HOME\"\nENV IV=\"$HOME/neuron/iv\"\nENV N=\"$HOME/neuron/nrn\"\nENV CPU=\"x86_64\"\nENV PATH=\"$PATH:$IV/$CPU/bin:$N/$CPU/bin\"\nENV NEURON_HOME=\"$N/$CPU\"\nENV C302_HOME=\"$HOME/CElegansNeuroML/CElegans/pythonScripts/c302\"\nENV SIBERNETIC_HOME=\"$HOME/sibernetic\"\nENV PYTHONPATH=\"$PYTHONPATH:$C302_HOME:$SIBERNETIC_HOME\"\n#   Not working with --chown=$USER:$USER\nCOPY ./master_openworm.py $HOME/master_openworm.py\nRUN sudo chown $USER:$USER $HOME/master_openworm.py\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER David Lung \"lungdm@gmail.com\"\nARG INTEL_SDK_VERSION=2017_7.0.0.2511_x64\nCOPY ./silent-intel-sdk.cfg /tmp/silent-intel-sdk.cfg\nARG USR=ow\nENV USER=\"$USR\"\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get dist-upgrade -y\nRUN mkdir -p /etc/sudoers.d \\\n && export uid=1000 gid=1000 \\\n && mkdir -p /home/$USER \\\n && echo \"$USER:x:${uid}:${gid}:$USER,,,:/home/$USER:/bin/bash\" >> /etc/passwd \\\n && echo \"$USER:x:${uid}:\" >> /etc/group \\\n && echo \"$USER ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$USER \\\n && chmod 0440 /etc/sudoers.d/$USER \\\n && chown ${uid}:${gid} -R /home/$USER\nENV DEBIAN_FRONTEND=\"noninteractive # TODO: change\"\n# RUN useradd -ms /bin/bash $USER\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils wget nano htop build-essential make git automake autoconf g++ rpm libtool libncurses5-dev zlib1g-dev bison flex lsb-core sudo xorg openbox x11-xserver-utils libxext-dev libncurses-dev python-dev mercurial freeglut3-dev libglu1-mesa-dev libglew-dev python-dev python-pip python-lxml python-numpy python-scipy python-tk kmod dkms linux-source linux-headers-generic maven openjdk-8-jdk python-setuptools python-yaml libnuma1 openmpi-bin libopenmpi-dev libgl1-mesa-glx libgl1-mesa-dri libfreetype6-dev libpng12-dev libxft-dev python-matplotlib xubuntu-desktop ffmpeg xvfb tmux -y\n# RUN  sudo pip install --upgrade matplotlib \n# RUN sudo apt-get install nvidia-opencl-dev\nRUN sudo usermod -a -G video $USER\nUSER $USER\nENV HOME=\"/home/$USER\"\nWORKDIR $HOME\nRUN mkdir neuron \\\n && cd neuron \\\n && git clone https://github.com/nrnhines/iv.git \\\n && git clone https://github.com/nrnhines/nrn.git \\\n && cd iv \\\n && git checkout 76c123b \\\n && ./build.sh \\\n && ./configure --prefix=`pwd ` \\\n && make \\\n && sudo make install \\\n && cd ../nrn \\\n && git checkout e0950a1 \\\n && ./build.sh \\\n && ./configure --prefix=`pwd ` --with-iv=$HOME/neuron/iv --with-nrnpython=/usr/bin/python --with-paranrn \\\n && make \\\n && sudo make install \\\n && cd src/nrnpython \\\n && sudo python setup.py install\nRUN mkdir intel-opencl-tmp \\\n && cd intel-opencl-tmp \\\n && mkdir intel-opencl \\\n && wget http://registrationcenter-download.intel.com/akdlm/irc_nas/11396/SRB5.0_linux64.zip \\\n && unzip SRB5.0_linux64.zip \\\n && tar -C intel-opencl -Jxf intel-opencl-r5.0-63503.x86_64.tar.xz \\\n && tar -C intel-opencl -Jxf intel-opencl-devel-r5.0-63503.x86_64.tar.xz \\\n && tar -C intel-opencl -Jxf intel-opencl-cpu-r5.0-63503.x86_64.tar.xz \\\n && sudo cp -R intel-opencl/* / \\\n && sudo ldconfig \\\n && cd .. \\\n && sudo rm -r intel-opencl-tmp\nRUN wget http://registrationcenter-download.intel.com/akdlm/irc_nas/vcp/11705/intel_sdk_for_opencl_$INTEL_SDK_VERSION.tgz \\\n && tar xvf intel_sdk_for_opencl_$INTEL_SDK_VERSION.tgz \\\n && cd intel_sdk_for_opencl_$INTEL_SDK_VERSION \\\n && sudo ./install.sh --silent /tmp/silent-intel-sdk.cfg \\\n && cd $HOME \\\n && rm intel_sdk_for_opencl_$INTEL_SDK_VERSION.tgz \\\n && sudo rm /tmp/silent-intel-sdk.cfg\nRUN git clone https://github.com/NeuroML/pyNeuroML.git \\\n && cd pyNeuroML \\\n && git checkout ow-0.8a \\\n && sudo python setup.py install\nRUN git clone https://github.com/openworm/PyOpenWorm.git \\\n && cd PyOpenWorm \\\n && git checkout 7ff1266 \\\n && sudo python setup.py install\nRUN git clone https://github.com/openworm/CElegansNeuroML.git \\\n && cd CElegansNeuroML \\\n && git checkout c8b1364\nRUN git clone https://github.com/openworm/sibernetic.git \\\n && cd sibernetic \\\n && git checkout 3eb9914 \\\n && make clean \\\n && make all\nENV JNML_HOME=\"$HOME/jNeuroML\"\nENV PATH=\"$PATH:$JNML_HOME\"\nENV IV=\"$HOME/neuron/iv\"\nENV N=\"$HOME/neuron/nrn\"\nENV CPU=\"x86_64\"\nENV PATH=\"$PATH:$IV/$CPU/bin:$N/$CPU/bin\"\nENV NEURON_HOME=\"$N/$CPU\"\nENV C302_HOME=\"$HOME/CElegansNeuroML/CElegans/pythonScripts/c302\"\nENV SIBERNETIC_HOME=\"$HOME/sibernetic\"\nENV PYTHONPATH=\"$PYTHONPATH:$C302_HOME:$SIBERNETIC_HOME\"\n#  Not working with --chown=$USER:$USER\nCOPY ./master_openworm.py $HOME/master_openworm.py\nRUN sudo chown $USER:$USER $HOME/master_openworm.py\n","injectedSmells":[],"originalDockerfileHash":"84138116465d36499dbf7ea2ed4e7b97","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER David Lung \"lungdm@gmail.com\"\nARG INTEL_SDK_VERSION=2017_7.0.0.2511_x64\nCOPY ./silent-intel-sdk.cfg /tmp/silent-intel-sdk.cfg\nARG USR=ow\nENV USER=\"$USR\"\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get dist-upgrade -y\nRUN mkdir -p /etc/sudoers.d \\\n && export uid=1000 gid=1000 \\\n && mkdir -p /home/$USER \\\n && echo \"$USER:x:${uid}:${gid}:$USER,,,:/home/$USER:/bin/bash\" >> /etc/passwd \\\n && echo \"$USER:x:${uid}:\" >> /etc/group \\\n && echo \"$USER ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$USER \\\n && chmod 0440 /etc/sudoers.d/$USER \\\n && chown ${uid}:${gid} -R /home/$USER\nENV DEBIAN_FRONTEND=\"noninteractive # TODO: change\"\n#  RUN useradd -ms /bin/bash $USER\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils wget nano htop build-essential make git automake autoconf g++ rpm libtool libncurses5-dev zlib1g-dev bison flex lsb-core sudo xorg openbox x11-xserver-utils libxext-dev libncurses-dev python-dev mercurial freeglut3-dev libglu1-mesa-dev libglew-dev python-dev python-pip python-lxml python-numpy python-scipy python-tk kmod dkms linux-source linux-headers-generic maven openjdk-8-jdk python-setuptools python-yaml libnuma1 openmpi-bin libopenmpi-dev libgl1-mesa-glx libgl1-mesa-dri libfreetype6-dev libpng12-dev libxft-dev python-matplotlib xubuntu-desktop ffmpeg xvfb tmux -y\n#  RUN  sudo pip install --upgrade matplotlib \n#  RUN sudo apt-get install nvidia-opencl-dev\nRUN sudo usermod -a -G video $USER\nUSER $USER\nENV HOME=\"/home/$USER\"\nWORKDIR $HOME\nRUN mkdir neuron \\\n && cd neuron \\\n && git clone https://github.com/nrnhines/iv.git \\\n && git clone https://github.com/nrnhines/nrn.git \\\n && cd iv \\\n && git checkout 76c123b \\\n && ./build.sh \\\n && ./configure --prefix=`pwd ` \\\n && make \\\n && sudo make install \\\n && cd ../nrn \\\n && git checkout e0950a1 \\\n && ./build.sh \\\n && ./configure --prefix=`pwd ` --with-iv=$HOME/neuron/iv --with-nrnpython=/usr/bin/python --with-paranrn \\\n && make \\\n && sudo make install \\\n && cd src/nrnpython \\\n && sudo python setup.py install\nRUN mkdir intel-opencl-tmp \\\n && cd intel-opencl-tmp \\\n && mkdir intel-opencl \\\n && wget http://registrationcenter-download.intel.com/akdlm/irc_nas/11396/SRB5.0_linux64.zip \\\n && unzip SRB5.0_linux64.zip \\\n && tar -C intel-opencl -Jxf intel-opencl-r5.0-63503.x86_64.tar.xz \\\n && tar -C intel-opencl -Jxf intel-opencl-devel-r5.0-63503.x86_64.tar.xz \\\n && tar -C intel-opencl -Jxf intel-opencl-cpu-r5.0-63503.x86_64.tar.xz \\\n && sudo cp -R intel-opencl/* / \\\n && sudo ldconfig \\\n && cd .. \\\n && sudo rm -r intel-opencl-tmp\nRUN wget http://registrationcenter-download.intel.com/akdlm/irc_nas/vcp/11705/intel_sdk_for_opencl_$INTEL_SDK_VERSION.tgz \\\n && tar xvf intel_sdk_for_opencl_$INTEL_SDK_VERSION.tgz \\\n && cd intel_sdk_for_opencl_$INTEL_SDK_VERSION \\\n && sudo ./install.sh --silent /tmp/silent-intel-sdk.cfg \\\n && cd $HOME \\\n && rm intel_sdk_for_opencl_$INTEL_SDK_VERSION.tgz \\\n && sudo rm /tmp/silent-intel-sdk.cfg\nRUN git clone https://github.com/NeuroML/pyNeuroML.git \\\n && cd pyNeuroML \\\n && git checkout ow-0.8a \\\n && sudo python setup.py install\nRUN git clone https://github.com/openworm/PyOpenWorm.git \\\n && cd PyOpenWorm \\\n && git checkout 7ff1266 \\\n && sudo python setup.py install\nRUN git clone https://github.com/openworm/CElegansNeuroML.git \\\n && cd CElegansNeuroML \\\n && git checkout c8b1364\nRUN git clone https://github.com/openworm/sibernetic.git \\\n && cd sibernetic \\\n && git checkout 3eb9914 \\\n && make clean \\\n && make all\nENV JNML_HOME=\"$HOME/jNeuroML\"\nENV PATH=\"$PATH:$JNML_HOME\"\nENV IV=\"$HOME/neuron/iv\"\nENV N=\"$HOME/neuron/nrn\"\nENV CPU=\"x86_64\"\nENV PATH=\"$PATH:$IV/$CPU/bin:$N/$CPU/bin\"\nENV NEURON_HOME=\"$N/$CPU\"\nENV C302_HOME=\"$HOME/CElegansNeuroML/CElegans/pythonScripts/c302\"\nENV SIBERNETIC_HOME=\"$HOME/sibernetic\"\nENV PYTHONPATH=\"$PYTHONPATH:$C302_HOME:$SIBERNETIC_HOME\"\n#   Not working with --chown=$USER:$USER\nCOPY ./master_openworm.py $HOME/master_openworm.py\nRUN sudo chown $USER:$USER $HOME/master_openworm.py\n","originalDockerfileUglifiedHash":"6914455d688d3d835a6eddc21a85fd42","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6c29ff2ef9bb05948b71cbd0f78d0b6230c95888.dockerfile"}