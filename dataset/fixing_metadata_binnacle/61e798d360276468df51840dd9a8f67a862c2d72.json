{"seed":2631697473,"processedDockerfileHash":"2f395b4a3b8c09668f769f5616cdf1ce","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG DOCKER_PREFIX\nFROM ${DOCKER_PREFIX}ubuntu:artful\nARG TRUST_CERT\nRUN if [ ! -z \"$TRUST_CERT\" ] ; then echo \"$TRUST_CERT\" > /usr/local/share/ca-certificates/build-trust.crt;update-ca-certificates ; fi\n#   Normalize apt sources\nRUN cat /etc/apt/sources.list | grep -v '^#' | sed /^$/d | sort | uniq > sources.tmp.1 \\\n && cat /etc/apt/sources.list | sed s/deb /deb-src /g | grep -v '^#' | sed /^$/d | sort | uniq > sources.tmp.2 \\\n && cat sources.tmp.1 sources.tmp.2 > /etc/apt/sources.list \\\n && rm -f sources.tmp.1 sources.tmp.2\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get build-dep -y squid \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y wget tar xz-utils libssl-dev\nARG SQUID_VERSION=4.0.21\n#   TODO: verify the squid download with the signing key\nRUN mkdir /src \\\n && cd /src \\\n && wget http://www.squid-cache.org/Versions/v4/squid-$SQUID_VERSION.tar.xz \\\n && mkdir squid \\\n && tar -C squid --strip-components=1 -xvf squid-$SQUID_VERSION.tar.xz\nRUN cd /src/squid \\\n && ./configure --prefix=/usr --datadir=/usr/share/squid4 --sysconfdir=/etc/squid4 --localstatedir=/var --mandir=/usr/share/man --enable-inline --enable-async-io=8 --enable-storeio=\"ufs,aufs,diskd,rock\" --enable-removal-policies=\"lru,heap\" --enable-delay-pools --enable-cache-digests --enable-underscores --enable-icap-client --enable-follow-x-forwarded-for --enable-auth-basic=\"DB,fake,getpwnam,LDAP,NCSA,NIS,PAM,POP3,RADIUS,SASL,SMB\" --enable-auth-digest=\"file,LDAP\" --enable-auth-negotiate=\"kerberos,wrapper\" --enable-auth-ntlm=\"fake\" --enable-external-acl-helpers=\"file_userip,kerberos_ldap_group,LDAP_group,session,SQL_session,unix_group,wbinfo_group\" --enable-url-rewrite-helpers=\"fake\" --enable-eui --enable-esi --enable-icmp --enable-zph-qos --with-openssl --enable-ssl --enable-ssl-crtd --disable-translation --with-swapdir=/var/spool/squid4 --with-logdir=/var/log/squid4 --with-pidfile=/var/run/squid4.pid --with-filedescriptors=65536 --with-large-files --with-default-user=proxy --disable-arch-native\nARG CONCURRENCY=1\nRUN cd /src/squid \\\n && make -j$CONCURRENCY \\\n && make install\n#   Download p2cli dependency\nRUN wget -O /usr/local/bin/p2 https://github.com/wrouesnel/p2cli/releases/download/r1/p2 \\\n && chmod +x /usr/local/bin/p2\n#   Clone and build proxychains-ng for SSL upstream proxying\nARG PROXYCHAINS_COMMITTISH=7a233fb1f05bcbf3d7f5c91658932261de1e13cb\nRUN (apt-get update ;apt-get install --no-install-recommends git -y )\nRUN git clone https://github.com/rofl0r/proxychains-ng.git /src/proxychains-ng \\\n && cd /src/proxychains-ng \\\n && git checkout $PROXYCHAINS_COMMITTISH \\\n && ./configure --prefix=/usr --sysconfdir=/etc \\\n && make -j$CONCURRENCY \\\n && make install\nARG URL_DOH=https://github.com/wrouesnel/dns-over-https-proxy/releases/download/v0.0.2/dns-over-https-proxy_v0.0.2_linux-amd64.tar.gz\nRUN wget -O /tmp/doh.tgz $URL_DOH \\\n && tar -xvvf /tmp/doh.tgz --strip-components=1 -C /usr/local/bin/ \\\n && chmod +x /usr/local/bin/dns-over-https-proxy\nCOPY squid.conf.p2 /squid.conf.p2\nCOPY squid.bsh /squid.bsh\n#   Configuration environment\nENV HTTP_PORT=\"3128\" \\\n    ICP_PORT=\"\" \\\n    HTCP_PORT=\"\" \\\n    MITM_PROXY=\"\" \\\n    MITM_CERT=\"\" \\\n    MITM_KEY=\"\" \\\n    VISIBLE_HOSTNAME=\"docker-squid4\" \\\n    MAX_CACHE_SIZE=\"40000\" \\\n    MAX_OBJECT_SIZE=\"1536 MB\" \\\n    MEM_CACHE_SIZE=\"128 MB\" \\\n    DNS_OVER_HTTPS_LISTEN_ADDR=\"127.0.0.153:53\" \\\n    DNS_OVER_HTTPS_SERVER=\"https://dns.google.com/resolve\" \\\n    DNS_OVER_HTTPS_NO_FALLTHROUGH=\"\" \\\n    DNS_OVER_HTTPS_FALLTHROUGH_STATUSES=\"NXDOMAIN\" \\\n    DNS_OVER_HTTPS_PREFIX_SERVER=\"\" \\\n    DNS_OVER_HTTPS_SUFFIX_SERVER=\"\"\nEXPOSE 3128/tcp\nENTRYPOINT [\"/squid.bsh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG DOCKER_PREFIX\nFROM ${DOCKER_PREFIX}ubuntu:artful\nARG TRUST_CERT\nRUN if [ ! -z \"$TRUST_CERT\" ] ; then echo \"$TRUST_CERT\" > /usr/local/share/ca-certificates/build-trust.crt;update-ca-certificates ; fi\n#  Normalize apt sources\nRUN cat /etc/apt/sources.list | grep -v '^#' | sed /^$/d | sort | uniq > sources.tmp.1 \\\n && cat /etc/apt/sources.list | sed s/deb /deb-src /g | grep -v '^#' | sed /^$/d | sort | uniq > sources.tmp.2 \\\n && cat sources.tmp.1 sources.tmp.2 > /etc/apt/sources.list \\\n && rm -f sources.tmp.1 sources.tmp.2\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get build-dep -y squid \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y wget tar xz-utils libssl-dev\nARG SQUID_VERSION=4.0.21\n#  TODO: verify the squid download with the signing key\nRUN mkdir /src \\\n && cd /src \\\n && wget http://www.squid-cache.org/Versions/v4/squid-$SQUID_VERSION.tar.xz \\\n && mkdir squid \\\n && tar -C squid --strip-components=1 -xvf squid-$SQUID_VERSION.tar.xz\nRUN cd /src/squid \\\n && ./configure --prefix=/usr --datadir=/usr/share/squid4 --sysconfdir=/etc/squid4 --localstatedir=/var --mandir=/usr/share/man --enable-inline --enable-async-io=8 --enable-storeio=\"ufs,aufs,diskd,rock\" --enable-removal-policies=\"lru,heap\" --enable-delay-pools --enable-cache-digests --enable-underscores --enable-icap-client --enable-follow-x-forwarded-for --enable-auth-basic=\"DB,fake,getpwnam,LDAP,NCSA,NIS,PAM,POP3,RADIUS,SASL,SMB\" --enable-auth-digest=\"file,LDAP\" --enable-auth-negotiate=\"kerberos,wrapper\" --enable-auth-ntlm=\"fake\" --enable-external-acl-helpers=\"file_userip,kerberos_ldap_group,LDAP_group,session,SQL_session,unix_group,wbinfo_group\" --enable-url-rewrite-helpers=\"fake\" --enable-eui --enable-esi --enable-icmp --enable-zph-qos --with-openssl --enable-ssl --enable-ssl-crtd --disable-translation --with-swapdir=/var/spool/squid4 --with-logdir=/var/log/squid4 --with-pidfile=/var/run/squid4.pid --with-filedescriptors=65536 --with-large-files --with-default-user=proxy --disable-arch-native\nARG CONCURRENCY=1\nRUN cd /src/squid \\\n && make -j$CONCURRENCY \\\n && make install\n#  Download p2cli dependency\nRUN wget -O /usr/local/bin/p2 https://github.com/wrouesnel/p2cli/releases/download/r1/p2 \\\n && chmod +x /usr/local/bin/p2\n#  Clone and build proxychains-ng for SSL upstream proxying\nARG PROXYCHAINS_COMMITTISH=7a233fb1f05bcbf3d7f5c91658932261de1e13cb\nRUN apt-get install git -y\nRUN git clone https://github.com/rofl0r/proxychains-ng.git /src/proxychains-ng \\\n && cd /src/proxychains-ng \\\n && git checkout $PROXYCHAINS_COMMITTISH \\\n && ./configure --prefix=/usr --sysconfdir=/etc \\\n && make -j$CONCURRENCY \\\n && make install\nARG URL_DOH=https://github.com/wrouesnel/dns-over-https-proxy/releases/download/v0.0.2/dns-over-https-proxy_v0.0.2_linux-amd64.tar.gz\nRUN wget -O /tmp/doh.tgz $URL_DOH \\\n && tar -xvvf /tmp/doh.tgz --strip-components=1 -C /usr/local/bin/ \\\n && chmod +x /usr/local/bin/dns-over-https-proxy\nCOPY squid.conf.p2 /squid.conf.p2\nCOPY squid.bsh /squid.bsh\n#  Configuration environment\nENV HTTP_PORT=\"3128\" \\\n    ICP_PORT=\"\" \\\n    HTCP_PORT=\"\" \\\n    MITM_PROXY=\"\" \\\n    MITM_CERT=\"\" \\\n    MITM_KEY=\"\" \\\n    VISIBLE_HOSTNAME=\"docker-squid4\" \\\n    MAX_CACHE_SIZE=\"40000\" \\\n    MAX_OBJECT_SIZE=\"1536 MB\" \\\n    MEM_CACHE_SIZE=\"128 MB\" \\\n    DNS_OVER_HTTPS_LISTEN_ADDR=\"127.0.0.153:53\" \\\n    DNS_OVER_HTTPS_SERVER=\"https://dns.google.com/resolve\" \\\n    DNS_OVER_HTTPS_NO_FALLTHROUGH=\"\" \\\n    DNS_OVER_HTTPS_FALLTHROUGH_STATUSES=\"NXDOMAIN\" \\\n    DNS_OVER_HTTPS_PREFIX_SERVER=\"\" \\\n    DNS_OVER_HTTPS_SUFFIX_SERVER=\"\"\nEXPOSE 3128/tcp\nENTRYPOINT [\"/squid.bsh\"]\n","injectedSmells":[],"originalDockerfileHash":"1cec8d991f174f9ccfa2887b9cdc8441","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG DOCKER_PREFIX\nFROM ${DOCKER_PREFIX}ubuntu:artful\nARG TRUST_CERT\nRUN if [ ! -z \"$TRUST_CERT\" ] ; then echo \"$TRUST_CERT\" > /usr/local/share/ca-certificates/build-trust.crt;update-ca-certificates ; fi\n#   Normalize apt sources\nRUN cat /etc/apt/sources.list | grep -v '^#' | sed /^$/d | sort | uniq > sources.tmp.1 \\\n && cat /etc/apt/sources.list | sed s/deb /deb-src /g | grep -v '^#' | sed /^$/d | sort | uniq > sources.tmp.2 \\\n && cat sources.tmp.1 sources.tmp.2 > /etc/apt/sources.list \\\n && rm -f sources.tmp.1 sources.tmp.2\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get build-dep -y squid \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y wget tar xz-utils libssl-dev\nARG SQUID_VERSION=4.0.21\n#   TODO: verify the squid download with the signing key\nRUN mkdir /src \\\n && cd /src \\\n && wget http://www.squid-cache.org/Versions/v4/squid-$SQUID_VERSION.tar.xz \\\n && mkdir squid \\\n && tar -C squid --strip-components=1 -xvf squid-$SQUID_VERSION.tar.xz\nRUN cd /src/squid \\\n && ./configure --prefix=/usr --datadir=/usr/share/squid4 --sysconfdir=/etc/squid4 --localstatedir=/var --mandir=/usr/share/man --enable-inline --enable-async-io=8 --enable-storeio=\"ufs,aufs,diskd,rock\" --enable-removal-policies=\"lru,heap\" --enable-delay-pools --enable-cache-digests --enable-underscores --enable-icap-client --enable-follow-x-forwarded-for --enable-auth-basic=\"DB,fake,getpwnam,LDAP,NCSA,NIS,PAM,POP3,RADIUS,SASL,SMB\" --enable-auth-digest=\"file,LDAP\" --enable-auth-negotiate=\"kerberos,wrapper\" --enable-auth-ntlm=\"fake\" --enable-external-acl-helpers=\"file_userip,kerberos_ldap_group,LDAP_group,session,SQL_session,unix_group,wbinfo_group\" --enable-url-rewrite-helpers=\"fake\" --enable-eui --enable-esi --enable-icmp --enable-zph-qos --with-openssl --enable-ssl --enable-ssl-crtd --disable-translation --with-swapdir=/var/spool/squid4 --with-logdir=/var/log/squid4 --with-pidfile=/var/run/squid4.pid --with-filedescriptors=65536 --with-large-files --with-default-user=proxy --disable-arch-native\nARG CONCURRENCY=1\nRUN cd /src/squid \\\n && make -j$CONCURRENCY \\\n && make install\n#   Download p2cli dependency\nRUN wget -O /usr/local/bin/p2 https://github.com/wrouesnel/p2cli/releases/download/r1/p2 \\\n && chmod +x /usr/local/bin/p2\n#   Clone and build proxychains-ng for SSL upstream proxying\nARG PROXYCHAINS_COMMITTISH=7a233fb1f05bcbf3d7f5c91658932261de1e13cb\nRUN apt-get install git -y\nRUN git clone https://github.com/rofl0r/proxychains-ng.git /src/proxychains-ng \\\n && cd /src/proxychains-ng \\\n && git checkout $PROXYCHAINS_COMMITTISH \\\n && ./configure --prefix=/usr --sysconfdir=/etc \\\n && make -j$CONCURRENCY \\\n && make install\nARG URL_DOH=https://github.com/wrouesnel/dns-over-https-proxy/releases/download/v0.0.2/dns-over-https-proxy_v0.0.2_linux-amd64.tar.gz\nRUN wget -O /tmp/doh.tgz $URL_DOH \\\n && tar -xvvf /tmp/doh.tgz --strip-components=1 -C /usr/local/bin/ \\\n && chmod +x /usr/local/bin/dns-over-https-proxy\nCOPY squid.conf.p2 /squid.conf.p2\nCOPY squid.bsh /squid.bsh\n#   Configuration environment\nENV HTTP_PORT=\"3128\" \\\n    ICP_PORT=\"\" \\\n    HTCP_PORT=\"\" \\\n    MITM_PROXY=\"\" \\\n    MITM_CERT=\"\" \\\n    MITM_KEY=\"\" \\\n    VISIBLE_HOSTNAME=\"docker-squid4\" \\\n    MAX_CACHE_SIZE=\"40000\" \\\n    MAX_OBJECT_SIZE=\"1536 MB\" \\\n    MEM_CACHE_SIZE=\"128 MB\" \\\n    DNS_OVER_HTTPS_LISTEN_ADDR=\"127.0.0.153:53\" \\\n    DNS_OVER_HTTPS_SERVER=\"https://dns.google.com/resolve\" \\\n    DNS_OVER_HTTPS_NO_FALLTHROUGH=\"\" \\\n    DNS_OVER_HTTPS_FALLTHROUGH_STATUSES=\"NXDOMAIN\" \\\n    DNS_OVER_HTTPS_PREFIX_SERVER=\"\" \\\n    DNS_OVER_HTTPS_SUFFIX_SERVER=\"\"\nEXPOSE 3128/tcp\nENTRYPOINT [\"/squid.bsh\"]\n","originalDockerfileUglifiedHash":"a7ca893d4ce8b2b9acd8f884baa0c1c3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/61e798d360276468df51840dd9a8f67a862c2d72.dockerfile"}