{"seed":3776868126,"processedDockerfileHash":"43ddd64cf62392d9ea92419196b47e65","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.8\nARG BUILD_CORES\nARG MEDIAINFO_VER=0.7.99\nARG RTORRENT_VER=v0.9.7\nARG LIBTORRENT_VER=v0.13.7\nARG LIBZEN_VER=0.4.31\nARG GEOIP_VER=1.1.1\nENV UID=\"991\" \\\n    GID=\"991\" \\\n    WEBROOT=\"/\" \\\n    PORT_RTORRENT=\"45000\" \\\n    DHT_RTORRENT=\"off\" \\\n    DISABLE_PERM_DATA=\"false\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nLABEL Description=\"rutorrent based on alpine\" \\\n      tags=\"latest\" \\\n      maintainer=\"xataz <https://github.com/xataz>\" \\\n      mediainfo_version=\"${MEDIAINFO_VER}\" \\\n      libtorrent_version=\"${LIBTORRENT_VER}\" \\\n      rtorrent_version=\"${RTORRENT_VER}\" \\\n      libzen_version=\"${LIBZEN_VER}\" \\\n      build_ver=\"201904081410\"\nRUN export BUILD_DEPS=\"build-base libtool automake autoconf wget libressl-dev ncurses-dev curl-dev zlib-dev libnl3-dev libsigc++-dev linux-headers py-pip\" \\\n && if [ \"$RTORRENT_VER\" == \"0.9.6\" ] ; then CPPUNIT_VER=\"==1.13.2-r1\" ; fi \\\n && apk upgrade --no-cache \\\n && apk add ffmpeg=3.4.6-r0 libnl3=3.2.28-r1 ca-certificates=20191127-r2 gzip=1.9-r0 zip=3.0-r6 unrar=5.6.4-r0 curl=7.61.1-r3 c-ares=1.14.0-r0 s6=2.7.1.1-r1 geoip=1.6.12-r1 geoip-dev=1.6.12-r1 su-exec=0.2-r0 nginx=1.14.2-r2 php7=7.2.26-r0 php7-fpm=7.2.26-r0 php7-json=7.2.26-r0 php7-opcache=7.2.26-r0 php7-apcu=5.1.11-r2 php7-mbstring=7.2.26-r0 php7-ctype=7.2.26-r0 php7-pear=7.2.26-r0 php7-dev=7.2.26-r0 php7-sockets=7.2.26-r0 php7-phar=7.2.26-r0 libressl=2.7.5-r0 file=5.32-r2 findutils=4.6.0-r1 tar=1.32-r0 xz=5.2.4-r0 screen=4.6.2-r1 findutils=4.6.0-r1 bzip2=1.0.6-r7 bash=4.4.19-r1 git=2.18.4-r0 sox=14.4.2-r1 python ${BUILD_DEPS} cppunit-dev${CPPUNIT_VER} cppunit${CPPUNIT_VER} -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main --no-cache \\\n && git clone https://github.com/esmil/mktorrent /tmp/mktorrent \\\n && git clone https://github.com/mirror/xmlrpc-c.git /tmp/xmlrpc-c \\\n && git clone -b ${LIBTORRENT_VER} https://github.com/rakshasa/libtorrent.git /tmp/libtorrent \\\n && git clone -b ${RTORRENT_VER} https://github.com/rakshasa/rtorrent.git /tmp/rtorrent \\\n && wget http://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz -O /tmp/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz -O /tmp/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget http://downloads.sourceforge.net/zenlib/libzen_${LIBZEN_VER}.tar.gz -O /tmp/libzen_${LIBZEN_VER}.tar.gz \\\n && cd /tmp \\\n && tar xzf libzen_${LIBZEN_VER}.tar.gz \\\n && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && cd /tmp/ZenLib/Project/GNU/Library \\\n && ./autogen \\\n && ./configure --prefix=/usr/local --enable-shared --disable-static \\\n && make \\\n && make install \\\n && cd /tmp/mktorrent \\\n && make -j ${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource \\\n && ./SO_Compile.sh \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource \\\n && ./CLI_Compile.sh \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource/MediaInfo/Project/GNU/CLI \\\n && make install \\\n && cd /tmp/xmlrpc-c/stable \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/libtorrent \\\n && ./autogen.sh \\\n && ./configure --disable-debug --disable-instrumentation \\\n && make -j ${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && make install \\\n && cd /tmp/rtorrent \\\n && ./autogen.sh \\\n && ./configure --enable-ipv6 --disable-debug --with-xmlrpc-c \\\n && make -j ${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && make install \\\n && mkdir -p /var/www \\\n && git clone https://github.com/Novik/ruTorrent.git /var/www/html/rutorrent \\\n && git clone https://github.com/nelu/rutorrent-thirdparty-plugins /tmp/rutorrent-thirdparty-plugins \\\n && git clone https://github.com/mcrapet/plowshare /tmp/plowshare \\\n && git clone https://github.com/xombiemp/rutorrentMobile.git /var/www/html/rutorrent/plugins/mobile \\\n && git clone https://github.com/Phlooo/ruTorrent-MaterialDesign.git /var/www/html/rutorrent/plugins/theme/themes/materialdesign \\\n && git clone https://github.com/Micdu70/geoip2-rutorrent /var/www/html/rutorrent/plugins/geoip2 \\\n && rm -rf /var/www/html/rutorrent/plugins/geoip \\\n && sed -i \"s/'mkdir'.*$/'mkdir',/\" /tmp/rutorrent-thirdparty-plugins/filemanager/flm.class.php \\\n && sed -i 's#.*/usr/bin/rar.*##' /tmp/rutorrent-thirdparty-plugins/filemanager/conf.php \\\n && mv /tmp/rutorrent-thirdparty-plugins/* /var/www/html/rutorrent/plugins/ \\\n && mv /var/www/html/rutorrent /var/www/html/torrent \\\n && cd /tmp/plowshare \\\n && make \\\n && mkdir -p /usr/share/GeoIP \\\n && cd /usr/share/GeoIP \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n && tar xzf GeoLite2-City.tar.gz \\\n && tar xzf GeoLite2-Country.tar.gz \\\n && rm -f *.tar.gz \\\n && mv GeoLite2-*/*.mmdb . \\\n && cp *.mmdb /var/www/html/torrent/plugins/geoip2/database/ \\\n && pecl install geoip-${GEOIP_VER} \\\n && chmod +x /usr/lib/php7/modules/geoip.so \\\n && pip install cfscrape==2.1.1 \\\n && strip -s /usr/local/bin/rtorrent \\\n && strip -s /usr/local/bin/mktorrent \\\n && strip -s /usr/local/bin/mediainfo \\\n && apk del -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main --no-cache ${BUILD_DEPS} cppunit-dev \\\n && rm -rf /tmp/*\nARG WITH_FILEBOT=NO\nARG FILEBOT_VER=4.7.9\nARG CHROMAPRINT_VER=1.4.3\nENV filebot_version=\"${FILEBOT_VER}\" \\\n    chromaprint_ver=\"${CHROMAPRINT_VER}\"\nENV FILEBOT_RENAME_METHOD=\"symlink\" \\\n    FILEBOT_RENAME_MOVIES=\"{n} ({y})\" \\\n    FILEBOT_RENAME_SERIES=\"{n}/Season {s.pad(2)}/{s00e00} - {t}\" \\\n    FILEBOT_RENAME_ANIMES=\"{n}/{e.pad(3)} - {t}\" \\\n    FILEBOT_RENAME_MUSICS=\"{n}/{fn}\" \\\n    FILEBOT_LANG=\"fr\" \\\n    FILEBOT_CONFLICT=\"skip\"\nRUN if [ \"${WITH_FILEBOT}\" == \"YES\" ] ; then apk add openjdk8-jre=8.275.01-r0 java-jna-native=4.5.1-r0 binutils=2.30-r6 wget=1.20.3-r0 nss=3.36.1-r1 --no-cache \\\n && mkdir /filebot \\\n && cd /filebot \\\n && wget http://downloads.sourceforge.net/project/filebot/filebot/FileBot_${FILEBOT_VER}/FileBot_${FILEBOT_VER}-portable.tar.xz -O /filebot/filebot.tar.xz \\\n && tar xJf filebot.tar.xz \\\n && ln -sf /usr/local/lib/libzen.so.0.0.0 /filebot/lib/x86_64/libzen.so \\\n && ln -sf /usr/local/lib/libmediainfo.so.0.0.0 /filebot/lib/x86_64/libmediainfo.so \\\n && wget https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VER}/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && tar xvf chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && mv chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64/fpcalc /usr/local/bin \\\n && strip -s /usr/local/bin/fpcalc \\\n && apk del --no-cache binutils wget \\\n && rm -rf /tmp/* /filebot/FileBot_${FILEBOT_VER}-portable.tar.xz /filebot/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz /filebot/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64 ; fi\nCOPY rootfs /\nVOLUME /data /config\nEXPOSE 8080/tcp\nRUN chmod +x /usr/local/bin/startup\nENTRYPOINT [\"/usr/local/bin/startup\"]\nCMD [\"/bin/s6-svscan\", \"/etc/s6.d\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.8\nARG BUILD_CORES\nARG MEDIAINFO_VER=0.7.99\nARG RTORRENT_VER=v0.9.7\nARG LIBTORRENT_VER=v0.13.7\nARG LIBZEN_VER=0.4.31\nARG GEOIP_VER=1.1.1\nENV UID=\"991\" \\\n    GID=\"991\" \\\n    WEBROOT=\"/\" \\\n    PORT_RTORRENT=\"45000\" \\\n    DHT_RTORRENT=\"off\" \\\n    DISABLE_PERM_DATA=\"false\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nLABEL Description=\"rutorrent based on alpine\" \\\n      tags=\"latest\" \\\n      maintainer=\"xataz <https://github.com/xataz>\" \\\n      mediainfo_version=\"${MEDIAINFO_VER}\" \\\n      libtorrent_version=\"${LIBTORRENT_VER}\" \\\n      rtorrent_version=\"${RTORRENT_VER}\" \\\n      libzen_version=\"${LIBZEN_VER}\" \\\n      build_ver=\"201904081410\"\nRUN export BUILD_DEPS=\"build-base libtool automake autoconf wget libressl-dev ncurses-dev curl-dev zlib-dev libnl3-dev libsigc++-dev linux-headers py-pip\" \\\n && if [ \"$RTORRENT_VER\" == \"0.9.6\" ] ; then CPPUNIT_VER=\"==1.13.2-r1\" ; fi \\\n && apk upgrade --no-cache \\\n && apk add -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main --no-cache ${BUILD_DEPS} ffmpeg libnl3 ca-certificates gzip zip unrar curl c-ares s6 geoip geoip-dev su-exec nginx php7 php7-fpm php7-json php7-opcache php7-apcu php7-mbstring php7-ctype php7-pear php7-dev php7-sockets php7-phar libressl file findutils tar xz screen findutils bzip2 bash git sox python cppunit-dev${CPPUNIT_VER} cppunit${CPPUNIT_VER} \\\n && git clone https://github.com/esmil/mktorrent /tmp/mktorrent \\\n && git clone https://github.com/mirror/xmlrpc-c.git /tmp/xmlrpc-c \\\n && git clone -b ${LIBTORRENT_VER} https://github.com/rakshasa/libtorrent.git /tmp/libtorrent \\\n && git clone -b ${RTORRENT_VER} https://github.com/rakshasa/rtorrent.git /tmp/rtorrent \\\n && wget http://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz -O /tmp/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz -O /tmp/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget http://downloads.sourceforge.net/zenlib/libzen_${LIBZEN_VER}.tar.gz -O /tmp/libzen_${LIBZEN_VER}.tar.gz \\\n && cd /tmp \\\n && tar xzf libzen_${LIBZEN_VER}.tar.gz \\\n && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && cd /tmp/ZenLib/Project/GNU/Library \\\n && ./autogen \\\n && ./configure --prefix=/usr/local --enable-shared --disable-static \\\n && make \\\n && make install \\\n && cd /tmp/mktorrent \\\n && make -j ${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource \\\n && ./SO_Compile.sh \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource \\\n && ./CLI_Compile.sh \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource/MediaInfo/Project/GNU/CLI \\\n && make install \\\n && cd /tmp/xmlrpc-c/stable \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/libtorrent \\\n && ./autogen.sh \\\n && ./configure --disable-debug --disable-instrumentation \\\n && make -j ${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && make install \\\n && cd /tmp/rtorrent \\\n && ./autogen.sh \\\n && ./configure --enable-ipv6 --disable-debug --with-xmlrpc-c \\\n && make -j ${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && make install \\\n && mkdir -p /var/www \\\n && git clone https://github.com/Novik/ruTorrent.git /var/www/html/rutorrent \\\n && git clone https://github.com/nelu/rutorrent-thirdparty-plugins /tmp/rutorrent-thirdparty-plugins \\\n && git clone https://github.com/mcrapet/plowshare /tmp/plowshare \\\n && git clone https://github.com/xombiemp/rutorrentMobile.git /var/www/html/rutorrent/plugins/mobile \\\n && git clone https://github.com/Phlooo/ruTorrent-MaterialDesign.git /var/www/html/rutorrent/plugins/theme/themes/materialdesign \\\n && git clone https://github.com/Micdu70/geoip2-rutorrent /var/www/html/rutorrent/plugins/geoip2 \\\n && rm -rf /var/www/html/rutorrent/plugins/geoip \\\n && sed -i \"s/'mkdir'.*$/'mkdir',/\" /tmp/rutorrent-thirdparty-plugins/filemanager/flm.class.php \\\n && sed -i 's#.*/usr/bin/rar.*##' /tmp/rutorrent-thirdparty-plugins/filemanager/conf.php \\\n && mv /tmp/rutorrent-thirdparty-plugins/* /var/www/html/rutorrent/plugins/ \\\n && mv /var/www/html/rutorrent /var/www/html/torrent \\\n && cd /tmp/plowshare \\\n && make \\\n && mkdir -p /usr/share/GeoIP \\\n && cd /usr/share/GeoIP \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n && tar xzf GeoLite2-City.tar.gz \\\n && tar xzf GeoLite2-Country.tar.gz \\\n && rm -f *.tar.gz \\\n && mv GeoLite2-*/*.mmdb . \\\n && cp *.mmdb /var/www/html/torrent/plugins/geoip2/database/ \\\n && pecl install geoip-${GEOIP_VER} \\\n && chmod +x /usr/lib/php7/modules/geoip.so \\\n && pip install cfscrape \\\n && strip -s /usr/local/bin/rtorrent \\\n && strip -s /usr/local/bin/mktorrent \\\n && strip -s /usr/local/bin/mediainfo \\\n && apk del -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main --no-cache ${BUILD_DEPS} cppunit-dev \\\n && rm -rf /tmp/*\nARG WITH_FILEBOT=NO\nARG FILEBOT_VER=4.7.9\nARG CHROMAPRINT_VER=1.4.3\nENV filebot_version=\"${FILEBOT_VER}\" \\\n    chromaprint_ver=\"${CHROMAPRINT_VER}\"\nENV FILEBOT_RENAME_METHOD=\"symlink\" \\\n    FILEBOT_RENAME_MOVIES=\"{n} ({y})\" \\\n    FILEBOT_RENAME_SERIES=\"{n}/Season {s.pad(2)}/{s00e00} - {t}\" \\\n    FILEBOT_RENAME_ANIMES=\"{n}/{e.pad(3)} - {t}\" \\\n    FILEBOT_RENAME_MUSICS=\"{n}/{fn}\" \\\n    FILEBOT_LANG=\"fr\" \\\n    FILEBOT_CONFLICT=\"skip\"\nRUN if [ \"${WITH_FILEBOT}\" == \"YES\" ] ; then apk add --no-cache openjdk8-jre java-jna-native binutils wget nss \\\n && mkdir /filebot \\\n && cd /filebot \\\n && wget http://downloads.sourceforge.net/project/filebot/filebot/FileBot_${FILEBOT_VER}/FileBot_${FILEBOT_VER}-portable.tar.xz -O /filebot/filebot.tar.xz \\\n && tar xJf filebot.tar.xz \\\n && ln -sf /usr/local/lib/libzen.so.0.0.0 /filebot/lib/x86_64/libzen.so \\\n && ln -sf /usr/local/lib/libmediainfo.so.0.0.0 /filebot/lib/x86_64/libmediainfo.so \\\n && wget https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VER}/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && tar xvf chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && mv chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64/fpcalc /usr/local/bin \\\n && strip -s /usr/local/bin/fpcalc \\\n && apk del --no-cache binutils wget \\\n && rm -rf /tmp/* /filebot/FileBot_${FILEBOT_VER}-portable.tar.xz /filebot/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz /filebot/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64 ; fi\nCOPY rootfs /\nVOLUME /data /config\nEXPOSE 8080/tcp\nRUN chmod +x /usr/local/bin/startup\nENTRYPOINT [\"/usr/local/bin/startup\"]\nCMD [\"/bin/s6-svscan\", \"/etc/s6.d\"]\n","injectedSmells":[],"originalDockerfileHash":"058b91c7f96dae07b68a1fc3e11e6f1e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.8\nARG BUILD_CORES\nARG MEDIAINFO_VER=0.7.99\nARG RTORRENT_VER=v0.9.7\nARG LIBTORRENT_VER=v0.13.7\nARG LIBZEN_VER=0.4.31\nARG GEOIP_VER=1.1.1\nENV UID=\"991\" \\\n    GID=\"991\" \\\n    WEBROOT=\"/\" \\\n    PORT_RTORRENT=\"45000\" \\\n    DHT_RTORRENT=\"off\" \\\n    DISABLE_PERM_DATA=\"false\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nLABEL Description=\"rutorrent based on alpine\" \\\n      tags=\"latest\" \\\n      maintainer=\"xataz <https://github.com/xataz>\" \\\n      mediainfo_version=\"${MEDIAINFO_VER}\" \\\n      libtorrent_version=\"${LIBTORRENT_VER}\" \\\n      rtorrent_version=\"${RTORRENT_VER}\" \\\n      libzen_version=\"${LIBZEN_VER}\" \\\n      build_ver=\"201904081410\"\nRUN export BUILD_DEPS=\"build-base libtool automake autoconf wget libressl-dev ncurses-dev curl-dev zlib-dev libnl3-dev libsigc++-dev linux-headers py-pip\" \\\n && if [ \"$RTORRENT_VER\" == \"0.9.6\" ] ; then CPPUNIT_VER=\"==1.13.2-r1\" ; fi \\\n && apk upgrade --no-cache \\\n && apk add -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main --no-cache ${BUILD_DEPS} ffmpeg libnl3 ca-certificates gzip zip unrar curl c-ares s6 geoip geoip-dev su-exec nginx php7 php7-fpm php7-json php7-opcache php7-apcu php7-mbstring php7-ctype php7-pear php7-dev php7-sockets php7-phar libressl file findutils tar xz screen findutils bzip2 bash git sox python cppunit-dev${CPPUNIT_VER} cppunit${CPPUNIT_VER} \\\n && git clone https://github.com/esmil/mktorrent /tmp/mktorrent \\\n && git clone https://github.com/mirror/xmlrpc-c.git /tmp/xmlrpc-c \\\n && git clone -b ${LIBTORRENT_VER} https://github.com/rakshasa/libtorrent.git /tmp/libtorrent \\\n && git clone -b ${RTORRENT_VER} https://github.com/rakshasa/rtorrent.git /tmp/rtorrent \\\n && wget http://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz -O /tmp/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz -O /tmp/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget http://downloads.sourceforge.net/zenlib/libzen_${LIBZEN_VER}.tar.gz -O /tmp/libzen_${LIBZEN_VER}.tar.gz \\\n && cd /tmp \\\n && tar xzf libzen_${LIBZEN_VER}.tar.gz \\\n && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && cd /tmp/ZenLib/Project/GNU/Library \\\n && ./autogen \\\n && ./configure --prefix=/usr/local --enable-shared --disable-static \\\n && make \\\n && make install \\\n && cd /tmp/mktorrent \\\n && make -j ${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource \\\n && ./SO_Compile.sh \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource \\\n && ./CLI_Compile.sh \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource/MediaInfo/Project/GNU/CLI \\\n && make install \\\n && cd /tmp/xmlrpc-c/stable \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp/libtorrent \\\n && ./autogen.sh \\\n && ./configure --disable-debug --disable-instrumentation \\\n && make -j ${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && make install \\\n && cd /tmp/rtorrent \\\n && ./autogen.sh \\\n && ./configure --enable-ipv6 --disable-debug --with-xmlrpc-c \\\n && make -j ${BUILD_CORES-$( grep -c \"processor\" /proc/cpuinfo ;)} \\\n && make install \\\n && mkdir -p /var/www \\\n && git clone https://github.com/Novik/ruTorrent.git /var/www/html/rutorrent \\\n && git clone https://github.com/nelu/rutorrent-thirdparty-plugins /tmp/rutorrent-thirdparty-plugins \\\n && git clone https://github.com/mcrapet/plowshare /tmp/plowshare \\\n && git clone https://github.com/xombiemp/rutorrentMobile.git /var/www/html/rutorrent/plugins/mobile \\\n && git clone https://github.com/Phlooo/ruTorrent-MaterialDesign.git /var/www/html/rutorrent/plugins/theme/themes/materialdesign \\\n && git clone https://github.com/Micdu70/geoip2-rutorrent /var/www/html/rutorrent/plugins/geoip2 \\\n && rm -rf /var/www/html/rutorrent/plugins/geoip \\\n && sed -i \"s/'mkdir'.*$/'mkdir',/\" /tmp/rutorrent-thirdparty-plugins/filemanager/flm.class.php \\\n && sed -i 's#.*/usr/bin/rar.*##' /tmp/rutorrent-thirdparty-plugins/filemanager/conf.php \\\n && mv /tmp/rutorrent-thirdparty-plugins/* /var/www/html/rutorrent/plugins/ \\\n && mv /var/www/html/rutorrent /var/www/html/torrent \\\n && cd /tmp/plowshare \\\n && make \\\n && mkdir -p /usr/share/GeoIP \\\n && cd /usr/share/GeoIP \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n && tar xzf GeoLite2-City.tar.gz \\\n && tar xzf GeoLite2-Country.tar.gz \\\n && rm -f *.tar.gz \\\n && mv GeoLite2-*/*.mmdb . \\\n && cp *.mmdb /var/www/html/torrent/plugins/geoip2/database/ \\\n && pecl install geoip-${GEOIP_VER} \\\n && chmod +x /usr/lib/php7/modules/geoip.so \\\n && pip install cfscrape \\\n && strip -s /usr/local/bin/rtorrent \\\n && strip -s /usr/local/bin/mktorrent \\\n && strip -s /usr/local/bin/mediainfo \\\n && apk del -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main --no-cache ${BUILD_DEPS} cppunit-dev \\\n && rm -rf /tmp/*\nARG WITH_FILEBOT=NO\nARG FILEBOT_VER=4.7.9\nARG CHROMAPRINT_VER=1.4.3\nENV filebot_version=\"${FILEBOT_VER}\" \\\n    chromaprint_ver=\"${CHROMAPRINT_VER}\"\nENV FILEBOT_RENAME_METHOD=\"symlink\" \\\n    FILEBOT_RENAME_MOVIES=\"{n} ({y})\" \\\n    FILEBOT_RENAME_SERIES=\"{n}/Season {s.pad(2)}/{s00e00} - {t}\" \\\n    FILEBOT_RENAME_ANIMES=\"{n}/{e.pad(3)} - {t}\" \\\n    FILEBOT_RENAME_MUSICS=\"{n}/{fn}\" \\\n    FILEBOT_LANG=\"fr\" \\\n    FILEBOT_CONFLICT=\"skip\"\nRUN if [ \"${WITH_FILEBOT}\" == \"YES\" ] ; then apk add --no-cache openjdk8-jre java-jna-native binutils wget nss \\\n && mkdir /filebot \\\n && cd /filebot \\\n && wget http://downloads.sourceforge.net/project/filebot/filebot/FileBot_${FILEBOT_VER}/FileBot_${FILEBOT_VER}-portable.tar.xz -O /filebot/filebot.tar.xz \\\n && tar xJf filebot.tar.xz \\\n && ln -sf /usr/local/lib/libzen.so.0.0.0 /filebot/lib/x86_64/libzen.so \\\n && ln -sf /usr/local/lib/libmediainfo.so.0.0.0 /filebot/lib/x86_64/libmediainfo.so \\\n && wget https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VER}/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && tar xvf chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && mv chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64/fpcalc /usr/local/bin \\\n && strip -s /usr/local/bin/fpcalc \\\n && apk del --no-cache binutils wget \\\n && rm -rf /tmp/* /filebot/FileBot_${FILEBOT_VER}-portable.tar.xz /filebot/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz /filebot/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64 ; fi\nCOPY rootfs /\nVOLUME /data /config\nEXPOSE 8080/tcp\nRUN chmod +x /usr/local/bin/startup\nENTRYPOINT [\"/usr/local/bin/startup\"]\nCMD [\"/bin/s6-svscan\", \"/etc/s6.d\"]\n","originalDockerfileUglifiedHash":"058b91c7f96dae07b68a1fc3e11e6f1e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/99c7571080af6a20b7e75719b4de3c682b34ae24.dockerfile"}