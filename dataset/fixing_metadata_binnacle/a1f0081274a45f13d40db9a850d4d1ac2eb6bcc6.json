{"seed":3129153180,"processedDockerfileHash":"92694ab076a75c3aa4da542b180940a9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM armhf/debian:jessie\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\n#  #<autogenerated>##\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2-bin apache2.2-common -y \\\n && rm -rf /var/lib/apt/lists/*\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\nRUN set -ex \\\n && sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" /var/www/html; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done\n#   Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event \\\n && a2enmod mpm_prefork\n#   logs should go to stdout / stderr\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n#   PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo '<FilesMatch \\.php$>' ;echo '\\tSetHandler application/x-httpd-php' ;echo '</FilesMatch>' ;echo ;echo 'DirectoryIndex disabled' ;echo 'DirectoryIndex index.php index.html' ;echo ;echo '<Directory /var/www/>' ;echo '\\tOptions -Indexes' ;echo '\\tAllowOverride All' ;echo '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n && a2enconf docker-php\nENV PHP_EXTRA_BUILD_DEPS=\"apache2-dev\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2\"\n#  #</autogenerated>##\n#   Apply stack smash protection to functions using local buffers and alloca()\n#   Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n#   Enable optimization (-O2)\n#   Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n#   Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n#   https://github.com/docker-library/php/issues/272\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E\"\nENV PHP_VERSION=\"7.1.3\"\nENV PHP_URL=\"https://secure.php.net/get/php-7.1.3.tar.xz/from/this/mirror\" \\\n    PHP_ASC_URL=\"https://secure.php.net/get/php-7.1.3.tar.xz.asc/from/this/mirror\"\nENV PHP_SHA256=\"e4887c2634778e37fd962fbdf5c4a7d32cd708482fe07b448804625570cb0bb0\" \\\n    PHP_MD5=\"d604d688be17f4a05b99dbb7fb9581f4\"\nRUN set -xe ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" ; if [ -n \"$PHP_SHA256\" ] ; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - ; fi ; if [ -n \"$PHP_MD5\" ] ; then echo \"$PHP_MD5 *php.tar.xz\" | md5sum -c - ; fi ; if [ -n \"$PHP_ASC_URL\" ] ; then wget -O php.tar.xz.asc \"$PHP_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ;gpg --batch --verify php.tar.xz.asc php.tar.xz ;rm -r \"$GNUPGHOME\" ; fi ; apt-get purge -y --auto-remove $fetchDeps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-php-entrypoint\"]\n#  #<autogenerated>##\nCOPY apache2-foreground /usr/local/bin/\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n#  #</autogenerated>##\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM armhf/debian:jessie\n#  persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\n# #<autogenerated>##\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2-bin apache2.2-common -y \\\n && rm -rf /var/lib/apt/lists/*\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\nRUN set -ex \\\n && sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" /var/www/html; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done\n#  Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event \\\n && a2enmod mpm_prefork\n#  logs should go to stdout / stderr\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n#  PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo '<FilesMatch \\.php$>' ;echo '\\tSetHandler application/x-httpd-php' ;echo '</FilesMatch>' ;echo ;echo 'DirectoryIndex disabled' ;echo 'DirectoryIndex index.php index.html' ;echo ;echo '<Directory /var/www/>' ;echo '\\tOptions -Indexes' ;echo '\\tAllowOverride All' ;echo '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n && a2enconf docker-php\nENV PHP_EXTRA_BUILD_DEPS=\"apache2-dev\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2\"\n# #</autogenerated>##\n#  Apply stack smash protection to functions using local buffers and alloca()\n#  Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n#  Enable optimization (-O2)\n#  Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n#  Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n#  https://github.com/docker-library/php/issues/272\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E\"\nENV PHP_VERSION=\"7.1.3\"\nENV PHP_URL=\"https://secure.php.net/get/php-7.1.3.tar.xz/from/this/mirror\" \\\n    PHP_ASC_URL=\"https://secure.php.net/get/php-7.1.3.tar.xz.asc/from/this/mirror\"\nENV PHP_SHA256=\"e4887c2634778e37fd962fbdf5c4a7d32cd708482fe07b448804625570cb0bb0\" \\\n    PHP_MD5=\"d604d688be17f4a05b99dbb7fb9581f4\"\nRUN set -xe ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" ; if [ -n \"$PHP_SHA256\" ] ; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - ; fi ; if [ -n \"$PHP_MD5\" ] ; then echo \"$PHP_MD5 *php.tar.xz\" | md5sum -c - ; fi ; if [ -n \"$PHP_ASC_URL\" ] ; then wget -O php.tar.xz.asc \"$PHP_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ;gpg --batch --verify php.tar.xz.asc php.tar.xz ;rm -r \"$GNUPGHOME\" ; fi ; apt-get purge -y --auto-remove $fetchDeps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-php-entrypoint\"]\n# #<autogenerated>##\nCOPY apache2-foreground /usr/local/bin/\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n# #</autogenerated>##\n","injectedSmells":[],"originalDockerfileHash":"a732f6e58b1bdc92dd69571dba83169c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM armhf/debian:jessie\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\n#  #<autogenerated>##\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2-bin apache2.2-common -y \\\n && rm -rf /var/lib/apt/lists/*\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\nRUN set -ex \\\n && sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" /var/www/html; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done\n#   Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event \\\n && a2enmod mpm_prefork\n#   logs should go to stdout / stderr\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n#   PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo '<FilesMatch \\.php$>' ;echo '\\tSetHandler application/x-httpd-php' ;echo '</FilesMatch>' ;echo ;echo 'DirectoryIndex disabled' ;echo 'DirectoryIndex index.php index.html' ;echo ;echo '<Directory /var/www/>' ;echo '\\tOptions -Indexes' ;echo '\\tAllowOverride All' ;echo '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n && a2enconf docker-php\nENV PHP_EXTRA_BUILD_DEPS=\"apache2-dev\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2\"\n#  #</autogenerated>##\n#   Apply stack smash protection to functions using local buffers and alloca()\n#   Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n#   Enable optimization (-O2)\n#   Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n#   Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n#   https://github.com/docker-library/php/issues/272\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E\"\nENV PHP_VERSION=\"7.1.3\"\nENV PHP_URL=\"https://secure.php.net/get/php-7.1.3.tar.xz/from/this/mirror\" \\\n    PHP_ASC_URL=\"https://secure.php.net/get/php-7.1.3.tar.xz.asc/from/this/mirror\"\nENV PHP_SHA256=\"e4887c2634778e37fd962fbdf5c4a7d32cd708482fe07b448804625570cb0bb0\" \\\n    PHP_MD5=\"d604d688be17f4a05b99dbb7fb9581f4\"\nRUN set -xe ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" ; if [ -n \"$PHP_SHA256\" ] ; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - ; fi ; if [ -n \"$PHP_MD5\" ] ; then echo \"$PHP_MD5 *php.tar.xz\" | md5sum -c - ; fi ; if [ -n \"$PHP_ASC_URL\" ] ; then wget -O php.tar.xz.asc \"$PHP_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ;gpg --batch --verify php.tar.xz.asc php.tar.xz ;rm -r \"$GNUPGHOME\" ; fi ; apt-get purge -y --auto-remove $fetchDeps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-php-entrypoint\"]\n#  #<autogenerated>##\nCOPY apache2-foreground /usr/local/bin/\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n#  #</autogenerated>##\n","originalDockerfileUglifiedHash":"c9c3fd08495a07ee3a1e2cd867c57d3a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a1f0081274a45f13d40db9a850d4d1ac2eb6bcc6.dockerfile"}