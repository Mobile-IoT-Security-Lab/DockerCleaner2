{"seed":2860403829,"processedDockerfileHash":"c20948bac365d84969f28245e0da388f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM floydhub/dl-deps:3.1.0-gpu.33\nMAINTAINER Floyd Labs \"support@floydhub.com\"\n#   From https://github.com/docker-library/python/blob/master/3.6./Dockerfile\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.5\"\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends dpkg-dev tcl-dev tk-dev -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --with-tcltk-includes='-I/usr/include/tk -I/usr/include/tcl' --with-tcltk-libs='/usr/lib/x86_64-linux-gnu/libtcl.so /usr/lib/x86_64-linux-gnu/libtk.so' --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && find /usr/local -depth\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && { [ -e easy_install ] || ln -s easy_install-* easy_install ; } \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"10.0.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN pip install virtualenv==20.21.0 PyOpenGL==3.1.6 PyOpenGL_accelerate==3.1.6 Cython==0.29.34 h5py==3.8.0 jupyter==1.0.0 notebook==5.6.0 numpy==1.24.2 cupy==12.0.0 pandas==2.0.0 matplotlib==3.7.1 ipykernel==6.22.0 path.py==12.5.0 pyyaml==6.0 scipy==1.10.1 six==1.16.0 sklearn==0.0.post4 sympy==1.11.1 Pillow==9.5.0 zmq==0.0.0 opencv-contrib-python==3.4.0.12 --no-cache-dir \\\n && rm -rf /tmp/* /var/tmp/* \\\n && python -m ipykernel.kernelspec\n#   Set up our notebook config.\nCOPY jupyter_notebook_config_py3.py /root/.jupyter/\nRUN mv /root/.jupyter/jupyter_notebook_config_py3.py /root/.jupyter/jupyter_notebook_config.py\n#   Create the file configurations for IPython\n#   and remove the default one.\nRUN ipython profile create \\\n && rm /root/.ipython/profile_default/ipython_config.py\n#   Set up our IPython config.\nCOPY ipython_config.py /root/.ipython/profile_default/ipython_config.py\n#   Jupyter has issues with being run directly:\n#     https://github.com/ipython/ipython/issues/7062\n#   We just add a little wrapper script.\nCOPY run_jupyter.sh /\nRUN chmod +x /run_jupyter.sh\n#   IPython\nEXPOSE 8888/tcp\nCMD [\"/run_jupyter.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM floydhub/dl-deps:3.1.0-gpu.33\nMAINTAINER Floyd Labs \"support@floydhub.com\"\n#  From https://github.com/docker-library/python/blob/master/3.6./Dockerfile\n#  ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.5\"\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends dpkg-dev tcl-dev tk-dev -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --with-tcltk-includes='-I/usr/include/tk -I/usr/include/tcl' --with-tcltk-libs='/usr/lib/x86_64-linux-gnu/libtcl.so /usr/lib/x86_64-linux-gnu/libtk.so' --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && find /usr/local -depth ( ( -type d -a -name test -o -name tests ) -o ( -type f -a -name '*.pyc' -o -name '*.pyo' ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python ~/.cache\n#  make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && { [ -e easy_install ] || ln -s easy_install-* easy_install ; } \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"10.0.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\nRUN pip install virtualenv PyOpenGL PyOpenGL_accelerate Cython h5py jupyter notebook==5.6.0 numpy cupy pandas matplotlib ipykernel path.py pyyaml scipy six sklearn sympy Pillow zmq opencv-contrib-python==3.4.0.12 --no-cache-dir \\\n && rm -rf /tmp/* /var/tmp/* \\\n && python -m ipykernel.kernelspec\n#  Set up our notebook config.\nCOPY jupyter_notebook_config_py3.py /root/.jupyter/\nRUN mv /root/.jupyter/jupyter_notebook_config_py3.py /root/.jupyter/jupyter_notebook_config.py\n#  Create the file configurations for IPython\n#  and remove the default one.\nRUN ipython profile create \\\n && rm /root/.ipython/profile_default/ipython_config.py\n#  Set up our IPython config.\nCOPY ipython_config.py /root/.ipython/profile_default/ipython_config.py\n#  Jupyter has issues with being run directly:\n#    https://github.com/ipython/ipython/issues/7062\n#  We just add a little wrapper script.\nCOPY run_jupyter.sh /\nRUN chmod +x /run_jupyter.sh\n#  IPython\nEXPOSE 8888/tcp\nCMD [\"/run_jupyter.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"32c14ddaf2fd85f660bca114aa7e4c75","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM floydhub/dl-deps:3.1.0-gpu.33\nMAINTAINER Floyd Labs \"support@floydhub.com\"\n#   From https://github.com/docker-library/python/blob/master/3.6./Dockerfile\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.5\"\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends dpkg-dev tcl-dev tk-dev -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --with-tcltk-includes='-I/usr/include/tk -I/usr/include/tcl' --with-tcltk-libs='/usr/lib/x86_64-linux-gnu/libtcl.so /usr/lib/x86_64-linux-gnu/libtk.so' --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && find /usr/local -depth\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && { [ -e easy_install ] || ln -s easy_install-* easy_install ; } \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"10.0.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN pip install virtualenv PyOpenGL PyOpenGL_accelerate Cython h5py jupyter notebook==5.6.0 numpy cupy pandas matplotlib ipykernel path.py pyyaml scipy six sklearn sympy Pillow zmq opencv-contrib-python==3.4.0.12 --no-cache-dir \\\n && rm -rf /tmp/* /var/tmp/* \\\n && python -m ipykernel.kernelspec\n#   Set up our notebook config.\nCOPY jupyter_notebook_config_py3.py /root/.jupyter/\nRUN mv /root/.jupyter/jupyter_notebook_config_py3.py /root/.jupyter/jupyter_notebook_config.py\n#   Create the file configurations for IPython\n#   and remove the default one.\nRUN ipython profile create \\\n && rm /root/.ipython/profile_default/ipython_config.py\n#   Set up our IPython config.\nCOPY ipython_config.py /root/.ipython/profile_default/ipython_config.py\n#   Jupyter has issues with being run directly:\n#     https://github.com/ipython/ipython/issues/7062\n#   We just add a little wrapper script.\nCOPY run_jupyter.sh /\nRUN chmod +x /run_jupyter.sh\n#   IPython\nEXPOSE 8888/tcp\nCMD [\"/run_jupyter.sh\"]\n","originalDockerfileUglifiedHash":"a5e4f384e032a95b08d679a355f26fba","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c1b5f654ccac6e6ea9090333010ae02db2e8abe5.dockerfile"}