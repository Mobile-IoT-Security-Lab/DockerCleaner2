{"seed":534349587,"processedDockerfileHash":"1ddd7e2be42021f94e9b605f1e4dea1e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM akabe/ocaml:debian8_ocaml4.04.2\nENV PATH=\"$PATH:/home/opam/.local/bin\"\nENV TENSORFLOW_VERSION=\"1.1.0\"\nENV LD_LIBRARY_PATH=\"/usr/lib:$LD_LIBRARY_PATH\"\nENV LIBRARY_PATH=\"/usr/lib:$LIBRARY_PATH\"\n#   For phantomjs:\nENV QT_QPA_PLATFORM=\"offscreen\"\nCOPY ocaml-jupyter-datascience-extra.list /etc/apt/sources.list.d/ocaml-jupyter-datascience-extra.list\nRUN sudo apt-get install -y python3 python3-dev python3-pip \\\n && sudo pip3 install --upgrade pip \\\n && pip3 install --user --no-cache-dir 'setuptools>=18.5' 'six>=1.9.0' jupyter jupyter_contrib_nbextensions \\\n && jupyter contrib nbextension install --user \\\n && mkdir -p /home/opam/.jupyter \\\n && sudo apt-get purge -y python3-dev \\\n && sudo apt-get autoremove -y \\\n && sudo apt-get autoclean\nRUN sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db \\\n && sudo apt-get update \\\n && sudo apt-get upgrade -y \\\n && sudo apt-get install -y m4 git xz-utils openssl rsync gcc gfortran aspcud pkg-config ssh libzmq3-dev libffi-dev libgmp-dev libcairo2-dev libplplot-dev plplot12-driver-cairo libffi-dev libgsl0-dev libfftw3-dev libsvm-dev libcairo2-dev libmariadb-dev libpq-dev libsqlite3-dev libgmp-dev mecab libmecab-dev mecab-ipadic-utf8 imagemagick ffmpeg \\\n && sudo apt-get install -t jessie-backports -y libblas3 libblas-dev liblapack3 liblapack-dev libopenblas-dev liblapacke liblapacke-dev phantomjs \\\n && sudo ln -sf /usr/lib/x86_64-linux-gnu/libmysqlclient.so.20 /usr/lib/libmysqlclient.so \\\n && sudo ln -sf /usr/lib/x86_64-linux-gnu/libshp.so.2 /usr/lib/libshp.so \\\n && sudo ln -sf /etc/fonts /usr/lib/x86_64-linux-gnu/fonts \\\n && curl -L https://github.com/neologd/mecab-ipadic-neologd/archive/master.tar.gz -o /tmp/mecab-ipadic-neologd-master.tar.gz \\\n && tar zxf /tmp/mecab-ipadic-neologd-master.tar.gz -C /tmp \\\n && (cd /tmp/mecab-ipadic-neologd-master \\\n && ./bin/install-mecab-ipadic-neologd -n -y ) \\\n && rm -rf /tmp/mecab-ipadic-neologd-master.tar.gz /tmp/mecab-ipadic-neologd-master \\\n && eval $( opam config env ;) \\\n && opam update \\\n && opam upgrade -y \\\n && opam install -y batteries 'core>=v0.9.0' 'async>=v0.9.0' 'lwt>=3.0.0' lwt_ssl 'cstruct>=3.1.1' 'ppx_cstruct>=3.1.1' 'tls>=0.8.0' cohttp-async 'cohttp-lwt-unix>=1.0.0' cohttp-top 'merlin>=3.0.0' jupyter jupyter-archimedes lacaml slap lbfgs ocephes oml gsl gpr fftw3 'dolog>=3.0' 'eigen>=0.0.3' 'oasis>=0.4.10' 'owl>=0.2.6' mysql 'mariadb>=0.8.1' postgresql sqlite3 lambdasoup csv csv-lwt camomile mecab ppx_sexp_conv 'ppx_deriving_yojson>=3.1' ppx_regexp \\\n && : install kernel \\\n && jupyter kernelspec install --user --name ocaml-jupyter \"$( opam config var share ;)/jupyter\" \\\n && : install libsvm \\\n && curl -L https://bitbucket.org/ogu/libsvm-ocaml/downloads/libsvm-ocaml-0.9.3.tar.gz -o /tmp/libsvm-ocaml-0.9.3.tar.gz \\\n && tar zxf /tmp/libsvm-ocaml-0.9.3.tar.gz -C /tmp \\\n && (cd /tmp/libsvm-ocaml-0.9.3 \\\n && oasis setup \\\n && ./configure --prefix=$( opam config var prefix ;) \\\n && make \\\n && make install ) \\\n && rm -rf /tmp/libsvm-ocaml-0.9.3.tar.gz /tmp/libsvm-ocaml-0.9.3 \\\n && : install tensorflow \\\n && sudo curl -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-$TENSORFLOW_VERSION.tar.gz\" | sudo tar xz -C /usr \\\n && curl -L \"https://github.com/LaurentMazare/tensorflow-ocaml/archive/0.0.10.1.tar.gz\" -o /tmp/tensorflow-ocaml-0.0.10.1.tar.gz \\\n && tar zxf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz -C /tmp \\\n && (cd /tmp/tensorflow-ocaml-0.0.10.1 \\\n && sed -i 's/(no_dynlink)//' src/wrapper/jbuild \\\n && sed -i 's/(modes (native))//' src/wrapper/jbuild ) \\\n && opam pin add -y /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf $HOME/.opam/archives $HOME/.opam/repo/default/archives $HOME/.opam/$OCAML_VERSION/man $HOME/.opam/$OCAML_VERSION/build \\\n && sudo apt-get purge -y m4 git xz-utils openssl rsync gcc gfortran aspcud pkg-config \\\n && sudo apt-get autoremove -y \\\n && sudo apt-get autoclean\nVOLUME /notebooks\nVOLUME /home/opam/.jupyter\nWORKDIR /notebooks\nCOPY entrypoint.sh /\nCOPY .ocamlinit /home/opam/.ocamlinit\nCOPY .jupyter /home/opam/.jupyter\nEXPOSE 8888/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"jupyter\", \"notebook\", \"--no-browser\", \"--ip=*\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM akabe/ocaml:debian8_ocaml4.04.2\nENV PATH=\"$PATH:/home/opam/.local/bin\"\nENV TENSORFLOW_VERSION=\"1.1.0\"\nENV LD_LIBRARY_PATH=\"/usr/lib:$LD_LIBRARY_PATH\"\nENV LIBRARY_PATH=\"/usr/lib:$LIBRARY_PATH\"\n#  For phantomjs:\nENV QT_QPA_PLATFORM=\"offscreen\"\nADD ocaml-jupyter-datascience-extra.list /etc/apt/sources.list.d/ocaml-jupyter-datascience-extra.list\nRUN sudo apt-get install -y python3 python3-dev python3-pip \\\n && sudo pip3 install --upgrade pip \\\n && pip3 install --user --no-cache-dir 'setuptools>=18.5' 'six>=1.9.0' jupyter jupyter_contrib_nbextensions \\\n && jupyter contrib nbextension install --user \\\n && mkdir -p /home/opam/.jupyter \\\n && sudo apt-get purge -y python3-dev \\\n && sudo apt-get autoremove -y \\\n && sudo apt-get autoclean\nRUN sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db \\\n && sudo apt-get update \\\n && sudo apt-get upgrade -y \\\n && sudo apt-get install -y m4 git xz-utils openssl rsync gcc gfortran aspcud pkg-config ssh libzmq3-dev libffi-dev libgmp-dev libcairo2-dev libplplot-dev plplot12-driver-cairo libffi-dev libgsl0-dev libfftw3-dev libsvm-dev libcairo2-dev libmariadb-dev libpq-dev libsqlite3-dev libgmp-dev mecab libmecab-dev mecab-ipadic-utf8 imagemagick ffmpeg \\\n && sudo apt-get install -t jessie-backports -y libblas3 libblas-dev liblapack3 liblapack-dev libopenblas-dev liblapacke liblapacke-dev phantomjs \\\n && sudo ln -sf /usr/lib/x86_64-linux-gnu/libmysqlclient.so.20 /usr/lib/libmysqlclient.so \\\n && sudo ln -sf /usr/lib/x86_64-linux-gnu/libshp.so.2 /usr/lib/libshp.so \\\n && sudo ln -sf /etc/fonts /usr/lib/x86_64-linux-gnu/fonts \\\n && curl -L https://github.com/neologd/mecab-ipadic-neologd/archive/master.tar.gz -o /tmp/mecab-ipadic-neologd-master.tar.gz \\\n && tar zxf /tmp/mecab-ipadic-neologd-master.tar.gz -C /tmp \\\n && (cd /tmp/mecab-ipadic-neologd-master \\\n && ./bin/install-mecab-ipadic-neologd -n -y ) \\\n && rm -rf /tmp/mecab-ipadic-neologd-master.tar.gz /tmp/mecab-ipadic-neologd-master \\\n && eval $( opam config env ;) \\\n && opam update \\\n && opam upgrade -y \\\n && opam install -y batteries 'core>=v0.9.0' 'async>=v0.9.0' 'lwt>=3.0.0' lwt_ssl 'cstruct>=3.1.1' 'ppx_cstruct>=3.1.1' 'tls>=0.8.0' cohttp-async 'cohttp-lwt-unix>=1.0.0' cohttp-top 'merlin>=3.0.0' jupyter jupyter-archimedes lacaml slap lbfgs ocephes oml gsl gpr fftw3 'dolog>=3.0' 'eigen>=0.0.3' 'oasis>=0.4.10' 'owl>=0.2.6' mysql 'mariadb>=0.8.1' postgresql sqlite3 lambdasoup csv csv-lwt camomile mecab ppx_sexp_conv 'ppx_deriving_yojson>=3.1' ppx_regexp \\\n && : install kernel \\\n && jupyter kernelspec install --user --name ocaml-jupyter \"$( opam config var share ;)/jupyter\" \\\n && : install libsvm \\\n && curl -L https://bitbucket.org/ogu/libsvm-ocaml/downloads/libsvm-ocaml-0.9.3.tar.gz -o /tmp/libsvm-ocaml-0.9.3.tar.gz \\\n && tar zxf /tmp/libsvm-ocaml-0.9.3.tar.gz -C /tmp \\\n && (cd /tmp/libsvm-ocaml-0.9.3 \\\n && oasis setup \\\n && ./configure --prefix=$( opam config var prefix ;) \\\n && make \\\n && make install ) \\\n && rm -rf /tmp/libsvm-ocaml-0.9.3.tar.gz /tmp/libsvm-ocaml-0.9.3 \\\n && : install tensorflow \\\n && sudo curl -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-$TENSORFLOW_VERSION.tar.gz\" | sudo tar xz -C /usr \\\n && curl -L \"https://github.com/LaurentMazare/tensorflow-ocaml/archive/0.0.10.1.tar.gz\" -o /tmp/tensorflow-ocaml-0.0.10.1.tar.gz \\\n && tar zxf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz -C /tmp \\\n && (cd /tmp/tensorflow-ocaml-0.0.10.1 \\\n && sed -i 's/(no_dynlink)//' src/wrapper/jbuild \\\n && sed -i 's/(modes (native))//' src/wrapper/jbuild ) \\\n && opam pin add -y /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf $HOME/.opam/archives $HOME/.opam/repo/default/archives $HOME/.opam/$OCAML_VERSION/man $HOME/.opam/$OCAML_VERSION/build \\\n && sudo apt-get purge -y m4 git xz-utils openssl rsync gcc gfortran aspcud pkg-config \\\n && sudo apt-get autoremove -y \\\n && sudo apt-get autoclean\nVOLUME /notebooks\nVOLUME /home/opam/.jupyter\nWORKDIR /notebooks\nCOPY entrypoint.sh /\nCOPY .ocamlinit /home/opam/.ocamlinit\nCOPY .jupyter /home/opam/.jupyter\nEXPOSE 8888/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"jupyter\", \"notebook\", \"--no-browser\", \"--ip=*\"]\n","injectedSmells":[],"originalDockerfileHash":"a1534e0e736e83284040a67d1fd98713","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM akabe/ocaml:debian8_ocaml4.04.2\nENV PATH=\"$PATH:/home/opam/.local/bin\"\nENV TENSORFLOW_VERSION=\"1.1.0\"\nENV LD_LIBRARY_PATH=\"/usr/lib:$LD_LIBRARY_PATH\"\nENV LIBRARY_PATH=\"/usr/lib:$LIBRARY_PATH\"\n#   For phantomjs:\nENV QT_QPA_PLATFORM=\"offscreen\"\nADD ocaml-jupyter-datascience-extra.list /etc/apt/sources.list.d/ocaml-jupyter-datascience-extra.list\nRUN sudo apt-get install -y python3 python3-dev python3-pip \\\n && sudo pip3 install --upgrade pip \\\n && pip3 install --user --no-cache-dir 'setuptools>=18.5' 'six>=1.9.0' jupyter jupyter_contrib_nbextensions \\\n && jupyter contrib nbextension install --user \\\n && mkdir -p /home/opam/.jupyter \\\n && sudo apt-get purge -y python3-dev \\\n && sudo apt-get autoremove -y \\\n && sudo apt-get autoclean\nRUN sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db \\\n && sudo apt-get update \\\n && sudo apt-get upgrade -y \\\n && sudo apt-get install -y m4 git xz-utils openssl rsync gcc gfortran aspcud pkg-config ssh libzmq3-dev libffi-dev libgmp-dev libcairo2-dev libplplot-dev plplot12-driver-cairo libffi-dev libgsl0-dev libfftw3-dev libsvm-dev libcairo2-dev libmariadb-dev libpq-dev libsqlite3-dev libgmp-dev mecab libmecab-dev mecab-ipadic-utf8 imagemagick ffmpeg \\\n && sudo apt-get install -t jessie-backports -y libblas3 libblas-dev liblapack3 liblapack-dev libopenblas-dev liblapacke liblapacke-dev phantomjs \\\n && sudo ln -sf /usr/lib/x86_64-linux-gnu/libmysqlclient.so.20 /usr/lib/libmysqlclient.so \\\n && sudo ln -sf /usr/lib/x86_64-linux-gnu/libshp.so.2 /usr/lib/libshp.so \\\n && sudo ln -sf /etc/fonts /usr/lib/x86_64-linux-gnu/fonts \\\n && curl -L https://github.com/neologd/mecab-ipadic-neologd/archive/master.tar.gz -o /tmp/mecab-ipadic-neologd-master.tar.gz \\\n && tar zxf /tmp/mecab-ipadic-neologd-master.tar.gz -C /tmp \\\n && (cd /tmp/mecab-ipadic-neologd-master \\\n && ./bin/install-mecab-ipadic-neologd -n -y ) \\\n && rm -rf /tmp/mecab-ipadic-neologd-master.tar.gz /tmp/mecab-ipadic-neologd-master \\\n && eval $( opam config env ;) \\\n && opam update \\\n && opam upgrade -y \\\n && opam install -y batteries 'core>=v0.9.0' 'async>=v0.9.0' 'lwt>=3.0.0' lwt_ssl 'cstruct>=3.1.1' 'ppx_cstruct>=3.1.1' 'tls>=0.8.0' cohttp-async 'cohttp-lwt-unix>=1.0.0' cohttp-top 'merlin>=3.0.0' jupyter jupyter-archimedes lacaml slap lbfgs ocephes oml gsl gpr fftw3 'dolog>=3.0' 'eigen>=0.0.3' 'oasis>=0.4.10' 'owl>=0.2.6' mysql 'mariadb>=0.8.1' postgresql sqlite3 lambdasoup csv csv-lwt camomile mecab ppx_sexp_conv 'ppx_deriving_yojson>=3.1' ppx_regexp \\\n && : install kernel \\\n && jupyter kernelspec install --user --name ocaml-jupyter \"$( opam config var share ;)/jupyter\" \\\n && : install libsvm \\\n && curl -L https://bitbucket.org/ogu/libsvm-ocaml/downloads/libsvm-ocaml-0.9.3.tar.gz -o /tmp/libsvm-ocaml-0.9.3.tar.gz \\\n && tar zxf /tmp/libsvm-ocaml-0.9.3.tar.gz -C /tmp \\\n && (cd /tmp/libsvm-ocaml-0.9.3 \\\n && oasis setup \\\n && ./configure --prefix=$( opam config var prefix ;) \\\n && make \\\n && make install ) \\\n && rm -rf /tmp/libsvm-ocaml-0.9.3.tar.gz /tmp/libsvm-ocaml-0.9.3 \\\n && : install tensorflow \\\n && sudo curl -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-$TENSORFLOW_VERSION.tar.gz\" | sudo tar xz -C /usr \\\n && curl -L \"https://github.com/LaurentMazare/tensorflow-ocaml/archive/0.0.10.1.tar.gz\" -o /tmp/tensorflow-ocaml-0.0.10.1.tar.gz \\\n && tar zxf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz -C /tmp \\\n && (cd /tmp/tensorflow-ocaml-0.0.10.1 \\\n && sed -i 's/(no_dynlink)//' src/wrapper/jbuild \\\n && sed -i 's/(modes (native))//' src/wrapper/jbuild ) \\\n && opam pin add -y /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf $HOME/.opam/archives $HOME/.opam/repo/default/archives $HOME/.opam/$OCAML_VERSION/man $HOME/.opam/$OCAML_VERSION/build \\\n && sudo apt-get purge -y m4 git xz-utils openssl rsync gcc gfortran aspcud pkg-config \\\n && sudo apt-get autoremove -y \\\n && sudo apt-get autoclean\nVOLUME /notebooks\nVOLUME /home/opam/.jupyter\nWORKDIR /notebooks\nCOPY entrypoint.sh /\nCOPY .ocamlinit /home/opam/.ocamlinit\nCOPY .jupyter /home/opam/.jupyter\nEXPOSE 8888/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"jupyter\", \"notebook\", \"--no-browser\", \"--ip=*\"]\n","originalDockerfileUglifiedHash":"be6360b109555f740c3b8586671886e2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f2c0d96c71e871d0ac4cd5b9c1ca19abeaa7ee3f.dockerfile"}