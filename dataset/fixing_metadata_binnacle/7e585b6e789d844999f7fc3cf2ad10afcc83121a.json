{"seed":774189923,"processedDockerfileHash":"7585be302db22b056de59ec26e666502","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM lablup/common-bazel:0.11-debian AS bazel-binary\n#   Build target: lablup/common-tensorflow:1.7-py36-mkl\n#   ref: https://github.com/tatsushid/docker-alpine-py3-tensorflow-jupyter/blob/master/Dockerfile\nFROM lablup/kernel-python:3.6-conda\nCOPY --from=bazel-binary /usr/local/bin/bazel /usr/local/bin/\nRUN install_packages libcups2 \\\n && echo \"deb http://http.debian.net/debian jessie-backports main\" | tee --append /etc/apt/sources.list.d/jessie-backports.list > /dev/null \\\n && apt-get update \\\n && apt-get install --no-install-recommends jessie-backports openjdk-8-jdk-headless -y -t \\\n && install_packages imagemagick graphviz cmake curl build-essential perl rsync sed swig git-core unzip zip\n#   Check Bazel is runnable.\nRUN bazel version\nENV MKL_VERSION=\"2018.2.199\"\n#   Install MKL\nRUN cd /tmp \\\n && wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12725/l_mkl_${MKL_VERSION}.tgz \\\n && tar -xzf l_mkl_${MKL_VERSION}.tgz \\\n && cd l_mkl_${MKL_VERSION} \\\n && sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg \\\n && ./install.sh -s silent.cfg \\\n && cd .. \\\n && rm -rf *\nRUN echo \"/opt/intel/mkl/lib/intel64\" >> /etc/ld.so.conf.d/intel.conf \\\n && ldconfig \\\n && echo \". /opt/intel/bin/compilervars.sh intel64\" >> /etc/bash.bashrc\n#   Install numpy with MKL\nRUN pip install Cython==0.29.34\nRUN cd /tmp \\\n && git clone https://github.com/numpy/numpy.git numpy \\\n && cd numpy \\\n && cp site.cfg.example site.cfg \\\n && echo \"\\n[mkl]\" >> site.cfg \\\n && echo \"include_dirs = /opt/intel/mkl/include/intel64/\" >> site.cfg \\\n && echo \"library_dirs = /opt/intel/mkl/lib/intel64/\" >> site.cfg \\\n && echo \"mkl_libs = mkl_rt\" >> site.cfg \\\n && echo \"lapack_libs =\" >> site.cfg \\\n && python setup.py build --fcompiler=gnu95 \\\n && python setup.py install\n#   Install scipy\nRUN cd /tmp \\\n && git clone https://github.com/scipy/scipy.git scipy \\\n && cd scipy \\\n && python setup.py build \\\n && python setup.py install\n#   Limit the system resource used during compilation\nENV LOCAL_RESOURCES=\"4096,8.0,1.0\"\n#   The TensorFlow version\nENV TF_VERSION=\"1.7\"\nRUN : build TensorFlow pip package \\\n && cd /tmp \\\n && curl -SL https://github.com/tensorflow/tensorflow/archive/r${TF_VERSION}.tar.gz | tar xzf -\nRUN cd /tmp/tensorflow-r${TF_VERSION} \\\n && sed -i '\\@https://github.com/google/protobuf/archive/0b059a3d8a8f8aa40dde7bea55edca4ec5dfea66.tar.gz@d' tensorflow/workspace.bzl \\\n && PYTHON_BIN_PATH=/usr/local/bin/python PYTHON_LIB_PATH=/usr/local/lib/python3.6/site-packages GCC_HOST_COMPILER_PATH=/usr/bin/gcc CC_OPT_FLAGS=\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" ENV CI_BUILD_PYTHON=python LD_LIBRARY_PATH=${LD_LIBRARY_PATH} PYTHON_BIN_PATH=/usr/bin/python PYTHON_LIB_PATH=/usr/local/lib/python3.6/dist-packages CC_OPT_FLAGS='-march=native' TF_NEED_JEMALLOC=1 TF_NEED_S3=0 TF_NEED_GDR=0 TF_NEED_VERBS=0 TF_NEED_MKL=1 TF_NEED_JEMALLOC=1 TF_NEED_GCP=0 TF_NEED_HDFS=0 TF_ENABLE_XLA=0 TF_NEED_VERBS=0 TF_NEED_OPENCL=0 TF_NEED_CUDA=0 TF_NEED_MPI=0 bash configure \\\n && bazel build --config=opt --local_resources ${LOCAL_RESOURCES} --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package \\\n && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nRUN ls -l /tmp/tensorflow_pkg\n#   vim: ft=dockerfile\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM lablup/common-bazel:0.11-debian AS bazel-binary\n#  Build target: lablup/common-tensorflow:1.7-py36-mkl\n#  ref: https://github.com/tatsushid/docker-alpine-py3-tensorflow-jupyter/blob/master/Dockerfile\nFROM lablup/kernel-python:3.6-conda\nCOPY --from=bazel-binary /usr/local/bin/bazel /usr/local/bin/\nRUN install_packages libcups2 \\\n && echo \"deb http://http.debian.net/debian jessie-backports main\" | tee --append /etc/apt/sources.list.d/jessie-backports.list > /dev/null \\\n && apt-get update \\\n && apt-get install --no-install-recommends jessie-backports openjdk-8-jdk-headless -y -t \\\n && install_packages imagemagick graphviz cmake curl build-essential perl rsync sed swig git-core unzip zip\n#  Check Bazel is runnable.\nRUN bazel version\nENV MKL_VERSION=\"2018.2.199\"\n#  Install MKL\nRUN cd /tmp \\\n && wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12725/l_mkl_${MKL_VERSION}.tgz \\\n && tar -xzf l_mkl_${MKL_VERSION}.tgz \\\n && cd l_mkl_${MKL_VERSION} \\\n && sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg \\\n && ./install.sh -s silent.cfg \\\n && cd .. \\\n && rm -rf *\nRUN echo \"/opt/intel/mkl/lib/intel64\" >> /etc/ld.so.conf.d/intel.conf \\\n && ldconfig \\\n && echo \". /opt/intel/bin/compilervars.sh intel64\" >> /etc/bash.bashrc\n#  Install numpy with MKL\nRUN pip install Cython\nRUN cd /tmp \\\n && git clone https://github.com/numpy/numpy.git numpy \\\n && cd numpy \\\n && cp site.cfg.example site.cfg \\\n && echo \"\\n[mkl]\" >> site.cfg \\\n && echo \"include_dirs = /opt/intel/mkl/include/intel64/\" >> site.cfg \\\n && echo \"library_dirs = /opt/intel/mkl/lib/intel64/\" >> site.cfg \\\n && echo \"mkl_libs = mkl_rt\" >> site.cfg \\\n && echo \"lapack_libs =\" >> site.cfg \\\n && python setup.py build --fcompiler=gnu95 \\\n && python setup.py install\n#  Install scipy\nRUN cd /tmp \\\n && git clone https://github.com/scipy/scipy.git scipy \\\n && cd scipy \\\n && python setup.py build \\\n && python setup.py install\n#  Limit the system resource used during compilation\nENV LOCAL_RESOURCES=\"4096,8.0,1.0\"\n#  The TensorFlow version\nENV TF_VERSION=\"1.7\"\nRUN : build TensorFlow pip package \\\n && cd /tmp \\\n && curl -SL https://github.com/tensorflow/tensorflow/archive/r${TF_VERSION}.tar.gz | tar xzf -\nRUN cd /tmp/tensorflow-r${TF_VERSION} \\\n && sed -i '\\@https://github.com/google/protobuf/archive/0b059a3d8a8f8aa40dde7bea55edca4ec5dfea66.tar.gz@d' tensorflow/workspace.bzl \\\n && PYTHON_BIN_PATH=/usr/local/bin/python PYTHON_LIB_PATH=/usr/local/lib/python3.6/site-packages GCC_HOST_COMPILER_PATH=/usr/bin/gcc CC_OPT_FLAGS=\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" ENV CI_BUILD_PYTHON=python LD_LIBRARY_PATH=${LD_LIBRARY_PATH} PYTHON_BIN_PATH=/usr/bin/python PYTHON_LIB_PATH=/usr/local/lib/python3.6/dist-packages CC_OPT_FLAGS='-march=native' TF_NEED_JEMALLOC=1 TF_NEED_S3=0 TF_NEED_GDR=0 TF_NEED_VERBS=0 TF_NEED_MKL=1 TF_NEED_JEMALLOC=1 TF_NEED_GCP=0 TF_NEED_HDFS=0 TF_ENABLE_XLA=0 TF_NEED_VERBS=0 TF_NEED_OPENCL=0 TF_NEED_CUDA=0 TF_NEED_MPI=0 bash configure \\\n && bazel build --config=opt --local_resources ${LOCAL_RESOURCES} --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package \\\n && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nRUN ls -l /tmp/tensorflow_pkg\n#  vim: ft=dockerfile\n","injectedSmells":[],"originalDockerfileHash":"43c8f8c4541fc0568be038572e253363","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM lablup/common-bazel:0.11-debian AS bazel-binary\n#   Build target: lablup/common-tensorflow:1.7-py36-mkl\n#   ref: https://github.com/tatsushid/docker-alpine-py3-tensorflow-jupyter/blob/master/Dockerfile\nFROM lablup/kernel-python:3.6-conda\nCOPY --from=bazel-binary /usr/local/bin/bazel /usr/local/bin/\nRUN install_packages libcups2 \\\n && echo \"deb http://http.debian.net/debian jessie-backports main\" | tee --append /etc/apt/sources.list.d/jessie-backports.list > /dev/null \\\n && apt-get update \\\n && apt-get install --no-install-recommends jessie-backports openjdk-8-jdk-headless -y -t \\\n && install_packages imagemagick graphviz cmake curl build-essential perl rsync sed swig git-core unzip zip\n#   Check Bazel is runnable.\nRUN bazel version\nENV MKL_VERSION=\"2018.2.199\"\n#   Install MKL\nRUN cd /tmp \\\n && wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12725/l_mkl_${MKL_VERSION}.tgz \\\n && tar -xzf l_mkl_${MKL_VERSION}.tgz \\\n && cd l_mkl_${MKL_VERSION} \\\n && sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg \\\n && ./install.sh -s silent.cfg \\\n && cd .. \\\n && rm -rf *\nRUN echo \"/opt/intel/mkl/lib/intel64\" >> /etc/ld.so.conf.d/intel.conf \\\n && ldconfig \\\n && echo \". /opt/intel/bin/compilervars.sh intel64\" >> /etc/bash.bashrc\n#   Install numpy with MKL\nRUN pip install Cython\nRUN cd /tmp \\\n && git clone https://github.com/numpy/numpy.git numpy \\\n && cd numpy \\\n && cp site.cfg.example site.cfg \\\n && echo \"\\n[mkl]\" >> site.cfg \\\n && echo \"include_dirs = /opt/intel/mkl/include/intel64/\" >> site.cfg \\\n && echo \"library_dirs = /opt/intel/mkl/lib/intel64/\" >> site.cfg \\\n && echo \"mkl_libs = mkl_rt\" >> site.cfg \\\n && echo \"lapack_libs =\" >> site.cfg \\\n && python setup.py build --fcompiler=gnu95 \\\n && python setup.py install\n#   Install scipy\nRUN cd /tmp \\\n && git clone https://github.com/scipy/scipy.git scipy \\\n && cd scipy \\\n && python setup.py build \\\n && python setup.py install\n#   Limit the system resource used during compilation\nENV LOCAL_RESOURCES=\"4096,8.0,1.0\"\n#   The TensorFlow version\nENV TF_VERSION=\"1.7\"\nRUN : build TensorFlow pip package \\\n && cd /tmp \\\n && curl -SL https://github.com/tensorflow/tensorflow/archive/r${TF_VERSION}.tar.gz | tar xzf -\nRUN cd /tmp/tensorflow-r${TF_VERSION} \\\n && sed -i '\\@https://github.com/google/protobuf/archive/0b059a3d8a8f8aa40dde7bea55edca4ec5dfea66.tar.gz@d' tensorflow/workspace.bzl \\\n && PYTHON_BIN_PATH=/usr/local/bin/python PYTHON_LIB_PATH=/usr/local/lib/python3.6/site-packages GCC_HOST_COMPILER_PATH=/usr/bin/gcc CC_OPT_FLAGS=\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" ENV CI_BUILD_PYTHON=python LD_LIBRARY_PATH=${LD_LIBRARY_PATH} PYTHON_BIN_PATH=/usr/bin/python PYTHON_LIB_PATH=/usr/local/lib/python3.6/dist-packages CC_OPT_FLAGS='-march=native' TF_NEED_JEMALLOC=1 TF_NEED_S3=0 TF_NEED_GDR=0 TF_NEED_VERBS=0 TF_NEED_MKL=1 TF_NEED_JEMALLOC=1 TF_NEED_GCP=0 TF_NEED_HDFS=0 TF_ENABLE_XLA=0 TF_NEED_VERBS=0 TF_NEED_OPENCL=0 TF_NEED_CUDA=0 TF_NEED_MPI=0 bash configure \\\n && bazel build --config=opt --local_resources ${LOCAL_RESOURCES} --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package \\\n && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nRUN ls -l /tmp/tensorflow_pkg\n#   vim: ft=dockerfile\n","originalDockerfileUglifiedHash":"3928e72c7cf0e0d0b2ef8009e5c0f9b2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7e585b6e789d844999f7fc3cf2ad10afcc83121a.dockerfile"}