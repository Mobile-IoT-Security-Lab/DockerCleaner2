{"seed":4185095582,"processedDockerfileHash":"34ad0654561a3ffd0df86f9874c3de99","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  讓Dlaravel-支援SSH環境Sample。\nFROM php:7.3.2-fpm\nARG user\n#  安裝ssh環境 \nENV OSSH_USER=\"${user:-dlaravel}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends openssh-server git pwgen -y\nRUN mkdir /var/run/sshd\nRUN sed -ri 's/^#?PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#AuthorizedKeysFile/AuthorizedKeysFile/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n#  Docker官方說明文件\n#  https://hub.docker.com/_/php/\nRUN apt-get update \\\n && apt-get install --no-install-recommends libfreetype6-dev libjpeg62-turbo-dev autoconf libc-dev pkg-config libmcrypt-dev libsnmp-dev libsmi2-common libsmi2-dev libperl-dev snmp libpng-dev ca-certificates curl xz-utils sudo cron git wget libmagickwand-dev libldb-dev libldap2-dev libsasl2-dev python vim unzip mysql-client zip libgeoip-dev libpq-dev libzip-dev libbz2-dev libgd2-dev libjpeg-dev libgif-dev libxml2-dev apt-utils supervisor wget -y \\\n && docker-php-ext-install -j$( nproc ;) pdo_mysql mysqli pgsql pdo_pgsql snmp \\\n && docker-php-ext-install -j$( nproc ;) exif hash gettext sockets ctype xml zip pcntl bcmath \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd\n#  docker-php-ext-install 可安裝外掛大概如下:\n#  bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo filter ftp gd gettext gmp hash iconv imap interbase intl json ldap mbstring mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql pdo_oci pdo_odbc pdo_pgsql pdo_sqlite pgsql phar posix pspell readline recode reflection session shmop simplexml snmp soap sockets sodium spl standard sysvmsg sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zend_test zip\n#  RUN  pecl install xdebug \\\n#       pecl install redis \\\n#       pecl install imagick \\\n#       && docker-php-ext-enable xdebug\nRUN pecl install redis pecl install imagick\n#  建立Dlaravel的使用者\nRUN adduser --quiet --disabled-password --shell /bin/bash --home /home/${OSSH_USER} --gecos \"User\" ${OSSH_USER} ; echo \"${OSSH_USER}:`pwgen `\" | chpasswd \\\n && echo \"dlaravel ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/dlaravel \\\n && chmod 0440 /etc/sudoers.d/dlaravel\n#  建立Dlaravel的ssh環境\nUSER ${OSSH_USER}\nRUN mkdir -p /home/${OSSH_USER}/.ssh \\\n && chmod 700 /home/${OSSH_USER}/.ssh\nRUN echo \"${KEY}\" > /home/${OSSH_USER}/.ssh/authorized_keys\nRUN chmod 600 /home/${OSSH_USER}/.ssh/authorized_keys\nUSER root\n#  安裝composer\nRUN EXPECTED_SIGNATURE=$( wget -q -O - https://composer.github.io/installer.sig ;) ; php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" ; ACTUAL_SIGNATURE=$( php -r \"echo hash_file('SHA384', 'composer-setup.php');\" ;) ; php composer-setup.php ; php -r \"unlink('composer-setup.php');\" ; mv composer.phar /usr/local/bin/composer ; sudo -u dlaravel /usr/local/bin/composer global require \"laravel/installer\" ; sudo -u dlaravel /usr/local/bin/composer global require \"phpunit/phpunit=5.5.*\" ; sudo -u dlaravel echo 'export TERM=xterm-256color' >> /home/dlaravel/.bashrc; sudo -u dlaravel echo 'export PATH=/home/dlaravel/.composer/vendor/bin:$PATH' >> /home/dlaravel/.bashrc; echo 'export TERM=xterm-256color' >> /root/.bashrc; echo 'export PATH=/root/.composer/vendor/bin:$PATH' >> /root/.bashrc\nEXPOSE 9000/tcp 22/tcp\nCMD [\"sh\", \"-c\", \"/usr/sbin/sshd\", \"-D\", \"&;\", \"php-fpm\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"# 讓Dlaravel-支援SSH環境Sample。\nFROM php:7.3.2-fpm\nARG user\n# 安裝ssh環境 \nENV OSSH_USER=\"${user:-dlaravel}\"\nRUN apt-get update \\\n && apt-get install openssh-server git pwgen -y\nRUN mkdir /var/run/sshd\nRUN sed -ri 's/^#?PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#AuthorizedKeysFile/AuthorizedKeysFile/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n# Docker官方說明文件\n# https://hub.docker.com/_/php/\nRUN apt-get update \\\n && apt-get install libfreetype6-dev libjpeg62-turbo-dev autoconf libc-dev pkg-config libmcrypt-dev libsnmp-dev libsmi2-common libsmi2-dev libperl-dev snmp libpng-dev ca-certificates curl xz-utils sudo cron git wget libmagickwand-dev libldb-dev libldap2-dev libsasl2-dev python vim unzip mysql-client zip libgeoip-dev libpq-dev libzip-dev libbz2-dev libgd2-dev libjpeg-dev libgif-dev libxml2-dev apt-utils supervisor wget -y \\\n && docker-php-ext-install -j$( nproc ;) pdo_mysql mysqli pgsql pdo_pgsql snmp \\\n && docker-php-ext-install -j$( nproc ;) exif hash gettext sockets ctype xml zip pcntl bcmath \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd\n# docker-php-ext-install 可安裝外掛大概如下:\n# bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo filter ftp gd gettext gmp hash iconv imap interbase intl json ldap mbstring mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql pdo_oci pdo_odbc pdo_pgsql pdo_sqlite pgsql phar posix pspell readline recode reflection session shmop simplexml snmp soap sockets sodium spl standard sysvmsg sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zend_test zip\n# RUN  pecl install xdebug \\\n#      pecl install redis \\\n#      pecl install imagick \\\n#      && docker-php-ext-enable xdebug\nRUN pecl install redis pecl install imagick\n# 建立Dlaravel的使用者\nRUN adduser --quiet --disabled-password --shell /bin/bash --home /home/${OSSH_USER} --gecos \"User\" ${OSSH_USER} ; echo \"${OSSH_USER}:`pwgen `\" | chpasswd \\\n && echo \"dlaravel ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/dlaravel \\\n && chmod 0440 /etc/sudoers.d/dlaravel\n# 建立Dlaravel的ssh環境\nUSER ${OSSH_USER}\nRUN mkdir -p /home/${OSSH_USER}/.ssh \\\n && chmod 700 /home/${OSSH_USER}/.ssh\nRUN echo \"${KEY}\" > /home/${OSSH_USER}/.ssh/authorized_keys\nRUN chmod 600 /home/${OSSH_USER}/.ssh/authorized_keys\nUSER root\n# 安裝composer\nRUN EXPECTED_SIGNATURE=$( wget -q -O - https://composer.github.io/installer.sig ;) ; php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" ; ACTUAL_SIGNATURE=$( php -r \"echo hash_file('SHA384', 'composer-setup.php');\" ;) ; php composer-setup.php ; php -r \"unlink('composer-setup.php');\" ; mv composer.phar /usr/local/bin/composer ; sudo -u dlaravel /usr/local/bin/composer global require \"laravel/installer\" ; sudo -u dlaravel /usr/local/bin/composer global require \"phpunit/phpunit=5.5.*\" ; sudo -u dlaravel echo 'export TERM=xterm-256color' >> /home/dlaravel/.bashrc; sudo -u dlaravel echo 'export PATH=/home/dlaravel/.composer/vendor/bin:$PATH' >> /home/dlaravel/.bashrc; echo 'export TERM=xterm-256color' >> /root/.bashrc; echo 'export PATH=/root/.composer/vendor/bin:$PATH' >> /root/.bashrc\nEXPOSE 9000/tcp 22/tcp\nCMD [\"sh\", \"-c\", \"/usr/sbin/sshd\", \"-D\", \"&;\", \"php-fpm\"]\n","injectedSmells":[],"originalDockerfileHash":"70341b48fa62f7f8470e0f86f9737d9e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  讓Dlaravel-支援SSH環境Sample。\nFROM php:7.3.2-fpm\nARG user\n#  安裝ssh環境 \nENV OSSH_USER=\"${user:-dlaravel}\"\nRUN apt-get update \\\n && apt-get install openssh-server git pwgen -y\nRUN mkdir /var/run/sshd\nRUN sed -ri 's/^#?PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#AuthorizedKeysFile/AuthorizedKeysFile/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n#  Docker官方說明文件\n#  https://hub.docker.com/_/php/\nRUN apt-get update \\\n && apt-get install libfreetype6-dev libjpeg62-turbo-dev autoconf libc-dev pkg-config libmcrypt-dev libsnmp-dev libsmi2-common libsmi2-dev libperl-dev snmp libpng-dev ca-certificates curl xz-utils sudo cron git wget libmagickwand-dev libldb-dev libldap2-dev libsasl2-dev python vim unzip mysql-client zip libgeoip-dev libpq-dev libzip-dev libbz2-dev libgd2-dev libjpeg-dev libgif-dev libxml2-dev apt-utils supervisor wget -y \\\n && docker-php-ext-install -j$( nproc ;) pdo_mysql mysqli pgsql pdo_pgsql snmp \\\n && docker-php-ext-install -j$( nproc ;) exif hash gettext sockets ctype xml zip pcntl bcmath \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd\n#  docker-php-ext-install 可安裝外掛大概如下:\n#  bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo filter ftp gd gettext gmp hash iconv imap interbase intl json ldap mbstring mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql pdo_oci pdo_odbc pdo_pgsql pdo_sqlite pgsql phar posix pspell readline recode reflection session shmop simplexml snmp soap sockets sodium spl standard sysvmsg sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zend_test zip\n#  RUN  pecl install xdebug \\\n#       pecl install redis \\\n#       pecl install imagick \\\n#       && docker-php-ext-enable xdebug\nRUN pecl install redis pecl install imagick\n#  建立Dlaravel的使用者\nRUN adduser --quiet --disabled-password --shell /bin/bash --home /home/${OSSH_USER} --gecos \"User\" ${OSSH_USER} ; echo \"${OSSH_USER}:`pwgen `\" | chpasswd \\\n && echo \"dlaravel ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/dlaravel \\\n && chmod 0440 /etc/sudoers.d/dlaravel\n#  建立Dlaravel的ssh環境\nUSER ${OSSH_USER}\nRUN mkdir -p /home/${OSSH_USER}/.ssh \\\n && chmod 700 /home/${OSSH_USER}/.ssh\nRUN echo \"${KEY}\" > /home/${OSSH_USER}/.ssh/authorized_keys\nRUN chmod 600 /home/${OSSH_USER}/.ssh/authorized_keys\nUSER root\n#  安裝composer\nRUN EXPECTED_SIGNATURE=$( wget -q -O - https://composer.github.io/installer.sig ;) ; php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" ; ACTUAL_SIGNATURE=$( php -r \"echo hash_file('SHA384', 'composer-setup.php');\" ;) ; php composer-setup.php ; php -r \"unlink('composer-setup.php');\" ; mv composer.phar /usr/local/bin/composer ; sudo -u dlaravel /usr/local/bin/composer global require \"laravel/installer\" ; sudo -u dlaravel /usr/local/bin/composer global require \"phpunit/phpunit=5.5.*\" ; sudo -u dlaravel echo 'export TERM=xterm-256color' >> /home/dlaravel/.bashrc; sudo -u dlaravel echo 'export PATH=/home/dlaravel/.composer/vendor/bin:$PATH' >> /home/dlaravel/.bashrc; echo 'export TERM=xterm-256color' >> /root/.bashrc; echo 'export PATH=/root/.composer/vendor/bin:$PATH' >> /root/.bashrc\nEXPOSE 9000/tcp 22/tcp\nCMD [\"sh\", \"-c\", \"/usr/sbin/sshd\", \"-D\", \"&;\", \"php-fpm\"]\n","originalDockerfileUglifiedHash":"60c10c2f4d8addce3899487c11667fad","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4658faf913f59fecd01c99278e6a784836ac567d.dockerfile"}