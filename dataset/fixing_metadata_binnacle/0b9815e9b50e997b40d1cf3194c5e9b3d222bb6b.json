{"seed":2130238635,"processedDockerfileHash":"d4f38c15687b785aa768815ab1cabc47","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial\nRUN apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 -qq -y )\nRUN locale-gen en_US en_US.UTF-8 \\\n && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list' \\\n && apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n#   upgrade distro\nRUN : \\\n && apt-get -qq dist-upgrade -y \\\n && :\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 wget=1.17.1-1ubuntu1.5 build-essential=12.1ubuntu2 cppcheck=1.72-1 cmake=3.5.1-1ubuntu3 libopencv-dev=2.4.9.1+dfsg-1.5ubuntu1.1 libpoco-dev=1.3.6p1-5.1ubuntu0.1 libpocofoundation9v5=1.3.6p1-5.1ubuntu0.1 libpocofoundation9v5-dbg=1.3.6p1-5.1ubuntu0.1 python-empy=3.3.2-1build1 python3-dev=3.5.1-3 python3-empy=3.3.2-1build1 python3-nose=1.3.7-1 python3-pip=8.1.1-2ubuntu0.6 python3-setuptools=20.7.0-1 python3-vcstool libtinyxml-dev=2.6.2-3 libeigen3-dev=3.3~beta1-2 libasio-dev=1:1.10.6-3 libtinyxml2-dev=2.2.0-1.1ubuntu1 -qq -y )\n#   special depends for ORK renderer\nRUN (apt-get update ;apt-get install --no-install-recommends libboost-dev=1.58.0.1ubuntu1 libassimp-dev=3.2~dfsg-3 freeglut3-dev=2.8.1-2 libgl1-mesa-dev=18.0.5-0ubuntu0~16.04.1 libfreeimage-dev=3.17.0+ds1-2ubuntu0.1 libxmu-dev=2:1.1.2-2 libxi-dev=2:1.7.6-1 libsdl1.2-dev=1.2.15+dfsg1-3ubuntu0.1 libosmesa6-dev=18.0.5-0ubuntu0~16.04.1 libusb-1.0-0-dev=2:1.0.20-1 libudev-dev=229-4ubuntu21.31 -qq -y )\n#   special depends for Astra camera driver\nRUN (apt-get update ;apt-get install --no-install-recommends libboost-system-dev=1.58.0.1ubuntu1 libboost-thread-dev=1.58.0.1ubuntu1 -qq -y )\n#   special depends for demo\nRUN pip3 install --upgrade pip\nRUN pip3 install numpy math3d\n#   setup ros2 workspace\nENV ROS2_WS=\"/root/picky_robot_ws\"\nRUN rm -rf $ROS2_WS\nRUN mkdir -p $ROS2_WS/src\nWORKDIR $ROS2_WS\nRUN wget https://raw.githubusercontent.com/ros2/ros2/master/ros2.repos\nRUN vcs import src < ros2.repos\n#   TODO temporary fix for python memory errors\n#   RUN cd src/ros2/rosidl && git pull && git checkout fix_destroy_segfault\n#   RUN cd src/ros2/rclpy && git pull && git checkout fix_destroy_segfault\n#   set up picky robot demos\nRUN wget https://raw.githubusercontent.com/Kukanani/picky_robot/ros2/picky_robot.repos\nRUN vcs import src/ros2 < picky_robot.repos\n#   LINEMOD data and meshes\nRUN git clone https://github.com/Kukanani/picky_robot_data.git\n#   TODO temporary fix to avoid dependency on kobuki drivers\nRUN touch src/ros2/turtlebot2_demo/turtlebot2_follower/AMENT_IGNORE\nRUN touch src/ros2/turtlebot2_demo/turtlebot2_drivers/AMENT_IGNORE\n#   build everything\nWORKDIR $ROS2_WS\nRUN src/ament/ament_tools/scripts/ament.py build --symlink-install --isolated --parallel\nRUN echo \"export ROS2_WS=/root/picky_robot_ws\" >> /root/.bashrc \\\n && echo \"export RMW_IMPLEMENTATION=rmw_fastrtps_cpp\" >> /root/.bashrc \\\n && echo \"source $ROS2_WS/install_isolated/local_setup.bash\" >> /root/.bashrc\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nENV PATH=\"/usr/local/nvidia/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial\nRUN apt-get update -qq \\\n && apt-get install locales -qq -y\nRUN locale-gen en_US en_US.UTF-8 \\\n && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list' \\\n && apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n#  upgrade distro\nRUN apt-get update -qq \\\n && apt-get -qq dist-upgrade -y \\\n && apt-get update -qq\nRUN apt-get install git wget build-essential cppcheck cmake libopencv-dev libpoco-dev libpocofoundation9v5 libpocofoundation9v5-dbg python-empy python3-dev python3-empy python3-nose python3-pip python3-setuptools python3-vcstool libtinyxml-dev libeigen3-dev libasio-dev libtinyxml2-dev -qq -y\n#  special depends for ORK renderer\nRUN apt-get install libboost-dev libassimp-dev freeglut3-dev libgl1-mesa-dev libfreeimage-dev libxmu-dev libxi-dev libsdl1.2-dev libosmesa6-dev libusb-1.0-0-dev libudev-dev -qq -y\n#  special depends for Astra camera driver\nRUN apt-get install libboost-system-dev libboost-thread-dev -qq -y\n#  special depends for demo\nRUN pip3 install --upgrade pip\nRUN pip3 install numpy math3d\n#  setup ros2 workspace\nENV ROS2_WS=\"/root/picky_robot_ws\"\nRUN rm -rf $ROS2_WS\nRUN mkdir -p $ROS2_WS/src\nWORKDIR $ROS2_WS\nRUN wget https://raw.githubusercontent.com/ros2/ros2/master/ros2.repos\nRUN vcs import src < ros2.repos\n#  TODO temporary fix for python memory errors\n#  RUN cd src/ros2/rosidl && git pull && git checkout fix_destroy_segfault\n#  RUN cd src/ros2/rclpy && git pull && git checkout fix_destroy_segfault\n#  set up picky robot demos\nRUN wget https://raw.githubusercontent.com/Kukanani/picky_robot/ros2/picky_robot.repos\nRUN vcs import src/ros2 < picky_robot.repos\n#  LINEMOD data and meshes\nRUN git clone https://github.com/Kukanani/picky_robot_data.git\n#  TODO temporary fix to avoid dependency on kobuki drivers\nRUN touch src/ros2/turtlebot2_demo/turtlebot2_follower/AMENT_IGNORE\nRUN touch src/ros2/turtlebot2_demo/turtlebot2_drivers/AMENT_IGNORE\n#  build everything\nWORKDIR $ROS2_WS\nRUN src/ament/ament_tools/scripts/ament.py build --symlink-install --isolated --parallel\nRUN echo \"export ROS2_WS=/root/picky_robot_ws\" >> /root/.bashrc \\\n && echo \"export RMW_IMPLEMENTATION=rmw_fastrtps_cpp\" >> /root/.bashrc \\\n && echo \"source $ROS2_WS/install_isolated/local_setup.bash\" >> /root/.bashrc\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nENV PATH=\"/usr/local/nvidia/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\"\n","injectedSmells":[],"originalDockerfileHash":"b176d56e17c026035efdcf377ef8dcab","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial\nRUN apt-get update -qq \\\n && apt-get install locales -qq -y\nRUN locale-gen en_US en_US.UTF-8 \\\n && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list' \\\n && apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n#   upgrade distro\nRUN apt-get update -qq \\\n && apt-get -qq dist-upgrade -y \\\n && apt-get update -qq\nRUN apt-get install git wget build-essential cppcheck cmake libopencv-dev libpoco-dev libpocofoundation9v5 libpocofoundation9v5-dbg python-empy python3-dev python3-empy python3-nose python3-pip python3-setuptools python3-vcstool libtinyxml-dev libeigen3-dev libasio-dev libtinyxml2-dev -qq -y\n#   special depends for ORK renderer\nRUN apt-get install libboost-dev libassimp-dev freeglut3-dev libgl1-mesa-dev libfreeimage-dev libxmu-dev libxi-dev libsdl1.2-dev libosmesa6-dev libusb-1.0-0-dev libudev-dev -qq -y\n#   special depends for Astra camera driver\nRUN apt-get install libboost-system-dev libboost-thread-dev -qq -y\n#   special depends for demo\nRUN pip3 install --upgrade pip\nRUN pip3 install numpy math3d\n#   setup ros2 workspace\nENV ROS2_WS=\"/root/picky_robot_ws\"\nRUN rm -rf $ROS2_WS\nRUN mkdir -p $ROS2_WS/src\nWORKDIR $ROS2_WS\nRUN wget https://raw.githubusercontent.com/ros2/ros2/master/ros2.repos\nRUN vcs import src < ros2.repos\n#   TODO temporary fix for python memory errors\n#   RUN cd src/ros2/rosidl && git pull && git checkout fix_destroy_segfault\n#   RUN cd src/ros2/rclpy && git pull && git checkout fix_destroy_segfault\n#   set up picky robot demos\nRUN wget https://raw.githubusercontent.com/Kukanani/picky_robot/ros2/picky_robot.repos\nRUN vcs import src/ros2 < picky_robot.repos\n#   LINEMOD data and meshes\nRUN git clone https://github.com/Kukanani/picky_robot_data.git\n#   TODO temporary fix to avoid dependency on kobuki drivers\nRUN touch src/ros2/turtlebot2_demo/turtlebot2_follower/AMENT_IGNORE\nRUN touch src/ros2/turtlebot2_demo/turtlebot2_drivers/AMENT_IGNORE\n#   build everything\nWORKDIR $ROS2_WS\nRUN src/ament/ament_tools/scripts/ament.py build --symlink-install --isolated --parallel\nRUN echo \"export ROS2_WS=/root/picky_robot_ws\" >> /root/.bashrc \\\n && echo \"export RMW_IMPLEMENTATION=rmw_fastrtps_cpp\" >> /root/.bashrc \\\n && echo \"source $ROS2_WS/install_isolated/local_setup.bash\" >> /root/.bashrc\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nENV PATH=\"/usr/local/nvidia/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\"\n","originalDockerfileUglifiedHash":"ff1a8ba0654f0eb5574ecabff7a5ea13","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0b9815e9b50e997b40d1cf3194c5e9b3d222bb6b.dockerfile"}