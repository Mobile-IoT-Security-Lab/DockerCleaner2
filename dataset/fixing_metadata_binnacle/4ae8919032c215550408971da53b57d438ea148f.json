{"seed":780944734,"processedDockerfileHash":"cbe61ccfd98b6e5f18ea51373f54436b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   OData producer on top of MySQL and Apache\n#\n#   VERSION               0.0.1\nFROM ubuntu:trusty\n#   Format: MAINTAINER Name <email@addr.ess>\nMAINTAINER Jonas Colmsjö <jonas@gizur.com>\nRUN echo \"export HOME=/root\" >> /root/.profile\n#   Mirros: http://ftp.acc.umu.se/ubuntu/ http://us.archive.ubuntu.com/ubuntu/\nRUN echo \"deb http://ftp.acc.umu.se/ubuntu/ trusty-updates main restricted\" > /etc/apt/source.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 nano=2.2.6-1ubuntu1 curl=7.35.0-1ubuntu2.20 git=1:1.9.1-1ubuntu0.10 -y )\n#\n#   Install supervisord (used to handle processes)\n#   ----------------------------------------------\n#\n#   Installation with easy_install is more reliable. apt-get don't always work.\nRUN (apt-get update ;apt-get install --no-install-recommends python=2.7.5-5ubuntu3 python-setuptools=3.3-1ubuntu2 -y )\nRUN easy_install supervisor\nCOPY ./src-docker/etc-supervisord.conf /etc/supervisord.conf\nCOPY ./src-docker/etc-supervisor-conf.d-supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN mkdir -p /var/log/supervisor/\n#\n#   Install rsyslog\n#   ---------------\n#\nRUN (apt-get update ;apt-get install --no-install-recommends rsyslog=7.4.4-1ubuntu2.7 -y )\nRUN mv /etc/rsyslog.conf /etc/rsyslog.conf.org\nCOPY ./src-docker/etc-rsyslog.conf /etc/rsyslog.conf\n#\n#   Install cron\n#   ------------\n#   Test to update the server automatically periodically (need to find a way to restart the server also)\n#   Just comment this section out to turn it off\n#  RUN echo '*/90 * * * *  /bin/bash -c \"date > last-run.txt; npm install -g odataserver > ./install.log;source /tmp/odataserver.pid; kill $PID\"' > /mycron\n#  RUN crontab /mycron\n#  ADD ./src-docker/etc-pam.d-cron /etc/pam.d/cron\n#\n#   Install Apache\n#   ---------------\nRUN (apt-get update ;apt-get install --no-install-recommends apache2=2.4.7-1ubuntu4.22 php5=5.5.9+dfsg-1ubuntu4.29 php5-curl=5.5.9+dfsg-1ubuntu4.29 php5-mysql=5.5.9+dfsg-1ubuntu4.29 php5-mcrypt=5.4.6-0ubuntu5 -y )\nRUN a2enmod rewrite status\nCOPY ./src-docker/etc-apache2-apache2.conf /etc/apache2/apache2.conf\nCOPY ./src-docker/etc-apache2-ports.conf /etc/apache2/ports.conf\nCOPY ./src-docker/etc-apache2-mods-available-status.conf /etc/apache2/mods-available/status.conf\nCOPY ./src-docker/etc-apache2-sites-available-000-default.conf /etc/apache2/sites-available/000-default.conf\nRUN rm /var/www/html/index.html\nRUN echo \"<?php\\nphpinfo();\\n \" > /var/www/html/info.php\n#   Install phpMyAdmin\nCOPY ./src-phpmyadmin/phpMyAdmin-4.0.8-all-languages.tar.gz /var/www/html/\nCOPY ./src-phpmyadmin/phpMyAdmin-4.3.12-all-languages.tar.gz /var/www/html/\nCOPY ./src-phpmyadmin/config.inc.php /var/www/html/phpMyAdmin-4.0.8-all-languages/config.inc.php\nCOPY ./src-phpmyadmin/config.inc.php /var/www/html/phpMyAdmin-4.3.12-all-languages/config.inc.php\n#\n#   Install NodeJS\n#   --------------\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 g++=4:4.8.2-1ubuntu6 -y )\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.13.1/install.sh | bash\n#   RUN echo \"[ -s $HOME/.nvm/nvm.sh ] && . $HOME/.nvm/nvm.sh\" >> $HOME/.profile\nRUN /bin/bash -c \"source $HOME/.profile \\\n && nvm install v0.12.2 \\\n && nvm alias default v0.12.2\"\nCOPY ./src-docker/init-node.sh /src/\nRUN /src/init-node.sh\n#\n#   Install MySQL\n#   -------------\n#   init script and test db\nCOPY ./src-docker/init-mysql.sh /src/\n#  ADD ./src-sql/test-wp.sql /src/\n#  ADD ./src-sql/test-vtiger.sql /src/\n#   Install MySQL server\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server\n#   Fix configuration\nRUN sed -i -e\"s/^bind-address\\s*=\\s*127.0.0.1/bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\n#   Setup admin user\nRUN /src/init-mysql.sh\n#\n#   Add source for the odatamysql server\n#   ------------------------------------\n#   not used anymore ADD ./bin/start.sh /\nCOPY ./server.key /\nCOPY ./server.cer /\n#  ADD ./package.json /\n#  ADD ./bin/run_tests.sh /bin/\n#  ADD ./bin/start.sh /bin/\n#  ADD ./src /src\n#  ADD ./Usage.md /\n#  ADD ./config.js /\n#  ADD ./tests /tests\n#  RUN cd /; npm install\n#\n#   Install from npm also (select which version to run from supervisord.conf)\n#\nRUN mkdir /odataserver\nRUN /bin/bash -c \"cd /odataserver; npm install odataserver\"\nRUN /bin/bash -c \"cd /odataserver; npm link odataserver\"\nCOPY ./bin/start2.sh /\n#\n#   Start things\n#   -----------\n#   RUN apt-get clean && rm -rf /var/lib/apt/lists/*\n#   Fix permissions\nRUN chown -R www-data:www-data /var/www/html\nEXPOSE 80/tcp 81/tcp 443/tcp 9000/tcp\nCMD [\"supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  OData producer on top of MySQL and Apache\n#\n#  VERSION               0.0.1\nFROM ubuntu:trusty\n#  Format: MAINTAINER Name <email@addr.ess>\nMAINTAINER Jonas Colmsjö <jonas@gizur.com>\nRUN echo \"export HOME=/root\" >> /root/.profile\n#  Mirros: http://ftp.acc.umu.se/ubuntu/ http://us.archive.ubuntu.com/ubuntu/\nRUN echo \"deb http://ftp.acc.umu.se/ubuntu/ trusty-updates main restricted\" > /etc/apt/source.list\nRUN apt-get update\nRUN apt-get install wget nano curl git -y\n#\n#  Install supervisord (used to handle processes)\n#  ----------------------------------------------\n#\n#  Installation with easy_install is more reliable. apt-get don't always work.\nRUN apt-get install python python-setuptools -y\nRUN easy_install supervisor\nADD ./src-docker/etc-supervisord.conf /etc/supervisord.conf\nADD ./src-docker/etc-supervisor-conf.d-supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN mkdir -p /var/log/supervisor/\n#\n#  Install rsyslog\n#  ---------------\n#\nRUN apt-get install rsyslog -y\nRUN mv /etc/rsyslog.conf /etc/rsyslog.conf.org\nADD ./src-docker/etc-rsyslog.conf /etc/rsyslog.conf\n#\n#  Install cron\n#  ------------\n#  Test to update the server automatically periodically (need to find a way to restart the server also)\n#  Just comment this section out to turn it off\n# RUN echo '*/90 * * * *  /bin/bash -c \"date > last-run.txt; npm install -g odataserver > ./install.log;source /tmp/odataserver.pid; kill $PID\"' > /mycron\n# RUN crontab /mycron\n# ADD ./src-docker/etc-pam.d-cron /etc/pam.d/cron\n#\n#  Install Apache\n#  ---------------\nRUN apt-get install apache2 php5 php5-curl php5-mysql php5-mcrypt -y\nRUN a2enmod rewrite status\nADD ./src-docker/etc-apache2-apache2.conf /etc/apache2/apache2.conf\nADD ./src-docker/etc-apache2-ports.conf /etc/apache2/ports.conf\nADD ./src-docker/etc-apache2-mods-available-status.conf /etc/apache2/mods-available/status.conf\nADD ./src-docker/etc-apache2-sites-available-000-default.conf /etc/apache2/sites-available/000-default.conf\nRUN rm /var/www/html/index.html\nRUN echo \"<?php\\nphpinfo();\\n \" > /var/www/html/info.php\n#  Install phpMyAdmin\nADD ./src-phpmyadmin/phpMyAdmin-4.0.8-all-languages.tar.gz /var/www/html/\nADD ./src-phpmyadmin/phpMyAdmin-4.3.12-all-languages.tar.gz /var/www/html/\nADD ./src-phpmyadmin/config.inc.php /var/www/html/phpMyAdmin-4.0.8-all-languages/config.inc.php\nADD ./src-phpmyadmin/config.inc.php /var/www/html/phpMyAdmin-4.3.12-all-languages/config.inc.php\n#\n#  Install NodeJS\n#  --------------\nRUN apt-get install build-essential g++ -y\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.13.1/install.sh | bash\n#  RUN echo \"[ -s $HOME/.nvm/nvm.sh ] && . $HOME/.nvm/nvm.sh\" >> $HOME/.profile\nRUN /bin/bash -c \"source $HOME/.profile \\\n && nvm install v0.12.2 \\\n && nvm alias default v0.12.2\"\nADD ./src-docker/init-node.sh /src/\nRUN /src/init-node.sh\n#\n#  Install MySQL\n#  -------------\n#  init script and test db\nADD ./src-docker/init-mysql.sh /src/\n# ADD ./src-sql/test-wp.sql /src/\n# ADD ./src-sql/test-vtiger.sql /src/\n#  Install MySQL server\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server\n#  Fix configuration\nRUN sed -i -e\"s/^bind-address\\s*=\\s*127.0.0.1/bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\n#  Setup admin user\nRUN /src/init-mysql.sh\n#\n#  Add source for the odatamysql server\n#  ------------------------------------\n#  not used anymore ADD ./bin/start.sh /\nADD ./server.key /\nADD ./server.cer /\n# ADD ./package.json /\n# ADD ./bin/run_tests.sh /bin/\n# ADD ./bin/start.sh /bin/\n# ADD ./src /src\n# ADD ./Usage.md /\n# ADD ./config.js /\n# ADD ./tests /tests\n# RUN cd /; npm install\n#\n#  Install from npm also (select which version to run from supervisord.conf)\n#\nRUN mkdir /odataserver\nRUN /bin/bash -c \"cd /odataserver; npm install odataserver\"\nRUN /bin/bash -c \"cd /odataserver; npm link odataserver\"\nADD ./bin/start2.sh /\n#\n#  Start things\n#  -----------\n#  RUN apt-get clean && rm -rf /var/lib/apt/lists/*\n#  Fix permissions\nRUN chown -R www-data:www-data /var/www/html\nEXPOSE 80/tcp 81/tcp 443/tcp 9000/tcp\nCMD [\"supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"16de657c152cb410858bc89c2e8c455e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   OData producer on top of MySQL and Apache\n#\n#   VERSION               0.0.1\nFROM ubuntu:trusty\n#   Format: MAINTAINER Name <email@addr.ess>\nMAINTAINER Jonas Colmsjö <jonas@gizur.com>\nRUN echo \"export HOME=/root\" >> /root/.profile\n#   Mirros: http://ftp.acc.umu.se/ubuntu/ http://us.archive.ubuntu.com/ubuntu/\nRUN echo \"deb http://ftp.acc.umu.se/ubuntu/ trusty-updates main restricted\" > /etc/apt/source.list\nRUN apt-get update\nRUN apt-get install wget nano curl git -y\n#\n#   Install supervisord (used to handle processes)\n#   ----------------------------------------------\n#\n#   Installation with easy_install is more reliable. apt-get don't always work.\nRUN apt-get install python python-setuptools -y\nRUN easy_install supervisor\nADD ./src-docker/etc-supervisord.conf /etc/supervisord.conf\nADD ./src-docker/etc-supervisor-conf.d-supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN mkdir -p /var/log/supervisor/\n#\n#   Install rsyslog\n#   ---------------\n#\nRUN apt-get install rsyslog -y\nRUN mv /etc/rsyslog.conf /etc/rsyslog.conf.org\nADD ./src-docker/etc-rsyslog.conf /etc/rsyslog.conf\n#\n#   Install cron\n#   ------------\n#   Test to update the server automatically periodically (need to find a way to restart the server also)\n#   Just comment this section out to turn it off\n#  RUN echo '*/90 * * * *  /bin/bash -c \"date > last-run.txt; npm install -g odataserver > ./install.log;source /tmp/odataserver.pid; kill $PID\"' > /mycron\n#  RUN crontab /mycron\n#  ADD ./src-docker/etc-pam.d-cron /etc/pam.d/cron\n#\n#   Install Apache\n#   ---------------\nRUN apt-get install apache2 php5 php5-curl php5-mysql php5-mcrypt -y\nRUN a2enmod rewrite status\nADD ./src-docker/etc-apache2-apache2.conf /etc/apache2/apache2.conf\nADD ./src-docker/etc-apache2-ports.conf /etc/apache2/ports.conf\nADD ./src-docker/etc-apache2-mods-available-status.conf /etc/apache2/mods-available/status.conf\nADD ./src-docker/etc-apache2-sites-available-000-default.conf /etc/apache2/sites-available/000-default.conf\nRUN rm /var/www/html/index.html\nRUN echo \"<?php\\nphpinfo();\\n \" > /var/www/html/info.php\n#   Install phpMyAdmin\nADD ./src-phpmyadmin/phpMyAdmin-4.0.8-all-languages.tar.gz /var/www/html/\nADD ./src-phpmyadmin/phpMyAdmin-4.3.12-all-languages.tar.gz /var/www/html/\nADD ./src-phpmyadmin/config.inc.php /var/www/html/phpMyAdmin-4.0.8-all-languages/config.inc.php\nADD ./src-phpmyadmin/config.inc.php /var/www/html/phpMyAdmin-4.3.12-all-languages/config.inc.php\n#\n#   Install NodeJS\n#   --------------\nRUN apt-get install build-essential g++ -y\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.13.1/install.sh | bash\n#   RUN echo \"[ -s $HOME/.nvm/nvm.sh ] && . $HOME/.nvm/nvm.sh\" >> $HOME/.profile\nRUN /bin/bash -c \"source $HOME/.profile \\\n && nvm install v0.12.2 \\\n && nvm alias default v0.12.2\"\nADD ./src-docker/init-node.sh /src/\nRUN /src/init-node.sh\n#\n#   Install MySQL\n#   -------------\n#   init script and test db\nADD ./src-docker/init-mysql.sh /src/\n#  ADD ./src-sql/test-wp.sql /src/\n#  ADD ./src-sql/test-vtiger.sql /src/\n#   Install MySQL server\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server\n#   Fix configuration\nRUN sed -i -e\"s/^bind-address\\s*=\\s*127.0.0.1/bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\n#   Setup admin user\nRUN /src/init-mysql.sh\n#\n#   Add source for the odatamysql server\n#   ------------------------------------\n#   not used anymore ADD ./bin/start.sh /\nADD ./server.key /\nADD ./server.cer /\n#  ADD ./package.json /\n#  ADD ./bin/run_tests.sh /bin/\n#  ADD ./bin/start.sh /bin/\n#  ADD ./src /src\n#  ADD ./Usage.md /\n#  ADD ./config.js /\n#  ADD ./tests /tests\n#  RUN cd /; npm install\n#\n#   Install from npm also (select which version to run from supervisord.conf)\n#\nRUN mkdir /odataserver\nRUN /bin/bash -c \"cd /odataserver; npm install odataserver\"\nRUN /bin/bash -c \"cd /odataserver; npm link odataserver\"\nADD ./bin/start2.sh /\n#\n#   Start things\n#   -----------\n#   RUN apt-get clean && rm -rf /var/lib/apt/lists/*\n#   Fix permissions\nRUN chown -R www-data:www-data /var/www/html\nEXPOSE 80/tcp 81/tcp 443/tcp 9000/tcp\nCMD [\"supervisord\"]\n","originalDockerfileUglifiedHash":"470ffdc292e6fced2813cd2e7e3f963d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4ae8919032c215550408971da53b57d438ea148f.dockerfile"}