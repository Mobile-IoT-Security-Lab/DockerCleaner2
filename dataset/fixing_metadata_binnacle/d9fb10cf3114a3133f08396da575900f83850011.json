{"seed":4069022943,"processedDockerfileHash":"c88a4d2174efb08a47f89879cfeff273","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ----------------------------------------------------\nFROM crs4_pydoop/base:latest\n#   ------------------------------------------------------------------\n#   Get zookeeper\nENV zoo_ver=\"zookeeper-3.4.6\"\nENV zoo_tgz=\"${zoo_ver}.tar.gz\"\nENV zoo_site=\"http://mirror.nohup.it/apache/zookeeper\"\nENV zoo_tgz_site=\"${zoo_site}/${zoo_ver}\"\nRUN wget ${zoo_tgz_site}/${zoo_tgz} -O ${zoo_tgz} \\\n && mkdir -p /opt \\\n && tar -C /opt -xzf ${zoo_tgz} \\\n && rm -f ${zoo_tgz} \\\n && ln -s /opt/${zoo_ver} /opt/zookeeper\nENV ZOO_DATA_DIR=\"/data/zookeeper/data\"\nENV ZOO_CLIENT_PORT=\"2181\"\nEXPOSE ${ZOO_CLIENT_PORT}\nRUN mkdir -p ${ZOO_DATA_DIR}\nRUN echo \"tickTime=2000\" > /opt/zookeeper/conf/zoo.cfg \\\n && echo \"dataDir ${ZOO_DATA_DIR}\" >> /opt/zookeeper/conf/zoo.cfg \\\n && echo \"clientPort ${ZOO_CLIENT_PORT}\" >> /opt/zookeeper/conf/zoo.cfg \\\n && echo 1 > ${ZOO_DATA_DIR}/myid\n#   Note that we are forcing the installation into dist-packages,\n#   so that it will be possible to share kazoo and externally mount /usr/local later.\nRUN pip install kazoo==2.9.0 -t /usr/lib/python2.7/dist-packages\nCOPY scripts/zk_wait.py /tmp/\nCOPY scripts/zk_set.py /tmp/\n#   -----------------------------------------------------------------\n#   Get hadoop\nENV hdp_ver=\"hadoop-2.6.0\"\nENV hdp_tgz=\"${hdp_ver}.tar.gz\"\nENV hdp_site=\"http://mirror.nohup.it/apache/hadoop/common\"\nENV hdp_tgz_site=\"${hdp_site}/hadoop-2.6.0\"\nRUN wget ${hdp_tgz_site}/${hdp_tgz} -O ${hdp_tgz} \\\n && mkdir -p /opt \\\n && tar -C /opt -xzf ${hdp_tgz} \\\n && rm -f ${hdp_tgz} \\\n && ln -s /opt/${hdp_ver} /opt/hadoop\n#   ------------------------------------------------------------------\n#   User:Group\t   Daemons\n#   hdfs:hadoop\t   NameNode, Secondary NameNode, JournalNode, DataNode\n#   yarn:hadoop\t   ResourceManager, NodeManager\n#   mapred:hadoop\t MapReduce JobHistory Server\nENV HADOOP_GROUP=\"hadoop\"\nENV HDFS_USER=\"hdfs\"\nENV YARN_USER=\"yarn\"\nENV MAPRED_USER=\"mapred\"\nENV HDP_DATA_ROOT=\"/data/hadoop\"\nENV LOG_DIR_ROOT=\"/tmp/logs\"\nENV HADOOP_TMP_DIR=\"/tmp\"\nENV HADOOP_CONF_DIR=\"/opt/hadoop/etc/hadoop\"\nENV DFS_NAME_DIR=\"${HDP_DATA_ROOT}/hdfs/nn\"\nENV DFS_DATA_DIR=\"${HDP_DATA_ROOT}/hdfs/dn\"\nENV DFS_CHECKPOINT_DIR=\"${HDP_DATA_ROOT}/hdfs/snn\"\nENV HDFS_LOG_DIR=\"${LOG_DIR_ROOT}/hdfs\"\nENV HDFS_PID_DIR=\"${HDP_DATA_ROOT}/pid/hdfs\"\nENV YARN_LOCAL_DIR=\"${HDP_DATA_ROOT}/yarn\"\nENV YARN_LOG_DIR=\"${LOG_DIR_ROOT}/yarn\"\nENV YARN_LOCAL_LOG_DIR=\"${YARN_LOCAL_DIR}/userlogs\"\nENV YARN_PID_DIR=\"${HDP_DATA_ROOT}/pid/yarn\"\nENV YARN_REMOTE_APP_LOG_DIR=\"/app-logs\"\nENV MAPRED_LOG_DIR=\"${LOG_DIR_ROOT}/mapred\"\nENV MAPRED_PID_DIR=\"${HDP_DATA_ROOT}/pid/mapred\"\nENV MAPRED_JH_ROOT_DIR=\"/mr-history\"\nENV MAPRED_JH_INTERMEDIATE_DONE_DIR=\"${MAPRED_JH_ROOT_DIR}/tmp\"\nENV MAPRED_JH_DONE_DIR=\"${MAPRED_JH_ROOT_DIR}/done\"\n#  ----------------------------------------------------------\n#   Create groups and users\nRUN groupadd ${HADOOP_GROUP} \\\n && useradd -g ${HADOOP_GROUP} ${HDFS_USER} \\\n && useradd -g ${HADOOP_GROUP} ${YARN_USER} \\\n && useradd -g ${HADOOP_GROUP} ${MAPRED_USER}\n#   Create DATA_DIR_ROOT\nRUN mkdir -p ${HDP_DATA_ROOT} \\\n && chmod -R 755 ${HDP_DATA_ROOT}\n#   Create LOG_DIR_ROOT\nRUN mkdir -p ${LOG_DIR_ROOT} \\\n && chmod -R 1777 ${LOG_DIR_ROOT}\nRUN mkdir -p ${HADOOP_CONF_DIR}\n#  ## HDFS DIRs ###########################################################\n#   DataNode\nRUN mkdir -p ${DFS_DATA_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_DATA_DIR} \\\n && chmod -R 750 ${DFS_DATA_DIR}\n#   NameNode\nRUN mkdir -p ${DFS_NAME_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_NAME_DIR} \\\n && chmod -R 755 ${DFS_NAME_DIR}\n#   HDFS log dir\nRUN mkdir -p ${HDFS_LOG_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${HDFS_LOG_DIR} \\\n && chmod -R 750 ${HDFS_LOG_DIR}\n#   HDFS pid dir\t\nRUN mkdir -p ${HDFS_PID_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${HDFS_PID_DIR} \\\n && chmod -R 750 ${HDFS_PID_DIR}\n#\nRUN mkdir -p ${DFS_CHECKPOINT_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_CHECKPOINT_DIR} \\\n && chmod -R 755 ${DFS_CHECKPOINT_DIR}\n#  ## YARN DIRs ########################################################### \n#   YARN_LOCAL_DIR\nRUN mkdir -p ${YARN_LOCAL_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOCAL_DIR} \\\n && chmod -R 755 ${YARN_LOCAL_DIR}\n#   YARN log dir\nRUN mkdir -p ${YARN_LOG_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOG_DIR} \\\n && chmod -R 755 ${YARN_LOG_DIR}\n#   YARN_LOCAL_LOG_DIR\nRUN mkdir -p ${YARN_LOCAL_LOG_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOCAL_LOG_DIR} \\\n && chmod -R 755 ${YARN_LOCAL_LOG_DIR}\n#   YARN pid dir\nRUN mkdir -p $YARN_PID_DIR \\\n && chown -R $YARN_USER:$HADOOP_GROUP $YARN_PID_DIR \\\n && chmod -R 755 $YARN_PID_DIR\n#  ## MAPRED DIRs ##########################################################\t\n#   MAPRED log dir\nRUN mkdir -p $MAPRED_LOG_DIR \\\n && chown -R $MAPRED_USER:$HADOOP_GROUP $MAPRED_LOG_DIR \\\n && chmod -R 755 $MAPRED_LOG_DIR\n#   MAPRED pid dir\t\nRUN mkdir -p $MAPRED_PID_DIR \\\n && chown -R $MAPRED_USER:$HADOOP_GROUP $MAPRED_PID_DIR \\\n && chmod -R 755 $MAPRED_PID_DIR\nRUN mkdir -p $ ${YARN_REMOTE_APP_LOG_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_REMOTE_APP_LOG_DIR} \\\n && chmod -R 777 ${YARN_REMOTE_APP_LOG_DIR}\nCOPY scripts/generate_conf_files.py /tmp/\nRUN python2.7 /tmp/generate_conf_files.py ${HADOOP_CONF_DIR}\nENV HADOOP_HOME=\"/opt/hadoop\"\nENV PATH=\"${HADOOP_HOME}/bin:${HADOOP_HOME}/sbin:$PATH\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ----------------------------------------------------\nFROM crs4_pydoop/base:latest\n#  ------------------------------------------------------------------\n#  Get zookeeper\nENV zoo_ver=\"zookeeper-3.4.6\"\nENV zoo_tgz=\"${zoo_ver}.tar.gz\"\nENV zoo_site=\"http://mirror.nohup.it/apache/zookeeper\"\nENV zoo_tgz_site=\"${zoo_site}/${zoo_ver}\"\nRUN wget ${zoo_tgz_site}/${zoo_tgz} -O ${zoo_tgz} \\\n && mkdir -p /opt \\\n && tar -C /opt -xzf ${zoo_tgz} \\\n && rm -f ${zoo_tgz} \\\n && ln -s /opt/${zoo_ver} /opt/zookeeper\nENV ZOO_DATA_DIR=\"/data/zookeeper/data\"\nENV ZOO_CLIENT_PORT=\"2181\"\nEXPOSE ${ZOO_CLIENT_PORT}\nRUN mkdir -p ${ZOO_DATA_DIR}\nRUN echo \"tickTime=2000\" > /opt/zookeeper/conf/zoo.cfg \\\n && echo \"dataDir ${ZOO_DATA_DIR}\" >> /opt/zookeeper/conf/zoo.cfg \\\n && echo \"clientPort ${ZOO_CLIENT_PORT}\" >> /opt/zookeeper/conf/zoo.cfg \\\n && echo 1 > ${ZOO_DATA_DIR}/myid\n#  Note that we are forcing the installation into dist-packages,\n#  so that it will be possible to share kazoo and externally mount /usr/local later.\nRUN pip install kazoo -t /usr/lib/python2.7/dist-packages\nCOPY scripts/zk_wait.py /tmp/\nCOPY scripts/zk_set.py /tmp/\n#  -----------------------------------------------------------------\n#  Get hadoop\nENV hdp_ver=\"hadoop-2.6.0\"\nENV hdp_tgz=\"${hdp_ver}.tar.gz\"\nENV hdp_site=\"http://mirror.nohup.it/apache/hadoop/common\"\nENV hdp_tgz_site=\"${hdp_site}/hadoop-2.6.0\"\nRUN wget ${hdp_tgz_site}/${hdp_tgz} -O ${hdp_tgz} \\\n && mkdir -p /opt \\\n && tar -C /opt -xzf ${hdp_tgz} \\\n && rm -f ${hdp_tgz} \\\n && ln -s /opt/${hdp_ver} /opt/hadoop\n#  ------------------------------------------------------------------\n#  User:Group\t   Daemons\n#  hdfs:hadoop\t   NameNode, Secondary NameNode, JournalNode, DataNode\n#  yarn:hadoop\t   ResourceManager, NodeManager\n#  mapred:hadoop\t MapReduce JobHistory Server\nENV HADOOP_GROUP=\"hadoop\"\nENV HDFS_USER=\"hdfs\"\nENV YARN_USER=\"yarn\"\nENV MAPRED_USER=\"mapred\"\nENV HDP_DATA_ROOT=\"/data/hadoop\"\nENV LOG_DIR_ROOT=\"/tmp/logs\"\nENV HADOOP_TMP_DIR=\"/tmp\"\nENV HADOOP_CONF_DIR=\"/opt/hadoop/etc/hadoop\"\nENV DFS_NAME_DIR=\"${HDP_DATA_ROOT}/hdfs/nn\"\nENV DFS_DATA_DIR=\"${HDP_DATA_ROOT}/hdfs/dn\"\nENV DFS_CHECKPOINT_DIR=\"${HDP_DATA_ROOT}/hdfs/snn\"\nENV HDFS_LOG_DIR=\"${LOG_DIR_ROOT}/hdfs\"\nENV HDFS_PID_DIR=\"${HDP_DATA_ROOT}/pid/hdfs\"\nENV YARN_LOCAL_DIR=\"${HDP_DATA_ROOT}/yarn\"\nENV YARN_LOG_DIR=\"${LOG_DIR_ROOT}/yarn\"\nENV YARN_LOCAL_LOG_DIR=\"${YARN_LOCAL_DIR}/userlogs\"\nENV YARN_PID_DIR=\"${HDP_DATA_ROOT}/pid/yarn\"\nENV YARN_REMOTE_APP_LOG_DIR=\"/app-logs\"\nENV MAPRED_LOG_DIR=\"${LOG_DIR_ROOT}/mapred\"\nENV MAPRED_PID_DIR=\"${HDP_DATA_ROOT}/pid/mapred\"\nENV MAPRED_JH_ROOT_DIR=\"/mr-history\"\nENV MAPRED_JH_INTERMEDIATE_DONE_DIR=\"${MAPRED_JH_ROOT_DIR}/tmp\"\nENV MAPRED_JH_DONE_DIR=\"${MAPRED_JH_ROOT_DIR}/done\"\n# ----------------------------------------------------------\n#  Create groups and users\nRUN groupadd ${HADOOP_GROUP} \\\n && useradd -g ${HADOOP_GROUP} ${HDFS_USER} \\\n && useradd -g ${HADOOP_GROUP} ${YARN_USER} \\\n && useradd -g ${HADOOP_GROUP} ${MAPRED_USER}\n#  Create DATA_DIR_ROOT\nRUN mkdir -p ${HDP_DATA_ROOT} \\\n && chmod -R 755 ${HDP_DATA_ROOT}\n#  Create LOG_DIR_ROOT\nRUN mkdir -p ${LOG_DIR_ROOT} \\\n && chmod -R 1777 ${LOG_DIR_ROOT}\nRUN mkdir -p ${HADOOP_CONF_DIR}\n# ## HDFS DIRs ###########################################################\n#  DataNode\nRUN mkdir -p ${DFS_DATA_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_DATA_DIR} \\\n && chmod -R 750 ${DFS_DATA_DIR}\n#  NameNode\nRUN mkdir -p ${DFS_NAME_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_NAME_DIR} \\\n && chmod -R 755 ${DFS_NAME_DIR}\n#  HDFS log dir\nRUN mkdir -p ${HDFS_LOG_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${HDFS_LOG_DIR} \\\n && chmod -R 750 ${HDFS_LOG_DIR}\n#  HDFS pid dir\t\nRUN mkdir -p ${HDFS_PID_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${HDFS_PID_DIR} \\\n && chmod -R 750 ${HDFS_PID_DIR}\n#\nRUN mkdir -p ${DFS_CHECKPOINT_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_CHECKPOINT_DIR} \\\n && chmod -R 755 ${DFS_CHECKPOINT_DIR}\n# ## YARN DIRs ########################################################### \n#  YARN_LOCAL_DIR\nRUN mkdir -p ${YARN_LOCAL_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOCAL_DIR} \\\n && chmod -R 755 ${YARN_LOCAL_DIR}\n#  YARN log dir\nRUN mkdir -p ${YARN_LOG_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOG_DIR} \\\n && chmod -R 755 ${YARN_LOG_DIR}\n#  YARN_LOCAL_LOG_DIR\nRUN mkdir -p ${YARN_LOCAL_LOG_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOCAL_LOG_DIR} \\\n && chmod -R 755 ${YARN_LOCAL_LOG_DIR}\n#  YARN pid dir\nRUN mkdir -p $YARN_PID_DIR \\\n && chown -R $YARN_USER:$HADOOP_GROUP $YARN_PID_DIR \\\n && chmod -R 755 $YARN_PID_DIR\n# ## MAPRED DIRs ##########################################################\t\n#  MAPRED log dir\nRUN mkdir -p $MAPRED_LOG_DIR \\\n && chown -R $MAPRED_USER:$HADOOP_GROUP $MAPRED_LOG_DIR \\\n && chmod -R 755 $MAPRED_LOG_DIR\n#  MAPRED pid dir\t\nRUN mkdir -p $MAPRED_PID_DIR \\\n && chown -R $MAPRED_USER:$HADOOP_GROUP $MAPRED_PID_DIR \\\n && chmod -R 755 $MAPRED_PID_DIR\nRUN mkdir -p $ ${YARN_REMOTE_APP_LOG_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_REMOTE_APP_LOG_DIR} \\\n && chmod -R 777 ${YARN_REMOTE_APP_LOG_DIR}\nCOPY scripts/generate_conf_files.py /tmp/\nRUN python2.7 /tmp/generate_conf_files.py ${HADOOP_CONF_DIR}\nENV HADOOP_HOME=\"/opt/hadoop\"\nENV PATH=\"${HADOOP_HOME}/bin:${HADOOP_HOME}/sbin:$PATH\"\n","injectedSmells":[],"originalDockerfileHash":"dc6ae5d7c9d42cc93a45ce56f2885cdf","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ----------------------------------------------------\nFROM crs4_pydoop/base:latest\n#   ------------------------------------------------------------------\n#   Get zookeeper\nENV zoo_ver=\"zookeeper-3.4.6\"\nENV zoo_tgz=\"${zoo_ver}.tar.gz\"\nENV zoo_site=\"http://mirror.nohup.it/apache/zookeeper\"\nENV zoo_tgz_site=\"${zoo_site}/${zoo_ver}\"\nRUN wget ${zoo_tgz_site}/${zoo_tgz} -O ${zoo_tgz} \\\n && mkdir -p /opt \\\n && tar -C /opt -xzf ${zoo_tgz} \\\n && rm -f ${zoo_tgz} \\\n && ln -s /opt/${zoo_ver} /opt/zookeeper\nENV ZOO_DATA_DIR=\"/data/zookeeper/data\"\nENV ZOO_CLIENT_PORT=\"2181\"\nEXPOSE ${ZOO_CLIENT_PORT}\nRUN mkdir -p ${ZOO_DATA_DIR}\nRUN echo \"tickTime=2000\" > /opt/zookeeper/conf/zoo.cfg \\\n && echo \"dataDir ${ZOO_DATA_DIR}\" >> /opt/zookeeper/conf/zoo.cfg \\\n && echo \"clientPort ${ZOO_CLIENT_PORT}\" >> /opt/zookeeper/conf/zoo.cfg \\\n && echo 1 > ${ZOO_DATA_DIR}/myid\n#   Note that we are forcing the installation into dist-packages,\n#   so that it will be possible to share kazoo and externally mount /usr/local later.\nRUN pip install kazoo -t /usr/lib/python2.7/dist-packages\nCOPY scripts/zk_wait.py /tmp/\nCOPY scripts/zk_set.py /tmp/\n#   -----------------------------------------------------------------\n#   Get hadoop\nENV hdp_ver=\"hadoop-2.6.0\"\nENV hdp_tgz=\"${hdp_ver}.tar.gz\"\nENV hdp_site=\"http://mirror.nohup.it/apache/hadoop/common\"\nENV hdp_tgz_site=\"${hdp_site}/hadoop-2.6.0\"\nRUN wget ${hdp_tgz_site}/${hdp_tgz} -O ${hdp_tgz} \\\n && mkdir -p /opt \\\n && tar -C /opt -xzf ${hdp_tgz} \\\n && rm -f ${hdp_tgz} \\\n && ln -s /opt/${hdp_ver} /opt/hadoop\n#   ------------------------------------------------------------------\n#   User:Group\t   Daemons\n#   hdfs:hadoop\t   NameNode, Secondary NameNode, JournalNode, DataNode\n#   yarn:hadoop\t   ResourceManager, NodeManager\n#   mapred:hadoop\t MapReduce JobHistory Server\nENV HADOOP_GROUP=\"hadoop\"\nENV HDFS_USER=\"hdfs\"\nENV YARN_USER=\"yarn\"\nENV MAPRED_USER=\"mapred\"\nENV HDP_DATA_ROOT=\"/data/hadoop\"\nENV LOG_DIR_ROOT=\"/tmp/logs\"\nENV HADOOP_TMP_DIR=\"/tmp\"\nENV HADOOP_CONF_DIR=\"/opt/hadoop/etc/hadoop\"\nENV DFS_NAME_DIR=\"${HDP_DATA_ROOT}/hdfs/nn\"\nENV DFS_DATA_DIR=\"${HDP_DATA_ROOT}/hdfs/dn\"\nENV DFS_CHECKPOINT_DIR=\"${HDP_DATA_ROOT}/hdfs/snn\"\nENV HDFS_LOG_DIR=\"${LOG_DIR_ROOT}/hdfs\"\nENV HDFS_PID_DIR=\"${HDP_DATA_ROOT}/pid/hdfs\"\nENV YARN_LOCAL_DIR=\"${HDP_DATA_ROOT}/yarn\"\nENV YARN_LOG_DIR=\"${LOG_DIR_ROOT}/yarn\"\nENV YARN_LOCAL_LOG_DIR=\"${YARN_LOCAL_DIR}/userlogs\"\nENV YARN_PID_DIR=\"${HDP_DATA_ROOT}/pid/yarn\"\nENV YARN_REMOTE_APP_LOG_DIR=\"/app-logs\"\nENV MAPRED_LOG_DIR=\"${LOG_DIR_ROOT}/mapred\"\nENV MAPRED_PID_DIR=\"${HDP_DATA_ROOT}/pid/mapred\"\nENV MAPRED_JH_ROOT_DIR=\"/mr-history\"\nENV MAPRED_JH_INTERMEDIATE_DONE_DIR=\"${MAPRED_JH_ROOT_DIR}/tmp\"\nENV MAPRED_JH_DONE_DIR=\"${MAPRED_JH_ROOT_DIR}/done\"\n#  ----------------------------------------------------------\n#   Create groups and users\nRUN groupadd ${HADOOP_GROUP} \\\n && useradd -g ${HADOOP_GROUP} ${HDFS_USER} \\\n && useradd -g ${HADOOP_GROUP} ${YARN_USER} \\\n && useradd -g ${HADOOP_GROUP} ${MAPRED_USER}\n#   Create DATA_DIR_ROOT\nRUN mkdir -p ${HDP_DATA_ROOT} \\\n && chmod -R 755 ${HDP_DATA_ROOT}\n#   Create LOG_DIR_ROOT\nRUN mkdir -p ${LOG_DIR_ROOT} \\\n && chmod -R 1777 ${LOG_DIR_ROOT}\nRUN mkdir -p ${HADOOP_CONF_DIR}\n#  ## HDFS DIRs ###########################################################\n#   DataNode\nRUN mkdir -p ${DFS_DATA_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_DATA_DIR} \\\n && chmod -R 750 ${DFS_DATA_DIR}\n#   NameNode\nRUN mkdir -p ${DFS_NAME_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_NAME_DIR} \\\n && chmod -R 755 ${DFS_NAME_DIR}\n#   HDFS log dir\nRUN mkdir -p ${HDFS_LOG_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${HDFS_LOG_DIR} \\\n && chmod -R 750 ${HDFS_LOG_DIR}\n#   HDFS pid dir\t\nRUN mkdir -p ${HDFS_PID_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${HDFS_PID_DIR} \\\n && chmod -R 750 ${HDFS_PID_DIR}\n#\nRUN mkdir -p ${DFS_CHECKPOINT_DIR} \\\n && chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_CHECKPOINT_DIR} \\\n && chmod -R 755 ${DFS_CHECKPOINT_DIR}\n#  ## YARN DIRs ########################################################### \n#   YARN_LOCAL_DIR\nRUN mkdir -p ${YARN_LOCAL_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOCAL_DIR} \\\n && chmod -R 755 ${YARN_LOCAL_DIR}\n#   YARN log dir\nRUN mkdir -p ${YARN_LOG_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOG_DIR} \\\n && chmod -R 755 ${YARN_LOG_DIR}\n#   YARN_LOCAL_LOG_DIR\nRUN mkdir -p ${YARN_LOCAL_LOG_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOCAL_LOG_DIR} \\\n && chmod -R 755 ${YARN_LOCAL_LOG_DIR}\n#   YARN pid dir\nRUN mkdir -p $YARN_PID_DIR \\\n && chown -R $YARN_USER:$HADOOP_GROUP $YARN_PID_DIR \\\n && chmod -R 755 $YARN_PID_DIR\n#  ## MAPRED DIRs ##########################################################\t\n#   MAPRED log dir\nRUN mkdir -p $MAPRED_LOG_DIR \\\n && chown -R $MAPRED_USER:$HADOOP_GROUP $MAPRED_LOG_DIR \\\n && chmod -R 755 $MAPRED_LOG_DIR\n#   MAPRED pid dir\t\nRUN mkdir -p $MAPRED_PID_DIR \\\n && chown -R $MAPRED_USER:$HADOOP_GROUP $MAPRED_PID_DIR \\\n && chmod -R 755 $MAPRED_PID_DIR\nRUN mkdir -p $ ${YARN_REMOTE_APP_LOG_DIR} \\\n && chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_REMOTE_APP_LOG_DIR} \\\n && chmod -R 777 ${YARN_REMOTE_APP_LOG_DIR}\nCOPY scripts/generate_conf_files.py /tmp/\nRUN python2.7 /tmp/generate_conf_files.py ${HADOOP_CONF_DIR}\nENV HADOOP_HOME=\"/opt/hadoop\"\nENV PATH=\"${HADOOP_HOME}/bin:${HADOOP_HOME}/sbin:$PATH\"\n","originalDockerfileUglifiedHash":"4d9706aabee0a06f61f5346eedf589c8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d9fb10cf3114a3133f08396da575900f83850011.dockerfile"}