{"seed":208162733,"processedDockerfileHash":"0057075ddb7c88fc4a4afadb3c1187ff","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM node:8.15-slim\nMAINTAINER Adam Kloboucnik <ak@blockcollider.org>\nRUN apt-get update \\\n && apt-get install --no-install-recommends libboost-dev unzip git python2.7 node-pre-gyp build-essential -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/ \\\n && ln -s /usr/bin/python2.7 /usr/bin/python\n#   Install yarn\nRUN curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.12.3 \\\n && export PATH=$HOME/.yarn/bin:$PATH\nENV PATH=\"\\\"/root/.yarn/bin:$PATH\\\"\"\n#   Install protobuf\nRUN curl -OL https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip \\\n && unzip protoc-3.5.1-linux-x86_64.zip -d /root/protoc3 \\\n && export PATH=$HOME/protoc3/bin:$PATH\nENV PATH=\"\\\"/root/protoc3/bin:$PATH\\\"\"\n#   Install neon-bindings\n#   RUN yarn install -g neon-cli forever\n#   Create /src folder and switch to it\nRUN mkdir /src\nWORKDIR /src\n#   Support for mounted volumes\nVOLUME /src/_data\nVOLUME /src/_data_testnet\nVOLUME /src/_debug\nVOLUME /src/_logs\nVOLUME /src/config\n#   Get JS deps\n#   COPY [\"package.json\", \"yarn.lock\", \"./\"]\n#   RUN yarn\n#   Add and build native (rust) stuff\n#   COPY native native\n#   COPY rust rust\n#\n#   COPY protos protos\n#   COPY src/protos src/protos\n#   RUN neon build\n#   Git -> .version.json\nCOPY . .\n#   cannot do following, docker doesn't know how to - all unwanted is in .dockeringore\n#   COPY app/ bin/ config/ data/ protos/ public/ rust/ scripts/ src/ webpack/ package.json yarn.lock LICENSE README.md .\n#   # Install packages\n#   RUN yarn\n#\n#   # Compile protobufs\n#   RUN yarn proto\n#\n#   # Initial transpile\n#   RUN yarn transpile -s false\n#\n#   # Build all\n#   RUN yarn run dist\n#\n#   # Build UI app\n#   RUN yarn version:generate && yarn webpack\n#\n#   RUN  rm -rf native/target/\n#   RUN  rm -rf target/\n#   TODO remove cargo registry\n#   Install nightly rust and remove it after compilation to slim down the resulting image\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly \\\n && export PATH=$HOME/.cargo/bin:$PATH \\\n && rustup update \\\n && rustc -Vv \\\n && cargo -V \\\n && rustup component add rust-src \\\n && yarn \\\n && yarn run proto \\\n && yarn run transpile -s false \\\n && yarn run version:generate \\\n && yarn run webpack \\\n && cd rust/bcrust-core/ \\\n && rm -rf target/ \\\n && cargo build --release \\\n && rm -rf target/deps/ \\\n && cd - \\\n && rm -rf node_modules \\\n && NODE_ENV=production yarn install \\\n && yarn cache clean \\\n && rustup self uninstall -y\nRUN mkdir -p /src/logs\nEXPOSE 3000/tcp 9090/tcp\nENTRYPOINT [\"./bin/cli\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\n","originalDockerfile":"FROM node:8.15-slim\nMAINTAINER Adam Kloboucnik <ak@blockcollider.org>\nRUN apt-get update \\\n && apt-get install libboost-dev unzip git python2.7 node-pre-gyp build-essential -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/ \\\n && ln -s /usr/bin/python2.7 /usr/bin/python\n#  Install yarn\nRUN curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.12.3 \\\n && export PATH=$HOME/.yarn/bin:$PATH\nENV PATH=\"\\\"/root/.yarn/bin:$PATH\\\"\"\n#  Install protobuf\nRUN curl -OL https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip \\\n && unzip protoc-3.5.1-linux-x86_64.zip -d /root/protoc3 \\\n && export PATH=$HOME/protoc3/bin:$PATH\nENV PATH=\"\\\"/root/protoc3/bin:$PATH\\\"\"\n#  Install neon-bindings\n#  RUN yarn install -g neon-cli forever\n#  Create /src folder and switch to it\nRUN mkdir /src\nWORKDIR /src\n#  Support for mounted volumes\nVOLUME /src/_data\nVOLUME /src/_data_testnet\nVOLUME /src/_debug\nVOLUME /src/_logs\nVOLUME /src/config\n#  Get JS deps\n#  COPY [\"package.json\", \"yarn.lock\", \"./\"]\n#  RUN yarn\n#  Add and build native (rust) stuff\n#  COPY native native\n#  COPY rust rust\n#\n#  COPY protos protos\n#  COPY src/protos src/protos\n#  RUN neon build\n#  Git -> .version.json\nCOPY . .\n#  cannot do following, docker doesn't know how to - all unwanted is in .dockeringore\n#  COPY app/ bin/ config/ data/ protos/ public/ rust/ scripts/ src/ webpack/ package.json yarn.lock LICENSE README.md .\n#  # Install packages\n#  RUN yarn\n#\n#  # Compile protobufs\n#  RUN yarn proto\n#\n#  # Initial transpile\n#  RUN yarn transpile -s false\n#\n#  # Build all\n#  RUN yarn run dist\n#\n#  # Build UI app\n#  RUN yarn version:generate && yarn webpack\n#\n#  RUN  rm -rf native/target/\n#  RUN  rm -rf target/\n#  TODO remove cargo registry\n#  Install nightly rust and remove it after compilation to slim down the resulting image\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly \\\n && export PATH=$HOME/.cargo/bin:$PATH \\\n && rustup update \\\n && rustc -Vv \\\n && cargo -V \\\n && rustup component add rust-src \\\n && yarn \\\n && yarn run proto \\\n && yarn run transpile -s false \\\n && yarn run version:generate \\\n && yarn run webpack \\\n && cd rust/bcrust-core/ \\\n && rm -rf target/ \\\n && cargo build --release \\\n && rm -rf target/deps/ \\\n && cd - \\\n && rm -rf node_modules \\\n && NODE_ENV=production yarn install \\\n && yarn cache clean \\\n && rustup self uninstall -y\nRUN mkdir -p /src/logs\nEXPOSE 3000/tcp 9090/tcp\nENTRYPOINT [\"./bin/cli\"]\n","injectedSmells":[],"originalDockerfileHash":"53fa53be9b09c58984ab010d0c684fad","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM node:8.15-slim\nMAINTAINER Adam Kloboucnik <ak@blockcollider.org>\nRUN apt-get update \\\n && apt-get install libboost-dev unzip git python2.7 node-pre-gyp build-essential -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/ \\\n && ln -s /usr/bin/python2.7 /usr/bin/python\n#   Install yarn\nRUN curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.12.3 \\\n && export PATH=$HOME/.yarn/bin:$PATH\nENV PATH=\"\\\"/root/.yarn/bin:$PATH\\\"\"\n#   Install protobuf\nRUN curl -OL https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip \\\n && unzip protoc-3.5.1-linux-x86_64.zip -d /root/protoc3 \\\n && export PATH=$HOME/protoc3/bin:$PATH\nENV PATH=\"\\\"/root/protoc3/bin:$PATH\\\"\"\n#   Install neon-bindings\n#   RUN yarn install -g neon-cli forever\n#   Create /src folder and switch to it\nRUN mkdir /src\nWORKDIR /src\n#   Support for mounted volumes\nVOLUME /src/_data\nVOLUME /src/_data_testnet\nVOLUME /src/_debug\nVOLUME /src/_logs\nVOLUME /src/config\n#   Get JS deps\n#   COPY [\"package.json\", \"yarn.lock\", \"./\"]\n#   RUN yarn\n#   Add and build native (rust) stuff\n#   COPY native native\n#   COPY rust rust\n#\n#   COPY protos protos\n#   COPY src/protos src/protos\n#   RUN neon build\n#   Git -> .version.json\nCOPY . .\n#   cannot do following, docker doesn't know how to - all unwanted is in .dockeringore\n#   COPY app/ bin/ config/ data/ protos/ public/ rust/ scripts/ src/ webpack/ package.json yarn.lock LICENSE README.md .\n#   # Install packages\n#   RUN yarn\n#\n#   # Compile protobufs\n#   RUN yarn proto\n#\n#   # Initial transpile\n#   RUN yarn transpile -s false\n#\n#   # Build all\n#   RUN yarn run dist\n#\n#   # Build UI app\n#   RUN yarn version:generate && yarn webpack\n#\n#   RUN  rm -rf native/target/\n#   RUN  rm -rf target/\n#   TODO remove cargo registry\n#   Install nightly rust and remove it after compilation to slim down the resulting image\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly \\\n && export PATH=$HOME/.cargo/bin:$PATH \\\n && rustup update \\\n && rustc -Vv \\\n && cargo -V \\\n && rustup component add rust-src \\\n && yarn \\\n && yarn run proto \\\n && yarn run transpile -s false \\\n && yarn run version:generate \\\n && yarn run webpack \\\n && cd rust/bcrust-core/ \\\n && rm -rf target/ \\\n && cargo build --release \\\n && rm -rf target/deps/ \\\n && cd - \\\n && rm -rf node_modules \\\n && NODE_ENV=production yarn install \\\n && yarn cache clean \\\n && rustup self uninstall -y\nRUN mkdir -p /src/logs\nEXPOSE 3000/tcp 9090/tcp\nENTRYPOINT [\"./bin/cli\"]\n","originalDockerfileUglifiedHash":"bd1deadbdc3f0827d36f9cab5cbd4a6e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fa6e4fd81754a8df59b3e6a1b0b36fc11cf249e0.dockerfile"}