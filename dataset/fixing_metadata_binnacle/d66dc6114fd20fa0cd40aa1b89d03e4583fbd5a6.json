{"seed":1903845783,"processedDockerfileHash":"2792fe7364df36f95b399475b51bb308","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   $ docker build -t cpsievert/plotly-vtest .\n#   $ docker run -e VMODE=\"ci\" -v $(pwd):/home/plotly --privileged -p 3838:3838 cpsievert/plotly-vtest\n#   ------------------------------------------------------------------------------\nFROM ubuntu:16.04\nMAINTAINER Carson Sievert \"carson@rstudio.com\"\n#   Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTED=noninteractive\nARG CACHEBUST=1\n#   Need this to add R repo\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y )\n#   Add R apt repository\nRUN add-apt-repository \"deb http://cran.r-project.org/bin/linux/ubuntu $( lsb_release -cs ;)-cran35/\"\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9\n#   Install basic stuff and R\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends sudo=1.8.16-0ubuntu1.10 git=1:2.7.4-0ubuntu1.10 vim-tiny=2:7.4.1689-3ubuntu1.5 nano=2.5.3-2ubuntu2 wget=1.17.1-1ubuntu1.5 r-base=3.2.3-4 r-base-dev=3.2.3-4 r-recommended=3.2.3-4 fonts-texgyre=20150923-1 texinfo=6.1.0.dfsg.1-5 locales=2.23-0ubuntu11.3 libcurl4-gnutls-dev=7.47.0-1ubuntu2.19 libcairo2-dev=1.14.6-1 libxt-dev=1:1.1.5-0ubuntu1 libssl-dev=1.0.2g-1ubuntu4.20 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 -y )\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\n#   Rprofile\nRUN echo 'options(\\n repos = c(CRAN = \"https://cloud.r-project.org/\"),\\n download.file.method = \"libcurl\",\\n Ncpus = parallel::detectCores(logical=FALSE),\\n shiny.host = \"0.0.0.0\", shiny.port = 3838\\n)' >> /etc/R/Rprofile.site\n#   Update R packages\nRUN R -e \"update.packages(ask = F)\"\n#   Other R packages needed for running visual tests\nRUN R -e \"install.packages('devtools')\"\nRUN R -e \"install.packages('roxygen2')\"\nRUN R -e \"install.packages('testthat')\"\nRUN R -e \"install.packages('vdiffr')\"\nRUN R -e \"install.packages('diffobj')\"\n#   sf system dependencies\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends libudunits2-dev=2.2.20-1 libproj-dev=4.9.2-2 libgeos-dev=3.5.0-1ubuntu2 libgdal-dev=1.11.3+dfsg-3build2 -y )\n#   Install all plotly's dependencies\nRUN R -e \"install.packages('plotly', dependencies = T)\"\n#   system dependencies related to running orca\nRUN (apt-get update ;apt-get install --no-install-recommends libgtk2.0-0=2.24.30-1ubuntu1.16.04.2 libgconf-2-4=3.2.6-3ubuntu6 xvfb=2:1.18.4-0ubuntu0.12 fuse=2.9.4-1ubuntu3.1 desktop-file-utils=0.22-1ubuntu5.2 -y )\n#   google chrome\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends google-chrome-stable -y )\n#   Download orca binary and make it executable under xvfb\nRUN wget https://github.com/plotly/orca/releases/download/v1.1.1/orca-1.1.1-x86_64.AppImage -P /home\nRUN chmod 777 /home/orca-1.1.1-x86_64.AppImage\nRUN printf '#!/bin/bash \\nxvfb-run --auto-servernum --server-args \"-screen 0 640x480x24\" /home/orca-1.1.1-x86_64.AppImage \"$@\"' > /usr/bin/orca\nRUN chmod 777 /usr/bin/orca\n#   switch on visual testing\nENV VDIFFR=\"true\"\nEXPOSE 3838/tcp\nRUN R -e \"install.packages('assertthat')\"\nRUN R -e \"install.packages('testthat')\"\nRUN R -e \"update.packages(ask=FALSE)\"\n#   install any new dependencies, then either manage cases (the default) or run tests\n#   note the workaround to get docker to run a proper exit status when there are testthat errors\n#   https://github.com/r-lib/testthat/issues/515#issuecomment-304169376\nCMD cd /home/plotly \\\n && R -e \"devtools::install_deps(dep = T); if (!identical(Sys.getenv('VMODE'), 'ci')) vdiffr::manage_cases(); res <- devtools::test(reporter='summary'); df <- as.data.frame(res); if (sum(df$failed) > 0 || any(df$error)) q(status=1)\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  $ docker build -t cpsievert/plotly-vtest .\n#  $ docker run -e VMODE=\"ci\" -v $(pwd):/home/plotly --privileged -p 3838:3838 cpsievert/plotly-vtest\n#  ------------------------------------------------------------------------------\nFROM ubuntu:16.04\nMAINTAINER Carson Sievert \"carson@rstudio.com\"\n#  Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTED=noninteractive\nARG CACHEBUST=1\n#  Need this to add R repo\nRUN apt-get update \\\n && apt-get install software-properties-common -y\n#  Add R apt repository\nRUN add-apt-repository \"deb http://cran.r-project.org/bin/linux/ubuntu $( lsb_release -cs ;)-cran35/\"\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9\n#  Install basic stuff and R\nRUN apt-get update \\\n && apt-get install sudo git vim-tiny nano wget r-base r-base-dev r-recommended fonts-texgyre texinfo locales libcurl4-gnutls-dev libcairo2-dev libxt-dev libssl-dev libxml2-dev -y\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\n#  Rprofile\nRUN echo 'options(\\n repos = c(CRAN = \"https://cloud.r-project.org/\"),\\n download.file.method = \"libcurl\",\\n Ncpus = parallel::detectCores(logical=FALSE),\\n shiny.host = \"0.0.0.0\", shiny.port = 3838\\n)' >> /etc/R/Rprofile.site\n#  Update R packages\nRUN R -e \"update.packages(ask = F)\"\n#  Other R packages needed for running visual tests\nRUN R -e \"install.packages('devtools')\"\nRUN R -e \"install.packages('roxygen2')\"\nRUN R -e \"install.packages('testthat')\"\nRUN R -e \"install.packages('vdiffr')\"\nRUN R -e \"install.packages('diffobj')\"\n#  sf system dependencies\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes\nRUN apt-get update -y\nRUN apt-get install libudunits2-dev libproj-dev libgeos-dev libgdal-dev -y\n#  Install all plotly's dependencies\nRUN R -e \"install.packages('plotly', dependencies = T)\"\n#  system dependencies related to running orca\nRUN apt-get install libgtk2.0-0 libgconf-2-4 xvfb fuse desktop-file-utils -y\n#  google chrome\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && apt-get update -y \\\n && apt-get install google-chrome-stable -y\n#  Download orca binary and make it executable under xvfb\nRUN wget https://github.com/plotly/orca/releases/download/v1.1.1/orca-1.1.1-x86_64.AppImage -P /home\nRUN chmod 777 /home/orca-1.1.1-x86_64.AppImage\nRUN printf '#!/bin/bash \\nxvfb-run --auto-servernum --server-args \"-screen 0 640x480x24\" /home/orca-1.1.1-x86_64.AppImage \"$@\"' > /usr/bin/orca\nRUN chmod 777 /usr/bin/orca\n#  switch on visual testing\nENV VDIFFR=\"true\"\nEXPOSE 3838/tcp\nRUN R -e \"install.packages('assertthat')\"\nRUN R -e \"install.packages('testthat')\"\nRUN R -e \"update.packages(ask=FALSE)\"\n#  install any new dependencies, then either manage cases (the default) or run tests\n#  note the workaround to get docker to run a proper exit status when there are testthat errors\n#  https://github.com/r-lib/testthat/issues/515#issuecomment-304169376\nCMD cd /home/plotly \\\n && R -e \"devtools::install_deps(dep = T); if (!identical(Sys.getenv('VMODE'), 'ci')) vdiffr::manage_cases(); res <- devtools::test(reporter='summary'); df <- as.data.frame(res); if (sum(df$failed) > 0 || any(df$error)) q(status=1)\"\n","injectedSmells":[],"originalDockerfileHash":"a94100c5129c2e8fbbbda6ed717a6197","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   $ docker build -t cpsievert/plotly-vtest .\n#   $ docker run -e VMODE=\"ci\" -v $(pwd):/home/plotly --privileged -p 3838:3838 cpsievert/plotly-vtest\n#   ------------------------------------------------------------------------------\nFROM ubuntu:16.04\nMAINTAINER Carson Sievert \"carson@rstudio.com\"\n#   Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTED=noninteractive\nARG CACHEBUST=1\n#   Need this to add R repo\nRUN apt-get update \\\n && apt-get install software-properties-common -y\n#   Add R apt repository\nRUN add-apt-repository \"deb http://cran.r-project.org/bin/linux/ubuntu $( lsb_release -cs ;)-cran35/\"\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9\n#   Install basic stuff and R\nRUN apt-get update \\\n && apt-get install sudo git vim-tiny nano wget r-base r-base-dev r-recommended fonts-texgyre texinfo locales libcurl4-gnutls-dev libcairo2-dev libxt-dev libssl-dev libxml2-dev -y\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\n#   Rprofile\nRUN echo 'options(\\n repos = c(CRAN = \"https://cloud.r-project.org/\"),\\n download.file.method = \"libcurl\",\\n Ncpus = parallel::detectCores(logical=FALSE),\\n shiny.host = \"0.0.0.0\", shiny.port = 3838\\n)' >> /etc/R/Rprofile.site\n#   Update R packages\nRUN R -e \"update.packages(ask = F)\"\n#   Other R packages needed for running visual tests\nRUN R -e \"install.packages('devtools')\"\nRUN R -e \"install.packages('roxygen2')\"\nRUN R -e \"install.packages('testthat')\"\nRUN R -e \"install.packages('vdiffr')\"\nRUN R -e \"install.packages('diffobj')\"\n#   sf system dependencies\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes\nRUN apt-get update -y\nRUN apt-get install libudunits2-dev libproj-dev libgeos-dev libgdal-dev -y\n#   Install all plotly's dependencies\nRUN R -e \"install.packages('plotly', dependencies = T)\"\n#   system dependencies related to running orca\nRUN apt-get install libgtk2.0-0 libgconf-2-4 xvfb fuse desktop-file-utils -y\n#   google chrome\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && apt-get update -y \\\n && apt-get install google-chrome-stable -y\n#   Download orca binary and make it executable under xvfb\nRUN wget https://github.com/plotly/orca/releases/download/v1.1.1/orca-1.1.1-x86_64.AppImage -P /home\nRUN chmod 777 /home/orca-1.1.1-x86_64.AppImage\nRUN printf '#!/bin/bash \\nxvfb-run --auto-servernum --server-args \"-screen 0 640x480x24\" /home/orca-1.1.1-x86_64.AppImage \"$@\"' > /usr/bin/orca\nRUN chmod 777 /usr/bin/orca\n#   switch on visual testing\nENV VDIFFR=\"true\"\nEXPOSE 3838/tcp\nRUN R -e \"install.packages('assertthat')\"\nRUN R -e \"install.packages('testthat')\"\nRUN R -e \"update.packages(ask=FALSE)\"\n#   install any new dependencies, then either manage cases (the default) or run tests\n#   note the workaround to get docker to run a proper exit status when there are testthat errors\n#   https://github.com/r-lib/testthat/issues/515#issuecomment-304169376\nCMD cd /home/plotly \\\n && R -e \"devtools::install_deps(dep = T); if (!identical(Sys.getenv('VMODE'), 'ci')) vdiffr::manage_cases(); res <- devtools::test(reporter='summary'); df <- as.data.frame(res); if (sum(df$failed) > 0 || any(df$error)) q(status=1)\"\n","originalDockerfileUglifiedHash":"5e18461c749c94ced0bd2baa772b58cd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d66dc6114fd20fa0cd40aa1b89d03e4583fbd5a6.dockerfile"}