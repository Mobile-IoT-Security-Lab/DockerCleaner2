{"seed":2763580588,"processedDockerfileHash":"c8eb8f7f1ff75213b926a6855f0dec05","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"#   vim:set ft=dockerfile:\nFROM debian:stretch\nMAINTAINER \"cytopia\" <cytopia@everythingcli.org>\nRUN set -eux \\\n && apt-get update \\\n && apt-get install --no-install-recommends python-apt=1.4.3 python-dev=2.7.13-2 python-jmespath=0.9.0-2 python-pip=9.0.1-2+deb9u2 python-setuptools=33.1.1-1 sudo=1.8.19p1-2.1+deb9u3 --no-install-suggests -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --autoremove\nRUN set -eux \\\n && pip install wheel==0.40.0 \\\n && pip install ansible==7.4.0\n#   Add user with password-less sudo\nRUN set -eux \\\n && useradd -m -s /bin/bash cytopia \\\n && echo \"cytopia ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/cytopia\n#   Copy files\nCOPY ./ /home/cytopia/ansible\nRUN set -eux \\\n && chown -R cytopia:cytopia /home/cytopia/ansible\n#   Switch to user\nUSER cytopia\n#   Change working directory\nWORKDIR /home/cytopia/ansible\n#   Systemd cannot be checked inside Docker, so replace it with a dummy role\nRUN set -eux \\\n && mkdir roles/dummy \\\n && sed -i'' 's/systemd-meta/dummy/g' playbook.yml\n#   Randomize roles to install each time the container is build (each travis run)\nRUN set -eux \\\n && ROLES_INSTALL=\"$( for d in $( /bin/ls roles/ ;); do if [ -d roles/${d} ] ; then echo $d ; fi ; done | grep -vE '*-meta$' | sort -R ;)\" \\\n && ROLES_REMOVE=\"$( for d in $( /bin/ls roles/ ;); do if [ -d roles/${d} ] ; then echo $d ; fi ; done | grep -vE '*-meta$' | sort -R ;)\" \\\n && (echo \"#!/bin/sh -eux\" ;echo ;echo \"# Ansible verbosity\" ;echo \"if ! set | grep '^verbose=' >/dev/null 2>&1; then\" ;echo \" verbose=\\\"\\\"\" ;echo \"else\" ;echo \" if [ \\\"${verbose}\\\" = \\\"1\\\" ]; then\" ;echo \" verbose=\\\"-v\\\"\" ;echo \" elif [ \\\"${verbose}\\\" = \\\"2\\\" ]; then\" ;echo \" verbose=\\\"-vv\\\"\" ;echo \" elif [ \\\"${verbose}\\\" = \\\"3\\\" ]; then\" ;echo \" verbose=\\\"-vvv\\\"\" ;echo \" else\" ;echo \" verbose=\\\"\\\"\" ;echo \" fi\" ;echo \"fi\" ;echo ;echo \"# Ansible tagged role (only run a specific tag)\" ;echo \"if ! set | grep '^tag=' >/dev/null 2>&1; then\" ;echo \" tag=\\\"\\\"\" ;echo \"fi\" ;echo ;echo \"# Ansible random order (run roles in random order)\" ;echo \"if ! set | grep '^random=' >/dev/null 2>&1; then\" ;echo \" random=\\\"0\\\"\" ;echo \"fi\" ;echo ;echo ;echo \"if [ \\\"${tag}\\\" != \\\"\\\" ]; then\" ;echo \" role=\\\"$( echo \\\"${tag}\\\" | sed 's/-/_/g' ;)\\\"\" ;echo \" # [install] (only tag)\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff -t bootstrap-system-apt-repo\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff -t ${tag}\" ;echo ;echo \"else\" ;echo ;echo \" # Random\" ;echo \" if [ \\\"${random}\\\" = \\\"1\\\" ]; then\" ;echo \" # [INSTALL] Bootstrap roles\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t bootstrap-system --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t bootstrap-system --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t bootstrap-python --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t bootstrap-python --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" # [INSTALL] Pre-defined roles (randomized)\" ;for r in ${ROLES_INSTALL}; do echo \" if ! ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ; done ;echo ;echo \" # [INSTALL] Custom apt packages\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" # [INSTALL] Default applications\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t xdg --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t xdg --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" # In order\" ;echo \" else\" ;echo ;echo \" # [INSTALL] Normal playbook\" ;echo \" if ! ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo \" fi\" ;echo ;echo \" apt list --installed > install1.txt\" ;echo ;echo \" # Full install 2nd round\" ;echo \" if ! ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" apt list --installed > install2.txt\" ;echo ;echo \" # Validate\" ;echo \" diff install1.txt install2.txt\" ;echo ;echo \" # [REMOVE] Pre-defined roles (randomized)\" ;for r in ${ROLES_REMOVE}; do del=\"$( echo $r | sed 's/-/_/g' ;)=remove\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff\" ;echo \" fi\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff\" ;echo \" fi\" ; done ;echo ;echo \" # [REMOVE] Custom apt packages\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} -e apt_state=absent --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} -e apt_state=absent --diff\" ;echo \" fi\" ;echo \"fi\" ) > run-tests.sh \\\n && chmod +x run-tests.sh\nENTRYPOINT [\"./run-tests.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  vim:set ft=dockerfile:\nFROM debian:stretch\nMAINTAINER \"cytopia\" <cytopia@everythingcli.org>\nRUN set -eux \\\n && apt-get update \\\n && apt-get install --no-install-recommends python-apt python-dev python-jmespath python-pip python-setuptools sudo --no-install-suggests -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --autoremove\nRUN set -eux \\\n && pip install wheel \\\n && pip install ansible\n#  Add user with password-less sudo\nRUN set -eux \\\n && useradd -m -s /bin/bash cytopia \\\n && echo \"cytopia ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/cytopia\n#  Copy files\nCOPY ./ /home/cytopia/ansible\nRUN set -eux \\\n && chown -R cytopia:cytopia /home/cytopia/ansible\n#  Switch to user\nUSER cytopia\n#  Change working directory\nWORKDIR /home/cytopia/ansible\n#  Systemd cannot be checked inside Docker, so replace it with a dummy role\nRUN set -eux \\\n && mkdir roles/dummy \\\n && sed -i'' 's/systemd-meta/dummy/g' playbook.yml\n#  Randomize roles to install each time the container is build (each travis run)\nRUN set -eux \\\n && ROLES_INSTALL=\"$( for d in $( /bin/ls roles/ ;); do if [ -d roles/${d} ] ; then echo $d ; fi ; done | grep -vE '*-meta$' | sort -R ;)\" \\\n && ROLES_REMOVE=\"$( for d in $( /bin/ls roles/ ;); do if [ -d roles/${d} ] ; then echo $d ; fi ; done | grep -vE '*-meta$' | sort -R ;)\" \\\n && (echo \"#!/bin/sh -eux\" ;echo ;echo \"# Ansible verbosity\" ;echo \"if ! set | grep '^verbose=' >/dev/null 2>&1; then\" ;echo \" verbose=\\\"\\\"\" ;echo \"else\" ;echo \" if [ \\\"${verbose}\\\" = \\\"1\\\" ]; then\" ;echo \" verbose=\\\"-v\\\"\" ;echo \" elif [ \\\"${verbose}\\\" = \\\"2\\\" ]; then\" ;echo \" verbose=\\\"-vv\\\"\" ;echo \" elif [ \\\"${verbose}\\\" = \\\"3\\\" ]; then\" ;echo \" verbose=\\\"-vvv\\\"\" ;echo \" else\" ;echo \" verbose=\\\"\\\"\" ;echo \" fi\" ;echo \"fi\" ;echo ;echo \"# Ansible tagged role (only run a specific tag)\" ;echo \"if ! set | grep '^tag=' >/dev/null 2>&1; then\" ;echo \" tag=\\\"\\\"\" ;echo \"fi\" ;echo ;echo \"# Ansible random order (run roles in random order)\" ;echo \"if ! set | grep '^random=' >/dev/null 2>&1; then\" ;echo \" random=\\\"0\\\"\" ;echo \"fi\" ;echo ;echo ;echo \"if [ \\\"${tag}\\\" != \\\"\\\" ]; then\" ;echo \" role=\\\"$( echo \\\"${tag}\\\" | sed 's/-/_/g' )\\\"\" ;echo \" # [install] (only tag)\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff -t bootstrap-system-apt-repo\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff -t ${tag}\" ;echo ;echo \"else\" ;echo ;echo \" # Random\" ;echo \" if [ \\\"${random}\\\" = \\\"1\\\" ]; then\" ;echo \" # [INSTALL] Bootstrap roles\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t bootstrap-system --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t bootstrap-system --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t bootstrap-python --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t bootstrap-python --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" # [INSTALL] Pre-defined roles (randomized)\" ;for r in ${ROLES_INSTALL}; do echo \" if ! ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ; done ;echo ;echo \" # [INSTALL] Custom apt packages\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" # [INSTALL] Default applications\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t xdg --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t xdg --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" # In order\" ;echo \" else\" ;echo ;echo \" # [INSTALL] Normal playbook\" ;echo \" if ! ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo \" fi\" ;echo ;echo \" apt list --installed > install1.txt\" ;echo ;echo \" # Full install 2nd round\" ;echo \" if ! ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" apt list --installed > install2.txt\" ;echo ;echo \" # Validate\" ;echo \" diff install1.txt install2.txt\" ;echo ;echo \" # [REMOVE] Pre-defined roles (randomized)\" ;for r in ${ROLES_REMOVE}; do del=\"$( echo $r | sed 's/-/_/g' ;)=remove\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff\" ;echo \" fi\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff\" ;echo \" fi\" ; done ;echo ;echo \" # [REMOVE] Custom apt packages\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} -e apt_state=absent --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} -e apt_state=absent --diff\" ;echo \" fi\" ;echo \"fi\" ) > run-tests.sh \\\n && chmod +x run-tests.sh\nENTRYPOINT [\"./run-tests.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"349eec7f68d373693e919477a4b8e4ac","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   vim:set ft=dockerfile:\nFROM debian:stretch\nMAINTAINER \"cytopia\" <cytopia@everythingcli.org>\nRUN set -eux \\\n && apt-get update \\\n && apt-get install --no-install-recommends python-apt python-dev python-jmespath python-pip python-setuptools sudo --no-install-suggests -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --autoremove\nRUN set -eux \\\n && pip install wheel \\\n && pip install ansible\n#   Add user with password-less sudo\nRUN set -eux \\\n && useradd -m -s /bin/bash cytopia \\\n && echo \"cytopia ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/cytopia\n#   Copy files\nCOPY ./ /home/cytopia/ansible\nRUN set -eux \\\n && chown -R cytopia:cytopia /home/cytopia/ansible\n#   Switch to user\nUSER cytopia\n#   Change working directory\nWORKDIR /home/cytopia/ansible\n#   Systemd cannot be checked inside Docker, so replace it with a dummy role\nRUN set -eux \\\n && mkdir roles/dummy \\\n && sed -i'' 's/systemd-meta/dummy/g' playbook.yml\n#   Randomize roles to install each time the container is build (each travis run)\nRUN set -eux \\\n && ROLES_INSTALL=\"$( for d in $( /bin/ls roles/ ;); do if [ -d roles/${d} ] ; then echo $d ; fi ; done | grep -vE '*-meta$' | sort -R ;)\" \\\n && ROLES_REMOVE=\"$( for d in $( /bin/ls roles/ ;); do if [ -d roles/${d} ] ; then echo $d ; fi ; done | grep -vE '*-meta$' | sort -R ;)\" \\\n && (echo \"#!/bin/sh -eux\" ;echo ;echo \"# Ansible verbosity\" ;echo \"if ! set | grep '^verbose=' >/dev/null 2>&1; then\" ;echo \" verbose=\\\"\\\"\" ;echo \"else\" ;echo \" if [ \\\"${verbose}\\\" = \\\"1\\\" ]; then\" ;echo \" verbose=\\\"-v\\\"\" ;echo \" elif [ \\\"${verbose}\\\" = \\\"2\\\" ]; then\" ;echo \" verbose=\\\"-vv\\\"\" ;echo \" elif [ \\\"${verbose}\\\" = \\\"3\\\" ]; then\" ;echo \" verbose=\\\"-vvv\\\"\" ;echo \" else\" ;echo \" verbose=\\\"\\\"\" ;echo \" fi\" ;echo \"fi\" ;echo ;echo \"# Ansible tagged role (only run a specific tag)\" ;echo \"if ! set | grep '^tag=' >/dev/null 2>&1; then\" ;echo \" tag=\\\"\\\"\" ;echo \"fi\" ;echo ;echo \"# Ansible random order (run roles in random order)\" ;echo \"if ! set | grep '^random=' >/dev/null 2>&1; then\" ;echo \" random=\\\"0\\\"\" ;echo \"fi\" ;echo ;echo ;echo \"if [ \\\"${tag}\\\" != \\\"\\\" ]; then\" ;echo \" role=\\\"$( echo \\\"${tag}\\\" | sed 's/-/_/g' ;)\\\"\" ;echo \" # [install] (only tag)\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff -t bootstrap-system-apt-repo\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff -t ${tag}\" ;echo ;echo \"else\" ;echo ;echo \" # Random\" ;echo \" if [ \\\"${random}\\\" = \\\"1\\\" ]; then\" ;echo \" # [INSTALL] Bootstrap roles\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t bootstrap-system --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t bootstrap-system --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t bootstrap-python --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t bootstrap-python --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" # [INSTALL] Pre-defined roles (randomized)\" ;for r in ${ROLES_INSTALL}; do echo \" if ! ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ; done ;echo ;echo \" # [INSTALL] Custom apt packages\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" # [INSTALL] Default applications\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t xdg --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t xdg --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" # In order\" ;echo \" else\" ;echo ;echo \" # [INSTALL] Normal playbook\" ;echo \" if ! ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo \" fi\" ;echo ;echo \" apt list --installed > install1.txt\" ;echo ;echo \" # Full install 2nd round\" ;echo \" if ! ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml --limit ${MY_HOST} ${verbose} --diff\" ;echo \" fi\" ;echo ;echo \" apt list --installed > install2.txt\" ;echo ;echo \" # Validate\" ;echo \" diff install1.txt install2.txt\" ;echo ;echo \" # [REMOVE] Pre-defined roles (randomized)\" ;for r in ${ROLES_REMOVE}; do del=\"$( echo $r | sed 's/-/_/g' ;)=remove\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff\" ;echo \" fi\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t ${r} --limit ${MY_HOST} ${verbose} -e ${del} --diff\" ;echo \" fi\" ; done ;echo ;echo \" # [REMOVE] Custom apt packages\" ;echo \" if ! ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} -e apt_state=absent --diff; then\" ;echo \" ansible-playbook -i inventory playbook.yml -t apt --limit ${MY_HOST} ${verbose} -e apt_state=absent --diff\" ;echo \" fi\" ;echo \"fi\" ) > run-tests.sh \\\n && chmod +x run-tests.sh\nENTRYPOINT [\"./run-tests.sh\"]\n","originalDockerfileUglifiedHash":"b949af6df8ae9d4abdc77601ee03c01d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9c220eef7755bd5ddaf5c3d275a97cdce3c9464f.dockerfile"}