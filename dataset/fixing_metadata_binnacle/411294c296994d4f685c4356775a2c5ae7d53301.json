{"seed":866184471,"processedDockerfileHash":"1810b339dc4afa6cec4a633a42e0f940","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.10.0\nLABEL image=\"demyx/nginx\"\nLABEL maintainer=\"Demyx <info@demyx.sh>\"\nLABEL url=\"https://demyx.sh\"\nLABEL github=\"https://github.com/demyxco/demyx\"\nLABEL registry=\"https://hub.docker.com/u/demyx\"\nENV TZ=\"America/Los_Angeles\"\nENV NGINX_VERSION=\"1.17.0\"\nENV NJS_VERSION=\"0.3.2\"\nENV PKG_RELEASE=\"1\"\nENV NGX_CACHE_PURGE_VERSION=\"2.3\"\nENV NGX_CACHE_PURGE_SHA1=\"69ed46a23435e8dfd5579422c0c3996cf9a44291\"\nENV HEADERS_MORE_NGINX_MODULE_VERSION=\"0.33\"\nRUN set -x \\\n && addgroup -g 101 -S nginx \\\n && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx \\\n && apkArch=\"$( cat /etc/apk/arch ;)\" \\\n && nginxPackages=\" nginx=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE} \" \\\n && case \"$apkArch\" in (x86_64) set -x \\\n && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\" \\\n && apk add openssl=1.1.1k-r0 curl=7.66.0-r4 ca-certificates=20191127-r2 --no-cache --virtual .cert-deps \\\n && curl -o /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub \\\n && if [ \"$( openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r ;)\" = \"$KEY_SHA512\" ] ; then echo \"key verification succeeded!\" ;mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/ ; else echo \"key verification failed!\" ;exit 1 ; fi \\\n && printf \"%s%s%s\\n\" \"http://nginx.org/packages/mainline/alpine/v3.9\" \"/main\" | tee -a /etc/apk/repositories \\\n && apk del .cert-deps ;;(*) set -x \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chown nobody:nobody $tempDir \\\n && apk add gcc=8.3.0-r0 libc-dev=0.7.1-r0 make=4.2.1-r2 openssl-dev=1.1.1k-r0 pcre-dev=8.43-r1 zlib-dev=1.2.11-r1 linux-headers=4.19.36-r0 libxslt-dev=1.1.33-r3 gd-dev=2.2.5-r3 geoip-dev=1.6.12-r1 perl-dev=5.28.3-r0 libedit-dev=20190324.3.1-r0 mercurial=4.9.1-r0 bash=5.0.0-r0 alpine-sdk=1.0-r0 findutils=4.6.0-r1 --no-cache --virtual .build-deps \\\n && su - nobody -s /bin/sh -c \" export HOME=${tempDir} \\\n && cd ${tempDir} \\\n && hg clone https://hg.nginx.org/pkg-oss \\\n && cd pkg-oss \\\n && hg up ${NGINX_VERSION}-${PKG_RELEASE} \\\n && cd alpine \\\n && make all \\\n && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk \\\n && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz \" \\\n && echo \"${tempDir}/packages/alpine/\" >> /etc/apk/repositories \\\n && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ \\\n && apk del .build-deps ;; esac \\\n && apk add $nginxPackages --no-cache \\\n && if [ -n \"$tempDir\" ] ; then rm -rf \"$tempDir\" ; fi \\\n && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ] ; then rm -f /etc/apk/keys/abuild-key.rsa.pub ; fi \\\n && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ] ; then rm -f /etc/apk/keys/nginx_signing.rsa.pub ; fi \\\n && sed -i '$ d' /etc/apk/repositories \\\n && apk add gettext=0.19.8.1-r4 --no-cache --virtual .gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --no-cache \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && apk add tzdata=2021a-r0 --no-cache \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#      \n#   BUILD CUSTOM MODULES\n#\nRUN apk add gcc=8.3.0-r0 libc-dev=0.7.1-r0 make=4.2.1-r2 openssl-dev=1.1.1k-r0 pcre-dev=8.43-r1 zlib-dev=1.2.11-r1 linux-headers=4.19.36-r0 curl=7.66.0-r4 gnupg1=1.4.23-r0 libxslt-dev=1.1.33-r3 gd-dev=2.2.5-r3 geoip-dev=1.6.12-r1 --no-cache --update --virtual .build-deps \\\n && mkdir -p /usr/src \\\n && curl -o ngx_cache_purge.tar.gz -fSL \"http://labs.frickle.com/files/ngx_cache_purge-${NGX_CACHE_PURGE_VERSION}.tar.gz\" \\\n && echo \"$NGX_CACHE_PURGE_SHA1 *ngx_cache_purge.tar.gz\" | sha1sum -c - \\\n && tar -xzf ngx_cache_purge.tar.gz -C /usr/src/ \\\n && rm ngx_cache_purge.tar.gz \\\n && curl -o headers-more-nginx-module.tar.gz -fSL \"https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_NGINX_MODULE_VERSION}.tar.gz\" \\\n && tar -xzf headers-more-nginx-module.tar.gz -C /usr/src/ \\\n && rm headers-more-nginx-module.tar.gz \\\n && curl -o nginx.tar.gz -fSL \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" \\\n && tar -xzf nginx.tar.gz -C /usr/src/ \\\n && rm nginx.tar.gz \\\n && sed -i \"s/HTTP_MODULES/#HTTP_MODULES/g\" /usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\"/config \\\n && sed -i \"s/NGX_ADDON_SRCS/#NGX_ADDON_SRCS/g\" /usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\"/config \\\n && sed -i \"s|ngx_addon_name=ngx_http_cache_purge_module|ngx_addon_name=ngx_http_cache_purge_module; if test -n \\\"$ngx_module_link\\\"; then ngx_module_type=HTTP; ngx_module_name=ngx_http_cache_purge_module; ngx_module_srcs=\\\"$ngx_addon_dir/ngx_cache_purge_module.c\\\"; . auto/module; else HTTP_MODULES=\\\"$HTTP_MODULES ngx_http_cache_purge_module\\\"; NGX_ADDON_SRCS=\\\"$NGX_ADDON_SRCS $ngx_addon_dir/ngx_cache_purge_module.c\\\"; fi|g\" /usr/src/ngx_cache_purge-${NGX_CACHE_PURGE_VERSION}/config \\\n && sed -i \"s|ngx_addon_name=ngx_http_headers_more_filter_module|ngx_addon_name=ngx_http_headers_more_filter_module; if test -n \\\"$ngx_module_link\\\"; then ngx_module_type=HTTP; ngx_module_name=ngx_http_headers_more_filter_module; ngx_module_srcs=\\\"$ngx_addon_dir/ngx_http_headers_more_filter_module.c\\\"; . auto/module; else HTTP_MODULES=\\\"$HTTP_MODULES ngx_http_headers_more_filter_module\\\"; NGX_ADDON_SRCS=\\\"$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_headers_more_filter_module.c\\\"; fi|g\" /usr/src/headers-more-nginx-module-${HEADERS_MORE_NGINX_MODULE_VERSION}/config \\\n && cd /usr/src/nginx-\"$NGINX_VERSION\" \\\n && ./configure --with-compat --add-dynamic-module=/usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\" \\\n && make modules \\\n && cp objs/ngx_http_cache_purge_module.so /etc/nginx/modules \\\n && make clean \\\n && ./configure --with-compat --add-dynamic-module=/usr/src/headers-more-nginx-module-\"$HEADERS_MORE_NGINX_MODULE_VERSION\" \\\n && make modules \\\n && cp objs/ngx_http_headers_more_filter_module.so /etc/nginx/modules \\\n && rm -rf /usr/src/nginx-\"$NGINX_VERSION\" /usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\" /usr/src/headers-more-nginx-module-\"$HEADERS_MORE_NGINX_MODULE_VERSION\" \\\n && apk del .build-deps\n#      \n#   END BUILD CUSTOM MODULES\n#\nRUN set -ex ; apk add dumb-init=1.2.2-r1 --update --no-cache\nCOPY nginx.conf /etc/nginx/nginx.conf\nEXPOSE 80/tcp\nENTRYPOINT [\"dumb-init\"]\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.10.0\nLABEL image=\"demyx/nginx\"\nLABEL maintainer=\"Demyx <info@demyx.sh>\"\nLABEL url=\"https://demyx.sh\"\nLABEL github=\"https://github.com/demyxco/demyx\"\nLABEL registry=\"https://hub.docker.com/u/demyx\"\nENV TZ=\"America/Los_Angeles\"\nENV NGINX_VERSION=\"1.17.0\"\nENV NJS_VERSION=\"0.3.2\"\nENV PKG_RELEASE=\"1\"\nENV NGX_CACHE_PURGE_VERSION=\"2.3\"\nENV NGX_CACHE_PURGE_SHA1=\"69ed46a23435e8dfd5579422c0c3996cf9a44291\"\nENV HEADERS_MORE_NGINX_MODULE_VERSION=\"0.33\"\nRUN set -x \\\n && addgroup -g 101 -S nginx \\\n && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx \\\n && apkArch=\"$( cat /etc/apk/arch ;)\" \\\n && nginxPackages=\" nginx=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE} \" \\\n && case \"$apkArch\" in (x86_64) set -x \\\n && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\" \\\n && apk add --no-cache --virtual .cert-deps openssl curl ca-certificates \\\n && curl -o /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub \\\n && if [ \"$( openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r ;)\" = \"$KEY_SHA512\" ] ; then echo \"key verification succeeded!\" ;mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/ ; else echo \"key verification failed!\" ;exit 1 ; fi \\\n && printf \"%s%s%s\\n\" \"http://nginx.org/packages/mainline/alpine/v3.9\" \"/main\" | tee -a /etc/apk/repositories \\\n && apk del .cert-deps ;;(*) set -x \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chown nobody:nobody $tempDir \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils \\\n && su - nobody -s /bin/sh -c \" export HOME=${tempDir} \\\n && cd ${tempDir} \\\n && hg clone https://hg.nginx.org/pkg-oss \\\n && cd pkg-oss \\\n && hg up ${NGINX_VERSION}-${PKG_RELEASE} \\\n && cd alpine \\\n && make all \\\n && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk \\\n && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz \" \\\n && echo \"${tempDir}/packages/alpine/\" >> /etc/apk/repositories \\\n && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ \\\n && apk del .build-deps ;; esac \\\n && apk add --no-cache $nginxPackages \\\n && if [ -n \"$tempDir\" ] ; then rm -rf \"$tempDir\" ; fi \\\n && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ] ; then rm -f /etc/apk/keys/abuild-key.rsa.pub ; fi \\\n && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ] ; then rm -f /etc/apk/keys/nginx_signing.rsa.pub ; fi \\\n && sed -i '$ d' /etc/apk/repositories \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache $runDeps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && apk add --no-cache tzdata \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#     \n#  BUILD CUSTOM MODULES\n#\nRUN apk add --no-cache --update --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg1 libxslt-dev gd-dev geoip-dev \\\n && mkdir -p /usr/src \\\n && curl -o ngx_cache_purge.tar.gz -fSL \"http://labs.frickle.com/files/ngx_cache_purge-${NGX_CACHE_PURGE_VERSION}.tar.gz\" \\\n && echo \"$NGX_CACHE_PURGE_SHA1 *ngx_cache_purge.tar.gz\" | sha1sum -c - \\\n && tar -xzf ngx_cache_purge.tar.gz -C /usr/src/ \\\n && rm ngx_cache_purge.tar.gz \\\n && curl -o headers-more-nginx-module.tar.gz -fSL \"https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_NGINX_MODULE_VERSION}.tar.gz\" \\\n && tar -xzf headers-more-nginx-module.tar.gz -C /usr/src/ \\\n && rm headers-more-nginx-module.tar.gz \\\n && curl -o nginx.tar.gz -fSL \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" \\\n && tar -xzf nginx.tar.gz -C /usr/src/ \\\n && rm nginx.tar.gz \\\n && sed -i \"s/HTTP_MODULES/#HTTP_MODULES/g\" /usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\"/config \\\n && sed -i \"s/NGX_ADDON_SRCS/#NGX_ADDON_SRCS/g\" /usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\"/config \\\n && sed -i \"s|ngx_addon_name=ngx_http_cache_purge_module|ngx_addon_name=ngx_http_cache_purge_module; if test -n \\\"$ngx_module_link\\\"; then ngx_module_type=HTTP; ngx_module_name=ngx_http_cache_purge_module; ngx_module_srcs=\\\"$ngx_addon_dir/ngx_cache_purge_module.c\\\"; . auto/module; else HTTP_MODULES=\\\"$HTTP_MODULES ngx_http_cache_purge_module\\\"; NGX_ADDON_SRCS=\\\"$NGX_ADDON_SRCS $ngx_addon_dir/ngx_cache_purge_module.c\\\"; fi|g\" /usr/src/ngx_cache_purge-${NGX_CACHE_PURGE_VERSION}/config \\\n && sed -i \"s|ngx_addon_name=ngx_http_headers_more_filter_module|ngx_addon_name=ngx_http_headers_more_filter_module; if test -n \\\"$ngx_module_link\\\"; then ngx_module_type=HTTP; ngx_module_name=ngx_http_headers_more_filter_module; ngx_module_srcs=\\\"$ngx_addon_dir/ngx_http_headers_more_filter_module.c\\\"; . auto/module; else HTTP_MODULES=\\\"$HTTP_MODULES ngx_http_headers_more_filter_module\\\"; NGX_ADDON_SRCS=\\\"$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_headers_more_filter_module.c\\\"; fi|g\" /usr/src/headers-more-nginx-module-${HEADERS_MORE_NGINX_MODULE_VERSION}/config \\\n && cd /usr/src/nginx-\"$NGINX_VERSION\" \\\n && ./configure --with-compat --add-dynamic-module=/usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\" \\\n && make modules \\\n && cp objs/ngx_http_cache_purge_module.so /etc/nginx/modules \\\n && make clean \\\n && ./configure --with-compat --add-dynamic-module=/usr/src/headers-more-nginx-module-\"$HEADERS_MORE_NGINX_MODULE_VERSION\" \\\n && make modules \\\n && cp objs/ngx_http_headers_more_filter_module.so /etc/nginx/modules \\\n && rm -rf /usr/src/nginx-\"$NGINX_VERSION\" /usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\" /usr/src/headers-more-nginx-module-\"$HEADERS_MORE_NGINX_MODULE_VERSION\" \\\n && apk del .build-deps\n#     \n#  END BUILD CUSTOM MODULES\n#\nRUN set -ex ; apk add --update --no-cache dumb-init\nCOPY nginx.conf /etc/nginx/nginx.conf\nEXPOSE 80/tcp\nENTRYPOINT [\"dumb-init\"]\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"676f8eaffb8e6526d9a1722433a0ed17","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.10.0\nLABEL image=\"demyx/nginx\"\nLABEL maintainer=\"Demyx <info@demyx.sh>\"\nLABEL url=\"https://demyx.sh\"\nLABEL github=\"https://github.com/demyxco/demyx\"\nLABEL registry=\"https://hub.docker.com/u/demyx\"\nENV TZ=\"America/Los_Angeles\"\nENV NGINX_VERSION=\"1.17.0\"\nENV NJS_VERSION=\"0.3.2\"\nENV PKG_RELEASE=\"1\"\nENV NGX_CACHE_PURGE_VERSION=\"2.3\"\nENV NGX_CACHE_PURGE_SHA1=\"69ed46a23435e8dfd5579422c0c3996cf9a44291\"\nENV HEADERS_MORE_NGINX_MODULE_VERSION=\"0.33\"\nRUN set -x \\\n && addgroup -g 101 -S nginx \\\n && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx \\\n && apkArch=\"$( cat /etc/apk/arch ;)\" \\\n && nginxPackages=\" nginx=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE} nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE} \" \\\n && case \"$apkArch\" in (x86_64) set -x \\\n && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\" \\\n && apk add --no-cache --virtual .cert-deps openssl curl ca-certificates \\\n && curl -o /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub \\\n && if [ \"$( openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r ;)\" = \"$KEY_SHA512\" ] ; then echo \"key verification succeeded!\" ;mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/ ; else echo \"key verification failed!\" ;exit 1 ; fi \\\n && printf \"%s%s%s\\n\" \"http://nginx.org/packages/mainline/alpine/v3.9\" \"/main\" | tee -a /etc/apk/repositories \\\n && apk del .cert-deps ;;(*) set -x \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chown nobody:nobody $tempDir \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils \\\n && su - nobody -s /bin/sh -c \" export HOME=${tempDir} \\\n && cd ${tempDir} \\\n && hg clone https://hg.nginx.org/pkg-oss \\\n && cd pkg-oss \\\n && hg up ${NGINX_VERSION}-${PKG_RELEASE} \\\n && cd alpine \\\n && make all \\\n && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk \\\n && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz \" \\\n && echo \"${tempDir}/packages/alpine/\" >> /etc/apk/repositories \\\n && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ \\\n && apk del .build-deps ;; esac \\\n && apk add --no-cache $nginxPackages \\\n && if [ -n \"$tempDir\" ] ; then rm -rf \"$tempDir\" ; fi \\\n && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ] ; then rm -f /etc/apk/keys/abuild-key.rsa.pub ; fi \\\n && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ] ; then rm -f /etc/apk/keys/nginx_signing.rsa.pub ; fi \\\n && sed -i '$ d' /etc/apk/repositories \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache $runDeps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && apk add --no-cache tzdata \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#      \n#   BUILD CUSTOM MODULES\n#\nRUN apk add --no-cache --update --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg1 libxslt-dev gd-dev geoip-dev \\\n && mkdir -p /usr/src \\\n && curl -o ngx_cache_purge.tar.gz -fSL \"http://labs.frickle.com/files/ngx_cache_purge-${NGX_CACHE_PURGE_VERSION}.tar.gz\" \\\n && echo \"$NGX_CACHE_PURGE_SHA1 *ngx_cache_purge.tar.gz\" | sha1sum -c - \\\n && tar -xzf ngx_cache_purge.tar.gz -C /usr/src/ \\\n && rm ngx_cache_purge.tar.gz \\\n && curl -o headers-more-nginx-module.tar.gz -fSL \"https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_NGINX_MODULE_VERSION}.tar.gz\" \\\n && tar -xzf headers-more-nginx-module.tar.gz -C /usr/src/ \\\n && rm headers-more-nginx-module.tar.gz \\\n && curl -o nginx.tar.gz -fSL \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" \\\n && tar -xzf nginx.tar.gz -C /usr/src/ \\\n && rm nginx.tar.gz \\\n && sed -i \"s/HTTP_MODULES/#HTTP_MODULES/g\" /usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\"/config \\\n && sed -i \"s/NGX_ADDON_SRCS/#NGX_ADDON_SRCS/g\" /usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\"/config \\\n && sed -i \"s|ngx_addon_name=ngx_http_cache_purge_module|ngx_addon_name=ngx_http_cache_purge_module; if test -n \\\"$ngx_module_link\\\"; then ngx_module_type=HTTP; ngx_module_name=ngx_http_cache_purge_module; ngx_module_srcs=\\\"$ngx_addon_dir/ngx_cache_purge_module.c\\\"; . auto/module; else HTTP_MODULES=\\\"$HTTP_MODULES ngx_http_cache_purge_module\\\"; NGX_ADDON_SRCS=\\\"$NGX_ADDON_SRCS $ngx_addon_dir/ngx_cache_purge_module.c\\\"; fi|g\" /usr/src/ngx_cache_purge-${NGX_CACHE_PURGE_VERSION}/config \\\n && sed -i \"s|ngx_addon_name=ngx_http_headers_more_filter_module|ngx_addon_name=ngx_http_headers_more_filter_module; if test -n \\\"$ngx_module_link\\\"; then ngx_module_type=HTTP; ngx_module_name=ngx_http_headers_more_filter_module; ngx_module_srcs=\\\"$ngx_addon_dir/ngx_http_headers_more_filter_module.c\\\"; . auto/module; else HTTP_MODULES=\\\"$HTTP_MODULES ngx_http_headers_more_filter_module\\\"; NGX_ADDON_SRCS=\\\"$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_headers_more_filter_module.c\\\"; fi|g\" /usr/src/headers-more-nginx-module-${HEADERS_MORE_NGINX_MODULE_VERSION}/config \\\n && cd /usr/src/nginx-\"$NGINX_VERSION\" \\\n && ./configure --with-compat --add-dynamic-module=/usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\" \\\n && make modules \\\n && cp objs/ngx_http_cache_purge_module.so /etc/nginx/modules \\\n && make clean \\\n && ./configure --with-compat --add-dynamic-module=/usr/src/headers-more-nginx-module-\"$HEADERS_MORE_NGINX_MODULE_VERSION\" \\\n && make modules \\\n && cp objs/ngx_http_headers_more_filter_module.so /etc/nginx/modules \\\n && rm -rf /usr/src/nginx-\"$NGINX_VERSION\" /usr/src/ngx_cache_purge-\"$NGX_CACHE_PURGE_VERSION\" /usr/src/headers-more-nginx-module-\"$HEADERS_MORE_NGINX_MODULE_VERSION\" \\\n && apk del .build-deps\n#      \n#   END BUILD CUSTOM MODULES\n#\nRUN set -ex ; apk add --update --no-cache dumb-init\nCOPY nginx.conf /etc/nginx/nginx.conf\nEXPOSE 80/tcp\nENTRYPOINT [\"dumb-init\"]\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"846503adc243f4bb62e42e8348796f41","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/411294c296994d4f685c4356775a2c5ae7d53301.dockerfile"}