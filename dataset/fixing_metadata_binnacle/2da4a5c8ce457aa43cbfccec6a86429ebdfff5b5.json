{"seed":574981665,"processedDockerfileHash":"9bf24ed90e2689d8e24fe2f949ea5b2c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"#   GENERATED FILE, DO NOT MODIFY!\n#   To update this file please edit the relevant template and run the generation\n#   task `build/dockerfile_writer.rb`\n#   See doc/docker/README.md or https://github.com/instructure/canvas-lms/tree/master/doc/docker\nFROM instructure/ruby-passenger:2.4-xenial\nENV APP_HOME=\"/usr/src/app/\"\nENV RAILS_ENV=\"\\\"production\\\"\"\nENV NGINX_MAX_UPLOAD_SIZE=\"10g\"\nENV YARN_VERSION=\"1.16.0-1\"\n#   Work around github.com/zertosh/v8-compile-cache/issues/2\n#   This can be removed once yarn pushes a release including the fixed version\n#   of v8-compile-cache.\nENV DISABLE_V8_COMPILE_CACHE=\"1\"\nUSER root\nWORKDIR /root\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n && printf 'path-exclude /usr/share/doc/*\\npath-exclude /usr/share/man/*' > /etc/dpkg/dpkg.cfg.d/01_nodoc \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ $( lsb_release -cs ;)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n && curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends nodejs libxmlsec1-dev python-lxml libicu-dev postgresql-client-9.5 unzip fontforge yarn=\"$YARN_VERSION\" -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /home/docker/.gem/ruby/$RUBY_MAJOR.0\nRUN if [ -e /var/lib/gems/$RUBY_MAJOR.0/gems/bundler-* ] ; then BUNDLER_INSTALL=\"-i /var/lib/gems/$RUBY_MAJOR.0\" ; fi \\\n && gem uninstall --all --ignore-dependencies --force $BUNDLER_INSTALL bundler \\\n && gem install bundler --version 1.17.3 --no-document \\\n && find $GEM_HOME ! -user docker | xargs chown docker:docker\n#   We will need sfnt2woff in order to build fonts\nCOPY build/vendor/woff-code-latest.zip ./\nRUN unzip woff-code-latest.zip -d woff \\\n && cd woff \\\n && make \\\n && cp sfnt2woff /usr/local/bin \\\n && cd - \\\n && rm -rf woff*\nWORKDIR $APP_HOME\nCOPY Gemfile ${APP_HOME}\nCOPY Gemfile.d ${APP_HOME}Gemfile.d\nCOPY config ${APP_HOME}config\nCOPY --chown=docker:docker gems ${APP_HOME}gems\nCOPY --chown=docker:docker packages ${APP_HOME}packages\nCOPY script ${APP_HOME}script\nCOPY package.json ${APP_HOME}\nCOPY yarn.lock ${APP_HOME}\nCOPY babel.config.js ${APP_HOME}\n#   Install deps as docker to avoid sadness w/ npm lifecycle hooks\nUSER docker\nRUN bundle install --jobs 8 \\\n && yarn install --pure-lockfile\nUSER root\nCOPY . $APP_HOME\nRUN mkdir -p .yardoc app/stylesheets/brandable_css_brands app/views/info client_apps/canvas_quizzes/dist client_apps/canvas_quizzes/node_modules client_apps/canvas_quizzes/tmp config/locales/generated gems/canvas_i18nliner/node_modules gems/selinimum/node_modules log node_modules packages/canvas-planner/lib packages/canvas-planner/node_modules pacts public/dist public/doc/api public/javascripts/client_apps public/javascripts/compiled public/javascripts/translations reports tmp /home/docker/.bundler/ /home/docker/.cache/yarn /home/docker/.gem/ \\\n && find ${APP_HOME} /home/docker ! -user docker -print0 | xargs -0 chown -h docker:docker\nUSER docker\n#   update Gemfile.lock in cases where a lock file was pulled in during the `COPY . $APP_HOME` step\nRUN bundle lock --update\n#   TODO: switch to canvas:compile_assets_dev once we stop using this Dockerfile in production/e2e\nRUN COMPILE_ASSETS_NPM_INSTALL=0 bundle exec rake canvas:compile_assets\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  GENERATED FILE, DO NOT MODIFY!\n#  To update this file please edit the relevant template and run the generation\n#  task `build/dockerfile_writer.rb`\n#  See doc/docker/README.md or https://github.com/instructure/canvas-lms/tree/master/doc/docker\nFROM instructure/ruby-passenger:2.4-xenial\nENV APP_HOME=\"/usr/src/app/\"\nENV RAILS_ENV=\"\\\"production\\\"\"\nENV NGINX_MAX_UPLOAD_SIZE=\"10g\"\nENV YARN_VERSION=\"1.16.0-1\"\n#  Work around github.com/zertosh/v8-compile-cache/issues/2\n#  This can be removed once yarn pushes a release including the fixed version\n#  of v8-compile-cache.\nENV DISABLE_V8_COMPILE_CACHE=\"1\"\nUSER root\nWORKDIR /root\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n && printf 'path-exclude /usr/share/doc/*\\npath-exclude /usr/share/man/*' > /etc/dpkg/dpkg.cfg.d/01_nodoc \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ $( lsb_release -cs ;)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n && curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends nodejs libxmlsec1-dev python-lxml libicu-dev postgresql-client-9.5 unzip fontforge yarn=\"$YARN_VERSION\" -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /home/docker/.gem/ruby/$RUBY_MAJOR.0\nRUN if [ -e /var/lib/gems/$RUBY_MAJOR.0/gems/bundler-* ] ; then BUNDLER_INSTALL=\"-i /var/lib/gems/$RUBY_MAJOR.0\" ; fi \\\n && gem uninstall --all --ignore-dependencies --force $BUNDLER_INSTALL bundler \\\n && gem install bundler --version 1.17.3 --no-document \\\n && find $GEM_HOME ! -user docker | xargs chown docker:docker\n#  We will need sfnt2woff in order to build fonts\nCOPY build/vendor/woff-code-latest.zip ./\nRUN unzip woff-code-latest.zip -d woff \\\n && cd woff \\\n && make \\\n && cp sfnt2woff /usr/local/bin \\\n && cd - \\\n && rm -rf woff*\nWORKDIR $APP_HOME\nCOPY Gemfile ${APP_HOME}\nCOPY Gemfile.d ${APP_HOME}Gemfile.d\nCOPY config ${APP_HOME}config\nCOPY --chown=docker:docker gems ${APP_HOME}gems\nCOPY --chown=docker:docker packages ${APP_HOME}packages\nCOPY script ${APP_HOME}script\nCOPY package.json ${APP_HOME}\nCOPY yarn.lock ${APP_HOME}\nCOPY babel.config.js ${APP_HOME}\n#  Install deps as docker to avoid sadness w/ npm lifecycle hooks\nUSER docker\nRUN bundle install --jobs 8 \\\n && yarn install --pure-lockfile\nUSER root\nCOPY . $APP_HOME\nRUN mkdir -p .yardoc app/stylesheets/brandable_css_brands app/views/info client_apps/canvas_quizzes/dist client_apps/canvas_quizzes/node_modules client_apps/canvas_quizzes/tmp config/locales/generated gems/canvas_i18nliner/node_modules gems/selinimum/node_modules log node_modules packages/canvas-planner/lib packages/canvas-planner/node_modules pacts public/dist public/doc/api public/javascripts/client_apps public/javascripts/compiled public/javascripts/translations reports tmp /home/docker/.bundler/ /home/docker/.cache/yarn /home/docker/.gem/ \\\n && find ${APP_HOME} /home/docker ! -user docker -print0 | xargs -0 chown -h docker:docker\nUSER docker\n#  update Gemfile.lock in cases where a lock file was pulled in during the `COPY . $APP_HOME` step\nRUN bundle lock --update\n#  TODO: switch to canvas:compile_assets_dev once we stop using this Dockerfile in production/e2e\nRUN COMPILE_ASSETS_NPM_INSTALL=0 bundle exec rake canvas:compile_assets\n","injectedSmells":[],"originalDockerfileHash":"0f6a0f0a755a7308bc8d279022458621","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   GENERATED FILE, DO NOT MODIFY!\n#   To update this file please edit the relevant template and run the generation\n#   task `build/dockerfile_writer.rb`\n#   See doc/docker/README.md or https://github.com/instructure/canvas-lms/tree/master/doc/docker\nFROM instructure/ruby-passenger:2.4-xenial\nENV APP_HOME=\"/usr/src/app/\"\nENV RAILS_ENV=\"\\\"production\\\"\"\nENV NGINX_MAX_UPLOAD_SIZE=\"10g\"\nENV YARN_VERSION=\"1.16.0-1\"\n#   Work around github.com/zertosh/v8-compile-cache/issues/2\n#   This can be removed once yarn pushes a release including the fixed version\n#   of v8-compile-cache.\nENV DISABLE_V8_COMPILE_CACHE=\"1\"\nUSER root\nWORKDIR /root\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n && printf 'path-exclude /usr/share/doc/*\\npath-exclude /usr/share/man/*' > /etc/dpkg/dpkg.cfg.d/01_nodoc \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ $( lsb_release -cs ;)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n && curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends nodejs libxmlsec1-dev python-lxml libicu-dev postgresql-client-9.5 unzip fontforge yarn=\"$YARN_VERSION\" -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /home/docker/.gem/ruby/$RUBY_MAJOR.0\nRUN if [ -e /var/lib/gems/$RUBY_MAJOR.0/gems/bundler-* ] ; then BUNDLER_INSTALL=\"-i /var/lib/gems/$RUBY_MAJOR.0\" ; fi \\\n && gem uninstall --all --ignore-dependencies --force $BUNDLER_INSTALL bundler \\\n && gem install bundler --version 1.17.3 --no-document \\\n && find $GEM_HOME ! -user docker | xargs chown docker:docker\n#   We will need sfnt2woff in order to build fonts\nCOPY build/vendor/woff-code-latest.zip ./\nRUN unzip woff-code-latest.zip -d woff \\\n && cd woff \\\n && make \\\n && cp sfnt2woff /usr/local/bin \\\n && cd - \\\n && rm -rf woff*\nWORKDIR $APP_HOME\nCOPY Gemfile ${APP_HOME}\nCOPY Gemfile.d ${APP_HOME}Gemfile.d\nCOPY config ${APP_HOME}config\nCOPY --chown=docker:docker gems ${APP_HOME}gems\nCOPY --chown=docker:docker packages ${APP_HOME}packages\nCOPY script ${APP_HOME}script\nCOPY package.json ${APP_HOME}\nCOPY yarn.lock ${APP_HOME}\nCOPY babel.config.js ${APP_HOME}\n#   Install deps as docker to avoid sadness w/ npm lifecycle hooks\nUSER docker\nRUN bundle install --jobs 8 \\\n && yarn install --pure-lockfile\nUSER root\nCOPY . $APP_HOME\nRUN mkdir -p .yardoc app/stylesheets/brandable_css_brands app/views/info client_apps/canvas_quizzes/dist client_apps/canvas_quizzes/node_modules client_apps/canvas_quizzes/tmp config/locales/generated gems/canvas_i18nliner/node_modules gems/selinimum/node_modules log node_modules packages/canvas-planner/lib packages/canvas-planner/node_modules pacts public/dist public/doc/api public/javascripts/client_apps public/javascripts/compiled public/javascripts/translations reports tmp /home/docker/.bundler/ /home/docker/.cache/yarn /home/docker/.gem/ \\\n && find ${APP_HOME} /home/docker ! -user docker -print0 | xargs -0 chown -h docker:docker\nUSER docker\n#   update Gemfile.lock in cases where a lock file was pulled in during the `COPY . $APP_HOME` step\nRUN bundle lock --update\n#   TODO: switch to canvas:compile_assets_dev once we stop using this Dockerfile in production/e2e\nRUN COMPILE_ASSETS_NPM_INSTALL=0 bundle exec rake canvas:compile_assets\n","originalDockerfileUglifiedHash":"47717e2d61fabddfbde05636b7bcda0c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2da4a5c8ce457aa43cbfccec6a86429ebdfff5b5.dockerfile"}