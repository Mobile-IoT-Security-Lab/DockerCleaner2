{"seed":2111403225,"processedDockerfileHash":"f871452eb6aa726f56809223d2fc74f3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-have-secrets"],"processedDockerfile":"#   ------------------------------------------------------------------------------\n#   Dockerfile to build basic Oracle database images\n#   Based on the following:\n#     - Oracle Linux 7 - Slim\n#     - Oracle Database\n#         http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html\n#     - Oracle Application Express (APEX)\n#         http://www.oracle.com/technetwork/developer-tools/apex/downloads/index.html\n#\n#   Example build and run.\n#\n#   docker build -t ol7_122:latest .\n#   docker build --squash -t ol7_122:latest .\n#\n#   Non-persistent storage.\n#   docker run -dit --name ol7_122_con -p 1521:1521 -p 5500:5500 --shm-size=\"1G\" ol7_122:latest\n#\n#   Persistent storage.\n#   docker run -dit --name ol7_122_con -p 1521:1521 -p 5500:5500 --shm-size=\"1G\" -v /u01/volumes/ol7_122_con_u02/:/u02 ol7_122:latest\n#\n#   Persistent storage and part of Docker network called \"my_network\".\n#   docker run -dit --name ol7_122_con -p 1521:1521 -p 5500:5500 --shm-size=\"1G\" --network=my_network -v /u01/volumes/ol7_122_con_u02/:/u02 ol7_122:latest\n#\n#   docker logs --follow ol7_122_con\n#   docker exec -it ol7_122_con bash\n#\n#   docker stop --time=30 ol7_122_con\n#   docker start ol7_122_con\n#   \n#   docker rm -vf ol7_122_con \n#\n#   ------------------------------------------------------------------------------\n#   Set the base image to Oracle Linux 7 - Slim\nFROM oraclelinux:7-slim\n#   File Author / Maintainer\n#   Use LABEL rather than deprecated MAINTAINER\n#   MAINTAINER Tim Hall (tim@oracle-base.com)\nLABEL maintainer=\"tim@oracle-base.com\"\n#   ------------------------------------------------------------------------------\n#   Define fixed (build time) environment variables.\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV ORACLE_BASE=\"/u01/app/oracle\" \\\n    ORACLE_HOME=\"/u01/app/oracle/product/12.2.0.1/db_1\" \\\n    ORA_INVENTORY=\"/u01/app/oraInventory\" \\\n    SOFTWARE_DIR=\"/u01/software\" \\\n    DB_SOFTWARE=\"linuxx64_12201_database.zip\" \\\n    APEX_SOFTWARE=\"apex_19.1_en.zip\" \\\n    SCRIPTS_DIR=\"/u01/scripts\" \\\n    ORAENV_ASK=\"NO\"\n#   Separate ENV call to allow existing variables to be referenced.\nENV PATH=\"${ORACLE_HOME}/bin:${PATH}\"\n#   ------------------------------------------------------------------------------\n#   Define config (runtime) environment variables.\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV ORACLE_SID=\"cdb1\" \\\n    PDB_NAME=\"pdb1\" \\\n    INSTALL_APEX=\"true\" \\\n    APEX_EMAIL=\"me@example.com\"\n#   ------------------------------------------------------------------------------\n#   Get all the files for the build.\nCOPY software/* ${SOFTWARE_DIR}/\nCOPY scripts/* ${SCRIPTS_DIR}/\n#   ------------------------------------------------------------------------------\n#   Unpack all the software and remove the media.\n#   No config done in the build phase.\n#   \n#   Manually create user and group as preinstall package creates the with\n#   high IDs, which causes issues. Note 2 on link below.\n#   https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#user\n#\nRUN groupadd -g 500 dba \\\n && groupadd -g 501 oinstall \\\n && groupadd -g 1042 docker_fg \\\n && useradd -d /home/oracle -u 500 -g dba -G oinstall,dba,docker_fg -m -s /bin/bash oracle \\\n && yum -y install unzip tar gzip \\\n && yum -y update \\\n && yum -y install oracle-database-server-12cR2-preinstall \\\n && rm -Rf /var/cache/yum \\\n && mkdir -p ${ORACLE_HOME} \\\n && mkdir -p /u02/oradata \\\n && chown -R oracle.oinstall /u01 \\\n && chmod u+x ${SCRIPTS_DIR}/*.sh \\\n && chown oracle:docker_fg /u02 \\\n && chmod 775 /u02 \\\n && chmod g+s /u02\n#   Perform the following actions as the oracle user\nUSER oracle\n#   Unzip software\nRUN cd ${SOFTWARE_DIR} \\\n && unzip -oq ${DB_SOFTWARE} \\\n && rm ${DB_SOFTWARE}\n#   Do software-only installation\nRUN ${SOFTWARE_DIR}/database/runInstaller -ignoreSysPrereqs -ignorePrereq -waitforcompletion -showProgress -silent -responseFile $SOFTWARE_DIR/database/response/db_install.rsp oracle.install.option=INSTALL_DB_SWONLY ORACLE_HOSTNAME=${HOSTNAME} UNIX_GROUP_NAME=oinstall INVENTORY_LOCATION=${ORA_INVENTORY} SELECTED_LANGUAGES=en,en_GB ORACLE_HOME=${ORACLE_HOME} ORACLE_BASE=${ORACLE_BASE} oracle.install.db.InstallEdition=EE oracle.install.db.OSDBA_GROUP=dba oracle.install.db.OSBACKUPDBA_GROUP=dba oracle.install.db.OSDGDBA_GROUP=dba oracle.install.db.OSKMDBA_GROUP=dba oracle.install.db.OSRACDBA_GROUP=dba SECURITY_UPDATES_VIA_MYORACLESUPPORT=false DECLINE_SECURITY_UPDATES=true\n#   Remove source software\n#   Replace default APEX software with user-provided version.\nRUN rm -Rf ${SOFTWARE_DIR}/database \\\n && rm -Rf ${ORACLE_HOME}/apex \\\n && unzip -oqd ${ORACLE_HOME} ${SOFTWARE_DIR}/${APEX_SOFTWARE} \\\n && rm ${SOFTWARE_DIR}/${APEX_SOFTWARE}\n#   Run the root scripts\nUSER root\nRUN sh ${ORA_INVENTORY}/orainstRoot.sh \\\n && sh ${ORACLE_HOME}/root.sh\n#   Perform the following actions as the oracle user\nUSER oracle\nVOLUME [\"/u02\"]\nEXPOSE 1521/tcp 5500/tcp\nHEALTHCHECK --interval=300s --start-period=600s CMD ${SCRIPTS_DIR}/healthcheck.sh > /dev/null || exit 1\n#   ------------------------------------------------------------------------------\n#   The start script performs all config based on runtime environment variables.\n#   First run creates the database.\nCMD exec ${SCRIPTS_DIR}/start.sh\n#   End\n","originalDockerfile":"#  ------------------------------------------------------------------------------\n#  Dockerfile to build basic Oracle database images\n#  Based on the following:\n#    - Oracle Linux 7 - Slim\n#    - Oracle Database\n#        http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html\n#    - Oracle Application Express (APEX)\n#        http://www.oracle.com/technetwork/developer-tools/apex/downloads/index.html\n#\n#  Example build and run.\n#\n#  docker build -t ol7_122:latest .\n#  docker build --squash -t ol7_122:latest .\n#\n#  Non-persistent storage.\n#  docker run -dit --name ol7_122_con -p 1521:1521 -p 5500:5500 --shm-size=\"1G\" ol7_122:latest\n#\n#  Persistent storage.\n#  docker run -dit --name ol7_122_con -p 1521:1521 -p 5500:5500 --shm-size=\"1G\" -v /u01/volumes/ol7_122_con_u02/:/u02 ol7_122:latest\n#\n#  Persistent storage and part of Docker network called \"my_network\".\n#  docker run -dit --name ol7_122_con -p 1521:1521 -p 5500:5500 --shm-size=\"1G\" --network=my_network -v /u01/volumes/ol7_122_con_u02/:/u02 ol7_122:latest\n#\n#  docker logs --follow ol7_122_con\n#  docker exec -it ol7_122_con bash\n#\n#  docker stop --time=30 ol7_122_con\n#  docker start ol7_122_con\n#  \n#  docker rm -vf ol7_122_con \n#\n#  ------------------------------------------------------------------------------\n#  Set the base image to Oracle Linux 7 - Slim\nFROM oraclelinux:7-slim\n#  File Author / Maintainer\n#  Use LABEL rather than deprecated MAINTAINER\n#  MAINTAINER Tim Hall (tim@oracle-base.com)\nLABEL maintainer=\"tim@oracle-base.com\"\n#  ------------------------------------------------------------------------------\n#  Define fixed (build time) environment variables.\nENV ORACLE_BASE=\"/u01/app/oracle\" \\\n    ORACLE_HOME=\"/u01/app/oracle/product/12.2.0.1/db_1\" \\\n    ORA_INVENTORY=\"/u01/app/oraInventory\" \\\n    SOFTWARE_DIR=\"/u01/software\" \\\n    DB_SOFTWARE=\"linuxx64_12201_database.zip\" \\\n    APEX_SOFTWARE=\"apex_19.1_en.zip\" \\\n    ORACLE_PASSWORD=\"oracle\" \\\n    SCRIPTS_DIR=\"/u01/scripts\" \\\n    ORAENV_ASK=\"NO\"\n#  Separate ENV call to allow existing variables to be referenced.\nENV PATH=\"${ORACLE_HOME}/bin:${PATH}\"\n#  ------------------------------------------------------------------------------\n#  Define config (runtime) environment variables.\nENV ORACLE_SID=\"cdb1\" \\\n    SYS_PASSWORD=\"SysPassword1\" \\\n    PDB_NAME=\"pdb1\" \\\n    PDB_PASSWORD=\"PdbPassword1\" \\\n    INSTALL_APEX=\"true\" \\\n    APEX_EMAIL=\"me@example.com\" \\\n    APEX_PASSWORD=\"ApexPassword1\"\n#  ------------------------------------------------------------------------------\n#  Get all the files for the build.\nCOPY software/* ${SOFTWARE_DIR}/\nCOPY scripts/* ${SCRIPTS_DIR}/\n#  ------------------------------------------------------------------------------\n#  Unpack all the software and remove the media.\n#  No config done in the build phase.\n#  \n#  Manually create user and group as preinstall package creates the with\n#  high IDs, which causes issues. Note 2 on link below.\n#  https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#user\n#\nRUN groupadd -g 500 dba \\\n && groupadd -g 501 oinstall \\\n && groupadd -g 1042 docker_fg \\\n && useradd -d /home/oracle -u 500 -g dba -G oinstall,dba,docker_fg -m -s /bin/bash oracle \\\n && yum -y install unzip tar gzip \\\n && yum -y update \\\n && yum -y install oracle-database-server-12cR2-preinstall \\\n && rm -Rf /var/cache/yum \\\n && mkdir -p ${ORACLE_HOME} \\\n && mkdir -p /u02/oradata \\\n && chown -R oracle.oinstall /u01 \\\n && chmod u+x ${SCRIPTS_DIR}/*.sh \\\n && chown oracle:docker_fg /u02 \\\n && chmod 775 /u02 \\\n && chmod g+s /u02\n#  Perform the following actions as the oracle user\nUSER oracle\n#  Unzip software\nRUN cd ${SOFTWARE_DIR} \\\n && unzip -oq ${DB_SOFTWARE} \\\n && rm ${DB_SOFTWARE}\n#  Do software-only installation\nRUN ${SOFTWARE_DIR}/database/runInstaller -ignoreSysPrereqs -ignorePrereq -waitforcompletion -showProgress -silent -responseFile $SOFTWARE_DIR/database/response/db_install.rsp oracle.install.option=INSTALL_DB_SWONLY ORACLE_HOSTNAME=${HOSTNAME} UNIX_GROUP_NAME=oinstall INVENTORY_LOCATION=${ORA_INVENTORY} SELECTED_LANGUAGES=en,en_GB ORACLE_HOME=${ORACLE_HOME} ORACLE_BASE=${ORACLE_BASE} oracle.install.db.InstallEdition=EE oracle.install.db.OSDBA_GROUP=dba oracle.install.db.OSBACKUPDBA_GROUP=dba oracle.install.db.OSDGDBA_GROUP=dba oracle.install.db.OSKMDBA_GROUP=dba oracle.install.db.OSRACDBA_GROUP=dba SECURITY_UPDATES_VIA_MYORACLESUPPORT=false DECLINE_SECURITY_UPDATES=true\n#  Remove source software\n#  Replace default APEX software with user-provided version.\nRUN rm -Rf ${SOFTWARE_DIR}/database \\\n && rm -Rf ${ORACLE_HOME}/apex \\\n && unzip -oqd ${ORACLE_HOME} ${SOFTWARE_DIR}/${APEX_SOFTWARE} \\\n && rm ${SOFTWARE_DIR}/${APEX_SOFTWARE}\n#  Run the root scripts\nUSER root\nRUN sh ${ORA_INVENTORY}/orainstRoot.sh \\\n && sh ${ORACLE_HOME}/root.sh\n#  Perform the following actions as the oracle user\nUSER oracle\nVOLUME [\"/u02\"]\nEXPOSE 1521/tcp 5500/tcp\nHEALTHCHECK --interval=300s --start-period=600s CMD ${SCRIPTS_DIR}/healthcheck.sh > /dev/null || exit 1\n#  ------------------------------------------------------------------------------\n#  The start script performs all config based on runtime environment variables.\n#  First run creates the database.\nCMD exec ${SCRIPTS_DIR}/start.sh\n#  End\n","injectedSmells":[],"originalDockerfileHash":"8f143512c5a03a9d78b147547dd974d9","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ------------------------------------------------------------------------------\n#   Dockerfile to build basic Oracle database images\n#   Based on the following:\n#     - Oracle Linux 7 - Slim\n#     - Oracle Database\n#         http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html\n#     - Oracle Application Express (APEX)\n#         http://www.oracle.com/technetwork/developer-tools/apex/downloads/index.html\n#\n#   Example build and run.\n#\n#   docker build -t ol7_122:latest .\n#   docker build --squash -t ol7_122:latest .\n#\n#   Non-persistent storage.\n#   docker run -dit --name ol7_122_con -p 1521:1521 -p 5500:5500 --shm-size=\"1G\" ol7_122:latest\n#\n#   Persistent storage.\n#   docker run -dit --name ol7_122_con -p 1521:1521 -p 5500:5500 --shm-size=\"1G\" -v /u01/volumes/ol7_122_con_u02/:/u02 ol7_122:latest\n#\n#   Persistent storage and part of Docker network called \"my_network\".\n#   docker run -dit --name ol7_122_con -p 1521:1521 -p 5500:5500 --shm-size=\"1G\" --network=my_network -v /u01/volumes/ol7_122_con_u02/:/u02 ol7_122:latest\n#\n#   docker logs --follow ol7_122_con\n#   docker exec -it ol7_122_con bash\n#\n#   docker stop --time=30 ol7_122_con\n#   docker start ol7_122_con\n#   \n#   docker rm -vf ol7_122_con \n#\n#   ------------------------------------------------------------------------------\n#   Set the base image to Oracle Linux 7 - Slim\nFROM oraclelinux:7-slim\n#   File Author / Maintainer\n#   Use LABEL rather than deprecated MAINTAINER\n#   MAINTAINER Tim Hall (tim@oracle-base.com)\nLABEL maintainer=\"tim@oracle-base.com\"\n#   ------------------------------------------------------------------------------\n#   Define fixed (build time) environment variables.\nENV ORACLE_BASE=\"/u01/app/oracle\" \\\n    ORACLE_HOME=\"/u01/app/oracle/product/12.2.0.1/db_1\" \\\n    ORA_INVENTORY=\"/u01/app/oraInventory\" \\\n    SOFTWARE_DIR=\"/u01/software\" \\\n    DB_SOFTWARE=\"linuxx64_12201_database.zip\" \\\n    APEX_SOFTWARE=\"apex_19.1_en.zip\" \\\n    ORACLE_PASSWORD=\"oracle\" \\\n    SCRIPTS_DIR=\"/u01/scripts\" \\\n    ORAENV_ASK=\"NO\"\n#   Separate ENV call to allow existing variables to be referenced.\nENV PATH=\"${ORACLE_HOME}/bin:${PATH}\"\n#   ------------------------------------------------------------------------------\n#   Define config (runtime) environment variables.\nENV ORACLE_SID=\"cdb1\" \\\n    SYS_PASSWORD=\"SysPassword1\" \\\n    PDB_NAME=\"pdb1\" \\\n    PDB_PASSWORD=\"PdbPassword1\" \\\n    INSTALL_APEX=\"true\" \\\n    APEX_EMAIL=\"me@example.com\" \\\n    APEX_PASSWORD=\"ApexPassword1\"\n#   ------------------------------------------------------------------------------\n#   Get all the files for the build.\nCOPY software/* ${SOFTWARE_DIR}/\nCOPY scripts/* ${SCRIPTS_DIR}/\n#   ------------------------------------------------------------------------------\n#   Unpack all the software and remove the media.\n#   No config done in the build phase.\n#   \n#   Manually create user and group as preinstall package creates the with\n#   high IDs, which causes issues. Note 2 on link below.\n#   https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#user\n#\nRUN groupadd -g 500 dba \\\n && groupadd -g 501 oinstall \\\n && groupadd -g 1042 docker_fg \\\n && useradd -d /home/oracle -u 500 -g dba -G oinstall,dba,docker_fg -m -s /bin/bash oracle \\\n && yum -y install unzip tar gzip \\\n && yum -y update \\\n && yum -y install oracle-database-server-12cR2-preinstall \\\n && rm -Rf /var/cache/yum \\\n && mkdir -p ${ORACLE_HOME} \\\n && mkdir -p /u02/oradata \\\n && chown -R oracle.oinstall /u01 \\\n && chmod u+x ${SCRIPTS_DIR}/*.sh \\\n && chown oracle:docker_fg /u02 \\\n && chmod 775 /u02 \\\n && chmod g+s /u02\n#   Perform the following actions as the oracle user\nUSER oracle\n#   Unzip software\nRUN cd ${SOFTWARE_DIR} \\\n && unzip -oq ${DB_SOFTWARE} \\\n && rm ${DB_SOFTWARE}\n#   Do software-only installation\nRUN ${SOFTWARE_DIR}/database/runInstaller -ignoreSysPrereqs -ignorePrereq -waitforcompletion -showProgress -silent -responseFile $SOFTWARE_DIR/database/response/db_install.rsp oracle.install.option=INSTALL_DB_SWONLY ORACLE_HOSTNAME=${HOSTNAME} UNIX_GROUP_NAME=oinstall INVENTORY_LOCATION=${ORA_INVENTORY} SELECTED_LANGUAGES=en,en_GB ORACLE_HOME=${ORACLE_HOME} ORACLE_BASE=${ORACLE_BASE} oracle.install.db.InstallEdition=EE oracle.install.db.OSDBA_GROUP=dba oracle.install.db.OSBACKUPDBA_GROUP=dba oracle.install.db.OSDGDBA_GROUP=dba oracle.install.db.OSKMDBA_GROUP=dba oracle.install.db.OSRACDBA_GROUP=dba SECURITY_UPDATES_VIA_MYORACLESUPPORT=false DECLINE_SECURITY_UPDATES=true\n#   Remove source software\n#   Replace default APEX software with user-provided version.\nRUN rm -Rf ${SOFTWARE_DIR}/database \\\n && rm -Rf ${ORACLE_HOME}/apex \\\n && unzip -oqd ${ORACLE_HOME} ${SOFTWARE_DIR}/${APEX_SOFTWARE} \\\n && rm ${SOFTWARE_DIR}/${APEX_SOFTWARE}\n#   Run the root scripts\nUSER root\nRUN sh ${ORA_INVENTORY}/orainstRoot.sh \\\n && sh ${ORACLE_HOME}/root.sh\n#   Perform the following actions as the oracle user\nUSER oracle\nVOLUME [\"/u02\"]\nEXPOSE 1521/tcp 5500/tcp\nHEALTHCHECK --interval=300s --start-period=600s CMD ${SCRIPTS_DIR}/healthcheck.sh > /dev/null || exit 1\n#   ------------------------------------------------------------------------------\n#   The start script performs all config based on runtime environment variables.\n#   First run creates the database.\nCMD exec ${SCRIPTS_DIR}/start.sh\n#   End\n","originalDockerfileUglifiedHash":"e578cce4266b95c926299a50d8e04044","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fff2ba224e809b1212bf25d020d0f0411b6a0ed8.dockerfile"}