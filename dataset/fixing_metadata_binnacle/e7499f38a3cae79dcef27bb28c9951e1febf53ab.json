{"seed":453010388,"processedDockerfileHash":"02f05d450a9ec137a39dc730beda23ba","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:latest\nCOPY get-last-layer.sh build.mk fix-execvpe-signature-ghc-7.8.4.patch /tmp/\nRUN : \"Layer 1: fully working basic GHC in /usr/local\" \\\n && mkdir /tmp/ghc \\\n && cd /tmp/ghc \\\n && apk add curl=7.88.1-r1 xz=5.2.9-r0 alpine-sdk=1.0-r1 perl=5.36.0-r0 gmp-dev=6.2.1-r2 file=5.43-r0 gmp=6.2.1-r2 openssh=9.1_p1-r2 openssl=3.0.8-r3 zlib-dev=1.2.13-r0 strace=6.0-r0 vim=9.0.0999-r0 less=608-r1 jq=1.6-r2 ncurses-dev=6.3_p20221119-r0 bash=5.2.15-r0 autoconf=2.71-r1 --update \\\n && cd /tmp \\\n && wget https://nixos.org/releases/patchelf/patchelf-0.8/patchelf-0.8.tar.bz2 \\\n && tar xfj patchelf-0.8.tar.bz2 \\\n && cd patchelf-0.8 \\\n && ./configure \\\n && make install \\\n && cd .. \\\n && rm -rf patchelf* \\\n && sh /tmp/get-last-layer.sh nilcons/ghc-musl-auto ghc-cross > ghc-cross.tar.gz \\\n && tar xvfz ghc-cross.tar.gz \\\n && tar -xvJ -C / -f /tmp/ghc/ghc-7.8.4-x86_64-unknown-linux-musl.tar.xz \\\n && wget https://www.haskell.org/ghc/dist/7.8.4/ghc-7.8.4-src.tar.bz2 \\\n && tar xvfj ghc-7.8.4-src.tar.bz2 \\\n && cd /tmp/ghc/ghc-7.8.4 \\\n && cp -v /tmp/build.mk mk/build.mk \\\n && patch -p1 < /tmp/fix-execvpe-signature-ghc-7.8.4.patch \\\n && PATH=/opt/ghc-cross/bin:$PATH ./configure \\\n && : \"libffi has a bug, which we patch here\" \\\n && sed -i 's,chmod,sed -i s/__gnu_linux__/1/ libffi/build/src/closures.c \\&\\& chmod,' libffi/ghc.mk \\\n && make -j8 \\\n && make binary-dist \\\n && cd /tmp \\\n && mv ghc/ghc-7.8.4/ghc-7.8.4-x86_64-unknown-linux.tar.bz2 . \\\n && rm -rf ghc /opt/ghc-cross \\\n && : \\\n && : end of build, but we want to minimize docker layer sizes \\\n && : so we extract ghc here and delete the tarball \\\n && : \\\n && tar xvfj ghc-7.8.4-x86_64-unknown-linux.tar.bz2 \\\n && cd ghc-7.8.4 \\\n && ./configure \\\n && : musl ld requires --no-pie to work for some reason with ghc \\\n && sed -i '/C\\ compiler\\ link/{ s/\"\"/\"--no-pie\"/ }' settings \\\n && make install \\\n && cd /tmp \\\n && rm -rf ghc-7.8.4 ghc-7.8.4-x86_64-unknown-linux.tar.bz2\nENV PATH=\"/root/.cabal/bin:$PATH\"\nRUN : \"Layer 2: cabal-install, but only the binary, no executables\" \\\n && cd /tmp \\\n && wget https://hackage.haskell.org/package/cabal-install-1.22.4.0/cabal-install-1.22.4.0.tar.gz \\\n && tar xvfz cabal-install-1.22.4.0.tar.gz \\\n && cd cabal-install-1.22.4.0 \\\n && EXTRA_CONFIGURE_OPTS=--disable-library-profiling ./bootstrap.sh \\\n && cd / \\\n && rm -rf /root/.ghc /tmp/cabal-install-1.22.4.0* /tmp/cabal- /root/.cabal/lib /root/.cabal/share\nRUN : \"Layer 3: cabal-install from stackage and stackage is set up\" \\\n && cd /root/.cabal \\\n && cabal update \\\n && curl -sS 'https://www.stackage.org/lts-2.12/cabal.config?global=true' >> config \\\n && : Waiting for https://github.com/haskell/network/commit/6afe609308b90c1fd4b185978a15d44bc1dbd678 \\\n && : to hit Stackage LTS, until that we have a workaround, but this should be \"cabal install cabal-install\" \\\n && cabal install --global mtl network-uri parsec random stm text zlib \\\n && cabal unpack network-2.6.2.0 \\\n && cd network-2.6.2.0 \\\n && sed -i '/defined(AF_CAN)/ s/AF_CAN/NO_CAN_OF_WORMS/' Network/Socket/Types.hsc \\\n && cabal install --global \\\n && cd .. \\\n && rm -rf network-2.6.2.0 \\\n && cabal install --global cabal-install \\\n && cd / \\\n && : We regenerate the config with the stackage cabal, so that \\\n && : they are compatible. \\\n && rm -rf /root/.cabal \\\n && cabal update \\\n && cp /root/.cabal/config /root/.cabal/config.before-stackage \\\n && curl -sS 'https://www.stackage.org/lts-2.12/cabal.config?global=true' >> /root/.cabal/config\nRUN : \"Layer 4: install some packages\" \\\n && : the ncurses hackage package is a little bit broken \\\n && ln -s /usr/include /usr/include/ncursesw \\\n && apk add curl-dev=7.88.1-r1 openssl-dev=3.0.8-r3 zeromq-dev=4.3.4-r1 libx11-dev=1.8.4-r0 libxkbfile-dev=1.1.1-r0 libxfont-dev=1.5.4-r2 libxcb-dev=1.15-r0 libxv-dev=1.0.11-r3 libxt-dev=1.2.1-r0 libxdmcp-dev=1.1.4-r0 libxp-dev=1.0.4-r0 libxshmfence-dev=1.3.1-r0 libxft-dev=2.3.7-r0 libxxf86dga-dev=1.1.5-r0 libxtst-dev=1.2.4-r0 libxxf86misc-dev libxfixes-dev=6.0.0-r0 libxkbui-dev libxpm-dev=3.5.15-r0 libxcomposite-dev=0.4.5-r1 libxaw-dev=1.0.14-r0 libxau-dev=1.0.10-r0 libxinerama-dev=1.1.5-r0 libxkbcommon-dev=1.4.1-r0 libxmu-dev=1.1.4-r0 libxext-dev=1.3.5-r0 libxdamage-dev=1.1.5-r1 libxxf86vm-dev=1.1.5-r0 libxi-dev=1.8-r0 libxrandr-dev=1.5.3-r0 libxres-dev=1.2.1-r0 libxcursor-dev=1.2.1-r1 libxrender-dev=0.9.11-r0 libxvmc-dev=1.0.13-r0 fuse-dev=2.9.9-r2 mesa-dev=22.2.5-r1 glu-dev=9.0.2-r2 freeglut-dev=3.4.0-r1 gtk+2.0-dev=2.24.33-r7 \\\n && cabal install --global alex happy \\\n && cabal install --global c2hs \\\n && cabal install --global gtk2hs-buildtools \\\n && cabal install --global attoparsec fgl haskell-src haskell-src-exts haskell-src-meta hashable html HUnit parallel QuickCheck regex-base regex-compat regex-posix split syb unordered-containers vector primitive async bytedump unix-bytestring colour conduit criterion crypto-api cryptohash curl data-accessor-template data-default data-memocombinators digest elerea filemanip foldl Glob lens haskeline hflags hit hslogger HsOpenSSL hspec hybrid-vectors kan-extensions lens-datetime linear mime-mail MissingH modular-arithmetic monad-loops netwire network-conduit pipes pipes-bytestring pipes-safe pipes-zlib pretty-show random-fu regex-tdfa regex-tdfa-rc regex-tdfa-text SafeSemaphore snap snap-blaze statistics statvfs temporary test-framework test-framework-hunit test-framework-th test-framework-quickcheck2 thyme tls trifecta tz tzdata unix-time utf8-string utility-ht vector-algorithms vector-th-unbox zip-archive X11 xtest zeromq4-haskell Hfuse direct-sqlite sqlite-simple gtk chart-gtk ncurses basic-prelude classy-prelude-conduit conduit-combinators conduit-extra double-conversion hamlet http-client http-client-tls http-conduit http-types path-pieces persistent persistent-template shakespeare shakespeare-css uuid xml-conduit yesod yesod-static zlib-conduit acid-state clock distributed-process multimap network-transport-tcp tasty tasty-hunit safecopy sodium unbounded-delays \\\n && : template-default needs jailbraking \\\n && cd /tmp \\\n && cabal unpack -d template-default template-default \\\n && cd /tmp/template-default/* \\\n && sed s/2.9/2.10/ -i template-default.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf template-default \\\n && : gloss needs some love and a big pile of jailbraking \\\n && cd /tmp \\\n && cabal unpack -d gloss-rendering gloss-rendering-1.9.2.1 \\\n && cd /tmp/gloss-rendering/* \\\n && sed -i 's/GLUT.*/GLUT,/' gloss-rendering.cabal \\\n && sed -i 's/OpenGL.*/OpenGL,/' gloss-rendering.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf gloss-rendering \\\n && cabal unpack -d gloss gloss-1.9.2.1 \\\n && cd /tmp/gloss/* \\\n && sed -i 's/GLUT.*==.*/GLUT,/' gloss.cabal \\\n && sed -i 's/OpenGL.*==.*/OpenGL,/' gloss.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf gloss \\\n && : deepseq-th jailbraking \\\n && cd /tmp \\\n && cabal unpack -d deepseq-th deepseq-th \\\n && cd /tmp/deepseq-th/* \\\n && sed -i 's/base.*,/base,/' deepseq-th.cabal \\\n && sed -i 's/2.9/2.10/' deepseq-th.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf deepseq-th \\\n && : \"bindings-posix fixes: musl has no POSIX2_{CHAR_TERM,LOCALEDEF}\" \\\n && cd /tmp \\\n && cabal unpack -d bindings-posix bindings-posix \\\n && cd /tmp/bindings-posix/* \\\n && sed -i 's/#num _POSIX2_CHAR_TERM//' src/Bindings/Posix/Unistd.hsc \\\n && sed -i 's/#num _POSIX2_LOCALEDEF//' src/Bindings/Posix/Unistd.hsc \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf bindings_posix \\\n && : \"hmatrix should use random in musl, not random_r, also openblas...\" \\\n && echo \"@testing http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk add openblas-dev@testing --update \\\n && cd /tmp \\\n && cabal unpack -d hmatrix hmatrix \\\n && cd /tmp/hmatrix/* \\\n && sed -i 's/def __APPLE__/ 1/' src/C/vector-aux.c \\\n && cabal install --global --only-dependencies \\\n && cabal install --global -f openblas \\\n && cd /tmp \\\n && rm -rf hmatrix\n#   TODO: network-protocol-xmpp supports libgsasl only, not cyrus-sasl-dev,\n#         either have to fix that or put a libgsasl-dev into Alpine\nCMD /bin/sh\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:latest\nCOPY get-last-layer.sh build.mk fix-execvpe-signature-ghc-7.8.4.patch /tmp/\nRUN : \"Layer 1: fully working basic GHC in /usr/local\" \\\n && mkdir /tmp/ghc \\\n && cd /tmp/ghc \\\n && apk add --update curl xz alpine-sdk perl gmp-dev file gmp openssh openssl zlib-dev strace vim less jq ncurses-dev bash autoconf \\\n && cd /tmp \\\n && wget https://nixos.org/releases/patchelf/patchelf-0.8/patchelf-0.8.tar.bz2 \\\n && tar xfj patchelf-0.8.tar.bz2 \\\n && cd patchelf-0.8 \\\n && ./configure \\\n && make install \\\n && cd .. \\\n && rm -rf patchelf* \\\n && sh /tmp/get-last-layer.sh nilcons/ghc-musl-auto ghc-cross > ghc-cross.tar.gz \\\n && tar xvfz ghc-cross.tar.gz \\\n && tar -xvJ -C / -f /tmp/ghc/ghc-7.8.4-x86_64-unknown-linux-musl.tar.xz \\\n && wget https://www.haskell.org/ghc/dist/7.8.4/ghc-7.8.4-src.tar.bz2 \\\n && tar xvfj ghc-7.8.4-src.tar.bz2 \\\n && cd /tmp/ghc/ghc-7.8.4 \\\n && cp -v /tmp/build.mk mk/build.mk \\\n && patch -p1 < /tmp/fix-execvpe-signature-ghc-7.8.4.patch \\\n && PATH=/opt/ghc-cross/bin:$PATH ./configure \\\n && : \"libffi has a bug, which we patch here\" \\\n && sed -i 's,chmod,sed -i s/__gnu_linux__/1/ libffi/build/src/closures.c \\&\\& chmod,' libffi/ghc.mk \\\n && make -j8 \\\n && make binary-dist \\\n && cd /tmp \\\n && mv ghc/ghc-7.8.4/ghc-7.8.4-x86_64-unknown-linux.tar.bz2 . \\\n && rm -rf ghc /opt/ghc-cross \\\n && : \\\n && : end of build, but we want to minimize docker layer sizes \\\n && : so we extract ghc here and delete the tarball \\\n && : \\\n && tar xvfj ghc-7.8.4-x86_64-unknown-linux.tar.bz2 \\\n && cd ghc-7.8.4 \\\n && ./configure \\\n && : musl ld requires --no-pie to work for some reason with ghc \\\n && sed -i '/C\\ compiler\\ link/{ s/\"\"/\"--no-pie\"/ }' settings \\\n && make install \\\n && cd /tmp \\\n && rm -rf ghc-7.8.4 ghc-7.8.4-x86_64-unknown-linux.tar.bz2\nENV PATH=\"/root/.cabal/bin:$PATH\"\nRUN : \"Layer 2: cabal-install, but only the binary, no executables\" \\\n && cd /tmp \\\n && wget https://hackage.haskell.org/package/cabal-install-1.22.4.0/cabal-install-1.22.4.0.tar.gz \\\n && tar xvfz cabal-install-1.22.4.0.tar.gz \\\n && cd cabal-install-1.22.4.0 \\\n && EXTRA_CONFIGURE_OPTS=--disable-library-profiling ./bootstrap.sh \\\n && cd / \\\n && rm -rf /root/.ghc /tmp/cabal-install-1.22.4.0* /tmp/cabal- /root/.cabal/lib /root/.cabal/share\nRUN : \"Layer 3: cabal-install from stackage and stackage is set up\" \\\n && cd /root/.cabal \\\n && cabal update \\\n && curl -sS 'https://www.stackage.org/lts-2.12/cabal.config?global=true' >> config \\\n && : Waiting for https://github.com/haskell/network/commit/6afe609308b90c1fd4b185978a15d44bc1dbd678 \\\n && : to hit Stackage LTS, until that we have a workaround, but this should be \"cabal install cabal-install\" \\\n && cabal install --global mtl network-uri parsec random stm text zlib \\\n && cabal unpack network-2.6.2.0 \\\n && cd network-2.6.2.0 \\\n && sed -i '/defined(AF_CAN)/ s/AF_CAN/NO_CAN_OF_WORMS/' Network/Socket/Types.hsc \\\n && cabal install --global \\\n && cd .. \\\n && rm -rf network-2.6.2.0 \\\n && cabal install --global cabal-install \\\n && cd / \\\n && : We regenerate the config with the stackage cabal, so that \\\n && : they are compatible. \\\n && rm -rf /root/.cabal \\\n && cabal update \\\n && cp /root/.cabal/config /root/.cabal/config.before-stackage \\\n && curl -sS 'https://www.stackage.org/lts-2.12/cabal.config?global=true' >> /root/.cabal/config\nRUN : \"Layer 4: install some packages\" \\\n && : the ncurses hackage package is a little bit broken \\\n && ln -s /usr/include /usr/include/ncursesw \\\n && apk add curl-dev openssl-dev zeromq-dev libx11-dev libxkbfile-dev libxfont-dev libxcb-dev libxv-dev libxt-dev libxdmcp-dev libxp-dev libxshmfence-dev libxft-dev libxxf86dga-dev libxtst-dev libxxf86misc-dev libxfixes-dev libxkbui-dev libxpm-dev libxcomposite-dev libxaw-dev libxau-dev libxinerama-dev libxkbcommon-dev libxmu-dev libxext-dev libxdamage-dev libxxf86vm-dev libxi-dev libxrandr-dev libxres-dev libxcursor-dev libxrender-dev libxvmc-dev fuse-dev mesa-dev glu-dev freeglut-dev gtk+2.0-dev \\\n && cabal install --global alex happy \\\n && cabal install --global c2hs \\\n && cabal install --global gtk2hs-buildtools \\\n && cabal install --global attoparsec fgl haskell-src haskell-src-exts haskell-src-meta hashable html HUnit parallel QuickCheck regex-base regex-compat regex-posix split syb unordered-containers vector primitive async bytedump unix-bytestring colour conduit criterion crypto-api cryptohash curl data-accessor-template data-default data-memocombinators digest elerea filemanip foldl Glob lens haskeline hflags hit hslogger HsOpenSSL hspec hybrid-vectors kan-extensions lens-datetime linear mime-mail MissingH modular-arithmetic monad-loops netwire network-conduit pipes pipes-bytestring pipes-safe pipes-zlib pretty-show random-fu regex-tdfa regex-tdfa-rc regex-tdfa-text SafeSemaphore snap snap-blaze statistics statvfs temporary test-framework test-framework-hunit test-framework-th test-framework-quickcheck2 thyme tls trifecta tz tzdata unix-time utf8-string utility-ht vector-algorithms vector-th-unbox zip-archive X11 xtest zeromq4-haskell Hfuse direct-sqlite sqlite-simple gtk chart-gtk ncurses basic-prelude classy-prelude-conduit conduit-combinators conduit-extra double-conversion hamlet http-client http-client-tls http-conduit http-types path-pieces persistent persistent-template shakespeare shakespeare-css uuid xml-conduit yesod yesod-static zlib-conduit acid-state clock distributed-process multimap network-transport-tcp tasty tasty-hunit safecopy sodium unbounded-delays \\\n && : template-default needs jailbraking \\\n && cd /tmp \\\n && cabal unpack -d template-default template-default \\\n && cd /tmp/template-default/* \\\n && sed s/2.9/2.10/ -i template-default.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf template-default \\\n && : gloss needs some love and a big pile of jailbraking \\\n && cd /tmp \\\n && cabal unpack -d gloss-rendering gloss-rendering-1.9.2.1 \\\n && cd /tmp/gloss-rendering/* \\\n && sed -i 's/GLUT.*/GLUT,/' gloss-rendering.cabal \\\n && sed -i 's/OpenGL.*/OpenGL,/' gloss-rendering.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf gloss-rendering \\\n && cabal unpack -d gloss gloss-1.9.2.1 \\\n && cd /tmp/gloss/* \\\n && sed -i 's/GLUT.*==.*/GLUT,/' gloss.cabal \\\n && sed -i 's/OpenGL.*==.*/OpenGL,/' gloss.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf gloss \\\n && : deepseq-th jailbraking \\\n && cd /tmp \\\n && cabal unpack -d deepseq-th deepseq-th \\\n && cd /tmp/deepseq-th/* \\\n && sed -i 's/base.*,/base,/' deepseq-th.cabal \\\n && sed -i 's/2.9/2.10/' deepseq-th.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf deepseq-th \\\n && : \"bindings-posix fixes: musl has no POSIX2_{CHAR_TERM,LOCALEDEF}\" \\\n && cd /tmp \\\n && cabal unpack -d bindings-posix bindings-posix \\\n && cd /tmp/bindings-posix/* \\\n && sed -i 's/#num _POSIX2_CHAR_TERM//' src/Bindings/Posix/Unistd.hsc \\\n && sed -i 's/#num _POSIX2_LOCALEDEF//' src/Bindings/Posix/Unistd.hsc \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf bindings_posix \\\n && : \"hmatrix should use random in musl, not random_r, also openblas...\" \\\n && echo \"@testing http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk add --update openblas-dev@testing \\\n && cd /tmp \\\n && cabal unpack -d hmatrix hmatrix \\\n && cd /tmp/hmatrix/* \\\n && sed -i 's/def __APPLE__/ 1/' src/C/vector-aux.c \\\n && cabal install --global --only-dependencies \\\n && cabal install --global -f openblas \\\n && cd /tmp \\\n && rm -rf hmatrix\n#  TODO: network-protocol-xmpp supports libgsasl only, not cyrus-sasl-dev,\n#        either have to fix that or put a libgsasl-dev into Alpine\nCMD /bin/sh\n","injectedSmells":[],"originalDockerfileHash":"716c9e932fb27154902a52d11b0063d4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:latest\nCOPY get-last-layer.sh build.mk fix-execvpe-signature-ghc-7.8.4.patch /tmp/\nRUN : \"Layer 1: fully working basic GHC in /usr/local\" \\\n && mkdir /tmp/ghc \\\n && cd /tmp/ghc \\\n && apk add --update curl xz alpine-sdk perl gmp-dev file gmp openssh openssl zlib-dev strace vim less jq ncurses-dev bash autoconf \\\n && cd /tmp \\\n && wget https://nixos.org/releases/patchelf/patchelf-0.8/patchelf-0.8.tar.bz2 \\\n && tar xfj patchelf-0.8.tar.bz2 \\\n && cd patchelf-0.8 \\\n && ./configure \\\n && make install \\\n && cd .. \\\n && rm -rf patchelf* \\\n && sh /tmp/get-last-layer.sh nilcons/ghc-musl-auto ghc-cross > ghc-cross.tar.gz \\\n && tar xvfz ghc-cross.tar.gz \\\n && tar -xvJ -C / -f /tmp/ghc/ghc-7.8.4-x86_64-unknown-linux-musl.tar.xz \\\n && wget https://www.haskell.org/ghc/dist/7.8.4/ghc-7.8.4-src.tar.bz2 \\\n && tar xvfj ghc-7.8.4-src.tar.bz2 \\\n && cd /tmp/ghc/ghc-7.8.4 \\\n && cp -v /tmp/build.mk mk/build.mk \\\n && patch -p1 < /tmp/fix-execvpe-signature-ghc-7.8.4.patch \\\n && PATH=/opt/ghc-cross/bin:$PATH ./configure \\\n && : \"libffi has a bug, which we patch here\" \\\n && sed -i 's,chmod,sed -i s/__gnu_linux__/1/ libffi/build/src/closures.c \\&\\& chmod,' libffi/ghc.mk \\\n && make -j8 \\\n && make binary-dist \\\n && cd /tmp \\\n && mv ghc/ghc-7.8.4/ghc-7.8.4-x86_64-unknown-linux.tar.bz2 . \\\n && rm -rf ghc /opt/ghc-cross \\\n && : \\\n && : end of build, but we want to minimize docker layer sizes \\\n && : so we extract ghc here and delete the tarball \\\n && : \\\n && tar xvfj ghc-7.8.4-x86_64-unknown-linux.tar.bz2 \\\n && cd ghc-7.8.4 \\\n && ./configure \\\n && : musl ld requires --no-pie to work for some reason with ghc \\\n && sed -i '/C\\ compiler\\ link/{ s/\"\"/\"--no-pie\"/ }' settings \\\n && make install \\\n && cd /tmp \\\n && rm -rf ghc-7.8.4 ghc-7.8.4-x86_64-unknown-linux.tar.bz2\nENV PATH=\"/root/.cabal/bin:$PATH\"\nRUN : \"Layer 2: cabal-install, but only the binary, no executables\" \\\n && cd /tmp \\\n && wget https://hackage.haskell.org/package/cabal-install-1.22.4.0/cabal-install-1.22.4.0.tar.gz \\\n && tar xvfz cabal-install-1.22.4.0.tar.gz \\\n && cd cabal-install-1.22.4.0 \\\n && EXTRA_CONFIGURE_OPTS=--disable-library-profiling ./bootstrap.sh \\\n && cd / \\\n && rm -rf /root/.ghc /tmp/cabal-install-1.22.4.0* /tmp/cabal- /root/.cabal/lib /root/.cabal/share\nRUN : \"Layer 3: cabal-install from stackage and stackage is set up\" \\\n && cd /root/.cabal \\\n && cabal update \\\n && curl -sS 'https://www.stackage.org/lts-2.12/cabal.config?global=true' >> config \\\n && : Waiting for https://github.com/haskell/network/commit/6afe609308b90c1fd4b185978a15d44bc1dbd678 \\\n && : to hit Stackage LTS, until that we have a workaround, but this should be \"cabal install cabal-install\" \\\n && cabal install --global mtl network-uri parsec random stm text zlib \\\n && cabal unpack network-2.6.2.0 \\\n && cd network-2.6.2.0 \\\n && sed -i '/defined(AF_CAN)/ s/AF_CAN/NO_CAN_OF_WORMS/' Network/Socket/Types.hsc \\\n && cabal install --global \\\n && cd .. \\\n && rm -rf network-2.6.2.0 \\\n && cabal install --global cabal-install \\\n && cd / \\\n && : We regenerate the config with the stackage cabal, so that \\\n && : they are compatible. \\\n && rm -rf /root/.cabal \\\n && cabal update \\\n && cp /root/.cabal/config /root/.cabal/config.before-stackage \\\n && curl -sS 'https://www.stackage.org/lts-2.12/cabal.config?global=true' >> /root/.cabal/config\nRUN : \"Layer 4: install some packages\" \\\n && : the ncurses hackage package is a little bit broken \\\n && ln -s /usr/include /usr/include/ncursesw \\\n && apk add curl-dev openssl-dev zeromq-dev libx11-dev libxkbfile-dev libxfont-dev libxcb-dev libxv-dev libxt-dev libxdmcp-dev libxp-dev libxshmfence-dev libxft-dev libxxf86dga-dev libxtst-dev libxxf86misc-dev libxfixes-dev libxkbui-dev libxpm-dev libxcomposite-dev libxaw-dev libxau-dev libxinerama-dev libxkbcommon-dev libxmu-dev libxext-dev libxdamage-dev libxxf86vm-dev libxi-dev libxrandr-dev libxres-dev libxcursor-dev libxrender-dev libxvmc-dev fuse-dev mesa-dev glu-dev freeglut-dev gtk+2.0-dev \\\n && cabal install --global alex happy \\\n && cabal install --global c2hs \\\n && cabal install --global gtk2hs-buildtools \\\n && cabal install --global attoparsec fgl haskell-src haskell-src-exts haskell-src-meta hashable html HUnit parallel QuickCheck regex-base regex-compat regex-posix split syb unordered-containers vector primitive async bytedump unix-bytestring colour conduit criterion crypto-api cryptohash curl data-accessor-template data-default data-memocombinators digest elerea filemanip foldl Glob lens haskeline hflags hit hslogger HsOpenSSL hspec hybrid-vectors kan-extensions lens-datetime linear mime-mail MissingH modular-arithmetic monad-loops netwire network-conduit pipes pipes-bytestring pipes-safe pipes-zlib pretty-show random-fu regex-tdfa regex-tdfa-rc regex-tdfa-text SafeSemaphore snap snap-blaze statistics statvfs temporary test-framework test-framework-hunit test-framework-th test-framework-quickcheck2 thyme tls trifecta tz tzdata unix-time utf8-string utility-ht vector-algorithms vector-th-unbox zip-archive X11 xtest zeromq4-haskell Hfuse direct-sqlite sqlite-simple gtk chart-gtk ncurses basic-prelude classy-prelude-conduit conduit-combinators conduit-extra double-conversion hamlet http-client http-client-tls http-conduit http-types path-pieces persistent persistent-template shakespeare shakespeare-css uuid xml-conduit yesod yesod-static zlib-conduit acid-state clock distributed-process multimap network-transport-tcp tasty tasty-hunit safecopy sodium unbounded-delays \\\n && : template-default needs jailbraking \\\n && cd /tmp \\\n && cabal unpack -d template-default template-default \\\n && cd /tmp/template-default/* \\\n && sed s/2.9/2.10/ -i template-default.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf template-default \\\n && : gloss needs some love and a big pile of jailbraking \\\n && cd /tmp \\\n && cabal unpack -d gloss-rendering gloss-rendering-1.9.2.1 \\\n && cd /tmp/gloss-rendering/* \\\n && sed -i 's/GLUT.*/GLUT,/' gloss-rendering.cabal \\\n && sed -i 's/OpenGL.*/OpenGL,/' gloss-rendering.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf gloss-rendering \\\n && cabal unpack -d gloss gloss-1.9.2.1 \\\n && cd /tmp/gloss/* \\\n && sed -i 's/GLUT.*==.*/GLUT,/' gloss.cabal \\\n && sed -i 's/OpenGL.*==.*/OpenGL,/' gloss.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf gloss \\\n && : deepseq-th jailbraking \\\n && cd /tmp \\\n && cabal unpack -d deepseq-th deepseq-th \\\n && cd /tmp/deepseq-th/* \\\n && sed -i 's/base.*,/base,/' deepseq-th.cabal \\\n && sed -i 's/2.9/2.10/' deepseq-th.cabal \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf deepseq-th \\\n && : \"bindings-posix fixes: musl has no POSIX2_{CHAR_TERM,LOCALEDEF}\" \\\n && cd /tmp \\\n && cabal unpack -d bindings-posix bindings-posix \\\n && cd /tmp/bindings-posix/* \\\n && sed -i 's/#num _POSIX2_CHAR_TERM//' src/Bindings/Posix/Unistd.hsc \\\n && sed -i 's/#num _POSIX2_LOCALEDEF//' src/Bindings/Posix/Unistd.hsc \\\n && cabal install --global --only-dependencies \\\n && cabal install --global \\\n && cd /tmp \\\n && rm -rf bindings_posix \\\n && : \"hmatrix should use random in musl, not random_r, also openblas...\" \\\n && echo \"@testing http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk add --update openblas-dev@testing \\\n && cd /tmp \\\n && cabal unpack -d hmatrix hmatrix \\\n && cd /tmp/hmatrix/* \\\n && sed -i 's/def __APPLE__/ 1/' src/C/vector-aux.c \\\n && cabal install --global --only-dependencies \\\n && cabal install --global -f openblas \\\n && cd /tmp \\\n && rm -rf hmatrix\n#   TODO: network-protocol-xmpp supports libgsasl only, not cyrus-sasl-dev,\n#         either have to fix that or put a libgsasl-dev into Alpine\nCMD /bin/sh\n","originalDockerfileUglifiedHash":"50f661f07d4bc294cf69f09aba943610","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e7499f38a3cae79dcef27bb28c9951e1febf53ab.dockerfile"}