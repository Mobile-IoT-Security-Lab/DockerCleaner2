{"seed":353676229,"processedDockerfileHash":"1fa0bd33039e5f1e1a1f3d2fd40bcbb5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for KiiConf\n#   Jacob Alexander 2017\n#   Ubuntu 16.04 LTS (xenial) base\nFROM ubuntu:xenial\nLABEL maintainer=\"haata@kiibohd.com\" \\\n      version=\"0.1\" \\\n      description=\"Docker Environment for Kiibohd KiiConf Web Configurator\"\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends binutils-arm-none-eabi=2.26-4ubuntu1+8 bsdmainutils=9.0.6ubuntu3 cmake=3.5.1-1ubuntu3 ctags dfu-util=0.8-1 gcc-arm-none-eabi=15:4.9.3+svn231177-1 git=1:2.7.4-0ubuntu1.10 libnewlib-arm-none-eabi=2.2.0+git20150830.5a3d536-1 libusb-1.0-0-dev=2:1.0.20-1 lighttpd=1.4.35-4ubuntu2.1 ninja-build=1.5.1-0.1ubuntu1 nodejs=4.2.6~dfsg-1ubuntu4.2 npm=3.5.2-0ubuntu4 php-cgi=1:7.0+35ubuntu6.1 python3=3.5.1-3 python3-pil=3.1.2-0ubuntu1.6 tmux=2.1-3build1 -qy \\\n && rm -rf /var/lib/apt/lists/*\n#   Add this git repo\nCOPY . /KiiConf\nWORKDIR /KiiConf\n#   Clone git repos for controller build\nARG URL\nARG BRANCH\nARG REV\nARG KLL_URL\nARG KLL_BRANCH\nARG KLL_REV\nRUN cd /KiiConf \\\n && tools/update_controller.bash\n#   Prepare tmp directory\nRUN mkdir -p /KiiConf/tmp \\\n && chmod 777 /KiiConf/tmp\n#   Prepare lighttpd\n#   Defaults to test_lighttpd.conf\nRUN mkdir -p /var/run/lighttpd \\\n && chown www-data:www-data /var/run/lighttpd\nRUN touch /var/run/lighttpd.pid \\\n && chown www-data:www-data /var/run/lighttpd.pid\nARG lighttpd_conf=test_lighttpd.conf\nCOPY ${lighttpd_conf} /etc/lighttpd/lighttpd.conf\nEXPOSE 80/tcp 443/tcp\n#   Default command, starting lighttpd\nCMD /usr/sbin/lighttpd -D -f /etc/lighttpd/lighttpd.conf\n#   NOTE: Test user is uid:gid 33:33 (typically http/www-data on Ubuntu and Arch Linux)\n#   1. Build the image after the initial cloning of this repo\n#     docker build -t kiiconf . # notice the dot at the end\n#   You can control controller.git and kll.git using the following docker build flags\n#    --build-arg BRANCH=old --build-arg REV=HEAD\n#    - URL        - controller.git url\n#    - BRANCH     - controller.git branch\n#    - REV        - controller.git revision\n#    - KLL_URL    - kll.git url\n#    - KLL_BRANCH - kll.git branch\n#    - KLL_REV    - kll.git revision\n#   2. Quick test generating a container from the image and running a command\n#     docker run -t -u 33:33 --rm kiiconf cgi-bin/build_layout.bash c3184563548ed992bfd3574a238d3289 MD1\n#    OR\n#     docker run -t -u 33:33 --rm kiiconf tests/build_test.bash\n#    OR (if you want to be lazy and test)\n#     tests/docker_test.bash\n#\n#   Change the MD1 for other build targets in cgi-bin/build_layout.bash\n#   For example:\n#    - MD1\n#    - MD1.1\n#    - MDErgo1\n#    - WhiteFox\n#    - KType\n#   3. Run the a container in interactive mode\n#    docker run -it -u 33:33 --rm kiiconf bash\n#   Run a command manually, like:\n#    cgi-bin/build_layout.bash c3184563548ed992bfd3574a238d3289 MD1\n#   NOTE: --rm means the container contents will disappear after the container exits\n#   4. Run all of KiiConf, using lighttpd inside the docker container\n#    docker run kiiconf\n#   OR (to use localhost instead)\n#    docker run -p 127.0.0.1:80:80 kiiconf\n#   5. Run all of KiiConf, using lighttpd inside docker container, and detach to the background\n#    docker run -d kiiconf\n#   OR (to use localhost instead)\n#    docker run -p 127.0.0.1:80:80 -d kiiconf\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for KiiConf\n#  Jacob Alexander 2017\n#  Ubuntu 16.04 LTS (xenial) base\nFROM ubuntu:xenial\nLABEL maintainer=\"haata@kiibohd.com\" \\\n      version=\"0.1\" \\\n      description=\"Docker Environment for Kiibohd KiiConf Web Configurator\"\n#  Install dependencies\nRUN apt-get update \\\n && apt-get install binutils-arm-none-eabi bsdmainutils cmake ctags dfu-util gcc-arm-none-eabi git libnewlib-arm-none-eabi libusb-1.0-0-dev lighttpd ninja-build nodejs npm php-cgi python3 python3-pil tmux -qy \\\n && rm -rf /var/lib/apt/lists/*\n#  Add this git repo\nADD . /KiiConf\nWORKDIR /KiiConf\n#  Clone git repos for controller build\nARG URL\nARG BRANCH\nARG REV\nARG KLL_URL\nARG KLL_BRANCH\nARG KLL_REV\nRUN cd /KiiConf \\\n && tools/update_controller.bash\n#  Prepare tmp directory\nRUN mkdir -p /KiiConf/tmp \\\n && chmod 777 /KiiConf/tmp\n#  Prepare lighttpd\n#  Defaults to test_lighttpd.conf\nRUN mkdir -p /var/run/lighttpd \\\n && chown www-data:www-data /var/run/lighttpd\nRUN touch /var/run/lighttpd.pid \\\n && chown www-data:www-data /var/run/lighttpd.pid\nARG lighttpd_conf=test_lighttpd.conf\nADD ${lighttpd_conf} /etc/lighttpd/lighttpd.conf\nEXPOSE 80/tcp 443/tcp\n#  Default command, starting lighttpd\nCMD /usr/sbin/lighttpd -D -f /etc/lighttpd/lighttpd.conf\n#  NOTE: Test user is uid:gid 33:33 (typically http/www-data on Ubuntu and Arch Linux)\n#  1. Build the image after the initial cloning of this repo\n#    docker build -t kiiconf . # notice the dot at the end\n#  You can control controller.git and kll.git using the following docker build flags\n#   --build-arg BRANCH=old --build-arg REV=HEAD\n#   - URL        - controller.git url\n#   - BRANCH     - controller.git branch\n#   - REV        - controller.git revision\n#   - KLL_URL    - kll.git url\n#   - KLL_BRANCH - kll.git branch\n#   - KLL_REV    - kll.git revision\n#  2. Quick test generating a container from the image and running a command\n#    docker run -t -u 33:33 --rm kiiconf cgi-bin/build_layout.bash c3184563548ed992bfd3574a238d3289 MD1\n#   OR\n#    docker run -t -u 33:33 --rm kiiconf tests/build_test.bash\n#   OR (if you want to be lazy and test)\n#    tests/docker_test.bash\n#\n#  Change the MD1 for other build targets in cgi-bin/build_layout.bash\n#  For example:\n#   - MD1\n#   - MD1.1\n#   - MDErgo1\n#   - WhiteFox\n#   - KType\n#  3. Run the a container in interactive mode\n#   docker run -it -u 33:33 --rm kiiconf bash\n#  Run a command manually, like:\n#   cgi-bin/build_layout.bash c3184563548ed992bfd3574a238d3289 MD1\n#  NOTE: --rm means the container contents will disappear after the container exits\n#  4. Run all of KiiConf, using lighttpd inside the docker container\n#   docker run kiiconf\n#  OR (to use localhost instead)\n#   docker run -p 127.0.0.1:80:80 kiiconf\n#  5. Run all of KiiConf, using lighttpd inside docker container, and detach to the background\n#   docker run -d kiiconf\n#  OR (to use localhost instead)\n#   docker run -p 127.0.0.1:80:80 -d kiiconf\n","injectedSmells":[],"originalDockerfileHash":"b5ca80618e7b0b8509d1bcb91514abc5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for KiiConf\n#   Jacob Alexander 2017\n#   Ubuntu 16.04 LTS (xenial) base\nFROM ubuntu:xenial\nLABEL maintainer=\"haata@kiibohd.com\" \\\n      version=\"0.1\" \\\n      description=\"Docker Environment for Kiibohd KiiConf Web Configurator\"\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install binutils-arm-none-eabi bsdmainutils cmake ctags dfu-util gcc-arm-none-eabi git libnewlib-arm-none-eabi libusb-1.0-0-dev lighttpd ninja-build nodejs npm php-cgi python3 python3-pil tmux -qy \\\n && rm -rf /var/lib/apt/lists/*\n#   Add this git repo\nADD . /KiiConf\nWORKDIR /KiiConf\n#   Clone git repos for controller build\nARG URL\nARG BRANCH\nARG REV\nARG KLL_URL\nARG KLL_BRANCH\nARG KLL_REV\nRUN cd /KiiConf \\\n && tools/update_controller.bash\n#   Prepare tmp directory\nRUN mkdir -p /KiiConf/tmp \\\n && chmod 777 /KiiConf/tmp\n#   Prepare lighttpd\n#   Defaults to test_lighttpd.conf\nRUN mkdir -p /var/run/lighttpd \\\n && chown www-data:www-data /var/run/lighttpd\nRUN touch /var/run/lighttpd.pid \\\n && chown www-data:www-data /var/run/lighttpd.pid\nARG lighttpd_conf=test_lighttpd.conf\nADD ${lighttpd_conf} /etc/lighttpd/lighttpd.conf\nEXPOSE 80/tcp 443/tcp\n#   Default command, starting lighttpd\nCMD /usr/sbin/lighttpd -D -f /etc/lighttpd/lighttpd.conf\n#   NOTE: Test user is uid:gid 33:33 (typically http/www-data on Ubuntu and Arch Linux)\n#   1. Build the image after the initial cloning of this repo\n#     docker build -t kiiconf . # notice the dot at the end\n#   You can control controller.git and kll.git using the following docker build flags\n#    --build-arg BRANCH=old --build-arg REV=HEAD\n#    - URL        - controller.git url\n#    - BRANCH     - controller.git branch\n#    - REV        - controller.git revision\n#    - KLL_URL    - kll.git url\n#    - KLL_BRANCH - kll.git branch\n#    - KLL_REV    - kll.git revision\n#   2. Quick test generating a container from the image and running a command\n#     docker run -t -u 33:33 --rm kiiconf cgi-bin/build_layout.bash c3184563548ed992bfd3574a238d3289 MD1\n#    OR\n#     docker run -t -u 33:33 --rm kiiconf tests/build_test.bash\n#    OR (if you want to be lazy and test)\n#     tests/docker_test.bash\n#\n#   Change the MD1 for other build targets in cgi-bin/build_layout.bash\n#   For example:\n#    - MD1\n#    - MD1.1\n#    - MDErgo1\n#    - WhiteFox\n#    - KType\n#   3. Run the a container in interactive mode\n#    docker run -it -u 33:33 --rm kiiconf bash\n#   Run a command manually, like:\n#    cgi-bin/build_layout.bash c3184563548ed992bfd3574a238d3289 MD1\n#   NOTE: --rm means the container contents will disappear after the container exits\n#   4. Run all of KiiConf, using lighttpd inside the docker container\n#    docker run kiiconf\n#   OR (to use localhost instead)\n#    docker run -p 127.0.0.1:80:80 kiiconf\n#   5. Run all of KiiConf, using lighttpd inside docker container, and detach to the background\n#    docker run -d kiiconf\n#   OR (to use localhost instead)\n#    docker run -p 127.0.0.1:80:80 -d kiiconf\n","originalDockerfileUglifiedHash":"8f2afdc8751fce1aa163f1f2ac8b039b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bcf7a486765377b82f43fadbfa6c65701ead4e0f.dockerfile"}