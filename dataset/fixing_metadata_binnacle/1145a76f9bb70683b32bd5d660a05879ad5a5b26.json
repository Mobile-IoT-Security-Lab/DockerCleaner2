{"seed":1248898530,"processedDockerfileHash":"e88c51dd432075a185b2f6d9c078a12b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nutshells/base\nLABEL maintainer=\"Chao QU <mail@quchao.com>\"\nARG SS_VERSION='3.2.0'\nARG SS_SHA256='5521cf623a07fd1e393528516a83acd2b66c5d4bb4535a52662806a6a060c606'\nARG OBFS_VERSION='0.0.5'\nARG OBFS_SHA256='0de9b551b67ec82d0af9d09bcb74c9e8d047f0082ae07db8e4f5f3defeb2ce4c'\nARG LIBCORK_COMMIT='9a1917d'\nARG LIBCORK_SHA256='2193830fc67d946e89701d04d557e4b29bcb956f5cedfb90b727e23326045e78'\nENV WITH_OBFS=\"true\"\nWORKDIR /usr/local/src/\nRUN set -ex ; apk add build-base=0.5-r3 linux-headers=5.19.5-r0 autoconf=2.71-r1 automake=1.16.5-r1 libtool=2.4.7-r1 pcre-dev=8.45-r2 mbedtls-dev=2.28.3-r0 libsodium-dev=1.0.18-r2 c-ares-dev=1.18.1-r1 libev-dev=4.33-r0 --no-cache --virtual .build-deps ; apk add pcre=8.45-r2 mbedtls=2.28.3-r0 libsodium=1.0.18-r2 c-ares=1.18.1-r1 libev=4.33-r0 --no-cache --virtual .runtime-deps ; curl -sSLO \"https://github.com/shadowsocks/shadowsocks-libev/releases/download/v${SS_VERSION}/shadowsocks-libev-${SS_VERSION}.tar.gz\" ; echo \"${SS_SHA256} shadowsocks-libev-${SS_VERSION}.tar.gz\" | sha256sum -c - ; tar xzf \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; cd \"shadowsocks-libev-${SS_VERSION}\" ; ./configure --disable-documentation ; make ; cp src/ss-server src/ss-local /usr/local/bin/ ; cd .. ; rm -f \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; rm -rf \"shadowsocks-libev-${SS_VERSION}\" ; if [ \"${WITH_OBFS}\" = 'true' ] ; then curl -sSLO \"https://github.com/shadowsocks/simple-obfs/archive/v${OBFS_VERSION}.tar.gz\" ;echo \"${OBFS_SHA256} v${OBFS_VERSION}.tar.gz\" | sha256sum -c - ;tar xzf \"v${OBFS_VERSION}.tar.gz\" ;cd \"simple-obfs-${OBFS_VERSION}\" ;rm -rf libcork ;curl -sSLO \"https://github.com/shadowsocks/libcork/archive/${LIBCORK_COMMIT}.tar.gz\" ;echo \"${LIBCORK_SHA256} ${LIBCORK_COMMIT}.tar.gz\" | sha256sum -c - ;tar xzf \"${LIBCORK_COMMIT}.tar.gz\" ;mv libcork-* libcork ;./autogen.sh ;./configure --disable-documentation ;make ;cp src/obfs-server src/obfs-local /usr/local/bin/ ;cd .. ;rm -f \"simple-obfs-${OBFS_VERSION}.tar.gz\" ;rm -rf \"simple-obfs-${OBFS_VERSION}\" ; fi ; apk del --purge .build-deps ; rm -rf /tmp/* /var/tmp/* /var/cache/apk/* /usr/local/src/*\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN set -ex ; chmod +x /usr/local/bin/docker-entrypoint.sh ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/ss-* ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/obfs-*\nENV LISTEN_PORT=\"12345\" \\\n    SERVER_ADDRESS=\"\" \\\n    SERVER_PORT=\"\" \\\n    PASSWORD=\"\" \\\n    KEY_IN_BASE64=\"\" \\\n    ENCRYPT_METHOD=\"xchacha20-ietf-poly1305\" \\\n    TCP_RELAY=\"true\" \\\n    UDP_RELAY=\"true\" \\\n    REUSE_PORT=\"true\" \\\n    TCP_FAST_OPEN=\"true\" \\\n    OBFS_PLUGIN=\"http\" \\\n    OBFS_HOST=\"bing.com\"\n#  HEALTHCHECK --interval=1m --timeout=3s \\\n#      CMD [[ \"$(curl -f http://localhost:\"${LISTEN_PORT}\" 2>&1 | grep 'curl: (52)' | wc -l)\" -eq 1 ]] || exit 1\nEXPOSE ${LISTEN_PORT}/tcp ${LISTEN_PORT}/udp\nWORKDIR /usr/local/var/ss-obfs\nENTRYPOINT [\"docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nutshells/base\nLABEL maintainer=\"Chao QU <mail@quchao.com>\"\nARG SS_VERSION='3.2.0'\nARG SS_SHA256='5521cf623a07fd1e393528516a83acd2b66c5d4bb4535a52662806a6a060c606'\nARG OBFS_VERSION='0.0.5'\nARG OBFS_SHA256='0de9b551b67ec82d0af9d09bcb74c9e8d047f0082ae07db8e4f5f3defeb2ce4c'\nARG LIBCORK_COMMIT='9a1917d'\nARG LIBCORK_SHA256='2193830fc67d946e89701d04d557e4b29bcb956f5cedfb90b727e23326045e78'\nENV WITH_OBFS=\"true\"\nWORKDIR /usr/local/src/\nRUN set -ex ; apk add --no-cache --virtual .build-deps build-base linux-headers autoconf automake libtool pcre-dev mbedtls-dev libsodium-dev c-ares-dev libev-dev ; apk add --no-cache --virtual .runtime-deps pcre mbedtls libsodium c-ares libev ; curl -sSLO \"https://github.com/shadowsocks/shadowsocks-libev/releases/download/v${SS_VERSION}/shadowsocks-libev-${SS_VERSION}.tar.gz\" ; echo \"${SS_SHA256} shadowsocks-libev-${SS_VERSION}.tar.gz\" | sha256sum -c - ; tar xzf \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; cd \"shadowsocks-libev-${SS_VERSION}\" ; ./configure --disable-documentation ; make ; cp src/ss-server src/ss-local /usr/local/bin/ ; cd .. ; rm -f \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; rm -rf \"shadowsocks-libev-${SS_VERSION}\" ; if [ \"${WITH_OBFS}\" = 'true' ] ; then curl -sSLO \"https://github.com/shadowsocks/simple-obfs/archive/v${OBFS_VERSION}.tar.gz\" ;echo \"${OBFS_SHA256} v${OBFS_VERSION}.tar.gz\" | sha256sum -c - ;tar xzf \"v${OBFS_VERSION}.tar.gz\" ;cd \"simple-obfs-${OBFS_VERSION}\" ;rm -rf libcork ;curl -sSLO \"https://github.com/shadowsocks/libcork/archive/${LIBCORK_COMMIT}.tar.gz\" ;echo \"${LIBCORK_SHA256} ${LIBCORK_COMMIT}.tar.gz\" | sha256sum -c - ;tar xzf \"${LIBCORK_COMMIT}.tar.gz\" ;mv libcork-* libcork ;./autogen.sh ;./configure --disable-documentation ;make ;cp src/obfs-server src/obfs-local /usr/local/bin/ ;cd .. ;rm -f \"simple-obfs-${OBFS_VERSION}.tar.gz\" ;rm -rf \"simple-obfs-${OBFS_VERSION}\" ; fi ; apk del --purge .build-deps ; rm -rf /tmp/* /var/tmp/* /var/cache/apk/* /usr/local/src/*\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN set -ex ; chmod +x /usr/local/bin/docker-entrypoint.sh ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/ss-* ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/obfs-*\nENV LISTEN_PORT=\"12345\" \\\n    SERVER_ADDRESS=\"\" \\\n    SERVER_PORT=\"\" \\\n    PASSWORD=\"\" \\\n    KEY_IN_BASE64=\"\" \\\n    ENCRYPT_METHOD=\"xchacha20-ietf-poly1305\" \\\n    TCP_RELAY=\"true\" \\\n    UDP_RELAY=\"true\" \\\n    REUSE_PORT=\"true\" \\\n    TCP_FAST_OPEN=\"true\" \\\n    OBFS_PLUGIN=\"http\" \\\n    OBFS_HOST=\"bing.com\"\n# HEALTHCHECK --interval=1m --timeout=3s \\\n#     CMD [[ \"$(curl -f http://localhost:\"${LISTEN_PORT}\" 2>&1 | grep 'curl: (52)' | wc -l)\" -eq 1 ]] || exit 1\nEXPOSE ${LISTEN_PORT}/tcp ${LISTEN_PORT}/udp\nWORKDIR /usr/local/var/ss-obfs\nENTRYPOINT [\"docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"4339b048a0581759dcc0a3244a70ade2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nutshells/base\nLABEL maintainer=\"Chao QU <mail@quchao.com>\"\nARG SS_VERSION='3.2.0'\nARG SS_SHA256='5521cf623a07fd1e393528516a83acd2b66c5d4bb4535a52662806a6a060c606'\nARG OBFS_VERSION='0.0.5'\nARG OBFS_SHA256='0de9b551b67ec82d0af9d09bcb74c9e8d047f0082ae07db8e4f5f3defeb2ce4c'\nARG LIBCORK_COMMIT='9a1917d'\nARG LIBCORK_SHA256='2193830fc67d946e89701d04d557e4b29bcb956f5cedfb90b727e23326045e78'\nENV WITH_OBFS=\"true\"\nWORKDIR /usr/local/src/\nRUN set -ex ; apk add --no-cache --virtual .build-deps build-base linux-headers autoconf automake libtool pcre-dev mbedtls-dev libsodium-dev c-ares-dev libev-dev ; apk add --no-cache --virtual .runtime-deps pcre mbedtls libsodium c-ares libev ; curl -sSLO \"https://github.com/shadowsocks/shadowsocks-libev/releases/download/v${SS_VERSION}/shadowsocks-libev-${SS_VERSION}.tar.gz\" ; echo \"${SS_SHA256} shadowsocks-libev-${SS_VERSION}.tar.gz\" | sha256sum -c - ; tar xzf \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; cd \"shadowsocks-libev-${SS_VERSION}\" ; ./configure --disable-documentation ; make ; cp src/ss-server src/ss-local /usr/local/bin/ ; cd .. ; rm -f \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; rm -rf \"shadowsocks-libev-${SS_VERSION}\" ; if [ \"${WITH_OBFS}\" = 'true' ] ; then curl -sSLO \"https://github.com/shadowsocks/simple-obfs/archive/v${OBFS_VERSION}.tar.gz\" ;echo \"${OBFS_SHA256} v${OBFS_VERSION}.tar.gz\" | sha256sum -c - ;tar xzf \"v${OBFS_VERSION}.tar.gz\" ;cd \"simple-obfs-${OBFS_VERSION}\" ;rm -rf libcork ;curl -sSLO \"https://github.com/shadowsocks/libcork/archive/${LIBCORK_COMMIT}.tar.gz\" ;echo \"${LIBCORK_SHA256} ${LIBCORK_COMMIT}.tar.gz\" | sha256sum -c - ;tar xzf \"${LIBCORK_COMMIT}.tar.gz\" ;mv libcork-* libcork ;./autogen.sh ;./configure --disable-documentation ;make ;cp src/obfs-server src/obfs-local /usr/local/bin/ ;cd .. ;rm -f \"simple-obfs-${OBFS_VERSION}.tar.gz\" ;rm -rf \"simple-obfs-${OBFS_VERSION}\" ; fi ; apk del --purge .build-deps ; rm -rf /tmp/* /var/tmp/* /var/cache/apk/* /usr/local/src/*\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN set -ex ; chmod +x /usr/local/bin/docker-entrypoint.sh ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/ss-* ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/obfs-*\nENV LISTEN_PORT=\"12345\" \\\n    SERVER_ADDRESS=\"\" \\\n    SERVER_PORT=\"\" \\\n    PASSWORD=\"\" \\\n    KEY_IN_BASE64=\"\" \\\n    ENCRYPT_METHOD=\"xchacha20-ietf-poly1305\" \\\n    TCP_RELAY=\"true\" \\\n    UDP_RELAY=\"true\" \\\n    REUSE_PORT=\"true\" \\\n    TCP_FAST_OPEN=\"true\" \\\n    OBFS_PLUGIN=\"http\" \\\n    OBFS_HOST=\"bing.com\"\n#  HEALTHCHECK --interval=1m --timeout=3s \\\n#      CMD [[ \"$(curl -f http://localhost:\"${LISTEN_PORT}\" 2>&1 | grep 'curl: (52)' | wc -l)\" -eq 1 ]] || exit 1\nEXPOSE ${LISTEN_PORT}/tcp ${LISTEN_PORT}/udp\nWORKDIR /usr/local/var/ss-obfs\nENTRYPOINT [\"docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"5c72c4e7df8329d129cc8534541b53d7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1145a76f9bb70683b32bd5d660a05879ad5a5b26.dockerfile"}