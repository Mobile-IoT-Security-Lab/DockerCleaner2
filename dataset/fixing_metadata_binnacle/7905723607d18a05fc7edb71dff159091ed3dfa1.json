{"seed":3303644710,"processedDockerfileHash":"a02b50831a6c0c39e71b2c1a5269c84c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied.  See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\nFROM centos:6\nMAINTAINER Richard Guo <riguo@pivotal.io>\n#   install all software we need\nRUN yum install -y epel-release \\\n && yum makecache \\\n && yum install -y man passwd sudo tar which git mlocate links make bzip2 autoconf automake libtool m4 gcc gcc-c++ gdb flex cmake gperf indent libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel perl-ExtUtils-Embed pam-devel python-devel snappy-devel libyaml-devel libevent-devel bzip2-devel openssl-devel openldap-devel readline-devel net-snmp-devel apr-devel libesmtp-devel xerces-c-devel python-pip json-c-devel apache-ivy java-1.7.0-openjdk-devel wget openssh-clients openssh-server perl-JSON \\\n && yum clean all\n#   update gcc\nRUN wget -O /etc/yum.repos.d/slc6-devtoolset.repo http://linuxsoft.cern.ch/cern/devtoolset/slc6-devtoolset.repo \\\n && rpm --import http://linuxsoft.cern.ch/cern/slc68/x86_64/RPM-GPG-KEY-cern \\\n && yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ \\\n && echo \"source /opt/rh/devtoolset-2/enable\" >> ~/.bashrc \\\n && source ~/.bashrc\n#   install libcurl 7.45.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"http://curl.haxx.se/download/curl-7.45.0.tar.bz2\" -o curl-7.45.0.tar.bz2 \\\n && tar -xjf curl-7.45.0.tar.bz2 \\\n && cd curl-7.45.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build \\\n && ldconfig\n#   install maven\nRUN curl -L \"http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo\" -o /etc/yum.repos.d/epel-apache-maven.repo \\\n && yum install -y apache-maven \\\n && yum clean all\n#   OS requirements\nRUN echo \"kernel.sem = 250 512000 100 2048\" >> /etc/sysctl.conf\n#   setup ssh server and keys for root\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\n#   setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh \\\n && echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh \\\n && chmod a+x /etc/profile.d/java.sh\n#   install boost 1.59\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\" -o boost_1_59_0.tar.bz2 \\\n && tar -xjf boost_1_59_0.tar.bz2 \\\n && cd boost_1_59_0 \\\n && ./bootstrap.sh \\\n && ./b2 --prefix=/usr -q \\\n && ./b2 --prefix=/usr -q install \\\n && rm -rf /tmp/build\n#   install bison 2.5.1\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"ftp://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz\" -o bison-2.5.1.tar.gz \\\n && tar -xzf bison-2.5.1.tar.gz \\\n && cd bison-2.5.1 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#   install thrift 0.9.1\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"https://archive.apache.org/dist/thrift/0.9.1/thrift-0.9.1.tar.gz\" -o thrift-0.9.1.tar.gz \\\n && tar -xf thrift-0.9.1.tar.gz \\\n && cd thrift-0.9.1 \\\n && ./configure --prefix=/usr --without-tests \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#   install protobuf 2.5.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2\" -o protobuf-2.5.0.tar.bz2 \\\n && tar -xjf protobuf-2.5.0.tar.bz2 \\\n && cd protobuf-2.5.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#   install python module \nRUN pip install pycrypto==2.6.1 --retries=50 --timeout=300\n#   create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin \\\n && useradd -u 1000 -g 1000 gpadmin \\\n && echo \"gpadmin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\n#   sudo should not require tty\nRUN sed -i -e 's|Defaults requiretty|#Defaults requiretty|' /etc/sudoers\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh \\\n && echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh \\\n && chmod a+x /etc/profile.d/user.sh\nENV BASEDIR=\"/data\"\nRUN mkdir -p /data \\\n && chmod 777 /data\nUSER gpadmin\n#   setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\nWORKDIR /data\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing,\n#  software distributed under the License is distributed on an\n#  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied.  See the License for the\n#  specific language governing permissions and limitations\n#  under the License.\nFROM centos:6\nMAINTAINER Richard Guo <riguo@pivotal.io>\n#  install all software we need\nRUN yum install -y epel-release \\\n && yum makecache \\\n && yum install -y man passwd sudo tar which git mlocate links make bzip2 autoconf automake libtool m4 gcc gcc-c++ gdb flex cmake gperf indent libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel perl-ExtUtils-Embed pam-devel python-devel snappy-devel libyaml-devel libevent-devel bzip2-devel openssl-devel openldap-devel readline-devel net-snmp-devel apr-devel libesmtp-devel xerces-c-devel python-pip json-c-devel apache-ivy java-1.7.0-openjdk-devel wget openssh-clients openssh-server perl-JSON \\\n && yum clean all\n#  update gcc\nRUN wget -O /etc/yum.repos.d/slc6-devtoolset.repo http://linuxsoft.cern.ch/cern/devtoolset/slc6-devtoolset.repo \\\n && rpm --import http://linuxsoft.cern.ch/cern/slc68/x86_64/RPM-GPG-KEY-cern \\\n && yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ \\\n && echo \"source /opt/rh/devtoolset-2/enable\" >> ~/.bashrc \\\n && source ~/.bashrc\n#  install libcurl 7.45.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"http://curl.haxx.se/download/curl-7.45.0.tar.bz2\" -o curl-7.45.0.tar.bz2 \\\n && tar -xjf curl-7.45.0.tar.bz2 \\\n && cd curl-7.45.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build \\\n && ldconfig\n#  install maven\nRUN curl -L \"http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo\" -o /etc/yum.repos.d/epel-apache-maven.repo \\\n && yum install -y apache-maven \\\n && yum clean all\n#  OS requirements\nRUN echo \"kernel.sem = 250 512000 100 2048\" >> /etc/sysctl.conf\n#  setup ssh server and keys for root\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\n#  setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh \\\n && echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh \\\n && chmod a+x /etc/profile.d/java.sh\n#  install boost 1.59\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\" -o boost_1_59_0.tar.bz2 \\\n && tar -xjf boost_1_59_0.tar.bz2 \\\n && cd boost_1_59_0 \\\n && ./bootstrap.sh \\\n && ./b2 --prefix=/usr -q \\\n && ./b2 --prefix=/usr -q install \\\n && rm -rf /tmp/build\n#  install bison 2.5.1\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"ftp://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz\" -o bison-2.5.1.tar.gz \\\n && tar -xzf bison-2.5.1.tar.gz \\\n && cd bison-2.5.1 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#  install thrift 0.9.1\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"https://archive.apache.org/dist/thrift/0.9.1/thrift-0.9.1.tar.gz\" -o thrift-0.9.1.tar.gz \\\n && tar -xf thrift-0.9.1.tar.gz \\\n && cd thrift-0.9.1 \\\n && ./configure --prefix=/usr --without-tests \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#  install protobuf 2.5.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2\" -o protobuf-2.5.0.tar.bz2 \\\n && tar -xjf protobuf-2.5.0.tar.bz2 \\\n && cd protobuf-2.5.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#  install python module \nRUN pip install pycrypto --retries=50 --timeout=300\n#  create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin \\\n && useradd -u 1000 -g 1000 gpadmin \\\n && echo \"gpadmin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\n#  sudo should not require tty\nRUN sed -i -e 's|Defaults requiretty|#Defaults requiretty|' /etc/sudoers\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh \\\n && echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh \\\n && chmod a+x /etc/profile.d/user.sh\nENV BASEDIR=\"/data\"\nRUN mkdir -p /data \\\n && chmod 777 /data\nUSER gpadmin\n#  setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\nWORKDIR /data\n","injectedSmells":[],"originalDockerfileHash":"1bf65facc962f52cd182ae59c4e99e26","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied.  See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\nFROM centos:6\nMAINTAINER Richard Guo <riguo@pivotal.io>\n#   install all software we need\nRUN yum install -y epel-release \\\n && yum makecache \\\n && yum install -y man passwd sudo tar which git mlocate links make bzip2 autoconf automake libtool m4 gcc gcc-c++ gdb flex cmake gperf indent libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel perl-ExtUtils-Embed pam-devel python-devel snappy-devel libyaml-devel libevent-devel bzip2-devel openssl-devel openldap-devel readline-devel net-snmp-devel apr-devel libesmtp-devel xerces-c-devel python-pip json-c-devel apache-ivy java-1.7.0-openjdk-devel wget openssh-clients openssh-server perl-JSON \\\n && yum clean all\n#   update gcc\nRUN wget -O /etc/yum.repos.d/slc6-devtoolset.repo http://linuxsoft.cern.ch/cern/devtoolset/slc6-devtoolset.repo \\\n && rpm --import http://linuxsoft.cern.ch/cern/slc68/x86_64/RPM-GPG-KEY-cern \\\n && yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ \\\n && echo \"source /opt/rh/devtoolset-2/enable\" >> ~/.bashrc \\\n && source ~/.bashrc\n#   install libcurl 7.45.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"http://curl.haxx.se/download/curl-7.45.0.tar.bz2\" -o curl-7.45.0.tar.bz2 \\\n && tar -xjf curl-7.45.0.tar.bz2 \\\n && cd curl-7.45.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build \\\n && ldconfig\n#   install maven\nRUN curl -L \"http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo\" -o /etc/yum.repos.d/epel-apache-maven.repo \\\n && yum install -y apache-maven \\\n && yum clean all\n#   OS requirements\nRUN echo \"kernel.sem = 250 512000 100 2048\" >> /etc/sysctl.conf\n#   setup ssh server and keys for root\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\n#   setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh \\\n && echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh \\\n && chmod a+x /etc/profile.d/java.sh\n#   install boost 1.59\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\" -o boost_1_59_0.tar.bz2 \\\n && tar -xjf boost_1_59_0.tar.bz2 \\\n && cd boost_1_59_0 \\\n && ./bootstrap.sh \\\n && ./b2 --prefix=/usr -q \\\n && ./b2 --prefix=/usr -q install \\\n && rm -rf /tmp/build\n#   install bison 2.5.1\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"ftp://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz\" -o bison-2.5.1.tar.gz \\\n && tar -xzf bison-2.5.1.tar.gz \\\n && cd bison-2.5.1 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#   install thrift 0.9.1\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"https://archive.apache.org/dist/thrift/0.9.1/thrift-0.9.1.tar.gz\" -o thrift-0.9.1.tar.gz \\\n && tar -xf thrift-0.9.1.tar.gz \\\n && cd thrift-0.9.1 \\\n && ./configure --prefix=/usr --without-tests \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#   install protobuf 2.5.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2\" -o protobuf-2.5.0.tar.bz2 \\\n && tar -xjf protobuf-2.5.0.tar.bz2 \\\n && cd protobuf-2.5.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#   install python module \nRUN pip install pycrypto --retries=50 --timeout=300\n#   create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin \\\n && useradd -u 1000 -g 1000 gpadmin \\\n && echo \"gpadmin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\n#   sudo should not require tty\nRUN sed -i -e 's|Defaults requiretty|#Defaults requiretty|' /etc/sudoers\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh \\\n && echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh \\\n && chmod a+x /etc/profile.d/user.sh\nENV BASEDIR=\"/data\"\nRUN mkdir -p /data \\\n && chmod 777 /data\nUSER gpadmin\n#   setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\nWORKDIR /data\n","originalDockerfileUglifiedHash":"966d50b2ec1c3394ca622ef6cea389ca","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7905723607d18a05fc7edb71dff159091ed3dfa1.dockerfile"}