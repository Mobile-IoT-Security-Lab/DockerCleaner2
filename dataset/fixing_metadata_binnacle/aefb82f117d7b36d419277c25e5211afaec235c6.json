{"seed":2844738610,"processedDockerfileHash":"ff5c5578a95a8a5b58e43f5c52ab907c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2015 Google Inc.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Dockerfile for PHP 7.1/7.2 using nginx as the webserver.\nFROM gcr.io/gcp-runtimes/ubuntu_16_0_4\n#   Install build scripts - composer, nginx, php\nCOPY build-scripts /build-scripts\n#   Files for stackdriver setup\nCOPY stackdriver-files /stackdriver-files\nRUN chown -R www-data /build-scripts /stackdriver-files\nRUN apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends curl=7.88.1-7ubuntu1 gettext=0.21-11 git=1:2.39.2-1ubuntu1 libbz2-1.0=1.0.8-5build1 libcurl3-gnutls=7.88.1-7ubuntu1 libgmp10=2:6.2.1+dfsg1-1.1ubuntu1 libicu55 libjpeg-turbo8=2.1.5-2ubuntu1 liblua5.3-0=5.3.6-2 libmcrypt4=2.5.8-7 libmemcached11=1.1.4-1 libmemcachedutil2=1.1.4-1 libpcre3=2:8.39-15 libpng12-0 libpq5=15.2-1 libreadline6 librecode0=3.6-25 libsasl2-modules=2.1.28+dfsg-10 libsqlite3-0=3.40.1-1 libxml2=2.9.14+dfsg-1.1build2 libxslt1.1=1.1.35-1 mercurial=6.3.2-1 nginx-extras=1.22.0-1ubuntu3 sasl2-bin=2.1.28+dfsg-10 subversion=1.14.2-4build2 supervisor=4.2.1-1ubuntu1 zlib1g=1:1.2.13.dfsg-1ubuntu4 -y \\\n && /bin/bash /build-scripts/apt-cleanup.sh\nENV NGINX_DIR=\"/etc/nginx\" \\\n    PHP_DIR=\"/opt/php\" \\\n    PHP_CONFIG_TEMPLATE=\"/opt/php-configs\" \\\n    PHP71_DIR=\"/opt/php71\" \\\n    PHP72_DIR=\"/opt/php72\" \\\n    APP_DIR=\"/app\" \\\n    NGINX_USER_CONF_DIR=\"/etc/nginx/conf.d\" \\\n    UPLOAD_DIR=\"/upload\" \\\n    SESSION_SAVE_PATH=\"/tmp/sessions\" \\\n    PATH=\"/opt/php/bin:$PATH\" \\\n    WWW_HOME=\"/var/www\" \\\n    COMPOSER_HOME=\"/opt/composer\" \\\n    DOCUMENT_ROOT=\"/app\" \\\n    FRONT_CONTROLLER_FILE=\"index.php\"\nARG RUNTIME_DISTRIBUTION=\"gcp-php-runtime-xenial-unstable\"\nCOPY ${RUNTIME_DISTRUBTION} /${RUNTIME_DISTRUBTION}\nRUN mkdir -p $PHP_CONFIG_TEMPLATE\nCOPY php-fpm.conf php.ini php-cli.ini \"${PHP_CONFIG_TEMPLATE}/\"/\nRUN apt-get update -y \\\n && dpkg -i --force-depends /${RUNTIME_DISTRIBUTION}/*.deb \\\n && apt-get install --no-install-recommends -yf \\\n && (curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - ) \\\n && /bin/bash /build-scripts/dump_php_versions.sh \\\n && /bin/bash /build-scripts/apt-cleanup.sh \\\n && rm -rf /${RUNTIME_DISTRIBUTION}\nEXPOSE 8080/tcp\n#   Lock down the web directories\nRUN mkdir -p $APP_DIR $UPLOAD_DIR $SESSION_SAVE_PATH $NGINX_USER_CONF_DIR $WWW_HOME $COMPOSER_HOME \\\n && chown -R www-data.www-data $APP_DIR $UPLOAD_DIR $SESSION_SAVE_PATH $NGINX_USER_CONF_DIR $WWW_HOME $COMPOSER_HOME \\\n && chmod 755 $UPLOAD_DIR $SESSION_SAVE_PATH $COMPOSER_HOME \\\n && ln -sf ${PHP_DIR}/bin/php /usr/bin/php\n#   Linking for easy access to php with `su www-data -c $CMD`\n#   Put other config and shell files into place.\nCOPY nginx.conf fastcgi_params gzip_params \"${NGINX_DIR}/\"/\nCOPY nginx-app.conf nginx-http.conf \"${NGINX_USER_CONF_DIR}/\"/\nCOPY supervisord.conf /etc/supervisor/supervisord.conf\nRUN chmod +x /build-scripts/entrypoint.sh /build-scripts/composer.sh\nWORKDIR $APP_DIR\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2015 Google Inc.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Dockerfile for PHP 7.1/7.2 using nginx as the webserver.\nFROM gcr.io/gcp-runtimes/ubuntu_16_0_4\n#  Install build scripts - composer, nginx, php\nCOPY build-scripts /build-scripts\n#  Files for stackdriver setup\nCOPY stackdriver-files /stackdriver-files\nRUN chown -R www-data /build-scripts /stackdriver-files\nRUN apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends curl gettext git libbz2-1.0 libcurl3-gnutls libgmp10 libicu55 libjpeg-turbo8 liblua5.3-0 libmcrypt4 libmemcached11 libmemcachedutil2 libpcre3 libpng12-0 libpq5 libreadline6 librecode0 libsasl2-modules libsqlite3-0 libxml2 libxslt1.1 mercurial nginx-extras sasl2-bin subversion supervisor zlib1g -y \\\n && /bin/bash /build-scripts/apt-cleanup.sh\nENV NGINX_DIR=\"/etc/nginx\" \\\n    PHP_DIR=\"/opt/php\" \\\n    PHP_CONFIG_TEMPLATE=\"/opt/php-configs\" \\\n    PHP71_DIR=\"/opt/php71\" \\\n    PHP72_DIR=\"/opt/php72\" \\\n    APP_DIR=\"/app\" \\\n    NGINX_USER_CONF_DIR=\"/etc/nginx/conf.d\" \\\n    UPLOAD_DIR=\"/upload\" \\\n    SESSION_SAVE_PATH=\"/tmp/sessions\" \\\n    PATH=\"/opt/php/bin:$PATH\" \\\n    WWW_HOME=\"/var/www\" \\\n    COMPOSER_HOME=\"/opt/composer\" \\\n    DOCUMENT_ROOT=\"/app\" \\\n    FRONT_CONTROLLER_FILE=\"index.php\"\nARG RUNTIME_DISTRIBUTION=\"gcp-php-runtime-xenial-unstable\"\nCOPY ${RUNTIME_DISTRUBTION} /${RUNTIME_DISTRUBTION}\nRUN mkdir -p $PHP_CONFIG_TEMPLATE\nCOPY php-fpm.conf php.ini php-cli.ini \"${PHP_CONFIG_TEMPLATE}/\"/\nRUN apt-get update -y \\\n && dpkg -i --force-depends /${RUNTIME_DISTRIBUTION}/*.deb \\\n && apt-get install --no-install-recommends -yf \\\n && (curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - ) \\\n && /bin/bash /build-scripts/dump_php_versions.sh \\\n && /bin/bash /build-scripts/apt-cleanup.sh \\\n && rm -rf /${RUNTIME_DISTRIBUTION}\nEXPOSE 8080/tcp\n#  Lock down the web directories\nRUN mkdir -p $APP_DIR $UPLOAD_DIR $SESSION_SAVE_PATH $NGINX_USER_CONF_DIR $WWW_HOME $COMPOSER_HOME \\\n && chown -R www-data.www-data $APP_DIR $UPLOAD_DIR $SESSION_SAVE_PATH $NGINX_USER_CONF_DIR $WWW_HOME $COMPOSER_HOME \\\n && chmod 755 $UPLOAD_DIR $SESSION_SAVE_PATH $COMPOSER_HOME \\\n && ln -sf ${PHP_DIR}/bin/php /usr/bin/php\n#  Linking for easy access to php with `su www-data -c $CMD`\n#  Put other config and shell files into place.\nCOPY nginx.conf fastcgi_params gzip_params \"${NGINX_DIR}/\"/\nCOPY nginx-app.conf nginx-http.conf \"${NGINX_USER_CONF_DIR}/\"/\nCOPY supervisord.conf /etc/supervisor/supervisord.conf\nRUN chmod +x /build-scripts/entrypoint.sh /build-scripts/composer.sh\nWORKDIR $APP_DIR\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"c52d520ce41e2f3f9aa3ae3ea98f4432","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2015 Google Inc.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Dockerfile for PHP 7.1/7.2 using nginx as the webserver.\nFROM gcr.io/gcp-runtimes/ubuntu_16_0_4\n#   Install build scripts - composer, nginx, php\nCOPY build-scripts /build-scripts\n#   Files for stackdriver setup\nCOPY stackdriver-files /stackdriver-files\nRUN chown -R www-data /build-scripts /stackdriver-files\nRUN apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends curl gettext git libbz2-1.0 libcurl3-gnutls libgmp10 libicu55 libjpeg-turbo8 liblua5.3-0 libmcrypt4 libmemcached11 libmemcachedutil2 libpcre3 libpng12-0 libpq5 libreadline6 librecode0 libsasl2-modules libsqlite3-0 libxml2 libxslt1.1 mercurial nginx-extras sasl2-bin subversion supervisor zlib1g -y \\\n && /bin/bash /build-scripts/apt-cleanup.sh\nENV NGINX_DIR=\"/etc/nginx\" \\\n    PHP_DIR=\"/opt/php\" \\\n    PHP_CONFIG_TEMPLATE=\"/opt/php-configs\" \\\n    PHP71_DIR=\"/opt/php71\" \\\n    PHP72_DIR=\"/opt/php72\" \\\n    APP_DIR=\"/app\" \\\n    NGINX_USER_CONF_DIR=\"/etc/nginx/conf.d\" \\\n    UPLOAD_DIR=\"/upload\" \\\n    SESSION_SAVE_PATH=\"/tmp/sessions\" \\\n    PATH=\"/opt/php/bin:$PATH\" \\\n    WWW_HOME=\"/var/www\" \\\n    COMPOSER_HOME=\"/opt/composer\" \\\n    DOCUMENT_ROOT=\"/app\" \\\n    FRONT_CONTROLLER_FILE=\"index.php\"\nARG RUNTIME_DISTRIBUTION=\"gcp-php-runtime-xenial-unstable\"\nCOPY ${RUNTIME_DISTRUBTION} /${RUNTIME_DISTRUBTION}\nRUN mkdir -p $PHP_CONFIG_TEMPLATE\nCOPY php-fpm.conf php.ini php-cli.ini \"${PHP_CONFIG_TEMPLATE}/\"/\nRUN apt-get update -y \\\n && dpkg -i --force-depends /${RUNTIME_DISTRIBUTION}/*.deb \\\n && apt-get install --no-install-recommends -yf \\\n && (curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - ) \\\n && /bin/bash /build-scripts/dump_php_versions.sh \\\n && /bin/bash /build-scripts/apt-cleanup.sh \\\n && rm -rf /${RUNTIME_DISTRIBUTION}\nEXPOSE 8080/tcp\n#   Lock down the web directories\nRUN mkdir -p $APP_DIR $UPLOAD_DIR $SESSION_SAVE_PATH $NGINX_USER_CONF_DIR $WWW_HOME $COMPOSER_HOME \\\n && chown -R www-data.www-data $APP_DIR $UPLOAD_DIR $SESSION_SAVE_PATH $NGINX_USER_CONF_DIR $WWW_HOME $COMPOSER_HOME \\\n && chmod 755 $UPLOAD_DIR $SESSION_SAVE_PATH $COMPOSER_HOME \\\n && ln -sf ${PHP_DIR}/bin/php /usr/bin/php\n#   Linking for easy access to php with `su www-data -c $CMD`\n#   Put other config and shell files into place.\nCOPY nginx.conf fastcgi_params gzip_params \"${NGINX_DIR}/\"/\nCOPY nginx-app.conf nginx-http.conf \"${NGINX_USER_CONF_DIR}/\"/\nCOPY supervisord.conf /etc/supervisor/supervisord.conf\nRUN chmod +x /build-scripts/entrypoint.sh /build-scripts/composer.sh\nWORKDIR $APP_DIR\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"81dafd12a14e606284005ff907fbebb4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/aefb82f117d7b36d419277c25e5211afaec235c6.dockerfile"}