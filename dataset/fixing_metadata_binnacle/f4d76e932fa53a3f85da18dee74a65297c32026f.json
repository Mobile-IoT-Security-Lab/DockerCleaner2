{"seed":1250505497,"processedDockerfileHash":"7947c1edbe06e2923511d90fe94053a7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-apk","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Builds a custom docker image for ShinobiCCTV Pro\n#\nFROM node:8-alpine\nLABEL Author=\"MiGoller, mrproper, pschmitt & moeiscool\"\n#   Set environment variables to default values\n#   ADMIN_USER : the super user login name\n#   ADMIN_PASSWORD : the super user login password\n#   PLUGINKEY_MOTION : motion plugin connection key\n#   PLUGINKEY_OPENCV : opencv plugin connection key\n#   PLUGINKEY_OPENALPR : openalpr plugin connection key\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV ADMIN_USER=\"admin@shinobi.video\" \\\n    CRON_KEY=\"fd6c7849-904d-47ea-922b-5143358ba0de\" \\\n    PLUGINKEY_MOTION=\"b7502fd9-506c-4dda-9b56-8e699a6bc41c\" \\\n    PLUGINKEY_OPENCV=\"f078bcfe-c39a-4eb5-bd52-9382ca828e8a\" \\\n    PLUGINKEY_OPENALPR=\"dbff574e-9d4a-44c1-b578-3dc0f1944a3c\" \\\n    MYSQL_USER=\"majesticflame\" \\\n    MYSQL_HOST=\"localhost\" \\\n    MYSQL_DATABASE=\"ccio\" \\\n    MYSQL_ROOT_USER=\"root\"\n#   Create the custom configuration dir\nRUN mkdir -p /config\n#   Create the working dir\nRUN mkdir -p /opt/shinobi\n#   Install package dependencies\nRUN apk update \\\n && apk upgrade \\\n && apk add freetype-dev=2.10.1-r1 gnutls-dev=3.6.15-r1 lame-dev=3.100-r0 libass-dev=0.14.0-r0 libogg-dev=1.3.4-r0 libtheora-dev=1.1.1-r14 libvorbis-dev=1.3.6-r2 libvpx-dev=1.8.1-r0 libwebp-dev=1.0.3-r0 libssh2=1.9.0-r1 opus-dev=1.3.1-r0 rtmpdump-dev=2.4_git20160909-r7 x264-dev=20191119-r0 x265-dev=3.2.1-r0 yasm-dev=1.3.0-r2 --no-cache \\\n && apk add build-base=0.5-r1 bzip2=1.0.8-r1 coreutils=8.31-r0 gnutls=3.6.15-r1 nasm=2.14.02-r0 tar=1.32-r2 x264=20191119-r0 --no-cache --virtual .build-dependencies\nRUN apk add python make=4.2.1-r2 ffmpeg=4.2.4-r0 pkgconfig git=2.24.4-r0 mariadb=10.4.22-r0 mariadb-client=10.4.22-r0 wget=1.20.3-r0 tar=1.32-r2 xz=5.2.4-r0 openrc=0.42.1-r3 --update --no-cache\nRUN sed -ie \"s/^bind-address\\s*=\\s*127\\.0\\.0\\.1$/#bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\n#   Install ffmpeg static build version from cdn.shinobi.video\nRUN wget https://cdn.shinobi.video/installers/ffmpeg-release-64bit-static.tar.xz\nRUN tar xpvf ./ffmpeg-release-64bit-static.tar.xz -C ./ \\\n && cp -f ./ffmpeg-3.3.4-64bit-static/ff* /usr/bin/ \\\n && chmod +x /usr/bin/ff*\nRUN rm -f ffmpeg-release-64bit-static.tar.xz \\\n && rm -rf ./ffmpeg-3.3.4-64bit-static\nWORKDIR /opt/shinobi\n#   Clone the Shinobi CCTV PRO repo\nRUN git clone https://github.com/ShinobiCCTV/Shinobi.git /opt/shinobi\n#   Install NodeJS dependencies\nRUN npm install npm@latest -g\nRUN npm install pm2@5.3.0 -g\nRUN npm install\n#   Copy code\nCOPY docker-entrypoint.sh .\nCOPY pm2Shinobi.yml .\nRUN chmod -f +x ./*.sh\n#   Copy default configuration files\nCOPY ./config/conf.sample.json /opt/shinobi/conf.sample.json\nCOPY ./config/super.sample.json /opt/shinobi/super.sample.json\nVOLUME [\"/opt/shinobi/videos\"]\nVOLUME [\"/config\"]\nEXPOSE 8080/tcp\nENTRYPOINT [\"/opt/shinobi/docker-entrypoint.sh\"]\nCMD [\"pm2-docker\", \"pm2Shinobi.yml\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\n","originalDockerfile":"#\n#  Builds a custom docker image for ShinobiCCTV Pro\n#\nFROM node:8-alpine\nLABEL Author=\"MiGoller, mrproper, pschmitt & moeiscool\"\n#  Set environment variables to default values\n#  ADMIN_USER : the super user login name\n#  ADMIN_PASSWORD : the super user login password\n#  PLUGINKEY_MOTION : motion plugin connection key\n#  PLUGINKEY_OPENCV : opencv plugin connection key\n#  PLUGINKEY_OPENALPR : openalpr plugin connection key\nENV ADMIN_USER=\"admin@shinobi.video\" \\\n    ADMIN_PASSWORD=\"admin\" \\\n    CRON_KEY=\"fd6c7849-904d-47ea-922b-5143358ba0de\" \\\n    PLUGINKEY_MOTION=\"b7502fd9-506c-4dda-9b56-8e699a6bc41c\" \\\n    PLUGINKEY_OPENCV=\"f078bcfe-c39a-4eb5-bd52-9382ca828e8a\" \\\n    PLUGINKEY_OPENALPR=\"dbff574e-9d4a-44c1-b578-3dc0f1944a3c\" \\\n    MYSQL_USER=\"majesticflame\" \\\n    MYSQL_PASSWORD=\"password\" \\\n    MYSQL_HOST=\"localhost\" \\\n    MYSQL_DATABASE=\"ccio\" \\\n    MYSQL_ROOT_PASSWORD=\"blubsblawoot\" \\\n    MYSQL_ROOT_USER=\"root\"\n#  Create the custom configuration dir\nRUN mkdir -p /config\n#  Create the working dir\nRUN mkdir -p /opt/shinobi\n#  Install package dependencies\nRUN apk update \\\n && apk upgrade \\\n && apk --no-cache add freetype-dev gnutls-dev lame-dev libass-dev libogg-dev libtheora-dev libvorbis-dev libvpx-dev libwebp-dev libssh2 opus-dev rtmpdump-dev x264-dev x265-dev yasm-dev \\\n && apk add --no-cache --virtual .build-dependencies build-base bzip2 coreutils gnutls nasm tar x264\nRUN apk add --update --no-cache python make ffmpeg pkgconfig git mariadb mariadb-client wget tar xz openrc\nRUN sed -ie \"s/^bind-address\\s*=\\s*127\\.0\\.0\\.1$/#bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\n#  Install ffmpeg static build version from cdn.shinobi.video\nRUN wget https://cdn.shinobi.video/installers/ffmpeg-release-64bit-static.tar.xz\nRUN tar xpvf ./ffmpeg-release-64bit-static.tar.xz -C ./ \\\n && cp -f ./ffmpeg-3.3.4-64bit-static/ff* /usr/bin/ \\\n && chmod +x /usr/bin/ff*\nRUN rm -f ffmpeg-release-64bit-static.tar.xz \\\n && rm -rf ./ffmpeg-3.3.4-64bit-static\nWORKDIR /opt/shinobi\n#  Clone the Shinobi CCTV PRO repo\nRUN git clone https://github.com/ShinobiCCTV/Shinobi.git /opt/shinobi\n#  Install NodeJS dependencies\nRUN npm install npm@latest -g\nRUN npm install pm2 -g\nRUN npm install\n#  Copy code\nCOPY docker-entrypoint.sh .\nCOPY pm2Shinobi.yml .\nRUN chmod -f +x ./*.sh\n#  Copy default configuration files\nCOPY ./config/conf.sample.json /opt/shinobi/conf.sample.json\nCOPY ./config/super.sample.json /opt/shinobi/super.sample.json\nVOLUME [\"/opt/shinobi/videos\"]\nVOLUME [\"/config\"]\nEXPOSE 8080/tcp\nENTRYPOINT [\"/opt/shinobi/docker-entrypoint.sh\"]\nCMD [\"pm2-docker\", \"pm2Shinobi.yml\"]\n","injectedSmells":[],"originalDockerfileHash":"17206f5bba522949d7b434f04a893319","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Builds a custom docker image for ShinobiCCTV Pro\n#\nFROM node:8-alpine\nLABEL Author=\"MiGoller, mrproper, pschmitt & moeiscool\"\n#   Set environment variables to default values\n#   ADMIN_USER : the super user login name\n#   ADMIN_PASSWORD : the super user login password\n#   PLUGINKEY_MOTION : motion plugin connection key\n#   PLUGINKEY_OPENCV : opencv plugin connection key\n#   PLUGINKEY_OPENALPR : openalpr plugin connection key\nENV ADMIN_USER=\"admin@shinobi.video\" \\\n    ADMIN_PASSWORD=\"admin\" \\\n    CRON_KEY=\"fd6c7849-904d-47ea-922b-5143358ba0de\" \\\n    PLUGINKEY_MOTION=\"b7502fd9-506c-4dda-9b56-8e699a6bc41c\" \\\n    PLUGINKEY_OPENCV=\"f078bcfe-c39a-4eb5-bd52-9382ca828e8a\" \\\n    PLUGINKEY_OPENALPR=\"dbff574e-9d4a-44c1-b578-3dc0f1944a3c\" \\\n    MYSQL_USER=\"majesticflame\" \\\n    MYSQL_PASSWORD=\"password\" \\\n    MYSQL_HOST=\"localhost\" \\\n    MYSQL_DATABASE=\"ccio\" \\\n    MYSQL_ROOT_PASSWORD=\"blubsblawoot\" \\\n    MYSQL_ROOT_USER=\"root\"\n#   Create the custom configuration dir\nRUN mkdir -p /config\n#   Create the working dir\nRUN mkdir -p /opt/shinobi\n#   Install package dependencies\nRUN apk update \\\n && apk upgrade \\\n && apk --no-cache add freetype-dev gnutls-dev lame-dev libass-dev libogg-dev libtheora-dev libvorbis-dev libvpx-dev libwebp-dev libssh2 opus-dev rtmpdump-dev x264-dev x265-dev yasm-dev \\\n && apk add --no-cache --virtual .build-dependencies build-base bzip2 coreutils gnutls nasm tar x264\nRUN apk add --update --no-cache python make ffmpeg pkgconfig git mariadb mariadb-client wget tar xz openrc\nRUN sed -ie \"s/^bind-address\\s*=\\s*127\\.0\\.0\\.1$/#bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\n#   Install ffmpeg static build version from cdn.shinobi.video\nRUN wget https://cdn.shinobi.video/installers/ffmpeg-release-64bit-static.tar.xz\nRUN tar xpvf ./ffmpeg-release-64bit-static.tar.xz -C ./ \\\n && cp -f ./ffmpeg-3.3.4-64bit-static/ff* /usr/bin/ \\\n && chmod +x /usr/bin/ff*\nRUN rm -f ffmpeg-release-64bit-static.tar.xz \\\n && rm -rf ./ffmpeg-3.3.4-64bit-static\nWORKDIR /opt/shinobi\n#   Clone the Shinobi CCTV PRO repo\nRUN git clone https://github.com/ShinobiCCTV/Shinobi.git /opt/shinobi\n#   Install NodeJS dependencies\nRUN npm install npm@latest -g\nRUN npm install pm2 -g\nRUN npm install\n#   Copy code\nCOPY docker-entrypoint.sh .\nCOPY pm2Shinobi.yml .\nRUN chmod -f +x ./*.sh\n#   Copy default configuration files\nCOPY ./config/conf.sample.json /opt/shinobi/conf.sample.json\nCOPY ./config/super.sample.json /opt/shinobi/super.sample.json\nVOLUME [\"/opt/shinobi/videos\"]\nVOLUME [\"/config\"]\nEXPOSE 8080/tcp\nENTRYPOINT [\"/opt/shinobi/docker-entrypoint.sh\"]\nCMD [\"pm2-docker\", \"pm2Shinobi.yml\"]\n","originalDockerfileUglifiedHash":"08cb805e9aad1edcca77619dd47329ad","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f4d76e932fa53a3f85da18dee74a65297c32026f.dockerfile"}