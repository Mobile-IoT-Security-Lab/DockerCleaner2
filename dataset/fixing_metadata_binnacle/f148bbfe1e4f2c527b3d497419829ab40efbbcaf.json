{"seed":3600817616,"processedDockerfileHash":"33a48390814d950d5b44efc67f827456","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:12.04\nMAINTAINER sabalah21@gmail.com\n#   Configuring locales\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg-reconfigure locales \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common python-software-properties -y\nRUN add-apt-repository ppa:cartodb/postgresql-9.3 \\\n && add-apt-repository ppa:cartodb/gis \\\n && add-apt-repository ppa:cartodb/redis \\\n && add-apt-repository ppa:cartodb/nodejs-010\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf automake build-essential ca-certificates checkinstall git-core git libtool libpq5 libpq-dev libxml2-dev liblwgeom-2.1.8 netcat nodejs python-setuptools python2.7-dev python-dev pgtune postgresql-client-9.3 postgresql-client-common postgresql-9.3 postgresql-contrib-9.3 postgresql-server-dev-9.3 postgresql-plpython-9.3 postgresql-9.3-plproxy postgis postgresql-9.3-postgis-2.2 postgresql-9.3-postgis-scripts unzip vim wget zip -y\n#   GIS dependencies\nRUN apt-get install --no-install-recommends proj proj-bin proj-data libproj-dev -y\nRUN apt-get install --no-install-recommends libjson0 libjson0-dev python-simplejson -y\nRUN apt-get install --no-install-recommends libgeos-c1v5 libgeos-dev -y\nRUN apt-get install --no-install-recommends gdal-bin libgdal1-dev libgdal-dev -y\nRUN apt-get install --no-install-recommends ogr2ogr2-static-bin -y\n#   Set gdal enviorment variables\nENV CPLUS_INCLUDE_PATH=\"$CPLUS_INCLUDE_PATH:/usr/include/gdal\"\nENV C_INCLUDE_PATH=\"$C_INCLUDE_PATH:/usr/include/gdal\"\nENV PATH=\"$PATH:/usr/include/gdal\"\n#   Set connections policy\nRUN rm /etc/postgresql/9.3/main/pg_hba.conf\nCOPY ./opt/pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf\nCOPY ./opt/auth-configuration.sh /opt/auth-configuration.sh\nRUN chmod 0755 /opt/auth-configuration.sh\nRUN service postgresql start \\\n && /opt/auth-configuration.sh \\\n && service postgresql stop\n#   Setup template database\nCOPY ./opt/template-postgis.sh /opt/template-postgis.sh\nRUN service postgresql start \\\n && /bin/su postgres -c /opt/template-postgis.sh \\\n && ldconfig \\\n && service postgresql stop\n#   Install cartodb extension\nRUN git clone https://github.com/CartoDB/cartodb-postgresql\nRUN cd cartodb-postgresql \\\n && git checkout $( git describe --abbrev=0 --tags ;)\nRUN cd cartodb-postgresql \\\n && PGUSER=postgres make all install\n#   Install schema_triggers\nRUN git clone https://github.com/CartoDB/pg_schema_triggers.git\nRUN cd pg_schema_triggers \\\n && make all install\nRUN cd pg_schema_triggers \\\n && sed -i \"/#shared_preload/a shared_preload_libraries = 'schema_triggers.so'\" /etc/postgresql/9.3/main/postgresql.conf\n#   Run tests\nRUN service postgresql start \\\n && cd /cartodb-postgresql \\\n && PGUSER=postgres make installcheck \\\n && service postgresql stop\nRUN service postgresql start \\\n && createuser publicuser --no-createrole --no-createdb --no-superuser -U postgres \\\n && createuser tileuser --no-createrole --no-createdb --no-superuser -U postgres \\\n && service postgresql stop\n#   Copy all postgresql data becuase of volume initialization\nRUN mkdir /tmp/postgres-backup\nRUN cp -r /var/lib/postgresql/* /tmp/postgres-backup/\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:12.04\nMAINTAINER sabalah21@gmail.com\n#  Configuring locales\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg-reconfigure locales \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install software-properties-common python-software-properties -y\nRUN add-apt-repository ppa:cartodb/postgresql-9.3 \\\n && add-apt-repository ppa:cartodb/gis \\\n && add-apt-repository ppa:cartodb/redis \\\n && add-apt-repository ppa:cartodb/nodejs-010\nRUN apt-get update \\\n && apt-get install autoconf automake build-essential ca-certificates checkinstall git-core git libtool libpq5 libpq-dev libxml2-dev liblwgeom-2.1.8 netcat nodejs python-setuptools python2.7-dev python-dev pgtune postgresql-client-9.3 postgresql-client-common postgresql-9.3 postgresql-contrib-9.3 postgresql-server-dev-9.3 postgresql-plpython-9.3 postgresql-9.3-plproxy postgis postgresql-9.3-postgis-2.2 postgresql-9.3-postgis-scripts unzip vim wget zip -y\n#  GIS dependencies\nRUN apt-get install proj proj-bin proj-data libproj-dev -y\nRUN apt-get install libjson0 libjson0-dev python-simplejson -y\nRUN apt-get install libgeos-c1v5 libgeos-dev -y\nRUN apt-get install gdal-bin libgdal1-dev libgdal-dev -y\nRUN apt-get install ogr2ogr2-static-bin -y\n#  Set gdal enviorment variables\nENV CPLUS_INCLUDE_PATH=\"$CPLUS_INCLUDE_PATH:/usr/include/gdal\"\nENV C_INCLUDE_PATH=\"$C_INCLUDE_PATH:/usr/include/gdal\"\nENV PATH=\"$PATH:/usr/include/gdal\"\n#  Set connections policy\nRUN rm /etc/postgresql/9.3/main/pg_hba.conf\nADD ./opt/pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf\nADD ./opt/auth-configuration.sh /opt/auth-configuration.sh\nRUN chmod 0755 /opt/auth-configuration.sh\nRUN service postgresql start \\\n && /opt/auth-configuration.sh \\\n && service postgresql stop\n#  Setup template database\nADD ./opt/template-postgis.sh /opt/template-postgis.sh\nRUN service postgresql start \\\n && /bin/su postgres -c /opt/template-postgis.sh \\\n && ldconfig \\\n && service postgresql stop\n#  Install cartodb extension\nRUN git clone https://github.com/CartoDB/cartodb-postgresql\nRUN cd cartodb-postgresql \\\n && git checkout $( git describe --abbrev=0 --tags ;)\nRUN cd cartodb-postgresql \\\n && PGUSER=postgres make all install\n#  Install schema_triggers\nRUN git clone https://github.com/CartoDB/pg_schema_triggers.git\nRUN cd pg_schema_triggers \\\n && make all install\nRUN cd pg_schema_triggers \\\n && sed -i \"/#shared_preload/a shared_preload_libraries = 'schema_triggers.so'\" /etc/postgresql/9.3/main/postgresql.conf\n#  Run tests\nRUN service postgresql start \\\n && cd /cartodb-postgresql \\\n && PGUSER=postgres make installcheck \\\n && service postgresql stop\nRUN service postgresql start \\\n && createuser publicuser --no-createrole --no-createdb --no-superuser -U postgres \\\n && createuser tileuser --no-createrole --no-createdb --no-superuser -U postgres \\\n && service postgresql stop\n#  Copy all postgresql data becuase of volume initialization\nRUN mkdir /tmp/postgres-backup\nRUN cp -r /var/lib/postgresql/* /tmp/postgres-backup/\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"af66f88019739bab8e4dcf5fd6a01dd0","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:12.04\nMAINTAINER sabalah21@gmail.com\n#   Configuring locales\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg-reconfigure locales \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install software-properties-common python-software-properties -y\nRUN add-apt-repository ppa:cartodb/postgresql-9.3 \\\n && add-apt-repository ppa:cartodb/gis \\\n && add-apt-repository ppa:cartodb/redis \\\n && add-apt-repository ppa:cartodb/nodejs-010\nRUN apt-get update \\\n && apt-get install autoconf automake build-essential ca-certificates checkinstall git-core git libtool libpq5 libpq-dev libxml2-dev liblwgeom-2.1.8 netcat nodejs python-setuptools python2.7-dev python-dev pgtune postgresql-client-9.3 postgresql-client-common postgresql-9.3 postgresql-contrib-9.3 postgresql-server-dev-9.3 postgresql-plpython-9.3 postgresql-9.3-plproxy postgis postgresql-9.3-postgis-2.2 postgresql-9.3-postgis-scripts unzip vim wget zip -y\n#   GIS dependencies\nRUN apt-get install proj proj-bin proj-data libproj-dev -y\nRUN apt-get install libjson0 libjson0-dev python-simplejson -y\nRUN apt-get install libgeos-c1v5 libgeos-dev -y\nRUN apt-get install gdal-bin libgdal1-dev libgdal-dev -y\nRUN apt-get install ogr2ogr2-static-bin -y\n#   Set gdal enviorment variables\nENV CPLUS_INCLUDE_PATH=\"$CPLUS_INCLUDE_PATH:/usr/include/gdal\"\nENV C_INCLUDE_PATH=\"$C_INCLUDE_PATH:/usr/include/gdal\"\nENV PATH=\"$PATH:/usr/include/gdal\"\n#   Set connections policy\nRUN rm /etc/postgresql/9.3/main/pg_hba.conf\nADD ./opt/pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf\nADD ./opt/auth-configuration.sh /opt/auth-configuration.sh\nRUN chmod 0755 /opt/auth-configuration.sh\nRUN service postgresql start \\\n && /opt/auth-configuration.sh \\\n && service postgresql stop\n#   Setup template database\nADD ./opt/template-postgis.sh /opt/template-postgis.sh\nRUN service postgresql start \\\n && /bin/su postgres -c /opt/template-postgis.sh \\\n && ldconfig \\\n && service postgresql stop\n#   Install cartodb extension\nRUN git clone https://github.com/CartoDB/cartodb-postgresql\nRUN cd cartodb-postgresql \\\n && git checkout $( git describe --abbrev=0 --tags ;)\nRUN cd cartodb-postgresql \\\n && PGUSER=postgres make all install\n#   Install schema_triggers\nRUN git clone https://github.com/CartoDB/pg_schema_triggers.git\nRUN cd pg_schema_triggers \\\n && make all install\nRUN cd pg_schema_triggers \\\n && sed -i \"/#shared_preload/a shared_preload_libraries = 'schema_triggers.so'\" /etc/postgresql/9.3/main/postgresql.conf\n#   Run tests\nRUN service postgresql start \\\n && cd /cartodb-postgresql \\\n && PGUSER=postgres make installcheck \\\n && service postgresql stop\nRUN service postgresql start \\\n && createuser publicuser --no-createrole --no-createdb --no-superuser -U postgres \\\n && createuser tileuser --no-createrole --no-createdb --no-superuser -U postgres \\\n && service postgresql stop\n#   Copy all postgresql data becuase of volume initialization\nRUN mkdir /tmp/postgres-backup\nRUN cp -r /var/lib/postgresql/* /tmp/postgres-backup/\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"eee0409856d7364207b952fa4b8f1efa","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f148bbfe1e4f2c527b3d497419829ab40efbbcaf.dockerfile"}