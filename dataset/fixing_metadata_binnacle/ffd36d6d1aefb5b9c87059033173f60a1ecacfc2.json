{"seed":1231904256,"processedDockerfileHash":"754293bafcd0c8cd70644e9028ee05bf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck"],"processedDockerfile":"#   container for rsyslog development\n#   creates the build environment\nFROM debian:8\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN : \\\n && apt-get upgrade -y\nRUN (apt-get update ;apt-get install --no-install-recommends autoconf autoconf-archive automake autotools-dev bison clang curl default-jdk faketime flex gdb git libcurl4-gnutls-dev libdbd-mysql libdbi-dev libgcrypt11-dev libglib2.0-dev libgnutls28-dev libgrok1 libgrok-dev libhiredis-dev libkrb5-dev liblz4-dev libmysqlclient-dev libnet1-dev libpcap-dev libpq-dev libsasl2-dev libsnmp-dev libssl-dev libsystemd-dev libtokyocabinet-dev libtool mysql-server net-tools pkg-config postgresql-client python-docutils python-software-properties software-properties-common tcl-dev uuid-dev valgrind vim wget zlib1g-dev -y )\n#  \tlibbson-dev\n#  \tlibmaxminddb-dev \n#  \tlibmongoc-dev \n#  RUN     add-apt-repository ppa:adiscon/v8-stable -y && \\\n#  \tadd-apt-repository ppa:qpid/released -y && \\\n#  \tadd-apt-repository ppa:ubuntu-toolchain-r/test -y && \\\n#  \techo \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main\" > /etc/apt/sources.list.d/llvm.list && \\\n#  \twget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - && \\\n#  \techo \"deb http://download.opensuse.org/repositories/network:/messaging:/zeromq:/git-draft/xUbuntu_16.04/ ./\" > /etc/apt/sources.list.d/0mq.list && \\\n#  \twget -O - http://download.opensuse.org/repositories/network:/messaging:/zeromq:/git-draft/xUbuntu_16.04/Release.key | apt-key add -\n#   note: ppa:ubuntu-toolchain-r/test is currently the best repo for gcc-7 we can find...\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends libestr-dev libsodium-dev -y )\n#  \tclang-tools-5.0 \n#  \tlibfastjson-dev \n#  \tlibczmq-dev \n#  \tclang-5.0 \n#  \tgcc-7 \n#  \tlibqpid-proton10-dev \nWORKDIR /home/devel\nRUN groupadd rsyslog \\\n && useradd -g rsyslog -s /bin/bash rsyslog \\\n && echo \"rsyslog ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nRUN mkdir /rsyslog \\\n && chown rsyslog:rsyslog /rsyslog\nVOLUME /rsyslog\nENV PKG_CONFIG_PATH=\"/usr/lib64/pkgconfig\" \\\n    xLD_LIBRARY_PATH=\"/usr/lib\" \\\n    DEBIAN_FRONTEND=\"\"\n#   create dependency cache\nRUN mkdir /local_dep_cache \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.9.tar.gz -O /local_dep_cache/elasticsearch-5.6.9.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.tar.gz -O /local_dep_cache/elasticsearch-6.0.0.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.tar.gz -O /local_dep_cache/elasticsearch-6.3.1.tar.gz\n#   tell tests which are the newester versions, so they can be checked without the need\n#   to adjust test sources.\nENV ELASTICSEARCH_NEWEST=\"elasticsearch-6.3.1.tar.gz\"\n#   bump dependency version below to trigger a dependency rebuild\n#   but not a full one (via --no-cache)\nENV DEP_VERSION=\"1\"\n#   Helper projects and dependency build starts here\nRUN mkdir helper-projects\n#   code style checker - not yet packaged\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/codestyle \\\n && cd codestyle \\\n && gcc --std=c99 stylecheck.c -o stylecheck \\\n && mv stylecheck /usr/bin/rsyslog_stylecheck \\\n && cd .. \\\n && rm -r codestyle \\\n && cd ..\n#   we need Guardtime libksi here, otherwise we cannot check the KSI component\t\nRUN cd helper-projects \\\n && git clone https://github.com/guardtime/libksi.git \\\n && cd libksi \\\n && autoreconf -fvi \\\n && ./configure --libdir=/usr/lib64 \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && rm -r libksi \\\n && cd ..\n#  RUN\tapt-get install -y \\\n#  \tliblz4-dev\n#   we need the latest librdkafka as there as always required updates\n#  RUN\tcd helper-projects && \\\n#  \tgit clone https://github.com/edenhill/librdkafka && \\\n#  \tcd librdkafka && \\\n#  \t(unset CFLAGS; ./configure --prefix=/usr --libdir=/usr/lib64 --CFLAGS=\"-g\" ; make -j) && \\\n#  \tmake install && \\\n#  \tcd .. && \\\n#   Note: we do NOT delete the source as we may need it to\n#   uninstall (in case the user wants to go back to system-default)\n#  \tcd ..\n#   libmongoc is unfortunately not available on openSuse - later?\n#  RUN\tcd helper-projects && \\\n#  \twget -nv https://github.com/mongodb/mongo-c-driver/releases/download/1.12.0/mongo-c-driver-1.12.0.tar.gz && \\\n#  \ttar xzf mongo-c-driver-1.12.0.tar.gz && \\\n#  \tcd mongo-c-driver-1.12.0 && \\\n#  \tmkdir cmake-build && \\\n#  \tcmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF && \\\n#  \tmake -j4 && \\\n#  \tmake install && \\\n#  \tcd .. && \\\n#  \trm -r mongo-c-driver-1.12.0* && \\\n#  \tcd ..\n#   bump dependency version below to trigger a dependency rebuild\n#   but not a full one (via --no-cache)\nENV RSYSLOG_DEP_VERSION=\"2018-09-16\"\n#   libestr - currently, not needed, we use from offical repo (unlikely to change)\n#  RUN\tcd helper-projects && \\\n#  \tgit clone https://github.com/rsyslog/libestr.git && \\\n#  \tcd libestr && \\\n#  \tautoreconf -fi && ./configure --libdir=/usr/lib64 --prefix=/usr && \\\n#  \tmake -j4 && \\\n#  \tmake install && \\\n#  \tcd .. && \\\n#  \trm -r libestr && \\\n#  \tcd ..\n#   liblogging\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblogging.git \\\n && cd liblogging \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-journal \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblogging \\\n && cd ..\n#   liblfastjson\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/libfastjson.git \\\n && cd libfastjson \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r libfastjson \\\n && cd ..\n#   liblognorm\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblognorm.git \\\n && cd liblognorm \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblognorm \\\n && cd ..\n#   librelp\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/librelp.git \\\n && cd librelp \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --enable-compile-warnings=yes --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r librelp \\\n && cd ..\n#   next ENV is specifically for running scan-build - so we do not need to\n#   change scripts if at a later time we can move on to a newer version\nENV SCAN_BUILD=\"scan-build\" \\\n    SCAN_BUILD_CC=\"clang-5.0\"\nENV RSYSLOG_CONFIGURE_OPTIONS=\"--enable-elasticsearch  --enable-elasticsearch-tests  --enable-gnutls  --enable-gssapi-krb5  --enable-imbatchreport  --disable-imczmq  --enable-imdiag  --enable-imfile  --enable-imjournal  --disable-imkafka  --enable-impstats  --enable-improg  --enable-imptcp  --enable-impcap  --enable-imtuxedolog  --disable-kafka-tests  --disable-kmsg  --enable-ksi-ls12  --enable-libdbi  --enable-libfaketime  --enable-libgcrypt  --enable-mail  --enable-mmanon  --enable-mmaudit  --enable-mmcount  --disable-mmdblookup  --enable-mmfields  --enable-mmgrok  --enable-mmjsonparse  --enable-mmkubernetes  --enable-mmnormalize  --enable-mmpstrucdata  --enable-mmrm1stspace  --enable-mmsequence  --enable-mmsnmptrapd  --enable-mmtaghostname  --enable-mmutf8fix  --enable-mysql  --disable-omamqp1  --disable-omczmq  --enable-omhiredis  --enable-omhttpfs  --enable-omjournal  --disable-omkafka  --disable-ommongodb  --enable-omprog  --enable-omrelp-default-port=13515  --enable-omruleset  --enable-omstdout  --enable-omtcl  --enable-omudpspoof  --enable-omuxsock  --enable-openssl  --enable-pgsql  --enable-pmaixforwardedfrom  --enable-pmciscoios  --enable-pmcisconames  --enable-pmdb2diag  --enable-pmlastmsg  --enable-pmnormalize  --enable-pmnull  --enable-pmsnare  --enable-relp  --enable-snmp  --enable-usertools  --enable-valgrind  --enable-testbench\"\nWORKDIR /rsyslog\nUSER rsyslog\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  container for rsyslog development\n#  creates the build environment\nFROM debian:8\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get upgrade -y\nRUN apt-get install autoconf autoconf-archive automake autotools-dev bison clang curl default-jdk faketime flex gdb git libcurl4-gnutls-dev libdbd-mysql libdbi-dev libgcrypt11-dev libglib2.0-dev libgnutls28-dev libgrok1 libgrok-dev libhiredis-dev libkrb5-dev liblz4-dev libmysqlclient-dev libnet1-dev libpcap-dev libpq-dev libsasl2-dev libsnmp-dev libssl-dev libsystemd-dev libtokyocabinet-dev libtool mysql-server net-tools pkg-config postgresql-client python-docutils python-software-properties software-properties-common tcl-dev uuid-dev valgrind vim wget zlib1g-dev -y\n# \tlibbson-dev\n# \tlibmaxminddb-dev \n# \tlibmongoc-dev \n# RUN     add-apt-repository ppa:adiscon/v8-stable -y && \\\n# \tadd-apt-repository ppa:qpid/released -y && \\\n# \tadd-apt-repository ppa:ubuntu-toolchain-r/test -y && \\\n# \techo \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main\" > /etc/apt/sources.list.d/llvm.list && \\\n# \twget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - && \\\n# \techo \"deb http://download.opensuse.org/repositories/network:/messaging:/zeromq:/git-draft/xUbuntu_16.04/ ./\" > /etc/apt/sources.list.d/0mq.list && \\\n# \twget -O - http://download.opensuse.org/repositories/network:/messaging:/zeromq:/git-draft/xUbuntu_16.04/Release.key | apt-key add -\n#  note: ppa:ubuntu-toolchain-r/test is currently the best repo for gcc-7 we can find...\nRUN apt-get update -y \\\n && apt-get install libestr-dev libsodium-dev -y\n# \tclang-tools-5.0 \n# \tlibfastjson-dev \n# \tlibczmq-dev \n# \tclang-5.0 \n# \tgcc-7 \n# \tlibqpid-proton10-dev \nWORKDIR /home/devel\nRUN groupadd rsyslog \\\n && useradd -g rsyslog -s /bin/bash rsyslog \\\n && echo \"rsyslog ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nRUN mkdir /rsyslog \\\n && chown rsyslog:rsyslog /rsyslog\nVOLUME /rsyslog\nENV PKG_CONFIG_PATH=\"/usr/lib64/pkgconfig\" \\\n    xLD_LIBRARY_PATH=\"/usr/lib\" \\\n    DEBIAN_FRONTEND=\"\"\n#  create dependency cache\nRUN mkdir /local_dep_cache \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.9.tar.gz -O /local_dep_cache/elasticsearch-5.6.9.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.tar.gz -O /local_dep_cache/elasticsearch-6.0.0.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.tar.gz -O /local_dep_cache/elasticsearch-6.3.1.tar.gz\n#  tell tests which are the newester versions, so they can be checked without the need\n#  to adjust test sources.\nENV ELASTICSEARCH_NEWEST=\"elasticsearch-6.3.1.tar.gz\"\n#  bump dependency version below to trigger a dependency rebuild\n#  but not a full one (via --no-cache)\nENV DEP_VERSION=\"1\"\n#  Helper projects and dependency build starts here\nRUN mkdir helper-projects\n#  code style checker - not yet packaged\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/codestyle \\\n && cd codestyle \\\n && gcc --std=c99 stylecheck.c -o stylecheck \\\n && mv stylecheck /usr/bin/rsyslog_stylecheck \\\n && cd .. \\\n && rm -r codestyle \\\n && cd ..\n#  we need Guardtime libksi here, otherwise we cannot check the KSI component\t\nRUN cd helper-projects \\\n && git clone https://github.com/guardtime/libksi.git \\\n && cd libksi \\\n && autoreconf -fvi \\\n && ./configure --libdir=/usr/lib64 \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && rm -r libksi \\\n && cd ..\n# RUN\tapt-get install -y \\\n# \tliblz4-dev\n#  we need the latest librdkafka as there as always required updates\n# RUN\tcd helper-projects && \\\n# \tgit clone https://github.com/edenhill/librdkafka && \\\n# \tcd librdkafka && \\\n# \t(unset CFLAGS; ./configure --prefix=/usr --libdir=/usr/lib64 --CFLAGS=\"-g\" ; make -j) && \\\n# \tmake install && \\\n# \tcd .. && \\\n#  Note: we do NOT delete the source as we may need it to\n#  uninstall (in case the user wants to go back to system-default)\n# \tcd ..\n#  libmongoc is unfortunately not available on openSuse - later?\n# RUN\tcd helper-projects && \\\n# \twget -nv https://github.com/mongodb/mongo-c-driver/releases/download/1.12.0/mongo-c-driver-1.12.0.tar.gz && \\\n# \ttar xzf mongo-c-driver-1.12.0.tar.gz && \\\n# \tcd mongo-c-driver-1.12.0 && \\\n# \tmkdir cmake-build && \\\n# \tcmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF && \\\n# \tmake -j4 && \\\n# \tmake install && \\\n# \tcd .. && \\\n# \trm -r mongo-c-driver-1.12.0* && \\\n# \tcd ..\n#  bump dependency version below to trigger a dependency rebuild\n#  but not a full one (via --no-cache)\nENV RSYSLOG_DEP_VERSION=\"2018-09-16\"\n#  libestr - currently, not needed, we use from offical repo (unlikely to change)\n# RUN\tcd helper-projects && \\\n# \tgit clone https://github.com/rsyslog/libestr.git && \\\n# \tcd libestr && \\\n# \tautoreconf -fi && ./configure --libdir=/usr/lib64 --prefix=/usr && \\\n# \tmake -j4 && \\\n# \tmake install && \\\n# \tcd .. && \\\n# \trm -r libestr && \\\n# \tcd ..\n#  liblogging\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblogging.git \\\n && cd liblogging \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-journal \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblogging \\\n && cd ..\n#  liblfastjson\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/libfastjson.git \\\n && cd libfastjson \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r libfastjson \\\n && cd ..\n#  liblognorm\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblognorm.git \\\n && cd liblognorm \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblognorm \\\n && cd ..\n#  librelp\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/librelp.git \\\n && cd librelp \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --enable-compile-warnings=yes --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r librelp \\\n && cd ..\n#  next ENV is specifically for running scan-build - so we do not need to\n#  change scripts if at a later time we can move on to a newer version\nENV SCAN_BUILD=\"scan-build\" \\\n    SCAN_BUILD_CC=\"clang-5.0\"\nENV RSYSLOG_CONFIGURE_OPTIONS=\"--enable-elasticsearch  --enable-elasticsearch-tests  --enable-gnutls  --enable-gssapi-krb5  --enable-imbatchreport  --disable-imczmq  --enable-imdiag  --enable-imfile  --enable-imjournal  --disable-imkafka  --enable-impstats  --enable-improg  --enable-imptcp  --enable-impcap  --enable-imtuxedolog  --disable-kafka-tests  --disable-kmsg  --enable-ksi-ls12  --enable-libdbi  --enable-libfaketime  --enable-libgcrypt  --enable-mail  --enable-mmanon  --enable-mmaudit  --enable-mmcount  --disable-mmdblookup  --enable-mmfields  --enable-mmgrok  --enable-mmjsonparse  --enable-mmkubernetes  --enable-mmnormalize  --enable-mmpstrucdata  --enable-mmrm1stspace  --enable-mmsequence  --enable-mmsnmptrapd  --enable-mmtaghostname  --enable-mmutf8fix  --enable-mysql  --disable-omamqp1  --disable-omczmq  --enable-omhiredis  --enable-omhttpfs  --enable-omjournal  --disable-omkafka  --disable-ommongodb  --enable-omprog  --enable-omrelp-default-port=13515  --enable-omruleset  --enable-omstdout  --enable-omtcl  --enable-omudpspoof  --enable-omuxsock  --enable-openssl  --enable-pgsql  --enable-pmaixforwardedfrom  --enable-pmciscoios  --enable-pmcisconames  --enable-pmdb2diag  --enable-pmlastmsg  --enable-pmnormalize  --enable-pmnull  --enable-pmsnare  --enable-relp  --enable-snmp  --enable-usertools  --enable-valgrind  --enable-testbench\"\nWORKDIR /rsyslog\nUSER rsyslog\n","injectedSmells":[],"originalDockerfileHash":"77666a778560b7a178572992496d5e00","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   container for rsyslog development\n#   creates the build environment\nFROM debian:8\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get upgrade -y\nRUN apt-get install autoconf autoconf-archive automake autotools-dev bison clang curl default-jdk faketime flex gdb git libcurl4-gnutls-dev libdbd-mysql libdbi-dev libgcrypt11-dev libglib2.0-dev libgnutls28-dev libgrok1 libgrok-dev libhiredis-dev libkrb5-dev liblz4-dev libmysqlclient-dev libnet1-dev libpcap-dev libpq-dev libsasl2-dev libsnmp-dev libssl-dev libsystemd-dev libtokyocabinet-dev libtool mysql-server net-tools pkg-config postgresql-client python-docutils python-software-properties software-properties-common tcl-dev uuid-dev valgrind vim wget zlib1g-dev -y\n#  \tlibbson-dev\n#  \tlibmaxminddb-dev \n#  \tlibmongoc-dev \n#  RUN     add-apt-repository ppa:adiscon/v8-stable -y && \\\n#  \tadd-apt-repository ppa:qpid/released -y && \\\n#  \tadd-apt-repository ppa:ubuntu-toolchain-r/test -y && \\\n#  \techo \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main\" > /etc/apt/sources.list.d/llvm.list && \\\n#  \twget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - && \\\n#  \techo \"deb http://download.opensuse.org/repositories/network:/messaging:/zeromq:/git-draft/xUbuntu_16.04/ ./\" > /etc/apt/sources.list.d/0mq.list && \\\n#  \twget -O - http://download.opensuse.org/repositories/network:/messaging:/zeromq:/git-draft/xUbuntu_16.04/Release.key | apt-key add -\n#   note: ppa:ubuntu-toolchain-r/test is currently the best repo for gcc-7 we can find...\nRUN apt-get update -y \\\n && apt-get install libestr-dev libsodium-dev -y\n#  \tclang-tools-5.0 \n#  \tlibfastjson-dev \n#  \tlibczmq-dev \n#  \tclang-5.0 \n#  \tgcc-7 \n#  \tlibqpid-proton10-dev \nWORKDIR /home/devel\nRUN groupadd rsyslog \\\n && useradd -g rsyslog -s /bin/bash rsyslog \\\n && echo \"rsyslog ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nRUN mkdir /rsyslog \\\n && chown rsyslog:rsyslog /rsyslog\nVOLUME /rsyslog\nENV PKG_CONFIG_PATH=\"/usr/lib64/pkgconfig\" \\\n    xLD_LIBRARY_PATH=\"/usr/lib\" \\\n    DEBIAN_FRONTEND=\"\"\n#   create dependency cache\nRUN mkdir /local_dep_cache \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.9.tar.gz -O /local_dep_cache/elasticsearch-5.6.9.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.tar.gz -O /local_dep_cache/elasticsearch-6.0.0.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.tar.gz -O /local_dep_cache/elasticsearch-6.3.1.tar.gz\n#   tell tests which are the newester versions, so they can be checked without the need\n#   to adjust test sources.\nENV ELASTICSEARCH_NEWEST=\"elasticsearch-6.3.1.tar.gz\"\n#   bump dependency version below to trigger a dependency rebuild\n#   but not a full one (via --no-cache)\nENV DEP_VERSION=\"1\"\n#   Helper projects and dependency build starts here\nRUN mkdir helper-projects\n#   code style checker - not yet packaged\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/codestyle \\\n && cd codestyle \\\n && gcc --std=c99 stylecheck.c -o stylecheck \\\n && mv stylecheck /usr/bin/rsyslog_stylecheck \\\n && cd .. \\\n && rm -r codestyle \\\n && cd ..\n#   we need Guardtime libksi here, otherwise we cannot check the KSI component\t\nRUN cd helper-projects \\\n && git clone https://github.com/guardtime/libksi.git \\\n && cd libksi \\\n && autoreconf -fvi \\\n && ./configure --libdir=/usr/lib64 \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && rm -r libksi \\\n && cd ..\n#  RUN\tapt-get install -y \\\n#  \tliblz4-dev\n#   we need the latest librdkafka as there as always required updates\n#  RUN\tcd helper-projects && \\\n#  \tgit clone https://github.com/edenhill/librdkafka && \\\n#  \tcd librdkafka && \\\n#  \t(unset CFLAGS; ./configure --prefix=/usr --libdir=/usr/lib64 --CFLAGS=\"-g\" ; make -j) && \\\n#  \tmake install && \\\n#  \tcd .. && \\\n#   Note: we do NOT delete the source as we may need it to\n#   uninstall (in case the user wants to go back to system-default)\n#  \tcd ..\n#   libmongoc is unfortunately not available on openSuse - later?\n#  RUN\tcd helper-projects && \\\n#  \twget -nv https://github.com/mongodb/mongo-c-driver/releases/download/1.12.0/mongo-c-driver-1.12.0.tar.gz && \\\n#  \ttar xzf mongo-c-driver-1.12.0.tar.gz && \\\n#  \tcd mongo-c-driver-1.12.0 && \\\n#  \tmkdir cmake-build && \\\n#  \tcmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF && \\\n#  \tmake -j4 && \\\n#  \tmake install && \\\n#  \tcd .. && \\\n#  \trm -r mongo-c-driver-1.12.0* && \\\n#  \tcd ..\n#   bump dependency version below to trigger a dependency rebuild\n#   but not a full one (via --no-cache)\nENV RSYSLOG_DEP_VERSION=\"2018-09-16\"\n#   libestr - currently, not needed, we use from offical repo (unlikely to change)\n#  RUN\tcd helper-projects && \\\n#  \tgit clone https://github.com/rsyslog/libestr.git && \\\n#  \tcd libestr && \\\n#  \tautoreconf -fi && ./configure --libdir=/usr/lib64 --prefix=/usr && \\\n#  \tmake -j4 && \\\n#  \tmake install && \\\n#  \tcd .. && \\\n#  \trm -r libestr && \\\n#  \tcd ..\n#   liblogging\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblogging.git \\\n && cd liblogging \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-journal \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblogging \\\n && cd ..\n#   liblfastjson\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/libfastjson.git \\\n && cd libfastjson \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r libfastjson \\\n && cd ..\n#   liblognorm\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblognorm.git \\\n && cd liblognorm \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblognorm \\\n && cd ..\n#   librelp\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/librelp.git \\\n && cd librelp \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --enable-compile-warnings=yes --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r librelp \\\n && cd ..\n#   next ENV is specifically for running scan-build - so we do not need to\n#   change scripts if at a later time we can move on to a newer version\nENV SCAN_BUILD=\"scan-build\" \\\n    SCAN_BUILD_CC=\"clang-5.0\"\nENV RSYSLOG_CONFIGURE_OPTIONS=\"--enable-elasticsearch  --enable-elasticsearch-tests  --enable-gnutls  --enable-gssapi-krb5  --enable-imbatchreport  --disable-imczmq  --enable-imdiag  --enable-imfile  --enable-imjournal  --disable-imkafka  --enable-impstats  --enable-improg  --enable-imptcp  --enable-impcap  --enable-imtuxedolog  --disable-kafka-tests  --disable-kmsg  --enable-ksi-ls12  --enable-libdbi  --enable-libfaketime  --enable-libgcrypt  --enable-mail  --enable-mmanon  --enable-mmaudit  --enable-mmcount  --disable-mmdblookup  --enable-mmfields  --enable-mmgrok  --enable-mmjsonparse  --enable-mmkubernetes  --enable-mmnormalize  --enable-mmpstrucdata  --enable-mmrm1stspace  --enable-mmsequence  --enable-mmsnmptrapd  --enable-mmtaghostname  --enable-mmutf8fix  --enable-mysql  --disable-omamqp1  --disable-omczmq  --enable-omhiredis  --enable-omhttpfs  --enable-omjournal  --disable-omkafka  --disable-ommongodb  --enable-omprog  --enable-omrelp-default-port=13515  --enable-omruleset  --enable-omstdout  --enable-omtcl  --enable-omudpspoof  --enable-omuxsock  --enable-openssl  --enable-pgsql  --enable-pmaixforwardedfrom  --enable-pmciscoios  --enable-pmcisconames  --enable-pmdb2diag  --enable-pmlastmsg  --enable-pmnormalize  --enable-pmnull  --enable-pmsnare  --enable-relp  --enable-snmp  --enable-usertools  --enable-valgrind  --enable-testbench\"\nWORKDIR /rsyslog\nUSER rsyslog\n","originalDockerfileUglifiedHash":"b18187f667568cc157210d5635352f20","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ffd36d6d1aefb5b9c87059033173f60a1ecacfc2.dockerfile"}