{"seed":389773984,"processedDockerfileHash":"d00d18042192ae0c82b99809dbb37b4d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#\n#   Docker file that builds RelEx and starts the RelEx server.\n#\n#   To build:\n#      docker build -t relex/relex .\n#\n#   To start:\n#      docker run -p 3333:3333 relex/relex /bin/sh plain-text-server.sh\n#\n#   Or alternately, this:\n#      docker run -p 4444:4444 relex/relex /bin/sh opencog-server.sh\n#\n#      docker run -p 9000:9000 relex/relex /bin/sh link-grammar-server.sh\n#\n#   To demo:\n#      telnet localhost 4444\n#      This is a test sentence!\n#\n#   That is, after connecting by telnet, type in any sentence, ending\n#   with a period, and hit enter.  The response returned will be the\n#   parse of the sentence, in opencog scheme format.\n#\nFROM ubuntu:16.04\n#   Avoid triggering apt-get dialogs (which may lead to errors). See:\n#   https://stackoverflow.com/questions/25019183/docker-java7-install-fail\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.9.0-openjdk-amd64\"\nRUN : ; apt-get -y upgrade ; apt-get -y autoclean\n#   Java\nRUN (apt-get update ;apt-get install --no-install-recommends maven=3.3.9-3 screen=4.3.1-2ubuntu0.1 telnet=0.17-40 netcat-openbsd=1.105-7ubuntu1 byobu=5.106-0ubuntu1 wget=1.17.1-1ubuntu1.5 vim=2:7.4.1689-3ubuntu1.5 git=1:2.7.4-0ubuntu1.10 unzip=6.0-20ubuntu1.1 sudo=1.8.16-0ubuntu1.10 apt-utils=1.2.35 -y )\n#   incorrect packaging in ubuntu-xenial\n#   dpkg: error processing archive /var/cache/apt/archives/openjdk-9-jdk_9~b114-0ubuntu1_amd64.deb (--unpack):\n#   trying to overwrite '/usr/lib/jvm/java-9-openjdk-amd64/include/linux/jawt_md.h', which is also in package openjdk-9-jdk-headless:amd64 9~b114-0ubuntu1\nRUN apt-get -o Dpkg::Options::=\"--force-overwrite\" -y install openjdk-9-jdk\n#   GCC and basic build tools\nRUN (apt-get update ;apt-get install --no-install-recommends gcc=4:5.3.1-1ubuntu1 g++=4:5.3.1-1ubuntu1 make=4.1-6 -y )\n#   Wordnet\nRUN (apt-get update ;apt-get install --no-install-recommends wordnet=1:3.0-33 wordnet-dev=1:3.0-33 wordnet-sense-index=1:3.0-33 -y )\n#   There are UTF8 chars in the Java sources, and the RelEx build will\n#   break if build in a C environment.\nRUN (apt-get update ;apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 -y ) \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN mkdir /usr/local/share/java\nWORKDIR /home/Downloads/\n#   JWNL - Never changes, so do this first.\nRUN wget https://downloads.sourceforge.net/project/jwordnet/jwnl/JWNL%201.4/jwnl14-rc2.zip \\\n && unzip jwnl14-rc2.zip ; cd jwnl14-rc2 ; cp jwnl.jar /usr/local/share/java/ ; chmod 755 /usr/local/share/java/jwnl.jar ; cd .. ; rm -rf jwnl*\n#   OpenNLP - Never changes, so do this first.\nRUN wget https://archive.apache.org/dist/opennlp/opennlp-1.5.3/apache-opennlp-1.5.3-bin.tar.gz \\\n && tar -zxf apache-opennlp-1.5.3-bin.tar.gz ; cd apache-opennlp-1.5.3 ; cp lib/*.jar /usr/local/share/java/ ; cp lib/*.jar /usr/share/java/ ; cp lib/opennlp-tools-1.5.3.jar /usr/local/share/java/opennlp-tools-1.5.0.jar ; cd .. ; rm -rf apache-opennlp*\n#   Link Parser -- changes often\n#   Download the current released version of link-grammar.\n#   The wget gets the latest version w/ wildcard\nRUN wget -r --no-parent -nH --cut-dirs=2 https://www.abisource.com/downloads/link-grammar/current/\nRUN tar -zxf current/link-grammar-5*.tar.gz\n#   get linkgrammar version\nRUN bash -l -c 'echo `ls|grep link|sed 's/link-grammar-//g'` >> LINKGRAMMAR_VERSION'\nRUN cd link-grammar-5.*/ ; ./configure ; make -j6 ; sudo make install ; ldconfig\nRUN cd link-grammar-5.*/ ; mvn install:install-file -Dfile=./bindings/java/linkgrammar-`cat ../LINKGRAMMAR_VERSION `.jar -DgroupId=org.opencog -DartifactId=linkgrammar -Dversion=`cat ../LINKGRAMMAR_VERSION ` -Dpackaging=jar\nRUN rm -rf * link-grammar*\n#   Relex -- changes often\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document master.tar.gz https://github.com/opencog/relex/archive/master.tar.gz\nRUN tar -xvf master.tar.gz ; cd relex-master ; mvn install\n#   Create and switch user. The user is privileged, with no password\n#   required.  That is, you can use sudo.\nRUN adduser --disabled-password --gecos \"ReLex USER\" relex\nRUN adduser relex sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER relex\nRUN sudo chown -R relex:relex .\n#   Punch out ports\n#  # plain-text-server.sh port\nEXPOSE 3333/tcp\n#  # opencog-server.sh port\nEXPOSE 4444/tcp\n#  # link-grammar-server.sh port\nEXPOSE 9000/tcp\nWORKDIR /home/Downloads/relex-master/\nCMD /bin/bash\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Docker file that builds RelEx and starts the RelEx server.\n#\n#  To build:\n#     docker build -t relex/relex .\n#\n#  To start:\n#     docker run -p 3333:3333 relex/relex /bin/sh plain-text-server.sh\n#\n#  Or alternately, this:\n#     docker run -p 4444:4444 relex/relex /bin/sh opencog-server.sh\n#\n#     docker run -p 9000:9000 relex/relex /bin/sh link-grammar-server.sh\n#\n#  To demo:\n#     telnet localhost 4444\n#     This is a test sentence!\n#\n#  That is, after connecting by telnet, type in any sentence, ending\n#  with a period, and hit enter.  The response returned will be the\n#  parse of the sentence, in opencog scheme format.\n#\nFROM ubuntu:16.04\n#  Avoid triggering apt-get dialogs (which may lead to errors). See:\n#  https://stackoverflow.com/questions/25019183/docker-java7-install-fail\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.9.0-openjdk-amd64\"\nRUN apt-get update ; apt-get -y upgrade ; apt-get -y autoclean\n#  Java\nRUN apt-get install maven screen telnet netcat-openbsd byobu wget vim git unzip sudo apt-utils -y\n#  incorrect packaging in ubuntu-xenial\n#  dpkg: error processing archive /var/cache/apt/archives/openjdk-9-jdk_9~b114-0ubuntu1_amd64.deb (--unpack):\n#  trying to overwrite '/usr/lib/jvm/java-9-openjdk-amd64/include/linux/jawt_md.h', which is also in package openjdk-9-jdk-headless:amd64 9~b114-0ubuntu1\nRUN apt-get -o Dpkg::Options::=\"--force-overwrite\" -y install openjdk-9-jdk\n#  GCC and basic build tools\nRUN apt-get install gcc g++ make -y\n#  Wordnet\nRUN apt-get install wordnet wordnet-dev wordnet-sense-index -y\n#  There are UTF8 chars in the Java sources, and the RelEx build will\n#  break if build in a C environment.\nRUN apt-get install locales -y \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN mkdir /usr/local/share/java\nWORKDIR /home/Downloads/\n#  JWNL - Never changes, so do this first.\nRUN wget https://downloads.sourceforge.net/project/jwordnet/jwnl/JWNL%201.4/jwnl14-rc2.zip \\\n && unzip jwnl14-rc2.zip ; cd jwnl14-rc2 ; cp jwnl.jar /usr/local/share/java/ ; chmod 755 /usr/local/share/java/jwnl.jar ; cd .. ; rm -rf jwnl*\n#  OpenNLP - Never changes, so do this first.\nRUN wget https://archive.apache.org/dist/opennlp/opennlp-1.5.3/apache-opennlp-1.5.3-bin.tar.gz \\\n && tar -zxf apache-opennlp-1.5.3-bin.tar.gz ; cd apache-opennlp-1.5.3 ; cp lib/*.jar /usr/local/share/java/ ; cp lib/*.jar /usr/share/java/ ; cp lib/opennlp-tools-1.5.3.jar /usr/local/share/java/opennlp-tools-1.5.0.jar ; cd .. ; rm -rf apache-opennlp*\n#  Link Parser -- changes often\n#  Download the current released version of link-grammar.\n#  The wget gets the latest version w/ wildcard\nRUN wget -r --no-parent -nH --cut-dirs=2 https://www.abisource.com/downloads/link-grammar/current/\nRUN tar -zxf current/link-grammar-5*.tar.gz\n#  get linkgrammar version\nRUN bash -l -c 'echo `ls|grep link|sed 's/link-grammar-//g'` >> LINKGRAMMAR_VERSION'\nRUN cd link-grammar-5.*/ ; ./configure ; make -j6 ; sudo make install ; ldconfig\nRUN cd link-grammar-5.*/ ; mvn install:install-file -Dfile=./bindings/java/linkgrammar-`cat ../LINKGRAMMAR_VERSION `.jar -DgroupId=org.opencog -DartifactId=linkgrammar -Dversion=`cat ../LINKGRAMMAR_VERSION ` -Dpackaging=jar\nRUN rm -rf * link-grammar*\n#  Relex -- changes often\nADD https://github.com/opencog/relex/archive/master.tar.gz master.tar.gz\nRUN tar -xvf master.tar.gz ; cd relex-master ; mvn install\n#  Create and switch user. The user is privileged, with no password\n#  required.  That is, you can use sudo.\nRUN adduser --disabled-password --gecos \"ReLex USER\" relex\nRUN adduser relex sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER relex\nRUN sudo chown -R relex:relex .\n#  Punch out ports\n# # plain-text-server.sh port\nEXPOSE 3333/tcp\n# # opencog-server.sh port\nEXPOSE 4444/tcp\n# # link-grammar-server.sh port\nEXPOSE 9000/tcp\nWORKDIR /home/Downloads/relex-master/\nCMD /bin/bash\n","injectedSmells":[],"originalDockerfileHash":"eeb5f2b4f3962ac136094d5b173b7aa0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Docker file that builds RelEx and starts the RelEx server.\n#\n#   To build:\n#      docker build -t relex/relex .\n#\n#   To start:\n#      docker run -p 3333:3333 relex/relex /bin/sh plain-text-server.sh\n#\n#   Or alternately, this:\n#      docker run -p 4444:4444 relex/relex /bin/sh opencog-server.sh\n#\n#      docker run -p 9000:9000 relex/relex /bin/sh link-grammar-server.sh\n#\n#   To demo:\n#      telnet localhost 4444\n#      This is a test sentence!\n#\n#   That is, after connecting by telnet, type in any sentence, ending\n#   with a period, and hit enter.  The response returned will be the\n#   parse of the sentence, in opencog scheme format.\n#\nFROM ubuntu:16.04\n#   Avoid triggering apt-get dialogs (which may lead to errors). See:\n#   https://stackoverflow.com/questions/25019183/docker-java7-install-fail\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.9.0-openjdk-amd64\"\nRUN apt-get update ; apt-get -y upgrade ; apt-get -y autoclean\n#   Java\nRUN apt-get install maven screen telnet netcat-openbsd byobu wget vim git unzip sudo apt-utils -y\n#   incorrect packaging in ubuntu-xenial\n#   dpkg: error processing archive /var/cache/apt/archives/openjdk-9-jdk_9~b114-0ubuntu1_amd64.deb (--unpack):\n#   trying to overwrite '/usr/lib/jvm/java-9-openjdk-amd64/include/linux/jawt_md.h', which is also in package openjdk-9-jdk-headless:amd64 9~b114-0ubuntu1\nRUN apt-get -o Dpkg::Options::=\"--force-overwrite\" -y install openjdk-9-jdk\n#   GCC and basic build tools\nRUN apt-get install gcc g++ make -y\n#   Wordnet\nRUN apt-get install wordnet wordnet-dev wordnet-sense-index -y\n#   There are UTF8 chars in the Java sources, and the RelEx build will\n#   break if build in a C environment.\nRUN apt-get install locales -y \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN mkdir /usr/local/share/java\nWORKDIR /home/Downloads/\n#   JWNL - Never changes, so do this first.\nRUN wget https://downloads.sourceforge.net/project/jwordnet/jwnl/JWNL%201.4/jwnl14-rc2.zip \\\n && unzip jwnl14-rc2.zip ; cd jwnl14-rc2 ; cp jwnl.jar /usr/local/share/java/ ; chmod 755 /usr/local/share/java/jwnl.jar ; cd .. ; rm -rf jwnl*\n#   OpenNLP - Never changes, so do this first.\nRUN wget https://archive.apache.org/dist/opennlp/opennlp-1.5.3/apache-opennlp-1.5.3-bin.tar.gz \\\n && tar -zxf apache-opennlp-1.5.3-bin.tar.gz ; cd apache-opennlp-1.5.3 ; cp lib/*.jar /usr/local/share/java/ ; cp lib/*.jar /usr/share/java/ ; cp lib/opennlp-tools-1.5.3.jar /usr/local/share/java/opennlp-tools-1.5.0.jar ; cd .. ; rm -rf apache-opennlp*\n#   Link Parser -- changes often\n#   Download the current released version of link-grammar.\n#   The wget gets the latest version w/ wildcard\nRUN wget -r --no-parent -nH --cut-dirs=2 https://www.abisource.com/downloads/link-grammar/current/\nRUN tar -zxf current/link-grammar-5*.tar.gz\n#   get linkgrammar version\nRUN bash -l -c 'echo `ls|grep link|sed 's/link-grammar-//g'` >> LINKGRAMMAR_VERSION'\nRUN cd link-grammar-5.*/ ; ./configure ; make -j6 ; sudo make install ; ldconfig\nRUN cd link-grammar-5.*/ ; mvn install:install-file -Dfile=./bindings/java/linkgrammar-`cat ../LINKGRAMMAR_VERSION `.jar -DgroupId=org.opencog -DartifactId=linkgrammar -Dversion=`cat ../LINKGRAMMAR_VERSION ` -Dpackaging=jar\nRUN rm -rf * link-grammar*\n#   Relex -- changes often\nADD https://github.com/opencog/relex/archive/master.tar.gz master.tar.gz\nRUN tar -xvf master.tar.gz ; cd relex-master ; mvn install\n#   Create and switch user. The user is privileged, with no password\n#   required.  That is, you can use sudo.\nRUN adduser --disabled-password --gecos \"ReLex USER\" relex\nRUN adduser relex sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER relex\nRUN sudo chown -R relex:relex .\n#   Punch out ports\n#  # plain-text-server.sh port\nEXPOSE 3333/tcp\n#  # opencog-server.sh port\nEXPOSE 4444/tcp\n#  # link-grammar-server.sh port\nEXPOSE 9000/tcp\nWORKDIR /home/Downloads/relex-master/\nCMD /bin/bash\n","originalDockerfileUglifiedHash":"04bfedb2a804af9f928048f0b8607881","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1026df2383a63195db223e3cbeac6790ca0c47a0.dockerfile"}