{"seed":3744248464,"processedDockerfileHash":"767261c834314d68b08da54b605fae93","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Ramiro Salas <rsalas@pivotal.io>\nENV HOME=\"/home/ops\"\nENV ENAML=\"/opt/enaml\"\nENV OMG_PLUGIN_DIR=\"$ENAML/plugins\"\nENV OMGBIN=\"$ENAML/bin\"\nENV CFPLUGINS=\"/opt/cf-plugins\"\nENV GOPATH=\"/opt/go\"\nENV GOBIN=\"/opt/go/bin\"\nENV PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$HOME/bin:/usr/local/go/bin:$GOBIN:$OMGBIN\"\nCOPY update_enaml.sh /usr/local/bin\nRUN mkdir -p $HOME\nRUN mkdir -p $ENAML\nRUN mkdir -p $GOBIN\nRUN mkdir -p $CFPLUGINS\nRUN mkdir -p $OMG_PLUGIN_DIR\nRUN groupadd -g 9024 ops\nRUN useradd --shell /bin/bash -u 9024 -g 9024 -o -c \"\" -M -d $HOME ops\nVOLUME $HOME\nRUN chown -R ops:ops $HOME\nWORKDIR $HOME\nRUN mkdir -p $HOME/bin\nRUN cp -n /etc/skel/.[a-z]* .\nRUN cat /etc/apt/sources.list | sed 's/archive/us.archive/g' > /tmp/s \\\n && mv /tmp/s /etc/apt/sources.list\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 curl=7.47.0-1ubuntu2.19 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends ruby=1:2.3.0+1 libroot-bindings-ruby-dev=5.34.30-0ubuntu8 build-essential=12.1ubuntu2 git=1:2.7.4-0ubuntu1.10 ssh=1:7.2p2-4ubuntu2.10 zip=3.0-11 software-properties-common=0.96.20.10 dnsutils=1:9.10.3.dfsg.P4-8ubuntu1.19 iputils-ping=3:20121221-5ubuntu2 traceroute=1:2.0.21-1 jq=1.5+dfsg-1ubuntu0.1 vim=2:7.4.1689-3ubuntu1.5 wget=1.17.1-1ubuntu1.5 unzip=6.0-20ubuntu1.1 sudo=1.8.16-0ubuntu1.10 iperf=2.0.5+dfsg1-2ubuntu0.1 screen=4.3.1-2ubuntu0.1 tmux=2.1-3build1 file=1:5.25-2ubuntu1.4 openstack=1.0.7.16.04.1 tcpdump=4.9.3-0ubuntu0.16.04.1 nmap=7.01-2ubuntu2 less=481-2.1ubuntu0.2 s3cmd=1.6.1-1 s3curl=1.0.0-1 direnv=2.7.0-1 netcat=1.10-41 npm=3.5.2-0ubuntu4 nodejs-legacy=4.2.6~dfsg-1ubuntu4.2 python3-pip=8.1.1-2ubuntu0.6 python3-setuptools=20.7.0-1 apt-utils=1.2.35 libdap-bin=3.15.1-7 mysql-client=5.7.33-0ubuntu0.16.04.1 mongodb-clients=1:2.6.10-0ubuntu1 postgresql-client-9.5=9.5.25-0ubuntu0.16.04.1 redis-tools=2:3.0.6-1ubuntu0.4 libpython2.7-dev=2.7.12-1ubuntu0~16.04.18 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libxslt-dev -y )\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-xenial main\" | tee /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\nRUN : \\\n && sudo apt-get -y --no-install-recommends install google-cloud-sdk\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python2.7 ./get-pip.py \\\n && rm -f python2.7 ./get-pip.py\nRUN pip3 install --upgrade pip\nRUN pip3 install awscli\nRUN npm install azure-cli@0.10.20 -g\nRUN curl -L \"https://cli.run.pivotal.io/stable?release=linux64-binary&source=github\" | tar -C /usr/local/bin -zx\nRUN wget $( wget -O- -q https://www.vaultproject.io/downloads.html | grep linux_amd | awk -F \"\\\"\" '{print$2}' ;) -O vault.zip \\\n && unzip vault.zip \\\n && cp vault /usr/local/bin/vault\nRUN chmod 755 /usr/local/bin/vault\nRUN cd /usr/local/bin/ \\\n && curl -o terraform.zip \"https://releases.hashicorp.com/terraform/0.9.11/terraform_0.9.11_linux_amd64.zip\" \\\n && unzip terraform.zip \\\n && rm -f terraform.zip\nRUN gem install cf-uaac --version 4.14.0 --no-rdoc --no-ri\nRUN cd /usr/local/bin \\\n && wget -q -O om \"$( curl -s https://api.github.com/repos/pivotal-cf/om/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x om\nRUN cd /usr/local/bin \\\n && wget -q -O fly \"$( curl -s https://api.github.com/repos/concourse/fly/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x fly\nRUN cd /usr/local/bin \\\n && wget -q -O magnet \"$( curl -s https://api.github.com/repos/pivotalservices/magnet/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x magnet\nRUN cd /usr/local/bin \\\n && wget -q -O bosh https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-2.0.28-linux-amd64 \\\n && chmod 0755 bosh \\\n && ln -s bosh bosh2\nRUN cd /usr/local/bin \\\n && wget -q -O omg-transform \"$( curl -s https://api.github.com/repos/enaml-ops/omg-transform/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep omg-transform-linux ;)\" \\\n && chmod +x omg-transform\nRUN cd /usr/local/bin \\\n && wget -q -O pivnet \"$( curl -s https://api.github.com/repos/pivotal-cf/pivnet-cli/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x pivnet\nRUN cd /usr/local/bin \\\n && wget -q -O bbl \"$( curl -s https://api.github.com/repos/cloudfoundry/bosh-bootloader/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x bbl\nRUN cd /usr/local/bin \\\n && wget -q -O cfops \"$( curl -s https://api.github.com/repos/pivotalservices/cfops/releases/latest | jq --raw-output '.assets[] | .browser_download_url' ;)\" \\\n && chmod +x cfops\nRUN cd /usr/local/bin \\\n && wget -q -O spiff https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0.8/spiff_linux_amd64.zip \\\n && chmod +x spiff\nRUN cd /usr/local/bin \\\n && wget -q -O spruce \"$( curl -s https://api.github.com/repos/geofffranks/spruce/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x spruce\nRUN cd /usr/local/bin \\\n && wget -q -O safe \"$( curl -s https://api.github.com/repos/starkandwayne/safe/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x safe\nRUN cd /usr/local/bin \\\n && wget -q -O asg-creator \"$( curl -s https://api.github.com/repos/cloudfoundry-incubator/asg-creator/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x asg-creator\nRUN cd /usr/local/bin \\\n && wget -q -O cf-mgmt \"$( curl -s https://api.github.com/repos/pivotalservices/cf-mgmt/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x cf-mgmt\nRUN curl \"https://raw.githubusercontent.com/starkandwayne/genesis/master/bin/genesis\" > /usr/bin/genesis \\\n && chmod 0755 /usr/bin/genesis\n#   Thanks to Merlin Glynn for the Photon part!\nRUN baseURL=$( wget -q -O- https://github.com/vmware/photon-controller/releases/ | grep -m 1 photon-linux | perl -ne 'print map(\"$_\\n\", m/href=\\\".*?\\\"/g)' | tr -d '\"' | awk -F \"href=\" '{print$2}' ;) \\\n && wget https://github.com$baseURL -O /usr/local/bin/photon\nRUN chmod 755 /usr/local/bin/photon\nRUN cd /usr/local/bin \\\n && wget -q -O cliaas \"$( curl -s https://api.github.com/repos/pivotal-cf/cliaas/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x cliaas\nRUN cd /usr/local/bin \\\n && wget -q -O - https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/1.2.0/credhub-linux-1.2.0.tgz | tar xzf - > credhub \\\n && chmod 0755 credhub\nRUN cd /usr/local/bin \\\n && curl -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl \\\n && chmod 0755 kubectl\nRUN cd $CFPLUGINS \\\n && wget -q -O autopilot \"$( curl -s https://api.github.com/repos/xchapter7x/autopilot/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x autopilot\nRUN cd $CFPLUGINS \\\n && wget -q -O cf-mysql-plugin https://github.com/andreasf/cf-mysql-plugin/releases/download/v1.4.0/cf-mysql-plugin-linux-amd64 \\\n && chmod 0755 ./cf-mysql-plugin\nRUN cd $CFPLUGINS \\\n && wget -q -O cf-service-connect https://github.com/18F/cf-service-connect/releases/download/1.1.0/cf-service-connect.linux64 \\\n && chmod 0755 ./cf-service-connect\nRUN cd /usr/local/bin \\\n && wget -q -O goblob \"$( curl -s https://api.github.com/repos/pivotal-cf/goblob/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x goblob\nRUN git clone https://github.com/cf-platform-eng/nsx-edge-gen.git \\\n && pip2 install -r nsx-edge-gen/requirements.txt \\\n && pip2 install tabulate pynsxv \\\n && mv nsx-edge-gen /opt\nRUN pip2 install tile-generator\nRUN mkdir -p .bucc \\\n && git clone https://github.com/starkandwayne/bucc.git \\\n && ln -s $HOME/.bucc/bucc/bin/bucc /usr/local/bin/bucc\nCOPY firstrun.sh /usr/local/bin\nCOPY add_go.sh /usr/local/bin\nCOPY add_extras.sh /usr/local/bin\nRUN chown -R ops:ops /opt $HOME $GOBIN $GOPATH\nRUN apt-get -y autoremove \\\n && apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/log/*\nRUN echo \"ops ALL=NOPASSWD: ALL\" >> /etc/sudoers\nUSER ops\nCMD [\"/bin/bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Ramiro Salas <rsalas@pivotal.io>\nENV HOME=\"/home/ops\"\nENV ENAML=\"/opt/enaml\"\nENV OMG_PLUGIN_DIR=\"$ENAML/plugins\"\nENV OMGBIN=\"$ENAML/bin\"\nENV CFPLUGINS=\"/opt/cf-plugins\"\nENV GOPATH=\"/opt/go\"\nENV GOBIN=\"/opt/go/bin\"\nENV PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$HOME/bin:/usr/local/go/bin:$GOBIN:$OMGBIN\"\nADD update_enaml.sh /usr/local/bin\nRUN mkdir -p $HOME\nRUN mkdir -p $ENAML\nRUN mkdir -p $GOBIN\nRUN mkdir -p $CFPLUGINS\nRUN mkdir -p $OMG_PLUGIN_DIR\nRUN groupadd -g 9024 ops\nRUN useradd --shell /bin/bash -u 9024 -g 9024 -o -c \"\" -M -d $HOME ops\nVOLUME $HOME\nRUN chown -R ops:ops $HOME\nWORKDIR $HOME\nRUN mkdir -p $HOME/bin\nRUN cp -n /etc/skel/.[a-z]* .\nRUN cat /etc/apt/sources.list | sed 's/archive/us.archive/g' > /tmp/s \\\n && mv /tmp/s /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget curl -y\nRUN apt-get install --no-install-recommends ruby libroot-bindings-ruby-dev build-essential git ssh zip software-properties-common dnsutils iputils-ping traceroute jq vim wget unzip sudo iperf screen tmux file openstack tcpdump nmap less s3cmd s3curl direnv netcat npm nodejs-legacy python3-pip python3-setuptools apt-utils libdap-bin mysql-client mongodb-clients postgresql-client-9.5 redis-tools libpython2.7-dev libxml2-dev libxslt-dev -y\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-xenial main\" | tee /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\nRUN apt-get update \\\n && sudo apt-get -y --no-install-recommends install google-cloud-sdk\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python2.7 ./get-pip.py \\\n && rm -f python2.7 ./get-pip.py\nRUN pip3 install --upgrade pip\nRUN pip3 install awscli\nRUN npm install azure-cli -g\nRUN curl -L \"https://cli.run.pivotal.io/stable?release=linux64-binary&source=github\" | tar -C /usr/local/bin -zx\nRUN wget $( wget -O- -q https://www.vaultproject.io/downloads.html | grep linux_amd | awk -F \"\\\"\" '{print$2}' ;) -O vault.zip \\\n && unzip vault.zip \\\n && cp vault /usr/local/bin/vault\nRUN chmod 755 /usr/local/bin/vault\nRUN cd /usr/local/bin/ \\\n && curl -o terraform.zip \"https://releases.hashicorp.com/terraform/0.9.11/terraform_0.9.11_linux_amd64.zip\" \\\n && unzip terraform.zip \\\n && rm -f terraform.zip\nRUN gem install cf-uaac --no-rdoc --no-ri\nRUN cd /usr/local/bin \\\n && wget -q -O om \"$( curl -s https://api.github.com/repos/pivotal-cf/om/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x om\nRUN cd /usr/local/bin \\\n && wget -q -O fly \"$( curl -s https://api.github.com/repos/concourse/fly/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x fly\nRUN cd /usr/local/bin \\\n && wget -q -O magnet \"$( curl -s https://api.github.com/repos/pivotalservices/magnet/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x magnet\nRUN cd /usr/local/bin \\\n && wget -q -O bosh https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-2.0.28-linux-amd64 \\\n && chmod 0755 bosh \\\n && ln -s bosh bosh2\nRUN cd /usr/local/bin \\\n && wget -q -O omg-transform \"$( curl -s https://api.github.com/repos/enaml-ops/omg-transform/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep omg-transform-linux ;)\" \\\n && chmod +x omg-transform\nRUN cd /usr/local/bin \\\n && wget -q -O pivnet \"$( curl -s https://api.github.com/repos/pivotal-cf/pivnet-cli/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x pivnet\nRUN cd /usr/local/bin \\\n && wget -q -O bbl \"$( curl -s https://api.github.com/repos/cloudfoundry/bosh-bootloader/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x bbl\nRUN cd /usr/local/bin \\\n && wget -q -O cfops \"$( curl -s https://api.github.com/repos/pivotalservices/cfops/releases/latest | jq --raw-output '.assets[] | .browser_download_url' ;)\" \\\n && chmod +x cfops\nRUN cd /usr/local/bin \\\n && wget -q -O spiff https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0.8/spiff_linux_amd64.zip \\\n && chmod +x spiff\nRUN cd /usr/local/bin \\\n && wget -q -O spruce \"$( curl -s https://api.github.com/repos/geofffranks/spruce/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x spruce\nRUN cd /usr/local/bin \\\n && wget -q -O safe \"$( curl -s https://api.github.com/repos/starkandwayne/safe/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x safe\nRUN cd /usr/local/bin \\\n && wget -q -O asg-creator \"$( curl -s https://api.github.com/repos/cloudfoundry-incubator/asg-creator/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x asg-creator\nRUN cd /usr/local/bin \\\n && wget -q -O cf-mgmt \"$( curl -s https://api.github.com/repos/pivotalservices/cf-mgmt/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x cf-mgmt\nRUN curl \"https://raw.githubusercontent.com/starkandwayne/genesis/master/bin/genesis\" > /usr/bin/genesis \\\n && chmod 0755 /usr/bin/genesis\n#  Thanks to Merlin Glynn for the Photon part!\nRUN baseURL=$( wget -q -O- https://github.com/vmware/photon-controller/releases/ | grep -m 1 photon-linux | perl -ne 'print map(\"$_\\n\", m/href=\\\".*?\\\"/g)' | tr -d '\"' | awk -F \"href=\" '{print$2}' ;) \\\n && wget https://github.com$baseURL -O /usr/local/bin/photon\nRUN chmod 755 /usr/local/bin/photon\nRUN cd /usr/local/bin \\\n && wget -q -O cliaas \"$( curl -s https://api.github.com/repos/pivotal-cf/cliaas/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x cliaas\nRUN cd /usr/local/bin \\\n && wget -q -O - https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/1.2.0/credhub-linux-1.2.0.tgz | tar xzf - > credhub \\\n && chmod 0755 credhub\nRUN cd /usr/local/bin \\\n && curl -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl \\\n && chmod 0755 kubectl\nRUN cd $CFPLUGINS \\\n && wget -q -O autopilot \"$( curl -s https://api.github.com/repos/xchapter7x/autopilot/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x autopilot\nRUN cd $CFPLUGINS \\\n && wget -q -O cf-mysql-plugin https://github.com/andreasf/cf-mysql-plugin/releases/download/v1.4.0/cf-mysql-plugin-linux-amd64 \\\n && chmod 0755 ./cf-mysql-plugin\nRUN cd $CFPLUGINS \\\n && wget -q -O cf-service-connect https://github.com/18F/cf-service-connect/releases/download/1.1.0/cf-service-connect.linux64 \\\n && chmod 0755 ./cf-service-connect\nRUN cd /usr/local/bin \\\n && wget -q -O goblob \"$( curl -s https://api.github.com/repos/pivotal-cf/goblob/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x goblob\nRUN git clone https://github.com/cf-platform-eng/nsx-edge-gen.git \\\n && pip2 install -r nsx-edge-gen/requirements.txt \\\n && pip2 install tabulate pynsxv \\\n && mv nsx-edge-gen /opt\nRUN pip2 install tile-generator\nRUN mkdir -p .bucc \\\n && git clone https://github.com/starkandwayne/bucc.git \\\n && ln -s $HOME/.bucc/bucc/bin/bucc /usr/local/bin/bucc\nADD firstrun.sh /usr/local/bin\nADD add_go.sh /usr/local/bin\nADD add_extras.sh /usr/local/bin\nRUN chown -R ops:ops /opt $HOME $GOBIN $GOPATH\nRUN apt-get -y autoremove \\\n && apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/log/*\nRUN echo \"ops ALL=NOPASSWD: ALL\" >> /etc/sudoers\nUSER ops\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"895ee4c10595aa77149a3f0adf2cb290","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Ramiro Salas <rsalas@pivotal.io>\nENV HOME=\"/home/ops\"\nENV ENAML=\"/opt/enaml\"\nENV OMG_PLUGIN_DIR=\"$ENAML/plugins\"\nENV OMGBIN=\"$ENAML/bin\"\nENV CFPLUGINS=\"/opt/cf-plugins\"\nENV GOPATH=\"/opt/go\"\nENV GOBIN=\"/opt/go/bin\"\nENV PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$HOME/bin:/usr/local/go/bin:$GOBIN:$OMGBIN\"\nADD update_enaml.sh /usr/local/bin\nRUN mkdir -p $HOME\nRUN mkdir -p $ENAML\nRUN mkdir -p $GOBIN\nRUN mkdir -p $CFPLUGINS\nRUN mkdir -p $OMG_PLUGIN_DIR\nRUN groupadd -g 9024 ops\nRUN useradd --shell /bin/bash -u 9024 -g 9024 -o -c \"\" -M -d $HOME ops\nVOLUME $HOME\nRUN chown -R ops:ops $HOME\nWORKDIR $HOME\nRUN mkdir -p $HOME/bin\nRUN cp -n /etc/skel/.[a-z]* .\nRUN cat /etc/apt/sources.list | sed 's/archive/us.archive/g' > /tmp/s \\\n && mv /tmp/s /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget curl -y\nRUN apt-get install --no-install-recommends ruby libroot-bindings-ruby-dev build-essential git ssh zip software-properties-common dnsutils iputils-ping traceroute jq vim wget unzip sudo iperf screen tmux file openstack tcpdump nmap less s3cmd s3curl direnv netcat npm nodejs-legacy python3-pip python3-setuptools apt-utils libdap-bin mysql-client mongodb-clients postgresql-client-9.5 redis-tools libpython2.7-dev libxml2-dev libxslt-dev -y\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-xenial main\" | tee /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\nRUN apt-get update \\\n && sudo apt-get -y --no-install-recommends install google-cloud-sdk\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python2.7 ./get-pip.py \\\n && rm -f python2.7 ./get-pip.py\nRUN pip3 install --upgrade pip\nRUN pip3 install awscli\nRUN npm install azure-cli -g\nRUN curl -L \"https://cli.run.pivotal.io/stable?release=linux64-binary&source=github\" | tar -C /usr/local/bin -zx\nRUN wget $( wget -O- -q https://www.vaultproject.io/downloads.html | grep linux_amd | awk -F \"\\\"\" '{print$2}' ;) -O vault.zip \\\n && unzip vault.zip \\\n && cp vault /usr/local/bin/vault\nRUN chmod 755 /usr/local/bin/vault\nRUN cd /usr/local/bin/ \\\n && curl -o terraform.zip \"https://releases.hashicorp.com/terraform/0.9.11/terraform_0.9.11_linux_amd64.zip\" \\\n && unzip terraform.zip \\\n && rm -f terraform.zip\nRUN gem install cf-uaac --no-rdoc --no-ri\nRUN cd /usr/local/bin \\\n && wget -q -O om \"$( curl -s https://api.github.com/repos/pivotal-cf/om/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x om\nRUN cd /usr/local/bin \\\n && wget -q -O fly \"$( curl -s https://api.github.com/repos/concourse/fly/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x fly\nRUN cd /usr/local/bin \\\n && wget -q -O magnet \"$( curl -s https://api.github.com/repos/pivotalservices/magnet/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x magnet\nRUN cd /usr/local/bin \\\n && wget -q -O bosh https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-2.0.28-linux-amd64 \\\n && chmod 0755 bosh \\\n && ln -s bosh bosh2\nRUN cd /usr/local/bin \\\n && wget -q -O omg-transform \"$( curl -s https://api.github.com/repos/enaml-ops/omg-transform/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep omg-transform-linux ;)\" \\\n && chmod +x omg-transform\nRUN cd /usr/local/bin \\\n && wget -q -O pivnet \"$( curl -s https://api.github.com/repos/pivotal-cf/pivnet-cli/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x pivnet\nRUN cd /usr/local/bin \\\n && wget -q -O bbl \"$( curl -s https://api.github.com/repos/cloudfoundry/bosh-bootloader/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x bbl\nRUN cd /usr/local/bin \\\n && wget -q -O cfops \"$( curl -s https://api.github.com/repos/pivotalservices/cfops/releases/latest | jq --raw-output '.assets[] | .browser_download_url' ;)\" \\\n && chmod +x cfops\nRUN cd /usr/local/bin \\\n && wget -q -O spiff https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0.8/spiff_linux_amd64.zip \\\n && chmod +x spiff\nRUN cd /usr/local/bin \\\n && wget -q -O spruce \"$( curl -s https://api.github.com/repos/geofffranks/spruce/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x spruce\nRUN cd /usr/local/bin \\\n && wget -q -O safe \"$( curl -s https://api.github.com/repos/starkandwayne/safe/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x safe\nRUN cd /usr/local/bin \\\n && wget -q -O asg-creator \"$( curl -s https://api.github.com/repos/cloudfoundry-incubator/asg-creator/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x asg-creator\nRUN cd /usr/local/bin \\\n && wget -q -O cf-mgmt \"$( curl -s https://api.github.com/repos/pivotalservices/cf-mgmt/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x cf-mgmt\nRUN curl \"https://raw.githubusercontent.com/starkandwayne/genesis/master/bin/genesis\" > /usr/bin/genesis \\\n && chmod 0755 /usr/bin/genesis\n#   Thanks to Merlin Glynn for the Photon part!\nRUN baseURL=$( wget -q -O- https://github.com/vmware/photon-controller/releases/ | grep -m 1 photon-linux | perl -ne 'print map(\"$_\\n\", m/href=\\\".*?\\\"/g)' | tr -d '\"' | awk -F \"href=\" '{print$2}' ;) \\\n && wget https://github.com$baseURL -O /usr/local/bin/photon\nRUN chmod 755 /usr/local/bin/photon\nRUN cd /usr/local/bin \\\n && wget -q -O cliaas \"$( curl -s https://api.github.com/repos/pivotal-cf/cliaas/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x cliaas\nRUN cd /usr/local/bin \\\n && wget -q -O - https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/1.2.0/credhub-linux-1.2.0.tgz | tar xzf - > credhub \\\n && chmod 0755 credhub\nRUN cd /usr/local/bin \\\n && curl -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl \\\n && chmod 0755 kubectl\nRUN cd $CFPLUGINS \\\n && wget -q -O autopilot \"$( curl -s https://api.github.com/repos/xchapter7x/autopilot/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux | grep -v zip ;)\" \\\n && chmod +x autopilot\nRUN cd $CFPLUGINS \\\n && wget -q -O cf-mysql-plugin https://github.com/andreasf/cf-mysql-plugin/releases/download/v1.4.0/cf-mysql-plugin-linux-amd64 \\\n && chmod 0755 ./cf-mysql-plugin\nRUN cd $CFPLUGINS \\\n && wget -q -O cf-service-connect https://github.com/18F/cf-service-connect/releases/download/1.1.0/cf-service-connect.linux64 \\\n && chmod 0755 ./cf-service-connect\nRUN cd /usr/local/bin \\\n && wget -q -O goblob \"$( curl -s https://api.github.com/repos/pivotal-cf/goblob/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep linux ;)\" \\\n && chmod +x goblob\nRUN git clone https://github.com/cf-platform-eng/nsx-edge-gen.git \\\n && pip2 install -r nsx-edge-gen/requirements.txt \\\n && pip2 install tabulate pynsxv \\\n && mv nsx-edge-gen /opt\nRUN pip2 install tile-generator\nRUN mkdir -p .bucc \\\n && git clone https://github.com/starkandwayne/bucc.git \\\n && ln -s $HOME/.bucc/bucc/bin/bucc /usr/local/bin/bucc\nADD firstrun.sh /usr/local/bin\nADD add_go.sh /usr/local/bin\nADD add_extras.sh /usr/local/bin\nRUN chown -R ops:ops /opt $HOME $GOBIN $GOPATH\nRUN apt-get -y autoremove \\\n && apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/log/*\nRUN echo \"ops ALL=NOPASSWD: ALL\" >> /etc/sudoers\nUSER ops\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"c087c6e7f0cb9f9042e655e662a2d6cf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9b08ce15f40e9f1b4b2a8a2c688b6b9f2a4360ef.dockerfile"}