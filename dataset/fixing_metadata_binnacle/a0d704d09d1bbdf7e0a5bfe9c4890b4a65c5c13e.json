{"seed":3248546221,"processedDockerfileHash":"bf2a8d221d1cc9157d11fe781afaa5a3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2019 Google LLC\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:16.04\nRUN mkdir /data\nWORKDIR /data\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get autoremove -y \\\n && apt-get install --no-install-recommends apt-transport-https=1.2.35 build-essential=12.1ubuntu2 curl=7.47.0-1ubuntu2.19 gdb=7.11.1-0ubuntu1~16.5 libcurl4-openssl-dev=7.47.0-1ubuntu2.19 libffi-dev=3.2.1-4 libssl-dev=1.0.2g-1ubuntu4.20 locales=2.23-0ubuntu11.3 lsb-release=9.20160110ubuntu0.2 net-tools=1.60-26ubuntu1 python=2.7.12-1~16.04 python-dbg=2.7.12-1~16.04 python-dev=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 socat=1.7.3.1-1 sudo=1.8.16-0ubuntu1.10 unzip=6.0-20ubuntu1.1 util-linux=2.27.1-6ubuntu3.10 wget=1.17.1-1ubuntu1.5 zip=3.0-11 -y\n#   Install patchelf.\nRUN curl -sS https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 | tar -C /tmp -xj \\\n && cd /tmp/patchelf-*/ \\\n && ./configure --prefix=/usr \\\n && make install\n#   Install Google Cloud SDK.\nRUN CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-cloud-sdk -y\n#   Only upgrade python packages used by fuzzers and infrastructure.\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\n#   Set up google-fluentd\n#   We ignore errors in install-logging-agent.sh as it always fails to start\n#   after installation without a metadata server.\nRUN curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh \\\n && bash install-logging-agent.sh || true \\\n && sed -i 's/flush_interval 5s/flush_interval 60s/' /etc/google-fluentd/google-fluentd.conf\nCOPY clusterfuzz-fluentd.conf /etc/google-fluentd/config.d/clusterfuzz.conf\n#   Install App Engine SDK.\nENV APPENGINE_FILE=\"google_appengine_1.9.75.zip\" \\\n    APPENGINE_SDK_PATH=\"/data/google_appengine\"\nRUN wget https://commondatastorage.googleapis.com/clusterfuzz-data/$APPENGINE_FILE \\\n && unzip $APPENGINE_FILE \\\n && rm $APPENGINE_FILE\n#   Hack to force google to be a namespace package.\n#   https://github.com/google/protobuf/issues/1296#issuecomment-264264926\nRUN echo \"import google; import pkgutil; pkgutil.extend_path(google.__path__, google.__name__)\" > /usr/local/lib/python2.7/dist-packages/gae.pth\n#   Common environment variables.\nENV USER=\"clusterfuzz\"\nENV INSTALL_DIRECTORY=\"/mnt/scratch0\"\nENV BOT_TMPDIR=\"$INSTALL_DIRECTORY/tmp\"\nENV ROOT_DIR=\"$INSTALL_DIRECTORY/clusterfuzz\"\nENV UPDATE_WEB_TESTS=\"True\"\nENV PYTHONPATH=\"$APPENGINE_SDK_PATH:$INSTALL_DIRECTORY/clusterfuzz/src\"\nENV RUN_CMD=\"\\\"python $ROOT_DIR/src/python/bot/startup/run.py\\\"\"\n#   Passwordless sudo (needed for AFL launcher).\nRUN groupadd nopwsudo \\\n && echo \"%nopwsudo ALL=(ALL:ALL) NOPASSWD:ALL\" > /etc/sudoers.d/mysudoers\n#   Make sure GSUtil uses the GCE service account.\nRUN echo '[GoogleCompute]\\nservice_account = default' > /etc/boto.cfg\nVOLUME $INSTALL_DIRECTORY\nWORKDIR $INSTALL_DIRECTORY\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nCOPY setup_common.sh setup_clusterfuzz.sh setup_nfs.sh start_clusterfuzz.sh setup_mock_metadata.sh start.sh /data/\nCMD [\"bash\", \"-ex\", \"/data/start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2019 Google LLC\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM ubuntu:16.04\nRUN mkdir /data\nWORKDIR /data\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get autoremove -y \\\n && apt-get install apt-transport-https build-essential curl gdb libcurl4-openssl-dev libffi-dev libssl-dev locales lsb-release net-tools python python-dbg python-dev python-pip socat sudo unzip util-linux wget zip -y\n#  Install patchelf.\nRUN curl -sS https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 | tar -C /tmp -xj \\\n && cd /tmp/patchelf-*/ \\\n && ./configure --prefix=/usr \\\n && make install\n#  Install Google Cloud SDK.\nRUN CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install google-cloud-sdk -y\n#  Only upgrade python packages used by fuzzers and infrastructure.\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\n#  Set up google-fluentd\n#  We ignore errors in install-logging-agent.sh as it always fails to start\n#  after installation without a metadata server.\nRUN curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh \\\n && bash install-logging-agent.sh || true \\\n && sed -i 's/flush_interval 5s/flush_interval 60s/' /etc/google-fluentd/google-fluentd.conf\nCOPY clusterfuzz-fluentd.conf /etc/google-fluentd/config.d/clusterfuzz.conf\n#  Install App Engine SDK.\nENV APPENGINE_FILE=\"google_appengine_1.9.75.zip\" \\\n    APPENGINE_SDK_PATH=\"/data/google_appengine\"\nRUN wget https://commondatastorage.googleapis.com/clusterfuzz-data/$APPENGINE_FILE \\\n && unzip $APPENGINE_FILE \\\n && rm $APPENGINE_FILE\n#  Hack to force google to be a namespace package.\n#  https://github.com/google/protobuf/issues/1296#issuecomment-264264926\nRUN echo \"import google; import pkgutil; pkgutil.extend_path(google.__path__, google.__name__)\" > /usr/local/lib/python2.7/dist-packages/gae.pth\n#  Common environment variables.\nENV USER=\"clusterfuzz\"\nENV INSTALL_DIRECTORY=\"/mnt/scratch0\"\nENV BOT_TMPDIR=\"$INSTALL_DIRECTORY/tmp\"\nENV ROOT_DIR=\"$INSTALL_DIRECTORY/clusterfuzz\"\nENV UPDATE_WEB_TESTS=\"True\"\nENV PYTHONPATH=\"$APPENGINE_SDK_PATH:$INSTALL_DIRECTORY/clusterfuzz/src\"\nENV RUN_CMD=\"\\\"python $ROOT_DIR/src/python/bot/startup/run.py\\\"\"\n#  Passwordless sudo (needed for AFL launcher).\nRUN groupadd nopwsudo \\\n && echo \"%nopwsudo ALL=(ALL:ALL) NOPASSWD:ALL\" > /etc/sudoers.d/mysudoers\n#  Make sure GSUtil uses the GCE service account.\nRUN echo '[GoogleCompute]\\nservice_account = default' > /etc/boto.cfg\nVOLUME $INSTALL_DIRECTORY\nWORKDIR $INSTALL_DIRECTORY\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nCOPY setup_common.sh setup_clusterfuzz.sh setup_nfs.sh start_clusterfuzz.sh setup_mock_metadata.sh start.sh /data/\nCMD [\"bash\", \"-ex\", \"/data/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"0d585736bbb01f6dc97e0908c1a0e1ad","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2019 Google LLC\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:16.04\nRUN mkdir /data\nWORKDIR /data\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get autoremove -y \\\n && apt-get install apt-transport-https build-essential curl gdb libcurl4-openssl-dev libffi-dev libssl-dev locales lsb-release net-tools python python-dbg python-dev python-pip socat sudo unzip util-linux wget zip -y\n#   Install patchelf.\nRUN curl -sS https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 | tar -C /tmp -xj \\\n && cd /tmp/patchelf-*/ \\\n && ./configure --prefix=/usr \\\n && make install\n#   Install Google Cloud SDK.\nRUN CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install google-cloud-sdk -y\n#   Only upgrade python packages used by fuzzers and infrastructure.\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\n#   Set up google-fluentd\n#   We ignore errors in install-logging-agent.sh as it always fails to start\n#   after installation without a metadata server.\nRUN curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh \\\n && bash install-logging-agent.sh || true \\\n && sed -i 's/flush_interval 5s/flush_interval 60s/' /etc/google-fluentd/google-fluentd.conf\nCOPY clusterfuzz-fluentd.conf /etc/google-fluentd/config.d/clusterfuzz.conf\n#   Install App Engine SDK.\nENV APPENGINE_FILE=\"google_appengine_1.9.75.zip\" \\\n    APPENGINE_SDK_PATH=\"/data/google_appengine\"\nRUN wget https://commondatastorage.googleapis.com/clusterfuzz-data/$APPENGINE_FILE \\\n && unzip $APPENGINE_FILE \\\n && rm $APPENGINE_FILE\n#   Hack to force google to be a namespace package.\n#   https://github.com/google/protobuf/issues/1296#issuecomment-264264926\nRUN echo \"import google; import pkgutil; pkgutil.extend_path(google.__path__, google.__name__)\" > /usr/local/lib/python2.7/dist-packages/gae.pth\n#   Common environment variables.\nENV USER=\"clusterfuzz\"\nENV INSTALL_DIRECTORY=\"/mnt/scratch0\"\nENV BOT_TMPDIR=\"$INSTALL_DIRECTORY/tmp\"\nENV ROOT_DIR=\"$INSTALL_DIRECTORY/clusterfuzz\"\nENV UPDATE_WEB_TESTS=\"True\"\nENV PYTHONPATH=\"$APPENGINE_SDK_PATH:$INSTALL_DIRECTORY/clusterfuzz/src\"\nENV RUN_CMD=\"\\\"python $ROOT_DIR/src/python/bot/startup/run.py\\\"\"\n#   Passwordless sudo (needed for AFL launcher).\nRUN groupadd nopwsudo \\\n && echo \"%nopwsudo ALL=(ALL:ALL) NOPASSWD:ALL\" > /etc/sudoers.d/mysudoers\n#   Make sure GSUtil uses the GCE service account.\nRUN echo '[GoogleCompute]\\nservice_account = default' > /etc/boto.cfg\nVOLUME $INSTALL_DIRECTORY\nWORKDIR $INSTALL_DIRECTORY\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nCOPY setup_common.sh setup_clusterfuzz.sh setup_nfs.sh start_clusterfuzz.sh setup_mock_metadata.sh start.sh /data/\nCMD [\"bash\", \"-ex\", \"/data/start.sh\"]\n","originalDockerfileUglifiedHash":"e9757d543cc8f223952f34fbdf9ac24d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a0d704d09d1bbdf7e0a5bfe9c4890b4a65c5c13e.dockerfile"}