{"seed":2670861028,"processedDockerfileHash":"e711b08732ec7894e145150c887497ca","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM lsiobase/alpine:3.8 AS buildstage\n#  ############# build stage ##############\n#   package versions\nARG FFMPEG_VER=\"3.4.2\"\n#   copy patches\nCOPY patches/ /tmp/patches/\nRUN echo \"**** install build packages ****\" \\\n && apk add alsa-lib-dev bzip2-dev coreutils curl g++ gcc git gnutls-dev imlib2-dev jasper-dev jpeg-dev lame-dev lcms2-dev libass-dev libtheora-dev libva-dev libvorbis-dev libvpx-dev libvpx-dev libxfixes-dev make opus-dev perl rtmpdump-dev sdl-dev tar v4l-utils-dev x264-dev x265-dev xvidcore-dev yasm zlib-dev --no-cache --virtual=build-dependencies\nRUN echo \"**** compile ffmpeg ****\" \\\n && mkdir -p /tmp/ffmpeg \\\n && curl -o /tmp/ffmpeg-src.tar.bz2 -L \"http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VER}.tar.bz2\" \\\n && tar xf /tmp/ffmpeg-src.tar.bz2 -C /tmp/ffmpeg --strip-components=1 \\\n && cd /tmp/ffmpeg \\\n && for i in /tmp/patches/*.patch; do patch -p1 -i $i ; done \\\n && ./configure --disable-debug --disable-static --disable-stripping --enable-avfilter --enable-avresample --enable-gnutls --enable-gpl --enable-libass --enable-libmp3lame --enable-libopus --enable-librtmp --enable-libtheora --enable-libv4l2 --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxcb --enable-libxvid --enable-pic --enable-postproc --enable-pthreads --enable-shared --enable-vaapi --prefix=/usr \\\n && make \\\n && gcc -o tools/qt-faststart $CFLAGS tools/qt-faststart.c \\\n && make doc/ffmpeg.1 doc/ffplay.1 doc/ffserver.1 \\\n && make DESTDIR=/tmp/ffmpeg-build install install-man \\\n && install -D -m755 tools/qt-faststart /tmp/ffmpeg-build/usr/bin/qt-faststart\nRUN echo \"**** compile dcraw ****\" \\\n && cp /tmp/patches/dcraw.c /tmp/ffmpeg-build/usr/bin/dcraw.c \\\n && cd /tmp/ffmpeg-build/usr/bin \\\n && gcc -o dcraw -O4 dcraw.c -lm -ljasper -ljpeg -llcms2\n#  ############# runtime stage ##############\nFROM lsiobase/alpine:3.8\n#   set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\n#   package versions\nARG SERVIIO_VER=\"1.10\"\n#   environment settings\nENV JAVA_HOME=\"/usr/bin/java\"\nRUN echo \"**** change abc home folder ****\" \\\n && usermod -d /config/serviio abc \\\n && echo \"**** install runtime packages ****\" \\\n && apk add alsa-lib curl expat gmp gnutls jasper jpeg lame lcms2 libass libbz2 libdrm libffi libgcc libjpeg-turbo libogg libpciaccess librtmp libstdc++ libtasn1 libtheora libva libvorbis libvpx libx11 libxau libxcb libxdamage libxdmcp libxext libxfixes libxshmfence libxxf86vm mesa-gl mesa-glapi nettle openjdk8-jre opus p11-kit sdl ttf-dejavu v4l-utils-libs x264-libs x265 xvidcore --no-cache \\\n && echo \"**** install serviio app ****\" \\\n && mkdir -p /app/serviio \\\n && curl -o /tmp/serviio.tar.gz -L http://download.serviio.org/releases/serviio-$SERVIIO_VER-linux.tar.gz \\\n && tar xf /tmp/serviio.tar.gz -C /app/serviio --strip-components=1 \\\n && echo \"**** cleanup ****\" \\\n && rm -rf /tmp/*\n#   copy files from build stage and local files\nCOPY --from=buildstage /tmp/ffmpeg-build/usr/ /usr/\nCOPY root/ /\n#   ports and volumes\nEXPOSE 23423/tcp 23424/tcp 8895/tcp 1900/udp\nVOLUME /config /transcode\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM lsiobase/alpine:3.8 AS buildstage\n# ############# build stage ##############\n#  package versions\nARG FFMPEG_VER=\"3.4.2\"\n#  copy patches\nCOPY patches/ /tmp/patches/\nRUN echo \"**** install build packages ****\" \\\n && apk add --no-cache --virtual=build-dependencies alsa-lib-dev bzip2-dev coreutils curl g++ gcc git gnutls-dev imlib2-dev jasper-dev jpeg-dev lame-dev lcms2-dev libass-dev libtheora-dev libva-dev libvorbis-dev libvpx-dev libvpx-dev libxfixes-dev make opus-dev perl rtmpdump-dev sdl-dev tar v4l-utils-dev x264-dev x265-dev xvidcore-dev yasm zlib-dev\nRUN echo \"**** compile ffmpeg ****\" \\\n && mkdir -p /tmp/ffmpeg \\\n && curl -o /tmp/ffmpeg-src.tar.bz2 -L \"http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VER}.tar.bz2\" \\\n && tar xf /tmp/ffmpeg-src.tar.bz2 -C /tmp/ffmpeg --strip-components=1 \\\n && cd /tmp/ffmpeg \\\n && for i in /tmp/patches/*.patch; do patch -p1 -i $i ; done \\\n && ./configure --disable-debug --disable-static --disable-stripping --enable-avfilter --enable-avresample --enable-gnutls --enable-gpl --enable-libass --enable-libmp3lame --enable-libopus --enable-librtmp --enable-libtheora --enable-libv4l2 --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxcb --enable-libxvid --enable-pic --enable-postproc --enable-pthreads --enable-shared --enable-vaapi --prefix=/usr \\\n && make \\\n && gcc -o tools/qt-faststart $CFLAGS tools/qt-faststart.c \\\n && make doc/ffmpeg.1 doc/ffplay.1 doc/ffserver.1 \\\n && make DESTDIR=/tmp/ffmpeg-build install install-man \\\n && install -D -m755 tools/qt-faststart /tmp/ffmpeg-build/usr/bin/qt-faststart\nRUN echo \"**** compile dcraw ****\" \\\n && cp /tmp/patches/dcraw.c /tmp/ffmpeg-build/usr/bin/dcraw.c \\\n && cd /tmp/ffmpeg-build/usr/bin \\\n && gcc -o dcraw -O4 dcraw.c -lm -ljasper -ljpeg -llcms2\n# ############# runtime stage ##############\nFROM lsiobase/alpine:3.8\n#  set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\n#  package versions\nARG SERVIIO_VER=\"1.10\"\n#  environment settings\nENV JAVA_HOME=\"/usr/bin/java\"\nRUN echo \"**** change abc home folder ****\" \\\n && usermod -d /config/serviio abc \\\n && echo \"**** install runtime packages ****\" \\\n && apk add --no-cache alsa-lib curl expat gmp gnutls jasper jpeg lame lcms2 libass libbz2 libdrm libffi libgcc libjpeg-turbo libogg libpciaccess librtmp libstdc++ libtasn1 libtheora libva libvorbis libvpx libx11 libxau libxcb libxdamage libxdmcp libxext libxfixes libxshmfence libxxf86vm mesa-gl mesa-glapi nettle openjdk8-jre opus p11-kit sdl ttf-dejavu v4l-utils-libs x264-libs x265 xvidcore \\\n && echo \"**** install serviio app ****\" \\\n && mkdir -p /app/serviio \\\n && curl -o /tmp/serviio.tar.gz -L http://download.serviio.org/releases/serviio-$SERVIIO_VER-linux.tar.gz \\\n && tar xf /tmp/serviio.tar.gz -C /app/serviio --strip-components=1 \\\n && echo \"**** cleanup ****\" \\\n && rm -rf /tmp/*\n#  copy files from build stage and local files\nCOPY --from=buildstage /tmp/ffmpeg-build/usr/ /usr/\nCOPY root/ /\n#  ports and volumes\nEXPOSE 23423/tcp 23424/tcp 8895/tcp 1900/udp\nVOLUME /config /transcode\n","injectedSmells":[],"originalDockerfileHash":"08d792a3713471917c6e02cf9f321ae4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM lsiobase/alpine:3.8 AS buildstage\n#  ############# build stage ##############\n#   package versions\nARG FFMPEG_VER=\"3.4.2\"\n#   copy patches\nCOPY patches/ /tmp/patches/\nRUN echo \"**** install build packages ****\" \\\n && apk add --no-cache --virtual=build-dependencies alsa-lib-dev bzip2-dev coreutils curl g++ gcc git gnutls-dev imlib2-dev jasper-dev jpeg-dev lame-dev lcms2-dev libass-dev libtheora-dev libva-dev libvorbis-dev libvpx-dev libvpx-dev libxfixes-dev make opus-dev perl rtmpdump-dev sdl-dev tar v4l-utils-dev x264-dev x265-dev xvidcore-dev yasm zlib-dev\nRUN echo \"**** compile ffmpeg ****\" \\\n && mkdir -p /tmp/ffmpeg \\\n && curl -o /tmp/ffmpeg-src.tar.bz2 -L \"http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VER}.tar.bz2\" \\\n && tar xf /tmp/ffmpeg-src.tar.bz2 -C /tmp/ffmpeg --strip-components=1 \\\n && cd /tmp/ffmpeg \\\n && for i in /tmp/patches/*.patch; do patch -p1 -i $i ; done \\\n && ./configure --disable-debug --disable-static --disable-stripping --enable-avfilter --enable-avresample --enable-gnutls --enable-gpl --enable-libass --enable-libmp3lame --enable-libopus --enable-librtmp --enable-libtheora --enable-libv4l2 --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxcb --enable-libxvid --enable-pic --enable-postproc --enable-pthreads --enable-shared --enable-vaapi --prefix=/usr \\\n && make \\\n && gcc -o tools/qt-faststart $CFLAGS tools/qt-faststart.c \\\n && make doc/ffmpeg.1 doc/ffplay.1 doc/ffserver.1 \\\n && make DESTDIR=/tmp/ffmpeg-build install install-man \\\n && install -D -m755 tools/qt-faststart /tmp/ffmpeg-build/usr/bin/qt-faststart\nRUN echo \"**** compile dcraw ****\" \\\n && cp /tmp/patches/dcraw.c /tmp/ffmpeg-build/usr/bin/dcraw.c \\\n && cd /tmp/ffmpeg-build/usr/bin \\\n && gcc -o dcraw -O4 dcraw.c -lm -ljasper -ljpeg -llcms2\n#  ############# runtime stage ##############\nFROM lsiobase/alpine:3.8\n#   set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\n#   package versions\nARG SERVIIO_VER=\"1.10\"\n#   environment settings\nENV JAVA_HOME=\"/usr/bin/java\"\nRUN echo \"**** change abc home folder ****\" \\\n && usermod -d /config/serviio abc \\\n && echo \"**** install runtime packages ****\" \\\n && apk add --no-cache alsa-lib curl expat gmp gnutls jasper jpeg lame lcms2 libass libbz2 libdrm libffi libgcc libjpeg-turbo libogg libpciaccess librtmp libstdc++ libtasn1 libtheora libva libvorbis libvpx libx11 libxau libxcb libxdamage libxdmcp libxext libxfixes libxshmfence libxxf86vm mesa-gl mesa-glapi nettle openjdk8-jre opus p11-kit sdl ttf-dejavu v4l-utils-libs x264-libs x265 xvidcore \\\n && echo \"**** install serviio app ****\" \\\n && mkdir -p /app/serviio \\\n && curl -o /tmp/serviio.tar.gz -L http://download.serviio.org/releases/serviio-$SERVIIO_VER-linux.tar.gz \\\n && tar xf /tmp/serviio.tar.gz -C /app/serviio --strip-components=1 \\\n && echo \"**** cleanup ****\" \\\n && rm -rf /tmp/*\n#   copy files from build stage and local files\nCOPY --from=buildstage /tmp/ffmpeg-build/usr/ /usr/\nCOPY root/ /\n#   ports and volumes\nEXPOSE 23423/tcp 23424/tcp 8895/tcp 1900/udp\nVOLUME /config /transcode\n","originalDockerfileUglifiedHash":"6232e92cf905cfcd7d55c32ce6b994ac","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e264cc07586f9024e3edceb7d91596ce5bea1d49.dockerfile"}