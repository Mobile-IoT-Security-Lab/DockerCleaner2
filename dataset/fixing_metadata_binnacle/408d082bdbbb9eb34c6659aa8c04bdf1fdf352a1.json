{"seed":1705881783,"processedDockerfileHash":"463ef95b85683073805e1b190fbb7762","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:9.2-cudnn7-runtime-ubuntu16.04\nENV PYTHONUNBUFFERED=\"TRUE\"\n#   Install python3.6 and pip3\nENV PATH=\"/usr/local/bin:$PATH\"\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends tk-dev -y )\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends wget ca-certificates vim autoconf automake less groff dpkg-dev bzip2=1.0.* file g++ gcc imagemagick libbz2-dev libc6-dev curl libdb-dev libevent-dev libffi-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses5-dev libpng12-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt1-dev libyaml-dev make patch xz-utils zlib1g-dev tcl tk e2fsprogs iptables xfsprogs xz-utils openjdk-8-jdk-headless fakeroot mono-mcs libcurl4-openssl-dev liberror-perl unzip\n#   Install python 3.6\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.8\"\nRUN set -ex \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && find /usr/local -depth\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"19.0.3\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN pip install mxnet-model-server==1.0.8 --no-cache-dir\nRUN mkdir -p /home/model-server/tmp\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nCOPY config.properties /home/model-server\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\nEXPOSE 8080/tcp 8081/tcp\nWORKDIR /home/model-server\nENV TEMP=\"/home/model-server/tmp\"\nENTRYPOINT [\"/usr/local/bin/dockerd-entrypoint.sh\"]\nCMD [\"serve\"]\nLABEL maintainer=\"dantu@amazon.com, rakvas@amazon.com, lufen@amazon.com, dden@amazon.com\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:9.2-cudnn7-runtime-ubuntu16.04\nENV PYTHONUNBUFFERED=\"TRUE\"\n#  Install python3.6 and pip3\nENV PATH=\"/usr/local/bin:$PATH\"\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends tk-dev -y\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends wget ca-certificates vim autoconf automake less groff dpkg-dev bzip2=1.0.* file g++ gcc imagemagick libbz2-dev libc6-dev curl libdb-dev libevent-dev libffi-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses5-dev libpng12-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt1-dev libyaml-dev make patch xz-utils zlib1g-dev tcl tk e2fsprogs iptables xfsprogs xz-utils openjdk-8-jdk-headless fakeroot mono-mcs libcurl4-openssl-dev liberror-perl unzip\n#  Install python 3.6\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.8\"\nRUN set -ex \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python \\\n && python3 --version\n#  make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"19.0.3\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\nRUN pip install mxnet-model-server --no-cache-dir\nRUN mkdir -p /home/model-server/tmp\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nCOPY config.properties /home/model-server\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\nEXPOSE 8080/tcp 8081/tcp\nWORKDIR /home/model-server\nENV TEMP=\"/home/model-server/tmp\"\nENTRYPOINT [\"/usr/local/bin/dockerd-entrypoint.sh\"]\nCMD [\"serve\"]\nLABEL maintainer=\"dantu@amazon.com, rakvas@amazon.com, lufen@amazon.com, dden@amazon.com\"\n","injectedSmells":[],"originalDockerfileHash":"677044eadfb807dca033712465adb0b7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:9.2-cudnn7-runtime-ubuntu16.04\nENV PYTHONUNBUFFERED=\"TRUE\"\n#   Install python3.6 and pip3\nENV PATH=\"/usr/local/bin:$PATH\"\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends tk-dev -y\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends wget ca-certificates vim autoconf automake less groff dpkg-dev bzip2=1.0.* file g++ gcc imagemagick libbz2-dev libc6-dev curl libdb-dev libevent-dev libffi-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses5-dev libpng12-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt1-dev libyaml-dev make patch xz-utils zlib1g-dev tcl tk e2fsprogs iptables xfsprogs xz-utils openjdk-8-jdk-headless fakeroot mono-mcs libcurl4-openssl-dev liberror-perl unzip\n#   Install python 3.6\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.8\"\nRUN set -ex \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && find /usr/local -depth\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"19.0.3\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN pip install mxnet-model-server --no-cache-dir\nRUN mkdir -p /home/model-server/tmp\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nCOPY config.properties /home/model-server\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\nEXPOSE 8080/tcp 8081/tcp\nWORKDIR /home/model-server\nENV TEMP=\"/home/model-server/tmp\"\nENTRYPOINT [\"/usr/local/bin/dockerd-entrypoint.sh\"]\nCMD [\"serve\"]\nLABEL maintainer=\"dantu@amazon.com, rakvas@amazon.com, lufen@amazon.com, dden@amazon.com\"\n","originalDockerfileUglifiedHash":"56bc5337f70c23dbc8124bbcf81f7c36","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/408d082bdbbb9eb34c6659aa8c04bdf1fdf352a1.dockerfile"}