{"seed":1160503905,"processedDockerfileHash":"a221d276fb567868a2b4975f7f222235","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Buildstage\nFROM lsiobase/alpine:arm32v7-3.9 AS buildstage\n#   set NZBGET version\nARG NZBGET_RELEASE\nRUN echo \"**** install build packages ****\" \\\n && apk add curl g++ gcc git libxml2-dev libxslt-dev make ncurses-dev openssl-dev \\\n && echo \"**** build nzbget ****\" \\\n && if [ -z ${NZBGET_RELEASE+x} ] ; then NZBGET_RELEASE=$( curl -sX GET \"https://api.github.com/repos/nzbget/nzbget/releases/latest\" | awk '/tag_name/{print $4;exit}' FS='[\"\"]' ;) ; fi \\\n && mkdir -p /app/nzbget \\\n && git clone https://github.com/nzbget/nzbget.git nzbget \\\n && cd nzbget/ \\\n && git checkout ${NZBGET_RELEASE} \\\n && git cherry-pick -n fa57474d \\\n && ./configure bindir='${exec_prefix}' \\\n && make \\\n && make prefix=/app/nzbget install \\\n && sed -i -e \"s#^MainDir=.*#MainDir=/downloads#g\" -e \"s#^ScriptDir=.*#ScriptDir=$\\{MainDir\\}/scripts#g\" -e \"s#^WebDir=.*#WebDir=$\\{AppDir\\}/webui#g\" -e \"s#^ConfigTemplate=.*#ConfigTemplate=$\\{AppDir\\}/webui/nzbget.conf.template#g\" -e \"s#^UnrarCmd=.*#UnrarCmd=$\\{AppDir\\}/unrar#g\" -e \"s#^SevenZipCmd=.*#SevenZipCmd=$\\{AppDir\\}/7za#g\" -e \"s#^CertStore=.*#CertStore=$\\{AppDir\\}/cacert.pem#g\" -e \"s#^CertCheck=.*#CertCheck=yes#g\" -e \"s#^DestDir=.*#DestDir=$\\{MainDir\\}/completed#g\" -e \"s#^InterDir=.*#InterDir=$\\{MainDir\\}/intermediate#g\" -e \"s#^LogFile=.*#LogFile=$\\{MainDir\\}/nzbget.log#g\" -e \"s#^AuthorizedIP=.*#AuthorizedIP=127.0.0.1#g\" /app/nzbget/share/nzbget/nzbget.conf \\\n && mv /app/nzbget/share/nzbget/webui /app/nzbget/ \\\n && cp /app/nzbget/share/nzbget/nzbget.conf /app/nzbget/webui/nzbget.conf.template \\\n && ln -s /usr/bin/7za /app/nzbget/7za \\\n && ln -s /usr/bin/unrar /app/nzbget/unrar \\\n && cp /nzbget/pubkey.pem /app/nzbget/pubkey.pem \\\n && curl -o /app/nzbget/cacert.pem -L \"https://curl.haxx.se/ca/cacert.pem\"\n#   Runtime Stage\nFROM lsiobase/alpine:arm32v7-3.9\n#   set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs,thelamer\"\nRUN echo \"**** install build packages ****\" \\\n && apk add gcc libc-dev libxml2-dev libxslt-dev make py2-pip python-dev --no-cache --upgrade --virtual=build-dependencies \\\n && echo \"**** install packages ****\" \\\n && apk add curl libxml2 libxslt openssl p7zip python2 unrar wget --no-cache \\\n && echo \"**** install python packages ****\" \\\n && pip install apprise==1.3.0 chardet==5.1.0 pynzbget==0.6.4 --no-cache-dir \\\n && echo \"**** cleanup ****\" \\\n && apk del --purge build-dependencies \\\n && rm -rf /root/.cache /tmp/*\n#   add local files and files from buildstage\nCOPY --from=buildstage /app/nzbget /app/nzbget\nCOPY root/ /\n#   ports and volumes\nVOLUME /config /downloads\nEXPOSE 6789/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Buildstage\nFROM lsiobase/alpine:arm32v7-3.9 AS buildstage\n#  set NZBGET version\nARG NZBGET_RELEASE\nRUN echo \"**** install build packages ****\" \\\n && apk add curl g++ gcc git libxml2-dev libxslt-dev make ncurses-dev openssl-dev \\\n && echo \"**** build nzbget ****\" \\\n && if [ -z ${NZBGET_RELEASE+x} ] ; then NZBGET_RELEASE=$( curl -sX GET \"https://api.github.com/repos/nzbget/nzbget/releases/latest\" | awk '/tag_name/{print $4;exit}' FS='[\"\"]' ;) ; fi \\\n && mkdir -p /app/nzbget \\\n && git clone https://github.com/nzbget/nzbget.git nzbget \\\n && cd nzbget/ \\\n && git checkout ${NZBGET_RELEASE} \\\n && git cherry-pick -n fa57474d \\\n && ./configure bindir='${exec_prefix}' \\\n && make \\\n && make prefix=/app/nzbget install \\\n && sed -i -e \"s#^MainDir=.*#MainDir=/downloads#g\" -e \"s#^ScriptDir=.*#ScriptDir=$\\{MainDir\\}/scripts#g\" -e \"s#^WebDir=.*#WebDir=$\\{AppDir\\}/webui#g\" -e \"s#^ConfigTemplate=.*#ConfigTemplate=$\\{AppDir\\}/webui/nzbget.conf.template#g\" -e \"s#^UnrarCmd=.*#UnrarCmd=$\\{AppDir\\}/unrar#g\" -e \"s#^SevenZipCmd=.*#SevenZipCmd=$\\{AppDir\\}/7za#g\" -e \"s#^CertStore=.*#CertStore=$\\{AppDir\\}/cacert.pem#g\" -e \"s#^CertCheck=.*#CertCheck=yes#g\" -e \"s#^DestDir=.*#DestDir=$\\{MainDir\\}/completed#g\" -e \"s#^InterDir=.*#InterDir=$\\{MainDir\\}/intermediate#g\" -e \"s#^LogFile=.*#LogFile=$\\{MainDir\\}/nzbget.log#g\" -e \"s#^AuthorizedIP=.*#AuthorizedIP=127.0.0.1#g\" /app/nzbget/share/nzbget/nzbget.conf \\\n && mv /app/nzbget/share/nzbget/webui /app/nzbget/ \\\n && cp /app/nzbget/share/nzbget/nzbget.conf /app/nzbget/webui/nzbget.conf.template \\\n && ln -s /usr/bin/7za /app/nzbget/7za \\\n && ln -s /usr/bin/unrar /app/nzbget/unrar \\\n && cp /nzbget/pubkey.pem /app/nzbget/pubkey.pem \\\n && curl -o /app/nzbget/cacert.pem -L \"https://curl.haxx.se/ca/cacert.pem\"\n#  Runtime Stage\nFROM lsiobase/alpine:arm32v7-3.9\n#  set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs,thelamer\"\nRUN echo \"**** install build packages ****\" \\\n && apk add --no-cache --upgrade --virtual=build-dependencies gcc libc-dev libxml2-dev libxslt-dev make py2-pip python-dev \\\n && echo \"**** install packages ****\" \\\n && apk add --no-cache curl libxml2 libxslt openssl p7zip python2 unrar wget \\\n && echo \"**** install python packages ****\" \\\n && pip install apprise chardet pynzbget --no-cache-dir \\\n && echo \"**** cleanup ****\" \\\n && apk del --purge build-dependencies \\\n && rm -rf /root/.cache /tmp/*\n#  add local files and files from buildstage\nCOPY --from=buildstage /app/nzbget /app/nzbget\nCOPY root/ /\n#  ports and volumes\nVOLUME /config /downloads\nEXPOSE 6789/tcp\n","injectedSmells":[],"originalDockerfileHash":"a463f0e5812b9bfc2d98ed4a452be261","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Buildstage\nFROM lsiobase/alpine:arm32v7-3.9 AS buildstage\n#   set NZBGET version\nARG NZBGET_RELEASE\nRUN echo \"**** install build packages ****\" \\\n && apk add curl g++ gcc git libxml2-dev libxslt-dev make ncurses-dev openssl-dev \\\n && echo \"**** build nzbget ****\" \\\n && if [ -z ${NZBGET_RELEASE+x} ] ; then NZBGET_RELEASE=$( curl -sX GET \"https://api.github.com/repos/nzbget/nzbget/releases/latest\" | awk '/tag_name/{print $4;exit}' FS='[\"\"]' ;) ; fi \\\n && mkdir -p /app/nzbget \\\n && git clone https://github.com/nzbget/nzbget.git nzbget \\\n && cd nzbget/ \\\n && git checkout ${NZBGET_RELEASE} \\\n && git cherry-pick -n fa57474d \\\n && ./configure bindir='${exec_prefix}' \\\n && make \\\n && make prefix=/app/nzbget install \\\n && sed -i -e \"s#^MainDir=.*#MainDir=/downloads#g\" -e \"s#^ScriptDir=.*#ScriptDir=$\\{MainDir\\}/scripts#g\" -e \"s#^WebDir=.*#WebDir=$\\{AppDir\\}/webui#g\" -e \"s#^ConfigTemplate=.*#ConfigTemplate=$\\{AppDir\\}/webui/nzbget.conf.template#g\" -e \"s#^UnrarCmd=.*#UnrarCmd=$\\{AppDir\\}/unrar#g\" -e \"s#^SevenZipCmd=.*#SevenZipCmd=$\\{AppDir\\}/7za#g\" -e \"s#^CertStore=.*#CertStore=$\\{AppDir\\}/cacert.pem#g\" -e \"s#^CertCheck=.*#CertCheck=yes#g\" -e \"s#^DestDir=.*#DestDir=$\\{MainDir\\}/completed#g\" -e \"s#^InterDir=.*#InterDir=$\\{MainDir\\}/intermediate#g\" -e \"s#^LogFile=.*#LogFile=$\\{MainDir\\}/nzbget.log#g\" -e \"s#^AuthorizedIP=.*#AuthorizedIP=127.0.0.1#g\" /app/nzbget/share/nzbget/nzbget.conf \\\n && mv /app/nzbget/share/nzbget/webui /app/nzbget/ \\\n && cp /app/nzbget/share/nzbget/nzbget.conf /app/nzbget/webui/nzbget.conf.template \\\n && ln -s /usr/bin/7za /app/nzbget/7za \\\n && ln -s /usr/bin/unrar /app/nzbget/unrar \\\n && cp /nzbget/pubkey.pem /app/nzbget/pubkey.pem \\\n && curl -o /app/nzbget/cacert.pem -L \"https://curl.haxx.se/ca/cacert.pem\"\n#   Runtime Stage\nFROM lsiobase/alpine:arm32v7-3.9\n#   set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs,thelamer\"\nRUN echo \"**** install build packages ****\" \\\n && apk add --no-cache --upgrade --virtual=build-dependencies gcc libc-dev libxml2-dev libxslt-dev make py2-pip python-dev \\\n && echo \"**** install packages ****\" \\\n && apk add --no-cache curl libxml2 libxslt openssl p7zip python2 unrar wget \\\n && echo \"**** install python packages ****\" \\\n && pip install apprise chardet pynzbget --no-cache-dir \\\n && echo \"**** cleanup ****\" \\\n && apk del --purge build-dependencies \\\n && rm -rf /root/.cache /tmp/*\n#   add local files and files from buildstage\nCOPY --from=buildstage /app/nzbget /app/nzbget\nCOPY root/ /\n#   ports and volumes\nVOLUME /config /downloads\nEXPOSE 6789/tcp\n","originalDockerfileUglifiedHash":"b3716e6d3b63f03832d3f37c63ecaeb7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3695dca7fb9ab6608bc97606b8f9814e345fa0ac.dockerfile"}