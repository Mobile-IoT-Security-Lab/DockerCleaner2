{"seed":1033084245,"processedDockerfileHash":"8996be99636bc769819a1b62ee8c4c5d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"#   Python 3.7 Kernel on Bionic (based on pyenv)\n#   ============================================\n#\n#   See README.md for instructions.\n#\n#   'python-build' docs:\n#     https://github.com/pyenv/pyenv/tree/master/plugins/python-build\n#\nARG extras=default\nARG distro=ubuntu:bionic\nARG pyversion=3.7.2\nARG pyenv_version=1.2.9\nARG pyenv_url=https://github.com/pyenv/pyenv/archive/v${pyenv_version}.tar.gz\nFROM ${distro} AS builder\nARG extras\n#   Install build dependencies for 'python-build'\nRUN env LANG=C apt-get update -qq -o Acquire::Languages=none \\\n && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends -o Dpkg::Options::=--force-unsafe-io build-essential ca-certificates curl dpkg-dev libparse-debianchangelog-perl llvm make wget xz-utils libbz2-dev libdb-dev libexpat1-dev libffi-dev libfreetype6-dev libgdbm-dev libcurl4-openssl-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev libtar-dev libtinfo-dev libxml2-dev libxmlsec1-dev libz-dev libzip-dev tk-dev zlib1g-dev less vim \\\n && apt-get clean \\\n && rm -rf \"/var/lib/apt/lists\"/*\n#   Build selected Python version using 'pyenv'\nARG pyversion\nARG pyenv_version\nWORKDIR /opt\nCOPY Docker/v${pyenv_version}.tar.gz ./\nRUN tar --strip-components=1 -xzf v${pyenv_version}.tar.gz \\\n && export PYENV_ROOT=$PWD \\\n && (cd plugins/python-build \\\n && ./install.sh ) \\\n && mkdir -p python \\\n && { python-build -v ${pyversion} $PWD/python ;RC=$? ; } \\\n && tail -n33 $( ls -1rt /tmp/*.log | tail -n1 ;) \\\n && echo RC=$RC\n#   Update Python tools\nRUN /opt/python/bin/python3 -m pip install --no-warn-script-location -U pip \\\n && /opt/python/bin/python3 -m pip install --no-warn-script-location -U setuptools wheel\n#   Build source-only native wheels\nCOPY setup.py MANIFEST.in /tmp/\nCOPY debian/changelog debian/control debian/rules /tmp/debian/\nRUN mkdir -p /opt/python/wheels \\\n && /opt/python/bin/python3 -m pip install --no-warn-script-location $( egrep Cython /tmp/setup.py | cut -f2 -d\"'\" ;) \\\n && /opt/python/bin/python3 -m pip wheel -w /opt/python/wheels psutil $( egrep pycurl /tmp/setup.py | cut -f2 -d\"'\" ;) $( egrep word2vec /tmp/setup.py | cut -f2 -d\"'\" ;) $( egrep Pillow /tmp/setup.py | cut -f2 -d\"'\" ;) -e /tmp/.[$extras]\n#   Reduce size of runtime image by removing cruft (lib: 188M → 55M)\nRUN cd python \\\n && rm -rf lib/libpython*.a lib/python*/config-*-*-linux-gnu lib/python*/ensurepip lib/python*/idlelib lib/python*/lib2to3 lib/python*/test lib/python*/turtle.py lib/python*/turtledemo lib/python*/__pycache__/turtle.*.pyc lib/python*/__pycache__/*.opt-?.pyc\n#   Report library dependencies and top-level dir sizes\nRUN find /opt/python/ -name *.so | xargs ldd | egrep -v '^/opt/py|libc.so|libm.so' | awk '{print $1}' | sort -u | xargs dpkg -S | cut -f1 -d: | sort -u \\\n && du -sch /opt/python/*\n#   Build runtime image\nFROM ${distro} AS runtime\nLABEL maintainer=\"Juergen Hermann <jh@web.de>\"\n#   http://label-schema.org/\nLABEL org.label-schema.schema-version=\"0.9.5.1\"\nLABEL org.label-schema.name=\"ono-py3-kernel\"\nLABEL org.label-schema.description=\"Python3 JupyterHub Kernel\"\nLABEL org.label-schema.url=\"https://github.com/1and1/debianized-jupyterhub/blob/master/Docker\"\nLABEL org.label-schema.vcs-url=\"https://github.com/1and1/debianized-jupyterhub.git\"\nARG extras\nENV LANG=\"en_US.UTF-8\"\nRUN env LANG=C apt-get update -qq -o Acquire::Languages=none \\\n && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install -yqq --no-install-recommends -o Dpkg::Options::=--force-unsafe-io ca-certificates locales mime-support libparse-debianchangelog-perl libbsd0 libbz2-1.0 libcurl4 libdb5.3 libexpat1 libffi6 libfreetype6 $( apt-cache search libgdbm[0-9] | awk '{print $1}' ;) libncursesw5 libpng16-16 libreadline7 libsqlite3-0 libssl1.1 libtinfo5 zlib1g libtcl8.6 libtk8.6 tix tk8.6-blt2.5 \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && locale-gen --lang \"$LANG\" \\\n && apt-get clean \\\n && rm -rf \"/var/lib/apt/lists\"/*\nCOPY --from=builder /opt/python /opt/python\nCOPY debian/rules /tmp\nCOPY requirements.txt /tmp\nRUN groupadd jupyter \\\n && useradd -g jupyter -G jupyter,users -c \"Jupyter User\" -s /bin/bash --create-home jupyter \\\n && chmod 750 ~jupyter \\\n && chown -R jupyter.jupyter ~jupyter \\\n && (echo 'jupyter:demo' | chpasswd ) \\\n && /opt/python/bin/python3 -m pip install -f /opt/python/wheels --no-warn-script-location debianized-jupyterhub[$extras] \\\n && /opt/python/bin/python3 -m pip install -r /tmp/requirements.txt \\\n && /opt/python/bin/python3 -m pip uninstall -y debianized-jupyterhub \\\n && bash -c \"rm -rf /opt/python/lib/python3.*/site-packages/phantomjs_bin/bin/{macosx,windows}\" \\\n && ln -s /opt/python/bin/* /usr/local/bin\nWORKDIR /home/jupyter\nUSER jupyter\nCOPY --chown=jupyter:jupyter docs/examples/*.ipynb ./\nEXPOSE 8900/tcp 8901/tcp\nCMD jupyter notebook --ip=127.0.0.1 --port=8900\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Python 3.7 Kernel on Bionic (based on pyenv)\n#  ============================================\n#\n#  See README.md for instructions.\n#\n#  'python-build' docs:\n#    https://github.com/pyenv/pyenv/tree/master/plugins/python-build\n#\nARG extras=default\nARG distro=ubuntu:bionic\nARG pyversion=3.7.2\nARG pyenv_version=1.2.9\nARG pyenv_url=https://github.com/pyenv/pyenv/archive/v${pyenv_version}.tar.gz\nFROM ${distro} AS builder\nARG extras\n#  Install build dependencies for 'python-build'\nRUN env LANG=C apt-get update -qq -o Acquire::Languages=none \\\n && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends -o Dpkg::Options::=--force-unsafe-io build-essential ca-certificates curl dpkg-dev libparse-debianchangelog-perl llvm make wget xz-utils libbz2-dev libdb-dev libexpat1-dev libffi-dev libfreetype6-dev libgdbm-dev libcurl4-openssl-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev libtar-dev libtinfo-dev libxml2-dev libxmlsec1-dev libz-dev libzip-dev tk-dev zlib1g-dev less vim \\\n && apt-get clean \\\n && rm -rf \"/var/lib/apt/lists\"/*\n#  Build selected Python version using 'pyenv'\nARG pyversion\nARG pyenv_version\nWORKDIR /opt\nCOPY Docker/v${pyenv_version}.tar.gz ./\nRUN tar --strip-components=1 -xzf v${pyenv_version}.tar.gz \\\n && export PYENV_ROOT=$PWD \\\n && (cd plugins/python-build \\\n && ./install.sh ) \\\n && mkdir -p python \\\n && { python-build -v ${pyversion} $PWD/python ;RC=$? ; } \\\n && tail -n33 $( ls -1rt /tmp/*.log | tail -n1 ;) \\\n && echo RC=$RC\n#  Update Python tools\nRUN /opt/python/bin/python3 -m pip install --no-warn-script-location -U pip \\\n && /opt/python/bin/python3 -m pip install --no-warn-script-location -U setuptools wheel\n#  Build source-only native wheels\nCOPY setup.py MANIFEST.in /tmp/\nCOPY debian/changelog debian/control debian/rules /tmp/debian/\nRUN mkdir -p /opt/python/wheels \\\n && /opt/python/bin/python3 -m pip install --no-warn-script-location $( egrep Cython /tmp/setup.py | cut -f2 -d\"'\" ;) \\\n && /opt/python/bin/python3 -m pip wheel -w /opt/python/wheels psutil $( egrep pycurl /tmp/setup.py | cut -f2 -d\"'\" ;) $( egrep word2vec /tmp/setup.py | cut -f2 -d\"'\" ;) $( egrep Pillow /tmp/setup.py | cut -f2 -d\"'\" ;) -e /tmp/.[$extras]\n#  Reduce size of runtime image by removing cruft (lib: 188M → 55M)\nRUN cd python \\\n && rm -rf lib/libpython*.a lib/python*/config-*-*-linux-gnu lib/python*/ensurepip lib/python*/idlelib lib/python*/lib2to3 lib/python*/test lib/python*/turtle.py lib/python*/turtledemo lib/python*/__pycache__/turtle.*.pyc lib/python*/__pycache__/*.opt-?.pyc\n#  Report library dependencies and top-level dir sizes\nRUN find /opt/python/ -name *.so | xargs ldd | egrep -v '^/opt/py|libc.so|libm.so' | awk '{print $1}' | sort -u | xargs dpkg -S | cut -f1 -d: | sort -u \\\n && du -sch /opt/python/*\n#  Build runtime image\nFROM ${distro} AS runtime\nLABEL maintainer=\"Juergen Hermann <jh@web.de>\"\n#  http://label-schema.org/\nLABEL org.label-schema.schema-version=\"0.9.5.1\"\nLABEL org.label-schema.name=\"ono-py3-kernel\"\nLABEL org.label-schema.description=\"Python3 JupyterHub Kernel\"\nLABEL org.label-schema.url=\"https://github.com/1and1/debianized-jupyterhub/blob/master/Docker\"\nLABEL org.label-schema.vcs-url=\"https://github.com/1and1/debianized-jupyterhub.git\"\nARG extras\nENV LANG=\"en_US.UTF-8\"\nRUN env LANG=C apt-get update -qq -o Acquire::Languages=none \\\n && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install -yqq --no-install-recommends -o Dpkg::Options::=--force-unsafe-io ca-certificates locales mime-support libparse-debianchangelog-perl libbsd0 libbz2-1.0 libcurl4 libdb5.3 libexpat1 libffi6 libfreetype6 $( apt-cache search libgdbm[0-9] | awk '{print $1}' ;) libncursesw5 libpng16-16 libreadline7 libsqlite3-0 libssl1.1 libtinfo5 zlib1g libtcl8.6 libtk8.6 tix tk8.6-blt2.5 \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && locale-gen --lang \"$LANG\" \\\n && apt-get clean \\\n && rm -rf \"/var/lib/apt/lists\"/*\nCOPY --from=builder /opt/python /opt/python\nCOPY debian/rules /tmp\nCOPY requirements.txt /tmp\nRUN groupadd jupyter \\\n && useradd -g jupyter -G jupyter,users -c \"Jupyter User\" -s /bin/bash --create-home jupyter \\\n && chmod 750 ~jupyter \\\n && chown -R jupyter.jupyter ~jupyter \\\n && (echo 'jupyter:demo' | chpasswd ) \\\n && /opt/python/bin/python3 -m pip install -f /opt/python/wheels --no-warn-script-location debianized-jupyterhub[$extras] \\\n && /opt/python/bin/python3 -m pip install -r /tmp/requirements.txt \\\n && /opt/python/bin/python3 -m pip uninstall -y debianized-jupyterhub \\\n && bash -c \"rm -rf /opt/python/lib/python3.*/site-packages/phantomjs_bin/bin/{macosx,windows}\" \\\n && ln -s /opt/python/bin/* /usr/local/bin\nWORKDIR /home/jupyter\nUSER jupyter\nCOPY --chown=jupyter:jupyter docs/examples/*.ipynb ./\nEXPOSE 8900/tcp 8901/tcp\nCMD jupyter notebook --ip=127.0.0.1 --port=8900\n","injectedSmells":[],"originalDockerfileHash":"836a737b9e93675bf901cd6a3d939d55","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Python 3.7 Kernel on Bionic (based on pyenv)\n#   ============================================\n#\n#   See README.md for instructions.\n#\n#   'python-build' docs:\n#     https://github.com/pyenv/pyenv/tree/master/plugins/python-build\n#\nARG extras=default\nARG distro=ubuntu:bionic\nARG pyversion=3.7.2\nARG pyenv_version=1.2.9\nARG pyenv_url=https://github.com/pyenv/pyenv/archive/v${pyenv_version}.tar.gz\nFROM ${distro} AS builder\nARG extras\n#   Install build dependencies for 'python-build'\nRUN env LANG=C apt-get update -qq -o Acquire::Languages=none \\\n && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends -o Dpkg::Options::=--force-unsafe-io build-essential ca-certificates curl dpkg-dev libparse-debianchangelog-perl llvm make wget xz-utils libbz2-dev libdb-dev libexpat1-dev libffi-dev libfreetype6-dev libgdbm-dev libcurl4-openssl-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev libtar-dev libtinfo-dev libxml2-dev libxmlsec1-dev libz-dev libzip-dev tk-dev zlib1g-dev less vim \\\n && apt-get clean \\\n && rm -rf \"/var/lib/apt/lists\"/*\n#   Build selected Python version using 'pyenv'\nARG pyversion\nARG pyenv_version\nWORKDIR /opt\nCOPY Docker/v${pyenv_version}.tar.gz ./\nRUN tar --strip-components=1 -xzf v${pyenv_version}.tar.gz \\\n && export PYENV_ROOT=$PWD \\\n && (cd plugins/python-build \\\n && ./install.sh ) \\\n && mkdir -p python \\\n && { python-build -v ${pyversion} $PWD/python ;RC=$? ; } \\\n && tail -n33 $( ls -1rt /tmp/*.log | tail -n1 ;) \\\n && echo RC=$RC\n#   Update Python tools\nRUN /opt/python/bin/python3 -m pip install --no-warn-script-location -U pip \\\n && /opt/python/bin/python3 -m pip install --no-warn-script-location -U setuptools wheel\n#   Build source-only native wheels\nCOPY setup.py MANIFEST.in /tmp/\nCOPY debian/changelog debian/control debian/rules /tmp/debian/\nRUN mkdir -p /opt/python/wheels \\\n && /opt/python/bin/python3 -m pip install --no-warn-script-location $( egrep Cython /tmp/setup.py | cut -f2 -d\"'\" ;) \\\n && /opt/python/bin/python3 -m pip wheel -w /opt/python/wheels psutil $( egrep pycurl /tmp/setup.py | cut -f2 -d\"'\" ;) $( egrep word2vec /tmp/setup.py | cut -f2 -d\"'\" ;) $( egrep Pillow /tmp/setup.py | cut -f2 -d\"'\" ;) -e /tmp/.[$extras]\n#   Reduce size of runtime image by removing cruft (lib: 188M → 55M)\nRUN cd python \\\n && rm -rf lib/libpython*.a lib/python*/config-*-*-linux-gnu lib/python*/ensurepip lib/python*/idlelib lib/python*/lib2to3 lib/python*/test lib/python*/turtle.py lib/python*/turtledemo lib/python*/__pycache__/turtle.*.pyc lib/python*/__pycache__/*.opt-?.pyc\n#   Report library dependencies and top-level dir sizes\nRUN find /opt/python/ -name *.so | xargs ldd | egrep -v '^/opt/py|libc.so|libm.so' | awk '{print $1}' | sort -u | xargs dpkg -S | cut -f1 -d: | sort -u \\\n && du -sch /opt/python/*\n#   Build runtime image\nFROM ${distro} AS runtime\nLABEL maintainer=\"Juergen Hermann <jh@web.de>\"\n#   http://label-schema.org/\nLABEL org.label-schema.schema-version=\"0.9.5.1\"\nLABEL org.label-schema.name=\"ono-py3-kernel\"\nLABEL org.label-schema.description=\"Python3 JupyterHub Kernel\"\nLABEL org.label-schema.url=\"https://github.com/1and1/debianized-jupyterhub/blob/master/Docker\"\nLABEL org.label-schema.vcs-url=\"https://github.com/1and1/debianized-jupyterhub.git\"\nARG extras\nENV LANG=\"en_US.UTF-8\"\nRUN env LANG=C apt-get update -qq -o Acquire::Languages=none \\\n && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install -yqq --no-install-recommends -o Dpkg::Options::=--force-unsafe-io ca-certificates locales mime-support libparse-debianchangelog-perl libbsd0 libbz2-1.0 libcurl4 libdb5.3 libexpat1 libffi6 libfreetype6 $( apt-cache search libgdbm[0-9] | awk '{print $1}' ;) libncursesw5 libpng16-16 libreadline7 libsqlite3-0 libssl1.1 libtinfo5 zlib1g libtcl8.6 libtk8.6 tix tk8.6-blt2.5 \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && locale-gen --lang \"$LANG\" \\\n && apt-get clean \\\n && rm -rf \"/var/lib/apt/lists\"/*\nCOPY --from=builder /opt/python /opt/python\nCOPY debian/rules /tmp\nCOPY requirements.txt /tmp\nRUN groupadd jupyter \\\n && useradd -g jupyter -G jupyter,users -c \"Jupyter User\" -s /bin/bash --create-home jupyter \\\n && chmod 750 ~jupyter \\\n && chown -R jupyter.jupyter ~jupyter \\\n && (echo 'jupyter:demo' | chpasswd ) \\\n && /opt/python/bin/python3 -m pip install -f /opt/python/wheels --no-warn-script-location debianized-jupyterhub[$extras] \\\n && /opt/python/bin/python3 -m pip install -r /tmp/requirements.txt \\\n && /opt/python/bin/python3 -m pip uninstall -y debianized-jupyterhub \\\n && bash -c \"rm -rf /opt/python/lib/python3.*/site-packages/phantomjs_bin/bin/{macosx,windows}\" \\\n && ln -s /opt/python/bin/* /usr/local/bin\nWORKDIR /home/jupyter\nUSER jupyter\nCOPY --chown=jupyter:jupyter docs/examples/*.ipynb ./\nEXPOSE 8900/tcp 8901/tcp\nCMD jupyter notebook --ip=127.0.0.1 --port=8900\n","originalDockerfileUglifiedHash":"31305dced08f42c04928e0fc0ec13be8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/59869719663687a1d94d7465c1a86c6ff266a56a.dockerfile"}