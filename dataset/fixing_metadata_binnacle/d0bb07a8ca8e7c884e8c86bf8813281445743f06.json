{"seed":2246134513,"processedDockerfileHash":"19df3fb48b28d18a4b99edd5abe01d81","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG PHP_VERSION\nARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons AS commons\nFROM php:${PHP_VERSION}-fpm-alpine\nLABEL maintainer=\"amazee.io\"\nENV LAGOON=\"php\"\nARG LAGOON_VERSION\nENV LAGOON_VERSION=\"$LAGOON_VERSION\"\n#   Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /sbin/tini /sbin/\nCOPY --from=commons /home /home\nRUN chmod g+w /etc/passwd \\\n && mkdir -p /home\nENV TMPDIR=\"/tmp\" \\\n    TMP=\"/tmp\" \\\n    HOME=\"/home\" \\\n    ENV=\"/home/.bashrc\" \\\n    BASH_ENV=\"/home/.bashrc\"\nCOPY check_fcgi /usr/sbin/\nCOPY entrypoints/70-php-config.sh entrypoints/60-php-xdebug.sh entrypoints/50-ssmtp.sh entrypoints/71-php-newrelic.sh /lagoon/entrypoints/\nCOPY php.ini /usr/local/etc/php/\nCOPY 00-lagoon-php.ini.tpl /usr/local/etc/php/conf.d/\nCOPY php-fpm.d/www.conf /usr/local/etc/php-fpm.d/www.conf\nCOPY ssmtp.conf /etc/ssmtp/ssmtp.conf\nENV NEWRELIC_VERSION=\"8.6.0.238\"\nRUN apk del --no-cache curl libcurl \\\n && apk add \"curl=7.61.1-r2\" \"libcurl=7.61.1-r2\" --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/v3.8/main/ \\\n && apk add fcgi ssmtp libzip libzip-dev libpng-dev libjpeg-turbo-dev gettext-dev libmcrypt-dev libxml2-dev libxslt-dev libwebp-dev postgresql-dev --no-cache \\\n && apk add $PHPIZE_DEPS --no-cache --virtual .phpize-deps \\\n && if [ ${PHP_VERSION%.*} == \"7.3\" ] ; then yes '' | pecl install -f apcu \\\n && yes '' | pecl install -f xdebug-2.7.0 ; elif [ ${PHP_VERSION%.*.*} == \"7\" ] ; then yes '' | pecl install -f apcu \\\n && yes '' | pecl install -f xdebug ; fi \\\n && if [ ${PHP_VERSION%.*.*} == \"5\" ] ; then yes '' | pecl install -f apcu-4.0.11 \\\n && yes '' | pecl install -f xdebug-2.5.5 ; fi \\\n && yes '' | pecl install -f redis \\\n && docker-php-ext-enable apcu redis xdebug \\\n && docker-php-ext-configure gd --with-webp-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j4 bcmath gd gettext pdo_mysql mysqli pdo_pgsql pgsql shmop soap sockets opcache xsl zip \\\n && if [ ${PHP_VERSION%.*} == \"7.1\" ] || [ ${PHP_VERSION%.*} == \"7.0\" ] || [ ${PHP_VERSION%.*.*} == \"5\" ] ; then docker-php-ext-install mcrypt ; fi \\\n && sed -i '1s/^/;Intentionally disabled. Enable via setting env variable XDEBUG_ENABLE to true\\n;/' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n && rm -rf /var/cache/apk/* /tmp/pear/ \\\n && apk del .phpize-deps \\\n && mkdir -p /tmp/newrelic \\\n && cd /tmp/newrelic \\\n && wget https://download.newrelic.com/php_agent/archive/${NEWRELIC_VERSION}/newrelic-php5-${NEWRELIC_VERSION}-linux-musl.tar.gz \\\n && gzip -dc newrelic-php5-${NEWRELIC_VERSION}-linux-musl.tar.gz | tar --strip-components=1 -xf - \\\n && NR_INSTALL_USE_CP_NOT_LN=1 ./newrelic-install install \\\n && sed -i -e \"s/newrelic.appname = .*/newrelic.appname = \\\"${LAGOON_PROJECT:-noproject}-${LAGOON_GIT_SAFE_BRANCH:-nobranch}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/;newrelic.enabled = .*/newrelic.enabled = ${NEWRELIC_ENABLED:-false}/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/newrelic.license = .*/newrelic.license = \\\"${NEWRELIC_LICENSE:-}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/;newrelic.loglevel = .*/newrelic.loglevel = \\\"${NEWRELIC_LOG_LEVEL:-warning}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/;newrelic.daemon.loglevel = .*/newrelic.daemon.loglevel = \\\"${NEWRELIC_DAEMON_LOG_LEVEL:-warning}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/newrelic.logfile = .*/newrelic.logfile = \\\"\\/dev\\/stdout\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/newrelic.daemon.logfile = .*/newrelic.daemon.logfile = \\\"\\/dev\\/stdout\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && mv /usr/local/etc/php/conf.d/newrelic.ini /usr/local/etc/php/conf.d/newrelic.disable \\\n && cd / \\\n && rm -rf /tmp/newrelic \\\n && mkdir -p /app \\\n && fix-permissions /usr/local/etc/ \\\n && fix-permissions /app \\\n && fix-permissions /etc/ssmtp/ssmtp.conf\nEXPOSE 9000/tcp\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV AMAZEEIO_DB_HOST=\"mariadb\" \\\n    AMAZEEIO_DB_PORT=\"3306\" \\\n    AMAZEEIO_DB_USERNAME=\"drupal\" \\\n    AMAZEEIO_SITENAME=\"drupal\" \\\n    AMAZEEIO_SITE_NAME=\"drupal\" \\\n    AMAZEEIO_SITE_ENVIRONMENT=\"development\" \\\n    AMAZEEIO_HASH_SALT=\"0000000000000000000000000\" \\\n    AMAZEEIO_TMP_PATH=\"/tmp\" \\\n    AMAZEEIO_LOCATION=\"docker\"\nENV LAGOON_ENVIRONMENT_TYPE=\"development\"\nWORKDIR /app\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\nCMD [\"/usr/local/sbin/php-fpm\", \"-F\", \"-R\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG PHP_VERSION\nARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons AS commons\nFROM php:${PHP_VERSION}-fpm-alpine\nLABEL maintainer=\"amazee.io\"\nENV LAGOON=\"php\"\nARG LAGOON_VERSION\nENV LAGOON_VERSION=\"$LAGOON_VERSION\"\n#  Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /sbin/tini /sbin/\nCOPY --from=commons /home /home\nRUN chmod g+w /etc/passwd \\\n && mkdir -p /home\nENV TMPDIR=\"/tmp\" \\\n    TMP=\"/tmp\" \\\n    HOME=\"/home\" \\\n    ENV=\"/home/.bashrc\" \\\n    BASH_ENV=\"/home/.bashrc\"\nCOPY check_fcgi /usr/sbin/\nCOPY entrypoints/70-php-config.sh entrypoints/60-php-xdebug.sh entrypoints/50-ssmtp.sh entrypoints/71-php-newrelic.sh /lagoon/entrypoints/\nCOPY php.ini /usr/local/etc/php/\nCOPY 00-lagoon-php.ini.tpl /usr/local/etc/php/conf.d/\nCOPY php-fpm.d/www.conf /usr/local/etc/php-fpm.d/www.conf\nCOPY ssmtp.conf /etc/ssmtp/ssmtp.conf\nENV NEWRELIC_VERSION=\"8.6.0.238\"\nRUN apk del --no-cache curl libcurl \\\n && apk add --no-cache \"curl=7.61.1-r2\" \"libcurl=7.61.1-r2\" --repository http://dl-cdn.alpinelinux.org/alpine/v3.8/main/ \\\n && apk add --no-cache fcgi ssmtp libzip libzip-dev libpng-dev libjpeg-turbo-dev gettext-dev libmcrypt-dev libxml2-dev libxslt-dev libwebp-dev postgresql-dev \\\n && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \\\n && if [ ${PHP_VERSION%.*} == \"7.3\" ] ; then yes '' | pecl install -f apcu \\\n && yes '' | pecl install -f xdebug-2.7.0 ; elif [ ${PHP_VERSION%.*.*} == \"7\" ] ; then yes '' | pecl install -f apcu \\\n && yes '' | pecl install -f xdebug ; fi \\\n && if [ ${PHP_VERSION%.*.*} == \"5\" ] ; then yes '' | pecl install -f apcu-4.0.11 \\\n && yes '' | pecl install -f xdebug-2.5.5 ; fi \\\n && yes '' | pecl install -f redis \\\n && docker-php-ext-enable apcu redis xdebug \\\n && docker-php-ext-configure gd --with-webp-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j4 bcmath gd gettext pdo_mysql mysqli pdo_pgsql pgsql shmop soap sockets opcache xsl zip \\\n && if [ ${PHP_VERSION%.*} == \"7.1\" ] || [ ${PHP_VERSION%.*} == \"7.0\" ] || [ ${PHP_VERSION%.*.*} == \"5\" ] ; then docker-php-ext-install mcrypt ; fi \\\n && sed -i '1s/^/;Intentionally disabled. Enable via setting env variable XDEBUG_ENABLE to true\\n;/' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n && rm -rf /var/cache/apk/* /tmp/pear/ \\\n && apk del .phpize-deps \\\n && mkdir -p /tmp/newrelic \\\n && cd /tmp/newrelic \\\n && wget https://download.newrelic.com/php_agent/archive/${NEWRELIC_VERSION}/newrelic-php5-${NEWRELIC_VERSION}-linux-musl.tar.gz \\\n && gzip -dc newrelic-php5-${NEWRELIC_VERSION}-linux-musl.tar.gz | tar --strip-components=1 -xf - \\\n && NR_INSTALL_USE_CP_NOT_LN=1 ./newrelic-install install \\\n && sed -i -e \"s/newrelic.appname = .*/newrelic.appname = \\\"${LAGOON_PROJECT:-noproject}-${LAGOON_GIT_SAFE_BRANCH:-nobranch}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/;newrelic.enabled = .*/newrelic.enabled = ${NEWRELIC_ENABLED:-false}/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/newrelic.license = .*/newrelic.license = \\\"${NEWRELIC_LICENSE:-}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/;newrelic.loglevel = .*/newrelic.loglevel = \\\"${NEWRELIC_LOG_LEVEL:-warning}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/;newrelic.daemon.loglevel = .*/newrelic.daemon.loglevel = \\\"${NEWRELIC_DAEMON_LOG_LEVEL:-warning}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/newrelic.logfile = .*/newrelic.logfile = \\\"\\/dev\\/stdout\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/newrelic.daemon.logfile = .*/newrelic.daemon.logfile = \\\"\\/dev\\/stdout\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && mv /usr/local/etc/php/conf.d/newrelic.ini /usr/local/etc/php/conf.d/newrelic.disable \\\n && cd / \\\n && rm -rf /tmp/newrelic \\\n && mkdir -p /app \\\n && fix-permissions /usr/local/etc/ \\\n && fix-permissions /app \\\n && fix-permissions /etc/ssmtp/ssmtp.conf\nEXPOSE 9000/tcp\nENV AMAZEEIO_DB_HOST=\"mariadb\" \\\n    AMAZEEIO_DB_PORT=\"3306\" \\\n    AMAZEEIO_DB_USERNAME=\"drupal\" \\\n    AMAZEEIO_DB_PASSWORD=\"drupal\" \\\n    AMAZEEIO_SITENAME=\"drupal\" \\\n    AMAZEEIO_SITE_NAME=\"drupal\" \\\n    AMAZEEIO_SITE_ENVIRONMENT=\"development\" \\\n    AMAZEEIO_HASH_SALT=\"0000000000000000000000000\" \\\n    AMAZEEIO_TMP_PATH=\"/tmp\" \\\n    AMAZEEIO_LOCATION=\"docker\"\nENV LAGOON_ENVIRONMENT_TYPE=\"development\"\nWORKDIR /app\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\nCMD [\"/usr/local/sbin/php-fpm\", \"-F\", \"-R\"]\n","injectedSmells":[],"originalDockerfileHash":"c361da00c842eb19967f0fcd85e14af1","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG PHP_VERSION\nARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons AS commons\nFROM php:${PHP_VERSION}-fpm-alpine\nLABEL maintainer=\"amazee.io\"\nENV LAGOON=\"php\"\nARG LAGOON_VERSION\nENV LAGOON_VERSION=\"$LAGOON_VERSION\"\n#   Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /sbin/tini /sbin/\nCOPY --from=commons /home /home\nRUN chmod g+w /etc/passwd \\\n && mkdir -p /home\nENV TMPDIR=\"/tmp\" \\\n    TMP=\"/tmp\" \\\n    HOME=\"/home\" \\\n    ENV=\"/home/.bashrc\" \\\n    BASH_ENV=\"/home/.bashrc\"\nCOPY check_fcgi /usr/sbin/\nCOPY entrypoints/70-php-config.sh entrypoints/60-php-xdebug.sh entrypoints/50-ssmtp.sh entrypoints/71-php-newrelic.sh /lagoon/entrypoints/\nCOPY php.ini /usr/local/etc/php/\nCOPY 00-lagoon-php.ini.tpl /usr/local/etc/php/conf.d/\nCOPY php-fpm.d/www.conf /usr/local/etc/php-fpm.d/www.conf\nCOPY ssmtp.conf /etc/ssmtp/ssmtp.conf\nENV NEWRELIC_VERSION=\"8.6.0.238\"\nRUN apk del --no-cache curl libcurl \\\n && apk add --no-cache \"curl=7.61.1-r2\" \"libcurl=7.61.1-r2\" --repository http://dl-cdn.alpinelinux.org/alpine/v3.8/main/ \\\n && apk add --no-cache fcgi ssmtp libzip libzip-dev libpng-dev libjpeg-turbo-dev gettext-dev libmcrypt-dev libxml2-dev libxslt-dev libwebp-dev postgresql-dev \\\n && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \\\n && if [ ${PHP_VERSION%.*} == \"7.3\" ] ; then yes '' | pecl install -f apcu \\\n && yes '' | pecl install -f xdebug-2.7.0 ; elif [ ${PHP_VERSION%.*.*} == \"7\" ] ; then yes '' | pecl install -f apcu \\\n && yes '' | pecl install -f xdebug ; fi \\\n && if [ ${PHP_VERSION%.*.*} == \"5\" ] ; then yes '' | pecl install -f apcu-4.0.11 \\\n && yes '' | pecl install -f xdebug-2.5.5 ; fi \\\n && yes '' | pecl install -f redis \\\n && docker-php-ext-enable apcu redis xdebug \\\n && docker-php-ext-configure gd --with-webp-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j4 bcmath gd gettext pdo_mysql mysqli pdo_pgsql pgsql shmop soap sockets opcache xsl zip \\\n && if [ ${PHP_VERSION%.*} == \"7.1\" ] || [ ${PHP_VERSION%.*} == \"7.0\" ] || [ ${PHP_VERSION%.*.*} == \"5\" ] ; then docker-php-ext-install mcrypt ; fi \\\n && sed -i '1s/^/;Intentionally disabled. Enable via setting env variable XDEBUG_ENABLE to true\\n;/' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n && rm -rf /var/cache/apk/* /tmp/pear/ \\\n && apk del .phpize-deps \\\n && mkdir -p /tmp/newrelic \\\n && cd /tmp/newrelic \\\n && wget https://download.newrelic.com/php_agent/archive/${NEWRELIC_VERSION}/newrelic-php5-${NEWRELIC_VERSION}-linux-musl.tar.gz \\\n && gzip -dc newrelic-php5-${NEWRELIC_VERSION}-linux-musl.tar.gz | tar --strip-components=1 -xf - \\\n && NR_INSTALL_USE_CP_NOT_LN=1 ./newrelic-install install \\\n && sed -i -e \"s/newrelic.appname = .*/newrelic.appname = \\\"${LAGOON_PROJECT:-noproject}-${LAGOON_GIT_SAFE_BRANCH:-nobranch}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/;newrelic.enabled = .*/newrelic.enabled = ${NEWRELIC_ENABLED:-false}/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/newrelic.license = .*/newrelic.license = \\\"${NEWRELIC_LICENSE:-}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/;newrelic.loglevel = .*/newrelic.loglevel = \\\"${NEWRELIC_LOG_LEVEL:-warning}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/;newrelic.daemon.loglevel = .*/newrelic.daemon.loglevel = \\\"${NEWRELIC_DAEMON_LOG_LEVEL:-warning}\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/newrelic.logfile = .*/newrelic.logfile = \\\"\\/dev\\/stdout\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && sed -i -e \"s/newrelic.daemon.logfile = .*/newrelic.daemon.logfile = \\\"\\/dev\\/stdout\\\"/\" /usr/local/etc/php/conf.d/newrelic.ini \\\n && mv /usr/local/etc/php/conf.d/newrelic.ini /usr/local/etc/php/conf.d/newrelic.disable \\\n && cd / \\\n && rm -rf /tmp/newrelic \\\n && mkdir -p /app \\\n && fix-permissions /usr/local/etc/ \\\n && fix-permissions /app \\\n && fix-permissions /etc/ssmtp/ssmtp.conf\nEXPOSE 9000/tcp\nENV AMAZEEIO_DB_HOST=\"mariadb\" \\\n    AMAZEEIO_DB_PORT=\"3306\" \\\n    AMAZEEIO_DB_USERNAME=\"drupal\" \\\n    AMAZEEIO_DB_PASSWORD=\"drupal\" \\\n    AMAZEEIO_SITENAME=\"drupal\" \\\n    AMAZEEIO_SITE_NAME=\"drupal\" \\\n    AMAZEEIO_SITE_ENVIRONMENT=\"development\" \\\n    AMAZEEIO_HASH_SALT=\"0000000000000000000000000\" \\\n    AMAZEEIO_TMP_PATH=\"/tmp\" \\\n    AMAZEEIO_LOCATION=\"docker\"\nENV LAGOON_ENVIRONMENT_TYPE=\"development\"\nWORKDIR /app\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\nCMD [\"/usr/local/sbin/php-fpm\", \"-F\", \"-R\"]\n","originalDockerfileUglifiedHash":"10df3e40f6a95161df3173dedaedc33e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d0bb07a8ca8e7c884e8c86bf8813281445743f06.dockerfile"}