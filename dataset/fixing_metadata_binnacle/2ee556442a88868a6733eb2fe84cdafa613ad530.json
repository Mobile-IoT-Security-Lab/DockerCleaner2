{"seed":3882043101,"processedDockerfileHash":"c4531abcaf2a3497b377d55e4302fc7f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\n#   set maintainer\nLABEL maintainer=\"spalani2@jhu.edu\"\n#   update\nRUN : \\\n && apt-get -y upgrade\n#   install packages\nRUN (apt-get update ;apt-get install --no-install-recommends cmake=3.5.1-1ubuntu3 cpio=2.11+dfsg-5ubuntu1.1 gfortran=4:5.3.1-1ubuntu1 libpng-dev libblas-dev=3.6.0-2ubuntu2 liblapack-dev=3.6.0-2ubuntu2 libatlas-base-dev=3.10.2-9 software-properties-common=0.96.20.10 git=1:2.7.4-0ubuntu1.10 man wget=1.17.1-1ubuntu1.5 freetype* -y )\n#   install python3\nRUN add-apt-repository ppa:jonathonf/python-3.6\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends python3.6 python3.6-dev -y )\nRUN wget https://bootstrap.pypa.io/get-pip.py\nRUN python3.6 get-pip.py\nRUN ln -s /usr/bin/python3.6 /usr/local/bin/python\n#   install MKL\n#   RUN cd /tmp && \\\n#     wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/11306/l_mkl_2017.2.174.tgz && \\\n#     tar -xzf l_mkl_2017.2.174.tgz && \\\n#     cd l_mkl_2017.2.174 && \\\n#     sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg && \\\n#     ./install.sh -s silent.cfg && \\\n#     cd .. && \\\n#     rm -rf *\n#   RUN echo \"/opt/intel/mkl/lib/intel64\" >> /etc/ld.so.conf.d/intel.conf && \\\n#     ldconfig && \\\n#     echo \". /opt/intel/bin/compilervars.sh intel64\" >> /etc/bash.bashrc\n#   install numpy with MKL\n#   RUN pip install Cython\n#   RUN cd /tmp && \\\n#    git clone https://github.com/numpy/numpy.git numpy && \\\n#    cd numpy && \\\n#    cp site.cfg.example site.cfg && \\\n#    echo \"\\n[mkl]\" >> site.cfg && \\\n#    echo \"include_dirs = /opt/intel/mkl/include/intel64/\" >> site.cfg && \\\n#    echo \"library_dirs = /opt/intel/mkl/lib/intel64/\" >> site.cfg && \\\n#    echo \"mkl_libs = mkl_rt\" >> site.cfg && \\\n#    echo \"lapack_libs =\" >> site.cfg && \\\n#    python setup.py build --fcompiler=gnu95 && \\\n#    python setup.py install && \\\n#    cd .. && \\\n#    rm -rf *\n#   install scipy\n#   RUN cd /tmp && \\\n#    git clone https://github.com/scipy/scipy.git scipy && \\\n#    cd scipy && \\\n#    python setup.py build && \\\n#    python setup.py install && \\\n#    cd .. && \\\n#    rm -rf *\n#   make a directory for mounting local files into docker\nRUN mkdir /root/workspace/\n#   add vim in docker\nRUN (apt-get update ;apt-get install --no-install-recommends vim=2:7.4.1689-3ubuntu1.5 -y )\n#   change working directory\nRUN mkdir /root/code/\nWORKDIR /root/code/\n#   clone the mgcpy code into the container\nARG SOURCE_BRANCH=master\nRUN git clone -b ${SOURCE_BRANCH} https://github.com/neurodata/mgcpy.git .\n#   install python requirements\nRUN pip install -r requirements.txt\nRUN pip install matplotlib==3.7.1 seaborn==0.12.2 pandas==2.0.0 jupyter==1.0.0 pycodestyle==2.10.0\n#   setup pep8 guidelines (restricts push when pep8 is violated)\nRUN rm -f ./.git/hooks/pre-commit\nRUN chmod 777 install-hooks.sh\nRUN ./install-hooks.sh\n#   install mgcpy\nRUN python setup.py build_ext --inplace\n#   add mgcpy to PYTHONPATH for dev purposes\nRUN echo \"export PYTHONPATH='${PYTHONPATH}:/root/code'\" >> ~/.bashrc\n#   clean dir and test if mgcpy is correctly installed\nRUN py3clean .\nRUN python -c \"import mgcpy\"\n#   launch terminal\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\n#  set maintainer\nLABEL maintainer=\"spalani2@jhu.edu\"\n#  update\nRUN apt-get update \\\n && apt-get -y upgrade\n#  install packages\nRUN apt-get install cmake cpio gfortran libpng-dev libblas-dev liblapack-dev libatlas-base-dev software-properties-common git man wget freetype* -y\n#  install python3\nRUN add-apt-repository ppa:jonathonf/python-3.6\nRUN apt-get update\nRUN apt-get install python3.6 python3.6-dev -y\nRUN wget https://bootstrap.pypa.io/get-pip.py\nRUN python3.6 get-pip.py\nRUN ln -s /usr/bin/python3.6 /usr/local/bin/python\n#  install MKL\n#  RUN cd /tmp && \\\n#    wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/11306/l_mkl_2017.2.174.tgz && \\\n#    tar -xzf l_mkl_2017.2.174.tgz && \\\n#    cd l_mkl_2017.2.174 && \\\n#    sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg && \\\n#    ./install.sh -s silent.cfg && \\\n#    cd .. && \\\n#    rm -rf *\n#  RUN echo \"/opt/intel/mkl/lib/intel64\" >> /etc/ld.so.conf.d/intel.conf && \\\n#    ldconfig && \\\n#    echo \". /opt/intel/bin/compilervars.sh intel64\" >> /etc/bash.bashrc\n#  install numpy with MKL\n#  RUN pip install Cython\n#  RUN cd /tmp && \\\n#   git clone https://github.com/numpy/numpy.git numpy && \\\n#   cd numpy && \\\n#   cp site.cfg.example site.cfg && \\\n#   echo \"\\n[mkl]\" >> site.cfg && \\\n#   echo \"include_dirs = /opt/intel/mkl/include/intel64/\" >> site.cfg && \\\n#   echo \"library_dirs = /opt/intel/mkl/lib/intel64/\" >> site.cfg && \\\n#   echo \"mkl_libs = mkl_rt\" >> site.cfg && \\\n#   echo \"lapack_libs =\" >> site.cfg && \\\n#   python setup.py build --fcompiler=gnu95 && \\\n#   python setup.py install && \\\n#   cd .. && \\\n#   rm -rf *\n#  install scipy\n#  RUN cd /tmp && \\\n#   git clone https://github.com/scipy/scipy.git scipy && \\\n#   cd scipy && \\\n#   python setup.py build && \\\n#   python setup.py install && \\\n#   cd .. && \\\n#   rm -rf *\n#  make a directory for mounting local files into docker\nRUN mkdir /root/workspace/\n#  add vim in docker\nRUN apt-get install vim -y\n#  change working directory\nRUN mkdir /root/code/\nWORKDIR /root/code/\n#  clone the mgcpy code into the container\nARG SOURCE_BRANCH=master\nRUN git clone -b ${SOURCE_BRANCH} https://github.com/neurodata/mgcpy.git .\n#  install python requirements\nRUN pip install -r requirements.txt\nRUN pip install matplotlib seaborn pandas jupyter pycodestyle\n#  setup pep8 guidelines (restricts push when pep8 is violated)\nRUN rm -f ./.git/hooks/pre-commit\nRUN chmod 777 install-hooks.sh\nRUN ./install-hooks.sh\n#  install mgcpy\nRUN python setup.py build_ext --inplace\n#  add mgcpy to PYTHONPATH for dev purposes\nRUN echo \"export PYTHONPATH='${PYTHONPATH}:/root/code'\" >> ~/.bashrc\n#  clean dir and test if mgcpy is correctly installed\nRUN py3clean .\nRUN python -c \"import mgcpy\"\n#  launch terminal\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"251cfc2360c28eba4a508d7fe76346dd","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\n#   set maintainer\nLABEL maintainer=\"spalani2@jhu.edu\"\n#   update\nRUN apt-get update \\\n && apt-get -y upgrade\n#   install packages\nRUN apt-get install cmake cpio gfortran libpng-dev libblas-dev liblapack-dev libatlas-base-dev software-properties-common git man wget freetype* -y\n#   install python3\nRUN add-apt-repository ppa:jonathonf/python-3.6\nRUN apt-get update\nRUN apt-get install python3.6 python3.6-dev -y\nRUN wget https://bootstrap.pypa.io/get-pip.py\nRUN python3.6 get-pip.py\nRUN ln -s /usr/bin/python3.6 /usr/local/bin/python\n#   install MKL\n#   RUN cd /tmp && \\\n#     wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/11306/l_mkl_2017.2.174.tgz && \\\n#     tar -xzf l_mkl_2017.2.174.tgz && \\\n#     cd l_mkl_2017.2.174 && \\\n#     sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg && \\\n#     ./install.sh -s silent.cfg && \\\n#     cd .. && \\\n#     rm -rf *\n#   RUN echo \"/opt/intel/mkl/lib/intel64\" >> /etc/ld.so.conf.d/intel.conf && \\\n#     ldconfig && \\\n#     echo \". /opt/intel/bin/compilervars.sh intel64\" >> /etc/bash.bashrc\n#   install numpy with MKL\n#   RUN pip install Cython\n#   RUN cd /tmp && \\\n#    git clone https://github.com/numpy/numpy.git numpy && \\\n#    cd numpy && \\\n#    cp site.cfg.example site.cfg && \\\n#    echo \"\\n[mkl]\" >> site.cfg && \\\n#    echo \"include_dirs = /opt/intel/mkl/include/intel64/\" >> site.cfg && \\\n#    echo \"library_dirs = /opt/intel/mkl/lib/intel64/\" >> site.cfg && \\\n#    echo \"mkl_libs = mkl_rt\" >> site.cfg && \\\n#    echo \"lapack_libs =\" >> site.cfg && \\\n#    python setup.py build --fcompiler=gnu95 && \\\n#    python setup.py install && \\\n#    cd .. && \\\n#    rm -rf *\n#   install scipy\n#   RUN cd /tmp && \\\n#    git clone https://github.com/scipy/scipy.git scipy && \\\n#    cd scipy && \\\n#    python setup.py build && \\\n#    python setup.py install && \\\n#    cd .. && \\\n#    rm -rf *\n#   make a directory for mounting local files into docker\nRUN mkdir /root/workspace/\n#   add vim in docker\nRUN apt-get install vim -y\n#   change working directory\nRUN mkdir /root/code/\nWORKDIR /root/code/\n#   clone the mgcpy code into the container\nARG SOURCE_BRANCH=master\nRUN git clone -b ${SOURCE_BRANCH} https://github.com/neurodata/mgcpy.git .\n#   install python requirements\nRUN pip install -r requirements.txt\nRUN pip install matplotlib seaborn pandas jupyter pycodestyle\n#   setup pep8 guidelines (restricts push when pep8 is violated)\nRUN rm -f ./.git/hooks/pre-commit\nRUN chmod 777 install-hooks.sh\nRUN ./install-hooks.sh\n#   install mgcpy\nRUN python setup.py build_ext --inplace\n#   add mgcpy to PYTHONPATH for dev purposes\nRUN echo \"export PYTHONPATH='${PYTHONPATH}:/root/code'\" >> ~/.bashrc\n#   clean dir and test if mgcpy is correctly installed\nRUN py3clean .\nRUN python -c \"import mgcpy\"\n#   launch terminal\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"252d8fe6e8194ab3f089411d70da2ad2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2ee556442a88868a6733eb2fe84cdafa613ad530.dockerfile"}