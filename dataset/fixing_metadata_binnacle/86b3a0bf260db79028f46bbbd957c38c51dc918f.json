{"seed":2888403302,"processedDockerfileHash":"3ff803ff43a27bdaf21abba3b8db1322","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER evan hazlett <ejhazlett@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.4ubuntu1 bash-completion=1:2.8-1ubuntu1 gcc=4:7.4.0-1ubuntu2.3 dnsutils=1:9.11.3+dfsg-1ubuntu1.18 git-core make=4.1-9.1ubuntu1 bc=1.07.1-2 jq=1.5+dfsg-2 bzr=2.7.0+bzr6622-10 man-db=2.8.3-2ubuntu0.1 locales=2.27-3ubuntu1.6 python=2.7.15~rc1-1 python-dev=2.7.15~rc1-1 python-setuptools=39.0.1-2ubuntu0.1 autoconf=2.69-11 gawk=1:4.1.4+dfsg-1build1 libtool=2.4.6-2 libncurses5-dev=6.1-1ubuntu1.18.04 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 mercurial=4.5.3-1ubuntu2.2 aufs-tools=1:4.9+20170918-1ubuntu1 libbz2-dev=1.0.6-8.1ubuntu0.2 libreadline-dev=7.0-3 gettext=0.19.8.1-6ubuntu0.3 htop=2.1.0-3 tmux=2.6-3ubuntu0.3 wget=1.19.4-1ubuntu2.2 sysstat=11.6.1-1ubuntu0.2 curl=7.58.0-2ubuntu3.24 sudo=1.8.21p2-3ubuntu1.5 socat=1.7.3.2-2ubuntu2 ctags libsqlite3-dev=3.22.0-1ubuntu0.7 libdevmapper-dev=2:1.02.145-4.1ubuntu3.18.04.3 rng-tools=5-0ubuntu4 s3cmd=2.0.1-2 libapparmor1=2.12-4ubuntu5.1 libseccomp2=2.5.1-1ubuntu1~18.04.2 apache2-utils=2.4.29-1ubuntu4.27 unzip=6.0-21ubuntu1.2 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 -y\n#   base config\nENV CONTAINER_USER=\"hatter\"\nRUN useradd $CONTAINER_USER\nRUN echo \"ALL ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN cp /usr/share/zoneinfo/America/Indianapolis /etc/localtime\n#   vim\nRUN git clone https://github.com/vim/vim /tmp/vim\nRUN (cd /tmp/vim \\\n && ./configure --prefix=/usr/local --enable-gui=no --without-x --disable-nls --enable-multibyte --with-tlib=ncurses --enable-pythoninterp --with-features=huge \\\n && make install )\n#   go\nENV GO_VERSION=\"1.11.1\"\nRUN wget https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz -O /tmp/go.tar.gz \\\n && tar -C /usr/local -xvf /tmp/go.tar.gz \\\n && rm /tmp/go.tar.gz\nWORKDIR /home/$CONTAINER_USER\nENV HOME=\"/home/$CONTAINER_USER\"\nENV SHELL=\"/bin/bash\"\nCOPY . $HOME/.dotfiles\nRUN (cd $HOME/.dotfiles \\\n && git submodule init \\\n && git submodule update --recursive )\n#   env config\nRUN mkdir -p $HOME/.ssh \\\n && ln -sf $HOME/.dotfiles/vim $HOME/.vim \\\n && ln -sf $HOME/.dotfiles/bashrc $HOME/.bashrc \\\n && ln -sf $HOME/.dotfiles/vimrc $HOME/.vimrc \\\n && sed -i 's/^colorscheme.*//g' $HOME/.dotfiles/vimrc \\\n && vim +PluginInstall +qall > /dev/null 2>&1\nRUN (cd $HOME/.dotfiles \\\n && git checkout vimrc \\\n && ln -sf $HOME/.dotfiles/gitconfig $HOME/.gitconfig \\\n && ln -sf $HOME/.dotfiles/ssh_config $HOME/.ssh/config \\\n && chown $CONTAINER_USER:$CONTAINER_USER $HOME/.ssh/config \\\n && chmod 600 $HOME/.ssh/config \\\n && ln -sf $HOME/.dotfiles/known_hosts $HOME/.ssh/known_hosts \\\n && ln -sf $HOME/.dotfiles/tmux.conf $HOME/.tmux.conf )\n#   go config\nENV GOROOT=\"/usr/local/go\"\nENV GOPATH=\"$HOME/dev/gocode\"\nENV PATH=\"/usr/local/go/bin:$GOPATH/bin:$PATH\"\n#   go tools\nRUN go get -v golang.org/x/tools/present \\\n && go get -v golang.org/x/tools/cmd/goimports \\\n && go get -v golang.org/x/lint/golint \\\n && go get -v github.com/LK4D4/vndr \\\n && go get -v github.com/stevvooe/protobuild \\\n && go get -v github.com/mdempsky/gocode\n#   proto\nRUN git clone https://github.com/google/protobuf /tmp/protobuf \\\n && cd /tmp/protobuf \\\n && ./autogen.sh \\\n && ./configure \\\n && make install\nRUN go get -v github.com/golang/protobuf/protoc-gen-go\nRUN go get -v github.com/gogo/protobuf/protoc-gen-gofast\nRUN go get -v github.com/gogo/protobuf/proto\nRUN go get -v github.com/gogo/protobuf/gogoproto\nRUN go get -v github.com/gogo/protobuf/protoc-gen-gogo\nRUN go get -v github.com/gogo/protobuf/protoc-gen-gogofast\n#   nvm\nRUN cd $HOME \\\n && git clone https://github.com/creationix/nvm .nvm\n#   latest docker binary\nENV DOCKER_VERSION=\"18.06.1-ce\"\nRUN curl -sSL https://download.docker.com/linux/static/edge/x86_64/docker-${DOCKER_VERSION}.tgz -o /tmp/docker-latest.tgz \\\n && tar zxf /tmp/docker-latest.tgz -C /usr/local/bin --strip 1 \\\n && rm -rf /tmp/docker-latest.tgz\n#   perms\nRUN chown -R $CONTAINER_USER:$CONTAINER_USER $HOME \\\n && groupadd -g 2000 docker \\\n && usermod -aG docker $CONTAINER_USER \\\n && usermod -aG users $CONTAINER_USER \\\n && usermod -aG staff $CONTAINER_USER\nVOLUME /home/$CONTAINER_USER\n#   user\nUSER $CONTAINER_USER\nCMD [\"bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER evan hazlett <ejhazlett@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install build-essential bash-completion gcc dnsutils git-core make bc jq bzr man-db locales python python-dev python-setuptools autoconf gawk libtool libncurses5-dev libssl-dev mercurial aufs-tools libbz2-dev libreadline-dev gettext htop tmux wget sysstat curl sudo socat ctags libsqlite3-dev libdevmapper-dev rng-tools s3cmd libapparmor1 libseccomp2 apache2-utils unzip libcurl4-openssl-dev -y\n#  base config\nENV CONTAINER_USER=\"hatter\"\nRUN useradd $CONTAINER_USER\nRUN echo \"ALL ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN cp /usr/share/zoneinfo/America/Indianapolis /etc/localtime\n#  vim\nRUN git clone https://github.com/vim/vim /tmp/vim\nRUN (cd /tmp/vim \\\n && ./configure --prefix=/usr/local --enable-gui=no --without-x --disable-nls --enable-multibyte --with-tlib=ncurses --enable-pythoninterp --with-features=huge \\\n && make install )\n#  go\nENV GO_VERSION=\"1.11.1\"\nRUN wget https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz -O /tmp/go.tar.gz \\\n && tar -C /usr/local -xvf /tmp/go.tar.gz \\\n && rm /tmp/go.tar.gz\nWORKDIR /home/$CONTAINER_USER\nENV HOME=\"/home/$CONTAINER_USER\"\nENV SHELL=\"/bin/bash\"\nCOPY . $HOME/.dotfiles\nRUN (cd $HOME/.dotfiles \\\n && git submodule init \\\n && git submodule update --recursive )\n#  env config\nRUN mkdir -p $HOME/.ssh \\\n && ln -sf $HOME/.dotfiles/vim $HOME/.vim \\\n && ln -sf $HOME/.dotfiles/bashrc $HOME/.bashrc \\\n && ln -sf $HOME/.dotfiles/vimrc $HOME/.vimrc \\\n && sed -i 's/^colorscheme.*//g' $HOME/.dotfiles/vimrc \\\n && vim +PluginInstall +qall > /dev/null 2>&1\nRUN (cd $HOME/.dotfiles \\\n && git checkout vimrc \\\n && ln -sf $HOME/.dotfiles/gitconfig $HOME/.gitconfig \\\n && ln -sf $HOME/.dotfiles/ssh_config $HOME/.ssh/config \\\n && chown $CONTAINER_USER:$CONTAINER_USER $HOME/.ssh/config \\\n && chmod 600 $HOME/.ssh/config \\\n && ln -sf $HOME/.dotfiles/known_hosts $HOME/.ssh/known_hosts \\\n && ln -sf $HOME/.dotfiles/tmux.conf $HOME/.tmux.conf )\n#  go config\nENV GOROOT=\"/usr/local/go\"\nENV GOPATH=\"$HOME/dev/gocode\"\nENV PATH=\"/usr/local/go/bin:$GOPATH/bin:$PATH\"\n#  go tools\nRUN go get -v golang.org/x/tools/present \\\n && go get -v golang.org/x/tools/cmd/goimports \\\n && go get -v golang.org/x/lint/golint \\\n && go get -v github.com/LK4D4/vndr \\\n && go get -v github.com/stevvooe/protobuild \\\n && go get -v github.com/mdempsky/gocode\n#  proto\nRUN git clone https://github.com/google/protobuf /tmp/protobuf \\\n && cd /tmp/protobuf \\\n && ./autogen.sh \\\n && ./configure \\\n && make install\nRUN go get -v github.com/golang/protobuf/protoc-gen-go\nRUN go get -v github.com/gogo/protobuf/protoc-gen-gofast\nRUN go get -v github.com/gogo/protobuf/proto\nRUN go get -v github.com/gogo/protobuf/gogoproto\nRUN go get -v github.com/gogo/protobuf/protoc-gen-gogo\nRUN go get -v github.com/gogo/protobuf/protoc-gen-gogofast\n#  nvm\nRUN cd $HOME \\\n && git clone https://github.com/creationix/nvm .nvm\n#  latest docker binary\nENV DOCKER_VERSION=\"18.06.1-ce\"\nRUN curl -sSL https://download.docker.com/linux/static/edge/x86_64/docker-${DOCKER_VERSION}.tgz -o /tmp/docker-latest.tgz \\\n && tar zxf /tmp/docker-latest.tgz -C /usr/local/bin --strip 1 \\\n && rm -rf /tmp/docker-latest.tgz\n#  perms\nRUN chown -R $CONTAINER_USER:$CONTAINER_USER $HOME \\\n && groupadd -g 2000 docker \\\n && usermod -aG docker $CONTAINER_USER \\\n && usermod -aG users $CONTAINER_USER \\\n && usermod -aG staff $CONTAINER_USER\nVOLUME /home/$CONTAINER_USER\n#  user\nUSER $CONTAINER_USER\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"58eb83e4d1f635dbb1772dd3ac298966","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER evan hazlett <ejhazlett@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install build-essential bash-completion gcc dnsutils git-core make bc jq bzr man-db locales python python-dev python-setuptools autoconf gawk libtool libncurses5-dev libssl-dev mercurial aufs-tools libbz2-dev libreadline-dev gettext htop tmux wget sysstat curl sudo socat ctags libsqlite3-dev libdevmapper-dev rng-tools s3cmd libapparmor1 libseccomp2 apache2-utils unzip libcurl4-openssl-dev -y\n#   base config\nENV CONTAINER_USER=\"hatter\"\nRUN useradd $CONTAINER_USER\nRUN echo \"ALL ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN cp /usr/share/zoneinfo/America/Indianapolis /etc/localtime\n#   vim\nRUN git clone https://github.com/vim/vim /tmp/vim\nRUN (cd /tmp/vim \\\n && ./configure --prefix=/usr/local --enable-gui=no --without-x --disable-nls --enable-multibyte --with-tlib=ncurses --enable-pythoninterp --with-features=huge \\\n && make install )\n#   go\nENV GO_VERSION=\"1.11.1\"\nRUN wget https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz -O /tmp/go.tar.gz \\\n && tar -C /usr/local -xvf /tmp/go.tar.gz \\\n && rm /tmp/go.tar.gz\nWORKDIR /home/$CONTAINER_USER\nENV HOME=\"/home/$CONTAINER_USER\"\nENV SHELL=\"/bin/bash\"\nCOPY . $HOME/.dotfiles\nRUN (cd $HOME/.dotfiles \\\n && git submodule init \\\n && git submodule update --recursive )\n#   env config\nRUN mkdir -p $HOME/.ssh \\\n && ln -sf $HOME/.dotfiles/vim $HOME/.vim \\\n && ln -sf $HOME/.dotfiles/bashrc $HOME/.bashrc \\\n && ln -sf $HOME/.dotfiles/vimrc $HOME/.vimrc \\\n && sed -i 's/^colorscheme.*//g' $HOME/.dotfiles/vimrc \\\n && vim +PluginInstall +qall > /dev/null 2>&1\nRUN (cd $HOME/.dotfiles \\\n && git checkout vimrc \\\n && ln -sf $HOME/.dotfiles/gitconfig $HOME/.gitconfig \\\n && ln -sf $HOME/.dotfiles/ssh_config $HOME/.ssh/config \\\n && chown $CONTAINER_USER:$CONTAINER_USER $HOME/.ssh/config \\\n && chmod 600 $HOME/.ssh/config \\\n && ln -sf $HOME/.dotfiles/known_hosts $HOME/.ssh/known_hosts \\\n && ln -sf $HOME/.dotfiles/tmux.conf $HOME/.tmux.conf )\n#   go config\nENV GOROOT=\"/usr/local/go\"\nENV GOPATH=\"$HOME/dev/gocode\"\nENV PATH=\"/usr/local/go/bin:$GOPATH/bin:$PATH\"\n#   go tools\nRUN go get -v golang.org/x/tools/present \\\n && go get -v golang.org/x/tools/cmd/goimports \\\n && go get -v golang.org/x/lint/golint \\\n && go get -v github.com/LK4D4/vndr \\\n && go get -v github.com/stevvooe/protobuild \\\n && go get -v github.com/mdempsky/gocode\n#   proto\nRUN git clone https://github.com/google/protobuf /tmp/protobuf \\\n && cd /tmp/protobuf \\\n && ./autogen.sh \\\n && ./configure \\\n && make install\nRUN go get -v github.com/golang/protobuf/protoc-gen-go\nRUN go get -v github.com/gogo/protobuf/protoc-gen-gofast\nRUN go get -v github.com/gogo/protobuf/proto\nRUN go get -v github.com/gogo/protobuf/gogoproto\nRUN go get -v github.com/gogo/protobuf/protoc-gen-gogo\nRUN go get -v github.com/gogo/protobuf/protoc-gen-gogofast\n#   nvm\nRUN cd $HOME \\\n && git clone https://github.com/creationix/nvm .nvm\n#   latest docker binary\nENV DOCKER_VERSION=\"18.06.1-ce\"\nRUN curl -sSL https://download.docker.com/linux/static/edge/x86_64/docker-${DOCKER_VERSION}.tgz -o /tmp/docker-latest.tgz \\\n && tar zxf /tmp/docker-latest.tgz -C /usr/local/bin --strip 1 \\\n && rm -rf /tmp/docker-latest.tgz\n#   perms\nRUN chown -R $CONTAINER_USER:$CONTAINER_USER $HOME \\\n && groupadd -g 2000 docker \\\n && usermod -aG docker $CONTAINER_USER \\\n && usermod -aG users $CONTAINER_USER \\\n && usermod -aG staff $CONTAINER_USER\nVOLUME /home/$CONTAINER_USER\n#   user\nUSER $CONTAINER_USER\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"2aeef5ccfed9a1a620196b827182a106","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/86b3a0bf260db79028f46bbbd957c38c51dc918f.dockerfile"}