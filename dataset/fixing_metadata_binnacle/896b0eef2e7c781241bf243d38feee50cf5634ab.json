{"seed":1745544738,"processedDockerfileHash":"f89c20fcf9df1b938d2598e99df047ce","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM docker.io/centos:7.3.1611\nARG SALT_VERSION\nARG SALT_PATH\nARG PYZMQ_VERSION\nARG PYTHON_APT_VERSION\nARG TRACE\nARG OS\nARG OS_TYPE\nLABEL maintainer=\"Hortonworks\"\nENV container=\"docker\"\nENV TERM=\"linux\"\nENV PS1=\"\\\"[\\u@cloudbreak \\W]\\$ \\\"\"\nENV SYSTEMCTL_REPLACEMENT=\"https://raw.githubusercontent.com/hortonworks/docker-systemctl-replacement/3a885817b377f0307bd03d82323fa5749136de8f/files/docker/systemctl.py\"\n#   Fix the default shell from dash to bash\n#   Do it one line. Otherwise, after doing rm, docker build cannot find a shell to\n#   run more RUN commands :)\nRUN bash -c 'rm /bin/sh; ln -s /bin/bash /bin/sh'\nRUN chsh -s /bin/bash\n#  ################################################################################\n#   Systemd stuff\n#  ################################################################################\nRUN (cd /lib/systemd/system/sysinit.target.wants/ ;for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; rm -f /lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /lib/systemd/system/local-fs.target.wants/* ; rm -f /lib/systemd/system/sockets.target.wants/*udev* ; rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /lib/systemd/system/basic.target.wants/* ; rm -f /lib/systemd/system/anaconda.target.wants/*\n#  ################################################################################\n#  ################################################################################\n#   Setup yum repos\n#  ################################################################################\n#   XXX: Disabled for public build\n#   Disable fast-mirrors plugin and force everything through our internal repo\n#  RUN sed -i -e 's/^enabled=1/enabled=0/g' /etc/yum/pluginconf.d/fastestmirror.conf\n#   Install epel repo files. epel-release has to go first before some of the other\n#   packages can be installed\nRUN yum -y install epel-release\n#   XXX: Disabled for public build\n#   BUG-68936 Fixing the image to use the HWX internal repos to avoid massive\n#   downloads due to cache-misses on the internal caching-proxy.\n#  RUN rm -rf /etc/yum.repos.d/*\n#  COPY files/hwx-internal.repo /etc/yum.repos.d/\n#   Give preference to our repos\nRUN yum -y install yum-priorities\n#  ################################################################################\n#  ################################################################################\n#   Install basic OS packages + GCC (to build bootstrap)\n#  ################################################################################\nRUN yum install -y yum-utils yum-plugin-ovl tar git curl bind-utils unzip wget gcc net-tools sudo zip lsof strace redhat-lsb\nRUN yum install -y openssh-server openssh-clients\nRUN systemctl enable sshd\nRUN mkdir -p /tmp/image-build-space/image-prep-scripts\n#  ################################################################################\n#   Setup access\n#  ################################################################################\nRUN mkdir -p /tmp/image-build-space/access\nCOPY docker/centos7.3/files/access/* /tmp/image-build-space/access/\nCOPY docker/centos7.3/files/pam/* /tmp/image-build-space/access/\nCOPY docker/centos7.3/files/image-prep-scripts/setup-access.sh /tmp/image-build-space/image-prep-scripts\nRUN /tmp/image-build-space/image-prep-scripts/setup-access.sh\nCOPY docker/centos7.3/files/image-prep-scripts/hwx-internal-setup.sh /tmp/image-build-space/image-prep-scripts\nRUN /tmp/image-build-space/image-prep-scripts/hwx-internal-setup.sh\n#  ################################################################################\n#   install iproute explicitly on centos7, it's present by default in centos6, debian7\nRUN yum -y install iproute\n#  ################################################################################\n#   Setup access\n#  ################################################################################\nRUN mkdir -p /bootstrap /bootstrap/logs\nCOPY docker/centos7.3/files/image-prep-scripts/privileged-start-services-script.c /tmp/image-build-space/image-prep-scripts/\nRUN gcc /tmp/image-build-space/image-prep-scripts/privileged-start-services-script.c -D COMMAND=\\\"/bootstrap/start-services-script.sh\\\" -o /bootstrap/start-systemd\nRUN chgrp -v nobody /bootstrap/start-systemd\nRUN chmod 4050 /bootstrap/start-systemd\nCOPY docker/centos7.3/files/image-runtime-scripts/start-services-script.sh /bootstrap/\n#  ################################################################################\n#   Operating system specific stuff\n#  ################################################################################\nCOPY docker/centos7.3/files/base-centos7.3-os-specific-build.sh /tmp/image-build-space/\nRUN /tmp/image-build-space/base-centos7.3-os-specific-build.sh\n#   Get rid \"Unable to get valid context ..\" message\nCOPY docker/centos7.3/files/autorelabel /.autorelabel\n#  ################################################################################\n#   Install Cloudbreak dependencies\n#  ################################################################################\n#   Use docker-systemctl-replacement during SaltStack provisioning:\n#   `systemctl start xyz` commands are executed during highstate, which is not supported\n#   by systemd. docker-systemctl-replacement overcomes this limitation.\n#   Need to explicitly call yum update before linking systemctl-replacement to avoid\n#   the later update (executed through Salt recipe) overwriting our fix.\nRUN yum -y update\nCOPY ${SYSTEMCTL_REPLACEMENT} /usr/bin\nRUN chmod 755 /usr/bin/$( basename ${SYSTEMCTL_REPLACEMENT} ;) \\\n && mv /usr/bin/systemctl /usr/bin/systemctl.orig \\\n && ln -sf /usr/bin/systemctl.py /usr/bin/systemctl\nCOPY /saltstack /tmp/saltstack\nCOPY /repos /tmp/repos\nCOPY /scripts/salt-install.sh /tmp/saltstack/\nCOPY /scripts/salt-setup.sh /tmp/saltstack/\nCOPY /scripts/salt_requirements.txt /tmp/salt_requirements.txt\n#   Workaround problem caused by sytemd not being pid-1:\n#   Force the minions to use systemd on this host\nRUN echo $'\\nproviders:\\n service: systemd\\n' >> /tmp/saltstack/config/minion\nCOPY docker/common/_grains/ /tmp/saltstack/base/salt/_grains/\nCOPY docker/common/_grains/ /tmp/saltstack/hortonworks/salt/_grains/\nRUN /tmp/saltstack/salt-install.sh centos ${SALT_REPO}\nRUN /tmp/saltstack/salt-setup.sh hortonworks\nRUN rm -f /etc/salt/minion_id /etc/salt/pki/minion/minion.pem /etc/salt/pki/minion/minion.pub\n#   Fix issue of `systemctl start xyz` yields 'Failed to get D-Bus connection: Operation not permitted' error\nCOPY docker/centos7.3/files/workaround_systemd_start.service /usr/lib/systemd/system/workaround_systemd_start.service\nRUN systemctl enable workaround_systemd_start\n#   restore systemctl to system default\nRUN ln -sf /usr/bin/systemctl.orig /usr/bin/systemctl\n#  ################################################################################\nVOLUME [ \"/sys/fs/cgroup\" ]\nCMD [\"/bootstrap/start-systemd\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM docker.io/centos:7.3.1611\nARG SALT_VERSION\nARG SALT_PATH\nARG PYZMQ_VERSION\nARG PYTHON_APT_VERSION\nARG TRACE\nARG OS\nARG OS_TYPE\nLABEL maintainer=\"Hortonworks\"\nENV container=\"docker\"\nENV TERM=\"linux\"\nENV PS1=\"\\\"[\\u@cloudbreak \\W]\\$ \\\"\"\nENV SYSTEMCTL_REPLACEMENT=\"https://raw.githubusercontent.com/hortonworks/docker-systemctl-replacement/3a885817b377f0307bd03d82323fa5749136de8f/files/docker/systemctl.py\"\n#  Fix the default shell from dash to bash\n#  Do it one line. Otherwise, after doing rm, docker build cannot find a shell to\n#  run more RUN commands :)\nRUN bash -c 'rm /bin/sh; ln -s /bin/bash /bin/sh'\nRUN chsh -s /bin/bash\n# ################################################################################\n#  Systemd stuff\n# ################################################################################\nRUN (cd /lib/systemd/system/sysinit.target.wants/ ;for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; rm -f /lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /lib/systemd/system/local-fs.target.wants/* ; rm -f /lib/systemd/system/sockets.target.wants/*udev* ; rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /lib/systemd/system/basic.target.wants/* ; rm -f /lib/systemd/system/anaconda.target.wants/*\n# ################################################################################\n# ################################################################################\n#  Setup yum repos\n# ################################################################################\n#  XXX: Disabled for public build\n#  Disable fast-mirrors plugin and force everything through our internal repo\n# RUN sed -i -e 's/^enabled=1/enabled=0/g' /etc/yum/pluginconf.d/fastestmirror.conf\n#  Install epel repo files. epel-release has to go first before some of the other\n#  packages can be installed\nRUN yum -y install epel-release\n#  XXX: Disabled for public build\n#  BUG-68936 Fixing the image to use the HWX internal repos to avoid massive\n#  downloads due to cache-misses on the internal caching-proxy.\n# RUN rm -rf /etc/yum.repos.d/*\n# COPY files/hwx-internal.repo /etc/yum.repos.d/\n#  Give preference to our repos\nRUN yum -y install yum-priorities\n# ################################################################################\n# ################################################################################\n#  Install basic OS packages + GCC (to build bootstrap)\n# ################################################################################\nRUN yum install -y yum-utils yum-plugin-ovl tar git curl bind-utils unzip wget gcc net-tools sudo zip lsof strace redhat-lsb\nRUN yum install -y openssh-server openssh-clients\nRUN systemctl enable sshd\nRUN mkdir -p /tmp/image-build-space/image-prep-scripts\n# ################################################################################\n#  Setup access\n# ################################################################################\nRUN mkdir -p /tmp/image-build-space/access\nCOPY docker/centos7.3/files/access/* /tmp/image-build-space/access/\nCOPY docker/centos7.3/files/pam/* /tmp/image-build-space/access/\nCOPY docker/centos7.3/files/image-prep-scripts/setup-access.sh /tmp/image-build-space/image-prep-scripts\nRUN /tmp/image-build-space/image-prep-scripts/setup-access.sh\nCOPY docker/centos7.3/files/image-prep-scripts/hwx-internal-setup.sh /tmp/image-build-space/image-prep-scripts\nRUN /tmp/image-build-space/image-prep-scripts/hwx-internal-setup.sh\n# ################################################################################\n#  install iproute explicitly on centos7, it's present by default in centos6, debian7\nRUN yum -y install iproute\n# ################################################################################\n#  Setup access\n# ################################################################################\nRUN mkdir -p /bootstrap /bootstrap/logs\nCOPY docker/centos7.3/files/image-prep-scripts/privileged-start-services-script.c /tmp/image-build-space/image-prep-scripts/\nRUN gcc /tmp/image-build-space/image-prep-scripts/privileged-start-services-script.c -D COMMAND=\\\"/bootstrap/start-services-script.sh\\\" -o /bootstrap/start-systemd\nRUN chgrp -v nobody /bootstrap/start-systemd\nRUN chmod 4050 /bootstrap/start-systemd\nADD docker/centos7.3/files/image-runtime-scripts/start-services-script.sh /bootstrap/\n# ################################################################################\n#  Operating system specific stuff\n# ################################################################################\nCOPY docker/centos7.3/files/base-centos7.3-os-specific-build.sh /tmp/image-build-space/\nRUN /tmp/image-build-space/base-centos7.3-os-specific-build.sh\n#  Get rid \"Unable to get valid context ..\" message\nCOPY docker/centos7.3/files/autorelabel /.autorelabel\n# ################################################################################\n#  Install Cloudbreak dependencies\n# ################################################################################\n#  Use docker-systemctl-replacement during SaltStack provisioning:\n#  `systemctl start xyz` commands are executed during highstate, which is not supported\n#  by systemd. docker-systemctl-replacement overcomes this limitation.\n#  Need to explicitly call yum update before linking systemctl-replacement to avoid\n#  the later update (executed through Salt recipe) overwriting our fix.\nRUN yum -y update\nADD ${SYSTEMCTL_REPLACEMENT} /usr/bin\nRUN chmod 755 /usr/bin/$( basename ${SYSTEMCTL_REPLACEMENT} ;) \\\n && mv /usr/bin/systemctl /usr/bin/systemctl.orig \\\n && ln -sf /usr/bin/systemctl.py /usr/bin/systemctl\nCOPY /saltstack /tmp/saltstack\nCOPY /repos /tmp/repos\nCOPY /scripts/salt-install.sh /tmp/saltstack/\nCOPY /scripts/salt-setup.sh /tmp/saltstack/\nCOPY /scripts/salt_requirements.txt /tmp/salt_requirements.txt\n#  Workaround problem caused by sytemd not being pid-1:\n#  Force the minions to use systemd on this host\nRUN echo $'\\nproviders:\\n service: systemd\\n' >> /tmp/saltstack/config/minion\nCOPY docker/common/_grains/ /tmp/saltstack/base/salt/_grains/\nCOPY docker/common/_grains/ /tmp/saltstack/hortonworks/salt/_grains/\nRUN /tmp/saltstack/salt-install.sh centos ${SALT_REPO}\nRUN /tmp/saltstack/salt-setup.sh hortonworks\nRUN rm -f /etc/salt/minion_id /etc/salt/pki/minion/minion.pem /etc/salt/pki/minion/minion.pub\n#  Fix issue of `systemctl start xyz` yields 'Failed to get D-Bus connection: Operation not permitted' error\nCOPY docker/centos7.3/files/workaround_systemd_start.service /usr/lib/systemd/system/workaround_systemd_start.service\nRUN systemctl enable workaround_systemd_start\n#  restore systemctl to system default\nRUN ln -sf /usr/bin/systemctl.orig /usr/bin/systemctl\n# ################################################################################\nVOLUME [ \"/sys/fs/cgroup\" ]\nCMD [\"/bootstrap/start-systemd\"]\n","injectedSmells":[],"originalDockerfileHash":"b96ae6317463d337784c4ee3680ae622","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM docker.io/centos:7.3.1611\nARG SALT_VERSION\nARG SALT_PATH\nARG PYZMQ_VERSION\nARG PYTHON_APT_VERSION\nARG TRACE\nARG OS\nARG OS_TYPE\nLABEL maintainer=\"Hortonworks\"\nENV container=\"docker\"\nENV TERM=\"linux\"\nENV PS1=\"\\\"[\\u@cloudbreak \\W]\\$ \\\"\"\nENV SYSTEMCTL_REPLACEMENT=\"https://raw.githubusercontent.com/hortonworks/docker-systemctl-replacement/3a885817b377f0307bd03d82323fa5749136de8f/files/docker/systemctl.py\"\n#   Fix the default shell from dash to bash\n#   Do it one line. Otherwise, after doing rm, docker build cannot find a shell to\n#   run more RUN commands :)\nRUN bash -c 'rm /bin/sh; ln -s /bin/bash /bin/sh'\nRUN chsh -s /bin/bash\n#  ################################################################################\n#   Systemd stuff\n#  ################################################################################\nRUN (cd /lib/systemd/system/sysinit.target.wants/ ;for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; rm -f /lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /lib/systemd/system/local-fs.target.wants/* ; rm -f /lib/systemd/system/sockets.target.wants/*udev* ; rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /lib/systemd/system/basic.target.wants/* ; rm -f /lib/systemd/system/anaconda.target.wants/*\n#  ################################################################################\n#  ################################################################################\n#   Setup yum repos\n#  ################################################################################\n#   XXX: Disabled for public build\n#   Disable fast-mirrors plugin and force everything through our internal repo\n#  RUN sed -i -e 's/^enabled=1/enabled=0/g' /etc/yum/pluginconf.d/fastestmirror.conf\n#   Install epel repo files. epel-release has to go first before some of the other\n#   packages can be installed\nRUN yum -y install epel-release\n#   XXX: Disabled for public build\n#   BUG-68936 Fixing the image to use the HWX internal repos to avoid massive\n#   downloads due to cache-misses on the internal caching-proxy.\n#  RUN rm -rf /etc/yum.repos.d/*\n#  COPY files/hwx-internal.repo /etc/yum.repos.d/\n#   Give preference to our repos\nRUN yum -y install yum-priorities\n#  ################################################################################\n#  ################################################################################\n#   Install basic OS packages + GCC (to build bootstrap)\n#  ################################################################################\nRUN yum install -y yum-utils yum-plugin-ovl tar git curl bind-utils unzip wget gcc net-tools sudo zip lsof strace redhat-lsb\nRUN yum install -y openssh-server openssh-clients\nRUN systemctl enable sshd\nRUN mkdir -p /tmp/image-build-space/image-prep-scripts\n#  ################################################################################\n#   Setup access\n#  ################################################################################\nRUN mkdir -p /tmp/image-build-space/access\nCOPY docker/centos7.3/files/access/* /tmp/image-build-space/access/\nCOPY docker/centos7.3/files/pam/* /tmp/image-build-space/access/\nCOPY docker/centos7.3/files/image-prep-scripts/setup-access.sh /tmp/image-build-space/image-prep-scripts\nRUN /tmp/image-build-space/image-prep-scripts/setup-access.sh\nCOPY docker/centos7.3/files/image-prep-scripts/hwx-internal-setup.sh /tmp/image-build-space/image-prep-scripts\nRUN /tmp/image-build-space/image-prep-scripts/hwx-internal-setup.sh\n#  ################################################################################\n#   install iproute explicitly on centos7, it's present by default in centos6, debian7\nRUN yum -y install iproute\n#  ################################################################################\n#   Setup access\n#  ################################################################################\nRUN mkdir -p /bootstrap /bootstrap/logs\nCOPY docker/centos7.3/files/image-prep-scripts/privileged-start-services-script.c /tmp/image-build-space/image-prep-scripts/\nRUN gcc /tmp/image-build-space/image-prep-scripts/privileged-start-services-script.c -D COMMAND=\\\"/bootstrap/start-services-script.sh\\\" -o /bootstrap/start-systemd\nRUN chgrp -v nobody /bootstrap/start-systemd\nRUN chmod 4050 /bootstrap/start-systemd\nADD docker/centos7.3/files/image-runtime-scripts/start-services-script.sh /bootstrap/\n#  ################################################################################\n#   Operating system specific stuff\n#  ################################################################################\nCOPY docker/centos7.3/files/base-centos7.3-os-specific-build.sh /tmp/image-build-space/\nRUN /tmp/image-build-space/base-centos7.3-os-specific-build.sh\n#   Get rid \"Unable to get valid context ..\" message\nCOPY docker/centos7.3/files/autorelabel /.autorelabel\n#  ################################################################################\n#   Install Cloudbreak dependencies\n#  ################################################################################\n#   Use docker-systemctl-replacement during SaltStack provisioning:\n#   `systemctl start xyz` commands are executed during highstate, which is not supported\n#   by systemd. docker-systemctl-replacement overcomes this limitation.\n#   Need to explicitly call yum update before linking systemctl-replacement to avoid\n#   the later update (executed through Salt recipe) overwriting our fix.\nRUN yum -y update\nADD ${SYSTEMCTL_REPLACEMENT} /usr/bin\nRUN chmod 755 /usr/bin/$( basename ${SYSTEMCTL_REPLACEMENT} ;) \\\n && mv /usr/bin/systemctl /usr/bin/systemctl.orig \\\n && ln -sf /usr/bin/systemctl.py /usr/bin/systemctl\nCOPY /saltstack /tmp/saltstack\nCOPY /repos /tmp/repos\nCOPY /scripts/salt-install.sh /tmp/saltstack/\nCOPY /scripts/salt-setup.sh /tmp/saltstack/\nCOPY /scripts/salt_requirements.txt /tmp/salt_requirements.txt\n#   Workaround problem caused by sytemd not being pid-1:\n#   Force the minions to use systemd on this host\nRUN echo $'\\nproviders:\\n service: systemd\\n' >> /tmp/saltstack/config/minion\nCOPY docker/common/_grains/ /tmp/saltstack/base/salt/_grains/\nCOPY docker/common/_grains/ /tmp/saltstack/hortonworks/salt/_grains/\nRUN /tmp/saltstack/salt-install.sh centos ${SALT_REPO}\nRUN /tmp/saltstack/salt-setup.sh hortonworks\nRUN rm -f /etc/salt/minion_id /etc/salt/pki/minion/minion.pem /etc/salt/pki/minion/minion.pub\n#   Fix issue of `systemctl start xyz` yields 'Failed to get D-Bus connection: Operation not permitted' error\nCOPY docker/centos7.3/files/workaround_systemd_start.service /usr/lib/systemd/system/workaround_systemd_start.service\nRUN systemctl enable workaround_systemd_start\n#   restore systemctl to system default\nRUN ln -sf /usr/bin/systemctl.orig /usr/bin/systemctl\n#  ################################################################################\nVOLUME [ \"/sys/fs/cgroup\" ]\nCMD [\"/bootstrap/start-systemd\"]\n","originalDockerfileUglifiedHash":"16ae76c7f5f9d795909bbf2af857756a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/896b0eef2e7c781241bf243d38feee50cf5634ab.dockerfile"}