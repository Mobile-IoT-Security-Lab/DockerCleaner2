{"seed":4137567990,"processedDockerfileHash":"d7603b8b5943151542b7a16e0a374c57","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"FROM php:7.3-zts-alpine3.9 AS build-parallel\nRUN apk update \\\n && apk add git=2.20.4-r0 $PHPIZE_DEPS --no-cache\nRUN git clone https://github.com/krakjoe/parallel\nWORKDIR /parallel\nRUN git fetch \\\n && git pull \\\n && phpize \\\n && ./configure \\\n && make install \\\n && EXTENSION_DIR=`php-config --extension-dir 2> /dev/null` \\\n && cp \"$EXTENSION_DIR/parallel.so\" /parallel.so\nRUN sha256sum /parallel.so\nFROM php:7.3-zts-alpine3.9 AS build-uv\nRUN apk update \\\n && apk add git=2.20.4-r0 libuv-dev=1.25.0-r0 $PHPIZE_DEPS --no-cache \\\n && git clone https://github.com/bwoebi/php-uv uv\nWORKDIR /uv\nRUN git fetch \\\n && git pull \\\n && phpize \\\n && ./configure \\\n && make install \\\n && EXTENSION_DIR=`php-config --extension-dir 2> /dev/null` \\\n && cp \"$EXTENSION_DIR/uv.so\" /uv.so\nRUN sha256sum /uv.so\nFROM php:7.3-zts-alpine3.9 AS zts\nRUN set -x \\\n && addgroup -g 1000 app \\\n && adduser -u 1000 -D -G app app\nCOPY --from=build-parallel /parallel.so /parallel.so\nCOPY --from=build-uv /uv.so /uv.so\n#   Patch CVE-2018-14618 (curl), CVE-2018-16842 (libxml2), CVE-2019-1543 (openssl)\nRUN apk upgrade --no-cache curl libxml2 openssl\n#   Install docker help scripts\nCOPY src/php/utils/docker/ /usr/local/bin/\nCOPY src/php/conf/ /usr/local/etc/php/conf.d/\nCOPY src/php/cli/conf/*.ini /usr/local/etc/php/conf.d/\nRUN EXTENSION_DIR=`php-config --extension-dir 2> /dev/null` \\\n && mv /*.so \"$EXTENSION_DIR/\" \\\n && apk add freetype-dev=2.9.1-r3 libjpeg-turbo-dev=1.5.3-r6 libpng-dev=1.6.37-r0 gmp-dev=6.1.2-r1 zlib-dev=1.2.11-r1 icu-dev=62.1-r1 postgresql-dev=11.11-r0 libzip-dev=1.5.1-r2 libuv-dev=1.25.0-r0 make=4.2.1-r2 git=2.20.4-r0 openssh-client=7.9_p1-r6 bash=4.4.19-r1 coreutils=8.30-r0 procps=3.3.15-r0 --no-cache \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd pcntl pgsql pdo intl pdo_pgsql bcmath zip gmp iconv \\\n && docker-php-ext-enable parallel \\\n && docker-php-ext-enable uv \\\n && rm -rf /var/cache/apk/*\n#   Install shush\nCOPY src/php/utils/install-shush /usr/local/bin/\nRUN install-shush \\\n && rm -rf /usr/local/bin/install-shush\nSTOPSIGNAL SIGTERM\nUSER app\nENTRYPOINT [\"/usr/local/bin/shush\", \"exec\", \"docker-php-entrypoint\"]\n#  # ZTS-DEV STAGE ##\nFROM zts AS zts-dev\nUSER root\nRUN apk add make=4.2.1-r2 git=2.20.4-r0 openssh-client=7.9_p1-r6 bash=4.4.19-r1\n#   Install docker help scripts\nCOPY src/php/utils/docker/ /usr/local/bin/\n#   Install Xdebug and development specific configuration\nRUN docker-php-dev-mode xdebug \\\n && docker-php-dev-mode config\n#   Install Docker and Docker Compose\nRUN apk add docker=18.09.8-r0 py-pip python-dev libffi-dev=3.2.1-r6 openssl-dev=1.1.1k-r0 gcc=8.3.0-r0 libc-dev=0.7.1-r0 make=4.2.1-r2 --no-cache \\\n && pip install docker-compose==1.29.2\n#   Install composer\nCOPY src/php/utils/install-composer /usr/local/bin/\nRUN install-composer \\\n && rm -rf /usr/local/bin/install-composer\nUSER app\nRUN composer global require hirak/prestissimo --ansi --no-progress\n#   Change entrypoint back to the default because we don't need shush in development\nENTRYPOINT [\"docker-php-entrypoint\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.3-zts-alpine3.9 AS build-parallel\nRUN apk update \\\n && apk add --no-cache $PHPIZE_DEPS git\nRUN git clone https://github.com/krakjoe/parallel\nWORKDIR /parallel\nRUN git fetch \\\n && git pull \\\n && phpize \\\n && ./configure \\\n && make install \\\n && EXTENSION_DIR=`php-config --extension-dir 2> /dev/null` \\\n && cp \"$EXTENSION_DIR/parallel.so\" /parallel.so\nRUN sha256sum /parallel.so\nFROM php:7.3-zts-alpine3.9 AS build-uv\nRUN apk update \\\n && apk add --no-cache $PHPIZE_DEPS git libuv-dev \\\n && git clone https://github.com/bwoebi/php-uv uv\nWORKDIR /uv\nRUN git fetch \\\n && git pull \\\n && phpize \\\n && ./configure \\\n && make install \\\n && EXTENSION_DIR=`php-config --extension-dir 2> /dev/null` \\\n && cp \"$EXTENSION_DIR/uv.so\" /uv.so\nRUN sha256sum /uv.so\nFROM php:7.3-zts-alpine3.9 AS zts\nRUN set -x \\\n && addgroup -g 1000 app \\\n && adduser -u 1000 -D -G app app\nCOPY --from=build-parallel /parallel.so /parallel.so\nCOPY --from=build-uv /uv.so /uv.so\n#  Patch CVE-2018-14618 (curl), CVE-2018-16842 (libxml2), CVE-2019-1543 (openssl)\nRUN apk upgrade --no-cache curl libxml2 openssl\n#  Install docker help scripts\nCOPY src/php/utils/docker/ /usr/local/bin/\nCOPY src/php/conf/ /usr/local/etc/php/conf.d/\nCOPY src/php/cli/conf/*.ini /usr/local/etc/php/conf.d/\nRUN EXTENSION_DIR=`php-config --extension-dir 2> /dev/null` \\\n && mv /*.so \"$EXTENSION_DIR/\" \\\n && apk add --no-cache freetype-dev libjpeg-turbo-dev libpng-dev gmp-dev zlib-dev icu-dev postgresql-dev libzip-dev libuv-dev make git openssh-client bash coreutils procps \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd pcntl pgsql pdo intl pdo_pgsql bcmath zip gmp iconv \\\n && docker-php-ext-enable parallel \\\n && docker-php-ext-enable uv \\\n && rm -rf /var/cache/apk/*\n#  Install shush\nCOPY src/php/utils/install-shush /usr/local/bin/\nRUN install-shush \\\n && rm -rf /usr/local/bin/install-shush\nSTOPSIGNAL SIGTERM\nUSER app\nENTRYPOINT [\"/usr/local/bin/shush\", \"exec\", \"docker-php-entrypoint\"]\n# # ZTS-DEV STAGE ##\nFROM zts AS zts-dev\nUSER root\nRUN apk add make git openssh-client bash\n#  Install docker help scripts\nCOPY src/php/utils/docker/ /usr/local/bin/\n#  Install Xdebug and development specific configuration\nRUN docker-php-dev-mode xdebug \\\n && docker-php-dev-mode config\n#  Install Docker and Docker Compose\nRUN apk add --no-cache docker py-pip python-dev libffi-dev openssl-dev gcc libc-dev make \\\n && pip install docker-compose\n#  Install composer\nCOPY src/php/utils/install-composer /usr/local/bin/\nRUN install-composer \\\n && rm -rf /usr/local/bin/install-composer\nUSER app\nRUN composer global require hirak/prestissimo --ansi --no-progress\n#  Change entrypoint back to the default because we don't need shush in development\nENTRYPOINT [\"docker-php-entrypoint\"]\n","injectedSmells":[],"originalDockerfileHash":"98be82857b12bd62d81456f0f69e46f6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.3-zts-alpine3.9 AS build-parallel\nRUN apk update \\\n && apk add --no-cache $PHPIZE_DEPS git\nRUN git clone https://github.com/krakjoe/parallel\nWORKDIR /parallel\nRUN git fetch \\\n && git pull \\\n && phpize \\\n && ./configure \\\n && make install \\\n && EXTENSION_DIR=`php-config --extension-dir 2> /dev/null` \\\n && cp \"$EXTENSION_DIR/parallel.so\" /parallel.so\nRUN sha256sum /parallel.so\nFROM php:7.3-zts-alpine3.9 AS build-uv\nRUN apk update \\\n && apk add --no-cache $PHPIZE_DEPS git libuv-dev \\\n && git clone https://github.com/bwoebi/php-uv uv\nWORKDIR /uv\nRUN git fetch \\\n && git pull \\\n && phpize \\\n && ./configure \\\n && make install \\\n && EXTENSION_DIR=`php-config --extension-dir 2> /dev/null` \\\n && cp \"$EXTENSION_DIR/uv.so\" /uv.so\nRUN sha256sum /uv.so\nFROM php:7.3-zts-alpine3.9 AS zts\nRUN set -x \\\n && addgroup -g 1000 app \\\n && adduser -u 1000 -D -G app app\nCOPY --from=build-parallel /parallel.so /parallel.so\nCOPY --from=build-uv /uv.so /uv.so\n#   Patch CVE-2018-14618 (curl), CVE-2018-16842 (libxml2), CVE-2019-1543 (openssl)\nRUN apk upgrade --no-cache curl libxml2 openssl\n#   Install docker help scripts\nCOPY src/php/utils/docker/ /usr/local/bin/\nCOPY src/php/conf/ /usr/local/etc/php/conf.d/\nCOPY src/php/cli/conf/*.ini /usr/local/etc/php/conf.d/\nRUN EXTENSION_DIR=`php-config --extension-dir 2> /dev/null` \\\n && mv /*.so \"$EXTENSION_DIR/\" \\\n && apk add --no-cache freetype-dev libjpeg-turbo-dev libpng-dev gmp-dev zlib-dev icu-dev postgresql-dev libzip-dev libuv-dev make git openssh-client bash coreutils procps \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd pcntl pgsql pdo intl pdo_pgsql bcmath zip gmp iconv \\\n && docker-php-ext-enable parallel \\\n && docker-php-ext-enable uv \\\n && rm -rf /var/cache/apk/*\n#   Install shush\nCOPY src/php/utils/install-shush /usr/local/bin/\nRUN install-shush \\\n && rm -rf /usr/local/bin/install-shush\nSTOPSIGNAL SIGTERM\nUSER app\nENTRYPOINT [\"/usr/local/bin/shush\", \"exec\", \"docker-php-entrypoint\"]\n#  # ZTS-DEV STAGE ##\nFROM zts AS zts-dev\nUSER root\nRUN apk add make git openssh-client bash\n#   Install docker help scripts\nCOPY src/php/utils/docker/ /usr/local/bin/\n#   Install Xdebug and development specific configuration\nRUN docker-php-dev-mode xdebug \\\n && docker-php-dev-mode config\n#   Install Docker and Docker Compose\nRUN apk add --no-cache docker py-pip python-dev libffi-dev openssl-dev gcc libc-dev make \\\n && pip install docker-compose\n#   Install composer\nCOPY src/php/utils/install-composer /usr/local/bin/\nRUN install-composer \\\n && rm -rf /usr/local/bin/install-composer\nUSER app\nRUN composer global require hirak/prestissimo --ansi --no-progress\n#   Change entrypoint back to the default because we don't need shush in development\nENTRYPOINT [\"docker-php-entrypoint\"]\n","originalDockerfileUglifiedHash":"d2f51a644e18847c6533a02df6cb6fe3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d2034960819b122c29b20c1532ddf898fffa888e.dockerfile"}