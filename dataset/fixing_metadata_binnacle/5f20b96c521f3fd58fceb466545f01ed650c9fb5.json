{"seed":2484491656,"processedDockerfileHash":"dbd8d7ab9a5af7334eddff35ae6b04df","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:0.9.19\nARG BRANCH_NAME\nARG GIT_COMMIT\nARG AZURE_UPLOAD\nARG AZURE_STORAGE_ACCOUNT\nARG AZURE_STORAGE_ACCESS_KEY\nARG AZURE_STORAGE_CONNECTION_STRING\nARG UPLOAD_PATH\nARG BUILD_VERSION\nARG LIVE_TESTNET\nENV LANG=\"en_US.UTF-8\"\nENV LIVE_TESTNET=\"${LIVE_TESTNET:-OFF}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf automake autotools-dev bsdmainutils build-essential cmake doxygen git libboost-all-dev libicu-dev libreadline-dev libssl-dev libtool ncurses-dev pbzip2 pkg-config python3 python3-dev python3-jinja2 python3-pip python-pip nginx fcgiwrap s3cmd awscli jq wget gdb -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && pip3 install gcovr \\\n && pip install azure-cli==2.47.0\nCOPY . /usr/local/src/scorum\nRUN cd /usr/local/src/scorum \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Debug -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} -DSCORUM_LOW_MEMORY_NODE=OFF -DSCORUM_CLEAR_VOTES=ON -DSCORUM_SKIP_BY_TX_ID=ON -DENABLE_COVERAGE_TESTING=ON .. \\\n && make -j$( nproc ;) \\\n && ./libraries/chainbase/test/chainbase_test \\\n && ./tests/utests/utests \\\n && ./tests/chain_tests/chain_tests \\\n && ./tests/wallet_tests/wallet_tests \\\n && cd /usr/local/src/scorum \\\n && doxygen \\\n && programs/build_helpers/check_reflect.py \\\n && programs/build_helpers/get_config_check.sh \\\n && cd /usr/local/src/scorum/build \\\n && mkdir -p /var/cobertura \\\n && gcovr --object-directory=\"../\" --root=../ --xml-pretty --gcov-exclude=\".*tests.*\" --gcov-exclude=\".*fc.*\" --gcov-exclude=\".*app*\" --gcov-exclude=\".*net*\" --gcov-exclude=\".*plugins*\" --gcov-exclude=\".*schema*\" --gcov-exclude=\".*time*\" --gcov-exclude=\".*utilities*\" --gcov-exclude=\".*wallet*\" --gcov-exclude=\".*programs*\" --output=\"/var/cobertura/coverage.xml\" \\\n && cd /usr/local/src/scorum \\\n && rm -rf /usr/local/src/scorum/build\nRUN cd /usr/local/src/scorum \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/scorumd-default -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} -DSCORUM_LOW_MEMORY_NODE=ON -DSCORUM_CLEAR_VOTES=ON -DSCORUM_SKIP_BY_TX_ID=ON .. \\\n && make -j$( nproc ;) \\\n && ./libraries/chainbase/test/chainbase_test \\\n && ./tests/utests/utests \\\n && ./tests/chain_tests/chain_tests \\\n && ./tests/wallet_tests/wallet_tests \\\n && ./programs/util/test_fixed_string \\\n && make install \\\n && rm -rf /usr/local/src/scorum/build\nRUN cd /usr/local/src/scorum \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/scorumd-full -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} -DSCORUM_LOW_MEMORY_NODE=OFF -DSCORUM_CLEAR_VOTES=OFF -DSCORUM_SKIP_BY_TX_ID=OFF .. \\\n && make -j$( nproc ;) \\\n && ./libraries/chainbase/test/chainbase_test \\\n && ./tests/utests/utests \\\n && ./tests/chain_tests/chain_tests \\\n && ./tests/wallet_tests/wallet_tests \\\n && ./programs/util/test_fixed_string \\\n && make install \\\n && cd / \\\n && rm -rf /usr/local/src/scorum\nRUN (/usr/local/scorumd-default/bin/scorumd --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*' \\\n && echo '_' \\\n && git rev-parse --short HEAD ) | sed -e ':a' -e 'N' -e '$!ba' -e 's/\\n//g' > /etc/scorumdversion \\\n && cat /etc/scorumdversion\nRUN apt-get remove -y automake autotools-dev bsdmainutils build-essential cmake doxygen dpkg-dev git libicu-dev libboost-all-dev libc6-dev libexpat1-dev libgcc-5-dev libhwloc-dev libibverbs-dev libicu-dev libltdl-dev libncurses5-dev libnuma-dev libopenmpi-dev libpython-dev libpython2.7-dev libreadline-dev libreadline6-dev libssl-dev libstdc++-5-dev libtinfo-dev libtool linux-libc-dev m4 make manpages manpages-dev mpi-default-dev python-dev python2.7-dev python3-dev \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/* /usr/include /usr/local/include\nRUN useradd -s /bin/bash -m -d /var/lib/scorumd scorumd\nRUN mkdir /var/cache/scorumd \\\n && chown scorumd:scorumd -R /var/cache/scorumd\nENV HOME=\"/var/lib/scorumd\"\nRUN chown scorumd:scorumd -R /var/lib/scorumd\nVOLUME [\"/var/lib/scorumd\"]\n#   rpc service:\nEXPOSE 8001/tcp\n#   p2p service:\nEXPOSE 2001/tcp\n#   the following adds lots of logging info to stdout\nCOPY contrib/config.ini.witness /etc/scorumd/config.ini.witness\nCOPY contrib/config.ini.rpc /etc/scorumd/config.ini.rpc\nCOPY contrib/seeds.ini.mainnet /etc/scorumd/seeds.ini.mainnet\nCOPY contrib/seeds.ini.testnet /etc/scorumd/seeds.ini.testnet\n#   upload archive to azure\nCOPY contrib/azure_upload.sh /usr/local/bin/azure_upload.sh\nRUN chmod +x /usr/local/bin/azure_upload.sh\nRUN /usr/local/bin/azure_upload.sh\n#   new entrypoint for all instances\n#   this enables exitting of the container when the writer node dies\n#   for PaaS mode (elasticbeanstalk, etc)\n#   AWS EB Docker requires a non-daemonized entrypoint\nCOPY contrib/scorumdentrypoint.sh /usr/local/bin/scorumdentrypoint.sh\nRUN chmod +x /usr/local/bin/scorumdentrypoint.sh\nCMD [\"/bin/bash\", \"/usr/local/bin/scorumdentrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:0.9.19\nARG BRANCH_NAME\nARG GIT_COMMIT\nARG AZURE_UPLOAD\nARG AZURE_STORAGE_ACCOUNT\nARG AZURE_STORAGE_ACCESS_KEY\nARG AZURE_STORAGE_CONNECTION_STRING\nARG UPLOAD_PATH\nARG BUILD_VERSION\nARG LIVE_TESTNET\nENV LANG=\"en_US.UTF-8\"\nENV LIVE_TESTNET=\"${LIVE_TESTNET:-OFF}\"\nRUN apt-get update \\\n && apt-get install autoconf automake autotools-dev bsdmainutils build-essential cmake doxygen git libboost-all-dev libicu-dev libreadline-dev libssl-dev libtool ncurses-dev pbzip2 pkg-config python3 python3-dev python3-jinja2 python3-pip python-pip nginx fcgiwrap s3cmd awscli jq wget gdb -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && pip3 install gcovr \\\n && pip install azure-cli\nADD . /usr/local/src/scorum\nRUN cd /usr/local/src/scorum \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Debug -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} -DSCORUM_LOW_MEMORY_NODE=OFF -DSCORUM_CLEAR_VOTES=ON -DSCORUM_SKIP_BY_TX_ID=ON -DENABLE_COVERAGE_TESTING=ON .. \\\n && make -j$( nproc ;) \\\n && ./libraries/chainbase/test/chainbase_test \\\n && ./tests/utests/utests \\\n && ./tests/chain_tests/chain_tests \\\n && ./tests/wallet_tests/wallet_tests \\\n && cd /usr/local/src/scorum \\\n && doxygen \\\n && programs/build_helpers/check_reflect.py \\\n && programs/build_helpers/get_config_check.sh \\\n && cd /usr/local/src/scorum/build \\\n && mkdir -p /var/cobertura \\\n && gcovr --object-directory=\"../\" --root=../ --xml-pretty --gcov-exclude=\".*tests.*\" --gcov-exclude=\".*fc.*\" --gcov-exclude=\".*app*\" --gcov-exclude=\".*net*\" --gcov-exclude=\".*plugins*\" --gcov-exclude=\".*schema*\" --gcov-exclude=\".*time*\" --gcov-exclude=\".*utilities*\" --gcov-exclude=\".*wallet*\" --gcov-exclude=\".*programs*\" --output=\"/var/cobertura/coverage.xml\" \\\n && cd /usr/local/src/scorum \\\n && rm -rf /usr/local/src/scorum/build\nRUN cd /usr/local/src/scorum \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/scorumd-default -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} -DSCORUM_LOW_MEMORY_NODE=ON -DSCORUM_CLEAR_VOTES=ON -DSCORUM_SKIP_BY_TX_ID=ON .. \\\n && make -j$( nproc ;) \\\n && ./libraries/chainbase/test/chainbase_test \\\n && ./tests/utests/utests \\\n && ./tests/chain_tests/chain_tests \\\n && ./tests/wallet_tests/wallet_tests \\\n && ./programs/util/test_fixed_string \\\n && make install \\\n && rm -rf /usr/local/src/scorum/build\nRUN cd /usr/local/src/scorum \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/scorumd-full -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} -DSCORUM_LOW_MEMORY_NODE=OFF -DSCORUM_CLEAR_VOTES=OFF -DSCORUM_SKIP_BY_TX_ID=OFF .. \\\n && make -j$( nproc ;) \\\n && ./libraries/chainbase/test/chainbase_test \\\n && ./tests/utests/utests \\\n && ./tests/chain_tests/chain_tests \\\n && ./tests/wallet_tests/wallet_tests \\\n && ./programs/util/test_fixed_string \\\n && make install \\\n && cd / \\\n && rm -rf /usr/local/src/scorum\nRUN (/usr/local/scorumd-default/bin/scorumd --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*' \\\n && echo '_' \\\n && git rev-parse --short HEAD ) | sed -e ':a' -e 'N' -e '$!ba' -e 's/\\n//g' > /etc/scorumdversion \\\n && cat /etc/scorumdversion\nRUN apt-get remove -y automake autotools-dev bsdmainutils build-essential cmake doxygen dpkg-dev git libicu-dev libboost-all-dev libc6-dev libexpat1-dev libgcc-5-dev libhwloc-dev libibverbs-dev libicu-dev libltdl-dev libncurses5-dev libnuma-dev libopenmpi-dev libpython-dev libpython2.7-dev libreadline-dev libreadline6-dev libssl-dev libstdc++-5-dev libtinfo-dev libtool linux-libc-dev m4 make manpages manpages-dev mpi-default-dev python-dev python2.7-dev python3-dev \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/* /usr/include /usr/local/include\nRUN useradd -s /bin/bash -m -d /var/lib/scorumd scorumd\nRUN mkdir /var/cache/scorumd \\\n && chown scorumd:scorumd -R /var/cache/scorumd\nENV HOME=\"/var/lib/scorumd\"\nRUN chown scorumd:scorumd -R /var/lib/scorumd\nVOLUME [\"/var/lib/scorumd\"]\n#  rpc service:\nEXPOSE 8001/tcp\n#  p2p service:\nEXPOSE 2001/tcp\n#  the following adds lots of logging info to stdout\nADD contrib/config.ini.witness /etc/scorumd/config.ini.witness\nADD contrib/config.ini.rpc /etc/scorumd/config.ini.rpc\nADD contrib/seeds.ini.mainnet /etc/scorumd/seeds.ini.mainnet\nADD contrib/seeds.ini.testnet /etc/scorumd/seeds.ini.testnet\n#  upload archive to azure\nADD contrib/azure_upload.sh /usr/local/bin/azure_upload.sh\nRUN chmod +x /usr/local/bin/azure_upload.sh\nRUN /usr/local/bin/azure_upload.sh\n#  new entrypoint for all instances\n#  this enables exitting of the container when the writer node dies\n#  for PaaS mode (elasticbeanstalk, etc)\n#  AWS EB Docker requires a non-daemonized entrypoint\nADD contrib/scorumdentrypoint.sh /usr/local/bin/scorumdentrypoint.sh\nRUN chmod +x /usr/local/bin/scorumdentrypoint.sh\nCMD [\"/bin/bash\", \"/usr/local/bin/scorumdentrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"0df97b811f73a51e62a0335394165588","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:0.9.19\nARG BRANCH_NAME\nARG GIT_COMMIT\nARG AZURE_UPLOAD\nARG AZURE_STORAGE_ACCOUNT\nARG AZURE_STORAGE_ACCESS_KEY\nARG AZURE_STORAGE_CONNECTION_STRING\nARG UPLOAD_PATH\nARG BUILD_VERSION\nARG LIVE_TESTNET\nENV LANG=\"en_US.UTF-8\"\nENV LIVE_TESTNET=\"${LIVE_TESTNET:-OFF}\"\nRUN apt-get update \\\n && apt-get install autoconf automake autotools-dev bsdmainutils build-essential cmake doxygen git libboost-all-dev libicu-dev libreadline-dev libssl-dev libtool ncurses-dev pbzip2 pkg-config python3 python3-dev python3-jinja2 python3-pip python-pip nginx fcgiwrap s3cmd awscli jq wget gdb -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && pip3 install gcovr \\\n && pip install azure-cli\nADD . /usr/local/src/scorum\nRUN cd /usr/local/src/scorum \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Debug -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} -DSCORUM_LOW_MEMORY_NODE=OFF -DSCORUM_CLEAR_VOTES=ON -DSCORUM_SKIP_BY_TX_ID=ON -DENABLE_COVERAGE_TESTING=ON .. \\\n && make -j$( nproc ;) \\\n && ./libraries/chainbase/test/chainbase_test \\\n && ./tests/utests/utests \\\n && ./tests/chain_tests/chain_tests \\\n && ./tests/wallet_tests/wallet_tests \\\n && cd /usr/local/src/scorum \\\n && doxygen \\\n && programs/build_helpers/check_reflect.py \\\n && programs/build_helpers/get_config_check.sh \\\n && cd /usr/local/src/scorum/build \\\n && mkdir -p /var/cobertura \\\n && gcovr --object-directory=\"../\" --root=../ --xml-pretty --gcov-exclude=\".*tests.*\" --gcov-exclude=\".*fc.*\" --gcov-exclude=\".*app*\" --gcov-exclude=\".*net*\" --gcov-exclude=\".*plugins*\" --gcov-exclude=\".*schema*\" --gcov-exclude=\".*time*\" --gcov-exclude=\".*utilities*\" --gcov-exclude=\".*wallet*\" --gcov-exclude=\".*programs*\" --output=\"/var/cobertura/coverage.xml\" \\\n && cd /usr/local/src/scorum \\\n && rm -rf /usr/local/src/scorum/build\nRUN cd /usr/local/src/scorum \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/scorumd-default -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} -DSCORUM_LOW_MEMORY_NODE=ON -DSCORUM_CLEAR_VOTES=ON -DSCORUM_SKIP_BY_TX_ID=ON .. \\\n && make -j$( nproc ;) \\\n && ./libraries/chainbase/test/chainbase_test \\\n && ./tests/utests/utests \\\n && ./tests/chain_tests/chain_tests \\\n && ./tests/wallet_tests/wallet_tests \\\n && ./programs/util/test_fixed_string \\\n && make install \\\n && rm -rf /usr/local/src/scorum/build\nRUN cd /usr/local/src/scorum \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/scorumd-full -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} -DSCORUM_LOW_MEMORY_NODE=OFF -DSCORUM_CLEAR_VOTES=OFF -DSCORUM_SKIP_BY_TX_ID=OFF .. \\\n && make -j$( nproc ;) \\\n && ./libraries/chainbase/test/chainbase_test \\\n && ./tests/utests/utests \\\n && ./tests/chain_tests/chain_tests \\\n && ./tests/wallet_tests/wallet_tests \\\n && ./programs/util/test_fixed_string \\\n && make install \\\n && cd / \\\n && rm -rf /usr/local/src/scorum\nRUN (/usr/local/scorumd-default/bin/scorumd --version | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*' \\\n && echo '_' \\\n && git rev-parse --short HEAD ) | sed -e ':a' -e 'N' -e '$!ba' -e 's/\\n//g' > /etc/scorumdversion \\\n && cat /etc/scorumdversion\nRUN apt-get remove -y automake autotools-dev bsdmainutils build-essential cmake doxygen dpkg-dev git libicu-dev libboost-all-dev libc6-dev libexpat1-dev libgcc-5-dev libhwloc-dev libibverbs-dev libicu-dev libltdl-dev libncurses5-dev libnuma-dev libopenmpi-dev libpython-dev libpython2.7-dev libreadline-dev libreadline6-dev libssl-dev libstdc++-5-dev libtinfo-dev libtool linux-libc-dev m4 make manpages manpages-dev mpi-default-dev python-dev python2.7-dev python3-dev \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/* /usr/include /usr/local/include\nRUN useradd -s /bin/bash -m -d /var/lib/scorumd scorumd\nRUN mkdir /var/cache/scorumd \\\n && chown scorumd:scorumd -R /var/cache/scorumd\nENV HOME=\"/var/lib/scorumd\"\nRUN chown scorumd:scorumd -R /var/lib/scorumd\nVOLUME [\"/var/lib/scorumd\"]\n#   rpc service:\nEXPOSE 8001/tcp\n#   p2p service:\nEXPOSE 2001/tcp\n#   the following adds lots of logging info to stdout\nADD contrib/config.ini.witness /etc/scorumd/config.ini.witness\nADD contrib/config.ini.rpc /etc/scorumd/config.ini.rpc\nADD contrib/seeds.ini.mainnet /etc/scorumd/seeds.ini.mainnet\nADD contrib/seeds.ini.testnet /etc/scorumd/seeds.ini.testnet\n#   upload archive to azure\nADD contrib/azure_upload.sh /usr/local/bin/azure_upload.sh\nRUN chmod +x /usr/local/bin/azure_upload.sh\nRUN /usr/local/bin/azure_upload.sh\n#   new entrypoint for all instances\n#   this enables exitting of the container when the writer node dies\n#   for PaaS mode (elasticbeanstalk, etc)\n#   AWS EB Docker requires a non-daemonized entrypoint\nADD contrib/scorumdentrypoint.sh /usr/local/bin/scorumdentrypoint.sh\nRUN chmod +x /usr/local/bin/scorumdentrypoint.sh\nCMD [\"/bin/bash\", \"/usr/local/bin/scorumdentrypoint.sh\"]\n","originalDockerfileUglifiedHash":"79f0050a3b79a8ff8c073011ac01f61b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5f20b96c521f3fd58fceb466545f01ed650c9fb5.dockerfile"}