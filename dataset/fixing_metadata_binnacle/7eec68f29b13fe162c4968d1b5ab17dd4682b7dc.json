{"seed":1422776087,"processedDockerfileHash":"82add8553d6d5b1c00532e9914bca8a1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04 AS builder\n#   Setup APT\nRUN echo 'APT::Install-Recommends \"0\";' > /etc/apt/apt.conf.d/dx-no-recommends\nRUN : \\\n && apt-get -y upgrade\n#   Remove init system\nRUN apt-get purge -y --allow-remove-essential init systemd\n#   Curl\nRUN (apt-get update ;apt-get install --no-install-recommends ca-certificates=20211016ubuntu0.18.04.1 curl=7.58.0-2ubuntu3.24 -y )\n#   Build-time utils\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https gnupg localepurge\n#   Node\nRUN curl -L https://deb.nodesource.com/setup_10.x | bash -\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=8.10.0~dfsg-2ubuntu0.4 -y )\nRUN npm install npm@6 -g\nRUN npm cache clean --force\nRUN npm set progress=false\nRUN npm set loglevel=error\nRUN npm set unsafe-perm=true\nRUN npm set fetch-retries 5\nRUN npm set audit false\n#   .NET Core\nRUN curl -L https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-bionic-prod bionic main\" > /etc/apt/sources.list.d/dotnetdev.list\nRUN :\nRUN DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1 apt-get install -y dotnet-sdk-2.1\nRUN rm /usr/share/dotnet/sdk/*/nuGetPackagesArchive.lzma\n#   Slim\nRUN rm -r /usr/share/dotnet/sdk/*/FSharp\nRUN rm -r /usr/share/dotnet/sdk/NuGetFallbackFolder/*\nRUN rm -r /usr/share/dotnet/shared/Microsoft.AspNetCore.*\nRUN find /usr/share/dotnet -type f -name '*.resources.dll' -delete\nRUN find /usr/share/dotnet -type f -wholename '**/runtimes/win*/**' -delete\n#   Chrome\nRUN curl -L https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor > /etc/apt/trusted.gpg.d/google.gpg\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google-chrome.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends google-chrome-stable -y )\nRUN rm -rf /opt/google/chrome/swiftshader /opt/google/chrome/libwidevinecdm.so\nRUN find /opt/google/chrome/locales -type f ! -name 'en-US.pak' -delete\n#   Firefox\nRUN (apt-get update ;apt-get install --no-install-recommends firefox=111.0.1+build2-0ubuntu0.18.04.1 -y )\nRUN mkdir /firefox-profile\nRUN for p in '\"browser.shell.checkDefaultBrowser\", false' '\"datareporting.policy.dataSubmissionEnabled\", false' '\"font.name-list.monospace.x-western\", \"Liberation Mono\"' '\"font.name-list.sans-serif.x-western\", \"Liberation Sans\"' '\"font.name-list.serif.x-western\", \"Liberation Serif\"'; do echo \"user_pref($p);\" >> /firefox-profile/prefs.js; done\n#   Utils for docker-ci.sh\nRUN (apt-get update ;apt-get install --no-install-recommends dbus-x11=1.12.2-1ubuntu1.4 httping=2.5-1 x11vnc=0.9.13-3 xvfb=2:1.19.6-1ubuntu4.14 -y )\n#   Utils for drone-cache.sh\nRUN (apt-get update ;apt-get install --no-install-recommends liblz4-tool=0.0~r131-2ubuntu3.1 )\n#   Yes :)\nRUN (apt-get update ;apt-get install --no-install-recommends mc=3:4.8.19-1 -y )\n#   Use UTF-8\nRUN (apt-get update ;apt-get install --no-install-recommends locales=2.27-3ubuntu1.6 -y )\nRUN locale-gen en_US.UTF-8\nRUN printf \"MANDELETE\\nen_US.UTF-8\" > /etc/locale.nopurge\nRUN localepurge\n#   Ensure UTC\nRUN [ \"$( date +%Z ;)\" = \"UTC\" ] || exit 1\n#   Remove build-time utils\nRUN apt-get purge -y apt-transport-https gnupg localepurge\n#   Clean APT\nRUN apt-get autoremove -y --purge\nRUN apt-get clean\nRUN rm -rf /etc/apt/sources.list.d/* /tmp/* /usr/share/doc/* /var/cache/* /var/lib/apt/lists/* /var/log/*\n#  ############################################################\nFROM scratch\nCOPY --from=builder / /\nENV LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    TERM=\"xterm\" \\\n    DISPLAY=\":99\" \\\n    NUGET_XMLDOC_MODE=\"skip\" \\\n    DOTNET_SKIP_FIRST_TIME_EXPERIENCE=\"1\" \\\n    DOTNET_CLI_TELEMETRY_OPTOUT=\"1\"\nWORKDIR /devextreme\nSTOPSIGNAL SIGKILL\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04 AS builder\n#  Setup APT\nRUN echo 'APT::Install-Recommends \"0\";' > /etc/apt/apt.conf.d/dx-no-recommends\nRUN apt-get update \\\n && apt-get -y upgrade\n#  Remove init system\nRUN apt-get purge -y --allow-remove-essential init systemd\n#  Curl\nRUN apt-get install ca-certificates curl -y\n#  Build-time utils\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https gnupg localepurge\n#  Node\nRUN curl -L https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install nodejs -y\nRUN npm install npm@6 -g\nRUN npm cache clean --force\nRUN npm set progress=false\nRUN npm set loglevel=error\nRUN npm set unsafe-perm=true\nRUN npm set fetch-retries 5\nRUN npm set audit false\n#  .NET Core\nRUN curl -L https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-bionic-prod bionic main\" > /etc/apt/sources.list.d/dotnetdev.list\nRUN apt-get update\nRUN DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1 apt-get install -y dotnet-sdk-2.1\nRUN rm /usr/share/dotnet/sdk/*/nuGetPackagesArchive.lzma\n#  Slim\nRUN rm -r /usr/share/dotnet/sdk/*/FSharp\nRUN rm -r /usr/share/dotnet/sdk/NuGetFallbackFolder/*\nRUN rm -r /usr/share/dotnet/shared/Microsoft.AspNetCore.*\nRUN find /usr/share/dotnet -type f -name '*.resources.dll' -delete\nRUN find /usr/share/dotnet -type f -wholename '**/runtimes/win*/**' -delete\n#  Chrome\nRUN curl -L https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor > /etc/apt/trusted.gpg.d/google.gpg\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google-chrome.list\nRUN apt-get update\nRUN apt-get install google-chrome-stable -y\nRUN rm -rf /opt/google/chrome/swiftshader /opt/google/chrome/libwidevinecdm.so\nRUN find /opt/google/chrome/locales -type f ! -name 'en-US.pak' -delete\n#  Firefox\nRUN apt-get install firefox -y\nRUN mkdir /firefox-profile\nRUN for p in '\"browser.shell.checkDefaultBrowser\", false' '\"datareporting.policy.dataSubmissionEnabled\", false' '\"font.name-list.monospace.x-western\", \"Liberation Mono\"' '\"font.name-list.sans-serif.x-western\", \"Liberation Sans\"' '\"font.name-list.serif.x-western\", \"Liberation Serif\"'; do echo \"user_pref($p);\" >> /firefox-profile/prefs.js; done\n#  Utils for docker-ci.sh\nRUN apt-get install dbus-x11 httping x11vnc xvfb -y\n#  Utils for drone-cache.sh\nRUN apt-get install liblz4-tool\n#  Yes :)\nRUN apt-get install mc -y\n#  Use UTF-8\nRUN apt-get install locales -y\nRUN locale-gen en_US.UTF-8\nRUN printf \"MANDELETE\\nen_US.UTF-8\" > /etc/locale.nopurge\nRUN localepurge\n#  Ensure UTC\nRUN [ \"$( date +%Z ;)\" = \"UTC\" ] || exit 1\n#  Remove build-time utils\nRUN apt-get purge -y apt-transport-https gnupg localepurge\n#  Clean APT\nRUN apt-get autoremove -y --purge\nRUN apt-get clean\nRUN rm -rf /etc/apt/sources.list.d/* /tmp/* /usr/share/doc/* /var/cache/* /var/lib/apt/lists/* /var/log/*\n# ############################################################\nFROM scratch\nCOPY --from=builder / /\nENV LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    TERM=\"xterm\" \\\n    DISPLAY=\":99\" \\\n    NUGET_XMLDOC_MODE=\"skip\" \\\n    DOTNET_SKIP_FIRST_TIME_EXPERIENCE=\"1\" \\\n    DOTNET_CLI_TELEMETRY_OPTOUT=\"1\"\nWORKDIR /devextreme\nSTOPSIGNAL SIGKILL\n","injectedSmells":[],"originalDockerfileHash":"4b1766dc77de3d962f16c15e54cdd717","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04 AS builder\n#   Setup APT\nRUN echo 'APT::Install-Recommends \"0\";' > /etc/apt/apt.conf.d/dx-no-recommends\nRUN apt-get update \\\n && apt-get -y upgrade\n#   Remove init system\nRUN apt-get purge -y --allow-remove-essential init systemd\n#   Curl\nRUN apt-get install ca-certificates curl -y\n#   Build-time utils\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https gnupg localepurge\n#   Node\nRUN curl -L https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install nodejs -y\nRUN npm install npm@6 -g\nRUN npm cache clean --force\nRUN npm set progress=false\nRUN npm set loglevel=error\nRUN npm set unsafe-perm=true\nRUN npm set fetch-retries 5\nRUN npm set audit false\n#   .NET Core\nRUN curl -L https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-bionic-prod bionic main\" > /etc/apt/sources.list.d/dotnetdev.list\nRUN apt-get update\nRUN DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1 apt-get install -y dotnet-sdk-2.1\nRUN rm /usr/share/dotnet/sdk/*/nuGetPackagesArchive.lzma\n#   Slim\nRUN rm -r /usr/share/dotnet/sdk/*/FSharp\nRUN rm -r /usr/share/dotnet/sdk/NuGetFallbackFolder/*\nRUN rm -r /usr/share/dotnet/shared/Microsoft.AspNetCore.*\nRUN find /usr/share/dotnet -type f -name '*.resources.dll' -delete\nRUN find /usr/share/dotnet -type f -wholename '**/runtimes/win*/**' -delete\n#   Chrome\nRUN curl -L https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor > /etc/apt/trusted.gpg.d/google.gpg\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google-chrome.list\nRUN apt-get update\nRUN apt-get install google-chrome-stable -y\nRUN rm -rf /opt/google/chrome/swiftshader /opt/google/chrome/libwidevinecdm.so\nRUN find /opt/google/chrome/locales -type f ! -name 'en-US.pak' -delete\n#   Firefox\nRUN apt-get install firefox -y\nRUN mkdir /firefox-profile\nRUN for p in '\"browser.shell.checkDefaultBrowser\", false' '\"datareporting.policy.dataSubmissionEnabled\", false' '\"font.name-list.monospace.x-western\", \"Liberation Mono\"' '\"font.name-list.sans-serif.x-western\", \"Liberation Sans\"' '\"font.name-list.serif.x-western\", \"Liberation Serif\"'; do echo \"user_pref($p);\" >> /firefox-profile/prefs.js; done\n#   Utils for docker-ci.sh\nRUN apt-get install dbus-x11 httping x11vnc xvfb -y\n#   Utils for drone-cache.sh\nRUN apt-get install liblz4-tool\n#   Yes :)\nRUN apt-get install mc -y\n#   Use UTF-8\nRUN apt-get install locales -y\nRUN locale-gen en_US.UTF-8\nRUN printf \"MANDELETE\\nen_US.UTF-8\" > /etc/locale.nopurge\nRUN localepurge\n#   Ensure UTC\nRUN [ \"$( date +%Z ;)\" = \"UTC\" ] || exit 1\n#   Remove build-time utils\nRUN apt-get purge -y apt-transport-https gnupg localepurge\n#   Clean APT\nRUN apt-get autoremove -y --purge\nRUN apt-get clean\nRUN rm -rf /etc/apt/sources.list.d/* /tmp/* /usr/share/doc/* /var/cache/* /var/lib/apt/lists/* /var/log/*\n#  ############################################################\nFROM scratch\nCOPY --from=builder / /\nENV LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    TERM=\"xterm\" \\\n    DISPLAY=\":99\" \\\n    NUGET_XMLDOC_MODE=\"skip\" \\\n    DOTNET_SKIP_FIRST_TIME_EXPERIENCE=\"1\" \\\n    DOTNET_CLI_TELEMETRY_OPTOUT=\"1\"\nWORKDIR /devextreme\nSTOPSIGNAL SIGKILL\n","originalDockerfileUglifiedHash":"5b3c5f98193b542db309a1eefc1d7446","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7eec68f29b13fe162c4968d1b5ab17dd4682b7dc.dockerfile"}