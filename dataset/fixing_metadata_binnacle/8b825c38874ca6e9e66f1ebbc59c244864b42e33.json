{"seed":1284838900,"processedDockerfileHash":"450f0110fd645df9987bb90e9e5be6ce","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#   $REF: $\n#  --------------------------------------------------------------------------\n#\n#\nFROM php:7.2-fpm\n#\n#  --------------------------------------------------------------------------\n#   Core Software's Installation\n#  --------------------------------------------------------------------------\n#\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get -qy install --no-install-recommends zip unzip wget curl libpq-dev libicu-dev nginx runit librabbitmq-dev libssl-dev tcl-dev gettext git ssh bash vim procps net-tools gosu \\\n && apt-get autoremove -qy \\\n && apt-get clean -qy \\\n && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/* /etc/nginx/conf.d/* /etc/nginx/sites-enabled/* /etc/nginx/sites-available/*\n#   END Core Software's Installation  -------------\n#\n#  --------------------------------------------------------------------------\n#   PHP Installation\n#  --------------------------------------------------------------------------\n#\nRUN echo \"docker-php-ext-install\" \\\n && pecl update-channels \\\n && docker-php-ext-install bcmath \\\n && docker-php-ext-install opcache \\\n && docker-php-ext-install pcntl \\\n && docker-php-ext-install zip \\\n && pecl install -o -f amqp \\\n && docker-php-ext-enable amqp \\\n && pecl install -o -f redis \\\n && docker-php-ext-enable redis \\\n && pecl install -o -f xdebug \\\n && docker-php-ext-configure intl \\\n && docker-php-ext-install intl \\\n && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*\n#   END PHP Installation --------------------------\n#\n#  --------------------------------------------------------------------------\n#   nginx & runit Configuration\n#  --------------------------------------------------------------------------\n#\nCOPY ./configs/nginx.microservice.conf /etc/nginx/sites-enabled/\nCOPY ./configs/nginx.conf /etc/nginx/\n#  ADD ./waiting-for-postgresql.sh /usr/local/sbin/\nCOPY ./service/ /etc/service/\nRUN touch /etc/inittab \\\n && rm -rf /etc/nginx/conf.d/* \\\n && chmod +x /etc/service/*/run\n#  \t && \\\n#  \tchmod +x /usr/local/sbin/waiting-for-postgresql.sh\n#  \tsed -i -e \"s/www-data/root/\" /usr/local/etc/php-fpm.d/www.conf\nCOPY ./50-custom.ini /usr/local/etc/php/conf.d/\n#   Installing Composer\nRUN printf \"\\nInstalling Composer\\n\\n\" ; EXPECTED_SIGNATURE=$( wget -q -O - https://composer.github.io/installer.sig ;) ; php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" ; ACTUAL_SIGNATURE=$( php -r \"echo hash_file('SHA384', 'composer-setup.php');\" ;) ; if [ \"$EXPECTED_SIGNATURE\" != \"$ACTUAL_SIGNATURE\" ] ; then echo 'ERROR: Invalid installer signature' >&2;exit 1 ; else php composer-setup.php --install-dir=/usr/local/bin --filename=composer.phar ; fi ; rm composer-setup.php\nCOPY ./composer.sh /usr/local/sbin/composer\nRUN sed -i 's/\\r//' /usr/local/sbin/composer \\\n && chmod +x /usr/local/sbin/composer\nRUN composer.phar global require \"hirak/prestissimo\" \\\n && rm -rf /root/.composer/cache\n#  ADD ./services /usr/local/etc/services\n#  RUN cp -a /usr/local/etc/services/* /etc/service && chmod +x /etc/service/*/run\nENV PATH=\"/var/www:$PATH\"\n#   ubuntu >= 16.10\nARG PUID=1000\nENV PUID=\"${PUID}\"\nRUN if [ -n \"${PUID}\" ] \\\n && [ \"${PUID%:*}\" != 0 ] ; then usermod -u ${PUID} www-data > /dev/null 2>&1; fi\nRUN mkdir -p /var/sandbox \\\n && chown www-data:www-data /var/sandbox\nWORKDIR /var/www\nARG PORT=80\nEXPOSE $PORT\nENTRYPOINT [\"runsvdir\", \"-P\", \"/etc/service\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#\n# --------------------------------------------------------------------------\n#  Image Setup\n#  $REF: $\n# --------------------------------------------------------------------------\n#\n#\nFROM php:7.2-fpm\n#\n# --------------------------------------------------------------------------\n#  Core Software's Installation\n# --------------------------------------------------------------------------\n#\nRUN apt-get update -qy \\\n && DEBIAN_FRONTEND=noninteractive apt-get -qy install --no-install-recommends zip unzip wget curl libpq-dev libicu-dev nginx runit librabbitmq-dev libssl-dev tcl-dev gettext git ssh bash vim procps net-tools gosu \\\n && apt-get autoremove -qy \\\n && apt-get clean -qy \\\n && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/* /etc/nginx/conf.d/* /etc/nginx/sites-enabled/* /etc/nginx/sites-available/*\n#  END Core Software's Installation  -------------\n#\n# --------------------------------------------------------------------------\n#  PHP Installation\n# --------------------------------------------------------------------------\n#\nRUN echo \"docker-php-ext-install\" \\\n && pecl update-channels \\\n && docker-php-ext-install bcmath \\\n && docker-php-ext-install opcache \\\n && docker-php-ext-install pcntl \\\n && docker-php-ext-install zip \\\n && pecl install -o -f amqp \\\n && docker-php-ext-enable amqp \\\n && pecl install -o -f redis \\\n && docker-php-ext-enable redis \\\n && pecl install -o -f xdebug \\\n && docker-php-ext-configure intl \\\n && docker-php-ext-install intl \\\n && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*\n#  END PHP Installation --------------------------\n#\n# --------------------------------------------------------------------------\n#  nginx & runit Configuration\n# --------------------------------------------------------------------------\n#\nADD ./configs/nginx.microservice.conf /etc/nginx/sites-enabled/\nADD ./configs/nginx.conf /etc/nginx/\n# ADD ./waiting-for-postgresql.sh /usr/local/sbin/\nADD ./service/ /etc/service/\nRUN touch /etc/inittab \\\n && rm -rf /etc/nginx/conf.d/* \\\n && chmod +x /etc/service/*/run\n# \t && \\\n# \tchmod +x /usr/local/sbin/waiting-for-postgresql.sh\n# \tsed -i -e \"s/www-data/root/\" /usr/local/etc/php-fpm.d/www.conf\nADD ./50-custom.ini /usr/local/etc/php/conf.d/\n#  Installing Composer\nRUN printf \"\\nInstalling Composer\\n\\n\" ; EXPECTED_SIGNATURE=$( wget -q -O - https://composer.github.io/installer.sig ;) ; php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" ; ACTUAL_SIGNATURE=$( php -r \"echo hash_file('SHA384', 'composer-setup.php');\" ;) ; if [ \"$EXPECTED_SIGNATURE\" != \"$ACTUAL_SIGNATURE\" ] ; then echo 'ERROR: Invalid installer signature' >&2;exit 1 ; else php composer-setup.php --install-dir=/usr/local/bin --filename=composer.phar ; fi ; rm composer-setup.php\nADD ./composer.sh /usr/local/sbin/composer\nRUN sed -i 's/\\r//' /usr/local/sbin/composer \\\n && chmod +x /usr/local/sbin/composer\nRUN composer.phar global require \"hirak/prestissimo\" \\\n && rm -rf /root/.composer/cache\n# ADD ./services /usr/local/etc/services\n# RUN cp -a /usr/local/etc/services/* /etc/service && chmod +x /etc/service/*/run\nENV PATH=\"/var/www:$PATH\"\n#  ubuntu >= 16.10\nARG PUID=1000\nENV PUID=\"${PUID}\"\nRUN if [ -n \"${PUID}\" ] \\\n && [ \"${PUID%:*}\" != 0 ] ; then usermod -u ${PUID} www-data > /dev/null 2>&1; fi\nRUN mkdir -p /var/sandbox \\\n && chown www-data:www-data /var/sandbox\nWORKDIR /var/www\nARG PORT=80\nEXPOSE $PORT\nENTRYPOINT [\"runsvdir\", \"-P\", \"/etc/service\"]\n","injectedSmells":[],"originalDockerfileHash":"360d36271e4bc314098ce5484c9515f4","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#   $REF: $\n#  --------------------------------------------------------------------------\n#\n#\nFROM php:7.2-fpm\n#\n#  --------------------------------------------------------------------------\n#   Core Software's Installation\n#  --------------------------------------------------------------------------\n#\nRUN apt-get update -qy \\\n && DEBIAN_FRONTEND=noninteractive apt-get -qy install --no-install-recommends zip unzip wget curl libpq-dev libicu-dev nginx runit librabbitmq-dev libssl-dev tcl-dev gettext git ssh bash vim procps net-tools gosu \\\n && apt-get autoremove -qy \\\n && apt-get clean -qy \\\n && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/* /etc/nginx/conf.d/* /etc/nginx/sites-enabled/* /etc/nginx/sites-available/*\n#   END Core Software's Installation  -------------\n#\n#  --------------------------------------------------------------------------\n#   PHP Installation\n#  --------------------------------------------------------------------------\n#\nRUN echo \"docker-php-ext-install\" \\\n && pecl update-channels \\\n && docker-php-ext-install bcmath \\\n && docker-php-ext-install opcache \\\n && docker-php-ext-install pcntl \\\n && docker-php-ext-install zip \\\n && pecl install -o -f amqp \\\n && docker-php-ext-enable amqp \\\n && pecl install -o -f redis \\\n && docker-php-ext-enable redis \\\n && pecl install -o -f xdebug \\\n && docker-php-ext-configure intl \\\n && docker-php-ext-install intl \\\n && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*\n#   END PHP Installation --------------------------\n#\n#  --------------------------------------------------------------------------\n#   nginx & runit Configuration\n#  --------------------------------------------------------------------------\n#\nADD ./configs/nginx.microservice.conf /etc/nginx/sites-enabled/\nADD ./configs/nginx.conf /etc/nginx/\n#  ADD ./waiting-for-postgresql.sh /usr/local/sbin/\nADD ./service/ /etc/service/\nRUN touch /etc/inittab \\\n && rm -rf /etc/nginx/conf.d/* \\\n && chmod +x /etc/service/*/run\n#  \t && \\\n#  \tchmod +x /usr/local/sbin/waiting-for-postgresql.sh\n#  \tsed -i -e \"s/www-data/root/\" /usr/local/etc/php-fpm.d/www.conf\nADD ./50-custom.ini /usr/local/etc/php/conf.d/\n#   Installing Composer\nRUN printf \"\\nInstalling Composer\\n\\n\" ; EXPECTED_SIGNATURE=$( wget -q -O - https://composer.github.io/installer.sig ;) ; php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" ; ACTUAL_SIGNATURE=$( php -r \"echo hash_file('SHA384', 'composer-setup.php');\" ;) ; if [ \"$EXPECTED_SIGNATURE\" != \"$ACTUAL_SIGNATURE\" ] ; then echo 'ERROR: Invalid installer signature' >&2;exit 1 ; else php composer-setup.php --install-dir=/usr/local/bin --filename=composer.phar ; fi ; rm composer-setup.php\nADD ./composer.sh /usr/local/sbin/composer\nRUN sed -i 's/\\r//' /usr/local/sbin/composer \\\n && chmod +x /usr/local/sbin/composer\nRUN composer.phar global require \"hirak/prestissimo\" \\\n && rm -rf /root/.composer/cache\n#  ADD ./services /usr/local/etc/services\n#  RUN cp -a /usr/local/etc/services/* /etc/service && chmod +x /etc/service/*/run\nENV PATH=\"/var/www:$PATH\"\n#   ubuntu >= 16.10\nARG PUID=1000\nENV PUID=\"${PUID}\"\nRUN if [ -n \"${PUID}\" ] \\\n && [ \"${PUID%:*}\" != 0 ] ; then usermod -u ${PUID} www-data > /dev/null 2>&1; fi\nRUN mkdir -p /var/sandbox \\\n && chown www-data:www-data /var/sandbox\nWORKDIR /var/www\nARG PORT=80\nEXPOSE $PORT\nENTRYPOINT [\"runsvdir\", \"-P\", \"/etc/service\"]\n","originalDockerfileUglifiedHash":"f2eca2f3eb27f4f82d1387189ef47518","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8b825c38874ca6e9e66f1ebbc59c244864b42e33.dockerfile"}