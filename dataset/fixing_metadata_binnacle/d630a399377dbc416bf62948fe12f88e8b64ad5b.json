{"seed":1954123777,"processedDockerfileHash":"fee71daf229f626f2570c1d1a6052223","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  upstream https://github.com/hashicorp/docker-consul\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash=4.4.19-r1 tzdata=2020a-r0 vim=8.1.1365-r0 tini=0.18.0-r0 su-exec=0.2-r0 gzip=1.9-r0 tar=1.32-r0 wget=1.20.3-r0 curl=7.61.1-r3 \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#   This is the release of Consul to pull in.\nENV CONSUL_VERSION=\"1.1.0\"\n#   This is the location of the releases.\nENV HASHICORP_RELEASES=\"https://releases.hashicorp.com\"\n#   Create a consul user and group first so the IDs get set the same way, even as\n#   the rest of this may change over time.\nRUN addgroup consul \\\n && adduser -S -G consul consul\n#   Set up certificates, base tools, and Consul.\nRUN set -eux \\\n && apk add ca-certificates=20191127-r2 curl=7.61.1-r3 dumb-init=1.2.1-r0 gnupg=2.2.19-r0 libcap=2.25-r1 openssl=1.0.2u-r0 su-exec=0.2-r0 --no-cache \\\n && gpg --keyserver keyserver.ubuntu.com --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C \\\n && mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && apkArch=\"$( apk --print-arch ;)\" \\\n && case \"${apkArch}\" in (aarch64) consulArch='arm64' ;;(armhf) consulArch='arm' ;;(x86) consulArch='386' ;;(x86_64) consulArch='amd64' ;;(*) echo \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/)\" >&2 \\\n && exit 1 ;; esac \\\n && wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_${consulArch}.zip \\\n && wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS \\\n && wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS.sig \\\n && gpg --batch --verify consul_${CONSUL_VERSION}_SHA256SUMS.sig consul_${CONSUL_VERSION}_SHA256SUMS \\\n && grep consul_${CONSUL_VERSION}_linux_${consulArch}.zip consul_${CONSUL_VERSION}_SHA256SUMS | sha256sum -c \\\n && unzip -d /bin consul_${CONSUL_VERSION}_linux_${consulArch}.zip \\\n && cd /tmp \\\n && rm -rf /tmp/build \\\n && apk del gnupg openssl \\\n && rm -rf /root/.gnupg \\\n && consul version\n#   The /consul/data dir is used by Consul to store state. The agent will be started\n#   with /consul/config as the configuration directory so you can add additional\n#   config files in that location.\nRUN mkdir -p /consul/data \\\n && mkdir -p /consul/config \\\n && chown -R consul:consul /consul\n#   Expose the consul data directory as a volume since there's mutable state in there.\nVOLUME /consul/data\n#   Server RPC is used for communication between Consul clients and servers for internal\n#   request forwarding.\nEXPOSE 8300/tcp\n#   Serf LAN and WAN (WAN is used only by Consul servers) are used for gossip between\n#   Consul agents. LAN is within the datacenter and WAN is between just the Consul\n#   servers in all datacenters.\nEXPOSE 8301/tcp 8301/udp 8302/tcp 8302/udp\n#   HTTP and DNS (both TCP and UDP) are the primary interfaces that applications\n#   use to interact with Consul.\nEXPOSE 8500/tcp 8600/tcp 8600/udp\n#   Consul doesn't need root privileges so we run it as the consul user from the\n#   entry point script. The entry point script also uses dumb-init as the top-level\n#   process to reap any zombie processes created by Consul sub-processes.\nCOPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n#   By default you'll get an insecure single-node development server that stores\n#   everything in RAM, exposes a web UI and HTTP endpoints, and bootstraps itself.\n#   Don't use this configuration for production.\nCMD [\"agent\", \"-dev\", \"-client\", \"0.0.0.0\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/hashicorp/docker-consul\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#  Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash tzdata vim tini su-exec gzip tar wget curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#  This is the release of Consul to pull in.\nENV CONSUL_VERSION=\"1.1.0\"\n#  This is the location of the releases.\nENV HASHICORP_RELEASES=\"https://releases.hashicorp.com\"\n#  Create a consul user and group first so the IDs get set the same way, even as\n#  the rest of this may change over time.\nRUN addgroup consul \\\n && adduser -S -G consul consul\n#  Set up certificates, base tools, and Consul.\nRUN set -eux \\\n && apk add --no-cache ca-certificates curl dumb-init gnupg libcap openssl su-exec \\\n && gpg --keyserver keyserver.ubuntu.com --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C \\\n && mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && apkArch=\"$( apk --print-arch ;)\" \\\n && case \"${apkArch}\" in (aarch64) consulArch='arm64' ;;(armhf) consulArch='arm' ;;(x86) consulArch='386' ;;(x86_64) consulArch='amd64' ;;(*) echo \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/)\" >&2 \\\n && exit 1 ;; esac \\\n && wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_${consulArch}.zip \\\n && wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS \\\n && wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS.sig \\\n && gpg --batch --verify consul_${CONSUL_VERSION}_SHA256SUMS.sig consul_${CONSUL_VERSION}_SHA256SUMS \\\n && grep consul_${CONSUL_VERSION}_linux_${consulArch}.zip consul_${CONSUL_VERSION}_SHA256SUMS | sha256sum -c \\\n && unzip -d /bin consul_${CONSUL_VERSION}_linux_${consulArch}.zip \\\n && cd /tmp \\\n && rm -rf /tmp/build \\\n && apk del gnupg openssl \\\n && rm -rf /root/.gnupg \\\n && consul version\n#  The /consul/data dir is used by Consul to store state. The agent will be started\n#  with /consul/config as the configuration directory so you can add additional\n#  config files in that location.\nRUN mkdir -p /consul/data \\\n && mkdir -p /consul/config \\\n && chown -R consul:consul /consul\n#  Expose the consul data directory as a volume since there's mutable state in there.\nVOLUME /consul/data\n#  Server RPC is used for communication between Consul clients and servers for internal\n#  request forwarding.\nEXPOSE 8300/tcp\n#  Serf LAN and WAN (WAN is used only by Consul servers) are used for gossip between\n#  Consul agents. LAN is within the datacenter and WAN is between just the Consul\n#  servers in all datacenters.\nEXPOSE 8301/tcp 8301/udp 8302/tcp 8302/udp\n#  HTTP and DNS (both TCP and UDP) are the primary interfaces that applications\n#  use to interact with Consul.\nEXPOSE 8500/tcp 8600/tcp 8600/udp\n#  Consul doesn't need root privileges so we run it as the consul user from the\n#  entry point script. The entry point script also uses dumb-init as the top-level\n#  process to reap any zombie processes created by Consul sub-processes.\nCOPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n#  By default you'll get an insecure single-node development server that stores\n#  everything in RAM, exposes a web UI and HTTP endpoints, and bootstraps itself.\n#  Don't use this configuration for production.\nCMD [\"agent\", \"-dev\", \"-client\", \"0.0.0.0\"]\n","injectedSmells":[],"originalDockerfileHash":"27b99af9824207c29c757f5574799001","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/hashicorp/docker-consul\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash tzdata vim tini su-exec gzip tar wget curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#   This is the release of Consul to pull in.\nENV CONSUL_VERSION=\"1.1.0\"\n#   This is the location of the releases.\nENV HASHICORP_RELEASES=\"https://releases.hashicorp.com\"\n#   Create a consul user and group first so the IDs get set the same way, even as\n#   the rest of this may change over time.\nRUN addgroup consul \\\n && adduser -S -G consul consul\n#   Set up certificates, base tools, and Consul.\nRUN set -eux \\\n && apk add --no-cache ca-certificates curl dumb-init gnupg libcap openssl su-exec \\\n && gpg --keyserver keyserver.ubuntu.com --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C \\\n && mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && apkArch=\"$( apk --print-arch ;)\" \\\n && case \"${apkArch}\" in (aarch64) consulArch='arm64' ;;(armhf) consulArch='arm' ;;(x86) consulArch='386' ;;(x86_64) consulArch='amd64' ;;(*) echo \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/)\" >&2 \\\n && exit 1 ;; esac \\\n && wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_${consulArch}.zip \\\n && wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS \\\n && wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_SHA256SUMS.sig \\\n && gpg --batch --verify consul_${CONSUL_VERSION}_SHA256SUMS.sig consul_${CONSUL_VERSION}_SHA256SUMS \\\n && grep consul_${CONSUL_VERSION}_linux_${consulArch}.zip consul_${CONSUL_VERSION}_SHA256SUMS | sha256sum -c \\\n && unzip -d /bin consul_${CONSUL_VERSION}_linux_${consulArch}.zip \\\n && cd /tmp \\\n && rm -rf /tmp/build \\\n && apk del gnupg openssl \\\n && rm -rf /root/.gnupg \\\n && consul version\n#   The /consul/data dir is used by Consul to store state. The agent will be started\n#   with /consul/config as the configuration directory so you can add additional\n#   config files in that location.\nRUN mkdir -p /consul/data \\\n && mkdir -p /consul/config \\\n && chown -R consul:consul /consul\n#   Expose the consul data directory as a volume since there's mutable state in there.\nVOLUME /consul/data\n#   Server RPC is used for communication between Consul clients and servers for internal\n#   request forwarding.\nEXPOSE 8300/tcp\n#   Serf LAN and WAN (WAN is used only by Consul servers) are used for gossip between\n#   Consul agents. LAN is within the datacenter and WAN is between just the Consul\n#   servers in all datacenters.\nEXPOSE 8301/tcp 8301/udp 8302/tcp 8302/udp\n#   HTTP and DNS (both TCP and UDP) are the primary interfaces that applications\n#   use to interact with Consul.\nEXPOSE 8500/tcp 8600/tcp 8600/udp\n#   Consul doesn't need root privileges so we run it as the consul user from the\n#   entry point script. The entry point script also uses dumb-init as the top-level\n#   process to reap any zombie processes created by Consul sub-processes.\nCOPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n#   By default you'll get an insecure single-node development server that stores\n#   everything in RAM, exposes a web UI and HTTP endpoints, and bootstraps itself.\n#   Don't use this configuration for production.\nCMD [\"agent\", \"-dev\", \"-client\", \"0.0.0.0\"]\n","originalDockerfileUglifiedHash":"5d76d091844cf2d94abb69f92b4f01f5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d630a399377dbc416bf62948fe12f88e8b64ad5b.dockerfile"}