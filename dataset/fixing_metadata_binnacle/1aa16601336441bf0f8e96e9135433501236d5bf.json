{"seed":1038828070,"processedDockerfileHash":"192ec5d704dd7f1c0b41a1e4088bf980","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM docker\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   https://github.com/docker-library/python/issues/147\nENV PYTHONIOENCODING=\"UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   other runtime dependencies for Python are installed later\nRUN apk add ca-certificates=20220614-r4 --no-cache\nENV GPG_KEY=\"C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\"\nENV PYTHON_VERSION=\"2.7.15\"\nRUN set -ex \\\n && apk add gnupg=2.2.40-r0 tar=1.34-r2 xz=5.2.9-r0 --no-cache --virtual .fetch-deps \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add bzip2-dev=1.0.8-r4 coreutils=9.1-r0 dpkg-dev=1.21.9-r0 dpkg=1.21.9-r0 findutils=4.9.0-r3 gcc=12.2.1_git20220924-r4 gdbm-dev=1.23-r0 libc-dev=0.7.2-r3 libnsl-dev=2.0.0-r0 libressl-dev=3.6.2-r0 libtirpc-dev=1.3.3-r0 linux-headers=5.19.5-r0 make=4.3-r1 ncurses-dev=6.3_p20221119-r0 pax-utils=1.3.5-r1 readline-dev=8.2.0-r0 sqlite-dev=3.40.1-r0 tcl-dev=8.6.12-r1 tk=8.6.12-r1 tk-dev=8.6.12-r1 zlib-dev=1.2.13-r0 --no-cache --virtual .build-deps \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4 \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN apk add git=2.38.4-r1 build-base=0.5-r3 --no-cache\nRUN git clone https://github.com/Nextdoor/ndscheduler.git\nRUN apk add bash=5.2.15-r0 --no-cache\nRUN apk add bzip2-dev=1.0.8-r4 coreutils=9.1-r0 dpkg-dev=1.21.9-r0 dpkg=1.21.9-r0 findutils=4.9.0-r3 gcc=12.2.1_git20220924-r4 gdbm-dev=1.23-r0 libc-dev=0.7.2-r3 libnsl-dev=2.0.0-r0 libressl-dev=3.6.2-r0 libtirpc-dev=1.3.3-r0 linux-headers=5.19.5-r0 make=4.3-r1 ncurses-dev=6.3_p20221119-r0 pax-utils=1.3.5-r1 readline-dev=8.2.0-r0 sqlite-dev=3.40.1-r0 tcl-dev=8.6.12-r1 tk=8.6.12-r1 tk-dev=8.6.12-r1 zlib-dev=1.2.13-r0 --no-cache --virtual .build-deps\nRUN pip install virtualenv==20.21.0\nRUN mkdir -p /mnt/scheduler \\\n && cd /mnt/scheduler \\\n && virtualenv ./ \\\n && chmod -R 777 ./bin/activate \\\n && ./bin/activate \\\n && pip install -e git+https://github.com/Nextdoor/ndscheduler.git#egg=ndscheduler\nRUN apk add curl=7.88.1-r1 --no-cache\nRUN curl -o \"/mnt/scheduler/apns.pem\" https://raw.githubusercontent.com/Nextdoor/ndscheduler/master/simple_scheduler/docker/apns.pem\nRUN curl -o \"/mnt/scheduler/bin/run_scheduler\" https://raw.githubusercontent.com/Nextdoor/ndscheduler/master/simple_scheduler/docker/run_scheduler\nRUN chmod 755 /mnt/scheduler/bin/run_scheduler\nRUN cp -rfp /mnt/scheduler/src/ndscheduler/simple_scheduler/scheduler.py /scheduler.py\nRUN apk add nginx=1.22.1-r0 --no-cache\nRUN mkdir /run/nginx\nCMD /ndscheduler/start.sh\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM docker\n#  ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  https://github.com/docker-library/python/issues/147\nENV PYTHONIOENCODING=\"UTF-8\"\n#  install ca-certificates so that HTTPS works consistently\n#  other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\"\nENV PYTHON_VERSION=\"2.7.15\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg findutils gcc gdbm-dev libc-dev libnsl-dev libressl-dev libtirpc-dev linux-headers make ncurses-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4 \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not ( -name '*tkinter*' ) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' | xargs -rt apk add --no-cache --virtual .python-rundeps \\\n && apk del .build-deps \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python \\\n && python2 --version\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\nRUN apk add --no-cache git build-base\nRUN git clone https://github.com/Nextdoor/ndscheduler.git\nRUN apk add --no-cache bash\nRUN apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg findutils gcc gdbm-dev libc-dev libnsl-dev libressl-dev libtirpc-dev linux-headers make ncurses-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev\nRUN pip install virtualenv\nRUN mkdir -p /mnt/scheduler \\\n && cd /mnt/scheduler \\\n && virtualenv ./ \\\n && chmod -R 777 ./bin/activate \\\n && ./bin/activate \\\n && pip install -e git+https://github.com/Nextdoor/ndscheduler.git#egg=ndscheduler\nRUN apk add --no-cache curl\nRUN curl -o \"/mnt/scheduler/apns.pem\" https://raw.githubusercontent.com/Nextdoor/ndscheduler/master/simple_scheduler/docker/apns.pem\nRUN curl -o \"/mnt/scheduler/bin/run_scheduler\" https://raw.githubusercontent.com/Nextdoor/ndscheduler/master/simple_scheduler/docker/run_scheduler\nRUN chmod 755 /mnt/scheduler/bin/run_scheduler\nRUN cp -rfp /mnt/scheduler/src/ndscheduler/simple_scheduler/scheduler.py /scheduler.py\nRUN apk add --no-cache nginx\nRUN mkdir /run/nginx\nCMD /ndscheduler/start.sh\n","injectedSmells":[],"originalDockerfileHash":"04df38f201281c7bcea460253deb4226","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM docker\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   https://github.com/docker-library/python/issues/147\nENV PYTHONIOENCODING=\"UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\"\nENV PYTHON_VERSION=\"2.7.15\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg findutils gcc gdbm-dev libc-dev libnsl-dev libressl-dev libtirpc-dev linux-headers make ncurses-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4 \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN apk add --no-cache git build-base\nRUN git clone https://github.com/Nextdoor/ndscheduler.git\nRUN apk add --no-cache bash\nRUN apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg findutils gcc gdbm-dev libc-dev libnsl-dev libressl-dev libtirpc-dev linux-headers make ncurses-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev\nRUN pip install virtualenv\nRUN mkdir -p /mnt/scheduler \\\n && cd /mnt/scheduler \\\n && virtualenv ./ \\\n && chmod -R 777 ./bin/activate \\\n && ./bin/activate \\\n && pip install -e git+https://github.com/Nextdoor/ndscheduler.git#egg=ndscheduler\nRUN apk add --no-cache curl\nRUN curl -o \"/mnt/scheduler/apns.pem\" https://raw.githubusercontent.com/Nextdoor/ndscheduler/master/simple_scheduler/docker/apns.pem\nRUN curl -o \"/mnt/scheduler/bin/run_scheduler\" https://raw.githubusercontent.com/Nextdoor/ndscheduler/master/simple_scheduler/docker/run_scheduler\nRUN chmod 755 /mnt/scheduler/bin/run_scheduler\nRUN cp -rfp /mnt/scheduler/src/ndscheduler/simple_scheduler/scheduler.py /scheduler.py\nRUN apk add --no-cache nginx\nRUN mkdir /run/nginx\nCMD /ndscheduler/start.sh\n","originalDockerfileUglifiedHash":"46ffb8093bb7023da4493a0a27bf3bdb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1aa16601336441bf0f8e96e9135433501236d5bf.dockerfile"}