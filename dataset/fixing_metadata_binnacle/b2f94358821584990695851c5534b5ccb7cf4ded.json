{"seed":3222800804,"processedDockerfileHash":"5ea5b275eff9413a0e4b158d553660b1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.9\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo \"install: --no-document\" ;echo \"update: --no-document\" ; } >> /usr/local/etc/gemrc\nARG ruby_download_url\nARG ruby_download_sha256\nARG line_edit_lib\nARG line_edit_config\nARG compiler\nENV CC=\"$compiler\"\nRUN set -ex \\\n && baseDeps=\" bash ca-certificates cmake clang gcc libffi-dev libressl-dev make \" \\\n && buildOnlyDeps=\" autoconf bison build-base bzip2-dev dpkg dpkg-dev gdbm-dev glib-dev libc-dev libxml2-dev libxslt-dev $line_edit_lib linux-headers ncurses-dev ruby \" \\\n && apk add $baseDeps $buildOnlyDeps --no-cache --virtual .ruby-builddeps \\\n && wget -O ruby.tar.xz \"$ruby_download_url\" \\\n && if [ \"$ruby_download_sha256\" != \"\" ] ; then echo \"$ruby_download_sha256 *ruby.tar.xz\" | sha256sum -c - ; fi \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --disable-werror --build=\"$gnuArch\" --disable-install-doc $line_edit_config --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && libDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && runOnlyDeps=\" $libDeps binutils git libc-dev libc6-compat \" \\\n && apk add $baseDeps $runOnlyDeps --virtual .ruby-rundeps \\\n && apk del .ruby-builddeps \\\n && cd / \\\n && rm -r /usr/src/ruby\nRUN SHELLCHECK_VERSION=v0.5.0 \\\n && wget \"https://storage.googleapis.com/shellcheck/shellcheck-$SHELLCHECK_VERSION.linux.x86_64.tar.xz\" \\\n && tar -xJf shellcheck-$SHELLCHECK_VERSION.linux.x86_64.tar.xz \\\n && cp shellcheck-$SHELLCHECK_VERSION/shellcheck /usr/bin/\nRUN ln -s clang-format /usr/bin/clang-format-5.0\nENV BUNDLE_SILENCE_ROOT_WARNING=\"1\"\nENV BUNDLE_PATH=\".bundle\"\nRUN TEST_REPORTER_URL=https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.0-linux-amd64 \\\n && wget -O /usr/local/bin/cc-test-reporter $TEST_REPORTER_URL \\\n && chmod +x /usr/local/bin/cc-test-reporter\nWORKDIR /byebug\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.9\n#  skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo \"install: --no-document\" ;echo \"update: --no-document\" ; } >> /usr/local/etc/gemrc\nARG ruby_download_url\nARG ruby_download_sha256\nARG line_edit_lib\nARG line_edit_config\nARG compiler\nENV CC=\"$compiler\"\nRUN set -ex \\\n && baseDeps=\" bash ca-certificates cmake clang gcc libffi-dev libressl-dev make \" \\\n && buildOnlyDeps=\" autoconf bison build-base bzip2-dev dpkg dpkg-dev gdbm-dev glib-dev libc-dev libxml2-dev libxslt-dev $line_edit_lib linux-headers ncurses-dev ruby \" \\\n && apk add --no-cache --virtual .ruby-builddeps $baseDeps $buildOnlyDeps \\\n && wget -O ruby.tar.xz \"$ruby_download_url\" \\\n && if [ \"$ruby_download_sha256\" != \"\" ] ; then echo \"$ruby_download_sha256 *ruby.tar.xz\" | sha256sum -c - ; fi \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --disable-werror --build=\"$gnuArch\" --disable-install-doc $line_edit_config --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && libDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && runOnlyDeps=\" $libDeps binutils git libc-dev libc6-compat \" \\\n && apk add --virtual .ruby-rundeps $baseDeps $runOnlyDeps \\\n && apk del .ruby-builddeps \\\n && cd / \\\n && rm -r /usr/src/ruby\nRUN SHELLCHECK_VERSION=v0.5.0 \\\n && wget \"https://storage.googleapis.com/shellcheck/shellcheck-$SHELLCHECK_VERSION.linux.x86_64.tar.xz\" \\\n && tar -xJf shellcheck-$SHELLCHECK_VERSION.linux.x86_64.tar.xz \\\n && cp shellcheck-$SHELLCHECK_VERSION/shellcheck /usr/bin/\nRUN ln -s clang-format /usr/bin/clang-format-5.0\nENV BUNDLE_SILENCE_ROOT_WARNING=\"1\"\nENV BUNDLE_PATH=\".bundle\"\nRUN TEST_REPORTER_URL=https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.0-linux-amd64 \\\n && wget -O /usr/local/bin/cc-test-reporter $TEST_REPORTER_URL \\\n && chmod +x /usr/local/bin/cc-test-reporter\nWORKDIR /byebug\n","injectedSmells":[],"originalDockerfileHash":"779db0e9375413e6414bc160c01809a4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.9\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo \"install: --no-document\" ;echo \"update: --no-document\" ; } >> /usr/local/etc/gemrc\nARG ruby_download_url\nARG ruby_download_sha256\nARG line_edit_lib\nARG line_edit_config\nARG compiler\nENV CC=\"$compiler\"\nRUN set -ex \\\n && baseDeps=\" bash ca-certificates cmake clang gcc libffi-dev libressl-dev make \" \\\n && buildOnlyDeps=\" autoconf bison build-base bzip2-dev dpkg dpkg-dev gdbm-dev glib-dev libc-dev libxml2-dev libxslt-dev $line_edit_lib linux-headers ncurses-dev ruby \" \\\n && apk add --no-cache --virtual .ruby-builddeps $baseDeps $buildOnlyDeps \\\n && wget -O ruby.tar.xz \"$ruby_download_url\" \\\n && if [ \"$ruby_download_sha256\" != \"\" ] ; then echo \"$ruby_download_sha256 *ruby.tar.xz\" | sha256sum -c - ; fi \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --disable-werror --build=\"$gnuArch\" --disable-install-doc $line_edit_config --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && libDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && runOnlyDeps=\" $libDeps binutils git libc-dev libc6-compat \" \\\n && apk add --virtual .ruby-rundeps $baseDeps $runOnlyDeps \\\n && apk del .ruby-builddeps \\\n && cd / \\\n && rm -r /usr/src/ruby\nRUN SHELLCHECK_VERSION=v0.5.0 \\\n && wget \"https://storage.googleapis.com/shellcheck/shellcheck-$SHELLCHECK_VERSION.linux.x86_64.tar.xz\" \\\n && tar -xJf shellcheck-$SHELLCHECK_VERSION.linux.x86_64.tar.xz \\\n && cp shellcheck-$SHELLCHECK_VERSION/shellcheck /usr/bin/\nRUN ln -s clang-format /usr/bin/clang-format-5.0\nENV BUNDLE_SILENCE_ROOT_WARNING=\"1\"\nENV BUNDLE_PATH=\".bundle\"\nRUN TEST_REPORTER_URL=https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.0-linux-amd64 \\\n && wget -O /usr/local/bin/cc-test-reporter $TEST_REPORTER_URL \\\n && chmod +x /usr/local/bin/cc-test-reporter\nWORKDIR /byebug\n","originalDockerfileUglifiedHash":"40fbaecafc963e278b6a3cd6f4197be5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b2f94358821584990695851c5534b5ccb7cf4ded.dockerfile"}