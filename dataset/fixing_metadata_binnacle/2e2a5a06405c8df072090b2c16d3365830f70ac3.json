{"seed":1556948366,"processedDockerfileHash":"3a19eecbcfa9a599d593defcb80f95c9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.4\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   the other runtime dependencies for Python are installed later\nRUN apk add ca-certificates=20161130-r0 --no-cache\nENV GPG_KEY=\"C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\"\nENV PYTHON_VERSION=\"2.7.13\"\nRUN set -ex \\\n && apk add gnupg=2.1.12-r1 openssl=1.0.2n-r0 tar=1.29-r1 xz=5.2.2-r1 --no-cache --virtual .fetch-deps \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add bzip2-dev=1.0.6-r5 coreutils=8.25-r0 dpkg-dev=1.18.7-r0 dpkg=1.18.7-r0 gcc=5.3.0-r0 gdbm-dev=1.11-r1 libc-dev=0.7-r0 linux-headers=4.4.6-r1 make=4.1-r1 ncurses-dev=6.0_p20171125-r0 openssl=1.0.2n-r0 openssl-dev=1.0.2n-r0 pax-utils=1.1.6-r0 readline-dev=6.3.008-r4 sqlite-dev=3.13.0-r2 tcl-dev=8.6.5-r0 tk=8.6.5-r0 tk-dev=8.6.5-r0 zlib-dev=1.2.11-r0 --no-cache --virtual .build-deps \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4 \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --virtual .python-rundeps \\\n && apk del .build-deps \\\n && find /usr/local -depth\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN set -ex ; apk add openssl=1.0.2n-r0 --no-cache --virtual .fetch-deps ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; apk del .fetch-deps ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nCMD [\"python2\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.4\n#  ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  install ca-certificates so that HTTPS works consistently\n#  the other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\"\nENV PYTHON_VERSION=\"2.7.13\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg openssl tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg gcc gdbm-dev libc-dev linux-headers make ncurses-dev openssl openssl-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4 \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .python-rundeps $runDeps \\\n && apk del .build-deps \\\n && find /usr/local -depth ( ( -type d -a -name test -o -name tests ) -o ( -type f -a -name '*.pyc' -o -name '*.pyo' ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN set -ex ; apk add --no-cache --virtual .fetch-deps openssl ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; apk del .fetch-deps ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a -name test -o -name tests ) -o ( -type f -a -name '*.pyc' -o -name '*.pyo' ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\nCMD [\"python2\"]\n","injectedSmells":[],"originalDockerfileHash":"41a6b1989201cd8eaabe53565ccd258e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.4\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   the other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\"\nENV PYTHON_VERSION=\"2.7.13\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg openssl tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg gcc gdbm-dev libc-dev linux-headers make ncurses-dev openssl openssl-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4 \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .python-rundeps $runDeps \\\n && apk del .build-deps \\\n && find /usr/local -depth\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN set -ex ; apk add --no-cache --virtual .fetch-deps openssl ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; apk del .fetch-deps ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nCMD [\"python2\"]\n","originalDockerfileUglifiedHash":"23fab043349c8b986e2bd0ecad253269","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2e2a5a06405c8df072090b2c16d3365830f70ac3.dockerfile"}