{"seed":1490946971,"processedDockerfileHash":"446dacadc2be06231f50ce6f6a75cba7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck"],"processedDockerfile":"#  ###############################\n#   Python dependencies builder\n#\nFROM python:2-stretch AS base\nWORKDIR /app\nEXPOSE 8000/tcp\nENV LANG=\"C.UTF-8\"\nENV PYTHONDONTWRITEBYTECODE=\"1\"\nENV PYTHONUNBUFFERED=\"1\"\nENV PATH=\"/venv/bin:$PATH\"\nRUN virtualenv /venv\nRUN useradd -d /app -M --uid 1000 --shell /usr/sbin/nologin kitsune\nRUN apt-get update \\\n && apt-get install --no-install-recommends gettext build-essential libxml2-dev libxslt1-dev zlib1g-dev git libjpeg-dev libffi-dev libssl-dev libxslt1.1 libmariadbclient-dev mariadb-client -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY ./requirements/*.txt /app/requirements/\nRUN pip install --no-cache-dir --require-hashes -r requirements/default.txt \\\n && pip install --no-cache-dir --require-hashes -r requirements/dev.txt \\\n && pip install --no-cache-dir --require-hashes -r requirements/test.txt\nARG GIT_SHA=head\nENV GIT_SHA=\"${GIT_SHA}\"\n#  ###############################\n#   Developer image\n#\nFROM base AS base-dev\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https \\\n && echo \"deb https://deb.nodesource.com/node_6.x stretch main\" >> /etc/apt/sources.list \\\n && curl -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" >> /etc/apt/sources.list \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends nodejs yarn optipng -y \\\n && rm -rf /var/lib/apt/lists/*\n#  ###############################\n#   Staticfiles builder\n#\nFROM base-dev AS staticfiles\nCOPY package.json bower.json yarn.lock /app/\nRUN yarn install --frozen-lockfile \\\n && yarn cache clean\nRUN ./node_modules/.bin/bower install --allow-root\nCOPY . .\nRUN cp .env-build .env \\\n && ./manage.py nunjucks_precompile \\\n && ./manage.py compilejsi18n \\\n && ./manage.py collectstatic --noinput\n#  ###############################\n#   Fetch locales\n#\nFROM python:2-stretch AS locales\nWORKDIR /app\nRUN apt-get update \\\n && apt-get install --no-install-recommends gettext -y\nENV PATH=\"/venv/bin:$PATH\"\nCOPY --from=base /venv /venv\nCOPY . .\nARG LOCALE_ENV=master\nENV LOCALE_ENV=\"${LOCALE_ENV}\"\nRUN ./docker/bin/fetch-l10n-files.sh\nRUN ./scripts/compile-linted-mo.sh \\\n && find ./locale ! -name '*.mo' -type f -delete\nARG GIT_SHA=head\nENV GIT_SHA=\"${GIT_SHA}\"\n#  ###############################\n#   Full prod image sans locales\n#\nFROM python:2-slim-stretch AS full-no-locales\nWORKDIR /app\nEXPOSE 8000/tcp\nENV PATH=\"/venv/bin:$PATH\"\nENV LANG=\"C.UTF-8\"\nENV PYTHONDONTWRITEBYTECODE=\"1\"\nENV PYTHONUNBUFFERED=\"1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libmariadbclient18 optipng mariadb-client libxslt1.1 -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --gid 1000 kitsune \\\n && useradd -g kitsune --uid 1000 --shell /usr/sbin/nologin kitsune\nCOPY --chown=kitsune:kitsune --from=base /venv /venv\nCOPY --chown=kitsune:kitsune --from=staticfiles /app/static /app/static\nCOPY --chown=kitsune:kitsune --from=staticfiles /app/jsi18n /app/jsi18n\nCOPY --chown=kitsune:kitsune --from=staticfiles /app/bower_components /app/bower_components\nCOPY --chown=kitsune:kitsune . .\nRUN mkdir /app/media \\\n && chown kitsune:kitsune /app/media\nUSER kitsune\nARG GIT_SHA=head\nENV GIT_SHA=\"${GIT_SHA}\"\n#  ###############################\n#   Full final prod image\n#\nFROM full-no-locales AS full\nUSER root\nCOPY --chown=kitsune:kitsune --from=locales /app/locale /app/locale\nUSER kitsune\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###############################\n#  Python dependencies builder\n#\nFROM python:2-stretch AS base\nWORKDIR /app\nEXPOSE 8000/tcp\nENV LANG=\"C.UTF-8\"\nENV PYTHONDONTWRITEBYTECODE=\"1\"\nENV PYTHONUNBUFFERED=\"1\"\nENV PATH=\"/venv/bin:$PATH\"\nRUN virtualenv /venv\nRUN useradd -d /app -M --uid 1000 --shell /usr/sbin/nologin kitsune\nRUN apt-get update \\\n && apt-get install --no-install-recommends gettext build-essential libxml2-dev libxslt1-dev zlib1g-dev git libjpeg-dev libffi-dev libssl-dev libxslt1.1 libmariadbclient-dev mariadb-client -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY ./requirements/*.txt /app/requirements/\nRUN pip install --no-cache-dir --require-hashes -r requirements/default.txt \\\n && pip install --no-cache-dir --require-hashes -r requirements/dev.txt \\\n && pip install --no-cache-dir --require-hashes -r requirements/test.txt\nARG GIT_SHA=head\nENV GIT_SHA=\"${GIT_SHA}\"\n# ###############################\n#  Developer image\n#\nFROM base AS base-dev\nRUN apt-get update \\\n && apt-get install apt-transport-https \\\n && echo \"deb https://deb.nodesource.com/node_6.x stretch main\" >> /etc/apt/sources.list \\\n && curl -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" >> /etc/apt/sources.list \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends nodejs yarn optipng -y \\\n && rm -rf /var/lib/apt/lists/*\n# ###############################\n#  Staticfiles builder\n#\nFROM base-dev AS staticfiles\nCOPY package.json bower.json yarn.lock /app/\nRUN yarn install --frozen-lockfile \\\n && yarn cache clean\nRUN ./node_modules/.bin/bower install --allow-root\nCOPY . .\nRUN cp .env-build .env \\\n && ./manage.py nunjucks_precompile \\\n && ./manage.py compilejsi18n \\\n && ./manage.py collectstatic --noinput\n# ###############################\n#  Fetch locales\n#\nFROM python:2-stretch AS locales\nWORKDIR /app\nRUN apt-get update \\\n && apt-get install --no-install-recommends gettext -y\nENV PATH=\"/venv/bin:$PATH\"\nCOPY --from=base /venv /venv\nCOPY . .\nARG LOCALE_ENV=master\nENV LOCALE_ENV=\"${LOCALE_ENV}\"\nRUN ./docker/bin/fetch-l10n-files.sh\nRUN ./scripts/compile-linted-mo.sh \\\n && find ./locale ! -name '*.mo' -type f -delete\nARG GIT_SHA=head\nENV GIT_SHA=\"${GIT_SHA}\"\n# ###############################\n#  Full prod image sans locales\n#\nFROM python:2-slim-stretch AS full-no-locales\nWORKDIR /app\nEXPOSE 8000/tcp\nENV PATH=\"/venv/bin:$PATH\"\nENV LANG=\"C.UTF-8\"\nENV PYTHONDONTWRITEBYTECODE=\"1\"\nENV PYTHONUNBUFFERED=\"1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libmariadbclient18 optipng mariadb-client libxslt1.1 -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --gid 1000 kitsune \\\n && useradd -g kitsune --uid 1000 --shell /usr/sbin/nologin kitsune\nCOPY --chown=kitsune:kitsune --from=base /venv /venv\nCOPY --chown=kitsune:kitsune --from=staticfiles /app/static /app/static\nCOPY --chown=kitsune:kitsune --from=staticfiles /app/jsi18n /app/jsi18n\nCOPY --chown=kitsune:kitsune --from=staticfiles /app/bower_components /app/bower_components\nCOPY --chown=kitsune:kitsune . .\nRUN mkdir /app/media \\\n && chown kitsune:kitsune /app/media\nUSER kitsune\nARG GIT_SHA=head\nENV GIT_SHA=\"${GIT_SHA}\"\n# ###############################\n#  Full final prod image\n#\nFROM full-no-locales AS full\nUSER root\nCOPY --chown=kitsune:kitsune --from=locales /app/locale /app/locale\nUSER kitsune\n","injectedSmells":[],"originalDockerfileHash":"6079c92ae5acce748eeca63058de0b9b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###############################\n#   Python dependencies builder\n#\nFROM python:2-stretch AS base\nWORKDIR /app\nEXPOSE 8000/tcp\nENV LANG=\"C.UTF-8\"\nENV PYTHONDONTWRITEBYTECODE=\"1\"\nENV PYTHONUNBUFFERED=\"1\"\nENV PATH=\"/venv/bin:$PATH\"\nRUN virtualenv /venv\nRUN useradd -d /app -M --uid 1000 --shell /usr/sbin/nologin kitsune\nRUN apt-get update \\\n && apt-get install --no-install-recommends gettext build-essential libxml2-dev libxslt1-dev zlib1g-dev git libjpeg-dev libffi-dev libssl-dev libxslt1.1 libmariadbclient-dev mariadb-client -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY ./requirements/*.txt /app/requirements/\nRUN pip install --no-cache-dir --require-hashes -r requirements/default.txt \\\n && pip install --no-cache-dir --require-hashes -r requirements/dev.txt \\\n && pip install --no-cache-dir --require-hashes -r requirements/test.txt\nARG GIT_SHA=head\nENV GIT_SHA=\"${GIT_SHA}\"\n#  ###############################\n#   Developer image\n#\nFROM base AS base-dev\nRUN apt-get update \\\n && apt-get install apt-transport-https \\\n && echo \"deb https://deb.nodesource.com/node_6.x stretch main\" >> /etc/apt/sources.list \\\n && curl -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" >> /etc/apt/sources.list \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends nodejs yarn optipng -y \\\n && rm -rf /var/lib/apt/lists/*\n#  ###############################\n#   Staticfiles builder\n#\nFROM base-dev AS staticfiles\nCOPY package.json bower.json yarn.lock /app/\nRUN yarn install --frozen-lockfile \\\n && yarn cache clean\nRUN ./node_modules/.bin/bower install --allow-root\nCOPY . .\nRUN cp .env-build .env \\\n && ./manage.py nunjucks_precompile \\\n && ./manage.py compilejsi18n \\\n && ./manage.py collectstatic --noinput\n#  ###############################\n#   Fetch locales\n#\nFROM python:2-stretch AS locales\nWORKDIR /app\nRUN apt-get update \\\n && apt-get install --no-install-recommends gettext -y\nENV PATH=\"/venv/bin:$PATH\"\nCOPY --from=base /venv /venv\nCOPY . .\nARG LOCALE_ENV=master\nENV LOCALE_ENV=\"${LOCALE_ENV}\"\nRUN ./docker/bin/fetch-l10n-files.sh\nRUN ./scripts/compile-linted-mo.sh \\\n && find ./locale ! -name '*.mo' -type f -delete\nARG GIT_SHA=head\nENV GIT_SHA=\"${GIT_SHA}\"\n#  ###############################\n#   Full prod image sans locales\n#\nFROM python:2-slim-stretch AS full-no-locales\nWORKDIR /app\nEXPOSE 8000/tcp\nENV PATH=\"/venv/bin:$PATH\"\nENV LANG=\"C.UTF-8\"\nENV PYTHONDONTWRITEBYTECODE=\"1\"\nENV PYTHONUNBUFFERED=\"1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libmariadbclient18 optipng mariadb-client libxslt1.1 -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --gid 1000 kitsune \\\n && useradd -g kitsune --uid 1000 --shell /usr/sbin/nologin kitsune\nCOPY --chown=kitsune:kitsune --from=base /venv /venv\nCOPY --chown=kitsune:kitsune --from=staticfiles /app/static /app/static\nCOPY --chown=kitsune:kitsune --from=staticfiles /app/jsi18n /app/jsi18n\nCOPY --chown=kitsune:kitsune --from=staticfiles /app/bower_components /app/bower_components\nCOPY --chown=kitsune:kitsune . .\nRUN mkdir /app/media \\\n && chown kitsune:kitsune /app/media\nUSER kitsune\nARG GIT_SHA=head\nENV GIT_SHA=\"${GIT_SHA}\"\n#  ###############################\n#   Full final prod image\n#\nFROM full-no-locales AS full\nUSER root\nCOPY --chown=kitsune:kitsune --from=locales /app/locale /app/locale\nUSER kitsune\n","originalDockerfileUglifiedHash":"f23a5beb12d52f370c1e269bf06a7bd0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cdb31a7928b70c9eef15ccbe50d96520c25493ba.dockerfile"}