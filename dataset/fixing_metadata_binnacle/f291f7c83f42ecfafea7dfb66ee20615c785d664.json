{"seed":1656936823,"processedDockerfileHash":"ee01e1d43ff64cf9d4e96ad23d835572","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Pull base image\nFROM resin/rpi-raspbian:wheezy\nMAINTAINER Scott Edenbaum <scott.edenbaum@gmail.com>\n#   Install dependencies\nRUN echo 'deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi' > /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl wget screen cmake unzip libtiff5-dev libhdf5-dev python3 python3-dev cython3 python3-cffi python3-setuptools python3-pip pkg-config python3-tables python3-wheel python3-numpy python3-scipy libpng-dev libjasper-dev libavcodec-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libatlas-base-dev libfreetype6-dev libxft-dev libblas-dev liblapack-dev libatlas-base-dev gfortran libxml2-dev libxslt-dev build-essential ipython3 libncurses5-dev libssl-dev openssl libreadline-dev libbz2-dev libncurses5-dev libcurl4-openssl-dev libjpeg-dev r-base r-base-core r-base-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#  RUN apt-get update && apt-get install -y libgeos-c1\n#  ##### install opencv\n#   RUN cd /tmp && \\\n#       wget -O opencv.zip https://github.com/opencv/opencv/archive/3.2.0.zip && \\\n#       unzip opencv.zip && \\\n#       wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.2.0.zip && \\\n#       unzip opencv_contrib.zip\n#   build opencv\n#   RUN cd /tmp/opencv-3.2.0 && \\\n#       mkdir build && \\\n#       cd build && \\\n#       cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n#       -D CMAKE_INSTALL_PREFIX=/usr/local \\\n#       -D INSTALL_C_EXAMPLES=ON \\\n#       -D BUILD_PYTHON_SUPPORT=ON \\\n#       -D BUILD_NEW_PYTHON_SUPPORT=ON \\\n#       -D INSTALL_PYTHON_EXAMPLES=ON \\\n#           -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-3.2.0/modules \\\n#       -D BUILD_EXAMPLES=ON .. && \\\n#       make -j4 && \\\n#       make && \\\n#       make install && \\\n#       make clean\n#   \n#   # cleanup source\n#   RUN cd /tmp && rm -rf opencv-3.2.0\nRUN mkdir -p pyapp\nCOPY requirements*.txt pyapp/\nRUN pip3 install --upgrade pip\nRUN pip3 install -r pyapp/requirements.txt\nRUN pip3 install -r pyapp/requirements2.txt\n#  setup R\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org'; options(repos = r);\" > ~/.Rprofile\nRUN Rscript -e \"install.packages(c('yhatr','rpart.plot','lattice','mlogit','moments','MNP','muhaz','tidytext','text2vec'))\"\nRUN Rscript -e \"install.packages(c('LDAvis','mcmc','syuzhet','SnowballC','gmodels','descr','ggplot2','googleVis'))\"\nRUN Rscript -e \"install.packages(c('outliers','features','Hmisc','party','ISLR','mice','NLP','foreign','tm','CCP'))\"\nRUN Rscript -e \"install.packages(c('RColorBrewer','colorspace','highr','evaluate','zoo','quantmod','TTR','fAssets'))\"\nRUN Rscript -e \"install.packages(c('Bioconductor','Quandl','zipcode','treemap','worldmap','ellipse'))\"\nRUN Rscript -e \"install.packages(c('Leaflet','ggmap','swirl','gtable','RcppEigen','yaml','BH','mtvnorm'))\"\nRUN Rscript -e \"install.packages(c('LSMeans','Comparison','RegTest','ACD','BinomTools','DAIM','ClustEval','SigClust','PROC'))\"\nRUN Rscript -e \"install.packages(c('TimeROC','car','RMiner','CoreLearn','caret','BigRF','CBA','RankCluster'))\"\nRUN Rscript -e \"install.packages(c('LTSA','survival','Basta','RMarkdown','qcc','jsonlite','RCurl','RWeka'))\"\nRUN Rscript -e \"install.packages(c('parallel','Rcpp','twitteR','igraph','nnet','glmnet','tree','arules','earth','mboost'))\"\nRUN Rscript -e \"install.packages(c('CORElearn','ipred','klaR','party','ROCR','kernlab','wordcloud','MissForest','MissMDA'))\"\nRUN Rscript -e \"install.packages(c('data.table','sqldf','forecast','RMYSQL','anomalyDetection','ElemStatLearn','h2o'))\"\nRUN Rscript -e \"install.packages(c('MASS','penalized','dplyr','reshape2','forecast','stringr','sampleSelection','sandwich'))\"\nRUN Rscript -e \"install.packages(c('sem','statnet','topicmodels','vcd','broom','corrplot','rbokeh','rCharts','lubridate'))\"\nRUN Rscript -e \"install.packages(c('randomForest','rpart','e1071','kknn','plyr','repr','IRdisplay','crayon','pdbZMQ'))\"\nRUN Rscript -e \"install.packages(c('magrittr', 'doBy','extrafont','chunked','snda','network','visNetwork','devtools'))\"\nRUN Rscript -e \"install.packages(c('angstroms','bikedata','datasuRus','dwapi','HURDAT','neurohcp','omsdata','parlitools'))\"\nRUN Rscript -e \"install.packages(c('rerddap','soilcarbon','learnr','olsrr','rODE'))\"\nRUN R -e \"install.packages(('devtools'), repos='https://cloud.r-project.org'); devtools::install_github('IRkernel/IRkernel');devtools::install_github('skoval/deuce');IRkernel::installspec()\"\nRUN echo \"root:Docker!\" | chpasswd\n#  RUN useradd -m -G sudo,users student\n#  RUN echo \"student:Docker!\" | chpasswd\n#  RUN chown student /home/student\n#   Define working directory\nWORKDIR /home/student\n#   Define default command\nRUN pip3 install statsmodels\nUSER root\nCMD jupyter-lab --ip 0.0.0.0 --port 9999 --LabApp.token='' --allow-root\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Pull base image\nFROM resin/rpi-raspbian:wheezy\nMAINTAINER Scott Edenbaum <scott.edenbaum@gmail.com>\n#  Install dependencies\nRUN echo 'deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi' > /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl wget screen cmake unzip libtiff5-dev libhdf5-dev python3 python3-dev cython3 python3-cffi python3-setuptools python3-pip pkg-config python3-tables python3-wheel python3-numpy python3-scipy libpng-dev libjasper-dev libavcodec-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libatlas-base-dev libfreetype6-dev libxft-dev libblas-dev liblapack-dev libatlas-base-dev gfortran libxml2-dev libxslt-dev build-essential ipython3 libncurses5-dev libssl-dev openssl libreadline-dev libbz2-dev libncurses5-dev libcurl4-openssl-dev libjpeg-dev r-base r-base-core r-base-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n# RUN apt-get update && apt-get install -y libgeos-c1\n# ##### install opencv\n#  RUN cd /tmp && \\\n#      wget -O opencv.zip https://github.com/opencv/opencv/archive/3.2.0.zip && \\\n#      unzip opencv.zip && \\\n#      wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.2.0.zip && \\\n#      unzip opencv_contrib.zip\n#  build opencv\n#  RUN cd /tmp/opencv-3.2.0 && \\\n#      mkdir build && \\\n#      cd build && \\\n#      cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n#      -D CMAKE_INSTALL_PREFIX=/usr/local \\\n#      -D INSTALL_C_EXAMPLES=ON \\\n#      -D BUILD_PYTHON_SUPPORT=ON \\\n#      -D BUILD_NEW_PYTHON_SUPPORT=ON \\\n#      -D INSTALL_PYTHON_EXAMPLES=ON \\\n#          -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-3.2.0/modules \\\n#      -D BUILD_EXAMPLES=ON .. && \\\n#      make -j4 && \\\n#      make && \\\n#      make install && \\\n#      make clean\n#  \n#  # cleanup source\n#  RUN cd /tmp && rm -rf opencv-3.2.0\nRUN mkdir -p pyapp\nCOPY requirements*.txt pyapp/\nRUN pip3 install --upgrade pip\nRUN pip3 install -r pyapp/requirements.txt\nRUN pip3 install -r pyapp/requirements2.txt\n# setup R\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org'; options(repos = r);\" > ~/.Rprofile\nRUN Rscript -e \"install.packages(c('yhatr','rpart.plot','lattice','mlogit','moments','MNP','muhaz','tidytext','text2vec'))\"\nRUN Rscript -e \"install.packages(c('LDAvis','mcmc','syuzhet','SnowballC','gmodels','descr','ggplot2','googleVis'))\"\nRUN Rscript -e \"install.packages(c('outliers','features','Hmisc','party','ISLR','mice','NLP','foreign','tm','CCP'))\"\nRUN Rscript -e \"install.packages(c('RColorBrewer','colorspace','highr','evaluate','zoo','quantmod','TTR','fAssets'))\"\nRUN Rscript -e \"install.packages(c('Bioconductor','Quandl','zipcode','treemap','worldmap','ellipse'))\"\nRUN Rscript -e \"install.packages(c('Leaflet','ggmap','swirl','gtable','RcppEigen','yaml','BH','mtvnorm'))\"\nRUN Rscript -e \"install.packages(c('LSMeans','Comparison','RegTest','ACD','BinomTools','DAIM','ClustEval','SigClust','PROC'))\"\nRUN Rscript -e \"install.packages(c('TimeROC','car','RMiner','CoreLearn','caret','BigRF','CBA','RankCluster'))\"\nRUN Rscript -e \"install.packages(c('LTSA','survival','Basta','RMarkdown','qcc','jsonlite','RCurl','RWeka'))\"\nRUN Rscript -e \"install.packages(c('parallel','Rcpp','twitteR','igraph','nnet','glmnet','tree','arules','earth','mboost'))\"\nRUN Rscript -e \"install.packages(c('CORElearn','ipred','klaR','party','ROCR','kernlab','wordcloud','MissForest','MissMDA'))\"\nRUN Rscript -e \"install.packages(c('data.table','sqldf','forecast','RMYSQL','anomalyDetection','ElemStatLearn','h2o'))\"\nRUN Rscript -e \"install.packages(c('MASS','penalized','dplyr','reshape2','forecast','stringr','sampleSelection','sandwich'))\"\nRUN Rscript -e \"install.packages(c('sem','statnet','topicmodels','vcd','broom','corrplot','rbokeh','rCharts','lubridate'))\"\nRUN Rscript -e \"install.packages(c('randomForest','rpart','e1071','kknn','plyr','repr','IRdisplay','crayon','pdbZMQ'))\"\nRUN Rscript -e \"install.packages(c('magrittr', 'doBy','extrafont','chunked','snda','network','visNetwork','devtools'))\"\nRUN Rscript -e \"install.packages(c('angstroms','bikedata','datasuRus','dwapi','HURDAT','neurohcp','omsdata','parlitools'))\"\nRUN Rscript -e \"install.packages(c('rerddap','soilcarbon','learnr','olsrr','rODE'))\"\nRUN R -e \"install.packages(('devtools'), repos='https://cloud.r-project.org'); devtools::install_github('IRkernel/IRkernel');devtools::install_github('skoval/deuce');IRkernel::installspec()\"\nRUN echo \"root:Docker!\" | chpasswd\n# RUN useradd -m -G sudo,users student\n# RUN echo \"student:Docker!\" | chpasswd\n# RUN chown student /home/student\n#  Define working directory\nWORKDIR /home/student\n#  Define default command\nRUN pip3 install statsmodels\nUSER root\nCMD jupyter-lab --ip 0.0.0.0 --port 9999 --LabApp.token='' --allow-root\n","injectedSmells":[],"originalDockerfileHash":"8deda3326ec3d24a7987ba1062c2d977","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Pull base image\nFROM resin/rpi-raspbian:wheezy\nMAINTAINER Scott Edenbaum <scott.edenbaum@gmail.com>\n#   Install dependencies\nRUN echo 'deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi' > /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl wget screen cmake unzip libtiff5-dev libhdf5-dev python3 python3-dev cython3 python3-cffi python3-setuptools python3-pip pkg-config python3-tables python3-wheel python3-numpy python3-scipy libpng-dev libjasper-dev libavcodec-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libatlas-base-dev libfreetype6-dev libxft-dev libblas-dev liblapack-dev libatlas-base-dev gfortran libxml2-dev libxslt-dev build-essential ipython3 libncurses5-dev libssl-dev openssl libreadline-dev libbz2-dev libncurses5-dev libcurl4-openssl-dev libjpeg-dev r-base r-base-core r-base-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#  RUN apt-get update && apt-get install -y libgeos-c1\n#  ##### install opencv\n#   RUN cd /tmp && \\\n#       wget -O opencv.zip https://github.com/opencv/opencv/archive/3.2.0.zip && \\\n#       unzip opencv.zip && \\\n#       wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.2.0.zip && \\\n#       unzip opencv_contrib.zip\n#   build opencv\n#   RUN cd /tmp/opencv-3.2.0 && \\\n#       mkdir build && \\\n#       cd build && \\\n#       cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n#       -D CMAKE_INSTALL_PREFIX=/usr/local \\\n#       -D INSTALL_C_EXAMPLES=ON \\\n#       -D BUILD_PYTHON_SUPPORT=ON \\\n#       -D BUILD_NEW_PYTHON_SUPPORT=ON \\\n#       -D INSTALL_PYTHON_EXAMPLES=ON \\\n#           -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-3.2.0/modules \\\n#       -D BUILD_EXAMPLES=ON .. && \\\n#       make -j4 && \\\n#       make && \\\n#       make install && \\\n#       make clean\n#   \n#   # cleanup source\n#   RUN cd /tmp && rm -rf opencv-3.2.0\nRUN mkdir -p pyapp\nCOPY requirements*.txt pyapp/\nRUN pip3 install --upgrade pip\nRUN pip3 install -r pyapp/requirements.txt\nRUN pip3 install -r pyapp/requirements2.txt\n#  setup R\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org'; options(repos = r);\" > ~/.Rprofile\nRUN Rscript -e \"install.packages(c('yhatr','rpart.plot','lattice','mlogit','moments','MNP','muhaz','tidytext','text2vec'))\"\nRUN Rscript -e \"install.packages(c('LDAvis','mcmc','syuzhet','SnowballC','gmodels','descr','ggplot2','googleVis'))\"\nRUN Rscript -e \"install.packages(c('outliers','features','Hmisc','party','ISLR','mice','NLP','foreign','tm','CCP'))\"\nRUN Rscript -e \"install.packages(c('RColorBrewer','colorspace','highr','evaluate','zoo','quantmod','TTR','fAssets'))\"\nRUN Rscript -e \"install.packages(c('Bioconductor','Quandl','zipcode','treemap','worldmap','ellipse'))\"\nRUN Rscript -e \"install.packages(c('Leaflet','ggmap','swirl','gtable','RcppEigen','yaml','BH','mtvnorm'))\"\nRUN Rscript -e \"install.packages(c('LSMeans','Comparison','RegTest','ACD','BinomTools','DAIM','ClustEval','SigClust','PROC'))\"\nRUN Rscript -e \"install.packages(c('TimeROC','car','RMiner','CoreLearn','caret','BigRF','CBA','RankCluster'))\"\nRUN Rscript -e \"install.packages(c('LTSA','survival','Basta','RMarkdown','qcc','jsonlite','RCurl','RWeka'))\"\nRUN Rscript -e \"install.packages(c('parallel','Rcpp','twitteR','igraph','nnet','glmnet','tree','arules','earth','mboost'))\"\nRUN Rscript -e \"install.packages(c('CORElearn','ipred','klaR','party','ROCR','kernlab','wordcloud','MissForest','MissMDA'))\"\nRUN Rscript -e \"install.packages(c('data.table','sqldf','forecast','RMYSQL','anomalyDetection','ElemStatLearn','h2o'))\"\nRUN Rscript -e \"install.packages(c('MASS','penalized','dplyr','reshape2','forecast','stringr','sampleSelection','sandwich'))\"\nRUN Rscript -e \"install.packages(c('sem','statnet','topicmodels','vcd','broom','corrplot','rbokeh','rCharts','lubridate'))\"\nRUN Rscript -e \"install.packages(c('randomForest','rpart','e1071','kknn','plyr','repr','IRdisplay','crayon','pdbZMQ'))\"\nRUN Rscript -e \"install.packages(c('magrittr', 'doBy','extrafont','chunked','snda','network','visNetwork','devtools'))\"\nRUN Rscript -e \"install.packages(c('angstroms','bikedata','datasuRus','dwapi','HURDAT','neurohcp','omsdata','parlitools'))\"\nRUN Rscript -e \"install.packages(c('rerddap','soilcarbon','learnr','olsrr','rODE'))\"\nRUN R -e \"install.packages(('devtools'), repos='https://cloud.r-project.org'); devtools::install_github('IRkernel/IRkernel');devtools::install_github('skoval/deuce');IRkernel::installspec()\"\nRUN echo \"root:Docker!\" | chpasswd\n#  RUN useradd -m -G sudo,users student\n#  RUN echo \"student:Docker!\" | chpasswd\n#  RUN chown student /home/student\n#   Define working directory\nWORKDIR /home/student\n#   Define default command\nRUN pip3 install statsmodels\nUSER root\nCMD jupyter-lab --ip 0.0.0.0 --port 9999 --LabApp.token='' --allow-root\n","originalDockerfileUglifiedHash":"58a1c5cb70ec0b261d96e90c502c6bd5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f291f7c83f42ecfafea7dfb66ee20615c785d664.dockerfile"}