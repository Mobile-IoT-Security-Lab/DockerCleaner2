{"seed":1979318488,"processedDockerfileHash":"b9c852a772f0199a1fe79bf94814f453","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04 AS base\nMAINTAINER Joel Martin <github@martintribe.org>\n#  #########################################################\n#   General requirements for testing or common across many\n#   implementations\n#  #########################################################\nRUN :\n#   Required for running tests\nRUN (apt-get update ;apt-get install --no-install-recommends make=4.1-9.1ubuntu1 python=2.7.15~rc1-1 -y )\n#   Some typical implementation and test requirements\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 libreadline-dev=7.0-3 libedit-dev=3.1-20170329-1 -y )\nRUN mkdir -p /mal\nWORKDIR /mal\n#  #########################################################\n#   Specific implementation requirements\n#  #########################################################\n#\n#   node\n#\n#   For building node modules\nRUN (apt-get update ;apt-get install --no-install-recommends g++=4:7.4.0-1ubuntu2.3 -y )\n#   Add nodesource apt repo config for 10.x stable\nRUN (apt-get update ;apt-get install --no-install-recommends gnupg=2.2.4-1ubuntu1.6 -y )\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash -\n#   Install nodejs\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=8.10.0~dfsg-2ubuntu0.4 -y )\nENV NPM_CONFIG_CACHE=\"/mal/.npm\"\n#\n#   wace build and runtime libs\n#\nRUN dpkg --add-architecture i386 \\\n && apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends lib32gcc-8-dev=8.4.0-1ubuntu1~18.04 libsdl2-dev:i386 libsdl2-image-dev:i386 libedit-dev:i386 freeglut3-dev:i386 lib32gcc-7-dev=7.5.0-3ubuntu1~18.04 libreadline-dev:i386 -y )\n#\n#   binaryen\n#\nRUN (apt-get update ;apt-get install --no-install-recommends git-core cmake=3.10.2-1ubuntu2.18.04.2 -y )\nRUN git clone https://github.com/WebAssembly/binaryen/ \\\n && cd binaryen \\\n && cmake . \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -r binaryen\n#  ########################################################################\nFROM base AS build_runtimes\n#\n#   clang/LLVM and rust (for building wasmtime)\n#\nRUN (apt-get update ;apt-get install --no-install-recommends llvm-3.9-dev=1:3.9.1-19ubuntu1 libclang-3.9-dev=1:3.9.1-19ubuntu1 clang-3.9=1:3.9.1-19ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 -y ) \\\n && curl https://sh.rustup.rs -sSf > /tmp/rustup.sh \\\n && sh /tmp/rustup.sh -y\nENV PATH=\"$PATH:/root/.cargo/bin\"\n#\n#   pypy / rpython (for building warpy)\n#\n#   rpython deps\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN (apt-get update ;apt-get install --no-install-recommends libffi-dev=3.2.1-8 pkg-config=0.29.1-0ubuntu2 libz-dev libbz2-dev=1.0.6-8.1ubuntu0.2 libsqlite3-dev=3.22.0-1ubuntu0.7 libncurses-dev libexpat1-dev=2.2.5-3ubuntu0.9 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 libgdbm-dev=1.14.1-6 tcl-dev=8.6.0+9 -y )\n#   install pypy, build and install pypy/rpython, remove prior pypy\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.24.32.20 -y ) \\\n && add-apt-repository ppa:pypy \\\n && apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends pypy=5.10.0+dfsg-3build2 -y ) \\\n && mkdir -p /opt/pypy \\\n && curl -L https://bitbucket.org/pypy/pypy/downloads/pypy2-v6.0.0-src.tar.bz2 | tar -xjf - -C /opt/pypy/ --strip-components=1 \\\n && cd /opt/pypy \\\n && make \\\n && chmod -R ugo+rw /opt/pypy/rpython/_cache \\\n && ln -sf /opt/pypy/rpython/bin/rpython /usr/local/bin/rpython \\\n && ln -sf /opt/pypy/pypy-c /usr/local/bin/pypy \\\n && rm -rf /tmp/usession* \\\n && ln -sf /opt/pypy/pypy/goal/pypy-c /usr/local/bin/pypy \\\n && apt-get -y autoremove pypy\n#\n#   wasi-sdk (C/C++ -> wasm+wasi)\n#\nRUN curl -LO https://github.com/CraneStation/wasi-sdk/releases/download/wasi-sdk-3/wasi-sdk_3.0_amd64.deb \\\n && dpkg -i wasi-sdk_3.0_amd64.deb \\\n && rm wasi-sdk_3.0_amd64.deb\n#\n#   warpy\n#\nRUN git clone https://github.com/kanaka/warpy/ \\\n && cd warpy \\\n && make warpy-nojit \\\n && cp warpy-nojit /usr/bin/warpy\n#\n#   wac/wace\n#\nRUN git clone https://github.com/kanaka/wac/ \\\n && cd wac \\\n && make USE_SDL= wac wax wace \\\n && cp wac wax wace /usr/bin\n#\n#   wasmtime\n#\nRUN git clone --recursive https://github.com/CraneStation/wasmtime \\\n && cd wasmtime \\\n && cargo build --release \\\n && cp target/release/wasmtime /usr/bin/ \\\n && cp target/release/wasm2obj /usr/bin/\n#  ########################################################################\nFROM base AS wasm\nCOPY --from=build_runtimes /usr/bin/wac /usr/bin/wac\nCOPY --from=build_runtimes /usr/bin/wax /usr/bin/wax\nCOPY --from=build_runtimes /usr/bin/wace /usr/bin/wace\nCOPY --from=build_runtimes /usr/bin/warpy /usr/bin/warpy\nCOPY --from=build_runtimes /usr/bin/wasmtime /usr/bin/wasmtime\nCOPY --from=build_runtimes /usr/bin/wasm2obj /usr/bin/wasm2obj\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04 AS base\nMAINTAINER Joel Martin <github@martintribe.org>\n# #########################################################\n#  General requirements for testing or common across many\n#  implementations\n# #########################################################\nRUN apt-get update -y\n#  Required for running tests\nRUN apt-get install make python -y\n#  Some typical implementation and test requirements\nRUN apt-get install curl libreadline-dev libedit-dev -y\nRUN mkdir -p /mal\nWORKDIR /mal\n# #########################################################\n#  Specific implementation requirements\n# #########################################################\n#\n#  node\n#\n#  For building node modules\nRUN apt-get install g++ -y\n#  Add nodesource apt repo config for 10.x stable\nRUN apt-get install gnupg -y\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash -\n#  Install nodejs\nRUN apt-get install nodejs -y\nENV NPM_CONFIG_CACHE=\"/mal/.npm\"\n#\n#  wace build and runtime libs\n#\nRUN dpkg --add-architecture i386 \\\n && apt-get update -y \\\n && apt-get install lib32gcc-8-dev libsdl2-dev:i386 libsdl2-image-dev:i386 libedit-dev:i386 freeglut3-dev:i386 lib32gcc-7-dev libreadline-dev:i386 -y\n#\n#  binaryen\n#\nRUN apt-get install git-core cmake -y\nRUN git clone https://github.com/WebAssembly/binaryen/ \\\n && cd binaryen \\\n && cmake . \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -r binaryen\n# ########################################################################\nFROM base AS build_runtimes\n#\n#  clang/LLVM and rust (for building wasmtime)\n#\nRUN apt-get install llvm-3.9-dev libclang-3.9-dev clang-3.9 -y\nRUN apt-get install curl -y \\\n && curl https://sh.rustup.rs -sSf > /tmp/rustup.sh \\\n && sh /tmp/rustup.sh -y\nENV PATH=\"$PATH:/root/.cargo/bin\"\n#\n#  pypy / rpython (for building warpy)\n#\n#  rpython deps\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get install libffi-dev pkg-config libz-dev libbz2-dev libsqlite3-dev libncurses-dev libexpat1-dev libssl-dev libgdbm-dev tcl-dev -y\n#  install pypy, build and install pypy/rpython, remove prior pypy\nRUN apt-get install software-properties-common -y \\\n && add-apt-repository ppa:pypy \\\n && apt-get update -y \\\n && apt-get install pypy -y \\\n && mkdir -p /opt/pypy \\\n && curl -L https://bitbucket.org/pypy/pypy/downloads/pypy2-v6.0.0-src.tar.bz2 | tar -xjf - -C /opt/pypy/ --strip-components=1 \\\n && cd /opt/pypy \\\n && make \\\n && chmod -R ugo+rw /opt/pypy/rpython/_cache \\\n && ln -sf /opt/pypy/rpython/bin/rpython /usr/local/bin/rpython \\\n && ln -sf /opt/pypy/pypy-c /usr/local/bin/pypy \\\n && rm -rf /tmp/usession* \\\n && ln -sf /opt/pypy/pypy/goal/pypy-c /usr/local/bin/pypy \\\n && apt-get -y autoremove pypy\n#\n#  wasi-sdk (C/C++ -> wasm+wasi)\n#\nRUN curl -LO https://github.com/CraneStation/wasi-sdk/releases/download/wasi-sdk-3/wasi-sdk_3.0_amd64.deb \\\n && dpkg -i wasi-sdk_3.0_amd64.deb \\\n && rm wasi-sdk_3.0_amd64.deb\n#\n#  warpy\n#\nRUN git clone https://github.com/kanaka/warpy/ \\\n && cd warpy \\\n && make warpy-nojit \\\n && cp warpy-nojit /usr/bin/warpy\n#\n#  wac/wace\n#\nRUN git clone https://github.com/kanaka/wac/ \\\n && cd wac \\\n && make USE_SDL= wac wax wace \\\n && cp wac wax wace /usr/bin\n#\n#  wasmtime\n#\nRUN git clone --recursive https://github.com/CraneStation/wasmtime \\\n && cd wasmtime \\\n && cargo build --release \\\n && cp target/release/wasmtime /usr/bin/ \\\n && cp target/release/wasm2obj /usr/bin/\n# ########################################################################\nFROM base AS wasm\nCOPY --from=build_runtimes /usr/bin/wac /usr/bin/wac\nCOPY --from=build_runtimes /usr/bin/wax /usr/bin/wax\nCOPY --from=build_runtimes /usr/bin/wace /usr/bin/wace\nCOPY --from=build_runtimes /usr/bin/warpy /usr/bin/warpy\nCOPY --from=build_runtimes /usr/bin/wasmtime /usr/bin/wasmtime\nCOPY --from=build_runtimes /usr/bin/wasm2obj /usr/bin/wasm2obj\n","injectedSmells":[],"originalDockerfileHash":"7f83bf3f7f6fefb66d711dc675fa00d8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04 AS base\nMAINTAINER Joel Martin <github@martintribe.org>\n#  #########################################################\n#   General requirements for testing or common across many\n#   implementations\n#  #########################################################\nRUN apt-get update -y\n#   Required for running tests\nRUN apt-get install make python -y\n#   Some typical implementation and test requirements\nRUN apt-get install curl libreadline-dev libedit-dev -y\nRUN mkdir -p /mal\nWORKDIR /mal\n#  #########################################################\n#   Specific implementation requirements\n#  #########################################################\n#\n#   node\n#\n#   For building node modules\nRUN apt-get install g++ -y\n#   Add nodesource apt repo config for 10.x stable\nRUN apt-get install gnupg -y\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash -\n#   Install nodejs\nRUN apt-get install nodejs -y\nENV NPM_CONFIG_CACHE=\"/mal/.npm\"\n#\n#   wace build and runtime libs\n#\nRUN dpkg --add-architecture i386 \\\n && apt-get update -y \\\n && apt-get install lib32gcc-8-dev libsdl2-dev:i386 libsdl2-image-dev:i386 libedit-dev:i386 freeglut3-dev:i386 lib32gcc-7-dev libreadline-dev:i386 -y\n#\n#   binaryen\n#\nRUN apt-get install git-core cmake -y\nRUN git clone https://github.com/WebAssembly/binaryen/ \\\n && cd binaryen \\\n && cmake . \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -r binaryen\n#  ########################################################################\nFROM base AS build_runtimes\n#\n#   clang/LLVM and rust (for building wasmtime)\n#\nRUN apt-get install llvm-3.9-dev libclang-3.9-dev clang-3.9 -y\nRUN apt-get install curl -y \\\n && curl https://sh.rustup.rs -sSf > /tmp/rustup.sh \\\n && sh /tmp/rustup.sh -y\nENV PATH=\"$PATH:/root/.cargo/bin\"\n#\n#   pypy / rpython (for building warpy)\n#\n#   rpython deps\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get install libffi-dev pkg-config libz-dev libbz2-dev libsqlite3-dev libncurses-dev libexpat1-dev libssl-dev libgdbm-dev tcl-dev -y\n#   install pypy, build and install pypy/rpython, remove prior pypy\nRUN apt-get install software-properties-common -y \\\n && add-apt-repository ppa:pypy \\\n && apt-get update -y \\\n && apt-get install pypy -y \\\n && mkdir -p /opt/pypy \\\n && curl -L https://bitbucket.org/pypy/pypy/downloads/pypy2-v6.0.0-src.tar.bz2 | tar -xjf - -C /opt/pypy/ --strip-components=1 \\\n && cd /opt/pypy \\\n && make \\\n && chmod -R ugo+rw /opt/pypy/rpython/_cache \\\n && ln -sf /opt/pypy/rpython/bin/rpython /usr/local/bin/rpython \\\n && ln -sf /opt/pypy/pypy-c /usr/local/bin/pypy \\\n && rm -rf /tmp/usession* \\\n && ln -sf /opt/pypy/pypy/goal/pypy-c /usr/local/bin/pypy \\\n && apt-get -y autoremove pypy\n#\n#   wasi-sdk (C/C++ -> wasm+wasi)\n#\nRUN curl -LO https://github.com/CraneStation/wasi-sdk/releases/download/wasi-sdk-3/wasi-sdk_3.0_amd64.deb \\\n && dpkg -i wasi-sdk_3.0_amd64.deb \\\n && rm wasi-sdk_3.0_amd64.deb\n#\n#   warpy\n#\nRUN git clone https://github.com/kanaka/warpy/ \\\n && cd warpy \\\n && make warpy-nojit \\\n && cp warpy-nojit /usr/bin/warpy\n#\n#   wac/wace\n#\nRUN git clone https://github.com/kanaka/wac/ \\\n && cd wac \\\n && make USE_SDL= wac wax wace \\\n && cp wac wax wace /usr/bin\n#\n#   wasmtime\n#\nRUN git clone --recursive https://github.com/CraneStation/wasmtime \\\n && cd wasmtime \\\n && cargo build --release \\\n && cp target/release/wasmtime /usr/bin/ \\\n && cp target/release/wasm2obj /usr/bin/\n#  ########################################################################\nFROM base AS wasm\nCOPY --from=build_runtimes /usr/bin/wac /usr/bin/wac\nCOPY --from=build_runtimes /usr/bin/wax /usr/bin/wax\nCOPY --from=build_runtimes /usr/bin/wace /usr/bin/wace\nCOPY --from=build_runtimes /usr/bin/warpy /usr/bin/warpy\nCOPY --from=build_runtimes /usr/bin/wasmtime /usr/bin/wasmtime\nCOPY --from=build_runtimes /usr/bin/wasm2obj /usr/bin/wasm2obj\n","originalDockerfileUglifiedHash":"aa495f599d7d6d5cc6acff77114ab17f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c966a409b5c398f842f9557997fe34c7485f4449.dockerfile"}