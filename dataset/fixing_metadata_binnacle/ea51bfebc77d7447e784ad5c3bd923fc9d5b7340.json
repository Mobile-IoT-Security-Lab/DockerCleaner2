{"seed":1589610430,"processedDockerfileHash":"5b09fbb9b22eedfd218a6a7e4c32824e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck"],"processedDockerfile":"#   Generated by Neurodocker v0.2.0-dev.\n#\n#   Thank you for using Neurodocker. If you discover any issues \n#   or ways to improve this software, please submit an issue or \n#   pull request on our GitHub repository:\n#       https://github.com/kaczmarj/neurodocker\n#\n#   Timestamp: 2017-08-15 21:10:19\nFROM neurodebian:stretch-non-free\nARG DEBIAN_FRONTEND=noninteractive\n#  ----------------------------------------------------------\n#   Install common dependencies and create default entrypoint\n#  ----------------------------------------------------------\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bzip2 ca-certificates curl unzip -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && chmod 777 /opt \\\n && chmod a+s /opt \\\n && mkdir /neurodocker \\\n && echo '#!/usr/bin/env bash' >> $ND_ENTRYPOINT \\\n && echo 'set +x' >> $ND_ENTRYPOINT \\\n && echo 'if [ -z \"$*\" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT \\\n && chmod -R 777 /neurodocker \\\n && chmod a+s /neurodocker\nENTRYPOINT [\"/neurodocker/startup.sh\"]\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends tree git-annex-standalone vim emacs-nox nano less ncdu tig git-annex-remote-rclone -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   User-defined instruction\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends nodejs build-essential -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   User-defined instruction\nENV LC_ALL=\"C.UTF-8\"\n#   User-defined instruction\nRUN apt-get update \\\n && apt-get install --no-install-recommends xvfb mesa-utils -yq\n#   Create new user: neuro\nRUN useradd --no-user-group --create-home --shell /bin/bash neuro\nUSER neuro\n#  ------------------\n#   Install Miniconda\n#  ------------------\nENV CONDA_DIR=\"/opt/conda\" \\\n    PATH=\"/opt/conda/bin:$PATH\"\nRUN echo \"Downloading Miniconda installer ...\" \\\n && miniconda_installer=/tmp/miniconda.sh \\\n && curl -sSL -o $miniconda_installer https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && /bin/bash $miniconda_installer -f -b -p $CONDA_DIR \\\n && rm -f $miniconda_installer \\\n && conda config --system --prepend channels conda-forge \\\n && conda config --system --set auto_update_conda false \\\n && conda config --system --set show_channel_urls true \\\n && conda update -y --all \\\n && conda clean -tipsy \\\n && find /opt/conda -name \".wh*\" -exec rm {} +\n#  -------------------------\n#   Create conda environment\n#  -------------------------\nRUN conda create -y -q --name neuro python=3.6 jupyter jupyterlab pandas matplotlib scikit-learn seaborn altair traitsui apptools configobj reprozip reprounzip vtk \\\n && conda clean -tipsy \\\n && /bin/bash -c \"source activate neuro \\\n && pip install -q --no-cache-dir nilearn datalad mayavi\" \\\n && find /opt/conda -name \".wh*\" -exec rm {} +\nENV PATH=\"/opt/conda/envs/neuro/bin:$PATH\"\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && pip install --pre --upgrade ipywidgets pythreejs \"\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && pip install --upgrade https://github.com/maartenbreddels/ipyvolume/archive/23eb91685dfcf200ee82f89ab6f7294f9214db8c.zip \\\n && jupyter nbextension install --py --sys-prefix ipyvolume \\\n && jupyter nbextension enable --py --sys-prefix ipyvolume \"\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && conda install jupyter_contrib_nbextensions \"\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && pip install --upgrade https://github.com/nipy/nibabel/archive/master.zip \"\n#   User-defined instruction\nCOPY cifti-data /cifti-data\n#   User-defined instruction\nUSER root\n#   User-defined instruction\nRUN chmod -R a+r /cifti-data\n#   User-defined instruction\nUSER neuro\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && jupyter nbextension enable rubberband/main \\\n && jupyter nbextension enable exercise2/main \\\n && jupyter nbextension enable spellchecker/main \\\n && conda install bokeh scikit-image \"\nWORKDIR /home/neuro\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Generated by Neurodocker v0.2.0-dev.\n#\n#  Thank you for using Neurodocker. If you discover any issues \n#  or ways to improve this software, please submit an issue or \n#  pull request on our GitHub repository:\n#      https://github.com/kaczmarj/neurodocker\n#\n#  Timestamp: 2017-08-15 21:10:19\nFROM neurodebian:stretch-non-free\nARG DEBIAN_FRONTEND=noninteractive\n# ----------------------------------------------------------\n#  Install common dependencies and create default entrypoint\n# ----------------------------------------------------------\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bzip2 ca-certificates curl unzip -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && chmod 777 /opt \\\n && chmod a+s /opt \\\n && mkdir /neurodocker \\\n && echo '#!/usr/bin/env bash' >> $ND_ENTRYPOINT \\\n && echo 'set +x' >> $ND_ENTRYPOINT \\\n && echo 'if [ -z \"$*\" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT \\\n && chmod -R 777 /neurodocker \\\n && chmod a+s /neurodocker\nENTRYPOINT [\"/neurodocker/startup.sh\"]\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends tree git-annex-standalone vim emacs-nox nano less ncdu tig git-annex-remote-rclone -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  User-defined instruction\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends nodejs build-essential -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  User-defined instruction\nENV LC_ALL=\"C.UTF-8\"\n#  User-defined instruction\nRUN apt-get update \\\n && apt-get install xvfb mesa-utils -yq\n#  Create new user: neuro\nRUN useradd --no-user-group --create-home --shell /bin/bash neuro\nUSER neuro\n# ------------------\n#  Install Miniconda\n# ------------------\nENV CONDA_DIR=\"/opt/conda\" \\\n    PATH=\"/opt/conda/bin:$PATH\"\nRUN echo \"Downloading Miniconda installer ...\" \\\n && miniconda_installer=/tmp/miniconda.sh \\\n && curl -sSL -o $miniconda_installer https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && /bin/bash $miniconda_installer -f -b -p $CONDA_DIR \\\n && rm -f $miniconda_installer \\\n && conda config --system --prepend channels conda-forge \\\n && conda config --system --set auto_update_conda false \\\n && conda config --system --set show_channel_urls true \\\n && conda update -y --all \\\n && conda clean -tipsy \\\n && find /opt/conda -name \".wh*\" -exec rm {} +\n# -------------------------\n#  Create conda environment\n# -------------------------\nRUN conda create -y -q --name neuro python=3.6 jupyter jupyterlab pandas matplotlib scikit-learn seaborn altair traitsui apptools configobj reprozip reprounzip vtk \\\n && conda clean -tipsy \\\n && /bin/bash -c \"source activate neuro \\\n && pip install -q --no-cache-dir nilearn datalad mayavi\" \\\n && find /opt/conda -name \".wh*\" -exec rm {} +\nENV PATH=\"/opt/conda/envs/neuro/bin:$PATH\"\n#  User-defined instruction\nRUN bash -c \"source activate neuro \\\n && pip install --pre --upgrade ipywidgets pythreejs \"\n#  User-defined instruction\nRUN bash -c \"source activate neuro \\\n && pip install --upgrade https://github.com/maartenbreddels/ipyvolume/archive/23eb91685dfcf200ee82f89ab6f7294f9214db8c.zip \\\n && jupyter nbextension install --py --sys-prefix ipyvolume \\\n && jupyter nbextension enable --py --sys-prefix ipyvolume \"\n#  User-defined instruction\nRUN bash -c \"source activate neuro \\\n && conda install jupyter_contrib_nbextensions \"\n#  User-defined instruction\nRUN bash -c \"source activate neuro \\\n && pip install --upgrade https://github.com/nipy/nibabel/archive/master.zip \"\n#  User-defined instruction\nCOPY cifti-data /cifti-data\n#  User-defined instruction\nUSER root\n#  User-defined instruction\nRUN chmod -R a+r /cifti-data\n#  User-defined instruction\nUSER neuro\n#  User-defined instruction\nRUN bash -c \"source activate neuro \\\n && jupyter nbextension enable rubberband/main \\\n && jupyter nbextension enable exercise2/main \\\n && jupyter nbextension enable spellchecker/main \\\n && conda install bokeh scikit-image \"\nWORKDIR /home/neuro\n","injectedSmells":[],"originalDockerfileHash":"302a8757656103c39822e9c65ebf87be","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Generated by Neurodocker v0.2.0-dev.\n#\n#   Thank you for using Neurodocker. If you discover any issues \n#   or ways to improve this software, please submit an issue or \n#   pull request on our GitHub repository:\n#       https://github.com/kaczmarj/neurodocker\n#\n#   Timestamp: 2017-08-15 21:10:19\nFROM neurodebian:stretch-non-free\nARG DEBIAN_FRONTEND=noninteractive\n#  ----------------------------------------------------------\n#   Install common dependencies and create default entrypoint\n#  ----------------------------------------------------------\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bzip2 ca-certificates curl unzip -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && chmod 777 /opt \\\n && chmod a+s /opt \\\n && mkdir /neurodocker \\\n && echo '#!/usr/bin/env bash' >> $ND_ENTRYPOINT \\\n && echo 'set +x' >> $ND_ENTRYPOINT \\\n && echo 'if [ -z \"$*\" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT \\\n && chmod -R 777 /neurodocker \\\n && chmod a+s /neurodocker\nENTRYPOINT [\"/neurodocker/startup.sh\"]\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends tree git-annex-standalone vim emacs-nox nano less ncdu tig git-annex-remote-rclone -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   User-defined instruction\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends nodejs build-essential -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   User-defined instruction\nENV LC_ALL=\"C.UTF-8\"\n#   User-defined instruction\nRUN apt-get update \\\n && apt-get install xvfb mesa-utils -yq\n#   Create new user: neuro\nRUN useradd --no-user-group --create-home --shell /bin/bash neuro\nUSER neuro\n#  ------------------\n#   Install Miniconda\n#  ------------------\nENV CONDA_DIR=\"/opt/conda\" \\\n    PATH=\"/opt/conda/bin:$PATH\"\nRUN echo \"Downloading Miniconda installer ...\" \\\n && miniconda_installer=/tmp/miniconda.sh \\\n && curl -sSL -o $miniconda_installer https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && /bin/bash $miniconda_installer -f -b -p $CONDA_DIR \\\n && rm -f $miniconda_installer \\\n && conda config --system --prepend channels conda-forge \\\n && conda config --system --set auto_update_conda false \\\n && conda config --system --set show_channel_urls true \\\n && conda update -y --all \\\n && conda clean -tipsy \\\n && find /opt/conda -name \".wh*\" -exec rm {} +\n#  -------------------------\n#   Create conda environment\n#  -------------------------\nRUN conda create -y -q --name neuro python=3.6 jupyter jupyterlab pandas matplotlib scikit-learn seaborn altair traitsui apptools configobj reprozip reprounzip vtk \\\n && conda clean -tipsy \\\n && /bin/bash -c \"source activate neuro \\\n && pip install -q --no-cache-dir nilearn datalad mayavi\" \\\n && find /opt/conda -name \".wh*\" -exec rm {} +\nENV PATH=\"/opt/conda/envs/neuro/bin:$PATH\"\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && pip install --pre --upgrade ipywidgets pythreejs \"\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && pip install --upgrade https://github.com/maartenbreddels/ipyvolume/archive/23eb91685dfcf200ee82f89ab6f7294f9214db8c.zip \\\n && jupyter nbextension install --py --sys-prefix ipyvolume \\\n && jupyter nbextension enable --py --sys-prefix ipyvolume \"\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && conda install jupyter_contrib_nbextensions \"\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && pip install --upgrade https://github.com/nipy/nibabel/archive/master.zip \"\n#   User-defined instruction\nCOPY cifti-data /cifti-data\n#   User-defined instruction\nUSER root\n#   User-defined instruction\nRUN chmod -R a+r /cifti-data\n#   User-defined instruction\nUSER neuro\n#   User-defined instruction\nRUN bash -c \"source activate neuro \\\n && jupyter nbextension enable rubberband/main \\\n && jupyter nbextension enable exercise2/main \\\n && jupyter nbextension enable spellchecker/main \\\n && conda install bokeh scikit-image \"\nWORKDIR /home/neuro\n","originalDockerfileUglifiedHash":"b39aff5e8f3d46afe6cb076e70c0e50a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ea51bfebc77d7447e784ad5c3bd923fc9d5b7340.dockerfile"}