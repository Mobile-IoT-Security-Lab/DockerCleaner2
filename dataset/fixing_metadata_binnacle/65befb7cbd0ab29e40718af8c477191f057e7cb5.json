{"seed":2229548114,"processedDockerfileHash":"f411831820a2e2317c4e65d4fd5100d5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER Alexander Schneider \"alexander.schneider@jankowfsky.com\"\n#   Upgrade system\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV HOME=\"/root\"\nRUN :\n#   Setup system and install tools\nRUN echo \"initscripts hold\" | dpkg --set-selections\nRUN (apt-get update ;apt-get install --no-install-recommends libreadline-gplv2-dev=5.2+dfsg-2 libfreetype6=2.5.2-1ubuntu2.8 apt-utils=1.0.1ubuntu2.24 dialog=1.2-20130928-1 postfix=2.11.0-1ubuntu1.2 -qqy )\nRUN echo \"Europe/Berlin\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\nRUN echo 'alias ll=\"ls -lah --color=auto\"' >> /etc/bash.bashrc\nRUN (apt-get update ;apt-get install --no-install-recommends passwd=1:4.1.5.1-1ubuntu9.5 supervisor=3.0b2-1ubuntu0.1 git-core=1:1.9.1-1ubuntu0.10 sudo=1.8.9p5-1ubuntu1.4 unzip=6.0-9ubuntu1.5 wget=1.15-1ubuntu1.14.04.5 curl=7.35.0-1ubuntu2.20 libfile-slurp-perl=9999.19-4 libmysql-diff-perl=0.43-2 vim=2:7.4.052-1ubuntu3.1 net-tools=1.60-25ubuntu2.1 software-properties-common=0.92.37.8 python-software-properties=0.92.37.8 -qqy )\n#   Set locale\nRUN (apt-get update ;apt-get install --no-install-recommends locales=2.13+git20120306-12.1 -qqy )\nRUN locale-gen --purge de_DE de_DE.UTF-8\nRUN locale-gen --purge en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nENV LC_ALL=\"en_US.UTF-8\"\n#   Setup ssh\nRUN (apt-get update ;apt-get install --no-install-recommends openssh-server=1:6.6p1-2ubuntu2.13 -qqy )\nRUN mkdir -p /var/run/sshd\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config\nRUN sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config\nRUN sed -ri 's/PermitRootLogin without-password/PermitRootLogin yes/g' /etc/ssh/sshd_config\nRUN echo 'root:root' | chpasswd\n#   Generate a host key before packing.\nRUN service ssh start ; service ssh stop\n#   Create SSL cert\nRUN mkdir /root/ssl ; openssl genrsa -out /root/ssl/local.key 1024 ; openssl req -new -key /root/ssl/local.key -out /root/ssl/local.csr -subj \"/C=DE/ST=BW/L=FREIBURG/O=Jankowfsky AG/OU=Development/CN=localhost\" ; openssl x509 -req -days 365 -in /root/ssl/local.csr -signkey /root/ssl/local.key -out /root/ssl/local.crt\n#   Apache\nRUN (apt-get update ;apt-get install --no-install-recommends apache2-mpm-prefork=2.4.7-1ubuntu4.22 apache2-utils=2.4.7-1ubuntu4.22 -qqy )\nRUN a2enmod rewrite\nRUN a2enmod proxy_fcgi\nRUN a2enmod ssl\nRUN mkdir /etc/apache2/conf.d/\nRUN echo \"ServerName localhost\" | tee /etc/apache2/conf.d/fqdn\nRUN echo \"ServerName localhost\" >> /etc/apache2/apache2.conf\nCOPY conf/apache/000-default /etc/apache2/sites-enabled/000-default.conf\n#   Mysql\nRUN (apt-get update ;apt-get install --no-install-recommends mysql-server=5.5.62-0ubuntu0.14.04.1 mysql-common=5.5.62-0ubuntu0.14.04.1 mysql-client=5.5.62-0ubuntu0.14.04.1 -qqy )\nRUN ln -s /run/mysqld/mysqld.sock /tmp/mysql.sock\n#   Add latest php version\nRUN add-apt-repository ppa:ondrej/apache2\nRUN add-apt-repository ppa:ondrej/php \\\n && :\n#   PHP\nRUN (apt-get update ;apt-get install --no-install-recommends php5-fpm=5.5.9+dfsg-1ubuntu4.29 php5=5.5.9+dfsg-1ubuntu4.29 php5-cli=5.5.9+dfsg-1ubuntu4.29 php5-mysql=5.5.9+dfsg-1ubuntu4.29 php5-curl=5.5.9+dfsg-1ubuntu4.29 php5-dev=5.5.9+dfsg-1ubuntu4.29 php5-gd=5.5.9+dfsg-1ubuntu4.29 php-pear=5.5.9+dfsg-1ubuntu4.29 php-apc=4.0.2-2build1 php5-xdebug=2.2.3-2build1 libapache2-mod-php5=5.5.9+dfsg-1ubuntu4.29 -qqy )\n#   PhpMyAdmin\nRUN mysqld &; service apache2 start ; sleep 5 ; printf ynnn1n | (apt-get update ;apt-get install --no-install-recommends phpmyadmin=4:4.0.10-1ubuntu0.1 -qqy ) ; sleep 15 ; mysqladmin -u root shutdown\nRUN sed -i \"0,/\\/\\/ $cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\] = TRUE;/{s#// $cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\] = TRUE;#$cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\] = TRUE;#g}\" /etc/phpmyadmin/config.inc.php\nRUN sed -i \"/^[ ]*$cfg\\['Servers'\\]\\[$i\\]\\['host'\\]/a$cfg\\['Servers'\\]\\[$i\\]\\['hide_db'\\] = '(information_schema|performance_schema|phpmyadmin|mysql|test)';\" /etc/phpmyadmin/config.inc.php\nRUN ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-enabled\n#   Install ant builder\nRUN (apt-get update ;apt-get install --no-install-recommends ant=1.9.3-2ubuntu0.1 -qqy )\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   Install phpunit\nRUN composer global require \"phpunit/phpunit=4.1.*\" ; ln -s /root/.composer/vendor/bin/phpunit /usr/bin/phpunit\n#   Install ruby\nRUN (apt-get update ;apt-get install --no-install-recommends ruby=1:1.9.3.4 -y )\n#   Install sass\nRUN gem install sass --version 3.7.4\n#   Nodejs + NPM\nRUN add-apt-repository ppa:chris-lea/node.js \\\n && :\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=0.10.25~dfsg2-2ubuntu1.2 -y )\n#   Install bower\nRUN npm install bower@1.8.14 -g\n#   Install grunt\nRUN npm install grunt-cli@1.4.3 -g\n#   Install glub\nRUN npm install gulp@4.0.2 -g\n#   Install phpbrew\nRUN :\nRUN apt-get build-dep -y --fix-missing php5\nRUN (apt-get update ;apt-get install --no-install-recommends php5=5.5.9+dfsg-1ubuntu4.29 php5-dev=5.5.9+dfsg-1ubuntu4.29 php-pear=5.5.9+dfsg-1ubuntu4.29 autoconf=2.69-6 automake=1:1.14.1-2ubuntu1 curl=7.35.0-1ubuntu2.20 build-essential=11.6ubuntu6 libxslt1-dev=1.1.28-2ubuntu0.2 re2c=0.13.5-1build2 libxml2=2.9.1+dfsg1-3ubuntu4.13 libxml2-dev=2.9.1+dfsg1-3ubuntu4.13 php5-cli=5.5.9+dfsg-1ubuntu4.29 bison=2:3.0.2.dfsg-2 libbz2-dev=1.0.6-5 libreadline-dev=6.3-4ubuntu2 libfreetype6=2.5.2-1ubuntu2.8 libfreetype6-dev=2.5.2-1ubuntu2.8 libpng12-0=1.2.50-1ubuntu2.14.04.3 libpng12-dev=1.2.50-1ubuntu2.14.04.3 libjpeg-dev=8c-2ubuntu8 libjpeg8-dev=8c-2ubuntu8 libjpeg8=8c-2ubuntu8 libgd-dev=2.1.0-3ubuntu0.11 libgd3=2.1.0-3ubuntu0.11 libxpm4=1:3.5.10-1ubuntu0.1 libssl-dev=1.0.1f-1ubuntu2.27 openssl=1.0.1f-1ubuntu2.27 gettext=0.18.3.1-1ubuntu3.1 libgettextpo-dev=0.18.3.1-1ubuntu3.1 libgettextpo0=0.18.3.1-1ubuntu3.1 libicu-dev=52.1-3ubuntu0.8 libmhash2=0.9.9.9-4 libmhash-dev=0.9.9.9-4 libmcrypt4=2.5.8-3.1ubuntu1 libmcrypt-dev=2.5.8-3.1ubuntu1 libpcre3-dev=1:8.31-2ubuntu2.3 libpcre++-dev=0.9.5-6 -y )\nRUN wget http://launchpadlibrarian.net/121520545/libbison-dev_2.6.2.dfsg-1_amd64.deb \\\n && dpkg -i libbison-dev_2.6.2.dfsg-1_amd64.deb\nRUN wget http://launchpadlibrarian.net/121520544/bison_2.6.2.dfsg-1_amd64.deb \\\n && dpkg -i bison_2.6.2.dfsg-1_amd64.deb\nCOPY conf/php/phpbrew /usr/bin/phpbrew\nRUN chmod +x /usr/bin/phpbrew\nCOPY conf/php/pbconfig.yaml /tmp/config.yaml\nRUN phpbrew init --config=/tmp/config.yaml\nRUN echo \"source /root/.phpbrew/bashrc\" >> /root/.bashrc\nRUN ln -s /.phpbrew /root/.phpbrew\nCOPY conf/php/install_php /usr/bin/install_php\nRUN chmod +x /usr/bin/install_php\n#   Install tideways daemon\nCOPY conf/php/tideways-daemon /root/tideways-daemon\nRUN chmod +x /root/tideways-daemon/install.sh\nRUN /root/tideways-daemon/install.sh\n#   Install different php version\nCOPY conf/php/modules /root/.phpbrew/modules\n#   php 5.6\nRUN install_php 5.6.4\n#   php 5.5\nRUN install_php 5.5.20\n#   php 5.4\nRUN install_php 5.4.40\n#   php 5.3\nRUN install_php 5.3.29\n#   Add supervisor config\nCOPY conf/supervisor/startup.conf /etc/supervisor/conf.d/startup.conf\nENV PHP_VERSION=\"5.6.4\"\nENV PHP_XDEBUG=\"0\"\nENV SQL_DIR=\"/var/www/_sql\"\nCOPY conf/scripts/startup.sh /usr/bin/startup_container\nRUN chmod +x /usr/bin/startup_container\n#   Cleanup\nRUN apt-get clean -y ; apt-get autoclean -y ; apt-get autoremove -y ; rm -rf /var/lib/{apt,dpkg,cache,log}/\nVOLUME /var/www\nEXPOSE 22/tcp 80/tcp 443/tcp 3306/tcp 9000/tcp\nCMD [\"/bin/bash\", \"/usr/bin/startup_container\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER Alexander Schneider \"alexander.schneider@jankowfsky.com\"\n#  Upgrade system\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV HOME=\"/root\"\nRUN apt-get update\n#  Setup system and install tools\nRUN echo \"initscripts hold\" | dpkg --set-selections\nRUN apt-get install libreadline-gplv2-dev libfreetype6 apt-utils dialog postfix -qqy\nRUN echo \"Europe/Berlin\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\nRUN echo 'alias ll=\"ls -lah --color=auto\"' >> /etc/bash.bashrc\nRUN apt-get install passwd supervisor git-core sudo unzip wget curl libfile-slurp-perl libmysql-diff-perl vim net-tools software-properties-common python-software-properties -qqy\n#  Set locale\nRUN apt-get install locales -qqy\nRUN locale-gen --purge de_DE de_DE.UTF-8\nRUN locale-gen --purge en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nENV LC_ALL=\"en_US.UTF-8\"\n#  Setup ssh\nRUN apt-get install openssh-server -qqy\nRUN mkdir -p /var/run/sshd\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config\nRUN sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config\nRUN sed -ri 's/PermitRootLogin without-password/PermitRootLogin yes/g' /etc/ssh/sshd_config\nRUN echo 'root:root' | chpasswd\n#  Generate a host key before packing.\nRUN service ssh start ; service ssh stop\n#  Create SSL cert\nRUN mkdir /root/ssl ; openssl genrsa -out /root/ssl/local.key 1024 ; openssl req -new -key /root/ssl/local.key -out /root/ssl/local.csr -subj \"/C=DE/ST=BW/L=FREIBURG/O=Jankowfsky AG/OU=Development/CN=localhost\" ; openssl x509 -req -days 365 -in /root/ssl/local.csr -signkey /root/ssl/local.key -out /root/ssl/local.crt\n#  Apache\nRUN apt-get install apache2-mpm-prefork apache2-utils -qqy\nRUN a2enmod rewrite\nRUN a2enmod proxy_fcgi\nRUN a2enmod ssl\nRUN mkdir /etc/apache2/conf.d/\nRUN echo \"ServerName localhost\" | tee /etc/apache2/conf.d/fqdn\nRUN echo \"ServerName localhost\" >> /etc/apache2/apache2.conf\nADD conf/apache/000-default /etc/apache2/sites-enabled/000-default.conf\n#  Mysql\nRUN apt-get install mysql-server mysql-common mysql-client -qqy\nRUN ln -s /run/mysqld/mysqld.sock /tmp/mysql.sock\n#  Add latest php version\nRUN add-apt-repository ppa:ondrej/apache2\nRUN add-apt-repository ppa:ondrej/php \\\n && apt-get update\n#  PHP\nRUN apt-get install php5-fpm php5 php5-cli php5-mysql php5-curl php5-dev php5-gd php-pear php-apc php5-xdebug libapache2-mod-php5 -qqy\n#  PhpMyAdmin\nRUN mysqld &; service apache2 start ; sleep 5 ; printf y\\n\\n\\n1\\n | apt-get install phpmyadmin -qqy ; sleep 15 ; mysqladmin -u root shutdown\nRUN sed -i \"0,/\\/\\/ $cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\] = TRUE;/{s#// $cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\] = TRUE;#$cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\] = TRUE;#g}\" /etc/phpmyadmin/config.inc.php\nRUN sed -i \"/^[ ]*$cfg\\['Servers'\\]\\[$i\\]\\['host'\\]/a\\$cfg\\['Servers'\\]\\[$i\\]\\['hide_db'\\] = '(information_schema|performance_schema|phpmyadmin|mysql|test)';\" /etc/phpmyadmin/config.inc.php\nRUN ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-enabled\n#  Install ant builder\nRUN apt-get install ant -qqy\n#  Install composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#  Install phpunit\nRUN composer global require \"phpunit/phpunit=4.1.*\" ; ln -s /root/.composer/vendor/bin/phpunit /usr/bin/phpunit\n#  Install ruby\nRUN apt-get install ruby -y\n#  Install sass\nRUN gem install sass\n#  Nodejs + NPM\nRUN add-apt-repository ppa:chris-lea/node.js \\\n && apt-get update\nRUN apt-get install nodejs -y\n#  Install bower\nRUN npm install bower -g\n#  Install grunt\nRUN npm install grunt-cli -g\n#  Install glub\nRUN npm install gulp -g\n#  Install phpbrew\nRUN apt-get update\nRUN apt-get build-dep -y --fix-missing php5\nRUN apt-get install php5 php5-dev php-pear autoconf automake curl build-essential libxslt1-dev re2c libxml2 libxml2-dev php5-cli bison libbz2-dev libreadline-dev libfreetype6 libfreetype6-dev libpng12-0 libpng12-dev libjpeg-dev libjpeg8-dev libjpeg8 libgd-dev libgd3 libxpm4 libssl-dev openssl gettext libgettextpo-dev libgettextpo0 libicu-dev libmhash2 libmhash-dev libmcrypt4 libmcrypt-dev libpcre3-dev libpcre++-dev -y\nRUN wget http://launchpadlibrarian.net/121520545/libbison-dev_2.6.2.dfsg-1_amd64.deb \\\n && dpkg -i libbison-dev_2.6.2.dfsg-1_amd64.deb\nRUN wget http://launchpadlibrarian.net/121520544/bison_2.6.2.dfsg-1_amd64.deb \\\n && dpkg -i bison_2.6.2.dfsg-1_amd64.deb\nADD conf/php/phpbrew /usr/bin/phpbrew\nRUN chmod +x /usr/bin/phpbrew\nADD conf/php/pbconfig.yaml /tmp/config.yaml\nRUN phpbrew init --config=/tmp/config.yaml\nRUN echo \"source /root/.phpbrew/bashrc\" >> /root/.bashrc\nRUN ln -s /.phpbrew /root/.phpbrew\nADD conf/php/install_php /usr/bin/install_php\nRUN chmod +x /usr/bin/install_php\n#  Install tideways daemon\nADD conf/php/tideways-daemon /root/tideways-daemon\nRUN chmod +x /root/tideways-daemon/install.sh\nRUN /root/tideways-daemon/install.sh\n#  Install different php version\nADD conf/php/modules /root/.phpbrew/modules\n#  php 5.6\nRUN install_php 5.6.4\n#  php 5.5\nRUN install_php 5.5.20\n#  php 5.4\nRUN install_php 5.4.40\n#  php 5.3\nRUN install_php 5.3.29\n#  Add supervisor config\nADD conf/supervisor/startup.conf /etc/supervisor/conf.d/startup.conf\nENV PHP_VERSION=\"5.6.4\"\nENV PHP_XDEBUG=\"0\"\nENV SQL_DIR=\"/var/www/_sql\"\nADD conf/scripts/startup.sh /usr/bin/startup_container\nRUN chmod +x /usr/bin/startup_container\n#  Cleanup\nRUN apt-get clean -y ; apt-get autoclean -y ; apt-get autoremove -y ; rm -rf /var/lib/{apt,dpkg,cache,log}/\nVOLUME /var/www\nEXPOSE 22/tcp 80/tcp 443/tcp 3306/tcp 9000/tcp\nCMD [\"/bin/bash\", \"/usr/bin/startup_container\"]\n","injectedSmells":[],"originalDockerfileHash":"f4bedda472f65cace6ccafd884e43452","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER Alexander Schneider \"alexander.schneider@jankowfsky.com\"\n#   Upgrade system\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV HOME=\"/root\"\nRUN apt-get update\n#   Setup system and install tools\nRUN echo \"initscripts hold\" | dpkg --set-selections\nRUN apt-get install libreadline-gplv2-dev libfreetype6 apt-utils dialog postfix -qqy\nRUN echo \"Europe/Berlin\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\nRUN echo 'alias ll=\"ls -lah --color=auto\"' >> /etc/bash.bashrc\nRUN apt-get install passwd supervisor git-core sudo unzip wget curl libfile-slurp-perl libmysql-diff-perl vim net-tools software-properties-common python-software-properties -qqy\n#   Set locale\nRUN apt-get install locales -qqy\nRUN locale-gen --purge de_DE de_DE.UTF-8\nRUN locale-gen --purge en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nENV LC_ALL=\"en_US.UTF-8\"\n#   Setup ssh\nRUN apt-get install openssh-server -qqy\nRUN mkdir -p /var/run/sshd\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config\nRUN sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config\nRUN sed -ri 's/PermitRootLogin without-password/PermitRootLogin yes/g' /etc/ssh/sshd_config\nRUN echo 'root:root' | chpasswd\n#   Generate a host key before packing.\nRUN service ssh start ; service ssh stop\n#   Create SSL cert\nRUN mkdir /root/ssl ; openssl genrsa -out /root/ssl/local.key 1024 ; openssl req -new -key /root/ssl/local.key -out /root/ssl/local.csr -subj \"/C=DE/ST=BW/L=FREIBURG/O=Jankowfsky AG/OU=Development/CN=localhost\" ; openssl x509 -req -days 365 -in /root/ssl/local.csr -signkey /root/ssl/local.key -out /root/ssl/local.crt\n#   Apache\nRUN apt-get install apache2-mpm-prefork apache2-utils -qqy\nRUN a2enmod rewrite\nRUN a2enmod proxy_fcgi\nRUN a2enmod ssl\nRUN mkdir /etc/apache2/conf.d/\nRUN echo \"ServerName localhost\" | tee /etc/apache2/conf.d/fqdn\nRUN echo \"ServerName localhost\" >> /etc/apache2/apache2.conf\nADD conf/apache/000-default /etc/apache2/sites-enabled/000-default.conf\n#   Mysql\nRUN apt-get install mysql-server mysql-common mysql-client -qqy\nRUN ln -s /run/mysqld/mysqld.sock /tmp/mysql.sock\n#   Add latest php version\nRUN add-apt-repository ppa:ondrej/apache2\nRUN add-apt-repository ppa:ondrej/php \\\n && apt-get update\n#   PHP\nRUN apt-get install php5-fpm php5 php5-cli php5-mysql php5-curl php5-dev php5-gd php-pear php-apc php5-xdebug libapache2-mod-php5 -qqy\n#   PhpMyAdmin\nRUN mysqld &; service apache2 start ; sleep 5 ; printf ynnn1n | apt-get install phpmyadmin -qqy ; sleep 15 ; mysqladmin -u root shutdown\nRUN sed -i \"0,/\\/\\/ $cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\] = TRUE;/{s#// $cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\] = TRUE;#$cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\] = TRUE;#g}\" /etc/phpmyadmin/config.inc.php\nRUN sed -i \"/^[ ]*$cfg\\['Servers'\\]\\[$i\\]\\['host'\\]/a$cfg\\['Servers'\\]\\[$i\\]\\['hide_db'\\] = '(information_schema|performance_schema|phpmyadmin|mysql|test)';\" /etc/phpmyadmin/config.inc.php\nRUN ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-enabled\n#   Install ant builder\nRUN apt-get install ant -qqy\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   Install phpunit\nRUN composer global require \"phpunit/phpunit=4.1.*\" ; ln -s /root/.composer/vendor/bin/phpunit /usr/bin/phpunit\n#   Install ruby\nRUN apt-get install ruby -y\n#   Install sass\nRUN gem install sass\n#   Nodejs + NPM\nRUN add-apt-repository ppa:chris-lea/node.js \\\n && apt-get update\nRUN apt-get install nodejs -y\n#   Install bower\nRUN npm install bower -g\n#   Install grunt\nRUN npm install grunt-cli -g\n#   Install glub\nRUN npm install gulp -g\n#   Install phpbrew\nRUN apt-get update\nRUN apt-get build-dep -y --fix-missing php5\nRUN apt-get install php5 php5-dev php-pear autoconf automake curl build-essential libxslt1-dev re2c libxml2 libxml2-dev php5-cli bison libbz2-dev libreadline-dev libfreetype6 libfreetype6-dev libpng12-0 libpng12-dev libjpeg-dev libjpeg8-dev libjpeg8 libgd-dev libgd3 libxpm4 libssl-dev openssl gettext libgettextpo-dev libgettextpo0 libicu-dev libmhash2 libmhash-dev libmcrypt4 libmcrypt-dev libpcre3-dev libpcre++-dev -y\nRUN wget http://launchpadlibrarian.net/121520545/libbison-dev_2.6.2.dfsg-1_amd64.deb \\\n && dpkg -i libbison-dev_2.6.2.dfsg-1_amd64.deb\nRUN wget http://launchpadlibrarian.net/121520544/bison_2.6.2.dfsg-1_amd64.deb \\\n && dpkg -i bison_2.6.2.dfsg-1_amd64.deb\nADD conf/php/phpbrew /usr/bin/phpbrew\nRUN chmod +x /usr/bin/phpbrew\nADD conf/php/pbconfig.yaml /tmp/config.yaml\nRUN phpbrew init --config=/tmp/config.yaml\nRUN echo \"source /root/.phpbrew/bashrc\" >> /root/.bashrc\nRUN ln -s /.phpbrew /root/.phpbrew\nADD conf/php/install_php /usr/bin/install_php\nRUN chmod +x /usr/bin/install_php\n#   Install tideways daemon\nADD conf/php/tideways-daemon /root/tideways-daemon\nRUN chmod +x /root/tideways-daemon/install.sh\nRUN /root/tideways-daemon/install.sh\n#   Install different php version\nADD conf/php/modules /root/.phpbrew/modules\n#   php 5.6\nRUN install_php 5.6.4\n#   php 5.5\nRUN install_php 5.5.20\n#   php 5.4\nRUN install_php 5.4.40\n#   php 5.3\nRUN install_php 5.3.29\n#   Add supervisor config\nADD conf/supervisor/startup.conf /etc/supervisor/conf.d/startup.conf\nENV PHP_VERSION=\"5.6.4\"\nENV PHP_XDEBUG=\"0\"\nENV SQL_DIR=\"/var/www/_sql\"\nADD conf/scripts/startup.sh /usr/bin/startup_container\nRUN chmod +x /usr/bin/startup_container\n#   Cleanup\nRUN apt-get clean -y ; apt-get autoclean -y ; apt-get autoremove -y ; rm -rf /var/lib/{apt,dpkg,cache,log}/\nVOLUME /var/www\nEXPOSE 22/tcp 80/tcp 443/tcp 3306/tcp 9000/tcp\nCMD [\"/bin/bash\", \"/usr/bin/startup_container\"]\n","originalDockerfileUglifiedHash":"84c17f73723ab595b444d828e224458e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/65befb7cbd0ab29e40718af8c477191f057e7cb5.dockerfile"}