{"seed":1054848518,"processedDockerfileHash":"605a14c25811ebebc6857406e8a85453","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG DOCKER_IMG=laurmarinovici/tesp\nARG DOCKER_IMG_VERSION=:base\nFROM ${DOCKER_IMG}${DOCKER_IMG_VERSION} AS tesp-helics-builder\n#   -----------------------------------------------------\n#   Environment variables giving the location where TESP\n#   related software will be installed on the Docker container.\n#   -----------------------------------------------------\nENV TESP=\"${WORK_DIR}/tesp-platform\"\nENV HELICS_INSTALL=\"${TESP}/HELICSInstall\"\nENV GLD_INSTALL=\"${TESP}/GridLABDInstall\"\nENV NS3_INSTALL=\"${TESP}/ns3Install\"\n#   ----------------------------------------------------\n#   Because I want to use the software versions I already have\n#   installed on the current VM, I am going to use\n#   directly the downloads and repositories I have, letting aside\n#   the commands that are performing the actual downloads, and \n#   repository cloning.\n#   Hence, from the context of the folder where I have all my downloads\n#   and clones, I only add the needed ones.\n#   I am running the image building script from inside the folder where\n#   all repositories have been already cloned in the source folders below.\n#   --------------------------------------------------------------\n#   HELICS branch = develop\nENV HELICS_SOURCE=\"HELICS-src\"\n#   -------------------------------\n#   GridLAB-D branch = feature/1146\nENV GLD_SOURCE=\"gridlab-d\"\n#   -------------------------------\n#   ns3 branch = ns-3-dev\n#   with helics-ns3 and fnss-ns3\nENV NS3_SOURCE=\"ns-3-dev\"\n#   The folder on the image where all source files will be copied to,\n#   so that installation can proceed.\nENV SOURCE_DIR=\"${WORK_DIR}/sources/\"\n#   --------------------------------------------------------------\n#   Environment variables needed for the package installation\n#   --------------------------------------------------------------\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:${HELICS_INSTALL}/lib\"\nENV HELICS_LIBRARY=\"${HELICS_INSTALL}/lib\"\nENV HELICS_INCLUDE_DIR=\"${HELICS_INSTALL}/include\"\nENV PATH=\"${PATH}:${HELICS_INSTALL}/bin:${GLD_INSTALL}/bin\"\nENV GLPATH=\"${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd\"\n#   default values\nENV HELICS_LOG_FILE=\"no\"\nENV HELICS_LOG_STDOUT=\"no\"\nENV HELICS_LOG_TRACE=\"no\"\nENV HELICS_LOG_LEVEL=\"DEBUG4\"\n#   ------------------------------------------------------------------\n#   Adding the host source folders to the Docker image source folders\n#   ------------------------------------------------------------------\nCOPY --chown=tesp-user:tesp-user ./ ${SOURCE_DIR}\nRUN mkdir -p ${SOURCE_DIR} \\\n && mkdir -p ${TESP} \\\n && cd ${SOURCE_DIR}${HELICS_SOURCE} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=${HELICS_INSTALL} -DBUILD_PYTHON_INTERFACE=ON -DCMAKE_CXX_FLAGS=\"-O2\" -DCMAKE_C_FLAGS=\"-O2\" ../ \\\n && make -j 2 \\\n && make install \\\n && /bin/rm -r ${SOURCE_DIR}${HELICS_SOURCE} \\\n && export PYTHONPATH=${HELICS_INSTALL}/python:$PYTHONPATH \\\n && cd ${SOURCE_DIR}${GLD_SOURCE} \\\n && autoreconf -isf \\\n && ./configure --prefix=${GLD_INSTALL} --with-helics=${HELICS_INSTALL} --enable-silent-rules 'CPP=gcc -E' 'CXXPP=g++ -E' 'CC=gcc' 'CXX=g++' 'CFLAGS=-w -O3 -fno-inline-functions' 'CXXFLAGS=-w -O3 -fno-inline-functions -std=c++14' 'LDFLAGS=-w -O3' \\\n && make \\\n && make install \\\n && /bin/rm -r ${SOURCE_DIR}${GLD_SOURCE} \\\n && cd ${SOURCE_DIR}${NS3_SOURCE} \\\n && ./waf configure --disable-werror --with-helics=${HELICS_INSTALL} --prefix=${NS3_INSTALL} \\\n && ./waf install\nFROM ${DOCKER_IMG}${DOCKER_IMG_VERSION} AS tesp-helics-production\n#   -----------------------------------------------------\n#   Environment variables giving the location where TESP\n#   related software will be installed on the Docker container.\n#   -----------------------------------------------------\nENV TESP=\"${WORK_DIR}/tesp-platform\"\nENV HELICS_INSTALL=\"${TESP}/HELICSInstall\"\nENV GLD_INSTALL=\"${TESP}/GridLABDInstall\"\nENV NS3_INSTALL=\"${TESP}/ns3Install\"\n#   --------------------------------------------------------------\n#   Environment variables needed for the package installation\n#   --------------------------------------------------------------\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:${HELICS_INSTALL}/lib\"\nENV HELICS_LIBRARY=\"${HELICS_INSTALL}/lib\"\nENV HELICS_INCLUDE_DIR=\"${HELICS_INSTALL}/include\"\nENV PATH=\"${PATH}:${HELICS_INSTALL}/bin:${GLD_INSTALL}/bin\"\nENV GLPATH=\"${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd\"\nENV PYTHONPATH=\"${HELICS_INSTALL}/python:$PYTHONPATH\"\nCOPY --chown=tesp-user --from=tesp-helics-builder ${WORK_DIR} ${WORK_DIR}\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG DOCKER_IMG=laurmarinovici/tesp\nARG DOCKER_IMG_VERSION=:base\nFROM ${DOCKER_IMG}${DOCKER_IMG_VERSION} AS tesp-helics-builder\n#  -----------------------------------------------------\n#  Environment variables giving the location where TESP\n#  related software will be installed on the Docker container.\n#  -----------------------------------------------------\nENV TESP=\"${WORK_DIR}/tesp-platform\"\nENV HELICS_INSTALL=\"${TESP}/HELICSInstall\"\nENV GLD_INSTALL=\"${TESP}/GridLABDInstall\"\nENV NS3_INSTALL=\"${TESP}/ns3Install\"\n#  ----------------------------------------------------\n#  Because I want to use the software versions I already have\n#  installed on the current VM, I am going to use\n#  directly the downloads and repositories I have, letting aside\n#  the commands that are performing the actual downloads, and \n#  repository cloning.\n#  Hence, from the context of the folder where I have all my downloads\n#  and clones, I only add the needed ones.\n#  I am running the image building script from inside the folder where\n#  all repositories have been already cloned in the source folders below.\n#  --------------------------------------------------------------\n#  HELICS branch = develop\nENV HELICS_SOURCE=\"HELICS-src\"\n#  -------------------------------\n#  GridLAB-D branch = feature/1146\nENV GLD_SOURCE=\"gridlab-d\"\n#  -------------------------------\n#  ns3 branch = ns-3-dev\n#  with helics-ns3 and fnss-ns3\nENV NS3_SOURCE=\"ns-3-dev\"\n#  The folder on the image where all source files will be copied to,\n#  so that installation can proceed.\nENV SOURCE_DIR=\"${WORK_DIR}/sources/\"\n#  --------------------------------------------------------------\n#  Environment variables needed for the package installation\n#  --------------------------------------------------------------\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:${HELICS_INSTALL}/lib\"\nENV HELICS_LIBRARY=\"${HELICS_INSTALL}/lib\"\nENV HELICS_INCLUDE_DIR=\"${HELICS_INSTALL}/include\"\nENV PATH=\"${PATH}:${HELICS_INSTALL}/bin:${GLD_INSTALL}/bin\"\nENV GLPATH=\"${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd\"\n#  default values\nENV HELICS_LOG_FILE=\"no\"\nENV HELICS_LOG_STDOUT=\"no\"\nENV HELICS_LOG_TRACE=\"no\"\nENV HELICS_LOG_LEVEL=\"DEBUG4\"\n#  ------------------------------------------------------------------\n#  Adding the host source folders to the Docker image source folders\n#  ------------------------------------------------------------------\nCOPY --chown=tesp-user:tesp-user ./ ${SOURCE_DIR}\nRUN mkdir -p ${SOURCE_DIR} \\\n && mkdir -p ${TESP} \\\n && cd ${SOURCE_DIR}${HELICS_SOURCE} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=${HELICS_INSTALL} -DBUILD_PYTHON_INTERFACE=ON -DCMAKE_CXX_FLAGS=\"-O2\" -DCMAKE_C_FLAGS=\"-O2\" ../ \\\n && make -j 2 \\\n && make install \\\n && /bin/rm -r ${SOURCE_DIR}${HELICS_SOURCE} \\\n && export PYTHONPATH=${HELICS_INSTALL}/python:$PYTHONPATH \\\n && cd ${SOURCE_DIR}${GLD_SOURCE} \\\n && autoreconf -isf \\\n && ./configure --prefix=${GLD_INSTALL} --with-helics=${HELICS_INSTALL} --enable-silent-rules 'CPP=gcc -E' 'CXXPP=g++ -E' 'CC=gcc' 'CXX=g++' 'CFLAGS=-w -O3 -fno-inline-functions' 'CXXFLAGS=-w -O3 -fno-inline-functions -std=c++14' 'LDFLAGS=-w -O3' \\\n && make \\\n && make install \\\n && /bin/rm -r ${SOURCE_DIR}${GLD_SOURCE} \\\n && cd ${SOURCE_DIR}${NS3_SOURCE} \\\n && ./waf configure --disable-werror --with-helics=${HELICS_INSTALL} --prefix=${NS3_INSTALL} \\\n && ./waf install\nFROM ${DOCKER_IMG}${DOCKER_IMG_VERSION} AS tesp-helics-production\n#  -----------------------------------------------------\n#  Environment variables giving the location where TESP\n#  related software will be installed on the Docker container.\n#  -----------------------------------------------------\nENV TESP=\"${WORK_DIR}/tesp-platform\"\nENV HELICS_INSTALL=\"${TESP}/HELICSInstall\"\nENV GLD_INSTALL=\"${TESP}/GridLABDInstall\"\nENV NS3_INSTALL=\"${TESP}/ns3Install\"\n#  --------------------------------------------------------------\n#  Environment variables needed for the package installation\n#  --------------------------------------------------------------\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:${HELICS_INSTALL}/lib\"\nENV HELICS_LIBRARY=\"${HELICS_INSTALL}/lib\"\nENV HELICS_INCLUDE_DIR=\"${HELICS_INSTALL}/include\"\nENV PATH=\"${PATH}:${HELICS_INSTALL}/bin:${GLD_INSTALL}/bin\"\nENV GLPATH=\"${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd\"\nENV PYTHONPATH=\"${HELICS_INSTALL}/python:$PYTHONPATH\"\nCOPY --chown=tesp-user --from=tesp-helics-builder ${WORK_DIR} ${WORK_DIR}\n","injectedSmells":[],"originalDockerfileHash":"d8bdf0cf23eb315f6f63da863edfb606","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG DOCKER_IMG=laurmarinovici/tesp\nARG DOCKER_IMG_VERSION=:base\nFROM ${DOCKER_IMG}${DOCKER_IMG_VERSION} AS tesp-helics-builder\n#   -----------------------------------------------------\n#   Environment variables giving the location where TESP\n#   related software will be installed on the Docker container.\n#   -----------------------------------------------------\nENV TESP=\"${WORK_DIR}/tesp-platform\"\nENV HELICS_INSTALL=\"${TESP}/HELICSInstall\"\nENV GLD_INSTALL=\"${TESP}/GridLABDInstall\"\nENV NS3_INSTALL=\"${TESP}/ns3Install\"\n#   ----------------------------------------------------\n#   Because I want to use the software versions I already have\n#   installed on the current VM, I am going to use\n#   directly the downloads and repositories I have, letting aside\n#   the commands that are performing the actual downloads, and \n#   repository cloning.\n#   Hence, from the context of the folder where I have all my downloads\n#   and clones, I only add the needed ones.\n#   I am running the image building script from inside the folder where\n#   all repositories have been already cloned in the source folders below.\n#   --------------------------------------------------------------\n#   HELICS branch = develop\nENV HELICS_SOURCE=\"HELICS-src\"\n#   -------------------------------\n#   GridLAB-D branch = feature/1146\nENV GLD_SOURCE=\"gridlab-d\"\n#   -------------------------------\n#   ns3 branch = ns-3-dev\n#   with helics-ns3 and fnss-ns3\nENV NS3_SOURCE=\"ns-3-dev\"\n#   The folder on the image where all source files will be copied to,\n#   so that installation can proceed.\nENV SOURCE_DIR=\"${WORK_DIR}/sources/\"\n#   --------------------------------------------------------------\n#   Environment variables needed for the package installation\n#   --------------------------------------------------------------\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:${HELICS_INSTALL}/lib\"\nENV HELICS_LIBRARY=\"${HELICS_INSTALL}/lib\"\nENV HELICS_INCLUDE_DIR=\"${HELICS_INSTALL}/include\"\nENV PATH=\"${PATH}:${HELICS_INSTALL}/bin:${GLD_INSTALL}/bin\"\nENV GLPATH=\"${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd\"\n#   default values\nENV HELICS_LOG_FILE=\"no\"\nENV HELICS_LOG_STDOUT=\"no\"\nENV HELICS_LOG_TRACE=\"no\"\nENV HELICS_LOG_LEVEL=\"DEBUG4\"\n#   ------------------------------------------------------------------\n#   Adding the host source folders to the Docker image source folders\n#   ------------------------------------------------------------------\nCOPY --chown=tesp-user:tesp-user ./ ${SOURCE_DIR}\nRUN mkdir -p ${SOURCE_DIR} \\\n && mkdir -p ${TESP} \\\n && cd ${SOURCE_DIR}${HELICS_SOURCE} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=${HELICS_INSTALL} -DBUILD_PYTHON_INTERFACE=ON -DCMAKE_CXX_FLAGS=\"-O2\" -DCMAKE_C_FLAGS=\"-O2\" ../ \\\n && make -j 2 \\\n && make install \\\n && /bin/rm -r ${SOURCE_DIR}${HELICS_SOURCE} \\\n && export PYTHONPATH=${HELICS_INSTALL}/python:$PYTHONPATH \\\n && cd ${SOURCE_DIR}${GLD_SOURCE} \\\n && autoreconf -isf \\\n && ./configure --prefix=${GLD_INSTALL} --with-helics=${HELICS_INSTALL} --enable-silent-rules 'CPP=gcc -E' 'CXXPP=g++ -E' 'CC=gcc' 'CXX=g++' 'CFLAGS=-w -O3 -fno-inline-functions' 'CXXFLAGS=-w -O3 -fno-inline-functions -std=c++14' 'LDFLAGS=-w -O3' \\\n && make \\\n && make install \\\n && /bin/rm -r ${SOURCE_DIR}${GLD_SOURCE} \\\n && cd ${SOURCE_DIR}${NS3_SOURCE} \\\n && ./waf configure --disable-werror --with-helics=${HELICS_INSTALL} --prefix=${NS3_INSTALL} \\\n && ./waf install\nFROM ${DOCKER_IMG}${DOCKER_IMG_VERSION} AS tesp-helics-production\n#   -----------------------------------------------------\n#   Environment variables giving the location where TESP\n#   related software will be installed on the Docker container.\n#   -----------------------------------------------------\nENV TESP=\"${WORK_DIR}/tesp-platform\"\nENV HELICS_INSTALL=\"${TESP}/HELICSInstall\"\nENV GLD_INSTALL=\"${TESP}/GridLABDInstall\"\nENV NS3_INSTALL=\"${TESP}/ns3Install\"\n#   --------------------------------------------------------------\n#   Environment variables needed for the package installation\n#   --------------------------------------------------------------\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:${HELICS_INSTALL}/lib\"\nENV HELICS_LIBRARY=\"${HELICS_INSTALL}/lib\"\nENV HELICS_INCLUDE_DIR=\"${HELICS_INSTALL}/include\"\nENV PATH=\"${PATH}:${HELICS_INSTALL}/bin:${GLD_INSTALL}/bin\"\nENV GLPATH=\"${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd\"\nENV PYTHONPATH=\"${HELICS_INSTALL}/python:$PYTHONPATH\"\nCOPY --chown=tesp-user --from=tesp-helics-builder ${WORK_DIR} ${WORK_DIR}\n","originalDockerfileUglifiedHash":"3ffd16d561a774c865e233397dda2852","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e2887808add92167088157fa1c33696075394e38.dockerfile"}