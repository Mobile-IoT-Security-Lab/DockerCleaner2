{"seed":511605991,"processedDockerfileHash":"b095d98e325bce398ef1b169aa64c15e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:latest\nMAINTAINER boogy <theboogymaster@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.9ubuntu3 python2.7=2.7.18-13ubuntu2 python2.7-dev=2.7.18-13ubuntu2 python-dbg python-imaging python-pycryptopp python-pyside python-dev python-dev python-pip python-virtualenv virtualenvwrapper=4.8.4-4 python3=3.11.2-1 python3-pip=23.0.1+dfsg-1 python3-dev=3.11.2-1 libqt4-dev libxml2-dev=2.9.14+dfsg-1.1build2 libxslt1-dev=1.1.35-1 libgraphviz-dev=2.42.2-7build3 libjpeg8=8c-2ubuntu11 libjpeg62-dev=1:6b2-3.1 libfreetype6=2.12.1+dfsg-4 libfreetype6-dev=2.12.1+dfsg-4 apt-utils=2.6.0 default-jre=2:1.17-74 libboost-all-dev=1.74.0.3ubuntu7 git=1:2.39.2-1ubuntu1 sudo=1.9.13p1-1ubuntu2 p7zip=16.02+dfsg-8 autoconf=2.71-3 libssl-dev=3.0.8-1ubuntu1 libpcap-dev=1.10.3-1 libffi-dev=3.4.4-1 libqt4-dev graphviz-dev cmake=3.25.1-1 clang=1:15.0-56~exp2 llvm=1:15.0-56~exp2 nasm=2.16.01-1 tmux=3.3a-3 gdb=13.1-2ubuntu2 gdb-multiarch=13.1-2ubuntu2 gdbserver=13.1-2ubuntu2 foremost=1.5.7-11 ipython stow=2.3.1-1 virtualenvwrapper=4.8.4-4 ltrace=0.7.3-6.1ubuntu6 strace=5.19-0ubuntu1 socat=1.7.4.4-2 tcpdump=4.99.3-1ubuntu1 john=1.8.0-4ubuntu3 hydra=9.4-1 vim=2:9.0.1000-4ubuntu2 curl=7.88.1-7ubuntu1 wget=1.21.3-1ubuntu1 nmap=7.93+dfsg1-1 gcc-multilib=4:12.2.0-3ubuntu1 g++-multilib=4:12.2.0-3ubuntu1 netcat openssh-server=1:9.0p1-1ubuntu8 openssh-client=1:9.0p1-1ubuntu8 lsof=4.95.0-1 libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386=2.37-0ubuntu2 squashfs-tools=1:4.5.1-1 apktool=2.7.0+dfsg-4 libimage-exiftool-perl=12.56+dfsg-1 qemu qemu-user=1:7.2+dfsg-5ubuntu1 qemu-user-static=1:7.2+dfsg-5ubuntu1 -yq\n#  # super root password\nRUN /bin/echo -e \"toor\\ntoor\" | passwd root\n#  # setup a user\nRUN useradd -m -s /bin/bash ctf \\\n && usermod -aG sudo ctf \\\n && /bin/echo -e \"ctf\\nctf\" | passwd ctf \\\n && chmod 4750 /home/ctf \\\n && mkdir -p /home/ctf/tools \\\n && chown -R ctf: /home/ctf \\\n && mkdir -p /etc/sudoers.d \\\n && echo \"ctf ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/ctf \\\n && echo \"kernel.yama.ptrace_scope = 0\" > /etc/sysctl.d/10-ptrace.conf, \\\n && sysctl -p\n#  # clone my dotfiles\nRUN git clone https://github.com/boogy/dotfiles.git /home/ctf/dotfiles\n#  # Other python cool pip modules\nRUN pip2 install --upgrade pip \\\n && pip2 install --upgrade r2pipe \\\n && pip2 install --upgrade Pillow \\\n && pip2 install --upgrade distorm3 \\\n && pip2 install --upgrade pycrypto \\\n && pip2 install --upgrade git+https://github.com/hellman/xortool.git\n#  # Install Binjitsu\nRUN pip install git+https://github.com/Gallopsled/pwntools.git --upgrade\n#  # Install peda\nRUN git clone https://github.com/longld/peda.git /home/ctf/tools/peda \\\n && echo -en \"define load_peda\\n source /home/ctf/tools/peda/peda.py\\nend\\n\" >> /home/ctf/.gdbinit\n#  # Install pwndbg\nRUN git clone https://github.com/zachriggle/pwndbg /home/ctf/tools/pwndbg \\\n && echo -en \"\\ndefine load_pwndbg\\n source /home/ctf/tools/pwndbg/gdbinit.py\\nend\\n\" >> /home/ctf/.gdbinit \\\n && pip3 install pycparser\n#  # Install capstone\nRUN git clone https://github.com/aquynh/capstone /home/ctf/tools/capstone \\\n && cd /home/ctf/tools/capstone \\\n && ./make.sh \\\n && ./make.sh install \\\n && cd /home/ctf/tools/capstone/bindings/python \\\n && python3 setup.py install \\\n && python2 setup.py install\n#  # Install radare2\nRUN git clone https://github.com/radare/radare2 /home/ctf/tools/radare2 \\\n && cd /home/ctf/tools/radare2 \\\n && ./sys/install.sh\n#  # Install binwalk\nRUN git clone https://github.com/devttys0/binwalk /home/ctf/tools/binwalk \\\n && cd /home/ctf/tools/binwalk \\\n && python setup.py install\n#  # Uninstall capstone for python2\n#  RUN pip2 uninstall capstone -y \\\n#      && cd /home/ctf/tools/capstone/bindings/python \\\n#      && python3 setup.py install\n#  # Install american-fuzzy-lop\nRUN wget --quiet http://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz -O /home/ctf/tools/afl-latest.tgz \\\n && cd /home/ctf/tools/ \\\n && tar -xzvf afl-latest.tgz \\\n && rm afl-latest.tgz \\\n && (cd afl-* ;make ;(cd llvm_mode ;make ) ;make install )\n#  # Install angr\n#  RUN git clone https://github.com/angr/angr-dev /home/ctf/tools/angr-dev \\\n#      && cd /home/ctf/tools/angr-dev \\\n#      && ./setup.sh -i -e angr\nRUN pip2 install angr\n#   RUN git clone https://github.com/angr/angr-dev /home/ctf/tools/angr-dev \\\n#       && cd /home/ctf/tools/angr-dev \\\n#       && . /usr/local/bin/virtualenvwrapper.sh \\\n#       && mkvirtualenv angr \\\n#       && echo \"I know this is a bad idea.\"|./setup.sh -i \\\n#       && deactivate\n#       # && ./setup.sh -i -e angr\n#  # Install rp++\nRUN apt-get install --no-install-recommends clang-3.5 -yq \\\n && export CC=/usr/bin/clang-3.5 \\\n && export CXX=/usr/bin/clang++-3.5 \\\n && cd /home/ctf/tools \\\n && git clone https://github.com/0vercl0k/rp.git \\\n && cd rp \\\n && git checkout next \\\n && git submodule update --init --recursive \\\n && sed -i 's/find_package(Boost 1.59.0 COMPONENTS flyweight)/find_package(Boost)/g' CMakeLists.txt \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make \\\n && cp ../bin/rp-lin-x64 /usr/local/bin/\n#  # Install ROPGadget\nRUN git clone https://github.com/JonathanSalwan/ROPgadget /home/ctf/tools/ROPgadget \\\n && cd /home/ctf/tools/ROPgadget \\\n && python setup.py install\n#  # Install Z3 Prover\nRUN git clone https://github.com/Z3Prover/z3.git /home/ctf/tools/z3 \\\n && cd /home/ctf/tools/z3 \\\n && python scripts/mk_make.py --python \\\n && cd build \\\n && make install\n#  # Install keystone engine\nRUN git clone https://github.com/keystone-engine/keystone.git /home/ctf/tools/keystone \\\n && cd /home/ctf/tools/keystone \\\n && mkdir build \\\n && cd build \\\n && ../make-share.sh \\\n && make install \\\n && ldconfig \\\n && cd /home/ctf/tools/keystone/bindings/python \\\n && make install\n#  # Install manticore\n#  RUN git clone --depth 1 https://github.com/trailofbits/manticore.git \\\n#      && cd manticore \\\n#      && pip install --no-binary capstone .\nEXPOSE 22/tcp 1337/tcp 3002/tcp 3003/tcp 4000/tcp\nUSER ctf\nWORKDIR /home/ctf\nCMD [\"/bin/bash\", \"-i\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:latest\nMAINTAINER boogy <theboogymaster@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install build-essential python2.7 python2.7-dev python-dbg python-imaging python-pycryptopp python-pyside python-dev python-dev python-pip python-virtualenv virtualenvwrapper python3 python3-pip python3-dev libqt4-dev libxml2-dev libxslt1-dev libgraphviz-dev libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev apt-utils default-jre libboost-all-dev git sudo p7zip autoconf libssl-dev libpcap-dev libffi-dev libqt4-dev graphviz-dev cmake clang llvm nasm tmux gdb gdb-multiarch gdbserver foremost ipython stow virtualenvwrapper ltrace strace socat tcpdump john hydra vim curl wget nmap gcc-multilib g++-multilib netcat openssh-server openssh-client lsof libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 squashfs-tools apktool libimage-exiftool-perl qemu qemu-user qemu-user-static -yq\n# # super root password\nRUN /bin/echo -e \"toor\\ntoor\" | passwd root\n# # setup a user\nRUN useradd -m -s /bin/bash ctf \\\n && usermod -aG sudo ctf \\\n && /bin/echo -e \"ctf\\nctf\" | passwd ctf \\\n && chmod 4750 /home/ctf \\\n && mkdir -p /home/ctf/tools \\\n && chown -R ctf: /home/ctf \\\n && mkdir -p /etc/sudoers.d \\\n && echo \"ctf ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/ctf \\\n && echo \"kernel.yama.ptrace_scope = 0\" > /etc/sysctl.d/10-ptrace.conf, \\\n && sysctl -p\n# # clone my dotfiles\nRUN git clone https://github.com/boogy/dotfiles.git /home/ctf/dotfiles\n# # Other python cool pip modules\nRUN pip2 install --upgrade pip \\\n && pip2 install --upgrade r2pipe \\\n && pip2 install --upgrade Pillow \\\n && pip2 install --upgrade distorm3 \\\n && pip2 install --upgrade pycrypto \\\n && pip2 install --upgrade git+https://github.com/hellman/xortool.git\n# # Install Binjitsu\nRUN pip install git+https://github.com/Gallopsled/pwntools.git --upgrade\n# # Install peda\nRUN git clone https://github.com/longld/peda.git /home/ctf/tools/peda \\\n && echo -en \"define load_peda\\n source /home/ctf/tools/peda/peda.py\\nend\\n\" >> /home/ctf/.gdbinit\n# # Install pwndbg\nRUN git clone https://github.com/zachriggle/pwndbg /home/ctf/tools/pwndbg \\\n && echo -en \"\\ndefine load_pwndbg\\n source /home/ctf/tools/pwndbg/gdbinit.py\\nend\\n\" >> /home/ctf/.gdbinit \\\n && pip3 install pycparser\n# # Install capstone\nRUN git clone https://github.com/aquynh/capstone /home/ctf/tools/capstone \\\n && cd /home/ctf/tools/capstone \\\n && ./make.sh \\\n && ./make.sh install \\\n && cd /home/ctf/tools/capstone/bindings/python \\\n && python3 setup.py install \\\n && python2 setup.py install\n# # Install radare2\nRUN git clone https://github.com/radare/radare2 /home/ctf/tools/radare2 \\\n && cd /home/ctf/tools/radare2 \\\n && ./sys/install.sh\n# # Install binwalk\nRUN git clone https://github.com/devttys0/binwalk /home/ctf/tools/binwalk \\\n && cd /home/ctf/tools/binwalk \\\n && python setup.py install\n# # Uninstall capstone for python2\n# RUN pip2 uninstall capstone -y \\\n#     && cd /home/ctf/tools/capstone/bindings/python \\\n#     && python3 setup.py install\n# # Install american-fuzzy-lop\nRUN wget --quiet http://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz -O /home/ctf/tools/afl-latest.tgz \\\n && cd /home/ctf/tools/ \\\n && tar -xzvf afl-latest.tgz \\\n && rm afl-latest.tgz \\\n && (cd afl-* ;make ;(cd llvm_mode ;make ) ;make install )\n# # Install angr\n# RUN git clone https://github.com/angr/angr-dev /home/ctf/tools/angr-dev \\\n#     && cd /home/ctf/tools/angr-dev \\\n#     && ./setup.sh -i -e angr\nRUN pip2 install angr\n#  RUN git clone https://github.com/angr/angr-dev /home/ctf/tools/angr-dev \\\n#      && cd /home/ctf/tools/angr-dev \\\n#      && . /usr/local/bin/virtualenvwrapper.sh \\\n#      && mkvirtualenv angr \\\n#      && echo \"I know this is a bad idea.\"|./setup.sh -i \\\n#      && deactivate\n#      # && ./setup.sh -i -e angr\n# # Install rp++\nRUN apt-get install clang-3.5 -yq \\\n && export CC=/usr/bin/clang-3.5 \\\n && export CXX=/usr/bin/clang++-3.5 \\\n && cd /home/ctf/tools \\\n && git clone https://github.com/0vercl0k/rp.git \\\n && cd rp \\\n && git checkout next \\\n && git submodule update --init --recursive \\\n && sed -i 's/find_package(Boost 1.59.0 COMPONENTS flyweight)/find_package(Boost)/g' CMakeLists.txt \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make \\\n && cp ../bin/rp-lin-x64 /usr/local/bin/\n# # Install ROPGadget\nRUN git clone https://github.com/JonathanSalwan/ROPgadget /home/ctf/tools/ROPgadget \\\n && cd /home/ctf/tools/ROPgadget \\\n && python setup.py install\n# # Install Z3 Prover\nRUN git clone https://github.com/Z3Prover/z3.git /home/ctf/tools/z3 \\\n && cd /home/ctf/tools/z3 \\\n && python scripts/mk_make.py --python \\\n && cd build \\\n && make install\n# # Install keystone engine\nRUN git clone https://github.com/keystone-engine/keystone.git /home/ctf/tools/keystone \\\n && cd /home/ctf/tools/keystone \\\n && mkdir build \\\n && cd build \\\n && ../make-share.sh \\\n && make install \\\n && ldconfig \\\n && cd /home/ctf/tools/keystone/bindings/python \\\n && make install\n# # Install manticore\n# RUN git clone --depth 1 https://github.com/trailofbits/manticore.git \\\n#     && cd manticore \\\n#     && pip install --no-binary capstone .\nEXPOSE 22/tcp 1337/tcp 3002/tcp 3003/tcp 4000/tcp\nUSER ctf\nWORKDIR /home/ctf\nCMD [\"/bin/bash\", \"-i\"]\n","injectedSmells":[],"originalDockerfileHash":"05da75a9a788480de04330f61e7e7ce7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:latest\nMAINTAINER boogy <theboogymaster@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install build-essential python2.7 python2.7-dev python-dbg python-imaging python-pycryptopp python-pyside python-dev python-dev python-pip python-virtualenv virtualenvwrapper python3 python3-pip python3-dev libqt4-dev libxml2-dev libxslt1-dev libgraphviz-dev libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev apt-utils default-jre libboost-all-dev git sudo p7zip autoconf libssl-dev libpcap-dev libffi-dev libqt4-dev graphviz-dev cmake clang llvm nasm tmux gdb gdb-multiarch gdbserver foremost ipython stow virtualenvwrapper ltrace strace socat tcpdump john hydra vim curl wget nmap gcc-multilib g++-multilib netcat openssh-server openssh-client lsof libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 squashfs-tools apktool libimage-exiftool-perl qemu qemu-user qemu-user-static -yq\n#  # super root password\nRUN /bin/echo -e \"toor\\ntoor\" | passwd root\n#  # setup a user\nRUN useradd -m -s /bin/bash ctf \\\n && usermod -aG sudo ctf \\\n && /bin/echo -e \"ctf\\nctf\" | passwd ctf \\\n && chmod 4750 /home/ctf \\\n && mkdir -p /home/ctf/tools \\\n && chown -R ctf: /home/ctf \\\n && mkdir -p /etc/sudoers.d \\\n && echo \"ctf ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/ctf \\\n && echo \"kernel.yama.ptrace_scope = 0\" > /etc/sysctl.d/10-ptrace.conf, \\\n && sysctl -p\n#  # clone my dotfiles\nRUN git clone https://github.com/boogy/dotfiles.git /home/ctf/dotfiles\n#  # Other python cool pip modules\nRUN pip2 install --upgrade pip \\\n && pip2 install --upgrade r2pipe \\\n && pip2 install --upgrade Pillow \\\n && pip2 install --upgrade distorm3 \\\n && pip2 install --upgrade pycrypto \\\n && pip2 install --upgrade git+https://github.com/hellman/xortool.git\n#  # Install Binjitsu\nRUN pip install git+https://github.com/Gallopsled/pwntools.git --upgrade\n#  # Install peda\nRUN git clone https://github.com/longld/peda.git /home/ctf/tools/peda \\\n && echo -en \"define load_peda\\n source /home/ctf/tools/peda/peda.py\\nend\\n\" >> /home/ctf/.gdbinit\n#  # Install pwndbg\nRUN git clone https://github.com/zachriggle/pwndbg /home/ctf/tools/pwndbg \\\n && echo -en \"\\ndefine load_pwndbg\\n source /home/ctf/tools/pwndbg/gdbinit.py\\nend\\n\" >> /home/ctf/.gdbinit \\\n && pip3 install pycparser\n#  # Install capstone\nRUN git clone https://github.com/aquynh/capstone /home/ctf/tools/capstone \\\n && cd /home/ctf/tools/capstone \\\n && ./make.sh \\\n && ./make.sh install \\\n && cd /home/ctf/tools/capstone/bindings/python \\\n && python3 setup.py install \\\n && python2 setup.py install\n#  # Install radare2\nRUN git clone https://github.com/radare/radare2 /home/ctf/tools/radare2 \\\n && cd /home/ctf/tools/radare2 \\\n && ./sys/install.sh\n#  # Install binwalk\nRUN git clone https://github.com/devttys0/binwalk /home/ctf/tools/binwalk \\\n && cd /home/ctf/tools/binwalk \\\n && python setup.py install\n#  # Uninstall capstone for python2\n#  RUN pip2 uninstall capstone -y \\\n#      && cd /home/ctf/tools/capstone/bindings/python \\\n#      && python3 setup.py install\n#  # Install american-fuzzy-lop\nRUN wget --quiet http://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz -O /home/ctf/tools/afl-latest.tgz \\\n && cd /home/ctf/tools/ \\\n && tar -xzvf afl-latest.tgz \\\n && rm afl-latest.tgz \\\n && (cd afl-* ;make ;(cd llvm_mode ;make ) ;make install )\n#  # Install angr\n#  RUN git clone https://github.com/angr/angr-dev /home/ctf/tools/angr-dev \\\n#      && cd /home/ctf/tools/angr-dev \\\n#      && ./setup.sh -i -e angr\nRUN pip2 install angr\n#   RUN git clone https://github.com/angr/angr-dev /home/ctf/tools/angr-dev \\\n#       && cd /home/ctf/tools/angr-dev \\\n#       && . /usr/local/bin/virtualenvwrapper.sh \\\n#       && mkvirtualenv angr \\\n#       && echo \"I know this is a bad idea.\"|./setup.sh -i \\\n#       && deactivate\n#       # && ./setup.sh -i -e angr\n#  # Install rp++\nRUN apt-get install clang-3.5 -yq \\\n && export CC=/usr/bin/clang-3.5 \\\n && export CXX=/usr/bin/clang++-3.5 \\\n && cd /home/ctf/tools \\\n && git clone https://github.com/0vercl0k/rp.git \\\n && cd rp \\\n && git checkout next \\\n && git submodule update --init --recursive \\\n && sed -i 's/find_package(Boost 1.59.0 COMPONENTS flyweight)/find_package(Boost)/g' CMakeLists.txt \\\n && mkdir build \\\n && cd build \\\n && cmake ../ \\\n && make \\\n && cp ../bin/rp-lin-x64 /usr/local/bin/\n#  # Install ROPGadget\nRUN git clone https://github.com/JonathanSalwan/ROPgadget /home/ctf/tools/ROPgadget \\\n && cd /home/ctf/tools/ROPgadget \\\n && python setup.py install\n#  # Install Z3 Prover\nRUN git clone https://github.com/Z3Prover/z3.git /home/ctf/tools/z3 \\\n && cd /home/ctf/tools/z3 \\\n && python scripts/mk_make.py --python \\\n && cd build \\\n && make install\n#  # Install keystone engine\nRUN git clone https://github.com/keystone-engine/keystone.git /home/ctf/tools/keystone \\\n && cd /home/ctf/tools/keystone \\\n && mkdir build \\\n && cd build \\\n && ../make-share.sh \\\n && make install \\\n && ldconfig \\\n && cd /home/ctf/tools/keystone/bindings/python \\\n && make install\n#  # Install manticore\n#  RUN git clone --depth 1 https://github.com/trailofbits/manticore.git \\\n#      && cd manticore \\\n#      && pip install --no-binary capstone .\nEXPOSE 22/tcp 1337/tcp 3002/tcp 3003/tcp 4000/tcp\nUSER ctf\nWORKDIR /home/ctf\nCMD [\"/bin/bash\", \"-i\"]\n","originalDockerfileUglifiedHash":"789824537bb7eff4065f105718c6c56a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e93c29713031945302a3a3380ee90ed00ecf3cfd.dockerfile"}