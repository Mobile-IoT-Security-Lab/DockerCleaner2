{"seed":2166279191,"processedDockerfileHash":"a21d8f4f59917e61390663e3231f1f00","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ----------------------------------- #\n#   gdal-base image with full build deps\n#   github: perrygeo/docker-gdal-base\n#   docker: perrygeo/gdal-base\n#  ----------------------------------- #\nFROM python:3.6-slim-stretch AS builder\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends cmake build-essential wget ca-certificates unzip pkg-config zlib1g-dev libfreexl-dev libxml2-dev -y )\nWORKDIR /tmp\n#   using gdal master\nENV CPUS=\"4\"\nENV CURL_VERSION=\"7.61.1\"\nENV GDAL_VERSION=\"3.0.0\"\nENV GEOS_VERSION=\"3.7.2\"\nENV OPENJPEG_VERSION=\"2.3.1\"\nENV PROJ_VERSION=\"6.0.0\"\nENV SPATIALITE_VERSION=\"4.3.0a\"\nENV SQLITE_VERSION=\"3270200\"\nENV WEBP_VERSION=\"1.0.0\"\nENV ZSTD_VERSION=\"1.3.4\"\nRUN wget -q https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz\nRUN wget -q -O zstd-${ZSTD_VERSION}.tar.gz https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz\nRUN wget -q https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2\nRUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz\nRUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz\nRUN wget -q -O openjpeg-${OPENJPEG_VERSION}.tar.gz https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz\nRUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz\nRUN wget -q https://www.sqlite.org/2019/sqlite-autoconf-${SQLITE_VERSION}.tar.gz\n#             https://www.sqlite.org/2019/sqlite-autoconf-3270200.tar.gz\nRUN wget -q https://www.gaia-gis.it/gaia-sins/libspatialite-${SPATIALITE_VERSION}.tar.gz\nRUN tar xzf libwebp-${WEBP_VERSION}.tar.gz \\\n && cd libwebp-${WEBP_VERSION} \\\n && CFLAGS=\"-O2 -Wl,-S\" ./configure --enable-silent-rules \\\n && echo \"building WEBP ${WEBP_VERSION}...\" make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -zxf zstd-${ZSTD_VERSION}.tar.gz \\\n && cd zstd-${ZSTD_VERSION} \\\n && echo \"building ZSTD ${ZSTD_VERSION}...\" \\\n && make --quiet -j${CPUS} ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1 \\\n && make --quiet install ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1\nRUN tar -xjf geos-${GEOS_VERSION}.tar.bz2 \\\n && cd geos-${GEOS_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building geos ${GEOS_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzvf sqlite-autoconf-${SQLITE_VERSION}.tar.gz \\\n && cd sqlite-autoconf-${SQLITE_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building SQLITE ${SQLITE_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzf proj-${PROJ_VERSION}.tar.gz \\\n && cd proj-${PROJ_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building proj ${PROJ_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\n#   Doesn't appear to be updated for proj6, not worth holding up the show\n#   RUN tar -xzvf libspatialite-${SPATIALITE_VERSION}.tar.gz && cd libspatialite-${SPATIALITE_VERSION} \\\n#       && ./configure --prefix=/usr/local \\\n#       && echo \"building SPATIALITE ${SPATIALITE_VERSION}...\" \\\n#       && make --quiet -j${CPUS} && make --quiet install\nRUN tar -zxf openjpeg-${OPENJPEG_VERSION}.tar.gz \\\n && cd openjpeg-${OPENJPEG_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local \\\n && echo \"building openjpeg ${OPENJPEG_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzf curl-${CURL_VERSION}.tar.gz \\\n && cd curl-${CURL_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building CURL ${CURL_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzf gdal-${GDAL_VERSION}.tar.gz \\\n && cd gdal-${GDAL_VERSION} \\\n && ./configure --disable-debug --disable-static --prefix=/usr/local --with-curl=/usr/local/bin/curl-config --with-geos --with-geotiff=internal --with-hide-internal-symbols=yes --with-libtiff=internal --with-openjpeg --with-sqlite3 --with-spatialite --with-proj=/usr/local --with-rename-internal-libgeotiff-symbols=yes --with-rename-internal-libtiff-symbols=yes --with-threads=yes --with-webp=/usr/local --with-zstd=/usr/local \\\n && echo \"building GDAL ${GDAL_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN ldconfig\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ----------------------------------- #\n#  gdal-base image with full build deps\n#  github: perrygeo/docker-gdal-base\n#  docker: perrygeo/gdal-base\n# ----------------------------------- #\nFROM python:3.6-slim-stretch AS builder\nRUN apt-get update\nRUN apt-get install --no-install-recommends cmake build-essential wget ca-certificates unzip pkg-config zlib1g-dev libfreexl-dev libxml2-dev -y\nWORKDIR /tmp\n#  using gdal master\nENV CPUS=\"4\"\nENV CURL_VERSION=\"7.61.1\"\nENV GDAL_VERSION=\"3.0.0\"\nENV GEOS_VERSION=\"3.7.2\"\nENV OPENJPEG_VERSION=\"2.3.1\"\nENV PROJ_VERSION=\"6.0.0\"\nENV SPATIALITE_VERSION=\"4.3.0a\"\nENV SQLITE_VERSION=\"3270200\"\nENV WEBP_VERSION=\"1.0.0\"\nENV ZSTD_VERSION=\"1.3.4\"\nRUN wget -q https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz\nRUN wget -q -O zstd-${ZSTD_VERSION}.tar.gz https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz\nRUN wget -q https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2\nRUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz\nRUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz\nRUN wget -q -O openjpeg-${OPENJPEG_VERSION}.tar.gz https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz\nRUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz\nRUN wget -q https://www.sqlite.org/2019/sqlite-autoconf-${SQLITE_VERSION}.tar.gz\n#            https://www.sqlite.org/2019/sqlite-autoconf-3270200.tar.gz\nRUN wget -q https://www.gaia-gis.it/gaia-sins/libspatialite-${SPATIALITE_VERSION}.tar.gz\nRUN tar xzf libwebp-${WEBP_VERSION}.tar.gz \\\n && cd libwebp-${WEBP_VERSION} \\\n && CFLAGS=\"-O2 -Wl,-S\" ./configure --enable-silent-rules \\\n && echo \"building WEBP ${WEBP_VERSION}...\" make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -zxf zstd-${ZSTD_VERSION}.tar.gz \\\n && cd zstd-${ZSTD_VERSION} \\\n && echo \"building ZSTD ${ZSTD_VERSION}...\" \\\n && make --quiet -j${CPUS} ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1 \\\n && make --quiet install ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1\nRUN tar -xjf geos-${GEOS_VERSION}.tar.bz2 \\\n && cd geos-${GEOS_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building geos ${GEOS_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzvf sqlite-autoconf-${SQLITE_VERSION}.tar.gz \\\n && cd sqlite-autoconf-${SQLITE_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building SQLITE ${SQLITE_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzf proj-${PROJ_VERSION}.tar.gz \\\n && cd proj-${PROJ_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building proj ${PROJ_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\n#  Doesn't appear to be updated for proj6, not worth holding up the show\n#  RUN tar -xzvf libspatialite-${SPATIALITE_VERSION}.tar.gz && cd libspatialite-${SPATIALITE_VERSION} \\\n#      && ./configure --prefix=/usr/local \\\n#      && echo \"building SPATIALITE ${SPATIALITE_VERSION}...\" \\\n#      && make --quiet -j${CPUS} && make --quiet install\nRUN tar -zxf openjpeg-${OPENJPEG_VERSION}.tar.gz \\\n && cd openjpeg-${OPENJPEG_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local \\\n && echo \"building openjpeg ${OPENJPEG_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzf curl-${CURL_VERSION}.tar.gz \\\n && cd curl-${CURL_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building CURL ${CURL_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzf gdal-${GDAL_VERSION}.tar.gz \\\n && cd gdal-${GDAL_VERSION} \\\n && ./configure --disable-debug --disable-static --prefix=/usr/local --with-curl=/usr/local/bin/curl-config --with-geos --with-geotiff=internal --with-hide-internal-symbols=yes --with-libtiff=internal --with-openjpeg --with-sqlite3 --with-spatialite --with-proj=/usr/local --with-rename-internal-libgeotiff-symbols=yes --with-rename-internal-libtiff-symbols=yes --with-threads=yes --with-webp=/usr/local --with-zstd=/usr/local \\\n && echo \"building GDAL ${GDAL_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN ldconfig\n","injectedSmells":[],"originalDockerfileHash":"f930d57843c21d4f8500be95811ecc17","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ----------------------------------- #\n#   gdal-base image with full build deps\n#   github: perrygeo/docker-gdal-base\n#   docker: perrygeo/gdal-base\n#  ----------------------------------- #\nFROM python:3.6-slim-stretch AS builder\nRUN apt-get update\nRUN apt-get install --no-install-recommends cmake build-essential wget ca-certificates unzip pkg-config zlib1g-dev libfreexl-dev libxml2-dev -y\nWORKDIR /tmp\n#   using gdal master\nENV CPUS=\"4\"\nENV CURL_VERSION=\"7.61.1\"\nENV GDAL_VERSION=\"3.0.0\"\nENV GEOS_VERSION=\"3.7.2\"\nENV OPENJPEG_VERSION=\"2.3.1\"\nENV PROJ_VERSION=\"6.0.0\"\nENV SPATIALITE_VERSION=\"4.3.0a\"\nENV SQLITE_VERSION=\"3270200\"\nENV WEBP_VERSION=\"1.0.0\"\nENV ZSTD_VERSION=\"1.3.4\"\nRUN wget -q https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz\nRUN wget -q -O zstd-${ZSTD_VERSION}.tar.gz https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz\nRUN wget -q https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2\nRUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz\nRUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz\nRUN wget -q -O openjpeg-${OPENJPEG_VERSION}.tar.gz https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz\nRUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz\nRUN wget -q https://www.sqlite.org/2019/sqlite-autoconf-${SQLITE_VERSION}.tar.gz\n#             https://www.sqlite.org/2019/sqlite-autoconf-3270200.tar.gz\nRUN wget -q https://www.gaia-gis.it/gaia-sins/libspatialite-${SPATIALITE_VERSION}.tar.gz\nRUN tar xzf libwebp-${WEBP_VERSION}.tar.gz \\\n && cd libwebp-${WEBP_VERSION} \\\n && CFLAGS=\"-O2 -Wl,-S\" ./configure --enable-silent-rules \\\n && echo \"building WEBP ${WEBP_VERSION}...\" make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -zxf zstd-${ZSTD_VERSION}.tar.gz \\\n && cd zstd-${ZSTD_VERSION} \\\n && echo \"building ZSTD ${ZSTD_VERSION}...\" \\\n && make --quiet -j${CPUS} ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1 \\\n && make --quiet install ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1\nRUN tar -xjf geos-${GEOS_VERSION}.tar.bz2 \\\n && cd geos-${GEOS_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building geos ${GEOS_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzvf sqlite-autoconf-${SQLITE_VERSION}.tar.gz \\\n && cd sqlite-autoconf-${SQLITE_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building SQLITE ${SQLITE_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzf proj-${PROJ_VERSION}.tar.gz \\\n && cd proj-${PROJ_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building proj ${PROJ_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\n#   Doesn't appear to be updated for proj6, not worth holding up the show\n#   RUN tar -xzvf libspatialite-${SPATIALITE_VERSION}.tar.gz && cd libspatialite-${SPATIALITE_VERSION} \\\n#       && ./configure --prefix=/usr/local \\\n#       && echo \"building SPATIALITE ${SPATIALITE_VERSION}...\" \\\n#       && make --quiet -j${CPUS} && make --quiet install\nRUN tar -zxf openjpeg-${OPENJPEG_VERSION}.tar.gz \\\n && cd openjpeg-${OPENJPEG_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local \\\n && echo \"building openjpeg ${OPENJPEG_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzf curl-${CURL_VERSION}.tar.gz \\\n && cd curl-${CURL_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && echo \"building CURL ${CURL_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN tar -xzf gdal-${GDAL_VERSION}.tar.gz \\\n && cd gdal-${GDAL_VERSION} \\\n && ./configure --disable-debug --disable-static --prefix=/usr/local --with-curl=/usr/local/bin/curl-config --with-geos --with-geotiff=internal --with-hide-internal-symbols=yes --with-libtiff=internal --with-openjpeg --with-sqlite3 --with-spatialite --with-proj=/usr/local --with-rename-internal-libgeotiff-symbols=yes --with-rename-internal-libtiff-symbols=yes --with-threads=yes --with-webp=/usr/local --with-zstd=/usr/local \\\n && echo \"building GDAL ${GDAL_VERSION}...\" \\\n && make --quiet -j${CPUS} \\\n && make --quiet install\nRUN ldconfig\n","originalDockerfileUglifiedHash":"e025d5ce7ed5159821b891fcb85cbe26","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e3d10ed81ca8f661132cbc7d3f84d303e0056dc2.dockerfile"}