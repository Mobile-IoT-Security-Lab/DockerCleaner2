{"seed":2180361702,"processedDockerfileHash":"73cebf0336c0d1769d7abb42e60be2c2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2017 Google LLC All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   ForceUpdate 8 -- change here if you need to force a rebuild\nFROM debian:stretch\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.3 gnupg=2.1.18-8~deb9u4 curl=7.52.1-5+deb9u16 git=1:2.11.0-3+deb9u7 wget=1.18-5+deb9u3 psmisc=22.21-2.1+b2 rsync=3.1.2-1+deb9u3 make=4.1-9.1 python=2.7.13-2 bash-completion=1:2.1-4.3 zip=3.0-11+b1 nano=2.7.4-1 jq=1.5+dfsg-1.3 graphviz=2.38.0-17+deb9u1 gettext-base=0.19.8.1-2+deb9u1 plantuml=8039-1 -y \\\n && apt-get clean\n#   install go\nWORKDIR /usr/local\nENV GO_VERSION=\"1.12\"\nENV GOPATH=\"/go\"\nENV GO111MODULE=\"on\"\nRUN wget -q https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz \\\n && tar -xzf go${GO_VERSION}.linux-amd64.tar.gz \\\n && rm go${GO_VERSION}.linux-amd64.tar.gz \\\n && mkdir ${GOPATH}\n#   install gcloud + kubectl, because it's an easy way to test/dev against kubernetes.\nWORKDIR /opt\nRUN wget -q https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n && unzip -q google-cloud-sdk.zip \\\n && rm google-cloud-sdk.zip \\\n && /opt/google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/root/.bashrc\n#   update the path for both go and gcloud\nENV PATH=\"/usr/local/go/bin:/go/bin:/opt/google-cloud-sdk/bin:$PATH\"\n#   install go tooling for development, building and testing\nRUN go get -u golang.org/x/tools/cmd/goimports\n#   RUN gcloud components update\nRUN gcloud components update \\\n && gcloud components install app-engine-go\n#   overwrite kubectl as we want a specific version\nENV KUBECTL_VER=\"1.11.5\"\nRUN curl -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VER}/bin/linux/amd64/kubectl \\\n && chmod go+rx ./kubectl \\\n && mv ./kubectl /usr/local/bin/kubectl\nRUN echo \"source <(kubectl completion bash)\" >> /root/.bashrc\n#   install Helm package manager\nENV HELM_VER=\"2.11.0\"\nENV HELM_URL=\"https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VER}-linux-amd64.tar.gz\"\nRUN curl -L ${HELM_URL} > /tmp/helm.tar.gz \\\n && tar -zxvf /tmp/helm.tar.gz -C /tmp \\\n && mv /tmp/linux-amd64/helm /usr/local/bin/helm \\\n && chmod go+rx /usr/local/bin/helm \\\n && rm /tmp/helm.tar.gz \\\n && rm -rf /tmp/linux-amd64\nRUN echo \"source <(helm completion bash)\" >> /root/.bashrc\n#   install golang-ci linter\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $GOPATH/bin v1.16.0\n#   install the release branch of the code generator tools\nRUN mkdir -p /go/src \\\n && cd /go/src \\\n && mkdir -p k8s.io \\\n && cd k8s.io \\\n && git clone -b kubernetes-1.11.5 --depth=3 https://github.com/kubernetes/code-generator.git\n#\n#    \\ \\      / /__| |__  ___(_) |_ ___\n#     \\ \\ /\\ / / _ \\ '_ \\/ __| | __/ _ \\\n#      \\ V  V /  __/ |_) \\__ \\ | |_  __/\n#       \\_/\\_/ \\___|_.__/|___/_|\\__\\___|\n#\nENV HUGO_VER=\"0.55.2\"\nRUN mkdir /tmp/hugo \\\n && wget -q -O /tmp/hugo/hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v${HUGO_VER}/hugo_extended_${HUGO_VER}_Linux-64bit.tar.gz \\\n && tar -zxvf /tmp/hugo/hugo.tar.gz -C /tmp/hugo/ \\\n && mv /tmp/hugo/hugo /usr/local/bin/ \\\n && rm -r /tmp/hugo\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash - \\\n && apt-get install --no-install-recommends nodejs=4.8.2~dfsg-1 -y\n#   install API reference docs generator\nRUN mkdir -p /go/src/github.com/ahmetb \\\n && cd /go/src/github.com/ahmetb \\\n && git clone -b v0.1.1 https://github.com/ahmetb/gen-crd-api-reference-docs \\\n && cd ./gen-crd-api-reference-docs \\\n && go build\n#   html checker\nRUN mkdir /tmp/htmltest \\\n && wget -O /tmp/htmltest/htmltest.tar.gz https://github.com/wjdp/htmltest/releases/download/v0.10.1/htmltest_0.10.1_linux_amd64.tar.gz \\\n && tar -zxvf /tmp/htmltest/htmltest.tar.gz -C /tmp/htmltest \\\n && mv /tmp/htmltest/htmltest /usr/local/bin \\\n && rm -r /tmp/htmltest\n#   make sure we keep the path to go\nRUN echo \"export PATH=/usr/local/go/bin:/go/bin/:$PATH\" >> /root/.bashrc\n#   make nano the editor\nRUN echo \"export EDITOR=nano\" >> /root/.bashrc\n#   install terraform\nRUN wget -nv https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_386.zip \\\n && unzip ./terraform_0.11.13_linux_386.zip \\\n && mv terraform /usr/local/bin/\n#   code generation scripts\nCOPY *.sh /root/\nRUN chmod +x /root/*.sh\nWORKDIR /go\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2017 Google LLC All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  ForceUpdate 8 -- change here if you need to force a rebuild\nFROM debian:stretch\nRUN apt-get update \\\n && apt-get install build-essential gnupg curl git wget psmisc rsync make python bash-completion zip nano jq graphviz gettext-base plantuml -y \\\n && apt-get clean\n#  install go\nWORKDIR /usr/local\nENV GO_VERSION=\"1.12\"\nENV GOPATH=\"/go\"\nENV GO111MODULE=\"on\"\nRUN wget -q https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz \\\n && tar -xzf go${GO_VERSION}.linux-amd64.tar.gz \\\n && rm go${GO_VERSION}.linux-amd64.tar.gz \\\n && mkdir ${GOPATH}\n#  install gcloud + kubectl, because it's an easy way to test/dev against kubernetes.\nWORKDIR /opt\nRUN wget -q https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n && unzip -q google-cloud-sdk.zip \\\n && rm google-cloud-sdk.zip \\\n && /opt/google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/root/.bashrc\n#  update the path for both go and gcloud\nENV PATH=\"/usr/local/go/bin:/go/bin:/opt/google-cloud-sdk/bin:$PATH\"\n#  install go tooling for development, building and testing\nRUN go get -u golang.org/x/tools/cmd/goimports\n#  RUN gcloud components update\nRUN gcloud components update \\\n && gcloud components install app-engine-go\n#  overwrite kubectl as we want a specific version\nENV KUBECTL_VER=\"1.11.5\"\nRUN curl -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VER}/bin/linux/amd64/kubectl \\\n && chmod go+rx ./kubectl \\\n && mv ./kubectl /usr/local/bin/kubectl\nRUN echo \"source <(kubectl completion bash)\" >> /root/.bashrc\n#  install Helm package manager\nENV HELM_VER=\"2.11.0\"\nENV HELM_URL=\"https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VER}-linux-amd64.tar.gz\"\nRUN curl -L ${HELM_URL} > /tmp/helm.tar.gz \\\n && tar -zxvf /tmp/helm.tar.gz -C /tmp \\\n && mv /tmp/linux-amd64/helm /usr/local/bin/helm \\\n && chmod go+rx /usr/local/bin/helm \\\n && rm /tmp/helm.tar.gz \\\n && rm -rf /tmp/linux-amd64\nRUN echo \"source <(helm completion bash)\" >> /root/.bashrc\n#  install golang-ci linter\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $GOPATH/bin v1.16.0\n#  install the release branch of the code generator tools\nRUN mkdir -p /go/src \\\n && cd /go/src \\\n && mkdir -p k8s.io \\\n && cd k8s.io \\\n && git clone -b kubernetes-1.11.5 --depth=3 https://github.com/kubernetes/code-generator.git\n#\n#   \\ \\      / /__| |__  ___(_) |_ ___\n#    \\ \\ /\\ / / _ \\ '_ \\/ __| | __/ _ \\\n#     \\ V  V /  __/ |_) \\__ \\ | |_  __/\n#      \\_/\\_/ \\___|_.__/|___/_|\\__\\___|\n#\nENV HUGO_VER=\"0.55.2\"\nRUN mkdir /tmp/hugo \\\n && wget -q -O /tmp/hugo/hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v${HUGO_VER}/hugo_extended_${HUGO_VER}_Linux-64bit.tar.gz \\\n && tar -zxvf /tmp/hugo/hugo.tar.gz -C /tmp/hugo/ \\\n && mv /tmp/hugo/hugo /usr/local/bin/ \\\n && rm -r /tmp/hugo\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash - \\\n && apt-get install nodejs -y\n#  install API reference docs generator\nRUN mkdir -p /go/src/github.com/ahmetb \\\n && cd /go/src/github.com/ahmetb \\\n && git clone -b v0.1.1 https://github.com/ahmetb/gen-crd-api-reference-docs \\\n && cd ./gen-crd-api-reference-docs \\\n && go build\n#  html checker\nRUN mkdir /tmp/htmltest \\\n && wget -O /tmp/htmltest/htmltest.tar.gz https://github.com/wjdp/htmltest/releases/download/v0.10.1/htmltest_0.10.1_linux_amd64.tar.gz \\\n && tar -zxvf /tmp/htmltest/htmltest.tar.gz -C /tmp/htmltest \\\n && mv /tmp/htmltest/htmltest /usr/local/bin \\\n && rm -r /tmp/htmltest\n#  make sure we keep the path to go\nRUN echo \"export PATH=/usr/local/go/bin:/go/bin/:$PATH\" >> /root/.bashrc\n#  make nano the editor\nRUN echo \"export EDITOR=nano\" >> /root/.bashrc\n#  install terraform\nRUN wget -nv https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_386.zip \\\n && unzip ./terraform_0.11.13_linux_386.zip \\\n && mv terraform /usr/local/bin/\n#  code generation scripts\nCOPY *.sh /root/\nRUN chmod +x /root/*.sh\nWORKDIR /go\n","injectedSmells":[],"originalDockerfileHash":"361b248bc22b41e59f632d5f81f5ade6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2017 Google LLC All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   ForceUpdate 8 -- change here if you need to force a rebuild\nFROM debian:stretch\nRUN apt-get update \\\n && apt-get install build-essential gnupg curl git wget psmisc rsync make python bash-completion zip nano jq graphviz gettext-base plantuml -y \\\n && apt-get clean\n#   install go\nWORKDIR /usr/local\nENV GO_VERSION=\"1.12\"\nENV GOPATH=\"/go\"\nENV GO111MODULE=\"on\"\nRUN wget -q https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz \\\n && tar -xzf go${GO_VERSION}.linux-amd64.tar.gz \\\n && rm go${GO_VERSION}.linux-amd64.tar.gz \\\n && mkdir ${GOPATH}\n#   install gcloud + kubectl, because it's an easy way to test/dev against kubernetes.\nWORKDIR /opt\nRUN wget -q https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n && unzip -q google-cloud-sdk.zip \\\n && rm google-cloud-sdk.zip \\\n && /opt/google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/root/.bashrc\n#   update the path for both go and gcloud\nENV PATH=\"/usr/local/go/bin:/go/bin:/opt/google-cloud-sdk/bin:$PATH\"\n#   install go tooling for development, building and testing\nRUN go get -u golang.org/x/tools/cmd/goimports\n#   RUN gcloud components update\nRUN gcloud components update \\\n && gcloud components install app-engine-go\n#   overwrite kubectl as we want a specific version\nENV KUBECTL_VER=\"1.11.5\"\nRUN curl -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VER}/bin/linux/amd64/kubectl \\\n && chmod go+rx ./kubectl \\\n && mv ./kubectl /usr/local/bin/kubectl\nRUN echo \"source <(kubectl completion bash)\" >> /root/.bashrc\n#   install Helm package manager\nENV HELM_VER=\"2.11.0\"\nENV HELM_URL=\"https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VER}-linux-amd64.tar.gz\"\nRUN curl -L ${HELM_URL} > /tmp/helm.tar.gz \\\n && tar -zxvf /tmp/helm.tar.gz -C /tmp \\\n && mv /tmp/linux-amd64/helm /usr/local/bin/helm \\\n && chmod go+rx /usr/local/bin/helm \\\n && rm /tmp/helm.tar.gz \\\n && rm -rf /tmp/linux-amd64\nRUN echo \"source <(helm completion bash)\" >> /root/.bashrc\n#   install golang-ci linter\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $GOPATH/bin v1.16.0\n#   install the release branch of the code generator tools\nRUN mkdir -p /go/src \\\n && cd /go/src \\\n && mkdir -p k8s.io \\\n && cd k8s.io \\\n && git clone -b kubernetes-1.11.5 --depth=3 https://github.com/kubernetes/code-generator.git\n#\n#    \\ \\      / /__| |__  ___(_) |_ ___\n#     \\ \\ /\\ / / _ \\ '_ \\/ __| | __/ _ \\\n#      \\ V  V /  __/ |_) \\__ \\ | |_  __/\n#       \\_/\\_/ \\___|_.__/|___/_|\\__\\___|\n#\nENV HUGO_VER=\"0.55.2\"\nRUN mkdir /tmp/hugo \\\n && wget -q -O /tmp/hugo/hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v${HUGO_VER}/hugo_extended_${HUGO_VER}_Linux-64bit.tar.gz \\\n && tar -zxvf /tmp/hugo/hugo.tar.gz -C /tmp/hugo/ \\\n && mv /tmp/hugo/hugo /usr/local/bin/ \\\n && rm -r /tmp/hugo\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash - \\\n && apt-get install nodejs -y\n#   install API reference docs generator\nRUN mkdir -p /go/src/github.com/ahmetb \\\n && cd /go/src/github.com/ahmetb \\\n && git clone -b v0.1.1 https://github.com/ahmetb/gen-crd-api-reference-docs \\\n && cd ./gen-crd-api-reference-docs \\\n && go build\n#   html checker\nRUN mkdir /tmp/htmltest \\\n && wget -O /tmp/htmltest/htmltest.tar.gz https://github.com/wjdp/htmltest/releases/download/v0.10.1/htmltest_0.10.1_linux_amd64.tar.gz \\\n && tar -zxvf /tmp/htmltest/htmltest.tar.gz -C /tmp/htmltest \\\n && mv /tmp/htmltest/htmltest /usr/local/bin \\\n && rm -r /tmp/htmltest\n#   make sure we keep the path to go\nRUN echo \"export PATH=/usr/local/go/bin:/go/bin/:$PATH\" >> /root/.bashrc\n#   make nano the editor\nRUN echo \"export EDITOR=nano\" >> /root/.bashrc\n#   install terraform\nRUN wget -nv https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_386.zip \\\n && unzip ./terraform_0.11.13_linux_386.zip \\\n && mv terraform /usr/local/bin/\n#   code generation scripts\nCOPY *.sh /root/\nRUN chmod +x /root/*.sh\nWORKDIR /go\n","originalDockerfileUglifiedHash":"a4b67add6fe772ca44628d23adf621cd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a9169f1a174a6f097aa8afbc7e30675cc20773a3.dockerfile"}