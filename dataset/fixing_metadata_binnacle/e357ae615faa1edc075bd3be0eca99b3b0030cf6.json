{"seed":3205063352,"processedDockerfileHash":"fe6cad80c876886fc88914781587d872","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage\n#   Env variables\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Install dependencies and required requisites\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends software-properties-common=0.99.35 -y \\\n && add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable \\\n && add-apt-repository -y ppa:george-edison55/cmake-3.x \\\n && apt-get update -y\n#   All packages (Will install much faster)\nRUN apt-get install --no-install-recommends build-essential=12.9ubuntu3 cmake=3.25.1-1 gdal-bin=3.6.2+dfsg-1build1 git=1:2.39.2-1ubuntu1 libatlas-base-dev=3.10.3-13ubuntu1 libavcodec-dev=7:5.1.2-3ubuntu1 libavformat-dev=7:5.1.2-3ubuntu1 libboost-date-time-dev=1.74.0.3ubuntu7 libboost-filesystem-dev=1.74.0.3ubuntu7 libboost-iostreams-dev=1.74.0.3ubuntu7 libboost-log-dev=1.74.0.3ubuntu7 libboost-python-dev=1.74.0.3ubuntu7 libboost-regex-dev=1.74.0.3ubuntu7 libboost-thread-dev=1.74.0.3ubuntu7 libeigen3-dev=3.4.0-4 libflann-dev=1.9.2+dfsg-1 libgdal-dev=3.6.2+dfsg-1build1 libgeotiff-dev=1.7.1-2build1 libgoogle-glog-dev=0.6.0-2 libgtk2.0-dev=2.24.33-2ubuntu2 libjasper-dev libjpeg-dev=8c-2ubuntu11 libjsoncpp-dev=1.9.5-4 liblapack-dev=3.11.0-2 liblas-bin libpng-dev=1.6.39-2 libproj-dev=9.1.1-1build1 libsuitesparse-dev=1:5.12.0+dfsg-2 libswscale-dev=7:5.1.2-3ubuntu1 libtbb2 libtbb-dev=2021.8.0-1ubuntu2 libtiff-dev=4.5.0-4ubuntu1 libvtk6-dev libxext-dev=2:1.3.4-1build1 python-dev python-gdal python-matplotlib python-networkx python-pip python-pyproj python-software-properties python-wheel swig2.0 grass-core=8.2.1-1build1 -y\nRUN apt-get remove libdc1394-22-dev\nRUN pip install pip==23.1 --upgrade\nRUN pip install setuptools==67.6.1\nRUN pip install appsettings==0.8 exifread==3.0.0 gpxpy==1.5.0 loky==3.4.0 numpy==1.15.4 psutil==5.9.4 pyproj==3.5.0 PyYAML==3.13 repoze.lru==0.7 scipy==1.2.1 shapely==2.0.1 xmltodict==0.13.0 rasterio==1.3.6 attrs==19.1.0 pyodm==1.5.2b1 Pillow==9.5.0 -U\nRUN pip install cryptography==40.0.2 --upgrade \\\n && python -m easy_install --upgrade pyOpenSSL\nENV PYTHONPATH=\"$PYTHONPATH:/code/SuperBuild/install/lib/python2.7/dist-packages\"\nENV PYTHONPATH=\"$PYTHONPATH:/code/SuperBuild/src/opensfm\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/code/SuperBuild/install/lib\"\n#   Prepare directories\nRUN mkdir /code\nWORKDIR /code\n#   Copy repository files\nCOPY CMakeLists.txt /code/CMakeLists.txt\nCOPY configure.sh /code/configure.sh\nCOPY /modules/ /code/modules/\nCOPY /opendm/ /code/opendm/\nCOPY run.py /code/run.py\nCOPY run.sh /code/run.sh\nCOPY /stages/ /code/stages/\nCOPY /SuperBuild/cmake/ /code/SuperBuild/cmake/\nCOPY /SuperBuild/CMakeLists.txt /code/SuperBuild/CMakeLists.txt\nCOPY docker.settings.yaml /code/settings.yaml\nCOPY VERSION /code/VERSION\n#   Compile code in SuperBuild and root directories\nRUN cd SuperBuild \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j$( nproc ;) \\\n && cd ../.. \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j$( nproc ;)\n#   Cleanup APT\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Clean Superbuild\nRUN rm -rf /code/SuperBuild/build/opencv /code/SuperBuild/download /code/SuperBuild/src/ceres /code/SuperBuild/src/mvstexturing /code/SuperBuild/src/opencv /code/SuperBuild/src/opengv /code/SuperBuild/src/pcl /code/SuperBuild/src/pdal\n#   Entry point\nENTRYPOINT [\"python\", \"/code/run.py\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage\n#  Env variables\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# Install dependencies and required requisites\nRUN apt-get update -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable \\\n && add-apt-repository -y ppa:george-edison55/cmake-3.x \\\n && apt-get update -y\n#  All packages (Will install much faster)\nRUN apt-get install --no-install-recommends build-essential cmake gdal-bin git libatlas-base-dev libavcodec-dev libavformat-dev libboost-date-time-dev libboost-filesystem-dev libboost-iostreams-dev libboost-log-dev libboost-python-dev libboost-regex-dev libboost-thread-dev libeigen3-dev libflann-dev libgdal-dev libgeotiff-dev libgoogle-glog-dev libgtk2.0-dev libjasper-dev libjpeg-dev libjsoncpp-dev liblapack-dev liblas-bin libpng-dev libproj-dev libsuitesparse-dev libswscale-dev libtbb2 libtbb-dev libtiff-dev libvtk6-dev libxext-dev python-dev python-gdal python-matplotlib python-networkx python-pip python-pyproj python-software-properties python-wheel swig2.0 grass-core -y\nRUN apt-get remove libdc1394-22-dev\nRUN pip install pip --upgrade\nRUN pip install setuptools\nRUN pip install appsettings exifread gpxpy loky numpy==1.15.4 psutil pyproj PyYAML==3.13 repoze.lru scipy==1.2.1 shapely xmltodict rasterio attrs==19.1.0 pyodm==1.5.2b1 Pillow -U\nRUN pip install cryptography --upgrade \\\n && python -m easy_install --upgrade pyOpenSSL\nENV PYTHONPATH=\"$PYTHONPATH:/code/SuperBuild/install/lib/python2.7/dist-packages\"\nENV PYTHONPATH=\"$PYTHONPATH:/code/SuperBuild/src/opensfm\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/code/SuperBuild/install/lib\"\n#  Prepare directories\nRUN mkdir /code\nWORKDIR /code\n#  Copy repository files\nCOPY CMakeLists.txt /code/CMakeLists.txt\nCOPY configure.sh /code/configure.sh\nCOPY /modules/ /code/modules/\nCOPY /opendm/ /code/opendm/\nCOPY run.py /code/run.py\nCOPY run.sh /code/run.sh\nCOPY /stages/ /code/stages/\nCOPY /SuperBuild/cmake/ /code/SuperBuild/cmake/\nCOPY /SuperBuild/CMakeLists.txt /code/SuperBuild/CMakeLists.txt\nCOPY docker.settings.yaml /code/settings.yaml\nCOPY VERSION /code/VERSION\n#  Compile code in SuperBuild and root directories\nRUN cd SuperBuild \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j$( nproc ;) \\\n && cd ../.. \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j$( nproc ;)\n#  Cleanup APT\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Clean Superbuild\nRUN rm -rf /code/SuperBuild/build/opencv /code/SuperBuild/download /code/SuperBuild/src/ceres /code/SuperBuild/src/mvstexturing /code/SuperBuild/src/opencv /code/SuperBuild/src/opengv /code/SuperBuild/src/pcl /code/SuperBuild/src/pdal\n#  Entry point\nENTRYPOINT [\"python\", \"/code/run.py\"]\n","injectedSmells":[],"originalDockerfileHash":"7d97ff775afe0458efc63823bf0962b8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage\n#   Env variables\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Install dependencies and required requisites\nRUN apt-get update -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable \\\n && add-apt-repository -y ppa:george-edison55/cmake-3.x \\\n && apt-get update -y\n#   All packages (Will install much faster)\nRUN apt-get install --no-install-recommends build-essential cmake gdal-bin git libatlas-base-dev libavcodec-dev libavformat-dev libboost-date-time-dev libboost-filesystem-dev libboost-iostreams-dev libboost-log-dev libboost-python-dev libboost-regex-dev libboost-thread-dev libeigen3-dev libflann-dev libgdal-dev libgeotiff-dev libgoogle-glog-dev libgtk2.0-dev libjasper-dev libjpeg-dev libjsoncpp-dev liblapack-dev liblas-bin libpng-dev libproj-dev libsuitesparse-dev libswscale-dev libtbb2 libtbb-dev libtiff-dev libvtk6-dev libxext-dev python-dev python-gdal python-matplotlib python-networkx python-pip python-pyproj python-software-properties python-wheel swig2.0 grass-core -y\nRUN apt-get remove libdc1394-22-dev\nRUN pip install pip --upgrade\nRUN pip install setuptools\nRUN pip install appsettings exifread gpxpy loky numpy==1.15.4 psutil pyproj PyYAML==3.13 repoze.lru scipy==1.2.1 shapely xmltodict rasterio attrs==19.1.0 pyodm==1.5.2b1 Pillow -U\nRUN pip install cryptography --upgrade \\\n && python -m easy_install --upgrade pyOpenSSL\nENV PYTHONPATH=\"$PYTHONPATH:/code/SuperBuild/install/lib/python2.7/dist-packages\"\nENV PYTHONPATH=\"$PYTHONPATH:/code/SuperBuild/src/opensfm\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/code/SuperBuild/install/lib\"\n#   Prepare directories\nRUN mkdir /code\nWORKDIR /code\n#   Copy repository files\nCOPY CMakeLists.txt /code/CMakeLists.txt\nCOPY configure.sh /code/configure.sh\nCOPY /modules/ /code/modules/\nCOPY /opendm/ /code/opendm/\nCOPY run.py /code/run.py\nCOPY run.sh /code/run.sh\nCOPY /stages/ /code/stages/\nCOPY /SuperBuild/cmake/ /code/SuperBuild/cmake/\nCOPY /SuperBuild/CMakeLists.txt /code/SuperBuild/CMakeLists.txt\nCOPY docker.settings.yaml /code/settings.yaml\nCOPY VERSION /code/VERSION\n#   Compile code in SuperBuild and root directories\nRUN cd SuperBuild \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j$( nproc ;) \\\n && cd ../.. \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j$( nproc ;)\n#   Cleanup APT\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Clean Superbuild\nRUN rm -rf /code/SuperBuild/build/opencv /code/SuperBuild/download /code/SuperBuild/src/ceres /code/SuperBuild/src/mvstexturing /code/SuperBuild/src/opencv /code/SuperBuild/src/opengv /code/SuperBuild/src/pcl /code/SuperBuild/src/pdal\n#   Entry point\nENTRYPOINT [\"python\", \"/code/run.py\"]\n","originalDockerfileUglifiedHash":"3dfbf6f59d19bcc45e58606a80f03ea1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e357ae615faa1edc075bd3be0eca99b3b0030cf6.dockerfile"}