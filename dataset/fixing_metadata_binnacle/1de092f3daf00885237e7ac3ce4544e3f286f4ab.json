{"seed":3284927248,"processedDockerfileHash":"cde9935ae6c75c3bc98b386f99f2bddd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Dockerfile for installing the necessary dependencies for building Hadoop.\n#   See BUILDING.txt.\nFROM ubuntu:trusty\nWORKDIR /root\n#  #####\n#   Install common dependencies from packages\n#  #####\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends git=1:1.9.1-1ubuntu0.10 curl=7.35.0-1ubuntu2.20 ant=1.9.3-2ubuntu0.1 make=3.81-8.2ubuntu3 maven=3.0.5-1 cmake=2.8.12.2-0ubuntu3 gcc=4:4.8.2-1ubuntu6 g++=4:4.8.2-1ubuntu6 protobuf-compiler=2.5.0-9ubuntu1 libprotoc-dev=2.5.0-9ubuntu1 protobuf-c-compiler=0.15-1build1 libprotobuf-dev=2.5.0-9ubuntu1 build-essential=11.6ubuntu6 libtool=2.4.2-1.7ubuntu1 zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 pkg-config=0.26-1ubuntu4 libssl-dev=1.0.1f-1ubuntu2.27 snappy=0.2-1 libsnappy-dev=1.1.0-1ubuntu1 bzip2=1.0.6-5 libbz2-dev=1.0.6-5 libjansson-dev=2.5-2ubuntu0.2 fuse=2.9.2-4ubuntu4.14.04.1 libfuse-dev=2.9.2-4ubuntu4.14.04.1 libcurl4-openssl-dev=7.35.0-1ubuntu2.20 python=2.7.5-5ubuntu3 python2.7=2.7.6-8ubuntu0.5 pylint=1.1.0-1 openjdk-7-jdk=7u211-2.6.17-0ubuntu0.1 doxygen=1.8.6-2 -y )\n#   Fixing the Apache commons / Maven dependency problem under Ubuntu:\n#   See http://wiki.apache.org/commons/VfsProblems\nRUN cd /usr/share/maven/lib \\\n && ln -s ../../java/commons-lang.jar .\n#  ######\n#   Oracle Java\n#  ######\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y )\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN :\n#   Auto-accept the Oracle JDK license\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN (apt-get update ;apt-get install --no-install-recommends oracle-java7-installer -y )\n#   Auto-accept the Oracle JDK license\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN (apt-get update ;apt-get install --no-install-recommends oracle-java8-installer -y )\n#  #####\n#   Install findbugs\n#  #####\nRUN mkdir -p /opt/findbugs \\\n && curl -L https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download -o /opt/findbugs.tar.gz \\\n && tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs\nENV FINDBUGS_HOME=\"/opt/findbugs\"\n#  ###\n#   Install shellcheck\n#  ###\nRUN (apt-get update ;apt-get install --no-install-recommends cabal-install=1.16.0.2-2 -y )\nRUN cabal update \\\n && cabal install shellcheck --global\n#  ##\n#   Avoid out of memory errors in builds\n#  ##\nENV MAVEN_OPTS=\"-Xms256m -Xmx512m\"\n#  ##\n#   Everything past this point is either not needed for testing or breaks Yetus.\n#   So tell Yetus not to read the rest of the file:\n#   YETUS CUT HERE\n#  ##\n#  ###\n#   Install Forrest (for Apache Hadoop website)\n#  ##\nRUN mkdir -p /usr/local/apache-forrest ; curl -O http://archive.apache.org/dist/forrest/0.8/apache-forrest-0.8.tar.gz ; tar xzf *forrest* --strip-components 1 -C /usr/local/apache-forrest ; echo 'forrest.home=/usr/local/apache-forrest' > build.properties\n#   Add a welcome message and environment checks.\nCOPY hadoop_env_checks.sh /root/hadoop_env_checks.sh\nRUN chmod 755 /root/hadoop_env_checks.sh\nRUN echo '~/hadoop_env_checks.sh' >> /root/.bashrc\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Dockerfile for installing the necessary dependencies for building Hadoop.\n#  See BUILDING.txt.\nFROM ubuntu:trusty\nWORKDIR /root\n# #####\n#  Install common dependencies from packages\n# #####\nRUN apt-get update \\\n && apt-get install --no-install-recommends git curl ant make maven cmake gcc g++ protobuf-compiler libprotoc-dev protobuf-c-compiler libprotobuf-dev build-essential libtool zlib1g-dev pkg-config libssl-dev snappy libsnappy-dev bzip2 libbz2-dev libjansson-dev fuse libfuse-dev libcurl4-openssl-dev python python2.7 pylint openjdk-7-jdk doxygen -y\n#  Fixing the Apache commons / Maven dependency problem under Ubuntu:\n#  See http://wiki.apache.org/commons/VfsProblems\nRUN cd /usr/share/maven/lib \\\n && ln -s ../../java/commons-lang.jar .\n# ######\n#  Oracle Java\n# ######\nRUN apt-get install software-properties-common -y\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN apt-get update\n#  Auto-accept the Oracle JDK license\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install oracle-java7-installer -y\n#  Auto-accept the Oracle JDK license\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install oracle-java8-installer -y\n# #####\n#  Install findbugs\n# #####\nRUN mkdir -p /opt/findbugs \\\n && curl -L https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download -o /opt/findbugs.tar.gz \\\n && tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs\nENV FINDBUGS_HOME=\"/opt/findbugs\"\n# ###\n#  Install shellcheck\n# ###\nRUN apt-get install cabal-install -y\nRUN cabal update \\\n && cabal install shellcheck --global\n# ##\n#  Avoid out of memory errors in builds\n# ##\nENV MAVEN_OPTS=\"-Xms256m -Xmx512m\"\n# ##\n#  Everything past this point is either not needed for testing or breaks Yetus.\n#  So tell Yetus not to read the rest of the file:\n#  YETUS CUT HERE\n# ##\n# ###\n#  Install Forrest (for Apache Hadoop website)\n# ##\nRUN mkdir -p /usr/local/apache-forrest ; curl -O http://archive.apache.org/dist/forrest/0.8/apache-forrest-0.8.tar.gz ; tar xzf *forrest* --strip-components 1 -C /usr/local/apache-forrest ; echo 'forrest.home=/usr/local/apache-forrest' > build.properties\n#  Add a welcome message and environment checks.\nADD hadoop_env_checks.sh /root/hadoop_env_checks.sh\nRUN chmod 755 /root/hadoop_env_checks.sh\nRUN echo '~/hadoop_env_checks.sh' >> /root/.bashrc\n","injectedSmells":[],"originalDockerfileHash":"613f226531393945f8cc9650c3cc0310","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Dockerfile for installing the necessary dependencies for building Hadoop.\n#   See BUILDING.txt.\nFROM ubuntu:trusty\nWORKDIR /root\n#  #####\n#   Install common dependencies from packages\n#  #####\nRUN apt-get update \\\n && apt-get install --no-install-recommends git curl ant make maven cmake gcc g++ protobuf-compiler libprotoc-dev protobuf-c-compiler libprotobuf-dev build-essential libtool zlib1g-dev pkg-config libssl-dev snappy libsnappy-dev bzip2 libbz2-dev libjansson-dev fuse libfuse-dev libcurl4-openssl-dev python python2.7 pylint openjdk-7-jdk doxygen -y\n#   Fixing the Apache commons / Maven dependency problem under Ubuntu:\n#   See http://wiki.apache.org/commons/VfsProblems\nRUN cd /usr/share/maven/lib \\\n && ln -s ../../java/commons-lang.jar .\n#  ######\n#   Oracle Java\n#  ######\nRUN apt-get install software-properties-common -y\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN apt-get update\n#   Auto-accept the Oracle JDK license\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install oracle-java7-installer -y\n#   Auto-accept the Oracle JDK license\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install oracle-java8-installer -y\n#  #####\n#   Install findbugs\n#  #####\nRUN mkdir -p /opt/findbugs \\\n && curl -L https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download -o /opt/findbugs.tar.gz \\\n && tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs\nENV FINDBUGS_HOME=\"/opt/findbugs\"\n#  ###\n#   Install shellcheck\n#  ###\nRUN apt-get install cabal-install -y\nRUN cabal update \\\n && cabal install shellcheck --global\n#  ##\n#   Avoid out of memory errors in builds\n#  ##\nENV MAVEN_OPTS=\"-Xms256m -Xmx512m\"\n#  ##\n#   Everything past this point is either not needed for testing or breaks Yetus.\n#   So tell Yetus not to read the rest of the file:\n#   YETUS CUT HERE\n#  ##\n#  ###\n#   Install Forrest (for Apache Hadoop website)\n#  ##\nRUN mkdir -p /usr/local/apache-forrest ; curl -O http://archive.apache.org/dist/forrest/0.8/apache-forrest-0.8.tar.gz ; tar xzf *forrest* --strip-components 1 -C /usr/local/apache-forrest ; echo 'forrest.home=/usr/local/apache-forrest' > build.properties\n#   Add a welcome message and environment checks.\nADD hadoop_env_checks.sh /root/hadoop_env_checks.sh\nRUN chmod 755 /root/hadoop_env_checks.sh\nRUN echo '~/hadoop_env_checks.sh' >> /root/.bashrc\n","originalDockerfileUglifiedHash":"62037bce557002dcc9fe4b718c672f5a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1de092f3daf00885237e7ac3ce4544e3f286f4ab.dockerfile"}