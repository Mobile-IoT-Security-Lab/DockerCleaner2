{"seed":2747374856,"processedDockerfileHash":"ac3406877ce7c7c270625bbc3cbf4546","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Galaxy - Stable\n#\n#   VERSION       Galaxy-central\nFROM ubuntu:18.04\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\nARG ANSIBLE_REPO=galaxyproject/ansible-galaxy-extras\nARG ANSIBLE_RELEASE=master\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    GALAXY_USER=\"galaxy\" \\\n    GALAXY_UID=\"1450\" \\\n    GALAXY_GID=\"1450\" \\\n    GALAXY_HOME=\"/home/galaxy\" \\\n    GALAXY_LOGS_DIR=\"/home/galaxy/logs\" \\\n    GALAXY_ROOT=\"/export/galaxy-central\" \\\n    GALAXY_VIRTUAL_ENV=\"/export/venv\" \\\n    GALAXY_CONFIG_DIR=\"/etc/galaxy\" \\\n    EXPORT_DIR=\"/export\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\"\nENV GALAXY_CONFIG_FILE=\"$GALAXY_CONFIG_DIR/galaxy.yml\" \\\n    GALAXY_CONFIG_STATIC_ENABLED=\"False\" \\\n    GALAXY_CONFIG_DATABASE_CONNECTION=\"postgresql://localhost/galaxy?client_encoding=utf8\" \\\n    GALAXY_CONFIG_TEMPLATE_CACHE_PATH=\"/export/galaxy-central/database/compiled_templates\" \\\n    GALAXY_CONFIG_CITATION_CACHE_DATA_DIR=\"/export/galaxy-central/database/citations/data\" \\\n    GALAXY_CONFIG_CLUSTER_FILES_DIRECTORY=\"/export/galaxy-central/database/pbs\" \\\n    GALAXY_CONFIG_WATCH_TOOL_DATA_DIR=\"True\" \\\n    GALAXY_CONFIG_FTP_UPLOAD_DIR=\"/export/ftp\" \\\n    GALAXY_CONFIG_FTP_UPLOAD_SITE=\"galaxy.docker.org\" \\\n    GALAXY_CONFIG_USE_PBKDF2=\"False\" \\\n    GALAXY_CONFIG_NGINX_X_ACCEL_REDIRECT_BASE=\"/_x_accel_redirect\" \\\n    GALAXY_CONFIG_NGINX_X_ARCHIVE_FILES_BASE=\"/_x_accel_redirect\" \\\n    GALAXY_CONFIG_DYNAMIC_PROXY_MANAGE=\"False\" \\\n    GALAXY_CONFIG_VISUALIZATION_PLUGINS_DIRECTORY=\"config/plugins/visualizations\" \\\n    GALAXY_CONFIG_TRUST_IPYTHON_NOTEBOOK_CONVERSION=\"True\" \\\n    GALAXY_CONFIG_TOOLFORM_UPGRADE=\"True\" \\\n    GALAXY_CONFIG_SANITIZE_ALL_HTML=\"False\" \\\n    GALAXY_CONFIG_TOOLFORM_UPGRADE=\"True\" \\\n    GALAXY_CONFIG_WELCOME_URL=\"/web/welcome.html\" \\\n    NGINX_WELCOME_LOCATION=\"/web\" \\\n    GALAXY_CONFIG_ENABLE_QUOTAS=\"True\" \\\n    NGINX_WELCOME_PATH=\"/export/welcome\" \\\n    GALAXY_CONFIG_OVERRIDE_DEBUG=\"False\" \\\n    GALAXY_CONFIG_FILE_PATH=\"$GALAXY_ROOT/database/files\" \\\n    GALAXY_CONFIG_NEW_FILE_PATH=\"$GALAXY_ROOT/database/files\" \\\n    GALAXY_CONFIG_OVERRIDE_DEBUG=\"False\" \\\n    GALAXY_CONDA_PREFIX=\"/export/tool_deps/_conda\" \\\n    GALAXY_CONFIG_BRAND=\"Galaxy Docker Build\" \\\n    GALAXY_CONFIG_TOOL_DEPENDENCY_DIR=\"/export/tool_deps\" \\\n    GALAXY_CONFIG_TOOL_PATH=\"$EXPORT_DIR/galaxy-central/tools\" \\\n    GALAXY_CONFIG_JOB_WORKING_DIRECTORY=\"$GALAXY_ROOT/database/job_working_directory\" \\\n    HOME=\"$GALAXY_HOME\"\n#   not to call sync() after package extraction and deactivate apt cache\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \\\n && echo 'Acquire::http::Timeout \"20\";' > /etc/apt/apt.conf.d/98AcquireTimeout \\\n && echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends locales=2.27-3ubuntu1.6 -y \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales \\\n && apt-get install --no-install-recommends apt-transport-https=1.6.14 gnupg=2.2.4-1ubuntu1.6 -y \\\n && echo \"deb [arch=amd64] http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\" > /etc/apt/sources.list.d/ansible.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7BB9C367 \\\n && apt-get update -qq \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends sudo=1.8.21p2-3ubuntu1.5 supervisor=3.3.1-1.1 linux-image-extra-virtual=4.15.0.208.191 munge=0.5.13-1 ansible=2.5.1+dfsg-1ubuntu0.1 nano=2.9.3-2 python-pip=9.0.1-2.3~ubuntu1.18.04.8 wget=1.19.4-1ubuntu2.2 htcondor=8.6.8~dfsg.1-2 unattended-upgrades=1.1ubuntu1.18.04.14 gridengine-drmaa1.0=8.1.9+dfsg-7build1 -y \\\n && pip install ephemeris==0.10.7 virtualenv==20.21.0 \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && mkdir -p /tmp/download \\\n && wget -qO - https://download.docker.com/linux/static/stable/x86_64/docker-17.06.2-ce.tgz | tar -xz -C /tmp/download \\\n && mv /tmp/download/docker/docker /usr/bin/ \\\n && rm -rf /tmp/download \\\n && rm -rf ~/.cache/\nRUN touch /var/log/condor/StartLog /var/log/condor/StarterLog /var/log/condor/CollectorLog /var/log/condor/NegotiatorLog \\\n && mkdir -p /var/run/condor/ /var/lock/condor/ \\\n && chown -R condor: /var/log/condor/StartLog /var/log/condor/StarterLog /var/log/condor/CollectorLog /var/log/condor/NegotiatorLog /var/run/condor/ /var/lock/condor/\nRUN groupadd -r $GALAXY_USER -g $GALAXY_GID \\\n && useradd -u $GALAXY_UID -r -g $GALAXY_USER -d $GALAXY_HOME -c \"Galaxy user\" $GALAXY_USER \\\n && mkdir $EXPORT_DIR $GALAXY_LOGS_DIR \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME $GALAXY_LOGS_DIR $EXPORT_DIR\nCOPY ./bashrc $GALAXY_HOME/.bashrc\n#   Container Style\nCOPY condor_config.local /etc/condor/condor_config.local\n#   fetch ansible galaxy extras\nRUN mkdir -p /ansible/galaxyprojectdotorg.galaxyextras \\\n && cd /ansible/galaxyprojectdotorg.galaxyextras \\\n && wget -pO- https://api.github.com/repos/$ANSIBLE_REPO/tarball/$ANSIBLE_RELEASE | tar xvz --strip-components=1\nCOPY provision.yml /ansible/provision.yml\n#   Install database script\nCOPY ./install_db.sh /usr/bin/install_db.sh\n#   script to install BioJS visualizations\nCOPY install_biojs_vis.sh /usr/bin/install-biojs\nCOPY startup.sh /usr/bin/startup\n#   Make scripts runnable\nRUN chmod +x /usr/bin/install_db.sh /usr/bin/startup /usr/bin/install-biojs\n#   This needs to happen here and not above, otherwise the Galaxy start\n#   (without running the startup.sh script) will crash because integrated_tool_panel.xml could not be found.\nENV GALAXY_CONFIG_INTEGRATED_TOOL_PANEL_CONFIG=\"/export/galaxy-central/integrated_tool_panel.xml\"\n#   Create symlinks for export, the destination will be created by galaxy-init\n#   TODO: Is this even required?\nRUN ln -s -f /export/shed_tools /shed_tools \\\n && ln -s -f /export/tool_deps /tool_deps \\\n && ln -s -f /export/galaxy-central /galaxy-central \\\n && ln -s -f /export/venv /galaxy_venv \\\n && mkdir /etc/galaxy \\\n && ln -s -f /export/welcome /etc/galaxy/web\nRUN wget https://dl.influxdata.com/telegraf/releases/telegraf-1.5.0_linux_amd64.tar.gz \\\n && cd / \\\n && tar xvfz telegraf-1.5.0_linux_amd64.tar.gz \\\n && cp -Rv telegraf/* / \\\n && rm -rf telegraf \\\n && rm telegraf-1.5.0_linux_amd64.tar.gz\nCOPY telegraf.conf /etc/telegraf/telegraf.conf\nENV GALAXY_CONFIG_STATSD_HOST=\"localhost\" \\\n    GALAXY_CONFIG_STATSD_PORT=\"8125\" \\\n    GALAXY_CONFIG_STATSD_PREFIX=\"galaxy\"\n#   Autostart script that is invoked during container start\nCMD [\"/usr/bin/startup\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Galaxy - Stable\n#\n#  VERSION       Galaxy-central\nFROM ubuntu:18.04\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\nARG ANSIBLE_REPO=galaxyproject/ansible-galaxy-extras\nARG ANSIBLE_RELEASE=master\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    GALAXY_USER=\"galaxy\" \\\n    GALAXY_UID=\"1450\" \\\n    GALAXY_GID=\"1450\" \\\n    GALAXY_HOME=\"/home/galaxy\" \\\n    GALAXY_LOGS_DIR=\"/home/galaxy/logs\" \\\n    GALAXY_ROOT=\"/export/galaxy-central\" \\\n    GALAXY_VIRTUAL_ENV=\"/export/venv\" \\\n    GALAXY_CONFIG_DIR=\"/etc/galaxy\" \\\n    EXPORT_DIR=\"/export\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\"\nENV GALAXY_CONFIG_FILE=\"$GALAXY_CONFIG_DIR/galaxy.yml\" \\\n    GALAXY_CONFIG_STATIC_ENABLED=\"False\" \\\n    GALAXY_CONFIG_DATABASE_CONNECTION=\"postgresql://localhost/galaxy?client_encoding=utf8\" \\\n    GALAXY_CONFIG_TEMPLATE_CACHE_PATH=\"/export/galaxy-central/database/compiled_templates\" \\\n    GALAXY_CONFIG_CITATION_CACHE_DATA_DIR=\"/export/galaxy-central/database/citations/data\" \\\n    GALAXY_CONFIG_CLUSTER_FILES_DIRECTORY=\"/export/galaxy-central/database/pbs\" \\\n    GALAXY_CONFIG_WATCH_TOOL_DATA_DIR=\"True\" \\\n    GALAXY_CONFIG_FTP_UPLOAD_DIR=\"/export/ftp\" \\\n    GALAXY_CONFIG_FTP_UPLOAD_SITE=\"galaxy.docker.org\" \\\n    GALAXY_CONFIG_USE_PBKDF2=\"False\" \\\n    GALAXY_CONFIG_NGINX_X_ACCEL_REDIRECT_BASE=\"/_x_accel_redirect\" \\\n    GALAXY_CONFIG_NGINX_X_ARCHIVE_FILES_BASE=\"/_x_accel_redirect\" \\\n    GALAXY_CONFIG_DYNAMIC_PROXY_MANAGE=\"False\" \\\n    GALAXY_CONFIG_VISUALIZATION_PLUGINS_DIRECTORY=\"config/plugins/visualizations\" \\\n    GALAXY_CONFIG_TRUST_IPYTHON_NOTEBOOK_CONVERSION=\"True\" \\\n    GALAXY_CONFIG_TOOLFORM_UPGRADE=\"True\" \\\n    GALAXY_CONFIG_SANITIZE_ALL_HTML=\"False\" \\\n    GALAXY_CONFIG_TOOLFORM_UPGRADE=\"True\" \\\n    GALAXY_CONFIG_WELCOME_URL=\"/web/welcome.html\" \\\n    NGINX_WELCOME_LOCATION=\"/web\" \\\n    GALAXY_CONFIG_ENABLE_QUOTAS=\"True\" \\\n    NGINX_WELCOME_PATH=\"/export/welcome\" \\\n    GALAXY_CONFIG_OVERRIDE_DEBUG=\"False\" \\\n    GALAXY_CONFIG_FILE_PATH=\"$GALAXY_ROOT/database/files\" \\\n    GALAXY_CONFIG_NEW_FILE_PATH=\"$GALAXY_ROOT/database/files\" \\\n    GALAXY_CONFIG_OVERRIDE_DEBUG=\"False\" \\\n    GALAXY_CONDA_PREFIX=\"/export/tool_deps/_conda\" \\\n    GALAXY_CONFIG_BRAND=\"Galaxy Docker Build\" \\\n    GALAXY_CONFIG_TOOL_DEPENDENCY_DIR=\"/export/tool_deps\" \\\n    GALAXY_CONFIG_TOOL_PATH=\"$EXPORT_DIR/galaxy-central/tools\" \\\n    GALAXY_CONFIG_JOB_WORKING_DIRECTORY=\"$GALAXY_ROOT/database/job_working_directory\" \\\n    HOME=\"$GALAXY_HOME\"\n#  not to call sync() after package extraction and deactivate apt cache\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \\\n && echo 'Acquire::http::Timeout \"20\";' > /etc/apt/apt.conf.d/98AcquireTimeout \\\n && echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends locales -y \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales \\\n && apt-get install --no-install-recommends apt-transport-https gnupg -y \\\n && echo \"deb [arch=amd64] http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\" > /etc/apt/sources.list.d/ansible.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7BB9C367 \\\n && apt-get update -qq \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends sudo supervisor linux-image-extra-virtual munge ansible nano python-pip wget htcondor unattended-upgrades gridengine-drmaa1.0 -y \\\n && pip install ephemeris virtualenv \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && mkdir -p /tmp/download \\\n && wget -qO - https://download.docker.com/linux/static/stable/x86_64/docker-17.06.2-ce.tgz | tar -xz -C /tmp/download \\\n && mv /tmp/download/docker/docker /usr/bin/ \\\n && rm -rf /tmp/download \\\n && rm -rf ~/.cache/\nRUN touch /var/log/condor/StartLog /var/log/condor/StarterLog /var/log/condor/CollectorLog /var/log/condor/NegotiatorLog \\\n && mkdir -p /var/run/condor/ /var/lock/condor/ \\\n && chown -R condor: /var/log/condor/StartLog /var/log/condor/StarterLog /var/log/condor/CollectorLog /var/log/condor/NegotiatorLog /var/run/condor/ /var/lock/condor/\nRUN groupadd -r $GALAXY_USER -g $GALAXY_GID \\\n && useradd -u $GALAXY_UID -r -g $GALAXY_USER -d $GALAXY_HOME -c \"Galaxy user\" $GALAXY_USER \\\n && mkdir $EXPORT_DIR $GALAXY_LOGS_DIR \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME $GALAXY_LOGS_DIR $EXPORT_DIR\nADD ./bashrc $GALAXY_HOME/.bashrc\n#  Container Style\nADD condor_config.local /etc/condor/condor_config.local\n#  fetch ansible galaxy extras\nRUN mkdir -p /ansible/galaxyprojectdotorg.galaxyextras \\\n && cd /ansible/galaxyprojectdotorg.galaxyextras \\\n && wget -pO- https://api.github.com/repos/$ANSIBLE_REPO/tarball/$ANSIBLE_RELEASE | tar xvz --strip-components=1\nADD provision.yml /ansible/provision.yml\n#  Install database script\nADD ./install_db.sh /usr/bin/install_db.sh\n#  script to install BioJS visualizations\nADD install_biojs_vis.sh /usr/bin/install-biojs\nADD startup.sh /usr/bin/startup\n#  Make scripts runnable\nRUN chmod +x /usr/bin/install_db.sh /usr/bin/startup /usr/bin/install-biojs\n#  This needs to happen here and not above, otherwise the Galaxy start\n#  (without running the startup.sh script) will crash because integrated_tool_panel.xml could not be found.\nENV GALAXY_CONFIG_INTEGRATED_TOOL_PANEL_CONFIG=\"/export/galaxy-central/integrated_tool_panel.xml\"\n#  Create symlinks for export, the destination will be created by galaxy-init\n#  TODO: Is this even required?\nRUN ln -s -f /export/shed_tools /shed_tools \\\n && ln -s -f /export/tool_deps /tool_deps \\\n && ln -s -f /export/galaxy-central /galaxy-central \\\n && ln -s -f /export/venv /galaxy_venv \\\n && mkdir /etc/galaxy \\\n && ln -s -f /export/welcome /etc/galaxy/web\nRUN wget https://dl.influxdata.com/telegraf/releases/telegraf-1.5.0_linux_amd64.tar.gz \\\n && cd / \\\n && tar xvfz telegraf-1.5.0_linux_amd64.tar.gz \\\n && cp -Rv telegraf/* / \\\n && rm -rf telegraf \\\n && rm telegraf-1.5.0_linux_amd64.tar.gz\nADD telegraf.conf /etc/telegraf/telegraf.conf\nENV GALAXY_CONFIG_STATSD_HOST=\"localhost\" \\\n    GALAXY_CONFIG_STATSD_PORT=\"8125\" \\\n    GALAXY_CONFIG_STATSD_PREFIX=\"galaxy\"\n#  Autostart script that is invoked during container start\nCMD [\"/usr/bin/startup\"]\n","injectedSmells":[],"originalDockerfileHash":"4d1494e441a0f0c4a9f0628ea3c19d08","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Galaxy - Stable\n#\n#   VERSION       Galaxy-central\nFROM ubuntu:18.04\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\nARG ANSIBLE_REPO=galaxyproject/ansible-galaxy-extras\nARG ANSIBLE_RELEASE=master\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    GALAXY_USER=\"galaxy\" \\\n    GALAXY_UID=\"1450\" \\\n    GALAXY_GID=\"1450\" \\\n    GALAXY_HOME=\"/home/galaxy\" \\\n    GALAXY_LOGS_DIR=\"/home/galaxy/logs\" \\\n    GALAXY_ROOT=\"/export/galaxy-central\" \\\n    GALAXY_VIRTUAL_ENV=\"/export/venv\" \\\n    GALAXY_CONFIG_DIR=\"/etc/galaxy\" \\\n    EXPORT_DIR=\"/export\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\"\nENV GALAXY_CONFIG_FILE=\"$GALAXY_CONFIG_DIR/galaxy.yml\" \\\n    GALAXY_CONFIG_STATIC_ENABLED=\"False\" \\\n    GALAXY_CONFIG_DATABASE_CONNECTION=\"postgresql://localhost/galaxy?client_encoding=utf8\" \\\n    GALAXY_CONFIG_TEMPLATE_CACHE_PATH=\"/export/galaxy-central/database/compiled_templates\" \\\n    GALAXY_CONFIG_CITATION_CACHE_DATA_DIR=\"/export/galaxy-central/database/citations/data\" \\\n    GALAXY_CONFIG_CLUSTER_FILES_DIRECTORY=\"/export/galaxy-central/database/pbs\" \\\n    GALAXY_CONFIG_WATCH_TOOL_DATA_DIR=\"True\" \\\n    GALAXY_CONFIG_FTP_UPLOAD_DIR=\"/export/ftp\" \\\n    GALAXY_CONFIG_FTP_UPLOAD_SITE=\"galaxy.docker.org\" \\\n    GALAXY_CONFIG_USE_PBKDF2=\"False\" \\\n    GALAXY_CONFIG_NGINX_X_ACCEL_REDIRECT_BASE=\"/_x_accel_redirect\" \\\n    GALAXY_CONFIG_NGINX_X_ARCHIVE_FILES_BASE=\"/_x_accel_redirect\" \\\n    GALAXY_CONFIG_DYNAMIC_PROXY_MANAGE=\"False\" \\\n    GALAXY_CONFIG_VISUALIZATION_PLUGINS_DIRECTORY=\"config/plugins/visualizations\" \\\n    GALAXY_CONFIG_TRUST_IPYTHON_NOTEBOOK_CONVERSION=\"True\" \\\n    GALAXY_CONFIG_TOOLFORM_UPGRADE=\"True\" \\\n    GALAXY_CONFIG_SANITIZE_ALL_HTML=\"False\" \\\n    GALAXY_CONFIG_TOOLFORM_UPGRADE=\"True\" \\\n    GALAXY_CONFIG_WELCOME_URL=\"/web/welcome.html\" \\\n    NGINX_WELCOME_LOCATION=\"/web\" \\\n    GALAXY_CONFIG_ENABLE_QUOTAS=\"True\" \\\n    NGINX_WELCOME_PATH=\"/export/welcome\" \\\n    GALAXY_CONFIG_OVERRIDE_DEBUG=\"False\" \\\n    GALAXY_CONFIG_FILE_PATH=\"$GALAXY_ROOT/database/files\" \\\n    GALAXY_CONFIG_NEW_FILE_PATH=\"$GALAXY_ROOT/database/files\" \\\n    GALAXY_CONFIG_OVERRIDE_DEBUG=\"False\" \\\n    GALAXY_CONDA_PREFIX=\"/export/tool_deps/_conda\" \\\n    GALAXY_CONFIG_BRAND=\"Galaxy Docker Build\" \\\n    GALAXY_CONFIG_TOOL_DEPENDENCY_DIR=\"/export/tool_deps\" \\\n    GALAXY_CONFIG_TOOL_PATH=\"$EXPORT_DIR/galaxy-central/tools\" \\\n    GALAXY_CONFIG_JOB_WORKING_DIRECTORY=\"$GALAXY_ROOT/database/job_working_directory\" \\\n    HOME=\"$GALAXY_HOME\"\n#   not to call sync() after package extraction and deactivate apt cache\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \\\n && echo 'Acquire::http::Timeout \"20\";' > /etc/apt/apt.conf.d/98AcquireTimeout \\\n && echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends locales -y \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales \\\n && apt-get install --no-install-recommends apt-transport-https gnupg -y \\\n && echo \"deb [arch=amd64] http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\" > /etc/apt/sources.list.d/ansible.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7BB9C367 \\\n && apt-get update -qq \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends sudo supervisor linux-image-extra-virtual munge ansible nano python-pip wget htcondor unattended-upgrades gridengine-drmaa1.0 -y \\\n && pip install ephemeris virtualenv \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && mkdir -p /tmp/download \\\n && wget -qO - https://download.docker.com/linux/static/stable/x86_64/docker-17.06.2-ce.tgz | tar -xz -C /tmp/download \\\n && mv /tmp/download/docker/docker /usr/bin/ \\\n && rm -rf /tmp/download \\\n && rm -rf ~/.cache/\nRUN touch /var/log/condor/StartLog /var/log/condor/StarterLog /var/log/condor/CollectorLog /var/log/condor/NegotiatorLog \\\n && mkdir -p /var/run/condor/ /var/lock/condor/ \\\n && chown -R condor: /var/log/condor/StartLog /var/log/condor/StarterLog /var/log/condor/CollectorLog /var/log/condor/NegotiatorLog /var/run/condor/ /var/lock/condor/\nRUN groupadd -r $GALAXY_USER -g $GALAXY_GID \\\n && useradd -u $GALAXY_UID -r -g $GALAXY_USER -d $GALAXY_HOME -c \"Galaxy user\" $GALAXY_USER \\\n && mkdir $EXPORT_DIR $GALAXY_LOGS_DIR \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME $GALAXY_LOGS_DIR $EXPORT_DIR\nADD ./bashrc $GALAXY_HOME/.bashrc\n#   Container Style\nADD condor_config.local /etc/condor/condor_config.local\n#   fetch ansible galaxy extras\nRUN mkdir -p /ansible/galaxyprojectdotorg.galaxyextras \\\n && cd /ansible/galaxyprojectdotorg.galaxyextras \\\n && wget -pO- https://api.github.com/repos/$ANSIBLE_REPO/tarball/$ANSIBLE_RELEASE | tar xvz --strip-components=1\nADD provision.yml /ansible/provision.yml\n#   Install database script\nADD ./install_db.sh /usr/bin/install_db.sh\n#   script to install BioJS visualizations\nADD install_biojs_vis.sh /usr/bin/install-biojs\nADD startup.sh /usr/bin/startup\n#   Make scripts runnable\nRUN chmod +x /usr/bin/install_db.sh /usr/bin/startup /usr/bin/install-biojs\n#   This needs to happen here and not above, otherwise the Galaxy start\n#   (without running the startup.sh script) will crash because integrated_tool_panel.xml could not be found.\nENV GALAXY_CONFIG_INTEGRATED_TOOL_PANEL_CONFIG=\"/export/galaxy-central/integrated_tool_panel.xml\"\n#   Create symlinks for export, the destination will be created by galaxy-init\n#   TODO: Is this even required?\nRUN ln -s -f /export/shed_tools /shed_tools \\\n && ln -s -f /export/tool_deps /tool_deps \\\n && ln -s -f /export/galaxy-central /galaxy-central \\\n && ln -s -f /export/venv /galaxy_venv \\\n && mkdir /etc/galaxy \\\n && ln -s -f /export/welcome /etc/galaxy/web\nRUN wget https://dl.influxdata.com/telegraf/releases/telegraf-1.5.0_linux_amd64.tar.gz \\\n && cd / \\\n && tar xvfz telegraf-1.5.0_linux_amd64.tar.gz \\\n && cp -Rv telegraf/* / \\\n && rm -rf telegraf \\\n && rm telegraf-1.5.0_linux_amd64.tar.gz\nADD telegraf.conf /etc/telegraf/telegraf.conf\nENV GALAXY_CONFIG_STATSD_HOST=\"localhost\" \\\n    GALAXY_CONFIG_STATSD_PORT=\"8125\" \\\n    GALAXY_CONFIG_STATSD_PREFIX=\"galaxy\"\n#   Autostart script that is invoked during container start\nCMD [\"/usr/bin/startup\"]\n","originalDockerfileUglifiedHash":"976a6eb390f86bc8a015d1ee62a7dfab","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/15dd937a6c686a6165bc2dcd1a29c60b9e475c78.dockerfile"}