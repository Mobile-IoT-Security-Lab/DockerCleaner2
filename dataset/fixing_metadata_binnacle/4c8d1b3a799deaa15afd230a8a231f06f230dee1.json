{"seed":2022076292,"processedDockerfileHash":"a5c45cbf1e03518f814cad0cff8b2b5c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Building Caffe binary with Cifar and OpenBLAS.\nFROM centos:7 AS caffe\nRUN yum makecache fast \\\n && yum groupinstall -y \"Development tools\" \\\n && yum install -y git\nRUN yum install -y epel-release\nRUN yum install -y boost-devel gflags-devel glog-devel hdf5-devel leveldb-devel lmdb-devel opencv-devel protobuf-devel snappy-devel wget\nRUN yum clean all\n#   Please don't install openblas-devel from linux distro - it will not work as multithreaded.\nWORKDIR /root\nRUN git clone --depth=1 https://github.com/BVLC/caffe\nRUN git clone --depth=1 https://github.com/xianyi/OpenBLAS\n#   OpenBLAS build\nWORKDIR /root/OpenBLAS\nENV USE_OPENMP=\"1\"\nRUN make -j --quiet libs\nRUN make -j --quiet netlib\nRUN make -j --quiet shared\nRUN make -j install PREFIX=/opt/swan\n#  ## build \nWORKDIR /root/caffe\nCOPY caffe/Makefile.config Makefile.config\nRUN LD_LIBRARY_PATH=/opt/swan/lib make -j\n#  ## install globaly\nRUN cp .build_release/lib/libcaffe.so.1.0.0 /usr/lib/\nRUN cp .build_release/tools/caffe /usr/local/bin\nRUN ldconfig\n#   Data set preparation\nWORKDIR /root/caffe\nRUN ./data/cifar10/get_cifar10.sh\nRUN LD_LIBRARY_PATH=/opt/swan/lib ./examples/cifar10/create_cifar10.sh\nWORKDIR /root/caffe/examples/cifar10/\nRUN sed -i 's/GPU/CPU/' *.prototxt\nCOPY caffe/cifar10_quick_iter_5000.caffemodel.h5 cifar10_quick_iter_5000.caffemodel.h5\n#   Install into uniq folder matching swan depolyment\nRUN mkdir -p /opt/swan/share/caffe/lib\nRUN mkdir -p /opt/swan/share/caffe/bin\nRUN mkdir -p /opt/swan/share/caffe/examples/cifar10\nWORKDIR /root/caffe\nRUN cp .build_release/lib/libcaffe.so.1.0.0 /opt/swan/share/caffe/lib\nRUN cp .build_release/tools/caffe /opt/swan/share/caffe/bin\nRUN cp -r ./examples/cifar10/cifar10_test_lmdb /opt/swan/share/caffe/examples/cifar10\nRUN cp ./examples/cifar10/cifar10_quick_train_test.prototxt /opt/swan/share/caffe/examples/cifar10\nRUN cp ./examples/cifar10/mean.binaryproto /opt/swan/share/caffe/examples/cifar10\nRUN cp ./examples/cifar10/cifar10_quick_iter_5000.caffemodel.h5 /opt/swan/share/caffe/examples/cifar10\nRUN cp /opt/swan/lib/libopenblas_haswellp-r0.2.20.dev.so /opt/swan/share/caffe/lib/libopenblas.so.0\nCOPY caffe/caffe.sh /opt/swan/bin/caffe.sh\nCOPY caffe/caffe-test.sh /opt/swan/bin/caffe-test.sh\n#   Buolding intel-cmt-cat.\nFROM centos:7 AS intel-cmt-cat\nRUN yum install -y gcc\nRUN yum install -y git make\nRUN git clone https://github.com/01org/intel-cmt-cat/\nWORKDIR /intel-cmt-cat\nRUN make SHARED=n\n#   Building memcached.\nFROM centos:7 AS memcached\nRUN yum makecache fast \\\n && yum groupinstall -y \"Development tools\" \\\n && yum install -y git\nRUN yum install -y epel-release\nRUN yum install -y wget libevent-devel\nRUN wget http://memcached.org/files/memcached-1.4.35.tar.gz\nRUN tar -xzvf memcached-1.4.35.tar.gz\nWORKDIR /memcached-1.4.35\nCOPY memcached/thread-affinity.patch thread-affinity.patch\nRUN cat thread-affinity.patch | patch -p 1\nRUN ./configure --prefix=/usr/local/memcached\nRUN make\n#   Building stress-ng.\nFROM centos:7 AS stress-ng\nRUN yum install -y gcc\nRUN yum install -y git make\nRUN yum install -y wget tar\nRUN wget http://kernel.ubuntu.com/~cking/tarballs/stress-ng/stress-ng-0.07.28.tar.gz\nRUN tar -xzvf stress-ng-0.07.28.tar.gz\nWORKDIR /stress-ng-0.07.28\nRUN make\n#   Builing final container that consists of workloads only.\nFROM centos:7\nRUN yum install -y epel-release\nRUN yum install -y glog protobuf boost hdf5 leveldb lmdb opencv libgomp numactl libevent\nRUN yum update -y\nRUN yum clean all\nCOPY --from=caffe /opt /opt\nCOPY --from=intel-cmt-cat /intel-cmt-cat/pqos/pqos /opt/swan/bin/\nCOPY --from=intel-cmt-cat /intel-cmt-cat/rdtset/rdtset /opt/swan/bin/\nCOPY --from=memcached /memcached-1.4.35/memcached /opt/swan/bin/\nCOPY --from=stress-ng /stress-ng-0.07.28/stress-ng /opt/swan/bin/\nRUN ln -sv /opt/swan/bin/* /usr/bin/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Building Caffe binary with Cifar and OpenBLAS.\nFROM centos:7 AS caffe\nRUN yum makecache fast \\\n && yum groupinstall -y \"Development tools\" \\\n && yum install -y git\nRUN yum install -y epel-release\nRUN yum install -y boost-devel gflags-devel glog-devel hdf5-devel leveldb-devel lmdb-devel opencv-devel protobuf-devel snappy-devel wget\nRUN yum clean all\n#  Please don't install openblas-devel from linux distro - it will not work as multithreaded.\nWORKDIR /root\nRUN git clone --depth=1 https://github.com/BVLC/caffe\nRUN git clone --depth=1 https://github.com/xianyi/OpenBLAS\n#  OpenBLAS build\nWORKDIR /root/OpenBLAS\nENV USE_OPENMP=\"1\"\nRUN make -j --quiet libs\nRUN make -j --quiet netlib\nRUN make -j --quiet shared\nRUN make -j install PREFIX=/opt/swan\n# ## build \nWORKDIR /root/caffe\nADD caffe/Makefile.config Makefile.config\nRUN LD_LIBRARY_PATH=/opt/swan/lib make -j\n# ## install globaly\nRUN cp .build_release/lib/libcaffe.so.1.0.0 /usr/lib/\nRUN cp .build_release/tools/caffe /usr/local/bin\nRUN ldconfig\n#  Data set preparation\nWORKDIR /root/caffe\nRUN ./data/cifar10/get_cifar10.sh\nRUN LD_LIBRARY_PATH=/opt/swan/lib ./examples/cifar10/create_cifar10.sh\nWORKDIR /root/caffe/examples/cifar10/\nRUN sed -i 's/GPU/CPU/' *.prototxt\nADD caffe/cifar10_quick_iter_5000.caffemodel.h5 cifar10_quick_iter_5000.caffemodel.h5\n#  Install into uniq folder matching swan depolyment\nRUN mkdir -p /opt/swan/share/caffe/lib\nRUN mkdir -p /opt/swan/share/caffe/bin\nRUN mkdir -p /opt/swan/share/caffe/examples/cifar10\nWORKDIR /root/caffe\nRUN cp .build_release/lib/libcaffe.so.1.0.0 /opt/swan/share/caffe/lib\nRUN cp .build_release/tools/caffe /opt/swan/share/caffe/bin\nRUN cp -r ./examples/cifar10/cifar10_test_lmdb /opt/swan/share/caffe/examples/cifar10\nRUN cp ./examples/cifar10/cifar10_quick_train_test.prototxt /opt/swan/share/caffe/examples/cifar10\nRUN cp ./examples/cifar10/mean.binaryproto /opt/swan/share/caffe/examples/cifar10\nRUN cp ./examples/cifar10/cifar10_quick_iter_5000.caffemodel.h5 /opt/swan/share/caffe/examples/cifar10\nRUN cp /opt/swan/lib/libopenblas_haswellp-r0.2.20.dev.so /opt/swan/share/caffe/lib/libopenblas.so.0\nADD caffe/caffe.sh /opt/swan/bin/caffe.sh\nADD caffe/caffe-test.sh /opt/swan/bin/caffe-test.sh\n#  Buolding intel-cmt-cat.\nFROM centos:7 AS intel-cmt-cat\nRUN yum install -y gcc\nRUN yum install -y git make\nRUN git clone https://github.com/01org/intel-cmt-cat/\nWORKDIR /intel-cmt-cat\nRUN make SHARED=n\n#  Building memcached.\nFROM centos:7 AS memcached\nRUN yum makecache fast \\\n && yum groupinstall -y \"Development tools\" \\\n && yum install -y git\nRUN yum install -y epel-release\nRUN yum install -y wget libevent-devel\nRUN wget http://memcached.org/files/memcached-1.4.35.tar.gz\nRUN tar -xzvf memcached-1.4.35.tar.gz\nWORKDIR /memcached-1.4.35\nADD memcached/thread-affinity.patch thread-affinity.patch\nRUN cat thread-affinity.patch | patch -p 1\nRUN ./configure --prefix=/usr/local/memcached\nRUN make\n#  Building stress-ng.\nFROM centos:7 AS stress-ng\nRUN yum install -y gcc\nRUN yum install -y git make\nRUN yum install -y wget tar\nRUN wget http://kernel.ubuntu.com/~cking/tarballs/stress-ng/stress-ng-0.07.28.tar.gz\nRUN tar -xzvf stress-ng-0.07.28.tar.gz\nWORKDIR /stress-ng-0.07.28\nRUN make\n#  Builing final container that consists of workloads only.\nFROM centos:7\nRUN yum install -y epel-release\nRUN yum install -y glog protobuf boost hdf5 leveldb lmdb opencv libgomp numactl libevent\nRUN yum update -y\nRUN yum clean all\nCOPY --from=caffe /opt /opt\nCOPY --from=intel-cmt-cat /intel-cmt-cat/pqos/pqos /opt/swan/bin/\nCOPY --from=intel-cmt-cat /intel-cmt-cat/rdtset/rdtset /opt/swan/bin/\nCOPY --from=memcached /memcached-1.4.35/memcached /opt/swan/bin/\nCOPY --from=stress-ng /stress-ng-0.07.28/stress-ng /opt/swan/bin/\nRUN ln -sv /opt/swan/bin/* /usr/bin/\n","injectedSmells":[],"originalDockerfileHash":"4de8d04457b9e66642af464378866f84","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Building Caffe binary with Cifar and OpenBLAS.\nFROM centos:7 AS caffe\nRUN yum makecache fast \\\n && yum groupinstall -y \"Development tools\" \\\n && yum install -y git\nRUN yum install -y epel-release\nRUN yum install -y boost-devel gflags-devel glog-devel hdf5-devel leveldb-devel lmdb-devel opencv-devel protobuf-devel snappy-devel wget\nRUN yum clean all\n#   Please don't install openblas-devel from linux distro - it will not work as multithreaded.\nWORKDIR /root\nRUN git clone --depth=1 https://github.com/BVLC/caffe\nRUN git clone --depth=1 https://github.com/xianyi/OpenBLAS\n#   OpenBLAS build\nWORKDIR /root/OpenBLAS\nENV USE_OPENMP=\"1\"\nRUN make -j --quiet libs\nRUN make -j --quiet netlib\nRUN make -j --quiet shared\nRUN make -j install PREFIX=/opt/swan\n#  ## build \nWORKDIR /root/caffe\nADD caffe/Makefile.config Makefile.config\nRUN LD_LIBRARY_PATH=/opt/swan/lib make -j\n#  ## install globaly\nRUN cp .build_release/lib/libcaffe.so.1.0.0 /usr/lib/\nRUN cp .build_release/tools/caffe /usr/local/bin\nRUN ldconfig\n#   Data set preparation\nWORKDIR /root/caffe\nRUN ./data/cifar10/get_cifar10.sh\nRUN LD_LIBRARY_PATH=/opt/swan/lib ./examples/cifar10/create_cifar10.sh\nWORKDIR /root/caffe/examples/cifar10/\nRUN sed -i 's/GPU/CPU/' *.prototxt\nADD caffe/cifar10_quick_iter_5000.caffemodel.h5 cifar10_quick_iter_5000.caffemodel.h5\n#   Install into uniq folder matching swan depolyment\nRUN mkdir -p /opt/swan/share/caffe/lib\nRUN mkdir -p /opt/swan/share/caffe/bin\nRUN mkdir -p /opt/swan/share/caffe/examples/cifar10\nWORKDIR /root/caffe\nRUN cp .build_release/lib/libcaffe.so.1.0.0 /opt/swan/share/caffe/lib\nRUN cp .build_release/tools/caffe /opt/swan/share/caffe/bin\nRUN cp -r ./examples/cifar10/cifar10_test_lmdb /opt/swan/share/caffe/examples/cifar10\nRUN cp ./examples/cifar10/cifar10_quick_train_test.prototxt /opt/swan/share/caffe/examples/cifar10\nRUN cp ./examples/cifar10/mean.binaryproto /opt/swan/share/caffe/examples/cifar10\nRUN cp ./examples/cifar10/cifar10_quick_iter_5000.caffemodel.h5 /opt/swan/share/caffe/examples/cifar10\nRUN cp /opt/swan/lib/libopenblas_haswellp-r0.2.20.dev.so /opt/swan/share/caffe/lib/libopenblas.so.0\nADD caffe/caffe.sh /opt/swan/bin/caffe.sh\nADD caffe/caffe-test.sh /opt/swan/bin/caffe-test.sh\n#   Buolding intel-cmt-cat.\nFROM centos:7 AS intel-cmt-cat\nRUN yum install -y gcc\nRUN yum install -y git make\nRUN git clone https://github.com/01org/intel-cmt-cat/\nWORKDIR /intel-cmt-cat\nRUN make SHARED=n\n#   Building memcached.\nFROM centos:7 AS memcached\nRUN yum makecache fast \\\n && yum groupinstall -y \"Development tools\" \\\n && yum install -y git\nRUN yum install -y epel-release\nRUN yum install -y wget libevent-devel\nRUN wget http://memcached.org/files/memcached-1.4.35.tar.gz\nRUN tar -xzvf memcached-1.4.35.tar.gz\nWORKDIR /memcached-1.4.35\nADD memcached/thread-affinity.patch thread-affinity.patch\nRUN cat thread-affinity.patch | patch -p 1\nRUN ./configure --prefix=/usr/local/memcached\nRUN make\n#   Building stress-ng.\nFROM centos:7 AS stress-ng\nRUN yum install -y gcc\nRUN yum install -y git make\nRUN yum install -y wget tar\nRUN wget http://kernel.ubuntu.com/~cking/tarballs/stress-ng/stress-ng-0.07.28.tar.gz\nRUN tar -xzvf stress-ng-0.07.28.tar.gz\nWORKDIR /stress-ng-0.07.28\nRUN make\n#   Builing final container that consists of workloads only.\nFROM centos:7\nRUN yum install -y epel-release\nRUN yum install -y glog protobuf boost hdf5 leveldb lmdb opencv libgomp numactl libevent\nRUN yum update -y\nRUN yum clean all\nCOPY --from=caffe /opt /opt\nCOPY --from=intel-cmt-cat /intel-cmt-cat/pqos/pqos /opt/swan/bin/\nCOPY --from=intel-cmt-cat /intel-cmt-cat/rdtset/rdtset /opt/swan/bin/\nCOPY --from=memcached /memcached-1.4.35/memcached /opt/swan/bin/\nCOPY --from=stress-ng /stress-ng-0.07.28/stress-ng /opt/swan/bin/\nRUN ln -sv /opt/swan/bin/* /usr/bin/\n","originalDockerfileUglifiedHash":"e5136d4ce564b89c19fbed166428ee45","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4c8d1b3a799deaa15afd230a8a231f06f230dee1.dockerfile"}