{"seed":2243745647,"processedDockerfileHash":"bc49da82cf5f9a31410dd04909fe56af","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (C) The Arvados Authors. All rights reserved.\n#\n#   SPDX-License-Identifier: AGPL-3.0\nFROM debian:9\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN : \\\n && apt-get -yq --no-install-recommends -o Acquire::Retries=6 install postgresql-9.6 postgresql-contrib-9.6 git build-essential runit curl libpq-dev libcurl4-openssl-dev libssl1.0-dev zlib1g-dev libpcre3-dev openssh-server python-setuptools netcat-traditional python-epydoc graphviz bzip2 less sudo virtualenv libpython-dev fuse libfuse-dev python-pip python-yaml pkg-config libattr1-dev python-llfuse python-pycurl libwww-perl libio-socket-ssl-perl libcrypt-ssleay-perl libjson-perl nginx gitolite3 lsof libreadline-dev apt-transport-https ca-certificates linkchecker python3-virtualenv python-virtualenv xvfb iceweasel libgnutls28-dev python3-dev vim cadaver cython gnupg dirmngr libsecret-1-dev r-base r-cran-testthat libxml2-dev pandoc python3-setuptools python3-pip openjdk-8-jdk bsdmainutils \\\n && apt-get clean\nENV RUBYVERSION_MINOR=\"2.3\"\nENV RUBYVERSION=\"2.3.5\"\n#   Install Ruby from source\nRUN cd /tmp \\\n && curl -f http://cache.ruby-lang.org/pub/ruby/${RUBYVERSION_MINOR}/ruby-${RUBYVERSION}.tar.gz | tar -xzf - \\\n && cd ruby-${RUBYVERSION} \\\n && ./configure --disable-install-doc \\\n && make \\\n && make install \\\n && cd /tmp \\\n && rm -rf ruby-${RUBYVERSION}\nENV GEM_HOME=\"/var/lib/gems\"\nENV GEM_PATH=\"/var/lib/gems\"\nENV PATH=\"$PATH:/var/lib/gems/bin\"\nENV GOVERSION=\"1.11.5\"\n#   Install golang binary\nRUN curl -f http://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz | tar -C /usr/local -xzf -\nENV PATH=\"${PATH}:/usr/local/go/bin\"\nVOLUME /var/lib/docker\nVOLUME /var/log/nginx\nVOLUME /etc/ssl/private\nCOPY 58118E89F3A912897C070ADBF76221572C52609D.asc /tmp/\nRUN apt-key add --no-tty /tmp/58118E89F3A912897C070ADBF76221572C52609D.asc \\\n && rm -f /tmp/58118E89F3A912897C070ADBF76221572C52609D.asc\nRUN mkdir -p /etc/apt/sources.list.d \\\n && echo deb https://apt.dockerproject.org/repo debian-stretch main > /etc/apt/sources.list.d/docker.list \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends docker-engine=17.05.0~ce-0~debian-stretch -yq ) \\\n && apt-get clean\nRUN rm -rf /var/lib/postgresql \\\n && mkdir -p /var/lib/postgresql\nENV PJSVERSION=\"1.9.8\"\n#   bitbucket is the origin, but downloads fail sometimes, so use our own mirror instead.\n#  ENV PJSURL=https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-${PJSVERSION}-linux-x86_64.tar.bz2\nENV PJSURL=\"http://cache.arvados.org/phantomjs-${PJSVERSION}-linux-x86_64.tar.bz2\"\nRUN set -e \\\n && curl -L -f ${PJSURL} | tar -C /usr/local -xjf - \\\n && ln -s ../phantomjs-${PJSVERSION}-linux-x86_64/bin/phantomjs /usr/local/bin\nENV GDVERSION=\"v0.23.0\"\nENV GDURL=\"https://github.com/mozilla/geckodriver/releases/download/$GDVERSION/geckodriver-$GDVERSION-linux64.tar.gz\"\nRUN set -e \\\n && curl -L -f ${GDURL} | tar -C /usr/local/bin -xzf - geckodriver\nRUN pip install setuptools==67.6.1 -U\nENV NODEVERSION=\"v8.15.1\"\n#   Install nodejs binary\nRUN curl -L -f https://nodejs.org/dist/${NODEVERSION}/node-${NODEVERSION}-linux-x64.tar.xz | tar -C /usr/local -xJf - \\\n && ln -s ../node-${NODEVERSION}-linux-x64/bin/node ../node-${NODEVERSION}-linux-x64/bin/npm /usr/local/bin\nENV GRADLEVERSION=\"5.3.1\"\nRUN cd /tmp \\\n && curl -L -O https://services.gradle.org/distributions/gradle-${GRADLEVERSION}-bin.zip \\\n && unzip gradle-${GRADLEVERSION}-bin.zip -d /usr/local \\\n && ln -s ../gradle-${GRADLEVERSION}/bin/gradle /usr/local/bin \\\n && rm gradle-${GRADLEVERSION}-bin.zip\n#   Set UTF-8 locale\nRUN echo en_US.UTF-8 UTF-8 > /etc/locale.gen \\\n && locale-gen\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nARG arvados_version\nRUN echo arvados_version is git commit $arvados_version\nCOPY fuse.conf /etc/\nCOPY crunch-setup.sh gitolite.rc keep-setup.sh common.sh createusers.sh logger runsu.sh waitforpostgres.sh yml_override.py api-setup.sh go-setup.sh devenv.sh /usr/local/lib/arvbox/\nCOPY runit /etc/runit\n#   Start the supervisor.\nENV SVDIR=\"/etc/service\"\nSTOPSIGNAL SIGINT\nCMD [\"/sbin/runit\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (C) The Arvados Authors. All rights reserved.\n#\n#  SPDX-License-Identifier: AGPL-3.0\nFROM debian:9\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq --no-install-recommends -o Acquire::Retries=6 install postgresql-9.6 postgresql-contrib-9.6 git build-essential runit curl libpq-dev libcurl4-openssl-dev libssl1.0-dev zlib1g-dev libpcre3-dev openssh-server python-setuptools netcat-traditional python-epydoc graphviz bzip2 less sudo virtualenv libpython-dev fuse libfuse-dev python-pip python-yaml pkg-config libattr1-dev python-llfuse python-pycurl libwww-perl libio-socket-ssl-perl libcrypt-ssleay-perl libjson-perl nginx gitolite3 lsof libreadline-dev apt-transport-https ca-certificates linkchecker python3-virtualenv python-virtualenv xvfb iceweasel libgnutls28-dev python3-dev vim cadaver cython gnupg dirmngr libsecret-1-dev r-base r-cran-testthat libxml2-dev pandoc python3-setuptools python3-pip openjdk-8-jdk bsdmainutils \\\n && apt-get clean\nENV RUBYVERSION_MINOR=\"2.3\"\nENV RUBYVERSION=\"2.3.5\"\n#  Install Ruby from source\nRUN cd /tmp \\\n && curl -f http://cache.ruby-lang.org/pub/ruby/${RUBYVERSION_MINOR}/ruby-${RUBYVERSION}.tar.gz | tar -xzf - \\\n && cd ruby-${RUBYVERSION} \\\n && ./configure --disable-install-doc \\\n && make \\\n && make install \\\n && cd /tmp \\\n && rm -rf ruby-${RUBYVERSION}\nENV GEM_HOME=\"/var/lib/gems\"\nENV GEM_PATH=\"/var/lib/gems\"\nENV PATH=\"$PATH:/var/lib/gems/bin\"\nENV GOVERSION=\"1.11.5\"\n#  Install golang binary\nRUN curl -f http://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz | tar -C /usr/local -xzf -\nENV PATH=\"${PATH}:/usr/local/go/bin\"\nVOLUME /var/lib/docker\nVOLUME /var/log/nginx\nVOLUME /etc/ssl/private\nADD 58118E89F3A912897C070ADBF76221572C52609D.asc /tmp/\nRUN apt-key add --no-tty /tmp/58118E89F3A912897C070ADBF76221572C52609D.asc \\\n && rm -f /tmp/58118E89F3A912897C070ADBF76221572C52609D.asc\nRUN mkdir -p /etc/apt/sources.list.d \\\n && echo deb https://apt.dockerproject.org/repo debian-stretch main > /etc/apt/sources.list.d/docker.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends docker-engine=17.05.0~ce-0~debian-stretch -yq \\\n && apt-get clean\nRUN rm -rf /var/lib/postgresql \\\n && mkdir -p /var/lib/postgresql\nENV PJSVERSION=\"1.9.8\"\n#  bitbucket is the origin, but downloads fail sometimes, so use our own mirror instead.\n# ENV PJSURL=https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-${PJSVERSION}-linux-x86_64.tar.bz2\nENV PJSURL=\"http://cache.arvados.org/phantomjs-${PJSVERSION}-linux-x86_64.tar.bz2\"\nRUN set -e \\\n && curl -L -f ${PJSURL} | tar -C /usr/local -xjf - \\\n && ln -s ../phantomjs-${PJSVERSION}-linux-x86_64/bin/phantomjs /usr/local/bin\nENV GDVERSION=\"v0.23.0\"\nENV GDURL=\"https://github.com/mozilla/geckodriver/releases/download/$GDVERSION/geckodriver-$GDVERSION-linux64.tar.gz\"\nRUN set -e \\\n && curl -L -f ${GDURL} | tar -C /usr/local/bin -xzf - geckodriver\nRUN pip install setuptools -U\nENV NODEVERSION=\"v8.15.1\"\n#  Install nodejs binary\nRUN curl -L -f https://nodejs.org/dist/${NODEVERSION}/node-${NODEVERSION}-linux-x64.tar.xz | tar -C /usr/local -xJf - \\\n && ln -s ../node-${NODEVERSION}-linux-x64/bin/node ../node-${NODEVERSION}-linux-x64/bin/npm /usr/local/bin\nENV GRADLEVERSION=\"5.3.1\"\nRUN cd /tmp \\\n && curl -L -O https://services.gradle.org/distributions/gradle-${GRADLEVERSION}-bin.zip \\\n && unzip gradle-${GRADLEVERSION}-bin.zip -d /usr/local \\\n && ln -s ../gradle-${GRADLEVERSION}/bin/gradle /usr/local/bin \\\n && rm gradle-${GRADLEVERSION}-bin.zip\n#  Set UTF-8 locale\nRUN echo en_US.UTF-8 UTF-8 > /etc/locale.gen \\\n && locale-gen\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nARG arvados_version\nRUN echo arvados_version is git commit $arvados_version\nADD fuse.conf /etc/\nADD crunch-setup.sh gitolite.rc keep-setup.sh common.sh createusers.sh logger runsu.sh waitforpostgres.sh yml_override.py api-setup.sh go-setup.sh devenv.sh /usr/local/lib/arvbox/\nADD runit /etc/runit\n#  Start the supervisor.\nENV SVDIR=\"/etc/service\"\nSTOPSIGNAL SIGINT\nCMD [\"/sbin/runit\"]\n","injectedSmells":[],"originalDockerfileHash":"fa92dd13c1304210a0e828ce85bcd76f","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (C) The Arvados Authors. All rights reserved.\n#\n#   SPDX-License-Identifier: AGPL-3.0\nFROM debian:9\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq --no-install-recommends -o Acquire::Retries=6 install postgresql-9.6 postgresql-contrib-9.6 git build-essential runit curl libpq-dev libcurl4-openssl-dev libssl1.0-dev zlib1g-dev libpcre3-dev openssh-server python-setuptools netcat-traditional python-epydoc graphviz bzip2 less sudo virtualenv libpython-dev fuse libfuse-dev python-pip python-yaml pkg-config libattr1-dev python-llfuse python-pycurl libwww-perl libio-socket-ssl-perl libcrypt-ssleay-perl libjson-perl nginx gitolite3 lsof libreadline-dev apt-transport-https ca-certificates linkchecker python3-virtualenv python-virtualenv xvfb iceweasel libgnutls28-dev python3-dev vim cadaver cython gnupg dirmngr libsecret-1-dev r-base r-cran-testthat libxml2-dev pandoc python3-setuptools python3-pip openjdk-8-jdk bsdmainutils \\\n && apt-get clean\nENV RUBYVERSION_MINOR=\"2.3\"\nENV RUBYVERSION=\"2.3.5\"\n#   Install Ruby from source\nRUN cd /tmp \\\n && curl -f http://cache.ruby-lang.org/pub/ruby/${RUBYVERSION_MINOR}/ruby-${RUBYVERSION}.tar.gz | tar -xzf - \\\n && cd ruby-${RUBYVERSION} \\\n && ./configure --disable-install-doc \\\n && make \\\n && make install \\\n && cd /tmp \\\n && rm -rf ruby-${RUBYVERSION}\nENV GEM_HOME=\"/var/lib/gems\"\nENV GEM_PATH=\"/var/lib/gems\"\nENV PATH=\"$PATH:/var/lib/gems/bin\"\nENV GOVERSION=\"1.11.5\"\n#   Install golang binary\nRUN curl -f http://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz | tar -C /usr/local -xzf -\nENV PATH=\"${PATH}:/usr/local/go/bin\"\nVOLUME /var/lib/docker\nVOLUME /var/log/nginx\nVOLUME /etc/ssl/private\nADD 58118E89F3A912897C070ADBF76221572C52609D.asc /tmp/\nRUN apt-key add --no-tty /tmp/58118E89F3A912897C070ADBF76221572C52609D.asc \\\n && rm -f /tmp/58118E89F3A912897C070ADBF76221572C52609D.asc\nRUN mkdir -p /etc/apt/sources.list.d \\\n && echo deb https://apt.dockerproject.org/repo debian-stretch main > /etc/apt/sources.list.d/docker.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends docker-engine=17.05.0~ce-0~debian-stretch -yq \\\n && apt-get clean\nRUN rm -rf /var/lib/postgresql \\\n && mkdir -p /var/lib/postgresql\nENV PJSVERSION=\"1.9.8\"\n#   bitbucket is the origin, but downloads fail sometimes, so use our own mirror instead.\n#  ENV PJSURL=https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-${PJSVERSION}-linux-x86_64.tar.bz2\nENV PJSURL=\"http://cache.arvados.org/phantomjs-${PJSVERSION}-linux-x86_64.tar.bz2\"\nRUN set -e \\\n && curl -L -f ${PJSURL} | tar -C /usr/local -xjf - \\\n && ln -s ../phantomjs-${PJSVERSION}-linux-x86_64/bin/phantomjs /usr/local/bin\nENV GDVERSION=\"v0.23.0\"\nENV GDURL=\"https://github.com/mozilla/geckodriver/releases/download/$GDVERSION/geckodriver-$GDVERSION-linux64.tar.gz\"\nRUN set -e \\\n && curl -L -f ${GDURL} | tar -C /usr/local/bin -xzf - geckodriver\nRUN pip install setuptools -U\nENV NODEVERSION=\"v8.15.1\"\n#   Install nodejs binary\nRUN curl -L -f https://nodejs.org/dist/${NODEVERSION}/node-${NODEVERSION}-linux-x64.tar.xz | tar -C /usr/local -xJf - \\\n && ln -s ../node-${NODEVERSION}-linux-x64/bin/node ../node-${NODEVERSION}-linux-x64/bin/npm /usr/local/bin\nENV GRADLEVERSION=\"5.3.1\"\nRUN cd /tmp \\\n && curl -L -O https://services.gradle.org/distributions/gradle-${GRADLEVERSION}-bin.zip \\\n && unzip gradle-${GRADLEVERSION}-bin.zip -d /usr/local \\\n && ln -s ../gradle-${GRADLEVERSION}/bin/gradle /usr/local/bin \\\n && rm gradle-${GRADLEVERSION}-bin.zip\n#   Set UTF-8 locale\nRUN echo en_US.UTF-8 UTF-8 > /etc/locale.gen \\\n && locale-gen\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nARG arvados_version\nRUN echo arvados_version is git commit $arvados_version\nADD fuse.conf /etc/\nADD crunch-setup.sh gitolite.rc keep-setup.sh common.sh createusers.sh logger runsu.sh waitforpostgres.sh yml_override.py api-setup.sh go-setup.sh devenv.sh /usr/local/lib/arvbox/\nADD runit /etc/runit\n#   Start the supervisor.\nENV SVDIR=\"/etc/service\"\nSTOPSIGNAL SIGINT\nCMD [\"/sbin/runit\"]\n","originalDockerfileUglifiedHash":"3c449dfac45175a0e0e6e7c58cc22112","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/758bcbc5f255a61d96c49d2725910e992ebbee34.dockerfile"}