{"seed":3463605072,"processedDockerfileHash":"2a619548072a6d81bbfa581f02c9a2d1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   firefox Dockerfile\n#\n#   https://github.com/jlesage/docker-firefox\n#\n#   Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n#   Define software versions.\nARG FIREFOX_VERSION=66.0.5-r1\nARG JSONLZ4_VERSION=c4305b8\nARG LZ4_VERSION=1.8.1.2\n#  ARG PROFILE_CLEANER_VERSION=2.36\n#   Define software download URLs.\nARG JSONLZ4_URL=https://github.com/avih/dejsonlz4/archive/${JSONLZ4_VERSION}.tar.gz\nARG LZ4_URL=https://github.com/lz4/lz4/archive/v${LZ4_VERSION}.tar.gz\n#  ARG PROFILE_CLEANER_URL=https://github.com/graysky2/profile-cleaner/raw/v${PROFILE_CLEANER_VERSION}/common/profile-cleaner.in\n#   Define working directory.\nWORKDIR /tmp\n#   Install Firefox.\nRUN add-pkg --repository http://dl-cdn.alpinelinux.org/alpine/edge/main --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing --upgrade firefox=${FIREFOX_VERSION}\n#   Install extra packages.\nRUN add-pkg desktop-file-utils adwaita-icon-theme ttf-dejavu ffmpeg-libs xdotool\n#   Set default settings.\nRUN CFG_FILE=\"$( ls /usr/lib/firefox/browser/defaults/preferences/firefox-branding.js ;)\" \\\n && echo '' >> \"$CFG_FILE\" \\\n && echo '// Default download directory.' >> \"$CFG_FILE\" \\\n && echo 'pref(\"browser.download.dir\", \"/config/downloads\");' >> \"$CFG_FILE\" \\\n && echo 'pref(\"browser.download.folderList\", 2);' >> \"$CFG_FILE\"\n#   Install JSONLZ4 tools.\nRUN add-pkg --virtual build-dependencies curl build-base \\\n && mkdir jsonlz4 \\\n && mkdir lz4 \\\n && curl -# -L {$JSONLZ4_URL} | tar xz --strip 1 -C jsonlz4 \\\n && curl -# -L {$LZ4_URL} | tar xz --strip 1 -C lz4 \\\n && mv jsonlz4/src/ref_compress/*.c jsonlz4/src/ \\\n && cp lz4/lib/lz4.* jsonlz4/src/ \\\n && cd jsonlz4 \\\n && gcc -Wall -o dejsonlz4 src/dejsonlz4.c src/lz4.c \\\n && gcc -Wall -o jsonlz4 src/jsonlz4.c src/lz4.c \\\n && strip dejsonlz4 jsonlz4 \\\n && cp -v dejsonlz4 /usr/bin/ \\\n && cp -v jsonlz4 /usr/bin/ \\\n && cd .. \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Install profile-cleaner.\n#  RUN \\\n#      add-pkg --virtual build-dependencies curl && \\\n#      curl -# -L -o /usr/bin/profile-cleaner {$PROFILE_CLEANER_URL} && \\\n#      sed-patch 's/@VERSION@/'${PROFILE_CLEANER_VERSION}'/' /usr/bin/profile-cleaner && \\\n#      chmod +x /usr/bin/profile-cleaner && \\\n#      add-pkg \\\n#          bash \\\n#          file \\\n#          coreutils \\\n#          bc \\\n#          parallel \\\n#          sqlite \\\n#          && \\\n#      # Cleanup.\n#      del-pkg build-dependencies && \\\n#      rm -rf /tmp/* /tmp/.[!.]*\n#   Enable log monitoring.\nRUN add-pkg yad \\\n && sed-patch 's|LOG_FILES=|LOG_FILES=/config/log/firefox/error.log|' /etc/logmonitor/logmonitor.conf \\\n && sed-patch 's|STATUS_FILES=|STATUS_FILES=/tmp/.firefox_shm_check|' /etc/logmonitor/logmonitor.conf\n#   Adjust the openbox config.\nRUN sed-patch 's/<application type=\"normal\">/<application type=\"normal\" title=\"Mozilla Firefox\">/' /etc/xdg/openbox/rc.xml \\\n && sed-patch '/<application type=\"normal\" title=\"Mozilla Firefox\">/a \\ <layer>below</layer>' /etc/xdg/openbox/rc.xml\n#   Generate and install favicons.\nRUN APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/firefox-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#   Add files.\nCOPY rootfs/ /\n#   Set environment variables.\nENV APP_NAME=\"Firefox\"\n#   Define mountable directories.\nVOLUME [\"/config\"]\n#   Metadata.\nLABEL org.label-schema.name=\"firefox\" \\\n      org.label-schema.description=\"Docker container for Firefox\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-firefox\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  firefox Dockerfile\n#\n#  https://github.com/jlesage/docker-firefox\n#\n#  Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n#  Define software versions.\nARG FIREFOX_VERSION=66.0.5-r1\nARG JSONLZ4_VERSION=c4305b8\nARG LZ4_VERSION=1.8.1.2\n# ARG PROFILE_CLEANER_VERSION=2.36\n#  Define software download URLs.\nARG JSONLZ4_URL=https://github.com/avih/dejsonlz4/archive/${JSONLZ4_VERSION}.tar.gz\nARG LZ4_URL=https://github.com/lz4/lz4/archive/v${LZ4_VERSION}.tar.gz\n# ARG PROFILE_CLEANER_URL=https://github.com/graysky2/profile-cleaner/raw/v${PROFILE_CLEANER_VERSION}/common/profile-cleaner.in\n#  Define working directory.\nWORKDIR /tmp\n#  Install Firefox.\nRUN add-pkg --repository http://dl-cdn.alpinelinux.org/alpine/edge/main --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing --upgrade firefox=${FIREFOX_VERSION}\n#  Install extra packages.\nRUN add-pkg desktop-file-utils adwaita-icon-theme ttf-dejavu ffmpeg-libs xdotool\n#  Set default settings.\nRUN CFG_FILE=\"$( ls /usr/lib/firefox/browser/defaults/preferences/firefox-branding.js ;)\" \\\n && echo '' >> \"$CFG_FILE\" \\\n && echo '// Default download directory.' >> \"$CFG_FILE\" \\\n && echo 'pref(\"browser.download.dir\", \"/config/downloads\");' >> \"$CFG_FILE\" \\\n && echo 'pref(\"browser.download.folderList\", 2);' >> \"$CFG_FILE\"\n#  Install JSONLZ4 tools.\nRUN add-pkg --virtual build-dependencies curl build-base \\\n && mkdir jsonlz4 \\\n && mkdir lz4 \\\n && curl -# -L {$JSONLZ4_URL} | tar xz --strip 1 -C jsonlz4 \\\n && curl -# -L {$LZ4_URL} | tar xz --strip 1 -C lz4 \\\n && mv jsonlz4/src/ref_compress/*.c jsonlz4/src/ \\\n && cp lz4/lib/lz4.* jsonlz4/src/ \\\n && cd jsonlz4 \\\n && gcc -Wall -o dejsonlz4 src/dejsonlz4.c src/lz4.c \\\n && gcc -Wall -o jsonlz4 src/jsonlz4.c src/lz4.c \\\n && strip dejsonlz4 jsonlz4 \\\n && cp -v dejsonlz4 /usr/bin/ \\\n && cp -v jsonlz4 /usr/bin/ \\\n && cd .. \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Install profile-cleaner.\n# RUN \\\n#     add-pkg --virtual build-dependencies curl && \\\n#     curl -# -L -o /usr/bin/profile-cleaner {$PROFILE_CLEANER_URL} && \\\n#     sed-patch 's/@VERSION@/'${PROFILE_CLEANER_VERSION}'/' /usr/bin/profile-cleaner && \\\n#     chmod +x /usr/bin/profile-cleaner && \\\n#     add-pkg \\\n#         bash \\\n#         file \\\n#         coreutils \\\n#         bc \\\n#         parallel \\\n#         sqlite \\\n#         && \\\n#     # Cleanup.\n#     del-pkg build-dependencies && \\\n#     rm -rf /tmp/* /tmp/.[!.]*\n#  Enable log monitoring.\nRUN add-pkg yad \\\n && sed-patch 's|LOG_FILES=|LOG_FILES=/config/log/firefox/error.log|' /etc/logmonitor/logmonitor.conf \\\n && sed-patch 's|STATUS_FILES=|STATUS_FILES=/tmp/.firefox_shm_check|' /etc/logmonitor/logmonitor.conf\n#  Adjust the openbox config.\nRUN sed-patch 's/<application type=\"normal\">/<application type=\"normal\" title=\"Mozilla Firefox\">/' /etc/xdg/openbox/rc.xml \\\n && sed-patch '/<application type=\"normal\" title=\"Mozilla Firefox\">/a \\ <layer>below</layer>' /etc/xdg/openbox/rc.xml\n#  Generate and install favicons.\nRUN APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/firefox-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#  Add files.\nCOPY rootfs/ /\n#  Set environment variables.\nENV APP_NAME=\"Firefox\"\n#  Define mountable directories.\nVOLUME [\"/config\"]\n#  Metadata.\nLABEL org.label-schema.name=\"firefox\" \\\n      org.label-schema.description=\"Docker container for Firefox\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-firefox\" \\\n      org.label-schema.schema-version=\"1.0\"\n","injectedSmells":[],"originalDockerfileHash":"233fdd0debb6999a4dea37c6ce726b50","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   firefox Dockerfile\n#\n#   https://github.com/jlesage/docker-firefox\n#\n#   Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n#   Define software versions.\nARG FIREFOX_VERSION=66.0.5-r1\nARG JSONLZ4_VERSION=c4305b8\nARG LZ4_VERSION=1.8.1.2\n#  ARG PROFILE_CLEANER_VERSION=2.36\n#   Define software download URLs.\nARG JSONLZ4_URL=https://github.com/avih/dejsonlz4/archive/${JSONLZ4_VERSION}.tar.gz\nARG LZ4_URL=https://github.com/lz4/lz4/archive/v${LZ4_VERSION}.tar.gz\n#  ARG PROFILE_CLEANER_URL=https://github.com/graysky2/profile-cleaner/raw/v${PROFILE_CLEANER_VERSION}/common/profile-cleaner.in\n#   Define working directory.\nWORKDIR /tmp\n#   Install Firefox.\nRUN add-pkg --repository http://dl-cdn.alpinelinux.org/alpine/edge/main --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing --upgrade firefox=${FIREFOX_VERSION}\n#   Install extra packages.\nRUN add-pkg desktop-file-utils adwaita-icon-theme ttf-dejavu ffmpeg-libs xdotool\n#   Set default settings.\nRUN CFG_FILE=\"$( ls /usr/lib/firefox/browser/defaults/preferences/firefox-branding.js ;)\" \\\n && echo '' >> \"$CFG_FILE\" \\\n && echo '// Default download directory.' >> \"$CFG_FILE\" \\\n && echo 'pref(\"browser.download.dir\", \"/config/downloads\");' >> \"$CFG_FILE\" \\\n && echo 'pref(\"browser.download.folderList\", 2);' >> \"$CFG_FILE\"\n#   Install JSONLZ4 tools.\nRUN add-pkg --virtual build-dependencies curl build-base \\\n && mkdir jsonlz4 \\\n && mkdir lz4 \\\n && curl -# -L {$JSONLZ4_URL} | tar xz --strip 1 -C jsonlz4 \\\n && curl -# -L {$LZ4_URL} | tar xz --strip 1 -C lz4 \\\n && mv jsonlz4/src/ref_compress/*.c jsonlz4/src/ \\\n && cp lz4/lib/lz4.* jsonlz4/src/ \\\n && cd jsonlz4 \\\n && gcc -Wall -o dejsonlz4 src/dejsonlz4.c src/lz4.c \\\n && gcc -Wall -o jsonlz4 src/jsonlz4.c src/lz4.c \\\n && strip dejsonlz4 jsonlz4 \\\n && cp -v dejsonlz4 /usr/bin/ \\\n && cp -v jsonlz4 /usr/bin/ \\\n && cd .. \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Install profile-cleaner.\n#  RUN \\\n#      add-pkg --virtual build-dependencies curl && \\\n#      curl -# -L -o /usr/bin/profile-cleaner {$PROFILE_CLEANER_URL} && \\\n#      sed-patch 's/@VERSION@/'${PROFILE_CLEANER_VERSION}'/' /usr/bin/profile-cleaner && \\\n#      chmod +x /usr/bin/profile-cleaner && \\\n#      add-pkg \\\n#          bash \\\n#          file \\\n#          coreutils \\\n#          bc \\\n#          parallel \\\n#          sqlite \\\n#          && \\\n#      # Cleanup.\n#      del-pkg build-dependencies && \\\n#      rm -rf /tmp/* /tmp/.[!.]*\n#   Enable log monitoring.\nRUN add-pkg yad \\\n && sed-patch 's|LOG_FILES=|LOG_FILES=/config/log/firefox/error.log|' /etc/logmonitor/logmonitor.conf \\\n && sed-patch 's|STATUS_FILES=|STATUS_FILES=/tmp/.firefox_shm_check|' /etc/logmonitor/logmonitor.conf\n#   Adjust the openbox config.\nRUN sed-patch 's/<application type=\"normal\">/<application type=\"normal\" title=\"Mozilla Firefox\">/' /etc/xdg/openbox/rc.xml \\\n && sed-patch '/<application type=\"normal\" title=\"Mozilla Firefox\">/a \\ <layer>below</layer>' /etc/xdg/openbox/rc.xml\n#   Generate and install favicons.\nRUN APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/firefox-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#   Add files.\nCOPY rootfs/ /\n#   Set environment variables.\nENV APP_NAME=\"Firefox\"\n#   Define mountable directories.\nVOLUME [\"/config\"]\n#   Metadata.\nLABEL org.label-schema.name=\"firefox\" \\\n      org.label-schema.description=\"Docker container for Firefox\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-firefox\" \\\n      org.label-schema.schema-version=\"1.0\"\n","originalDockerfileUglifiedHash":"045efcc3b6bb971f33c56a709bd3297a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f52b2dd4e5fb07e42cabd3d315de51731a284c70.dockerfile"}