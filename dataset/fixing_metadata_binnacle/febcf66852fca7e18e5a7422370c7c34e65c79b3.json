{"seed":696932948,"processedDockerfileHash":"e2e16e1600f5440cd796c8f1a5f7976f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\n#   Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"linux\"\n#   Airflow\nARG AIRFLOW_VERSION=1.7.1.3\nENV AIRFLOW_HOME=\"/usr/local/airflow\"\n#   Define en_US.\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LC_MESSAGES=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN set -ex \\\n && buildDeps=' python3-dev libkrb5-dev libsasl2-dev libssl-dev libffi-dev build-essential libblas-dev liblapack-dev libpq-dev ' \\\n && apt-get update -yqq \\\n && apt-get install --no-install-recommends python3=3.5.1-3 python3-pip=8.1.1-2ubuntu0.6 netbase=5.3 apt-utils=1.2.35 curl=7.47.0-1ubuntu2.19 netcat=1.10-41 locales=2.23-0ubuntu11.3 git=1:2.7.4-0ubuntu1.10 wget=1.17.1-1ubuntu1.5 alien=8.95 libgdal-dev=1.11.3+dfsg-3build2 libgeos-dev=3.5.0-1ubuntu2 binutils=2.26.1-1ubuntu1~16.04.8 libproj-dev=4.9.2-2 gdal-bin=1.11.3+dfsg-3build2 libspatialindex-dev=1.8.5-3 libaio1=0.3.110-2 freetds-dev=0.91-6.1build1 $buildDeps -yqq \\\n && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n && locale-gen \\\n && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n && useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n && python3 -m pip install -U pip \\\n && pip3 install -U setuptools \\\n && pip3 install Cython \\\n && pip3 install pytz==2015.7 \\\n && pip3 install pyOpenSSL \\\n && pip3 install ndg-httpsclient \\\n && pip3 install pyasn1 \\\n && pip3 install click \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/incubator-airflow.git#egg=airflow[async,crypto,password,postgres,hive,s3] \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/eastern-state.git \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/s3-sftp-sync.git \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/jsontableschema-sql-py.git#egg=jsontableschema_sql \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/the-el.git#egg=the_el \\\n && apt-get remove --purge -yqq $buildDeps \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc /usr/share/doc-base\n#   instant sql-plus instant oracle client\nRUN set -ex \\\n && wget https://www.dropbox.com/s/ubgeht3m59bhfh1/oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n && mv oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm \\\n && alien -i oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm \\\n && rm oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm\n#   instant basic-lite instant oracle client\nRUN set -ex \\\n && wget https://www.dropbox.com/s/1yzl0fdnaiw5yqp/oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n && mv oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm \\\n && alien -i oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm \\\n && rm oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm\n#   instant oracle-sdk\nRUN set -ex \\\n && wget https://www.dropbox.com/s/uic5vzc9yobttct/oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n && mv oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm \\\n && alien -i oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm \\\n && rm oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm\nCOPY scripts/entrypoint.sh /entrypoint.sh\nCOPY requirements.txt /requirements.txt\nCOPY config/airflow.cfg ${AIRFLOW_HOME}/airflow.cfg\nCOPY scripts/users.py ${AIRFLOW_HOME}/users.py\nCOPY dags ${AIRFLOW_HOME}/dags\nCOPY plugins ${AIRFLOW_HOME}/plugins\nRUN chown -R airflow: ${AIRFLOW_HOME}\nEXPOSE 8080/tcp\nUSER airflow\nWORKDIR ${AIRFLOW_HOME}\nENTRYPOINT [\"/entrypoint.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\n#  Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"linux\"\n#  Airflow\nARG AIRFLOW_VERSION=1.7.1.3\nENV AIRFLOW_HOME=\"/usr/local/airflow\"\n#  Define en_US.\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LC_MESSAGES=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN set -ex \\\n && buildDeps=' python3-dev libkrb5-dev libsasl2-dev libssl-dev libffi-dev build-essential libblas-dev liblapack-dev libpq-dev ' \\\n && apt-get update -yqq \\\n && apt-get install --no-install-recommends python3 python3-pip netbase apt-utils curl netcat locales git wget alien libgdal-dev libgeos-dev binutils libproj-dev gdal-bin libspatialindex-dev libaio1 freetds-dev $buildDeps -yqq \\\n && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n && locale-gen \\\n && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n && useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n && python3 -m pip install -U pip \\\n && pip3 install -U setuptools \\\n && pip3 install Cython \\\n && pip3 install pytz==2015.7 \\\n && pip3 install pyOpenSSL \\\n && pip3 install ndg-httpsclient \\\n && pip3 install pyasn1 \\\n && pip3 install click \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/incubator-airflow.git#egg=airflow[async,crypto,password,postgres,hive,s3] \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/eastern-state.git \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/s3-sftp-sync.git \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/jsontableschema-sql-py.git#egg=jsontableschema_sql \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/the-el.git#egg=the_el \\\n && apt-get remove --purge -yqq $buildDeps \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc /usr/share/doc-base\n#  instant sql-plus instant oracle client\nRUN set -ex \\\n && wget https://www.dropbox.com/s/ubgeht3m59bhfh1/oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n && mv oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm \\\n && alien -i oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm \\\n && rm oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm\n#  instant basic-lite instant oracle client\nRUN set -ex \\\n && wget https://www.dropbox.com/s/1yzl0fdnaiw5yqp/oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n && mv oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm \\\n && alien -i oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm \\\n && rm oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm\n#  instant oracle-sdk\nRUN set -ex \\\n && wget https://www.dropbox.com/s/uic5vzc9yobttct/oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n && mv oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm \\\n && alien -i oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm \\\n && rm oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm\nCOPY scripts/entrypoint.sh /entrypoint.sh\nCOPY requirements.txt /requirements.txt\nCOPY config/airflow.cfg ${AIRFLOW_HOME}/airflow.cfg\nCOPY scripts/users.py ${AIRFLOW_HOME}/users.py\nCOPY dags ${AIRFLOW_HOME}/dags\nCOPY plugins ${AIRFLOW_HOME}/plugins\nRUN chown -R airflow: ${AIRFLOW_HOME}\nEXPOSE 8080/tcp\nUSER airflow\nWORKDIR ${AIRFLOW_HOME}\nENTRYPOINT [\"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"4e6c0f6e46fea4b0642bc825298a5a54","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\n#   Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"linux\"\n#   Airflow\nARG AIRFLOW_VERSION=1.7.1.3\nENV AIRFLOW_HOME=\"/usr/local/airflow\"\n#   Define en_US.\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LC_MESSAGES=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN set -ex \\\n && buildDeps=' python3-dev libkrb5-dev libsasl2-dev libssl-dev libffi-dev build-essential libblas-dev liblapack-dev libpq-dev ' \\\n && apt-get update -yqq \\\n && apt-get install --no-install-recommends python3 python3-pip netbase apt-utils curl netcat locales git wget alien libgdal-dev libgeos-dev binutils libproj-dev gdal-bin libspatialindex-dev libaio1 freetds-dev $buildDeps -yqq \\\n && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n && locale-gen \\\n && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n && useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n && python3 -m pip install -U pip \\\n && pip3 install -U setuptools \\\n && pip3 install Cython \\\n && pip3 install pytz==2015.7 \\\n && pip3 install pyOpenSSL \\\n && pip3 install ndg-httpsclient \\\n && pip3 install pyasn1 \\\n && pip3 install click \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/incubator-airflow.git#egg=airflow[async,crypto,password,postgres,hive,s3] \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/eastern-state.git \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/s3-sftp-sync.git \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/jsontableschema-sql-py.git#egg=jsontableschema_sql \\\n && pip3 install git+https://github.com/CityOfPhiladelphia/the-el.git#egg=the_el \\\n && apt-get remove --purge -yqq $buildDeps \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc /usr/share/doc-base\n#   instant sql-plus instant oracle client\nRUN set -ex \\\n && wget https://www.dropbox.com/s/ubgeht3m59bhfh1/oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n && mv oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm \\\n && alien -i oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm \\\n && rm oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm\n#   instant basic-lite instant oracle client\nRUN set -ex \\\n && wget https://www.dropbox.com/s/1yzl0fdnaiw5yqp/oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n && mv oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm \\\n && alien -i oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm \\\n && rm oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm\n#   instant oracle-sdk\nRUN set -ex \\\n && wget https://www.dropbox.com/s/uic5vzc9yobttct/oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n && mv oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm \\\n && alien -i oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm \\\n && rm oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm\nCOPY scripts/entrypoint.sh /entrypoint.sh\nCOPY requirements.txt /requirements.txt\nCOPY config/airflow.cfg ${AIRFLOW_HOME}/airflow.cfg\nCOPY scripts/users.py ${AIRFLOW_HOME}/users.py\nCOPY dags ${AIRFLOW_HOME}/dags\nCOPY plugins ${AIRFLOW_HOME}/plugins\nRUN chown -R airflow: ${AIRFLOW_HOME}\nEXPOSE 8080/tcp\nUSER airflow\nWORKDIR ${AIRFLOW_HOME}\nENTRYPOINT [\"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"6618c1053dd3d3d78ca17eda8b1bc3e7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/febcf66852fca7e18e5a7422370c7c34e65c79b3.dockerfile"}