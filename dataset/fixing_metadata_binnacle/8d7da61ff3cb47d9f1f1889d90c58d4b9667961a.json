{"seed":2885932404,"processedDockerfileHash":"519986edd3de9911f2a010258e93f316","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#  ##\n#   Ambientum\n#\n#   Repository:    PHP\n#   Image:         CLI/Base\n#   Version:       7.3.x\n#   Strategy:      PHP From PHP-Alpine Repository (CODECASTS) (https://php-alpine.codecasts.rocks)\n#   Base distro:   Alpine 3.9\n#\nFROM alpine:3.9\n#   Repository/Image Maintainer\nLABEL maintainer=\"Diego Hernandes <iamhernandev@gmail.com>\"\n#   Variables for enabling NewRelic\nENV FRAMEWORK=\"laravel\" \\\n    OPCACHE_MODE=\"normal\" \\\n    PHP_MEMORY_LIMIT=\"256M\" \\\n    XDEBUG_ENABLED=\"false\" \\\n    NR_ENABLED=\"false\" \\\n    NR_APP_NAME=\"\" \\\n    NR_LICENSE_KEY=\"\" \\\n    TERM=\"xterm-256color\" \\\n    COLORTERM=\"truecolor\" \\\n    COMPOSER_PROCESS_TIMEOUT=\"1200\"\n#   Add the ENTRYPOINT script\nCOPY start.sh /scripts/start.sh\nCOPY bashrc /home/ambientum/.bashrc\nCOPY bashrc /home/bashrc\n#   Install PHP From DotDeb, Common Extensions, Composer and then cleanup\nRUN echo \"---> Enabling PHP-Alpine\" \\\n && apk add wget=1.20.3-r0 --update \\\n && wget -O /etc/apk/keys/php-alpine.rsa.pub https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/main\" > /etc/apk/repositories \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/community\" >> /etc/apk/repositories \\\n && echo \"https://dl.bintray.com/php-alpine/v3.9/php-7.3\" >> /etc/apk/repositories \\\n && apk add curl=7.64.0-r5 bash=4.4.19-r1 fontconfig=2.13.1-r0 libxrender=0.9.10-r3 libxext=1.3.3-r3 imagemagick=7.0.8.68-r0 nano=3.2-r0 vim=8.1.1365-r0 git=2.20.4-r0 unzip=6.0-r6 wget=1.20.3-r0 make=4.2.1-r2 sudo=1.8.25_p1-r3 --update \\\n && echo \"---> Preparing and Installing PHP\" \\\n && apk add php php-apcu php-bcmath php-bz2 php-calendar php-curl php-ctype php-exif php-fpm php-gd php-gmp php-iconv php-imagick php-imap php-intl php-json php-mbstring php-mysqli php-mysqlnd php-pdo_mysql php-memcached php-mongodb php-opcache php-pdo_pgsql php-pgsql php-posix php-redis php-soap php-sodium php-sqlite3 php-pdo_sqlite php-xdebug php-xml php-xmlreader php-openssl php-phar php-xsl php-zip php-zlib php-pcntl php-cgi php-phpdbg --update \\\n && sudo ln -s /usr/bin/php7 /usr/bin/php \\\n && sudo ln -s /usr/bin/php-cgi7 /usr/bin/php-cgi \\\n && sudo ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm \\\n && echo \"---> Installing Composer\" \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && echo \"---> Cleaning up\" \\\n && rm -rf /tmp/* \\\n && echo \"---> Adding the ambientum user\" \\\n && adduser -D -u 1000 ambientum \\\n && mkdir -p /var/www/app \\\n && chown -R ambientum:ambientum /var/www \\\n && wget -O /tini https://github.com/krallin/tini/releases/download/v0.18.0/tini-static \\\n && chmod +x /tini \\\n && echo \"---> Configuring PHP\" \\\n && echo \"ambientum ALL = ( ALL ) NOPASSWD: ALL\" >> /etc/sudoers \\\n && sed -i \"/user = .*/c\\user = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/^group = .*/c\\group = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/listen.owner = .*/c\\listen.owner = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/listen.group = .*/c\\listen.group = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/listen = .*/c\\listen = [::]:9000\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/;access.log = .*/c\\access.log = /proc/self/fd/2\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/;clear_env = .*/c\\clear_env = no\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/;catch_workers_output = .*/c\\catch_workers_output = yes\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/pid = .*/c\\;pid = /run/php/php7.1-fpm.pid\" /etc/php7/php-fpm.conf \\\n && sed -i \"/;daemonize = .*/c\\daemonize = yes\" /etc/php7/php-fpm.conf \\\n && sed -i \"/error_log = .*/c\\error_log = /proc/self/fd/2\" /etc/php7/php-fpm.conf \\\n && sed -i \"/post_max_size = .*/c\\post_max_size = 1000M\" /etc/php7/php.ini \\\n && sed -i \"/upload_max_filesize = .*/c\\upload_max_filesize = 1000M\" /etc/php7/php.ini \\\n && sed -i \"/zend_extension=xdebug/c\\;zend_extension=xdebug\" /etc/php7/conf.d/00_xdebug.ini \\\n && echo \"---> Adding Support for NewRelic\" \\\n && mkdir /tmp/newrelic \\\n && cd /tmp/newrelic \\\n && wget -r -l1 -nd -A\"linux-musl.tar.gz\" https://download.newrelic.com/php_agent/release/ \\\n && gzip -dc newrelic*.tar.gz | tar xf - \\\n && cd newrelic-php5* \\\n && rm -f /usr/lib/php7/modules/newrelic.so \\\n && cp ./agent/x64/newrelic-20180731.so /usr/lib/php7/modules/newrelic.so \\\n && cp ./daemon/newrelic-daemon.x64 /usr/bin/newrelic-daemon \\\n && cp ./scripts/newrelic.ini.template /scripts/newrelic.ini \\\n && mkdir /var/log/newrelic \\\n && chown -R ambientum:ambientum /var/log/newrelic \\\n && chown -R ambientum:ambientum /home/ambientum \\\n && chmod +x /scripts/start.sh \\\n && rm -rf /tmp/*\n#   Define the running user\nUSER ambientum\n#   Application directory\nWORKDIR \"/var/www/app\"\n#   Environment variables\nENV PATH=\"/home/ambientum/.composer/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n#   Define the entry point that tries to enable newrelic\nENTRYPOINT [\"/tini\", \"--\", \"/scripts/start.sh\"]\n#   As non daemon and single base image, it may be used as cli container\nCMD [\"/bin/bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##\n#  Ambientum\n#\n#  Repository:    PHP\n#  Image:         CLI/Base\n#  Version:       7.3.x\n#  Strategy:      PHP From PHP-Alpine Repository (CODECASTS) (https://php-alpine.codecasts.rocks)\n#  Base distro:   Alpine 3.9\n#\nFROM alpine:3.9\n#  Repository/Image Maintainer\nLABEL maintainer=\"Diego Hernandes <iamhernandev@gmail.com>\"\n#  Variables for enabling NewRelic\nENV FRAMEWORK=\"laravel\" \\\n    OPCACHE_MODE=\"normal\" \\\n    PHP_MEMORY_LIMIT=\"256M\" \\\n    XDEBUG_ENABLED=\"false\" \\\n    NR_ENABLED=\"false\" \\\n    NR_APP_NAME=\"\" \\\n    NR_LICENSE_KEY=\"\" \\\n    TERM=\"xterm-256color\" \\\n    COLORTERM=\"truecolor\" \\\n    COMPOSER_PROCESS_TIMEOUT=\"1200\"\n#  Add the ENTRYPOINT script\nADD start.sh /scripts/start.sh\nADD bashrc /home/ambientum/.bashrc\nADD bashrc /home/bashrc\n#  Install PHP From DotDeb, Common Extensions, Composer and then cleanup\nRUN echo \"---> Enabling PHP-Alpine\" \\\n && apk add --update wget \\\n && wget -O /etc/apk/keys/php-alpine.rsa.pub https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/main\" > /etc/apk/repositories \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/community\" >> /etc/apk/repositories \\\n && echo \"https://dl.bintray.com/php-alpine/v3.9/php-7.3\" >> /etc/apk/repositories \\\n && apk add --update curl bash fontconfig libxrender libxext imagemagick nano vim git unzip wget make sudo \\\n && echo \"---> Preparing and Installing PHP\" \\\n && apk add --update php php-apcu php-bcmath php-bz2 php-calendar php-curl php-ctype php-exif php-fpm php-gd php-gmp php-iconv php-imagick php-imap php-intl php-json php-mbstring php-mysqli php-mysqlnd php-pdo_mysql php-memcached php-mongodb php-opcache php-pdo_pgsql php-pgsql php-posix php-redis php-soap php-sodium php-sqlite3 php-pdo_sqlite php-xdebug php-xml php-xmlreader php-openssl php-phar php-xsl php-zip php-zlib php-pcntl php-cgi php-phpdbg \\\n && sudo ln -s /usr/bin/php7 /usr/bin/php \\\n && sudo ln -s /usr/bin/php-cgi7 /usr/bin/php-cgi \\\n && sudo ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm \\\n && echo \"---> Installing Composer\" \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && echo \"---> Cleaning up\" \\\n && rm -rf /tmp/* \\\n && echo \"---> Adding the ambientum user\" \\\n && adduser -D -u 1000 ambientum \\\n && mkdir -p /var/www/app \\\n && chown -R ambientum:ambientum /var/www \\\n && wget -O /tini https://github.com/krallin/tini/releases/download/v0.18.0/tini-static \\\n && chmod +x /tini \\\n && echo \"---> Configuring PHP\" \\\n && echo \"ambientum ALL = ( ALL ) NOPASSWD: ALL\" >> /etc/sudoers \\\n && sed -i \"/user = .*/c\\user = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/^group = .*/c\\group = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/listen.owner = .*/c\\listen.owner = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/listen.group = .*/c\\listen.group = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/listen = .*/c\\listen = [::]:9000\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/;access.log = .*/c\\access.log = /proc/self/fd/2\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/;clear_env = .*/c\\clear_env = no\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/;catch_workers_output = .*/c\\catch_workers_output = yes\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/pid = .*/c\\;pid = /run/php/php7.1-fpm.pid\" /etc/php7/php-fpm.conf \\\n && sed -i \"/;daemonize = .*/c\\daemonize = yes\" /etc/php7/php-fpm.conf \\\n && sed -i \"/error_log = .*/c\\error_log = /proc/self/fd/2\" /etc/php7/php-fpm.conf \\\n && sed -i \"/post_max_size = .*/c\\post_max_size = 1000M\" /etc/php7/php.ini \\\n && sed -i \"/upload_max_filesize = .*/c\\upload_max_filesize = 1000M\" /etc/php7/php.ini \\\n && sed -i \"/zend_extension=xdebug/c\\;zend_extension=xdebug\" /etc/php7/conf.d/00_xdebug.ini \\\n && echo \"---> Adding Support for NewRelic\" \\\n && mkdir /tmp/newrelic \\\n && cd /tmp/newrelic \\\n && wget -r -l1 -nd -A\"linux-musl.tar.gz\" https://download.newrelic.com/php_agent/release/ \\\n && gzip -dc newrelic*.tar.gz | tar xf - \\\n && cd newrelic-php5* \\\n && rm -f /usr/lib/php7/modules/newrelic.so \\\n && cp ./agent/x64/newrelic-20180731.so /usr/lib/php7/modules/newrelic.so \\\n && cp ./daemon/newrelic-daemon.x64 /usr/bin/newrelic-daemon \\\n && cp ./scripts/newrelic.ini.template /scripts/newrelic.ini \\\n && mkdir /var/log/newrelic \\\n && chown -R ambientum:ambientum /var/log/newrelic \\\n && chown -R ambientum:ambientum /home/ambientum \\\n && chmod +x /scripts/start.sh \\\n && rm -rf /tmp/*\n#  Define the running user\nUSER ambientum\n#  Application directory\nWORKDIR \"/var/www/app\"\n#  Environment variables\nENV PATH=\"/home/ambientum/.composer/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n#  Define the entry point that tries to enable newrelic\nENTRYPOINT [\"/tini\", \"--\", \"/scripts/start.sh\"]\n#  As non daemon and single base image, it may be used as cli container\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"3ba79358eb5fa7398f1d2340ac03d574","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##\n#   Ambientum\n#\n#   Repository:    PHP\n#   Image:         CLI/Base\n#   Version:       7.3.x\n#   Strategy:      PHP From PHP-Alpine Repository (CODECASTS) (https://php-alpine.codecasts.rocks)\n#   Base distro:   Alpine 3.9\n#\nFROM alpine:3.9\n#   Repository/Image Maintainer\nLABEL maintainer=\"Diego Hernandes <iamhernandev@gmail.com>\"\n#   Variables for enabling NewRelic\nENV FRAMEWORK=\"laravel\" \\\n    OPCACHE_MODE=\"normal\" \\\n    PHP_MEMORY_LIMIT=\"256M\" \\\n    XDEBUG_ENABLED=\"false\" \\\n    NR_ENABLED=\"false\" \\\n    NR_APP_NAME=\"\" \\\n    NR_LICENSE_KEY=\"\" \\\n    TERM=\"xterm-256color\" \\\n    COLORTERM=\"truecolor\" \\\n    COMPOSER_PROCESS_TIMEOUT=\"1200\"\n#   Add the ENTRYPOINT script\nADD start.sh /scripts/start.sh\nADD bashrc /home/ambientum/.bashrc\nADD bashrc /home/bashrc\n#   Install PHP From DotDeb, Common Extensions, Composer and then cleanup\nRUN echo \"---> Enabling PHP-Alpine\" \\\n && apk add --update wget \\\n && wget -O /etc/apk/keys/php-alpine.rsa.pub https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/main\" > /etc/apk/repositories \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/community\" >> /etc/apk/repositories \\\n && echo \"https://dl.bintray.com/php-alpine/v3.9/php-7.3\" >> /etc/apk/repositories \\\n && apk add --update curl bash fontconfig libxrender libxext imagemagick nano vim git unzip wget make sudo \\\n && echo \"---> Preparing and Installing PHP\" \\\n && apk add --update php php-apcu php-bcmath php-bz2 php-calendar php-curl php-ctype php-exif php-fpm php-gd php-gmp php-iconv php-imagick php-imap php-intl php-json php-mbstring php-mysqli php-mysqlnd php-pdo_mysql php-memcached php-mongodb php-opcache php-pdo_pgsql php-pgsql php-posix php-redis php-soap php-sodium php-sqlite3 php-pdo_sqlite php-xdebug php-xml php-xmlreader php-openssl php-phar php-xsl php-zip php-zlib php-pcntl php-cgi php-phpdbg \\\n && sudo ln -s /usr/bin/php7 /usr/bin/php \\\n && sudo ln -s /usr/bin/php-cgi7 /usr/bin/php-cgi \\\n && sudo ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm \\\n && echo \"---> Installing Composer\" \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && echo \"---> Cleaning up\" \\\n && rm -rf /tmp/* \\\n && echo \"---> Adding the ambientum user\" \\\n && adduser -D -u 1000 ambientum \\\n && mkdir -p /var/www/app \\\n && chown -R ambientum:ambientum /var/www \\\n && wget -O /tini https://github.com/krallin/tini/releases/download/v0.18.0/tini-static \\\n && chmod +x /tini \\\n && echo \"---> Configuring PHP\" \\\n && echo \"ambientum ALL = ( ALL ) NOPASSWD: ALL\" >> /etc/sudoers \\\n && sed -i \"/user = .*/c\\user = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/^group = .*/c\\group = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/listen.owner = .*/c\\listen.owner = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/listen.group = .*/c\\listen.group = ambientum\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/listen = .*/c\\listen = [::]:9000\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/;access.log = .*/c\\access.log = /proc/self/fd/2\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/;clear_env = .*/c\\clear_env = no\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/;catch_workers_output = .*/c\\catch_workers_output = yes\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"/pid = .*/c\\;pid = /run/php/php7.1-fpm.pid\" /etc/php7/php-fpm.conf \\\n && sed -i \"/;daemonize = .*/c\\daemonize = yes\" /etc/php7/php-fpm.conf \\\n && sed -i \"/error_log = .*/c\\error_log = /proc/self/fd/2\" /etc/php7/php-fpm.conf \\\n && sed -i \"/post_max_size = .*/c\\post_max_size = 1000M\" /etc/php7/php.ini \\\n && sed -i \"/upload_max_filesize = .*/c\\upload_max_filesize = 1000M\" /etc/php7/php.ini \\\n && sed -i \"/zend_extension=xdebug/c\\;zend_extension=xdebug\" /etc/php7/conf.d/00_xdebug.ini \\\n && echo \"---> Adding Support for NewRelic\" \\\n && mkdir /tmp/newrelic \\\n && cd /tmp/newrelic \\\n && wget -r -l1 -nd -A\"linux-musl.tar.gz\" https://download.newrelic.com/php_agent/release/ \\\n && gzip -dc newrelic*.tar.gz | tar xf - \\\n && cd newrelic-php5* \\\n && rm -f /usr/lib/php7/modules/newrelic.so \\\n && cp ./agent/x64/newrelic-20180731.so /usr/lib/php7/modules/newrelic.so \\\n && cp ./daemon/newrelic-daemon.x64 /usr/bin/newrelic-daemon \\\n && cp ./scripts/newrelic.ini.template /scripts/newrelic.ini \\\n && mkdir /var/log/newrelic \\\n && chown -R ambientum:ambientum /var/log/newrelic \\\n && chown -R ambientum:ambientum /home/ambientum \\\n && chmod +x /scripts/start.sh \\\n && rm -rf /tmp/*\n#   Define the running user\nUSER ambientum\n#   Application directory\nWORKDIR \"/var/www/app\"\n#   Environment variables\nENV PATH=\"/home/ambientum/.composer/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n#   Define the entry point that tries to enable newrelic\nENTRYPOINT [\"/tini\", \"--\", \"/scripts/start.sh\"]\n#   As non daemon and single base image, it may be used as cli container\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"cdd7112ef94b014e74114606cdcc1289","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8d7da61ff3cb47d9f1f1889d90c58d4b9667961a.dockerfile"}