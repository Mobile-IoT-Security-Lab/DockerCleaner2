{"seed":2052638280,"processedDockerfileHash":"552449aa512e996051f473b3daa3e2ab","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This Source Code Form is subject to the terms of the Mozilla Public\n#   License, v. 2.0. If a copy of the MPL was not distributed with this\n#   file, You can obtain one at http://mozilla.org/MPL/2.0/.\n#\n#    FLOWDB\n#    -----\n#\n#\n#    This image is based on the official\n#    PostgreSQL image, which is based\n#    on the official Debian Stretch (9) image.\n#\nARG POSTGRES_RELEASE=11\nARG POSTGRES_DIGEST=fb0ff33f663bcb5bc4962cac44ccffb57f4523c1fc2a17b0504db1c07c1d2666\nFROM postgres:$POSTGRES_RELEASE@sha256:$POSTGRES_DIGEST\nARG POSTGRES_RELEASE\nENV POSTGRES_RELEASE=\"$POSTGRES_RELEASE\"\nARG POSTGIS_MAJOR=2.5\nENV POSTGIS_MAJOR=\"$POSTGIS_MAJOR\"\nARG POSTGIS_VERSION=2.5.2\nENV POSTGIS_VERSION=\"$POSTGIS_VERSION\"\nENV POSTGRES_DB=\"flowdb\"\nARG POSTGRES_USER=flowdb\nENV POSTGRES_USER=\"$POSTGRES_USER\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgis gdal-bin postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts postgresql-$PG_MAJOR-pgrouting -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove\n#\n#    Setting up locale settings. This will\n#    eventually fix encoding issues.\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales locales-all -y \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && locale-gen \\\n && rm -rf /var/lib/apt/lists/*\n#\n#    INSTALLING DEPENDENCIES\n#    -----------------------\n#\n#    In this section we install the dependencies\n#    that the database will use when analysing\n#    data.\n#\n#   Install some useful extras & python dependencies\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends unzip curl make libaio1 parallel nano vim python3-pip wget python3-setuptools postgresql-plpython-$PG_MAJOR postgresql-$PG_MAJOR-cron -y \\\n && apt-get purge -y --auto-remove \\\n && rm -rf /var/lib/apt/lists/*\n#   add requirements for pg_admin debugging\nENV USE_PGXS=\"1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libssl-dev libkrb5-dev build-essential git postgresql-server-dev-$PG_MAJOR -y \\\n && git clone https://git.postgresql.org/git/pldebugger.git \\\n && mv pldebugger /usr/local/src \\\n && make -C /usr/local/src/pldebugger \\\n && make -C /usr/local/src/pldebugger install \\\n && apt-get remove -y libssl-dev libkrb5-dev postgresql-server-dev-$PG_MAJOR build-essential git \\\n && apt-get purge -y --auto-remove \\\n && rm -rf /var/lib/apt/lists/*\n#\n#    CONFIGURATION\n#    -------------\n#\n#    In this section packages installed in previous\n#    steps are properly configured. That happens by\n#    either modifying configuration files (*.config)\n#    or by loading *.sh scripts that will gradually\n#    do that.\n#\nRUN mkdir -p /docker-entrypoint-initdb.d\n#\n#    Let's now install the `flowdb-cli` program\n#    and run its automatic configuration command.\n#\n#    pipenv uses the first pip and python found in the\n#    PATH so we need to force the right python version\n#    together with the appropriate headers, otherwise\n#    psutil fails to install.\n#\nCOPY ./Pipfile* /tmp/\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3-dev gcc m4 libxml2-dev libaio-dev -y \\\n && pip3 install pgxnclient \\\n && pip3 install pipenv \\\n && PIPENV_PIPFILE=/tmp/Pipfile pipenv install --system --deploy --three \\\n && apt-get remove -y python3-dev gcc m4 libxml2-dev libaio-dev \\\n && apt-get purge -y --auto-remove \\\n && rm -rf /var/lib/apt/lists/*\n#   Version Information\n#   Set the version & release date\nARG FLOWDB_VERSION=v1.7.2\nENV FLOWDB_VERSION=\"$FLOWDB_VERSION\"\nARG FLOWDB_RELEASE_DATE='3000-12-12'\nENV FLOWDB_RELEASE_DATE=\"$FLOWDB_RELEASE_DATE\"\n#   Default users\nENV FLOWMACHINE_FLOWDB_USER=\"flowmachine\"\nENV FLOWAPI_FLOWDB_USER=\"flowapi\"\n#   Default location table\nENV LOCATION_TABLE=\"infrastructure.cells\"\n#\n#    Copy file spinup build scripts to be execed.\n#\nCOPY --chown=postgres ./bin/build/* /docker-entrypoint-initdb.d/\n#\n#    Add local data to PostgreSQL data ingestion\n#    directory. Files in that directory will be\n#    ingested by PostgreSQL on build-time.\n#\nCOPY --chown=postgres ./sql/* /docker-entrypoint-initdb.d/\nCOPY --chown=postgres ./data/* /docker-entrypoint-initdb.d/data/csv/\n#   Need to make postgres owner\nRUN chown -R postgres /docker-entrypoint-initdb.d\nEXPOSE 5432/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This Source Code Form is subject to the terms of the Mozilla Public\n#  License, v. 2.0. If a copy of the MPL was not distributed with this\n#  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n#\n#   FLOWDB\n#   -----\n#\n#\n#   This image is based on the official\n#   PostgreSQL image, which is based\n#   on the official Debian Stretch (9) image.\n#\nARG POSTGRES_RELEASE=11\nARG POSTGRES_DIGEST=fb0ff33f663bcb5bc4962cac44ccffb57f4523c1fc2a17b0504db1c07c1d2666\nFROM postgres:$POSTGRES_RELEASE@sha256:$POSTGRES_DIGEST\nARG POSTGRES_RELEASE\nENV POSTGRES_RELEASE=\"$POSTGRES_RELEASE\"\nARG POSTGIS_MAJOR=2.5\nENV POSTGIS_MAJOR=\"$POSTGIS_MAJOR\"\nARG POSTGIS_VERSION=2.5.2\nENV POSTGIS_VERSION=\"$POSTGIS_VERSION\"\nENV POSTGRES_DB=\"flowdb\"\nARG POSTGRES_USER=flowdb\nENV POSTGRES_USER=\"$POSTGRES_USER\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgis gdal-bin postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts postgresql-$PG_MAJOR-pgrouting -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove\n#\n#   Setting up locale settings. This will\n#   eventually fix encoding issues.\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales locales-all -y \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && locale-gen \\\n && rm -rf /var/lib/apt/lists/*\n#\n#   INSTALLING DEPENDENCIES\n#   -----------------------\n#\n#   In this section we install the dependencies\n#   that the database will use when analysing\n#   data.\n#\n#  Install some useful extras & python dependencies\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends unzip curl make libaio1 parallel nano vim python3-pip wget python3-setuptools postgresql-plpython-$PG_MAJOR postgresql-$PG_MAJOR-cron -y \\\n && apt-get purge -y --auto-remove \\\n && rm -rf /var/lib/apt/lists/*\n#  add requirements for pg_admin debugging\nENV USE_PGXS=\"1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libssl-dev libkrb5-dev build-essential git postgresql-server-dev-$PG_MAJOR -y \\\n && git clone https://git.postgresql.org/git/pldebugger.git \\\n && mv pldebugger /usr/local/src \\\n && make -C /usr/local/src/pldebugger \\\n && make -C /usr/local/src/pldebugger install \\\n && apt-get remove -y libssl-dev libkrb5-dev postgresql-server-dev-$PG_MAJOR build-essential git \\\n && apt-get purge -y --auto-remove \\\n && rm -rf /var/lib/apt/lists/*\n#\n#   CONFIGURATION\n#   -------------\n#\n#   In this section packages installed in previous\n#   steps are properly configured. That happens by\n#   either modifying configuration files (*.config)\n#   or by loading *.sh scripts that will gradually\n#   do that.\n#\nRUN mkdir -p /docker-entrypoint-initdb.d\n#\n#   Let's now install the `flowdb-cli` program\n#   and run its automatic configuration command.\n#\n#   pipenv uses the first pip and python found in the\n#   PATH so we need to force the right python version\n#   together with the appropriate headers, otherwise\n#   psutil fails to install.\n#\nCOPY ./Pipfile* /tmp/\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3-dev gcc m4 libxml2-dev libaio-dev -y \\\n && pip3 install pgxnclient \\\n && pip3 install pipenv \\\n && PIPENV_PIPFILE=/tmp/Pipfile pipenv install --system --deploy --three \\\n && apt-get remove -y python3-dev gcc m4 libxml2-dev libaio-dev \\\n && apt-get purge -y --auto-remove \\\n && rm -rf /var/lib/apt/lists/*\n#  Version Information\n#  Set the version & release date\nARG FLOWDB_VERSION=v1.7.2\nENV FLOWDB_VERSION=\"$FLOWDB_VERSION\"\nARG FLOWDB_RELEASE_DATE='3000-12-12'\nENV FLOWDB_RELEASE_DATE=\"$FLOWDB_RELEASE_DATE\"\n#  Default users\nENV FLOWMACHINE_FLOWDB_USER=\"flowmachine\"\nENV FLOWAPI_FLOWDB_USER=\"flowapi\"\n#  Default location table\nENV LOCATION_TABLE=\"infrastructure.cells\"\n#\n#   Copy file spinup build scripts to be execed.\n#\nCOPY --chown=postgres ./bin/build/* /docker-entrypoint-initdb.d/\n#\n#   Add local data to PostgreSQL data ingestion\n#   directory. Files in that directory will be\n#   ingested by PostgreSQL on build-time.\n#\nADD --chown=postgres ./sql/* /docker-entrypoint-initdb.d/\nADD --chown=postgres ./data/* /docker-entrypoint-initdb.d/data/csv/\n#  Need to make postgres owner\nRUN chown -R postgres /docker-entrypoint-initdb.d\nEXPOSE 5432/tcp\n","injectedSmells":[],"originalDockerfileHash":"62b4edc2009fc357e19022d87a58c648","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This Source Code Form is subject to the terms of the Mozilla Public\n#   License, v. 2.0. If a copy of the MPL was not distributed with this\n#   file, You can obtain one at http://mozilla.org/MPL/2.0/.\n#\n#    FLOWDB\n#    -----\n#\n#\n#    This image is based on the official\n#    PostgreSQL image, which is based\n#    on the official Debian Stretch (9) image.\n#\nARG POSTGRES_RELEASE=11\nARG POSTGRES_DIGEST=fb0ff33f663bcb5bc4962cac44ccffb57f4523c1fc2a17b0504db1c07c1d2666\nFROM postgres:$POSTGRES_RELEASE@sha256:$POSTGRES_DIGEST\nARG POSTGRES_RELEASE\nENV POSTGRES_RELEASE=\"$POSTGRES_RELEASE\"\nARG POSTGIS_MAJOR=2.5\nENV POSTGIS_MAJOR=\"$POSTGIS_MAJOR\"\nARG POSTGIS_VERSION=2.5.2\nENV POSTGIS_VERSION=\"$POSTGIS_VERSION\"\nENV POSTGRES_DB=\"flowdb\"\nARG POSTGRES_USER=flowdb\nENV POSTGRES_USER=\"$POSTGRES_USER\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgis gdal-bin postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts postgresql-$PG_MAJOR-pgrouting -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove\n#\n#    Setting up locale settings. This will\n#    eventually fix encoding issues.\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales locales-all -y \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && locale-gen \\\n && rm -rf /var/lib/apt/lists/*\n#\n#    INSTALLING DEPENDENCIES\n#    -----------------------\n#\n#    In this section we install the dependencies\n#    that the database will use when analysing\n#    data.\n#\n#   Install some useful extras & python dependencies\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends unzip curl make libaio1 parallel nano vim python3-pip wget python3-setuptools postgresql-plpython-$PG_MAJOR postgresql-$PG_MAJOR-cron -y \\\n && apt-get purge -y --auto-remove \\\n && rm -rf /var/lib/apt/lists/*\n#   add requirements for pg_admin debugging\nENV USE_PGXS=\"1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libssl-dev libkrb5-dev build-essential git postgresql-server-dev-$PG_MAJOR -y \\\n && git clone https://git.postgresql.org/git/pldebugger.git \\\n && mv pldebugger /usr/local/src \\\n && make -C /usr/local/src/pldebugger \\\n && make -C /usr/local/src/pldebugger install \\\n && apt-get remove -y libssl-dev libkrb5-dev postgresql-server-dev-$PG_MAJOR build-essential git \\\n && apt-get purge -y --auto-remove \\\n && rm -rf /var/lib/apt/lists/*\n#\n#    CONFIGURATION\n#    -------------\n#\n#    In this section packages installed in previous\n#    steps are properly configured. That happens by\n#    either modifying configuration files (*.config)\n#    or by loading *.sh scripts that will gradually\n#    do that.\n#\nRUN mkdir -p /docker-entrypoint-initdb.d\n#\n#    Let's now install the `flowdb-cli` program\n#    and run its automatic configuration command.\n#\n#    pipenv uses the first pip and python found in the\n#    PATH so we need to force the right python version\n#    together with the appropriate headers, otherwise\n#    psutil fails to install.\n#\nCOPY ./Pipfile* /tmp/\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3-dev gcc m4 libxml2-dev libaio-dev -y \\\n && pip3 install pgxnclient \\\n && pip3 install pipenv \\\n && PIPENV_PIPFILE=/tmp/Pipfile pipenv install --system --deploy --three \\\n && apt-get remove -y python3-dev gcc m4 libxml2-dev libaio-dev \\\n && apt-get purge -y --auto-remove \\\n && rm -rf /var/lib/apt/lists/*\n#   Version Information\n#   Set the version & release date\nARG FLOWDB_VERSION=v1.7.2\nENV FLOWDB_VERSION=\"$FLOWDB_VERSION\"\nARG FLOWDB_RELEASE_DATE='3000-12-12'\nENV FLOWDB_RELEASE_DATE=\"$FLOWDB_RELEASE_DATE\"\n#   Default users\nENV FLOWMACHINE_FLOWDB_USER=\"flowmachine\"\nENV FLOWAPI_FLOWDB_USER=\"flowapi\"\n#   Default location table\nENV LOCATION_TABLE=\"infrastructure.cells\"\n#\n#    Copy file spinup build scripts to be execed.\n#\nCOPY --chown=postgres ./bin/build/* /docker-entrypoint-initdb.d/\n#\n#    Add local data to PostgreSQL data ingestion\n#    directory. Files in that directory will be\n#    ingested by PostgreSQL on build-time.\n#\nADD --chown=postgres ./sql/* /docker-entrypoint-initdb.d/\nADD --chown=postgres ./data/* /docker-entrypoint-initdb.d/data/csv/\n#   Need to make postgres owner\nRUN chown -R postgres /docker-entrypoint-initdb.d\nEXPOSE 5432/tcp\n","originalDockerfileUglifiedHash":"46af3701a1b9f76aa78cceb2998a2a3e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3107456b2501f2518f2a53a8922d4def84cc2767.dockerfile"}