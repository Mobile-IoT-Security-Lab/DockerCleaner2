{"seed":3876218161,"processedDockerfileHash":"5d4df9940b6e7cfe3532251a33b61b9e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Modified from h\\ttps://github.com/saiprashanths/dl-docker\nFROM nvidia/cuda:7.5-cudnn5-devel\nMAINTAINER Brian Lee Yung Rowe <rowe@zatonovo.com>\nARG THEANO_VERSION=rel-0.8.2\nARG KERAS_VERSION=1.1.0\nARG TORCH_VERSION=latest\n#   Install some dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl wget git nano vim bc build-essential pkg-config software-properties-common cmake g++ gfortran libopenblas-dev liblapack-dev libffi-dev libfreetype6-dev libhdf5-dev liblcms2-dev libjpeg-dev libopenjpeg2 libpng12-dev libtiff5-dev libssl-dev libwebp-dev libzmq3-dev python-dev zlib1g-dev unzip -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install latest version of pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Add SNI support to Python\nRUN pip install pyopenssl==23.1.1 ndg-httpsclient==0.5.1 pyasn1==0.4.8 --no-cache-dir\n#   Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n#   especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install other useful Python packages using pip\nRUN pip install ipython==8.12.0 --no-cache-dir --upgrade \\\n && pip install Cython==0.29.34 ipykernel==6.22.0 jupyter==1.0.0 path.py==12.5.0 Pillow==9.5.0 pygments==2.15.0 six==1.16.0 sphinx==6.1.3 wheel==0.40.0 zmq==0.0.0 --no-cache-dir \\\n && python -m ipykernel.kernelspec\n#   Install Theano and set up Theano config (.theanorc) for CUDA and OpenBLAS\nRUN pip install git+git://github.com/Theano/Theano.git@${THEANO_VERSION} --no-cache-dir \\\n && echo \"[global]\\ndevice=gpu\\nfloatX=float32\\noptimizer_including=cudnn\\nmode=FAST_RUN \\n[lib]\\ncnmem=0.95 \\n[nvcc]\\nfastmath=True \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\n[DebugMode]\\ncheck_finite=1\" > /root/.theanorc\n#   Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@${KERAS_VERSION} --no-cache-dir\n#   Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && yes no | ./install.sh\n#   Export the LUA evironment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\" \\\n    LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" \\\n    PATH=\"/root/torch/install/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\" \\\n    DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\n#   Install the latest versions of nn, cutorch, cunn, cuDNN bindings and iTorch\nRUN luarocks install nn \\\n && luarocks install cutorch \\\n && luarocks install cunn \\\n && luarocks install dp \\\n && luarocks install mnist \\\n && luarocks install qtlua \\\n && cd /root \\\n && git clone https://github.com/soumith/cudnn.torch.git \\\n && cd cudnn.torch \\\n && git checkout R4 \\\n && luarocks make \\\n && cd /root \\\n && git clone https://github.com/facebook/iTorch.git \\\n && cd iTorch \\\n && luarocks make\nRUN wget https://raw.githubusercontent.com/rtsisyk/luafun/master/fun-scm-1.rockspec \\\n && luarocks install fun-scm-1.rockspec\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#   Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n#   Use theano backend\nCOPY keras.json /root/.keras/\n#   Expose Ports for IPython (8888)\nEXPOSE 8888/tcp\nWORKDIR \"/code\"\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Modified from h\\ttps://github.com/saiprashanths/dl-docker\nFROM nvidia/cuda:7.5-cudnn5-devel\nMAINTAINER Brian Lee Yung Rowe <rowe@zatonovo.com>\nARG THEANO_VERSION=rel-0.8.2\nARG KERAS_VERSION=1.1.0\nARG TORCH_VERSION=latest\n#  Install some dependencies\nRUN apt-get update \\\n && apt-get install curl wget git nano vim bc build-essential pkg-config software-properties-common cmake g++ gfortran libopenblas-dev liblapack-dev libffi-dev libfreetype6-dev libhdf5-dev liblcms2-dev libjpeg-dev libopenjpeg2 libpng12-dev libtiff5-dev libssl-dev libwebp-dev libzmq3-dev python-dev zlib1g-dev unzip -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#  Install latest version of pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#  Add SNI support to Python\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --no-cache-dir\n#  Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n#  especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update \\\n && apt-get install python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#  Install other useful Python packages using pip\nRUN pip install ipython --no-cache-dir --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq --no-cache-dir \\\n && python -m ipykernel.kernelspec\n#  Install Theano and set up Theano config (.theanorc) for CUDA and OpenBLAS\nRUN pip install git+git://github.com/Theano/Theano.git@${THEANO_VERSION} --no-cache-dir \\\n && echo \"[global]\\ndevice=gpu\\nfloatX=float32\\noptimizer_including=cudnn\\nmode=FAST_RUN \\n[lib]\\ncnmem=0.95 \\n[nvcc]\\nfastmath=True \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\n[DebugMode]\\ncheck_finite=1\" > /root/.theanorc\n#  Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@${KERAS_VERSION} --no-cache-dir\n#  Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && yes no | ./install.sh\n#  Export the LUA evironment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\" \\\n    LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" \\\n    PATH=\"/root/torch/install/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\" \\\n    DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\n#  Install the latest versions of nn, cutorch, cunn, cuDNN bindings and iTorch\nRUN luarocks install nn \\\n && luarocks install cutorch \\\n && luarocks install cunn \\\n && luarocks install dp \\\n && luarocks install mnist \\\n && luarocks install qtlua \\\n && cd /root \\\n && git clone https://github.com/soumith/cudnn.torch.git \\\n && cd cudnn.torch \\\n && git checkout R4 \\\n && luarocks make \\\n && cd /root \\\n && git clone https://github.com/facebook/iTorch.git \\\n && cd iTorch \\\n && luarocks make\nRUN wget https://raw.githubusercontent.com/rtsisyk/luafun/master/fun-scm-1.rockspec \\\n && luarocks install fun-scm-1.rockspec\n#  Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#  Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n#  Use theano backend\nCOPY keras.json /root/.keras/\n#  Expose Ports for IPython (8888)\nEXPOSE 8888/tcp\nWORKDIR \"/code\"\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"1bc3883557ec2791c43e77a0e70a6531","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Modified from h\\ttps://github.com/saiprashanths/dl-docker\nFROM nvidia/cuda:7.5-cudnn5-devel\nMAINTAINER Brian Lee Yung Rowe <rowe@zatonovo.com>\nARG THEANO_VERSION=rel-0.8.2\nARG KERAS_VERSION=1.1.0\nARG TORCH_VERSION=latest\n#   Install some dependencies\nRUN apt-get update \\\n && apt-get install curl wget git nano vim bc build-essential pkg-config software-properties-common cmake g++ gfortran libopenblas-dev liblapack-dev libffi-dev libfreetype6-dev libhdf5-dev liblcms2-dev libjpeg-dev libopenjpeg2 libpng12-dev libtiff5-dev libssl-dev libwebp-dev libzmq3-dev python-dev zlib1g-dev unzip -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install latest version of pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Add SNI support to Python\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --no-cache-dir\n#   Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n#   especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update \\\n && apt-get install python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install other useful Python packages using pip\nRUN pip install ipython --no-cache-dir --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq --no-cache-dir \\\n && python -m ipykernel.kernelspec\n#   Install Theano and set up Theano config (.theanorc) for CUDA and OpenBLAS\nRUN pip install git+git://github.com/Theano/Theano.git@${THEANO_VERSION} --no-cache-dir \\\n && echo \"[global]\\ndevice=gpu\\nfloatX=float32\\noptimizer_including=cudnn\\nmode=FAST_RUN \\n[lib]\\ncnmem=0.95 \\n[nvcc]\\nfastmath=True \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\n[DebugMode]\\ncheck_finite=1\" > /root/.theanorc\n#   Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@${KERAS_VERSION} --no-cache-dir\n#   Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && yes no | ./install.sh\n#   Export the LUA evironment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\" \\\n    LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" \\\n    PATH=\"/root/torch/install/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\" \\\n    DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\n#   Install the latest versions of nn, cutorch, cunn, cuDNN bindings and iTorch\nRUN luarocks install nn \\\n && luarocks install cutorch \\\n && luarocks install cunn \\\n && luarocks install dp \\\n && luarocks install mnist \\\n && luarocks install qtlua \\\n && cd /root \\\n && git clone https://github.com/soumith/cudnn.torch.git \\\n && cd cudnn.torch \\\n && git checkout R4 \\\n && luarocks make \\\n && cd /root \\\n && git clone https://github.com/facebook/iTorch.git \\\n && cd iTorch \\\n && luarocks make\nRUN wget https://raw.githubusercontent.com/rtsisyk/luafun/master/fun-scm-1.rockspec \\\n && luarocks install fun-scm-1.rockspec\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#   Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n#   Use theano backend\nCOPY keras.json /root/.keras/\n#   Expose Ports for IPython (8888)\nEXPOSE 8888/tcp\nWORKDIR \"/code\"\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"c85e502e2f51961bff5506da6f527d4d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7a4b56be92bf7d61ecfc0567c7fc85540034565e.dockerfile"}