{"seed":1650601128,"processedDockerfileHash":"5e78a4e7afa731bb7b434011daf1f8c8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-gem","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bison=2:3.0.4.dfsg-1 g++=4:5.3.1-1ubuntu1 gcc=4:5.3.1-1ubuntu1 gdb=7.11.1-0ubuntu1~16.5 git=1:2.7.4-0ubuntu1.10 libevent-dev=2.0.21-stable-2ubuntu0.16.04.1 liblz4-dev=0.0~r131-2ubuntu2 libmecab-dev=0.996-1.2ubuntu1 libmsgpack-dev=0.5.7-3ubuntu1 libssl-dev=1.0.2g-1ubuntu4.20 libstemmer-dev=0+svn585-1 libzmq-dev=2.2.0+dfsg-7 libzstd-dev=0.5.1-1 make=4.1-6 mecab-naist-jdic=0.6.3.b-20111013-7 pkg-config=0.29.1-0ubuntu1 rapidjson-dev=0.12~git20141031-3 rsync=3.1.1-3ubuntu1.3 ruby=1:2.3.0+1 ruby-dev=1:2.3.0+1 sudo=1.8.16-0ubuntu1.10 tzdata=2021a-0ubuntu0.16.04 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -qq -y\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.10 -qq -y \\\n && add-apt-repository -y ppa:cutter-testing-framework/ppa \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends cutter-testing-framework -qq -y\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends apt-transport-https=1.2.35 curl=7.47.0-1ubuntu2.19 lsb-release=9.20160110ubuntu0.2 -qq -y \\\n && curl https://dist.apache.org/repos/dist/dev/arrow/KEYS | apt-key add - \\\n && echo \"deb [arch=amd64] https://dl.bintray.com/apache/arrow/$( lsb_release --id --short | tr 'A-Z' 'a-z' ;)/ $( lsb_release --codename --short ;) main\" > /etc/apt/sources.list.d/apache-arrow.list \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends libarrow-dev -qq -y\nRUN gem install bundler --version 2.4.12\nRUN useradd --user-group --create-home groonga\nRUN echo \"groonga ALL=(ALL:ALL) NOPASSWD:ALL\" | EDITOR=tee visudo -f /etc/sudoers.d/groonga\nCOPY . /home/groonga/source\nUSER groonga\nWORKDIR /home/groonga\nRUN mkdir -p build\nWORKDIR /home/groonga/build\nRUN ../source/configure --prefix=/tmp/local --enable-debug --with-ruby --enable-mruby\nRUN make -j$( nproc ;) > /dev/null\nRUN mkdir -p /tmp/local/var/log/groonga/httpd/\nRUN rsync -a --include \"*.rb\" --include \"*/\" --exclude \"*\" ../source/plugins/ plugins/\nRUN mkdir -p test/command \\\n && rsync -a --delete ../source/test/command/suite/ test/command/suite/\nCMD BUILD_DIR=test/unit ../source/test/unit/run-test.sh \\\n && BUILD_DIR=test/mruby ../source/test/mruby/run-test.rb \\\n && BUILD_DIR=test/command_line ../source/test/command_line/run-test.rb \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --interface http \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --testee groonga-httpd\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nRUN apt-get update -qq \\\n && apt-get install -qq -y bison g++ gcc gdb git libevent-dev liblz4-dev libmecab-dev libmsgpack-dev libssl-dev libstemmer-dev libzmq-dev libzstd-dev make mecab-naist-jdic pkg-config rapidjson-dev rsync ruby ruby-dev sudo tzdata zlib1g-dev\nRUN apt-get update -qq \\\n && apt-get install -qq -y software-properties-common \\\n && add-apt-repository -y ppa:cutter-testing-framework/ppa \\\n && apt-get update -qq \\\n && apt-get install -qq -y cutter-testing-framework\nRUN apt-get update -qq \\\n && apt-get install -qq -y apt-transport-https curl lsb-release \\\n && curl https://dist.apache.org/repos/dist/dev/arrow/KEYS | apt-key add - \\\n && echo \"deb [arch=amd64] https://dl.bintray.com/apache/arrow/$( lsb_release --id --short | tr 'A-Z' 'a-z' ;)/ $( lsb_release --codename --short ;) main\" > /etc/apt/sources.list.d/apache-arrow.list \\\n && apt-get update -qq \\\n && apt-get install -qq -y libarrow-dev\nRUN gem install bundler\nRUN useradd --user-group --create-home groonga\nRUN echo \"groonga ALL=(ALL:ALL) NOPASSWD:ALL\" | EDITOR=tee visudo -f /etc/sudoers.d/groonga\nCOPY . /home/groonga/source\nUSER groonga\nWORKDIR /home/groonga\nRUN mkdir -p build\nWORKDIR /home/groonga/build\nRUN ../source/configure --prefix=/tmp/local --enable-debug --with-ruby --enable-mruby\nRUN make -j$( nproc ;) > /dev/null\nRUN mkdir -p /tmp/local/var/log/groonga/httpd/\nRUN rsync -a --include \"*.rb\" --include \"*/\" --exclude \"*\" ../source/plugins/ plugins/\nRUN mkdir -p test/command \\\n && rsync -a --delete ../source/test/command/suite/ test/command/suite/\nCMD BUILD_DIR=test/unit ../source/test/unit/run-test.sh \\\n && BUILD_DIR=test/mruby ../source/test/mruby/run-test.rb \\\n && BUILD_DIR=test/command_line ../source/test/command_line/run-test.rb \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --interface http \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --testee groonga-httpd\n","injectedSmells":[],"originalDockerfileHash":"472d08f315c9b1f9ce5192fa62622ca8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nRUN apt-get update -qq \\\n && apt-get install bison g++ gcc gdb git libevent-dev liblz4-dev libmecab-dev libmsgpack-dev libssl-dev libstemmer-dev libzmq-dev libzstd-dev make mecab-naist-jdic pkg-config rapidjson-dev rsync ruby ruby-dev sudo tzdata zlib1g-dev -qq -y\nRUN apt-get update -qq \\\n && apt-get install software-properties-common -qq -y \\\n && add-apt-repository -y ppa:cutter-testing-framework/ppa \\\n && apt-get update -qq \\\n && apt-get install cutter-testing-framework -qq -y\nRUN apt-get update -qq \\\n && apt-get install apt-transport-https curl lsb-release -qq -y \\\n && curl https://dist.apache.org/repos/dist/dev/arrow/KEYS | apt-key add - \\\n && echo \"deb [arch=amd64] https://dl.bintray.com/apache/arrow/$( lsb_release --id --short | tr 'A-Z' 'a-z' ;)/ $( lsb_release --codename --short ;) main\" > /etc/apt/sources.list.d/apache-arrow.list \\\n && apt-get update -qq \\\n && apt-get install libarrow-dev -qq -y\nRUN gem install bundler\nRUN useradd --user-group --create-home groonga\nRUN echo \"groonga ALL=(ALL:ALL) NOPASSWD:ALL\" | EDITOR=tee visudo -f /etc/sudoers.d/groonga\nCOPY . /home/groonga/source\nUSER groonga\nWORKDIR /home/groonga\nRUN mkdir -p build\nWORKDIR /home/groonga/build\nRUN ../source/configure --prefix=/tmp/local --enable-debug --with-ruby --enable-mruby\nRUN make -j$( nproc ;) > /dev/null\nRUN mkdir -p /tmp/local/var/log/groonga/httpd/\nRUN rsync -a --include \"*.rb\" --include \"*/\" --exclude \"*\" ../source/plugins/ plugins/\nRUN mkdir -p test/command \\\n && rsync -a --delete ../source/test/command/suite/ test/command/suite/\nCMD BUILD_DIR=test/unit ../source/test/unit/run-test.sh \\\n && BUILD_DIR=test/mruby ../source/test/mruby/run-test.rb \\\n && BUILD_DIR=test/command_line ../source/test/command_line/run-test.rb \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --interface http \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --testee groonga-httpd\n","originalDockerfileUglifiedHash":"abc8bb8b0fe2e70c185d31358d13d9b2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b795be54fb4a4dfd15cf327669492380e2018c85.dockerfile"}