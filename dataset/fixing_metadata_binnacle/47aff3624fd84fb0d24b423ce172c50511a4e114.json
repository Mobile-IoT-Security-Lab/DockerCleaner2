{"seed":176976929,"processedDockerfileHash":"01edab855e70b74ad49f5ed3716b0749","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM rocker/tidyverse\nLABEL maintainer=\"nan.xiao@sevenbridges.com\"\n#  # Install common dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo=1.9.13p1-1ubuntu2 gdebi-core=0.9.5.7+nmu6 pandoc=2.17.1.1-1.1ubuntu1 pandoc-citeproc libcurl4-gnutls-dev=7.88.1-7ubuntu1 curl=7.88.1-7ubuntu1 libcairo2-dev=1.16.0-7 libxt-dev=1:1.2.1-1 unp=2.0~pre10 emacs=1:28.2+1-13ubuntu3 supervisor=4.2.1-1ubuntu1 libfuse-dev=2.9.9-6 gnupg=2.2.40-1ubuntu2 -y\n#     aufs-tools \\\n#     cgroupfs-mount\n#   RUN wget --no-verbose http://ftp.us.debian.org/debian/pool/main/l/lvm2/libdevmapper1.02.1_1.02.136-1_amd64.deb && \\\n#      dpkg -i libdevmapper1.02.1_1.02.136-1_amd64.deb && \\\n#      rm -f libdevmapper1.02.1_1.02.136-1_amd64.deb\n#   RUN wget --no-verbose http://ftp.us.debian.org/debian/pool/main/libt/libtool/libltdl7_2.4.6-2_amd64.deb && \\\n#      dpkg -i libltdl7_2.4.6-2_amd64.deb && \\\n#      rm -f libltdl7_2.4.6-2_amd64.deb\n#  # Install Docker\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=2.6.0 ca-certificates=20230311 gnupg2=2.2.40-1ubuntu2 software-properties-common=0.99.35 -y \\\n && curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - \\\n && apt-key fingerprint 0EBFCD88 \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $( lsb_release -cs ;) stable\" \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends docker-ce -y\n#  #################\n#   sevenbridges-r #\n#  #################\n#   Install from GitHub instead of Bioconductor for the latest version\nRUN Rscript -e \"install.packages('BiocManager'); devtools::install_github('sbg/sevenbridges-r', repos = BiocManager::repositories(), build_vignettes = FALSE, dependencies = TRUE)\"\n#  ####################\n#   Seven Bridges SDK #\n#  ####################\n#  # Install SBG Rabix\nRUN wget https://github.com/rabix/bunny/releases/download/v1.0.5-1/rabix-1.0.5.tar.gz \\\n && tar -zvxf rabix-1.0.5.tar.gz \\\n && ln -s /rabix-cli-1.0.5/rabix /usr/local/bin/rabix\n#  # Install SBG Command line uploader\n#   RUN wget https://igor.sbgenomics.com/sbg-uploader/sbg-uploader.tgz \\\n#       && tar zxvf sbg-uploader.tgz -C / \\\n#      && ln -s  /sbg-uploader/bin/sbg-uploader.sh /usr/local/bin/sbg-uploader.sh\n#  # Install CGC Command line uploader\n#   RUN wget https://cgc.sbgenomics.com/cgc-uploader/cgc-uploader.tgz \\\n#      && tar zxvf cgc-uploader.tgz -C / \\\n#      && ln -s  /cgc-uploader/bin/cgc-uploader.sh /usr/local/bin/cgc-uploader.sh\n#  # Copy command line interface and report templates needed\nCOPY src/runif.R /usr/local/bin/\nRUN mkdir /report/\nCOPY report/report.Rmd /report/\n#  # Install liftr and packrat\nRUN Rscript -e \"install.packages(c('liftr', 'packrat'), repos = 'https://cloud.r-project.org/')\"\n#  # (because --deps TRUE can fail when packages are added/removed from CRAN)\nRUN rm -rf /var/lib/apt/lists/ \\\n && rm -rf /tmp/downloaded_packages/ /tmp/*.rds\n#  ###############\n#   Shiny Server #\n#  ###############\n#  # Thanks: rocker-org/shiny\n#  # Download and install Shiny Server\nRUN wget --no-verbose https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/VERSION -O \"version.txt\" \\\n && VERSION=$( cat version.txt ;) \\\n && wget --no-verbose \"https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/shiny-server-$VERSION-amd64.deb\" -O shiny-server-latest.deb \\\n && gdebi -n shiny-server-latest.deb \\\n && rm -f version.txt shiny-server-latest.deb\nRUN Rscript -e \"install.packages(c('shiny', 'rmarkdown', 'rsconnect'), repos = 'https://cloud.r-project.org/')\"\nRUN cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/\nRUN mkdir /home/rstudio/ShinyApps/\nRUN cp -R /usr/local/lib/R/site-library/shiny/examples/* /home/rstudio/ShinyApps/\nEXPOSE 3838/tcp 8787/tcp\n#   COPY src/shiny-server.sh /usr/bin/shiny-server.sh\n#   RUN wget --no-verbos https://raw.githubusercontent.com/sbg/sevenbridges-r/master/inst/docker/sevenbridges/src/shiny-server.conf -P /etc/shiny-server/\n#   RUN wget --no-verbos https://raw.githubusercontent.com/sbg/sevenbridges-r/master/inst/docker/sevenbridges/src/supervisord.conf\t-P /etc/shiny-server/\nCOPY src/shiny-server.conf /etc/shiny-server/shiny-server.conf\nCOPY src/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  # set directory to `~/ShinyApps`\n#   RUN yes | /opt/shiny-server/bin/deploy-example user-dirs\n#   RUN cp -R /usr/local/lib/R/site-library/shiny/examples/* ~/ShinyApps/\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n#   CMD [\"/init;/usr/bin/shiny-server.sh\"]\n#   CMD [\"sh\", \"-c\", \"/usr/bin/shiny-server.sh;/init\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM rocker/tidyverse\nLABEL maintainer=\"nan.xiao@sevenbridges.com\"\n# # Install common dependencies\nRUN apt-get update \\\n && apt-get install sudo gdebi-core pandoc pandoc-citeproc libcurl4-gnutls-dev curl libcairo2-dev libxt-dev unp emacs supervisor libfuse-dev gnupg -y\n#    aufs-tools \\\n#    cgroupfs-mount\n#  RUN wget --no-verbose http://ftp.us.debian.org/debian/pool/main/l/lvm2/libdevmapper1.02.1_1.02.136-1_amd64.deb && \\\n#     dpkg -i libdevmapper1.02.1_1.02.136-1_amd64.deb && \\\n#     rm -f libdevmapper1.02.1_1.02.136-1_amd64.deb\n#  RUN wget --no-verbose http://ftp.us.debian.org/debian/pool/main/libt/libtool/libltdl7_2.4.6-2_amd64.deb && \\\n#     dpkg -i libltdl7_2.4.6-2_amd64.deb && \\\n#     rm -f libltdl7_2.4.6-2_amd64.deb\n# # Install Docker\nRUN apt-get update \\\n && apt-get install apt-transport-https ca-certificates gnupg2 software-properties-common -y \\\n && curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - \\\n && apt-key fingerprint 0EBFCD88 \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $( lsb_release -cs ;) stable\" \\\n && apt-get update -y \\\n && apt-get install docker-ce -y\n# #################\n#  sevenbridges-r #\n# #################\n#  Install from GitHub instead of Bioconductor for the latest version\nRUN Rscript -e \"install.packages('BiocManager'); devtools::install_github('sbg/sevenbridges-r', repos = BiocManager::repositories(), build_vignettes = FALSE, dependencies = TRUE)\"\n# ####################\n#  Seven Bridges SDK #\n# ####################\n# # Install SBG Rabix\nRUN wget https://github.com/rabix/bunny/releases/download/v1.0.5-1/rabix-1.0.5.tar.gz \\\n && tar -zvxf rabix-1.0.5.tar.gz \\\n && ln -s /rabix-cli-1.0.5/rabix /usr/local/bin/rabix\n# # Install SBG Command line uploader\n#  RUN wget https://igor.sbgenomics.com/sbg-uploader/sbg-uploader.tgz \\\n#      && tar zxvf sbg-uploader.tgz -C / \\\n#     && ln -s  /sbg-uploader/bin/sbg-uploader.sh /usr/local/bin/sbg-uploader.sh\n# # Install CGC Command line uploader\n#  RUN wget https://cgc.sbgenomics.com/cgc-uploader/cgc-uploader.tgz \\\n#     && tar zxvf cgc-uploader.tgz -C / \\\n#     && ln -s  /cgc-uploader/bin/cgc-uploader.sh /usr/local/bin/cgc-uploader.sh\n# # Copy command line interface and report templates needed\nADD src/runif.R /usr/local/bin/\nRUN mkdir /report/\nADD report/report.Rmd /report/\n# # Install liftr and packrat\nRUN Rscript -e \"install.packages(c('liftr', 'packrat'), repos = 'https://cloud.r-project.org/')\"\n# # (because --deps TRUE can fail when packages are added/removed from CRAN)\nRUN rm -rf /var/lib/apt/lists/ \\\n && rm -rf /tmp/downloaded_packages/ /tmp/*.rds\n# ###############\n#  Shiny Server #\n# ###############\n# # Thanks: rocker-org/shiny\n# # Download and install Shiny Server\nRUN wget --no-verbose https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/VERSION -O \"version.txt\" \\\n && VERSION=$( cat version.txt ;) \\\n && wget --no-verbose \"https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/shiny-server-$VERSION-amd64.deb\" -O shiny-server-latest.deb \\\n && gdebi -n shiny-server-latest.deb \\\n && rm -f version.txt shiny-server-latest.deb\nRUN Rscript -e \"install.packages(c('shiny', 'rmarkdown', 'rsconnect'), repos = 'https://cloud.r-project.org/')\"\nRUN cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/\nRUN mkdir /home/rstudio/ShinyApps/\nRUN cp -R /usr/local/lib/R/site-library/shiny/examples/* /home/rstudio/ShinyApps/\nEXPOSE 3838/tcp 8787/tcp\n#  COPY src/shiny-server.sh /usr/bin/shiny-server.sh\n#  RUN wget --no-verbos https://raw.githubusercontent.com/sbg/sevenbridges-r/master/inst/docker/sevenbridges/src/shiny-server.conf -P /etc/shiny-server/\n#  RUN wget --no-verbos https://raw.githubusercontent.com/sbg/sevenbridges-r/master/inst/docker/sevenbridges/src/supervisord.conf\t-P /etc/shiny-server/\nCOPY src/shiny-server.conf /etc/shiny-server/shiny-server.conf\nCOPY src/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n# # set directory to `~/ShinyApps`\n#  RUN yes | /opt/shiny-server/bin/deploy-example user-dirs\n#  RUN cp -R /usr/local/lib/R/site-library/shiny/examples/* ~/ShinyApps/\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n#  CMD [\"/init;/usr/bin/shiny-server.sh\"]\n#  CMD [\"sh\", \"-c\", \"/usr/bin/shiny-server.sh;/init\"]\n","injectedSmells":[],"originalDockerfileHash":"bc7506bb4fc371bb41fcd8a40a8c7421","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM rocker/tidyverse\nLABEL maintainer=\"nan.xiao@sevenbridges.com\"\n#  # Install common dependencies\nRUN apt-get update \\\n && apt-get install sudo gdebi-core pandoc pandoc-citeproc libcurl4-gnutls-dev curl libcairo2-dev libxt-dev unp emacs supervisor libfuse-dev gnupg -y\n#     aufs-tools \\\n#     cgroupfs-mount\n#   RUN wget --no-verbose http://ftp.us.debian.org/debian/pool/main/l/lvm2/libdevmapper1.02.1_1.02.136-1_amd64.deb && \\\n#      dpkg -i libdevmapper1.02.1_1.02.136-1_amd64.deb && \\\n#      rm -f libdevmapper1.02.1_1.02.136-1_amd64.deb\n#   RUN wget --no-verbose http://ftp.us.debian.org/debian/pool/main/libt/libtool/libltdl7_2.4.6-2_amd64.deb && \\\n#      dpkg -i libltdl7_2.4.6-2_amd64.deb && \\\n#      rm -f libltdl7_2.4.6-2_amd64.deb\n#  # Install Docker\nRUN apt-get update \\\n && apt-get install apt-transport-https ca-certificates gnupg2 software-properties-common -y \\\n && curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - \\\n && apt-key fingerprint 0EBFCD88 \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $( lsb_release -cs ;) stable\" \\\n && apt-get update -y \\\n && apt-get install docker-ce -y\n#  #################\n#   sevenbridges-r #\n#  #################\n#   Install from GitHub instead of Bioconductor for the latest version\nRUN Rscript -e \"install.packages('BiocManager'); devtools::install_github('sbg/sevenbridges-r', repos = BiocManager::repositories(), build_vignettes = FALSE, dependencies = TRUE)\"\n#  ####################\n#   Seven Bridges SDK #\n#  ####################\n#  # Install SBG Rabix\nRUN wget https://github.com/rabix/bunny/releases/download/v1.0.5-1/rabix-1.0.5.tar.gz \\\n && tar -zvxf rabix-1.0.5.tar.gz \\\n && ln -s /rabix-cli-1.0.5/rabix /usr/local/bin/rabix\n#  # Install SBG Command line uploader\n#   RUN wget https://igor.sbgenomics.com/sbg-uploader/sbg-uploader.tgz \\\n#       && tar zxvf sbg-uploader.tgz -C / \\\n#      && ln -s  /sbg-uploader/bin/sbg-uploader.sh /usr/local/bin/sbg-uploader.sh\n#  # Install CGC Command line uploader\n#   RUN wget https://cgc.sbgenomics.com/cgc-uploader/cgc-uploader.tgz \\\n#      && tar zxvf cgc-uploader.tgz -C / \\\n#      && ln -s  /cgc-uploader/bin/cgc-uploader.sh /usr/local/bin/cgc-uploader.sh\n#  # Copy command line interface and report templates needed\nADD src/runif.R /usr/local/bin/\nRUN mkdir /report/\nADD report/report.Rmd /report/\n#  # Install liftr and packrat\nRUN Rscript -e \"install.packages(c('liftr', 'packrat'), repos = 'https://cloud.r-project.org/')\"\n#  # (because --deps TRUE can fail when packages are added/removed from CRAN)\nRUN rm -rf /var/lib/apt/lists/ \\\n && rm -rf /tmp/downloaded_packages/ /tmp/*.rds\n#  ###############\n#   Shiny Server #\n#  ###############\n#  # Thanks: rocker-org/shiny\n#  # Download and install Shiny Server\nRUN wget --no-verbose https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/VERSION -O \"version.txt\" \\\n && VERSION=$( cat version.txt ;) \\\n && wget --no-verbose \"https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/shiny-server-$VERSION-amd64.deb\" -O shiny-server-latest.deb \\\n && gdebi -n shiny-server-latest.deb \\\n && rm -f version.txt shiny-server-latest.deb\nRUN Rscript -e \"install.packages(c('shiny', 'rmarkdown', 'rsconnect'), repos = 'https://cloud.r-project.org/')\"\nRUN cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/\nRUN mkdir /home/rstudio/ShinyApps/\nRUN cp -R /usr/local/lib/R/site-library/shiny/examples/* /home/rstudio/ShinyApps/\nEXPOSE 3838/tcp 8787/tcp\n#   COPY src/shiny-server.sh /usr/bin/shiny-server.sh\n#   RUN wget --no-verbos https://raw.githubusercontent.com/sbg/sevenbridges-r/master/inst/docker/sevenbridges/src/shiny-server.conf -P /etc/shiny-server/\n#   RUN wget --no-verbos https://raw.githubusercontent.com/sbg/sevenbridges-r/master/inst/docker/sevenbridges/src/supervisord.conf\t-P /etc/shiny-server/\nCOPY src/shiny-server.conf /etc/shiny-server/shiny-server.conf\nCOPY src/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  # set directory to `~/ShinyApps`\n#   RUN yes | /opt/shiny-server/bin/deploy-example user-dirs\n#   RUN cp -R /usr/local/lib/R/site-library/shiny/examples/* ~/ShinyApps/\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n#   CMD [\"/init;/usr/bin/shiny-server.sh\"]\n#   CMD [\"sh\", \"-c\", \"/usr/bin/shiny-server.sh;/init\"]\n","originalDockerfileUglifiedHash":"e299d50b94438b9c040aabb94881ae58","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/47aff3624fd84fb0d24b423ce172c50511a4e114.dockerfile"}