{"seed":2150841032,"processedDockerfileHash":"44fbdedd3b6eeac40499069e32dfda94","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile - alpine\n#   https://github.com/openresty/docker-openresty\nARG RESTY_IMAGE_BASE=\"alpine\"\nARG RESTY_IMAGE_TAG=\"3.9\"\nFROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}\nLABEL maintainer=\"Evan Wies <evan@neomantra.net>\"\n#   Docker Build Arguments\nARG RESTY_IMAGE_BASE=\"alpine\"\nARG RESTY_IMAGE_TAG=\"3.9\"\nARG RESTY_VERSION=\"1.15.8.1\"\nARG RESTY_OPENSSL_VERSION=\"1.1.1c\"\nARG RESTY_PCRE_VERSION=\"8.42\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\" --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_geoip_module=dynamic  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_slice_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-mail  --with-mail_ssl_module  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-stream  --with-stream_ssl_module  --with-threads  \"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\nARG RESTY_ADD_PACKAGE_BUILDDEPS=\"\"\nARG RESTY_ADD_PACKAGE_RUNDEPS=\"\"\nARG RESTY_EVAL_PRE_CONFIGURE=\"\"\nARG RESTY_EVAL_POST_MAKE=\"\"\nLABEL resty_image_base=\"${RESTY_IMAGE_BASE}\"\nLABEL resty_image_tag=\"${RESTY_IMAGE_TAG}\"\nLABEL resty_version=\"${RESTY_VERSION}\"\nLABEL resty_openssl_version=\"${RESTY_OPENSSL_VERSION}\"\nLABEL resty_pcre_version=\"${RESTY_PCRE_VERSION}\"\nLABEL resty_config_options=\"${RESTY_CONFIG_OPTIONS}\"\nLABEL resty_config_options_more=\"${RESTY_CONFIG_OPTIONS_MORE}\"\nLABEL resty_add_package_builddeps=\"${RESTY_ADD_PACKAGE_BUILDDEPS}\"\nLABEL resty_add_package_rundeps=\"${RESTY_ADD_PACKAGE_RUNDEPS}\"\nLABEL resty_eval_pre_configure=\"${RESTY_EVAL_PRE_CONFIGURE}\"\nLABEL resty_eval_post_make=\"${RESTY_EVAL_POST_MAKE}\"\n#   These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n#   1) Install apk dependencies\n#   2) Download and untar OpenSSL, PCRE, and OpenResty\n#   3) Build OpenResty\n#   4) Cleanup\nRUN apk add build-base coreutils curl gd-dev geoip-dev libxslt-dev linux-headers make perl-dev readline-dev zlib-dev ${RESTY_ADD_PACKAGE_BUILDDEPS} --no-cache --virtual .build-deps \\\n && apk add gd geoip libgcc libxslt zlib ${RESTY_ADD_PACKAGE_RUNDEPS} --no-cache \\\n && cd /tmp \\\n && if [ -n \"${RESTY_EVAL_PRE_CONFIGURE}\" ] ; then eval $( echo ${RESTY_EVAL_PRE_CONFIGURE} ;) ; fi \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /tmp/openresty-${RESTY_VERSION} \\\n && if [[ \"1.1.1\" == $( echo -e \"${RESTY_OPENSSL_VERSION}\\n1.1.1\" | sort -V | head -n1 ;) ]] ; then echo 'patching Nginx for OpenSSL 1.1.1' \\\n && cd bundle/nginx-1.15.8 \\\n && curl -s https://raw.githubusercontent.com/openresty/openresty/master/patches/nginx-1.15.8-ssl_cert_cb_yield.patch | patch -p1 \\\n && curl -s https://raw.githubusercontent.com/openresty/openresty/master/patches/nginx-1.15.8-ssl_sess_cb_yield.patch | patch -p1 \\\n && cd ../.. ; fi \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /tmp \\\n && if [ -n \"${RESTY_EVAL_POST_MAKE}\" ] ; then eval $( echo ${RESTY_EVAL_POST_MAKE} ;) ; fi \\\n && rm -rf openssl-${RESTY_OPENSSL_VERSION} openssl-${RESTY_OPENSSL_VERSION}.tar.gz openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && apk del .build-deps \\\n && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\n#   Add additional binaries into PATH for convenience\nENV PATH=\"$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\"\n#   Copy nginx configuration files\nCOPY nginx.conf /usr/local/openresty/nginx/conf/nginx.conf\nCOPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nCMD [\"/usr/local/openresty/bin/openresty\", \"-g\", \"daemon\", \"off\"]\n#   Use SIGQUIT instead of default SIGTERM to cleanly drain requests\n#   See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls\nSTOPSIGNAL SIGQUIT\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile - alpine\n#  https://github.com/openresty/docker-openresty\nARG RESTY_IMAGE_BASE=\"alpine\"\nARG RESTY_IMAGE_TAG=\"3.9\"\nFROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}\nLABEL maintainer=\"Evan Wies <evan@neomantra.net>\"\n#  Docker Build Arguments\nARG RESTY_IMAGE_BASE=\"alpine\"\nARG RESTY_IMAGE_TAG=\"3.9\"\nARG RESTY_VERSION=\"1.15.8.1\"\nARG RESTY_OPENSSL_VERSION=\"1.1.1c\"\nARG RESTY_PCRE_VERSION=\"8.42\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\" --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_geoip_module=dynamic  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_slice_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-mail  --with-mail_ssl_module  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-stream  --with-stream_ssl_module  --with-threads  \"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\nARG RESTY_ADD_PACKAGE_BUILDDEPS=\"\"\nARG RESTY_ADD_PACKAGE_RUNDEPS=\"\"\nARG RESTY_EVAL_PRE_CONFIGURE=\"\"\nARG RESTY_EVAL_POST_MAKE=\"\"\nLABEL resty_image_base=\"${RESTY_IMAGE_BASE}\"\nLABEL resty_image_tag=\"${RESTY_IMAGE_TAG}\"\nLABEL resty_version=\"${RESTY_VERSION}\"\nLABEL resty_openssl_version=\"${RESTY_OPENSSL_VERSION}\"\nLABEL resty_pcre_version=\"${RESTY_PCRE_VERSION}\"\nLABEL resty_config_options=\"${RESTY_CONFIG_OPTIONS}\"\nLABEL resty_config_options_more=\"${RESTY_CONFIG_OPTIONS_MORE}\"\nLABEL resty_add_package_builddeps=\"${RESTY_ADD_PACKAGE_BUILDDEPS}\"\nLABEL resty_add_package_rundeps=\"${RESTY_ADD_PACKAGE_RUNDEPS}\"\nLABEL resty_eval_pre_configure=\"${RESTY_EVAL_PRE_CONFIGURE}\"\nLABEL resty_eval_post_make=\"${RESTY_EVAL_POST_MAKE}\"\n#  These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n#  1) Install apk dependencies\n#  2) Download and untar OpenSSL, PCRE, and OpenResty\n#  3) Build OpenResty\n#  4) Cleanup\nRUN apk add --no-cache --virtual .build-deps build-base coreutils curl gd-dev geoip-dev libxslt-dev linux-headers make perl-dev readline-dev zlib-dev ${RESTY_ADD_PACKAGE_BUILDDEPS} \\\n && apk add --no-cache gd geoip libgcc libxslt zlib ${RESTY_ADD_PACKAGE_RUNDEPS} \\\n && cd /tmp \\\n && if [ -n \"${RESTY_EVAL_PRE_CONFIGURE}\" ] ; then eval $( echo ${RESTY_EVAL_PRE_CONFIGURE} ;) ; fi \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /tmp/openresty-${RESTY_VERSION} \\\n && if [[ \"1.1.1\" == $( echo -e \"${RESTY_OPENSSL_VERSION}\\n1.1.1\" | sort -V | head -n1 ;) ]] ; then echo 'patching Nginx for OpenSSL 1.1.1' \\\n && cd bundle/nginx-1.15.8 \\\n && curl -s https://raw.githubusercontent.com/openresty/openresty/master/patches/nginx-1.15.8-ssl_cert_cb_yield.patch | patch -p1 \\\n && curl -s https://raw.githubusercontent.com/openresty/openresty/master/patches/nginx-1.15.8-ssl_sess_cb_yield.patch | patch -p1 \\\n && cd ../.. ; fi \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /tmp \\\n && if [ -n \"${RESTY_EVAL_POST_MAKE}\" ] ; then eval $( echo ${RESTY_EVAL_POST_MAKE} ;) ; fi \\\n && rm -rf openssl-${RESTY_OPENSSL_VERSION} openssl-${RESTY_OPENSSL_VERSION}.tar.gz openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && apk del .build-deps \\\n && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\n#  Add additional binaries into PATH for convenience\nENV PATH=\"$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\"\n#  Copy nginx configuration files\nCOPY nginx.conf /usr/local/openresty/nginx/conf/nginx.conf\nCOPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nCMD [\"/usr/local/openresty/bin/openresty\", \"-g\", \"daemon\", \"off\"]\n#  Use SIGQUIT instead of default SIGTERM to cleanly drain requests\n#  See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls\nSTOPSIGNAL SIGQUIT\n","injectedSmells":[],"originalDockerfileHash":"b0638174b97d712390c4969e80333ac8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile - alpine\n#   https://github.com/openresty/docker-openresty\nARG RESTY_IMAGE_BASE=\"alpine\"\nARG RESTY_IMAGE_TAG=\"3.9\"\nFROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}\nLABEL maintainer=\"Evan Wies <evan@neomantra.net>\"\n#   Docker Build Arguments\nARG RESTY_IMAGE_BASE=\"alpine\"\nARG RESTY_IMAGE_TAG=\"3.9\"\nARG RESTY_VERSION=\"1.15.8.1\"\nARG RESTY_OPENSSL_VERSION=\"1.1.1c\"\nARG RESTY_PCRE_VERSION=\"8.42\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\" --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_geoip_module=dynamic  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_slice_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-mail  --with-mail_ssl_module  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-stream  --with-stream_ssl_module  --with-threads  \"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\nARG RESTY_ADD_PACKAGE_BUILDDEPS=\"\"\nARG RESTY_ADD_PACKAGE_RUNDEPS=\"\"\nARG RESTY_EVAL_PRE_CONFIGURE=\"\"\nARG RESTY_EVAL_POST_MAKE=\"\"\nLABEL resty_image_base=\"${RESTY_IMAGE_BASE}\"\nLABEL resty_image_tag=\"${RESTY_IMAGE_TAG}\"\nLABEL resty_version=\"${RESTY_VERSION}\"\nLABEL resty_openssl_version=\"${RESTY_OPENSSL_VERSION}\"\nLABEL resty_pcre_version=\"${RESTY_PCRE_VERSION}\"\nLABEL resty_config_options=\"${RESTY_CONFIG_OPTIONS}\"\nLABEL resty_config_options_more=\"${RESTY_CONFIG_OPTIONS_MORE}\"\nLABEL resty_add_package_builddeps=\"${RESTY_ADD_PACKAGE_BUILDDEPS}\"\nLABEL resty_add_package_rundeps=\"${RESTY_ADD_PACKAGE_RUNDEPS}\"\nLABEL resty_eval_pre_configure=\"${RESTY_EVAL_PRE_CONFIGURE}\"\nLABEL resty_eval_post_make=\"${RESTY_EVAL_POST_MAKE}\"\n#   These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n#   1) Install apk dependencies\n#   2) Download and untar OpenSSL, PCRE, and OpenResty\n#   3) Build OpenResty\n#   4) Cleanup\nRUN apk add --no-cache --virtual .build-deps build-base coreutils curl gd-dev geoip-dev libxslt-dev linux-headers make perl-dev readline-dev zlib-dev ${RESTY_ADD_PACKAGE_BUILDDEPS} \\\n && apk add --no-cache gd geoip libgcc libxslt zlib ${RESTY_ADD_PACKAGE_RUNDEPS} \\\n && cd /tmp \\\n && if [ -n \"${RESTY_EVAL_PRE_CONFIGURE}\" ] ; then eval $( echo ${RESTY_EVAL_PRE_CONFIGURE} ;) ; fi \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /tmp/openresty-${RESTY_VERSION} \\\n && if [[ \"1.1.1\" == $( echo -e \"${RESTY_OPENSSL_VERSION}\\n1.1.1\" | sort -V | head -n1 ;) ]] ; then echo 'patching Nginx for OpenSSL 1.1.1' \\\n && cd bundle/nginx-1.15.8 \\\n && curl -s https://raw.githubusercontent.com/openresty/openresty/master/patches/nginx-1.15.8-ssl_cert_cb_yield.patch | patch -p1 \\\n && curl -s https://raw.githubusercontent.com/openresty/openresty/master/patches/nginx-1.15.8-ssl_sess_cb_yield.patch | patch -p1 \\\n && cd ../.. ; fi \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /tmp \\\n && if [ -n \"${RESTY_EVAL_POST_MAKE}\" ] ; then eval $( echo ${RESTY_EVAL_POST_MAKE} ;) ; fi \\\n && rm -rf openssl-${RESTY_OPENSSL_VERSION} openssl-${RESTY_OPENSSL_VERSION}.tar.gz openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && apk del .build-deps \\\n && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\n#   Add additional binaries into PATH for convenience\nENV PATH=\"$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\"\n#   Copy nginx configuration files\nCOPY nginx.conf /usr/local/openresty/nginx/conf/nginx.conf\nCOPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nCMD [\"/usr/local/openresty/bin/openresty\", \"-g\", \"daemon\", \"off\"]\n#   Use SIGQUIT instead of default SIGTERM to cleanly drain requests\n#   See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls\nSTOPSIGNAL SIGQUIT\n","originalDockerfileUglifiedHash":"95269f4c0bfd4d14eec57186c92b9f94","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0c3501cb0770c711885dc52f2fc4427302706eb8.dockerfile"}