{"seed":3313761095,"processedDockerfileHash":"7df84bc20360c0371347c4eefb3587e4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for PetIBM-0.4.1\nFROM nvidia/cuda:8.0-devel-ubuntu16.04\nMAINTAINER Olivier Mesnard <mesnardo@gwu.edu>\n#   Install base system.\nCOPY ssh_config /root/.ssh/config\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates build-essential autotools-dev gfortran cmake git pkg-config wget curl unzip -y \\\n && apt-get install --no-install-recommends libopenmpi-dev libopenmpi1.10 openmpi-bin openmpi-common openmpi-doc -y \\\n && apt-get install --no-install-recommends flex bison python-dev -y \\\n && apt-get install --no-install-recommends libibverbs1 ibverbs-utils librdmacm1 rdmacm-utils ibutils ibacm libibcm1 libibmad5 libibumad3 opensm libopensm5a srptools perftest infiniband-diags ibsim-utils libmthca1 libmlx4-1 libmlx5-1 mstflint libdapl2 dapl2-utils -y \\\n && apt-get install --no-install-recommends openssh-server openssh-client -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir /var/run/sshd \\\n && ssh-keygen -A \\\n && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' \\\n && chmod 600 /root/.ssh/config \\\n && chmod 700 /root/.ssh \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#   Build PETSc-3.10.2 in optimized mode.\nRUN VERSION=3.10.2 \\\n && TARBALL=petsc-lite-${VERSION}.tar.gz \\\n && wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/${TARBALL} -P /tmp \\\n && PETSC_DIR=/opt/petsc/${VERSION} \\\n && PETSC_ARCH=linux-gnu-openmpi-opt \\\n && mkdir -p ${PETSC_DIR} \\\n && tar -xzf /tmp/${TARBALL} -C ${PETSC_DIR} --strip-components=1 \\\n && cd ${PETSC_DIR} \\\n && ./configure --PETSC_DIR=${PETSC_DIR} --PETSC_ARCH=${PETSC_ARCH} --with-cc=mpicc --with-cxx=mpicxx --with-fc=mpif90 --COPTFLAGS=-O3 --CXXFLAGS=-O3 --FOPTFLAGS=-O3 --with-debugging=0 --download-hdf5 --download-fblaslapack --download-hypre --download-ptscotch --download-metis --download-parmetis --download-superlu_dist \\\n && make PETSC_DIR=${PETSC_DIR} PETSC_ARCH=${PETSC_ARCH} all \\\n && rm -f /tmp/${TARBALL}\n#   Build AmgX-2.0.\nRUN VERSION=2.0 \\\n && TARBALL=master.tar.gz \\\n && wget https://github.com/NVIDIA/AMGX/archive/${TARBALL} -P /tmp \\\n && SRCDIR=/opt/amgx/${VERSION} \\\n && BUILDDIR=${SRCDIR}/build \\\n && mkdir -p ${SRCDIR} ${BUILDDIR} \\\n && tar -xzf /tmp/${TARBALL} -C ${SRCDIR} --strip-components=1 \\\n && cd ${BUILDDIR} \\\n && cmake ${SRCDIR} -DCMAKE_BUILD_TYPE=\"Release\" -DCMAKE_INSTALL_PREFIX=\"/usr/local\" -DCMAKE_C_COMPILER=mpicc -DCMAKE_C_FLAGS_PROFILE=\"-O3 -DNDEBUG\" -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_CXX_FLAGS_PROFILE=\"-O3 -DNDEBUG\" -DMPI_CXX_COMPILER=mpicxx -DMPI_CXX_COMPILE_FLAGS=\"-O3\" -DMPI_C_COMPILER=mpicc -DMPI_C_COMPILE_FLAGS=\"-O3\" -DCUDA_ARCH=\"35 37\" -DCUDA_HOST_COMPILER=/usr/bin/mpicc \\\n && make -j\"$( nproc ;)\" all \\\n && make install \\\n && rm -f /tmp/${TARBALL} /opt/amgx/srcTarball.txt \\\n && ldconfig ${SRCDIR}/lib\nENV PETSC_DIR=\"/opt/petsc/3.10.2\"\nENV PETSC_ARCH=\"linux-gnu-openmpi-opt\"\n#   Build and install PetIBM-0.4.1.\nRUN VERSION=0.4.1 \\\n && TARBALL=v${VERSION}.tar.gz \\\n && wget https://github.com/barbagroup/PetIBM/archive/${TARBALL} -P /tmp \\\n && SRCDIR=/opt/petibm/${VERSION} \\\n && BUILDDIR=${SRCDIR}/build \\\n && mkdir -p ${SRCDIR} ${BUILDDIR} \\\n && tar -xzf /tmp/${TARBALL} -C ${SRCDIR} --strip-components=1 \\\n && cd ${BUILDDIR} \\\n && ${SRCDIR}/configure --prefix=/usr/local CXX=mpicxx CXXFLAGS=\"-O3 -w -std=c++14\" --enable-static=no --with-petsc-dir=${PETSC_DIR} --with-petsc-arch=${PETSC_ARCH} --with-cuda-dir=/usr/local/cuda-8.0 --with-amgx-dir=/usr/local --enable-amgxwrapper --enable-yamlcpp --enable-gtest \\\n && make -j\"$( nproc ;)\" all \\\n && make check \\\n && make install \\\n && ldconfig /usr/local/lib \\\n && rm -f /tmp/${TARBALL}\nEXPOSE 23/tcp\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-p\", \"23\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for PetIBM-0.4.1\nFROM nvidia/cuda:8.0-devel-ubuntu16.04\nMAINTAINER Olivier Mesnard <mesnardo@gwu.edu>\n#  Install base system.\nCOPY ssh_config /root/.ssh/config\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates build-essential autotools-dev gfortran cmake git pkg-config wget curl unzip -y \\\n && apt-get install --no-install-recommends libopenmpi-dev libopenmpi1.10 openmpi-bin openmpi-common openmpi-doc -y \\\n && apt-get install --no-install-recommends flex bison python-dev -y \\\n && apt-get install --no-install-recommends libibverbs1 ibverbs-utils librdmacm1 rdmacm-utils ibutils ibacm libibcm1 libibmad5 libibumad3 opensm libopensm5a srptools perftest infiniband-diags ibsim-utils libmthca1 libmlx4-1 libmlx5-1 mstflint libdapl2 dapl2-utils -y \\\n && apt-get install --no-install-recommends openssh-server openssh-client -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir /var/run/sshd \\\n && ssh-keygen -A \\\n && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' \\\n && chmod 600 /root/.ssh/config \\\n && chmod 700 /root/.ssh \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  Build PETSc-3.10.2 in optimized mode.\nRUN VERSION=3.10.2 \\\n && TARBALL=petsc-lite-${VERSION}.tar.gz \\\n && wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/${TARBALL} -P /tmp \\\n && PETSC_DIR=/opt/petsc/${VERSION} \\\n && PETSC_ARCH=linux-gnu-openmpi-opt \\\n && mkdir -p ${PETSC_DIR} \\\n && tar -xzf /tmp/${TARBALL} -C ${PETSC_DIR} --strip-components=1 \\\n && cd ${PETSC_DIR} \\\n && ./configure --PETSC_DIR=${PETSC_DIR} --PETSC_ARCH=${PETSC_ARCH} --with-cc=mpicc --with-cxx=mpicxx --with-fc=mpif90 --COPTFLAGS=-O3 --CXXFLAGS=-O3 --FOPTFLAGS=-O3 --with-debugging=0 --download-hdf5 --download-fblaslapack --download-hypre --download-ptscotch --download-metis --download-parmetis --download-superlu_dist \\\n && make PETSC_DIR=${PETSC_DIR} PETSC_ARCH=${PETSC_ARCH} all \\\n && rm -f /tmp/${TARBALL}\n#  Build AmgX-2.0.\nRUN VERSION=2.0 \\\n && TARBALL=master.tar.gz \\\n && wget https://github.com/NVIDIA/AMGX/archive/${TARBALL} -P /tmp \\\n && SRCDIR=/opt/amgx/${VERSION} \\\n && BUILDDIR=${SRCDIR}/build \\\n && mkdir -p ${SRCDIR} ${BUILDDIR} \\\n && tar -xzf /tmp/${TARBALL} -C ${SRCDIR} --strip-components=1 \\\n && cd ${BUILDDIR} \\\n && cmake ${SRCDIR} -DCMAKE_BUILD_TYPE=\"Release\" -DCMAKE_INSTALL_PREFIX=\"/usr/local\" -DCMAKE_C_COMPILER=mpicc -DCMAKE_C_FLAGS_PROFILE=\"-O3 -DNDEBUG\" -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_CXX_FLAGS_PROFILE=\"-O3 -DNDEBUG\" -DMPI_CXX_COMPILER=mpicxx -DMPI_CXX_COMPILE_FLAGS=\"-O3\" -DMPI_C_COMPILER=mpicc -DMPI_C_COMPILE_FLAGS=\"-O3\" -DCUDA_ARCH=\"35 37\" -DCUDA_HOST_COMPILER=/usr/bin/mpicc \\\n && make -j\"$( nproc ;)\" all \\\n && make install \\\n && rm -f /tmp/${TARBALL} /opt/amgx/srcTarball.txt \\\n && ldconfig ${SRCDIR}/lib\nENV PETSC_DIR=\"/opt/petsc/3.10.2\"\nENV PETSC_ARCH=\"linux-gnu-openmpi-opt\"\n#  Build and install PetIBM-0.4.1.\nRUN VERSION=0.4.1 \\\n && TARBALL=v${VERSION}.tar.gz \\\n && wget https://github.com/barbagroup/PetIBM/archive/${TARBALL} -P /tmp \\\n && SRCDIR=/opt/petibm/${VERSION} \\\n && BUILDDIR=${SRCDIR}/build \\\n && mkdir -p ${SRCDIR} ${BUILDDIR} \\\n && tar -xzf /tmp/${TARBALL} -C ${SRCDIR} --strip-components=1 \\\n && cd ${BUILDDIR} \\\n && ${SRCDIR}/configure --prefix=/usr/local CXX=mpicxx CXXFLAGS=\"-O3 -w -std=c++14\" --enable-static=no --with-petsc-dir=${PETSC_DIR} --with-petsc-arch=${PETSC_ARCH} --with-cuda-dir=/usr/local/cuda-8.0 --with-amgx-dir=/usr/local --enable-amgxwrapper --enable-yamlcpp --enable-gtest \\\n && make -j\"$( nproc ;)\" all \\\n && make check \\\n && make install \\\n && ldconfig /usr/local/lib \\\n && rm -f /tmp/${TARBALL}\nEXPOSE 23/tcp\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-p\", \"23\"]\n","injectedSmells":[],"originalDockerfileHash":"0a4aff5b962704fca0bbec47c583fb47","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for PetIBM-0.4.1\nFROM nvidia/cuda:8.0-devel-ubuntu16.04\nMAINTAINER Olivier Mesnard <mesnardo@gwu.edu>\n#   Install base system.\nCOPY ssh_config /root/.ssh/config\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates build-essential autotools-dev gfortran cmake git pkg-config wget curl unzip -y \\\n && apt-get install --no-install-recommends libopenmpi-dev libopenmpi1.10 openmpi-bin openmpi-common openmpi-doc -y \\\n && apt-get install --no-install-recommends flex bison python-dev -y \\\n && apt-get install --no-install-recommends libibverbs1 ibverbs-utils librdmacm1 rdmacm-utils ibutils ibacm libibcm1 libibmad5 libibumad3 opensm libopensm5a srptools perftest infiniband-diags ibsim-utils libmthca1 libmlx4-1 libmlx5-1 mstflint libdapl2 dapl2-utils -y \\\n && apt-get install --no-install-recommends openssh-server openssh-client -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir /var/run/sshd \\\n && ssh-keygen -A \\\n && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' \\\n && chmod 600 /root/.ssh/config \\\n && chmod 700 /root/.ssh \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#   Build PETSc-3.10.2 in optimized mode.\nRUN VERSION=3.10.2 \\\n && TARBALL=petsc-lite-${VERSION}.tar.gz \\\n && wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/${TARBALL} -P /tmp \\\n && PETSC_DIR=/opt/petsc/${VERSION} \\\n && PETSC_ARCH=linux-gnu-openmpi-opt \\\n && mkdir -p ${PETSC_DIR} \\\n && tar -xzf /tmp/${TARBALL} -C ${PETSC_DIR} --strip-components=1 \\\n && cd ${PETSC_DIR} \\\n && ./configure --PETSC_DIR=${PETSC_DIR} --PETSC_ARCH=${PETSC_ARCH} --with-cc=mpicc --with-cxx=mpicxx --with-fc=mpif90 --COPTFLAGS=-O3 --CXXFLAGS=-O3 --FOPTFLAGS=-O3 --with-debugging=0 --download-hdf5 --download-fblaslapack --download-hypre --download-ptscotch --download-metis --download-parmetis --download-superlu_dist \\\n && make PETSC_DIR=${PETSC_DIR} PETSC_ARCH=${PETSC_ARCH} all \\\n && rm -f /tmp/${TARBALL}\n#   Build AmgX-2.0.\nRUN VERSION=2.0 \\\n && TARBALL=master.tar.gz \\\n && wget https://github.com/NVIDIA/AMGX/archive/${TARBALL} -P /tmp \\\n && SRCDIR=/opt/amgx/${VERSION} \\\n && BUILDDIR=${SRCDIR}/build \\\n && mkdir -p ${SRCDIR} ${BUILDDIR} \\\n && tar -xzf /tmp/${TARBALL} -C ${SRCDIR} --strip-components=1 \\\n && cd ${BUILDDIR} \\\n && cmake ${SRCDIR} -DCMAKE_BUILD_TYPE=\"Release\" -DCMAKE_INSTALL_PREFIX=\"/usr/local\" -DCMAKE_C_COMPILER=mpicc -DCMAKE_C_FLAGS_PROFILE=\"-O3 -DNDEBUG\" -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_CXX_FLAGS_PROFILE=\"-O3 -DNDEBUG\" -DMPI_CXX_COMPILER=mpicxx -DMPI_CXX_COMPILE_FLAGS=\"-O3\" -DMPI_C_COMPILER=mpicc -DMPI_C_COMPILE_FLAGS=\"-O3\" -DCUDA_ARCH=\"35 37\" -DCUDA_HOST_COMPILER=/usr/bin/mpicc \\\n && make -j\"$( nproc ;)\" all \\\n && make install \\\n && rm -f /tmp/${TARBALL} /opt/amgx/srcTarball.txt \\\n && ldconfig ${SRCDIR}/lib\nENV PETSC_DIR=\"/opt/petsc/3.10.2\"\nENV PETSC_ARCH=\"linux-gnu-openmpi-opt\"\n#   Build and install PetIBM-0.4.1.\nRUN VERSION=0.4.1 \\\n && TARBALL=v${VERSION}.tar.gz \\\n && wget https://github.com/barbagroup/PetIBM/archive/${TARBALL} -P /tmp \\\n && SRCDIR=/opt/petibm/${VERSION} \\\n && BUILDDIR=${SRCDIR}/build \\\n && mkdir -p ${SRCDIR} ${BUILDDIR} \\\n && tar -xzf /tmp/${TARBALL} -C ${SRCDIR} --strip-components=1 \\\n && cd ${BUILDDIR} \\\n && ${SRCDIR}/configure --prefix=/usr/local CXX=mpicxx CXXFLAGS=\"-O3 -w -std=c++14\" --enable-static=no --with-petsc-dir=${PETSC_DIR} --with-petsc-arch=${PETSC_ARCH} --with-cuda-dir=/usr/local/cuda-8.0 --with-amgx-dir=/usr/local --enable-amgxwrapper --enable-yamlcpp --enable-gtest \\\n && make -j\"$( nproc ;)\" all \\\n && make check \\\n && make install \\\n && ldconfig /usr/local/lib \\\n && rm -f /tmp/${TARBALL}\nEXPOSE 23/tcp\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-p\", \"23\"]\n","originalDockerfileUglifiedHash":"6accea6882d3807f6e218e64f321da04","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/48718fb0d6e4d37d8800ac9546c92bad31529a12.dockerfile"}