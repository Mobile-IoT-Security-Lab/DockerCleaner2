{"seed":479119500,"processedDockerfileHash":"d4a4208625cd0b37a1fa5b6f0d852035","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Hooram Nam <nhooram@gmail.com>\nENV MAPZEN_API_KEY=\"mapzen-XXXX\"\nENV MAPBOX_API_KEY=\"mapbox-XXXX\"\nENV ALLOWED_HOSTS=\"*\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsm6=2:1.2.2-1 libboost-all-dev=1.58.0.1ubuntu1 libglib2.0-0=2.48.2-0ubuntu4.8 libxrender-dev=1:0.9.9-0ubuntu1 wget=1.17.1-1ubuntu1.5 curl=7.47.0-1ubuntu2.19 nginx=1.10.3-0ubuntu0.16.04.5 -y\nRUN apt-get install --no-install-recommends bzip2=1.0.6-8ubuntu0.2 -y\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN bash Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda\n#   RUN apt-get install libopenblas-dev liblapack-dev\nRUN /miniconda/bin/conda install -y faiss-cpu -c pytorch\nRUN /miniconda/bin/conda install -y cython\n#   Build and install dlib\nRUN apt-get update \\\n && apt-get install --no-install-recommends cmake=3.5.1-1ubuntu3 git=1:2.7.4-0ubuntu1.10 build-essential=12.1ubuntu2 -y \\\n && git clone https://github.com/davisking/dlib.git \\\n && mkdir /dlib/build \\\n && cd /dlib/build \\\n && cmake .. -DDLIB_USE_CUDA=0 -DUSE_AVX_INSTRUCTIONS=0 \\\n && cmake --build . \\\n && cd /dlib \\\n && /miniconda/bin/python setup.py install --no USE_AVX_INSTRUCTIONS --no DLIB_USE_CUDA\nRUN /miniconda/bin/conda install -y pytorch=0.4.1 -c pytorch\n#   RUN /venv/bin/pip install http://download.pytorch.org/whl/cpu/torch-0.4.1-cp35-cp35m-linux_x86_64.whl && /venv/bin/pip install torchvision\nRUN /miniconda/bin/conda install -y psycopg2\nRUN mkdir /code\nWORKDIR /code\nCOPY requirements.txt /code/\nRUN /miniconda/bin/pip install -r requirements.txt\nRUN /miniconda/bin/python -m spacy download en_core_web_sm\nWORKDIR /code/api/places365\nRUN wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/places365_model.tar.gz\nRUN tar xf places365_model.tar.gz\nWORKDIR /code/api/im2txt\nRUN wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/im2txt_model.tar.gz\nRUN tar xf im2txt_model.tar.gz\nRUN wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/im2txt_data.tar.gz\nRUN tar xf im2txt_data.tar.gz\nRUN rm -rf /var/lib/apt/lists/*\nRUN apt-get remove --purge -y cmake git \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /data\n#   Application admin creds\nENV ADMIN_EMAIL=\"admin@dot.com\"\nENV ADMIN_USERNAME=\"admin\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n#   Django key. CHANGEME\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n#   Until we serve media files properly (django dev server doesn't serve media files with with debug=false)\nENV DEBUG=\"true \"\n#   Database connection info\nENV DB_BACKEND=\"postgresql\"\nENV DB_NAME=\"ownphotos\"\nENV DB_USER=\"ownphotos\"\nENV DB_PASS=\"ownphotos\"\nENV DB_HOST=\"database\"\nENV DB_PORT=\"5432\"\nENV BACKEND_HOST=\"localhost\"\nENV FRONTEND_HOST=\"localhost\"\n#   REDIS location\nENV REDIS_HOST=\"redis\"\nENV REDIS_PORT=\"11211\"\n#   Timezone\nENV TIME_ZONE=\"UTC\"\nEXPOSE 80/tcp\nCOPY . /code\nRUN mv /code/config_docker.py /code/config.py\nWORKDIR /code\nENTRYPOINT ./entrypoint.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Hooram Nam <nhooram@gmail.com>\nENV MAPZEN_API_KEY=\"mapzen-XXXX\"\nENV MAPBOX_API_KEY=\"mapbox-XXXX\"\nENV ALLOWED_HOSTS=\"*\"\nRUN apt-get update \\\n && apt-get install libsm6 libboost-all-dev libglib2.0-0 libxrender-dev wget curl nginx -y\nRUN apt-get install bzip2 -y\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN bash Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda\n#  RUN apt-get install libopenblas-dev liblapack-dev\nRUN /miniconda/bin/conda install -y faiss-cpu -c pytorch\nRUN /miniconda/bin/conda install -y cython\n#  Build and install dlib\nRUN apt-get update \\\n && apt-get install cmake git build-essential -y \\\n && git clone https://github.com/davisking/dlib.git \\\n && mkdir /dlib/build \\\n && cd /dlib/build \\\n && cmake .. -DDLIB_USE_CUDA=0 -DUSE_AVX_INSTRUCTIONS=0 \\\n && cmake --build . \\\n && cd /dlib \\\n && /miniconda/bin/python setup.py install --no USE_AVX_INSTRUCTIONS --no DLIB_USE_CUDA\nRUN /miniconda/bin/conda install -y pytorch=0.4.1 -c pytorch\n#  RUN /venv/bin/pip install http://download.pytorch.org/whl/cpu/torch-0.4.1-cp35-cp35m-linux_x86_64.whl && /venv/bin/pip install torchvision\nRUN /miniconda/bin/conda install -y psycopg2\nRUN mkdir /code\nWORKDIR /code\nCOPY requirements.txt /code/\nRUN /miniconda/bin/pip install -r requirements.txt\nRUN /miniconda/bin/python -m spacy download en_core_web_sm\nWORKDIR /code/api/places365\nRUN wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/places365_model.tar.gz\nRUN tar xf places365_model.tar.gz\nWORKDIR /code/api/im2txt\nRUN wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/im2txt_model.tar.gz\nRUN tar xf im2txt_model.tar.gz\nRUN wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/im2txt_data.tar.gz\nRUN tar xf im2txt_data.tar.gz\nRUN rm -rf /var/lib/apt/lists/*\nRUN apt-get remove --purge -y cmake git \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /data\n#  Application admin creds\nENV ADMIN_EMAIL=\"admin@dot.com\"\nENV ADMIN_USERNAME=\"admin\"\nENV ADMIN_PASSWORD=\"changeme\"\n#  Django key. CHANGEME\nENV SECRET_KEY=\"supersecretkey\"\n#  Until we serve media files properly (django dev server doesn't serve media files with with debug=false)\nENV DEBUG=\"true \"\n#  Database connection info\nENV DB_BACKEND=\"postgresql\"\nENV DB_NAME=\"ownphotos\"\nENV DB_USER=\"ownphotos\"\nENV DB_PASS=\"ownphotos\"\nENV DB_HOST=\"database\"\nENV DB_PORT=\"5432\"\nENV BACKEND_HOST=\"localhost\"\nENV FRONTEND_HOST=\"localhost\"\n#  REDIS location\nENV REDIS_HOST=\"redis\"\nENV REDIS_PORT=\"11211\"\n#  Timezone\nENV TIME_ZONE=\"UTC\"\nEXPOSE 80/tcp\nCOPY . /code\nRUN mv /code/config_docker.py /code/config.py\nWORKDIR /code\nENTRYPOINT ./entrypoint.sh\n","injectedSmells":[],"originalDockerfileHash":"d55f9eabdfc2e5e04ab9dbc01c8ec88c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Hooram Nam <nhooram@gmail.com>\nENV MAPZEN_API_KEY=\"mapzen-XXXX\"\nENV MAPBOX_API_KEY=\"mapbox-XXXX\"\nENV ALLOWED_HOSTS=\"*\"\nRUN apt-get update \\\n && apt-get install libsm6 libboost-all-dev libglib2.0-0 libxrender-dev wget curl nginx -y\nRUN apt-get install bzip2 -y\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN bash Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda\n#   RUN apt-get install libopenblas-dev liblapack-dev\nRUN /miniconda/bin/conda install -y faiss-cpu -c pytorch\nRUN /miniconda/bin/conda install -y cython\n#   Build and install dlib\nRUN apt-get update \\\n && apt-get install cmake git build-essential -y \\\n && git clone https://github.com/davisking/dlib.git \\\n && mkdir /dlib/build \\\n && cd /dlib/build \\\n && cmake .. -DDLIB_USE_CUDA=0 -DUSE_AVX_INSTRUCTIONS=0 \\\n && cmake --build . \\\n && cd /dlib \\\n && /miniconda/bin/python setup.py install --no USE_AVX_INSTRUCTIONS --no DLIB_USE_CUDA\nRUN /miniconda/bin/conda install -y pytorch=0.4.1 -c pytorch\n#   RUN /venv/bin/pip install http://download.pytorch.org/whl/cpu/torch-0.4.1-cp35-cp35m-linux_x86_64.whl && /venv/bin/pip install torchvision\nRUN /miniconda/bin/conda install -y psycopg2\nRUN mkdir /code\nWORKDIR /code\nCOPY requirements.txt /code/\nRUN /miniconda/bin/pip install -r requirements.txt\nRUN /miniconda/bin/python -m spacy download en_core_web_sm\nWORKDIR /code/api/places365\nRUN wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/places365_model.tar.gz\nRUN tar xf places365_model.tar.gz\nWORKDIR /code/api/im2txt\nRUN wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/im2txt_model.tar.gz\nRUN tar xf im2txt_model.tar.gz\nRUN wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/im2txt_data.tar.gz\nRUN tar xf im2txt_data.tar.gz\nRUN rm -rf /var/lib/apt/lists/*\nRUN apt-get remove --purge -y cmake git \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /data\n#   Application admin creds\nENV ADMIN_EMAIL=\"admin@dot.com\"\nENV ADMIN_USERNAME=\"admin\"\nENV ADMIN_PASSWORD=\"changeme\"\n#   Django key. CHANGEME\nENV SECRET_KEY=\"supersecretkey\"\n#   Until we serve media files properly (django dev server doesn't serve media files with with debug=false)\nENV DEBUG=\"true \"\n#   Database connection info\nENV DB_BACKEND=\"postgresql\"\nENV DB_NAME=\"ownphotos\"\nENV DB_USER=\"ownphotos\"\nENV DB_PASS=\"ownphotos\"\nENV DB_HOST=\"database\"\nENV DB_PORT=\"5432\"\nENV BACKEND_HOST=\"localhost\"\nENV FRONTEND_HOST=\"localhost\"\n#   REDIS location\nENV REDIS_HOST=\"redis\"\nENV REDIS_PORT=\"11211\"\n#   Timezone\nENV TIME_ZONE=\"UTC\"\nEXPOSE 80/tcp\nCOPY . /code\nRUN mv /code/config_docker.py /code/config.py\nWORKDIR /code\nENTRYPOINT ./entrypoint.sh\n","originalDockerfileUglifiedHash":"7ebc18115950342ae46530f0074095e7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9988f3b78339425a9b17e6e3f8c33801d7c71b7d.dockerfile"}