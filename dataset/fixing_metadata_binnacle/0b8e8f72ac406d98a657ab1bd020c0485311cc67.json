{"seed":113977867,"processedDockerfileHash":"b41d9740f1cf794efe33bddc333a9d92","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial\nLABEL maintainer=\"uberbrady, hinchk\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y\nRUN LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2=2.4.18-2ubuntu3.17 apache2-bin=2.4.18-2ubuntu3.17 libapache2-mod-php7.1 php7.1-curl php7.1-ldap php7.1-mysql php7.1-mcrypt php7.1-gd php7.1-xml php7.1-mbstring php7.1-zip php7.1-bcmath patch=2.7.5-1ubuntu0.16.04.2 curl=7.47.0-1ubuntu2.19 vim=2:7.4.1689-3ubuntu1.5 git=1:2.7.4-0ubuntu1.10 mysql-client=5.7.33-0ubuntu0.16.04.1 supervisor=3.2.0-2ubuntu0.2 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN phpenmod mcrypt\nRUN phpenmod gd\nRUN phpenmod bcmath\nRUN sed -i 's/variables_order = .*/variables_order = \"EGPCS\"/' /etc/php/7.1/apache2/php.ini\nRUN sed -i 's/variables_order = .*/variables_order = \"EGPCS\"/' /etc/php/7.1/cli/php.ini\nRUN useradd -m --uid 1000 --gid 50 docker\nRUN echo export APACHE_RUN_USER=docker >> /etc/apache2/envvars\nRUN echo export APACHE_RUN_GROUP=staff >> /etc/apache2/envvars\nCOPY docker/000-default.conf /etc/apache2/sites-enabled/000-default.conf\n#  SSL\nRUN mkdir -p /var/lib/snipeit/ssl\nCOPY docker/001-default-ssl.conf /etc/apache2/sites-enabled/001-default-ssl.conf\n#  COPY docker/001-default-ssl.conf /etc/apache2/sites-available/001-default-ssl.conf\nRUN a2enmod ssl\n#  RUN a2ensite 001-default-ssl.conf\nCOPY . /var/www/html\nRUN a2enmod rewrite\n#  ########### INITIAL APPLICATION SETUP #####################\nWORKDIR /var/www/html\n#  Append to bootstrap file (less brittle than 'patch')\n#   RUN sed -i 's/return $app;/$env=\"production\";\\nreturn $app;/' bootstrap/start.php\n#  copy all configuration files\n#   COPY docker/*.php /var/www/html/app/config/production/\nCOPY docker/docker.env /var/www/html/.env\nRUN chown -R docker /var/www/html\nRUN rm -r \"/var/www/html/storage/private_uploads\" \\\n && ln -fs \"/var/lib/snipeit/data/private_uploads\" \"/var/www/html/storage/private_uploads\" \\\n && rm -rf \"/var/www/html/public/uploads\" \\\n && ln -fs \"/var/lib/snipeit/data/uploads\" \"/var/www/html/public/uploads\" \\\n && rm -r \"/var/www/html/storage/app/backups\" \\\n && ln -fs \"/var/lib/snipeit/dumps\" \"/var/www/html/storage/app/backups\" \\\n && mkdir \"/var/lib/snipeit/keys\" \\\n && ln -fs \"/var/lib/snipeit/keys/oauth-private.key\" \"/var/www/html/storage/oauth-private.key\" \\\n && ln -fs \"/var/lib/snipeit/keys/oauth-public.key\" \"/var/www/html/storage/oauth-public.key\" \\\n && chown docker \"/var/lib/snipeit/keys/\" \\\n && chmod +x /var/www/html/artisan \\\n && echo \"Finished setting up application in /var/www/html\"\n#  ############# DEPENDENCIES via COMPOSER ###################\n#  global install of composer\nRUN cd /tmp ; curl -sS https://getcomposer.org/installer | php ; mv /tmp/composer.phar /usr/local/bin/composer\n#   Get dependencies\nUSER docker\nRUN cd /var/www/html ; composer install \\\n && rm -rf /home/docker/.composer/cache\nUSER root\n#  ############## APPLICATION INSTALL/INIT #################\n#  RUN php artisan app:install\n#   too interactive! Try something else\n#  COPY docker/app_install.exp /tmp/app_install.exp\n#  RUN chmod +x /tmp/app_install.exp\n#  RUN /tmp/app_install.exp\n#  ############## DATA VOLUME #################\nVOLUME [\"/var/lib/snipeit\"]\n#  #### START SERVER\nCOPY docker/startup.sh docker/supervisord.conf /\nCOPY docker/supervisor-exit-event-listener /usr/bin/supervisor-exit-event-listener\nRUN chmod +x /startup.sh /usr/bin/supervisor-exit-event-listener\nCMD [\"/startup.sh\"]\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial\nLABEL maintainer=\"uberbrady, hinchk\"\nRUN apt-get update \\\n && apt-get install software-properties-common -y\nRUN LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php\nRUN apt-get update \\\n && apt-get install apache2 apache2-bin libapache2-mod-php7.1 php7.1-curl php7.1-ldap php7.1-mysql php7.1-mcrypt php7.1-gd php7.1-xml php7.1-mbstring php7.1-zip php7.1-bcmath patch curl vim git mysql-client supervisor -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN phpenmod mcrypt\nRUN phpenmod gd\nRUN phpenmod bcmath\nRUN sed -i 's/variables_order = .*/variables_order = \"EGPCS\"/' /etc/php/7.1/apache2/php.ini\nRUN sed -i 's/variables_order = .*/variables_order = \"EGPCS\"/' /etc/php/7.1/cli/php.ini\nRUN useradd -m --uid 1000 --gid 50 docker\nRUN echo export APACHE_RUN_USER=docker >> /etc/apache2/envvars\nRUN echo export APACHE_RUN_GROUP=staff >> /etc/apache2/envvars\nCOPY docker/000-default.conf /etc/apache2/sites-enabled/000-default.conf\n# SSL\nRUN mkdir -p /var/lib/snipeit/ssl\nCOPY docker/001-default-ssl.conf /etc/apache2/sites-enabled/001-default-ssl.conf\n# COPY docker/001-default-ssl.conf /etc/apache2/sites-available/001-default-ssl.conf\nRUN a2enmod ssl\n# RUN a2ensite 001-default-ssl.conf\nCOPY . /var/www/html\nRUN a2enmod rewrite\n# ########### INITIAL APPLICATION SETUP #####################\nWORKDIR /var/www/html\n# Append to bootstrap file (less brittle than 'patch')\n#  RUN sed -i 's/return $app;/$env=\"production\";\\nreturn $app;/' bootstrap/start.php\n# copy all configuration files\n#  COPY docker/*.php /var/www/html/app/config/production/\nCOPY docker/docker.env /var/www/html/.env\nRUN chown -R docker /var/www/html\nRUN rm -r \"/var/www/html/storage/private_uploads\" \\\n && ln -fs \"/var/lib/snipeit/data/private_uploads\" \"/var/www/html/storage/private_uploads\" \\\n && rm -rf \"/var/www/html/public/uploads\" \\\n && ln -fs \"/var/lib/snipeit/data/uploads\" \"/var/www/html/public/uploads\" \\\n && rm -r \"/var/www/html/storage/app/backups\" \\\n && ln -fs \"/var/lib/snipeit/dumps\" \"/var/www/html/storage/app/backups\" \\\n && mkdir \"/var/lib/snipeit/keys\" \\\n && ln -fs \"/var/lib/snipeit/keys/oauth-private.key\" \"/var/www/html/storage/oauth-private.key\" \\\n && ln -fs \"/var/lib/snipeit/keys/oauth-public.key\" \"/var/www/html/storage/oauth-public.key\" \\\n && chown docker \"/var/lib/snipeit/keys/\" \\\n && chmod +x /var/www/html/artisan \\\n && echo \"Finished setting up application in /var/www/html\"\n# ############# DEPENDENCIES via COMPOSER ###################\n# global install of composer\nRUN cd /tmp ; curl -sS https://getcomposer.org/installer | php ; mv /tmp/composer.phar /usr/local/bin/composer\n#  Get dependencies\nUSER docker\nRUN cd /var/www/html ; composer install \\\n && rm -rf /home/docker/.composer/cache\nUSER root\n# ############## APPLICATION INSTALL/INIT #################\n# RUN php artisan app:install\n#  too interactive! Try something else\n# COPY docker/app_install.exp /tmp/app_install.exp\n# RUN chmod +x /tmp/app_install.exp\n# RUN /tmp/app_install.exp\n# ############## DATA VOLUME #################\nVOLUME [\"/var/lib/snipeit\"]\n# #### START SERVER\nCOPY docker/startup.sh docker/supervisord.conf /\nCOPY docker/supervisor-exit-event-listener /usr/bin/supervisor-exit-event-listener\nRUN chmod +x /startup.sh /usr/bin/supervisor-exit-event-listener\nCMD [\"/startup.sh\"]\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n","injectedSmells":[],"originalDockerfileHash":"78515f6334d2d0f423eed3e906cb2a0b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial\nLABEL maintainer=\"uberbrady, hinchk\"\nRUN apt-get update \\\n && apt-get install software-properties-common -y\nRUN LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php\nRUN apt-get update \\\n && apt-get install apache2 apache2-bin libapache2-mod-php7.1 php7.1-curl php7.1-ldap php7.1-mysql php7.1-mcrypt php7.1-gd php7.1-xml php7.1-mbstring php7.1-zip php7.1-bcmath patch curl vim git mysql-client supervisor -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN phpenmod mcrypt\nRUN phpenmod gd\nRUN phpenmod bcmath\nRUN sed -i 's/variables_order = .*/variables_order = \"EGPCS\"/' /etc/php/7.1/apache2/php.ini\nRUN sed -i 's/variables_order = .*/variables_order = \"EGPCS\"/' /etc/php/7.1/cli/php.ini\nRUN useradd -m --uid 1000 --gid 50 docker\nRUN echo export APACHE_RUN_USER=docker >> /etc/apache2/envvars\nRUN echo export APACHE_RUN_GROUP=staff >> /etc/apache2/envvars\nCOPY docker/000-default.conf /etc/apache2/sites-enabled/000-default.conf\n#  SSL\nRUN mkdir -p /var/lib/snipeit/ssl\nCOPY docker/001-default-ssl.conf /etc/apache2/sites-enabled/001-default-ssl.conf\n#  COPY docker/001-default-ssl.conf /etc/apache2/sites-available/001-default-ssl.conf\nRUN a2enmod ssl\n#  RUN a2ensite 001-default-ssl.conf\nCOPY . /var/www/html\nRUN a2enmod rewrite\n#  ########### INITIAL APPLICATION SETUP #####################\nWORKDIR /var/www/html\n#  Append to bootstrap file (less brittle than 'patch')\n#   RUN sed -i 's/return $app;/$env=\"production\";\\nreturn $app;/' bootstrap/start.php\n#  copy all configuration files\n#   COPY docker/*.php /var/www/html/app/config/production/\nCOPY docker/docker.env /var/www/html/.env\nRUN chown -R docker /var/www/html\nRUN rm -r \"/var/www/html/storage/private_uploads\" \\\n && ln -fs \"/var/lib/snipeit/data/private_uploads\" \"/var/www/html/storage/private_uploads\" \\\n && rm -rf \"/var/www/html/public/uploads\" \\\n && ln -fs \"/var/lib/snipeit/data/uploads\" \"/var/www/html/public/uploads\" \\\n && rm -r \"/var/www/html/storage/app/backups\" \\\n && ln -fs \"/var/lib/snipeit/dumps\" \"/var/www/html/storage/app/backups\" \\\n && mkdir \"/var/lib/snipeit/keys\" \\\n && ln -fs \"/var/lib/snipeit/keys/oauth-private.key\" \"/var/www/html/storage/oauth-private.key\" \\\n && ln -fs \"/var/lib/snipeit/keys/oauth-public.key\" \"/var/www/html/storage/oauth-public.key\" \\\n && chown docker \"/var/lib/snipeit/keys/\" \\\n && chmod +x /var/www/html/artisan \\\n && echo \"Finished setting up application in /var/www/html\"\n#  ############# DEPENDENCIES via COMPOSER ###################\n#  global install of composer\nRUN cd /tmp ; curl -sS https://getcomposer.org/installer | php ; mv /tmp/composer.phar /usr/local/bin/composer\n#   Get dependencies\nUSER docker\nRUN cd /var/www/html ; composer install \\\n && rm -rf /home/docker/.composer/cache\nUSER root\n#  ############## APPLICATION INSTALL/INIT #################\n#  RUN php artisan app:install\n#   too interactive! Try something else\n#  COPY docker/app_install.exp /tmp/app_install.exp\n#  RUN chmod +x /tmp/app_install.exp\n#  RUN /tmp/app_install.exp\n#  ############## DATA VOLUME #################\nVOLUME [\"/var/lib/snipeit\"]\n#  #### START SERVER\nCOPY docker/startup.sh docker/supervisord.conf /\nCOPY docker/supervisor-exit-event-listener /usr/bin/supervisor-exit-event-listener\nRUN chmod +x /startup.sh /usr/bin/supervisor-exit-event-listener\nCMD [\"/startup.sh\"]\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n","originalDockerfileUglifiedHash":"8c55f0af00299341dbef73f3237f4485","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0b8e8f72ac406d98a657ab1bd020c0485311cc67.dockerfile"}