{"seed":3027964631,"processedDockerfileHash":"a3d071f81c2d7f09a46fb145dcc19dab","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ----------------------------------------------------------------#\n#   Dockerfile to build a container for binary reverse engineering #\n#   and exploitation. Suitable for CTFs.                           #\n#                                                                  #\n#   See https://github.com/superkojiman/pwnbox for details.        #\n#                                                                  #\n#   To build: docker build -t superkojiman/pwnbox                  #\n#  ----------------------------------------------------------------#\nFROM phusion/baseimage:0.9.19\nMAINTAINER superkojiman@techorganic.com\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg --add-architecture i386\nRUN : \\\n && apt-get -y upgrade\n#  -------------------------------------#\n#   Install packages from Ubuntu repos  #\n#  -------------------------------------#\nRUN (apt-get update ;apt-get install --no-install-recommends sudo build-essential gcc-multilib g++-multilib gdb gdb-multiarch python-dev python3-dev python-pip python3-pip ipython default-jdk net-tools nasm cmake rubygems vim tmux git binwalk strace ltrace autoconf socat netcat nmap wget tcpdump exiftool squashfs-tools unzip virtualenvwrapper upx-ucl man-db manpages-dev libtool-bin bison libini-config-dev libssl-dev libffi-dev libglib2.0-dev libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 -y )\nRUN apt-get -y autoremove\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  -------------------------------------#\n#   Install stuff from pip repos        #\n#  -------------------------------------#\nRUN pip install pycipher==0.5.2 uncompyle==2.0.0 ropgadget==7.3 distorm3==3.5.2 filebytes==0.10.2 r2pipe==1.8.0 scapy==2.5.0 python-constraint==1.4.0\n#   setup angr virtualenv\nRUN bash -c 'source /etc/bash_completion.d/virtualenvwrapper \\\n && mkvirtualenv angr \\\n && pip install angr \\\n && deactivate'\n#   install pwntools 3\nRUN pip install pwntools==4.9.0 --upgrade\n#   install docopt for xortool\nRUN pip install docopt==0.6.2\n#  -------------------------------------#\n#   Install stuff from GitHub repos     #\n#  -------------------------------------#\n#   install capstone\nRUN git clone https://github.com/aquynh/capstone.git /opt/capstone \\\n && cd /opt/capstone \\\n && ./make.sh \\\n && ./make.sh install \\\n && cd bindings/python \\\n && make install \\\n && make install3\nRUN git clone https://gist.github.com/47e3a5ac99867e7f4e0d.git /opt/binstall \\\n && cd /opt/binstall \\\n && chmod 755 binstall.sh \\\n && ./binstall.sh amd64 \\\n && ./binstall.sh i386\n#   install radrare2\nRUN git clone https://github.com/radare/radare2.git /opt/radare2 \\\n && cd /opt/radare2 \\\n && git fetch --tags \\\n && git checkout $( git describe --tags $( git rev-list --tags --max-count=1 ;) ;) \\\n && ./sys/install.sh \\\n && make symstall\n#   install ropper\nRUN git clone https://github.com/sashs/Ropper.git /opt/ropper \\\n && cd /opt/ropper \\\n && python setup.py install\nRUN rm -rf /opt/ropper\n#   install ropeme\nRUN git clone https://github.com/packz/ropeme.git /opt/ropeme \\\n && sed -i 's/distorm/distorm3/g' /opt/ropeme/ropeme/gadgets.py\n#   install rp++\nRUN mkdir /opt/rp\nRUN wget https://github.com/downloads/0vercl0k/rp/rp-lin-x64 -P /opt/rp\nRUN wget https://github.com/downloads/0vercl0k/rp/rp-lin-x86 -P /opt/rp\n#   install retargetable decompiler scripts\nRUN git clone https://github.com/s3rvac/retdec-sh.git /opt/retdec-sh\n#   install villoc\nRUN git clone https://github.com/wapiflapi/villoc.git /opt/villoc\n#   install libformatstr\nRUN git clone https://github.com/hellman/libformatstr.git /opt/libformatstr \\\n && cd /opt/libformatstr \\\n && python setup.py install\nRUN rm -rf /opt/libformatstr\n#   install preeny\nRUN git clone https://github.com/zardus/preeny.git /opt/preeny \\\n && cd /opt/preeny \\\n && make\n#   install xortool\nRUN git clone https://github.com/hellman/xortool.git /opt/xortool \\\n && cd /opt/xortool \\\n && python setup.py install\n#   install tmux-resurrect\nRUN git clone https://github.com/tmux-plugins/tmux-resurrect.git /opt/tmux-resurrect\n#   install libc-database\nRUN git clone https://github.com/niklasb/libc-database /opt/libc-database\n#   install peda\nRUN git clone https://github.com/longld/peda.git /opt/peda\n#   install gef\nRUN git clone https://github.com/hugsy/gef.git /opt/gef\n#   install pwndbg\nRUN git clone https://github.com/pwndbg/pwndbg.git /opt/pwndbg \\\n && cd /opt/pwndbg \\\n && ./setup.sh\n#   install libseccomp\nRUN git clone https://github.com/seccomp/libseccomp.git /opt/libseccomp \\\n && cd /opt/libseccomp \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   install PinCTF\nRUN git clone https://github.com/ChrisTheCoolHut/PinCTF.git /opt/PinCTF \\\n && cd /opt/PinCTF \\\n && ./installPin.sh\n#   install one_gadget\nRUN gem install one_gadget --version 1.8.1\nENTRYPOINT [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ----------------------------------------------------------------#\n#  Dockerfile to build a container for binary reverse engineering #\n#  and exploitation. Suitable for CTFs.                           #\n#                                                                 #\n#  See https://github.com/superkojiman/pwnbox for details.        #\n#                                                                 #\n#  To build: docker build -t superkojiman/pwnbox                  #\n# ----------------------------------------------------------------#\nFROM phusion/baseimage:0.9.19\nMAINTAINER superkojiman@techorganic.com\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg --add-architecture i386\nRUN apt-get update \\\n && apt-get -y upgrade\n# -------------------------------------#\n#  Install packages from Ubuntu repos  #\n# -------------------------------------#\nRUN apt-get install sudo build-essential gcc-multilib g++-multilib gdb gdb-multiarch python-dev python3-dev python-pip python3-pip ipython default-jdk net-tools nasm cmake rubygems vim tmux git binwalk strace ltrace autoconf socat netcat nmap wget tcpdump exiftool squashfs-tools unzip virtualenvwrapper upx-ucl man-db manpages-dev libtool-bin bison libini-config-dev libssl-dev libffi-dev libglib2.0-dev libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 -y\nRUN apt-get -y autoremove\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n# -------------------------------------#\n#  Install stuff from pip repos        #\n# -------------------------------------#\nRUN pip install pycipher uncompyle ropgadget distorm3 filebytes r2pipe scapy python-constraint\n#  setup angr virtualenv\nRUN bash -c 'source /etc/bash_completion.d/virtualenvwrapper \\\n && mkvirtualenv angr \\\n && pip install angr \\\n && deactivate'\n#  install pwntools 3\nRUN pip install pwntools --upgrade\n#  install docopt for xortool\nRUN pip install docopt\n# -------------------------------------#\n#  Install stuff from GitHub repos     #\n# -------------------------------------#\n#  install capstone\nRUN git clone https://github.com/aquynh/capstone.git /opt/capstone \\\n && cd /opt/capstone \\\n && ./make.sh \\\n && ./make.sh install \\\n && cd bindings/python \\\n && make install \\\n && make install3\nRUN git clone https://gist.github.com/47e3a5ac99867e7f4e0d.git /opt/binstall \\\n && cd /opt/binstall \\\n && chmod 755 binstall.sh \\\n && ./binstall.sh amd64 \\\n && ./binstall.sh i386\n#  install radrare2\nRUN git clone https://github.com/radare/radare2.git /opt/radare2 \\\n && cd /opt/radare2 \\\n && git fetch --tags \\\n && git checkout $( git describe --tags $( git rev-list --tags --max-count=1 ;) ;) \\\n && ./sys/install.sh \\\n && make symstall\n#  install ropper\nRUN git clone https://github.com/sashs/Ropper.git /opt/ropper \\\n && cd /opt/ropper \\\n && python setup.py install\nRUN rm -rf /opt/ropper\n#  install ropeme\nRUN git clone https://github.com/packz/ropeme.git /opt/ropeme \\\n && sed -i 's/distorm/distorm3/g' /opt/ropeme/ropeme/gadgets.py\n#  install rp++\nRUN mkdir /opt/rp\nRUN wget https://github.com/downloads/0vercl0k/rp/rp-lin-x64 -P /opt/rp\nRUN wget https://github.com/downloads/0vercl0k/rp/rp-lin-x86 -P /opt/rp\n#  install retargetable decompiler scripts\nRUN git clone https://github.com/s3rvac/retdec-sh.git /opt/retdec-sh\n#  install villoc\nRUN git clone https://github.com/wapiflapi/villoc.git /opt/villoc\n#  install libformatstr\nRUN git clone https://github.com/hellman/libformatstr.git /opt/libformatstr \\\n && cd /opt/libformatstr \\\n && python setup.py install\nRUN rm -rf /opt/libformatstr\n#  install preeny\nRUN git clone https://github.com/zardus/preeny.git /opt/preeny \\\n && cd /opt/preeny \\\n && make\n#  install xortool\nRUN git clone https://github.com/hellman/xortool.git /opt/xortool \\\n && cd /opt/xortool \\\n && python setup.py install\n#  install tmux-resurrect\nRUN git clone https://github.com/tmux-plugins/tmux-resurrect.git /opt/tmux-resurrect\n#  install libc-database\nRUN git clone https://github.com/niklasb/libc-database /opt/libc-database\n#  install peda\nRUN git clone https://github.com/longld/peda.git /opt/peda\n#  install gef\nRUN git clone https://github.com/hugsy/gef.git /opt/gef\n#  install pwndbg\nRUN git clone https://github.com/pwndbg/pwndbg.git /opt/pwndbg \\\n && cd /opt/pwndbg \\\n && ./setup.sh\n#  install libseccomp\nRUN git clone https://github.com/seccomp/libseccomp.git /opt/libseccomp \\\n && cd /opt/libseccomp \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#  install PinCTF\nRUN git clone https://github.com/ChrisTheCoolHut/PinCTF.git /opt/PinCTF \\\n && cd /opt/PinCTF \\\n && ./installPin.sh\n#  install one_gadget\nRUN gem install one_gadget\nENTRYPOINT [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"7ceb0f98c861f849e42f9130b47b12d7","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ----------------------------------------------------------------#\n#   Dockerfile to build a container for binary reverse engineering #\n#   and exploitation. Suitable for CTFs.                           #\n#                                                                  #\n#   See https://github.com/superkojiman/pwnbox for details.        #\n#                                                                  #\n#   To build: docker build -t superkojiman/pwnbox                  #\n#  ----------------------------------------------------------------#\nFROM phusion/baseimage:0.9.19\nMAINTAINER superkojiman@techorganic.com\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg --add-architecture i386\nRUN apt-get update \\\n && apt-get -y upgrade\n#  -------------------------------------#\n#   Install packages from Ubuntu repos  #\n#  -------------------------------------#\nRUN apt-get install sudo build-essential gcc-multilib g++-multilib gdb gdb-multiarch python-dev python3-dev python-pip python3-pip ipython default-jdk net-tools nasm cmake rubygems vim tmux git binwalk strace ltrace autoconf socat netcat nmap wget tcpdump exiftool squashfs-tools unzip virtualenvwrapper upx-ucl man-db manpages-dev libtool-bin bison libini-config-dev libssl-dev libffi-dev libglib2.0-dev libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 -y\nRUN apt-get -y autoremove\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  -------------------------------------#\n#   Install stuff from pip repos        #\n#  -------------------------------------#\nRUN pip install pycipher uncompyle ropgadget distorm3 filebytes r2pipe scapy python-constraint\n#   setup angr virtualenv\nRUN bash -c 'source /etc/bash_completion.d/virtualenvwrapper \\\n && mkvirtualenv angr \\\n && pip install angr \\\n && deactivate'\n#   install pwntools 3\nRUN pip install pwntools --upgrade\n#   install docopt for xortool\nRUN pip install docopt\n#  -------------------------------------#\n#   Install stuff from GitHub repos     #\n#  -------------------------------------#\n#   install capstone\nRUN git clone https://github.com/aquynh/capstone.git /opt/capstone \\\n && cd /opt/capstone \\\n && ./make.sh \\\n && ./make.sh install \\\n && cd bindings/python \\\n && make install \\\n && make install3\nRUN git clone https://gist.github.com/47e3a5ac99867e7f4e0d.git /opt/binstall \\\n && cd /opt/binstall \\\n && chmod 755 binstall.sh \\\n && ./binstall.sh amd64 \\\n && ./binstall.sh i386\n#   install radrare2\nRUN git clone https://github.com/radare/radare2.git /opt/radare2 \\\n && cd /opt/radare2 \\\n && git fetch --tags \\\n && git checkout $( git describe --tags $( git rev-list --tags --max-count=1 ;) ;) \\\n && ./sys/install.sh \\\n && make symstall\n#   install ropper\nRUN git clone https://github.com/sashs/Ropper.git /opt/ropper \\\n && cd /opt/ropper \\\n && python setup.py install\nRUN rm -rf /opt/ropper\n#   install ropeme\nRUN git clone https://github.com/packz/ropeme.git /opt/ropeme \\\n && sed -i 's/distorm/distorm3/g' /opt/ropeme/ropeme/gadgets.py\n#   install rp++\nRUN mkdir /opt/rp\nRUN wget https://github.com/downloads/0vercl0k/rp/rp-lin-x64 -P /opt/rp\nRUN wget https://github.com/downloads/0vercl0k/rp/rp-lin-x86 -P /opt/rp\n#   install retargetable decompiler scripts\nRUN git clone https://github.com/s3rvac/retdec-sh.git /opt/retdec-sh\n#   install villoc\nRUN git clone https://github.com/wapiflapi/villoc.git /opt/villoc\n#   install libformatstr\nRUN git clone https://github.com/hellman/libformatstr.git /opt/libformatstr \\\n && cd /opt/libformatstr \\\n && python setup.py install\nRUN rm -rf /opt/libformatstr\n#   install preeny\nRUN git clone https://github.com/zardus/preeny.git /opt/preeny \\\n && cd /opt/preeny \\\n && make\n#   install xortool\nRUN git clone https://github.com/hellman/xortool.git /opt/xortool \\\n && cd /opt/xortool \\\n && python setup.py install\n#   install tmux-resurrect\nRUN git clone https://github.com/tmux-plugins/tmux-resurrect.git /opt/tmux-resurrect\n#   install libc-database\nRUN git clone https://github.com/niklasb/libc-database /opt/libc-database\n#   install peda\nRUN git clone https://github.com/longld/peda.git /opt/peda\n#   install gef\nRUN git clone https://github.com/hugsy/gef.git /opt/gef\n#   install pwndbg\nRUN git clone https://github.com/pwndbg/pwndbg.git /opt/pwndbg \\\n && cd /opt/pwndbg \\\n && ./setup.sh\n#   install libseccomp\nRUN git clone https://github.com/seccomp/libseccomp.git /opt/libseccomp \\\n && cd /opt/libseccomp \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   install PinCTF\nRUN git clone https://github.com/ChrisTheCoolHut/PinCTF.git /opt/PinCTF \\\n && cd /opt/PinCTF \\\n && ./installPin.sh\n#   install one_gadget\nRUN gem install one_gadget\nENTRYPOINT [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"da866e8fbcf2ab3b8c37d1dcb410f3ca","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5682defbda849877257d281277df5c47376d4dd7.dockerfile"}