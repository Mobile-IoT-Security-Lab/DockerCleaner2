{"seed":3575904829,"processedDockerfileHash":"ab473dd427c81753f7a309532de5abe1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Docker container for Centos 6.5\n#   See https://github.com/ceejatec/naked-docker/ for details about the\n#   construction of the base image.\nFROM ceejatec/naked-centos:6.5\nMAINTAINER ceej@couchbase.com\nUSER root\nRUN yum install -y openssh-server sudo \\\n && yum clean packages\n#   Set up for SSH daemon\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config \\\n && /etc/init.d/sshd start\n#   Create couchbase user with password-less sudo privs, and give\n#   ownership of /opt/couchbase\nRUN groupadd -g1000 couchbase \\\n && useradd couchbase -g couchbase -u1000 -G wheel -m -s /bin/bash \\\n && mkdir /opt/couchbase \\\n && chown -R couchbase:couchbase /opt/couchbase \\\n && echo 'couchbase:couchbase' | chpasswd \\\n && echo '%wheel ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/wheel_group \\\n && echo 'Defaults:%wheel !requiretty' >> /etc/sudoers.d/wheel_group \\\n && chmod 440 /etc/sudoers.d/wheel_group\n#  ## Install Couchbase build dependencies ######################################\n#   * Packages from the base CentOS repository\nRUN yum install --setopt=keepcache=0 -y ed glibc.i686 make man ncurses-devel numactl-devel openssh-clients openssl-devel python-devel redhat-lsb-core rpm-build ruby rubygems rubygem-rake tar unzip which\n#   * C++11 compliant compiler and related tools from CentOS's port of RHEL's\n#      devtools (http://people.centos.org/tru/devtools-2/)\nRUN curl https://people.centos.org/tru/devtools-2/devtools-2.repo > /etc/yum.repos.d/devtools-2.repo \\\n && yum install --setopt=keepcache=0 -y devtoolset-2-gcc-c++ devtoolset-2-binutils \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/as /usr/local/bin/as \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/gcc \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/cc /usr/bin/cc \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++ \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/c++ /usr/bin/c++\n#   Install third-party build dependencies\nRUN yum install -y --setopt=keepcache=0 m4 file\n#   Install autoconf and friends - necessary for building some third-party deps\n#   from source, not for Couchbase.\nRUN mkdir /tmp/deploy \\\n && curl -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf autoconf-2.69.tar.gz \\\n && cd autoconf-2.69 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf automake-1.14.tar.gz \\\n && cd automake-1.14 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf libtool-2.4.2.tar.gz \\\n && cd libtool-2.4.2 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\n#   * git - needs to exist as /usr/bin/git for Git SCM Jenkins plugin\nRUN yum install -y --setopt=keepcache=0 devtoolset-2-git \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/git /usr/bin/git\n#   * ccache (from source)\nRUN mkdir /tmp/deploy \\\n && curl -L https://www.samba.org/ftp/ccache/ccache-3.1.9.tar.bz2 -o /tmp/deploy/ccache.tar.bz2 \\\n && cd /tmp/deploy \\\n && tar -xjf ccache.tar.bz2 \\\n && cd ccache-3.1.9 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && ln -s ccache /usr/local/bin/gcc \\\n && ln -s ccache /usr/local/bin/g++ \\\n && ln -s ccache /usr/local/bin/cc \\\n && ln -s ccache /usr/local/bin/c++ \\\n && rm -fr /tmp/deploy\n#   * repo\nRUN curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo\n#   * CMake (from cmake.org)\nRUN mkdir /tmp/deploy \\\n && curl https://cmake.org/files/v3.6/cmake-3.6.1-Linux-x86_64.sh -o /tmp/deploy/cmake.sh \\\n && (echo y ;echo n ) | sh /tmp/deploy/cmake.sh --prefix=/usr/local \\\n && rm -fr /tmp/deploy\n#   paramiko for testrunner\nRUN rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm \\\n && yum install -y python-pip libffi-devel \\\n && pip install paramiko==3.1.0\n#   Oracle JDK (for Jenkins and Analytics).\nRUN mkdir /tmp/deploy \\\n && cd /tmp/deploy \\\n && curl -L --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz -o jdk.tgz \\\n && cd /usr/local \\\n && tar xvzf /tmp/deploy/jdk.tgz \\\n && ln -s jdk* java \\\n && for file in /usr/local/java/bin/*; do ln -s $file /usr/local/bin ; done \\\n && rm -rf /tmp/deploy\nENV JAVA_HOME=\"/usr/local/java\"\n#   Maven (for Analytics).\nRUN mkdir /tmp/deploy \\\n && cd /tmp/deploy \\\n && curl -L http://mirror.cogentco.com/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz -o maven.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/maven.tar.gz \\\n && ln -s /usr/local/apache-maven-3.3.9/bin/mvn /usr/local/bin/mvn \\\n && rm -rf /tmp/deploy\n#   Expose SSH daemon and run our builder startup script\nEXPOSE 22/tcp\nCOPY .ssh /home/couchbase/.ssh\nCOPY build/couchbuilder_start.sh /usr/sbin/\nENTRYPOINT [\"/usr/sbin/couchbuilder_start.sh\"]\nCMD [\"default\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Docker container for Centos 6.5\n#  See https://github.com/ceejatec/naked-docker/ for details about the\n#  construction of the base image.\nFROM ceejatec/naked-centos:6.5\nMAINTAINER ceej@couchbase.com\nUSER root\nRUN yum install -y openssh-server sudo \\\n && yum clean packages\n#  Set up for SSH daemon\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config \\\n && /etc/init.d/sshd start\n#  Create couchbase user with password-less sudo privs, and give\n#  ownership of /opt/couchbase\nRUN groupadd -g1000 couchbase \\\n && useradd couchbase -g couchbase -u1000 -G wheel -m -s /bin/bash \\\n && mkdir /opt/couchbase \\\n && chown -R couchbase:couchbase /opt/couchbase \\\n && echo 'couchbase:couchbase' | chpasswd \\\n && echo '%wheel ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/wheel_group \\\n && echo 'Defaults:%wheel !requiretty' >> /etc/sudoers.d/wheel_group \\\n && chmod 440 /etc/sudoers.d/wheel_group\n# ## Install Couchbase build dependencies ######################################\n#  * Packages from the base CentOS repository\nRUN yum install --setopt=keepcache=0 -y ed glibc.i686 make man ncurses-devel numactl-devel openssh-clients openssl-devel python-devel redhat-lsb-core rpm-build ruby rubygems rubygem-rake tar unzip which\n#  * C++11 compliant compiler and related tools from CentOS's port of RHEL's\n#     devtools (http://people.centos.org/tru/devtools-2/)\nRUN curl https://people.centos.org/tru/devtools-2/devtools-2.repo > /etc/yum.repos.d/devtools-2.repo \\\n && yum install --setopt=keepcache=0 -y devtoolset-2-gcc-c++ devtoolset-2-binutils \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/as /usr/local/bin/as \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/gcc \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/cc /usr/bin/cc \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++ \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/c++ /usr/bin/c++\n#  Install third-party build dependencies\nRUN yum install -y --setopt=keepcache=0 m4 file\n#  Install autoconf and friends - necessary for building some third-party deps\n#  from source, not for Couchbase.\nRUN mkdir /tmp/deploy \\\n && curl -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf autoconf-2.69.tar.gz \\\n && cd autoconf-2.69 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf automake-1.14.tar.gz \\\n && cd automake-1.14 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf libtool-2.4.2.tar.gz \\\n && cd libtool-2.4.2 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\n#  * git - needs to exist as /usr/bin/git for Git SCM Jenkins plugin\nRUN yum install -y --setopt=keepcache=0 devtoolset-2-git \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/git /usr/bin/git\n#  * ccache (from source)\nRUN mkdir /tmp/deploy \\\n && curl -L https://www.samba.org/ftp/ccache/ccache-3.1.9.tar.bz2 -o /tmp/deploy/ccache.tar.bz2 \\\n && cd /tmp/deploy \\\n && tar -xjf ccache.tar.bz2 \\\n && cd ccache-3.1.9 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && ln -s ccache /usr/local/bin/gcc \\\n && ln -s ccache /usr/local/bin/g++ \\\n && ln -s ccache /usr/local/bin/cc \\\n && ln -s ccache /usr/local/bin/c++ \\\n && rm -fr /tmp/deploy\n#  * repo\nRUN curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo\n#  * CMake (from cmake.org)\nRUN mkdir /tmp/deploy \\\n && curl https://cmake.org/files/v3.6/cmake-3.6.1-Linux-x86_64.sh -o /tmp/deploy/cmake.sh \\\n && (echo y ;echo n ) | sh /tmp/deploy/cmake.sh --prefix=/usr/local \\\n && rm -fr /tmp/deploy\n#  paramiko for testrunner\nRUN rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm \\\n && yum install -y python-pip libffi-devel \\\n && pip install paramiko\n#  Oracle JDK (for Jenkins and Analytics).\nRUN mkdir /tmp/deploy \\\n && cd /tmp/deploy \\\n && curl -L --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz -o jdk.tgz \\\n && cd /usr/local \\\n && tar xvzf /tmp/deploy/jdk.tgz \\\n && ln -s jdk* java \\\n && for file in /usr/local/java/bin/*; do ln -s $file /usr/local/bin ; done \\\n && rm -rf /tmp/deploy\nENV JAVA_HOME=\"/usr/local/java\"\n#  Maven (for Analytics).\nRUN mkdir /tmp/deploy \\\n && cd /tmp/deploy \\\n && curl -L http://mirror.cogentco.com/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz -o maven.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/maven.tar.gz \\\n && ln -s /usr/local/apache-maven-3.3.9/bin/mvn /usr/local/bin/mvn \\\n && rm -rf /tmp/deploy\n#  Expose SSH daemon and run our builder startup script\nEXPOSE 22/tcp\nADD .ssh /home/couchbase/.ssh\nCOPY build/couchbuilder_start.sh /usr/sbin/\nENTRYPOINT [\"/usr/sbin/couchbuilder_start.sh\"]\nCMD [\"default\"]\n","injectedSmells":[],"originalDockerfileHash":"fe76a199fbfec39de989141cd523fa3d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Docker container for Centos 6.5\n#   See https://github.com/ceejatec/naked-docker/ for details about the\n#   construction of the base image.\nFROM ceejatec/naked-centos:6.5\nMAINTAINER ceej@couchbase.com\nUSER root\nRUN yum install -y openssh-server sudo \\\n && yum clean packages\n#   Set up for SSH daemon\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config \\\n && /etc/init.d/sshd start\n#   Create couchbase user with password-less sudo privs, and give\n#   ownership of /opt/couchbase\nRUN groupadd -g1000 couchbase \\\n && useradd couchbase -g couchbase -u1000 -G wheel -m -s /bin/bash \\\n && mkdir /opt/couchbase \\\n && chown -R couchbase:couchbase /opt/couchbase \\\n && echo 'couchbase:couchbase' | chpasswd \\\n && echo '%wheel ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/wheel_group \\\n && echo 'Defaults:%wheel !requiretty' >> /etc/sudoers.d/wheel_group \\\n && chmod 440 /etc/sudoers.d/wheel_group\n#  ## Install Couchbase build dependencies ######################################\n#   * Packages from the base CentOS repository\nRUN yum install --setopt=keepcache=0 -y ed glibc.i686 make man ncurses-devel numactl-devel openssh-clients openssl-devel python-devel redhat-lsb-core rpm-build ruby rubygems rubygem-rake tar unzip which\n#   * C++11 compliant compiler and related tools from CentOS's port of RHEL's\n#      devtools (http://people.centos.org/tru/devtools-2/)\nRUN curl https://people.centos.org/tru/devtools-2/devtools-2.repo > /etc/yum.repos.d/devtools-2.repo \\\n && yum install --setopt=keepcache=0 -y devtoolset-2-gcc-c++ devtoolset-2-binutils \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/as /usr/local/bin/as \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/gcc \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/cc /usr/bin/cc \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++ \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/c++ /usr/bin/c++\n#   Install third-party build dependencies\nRUN yum install -y --setopt=keepcache=0 m4 file\n#   Install autoconf and friends - necessary for building some third-party deps\n#   from source, not for Couchbase.\nRUN mkdir /tmp/deploy \\\n && curl -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf autoconf-2.69.tar.gz \\\n && cd autoconf-2.69 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf automake-1.14.tar.gz \\\n && cd automake-1.14 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf libtool-2.4.2.tar.gz \\\n && cd libtool-2.4.2 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\n#   * git - needs to exist as /usr/bin/git for Git SCM Jenkins plugin\nRUN yum install -y --setopt=keepcache=0 devtoolset-2-git \\\n && ln -s /opt/rh/devtoolset-2/root/usr/bin/git /usr/bin/git\n#   * ccache (from source)\nRUN mkdir /tmp/deploy \\\n && curl -L https://www.samba.org/ftp/ccache/ccache-3.1.9.tar.bz2 -o /tmp/deploy/ccache.tar.bz2 \\\n && cd /tmp/deploy \\\n && tar -xjf ccache.tar.bz2 \\\n && cd ccache-3.1.9 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && ln -s ccache /usr/local/bin/gcc \\\n && ln -s ccache /usr/local/bin/g++ \\\n && ln -s ccache /usr/local/bin/cc \\\n && ln -s ccache /usr/local/bin/c++ \\\n && rm -fr /tmp/deploy\n#   * repo\nRUN curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo\n#   * CMake (from cmake.org)\nRUN mkdir /tmp/deploy \\\n && curl https://cmake.org/files/v3.6/cmake-3.6.1-Linux-x86_64.sh -o /tmp/deploy/cmake.sh \\\n && (echo y ;echo n ) | sh /tmp/deploy/cmake.sh --prefix=/usr/local \\\n && rm -fr /tmp/deploy\n#   paramiko for testrunner\nRUN rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm \\\n && yum install -y python-pip libffi-devel \\\n && pip install paramiko\n#   Oracle JDK (for Jenkins and Analytics).\nRUN mkdir /tmp/deploy \\\n && cd /tmp/deploy \\\n && curl -L --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz -o jdk.tgz \\\n && cd /usr/local \\\n && tar xvzf /tmp/deploy/jdk.tgz \\\n && ln -s jdk* java \\\n && for file in /usr/local/java/bin/*; do ln -s $file /usr/local/bin ; done \\\n && rm -rf /tmp/deploy\nENV JAVA_HOME=\"/usr/local/java\"\n#   Maven (for Analytics).\nRUN mkdir /tmp/deploy \\\n && cd /tmp/deploy \\\n && curl -L http://mirror.cogentco.com/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz -o maven.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/maven.tar.gz \\\n && ln -s /usr/local/apache-maven-3.3.9/bin/mvn /usr/local/bin/mvn \\\n && rm -rf /tmp/deploy\n#   Expose SSH daemon and run our builder startup script\nEXPOSE 22/tcp\nADD .ssh /home/couchbase/.ssh\nCOPY build/couchbuilder_start.sh /usr/sbin/\nENTRYPOINT [\"/usr/sbin/couchbuilder_start.sh\"]\nCMD [\"default\"]\n","originalDockerfileUglifiedHash":"5aa71a87026d9a285b4f1c338d6c2bf4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/560ee11fb2ec1b6774a59944bac749cde66dd46b.dockerfile"}