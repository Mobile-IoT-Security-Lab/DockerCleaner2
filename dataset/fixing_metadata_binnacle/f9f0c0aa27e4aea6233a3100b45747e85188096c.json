{"seed":2289990578,"processedDockerfileHash":"32d2b8018bc3018b85dedf80144a54de","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM gliderlabs/alpine:3.4\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nRUN apk-install openjdk8-jre tini su-exec\nENV ELASTIC=\"2.4.4\"\nENV LOGSTASH=\"2.4.1\"\nENV KIBANA=\"4.6.4\"\nRUN apk-install libzmq bash nodejs supervisor nginx apache2-utils openssl\nRUN mkdir -p /usr/local/lib \\\n && ln -s /usr/lib/*/libzmq.so.3 /usr/local/lib/libzmq.so\nRUN apk-install -t .build-deps wget ca-certificates \\\n && set -x \\\n && cd /tmp \\\n && echo \"Download Elastic Stack ======================================================\" \\\n && echo \"Download Elasticsearch...\" \\\n && wget -O elasticsearch-$ELASTIC.tar.gz https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/$ELASTIC/elasticsearch-$ELASTIC.tar.gz \\\n && tar -xzf elasticsearch-$ELASTIC.tar.gz \\\n && mv elasticsearch-$ELASTIC /usr/share/elasticsearch \\\n && echo \"Download Logstash...\" \\\n && wget -O logstash-$LOGSTASH.tar.gz https://download.elastic.co/logstash/logstash/logstash-$LOGSTASH.tar.gz \\\n && tar -xzf logstash-$LOGSTASH.tar.gz \\\n && mv logstash-$LOGSTASH /usr/share/logstash \\\n && echo \"Download Kibana...\" \\\n && wget -O kibana-$KIBANA.tar.gz https://download.elastic.co/kibana/kibana/kibana-$KIBANA-linux-x86_64.tar.gz \\\n && tar -xzf kibana-$KIBANA.tar.gz \\\n && mv kibana-$KIBANA-linux-x86_64 /usr/share/kibana \\\n && echo \"Configure [Elasticsearch] ===================================================\" \\\n && for path in /usr/share/elasticsearch/data /usr/share/elasticsearch/logs /usr/share/elasticsearch/config /usr/share/elasticsearch/config/scripts /usr/share/elasticsearch/plugins; do mkdir -p \"$path\" ; done \\\n && echo \"Configure [Logstash] ========================================================\" \\\n && if [ -f \"$LS_SETTINGS_DIR/logstash.yml\" ] ; then sed -ri 's!^(path.log|path.config):!#&!g' \"$LS_SETTINGS_DIR/logstash.yml\" ; fi \\\n && echo \"Configure [Kibana] ==========================================================\" \\\n && sed -ri \"s!^(\\#\\s*)?(server\\.host:).*!\\2 '0.0.0.0'!\" /usr/share/kibana/config/kibana.yml \\\n && grep -q \"^server\\.host: '0.0.0.0'$\" /usr/share/kibana/config/kibana.yml \\\n && bundled='NODE=\"${DIR}/node/bin/node\"' \\\n && apline_node='NODE=\"/usr/bin/node\"' \\\n && sed -i \"s|$bundled|$apline_node|g\" /usr/share/kibana/bin/kibana \\\n && rm -rf /usr/share/kibana/node \\\n && echo \"Make Ngins SSL directory...\" \\\n && mkdir -p /etc/nginx/ssl \\\n && echo \"Create elstack user...\" \\\n && adduser -DH -s /sbin/nologin elstack \\\n && chown -R elstack:elstack /usr/share/elasticsearch \\\n && chown -R elstack:elstack /usr/share/logstash \\\n && chown -R elstack:elstack /usr/share/kibana \\\n && echo \"Clean Up...\" \\\n && rm -rf /tmp/* \\\n && apk del --purge .build-deps\nENV PATH=\"/usr/share/elasticsearch/bin:$PATH\"\nENV PATH=\"/usr/share/logstash/bin:$PATH\"\nENV PATH=\"/usr/share/kibana/bin:$PATH\"\n#   Add custom elasticsearch config\nCOPY config/elastic /usr/share/elasticsearch/config\nCOPY config/elastic/logrotate /etc/logrotate.d/elasticsearch\n#   Add custom logstash config\nCOPY config/logstash/conf.d/ /etc/logstash/conf.d/\nCOPY config/logstash/patterns/ /opt/logstash/patterns/\nCOPY config/logstash/logstash.yml /etc/logstash/\n#   necessary for 5.0+ (overriden via \"--path.settings\", ignored by < 5.0)\nENV LS_SETTINGS_DIR=\"/etc/logstash\"\n#   Add custom nginx config\nCOPY config/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY config/nginx/kibana.conf /etc/nginx/conf.d/\nCOPY config/nginx/ssl.kibana.conf /etc/nginx/conf.d/\n#   Add custom supervisor config\nCOPY config/supervisord/supervisord.conf /etc/supervisor/\n#   Add entrypoints\nCOPY entrypoints/elastic-entrypoint.sh /\nCOPY entrypoints/logstash-entrypoint.sh /\nCOPY entrypoints/kibana-entrypoint.sh /\nCOPY entrypoints/nginx-entrypoint.sh /\nVOLUME [\"/usr/share/elasticsearch/data\"]\nVOLUME [\"/etc/logstash/conf.d\"]\nVOLUME [\"/etc/nginx\"]\nEXPOSE 80/tcp 443/tcp 5601/tcp 9200/tcp 9300/tcp\nCMD [\"/sbin/tini\", \"--\", \"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM gliderlabs/alpine:3.4\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nRUN apk-install openjdk8-jre tini su-exec\nENV ELASTIC=\"2.4.4\"\nENV LOGSTASH=\"2.4.1\"\nENV KIBANA=\"4.6.4\"\nRUN apk-install libzmq bash nodejs supervisor nginx apache2-utils openssl\nRUN mkdir -p /usr/local/lib \\\n && ln -s /usr/lib/*/libzmq.so.3 /usr/local/lib/libzmq.so\nRUN apk-install -t .build-deps wget ca-certificates \\\n && set -x \\\n && cd /tmp \\\n && echo \"Download Elastic Stack ======================================================\" \\\n && echo \"Download Elasticsearch...\" \\\n && wget -O elasticsearch-$ELASTIC.tar.gz https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/$ELASTIC/elasticsearch-$ELASTIC.tar.gz \\\n && tar -xzf elasticsearch-$ELASTIC.tar.gz \\\n && mv elasticsearch-$ELASTIC /usr/share/elasticsearch \\\n && echo \"Download Logstash...\" \\\n && wget -O logstash-$LOGSTASH.tar.gz https://download.elastic.co/logstash/logstash/logstash-$LOGSTASH.tar.gz \\\n && tar -xzf logstash-$LOGSTASH.tar.gz \\\n && mv logstash-$LOGSTASH /usr/share/logstash \\\n && echo \"Download Kibana...\" \\\n && wget -O kibana-$KIBANA.tar.gz https://download.elastic.co/kibana/kibana/kibana-$KIBANA-linux-x86_64.tar.gz \\\n && tar -xzf kibana-$KIBANA.tar.gz \\\n && mv kibana-$KIBANA-linux-x86_64 /usr/share/kibana \\\n && echo \"Configure [Elasticsearch] ===================================================\" \\\n && for path in /usr/share/elasticsearch/data /usr/share/elasticsearch/logs /usr/share/elasticsearch/config /usr/share/elasticsearch/config/scripts /usr/share/elasticsearch/plugins; do mkdir -p \"$path\" ; done \\\n && echo \"Configure [Logstash] ========================================================\" \\\n && if [ -f \"$LS_SETTINGS_DIR/logstash.yml\" ] ; then sed -ri 's!^(path.log|path.config):!#&!g' \"$LS_SETTINGS_DIR/logstash.yml\" ; fi \\\n && echo \"Configure [Kibana] ==========================================================\" \\\n && sed -ri \"s!^(\\#\\s*)?(server\\.host:).*!\\2 '0.0.0.0'!\" /usr/share/kibana/config/kibana.yml \\\n && grep -q \"^server\\.host: '0.0.0.0'$\" /usr/share/kibana/config/kibana.yml \\\n && bundled='NODE=\"${DIR}/node/bin/node\"' \\\n && apline_node='NODE=\"/usr/bin/node\"' \\\n && sed -i \"s|$bundled|$apline_node|g\" /usr/share/kibana/bin/kibana \\\n && rm -rf /usr/share/kibana/node \\\n && echo \"Make Ngins SSL directory...\" \\\n && mkdir -p /etc/nginx/ssl \\\n && echo \"Create elstack user...\" \\\n && adduser -DH -s /sbin/nologin elstack \\\n && chown -R elstack:elstack /usr/share/elasticsearch \\\n && chown -R elstack:elstack /usr/share/logstash \\\n && chown -R elstack:elstack /usr/share/kibana \\\n && echo \"Clean Up...\" \\\n && rm -rf /tmp/* \\\n && apk del --purge .build-deps\nENV PATH=\"/usr/share/elasticsearch/bin:$PATH\"\nENV PATH=\"/usr/share/logstash/bin:$PATH\"\nENV PATH=\"/usr/share/kibana/bin:$PATH\"\n#  Add custom elasticsearch config\nCOPY config/elastic /usr/share/elasticsearch/config\nCOPY config/elastic/logrotate /etc/logrotate.d/elasticsearch\n#  Add custom logstash config\nCOPY config/logstash/conf.d/ /etc/logstash/conf.d/\nCOPY config/logstash/patterns/ /opt/logstash/patterns/\nCOPY config/logstash/logstash.yml /etc/logstash/\n#  necessary for 5.0+ (overriden via \"--path.settings\", ignored by < 5.0)\nENV LS_SETTINGS_DIR=\"/etc/logstash\"\n#  Add custom nginx config\nCOPY config/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY config/nginx/kibana.conf /etc/nginx/conf.d/\nCOPY config/nginx/ssl.kibana.conf /etc/nginx/conf.d/\n#  Add custom supervisor config\nCOPY config/supervisord/supervisord.conf /etc/supervisor/\n#  Add entrypoints\nCOPY entrypoints/elastic-entrypoint.sh /\nCOPY entrypoints/logstash-entrypoint.sh /\nCOPY entrypoints/kibana-entrypoint.sh /\nCOPY entrypoints/nginx-entrypoint.sh /\nVOLUME [\"/usr/share/elasticsearch/data\"]\nVOLUME [\"/etc/logstash/conf.d\"]\nVOLUME [\"/etc/nginx\"]\nEXPOSE 80/tcp 443/tcp 5601/tcp 9200/tcp 9300/tcp\nCMD [\"/sbin/tini\", \"--\", \"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"8edc21b243b2025d6df5e40c887e7bb2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM gliderlabs/alpine:3.4\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nRUN apk-install openjdk8-jre tini su-exec\nENV ELASTIC=\"2.4.4\"\nENV LOGSTASH=\"2.4.1\"\nENV KIBANA=\"4.6.4\"\nRUN apk-install libzmq bash nodejs supervisor nginx apache2-utils openssl\nRUN mkdir -p /usr/local/lib \\\n && ln -s /usr/lib/*/libzmq.so.3 /usr/local/lib/libzmq.so\nRUN apk-install -t .build-deps wget ca-certificates \\\n && set -x \\\n && cd /tmp \\\n && echo \"Download Elastic Stack ======================================================\" \\\n && echo \"Download Elasticsearch...\" \\\n && wget -O elasticsearch-$ELASTIC.tar.gz https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/$ELASTIC/elasticsearch-$ELASTIC.tar.gz \\\n && tar -xzf elasticsearch-$ELASTIC.tar.gz \\\n && mv elasticsearch-$ELASTIC /usr/share/elasticsearch \\\n && echo \"Download Logstash...\" \\\n && wget -O logstash-$LOGSTASH.tar.gz https://download.elastic.co/logstash/logstash/logstash-$LOGSTASH.tar.gz \\\n && tar -xzf logstash-$LOGSTASH.tar.gz \\\n && mv logstash-$LOGSTASH /usr/share/logstash \\\n && echo \"Download Kibana...\" \\\n && wget -O kibana-$KIBANA.tar.gz https://download.elastic.co/kibana/kibana/kibana-$KIBANA-linux-x86_64.tar.gz \\\n && tar -xzf kibana-$KIBANA.tar.gz \\\n && mv kibana-$KIBANA-linux-x86_64 /usr/share/kibana \\\n && echo \"Configure [Elasticsearch] ===================================================\" \\\n && for path in /usr/share/elasticsearch/data /usr/share/elasticsearch/logs /usr/share/elasticsearch/config /usr/share/elasticsearch/config/scripts /usr/share/elasticsearch/plugins; do mkdir -p \"$path\" ; done \\\n && echo \"Configure [Logstash] ========================================================\" \\\n && if [ -f \"$LS_SETTINGS_DIR/logstash.yml\" ] ; then sed -ri 's!^(path.log|path.config):!#&!g' \"$LS_SETTINGS_DIR/logstash.yml\" ; fi \\\n && echo \"Configure [Kibana] ==========================================================\" \\\n && sed -ri \"s!^(\\#\\s*)?(server\\.host:).*!\\2 '0.0.0.0'!\" /usr/share/kibana/config/kibana.yml \\\n && grep -q \"^server\\.host: '0.0.0.0'$\" /usr/share/kibana/config/kibana.yml \\\n && bundled='NODE=\"${DIR}/node/bin/node\"' \\\n && apline_node='NODE=\"/usr/bin/node\"' \\\n && sed -i \"s|$bundled|$apline_node|g\" /usr/share/kibana/bin/kibana \\\n && rm -rf /usr/share/kibana/node \\\n && echo \"Make Ngins SSL directory...\" \\\n && mkdir -p /etc/nginx/ssl \\\n && echo \"Create elstack user...\" \\\n && adduser -DH -s /sbin/nologin elstack \\\n && chown -R elstack:elstack /usr/share/elasticsearch \\\n && chown -R elstack:elstack /usr/share/logstash \\\n && chown -R elstack:elstack /usr/share/kibana \\\n && echo \"Clean Up...\" \\\n && rm -rf /tmp/* \\\n && apk del --purge .build-deps\nENV PATH=\"/usr/share/elasticsearch/bin:$PATH\"\nENV PATH=\"/usr/share/logstash/bin:$PATH\"\nENV PATH=\"/usr/share/kibana/bin:$PATH\"\n#   Add custom elasticsearch config\nCOPY config/elastic /usr/share/elasticsearch/config\nCOPY config/elastic/logrotate /etc/logrotate.d/elasticsearch\n#   Add custom logstash config\nCOPY config/logstash/conf.d/ /etc/logstash/conf.d/\nCOPY config/logstash/patterns/ /opt/logstash/patterns/\nCOPY config/logstash/logstash.yml /etc/logstash/\n#   necessary for 5.0+ (overriden via \"--path.settings\", ignored by < 5.0)\nENV LS_SETTINGS_DIR=\"/etc/logstash\"\n#   Add custom nginx config\nCOPY config/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY config/nginx/kibana.conf /etc/nginx/conf.d/\nCOPY config/nginx/ssl.kibana.conf /etc/nginx/conf.d/\n#   Add custom supervisor config\nCOPY config/supervisord/supervisord.conf /etc/supervisor/\n#   Add entrypoints\nCOPY entrypoints/elastic-entrypoint.sh /\nCOPY entrypoints/logstash-entrypoint.sh /\nCOPY entrypoints/kibana-entrypoint.sh /\nCOPY entrypoints/nginx-entrypoint.sh /\nVOLUME [\"/usr/share/elasticsearch/data\"]\nVOLUME [\"/etc/logstash/conf.d\"]\nVOLUME [\"/etc/nginx\"]\nEXPOSE 80/tcp 443/tcp 5601/tcp 9200/tcp 9300/tcp\nCMD [\"/sbin/tini\", \"--\", \"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"379568970383e28c6d0626d252ee1128","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f9f0c0aa27e4aea6233a3100b45747e85188096c.dockerfile"}