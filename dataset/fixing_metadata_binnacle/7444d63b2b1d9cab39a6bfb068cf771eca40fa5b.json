{"seed":3197416647,"processedDockerfileHash":"7e95dde9d6fa31b9cee0784a39db0599","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  **********************************************************************\n#   Builder\n#   \n#   Create a go runtime suitable for building and testing kfctl\nARG GOLANG_VERSION=1.12\nFROM golang:$GOLANG_VERSION AS builder\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends git unzip -y )\n#   junit report is used to conver go test output to junit for reporting\nRUN go get -u github.com/jstemmer/go-junit-report\n#   We need gcloud to get gke credentials.\nRUN cd /tmp \\\n && wget -nv https://dl.google.com/dl/cloudsdk/release/install_google_cloud_sdk.bash \\\n && chmod +x install_google_cloud_sdk.bash \\\n && ./install_google_cloud_sdk.bash --disable-prompts --install-dir=/opt/\nENV PATH=\"/go/bin:/usr/local/go/bin:/opt/google-cloud-sdk/bin:${PATH}\"\n#   use go modules\nENV GO111MODULE=\"on\"\nENV GOPATH=\"/go\"\n#   Create bootstrap folder\nRUN mkdir -p ${GOPATH}/src/github.com/kubeflow/kubeflow/bootstrap\nWORKDIR ${GOPATH}/src/github.com/kubeflow/kubeflow/bootstrap\n#   Download dependencies first to optimize Docker caching.\nCOPY go.mod .\nCOPY go.sum .\nCOPY hack/v2.zip hack/v2.zip\nRUN unzip -q -d /tmp hack/v2.zip\nRUN go mod download\n#   Copy in the source\nCOPY . .\n#  **********************************************************************\n#   Bootstrap base\n#\n#   A container that builds bootstrap. \n#\n#   TODO(https://github.com/kubeflow/kubeflow/issues/2870): We\n#   might get rid of the bootstrap binary and instead just have kfctl\n#   and allow kfctl to run in a daemon/server mode.\n#\nFROM builder AS bootstrap_base\nRUN make build-bootstrap\n#  **********************************************************************\n#\n#   kfctl_base\n#\nFROM builder AS kfctl_base\nRUN make build-kfctl\n#  **********************************************************************\n#\n#   Final image base\n#\nFROM alpine:3.9.4 AS barebones_base\nRUN mkdir -p /opt/kubeflow\nWORKDIR /opt/kubeflow\n#  **********************************************************************\n#\n#   kfctl\n#\nFROM barebones_base AS kfctl\nCOPY --from=kfctl_base /go/src/github.com/kubeflow/kubeflow/bootstrap/bin/kfctl /usr/local/bin\nCMD [\"/bin/bash\", \"-c\", \"trap\", \":\", \"TERM\", \"INT\", \";\", \"sleep\", \"infinity\", \"&;\", \"wait\"]\n#  **********************************************************************\n#\n#   bootstrap\n#\nFROM barebones_base AS bootstrap\nARG registries\nCOPY $registries /opt/registries\nCOPY --from=bootstrap_base ${GOPATH}/src/github.com/kubeflow/kubeflow/bootstrap/bin/bootstrapper /opt/kubeflow/\nCOPY config/default.yaml /opt/kubeflow/\nCOPY image_registries.yaml /opt/kubeflow/\nRUN mkdir -p /opt/bootstrap\nRUN mkdir -p /opt/versioned_registries\nRUN chmod a+rx /opt/kubeflow/bootstrapper\nENV PATH=\"/opt/kubeflow:/opt/bootstrap:${PATH}\"\nEXPOSE 8080/tcp\n#   Set default values for USER, USER_ID, GROUP_ID\n#   The startup script will create the user and su to that user.\n#   We delay the user creation until runtime so that user can specify\n#   the user info at runtime.\n#   Work around for https://github.com/ksonnet/ksonnet/issues/298\nENV USER=\"kubeflow\"\nENV USER_ID=\"1000\"\nENV GROUP_ID=\"1000\"\nENV GROUP=\"kubeflow\"\nCMD [\"/opt/kubeflow/bootstrapper\", \"--in-cluster\", \"--namespace=kubeflow\", \"--apply\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# **********************************************************************\n#  Builder\n#  \n#  Create a go runtime suitable for building and testing kfctl\nARG GOLANG_VERSION=1.12\nFROM golang:$GOLANG_VERSION AS builder\nRUN apt-get update\nRUN apt-get install git unzip -y\n#  junit report is used to conver go test output to junit for reporting\nRUN go get -u github.com/jstemmer/go-junit-report\n#  We need gcloud to get gke credentials.\nRUN cd /tmp \\\n && wget -nv https://dl.google.com/dl/cloudsdk/release/install_google_cloud_sdk.bash \\\n && chmod +x install_google_cloud_sdk.bash \\\n && ./install_google_cloud_sdk.bash --disable-prompts --install-dir=/opt/\nENV PATH=\"/go/bin:/usr/local/go/bin:/opt/google-cloud-sdk/bin:${PATH}\"\n#  use go modules\nENV GO111MODULE=\"on\"\nENV GOPATH=\"/go\"\n#  Create bootstrap folder\nRUN mkdir -p ${GOPATH}/src/github.com/kubeflow/kubeflow/bootstrap\nWORKDIR ${GOPATH}/src/github.com/kubeflow/kubeflow/bootstrap\n#  Download dependencies first to optimize Docker caching.\nCOPY go.mod .\nCOPY go.sum .\nCOPY hack/v2.zip hack/v2.zip\nRUN unzip -q -d /tmp hack/v2.zip\nRUN go mod download\n#  Copy in the source\nCOPY . .\n# **********************************************************************\n#  Bootstrap base\n#\n#  A container that builds bootstrap. \n#\n#  TODO(https://github.com/kubeflow/kubeflow/issues/2870): We\n#  might get rid of the bootstrap binary and instead just have kfctl\n#  and allow kfctl to run in a daemon/server mode.\n#\nFROM builder AS bootstrap_base\nRUN make build-bootstrap\n# **********************************************************************\n#\n#  kfctl_base\n#\nFROM builder AS kfctl_base\nRUN make build-kfctl\n# **********************************************************************\n#\n#  Final image base\n#\nFROM alpine:3.9.4 AS barebones_base\nRUN mkdir -p /opt/kubeflow\nWORKDIR /opt/kubeflow\n# **********************************************************************\n#\n#  kfctl\n#\nFROM barebones_base AS kfctl\nCOPY --from=kfctl_base /go/src/github.com/kubeflow/kubeflow/bootstrap/bin/kfctl /usr/local/bin\nCMD [\"/bin/bash\", \"-c\", \"trap\", \":\", \"TERM\", \"INT\", \";\", \"sleep\", \"infinity\", \"&;\", \"wait\"]\n# **********************************************************************\n#\n#  bootstrap\n#\nFROM barebones_base AS bootstrap\nARG registries\nCOPY $registries /opt/registries\nCOPY --from=bootstrap_base ${GOPATH}/src/github.com/kubeflow/kubeflow/bootstrap/bin/bootstrapper /opt/kubeflow/\nCOPY config/default.yaml /opt/kubeflow/\nCOPY image_registries.yaml /opt/kubeflow/\nRUN mkdir -p /opt/bootstrap\nRUN mkdir -p /opt/versioned_registries\nRUN chmod a+rx /opt/kubeflow/bootstrapper\nENV PATH=\"/opt/kubeflow:/opt/bootstrap:${PATH}\"\nEXPOSE 8080/tcp\n#  Set default values for USER, USER_ID, GROUP_ID\n#  The startup script will create the user and su to that user.\n#  We delay the user creation until runtime so that user can specify\n#  the user info at runtime.\n#  Work around for https://github.com/ksonnet/ksonnet/issues/298\nENV USER=\"kubeflow\"\nENV USER_ID=\"1000\"\nENV GROUP_ID=\"1000\"\nENV GROUP=\"kubeflow\"\nCMD [\"/opt/kubeflow/bootstrapper\", \"--in-cluster\", \"--namespace=kubeflow\", \"--apply\"]\n","injectedSmells":[],"originalDockerfileHash":"2bc1b0b5b8e1e8249fa2d8b7be94b4c7","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  **********************************************************************\n#   Builder\n#   \n#   Create a go runtime suitable for building and testing kfctl\nARG GOLANG_VERSION=1.12\nFROM golang:$GOLANG_VERSION AS builder\nRUN apt-get update\nRUN apt-get install git unzip -y\n#   junit report is used to conver go test output to junit for reporting\nRUN go get -u github.com/jstemmer/go-junit-report\n#   We need gcloud to get gke credentials.\nRUN cd /tmp \\\n && wget -nv https://dl.google.com/dl/cloudsdk/release/install_google_cloud_sdk.bash \\\n && chmod +x install_google_cloud_sdk.bash \\\n && ./install_google_cloud_sdk.bash --disable-prompts --install-dir=/opt/\nENV PATH=\"/go/bin:/usr/local/go/bin:/opt/google-cloud-sdk/bin:${PATH}\"\n#   use go modules\nENV GO111MODULE=\"on\"\nENV GOPATH=\"/go\"\n#   Create bootstrap folder\nRUN mkdir -p ${GOPATH}/src/github.com/kubeflow/kubeflow/bootstrap\nWORKDIR ${GOPATH}/src/github.com/kubeflow/kubeflow/bootstrap\n#   Download dependencies first to optimize Docker caching.\nCOPY go.mod .\nCOPY go.sum .\nCOPY hack/v2.zip hack/v2.zip\nRUN unzip -q -d /tmp hack/v2.zip\nRUN go mod download\n#   Copy in the source\nCOPY . .\n#  **********************************************************************\n#   Bootstrap base\n#\n#   A container that builds bootstrap. \n#\n#   TODO(https://github.com/kubeflow/kubeflow/issues/2870): We\n#   might get rid of the bootstrap binary and instead just have kfctl\n#   and allow kfctl to run in a daemon/server mode.\n#\nFROM builder AS bootstrap_base\nRUN make build-bootstrap\n#  **********************************************************************\n#\n#   kfctl_base\n#\nFROM builder AS kfctl_base\nRUN make build-kfctl\n#  **********************************************************************\n#\n#   Final image base\n#\nFROM alpine:3.9.4 AS barebones_base\nRUN mkdir -p /opt/kubeflow\nWORKDIR /opt/kubeflow\n#  **********************************************************************\n#\n#   kfctl\n#\nFROM barebones_base AS kfctl\nCOPY --from=kfctl_base /go/src/github.com/kubeflow/kubeflow/bootstrap/bin/kfctl /usr/local/bin\nCMD [\"/bin/bash\", \"-c\", \"trap\", \":\", \"TERM\", \"INT\", \";\", \"sleep\", \"infinity\", \"&;\", \"wait\"]\n#  **********************************************************************\n#\n#   bootstrap\n#\nFROM barebones_base AS bootstrap\nARG registries\nCOPY $registries /opt/registries\nCOPY --from=bootstrap_base ${GOPATH}/src/github.com/kubeflow/kubeflow/bootstrap/bin/bootstrapper /opt/kubeflow/\nCOPY config/default.yaml /opt/kubeflow/\nCOPY image_registries.yaml /opt/kubeflow/\nRUN mkdir -p /opt/bootstrap\nRUN mkdir -p /opt/versioned_registries\nRUN chmod a+rx /opt/kubeflow/bootstrapper\nENV PATH=\"/opt/kubeflow:/opt/bootstrap:${PATH}\"\nEXPOSE 8080/tcp\n#   Set default values for USER, USER_ID, GROUP_ID\n#   The startup script will create the user and su to that user.\n#   We delay the user creation until runtime so that user can specify\n#   the user info at runtime.\n#   Work around for https://github.com/ksonnet/ksonnet/issues/298\nENV USER=\"kubeflow\"\nENV USER_ID=\"1000\"\nENV GROUP_ID=\"1000\"\nENV GROUP=\"kubeflow\"\nCMD [\"/opt/kubeflow/bootstrapper\", \"--in-cluster\", \"--namespace=kubeflow\", \"--apply\"]\n","originalDockerfileUglifiedHash":"29f227c2faed57a3136aeec4dad4889f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7444d63b2b1d9cab39a6bfb068cf771eca40fa5b.dockerfile"}