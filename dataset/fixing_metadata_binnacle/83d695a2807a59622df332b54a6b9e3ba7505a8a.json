{"seed":3702244515,"processedDockerfileHash":"62416974bf49b5a69ea61db0a1181455","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\n#   To edit the 'php-fpm' base Image, visit its repository on Github\n#      https://github.com/LaraDock/php-fpm\n#\n#   To change its version, see the available Tags on the Docker Hub:\n#      https://hub.docker.com/r/laradock/php-fpm/tags/\n#\nFROM laradock/php-fpm:5.6--1.2\nMAINTAINER Mahmoud Zalt <mahmoud@zalt.me>\n#\n#  --------------------------------------------------------------------------\n#   Mandatory Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n#   are installed on the base image 'laradock/php-fpm' image. If you want\n#   to add more Software's or remove existing one, you need to edit the\n#   base image (https://github.com/LaraDock/php-fpm).\n#\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Optional Software's will only be installed if you set them to `true`\n#   in the `docker-compose.yml` before the build.\n#   Example:\n#     - INSTALL_ZIP_ARCHIVE=true\n#\n#  ####################################\n#   xDebug:\n#  ####################################\nARG INSTALL_XDEBUG=true\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install xdebug \\\n && docker-php-ext-enable xdebug ; fi\n#   Copy xdebug configration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n#  ####################################\n#   MongoDB:\n#  ####################################\nARG INSTALL_MONGO=true\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && docker-php-ext-enable mongodb ; fi\n#  ####################################\n#   ZipArchive:\n#  ####################################\nARG INSTALL_ZIP_ARCHIVE=true\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ] ; then pecl install zip \\\n && docker-php-ext-enable zip ; fi\n#  ####################################\n#   PHP Memcached:\n#  ####################################\nARG INSTALL_MEMCACHED=true\nRUN if [ ${INSTALL_MEMCACHED} = true ] ; then pecl install memcached \\\n && docker-php-ext-enable memcached ; fi\n#  ####################################\n#   PHP Aerospike:\n#  ####################################\nARG INSTALL_AEROSPIKE_EXTENSION=true\nENV INSTALL_AEROSPIKE_EXTENSION=\"${INSTALL_AEROSPIKE_EXTENSION}\"\n#   Copy aerospike configration for remote debugging\nCOPY ./aerospike.ini /usr/local/etc/php/conf.d/aerospike.ini\nRUN if [ ${INSTALL_AEROSPIKE_EXTENSION} = true ] ; then curl -L -o /tmp/aerospike-client-php.tar.gz \"https://github.com/luciano-jr/aerospike-client-php/archive/master.tar.gz\" \\\n && mkdir -p aerospike-client-php \\\n && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \\\n && (cd aerospike-client-php/src/aerospike \\\n && phpize \\\n && ./build.sh \\\n && make install ) \\\n && rm /tmp/aerospike-client-php.tar.gz ; fi\n#  ####################################\n#   Opcache:\n#  ####################################\nARG INSTALL_OPCACHE=true\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache \\\n && docker-php-ext-enable opcache ; fi\n#   Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n#  ####################################\n#   Gem and sass:\n#  ####################################\n#   Check if gem and sass needs to be installed\nARG INSTALL_GEM_AND_SASS=true\nENV INSTALL_GEM_AND_SASS=\"${INSTALL_GEM_AND_SASS}\"\nRUN if [ ${INSTALL_GEM_AND_SASS} = true ] ; then apt-get update \\\n && apt-get install --no-install-recommends rubygems -y \\\n && gem install sass --version 3.7.4 ; fi\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\n#   Clean up\nUSER root\nRUN apt-get clean \\\n && rm -rf /tmp/* /var/tmp/*\nCOPY ./laravel.ini /usr/local/etc/php/conf.d\nCOPY ./laravel.pool.conf /usr/local/etc/php-fpm.d/\nRUN rm -r /var/lib/apt/lists/*\nRUN usermod -u 1000 www-data\nWORKDIR /var/www\nCMD [\"php-fpm\"]\nEXPOSE 9000/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n# --------------------------------------------------------------------------\n#  Image Setup\n# --------------------------------------------------------------------------\n#\n#  To edit the 'php-fpm' base Image, visit its repository on Github\n#     https://github.com/LaraDock/php-fpm\n#\n#  To change its version, see the available Tags on the Docker Hub:\n#     https://hub.docker.com/r/laradock/php-fpm/tags/\n#\nFROM laradock/php-fpm:5.6--1.2\nMAINTAINER Mahmoud Zalt <mahmoud@zalt.me>\n#\n# --------------------------------------------------------------------------\n#  Mandatory Software's Installation\n# --------------------------------------------------------------------------\n#\n#  Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n#  are installed on the base image 'laradock/php-fpm' image. If you want\n#  to add more Software's or remove existing one, you need to edit the\n#  base image (https://github.com/LaraDock/php-fpm).\n#\n#\n# --------------------------------------------------------------------------\n#  Optional Software's Installation\n# --------------------------------------------------------------------------\n#\n#  Optional Software's will only be installed if you set them to `true`\n#  in the `docker-compose.yml` before the build.\n#  Example:\n#    - INSTALL_ZIP_ARCHIVE=true\n#\n# ####################################\n#  xDebug:\n# ####################################\nARG INSTALL_XDEBUG=true\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install xdebug \\\n && docker-php-ext-enable xdebug ; fi\n#  Copy xdebug configration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n# ####################################\n#  MongoDB:\n# ####################################\nARG INSTALL_MONGO=true\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && docker-php-ext-enable mongodb ; fi\n# ####################################\n#  ZipArchive:\n# ####################################\nARG INSTALL_ZIP_ARCHIVE=true\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ] ; then pecl install zip \\\n && docker-php-ext-enable zip ; fi\n# ####################################\n#  PHP Memcached:\n# ####################################\nARG INSTALL_MEMCACHED=true\nRUN if [ ${INSTALL_MEMCACHED} = true ] ; then pecl install memcached \\\n && docker-php-ext-enable memcached ; fi\n# ####################################\n#  PHP Aerospike:\n# ####################################\nARG INSTALL_AEROSPIKE_EXTENSION=true\nENV INSTALL_AEROSPIKE_EXTENSION=\"${INSTALL_AEROSPIKE_EXTENSION}\"\n#  Copy aerospike configration for remote debugging\nCOPY ./aerospike.ini /usr/local/etc/php/conf.d/aerospike.ini\nRUN if [ ${INSTALL_AEROSPIKE_EXTENSION} = true ] ; then curl -L -o /tmp/aerospike-client-php.tar.gz \"https://github.com/luciano-jr/aerospike-client-php/archive/master.tar.gz\" \\\n && mkdir -p aerospike-client-php \\\n && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \\\n && (cd aerospike-client-php/src/aerospike \\\n && phpize \\\n && ./build.sh \\\n && make install ) \\\n && rm /tmp/aerospike-client-php.tar.gz ; fi\n# ####################################\n#  Opcache:\n# ####################################\nARG INSTALL_OPCACHE=true\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache \\\n && docker-php-ext-enable opcache ; fi\n#  Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n# ####################################\n#  Gem and sass:\n# ####################################\n#  Check if gem and sass needs to be installed\nARG INSTALL_GEM_AND_SASS=true\nENV INSTALL_GEM_AND_SASS=\"${INSTALL_GEM_AND_SASS}\"\nRUN if [ ${INSTALL_GEM_AND_SASS} = true ] ; then apt-get update \\\n && apt-get install rubygems -y \\\n && gem install sass ; fi\n#\n# --------------------------------------------------------------------------\n#  Final Touch\n# --------------------------------------------------------------------------\n#\n#  Clean up\nUSER root\nRUN apt-get clean \\\n && rm -rf /tmp/* /var/tmp/*\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./laravel.pool.conf /usr/local/etc/php-fpm.d/\nRUN rm -r /var/lib/apt/lists/*\nRUN usermod -u 1000 www-data\nWORKDIR /var/www\nCMD [\"php-fpm\"]\nEXPOSE 9000/tcp\n","injectedSmells":[],"originalDockerfileHash":"ba13504de111e9e96b27766edcabc4a3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\n#   To edit the 'php-fpm' base Image, visit its repository on Github\n#      https://github.com/LaraDock/php-fpm\n#\n#   To change its version, see the available Tags on the Docker Hub:\n#      https://hub.docker.com/r/laradock/php-fpm/tags/\n#\nFROM laradock/php-fpm:5.6--1.2\nMAINTAINER Mahmoud Zalt <mahmoud@zalt.me>\n#\n#  --------------------------------------------------------------------------\n#   Mandatory Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n#   are installed on the base image 'laradock/php-fpm' image. If you want\n#   to add more Software's or remove existing one, you need to edit the\n#   base image (https://github.com/LaraDock/php-fpm).\n#\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Optional Software's will only be installed if you set them to `true`\n#   in the `docker-compose.yml` before the build.\n#   Example:\n#     - INSTALL_ZIP_ARCHIVE=true\n#\n#  ####################################\n#   xDebug:\n#  ####################################\nARG INSTALL_XDEBUG=true\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install xdebug \\\n && docker-php-ext-enable xdebug ; fi\n#   Copy xdebug configration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n#  ####################################\n#   MongoDB:\n#  ####################################\nARG INSTALL_MONGO=true\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && docker-php-ext-enable mongodb ; fi\n#  ####################################\n#   ZipArchive:\n#  ####################################\nARG INSTALL_ZIP_ARCHIVE=true\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ] ; then pecl install zip \\\n && docker-php-ext-enable zip ; fi\n#  ####################################\n#   PHP Memcached:\n#  ####################################\nARG INSTALL_MEMCACHED=true\nRUN if [ ${INSTALL_MEMCACHED} = true ] ; then pecl install memcached \\\n && docker-php-ext-enable memcached ; fi\n#  ####################################\n#   PHP Aerospike:\n#  ####################################\nARG INSTALL_AEROSPIKE_EXTENSION=true\nENV INSTALL_AEROSPIKE_EXTENSION=\"${INSTALL_AEROSPIKE_EXTENSION}\"\n#   Copy aerospike configration for remote debugging\nCOPY ./aerospike.ini /usr/local/etc/php/conf.d/aerospike.ini\nRUN if [ ${INSTALL_AEROSPIKE_EXTENSION} = true ] ; then curl -L -o /tmp/aerospike-client-php.tar.gz \"https://github.com/luciano-jr/aerospike-client-php/archive/master.tar.gz\" \\\n && mkdir -p aerospike-client-php \\\n && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \\\n && (cd aerospike-client-php/src/aerospike \\\n && phpize \\\n && ./build.sh \\\n && make install ) \\\n && rm /tmp/aerospike-client-php.tar.gz ; fi\n#  ####################################\n#   Opcache:\n#  ####################################\nARG INSTALL_OPCACHE=true\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache \\\n && docker-php-ext-enable opcache ; fi\n#   Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n#  ####################################\n#   Gem and sass:\n#  ####################################\n#   Check if gem and sass needs to be installed\nARG INSTALL_GEM_AND_SASS=true\nENV INSTALL_GEM_AND_SASS=\"${INSTALL_GEM_AND_SASS}\"\nRUN if [ ${INSTALL_GEM_AND_SASS} = true ] ; then apt-get update \\\n && apt-get install rubygems -y \\\n && gem install sass ; fi\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\n#   Clean up\nUSER root\nRUN apt-get clean \\\n && rm -rf /tmp/* /var/tmp/*\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./laravel.pool.conf /usr/local/etc/php-fpm.d/\nRUN rm -r /var/lib/apt/lists/*\nRUN usermod -u 1000 www-data\nWORKDIR /var/www\nCMD [\"php-fpm\"]\nEXPOSE 9000/tcp\n","originalDockerfileUglifiedHash":"fb3b1dd9030e17b3113c8de04f382e81","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/83d695a2807a59622df332b54a6b9e3ba7505a8a.dockerfile"}