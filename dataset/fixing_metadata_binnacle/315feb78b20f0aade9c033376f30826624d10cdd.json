{"seed":2883804854,"processedDockerfileHash":"506b23d5cb60073a25b1c12d707b22e1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV INITRD=\"No\"\n#  ## Build packages\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends git-core=1:2.7.4-0ubuntu1.10 curl=7.47.0-1ubuntu2.19 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 build-essential=12.1ubuntu2 libssl-dev=1.0.2g-1ubuntu4.20 libreadline-dev=6.3-8ubuntu2 libyaml-dev=0.1.6-3 libsqlite3-dev=3.11.0-1ubuntu1.5 sqlite3=3.11.0-1ubuntu1.5 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libxslt1-dev=1.1.28-2.1ubuntu0.3 libcurl4-openssl-dev=7.47.0-1ubuntu2.19 python-software-properties=0.96.20.10 libffi-dev=3.2.1-4 -y\n#  ## Install rbenv\nRUN git clone https://github.com/sstephenson/rbenv.git /usr/local/rbenv\nRUN echo '# rbenv setup' > /etc/profile.d/rbenv.sh\nRUN echo 'export RBENV_ROOT=/usr/local/rbenv' >> /etc/profile.d/rbenv.sh\nRUN echo 'export PATH=\"$RBENV_ROOT/bin:$PATH\"' >> /etc/profile.d/rbenv.sh\nRUN echo 'eval \"$(rbenv init -)\"' >> /etc/profile.d/rbenv.sh\nRUN chmod +x /etc/profile.d/rbenv.sh\n#   install ruby-build\nRUN mkdir /usr/local/rbenv/plugins\nRUN git clone https://github.com/sstephenson/ruby-build.git /usr/local/rbenv/plugins/ruby-build\nENV RBENV_ROOT=\"/usr/local/rbenv\"\nENV PATH=\"$RBENV_ROOT/bin:$RBENV_ROOT/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN rbenv install -v 2.4.1\nRUN rbenv global 2.4.1\nRUN ruby -v\nRUN echo \"gem: --no-document\" > ~/.gemrc\nRUN gem install bundler --version 2.4.12\n#  ## Install node\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"8.9.0\"\nRUN buildDeps='xz-utils curl ca-certificates' \\\n && set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && apt-get purge -y --auto-remove $buildDeps\nRUN apt-get update -qq \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends ca-certificates=20210119~16.04.1 tzdata=2021a-0ubuntu0.16.04 libsqlite3-dev=3.11.0-1ubuntu1.5 libmysqlclient-dev=5.7.33-0ubuntu0.16.04.1 mysql-client=5.7.33-0ubuntu0.16.04.1 libfontconfig1=2.11.94-0ubuntu1.1 libfontconfig1-dev=2.11.94-0ubuntu1.1 libicu-dev=55.1-7ubuntu0.5 libfreetype6=2.6.1-0.1ubuntu2.5 libfreetype6-dev=2.6.1-0.1ubuntu2.5 libssl-dev=1.0.2g-1ubuntu4.20 libxft-dev=2.3.2-1 libpng-dev libjpeg-dev=8c-2ubuntu8 -y\n#   for paperclip image manipulation\nRUN apt-get install --no-install-recommends file=1:5.25-2ubuntu1.4 imagemagick=8:6.8.9.9-7ubuntu5.16 -y\n#   for nokogiri\nRUN apt-get install --no-install-recommends libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libxslt1-dev=1.1.28-2.1ubuntu0.3 -y\nENV APP_HOME=\"/myapp\"\nRUN mkdir $APP_HOME\nWORKDIR $APP_HOME\n#   Gems\nCOPY Gemfile Gemfile\nCOPY Gemfile.lock Gemfile.lock\nRUN gem install bundler --version 2.4.12\nRUN gem install foreman --version 0.87.2\nRUN bundle install --without test\nRUN rbenv rehash\n#   All app\nCOPY . $APP_HOME\n#   Install cron and start\nRUN apt-get install --no-install-recommends cron=3.0pl1-128ubuntu2 -y\nRUN touch /var/log/cron.log\n#   Update the crontab\nRUN whenever -w\nEXPOSE 3000/tcp\nCMD [\"foreman\", \"start\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV INITRD=\"No\"\n# ## Build packages\nRUN set -ex ; apt-get update ; apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev -y\n# ## Install rbenv\nRUN git clone https://github.com/sstephenson/rbenv.git /usr/local/rbenv\nRUN echo '# rbenv setup' > /etc/profile.d/rbenv.sh\nRUN echo 'export RBENV_ROOT=/usr/local/rbenv' >> /etc/profile.d/rbenv.sh\nRUN echo 'export PATH=\"$RBENV_ROOT/bin:$PATH\"' >> /etc/profile.d/rbenv.sh\nRUN echo 'eval \"$(rbenv init -)\"' >> /etc/profile.d/rbenv.sh\nRUN chmod +x /etc/profile.d/rbenv.sh\n#  install ruby-build\nRUN mkdir /usr/local/rbenv/plugins\nRUN git clone https://github.com/sstephenson/ruby-build.git /usr/local/rbenv/plugins/ruby-build\nENV RBENV_ROOT=\"/usr/local/rbenv\"\nENV PATH=\"$RBENV_ROOT/bin:$RBENV_ROOT/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN rbenv install -v 2.4.1\nRUN rbenv global 2.4.1\nRUN ruby -v\nRUN echo \"gem: --no-document\" > ~/.gemrc\nRUN gem install bundler\n# ## Install node\n#  gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"8.9.0\"\nRUN buildDeps='xz-utils curl ca-certificates' \\\n && set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && apt-get purge -y --auto-remove $buildDeps\nRUN apt-get update -qq \\\n && apt-get upgrade -y \\\n && apt-get install ca-certificates tzdata libsqlite3-dev libmysqlclient-dev mysql-client libfontconfig1 libfontconfig1-dev libicu-dev libfreetype6 libfreetype6-dev libssl-dev libxft-dev libpng-dev libjpeg-dev -y\n#  for paperclip image manipulation\nRUN apt-get install file imagemagick -y\n#  for nokogiri\nRUN apt-get install libxml2-dev libxslt1-dev -y\nENV APP_HOME=\"/myapp\"\nRUN mkdir $APP_HOME\nWORKDIR $APP_HOME\n#  Gems\nCOPY Gemfile Gemfile\nCOPY Gemfile.lock Gemfile.lock\nRUN gem install bundler\nRUN gem install foreman\nRUN bundle install --without test\nRUN rbenv rehash\n#  All app\nCOPY . $APP_HOME\n#  Install cron and start\nRUN apt-get install cron -y\nRUN touch /var/log/cron.log\n#  Update the crontab\nRUN whenever -w\nEXPOSE 3000/tcp\nCMD [\"foreman\", \"start\"]\n","injectedSmells":[],"originalDockerfileHash":"8a838f7f576554d77d0bc9beabe35eb6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV INITRD=\"No\"\n#  ## Build packages\nRUN set -ex ; apt-get update ; apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev -y\n#  ## Install rbenv\nRUN git clone https://github.com/sstephenson/rbenv.git /usr/local/rbenv\nRUN echo '# rbenv setup' > /etc/profile.d/rbenv.sh\nRUN echo 'export RBENV_ROOT=/usr/local/rbenv' >> /etc/profile.d/rbenv.sh\nRUN echo 'export PATH=\"$RBENV_ROOT/bin:$PATH\"' >> /etc/profile.d/rbenv.sh\nRUN echo 'eval \"$(rbenv init -)\"' >> /etc/profile.d/rbenv.sh\nRUN chmod +x /etc/profile.d/rbenv.sh\n#   install ruby-build\nRUN mkdir /usr/local/rbenv/plugins\nRUN git clone https://github.com/sstephenson/ruby-build.git /usr/local/rbenv/plugins/ruby-build\nENV RBENV_ROOT=\"/usr/local/rbenv\"\nENV PATH=\"$RBENV_ROOT/bin:$RBENV_ROOT/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN rbenv install -v 2.4.1\nRUN rbenv global 2.4.1\nRUN ruby -v\nRUN echo \"gem: --no-document\" > ~/.gemrc\nRUN gem install bundler\n#  ## Install node\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"8.9.0\"\nRUN buildDeps='xz-utils curl ca-certificates' \\\n && set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && apt-get purge -y --auto-remove $buildDeps\nRUN apt-get update -qq \\\n && apt-get upgrade -y \\\n && apt-get install ca-certificates tzdata libsqlite3-dev libmysqlclient-dev mysql-client libfontconfig1 libfontconfig1-dev libicu-dev libfreetype6 libfreetype6-dev libssl-dev libxft-dev libpng-dev libjpeg-dev -y\n#   for paperclip image manipulation\nRUN apt-get install file imagemagick -y\n#   for nokogiri\nRUN apt-get install libxml2-dev libxslt1-dev -y\nENV APP_HOME=\"/myapp\"\nRUN mkdir $APP_HOME\nWORKDIR $APP_HOME\n#   Gems\nCOPY Gemfile Gemfile\nCOPY Gemfile.lock Gemfile.lock\nRUN gem install bundler\nRUN gem install foreman\nRUN bundle install --without test\nRUN rbenv rehash\n#   All app\nCOPY . $APP_HOME\n#   Install cron and start\nRUN apt-get install cron -y\nRUN touch /var/log/cron.log\n#   Update the crontab\nRUN whenever -w\nEXPOSE 3000/tcp\nCMD [\"foreman\", \"start\"]\n","originalDockerfileUglifiedHash":"04c9714aaad09cbb423b6fdff15c918a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/315feb78b20f0aade9c033376f30826624d10cdd.dockerfile"}