{"seed":1140684597,"processedDockerfileHash":"08fa79a92a031b2a84054b9d8576ed7d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:6.7\nMAINTAINER Esteban Castro Borsani <ecastroborsani@gmail.com>\n#   Be aware this is a throw-away image,\n#   its size is quite big (many layers)\n#   coz that way we can retry a failed step.\n#   Requirements:\n#   glibc 2.8 (CentOS 6 has 2.12)\n#   Python +2.7.9 (with SSL support)\n#   Git +2.7\n#   Tar +1.28 (with bzip2 support)\n#   GCC +4.8\n#   G++ +4.8\n#\n#   The \"touch /var/lib/rpm/* \\\"\n#   before every \"yum install\"\n#   is a workaround to\n#   \"Rpmdb checksum is invalid: dCDPT(pkg checksums)\"\n#   errors, for builds in hub.docker.com\n#   See: https://github.com/docker/docker/issues/10180\n#\nRUN mkdir -p /code/build\nWORKDIR /code/build\nRUN touch /var/lib/rpm/* \\\n && yum install -y openssl openssl-devel libffi-devel wget make gcc tar \\\n && yum clean all\n#   GCC 4.8.2\nRUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo \\\n && touch /var/lib/rpm/* \\\n && yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ \\\n && rm /etc/yum.repos.d/devtools-2.repo \\\n && yum clean all\n#   Python 2.7\nRUN wget http://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz \\\n && tar -xzvf Python-2.7.11.tgz \\\n && cd Python-2.7.11 \\\n && ./configure \\\n && make altinstall\nRUN python2.7 -m ensurepip \\\n && python2.7 -m pip install pyOpenSSL==16.0.0\n#   Git 2\nRUN touch /var/lib/rpm/* \\\n && yum install -y curl-devel expat-devel gettext-devel openssl-devel perl-devel zlib-devel \\\n && yum clean all\nRUN wget https://www.kernel.org/pub/software/scm/git/git-2.7.4.tar.gz \\\n && tar xzf git-2.7.4.tar.gz \\\n && cd git-2.7.4 \\\n && make prefix=/usr/local/git all \\\n && make prefix=/usr/local/git install\nENV PATH=\"/usr/local/git/bin:$PATH\"\n#   Tar 1.28\nRUN touch /var/lib/rpm/* \\\n && yum install -y bzip2 bzip2-devel \\\n && yum clean all\nENV FORCE_UNSAFE_CONFIGURE=\"1\"\nRUN wget http://ftp.gnu.org/gnu/tar/tar-1.29.tar.gz \\\n && tar xzf tar-1.29.tar.gz \\\n && cd tar-1.29 \\\n && ./configure prefix=/usr/local/tar \\\n && make \\\n && make install\n#   Set Python 2.7 as default\n#   Set tar 1.28 as default\nRUN cd /usr/local/bin \\\n && ln -s python2.7 python \\\n && ln -s /usr/local/tar/bin/tar tar\n#   Setup depot-tools\n#   Remove .git to disable auto update\nRUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git \\\n && cd depot_tools \\\n && git checkout ef7c68c57f20196b27b2059cd28f5f28bb22435a \\\n && rm -rf .git\nENV PATH=\"/code/build/depot_tools:$PATH\"\n#   Disable auto update - alternative\nENV DEPOT_TOOLS_UPDATE=\"0\"\n#   Setup V8 (with depot-tools)\n#   and show V8 version\nRUN fetch v8 \\\n && cd v8 \\\n && git checkout 1c998eae01e53610a852e6b2d9b7d2822eefe8f3 \\\n && gclient sync \\\n && head -1 ChangeLog\nENV CFLAGS=\"-fPIC\"\nENV CXXFLAGS=\"-fPIC\"\nRUN cd v8 \\\n && source /opt/rh/devtoolset-2/enable \\\n && make x64.release -j4 GYPFLAGS=\"-Dclang=0\"\n#   Restore default Python\n#   Restore default tar\nRUN cd /usr/local/bin \\\n && rm python \\\n && rm tar\nRUN mkdir -p /code/v8/release\n#   Convert thin archives into normal ones,\n#   the alternative is to add 'standalone_static_library': 1\n#   to GYP build file\nRUN cd /code/build/v8/out/x64.release \\\n && for lib in `find -name '*.a' `; do ar -t $lib | xargs ar Drvs $lib.new \\\n && mv -v $lib.new /code/v8/release/$( basename $lib ;) ; done\n#   Copy required bin files\n#   and API headers\nRUN cd v8 \\\n && cp -v LICENSE.v8 /code/v8/LICENSE.v8 \\\n && cp -v -R include/ /code/v8/include/ \\\n && cd /code/build/v8/out/x64.release \\\n && cp -v natives_blob.bin /code/v8/natives_blob.bin \\\n && cp -v snapshot_blob.bin /code/v8/snapshot_blob.bin\nWORKDIR /code\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:6.7\nMAINTAINER Esteban Castro Borsani <ecastroborsani@gmail.com>\n#  Be aware this is a throw-away image,\n#  its size is quite big (many layers)\n#  coz that way we can retry a failed step.\n#  Requirements:\n#  glibc 2.8 (CentOS 6 has 2.12)\n#  Python +2.7.9 (with SSL support)\n#  Git +2.7\n#  Tar +1.28 (with bzip2 support)\n#  GCC +4.8\n#  G++ +4.8\n#\n#  The \"touch /var/lib/rpm/* \\\"\n#  before every \"yum install\"\n#  is a workaround to\n#  \"Rpmdb checksum is invalid: dCDPT(pkg checksums)\"\n#  errors, for builds in hub.docker.com\n#  See: https://github.com/docker/docker/issues/10180\n#\nRUN mkdir -p /code/build\nWORKDIR /code/build\nRUN touch /var/lib/rpm/* \\\n && yum install -y openssl openssl-devel libffi-devel wget make gcc tar \\\n && yum clean all\n#  GCC 4.8.2\nRUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo \\\n && touch /var/lib/rpm/* \\\n && yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ \\\n && rm /etc/yum.repos.d/devtools-2.repo \\\n && yum clean all\n#  Python 2.7\nRUN wget http://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz \\\n && tar -xzvf Python-2.7.11.tgz \\\n && cd Python-2.7.11 \\\n && ./configure \\\n && make altinstall\nRUN python2.7 -m ensurepip \\\n && python2.7 -m pip install pyOpenSSL==16.0.0\n#  Git 2\nRUN touch /var/lib/rpm/* \\\n && yum install -y curl-devel expat-devel gettext-devel openssl-devel perl-devel zlib-devel \\\n && yum clean all\nRUN wget https://www.kernel.org/pub/software/scm/git/git-2.7.4.tar.gz \\\n && tar xzf git-2.7.4.tar.gz \\\n && cd git-2.7.4 \\\n && make prefix=/usr/local/git all \\\n && make prefix=/usr/local/git install\nENV PATH=\"/usr/local/git/bin:$PATH\"\n#  Tar 1.28\nRUN touch /var/lib/rpm/* \\\n && yum install -y bzip2 bzip2-devel \\\n && yum clean all\nENV FORCE_UNSAFE_CONFIGURE=\"1\"\nRUN wget http://ftp.gnu.org/gnu/tar/tar-1.29.tar.gz \\\n && tar xzf tar-1.29.tar.gz \\\n && cd tar-1.29 \\\n && ./configure prefix=/usr/local/tar \\\n && make \\\n && make install\n#  Set Python 2.7 as default\n#  Set tar 1.28 as default\nRUN cd /usr/local/bin \\\n && ln -s python2.7 python \\\n && ln -s /usr/local/tar/bin/tar tar\n#  Setup depot-tools\n#  Remove .git to disable auto update\nRUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git \\\n && cd depot_tools \\\n && git checkout ef7c68c57f20196b27b2059cd28f5f28bb22435a \\\n && rm -rf .git\nENV PATH=\"/code/build/depot_tools:$PATH\"\n#  Disable auto update - alternative\nENV DEPOT_TOOLS_UPDATE=\"0\"\n#  Setup V8 (with depot-tools)\n#  and show V8 version\nRUN fetch v8 \\\n && cd v8 \\\n && git checkout 1c998eae01e53610a852e6b2d9b7d2822eefe8f3 \\\n && gclient sync \\\n && head -1 ChangeLog\nENV CFLAGS=\"-fPIC\"\nENV CXXFLAGS=\"-fPIC\"\nRUN cd v8 \\\n && source /opt/rh/devtoolset-2/enable \\\n && make x64.release -j4 GYPFLAGS=\"-Dclang=0\"\n#  Restore default Python\n#  Restore default tar\nRUN cd /usr/local/bin \\\n && rm python \\\n && rm tar\nRUN mkdir -p /code/v8/release\n#  Convert thin archives into normal ones,\n#  the alternative is to add 'standalone_static_library': 1\n#  to GYP build file\nRUN cd /code/build/v8/out/x64.release \\\n && for lib in `find -name '*.a' `; do ar -t $lib | xargs ar Drvs $lib.new \\\n && mv -v $lib.new /code/v8/release/$( basename $lib ;) ; done\n#  Copy required bin files\n#  and API headers\nRUN cd v8 \\\n && cp -v LICENSE.v8 /code/v8/LICENSE.v8 \\\n && cp -v -R include/ /code/v8/include/ \\\n && cd /code/build/v8/out/x64.release \\\n && cp -v natives_blob.bin /code/v8/natives_blob.bin \\\n && cp -v snapshot_blob.bin /code/v8/snapshot_blob.bin\nWORKDIR /code\n","injectedSmells":[],"originalDockerfileHash":"98b1590e77ab8218bb0ddd0e43fd7735","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:6.7\nMAINTAINER Esteban Castro Borsani <ecastroborsani@gmail.com>\n#   Be aware this is a throw-away image,\n#   its size is quite big (many layers)\n#   coz that way we can retry a failed step.\n#   Requirements:\n#   glibc 2.8 (CentOS 6 has 2.12)\n#   Python +2.7.9 (with SSL support)\n#   Git +2.7\n#   Tar +1.28 (with bzip2 support)\n#   GCC +4.8\n#   G++ +4.8\n#\n#   The \"touch /var/lib/rpm/* \\\"\n#   before every \"yum install\"\n#   is a workaround to\n#   \"Rpmdb checksum is invalid: dCDPT(pkg checksums)\"\n#   errors, for builds in hub.docker.com\n#   See: https://github.com/docker/docker/issues/10180\n#\nRUN mkdir -p /code/build\nWORKDIR /code/build\nRUN touch /var/lib/rpm/* \\\n && yum install -y openssl openssl-devel libffi-devel wget make gcc tar \\\n && yum clean all\n#   GCC 4.8.2\nRUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo \\\n && touch /var/lib/rpm/* \\\n && yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ \\\n && rm /etc/yum.repos.d/devtools-2.repo \\\n && yum clean all\n#   Python 2.7\nRUN wget http://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz \\\n && tar -xzvf Python-2.7.11.tgz \\\n && cd Python-2.7.11 \\\n && ./configure \\\n && make altinstall\nRUN python2.7 -m ensurepip \\\n && python2.7 -m pip install pyOpenSSL==16.0.0\n#   Git 2\nRUN touch /var/lib/rpm/* \\\n && yum install -y curl-devel expat-devel gettext-devel openssl-devel perl-devel zlib-devel \\\n && yum clean all\nRUN wget https://www.kernel.org/pub/software/scm/git/git-2.7.4.tar.gz \\\n && tar xzf git-2.7.4.tar.gz \\\n && cd git-2.7.4 \\\n && make prefix=/usr/local/git all \\\n && make prefix=/usr/local/git install\nENV PATH=\"/usr/local/git/bin:$PATH\"\n#   Tar 1.28\nRUN touch /var/lib/rpm/* \\\n && yum install -y bzip2 bzip2-devel \\\n && yum clean all\nENV FORCE_UNSAFE_CONFIGURE=\"1\"\nRUN wget http://ftp.gnu.org/gnu/tar/tar-1.29.tar.gz \\\n && tar xzf tar-1.29.tar.gz \\\n && cd tar-1.29 \\\n && ./configure prefix=/usr/local/tar \\\n && make \\\n && make install\n#   Set Python 2.7 as default\n#   Set tar 1.28 as default\nRUN cd /usr/local/bin \\\n && ln -s python2.7 python \\\n && ln -s /usr/local/tar/bin/tar tar\n#   Setup depot-tools\n#   Remove .git to disable auto update\nRUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git \\\n && cd depot_tools \\\n && git checkout ef7c68c57f20196b27b2059cd28f5f28bb22435a \\\n && rm -rf .git\nENV PATH=\"/code/build/depot_tools:$PATH\"\n#   Disable auto update - alternative\nENV DEPOT_TOOLS_UPDATE=\"0\"\n#   Setup V8 (with depot-tools)\n#   and show V8 version\nRUN fetch v8 \\\n && cd v8 \\\n && git checkout 1c998eae01e53610a852e6b2d9b7d2822eefe8f3 \\\n && gclient sync \\\n && head -1 ChangeLog\nENV CFLAGS=\"-fPIC\"\nENV CXXFLAGS=\"-fPIC\"\nRUN cd v8 \\\n && source /opt/rh/devtoolset-2/enable \\\n && make x64.release -j4 GYPFLAGS=\"-Dclang=0\"\n#   Restore default Python\n#   Restore default tar\nRUN cd /usr/local/bin \\\n && rm python \\\n && rm tar\nRUN mkdir -p /code/v8/release\n#   Convert thin archives into normal ones,\n#   the alternative is to add 'standalone_static_library': 1\n#   to GYP build file\nRUN cd /code/build/v8/out/x64.release \\\n && for lib in `find -name '*.a' `; do ar -t $lib | xargs ar Drvs $lib.new \\\n && mv -v $lib.new /code/v8/release/$( basename $lib ;) ; done\n#   Copy required bin files\n#   and API headers\nRUN cd v8 \\\n && cp -v LICENSE.v8 /code/v8/LICENSE.v8 \\\n && cp -v -R include/ /code/v8/include/ \\\n && cd /code/build/v8/out/x64.release \\\n && cp -v natives_blob.bin /code/v8/natives_blob.bin \\\n && cp -v snapshot_blob.bin /code/v8/snapshot_blob.bin\nWORKDIR /code\n","originalDockerfileUglifiedHash":"0e103adef5d4fceafa10a91959a21b75","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/64b7fa6c5759da7bce008f04c1f085a9f2c4c89b.dockerfile"}