{"seed":821619733,"processedDockerfileHash":"463e9c61e897cf9f255411d3de8b7875","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:latest\nMAINTAINER Mickael Cassy <twitter@mickaelcassy>\nENV HOME=\"/root\"\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nCMD [\"/sbin/my_init\"]\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends automake=1:1.16.5-1.3 libtool=2.4.7-5 curl=7.88.1-7ubuntu1 gzip=1.12-1ubuntu1 wget=1.21.3-1ubuntu1 unzip=6.0-27ubuntu1 libxml2=2.9.14+dfsg-1.1build2 libxml2-dev=2.9.14+dfsg-1.1build2 libgd2-xpm-dev libgeoip-dev=1.6.12-10 libperl-dev=5.36.0-7 libxslt1-dev=1.1.35-1 libxslt1.1=1.1.35-1 libssl-dev=3.0.8-1ubuntu1 make=4.3-4.1build1 g++=4:12.2.0-3ubuntu1 php5-fpm subversion=1.14.2-4build2 pkg-config=1.8.1-1ubuntu2 libcppunit-dev=1.15.1-4 libcurl4-openssl-dev=7.88.1-7ubuntu1 libncurses-dev=6.4-2 php5-common php5-cli screen=4.9.0-4 -y\n#   Gets PCRE\nWORKDIR /install\nRUN (wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.bz2 ) \\\n && (tar -xjf pcre-8.36.tar.bz2 ) \\\n && (rm pcre-8.36.tar.bz2 ) \\\n && (wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.zip ) \\\n && (unzip v0.2.19.zip ) \\\n && (rm v0.2.19.zip ) \\\n && (wget http://zlib.net/zlib-1.2.8.tar.gz ) \\\n && (tar -xzf zlib-1.2.8.tar.gz ) \\\n && (rm zlib-1.2.8.tar.gz ) \\\n && (wget http://nginx.org/download/nginx-1.8.0.tar.gz ) \\\n && (tar -xzf nginx-1.8.0.tar.gz ) \\\n && (rm nginx-1.8.0.tar.gz )\nWORKDIR /install/nginx-1.8.0\nRUN (sed -i \"s/static char ngx_http_server_string\\[\\] = \\\"Server: nginx\\\" CRLF;/static char ngx_http_server_string\\[\\] = \\\"Server: Lol web server\\\" CRLF;/g\" /install/nginx-1.8.0/src/http/ngx_http_header_filter_module.c ) \\\n && (sed -i \"s/static char ngx_http_server_full_string\\[\\] = \\\"Server: \\\" NGINX_VER CRLF;/static char ngx_http_server_full_string\\[\\] = \\\"Server: Lol web server\\\" CRLF;/g\" /install/nginx-1.8.0/src/http/ngx_http_header_filter_module.c )\nRUN mkdir -p /var/lib/nginx/body \\\n && ./configure --prefix=/usr/share/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --with-pcre-jit --with-debug --with-http_addition_module --with-http_dav_module --with-http_flv_module --with-http_geoip_module --with-http_gzip_static_module --with-http_image_filter_module --with-http_mp4_module --with-http_perl_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_stub_status_module --with-http_ssl_module --with-http_sub_module --with-http_xslt_module --with-ipv6 --with-sha1=/usr/include/openssl --with-md5=/usr/include/openssl --with-mail --with-mail_ssl_module --with-http_spdy_module --with-pcre=`pwd `/../pcre-8.36 --with-zlib=`pwd `/../zlib-1.2.8 --add-module=`pwd `/../ngx_devel_kit-0.2.19 \\\n && (make ) \\\n && (sudo make install ) \\\n && (ln -s `pwd `/objs/nginx /bin/nginx ) \\\n && (sed -i \"s/nginx\\/$nginx_version;/web\\/lol;/g\" /etc/nginx/fastcgi.conf )\n#   Installs libtorrent\nWORKDIR /rtorrent\nRUN (wget -O libtorrent-0.13.4.tar.gz https://github.com/rakshasa/libtorrent/archive/0.13.4.tar.gz ) \\\n && (tar -xzf libtorrent-0.13.4.tar.gz ) \\\n && (rm libtorrent-0.13.4.tar.gz )\nWORKDIR libtorrent-0.13.4\nRUN (sh autogen.sh ) \\\n && (./configure ) \\\n && (make ) \\\n && (make install )\n#   Installs xmlrpc\nRUN apt-get install --no-install-recommends libxmlrpc-core-c3=1.33.14-11 libxmlrpc-core-c3-dev=1.33.14-11 -y\n#   Installs rtorrent\nWORKDIR /rtorrent\nRUN (wget -O rtorrent-0.9.4.tar.gz https://github.com/rakshasa/rtorrent/archive/0.9.4.tar.gz ) \\\n && (tar -xzf rtorrent-0.9.4.tar.gz ) \\\n && (rm rtorrent-0.9.4.tar.gz )\nWORKDIR rtorrent-0.9.4\nRUN (sh autogen.sh ) \\\n && (./configure --with-xmlrpc-c ) \\\n && (make ) \\\n && (make install ) \\\n && (ldconfig )\n#   Gets ruTorrent\nWORKDIR /var/www\nRUN (svn checkout http://rutorrent.googlecode.com/svn/trunk/ . ) \\\n && (rm -rf .rutorrent/conf/ ) \\\n && (mkdir -p rutorrent/usr/share/zoneinfo ) \\\n && (cp -rf /usr/share/zoneinfo/* rutorrent/usr/share/zoneinfo/ ) \\\n && (chown -R www-data:www-data ../www ) \\\n && (chmod -R 755 ../www )\n#   Configures fpm\nRUN (sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php5/fpm/php.ini ) \\\n && (sed -i \"s/;catch_workers_output = yes/catch_workers_output = no/\" /etc/php5/fpm/pool.d/www.conf ) \\\n && (sed -i \"s/;daemonize = yes/;daemonize = no/g\" /etc/php5/fpm/php-fpm.conf ) \\\n && (sed -i \"s/;include=\\/etc\\/php5\\/fpm\\/*.conf/include=\\/etc\\/php5\\/fpm\\/pool.d\\/*.conf/g\" /etc/php5/fpm/php-fpm.conf ) \\\n && (sed -i \"s/;chroot =/chroot = \\/var\\/www\\/rutorrent/g\" /etc/php5/fpm/pool.d/www.conf ) \\\n && (sed -i 's/^error_log = .*log/error_log = \\/dev\\/null/g' /etc/php5/fpm/php-fpm.conf )\n#   Creates nginx Service\nWORKDIR /etc/service/nginx\nCOPY ./nginx.conf /etc/nginx/nginx.conf\nCOPY ./run_nginx.sh /etc/service/nginx/run\nRUN chmod +x ./run\n#   Creates fpm Service\nWORKDIR /etc/service/fpm\nCOPY ./run_fpm.sh /etc/service/fpm/run\nRUN chmod +x ./run\n#   Creates rtorrent Service\nWORKDIR /etc/service/rtorrent\nCOPY ./run_rtorrent.sh /etc/service/rtorrent/run\nRUN chmod +x ./run\n#   Add custom config files\nCOPY ./rutorrent_conf/ /var/www/rutorrent/conf/\nCOPY .rtorrent.rc /root/.rtorrent.rc\n#   Cleans up APT when done.\nRUN apt-get -y remove automake libtool libxml2-dev libgd2-xpm-dev libgeoip-dev libperl-dev libxslt1-dev libssl-dev make g++ pkg-config libcppunit-dev libcurl4-openssl-dev libncurses-dev \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:latest\nMAINTAINER Mickael Cassy <twitter@mickaelcassy>\nENV HOME=\"/root\"\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nCMD [\"/sbin/my_init\"]\nRUN apt-get update -y \\\n && apt-get install automake libtool curl gzip wget unzip libxml2 libxml2-dev libgd2-xpm-dev libgeoip-dev libperl-dev libxslt1-dev libxslt1.1 libssl-dev make g++ php5-fpm subversion pkg-config libcppunit-dev libcurl4-openssl-dev libncurses-dev php5-common php5-cli screen -y\n#  Gets PCRE\nWORKDIR /install\nRUN (wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.bz2 ) \\\n && (tar -xjf pcre-8.36.tar.bz2 ) \\\n && (rm pcre-8.36.tar.bz2 ) \\\n && (wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.zip ) \\\n && (unzip v0.2.19.zip ) \\\n && (rm v0.2.19.zip ) \\\n && (wget http://zlib.net/zlib-1.2.8.tar.gz ) \\\n && (tar -xzf zlib-1.2.8.tar.gz ) \\\n && (rm zlib-1.2.8.tar.gz ) \\\n && (wget http://nginx.org/download/nginx-1.8.0.tar.gz ) \\\n && (tar -xzf nginx-1.8.0.tar.gz ) \\\n && (rm nginx-1.8.0.tar.gz )\nWORKDIR /install/nginx-1.8.0\nRUN (sed -i \"s/static char ngx_http_server_string\\[\\] = \\\"Server: nginx\\\" CRLF;/static char ngx_http_server_string\\[\\] = \\\"Server: Lol web server\\\" CRLF;/g\" /install/nginx-1.8.0/src/http/ngx_http_header_filter_module.c ) \\\n && (sed -i \"s/static char ngx_http_server_full_string\\[\\] = \\\"Server: \\\" NGINX_VER CRLF;/static char ngx_http_server_full_string\\[\\] = \\\"Server: Lol web server\\\" CRLF;/g\" /install/nginx-1.8.0/src/http/ngx_http_header_filter_module.c )\nRUN mkdir -p /var/lib/nginx/body \\\n && ./configure --prefix=/usr/share/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --with-pcre-jit --with-debug --with-http_addition_module --with-http_dav_module --with-http_flv_module --with-http_geoip_module --with-http_gzip_static_module --with-http_image_filter_module --with-http_mp4_module --with-http_perl_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_stub_status_module --with-http_ssl_module --with-http_sub_module --with-http_xslt_module --with-ipv6 --with-sha1=/usr/include/openssl --with-md5=/usr/include/openssl --with-mail --with-mail_ssl_module --with-http_spdy_module --with-pcre=`pwd `/../pcre-8.36 --with-zlib=`pwd `/../zlib-1.2.8 --add-module=`pwd `/../ngx_devel_kit-0.2.19 \\\n && (make ) \\\n && (sudo make install ) \\\n && (ln -s `pwd `/objs/nginx /bin/nginx ) \\\n && (sed -i \"s/nginx\\/$nginx_version;/web\\/lol;/g\" /etc/nginx/fastcgi.conf )\n#  Installs libtorrent\nWORKDIR /rtorrent\nRUN (wget -O libtorrent-0.13.4.tar.gz https://github.com/rakshasa/libtorrent/archive/0.13.4.tar.gz ) \\\n && (tar -xzf libtorrent-0.13.4.tar.gz ) \\\n && (rm libtorrent-0.13.4.tar.gz )\nWORKDIR libtorrent-0.13.4\nRUN (sh autogen.sh ) \\\n && (./configure ) \\\n && (make ) \\\n && (make install )\n#  Installs xmlrpc\nRUN apt-get install libxmlrpc-core-c3 libxmlrpc-core-c3-dev -y\n#  Installs rtorrent\nWORKDIR /rtorrent\nRUN (wget -O rtorrent-0.9.4.tar.gz https://github.com/rakshasa/rtorrent/archive/0.9.4.tar.gz ) \\\n && (tar -xzf rtorrent-0.9.4.tar.gz ) \\\n && (rm rtorrent-0.9.4.tar.gz )\nWORKDIR rtorrent-0.9.4\nRUN (sh autogen.sh ) \\\n && (./configure --with-xmlrpc-c ) \\\n && (make ) \\\n && (make install ) \\\n && (ldconfig )\n#  Gets ruTorrent\nWORKDIR /var/www\nRUN (svn checkout http://rutorrent.googlecode.com/svn/trunk/ . ) \\\n && (rm -rf .rutorrent/conf/ ) \\\n && (mkdir -p rutorrent/usr/share/zoneinfo ) \\\n && (cp -rf /usr/share/zoneinfo/* rutorrent/usr/share/zoneinfo/ ) \\\n && (chown -R www-data:www-data ../www ) \\\n && (chmod -R 755 ../www )\n#  Configures fpm\nRUN (sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php5/fpm/php.ini ) \\\n && (sed -i \"s/;catch_workers_output = yes/catch_workers_output = no/\" /etc/php5/fpm/pool.d/www.conf ) \\\n && (sed -i \"s/;daemonize = yes/;daemonize = no/g\" /etc/php5/fpm/php-fpm.conf ) \\\n && (sed -i \"s/;include=\\/etc\\/php5\\/fpm\\/*.conf/include=\\/etc\\/php5\\/fpm\\/pool.d\\/*.conf/g\" /etc/php5/fpm/php-fpm.conf ) \\\n && (sed -i \"s/;chroot =/chroot = \\/var\\/www\\/rutorrent/g\" /etc/php5/fpm/pool.d/www.conf ) \\\n && (sed -i 's/^error_log = .*log/error_log = \\/dev\\/null/g' /etc/php5/fpm/php-fpm.conf )\n#  Creates nginx Service\nWORKDIR /etc/service/nginx\nADD ./nginx.conf /etc/nginx/nginx.conf\nADD ./run_nginx.sh /etc/service/nginx/run\nRUN chmod +x ./run\n#  Creates fpm Service\nWORKDIR /etc/service/fpm\nADD ./run_fpm.sh /etc/service/fpm/run\nRUN chmod +x ./run\n#  Creates rtorrent Service\nWORKDIR /etc/service/rtorrent\nADD ./run_rtorrent.sh /etc/service/rtorrent/run\nRUN chmod +x ./run\n#  Add custom config files\nADD ./rutorrent_conf/ /var/www/rutorrent/conf/\nADD .rtorrent.rc /root/.rtorrent.rc\n#  Cleans up APT when done.\nRUN apt-get -y remove automake libtool libxml2-dev libgd2-xpm-dev libgeoip-dev libperl-dev libxslt1-dev libssl-dev make g++ pkg-config libcppunit-dev libcurl4-openssl-dev libncurses-dev \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","injectedSmells":[],"originalDockerfileHash":"7565c2ff281249c0925a593d30f8ec15","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:latest\nMAINTAINER Mickael Cassy <twitter@mickaelcassy>\nENV HOME=\"/root\"\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nCMD [\"/sbin/my_init\"]\nRUN apt-get update -y \\\n && apt-get install automake libtool curl gzip wget unzip libxml2 libxml2-dev libgd2-xpm-dev libgeoip-dev libperl-dev libxslt1-dev libxslt1.1 libssl-dev make g++ php5-fpm subversion pkg-config libcppunit-dev libcurl4-openssl-dev libncurses-dev php5-common php5-cli screen -y\n#   Gets PCRE\nWORKDIR /install\nRUN (wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.bz2 ) \\\n && (tar -xjf pcre-8.36.tar.bz2 ) \\\n && (rm pcre-8.36.tar.bz2 ) \\\n && (wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.zip ) \\\n && (unzip v0.2.19.zip ) \\\n && (rm v0.2.19.zip ) \\\n && (wget http://zlib.net/zlib-1.2.8.tar.gz ) \\\n && (tar -xzf zlib-1.2.8.tar.gz ) \\\n && (rm zlib-1.2.8.tar.gz ) \\\n && (wget http://nginx.org/download/nginx-1.8.0.tar.gz ) \\\n && (tar -xzf nginx-1.8.0.tar.gz ) \\\n && (rm nginx-1.8.0.tar.gz )\nWORKDIR /install/nginx-1.8.0\nRUN (sed -i \"s/static char ngx_http_server_string\\[\\] = \\\"Server: nginx\\\" CRLF;/static char ngx_http_server_string\\[\\] = \\\"Server: Lol web server\\\" CRLF;/g\" /install/nginx-1.8.0/src/http/ngx_http_header_filter_module.c ) \\\n && (sed -i \"s/static char ngx_http_server_full_string\\[\\] = \\\"Server: \\\" NGINX_VER CRLF;/static char ngx_http_server_full_string\\[\\] = \\\"Server: Lol web server\\\" CRLF;/g\" /install/nginx-1.8.0/src/http/ngx_http_header_filter_module.c )\nRUN mkdir -p /var/lib/nginx/body \\\n && ./configure --prefix=/usr/share/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --with-pcre-jit --with-debug --with-http_addition_module --with-http_dav_module --with-http_flv_module --with-http_geoip_module --with-http_gzip_static_module --with-http_image_filter_module --with-http_mp4_module --with-http_perl_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_stub_status_module --with-http_ssl_module --with-http_sub_module --with-http_xslt_module --with-ipv6 --with-sha1=/usr/include/openssl --with-md5=/usr/include/openssl --with-mail --with-mail_ssl_module --with-http_spdy_module --with-pcre=`pwd `/../pcre-8.36 --with-zlib=`pwd `/../zlib-1.2.8 --add-module=`pwd `/../ngx_devel_kit-0.2.19 \\\n && (make ) \\\n && (sudo make install ) \\\n && (ln -s `pwd `/objs/nginx /bin/nginx ) \\\n && (sed -i \"s/nginx\\/$nginx_version;/web\\/lol;/g\" /etc/nginx/fastcgi.conf )\n#   Installs libtorrent\nWORKDIR /rtorrent\nRUN (wget -O libtorrent-0.13.4.tar.gz https://github.com/rakshasa/libtorrent/archive/0.13.4.tar.gz ) \\\n && (tar -xzf libtorrent-0.13.4.tar.gz ) \\\n && (rm libtorrent-0.13.4.tar.gz )\nWORKDIR libtorrent-0.13.4\nRUN (sh autogen.sh ) \\\n && (./configure ) \\\n && (make ) \\\n && (make install )\n#   Installs xmlrpc\nRUN apt-get install libxmlrpc-core-c3 libxmlrpc-core-c3-dev -y\n#   Installs rtorrent\nWORKDIR /rtorrent\nRUN (wget -O rtorrent-0.9.4.tar.gz https://github.com/rakshasa/rtorrent/archive/0.9.4.tar.gz ) \\\n && (tar -xzf rtorrent-0.9.4.tar.gz ) \\\n && (rm rtorrent-0.9.4.tar.gz )\nWORKDIR rtorrent-0.9.4\nRUN (sh autogen.sh ) \\\n && (./configure --with-xmlrpc-c ) \\\n && (make ) \\\n && (make install ) \\\n && (ldconfig )\n#   Gets ruTorrent\nWORKDIR /var/www\nRUN (svn checkout http://rutorrent.googlecode.com/svn/trunk/ . ) \\\n && (rm -rf .rutorrent/conf/ ) \\\n && (mkdir -p rutorrent/usr/share/zoneinfo ) \\\n && (cp -rf /usr/share/zoneinfo/* rutorrent/usr/share/zoneinfo/ ) \\\n && (chown -R www-data:www-data ../www ) \\\n && (chmod -R 755 ../www )\n#   Configures fpm\nRUN (sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php5/fpm/php.ini ) \\\n && (sed -i \"s/;catch_workers_output = yes/catch_workers_output = no/\" /etc/php5/fpm/pool.d/www.conf ) \\\n && (sed -i \"s/;daemonize = yes/;daemonize = no/g\" /etc/php5/fpm/php-fpm.conf ) \\\n && (sed -i \"s/;include=\\/etc\\/php5\\/fpm\\/*.conf/include=\\/etc\\/php5\\/fpm\\/pool.d\\/*.conf/g\" /etc/php5/fpm/php-fpm.conf ) \\\n && (sed -i \"s/;chroot =/chroot = \\/var\\/www\\/rutorrent/g\" /etc/php5/fpm/pool.d/www.conf ) \\\n && (sed -i 's/^error_log = .*log/error_log = \\/dev\\/null/g' /etc/php5/fpm/php-fpm.conf )\n#   Creates nginx Service\nWORKDIR /etc/service/nginx\nADD ./nginx.conf /etc/nginx/nginx.conf\nADD ./run_nginx.sh /etc/service/nginx/run\nRUN chmod +x ./run\n#   Creates fpm Service\nWORKDIR /etc/service/fpm\nADD ./run_fpm.sh /etc/service/fpm/run\nRUN chmod +x ./run\n#   Creates rtorrent Service\nWORKDIR /etc/service/rtorrent\nADD ./run_rtorrent.sh /etc/service/rtorrent/run\nRUN chmod +x ./run\n#   Add custom config files\nADD ./rutorrent_conf/ /var/www/rutorrent/conf/\nADD .rtorrent.rc /root/.rtorrent.rc\n#   Cleans up APT when done.\nRUN apt-get -y remove automake libtool libxml2-dev libgd2-xpm-dev libgeoip-dev libperl-dev libxslt1-dev libssl-dev make g++ pkg-config libcppunit-dev libcurl4-openssl-dev libncurses-dev \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","originalDockerfileUglifiedHash":"e22dfd77c292f1bd22535cbab3e2b772","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c65a17f07118ee4744aaedf877a6f245ab5d84e4.dockerfile"}