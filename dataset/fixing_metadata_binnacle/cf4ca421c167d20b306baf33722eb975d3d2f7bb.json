{"seed":836449963,"processedDockerfileHash":"7f8faf46a6a88c299d58a01a181f2afe","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Version: 1.0\n#   Dockerfile for building boost for android\n#   https://github.com/dec1/Boost-for-Android\n#   creates docker container with all tools, libraries and sources required to build boost for android.\n#   Author: Declan Moran\n#   www.silverglint.com\n#   Usage: \n#  ------\n#   > git clone https://github.com/dec1/boost-for-android\n#   > cd boost-for-android\n#\n#   build docker image \"my_img_droid\" from the dockerfile in \"docker\" dir\n#   > docker build -t my_img_droid ./docker\n#\n#   run docker container \"my_ctr_droid\" from this image, mounting the current dir. (Need to pass absolute host paths to mount volume- hence \"pwd\")\n#   > docker run  -v $(pwd):/home/docker-share/boost-for-android -it --entrypoint=/bin/bash --name my_ctr_droid my_img_droid \n#\n#   Now inside docker container\n#   $ cd /home/docker-share/boost-for-android\n#\n#   Modify ./doIt.sh (on host), to match the boost and android ndk versions/paths in the \"Configure here\" section below\n#   Build from running docker container. \n#   $./doIt.sh\n#\n#   Exit container, when build is finsihed,\n#   $ exit\n#\n#   \"./build\" dir contains required build, but owned by root. chown to your username/group\n#   > sudo chown -R <username>:<group> ./build\n#   \n#   Note: If you want to edit the boost source you can download it to this host dir and set doIt.sh to use this instead of the boost version downloaded by the image\n#   This is necessary for boost version 1.70.0, which seems to contain a bug. Workaround here: https://github.com/boostorg/build/issues/385\nFROM amd64/ubuntu:18.04\n#  # --------------------------------------------------------------------\n#  #              Configure here\n#   ---------------------------------------------------------------------\n#   ---------------------------------------------------------------------\n#   Here you can speciofy exactly what boost, android ndk (and sdk) version you want to use.\n#   (1) BOOST\nARG BOOST_FILE_BASE=boost_1_69_0\nARG BOOST_VER=1.69.0\nARG BOOST_URL_BASE=https://dl.bintray.com/boostorg/release\n#   this is where the boost for android repo is mounted/shared to\nARG BOOST_FOR_ANDROID_PATH=/home/docker-share/boost-for-android\n#   this is where boost src will be extracted to\nARG BOOST_SRC_DIR_BASE=/home/docker-share/boost-src  \n#   (2) Android SDK\n#   https://developer.android.com/studio#downloads\nARG SDK_URL_BASE=https://dl.google.com/android/repository\nARG SDK_FILE=sdk-tools-linux-4333796.zip\n#   the sdk plaform to use \n#   https://developer.android.com/guide/topics/manifest/uses-sdk-element\nARG ANDROID_SDK_PLATFORM_VERS=\"platforms;android-28\"\n#   (3) Android NDK\n#   https://developer.android.com/ndk/downloads\nARG NDK_URL_BASE=https://dl.google.com/android/repository\nARG NDK_FILE=android-ndk-r19c-linux-x86_64.zip\n#   ---------------------------------------------------------------------\n#  # --------------------------------------------------------------------\nRUN :\nRUN apt-get -y dist-upgrade\n#   for downloading archives\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.19.4-1ubuntu2.2 -y )\n#   for unzipping downloaded android archives\nRUN (apt-get update ;apt-get install --no-install-recommends zip=3.0-11build1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-8-jdk=8u362-ga-0ubuntu1~18.04.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends lib32z1=1:1.2.11.dfsg-0ubuntu2.2 -y )\n#   need this this to install some (32 bit) prerequisites for android builds \nRUN dpkg --add-architecture i386\nRUN :\nRUN apt-get -y dist-upgrade\nRUN (apt-get update ;apt-get install --no-install-recommends libc6:i386 libncurses5:i386 libstdc++6:i386 libbz2-1.0:i386 -y )\n#   need c compiler to set up create boost build system (before building boost with it and android toolchain)\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=12.4ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libc6-dev-i386=2.27-3ubuntu1.6 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends clang=1:6.0-41~exp5~ubuntu1 -y )\n#  --------------------------------------\nARG ANDROID_HOME=/home/android\nWORKDIR ${ANDROID_HOME}\n#   SDK\n#   ----\n#   download android sdk command line tools\nRUN wget ${SDK_URL_BASE}/$SDK_FILE\nRUN unzip $SDK_FILE\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\nRUN yes | sdkmanager --licenses\nRUN sdkmanager \"platform-tools\" $ANDROID_SDK_PLATFORM_VERS\n#  RUN sdkmanager \"platform-tools\" \"platforms;android-28\" \n#   NDK\n#   ----\nRUN wget ${NDK_URL_BASE}/$NDK_FILE\nRUN unzip $NDK_FILE\n#   BOOST\n#  ------\n#   this is where the boost for android repo is cloned to\n#   WORKDIR $BOOST_FOR_ANDROID_PATH\nARG BOOST_FILE=${BOOST_FILE_BASE}.tar.gz\nARG BOOST_SRC_DIR=${BOOST_SRC_DIR_BASE}/$BOOST_VER  \nRUN wget ${BOOST_URL_BASE}/${BOOST_VER}/source/$BOOST_FILE\nRUN mkdir -p $BOOST_SRC_DIR\nRUN tar xvzf $BOOST_FILE -C $BOOST_SRC_DIR --strip-components 1\n#   tar xvzf /home/android/boost_1_70_0.tar.gz -C /home/docker-share/boost/src/1.70.0 --strip-components 1\nRUN echo $BOOST_SRC_DIR\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Version: 1.0\n#  Dockerfile for building boost for android\n#  https://github.com/dec1/Boost-for-Android\n#  creates docker container with all tools, libraries and sources required to build boost for android.\n#  Author: Declan Moran\n#  www.silverglint.com\n#  Usage: \n# ------\n#  > git clone https://github.com/dec1/boost-for-android\n#  > cd boost-for-android\n#\n#  build docker image \"my_img_droid\" from the dockerfile in \"docker\" dir\n#  > docker build -t my_img_droid ./docker\n#\n#  run docker container \"my_ctr_droid\" from this image, mounting the current dir. (Need to pass absolute host paths to mount volume- hence \"pwd\")\n#  > docker run  -v $(pwd):/home/docker-share/boost-for-android -it --entrypoint=/bin/bash --name my_ctr_droid my_img_droid \n#\n#  Now inside docker container\n#  $ cd /home/docker-share/boost-for-android\n#\n#  Modify ./doIt.sh (on host), to match the boost and android ndk versions/paths in the \"Configure here\" section below\n#  Build from running docker container. \n#  $./doIt.sh\n#\n#  Exit container, when build is finsihed,\n#  $ exit\n#\n#  \"./build\" dir contains required build, but owned by root. chown to your username/group\n#  > sudo chown -R <username>:<group> ./build\n#  \n#  Note: If you want to edit the boost source you can download it to this host dir and set doIt.sh to use this instead of the boost version downloaded by the image\n#  This is necessary for boost version 1.70.0, which seems to contain a bug. Workaround here: https://github.com/boostorg/build/issues/385\nFROM amd64/ubuntu:18.04\n# # --------------------------------------------------------------------\n# #              Configure here\n#  ---------------------------------------------------------------------\n#  ---------------------------------------------------------------------\n#  Here you can speciofy exactly what boost, android ndk (and sdk) version you want to use.\n#  (1) BOOST\nARG BOOST_FILE_BASE=boost_1_69_0\nARG BOOST_VER=1.69.0\nARG BOOST_URL_BASE=https://dl.bintray.com/boostorg/release\n#  this is where the boost for android repo is mounted/shared to\nARG BOOST_FOR_ANDROID_PATH=/home/docker-share/boost-for-android\n#  this is where boost src will be extracted to\nARG BOOST_SRC_DIR_BASE=/home/docker-share/boost-src  \n#  (2) Android SDK\n#  https://developer.android.com/studio#downloads\nARG SDK_URL_BASE=https://dl.google.com/android/repository\nARG SDK_FILE=sdk-tools-linux-4333796.zip\n#  the sdk plaform to use \n#  https://developer.android.com/guide/topics/manifest/uses-sdk-element\nARG ANDROID_SDK_PLATFORM_VERS=\"platforms;android-28\"\n#  (3) Android NDK\n#  https://developer.android.com/ndk/downloads\nARG NDK_URL_BASE=https://dl.google.com/android/repository\nARG NDK_FILE=android-ndk-r19c-linux-x86_64.zip\n#  ---------------------------------------------------------------------\n# # --------------------------------------------------------------------\nRUN apt-get update\nRUN apt-get -y dist-upgrade\n#  for downloading archives\nRUN apt-get install wget -y\n#  for unzipping downloaded android archives\nRUN apt-get install zip -y\nRUN apt-get install openjdk-8-jdk -y\nRUN apt-get install lib32z1 -y\n#  need this this to install some (32 bit) prerequisites for android builds \nRUN dpkg --add-architecture i386\nRUN apt-get update\nRUN apt-get -y dist-upgrade\nRUN apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 libbz2-1.0:i386 -y\n#  need c compiler to set up create boost build system (before building boost with it and android toolchain)\nRUN apt-get install build-essential -y\nRUN apt-get install libc6-dev-i386 -y\nRUN apt-get install clang -y\n# --------------------------------------\nARG ANDROID_HOME=/home/android\nWORKDIR ${ANDROID_HOME}\n#  SDK\n#  ----\n#  download android sdk command line tools\nRUN wget ${SDK_URL_BASE}/$SDK_FILE\nRUN unzip $SDK_FILE\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\nRUN yes | sdkmanager --licenses\nRUN sdkmanager \"platform-tools\" $ANDROID_SDK_PLATFORM_VERS\n# RUN sdkmanager \"platform-tools\" \"platforms;android-28\" \n#  NDK\n#  ----\nRUN wget ${NDK_URL_BASE}/$NDK_FILE\nRUN unzip $NDK_FILE\n#  BOOST\n# ------\n#  this is where the boost for android repo is cloned to\n#  WORKDIR $BOOST_FOR_ANDROID_PATH\nARG BOOST_FILE=${BOOST_FILE_BASE}.tar.gz\nARG BOOST_SRC_DIR=${BOOST_SRC_DIR_BASE}/$BOOST_VER  \nRUN wget ${BOOST_URL_BASE}/${BOOST_VER}/source/$BOOST_FILE\nRUN mkdir -p $BOOST_SRC_DIR\nRUN tar xvzf $BOOST_FILE -C $BOOST_SRC_DIR --strip-components 1\n#  tar xvzf /home/android/boost_1_70_0.tar.gz -C /home/docker-share/boost/src/1.70.0 --strip-components 1\nRUN echo $BOOST_SRC_DIR\n","injectedSmells":[],"originalDockerfileHash":"072f8f63d105c46d238896fb31db36ab","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Version: 1.0\n#   Dockerfile for building boost for android\n#   https://github.com/dec1/Boost-for-Android\n#   creates docker container with all tools, libraries and sources required to build boost for android.\n#   Author: Declan Moran\n#   www.silverglint.com\n#   Usage: \n#  ------\n#   > git clone https://github.com/dec1/boost-for-android\n#   > cd boost-for-android\n#\n#   build docker image \"my_img_droid\" from the dockerfile in \"docker\" dir\n#   > docker build -t my_img_droid ./docker\n#\n#   run docker container \"my_ctr_droid\" from this image, mounting the current dir. (Need to pass absolute host paths to mount volume- hence \"pwd\")\n#   > docker run  -v $(pwd):/home/docker-share/boost-for-android -it --entrypoint=/bin/bash --name my_ctr_droid my_img_droid \n#\n#   Now inside docker container\n#   $ cd /home/docker-share/boost-for-android\n#\n#   Modify ./doIt.sh (on host), to match the boost and android ndk versions/paths in the \"Configure here\" section below\n#   Build from running docker container. \n#   $./doIt.sh\n#\n#   Exit container, when build is finsihed,\n#   $ exit\n#\n#   \"./build\" dir contains required build, but owned by root. chown to your username/group\n#   > sudo chown -R <username>:<group> ./build\n#   \n#   Note: If you want to edit the boost source you can download it to this host dir and set doIt.sh to use this instead of the boost version downloaded by the image\n#   This is necessary for boost version 1.70.0, which seems to contain a bug. Workaround here: https://github.com/boostorg/build/issues/385\nFROM amd64/ubuntu:18.04\n#  # --------------------------------------------------------------------\n#  #              Configure here\n#   ---------------------------------------------------------------------\n#   ---------------------------------------------------------------------\n#   Here you can speciofy exactly what boost, android ndk (and sdk) version you want to use.\n#   (1) BOOST\nARG BOOST_FILE_BASE=boost_1_69_0\nARG BOOST_VER=1.69.0\nARG BOOST_URL_BASE=https://dl.bintray.com/boostorg/release\n#   this is where the boost for android repo is mounted/shared to\nARG BOOST_FOR_ANDROID_PATH=/home/docker-share/boost-for-android\n#   this is where boost src will be extracted to\nARG BOOST_SRC_DIR_BASE=/home/docker-share/boost-src  \n#   (2) Android SDK\n#   https://developer.android.com/studio#downloads\nARG SDK_URL_BASE=https://dl.google.com/android/repository\nARG SDK_FILE=sdk-tools-linux-4333796.zip\n#   the sdk plaform to use \n#   https://developer.android.com/guide/topics/manifest/uses-sdk-element\nARG ANDROID_SDK_PLATFORM_VERS=\"platforms;android-28\"\n#   (3) Android NDK\n#   https://developer.android.com/ndk/downloads\nARG NDK_URL_BASE=https://dl.google.com/android/repository\nARG NDK_FILE=android-ndk-r19c-linux-x86_64.zip\n#   ---------------------------------------------------------------------\n#  # --------------------------------------------------------------------\nRUN apt-get update\nRUN apt-get -y dist-upgrade\n#   for downloading archives\nRUN apt-get install wget -y\n#   for unzipping downloaded android archives\nRUN apt-get install zip -y\nRUN apt-get install openjdk-8-jdk -y\nRUN apt-get install lib32z1 -y\n#   need this this to install some (32 bit) prerequisites for android builds \nRUN dpkg --add-architecture i386\nRUN apt-get update\nRUN apt-get -y dist-upgrade\nRUN apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 libbz2-1.0:i386 -y\n#   need c compiler to set up create boost build system (before building boost with it and android toolchain)\nRUN apt-get install build-essential -y\nRUN apt-get install libc6-dev-i386 -y\nRUN apt-get install clang -y\n#  --------------------------------------\nARG ANDROID_HOME=/home/android\nWORKDIR ${ANDROID_HOME}\n#   SDK\n#   ----\n#   download android sdk command line tools\nRUN wget ${SDK_URL_BASE}/$SDK_FILE\nRUN unzip $SDK_FILE\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\nRUN yes | sdkmanager --licenses\nRUN sdkmanager \"platform-tools\" $ANDROID_SDK_PLATFORM_VERS\n#  RUN sdkmanager \"platform-tools\" \"platforms;android-28\" \n#   NDK\n#   ----\nRUN wget ${NDK_URL_BASE}/$NDK_FILE\nRUN unzip $NDK_FILE\n#   BOOST\n#  ------\n#   this is where the boost for android repo is cloned to\n#   WORKDIR $BOOST_FOR_ANDROID_PATH\nARG BOOST_FILE=${BOOST_FILE_BASE}.tar.gz\nARG BOOST_SRC_DIR=${BOOST_SRC_DIR_BASE}/$BOOST_VER  \nRUN wget ${BOOST_URL_BASE}/${BOOST_VER}/source/$BOOST_FILE\nRUN mkdir -p $BOOST_SRC_DIR\nRUN tar xvzf $BOOST_FILE -C $BOOST_SRC_DIR --strip-components 1\n#   tar xvzf /home/android/boost_1_70_0.tar.gz -C /home/docker-share/boost/src/1.70.0 --strip-components 1\nRUN echo $BOOST_SRC_DIR\n","originalDockerfileUglifiedHash":"baa8b0ada03a2fbe76f5a5e0d118a290","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cf4ca421c167d20b306baf33722eb975d3d2f7bb.dockerfile"}