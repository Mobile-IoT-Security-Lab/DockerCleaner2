{"seed":3130176921,"processedDockerfileHash":"588ab0d6de1786ebfa7b32dc2958a4df","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.9 AS rootfs-stage\nMAINTAINER sparkyballs,thelamer\n#   environment\nENV REL=\"bionic\"\nENV ARCH=\"arm64\"\n#   install packages\nRUN apk add bash=4.4.19-r1 curl=7.64.0-r5 tzdata=2020c-r1 xz=5.2.4-r0 --no-cache\n#   grab base tarball\nRUN mkdir /root-out \\\n && curl -o /rootfs.tar.gz -L https://partner-images.canonical.com/core/${REL}/current/ubuntu-${REL}-core-cloudimg-${ARCH}-root.tar.gz \\\n && tar xf /rootfs.tar.gz -C /root-out\n#   Runtime stage\nFROM scratch\nCOPY --from=rootfs-stage /root-out/ /\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL MAINTAINER=\"sparkyballs,TheLamer\"\n#   set version for s6 overlay\nARG OVERLAY_VERSION=\"v1.22.0.0\"\nARG OVERLAY_ARCH=\"aarch64\"\n#   set environment variables\nARG DEBIAN_FRONTEND=\"noninteractive\"\nENV HOME=\"/root\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    TERM=\"xterm\"\n#   copy sources\nCOPY sources.list.arm /etc/apt/\nRUN echo \"**** Ripped from Ubuntu Docker Logic ****\" \\\n && set -xe \\\n && echo '#!/bin/sh' > /usr/sbin/policy-rc.d \\\n && echo 'exit 101' >> /usr/sbin/policy-rc.d \\\n && chmod +x /usr/sbin/policy-rc.d \\\n && dpkg-divert --local --rename --add /sbin/initctl \\\n && cp -a /usr/sbin/policy-rc.d /sbin/initctl \\\n && sed -i 's/^exit.*/exit 0/' /sbin/initctl \\\n && echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \\\n && echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \\\n && echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \\\n && echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \\\n && echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \\\n && echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \\\n && echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests \\\n && mkdir -p /run/systemd \\\n && echo 'docker' > /run/systemd/container \\\n && echo \"**** install apt-utils and locales ****\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-utils locales -y \\\n && echo \"**** install packages ****\" \\\n && apt-get install --no-install-recommends curl tzdata -y \\\n && echo \"**** generate locale ****\" \\\n && locale-gen en_US.UTF-8 \\\n && echo \"**** add s6 overlay ****\" \\\n && curl -o /tmp/s6-overlay.tar.gz -L \"https://github.com/just-containers/s6-overlay/releases/download/${OVERLAY_VERSION}/s6-overlay-${OVERLAY_ARCH}.tar.gz\" \\\n && tar xfz /tmp/s6-overlay.tar.gz -C / \\\n && echo \"**** create abc user and make our folders ****\" \\\n && useradd -u 911 -U -d /config -s /bin/false abc \\\n && usermod -G users abc \\\n && mkdir -p /app /config /defaults \\\n && echo \"**** add qemu ****\" \\\n && curl -o /usr/bin/qemu-aarch64-static -L \"https://lsio-ci.ams3.digitaloceanspaces.com/qemu-aarch64-static\" \\\n && chmod +x /usr/bin/qemu-aarch64-static \\\n && echo \"**** cleanup ****\" \\\n && apt-get clean \\\n && rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*\n#   add local files\nCOPY root/ /\nENTRYPOINT [\"/init\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.9 AS rootfs-stage\nMAINTAINER sparkyballs,thelamer\n#  environment\nENV REL=\"bionic\"\nENV ARCH=\"arm64\"\n#  install packages\nRUN apk add --no-cache bash curl tzdata xz\n#  grab base tarball\nRUN mkdir /root-out \\\n && curl -o /rootfs.tar.gz -L https://partner-images.canonical.com/core/${REL}/current/ubuntu-${REL}-core-cloudimg-${ARCH}-root.tar.gz \\\n && tar xf /rootfs.tar.gz -C /root-out\n#  Runtime stage\nFROM scratch\nCOPY --from=rootfs-stage /root-out/ /\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL MAINTAINER=\"sparkyballs,TheLamer\"\n#  set version for s6 overlay\nARG OVERLAY_VERSION=\"v1.22.0.0\"\nARG OVERLAY_ARCH=\"aarch64\"\n#  set environment variables\nARG DEBIAN_FRONTEND=\"noninteractive\"\nENV HOME=\"/root\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    TERM=\"xterm\"\n#  copy sources\nCOPY sources.list.arm /etc/apt/\nRUN echo \"**** Ripped from Ubuntu Docker Logic ****\" \\\n && set -xe \\\n && echo '#!/bin/sh' > /usr/sbin/policy-rc.d \\\n && echo 'exit 101' >> /usr/sbin/policy-rc.d \\\n && chmod +x /usr/sbin/policy-rc.d \\\n && dpkg-divert --local --rename --add /sbin/initctl \\\n && cp -a /usr/sbin/policy-rc.d /sbin/initctl \\\n && sed -i 's/^exit.*/exit 0/' /sbin/initctl \\\n && echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \\\n && echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \\\n && echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \\\n && echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \\\n && echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \\\n && echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \\\n && echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests \\\n && mkdir -p /run/systemd \\\n && echo 'docker' > /run/systemd/container \\\n && echo \"**** install apt-utils and locales ****\" \\\n && apt-get update \\\n && apt-get install apt-utils locales -y \\\n && echo \"**** install packages ****\" \\\n && apt-get install curl tzdata -y \\\n && echo \"**** generate locale ****\" \\\n && locale-gen en_US.UTF-8 \\\n && echo \"**** add s6 overlay ****\" \\\n && curl -o /tmp/s6-overlay.tar.gz -L \"https://github.com/just-containers/s6-overlay/releases/download/${OVERLAY_VERSION}/s6-overlay-${OVERLAY_ARCH}.tar.gz\" \\\n && tar xfz /tmp/s6-overlay.tar.gz -C / \\\n && echo \"**** create abc user and make our folders ****\" \\\n && useradd -u 911 -U -d /config -s /bin/false abc \\\n && usermod -G users abc \\\n && mkdir -p /app /config /defaults \\\n && echo \"**** add qemu ****\" \\\n && curl -o /usr/bin/qemu-aarch64-static -L \"https://lsio-ci.ams3.digitaloceanspaces.com/qemu-aarch64-static\" \\\n && chmod +x /usr/bin/qemu-aarch64-static \\\n && echo \"**** cleanup ****\" \\\n && apt-get clean \\\n && rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*\n#  add local files\nCOPY root/ /\nENTRYPOINT [\"/init\"]\n","injectedSmells":[],"originalDockerfileHash":"d091c4101837d2aa2e8697c7ba92b599","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.9 AS rootfs-stage\nMAINTAINER sparkyballs,thelamer\n#   environment\nENV REL=\"bionic\"\nENV ARCH=\"arm64\"\n#   install packages\nRUN apk add --no-cache bash curl tzdata xz\n#   grab base tarball\nRUN mkdir /root-out \\\n && curl -o /rootfs.tar.gz -L https://partner-images.canonical.com/core/${REL}/current/ubuntu-${REL}-core-cloudimg-${ARCH}-root.tar.gz \\\n && tar xf /rootfs.tar.gz -C /root-out\n#   Runtime stage\nFROM scratch\nCOPY --from=rootfs-stage /root-out/ /\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL MAINTAINER=\"sparkyballs,TheLamer\"\n#   set version for s6 overlay\nARG OVERLAY_VERSION=\"v1.22.0.0\"\nARG OVERLAY_ARCH=\"aarch64\"\n#   set environment variables\nARG DEBIAN_FRONTEND=\"noninteractive\"\nENV HOME=\"/root\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    TERM=\"xterm\"\n#   copy sources\nCOPY sources.list.arm /etc/apt/\nRUN echo \"**** Ripped from Ubuntu Docker Logic ****\" \\\n && set -xe \\\n && echo '#!/bin/sh' > /usr/sbin/policy-rc.d \\\n && echo 'exit 101' >> /usr/sbin/policy-rc.d \\\n && chmod +x /usr/sbin/policy-rc.d \\\n && dpkg-divert --local --rename --add /sbin/initctl \\\n && cp -a /usr/sbin/policy-rc.d /sbin/initctl \\\n && sed -i 's/^exit.*/exit 0/' /sbin/initctl \\\n && echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \\\n && echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \\\n && echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \\\n && echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \\\n && echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \\\n && echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \\\n && echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests \\\n && mkdir -p /run/systemd \\\n && echo 'docker' > /run/systemd/container \\\n && echo \"**** install apt-utils and locales ****\" \\\n && apt-get update \\\n && apt-get install apt-utils locales -y \\\n && echo \"**** install packages ****\" \\\n && apt-get install curl tzdata -y \\\n && echo \"**** generate locale ****\" \\\n && locale-gen en_US.UTF-8 \\\n && echo \"**** add s6 overlay ****\" \\\n && curl -o /tmp/s6-overlay.tar.gz -L \"https://github.com/just-containers/s6-overlay/releases/download/${OVERLAY_VERSION}/s6-overlay-${OVERLAY_ARCH}.tar.gz\" \\\n && tar xfz /tmp/s6-overlay.tar.gz -C / \\\n && echo \"**** create abc user and make our folders ****\" \\\n && useradd -u 911 -U -d /config -s /bin/false abc \\\n && usermod -G users abc \\\n && mkdir -p /app /config /defaults \\\n && echo \"**** add qemu ****\" \\\n && curl -o /usr/bin/qemu-aarch64-static -L \"https://lsio-ci.ams3.digitaloceanspaces.com/qemu-aarch64-static\" \\\n && chmod +x /usr/bin/qemu-aarch64-static \\\n && echo \"**** cleanup ****\" \\\n && apt-get clean \\\n && rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*\n#   add local files\nCOPY root/ /\nENTRYPOINT [\"/init\"]\n","originalDockerfileUglifiedHash":"5cf5dc9ad99b34266ad5db743ccf908e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9ff3705738138b7045d8ce03b4d69f07777ae10f.dockerfile"}