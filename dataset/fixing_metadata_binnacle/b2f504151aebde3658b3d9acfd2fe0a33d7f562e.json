{"seed":1236193201,"processedDockerfileHash":"eca99c96f8064aa67d10d96977685d78","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   HADOPIBOX\nFROM ubuntu:trusty\nMAINTAINER hadopi <hadopibox@gmail.com>\n#   env\nENV TERM=\"xterm\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV RTORRENT_DEFAULT=\"/opt/rtorrent\"\nENV RTORRENT_VERSION=\"0.9.2-1\"\nENV RUTORRENT_VERSION=\"3.6\"\nENV H5AI_VERSION=\"0.27.0\"\nENV CAKEBOX_VERSION=\"v1.8.3\"\n#   install tools ===============================================================\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 90BD7EACED8E640A \\\n && echo 'deb http://ppa.launchpad.net/mc3man/trusty-media/ubuntu trusty main' >> /etc/apt/sources.list.d/ffmpeg.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends vim=2:7.4.052-1ubuntu3.1 curl=7.35.0-1ubuntu2.20 software-properties-common=0.92.37.8 python-software-properties=0.92.37.8 build-essential=11.6ubuntu6 supervisor=3.0b2-1ubuntu0.1 nginx=1.4.6-1ubuntu3.9 php5-cli=5.5.9+dfsg-1ubuntu4.29 php5-fpm=5.5.9+dfsg-1ubuntu4.29 php5-gd=5.5.9+dfsg-1ubuntu4.29 zip=3.0-8 unzip=6.0-9ubuntu1.5 unrar-free=1:0.0.1+cvs20071127-2+deb7u1build0.14.04.1 mediainfo=0.7.67-1 imagemagick=8:6.7.7.10-6ubuntu3.13 ffmpeg -y )\n#   install rtorrent ============================================================\nRUN (apt-get update ;apt-get install --no-install-recommends rtorrent=${RTORRENT_VERSION} -y )\n#   install rutorrent ===========================================================\nRUN mkdir -p /var/www \\\n && curl -sSL https://bintray.com/artifact/download/novik65/generic/rutorrent-${RUTORRENT_VERSION}.tar.gz | tar xz -C /var/www \\\n && curl -sSL https://bintray.com/artifact/download/novik65/generic/plugins-${RUTORRENT_VERSION}.tar.gz | tar xz -C /var/www/rutorrent\n#   install cakebox =============================================================\n#   first the prerequisites (composer + nodejs + bower)\nRUN curl -sSL http://getcomposer.org/installer | php \\\n && mv /composer.phar /usr/bin/composer \\\n && chmod +x /usr/bin/composer\n#   then either install nodejs+npm from package manager (old nodejs version that doesn't include npm)\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=0.10.25~dfsg2-2ubuntu1.2 npm=1.3.10~dfsg-1 -y ) \\\n && ln -s $( which nodejs ;) /usr/bin/node \\\n && npm install bower@1.8.14 -g\n#   or compile nodejs only (auto include npm)\n#  RUN mkdir -p /opt/nodejs && curl -sSL http://nodejs.org/dist/node-latest.tar.gz | tar xzv --strip 1 -C /opt/nodejs && cd /opt/nodejs && ./configure && make && make install\n#   and finally\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:1.9.1-1ubuntu0.10 -y ) \\\n && git clone https://github.com/cakebox/cakebox-light.git /var/www/cakebox \\\n && cd /var/www/cakebox \\\n && git checkout tags/$( git describe --abbrev=0 ;) \\\n && composer install \\\n && bower install --config.interactive=false --allow-root \\\n && cp config/default.php.dist config/default.php \\\n && sed -i \"/cakebox.root/s,/var/www,${RTORRENT_DEFAULT}/share,\" config/default.php\n#   install h5ai ================================================================\nRUN curl -sSL http://release.larsjung.de/h5ai/h5ai-$H5AI_VERSION.zip -o /tmp/h5ai.zip \\\n && unzip /tmp/h5ai.zip -d /var/www/ \\\n && rm -f /tmp/h5ai.zip \\\n && ln -s ${RTORRENT_DEFAULT}/share /var/www/downloads\n#   install pure-ftpd ===========================================================\n#   install dependencies\nRUN apt-get -y build-dep pure-ftpd\n#   build from source\nRUN mkdir /tmp/pure-ftpd/ \\\n && cd /tmp/pure-ftpd/ \\\n && apt-get source pure-ftpd \\\n && cd pure-ftpd-* \\\n && sed -i '/^optflags=/ s/$/ --without-capabilities/g' ./debian/rules \\\n && dpkg-buildpackage -b -uc\n#   install the new deb files\nRUN dpkg -i /tmp/pure-ftpd/pure-ftpd-common*.deb \\\n && (apt-get update ;apt-get install --no-install-recommends openbsd-inetd=0.20091229-2ubuntu3 -y ) \\\n && dpkg -i /tmp/pure-ftpd/pure-ftpd_*.deb\n#   Prevent pure-ftpd upgrading\nRUN apt-mark hold pure-ftpd pure-ftpd-common\n#   setup ftpgroup and ftpuser\nRUN groupadd ftpgroup \\\n && useradd -g ftpgroup -d /dev/null -s /etc ftpuser\n#   cleanup =====================================================================\nRUN apt-get clean \\\n && rm -rf /tmp/pure-ftpd/ \\\n && rm -rf /var/lib/apt/lists/*\n#   setup =======================================================================\nCOPY src /\n#   nginx\nRUN ln -s /etc/nginx/sites-available/rutorrent.conf /etc/nginx/sites-enabled \\\n && rm /etc/nginx/sites-enabled/default\n#   rtorrent\nRUN mkdir -p ${RTORRENT_DEFAULT}/share \\\n && mkdir -p ${RTORRENT_DEFAULT}/session \\\n && chown -R www-data:www-data /var/www\nEXPOSE 30000-30009\nRUN useradd -m -d /home/pibox -m pibox -s \"/bin/bash\" \\\n && chown -R pibox:pibox /var/log/supervisor\nCMD [\"/go.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  HADOPIBOX\nFROM ubuntu:trusty\nMAINTAINER hadopi <hadopibox@gmail.com>\n#  env\nENV TERM=\"xterm\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV RTORRENT_DEFAULT=\"/opt/rtorrent\"\nENV RTORRENT_VERSION=\"0.9.2-1\"\nENV RUTORRENT_VERSION=\"3.6\"\nENV H5AI_VERSION=\"0.27.0\"\nENV CAKEBOX_VERSION=\"v1.8.3\"\n#  install tools ===============================================================\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 90BD7EACED8E640A \\\n && echo 'deb http://ppa.launchpad.net/mc3man/trusty-media/ubuntu trusty main' >> /etc/apt/sources.list.d/ffmpeg.list\nRUN apt-get update -qq --force-yes -y\nRUN apt-get install vim curl software-properties-common python-software-properties build-essential supervisor nginx php5-cli php5-fpm php5-gd zip unzip unrar-free mediainfo imagemagick ffmpeg -y\n#  install rtorrent ============================================================\nRUN apt-get install rtorrent=${RTORRENT_VERSION} -y\n#  install rutorrent ===========================================================\nRUN mkdir -p /var/www \\\n && curl -sSL https://bintray.com/artifact/download/novik65/generic/rutorrent-${RUTORRENT_VERSION}.tar.gz | tar xz -C /var/www \\\n && curl -sSL https://bintray.com/artifact/download/novik65/generic/plugins-${RUTORRENT_VERSION}.tar.gz | tar xz -C /var/www/rutorrent\n#  install cakebox =============================================================\n#  first the prerequisites (composer + nodejs + bower)\nRUN curl -sSL http://getcomposer.org/installer | php \\\n && mv /composer.phar /usr/bin/composer \\\n && chmod +x /usr/bin/composer\n#  then either install nodejs+npm from package manager (old nodejs version that doesn't include npm)\nRUN apt-get install nodejs npm -y \\\n && ln -s $( which nodejs ;) /usr/bin/node \\\n && npm install bower -g\n#  or compile nodejs only (auto include npm)\n# RUN mkdir -p /opt/nodejs && curl -sSL http://nodejs.org/dist/node-latest.tar.gz | tar xzv --strip 1 -C /opt/nodejs && cd /opt/nodejs && ./configure && make && make install\n#  and finally\nRUN apt-get install git -y \\\n && git clone https://github.com/cakebox/cakebox-light.git /var/www/cakebox \\\n && cd /var/www/cakebox \\\n && git checkout tags/$( git describe --abbrev=0 ;) \\\n && composer install \\\n && bower install --config.interactive=false --allow-root \\\n && cp config/default.php.dist config/default.php \\\n && sed -i \"/cakebox.root/s,/var/www,${RTORRENT_DEFAULT}/share,\" config/default.php\n#  install h5ai ================================================================\nRUN curl -sSL http://release.larsjung.de/h5ai/h5ai-$H5AI_VERSION.zip -o /tmp/h5ai.zip \\\n && unzip /tmp/h5ai.zip -d /var/www/ \\\n && rm -f /tmp/h5ai.zip \\\n && ln -s ${RTORRENT_DEFAULT}/share /var/www/downloads\n#  install pure-ftpd ===========================================================\n#  install dependencies\nRUN apt-get -y build-dep pure-ftpd\n#  build from source\nRUN mkdir /tmp/pure-ftpd/ \\\n && cd /tmp/pure-ftpd/ \\\n && apt-get source pure-ftpd \\\n && cd pure-ftpd-* \\\n && sed -i '/^optflags=/ s/$/ --without-capabilities/g' ./debian/rules \\\n && dpkg-buildpackage -b -uc\n#  install the new deb files\nRUN dpkg -i /tmp/pure-ftpd/pure-ftpd-common*.deb \\\n && apt-get install openbsd-inetd -y \\\n && dpkg -i /tmp/pure-ftpd/pure-ftpd_*.deb\n#  Prevent pure-ftpd upgrading\nRUN apt-mark hold pure-ftpd pure-ftpd-common\n#  setup ftpgroup and ftpuser\nRUN groupadd ftpgroup \\\n && useradd -g ftpgroup -d /dev/null -s /etc ftpuser\n#  cleanup =====================================================================\nRUN apt-get clean \\\n && rm -rf /tmp/pure-ftpd/ \\\n && rm -rf /var/lib/apt/lists/*\n#  setup =======================================================================\nADD src /\n#  nginx\nRUN ln -s /etc/nginx/sites-available/rutorrent.conf /etc/nginx/sites-enabled \\\n && rm /etc/nginx/sites-enabled/default\n#  rtorrent\nRUN mkdir -p ${RTORRENT_DEFAULT}/share \\\n && mkdir -p ${RTORRENT_DEFAULT}/session \\\n && chown -R www-data:www-data /var/www\nEXPOSE 30000-30009\nRUN useradd -m -d /home/pibox -m pibox -s \"/bin/bash\" \\\n && chown -R pibox:pibox /var/log/supervisor\nCMD [\"/go.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"650b92b50566f4fdf75bb17c49aecfb1","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   HADOPIBOX\nFROM ubuntu:trusty\nMAINTAINER hadopi <hadopibox@gmail.com>\n#   env\nENV TERM=\"xterm\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV RTORRENT_DEFAULT=\"/opt/rtorrent\"\nENV RTORRENT_VERSION=\"0.9.2-1\"\nENV RUTORRENT_VERSION=\"3.6\"\nENV H5AI_VERSION=\"0.27.0\"\nENV CAKEBOX_VERSION=\"v1.8.3\"\n#   install tools ===============================================================\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 90BD7EACED8E640A \\\n && echo 'deb http://ppa.launchpad.net/mc3man/trusty-media/ubuntu trusty main' >> /etc/apt/sources.list.d/ffmpeg.list\nRUN apt-get update -qq --force-yes -y\nRUN apt-get install vim curl software-properties-common python-software-properties build-essential supervisor nginx php5-cli php5-fpm php5-gd zip unzip unrar-free mediainfo imagemagick ffmpeg -y\n#   install rtorrent ============================================================\nRUN apt-get install rtorrent=${RTORRENT_VERSION} -y\n#   install rutorrent ===========================================================\nRUN mkdir -p /var/www \\\n && curl -sSL https://bintray.com/artifact/download/novik65/generic/rutorrent-${RUTORRENT_VERSION}.tar.gz | tar xz -C /var/www \\\n && curl -sSL https://bintray.com/artifact/download/novik65/generic/plugins-${RUTORRENT_VERSION}.tar.gz | tar xz -C /var/www/rutorrent\n#   install cakebox =============================================================\n#   first the prerequisites (composer + nodejs + bower)\nRUN curl -sSL http://getcomposer.org/installer | php \\\n && mv /composer.phar /usr/bin/composer \\\n && chmod +x /usr/bin/composer\n#   then either install nodejs+npm from package manager (old nodejs version that doesn't include npm)\nRUN apt-get install nodejs npm -y \\\n && ln -s $( which nodejs ;) /usr/bin/node \\\n && npm install bower -g\n#   or compile nodejs only (auto include npm)\n#  RUN mkdir -p /opt/nodejs && curl -sSL http://nodejs.org/dist/node-latest.tar.gz | tar xzv --strip 1 -C /opt/nodejs && cd /opt/nodejs && ./configure && make && make install\n#   and finally\nRUN apt-get install git -y \\\n && git clone https://github.com/cakebox/cakebox-light.git /var/www/cakebox \\\n && cd /var/www/cakebox \\\n && git checkout tags/$( git describe --abbrev=0 ;) \\\n && composer install \\\n && bower install --config.interactive=false --allow-root \\\n && cp config/default.php.dist config/default.php \\\n && sed -i \"/cakebox.root/s,/var/www,${RTORRENT_DEFAULT}/share,\" config/default.php\n#   install h5ai ================================================================\nRUN curl -sSL http://release.larsjung.de/h5ai/h5ai-$H5AI_VERSION.zip -o /tmp/h5ai.zip \\\n && unzip /tmp/h5ai.zip -d /var/www/ \\\n && rm -f /tmp/h5ai.zip \\\n && ln -s ${RTORRENT_DEFAULT}/share /var/www/downloads\n#   install pure-ftpd ===========================================================\n#   install dependencies\nRUN apt-get -y build-dep pure-ftpd\n#   build from source\nRUN mkdir /tmp/pure-ftpd/ \\\n && cd /tmp/pure-ftpd/ \\\n && apt-get source pure-ftpd \\\n && cd pure-ftpd-* \\\n && sed -i '/^optflags=/ s/$/ --without-capabilities/g' ./debian/rules \\\n && dpkg-buildpackage -b -uc\n#   install the new deb files\nRUN dpkg -i /tmp/pure-ftpd/pure-ftpd-common*.deb \\\n && apt-get install openbsd-inetd -y \\\n && dpkg -i /tmp/pure-ftpd/pure-ftpd_*.deb\n#   Prevent pure-ftpd upgrading\nRUN apt-mark hold pure-ftpd pure-ftpd-common\n#   setup ftpgroup and ftpuser\nRUN groupadd ftpgroup \\\n && useradd -g ftpgroup -d /dev/null -s /etc ftpuser\n#   cleanup =====================================================================\nRUN apt-get clean \\\n && rm -rf /tmp/pure-ftpd/ \\\n && rm -rf /var/lib/apt/lists/*\n#   setup =======================================================================\nADD src /\n#   nginx\nRUN ln -s /etc/nginx/sites-available/rutorrent.conf /etc/nginx/sites-enabled \\\n && rm /etc/nginx/sites-enabled/default\n#   rtorrent\nRUN mkdir -p ${RTORRENT_DEFAULT}/share \\\n && mkdir -p ${RTORRENT_DEFAULT}/session \\\n && chown -R www-data:www-data /var/www\nEXPOSE 30000-30009\nRUN useradd -m -d /home/pibox -m pibox -s \"/bin/bash\" \\\n && chown -R pibox:pibox /var/log/supervisor\nCMD [\"/go.sh\"]\n","originalDockerfileUglifiedHash":"93f0b798152654fd3b4e2c5ee0c85c33","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b2f504151aebde3658b3d9acfd2fe0a33d7f562e.dockerfile"}