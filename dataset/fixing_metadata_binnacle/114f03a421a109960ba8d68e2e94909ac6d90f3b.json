{"seed":3882479396,"processedDockerfileHash":"e19d1e9477e89126bbff547940cc1402","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM nginx:latest\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"America/Sao_Paulo\" > /etc/timezone\nRUN dpkg-reconfigure -f noninteractive tzdata\n#  ## UPDATE DEBIAN\nRUN : \\\n && apt-get upgrade -y \\\n && apt-get dist-upgrade -y \\\n && apt-get autoremove -y\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends sudo=1.9.5p2-3+deb11u1 htop=3.0.5-7 curl=7.74.0-1.3+deb11u7 git=1:2.30.2-1+deb11u2 libpng-dev=1.6.37-3 libjpeg-dev=1:2.0.6-4 libpq-dev=13.9-0+deb11u1 vim=2:8.2.2434-3+deb11u1 imagemagick=8:6.9.11.60+dfsg-1.3+deb11u1 mysql-client bash-completion=1:2.11-2 libfontconfig1=2.13.1-4.2 bzip2=1.0.8-4 build-essential=12.9 software-properties-common=0.96.20.2-2.1 locales=2.31-13+deb11u5 wget=1.21-1+deb11u1 openconnect=8.10-2+b1 netcat=1.10-46 tig=2.5.1-1 ca-certificates=20210119 apt-transport-https=2.2.4 xz-utils=5.2.5-2.1~deb11u1 libfontconfig1=2.13.1-4.2 rsync=3.2.3-4+deb11u1 gnupg=2.2.27-2+deb11u2 -y )\n#  ## INSTALL PHP-FPM AND EXTENSION\n#  # Add PHP7.2 source\nRUN wget https://packages.sury.org/php/apt.gpg -O- | sudo apt-key add -\nRUN echo \"deb https://packages.sury.org/php/ stretch main\" | sudo tee /etc/apt/sources.list.d/php.list\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends php7.2-fpm php7.2-cli php7.2-common php7.2-curl php7.2-mbstring php7.2-mysql php7.2-xml php7.2-gd php7.2-json php7.2-ldap php7.2-sqlite3 php7.2-xmlrpc php-geoip=1.1.1-7 php-imagick=3.4.4+php8.0+3.4.4-2+deb11u2 php-imap=2:7.4+76 php-xdebug=3.0.2+2.9.8+2.8.1+2.5.5-2 php-xml=2:7.4+76 php-apcu=5.1.19+4.0.11-3 libfcgi0ldbl=2.4.2-2 -y )\n#  ## CONFIGURE LOCALES\n#  ENV LOCALE_DEFAULT en_US.UTF8\nENV LOCALE_DEFAULT=\"pt_BR.UTF8\"\nRUN echo \"LANGUAGE=$LOCALE_DEFAULT\" >> /etc/environment\nRUN echo \"LANG=$LOCALE_DEFAULT\" >> /etc/environment\nRUN echo \"LC_ALL=$LOCALE_DEFAULT\" >> /etc/environment\nRUN locale-gen $LOCALE_DEFAULT\nRUN dpkg-reconfigure locales\n#  ## INSTALL COMPOSER\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_DISABLE_XDEBUG_WARN=\"1\"\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && composer self-update\n#  ## INSTALL NODEJS\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"10.x\"\nRUN curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -\nRUN curl -sL https://deb.nodesource.com/setup_$NODE_VERSION | bash -\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends nodejs=12.22.12~dfsg-1~deb11u3 -y )\nRUN npm install npm@9.6.4 -g\nRUN npm install bower@1.8.14 gulp@4.0.2 -g\nRUN npm cache verify\n#  ## INSTALL DRUSH\nRUN wget -O drush.phar https://github.com/drush-ops/drush/releases/download/8.1.18/drush.phar\nRUN chmod +x drush.phar\nRUN mv drush.phar /usr/local/bin/drush\nRUN (apt-get update ;apt-get install --no-install-recommends unzip=6.0-26+deb11u1 --yes )\n#  ## CONFIGURE PHP-FPM\nRUN echo \"xdebug.max_nesting_level=9999\" >> /etc/php/7.2/mods-available/xdebug.ini\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/memory_limit = 128M/memory_limit = 1256M/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/display_errors = Off/display_errors = stderr/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/post_max_size = 8M/post_max_size = 30M/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/upload_max_filesize = 2M/upload_max_filesize = 30M/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/;opcache.enable=0/opcache.enable=1/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.2/fpm/php-fpm.conf \\\n && sed -i '/^listen = /clisten = 9000' /etc/php/7.2/fpm/pool.d/www.conf \\\n && sed -i '/^listen.allowed_clients/c;listen.allowed_clients =' /etc/php/7.2/fpm/pool.d/www.conf \\\n && sed -i '/^;catch_workers_output/ccatch_workers_output = yes' /etc/php/7.2/fpm/pool.d/www.conf \\\n && sed -i '/^;env\\[TEMP\\] = .*/aenv[DB_PORT_3306_TCP_ADDR] = $DB_PORT_3306_TCP_ADDR' /etc/php/7.2/fpm/pool.d/www.conf\n#  ## APPLY NGINX CONFIGURATION\nRUN mkdir -p /tmp/logs\nRUN chmod 777 /tmp/logs\nCOPY ./docker/nginx.conf /etc/nginx/nginx.conf\nCOPY ./docker/fastcgi.conf /etc/nginx/fastcgi.conf\nCOPY ./docker/bash.bashrc /etc/bash.bashrc\n#  ## CREATE USER FOR DEVELOPMENT\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && useradd -u 1000 -G www-data,sudo -d /pece --shell /bin/bash -m pece \\\n && echo \"secret\\nsecret\" | passwd pece\nCOPY ./docker/bash.bashrc /etc/bash.bashrc\nRUN chmod +x /etc/bash.bashrc\nCOPY ./docker/docker-entrypoint.sh /pece/docker-entrypoint.sh\nRUN chmod +x /pece/docker-entrypoint.sh\nUSER pece\nWORKDIR /pece\nRUN mkdir ~/.drush\n#   RUN drush init -y -bg --fallback=/usr/local/bin/drush\nRUN cd ~/.drush \\\n && git clone -b local_workflow_improvements --single-branch https://github.com/TallerWebSolutions/kraftwagen.git\n#   RUN cd ~/.drush && drush cc drush\nCMD [\"bash\"]\nENTRYPOINT [\"/pece/docker-entrypoint.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM nginx:latest\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"America/Sao_Paulo\" > /etc/timezone\nRUN dpkg-reconfigure -f noninteractive tzdata\n# ## UPDATE DEBIAN\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get dist-upgrade -y \\\n && apt-get autoremove -y\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends sudo htop curl git libpng-dev libjpeg-dev libpq-dev vim imagemagick mysql-client bash-completion libfontconfig1 bzip2 build-essential software-properties-common locales wget openconnect netcat tig ca-certificates apt-transport-https xz-utils libfontconfig1 rsync gnupg -y\n# ## INSTALL PHP-FPM AND EXTENSION\n# # Add PHP7.2 source\nRUN wget https://packages.sury.org/php/apt.gpg -O- | sudo apt-key add -\nRUN echo \"deb https://packages.sury.org/php/ stretch main\" | sudo tee /etc/apt/sources.list.d/php.list\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends php7.2-fpm php7.2-cli php7.2-common php7.2-curl php7.2-mbstring php7.2-mysql php7.2-xml php7.2-gd php7.2-json php7.2-ldap php7.2-sqlite3 php7.2-xmlrpc php-geoip php-imagick php-imap php-xdebug php-xml php-apcu libfcgi0ldbl -y\n# ## CONFIGURE LOCALES\n# ENV LOCALE_DEFAULT en_US.UTF8\nENV LOCALE_DEFAULT=\"pt_BR.UTF8\"\nRUN echo \"LANGUAGE=$LOCALE_DEFAULT\" >> /etc/environment\nRUN echo \"LANG=$LOCALE_DEFAULT\" >> /etc/environment\nRUN echo \"LC_ALL=$LOCALE_DEFAULT\" >> /etc/environment\nRUN locale-gen $LOCALE_DEFAULT\nRUN dpkg-reconfigure locales\n# ## INSTALL COMPOSER\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_DISABLE_XDEBUG_WARN=\"1\"\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && composer self-update\n# ## INSTALL NODEJS\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"10.x\"\nRUN curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -\nRUN curl -sL https://deb.nodesource.com/setup_$NODE_VERSION | bash -\nRUN apt-get update -y \\\n && apt-get install nodejs -y\nRUN npm install npm -g\nRUN npm install bower gulp -g\nRUN npm cache verify\n# ## INSTALL DRUSH\nRUN wget -O drush.phar https://github.com/drush-ops/drush/releases/download/8.1.18/drush.phar\nRUN chmod +x drush.phar\nRUN mv drush.phar /usr/local/bin/drush\nRUN apt-get install unzip --yes\n# ## CONFIGURE PHP-FPM\nRUN echo \"xdebug.max_nesting_level=9999\" >> /etc/php/7.2/mods-available/xdebug.ini\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/memory_limit = 128M/memory_limit = 1256M/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/display_errors = Off/display_errors = stderr/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/post_max_size = 8M/post_max_size = 30M/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/upload_max_filesize = 2M/upload_max_filesize = 30M/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/;opcache.enable=0/opcache.enable=1/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.2/fpm/php-fpm.conf \\\n && sed -i '/^listen = /clisten = 9000' /etc/php/7.2/fpm/pool.d/www.conf \\\n && sed -i '/^listen.allowed_clients/c;listen.allowed_clients =' /etc/php/7.2/fpm/pool.d/www.conf \\\n && sed -i '/^;catch_workers_output/ccatch_workers_output = yes' /etc/php/7.2/fpm/pool.d/www.conf \\\n && sed -i '/^;env\\[TEMP\\] = .*/aenv[DB_PORT_3306_TCP_ADDR] = $DB_PORT_3306_TCP_ADDR' /etc/php/7.2/fpm/pool.d/www.conf\n# ## APPLY NGINX CONFIGURATION\nRUN mkdir -p /tmp/logs\nRUN chmod 777 /tmp/logs\nCOPY ./docker/nginx.conf /etc/nginx/nginx.conf\nCOPY ./docker/fastcgi.conf /etc/nginx/fastcgi.conf\nCOPY ./docker/bash.bashrc /etc/bash.bashrc\n# ## CREATE USER FOR DEVELOPMENT\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && useradd -u 1000 -G www-data,sudo -d /pece --shell /bin/bash -m pece \\\n && echo \"secret\\nsecret\" | passwd pece\nCOPY ./docker/bash.bashrc /etc/bash.bashrc\nRUN chmod +x /etc/bash.bashrc\nADD ./docker/docker-entrypoint.sh /pece/docker-entrypoint.sh\nRUN chmod +x /pece/docker-entrypoint.sh\nUSER pece\nWORKDIR /pece\nRUN mkdir ~/.drush\n#  RUN drush init -y -bg --fallback=/usr/local/bin/drush\nRUN cd ~/.drush \\\n && git clone -b local_workflow_improvements --single-branch https://github.com/TallerWebSolutions/kraftwagen.git\n#  RUN cd ~/.drush && drush cc drush\nCMD [\"bash\"]\nENTRYPOINT [\"/pece/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"ff4b7dc6e09c2171cf2a4e57e769ef24","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nginx:latest\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"America/Sao_Paulo\" > /etc/timezone\nRUN dpkg-reconfigure -f noninteractive tzdata\n#  ## UPDATE DEBIAN\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get dist-upgrade -y \\\n && apt-get autoremove -y\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends sudo htop curl git libpng-dev libjpeg-dev libpq-dev vim imagemagick mysql-client bash-completion libfontconfig1 bzip2 build-essential software-properties-common locales wget openconnect netcat tig ca-certificates apt-transport-https xz-utils libfontconfig1 rsync gnupg -y\n#  ## INSTALL PHP-FPM AND EXTENSION\n#  # Add PHP7.2 source\nRUN wget https://packages.sury.org/php/apt.gpg -O- | sudo apt-key add -\nRUN echo \"deb https://packages.sury.org/php/ stretch main\" | sudo tee /etc/apt/sources.list.d/php.list\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends php7.2-fpm php7.2-cli php7.2-common php7.2-curl php7.2-mbstring php7.2-mysql php7.2-xml php7.2-gd php7.2-json php7.2-ldap php7.2-sqlite3 php7.2-xmlrpc php-geoip php-imagick php-imap php-xdebug php-xml php-apcu libfcgi0ldbl -y\n#  ## CONFIGURE LOCALES\n#  ENV LOCALE_DEFAULT en_US.UTF8\nENV LOCALE_DEFAULT=\"pt_BR.UTF8\"\nRUN echo \"LANGUAGE=$LOCALE_DEFAULT\" >> /etc/environment\nRUN echo \"LANG=$LOCALE_DEFAULT\" >> /etc/environment\nRUN echo \"LC_ALL=$LOCALE_DEFAULT\" >> /etc/environment\nRUN locale-gen $LOCALE_DEFAULT\nRUN dpkg-reconfigure locales\n#  ## INSTALL COMPOSER\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_DISABLE_XDEBUG_WARN=\"1\"\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && composer self-update\n#  ## INSTALL NODEJS\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"10.x\"\nRUN curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -\nRUN curl -sL https://deb.nodesource.com/setup_$NODE_VERSION | bash -\nRUN apt-get update -y \\\n && apt-get install nodejs -y\nRUN npm install npm -g\nRUN npm install bower gulp -g\nRUN npm cache verify\n#  ## INSTALL DRUSH\nRUN wget -O drush.phar https://github.com/drush-ops/drush/releases/download/8.1.18/drush.phar\nRUN chmod +x drush.phar\nRUN mv drush.phar /usr/local/bin/drush\nRUN apt-get install unzip --yes\n#  ## CONFIGURE PHP-FPM\nRUN echo \"xdebug.max_nesting_level=9999\" >> /etc/php/7.2/mods-available/xdebug.ini\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/memory_limit = 128M/memory_limit = 1256M/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/display_errors = Off/display_errors = stderr/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/post_max_size = 8M/post_max_size = 30M/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/upload_max_filesize = 2M/upload_max_filesize = 30M/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i \"s/;opcache.enable=0/opcache.enable=1/\" /etc/php/7.2/fpm/php.ini \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.2/fpm/php-fpm.conf \\\n && sed -i '/^listen = /clisten = 9000' /etc/php/7.2/fpm/pool.d/www.conf \\\n && sed -i '/^listen.allowed_clients/c;listen.allowed_clients =' /etc/php/7.2/fpm/pool.d/www.conf \\\n && sed -i '/^;catch_workers_output/ccatch_workers_output = yes' /etc/php/7.2/fpm/pool.d/www.conf \\\n && sed -i '/^;env\\[TEMP\\] = .*/aenv[DB_PORT_3306_TCP_ADDR] = $DB_PORT_3306_TCP_ADDR' /etc/php/7.2/fpm/pool.d/www.conf\n#  ## APPLY NGINX CONFIGURATION\nRUN mkdir -p /tmp/logs\nRUN chmod 777 /tmp/logs\nCOPY ./docker/nginx.conf /etc/nginx/nginx.conf\nCOPY ./docker/fastcgi.conf /etc/nginx/fastcgi.conf\nCOPY ./docker/bash.bashrc /etc/bash.bashrc\n#  ## CREATE USER FOR DEVELOPMENT\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && useradd -u 1000 -G www-data,sudo -d /pece --shell /bin/bash -m pece \\\n && echo \"secret\\nsecret\" | passwd pece\nCOPY ./docker/bash.bashrc /etc/bash.bashrc\nRUN chmod +x /etc/bash.bashrc\nADD ./docker/docker-entrypoint.sh /pece/docker-entrypoint.sh\nRUN chmod +x /pece/docker-entrypoint.sh\nUSER pece\nWORKDIR /pece\nRUN mkdir ~/.drush\n#   RUN drush init -y -bg --fallback=/usr/local/bin/drush\nRUN cd ~/.drush \\\n && git clone -b local_workflow_improvements --single-branch https://github.com/TallerWebSolutions/kraftwagen.git\n#   RUN cd ~/.drush && drush cc drush\nCMD [\"bash\"]\nENTRYPOINT [\"/pece/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"50456e69cc06a5088217ac7de4ff95cf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/114f03a421a109960ba8d68e2e94909ac6d90f3b.dockerfile"}