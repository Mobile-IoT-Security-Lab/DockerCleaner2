{"seed":635426832,"processedDockerfileHash":"69d22091e2f7cee750f723b9c0369fcb","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER Name<admin@opensource.lk>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DOMAIN=\"${DOMAIN}\"\n#   Install basics\n#  RUN apt-get update\nRUN : \\\n && apt-get -y purge exim4*\nRUN apt-get -y upgrade\nRUN (apt-get update ;apt-get install --no-install-recommends apt-utils=1.6.14 -y )\n#   installing netstat command\nRUN (apt-get update ;apt-get install --no-install-recommends net-tools=1.60+git20161116.90da8a0-1ubuntu1 -y )\n#   installing ping command\nRUN (apt-get update ;apt-get install --no-install-recommends iputils-ping=3:20161105-1ubuntu3 -y )\n#   install mail until for testing functions\nRUN (apt-get update ;apt-get install --no-install-recommends mailutils=1:3.4-1 -y )\n#   installing lsof command\nRUN (apt-get update ;apt-get install --no-install-recommends lsof=4.89+dfsg-0.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends telnet=0.17-41 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends nano=2.9.3-2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends letsencrypt=0.27.0-1~ubuntu18.04.2 openssl=1.1.1-1ubuntu2.1~18.04.21 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.24.32.20 -y ) \\\n && add-apt-repository ppa:ondrej/php \\\n && apt-get update\n#  RUN apt-get install -y — force-yes curl\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 -y )\n#   installing ping command\nRUN (apt-get update ;apt-get install --no-install-recommends iputils-ping=3:20161105-1ubuntu3 -y )\nRUN :\n#   Install PHP 5.6\n#  RUN apt-get install -y — allow-unauthenticated php5.6 php5.6-mysql php5.6-mcrypt php5.6-cli php5.6-gd php5.6-curl\n#  RUN apt-get install -y php5.6 php5.6-mysql php5.6-mcrypt php5.6-cli php5.6-gd php5.6-curl\n#   Enable apache mods.\n#   Install php 7.3\n#   https://thishosting.rocks/install-php-on-ubuntu/\n#  RUN apt-get install -y php\nRUN (apt-get update ;apt-get install --no-install-recommends php7.3 -y )\n#   php version should be save as the php version number\n#  RUN apt-get install -y php7.3-mbstring php7.3-ldap php7.3-zip php7.3-xml\nRUN (apt-get update ;apt-get install --no-install-recommends php-pear=1:1.10.5+submodules+notgz-1ubuntu1.18.04.4 php7.3-curl php7.3-ldap php7.3-dev php7.3-gd php7.3-mbstring php7.3-zip php7.3-mysql php7.3-xml -y )\n#  RUN a2enmod php5.6\nRUN a2enmod rewrite\n#   Update the PHP.ini file, enable <? ?> tags and quieten logging.\n#  RUN sed -i \"s/short_open_tag = Off/short_open_tag = On/\" /etc/php/5.6/apache2/php.ini\n#  RUN sed -i \"s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/\" /etc/php/5.6/apache2/php.ini\n#   Manually set up the apache environment variables\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\nENV APACHE_LOCK_DIR=\"/var/lock/apache2\"\nENV APACHE_PID_FILE=\"/var/run/apache2.pid\"\n#   Manually set up the apache environment variables\nENV APACHE_RUN_USER=\"www-data\"\nENV APACHE_RUN_GROUP=\"www-data\"\n#   Expose to letsencript key generation ACME test\n#  EXPOSE 80 \n#   Expose for non secured access (without https) for testing perposes\n#  EXPOSE 89\n#   primary https port\nEXPOSE 443/tcp\n#   secondary https port\nEXPOSE 433/tcp\n#  EXPOSE 3306\n#   Update the default apache site with the config we created.\n#  ADD ./config/apache-config.conf /etc/apache2/sites-enabled/000-default.conf\nCOPY ./config/hosts /etc/hosts\n#   Copy site into place.\nCOPY ./app/ /var/www/html/site/\n#  RUN  copy cert files\n#  ADD ./tls/cert.pem /etc/ssl/certs/copper.opensource.lk.cert.pem\nCOPY ./tls/cert.pem /etc/ssl/certs/cert.pem\n#  ADD ./tls/privkey.pem /etc/ssl/private/copper.opensource.lk.privkey.pem\nCOPY ./tls/privkey.pem /etc/ssl/private/privkey.pem\n#  ADD ssl certificate list als\nCOPY ./tls/copper.opensource.lk.crt /etc/ssl/certs/copper.opensource.lk.crt\nCOPY ./tls/copper.opensource.lk.key /etc/ssl/private/copper.opensource.lk.key\n#  RUN chmod -R 777 /var/www/html/site/app\nRUN chown -R www-data:www-data /var/www/html/site/\n#   Update the default apache site with the config we created.\n#  ADD ./config/apache-config.conf /etc/apache2/sites-enabled/example.com.conf\nRUN (apt-get update ;apt-get install --no-install-recommends nano=2.9.3-2 -y )\n#   Lets encript \n#   First, add the repository:\nRUN add-apt-repository -y ppa:certbot/certbot 2> /dev/null || true\n#  Install Certbot's Apache package with apt:\nRUN (apt-get update ;apt-get install --no-install-recommends python-certbot-apache=0.23.0-1 -y )\n#   reload the configuration\n#  RUN systemctl reload apache2\n#   manual lets encript key generation tool\n#  certbot --apache -d example.com -d www.example.com\n#  CMD certbot --apache -d copper.opensource.lk -d copper.opensource.lk\n#   with certbot-auto\n#  https://www.exratione.com/2016/06/a-simple-setup-and-installation-script-for-lets-encrypt-ssl-certificates/\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.19.4-1ubuntu2.2 -y )\nRUN wget https://dl.eff.org/certbot-auto\nRUN chmod a+x certbot-auto\nRUN mv certbot-auto /usr/local/bin\nRUN certbot-auto --noninteractive --os-packages-only 2> /dev/null || true\n#   Use this command if a webserver is already running with the webroot\n#   at /var/www/html.\n#  RUN certbot-auto certonly \\\nRUN certbot-auto --non-interactive --agree-tos --text --rsa-key-size 4096 --email admin@copper.opensource.lk --domains copper.opensource.lk --webroot-path /var/www/html/site/ --apache 2> /dev/null || true\n#  --help plugins \\\n#  RUN cp /etc/letsencrypt/live/copper.opensource.lk/fullchain.pem /etc/ssl/certs/copper.opensource.lk.fullchain.pem\n#  RUN cp /etc/letsencrypt/live/copper.opensource.lk/privkey.pem /etc/ssl/private/copper.opensource.lk.privkey.pem\n#  RUN cp ./tls/cert.pem /etc/ssl/certs/copper.opensource.lk.cert.pem\n#  RUN cp ./tls/privkey.pem /etc/ssl/private/copper.opensource.lk.privkey.pem\n#   this for copper live server\nCOPY ./config/copper.http.conf /etc/apache2/sites-enabled/copper.http.conf\nCOPY ./config/copper.https.conf /etc/apache2/sites-enabled/copper.https.conf\n#   coppies port configuration\nCOPY ./config/ports.conf /etc/apache2/ports.conf\n#   adding ports.conf file to the image\nCOPY ./config/ports.conf /etc/apache2/\nRUN certbot renew --dry-run\n#   By default start up apache in the foreground, override with /bin/bash for interative.\n#  CMD chmod -R 777 /var/www/html/data/\n#   Attempting to copy to host file to container or change the content\n#   adding host file\nCOPY ./config/hosts /etc/hosts\n#   put new entry to the host file\nRUN echo \"127.0.0.1 copper.opensource.lk copper\" >> /etc/hosts\n#  RUN sed -i \"s/127.0.0.1 = .*$/127.0.0.1 = copper.opensource.lk/\" /etc/hosts\n#   enable https in apache\nRUN a2enmod ssl\nCOPY ./config/init_sys.sh /bin/\nRUN chmod +x /bin/init_sys.sh\n#   changing apache start to entrypoint to let kubernetes to start the system\nENTRYPOINT [\"init_sys.sh\"]\n#  CMD /usr/sbin/apache2ctl -D FOREGROUND\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER Name<admin@opensource.lk>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DOMAIN=\"${DOMAIN}\"\n#  Install basics\n# RUN apt-get update\nRUN apt-get update --fix-missing \\\n && apt-get -y purge exim4*\nRUN apt-get -y upgrade\nRUN apt-get install apt-utils -y\n#  installing netstat command\nRUN apt-get install net-tools -y\n#  installing ping command\nRUN apt-get install iputils-ping -y\n#  install mail until for testing functions\nRUN apt-get install mailutils -y\n#  installing lsof command\nRUN apt-get install lsof -y\nRUN apt-get install telnet -y\nRUN apt-get install nano -y\nRUN apt-get install letsencrypt openssl -y\nRUN apt-get install software-properties-common -y \\\n && add-apt-repository ppa:ondrej/php \\\n && apt-get update\n# RUN apt-get install -y — force-yes curl\nRUN apt-get install curl -y\n#  installing ping command\nRUN apt-get install iputils-ping -y\nRUN apt-get update\n#  Install PHP 5.6\n# RUN apt-get install -y — allow-unauthenticated php5.6 php5.6-mysql php5.6-mcrypt php5.6-cli php5.6-gd php5.6-curl\n# RUN apt-get install -y php5.6 php5.6-mysql php5.6-mcrypt php5.6-cli php5.6-gd php5.6-curl\n#  Enable apache mods.\n#  Install php 7.3\n#  https://thishosting.rocks/install-php-on-ubuntu/\n# RUN apt-get install -y php\nRUN apt-get install php7.3 -y\n#  php version should be save as the php version number\n# RUN apt-get install -y php7.3-mbstring php7.3-ldap php7.3-zip php7.3-xml\nRUN apt-get install php-pear php7.3-curl php7.3-ldap php7.3-dev php7.3-gd php7.3-mbstring php7.3-zip php7.3-mysql php7.3-xml -y\n# RUN a2enmod php5.6\nRUN a2enmod rewrite\n#  Update the PHP.ini file, enable <? ?> tags and quieten logging.\n# RUN sed -i \"s/short_open_tag = Off/short_open_tag = On/\" /etc/php/5.6/apache2/php.ini\n# RUN sed -i \"s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/\" /etc/php/5.6/apache2/php.ini\n#  Manually set up the apache environment variables\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\nENV APACHE_LOCK_DIR=\"/var/lock/apache2\"\nENV APACHE_PID_FILE=\"/var/run/apache2.pid\"\n#  Manually set up the apache environment variables\nENV APACHE_RUN_USER=\"www-data\"\nENV APACHE_RUN_GROUP=\"www-data\"\n#  Expose to letsencript key generation ACME test\n# EXPOSE 80 \n#  Expose for non secured access (without https) for testing perposes\n# EXPOSE 89\n#  primary https port\nEXPOSE 443/tcp\n#  secondary https port\nEXPOSE 433/tcp\n# EXPOSE 3306\n#  Update the default apache site with the config we created.\n# ADD ./config/apache-config.conf /etc/apache2/sites-enabled/000-default.conf\nADD ./config/hosts /etc/hosts\n#  Copy site into place.\nADD ./app/ /var/www/html/site/\n# RUN  copy cert files\n# ADD ./tls/cert.pem /etc/ssl/certs/copper.opensource.lk.cert.pem\nADD ./tls/cert.pem /etc/ssl/certs/cert.pem\n# ADD ./tls/privkey.pem /etc/ssl/private/copper.opensource.lk.privkey.pem\nADD ./tls/privkey.pem /etc/ssl/private/privkey.pem\n# ADD ssl certificate list als\nADD ./tls/copper.opensource.lk.crt /etc/ssl/certs/copper.opensource.lk.crt\nADD ./tls/copper.opensource.lk.key /etc/ssl/private/copper.opensource.lk.key\n# RUN chmod -R 777 /var/www/html/site/app\nRUN chown -R www-data:www-data /var/www/html/site/\n#  Update the default apache site with the config we created.\n# ADD ./config/apache-config.conf /etc/apache2/sites-enabled/example.com.conf\nRUN apt-get install nano -y\n#  Lets encript \n#  First, add the repository:\nRUN add-apt-repository -y ppa:certbot/certbot 2> /dev/null || true\n# Install Certbot's Apache package with apt:\nRUN apt-get install -y python-certbot-apache\n#  reload the configuration\n# RUN systemctl reload apache2\n#  manual lets encript key generation tool\n# certbot --apache -d example.com -d www.example.com\n# CMD certbot --apache -d copper.opensource.lk -d copper.opensource.lk\n#  with certbot-auto\n# https://www.exratione.com/2016/06/a-simple-setup-and-installation-script-for-lets-encrypt-ssl-certificates/\nRUN apt-get install wget -y\nRUN wget https://dl.eff.org/certbot-auto\nRUN chmod a+x certbot-auto\nRUN mv certbot-auto /usr/local/bin\nRUN certbot-auto --noninteractive --os-packages-only 2> /dev/null || true\n#  Use this command if a webserver is already running with the webroot\n#  at /var/www/html.\n# RUN certbot-auto certonly \\\nRUN certbot-auto --non-interactive --agree-tos --text --rsa-key-size 4096 --email admin@copper.opensource.lk --domains copper.opensource.lk --webroot-path /var/www/html/site/ --apache 2> /dev/null || true\n# --help plugins \\\n# RUN cp /etc/letsencrypt/live/copper.opensource.lk/fullchain.pem /etc/ssl/certs/copper.opensource.lk.fullchain.pem\n# RUN cp /etc/letsencrypt/live/copper.opensource.lk/privkey.pem /etc/ssl/private/copper.opensource.lk.privkey.pem\n# RUN cp ./tls/cert.pem /etc/ssl/certs/copper.opensource.lk.cert.pem\n# RUN cp ./tls/privkey.pem /etc/ssl/private/copper.opensource.lk.privkey.pem\n#  this for copper live server\nADD ./config/copper.http.conf /etc/apache2/sites-enabled/copper.http.conf\nADD ./config/copper.https.conf /etc/apache2/sites-enabled/copper.https.conf\n#  coppies port configuration\nADD ./config/ports.conf /etc/apache2/ports.conf\n#  adding ports.conf file to the image\nADD ./config/ports.conf /etc/apache2/\nRUN certbot renew --dry-run\n#  By default start up apache in the foreground, override with /bin/bash for interative.\n# CMD chmod -R 777 /var/www/html/data/\n#  Attempting to copy to host file to container or change the content\n#  adding host file\nADD ./config/hosts /etc/hosts\n#  put new entry to the host file\nRUN echo \"127.0.0.1 copper.opensource.lk copper\" >> /etc/hosts\n# RUN sed -i \"s/127.0.0.1 = .*$/127.0.0.1 = copper.opensource.lk/\" /etc/hosts\n#  enable https in apache\nRUN a2enmod ssl\nCOPY ./config/init_sys.sh /bin/\nRUN chmod +x /bin/init_sys.sh\n#  changing apache start to entrypoint to let kubernetes to start the system\nENTRYPOINT [\"init_sys.sh\"]\n# CMD /usr/sbin/apache2ctl -D FOREGROUND\n","injectedSmells":[],"originalDockerfileHash":"c1125c9cdb24678bc4f4115525dfd810","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER Name<admin@opensource.lk>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DOMAIN=\"${DOMAIN}\"\n#   Install basics\n#  RUN apt-get update\nRUN apt-get update --fix-missing \\\n && apt-get -y purge exim4*\nRUN apt-get -y upgrade\nRUN apt-get install apt-utils -y\n#   installing netstat command\nRUN apt-get install net-tools -y\n#   installing ping command\nRUN apt-get install iputils-ping -y\n#   install mail until for testing functions\nRUN apt-get install mailutils -y\n#   installing lsof command\nRUN apt-get install lsof -y\nRUN apt-get install telnet -y\nRUN apt-get install nano -y\nRUN apt-get install letsencrypt openssl -y\nRUN apt-get install software-properties-common -y \\\n && add-apt-repository ppa:ondrej/php \\\n && apt-get update\n#  RUN apt-get install -y — force-yes curl\nRUN apt-get install curl -y\n#   installing ping command\nRUN apt-get install iputils-ping -y\nRUN apt-get update\n#   Install PHP 5.6\n#  RUN apt-get install -y — allow-unauthenticated php5.6 php5.6-mysql php5.6-mcrypt php5.6-cli php5.6-gd php5.6-curl\n#  RUN apt-get install -y php5.6 php5.6-mysql php5.6-mcrypt php5.6-cli php5.6-gd php5.6-curl\n#   Enable apache mods.\n#   Install php 7.3\n#   https://thishosting.rocks/install-php-on-ubuntu/\n#  RUN apt-get install -y php\nRUN apt-get install php7.3 -y\n#   php version should be save as the php version number\n#  RUN apt-get install -y php7.3-mbstring php7.3-ldap php7.3-zip php7.3-xml\nRUN apt-get install php-pear php7.3-curl php7.3-ldap php7.3-dev php7.3-gd php7.3-mbstring php7.3-zip php7.3-mysql php7.3-xml -y\n#  RUN a2enmod php5.6\nRUN a2enmod rewrite\n#   Update the PHP.ini file, enable <? ?> tags and quieten logging.\n#  RUN sed -i \"s/short_open_tag = Off/short_open_tag = On/\" /etc/php/5.6/apache2/php.ini\n#  RUN sed -i \"s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/\" /etc/php/5.6/apache2/php.ini\n#   Manually set up the apache environment variables\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\nENV APACHE_LOCK_DIR=\"/var/lock/apache2\"\nENV APACHE_PID_FILE=\"/var/run/apache2.pid\"\n#   Manually set up the apache environment variables\nENV APACHE_RUN_USER=\"www-data\"\nENV APACHE_RUN_GROUP=\"www-data\"\n#   Expose to letsencript key generation ACME test\n#  EXPOSE 80 \n#   Expose for non secured access (without https) for testing perposes\n#  EXPOSE 89\n#   primary https port\nEXPOSE 443/tcp\n#   secondary https port\nEXPOSE 433/tcp\n#  EXPOSE 3306\n#   Update the default apache site with the config we created.\n#  ADD ./config/apache-config.conf /etc/apache2/sites-enabled/000-default.conf\nADD ./config/hosts /etc/hosts\n#   Copy site into place.\nADD ./app/ /var/www/html/site/\n#  RUN  copy cert files\n#  ADD ./tls/cert.pem /etc/ssl/certs/copper.opensource.lk.cert.pem\nADD ./tls/cert.pem /etc/ssl/certs/cert.pem\n#  ADD ./tls/privkey.pem /etc/ssl/private/copper.opensource.lk.privkey.pem\nADD ./tls/privkey.pem /etc/ssl/private/privkey.pem\n#  ADD ssl certificate list als\nADD ./tls/copper.opensource.lk.crt /etc/ssl/certs/copper.opensource.lk.crt\nADD ./tls/copper.opensource.lk.key /etc/ssl/private/copper.opensource.lk.key\n#  RUN chmod -R 777 /var/www/html/site/app\nRUN chown -R www-data:www-data /var/www/html/site/\n#   Update the default apache site with the config we created.\n#  ADD ./config/apache-config.conf /etc/apache2/sites-enabled/example.com.conf\nRUN apt-get install nano -y\n#   Lets encript \n#   First, add the repository:\nRUN add-apt-repository -y ppa:certbot/certbot 2> /dev/null || true\n#  Install Certbot's Apache package with apt:\nRUN apt-get install python-certbot-apache -y\n#   reload the configuration\n#  RUN systemctl reload apache2\n#   manual lets encript key generation tool\n#  certbot --apache -d example.com -d www.example.com\n#  CMD certbot --apache -d copper.opensource.lk -d copper.opensource.lk\n#   with certbot-auto\n#  https://www.exratione.com/2016/06/a-simple-setup-and-installation-script-for-lets-encrypt-ssl-certificates/\nRUN apt-get install wget -y\nRUN wget https://dl.eff.org/certbot-auto\nRUN chmod a+x certbot-auto\nRUN mv certbot-auto /usr/local/bin\nRUN certbot-auto --noninteractive --os-packages-only 2> /dev/null || true\n#   Use this command if a webserver is already running with the webroot\n#   at /var/www/html.\n#  RUN certbot-auto certonly \\\nRUN certbot-auto --non-interactive --agree-tos --text --rsa-key-size 4096 --email admin@copper.opensource.lk --domains copper.opensource.lk --webroot-path /var/www/html/site/ --apache 2> /dev/null || true\n#  --help plugins \\\n#  RUN cp /etc/letsencrypt/live/copper.opensource.lk/fullchain.pem /etc/ssl/certs/copper.opensource.lk.fullchain.pem\n#  RUN cp /etc/letsencrypt/live/copper.opensource.lk/privkey.pem /etc/ssl/private/copper.opensource.lk.privkey.pem\n#  RUN cp ./tls/cert.pem /etc/ssl/certs/copper.opensource.lk.cert.pem\n#  RUN cp ./tls/privkey.pem /etc/ssl/private/copper.opensource.lk.privkey.pem\n#   this for copper live server\nADD ./config/copper.http.conf /etc/apache2/sites-enabled/copper.http.conf\nADD ./config/copper.https.conf /etc/apache2/sites-enabled/copper.https.conf\n#   coppies port configuration\nADD ./config/ports.conf /etc/apache2/ports.conf\n#   adding ports.conf file to the image\nADD ./config/ports.conf /etc/apache2/\nRUN certbot renew --dry-run\n#   By default start up apache in the foreground, override with /bin/bash for interative.\n#  CMD chmod -R 777 /var/www/html/data/\n#   Attempting to copy to host file to container or change the content\n#   adding host file\nADD ./config/hosts /etc/hosts\n#   put new entry to the host file\nRUN echo \"127.0.0.1 copper.opensource.lk copper\" >> /etc/hosts\n#  RUN sed -i \"s/127.0.0.1 = .*$/127.0.0.1 = copper.opensource.lk/\" /etc/hosts\n#   enable https in apache\nRUN a2enmod ssl\nCOPY ./config/init_sys.sh /bin/\nRUN chmod +x /bin/init_sys.sh\n#   changing apache start to entrypoint to let kubernetes to start the system\nENTRYPOINT [\"init_sys.sh\"]\n#  CMD /usr/sbin/apache2ctl -D FOREGROUND\n","originalDockerfileUglifiedHash":"98943f219539c10eeade4ada364d295c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2ea71b4dbe05fd06628963353f74e7efc88b65a6.dockerfile"}