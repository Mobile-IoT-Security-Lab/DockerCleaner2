{"seed":2785356876,"processedDockerfileHash":"ecf292aafa05f60b64f6b9b1de8c6e71","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:latest\nMAINTAINER https://github.com/underworldcode/\n#   install things\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends bash-completion build-essential git python-minimal python-dev python-pip libxml2-dev xorg-dev ssh curl libfreetype6-dev libpng-dev libxft-dev xvfb freeglut3 freeglut3-dev libgl1-mesa-dri libgl1-mesa-glx python-tk rsync vim less xauth swig gdb-minimal python2.7-dbg wget gfortran \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nARG MPICH_VERSION=\"3.1.4\"\nARG MPICH_CONFIGURE_OPTIONS=\"--enable-fast=all,O3 --prefix=/usr\"\nARG MPICH_MAKE_OPTIONS=\"-j4\"\nWORKDIR /tmp/mpich-build\nRUN wget http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz \\\n && tar xvzf mpich-${MPICH_VERSION}.tar.gz \\\n && cd mpich-${MPICH_VERSION} \\\n && ./configure ${MPICH_CONFIGURE_OPTIONS} \\\n && make ${MPICH_MAKE_OPTIONS} \\\n && make install \\\n && ldconfig \\\n && cd /tmp \\\n && rm -fr *\n#   Install setuptools and wheel first, needed by plotly\nRUN pip install setuptools==67.6.1 wheel==0.40.0 --no-cache-dir \\\n && pip install packaging==23.1 appdirs==1.4.4 numpy==1.24.2 jupyter==1.0.0 plotly==5.14.1 matplotlib==3.7.1 runipy==0.1.5 pillow==9.5.0 pyvirtualdisplay==3.0 ipython==4.2.0 ipyparallel==8.6.1 pint==0.20.1 sphinx==6.1.3 sphinx_rtd_theme==1.2.0 sphinxcontrib-napoleon==0.7 mock==5.0.1 scipy==1.10.1 tabulate==0.9.0 --no-cache-dir\n#   ^^^ Note we choose an older version of ipython because its tooltips work better.\n#       Also, the system six is too old, so we upgrade for the pip version\nWORKDIR /tmp/petsc-build\nRUN wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-3.9.3.tar.gz\nRUN tar zxf petsc-lite-3.9.3.tar.gz \\\n && cd petsc-3.9.3 \\\n && ./configure --with-debugging=0 --prefix=/usr --COPTFLAGS=\"-g -O3\" --CXXOPTFLAGS=\"-g -O3\" --FOPTFLAGS=\"-g -O3\" --download-petsc4py=1 --download-mpi4py=1 --download-mumps=1 --download-parmetis=1 --download-metis=1 --download-superlu=1 --download-hypre=1 --download-cmake=1 --download-scalapack=1 --download-superlu_dist=1 --download-superlu=1 --download-fblaslapack=1 --download-hdf5=1 \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install \\\n && cd /tmp \\\n && rm -fr *\nENV PYTHONPATH=\"$PYTHONPATH:/usr/lib\"\nRUN CC=mpicc HDF5_MPI=\"ON\" pip install --no-cache-dir --no-binary=h5py h5py\n#   Install Tini.. this is required because CMD (below) doesn't play nice with notebooks for some reason: https://github.com/ipython/ipython/issues/7062, https://github.com/jupyter/notebook/issues/334\nRUN curl -L https://github.com/krallin/tini/releases/download/v0.10.0/tini > tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   environment variable will internally run xvfb when glucifer is imported,\n#  see /opt/underworld2/glucifer/__init__.py\nENV GLUCIFER_USE_XVFB=\"1\"\n#   Add a notebook profile.\nRUN mkdir -p -m 700 /root/.jupyter/ \\\n && echo \"c.NotebookApp.ip = '*'\" >> /root/.jupyter/jupyter_notebook_config.py\n#   Setup ipyparallel for mpi profile\nWORKDIR /root/.jupyter\nRUN ipcluster nbextension enable \\\n && ipython profile create --parallel --profile=mpi \\\n && echo \"c.IPClusterEngines.engine_launcher_class = 'MPIEngineSetLauncher'\" >> /root/.ipython/profile_mpi/ipcluster_config.py\nWORKDIR /\n#   expose notebook port\nEXPOSE 8888/tcp\n#   note we also use xvfb which is required for viz\nENTRYPOINT [\"/usr/local/bin/tini\", \"--\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:latest\nMAINTAINER https://github.com/underworldcode/\n#  install things\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends bash-completion build-essential git python-minimal python-dev python-pip libxml2-dev xorg-dev ssh curl libfreetype6-dev libpng-dev libxft-dev xvfb freeglut3 freeglut3-dev libgl1-mesa-dri libgl1-mesa-glx python-tk rsync vim less xauth swig gdb-minimal python2.7-dbg wget gfortran \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nARG MPICH_VERSION=\"3.1.4\"\nARG MPICH_CONFIGURE_OPTIONS=\"--enable-fast=all,O3 --prefix=/usr\"\nARG MPICH_MAKE_OPTIONS=\"-j4\"\nWORKDIR /tmp/mpich-build\nRUN wget http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz \\\n && tar xvzf mpich-${MPICH_VERSION}.tar.gz \\\n && cd mpich-${MPICH_VERSION} \\\n && ./configure ${MPICH_CONFIGURE_OPTIONS} \\\n && make ${MPICH_MAKE_OPTIONS} \\\n && make install \\\n && ldconfig \\\n && cd /tmp \\\n && rm -fr *\n#  Install setuptools and wheel first, needed by plotly\nRUN pip install setuptools wheel --no-cache-dir \\\n && pip install packaging appdirs numpy jupyter plotly matplotlib runipy pillow pyvirtualdisplay ipython==4.2.0 ipyparallel pint sphinx sphinx_rtd_theme sphinxcontrib-napoleon mock scipy tabulate --no-cache-dir\n#  ^^^ Note we choose an older version of ipython because its tooltips work better.\n#      Also, the system six is too old, so we upgrade for the pip version\nWORKDIR /tmp/petsc-build\nRUN wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-3.9.3.tar.gz\nRUN tar zxf petsc-lite-3.9.3.tar.gz \\\n && cd petsc-3.9.3 \\\n && ./configure --with-debugging=0 --prefix=/usr --COPTFLAGS=\"-g -O3\" --CXXOPTFLAGS=\"-g -O3\" --FOPTFLAGS=\"-g -O3\" --download-petsc4py=1 --download-mpi4py=1 --download-mumps=1 --download-parmetis=1 --download-metis=1 --download-superlu=1 --download-hypre=1 --download-cmake=1 --download-scalapack=1 --download-superlu_dist=1 --download-superlu=1 --download-fblaslapack=1 --download-hdf5=1 \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install \\\n && cd /tmp \\\n && rm -fr *\nENV PYTHONPATH=\"$PYTHONPATH:/usr/lib\"\nRUN CC=mpicc HDF5_MPI=\"ON\" pip install --no-cache-dir --no-binary=h5py h5py\n#  Install Tini.. this is required because CMD (below) doesn't play nice with notebooks for some reason: https://github.com/ipython/ipython/issues/7062, https://github.com/jupyter/notebook/issues/334\nRUN curl -L https://github.com/krallin/tini/releases/download/v0.10.0/tini > tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#  environment variable will internally run xvfb when glucifer is imported,\n# see /opt/underworld2/glucifer/__init__.py\nENV GLUCIFER_USE_XVFB=\"1\"\n#  Add a notebook profile.\nRUN mkdir -p -m 700 /root/.jupyter/ \\\n && echo \"c.NotebookApp.ip = '*'\" >> /root/.jupyter/jupyter_notebook_config.py\n#  Setup ipyparallel for mpi profile\nWORKDIR /root/.jupyter\nRUN ipcluster nbextension enable \\\n && ipython profile create --parallel --profile=mpi \\\n && echo \"c.IPClusterEngines.engine_launcher_class = 'MPIEngineSetLauncher'\" >> /root/.ipython/profile_mpi/ipcluster_config.py\nWORKDIR /\n#  expose notebook port\nEXPOSE 8888/tcp\n#  note we also use xvfb which is required for viz\nENTRYPOINT [\"/usr/local/bin/tini\", \"--\"]\n","injectedSmells":[],"originalDockerfileHash":"01bb788bffc2bcc9b0471b51a6052c4c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:latest\nMAINTAINER https://github.com/underworldcode/\n#   install things\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends bash-completion build-essential git python-minimal python-dev python-pip libxml2-dev xorg-dev ssh curl libfreetype6-dev libpng-dev libxft-dev xvfb freeglut3 freeglut3-dev libgl1-mesa-dri libgl1-mesa-glx python-tk rsync vim less xauth swig gdb-minimal python2.7-dbg wget gfortran \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nARG MPICH_VERSION=\"3.1.4\"\nARG MPICH_CONFIGURE_OPTIONS=\"--enable-fast=all,O3 --prefix=/usr\"\nARG MPICH_MAKE_OPTIONS=\"-j4\"\nWORKDIR /tmp/mpich-build\nRUN wget http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz \\\n && tar xvzf mpich-${MPICH_VERSION}.tar.gz \\\n && cd mpich-${MPICH_VERSION} \\\n && ./configure ${MPICH_CONFIGURE_OPTIONS} \\\n && make ${MPICH_MAKE_OPTIONS} \\\n && make install \\\n && ldconfig \\\n && cd /tmp \\\n && rm -fr *\n#   Install setuptools and wheel first, needed by plotly\nRUN pip install setuptools wheel --no-cache-dir \\\n && pip install packaging appdirs numpy jupyter plotly matplotlib runipy pillow pyvirtualdisplay ipython==4.2.0 ipyparallel pint sphinx sphinx_rtd_theme sphinxcontrib-napoleon mock scipy tabulate --no-cache-dir\n#   ^^^ Note we choose an older version of ipython because its tooltips work better.\n#       Also, the system six is too old, so we upgrade for the pip version\nWORKDIR /tmp/petsc-build\nRUN wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-3.9.3.tar.gz\nRUN tar zxf petsc-lite-3.9.3.tar.gz \\\n && cd petsc-3.9.3 \\\n && ./configure --with-debugging=0 --prefix=/usr --COPTFLAGS=\"-g -O3\" --CXXOPTFLAGS=\"-g -O3\" --FOPTFLAGS=\"-g -O3\" --download-petsc4py=1 --download-mpi4py=1 --download-mumps=1 --download-parmetis=1 --download-metis=1 --download-superlu=1 --download-hypre=1 --download-cmake=1 --download-scalapack=1 --download-superlu_dist=1 --download-superlu=1 --download-fblaslapack=1 --download-hdf5=1 \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install \\\n && cd /tmp \\\n && rm -fr *\nENV PYTHONPATH=\"$PYTHONPATH:/usr/lib\"\nRUN CC=mpicc HDF5_MPI=\"ON\" pip install --no-cache-dir --no-binary=h5py h5py\n#   Install Tini.. this is required because CMD (below) doesn't play nice with notebooks for some reason: https://github.com/ipython/ipython/issues/7062, https://github.com/jupyter/notebook/issues/334\nRUN curl -L https://github.com/krallin/tini/releases/download/v0.10.0/tini > tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   environment variable will internally run xvfb when glucifer is imported,\n#  see /opt/underworld2/glucifer/__init__.py\nENV GLUCIFER_USE_XVFB=\"1\"\n#   Add a notebook profile.\nRUN mkdir -p -m 700 /root/.jupyter/ \\\n && echo \"c.NotebookApp.ip = '*'\" >> /root/.jupyter/jupyter_notebook_config.py\n#   Setup ipyparallel for mpi profile\nWORKDIR /root/.jupyter\nRUN ipcluster nbextension enable \\\n && ipython profile create --parallel --profile=mpi \\\n && echo \"c.IPClusterEngines.engine_launcher_class = 'MPIEngineSetLauncher'\" >> /root/.ipython/profile_mpi/ipcluster_config.py\nWORKDIR /\n#   expose notebook port\nEXPOSE 8888/tcp\n#   note we also use xvfb which is required for viz\nENTRYPOINT [\"/usr/local/bin/tini\", \"--\"]\n","originalDockerfileUglifiedHash":"724c43e3e13e7ac92f9adc549f82dfed","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0a755d8bf2e97dd527ba4aa6163e4ee00fb49244.dockerfile"}