{"seed":3405612953,"processedDockerfileHash":"84bd6956644a608993f06d22e23ac390","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM sparkfabrik/php:5.4.45-apache\nMAINTAINER paolo.mainardi@sparkfabrik.com\nENV REFRESHED_AT=\"2016-04-20\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Enable apache rewrite.\nRUN a2enmod rewrite\n#   System env variables.\nENV XDEBUG_VERSION=\"2.4.0\"\nENV DRUSH_VERSION=\"8.0.5\"\nENV VAR_DUMPER_VERSION=\"2.8.22\"\nENV GOSU_VERSION=\"1.7\"\nENV MAILHOG_VERSION=\"v0.1.9\"\nENV TIMEZONE=\"\\\"Europe/Rome\\\"\"\n#   Install php packages.\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl cron rsyslog supervisor mysql-client libpng12-dev libjpeg-dev libxml2-dev ruby git unzip vim libicu-dev libssl-dev php5-gd php5-intl php5-mysql php5-xdebug php5-memcached -y \\\n && echo \"${TIMEZONE}\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata \\\n && apt-get autoremove -y \\\n && pecl install memcache-3.0.6 \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install composer, drush and other tools.\nENV COMPOSER_HOME=\"/composer-libs\"\nRUN mkdir /composer-libs \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && composer global require symfony/var-dumper:${VAR_DUMPER_VERSION} \\\n && chown -R www-data:www-data /composer-libs \\\n && curl -fSL \"https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar\" -o /usr/bin/drush \\\n && chmod +x /usr/bin/drush \\\n && drush @none dl registry_rebuild-7.x-2.3 \\\n && echo \"PS1='\\[\\033[1;36m\\]\\u\\[\\033[1;31m\\]@\\[\\033[1;32m\\]\\h:\\[\\033[1;35m\\]\\w\\[\\033[1;31m\\]$\\[\\033[0m\\] '\" >> /etc/bash.bashrc \\\n && echo \"export TERM=xterm\" >> /etc/bash.bashrc \\\n && echo \"umask 000\" >> /etc/bash.bashrc \\\n && curl -fSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" -o /usr/bin/gosu\n#   Install mailhog.\nRUN curl -fSL \"https://github.com/mailhog/MailHog/releases/download/${MAILHOG_VERSION}/MailHog_linux_amd64\" -o /usr/local/bin/mailhog \\\n && chmod +x /usr/local/bin/mailhog\n#  # Configure PHP, Apache, Memcache and supervisord.\nCOPY config/docker/php/*.ini /etc/php5/conf.d/\nCOPY config/docker/apache/*.conf /etc/apache2/conf-enabled/\nCOPY config/docker/supervisord/*.conf /etc/supervisor/conf.d/\nRUN echo 'stage:$apr1$g6T0GvU3$6cxYQhCZvI.1aEFYr1uOd/' > /var/www/.htpasswd \\\n && rm -rf /etc/apache2/sites-enabled/*\n#   Upgrade ruby.\nRUN curl -L get.rvm.io | bash -s stable \\\n && /bin/bash -l -c \"rvm install 2.1.0\" \\\n && /bin/bash -l -c \"rvm use 2.1.0 --default\" \\\n && echo \"source /etc/profile.d/rvm.sh\" >> /root/.bashrc \\\n && gem install bundler --version 2.4.12 --no-rdoc\n#   Configure cron.\nCOPY config/docker/cron/crontab /etc/cron.d/cron\nRUN rm -Rf /etc/cron.daily \\\n && rm -Rf /etc/cron.weekly \\\n && rm -Rf /etc/cron.monthly \\\n && rm -Rf /etc/cron.hourly \\\n && chmod a+x /etc/cron.d/cron\n#   Install blackfire agent.\nRUN export VERSION=`php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\" ` \\\n && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/${VERSION} \\\n && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n && mv /tmp/blackfire-*.so `php -r \"echo ini_get('extension_dir');\" `/blackfire.so \\\n && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > /etc/php5/apache2/conf.d/blackfire.ini\n#   Install ngrok.\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip\nRUN unzip /ngrok.zip -d /bin \\\n && rm -f ngrok.zip \\\n && touch /.ngrok\n#   Expose apache.\nEXPOSE 80/tcp\n#   Execute daemons.\nCMD exec supervisord -n\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM sparkfabrik/php:5.4.45-apache\nMAINTAINER paolo.mainardi@sparkfabrik.com\nENV REFRESHED_AT=\"2016-04-20\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Enable apache rewrite.\nRUN a2enmod rewrite\n#  System env variables.\nENV XDEBUG_VERSION=\"2.4.0\"\nENV DRUSH_VERSION=\"8.0.5\"\nENV VAR_DUMPER_VERSION=\"2.8.22\"\nENV GOSU_VERSION=\"1.7\"\nENV MAILHOG_VERSION=\"v0.1.9\"\nENV TIMEZONE=\"\\\"Europe/Rome\\\"\"\n#  Install php packages.\nRUN apt-get update \\\n && apt-get install curl cron rsyslog supervisor mysql-client libpng12-dev libjpeg-dev libxml2-dev ruby git unzip vim libicu-dev libssl-dev php5-gd php5-intl php5-mysql php5-xdebug php5-memcached -y \\\n && echo \"${TIMEZONE}\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata \\\n && apt-get autoremove -y \\\n && pecl install memcache-3.0.6 \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Install composer, drush and other tools.\nENV COMPOSER_HOME=\"/composer-libs\"\nRUN mkdir /composer-libs \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && composer global require symfony/var-dumper:${VAR_DUMPER_VERSION} \\\n && chown -R www-data:www-data /composer-libs \\\n && curl -fSL \"https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar\" -o /usr/bin/drush \\\n && chmod +x /usr/bin/drush \\\n && drush @none dl registry_rebuild-7.x-2.3 \\\n && echo \"PS1='\\[\\033[1;36m\\]\\u\\[\\033[1;31m\\]@\\[\\033[1;32m\\]\\h:\\[\\033[1;35m\\]\\w\\[\\033[1;31m\\]$\\[\\033[0m\\] '\" >> /etc/bash.bashrc \\\n && echo \"export TERM=xterm\" >> /etc/bash.bashrc \\\n && echo \"umask 000\" >> /etc/bash.bashrc \\\n && curl -fSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" -o /usr/bin/gosu\n#  Install mailhog.\nRUN curl -fSL \"https://github.com/mailhog/MailHog/releases/download/${MAILHOG_VERSION}/MailHog_linux_amd64\" -o /usr/local/bin/mailhog \\\n && chmod +x /usr/local/bin/mailhog\n# # Configure PHP, Apache, Memcache and supervisord.\nCOPY config/docker/php/*.ini /etc/php5/conf.d/\nCOPY config/docker/apache/*.conf /etc/apache2/conf-enabled/\nCOPY config/docker/supervisord/*.conf /etc/supervisor/conf.d/\nRUN echo 'stage:$apr1$g6T0GvU3$6cxYQhCZvI.1aEFYr1uOd/' > /var/www/.htpasswd \\\n && rm -rf /etc/apache2/sites-enabled/*\n#  Upgrade ruby.\nRUN curl -L get.rvm.io | bash -s stable \\\n && /bin/bash -l -c \"rvm install 2.1.0\" \\\n && /bin/bash -l -c \"rvm use 2.1.0 --default\" \\\n && echo \"source /etc/profile.d/rvm.sh\" >> /root/.bashrc \\\n && gem install bundler --no-rdoc\n#  Configure cron.\nCOPY config/docker/cron/crontab /etc/cron.d/cron\nRUN rm -Rf /etc/cron.daily \\\n && rm -Rf /etc/cron.weekly \\\n && rm -Rf /etc/cron.monthly \\\n && rm -Rf /etc/cron.hourly \\\n && chmod a+x /etc/cron.d/cron\n#  Install blackfire agent.\nRUN export VERSION=`php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\" ` \\\n && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/${VERSION} \\\n && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n && mv /tmp/blackfire-*.so `php -r \"echo ini_get('extension_dir');\" `/blackfire.so \\\n && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > /etc/php5/apache2/conf.d/blackfire.ini\n#  Install ngrok.\nADD https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip /ngrok.zip\nRUN unzip /ngrok.zip -d /bin \\\n && rm -f ngrok.zip \\\n && touch /.ngrok\n#  Expose apache.\nEXPOSE 80/tcp\n#  Execute daemons.\nCMD exec supervisord -n\n","injectedSmells":[],"originalDockerfileHash":"ff392cbb26e8a296c4826235cafd8799","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM sparkfabrik/php:5.4.45-apache\nMAINTAINER paolo.mainardi@sparkfabrik.com\nENV REFRESHED_AT=\"2016-04-20\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Enable apache rewrite.\nRUN a2enmod rewrite\n#   System env variables.\nENV XDEBUG_VERSION=\"2.4.0\"\nENV DRUSH_VERSION=\"8.0.5\"\nENV VAR_DUMPER_VERSION=\"2.8.22\"\nENV GOSU_VERSION=\"1.7\"\nENV MAILHOG_VERSION=\"v0.1.9\"\nENV TIMEZONE=\"\\\"Europe/Rome\\\"\"\n#   Install php packages.\nRUN apt-get update \\\n && apt-get install curl cron rsyslog supervisor mysql-client libpng12-dev libjpeg-dev libxml2-dev ruby git unzip vim libicu-dev libssl-dev php5-gd php5-intl php5-mysql php5-xdebug php5-memcached -y \\\n && echo \"${TIMEZONE}\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata \\\n && apt-get autoremove -y \\\n && pecl install memcache-3.0.6 \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install composer, drush and other tools.\nENV COMPOSER_HOME=\"/composer-libs\"\nRUN mkdir /composer-libs \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && composer global require symfony/var-dumper:${VAR_DUMPER_VERSION} \\\n && chown -R www-data:www-data /composer-libs \\\n && curl -fSL \"https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar\" -o /usr/bin/drush \\\n && chmod +x /usr/bin/drush \\\n && drush @none dl registry_rebuild-7.x-2.3 \\\n && echo \"PS1='\\[\\033[1;36m\\]\\u\\[\\033[1;31m\\]@\\[\\033[1;32m\\]\\h:\\[\\033[1;35m\\]\\w\\[\\033[1;31m\\]$\\[\\033[0m\\] '\" >> /etc/bash.bashrc \\\n && echo \"export TERM=xterm\" >> /etc/bash.bashrc \\\n && echo \"umask 000\" >> /etc/bash.bashrc \\\n && curl -fSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" -o /usr/bin/gosu\n#   Install mailhog.\nRUN curl -fSL \"https://github.com/mailhog/MailHog/releases/download/${MAILHOG_VERSION}/MailHog_linux_amd64\" -o /usr/local/bin/mailhog \\\n && chmod +x /usr/local/bin/mailhog\n#  # Configure PHP, Apache, Memcache and supervisord.\nCOPY config/docker/php/*.ini /etc/php5/conf.d/\nCOPY config/docker/apache/*.conf /etc/apache2/conf-enabled/\nCOPY config/docker/supervisord/*.conf /etc/supervisor/conf.d/\nRUN echo 'stage:$apr1$g6T0GvU3$6cxYQhCZvI.1aEFYr1uOd/' > /var/www/.htpasswd \\\n && rm -rf /etc/apache2/sites-enabled/*\n#   Upgrade ruby.\nRUN curl -L get.rvm.io | bash -s stable \\\n && /bin/bash -l -c \"rvm install 2.1.0\" \\\n && /bin/bash -l -c \"rvm use 2.1.0 --default\" \\\n && echo \"source /etc/profile.d/rvm.sh\" >> /root/.bashrc \\\n && gem install bundler --no-rdoc\n#   Configure cron.\nCOPY config/docker/cron/crontab /etc/cron.d/cron\nRUN rm -Rf /etc/cron.daily \\\n && rm -Rf /etc/cron.weekly \\\n && rm -Rf /etc/cron.monthly \\\n && rm -Rf /etc/cron.hourly \\\n && chmod a+x /etc/cron.d/cron\n#   Install blackfire agent.\nRUN export VERSION=`php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\" ` \\\n && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/${VERSION} \\\n && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n && mv /tmp/blackfire-*.so `php -r \"echo ini_get('extension_dir');\" `/blackfire.so \\\n && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > /etc/php5/apache2/conf.d/blackfire.ini\n#   Install ngrok.\nADD https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip /ngrok.zip\nRUN unzip /ngrok.zip -d /bin \\\n && rm -f ngrok.zip \\\n && touch /.ngrok\n#   Expose apache.\nEXPOSE 80/tcp\n#   Execute daemons.\nCMD exec supervisord -n\n","originalDockerfileUglifiedHash":"3544ba5c0486e33e42550c4d982a4d99","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bf3718ff67c07461ddc70a360022fac40b32494c.dockerfile"}