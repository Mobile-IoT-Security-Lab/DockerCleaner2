{"seed":998791789,"processedDockerfileHash":"b6477c6a9bdd05f25aaedaf9aea79d5f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:buster\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN set -eux ; if [ -f /etc/dpkg/dpkg.cfg.d/docker ] ; then grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker ;sed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker ;! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker ; fi ; apt-get update ; (apt-get update ;apt-get install --no-install-recommends locales=2.28-10+deb10u2 -y ) ; rm -rf /var/lib/apt/lists/* ; localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#   install \"nss_wrapper\" in case we need to fake \"/etc/passwd\" and \"/etc/group\" (especially for OpenShift)\n#   https://github.com/docker-library/postgres/issues/359\n#   https://cwrap.org/nss_wrapper.html\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ca-certificates=20200601~deb10u2 curl=7.64.0-4+deb10u5 locales=2.28-10+deb10u2 dirmngr=2.2.12-1+deb10u2 gnupg=2.2.12-1+deb10u2 gosu=1.10-1+b23 libnss-wrapper=1.1.3-1 -y ) \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && echo \"debconf debconf/frontend select Noninteractive\" | debconf-set-selections\n#   explicitly set user/group IDs\nRUN gosu nobody true \\\n && groupadd -r postgres --gid=999 \\\n && useradd -r -g postgres --uid=999 postgres\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    PG_MAJOR=\"10\" \\\n    PGDATA=\"/var/lib/postgresql/data\"\nRUN key=\"B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; rm -rf \"$GNUPGHOME\" \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; echo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" >> /etc/apt/sources.list.d/pgdg.list; :\nRUN (apt-get update ;apt-get install --no-install-recommends postgresql-common=200+deb10u5 postgresql-10 -y ) \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf\nENV PATH=\"$PATH:/usr/lib/postgresql/$PG_MAJOR/bin\"\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir /docker-entrypoint-initdb.d \\\n && mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod 2777 /var/run/postgresql \\\n && mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\n#   recover docker-entrypoint.sh\nRUN curl \"https://raw.githubusercontent.com/docker-library/postgres/master/$PG_MAJOR/docker-entrypoint.sh\" -o /usr/local/bin/docker-entrypoint.sh \\\n && chmod +x /usr/local/bin/docker-entrypoint.sh \\\n && ln -s usr/local/bin/docker-entrypoint.sh /\n#  ## end postgres 10\nRUN (apt-get update ;apt-get install --no-install-recommends postgresql-server-dev-10 postgresql-plpython-10 postgresql-plpython3-10 python2=2.7.16-1 python-dev=2.7.16-1 python-pip=18.1-5 python-setuptools=40.8.0-1 python-wheel=0.32.3-2 python3=3.7.3-1 python3-dev=3.7.3-1 python3-pip=18.1-5 python3-setuptools=40.8.0-1 python3-wheel=0.32.3-2 -y )\n#   Install Python 2 libraries native to Redshift. Versions available here:\n#   https://docs.aws.amazon.com/redshift/latest/dg/udf-python-language-support.html\n#   NOTE: pandas 0.18.1 instead of 0.14.1 due to lack of wheel for <0.18.1\nRUN /usr/bin/python2.7 -m pip install numpy==1.8.2 pandas==0.18.1 python-dateutil==2.2 pytz==2015.7 scipy==0.12.1 six==1.3.0 psycopg2==2.7.5 enum34==1.1.6\n#   wsgiref==0.1.2 (Installed by default)\nRUN (apt-get update ;apt-get install --no-install-recommends make=4.2.1-1.2 gcc=4:8.3.0-1 -y )\n#   Compile query_group redshift compat extension\nCOPY \"extensions/\" \"/tmp/extensions/\"\nRUN make -C \"/tmp/extensions/\" \\\n && make -C \"/tmp/extensions/\" install\n#   Install query_group extension\nRUN sed \"/shared_preload_libraries/d\" -i /usr/share/postgresql/postgresql.conf.sample \\\n && echo \"shared_preload_libraries = 'query_group'\" >> /usr/share/postgresql/postgresql.conf.sample\n#   Clean up unused packages and temp files\nRUN rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y gcc make python2-dev python3-dev postgresql-server-dev-10 curl gnupg dirmngr \\\n && apt-get autoremove -y --purge \\\n && rm -r /tmp/extensions\nCOPY sql/00_extensions.sql sql/00_stl_tables.sql sql/00_stv_tables.sql sql/01_functions.sql /docker-entrypoint-initdb.d/\nENV POSTGRES_DB=\"dev\"\nVOLUME /var/lib/postgresql/data\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:buster\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN set -eux ; if [ -f /etc/dpkg/dpkg.cfg.d/docker ] ; then grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker ;sed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker ;! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker ; fi ; apt-get update ; apt-get install locales -y ; rm -rf /var/lib/apt/lists/* ; localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#  install \"nss_wrapper\" in case we need to fake \"/etc/passwd\" and \"/etc/group\" (especially for OpenShift)\n#  https://github.com/docker-library/postgres/issues/359\n#  https://cwrap.org/nss_wrapper.html\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl locales dirmngr gnupg gosu libnss-wrapper -y \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && echo \"debconf debconf/frontend select Noninteractive\" | debconf-set-selections\n#  explicitly set user/group IDs\nRUN gosu nobody true \\\n && groupadd -r postgres --gid=999 \\\n && useradd -r -g postgres --uid=999 postgres\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    PG_MAJOR=\"10\" \\\n    PGDATA=\"/var/lib/postgresql/data\"\nRUN key=\"B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; rm -rf \"$GNUPGHOME\" \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; echo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" >> /etc/apt/sources.list.d/pgdg.list; apt-get update\nRUN apt-get install postgresql-common postgresql-10 -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf\nENV PATH=\"$PATH:/usr/lib/postgresql/$PG_MAJOR/bin\"\n#  make the sample config easier to munge (and \"correct by default\")\nRUN mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir /docker-entrypoint-initdb.d \\\n && mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod 2777 /var/run/postgresql \\\n && mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\n#  recover docker-entrypoint.sh\nRUN curl \"https://raw.githubusercontent.com/docker-library/postgres/master/$PG_MAJOR/docker-entrypoint.sh\" -o /usr/local/bin/docker-entrypoint.sh \\\n && chmod +x /usr/local/bin/docker-entrypoint.sh \\\n && ln -s usr/local/bin/docker-entrypoint.sh /\n# ## end postgres 10\nRUN apt-get install --no-install-recommends postgresql-server-dev-10 postgresql-plpython-10 postgresql-plpython3-10 python2 python-dev python-pip python-setuptools python-wheel python3 python3-dev python3-pip python3-setuptools python3-wheel -y\n#  Install Python 2 libraries native to Redshift. Versions available here:\n#  https://docs.aws.amazon.com/redshift/latest/dg/udf-python-language-support.html\n#  NOTE: pandas 0.18.1 instead of 0.14.1 due to lack of wheel for <0.18.1\nRUN /usr/bin/python2.7 -m pip install numpy==1.8.2 pandas==0.18.1 python-dateutil==2.2 pytz==2015.7 scipy==0.12.1 six==1.3.0 psycopg2==2.7.5 enum34==1.1.6\n#  wsgiref==0.1.2 (Installed by default)\nRUN apt-get install --no-install-recommends make gcc -y\n#  Compile query_group redshift compat extension\nCOPY \"extensions/\" \"/tmp/extensions/\"\nRUN make -C \"/tmp/extensions/\" \\\n && make -C \"/tmp/extensions/\" install\n#  Install query_group extension\nRUN sed \"/shared_preload_libraries/d\" -i /usr/share/postgresql/postgresql.conf.sample \\\n && echo \"shared_preload_libraries = 'query_group'\" >> /usr/share/postgresql/postgresql.conf.sample\n#  Clean up unused packages and temp files\nRUN rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y gcc make python2-dev python3-dev postgresql-server-dev-10 curl gnupg dirmngr \\\n && apt-get autoremove -y --purge \\\n && rm -r /tmp/extensions\nCOPY sql/00_extensions.sql sql/00_stl_tables.sql sql/00_stv_tables.sql sql/01_functions.sql /docker-entrypoint-initdb.d/\nENV POSTGRES_DB=\"dev\"\nVOLUME /var/lib/postgresql/data\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\n","injectedSmells":[],"originalDockerfileHash":"c7b5166c9649f61afbb12ba23b885a6d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:buster\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN set -eux ; if [ -f /etc/dpkg/dpkg.cfg.d/docker ] ; then grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker ;sed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker ;! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker ; fi ; apt-get update ; apt-get install locales -y ; rm -rf /var/lib/apt/lists/* ; localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#   install \"nss_wrapper\" in case we need to fake \"/etc/passwd\" and \"/etc/group\" (especially for OpenShift)\n#   https://github.com/docker-library/postgres/issues/359\n#   https://cwrap.org/nss_wrapper.html\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl locales dirmngr gnupg gosu libnss-wrapper -y \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && echo \"debconf debconf/frontend select Noninteractive\" | debconf-set-selections\n#   explicitly set user/group IDs\nRUN gosu nobody true \\\n && groupadd -r postgres --gid=999 \\\n && useradd -r -g postgres --uid=999 postgres\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    PG_MAJOR=\"10\" \\\n    PGDATA=\"/var/lib/postgresql/data\"\nRUN key=\"B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; rm -rf \"$GNUPGHOME\" \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; echo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" >> /etc/apt/sources.list.d/pgdg.list; apt-get update\nRUN apt-get install postgresql-common postgresql-10 -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf\nENV PATH=\"$PATH:/usr/lib/postgresql/$PG_MAJOR/bin\"\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir /docker-entrypoint-initdb.d \\\n && mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod 2777 /var/run/postgresql \\\n && mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\n#   recover docker-entrypoint.sh\nRUN curl \"https://raw.githubusercontent.com/docker-library/postgres/master/$PG_MAJOR/docker-entrypoint.sh\" -o /usr/local/bin/docker-entrypoint.sh \\\n && chmod +x /usr/local/bin/docker-entrypoint.sh \\\n && ln -s usr/local/bin/docker-entrypoint.sh /\n#  ## end postgres 10\nRUN apt-get install --no-install-recommends postgresql-server-dev-10 postgresql-plpython-10 postgresql-plpython3-10 python2 python-dev python-pip python-setuptools python-wheel python3 python3-dev python3-pip python3-setuptools python3-wheel -y\n#   Install Python 2 libraries native to Redshift. Versions available here:\n#   https://docs.aws.amazon.com/redshift/latest/dg/udf-python-language-support.html\n#   NOTE: pandas 0.18.1 instead of 0.14.1 due to lack of wheel for <0.18.1\nRUN /usr/bin/python2.7 -m pip install numpy==1.8.2 pandas==0.18.1 python-dateutil==2.2 pytz==2015.7 scipy==0.12.1 six==1.3.0 psycopg2==2.7.5 enum34==1.1.6\n#   wsgiref==0.1.2 (Installed by default)\nRUN apt-get install --no-install-recommends make gcc -y\n#   Compile query_group redshift compat extension\nCOPY \"extensions/\" \"/tmp/extensions/\"\nRUN make -C \"/tmp/extensions/\" \\\n && make -C \"/tmp/extensions/\" install\n#   Install query_group extension\nRUN sed \"/shared_preload_libraries/d\" -i /usr/share/postgresql/postgresql.conf.sample \\\n && echo \"shared_preload_libraries = 'query_group'\" >> /usr/share/postgresql/postgresql.conf.sample\n#   Clean up unused packages and temp files\nRUN rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y gcc make python2-dev python3-dev postgresql-server-dev-10 curl gnupg dirmngr \\\n && apt-get autoremove -y --purge \\\n && rm -r /tmp/extensions\nCOPY sql/00_extensions.sql sql/00_stl_tables.sql sql/00_stv_tables.sql sql/01_functions.sql /docker-entrypoint-initdb.d/\nENV POSTGRES_DB=\"dev\"\nVOLUME /var/lib/postgresql/data\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\n","originalDockerfileUglifiedHash":"5b501cd538b5c92934accbaa1c7949f7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0815fb86bc961641e7ed685b12b57260fe684db2.dockerfile"}