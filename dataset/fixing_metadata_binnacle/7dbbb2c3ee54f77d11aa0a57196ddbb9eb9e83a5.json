{"seed":1206239808,"processedDockerfileHash":"13ae72609e0fe32179e0c0ace811e1d0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM openjdk:8-alpine\n#   Setup useful environment variables\nENV BAMBOO_HOME=\"/var/atlassian/application-data/bamboo\"\nENV BAMBOO_INSTALL=\"/opt/atlassian/bamboo\"\nENV BAMBOO_VERSION=\"6.3.3\"\n#   Install Atlassian Bamboo and helper tools and setup initial home\n#   directory structure.\nRUN set -x \\\n && apk add curl xmlstarlet git openssh bash --no-cache \\\n && mkdir -p \"${BAMBOO_HOME}/lib\" \\\n && chmod -R 700 \"${BAMBOO_HOME}\" \\\n && chown -R daemon:daemon \"${BAMBOO_HOME}\" \\\n && mkdir -p \"${BAMBOO_INSTALL}\" \\\n && curl -Ls \"https://www.atlassian.com/software/bamboo/downloads/binary/atlassian-bamboo-${BAMBOO_VERSION}.tar.gz\" | tar -zx --directory \"${BAMBOO_INSTALL}\" --strip-components=1 --no-same-owner \\\n && curl -Ls \"https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.40.tar.gz\" | tar -xz --directory \"${BAMBOO_INSTALL}/lib\" --strip-components=1 --no-same-owner \"mysql-connector-java-5.1.40/mysql-connector-java-5.1.40-bin.jar\" \\\n && chmod -R 700 \"${BAMBOO_INSTALL}\" \\\n && chown -R daemon:daemon \"${BAMBOO_INSTALL}\" \\\n && sed --in-place 's/^# umask 0027$/umask 0027/g' \"${BAMBOO_INSTALL}/bin/setenv.sh\" \\\n && xmlstarlet ed --inplace --delete \"Server/Service/Engine/Host/@xmlValidation\" --delete \"Server/Service/Engine/Host/@xmlNamespaceAware\" \"${BAMBOO_INSTALL}/conf/server.xml\" \\\n && touch -d \"@0\" \"${BAMBOO_INSTALL}/conf/server.xml\"\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nENV TIMEZONE=\"Europe/Madrid\"\nENV PHP_MEMORY_LIMIT=\"512M\"\nENV MAX_UPLOAD=\"500M\"\nENV PHP_MAX_FILE_UPLOAD=\"200M\"\nENV PHP_MAX_POST=\"200M\"\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk update \\\n && apk upgrade \\\n && apk add tzdata --update \\\n && cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo \"${TIMEZONE}\" > /etc/timezone \\\n && apk add git php7-mcrypt php7-soap php7-openssl php7-gmp php7-pdo_odbc php7-json php7-intl php7-pcntl php7-dom php7-pdo php7-zip php7-mysqli php7-mongodb php7-sqlite3 php7-pdo_pgsql php7-bcmath php7-gd php7-dev php7-redis php7-odbc php7-pdo_mysql php7-pdo_sqlite php7-sockets php7-pgsql php7-ssh2 php7-gettext php7-xml php7-xml php7-xmlwriter php7-xmlrpc php7-simplexml php7-xdebug php7-bz2 php7-iconv php7-pdo_dblib php7-curl php7-ctype php7-phar php7-tokenizer php7-mbstring --update\nRUN sed -i \"s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo= 0|i\" /etc/php7/php.ini\nRUN apk add nodejs\nRUN apk add python python-dev py-pip libffi build-base ansible aws-cli --update\nRUN apk add docker \\\n && pip install docker-compose==1.29.2 -U\n#   Use the default unprivileged account. This could be considered bad practice\n#   on systems where multiple processes end up being executed by 'daemon' but\n#   here we only ever run one process anyway.\n#   USER daemon:daemon\n#   Expose default HTTP and SSH ports.\nEXPOSE 8085/tcp 54663/tcp\n#   Set volume mount points for installation and home directory. Changes to the\n#   home directory needs to be persisted as well as parts of the installation\n#   directory due to eg. logs.\nVOLUME [\"/var/atlassian/bamboo\",\"/opt/atlassian/bamboo/logs\"]\n#   Set the default working directory as the Bamboo home directory.\nWORKDIR /var/atlassian/bamboo\nCOPY \"docker-entrypoint.sh\" \"/\"\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#   Run Atlassian Bamboo as a foreground process by default.\nCMD [\"/opt/atlassian/bamboo/bin/start-bamboo.sh\", \"-fg\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openjdk:8-alpine\n#  Setup useful environment variables\nENV BAMBOO_HOME=\"/var/atlassian/application-data/bamboo\"\nENV BAMBOO_INSTALL=\"/opt/atlassian/bamboo\"\nENV BAMBOO_VERSION=\"6.3.3\"\n#  Install Atlassian Bamboo and helper tools and setup initial home\n#  directory structure.\nRUN set -x \\\n && apk add --no-cache curl xmlstarlet git openssh bash \\\n && mkdir -p \"${BAMBOO_HOME}/lib\" \\\n && chmod -R 700 \"${BAMBOO_HOME}\" \\\n && chown -R daemon:daemon \"${BAMBOO_HOME}\" \\\n && mkdir -p \"${BAMBOO_INSTALL}\" \\\n && curl -Ls \"https://www.atlassian.com/software/bamboo/downloads/binary/atlassian-bamboo-${BAMBOO_VERSION}.tar.gz\" | tar -zx --directory \"${BAMBOO_INSTALL}\" --strip-components=1 --no-same-owner \\\n && curl -Ls \"https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.40.tar.gz\" | tar -xz --directory \"${BAMBOO_INSTALL}/lib\" --strip-components=1 --no-same-owner \"mysql-connector-java-5.1.40/mysql-connector-java-5.1.40-bin.jar\" \\\n && chmod -R 700 \"${BAMBOO_INSTALL}\" \\\n && chown -R daemon:daemon \"${BAMBOO_INSTALL}\" \\\n && sed --in-place 's/^# umask 0027$/umask 0027/g' \"${BAMBOO_INSTALL}/bin/setenv.sh\" \\\n && xmlstarlet ed --inplace --delete \"Server/Service/Engine/Host/@xmlValidation\" --delete \"Server/Service/Engine/Host/@xmlNamespaceAware\" \"${BAMBOO_INSTALL}/conf/server.xml\" \\\n && touch -d \"@0\" \"${BAMBOO_INSTALL}/conf/server.xml\"\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nENV TIMEZONE=\"Europe/Madrid\"\nENV PHP_MEMORY_LIMIT=\"512M\"\nENV MAX_UPLOAD=\"500M\"\nENV PHP_MAX_FILE_UPLOAD=\"200M\"\nENV PHP_MAX_POST=\"200M\"\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk update \\\n && apk upgrade \\\n && apk add --update tzdata \\\n && cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo \"${TIMEZONE}\" > /etc/timezone \\\n && apk add --update git php7-mcrypt php7-soap php7-openssl php7-gmp php7-pdo_odbc php7-json php7-intl php7-pcntl php7-dom php7-pdo php7-zip php7-mysqli php7-mongodb php7-sqlite3 php7-pdo_pgsql php7-bcmath php7-gd php7-dev php7-redis php7-odbc php7-pdo_mysql php7-pdo_sqlite php7-sockets php7-pgsql php7-ssh2 php7-gettext php7-xml php7-xml php7-xmlwriter php7-xmlrpc php7-simplexml php7-xdebug php7-bz2 php7-iconv php7-pdo_dblib php7-curl php7-ctype php7-phar php7-tokenizer php7-mbstring\nRUN sed -i \"s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo= 0|i\" /etc/php7/php.ini\nRUN apk add nodejs\nRUN apk add --update python python-dev py-pip libffi build-base ansible aws-cli\nRUN apk add docker \\\n && pip install docker-compose -U\n#  Use the default unprivileged account. This could be considered bad practice\n#  on systems where multiple processes end up being executed by 'daemon' but\n#  here we only ever run one process anyway.\n#  USER daemon:daemon\n#  Expose default HTTP and SSH ports.\nEXPOSE 8085/tcp 54663/tcp\n#  Set volume mount points for installation and home directory. Changes to the\n#  home directory needs to be persisted as well as parts of the installation\n#  directory due to eg. logs.\nVOLUME [\"/var/atlassian/bamboo\",\"/opt/atlassian/bamboo/logs\"]\n#  Set the default working directory as the Bamboo home directory.\nWORKDIR /var/atlassian/bamboo\nCOPY \"docker-entrypoint.sh\" \"/\"\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#  Run Atlassian Bamboo as a foreground process by default.\nCMD [\"/opt/atlassian/bamboo/bin/start-bamboo.sh\", \"-fg\"]\n","injectedSmells":[],"originalDockerfileHash":"c296ffe7311edc41b955285c47e5c240","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openjdk:8-alpine\n#   Setup useful environment variables\nENV BAMBOO_HOME=\"/var/atlassian/application-data/bamboo\"\nENV BAMBOO_INSTALL=\"/opt/atlassian/bamboo\"\nENV BAMBOO_VERSION=\"6.3.3\"\n#   Install Atlassian Bamboo and helper tools and setup initial home\n#   directory structure.\nRUN set -x \\\n && apk add --no-cache curl xmlstarlet git openssh bash \\\n && mkdir -p \"${BAMBOO_HOME}/lib\" \\\n && chmod -R 700 \"${BAMBOO_HOME}\" \\\n && chown -R daemon:daemon \"${BAMBOO_HOME}\" \\\n && mkdir -p \"${BAMBOO_INSTALL}\" \\\n && curl -Ls \"https://www.atlassian.com/software/bamboo/downloads/binary/atlassian-bamboo-${BAMBOO_VERSION}.tar.gz\" | tar -zx --directory \"${BAMBOO_INSTALL}\" --strip-components=1 --no-same-owner \\\n && curl -Ls \"https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.40.tar.gz\" | tar -xz --directory \"${BAMBOO_INSTALL}/lib\" --strip-components=1 --no-same-owner \"mysql-connector-java-5.1.40/mysql-connector-java-5.1.40-bin.jar\" \\\n && chmod -R 700 \"${BAMBOO_INSTALL}\" \\\n && chown -R daemon:daemon \"${BAMBOO_INSTALL}\" \\\n && sed --in-place 's/^# umask 0027$/umask 0027/g' \"${BAMBOO_INSTALL}/bin/setenv.sh\" \\\n && xmlstarlet ed --inplace --delete \"Server/Service/Engine/Host/@xmlValidation\" --delete \"Server/Service/Engine/Host/@xmlNamespaceAware\" \"${BAMBOO_INSTALL}/conf/server.xml\" \\\n && touch -d \"@0\" \"${BAMBOO_INSTALL}/conf/server.xml\"\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nENV TIMEZONE=\"Europe/Madrid\"\nENV PHP_MEMORY_LIMIT=\"512M\"\nENV MAX_UPLOAD=\"500M\"\nENV PHP_MAX_FILE_UPLOAD=\"200M\"\nENV PHP_MAX_POST=\"200M\"\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk update \\\n && apk upgrade \\\n && apk add --update tzdata \\\n && cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo \"${TIMEZONE}\" > /etc/timezone \\\n && apk add --update git php7-mcrypt php7-soap php7-openssl php7-gmp php7-pdo_odbc php7-json php7-intl php7-pcntl php7-dom php7-pdo php7-zip php7-mysqli php7-mongodb php7-sqlite3 php7-pdo_pgsql php7-bcmath php7-gd php7-dev php7-redis php7-odbc php7-pdo_mysql php7-pdo_sqlite php7-sockets php7-pgsql php7-ssh2 php7-gettext php7-xml php7-xml php7-xmlwriter php7-xmlrpc php7-simplexml php7-xdebug php7-bz2 php7-iconv php7-pdo_dblib php7-curl php7-ctype php7-phar php7-tokenizer php7-mbstring\nRUN sed -i \"s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo= 0|i\" /etc/php7/php.ini\nRUN apk add nodejs\nRUN apk add --update python python-dev py-pip libffi build-base ansible aws-cli\nRUN apk add docker \\\n && pip install docker-compose -U\n#   Use the default unprivileged account. This could be considered bad practice\n#   on systems where multiple processes end up being executed by 'daemon' but\n#   here we only ever run one process anyway.\n#   USER daemon:daemon\n#   Expose default HTTP and SSH ports.\nEXPOSE 8085/tcp 54663/tcp\n#   Set volume mount points for installation and home directory. Changes to the\n#   home directory needs to be persisted as well as parts of the installation\n#   directory due to eg. logs.\nVOLUME [\"/var/atlassian/bamboo\",\"/opt/atlassian/bamboo/logs\"]\n#   Set the default working directory as the Bamboo home directory.\nWORKDIR /var/atlassian/bamboo\nCOPY \"docker-entrypoint.sh\" \"/\"\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#   Run Atlassian Bamboo as a foreground process by default.\nCMD [\"/opt/atlassian/bamboo/bin/start-bamboo.sh\", \"-fg\"]\n","originalDockerfileUglifiedHash":"e4cb7e248e5aab898e1936959706977c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7dbbb2c3ee54f77d11aa0a57196ddbb9eb9e83a5.dockerfile"}