{"seed":3312157297,"processedDockerfileHash":"a8c423286d668e08fbbfa8f8e4be4491","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu\nMAINTAINER Wincent Balin <wincent.balin@gmail.com>\n#   Update all packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && apt-get -y upgrade \\\n && apt-get -y clean \\\n && apt-get -y autoremove\n#   Install compilation prerequisites\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential mingw-w64 gperf pkg-config cmake python python-lxml man wget unzip zip less \\\n && apt-get -y clean\n#   Enter versions!!!\nENV LIBICONV_VERSION=\"1.15\"\nENV ZLIB_VERSION=\"1.2.11\"\nENV LIBMAD_VERSION=\"0.15.1b\"\nENV LIBID3TAG_VERSION=\"0.15.1b\"\nENV LIBOGG_VERSION=\"1.3.2\"\nENV LIBVORBIS_VERSION=\"1.3.5\"\nENV FLAC_VERSION=\"1.3.1\"\nENV LIBSNDFILE_VERSION=\"1.0.28\"\nENV LIBPNG_VERSION=\"1.6.34\"\nENV JPEG_VERSION=\"9c\"\nENV JBIGKIT_VERSION=\"2.1\"\nENV TIFF_VERSION=\"4.0.9\"\nENV LIBWEBP_VERSION=\"0.6.1\"\nENV LIQ_VERSION=\"2.11.9\"\nENV FREETYPE2_VERSION=\"2.9.1\"\nENV EXPAT_VERSION=\"2.2.5\"\nENV EXPAT_VERSION_MANGLED=\"2_2_5\"\nENV FONTCONFIG_VERSION=\"2.12.6\"\nENV LIBGD_VERSION=\"2.2.5\"\nENV BOOST_VERSION=\"1.65.1\"\nENV BOOST_VERSION_MANGLED=\"1_65_1\"\nENV AUDIOWAVEFORM_VERSION=\"master\"\n#   Prepare compilation directories\nENV C=\"/tmp/compile\"\nWORKDIR ${C}\nENV BOOST_BUILD_PATH=\"${C}/boost-build\"\n#   Set environment variables\nENV PATH=\"${C}/lib:$PATH\"\nENV PATH=\"${C}/bin:$PATH\"\nENV LD_RUN_PATH=\"${C}/lib:${LD_RUN_PATH}\"\n#   Compile for Win32\nENV CROSS_ARCH=\"i686-w64-mingw32\"\nENV BUILD_ARCH=\"x86_64-pc-linux-gnu\"\n#   Create pkg-config\nWORKDIR bin\nCOPY pkg-config .\nRUN chmod 0755 pkg-config \\\n && mv pkg-config ${CROSS_ARCH}-pkg-config\nWORKDIR ..\n#   Download and compile libiconv\nRUN wget -q -O - ftp://ftp.gnu.org/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz | tar zxvf -\nWORKDIR libiconv-${LIBICONV_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --disable-shared --enable-static \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile zlib\nRUN wget -q -O - http://sourceforge.net/projects/libpng/files/zlib/${ZLIB_VERSION}/zlib-${ZLIB_VERSION}.tar.gz | tar zxvf -\nWORKDIR zlib-${ZLIB_VERSION}\nRUN CC=${CROSS_ARCH}-gcc ./configure --prefix ${C} --static \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libmad\nRUN wget -q -O - http://sourceforge.net/projects/mad/files/libmad/${LIBMAD_VERSION}/libmad-${LIBMAD_VERSION}.tar.gz | tar zxvf -\nWORKDIR libmad-${LIBMAD_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libid3tag\nRUN wget -q -O - http://sourceforge.net/projects/mad/files/libid3tag/${LIBID3TAG_VERSION}/libid3tag-${LIBID3TAG_VERSION}.tar.gz | tar zxvf -\nWORKDIR libid3tag-${LIBID3TAG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libogg\nRUN wget -q -O - http://downloads.xiph.org/releases/ogg/libogg-${LIBOGG_VERSION}.tar.gz | tar zxvf -\nWORKDIR libogg-${LIBOGG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libvorbis\nRUN wget -q -O - http://downloads.xiph.org/releases/vorbis/libvorbis-${LIBVORBIS_VERSION}.tar.gz | tar zxvf -\nWORKDIR libvorbis-${LIBVORBIS_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile FLAC\nRUN wget -q -O - http://downloads.xiph.org/releases/flac/flac-${FLAC_VERSION}.tar.xz | tar Jxvf -\nWORKDIR flac-${FLAC_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-doxygen-docs \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libsndfile\nRUN wget -q -O - http://www.mega-nerd.com/libsndfile/files/libsndfile-${LIBSNDFILE_VERSION}.tar.gz | tar zxvf -\nWORKDIR libsndfile-${LIBSNDFILE_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-sqlite \\\n && make \\\n && make install\nWORKDIR ..\nENV SNDFILE_CFLAGS=\"\\\"-I${C}/include\\\"\"\nENV SNDFILE_LIBS=\"\\\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -lm -logg -lsndfile\\\"\"\n#   Download and compile libpng\nRUN wget -q -O - http://sourceforge.net/projects/libpng/files/libpng16/${LIBPNG_VERSION}/libpng-${LIBPNG_VERSION}.tar.gz | tar zxvf -\nWORKDIR libpng-${LIBPNG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" CPPFLAGS=\"-I${C}/include\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile jpeg\n#  RUN wget -q -O - http://www.ijg.org/files/jpegsrc.v${JPEG_VERSION}.tar.gz | \\\n#      tar zxvf -\n#  WORKDIR jpeg-${JPEG_VERSION}\n#  RUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Download and compile tiff\n#  RUN wget -q -O - http://www.cl.cam.ac.uk/~mgk25/jbigkit/download/jbigkit-${JBIGKIT_VERSION}.tar.gz | \\\n#      tar zxvf -\n#  WORKDIR jbigkit-${JBIGKIT_VERSION}/libjbig\n#  RUN make CC=${CROSS_ARCH}-gcc && \\\n#      cp *.a ${C}/lib && \\\n#      cp *.h ${C}/include\n#  WORKDIR ../..\n#   Download and compile tiff\n#  RUN wget -q -O - ftp://download.osgeo.org/libtiff/tiff-${TIFF_VERSION}.tar.gz | \\\n#      tar zxvf -\n#  WORKDIR tiff-${TIFF_VERSION}\n#  RUN CPPFLAGS=\"-I${C}/include -L${C}/lib\" LDFLAGS=\"-L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Download and compile libwebp\n#  RUN wget -q -O - https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${LIBWEBP_VERSION}.tar.gz | \\\n#      tar zxvf -\n#  WORKDIR libwebp-${LIBWEBP_VERSION}\n#  RUN sed -ie 's/LIBPNG_CONFIG --ldflags/LIBPNG_CONFIG --static --ldflags/' configure && \\\n#      CPPFLAGS=\"-I${C}/include -L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --enable-libwebpmux --enable-libwebpdemux --enable-libwebpdecoder && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Download and compile liq (libimagequant)\nRUN wget -q -O - https://github.com/ImageOptim/libimagequant/archive/${LIQ_VERSION}.tar.gz | tar zxvf -\nWORKDIR libimagequant-${LIQ_VERSION}\nRUN make CC=${CROSS_ARCH}-gcc static \\\n && ${CROSS_ARCH}-ranlib libimagequant.a \\\n && cp libimagequant.h ${C}/include \\\n && cp libimagequant.a ${C}/lib\nWORKDIR ..\n#   Download and compile freetype\nRUN wget -q -O - https://sourceforge.net/projects/freetype/files/freetype2/${FREETYPE2_VERSION}/freetype-${FREETYPE2_VERSION}.tar.gz | tar zxvf -\nWORKDIR freetype-${FREETYPE2_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile expat\nRUN wget -q -O - https://github.com/libexpat/libexpat/releases/download/R_${EXPAT_VERSION_MANGLED}/expat-${EXPAT_VERSION}.tar.bz2 | tar jxvf -\nWORKDIR expat-${EXPAT_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --without-xmlwf \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile fontconfig\nRUN wget -q -O - https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.12.6.tar.bz2 | tar jxvf -\nWORKDIR fontconfig-${FONTCONFIG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libgd\nRUN wget -q -O - https://github.com/libgd/libgd/releases/download/gd-${LIBGD_VERSION}/libgd-${LIBGD_VERSION}.tar.gz | tar zxvf -\nWORKDIR libgd-${LIBGD_VERSION}\n#   Defines and sed command taken from https://github.com/mxe/mxe/blob/master/src/gd.mk\nRUN sed -i 's,-I@includedir@,-I@includedir@ -DNONDLL -DBGDWIN32,' 'config/gdlib-config.in' \\\n && CFLAGS=\"-DNONDLL\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile boost\nRUN wget -q -O - https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION_MANGLED}.tar.gz | tar zxvf -\nWORKDIR ${BOOST_BUILD_PATH}\nRUN echo \"using gcc : mingw : ${CROSS_ARCH}-g++ ;\" > user-config.jam\nWORKDIR ..\nWORKDIR boost_${BOOST_VERSION_MANGLED}\nRUN ./bootstrap.sh \\\n && ./b2 install --prefix=${C} toolset=gcc-mingw target-os=windows --with-filesystem --with-program_options --with-regex variant=release link=static runtime-link=static\nWORKDIR ..\n#   Download and compile audiowaveform\nRUN wget -q -O - https://github.com/bbc/audiowaveform/archive/${AUDIOWAVEFORM_VERSION}.tar.gz | tar zxvf -\nWORKDIR audiowaveform-${AUDIOWAVEFORM_VERSION}\nCOPY audiowaveform-mingw.patch .\nRUN patch -p0 < audiowaveform-mingw.patch\nWORKDIR build\nCOPY ${CROSS_ARCH}.cmake .\nRUN cmake -DCMAKE_TOOLCHAIN_FILE=${C}/audiowaveform-${AUDIOWAVEFORM_VERSION}/build/${CROSS_ARCH}.cmake -DCMAKE_INSTALL_PREFIX=${C} -DENABLE_TESTS=0 -DCMAKE_CXX_FLAGS_RELEASE=\"-O3 -DNDEBUG -DBGDWIN32 -static-libgcc -static-libstdc++ -static\" -DCMAKE_FIND_LIBRARY_SUFFIXES=\".a\" -DEXTRA_LIBS=\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -logg -lpng -lz\" .. \\\n && make \\\n && make install\nWORKDIR ../..\n#   Strip binaries\nRUN $CROSS_ARCH-strip bin/*.exe\n#   Create mingw32 archive\nRUN zip -r -9 audiowaveform-mingw32.zip bin/ etc/ include/ lib/ share/\n#   Clean up everything\nRUN rm -rf bin/ etc/ include/ lib/ share/\nWORKDIR libiconv-${LIBICONV_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR zlib-${ZLIB_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libmad-${LIBMAD_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libid3tag-${LIBID3TAG_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libogg-${LIBOGG_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libvorbis-${LIBVORBIS_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR flac-${FLAC_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libsndfile-${LIBSNDFILE_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libpng-${LIBPNG_VERSION}\nRUN make distclean\nWORKDIR ..\n#  WORKDIR jpeg-${JPEG_VERSION}\n#  RUN make distclean\n#  WORKDIR ..\n#  WORKDIR jbigkit-${JBIGKIT_VERSION}/libjbig\n#  RUN make distclean\n#  WORKDIR ../..\n#  WORKDIR tiff-${TIFF_VERSION}\n#  RUN make distclean\n#  WORKDIR ..\n#  WORKDIR libwebp-${LIBWEBP_VERSION}\n#  RUN make distclean\n#  WORKDIR ..\nWORKDIR libimagequant-${LIQ_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR freetype-${FREETYPE2_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR expat-${EXPAT_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR fontconfig-${FONTCONFIG_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libgd-${LIBGD_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR boost_${BOOST_VERSION_MANGLED}\nRUN ./b2 install --prefix=${C} toolset=gcc-mingw target-os=windows --with-filesystem --with-program_options --with-regex variant=release link=static runtime-link=static --clean \\\n && rm -r bin.v2\nWORKDIR ..\nWORKDIR audiowaveform-${AUDIOWAVEFORM_VERSION}\nWORKDIR build\nRUN make clean\nWORKDIR ..\nRUN rm -r build\nWORKDIR ..\n#   Compile for Win64\nENV CROSS_ARCH=\"x86_64-w64-mingw32\"\nENV BUILD_ARCH=\"x86_64-pc-linux-gnu\"\n#   Create pkg-config\nWORKDIR bin\nCOPY pkg-config .\nRUN chmod 0755 pkg-config \\\n && mv pkg-config ${CROSS_ARCH}-pkg-config\nWORKDIR ..\n#   Compile libiconv\nWORKDIR libiconv-${LIBICONV_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --disable-shared --enable-static \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile zlib\nWORKDIR zlib-${ZLIB_VERSION}\nRUN CC=${CROSS_ARCH}-gcc ./configure --prefix ${C} --static \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libmad\nWORKDIR libmad-${LIBMAD_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libid3tag\nWORKDIR libid3tag-${LIBID3TAG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libogg\nWORKDIR libogg-${LIBOGG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libvorbis\nWORKDIR libvorbis-${LIBVORBIS_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile FLAC\nWORKDIR flac-${FLAC_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-doxygen-docs \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libsndfile\nWORKDIR libsndfile-${LIBSNDFILE_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-sqlite \\\n && make \\\n && make install\nWORKDIR ..\nENV SNDFILE_CFLAGS=\"\\\"-I${C}/include\\\"\"\nENV SNDFILE_LIBS=\"\\\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -lm -logg -lsndfile\\\"\"\n#   Compile libpng\nWORKDIR libpng-${LIBPNG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" CPPFLAGS=\"-I${C}/include\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile jpeg\n#  WORKDIR jpeg-${JPEG_VERSION}\n#  RUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Compile tiff\n#  WORKDIR jbigkit-${JBIGKIT_VERSION}/libjbig\n#  RUN make CC=${CROSS_ARCH}-gcc && \\\n#      cp *.a ${C}/lib && \\\n#      cp *.h ${C}/include\n#  WORKDIR ../..\n#   Compile tiff\n#  WORKDIR tiff-${TIFF_VERSION}\n#  RUN CPPFLAGS=\"-I${C}/include -L${C}/lib\" LDFLAGS=\"-L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Compile libwebp\n#  WORKDIR libwebp-${LIBWEBP_VERSION}\n#  RUN CPPFLAGS=\"-I${C}/include -L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --enable-libwebpmux --enable-libwebpdemux --enable-libwebpdecoder && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Compile liq (libimagequant)\nWORKDIR libimagequant-${LIQ_VERSION}\nRUN make CC=${CROSS_ARCH}-gcc static \\\n && ${CROSS_ARCH}-ranlib libimagequant.a \\\n && cp libimagequant.h ${C}/include \\\n && cp libimagequant.a ${C}/lib\nWORKDIR ..\n#   Compile freetype\nWORKDIR freetype-${FREETYPE2_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile expat\nWORKDIR expat-${EXPAT_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --without-xmlwf \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile fontconfig\nWORKDIR fontconfig-${FONTCONFIG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libgd\nWORKDIR libgd-${LIBGD_VERSION}\n#   Define taken from https://github.com/mxe/mxe/blob/master/src/gd.mk\nRUN CFLAGS=\"-DNONDLL\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile boost\nWORKDIR ${BOOST_BUILD_PATH}\nRUN echo \"using gcc : mingw : ${CROSS_ARCH}-g++ ;\" > user-config.jam\nWORKDIR ..\nWORKDIR boost_${BOOST_VERSION_MANGLED}\nRUN ./bootstrap.sh \\\n && ./b2 install --prefix=${C} toolset=gcc-mingw target-os=windows --with-filesystem --with-program_options --with-regex variant=release link=static runtime-link=static address-model=64\nWORKDIR ..\n#   Compile audiowaveform\nWORKDIR audiowaveform-${AUDIOWAVEFORM_VERSION}\nWORKDIR build\nCOPY ${CROSS_ARCH}.cmake .\nRUN cmake -DCMAKE_TOOLCHAIN_FILE=${C}/audiowaveform-${AUDIOWAVEFORM_VERSION}/build/${CROSS_ARCH}.cmake -DCMAKE_INSTALL_PREFIX=${C} -DENABLE_TESTS=0 -DCMAKE_CXX_FLAGS_RELEASE=\"-O3 -DNDEBUG -DBGDWIN32 -static-libgcc -static-libstdc++ -static\" -DCMAKE_FIND_LIBRARY_SUFFIXES=\".a\" -DEXTRA_LIBS=\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -logg -lpng -lz\" .. \\\n && make \\\n && make install\nWORKDIR ../..\n#   Strip binaries\nRUN $CROSS_ARCH-strip bin/*.exe\n#   Create mingw64 archive\nRUN zip -r -9 audiowaveform-mingw64.zip bin/ etc/ include/ lib/ share/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu\nMAINTAINER Wincent Balin <wincent.balin@gmail.com>\n#  Update all packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && apt-get -y upgrade \\\n && apt-get -y clean \\\n && apt-get -y autoremove\n#  Install compilation prerequisites\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential mingw-w64 gperf pkg-config cmake python python-lxml man wget unzip zip less \\\n && apt-get -y clean\n#  Enter versions!!!\nENV LIBICONV_VERSION=\"1.15\"\nENV ZLIB_VERSION=\"1.2.11\"\nENV LIBMAD_VERSION=\"0.15.1b\"\nENV LIBID3TAG_VERSION=\"0.15.1b\"\nENV LIBOGG_VERSION=\"1.3.2\"\nENV LIBVORBIS_VERSION=\"1.3.5\"\nENV FLAC_VERSION=\"1.3.1\"\nENV LIBSNDFILE_VERSION=\"1.0.28\"\nENV LIBPNG_VERSION=\"1.6.34\"\nENV JPEG_VERSION=\"9c\"\nENV JBIGKIT_VERSION=\"2.1\"\nENV TIFF_VERSION=\"4.0.9\"\nENV LIBWEBP_VERSION=\"0.6.1\"\nENV LIQ_VERSION=\"2.11.9\"\nENV FREETYPE2_VERSION=\"2.9.1\"\nENV EXPAT_VERSION=\"2.2.5\"\nENV EXPAT_VERSION_MANGLED=\"2_2_5\"\nENV FONTCONFIG_VERSION=\"2.12.6\"\nENV LIBGD_VERSION=\"2.2.5\"\nENV BOOST_VERSION=\"1.65.1\"\nENV BOOST_VERSION_MANGLED=\"1_65_1\"\nENV AUDIOWAVEFORM_VERSION=\"master\"\n#  Prepare compilation directories\nENV C=\"/tmp/compile\"\nWORKDIR ${C}\nENV BOOST_BUILD_PATH=\"${C}/boost-build\"\n#  Set environment variables\nENV PATH=\"${C}/lib:$PATH\"\nENV PATH=\"${C}/bin:$PATH\"\nENV LD_RUN_PATH=\"${C}/lib:${LD_RUN_PATH}\"\n#  Compile for Win32\nENV CROSS_ARCH=\"i686-w64-mingw32\"\nENV BUILD_ARCH=\"x86_64-pc-linux-gnu\"\n#  Create pkg-config\nWORKDIR bin\nCOPY pkg-config .\nRUN chmod 0755 pkg-config \\\n && mv pkg-config ${CROSS_ARCH}-pkg-config\nWORKDIR ..\n#  Download and compile libiconv\nRUN wget -q -O - ftp://ftp.gnu.org/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz | tar zxvf -\nWORKDIR libiconv-${LIBICONV_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --disable-shared --enable-static \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile zlib\nRUN wget -q -O - http://sourceforge.net/projects/libpng/files/zlib/${ZLIB_VERSION}/zlib-${ZLIB_VERSION}.tar.gz | tar zxvf -\nWORKDIR zlib-${ZLIB_VERSION}\nRUN CC=${CROSS_ARCH}-gcc ./configure --prefix ${C} --static \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile libmad\nRUN wget -q -O - http://sourceforge.net/projects/mad/files/libmad/${LIBMAD_VERSION}/libmad-${LIBMAD_VERSION}.tar.gz | tar zxvf -\nWORKDIR libmad-${LIBMAD_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile libid3tag\nRUN wget -q -O - http://sourceforge.net/projects/mad/files/libid3tag/${LIBID3TAG_VERSION}/libid3tag-${LIBID3TAG_VERSION}.tar.gz | tar zxvf -\nWORKDIR libid3tag-${LIBID3TAG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile libogg\nRUN wget -q -O - http://downloads.xiph.org/releases/ogg/libogg-${LIBOGG_VERSION}.tar.gz | tar zxvf -\nWORKDIR libogg-${LIBOGG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile libvorbis\nRUN wget -q -O - http://downloads.xiph.org/releases/vorbis/libvorbis-${LIBVORBIS_VERSION}.tar.gz | tar zxvf -\nWORKDIR libvorbis-${LIBVORBIS_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile FLAC\nRUN wget -q -O - http://downloads.xiph.org/releases/flac/flac-${FLAC_VERSION}.tar.xz | tar Jxvf -\nWORKDIR flac-${FLAC_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-doxygen-docs \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile libsndfile\nRUN wget -q -O - http://www.mega-nerd.com/libsndfile/files/libsndfile-${LIBSNDFILE_VERSION}.tar.gz | tar zxvf -\nWORKDIR libsndfile-${LIBSNDFILE_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-sqlite \\\n && make \\\n && make install\nWORKDIR ..\nENV SNDFILE_CFLAGS=\"\\\"-I${C}/include\\\"\"\nENV SNDFILE_LIBS=\"\\\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -lm -logg -lsndfile\\\"\"\n#  Download and compile libpng\nRUN wget -q -O - http://sourceforge.net/projects/libpng/files/libpng16/${LIBPNG_VERSION}/libpng-${LIBPNG_VERSION}.tar.gz | tar zxvf -\nWORKDIR libpng-${LIBPNG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" CPPFLAGS=\"-I${C}/include\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile jpeg\n# RUN wget -q -O - http://www.ijg.org/files/jpegsrc.v${JPEG_VERSION}.tar.gz | \\\n#     tar zxvf -\n# WORKDIR jpeg-${JPEG_VERSION}\n# RUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#     make && \\\n#     make install\n# WORKDIR ..\n#  Download and compile tiff\n# RUN wget -q -O - http://www.cl.cam.ac.uk/~mgk25/jbigkit/download/jbigkit-${JBIGKIT_VERSION}.tar.gz | \\\n#     tar zxvf -\n# WORKDIR jbigkit-${JBIGKIT_VERSION}/libjbig\n# RUN make CC=${CROSS_ARCH}-gcc && \\\n#     cp *.a ${C}/lib && \\\n#     cp *.h ${C}/include\n# WORKDIR ../..\n#  Download and compile tiff\n# RUN wget -q -O - ftp://download.osgeo.org/libtiff/tiff-${TIFF_VERSION}.tar.gz | \\\n#     tar zxvf -\n# WORKDIR tiff-${TIFF_VERSION}\n# RUN CPPFLAGS=\"-I${C}/include -L${C}/lib\" LDFLAGS=\"-L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#     make && \\\n#     make install\n# WORKDIR ..\n#  Download and compile libwebp\n# RUN wget -q -O - https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${LIBWEBP_VERSION}.tar.gz | \\\n#     tar zxvf -\n# WORKDIR libwebp-${LIBWEBP_VERSION}\n# RUN sed -ie 's/LIBPNG_CONFIG --ldflags/LIBPNG_CONFIG --static --ldflags/' configure && \\\n#     CPPFLAGS=\"-I${C}/include -L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --enable-libwebpmux --enable-libwebpdemux --enable-libwebpdecoder && \\\n#     make && \\\n#     make install\n# WORKDIR ..\n#  Download and compile liq (libimagequant)\nRUN wget -q -O - https://github.com/ImageOptim/libimagequant/archive/${LIQ_VERSION}.tar.gz | tar zxvf -\nWORKDIR libimagequant-${LIQ_VERSION}\nRUN make CC=${CROSS_ARCH}-gcc static \\\n && ${CROSS_ARCH}-ranlib libimagequant.a \\\n && cp libimagequant.h ${C}/include \\\n && cp libimagequant.a ${C}/lib\nWORKDIR ..\n#  Download and compile freetype\nRUN wget -q -O - https://sourceforge.net/projects/freetype/files/freetype2/${FREETYPE2_VERSION}/freetype-${FREETYPE2_VERSION}.tar.gz | tar zxvf -\nWORKDIR freetype-${FREETYPE2_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile expat\nRUN wget -q -O - https://github.com/libexpat/libexpat/releases/download/R_${EXPAT_VERSION_MANGLED}/expat-${EXPAT_VERSION}.tar.bz2 | tar jxvf -\nWORKDIR expat-${EXPAT_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --without-xmlwf \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile fontconfig\nRUN wget -q -O - https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.12.6.tar.bz2 | tar jxvf -\nWORKDIR fontconfig-${FONTCONFIG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile libgd\nRUN wget -q -O - https://github.com/libgd/libgd/releases/download/gd-${LIBGD_VERSION}/libgd-${LIBGD_VERSION}.tar.gz | tar zxvf -\nWORKDIR libgd-${LIBGD_VERSION}\n#  Defines and sed command taken from https://github.com/mxe/mxe/blob/master/src/gd.mk\nRUN sed -i 's,-I@includedir@,-I@includedir@ -DNONDLL -DBGDWIN32,' 'config/gdlib-config.in' \\\n && CFLAGS=\"-DNONDLL\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#  Download and compile boost\nRUN wget -q -O - https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION_MANGLED}.tar.gz | tar zxvf -\nWORKDIR ${BOOST_BUILD_PATH}\nRUN echo \"using gcc : mingw : ${CROSS_ARCH}-g++ ;\" > user-config.jam\nWORKDIR ..\nWORKDIR boost_${BOOST_VERSION_MANGLED}\nRUN ./bootstrap.sh \\\n && ./b2 install --prefix=${C} toolset=gcc-mingw target-os=windows --with-filesystem --with-program_options --with-regex variant=release link=static runtime-link=static\nWORKDIR ..\n#  Download and compile audiowaveform\nRUN wget -q -O - https://github.com/bbc/audiowaveform/archive/${AUDIOWAVEFORM_VERSION}.tar.gz | tar zxvf -\nWORKDIR audiowaveform-${AUDIOWAVEFORM_VERSION}\nCOPY audiowaveform-mingw.patch .\nRUN patch -p0 < audiowaveform-mingw.patch\nWORKDIR build\nCOPY ${CROSS_ARCH}.cmake .\nRUN cmake -DCMAKE_TOOLCHAIN_FILE=${C}/audiowaveform-${AUDIOWAVEFORM_VERSION}/build/${CROSS_ARCH}.cmake -DCMAKE_INSTALL_PREFIX=${C} -DENABLE_TESTS=0 -DCMAKE_CXX_FLAGS_RELEASE=\"-O3 -DNDEBUG -DBGDWIN32 -static-libgcc -static-libstdc++ -static\" -DCMAKE_FIND_LIBRARY_SUFFIXES=\".a\" -DEXTRA_LIBS=\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -logg -lpng -lz\" .. \\\n && make \\\n && make install\nWORKDIR ../..\n#  Strip binaries\nRUN $CROSS_ARCH-strip bin/*.exe\n#  Create mingw32 archive\nRUN zip -r -9 audiowaveform-mingw32.zip bin/ etc/ include/ lib/ share/\n#  Clean up everything\nRUN rm -rf bin/ etc/ include/ lib/ share/\nWORKDIR libiconv-${LIBICONV_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR zlib-${ZLIB_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libmad-${LIBMAD_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libid3tag-${LIBID3TAG_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libogg-${LIBOGG_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libvorbis-${LIBVORBIS_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR flac-${FLAC_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libsndfile-${LIBSNDFILE_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libpng-${LIBPNG_VERSION}\nRUN make distclean\nWORKDIR ..\n# WORKDIR jpeg-${JPEG_VERSION}\n# RUN make distclean\n# WORKDIR ..\n# WORKDIR jbigkit-${JBIGKIT_VERSION}/libjbig\n# RUN make distclean\n# WORKDIR ../..\n# WORKDIR tiff-${TIFF_VERSION}\n# RUN make distclean\n# WORKDIR ..\n# WORKDIR libwebp-${LIBWEBP_VERSION}\n# RUN make distclean\n# WORKDIR ..\nWORKDIR libimagequant-${LIQ_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR freetype-${FREETYPE2_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR expat-${EXPAT_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR fontconfig-${FONTCONFIG_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libgd-${LIBGD_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR boost_${BOOST_VERSION_MANGLED}\nRUN ./b2 install --prefix=${C} toolset=gcc-mingw target-os=windows --with-filesystem --with-program_options --with-regex variant=release link=static runtime-link=static --clean \\\n && rm -r bin.v2\nWORKDIR ..\nWORKDIR audiowaveform-${AUDIOWAVEFORM_VERSION}\nWORKDIR build\nRUN make clean\nWORKDIR ..\nRUN rm -r build\nWORKDIR ..\n#  Compile for Win64\nENV CROSS_ARCH=\"x86_64-w64-mingw32\"\nENV BUILD_ARCH=\"x86_64-pc-linux-gnu\"\n#  Create pkg-config\nWORKDIR bin\nCOPY pkg-config .\nRUN chmod 0755 pkg-config \\\n && mv pkg-config ${CROSS_ARCH}-pkg-config\nWORKDIR ..\n#  Compile libiconv\nWORKDIR libiconv-${LIBICONV_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --disable-shared --enable-static \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile zlib\nWORKDIR zlib-${ZLIB_VERSION}\nRUN CC=${CROSS_ARCH}-gcc ./configure --prefix ${C} --static \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile libmad\nWORKDIR libmad-${LIBMAD_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile libid3tag\nWORKDIR libid3tag-${LIBID3TAG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile libogg\nWORKDIR libogg-${LIBOGG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile libvorbis\nWORKDIR libvorbis-${LIBVORBIS_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile FLAC\nWORKDIR flac-${FLAC_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-doxygen-docs \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile libsndfile\nWORKDIR libsndfile-${LIBSNDFILE_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-sqlite \\\n && make \\\n && make install\nWORKDIR ..\nENV SNDFILE_CFLAGS=\"\\\"-I${C}/include\\\"\"\nENV SNDFILE_LIBS=\"\\\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -lm -logg -lsndfile\\\"\"\n#  Compile libpng\nWORKDIR libpng-${LIBPNG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" CPPFLAGS=\"-I${C}/include\" \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile jpeg\n# WORKDIR jpeg-${JPEG_VERSION}\n# RUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#     make && \\\n#     make install\n# WORKDIR ..\n#  Compile tiff\n# WORKDIR jbigkit-${JBIGKIT_VERSION}/libjbig\n# RUN make CC=${CROSS_ARCH}-gcc && \\\n#     cp *.a ${C}/lib && \\\n#     cp *.h ${C}/include\n# WORKDIR ../..\n#  Compile tiff\n# WORKDIR tiff-${TIFF_VERSION}\n# RUN CPPFLAGS=\"-I${C}/include -L${C}/lib\" LDFLAGS=\"-L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#     make && \\\n#     make install\n# WORKDIR ..\n#  Compile libwebp\n# WORKDIR libwebp-${LIBWEBP_VERSION}\n# RUN CPPFLAGS=\"-I${C}/include -L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --enable-libwebpmux --enable-libwebpdemux --enable-libwebpdecoder && \\\n#     make && \\\n#     make install\n# WORKDIR ..\n#  Compile liq (libimagequant)\nWORKDIR libimagequant-${LIQ_VERSION}\nRUN make CC=${CROSS_ARCH}-gcc static \\\n && ${CROSS_ARCH}-ranlib libimagequant.a \\\n && cp libimagequant.h ${C}/include \\\n && cp libimagequant.a ${C}/lib\nWORKDIR ..\n#  Compile freetype\nWORKDIR freetype-${FREETYPE2_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile expat\nWORKDIR expat-${EXPAT_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --without-xmlwf \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile fontconfig\nWORKDIR fontconfig-${FONTCONFIG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile libgd\nWORKDIR libgd-${LIBGD_VERSION}\n#  Define taken from https://github.com/mxe/mxe/blob/master/src/gd.mk\nRUN CFLAGS=\"-DNONDLL\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#  Compile boost\nWORKDIR ${BOOST_BUILD_PATH}\nRUN echo \"using gcc : mingw : ${CROSS_ARCH}-g++ ;\" > user-config.jam\nWORKDIR ..\nWORKDIR boost_${BOOST_VERSION_MANGLED}\nRUN ./bootstrap.sh \\\n && ./b2 install --prefix=${C} toolset=gcc-mingw target-os=windows --with-filesystem --with-program_options --with-regex variant=release link=static runtime-link=static address-model=64\nWORKDIR ..\n#  Compile audiowaveform\nWORKDIR audiowaveform-${AUDIOWAVEFORM_VERSION}\nWORKDIR build\nCOPY ${CROSS_ARCH}.cmake .\nRUN cmake -DCMAKE_TOOLCHAIN_FILE=${C}/audiowaveform-${AUDIOWAVEFORM_VERSION}/build/${CROSS_ARCH}.cmake -DCMAKE_INSTALL_PREFIX=${C} -DENABLE_TESTS=0 -DCMAKE_CXX_FLAGS_RELEASE=\"-O3 -DNDEBUG -DBGDWIN32 -static-libgcc -static-libstdc++ -static\" -DCMAKE_FIND_LIBRARY_SUFFIXES=\".a\" -DEXTRA_LIBS=\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -logg -lpng -lz\" .. \\\n && make \\\n && make install\nWORKDIR ../..\n#  Strip binaries\nRUN $CROSS_ARCH-strip bin/*.exe\n#  Create mingw64 archive\nRUN zip -r -9 audiowaveform-mingw64.zip bin/ etc/ include/ lib/ share/\n","injectedSmells":[],"originalDockerfileHash":"80c3c382547e6811e4c5b79ac56b8271","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu\nMAINTAINER Wincent Balin <wincent.balin@gmail.com>\n#   Update all packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && apt-get -y upgrade \\\n && apt-get -y clean \\\n && apt-get -y autoremove\n#   Install compilation prerequisites\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential mingw-w64 gperf pkg-config cmake python python-lxml man wget unzip zip less \\\n && apt-get -y clean\n#   Enter versions!!!\nENV LIBICONV_VERSION=\"1.15\"\nENV ZLIB_VERSION=\"1.2.11\"\nENV LIBMAD_VERSION=\"0.15.1b\"\nENV LIBID3TAG_VERSION=\"0.15.1b\"\nENV LIBOGG_VERSION=\"1.3.2\"\nENV LIBVORBIS_VERSION=\"1.3.5\"\nENV FLAC_VERSION=\"1.3.1\"\nENV LIBSNDFILE_VERSION=\"1.0.28\"\nENV LIBPNG_VERSION=\"1.6.34\"\nENV JPEG_VERSION=\"9c\"\nENV JBIGKIT_VERSION=\"2.1\"\nENV TIFF_VERSION=\"4.0.9\"\nENV LIBWEBP_VERSION=\"0.6.1\"\nENV LIQ_VERSION=\"2.11.9\"\nENV FREETYPE2_VERSION=\"2.9.1\"\nENV EXPAT_VERSION=\"2.2.5\"\nENV EXPAT_VERSION_MANGLED=\"2_2_5\"\nENV FONTCONFIG_VERSION=\"2.12.6\"\nENV LIBGD_VERSION=\"2.2.5\"\nENV BOOST_VERSION=\"1.65.1\"\nENV BOOST_VERSION_MANGLED=\"1_65_1\"\nENV AUDIOWAVEFORM_VERSION=\"master\"\n#   Prepare compilation directories\nENV C=\"/tmp/compile\"\nWORKDIR ${C}\nENV BOOST_BUILD_PATH=\"${C}/boost-build\"\n#   Set environment variables\nENV PATH=\"${C}/lib:$PATH\"\nENV PATH=\"${C}/bin:$PATH\"\nENV LD_RUN_PATH=\"${C}/lib:${LD_RUN_PATH}\"\n#   Compile for Win32\nENV CROSS_ARCH=\"i686-w64-mingw32\"\nENV BUILD_ARCH=\"x86_64-pc-linux-gnu\"\n#   Create pkg-config\nWORKDIR bin\nCOPY pkg-config .\nRUN chmod 0755 pkg-config \\\n && mv pkg-config ${CROSS_ARCH}-pkg-config\nWORKDIR ..\n#   Download and compile libiconv\nRUN wget -q -O - ftp://ftp.gnu.org/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz | tar zxvf -\nWORKDIR libiconv-${LIBICONV_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --disable-shared --enable-static \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile zlib\nRUN wget -q -O - http://sourceforge.net/projects/libpng/files/zlib/${ZLIB_VERSION}/zlib-${ZLIB_VERSION}.tar.gz | tar zxvf -\nWORKDIR zlib-${ZLIB_VERSION}\nRUN CC=${CROSS_ARCH}-gcc ./configure --prefix ${C} --static \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libmad\nRUN wget -q -O - http://sourceforge.net/projects/mad/files/libmad/${LIBMAD_VERSION}/libmad-${LIBMAD_VERSION}.tar.gz | tar zxvf -\nWORKDIR libmad-${LIBMAD_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libid3tag\nRUN wget -q -O - http://sourceforge.net/projects/mad/files/libid3tag/${LIBID3TAG_VERSION}/libid3tag-${LIBID3TAG_VERSION}.tar.gz | tar zxvf -\nWORKDIR libid3tag-${LIBID3TAG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libogg\nRUN wget -q -O - http://downloads.xiph.org/releases/ogg/libogg-${LIBOGG_VERSION}.tar.gz | tar zxvf -\nWORKDIR libogg-${LIBOGG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libvorbis\nRUN wget -q -O - http://downloads.xiph.org/releases/vorbis/libvorbis-${LIBVORBIS_VERSION}.tar.gz | tar zxvf -\nWORKDIR libvorbis-${LIBVORBIS_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile FLAC\nRUN wget -q -O - http://downloads.xiph.org/releases/flac/flac-${FLAC_VERSION}.tar.xz | tar Jxvf -\nWORKDIR flac-${FLAC_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-doxygen-docs \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libsndfile\nRUN wget -q -O - http://www.mega-nerd.com/libsndfile/files/libsndfile-${LIBSNDFILE_VERSION}.tar.gz | tar zxvf -\nWORKDIR libsndfile-${LIBSNDFILE_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-sqlite \\\n && make \\\n && make install\nWORKDIR ..\nENV SNDFILE_CFLAGS=\"\\\"-I${C}/include\\\"\"\nENV SNDFILE_LIBS=\"\\\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -lm -logg -lsndfile\\\"\"\n#   Download and compile libpng\nRUN wget -q -O - http://sourceforge.net/projects/libpng/files/libpng16/${LIBPNG_VERSION}/libpng-${LIBPNG_VERSION}.tar.gz | tar zxvf -\nWORKDIR libpng-${LIBPNG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" CPPFLAGS=\"-I${C}/include\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile jpeg\n#  RUN wget -q -O - http://www.ijg.org/files/jpegsrc.v${JPEG_VERSION}.tar.gz | \\\n#      tar zxvf -\n#  WORKDIR jpeg-${JPEG_VERSION}\n#  RUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Download and compile tiff\n#  RUN wget -q -O - http://www.cl.cam.ac.uk/~mgk25/jbigkit/download/jbigkit-${JBIGKIT_VERSION}.tar.gz | \\\n#      tar zxvf -\n#  WORKDIR jbigkit-${JBIGKIT_VERSION}/libjbig\n#  RUN make CC=${CROSS_ARCH}-gcc && \\\n#      cp *.a ${C}/lib && \\\n#      cp *.h ${C}/include\n#  WORKDIR ../..\n#   Download and compile tiff\n#  RUN wget -q -O - ftp://download.osgeo.org/libtiff/tiff-${TIFF_VERSION}.tar.gz | \\\n#      tar zxvf -\n#  WORKDIR tiff-${TIFF_VERSION}\n#  RUN CPPFLAGS=\"-I${C}/include -L${C}/lib\" LDFLAGS=\"-L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Download and compile libwebp\n#  RUN wget -q -O - https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${LIBWEBP_VERSION}.tar.gz | \\\n#      tar zxvf -\n#  WORKDIR libwebp-${LIBWEBP_VERSION}\n#  RUN sed -ie 's/LIBPNG_CONFIG --ldflags/LIBPNG_CONFIG --static --ldflags/' configure && \\\n#      CPPFLAGS=\"-I${C}/include -L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --enable-libwebpmux --enable-libwebpdemux --enable-libwebpdecoder && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Download and compile liq (libimagequant)\nRUN wget -q -O - https://github.com/ImageOptim/libimagequant/archive/${LIQ_VERSION}.tar.gz | tar zxvf -\nWORKDIR libimagequant-${LIQ_VERSION}\nRUN make CC=${CROSS_ARCH}-gcc static \\\n && ${CROSS_ARCH}-ranlib libimagequant.a \\\n && cp libimagequant.h ${C}/include \\\n && cp libimagequant.a ${C}/lib\nWORKDIR ..\n#   Download and compile freetype\nRUN wget -q -O - https://sourceforge.net/projects/freetype/files/freetype2/${FREETYPE2_VERSION}/freetype-${FREETYPE2_VERSION}.tar.gz | tar zxvf -\nWORKDIR freetype-${FREETYPE2_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile expat\nRUN wget -q -O - https://github.com/libexpat/libexpat/releases/download/R_${EXPAT_VERSION_MANGLED}/expat-${EXPAT_VERSION}.tar.bz2 | tar jxvf -\nWORKDIR expat-${EXPAT_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --without-xmlwf \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile fontconfig\nRUN wget -q -O - https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.12.6.tar.bz2 | tar jxvf -\nWORKDIR fontconfig-${FONTCONFIG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile libgd\nRUN wget -q -O - https://github.com/libgd/libgd/releases/download/gd-${LIBGD_VERSION}/libgd-${LIBGD_VERSION}.tar.gz | tar zxvf -\nWORKDIR libgd-${LIBGD_VERSION}\n#   Defines and sed command taken from https://github.com/mxe/mxe/blob/master/src/gd.mk\nRUN sed -i 's,-I@includedir@,-I@includedir@ -DNONDLL -DBGDWIN32,' 'config/gdlib-config.in' \\\n && CFLAGS=\"-DNONDLL\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Download and compile boost\nRUN wget -q -O - https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION_MANGLED}.tar.gz | tar zxvf -\nWORKDIR ${BOOST_BUILD_PATH}\nRUN echo \"using gcc : mingw : ${CROSS_ARCH}-g++ ;\" > user-config.jam\nWORKDIR ..\nWORKDIR boost_${BOOST_VERSION_MANGLED}\nRUN ./bootstrap.sh \\\n && ./b2 install --prefix=${C} toolset=gcc-mingw target-os=windows --with-filesystem --with-program_options --with-regex variant=release link=static runtime-link=static\nWORKDIR ..\n#   Download and compile audiowaveform\nRUN wget -q -O - https://github.com/bbc/audiowaveform/archive/${AUDIOWAVEFORM_VERSION}.tar.gz | tar zxvf -\nWORKDIR audiowaveform-${AUDIOWAVEFORM_VERSION}\nCOPY audiowaveform-mingw.patch .\nRUN patch -p0 < audiowaveform-mingw.patch\nWORKDIR build\nCOPY ${CROSS_ARCH}.cmake .\nRUN cmake -DCMAKE_TOOLCHAIN_FILE=${C}/audiowaveform-${AUDIOWAVEFORM_VERSION}/build/${CROSS_ARCH}.cmake -DCMAKE_INSTALL_PREFIX=${C} -DENABLE_TESTS=0 -DCMAKE_CXX_FLAGS_RELEASE=\"-O3 -DNDEBUG -DBGDWIN32 -static-libgcc -static-libstdc++ -static\" -DCMAKE_FIND_LIBRARY_SUFFIXES=\".a\" -DEXTRA_LIBS=\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -logg -lpng -lz\" .. \\\n && make \\\n && make install\nWORKDIR ../..\n#   Strip binaries\nRUN $CROSS_ARCH-strip bin/*.exe\n#   Create mingw32 archive\nRUN zip -r -9 audiowaveform-mingw32.zip bin/ etc/ include/ lib/ share/\n#   Clean up everything\nRUN rm -rf bin/ etc/ include/ lib/ share/\nWORKDIR libiconv-${LIBICONV_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR zlib-${ZLIB_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libmad-${LIBMAD_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libid3tag-${LIBID3TAG_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libogg-${LIBOGG_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libvorbis-${LIBVORBIS_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR flac-${FLAC_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libsndfile-${LIBSNDFILE_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libpng-${LIBPNG_VERSION}\nRUN make distclean\nWORKDIR ..\n#  WORKDIR jpeg-${JPEG_VERSION}\n#  RUN make distclean\n#  WORKDIR ..\n#  WORKDIR jbigkit-${JBIGKIT_VERSION}/libjbig\n#  RUN make distclean\n#  WORKDIR ../..\n#  WORKDIR tiff-${TIFF_VERSION}\n#  RUN make distclean\n#  WORKDIR ..\n#  WORKDIR libwebp-${LIBWEBP_VERSION}\n#  RUN make distclean\n#  WORKDIR ..\nWORKDIR libimagequant-${LIQ_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR freetype-${FREETYPE2_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR expat-${EXPAT_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR fontconfig-${FONTCONFIG_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR libgd-${LIBGD_VERSION}\nRUN make distclean\nWORKDIR ..\nWORKDIR boost_${BOOST_VERSION_MANGLED}\nRUN ./b2 install --prefix=${C} toolset=gcc-mingw target-os=windows --with-filesystem --with-program_options --with-regex variant=release link=static runtime-link=static --clean \\\n && rm -r bin.v2\nWORKDIR ..\nWORKDIR audiowaveform-${AUDIOWAVEFORM_VERSION}\nWORKDIR build\nRUN make clean\nWORKDIR ..\nRUN rm -r build\nWORKDIR ..\n#   Compile for Win64\nENV CROSS_ARCH=\"x86_64-w64-mingw32\"\nENV BUILD_ARCH=\"x86_64-pc-linux-gnu\"\n#   Create pkg-config\nWORKDIR bin\nCOPY pkg-config .\nRUN chmod 0755 pkg-config \\\n && mv pkg-config ${CROSS_ARCH}-pkg-config\nWORKDIR ..\n#   Compile libiconv\nWORKDIR libiconv-${LIBICONV_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --disable-shared --enable-static \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile zlib\nWORKDIR zlib-${ZLIB_VERSION}\nRUN CC=${CROSS_ARCH}-gcc ./configure --prefix ${C} --static \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libmad\nWORKDIR libmad-${LIBMAD_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libid3tag\nWORKDIR libid3tag-${LIBID3TAG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libogg\nWORKDIR libogg-${LIBOGG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libvorbis\nWORKDIR libvorbis-${LIBVORBIS_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile FLAC\nWORKDIR flac-${FLAC_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-doxygen-docs \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libsndfile\nWORKDIR libsndfile-${LIBSNDFILE_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" --disable-sqlite \\\n && make \\\n && make install\nWORKDIR ..\nENV SNDFILE_CFLAGS=\"\\\"-I${C}/include\\\"\"\nENV SNDFILE_LIBS=\"\\\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -lm -logg -lsndfile\\\"\"\n#   Compile libpng\nWORKDIR libpng-${LIBPNG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared CFLAGS=\"-I${C}/include -L${C}/lib\" CPPFLAGS=\"-I${C}/include\" \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile jpeg\n#  WORKDIR jpeg-${JPEG_VERSION}\n#  RUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Compile tiff\n#  WORKDIR jbigkit-${JBIGKIT_VERSION}/libjbig\n#  RUN make CC=${CROSS_ARCH}-gcc && \\\n#      cp *.a ${C}/lib && \\\n#      cp *.h ${C}/include\n#  WORKDIR ../..\n#   Compile tiff\n#  WORKDIR tiff-${TIFF_VERSION}\n#  RUN CPPFLAGS=\"-I${C}/include -L${C}/lib\" LDFLAGS=\"-L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Compile libwebp\n#  WORKDIR libwebp-${LIBWEBP_VERSION}\n#  RUN CPPFLAGS=\"-I${C}/include -L${C}/lib\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --enable-libwebpmux --enable-libwebpdemux --enable-libwebpdecoder && \\\n#      make && \\\n#      make install\n#  WORKDIR ..\n#   Compile liq (libimagequant)\nWORKDIR libimagequant-${LIQ_VERSION}\nRUN make CC=${CROSS_ARCH}-gcc static \\\n && ${CROSS_ARCH}-ranlib libimagequant.a \\\n && cp libimagequant.h ${C}/include \\\n && cp libimagequant.a ${C}/lib\nWORKDIR ..\n#   Compile freetype\nWORKDIR freetype-${FREETYPE2_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile expat\nWORKDIR expat-${EXPAT_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared --without-xmlwf \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile fontconfig\nWORKDIR fontconfig-${FONTCONFIG_VERSION}\nRUN ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile libgd\nWORKDIR libgd-${LIBGD_VERSION}\n#   Define taken from https://github.com/mxe/mxe/blob/master/src/gd.mk\nRUN CFLAGS=\"-DNONDLL\" ./configure --prefix=${C} --host=${CROSS_ARCH} --build=${BUILD_ARCH} --enable-static --disable-shared \\\n && make \\\n && make install\nWORKDIR ..\n#   Compile boost\nWORKDIR ${BOOST_BUILD_PATH}\nRUN echo \"using gcc : mingw : ${CROSS_ARCH}-g++ ;\" > user-config.jam\nWORKDIR ..\nWORKDIR boost_${BOOST_VERSION_MANGLED}\nRUN ./bootstrap.sh \\\n && ./b2 install --prefix=${C} toolset=gcc-mingw target-os=windows --with-filesystem --with-program_options --with-regex variant=release link=static runtime-link=static address-model=64\nWORKDIR ..\n#   Compile audiowaveform\nWORKDIR audiowaveform-${AUDIOWAVEFORM_VERSION}\nWORKDIR build\nCOPY ${CROSS_ARCH}.cmake .\nRUN cmake -DCMAKE_TOOLCHAIN_FILE=${C}/audiowaveform-${AUDIOWAVEFORM_VERSION}/build/${CROSS_ARCH}.cmake -DCMAKE_INSTALL_PREFIX=${C} -DENABLE_TESTS=0 -DCMAKE_CXX_FLAGS_RELEASE=\"-O3 -DNDEBUG -DBGDWIN32 -static-libgcc -static-libstdc++ -static\" -DCMAKE_FIND_LIBRARY_SUFFIXES=\".a\" -DEXTRA_LIBS=\"-L${C}/lib -lFLAC -lvorbisenc -lvorbis -logg -lpng -lz\" .. \\\n && make \\\n && make install\nWORKDIR ../..\n#   Strip binaries\nRUN $CROSS_ARCH-strip bin/*.exe\n#   Create mingw64 archive\nRUN zip -r -9 audiowaveform-mingw64.zip bin/ etc/ include/ lib/ share/\n","originalDockerfileUglifiedHash":"ac1e83be6480c793d75493d6211ffe1c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b339837ffb02bb51da521f02badda3f27eae8acd.dockerfile"}