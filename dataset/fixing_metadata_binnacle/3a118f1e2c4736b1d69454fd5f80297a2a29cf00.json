{"seed":531961282,"processedDockerfileHash":"f2d520b81d871229efcc1c4fd6ed4240","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\n#   Ubuntu 18.04 (bionic) from 2018-05-26\n#   https://github.com/docker-library/official-images/commit/aac6a45b9eb2bffb8102353c350d341a410fb169\nARG BASE_CONTAINER=ubuntu:bionic-20180526@sha256:c8c275751219dadad8fa56b3ac41ca6cb22219ff117ca98fe82b42f24e1ba64e\nFROM $BASE_CONTAINER\nLABEL maintainer=\"Jupyter Project <jupyter@googlegroups.com>\"\nARG NB_USER=\"jovyan\"\nARG NB_UID=\"1000\"\nARG NB_GID=\"100\"\nUSER root\n#   Install all OS dependencies for notebook server that starts but lacks all\n#   features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends wget=1.21.3-1ubuntu1 bzip2=1.0.8-5build1 ca-certificates=20230311 sudo=1.9.13p1-1ubuntu2 locales=2.37-0ubuntu2 fonts-liberation=1:1.07.4-11 -yq \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"$NB_USER\" \\\n    NB_UID=\"$NB_UID\" \\\n    NB_GID=\"$NB_GID\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\n#   Add a script that we will use to correct permissions after running certain commands\nCOPY fix-permissions /usr/local/bin/fix-permissions\n#   Enable prompt color in the skeleton .bashrc before creating the default NB_USER\nRUN sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc\n#   Create NB_USER wtih name jovyan user with UID=1000 and in the 'users' group\n#   and make sure these dirs are writable by the `users` group.\nRUN echo \"auth requisite pam_deny.so\" >> /etc/pam.d/su \\\n && sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers \\\n && sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers \\\n && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && chmod g+w /etc/passwd \\\n && fix-permissions $HOME \\\n && fix-permissions \"$( dirname $CONDA_DIR ;)\"\nUSER $NB_UID\n#   Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\n#   Install conda as jovyan and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"4.5.12\" \\\n    CONDA_VERSION=\"4.6.7\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"866ae9dff53ad0874e1d1a60b1ad1ef8 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda install --quiet --yes conda=\"${CONDA_VERSION%.*}.*\" \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda list python | grep '^python ' | tr -s ' ' | cut -d '.' -f 1,2 | sed 's/$/.*/' >> $CONDA_DIR/conda-meta/pinned \\\n && conda clean --all -f -y \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Tini\nRUN conda install --quiet --yes 'tini=0.18.0' \\\n && conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned \\\n && conda clean --all -f -y \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Jupyter Notebook, Lab, and Hub\n#   Generate a notebook server config\n#   Cleanup temporary files\n#   Correct permissions\n#   Do all this in a single RUN command to avoid duplicating all of the\n#   files across image layers when the permissions change\nRUN conda install --quiet --yes 'notebook=5.7.8' 'jupyterhub=1.0.0' 'jupyterlab=0.35.5' \\\n && conda clean --all -f -y \\\n && jupyter labextension install @jupyterlab/hub-extension@^0.12.0 \\\n && npm cache clean --force \\\n && jupyter notebook --generate-config \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nUSER root\nEXPOSE 8888/tcp\nWORKDIR $HOME\n#   Configure container startup\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\n#   Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) Jupyter Development Team.\n#  Distributed under the terms of the Modified BSD License.\n#  Ubuntu 18.04 (bionic) from 2018-05-26\n#  https://github.com/docker-library/official-images/commit/aac6a45b9eb2bffb8102353c350d341a410fb169\nARG BASE_CONTAINER=ubuntu:bionic-20180526@sha256:c8c275751219dadad8fa56b3ac41ca6cb22219ff117ca98fe82b42f24e1ba64e\nFROM $BASE_CONTAINER\nLABEL maintainer=\"Jupyter Project <jupyter@googlegroups.com>\"\nARG NB_USER=\"jovyan\"\nARG NB_UID=\"1000\"\nARG NB_GID=\"100\"\nUSER root\n#  Install all OS dependencies for notebook server that starts but lacks all\n#  features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends wget bzip2 ca-certificates sudo locales fonts-liberation -yq \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#  Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"$NB_USER\" \\\n    NB_UID=\"$NB_UID\" \\\n    NB_GID=\"$NB_GID\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\n#  Add a script that we will use to correct permissions after running certain commands\nADD fix-permissions /usr/local/bin/fix-permissions\n#  Enable prompt color in the skeleton .bashrc before creating the default NB_USER\nRUN sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc\n#  Create NB_USER wtih name jovyan user with UID=1000 and in the 'users' group\n#  and make sure these dirs are writable by the `users` group.\nRUN echo \"auth requisite pam_deny.so\" >> /etc/pam.d/su \\\n && sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers \\\n && sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers \\\n && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && chmod g+w /etc/passwd \\\n && fix-permissions $HOME \\\n && fix-permissions \"$( dirname $CONDA_DIR ;)\"\nUSER $NB_UID\n#  Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\n#  Install conda as jovyan and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"4.5.12\" \\\n    CONDA_VERSION=\"4.6.7\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"866ae9dff53ad0874e1d1a60b1ad1ef8 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda install --quiet --yes conda=\"${CONDA_VERSION%.*}.*\" \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda list python | grep '^python ' | tr -s ' ' | cut -d '.' -f 1,2 | sed 's/$/.*/' >> $CONDA_DIR/conda-meta/pinned \\\n && conda clean --all -f -y \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#  Install Tini\nRUN conda install --quiet --yes 'tini=0.18.0' \\\n && conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned \\\n && conda clean --all -f -y \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#  Install Jupyter Notebook, Lab, and Hub\n#  Generate a notebook server config\n#  Cleanup temporary files\n#  Correct permissions\n#  Do all this in a single RUN command to avoid duplicating all of the\n#  files across image layers when the permissions change\nRUN conda install --quiet --yes 'notebook=5.7.8' 'jupyterhub=1.0.0' 'jupyterlab=0.35.5' \\\n && conda clean --all -f -y \\\n && jupyter labextension install @jupyterlab/hub-extension@^0.12.0 \\\n && npm cache clean --force \\\n && jupyter notebook --generate-config \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nUSER root\nEXPOSE 8888/tcp\nWORKDIR $HOME\n#  Configure container startup\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#  Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\n#  Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n","injectedSmells":[],"originalDockerfileHash":"411449a574f41c9bd4e227641fb515c2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\n#   Ubuntu 18.04 (bionic) from 2018-05-26\n#   https://github.com/docker-library/official-images/commit/aac6a45b9eb2bffb8102353c350d341a410fb169\nARG BASE_CONTAINER=ubuntu:bionic-20180526@sha256:c8c275751219dadad8fa56b3ac41ca6cb22219ff117ca98fe82b42f24e1ba64e\nFROM $BASE_CONTAINER\nLABEL maintainer=\"Jupyter Project <jupyter@googlegroups.com>\"\nARG NB_USER=\"jovyan\"\nARG NB_UID=\"1000\"\nARG NB_GID=\"100\"\nUSER root\n#   Install all OS dependencies for notebook server that starts but lacks all\n#   features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends wget bzip2 ca-certificates sudo locales fonts-liberation -yq \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"$NB_USER\" \\\n    NB_UID=\"$NB_UID\" \\\n    NB_GID=\"$NB_GID\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\n#   Add a script that we will use to correct permissions after running certain commands\nADD fix-permissions /usr/local/bin/fix-permissions\n#   Enable prompt color in the skeleton .bashrc before creating the default NB_USER\nRUN sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc\n#   Create NB_USER wtih name jovyan user with UID=1000 and in the 'users' group\n#   and make sure these dirs are writable by the `users` group.\nRUN echo \"auth requisite pam_deny.so\" >> /etc/pam.d/su \\\n && sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers \\\n && sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers \\\n && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && chmod g+w /etc/passwd \\\n && fix-permissions $HOME \\\n && fix-permissions \"$( dirname $CONDA_DIR ;)\"\nUSER $NB_UID\n#   Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\n#   Install conda as jovyan and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"4.5.12\" \\\n    CONDA_VERSION=\"4.6.7\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"866ae9dff53ad0874e1d1a60b1ad1ef8 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda install --quiet --yes conda=\"${CONDA_VERSION%.*}.*\" \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda list python | grep '^python ' | tr -s ' ' | cut -d '.' -f 1,2 | sed 's/$/.*/' >> $CONDA_DIR/conda-meta/pinned \\\n && conda clean --all -f -y \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Tini\nRUN conda install --quiet --yes 'tini=0.18.0' \\\n && conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned \\\n && conda clean --all -f -y \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Jupyter Notebook, Lab, and Hub\n#   Generate a notebook server config\n#   Cleanup temporary files\n#   Correct permissions\n#   Do all this in a single RUN command to avoid duplicating all of the\n#   files across image layers when the permissions change\nRUN conda install --quiet --yes 'notebook=5.7.8' 'jupyterhub=1.0.0' 'jupyterlab=0.35.5' \\\n && conda clean --all -f -y \\\n && jupyter labextension install @jupyterlab/hub-extension@^0.12.0 \\\n && npm cache clean --force \\\n && jupyter notebook --generate-config \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nUSER root\nEXPOSE 8888/tcp\nWORKDIR $HOME\n#   Configure container startup\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\n#   Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n","originalDockerfileUglifiedHash":"e96b8de58adaa9ab01a9742638c7d0cd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3a118f1e2c4736b1d69454fd5f80297a2a29cf00.dockerfile"}