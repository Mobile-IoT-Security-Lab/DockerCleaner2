{"seed":1578496091,"processedDockerfileHash":"509799f8dac12c2f452b2366a7dca830","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM gzynda/tacc-ubuntu18-mvapich2.3psm2:stampede2\nMAINTAINER https://github.com/underworldcode/\n#   install things\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends build-essential git python-dev python-pip libxml2-dev xorg-dev libfreetype6-dev libpng-dev libxft-dev xvfb freeglut3 freeglut3-dev libgl1-mesa-dri libgl1-mesa-glx xauth swig wget cmake gdb \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV LANG=\"C.UTF-8\"\n#   Install setuptools and wheel first, needed by plotly\nRUN pip install setuptools==67.6.1 -U \\\n && pip install wheel==0.40.0 -U \\\n && pip install packaging==23.1 appdirs==1.4.4 numpy==1.24.2 jupyter==1.0.0 matplotlib==3.7.1 pillow==9.5.0 pyvirtualdisplay==3.0 ipython==8.12.0 pint==0.20.1 scipy==1.10.1 tabulate==0.9.0 mpi4py==3.1.4 wget==3.2 --no-cache-dir\nWORKDIR /tmp/petsc-build\nRUN wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-3.9.3.tar.gz \\\n && tar zxf petsc-lite-3.9.3.tar.gz \\\n && cd petsc-3.9.3 \\\n && ./configure --with-debugging=0 --prefix=/usr --COPTFLAGS=\"-g -O3\" --CXXOPTFLAGS=\"-g -O3\" --FOPTFLAGS=\"-g -O3\" --with-zlib=1 --download-fblaslapack=1 --download-hdf5=1 --download-mumps=1 --download-parmetis=1 --download-metis=1 --download-superlu=1 --download-hypre=1 --download-scalapack=1 --download-superlu_dist=1 --download-superlu=1 \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install \\\n && cd /tmp \\\n && rm -fr *\nENV PYTHONPATH=\"$PYTHONPATH:/usr/lib\"\nRUN CC=h5pcc HDF5_MPI=\"ON\" pip install --no-cache-dir --no-binary=h5py h5py\nENV NB_WORK=\"/workspace\"\n#   create a volume\nVOLUME $NB_WORK/user_data\nWORKDIR $NB_WORK\nWORKDIR /opt\nENV UW2_DIR=\"/opt/underworld2\"\nRUN mkdir $UW2_DIR\nENV PYTHONPATH=\"$PYTHONPATH:$UW2_DIR\"\nCOPY . $UW2_DIR/\n#   get underworld, compile, delete some unnecessary files, trust notebooks, copy to workspace\nRUN cd /opt/underworld2/libUnderworld \\\n && ./configure.py --with-debugging=0 \\\n && ./compile.py \\\n && rm -fr h5py_ext \\\n && rm .sconsign.dblite \\\n && rm -fr .sconf_temp \\\n && cd build \\\n && rm -fr libUnderworldPy \\\n && rm -fr StGermain \\\n && rm -fr gLucifer \\\n && rm -fr Underworld \\\n && rm -fr StgFEM \\\n && rm -fr StgDomain \\\n && rm -fr PICellerator \\\n && rm -fr Solvers\nRUN pip install lavavu==1.8.45 --no-cache-dir\nENV GLUCIFER_USE_XVFB=\"1\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM gzynda/tacc-ubuntu18-mvapich2.3psm2:stampede2\nMAINTAINER https://github.com/underworldcode/\n#  install things\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends build-essential git python-dev python-pip libxml2-dev xorg-dev libfreetype6-dev libpng-dev libxft-dev xvfb freeglut3 freeglut3-dev libgl1-mesa-dri libgl1-mesa-glx xauth swig wget cmake gdb \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV LANG=\"C.UTF-8\"\n#  Install setuptools and wheel first, needed by plotly\nRUN pip install setuptools -U \\\n && pip install wheel -U \\\n && pip install packaging appdirs numpy jupyter matplotlib pillow pyvirtualdisplay ipython pint scipy tabulate mpi4py wget --no-cache-dir\nWORKDIR /tmp/petsc-build\nRUN wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-3.9.3.tar.gz \\\n && tar zxf petsc-lite-3.9.3.tar.gz \\\n && cd petsc-3.9.3 \\\n && ./configure --with-debugging=0 --prefix=/usr --COPTFLAGS=\"-g -O3\" --CXXOPTFLAGS=\"-g -O3\" --FOPTFLAGS=\"-g -O3\" --with-zlib=1 --download-fblaslapack=1 --download-hdf5=1 --download-mumps=1 --download-parmetis=1 --download-metis=1 --download-superlu=1 --download-hypre=1 --download-scalapack=1 --download-superlu_dist=1 --download-superlu=1 \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install \\\n && cd /tmp \\\n && rm -fr *\nENV PYTHONPATH=\"$PYTHONPATH:/usr/lib\"\nRUN CC=h5pcc HDF5_MPI=\"ON\" pip install --no-cache-dir --no-binary=h5py h5py\nENV NB_WORK=\"/workspace\"\n#  create a volume\nVOLUME $NB_WORK/user_data\nWORKDIR $NB_WORK\nWORKDIR /opt\nENV UW2_DIR=\"/opt/underworld2\"\nRUN mkdir $UW2_DIR\nENV PYTHONPATH=\"$PYTHONPATH:$UW2_DIR\"\nCOPY . $UW2_DIR/\n#  get underworld, compile, delete some unnecessary files, trust notebooks, copy to workspace\nRUN cd /opt/underworld2/libUnderworld \\\n && ./configure.py --with-debugging=0 \\\n && ./compile.py \\\n && rm -fr h5py_ext \\\n && rm .sconsign.dblite \\\n && rm -fr .sconf_temp \\\n && cd build \\\n && rm -fr libUnderworldPy \\\n && rm -fr StGermain \\\n && rm -fr gLucifer \\\n && rm -fr Underworld \\\n && rm -fr StgFEM \\\n && rm -fr StgDomain \\\n && rm -fr PICellerator \\\n && rm -fr Solvers\nRUN pip install lavavu --no-cache-dir\nENV GLUCIFER_USE_XVFB=\"1\"\n","injectedSmells":[],"originalDockerfileHash":"8d3ffff60f7bad2d0ba465075e15f05b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM gzynda/tacc-ubuntu18-mvapich2.3psm2:stampede2\nMAINTAINER https://github.com/underworldcode/\n#   install things\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends build-essential git python-dev python-pip libxml2-dev xorg-dev libfreetype6-dev libpng-dev libxft-dev xvfb freeglut3 freeglut3-dev libgl1-mesa-dri libgl1-mesa-glx xauth swig wget cmake gdb \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV LANG=\"C.UTF-8\"\n#   Install setuptools and wheel first, needed by plotly\nRUN pip install setuptools -U \\\n && pip install wheel -U \\\n && pip install packaging appdirs numpy jupyter matplotlib pillow pyvirtualdisplay ipython pint scipy tabulate mpi4py wget --no-cache-dir\nWORKDIR /tmp/petsc-build\nRUN wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-3.9.3.tar.gz \\\n && tar zxf petsc-lite-3.9.3.tar.gz \\\n && cd petsc-3.9.3 \\\n && ./configure --with-debugging=0 --prefix=/usr --COPTFLAGS=\"-g -O3\" --CXXOPTFLAGS=\"-g -O3\" --FOPTFLAGS=\"-g -O3\" --with-zlib=1 --download-fblaslapack=1 --download-hdf5=1 --download-mumps=1 --download-parmetis=1 --download-metis=1 --download-superlu=1 --download-hypre=1 --download-scalapack=1 --download-superlu_dist=1 --download-superlu=1 \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all \\\n && make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install \\\n && cd /tmp \\\n && rm -fr *\nENV PYTHONPATH=\"$PYTHONPATH:/usr/lib\"\nRUN CC=h5pcc HDF5_MPI=\"ON\" pip install --no-cache-dir --no-binary=h5py h5py\nENV NB_WORK=\"/workspace\"\n#   create a volume\nVOLUME $NB_WORK/user_data\nWORKDIR $NB_WORK\nWORKDIR /opt\nENV UW2_DIR=\"/opt/underworld2\"\nRUN mkdir $UW2_DIR\nENV PYTHONPATH=\"$PYTHONPATH:$UW2_DIR\"\nCOPY . $UW2_DIR/\n#   get underworld, compile, delete some unnecessary files, trust notebooks, copy to workspace\nRUN cd /opt/underworld2/libUnderworld \\\n && ./configure.py --with-debugging=0 \\\n && ./compile.py \\\n && rm -fr h5py_ext \\\n && rm .sconsign.dblite \\\n && rm -fr .sconf_temp \\\n && cd build \\\n && rm -fr libUnderworldPy \\\n && rm -fr StGermain \\\n && rm -fr gLucifer \\\n && rm -fr Underworld \\\n && rm -fr StgFEM \\\n && rm -fr StgDomain \\\n && rm -fr PICellerator \\\n && rm -fr Solvers\nRUN pip install lavavu --no-cache-dir\nENV GLUCIFER_USE_XVFB=\"1\"\n","originalDockerfileUglifiedHash":"96350d2ea40d0b28f5019b275efa1d0c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c33e53862be904f9489491c12a3a5c582b1ba590.dockerfile"}