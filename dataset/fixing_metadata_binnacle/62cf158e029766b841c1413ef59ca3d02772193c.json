{"seed":1305301515,"processedDockerfileHash":"27108b7a41ba7ae41c54dc0d10b5fdea","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:7.5-cudnn4-devel\nMAINTAINER Sai Soundararaj <saip@outlook.com>\nARG THEANO_VERSION=rel-0.8.2\nARG TENSORFLOW_VERSION=0.8.0\nARG TENSORFLOW_ARCH=gpu\nARG KERAS_VERSION=1.0.3\nARG LASAGNE_VERSION=v0.1\nARG TORCH_VERSION=latest\nARG CAFFE_VERSION=master\n#  RUN echo -e \"\\n**********************\\nNVIDIA Driver Version\\n**********************\\n\" && \\\n#  \tcat /proc/driver/nvidia/version && \\\n#  \techo -e \"\\n**********************\\nCUDA Version\\n**********************\\n\" && \\\n#  \tnvcc -V && \\\n#  \techo -e \"\\n\\nBuilding your Deep Learning Docker Image...\\n\"\n#   Install some dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg2 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Add SNI support to Python\nRUN pip install pyopenssl==23.1.1 ndg-httpsclient==0.5.1 pyasn1==0.4.8 --no-cache-dir\n#   Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n#   especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install other useful Python packages using pip\nRUN pip install ipython==8.12.0 --no-cache-dir --upgrade \\\n && pip install Cython==0.29.34 ipykernel==6.22.0 jupyter==1.0.0 path.py==12.5.0 Pillow==9.5.0 pygments==2.15.0 six==1.16.0 sphinx==6.1.3 wheel==0.40.0 zmq==0.0.0 --no-cache-dir \\\n && python -m ipykernel.kernelspec\n#   Install TensorFlow\nRUN pip install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl --no-cache-dir\n#   Install dependencies for Caffe\nRUN apt-get update \\\n && apt-get install --no-install-recommends libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Caffe \nRUN git clone -b ${CAFFE_VERSION} --depth 1 https://github.com/BVLC/caffe.git /root/caffe \\\n && cd /root/caffe \\\n && cat python/requirements.txt | xargs -n1 pip install \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_CUDNN=1 -DBLAS=Open .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Set up Caffe environment variables\nENV CAFFE_ROOT=\"/root/caffe\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:7.5-cudnn4-devel\nMAINTAINER Sai Soundararaj <saip@outlook.com>\nARG THEANO_VERSION=rel-0.8.2\nARG TENSORFLOW_VERSION=0.8.0\nARG TENSORFLOW_ARCH=gpu\nARG KERAS_VERSION=1.0.3\nARG LASAGNE_VERSION=v0.1\nARG TORCH_VERSION=latest\nARG CAFFE_VERSION=master\n# RUN echo -e \"\\n**********************\\nNVIDIA Driver Version\\n**********************\\n\" && \\\n# \tcat /proc/driver/nvidia/version && \\\n# \techo -e \"\\n**********************\\nCUDA Version\\n**********************\\n\" && \\\n# \tnvcc -V && \\\n# \techo -e \"\\n\\nBuilding your Deep Learning Docker Image...\\n\"\n#  Install some dependencies\nRUN apt-get update \\\n && apt-get install bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg2 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#  Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#  Add SNI support to Python\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --no-cache-dir\n#  Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n#  especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update \\\n && apt-get install python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#  Install other useful Python packages using pip\nRUN pip install ipython --no-cache-dir --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq --no-cache-dir \\\n && python -m ipykernel.kernelspec\n#  Install TensorFlow\nRUN pip install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl --no-cache-dir\n#  Install dependencies for Caffe\nRUN apt-get update \\\n && apt-get install libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#  Install Caffe \nRUN git clone -b ${CAFFE_VERSION} --depth 1 https://github.com/BVLC/caffe.git /root/caffe \\\n && cd /root/caffe \\\n && cat python/requirements.txt | xargs -n1 pip install \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_CUDNN=1 -DBLAS=Open .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#  Set up Caffe environment variables\nENV CAFFE_ROOT=\"/root/caffe\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\n","injectedSmells":[],"originalDockerfileHash":"56e965f9db73db20ba6612aa4dcd520b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:7.5-cudnn4-devel\nMAINTAINER Sai Soundararaj <saip@outlook.com>\nARG THEANO_VERSION=rel-0.8.2\nARG TENSORFLOW_VERSION=0.8.0\nARG TENSORFLOW_ARCH=gpu\nARG KERAS_VERSION=1.0.3\nARG LASAGNE_VERSION=v0.1\nARG TORCH_VERSION=latest\nARG CAFFE_VERSION=master\n#  RUN echo -e \"\\n**********************\\nNVIDIA Driver Version\\n**********************\\n\" && \\\n#  \tcat /proc/driver/nvidia/version && \\\n#  \techo -e \"\\n**********************\\nCUDA Version\\n**********************\\n\" && \\\n#  \tnvcc -V && \\\n#  \techo -e \"\\n\\nBuilding your Deep Learning Docker Image...\\n\"\n#   Install some dependencies\nRUN apt-get update \\\n && apt-get install bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg2 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Add SNI support to Python\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --no-cache-dir\n#   Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n#   especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update \\\n && apt-get install python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install other useful Python packages using pip\nRUN pip install ipython --no-cache-dir --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq --no-cache-dir \\\n && python -m ipykernel.kernelspec\n#   Install TensorFlow\nRUN pip install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl --no-cache-dir\n#   Install dependencies for Caffe\nRUN apt-get update \\\n && apt-get install libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Caffe \nRUN git clone -b ${CAFFE_VERSION} --depth 1 https://github.com/BVLC/caffe.git /root/caffe \\\n && cd /root/caffe \\\n && cat python/requirements.txt | xargs -n1 pip install \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_CUDNN=1 -DBLAS=Open .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Set up Caffe environment variables\nENV CAFFE_ROOT=\"/root/caffe\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\n","originalDockerfileUglifiedHash":"c00fc6ce3c96da21a9f31303f3e14e23","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/62cf158e029766b841c1413ef59ca3d02772193c.dockerfile"}