{"seed":152860068,"processedDockerfileHash":"74169c71003eeda58fd43d5376d80ad6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM library/ubuntu:16.04\nMAINTAINER Chris Harris <chris.harris@kitware.com>\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 wget=1.17.1-1ubuntu1.5 cmake=3.5.1-1ubuntu3 python=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 python3=3.5.1-3 python3-pip=8.1.1-2ubuntu0.6 python3-dev=3.5.1-3 g++=4:5.3.1-1ubuntu1 libtbb-dev=4.4~20151115-0ubuntu3 libgl1-mesa-dev=18.0.5-0ubuntu0~16.04.1 libglu1-mesa-dev=9.0.0-2.1 libxt-dev=1:1.1.5-0ubuntu1 -y\nRUN pip3 install -U pip \\\n && pip3 install numpy\n#   Build and install ninja.\nARG NINJA_VERSION=v1.7.2\nRUN git clone -b $NINJA_VERSION https://github.com/martine/ninja.git \\\n && cd ninja \\\n && ./configure.py --bootstrap \\\n && mv ninja /usr/bin/ \\\n && cd .. \\\n && rm -rf ninja\n#   Build and install googletest\nARG GTEST_VERSION=release-1.8.0\nRUN git clone -b $GTEST_VERSION https://github.com/google/googletest.git \\\n && mkdir googletest-build \\\n && cd googletest-build \\\n && cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/googletest ../googletest \\\n && cmake --build . --target install \\\n && rm -rf googletest\n#   Build and install Qt\nARG QT_VERSION=5.8.0\nARG QT_BASE_DOWNLOAD_URL=http://download.qt.io/official_releases/qt/5.8/5.8.0/single/\nENV QT_DIR=\"qt-everywhere-opensource-src-$QT_VERSION\"\nENV QT_TARBALL=\"$QT_DIR.tar.gz\"\nENV QT_DOWNLOAD_URL=\"$QT_BASE_DOWNLOAD_URL/$QT_TARBALL\"\nRUN wget $QT_DOWNLOAD_URL \\\n && md5=$( md5sum ./$QT_TARBALL | awk '{ print $1 }' ;) \\\n && [ $md5 = \"a9f2494f75f966e2f22358ec367d8f41\" ] \\\n && tar -xzvf $QT_TARBALL \\\n && rm $QT_TARBALL \\\n && cd $QT_DIR \\\n && ./configure -opensource -release -confirm-license -nomake examples -skip qtconnectivity -skip qtlocation -skip qtmultimedia -skip qtsensors -skip qtserialport -skip qtsvg -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebsockets -no-dbus -no-openssl -qt-libjpeg -qt-pcre \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf $QT_DIR\n#   Build and install ITK\nARG ITK_VERSION=v4.11.0\nRUN git clone -b $ITK_VERSION git://itk.org/ITK.git \\\n && mkdir itk-build \\\n && cd itk-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DITK_LEGACY_REMOVE:BOOL=ON -DITK_LEGACY_SILENT:BOOL=ON -DModule_BridgeNumPy:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DITK_WRAP_unsigned_short:BOOL=ON -DITK_BUILD_DEFAULT_MODULES:BOOL=OFF -DITKGroup_Core:BOOL=ON -DITKGroup_Filtering:BOOL=ON -DITKGroup_Segmentation:BOOL=ON -DITKGroup_Registration:BOOL=ON -DITKGroup_Nonunit:BOOL=ON -DITK_WRAP_PYTHON:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_INSTALL_PREFIX:PATH=/opt/itk -DPYTHON_EXECUTABLE:PATH=/usr/bin/python3 ../ITK \\\n && cmake --build . --target install \\\n && cd .. \\\n && rm -rf ITK \\\n && rm -rf itk-build\n#   Build and install ParaView\nARG PARAVIEW_VERSION=f700a4d7f32ccb7e31f1da6e6fd1c6188dac2feb\nRUN git clone --recursive git://github.com/kitware/paraview.git \\\n && cd paraview \\\n && git checkout $PARAVIEW_VERSION \\\n && git submodule update \\\n && cd .. \\\n && mkdir paraview-build \\\n && cd paraview-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -DPARAVIEW_ENABLE_CATALYST:BOOL=OFF -DPARAVIEW_ENABLE_PYTHON:BOOL=ON -DPARAVIEW_QT_VERSION:STRING=5 -DPARAVIEW_ENABLE_WEB:BOOL=OFF -DPARAVIEW_ENABLE_EMBEDDED_DOCUMENTATION:BOOL=OFF -DPARAVIEW_USE_QTHELP:BOOL=OFF -DVTK_RENDERING_BACKEND:STRING=OpenGL2 -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=TBB -DVTK_PYTHON_FULL_THREADSAFE:BOOL=ON -DVTK_NO_PYTHON_THREADS:BOOL=OFF -DQt5_DIR:PATH=/usr/local/Qt-5.8.0/lib/cmake/Qt5 -DVTK_PYTHON_VERSION:STRING=3 ../paraview \\\n && cmake --build . \\\n && cd .. \\\n && rm -rf paraview/.git \\\n && find paraview-build -name '*.o' -delete \\\n && find paraview-build -name '*.cxx' -delete\n#   Provide paths to downstream builds\nONBUILD ENV QT5_DIR=\"/usr/local/Qt-5.8.0/lib/cmake/Qt5\"\nONBUILD ENV PARAVIEW_DIR=\"/paraview-build\"\nONBUILD ENV ITK_DIR=\"/opt/itk/lib/cmake/ITK-4.11\"\nONBUILD ENV GTEST_LIBRARY=\"/opt/googletest/lib/libgtest.a\"\nONBUILD ENV GTEST_MAIN_LIBRARY=\"/opt/googletest/lib/libgtest_main.a\"\nONBUILD ENV GTEST_INCLUDE_DIR=\"/opt/googletest/include\"\nARG BUILD_DATE\nARG IMAGE=tomviz-dependencies\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.build-date=\"BUILD_DATE\" \\\n      org.label-schema.name=\"$IMAGE\" \\\n      org.label-schema.description=\"Base image containing tomviz dependencies\" \\\n      org.label-schema.url=\"https://github.com/OpenChemistry/tomviz\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM library/ubuntu:16.04\nMAINTAINER Chris Harris <chris.harris@kitware.com>\nRUN apt-get update \\\n && apt-get install git wget cmake python python-pip python3 python3-pip python3-dev g++ libtbb-dev libgl1-mesa-dev libglu1-mesa-dev libxt-dev -y\nRUN pip3 install -U pip \\\n && pip3 install numpy\n#  Build and install ninja.\nARG NINJA_VERSION=v1.7.2\nRUN git clone -b $NINJA_VERSION https://github.com/martine/ninja.git \\\n && cd ninja \\\n && ./configure.py --bootstrap \\\n && mv ninja /usr/bin/ \\\n && cd .. \\\n && rm -rf ninja\n#  Build and install googletest\nARG GTEST_VERSION=release-1.8.0\nRUN git clone -b $GTEST_VERSION https://github.com/google/googletest.git \\\n && mkdir googletest-build \\\n && cd googletest-build \\\n && cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/googletest ../googletest \\\n && cmake --build . --target install \\\n && rm -rf googletest\n#  Build and install Qt\nARG QT_VERSION=5.8.0\nARG QT_BASE_DOWNLOAD_URL=http://download.qt.io/official_releases/qt/5.8/5.8.0/single/\nENV QT_DIR=\"qt-everywhere-opensource-src-$QT_VERSION\"\nENV QT_TARBALL=\"$QT_DIR.tar.gz\"\nENV QT_DOWNLOAD_URL=\"$QT_BASE_DOWNLOAD_URL/$QT_TARBALL\"\nRUN wget $QT_DOWNLOAD_URL \\\n && md5=$( md5sum ./$QT_TARBALL | awk '{ print $1 }' ;) \\\n && [ $md5 = \"a9f2494f75f966e2f22358ec367d8f41\" ] \\\n && tar -xzvf $QT_TARBALL \\\n && rm $QT_TARBALL \\\n && cd $QT_DIR \\\n && ./configure -opensource -release -confirm-license -nomake examples -skip qtconnectivity -skip qtlocation -skip qtmultimedia -skip qtsensors -skip qtserialport -skip qtsvg -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebsockets -no-dbus -no-openssl -qt-libjpeg -qt-pcre \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf $QT_DIR\n#  Build and install ITK\nARG ITK_VERSION=v4.11.0\nRUN git clone -b $ITK_VERSION git://itk.org/ITK.git \\\n && mkdir itk-build \\\n && cd itk-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DITK_LEGACY_REMOVE:BOOL=ON -DITK_LEGACY_SILENT:BOOL=ON -DModule_BridgeNumPy:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DITK_WRAP_unsigned_short:BOOL=ON -DITK_BUILD_DEFAULT_MODULES:BOOL=OFF -DITKGroup_Core:BOOL=ON -DITKGroup_Filtering:BOOL=ON -DITKGroup_Segmentation:BOOL=ON -DITKGroup_Registration:BOOL=ON -DITKGroup_Nonunit:BOOL=ON -DITK_WRAP_PYTHON:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_INSTALL_PREFIX:PATH=/opt/itk -DPYTHON_EXECUTABLE:PATH=/usr/bin/python3 ../ITK \\\n && cmake --build . --target install \\\n && cd .. \\\n && rm -rf ITK \\\n && rm -rf itk-build\n#  Build and install ParaView\nARG PARAVIEW_VERSION=f700a4d7f32ccb7e31f1da6e6fd1c6188dac2feb\nRUN git clone --recursive git://github.com/kitware/paraview.git \\\n && cd paraview \\\n && git checkout $PARAVIEW_VERSION \\\n && git submodule update \\\n && cd .. \\\n && mkdir paraview-build \\\n && cd paraview-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -DPARAVIEW_ENABLE_CATALYST:BOOL=OFF -DPARAVIEW_ENABLE_PYTHON:BOOL=ON -DPARAVIEW_QT_VERSION:STRING=5 -DPARAVIEW_ENABLE_WEB:BOOL=OFF -DPARAVIEW_ENABLE_EMBEDDED_DOCUMENTATION:BOOL=OFF -DPARAVIEW_USE_QTHELP:BOOL=OFF -DVTK_RENDERING_BACKEND:STRING=OpenGL2 -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=TBB -DVTK_PYTHON_FULL_THREADSAFE:BOOL=ON -DVTK_NO_PYTHON_THREADS:BOOL=OFF -DQt5_DIR:PATH=/usr/local/Qt-5.8.0/lib/cmake/Qt5 -DVTK_PYTHON_VERSION:STRING=3 ../paraview \\\n && cmake --build . \\\n && cd .. \\\n && rm -rf paraview/.git \\\n && find paraview-build -name '*.o' -delete \\\n && find paraview-build -name '*.cxx' -delete\n#  Provide paths to downstream builds\nONBUILD ENV QT5_DIR=\"/usr/local/Qt-5.8.0/lib/cmake/Qt5\"\nONBUILD ENV PARAVIEW_DIR=\"/paraview-build\"\nONBUILD ENV ITK_DIR=\"/opt/itk/lib/cmake/ITK-4.11\"\nONBUILD ENV GTEST_LIBRARY=\"/opt/googletest/lib/libgtest.a\"\nONBUILD ENV GTEST_MAIN_LIBRARY=\"/opt/googletest/lib/libgtest_main.a\"\nONBUILD ENV GTEST_INCLUDE_DIR=\"/opt/googletest/include\"\nARG BUILD_DATE\nARG IMAGE=tomviz-dependencies\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.build-date=\"BUILD_DATE\" \\\n      org.label-schema.name=\"$IMAGE\" \\\n      org.label-schema.description=\"Base image containing tomviz dependencies\" \\\n      org.label-schema.url=\"https://github.com/OpenChemistry/tomviz\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.schema-version=\"1.0\"\n","injectedSmells":[],"originalDockerfileHash":"412cecbd91dd0a3a14ea5b86091c75a4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM library/ubuntu:16.04\nMAINTAINER Chris Harris <chris.harris@kitware.com>\nRUN apt-get update \\\n && apt-get install git wget cmake python python-pip python3 python3-pip python3-dev g++ libtbb-dev libgl1-mesa-dev libglu1-mesa-dev libxt-dev -y\nRUN pip3 install -U pip \\\n && pip3 install numpy\n#   Build and install ninja.\nARG NINJA_VERSION=v1.7.2\nRUN git clone -b $NINJA_VERSION https://github.com/martine/ninja.git \\\n && cd ninja \\\n && ./configure.py --bootstrap \\\n && mv ninja /usr/bin/ \\\n && cd .. \\\n && rm -rf ninja\n#   Build and install googletest\nARG GTEST_VERSION=release-1.8.0\nRUN git clone -b $GTEST_VERSION https://github.com/google/googletest.git \\\n && mkdir googletest-build \\\n && cd googletest-build \\\n && cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/googletest ../googletest \\\n && cmake --build . --target install \\\n && rm -rf googletest\n#   Build and install Qt\nARG QT_VERSION=5.8.0\nARG QT_BASE_DOWNLOAD_URL=http://download.qt.io/official_releases/qt/5.8/5.8.0/single/\nENV QT_DIR=\"qt-everywhere-opensource-src-$QT_VERSION\"\nENV QT_TARBALL=\"$QT_DIR.tar.gz\"\nENV QT_DOWNLOAD_URL=\"$QT_BASE_DOWNLOAD_URL/$QT_TARBALL\"\nRUN wget $QT_DOWNLOAD_URL \\\n && md5=$( md5sum ./$QT_TARBALL | awk '{ print $1 }' ;) \\\n && [ $md5 = \"a9f2494f75f966e2f22358ec367d8f41\" ] \\\n && tar -xzvf $QT_TARBALL \\\n && rm $QT_TARBALL \\\n && cd $QT_DIR \\\n && ./configure -opensource -release -confirm-license -nomake examples -skip qtconnectivity -skip qtlocation -skip qtmultimedia -skip qtsensors -skip qtserialport -skip qtsvg -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebsockets -no-dbus -no-openssl -qt-libjpeg -qt-pcre \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf $QT_DIR\n#   Build and install ITK\nARG ITK_VERSION=v4.11.0\nRUN git clone -b $ITK_VERSION git://itk.org/ITK.git \\\n && mkdir itk-build \\\n && cd itk-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DITK_LEGACY_REMOVE:BOOL=ON -DITK_LEGACY_SILENT:BOOL=ON -DModule_BridgeNumPy:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DITK_WRAP_unsigned_short:BOOL=ON -DITK_BUILD_DEFAULT_MODULES:BOOL=OFF -DITKGroup_Core:BOOL=ON -DITKGroup_Filtering:BOOL=ON -DITKGroup_Segmentation:BOOL=ON -DITKGroup_Registration:BOOL=ON -DITKGroup_Nonunit:BOOL=ON -DITK_WRAP_PYTHON:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_INSTALL_PREFIX:PATH=/opt/itk -DPYTHON_EXECUTABLE:PATH=/usr/bin/python3 ../ITK \\\n && cmake --build . --target install \\\n && cd .. \\\n && rm -rf ITK \\\n && rm -rf itk-build\n#   Build and install ParaView\nARG PARAVIEW_VERSION=f700a4d7f32ccb7e31f1da6e6fd1c6188dac2feb\nRUN git clone --recursive git://github.com/kitware/paraview.git \\\n && cd paraview \\\n && git checkout $PARAVIEW_VERSION \\\n && git submodule update \\\n && cd .. \\\n && mkdir paraview-build \\\n && cd paraview-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -DPARAVIEW_ENABLE_CATALYST:BOOL=OFF -DPARAVIEW_ENABLE_PYTHON:BOOL=ON -DPARAVIEW_QT_VERSION:STRING=5 -DPARAVIEW_ENABLE_WEB:BOOL=OFF -DPARAVIEW_ENABLE_EMBEDDED_DOCUMENTATION:BOOL=OFF -DPARAVIEW_USE_QTHELP:BOOL=OFF -DVTK_RENDERING_BACKEND:STRING=OpenGL2 -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=TBB -DVTK_PYTHON_FULL_THREADSAFE:BOOL=ON -DVTK_NO_PYTHON_THREADS:BOOL=OFF -DQt5_DIR:PATH=/usr/local/Qt-5.8.0/lib/cmake/Qt5 -DVTK_PYTHON_VERSION:STRING=3 ../paraview \\\n && cmake --build . \\\n && cd .. \\\n && rm -rf paraview/.git \\\n && find paraview-build -name '*.o' -delete \\\n && find paraview-build -name '*.cxx' -delete\n#   Provide paths to downstream builds\nONBUILD ENV QT5_DIR=\"/usr/local/Qt-5.8.0/lib/cmake/Qt5\"\nONBUILD ENV PARAVIEW_DIR=\"/paraview-build\"\nONBUILD ENV ITK_DIR=\"/opt/itk/lib/cmake/ITK-4.11\"\nONBUILD ENV GTEST_LIBRARY=\"/opt/googletest/lib/libgtest.a\"\nONBUILD ENV GTEST_MAIN_LIBRARY=\"/opt/googletest/lib/libgtest_main.a\"\nONBUILD ENV GTEST_INCLUDE_DIR=\"/opt/googletest/include\"\nARG BUILD_DATE\nARG IMAGE=tomviz-dependencies\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.build-date=\"BUILD_DATE\" \\\n      org.label-schema.name=\"$IMAGE\" \\\n      org.label-schema.description=\"Base image containing tomviz dependencies\" \\\n      org.label-schema.url=\"https://github.com/OpenChemistry/tomviz\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.schema-version=\"1.0\"\n","originalDockerfileUglifiedHash":"58628c180b7323034bbd042bc1886e98","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3ee109ef8c05a0e27a8d7c2db17d2cd5ab113d03.dockerfile"}