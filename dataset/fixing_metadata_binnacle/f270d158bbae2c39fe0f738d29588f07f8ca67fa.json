{"seed":2117303415,"processedDockerfileHash":"d79dfb709bcd5efebf11daf1e12ee04b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck"],"processedDockerfile":"FROM jupyter/scipy-notebook:latest\nMAINTAINER Matt McCormick <matt.mccormick@kitware.com>\nUSER root\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends bash build-essential bzip2 curl file git libcurl4-openssl-dev libncurses5-dev libfftw3-dev libgl1-mesa-dev libssl-dev make ninja-build sed tar vim wget libexpat1-dev libhdf5-dev libjpeg-dev libpng12-dev libtiff5-dev xserver-xorg-video-dummy xserver-xorg-input-void libxt-dev zlib1g-dev\n#   Build and install CMake from source.\nWORKDIR /usr/src\nRUN git clone git://cmake.org/cmake.git CMake \\\n && cd CMake \\\n && git checkout v3.8.0 \\\n && mkdir ../CMake-build \\\n && cd ../CMake-build \\\n && /usr/src/CMake/bootstrap --parallel=$( nproc ;) --prefix=/usr \\\n && make -j$( nproc ;) \\\n && ./bin/cmake -DCMAKE_USE_SYSTEM_CURL:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_USE_OPENSSL:BOOL=ON . \\\n && make install \\\n && cd .. \\\n && rm -rf CMake CMake-build\n#   Build and install KWStyle from source.\nRUN git clone https://github.com/Kitware/KWStyle.git \\\n && mkdir KWStyle-build \\\n && cd KWStyle-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr ../KWStyle \\\n && ninja install \\\n && cd .. \\\n && rm -rf KWStyle KWStyle-build\n#   Build and install VTK from source\nRUN git clone https://github.com/Kitware/VTK.git VTK \\\n && cd VTK \\\n && git checkout v7.1.0 \\\n && cd .. \\\n && mkdir VTK-build \\\n && cd VTK-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DVTK_Group_Rendering:BOOL=OFF -DVTK_WRAP_PYTHON:STRING=ON -DPYTHON_EXECUTABLE:FILEPATH=/opt/conda/bin/python -DVTK_PYTHON_VERSION:STRING=3 -DCMAKE_INSTALL_PREFIX:PATH=/usr ../VTK \\\n && ninja \\\n && ninja install \\\n && cd .. \\\n && rm -rf VTK VTK-build\n#   Build and install ITK from source.\n#   2017-04-19 master\nRUN git clone https://github.com/InsightSoftwareConsortium/ITK.git \\\n && cd /usr/src/ITK \\\n && git checkout 46350ec90671385d688e71aaa7058030bca6e23a \\\n && mkdir /usr/src/ITK-build \\\n && cd /usr/src/ITK-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=MinSizeRel -DPYTHON_EXECUTABLE:FILEPATH=/opt/conda/bin/python -DCMAKE_INSTALL_PREFIX:PATH=/usr -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -DITK_BUILD_DEFAULT_MODULES:BOOL=OFF -DITKGroup_Filtering:BOOL=ON -DITKGroup_Numerics:BOOL=ON -DITKGroup_IO:BOOL=ON -DModule_ITKHDF5:BOOL=ON -DITK_WRAP_PYTHON:BOOL=ON -DITK_USE_FFTWD:BOOL=ON -DITK_USE_FFTWF:BOOL=ON -DITK_USE_SYSTEM_FFTW:BOOL=ON -DITK_USE_SYSTEM_SWIG:BOOL=OFF /usr/src/ITK \\\n && ninja \\\n && cp /usr/src/ITK-build/Wrapping/Generators/Python/WrapITK.pth /opt/conda/lib/python3.5/site-packages \\\n && find ./Wrapping -name '*.cpp' -delete -o -name '*.xml' -delete \\\n && find . -name '*.o' -delete\nRUN mkdir /usr/src/ITKUltrasound-build\nUSER jovyan\nWORKDIR /home/jovyan\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM jupyter/scipy-notebook:latest\nMAINTAINER Matt McCormick <matt.mccormick@kitware.com>\nUSER root\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends bash build-essential bzip2 curl file git libcurl4-openssl-dev libncurses5-dev libfftw3-dev libgl1-mesa-dev libssl-dev make ninja-build sed tar vim wget libexpat1-dev libhdf5-dev libjpeg-dev libpng12-dev libtiff5-dev xserver-xorg-video-dummy xserver-xorg-input-void libxt-dev zlib1g-dev\n#  Build and install CMake from source.\nWORKDIR /usr/src\nRUN git clone git://cmake.org/cmake.git CMake \\\n && cd CMake \\\n && git checkout v3.8.0 \\\n && mkdir ../CMake-build \\\n && cd ../CMake-build \\\n && /usr/src/CMake/bootstrap --parallel=$( nproc ;) --prefix=/usr \\\n && make -j$( nproc ;) \\\n && ./bin/cmake -DCMAKE_USE_SYSTEM_CURL:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_USE_OPENSSL:BOOL=ON . \\\n && make install \\\n && cd .. \\\n && rm -rf CMake CMake-build\n#  Build and install KWStyle from source.\nRUN git clone https://github.com/Kitware/KWStyle.git \\\n && mkdir KWStyle-build \\\n && cd KWStyle-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr ../KWStyle \\\n && ninja install \\\n && cd .. \\\n && rm -rf KWStyle KWStyle-build\n#  Build and install VTK from source\nRUN git clone https://github.com/Kitware/VTK.git VTK \\\n && cd VTK \\\n && git checkout v7.1.0 \\\n && cd .. \\\n && mkdir VTK-build \\\n && cd VTK-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DVTK_Group_Rendering:BOOL=OFF -DVTK_WRAP_PYTHON:STRING=ON -DPYTHON_EXECUTABLE:FILEPATH=/opt/conda/bin/python -DVTK_PYTHON_VERSION:STRING=3 -DCMAKE_INSTALL_PREFIX:PATH=/usr ../VTK \\\n && ninja \\\n && ninja install \\\n && cd .. \\\n && rm -rf VTK VTK-build\n#  Build and install ITK from source.\n#  2017-04-19 master\nRUN git clone https://github.com/InsightSoftwareConsortium/ITK.git \\\n && cd /usr/src/ITK \\\n && git checkout 46350ec90671385d688e71aaa7058030bca6e23a \\\n && mkdir /usr/src/ITK-build \\\n && cd /usr/src/ITK-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=MinSizeRel -DPYTHON_EXECUTABLE:FILEPATH=/opt/conda/bin/python -DCMAKE_INSTALL_PREFIX:PATH=/usr -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -DITK_BUILD_DEFAULT_MODULES:BOOL=OFF -DITKGroup_Filtering:BOOL=ON -DITKGroup_Numerics:BOOL=ON -DITKGroup_IO:BOOL=ON -DModule_ITKHDF5:BOOL=ON -DITK_WRAP_PYTHON:BOOL=ON -DITK_USE_FFTWD:BOOL=ON -DITK_USE_FFTWF:BOOL=ON -DITK_USE_SYSTEM_FFTW:BOOL=ON -DITK_USE_SYSTEM_SWIG:BOOL=OFF /usr/src/ITK \\\n && ninja \\\n && cp /usr/src/ITK-build/Wrapping/Generators/Python/WrapITK.pth /opt/conda/lib/python3.5/site-packages \\\n && find ./Wrapping -name '*.cpp' -delete -o -name '*.xml' -delete \\\n && find . -name '*.o' -delete\nRUN mkdir /usr/src/ITKUltrasound-build\nUSER jovyan\nWORKDIR /home/jovyan\n","injectedSmells":[],"originalDockerfileHash":"d2840536ce1fff09febec36a7e337c77","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM jupyter/scipy-notebook:latest\nMAINTAINER Matt McCormick <matt.mccormick@kitware.com>\nUSER root\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends bash build-essential bzip2 curl file git libcurl4-openssl-dev libncurses5-dev libfftw3-dev libgl1-mesa-dev libssl-dev make ninja-build sed tar vim wget libexpat1-dev libhdf5-dev libjpeg-dev libpng12-dev libtiff5-dev xserver-xorg-video-dummy xserver-xorg-input-void libxt-dev zlib1g-dev\n#   Build and install CMake from source.\nWORKDIR /usr/src\nRUN git clone git://cmake.org/cmake.git CMake \\\n && cd CMake \\\n && git checkout v3.8.0 \\\n && mkdir ../CMake-build \\\n && cd ../CMake-build \\\n && /usr/src/CMake/bootstrap --parallel=$( nproc ;) --prefix=/usr \\\n && make -j$( nproc ;) \\\n && ./bin/cmake -DCMAKE_USE_SYSTEM_CURL:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_USE_OPENSSL:BOOL=ON . \\\n && make install \\\n && cd .. \\\n && rm -rf CMake CMake-build\n#   Build and install KWStyle from source.\nRUN git clone https://github.com/Kitware/KWStyle.git \\\n && mkdir KWStyle-build \\\n && cd KWStyle-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr ../KWStyle \\\n && ninja install \\\n && cd .. \\\n && rm -rf KWStyle KWStyle-build\n#   Build and install VTK from source\nRUN git clone https://github.com/Kitware/VTK.git VTK \\\n && cd VTK \\\n && git checkout v7.1.0 \\\n && cd .. \\\n && mkdir VTK-build \\\n && cd VTK-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DVTK_Group_Rendering:BOOL=OFF -DVTK_WRAP_PYTHON:STRING=ON -DPYTHON_EXECUTABLE:FILEPATH=/opt/conda/bin/python -DVTK_PYTHON_VERSION:STRING=3 -DCMAKE_INSTALL_PREFIX:PATH=/usr ../VTK \\\n && ninja \\\n && ninja install \\\n && cd .. \\\n && rm -rf VTK VTK-build\n#   Build and install ITK from source.\n#   2017-04-19 master\nRUN git clone https://github.com/InsightSoftwareConsortium/ITK.git \\\n && cd /usr/src/ITK \\\n && git checkout 46350ec90671385d688e71aaa7058030bca6e23a \\\n && mkdir /usr/src/ITK-build \\\n && cd /usr/src/ITK-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=MinSizeRel -DPYTHON_EXECUTABLE:FILEPATH=/opt/conda/bin/python -DCMAKE_INSTALL_PREFIX:PATH=/usr -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -DITK_BUILD_DEFAULT_MODULES:BOOL=OFF -DITKGroup_Filtering:BOOL=ON -DITKGroup_Numerics:BOOL=ON -DITKGroup_IO:BOOL=ON -DModule_ITKHDF5:BOOL=ON -DITK_WRAP_PYTHON:BOOL=ON -DITK_USE_FFTWD:BOOL=ON -DITK_USE_FFTWF:BOOL=ON -DITK_USE_SYSTEM_FFTW:BOOL=ON -DITK_USE_SYSTEM_SWIG:BOOL=OFF /usr/src/ITK \\\n && ninja \\\n && cp /usr/src/ITK-build/Wrapping/Generators/Python/WrapITK.pth /opt/conda/lib/python3.5/site-packages \\\n && find ./Wrapping -name '*.cpp' -delete -o -name '*.xml' -delete \\\n && find . -name '*.o' -delete\nRUN mkdir /usr/src/ITKUltrasound-build\nUSER jovyan\nWORKDIR /home/jovyan\n","originalDockerfileUglifiedHash":"1be801b6d93e50c6264dbe5ae3b37d5a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f270d158bbae2c39fe0f738d29588f07f8ca67fa.dockerfile"}