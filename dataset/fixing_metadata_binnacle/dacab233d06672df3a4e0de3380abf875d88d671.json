{"seed":611299687,"processedDockerfileHash":"02a1b1fa3d1ab2314f71c4ec749d0bee","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Docker container for Ubuntu 12.04\n#   See https://github.com/ceejatec/naked-docker/ for details about the\n#   construction of the base image.\nFROM ceejatec/naked-ubuntu:12.04\nMAINTAINER ceej@couchbase.com\nUSER root\n#   Install SSH server\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt openssh-server -y \\\n && rm -f /var/cache/apt/archives/*.deb \\\n && mkdir /var/run/sshd\n#   Create couchbase user with password-less sudo privs, and give\n#   ownership of /opt/couchbase\nRUN useradd couchbase -G sudo -m -s /bin/bash \\\n && mkdir -p /opt/couchbase \\\n && chown -R couchbase:couchbase /opt/couchbase \\\n && echo 'couchbase:couchbase' | chpasswd \\\n && sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\n#   JDK for Jenkins.\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-7-jre-headless -y \\\n && rm -f /var/cache/apt/archives/*.deb\n#   Install Couchbase build dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ccache git-core tar libssl-dev libnuma-dev rubygems rake ncurses-dev python-dev devscripts debhelper ed man curl libc6-i386 -y \\\n && rm -f /var/cache/apt/archives/*.deb\n#   Install updated C++11 compiler.\n#   Note: python-software-properties required for `add-apt-repository`.\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-software-properties --yes \\\n && add-apt-repository --yes ppa:ubuntu-toolchain-r/test \\\n && apt-get update \\\n && apt-get install --no-install-recommends g++-4.9 --yes \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9 --slave /usr/bin/gcov gcov /usr/bin/gcov-4.9 \\\n && apt-get clean\n#  s3cmd for upload script\nRUN apt-get update \\\n && apt-get install --no-install-recommends s3cmd -y\n#  paramiko for testrunner\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-paramiko -y\n#   Install third-party build dependencies. Note: python-software-properties\n#   is only required for add-apt-repository; add-apt-repository is only\n#   required to get python2.6; and python2.6 is only required for gyp, which\n#   is part of the v8 build. python2.6 is also required for our compiling of\n#   pysqlite and pysnappy, and for that we even need python2.6-dev.\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-software-properties -y \\\n && add-apt-repository ppa:fkrull/deadsnakes \\\n && apt-get update \\\n && apt-get install --no-install-recommends m4 python2.6 python2.6-dev -y \\\n && rm -f /var/cache/apt/archives/*.deb\nRUN mkdir /tmp/deploy \\\n && curl -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf autoconf-2.69.tar.gz \\\n && cd autoconf-2.69 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf automake-1.14.tar.gz \\\n && cd automake-1.14 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf libtool-2.4.2.tar.gz \\\n && cd libtool-2.4.2 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && ccache --clear\n#   Enable ccache.\nRUN echo 'PATH=\"/usr/lib/ccache:$PATH\"' >> /home/couchbase/.profile\n#   CMake, Go and Repo.\nRUN mkdir /tmp/deploy \\\n && curl -L http://www.cmake.org/files/v2.8/cmake-2.8.12.2-Linux-i386.sh -o /tmp/deploy/cmake.sh \\\n && (echo y ;echo n ) | sh /tmp/deploy/cmake.sh --prefix=/usr/local \\\n && curl https://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/go.tar.gz \\\n && cd bin \\\n && for file in /usr/local/go/bin/*; do ln -s $file ; done \\\n && curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && ccache --clear\n#   Some Python stuff to allow use of the Jira module in scripts.\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip libffi-dev -y \\\n && pip install oauthlib==0.7.2 \\\n && pip install pycrypto==2.6.1 --upgrade \\\n && pip install pyopenssl==23.1.1 ndg-httpsclient==0.5.1 pyasn1==0.4.8 jira==3.5.0 \\\n && apt-get purge -y libffi-dev \\\n && ccache --clear \\\n && rm -f /var/cache/apt/archives/*.deb\n#   Expose SSH daemon and run our builder startup script\nEXPOSE 22/tcp\nCOPY .ssh /home/couchbase/.ssh\nCOPY build/couchbuilder_start.sh /usr/sbin/\nENTRYPOINT [\"/usr/sbin/couchbuilder_start.sh\"]\nCMD [\"default\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Docker container for Ubuntu 12.04\n#  See https://github.com/ceejatec/naked-docker/ for details about the\n#  construction of the base image.\nFROM ceejatec/naked-ubuntu:12.04\nMAINTAINER ceej@couchbase.com\nUSER root\n#  Install SSH server\nRUN apt-get update \\\n && apt-get install apt openssh-server -y \\\n && rm -f /var/cache/apt/archives/*.deb \\\n && mkdir /var/run/sshd\n#  Create couchbase user with password-less sudo privs, and give\n#  ownership of /opt/couchbase\nRUN useradd couchbase -G sudo -m -s /bin/bash \\\n && mkdir -p /opt/couchbase \\\n && chown -R couchbase:couchbase /opt/couchbase \\\n && echo 'couchbase:couchbase' | chpasswd \\\n && sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\n#  JDK for Jenkins.\nRUN apt-get update \\\n && apt-get install openjdk-7-jre-headless -y \\\n && rm -f /var/cache/apt/archives/*.deb\n#  Install Couchbase build dependencies\nRUN apt-get update \\\n && apt-get install ccache git-core tar libssl-dev libnuma-dev rubygems rake ncurses-dev python-dev devscripts debhelper ed man curl libc6-i386 -y \\\n && rm -f /var/cache/apt/archives/*.deb\n#  Install updated C++11 compiler.\n#  Note: python-software-properties required for `add-apt-repository`.\nRUN apt-get update \\\n && apt-get install python-software-properties --yes \\\n && add-apt-repository --yes ppa:ubuntu-toolchain-r/test \\\n && apt-get update \\\n && apt-get install g++-4.9 --yes \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9 --slave /usr/bin/gcov gcov /usr/bin/gcov-4.9 \\\n && apt-get clean\n# s3cmd for upload script\nRUN apt-get update \\\n && apt-get install s3cmd -y\n# paramiko for testrunner\nRUN apt-get update \\\n && apt-get install python-paramiko -y\n#  Install third-party build dependencies. Note: python-software-properties\n#  is only required for add-apt-repository; add-apt-repository is only\n#  required to get python2.6; and python2.6 is only required for gyp, which\n#  is part of the v8 build. python2.6 is also required for our compiling of\n#  pysqlite and pysnappy, and for that we even need python2.6-dev.\nRUN apt-get update \\\n && apt-get install python-software-properties -y \\\n && add-apt-repository ppa:fkrull/deadsnakes \\\n && apt-get update \\\n && apt-get install m4 python2.6 python2.6-dev -y \\\n && rm -f /var/cache/apt/archives/*.deb\nRUN mkdir /tmp/deploy \\\n && curl -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf autoconf-2.69.tar.gz \\\n && cd autoconf-2.69 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf automake-1.14.tar.gz \\\n && cd automake-1.14 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf libtool-2.4.2.tar.gz \\\n && cd libtool-2.4.2 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && ccache --clear\n#  Enable ccache.\nRUN echo 'PATH=\"/usr/lib/ccache:$PATH\"' >> /home/couchbase/.profile\n#  CMake, Go and Repo.\nRUN mkdir /tmp/deploy \\\n && curl -L http://www.cmake.org/files/v2.8/cmake-2.8.12.2-Linux-i386.sh -o /tmp/deploy/cmake.sh \\\n && (echo y ;echo n ) | sh /tmp/deploy/cmake.sh --prefix=/usr/local \\\n && curl https://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/go.tar.gz \\\n && cd bin \\\n && for file in /usr/local/go/bin/*; do ln -s $file ; done \\\n && curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && ccache --clear\n#  Some Python stuff to allow use of the Jira module in scripts.\nRUN apt-get update \\\n && apt-get install python-pip libffi-dev -y \\\n && pip install oauthlib==0.7.2 \\\n && pip install pycrypto --upgrade \\\n && pip install pyopenssl ndg-httpsclient pyasn1 jira \\\n && apt-get purge -y libffi-dev \\\n && ccache --clear \\\n && rm -f /var/cache/apt/archives/*.deb\n#  Expose SSH daemon and run our builder startup script\nEXPOSE 22/tcp\nADD .ssh /home/couchbase/.ssh\nCOPY build/couchbuilder_start.sh /usr/sbin/\nENTRYPOINT [\"/usr/sbin/couchbuilder_start.sh\"]\nCMD [\"default\"]\n","injectedSmells":[],"originalDockerfileHash":"21465ea48e0ae6c2dfcd51c3246fb167","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Docker container for Ubuntu 12.04\n#   See https://github.com/ceejatec/naked-docker/ for details about the\n#   construction of the base image.\nFROM ceejatec/naked-ubuntu:12.04\nMAINTAINER ceej@couchbase.com\nUSER root\n#   Install SSH server\nRUN apt-get update \\\n && apt-get install apt openssh-server -y \\\n && rm -f /var/cache/apt/archives/*.deb \\\n && mkdir /var/run/sshd\n#   Create couchbase user with password-less sudo privs, and give\n#   ownership of /opt/couchbase\nRUN useradd couchbase -G sudo -m -s /bin/bash \\\n && mkdir -p /opt/couchbase \\\n && chown -R couchbase:couchbase /opt/couchbase \\\n && echo 'couchbase:couchbase' | chpasswd \\\n && sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\n#   JDK for Jenkins.\nRUN apt-get update \\\n && apt-get install openjdk-7-jre-headless -y \\\n && rm -f /var/cache/apt/archives/*.deb\n#   Install Couchbase build dependencies\nRUN apt-get update \\\n && apt-get install ccache git-core tar libssl-dev libnuma-dev rubygems rake ncurses-dev python-dev devscripts debhelper ed man curl libc6-i386 -y \\\n && rm -f /var/cache/apt/archives/*.deb\n#   Install updated C++11 compiler.\n#   Note: python-software-properties required for `add-apt-repository`.\nRUN apt-get update \\\n && apt-get install python-software-properties --yes \\\n && add-apt-repository --yes ppa:ubuntu-toolchain-r/test \\\n && apt-get update \\\n && apt-get install g++-4.9 --yes \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9 --slave /usr/bin/gcov gcov /usr/bin/gcov-4.9 \\\n && apt-get clean\n#  s3cmd for upload script\nRUN apt-get update \\\n && apt-get install s3cmd -y\n#  paramiko for testrunner\nRUN apt-get update \\\n && apt-get install python-paramiko -y\n#   Install third-party build dependencies. Note: python-software-properties\n#   is only required for add-apt-repository; add-apt-repository is only\n#   required to get python2.6; and python2.6 is only required for gyp, which\n#   is part of the v8 build. python2.6 is also required for our compiling of\n#   pysqlite and pysnappy, and for that we even need python2.6-dev.\nRUN apt-get update \\\n && apt-get install python-software-properties -y \\\n && add-apt-repository ppa:fkrull/deadsnakes \\\n && apt-get update \\\n && apt-get install m4 python2.6 python2.6-dev -y \\\n && rm -f /var/cache/apt/archives/*.deb\nRUN mkdir /tmp/deploy \\\n && curl -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf autoconf-2.69.tar.gz \\\n && cd autoconf-2.69 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf automake-1.14.tar.gz \\\n && cd automake-1.14 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf libtool-2.4.2.tar.gz \\\n && cd libtool-2.4.2 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && ccache --clear\n#   Enable ccache.\nRUN echo 'PATH=\"/usr/lib/ccache:$PATH\"' >> /home/couchbase/.profile\n#   CMake, Go and Repo.\nRUN mkdir /tmp/deploy \\\n && curl -L http://www.cmake.org/files/v2.8/cmake-2.8.12.2-Linux-i386.sh -o /tmp/deploy/cmake.sh \\\n && (echo y ;echo n ) | sh /tmp/deploy/cmake.sh --prefix=/usr/local \\\n && curl https://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/go.tar.gz \\\n && cd bin \\\n && for file in /usr/local/go/bin/*; do ln -s $file ; done \\\n && curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && ccache --clear\n#   Some Python stuff to allow use of the Jira module in scripts.\nRUN apt-get update \\\n && apt-get install python-pip libffi-dev -y \\\n && pip install oauthlib==0.7.2 \\\n && pip install pycrypto --upgrade \\\n && pip install pyopenssl ndg-httpsclient pyasn1 jira \\\n && apt-get purge -y libffi-dev \\\n && ccache --clear \\\n && rm -f /var/cache/apt/archives/*.deb\n#   Expose SSH daemon and run our builder startup script\nEXPOSE 22/tcp\nADD .ssh /home/couchbase/.ssh\nCOPY build/couchbuilder_start.sh /usr/sbin/\nENTRYPOINT [\"/usr/sbin/couchbuilder_start.sh\"]\nCMD [\"default\"]\n","originalDockerfileUglifiedHash":"bad69801f3d5530235be78401faef48a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dacab233d06672df3a4e0de3380abf875d88d671.dockerfile"}