{"seed":3166259438,"processedDockerfileHash":"f60c5745725bc6b1b6ee8a56d813224b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:7.5-cudnn5-devel\n#   Get dependencies\n#   Update gcc for dense inference wrapper (CRF)\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test\nRUN apt-get update \\\n && apt-get install --no-install-recommends bc cmake curl gcc-4.9 g++-4.9 gcc-4.9-multilib g++-4.9-multilib gfortran git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev liblmdb-dev libjpeg62 libfreeimage-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev pkgconf protobuf-compiler python-dev python-pip python-opencv python-numpy unzip wget vim htop sshfs cifs-utils -y\n#   Use gcc 4.9\nRUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.9 30 \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-4.9 30 \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 30 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 30\n#   Allow it to find CUDA libs\nRUN echo \"/usr/local/cuda/lib64\" > /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\n#   Clone Faustos 3D CAFFE\nRUN cd /opt \\\n && git clone https://github.com/faustomilletari/3D-Caffe.git caffe \\\n && cd /opt/caffe\n#  RUN cd /opt && git clone https://github.com/BVLC/caffe.git caffe && cd /opt/caffe\n#  Clone Faustos VNET Project\nRUN cd /opt/ \\\n && git clone https://github.com/patrickchrist/VNet.git vnet\n#  Add deployment ssh key\nCOPY repo_key /\nRUN chmod 600 /repo_key\nRUN echo \"IdentityFile /repo_key\" >> /etc/ssh/ssh_config\nRUN echo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config\n#   Clone and Install 3D DenseCRF\nRUN cd /opt \\\n && git clone -b master git@bitbucket.org:ibbm/denseinferencewrapper.git denseinferencewrapper\n#   Build and install 3D DesneCRF\nRUN cd /opt/denseinferencewrapper \\\n && make \\\n && pip install .\n#   Clone Saratan project\nRUN cd /opt/ \\\n && git clone git@bitbucket.org:patrickchrist/saratan.git\nENV PYTHONPATH=\"/opt/caffe/python:/opt/saratan/:/opt/saratan/data/layers:/opt/vnet\"\n#   Install caffe python dependencies\nRUN cd /opt/caffe/python \\\n && for req in $( cat requirements.txt ;); do sudo pip install $req ; done\n#   Instal pip packages used by various scripts, and useful for interactive dev\nRUN sudo pip install pydicom lmdb jupyter plyvel peewee nibabel tqdm pypng natsort medpy psutil\nRUN pip install www.simpleitk.org==null 30==null SimpleITK==2.2.1 --allow-insecure -f http://www.simpleitk.org/SimpleITK/resources/software.html --timeout\n#   Install NLopt\nRUN cd /opt/ \\\n && wget http://ab-initio.mit.edu/nlopt/nlopt-2.4.2.tar.gz \\\n && tar -xvf nlopt-2.4.2.tar.gz \\\n && rm nlopt-2.4.2.tar.gz\nRUN cd /opt/nlopt-2.4.2 \\\n && ./configure --enable-shared \\\n && make -j$( nproc ;) \\\n && make install\nRUN echo \"/opt/nlopt-2.4.2/.libs/\" > /etc/ld.so.conf.d/nlopt.conf \\\n && ldconfig\n#   Build Caffe\nRUN cd /opt/caffe \\\n && cp Makefile.config.example Makefile.config \\\n && echo \"CXX := /usr/bin/g++-4.9\" >> Makefile.config \\\n && sed -i 's/CXX :=/CXX ?=/' Makefile \\\n && sed -i 's/# WITH_PYTHON_LAYER/WITH_PYTHON_LAYER/' Makefile.config \\\n && sed -i 's/# USE_CUDNN/USE_CUDNN/' Makefile.config \\\n && make all -j$( nproc ;) \\\n && make pycaffe -j$( nproc ;)\n#   Install caffe\nENV PATH=\"$PATH:/opt/caffe/.build_release/tools\"\n#  Upgrade Numpy\nRUN sudo pip install numpy --upgrade\nEXPOSE 8888/tcp 8889/tcp 8890/tcp 8891/tcp 8892/tcp 8893/tcp 8894/tcp 8895/tcp 8896/tcp 8897/tcp 8898/tcp 8899/tcp 8900/tcp\n#   For some reason, at this point git doesn't work giving the following error:\n#   git-remote-https: symbol lookup error: /usr/lib/x86_64-linux-gnu/libasn1.so.8: undefined symbol: _et_list\n#   so I run \"sudo ldconfig\" and it fixes it\nRUN sudo ldconfig\nRUN cd /opt/saratan \\\n && git pull\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:7.5-cudnn5-devel\n#  Get dependencies\n#  Update gcc for dense inference wrapper (CRF)\nRUN apt-get update \\\n && apt-get install software-properties-common -y\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test\nRUN apt-get update \\\n && apt-get install bc cmake curl gcc-4.9 g++-4.9 gcc-4.9-multilib g++-4.9-multilib gfortran git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev liblmdb-dev libjpeg62 libfreeimage-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev pkgconf protobuf-compiler python-dev python-pip python-opencv python-numpy unzip wget vim htop sshfs cifs-utils -y\n#  Use gcc 4.9\nRUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.9 30 \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-4.9 30 \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 30 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 30\n#  Allow it to find CUDA libs\nRUN echo \"/usr/local/cuda/lib64\" > /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\n#  Clone Faustos 3D CAFFE\nRUN cd /opt \\\n && git clone https://github.com/faustomilletari/3D-Caffe.git caffe \\\n && cd /opt/caffe\n# RUN cd /opt && git clone https://github.com/BVLC/caffe.git caffe && cd /opt/caffe\n# Clone Faustos VNET Project\nRUN cd /opt/ \\\n && git clone https://github.com/patrickchrist/VNet.git vnet\n# Add deployment ssh key\nADD repo_key /\nRUN chmod 600 /repo_key\nRUN echo \"IdentityFile /repo_key\" >> /etc/ssh/ssh_config\nRUN echo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config\n#  Clone and Install 3D DenseCRF\nRUN cd /opt \\\n && git clone -b master git@bitbucket.org:ibbm/denseinferencewrapper.git denseinferencewrapper\n#  Build and install 3D DesneCRF\nRUN cd /opt/denseinferencewrapper \\\n && make \\\n && pip install .\n#  Clone Saratan project\nRUN cd /opt/ \\\n && git clone git@bitbucket.org:patrickchrist/saratan.git\nENV PYTHONPATH=\"/opt/caffe/python:/opt/saratan/:/opt/saratan/data/layers:/opt/vnet\"\n#  Install caffe python dependencies\nRUN cd /opt/caffe/python \\\n && for req in $( cat requirements.txt ;); do sudo pip install $req ; done\n#  Instal pip packages used by various scripts, and useful for interactive dev\nRUN sudo pip install pydicom lmdb jupyter plyvel peewee nibabel tqdm pypng natsort medpy psutil\nRUN pip install www.simpleitk.org 30 SimpleITK --allow-insecure -f http://www.simpleitk.org/SimpleITK/resources/software.html --timeout\n#  Install NLopt\nRUN cd /opt/ \\\n && wget http://ab-initio.mit.edu/nlopt/nlopt-2.4.2.tar.gz \\\n && tar -xvf nlopt-2.4.2.tar.gz \\\n && rm nlopt-2.4.2.tar.gz\nRUN cd /opt/nlopt-2.4.2 \\\n && ./configure --enable-shared \\\n && make -j$( nproc ;) \\\n && make install\nRUN echo \"/opt/nlopt-2.4.2/.libs/\" > /etc/ld.so.conf.d/nlopt.conf \\\n && ldconfig\n#  Build Caffe\nRUN cd /opt/caffe \\\n && cp Makefile.config.example Makefile.config \\\n && echo \"CXX := /usr/bin/g++-4.9\" >> Makefile.config \\\n && sed -i 's/CXX :=/CXX ?=/' Makefile \\\n && sed -i 's/# WITH_PYTHON_LAYER/WITH_PYTHON_LAYER/' Makefile.config \\\n && sed -i 's/# USE_CUDNN/USE_CUDNN/' Makefile.config \\\n && make all -j$( nproc ;) \\\n && make pycaffe -j$( nproc ;)\n#  Install caffe\nENV PATH=\"$PATH:/opt/caffe/.build_release/tools\"\n# Upgrade Numpy\nRUN sudo pip install numpy --upgrade\nEXPOSE 8888/tcp 8889/tcp 8890/tcp 8891/tcp 8892/tcp 8893/tcp 8894/tcp 8895/tcp 8896/tcp 8897/tcp 8898/tcp 8899/tcp 8900/tcp\n#  For some reason, at this point git doesn't work giving the following error:\n#  git-remote-https: symbol lookup error: /usr/lib/x86_64-linux-gnu/libasn1.so.8: undefined symbol: _et_list\n#  so I run \"sudo ldconfig\" and it fixes it\nRUN sudo ldconfig\nRUN cd /opt/saratan \\\n && git pull\n","injectedSmells":[],"originalDockerfileHash":"3f41020c386d53e8356a5b37bcb948ee","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:7.5-cudnn5-devel\n#   Get dependencies\n#   Update gcc for dense inference wrapper (CRF)\nRUN apt-get update \\\n && apt-get install software-properties-common -y\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test\nRUN apt-get update \\\n && apt-get install bc cmake curl gcc-4.9 g++-4.9 gcc-4.9-multilib g++-4.9-multilib gfortran git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev liblmdb-dev libjpeg62 libfreeimage-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev pkgconf protobuf-compiler python-dev python-pip python-opencv python-numpy unzip wget vim htop sshfs cifs-utils -y\n#   Use gcc 4.9\nRUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.9 30 \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-4.9 30 \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 30 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 30\n#   Allow it to find CUDA libs\nRUN echo \"/usr/local/cuda/lib64\" > /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\n#   Clone Faustos 3D CAFFE\nRUN cd /opt \\\n && git clone https://github.com/faustomilletari/3D-Caffe.git caffe \\\n && cd /opt/caffe\n#  RUN cd /opt && git clone https://github.com/BVLC/caffe.git caffe && cd /opt/caffe\n#  Clone Faustos VNET Project\nRUN cd /opt/ \\\n && git clone https://github.com/patrickchrist/VNet.git vnet\n#  Add deployment ssh key\nADD repo_key /\nRUN chmod 600 /repo_key\nRUN echo \"IdentityFile /repo_key\" >> /etc/ssh/ssh_config\nRUN echo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config\n#   Clone and Install 3D DenseCRF\nRUN cd /opt \\\n && git clone -b master git@bitbucket.org:ibbm/denseinferencewrapper.git denseinferencewrapper\n#   Build and install 3D DesneCRF\nRUN cd /opt/denseinferencewrapper \\\n && make \\\n && pip install .\n#   Clone Saratan project\nRUN cd /opt/ \\\n && git clone git@bitbucket.org:patrickchrist/saratan.git\nENV PYTHONPATH=\"/opt/caffe/python:/opt/saratan/:/opt/saratan/data/layers:/opt/vnet\"\n#   Install caffe python dependencies\nRUN cd /opt/caffe/python \\\n && for req in $( cat requirements.txt ;); do sudo pip install $req ; done\n#   Instal pip packages used by various scripts, and useful for interactive dev\nRUN sudo pip install pydicom lmdb jupyter plyvel peewee nibabel tqdm pypng natsort medpy psutil\nRUN pip install www.simpleitk.org 30 SimpleITK --allow-insecure -f http://www.simpleitk.org/SimpleITK/resources/software.html --timeout\n#   Install NLopt\nRUN cd /opt/ \\\n && wget http://ab-initio.mit.edu/nlopt/nlopt-2.4.2.tar.gz \\\n && tar -xvf nlopt-2.4.2.tar.gz \\\n && rm nlopt-2.4.2.tar.gz\nRUN cd /opt/nlopt-2.4.2 \\\n && ./configure --enable-shared \\\n && make -j$( nproc ;) \\\n && make install\nRUN echo \"/opt/nlopt-2.4.2/.libs/\" > /etc/ld.so.conf.d/nlopt.conf \\\n && ldconfig\n#   Build Caffe\nRUN cd /opt/caffe \\\n && cp Makefile.config.example Makefile.config \\\n && echo \"CXX := /usr/bin/g++-4.9\" >> Makefile.config \\\n && sed -i 's/CXX :=/CXX ?=/' Makefile \\\n && sed -i 's/# WITH_PYTHON_LAYER/WITH_PYTHON_LAYER/' Makefile.config \\\n && sed -i 's/# USE_CUDNN/USE_CUDNN/' Makefile.config \\\n && make all -j$( nproc ;) \\\n && make pycaffe -j$( nproc ;)\n#   Install caffe\nENV PATH=\"$PATH:/opt/caffe/.build_release/tools\"\n#  Upgrade Numpy\nRUN sudo pip install numpy --upgrade\nEXPOSE 8888/tcp 8889/tcp 8890/tcp 8891/tcp 8892/tcp 8893/tcp 8894/tcp 8895/tcp 8896/tcp 8897/tcp 8898/tcp 8899/tcp 8900/tcp\n#   For some reason, at this point git doesn't work giving the following error:\n#   git-remote-https: symbol lookup error: /usr/lib/x86_64-linux-gnu/libasn1.so.8: undefined symbol: _et_list\n#   so I run \"sudo ldconfig\" and it fixes it\nRUN sudo ldconfig\nRUN cd /opt/saratan \\\n && git pull\n","originalDockerfileUglifiedHash":"f192c618b3a49fd3434fce4c1779d065","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/90e2e14e89872467d9f462a93758166be329cd17.dockerfile"}