{"seed":3247563452,"processedDockerfileHash":"7d9f428b0fc2a9dad246370a34b0ee4f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\n#   To edit the 'php-fpm' base Image, visit its repository on Github\n#      https://github.com/LaraDock/php-fpm\n#\n#   To change its version, see the available Tags on the Docker Hub:\n#      https://hub.docker.com/r/laradock/php-fpm/tags/\n#\nFROM laradock/php-fpm:7.0--1.2\nMAINTAINER Mahmoud Zalt <mahmoud@zalt.me>\n#\n#  --------------------------------------------------------------------------\n#   Mandatory Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n#   are installed on the base image 'laradock/php-fpm' image. If you want\n#   to add more Software's or remove existing one, you need to edit the\n#   base image (https://github.com/LaraDock/php-fpm).\n#\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Optional Software's will only be installed if you set them to `true`\n#   in the `docker-compose.yml` before the build.\n#   Example:\n#     - INSTALL_ZIP_ARCHIVE=true\n#\n#  ####################################\n#   xDebug:\n#  ####################################\nARG INSTALL_XDEBUG=true\nENV INSTALL_XDEBUG=\"${INSTALL_XDEBUG}\"\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install xdebug \\\n && docker-php-ext-enable xdebug ; fi\n#   Copy xdebug configration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n#  ####################################\n#   MongoDB:\n#  ####################################\nARG INSTALL_MONGO=true\nENV INSTALL_MONGO=\"${INSTALL_MONGO}\"\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && docker-php-ext-enable mongodb ; fi\n#  ####################################\n#   ZipArchive:\n#  ####################################\nARG INSTALL_ZIP_ARCHIVE=true\nENV INSTALL_ZIP_ARCHIVE=\"${INSTALL_ZIP_ARCHIVE}\"\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ] ; then pecl install zip \\\n && docker-php-ext-enable zip ; fi\n#  ####################################\n#   PHP Memcached:\n#  ####################################\nARG INSTALL_MEMCACHED=true\nENV INSTALL_MEMCACHED=\"${INSTALL_MEMCACHED}\"\nRUN if [ ${INSTALL_MEMCACHED} = true ] ; then curl -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\" \\\n && mkdir -p memcached \\\n && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n && (cd memcached \\\n && phpize \\\n && ./configure \\\n && make -j$( nproc ;) \\\n && make install ) \\\n && rm -r memcached \\\n && rm /tmp/memcached.tar.gz \\\n && docker-php-ext-enable memcached ; fi\n#  ####################################\n#   Opcache:\n#  ####################################\nARG INSTALL_OPCACHE=true\nENV INSTALL_OPCACHE=\"${INSTALL_OPCACHE}\"\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache \\\n && docker-php-ext-enable opcache ; fi\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\nCOPY ./laravel.ini /usr/local/etc/php/conf.d\nCOPY ./laravel.pool.conf /usr/local/etc/php-fpm.d/\nRUN rm -r /var/lib/apt/lists/*\nRUN usermod -u 1000 www-data\nWORKDIR /var/www/laravel\nCMD [\"php-fpm\"]\nEXPOSE 9000/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n# --------------------------------------------------------------------------\n#  Image Setup\n# --------------------------------------------------------------------------\n#\n#  To edit the 'php-fpm' base Image, visit its repository on Github\n#     https://github.com/LaraDock/php-fpm\n#\n#  To change its version, see the available Tags on the Docker Hub:\n#     https://hub.docker.com/r/laradock/php-fpm/tags/\n#\nFROM laradock/php-fpm:7.0--1.2\nMAINTAINER Mahmoud Zalt <mahmoud@zalt.me>\n#\n# --------------------------------------------------------------------------\n#  Mandatory Software's Installation\n# --------------------------------------------------------------------------\n#\n#  Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n#  are installed on the base image 'laradock/php-fpm' image. If you want\n#  to add more Software's or remove existing one, you need to edit the\n#  base image (https://github.com/LaraDock/php-fpm).\n#\n#\n# --------------------------------------------------------------------------\n#  Optional Software's Installation\n# --------------------------------------------------------------------------\n#\n#  Optional Software's will only be installed if you set them to `true`\n#  in the `docker-compose.yml` before the build.\n#  Example:\n#    - INSTALL_ZIP_ARCHIVE=true\n#\n# ####################################\n#  xDebug:\n# ####################################\nARG INSTALL_XDEBUG=true\nENV INSTALL_XDEBUG=\"${INSTALL_XDEBUG}\"\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install xdebug \\\n && docker-php-ext-enable xdebug ; fi\n#  Copy xdebug configration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n# ####################################\n#  MongoDB:\n# ####################################\nARG INSTALL_MONGO=true\nENV INSTALL_MONGO=\"${INSTALL_MONGO}\"\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && docker-php-ext-enable mongodb ; fi\n# ####################################\n#  ZipArchive:\n# ####################################\nARG INSTALL_ZIP_ARCHIVE=true\nENV INSTALL_ZIP_ARCHIVE=\"${INSTALL_ZIP_ARCHIVE}\"\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ] ; then pecl install zip \\\n && docker-php-ext-enable zip ; fi\n# ####################################\n#  PHP Memcached:\n# ####################################\nARG INSTALL_MEMCACHED=true\nENV INSTALL_MEMCACHED=\"${INSTALL_MEMCACHED}\"\nRUN if [ ${INSTALL_MEMCACHED} = true ] ; then curl -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\" \\\n && mkdir -p memcached \\\n && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n && (cd memcached \\\n && phpize \\\n && ./configure \\\n && make -j$( nproc ;) \\\n && make install ) \\\n && rm -r memcached \\\n && rm /tmp/memcached.tar.gz \\\n && docker-php-ext-enable memcached ; fi\n# ####################################\n#  Opcache:\n# ####################################\nARG INSTALL_OPCACHE=true\nENV INSTALL_OPCACHE=\"${INSTALL_OPCACHE}\"\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache \\\n && docker-php-ext-enable opcache ; fi\n#\n# --------------------------------------------------------------------------\n#  Final Touch\n# --------------------------------------------------------------------------\n#\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./laravel.pool.conf /usr/local/etc/php-fpm.d/\nRUN rm -r /var/lib/apt/lists/*\nRUN usermod -u 1000 www-data\nWORKDIR /var/www/laravel\nCMD [\"php-fpm\"]\nEXPOSE 9000/tcp\n","injectedSmells":[],"originalDockerfileHash":"fd7ae6f7d6d057995c83574fc191e2bc","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\n#   To edit the 'php-fpm' base Image, visit its repository on Github\n#      https://github.com/LaraDock/php-fpm\n#\n#   To change its version, see the available Tags on the Docker Hub:\n#      https://hub.docker.com/r/laradock/php-fpm/tags/\n#\nFROM laradock/php-fpm:7.0--1.2\nMAINTAINER Mahmoud Zalt <mahmoud@zalt.me>\n#\n#  --------------------------------------------------------------------------\n#   Mandatory Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n#   are installed on the base image 'laradock/php-fpm' image. If you want\n#   to add more Software's or remove existing one, you need to edit the\n#   base image (https://github.com/LaraDock/php-fpm).\n#\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Optional Software's will only be installed if you set them to `true`\n#   in the `docker-compose.yml` before the build.\n#   Example:\n#     - INSTALL_ZIP_ARCHIVE=true\n#\n#  ####################################\n#   xDebug:\n#  ####################################\nARG INSTALL_XDEBUG=true\nENV INSTALL_XDEBUG=\"${INSTALL_XDEBUG}\"\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install xdebug \\\n && docker-php-ext-enable xdebug ; fi\n#   Copy xdebug configration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n#  ####################################\n#   MongoDB:\n#  ####################################\nARG INSTALL_MONGO=true\nENV INSTALL_MONGO=\"${INSTALL_MONGO}\"\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && docker-php-ext-enable mongodb ; fi\n#  ####################################\n#   ZipArchive:\n#  ####################################\nARG INSTALL_ZIP_ARCHIVE=true\nENV INSTALL_ZIP_ARCHIVE=\"${INSTALL_ZIP_ARCHIVE}\"\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ] ; then pecl install zip \\\n && docker-php-ext-enable zip ; fi\n#  ####################################\n#   PHP Memcached:\n#  ####################################\nARG INSTALL_MEMCACHED=true\nENV INSTALL_MEMCACHED=\"${INSTALL_MEMCACHED}\"\nRUN if [ ${INSTALL_MEMCACHED} = true ] ; then curl -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\" \\\n && mkdir -p memcached \\\n && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n && (cd memcached \\\n && phpize \\\n && ./configure \\\n && make -j$( nproc ;) \\\n && make install ) \\\n && rm -r memcached \\\n && rm /tmp/memcached.tar.gz \\\n && docker-php-ext-enable memcached ; fi\n#  ####################################\n#   Opcache:\n#  ####################################\nARG INSTALL_OPCACHE=true\nENV INSTALL_OPCACHE=\"${INSTALL_OPCACHE}\"\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache \\\n && docker-php-ext-enable opcache ; fi\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./laravel.pool.conf /usr/local/etc/php-fpm.d/\nRUN rm -r /var/lib/apt/lists/*\nRUN usermod -u 1000 www-data\nWORKDIR /var/www/laravel\nCMD [\"php-fpm\"]\nEXPOSE 9000/tcp\n","originalDockerfileUglifiedHash":"f594047cdfb8673fbbc77264c29504aa","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fe4127750f68a32b470c9deac187e7fbf6217873.dockerfile"}