{"seed":760309152,"processedDockerfileHash":"4f3cc77258edb3f5c5c7d30005f18e93","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Building:\n#   cp -R /usr/lib/vmware-ovftool/ .\n#   docker build --no-cache -t vic-test -f Dockerfile .\n#   docker tag vic-test gcr.io/eminent-nation-87317/vic-integration-test:1.x\n#   gcloud auth login\n#   gcloud docker -- push gcr.io/eminent-nation-87317/vic-integration-test:1.x\n#   download and install harbor certs, then docker login, then:\n#   docker tag vic-test wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.x\n#   docker push wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.x\nFROM golang:1.8\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\nRUN curl -sL https://deb.nodesource.com/setup_7.x | bash - \\\n && apt-get update \\\n && apt-get install --no-install-recommends jq bc time gcc python-dev libffi-dev libssl-dev sshpass ant ant-optional openjdk-7-jdk rpcbind nfs-common unzip zip bzip2 nodejs parted btrfs-tools e2fsprogs iptables xfsprogs dnsutils netcat google-chrome-stable yum yum-utils cpio rpm ca-certificates xz-utils xorriso sendmail -y \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python ./get-pip.py \\\n && pip install pyasn1==0.4.8 google-apitools==0.5.15 gsutil==4.28 robotframework==6.0.2 robotframework-sshlibrary==3.8.0 robotframework-httplibrary==0.4.2 requests==2.28.2 dbbot==0.1 robotframework-selenium2library==3.0.0 robotframework-pabot==2.15.0 codecov==null --upgrade\n#   Install docker, docker clients 1.11,1.12 and 1.13\n#   Also install docker compose 1.13\nRUN curl -sSL https://get.docker.com/ | sh \\\n && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.11.2.tgz \\\n && tar --strip-components=1 -xvzf docker-1.11.2.tgz -C /usr/bin \\\n && mv /usr/bin/docker /usr/bin/docker1.11 \\\n && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz \\\n && tar --strip-components=1 -xvzf docker-1.12.6.tgz -C /usr/bin \\\n && mv /usr/bin/docker /usr/bin/docker1.12 \\\n && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.13.0.tgz \\\n && tar --strip-components=1 -xvzf docker-1.13.0.tgz -C /usr/bin \\\n && mv /usr/bin/docker /usr/bin/docker1.13 \\\n && ln -s /usr/bin/docker1.13 /usr/bin/docker \\\n && curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s `-`uname -m ` > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/docker-compose\nCOPY vmware-ovftool /usr/lib/vmware-ovftool\nRUN ln -s /usr/lib/vmware-ovftool/ovftool /usr/local/bin/ovftool\nRUN curl -fsSLO https://releases.hashicorp.com/packer/0.12.2/packer_0.12.2_linux_amd64.zip \\\n && unzip packer_0.12.2_linux_amd64.zip -d /usr/bin \\\n && rm packer_0.12.2_linux_amd64.zip\nRUN wget https://github.com/drone/drone-cli/releases/download/v0.8.3/drone_linux_amd64.tar.gz \\\n && tar zxf drone_linux_amd64.tar.gz \\\n && install -t /usr/local/bin drone\nRUN curl -sSL https://github.com/vmware/govmomi/releases/download/v0.17.1/govc_linux_amd64.gz | gzip -d > /usr/local/bin/govc \\\n && chmod +x /usr/local/bin/govc\nRUN wget https://launchpad.net/ubuntu/+source/wget/1.18-2ubuntu1/+build/10470166/+files/wget_1.18-2ubuntu1_amd64.deb \\\n && dpkg -i wget_1.18-2ubuntu1_amd64.deb\n#   Add docker in docker support\n#   version: docker:1.13-dind\n#   reference: https://github.com/docker-library/docker/blob/b202ec7e529f5426e2ad7e8c0a8b82cacd406573/1.13/dind/Dockerfile\n#\n#   https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies\n#   set up subuid/subgid so that \"--userns-remap=default\" works out-of-the-box\nRUN set -x \\\n && groupadd --system dockremap \\\n && adduser --system --ingroup dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid\nENV DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\"\nRUN wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && chmod +x /usr/local/bin/dind\n#   This container needs to be run in privileged mode(run with --privileged option) to make it work\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\nCOPY scripts /opt/vmware/scripts\nENV PATH=\"${PATH}:/opt/vmware/scripts\"\nVOLUME /var/lib/docker\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Building:\n#  cp -R /usr/lib/vmware-ovftool/ .\n#  docker build --no-cache -t vic-test -f Dockerfile .\n#  docker tag vic-test gcr.io/eminent-nation-87317/vic-integration-test:1.x\n#  gcloud auth login\n#  gcloud docker -- push gcr.io/eminent-nation-87317/vic-integration-test:1.x\n#  download and install harbor certs, then docker login, then:\n#  docker tag vic-test wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.x\n#  docker push wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.x\nFROM golang:1.8\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\nRUN curl -sL https://deb.nodesource.com/setup_7.x | bash - \\\n && apt-get update \\\n && apt-get install --no-install-recommends jq bc time gcc python-dev libffi-dev libssl-dev sshpass ant ant-optional openjdk-7-jdk rpcbind nfs-common unzip zip bzip2 nodejs parted btrfs-tools e2fsprogs iptables xfsprogs dnsutils netcat google-chrome-stable yum yum-utils cpio rpm ca-certificates xz-utils xorriso sendmail -y \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python ./get-pip.py \\\n && pip install pyasn1 google-apitools==0.5.15 gsutil==4.28 robotframework robotframework-sshlibrary robotframework-httplibrary requests dbbot robotframework-selenium2library robotframework-pabot codecov --upgrade\n#  Install docker, docker clients 1.11,1.12 and 1.13\n#  Also install docker compose 1.13\nRUN curl -sSL https://get.docker.com/ | sh \\\n && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.11.2.tgz \\\n && tar --strip-components=1 -xvzf docker-1.11.2.tgz -C /usr/bin \\\n && mv /usr/bin/docker /usr/bin/docker1.11 \\\n && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz \\\n && tar --strip-components=1 -xvzf docker-1.12.6.tgz -C /usr/bin \\\n && mv /usr/bin/docker /usr/bin/docker1.12 \\\n && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.13.0.tgz \\\n && tar --strip-components=1 -xvzf docker-1.13.0.tgz -C /usr/bin \\\n && mv /usr/bin/docker /usr/bin/docker1.13 \\\n && ln -s /usr/bin/docker1.13 /usr/bin/docker \\\n && curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s `-`uname -m ` > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/docker-compose\nCOPY vmware-ovftool /usr/lib/vmware-ovftool\nRUN ln -s /usr/lib/vmware-ovftool/ovftool /usr/local/bin/ovftool\nRUN curl -fsSLO https://releases.hashicorp.com/packer/0.12.2/packer_0.12.2_linux_amd64.zip \\\n && unzip packer_0.12.2_linux_amd64.zip -d /usr/bin \\\n && rm packer_0.12.2_linux_amd64.zip\nRUN wget https://github.com/drone/drone-cli/releases/download/v0.8.3/drone_linux_amd64.tar.gz \\\n && tar zxf drone_linux_amd64.tar.gz \\\n && install -t /usr/local/bin drone\nRUN curl -sSL https://github.com/vmware/govmomi/releases/download/v0.17.1/govc_linux_amd64.gz | gzip -d > /usr/local/bin/govc \\\n && chmod +x /usr/local/bin/govc\nRUN wget https://launchpad.net/ubuntu/+source/wget/1.18-2ubuntu1/+build/10470166/+files/wget_1.18-2ubuntu1_amd64.deb \\\n && dpkg -i wget_1.18-2ubuntu1_amd64.deb\n#  Add docker in docker support\n#  version: docker:1.13-dind\n#  reference: https://github.com/docker-library/docker/blob/b202ec7e529f5426e2ad7e8c0a8b82cacd406573/1.13/dind/Dockerfile\n#\n#  https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies\n#  set up subuid/subgid so that \"--userns-remap=default\" works out-of-the-box\nRUN set -x \\\n && groupadd --system dockremap \\\n && adduser --system --ingroup dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid\nENV DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\"\nRUN wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && chmod +x /usr/local/bin/dind\n#  This container needs to be run in privileged mode(run with --privileged option) to make it work\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\nCOPY scripts /opt/vmware/scripts\nENV PATH=\"${PATH}:/opt/vmware/scripts\"\nVOLUME /var/lib/docker\n","injectedSmells":[],"originalDockerfileHash":"44d413efa2884bc899e2b0c52d5165a0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Building:\n#   cp -R /usr/lib/vmware-ovftool/ .\n#   docker build --no-cache -t vic-test -f Dockerfile .\n#   docker tag vic-test gcr.io/eminent-nation-87317/vic-integration-test:1.x\n#   gcloud auth login\n#   gcloud docker -- push gcr.io/eminent-nation-87317/vic-integration-test:1.x\n#   download and install harbor certs, then docker login, then:\n#   docker tag vic-test wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.x\n#   docker push wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.x\nFROM golang:1.8\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\nRUN curl -sL https://deb.nodesource.com/setup_7.x | bash - \\\n && apt-get update \\\n && apt-get install --no-install-recommends jq bc time gcc python-dev libffi-dev libssl-dev sshpass ant ant-optional openjdk-7-jdk rpcbind nfs-common unzip zip bzip2 nodejs parted btrfs-tools e2fsprogs iptables xfsprogs dnsutils netcat google-chrome-stable yum yum-utils cpio rpm ca-certificates xz-utils xorriso sendmail -y \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python ./get-pip.py \\\n && pip install pyasn1 google-apitools==0.5.15 gsutil==4.28 robotframework robotframework-sshlibrary robotframework-httplibrary requests dbbot robotframework-selenium2library robotframework-pabot codecov --upgrade\n#   Install docker, docker clients 1.11,1.12 and 1.13\n#   Also install docker compose 1.13\nRUN curl -sSL https://get.docker.com/ | sh \\\n && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.11.2.tgz \\\n && tar --strip-components=1 -xvzf docker-1.11.2.tgz -C /usr/bin \\\n && mv /usr/bin/docker /usr/bin/docker1.11 \\\n && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz \\\n && tar --strip-components=1 -xvzf docker-1.12.6.tgz -C /usr/bin \\\n && mv /usr/bin/docker /usr/bin/docker1.12 \\\n && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.13.0.tgz \\\n && tar --strip-components=1 -xvzf docker-1.13.0.tgz -C /usr/bin \\\n && mv /usr/bin/docker /usr/bin/docker1.13 \\\n && ln -s /usr/bin/docker1.13 /usr/bin/docker \\\n && curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s `-`uname -m ` > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/docker-compose\nCOPY vmware-ovftool /usr/lib/vmware-ovftool\nRUN ln -s /usr/lib/vmware-ovftool/ovftool /usr/local/bin/ovftool\nRUN curl -fsSLO https://releases.hashicorp.com/packer/0.12.2/packer_0.12.2_linux_amd64.zip \\\n && unzip packer_0.12.2_linux_amd64.zip -d /usr/bin \\\n && rm packer_0.12.2_linux_amd64.zip\nRUN wget https://github.com/drone/drone-cli/releases/download/v0.8.3/drone_linux_amd64.tar.gz \\\n && tar zxf drone_linux_amd64.tar.gz \\\n && install -t /usr/local/bin drone\nRUN curl -sSL https://github.com/vmware/govmomi/releases/download/v0.17.1/govc_linux_amd64.gz | gzip -d > /usr/local/bin/govc \\\n && chmod +x /usr/local/bin/govc\nRUN wget https://launchpad.net/ubuntu/+source/wget/1.18-2ubuntu1/+build/10470166/+files/wget_1.18-2ubuntu1_amd64.deb \\\n && dpkg -i wget_1.18-2ubuntu1_amd64.deb\n#   Add docker in docker support\n#   version: docker:1.13-dind\n#   reference: https://github.com/docker-library/docker/blob/b202ec7e529f5426e2ad7e8c0a8b82cacd406573/1.13/dind/Dockerfile\n#\n#   https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies\n#   set up subuid/subgid so that \"--userns-remap=default\" works out-of-the-box\nRUN set -x \\\n && groupadd --system dockremap \\\n && adduser --system --ingroup dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid\nENV DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\"\nRUN wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && chmod +x /usr/local/bin/dind\n#   This container needs to be run in privileged mode(run with --privileged option) to make it work\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\nCOPY scripts /opt/vmware/scripts\nENV PATH=\"${PATH}:/opt/vmware/scripts\"\nVOLUME /var/lib/docker\n","originalDockerfileUglifiedHash":"0a1235f17043071c8483b9470e55c996","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4370222b32b0050833f50ca3b5a4df627a126f50.dockerfile"}