{"seed":3473407548,"processedDockerfileHash":"2f99b725e9b1339229d5ed0963b5a24d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM pypy:2\n#   Install the necessary packages:\nRUN pip install Django~==.11 psycopg2cffi==2.9.0 Pillow==9.5.0 pytz==2023.3 gevent==22.10.2 gunicorn==20.1.0\n#   Install pgbouncer:\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql-common=225 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /opt \\\n && cd /opt \\\n && git clone https://github.com/pgbouncer/pgbouncer.git \\\n && cd /opt/pgbouncer \\\n && git checkout pgbouncer_1_7_2 \\\n && git submodule init \\\n && git submodule update \\\n && ./autogen.sh \\\n && ./configure --enable-evdns=no \\\n && make \\\n && make install \\\n && rm -rf /opt/pgbouncer\n#   Copy the files we need:\nCOPY cmbarter /usr/local/share/cmbarter/cmbarter/\nCOPY doc /usr/local/share/cmbarter/doc/\nCOPY static /usr/local/share/cmbarter/static/\nCOPY generate_regkeys.py /usr/local/bin/\nCOPY docker/read_secrets.sh /usr/local/bin/\n#   \"read_secrets.sh\" verifies if CMBARTER_REGISTRATION_SECRET and\n#    CMBARTER_SECRET_KEY environment variables are set. If one is not\n#    set, it tries to set it to the contents of the file with the same\n#    name (the name of the variable) in the /run/secrets/ directory.\nENTRYPOINT [\"read_secrets.sh\"]\nCMD [\"gunicorn\", \"cmbarter.wsgi\"]\nEXPOSE 8000/tcp\nENV PYTHONPATH=\"/usr/local/share/cmbarter\"\nENV GUNICORN_CMD_ARGS=\"-b :8000 -k gevent --log-level=warning --access-logfile=- --error-logfile=-\"\n#  ###############################################################################\n#   Set this to the number of worker processes for handling requests --\n#   a positive integer generally in the 2-4 * $NUM_CORES range. You may\n#   want to vary this a bit to find the best for your particular\n#   workload.\nENV WEB_CONCURRENCY=\"1\"\n#   Set this to your site domain name.\nENV CMBARTER_HOST=\"localhost\"\n#   Set this to the PostgreSQL database connection string.\nENV CMBARTER_DSN=\"host=db dbname=cmbarter user=postgres password=mysecretpassword\"\n#   Leave this variable empty or set it to a random, long, secret string.\nENV CMBARTER_SECRET_KEY=\"\"\n#   This should point to a page telling more about the site.\nENV CMBARTER_ABOUT_US_URL=\"https://sourceforge.net/projects/cmb/\"\n#   This should be \"False\" in production.\nENV CMBARTER_DEBUG_MODE=\"False\"\n#   Sign-up and log-in settings:\nENV CMBARTER_MIN_PASSWORD_LENGTH=\"10\"\nENV CMBARTER_SHOW_CAPTCHA_ON_SIGNUP=\"True\"\nENV CMBARTER_SHOW_CAPTCHA_ON_REPETITIVE_LOGIN_FAILURE=\"True\"\n#   By default, CMB is configured to show CAPTHCA on sign-up, and after\n#   five unsuccessful attempts to log-in. If you have not altered the\n#   default behavior, you should obtain your own public/private key pair\n#   from www.google.com/recaptcha, and put it here:\nENV CMBARTER_RECAPTCHA_PUBLIC_KEY=\"6Ledx7wSAAAAAICFw8vB-2ghpDjzGogPRi6-3FCr\"\nENV CMBARTER_RECAPTCHA_PIVATE_KEY=\"6Ledx7wSAAAAAEskQ7Mbi-oqneHDSFVUkxGitn_y\"\n#   If a non-empty string is set as registration secret, CMB will\n#   require a registration key for users to sign up. In this case\n#   \"generate_regkeys.py\" can be used to generate user registration\n#   keys. Also, an URL can be specified that redirects to a web page\n#   where users are told how to obtain a registration key.\nENV CMBARTER_REGISTRATION_SECRET=\"\"\nENV CMBARTER_REGISTRATION_KEY_HELP_URL=\"\"\n#   The time zone of your users. For example: Europe/Rome\nENV CMBARTER_DEFAULT_USERS_TIME_ZONE=\"\"\n#   Set this to a page where users can search for trusted partners.\nENV CMBARTER_SEARCH_PARTNERS_URL=\"\"\n#   This is the maximum size in bytes for users' uploaded photographs.\nENV CMBARTER_MAX_IMAGE_SIZE=\"716800\"\n#   This is the maximum amount of pixels (width * height) in users'\n#   uploaded photographs.\nENV CMBARTER_MAX_IMAGE_PIXELS=\"30000000\"\n#   By default, CMB is configured to maintain a whitelist of \"good\" IP\n#   addresses. This auto-generated whitelist can be used to configure\n#   your firewall to protect your web-servers from DoS attacks. To be\n#   able to reliably determine the IP addresses of your clients, CMB\n#   should know the IP address(es) of all reverse proxy servers in your\n#   network. Normally, here you should substitute 'proxy' with the name\n#   or the IP of your reverse-proxy server. If you have more than one\n#   reverse-proxy in your network, you should pass them all like this:\n#   hosts(\\'proxy1\\', \\'proxy2\\', \\'proxy3\\')\n#\n#   NOTE: The backslashes are needed to escape the quotes.\nENV CMBARTER_REVERSE_PROXIES=\"hosts(\\'proxy\\')\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM pypy:2\n#  Install the necessary packages:\nRUN pip install Django~==.11 psycopg2cffi Pillow pytz gevent gunicorn\n#  Install pgbouncer:\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql-common -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /opt \\\n && cd /opt \\\n && git clone https://github.com/pgbouncer/pgbouncer.git \\\n && cd /opt/pgbouncer \\\n && git checkout pgbouncer_1_7_2 \\\n && git submodule init \\\n && git submodule update \\\n && ./autogen.sh \\\n && ./configure --enable-evdns=no \\\n && make \\\n && make install \\\n && rm -rf /opt/pgbouncer\n#  Copy the files we need:\nCOPY cmbarter /usr/local/share/cmbarter/cmbarter/\nCOPY doc /usr/local/share/cmbarter/doc/\nCOPY static /usr/local/share/cmbarter/static/\nCOPY generate_regkeys.py /usr/local/bin/\nCOPY docker/read_secrets.sh /usr/local/bin/\n#  \"read_secrets.sh\" verifies if CMBARTER_REGISTRATION_SECRET and\n#   CMBARTER_SECRET_KEY environment variables are set. If one is not\n#   set, it tries to set it to the contents of the file with the same\n#   name (the name of the variable) in the /run/secrets/ directory.\nENTRYPOINT [\"read_secrets.sh\"]\nCMD [\"gunicorn\", \"cmbarter.wsgi\"]\nEXPOSE 8000/tcp\nENV PYTHONPATH=\"/usr/local/share/cmbarter\"\nENV GUNICORN_CMD_ARGS=\"-b :8000 -k gevent --log-level=warning --access-logfile=- --error-logfile=-\"\n# ###############################################################################\n#  Set this to the number of worker processes for handling requests --\n#  a positive integer generally in the 2-4 * $NUM_CORES range. You may\n#  want to vary this a bit to find the best for your particular\n#  workload.\nENV WEB_CONCURRENCY=\"1\"\n#  Set this to your site domain name.\nENV CMBARTER_HOST=\"localhost\"\n#  Set this to the PostgreSQL database connection string.\nENV CMBARTER_DSN=\"host=db dbname=cmbarter user=postgres password=mysecretpassword\"\n#  Leave this variable empty or set it to a random, long, secret string.\nENV CMBARTER_SECRET_KEY=\"\"\n#  This should point to a page telling more about the site.\nENV CMBARTER_ABOUT_US_URL=\"https://sourceforge.net/projects/cmb/\"\n#  This should be \"False\" in production.\nENV CMBARTER_DEBUG_MODE=\"False\"\n#  Sign-up and log-in settings:\nENV CMBARTER_MIN_PASSWORD_LENGTH=\"10\"\nENV CMBARTER_SHOW_CAPTCHA_ON_SIGNUP=\"True\"\nENV CMBARTER_SHOW_CAPTCHA_ON_REPETITIVE_LOGIN_FAILURE=\"True\"\n#  By default, CMB is configured to show CAPTHCA on sign-up, and after\n#  five unsuccessful attempts to log-in. If you have not altered the\n#  default behavior, you should obtain your own public/private key pair\n#  from www.google.com/recaptcha, and put it here:\nENV CMBARTER_RECAPTCHA_PUBLIC_KEY=\"6Ledx7wSAAAAAICFw8vB-2ghpDjzGogPRi6-3FCr\"\nENV CMBARTER_RECAPTCHA_PIVATE_KEY=\"6Ledx7wSAAAAAEskQ7Mbi-oqneHDSFVUkxGitn_y\"\n#  If a non-empty string is set as registration secret, CMB will\n#  require a registration key for users to sign up. In this case\n#  \"generate_regkeys.py\" can be used to generate user registration\n#  keys. Also, an URL can be specified that redirects to a web page\n#  where users are told how to obtain a registration key.\nENV CMBARTER_REGISTRATION_SECRET=\"\"\nENV CMBARTER_REGISTRATION_KEY_HELP_URL=\"\"\n#  The time zone of your users. For example: Europe/Rome\nENV CMBARTER_DEFAULT_USERS_TIME_ZONE=\"\"\n#  Set this to a page where users can search for trusted partners.\nENV CMBARTER_SEARCH_PARTNERS_URL=\"\"\n#  This is the maximum size in bytes for users' uploaded photographs.\nENV CMBARTER_MAX_IMAGE_SIZE=\"716800\"\n#  This is the maximum amount of pixels (width * height) in users'\n#  uploaded photographs.\nENV CMBARTER_MAX_IMAGE_PIXELS=\"30000000\"\n#  By default, CMB is configured to maintain a whitelist of \"good\" IP\n#  addresses. This auto-generated whitelist can be used to configure\n#  your firewall to protect your web-servers from DoS attacks. To be\n#  able to reliably determine the IP addresses of your clients, CMB\n#  should know the IP address(es) of all reverse proxy servers in your\n#  network. Normally, here you should substitute 'proxy' with the name\n#  or the IP of your reverse-proxy server. If you have more than one\n#  reverse-proxy in your network, you should pass them all like this:\n#  hosts(\\'proxy1\\', \\'proxy2\\', \\'proxy3\\')\n#\n#  NOTE: The backslashes are needed to escape the quotes.\nENV CMBARTER_REVERSE_PROXIES=\"hosts(\\'proxy\\')\"\n","injectedSmells":[],"originalDockerfileHash":"7a559508b2df1e6a82db831fcf07fe3c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM pypy:2\n#   Install the necessary packages:\nRUN pip install Django~==.11 psycopg2cffi Pillow pytz gevent gunicorn\n#   Install pgbouncer:\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql-common -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /opt \\\n && cd /opt \\\n && git clone https://github.com/pgbouncer/pgbouncer.git \\\n && cd /opt/pgbouncer \\\n && git checkout pgbouncer_1_7_2 \\\n && git submodule init \\\n && git submodule update \\\n && ./autogen.sh \\\n && ./configure --enable-evdns=no \\\n && make \\\n && make install \\\n && rm -rf /opt/pgbouncer\n#   Copy the files we need:\nCOPY cmbarter /usr/local/share/cmbarter/cmbarter/\nCOPY doc /usr/local/share/cmbarter/doc/\nCOPY static /usr/local/share/cmbarter/static/\nCOPY generate_regkeys.py /usr/local/bin/\nCOPY docker/read_secrets.sh /usr/local/bin/\n#   \"read_secrets.sh\" verifies if CMBARTER_REGISTRATION_SECRET and\n#    CMBARTER_SECRET_KEY environment variables are set. If one is not\n#    set, it tries to set it to the contents of the file with the same\n#    name (the name of the variable) in the /run/secrets/ directory.\nENTRYPOINT [\"read_secrets.sh\"]\nCMD [\"gunicorn\", \"cmbarter.wsgi\"]\nEXPOSE 8000/tcp\nENV PYTHONPATH=\"/usr/local/share/cmbarter\"\nENV GUNICORN_CMD_ARGS=\"-b :8000 -k gevent --log-level=warning --access-logfile=- --error-logfile=-\"\n#  ###############################################################################\n#   Set this to the number of worker processes for handling requests --\n#   a positive integer generally in the 2-4 * $NUM_CORES range. You may\n#   want to vary this a bit to find the best for your particular\n#   workload.\nENV WEB_CONCURRENCY=\"1\"\n#   Set this to your site domain name.\nENV CMBARTER_HOST=\"localhost\"\n#   Set this to the PostgreSQL database connection string.\nENV CMBARTER_DSN=\"host=db dbname=cmbarter user=postgres password=mysecretpassword\"\n#   Leave this variable empty or set it to a random, long, secret string.\nENV CMBARTER_SECRET_KEY=\"\"\n#   This should point to a page telling more about the site.\nENV CMBARTER_ABOUT_US_URL=\"https://sourceforge.net/projects/cmb/\"\n#   This should be \"False\" in production.\nENV CMBARTER_DEBUG_MODE=\"False\"\n#   Sign-up and log-in settings:\nENV CMBARTER_MIN_PASSWORD_LENGTH=\"10\"\nENV CMBARTER_SHOW_CAPTCHA_ON_SIGNUP=\"True\"\nENV CMBARTER_SHOW_CAPTCHA_ON_REPETITIVE_LOGIN_FAILURE=\"True\"\n#   By default, CMB is configured to show CAPTHCA on sign-up, and after\n#   five unsuccessful attempts to log-in. If you have not altered the\n#   default behavior, you should obtain your own public/private key pair\n#   from www.google.com/recaptcha, and put it here:\nENV CMBARTER_RECAPTCHA_PUBLIC_KEY=\"6Ledx7wSAAAAAICFw8vB-2ghpDjzGogPRi6-3FCr\"\nENV CMBARTER_RECAPTCHA_PIVATE_KEY=\"6Ledx7wSAAAAAEskQ7Mbi-oqneHDSFVUkxGitn_y\"\n#   If a non-empty string is set as registration secret, CMB will\n#   require a registration key for users to sign up. In this case\n#   \"generate_regkeys.py\" can be used to generate user registration\n#   keys. Also, an URL can be specified that redirects to a web page\n#   where users are told how to obtain a registration key.\nENV CMBARTER_REGISTRATION_SECRET=\"\"\nENV CMBARTER_REGISTRATION_KEY_HELP_URL=\"\"\n#   The time zone of your users. For example: Europe/Rome\nENV CMBARTER_DEFAULT_USERS_TIME_ZONE=\"\"\n#   Set this to a page where users can search for trusted partners.\nENV CMBARTER_SEARCH_PARTNERS_URL=\"\"\n#   This is the maximum size in bytes for users' uploaded photographs.\nENV CMBARTER_MAX_IMAGE_SIZE=\"716800\"\n#   This is the maximum amount of pixels (width * height) in users'\n#   uploaded photographs.\nENV CMBARTER_MAX_IMAGE_PIXELS=\"30000000\"\n#   By default, CMB is configured to maintain a whitelist of \"good\" IP\n#   addresses. This auto-generated whitelist can be used to configure\n#   your firewall to protect your web-servers from DoS attacks. To be\n#   able to reliably determine the IP addresses of your clients, CMB\n#   should know the IP address(es) of all reverse proxy servers in your\n#   network. Normally, here you should substitute 'proxy' with the name\n#   or the IP of your reverse-proxy server. If you have more than one\n#   reverse-proxy in your network, you should pass them all like this:\n#   hosts(\\'proxy1\\', \\'proxy2\\', \\'proxy3\\')\n#\n#   NOTE: The backslashes are needed to escape the quotes.\nENV CMBARTER_REVERSE_PROXIES=\"hosts(\\'proxy\\')\"\n","originalDockerfileUglifiedHash":"fb7edd85ba10f6e58157ee3b6bf7f27f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bf6703fa1f88bb8edddf5fe0d27e0479891c3482.dockerfile"}