{"seed":307140845,"processedDockerfileHash":"76b50aa376a36944c0fcdf734149c83b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.7\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nENV BRO_VERSION=\"2.5.1\"\nCOPY patches /tmp\nRUN apk add zlib=1.2.11-r1 openssl=1.0.2t-r0 libstdc++=6.4.0-r5 libpcap=1.8.1-r1 geoip=1.6.11-r0 libgcc=6.4.0-r5 tini=0.16.1-r0 curl=7.61.1-r3 inotify-tools=3.14-r2 jq=1.5-r5 bind-tools=9.11.8-r0 --no-cache\nRUN apk add linux-headers=4.4.6-r2 openssl-dev=1.0.2t-r0 libpcap-dev=1.8.1-r1 python-dev geoip-dev=1.6.11-r0 zlib-dev=1.2.11-r1 binutils=2.30-r2 curl-dev=7.61.1-r3 fts-dev=1.2.7-r0 cmake=3.9.5-r0 clang=5.0.0-r0 bison=3.0.4-r0 perl=5.26.3-r0 make=4.2.1-r0 flex=2.6.4-r1 git=2.15.4-r0 g++=6.4.0-r5 fts=1.2.7-r0 --no-cache -t .build-deps \\\n && cd /tmp \\\n && git clone --recursive --branch v$BRO_VERSION git://git.bro.org/bro \\\n && echo \"===> Applying patches...\" \\\n && cd /tmp/bro \\\n && patch -p1 < /tmp/bro-musl.patch \\\n && cp /tmp/FindFTS.cmake cmake \\\n && cd /tmp/bro/aux/binpac \\\n && patch -p1 < /tmp/binpac-musl.patch \\\n && echo \"===> Compiling bro...\" \\\n && cd /tmp/bro \\\n && CC=clang ./configure --disable-broker --disable-broctl --disable-broccoli --disable-auxtools --prefix=/usr/local \\\n && make \\\n && make install \\\n && echo \"===> Compiling af_packet plugin...\" \\\n && cd /tmp/bro/aux/plugins \\\n && git clone https://github.com/J-Gras/bro-af_packet-plugin \\\n && cd /tmp/bro/aux/plugins/bro-af_packet-plugin \\\n && make distclean \\\n && CC=clang ./configure --with-kernel=/usr \\\n && make \\\n && make install \\\n && echo \"===> Compiling elasticsearch plugin...\" \\\n && git clone -b release https://github.com/bro/bro-plugins.git /tmp/plugins \\\n && mv /tmp/plugins/elasticsearch /tmp/bro/aux/plugins/elasticsearch \\\n && echo \"* Tweaks to improve elasticsearch plugin's performance in docker\" \\\n && cd /tmp/bro/aux/plugins/elasticsearch/scripts \\\n && patch -p1 < /tmp/esplung-init.patch \\\n && cd /tmp/bro/aux/plugins/elasticsearch/src \\\n && patch -p1 < /tmp/ElasticSearch.patch \\\n && cd /tmp/bro/aux/plugins/elasticsearch/scripts/Bro/ElasticSearch \\\n && patch -p1 < /tmp/logs-to-elasticsearch.patch \\\n && echo \"* Tweaks protocols to improve indexing logs into elasticsearch\" \\\n && PROTOS=/usr/local/share/bro/base/protocols \\\n && sed -i \"s/version: count \\&log/socks_version: count \\&log/g\" $PROTOS/socks/main.bro \\\n && sed -i \"s/$version=/$socks_version=/g\" $PROTOS/socks/main.bro \\\n && sed -i \"s/version: string \\&log/ssl_version: string \\&log/g\" $PROTOS/ssl/main.bro \\\n && sed -i \"s/$version=/$ssl_version=/g\" $PROTOS/ssl/main.bro \\\n && sed -i \"s/version: count \\&log/ssh_version: count \\&log/g\" $PROTOS/ssh/main.bro \\\n && sed -i \"s/$version =/$ssh_version =/g\" $PROTOS/ssh/main.bro \\\n && sed -i \"s/version: string \\&log/snmp_version: string \\&log/g\" $PROTOS/snmp/main.bro \\\n && sed -i \"s/$version=/$snmp_version=/g\" $PROTOS/snmp/main.bro \\\n && echo \"* Build elasticsearch plugin\" \\\n && cd /tmp/bro/aux/plugins/elasticsearch \\\n && CC=clang ./configure \\\n && make \\\n && make install \\\n && echo \"* Stop local logging to prevent filling up the container with logs\" \\\n && sed -i \"s/WRITER_ASCII/WRITER_NONE/g\" /usr/local/share/bro/base/frameworks/logging/main.bro \\\n && echo \"===> Shrinking image...\" \\\n && strip -s /usr/local/bin/bro \\\n && rm -rf /tmp/* \\\n && apk del --purge .build-deps\nRUN echo \"===> Check if elasticsearch plugin installed...\" \\\n && /usr/local/bin/bro -N Bro::ElasticSearch\n#   Install the GeoIPLite Database\nRUN mkdir -p /usr/share/GeoIP/ \\\n && GEOIP=geolite.maxmind.com/download/geoip/database \\\n && curl -s http://${GEOIP}/GeoLiteCity.dat.gz | zcat > /usr/share/GeoIP/GeoIPCity.dat \\\n && curl -s http://${GEOIP}/GeoLiteCityv6-beta/GeoLiteCityv6.dat.gz | zcat > /usr/share/GeoIP/GeoIPCityv6.dat\nENV BROPATH=\".:/data/config:/usr/local/share/bro:/usr/local/share/bro/policy:/usr/local/share/bro/site\"\nWORKDIR /pcap\n#   Add some scripts\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/local/share/bro/passwords/log-passwords.bro https://github.com/blacktop/docker-bro/raw/master/scripts/log-passwords.bro\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/local/share/bro/geodata/conn-add-geodata.bro https://github.com/blacktop/docker-bro/raw/master/scripts/conn-add-geodata.bro\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/local/share/bro/zip/zipfilenames.bro https://github.com/moshekaplan/bro_zipfilenames/raw/master/zipfilenames.bro\nCOPY local.bro /usr/local/share/bro/site/local.bro\nCOPY template.json /template.json\nCOPY index-pattern.json /index-pattern.json\nCOPY entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/sbin/tini\", \"/entrypoint.sh\"]\nCMD [\"-h\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.7\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nENV BRO_VERSION=\"2.5.1\"\nCOPY patches /tmp\nRUN apk add --no-cache zlib openssl libstdc++ libpcap geoip libgcc tini curl inotify-tools jq bind-tools\nRUN apk add --no-cache -t .build-deps linux-headers openssl-dev libpcap-dev python-dev geoip-dev zlib-dev binutils curl-dev fts-dev cmake clang bison perl make flex git g++ fts \\\n && cd /tmp \\\n && git clone --recursive --branch v$BRO_VERSION git://git.bro.org/bro \\\n && echo \"===> Applying patches...\" \\\n && cd /tmp/bro \\\n && patch -p1 < /tmp/bro-musl.patch \\\n && cp /tmp/FindFTS.cmake cmake \\\n && cd /tmp/bro/aux/binpac \\\n && patch -p1 < /tmp/binpac-musl.patch \\\n && echo \"===> Compiling bro...\" \\\n && cd /tmp/bro \\\n && CC=clang ./configure --disable-broker --disable-broctl --disable-broccoli --disable-auxtools --prefix=/usr/local \\\n && make \\\n && make install \\\n && echo \"===> Compiling af_packet plugin...\" \\\n && cd /tmp/bro/aux/plugins \\\n && git clone https://github.com/J-Gras/bro-af_packet-plugin \\\n && cd /tmp/bro/aux/plugins/bro-af_packet-plugin \\\n && make distclean \\\n && CC=clang ./configure --with-kernel=/usr \\\n && make \\\n && make install \\\n && echo \"===> Compiling elasticsearch plugin...\" \\\n && git clone -b release https://github.com/bro/bro-plugins.git /tmp/plugins \\\n && mv /tmp/plugins/elasticsearch /tmp/bro/aux/plugins/elasticsearch \\\n && echo \"* Tweaks to improve elasticsearch plugin's performance in docker\" \\\n && cd /tmp/bro/aux/plugins/elasticsearch/scripts \\\n && patch -p1 < /tmp/esplung-init.patch \\\n && cd /tmp/bro/aux/plugins/elasticsearch/src \\\n && patch -p1 < /tmp/ElasticSearch.patch \\\n && cd /tmp/bro/aux/plugins/elasticsearch/scripts/Bro/ElasticSearch \\\n && patch -p1 < /tmp/logs-to-elasticsearch.patch \\\n && echo \"* Tweaks protocols to improve indexing logs into elasticsearch\" \\\n && PROTOS=/usr/local/share/bro/base/protocols \\\n && sed -i \"s/version: count \\&log/socks_version: count \\&log/g\" $PROTOS/socks/main.bro \\\n && sed -i \"s/$version=/$socks_version=/g\" $PROTOS/socks/main.bro \\\n && sed -i \"s/version: string \\&log/ssl_version: string \\&log/g\" $PROTOS/ssl/main.bro \\\n && sed -i \"s/$version=/$ssl_version=/g\" $PROTOS/ssl/main.bro \\\n && sed -i \"s/version: count \\&log/ssh_version: count \\&log/g\" $PROTOS/ssh/main.bro \\\n && sed -i \"s/$version =/$ssh_version =/g\" $PROTOS/ssh/main.bro \\\n && sed -i \"s/version: string \\&log/snmp_version: string \\&log/g\" $PROTOS/snmp/main.bro \\\n && sed -i \"s/$version=/$snmp_version=/g\" $PROTOS/snmp/main.bro \\\n && echo \"* Build elasticsearch plugin\" \\\n && cd /tmp/bro/aux/plugins/elasticsearch \\\n && CC=clang ./configure \\\n && make \\\n && make install \\\n && echo \"* Stop local logging to prevent filling up the container with logs\" \\\n && sed -i \"s/WRITER_ASCII/WRITER_NONE/g\" /usr/local/share/bro/base/frameworks/logging/main.bro \\\n && echo \"===> Shrinking image...\" \\\n && strip -s /usr/local/bin/bro \\\n && rm -rf /tmp/* \\\n && apk del --purge .build-deps\nRUN echo \"===> Check if elasticsearch plugin installed...\" \\\n && /usr/local/bin/bro -N Bro::ElasticSearch\n#  Install the GeoIPLite Database\nRUN mkdir -p /usr/share/GeoIP/ \\\n && GEOIP=geolite.maxmind.com/download/geoip/database \\\n && curl -s http://${GEOIP}/GeoLiteCity.dat.gz | zcat > /usr/share/GeoIP/GeoIPCity.dat \\\n && curl -s http://${GEOIP}/GeoLiteCityv6-beta/GeoLiteCityv6.dat.gz | zcat > /usr/share/GeoIP/GeoIPCityv6.dat\nENV BROPATH=\".:/data/config:/usr/local/share/bro:/usr/local/share/bro/policy:/usr/local/share/bro/site\"\nWORKDIR /pcap\n#  Add some scripts\nADD https://github.com/blacktop/docker-bro/raw/master/scripts/log-passwords.bro /usr/local/share/bro/passwords/log-passwords.bro\nADD https://github.com/blacktop/docker-bro/raw/master/scripts/conn-add-geodata.bro /usr/local/share/bro/geodata/conn-add-geodata.bro\nADD https://github.com/moshekaplan/bro_zipfilenames/raw/master/zipfilenames.bro /usr/local/share/bro/zip/zipfilenames.bro\nCOPY local.bro /usr/local/share/bro/site/local.bro\nCOPY template.json /template.json\nCOPY index-pattern.json /index-pattern.json\nCOPY entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/sbin/tini\", \"/entrypoint.sh\"]\nCMD [\"-h\"]\n","injectedSmells":[],"originalDockerfileHash":"caec1367cecaf58d17bc3cc2124e98ed","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.7\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nENV BRO_VERSION=\"2.5.1\"\nCOPY patches /tmp\nRUN apk add --no-cache zlib openssl libstdc++ libpcap geoip libgcc tini curl inotify-tools jq bind-tools\nRUN apk add --no-cache -t .build-deps linux-headers openssl-dev libpcap-dev python-dev geoip-dev zlib-dev binutils curl-dev fts-dev cmake clang bison perl make flex git g++ fts \\\n && cd /tmp \\\n && git clone --recursive --branch v$BRO_VERSION git://git.bro.org/bro \\\n && echo \"===> Applying patches...\" \\\n && cd /tmp/bro \\\n && patch -p1 < /tmp/bro-musl.patch \\\n && cp /tmp/FindFTS.cmake cmake \\\n && cd /tmp/bro/aux/binpac \\\n && patch -p1 < /tmp/binpac-musl.patch \\\n && echo \"===> Compiling bro...\" \\\n && cd /tmp/bro \\\n && CC=clang ./configure --disable-broker --disable-broctl --disable-broccoli --disable-auxtools --prefix=/usr/local \\\n && make \\\n && make install \\\n && echo \"===> Compiling af_packet plugin...\" \\\n && cd /tmp/bro/aux/plugins \\\n && git clone https://github.com/J-Gras/bro-af_packet-plugin \\\n && cd /tmp/bro/aux/plugins/bro-af_packet-plugin \\\n && make distclean \\\n && CC=clang ./configure --with-kernel=/usr \\\n && make \\\n && make install \\\n && echo \"===> Compiling elasticsearch plugin...\" \\\n && git clone -b release https://github.com/bro/bro-plugins.git /tmp/plugins \\\n && mv /tmp/plugins/elasticsearch /tmp/bro/aux/plugins/elasticsearch \\\n && echo \"* Tweaks to improve elasticsearch plugin's performance in docker\" \\\n && cd /tmp/bro/aux/plugins/elasticsearch/scripts \\\n && patch -p1 < /tmp/esplung-init.patch \\\n && cd /tmp/bro/aux/plugins/elasticsearch/src \\\n && patch -p1 < /tmp/ElasticSearch.patch \\\n && cd /tmp/bro/aux/plugins/elasticsearch/scripts/Bro/ElasticSearch \\\n && patch -p1 < /tmp/logs-to-elasticsearch.patch \\\n && echo \"* Tweaks protocols to improve indexing logs into elasticsearch\" \\\n && PROTOS=/usr/local/share/bro/base/protocols \\\n && sed -i \"s/version: count \\&log/socks_version: count \\&log/g\" $PROTOS/socks/main.bro \\\n && sed -i \"s/$version=/$socks_version=/g\" $PROTOS/socks/main.bro \\\n && sed -i \"s/version: string \\&log/ssl_version: string \\&log/g\" $PROTOS/ssl/main.bro \\\n && sed -i \"s/$version=/$ssl_version=/g\" $PROTOS/ssl/main.bro \\\n && sed -i \"s/version: count \\&log/ssh_version: count \\&log/g\" $PROTOS/ssh/main.bro \\\n && sed -i \"s/$version =/$ssh_version =/g\" $PROTOS/ssh/main.bro \\\n && sed -i \"s/version: string \\&log/snmp_version: string \\&log/g\" $PROTOS/snmp/main.bro \\\n && sed -i \"s/$version=/$snmp_version=/g\" $PROTOS/snmp/main.bro \\\n && echo \"* Build elasticsearch plugin\" \\\n && cd /tmp/bro/aux/plugins/elasticsearch \\\n && CC=clang ./configure \\\n && make \\\n && make install \\\n && echo \"* Stop local logging to prevent filling up the container with logs\" \\\n && sed -i \"s/WRITER_ASCII/WRITER_NONE/g\" /usr/local/share/bro/base/frameworks/logging/main.bro \\\n && echo \"===> Shrinking image...\" \\\n && strip -s /usr/local/bin/bro \\\n && rm -rf /tmp/* \\\n && apk del --purge .build-deps\nRUN echo \"===> Check if elasticsearch plugin installed...\" \\\n && /usr/local/bin/bro -N Bro::ElasticSearch\n#   Install the GeoIPLite Database\nRUN mkdir -p /usr/share/GeoIP/ \\\n && GEOIP=geolite.maxmind.com/download/geoip/database \\\n && curl -s http://${GEOIP}/GeoLiteCity.dat.gz | zcat > /usr/share/GeoIP/GeoIPCity.dat \\\n && curl -s http://${GEOIP}/GeoLiteCityv6-beta/GeoLiteCityv6.dat.gz | zcat > /usr/share/GeoIP/GeoIPCityv6.dat\nENV BROPATH=\".:/data/config:/usr/local/share/bro:/usr/local/share/bro/policy:/usr/local/share/bro/site\"\nWORKDIR /pcap\n#   Add some scripts\nADD https://github.com/blacktop/docker-bro/raw/master/scripts/log-passwords.bro /usr/local/share/bro/passwords/log-passwords.bro\nADD https://github.com/blacktop/docker-bro/raw/master/scripts/conn-add-geodata.bro /usr/local/share/bro/geodata/conn-add-geodata.bro\nADD https://github.com/moshekaplan/bro_zipfilenames/raw/master/zipfilenames.bro /usr/local/share/bro/zip/zipfilenames.bro\nCOPY local.bro /usr/local/share/bro/site/local.bro\nCOPY template.json /template.json\nCOPY index-pattern.json /index-pattern.json\nCOPY entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/sbin/tini\", \"/entrypoint.sh\"]\nCMD [\"-h\"]\n","originalDockerfileUglifiedHash":"50894e8540d8638c91cdbce70f2b910e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cb1b76073dc18c01f45f0f9fee6b1f0de9026ba7.dockerfile"}