{"seed":2418529920,"processedDockerfileHash":"21f8437051ea3bab36575f12dc3e49f1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM vnijs/radiant:latest\nLABEL Vincent=\"Nijs \\\"radiant@rady.ucsd.edu\\\"\"\nARG DOCKERHUB_VERSION_UPDATE\nENV DOCKERHUB_VERSION=\"${DOCKERHUB_VERSION_UPDATE}\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends python3-venv=3.11.2-1 python3-virtualenv=20.19.0+ds-1 libzmq3-dev=4.3.4-6 gpg-agent=2.2.40-1ubuntu2 -y\n#   install python packages\nCOPY requirements.txt /home/${NB_USER}/requirements.txt\nRUN pip3 install -r /home/${NB_USER}/requirements.txt \\\n && rm /home/${NB_USER}/requirements.txt \\\n && python3 -m bash_kernel.install\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=\"DontWarn\"\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash \\\n && apt-get install --no-install-recommends nodejs=18.13.0+dfsg1-1ubuntu2 -y \\\n && npm install npm@9.6.4 -g \\\n && jupyter labextension install @jupyter-widgets/jupyterlab-manager @ryantam626/jupyterlab_code_formatter \\\n && jupyter serverextension enable --py jupyterlab_code_formatter --system\n#   install the R kernel for Jupyter Lab\nRUN R -e 'install.packages(\"IRkernel\")' \\\n && R -e 'IRkernel::installspec(user = FALSE)'\n#   install google chrome\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends google-chrome-stable -y \\\n && wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE `/chromedriver_linux64.zip \\\n && unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/ \\\n && rm -rf /tmp/*\n#   copy logo for use with jupyterlab\nCOPY images/logo200.svg /opt/radiant/logo.svg\n#   update R-packages\nRUN R -e 'radiant.update::radiant.update()'\nRUN pip3 install jupyter-rsession-proxy \\\n && jupyter labextension install jupyterlab-server-proxy \\\n && chown ${NB_USER}:shiny -R /var/lib/shiny-server \\\n && chown ${NB_USER}:shiny -R /var/log/shiny-server\nCOPY jupyter_notebook_config.py /etc/jupyter/\n#   set jupyterlab password based on docker run argument\n#   ARG only leads to conflict with rstudio on alternate port\nARG JPASSWORD=${JPASSWORD:-jupyter}\nENV JPASSWORD=\"${JPASSWORD}\"\n#   adding postgres\n#   mostly from https://docs.docker.com/engine/examples/postgresql_service/\nENV POSTGRES_VERSION=\"10\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql-${POSTGRES_VERSION} postgresql-client-${POSTGRES_VERSION} postgresql-contrib-${POSTGRES_VERSION} -y\n#   Run the rest of the commands as the postgres user\nUSER postgres\n#   create a postgres role for ${NB_USER} with \"postgres\" as the password\n#   create a database \"rsm-docker\" owned by the ${NB_USER} role.\nRUN /etc/init.d/postgresql start \\\n && psql --command \"CREATE USER ${NB_USER} WITH SUPERUSER PASSWORD 'postgres';\" \\\n && createdb -O ${NB_USER} rsm-docker\nCOPY postgresql.conf /etc/postgresql/${POSTGRES_VERSION}/main/postgresql.conf\nCOPY pg_hba.conf /etc/postgresql/${POSTGRES_VERSION}/main/pg_hba.conf\nUSER root\n#   settings for local install of python packages \nENV PYTHONUSERBASE=\"${PYBASE}\" \\\n    JUPYTER_PATH=\"${PYBASE}/share/jupyter\" \\\n    JUPYTER_RUNTIME_DIR=\"${PYBASE}/share/jupyter/runtime\" \\\n    JUPYTER_CONFIG_DIR=\"${PYBASE}/jupyter\" \\\n    SHELL=\"/bin/bash\"\n#   Adding a \"clean up\" script\nCOPY clean.sh /usr/local/bin/clean\nRUN chmod +x /usr/local/bin/clean\n#   install script for spacevim\nCOPY spacevim/spacevim.sh /usr/local/bin/svim\nRUN chmod +x /usr/local/bin/svim\n#   latest pre-release version\nENV CODE_SERVER=\"1.1156-vsc1.33.1\"\nRUN cd /opt \\\n && mkdir /opt/code-server \\\n && cd /opt/code-server \\\n && wget -qO- https://github.com/cdr/code-server/releases/download/${CODE_SERVER}/code-server${CODE_SERVER}-linux-x64.tar.gz | tar zxvf - --strip-components=1\n#   locations to store vscode / code-server settings\nARG CODE_WORKINGDIR=\"/home/$NB_USER/git\" \nENV CODE_WORKINGDIR=\"${CODE_WORKINGDIR}\" \\\n    CODE_USER_DATA_DIR=\"/home/$NB_USER/.rsm-msba/share/code-server\" \\\n    CODE_EXTENSIONS_DIR=\"/home/$NB_USER/.rsm-msba/share/code-server/extensions\" \\\n    CODE_BUILTIN_EXTENSIONS_DIR=\"/opt/code-server/extensions\" \\\n    PATH=\"/opt/code-server:$PATH\"\n#   setup for code-server (aka vscode)\nCOPY images/vscode.svg /opt/code-server/vscode.svg\nCOPY settings.json /opt/code-server/settings.json\nCOPY vsix/*.vsix /opt/code-server/extensions/\nCOPY vscode-setup.sh /usr/local/bin/vscode\nRUN chmod +x /usr/local/bin/vscode\n#   required for coenraads.bracket-pair-colorizer\n#   RUN npm i -g prismjs vscode vscode-uri escape-html\n#   updating the supervisord.conf file for Jupyter\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nEXPOSE 8080/tcp 8787/tcp 8989/tcp 8765/tcp\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n#   Does not work with Rstudio server authentication\n#   USER ${NB_USER}\n#   ENV HOME /home/${NB_USER}\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM vnijs/radiant:latest\nLABEL Vincent=\"Nijs \\\"radiant@rady.ucsd.edu\\\"\"\nARG DOCKERHUB_VERSION_UPDATE\nENV DOCKERHUB_VERSION=\"${DOCKERHUB_VERSION_UPDATE}\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends python3-venv python3-virtualenv libzmq3-dev gpg-agent -y\n#  install python packages\nCOPY requirements.txt /home/${NB_USER}/requirements.txt\nRUN pip3 install -r /home/${NB_USER}/requirements.txt \\\n && rm /home/${NB_USER}/requirements.txt \\\n && python3 -m bash_kernel.install\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=\"DontWarn\"\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash \\\n && apt-get install nodejs -y \\\n && npm install npm -g \\\n && jupyter labextension install @jupyter-widgets/jupyterlab-manager @ryantam626/jupyterlab_code_formatter \\\n && jupyter serverextension enable --py jupyterlab_code_formatter --system\n#  install the R kernel for Jupyter Lab\nRUN R -e 'install.packages(\"IRkernel\")' \\\n && R -e 'IRkernel::installspec(user = FALSE)'\n#  install google chrome\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && apt-get update -y \\\n && apt-get install google-chrome-stable -y \\\n && wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE `/chromedriver_linux64.zip \\\n && unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/ \\\n && rm -rf /tmp/*\n#  copy logo for use with jupyterlab\nCOPY images/logo200.svg /opt/radiant/logo.svg\n#  update R-packages\nRUN R -e 'radiant.update::radiant.update()'\nRUN pip3 install jupyter-rsession-proxy \\\n && jupyter labextension install jupyterlab-server-proxy \\\n && chown ${NB_USER}:shiny -R /var/lib/shiny-server \\\n && chown ${NB_USER}:shiny -R /var/log/shiny-server\nCOPY jupyter_notebook_config.py /etc/jupyter/\n#  set jupyterlab password based on docker run argument\n#  ARG only leads to conflict with rstudio on alternate port\nARG JPASSWORD=${JPASSWORD:-jupyter}\nENV JPASSWORD=\"${JPASSWORD}\"\n#  adding postgres\n#  mostly from https://docs.docker.com/engine/examples/postgresql_service/\nENV POSTGRES_VERSION=\"10\"\nRUN apt-get update \\\n && apt-get install postgresql-${POSTGRES_VERSION} postgresql-client-${POSTGRES_VERSION} postgresql-contrib-${POSTGRES_VERSION} -y\n#  Run the rest of the commands as the postgres user\nUSER postgres\n#  create a postgres role for ${NB_USER} with \"postgres\" as the password\n#  create a database \"rsm-docker\" owned by the ${NB_USER} role.\nRUN /etc/init.d/postgresql start \\\n && psql --command \"CREATE USER ${NB_USER} WITH SUPERUSER PASSWORD 'postgres';\" \\\n && createdb -O ${NB_USER} rsm-docker\nCOPY postgresql.conf /etc/postgresql/${POSTGRES_VERSION}/main/postgresql.conf\nCOPY pg_hba.conf /etc/postgresql/${POSTGRES_VERSION}/main/pg_hba.conf\nUSER root\n#  settings for local install of python packages \nENV PYTHONUSERBASE=\"${PYBASE}\" \\\n    JUPYTER_PATH=\"${PYBASE}/share/jupyter\" \\\n    JUPYTER_RUNTIME_DIR=\"${PYBASE}/share/jupyter/runtime\" \\\n    JUPYTER_CONFIG_DIR=\"${PYBASE}/jupyter\" \\\n    SHELL=\"/bin/bash\"\n#  Adding a \"clean up\" script\nCOPY clean.sh /usr/local/bin/clean\nRUN chmod +x /usr/local/bin/clean\n#  install script for spacevim\nCOPY spacevim/spacevim.sh /usr/local/bin/svim\nRUN chmod +x /usr/local/bin/svim\n#  latest pre-release version\nENV CODE_SERVER=\"1.1156-vsc1.33.1\"\nRUN cd /opt \\\n && mkdir /opt/code-server \\\n && cd /opt/code-server \\\n && wget -qO- https://github.com/cdr/code-server/releases/download/${CODE_SERVER}/code-server${CODE_SERVER}-linux-x64.tar.gz | tar zxvf - --strip-components=1\n#  locations to store vscode / code-server settings\nARG CODE_WORKINGDIR=\"/home/$NB_USER/git\" \nENV CODE_WORKINGDIR=\"${CODE_WORKINGDIR}\" \\\n    CODE_USER_DATA_DIR=\"/home/$NB_USER/.rsm-msba/share/code-server\" \\\n    CODE_EXTENSIONS_DIR=\"/home/$NB_USER/.rsm-msba/share/code-server/extensions\" \\\n    CODE_BUILTIN_EXTENSIONS_DIR=\"/opt/code-server/extensions\" \\\n    PATH=\"/opt/code-server:$PATH\"\n#  setup for code-server (aka vscode)\nCOPY images/vscode.svg /opt/code-server/vscode.svg\nCOPY settings.json /opt/code-server/settings.json\nCOPY vsix/*.vsix /opt/code-server/extensions/\nCOPY vscode-setup.sh /usr/local/bin/vscode\nRUN chmod +x /usr/local/bin/vscode\n#  required for coenraads.bracket-pair-colorizer\n#  RUN npm i -g prismjs vscode vscode-uri escape-html\n#  updating the supervisord.conf file for Jupyter\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nEXPOSE 8080/tcp 8787/tcp 8989/tcp 8765/tcp\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n#  Does not work with Rstudio server authentication\n#  USER ${NB_USER}\n#  ENV HOME /home/${NB_USER}\n","injectedSmells":[],"originalDockerfileHash":"6533471991770823e8dfd62a9027d680","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM vnijs/radiant:latest\nLABEL Vincent=\"Nijs \\\"radiant@rady.ucsd.edu\\\"\"\nARG DOCKERHUB_VERSION_UPDATE\nENV DOCKERHUB_VERSION=\"${DOCKERHUB_VERSION_UPDATE}\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends python3-venv python3-virtualenv libzmq3-dev gpg-agent -y\n#   install python packages\nCOPY requirements.txt /home/${NB_USER}/requirements.txt\nRUN pip3 install -r /home/${NB_USER}/requirements.txt \\\n && rm /home/${NB_USER}/requirements.txt \\\n && python3 -m bash_kernel.install\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=\"DontWarn\"\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash \\\n && apt-get install nodejs -y \\\n && npm install npm -g \\\n && jupyter labextension install @jupyter-widgets/jupyterlab-manager @ryantam626/jupyterlab_code_formatter \\\n && jupyter serverextension enable --py jupyterlab_code_formatter --system\n#   install the R kernel for Jupyter Lab\nRUN R -e 'install.packages(\"IRkernel\")' \\\n && R -e 'IRkernel::installspec(user = FALSE)'\n#   install google chrome\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && apt-get update -y \\\n && apt-get install google-chrome-stable -y \\\n && wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE `/chromedriver_linux64.zip \\\n && unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/ \\\n && rm -rf /tmp/*\n#   copy logo for use with jupyterlab\nCOPY images/logo200.svg /opt/radiant/logo.svg\n#   update R-packages\nRUN R -e 'radiant.update::radiant.update()'\nRUN pip3 install jupyter-rsession-proxy \\\n && jupyter labextension install jupyterlab-server-proxy \\\n && chown ${NB_USER}:shiny -R /var/lib/shiny-server \\\n && chown ${NB_USER}:shiny -R /var/log/shiny-server\nCOPY jupyter_notebook_config.py /etc/jupyter/\n#   set jupyterlab password based on docker run argument\n#   ARG only leads to conflict with rstudio on alternate port\nARG JPASSWORD=${JPASSWORD:-jupyter}\nENV JPASSWORD=\"${JPASSWORD}\"\n#   adding postgres\n#   mostly from https://docs.docker.com/engine/examples/postgresql_service/\nENV POSTGRES_VERSION=\"10\"\nRUN apt-get update \\\n && apt-get install postgresql-${POSTGRES_VERSION} postgresql-client-${POSTGRES_VERSION} postgresql-contrib-${POSTGRES_VERSION} -y\n#   Run the rest of the commands as the postgres user\nUSER postgres\n#   create a postgres role for ${NB_USER} with \"postgres\" as the password\n#   create a database \"rsm-docker\" owned by the ${NB_USER} role.\nRUN /etc/init.d/postgresql start \\\n && psql --command \"CREATE USER ${NB_USER} WITH SUPERUSER PASSWORD 'postgres';\" \\\n && createdb -O ${NB_USER} rsm-docker\nCOPY postgresql.conf /etc/postgresql/${POSTGRES_VERSION}/main/postgresql.conf\nCOPY pg_hba.conf /etc/postgresql/${POSTGRES_VERSION}/main/pg_hba.conf\nUSER root\n#   settings for local install of python packages \nENV PYTHONUSERBASE=\"${PYBASE}\" \\\n    JUPYTER_PATH=\"${PYBASE}/share/jupyter\" \\\n    JUPYTER_RUNTIME_DIR=\"${PYBASE}/share/jupyter/runtime\" \\\n    JUPYTER_CONFIG_DIR=\"${PYBASE}/jupyter\" \\\n    SHELL=\"/bin/bash\"\n#   Adding a \"clean up\" script\nCOPY clean.sh /usr/local/bin/clean\nRUN chmod +x /usr/local/bin/clean\n#   install script for spacevim\nCOPY spacevim/spacevim.sh /usr/local/bin/svim\nRUN chmod +x /usr/local/bin/svim\n#   latest pre-release version\nENV CODE_SERVER=\"1.1156-vsc1.33.1\"\nRUN cd /opt \\\n && mkdir /opt/code-server \\\n && cd /opt/code-server \\\n && wget -qO- https://github.com/cdr/code-server/releases/download/${CODE_SERVER}/code-server${CODE_SERVER}-linux-x64.tar.gz | tar zxvf - --strip-components=1\n#   locations to store vscode / code-server settings\nARG CODE_WORKINGDIR=\"/home/$NB_USER/git\" \nENV CODE_WORKINGDIR=\"${CODE_WORKINGDIR}\" \\\n    CODE_USER_DATA_DIR=\"/home/$NB_USER/.rsm-msba/share/code-server\" \\\n    CODE_EXTENSIONS_DIR=\"/home/$NB_USER/.rsm-msba/share/code-server/extensions\" \\\n    CODE_BUILTIN_EXTENSIONS_DIR=\"/opt/code-server/extensions\" \\\n    PATH=\"/opt/code-server:$PATH\"\n#   setup for code-server (aka vscode)\nCOPY images/vscode.svg /opt/code-server/vscode.svg\nCOPY settings.json /opt/code-server/settings.json\nCOPY vsix/*.vsix /opt/code-server/extensions/\nCOPY vscode-setup.sh /usr/local/bin/vscode\nRUN chmod +x /usr/local/bin/vscode\n#   required for coenraads.bracket-pair-colorizer\n#   RUN npm i -g prismjs vscode vscode-uri escape-html\n#   updating the supervisord.conf file for Jupyter\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nEXPOSE 8080/tcp 8787/tcp 8989/tcp 8765/tcp\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n#   Does not work with Rstudio server authentication\n#   USER ${NB_USER}\n#   ENV HOME /home/${NB_USER}\n","originalDockerfileUglifiedHash":"0ebeedc18bea719a151418a820c2c661","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6fb1a333c90804aa7edd365c552fcd5c93b05b34.dockerfile"}