{"seed":1789391427,"processedDockerfileHash":"ca0b82b29c87e1c0a01314605c6bef93","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"#   This Docker image encapsulates the Laika BOSS: Object Scanning System by \n#   Lockheed Martin Corporation from https://github.com/lmco/laikaboss \n#\n#   To run this image after installing Docker using a standalone instance, use a command like \n#   the following, replacing “~/laikaboss-workdir\" with the path to the location of your \n#   Laika BOSS working directory:\n#\n#   sudo docker run --rm -it -v ~/laikaboss-workdir:/home/nonroot/workdir wzod/laikaboss\n#\n#   To run this image using a networked instance, use a command like this:\n#\n#   sudo docker run --rm -it -p 5558:5558 -v ~/laikaboss-workdir:/home/nonroot/workdir wzod/laikaboss\n#\n#   Before running Laika BOSS, create the  ~/laikaboss-workdir and make it world-accessible\n#   (“chmod a+xwr\").\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#   \n#       http://www.apache.org/licenses/LICENSE-2.0\n#   \n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\nFROM ubuntu:14.04\nMAINTAINER Zod (@wzod)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nUSER root\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y \\\n && apt-add-repository -y multiverse \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends automake=1:1.14.1-2ubuntu1 build-essential=11.6ubuntu6 git=1:1.9.1-1ubuntu0.10 jq=1.3-1.1ubuntu1.1 libfuzzy-dev=2.7-2ubuntu1 libimage-exiftool-perl=9.46-1 liblzma5=5.1.1alpha+20120614-2ubuntu2 libssl-dev=1.0.1f-1ubuntu2.27 libtool=2.4.2-1.7ubuntu1 libzmq3=4.0.4+dfsg-2ubuntu0.1 make=3.81-8.2ubuntu3 python-cffi=0.8.2-0ubuntu1 python-dev=2.7.5-5ubuntu3 python-gevent=1.0-1ubuntu1.1 python-ipy=1:0.81-1 python-m2crypto=0.21.1-3ubuntu5 python-pexpect=3.1-1ubuntu0.1 python-pip=1.5.4-1ubuntu4 python-progressbar=2.3-1 python-pyclamd=0.2.2-1 python-zmq=14.0.1-1build2 unrar=1:5.0.10-1ubuntu0.14.04.1 unzip=6.0-9ubuntu1.5 wget=1.15-1ubuntu1.14.04.5 -y \\\n && pip install setuptools==67.6.1 --upgrade\n#   Retrieve current version of Yara via wget, verify known good hash and install Yara\nRUN\n#   Install additional dependencies\nRUN cd /tmp \\\n && pip install fluent-logger==0.10.0 future==0.18.3 interruptingcow==0.8 javatools==1.5.0 msgpack-python==0.5.6 olefile==0.46 pylzma==0.5.0 py-unrar2==0.99.6 ssdeep==3.4\n#   Add nonroot user, clone repo and setup environment\nRUN groupadd -r nonroot \\\n && useradd -r -g nonroot -d /home/nonroot -s /sbin/nologin -c \"Nonroot User\" nonroot \\\n && mkdir /home/nonroot \\\n && chown -R nonroot:nonroot /home/nonroot\n#   Clone Laika BOSS from GitHub as nonroot user\nUSER nonroot\nRUN cd /home/nonroot \\\n && git clone https://github.com/lmco/laikaboss.git\n#   Run setup script to install Laika BOSS framework, client library, modules and associated scripts (laika.py, laikad.py, cloudscan.py)\nUSER root\nRUN cd /home/nonroot/laikaboss/ \\\n && python setup.py build \\\n && python setup.py install\n#   Clean up and run ldconfig\nRUN ldconfig \\\n && apt-get remove -y --purge automake build-essential libtool \\\n && apt-get autoremove -y --purge \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\nUSER nonroot\nENV HOME=\"/home/nonroot\"\nENV USER=\"nonroot\"\nWORKDIR /home/nonroot/workdir\nENTRYPOINT echo \"To run the standalone scanner, execute laika.py against a file like so:\" \\\n && printf \"\\n\"\"laika.py <filename> | jq -C . | less -r\" \\\n && printf \"\\n\\n\"\"To run the networked instance, first execute laikad.py and use cloudscan against like so:\" \\\n && printf \"\\n\\n\"\"laikad.py &\" \\\n && printf \"\\n\\n\"\"cloudscan.py <filename> | jq -C . | less -r\" \\\n && printf \"\\n\\n\" \\\n && /bin/bash\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This Docker image encapsulates the Laika BOSS: Object Scanning System by \n#  Lockheed Martin Corporation from https://github.com/lmco/laikaboss \n#\n#  To run this image after installing Docker using a standalone instance, use a command like \n#  the following, replacing “~/laikaboss-workdir\" with the path to the location of your \n#  Laika BOSS working directory:\n#\n#  sudo docker run --rm -it -v ~/laikaboss-workdir:/home/nonroot/workdir wzod/laikaboss\n#\n#  To run this image using a networked instance, use a command like this:\n#\n#  sudo docker run --rm -it -p 5558:5558 -v ~/laikaboss-workdir:/home/nonroot/workdir wzod/laikaboss\n#\n#  Before running Laika BOSS, create the  ~/laikaboss-workdir and make it world-accessible\n#  (“chmod a+xwr\").\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#  \n#      http://www.apache.org/licenses/LICENSE-2.0\n#  \n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\nFROM ubuntu:14.04\nMAINTAINER Zod (@wzod)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nUSER root\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && apt-add-repository -y multiverse \\\n && apt-get update -qq \\\n && apt-get install automake build-essential git jq libfuzzy-dev libimage-exiftool-perl liblzma5 libssl-dev libtool libzmq3 make python-cffi python-dev python-gevent python-ipy python-m2crypto python-pexpect python-pip python-progressbar python-pyclamd python-zmq unrar unzip wget -y \\\n && pip install setuptools --upgrade\n#  Retrieve current version of Yara via wget, verify known good hash and install Yara\nRUN cd /tmp \\\n && wget -O yara.v3.5.0.tar.gz \"https://github.com/VirusTotal/yara/archive/v3.5.0.tar.gz\" \\\n && echo 4bc72ee755db85747f7e856afb0e817b788a280ab5e73dee42f159171a9b5299 yara.v3.5.0.tar.gz > sha256sum-yara \\\n && sha256sum -c sha256sum-yara \\\n && tar vxzf yara.v3.5.0.tar.gz \\\n && cd yara-3.5.0/ \\\n && ./bootstrap.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd /tmp \\\n && git clone --recursive https://github.com/VirusTotal/yara-python \\\n && cd yara-python/ \\\n && python setup.py build \\\n && python setup.py install \\\n && cd /tmp \\\n && wget -O pyexiftool-master.zip https://github.com/smarnach/pyexiftool/archive/master.zip \\\n && echo c243efbd226ad00333d03d16a39dc08ceb2ad277bd21b5247a2821156097debd pyexiftool-master.zip > sha256sum-pyexiftool \\\n && sha256sum -c sha256sum-pyexiftool \\\n && unzip pyexiftool-master.zip \\\n && cd pyexiftool-master/ \\\n && python setup.py build \\\n && python setup.py install \\\n && cd /tmp \\\n && wget -O pefile-1.2.10-139.tar.gz \"https://github.com/erocarrera/pefile/archive/pefile-1.2.10-139.tar.gz\" \\\n && echo 3297cb72e6a51befefc3d9b27ec7690b743ee826538629ecf68f4eee64f331ab pefile-1.2.10-139.tar.gz > sha256sum-pefile \\\n && sha256sum -c sha256sum-pefile \\\n && tar vxzf pefile-1.2.10-139.tar.gz \\\n && cd pefile-pefile-1.2.10-139/ \\\n && sed -i s/1.2.10.*/1.2.10.139'/ pefile.py \\\n && python setup.py build \\\n && python setup.py install \\\n && cd /tmp \\\n && wget -O jq \"https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64\" \\\n && echo c6b3a7d7d3e7b70c6f51b706a3b90bd01833846c54d32ca32f0027f00226ff6d jq > sha256sum-jq \\\n && sha256sum -c sha256sum-jq \\\n && chmod 755 jq \\\n && mv jq /usr/local/bin/\n#  Install additional dependencies\nRUN cd /tmp \\\n && pip install fluent-logger future interruptingcow javatools msgpack-python olefile pylzma py-unrar2 ssdeep\n#  Add nonroot user, clone repo and setup environment\nRUN groupadd -r nonroot \\\n && useradd -r -g nonroot -d /home/nonroot -s /sbin/nologin -c \"Nonroot User\" nonroot \\\n && mkdir /home/nonroot \\\n && chown -R nonroot:nonroot /home/nonroot\n#  Clone Laika BOSS from GitHub as nonroot user\nUSER nonroot\nRUN cd /home/nonroot \\\n && git clone https://github.com/lmco/laikaboss.git\n#  Run setup script to install Laika BOSS framework, client library, modules and associated scripts (laika.py, laikad.py, cloudscan.py)\nUSER root\nRUN cd /home/nonroot/laikaboss/ \\\n && python setup.py build \\\n && python setup.py install\n#  Clean up and run ldconfig\nRUN ldconfig \\\n && apt-get remove -y --purge automake build-essential libtool \\\n && apt-get autoremove -y --purge \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\nUSER nonroot\nENV HOME=\"/home/nonroot\"\nENV USER=\"nonroot\"\nWORKDIR /home/nonroot/workdir\nENTRYPOINT echo \"To run the standalone scanner, execute laika.py against a file like so:\" \\\n && printf \"\\n\"\"laika.py <filename> | jq -C . | less -r\" \\\n && printf \"\\n\\n\"\"To run the networked instance, first execute laikad.py and use cloudscan against like so:\" \\\n && printf \"\\n\\n\"\"laikad.py &\" \\\n && printf \"\\n\\n\"\"cloudscan.py <filename> | jq -C . | less -r\" \\\n && printf \"\\n\\n\" \\\n && /bin/bash\n","injectedSmells":[],"originalDockerfileHash":"3d78a5f097f1d16e79f05b956aa7f243","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This Docker image encapsulates the Laika BOSS: Object Scanning System by \n#   Lockheed Martin Corporation from https://github.com/lmco/laikaboss \n#\n#   To run this image after installing Docker using a standalone instance, use a command like \n#   the following, replacing “~/laikaboss-workdir\" with the path to the location of your \n#   Laika BOSS working directory:\n#\n#   sudo docker run --rm -it -v ~/laikaboss-workdir:/home/nonroot/workdir wzod/laikaboss\n#\n#   To run this image using a networked instance, use a command like this:\n#\n#   sudo docker run --rm -it -p 5558:5558 -v ~/laikaboss-workdir:/home/nonroot/workdir wzod/laikaboss\n#\n#   Before running Laika BOSS, create the  ~/laikaboss-workdir and make it world-accessible\n#   (“chmod a+xwr\").\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#   \n#       http://www.apache.org/licenses/LICENSE-2.0\n#   \n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\nFROM ubuntu:14.04\nMAINTAINER Zod (@wzod)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nUSER root\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && apt-add-repository -y multiverse \\\n && apt-get update -qq \\\n && apt-get install automake build-essential git jq libfuzzy-dev libimage-exiftool-perl liblzma5 libssl-dev libtool libzmq3 make python-cffi python-dev python-gevent python-ipy python-m2crypto python-pexpect python-pip python-progressbar python-pyclamd python-zmq unrar unzip wget -y \\\n && pip install setuptools --upgrade\n#   Retrieve current version of Yara via wget, verify known good hash and install Yara\nRUN\n#   Install additional dependencies\nRUN cd /tmp \\\n && pip install fluent-logger future interruptingcow javatools msgpack-python olefile pylzma py-unrar2 ssdeep\n#   Add nonroot user, clone repo and setup environment\nRUN groupadd -r nonroot \\\n && useradd -r -g nonroot -d /home/nonroot -s /sbin/nologin -c \"Nonroot User\" nonroot \\\n && mkdir /home/nonroot \\\n && chown -R nonroot:nonroot /home/nonroot\n#   Clone Laika BOSS from GitHub as nonroot user\nUSER nonroot\nRUN cd /home/nonroot \\\n && git clone https://github.com/lmco/laikaboss.git\n#   Run setup script to install Laika BOSS framework, client library, modules and associated scripts (laika.py, laikad.py, cloudscan.py)\nUSER root\nRUN cd /home/nonroot/laikaboss/ \\\n && python setup.py build \\\n && python setup.py install\n#   Clean up and run ldconfig\nRUN ldconfig \\\n && apt-get remove -y --purge automake build-essential libtool \\\n && apt-get autoremove -y --purge \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\nUSER nonroot\nENV HOME=\"/home/nonroot\"\nENV USER=\"nonroot\"\nWORKDIR /home/nonroot/workdir\nENTRYPOINT echo \"To run the standalone scanner, execute laika.py against a file like so:\" \\\n && printf \"\\n\"\"laika.py <filename> | jq -C . | less -r\" \\\n && printf \"\\n\\n\"\"To run the networked instance, first execute laikad.py and use cloudscan against like so:\" \\\n && printf \"\\n\\n\"\"laikad.py &\" \\\n && printf \"\\n\\n\"\"cloudscan.py <filename> | jq -C . | less -r\" \\\n && printf \"\\n\\n\" \\\n && /bin/bash\n","originalDockerfileUglifiedHash":"4e18854492271b5eed6c569f134e30e6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/47862faeab614393c4e4622c0ffccdc88cac6bdc.dockerfile"}