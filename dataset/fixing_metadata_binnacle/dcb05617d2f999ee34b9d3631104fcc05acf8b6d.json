{"seed":2104423809,"processedDockerfileHash":"5ea90e61de1f0662f25f3bd76783f0fd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM xoelabs/dockery-odoo-base:12.0\n#   ============================================================\n#   Convention about required libraries\n#   ============================================================\nUSER root\nRUN pip install redis==4.5.4 prometheus_client==0.16.0 --quiet --quiet\n#   ============================================================\n#   Convention about environment variables\n#   ============================================================\nENV ODOO_BASEPATH=\"\\\"/opt/odoo\\\"\"\nENV ODOO_RC=\"\\\"${ODOO_BASEPATH}/cfg.d\\\"\"\nENV ODOO_MIG=\"\\\"${ODOO_BASEPATH}/migration.yaml\\\"\"\nENV ODOO_MIG_DIR=\"\\\"${ODOO_BASEPATH}/migration.d\\\"\"\nENV ODOO_CMD=\"\\\"${ODOO_BASEPATH}/vendor/odoo/cc/odoo-bin\\\"\"\nENV ODOO_FRM=\"\\\"${ODOO_BASEPATH}/vendor/odoo/cc\\\"\"\nENV ODOO_VENDOR=\"\\\"${ODOO_BASEPATH}/vendor\\\"\"\nENV ODOO_SRC=\"\\\"${ODOO_BASEPATH}/src\\\"\"\nENV PATCHES_DIR=\"\\\"${ODOO_BASEPATH}/patches.d\\\"\"\n#   ============================================================\n#   Ship with conventional odoo patches\n#   ============================================================\nCOPY patches.d \"${PATCHES_DIR}\"\n#   ============================================================\n#   Forward enforce minimal naming scheme on secondary build\n#   ============================================================\nONBUILD COPY --chown=odoo:odoo vendor \"${ODOO_VENDOR}\"\nONBUILD COPY --chown=odoo:odoo src \"${ODOO_SRC}\"\nONBUILD COPY --chown=odoo:odoo migration.yaml \"${ODOO_MIG}\"\nONBUILD COPY --chown=odoo:odoo migration.d \"${ODOO_MIG_DIR}\"\nONBUILD COPY --chown=odoo:odoo cfg.d \"${ODOO_RC}\"\nONBUILD COPY --chown=odoo:odoo patches.d/* \"${PATCHES_DIR}/\"\nONBUILD RUN /patches ${ODOO_BASEPATH} || true\n#   ============================================================\nWORKDIR ${ODOO_SRC}\nUSER root\nENV PYTHONPATH=\"${PYTHONPATH}:${ODOO_FRM}\"\nENV DODOO_LOAD_OUT=\"/var/lib/dodoo-loader/logs.json\"\n#   --- WDB Configuration ---\nENV WDB_NO_BROWSER_AUTO_OPEN=\"True\" \\\n    WDB_SOCKET_SERVER=\"wdb\" \\\n    WDB_WEB_PORT=\"1984\" \\\n    WDB_WEB_SERVER=\"localhost\"\n#   Get dodoo-* devops toolchain\nRUN pip install dodoo-tester==0.6.7 dodoo-initializer==0.6.1 dodoo-loader==0.6.5 dodoo-migrator==0.6.7\n#   Custom Odoo Scaffolding dependency\nRUN pip install pick==2.2.0 --quiet --quiet\n#   General develpoment libraries\nRUN pip install astor==0.8.1 pylint-odoo==8.0.19 pylint-mccabe==0.1.3 coverage==7.2.3 ptpython==3.0.23 pudb==2022.1.3 pyinotify==0.9.6 watchdog==3.0.0 wdb==3.3.0 --quiet --quiet\n#   For querying json log output\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends jq -qq -y > /dev/null\n#   local browser testing\nRUN wget --quiet -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends google-chrome-stable -qq -y > /dev/null\n#   For js test recordings\n#   Not avaialble in jessie\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ffmpeg -qq -y > /dev/null || true\n#   For chrome bworser testing\nRUN pip install websocket-client==1.5.1 --quiet --quiet\nCOPY entrypoint.d/* /entrypoint.d/\nCOPY templates /templates\nENV ODOO_TEMPLATES_DIR=\"/templates\"\nRUN /bin/bash -c 'shopt -s dotglob \\\n && chmod +x /entrypoint.d/* \\\n && shopt -u dotglob'\n#   Prepare odoo owned testlog folder for chrome screenshots\nRUN mkdir -p /var/lib/odoo-testlogs \\\n && chown odoo:odoo /var/lib/odoo-testlogs\n#   Prepare odoo owned loading log folder for dodoo loader\nRUN mkdir -p /var/lib/dodoo-loader \\\n && chown odoo:odoo /var/lib/dodoo-loader\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM xoelabs/dockery-odoo-base:12.0\n#  ============================================================\n#  Convention about required libraries\n#  ============================================================\nUSER root\nRUN pip install redis prometheus_client --quiet --quiet\n#  ============================================================\n#  Convention about environment variables\n#  ============================================================\nENV ODOO_BASEPATH=\"\\\"/opt/odoo\\\"\"\nENV ODOO_RC=\"\\\"${ODOO_BASEPATH}/cfg.d\\\"\"\nENV ODOO_MIG=\"\\\"${ODOO_BASEPATH}/migration.yaml\\\"\"\nENV ODOO_MIG_DIR=\"\\\"${ODOO_BASEPATH}/migration.d\\\"\"\nENV ODOO_CMD=\"\\\"${ODOO_BASEPATH}/vendor/odoo/cc/odoo-bin\\\"\"\nENV ODOO_FRM=\"\\\"${ODOO_BASEPATH}/vendor/odoo/cc\\\"\"\nENV ODOO_VENDOR=\"\\\"${ODOO_BASEPATH}/vendor\\\"\"\nENV ODOO_SRC=\"\\\"${ODOO_BASEPATH}/src\\\"\"\nENV PATCHES_DIR=\"\\\"${ODOO_BASEPATH}/patches.d\\\"\"\n#  ============================================================\n#  Ship with conventional odoo patches\n#  ============================================================\nCOPY patches.d \"${PATCHES_DIR}\"\n#  ============================================================\n#  Forward enforce minimal naming scheme on secondary build\n#  ============================================================\nONBUILD COPY --chown=odoo:odoo vendor \"${ODOO_VENDOR}\"\nONBUILD COPY --chown=odoo:odoo src \"${ODOO_SRC}\"\nONBUILD COPY --chown=odoo:odoo migration.yaml \"${ODOO_MIG}\"\nONBUILD COPY --chown=odoo:odoo migration.d \"${ODOO_MIG_DIR}\"\nONBUILD COPY --chown=odoo:odoo cfg.d \"${ODOO_RC}\"\nONBUILD COPY --chown=odoo:odoo patches.d/* \"${PATCHES_DIR}/\"\nONBUILD RUN /patches ${ODOO_BASEPATH} || true\n#  ============================================================\nWORKDIR ${ODOO_SRC}\nUSER root\nENV PYTHONPATH=\"${PYTHONPATH}:${ODOO_FRM}\"\nENV DODOO_LOAD_OUT=\"/var/lib/dodoo-loader/logs.json\"\n#  --- WDB Configuration ---\nENV WDB_NO_BROWSER_AUTO_OPEN=\"True\" \\\n    WDB_SOCKET_SERVER=\"wdb\" \\\n    WDB_WEB_PORT=\"1984\" \\\n    WDB_WEB_SERVER=\"localhost\"\n#  Get dodoo-* devops toolchain\nRUN pip install dodoo-tester dodoo-initializer dodoo-loader dodoo-migrator\n#  Custom Odoo Scaffolding dependency\nRUN pip install pick --quiet --quiet\n#  General develpoment libraries\nRUN pip install astor pylint-odoo pylint-mccabe coverage ptpython pudb pyinotify watchdog wdb --quiet --quiet\n#  For querying json log output\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends jq -qq -y > /dev/null\n#  local browser testing\nRUN wget --quiet -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends google-chrome-stable -qq -y > /dev/null\n#  For js test recordings\n#  Not avaialble in jessie\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ffmpeg -qq -y > /dev/null || true\n#  For chrome bworser testing\nRUN pip install websocket-client --quiet --quiet\nCOPY entrypoint.d/* /entrypoint.d/\nCOPY templates /templates\nENV ODOO_TEMPLATES_DIR=\"/templates\"\nRUN /bin/bash -c 'shopt -s dotglob \\\n && chmod +x /entrypoint.d/* \\\n && shopt -u dotglob'\n#  Prepare odoo owned testlog folder for chrome screenshots\nRUN mkdir -p /var/lib/odoo-testlogs \\\n && chown odoo:odoo /var/lib/odoo-testlogs\n#  Prepare odoo owned loading log folder for dodoo loader\nRUN mkdir -p /var/lib/dodoo-loader \\\n && chown odoo:odoo /var/lib/dodoo-loader\n","injectedSmells":[],"originalDockerfileHash":"b5926aa31787066bb8fe8add7d6ef581","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM xoelabs/dockery-odoo-base:12.0\n#   ============================================================\n#   Convention about required libraries\n#   ============================================================\nUSER root\nRUN pip install redis prometheus_client --quiet --quiet\n#   ============================================================\n#   Convention about environment variables\n#   ============================================================\nENV ODOO_BASEPATH=\"\\\"/opt/odoo\\\"\"\nENV ODOO_RC=\"\\\"${ODOO_BASEPATH}/cfg.d\\\"\"\nENV ODOO_MIG=\"\\\"${ODOO_BASEPATH}/migration.yaml\\\"\"\nENV ODOO_MIG_DIR=\"\\\"${ODOO_BASEPATH}/migration.d\\\"\"\nENV ODOO_CMD=\"\\\"${ODOO_BASEPATH}/vendor/odoo/cc/odoo-bin\\\"\"\nENV ODOO_FRM=\"\\\"${ODOO_BASEPATH}/vendor/odoo/cc\\\"\"\nENV ODOO_VENDOR=\"\\\"${ODOO_BASEPATH}/vendor\\\"\"\nENV ODOO_SRC=\"\\\"${ODOO_BASEPATH}/src\\\"\"\nENV PATCHES_DIR=\"\\\"${ODOO_BASEPATH}/patches.d\\\"\"\n#   ============================================================\n#   Ship with conventional odoo patches\n#   ============================================================\nCOPY patches.d \"${PATCHES_DIR}\"\n#   ============================================================\n#   Forward enforce minimal naming scheme on secondary build\n#   ============================================================\nONBUILD COPY --chown=odoo:odoo vendor \"${ODOO_VENDOR}\"\nONBUILD COPY --chown=odoo:odoo src \"${ODOO_SRC}\"\nONBUILD COPY --chown=odoo:odoo migration.yaml \"${ODOO_MIG}\"\nONBUILD COPY --chown=odoo:odoo migration.d \"${ODOO_MIG_DIR}\"\nONBUILD COPY --chown=odoo:odoo cfg.d \"${ODOO_RC}\"\nONBUILD COPY --chown=odoo:odoo patches.d/* \"${PATCHES_DIR}/\"\nONBUILD RUN /patches ${ODOO_BASEPATH} || true\n#   ============================================================\nWORKDIR ${ODOO_SRC}\nUSER root\nENV PYTHONPATH=\"${PYTHONPATH}:${ODOO_FRM}\"\nENV DODOO_LOAD_OUT=\"/var/lib/dodoo-loader/logs.json\"\n#   --- WDB Configuration ---\nENV WDB_NO_BROWSER_AUTO_OPEN=\"True\" \\\n    WDB_SOCKET_SERVER=\"wdb\" \\\n    WDB_WEB_PORT=\"1984\" \\\n    WDB_WEB_SERVER=\"localhost\"\n#   Get dodoo-* devops toolchain\nRUN pip install dodoo-tester dodoo-initializer dodoo-loader dodoo-migrator\n#   Custom Odoo Scaffolding dependency\nRUN pip install pick --quiet --quiet\n#   General develpoment libraries\nRUN pip install astor pylint-odoo pylint-mccabe coverage ptpython pudb pyinotify watchdog wdb --quiet --quiet\n#   For querying json log output\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends jq -qq -y > /dev/null\n#   local browser testing\nRUN wget --quiet -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends google-chrome-stable -qq -y > /dev/null\n#   For js test recordings\n#   Not avaialble in jessie\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ffmpeg -qq -y > /dev/null || true\n#   For chrome bworser testing\nRUN pip install websocket-client --quiet --quiet\nCOPY entrypoint.d/* /entrypoint.d/\nCOPY templates /templates\nENV ODOO_TEMPLATES_DIR=\"/templates\"\nRUN /bin/bash -c 'shopt -s dotglob \\\n && chmod +x /entrypoint.d/* \\\n && shopt -u dotglob'\n#   Prepare odoo owned testlog folder for chrome screenshots\nRUN mkdir -p /var/lib/odoo-testlogs \\\n && chown odoo:odoo /var/lib/odoo-testlogs\n#   Prepare odoo owned loading log folder for dodoo loader\nRUN mkdir -p /var/lib/dodoo-loader \\\n && chown odoo:odoo /var/lib/dodoo-loader\n","originalDockerfileUglifiedHash":"d3977112122222b529b78e64d4c12069","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dcb05617d2f999ee34b9d3631104fcc05acf8b6d.dockerfile"}