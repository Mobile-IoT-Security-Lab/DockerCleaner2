{"seed":159255980,"processedDockerfileHash":"f442afdd8e097722c340692478765a5c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG PGVERSION=11\nFROM ubuntu:18.04 AS builder\nARG DEMO=false\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && echo 'APT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/01norecommend \\\n && apt-get update \\\n && apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 ca-certificates=20211016ubuntu0.18.04.1 less=487-0.1 locales=2.27-3ubuntu1.6 jq=1.5+dfsg-2 vim-tiny=2:8.0.1453-1ubuntu1.11 gnupg1=1.4.22-3ubuntu2 cron=3.0pl1-128.1ubuntu1.2 -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then apt-get install --no-install-recommends pv=1.6.6-1 lzop=1.03-4 -y \\\n && ETCDVERSION=2.3.8 \\\n && curl -L https://github.com/coreos/etcd/releases/download/v${ETCDVERSION}/etcd-v${ETCDVERSION}-linux-amd64.tar.gz | tar xz -C /bin --strip=1 --wildcards --no-anchored etcdctl etcd ; fi \\\n && find /usr/share/i18n/charmaps/ -type f ! -name UTF-8.gz -delete \\\n && find /usr/share/i18n/locales/ -type f ! -name en_US ! -name en_GB ! -name i18n* ! -name iso14651_t1 ! -name iso14651_t1_common ! -name 'translit_*' -delete \\\n && echo 'en_US.UTF-8 UTF-8' > /usr/share/i18n/SUPPORTED \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && DISTRIB_CODENAME=$( sed -n 's/DISTRIB_CODENAME=//p' /etc/lsb-release ;) \\\n && for t in deb deb-src; do echo \"$t http://apt.postgresql.org/pub/repos/apt/ ${DISTRIB_CODENAME}-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list; done \\\n && curl -s -o - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends postgresql-common=190ubuntu0.1 -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /usr/share/doc /usr/share/man /usr/share/locale/?? /usr/share/locale/??_?? \\\n && find /var/log -type f -exec truncate --size 0 {}\nCOPY dependencies/debs /builddeps\nARG PGVERSION\nARG PGOLDVERSIONS=\"9.3 9.4 9.5 9.6 10\"\nARG WITH_PERL=false\n#   Install PostgreSQL, extensions and contribs\nENV POSTGIS_VERSION=\"2.5\" \\\n    BG_MON_COMMIT=\"00311ac9b10351edde909584028339de8da4b0d1\" \\\n    PG_AUTH_MON_COMMIT=\"a37987ad1465503ae805167fd1873270d5e9a010\" \\\n    DECODERBUFS=\"v0.9.5.Final\" \\\n    SET_USER=\"REL1_6_2\" \\\n    PLPGSQL_CHECK=\"v1.7.2\" \\\n    PLPROFILER=\"REL3_5\" \\\n    TIMESCALEDB=\"1.3.1\" \\\n    PAM_OAUTH2=\"v1.0\"\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && set -ex \\\n && sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list \\\n && apt-get update \\\n && cd /builddeps \\\n && BUILD_PACKAGES=\"devscripts build-essential fakeroot debhelper git gcc libc6-dev make libevent-dev naturaldocs python\" \\\n && if [ \"$DEMO\" = \"true\" ] ; then PGOLDVERSIONS=\"\" \\\n && apt-get install --no-install-recommends $BUILD_PACKAGES -y ; else BUILD_PACKAGES=\"$BUILD_PACKAGES equivs pgxnclient cmake libssl-dev zlib1g-dev libprotobuf-c-dev liblwgeom-dev libproj-dev libxslt1-dev libxml2-dev libpam0g-dev libkrb5-dev libedit-dev libselinux1-dev libcurl4-openssl-dev libicu-dev libc-ares-dev python-docutils pkg-config\" \\\n && apt-get install --no-install-recommends libprotobuf-c1=1.2.1-2 libcurl4=7.58.0-2ubuntu3.24 $BUILD_PACKAGES -y \\\n && if [ \"$WITH_PERL\" != \"true\" ] ; then version=$( apt-cache show perl | sed -n 's/^Version: //p' | sort -rV | head -n 1 ;) \\\n && echo \"Section: misc\\nPriority: optional\\nStandards-Version: 3.9.8\\nPackage: perl\\nSection:perl\\nMulti-Arch: allowed\\nReplaces: perl-base\\nVersion: $version\\nDescription: perl\" > perl \\\n && equivs-build perl ; fi \\\n && for p in python3-keyring python3-docutils ieee-data; do version=$( apt-cache show $p | sed -n 's/^Version: //p' | sort -rV | head -n 1 ;) \\\n && echo \"Section: misc\\nPriority: optional\\nStandards-Version: 3.9.8\\nPackage: $p\\nVersion: $version\\nDescription: $p\" > $p \\\n && equivs-build $p ; done \\\n && dpkg -i *.deb || apt-get install --no-install-recommends -y -f \\\n && git clone -b $PAM_OAUTH2 --recurse-submodules https://github.com/CyberDem0n/pam-oauth2.git \\\n && make -C pam-oauth2 install \\\n && git clone -b $DECODERBUFS https://github.com/debezium/postgres-decoderbufs.git \\\n && git clone -b $PLPROFILER https://github.com/pgcentral/plprofiler.git \\\n && git clone -b $PLPGSQL_CHECK https://github.com/okbob/plpgsql_check.git \\\n && git clone -b $TIMESCALEDB https://github.com/timescale/timescaledb.git \\\n && git clone git://www.sigaev.ru/plantuner.git ; fi \\\n && curl -sL https://github.com/CyberDem0n/bg_mon/archive/$BG_MON_COMMIT.tar.gz | tar xz \\\n && curl -sL https://github.com/RafiaSabih/pg_auth_mon/archive/$PG_AUTH_MON_COMMIT.tar.gz | tar xz \\\n && git clone -b $SET_USER https://github.com/pgaudit/set_user.git \\\n && apt-get install --no-install-recommends libevent-2.1 libevent-pthreads-2.1 python3.6=3.6.9-1~18.04ubuntu1.12 python3-psycopg2=2.7.4-1 -y \\\n && for version in ${PGOLDVERSIONS} ${PGVERSION}; do sed -i \"s/ main.*$/ main $version/g\" /etc/apt/sources.list.d/pgdg.list \\\n && apt-get update \\\n && if [ \"$DEMO\" != \"true\" ] ; then EXTRAS=\"postgresql-pltcl-${version} postgresql-${version}-hypopg postgresql-${version}-pgq3 postgresql-${version}-pldebugger postgresql-${version}-pllua postgresql-${version}-plproxy postgresql-${version}-repack\" \\\n && if [ \"$WITH_PERL\" = \"true\" ] ; then EXTRAS=\"$EXTRAS postgresql-plperl-${version}\" ; fi \\\n && if [ $version != \"9.3\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-partman postgresql-${version}-pglogical postgresql-${version}-postgis-${POSTGIS_VERSION} postgresql-${version}-postgis-${POSTGIS_VERSION}-scripts postgresql-${version}-wal2json\" \\\n && if [ $version != \"9.4\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-pgl-ddl-deploy\" ; fi \\\n && if [ $version != \"11\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-amcheck\" ; fi ; fi ; fi \\\n && if [ $version != \"9.3\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-pg-stat-kcache\" \\\n && if [ $version != \"9.4\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-cron\" ; fi ; fi \\\n && apt-get install --no-install-recommends postgresql-contrib-${version} postgresql-plpython3-${version} libpq5=$version* $EXTRAS libpq-dev=$version* postgresql-server-dev-${version} --allow-downgrades -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then if [ \"$version\" != \"11\" ] ; then for extension in quantile trimmed_aggregates; do pgxn install $extension \\\n && strip /usr/lib/postgresql/$version/lib/$extension.so ; done ; fi \\\n && if [ \"$version\" = \"9.6\" ] || [ \"$version\" = \"10\" ] || [ \"$version\" = \"11\" ] ; then cd timescaledb \\\n && rm -fr build \\\n && ./bootstrap -DAPACHE_ONLY=1 -DSEND_TELEMETRY_DEFAULT=NO \\\n && make -C build install \\\n && strip /usr/lib/postgresql/$version/lib/timescaledb*.so \\\n && cd .. ; fi \\\n && if [ \"$version\" = \"9.3\" ] || [ \"$version\" = \"9.4\" ] ; then REWIND_VER=REL$( echo $version | sed 's/\\./_/' ;)_STABLE \\\n && apt-get source postgresql-${version} \\\n && curl -sL https://github.com/vmware/pg_rewind/archive/${REWIND_VER}.tar.gz | tar xz \\\n && make -C pg_rewind-${REWIND_VER} USE_PGXS=1 top_srcdir=../$( ls -d postgresql-${version}-* ;) install-strip \\\n && rm -fr pg_rewind-${REWIND_VER} postgresql-${version}* ; fi \\\n && EXTRA_EXTENSIONS=\"plprofiler plantuner\" \\\n && if [ \"$version\" != \"9.3\" ] ; then EXTRA_EXTENSIONS=\"$EXTRA_EXTENSIONS plpgsql_check postgres-decoderbufs\" ; fi ; else EXTRA_EXTENSIONS=\"\" ; fi \\\n && for n in bg_mon-${BG_MON_COMMIT} pg_auth_mon-${PG_AUTH_MON_COMMIT} set_user $EXTRA_EXTENSIONS; do make -C $n USE_PGXS=1 clean install-strip ; done \\\n && apt-get purge -y libpq-dev=$version* ; done \\\n && apt-get install --no-install-recommends skytools3-ticker=3.3-1 pspg=0.9.3-1 -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then apt-get source pgbouncer \\\n && cd $( ls -d pgbouncer-* ;) \\\n && curl -sL https://github.com/pgbouncer/pgbouncer/pull/127.diff | patch -p1 \\\n && curl -sL https://github.com/pgbouncer/pgbouncer/pull/326.diff | sed -n '/^diff --git a\\/src\\/client.c b\\/src\\/client.c/,$ p' | patch -p1 \\\n && sed -i 's/\\(MAX_PASSWORD\\t\\).*/\\11024/' include/bouncer.h \\\n && sed -i 's/\\(SEND_wrap(\\)512\\(, pktbuf_write_PasswordMessage, res, sk, psw)\\)/\\11024\\2/' include/pktbuf.h \\\n && debuild -b -uc -us \\\n && cd .. \\\n && dpkg -i pgbouncer_*.deb ; fi \\\n && apt-get install --no-install-recommends postgresql-server-dev-all=190ubuntu0.1 postgresql-server-dev-9.3 -y \\\n && for pkg in pgextwlist; do apt-get source postgresql-10-${pkg} \\\n && cd $( ls -d *${pkg%?}*-* ;) \\\n && if [ \"$pkg\" = \"pgextwlist\" ] ; then perl -ne 'print unless /PG_TRY/ .. /PG_CATCH/' pgextwlist.c > pgextwlist.c.f \\\n && egrep -v '(PG_END_TRY|EmitWarningsOnPlaceholders)' pgextwlist.c.f > pgextwlist.c; fi \\\n && rm -f debian/pgversions \\\n && for version in ${PGOLDVERSIONS} ${PGVERSION}; do echo ${version} >> debian/pgversions; done \\\n && pg_buildext updatecontrol \\\n && debuild -b -uc -us \\\n && cd .. \\\n && for version in ${PGOLDVERSIONS} ${PGVERSION}; do for deb in postgresql-${version}-${pkg}_*.deb; do if [ -f $deb ] ; then dpkg -i $deb ; fi ; done ; done ; done \\\n && apt-get purge -y ${BUILD_PACKAGES} postgresql-server-dev-* libmagic1 bsdmainutils \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && dpkg -l | grep '^rc' | awk '{print $2}' | xargs apt-get purge -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then cd /usr/lib/postgresql/$PGVERSION/bin \\\n && for u in clusterdb pg_archivecleanup pg_basebackup pg_isready pg_test_fsync pg_test_timing pgbench psql reindexdb vacuumdb vacuumlo *.py; do for v in /usr/lib/postgresql/*; do if [ \"$v\" != \"/usr/lib/postgresql/$PGVERSION\" ] \\\n && [ -f \"$v/bin/$u\" ] ; then rm $v/bin/$u \\\n && ln -s ../../$PGVERSION/bin/$u $v/bin/$u ; fi ; done ; done \\\n && cd /usr/share/postgresql/$PGVERSION/contrib/postgis-$POSTGIS_VERSION \\\n && for f in *.sql *.pl; do for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/$PGVERSION\" ] \\\n && diff $v/contrib/postgis-$POSTGIS_VERSION/$f $f > /dev/null; then rm $v/contrib/postgis-$POSTGIS_VERSION/$f \\\n && ln -s ../../../$PGVERSION/contrib/postgis-$POSTGIS_VERSION/$f $v/contrib/postgis-$POSTGIS_VERSION/$f ; fi ; done ; done \\\n && if [ -d /usr/share/postgresql/9.5/contrib/postgis-$POSTGIS_VERSION ] ; then cd /usr/share/postgresql/9.5/contrib/postgis-$POSTGIS_VERSION \\\n && for f in *.sql *.pl; do if [ -L $f ] ; then continue ; fi \\\n && for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/9.5\" ] \\\n && [ -f $v/contrib/postgis-$POSTGIS_VERSION/$f ] \\\n && [ ! -L $v/contrib/postgis-$POSTGIS_VERSION/$f ] \\\n && diff $v/contrib/postgis-$POSTGIS_VERSION/$f $f > /dev/null; then rm $v/contrib/postgis-$POSTGIS_VERSION/$f \\\n && ln -s ../../../9.5/contrib/postgis-$POSTGIS_VERSION/$f $v/contrib/postgis-$POSTGIS_VERSION/$f ; fi ; done ; done ; fi \\\n && cd /usr/share/postgresql/$PGVERSION/extension \\\n && for orig in $( ls -1 *.sql | grep -v -- '--' ;); do for f in ${orig%.sql}--*.sql; do if diff $orig $f > /dev/null; then rm $f \\\n && ln -s $orig $f ; fi ; done ; done \\\n && for e in pgq plproxy address_standardizer address_standardizer_data_us; do orig=$( ls -1 $e--*--*.sql 2> /dev/null | head -n1 ;) \\\n && if [ \"x$orig\" != \"x\" ] ; then for f in $e--*--*.sql; do if [ \"$f\" != \"$orig\" ] \\\n && diff $f $orig > /dev/null; then rm $f \\\n && ln -s $orig $f ; fi ; done ; fi ; done \\\n && for f in *.sql *.control; do for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/$PGVERSION\" ] \\\n && [ -f $v/extension/$f ] \\\n && [ ! -L $v/extension/$f ] \\\n && diff $v/extension/$f $f > /dev/null; then rm $v/extension/$f \\\n && ln -s ../../$PGVERSION/extension/$f $v/extension/$f ; fi ; done ; done \\\n && if [ -d /usr/share/postgresql/9.5/extension ] ; then cd /usr/share/postgresql/9.5/extension \\\n && for f in *.sql *.control; do if [ -L $f ] ; then continue ; fi \\\n && for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/9.5\" ] \\\n && [ -f $v/extension/$f ] \\\n && [ ! -L $v/extension/$f ] \\\n && diff $v/extension/$f $f > /dev/null; then rm $v/extension/$f \\\n && ln -s ../../9.5/extension/$f $v/extension/$f ; fi ; done ; done ; fi \\\n && cd /usr/share/postgresql/$PGVERSION/contrib \\\n && for f in *.sql *.html; do for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/$PGVERSION\" ] \\\n && diff $v/contrib/$f $f > /dev/null; then rm $v/contrib/$f \\\n && ln -s ../../$PGVERSION/contrib/$f $v/contrib/$f ; fi ; done ; done ; fi \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /builddeps /usr/share/doc /usr/share/man /usr/share/info /usr/share/locale/?? /usr/share/locale/??_?? /usr/share/postgresql/*/man /etc/pgbouncer/* /usr/lib/postgresql/*/bin/createdb /usr/lib/postgresql/*/bin/createlang /usr/lib/postgresql/*/bin/createuser /usr/lib/postgresql/*/bin/dropdb /usr/lib/postgresql/*/bin/droplang /usr/lib/postgresql/*/bin/dropuser /usr/lib/postgresql/*/bin/pg_recvlogical /usr/lib/postgresql/*/bin/pg_standby /usr/lib/postgresql/*/bin/pltcl_* \\\n && find /var/log -type f -exec truncate --size 0 {}\n#   Install patroni, wal-e and wal-g\nENV PATRONIVERSION=\"1.5.7\"\nENV WALE_VERSION=\"1.1.0\"\nENV WALG_VERSION=\"v0.2.9\"\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && set -ex \\\n && BUILD_PACKAGES=\"python3-pip python3-wheel python3-dev git patchutils binutils\" \\\n && apt-get update \\\n && apt-cache depends patroni | sed -n -e 's/.* Depends: \\(python3-.\\+\\)$/\\1/p' | grep -Ev '^python3-(sphinx|etcd|consul|kazoo|kubernetes)' | xargs apt-get install -y ${BUILD_PACKAGES} python3-pystache python3-cachetools python3-rsa python3-pyasn1-modules \\\n && pip3 install setuptools \\\n && if [ \"$DEMO\" != \"true\" ] ; then EXTRAS=\",etcd,consul,zookeeper,aws\" \\\n && curl -sL https://github.com/wal-g/wal-g/releases/download/$WALG_VERSION/wal-g.linux-amd64-lzo.tar.gz | tar -C /usr/local/bin -xz \\\n && strip /usr/local/bin/wal-g \\\n && apt-get install --no-install-recommends python3-etcd=0.4.3-2 python3-consul=0.7.1-1 python3-kazoo=2.2.1-1ubuntu1 python3-meld3=1.0.2-2 python3-boto=2.44.0-1ubuntu2.18.04.1 python3-gevent=1.2.2-2 python3-greenlet=0.4.12-2 python3-protobuf=3.0.0-9.1ubuntu1.1 python3-websocket=0.44.0-0ubuntu2 python3-requests-oauthlib=0.8.0-0.1 python3-swiftclient=1:3.5.0-0ubuntu1 -y \\\n && find /usr/share/python-babel-localedata/locale-data -type f ! -name 'en_US*.dat' -delete \\\n && pip3 install filechunkio wal-e[aws,google,swift]==$WALE_VERSION kubernetes==3.0.0 'git+https://github.com/Supervisor/supervisor.git@master#egg=supervisor' 'git+https://github.com/zalando/pg_view.git@master#egg=pg-view' \\\n && cd /usr/local/lib/python3.6/dist-packages \\\n && sed -i '/^pytest/d' pg_view-*/requires.txt \\\n && pip3 uninstall -y atomicwrites attrs more_itertools pluggy pytest py \\\n && sed -i 's/^\\( for i in range(0,\\) num_retries):.*/\\1 100):/g' /usr/lib/python3/dist-packages/boto/utils.py \\\n && curl -sL https://github.com/wal-e/wal-e/pull/384.diff | patch -p1 \\\n && curl -sL https://github.com/wal-e/wal-e/pull/392.diff | patch -p1 \\\n && echo 4.0.0.dev0 > supervisor/version.txt; fi \\\n && pip3 install \"git+https://github.com/zalando/patroni.git@1a6db4f5afbc3f8d7f42d1d2c57edd988e830bda#egg=patroni[kubernetes$EXTRAS]\" \\\n && sed -i 's/1, 5, 6/1, 5, 7/' /usr/local/lib/python3.6/dist-packages/patroni/dcs/__init__.py \\\n && echo \"__version__ = '$PATRONIVERSION'\" > /usr/local/lib/python3.6/dist-packages/patroni/version.py \\\n && for d in /usr/local/lib/python3.6 /usr/lib/python3; do cd $d/dist-packages \\\n && find . -type d -name tests | xargs rm -fr \\\n && find . -type f -name 'test_*.py*' -delete ; done \\\n && find . -type f -name 'unittest_*.py*' -delete \\\n && find . -type f -name '*_test.py' -delete \\\n && find . -type f -name '*_test.cpython*.pyc' -delete \\\n && apt-get purge -y ${BUILD_PACKAGES} \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /root/.cache /usr/share/doc /usr/share/man /usr/share/locale/?? /usr/share/locale/??_?? /usr/share/info \\\n && find /var/log -type f -exec truncate --size 0 {}\nARG COMPRESS=false\nRUN set -ex \\\n && if [ \"$COMPRESS\" = \"true\" ] ; then apt-get update \\\n && apt-get install --no-install-recommends busybox=1:1.27.2-2ubuntu3.4 xz-utils=5.2.2-1.3ubuntu0.1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /usr/share/doc /usr/share/man /etc/rc?.d /etc/systemd \\\n && ln -snf busybox /bin/sh \\\n && files=\"/bin/sh\" \\\n && libs=\"$( ldd $files | awk '{print $3;}' | grep '^/' | sort -u ;) /lib/x86_64-linux-gnu/ld-linux-x86-64.so.* /lib/x86_64-linux-gnu/libnsl.so.* /lib/x86_64-linux-gnu/libnss_compat.so.*\" \\\n && (echo /var/run $files $libs | tr ' ' '\\n' \\\n && realpath $files $libs ) | sort -u | sed 's/^\\///' > /exclude \\\n && find /etc/alternatives -xtype l -delete \\\n && save_dirs=\"usr lib var bin sbin etc/ssl etc/init.d etc/alternatives etc/apt\" \\\n && XZ_OPT=-e9v tar -X /exclude -cpJf a.tar.xz $save_dirs \\\n && rm -fr /usr/local/lib/python* \\\n && /bin/busybox sh -c \"(find $save_dirs -not -type d \\\n && cat /exclude /exclude \\\n && echo exclude) | sort | uniq -u | xargs /bin/busybox rm\" \\\n && /bin/busybox --install -s \\\n && /bin/busybox sh -c \"find $save_dirs -type d -depth -exec rmdir -p {} \\; 2> /dev/null\" ; fi\nFROM scratch\nCOPY --from=builder / /\nLABEL maintainer=\"Alexander Kukushkin <alexander.kukushkin@zalando.de>\"\nARG PGVERSION\nEXPOSE 5432/tcp 8008/tcp 8080/tcp\nENV LC_ALL=\"en_US.utf-8\" \\\n    PATH=\"$PATH:/usr/lib/postgresql/$PGVERSION/bin\" \\\n    PGHOME=\"/home/postgres\"\nENV WALE_ENV_DIR=\"$PGHOME/etc/wal-e.d/env\" \\\n    PGROOT=\"$PGHOME/pgdata/pgroot\" \\\n    LOG_ENV_DIR=\"$PGHOME/etc/log.d/env\"\nENV PGDATA=\"$PGROOT/data\" \\\n    PGLOG=\"$PGROOT/pg_log\"\nWORKDIR $PGHOME\nCOPY motd /etc/\nCOPY supervisor /etc/supervisor\nCOPY pgq_ticker.ini $PGHOME/\nCOPY envdir /usr/local/bin/\nRUN mkdir -p /var/log/supervisor \\\n && ln -s supervisor/supervisord.conf /etc/supervisord.conf \\\n && sed -i \"s|/var/lib/postgresql.*|$PGHOME:/bin/bash|\" /etc/passwd \\\n && chown -R postgres:postgres $PGHOME /run \\\n && sed -i 's/set compatible/set nocompatible/' /etc/vim/vimrc.tiny \\\n && for e in TERM=linux LC_ALL=C.UTF-8 LANG=C.UTF-8 EDITOR=editor \"PAGER='pspg -bX --no-mouse'\"; do echo \"export $e\" >> /etc/bash.bashrc; done \\\n && echo \"source /etc/motd\" >> /root/.bashrc\nCOPY scripts bootstrap /scripts/\nCOPY scm-source.json launch.sh /\nCMD [\"/bin/sh\", \"/launch.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG PGVERSION=11\nFROM ubuntu:18.04 AS builder\nARG DEMO=false\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && echo 'APT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/01norecommend \\\n && apt-get update \\\n && apt-get install curl ca-certificates less locales jq vim-tiny gnupg1 cron -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then apt-get install pv lzop -y \\\n && ETCDVERSION=2.3.8 \\\n && curl -L https://github.com/coreos/etcd/releases/download/v${ETCDVERSION}/etcd-v${ETCDVERSION}-linux-amd64.tar.gz | tar xz -C /bin --strip=1 --wildcards --no-anchored etcdctl etcd ; fi \\\n && find /usr/share/i18n/charmaps/ -type f ! -name UTF-8.gz -delete \\\n && find /usr/share/i18n/locales/ -type f ! -name en_US ! -name en_GB ! -name i18n* ! -name iso14651_t1 ! -name iso14651_t1_common ! -name 'translit_*' -delete \\\n && echo 'en_US.UTF-8 UTF-8' > /usr/share/i18n/SUPPORTED \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && DISTRIB_CODENAME=$( sed -n 's/DISTRIB_CODENAME=//p' /etc/lsb-release ;) \\\n && for t in deb deb-src; do echo \"$t http://apt.postgresql.org/pub/repos/apt/ ${DISTRIB_CODENAME}-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list; done \\\n && curl -s -o - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n && apt-get update \\\n && apt-get install postgresql-common -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /usr/share/doc /usr/share/man /usr/share/locale/?? /usr/share/locale/??_?? \\\n && find /var/log -type f -exec truncate --size 0 {} ;\nCOPY dependencies/debs /builddeps\nARG PGVERSION\nARG PGOLDVERSIONS=\"9.3 9.4 9.5 9.6 10\"\nARG WITH_PERL=false\n#  Install PostgreSQL, extensions and contribs\nENV POSTGIS_VERSION=\"2.5\" \\\n    BG_MON_COMMIT=\"00311ac9b10351edde909584028339de8da4b0d1\" \\\n    PG_AUTH_MON_COMMIT=\"a37987ad1465503ae805167fd1873270d5e9a010\" \\\n    DECODERBUFS=\"v0.9.5.Final\" \\\n    SET_USER=\"REL1_6_2\" \\\n    PLPGSQL_CHECK=\"v1.7.2\" \\\n    PLPROFILER=\"REL3_5\" \\\n    TIMESCALEDB=\"1.3.1\" \\\n    PAM_OAUTH2=\"v1.0\"\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && set -ex \\\n && sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list \\\n && apt-get update \\\n && cd /builddeps \\\n && BUILD_PACKAGES=\"devscripts build-essential fakeroot debhelper git gcc libc6-dev make libevent-dev naturaldocs python\" \\\n && if [ \"$DEMO\" = \"true\" ] ; then PGOLDVERSIONS=\"\" \\\n && apt-get install $BUILD_PACKAGES -y ; else BUILD_PACKAGES=\"$BUILD_PACKAGES equivs pgxnclient cmake libssl-dev zlib1g-dev libprotobuf-c-dev liblwgeom-dev libproj-dev libxslt1-dev libxml2-dev libpam0g-dev libkrb5-dev libedit-dev libselinux1-dev libcurl4-openssl-dev libicu-dev libc-ares-dev python-docutils pkg-config\" \\\n && apt-get install libprotobuf-c1 libcurl4 $BUILD_PACKAGES -y \\\n && if [ \"$WITH_PERL\" != \"true\" ] ; then version=$( apt-cache show perl | sed -n 's/^Version: //p' | sort -rV | head -n 1 ;) \\\n && echo \"Section: misc\\nPriority: optional\\nStandards-Version: 3.9.8\\nPackage: perl\\nSection:perl\\nMulti-Arch: allowed\\nReplaces: perl-base\\nVersion: $version\\nDescription: perl\" > perl \\\n && equivs-build perl ; fi \\\n && for p in python3-keyring python3-docutils ieee-data; do version=$( apt-cache show $p | sed -n 's/^Version: //p' | sort -rV | head -n 1 ;) \\\n && echo \"Section: misc\\nPriority: optional\\nStandards-Version: 3.9.8\\nPackage: $p\\nVersion: $version\\nDescription: $p\" > $p \\\n && equivs-build $p ; done \\\n && dpkg -i *.deb || apt-get install -y -f \\\n && git clone -b $PAM_OAUTH2 --recurse-submodules https://github.com/CyberDem0n/pam-oauth2.git \\\n && make -C pam-oauth2 install \\\n && git clone -b $DECODERBUFS https://github.com/debezium/postgres-decoderbufs.git \\\n && git clone -b $PLPROFILER https://github.com/pgcentral/plprofiler.git \\\n && git clone -b $PLPGSQL_CHECK https://github.com/okbob/plpgsql_check.git \\\n && git clone -b $TIMESCALEDB https://github.com/timescale/timescaledb.git \\\n && git clone git://www.sigaev.ru/plantuner.git ; fi \\\n && curl -sL https://github.com/CyberDem0n/bg_mon/archive/$BG_MON_COMMIT.tar.gz | tar xz \\\n && curl -sL https://github.com/RafiaSabih/pg_auth_mon/archive/$PG_AUTH_MON_COMMIT.tar.gz | tar xz \\\n && git clone -b $SET_USER https://github.com/pgaudit/set_user.git \\\n && apt-get install libevent-2.1 libevent-pthreads-2.1 python3.6 python3-psycopg2 -y \\\n && for version in ${PGOLDVERSIONS} ${PGVERSION}; do sed -i \"s/ main.*$/ main $version/g\" /etc/apt/sources.list.d/pgdg.list \\\n && apt-get update \\\n && if [ \"$DEMO\" != \"true\" ] ; then EXTRAS=\"postgresql-pltcl-${version} postgresql-${version}-hypopg postgresql-${version}-pgq3 postgresql-${version}-pldebugger postgresql-${version}-pllua postgresql-${version}-plproxy postgresql-${version}-repack\" \\\n && if [ \"$WITH_PERL\" = \"true\" ] ; then EXTRAS=\"$EXTRAS postgresql-plperl-${version}\" ; fi \\\n && if [ $version != \"9.3\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-partman postgresql-${version}-pglogical postgresql-${version}-postgis-${POSTGIS_VERSION} postgresql-${version}-postgis-${POSTGIS_VERSION}-scripts postgresql-${version}-wal2json\" \\\n && if [ $version != \"9.4\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-pgl-ddl-deploy\" ; fi \\\n && if [ $version != \"11\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-amcheck\" ; fi ; fi ; fi \\\n && if [ $version != \"9.3\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-pg-stat-kcache\" \\\n && if [ $version != \"9.4\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-cron\" ; fi ; fi \\\n && apt-get install postgresql-contrib-${version} postgresql-plpython3-${version} libpq5=$version* $EXTRAS libpq-dev=$version* postgresql-server-dev-${version} --allow-downgrades -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then if [ \"$version\" != \"11\" ] ; then for extension in quantile trimmed_aggregates; do pgxn install $extension \\\n && strip /usr/lib/postgresql/$version/lib/$extension.so ; done ; fi \\\n && if [ \"$version\" = \"9.6\" ] || [ \"$version\" = \"10\" ] || [ \"$version\" = \"11\" ] ; then cd timescaledb \\\n && rm -fr build \\\n && ./bootstrap -DAPACHE_ONLY=1 -DSEND_TELEMETRY_DEFAULT=NO \\\n && make -C build install \\\n && strip /usr/lib/postgresql/$version/lib/timescaledb*.so \\\n && cd .. ; fi \\\n && if [ \"$version\" = \"9.3\" ] || [ \"$version\" = \"9.4\" ] ; then REWIND_VER=REL$( echo $version | sed 's/\\./_/' ;)_STABLE \\\n && apt-get source postgresql-${version} \\\n && curl -sL https://github.com/vmware/pg_rewind/archive/${REWIND_VER}.tar.gz | tar xz \\\n && make -C pg_rewind-${REWIND_VER} USE_PGXS=1 top_srcdir=../$( ls -d postgresql-${version}-* ;) install-strip \\\n && rm -fr pg_rewind-${REWIND_VER} postgresql-${version}* ; fi \\\n && EXTRA_EXTENSIONS=\"plprofiler plantuner\" \\\n && if [ \"$version\" != \"9.3\" ] ; then EXTRA_EXTENSIONS=\"$EXTRA_EXTENSIONS plpgsql_check postgres-decoderbufs\" ; fi ; else EXTRA_EXTENSIONS=\"\" ; fi \\\n && for n in bg_mon-${BG_MON_COMMIT} pg_auth_mon-${PG_AUTH_MON_COMMIT} set_user $EXTRA_EXTENSIONS; do make -C $n USE_PGXS=1 clean install-strip ; done \\\n && apt-get purge -y libpq-dev=$version* ; done \\\n && apt-get install skytools3-ticker pspg -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then apt-get source pgbouncer \\\n && cd $( ls -d pgbouncer-* ;) \\\n && curl -sL https://github.com/pgbouncer/pgbouncer/pull/127.diff | patch -p1 \\\n && curl -sL https://github.com/pgbouncer/pgbouncer/pull/326.diff | sed -n '/^diff --git a\\/src\\/client.c b\\/src\\/client.c/,$ p' | patch -p1 \\\n && sed -i 's/\\(MAX_PASSWORD\\t\\).*/\\11024/' include/bouncer.h \\\n && sed -i 's/\\(SEND_wrap(\\)512\\(, pktbuf_write_PasswordMessage, res, sk, psw)\\)/\\11024\\2/' include/pktbuf.h \\\n && debuild -b -uc -us \\\n && cd .. \\\n && dpkg -i pgbouncer_*.deb ; fi \\\n && apt-get install postgresql-server-dev-all postgresql-server-dev-9.3 -y \\\n && for pkg in pgextwlist; do apt-get source postgresql-10-${pkg} \\\n && cd $( ls -d *${pkg%?}*-* ;) \\\n && if [ \"$pkg\" = \"pgextwlist\" ] ; then perl -ne 'print unless /PG_TRY/ .. /PG_CATCH/' pgextwlist.c > pgextwlist.c.f \\\n && egrep -v '(PG_END_TRY|EmitWarningsOnPlaceholders)' pgextwlist.c.f > pgextwlist.c; fi \\\n && rm -f debian/pgversions \\\n && for version in ${PGOLDVERSIONS} ${PGVERSION}; do echo ${version} >> debian/pgversions; done \\\n && pg_buildext updatecontrol \\\n && debuild -b -uc -us \\\n && cd .. \\\n && for version in ${PGOLDVERSIONS} ${PGVERSION}; do for deb in postgresql-${version}-${pkg}_*.deb; do if [ -f $deb ] ; then dpkg -i $deb ; fi ; done ; done ; done \\\n && apt-get purge -y ${BUILD_PACKAGES} postgresql-server-dev-* libmagic1 bsdmainutils \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && dpkg -l | grep '^rc' | awk '{print $2}' | xargs apt-get purge -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then cd /usr/lib/postgresql/$PGVERSION/bin \\\n && for u in clusterdb pg_archivecleanup pg_basebackup pg_isready pg_test_fsync pg_test_timing pgbench psql reindexdb vacuumdb vacuumlo *.py; do for v in /usr/lib/postgresql/*; do if [ \"$v\" != \"/usr/lib/postgresql/$PGVERSION\" ] \\\n && [ -f \"$v/bin/$u\" ] ; then rm $v/bin/$u \\\n && ln -s ../../$PGVERSION/bin/$u $v/bin/$u ; fi ; done ; done \\\n && cd /usr/share/postgresql/$PGVERSION/contrib/postgis-$POSTGIS_VERSION \\\n && for f in *.sql *.pl; do for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/$PGVERSION\" ] \\\n && diff $v/contrib/postgis-$POSTGIS_VERSION/$f $f > /dev/null; then rm $v/contrib/postgis-$POSTGIS_VERSION/$f \\\n && ln -s ../../../$PGVERSION/contrib/postgis-$POSTGIS_VERSION/$f $v/contrib/postgis-$POSTGIS_VERSION/$f ; fi ; done ; done \\\n && if [ -d /usr/share/postgresql/9.5/contrib/postgis-$POSTGIS_VERSION ] ; then cd /usr/share/postgresql/9.5/contrib/postgis-$POSTGIS_VERSION \\\n && for f in *.sql *.pl; do if [ -L $f ] ; then continue ; fi \\\n && for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/9.5\" ] \\\n && [ -f $v/contrib/postgis-$POSTGIS_VERSION/$f ] \\\n && [ ! -L $v/contrib/postgis-$POSTGIS_VERSION/$f ] \\\n && diff $v/contrib/postgis-$POSTGIS_VERSION/$f $f > /dev/null; then rm $v/contrib/postgis-$POSTGIS_VERSION/$f \\\n && ln -s ../../../9.5/contrib/postgis-$POSTGIS_VERSION/$f $v/contrib/postgis-$POSTGIS_VERSION/$f ; fi ; done ; done ; fi \\\n && cd /usr/share/postgresql/$PGVERSION/extension \\\n && for orig in $( ls -1 *.sql | grep -v -- '--' ;); do for f in ${orig%.sql}--*.sql; do if diff $orig $f > /dev/null; then rm $f \\\n && ln -s $orig $f ; fi ; done ; done \\\n && for e in pgq plproxy address_standardizer address_standardizer_data_us; do orig=$( ls -1 $e--*--*.sql 2> /dev/null | head -n1 ;) \\\n && if [ \"x$orig\" != \"x\" ] ; then for f in $e--*--*.sql; do if [ \"$f\" != \"$orig\" ] \\\n && diff $f $orig > /dev/null; then rm $f \\\n && ln -s $orig $f ; fi ; done ; fi ; done \\\n && for f in *.sql *.control; do for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/$PGVERSION\" ] \\\n && [ -f $v/extension/$f ] \\\n && [ ! -L $v/extension/$f ] \\\n && diff $v/extension/$f $f > /dev/null; then rm $v/extension/$f \\\n && ln -s ../../$PGVERSION/extension/$f $v/extension/$f ; fi ; done ; done \\\n && if [ -d /usr/share/postgresql/9.5/extension ] ; then cd /usr/share/postgresql/9.5/extension \\\n && for f in *.sql *.control; do if [ -L $f ] ; then continue ; fi \\\n && for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/9.5\" ] \\\n && [ -f $v/extension/$f ] \\\n && [ ! -L $v/extension/$f ] \\\n && diff $v/extension/$f $f > /dev/null; then rm $v/extension/$f \\\n && ln -s ../../9.5/extension/$f $v/extension/$f ; fi ; done ; done ; fi \\\n && cd /usr/share/postgresql/$PGVERSION/contrib \\\n && for f in *.sql *.html; do for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/$PGVERSION\" ] \\\n && diff $v/contrib/$f $f > /dev/null; then rm $v/contrib/$f \\\n && ln -s ../../$PGVERSION/contrib/$f $v/contrib/$f ; fi ; done ; done ; fi \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /builddeps /usr/share/doc /usr/share/man /usr/share/info /usr/share/locale/?? /usr/share/locale/??_?? /usr/share/postgresql/*/man /etc/pgbouncer/* /usr/lib/postgresql/*/bin/createdb /usr/lib/postgresql/*/bin/createlang /usr/lib/postgresql/*/bin/createuser /usr/lib/postgresql/*/bin/dropdb /usr/lib/postgresql/*/bin/droplang /usr/lib/postgresql/*/bin/dropuser /usr/lib/postgresql/*/bin/pg_recvlogical /usr/lib/postgresql/*/bin/pg_standby /usr/lib/postgresql/*/bin/pltcl_* \\\n && find /var/log -type f -exec truncate --size 0 {} ;\n#  Install patroni, wal-e and wal-g\nENV PATRONIVERSION=\"1.5.7\"\nENV WALE_VERSION=\"1.1.0\"\nENV WALG_VERSION=\"v0.2.9\"\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && set -ex \\\n && BUILD_PACKAGES=\"python3-pip python3-wheel python3-dev git patchutils binutils\" \\\n && apt-get update \\\n && apt-cache depends patroni | sed -n -e 's/.* Depends: \\(python3-.\\+\\)$/\\1/p' | grep -Ev '^python3-(sphinx|etcd|consul|kazoo|kubernetes)' | xargs apt-get install -y ${BUILD_PACKAGES} python3-pystache python3-cachetools python3-rsa python3-pyasn1-modules \\\n && pip3 install setuptools \\\n && if [ \"$DEMO\" != \"true\" ] ; then EXTRAS=\",etcd,consul,zookeeper,aws\" \\\n && curl -sL https://github.com/wal-g/wal-g/releases/download/$WALG_VERSION/wal-g.linux-amd64-lzo.tar.gz | tar -C /usr/local/bin -xz \\\n && strip /usr/local/bin/wal-g \\\n && apt-get install python3-etcd python3-consul python3-kazoo python3-meld3 python3-boto python3-gevent python3-greenlet python3-protobuf python3-websocket python3-requests-oauthlib python3-swiftclient -y \\\n && find /usr/share/python-babel-localedata/locale-data -type f ! -name 'en_US*.dat' -delete \\\n && pip3 install filechunkio wal-e[aws,google,swift]==$WALE_VERSION kubernetes==3.0.0 'git+https://github.com/Supervisor/supervisor.git@master#egg=supervisor' 'git+https://github.com/zalando/pg_view.git@master#egg=pg-view' \\\n && cd /usr/local/lib/python3.6/dist-packages \\\n && sed -i '/^pytest/d' pg_view-*/requires.txt \\\n && pip3 uninstall -y atomicwrites attrs more_itertools pluggy pytest py \\\n && sed -i 's/^\\( for i in range(0,\\) num_retries):.*/\\1 100):/g' /usr/lib/python3/dist-packages/boto/utils.py \\\n && curl -sL https://github.com/wal-e/wal-e/pull/384.diff | patch -p1 \\\n && curl -sL https://github.com/wal-e/wal-e/pull/392.diff | patch -p1 \\\n && echo 4.0.0.dev0 > supervisor/version.txt; fi \\\n && pip3 install \"git+https://github.com/zalando/patroni.git@1a6db4f5afbc3f8d7f42d1d2c57edd988e830bda#egg=patroni[kubernetes$EXTRAS]\" \\\n && sed -i 's/1, 5, 6/1, 5, 7/' /usr/local/lib/python3.6/dist-packages/patroni/dcs/__init__.py \\\n && echo \"__version__ = '$PATRONIVERSION'\" > /usr/local/lib/python3.6/dist-packages/patroni/version.py \\\n && for d in /usr/local/lib/python3.6 /usr/lib/python3; do cd $d/dist-packages \\\n && find . -type d -name tests | xargs rm -fr \\\n && find . -type f -name 'test_*.py*' -delete ; done \\\n && find . -type f -name 'unittest_*.py*' -delete \\\n && find . -type f -name '*_test.py' -delete \\\n && find . -type f -name '*_test.cpython*.pyc' -delete \\\n && apt-get purge -y ${BUILD_PACKAGES} \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /root/.cache /usr/share/doc /usr/share/man /usr/share/locale/?? /usr/share/locale/??_?? /usr/share/info \\\n && find /var/log -type f -exec truncate --size 0 {} ;\nARG COMPRESS=false\nRUN set -ex \\\n && if [ \"$COMPRESS\" = \"true\" ] ; then apt-get update \\\n && apt-get install busybox xz-utils -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /usr/share/doc /usr/share/man /etc/rc?.d /etc/systemd \\\n && ln -snf busybox /bin/sh \\\n && files=\"/bin/sh\" \\\n && libs=\"$( ldd $files | awk '{print $3;}' | grep '^/' | sort -u ;) /lib/x86_64-linux-gnu/ld-linux-x86-64.so.* /lib/x86_64-linux-gnu/libnsl.so.* /lib/x86_64-linux-gnu/libnss_compat.so.*\" \\\n && (echo /var/run $files $libs | tr ' ' '\\n' \\\n && realpath $files $libs ) | sort -u | sed 's/^\\///' > /exclude \\\n && find /etc/alternatives -xtype l -delete \\\n && save_dirs=\"usr lib var bin sbin etc/ssl etc/init.d etc/alternatives etc/apt\" \\\n && XZ_OPT=-e9v tar -X /exclude -cpJf a.tar.xz $save_dirs \\\n && rm -fr /usr/local/lib/python* \\\n && /bin/busybox sh -c \"(find $save_dirs -not -type d \\\n && cat /exclude /exclude \\\n && echo exclude) | sort | uniq -u | xargs /bin/busybox rm\" \\\n && /bin/busybox --install -s \\\n && /bin/busybox sh -c \"find $save_dirs -type d -depth -exec rmdir -p {} \\; 2> /dev/null\" ; fi\nFROM scratch\nCOPY --from=builder / /\nLABEL maintainer=\"Alexander Kukushkin <alexander.kukushkin@zalando.de>\"\nARG PGVERSION\nEXPOSE 5432/tcp 8008/tcp 8080/tcp\nENV LC_ALL=\"en_US.utf-8\" \\\n    PATH=\"$PATH:/usr/lib/postgresql/$PGVERSION/bin\" \\\n    PGHOME=\"/home/postgres\"\nENV WALE_ENV_DIR=\"$PGHOME/etc/wal-e.d/env\" \\\n    PGROOT=\"$PGHOME/pgdata/pgroot\" \\\n    LOG_ENV_DIR=\"$PGHOME/etc/log.d/env\"\nENV PGDATA=\"$PGROOT/data\" \\\n    PGLOG=\"$PGROOT/pg_log\"\nWORKDIR $PGHOME\nCOPY motd /etc/\nCOPY supervisor /etc/supervisor\nCOPY pgq_ticker.ini $PGHOME/\nCOPY envdir /usr/local/bin/\nRUN mkdir -p /var/log/supervisor \\\n && ln -s supervisor/supervisord.conf /etc/supervisord.conf \\\n && sed -i \"s|/var/lib/postgresql.*|$PGHOME:/bin/bash|\" /etc/passwd \\\n && chown -R postgres:postgres $PGHOME /run \\\n && sed -i 's/set compatible/set nocompatible/' /etc/vim/vimrc.tiny \\\n && for e in TERM=linux LC_ALL=C.UTF-8 LANG=C.UTF-8 EDITOR=editor \"PAGER='pspg -bX --no-mouse'\"; do echo \"export $e\" >> /etc/bash.bashrc; done \\\n && echo \"source /etc/motd\" >> /root/.bashrc\nCOPY scripts bootstrap /scripts/\nCOPY scm-source.json launch.sh /\nCMD [\"/bin/sh\", \"/launch.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"9d17485cdd0fcfc2595c28a0097e0dac","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG PGVERSION=11\nFROM ubuntu:18.04 AS builder\nARG DEMO=false\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && echo 'APT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/01norecommend \\\n && apt-get update \\\n && apt-get install curl ca-certificates less locales jq vim-tiny gnupg1 cron -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then apt-get install pv lzop -y \\\n && ETCDVERSION=2.3.8 \\\n && curl -L https://github.com/coreos/etcd/releases/download/v${ETCDVERSION}/etcd-v${ETCDVERSION}-linux-amd64.tar.gz | tar xz -C /bin --strip=1 --wildcards --no-anchored etcdctl etcd ; fi \\\n && find /usr/share/i18n/charmaps/ -type f ! -name UTF-8.gz -delete \\\n && find /usr/share/i18n/locales/ -type f ! -name en_US ! -name en_GB ! -name i18n* ! -name iso14651_t1 ! -name iso14651_t1_common ! -name 'translit_*' -delete \\\n && echo 'en_US.UTF-8 UTF-8' > /usr/share/i18n/SUPPORTED \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && DISTRIB_CODENAME=$( sed -n 's/DISTRIB_CODENAME=//p' /etc/lsb-release ;) \\\n && for t in deb deb-src; do echo \"$t http://apt.postgresql.org/pub/repos/apt/ ${DISTRIB_CODENAME}-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list; done \\\n && curl -s -o - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n && apt-get update \\\n && apt-get install postgresql-common -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /usr/share/doc /usr/share/man /usr/share/locale/?? /usr/share/locale/??_?? \\\n && find /var/log -type f -exec truncate --size 0 {}\nCOPY dependencies/debs /builddeps\nARG PGVERSION\nARG PGOLDVERSIONS=\"9.3 9.4 9.5 9.6 10\"\nARG WITH_PERL=false\n#   Install PostgreSQL, extensions and contribs\nENV POSTGIS_VERSION=\"2.5\" \\\n    BG_MON_COMMIT=\"00311ac9b10351edde909584028339de8da4b0d1\" \\\n    PG_AUTH_MON_COMMIT=\"a37987ad1465503ae805167fd1873270d5e9a010\" \\\n    DECODERBUFS=\"v0.9.5.Final\" \\\n    SET_USER=\"REL1_6_2\" \\\n    PLPGSQL_CHECK=\"v1.7.2\" \\\n    PLPROFILER=\"REL3_5\" \\\n    TIMESCALEDB=\"1.3.1\" \\\n    PAM_OAUTH2=\"v1.0\"\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && set -ex \\\n && sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list \\\n && apt-get update \\\n && cd /builddeps \\\n && BUILD_PACKAGES=\"devscripts build-essential fakeroot debhelper git gcc libc6-dev make libevent-dev naturaldocs python\" \\\n && if [ \"$DEMO\" = \"true\" ] ; then PGOLDVERSIONS=\"\" \\\n && apt-get install $BUILD_PACKAGES -y ; else BUILD_PACKAGES=\"$BUILD_PACKAGES equivs pgxnclient cmake libssl-dev zlib1g-dev libprotobuf-c-dev liblwgeom-dev libproj-dev libxslt1-dev libxml2-dev libpam0g-dev libkrb5-dev libedit-dev libselinux1-dev libcurl4-openssl-dev libicu-dev libc-ares-dev python-docutils pkg-config\" \\\n && apt-get install libprotobuf-c1 libcurl4 $BUILD_PACKAGES -y \\\n && if [ \"$WITH_PERL\" != \"true\" ] ; then version=$( apt-cache show perl | sed -n 's/^Version: //p' | sort -rV | head -n 1 ;) \\\n && echo \"Section: misc\\nPriority: optional\\nStandards-Version: 3.9.8\\nPackage: perl\\nSection:perl\\nMulti-Arch: allowed\\nReplaces: perl-base\\nVersion: $version\\nDescription: perl\" > perl \\\n && equivs-build perl ; fi \\\n && for p in python3-keyring python3-docutils ieee-data; do version=$( apt-cache show $p | sed -n 's/^Version: //p' | sort -rV | head -n 1 ;) \\\n && echo \"Section: misc\\nPriority: optional\\nStandards-Version: 3.9.8\\nPackage: $p\\nVersion: $version\\nDescription: $p\" > $p \\\n && equivs-build $p ; done \\\n && dpkg -i *.deb || apt-get install -y -f \\\n && git clone -b $PAM_OAUTH2 --recurse-submodules https://github.com/CyberDem0n/pam-oauth2.git \\\n && make -C pam-oauth2 install \\\n && git clone -b $DECODERBUFS https://github.com/debezium/postgres-decoderbufs.git \\\n && git clone -b $PLPROFILER https://github.com/pgcentral/plprofiler.git \\\n && git clone -b $PLPGSQL_CHECK https://github.com/okbob/plpgsql_check.git \\\n && git clone -b $TIMESCALEDB https://github.com/timescale/timescaledb.git \\\n && git clone git://www.sigaev.ru/plantuner.git ; fi \\\n && curl -sL https://github.com/CyberDem0n/bg_mon/archive/$BG_MON_COMMIT.tar.gz | tar xz \\\n && curl -sL https://github.com/RafiaSabih/pg_auth_mon/archive/$PG_AUTH_MON_COMMIT.tar.gz | tar xz \\\n && git clone -b $SET_USER https://github.com/pgaudit/set_user.git \\\n && apt-get install libevent-2.1 libevent-pthreads-2.1 python3.6 python3-psycopg2 -y \\\n && for version in ${PGOLDVERSIONS} ${PGVERSION}; do sed -i \"s/ main.*$/ main $version/g\" /etc/apt/sources.list.d/pgdg.list \\\n && apt-get update \\\n && if [ \"$DEMO\" != \"true\" ] ; then EXTRAS=\"postgresql-pltcl-${version} postgresql-${version}-hypopg postgresql-${version}-pgq3 postgresql-${version}-pldebugger postgresql-${version}-pllua postgresql-${version}-plproxy postgresql-${version}-repack\" \\\n && if [ \"$WITH_PERL\" = \"true\" ] ; then EXTRAS=\"$EXTRAS postgresql-plperl-${version}\" ; fi \\\n && if [ $version != \"9.3\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-partman postgresql-${version}-pglogical postgresql-${version}-postgis-${POSTGIS_VERSION} postgresql-${version}-postgis-${POSTGIS_VERSION}-scripts postgresql-${version}-wal2json\" \\\n && if [ $version != \"9.4\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-pgl-ddl-deploy\" ; fi \\\n && if [ $version != \"11\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-amcheck\" ; fi ; fi ; fi \\\n && if [ $version != \"9.3\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-pg-stat-kcache\" \\\n && if [ $version != \"9.4\" ] ; then EXTRAS=\"$EXTRAS postgresql-${version}-cron\" ; fi ; fi \\\n && apt-get install postgresql-contrib-${version} postgresql-plpython3-${version} libpq5=$version* $EXTRAS libpq-dev=$version* postgresql-server-dev-${version} --allow-downgrades -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then if [ \"$version\" != \"11\" ] ; then for extension in quantile trimmed_aggregates; do pgxn install $extension \\\n && strip /usr/lib/postgresql/$version/lib/$extension.so ; done ; fi \\\n && if [ \"$version\" = \"9.6\" ] || [ \"$version\" = \"10\" ] || [ \"$version\" = \"11\" ] ; then cd timescaledb \\\n && rm -fr build \\\n && ./bootstrap -DAPACHE_ONLY=1 -DSEND_TELEMETRY_DEFAULT=NO \\\n && make -C build install \\\n && strip /usr/lib/postgresql/$version/lib/timescaledb*.so \\\n && cd .. ; fi \\\n && if [ \"$version\" = \"9.3\" ] || [ \"$version\" = \"9.4\" ] ; then REWIND_VER=REL$( echo $version | sed 's/\\./_/' ;)_STABLE \\\n && apt-get source postgresql-${version} \\\n && curl -sL https://github.com/vmware/pg_rewind/archive/${REWIND_VER}.tar.gz | tar xz \\\n && make -C pg_rewind-${REWIND_VER} USE_PGXS=1 top_srcdir=../$( ls -d postgresql-${version}-* ;) install-strip \\\n && rm -fr pg_rewind-${REWIND_VER} postgresql-${version}* ; fi \\\n && EXTRA_EXTENSIONS=\"plprofiler plantuner\" \\\n && if [ \"$version\" != \"9.3\" ] ; then EXTRA_EXTENSIONS=\"$EXTRA_EXTENSIONS plpgsql_check postgres-decoderbufs\" ; fi ; else EXTRA_EXTENSIONS=\"\" ; fi \\\n && for n in bg_mon-${BG_MON_COMMIT} pg_auth_mon-${PG_AUTH_MON_COMMIT} set_user $EXTRA_EXTENSIONS; do make -C $n USE_PGXS=1 clean install-strip ; done \\\n && apt-get purge -y libpq-dev=$version* ; done \\\n && apt-get install skytools3-ticker pspg -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then apt-get source pgbouncer \\\n && cd $( ls -d pgbouncer-* ;) \\\n && curl -sL https://github.com/pgbouncer/pgbouncer/pull/127.diff | patch -p1 \\\n && curl -sL https://github.com/pgbouncer/pgbouncer/pull/326.diff | sed -n '/^diff --git a\\/src\\/client.c b\\/src\\/client.c/,$ p' | patch -p1 \\\n && sed -i 's/\\(MAX_PASSWORD\\t\\).*/\\11024/' include/bouncer.h \\\n && sed -i 's/\\(SEND_wrap(\\)512\\(, pktbuf_write_PasswordMessage, res, sk, psw)\\)/\\11024\\2/' include/pktbuf.h \\\n && debuild -b -uc -us \\\n && cd .. \\\n && dpkg -i pgbouncer_*.deb ; fi \\\n && apt-get install postgresql-server-dev-all postgresql-server-dev-9.3 -y \\\n && for pkg in pgextwlist; do apt-get source postgresql-10-${pkg} \\\n && cd $( ls -d *${pkg%?}*-* ;) \\\n && if [ \"$pkg\" = \"pgextwlist\" ] ; then perl -ne 'print unless /PG_TRY/ .. /PG_CATCH/' pgextwlist.c > pgextwlist.c.f \\\n && egrep -v '(PG_END_TRY|EmitWarningsOnPlaceholders)' pgextwlist.c.f > pgextwlist.c; fi \\\n && rm -f debian/pgversions \\\n && for version in ${PGOLDVERSIONS} ${PGVERSION}; do echo ${version} >> debian/pgversions; done \\\n && pg_buildext updatecontrol \\\n && debuild -b -uc -us \\\n && cd .. \\\n && for version in ${PGOLDVERSIONS} ${PGVERSION}; do for deb in postgresql-${version}-${pkg}_*.deb; do if [ -f $deb ] ; then dpkg -i $deb ; fi ; done ; done ; done \\\n && apt-get purge -y ${BUILD_PACKAGES} postgresql-server-dev-* libmagic1 bsdmainutils \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && dpkg -l | grep '^rc' | awk '{print $2}' | xargs apt-get purge -y \\\n && if [ \"$DEMO\" != \"true\" ] ; then cd /usr/lib/postgresql/$PGVERSION/bin \\\n && for u in clusterdb pg_archivecleanup pg_basebackup pg_isready pg_test_fsync pg_test_timing pgbench psql reindexdb vacuumdb vacuumlo *.py; do for v in /usr/lib/postgresql/*; do if [ \"$v\" != \"/usr/lib/postgresql/$PGVERSION\" ] \\\n && [ -f \"$v/bin/$u\" ] ; then rm $v/bin/$u \\\n && ln -s ../../$PGVERSION/bin/$u $v/bin/$u ; fi ; done ; done \\\n && cd /usr/share/postgresql/$PGVERSION/contrib/postgis-$POSTGIS_VERSION \\\n && for f in *.sql *.pl; do for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/$PGVERSION\" ] \\\n && diff $v/contrib/postgis-$POSTGIS_VERSION/$f $f > /dev/null; then rm $v/contrib/postgis-$POSTGIS_VERSION/$f \\\n && ln -s ../../../$PGVERSION/contrib/postgis-$POSTGIS_VERSION/$f $v/contrib/postgis-$POSTGIS_VERSION/$f ; fi ; done ; done \\\n && if [ -d /usr/share/postgresql/9.5/contrib/postgis-$POSTGIS_VERSION ] ; then cd /usr/share/postgresql/9.5/contrib/postgis-$POSTGIS_VERSION \\\n && for f in *.sql *.pl; do if [ -L $f ] ; then continue ; fi \\\n && for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/9.5\" ] \\\n && [ -f $v/contrib/postgis-$POSTGIS_VERSION/$f ] \\\n && [ ! -L $v/contrib/postgis-$POSTGIS_VERSION/$f ] \\\n && diff $v/contrib/postgis-$POSTGIS_VERSION/$f $f > /dev/null; then rm $v/contrib/postgis-$POSTGIS_VERSION/$f \\\n && ln -s ../../../9.5/contrib/postgis-$POSTGIS_VERSION/$f $v/contrib/postgis-$POSTGIS_VERSION/$f ; fi ; done ; done ; fi \\\n && cd /usr/share/postgresql/$PGVERSION/extension \\\n && for orig in $( ls -1 *.sql | grep -v -- '--' ;); do for f in ${orig%.sql}--*.sql; do if diff $orig $f > /dev/null; then rm $f \\\n && ln -s $orig $f ; fi ; done ; done \\\n && for e in pgq plproxy address_standardizer address_standardizer_data_us; do orig=$( ls -1 $e--*--*.sql 2> /dev/null | head -n1 ;) \\\n && if [ \"x$orig\" != \"x\" ] ; then for f in $e--*--*.sql; do if [ \"$f\" != \"$orig\" ] \\\n && diff $f $orig > /dev/null; then rm $f \\\n && ln -s $orig $f ; fi ; done ; fi ; done \\\n && for f in *.sql *.control; do for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/$PGVERSION\" ] \\\n && [ -f $v/extension/$f ] \\\n && [ ! -L $v/extension/$f ] \\\n && diff $v/extension/$f $f > /dev/null; then rm $v/extension/$f \\\n && ln -s ../../$PGVERSION/extension/$f $v/extension/$f ; fi ; done ; done \\\n && if [ -d /usr/share/postgresql/9.5/extension ] ; then cd /usr/share/postgresql/9.5/extension \\\n && for f in *.sql *.control; do if [ -L $f ] ; then continue ; fi \\\n && for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/9.5\" ] \\\n && [ -f $v/extension/$f ] \\\n && [ ! -L $v/extension/$f ] \\\n && diff $v/extension/$f $f > /dev/null; then rm $v/extension/$f \\\n && ln -s ../../9.5/extension/$f $v/extension/$f ; fi ; done ; done ; fi \\\n && cd /usr/share/postgresql/$PGVERSION/contrib \\\n && for f in *.sql *.html; do for v in /usr/share/postgresql/*; do if [ \"$v\" != \"/usr/share/postgresql/$PGVERSION\" ] \\\n && diff $v/contrib/$f $f > /dev/null; then rm $v/contrib/$f \\\n && ln -s ../../$PGVERSION/contrib/$f $v/contrib/$f ; fi ; done ; done ; fi \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /builddeps /usr/share/doc /usr/share/man /usr/share/info /usr/share/locale/?? /usr/share/locale/??_?? /usr/share/postgresql/*/man /etc/pgbouncer/* /usr/lib/postgresql/*/bin/createdb /usr/lib/postgresql/*/bin/createlang /usr/lib/postgresql/*/bin/createuser /usr/lib/postgresql/*/bin/dropdb /usr/lib/postgresql/*/bin/droplang /usr/lib/postgresql/*/bin/dropuser /usr/lib/postgresql/*/bin/pg_recvlogical /usr/lib/postgresql/*/bin/pg_standby /usr/lib/postgresql/*/bin/pltcl_* \\\n && find /var/log -type f -exec truncate --size 0 {}\n#   Install patroni, wal-e and wal-g\nENV PATRONIVERSION=\"1.5.7\"\nENV WALE_VERSION=\"1.1.0\"\nENV WALG_VERSION=\"v0.2.9\"\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && set -ex \\\n && BUILD_PACKAGES=\"python3-pip python3-wheel python3-dev git patchutils binutils\" \\\n && apt-get update \\\n && apt-cache depends patroni | sed -n -e 's/.* Depends: \\(python3-.\\+\\)$/\\1/p' | grep -Ev '^python3-(sphinx|etcd|consul|kazoo|kubernetes)' | xargs apt-get install -y ${BUILD_PACKAGES} python3-pystache python3-cachetools python3-rsa python3-pyasn1-modules \\\n && pip3 install setuptools \\\n && if [ \"$DEMO\" != \"true\" ] ; then EXTRAS=\",etcd,consul,zookeeper,aws\" \\\n && curl -sL https://github.com/wal-g/wal-g/releases/download/$WALG_VERSION/wal-g.linux-amd64-lzo.tar.gz | tar -C /usr/local/bin -xz \\\n && strip /usr/local/bin/wal-g \\\n && apt-get install python3-etcd python3-consul python3-kazoo python3-meld3 python3-boto python3-gevent python3-greenlet python3-protobuf python3-websocket python3-requests-oauthlib python3-swiftclient -y \\\n && find /usr/share/python-babel-localedata/locale-data -type f ! -name 'en_US*.dat' -delete \\\n && pip3 install filechunkio wal-e[aws,google,swift]==$WALE_VERSION kubernetes==3.0.0 'git+https://github.com/Supervisor/supervisor.git@master#egg=supervisor' 'git+https://github.com/zalando/pg_view.git@master#egg=pg-view' \\\n && cd /usr/local/lib/python3.6/dist-packages \\\n && sed -i '/^pytest/d' pg_view-*/requires.txt \\\n && pip3 uninstall -y atomicwrites attrs more_itertools pluggy pytest py \\\n && sed -i 's/^\\( for i in range(0,\\) num_retries):.*/\\1 100):/g' /usr/lib/python3/dist-packages/boto/utils.py \\\n && curl -sL https://github.com/wal-e/wal-e/pull/384.diff | patch -p1 \\\n && curl -sL https://github.com/wal-e/wal-e/pull/392.diff | patch -p1 \\\n && echo 4.0.0.dev0 > supervisor/version.txt; fi \\\n && pip3 install \"git+https://github.com/zalando/patroni.git@1a6db4f5afbc3f8d7f42d1d2c57edd988e830bda#egg=patroni[kubernetes$EXTRAS]\" \\\n && sed -i 's/1, 5, 6/1, 5, 7/' /usr/local/lib/python3.6/dist-packages/patroni/dcs/__init__.py \\\n && echo \"__version__ = '$PATRONIVERSION'\" > /usr/local/lib/python3.6/dist-packages/patroni/version.py \\\n && for d in /usr/local/lib/python3.6 /usr/lib/python3; do cd $d/dist-packages \\\n && find . -type d -name tests | xargs rm -fr \\\n && find . -type f -name 'test_*.py*' -delete ; done \\\n && find . -type f -name 'unittest_*.py*' -delete \\\n && find . -type f -name '*_test.py' -delete \\\n && find . -type f -name '*_test.cpython*.pyc' -delete \\\n && apt-get purge -y ${BUILD_PACKAGES} \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /root/.cache /usr/share/doc /usr/share/man /usr/share/locale/?? /usr/share/locale/??_?? /usr/share/info \\\n && find /var/log -type f -exec truncate --size 0 {}\nARG COMPRESS=false\nRUN set -ex \\\n && if [ \"$COMPRESS\" = \"true\" ] ; then apt-get update \\\n && apt-get install busybox xz-utils -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /usr/share/doc /usr/share/man /etc/rc?.d /etc/systemd \\\n && ln -snf busybox /bin/sh \\\n && files=\"/bin/sh\" \\\n && libs=\"$( ldd $files | awk '{print $3;}' | grep '^/' | sort -u ;) /lib/x86_64-linux-gnu/ld-linux-x86-64.so.* /lib/x86_64-linux-gnu/libnsl.so.* /lib/x86_64-linux-gnu/libnss_compat.so.*\" \\\n && (echo /var/run $files $libs | tr ' ' '\\n' \\\n && realpath $files $libs ) | sort -u | sed 's/^\\///' > /exclude \\\n && find /etc/alternatives -xtype l -delete \\\n && save_dirs=\"usr lib var bin sbin etc/ssl etc/init.d etc/alternatives etc/apt\" \\\n && XZ_OPT=-e9v tar -X /exclude -cpJf a.tar.xz $save_dirs \\\n && rm -fr /usr/local/lib/python* \\\n && /bin/busybox sh -c \"(find $save_dirs -not -type d \\\n && cat /exclude /exclude \\\n && echo exclude) | sort | uniq -u | xargs /bin/busybox rm\" \\\n && /bin/busybox --install -s \\\n && /bin/busybox sh -c \"find $save_dirs -type d -depth -exec rmdir -p {} \\; 2> /dev/null\" ; fi\nFROM scratch\nCOPY --from=builder / /\nLABEL maintainer=\"Alexander Kukushkin <alexander.kukushkin@zalando.de>\"\nARG PGVERSION\nEXPOSE 5432/tcp 8008/tcp 8080/tcp\nENV LC_ALL=\"en_US.utf-8\" \\\n    PATH=\"$PATH:/usr/lib/postgresql/$PGVERSION/bin\" \\\n    PGHOME=\"/home/postgres\"\nENV WALE_ENV_DIR=\"$PGHOME/etc/wal-e.d/env\" \\\n    PGROOT=\"$PGHOME/pgdata/pgroot\" \\\n    LOG_ENV_DIR=\"$PGHOME/etc/log.d/env\"\nENV PGDATA=\"$PGROOT/data\" \\\n    PGLOG=\"$PGROOT/pg_log\"\nWORKDIR $PGHOME\nCOPY motd /etc/\nCOPY supervisor /etc/supervisor\nCOPY pgq_ticker.ini $PGHOME/\nCOPY envdir /usr/local/bin/\nRUN mkdir -p /var/log/supervisor \\\n && ln -s supervisor/supervisord.conf /etc/supervisord.conf \\\n && sed -i \"s|/var/lib/postgresql.*|$PGHOME:/bin/bash|\" /etc/passwd \\\n && chown -R postgres:postgres $PGHOME /run \\\n && sed -i 's/set compatible/set nocompatible/' /etc/vim/vimrc.tiny \\\n && for e in TERM=linux LC_ALL=C.UTF-8 LANG=C.UTF-8 EDITOR=editor \"PAGER='pspg -bX --no-mouse'\"; do echo \"export $e\" >> /etc/bash.bashrc; done \\\n && echo \"source /etc/motd\" >> /root/.bashrc\nCOPY scripts bootstrap /scripts/\nCOPY scm-source.json launch.sh /\nCMD [\"/bin/sh\", \"/launch.sh\"]\n","originalDockerfileUglifiedHash":"146d0ed73fbd2d0c172e04b936218f17","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/57d1045ef2a75991973ed7c23e629b73f99c47fc.dockerfile"}