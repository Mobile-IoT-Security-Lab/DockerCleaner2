{"seed":2549514482,"processedDockerfileHash":"3ae8ae18d421e0b86b922e50b39192ab","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Florian Kelbert <f.kelbert@imperial.ac.uk>\nENV APACHE_VERSION=\"2.4.23\"\nENV LIBRESSL_VERSION=\"2.4.1\"\nARG MAIN_DIR=/talos/\nARG SGX_FILE=sgx_linux_ubuntu16.04.1_x64_sdk_1.9.100.39124.bin\nARG SGX_URL=https://download.01.org/intel-sgx/linux-1.9/${SGX_FILE}\nARG LIBRESSL_ROOT=${MAIN_DIR}/src/libressl-${LIBRESSL_VERSION}/\nARG LIBRESSL_CRYPTO=${LIBRESSL_ROOT}/crypto\nARG LIBRESSL_LIB=${LIBRESSL_ROOT}/lib\nARG APACHE_FILE=httpd-2.4.23.tar.bz2\nARG APACHE_URL=https://archive.apache.org/dist/httpd/${APACHE_FILE}\nARG APACHE_ROOT=${MAIN_DIR}/httpd-${APACHE_VERSION}\nARG APACHE_INSTALL=${APACHE_ROOT}/install\nARG APACHE_HTDOCS=${APACHE_INSTALL}/htdocs\nARG APACHE_USR=www-data\nARG APACHE_GRP=www-data\nARG STARTFILE=$MAIN_DIR/start.sh\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc=4:5.3.1-1ubuntu1 avr-libc=1:1.8.0+Atmel3.5.0-1 build-essential=12.1ubuntu2 libpcre3-dev=2:8.38-3.1 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 git=1:2.7.4-0ubuntu1.10 bison=2:3.0.4.dfsg-1 flex=2.6.0-11 libtool=2.4.6-0.1 git=1:2.7.4-0ubuntu1.10 openssh-client=1:7.2p2-4ubuntu2.10 wget=1.17.1-1ubuntu1.5 ca-certificates=20210119~16.04.1 make=4.1-6 patch=2.7.5-1ubuntu0.16.04.2 libapr1-dev=1.5.2-3 libaprutil1-dev=1.5.4-1build1 -y \\\n && apt-get clean \\\n && apt-get autoclean \\\n && rm -rf /var/lib/apt/lists/*\n#   Create main directory\nRUN mkdir -p ${MAIN_DIR}\n#   Copy repository into container\nWORKDIR ${MAIN_DIR}\nCOPY . .\n#   Install Intel SGX SDK\nRUN wget ${SGX_URL} \\\n && chmod +x ${SGX_FILE} \\\n && echo \"yes\" | ./${SGX_FILE} \\\n && rm ${SGX_FILE}\n#   Patch libressl with TaLoS code\nWORKDIR ${MAIN_DIR}/src/talos\nRUN ./patch_libressl.sh\n#   Compile and install TaLoS\nWORKDIR ${LIBRESSL_CRYPTO}\nRUN ln -s Makefile.sgx Makefile \\\n && . \"${MAIN_DIR}/sgxsdk/environment\" \\\n && make \\\n && make install\n#   Download, unpack, configure, compile and install Apache Httpd\nWORKDIR ${MAIN_DIR}\nRUN wget ${APACHE_URL} \\\n && tar xjvf ${APACHE_FILE} \\\n && rm ${APACHE_FILE}\nWORKDIR ${APACHE_ROOT}\nRUN ./configure --prefix=\"${APACHE_INSTALL}\" --enable-http --enable-proxy --enable-ssl --enable-ssl-staticlib-deps --with-ssl=\"${LIBRESSL_ROOT}\" --enable-file-cache --enable-cache --enable-disk-cache --enable-mem-cache --enable-deflate --enable-expires --enable-headers --enable-usertrack --enable-cgi --enable-vhost-alias --enable-rewrite --enable-so --enable-dav --with-mpm=worker\nRUN sed -i -e \"s#MOD_LDFLAGS.*#MOD_LDFLAGS=-L${LIBRESSL_LIB} -lssl -lcrypto -lsgx_urts_sim -lsgx_uae_service_sim -ldl -lrt -lcrypt -lpthread#\" -e \"$ iMOD_CFLAGS=-I${LIBRESSL_ROOT}/include\" modules/ssl/modules.mk\nRUN . \"${MAIN_DIR}/sgxsdk/environment\" \\\n && export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIBRESSL_LIB} \\\n && LIBRARY_PATH=${LIBRARY_PATH}:${LD_LIBRARY_PATH} make\nRUN make install\n#   Configure httpd, set links, create certificate, set owner\nRUN mkdir -p ${APACHE_INSTALL}/lib \\\n && ln -s ${LIBRESSL_CRYPTO}/enclave.signed.so \\\n && ln -s ${LIBRESSL_LIB}/libssl.so ${APACHE_INSTALL}/lib/ \\\n && ln -s ${LIBRESSL_LIB}/libcrypto.so ${APACHE_INSTALL}/lib/\nRUN cp ${MAIN_DIR}/conf/apache/httpd.conf ${APACHE_INSTALL}/conf/\nRUN echo \"\\nABC\\nMy City\\nMy Institution\\n\\nwww.example.com\\n\\n\" | openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ${APACHE_INSTALL}/conf/cert.key -out ${APACHE_INSTALL}/conf/cert.crt\nRUN chown -R ${APACHE_USR}:${APACHE_GRP} ${APACHE_INSTALL}\n#   Create httpd startup file\nRUN echo \"#!/bin/bash\\n cd ${APACHE_ROOT}; \\n source ${MAIN_DIR}/sgxsdk/environment;\\n export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIBRESSL_LIB};\\n ./install/bin/httpd -X\" > /start.sh \\\n && chmod +x /start.sh\nEXPOSE 7777/tcp\nEXPOSE 7778/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Florian Kelbert <f.kelbert@imperial.ac.uk>\nENV APACHE_VERSION=\"2.4.23\"\nENV LIBRESSL_VERSION=\"2.4.1\"\nARG MAIN_DIR=/talos/\nARG SGX_FILE=sgx_linux_ubuntu16.04.1_x64_sdk_1.9.100.39124.bin\nARG SGX_URL=https://download.01.org/intel-sgx/linux-1.9/${SGX_FILE}\nARG LIBRESSL_ROOT=${MAIN_DIR}/src/libressl-${LIBRESSL_VERSION}/\nARG LIBRESSL_CRYPTO=${LIBRESSL_ROOT}/crypto\nARG LIBRESSL_LIB=${LIBRESSL_ROOT}/lib\nARG APACHE_FILE=httpd-2.4.23.tar.bz2\nARG APACHE_URL=https://archive.apache.org/dist/httpd/${APACHE_FILE}\nARG APACHE_ROOT=${MAIN_DIR}/httpd-${APACHE_VERSION}\nARG APACHE_INSTALL=${APACHE_ROOT}/install\nARG APACHE_HTDOCS=${APACHE_INSTALL}/htdocs\nARG APACHE_USR=www-data\nARG APACHE_GRP=www-data\nARG STARTFILE=$MAIN_DIR/start.sh\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc avr-libc build-essential libpcre3-dev zlib1g-dev git bison flex libtool git openssh-client wget ca-certificates make patch libapr1-dev libaprutil1-dev -y \\\n && apt-get clean \\\n && apt-get autoclean \\\n && rm -rf /var/lib/apt/lists/*\n#  Create main directory\nRUN mkdir -p ${MAIN_DIR}\n#  Copy repository into container\nWORKDIR ${MAIN_DIR}\nCOPY . .\n#  Install Intel SGX SDK\nRUN wget ${SGX_URL} \\\n && chmod +x ${SGX_FILE} \\\n && echo \"yes\" | ./${SGX_FILE} \\\n && rm ${SGX_FILE}\n#  Patch libressl with TaLoS code\nWORKDIR ${MAIN_DIR}/src/talos\nRUN ./patch_libressl.sh\n#  Compile and install TaLoS\nWORKDIR ${LIBRESSL_CRYPTO}\nRUN ln -s Makefile.sgx Makefile \\\n && . \"${MAIN_DIR}/sgxsdk/environment\" \\\n && make \\\n && make install\n#  Download, unpack, configure, compile and install Apache Httpd\nWORKDIR ${MAIN_DIR}\nRUN wget ${APACHE_URL} \\\n && tar xjvf ${APACHE_FILE} \\\n && rm ${APACHE_FILE}\nWORKDIR ${APACHE_ROOT}\nRUN ./configure --prefix=\"${APACHE_INSTALL}\" --enable-http --enable-proxy --enable-ssl --enable-ssl-staticlib-deps --with-ssl=\"${LIBRESSL_ROOT}\" --enable-file-cache --enable-cache --enable-disk-cache --enable-mem-cache --enable-deflate --enable-expires --enable-headers --enable-usertrack --enable-cgi --enable-vhost-alias --enable-rewrite --enable-so --enable-dav --with-mpm=worker\nRUN sed -i -e \"s#MOD_LDFLAGS.*#MOD_LDFLAGS=-L${LIBRESSL_LIB} -lssl -lcrypto -lsgx_urts_sim -lsgx_uae_service_sim -ldl -lrt -lcrypt -lpthread#\" -e \"$ iMOD_CFLAGS=-I${LIBRESSL_ROOT}/include\" modules/ssl/modules.mk\nRUN . \"${MAIN_DIR}/sgxsdk/environment\" \\\n && export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIBRESSL_LIB} \\\n && LIBRARY_PATH=${LIBRARY_PATH}:${LD_LIBRARY_PATH} make\nRUN make install\n#  Configure httpd, set links, create certificate, set owner\nRUN mkdir -p ${APACHE_INSTALL}/lib \\\n && ln -s ${LIBRESSL_CRYPTO}/enclave.signed.so \\\n && ln -s ${LIBRESSL_LIB}/libssl.so ${APACHE_INSTALL}/lib/ \\\n && ln -s ${LIBRESSL_LIB}/libcrypto.so ${APACHE_INSTALL}/lib/\nRUN cp ${MAIN_DIR}/conf/apache/httpd.conf ${APACHE_INSTALL}/conf/\nRUN echo \"\\nABC\\nMy City\\nMy Institution\\n\\nwww.example.com\\n\\n\" | openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ${APACHE_INSTALL}/conf/cert.key -out ${APACHE_INSTALL}/conf/cert.crt\nRUN chown -R ${APACHE_USR}:${APACHE_GRP} ${APACHE_INSTALL}\n#  Create httpd startup file\nRUN echo \"#!/bin/bash\\n cd ${APACHE_ROOT}; \\n source ${MAIN_DIR}/sgxsdk/environment;\\n export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIBRESSL_LIB};\\n ./install/bin/httpd -X\" > /start.sh \\\n && chmod +x /start.sh\nEXPOSE 7777/tcp\nEXPOSE 7778/tcp\n","injectedSmells":[],"originalDockerfileHash":"0c125e6231f0493fb0bfb75097f680f2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Florian Kelbert <f.kelbert@imperial.ac.uk>\nENV APACHE_VERSION=\"2.4.23\"\nENV LIBRESSL_VERSION=\"2.4.1\"\nARG MAIN_DIR=/talos/\nARG SGX_FILE=sgx_linux_ubuntu16.04.1_x64_sdk_1.9.100.39124.bin\nARG SGX_URL=https://download.01.org/intel-sgx/linux-1.9/${SGX_FILE}\nARG LIBRESSL_ROOT=${MAIN_DIR}/src/libressl-${LIBRESSL_VERSION}/\nARG LIBRESSL_CRYPTO=${LIBRESSL_ROOT}/crypto\nARG LIBRESSL_LIB=${LIBRESSL_ROOT}/lib\nARG APACHE_FILE=httpd-2.4.23.tar.bz2\nARG APACHE_URL=https://archive.apache.org/dist/httpd/${APACHE_FILE}\nARG APACHE_ROOT=${MAIN_DIR}/httpd-${APACHE_VERSION}\nARG APACHE_INSTALL=${APACHE_ROOT}/install\nARG APACHE_HTDOCS=${APACHE_INSTALL}/htdocs\nARG APACHE_USR=www-data\nARG APACHE_GRP=www-data\nARG STARTFILE=$MAIN_DIR/start.sh\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc avr-libc build-essential libpcre3-dev zlib1g-dev git bison flex libtool git openssh-client wget ca-certificates make patch libapr1-dev libaprutil1-dev -y \\\n && apt-get clean \\\n && apt-get autoclean \\\n && rm -rf /var/lib/apt/lists/*\n#   Create main directory\nRUN mkdir -p ${MAIN_DIR}\n#   Copy repository into container\nWORKDIR ${MAIN_DIR}\nCOPY . .\n#   Install Intel SGX SDK\nRUN wget ${SGX_URL} \\\n && chmod +x ${SGX_FILE} \\\n && echo \"yes\" | ./${SGX_FILE} \\\n && rm ${SGX_FILE}\n#   Patch libressl with TaLoS code\nWORKDIR ${MAIN_DIR}/src/talos\nRUN ./patch_libressl.sh\n#   Compile and install TaLoS\nWORKDIR ${LIBRESSL_CRYPTO}\nRUN ln -s Makefile.sgx Makefile \\\n && . \"${MAIN_DIR}/sgxsdk/environment\" \\\n && make \\\n && make install\n#   Download, unpack, configure, compile and install Apache Httpd\nWORKDIR ${MAIN_DIR}\nRUN wget ${APACHE_URL} \\\n && tar xjvf ${APACHE_FILE} \\\n && rm ${APACHE_FILE}\nWORKDIR ${APACHE_ROOT}\nRUN ./configure --prefix=\"${APACHE_INSTALL}\" --enable-http --enable-proxy --enable-ssl --enable-ssl-staticlib-deps --with-ssl=\"${LIBRESSL_ROOT}\" --enable-file-cache --enable-cache --enable-disk-cache --enable-mem-cache --enable-deflate --enable-expires --enable-headers --enable-usertrack --enable-cgi --enable-vhost-alias --enable-rewrite --enable-so --enable-dav --with-mpm=worker\nRUN sed -i -e \"s#MOD_LDFLAGS.*#MOD_LDFLAGS=-L${LIBRESSL_LIB} -lssl -lcrypto -lsgx_urts_sim -lsgx_uae_service_sim -ldl -lrt -lcrypt -lpthread#\" -e \"$ iMOD_CFLAGS=-I${LIBRESSL_ROOT}/include\" modules/ssl/modules.mk\nRUN . \"${MAIN_DIR}/sgxsdk/environment\" \\\n && export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIBRESSL_LIB} \\\n && LIBRARY_PATH=${LIBRARY_PATH}:${LD_LIBRARY_PATH} make\nRUN make install\n#   Configure httpd, set links, create certificate, set owner\nRUN mkdir -p ${APACHE_INSTALL}/lib \\\n && ln -s ${LIBRESSL_CRYPTO}/enclave.signed.so \\\n && ln -s ${LIBRESSL_LIB}/libssl.so ${APACHE_INSTALL}/lib/ \\\n && ln -s ${LIBRESSL_LIB}/libcrypto.so ${APACHE_INSTALL}/lib/\nRUN cp ${MAIN_DIR}/conf/apache/httpd.conf ${APACHE_INSTALL}/conf/\nRUN echo \"\\nABC\\nMy City\\nMy Institution\\n\\nwww.example.com\\n\\n\" | openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ${APACHE_INSTALL}/conf/cert.key -out ${APACHE_INSTALL}/conf/cert.crt\nRUN chown -R ${APACHE_USR}:${APACHE_GRP} ${APACHE_INSTALL}\n#   Create httpd startup file\nRUN echo \"#!/bin/bash\\n cd ${APACHE_ROOT}; \\n source ${MAIN_DIR}/sgxsdk/environment;\\n export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIBRESSL_LIB};\\n ./install/bin/httpd -X\" > /start.sh \\\n && chmod +x /start.sh\nEXPOSE 7777/tcp\nEXPOSE 7778/tcp\n","originalDockerfileUglifiedHash":"6674faff6d1d7dfaf95322883e6ec3de","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ee8145be3984329c7b1122ce6eda820bbe866d4a.dockerfile"}