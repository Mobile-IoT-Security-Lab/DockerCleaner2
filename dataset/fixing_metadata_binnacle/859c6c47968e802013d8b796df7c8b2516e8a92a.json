{"seed":175254912,"processedDockerfileHash":"673e991f4243604cfb810f0c0a90ca35","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.2-fpm\nMAINTAINER duzhenxun<5552123@qq.com>\n#   set timezome\nENV TZ=\"Asia/Shanghai\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   change sources\nCOPY sources.list /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends libfreetype6-dev=2.9.1-3+deb10u3 libjpeg62-turbo-dev=1:1.5.2-2+deb10u1 libmcrypt-dev=2.5.8-3.4 libpng-dev=1.6.36-6 libmemcached-dev=1.0.18-4.2 graphicsmagick=1.4+really1.3.35-1~deb10u3 libgraphicsmagick1-dev=1.4+really1.3.35-1~deb10u3 imagemagick=8:6.9.10.23+dfsg-2.1+deb10u4 libmagickwand-dev=8:6.9.10.23+dfsg-2.1+deb10u4 libssh2-1-dev=1.8.0-2.1 libzip-dev=1.5.1-4 libzookeeper-mt-dev=3.4.13-2 libldb-dev=2:1.5.1+really1.4.6-3+deb10u1 libldap2-dev=2.4.47+dfsg-3+deb10u7 libssl-dev=1.1.1n-0+deb10u4 libmosquitto-dev=1.5.7-1+deb10u1 librabbitmq-dev=0.9.0-0.2 libicu-dev=63.1-6+deb10u3 libxml2-dev=2.9.4+dfsg1-7+deb10u5 libxslt-dev libbz2-dev=1.0.6-9.2~deb10u2 git=1:2.20.1-2+deb10u8 vim=2:8.1.0875-5+deb10u4 -y \\\n && : \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\n && : \\\n && docker-php-ext-install -j$( nproc ;) gd ldap intl soap xsl xmlrpc wddx bz2 zip pcntl pdo_mysql mysqli mbstring calendar sockets opcache exif bcmath \\\n && : \\\n && apt-get clean \\\n && apt-get autoremove --purge -y\n#   Composer install\nCOPY ./ext/composer.phar /usr/local/bin/composer\n#  RUN composer config -g repo.packagist composer https://packagist.phpcomposer.com\n#   使用源码包方式安装扩展\n#   Install Redis extension from source\nCOPY ./ext/redis-4.1.0.tgz /tmp/redis.tgz\nRUN ls /tmp\nRUN mkdir -p /tmp/redis \\\n && tar -xf /tmp/redis.tgz -C /tmp/redis --strip-components=1 \\\n && rm /tmp/redis.tgz \\\n && docker-php-ext-configure /tmp/redis --enable-redis \\\n && docker-php-ext-install /tmp/redis \\\n && rm -r /tmp/redis\n#   zendopcache\n#  COPY ./ext/zendopcache-7.0.5.tgz /tmp/\n#  RUN cd /tmp/ \\\n#  && tar -xf zendopcache-7.0.5.tgz \\\n#  && rm zendopcache-7.0.5.tgz \\\n#  && ( cd zendopcache-7.0.5 && phpize && ./configure && make && make install ) \\\n#  && rm -r zendopcache-7.0.5 \\\n#  && docker-php-ext-enable opcache\n#   libmemcached\n#  COPY ./ext/libmemcached-1.0.18.tar.gz /tmp/\n#  RUN cd /tmp/ \\\n#      && tar -xf libmemcached-1.0.18.tar.gz \\\n#      && rm libmemcached-1.0.18.tar.gz \\\n#      && cd libmemcached-1.0.18 \\\n#      && ./configure --prefix=/usr/local/libmemcached --with-memcached \\\n#      && make && make install \\\n#      && rm -rf /tmp/libmemcached-1.0.18\n#   memcached\nCOPY ./ext/memcached-3.0.4.tgz /tmp/\nRUN cd /tmp/ \\\n && tar -xf memcached-3.0.4.tgz \\\n && cd memcached-3.0.4 \\\n && phpize \\\n && ./configure -enable-memcached -with-php-config=/usr/local/bin/php-config \\\n && make \\\n && make install \\\n && echo \"extension=memcached.so\" > /usr/local/etc/php/conf.d/memcached.ini \\\n && rm -rf /tmp/memcached-3.0.4\n#   使用git方式\n#  Swoole\nRUN cd /tmp \\\n && git clone https://gitee.com/swoole/swoole.git \\\n && cd swoole \\\n && phpize \\\n && ./configure --enable-openssl -with-php-config=/usr/local/bin/php-config \\\n && make \\\n && make install \\\n && echo \"extension=swoole.so\" > /usr/local/etc/php/conf.d/swoole.ini \\\n && rm -rf /tmp/swoole\n#   pecl 安装\n#   Notice: if pecl install get error\n#      `No releases available for package \"pecl.php.net/xxx\"`\n#   or\n#      `Package \"xxx\" does not have REST xml available`\n#   Please turn on proxy (The proxy IP may be docker host IP or others):\n#  RUN pear config-set http_proxy http://10.0.75.1:1080\n#  RUN pecl install redis-3.1.4 \\\n#  && docker-php-ext-enable redis \\\n#  && pecl install xdebug-2.4.1 \\\n#  && docker-php-ext-enable xdebug \\\n#  && apt-get install -y libmagickwand-dev \\\n#  && pecl install imagick-3.4.3 \\\n#  && docker-php-ext-enable imagick \\\n#  && apt-get install -y libmemcached-dev zlib1g-dev \\\n#  && pecl install memcached-2.2.0 \\\n#  && docker-php-ext-enable memcached\n#  && pecl install gmagick-2.0.5RC1 \\\n#  && pecl install imagick-3.4.3 \\\n#  && pecl install memcached-3.0.4 \\\n#  && pecl install redis-4.0.2 \\\n#  && pecl install mongodb-1.4.3 \\\n#  && pecl install swoole-2.1.3 \\\n#  && pecl install ssh2-1.1.2 \\\n#  && pecl install yaf-3.0.7 \\\n#  && pecl install yaconf-1.0.7 \\\n#  && pecl install zip-1.15.2 \\\n#  && pecl install zookeeper-0.5.0 \\\n#  && pecl install Mosquitto-0.4.0 \\\n#  && pecl install amqp-1.9.3 \\\n#  && pecl install xdebug-2.6.0 \\\n#  && docker-php-ext-enable gmagick memcached redis mcrypt mongodb swoole ssh2 yaf yaconf zip zookeeper mosquitto amqp \\\n#   Write Permission\nRUN usermod -u 1000 www-data\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.2-fpm\nMAINTAINER duzhenxun<5552123@qq.com>\n#  set timezome\nENV TZ=\"Asia/Shanghai\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#  change sources\nCOPY sources.list /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev libmemcached-dev graphicsmagick libgraphicsmagick1-dev imagemagick libmagickwand-dev libssh2-1-dev libzip-dev libzookeeper-mt-dev libldb-dev libldap2-dev libssl-dev libmosquitto-dev librabbitmq-dev libicu-dev libxml2-dev libxslt-dev libbz2-dev git vim -y \\\n && : \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\n && : \\\n && docker-php-ext-install -j$( nproc ;) gd ldap intl soap xsl xmlrpc wddx bz2 zip pcntl pdo_mysql mysqli mbstring calendar sockets opcache exif bcmath \\\n && : \\\n && apt-get clean \\\n && apt-get autoremove --purge -y\n#  Composer install\nCOPY ./ext/composer.phar /usr/local/bin/composer\n# RUN composer config -g repo.packagist composer https://packagist.phpcomposer.com\n#  使用源码包方式安装扩展\n#  Install Redis extension from source\nCOPY ./ext/redis-4.1.0.tgz /tmp/redis.tgz\nRUN ls /tmp\nRUN mkdir -p /tmp/redis \\\n && tar -xf /tmp/redis.tgz -C /tmp/redis --strip-components=1 \\\n && rm /tmp/redis.tgz \\\n && docker-php-ext-configure /tmp/redis --enable-redis \\\n && docker-php-ext-install /tmp/redis \\\n && rm -r /tmp/redis\n#  zendopcache\n# COPY ./ext/zendopcache-7.0.5.tgz /tmp/\n# RUN cd /tmp/ \\\n# && tar -xf zendopcache-7.0.5.tgz \\\n# && rm zendopcache-7.0.5.tgz \\\n# && ( cd zendopcache-7.0.5 && phpize && ./configure && make && make install ) \\\n# && rm -r zendopcache-7.0.5 \\\n# && docker-php-ext-enable opcache\n#  libmemcached\n# COPY ./ext/libmemcached-1.0.18.tar.gz /tmp/\n# RUN cd /tmp/ \\\n#     && tar -xf libmemcached-1.0.18.tar.gz \\\n#     && rm libmemcached-1.0.18.tar.gz \\\n#     && cd libmemcached-1.0.18 \\\n#     && ./configure --prefix=/usr/local/libmemcached --with-memcached \\\n#     && make && make install \\\n#     && rm -rf /tmp/libmemcached-1.0.18\n#  memcached\nCOPY ./ext/memcached-3.0.4.tgz /tmp/\nRUN cd /tmp/ \\\n && tar -xf memcached-3.0.4.tgz \\\n && cd memcached-3.0.4 \\\n && phpize \\\n && ./configure -enable-memcached -with-php-config=/usr/local/bin/php-config \\\n && make \\\n && make install \\\n && echo \"extension=memcached.so\" > /usr/local/etc/php/conf.d/memcached.ini \\\n && rm -rf /tmp/memcached-3.0.4\n#  使用git方式\n# Swoole\nRUN cd /tmp \\\n && git clone https://gitee.com/swoole/swoole.git \\\n && cd swoole \\\n && phpize \\\n && ./configure --enable-openssl -with-php-config=/usr/local/bin/php-config \\\n && make \\\n && make install \\\n && echo \"extension=swoole.so\" > /usr/local/etc/php/conf.d/swoole.ini \\\n && rm -rf /tmp/swoole\n#  pecl 安装\n#  Notice: if pecl install get error\n#     `No releases available for package \"pecl.php.net/xxx\"`\n#  or\n#     `Package \"xxx\" does not have REST xml available`\n#  Please turn on proxy (The proxy IP may be docker host IP or others):\n# RUN pear config-set http_proxy http://10.0.75.1:1080\n# RUN pecl install redis-3.1.4 \\\n# && docker-php-ext-enable redis \\\n# && pecl install xdebug-2.4.1 \\\n# && docker-php-ext-enable xdebug \\\n# && apt-get install -y libmagickwand-dev \\\n# && pecl install imagick-3.4.3 \\\n# && docker-php-ext-enable imagick \\\n# && apt-get install -y libmemcached-dev zlib1g-dev \\\n# && pecl install memcached-2.2.0 \\\n# && docker-php-ext-enable memcached\n# && pecl install gmagick-2.0.5RC1 \\\n# && pecl install imagick-3.4.3 \\\n# && pecl install memcached-3.0.4 \\\n# && pecl install redis-4.0.2 \\\n# && pecl install mongodb-1.4.3 \\\n# && pecl install swoole-2.1.3 \\\n# && pecl install ssh2-1.1.2 \\\n# && pecl install yaf-3.0.7 \\\n# && pecl install yaconf-1.0.7 \\\n# && pecl install zip-1.15.2 \\\n# && pecl install zookeeper-0.5.0 \\\n# && pecl install Mosquitto-0.4.0 \\\n# && pecl install amqp-1.9.3 \\\n# && pecl install xdebug-2.6.0 \\\n# && docker-php-ext-enable gmagick memcached redis mcrypt mongodb swoole ssh2 yaf yaconf zip zookeeper mosquitto amqp \\\n#  Write Permission\nRUN usermod -u 1000 www-data\n","injectedSmells":[],"originalDockerfileHash":"d860ffd263e08f636a8fe6650a722d80","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.2-fpm\nMAINTAINER duzhenxun<5552123@qq.com>\n#   set timezome\nENV TZ=\"Asia/Shanghai\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   change sources\nCOPY sources.list /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev libmemcached-dev graphicsmagick libgraphicsmagick1-dev imagemagick libmagickwand-dev libssh2-1-dev libzip-dev libzookeeper-mt-dev libldb-dev libldap2-dev libssl-dev libmosquitto-dev librabbitmq-dev libicu-dev libxml2-dev libxslt-dev libbz2-dev git vim -y \\\n && : \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\n && : \\\n && docker-php-ext-install -j$( nproc ;) gd ldap intl soap xsl xmlrpc wddx bz2 zip pcntl pdo_mysql mysqli mbstring calendar sockets opcache exif bcmath \\\n && : \\\n && apt-get clean \\\n && apt-get autoremove --purge -y\n#   Composer install\nCOPY ./ext/composer.phar /usr/local/bin/composer\n#  RUN composer config -g repo.packagist composer https://packagist.phpcomposer.com\n#   使用源码包方式安装扩展\n#   Install Redis extension from source\nCOPY ./ext/redis-4.1.0.tgz /tmp/redis.tgz\nRUN ls /tmp\nRUN mkdir -p /tmp/redis \\\n && tar -xf /tmp/redis.tgz -C /tmp/redis --strip-components=1 \\\n && rm /tmp/redis.tgz \\\n && docker-php-ext-configure /tmp/redis --enable-redis \\\n && docker-php-ext-install /tmp/redis \\\n && rm -r /tmp/redis\n#   zendopcache\n#  COPY ./ext/zendopcache-7.0.5.tgz /tmp/\n#  RUN cd /tmp/ \\\n#  && tar -xf zendopcache-7.0.5.tgz \\\n#  && rm zendopcache-7.0.5.tgz \\\n#  && ( cd zendopcache-7.0.5 && phpize && ./configure && make && make install ) \\\n#  && rm -r zendopcache-7.0.5 \\\n#  && docker-php-ext-enable opcache\n#   libmemcached\n#  COPY ./ext/libmemcached-1.0.18.tar.gz /tmp/\n#  RUN cd /tmp/ \\\n#      && tar -xf libmemcached-1.0.18.tar.gz \\\n#      && rm libmemcached-1.0.18.tar.gz \\\n#      && cd libmemcached-1.0.18 \\\n#      && ./configure --prefix=/usr/local/libmemcached --with-memcached \\\n#      && make && make install \\\n#      && rm -rf /tmp/libmemcached-1.0.18\n#   memcached\nCOPY ./ext/memcached-3.0.4.tgz /tmp/\nRUN cd /tmp/ \\\n && tar -xf memcached-3.0.4.tgz \\\n && cd memcached-3.0.4 \\\n && phpize \\\n && ./configure -enable-memcached -with-php-config=/usr/local/bin/php-config \\\n && make \\\n && make install \\\n && echo \"extension=memcached.so\" > /usr/local/etc/php/conf.d/memcached.ini \\\n && rm -rf /tmp/memcached-3.0.4\n#   使用git方式\n#  Swoole\nRUN cd /tmp \\\n && git clone https://gitee.com/swoole/swoole.git \\\n && cd swoole \\\n && phpize \\\n && ./configure --enable-openssl -with-php-config=/usr/local/bin/php-config \\\n && make \\\n && make install \\\n && echo \"extension=swoole.so\" > /usr/local/etc/php/conf.d/swoole.ini \\\n && rm -rf /tmp/swoole\n#   pecl 安装\n#   Notice: if pecl install get error\n#      `No releases available for package \"pecl.php.net/xxx\"`\n#   or\n#      `Package \"xxx\" does not have REST xml available`\n#   Please turn on proxy (The proxy IP may be docker host IP or others):\n#  RUN pear config-set http_proxy http://10.0.75.1:1080\n#  RUN pecl install redis-3.1.4 \\\n#  && docker-php-ext-enable redis \\\n#  && pecl install xdebug-2.4.1 \\\n#  && docker-php-ext-enable xdebug \\\n#  && apt-get install -y libmagickwand-dev \\\n#  && pecl install imagick-3.4.3 \\\n#  && docker-php-ext-enable imagick \\\n#  && apt-get install -y libmemcached-dev zlib1g-dev \\\n#  && pecl install memcached-2.2.0 \\\n#  && docker-php-ext-enable memcached\n#  && pecl install gmagick-2.0.5RC1 \\\n#  && pecl install imagick-3.4.3 \\\n#  && pecl install memcached-3.0.4 \\\n#  && pecl install redis-4.0.2 \\\n#  && pecl install mongodb-1.4.3 \\\n#  && pecl install swoole-2.1.3 \\\n#  && pecl install ssh2-1.1.2 \\\n#  && pecl install yaf-3.0.7 \\\n#  && pecl install yaconf-1.0.7 \\\n#  && pecl install zip-1.15.2 \\\n#  && pecl install zookeeper-0.5.0 \\\n#  && pecl install Mosquitto-0.4.0 \\\n#  && pecl install amqp-1.9.3 \\\n#  && pecl install xdebug-2.6.0 \\\n#  && docker-php-ext-enable gmagick memcached redis mcrypt mongodb swoole ssh2 yaf yaconf zip zookeeper mosquitto amqp \\\n#   Write Permission\nRUN usermod -u 1000 www-data\n","originalDockerfileUglifiedHash":"984a4803fc7e407ff117f70b4aad5062","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/859c6c47968e802013d8b796df7c8b2516e8a92a.dockerfile"}