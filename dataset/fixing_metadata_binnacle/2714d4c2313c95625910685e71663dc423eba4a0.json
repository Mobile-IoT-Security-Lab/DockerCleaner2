{"seed":322678035,"processedDockerfileHash":"558334061d0c4b05c81bdb20120e1116","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\n#   @TODO : Migrate to filebeat offical image : See docker-metricbeat for example updated image\n#\n#   Sadly this broke, so till it is \"fixed\". Its commented out\n#\n#   RUN apt-get -y update && \\\n#   \tapt-get -y install sudo apt-utils apt-transport-https curl && \\\n#   \tcurl https://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add - && \\\n#   \techo \"deb https://artifacts.elastic.co/packages/5.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-5.x.list && \\\n#   \tapt-get -y update && \\\n#   \tapt-get -y install filebeat && \\\n#   \tapt-get clean;\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends sudo apt-utils apt-transport-https curl -y \\\n && curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.2.1-amd64.deb \\\n && sudo dpkg -i filebeat-5.2.1-amd64.deb \\\n && rm -f filebeat-5.2.1-amd64.deb\n#   I know this setup was intentional\n#   https://www.elastic.co/guide/en/beats/libbeat/current/breaking-changes-5.0.html\n#\n#   But really, i prefer having my entrypoint paths working\nRUN mv /usr/bin/filebeat.sh /usr/bin/filebeat 2> /dev/null\n#   Filebeat db tracker : Required to ensure no log duplicates\n#   occur within resets / updates of filebeat image\nENV LOG_REGISTRY=\"\\\"/var/lib/filebeat/registry\\\"\"\nVOLUME /var/lib/filebeat\n#   Log path to read from docker containers\nENV LOG_PATH=\"\\\"/var/lib/docker/containers/*/*-json.log\\\"\"\nVOLUME /var/lib/docker/containers\n#  -----------------------------------------------\n#   Elasticsearch settings\n#  -----------------------------------------------\n#   Elasticsearch host to push into\nENV ES_HOST=\"elasticsearch\"\n#   Elasticsearch port to push into\nENV ES_PORT=\"9200\"\n#   Elasticsearch protocall to use\nENV ES_PROT=\"\\\"http\\\"\"\n#   Elasticsearch username to use\nENV ES_USER=\"elasticsearch\"\n#   Elasticsearch password to use\nENV ES_PASS=\"PleaseChangeThisToActualPassword\"\n#   Elasticsearch index to use \nENV ES_INDEX=\"\\\"docker-filebeat-%{+yyyy.MM.dd}\\\"\"\n#   Compression level of log submissions 0 - 9\n#   NOTE: This is not supported in AWS Elasticsearch\nENV ES_COMPRESSION=\"0\"\n#  -----------------------------------------------\n#   filebeat settings\n#  -----------------------------------------------\n#   Bulk batch size. This is used in conjuncture with LOG_LINE_MAX\n#   To ensure that the total BULK request size does not exceed 100MB\nENV ES_BATCHSIZE=\"20\"\n#   A single log line maximum bytes\n#   250,000 bytes was selected, so that 20 log lines\n#   would be under 100MB with some format overhead.\nENV LOG_LINE_MAX=\"250000\"\n#   Logging level to output, production should use warning\nENV LOGGING_LEVEL=\"\\\"warning\\\"\"\n#   Regex rules to filter out lines\n#   This is useful for extremly noisy containers,\n#   With little logging value : Such as rancher ipsec-router\n#\n#   These filters were however carefully chosen, to avoid accidentally blocking off\n#   logs that could have been wanted elsewhere. In most cases that is.\n#   Modify these filters as you require.\n#\n#   Note that due to the limitation of yml,\n#   Arrays are not supported =(\n#\n#   So lets give this long regex. A breakdown\n#\n#   ```\n#   //\n#   // Start by greadily claiming json prefixes, and wrapping in a multi conditional \"array\"\n#   //\n#   .*(\n#        //\n#        // Remove the most verbose ipsec, VPN traffic in rancher\n#        //\n#        ([0-9]{2}\\[(KNL|IKE|MGR|NET)\\])|\n#        //\n#        // Remove the succesful Filebeat elastic search submission, reducing a logging loop\n#        // Which would potentially be perpetual, if BATCHSIZE is 1\n#        //\n#        (POST /_bulk HTTP/1.1\\\" 200 [0-9]* \\\"-\\\" \\\"Go-http-client/1.1)|\n#        //\n#        // Removing several rancher services logs, but not all\n#        // As some are way too vague to safely filter out, without accidentally \n#        // filtering out another application\n#        //\n#        (level\\=debug.*io\\.rancher)\n#   //\n#   // End by greadily claiming ending char, and closing the multi conditional block\n#   //\n#   ).*\n#   ```\nENV LOG_EXCLUDE_LINE=\"\\\".*(([0-9]{2}\\[(KNL|IKE|MGR|NET)\\])|(POST /_bulk HTTP/1.1\\\" 200 [0-9]* \\\"-\\\" \\\"Go-http-client/1.1)|(level\\=debug.*io\\.rancher)).*\\\"\"\n#   Filebeat configuration yml (will load environment configs)\nCOPY filebeat.yml /etc/filebeat/filebeat.yml\n#   Build version check\nRUN filebeat --version\n#   Entrypoint to run filebeat\nENTRYPOINT [\"/usr/bin/filebeat\", \"-e\", \"-v\", \"-c\", \"/etc/filebeat/filebeat.yml\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\n#  @TODO : Migrate to filebeat offical image : See docker-metricbeat for example updated image\n#\n#  Sadly this broke, so till it is \"fixed\". Its commented out\n#\n#  RUN apt-get -y update && \\\n#  \tapt-get -y install sudo apt-utils apt-transport-https curl && \\\n#  \tcurl https://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add - && \\\n#  \techo \"deb https://artifacts.elastic.co/packages/5.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-5.x.list && \\\n#  \tapt-get -y update && \\\n#  \tapt-get -y install filebeat && \\\n#  \tapt-get clean;\nRUN apt-get update -y \\\n && apt-get install sudo apt-utils apt-transport-https curl -y \\\n && curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.2.1-amd64.deb \\\n && sudo dpkg -i filebeat-5.2.1-amd64.deb \\\n && rm -f filebeat-5.2.1-amd64.deb\n#  I know this setup was intentional\n#  https://www.elastic.co/guide/en/beats/libbeat/current/breaking-changes-5.0.html\n#\n#  But really, i prefer having my entrypoint paths working\nRUN mv /usr/bin/filebeat.sh /usr/bin/filebeat 2> /dev/null\n#  Filebeat db tracker : Required to ensure no log duplicates\n#  occur within resets / updates of filebeat image\nENV LOG_REGISTRY=\"\\\"/var/lib/filebeat/registry\\\"\"\nVOLUME /var/lib/filebeat\n#  Log path to read from docker containers\nENV LOG_PATH=\"\\\"/var/lib/docker/containers/*/*-json.log\\\"\"\nVOLUME /var/lib/docker/containers\n# -----------------------------------------------\n#  Elasticsearch settings\n# -----------------------------------------------\n#  Elasticsearch host to push into\nENV ES_HOST=\"elasticsearch\"\n#  Elasticsearch port to push into\nENV ES_PORT=\"9200\"\n#  Elasticsearch protocall to use\nENV ES_PROT=\"\\\"http\\\"\"\n#  Elasticsearch username to use\nENV ES_USER=\"elasticsearch\"\n#  Elasticsearch password to use\nENV ES_PASS=\"PleaseChangeThisToActualPassword\"\n#  Elasticsearch index to use \nENV ES_INDEX=\"\\\"docker-filebeat-%{+yyyy.MM.dd}\\\"\"\n#  Compression level of log submissions 0 - 9\n#  NOTE: This is not supported in AWS Elasticsearch\nENV ES_COMPRESSION=\"0\"\n# -----------------------------------------------\n#  filebeat settings\n# -----------------------------------------------\n#  Bulk batch size. This is used in conjuncture with LOG_LINE_MAX\n#  To ensure that the total BULK request size does not exceed 100MB\nENV ES_BATCHSIZE=\"20\"\n#  A single log line maximum bytes\n#  250,000 bytes was selected, so that 20 log lines\n#  would be under 100MB with some format overhead.\nENV LOG_LINE_MAX=\"250000\"\n#  Logging level to output, production should use warning\nENV LOGGING_LEVEL=\"\\\"warning\\\"\"\n#  Regex rules to filter out lines\n#  This is useful for extremly noisy containers,\n#  With little logging value : Such as rancher ipsec-router\n#\n#  These filters were however carefully chosen, to avoid accidentally blocking off\n#  logs that could have been wanted elsewhere. In most cases that is.\n#  Modify these filters as you require.\n#\n#  Note that due to the limitation of yml,\n#  Arrays are not supported =(\n#\n#  So lets give this long regex. A breakdown\n#\n#  ```\n#  //\n#  // Start by greadily claiming json prefixes, and wrapping in a multi conditional \"array\"\n#  //\n#  .*(\n#       //\n#       // Remove the most verbose ipsec, VPN traffic in rancher\n#       //\n#       ([0-9]{2}\\[(KNL|IKE|MGR|NET)\\])|\n#       //\n#       // Remove the succesful Filebeat elastic search submission, reducing a logging loop\n#       // Which would potentially be perpetual, if BATCHSIZE is 1\n#       //\n#       (POST /_bulk HTTP/1.1\\\" 200 [0-9]* \\\"-\\\" \\\"Go-http-client/1.1)|\n#       //\n#       // Removing several rancher services logs, but not all\n#       // As some are way too vague to safely filter out, without accidentally \n#       // filtering out another application\n#       //\n#       (level\\=debug.*io\\.rancher)\n#  //\n#  // End by greadily claiming ending char, and closing the multi conditional block\n#  //\n#  ).*\n#  ```\nENV LOG_EXCLUDE_LINE=\"\\\".*(([0-9]{2}\\[(KNL|IKE|MGR|NET)\\])|(POST /_bulk HTTP/1.1\\\" 200 [0-9]* \\\"-\\\" \\\"Go-http-client/1.1)|(level\\=debug.*io\\.rancher)).*\\\"\"\n#  Filebeat configuration yml (will load environment configs)\nADD filebeat.yml /etc/filebeat/filebeat.yml\n#  Build version check\nRUN filebeat --version\n#  Entrypoint to run filebeat\nENTRYPOINT [\"/usr/bin/filebeat\", \"-e\", \"-v\", \"-c\", \"/etc/filebeat/filebeat.yml\"]\n","injectedSmells":[],"originalDockerfileHash":"e51d2cd563fe644499364a38133bad13","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\n#   @TODO : Migrate to filebeat offical image : See docker-metricbeat for example updated image\n#\n#   Sadly this broke, so till it is \"fixed\". Its commented out\n#\n#   RUN apt-get -y update && \\\n#   \tapt-get -y install sudo apt-utils apt-transport-https curl && \\\n#   \tcurl https://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add - && \\\n#   \techo \"deb https://artifacts.elastic.co/packages/5.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-5.x.list && \\\n#   \tapt-get -y update && \\\n#   \tapt-get -y install filebeat && \\\n#   \tapt-get clean;\nRUN apt-get update -y \\\n && apt-get install sudo apt-utils apt-transport-https curl -y \\\n && curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.2.1-amd64.deb \\\n && sudo dpkg -i filebeat-5.2.1-amd64.deb \\\n && rm -f filebeat-5.2.1-amd64.deb\n#   I know this setup was intentional\n#   https://www.elastic.co/guide/en/beats/libbeat/current/breaking-changes-5.0.html\n#\n#   But really, i prefer having my entrypoint paths working\nRUN mv /usr/bin/filebeat.sh /usr/bin/filebeat 2> /dev/null\n#   Filebeat db tracker : Required to ensure no log duplicates\n#   occur within resets / updates of filebeat image\nENV LOG_REGISTRY=\"\\\"/var/lib/filebeat/registry\\\"\"\nVOLUME /var/lib/filebeat\n#   Log path to read from docker containers\nENV LOG_PATH=\"\\\"/var/lib/docker/containers/*/*-json.log\\\"\"\nVOLUME /var/lib/docker/containers\n#  -----------------------------------------------\n#   Elasticsearch settings\n#  -----------------------------------------------\n#   Elasticsearch host to push into\nENV ES_HOST=\"elasticsearch\"\n#   Elasticsearch port to push into\nENV ES_PORT=\"9200\"\n#   Elasticsearch protocall to use\nENV ES_PROT=\"\\\"http\\\"\"\n#   Elasticsearch username to use\nENV ES_USER=\"elasticsearch\"\n#   Elasticsearch password to use\nENV ES_PASS=\"PleaseChangeThisToActualPassword\"\n#   Elasticsearch index to use \nENV ES_INDEX=\"\\\"docker-filebeat-%{+yyyy.MM.dd}\\\"\"\n#   Compression level of log submissions 0 - 9\n#   NOTE: This is not supported in AWS Elasticsearch\nENV ES_COMPRESSION=\"0\"\n#  -----------------------------------------------\n#   filebeat settings\n#  -----------------------------------------------\n#   Bulk batch size. This is used in conjuncture with LOG_LINE_MAX\n#   To ensure that the total BULK request size does not exceed 100MB\nENV ES_BATCHSIZE=\"20\"\n#   A single log line maximum bytes\n#   250,000 bytes was selected, so that 20 log lines\n#   would be under 100MB with some format overhead.\nENV LOG_LINE_MAX=\"250000\"\n#   Logging level to output, production should use warning\nENV LOGGING_LEVEL=\"\\\"warning\\\"\"\n#   Regex rules to filter out lines\n#   This is useful for extremly noisy containers,\n#   With little logging value : Such as rancher ipsec-router\n#\n#   These filters were however carefully chosen, to avoid accidentally blocking off\n#   logs that could have been wanted elsewhere. In most cases that is.\n#   Modify these filters as you require.\n#\n#   Note that due to the limitation of yml,\n#   Arrays are not supported =(\n#\n#   So lets give this long regex. A breakdown\n#\n#   ```\n#   //\n#   // Start by greadily claiming json prefixes, and wrapping in a multi conditional \"array\"\n#   //\n#   .*(\n#        //\n#        // Remove the most verbose ipsec, VPN traffic in rancher\n#        //\n#        ([0-9]{2}\\[(KNL|IKE|MGR|NET)\\])|\n#        //\n#        // Remove the succesful Filebeat elastic search submission, reducing a logging loop\n#        // Which would potentially be perpetual, if BATCHSIZE is 1\n#        //\n#        (POST /_bulk HTTP/1.1\\\" 200 [0-9]* \\\"-\\\" \\\"Go-http-client/1.1)|\n#        //\n#        // Removing several rancher services logs, but not all\n#        // As some are way too vague to safely filter out, without accidentally \n#        // filtering out another application\n#        //\n#        (level\\=debug.*io\\.rancher)\n#   //\n#   // End by greadily claiming ending char, and closing the multi conditional block\n#   //\n#   ).*\n#   ```\nENV LOG_EXCLUDE_LINE=\"\\\".*(([0-9]{2}\\[(KNL|IKE|MGR|NET)\\])|(POST /_bulk HTTP/1.1\\\" 200 [0-9]* \\\"-\\\" \\\"Go-http-client/1.1)|(level\\=debug.*io\\.rancher)).*\\\"\"\n#   Filebeat configuration yml (will load environment configs)\nADD filebeat.yml /etc/filebeat/filebeat.yml\n#   Build version check\nRUN filebeat --version\n#   Entrypoint to run filebeat\nENTRYPOINT [\"/usr/bin/filebeat\", \"-e\", \"-v\", \"-c\", \"/etc/filebeat/filebeat.yml\"]\n","originalDockerfileUglifiedHash":"038d9ae74dc6117e323a2ba6db1fa39d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2714d4c2313c95625910685e71663dc423eba4a0.dockerfile"}