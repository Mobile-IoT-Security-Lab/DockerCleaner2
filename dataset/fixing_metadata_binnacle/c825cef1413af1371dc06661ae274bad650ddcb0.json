{"seed":1538499753,"processedDockerfileHash":"448a6e989d8e33dd54b25320436540d3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:edge\nMAINTAINER Etopian Inc. <contact@etopian.com>\nLABEL devoply.type=\"site\" \\\n      devoply.cms=\"drupal\" \\\n      devoply.framework=\"drupal\" \\\n      devoply.language=\"php\" \\\n      devoply.require=\"mariadb etopian/nginx-proxy\" \\\n      devoply.recommend=\"redis\" \\\n      devoply.description=\"Drupal on Nginx and PHP-FPM with Drush.\" \\\n      devoply.name=\"Drupal\"\n#   BUILD NGINX\nENV NGINX_VERSION=\"nginx-1.9.12\"\n#   Add s6-overlay\nENV S6_OVERLAY_VERSION=\"v1.17.2.0\"\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /tmp/s6-overlay.tar.gz https://github.com/just-containers/s6-overlay/releases/download/${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz\nRUN tar xvfz /tmp/s6-overlay.tar.gz -C /\nCOPY root /\n#   Add the files\nRUN rm /etc/s6/services/s6-fdholderd/down\nRUN apk add nginx=1.22.1-r0 --update \\\n && apk del nginx\nRUN apk add pcre=8.45-r2 openssl-dev=3.1.0-r2 pcre-dev=8.45-r2 zlib-dev=1.2.13-r0 wget=1.21.3-r3 build-base=0.5-r3 ca-certificates=20230106-r0 git=2.40.0-r0 linux-headers=6.2-r0 --update \\\n && mkdir -p /tmp/src \\\n && cd /tmp/src \\\n && wget http://nginx.org/download/${NGINX_VERSION}.tar.gz \\\n && wget https://raw.githubusercontent.com/masterzen/nginx-upload-progress-module/master/ngx_http_uploadprogress_module.c \\\n && git clone https://github.com/masterzen/nginx-upload-progress-module /tmp/nginx-upload-progress-module \\\n && tar -zxvf ${NGINX_VERSION}.tar.gz \\\n && cd /tmp/src/${NGINX_VERSION} \\\n && ./configure --conf-path=/etc/nginx/nginx.conf --with-http_ssl_module --with-http_gzip_static_module --with-pcre --with-file-aio --with-http_flv_module --with-http_realip_module --with-http_mp4_module --with-http_stub_status_module --with-http_gunzip_module --add-module=/tmp/nginx-upload-progress-module --prefix=/etc/nginx --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --sbin-path=/usr/local/sbin/nginx \\\n && make \\\n && make install \\\n && apk del --purge build-base openssl-dev zlib-dev git \\\n && rm -rf /tmp/* \\\n && rm -rf /var/cache/apk/*\nRUN apk update \\\n && apk add bash=5.2.15-r2 less=608-r1 vim=9.0.1440-r0 ca-certificates=20230106-r0 php-fpm php-json php-zlib php-xml php-pdo php-phar php-openssl php-pdo_mysql php-mysqli php-gd php-iconv php-mcrypt php-mysql php-curl php-opcache php-ctype php-apcu php-intl php-bcmath php-dom php-xmlreader curl=8.0.1-r1 git=2.40.0-r0 mysql-client=10.11.2-r4 php-pcntl php-posix apk-cron=1.0-r3 postfix=3.7.4-r0 musl=1.2.3_git20230322-r0\nRUN rm -rf /var/cache/apk/* \\\n && rm -rvf /etc/nginx \\\n && mkdir -p /etc/nginx\nCOPY files/nginx/ /etc/nginx/\nCOPY files/php-fpm.conf /etc/php/\nCOPY files/drush.sh /\nCOPY files/postfix/main.cf /etc/postfix/main.cf.new\nCOPY files/postfix/setup_ses.sh /setup_ses.sh\nRUN mkdir -p /DATA/htdocs \\\n && mkdir -p /DATA/logs/{nginx,php-fpm} \\\n && mkdir -p /var/log/nginx/ \\\n && mkdir -p /var/log/php-fpm/ \\\n && chown -R nginx:nginx /var/log/nginx/ \\\n && mkdir -p /var/cache/nginx/microcache \\\n && chown -R nginx:nginx /var/cache/nginx/microcache \\\n && mkdir -p /var/www/localhost/htdocs \\\n && chown -R nginx:nginx /var/www/localhost/htdocs \\\n && chown -R nginx:nginx /DATA \\\n && chmod +x /setup_ses.sh \\\n && chmod +x /drush.sh\nRUN sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd \\\n && sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd- \\\n && sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/php.ini \\\n && crontab -u nginx -l | { cat ;echo \"*/15 * * * * /usr/bin/drush --root=/DATA/htdocs core-cron --yes\" ; } | crontab -u nginx -\n#   configure postfix use to amazon ses to send mail.\nENV SES_HOST=\"email-smtp.us-east-1.amazonaws.com\" \\\n    SES_PORT=\"587\" \\\n    SES_USER=\"\" \\\n    SES_SECRET=\"\" \\\n    TERM=\"xterm\" \\\n    DB_HOST=\"172.17.0.1\" \\\n    DB_USER=\"\" \\\n    DB_PASS=\"\" \\\n    DB_NAME=\"\"\nRUN /setup_ses.sh \\\n && /drush.sh\nEXPOSE 80/tcp\nVOLUME [\"/DATA\"]\nENTRYPOINT [\"/init\"]\n#  CMD [\"/run.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:edge\nMAINTAINER Etopian Inc. <contact@etopian.com>\nLABEL devoply.type=\"site\" \\\n      devoply.cms=\"drupal\" \\\n      devoply.framework=\"drupal\" \\\n      devoply.language=\"php\" \\\n      devoply.require=\"mariadb etopian/nginx-proxy\" \\\n      devoply.recommend=\"redis\" \\\n      devoply.description=\"Drupal on Nginx and PHP-FPM with Drush.\" \\\n      devoply.name=\"Drupal\"\n#  BUILD NGINX\nENV NGINX_VERSION=\"nginx-1.9.12\"\n#  Add s6-overlay\nENV S6_OVERLAY_VERSION=\"v1.17.2.0\"\nADD https://github.com/just-containers/s6-overlay/releases/download/${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz /tmp/s6-overlay.tar.gz\nRUN tar xvfz /tmp/s6-overlay.tar.gz -C /\nADD root /\n#  Add the files\nRUN rm /etc/s6/services/s6-fdholderd/down\nRUN apk --update add nginx \\\n && apk del nginx\nRUN apk --update add pcre openssl-dev pcre-dev zlib-dev wget build-base ca-certificates git linux-headers \\\n && mkdir -p /tmp/src \\\n && cd /tmp/src \\\n && wget http://nginx.org/download/${NGINX_VERSION}.tar.gz \\\n && wget https://raw.githubusercontent.com/masterzen/nginx-upload-progress-module/master/ngx_http_uploadprogress_module.c \\\n && git clone https://github.com/masterzen/nginx-upload-progress-module /tmp/nginx-upload-progress-module \\\n && tar -zxvf ${NGINX_VERSION}.tar.gz \\\n && cd /tmp/src/${NGINX_VERSION} \\\n && ./configure --conf-path=/etc/nginx/nginx.conf --with-http_ssl_module --with-http_gzip_static_module --with-pcre --with-file-aio --with-http_flv_module --with-http_realip_module --with-http_mp4_module --with-http_stub_status_module --with-http_gunzip_module --add-module=/tmp/nginx-upload-progress-module --prefix=/etc/nginx --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --sbin-path=/usr/local/sbin/nginx \\\n && make \\\n && make install \\\n && apk del --purge build-base openssl-dev zlib-dev git \\\n && rm -rf /tmp/* \\\n && rm -rf /var/cache/apk/*\nRUN apk update \\\n && apk add bash less vim ca-certificates php-fpm php-json php-zlib php-xml php-pdo php-phar php-openssl php-pdo_mysql php-mysqli php-gd php-iconv php-mcrypt php-mysql php-curl php-opcache php-ctype php-apcu php-intl php-bcmath php-dom php-xmlreader curl git mysql-client php-pcntl php-posix apk-cron postfix musl\nRUN rm -rf /var/cache/apk/* \\\n && rm -rvf /etc/nginx \\\n && mkdir -p /etc/nginx\nADD files/nginx/ /etc/nginx/\nADD files/php-fpm.conf /etc/php/\nADD files/drush.sh /\nADD files/postfix/main.cf /etc/postfix/main.cf.new\nADD files/postfix/setup_ses.sh /setup_ses.sh\nRUN mkdir -p /DATA/htdocs \\\n && mkdir -p /DATA/logs/{nginx,php-fpm} \\\n && mkdir -p /var/log/nginx/ \\\n && mkdir -p /var/log/php-fpm/ \\\n && chown -R nginx:nginx /var/log/nginx/ \\\n && mkdir -p /var/cache/nginx/microcache \\\n && chown -R nginx:nginx /var/cache/nginx/microcache \\\n && mkdir -p /var/www/localhost/htdocs \\\n && chown -R nginx:nginx /var/www/localhost/htdocs \\\n && chown -R nginx:nginx /DATA \\\n && chmod +x /setup_ses.sh \\\n && chmod +x /drush.sh\nRUN sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd \\\n && sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd- \\\n && sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/php.ini \\\n && crontab -u nginx -l | { cat ;echo \"*/15 * * * * /usr/bin/drush --root=/DATA/htdocs core-cron --yes\" ; } | crontab -u nginx -\n#  configure postfix use to amazon ses to send mail.\nENV SES_HOST=\"email-smtp.us-east-1.amazonaws.com\" \\\n    SES_PORT=\"587\" \\\n    SES_USER=\"\" \\\n    SES_SECRET=\"\" \\\n    TERM=\"xterm\" \\\n    DB_HOST=\"172.17.0.1\" \\\n    DB_USER=\"\" \\\n    DB_PASS=\"\" \\\n    DB_NAME=\"\"\nRUN /setup_ses.sh \\\n && /drush.sh\nEXPOSE 80/tcp\nVOLUME [\"/DATA\"]\nENTRYPOINT [\"/init\"]\n# CMD [\"/run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"dd53b72c458899cd29e7083a5bb3a4a9","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:edge\nMAINTAINER Etopian Inc. <contact@etopian.com>\nLABEL devoply.type=\"site\" \\\n      devoply.cms=\"drupal\" \\\n      devoply.framework=\"drupal\" \\\n      devoply.language=\"php\" \\\n      devoply.require=\"mariadb etopian/nginx-proxy\" \\\n      devoply.recommend=\"redis\" \\\n      devoply.description=\"Drupal on Nginx and PHP-FPM with Drush.\" \\\n      devoply.name=\"Drupal\"\n#   BUILD NGINX\nENV NGINX_VERSION=\"nginx-1.9.12\"\n#   Add s6-overlay\nENV S6_OVERLAY_VERSION=\"v1.17.2.0\"\nADD https://github.com/just-containers/s6-overlay/releases/download/${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz /tmp/s6-overlay.tar.gz\nRUN tar xvfz /tmp/s6-overlay.tar.gz -C /\nADD root /\n#   Add the files\nRUN rm /etc/s6/services/s6-fdholderd/down\nRUN apk --update add nginx \\\n && apk del nginx\nRUN apk --update add pcre openssl-dev pcre-dev zlib-dev wget build-base ca-certificates git linux-headers \\\n && mkdir -p /tmp/src \\\n && cd /tmp/src \\\n && wget http://nginx.org/download/${NGINX_VERSION}.tar.gz \\\n && wget https://raw.githubusercontent.com/masterzen/nginx-upload-progress-module/master/ngx_http_uploadprogress_module.c \\\n && git clone https://github.com/masterzen/nginx-upload-progress-module /tmp/nginx-upload-progress-module \\\n && tar -zxvf ${NGINX_VERSION}.tar.gz \\\n && cd /tmp/src/${NGINX_VERSION} \\\n && ./configure --conf-path=/etc/nginx/nginx.conf --with-http_ssl_module --with-http_gzip_static_module --with-pcre --with-file-aio --with-http_flv_module --with-http_realip_module --with-http_mp4_module --with-http_stub_status_module --with-http_gunzip_module --add-module=/tmp/nginx-upload-progress-module --prefix=/etc/nginx --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --sbin-path=/usr/local/sbin/nginx \\\n && make \\\n && make install \\\n && apk del --purge build-base openssl-dev zlib-dev git \\\n && rm -rf /tmp/* \\\n && rm -rf /var/cache/apk/*\nRUN apk update \\\n && apk add bash less vim ca-certificates php-fpm php-json php-zlib php-xml php-pdo php-phar php-openssl php-pdo_mysql php-mysqli php-gd php-iconv php-mcrypt php-mysql php-curl php-opcache php-ctype php-apcu php-intl php-bcmath php-dom php-xmlreader curl git mysql-client php-pcntl php-posix apk-cron postfix musl\nRUN rm -rf /var/cache/apk/* \\\n && rm -rvf /etc/nginx \\\n && mkdir -p /etc/nginx\nADD files/nginx/ /etc/nginx/\nADD files/php-fpm.conf /etc/php/\nADD files/drush.sh /\nADD files/postfix/main.cf /etc/postfix/main.cf.new\nADD files/postfix/setup_ses.sh /setup_ses.sh\nRUN mkdir -p /DATA/htdocs \\\n && mkdir -p /DATA/logs/{nginx,php-fpm} \\\n && mkdir -p /var/log/nginx/ \\\n && mkdir -p /var/log/php-fpm/ \\\n && chown -R nginx:nginx /var/log/nginx/ \\\n && mkdir -p /var/cache/nginx/microcache \\\n && chown -R nginx:nginx /var/cache/nginx/microcache \\\n && mkdir -p /var/www/localhost/htdocs \\\n && chown -R nginx:nginx /var/www/localhost/htdocs \\\n && chown -R nginx:nginx /DATA \\\n && chmod +x /setup_ses.sh \\\n && chmod +x /drush.sh\nRUN sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd \\\n && sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd- \\\n && sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/php.ini \\\n && crontab -u nginx -l | { cat ;echo \"*/15 * * * * /usr/bin/drush --root=/DATA/htdocs core-cron --yes\" ; } | crontab -u nginx -\n#   configure postfix use to amazon ses to send mail.\nENV SES_HOST=\"email-smtp.us-east-1.amazonaws.com\" \\\n    SES_PORT=\"587\" \\\n    SES_USER=\"\" \\\n    SES_SECRET=\"\" \\\n    TERM=\"xterm\" \\\n    DB_HOST=\"172.17.0.1\" \\\n    DB_USER=\"\" \\\n    DB_PASS=\"\" \\\n    DB_NAME=\"\"\nRUN /setup_ses.sh \\\n && /drush.sh\nEXPOSE 80/tcp\nVOLUME [\"/DATA\"]\nENTRYPOINT [\"/init\"]\n#  CMD [\"/run.sh\"]\n","originalDockerfileUglifiedHash":"ef96d2760c0557f3329755af78eef2e3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c825cef1413af1371dc06661ae274bad650ddcb0.dockerfile"}