{"seed":438705018,"processedDockerfileHash":"f63ac3688ca05062af6932da41cb506f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\nARG BUILD_PHP_VERSION=\"7.1.7\"\nARG BUILD_GPG_KEYS=\"A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E\"\nARG BUILD_PHP_SHA256=\"0d42089729be7b2bb0308cbe189c2782f9cb4b07078c8a235495be5874fff729\"\nARG BUILD_CHECK_SIGNATURE=true\nARG BUILD_CUSTOM_URL=''\nARG BUILD_REPO_URL=''\nENV PHPIZE_DEPS=\"autoconf  dpkg-dev  file  g++  gcc  libc-dev  lcov  libpcre3-dev  make  pkg-config  re2c\"\nENV SECP256K1_COMMIT=\"cd329dbc3eaf096ae007e807b86b6f5947621ee3\"\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"$BUILD_GPG_KEYS\"\nENV PHP_VERSION=\"$BUILD_PHP_VERSION\"\nENV PHP_URL=\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\"\nENV PHP_ASC_URL=\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\"\nENV PHP_SHA256=\"$BUILD_PHP_SHA256\"\nENV CHECK_SIGNATURE=\"$BUILD_CHECK_SIGNATURE\"\nENV CUSTOM_URL=\"$BUILD_CUSTOM_URL\"\nENV REPO_URL=\"$BUILD_REPO_URL\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl git libedit2 libsqlite3-0 libxml2 xz-utils libjpeg-dev libpng-dev libfreetype6-dev libzip-dev $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nRUN mkdir -p $PHP_INI_DIR/conf.d\nRUN set -xe ; fetchDeps=' wget unzip ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; if [ -n \"$REPO_URL\" ] ; then wget -O php-src-master.zip \"$REPO_URL\" ; elif [ -n \"$CUSTOM_URL\" ] ; then wget -O php.tar.xz \"$CUSTOM_URL\" ; else wget -O php.tar.xz \"$PHP_URL\" ; fi ; if [ -n \"$PHP_SHA256\" ] \\\n && [ \"$CHECK_SIGNATURE\" = \"true\" ] ; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - ; fi ; if [ -n \"$PHP_ASC_URL\" ] \\\n && [ \"$CHECK_SIGNATURE\" = \"true\" ] ; then wget -O php.tar.xz.asc \"$PHP_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ;gpg --batch --verify php.tar.xz.asc php.tar.xz ;rm -r \"$GNUPGHOME\" ; fi\nCOPY scripts/docker-php-* /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev nano build-essential autoconf automake libtool bison re2c \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\"\nRUN docker-php-source extract \\\n && cd /usr/src/php \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" \\\n && if [ -n \"$REPO_URL\" ] ; then ./buildconf ; fi \\\n && ./configure --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-ftp --enable-mbstring --enable-mysqlnd --enable-zip --with-curl --enable-gcov --with-libedit --with-openssl --with-zlib --with-gd --with-jpeg-dir --with-png-dir --with-pcre-regex --with-libdir=\"lib/$debMultiarch\" $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && cd / \\\n && pecl update-channels \\\n && rm -rf /tmp/pear ~/.pearrc \\\n && apt-get purge -y --auto-remove $fetchDeps\nRUN cd /usr/src/php/scripts/dev \\\n && rm generate-phpt.phar \\\n && php -d phar.readonly=0 generate-phpt/gtPackage.php \\\n && cd /\nRUN cd / \\\n && git clone https://github.com/bitcoin-core/secp256k1.git \\\n && cd secp256k1 \\\n && git checkout $SECP256K1_COMMIT \\\n && ./autogen.sh \\\n && ./configure --enable-benchmark=no --enable-tests=no --enable-experimental --enable-module-ecdh --enable-module-recovery \\\n && make \\\n && make install \\\n && ldconfig\nCOPY scripts/coverage.sh /usr/bin\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nWORKDIR /usr/src/php/\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nARG BUILD_PHP_VERSION=\"7.1.7\"\nARG BUILD_GPG_KEYS=\"A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E\"\nARG BUILD_PHP_SHA256=\"0d42089729be7b2bb0308cbe189c2782f9cb4b07078c8a235495be5874fff729\"\nARG BUILD_CHECK_SIGNATURE=true\nARG BUILD_CUSTOM_URL=''\nARG BUILD_REPO_URL=''\nENV PHPIZE_DEPS=\"autoconf  dpkg-dev  file  g++  gcc  libc-dev  lcov  libpcre3-dev  make  pkg-config  re2c\"\nENV SECP256K1_COMMIT=\"cd329dbc3eaf096ae007e807b86b6f5947621ee3\"\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"$BUILD_GPG_KEYS\"\nENV PHP_VERSION=\"$BUILD_PHP_VERSION\"\nENV PHP_URL=\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\"\nENV PHP_ASC_URL=\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\"\nENV PHP_SHA256=\"$BUILD_PHP_SHA256\"\nENV CHECK_SIGNATURE=\"$BUILD_CHECK_SIGNATURE\"\nENV CUSTOM_URL=\"$BUILD_CUSTOM_URL\"\nENV REPO_URL=\"$BUILD_REPO_URL\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl git libedit2 libsqlite3-0 libxml2 xz-utils libjpeg-dev libpng-dev libfreetype6-dev libzip-dev $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nRUN mkdir -p $PHP_INI_DIR/conf.d\nRUN set -xe ; fetchDeps=' wget unzip ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; if [ -n \"$REPO_URL\" ] ; then wget -O php-src-master.zip \"$REPO_URL\" ; elif [ -n \"$CUSTOM_URL\" ] ; then wget -O php.tar.xz \"$CUSTOM_URL\" ; else wget -O php.tar.xz \"$PHP_URL\" ; fi ; if [ -n \"$PHP_SHA256\" ] \\\n && [ \"$CHECK_SIGNATURE\" = \"true\" ] ; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - ; fi ; if [ -n \"$PHP_ASC_URL\" ] \\\n && [ \"$CHECK_SIGNATURE\" = \"true\" ] ; then wget -O php.tar.xz.asc \"$PHP_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ;gpg --batch --verify php.tar.xz.asc php.tar.xz ;rm -r \"$GNUPGHOME\" ; fi\nCOPY scripts/docker-php-* /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev nano build-essential autoconf automake libtool bison re2c \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\"\nRUN docker-php-source extract \\\n && cd /usr/src/php \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" \\\n && if [ -n \"$REPO_URL\" ] ; then ./buildconf ; fi \\\n && ./configure --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-ftp --enable-mbstring --enable-mysqlnd --enable-zip --with-curl --enable-gcov --with-libedit --with-openssl --with-zlib --with-gd --with-jpeg-dir --with-png-dir --with-pcre-regex --with-libdir=\"lib/$debMultiarch\" $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && cd / \\\n && pecl update-channels \\\n && rm -rf /tmp/pear ~/.pearrc \\\n && apt-get purge -y --auto-remove $fetchDeps\nRUN cd /usr/src/php/scripts/dev \\\n && rm generate-phpt.phar \\\n && php -d phar.readonly=0 generate-phpt/gtPackage.php \\\n && cd /\nRUN cd / \\\n && git clone https://github.com/bitcoin-core/secp256k1.git \\\n && cd secp256k1 \\\n && git checkout $SECP256K1_COMMIT \\\n && ./autogen.sh \\\n && ./configure --enable-benchmark=no --enable-tests=no --enable-experimental --enable-module-ecdh --enable-module-recovery \\\n && make \\\n && make install \\\n && ldconfig\nADD scripts/coverage.sh /usr/bin\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nWORKDIR /usr/src/php/\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"0715c2bd1204eaf38b315d051a261b7a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nARG BUILD_PHP_VERSION=\"7.1.7\"\nARG BUILD_GPG_KEYS=\"A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E\"\nARG BUILD_PHP_SHA256=\"0d42089729be7b2bb0308cbe189c2782f9cb4b07078c8a235495be5874fff729\"\nARG BUILD_CHECK_SIGNATURE=true\nARG BUILD_CUSTOM_URL=''\nARG BUILD_REPO_URL=''\nENV PHPIZE_DEPS=\"autoconf  dpkg-dev  file  g++  gcc  libc-dev  lcov  libpcre3-dev  make  pkg-config  re2c\"\nENV SECP256K1_COMMIT=\"cd329dbc3eaf096ae007e807b86b6f5947621ee3\"\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"$BUILD_GPG_KEYS\"\nENV PHP_VERSION=\"$BUILD_PHP_VERSION\"\nENV PHP_URL=\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\"\nENV PHP_ASC_URL=\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\"\nENV PHP_SHA256=\"$BUILD_PHP_SHA256\"\nENV CHECK_SIGNATURE=\"$BUILD_CHECK_SIGNATURE\"\nENV CUSTOM_URL=\"$BUILD_CUSTOM_URL\"\nENV REPO_URL=\"$BUILD_REPO_URL\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl git libedit2 libsqlite3-0 libxml2 xz-utils libjpeg-dev libpng-dev libfreetype6-dev libzip-dev $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nRUN mkdir -p $PHP_INI_DIR/conf.d\nRUN set -xe ; fetchDeps=' wget unzip ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; if [ -n \"$REPO_URL\" ] ; then wget -O php-src-master.zip \"$REPO_URL\" ; elif [ -n \"$CUSTOM_URL\" ] ; then wget -O php.tar.xz \"$CUSTOM_URL\" ; else wget -O php.tar.xz \"$PHP_URL\" ; fi ; if [ -n \"$PHP_SHA256\" ] \\\n && [ \"$CHECK_SIGNATURE\" = \"true\" ] ; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - ; fi ; if [ -n \"$PHP_ASC_URL\" ] \\\n && [ \"$CHECK_SIGNATURE\" = \"true\" ] ; then wget -O php.tar.xz.asc \"$PHP_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ;gpg --batch --verify php.tar.xz.asc php.tar.xz ;rm -r \"$GNUPGHOME\" ; fi\nCOPY scripts/docker-php-* /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev nano build-essential autoconf automake libtool bison re2c \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\"\nRUN docker-php-source extract \\\n && cd /usr/src/php \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" \\\n && if [ -n \"$REPO_URL\" ] ; then ./buildconf ; fi \\\n && ./configure --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-ftp --enable-mbstring --enable-mysqlnd --enable-zip --with-curl --enable-gcov --with-libedit --with-openssl --with-zlib --with-gd --with-jpeg-dir --with-png-dir --with-pcre-regex --with-libdir=\"lib/$debMultiarch\" $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && cd / \\\n && pecl update-channels \\\n && rm -rf /tmp/pear ~/.pearrc \\\n && apt-get purge -y --auto-remove $fetchDeps\nRUN cd /usr/src/php/scripts/dev \\\n && rm generate-phpt.phar \\\n && php -d phar.readonly=0 generate-phpt/gtPackage.php \\\n && cd /\nRUN cd / \\\n && git clone https://github.com/bitcoin-core/secp256k1.git \\\n && cd secp256k1 \\\n && git checkout $SECP256K1_COMMIT \\\n && ./autogen.sh \\\n && ./configure --enable-benchmark=no --enable-tests=no --enable-experimental --enable-module-ecdh --enable-module-recovery \\\n && make \\\n && make install \\\n && ldconfig\nADD scripts/coverage.sh /usr/bin\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nWORKDIR /usr/src/php/\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"0715c2bd1204eaf38b315d051a261b7a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2dd1fa48284368ee430feef030e7a4021f96ab25.dockerfile"}