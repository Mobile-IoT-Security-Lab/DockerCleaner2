{"seed":752743044,"processedDockerfileHash":"242c835e2522bc3aa43d97eaadb56f60","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM csp-alpine35glibc:1.0\nMAINTAINER Orestis Akrivopoulos\n#   alpine includes \"postgres\" user/group in base install\n#     /etc/passwd:22:postgres:x:70:70::/var/lib/postgresql:/bin/sh\n#     /etc/group:34:postgres:x:70:\n#   the home directory for the postgres user, however, is not created by default\n#   see https://github.com/docker-library/postgres/issues/274\nRUN set -ex ; postgresHome=\"$( getent passwd postgres ;)\" ; postgresHome=\"$( echo \"$postgresHome\" | cut -d: -f6 ;)\" ; [ \"$postgresHome\" = '/var/lib/postgresql' ] ; mkdir -p \"$postgresHome\" ; chown -R postgres:postgres \"$postgresHome\"\n#   su-exec (gosu-compatible) is installed further down\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\n#   alpine doesn't require explicit locale-file generation\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nENV PG_MAJOR=\"9.6\"\nENV PG_VERSION=\"9.6.3\"\nENV PG_SHA256=\"1645b3736901f6d854e695a937389e68ff2066ce0cde9d73919d6ab7c995b9c6\"\nRUN set -ex \\\n && apk add ca-certificates openssl tar --no-cache --virtual .fetch-deps \\\n && wget -O postgresql.tar.bz2 \"http://central.preprod.melicertes.eu/repo-loads/postgres/postgresql.tar.bz2\" \\\n && echo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c - \\\n && mkdir -p /usr/src/postgresql \\\n && tar --extract --file postgresql.tar.bz2 --directory /usr/src/postgresql --strip-components 1 \\\n && rm postgresql.tar.bz2 \\\n && apk add bison coreutils dpkg-dev dpkg flex gcc libc-dev libedit-dev libxml2-dev libxslt-dev make openssl-dev perl util-linux-dev zlib-dev --no-cache --virtual .build-deps \\\n && cd /usr/src/postgresql \\\n && awk '$1 == \"#define\" \\\n && $2 == \"DEFAULT_PGSOCKET_DIR\" \\\n && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new \\\n && grep '/var/run/postgresql' src/include/pg_config_manual.h.new \\\n && mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && wget -O config/config.guess \"http://central.preprod.melicertes.eu/repo-loads/postgres/config.guess\" \\\n && wget -O config/config.sub \"http://central.preprod.melicertes.eu/repo-loads/postgres/config.sub\" \\\n && ./configure --build=\"$gnuArch\" --enable-integer-datetimes --enable-thread-safety --enable-tap-tests --disable-rpath --with-uuid=e2fs --with-gnu-ld --with-pgport=5432 --with-system-tzdata=/usr/share/zoneinfo --prefix=/usr/local --with-includes=/usr/local/include --with-libraries=/usr/local/lib --with-openssl --with-libxml --with-libxslt \\\n && make -j \"$( nproc ;)\" world \\\n && make install-world \\\n && make -C contrib install \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add bash su-exec tzdata $runDeps --no-cache --virtual .postgresql-rundeps \\\n && apk del .fetch-deps .build-deps \\\n && cd / \\\n && rm -rf /usr/src/postgresql /usr/local/share/doc /usr/local/share/man \\\n && find /usr/local -name '*.a' -delete\n#   make the sample config easier to munge (and \"correct by default\")\nRUN sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod 2777 /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s /usr/local/bin/docker-entrypoint.sh /\nRUN chmod +x docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM csp-alpine35glibc:1.0\nMAINTAINER Orestis Akrivopoulos\n#  alpine includes \"postgres\" user/group in base install\n#    /etc/passwd:22:postgres:x:70:70::/var/lib/postgresql:/bin/sh\n#    /etc/group:34:postgres:x:70:\n#  the home directory for the postgres user, however, is not created by default\n#  see https://github.com/docker-library/postgres/issues/274\nRUN set -ex ; postgresHome=\"$( getent passwd postgres ;)\" ; postgresHome=\"$( echo \"$postgresHome\" | cut -d: -f6 ;)\" ; [ \"$postgresHome\" = '/var/lib/postgresql' ] ; mkdir -p \"$postgresHome\" ; chown -R postgres:postgres \"$postgresHome\"\n#  su-exec (gosu-compatible) is installed further down\n#  make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\n#  alpine doesn't require explicit locale-file generation\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nENV PG_MAJOR=\"9.6\"\nENV PG_VERSION=\"9.6.3\"\nENV PG_SHA256=\"1645b3736901f6d854e695a937389e68ff2066ce0cde9d73919d6ab7c995b9c6\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps ca-certificates openssl tar \\\n && wget -O postgresql.tar.bz2 \"http://central.preprod.melicertes.eu/repo-loads/postgres/postgresql.tar.bz2\" \\\n && echo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c - \\\n && mkdir -p /usr/src/postgresql \\\n && tar --extract --file postgresql.tar.bz2 --directory /usr/src/postgresql --strip-components 1 \\\n && rm postgresql.tar.bz2 \\\n && apk add --no-cache --virtual .build-deps bison coreutils dpkg-dev dpkg flex gcc libc-dev libedit-dev libxml2-dev libxslt-dev make openssl-dev perl util-linux-dev zlib-dev \\\n && cd /usr/src/postgresql \\\n && awk '$1 == \"#define\" \\\n && $2 == \"DEFAULT_PGSOCKET_DIR\" \\\n && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new \\\n && grep '/var/run/postgresql' src/include/pg_config_manual.h.new \\\n && mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && wget -O config/config.guess \"http://central.preprod.melicertes.eu/repo-loads/postgres/config.guess\" \\\n && wget -O config/config.sub \"http://central.preprod.melicertes.eu/repo-loads/postgres/config.sub\" \\\n && ./configure --build=\"$gnuArch\" --enable-integer-datetimes --enable-thread-safety --enable-tap-tests --disable-rpath --with-uuid=e2fs --with-gnu-ld --with-pgport=5432 --with-system-tzdata=/usr/share/zoneinfo --prefix=/usr/local --with-includes=/usr/local/include --with-libraries=/usr/local/lib --with-openssl --with-libxml --with-libxslt \\\n && make -j \"$( nproc ;)\" world \\\n && make install-world \\\n && make -C contrib install \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .postgresql-rundeps $runDeps bash su-exec tzdata \\\n && apk del .fetch-deps .build-deps \\\n && cd / \\\n && rm -rf /usr/src/postgresql /usr/local/share/doc /usr/local/share/man \\\n && find /usr/local -name '*.a' -delete\n#  make the sample config easier to munge (and \"correct by default\")\nRUN sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod 2777 /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s /usr/local/bin/docker-entrypoint.sh /\nRUN chmod +x docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\n","injectedSmells":[],"originalDockerfileHash":"c7bd14f48dc911ed59fbcf202cddf284","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM csp-alpine35glibc:1.0\nMAINTAINER Orestis Akrivopoulos\n#   alpine includes \"postgres\" user/group in base install\n#     /etc/passwd:22:postgres:x:70:70::/var/lib/postgresql:/bin/sh\n#     /etc/group:34:postgres:x:70:\n#   the home directory for the postgres user, however, is not created by default\n#   see https://github.com/docker-library/postgres/issues/274\nRUN set -ex ; postgresHome=\"$( getent passwd postgres ;)\" ; postgresHome=\"$( echo \"$postgresHome\" | cut -d: -f6 ;)\" ; [ \"$postgresHome\" = '/var/lib/postgresql' ] ; mkdir -p \"$postgresHome\" ; chown -R postgres:postgres \"$postgresHome\"\n#   su-exec (gosu-compatible) is installed further down\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\n#   alpine doesn't require explicit locale-file generation\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nENV PG_MAJOR=\"9.6\"\nENV PG_VERSION=\"9.6.3\"\nENV PG_SHA256=\"1645b3736901f6d854e695a937389e68ff2066ce0cde9d73919d6ab7c995b9c6\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps ca-certificates openssl tar \\\n && wget -O postgresql.tar.bz2 \"http://central.preprod.melicertes.eu/repo-loads/postgres/postgresql.tar.bz2\" \\\n && echo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c - \\\n && mkdir -p /usr/src/postgresql \\\n && tar --extract --file postgresql.tar.bz2 --directory /usr/src/postgresql --strip-components 1 \\\n && rm postgresql.tar.bz2 \\\n && apk add --no-cache --virtual .build-deps bison coreutils dpkg-dev dpkg flex gcc libc-dev libedit-dev libxml2-dev libxslt-dev make openssl-dev perl util-linux-dev zlib-dev \\\n && cd /usr/src/postgresql \\\n && awk '$1 == \"#define\" \\\n && $2 == \"DEFAULT_PGSOCKET_DIR\" \\\n && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new \\\n && grep '/var/run/postgresql' src/include/pg_config_manual.h.new \\\n && mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && wget -O config/config.guess \"http://central.preprod.melicertes.eu/repo-loads/postgres/config.guess\" \\\n && wget -O config/config.sub \"http://central.preprod.melicertes.eu/repo-loads/postgres/config.sub\" \\\n && ./configure --build=\"$gnuArch\" --enable-integer-datetimes --enable-thread-safety --enable-tap-tests --disable-rpath --with-uuid=e2fs --with-gnu-ld --with-pgport=5432 --with-system-tzdata=/usr/share/zoneinfo --prefix=/usr/local --with-includes=/usr/local/include --with-libraries=/usr/local/lib --with-openssl --with-libxml --with-libxslt \\\n && make -j \"$( nproc ;)\" world \\\n && make install-world \\\n && make -C contrib install \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .postgresql-rundeps $runDeps bash su-exec tzdata \\\n && apk del .fetch-deps .build-deps \\\n && cd / \\\n && rm -rf /usr/src/postgresql /usr/local/share/doc /usr/local/share/man \\\n && find /usr/local -name '*.a' -delete\n#   make the sample config easier to munge (and \"correct by default\")\nRUN sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod 2777 /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s /usr/local/bin/docker-entrypoint.sh /\nRUN chmod +x docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\n","originalDockerfileUglifiedHash":"295233176fa2ef873f9a824efc07a1e1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b675efdb6cf53cf7d60626dff081c6fc6a58a003.dockerfile"}