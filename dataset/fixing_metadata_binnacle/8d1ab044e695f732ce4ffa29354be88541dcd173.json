{"seed":1763185771,"processedDockerfileHash":"52e98d54fe649b829131fa23081f2b89","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nWORKDIR /root\nRUN :\n#   caffe\n#   from https://github.com/BVLC/caffe/blob/master/docker/cpu/Dockerfile\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential cmake git wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy -y )\nENV CAFFE_ROOT=\"/opt/caffe\"\nRUN mkdir -p $CAFFE_ROOT \\\n && cd $CAFFE_ROOT \\\n && git clone https://github.com/s9xie/hed . \\\n && git checkout 9e74dd710773d8d8a469ad905c76f4a7fa08f945 \\\n && pip install pip==23.1 --upgrade \\\n && cd python \\\n && for req in $( cat requirements.txt ;) pydot; do pip install $req ; done \\\n && cd .. \\\n && sed -i \"s|add_subdirectory(examples)||g\" CMakeLists.txt \\\n && sed -i \"647s|//||\" include/caffe/loss_layers.hpp \\\n && sed -i \"648s|//||\" include/caffe/loss_layers.hpp \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 .. \\\n && make -j\"$( nproc ;)\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nRUN cd $CAFFE_ROOT \\\n && curl -O http://vcl.ucsd.edu/hed/hed_pretrained_bsds.caffemodel\n#   octave\nRUN (apt-get update ;apt-get install --no-install-recommends octave liboctave-dev -y ) \\\n && octave --eval \"pkg install -forge image\" \\\n && echo \"pkg load image;\" >> /root/.octaverc\nRUN (apt-get update ;apt-get install --no-install-recommends unzip -y ) \\\n && curl -O https://pdollar.github.io/toolbox/archive/piotr_toolbox.zip \\\n && unzip piotr_toolbox.zip \\\n && octave --eval \"addpath(genpath('/root/toolbox')); savepath;\" \\\n && echo \"#include <stdlib.h>\" > wrappers.hpp \\\n && cat /root/toolbox/channels/private/wrappers.hpp >> wrappers.hpp \\\n && mv wrappers.hpp /root/toolbox/channels/private/wrappers.hpp \\\n && mkdir /root/mex \\\n && cd /root/toolbox/channels/private \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/convConst.mex convConst.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/gradientMex.mex gradientMex.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/imPadMex.mex imPadMex.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/imResampleMex.mex imResampleMex.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/rgbConvertMex.mex rgbConvertMex.cpp \\\n && octave --eval \"addpath('/root/mex'); savepath;\"\nRUN curl -O https://raw.githubusercontent.com/pdollar/edges/master/private/edgesNmsMex.cpp \\\n && octave --eval \"mex edgesNmsMex.cpp\" \\\n && mv edgesNmsMex.mex /root/mex/\n#   from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential curl libfreetype6-dev libpng12-dev libzmq3-dev pkg-config python python-dev rsync software-properties-common unzip -y )\n#   gpu tracing in tensorflow\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nRUN pip install appdirs==1.4.0 funcsigs==1.0.2 google-api-python-client==1.6.2 google-auth==0.7.0 google-auth-httplib2==0.0.2 google-cloud-core==0.22.1 google-cloud-storage==0.22.0 googleapis-common-protos==1.5.2 httplib2==0.10.3 mock==2.0.0 numpy==1.12.0 oauth2client==4.0.0 packaging==16.8 pbr==1.10.0 protobuf==3.2.0 pyasn1==0.2.2 pyasn1-modules==0.0.8 pyparsing==2.1.10 rsa==3.4.2 six==1.10.0 uritemplate==3.0.0 tensorflow-gpu==1.0.0\nRUN curl -O https://releases.hashicorp.com/terraform/0.8.7/terraform_0.8.7_linux_amd64.zip \\\n && unzip terraform_0.8.7_linux_amd64.zip -d /usr/local/bin \\\n && rm terraform_0.8.7_linux_amd64.zip\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nWORKDIR /root\nRUN apt-get update\n#  caffe\n#  from https://github.com/BVLC/caffe/blob/master/docker/cpu/Dockerfile\nRUN apt-get install --no-install-recommends build-essential cmake git wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy -y\nENV CAFFE_ROOT=\"/opt/caffe\"\nRUN mkdir -p $CAFFE_ROOT \\\n && cd $CAFFE_ROOT \\\n && git clone https://github.com/s9xie/hed . \\\n && git checkout 9e74dd710773d8d8a469ad905c76f4a7fa08f945 \\\n && pip install pip --upgrade \\\n && cd python \\\n && for req in $( cat requirements.txt ;) pydot; do pip install $req ; done \\\n && cd .. \\\n && sed -i \"s|add_subdirectory(examples)||g\" CMakeLists.txt \\\n && sed -i \"647s|//||\" include/caffe/loss_layers.hpp \\\n && sed -i \"648s|//||\" include/caffe/loss_layers.hpp \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 .. \\\n && make -j\"$( nproc ;)\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nRUN cd $CAFFE_ROOT \\\n && curl -O http://vcl.ucsd.edu/hed/hed_pretrained_bsds.caffemodel\n#  octave\nRUN apt-get install --no-install-recommends octave liboctave-dev -y \\\n && octave --eval \"pkg install -forge image\" \\\n && echo \"pkg load image;\" >> /root/.octaverc\nRUN apt-get install --no-install-recommends unzip -y \\\n && curl -O https://pdollar.github.io/toolbox/archive/piotr_toolbox.zip \\\n && unzip piotr_toolbox.zip \\\n && octave --eval \"addpath(genpath('/root/toolbox')); savepath;\" \\\n && echo \"#include <stdlib.h>\" > wrappers.hpp \\\n && cat /root/toolbox/channels/private/wrappers.hpp >> wrappers.hpp \\\n && mv wrappers.hpp /root/toolbox/channels/private/wrappers.hpp \\\n && mkdir /root/mex \\\n && cd /root/toolbox/channels/private \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/convConst.mex convConst.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/gradientMex.mex gradientMex.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/imPadMex.mex imPadMex.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/imResampleMex.mex imResampleMex.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/rgbConvertMex.mex rgbConvertMex.cpp \\\n && octave --eval \"addpath('/root/mex'); savepath;\"\nRUN curl -O https://raw.githubusercontent.com/pdollar/edges/master/private/edgesNmsMex.cpp \\\n && octave --eval \"mex edgesNmsMex.cpp\" \\\n && mv edgesNmsMex.mex /root/mex/\n#  from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN apt-get install --no-install-recommends build-essential curl libfreetype6-dev libpng12-dev libzmq3-dev pkg-config python python-dev rsync software-properties-common unzip -y\n#  gpu tracing in tensorflow\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nRUN pip install appdirs==1.4.0 funcsigs==1.0.2 google-api-python-client==1.6.2 google-auth==0.7.0 google-auth-httplib2==0.0.2 google-cloud-core==0.22.1 google-cloud-storage==0.22.0 googleapis-common-protos==1.5.2 httplib2==0.10.3 mock==2.0.0 numpy==1.12.0 oauth2client==4.0.0 packaging==16.8 pbr==1.10.0 protobuf==3.2.0 pyasn1==0.2.2 pyasn1-modules==0.0.8 pyparsing==2.1.10 rsa==3.4.2 six==1.10.0 uritemplate==3.0.0 tensorflow-gpu==1.0.0\nRUN curl -O https://releases.hashicorp.com/terraform/0.8.7/terraform_0.8.7_linux_amd64.zip \\\n && unzip terraform_0.8.7_linux_amd64.zip -d /usr/local/bin \\\n && rm terraform_0.8.7_linux_amd64.zip\n","injectedSmells":[],"originalDockerfileHash":"42ef905b7f37614356274cb96918146b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nWORKDIR /root\nRUN apt-get update\n#   caffe\n#   from https://github.com/BVLC/caffe/blob/master/docker/cpu/Dockerfile\nRUN apt-get install --no-install-recommends build-essential cmake git wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy -y\nENV CAFFE_ROOT=\"/opt/caffe\"\nRUN mkdir -p $CAFFE_ROOT \\\n && cd $CAFFE_ROOT \\\n && git clone https://github.com/s9xie/hed . \\\n && git checkout 9e74dd710773d8d8a469ad905c76f4a7fa08f945 \\\n && pip install pip --upgrade \\\n && cd python \\\n && for req in $( cat requirements.txt ;) pydot; do pip install $req ; done \\\n && cd .. \\\n && sed -i \"s|add_subdirectory(examples)||g\" CMakeLists.txt \\\n && sed -i \"647s|//||\" include/caffe/loss_layers.hpp \\\n && sed -i \"648s|//||\" include/caffe/loss_layers.hpp \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 .. \\\n && make -j\"$( nproc ;)\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nRUN cd $CAFFE_ROOT \\\n && curl -O http://vcl.ucsd.edu/hed/hed_pretrained_bsds.caffemodel\n#   octave\nRUN apt-get install --no-install-recommends octave liboctave-dev -y \\\n && octave --eval \"pkg install -forge image\" \\\n && echo \"pkg load image;\" >> /root/.octaverc\nRUN apt-get install --no-install-recommends unzip -y \\\n && curl -O https://pdollar.github.io/toolbox/archive/piotr_toolbox.zip \\\n && unzip piotr_toolbox.zip \\\n && octave --eval \"addpath(genpath('/root/toolbox')); savepath;\" \\\n && echo \"#include <stdlib.h>\" > wrappers.hpp \\\n && cat /root/toolbox/channels/private/wrappers.hpp >> wrappers.hpp \\\n && mv wrappers.hpp /root/toolbox/channels/private/wrappers.hpp \\\n && mkdir /root/mex \\\n && cd /root/toolbox/channels/private \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/convConst.mex convConst.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/gradientMex.mex gradientMex.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/imPadMex.mex imPadMex.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/imResampleMex.mex imResampleMex.cpp \\\n && mkoctfile --mex -DMATLAB_MEX_FILE -o /root/mex/rgbConvertMex.mex rgbConvertMex.cpp \\\n && octave --eval \"addpath('/root/mex'); savepath;\"\nRUN curl -O https://raw.githubusercontent.com/pdollar/edges/master/private/edgesNmsMex.cpp \\\n && octave --eval \"mex edgesNmsMex.cpp\" \\\n && mv edgesNmsMex.mex /root/mex/\n#   from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN apt-get install --no-install-recommends build-essential curl libfreetype6-dev libpng12-dev libzmq3-dev pkg-config python python-dev rsync software-properties-common unzip -y\n#   gpu tracing in tensorflow\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nRUN pip install appdirs==1.4.0 funcsigs==1.0.2 google-api-python-client==1.6.2 google-auth==0.7.0 google-auth-httplib2==0.0.2 google-cloud-core==0.22.1 google-cloud-storage==0.22.0 googleapis-common-protos==1.5.2 httplib2==0.10.3 mock==2.0.0 numpy==1.12.0 oauth2client==4.0.0 packaging==16.8 pbr==1.10.0 protobuf==3.2.0 pyasn1==0.2.2 pyasn1-modules==0.0.8 pyparsing==2.1.10 rsa==3.4.2 six==1.10.0 uritemplate==3.0.0 tensorflow-gpu==1.0.0\nRUN curl -O https://releases.hashicorp.com/terraform/0.8.7/terraform_0.8.7_linux_amd64.zip \\\n && unzip terraform_0.8.7_linux_amd64.zip -d /usr/local/bin \\\n && rm terraform_0.8.7_linux_amd64.zip\n","originalDockerfileUglifiedHash":"3974e72c711f565f8ac4978235b29053","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8d1ab044e695f732ce4ffa29354be88541dcd173.dockerfile"}