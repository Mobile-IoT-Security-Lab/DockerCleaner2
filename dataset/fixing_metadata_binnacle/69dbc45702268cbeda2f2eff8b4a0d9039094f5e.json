{"seed":514541828,"processedDockerfileHash":"7dbf38f8439dada29e4b22777c6ec5ad","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This is a basic install of Nit on a debian base.\nFROM debian:stretch\nMAINTAINER Jean Privat <jean@pryen.org>\n#   Install dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends build-essential ccache libgc-dev graphviz libunwind-dev pkg-config libicu-dev git ca-certificates curl libcurl4-openssl-dev man python3-dev python3-pip python3-setuptools python3-wheel gettext libegl1-mesa-dev libevent-dev libgles1-mesa-dev libgles2-mesa-dev libgtk-3-dev libgmp-dev libmongoc-dev libbson-dev libssl-dev libncurses5-dev libpq-dev libreadline-dev libsdl-image1.2-dev libsdl-ttf2.0-dev libsdl1.2-dev libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsqlite3-dev libx11-dev libxdg-basedir-dev netcat psmisc ant clang cmake default-jdk file gnupg gnuplot-nox imagemagick inkscape libopenmpi-dev time unzip valgrind zipalign libc6:i386 libstdc++6:i386 zlib1g:i386 \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install --no-install-recommends nodejs=4.8.2~dfsg-1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install OpenGL validator\nRUN git clone https://github.com/KhronosGroup/glslang.git --depth=1 \\\n && mkdir -p glslang/build \\\n && cd glslang/build \\\n && cmake .. \\\n && make \\\n && make install\n#   Install android sdk/ndk\nRUN mkdir -p /opt \\\n && cd /opt \\\n && curl https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -o android-sdk-linux.zip \\\n && unzip -q android-sdk-linux.zip -d android-sdk-linux \\\n && curl https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip -o android-ndk-linux.zip \\\n && unzip -q android-ndk-linux.zip \\\n && mv android-ndk-r17c android-sdk-linux/ndk-bundle \\\n && rm android-sdk-linux.zip android-ndk-linux.zip\nRUN cd /opt \\\n && yes | android-sdk-linux/tools/bin/sdkmanager \"build-tools;27.0.0\" \"cmake;3.6.4111459\" platform-tools tools --verbose \\\n && yes | android-sdk-linux/tools/bin/sdkmanager --licenses --verbose\n#   TODO: predownload bwdgc and gradle?\n#   Setup environment variables\nENV ANDROID_HOME=\"/opt/android-sdk-linux/\"\nENV JAVA_HOME=\"/usr/lib/jvm/default-java/\"\nENV JNI_LIB_PATH=\"$JAVA_HOME/jre/lib/amd64/server/\"\nENV LD_LIBRARY_PATH=\"$JAVA_HOME/jre/lib/amd64/server/\"\n#   Used by CI to render junit files to html\nRUN pip3 install junit2html\n#    Prepare to install npm (npm is not packaged for debian:stretch)\nRUN npm install pug-cli@1.0.0-alpha6 -g\n#   Some tools, like gradle, need an explitit UTF8 environement\nENV LANG=\"C.UTF-8\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This is a basic install of Nit on a debian base.\nFROM debian:stretch\nMAINTAINER Jean Privat <jean@pryen.org>\n#  Install dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends build-essential ccache libgc-dev graphviz libunwind-dev pkg-config libicu-dev git ca-certificates curl libcurl4-openssl-dev man python3-dev python3-pip python3-setuptools python3-wheel gettext libegl1-mesa-dev libevent-dev libgles1-mesa-dev libgles2-mesa-dev libgtk-3-dev libgmp-dev libmongoc-dev libbson-dev libssl-dev libncurses5-dev libpq-dev libreadline-dev libsdl-image1.2-dev libsdl-ttf2.0-dev libsdl1.2-dev libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsqlite3-dev libx11-dev libxdg-basedir-dev netcat psmisc ant clang cmake default-jdk file gnupg gnuplot-nox imagemagick inkscape libopenmpi-dev time unzip valgrind zipalign libc6:i386 libstdc++6:i386 zlib1g:i386 \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install OpenGL validator\nRUN git clone https://github.com/KhronosGroup/glslang.git --depth=1 \\\n && mkdir -p glslang/build \\\n && cd glslang/build \\\n && cmake .. \\\n && make \\\n && make install\n#  Install android sdk/ndk\nRUN mkdir -p /opt \\\n && cd /opt \\\n && curl https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -o android-sdk-linux.zip \\\n && unzip -q android-sdk-linux.zip -d android-sdk-linux \\\n && curl https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip -o android-ndk-linux.zip \\\n && unzip -q android-ndk-linux.zip \\\n && mv android-ndk-r17c android-sdk-linux/ndk-bundle \\\n && rm android-sdk-linux.zip android-ndk-linux.zip\nRUN cd /opt \\\n && yes | android-sdk-linux/tools/bin/sdkmanager \"build-tools;27.0.0\" \"cmake;3.6.4111459\" platform-tools tools --verbose \\\n && yes | android-sdk-linux/tools/bin/sdkmanager --licenses --verbose\n#  TODO: predownload bwdgc and gradle?\n#  Setup environment variables\nENV ANDROID_HOME=\"/opt/android-sdk-linux/\"\nENV JAVA_HOME=\"/usr/lib/jvm/default-java/\"\nENV JNI_LIB_PATH=\"$JAVA_HOME/jre/lib/amd64/server/\"\nENV LD_LIBRARY_PATH=\"$JAVA_HOME/jre/lib/amd64/server/\"\n#  Used by CI to render junit files to html\nRUN pip3 install junit2html\n#   Prepare to install npm (npm is not packaged for debian:stretch)\nRUN npm install pug-cli -g\n#  Some tools, like gradle, need an explitit UTF8 environement\nENV LANG=\"C.UTF-8\"\n","injectedSmells":[],"originalDockerfileHash":"8276c50972a5e485f07ff9811eab4904","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This is a basic install of Nit on a debian base.\nFROM debian:stretch\nMAINTAINER Jean Privat <jean@pryen.org>\n#   Install dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends build-essential ccache libgc-dev graphviz libunwind-dev pkg-config libicu-dev git ca-certificates curl libcurl4-openssl-dev man python3-dev python3-pip python3-setuptools python3-wheel gettext libegl1-mesa-dev libevent-dev libgles1-mesa-dev libgles2-mesa-dev libgtk-3-dev libgmp-dev libmongoc-dev libbson-dev libssl-dev libncurses5-dev libpq-dev libreadline-dev libsdl-image1.2-dev libsdl-ttf2.0-dev libsdl1.2-dev libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsqlite3-dev libx11-dev libxdg-basedir-dev netcat psmisc ant clang cmake default-jdk file gnupg gnuplot-nox imagemagick inkscape libopenmpi-dev time unzip valgrind zipalign libc6:i386 libstdc++6:i386 zlib1g:i386 \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install OpenGL validator\nRUN git clone https://github.com/KhronosGroup/glslang.git --depth=1 \\\n && mkdir -p glslang/build \\\n && cd glslang/build \\\n && cmake .. \\\n && make \\\n && make install\n#   Install android sdk/ndk\nRUN mkdir -p /opt \\\n && cd /opt \\\n && curl https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -o android-sdk-linux.zip \\\n && unzip -q android-sdk-linux.zip -d android-sdk-linux \\\n && curl https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip -o android-ndk-linux.zip \\\n && unzip -q android-ndk-linux.zip \\\n && mv android-ndk-r17c android-sdk-linux/ndk-bundle \\\n && rm android-sdk-linux.zip android-ndk-linux.zip\nRUN cd /opt \\\n && yes | android-sdk-linux/tools/bin/sdkmanager \"build-tools;27.0.0\" \"cmake;3.6.4111459\" platform-tools tools --verbose \\\n && yes | android-sdk-linux/tools/bin/sdkmanager --licenses --verbose\n#   TODO: predownload bwdgc and gradle?\n#   Setup environment variables\nENV ANDROID_HOME=\"/opt/android-sdk-linux/\"\nENV JAVA_HOME=\"/usr/lib/jvm/default-java/\"\nENV JNI_LIB_PATH=\"$JAVA_HOME/jre/lib/amd64/server/\"\nENV LD_LIBRARY_PATH=\"$JAVA_HOME/jre/lib/amd64/server/\"\n#   Used by CI to render junit files to html\nRUN pip3 install junit2html\n#    Prepare to install npm (npm is not packaged for debian:stretch)\nRUN npm install pug-cli -g\n#   Some tools, like gradle, need an explitit UTF8 environement\nENV LANG=\"C.UTF-8\"\n","originalDockerfileUglifiedHash":"08fd77d6d4c49a019e60395c4b182f70","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/69dbc45702268cbeda2f2eff8b4a0d9039094f5e.dockerfile"}