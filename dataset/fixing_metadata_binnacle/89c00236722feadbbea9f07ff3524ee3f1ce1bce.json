{"seed":3985858866,"processedDockerfileHash":"e65702cadadc893ba120067c25043ede","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM debian:stretch\nMAINTAINER Charles Hubain <chubain@quarkslab.com>\nARG QBDI_BUILD_TYPE=Release\nENV USER=\"docker\"\nENV HOME=\"/home/$USER\"\nENV PREFIX=\"/usr\"\nENV QBDI_PLATFORM=\"android-ARM\"\nENV LLVM_VERSION=\"5.0\"\nENV CMAKE_MAJOR=\"3.11\"\nENV CMAKE_VERSION=\"3.11.4\"\nENV NDK_VERSION=\"r13b\"\n#   Install base tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash=4.4-5 gpg wget=1.18-5+deb9u3 -y\n#   Add LLVM debian repository\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" >> /etc/apt/sources.list \\\n && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-4.0 main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-4.0 main\" >> /etc/apt/sources.list \\\n && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-5.0 main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-5.0 main\" >> /etc/apt/sources.list\n#   Get latest package list, upgrade packages, install required packages \n#   and cleanup to keep container as small as possible\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash=4.4-5 sudo=1.8.19p1-2.1+deb9u3 unzip=6.0-21+deb9u2 build-essential=12.3 cmake=3.7.2-1 ninja-build=1.7.2-1 g++=4:6.3.0-4 gcc-arm-linux-gnueabi=4:6.3.0-4 g++-arm-linux-gnueabi=4:6.3.0-4 libncurses5-dev=6.0+20161126-1+deb9u2 libstdc++-6-dev=6.3.0-18+deb9u1 make=4.1-9.1 pkg-config=0.29-4+b1 python=2.7.13-2 python-dev=2.7.13-2 wget=1.18-5+deb9u3 zlib1g-dev=1:1.2.8.dfsg-5+deb9u1 qemu-user=1:2.8+dfsg-6+deb9u17 vim=2:8.0.0197-4+deb9u7 llvm-$LLVM_VERSION -y \\\n && ln -s /usr/bin/llvm-tblgen-$LLVM_VERSION /usr/bin/llvm-tblgen \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget \"https://cmake.org/files/v$CMAKE_MAJOR/cmake-$CMAKE_VERSION.tar.gz\" \\\n && tar xf cmake-$CMAKE_VERSION.tar.gz \\\n && cd cmake-$CMAKE_VERSION/ \\\n && ./configure --prefix=$PREFIX \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf cmake-*\n#   create a user\nRUN adduser --disabled-password --gecos '' $USER \\\n && adduser $USER sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   switch to new user\nUSER $USER\nWORKDIR $HOME\n#   Install NDK\nRUN sudo chown -R $USER:$USER . \\\n && wget https://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-x86_64.zip \\\n && unzip android-ndk-$NDK_VERSION-linux-x86_64.zip \\\n && rm android-ndk-$NDK_VERSION-linux-x86_64.zip\n#   install QBDI compilation dependencies\n#   git archive -o qbdi-deps.tar.gz --prefix=qbdi-deps/ HEAD deps\nCOPY qbdi-deps.tar.gz $HOME/\nRUN sudo chown -R $USER:$USER qbdi-deps\nWORKDIR $HOME/qbdi-deps/deps/gtest/$QBDI_PLATFORM\nRUN sh build.sh prepare \\\n && sh build.sh build \\\n && sh build.sh package \\\n && sh build.sh clean\nWORKDIR $HOME/qbdi-deps/deps/llvm/$QBDI_PLATFORM\nRUN sh build.sh prepare \\\n && sh build.sh build \\\n && sh build.sh package \\\n && sh build.sh clean\n#   build / test / install QBDI\n#   git archive -o qbdi.tar.gz --prefix=qbdi/ HEAD .\nCOPY qbdi.tar.gz $HOME/\nWORKDIR $HOME/qbdi\nRUN sudo chown -R $USER:$USER . \\\n && rm -rf deps \\\n && ln -s $HOME/qbdi-deps/deps deps \\\n && mkdir build \\\n && cd build \\\n && sh ../cmake/config-$QBDI_PLATFORM.sh \\\n && make -j2 \\\n && rm -f QBDI-*-$QBDI_PLATFORM.tar.gz \\\n && cpack\nWORKDIR \"$HOME/\"\nCMD [\"/bin/bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch\nMAINTAINER Charles Hubain <chubain@quarkslab.com>\nARG QBDI_BUILD_TYPE=Release\nENV USER=\"docker\"\nENV HOME=\"/home/$USER\"\nENV PREFIX=\"/usr\"\nENV QBDI_PLATFORM=\"android-ARM\"\nENV LLVM_VERSION=\"5.0\"\nENV CMAKE_MAJOR=\"3.11\"\nENV CMAKE_VERSION=\"3.11.4\"\nENV NDK_VERSION=\"r13b\"\n#  Install base tools\nRUN apt-get update \\\n && apt-get install bash gpg wget -y\n#  Add LLVM debian repository\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" >> /etc/apt/sources.list \\\n && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-4.0 main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-4.0 main\" >> /etc/apt/sources.list \\\n && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-5.0 main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-5.0 main\" >> /etc/apt/sources.list\n#  Get latest package list, upgrade packages, install required packages \n#  and cleanup to keep container as small as possible\nRUN apt-get update \\\n && apt-get install bash sudo unzip build-essential cmake ninja-build g++ gcc-arm-linux-gnueabi g++-arm-linux-gnueabi libncurses5-dev libstdc++-6-dev make pkg-config python python-dev wget zlib1g-dev qemu-user vim llvm-$LLVM_VERSION -y \\\n && ln -s /usr/bin/llvm-tblgen-$LLVM_VERSION /usr/bin/llvm-tblgen \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget \"https://cmake.org/files/v$CMAKE_MAJOR/cmake-$CMAKE_VERSION.tar.gz\" \\\n && tar xf cmake-$CMAKE_VERSION.tar.gz \\\n && cd cmake-$CMAKE_VERSION/ \\\n && ./configure --prefix=$PREFIX \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf cmake-*\n#  create a user\nRUN adduser --disabled-password --gecos '' $USER \\\n && adduser $USER sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#  switch to new user\nUSER $USER\nWORKDIR $HOME\n#  Install NDK\nRUN sudo chown -R $USER:$USER . \\\n && wget https://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-x86_64.zip \\\n && unzip android-ndk-$NDK_VERSION-linux-x86_64.zip \\\n && rm android-ndk-$NDK_VERSION-linux-x86_64.zip\n#  install QBDI compilation dependencies\n#  git archive -o qbdi-deps.tar.gz --prefix=qbdi-deps/ HEAD deps\nADD qbdi-deps.tar.gz $HOME/\nRUN sudo chown -R $USER:$USER qbdi-deps\nWORKDIR $HOME/qbdi-deps/deps/gtest/$QBDI_PLATFORM\nRUN sh build.sh prepare \\\n && sh build.sh build \\\n && sh build.sh package \\\n && sh build.sh clean\nWORKDIR $HOME/qbdi-deps/deps/llvm/$QBDI_PLATFORM\nRUN sh build.sh prepare \\\n && sh build.sh build \\\n && sh build.sh package \\\n && sh build.sh clean\n#  build / test / install QBDI\n#  git archive -o qbdi.tar.gz --prefix=qbdi/ HEAD .\nADD qbdi.tar.gz $HOME/\nWORKDIR $HOME/qbdi\nRUN sudo chown -R $USER:$USER . \\\n && rm -rf deps \\\n && ln -s $HOME/qbdi-deps/deps deps \\\n && mkdir build \\\n && cd build \\\n && sh ../cmake/config-$QBDI_PLATFORM.sh \\\n && make -j2 \\\n && rm -f QBDI-*-$QBDI_PLATFORM.tar.gz \\\n && cpack\nWORKDIR \"$HOME/\"\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"dcf62de9c33befefadde2e65ed936132","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch\nMAINTAINER Charles Hubain <chubain@quarkslab.com>\nARG QBDI_BUILD_TYPE=Release\nENV USER=\"docker\"\nENV HOME=\"/home/$USER\"\nENV PREFIX=\"/usr\"\nENV QBDI_PLATFORM=\"android-ARM\"\nENV LLVM_VERSION=\"5.0\"\nENV CMAKE_MAJOR=\"3.11\"\nENV CMAKE_VERSION=\"3.11.4\"\nENV NDK_VERSION=\"r13b\"\n#   Install base tools\nRUN apt-get update \\\n && apt-get install bash gpg wget -y\n#   Add LLVM debian repository\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" >> /etc/apt/sources.list \\\n && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-4.0 main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-4.0 main\" >> /etc/apt/sources.list \\\n && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-5.0 main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-5.0 main\" >> /etc/apt/sources.list\n#   Get latest package list, upgrade packages, install required packages \n#   and cleanup to keep container as small as possible\nRUN apt-get update \\\n && apt-get install bash sudo unzip build-essential cmake ninja-build g++ gcc-arm-linux-gnueabi g++-arm-linux-gnueabi libncurses5-dev libstdc++-6-dev make pkg-config python python-dev wget zlib1g-dev qemu-user vim llvm-$LLVM_VERSION -y \\\n && ln -s /usr/bin/llvm-tblgen-$LLVM_VERSION /usr/bin/llvm-tblgen \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget \"https://cmake.org/files/v$CMAKE_MAJOR/cmake-$CMAKE_VERSION.tar.gz\" \\\n && tar xf cmake-$CMAKE_VERSION.tar.gz \\\n && cd cmake-$CMAKE_VERSION/ \\\n && ./configure --prefix=$PREFIX \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf cmake-*\n#   create a user\nRUN adduser --disabled-password --gecos '' $USER \\\n && adduser $USER sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   switch to new user\nUSER $USER\nWORKDIR $HOME\n#   Install NDK\nRUN sudo chown -R $USER:$USER . \\\n && wget https://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-x86_64.zip \\\n && unzip android-ndk-$NDK_VERSION-linux-x86_64.zip \\\n && rm android-ndk-$NDK_VERSION-linux-x86_64.zip\n#   install QBDI compilation dependencies\n#   git archive -o qbdi-deps.tar.gz --prefix=qbdi-deps/ HEAD deps\nADD qbdi-deps.tar.gz $HOME/\nRUN sudo chown -R $USER:$USER qbdi-deps\nWORKDIR $HOME/qbdi-deps/deps/gtest/$QBDI_PLATFORM\nRUN sh build.sh prepare \\\n && sh build.sh build \\\n && sh build.sh package \\\n && sh build.sh clean\nWORKDIR $HOME/qbdi-deps/deps/llvm/$QBDI_PLATFORM\nRUN sh build.sh prepare \\\n && sh build.sh build \\\n && sh build.sh package \\\n && sh build.sh clean\n#   build / test / install QBDI\n#   git archive -o qbdi.tar.gz --prefix=qbdi/ HEAD .\nADD qbdi.tar.gz $HOME/\nWORKDIR $HOME/qbdi\nRUN sudo chown -R $USER:$USER . \\\n && rm -rf deps \\\n && ln -s $HOME/qbdi-deps/deps deps \\\n && mkdir build \\\n && cd build \\\n && sh ../cmake/config-$QBDI_PLATFORM.sh \\\n && make -j2 \\\n && rm -f QBDI-*-$QBDI_PLATFORM.tar.gz \\\n && cpack\nWORKDIR \"$HOME/\"\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"fabb227d1626331f0a090da2d90d4aac","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/89c00236722feadbbea9f07ff3524ee3f1ce1bce.dockerfile"}