{"seed":1273705640,"processedDockerfileHash":"7341553afa0b9026fbb1a05c5cff1a32","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"ARG BUILD_FROM\nFROM $BUILD_FROM\nLABEL maintainer=\"Michael Hansen <hansen.mike@gmail.com>\"\nARG BUILD_ARCH\nARG CPU_ARCH\nENV LANG=\"C.UTF-8\"\nARG MAKE_THREADS=4\nWORKDIR /\nCOPY etc/qemu-arm-static /usr/bin/\nCOPY etc/qemu-aarch64-static /usr/bin/\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash=5.2.15-2ubuntu1 jq=1.6-2.1ubuntu3 unzip=6.0-27ubuntu1 python3=3.11.2-1 python3-pip=23.0.1+dfsg-1 python3-dev=3.11.2-1 build-essential=12.9ubuntu3 portaudio19-dev=19.6.0-1.2 swig=4.1.0-0.2 libatlas-base-dev=3.10.3-13ubuntu1 sox=14.4.2+git20190427-3.4ubuntu1 espeak=1.48.15+dfsg-3 flite=2.2-5 alsa-utils=1.2.8-1ubuntu1 git=1:2.39.2-1ubuntu1 curl=7.88.1-7ubuntu1 autoconf=2.71-3 libtool=2.4.7-5 automake=1:1.16.5-1.3 bison=2:3.8.2+dfsg-1build1 sphinxbase-utils=0.8+5prealpha+1-15build1 sphinxtrain=1.0.8+5prealpha+1-5 -y\nCOPY download/openfst-1.6.2-1_${BUILD_ARCH}.deb /\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ] ; then apt-get install --no-install-recommends libfst-dev=1.7.9-5 libfst-tools=1.7.9-5 -y ; else dpkg -i /openfst-1.6.2-1_${BUILD_ARCH}.deb ;rm /openfst*.deb ; fi\nCOPY download/phonetisaurus-2019.tar.gz /phonetisaurus.tar.gz\nRUN cd / \\\n && tar -xf phonetisaurus.tar.gz\nRUN cd /phonetisaurus \\\n && ./configure \\\n && make -j $MAKE_THREADS \\\n && make install \\\n && rm -rf /phonetisaurus*\n#   Install Opengrm\nCOPY download/opengrm-ngram-1.3.3.tar.gz /\nRUN cd / \\\n && tar -xf opengrm-ngram-1.3.3.tar.gz \\\n && cd opengrm-ngram-1.3.3 \\\n && ./configure \\\n && make -j $MAKE_THREADS \\\n && make install \\\n && ldconfig \\\n && rm -rf /opengrm*\n#   Install Python dependencies\nRUN python3 -m pip install --no-cache-dir wheel\nCOPY download/jsgf2fst-0.1.0.tar.gz /download/\nRUN apt-get install --no-install-recommends libfreetype6-dev=2.12.1+dfsg-4 libpng-dev=1.6.39-2 pkg-config=1.8.1-1ubuntu2 libffi-dev=3.4.4-1 libssl-dev=3.0.8-1ubuntu1 -y\nCOPY requirements.txt /requirements.txt\nRUN if [ \"$BUILD_ARCH\" != \"amd64\" ] ; then grep -v flair /requirements.txt > /requirements-noflair.txt;mv /requirements-noflair.txt /requirements.txt ; fi\nRUN python3 -m pip install --no-cache-dir -r /requirements.txt\n#   Install Pocketsphinx Python module with no sound\nCOPY download/pocketsphinx-python.tar.gz /\nRUN python3 -m pip install --no-cache-dir /pocketsphinx-python.tar.gz \\\n && rm -rf /pocketsphinx-python*\n#   Install snowboy\nCOPY download/snowboy-1.3.0.tar.gz /\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ] ; then pip3 install --no-cache-dir /snowboy-1.3.0.tar.gz ; fi\n#   Install Mycroft Precise\nCOPY download/precise-engine_0.3.0_${CPU_ARCH}.tar.gz /precise-engine.tar.gz\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ] ; then cd / \\\n && tar -xzf /precise-engine.tar.gz \\\n && ln -s /precise-engine/precise-engine /usr/bin/precise-engine \\\n && rm /precise-engine.tar.gz ; fi\nRUN apt-get install --no-install-recommends flite=2.2-5 libttspico-utils=1.0+git20130326-13 -y\nCOPY download/kaldi_${BUILD_ARCH}.tar.gz /kaldi.tar.gz\nRUN mkdir -p /opt \\\n && tar -C /opt -xzf /kaldi.tar.gz \\\n && rm /kaldi.tar.gz\nRUN ldconfig\n#   Copy bw and mllr_solve to /usr/bin\nRUN find / -name bw -exec cp '{}' /usr/bin/\nRUN find / -name mllr_solve -exec cp '{}' /usr/bin/\nRUN apt-get install --no-install-recommends pulseaudio=1:16.1+dfsg1-2ubuntu3 -y\nCOPY etc/pulseaudio.client.conf /etc/pulse/client.conf\n#   Create new user\nENV UNAME=\"rhasspy\"\nRUN export UNAME=$UNAME UID=1000 GID=1000 \\\n && mkdir -p \"/home/${UNAME}\" \\\n && echo \"${UNAME}:x:${UID}:${GID}:${UNAME} User,,,:/home/${UNAME}:/bin/bash\" >> /etc/passwd \\\n && echo \"${UNAME}:x:${UID}:\" >> /etc/group \\\n && mkdir -p /etc/sudoers.d \\\n && echo \"${UNAME} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/${UNAME} \\\n && chmod 0440 /etc/sudoers.d/${UNAME} \\\n && chown ${UID}:${GID} -R /home/${UNAME} \\\n && gpasswd -a ${UNAME} audio\nENV RHASSPY_APP=\"/home/${UNAME}\"\n#   Copy script to run\nCOPY docker/run.sh /run.sh\nRUN chmod +x /run.sh\n#   Switch to new user\nUSER $UNAME\nENV HOME=\"/home/${UNAME}\"\nCOPY profiles/zh/profile.json profiles/zh/custom_words.txt profiles/zh/espeak_phonemes.txt profiles/zh/phoneme_examples.txt profiles/zh/frequent_words.txt profiles/zh/sentences.ini profiles/zh/stop_words.txt ${RHASSPY_APP}/profiles/zh/\nCOPY profiles/hi/ profiles/hi/profile.json profiles/hi/custom_words.txt profiles/hi/espeak_phonemes.txt profiles/hi/phoneme_examples.txt profiles/hi/frequent_words.txt profiles/hi/sentences.ini profiles/hi/stop_words.txt ${RHASSPY_APP}/profiles/hi/\nCOPY profiles/el/profile.json profiles/el/custom_words.txt profiles/el/espeak_phonemes.txt profiles/el/phoneme_examples.txt profiles/el/frequent_words.txt profiles/el/sentences.ini profiles/el/stop_words.txt ${RHASSPY_APP}/profiles/el/\nCOPY profiles/de/profile.json profiles/de/custom_words.txt profiles/de/espeak_phonemes.txt profiles/de/phoneme_examples.txt profiles/de/frequent_words.txt profiles/de/sentences.ini profiles/de/stop_words.txt ${RHASSPY_APP}/profiles/de/\nCOPY profiles/it/profile.json profiles/it/custom_words.txt profiles/it/espeak_phonemes.txt profiles/it/phoneme_examples.txt profiles/it/frequent_words.txt profiles/it/sentences.ini profiles/it/stop_words.txt ${RHASSPY_APP}/profiles/it/\nCOPY profiles/es/profile.json profiles/es/custom_words.txt profiles/es/espeak_phonemes.txt profiles/es/phoneme_examples.txt profiles/es/frequent_words.txt profiles/es/sentences.ini profiles/es/stop_words.txt ${RHASSPY_APP}/profiles/es/\nCOPY profiles/fr/profile.json profiles/fr/custom_words.txt profiles/fr/espeak_phonemes.txt profiles/fr/phoneme_examples.txt profiles/fr/frequent_words.txt profiles/fr/sentences.ini profiles/fr/stop_words.txt ${RHASSPY_APP}/profiles/fr/\nCOPY profiles/ru/profile.json profiles/ru/custom_words.txt profiles/ru/espeak_phonemes.txt profiles/ru/phoneme_examples.txt profiles/ru/frequent_words.txt profiles/ru/sentences.ini profiles/ru/stop_words.txt ${RHASSPY_APP}/profiles/ru/\nCOPY profiles/nl/profile.json profiles/nl/custom_words.txt profiles/nl/espeak_phonemes.txt profiles/nl/phoneme_examples.txt profiles/nl/frequent_words.txt profiles/nl/sentences.ini profiles/nl/stop_words.txt ${RHASSPY_APP}/profiles/nl/\nCOPY profiles/vi/profile.json profiles/vi/custom_words.txt profiles/vi/espeak_phonemes.txt profiles/vi/phoneme_examples.txt profiles/vi/frequent_words.txt profiles/vi/sentences.ini profiles/vi/stop_words.txt ${RHASSPY_APP}/profiles/vi/\nCOPY profiles/pt/profile.json profiles/pt/custom_words.txt profiles/pt/espeak_phonemes.txt profiles/pt/phoneme_examples.txt profiles/pt/frequent_words.txt profiles/pt/sentences.ini profiles/pt/stop_words.txt ${RHASSPY_APP}/profiles/pt/\nCOPY profiles/en/profile.json profiles/en/custom_words.txt profiles/en/espeak_phonemes.txt profiles/en/phoneme_examples.txt profiles/en/frequent_words.txt profiles/en/sentences.ini profiles/en/stop_words.txt ${RHASSPY_APP}/profiles/en/\nCOPY profiles/defaults.json ${RHASSPY_APP}/profiles/\nCOPY docker/rhasspy ${RHASSPY_APP}/bin/\nCOPY dist/ ${RHASSPY_APP}/dist/\nCOPY etc/wav/* ${RHASSPY_APP}/etc/wav/\nCOPY rhasspy/profile_schema.json ${RHASSPY_APP}/rhasspy/\nCOPY *.py ${RHASSPY_APP}/\nCOPY rhasspy/*.py ${RHASSPY_APP}/rhasspy/\nENV CONFIG_PATH=\"/data/options.json\"\nENTRYPOINT [\"/run.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG BUILD_FROM\nFROM $BUILD_FROM\nLABEL maintainer=\"Michael Hansen <hansen.mike@gmail.com>\"\nARG BUILD_ARCH\nARG CPU_ARCH\nENV LANG=\"C.UTF-8\"\nARG MAKE_THREADS=4\nWORKDIR /\nCOPY etc/qemu-arm-static /usr/bin/\nCOPY etc/qemu-aarch64-static /usr/bin/\nRUN apt-get update \\\n && apt-get install bash jq unzip python3 python3-pip python3-dev build-essential portaudio19-dev swig libatlas-base-dev sox espeak flite alsa-utils git curl autoconf libtool automake bison sphinxbase-utils sphinxtrain -y\nCOPY download/openfst-1.6.2-1_${BUILD_ARCH}.deb /\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ] ; then apt-get install libfst-dev libfst-tools -y ; else dpkg -i /openfst-1.6.2-1_${BUILD_ARCH}.deb ;rm /openfst*.deb ; fi\nCOPY download/phonetisaurus-2019.tar.gz /phonetisaurus.tar.gz\nRUN cd / \\\n && tar -xf phonetisaurus.tar.gz\nRUN cd /phonetisaurus \\\n && ./configure \\\n && make -j $MAKE_THREADS \\\n && make install \\\n && rm -rf /phonetisaurus*\n#  Install Opengrm\nCOPY download/opengrm-ngram-1.3.3.tar.gz /\nRUN cd / \\\n && tar -xf opengrm-ngram-1.3.3.tar.gz \\\n && cd opengrm-ngram-1.3.3 \\\n && ./configure \\\n && make -j $MAKE_THREADS \\\n && make install \\\n && ldconfig \\\n && rm -rf /opengrm*\n#  Install Python dependencies\nRUN python3 -m pip install --no-cache-dir wheel\nCOPY download/jsgf2fst-0.1.0.tar.gz /download/\nRUN apt-get install libfreetype6-dev libpng-dev pkg-config libffi-dev libssl-dev -y\nCOPY requirements.txt /requirements.txt\nRUN if [ \"$BUILD_ARCH\" != \"amd64\" ] ; then grep -v flair /requirements.txt > /requirements-noflair.txt;mv /requirements-noflair.txt /requirements.txt ; fi\nRUN python3 -m pip install --no-cache-dir -r /requirements.txt\n#  Install Pocketsphinx Python module with no sound\nCOPY download/pocketsphinx-python.tar.gz /\nRUN python3 -m pip install --no-cache-dir /pocketsphinx-python.tar.gz \\\n && rm -rf /pocketsphinx-python*\n#  Install snowboy\nCOPY download/snowboy-1.3.0.tar.gz /\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ] ; then pip3 install --no-cache-dir /snowboy-1.3.0.tar.gz ; fi\n#  Install Mycroft Precise\nCOPY download/precise-engine_0.3.0_${CPU_ARCH}.tar.gz /precise-engine.tar.gz\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ] ; then cd / \\\n && tar -xzf /precise-engine.tar.gz \\\n && ln -s /precise-engine/precise-engine /usr/bin/precise-engine \\\n && rm /precise-engine.tar.gz ; fi\nRUN apt-get install flite libttspico-utils -y\nCOPY download/kaldi_${BUILD_ARCH}.tar.gz /kaldi.tar.gz\nRUN mkdir -p /opt \\\n && tar -C /opt -xzf /kaldi.tar.gz \\\n && rm /kaldi.tar.gz\nRUN ldconfig\n#  Copy bw and mllr_solve to /usr/bin\nRUN find / -name bw -exec cp '{}' /usr/bin/ ;\nRUN find / -name mllr_solve -exec cp '{}' /usr/bin/ ;\nRUN apt-get install pulseaudio -y\nCOPY etc/pulseaudio.client.conf /etc/pulse/client.conf\n#  Create new user\nENV UNAME=\"rhasspy\"\nRUN export UNAME=$UNAME UID=1000 GID=1000 \\\n && mkdir -p \"/home/${UNAME}\" \\\n && echo \"${UNAME}:x:${UID}:${GID}:${UNAME} User,,,:/home/${UNAME}:/bin/bash\" >> /etc/passwd \\\n && echo \"${UNAME}:x:${UID}:\" >> /etc/group \\\n && mkdir -p /etc/sudoers.d \\\n && echo \"${UNAME} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/${UNAME} \\\n && chmod 0440 /etc/sudoers.d/${UNAME} \\\n && chown ${UID}:${GID} -R /home/${UNAME} \\\n && gpasswd -a ${UNAME} audio\nENV RHASSPY_APP=\"/home/${UNAME}\"\n#  Copy script to run\nCOPY docker/run.sh /run.sh\nRUN chmod +x /run.sh\n#  Switch to new user\nUSER $UNAME\nENV HOME=\"/home/${UNAME}\"\nCOPY profiles/zh/profile.json profiles/zh/custom_words.txt profiles/zh/espeak_phonemes.txt profiles/zh/phoneme_examples.txt profiles/zh/frequent_words.txt profiles/zh/sentences.ini profiles/zh/stop_words.txt ${RHASSPY_APP}/profiles/zh/\nCOPY profiles/hi/ profiles/hi/profile.json profiles/hi/custom_words.txt profiles/hi/espeak_phonemes.txt profiles/hi/phoneme_examples.txt profiles/hi/frequent_words.txt profiles/hi/sentences.ini profiles/hi/stop_words.txt ${RHASSPY_APP}/profiles/hi/\nCOPY profiles/el/profile.json profiles/el/custom_words.txt profiles/el/espeak_phonemes.txt profiles/el/phoneme_examples.txt profiles/el/frequent_words.txt profiles/el/sentences.ini profiles/el/stop_words.txt ${RHASSPY_APP}/profiles/el/\nCOPY profiles/de/profile.json profiles/de/custom_words.txt profiles/de/espeak_phonemes.txt profiles/de/phoneme_examples.txt profiles/de/frequent_words.txt profiles/de/sentences.ini profiles/de/stop_words.txt ${RHASSPY_APP}/profiles/de/\nCOPY profiles/it/profile.json profiles/it/custom_words.txt profiles/it/espeak_phonemes.txt profiles/it/phoneme_examples.txt profiles/it/frequent_words.txt profiles/it/sentences.ini profiles/it/stop_words.txt ${RHASSPY_APP}/profiles/it/\nCOPY profiles/es/profile.json profiles/es/custom_words.txt profiles/es/espeak_phonemes.txt profiles/es/phoneme_examples.txt profiles/es/frequent_words.txt profiles/es/sentences.ini profiles/es/stop_words.txt ${RHASSPY_APP}/profiles/es/\nCOPY profiles/fr/profile.json profiles/fr/custom_words.txt profiles/fr/espeak_phonemes.txt profiles/fr/phoneme_examples.txt profiles/fr/frequent_words.txt profiles/fr/sentences.ini profiles/fr/stop_words.txt ${RHASSPY_APP}/profiles/fr/\nCOPY profiles/ru/profile.json profiles/ru/custom_words.txt profiles/ru/espeak_phonemes.txt profiles/ru/phoneme_examples.txt profiles/ru/frequent_words.txt profiles/ru/sentences.ini profiles/ru/stop_words.txt ${RHASSPY_APP}/profiles/ru/\nCOPY profiles/nl/profile.json profiles/nl/custom_words.txt profiles/nl/espeak_phonemes.txt profiles/nl/phoneme_examples.txt profiles/nl/frequent_words.txt profiles/nl/sentences.ini profiles/nl/stop_words.txt ${RHASSPY_APP}/profiles/nl/\nCOPY profiles/vi/profile.json profiles/vi/custom_words.txt profiles/vi/espeak_phonemes.txt profiles/vi/phoneme_examples.txt profiles/vi/frequent_words.txt profiles/vi/sentences.ini profiles/vi/stop_words.txt ${RHASSPY_APP}/profiles/vi/\nCOPY profiles/pt/profile.json profiles/pt/custom_words.txt profiles/pt/espeak_phonemes.txt profiles/pt/phoneme_examples.txt profiles/pt/frequent_words.txt profiles/pt/sentences.ini profiles/pt/stop_words.txt ${RHASSPY_APP}/profiles/pt/\nCOPY profiles/en/profile.json profiles/en/custom_words.txt profiles/en/espeak_phonemes.txt profiles/en/phoneme_examples.txt profiles/en/frequent_words.txt profiles/en/sentences.ini profiles/en/stop_words.txt ${RHASSPY_APP}/profiles/en/\nCOPY profiles/defaults.json ${RHASSPY_APP}/profiles/\nCOPY docker/rhasspy ${RHASSPY_APP}/bin/\nCOPY dist/ ${RHASSPY_APP}/dist/\nCOPY etc/wav/* ${RHASSPY_APP}/etc/wav/\nCOPY rhasspy/profile_schema.json ${RHASSPY_APP}/rhasspy/\nCOPY *.py ${RHASSPY_APP}/\nCOPY rhasspy/*.py ${RHASSPY_APP}/rhasspy/\nENV CONFIG_PATH=\"/data/options.json\"\nENTRYPOINT [\"/run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"5999d336529afef5f6d89fba4beb34a8","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG BUILD_FROM\nFROM $BUILD_FROM\nLABEL maintainer=\"Michael Hansen <hansen.mike@gmail.com>\"\nARG BUILD_ARCH\nARG CPU_ARCH\nENV LANG=\"C.UTF-8\"\nARG MAKE_THREADS=4\nWORKDIR /\nCOPY etc/qemu-arm-static /usr/bin/\nCOPY etc/qemu-aarch64-static /usr/bin/\nRUN apt-get update \\\n && apt-get install bash jq unzip python3 python3-pip python3-dev build-essential portaudio19-dev swig libatlas-base-dev sox espeak flite alsa-utils git curl autoconf libtool automake bison sphinxbase-utils sphinxtrain -y\nCOPY download/openfst-1.6.2-1_${BUILD_ARCH}.deb /\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ] ; then apt-get install libfst-dev libfst-tools -y ; else dpkg -i /openfst-1.6.2-1_${BUILD_ARCH}.deb ;rm /openfst*.deb ; fi\nCOPY download/phonetisaurus-2019.tar.gz /phonetisaurus.tar.gz\nRUN cd / \\\n && tar -xf phonetisaurus.tar.gz\nRUN cd /phonetisaurus \\\n && ./configure \\\n && make -j $MAKE_THREADS \\\n && make install \\\n && rm -rf /phonetisaurus*\n#   Install Opengrm\nCOPY download/opengrm-ngram-1.3.3.tar.gz /\nRUN cd / \\\n && tar -xf opengrm-ngram-1.3.3.tar.gz \\\n && cd opengrm-ngram-1.3.3 \\\n && ./configure \\\n && make -j $MAKE_THREADS \\\n && make install \\\n && ldconfig \\\n && rm -rf /opengrm*\n#   Install Python dependencies\nRUN python3 -m pip install --no-cache-dir wheel\nCOPY download/jsgf2fst-0.1.0.tar.gz /download/\nRUN apt-get install libfreetype6-dev libpng-dev pkg-config libffi-dev libssl-dev -y\nCOPY requirements.txt /requirements.txt\nRUN if [ \"$BUILD_ARCH\" != \"amd64\" ] ; then grep -v flair /requirements.txt > /requirements-noflair.txt;mv /requirements-noflair.txt /requirements.txt ; fi\nRUN python3 -m pip install --no-cache-dir -r /requirements.txt\n#   Install Pocketsphinx Python module with no sound\nCOPY download/pocketsphinx-python.tar.gz /\nRUN python3 -m pip install --no-cache-dir /pocketsphinx-python.tar.gz \\\n && rm -rf /pocketsphinx-python*\n#   Install snowboy\nCOPY download/snowboy-1.3.0.tar.gz /\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ] ; then pip3 install --no-cache-dir /snowboy-1.3.0.tar.gz ; fi\n#   Install Mycroft Precise\nCOPY download/precise-engine_0.3.0_${CPU_ARCH}.tar.gz /precise-engine.tar.gz\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ] ; then cd / \\\n && tar -xzf /precise-engine.tar.gz \\\n && ln -s /precise-engine/precise-engine /usr/bin/precise-engine \\\n && rm /precise-engine.tar.gz ; fi\nRUN apt-get install flite libttspico-utils -y\nCOPY download/kaldi_${BUILD_ARCH}.tar.gz /kaldi.tar.gz\nRUN mkdir -p /opt \\\n && tar -C /opt -xzf /kaldi.tar.gz \\\n && rm /kaldi.tar.gz\nRUN ldconfig\n#   Copy bw and mllr_solve to /usr/bin\nRUN find / -name bw -exec cp '{}' /usr/bin/\nRUN find / -name mllr_solve -exec cp '{}' /usr/bin/\nRUN apt-get install pulseaudio -y\nCOPY etc/pulseaudio.client.conf /etc/pulse/client.conf\n#   Create new user\nENV UNAME=\"rhasspy\"\nRUN export UNAME=$UNAME UID=1000 GID=1000 \\\n && mkdir -p \"/home/${UNAME}\" \\\n && echo \"${UNAME}:x:${UID}:${GID}:${UNAME} User,,,:/home/${UNAME}:/bin/bash\" >> /etc/passwd \\\n && echo \"${UNAME}:x:${UID}:\" >> /etc/group \\\n && mkdir -p /etc/sudoers.d \\\n && echo \"${UNAME} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/${UNAME} \\\n && chmod 0440 /etc/sudoers.d/${UNAME} \\\n && chown ${UID}:${GID} -R /home/${UNAME} \\\n && gpasswd -a ${UNAME} audio\nENV RHASSPY_APP=\"/home/${UNAME}\"\n#   Copy script to run\nCOPY docker/run.sh /run.sh\nRUN chmod +x /run.sh\n#   Switch to new user\nUSER $UNAME\nENV HOME=\"/home/${UNAME}\"\nCOPY profiles/zh/profile.json profiles/zh/custom_words.txt profiles/zh/espeak_phonemes.txt profiles/zh/phoneme_examples.txt profiles/zh/frequent_words.txt profiles/zh/sentences.ini profiles/zh/stop_words.txt ${RHASSPY_APP}/profiles/zh/\nCOPY profiles/hi/ profiles/hi/profile.json profiles/hi/custom_words.txt profiles/hi/espeak_phonemes.txt profiles/hi/phoneme_examples.txt profiles/hi/frequent_words.txt profiles/hi/sentences.ini profiles/hi/stop_words.txt ${RHASSPY_APP}/profiles/hi/\nCOPY profiles/el/profile.json profiles/el/custom_words.txt profiles/el/espeak_phonemes.txt profiles/el/phoneme_examples.txt profiles/el/frequent_words.txt profiles/el/sentences.ini profiles/el/stop_words.txt ${RHASSPY_APP}/profiles/el/\nCOPY profiles/de/profile.json profiles/de/custom_words.txt profiles/de/espeak_phonemes.txt profiles/de/phoneme_examples.txt profiles/de/frequent_words.txt profiles/de/sentences.ini profiles/de/stop_words.txt ${RHASSPY_APP}/profiles/de/\nCOPY profiles/it/profile.json profiles/it/custom_words.txt profiles/it/espeak_phonemes.txt profiles/it/phoneme_examples.txt profiles/it/frequent_words.txt profiles/it/sentences.ini profiles/it/stop_words.txt ${RHASSPY_APP}/profiles/it/\nCOPY profiles/es/profile.json profiles/es/custom_words.txt profiles/es/espeak_phonemes.txt profiles/es/phoneme_examples.txt profiles/es/frequent_words.txt profiles/es/sentences.ini profiles/es/stop_words.txt ${RHASSPY_APP}/profiles/es/\nCOPY profiles/fr/profile.json profiles/fr/custom_words.txt profiles/fr/espeak_phonemes.txt profiles/fr/phoneme_examples.txt profiles/fr/frequent_words.txt profiles/fr/sentences.ini profiles/fr/stop_words.txt ${RHASSPY_APP}/profiles/fr/\nCOPY profiles/ru/profile.json profiles/ru/custom_words.txt profiles/ru/espeak_phonemes.txt profiles/ru/phoneme_examples.txt profiles/ru/frequent_words.txt profiles/ru/sentences.ini profiles/ru/stop_words.txt ${RHASSPY_APP}/profiles/ru/\nCOPY profiles/nl/profile.json profiles/nl/custom_words.txt profiles/nl/espeak_phonemes.txt profiles/nl/phoneme_examples.txt profiles/nl/frequent_words.txt profiles/nl/sentences.ini profiles/nl/stop_words.txt ${RHASSPY_APP}/profiles/nl/\nCOPY profiles/vi/profile.json profiles/vi/custom_words.txt profiles/vi/espeak_phonemes.txt profiles/vi/phoneme_examples.txt profiles/vi/frequent_words.txt profiles/vi/sentences.ini profiles/vi/stop_words.txt ${RHASSPY_APP}/profiles/vi/\nCOPY profiles/pt/profile.json profiles/pt/custom_words.txt profiles/pt/espeak_phonemes.txt profiles/pt/phoneme_examples.txt profiles/pt/frequent_words.txt profiles/pt/sentences.ini profiles/pt/stop_words.txt ${RHASSPY_APP}/profiles/pt/\nCOPY profiles/en/profile.json profiles/en/custom_words.txt profiles/en/espeak_phonemes.txt profiles/en/phoneme_examples.txt profiles/en/frequent_words.txt profiles/en/sentences.ini profiles/en/stop_words.txt ${RHASSPY_APP}/profiles/en/\nCOPY profiles/defaults.json ${RHASSPY_APP}/profiles/\nCOPY docker/rhasspy ${RHASSPY_APP}/bin/\nCOPY dist/ ${RHASSPY_APP}/dist/\nCOPY etc/wav/* ${RHASSPY_APP}/etc/wav/\nCOPY rhasspy/profile_schema.json ${RHASSPY_APP}/rhasspy/\nCOPY *.py ${RHASSPY_APP}/\nCOPY rhasspy/*.py ${RHASSPY_APP}/rhasspy/\nENV CONFIG_PATH=\"/data/options.json\"\nENTRYPOINT [\"/run.sh\"]\n","originalDockerfileUglifiedHash":"880a1717604bec97b73b2a662abe4c79","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/eab7ea365f8df2961955b9c1ddc54c8ef62f8e12.dockerfile"}