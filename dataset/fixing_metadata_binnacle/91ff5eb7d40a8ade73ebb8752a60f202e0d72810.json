{"seed":2306678691,"processedDockerfileHash":"5a8ec402a1091a8c490da289c0f197da","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Based on manual compile instructions at http://wiki.nginx.org/HttpLuaModule#Installation\n#   To build:\n#\n#   1) Install docker (http://docker.io)\n#   2) Clone nginx-lua-proxy repo if you haven't already: git clone https://github.com/Ermlab/nginx-lua-proxy.git\n#   3) Build: cd nginx-lua-proxy && docker build .\n#   4) Run: docker run -d --name redis redis\n#   5) Run: docker run -d --link redis:redis -P nginx-lua-proxy\nFROM ubuntu:14.04\nMAINTAINER Krzysztof Sopyła <sopyla@ermlab.com>\nENV VER_NGINX_DEVEL_KIT=\"0.2.19\"\nENV VER_LUA_NGINX_MODULE=\"0.9.16\"\nENV VER_NGINX=\"1.9.3\"\nENV VER_LUAJIT=\"2.0.4\"\nENV NGINX_DEVEL_KIT=\"ngx_devel_kit-${VER_NGINX_DEVEL_KIT}\"\nENV LUA_NGINX_MODULE=\"lua-nginx-module-${VER_LUA_NGINX_MODULE}\"\nENV NGINX_ROOT=\"/nginx\"\nENV WEB_DIR=\"${NGINX_ROOT}/html\"\n#  openresty modules\nENV VER_LUA_RESTY_REDIS=\"0.21\"\nENV LUA_RESTY_REDIS=\"lua-resty-redis-${VER_LUA_RESTY_REDIS}\"\nENV LUAJIT_LIB=\"/usr/local/lib\"\nENV LUAJIT_INC=\"/usr/local/include/luajit-2.0\"\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 supervisor=3.0b2-1ubuntu0.1 -qq -y )\n#   Instal lighweight DNS for proper nginx name resolution based on /etc/hosts\nRUN (apt-get update ;apt-get install --no-install-recommends dnsmasq=2.68-1ubuntu0.2 -qq -y )\n#  fix for dnsmasq in docker, it must run as user root:\nRUN sed -i 's/#user=/user=root/g' /etc/dnsmasq.conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   ***** BUILD DEPENDENCIES *****\n#   Common dependencies (Nginx and LUAJit)\nRUN (apt-get update ;apt-get install --no-install-recommends make=3.81-8.2ubuntu3 -qq -y )\n#   Nginx dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends libpcre3=1:8.31-2ubuntu2.3 -qq -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libpcre3-dev=1:8.31-2ubuntu2.3 -qq -y )\nRUN (apt-get update ;apt-get install --no-install-recommends zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 -qq -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libssl-dev=1.0.1f-1ubuntu2.27 -qq -y )\n#   LUAJit dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends gcc=4:4.8.2-1ubuntu6 -qq -y )\n#   ***** DOWNLOAD AND UNTAR *****\n#   Download modules\nRUN wget http://nginx.org/download/nginx-${VER_NGINX}.tar.gz\nRUN wget http://luajit.org/download/LuaJIT-${VER_LUAJIT}.tar.gz\nRUN wget https://github.com/simpl/ngx_devel_kit/archive/v${VER_NGINX_DEVEL_KIT}.tar.gz -O ${NGINX_DEVEL_KIT}.tar.gz\nRUN wget https://github.com/openresty/lua-nginx-module/archive/v${VER_LUA_NGINX_MODULE}.tar.gz -O ${LUA_NGINX_MODULE}.tar.gz\n#  Download openresty libs\nRUN wget https://github.com/openresty/lua-resty-redis/archive/v${VER_LUA_RESTY_REDIS}.tar.gz -O ${LUA_RESTY_REDIS}.tar.gz\n#   Untar\nRUN tar -xzvf nginx-${VER_NGINX}.tar.gz \\\n && rm nginx-${VER_NGINX}.tar.gz\nRUN tar -xzvf LuaJIT-${VER_LUAJIT}.tar.gz \\\n && rm LuaJIT-${VER_LUAJIT}.tar.gz\nRUN tar -xzvf ${NGINX_DEVEL_KIT}.tar.gz \\\n && rm ${NGINX_DEVEL_KIT}.tar.gz\nRUN tar -xzvf ${LUA_NGINX_MODULE}.tar.gz \\\n && rm ${LUA_NGINX_MODULE}.tar.gz\n#  Lua LIBS\nRUN tar -xzvf ${LUA_RESTY_REDIS}.tar.gz \\\n && rm ${LUA_RESTY_REDIS}.tar.gz\n#   copy openresty libraries to LUAJIT_LIB\nRUN cp -r ${LUA_RESTY_REDIS}/lib ${LUAJIT_LIB}/lua-libs\n#   ***** BUILD FROM SOURCE *****\n#   LuaJIT\nWORKDIR /LuaJIT-${VER_LUAJIT}\nRUN make\nRUN make install\n#   Nginx with LuaJIT\nWORKDIR /nginx-${VER_NGINX}\nRUN ./configure --prefix=${NGINX_ROOT} --with-ld-opt=\"-Wl,-rpath,${LUAJIT_LIB}\" --add-module=/${NGINX_DEVEL_KIT} --add-module=/${LUA_NGINX_MODULE}\nRUN make -j2\nRUN make install\nRUN ln -s ${NGINX_ROOT}/sbin/nginx /usr/local/sbin/nginx\n#   ***** MISC *****\nWORKDIR ${WEB_DIR}\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n#   ***** CLEANUP *****\nRUN rm -rf /nginx-${VER_NGINX}\nRUN rm -rf /LuaJIT-${VER_LUAJIT}\nRUN rm -rf /${NGINX_DEVEL_KIT}\nRUN rm -rf /${LUA_NGINX_MODULE}\n#   TODO: Uninstall build only dependencies?\n#   TODO: Remove env vars used only for build?\nCOPY nginx.conf /nginx/conf/nginx.conf\nCOPY nginx-lua.conf /nginx/conf/nginx-lua.conf\n#   Run nginx and dnsmasq under supervisor\nCMD [\"/usr/bin/supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Based on manual compile instructions at http://wiki.nginx.org/HttpLuaModule#Installation\n#  To build:\n#\n#  1) Install docker (http://docker.io)\n#  2) Clone nginx-lua-proxy repo if you haven't already: git clone https://github.com/Ermlab/nginx-lua-proxy.git\n#  3) Build: cd nginx-lua-proxy && docker build .\n#  4) Run: docker run -d --name redis redis\n#  5) Run: docker run -d --link redis:redis -P nginx-lua-proxy\nFROM ubuntu:14.04\nMAINTAINER Krzysztof Sopyła <sopyla@ermlab.com>\nENV VER_NGINX_DEVEL_KIT=\"0.2.19\"\nENV VER_LUA_NGINX_MODULE=\"0.9.16\"\nENV VER_NGINX=\"1.9.3\"\nENV VER_LUAJIT=\"2.0.4\"\nENV NGINX_DEVEL_KIT=\"ngx_devel_kit-${VER_NGINX_DEVEL_KIT}\"\nENV LUA_NGINX_MODULE=\"lua-nginx-module-${VER_LUA_NGINX_MODULE}\"\nENV NGINX_ROOT=\"/nginx\"\nENV WEB_DIR=\"${NGINX_ROOT}/html\"\n# openresty modules\nENV VER_LUA_RESTY_REDIS=\"0.21\"\nENV LUA_RESTY_REDIS=\"lua-resty-redis-${VER_LUA_RESTY_REDIS}\"\nENV LUAJIT_LIB=\"/usr/local/lib\"\nENV LUAJIT_INC=\"/usr/local/include/luajit-2.0\"\nRUN apt-get update -qq\nRUN apt-get install wget supervisor -qq -y\n#  Instal lighweight DNS for proper nginx name resolution based on /etc/hosts\nRUN apt-get install dnsmasq -qq -y\n# fix for dnsmasq in docker, it must run as user root:\nRUN sed -i 's/#user=/user=root/g' /etc/dnsmasq.conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  ***** BUILD DEPENDENCIES *****\n#  Common dependencies (Nginx and LUAJit)\nRUN apt-get install make -qq -y\n#  Nginx dependencies\nRUN apt-get install libpcre3 -qq -y\nRUN apt-get install libpcre3-dev -qq -y\nRUN apt-get install zlib1g-dev -qq -y\nRUN apt-get install libssl-dev -qq -y\n#  LUAJit dependencies\nRUN apt-get install gcc -qq -y\n#  ***** DOWNLOAD AND UNTAR *****\n#  Download modules\nRUN wget http://nginx.org/download/nginx-${VER_NGINX}.tar.gz\nRUN wget http://luajit.org/download/LuaJIT-${VER_LUAJIT}.tar.gz\nRUN wget https://github.com/simpl/ngx_devel_kit/archive/v${VER_NGINX_DEVEL_KIT}.tar.gz -O ${NGINX_DEVEL_KIT}.tar.gz\nRUN wget https://github.com/openresty/lua-nginx-module/archive/v${VER_LUA_NGINX_MODULE}.tar.gz -O ${LUA_NGINX_MODULE}.tar.gz\n# Download openresty libs\nRUN wget https://github.com/openresty/lua-resty-redis/archive/v${VER_LUA_RESTY_REDIS}.tar.gz -O ${LUA_RESTY_REDIS}.tar.gz\n#  Untar\nRUN tar -xzvf nginx-${VER_NGINX}.tar.gz \\\n && rm nginx-${VER_NGINX}.tar.gz\nRUN tar -xzvf LuaJIT-${VER_LUAJIT}.tar.gz \\\n && rm LuaJIT-${VER_LUAJIT}.tar.gz\nRUN tar -xzvf ${NGINX_DEVEL_KIT}.tar.gz \\\n && rm ${NGINX_DEVEL_KIT}.tar.gz\nRUN tar -xzvf ${LUA_NGINX_MODULE}.tar.gz \\\n && rm ${LUA_NGINX_MODULE}.tar.gz\n# Lua LIBS\nRUN tar -xzvf ${LUA_RESTY_REDIS}.tar.gz \\\n && rm ${LUA_RESTY_REDIS}.tar.gz\n#  copy openresty libraries to LUAJIT_LIB\nRUN cp -r ${LUA_RESTY_REDIS}/lib ${LUAJIT_LIB}/lua-libs\n#  ***** BUILD FROM SOURCE *****\n#  LuaJIT\nWORKDIR /LuaJIT-${VER_LUAJIT}\nRUN make\nRUN make install\n#  Nginx with LuaJIT\nWORKDIR /nginx-${VER_NGINX}\nRUN ./configure --prefix=${NGINX_ROOT} --with-ld-opt=\"-Wl,-rpath,${LUAJIT_LIB}\" --add-module=/${NGINX_DEVEL_KIT} --add-module=/${LUA_NGINX_MODULE}\nRUN make -j2\nRUN make install\nRUN ln -s ${NGINX_ROOT}/sbin/nginx /usr/local/sbin/nginx\n#  ***** MISC *****\nWORKDIR ${WEB_DIR}\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n#  ***** CLEANUP *****\nRUN rm -rf /nginx-${VER_NGINX}\nRUN rm -rf /LuaJIT-${VER_LUAJIT}\nRUN rm -rf /${NGINX_DEVEL_KIT}\nRUN rm -rf /${LUA_NGINX_MODULE}\n#  TODO: Uninstall build only dependencies?\n#  TODO: Remove env vars used only for build?\nCOPY nginx.conf /nginx/conf/nginx.conf\nCOPY nginx-lua.conf /nginx/conf/nginx-lua.conf\n#  Run nginx and dnsmasq under supervisor\nCMD [\"/usr/bin/supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"96c270014bc9fc4625438c57897d1fa3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Based on manual compile instructions at http://wiki.nginx.org/HttpLuaModule#Installation\n#   To build:\n#\n#   1) Install docker (http://docker.io)\n#   2) Clone nginx-lua-proxy repo if you haven't already: git clone https://github.com/Ermlab/nginx-lua-proxy.git\n#   3) Build: cd nginx-lua-proxy && docker build .\n#   4) Run: docker run -d --name redis redis\n#   5) Run: docker run -d --link redis:redis -P nginx-lua-proxy\nFROM ubuntu:14.04\nMAINTAINER Krzysztof Sopyła <sopyla@ermlab.com>\nENV VER_NGINX_DEVEL_KIT=\"0.2.19\"\nENV VER_LUA_NGINX_MODULE=\"0.9.16\"\nENV VER_NGINX=\"1.9.3\"\nENV VER_LUAJIT=\"2.0.4\"\nENV NGINX_DEVEL_KIT=\"ngx_devel_kit-${VER_NGINX_DEVEL_KIT}\"\nENV LUA_NGINX_MODULE=\"lua-nginx-module-${VER_LUA_NGINX_MODULE}\"\nENV NGINX_ROOT=\"/nginx\"\nENV WEB_DIR=\"${NGINX_ROOT}/html\"\n#  openresty modules\nENV VER_LUA_RESTY_REDIS=\"0.21\"\nENV LUA_RESTY_REDIS=\"lua-resty-redis-${VER_LUA_RESTY_REDIS}\"\nENV LUAJIT_LIB=\"/usr/local/lib\"\nENV LUAJIT_INC=\"/usr/local/include/luajit-2.0\"\nRUN apt-get update -qq\nRUN apt-get install wget supervisor -qq -y\n#   Instal lighweight DNS for proper nginx name resolution based on /etc/hosts\nRUN apt-get install dnsmasq -qq -y\n#  fix for dnsmasq in docker, it must run as user root:\nRUN sed -i 's/#user=/user=root/g' /etc/dnsmasq.conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   ***** BUILD DEPENDENCIES *****\n#   Common dependencies (Nginx and LUAJit)\nRUN apt-get install make -qq -y\n#   Nginx dependencies\nRUN apt-get install libpcre3 -qq -y\nRUN apt-get install libpcre3-dev -qq -y\nRUN apt-get install zlib1g-dev -qq -y\nRUN apt-get install libssl-dev -qq -y\n#   LUAJit dependencies\nRUN apt-get install gcc -qq -y\n#   ***** DOWNLOAD AND UNTAR *****\n#   Download modules\nRUN wget http://nginx.org/download/nginx-${VER_NGINX}.tar.gz\nRUN wget http://luajit.org/download/LuaJIT-${VER_LUAJIT}.tar.gz\nRUN wget https://github.com/simpl/ngx_devel_kit/archive/v${VER_NGINX_DEVEL_KIT}.tar.gz -O ${NGINX_DEVEL_KIT}.tar.gz\nRUN wget https://github.com/openresty/lua-nginx-module/archive/v${VER_LUA_NGINX_MODULE}.tar.gz -O ${LUA_NGINX_MODULE}.tar.gz\n#  Download openresty libs\nRUN wget https://github.com/openresty/lua-resty-redis/archive/v${VER_LUA_RESTY_REDIS}.tar.gz -O ${LUA_RESTY_REDIS}.tar.gz\n#   Untar\nRUN tar -xzvf nginx-${VER_NGINX}.tar.gz \\\n && rm nginx-${VER_NGINX}.tar.gz\nRUN tar -xzvf LuaJIT-${VER_LUAJIT}.tar.gz \\\n && rm LuaJIT-${VER_LUAJIT}.tar.gz\nRUN tar -xzvf ${NGINX_DEVEL_KIT}.tar.gz \\\n && rm ${NGINX_DEVEL_KIT}.tar.gz\nRUN tar -xzvf ${LUA_NGINX_MODULE}.tar.gz \\\n && rm ${LUA_NGINX_MODULE}.tar.gz\n#  Lua LIBS\nRUN tar -xzvf ${LUA_RESTY_REDIS}.tar.gz \\\n && rm ${LUA_RESTY_REDIS}.tar.gz\n#   copy openresty libraries to LUAJIT_LIB\nRUN cp -r ${LUA_RESTY_REDIS}/lib ${LUAJIT_LIB}/lua-libs\n#   ***** BUILD FROM SOURCE *****\n#   LuaJIT\nWORKDIR /LuaJIT-${VER_LUAJIT}\nRUN make\nRUN make install\n#   Nginx with LuaJIT\nWORKDIR /nginx-${VER_NGINX}\nRUN ./configure --prefix=${NGINX_ROOT} --with-ld-opt=\"-Wl,-rpath,${LUAJIT_LIB}\" --add-module=/${NGINX_DEVEL_KIT} --add-module=/${LUA_NGINX_MODULE}\nRUN make -j2\nRUN make install\nRUN ln -s ${NGINX_ROOT}/sbin/nginx /usr/local/sbin/nginx\n#   ***** MISC *****\nWORKDIR ${WEB_DIR}\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n#   ***** CLEANUP *****\nRUN rm -rf /nginx-${VER_NGINX}\nRUN rm -rf /LuaJIT-${VER_LUAJIT}\nRUN rm -rf /${NGINX_DEVEL_KIT}\nRUN rm -rf /${LUA_NGINX_MODULE}\n#   TODO: Uninstall build only dependencies?\n#   TODO: Remove env vars used only for build?\nCOPY nginx.conf /nginx/conf/nginx.conf\nCOPY nginx-lua.conf /nginx/conf/nginx-lua.conf\n#   Run nginx and dnsmasq under supervisor\nCMD [\"/usr/bin/supervisord\"]\n","originalDockerfileUglifiedHash":"6b2d769806966bd618ed8adc1629ad9f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/91ff5eb7d40a8ade73ebb8752a60f202e0d72810.dockerfile"}