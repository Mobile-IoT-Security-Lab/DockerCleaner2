{"seed":2441853434,"processedDockerfileHash":"dd4d0dd871038d5d2c8a1ba6bfc91474","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This file describes the standard way to build Docker, using docker\n#\n#   Usage:\n#\n#   # Assemble the full dev environment. This is slow the first time.\n#   docker build -t docker -f Dockerfile.gccgo .\n#\nFROM gcc:6.1\n#   Packaged dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apparmor aufs-tools btrfs-tools build-essential curl git iptables jq net-tools libapparmor-dev libcap-dev libsqlite3-dev mercurial net-tools parallel python-dev python-mock python-pip python-websocket -y\n#   Get lvm2 source for compiling statically\nRUN git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2\n#   see https://git.fedorahosted.org/cgit/lvm2.git/refs/tags for release tags\n#   Compile and install lvm2\nRUN cd /usr/local/lvm2 \\\n && ./configure --enable-static_link \\\n && make device-mapper \\\n && make install_device-mapper\n#   see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL\n#   install seccomp: the version shipped in jessie is too old\nENV SECCOMP_VERSION=\"v2.3.1\"\nRUN set -x \\\n && export SECCOMP_PATH=$( mktemp -d ;) \\\n && git clone https://github.com/seccomp/libseccomp.git \"$SECCOMP_PATH\" \\\n && (cd \"$SECCOMP_PATH\" \\\n && git checkout \"$SECCOMP_VERSION\" \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install ) \\\n && rm -rf \"$SECCOMP_PATH\"\nENV GOPATH=\"/go:/go/src/github.com/docker/docker/vendor\"\n#   Get the \"docker-py\" source so we can run their integration tests\nENV DOCKER_PY_COMMIT=\"7befe694bd21e3c54bb1d7825270ea4bd6864c13\"\nRUN git clone https://github.com/docker/docker-py.git /docker-py \\\n && cd /docker-py \\\n && git checkout -q $DOCKER_PY_COMMIT\n#   Add an unprivileged user to be used for tests which need it\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser\nVOLUME /var/lib/docker\nWORKDIR /go/src/github.com/docker/docker\nENV DOCKER_BUILDTAGS=\"apparmor seccomp selinux\"\n#   Install runc\nENV RUNC_COMMIT=\"50a19c6ff828c58e5dab13830bd3dacde268afe5\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/runc.git \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && cd \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && git checkout -q \"$RUNC_COMMIT\" \\\n && make static BUILDTAGS=\"seccomp apparmor selinux\" \\\n && cp runc /usr/local/bin/docker-runc \\\n && rm -rf \"$GOPATH\"\n#   Install containerd\nENV CONTAINERD_COMMIT=\"2a5e70cbf65457815ee76b7e5dd2a01292d9eca8\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/containerd.git \"$GOPATH/src/github.com/docker/containerd\" \\\n && cd \"$GOPATH/src/github.com/docker/containerd\" \\\n && git checkout -q \"$CONTAINERD_COMMIT\" \\\n && make static \\\n && cp bin/containerd /usr/local/bin/docker-containerd \\\n && cp bin/containerd-shim /usr/local/bin/docker-containerd-shim \\\n && cp bin/ctr /usr/local/bin/docker-containerd-ctr \\\n && rm -rf \"$GOPATH\"\n#   Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n#   Upload docker source\nCOPY . /go/src/github.com/docker/docker\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This file describes the standard way to build Docker, using docker\n#\n#  Usage:\n#\n#  # Assemble the full dev environment. This is slow the first time.\n#  docker build -t docker -f Dockerfile.gccgo .\n#\nFROM gcc:6.1\n#  Packaged dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apparmor aufs-tools btrfs-tools build-essential curl git iptables jq net-tools libapparmor-dev libcap-dev libsqlite3-dev mercurial net-tools parallel python-dev python-mock python-pip python-websocket -y\n#  Get lvm2 source for compiling statically\nRUN git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2\n#  see https://git.fedorahosted.org/cgit/lvm2.git/refs/tags for release tags\n#  Compile and install lvm2\nRUN cd /usr/local/lvm2 \\\n && ./configure --enable-static_link \\\n && make device-mapper \\\n && make install_device-mapper\n#  see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL\n#  install seccomp: the version shipped in jessie is too old\nENV SECCOMP_VERSION=\"v2.3.1\"\nRUN set -x \\\n && export SECCOMP_PATH=$( mktemp -d ;) \\\n && git clone https://github.com/seccomp/libseccomp.git \"$SECCOMP_PATH\" \\\n && (cd \"$SECCOMP_PATH\" \\\n && git checkout \"$SECCOMP_VERSION\" \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install ) \\\n && rm -rf \"$SECCOMP_PATH\"\nENV GOPATH=\"/go:/go/src/github.com/docker/docker/vendor\"\n#  Get the \"docker-py\" source so we can run their integration tests\nENV DOCKER_PY_COMMIT=\"7befe694bd21e3c54bb1d7825270ea4bd6864c13\"\nRUN git clone https://github.com/docker/docker-py.git /docker-py \\\n && cd /docker-py \\\n && git checkout -q $DOCKER_PY_COMMIT\n#  Add an unprivileged user to be used for tests which need it\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser\nVOLUME /var/lib/docker\nWORKDIR /go/src/github.com/docker/docker\nENV DOCKER_BUILDTAGS=\"apparmor seccomp selinux\"\n#  Install runc\nENV RUNC_COMMIT=\"50a19c6ff828c58e5dab13830bd3dacde268afe5\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/runc.git \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && cd \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && git checkout -q \"$RUNC_COMMIT\" \\\n && make static BUILDTAGS=\"seccomp apparmor selinux\" \\\n && cp runc /usr/local/bin/docker-runc \\\n && rm -rf \"$GOPATH\"\n#  Install containerd\nENV CONTAINERD_COMMIT=\"2a5e70cbf65457815ee76b7e5dd2a01292d9eca8\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/containerd.git \"$GOPATH/src/github.com/docker/containerd\" \\\n && cd \"$GOPATH/src/github.com/docker/containerd\" \\\n && git checkout -q \"$CONTAINERD_COMMIT\" \\\n && make static \\\n && cp bin/containerd /usr/local/bin/docker-containerd \\\n && cp bin/containerd-shim /usr/local/bin/docker-containerd-shim \\\n && cp bin/ctr /usr/local/bin/docker-containerd-ctr \\\n && rm -rf \"$GOPATH\"\n#  Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n#  Upload docker source\nCOPY . /go/src/github.com/docker/docker\n","injectedSmells":[],"originalDockerfileHash":"c06e7dd7e8d030dbcd128aa1918bb9fa","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This file describes the standard way to build Docker, using docker\n#\n#   Usage:\n#\n#   # Assemble the full dev environment. This is slow the first time.\n#   docker build -t docker -f Dockerfile.gccgo .\n#\nFROM gcc:6.1\n#   Packaged dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apparmor aufs-tools btrfs-tools build-essential curl git iptables jq net-tools libapparmor-dev libcap-dev libsqlite3-dev mercurial net-tools parallel python-dev python-mock python-pip python-websocket -y\n#   Get lvm2 source for compiling statically\nRUN git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2\n#   see https://git.fedorahosted.org/cgit/lvm2.git/refs/tags for release tags\n#   Compile and install lvm2\nRUN cd /usr/local/lvm2 \\\n && ./configure --enable-static_link \\\n && make device-mapper \\\n && make install_device-mapper\n#   see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL\n#   install seccomp: the version shipped in jessie is too old\nENV SECCOMP_VERSION=\"v2.3.1\"\nRUN set -x \\\n && export SECCOMP_PATH=$( mktemp -d ;) \\\n && git clone https://github.com/seccomp/libseccomp.git \"$SECCOMP_PATH\" \\\n && (cd \"$SECCOMP_PATH\" \\\n && git checkout \"$SECCOMP_VERSION\" \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install ) \\\n && rm -rf \"$SECCOMP_PATH\"\nENV GOPATH=\"/go:/go/src/github.com/docker/docker/vendor\"\n#   Get the \"docker-py\" source so we can run their integration tests\nENV DOCKER_PY_COMMIT=\"7befe694bd21e3c54bb1d7825270ea4bd6864c13\"\nRUN git clone https://github.com/docker/docker-py.git /docker-py \\\n && cd /docker-py \\\n && git checkout -q $DOCKER_PY_COMMIT\n#   Add an unprivileged user to be used for tests which need it\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser\nVOLUME /var/lib/docker\nWORKDIR /go/src/github.com/docker/docker\nENV DOCKER_BUILDTAGS=\"apparmor seccomp selinux\"\n#   Install runc\nENV RUNC_COMMIT=\"50a19c6ff828c58e5dab13830bd3dacde268afe5\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/runc.git \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && cd \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && git checkout -q \"$RUNC_COMMIT\" \\\n && make static BUILDTAGS=\"seccomp apparmor selinux\" \\\n && cp runc /usr/local/bin/docker-runc \\\n && rm -rf \"$GOPATH\"\n#   Install containerd\nENV CONTAINERD_COMMIT=\"2a5e70cbf65457815ee76b7e5dd2a01292d9eca8\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/containerd.git \"$GOPATH/src/github.com/docker/containerd\" \\\n && cd \"$GOPATH/src/github.com/docker/containerd\" \\\n && git checkout -q \"$CONTAINERD_COMMIT\" \\\n && make static \\\n && cp bin/containerd /usr/local/bin/docker-containerd \\\n && cp bin/containerd-shim /usr/local/bin/docker-containerd-shim \\\n && cp bin/ctr /usr/local/bin/docker-containerd-ctr \\\n && rm -rf \"$GOPATH\"\n#   Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n#   Upload docker source\nCOPY . /go/src/github.com/docker/docker\n","originalDockerfileUglifiedHash":"761121ca12726802e23fd5bf9b16cf84","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9f79ce45501eab2947a35c4375283b319688792c.dockerfile"}