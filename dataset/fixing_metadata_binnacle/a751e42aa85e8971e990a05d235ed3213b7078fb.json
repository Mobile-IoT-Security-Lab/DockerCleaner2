{"seed":1978543758,"processedDockerfileHash":"040a46260ae4602cff746b61df28efff","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck"],"processedDockerfile":"#  ######### DON'T MODIFY THIS SECTION, SCROLL DOWN ###########\n#   The next configurations do some configuring that can take a\n#   bit of time, so best make modifications AFTER them to allow\n#   utilization of cached steps.\n#\n#   Note: As of 2015/03/05 this is Ubuntu 14.04.\nFROM ubuntu\nMAINTAINER Aron Ahmadia <aahmadia@continuum.io>\n#  ------------ Install development software --------------#\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.88.1-7ubuntu1 g++=4:12.2.0-3ubuntu1 git=1:2.39.2-1ubuntu1 libssl-dev=3.0.8-1ubuntu1 make=4.3-4.1build1 nginx=1.22.0-1ubuntu3 openjdk-7-jdk pkg-config=1.8.1-1ubuntu2 rabbitmq-server=3.10.8-1.1 wget=1.21.3-1ubuntu1 -y )\nRUN groupadd -r explorer -g 433 \\\n && useradd -u 431 -m -r -g explorer -d /home/explorer -s /bin/bash -c \"Docker image user\" explorer \\\n && chown -R explorer:explorer /home/explorer\nRUN adduser explorer sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER explorer\nWORKDIR /home/explorer\nRUN wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\nRUN bash ./Miniconda-latest-Linux-x86_64.sh -b\nRUN git clone https://github.com/memex-explorer/memex-explorer\nWORKDIR /home/explorer/memex-explorer/\nWORKDIR /home/explorer/memex-explorer\nENV PATH=\"/home/explorer/miniconda2/bin:$PATH\"\nRUN conda update conda -y\nRUN conda install conda-env -y\nRUN conda env update\nWORKDIR /home/explorer/memex-explorer/source/memex\nRUN cp settings_files/dev_settings.py settings.py\nWORKDIR /home/explorer/memex-explorer/source\n#  replaces source activate... sorta\nENV PATH=\"/home/explorer/miniconda2/envs/memex/bin:$PATH\"\nENV CONDA_DEFAULT_ENV=\"memex\"\nENV CONDA_ENV_PATH=\"/home/explorer/miniconda2\"\n#   move these into another environment.yaml?  Or better, apply them as a patch?\nRUN conda install -c memex ddt\n#   TAD dependencies\nRUN pip install celery==5.2.7 fisher==0.1.10 elasticsearch==8.7.0 flask==2.2.3 flask_restful==0.3.9\n#   ready for deployment\nRUN python manage.py migrate\nRUN python manage.py collectstatic -v0 --noinput\n#   Install elasticdump\nRUN npm install elasticdump@6.99.0 -g\n#  ------------- Pull TAD software --------------#\nUSER root\nRUN mkdir -p /service/build\nWORKDIR /service/build\nRUN git clone https://github.com/autonlab/tad.git\n#   Build and install TAD library.\nRUN ln -s /service/build/tad/service /service/tad\nRUN mkdir /service/tad/config\n#   Explorer configuration\nUSER explorer\nCOPY supervisord.conf /home/explorer/memex-explorer/source/supervisord.conf\nCOPY docker_settings.py /home/explorer/memex-explorer/source/memex/settings.py\n#   patched in\nWORKDIR /home/explorer/memex-explorer\nRUN conda install markdown\nRUN markdown_py CHANGES.md > source/base/static/changes.html\nWORKDIR /home/explorer/memex-explorer/docs\nRUN make html\nRUN mv build/html ../source/base/static/docs\n#   TAD configuration\nCOPY tad.cfg /service/tad/config/tad.cfg\n#   UNCOMMENT THIS SECTION TO PRELOAD THE ELASTICSEARCH INSTANCE\n#   ------------------------------------------------------------- #\n#   Now bring over elasticsearch index data\n#   COPY elasticdump.json /home/explorer/elasticdump.json\n#   Load data\n#   Elasticsearch data\n#   COPY populate_elasticsearch.sh /home/explorer/populate_elasticsearch.sh\n#   WORKDIR /home/explorer\n#   RUN /bin/bash ./populate_elasticsearch.sh\n#   ------------------------------------------------------------- #\n#   ------------------------------------------------------------- #\n#   UNCOMMENT THIS SECTION TO PRELOAD CRAWL DATA\n#   Crawl data\n#   COPY resources /home/explorer/memex-explorer/source/resources/\n#   ------------------------------------------------------------- #\n#   ------------------------------------------------------------- #\n#   UNCOMMENT THIS SECTION TO PRELOAD SQL DATABASE\n#   SQLite (Django)\n#   COPY db.sqlite3 /home/explorer/memex-explorer/source/db.sqlite3\n#   ------------------------------------------------------------- #\n#   TAD run script\nCOPY tad_run /home/explorer/miniconda2/envs/memex/bin/tad\nCOPY nginx.conf /etc/nginx/sites-enabled/default\n#   uncomment these to install secrets into the container\n#   COPY secrets/nginx.crt /etc/nginx/ssl/nginx.crt\n#   COPY secrets/nginx.key /etc/nginx/ssl/nginx.key\n#   COPY secrets/htpasswd /etc/nginx/htpasswd\n#   Permissions clean-up\nUSER root\nRUN chown -R explorer /service\nRUN chown -R explorer /home/explorer/memex-explorer/source\nRUN chmod +x /home/explorer/miniconda2/envs/memex/bin/tad\nRUN chown -R explorer /home/explorer/miniconda2/envs/memex/bin/tad\n#  #################### INSTALLATION END #####################\n#   Expose the default ports\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n#   Set default container command\nUSER explorer\nWORKDIR /home/explorer/memex-explorer/source\nENV HTTP_PROTOCOL=\"http\"\nENV WS_PROTOCOL=\"ws\"\nENV INLINE=\"1\"\nENTRYPOINT \"supervisord\"\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ######### DON'T MODIFY THIS SECTION, SCROLL DOWN ###########\n#  The next configurations do some configuring that can take a\n#  bit of time, so best make modifications AFTER them to allow\n#  utilization of cached steps.\n#\n#  Note: As of 2015/03/05 this is Ubuntu 14.04.\nFROM ubuntu\nMAINTAINER Aron Ahmadia <aahmadia@continuum.io>\n# ------------ Install development software --------------#\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update\nRUN apt-get install curl g++ git libssl-dev make nginx openjdk-7-jdk pkg-config rabbitmq-server wget -y\nRUN groupadd -r explorer -g 433 \\\n && useradd -u 431 -m -r -g explorer -d /home/explorer -s /bin/bash -c \"Docker image user\" explorer \\\n && chown -R explorer:explorer /home/explorer\nRUN adduser explorer sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER explorer\nWORKDIR /home/explorer\nRUN wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\nRUN bash ./Miniconda-latest-Linux-x86_64.sh -b\nRUN git clone https://github.com/memex-explorer/memex-explorer\nWORKDIR /home/explorer/memex-explorer/\nWORKDIR /home/explorer/memex-explorer\nENV PATH=\"/home/explorer/miniconda2/bin:$PATH\"\nRUN conda update conda -y\nRUN conda install conda-env -y\nRUN conda env update\nWORKDIR /home/explorer/memex-explorer/source/memex\nRUN cp settings_files/dev_settings.py settings.py\nWORKDIR /home/explorer/memex-explorer/source\n# replaces source activate... sorta\nENV PATH=\"/home/explorer/miniconda2/envs/memex/bin:$PATH\"\nENV CONDA_DEFAULT_ENV=\"memex\"\nENV CONDA_ENV_PATH=\"/home/explorer/miniconda2\"\n#  move these into another environment.yaml?  Or better, apply them as a patch?\nRUN conda install -c memex ddt\n#  TAD dependencies\nRUN pip install celery fisher elasticsearch flask flask_restful\n#  ready for deployment\nRUN python manage.py migrate\nRUN python manage.py collectstatic -v0 --noinput\n#  Install elasticdump\nRUN npm install elasticdump -g\n# ------------- Pull TAD software --------------#\nUSER root\nRUN mkdir -p /service/build\nWORKDIR /service/build\nRUN git clone https://github.com/autonlab/tad.git\n#  Build and install TAD library.\nRUN ln -s /service/build/tad/service /service/tad\nRUN mkdir /service/tad/config\n#  Explorer configuration\nUSER explorer\nCOPY supervisord.conf /home/explorer/memex-explorer/source/supervisord.conf\nCOPY docker_settings.py /home/explorer/memex-explorer/source/memex/settings.py\n#  patched in\nWORKDIR /home/explorer/memex-explorer\nRUN conda install markdown\nRUN markdown_py CHANGES.md > source/base/static/changes.html\nWORKDIR /home/explorer/memex-explorer/docs\nRUN make html\nRUN mv build/html ../source/base/static/docs\n#  TAD configuration\nCOPY tad.cfg /service/tad/config/tad.cfg\n#  UNCOMMENT THIS SECTION TO PRELOAD THE ELASTICSEARCH INSTANCE\n#  ------------------------------------------------------------- #\n#  Now bring over elasticsearch index data\n#  COPY elasticdump.json /home/explorer/elasticdump.json\n#  Load data\n#  Elasticsearch data\n#  COPY populate_elasticsearch.sh /home/explorer/populate_elasticsearch.sh\n#  WORKDIR /home/explorer\n#  RUN /bin/bash ./populate_elasticsearch.sh\n#  ------------------------------------------------------------- #\n#  ------------------------------------------------------------- #\n#  UNCOMMENT THIS SECTION TO PRELOAD CRAWL DATA\n#  Crawl data\n#  COPY resources /home/explorer/memex-explorer/source/resources/\n#  ------------------------------------------------------------- #\n#  ------------------------------------------------------------- #\n#  UNCOMMENT THIS SECTION TO PRELOAD SQL DATABASE\n#  SQLite (Django)\n#  COPY db.sqlite3 /home/explorer/memex-explorer/source/db.sqlite3\n#  ------------------------------------------------------------- #\n#  TAD run script\nCOPY tad_run /home/explorer/miniconda2/envs/memex/bin/tad\nCOPY nginx.conf /etc/nginx/sites-enabled/default\n#  uncomment these to install secrets into the container\n#  COPY secrets/nginx.crt /etc/nginx/ssl/nginx.crt\n#  COPY secrets/nginx.key /etc/nginx/ssl/nginx.key\n#  COPY secrets/htpasswd /etc/nginx/htpasswd\n#  Permissions clean-up\nUSER root\nRUN chown -R explorer /service\nRUN chown -R explorer /home/explorer/memex-explorer/source\nRUN chmod +x /home/explorer/miniconda2/envs/memex/bin/tad\nRUN chown -R explorer /home/explorer/miniconda2/envs/memex/bin/tad\n# #################### INSTALLATION END #####################\n#  Expose the default ports\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n#  Set default container command\nUSER explorer\nWORKDIR /home/explorer/memex-explorer/source\nENV HTTP_PROTOCOL=\"http\"\nENV WS_PROTOCOL=\"ws\"\nENV INLINE=\"1\"\nENTRYPOINT \"supervisord\"\n","injectedSmells":[],"originalDockerfileHash":"928b5f6af2439682b7dc441875ee2e8e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ######### DON'T MODIFY THIS SECTION, SCROLL DOWN ###########\n#   The next configurations do some configuring that can take a\n#   bit of time, so best make modifications AFTER them to allow\n#   utilization of cached steps.\n#\n#   Note: As of 2015/03/05 this is Ubuntu 14.04.\nFROM ubuntu\nMAINTAINER Aron Ahmadia <aahmadia@continuum.io>\n#  ------------ Install development software --------------#\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update\nRUN apt-get install curl g++ git libssl-dev make nginx openjdk-7-jdk pkg-config rabbitmq-server wget -y\nRUN groupadd -r explorer -g 433 \\\n && useradd -u 431 -m -r -g explorer -d /home/explorer -s /bin/bash -c \"Docker image user\" explorer \\\n && chown -R explorer:explorer /home/explorer\nRUN adduser explorer sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER explorer\nWORKDIR /home/explorer\nRUN wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\nRUN bash ./Miniconda-latest-Linux-x86_64.sh -b\nRUN git clone https://github.com/memex-explorer/memex-explorer\nWORKDIR /home/explorer/memex-explorer/\nWORKDIR /home/explorer/memex-explorer\nENV PATH=\"/home/explorer/miniconda2/bin:$PATH\"\nRUN conda update conda -y\nRUN conda install conda-env -y\nRUN conda env update\nWORKDIR /home/explorer/memex-explorer/source/memex\nRUN cp settings_files/dev_settings.py settings.py\nWORKDIR /home/explorer/memex-explorer/source\n#  replaces source activate... sorta\nENV PATH=\"/home/explorer/miniconda2/envs/memex/bin:$PATH\"\nENV CONDA_DEFAULT_ENV=\"memex\"\nENV CONDA_ENV_PATH=\"/home/explorer/miniconda2\"\n#   move these into another environment.yaml?  Or better, apply them as a patch?\nRUN conda install -c memex ddt\n#   TAD dependencies\nRUN pip install celery fisher elasticsearch flask flask_restful\n#   ready for deployment\nRUN python manage.py migrate\nRUN python manage.py collectstatic -v0 --noinput\n#   Install elasticdump\nRUN npm install elasticdump -g\n#  ------------- Pull TAD software --------------#\nUSER root\nRUN mkdir -p /service/build\nWORKDIR /service/build\nRUN git clone https://github.com/autonlab/tad.git\n#   Build and install TAD library.\nRUN ln -s /service/build/tad/service /service/tad\nRUN mkdir /service/tad/config\n#   Explorer configuration\nUSER explorer\nCOPY supervisord.conf /home/explorer/memex-explorer/source/supervisord.conf\nCOPY docker_settings.py /home/explorer/memex-explorer/source/memex/settings.py\n#   patched in\nWORKDIR /home/explorer/memex-explorer\nRUN conda install markdown\nRUN markdown_py CHANGES.md > source/base/static/changes.html\nWORKDIR /home/explorer/memex-explorer/docs\nRUN make html\nRUN mv build/html ../source/base/static/docs\n#   TAD configuration\nCOPY tad.cfg /service/tad/config/tad.cfg\n#   UNCOMMENT THIS SECTION TO PRELOAD THE ELASTICSEARCH INSTANCE\n#   ------------------------------------------------------------- #\n#   Now bring over elasticsearch index data\n#   COPY elasticdump.json /home/explorer/elasticdump.json\n#   Load data\n#   Elasticsearch data\n#   COPY populate_elasticsearch.sh /home/explorer/populate_elasticsearch.sh\n#   WORKDIR /home/explorer\n#   RUN /bin/bash ./populate_elasticsearch.sh\n#   ------------------------------------------------------------- #\n#   ------------------------------------------------------------- #\n#   UNCOMMENT THIS SECTION TO PRELOAD CRAWL DATA\n#   Crawl data\n#   COPY resources /home/explorer/memex-explorer/source/resources/\n#   ------------------------------------------------------------- #\n#   ------------------------------------------------------------- #\n#   UNCOMMENT THIS SECTION TO PRELOAD SQL DATABASE\n#   SQLite (Django)\n#   COPY db.sqlite3 /home/explorer/memex-explorer/source/db.sqlite3\n#   ------------------------------------------------------------- #\n#   TAD run script\nCOPY tad_run /home/explorer/miniconda2/envs/memex/bin/tad\nCOPY nginx.conf /etc/nginx/sites-enabled/default\n#   uncomment these to install secrets into the container\n#   COPY secrets/nginx.crt /etc/nginx/ssl/nginx.crt\n#   COPY secrets/nginx.key /etc/nginx/ssl/nginx.key\n#   COPY secrets/htpasswd /etc/nginx/htpasswd\n#   Permissions clean-up\nUSER root\nRUN chown -R explorer /service\nRUN chown -R explorer /home/explorer/memex-explorer/source\nRUN chmod +x /home/explorer/miniconda2/envs/memex/bin/tad\nRUN chown -R explorer /home/explorer/miniconda2/envs/memex/bin/tad\n#  #################### INSTALLATION END #####################\n#   Expose the default ports\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n#   Set default container command\nUSER explorer\nWORKDIR /home/explorer/memex-explorer/source\nENV HTTP_PROTOCOL=\"http\"\nENV WS_PROTOCOL=\"ws\"\nENV INLINE=\"1\"\nENTRYPOINT \"supervisord\"\n","originalDockerfileUglifiedHash":"6de13f348f9ebce0e6f5bc06ecdd7d7e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a751e42aa85e8971e990a05d235ed3213b7078fb.dockerfile"}