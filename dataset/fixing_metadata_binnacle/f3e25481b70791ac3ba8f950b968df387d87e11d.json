{"seed":2789111496,"processedDockerfileHash":"296f5cc395ee8312f91cb9946b96bc9f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   ==================================================================\n#   module list\n#   ------------------------------------------------------------------\n#   python        3.6    (apt)\n#   opencv        4.0.1  (git)\n#   caffe         latest (git)\n#   ==================================================================\nFROM ubuntu:18.04\nENV LANG=\"C.UTF-8\"\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential apt-utils ca-certificates wget git vim \\\n && $GIT_CLONE https://github.com/Kitware/CMake ~/cmake \\\n && cd ~/cmake \\\n && ./bootstrap \\\n && make -j\"$( nproc ;)\" install \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python3.6 python3.6-dev python3-distutils-extra \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools \\\n && $PIP_INSTALL numpy scipy pandas cloudpickle scikit-learn matplotlib Cython \\\n && wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz \\\n && tar -zxf ~/boost.tar.gz -C ~ \\\n && cd ~/boost_* \\\n && ./bootstrap.sh --with-python=python3.6 \\\n && ./b2 install -j\"$( nproc ;)\" --prefix=/usr/local \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL libatlas-base-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libprotobuf-dev libsnappy-dev protobuf-compiler \\\n && $GIT_CLONE --branch 4.0.1 https://github.com/opencv/opencv ~/opencv \\\n && mkdir -p ~/opencv/build \\\n && cd ~/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_IPP=OFF -D WITH_CUDA=OFF -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF .. \\\n && make -j\"$( nproc ;)\" install \\\n && ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 \\\n && $GIT_CLONE https://github.com/BVLC/caffe ~/caffe \\\n && sed -i 's/CV_LOAD_IMAGE_COLOR/cv::IMREAD_COLOR/g' ~/caffe/src/caffe/layers/window_data_layer.cpp \\\n && sed -i 's/CV_LOAD_IMAGE_COLOR/cv::IMREAD_COLOR/g' ~/caffe/src/caffe/util/io.cpp \\\n && sed -i 's/CV_LOAD_IMAGE_GRAYSCALE/cv::IMREAD_GRAYSCALE/g' ~/caffe/src/caffe/util/io.cpp \\\n && cp ~/caffe/Makefile.config.example ~/caffe/Makefile.config \\\n && sed -i 's/# CPU_ONLY/CPU_ONLY/g' ~/caffe/Makefile.config \\\n && sed -i 's/# PYTHON_LIBRARIES/PYTHON_LIBRARIES/g' ~/caffe/Makefile.config \\\n && sed -i 's/# WITH_PYTHON_LAYER/WITH_PYTHON_LAYER/g' ~/caffe/Makefile.config \\\n && sed -i 's/# OPENCV_VERSION/OPENCV_VERSION/g' ~/caffe/Makefile.config \\\n && sed -i 's/2\\.7/3\\.6/g' ~/caffe/Makefile.config \\\n && sed -i 's/3\\.5/3\\.6/g' ~/caffe/Makefile.config \\\n && sed -i 's/boost_python3/boost_python36/g' ~/caffe/Makefile.config \\\n && sed -i 's/\\/usr\\/lib\\/python/\\/usr\\/local\\/lib\\/python/g' ~/caffe/Makefile.config \\\n && sed -i 's/\\/usr\\/local\\/include/\\/usr\\/local\\/include \\/usr\\/include\\/hdf5\\/serial/g' ~/caffe/Makefile.config \\\n && sed -i 's/hdf5/hdf5_serial/g' ~/caffe/Makefile \\\n && sed -i 's/# Debugging/COMMON_FLAGS += -std=c++11\\n# Debugging/g' ~/caffe/Makefile \\\n && cd ~/caffe \\\n && make -j\"$( nproc ;)\" -Wno-deprecated-gpu-targets distribute \\\n && sed -i 's/,<2//g' ~/caffe/python/requirements.txt \\\n && $PIP_INSTALL -r ~/caffe/python/requirements.txt \\\n && cd ~/caffe/distribute/bin \\\n && for file in *.bin; do mv \"$file\" \"${file%%.bin}\" ; done \\\n && cd ~/caffe/distribute \\\n && cp -r bin include lib proto /usr/local/ \\\n && cp -r python/caffe /usr/local/lib/python3.6/dist-packages/ \\\n && ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  ==================================================================\n#  module list\n#  ------------------------------------------------------------------\n#  python        3.6    (apt)\n#  opencv        4.0.1  (git)\n#  caffe         latest (git)\n#  ==================================================================\nFROM ubuntu:18.04\nENV LANG=\"C.UTF-8\"\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential apt-utils ca-certificates wget git vim \\\n && $GIT_CLONE https://github.com/Kitware/CMake ~/cmake \\\n && cd ~/cmake \\\n && ./bootstrap \\\n && make -j\"$( nproc ;)\" install \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python3.6 python3.6-dev python3-distutils-extra \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools \\\n && $PIP_INSTALL numpy scipy pandas cloudpickle scikit-learn matplotlib Cython \\\n && wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz \\\n && tar -zxf ~/boost.tar.gz -C ~ \\\n && cd ~/boost_* \\\n && ./bootstrap.sh --with-python=python3.6 \\\n && ./b2 install -j\"$( nproc ;)\" --prefix=/usr/local \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL libatlas-base-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libprotobuf-dev libsnappy-dev protobuf-compiler \\\n && $GIT_CLONE --branch 4.0.1 https://github.com/opencv/opencv ~/opencv \\\n && mkdir -p ~/opencv/build \\\n && cd ~/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_IPP=OFF -D WITH_CUDA=OFF -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF .. \\\n && make -j\"$( nproc ;)\" install \\\n && ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 \\\n && $GIT_CLONE https://github.com/BVLC/caffe ~/caffe \\\n && sed -i 's/CV_LOAD_IMAGE_COLOR/cv::IMREAD_COLOR/g' ~/caffe/src/caffe/layers/window_data_layer.cpp \\\n && sed -i 's/CV_LOAD_IMAGE_COLOR/cv::IMREAD_COLOR/g' ~/caffe/src/caffe/util/io.cpp \\\n && sed -i 's/CV_LOAD_IMAGE_GRAYSCALE/cv::IMREAD_GRAYSCALE/g' ~/caffe/src/caffe/util/io.cpp \\\n && cp ~/caffe/Makefile.config.example ~/caffe/Makefile.config \\\n && sed -i 's/# CPU_ONLY/CPU_ONLY/g' ~/caffe/Makefile.config \\\n && sed -i 's/# PYTHON_LIBRARIES/PYTHON_LIBRARIES/g' ~/caffe/Makefile.config \\\n && sed -i 's/# WITH_PYTHON_LAYER/WITH_PYTHON_LAYER/g' ~/caffe/Makefile.config \\\n && sed -i 's/# OPENCV_VERSION/OPENCV_VERSION/g' ~/caffe/Makefile.config \\\n && sed -i 's/2\\.7/3\\.6/g' ~/caffe/Makefile.config \\\n && sed -i 's/3\\.5/3\\.6/g' ~/caffe/Makefile.config \\\n && sed -i 's/boost_python3/boost_python36/g' ~/caffe/Makefile.config \\\n && sed -i 's/\\/usr\\/lib\\/python/\\/usr\\/local\\/lib\\/python/g' ~/caffe/Makefile.config \\\n && sed -i 's/\\/usr\\/local\\/include/\\/usr\\/local\\/include \\/usr\\/include\\/hdf5\\/serial/g' ~/caffe/Makefile.config \\\n && sed -i 's/hdf5/hdf5_serial/g' ~/caffe/Makefile \\\n && sed -i 's/# Debugging/COMMON_FLAGS += -std=c++11\\n# Debugging/g' ~/caffe/Makefile \\\n && cd ~/caffe \\\n && make -j\"$( nproc ;)\" -Wno-deprecated-gpu-targets distribute \\\n && sed -i 's/,<2//g' ~/caffe/python/requirements.txt \\\n && $PIP_INSTALL -r ~/caffe/python/requirements.txt \\\n && cd ~/caffe/distribute/bin \\\n && for file in *.bin; do mv \"$file\" \"${file%%.bin}\" ; done \\\n && cd ~/caffe/distribute \\\n && cp -r bin include lib proto /usr/local/ \\\n && cp -r python/caffe /usr/local/lib/python3.6/dist-packages/ \\\n && ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\n","injectedSmells":[],"originalDockerfileHash":"e7bf67b31a3f86427a36e0ada63e76c8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ==================================================================\n#   module list\n#   ------------------------------------------------------------------\n#   python        3.6    (apt)\n#   opencv        4.0.1  (git)\n#   caffe         latest (git)\n#   ==================================================================\nFROM ubuntu:18.04\nENV LANG=\"C.UTF-8\"\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential apt-utils ca-certificates wget git vim \\\n && $GIT_CLONE https://github.com/Kitware/CMake ~/cmake \\\n && cd ~/cmake \\\n && ./bootstrap \\\n && make -j\"$( nproc ;)\" install \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python3.6 python3.6-dev python3-distutils-extra \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools \\\n && $PIP_INSTALL numpy scipy pandas cloudpickle scikit-learn matplotlib Cython \\\n && wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz \\\n && tar -zxf ~/boost.tar.gz -C ~ \\\n && cd ~/boost_* \\\n && ./bootstrap.sh --with-python=python3.6 \\\n && ./b2 install -j\"$( nproc ;)\" --prefix=/usr/local \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL libatlas-base-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libprotobuf-dev libsnappy-dev protobuf-compiler \\\n && $GIT_CLONE --branch 4.0.1 https://github.com/opencv/opencv ~/opencv \\\n && mkdir -p ~/opencv/build \\\n && cd ~/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_IPP=OFF -D WITH_CUDA=OFF -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF .. \\\n && make -j\"$( nproc ;)\" install \\\n && ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 \\\n && $GIT_CLONE https://github.com/BVLC/caffe ~/caffe \\\n && sed -i 's/CV_LOAD_IMAGE_COLOR/cv::IMREAD_COLOR/g' ~/caffe/src/caffe/layers/window_data_layer.cpp \\\n && sed -i 's/CV_LOAD_IMAGE_COLOR/cv::IMREAD_COLOR/g' ~/caffe/src/caffe/util/io.cpp \\\n && sed -i 's/CV_LOAD_IMAGE_GRAYSCALE/cv::IMREAD_GRAYSCALE/g' ~/caffe/src/caffe/util/io.cpp \\\n && cp ~/caffe/Makefile.config.example ~/caffe/Makefile.config \\\n && sed -i 's/# CPU_ONLY/CPU_ONLY/g' ~/caffe/Makefile.config \\\n && sed -i 's/# PYTHON_LIBRARIES/PYTHON_LIBRARIES/g' ~/caffe/Makefile.config \\\n && sed -i 's/# WITH_PYTHON_LAYER/WITH_PYTHON_LAYER/g' ~/caffe/Makefile.config \\\n && sed -i 's/# OPENCV_VERSION/OPENCV_VERSION/g' ~/caffe/Makefile.config \\\n && sed -i 's/2\\.7/3\\.6/g' ~/caffe/Makefile.config \\\n && sed -i 's/3\\.5/3\\.6/g' ~/caffe/Makefile.config \\\n && sed -i 's/boost_python3/boost_python36/g' ~/caffe/Makefile.config \\\n && sed -i 's/\\/usr\\/lib\\/python/\\/usr\\/local\\/lib\\/python/g' ~/caffe/Makefile.config \\\n && sed -i 's/\\/usr\\/local\\/include/\\/usr\\/local\\/include \\/usr\\/include\\/hdf5\\/serial/g' ~/caffe/Makefile.config \\\n && sed -i 's/hdf5/hdf5_serial/g' ~/caffe/Makefile \\\n && sed -i 's/# Debugging/COMMON_FLAGS += -std=c++11\\n# Debugging/g' ~/caffe/Makefile \\\n && cd ~/caffe \\\n && make -j\"$( nproc ;)\" -Wno-deprecated-gpu-targets distribute \\\n && sed -i 's/,<2//g' ~/caffe/python/requirements.txt \\\n && $PIP_INSTALL -r ~/caffe/python/requirements.txt \\\n && cd ~/caffe/distribute/bin \\\n && for file in *.bin; do mv \"$file\" \"${file%%.bin}\" ; done \\\n && cd ~/caffe/distribute \\\n && cp -r bin include lib proto /usr/local/ \\\n && cp -r python/caffe /usr/local/lib/python3.6/dist-packages/ \\\n && ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\n","originalDockerfileUglifiedHash":"b263c1619a6ba0ea861d197ba1dc5c3f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f3e25481b70791ac3ba8f950b968df387d87e11d.dockerfile"}