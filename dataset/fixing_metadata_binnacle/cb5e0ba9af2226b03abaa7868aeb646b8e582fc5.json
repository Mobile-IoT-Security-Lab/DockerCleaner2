{"seed":890524734,"processedDockerfileHash":"80662e14dcea39e99024a57f079cc3a2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   #==========================================================================\nFROM tensorflow/tensorflow:nightly-devel\n#   Get the tensorflow models research directory, and move it into tensorflow\n#   source folder to match recommendation of installation\nRUN git clone --depth 1 https://github.com/tensorflow/models.git \\\n && mv models /tensorflow/models\n#   Install gcloud and gsutil commands\n#   https://cloud.google.com/sdk/docs/quickstart-debian-ubuntu\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends google-cloud-sdk -y\n#   Install the Tensorflow Object Detection API from here\n#   https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md\n#   Install object detection api dependencies\nRUN apt-get install --no-install-recommends protobuf-compiler python-pil python-lxml python-tk -y \\\n && pip install Cython==0.29.34 \\\n && pip install contextlib2==21.6.0 \\\n && pip install jupyter==1.0.0 \\\n && pip install matplotlib==3.7.1\n#   Install pycocoapi\nRUN git clone --depth 1 https://github.com/cocodataset/cocoapi.git \\\n && cd cocoapi/PythonAPI \\\n && make -j8 \\\n && cp -r pycocotools /tensorflow/models/research \\\n && cd ../../ \\\n && rm -rf cocoapi\n#   Get protoc 3.0.0, rather than the old version already in the container\nRUN curl -OL \"https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip\" \\\n && unzip protoc-3.0.0-linux-x86_64.zip -d proto3 \\\n && mv proto3/bin/* /usr/local/bin \\\n && mv proto3/include/* /usr/local/include \\\n && rm -rf proto3 protoc-3.0.0-linux-x86_64.zip\n#   Run protoc on the object detection repo\nRUN cd /tensorflow/models/research \\\n && protoc object_detection/protos/*.proto --python_out=.\n#   Set the PYTHONPATH to finish installing the API\nENV PYTHONPATH=\"$PYTHONPATH:/tensorflow/models/research:/tensorflow/models/research/slim\"\n#   Install wget (to make life easier below) and editors (to allow people to edit\n#   the files inside the container)\nRUN apt-get install --no-install-recommends wget vim emacs nano -y\n#   Grab various data files which are used throughout the demo: dataset,\n#   pretrained model, and pretrained TensorFlow Lite model. Install these all in\n#   the same directories as recommended by the blog post.\n#   Pets example dataset\nRUN mkdir -p /tmp/pet_faces_tfrecord/ \\\n && cd /tmp/pet_faces_tfrecord \\\n && curl \"http://download.tensorflow.org/models/object_detection/pet_faces_tfrecord.tar.gz\" | tar xzf -\n#   Pretrained model\n#   This one doesn't need its own directory, since it comes in a folder.\nRUN cd /tmp \\\n && curl -O \"http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz\" \\\n && tar xzf ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz \\\n && rm ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz\n#   Trained TensorFlow Lite model. This should get replaced by one generated from\n#   export_tflite_ssd_graph.py when that command is called.\nRUN cd /tmp \\\n && curl -L -o tflite.zip https://storage.googleapis.com/download.tensorflow.org/models/tflite/frozengraphs_ssd_mobilenet_v1_0.75_quant_pets_2018_06_29.zip \\\n && unzip tflite.zip -d tflite \\\n && rm tflite.zip\n#   Install Android development tools\n#   Inspired by the following sources:\n#   https://github.com/bitrise-docker/android/blob/master/Dockerfile\n#   https://github.com/reddit/docker-android-build/blob/master/Dockerfile\n#   Set environment variables\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV ANDROID_NDK_HOME=\"/opt/android-ndk-r14b\"\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\n#   Install SDK tools\nRUN cd /opt \\\n && curl -OL https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip \\\n && unzip sdk-tools-linux-4333796.zip -d ${ANDROID_HOME} \\\n && rm sdk-tools-linux-4333796.zip\n#   Accept licenses before installing components, no need to echo y for each component\n#   License is valid for all the standard components in versions installed from this file\n#   Non-standard components: MIPS system images, preview versions, GDK (Google Glass) and Android Google TV require separate licenses, not accepted there\nRUN yes | sdkmanager --licenses\n#   Install platform tools, SDK platform, and other build tools\nRUN yes | sdkmanager \"tools\" \"platform-tools\" \"platforms;android-27\" \"platforms;android-23\" \"build-tools;27.0.3\" \"build-tools;23.0.3\"\n#   Install Android NDK (r14b)\nRUN cd /opt \\\n && curl -L -o android-ndk.zip http://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip \\\n && unzip -q android-ndk.zip \\\n && rm -f android-ndk.zip\n#   Configure the build to use the things we just downloaded\nRUN cd /tensorflow \\\n && printf '\\n\\nn\\ny\\nn\\nn\\nn\\ny\\nn\\nn\\nn\\nn\\nn\\nn\\n\\ny\\n%s\\n\\n\\n' ${ANDROID_HOME} | ./configure\nWORKDIR /tensorflow\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  #==========================================================================\nFROM tensorflow/tensorflow:nightly-devel\n#  Get the tensorflow models research directory, and move it into tensorflow\n#  source folder to match recommendation of installation\nRUN git clone --depth 1 https://github.com/tensorflow/models.git \\\n && mv models /tensorflow/models\n#  Install gcloud and gsutil commands\n#  https://cloud.google.com/sdk/docs/quickstart-debian-ubuntu\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update -y \\\n && apt-get install google-cloud-sdk -y\n#  Install the Tensorflow Object Detection API from here\n#  https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md\n#  Install object detection api dependencies\nRUN apt-get install protobuf-compiler python-pil python-lxml python-tk -y \\\n && pip install Cython \\\n && pip install contextlib2 \\\n && pip install jupyter \\\n && pip install matplotlib\n#  Install pycocoapi\nRUN git clone --depth 1 https://github.com/cocodataset/cocoapi.git \\\n && cd cocoapi/PythonAPI \\\n && make -j8 \\\n && cp -r pycocotools /tensorflow/models/research \\\n && cd ../../ \\\n && rm -rf cocoapi\n#  Get protoc 3.0.0, rather than the old version already in the container\nRUN curl -OL \"https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip\" \\\n && unzip protoc-3.0.0-linux-x86_64.zip -d proto3 \\\n && mv proto3/bin/* /usr/local/bin \\\n && mv proto3/include/* /usr/local/include \\\n && rm -rf proto3 protoc-3.0.0-linux-x86_64.zip\n#  Run protoc on the object detection repo\nRUN cd /tensorflow/models/research \\\n && protoc object_detection/protos/*.proto --python_out=.\n#  Set the PYTHONPATH to finish installing the API\nENV PYTHONPATH=\"$PYTHONPATH:/tensorflow/models/research:/tensorflow/models/research/slim\"\n#  Install wget (to make life easier below) and editors (to allow people to edit\n#  the files inside the container)\nRUN apt-get install wget vim emacs nano -y\n#  Grab various data files which are used throughout the demo: dataset,\n#  pretrained model, and pretrained TensorFlow Lite model. Install these all in\n#  the same directories as recommended by the blog post.\n#  Pets example dataset\nRUN mkdir -p /tmp/pet_faces_tfrecord/ \\\n && cd /tmp/pet_faces_tfrecord \\\n && curl \"http://download.tensorflow.org/models/object_detection/pet_faces_tfrecord.tar.gz\" | tar xzf -\n#  Pretrained model\n#  This one doesn't need its own directory, since it comes in a folder.\nRUN cd /tmp \\\n && curl -O \"http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz\" \\\n && tar xzf ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz \\\n && rm ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz\n#  Trained TensorFlow Lite model. This should get replaced by one generated from\n#  export_tflite_ssd_graph.py when that command is called.\nRUN cd /tmp \\\n && curl -L -o tflite.zip https://storage.googleapis.com/download.tensorflow.org/models/tflite/frozengraphs_ssd_mobilenet_v1_0.75_quant_pets_2018_06_29.zip \\\n && unzip tflite.zip -d tflite \\\n && rm tflite.zip\n#  Install Android development tools\n#  Inspired by the following sources:\n#  https://github.com/bitrise-docker/android/blob/master/Dockerfile\n#  https://github.com/reddit/docker-android-build/blob/master/Dockerfile\n#  Set environment variables\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV ANDROID_NDK_HOME=\"/opt/android-ndk-r14b\"\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\n#  Install SDK tools\nRUN cd /opt \\\n && curl -OL https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip \\\n && unzip sdk-tools-linux-4333796.zip -d ${ANDROID_HOME} \\\n && rm sdk-tools-linux-4333796.zip\n#  Accept licenses before installing components, no need to echo y for each component\n#  License is valid for all the standard components in versions installed from this file\n#  Non-standard components: MIPS system images, preview versions, GDK (Google Glass) and Android Google TV require separate licenses, not accepted there\nRUN yes | sdkmanager --licenses\n#  Install platform tools, SDK platform, and other build tools\nRUN yes | sdkmanager \"tools\" \"platform-tools\" \"platforms;android-27\" \"platforms;android-23\" \"build-tools;27.0.3\" \"build-tools;23.0.3\"\n#  Install Android NDK (r14b)\nRUN cd /opt \\\n && curl -L -o android-ndk.zip http://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip \\\n && unzip -q android-ndk.zip \\\n && rm -f android-ndk.zip\n#  Configure the build to use the things we just downloaded\nRUN cd /tensorflow \\\n && printf '\\n\\nn\\ny\\nn\\nn\\nn\\ny\\nn\\nn\\nn\\nn\\nn\\nn\\n\\ny\\n%s\\n\\n\\n' ${ANDROID_HOME} | ./configure\nWORKDIR /tensorflow\n","injectedSmells":[],"originalDockerfileHash":"f74d2bf93c2690d0ea5ce4323514543e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   #==========================================================================\nFROM tensorflow/tensorflow:nightly-devel\n#   Get the tensorflow models research directory, and move it into tensorflow\n#   source folder to match recommendation of installation\nRUN git clone --depth 1 https://github.com/tensorflow/models.git \\\n && mv models /tensorflow/models\n#   Install gcloud and gsutil commands\n#   https://cloud.google.com/sdk/docs/quickstart-debian-ubuntu\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update -y \\\n && apt-get install google-cloud-sdk -y\n#   Install the Tensorflow Object Detection API from here\n#   https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md\n#   Install object detection api dependencies\nRUN apt-get install protobuf-compiler python-pil python-lxml python-tk -y \\\n && pip install Cython \\\n && pip install contextlib2 \\\n && pip install jupyter \\\n && pip install matplotlib\n#   Install pycocoapi\nRUN git clone --depth 1 https://github.com/cocodataset/cocoapi.git \\\n && cd cocoapi/PythonAPI \\\n && make -j8 \\\n && cp -r pycocotools /tensorflow/models/research \\\n && cd ../../ \\\n && rm -rf cocoapi\n#   Get protoc 3.0.0, rather than the old version already in the container\nRUN curl -OL \"https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip\" \\\n && unzip protoc-3.0.0-linux-x86_64.zip -d proto3 \\\n && mv proto3/bin/* /usr/local/bin \\\n && mv proto3/include/* /usr/local/include \\\n && rm -rf proto3 protoc-3.0.0-linux-x86_64.zip\n#   Run protoc on the object detection repo\nRUN cd /tensorflow/models/research \\\n && protoc object_detection/protos/*.proto --python_out=.\n#   Set the PYTHONPATH to finish installing the API\nENV PYTHONPATH=\"$PYTHONPATH:/tensorflow/models/research:/tensorflow/models/research/slim\"\n#   Install wget (to make life easier below) and editors (to allow people to edit\n#   the files inside the container)\nRUN apt-get install wget vim emacs nano -y\n#   Grab various data files which are used throughout the demo: dataset,\n#   pretrained model, and pretrained TensorFlow Lite model. Install these all in\n#   the same directories as recommended by the blog post.\n#   Pets example dataset\nRUN mkdir -p /tmp/pet_faces_tfrecord/ \\\n && cd /tmp/pet_faces_tfrecord \\\n && curl \"http://download.tensorflow.org/models/object_detection/pet_faces_tfrecord.tar.gz\" | tar xzf -\n#   Pretrained model\n#   This one doesn't need its own directory, since it comes in a folder.\nRUN cd /tmp \\\n && curl -O \"http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz\" \\\n && tar xzf ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz \\\n && rm ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz\n#   Trained TensorFlow Lite model. This should get replaced by one generated from\n#   export_tflite_ssd_graph.py when that command is called.\nRUN cd /tmp \\\n && curl -L -o tflite.zip https://storage.googleapis.com/download.tensorflow.org/models/tflite/frozengraphs_ssd_mobilenet_v1_0.75_quant_pets_2018_06_29.zip \\\n && unzip tflite.zip -d tflite \\\n && rm tflite.zip\n#   Install Android development tools\n#   Inspired by the following sources:\n#   https://github.com/bitrise-docker/android/blob/master/Dockerfile\n#   https://github.com/reddit/docker-android-build/blob/master/Dockerfile\n#   Set environment variables\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV ANDROID_NDK_HOME=\"/opt/android-ndk-r14b\"\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\n#   Install SDK tools\nRUN cd /opt \\\n && curl -OL https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip \\\n && unzip sdk-tools-linux-4333796.zip -d ${ANDROID_HOME} \\\n && rm sdk-tools-linux-4333796.zip\n#   Accept licenses before installing components, no need to echo y for each component\n#   License is valid for all the standard components in versions installed from this file\n#   Non-standard components: MIPS system images, preview versions, GDK (Google Glass) and Android Google TV require separate licenses, not accepted there\nRUN yes | sdkmanager --licenses\n#   Install platform tools, SDK platform, and other build tools\nRUN yes | sdkmanager \"tools\" \"platform-tools\" \"platforms;android-27\" \"platforms;android-23\" \"build-tools;27.0.3\" \"build-tools;23.0.3\"\n#   Install Android NDK (r14b)\nRUN cd /opt \\\n && curl -L -o android-ndk.zip http://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip \\\n && unzip -q android-ndk.zip \\\n && rm -f android-ndk.zip\n#   Configure the build to use the things we just downloaded\nRUN cd /tensorflow \\\n && printf '\\n\\nn\\ny\\nn\\nn\\nn\\ny\\nn\\nn\\nn\\nn\\nn\\nn\\n\\ny\\n%s\\n\\n\\n' ${ANDROID_HOME} | ./configure\nWORKDIR /tensorflow\n","originalDockerfileUglifiedHash":"65d6c6ef7a97bb85b31c009185868842","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cb5e0ba9af2226b03abaa7868aeb646b8e582fc5.dockerfile"}