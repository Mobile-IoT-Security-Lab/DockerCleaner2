{"seed":1140154995,"processedDockerfileHash":"901d8a5c1c6947b3170f5bd64aa4d576","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"FROM amazonlinux:2-with-sources\nLABEL maintainer=\"M. Edward (Ed) Borasky <znmeb@znmeb.net>\"\n#   PostgreSQL and command line tools\nRUN amazon-linux-extras install postgresql9.6 nano vim \\\n && yum install -y awscli curl git groff lynx postgresql postgresql-contrib postgresql-devel postgresql-docs postgresql-server procps-ng shadow-utils tar wget \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n#   PostGIS build dependencies\nRUN yum update -y \\\n && yum install -y boost-devel bzip2 file gcc gcc-c++ gettext-devel gmp-devel json-c-devel libxml2-devel make mpfr-devel unzip \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n#   setup for builds\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr_local_lib.conf \\\n && mkdir -p /usr/local/src/\nWORKDIR /usr/local/src/\n#   source installs\nENV CMAKE_MAJOR=\"3.10\"\nENV CMAKE_VERSION=\"${CMAKE_MAJOR}.2\"\nRUN wget -q https://cmake.org/files/v${CMAKE_MAJOR}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && chmod +x cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && ./cmake-${CMAKE_VERSION}-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license\nENV CGAL_VERSION=\"4.11.1\"\nRUN wget -q https://github.com/CGAL/cgal/archive/releases/CGAL-${CGAL_VERSION}.tar.gz \\\n && tar xf CGAL-${CGAL_VERSION}.tar.gz \\\n && cd cgal-releases-CGAL-${CGAL_VERSION} \\\n && cmake . > ../cgal.cmake \\\n && make \\\n && make install \\\n && ldconfig\nENV PROTOBUF_VERSION=\"3.5.1\"\nRUN wget -q https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-cpp-${PROTOBUF_VERSION}.tar.gz \\\n && tar xf protobuf-cpp-${PROTOBUF_VERSION}.tar.gz \\\n && cd /usr/local/src/protobuf-${PROTOBUF_VERSION} \\\n && ./configure > ../protobuf.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV PROTOBUF_C_VERSION=\"1.3.0\"\nRUN wget -q https://github.com/protobuf-c/protobuf-c/releases/download/v${PROTOBUF_C_VERSION}/protobuf-c-${PROTOBUF_C_VERSION}.tar.gz \\\n && tar xf protobuf-c-${PROTOBUF_C_VERSION}.tar.gz \\\n && cd /usr/local/src/protobuf-c-${PROTOBUF_C_VERSION} \\\n && ./configure > ../protobuf-c.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV GEOS_VERSION=\"3.6.2\"\nRUN wget -q http://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 \\\n && tar xf geos-${GEOS_VERSION}.tar.bz2 \\\n && cd /usr/local/src/geos-${GEOS_VERSION} \\\n && ./configure > ../geos.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV PROJ_VERSION=\"4.9.3\"\nENV DATUMGRID_VERSION=\"1.6\"\nRUN wget -q http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n && tar xf proj-${PROJ_VERSION}.tar.gz \\\n && wget -q http://download.osgeo.org/proj/proj-datumgrid-${DATUMGRID_VERSION}.zip \\\n && cd /usr/local/src/proj-${PROJ_VERSION} \\\n && ./configure > ../proj.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig \\\n && cd /usr/local/share/proj/ \\\n && unzip /usr/local/src/proj-datumgrid-${DATUMGRID_VERSION}.zip\nENV GDAL_VERSION=\"2.2.4\"\nRUN wget -q http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \\\n && tar xf gdal-${GDAL_VERSION}.tar.gz \\\n && cd /usr/local/src/gdal-${GDAL_VERSION} \\\n && ./configure > ../gdal.configure \\\n && make -j 4 > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV POSTGIS_VERSION=\"2.4.3\"\nRUN wget -q https://download.osgeo.org/postgis/source/postgis-${POSTGIS_VERSION}.tar.gz \\\n && tar xf postgis-${POSTGIS_VERSION}.tar.gz \\\n && cd /usr/local/src/postgis-${POSTGIS_VERSION} \\\n && ./configure > ../postgis.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\n#   pgRouting\nENV PGROUTING_VERSION=\"2.5.2\"\nRUN yum install -y perl-Data-Dumper\nRUN curl -Ls https://github.com/pgRouting/pgrouting/archive/v${PGROUTING_VERSION}.tar.gz > pgrouting-${PGROUTING_VERSION}.tar.gz \\\n && tar xf pgrouting-${PGROUTING_VERSION}.tar.gz \\\n && cd pgrouting-${PGROUTING_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. > ../../pgrouting.cmake \\\n && make > ../../pgrouting.make \\\n && make install > /dev/null \\\n && ldconfig\n#   make the users\nRUN useradd --shell /bin/bash --user-group --create-home dbsuper \\\n && mkdir -p /home/dbsuper/Projects/ \\\n && echo \"alias l='ls -ACF --color=auto'\" >> /etc/bashrc \\\n && echo \"alias ll='ls -ltrAF --color=auto'\" >> /etc/bashrc\nCOPY home-scripts /home/dbsuper/\nCOPY amazon-scripts/1make-dbusers.bash /var/lib/pgsql/\nRUN chmod +x /home/dbsuper/*.bash /var/lib/pgsql/1make-dbusers.bash\nRUN chown postgres:postgres /var/lib/pgsql/1make-dbusers.bash\nUSER postgres\nARG DB_USERS_TO_CREATE\nRUN initdb --locale=en_US.utf8 --encoding=UTF8 -D /var/lib/pgsql/data/main \\\n && pg_ctl start -w -D /var/lib/pgsql/data/main \\\n && createuser --superuser dbsuper \\\n && createdb --owner=dbsuper dbsuper \\\n && bash /var/lib/pgsql/1make-dbusers.bash \\\n && pg_ctl stop -w -D /var/lib/pgsql/data/main\n#   do backups at the end so rest of image doesn't need a rebuild\nUSER root\nCOPY Backups /home/dbsuper/Backups\nCOPY Raw /home/dbsuper/Raw\nRUN chown -R dbsuper:dbsuper /home/dbsuper\nUSER postgres\nCMD pg_ctl -D /var/lib/pgsql/data/main start ; /usr/bin/sleep 1001d\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM amazonlinux:2-with-sources\nLABEL maintainer=\"M. Edward (Ed) Borasky <znmeb@znmeb.net>\"\n#  PostgreSQL and command line tools\nRUN amazon-linux-extras install postgresql9.6 nano vim \\\n && yum install -y awscli curl git groff lynx postgresql postgresql-contrib postgresql-devel postgresql-docs postgresql-server procps-ng shadow-utils tar wget \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n#  PostGIS build dependencies\nRUN yum update -y \\\n && yum install -y boost-devel bzip2 file gcc gcc-c++ gettext-devel gmp-devel json-c-devel libxml2-devel make mpfr-devel unzip \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n#  setup for builds\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr_local_lib.conf \\\n && mkdir -p /usr/local/src/\nWORKDIR /usr/local/src/\n#  source installs\nENV CMAKE_MAJOR=\"3.10\"\nENV CMAKE_VERSION=\"${CMAKE_MAJOR}.2\"\nRUN wget -q https://cmake.org/files/v${CMAKE_MAJOR}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && chmod +x cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && ./cmake-${CMAKE_VERSION}-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license\nENV CGAL_VERSION=\"4.11.1\"\nRUN wget -q https://github.com/CGAL/cgal/archive/releases/CGAL-${CGAL_VERSION}.tar.gz \\\n && tar xf CGAL-${CGAL_VERSION}.tar.gz \\\n && cd cgal-releases-CGAL-${CGAL_VERSION} \\\n && cmake . > ../cgal.cmake \\\n && make \\\n && make install \\\n && ldconfig\nENV PROTOBUF_VERSION=\"3.5.1\"\nRUN wget -q https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-cpp-${PROTOBUF_VERSION}.tar.gz \\\n && tar xf protobuf-cpp-${PROTOBUF_VERSION}.tar.gz \\\n && cd /usr/local/src/protobuf-${PROTOBUF_VERSION} \\\n && ./configure > ../protobuf.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV PROTOBUF_C_VERSION=\"1.3.0\"\nRUN wget -q https://github.com/protobuf-c/protobuf-c/releases/download/v${PROTOBUF_C_VERSION}/protobuf-c-${PROTOBUF_C_VERSION}.tar.gz \\\n && tar xf protobuf-c-${PROTOBUF_C_VERSION}.tar.gz \\\n && cd /usr/local/src/protobuf-c-${PROTOBUF_C_VERSION} \\\n && ./configure > ../protobuf-c.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV GEOS_VERSION=\"3.6.2\"\nRUN wget -q http://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 \\\n && tar xf geos-${GEOS_VERSION}.tar.bz2 \\\n && cd /usr/local/src/geos-${GEOS_VERSION} \\\n && ./configure > ../geos.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV PROJ_VERSION=\"4.9.3\"\nENV DATUMGRID_VERSION=\"1.6\"\nRUN wget -q http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n && tar xf proj-${PROJ_VERSION}.tar.gz \\\n && wget -q http://download.osgeo.org/proj/proj-datumgrid-${DATUMGRID_VERSION}.zip \\\n && cd /usr/local/src/proj-${PROJ_VERSION} \\\n && ./configure > ../proj.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig \\\n && cd /usr/local/share/proj/ \\\n && unzip /usr/local/src/proj-datumgrid-${DATUMGRID_VERSION}.zip\nENV GDAL_VERSION=\"2.2.4\"\nRUN wget -q http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \\\n && tar xf gdal-${GDAL_VERSION}.tar.gz \\\n && cd /usr/local/src/gdal-${GDAL_VERSION} \\\n && ./configure > ../gdal.configure \\\n && make -j 4 > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV POSTGIS_VERSION=\"2.4.3\"\nRUN wget -q https://download.osgeo.org/postgis/source/postgis-${POSTGIS_VERSION}.tar.gz \\\n && tar xf postgis-${POSTGIS_VERSION}.tar.gz \\\n && cd /usr/local/src/postgis-${POSTGIS_VERSION} \\\n && ./configure > ../postgis.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\n#  pgRouting\nENV PGROUTING_VERSION=\"2.5.2\"\nRUN yum install -y perl-Data-Dumper\nRUN curl -Ls https://github.com/pgRouting/pgrouting/archive/v${PGROUTING_VERSION}.tar.gz > pgrouting-${PGROUTING_VERSION}.tar.gz \\\n && tar xf pgrouting-${PGROUTING_VERSION}.tar.gz \\\n && cd pgrouting-${PGROUTING_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. > ../../pgrouting.cmake \\\n && make > ../../pgrouting.make \\\n && make install > /dev/null \\\n && ldconfig\n#  make the users\nRUN useradd --shell /bin/bash --user-group --create-home dbsuper \\\n && mkdir -p /home/dbsuper/Projects/ \\\n && echo \"alias l='ls -ACF --color=auto'\" >> /etc/bashrc \\\n && echo \"alias ll='ls -ltrAF --color=auto'\" >> /etc/bashrc\nCOPY home-scripts /home/dbsuper/\nCOPY amazon-scripts/1make-dbusers.bash /var/lib/pgsql/\nRUN chmod +x /home/dbsuper/*.bash /var/lib/pgsql/1make-dbusers.bash\nRUN chown postgres:postgres /var/lib/pgsql/1make-dbusers.bash\nUSER postgres\nARG DB_USERS_TO_CREATE\nRUN initdb --locale=en_US.utf8 --encoding=UTF8 -D /var/lib/pgsql/data/main \\\n && pg_ctl start -w -D /var/lib/pgsql/data/main \\\n && createuser --superuser dbsuper \\\n && createdb --owner=dbsuper dbsuper \\\n && bash /var/lib/pgsql/1make-dbusers.bash \\\n && pg_ctl stop -w -D /var/lib/pgsql/data/main\n#  do backups at the end so rest of image doesn't need a rebuild\nUSER root\nCOPY Backups /home/dbsuper/Backups\nCOPY Raw /home/dbsuper/Raw\nRUN chown -R dbsuper:dbsuper /home/dbsuper\nUSER postgres\nCMD pg_ctl -D /var/lib/pgsql/data/main start ; /usr/bin/sleep 1001d\n","injectedSmells":[],"originalDockerfileHash":"801e1951342ea513acce853443f56273","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM amazonlinux:2-with-sources\nLABEL maintainer=\"M. Edward (Ed) Borasky <znmeb@znmeb.net>\"\n#   PostgreSQL and command line tools\nRUN amazon-linux-extras install postgresql9.6 nano vim \\\n && yum install -y awscli curl git groff lynx postgresql postgresql-contrib postgresql-devel postgresql-docs postgresql-server procps-ng shadow-utils tar wget \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n#   PostGIS build dependencies\nRUN yum update -y \\\n && yum install -y boost-devel bzip2 file gcc gcc-c++ gettext-devel gmp-devel json-c-devel libxml2-devel make mpfr-devel unzip \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n#   setup for builds\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr_local_lib.conf \\\n && mkdir -p /usr/local/src/\nWORKDIR /usr/local/src/\n#   source installs\nENV CMAKE_MAJOR=\"3.10\"\nENV CMAKE_VERSION=\"${CMAKE_MAJOR}.2\"\nRUN wget -q https://cmake.org/files/v${CMAKE_MAJOR}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && chmod +x cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && ./cmake-${CMAKE_VERSION}-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license\nENV CGAL_VERSION=\"4.11.1\"\nRUN wget -q https://github.com/CGAL/cgal/archive/releases/CGAL-${CGAL_VERSION}.tar.gz \\\n && tar xf CGAL-${CGAL_VERSION}.tar.gz \\\n && cd cgal-releases-CGAL-${CGAL_VERSION} \\\n && cmake . > ../cgal.cmake \\\n && make \\\n && make install \\\n && ldconfig\nENV PROTOBUF_VERSION=\"3.5.1\"\nRUN wget -q https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-cpp-${PROTOBUF_VERSION}.tar.gz \\\n && tar xf protobuf-cpp-${PROTOBUF_VERSION}.tar.gz \\\n && cd /usr/local/src/protobuf-${PROTOBUF_VERSION} \\\n && ./configure > ../protobuf.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV PROTOBUF_C_VERSION=\"1.3.0\"\nRUN wget -q https://github.com/protobuf-c/protobuf-c/releases/download/v${PROTOBUF_C_VERSION}/protobuf-c-${PROTOBUF_C_VERSION}.tar.gz \\\n && tar xf protobuf-c-${PROTOBUF_C_VERSION}.tar.gz \\\n && cd /usr/local/src/protobuf-c-${PROTOBUF_C_VERSION} \\\n && ./configure > ../protobuf-c.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV GEOS_VERSION=\"3.6.2\"\nRUN wget -q http://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 \\\n && tar xf geos-${GEOS_VERSION}.tar.bz2 \\\n && cd /usr/local/src/geos-${GEOS_VERSION} \\\n && ./configure > ../geos.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV PROJ_VERSION=\"4.9.3\"\nENV DATUMGRID_VERSION=\"1.6\"\nRUN wget -q http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n && tar xf proj-${PROJ_VERSION}.tar.gz \\\n && wget -q http://download.osgeo.org/proj/proj-datumgrid-${DATUMGRID_VERSION}.zip \\\n && cd /usr/local/src/proj-${PROJ_VERSION} \\\n && ./configure > ../proj.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig \\\n && cd /usr/local/share/proj/ \\\n && unzip /usr/local/src/proj-datumgrid-${DATUMGRID_VERSION}.zip\nENV GDAL_VERSION=\"2.2.4\"\nRUN wget -q http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \\\n && tar xf gdal-${GDAL_VERSION}.tar.gz \\\n && cd /usr/local/src/gdal-${GDAL_VERSION} \\\n && ./configure > ../gdal.configure \\\n && make -j 4 > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\nENV POSTGIS_VERSION=\"2.4.3\"\nRUN wget -q https://download.osgeo.org/postgis/source/postgis-${POSTGIS_VERSION}.tar.gz \\\n && tar xf postgis-${POSTGIS_VERSION}.tar.gz \\\n && cd /usr/local/src/postgis-${POSTGIS_VERSION} \\\n && ./configure > ../postgis.configure \\\n && make > /dev/null \\\n && make install > /dev/null \\\n && ldconfig\n#   pgRouting\nENV PGROUTING_VERSION=\"2.5.2\"\nRUN yum install -y perl-Data-Dumper\nRUN curl -Ls https://github.com/pgRouting/pgrouting/archive/v${PGROUTING_VERSION}.tar.gz > pgrouting-${PGROUTING_VERSION}.tar.gz \\\n && tar xf pgrouting-${PGROUTING_VERSION}.tar.gz \\\n && cd pgrouting-${PGROUTING_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. > ../../pgrouting.cmake \\\n && make > ../../pgrouting.make \\\n && make install > /dev/null \\\n && ldconfig\n#   make the users\nRUN useradd --shell /bin/bash --user-group --create-home dbsuper \\\n && mkdir -p /home/dbsuper/Projects/ \\\n && echo \"alias l='ls -ACF --color=auto'\" >> /etc/bashrc \\\n && echo \"alias ll='ls -ltrAF --color=auto'\" >> /etc/bashrc\nCOPY home-scripts /home/dbsuper/\nCOPY amazon-scripts/1make-dbusers.bash /var/lib/pgsql/\nRUN chmod +x /home/dbsuper/*.bash /var/lib/pgsql/1make-dbusers.bash\nRUN chown postgres:postgres /var/lib/pgsql/1make-dbusers.bash\nUSER postgres\nARG DB_USERS_TO_CREATE\nRUN initdb --locale=en_US.utf8 --encoding=UTF8 -D /var/lib/pgsql/data/main \\\n && pg_ctl start -w -D /var/lib/pgsql/data/main \\\n && createuser --superuser dbsuper \\\n && createdb --owner=dbsuper dbsuper \\\n && bash /var/lib/pgsql/1make-dbusers.bash \\\n && pg_ctl stop -w -D /var/lib/pgsql/data/main\n#   do backups at the end so rest of image doesn't need a rebuild\nUSER root\nCOPY Backups /home/dbsuper/Backups\nCOPY Raw /home/dbsuper/Raw\nRUN chown -R dbsuper:dbsuper /home/dbsuper\nUSER postgres\nCMD pg_ctl -D /var/lib/pgsql/data/main start ; /usr/bin/sleep 1001d\n","originalDockerfileUglifiedHash":"deb8b6b030fc1db828574affa55821db","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b92b37c1716d5327d0dda144033ce2e64a2a311f.dockerfile"}