{"seed":707694615,"processedDockerfileHash":"913156e2e475957c0d640871eb46ccbe","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG BASEOS_VER\nFROM $BASEOS_VER\nARG APP_VER\n#  ####### changelog\n#   01 [x] test new apk adds: docker run --rm -it alpine sh, docker run --rm -it sitkevij/opencv python3 -c 'print(\"Hello World\")'\n#   02 [x] linux/auxvec.h: No such file or directory - https://github.com/mirage/mirage-block-unix/issues/45\n#   03 [x] alpine-sdk -> build-base\n#   04 [ ] migrate @testing to @community\n#   05 [x] alpine:3.5 -> alpine:3.6\n#   06 [x] python3-dev -> python   \n#   07 [x] libjasper -> libjasper-dev\n#   08 [ ] use of virtual and/or apk del with edge/testing results in unsatisfiable constraints https://github.com/gliderlabs/docker-alpine/issues/205\n#   09 [x] add improved opencv cmake build flags\n#   10 [ ] docker run --rm -it sitkevij/opencv python -c \"import cv2 print cv2.getBuildInformation()\" && /usr/local/bin/opencv_version\n#   11 [ ] review Dockerfile against https://github.com/opencv/opencv/blob/master/CMakeLists.txt \n#   12 [ ] Set runtime path of \"/usr/local/lib/python2.7/site-packages/cv2.so\" to \"/usr/local/lib\" \n#   13 [x] support Docker 17.05 ARG feature now built as opencv:3.3.0-alpine:3.5\n#   14 [x] support -D PYTHON build params, i.e. PYTHON_PACKAGES_PATH=/usr/lib/python2.7/site-packages/ -D PYTHON_PACKAGES_PATH=/usr/local/lib/python2.7/site-packages/ \\ https://stackoverflow.com/questions/17287250/install-opencv-for-python-multiple-python-versions\n#\n#   Python 2:\n#   --     Interpreter:                 /usr/bin/python (ver 2.7.13)\n#   --     Libraries:                   /usr/lib/libpython2.7.so (ver 2.7.13)\n#   --     numpy:                       /usr/lib/python2.7/site-packages/numpy/core/include (ver 1.13.3)\n#   --     packages path:               lib/python2.7/site-packages\n#  #######\nLABEL org.label-schema.name=\"opencv\" \\\n      org.label-schema.description=\"Small OpenCV (Open Source Computer Vision Library) Docker Image for Alpine Linux\" \\\n      org.label-schema.url=\"https://hub.docker.com/r/sitkevij/opencv/\" \\\n      org.label-schema.usage=\"https://github.com/sitkevij/opencv/blob/master/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/sitkevij/opencv\" \\\n      org.label-schema.vendor=\"sitkevij\" \\\n      org.label-schema.version=\"3.3.0\" \\\n      maintainer=\"https://github.com/sitkevij\"\n#   to exec: docker run --rm sitkevij/opencv sh \"/root/unit-test.sh\"\nCOPY unit-test.sh /root\nENV CPUCOUNT=\"1\"\nRUN CPUCOUNT=`cat /proc/cpuinfo | grep '^processor.*:' | wc -l ` \\\n && echo \"CPUCOUNT=${CPUCOUNT}\" \\\n && echo -e '@edge http://nl.alpinelinux.org/alpine/edge/main\\n@testing http://nl.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories \\\n && apk update \\\n && apk add ca-certificates=20220614-r4 \\\n && update-ca-certificates \\\n && apk upgrade \\\n && apk add openssl=3.0.8-r3 build-base=0.5-r3 linux-headers=5.19.5-r0 unzip=6.0-r13 wget=1.21.3-r2 cmake=3.24.4-r0 python python-dev py-pip libtbb@testing libtbb-dev@testing libjpeg=9e-r0 libjpeg-turbo-dev=2.1.4-r0 libpng-dev=1.6.38-r0 tiff-dev=4.4.0-r3 libjasper --no-cache \\\n && pip install pip==23.1 --upgrade \\\n && pip install numpy==1.24.2 \\\n && cd \\\n && wget https://github.com/Itseez/opencv/archive/${APP_VER}.zip \\\n && cd \\\n && unzip ${APP_VER}.zip \\\n && cd opencv-${APP_VER} \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_opencv_python2=ON -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_DOCS=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D WITH_TBB=ON -D WITH_FFMPEG=NO -D WITH_IPP=NO -D WITH_OPENEXR=NO .. \\\n && make -j${CPUCOUNT} \\\n && make install \\\n && cd \\\n && rm ${APP_VER}.zip \\\n && rm -rf /var/cache/apk/*\n#   /usr/lib/python2.7/site-packages\nCMD cp /root/opencv-3.3.0/build/lib/cv2.so /usr/local/lib/python2.7/site-packages/\nENV PYTHONPATH=\"/usr/local/lib/python2.7/site-packages:$PYTHONPATH\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG BASEOS_VER\nFROM $BASEOS_VER\nARG APP_VER\n# ####### changelog\n#  01 [x] test new apk adds: docker run --rm -it alpine sh, docker run --rm -it sitkevij/opencv python3 -c 'print(\"Hello World\")'\n#  02 [x] linux/auxvec.h: No such file or directory - https://github.com/mirage/mirage-block-unix/issues/45\n#  03 [x] alpine-sdk -> build-base\n#  04 [ ] migrate @testing to @community\n#  05 [x] alpine:3.5 -> alpine:3.6\n#  06 [x] python3-dev -> python   \n#  07 [x] libjasper -> libjasper-dev\n#  08 [ ] use of virtual and/or apk del with edge/testing results in unsatisfiable constraints https://github.com/gliderlabs/docker-alpine/issues/205\n#  09 [x] add improved opencv cmake build flags\n#  10 [ ] docker run --rm -it sitkevij/opencv python -c \"import cv2 print cv2.getBuildInformation()\" && /usr/local/bin/opencv_version\n#  11 [ ] review Dockerfile against https://github.com/opencv/opencv/blob/master/CMakeLists.txt \n#  12 [ ] Set runtime path of \"/usr/local/lib/python2.7/site-packages/cv2.so\" to \"/usr/local/lib\" \n#  13 [x] support Docker 17.05 ARG feature now built as opencv:3.3.0-alpine:3.5\n#  14 [x] support -D PYTHON build params, i.e. PYTHON_PACKAGES_PATH=/usr/lib/python2.7/site-packages/ -D PYTHON_PACKAGES_PATH=/usr/local/lib/python2.7/site-packages/ \\ https://stackoverflow.com/questions/17287250/install-opencv-for-python-multiple-python-versions\n#\n#  Python 2:\n#  --     Interpreter:                 /usr/bin/python (ver 2.7.13)\n#  --     Libraries:                   /usr/lib/libpython2.7.so (ver 2.7.13)\n#  --     numpy:                       /usr/lib/python2.7/site-packages/numpy/core/include (ver 1.13.3)\n#  --     packages path:               lib/python2.7/site-packages\n# #######\nLABEL org.label-schema.name=\"opencv\" \\\n      org.label-schema.description=\"Small OpenCV (Open Source Computer Vision Library) Docker Image for Alpine Linux\" \\\n      org.label-schema.url=\"https://hub.docker.com/r/sitkevij/opencv/\" \\\n      org.label-schema.usage=\"https://github.com/sitkevij/opencv/blob/master/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/sitkevij/opencv\" \\\n      org.label-schema.vendor=\"sitkevij\" \\\n      org.label-schema.version=\"3.3.0\" \\\n      maintainer=\"https://github.com/sitkevij\"\n#  to exec: docker run --rm sitkevij/opencv sh \"/root/unit-test.sh\"\nCOPY unit-test.sh /root\nENV CPUCOUNT=\"1\"\nRUN CPUCOUNT=`cat /proc/cpuinfo | grep '^processor.*:' | wc -l ` \\\n && echo \"CPUCOUNT=${CPUCOUNT}\" \\\n && echo -e '@edge http://nl.alpinelinux.org/alpine/edge/main\\n@testing http://nl.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories \\\n && apk update \\\n && apk add ca-certificates \\\n && update-ca-certificates \\\n && apk upgrade \\\n && apk add --no-cache openssl build-base linux-headers unzip wget cmake python python-dev py-pip libtbb@testing libtbb-dev@testing libjpeg libjpeg-turbo-dev libpng-dev tiff-dev libjasper \\\n && pip install pip --upgrade \\\n && pip install numpy \\\n && cd \\\n && wget https://github.com/Itseez/opencv/archive/${APP_VER}.zip \\\n && cd \\\n && unzip ${APP_VER}.zip \\\n && cd opencv-${APP_VER} \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_opencv_python2=ON -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_DOCS=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D WITH_TBB=ON -D WITH_FFMPEG=NO -D WITH_IPP=NO -D WITH_OPENEXR=NO .. \\\n && make -j${CPUCOUNT} \\\n && make install \\\n && cd \\\n && rm ${APP_VER}.zip \\\n && rm -rf /var/cache/apk/*\n#  /usr/lib/python2.7/site-packages\nCMD cp /root/opencv-3.3.0/build/lib/cv2.so /usr/local/lib/python2.7/site-packages/\nENV PYTHONPATH=\"/usr/local/lib/python2.7/site-packages:$PYTHONPATH\"\n","injectedSmells":[],"originalDockerfileHash":"9cb8f6f3a48fb7cd5f9dfaaa2a2e9017","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG BASEOS_VER\nFROM $BASEOS_VER\nARG APP_VER\n#  ####### changelog\n#   01 [x] test new apk adds: docker run --rm -it alpine sh, docker run --rm -it sitkevij/opencv python3 -c 'print(\"Hello World\")'\n#   02 [x] linux/auxvec.h: No such file or directory - https://github.com/mirage/mirage-block-unix/issues/45\n#   03 [x] alpine-sdk -> build-base\n#   04 [ ] migrate @testing to @community\n#   05 [x] alpine:3.5 -> alpine:3.6\n#   06 [x] python3-dev -> python   \n#   07 [x] libjasper -> libjasper-dev\n#   08 [ ] use of virtual and/or apk del with edge/testing results in unsatisfiable constraints https://github.com/gliderlabs/docker-alpine/issues/205\n#   09 [x] add improved opencv cmake build flags\n#   10 [ ] docker run --rm -it sitkevij/opencv python -c \"import cv2 print cv2.getBuildInformation()\" && /usr/local/bin/opencv_version\n#   11 [ ] review Dockerfile against https://github.com/opencv/opencv/blob/master/CMakeLists.txt \n#   12 [ ] Set runtime path of \"/usr/local/lib/python2.7/site-packages/cv2.so\" to \"/usr/local/lib\" \n#   13 [x] support Docker 17.05 ARG feature now built as opencv:3.3.0-alpine:3.5\n#   14 [x] support -D PYTHON build params, i.e. PYTHON_PACKAGES_PATH=/usr/lib/python2.7/site-packages/ -D PYTHON_PACKAGES_PATH=/usr/local/lib/python2.7/site-packages/ \\ https://stackoverflow.com/questions/17287250/install-opencv-for-python-multiple-python-versions\n#\n#   Python 2:\n#   --     Interpreter:                 /usr/bin/python (ver 2.7.13)\n#   --     Libraries:                   /usr/lib/libpython2.7.so (ver 2.7.13)\n#   --     numpy:                       /usr/lib/python2.7/site-packages/numpy/core/include (ver 1.13.3)\n#   --     packages path:               lib/python2.7/site-packages\n#  #######\nLABEL org.label-schema.name=\"opencv\" \\\n      org.label-schema.description=\"Small OpenCV (Open Source Computer Vision Library) Docker Image for Alpine Linux\" \\\n      org.label-schema.url=\"https://hub.docker.com/r/sitkevij/opencv/\" \\\n      org.label-schema.usage=\"https://github.com/sitkevij/opencv/blob/master/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/sitkevij/opencv\" \\\n      org.label-schema.vendor=\"sitkevij\" \\\n      org.label-schema.version=\"3.3.0\" \\\n      maintainer=\"https://github.com/sitkevij\"\n#   to exec: docker run --rm sitkevij/opencv sh \"/root/unit-test.sh\"\nCOPY unit-test.sh /root\nENV CPUCOUNT=\"1\"\nRUN CPUCOUNT=`cat /proc/cpuinfo | grep '^processor.*:' | wc -l ` \\\n && echo \"CPUCOUNT=${CPUCOUNT}\" \\\n && echo -e '@edge http://nl.alpinelinux.org/alpine/edge/main\\n@testing http://nl.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories \\\n && apk update \\\n && apk add ca-certificates \\\n && update-ca-certificates \\\n && apk upgrade \\\n && apk add --no-cache openssl build-base linux-headers unzip wget cmake python python-dev py-pip libtbb@testing libtbb-dev@testing libjpeg libjpeg-turbo-dev libpng-dev tiff-dev libjasper \\\n && pip install pip --upgrade \\\n && pip install numpy \\\n && cd \\\n && wget https://github.com/Itseez/opencv/archive/${APP_VER}.zip \\\n && cd \\\n && unzip ${APP_VER}.zip \\\n && cd opencv-${APP_VER} \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_opencv_python2=ON -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_DOCS=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D WITH_TBB=ON -D WITH_FFMPEG=NO -D WITH_IPP=NO -D WITH_OPENEXR=NO .. \\\n && make -j${CPUCOUNT} \\\n && make install \\\n && cd \\\n && rm ${APP_VER}.zip \\\n && rm -rf /var/cache/apk/*\n#   /usr/lib/python2.7/site-packages\nCMD cp /root/opencv-3.3.0/build/lib/cv2.so /usr/local/lib/python2.7/site-packages/\nENV PYTHONPATH=\"/usr/local/lib/python2.7/site-packages:$PYTHONPATH\"\n","originalDockerfileUglifiedHash":"45545ecafcfd9856ba5e17261436f8b6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/364fe3365431bc8e1fdb6485ffe06f016f4f3b80.dockerfile"}