{"seed":50096901,"processedDockerfileHash":"2ad15a8fcab1fc8e8250a95ddddfcecc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER EMC{code} <http://community.emccode.com>\n#   Install Dependencies\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 -qy )\nRUN add-apt-repository ppa:george-edison55/cmake-3.x\nRUN :\nRUN apt-cache policy cmake\nRUN (apt-get update ;apt-get install --no-install-recommends autoconf=2.69-6 automake=1:1.14.1-2ubuntu1 build-essential=11.6ubuntu6 ca-certificates=20170717~14.04.2 cmake=3.2.2-2~ubuntu14.04.1~ppa1 curl=7.35.0-1ubuntu2.20 g++=4:4.8.2-1ubuntu6 git-core=1:1.9.1-1ubuntu0.10 gdb=7.7.1-0ubuntu5~14.04.3 heimdal-clients=1.6~git20131207+dfsg-1ubuntu1.2 libapr1-dev=1.5.0-1 libboost-dev=1.54.0.1ubuntu1 libcurl4-nss-dev=7.35.0-1ubuntu2.20 libffi-dev=3.1~rc1+r3.0.13-12ubuntu0.2 libgoogle-glog-dev=0.3.3-1 libprotobuf-dev=2.5.0-9ubuntu1 libpython-dev=2.7.5-5ubuntu3 libsasl2-dev=2.1.25.dfsg1-17build1 libsasl2-modules-gssapi-heimdal=2.1.25.dfsg1-17build1 libssl-dev=1.0.1f-1ubuntu2.27 libsvn-dev=1.8.8-1ubuntu3.3 libtool=2.4.2-1.7ubuntu1 make=3.81-8.2ubuntu3 python=2.7.5-5ubuntu3 python2.7=2.7.6-8ubuntu0.5 python-dev=2.7.5-5ubuntu3 python-pip=1.5.4-1ubuntu4 python-protobuf=2.5.0-9ubuntu1 python-setuptools=3.3-1ubuntu2 unzip=6.0-9ubuntu1.5 wget=1.15-1ubuntu1.14.04.5 -qy )\nRUN pip install pip==23.1 --upgrade\nRUN pip install pyopenssl==23.1.1 ndg-httpsclient==0.5.1 pyasn1==0.4.8 --upgrade\n#   Install the picojson headers\nRUN wget https://raw.githubusercontent.com/kazuho/picojson/v1.3.0/picojson.h -O /usr/local/include/picojson.h\n#   Prepare to build Mesos\nRUN mkdir -p /mesos\nRUN mkdir -p /tmp\nRUN mkdir -p /usr/share/java/\nRUN wget http://search.maven.org/remotecontent?filepath=com/google/protobuf/protobuf-java/2.6.1/protobuf-java-2.6.1.jar -O protobuf.jar\nRUN mv protobuf.jar /usr/share/java/\nWORKDIR /mesos\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV PROTOBUF_DEST=\"/mesos/3rdparty/libprocess/3rdparty\"\n#  ENV MESOS_VERSION=0.23.1 GIT_CHECKOUT_HASH=a9ea8b1 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.24.2 GIT_CHECKOUT_HASH=e2eb20b PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.25.1 GIT_CHECKOUT_HASH=c46b9c8 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.26.1 GIT_CHECKOUT_HASH=a041e3a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.26.2 GIT_CHECKOUT_HASH=5edc7ba PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.27.2 GIT_CHECKOUT_HASH=3c9ec4a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.27.3 GIT_CHECKOUT_HASH=68dd1f6 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.28.2 GIT_CHECKOUT_HASH=ceecad6 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.28.3 GIT_CHECKOUT_HASH=52a0b0a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=1.0.0 GIT_CHECKOUT_HASH=c9b7058 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n#  ENV MESOS_VERSION=1.0.1 GIT_CHECKOUT_HASH=3611eb0 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n#  ENV MESOS_VERSION=1.1.0 GIT_CHECKOUT_HASH=a44b077 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n#  ENV MESOS_VERSION=1.2.0 GIT_CHECKOUT_HASH=de306b5 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\nENV MESOS_VERSION=\"1.2.1\" \\\n    GIT_CHECKOUT_HASH=\"7a0cc55\" \\\n    PROTOBUF_VERSION=\"2.6.1\" \\\n    PROTOBUF_SOURCE=\"/mesos/3rdparty\"\nENV ISOLATOR_VERSION=\"$MESOS_VERSION\"\nENV GIT_SOURCE=\"git://git.apache.org/mesos.git\"\n#   Clone Mesos\nRUN git clone $GIT_SOURCE /mesos\nRUN git checkout $GIT_CHECKOUT_HASH\nRUN git log -n 1\n#   Install protobuf\nRUN mkdir -p $PROTOBUF_DEST\nRUN cd ${PROTOBUF_SOURCE} \\\n && tar -xzvf protobuf-${PROTOBUF_VERSION}.tar.gz -C ${PROTOBUF_DEST} \\\n && cd ${PROTOBUF_DEST}/protobuf-${PROTOBUF_VERSION}/ \\\n && ./configure --prefix=/usr \\\n && make -j 2 \\\n && make install\n#   Bootstrap\nRUN ./bootstrap\n#   Configure\nRUN mkdir build \\\n && cd build \\\n && ../configure --disable-java --disable-optimize --without-included-zookeeper --with-glog=/usr/local --with-protobuf=/usr --with-boost=/usr/local\n#   Build Mesos\nRUN cd build \\\n && make -j 2 install\n#   Install python eggs\nRUN easy_install /mesos/build/src/python/dist/mesos.interface-*.egg\n#  RUN easy_install /mesos/build/src/python/dist/mesos.native-*.egg\n#   This image builds mesos and retains the resulting headers and binaries.\n#   It is intended to support mesos isolator module development and production builds.\n#   A source code tree for the isolator should be mounted at /isolator if using the default entrypoint.\nVOLUME [\"/isolator\"]\nCOPY ./docker-isolator-entrypoint.sh /\nENTRYPOINT [\"/docker-isolator-entrypoint.sh\"]\nCMD [\"/usr/bin/make\", \"all\"]\n#   To build Docker image:\n#   docker build -t <docker-user-name>/mesos-build-module-dev:<ver> -f Dockerfile-mesos-modules-dev .\n#   default COMMAND simply builds isolator\n#   use it like this:\n#   docker run -ti -v <path-to-git-clone>/mesos-module-dvdi/isolator/:/isolator <docker-user-name>/mesos-build-module-dev:<ver>\n#   to extract the newly built .so to the mounted source directory volume mount - you should over-ride the default CMD like this:\n#   docker run -ti -v <path-to-git-clone>/mesos-module-dvdi/isolator/:/isolator <docker-user-name>/mesos-build-module-dev:<ver> /bin/bash -c  '/usr/bin/make all && cp /isolator/build/.libs/libmesos_dvdi_isolator-${ISOLATOR_VERSION}.so /isolator/'\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER EMC{code} <http://community.emccode.com>\n#  Install Dependencies\nRUN apt-get update -q --fix-missing\nRUN apt-get install software-properties-common -qy\nRUN add-apt-repository ppa:george-edison55/cmake-3.x\nRUN apt-get update -q\nRUN apt-cache policy cmake\nRUN apt-get install --no-install-recommends autoconf automake build-essential ca-certificates cmake=3.2.2-2~ubuntu14.04.1~ppa1 curl g++ git-core gdb heimdal-clients libapr1-dev libboost-dev libcurl4-nss-dev libffi-dev libgoogle-glog-dev libprotobuf-dev libpython-dev libsasl2-dev libsasl2-modules-gssapi-heimdal libssl-dev libsvn-dev libtool make python python2.7 python-dev python-pip python-protobuf python-setuptools unzip wget -qy\nRUN pip install pip --upgrade\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --upgrade\n#  Install the picojson headers\nRUN wget https://raw.githubusercontent.com/kazuho/picojson/v1.3.0/picojson.h -O /usr/local/include/picojson.h\n#  Prepare to build Mesos\nRUN mkdir -p /mesos\nRUN mkdir -p /tmp\nRUN mkdir -p /usr/share/java/\nRUN wget http://search.maven.org/remotecontent?filepath=com/google/protobuf/protobuf-java/2.6.1/protobuf-java-2.6.1.jar -O protobuf.jar\nRUN mv protobuf.jar /usr/share/java/\nWORKDIR /mesos\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV PROTOBUF_DEST=\"/mesos/3rdparty/libprocess/3rdparty\"\n# ENV MESOS_VERSION=0.23.1 GIT_CHECKOUT_HASH=a9ea8b1 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n# ENV MESOS_VERSION=0.24.2 GIT_CHECKOUT_HASH=e2eb20b PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n# ENV MESOS_VERSION=0.25.1 GIT_CHECKOUT_HASH=c46b9c8 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n# ENV MESOS_VERSION=0.26.1 GIT_CHECKOUT_HASH=a041e3a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n# ENV MESOS_VERSION=0.26.2 GIT_CHECKOUT_HASH=5edc7ba PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n# ENV MESOS_VERSION=0.27.2 GIT_CHECKOUT_HASH=3c9ec4a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n# ENV MESOS_VERSION=0.27.3 GIT_CHECKOUT_HASH=68dd1f6 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n# ENV MESOS_VERSION=0.28.2 GIT_CHECKOUT_HASH=ceecad6 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n# ENV MESOS_VERSION=0.28.3 GIT_CHECKOUT_HASH=52a0b0a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n# ENV MESOS_VERSION=1.0.0 GIT_CHECKOUT_HASH=c9b7058 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n# ENV MESOS_VERSION=1.0.1 GIT_CHECKOUT_HASH=3611eb0 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n# ENV MESOS_VERSION=1.1.0 GIT_CHECKOUT_HASH=a44b077 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n# ENV MESOS_VERSION=1.2.0 GIT_CHECKOUT_HASH=de306b5 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\nENV MESOS_VERSION=\"1.2.1\" \\\n    GIT_CHECKOUT_HASH=\"7a0cc55\" \\\n    PROTOBUF_VERSION=\"2.6.1\" \\\n    PROTOBUF_SOURCE=\"/mesos/3rdparty\"\nENV ISOLATOR_VERSION=\"$MESOS_VERSION\"\nENV GIT_SOURCE=\"git://git.apache.org/mesos.git\"\n#  Clone Mesos\nRUN git clone $GIT_SOURCE /mesos\nRUN git checkout $GIT_CHECKOUT_HASH\nRUN git log -n 1\n#  Install protobuf\nRUN mkdir -p $PROTOBUF_DEST\nRUN cd ${PROTOBUF_SOURCE} \\\n && tar -xzvf protobuf-${PROTOBUF_VERSION}.tar.gz -C ${PROTOBUF_DEST} \\\n && cd ${PROTOBUF_DEST}/protobuf-${PROTOBUF_VERSION}/ \\\n && ./configure --prefix=/usr \\\n && make -j 2 \\\n && make install\n#  Bootstrap\nRUN ./bootstrap\n#  Configure\nRUN mkdir build \\\n && cd build \\\n && ../configure --disable-java --disable-optimize --without-included-zookeeper --with-glog=/usr/local --with-protobuf=/usr --with-boost=/usr/local\n#  Build Mesos\nRUN cd build \\\n && make -j 2 install\n#  Install python eggs\nRUN easy_install /mesos/build/src/python/dist/mesos.interface-*.egg\n# RUN easy_install /mesos/build/src/python/dist/mesos.native-*.egg\n#  This image builds mesos and retains the resulting headers and binaries.\n#  It is intended to support mesos isolator module development and production builds.\n#  A source code tree for the isolator should be mounted at /isolator if using the default entrypoint.\nVOLUME [\"/isolator\"]\nCOPY ./docker-isolator-entrypoint.sh /\nENTRYPOINT [\"/docker-isolator-entrypoint.sh\"]\nCMD [\"/usr/bin/make\", \"all\"]\n#  To build Docker image:\n#  docker build -t <docker-user-name>/mesos-build-module-dev:<ver> -f Dockerfile-mesos-modules-dev .\n#  default COMMAND simply builds isolator\n#  use it like this:\n#  docker run -ti -v <path-to-git-clone>/mesos-module-dvdi/isolator/:/isolator <docker-user-name>/mesos-build-module-dev:<ver>\n#  to extract the newly built .so to the mounted source directory volume mount - you should over-ride the default CMD like this:\n#  docker run -ti -v <path-to-git-clone>/mesos-module-dvdi/isolator/:/isolator <docker-user-name>/mesos-build-module-dev:<ver> /bin/bash -c  '/usr/bin/make all && cp /isolator/build/.libs/libmesos_dvdi_isolator-${ISOLATOR_VERSION}.so /isolator/'\n","injectedSmells":[],"originalDockerfileHash":"ee472e98b1fedff2ea50aca402fc6b05","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER EMC{code} <http://community.emccode.com>\n#   Install Dependencies\nRUN apt-get update -q --fix-missing\nRUN apt-get install software-properties-common -qy\nRUN add-apt-repository ppa:george-edison55/cmake-3.x\nRUN apt-get update -q\nRUN apt-cache policy cmake\nRUN apt-get install --no-install-recommends autoconf automake build-essential ca-certificates cmake=3.2.2-2~ubuntu14.04.1~ppa1 curl g++ git-core gdb heimdal-clients libapr1-dev libboost-dev libcurl4-nss-dev libffi-dev libgoogle-glog-dev libprotobuf-dev libpython-dev libsasl2-dev libsasl2-modules-gssapi-heimdal libssl-dev libsvn-dev libtool make python python2.7 python-dev python-pip python-protobuf python-setuptools unzip wget -qy\nRUN pip install pip --upgrade\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --upgrade\n#   Install the picojson headers\nRUN wget https://raw.githubusercontent.com/kazuho/picojson/v1.3.0/picojson.h -O /usr/local/include/picojson.h\n#   Prepare to build Mesos\nRUN mkdir -p /mesos\nRUN mkdir -p /tmp\nRUN mkdir -p /usr/share/java/\nRUN wget http://search.maven.org/remotecontent?filepath=com/google/protobuf/protobuf-java/2.6.1/protobuf-java-2.6.1.jar -O protobuf.jar\nRUN mv protobuf.jar /usr/share/java/\nWORKDIR /mesos\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV PROTOBUF_DEST=\"/mesos/3rdparty/libprocess/3rdparty\"\n#  ENV MESOS_VERSION=0.23.1 GIT_CHECKOUT_HASH=a9ea8b1 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.24.2 GIT_CHECKOUT_HASH=e2eb20b PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.25.1 GIT_CHECKOUT_HASH=c46b9c8 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.26.1 GIT_CHECKOUT_HASH=a041e3a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.26.2 GIT_CHECKOUT_HASH=5edc7ba PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.27.2 GIT_CHECKOUT_HASH=3c9ec4a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.27.3 GIT_CHECKOUT_HASH=68dd1f6 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.28.2 GIT_CHECKOUT_HASH=ceecad6 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=0.28.3 GIT_CHECKOUT_HASH=52a0b0a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#  ENV MESOS_VERSION=1.0.0 GIT_CHECKOUT_HASH=c9b7058 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n#  ENV MESOS_VERSION=1.0.1 GIT_CHECKOUT_HASH=3611eb0 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n#  ENV MESOS_VERSION=1.1.0 GIT_CHECKOUT_HASH=a44b077 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n#  ENV MESOS_VERSION=1.2.0 GIT_CHECKOUT_HASH=de306b5 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\nENV MESOS_VERSION=\"1.2.1\" \\\n    GIT_CHECKOUT_HASH=\"7a0cc55\" \\\n    PROTOBUF_VERSION=\"2.6.1\" \\\n    PROTOBUF_SOURCE=\"/mesos/3rdparty\"\nENV ISOLATOR_VERSION=\"$MESOS_VERSION\"\nENV GIT_SOURCE=\"git://git.apache.org/mesos.git\"\n#   Clone Mesos\nRUN git clone $GIT_SOURCE /mesos\nRUN git checkout $GIT_CHECKOUT_HASH\nRUN git log -n 1\n#   Install protobuf\nRUN mkdir -p $PROTOBUF_DEST\nRUN cd ${PROTOBUF_SOURCE} \\\n && tar -xzvf protobuf-${PROTOBUF_VERSION}.tar.gz -C ${PROTOBUF_DEST} \\\n && cd ${PROTOBUF_DEST}/protobuf-${PROTOBUF_VERSION}/ \\\n && ./configure --prefix=/usr \\\n && make -j 2 \\\n && make install\n#   Bootstrap\nRUN ./bootstrap\n#   Configure\nRUN mkdir build \\\n && cd build \\\n && ../configure --disable-java --disable-optimize --without-included-zookeeper --with-glog=/usr/local --with-protobuf=/usr --with-boost=/usr/local\n#   Build Mesos\nRUN cd build \\\n && make -j 2 install\n#   Install python eggs\nRUN easy_install /mesos/build/src/python/dist/mesos.interface-*.egg\n#  RUN easy_install /mesos/build/src/python/dist/mesos.native-*.egg\n#   This image builds mesos and retains the resulting headers and binaries.\n#   It is intended to support mesos isolator module development and production builds.\n#   A source code tree for the isolator should be mounted at /isolator if using the default entrypoint.\nVOLUME [\"/isolator\"]\nCOPY ./docker-isolator-entrypoint.sh /\nENTRYPOINT [\"/docker-isolator-entrypoint.sh\"]\nCMD [\"/usr/bin/make\", \"all\"]\n#   To build Docker image:\n#   docker build -t <docker-user-name>/mesos-build-module-dev:<ver> -f Dockerfile-mesos-modules-dev .\n#   default COMMAND simply builds isolator\n#   use it like this:\n#   docker run -ti -v <path-to-git-clone>/mesos-module-dvdi/isolator/:/isolator <docker-user-name>/mesos-build-module-dev:<ver>\n#   to extract the newly built .so to the mounted source directory volume mount - you should over-ride the default CMD like this:\n#   docker run -ti -v <path-to-git-clone>/mesos-module-dvdi/isolator/:/isolator <docker-user-name>/mesos-build-module-dev:<ver> /bin/bash -c  '/usr/bin/make all && cp /isolator/build/.libs/libmesos_dvdi_isolator-${ISOLATOR_VERSION}.so /isolator/'\n","originalDockerfileUglifiedHash":"616a27949adf9aa2c68c87b408ef294d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/18e60118b652c05034ebccbeefbcce022c8fd387.dockerfile"}