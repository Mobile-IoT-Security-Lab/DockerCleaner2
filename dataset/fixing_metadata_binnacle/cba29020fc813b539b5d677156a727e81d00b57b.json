{"seed":1148671084,"processedDockerfileHash":"2e9e73919c59038f14b09d24bf326663","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#   Apache Thrift Docker build environment for Ubuntu Artful\n#   Using all stock Ubuntu Artful packaging except for:\n#   - cpp: stock boost 1.62 in artful has a nasty bug so we use stock boost 1.63\n#   - d: does not come with Ubuntu so we're installing the latest\n#   - d: deimos for libevent and openssl omitted - not compatible / build errors\n#   - haxe: see THRIFT-4352, but test/haxe cores during testing\n#           and hxcpp 3.4.64 is not compatible with artful\n#\nFROM buildpack-deps:artful-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends apt apt-transport-https apt-utils curl dirmngr software-properties-common wget -y\n#   csharp (mono) - if we ever want a later version\n#   RUN echo \"deb http://download.mono-project.com/repo/debian xenial main\" | tee /etc/apt/sources.list.d/mono.list && \\\n#       apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF\n#   dotnet (core)\nRUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-artful-prod artful main\" > /etc/apt/sources.list.d/dotnetdev.list\n#   node.js (this step runs apt-get update internally) - if we ever want a later version\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\n#  ## install general dependencies\nRUN apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb llvm ninja-build pkg-config valgrind vim `` -y\nENV PATH=\"/usr/lib/llvm-3.8/bin:$PATH\"\n#   boost-1.62 has a terrible bug in boost::test, see https://svn.boost.org/trac10/ticket/12507\nRUN apt-get install --no-install-recommends libboost1.63-all-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EBCF975E5BA24D5E \\\n && wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list \\\n && wget -qO - https://dlang.org/d-keyring.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends dmd-bin libphobos2-dev dub dfmt dscanner libevent-dev libssl-dev xdg-utils `` -y\n#   libevent deimos doesn't seem to work so not enabling it:\n#   RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n#       curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n#       mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf libevent-master\n#   openssl deimos doesn't work with openssl-1.0.2 so not enabling it:\n#   RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n#       mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf openssl-master\n#   dart cannot be downloaded by aptitude because of\n#   https://github.com/dart-lang/sdk/issues/30512\n#   RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n#       curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \\\n#       apt-get update && \\\n#       apt-get install -y --no-install-recommends \\\n#         `# Dart dependencies` \\\n#         dart\n#   so instead we do:\nRUN wget https://storage.googleapis.com/dart-archive/channels/stable/release/latest/linux_packages/dart_1.24.2-1_amd64.deb \\\n && dpkg -i dart_1.24.2-1_amd64.deb \\\n && rm dart_1.24.2-1_amd64.deb\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\nRUN apt-get install --no-install-recommends dotnet-sdk-2.0.3 `` -y\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\nRUN apt-get install --no-install-recommends golang-go golang-race-detector-runtime `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\n#   see THRIFT-4352, test/haxe cores on artful\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# Haxe dependencies` \\\n#         haxe \\\n#         neko \\\n#         neko-dev\n#   RUN haxelib setup --always /usr/share/haxe/lib && \\\n#       haxelib install --always hxcpp\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-8-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.2 lua5.2-dev `` -y\n#   https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212\n#   lua5.3 does not install alternatives!\n#   need to update our luasocket code, lua doesn't have luaL_openlib any more\nRUN apt-get install --no-install-recommends nodejs `` -y\nRUN apt-get install --no-install-recommends ocaml opam `` -y \\\n && opam init --yes \\\n && opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php php-cli php-dev php-pear re2c phpunit `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-ipaddress python-pip python-setuptools python-six python-tornado python-twisted python-wheel python-zope.interface `` -y \\\n && pip install backports.ssl_match_hostname==3.7.0.1 --upgrade\nRUN apt-get install --no-install-recommends python3-all python3-all-dbg python3-all-dev python3-pip python3-setuptools python3-six python3-tornado python3-twisted python3-wheel python3-zope.interface `` -y\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN gem install bundler --version 2.4.12 --no-ri --no-rdoc\nRUN apt-get install --no-install-recommends cargo rustc `` -y\nRUN apt-get install --no-install-recommends cppcheck sloccount `` -y \\\n && pip install flake8==6.0.0\n#   Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\n#  Apache Thrift Docker build environment for Ubuntu Artful\n#  Using all stock Ubuntu Artful packaging except for:\n#  - cpp: stock boost 1.62 in artful has a nasty bug so we use stock boost 1.63\n#  - d: does not come with Ubuntu so we're installing the latest\n#  - d: deimos for libevent and openssl omitted - not compatible / build errors\n#  - haxe: see THRIFT-4352, but test/haxe cores during testing\n#          and hxcpp 3.4.64 is not compatible with artful\n#\nFROM buildpack-deps:artful-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends apt apt-transport-https apt-utils curl dirmngr software-properties-common wget -y\n#  csharp (mono) - if we ever want a later version\n#  RUN echo \"deb http://download.mono-project.com/repo/debian xenial main\" | tee /etc/apt/sources.list.d/mono.list && \\\n#      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF\n#  dotnet (core)\nRUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-artful-prod artful main\" > /etc/apt/sources.list.d/dotnetdev.list\n#  node.js (this step runs apt-get update internally) - if we ever want a later version\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\n# ## install general dependencies\nRUN apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb llvm ninja-build pkg-config valgrind vim `` -y\nENV PATH=\"/usr/lib/llvm-3.8/bin:$PATH\"\n#  boost-1.62 has a terrible bug in boost::test, see https://svn.boost.org/trac10/ticket/12507\nRUN apt-get install --no-install-recommends libboost1.63-all-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EBCF975E5BA24D5E \\\n && wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list \\\n && wget -qO - https://dlang.org/d-keyring.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends dmd-bin libphobos2-dev dub dfmt dscanner libevent-dev libssl-dev xdg-utils `` -y\n#  libevent deimos doesn't seem to work so not enabling it:\n#  RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n#      curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n#      mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#      mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#      rm -rf libevent-master\n#  openssl deimos doesn't work with openssl-1.0.2 so not enabling it:\n#  RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n#      mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#      mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#      rm -rf openssl-master\n#  dart cannot be downloaded by aptitude because of\n#  https://github.com/dart-lang/sdk/issues/30512\n#  RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n#      curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \\\n#      apt-get update && \\\n#      apt-get install -y --no-install-recommends \\\n#        `# Dart dependencies` \\\n#        dart\n#  so instead we do:\nRUN wget https://storage.googleapis.com/dart-archive/channels/stable/release/latest/linux_packages/dart_1.24.2-1_amd64.deb \\\n && dpkg -i dart_1.24.2-1_amd64.deb \\\n && rm dart_1.24.2-1_amd64.deb\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\nRUN apt-get install --no-install-recommends dotnet-sdk-2.0.3 `` -y\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\nRUN apt-get install --no-install-recommends golang-go golang-race-detector-runtime `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\n#  see THRIFT-4352, test/haxe cores on artful\n#  RUN apt-get install -y --no-install-recommends \\\n#  `# Haxe dependencies` \\\n#        haxe \\\n#        neko \\\n#        neko-dev\n#  RUN haxelib setup --always /usr/share/haxe/lib && \\\n#      haxelib install --always hxcpp\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-8-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.2 lua5.2-dev `` -y\n#  https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212\n#  lua5.3 does not install alternatives!\n#  need to update our luasocket code, lua doesn't have luaL_openlib any more\nRUN apt-get install --no-install-recommends nodejs `` -y\nRUN apt-get install --no-install-recommends ocaml opam `` -y \\\n && opam init --yes \\\n && opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php php-cli php-dev php-pear re2c phpunit `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-ipaddress python-pip python-setuptools python-six python-tornado python-twisted python-wheel python-zope.interface `` -y \\\n && pip install backports.ssl_match_hostname --upgrade\nRUN apt-get install --no-install-recommends python3-all python3-all-dbg python3-all-dev python3-pip python3-setuptools python3-six python3-tornado python3-twisted python3-wheel python3-zope.interface `` -y\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN gem install bundler --no-ri --no-rdoc\nRUN apt-get install --no-install-recommends cargo rustc `` -y\nRUN apt-get install --no-install-recommends cppcheck sloccount `` -y \\\n && pip install flake8\n#  Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","injectedSmells":[],"originalDockerfileHash":"8b25992e0f5280c500674f6f4477546c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#   Apache Thrift Docker build environment for Ubuntu Artful\n#   Using all stock Ubuntu Artful packaging except for:\n#   - cpp: stock boost 1.62 in artful has a nasty bug so we use stock boost 1.63\n#   - d: does not come with Ubuntu so we're installing the latest\n#   - d: deimos for libevent and openssl omitted - not compatible / build errors\n#   - haxe: see THRIFT-4352, but test/haxe cores during testing\n#           and hxcpp 3.4.64 is not compatible with artful\n#\nFROM buildpack-deps:artful-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends apt apt-transport-https apt-utils curl dirmngr software-properties-common wget -y\n#   csharp (mono) - if we ever want a later version\n#   RUN echo \"deb http://download.mono-project.com/repo/debian xenial main\" | tee /etc/apt/sources.list.d/mono.list && \\\n#       apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF\n#   dotnet (core)\nRUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-artful-prod artful main\" > /etc/apt/sources.list.d/dotnetdev.list\n#   node.js (this step runs apt-get update internally) - if we ever want a later version\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\n#  ## install general dependencies\nRUN apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb llvm ninja-build pkg-config valgrind vim `` -y\nENV PATH=\"/usr/lib/llvm-3.8/bin:$PATH\"\n#   boost-1.62 has a terrible bug in boost::test, see https://svn.boost.org/trac10/ticket/12507\nRUN apt-get install --no-install-recommends libboost1.63-all-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EBCF975E5BA24D5E \\\n && wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list \\\n && wget -qO - https://dlang.org/d-keyring.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends dmd-bin libphobos2-dev dub dfmt dscanner libevent-dev libssl-dev xdg-utils `` -y\n#   libevent deimos doesn't seem to work so not enabling it:\n#   RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n#       curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n#       mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf libevent-master\n#   openssl deimos doesn't work with openssl-1.0.2 so not enabling it:\n#   RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n#       mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf openssl-master\n#   dart cannot be downloaded by aptitude because of\n#   https://github.com/dart-lang/sdk/issues/30512\n#   RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n#       curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \\\n#       apt-get update && \\\n#       apt-get install -y --no-install-recommends \\\n#         `# Dart dependencies` \\\n#         dart\n#   so instead we do:\nRUN wget https://storage.googleapis.com/dart-archive/channels/stable/release/latest/linux_packages/dart_1.24.2-1_amd64.deb \\\n && dpkg -i dart_1.24.2-1_amd64.deb \\\n && rm dart_1.24.2-1_amd64.deb\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\nRUN apt-get install --no-install-recommends dotnet-sdk-2.0.3 `` -y\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\nRUN apt-get install --no-install-recommends golang-go golang-race-detector-runtime `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\n#   see THRIFT-4352, test/haxe cores on artful\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# Haxe dependencies` \\\n#         haxe \\\n#         neko \\\n#         neko-dev\n#   RUN haxelib setup --always /usr/share/haxe/lib && \\\n#       haxelib install --always hxcpp\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-8-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.2 lua5.2-dev `` -y\n#   https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212\n#   lua5.3 does not install alternatives!\n#   need to update our luasocket code, lua doesn't have luaL_openlib any more\nRUN apt-get install --no-install-recommends nodejs `` -y\nRUN apt-get install --no-install-recommends ocaml opam `` -y \\\n && opam init --yes \\\n && opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php php-cli php-dev php-pear re2c phpunit `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-ipaddress python-pip python-setuptools python-six python-tornado python-twisted python-wheel python-zope.interface `` -y \\\n && pip install backports.ssl_match_hostname --upgrade\nRUN apt-get install --no-install-recommends python3-all python3-all-dbg python3-all-dev python3-pip python3-setuptools python3-six python3-tornado python3-twisted python3-wheel python3-zope.interface `` -y\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN gem install bundler --no-ri --no-rdoc\nRUN apt-get install --no-install-recommends cargo rustc `` -y\nRUN apt-get install --no-install-recommends cppcheck sloccount `` -y \\\n && pip install flake8\n#   Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","originalDockerfileUglifiedHash":"88775ff3b4002e7fc14de81cf296c892","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cba29020fc813b539b5d677156a727e81d00b57b.dockerfile"}