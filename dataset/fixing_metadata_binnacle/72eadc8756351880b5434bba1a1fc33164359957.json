{"seed":3145470748,"processedDockerfileHash":"3377ec082efd713ef41e5f9cc3b10fc8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Creates an image for skycoin development\nFROM golang:1.11-stretch\nARG BDATE=\"test_build\"\nARG SCOMMIT=\"develop\"\n#   Image labels (see ./hooks/build for ARGS)\nLABEL org.label-schema.name=\"skycoindev-cli\" \\\n      org.label-schema.description=\"Docker image with go, node and command line tools for Skycoin developers\" \\\n      org.label-schema.vendor=\"Skycoin project\" \\\n      org.label-schema.url=\"skycoin.net\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=\"$BDATE\" \\\n      org.label-schema.vcs-url=\"https://github.com/skycoin/skycoin.git\" \\\n      org.label-schema.vcs-ref=\"$SCOMMIT\" \\\n      org.label-schema.usage=\"https://github.com/skycoin/skycoin/blob/$SCOMMIT/docker/images/dev-cli/README.md\" \\\n      org.label-schema.version=\"1.0.0-rc.1\" \\\n      org.label-schema.docker.cmd=\"mkdir src; docker run --rm -v src:/go/src skycoin/skycoindev-cli ; go get github.com/skycoin/skycoin ; sudo chown -R `whoami` src\"\n#   Installs nodejs and npm. Needed for moxygen.\n#   Packages installed in buildpack-deps:stretch\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends autoconf automake bzip2 dpkg-dev file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libncurses5-dev libncursesw5-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch xz-utils zlib1g-dev build-essential ruby ruby-dev -y ; apt-get clean ; rm -rf /var/lib/apt/lists/*\n#   Build steps in node:10 (uid=2000)\nRUN groupadd --gid 2000 node \\\n && useradd --uid 2000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NODE_VERSION=\"10.13.0\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV YARN_VERSION=\"1.12.3\"\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#   Installs software\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends cmake libpcre3-dev gdbserver gdb vim less ctags vim-scripts screen sudo doxygen valgrind bsdmainutils texlive-latex-base -y ; apt-get clean ; rm -rf /var/lib/apt/lists/* ; npm install moxygen@0.8.0 -g ; echo 'Installing Criterion ...' ; git clone --recurse-submodules -j8 https://github.com/skycoin/Criterion /go/Criterion ; cd /go/Criterion ; cmake . ; make install ; rm -r /go/Criterion ; echo 'Success nstalling Criterion ...'\n#   Installs go development tools\nRUN go get -u github.com/derekparker/delve/cmd/dlv \\\n && go get -u github.com/FiloSottile/vendorcheck \\\n && go get -u github.com/alecthomas/gometalinter \\\n && gometalinter --vendored-linters --install \\\n && go get -u github.com/zmb3/gogetdoc \\\n && go get -u golang.org/x/tools/cmd/guru \\\n && go get -u github.com/davidrjenni/reftools/cmd/fillstruct \\\n && go get -u github.com/rogpeppe/godef \\\n && go get -u github.com/fatih/motion \\\n && go get -u github.com/nsf/gocode \\\n && go get -u github.com/jstemmer/gotags \\\n && go get -u github.com/josharian/impl \\\n && go get -u github.com/fatih/gomodifytags \\\n && go get -u github.com/dominikh/go-tools/cmd/keyify \\\n && go get -u golang.org/x/tools/cmd/gorename \\\n && go get -u github.com/klauspost/asmfmt/cmd/asmfmt \\\n && go get -u github.com/vektra/mockery/.../ \\\n && go get -u github.com/wadey/gocovmerge \\\n && curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n#   Install vim-go development tools\nRUN git clone https://github.com/fatih/vim-go /usr/share/vim/vim80/pack/dev/start/vim-go \\\n && git clone https://github.com/tpope/vim-fugitive /usr/share/vim/vim80/pack/dev/start/vim-fugitive \\\n && git clone https://github.com/Shougo/vimshell.vim /usr/share/vim/vim80/pack/dev/start/0vimshell \\\n && git clone https://github.com/Shougo/vimproc.vim /usr/share/vim/vim80/pack/dev/start/0vimproc \\\n && git clone https://github.com/w0rp/ale.git /usr/share/vim/vim80/pack/dev/start/ale \\\n && cd /usr/share/vim/vim80/pack/dev/start/0vimproc \\\n && make ; git clone https://github.com/iberianpig/tig-explorer.vim.git /tmp/tig-explorer ; cp /tmp/tig-explorer/autoload/tig_explorer.vim /usr/share/vim/vim80/autoload ; cp /tmp/tig-explorer/plugin/tig_explorer.vim /usr/share/vim/vim80/plugin ; rm -rf /tmp/tig-explorer\n#   Install SWIG-3.0.12\nRUN cd /tmp/ ; wget http://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz \\\n && tar -zxf swig-3.0.12.tar.gz ; cd swig-3.0.12 ; ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/swig-*\n#   Install Travis CLI\n#   Install golangci-lint\nENV GOLANGCI_LINT=\"1.12.3\"\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v$GOLANGCI_LINT\n#   Install Travis CLI\nRUN gem install travis --version 1.11.1\nWORKDIR $GOPATH/src/github.com/skycoin\nVOLUME $GOPATH/src/\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Creates an image for skycoin development\nFROM golang:1.11-stretch\nARG BDATE=\"test_build\"\nARG SCOMMIT=\"develop\"\n#  Image labels (see ./hooks/build for ARGS)\nLABEL org.label-schema.name=\"skycoindev-cli\" \\\n      org.label-schema.description=\"Docker image with go, node and command line tools for Skycoin developers\" \\\n      org.label-schema.vendor=\"Skycoin project\" \\\n      org.label-schema.url=\"skycoin.net\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=\"$BDATE\" \\\n      org.label-schema.vcs-url=\"https://github.com/skycoin/skycoin.git\" \\\n      org.label-schema.vcs-ref=\"$SCOMMIT\" \\\n      org.label-schema.usage=\"https://github.com/skycoin/skycoin/blob/$SCOMMIT/docker/images/dev-cli/README.md\" \\\n      org.label-schema.version=\"1.0.0-rc.1\" \\\n      org.label-schema.docker.cmd=\"mkdir src; docker run --rm -v src:/go/src skycoin/skycoindev-cli ; go get github.com/skycoin/skycoin ; sudo chown -R `whoami` src\"\n#  Installs nodejs and npm. Needed for moxygen.\n#  Packages installed in buildpack-deps:stretch\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends autoconf automake bzip2 dpkg-dev file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libncurses5-dev libncursesw5-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch xz-utils zlib1g-dev build-essential ruby ruby-dev -y ; apt-get clean ; rm -rf /var/lib/apt/lists/*\n#  Build steps in node:10 (uid=2000)\nRUN groupadd --gid 2000 node \\\n && useradd --uid 2000 --gid node --shell /bin/bash --create-home node\n#  gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NODE_VERSION=\"10.13.0\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV YARN_VERSION=\"1.12.3\"\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#  Installs software\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends cmake libpcre3-dev gdbserver gdb vim less ctags vim-scripts screen sudo doxygen valgrind bsdmainutils texlive-latex-base -y ; apt-get clean ; rm -rf /var/lib/apt/lists/* ; npm install moxygen -g ; echo 'Installing Criterion ...' ; git clone --recurse-submodules -j8 https://github.com/skycoin/Criterion /go/Criterion ; cd /go/Criterion ; cmake . ; make install ; rm -r /go/Criterion ; echo 'Success nstalling Criterion ...'\n#  Installs go development tools\nRUN go get -u github.com/derekparker/delve/cmd/dlv \\\n && go get -u github.com/FiloSottile/vendorcheck \\\n && go get -u github.com/alecthomas/gometalinter \\\n && gometalinter --vendored-linters --install \\\n && go get -u github.com/zmb3/gogetdoc \\\n && go get -u golang.org/x/tools/cmd/guru \\\n && go get -u github.com/davidrjenni/reftools/cmd/fillstruct \\\n && go get -u github.com/rogpeppe/godef \\\n && go get -u github.com/fatih/motion \\\n && go get -u github.com/nsf/gocode \\\n && go get -u github.com/jstemmer/gotags \\\n && go get -u github.com/josharian/impl \\\n && go get -u github.com/fatih/gomodifytags \\\n && go get -u github.com/dominikh/go-tools/cmd/keyify \\\n && go get -u golang.org/x/tools/cmd/gorename \\\n && go get -u github.com/klauspost/asmfmt/cmd/asmfmt \\\n && go get -u github.com/vektra/mockery/.../ \\\n && go get -u github.com/wadey/gocovmerge \\\n && curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n#  Install vim-go development tools\nRUN git clone https://github.com/fatih/vim-go /usr/share/vim/vim80/pack/dev/start/vim-go \\\n && git clone https://github.com/tpope/vim-fugitive /usr/share/vim/vim80/pack/dev/start/vim-fugitive \\\n && git clone https://github.com/Shougo/vimshell.vim /usr/share/vim/vim80/pack/dev/start/0vimshell \\\n && git clone https://github.com/Shougo/vimproc.vim /usr/share/vim/vim80/pack/dev/start/0vimproc \\\n && git clone https://github.com/w0rp/ale.git /usr/share/vim/vim80/pack/dev/start/ale \\\n && cd /usr/share/vim/vim80/pack/dev/start/0vimproc \\\n && make ; git clone https://github.com/iberianpig/tig-explorer.vim.git /tmp/tig-explorer ; cp /tmp/tig-explorer/autoload/tig_explorer.vim /usr/share/vim/vim80/autoload ; cp /tmp/tig-explorer/plugin/tig_explorer.vim /usr/share/vim/vim80/plugin ; rm -rf /tmp/tig-explorer\n#  Install SWIG-3.0.12\nRUN cd /tmp/ ; wget http://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz \\\n && tar -zxf swig-3.0.12.tar.gz ; cd swig-3.0.12 ; ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/swig-*\n#  Install Travis CLI\n#  Install golangci-lint\nENV GOLANGCI_LINT=\"1.12.3\"\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v$GOLANGCI_LINT\n#  Install Travis CLI\nRUN gem install travis\nWORKDIR $GOPATH/src/github.com/skycoin\nVOLUME $GOPATH/src/\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\n","injectedSmells":[],"originalDockerfileHash":"04e091c0916b5344481dc396bb7c131c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Creates an image for skycoin development\nFROM golang:1.11-stretch\nARG BDATE=\"test_build\"\nARG SCOMMIT=\"develop\"\n#   Image labels (see ./hooks/build for ARGS)\nLABEL org.label-schema.name=\"skycoindev-cli\" \\\n      org.label-schema.description=\"Docker image with go, node and command line tools for Skycoin developers\" \\\n      org.label-schema.vendor=\"Skycoin project\" \\\n      org.label-schema.url=\"skycoin.net\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=\"$BDATE\" \\\n      org.label-schema.vcs-url=\"https://github.com/skycoin/skycoin.git\" \\\n      org.label-schema.vcs-ref=\"$SCOMMIT\" \\\n      org.label-schema.usage=\"https://github.com/skycoin/skycoin/blob/$SCOMMIT/docker/images/dev-cli/README.md\" \\\n      org.label-schema.version=\"1.0.0-rc.1\" \\\n      org.label-schema.docker.cmd=\"mkdir src; docker run --rm -v src:/go/src skycoin/skycoindev-cli ; go get github.com/skycoin/skycoin ; sudo chown -R `whoami` src\"\n#   Installs nodejs and npm. Needed for moxygen.\n#   Packages installed in buildpack-deps:stretch\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends autoconf automake bzip2 dpkg-dev file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libncurses5-dev libncursesw5-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch xz-utils zlib1g-dev build-essential ruby ruby-dev -y ; apt-get clean ; rm -rf /var/lib/apt/lists/*\n#   Build steps in node:10 (uid=2000)\nRUN groupadd --gid 2000 node \\\n && useradd --uid 2000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NODE_VERSION=\"10.13.0\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV YARN_VERSION=\"1.12.3\"\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#   Installs software\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends cmake libpcre3-dev gdbserver gdb vim less ctags vim-scripts screen sudo doxygen valgrind bsdmainutils texlive-latex-base -y ; apt-get clean ; rm -rf /var/lib/apt/lists/* ; npm install moxygen -g ; echo 'Installing Criterion ...' ; git clone --recurse-submodules -j8 https://github.com/skycoin/Criterion /go/Criterion ; cd /go/Criterion ; cmake . ; make install ; rm -r /go/Criterion ; echo 'Success nstalling Criterion ...'\n#   Installs go development tools\nRUN go get -u github.com/derekparker/delve/cmd/dlv \\\n && go get -u github.com/FiloSottile/vendorcheck \\\n && go get -u github.com/alecthomas/gometalinter \\\n && gometalinter --vendored-linters --install \\\n && go get -u github.com/zmb3/gogetdoc \\\n && go get -u golang.org/x/tools/cmd/guru \\\n && go get -u github.com/davidrjenni/reftools/cmd/fillstruct \\\n && go get -u github.com/rogpeppe/godef \\\n && go get -u github.com/fatih/motion \\\n && go get -u github.com/nsf/gocode \\\n && go get -u github.com/jstemmer/gotags \\\n && go get -u github.com/josharian/impl \\\n && go get -u github.com/fatih/gomodifytags \\\n && go get -u github.com/dominikh/go-tools/cmd/keyify \\\n && go get -u golang.org/x/tools/cmd/gorename \\\n && go get -u github.com/klauspost/asmfmt/cmd/asmfmt \\\n && go get -u github.com/vektra/mockery/.../ \\\n && go get -u github.com/wadey/gocovmerge \\\n && curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n#   Install vim-go development tools\nRUN git clone https://github.com/fatih/vim-go /usr/share/vim/vim80/pack/dev/start/vim-go \\\n && git clone https://github.com/tpope/vim-fugitive /usr/share/vim/vim80/pack/dev/start/vim-fugitive \\\n && git clone https://github.com/Shougo/vimshell.vim /usr/share/vim/vim80/pack/dev/start/0vimshell \\\n && git clone https://github.com/Shougo/vimproc.vim /usr/share/vim/vim80/pack/dev/start/0vimproc \\\n && git clone https://github.com/w0rp/ale.git /usr/share/vim/vim80/pack/dev/start/ale \\\n && cd /usr/share/vim/vim80/pack/dev/start/0vimproc \\\n && make ; git clone https://github.com/iberianpig/tig-explorer.vim.git /tmp/tig-explorer ; cp /tmp/tig-explorer/autoload/tig_explorer.vim /usr/share/vim/vim80/autoload ; cp /tmp/tig-explorer/plugin/tig_explorer.vim /usr/share/vim/vim80/plugin ; rm -rf /tmp/tig-explorer\n#   Install SWIG-3.0.12\nRUN cd /tmp/ ; wget http://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz \\\n && tar -zxf swig-3.0.12.tar.gz ; cd swig-3.0.12 ; ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/swig-*\n#   Install Travis CLI\n#   Install golangci-lint\nENV GOLANGCI_LINT=\"1.12.3\"\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v$GOLANGCI_LINT\n#   Install Travis CLI\nRUN gem install travis\nWORKDIR $GOPATH/src/github.com/skycoin\nVOLUME $GOPATH/src/\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\n","originalDockerfileUglifiedHash":"6c24c241969afa54223a85ac75674592","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/72eadc8756351880b5434bba1a1fc33164359957.dockerfile"}