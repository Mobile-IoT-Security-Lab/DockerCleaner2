{"seed":2832412922,"processedDockerfileHash":"2c1a9ab25b879b8ce2452fbcad2a9df8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:trusty\n#   Required system packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 unzip=6.0-9ubuntu1.5 build-essential=11.6ubuntu6 ruby-dev=1:1.9.3.4 libreadline6-dev=6.3-4ubuntu2 libncurses5-dev=5.9+20140118-1ubuntu1 perl=5.18.2-2ubuntu1.7 -y \\\n && gem install fpm --version 1.15.1\nRUN mkdir /build /build/root\nWORKDIR /build\n#   Download packages\nRUN wget https://openresty.org/download/ngx_openresty-1.9.3.1.tar.gz \\\n && tar xfz ngx_openresty-1.9.3.1.tar.gz \\\n && wget https://github.com/openresty/lua-nginx-module/archive/ssl-cert-by-lua.zip \\\n && unzip ssl-cert-by-lua.zip \\\n && wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.tar.gz -O ngx_devel_kit-0.2.19.tar.gz \\\n && tar xfz ngx_devel_kit-0.2.19.tar.gz \\\n && wget https://www.openssl.org/source/openssl-1.0.2d.tar.gz \\\n && tar xfz openssl-1.0.2d.tar.gz \\\n && wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.37.tar.gz \\\n && tar xfz pcre-8.37.tar.gz \\\n && wget http://zlib.net/zlib-1.2.8.tar.gz \\\n && tar xfz zlib-1.2.8.tar.gz \\\n && wget http://luajit.org/download/LuaJIT-2.1.0-beta1.tar.gz \\\n && tar xfz LuaJIT-2.1.0-beta1.tar.gz \\\n && wget https://keplerproject.github.io/luarocks/releases/luarocks-2.2.2.tar.gz \\\n && tar xfz luarocks-2.2.2.tar.gz\n#   Compile and install openresty\nRUN cd /build/ngx_openresty-1.9.3.1 \\\n && rm -rf bundle/LuaJIT* \\\n && mv /build/LuaJIT-2.1.0-beta1 bundle/ \\\n && rm -rf bundle/ngx_lua-* \\\n && mv /build/lua-nginx-module-ssl-cert-by-lua bundle/ngx_lua-0.9.16 \\\n && patch -p1 -d bundle/nginx-1.9.3 < bundle/ngx_lua-0.9.16/patches/nginx-ssl-cert.patch \\\n && ./configure --with-http_ssl_module --with-http_stub_status_module --with-http_gzip_static_module --with-debug --with-openssl=/build/openssl-1.0.2d --with-pcre=/build/pcre-8.37 --with-pcre-jit --with-zlib=/build/zlib-1.2.8 --with-cc-opt='-O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --user=www-data --group=www-data \\\n && make -j4 \\\n && make install DESTDIR=/build/root\n#   Compile LuaRocks\nRUN mkdir -p /usr/share/nginx \\\n && ln -s /build/root/usr/share/nginx/luajit /usr/share/nginx/luajit \\\n && cd /build/luarocks-2.2.2 \\\n && ./configure --prefix=/usr/share/nginx/luajit --with-lua=/usr/share/nginx/luajit --lua-suffix=jit-2.1.0-beta1 --with-lua-include=/usr/share/nginx/luajit/include/luajit-2.1 --with-downloader=wget --with-md5-checker=openssl \\\n && make build \\\n && make install DESTDIR=/build/root \\\n && rm -rf /usr/share/nginx\nCOPY scripts/* nginx-scripts/\nCOPY conf/* nginx-conf/\n#   Add extras to the build root\nRUN cd /build/root \\\n && mkdir etc/init.d etc/logrotate.d etc/nginx/sites-available etc/nginx/sites-enabled var/lib var/lib/nginx \\\n && mv usr/share/nginx/bin/resty usr/sbin/resty \\\n && rm -rf usr/share/nginx/bin \\\n && mv usr/share/nginx/nginx/html usr/share/nginx/html \\\n && rm -rf usr/share/nginx/nginx \\\n && cp -R /build/ngx_openresty-1.9.3.1/bundle/ngx_lua-0.9.16/lua/ngx usr/share/nginx/lualib \\\n && rm etc/nginx/*.default \\\n && cp /build/nginx-scripts/init etc/init.d/nginx \\\n && chmod +x etc/init.d/nginx \\\n && cp /build/nginx-conf/logrotate etc/logrotate.d/nginx \\\n && cp /build/nginx-conf/nginx.conf etc/nginx/nginx.conf \\\n && cp /build/nginx-conf/default etc/nginx/sites-available/default\n#   Build deb\nRUN fpm -s dir -t deb -n openresty -v 1.9.3.1-tapstream1 -C /build/root -p openresty_VERSION_ARCH.deb --description 'a high performance web server and a reverse proxy server' --url 'http://openresty.org/' --category httpd --maintainer 'Nick Sitarz <nick@tapstream.com>' --depends wget --depends unzip --depends libncurses5 --depends libreadline6 --deb-build-depends build-essential --replaces 'nginx-full' --provides 'nginx-full' --conflicts 'nginx-full' --replaces 'nginx-common' --provides 'nginx-common' --conflicts 'nginx-common' --after-install nginx-scripts/postinstall --before-install nginx-scripts/preinstall --after-remove nginx-scripts/postremove --before-remove nginx-scripts/preremove etc run usr var\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:trusty\n#  Required system packages\nRUN apt-get update \\\n && apt-get install wget unzip build-essential ruby-dev libreadline6-dev libncurses5-dev perl -y \\\n && gem install fpm\nRUN mkdir /build /build/root\nWORKDIR /build\n#  Download packages\nRUN wget https://openresty.org/download/ngx_openresty-1.9.3.1.tar.gz \\\n && tar xfz ngx_openresty-1.9.3.1.tar.gz \\\n && wget https://github.com/openresty/lua-nginx-module/archive/ssl-cert-by-lua.zip \\\n && unzip ssl-cert-by-lua.zip \\\n && wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.tar.gz -O ngx_devel_kit-0.2.19.tar.gz \\\n && tar xfz ngx_devel_kit-0.2.19.tar.gz \\\n && wget https://www.openssl.org/source/openssl-1.0.2d.tar.gz \\\n && tar xfz openssl-1.0.2d.tar.gz \\\n && wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.37.tar.gz \\\n && tar xfz pcre-8.37.tar.gz \\\n && wget http://zlib.net/zlib-1.2.8.tar.gz \\\n && tar xfz zlib-1.2.8.tar.gz \\\n && wget http://luajit.org/download/LuaJIT-2.1.0-beta1.tar.gz \\\n && tar xfz LuaJIT-2.1.0-beta1.tar.gz \\\n && wget https://keplerproject.github.io/luarocks/releases/luarocks-2.2.2.tar.gz \\\n && tar xfz luarocks-2.2.2.tar.gz\n#  Compile and install openresty\nRUN cd /build/ngx_openresty-1.9.3.1 \\\n && rm -rf bundle/LuaJIT* \\\n && mv /build/LuaJIT-2.1.0-beta1 bundle/ \\\n && rm -rf bundle/ngx_lua-* \\\n && mv /build/lua-nginx-module-ssl-cert-by-lua bundle/ngx_lua-0.9.16 \\\n && patch -p1 -d bundle/nginx-1.9.3 < bundle/ngx_lua-0.9.16/patches/nginx-ssl-cert.patch \\\n && ./configure --with-http_ssl_module --with-http_stub_status_module --with-http_gzip_static_module --with-debug --with-openssl=/build/openssl-1.0.2d --with-pcre=/build/pcre-8.37 --with-pcre-jit --with-zlib=/build/zlib-1.2.8 --with-cc-opt='-O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --user=www-data --group=www-data \\\n && make -j4 \\\n && make install DESTDIR=/build/root\n#  Compile LuaRocks\nRUN mkdir -p /usr/share/nginx \\\n && ln -s /build/root/usr/share/nginx/luajit /usr/share/nginx/luajit \\\n && cd /build/luarocks-2.2.2 \\\n && ./configure --prefix=/usr/share/nginx/luajit --with-lua=/usr/share/nginx/luajit --lua-suffix=jit-2.1.0-beta1 --with-lua-include=/usr/share/nginx/luajit/include/luajit-2.1 --with-downloader=wget --with-md5-checker=openssl \\\n && make build \\\n && make install DESTDIR=/build/root \\\n && rm -rf /usr/share/nginx\nCOPY scripts/* nginx-scripts/\nCOPY conf/* nginx-conf/\n#  Add extras to the build root\nRUN cd /build/root \\\n && mkdir etc/init.d etc/logrotate.d etc/nginx/sites-available etc/nginx/sites-enabled var/lib var/lib/nginx \\\n && mv usr/share/nginx/bin/resty usr/sbin/resty \\\n && rm -rf usr/share/nginx/bin \\\n && mv usr/share/nginx/nginx/html usr/share/nginx/html \\\n && rm -rf usr/share/nginx/nginx \\\n && cp -R /build/ngx_openresty-1.9.3.1/bundle/ngx_lua-0.9.16/lua/ngx usr/share/nginx/lualib \\\n && rm etc/nginx/*.default \\\n && cp /build/nginx-scripts/init etc/init.d/nginx \\\n && chmod +x etc/init.d/nginx \\\n && cp /build/nginx-conf/logrotate etc/logrotate.d/nginx \\\n && cp /build/nginx-conf/nginx.conf etc/nginx/nginx.conf \\\n && cp /build/nginx-conf/default etc/nginx/sites-available/default\n#  Build deb\nRUN fpm -s dir -t deb -n openresty -v 1.9.3.1-tapstream1 -C /build/root -p openresty_VERSION_ARCH.deb --description 'a high performance web server and a reverse proxy server' --url 'http://openresty.org/' --category httpd --maintainer 'Nick Sitarz <nick@tapstream.com>' --depends wget --depends unzip --depends libncurses5 --depends libreadline6 --deb-build-depends build-essential --replaces 'nginx-full' --provides 'nginx-full' --conflicts 'nginx-full' --replaces 'nginx-common' --provides 'nginx-common' --conflicts 'nginx-common' --after-install nginx-scripts/postinstall --before-install nginx-scripts/preinstall --after-remove nginx-scripts/postremove --before-remove nginx-scripts/preremove etc run usr var\n","injectedSmells":[],"originalDockerfileHash":"9caf15d9b81a00e4cfa6025da8d330fa","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:trusty\n#   Required system packages\nRUN apt-get update \\\n && apt-get install wget unzip build-essential ruby-dev libreadline6-dev libncurses5-dev perl -y \\\n && gem install fpm\nRUN mkdir /build /build/root\nWORKDIR /build\n#   Download packages\nRUN wget https://openresty.org/download/ngx_openresty-1.9.3.1.tar.gz \\\n && tar xfz ngx_openresty-1.9.3.1.tar.gz \\\n && wget https://github.com/openresty/lua-nginx-module/archive/ssl-cert-by-lua.zip \\\n && unzip ssl-cert-by-lua.zip \\\n && wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.tar.gz -O ngx_devel_kit-0.2.19.tar.gz \\\n && tar xfz ngx_devel_kit-0.2.19.tar.gz \\\n && wget https://www.openssl.org/source/openssl-1.0.2d.tar.gz \\\n && tar xfz openssl-1.0.2d.tar.gz \\\n && wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.37.tar.gz \\\n && tar xfz pcre-8.37.tar.gz \\\n && wget http://zlib.net/zlib-1.2.8.tar.gz \\\n && tar xfz zlib-1.2.8.tar.gz \\\n && wget http://luajit.org/download/LuaJIT-2.1.0-beta1.tar.gz \\\n && tar xfz LuaJIT-2.1.0-beta1.tar.gz \\\n && wget https://keplerproject.github.io/luarocks/releases/luarocks-2.2.2.tar.gz \\\n && tar xfz luarocks-2.2.2.tar.gz\n#   Compile and install openresty\nRUN cd /build/ngx_openresty-1.9.3.1 \\\n && rm -rf bundle/LuaJIT* \\\n && mv /build/LuaJIT-2.1.0-beta1 bundle/ \\\n && rm -rf bundle/ngx_lua-* \\\n && mv /build/lua-nginx-module-ssl-cert-by-lua bundle/ngx_lua-0.9.16 \\\n && patch -p1 -d bundle/nginx-1.9.3 < bundle/ngx_lua-0.9.16/patches/nginx-ssl-cert.patch \\\n && ./configure --with-http_ssl_module --with-http_stub_status_module --with-http_gzip_static_module --with-debug --with-openssl=/build/openssl-1.0.2d --with-pcre=/build/pcre-8.37 --with-pcre-jit --with-zlib=/build/zlib-1.2.8 --with-cc-opt='-O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --user=www-data --group=www-data \\\n && make -j4 \\\n && make install DESTDIR=/build/root\n#   Compile LuaRocks\nRUN mkdir -p /usr/share/nginx \\\n && ln -s /build/root/usr/share/nginx/luajit /usr/share/nginx/luajit \\\n && cd /build/luarocks-2.2.2 \\\n && ./configure --prefix=/usr/share/nginx/luajit --with-lua=/usr/share/nginx/luajit --lua-suffix=jit-2.1.0-beta1 --with-lua-include=/usr/share/nginx/luajit/include/luajit-2.1 --with-downloader=wget --with-md5-checker=openssl \\\n && make build \\\n && make install DESTDIR=/build/root \\\n && rm -rf /usr/share/nginx\nCOPY scripts/* nginx-scripts/\nCOPY conf/* nginx-conf/\n#   Add extras to the build root\nRUN cd /build/root \\\n && mkdir etc/init.d etc/logrotate.d etc/nginx/sites-available etc/nginx/sites-enabled var/lib var/lib/nginx \\\n && mv usr/share/nginx/bin/resty usr/sbin/resty \\\n && rm -rf usr/share/nginx/bin \\\n && mv usr/share/nginx/nginx/html usr/share/nginx/html \\\n && rm -rf usr/share/nginx/nginx \\\n && cp -R /build/ngx_openresty-1.9.3.1/bundle/ngx_lua-0.9.16/lua/ngx usr/share/nginx/lualib \\\n && rm etc/nginx/*.default \\\n && cp /build/nginx-scripts/init etc/init.d/nginx \\\n && chmod +x etc/init.d/nginx \\\n && cp /build/nginx-conf/logrotate etc/logrotate.d/nginx \\\n && cp /build/nginx-conf/nginx.conf etc/nginx/nginx.conf \\\n && cp /build/nginx-conf/default etc/nginx/sites-available/default\n#   Build deb\nRUN fpm -s dir -t deb -n openresty -v 1.9.3.1-tapstream1 -C /build/root -p openresty_VERSION_ARCH.deb --description 'a high performance web server and a reverse proxy server' --url 'http://openresty.org/' --category httpd --maintainer 'Nick Sitarz <nick@tapstream.com>' --depends wget --depends unzip --depends libncurses5 --depends libreadline6 --deb-build-depends build-essential --replaces 'nginx-full' --provides 'nginx-full' --conflicts 'nginx-full' --replaces 'nginx-common' --provides 'nginx-common' --conflicts 'nginx-common' --after-install nginx-scripts/postinstall --before-install nginx-scripts/preinstall --after-remove nginx-scripts/postremove --before-remove nginx-scripts/preremove etc run usr var\n","originalDockerfileUglifiedHash":"64681fb198fe76ca04b5a559faf248eb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fe123f2c90f6761690339202b9511751012ca23e.dockerfile"}