{"seed":3496471263,"processedDockerfileHash":"d5e8fb218f679058518098934c3b9db5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG FROM_TAG=2.176.1\nFROM jenkins/jenkins:${FROM_TAG}\nARG GOSU_VERSION=1.10\n#   Install plugins\nCOPY plugins.txt /usr/share/jenkins/ref/\n#  # Issue with jenkins update site and letsencrypt cert. Using -k for the time being\nARG CURL_OPTIONS=-sSfLk\nRUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt\n#   Using root to install and run entrypoint.\n#   We will change the user to jenkins using gosu\nUSER root\nRUN if [ -f /etc/alpine-release ] ; then apk add shadow py-setuptools --no-cache \\\n && easy_install-2.7 pip==19.1 ; elif [ -f /etc/debian_version ] ; then apt-get update -y \\\n && apt-get install --no-install-recommends python-setuptools -y \\\n && easy_install pip==19.1 \\\n && rm -rf /var/lib/apt/lists/* ; fi\nRUN pip install awscli==1.27.114 PyYAML==3.12 six==1.16.0 requests==2.28.2 botocore==1.29.114 boto3==1.26.114 --no-cache-dir\nRUN curl -SsL https://releases.hashicorp.com/envconsul/0.7.3/envconsul_0.7.3_linux_amd64.tgz | tar -C /usr/bin -xvzf - \\\n && chmod +x /usr/bin/envconsul\nRUN curl -SsLo /usr/bin/gosu https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 \\\n && chmod +x /usr/bin/gosu\n#   Separate between JENKINS_HOME and WORKSPACE dir. Best if we use NFS for JENKINS_HOME\nRUN mkdir -p /jenkins-workspace-home \\\n && chown -R jenkins:jenkins /jenkins-workspace-home\n#   Do things on behalf of jenkins user\nUSER jenkins\n#   Add all init groovy scripts to ref folder and change their ext to .override\n#   so Jenkins will override them every time it starts\nCOPY init-scripts/* /usr/share/jenkins/ref/init.groovy.d/\nRUN cd /usr/share/jenkins/ref/init.groovy.d/ \\\n && for f in *.groovy; do mv \"$f\" \"${f}.override\" ; done\n#   Add configuration handlers groovy scripts\nCOPY config-handlers /usr/share/jenkins/config-handlers\nVOLUME /jenkins-workspace-home\n#   Revert to root\nUSER root\nCOPY bin/* /usr/bin/\nENV CONFIG_FILE_LOCATION=\"/dev/shm/jenkins-config.yml\"\nENV TOKEN_FILE_LOCATION=\"/dev/shm/.api-token\"\nENV CONFIG_CACHE_DIR=\"/dev/shm/.jenkins-config-cache\"\nENV QUIET_STARTUP_FILE_LOCATION=\"/dev/shm/quiet-startup-mutex\"\n#  ###################################################################################\n#   GENERAL Configuration variables\n#  ###################################################################################\n#   Let the master be a master, don't run any jobs on it\nENV JENKINS_ENV_EXECUTERS=\"0\"\n#   If true, then workspaceDir will changed its defaults from ${JENKINS_HOME}/workspace\n#   to /jenkins-workspace-home/workspace/${ITEM_FULLNAME}\n#   This is useful in case your JENKINS_HOME is mapped to NFS mount,\n#   slowing down the workspace\nENV JENKINS_ENV_CHANGE_WORKSPACE_DIR=\"true\"\n#  ###################################################################################\n#   ADDITIONAL JAVA_OPTS\n#  ###################################################################################\n#   Each JAVA_OPTS_* variable will be added to the JAVA_OPTS variable before startup\n#\n#   Don't run the setup wizard\nENV JAVA_OPTS_DISABLE_WIZARD=\"-Djenkins.install.runSetupWizard=false\"\n#   See https://wiki.jenkins.io/display/JENKINS/Configuring+Content+Security+Policy\nENV JAVA_OPTS_CSP=\"-Dhudson.model.DirectoryBrowserSupport.CSP=\\\"sandbox allow-same-origin allow-scripts; default-src 'self'; script-src * 'unsafe-eval'; img-src *; style-src * 'unsafe-inline'; font-src *\\\"\"\n#   See https://issues.jenkins-ci.org/browse/JENKINS-24752\nENV JAVA_OPTS_LOAD_STATS_CLOCK=\"-Dhudson.model.LoadStatistics.clock=1000\"\n#  ###################################################################################\n#  ###################################################################################\n#   JNLP Tunnel Variables\n#  ###################################################################################\n#   Default port for http\nENV JENKINS_HTTP_PORT_FOR_SLAVES=\"8080\"\n#   This is used by docker slaves to get the actual jenkins URL\n#   in case jenkins is behind a load-balancer or a reverse proxy\n#\n#   JENKINS_IP_FOR_SLAVES will be evaluated in the following order:\n#      $JENKINS_ENV_HOST_IP ||\n#      $(eval $JENKINS_ENV_HOST_IP_CMD) ||\n#      ''\n#  ENV JENKINS_ENV_HOST_IP=<REAL_IP>\n#  ENV JENKINS_ENV_HOST_IP_CMD='<command to fetch ip>'\n#   This variable will be evaluated and should retrun a valid IP address:\n#   AWS:      JENKINS_ENV_HOST_IP_CMD='curl http://169.254.169.254/latest/meta-data/local-ipv4'\n#   General:  JENKINS_ENV_HOST_IP_CMD='ip route | grep default | awk '\"'\"'{print $3}'\"'\"''\n#  ###################################################################################\n#   If sshd enabled, this will be the port\nEXPOSE 16022/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/bin/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG FROM_TAG=2.176.1\nFROM jenkins/jenkins:${FROM_TAG}\nARG GOSU_VERSION=1.10\n#  Install plugins\nCOPY plugins.txt /usr/share/jenkins/ref/\n# # Issue with jenkins update site and letsencrypt cert. Using -k for the time being\nARG CURL_OPTIONS=-sSfLk\nRUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt\n#  Using root to install and run entrypoint.\n#  We will change the user to jenkins using gosu\nUSER root\nRUN if [ -f /etc/alpine-release ] ; then apk add --no-cache shadow py-setuptools \\\n && easy_install-2.7 pip==19.1 ; elif [ -f /etc/debian_version ] ; then apt-get update -y \\\n && apt-get install --no-install-recommends python-setuptools -y \\\n && easy_install pip==19.1 \\\n && rm -rf /var/lib/apt/lists/* ; fi\nRUN pip install awscli PyYAML==3.12 six requests botocore boto3 --no-cache-dir\nRUN curl -SsL https://releases.hashicorp.com/envconsul/0.7.3/envconsul_0.7.3_linux_amd64.tgz | tar -C /usr/bin -xvzf - \\\n && chmod +x /usr/bin/envconsul\nRUN curl -SsLo /usr/bin/gosu https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 \\\n && chmod +x /usr/bin/gosu\n#  Separate between JENKINS_HOME and WORKSPACE dir. Best if we use NFS for JENKINS_HOME\nRUN mkdir -p /jenkins-workspace-home \\\n && chown -R jenkins:jenkins /jenkins-workspace-home\n#  Do things on behalf of jenkins user\nUSER jenkins\n#  Add all init groovy scripts to ref folder and change their ext to .override\n#  so Jenkins will override them every time it starts\nCOPY init-scripts/* /usr/share/jenkins/ref/init.groovy.d/\nRUN cd /usr/share/jenkins/ref/init.groovy.d/ \\\n && for f in *.groovy; do mv \"$f\" \"${f}.override\" ; done\n#  Add configuration handlers groovy scripts\nCOPY config-handlers /usr/share/jenkins/config-handlers\nVOLUME /jenkins-workspace-home\n#  Revert to root\nUSER root\nCOPY bin/* /usr/bin/\nENV CONFIG_FILE_LOCATION=\"/dev/shm/jenkins-config.yml\"\nENV TOKEN_FILE_LOCATION=\"/dev/shm/.api-token\"\nENV CONFIG_CACHE_DIR=\"/dev/shm/.jenkins-config-cache\"\nENV QUIET_STARTUP_FILE_LOCATION=\"/dev/shm/quiet-startup-mutex\"\n# ###################################################################################\n#  GENERAL Configuration variables\n# ###################################################################################\n#  Let the master be a master, don't run any jobs on it\nENV JENKINS_ENV_EXECUTERS=\"0\"\n#  If true, then workspaceDir will changed its defaults from ${JENKINS_HOME}/workspace\n#  to /jenkins-workspace-home/workspace/${ITEM_FULLNAME}\n#  This is useful in case your JENKINS_HOME is mapped to NFS mount,\n#  slowing down the workspace\nENV JENKINS_ENV_CHANGE_WORKSPACE_DIR=\"true\"\n# ###################################################################################\n#  ADDITIONAL JAVA_OPTS\n# ###################################################################################\n#  Each JAVA_OPTS_* variable will be added to the JAVA_OPTS variable before startup\n#\n#  Don't run the setup wizard\nENV JAVA_OPTS_DISABLE_WIZARD=\"-Djenkins.install.runSetupWizard=false\"\n#  See https://wiki.jenkins.io/display/JENKINS/Configuring+Content+Security+Policy\nENV JAVA_OPTS_CSP=\"-Dhudson.model.DirectoryBrowserSupport.CSP=\\\"sandbox allow-same-origin allow-scripts; default-src 'self'; script-src * 'unsafe-eval'; img-src *; style-src * 'unsafe-inline'; font-src *\\\"\"\n#  See https://issues.jenkins-ci.org/browse/JENKINS-24752\nENV JAVA_OPTS_LOAD_STATS_CLOCK=\"-Dhudson.model.LoadStatistics.clock=1000\"\n# ###################################################################################\n# ###################################################################################\n#  JNLP Tunnel Variables\n# ###################################################################################\n#  Default port for http\nENV JENKINS_HTTP_PORT_FOR_SLAVES=\"8080\"\n#  This is used by docker slaves to get the actual jenkins URL\n#  in case jenkins is behind a load-balancer or a reverse proxy\n#\n#  JENKINS_IP_FOR_SLAVES will be evaluated in the following order:\n#     $JENKINS_ENV_HOST_IP ||\n#     $(eval $JENKINS_ENV_HOST_IP_CMD) ||\n#     ''\n# ENV JENKINS_ENV_HOST_IP=<REAL_IP>\n# ENV JENKINS_ENV_HOST_IP_CMD='<command to fetch ip>'\n#  This variable will be evaluated and should retrun a valid IP address:\n#  AWS:      JENKINS_ENV_HOST_IP_CMD='curl http://169.254.169.254/latest/meta-data/local-ipv4'\n#  General:  JENKINS_ENV_HOST_IP_CMD='ip route | grep default | awk '\"'\"'{print $3}'\"'\"''\n# ###################################################################################\n#  If sshd enabled, this will be the port\nEXPOSE 16022/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/bin/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"0983294f4a6b0418787452add067eadf","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG FROM_TAG=2.176.1\nFROM jenkins/jenkins:${FROM_TAG}\nARG GOSU_VERSION=1.10\n#   Install plugins\nCOPY plugins.txt /usr/share/jenkins/ref/\n#  # Issue with jenkins update site and letsencrypt cert. Using -k for the time being\nARG CURL_OPTIONS=-sSfLk\nRUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt\n#   Using root to install and run entrypoint.\n#   We will change the user to jenkins using gosu\nUSER root\nRUN if [ -f /etc/alpine-release ] ; then apk add --no-cache shadow py-setuptools \\\n && easy_install-2.7 pip==19.1 ; elif [ -f /etc/debian_version ] ; then apt-get update -y \\\n && apt-get install --no-install-recommends python-setuptools -y \\\n && easy_install pip==19.1 \\\n && rm -rf /var/lib/apt/lists/* ; fi\nRUN pip install awscli PyYAML==3.12 six requests botocore boto3 --no-cache-dir\nRUN curl -SsL https://releases.hashicorp.com/envconsul/0.7.3/envconsul_0.7.3_linux_amd64.tgz | tar -C /usr/bin -xvzf - \\\n && chmod +x /usr/bin/envconsul\nRUN curl -SsLo /usr/bin/gosu https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 \\\n && chmod +x /usr/bin/gosu\n#   Separate between JENKINS_HOME and WORKSPACE dir. Best if we use NFS for JENKINS_HOME\nRUN mkdir -p /jenkins-workspace-home \\\n && chown -R jenkins:jenkins /jenkins-workspace-home\n#   Do things on behalf of jenkins user\nUSER jenkins\n#   Add all init groovy scripts to ref folder and change their ext to .override\n#   so Jenkins will override them every time it starts\nCOPY init-scripts/* /usr/share/jenkins/ref/init.groovy.d/\nRUN cd /usr/share/jenkins/ref/init.groovy.d/ \\\n && for f in *.groovy; do mv \"$f\" \"${f}.override\" ; done\n#   Add configuration handlers groovy scripts\nCOPY config-handlers /usr/share/jenkins/config-handlers\nVOLUME /jenkins-workspace-home\n#   Revert to root\nUSER root\nCOPY bin/* /usr/bin/\nENV CONFIG_FILE_LOCATION=\"/dev/shm/jenkins-config.yml\"\nENV TOKEN_FILE_LOCATION=\"/dev/shm/.api-token\"\nENV CONFIG_CACHE_DIR=\"/dev/shm/.jenkins-config-cache\"\nENV QUIET_STARTUP_FILE_LOCATION=\"/dev/shm/quiet-startup-mutex\"\n#  ###################################################################################\n#   GENERAL Configuration variables\n#  ###################################################################################\n#   Let the master be a master, don't run any jobs on it\nENV JENKINS_ENV_EXECUTERS=\"0\"\n#   If true, then workspaceDir will changed its defaults from ${JENKINS_HOME}/workspace\n#   to /jenkins-workspace-home/workspace/${ITEM_FULLNAME}\n#   This is useful in case your JENKINS_HOME is mapped to NFS mount,\n#   slowing down the workspace\nENV JENKINS_ENV_CHANGE_WORKSPACE_DIR=\"true\"\n#  ###################################################################################\n#   ADDITIONAL JAVA_OPTS\n#  ###################################################################################\n#   Each JAVA_OPTS_* variable will be added to the JAVA_OPTS variable before startup\n#\n#   Don't run the setup wizard\nENV JAVA_OPTS_DISABLE_WIZARD=\"-Djenkins.install.runSetupWizard=false\"\n#   See https://wiki.jenkins.io/display/JENKINS/Configuring+Content+Security+Policy\nENV JAVA_OPTS_CSP=\"-Dhudson.model.DirectoryBrowserSupport.CSP=\\\"sandbox allow-same-origin allow-scripts; default-src 'self'; script-src * 'unsafe-eval'; img-src *; style-src * 'unsafe-inline'; font-src *\\\"\"\n#   See https://issues.jenkins-ci.org/browse/JENKINS-24752\nENV JAVA_OPTS_LOAD_STATS_CLOCK=\"-Dhudson.model.LoadStatistics.clock=1000\"\n#  ###################################################################################\n#  ###################################################################################\n#   JNLP Tunnel Variables\n#  ###################################################################################\n#   Default port for http\nENV JENKINS_HTTP_PORT_FOR_SLAVES=\"8080\"\n#   This is used by docker slaves to get the actual jenkins URL\n#   in case jenkins is behind a load-balancer or a reverse proxy\n#\n#   JENKINS_IP_FOR_SLAVES will be evaluated in the following order:\n#      $JENKINS_ENV_HOST_IP ||\n#      $(eval $JENKINS_ENV_HOST_IP_CMD) ||\n#      ''\n#  ENV JENKINS_ENV_HOST_IP=<REAL_IP>\n#  ENV JENKINS_ENV_HOST_IP_CMD='<command to fetch ip>'\n#   This variable will be evaluated and should retrun a valid IP address:\n#   AWS:      JENKINS_ENV_HOST_IP_CMD='curl http://169.254.169.254/latest/meta-data/local-ipv4'\n#   General:  JENKINS_ENV_HOST_IP_CMD='ip route | grep default | awk '\"'\"'{print $3}'\"'\"''\n#  ###################################################################################\n#   If sshd enabled, this will be the port\nEXPOSE 16022/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/bin/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"a9471b532d31a40cbd3f3e15c5307c37","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/254b7da0774d0bd14f9c0e5457dfdff83b5c4b86.dockerfile"}