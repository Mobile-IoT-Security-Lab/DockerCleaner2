{"seed":2197566051,"processedDockerfileHash":"c378f71fca30cb4991f9a40f19a4b9a9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.0-apache\n#   packages configuration\nRUN echo 'mysql-server mysql-server/root_password password P4ssw0rd' | debconf-set-selections\nRUN echo 'mysql-server mysql-server/root_password_again password P4ssw0rd' | debconf-set-selections\nRUN apt-get update \\\n && apt-get install --no-install-recommends perl pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\n#   gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5\nENV MYSQL_MAJOR=\"5.6\"\nRUN echo \"deb http://repo.mysql.com/apt/debian/ jessie mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install --no-install-recommends mysql-server -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql\n#   comment out a few problematic configuration values\n#   don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf \\\n && echo 'skip-host-cache\\nskip-name-resolve' | awk '{ print } $1 == \"[mysqld]\" \\\n && c == 0 { c = 1; system(\"cat\") }' /etc/mysql/my.cnf > /tmp/my.cnf \\\n && mv /tmp/my.cnf /etc/mysql/my.cnf\n#   packages/dependencies installation\nRUN apt-get update \\\n && apt-get install --no-install-recommends php5-mysql libmcrypt-dev libxml2-dev libfreetype6-dev libjpeg62-turbo-dev libicu-dev vim emacs-nox git-core wget libpng12-dev libxslt-dev zsh bzip2 -y\nRUN docker-php-ext-install -j$( nproc ;) soap mysqli mcrypt gd zip intl xsl mbstring pdo pdo_mysql\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd\nRUN chsh -s /bin/zsh\nRUN sh -x -c \"$( curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | grep -v 'set -e' ;)\"\nCOPY bin/.zshrc /root/.zshrc\nRUN cd /tmp \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\nRUN cd /var/www/ \\\n && mkdir htdocs \\\n && cd htdocs \\\n && wget https://demos.algolia.com/downloads/magento2.0.2-with-sample-data.tar.bz2\nRUN cd /var/www/htdocs \\\n && tar -xjvf magento2.0.2-with-sample-data.tar.bz2\nRUN chown -R www-data:www-data /var/www/htdocs\nRUN find /var/www/htdocs -type d -exec chmod 700 {}\nRUN cd /var/www/htdocs \\\n && chmod +x bin/magento\nRUN chsh -s /bin/bash www-data\n#  RUN su www-data && cd /var/www/htdocs && composer install\nWORKDIR /var/www/htdocs\nCOPY bin/php.ini /usr/local/etc/php/php.ini\nRUN cd /tmp \\\n && curl -O https://phpmyadmin-downloads-532693.c.cdn77.org/phpMyAdmin/4.4.9/phpMyAdmin-4.4.9-english.tar.gz \\\n && tar xvf phpMyAdmin-4.4.9-english.tar.gz \\\n && mv phpMyAdmin-4.4.9-english /var/www/htdocs/phpmyadmin\nCOPY bin/config.inc.php /var/www/htdocs/phpmyadmin/\nRUN service mysql start \\\n && mysql -uroot -e \"create database magento;\" \\\n && service mysql stop\nRUN service mysql start \\\n && cd /var/www/htdocs \\\n && bin/magento setup:install --backend-frontname=\"admin\" --db-host=\"localhost\" --db-name=\"magento\" --db-user=\"root\" --base-url=\"http://192.168.99.100\" --language=\"en_US\" --currency=\"EUR\" --timezone=\"Europe/Paris\" --admin-use-security-key=\"0\" --admin-user=\"admin\" --admin-password=\"magentorocks1\" --admin-firstname=\"admin\" --admin-lastname=\"admin\" --admin-email=\"admin@admin.com\" \\\n && service mysql stop\nRUN service mysql start \\\n && cd /var/www/htdocs \\\n && bin/magento cache:flush \\\n && bin/magento cache:disable \\\n && service mysql stop\nRUN sed -i \"s|www/html|www/htdocs|g\" /etc/apache2/apache2.conf\nRUN mv pub/errors/local.xml.sample pub/errors/local.xml\n#   enable mod_rewrite\nRUN cp /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load\n#   magerun\nRUN cd /var/www/htdocs \\\n && wget https://files.magerun.net/n98-magerun2.phar \\\n && mv n98-magerun2.phar /usr/bin/n98-magerun2 \\\n && chmod -R 777 /usr/bin/n98-magerun2\n#   start script\nCOPY ./bin/start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\nRUN usermod -a -G root www-data\nRUN usermod -a -G www-data root\nCOPY ./bin/auth.json /root/.composer/auth.json\nRUN service mysql start \\\n && composer require algolia/algoliasearch-magento-2:dev-master \\\n && bin/magento setup:upgrade \\\n && bin/magento setup:static-content:deploy \\\n && service mysql stop\n#  RUN echo \"<Directory /var/www/>\\n\\tAllowOverride All\\n\\tRequire all granted\\n</Directory>\" > /etc/apache2/apache2.conf\nRUN sed -i 's/name=\"login\\[username\\]\"/name=\"login[username]\" value=\"admin\"/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml \\\n && sed -i 's/name=\"login\\[password\\]\"/name=\"login[password]\" class=\"required-entry input-text\" value=\"magentorocks1\"/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml \\\n && sed -i 's/<\\/form>/<\\/form><script>document.addEventListener\\(\"DOMContentLoaded\", function\\(\\) {algoliaAdminBundle.\\$\\(function \\(\\$\\) \\{ \\$\\(\"#login-form\"\\).submit\\(\\); \\}\\);\\}\\);<\\/script>/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml\nRUN sed -i 's/MaterializationStrategy\\\\Copy/MaterializationStrategy\\\\Symlink/g' /var/www/htdocs/app/etc/di.xml\nRUN bin/magento deploy:mode:set developer\nEXPOSE 80/tcp\nCMD start.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.0-apache\n#  packages configuration\nRUN echo 'mysql-server mysql-server/root_password password P4ssw0rd' | debconf-set-selections\nRUN echo 'mysql-server mysql-server/root_password_again password P4ssw0rd' | debconf-set-selections\nRUN apt-get update \\\n && apt-get install --no-install-recommends perl pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\n#  gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5\nENV MYSQL_MAJOR=\"5.6\"\nRUN echo \"deb http://repo.mysql.com/apt/debian/ jessie mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list\n#  the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#  also, we set debconf keys to make APT a little quieter\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install mysql-server -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql\n#  comment out a few problematic configuration values\n#  don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf \\\n && echo 'skip-host-cache\\nskip-name-resolve' | awk '{ print } $1 == \"[mysqld]\" \\\n && c == 0 { c = 1; system(\"cat\") }' /etc/mysql/my.cnf > /tmp/my.cnf \\\n && mv /tmp/my.cnf /etc/mysql/my.cnf\n#  packages/dependencies installation\nRUN apt-get update \\\n && apt-get install php5-mysql libmcrypt-dev libxml2-dev libfreetype6-dev libjpeg62-turbo-dev libicu-dev vim emacs-nox git-core wget libpng12-dev libxslt-dev zsh bzip2 -y\nRUN docker-php-ext-install -j$( nproc ;) soap mysqli mcrypt gd zip intl xsl mbstring pdo pdo_mysql\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd\nRUN chsh -s /bin/zsh\nRUN sh -x -c \"$( curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | grep -v 'set -e' ;)\"\nCOPY bin/.zshrc /root/.zshrc\nRUN cd /tmp \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\nRUN cd /var/www/ \\\n && mkdir htdocs \\\n && cd htdocs \\\n && wget https://demos.algolia.com/downloads/magento2.0.2-with-sample-data.tar.bz2\nRUN cd /var/www/htdocs \\\n && tar -xjvf magento2.0.2-with-sample-data.tar.bz2\nRUN chown -R www-data:www-data /var/www/htdocs\nRUN find /var/www/htdocs -type d -exec chmod 700 {} ; \\\n && find . -type f -exec chmod 600 {} ;\nRUN cd /var/www/htdocs \\\n && chmod +x bin/magento\nRUN chsh -s /bin/bash www-data\n# RUN su www-data && cd /var/www/htdocs && composer install\nWORKDIR /var/www/htdocs\nCOPY bin/php.ini /usr/local/etc/php/php.ini\nRUN cd /tmp \\\n && curl -O https://phpmyadmin-downloads-532693.c.cdn77.org/phpMyAdmin/4.4.9/phpMyAdmin-4.4.9-english.tar.gz \\\n && tar xvf phpMyAdmin-4.4.9-english.tar.gz \\\n && mv phpMyAdmin-4.4.9-english /var/www/htdocs/phpmyadmin\nCOPY bin/config.inc.php /var/www/htdocs/phpmyadmin/\nRUN service mysql start \\\n && mysql -uroot -e \"create database magento;\" \\\n && service mysql stop\nRUN service mysql start \\\n && cd /var/www/htdocs \\\n && bin/magento setup:install --backend-frontname=\"admin\" --db-host=\"localhost\" --db-name=\"magento\" --db-user=\"root\" --base-url=\"http://192.168.99.100\" --language=\"en_US\" --currency=\"EUR\" --timezone=\"Europe/Paris\" --admin-use-security-key=\"0\" --admin-user=\"admin\" --admin-password=\"magentorocks1\" --admin-firstname=\"admin\" --admin-lastname=\"admin\" --admin-email=\"admin@admin.com\" \\\n && service mysql stop\nRUN service mysql start \\\n && cd /var/www/htdocs \\\n && bin/magento cache:flush \\\n && bin/magento cache:disable \\\n && service mysql stop\nRUN sed -i \"s|www/html|www/htdocs|g\" /etc/apache2/apache2.conf\nRUN mv pub/errors/local.xml.sample pub/errors/local.xml\n#  enable mod_rewrite\nRUN cp /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load\n#  magerun\nRUN cd /var/www/htdocs \\\n && wget https://files.magerun.net/n98-magerun2.phar \\\n && mv n98-magerun2.phar /usr/bin/n98-magerun2 \\\n && chmod -R 777 /usr/bin/n98-magerun2\n#  start script\nCOPY ./bin/start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\nRUN usermod -a -G root www-data\nRUN usermod -a -G www-data root\nCOPY ./bin/auth.json /root/.composer/auth.json\nRUN service mysql start \\\n && composer require algolia/algoliasearch-magento-2:dev-master \\\n && bin/magento setup:upgrade \\\n && bin/magento setup:static-content:deploy \\\n && service mysql stop\n# RUN echo \"<Directory /var/www/>\\n\\tAllowOverride All\\n\\tRequire all granted\\n</Directory>\" > /etc/apache2/apache2.conf\nRUN sed -i 's/name=\"login\\[username\\]\"/name=\"login[username]\" value=\"admin\"/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml \\\n && sed -i 's/name=\"login\\[password\\]\"/name=\"login[password]\" class=\"required-entry input-text\" value=\"magentorocks1\"/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml \\\n && sed -i 's/<\\/form>/<\\/form><script>document.addEventListener\\(\"DOMContentLoaded\", function\\(\\) {algoliaAdminBundle.\\$\\(function \\(\\$\\) \\{ \\$\\(\"#login-form\"\\).submit\\(\\); \\}\\);\\}\\);<\\/script>/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml\nRUN sed -i 's/MaterializationStrategy\\\\Copy/MaterializationStrategy\\\\Symlink/g' /var/www/htdocs/app/etc/di.xml\nRUN bin/magento deploy:mode:set developer\nEXPOSE 80/tcp\nCMD start.sh\n","injectedSmells":[],"originalDockerfileHash":"7ad11b928a104506f65891ab82fc3263","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.0-apache\n#   packages configuration\nRUN echo 'mysql-server mysql-server/root_password password P4ssw0rd' | debconf-set-selections\nRUN echo 'mysql-server mysql-server/root_password_again password P4ssw0rd' | debconf-set-selections\nRUN apt-get update \\\n && apt-get install --no-install-recommends perl pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\n#   gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5\nENV MYSQL_MAJOR=\"5.6\"\nRUN echo \"deb http://repo.mysql.com/apt/debian/ jessie mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install mysql-server -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql\n#   comment out a few problematic configuration values\n#   don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf \\\n && echo 'skip-host-cache\\nskip-name-resolve' | awk '{ print } $1 == \"[mysqld]\" \\\n && c == 0 { c = 1; system(\"cat\") }' /etc/mysql/my.cnf > /tmp/my.cnf \\\n && mv /tmp/my.cnf /etc/mysql/my.cnf\n#   packages/dependencies installation\nRUN apt-get update \\\n && apt-get install php5-mysql libmcrypt-dev libxml2-dev libfreetype6-dev libjpeg62-turbo-dev libicu-dev vim emacs-nox git-core wget libpng12-dev libxslt-dev zsh bzip2 -y\nRUN docker-php-ext-install -j$( nproc ;) soap mysqli mcrypt gd zip intl xsl mbstring pdo pdo_mysql\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd\nRUN chsh -s /bin/zsh\nRUN sh -x -c \"$( curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | grep -v 'set -e' ;)\"\nCOPY bin/.zshrc /root/.zshrc\nRUN cd /tmp \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\nRUN cd /var/www/ \\\n && mkdir htdocs \\\n && cd htdocs \\\n && wget https://demos.algolia.com/downloads/magento2.0.2-with-sample-data.tar.bz2\nRUN cd /var/www/htdocs \\\n && tar -xjvf magento2.0.2-with-sample-data.tar.bz2\nRUN chown -R www-data:www-data /var/www/htdocs\nRUN find /var/www/htdocs -type d -exec chmod 700 {}\nRUN cd /var/www/htdocs \\\n && chmod +x bin/magento\nRUN chsh -s /bin/bash www-data\n#  RUN su www-data && cd /var/www/htdocs && composer install\nWORKDIR /var/www/htdocs\nCOPY bin/php.ini /usr/local/etc/php/php.ini\nRUN cd /tmp \\\n && curl -O https://phpmyadmin-downloads-532693.c.cdn77.org/phpMyAdmin/4.4.9/phpMyAdmin-4.4.9-english.tar.gz \\\n && tar xvf phpMyAdmin-4.4.9-english.tar.gz \\\n && mv phpMyAdmin-4.4.9-english /var/www/htdocs/phpmyadmin\nCOPY bin/config.inc.php /var/www/htdocs/phpmyadmin/\nRUN service mysql start \\\n && mysql -uroot -e \"create database magento;\" \\\n && service mysql stop\nRUN service mysql start \\\n && cd /var/www/htdocs \\\n && bin/magento setup:install --backend-frontname=\"admin\" --db-host=\"localhost\" --db-name=\"magento\" --db-user=\"root\" --base-url=\"http://192.168.99.100\" --language=\"en_US\" --currency=\"EUR\" --timezone=\"Europe/Paris\" --admin-use-security-key=\"0\" --admin-user=\"admin\" --admin-password=\"magentorocks1\" --admin-firstname=\"admin\" --admin-lastname=\"admin\" --admin-email=\"admin@admin.com\" \\\n && service mysql stop\nRUN service mysql start \\\n && cd /var/www/htdocs \\\n && bin/magento cache:flush \\\n && bin/magento cache:disable \\\n && service mysql stop\nRUN sed -i \"s|www/html|www/htdocs|g\" /etc/apache2/apache2.conf\nRUN mv pub/errors/local.xml.sample pub/errors/local.xml\n#   enable mod_rewrite\nRUN cp /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load\n#   magerun\nRUN cd /var/www/htdocs \\\n && wget https://files.magerun.net/n98-magerun2.phar \\\n && mv n98-magerun2.phar /usr/bin/n98-magerun2 \\\n && chmod -R 777 /usr/bin/n98-magerun2\n#   start script\nCOPY ./bin/start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\nRUN usermod -a -G root www-data\nRUN usermod -a -G www-data root\nCOPY ./bin/auth.json /root/.composer/auth.json\nRUN service mysql start \\\n && composer require algolia/algoliasearch-magento-2:dev-master \\\n && bin/magento setup:upgrade \\\n && bin/magento setup:static-content:deploy \\\n && service mysql stop\n#  RUN echo \"<Directory /var/www/>\\n\\tAllowOverride All\\n\\tRequire all granted\\n</Directory>\" > /etc/apache2/apache2.conf\nRUN sed -i 's/name=\"login\\[username\\]\"/name=\"login[username]\" value=\"admin\"/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml \\\n && sed -i 's/name=\"login\\[password\\]\"/name=\"login[password]\" class=\"required-entry input-text\" value=\"magentorocks1\"/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml \\\n && sed -i 's/<\\/form>/<\\/form><script>document.addEventListener\\(\"DOMContentLoaded\", function\\(\\) {algoliaAdminBundle.\\$\\(function \\(\\$\\) \\{ \\$\\(\"#login-form\"\\).submit\\(\\); \\}\\);\\}\\);<\\/script>/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml\nRUN sed -i 's/MaterializationStrategy\\\\Copy/MaterializationStrategy\\\\Symlink/g' /var/www/htdocs/app/etc/di.xml\nRUN bin/magento deploy:mode:set developer\nEXPOSE 80/tcp\nCMD start.sh\n","originalDockerfileUglifiedHash":"7391f3d513ae369a4e271e44828bac13","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/58bfc5ecad011505e5c03978901cefb20f61a898.dockerfile"}