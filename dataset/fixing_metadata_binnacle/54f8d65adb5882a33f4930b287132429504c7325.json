{"seed":1015568246,"processedDockerfileHash":"6500b63b89d41add5db94a4e43469889","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"#   Copyright 2018 the original author or authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n#   in compliance with the License. You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software distributed under the License\n#   is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n#   or implied. See the License for the specific language governing permissions and limitations under\n#   the License.\n#   Dockerfile - alpine - openresty - Lua auth-crowd - modsecurity\n#   related links found in the curl downloaded links and:\n#   https://github.com/openresty/docker-openresty\nFROM alpine:3.8\nLABEL maintainer=\"Gerard Castillo <gerard.castillo@boehringer-ingelheim.com>\"\n#   Docker Build Arguments\nARG NGINX_VERSION=\"1.13.6\"\nARG MODSECURITY_VERSION=\"3.0.0\"\nARG MODSECURITY_NGINX_VERSION=\"1.0.0\"\nARG OWASP_MODSECURITY_CRS_VERSION=\"3.0.2\"\nARG RESTY_VERSION=\"1.13.6.2\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2p\"\nARG RESTY_PCRE_VERSION=\"8.42\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\" --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=/usr/lib/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-stream  --with-stream_ssl_module  --with-stream_ssl_preread_module  --with-stream_realip_module  --with-stream_geoip_module=dynamic  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-compat  --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_geoip_module=dynamic  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-threads  --with-pcre-jit  --with-ipv6  --add-dynamic-module=/opt/modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}  --with-ld-opt='-lcurl'  \"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\nARG RESTY_ADD_PACKAGE_BUILDDEPS=\"\"\nARG RESTY_ADD_PACKAGE_RUNDEPS=\"\"\nARG RESTY_EVAL_PRE_CONFIGURE=\"\"\nARG RESTY_EVAL_POST_MAKE=\"\"\nLABEL resty_version=\"${RESTY_VERSION}\"\nLABEL resty_openssl_version=\"${RESTY_OPENSSL_VERSION}\"\nLABEL resty_pcre_version=\"${RESTY_PCRE_VERSION}\"\nLABEL resty_config_options=\"${RESTY_CONFIG_OPTIONS}\"\nLABEL resty_config_options_more=\"${RESTY_CONFIG_OPTIONS_MORE}\"\nLABEL resty_add_package_builddeps=\"${RESTY_ADD_PACKAGE_BUILDDEPS}\"\nLABEL resty_add_package_rundeps=\"${RESTY_ADD_PACKAGE_RUNDEPS}\"\nLABEL resty_eval_pre_configure=\"${RESTY_EVAL_PRE_CONFIGURE}\"\nLABEL resty_eval_post_make=\"${RESTY_EVAL_POST_MAKE}\"\n#   These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/opt/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/opt/pcre-${RESTY_PCRE_VERSION}\"\nRUN apk add build-base=0.5-r1 curl=7.61.1-r3 gd-dev=2.2.5-r4 geoip-dev=1.6.12-r1 libxslt-dev=1.1.33-r3 linux-headers=4.4.6-r2 make=4.2.1-r2 perl-dev=5.26.3-r0 readline-dev=7.0.003-r0 zlib-dev=1.2.11-r1 gcc=6.4.0-r9 libc-dev=0.7.1-r0 gnupg=2.2.19-r0 ${RESTY_ADD_PACKAGE_BUILDDEPS} --no-cache --virtual .build-deps \\\n && apk add libxml2-dev=2.9.8-r2 git=2.18.4-r0 libtool=2.4.6-r5 automake=1.16.1-r0 autoconf=2.69-r2 g++=6.4.0-r9 flex=2.6.4-r1 bison=3.0.4-r1 yajl-dev=2.1.0-r0 --no-cache --virtual .libmodsecurity-deps \\\n && apk add syslog-ng=3.13.2-r3 pcre-dev=8.42-r0 gd=2.2.5-r4 geoip=1.6.12-r1 libgcc=6.4.0-r9 libxslt=1.1.33-r3 zlib=1.2.11-r1 doxygen=1.8.14-r0 geoip-dev=1.6.12-r1 yajl=2.1.0-r0 libstdc++=6.4.0-r9 git=2.18.4-r0 sed=4.4-r2 libmaxminddb-dev=1.3.2-r0 libcurl=7.61.1-r3 libssh2-dev=1.9.0-r1 nghttp2-dev=1.39.2-r0 pkgconf=1.5.3-r0 curl-dev=7.61.1-r3 perl=5.26.3-r0 ${RESTY_ADD_PACKAGE_RUNDEPS} --no-cache \\\n && echo \"Adding required system group and user\" \\\n && addgroup --system nginx \\\n && adduser --disabled-password --system --home /var/cache/nginx --shell /sbin/nologin --ingroup nginx nginx \\\n && echo \"Creating installation folder\" \\\n && mkdir -p /opt \\\n && cd /opt \\\n && echo \"Installing ModSec Library\" \\\n && curl -fSL https://github.com/SpiderLabs/ModSecurity/releases/download/v${MODSECURITY_VERSION}/modsecurity-v${MODSECURITY_VERSION}.tar.gz -o modsecurity-v${MODSECURITY_VERSION}.tar.gz \\\n && tar -zxvf modsecurity-v${MODSECURITY_VERSION}.tar.gz \\\n && cd modsecurity-v${MODSECURITY_VERSION} \\\n && ./build.sh \\\n && ./configure --enable-mutex-on-pm \\\n && make \\\n && make install \\\n && cd /opt \\\n && echo 'Installing ModSec - Nginx connector' \\\n && curl -fSL https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v${MODSECURITY_NGINX_VERSION}/modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz -o modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz \\\n && tar -zxvf modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz \\\n && cd /opt \\\n && echo 'Downloading OpenSSL version required for OpenResty' \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && echo 'Downloading PCRE version required for OpenResty' \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && cd /opt \\\n && echo 'Creating Nginx modules' \\\n && export MODSECURITY_LIB=\"/opt/modsecurity-v${MODSECURITY_VERSION}/src/.libs/\" \\\n && export MODSECURITY_INC=\"/opt/modsecurity-v${MODSECURITY_VERSION}/headers/\" \\\n && curl -fSL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -o nginx-${NGINX_VERSION}.tar.gz \\\n && tar zxvf nginx-${NGINX_VERSION}.tar.gz \\\n && cd /opt/nginx-${NGINX_VERSION} \\\n && ./configure ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} --add-dynamic-module=../modsecurity-nginx-v${MODSECURITY_NGINX_VERSION} --with-debug \\\n && make modules \\\n && cd /opt \\\n && echo \"Installing GeoIP DB\" \\\n && mkdir -p /etc/nginx/geoip \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz -o GeoLite2-City.tar.gz \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz -o GeoLite2-Country.tar.gz \\\n && tar -xvzf GeoLite2-City.tar.gz \\\n && tar -xvzf GeoLite2-Country.tar.gz \\\n && mv GeoLite2*/*.mmdb /etc/nginx/geoip/ \\\n && cd /opt \\\n && echo \"Installing OpenResty\" \\\n && if [ -n \"${RESTY_EVAL_PRE_CONFIGURE}\" ] ; then eval $( echo ${RESTY_EVAL_PRE_CONFIGURE} ;) ; fi \\\n && export MODSECURITY_LIB=\"/opt/modsecurity-v${MODSECURITY_VERSION}/src/.libs/\" \\\n && export MODSECURITY_INC=\"/opt/modsecurity-v${MODSECURITY_VERSION}/headers/\" \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /opt/openresty-${RESTY_VERSION} \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} --with-http_iconv_module --with-debug \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /opt \\\n && if [ -n \"${RESTY_EVAL_POST_MAKE}\" ] ; then eval $( echo ${RESTY_EVAL_POST_MAKE} ;) ; fi \\\n && cd /opt \\\n && echo \"Installing ModSec OWASP Rules\" \\\n && curl -fSL https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v${OWASP_MODSECURITY_CRS_VERSION}.tar.gz -o owasp-config.tar.gz \\\n && tar -zxvf owasp-config.tar.gz \\\n && mv /opt/owasp-modsecurity-crs-$OWASP_MODSECURITY_CRS_VERSION /etc/nginx/crs \\\n && mv /etc/nginx/crs/crs-setup.conf.example /etc/nginx/crs/crs-setup.conf \\\n && echo \"Cleaning up\" \\\n && rm -fr /opt/modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz \\\n && rm -fr /opt/modsecurity-v${MODSECURITY_VERSION}.tar.gz \\\n && rm -fr /opt/GeoLite2* \\\n && rm -fr /opt/owasp-config.tar.gz \\\n && rm -fr /opt/owasp-modsecurity-crs-$OWASP_MODSECURITY_CRS_VERSION \\\n && rm -fr /opt/nginx-${NGINX_VERSION}* \\\n && rm -rf /opt/openssl-${RESTY_OPENSSL_VERSION} /opt/openssl-${RESTY_OPENSSL_VERSION}.tar.gz /opt/openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} /opt/pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && apk del .build-deps \\\n && apk del .libmodsecurity-deps\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib\nENV PATH=\"$PATH:/etc/nginx/luajit/bin:/etc/nginx/bin\"\nCOPY entrypoint.sh entrypoint.sh\n#   base image configs - expected to be redefined for child images\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY modsecurity.conf /etc/nginx/modsecurity.conf\nCOPY crs-setup.conf /etc/nginx/crs/crs-setup.conf\nCOPY cors.conf /etc/nginx/cors.conf\n#   here you can load your LUA scripts\nCOPY lua /etc/nginx/lua\n#   adding Lua HTTP resty client - e.g.: dependency for Crowd Auth\nRUN opm get pintsized/lua-resty-http \\\n && cp -r /etc/nginx/site/lualib/resty /etc/nginx/lua \\\n && opm remove pintsized/lua-resty-http\nRUN chown -R nginx:nginx /var/log/nginx /etc/nginx /var/cache/nginx /usr/lib/nginx\n#   implement changes required to run NGINX as an unprivileged user\nRUN chown -R :0 /etc/nginx /var/cache/nginx /var/log/nginx \\\n && chmod -R g+w /etc/nginx /var/cache/nginx /var/log/nginx\nEXPOSE 8080/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nUSER nginx\n#   Use SIGQUIT instead of default SIGTERM to cleanly drain requests\n#   See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls\nSTOPSIGNAL SIGQUIT\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2018 the original author or authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n#  in compliance with the License. You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software distributed under the License\n#  is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n#  or implied. See the License for the specific language governing permissions and limitations under\n#  the License.\n#  Dockerfile - alpine - openresty - Lua auth-crowd - modsecurity\n#  related links found in the curl downloaded links and:\n#  https://github.com/openresty/docker-openresty\nFROM alpine:3.8\nLABEL maintainer=\"Gerard Castillo <gerard.castillo@boehringer-ingelheim.com>\"\n#  Docker Build Arguments\nARG NGINX_VERSION=\"1.13.6\"\nARG MODSECURITY_VERSION=\"3.0.0\"\nARG MODSECURITY_NGINX_VERSION=\"1.0.0\"\nARG OWASP_MODSECURITY_CRS_VERSION=\"3.0.2\"\nARG RESTY_VERSION=\"1.13.6.2\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2p\"\nARG RESTY_PCRE_VERSION=\"8.42\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\" --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=/usr/lib/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-stream  --with-stream_ssl_module  --with-stream_ssl_preread_module  --with-stream_realip_module  --with-stream_geoip_module=dynamic  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-compat  --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_geoip_module=dynamic  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-threads  --with-pcre-jit  --with-ipv6  --add-dynamic-module=/opt/modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}  --with-ld-opt='-lcurl'  \"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\nARG RESTY_ADD_PACKAGE_BUILDDEPS=\"\"\nARG RESTY_ADD_PACKAGE_RUNDEPS=\"\"\nARG RESTY_EVAL_PRE_CONFIGURE=\"\"\nARG RESTY_EVAL_POST_MAKE=\"\"\nLABEL resty_version=\"${RESTY_VERSION}\"\nLABEL resty_openssl_version=\"${RESTY_OPENSSL_VERSION}\"\nLABEL resty_pcre_version=\"${RESTY_PCRE_VERSION}\"\nLABEL resty_config_options=\"${RESTY_CONFIG_OPTIONS}\"\nLABEL resty_config_options_more=\"${RESTY_CONFIG_OPTIONS_MORE}\"\nLABEL resty_add_package_builddeps=\"${RESTY_ADD_PACKAGE_BUILDDEPS}\"\nLABEL resty_add_package_rundeps=\"${RESTY_ADD_PACKAGE_RUNDEPS}\"\nLABEL resty_eval_pre_configure=\"${RESTY_EVAL_PRE_CONFIGURE}\"\nLABEL resty_eval_post_make=\"${RESTY_EVAL_POST_MAKE}\"\n#  These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/opt/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/opt/pcre-${RESTY_PCRE_VERSION}\"\nRUN apk add --no-cache --virtual .build-deps build-base curl gd-dev geoip-dev libxslt-dev linux-headers make perl-dev readline-dev zlib-dev gcc libc-dev gnupg ${RESTY_ADD_PACKAGE_BUILDDEPS} \\\n && apk add --no-cache --virtual .libmodsecurity-deps libxml2-dev git libtool automake autoconf g++ flex bison yajl-dev \\\n && apk add --no-cache syslog-ng pcre-dev gd geoip libgcc libxslt zlib doxygen geoip-dev yajl libstdc++ git sed libmaxminddb-dev libcurl libssh2-dev nghttp2-dev pkgconf curl-dev perl ${RESTY_ADD_PACKAGE_RUNDEPS} \\\n && echo \"Adding required system group and user\" \\\n && addgroup --system nginx \\\n && adduser --disabled-password --system --home /var/cache/nginx --shell /sbin/nologin --ingroup nginx nginx \\\n && echo \"Creating installation folder\" \\\n && mkdir -p /opt \\\n && cd /opt \\\n && echo \"Installing ModSec Library\" \\\n && curl -fSL https://github.com/SpiderLabs/ModSecurity/releases/download/v${MODSECURITY_VERSION}/modsecurity-v${MODSECURITY_VERSION}.tar.gz -o modsecurity-v${MODSECURITY_VERSION}.tar.gz \\\n && tar -zxvf modsecurity-v${MODSECURITY_VERSION}.tar.gz \\\n && cd modsecurity-v${MODSECURITY_VERSION} \\\n && ./build.sh \\\n && ./configure --enable-mutex-on-pm \\\n && make \\\n && make install \\\n && cd /opt \\\n && echo 'Installing ModSec - Nginx connector' \\\n && curl -fSL https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v${MODSECURITY_NGINX_VERSION}/modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz -o modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz \\\n && tar -zxvf modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz \\\n && cd /opt \\\n && echo 'Downloading OpenSSL version required for OpenResty' \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && echo 'Downloading PCRE version required for OpenResty' \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && cd /opt \\\n && echo 'Creating Nginx modules' \\\n && export MODSECURITY_LIB=\"/opt/modsecurity-v${MODSECURITY_VERSION}/src/.libs/\" \\\n && export MODSECURITY_INC=\"/opt/modsecurity-v${MODSECURITY_VERSION}/headers/\" \\\n && curl -fSL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -o nginx-${NGINX_VERSION}.tar.gz \\\n && tar zxvf nginx-${NGINX_VERSION}.tar.gz \\\n && cd /opt/nginx-${NGINX_VERSION} \\\n && ./configure ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} --add-dynamic-module=../modsecurity-nginx-v${MODSECURITY_NGINX_VERSION} --with-debug \\\n && make modules \\\n && cd /opt \\\n && echo \"Installing GeoIP DB\" \\\n && mkdir -p /etc/nginx/geoip \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz -o GeoLite2-City.tar.gz \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz -o GeoLite2-Country.tar.gz \\\n && tar -xvzf GeoLite2-City.tar.gz \\\n && tar -xvzf GeoLite2-Country.tar.gz \\\n && mv GeoLite2*/*.mmdb /etc/nginx/geoip/ \\\n && cd /opt \\\n && echo \"Installing OpenResty\" \\\n && if [ -n \"${RESTY_EVAL_PRE_CONFIGURE}\" ] ; then eval $( echo ${RESTY_EVAL_PRE_CONFIGURE} ;) ; fi \\\n && export MODSECURITY_LIB=\"/opt/modsecurity-v${MODSECURITY_VERSION}/src/.libs/\" \\\n && export MODSECURITY_INC=\"/opt/modsecurity-v${MODSECURITY_VERSION}/headers/\" \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /opt/openresty-${RESTY_VERSION} \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} --with-http_iconv_module --with-debug \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /opt \\\n && if [ -n \"${RESTY_EVAL_POST_MAKE}\" ] ; then eval $( echo ${RESTY_EVAL_POST_MAKE} ;) ; fi \\\n && cd /opt \\\n && echo \"Installing ModSec OWASP Rules\" \\\n && curl -fSL https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v${OWASP_MODSECURITY_CRS_VERSION}.tar.gz -o owasp-config.tar.gz \\\n && tar -zxvf owasp-config.tar.gz \\\n && mv /opt/owasp-modsecurity-crs-$OWASP_MODSECURITY_CRS_VERSION /etc/nginx/crs \\\n && mv /etc/nginx/crs/crs-setup.conf.example /etc/nginx/crs/crs-setup.conf \\\n && echo \"Cleaning up\" \\\n && rm -fr /opt/modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz \\\n && rm -fr /opt/modsecurity-v${MODSECURITY_VERSION}.tar.gz \\\n && rm -fr /opt/GeoLite2* \\\n && rm -fr /opt/owasp-config.tar.gz \\\n && rm -fr /opt/owasp-modsecurity-crs-$OWASP_MODSECURITY_CRS_VERSION \\\n && rm -fr /opt/nginx-${NGINX_VERSION}* \\\n && rm -rf /opt/openssl-${RESTY_OPENSSL_VERSION} /opt/openssl-${RESTY_OPENSSL_VERSION}.tar.gz /opt/openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} /opt/pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && apk del .build-deps \\\n && apk del .libmodsecurity-deps\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib\nENV PATH=\"$PATH:/etc/nginx/luajit/bin:/etc/nginx/bin\"\nCOPY entrypoint.sh entrypoint.sh\n#  base image configs - expected to be redefined for child images\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY modsecurity.conf /etc/nginx/modsecurity.conf\nCOPY crs-setup.conf /etc/nginx/crs/crs-setup.conf\nCOPY cors.conf /etc/nginx/cors.conf\n#  here you can load your LUA scripts\nCOPY lua /etc/nginx/lua\n#  adding Lua HTTP resty client - e.g.: dependency for Crowd Auth\nRUN opm get pintsized/lua-resty-http \\\n && cp -r /etc/nginx/site/lualib/resty /etc/nginx/lua \\\n && opm remove pintsized/lua-resty-http\nRUN chown -R nginx:nginx /var/log/nginx /etc/nginx /var/cache/nginx /usr/lib/nginx\n#  implement changes required to run NGINX as an unprivileged user\nRUN chown -R :0 /etc/nginx /var/cache/nginx /var/log/nginx \\\n && chmod -R g+w /etc/nginx /var/cache/nginx /var/log/nginx\nEXPOSE 8080/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nUSER nginx\n#  Use SIGQUIT instead of default SIGTERM to cleanly drain requests\n#  See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls\nSTOPSIGNAL SIGQUIT\n","injectedSmells":[],"originalDockerfileHash":"6ea5e00b90bc22a008f2dce53c885776","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2018 the original author or authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n#   in compliance with the License. You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software distributed under the License\n#   is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n#   or implied. See the License for the specific language governing permissions and limitations under\n#   the License.\n#   Dockerfile - alpine - openresty - Lua auth-crowd - modsecurity\n#   related links found in the curl downloaded links and:\n#   https://github.com/openresty/docker-openresty\nFROM alpine:3.8\nLABEL maintainer=\"Gerard Castillo <gerard.castillo@boehringer-ingelheim.com>\"\n#   Docker Build Arguments\nARG NGINX_VERSION=\"1.13.6\"\nARG MODSECURITY_VERSION=\"3.0.0\"\nARG MODSECURITY_NGINX_VERSION=\"1.0.0\"\nARG OWASP_MODSECURITY_CRS_VERSION=\"3.0.2\"\nARG RESTY_VERSION=\"1.13.6.2\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2p\"\nARG RESTY_PCRE_VERSION=\"8.42\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\" --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=/usr/lib/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-stream  --with-stream_ssl_module  --with-stream_ssl_preread_module  --with-stream_realip_module  --with-stream_geoip_module=dynamic  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-compat  --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_geoip_module=dynamic  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-threads  --with-pcre-jit  --with-ipv6  --add-dynamic-module=/opt/modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}  --with-ld-opt='-lcurl'  \"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\nARG RESTY_ADD_PACKAGE_BUILDDEPS=\"\"\nARG RESTY_ADD_PACKAGE_RUNDEPS=\"\"\nARG RESTY_EVAL_PRE_CONFIGURE=\"\"\nARG RESTY_EVAL_POST_MAKE=\"\"\nLABEL resty_version=\"${RESTY_VERSION}\"\nLABEL resty_openssl_version=\"${RESTY_OPENSSL_VERSION}\"\nLABEL resty_pcre_version=\"${RESTY_PCRE_VERSION}\"\nLABEL resty_config_options=\"${RESTY_CONFIG_OPTIONS}\"\nLABEL resty_config_options_more=\"${RESTY_CONFIG_OPTIONS_MORE}\"\nLABEL resty_add_package_builddeps=\"${RESTY_ADD_PACKAGE_BUILDDEPS}\"\nLABEL resty_add_package_rundeps=\"${RESTY_ADD_PACKAGE_RUNDEPS}\"\nLABEL resty_eval_pre_configure=\"${RESTY_EVAL_PRE_CONFIGURE}\"\nLABEL resty_eval_post_make=\"${RESTY_EVAL_POST_MAKE}\"\n#   These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/opt/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/opt/pcre-${RESTY_PCRE_VERSION}\"\nRUN apk add --no-cache --virtual .build-deps build-base curl gd-dev geoip-dev libxslt-dev linux-headers make perl-dev readline-dev zlib-dev gcc libc-dev gnupg ${RESTY_ADD_PACKAGE_BUILDDEPS} \\\n && apk add --no-cache --virtual .libmodsecurity-deps libxml2-dev git libtool automake autoconf g++ flex bison yajl-dev \\\n && apk add --no-cache syslog-ng pcre-dev gd geoip libgcc libxslt zlib doxygen geoip-dev yajl libstdc++ git sed libmaxminddb-dev libcurl libssh2-dev nghttp2-dev pkgconf curl-dev perl ${RESTY_ADD_PACKAGE_RUNDEPS} \\\n && echo \"Adding required system group and user\" \\\n && addgroup --system nginx \\\n && adduser --disabled-password --system --home /var/cache/nginx --shell /sbin/nologin --ingroup nginx nginx \\\n && echo \"Creating installation folder\" \\\n && mkdir -p /opt \\\n && cd /opt \\\n && echo \"Installing ModSec Library\" \\\n && curl -fSL https://github.com/SpiderLabs/ModSecurity/releases/download/v${MODSECURITY_VERSION}/modsecurity-v${MODSECURITY_VERSION}.tar.gz -o modsecurity-v${MODSECURITY_VERSION}.tar.gz \\\n && tar -zxvf modsecurity-v${MODSECURITY_VERSION}.tar.gz \\\n && cd modsecurity-v${MODSECURITY_VERSION} \\\n && ./build.sh \\\n && ./configure --enable-mutex-on-pm \\\n && make \\\n && make install \\\n && cd /opt \\\n && echo 'Installing ModSec - Nginx connector' \\\n && curl -fSL https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v${MODSECURITY_NGINX_VERSION}/modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz -o modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz \\\n && tar -zxvf modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz \\\n && cd /opt \\\n && echo 'Downloading OpenSSL version required for OpenResty' \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && echo 'Downloading PCRE version required for OpenResty' \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && cd /opt \\\n && echo 'Creating Nginx modules' \\\n && export MODSECURITY_LIB=\"/opt/modsecurity-v${MODSECURITY_VERSION}/src/.libs/\" \\\n && export MODSECURITY_INC=\"/opt/modsecurity-v${MODSECURITY_VERSION}/headers/\" \\\n && curl -fSL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -o nginx-${NGINX_VERSION}.tar.gz \\\n && tar zxvf nginx-${NGINX_VERSION}.tar.gz \\\n && cd /opt/nginx-${NGINX_VERSION} \\\n && ./configure ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} --add-dynamic-module=../modsecurity-nginx-v${MODSECURITY_NGINX_VERSION} --with-debug \\\n && make modules \\\n && cd /opt \\\n && echo \"Installing GeoIP DB\" \\\n && mkdir -p /etc/nginx/geoip \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz -o GeoLite2-City.tar.gz \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz -o GeoLite2-Country.tar.gz \\\n && tar -xvzf GeoLite2-City.tar.gz \\\n && tar -xvzf GeoLite2-Country.tar.gz \\\n && mv GeoLite2*/*.mmdb /etc/nginx/geoip/ \\\n && cd /opt \\\n && echo \"Installing OpenResty\" \\\n && if [ -n \"${RESTY_EVAL_PRE_CONFIGURE}\" ] ; then eval $( echo ${RESTY_EVAL_PRE_CONFIGURE} ;) ; fi \\\n && export MODSECURITY_LIB=\"/opt/modsecurity-v${MODSECURITY_VERSION}/src/.libs/\" \\\n && export MODSECURITY_INC=\"/opt/modsecurity-v${MODSECURITY_VERSION}/headers/\" \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /opt/openresty-${RESTY_VERSION} \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} --with-http_iconv_module --with-debug \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /opt \\\n && if [ -n \"${RESTY_EVAL_POST_MAKE}\" ] ; then eval $( echo ${RESTY_EVAL_POST_MAKE} ;) ; fi \\\n && cd /opt \\\n && echo \"Installing ModSec OWASP Rules\" \\\n && curl -fSL https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v${OWASP_MODSECURITY_CRS_VERSION}.tar.gz -o owasp-config.tar.gz \\\n && tar -zxvf owasp-config.tar.gz \\\n && mv /opt/owasp-modsecurity-crs-$OWASP_MODSECURITY_CRS_VERSION /etc/nginx/crs \\\n && mv /etc/nginx/crs/crs-setup.conf.example /etc/nginx/crs/crs-setup.conf \\\n && echo \"Cleaning up\" \\\n && rm -fr /opt/modsecurity-nginx-v${MODSECURITY_NGINX_VERSION}.tar.gz \\\n && rm -fr /opt/modsecurity-v${MODSECURITY_VERSION}.tar.gz \\\n && rm -fr /opt/GeoLite2* \\\n && rm -fr /opt/owasp-config.tar.gz \\\n && rm -fr /opt/owasp-modsecurity-crs-$OWASP_MODSECURITY_CRS_VERSION \\\n && rm -fr /opt/nginx-${NGINX_VERSION}* \\\n && rm -rf /opt/openssl-${RESTY_OPENSSL_VERSION} /opt/openssl-${RESTY_OPENSSL_VERSION}.tar.gz /opt/openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} /opt/pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && apk del .build-deps \\\n && apk del .libmodsecurity-deps\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib\nENV PATH=\"$PATH:/etc/nginx/luajit/bin:/etc/nginx/bin\"\nCOPY entrypoint.sh entrypoint.sh\n#   base image configs - expected to be redefined for child images\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY modsecurity.conf /etc/nginx/modsecurity.conf\nCOPY crs-setup.conf /etc/nginx/crs/crs-setup.conf\nCOPY cors.conf /etc/nginx/cors.conf\n#   here you can load your LUA scripts\nCOPY lua /etc/nginx/lua\n#   adding Lua HTTP resty client - e.g.: dependency for Crowd Auth\nRUN opm get pintsized/lua-resty-http \\\n && cp -r /etc/nginx/site/lualib/resty /etc/nginx/lua \\\n && opm remove pintsized/lua-resty-http\nRUN chown -R nginx:nginx /var/log/nginx /etc/nginx /var/cache/nginx /usr/lib/nginx\n#   implement changes required to run NGINX as an unprivileged user\nRUN chown -R :0 /etc/nginx /var/cache/nginx /var/log/nginx \\\n && chmod -R g+w /etc/nginx /var/cache/nginx /var/log/nginx\nEXPOSE 8080/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nUSER nginx\n#   Use SIGQUIT instead of default SIGTERM to cleanly drain requests\n#   See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls\nSTOPSIGNAL SIGQUIT\n","originalDockerfileUglifiedHash":"b13fb58415a79322bc459ba16519926e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/54f8d65adb5882a33f4930b287132429504c7325.dockerfile"}