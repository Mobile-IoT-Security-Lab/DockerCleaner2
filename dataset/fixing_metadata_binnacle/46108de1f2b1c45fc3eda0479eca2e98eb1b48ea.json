{"seed":3923678297,"processedDockerfileHash":"25267c4b81f6f0c8c2d5a0c9f34af77f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:0.9.12\nMAINTAINER Abe Voelker <abe@abevoelker.com>\nENV USERNAME=\"postgres\"\nENV PASSWORD=\"password\"\nENV VERSION=\"9.4\"\n#   Temporary hack around a Docker Hub `docker build` issue. See:\n#   https://github.com/docker/docker/issues/6345#issuecomment-49245365\nRUN ln -s -f /bin/true /usr/bin/chfn\n#   Disable SSH and existing cron jobs\nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh /etc/cron.daily/dpkg /etc/cron.daily/apt /etc/cron.daily/passwd /etc/cron.daily/logrotate /etc/cron.daily/upstart /etc/cron.weekly/fstrim\n#   Ensure UTF-8 locale\nCOPY locale /etc/default/locale\nRUN locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales\n#   Update APT\nRUN DEBIAN_FRONTEND=noninteractive apt-get update\n#   Install build dependencies\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget\n#   Add PostgreSQL Global Development Group apt source\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n#   Add PGDG repository key\nRUN wget -qO - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -\nRUN DEBIAN_FRONTEND=noninteractive apt-get update\n#   Install Postgres, PL/Python, PL/V8\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-$VERSION postgresql-contrib-$VERSION postgresql-server-dev-$VERSION postgresql-plpython-$VERSION postgresql-$VERSION-plv8 libxml2-dev libxslt1-dev python-dev python-pip daemontools libevent-dev lzop pv libffi-dev libssl-dev \\\n && pip install virtualenv==20.21.0\n#   Install WAL-E into a virtualenv\nRUN virtualenv /var/lib/postgresql/wal-e \\\n && . /var/lib/postgresql/wal-e/bin/activate \\\n && pip install wal-e==1.1.1 \\\n && ln -s /var/lib/postgresql/wal-e/bin/wal-e /usr/local/bin/wal-e\n#   Create directory for storing secret WAL-E environment variables\nRUN umask u=rwx,g=rx,o= \\\n && mkdir -p /etc/wal-e.d/env \\\n && chown -R root:postgres /etc/wal-e.d\n#   Remove build dependencies and clean up APT and temporary files\nRUN DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y wget \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Copy basic Postgres configs with values suitable for development\n#   (note: these should be overridden in production!)\nCOPY ./pg_hba.conf /etc/postgresql/$VERSION/main/\nCOPY ./postgresql.conf /etc/postgresql/$VERSION/main/\n#   COPY sets ownership on this directory to root\nRUN chown -R postgres:postgres /etc/postgresql/$VERSION/main\n#   Use wrapper scripts to start cron and Postgres\nCOPY scripts /data/scripts\nRUN chmod -R 755 /data/scripts\n#   Copy runit configs\nRUN mkdir -m 755 -p /etc/service/postgres\nCOPY runit/cron /etc/service/cron/run\nCOPY runit/postgres /etc/service/postgres/run\nRUN chmod 755 /etc/service/cron/run /etc/service/postgres/run\nUSER postgres\nRUN /etc/init.d/postgresql start \\\n && psql --command \"ALTER USER postgres WITH PASSWORD '$PASSWORD';\" \\\n && /etc/init.d/postgresql stop\nUSER root\n#   The image only runs Postgres by default. If you want to run periodic full\n#   backups with cron + WAL-E you should start supervisord instead (see README)\nCMD [\"/data/scripts/start_postgres.sh\"]\n#   Keep Postgres log, config and storage outside of union filesystem\nVOLUME [\"/var/log/postgresql\",  \"/var/log/supervisor\",  \"/etc/postgresql/9.4/main\",  \"/var/lib/postgresql/9.4/main\"]\nEXPOSE 5432/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:0.9.12\nMAINTAINER Abe Voelker <abe@abevoelker.com>\nENV USERNAME=\"postgres\"\nENV PASSWORD=\"password\"\nENV VERSION=\"9.4\"\n#  Temporary hack around a Docker Hub `docker build` issue. See:\n#  https://github.com/docker/docker/issues/6345#issuecomment-49245365\nRUN ln -s -f /bin/true /usr/bin/chfn\n#  Disable SSH and existing cron jobs\nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh /etc/cron.daily/dpkg /etc/cron.daily/apt /etc/cron.daily/passwd /etc/cron.daily/logrotate /etc/cron.daily/upstart /etc/cron.weekly/fstrim\n#  Ensure UTF-8 locale\nCOPY locale /etc/default/locale\nRUN locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales\n#  Update APT\nRUN DEBIAN_FRONTEND=noninteractive apt-get update\n#  Install build dependencies\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget\n#  Add PostgreSQL Global Development Group apt source\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n#  Add PGDG repository key\nRUN wget -qO - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -\nRUN DEBIAN_FRONTEND=noninteractive apt-get update\n#  Install Postgres, PL/Python, PL/V8\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-$VERSION postgresql-contrib-$VERSION postgresql-server-dev-$VERSION postgresql-plpython-$VERSION postgresql-$VERSION-plv8 libxml2-dev libxslt1-dev python-dev python-pip daemontools libevent-dev lzop pv libffi-dev libssl-dev \\\n && pip install virtualenv\n#  Install WAL-E into a virtualenv\nRUN virtualenv /var/lib/postgresql/wal-e \\\n && . /var/lib/postgresql/wal-e/bin/activate \\\n && pip install wal-e \\\n && ln -s /var/lib/postgresql/wal-e/bin/wal-e /usr/local/bin/wal-e\n#  Create directory for storing secret WAL-E environment variables\nRUN umask u=rwx,g=rx,o= \\\n && mkdir -p /etc/wal-e.d/env \\\n && chown -R root:postgres /etc/wal-e.d\n#  Remove build dependencies and clean up APT and temporary files\nRUN DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y wget \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Copy basic Postgres configs with values suitable for development\n#  (note: these should be overridden in production!)\nCOPY ./pg_hba.conf /etc/postgresql/$VERSION/main/\nCOPY ./postgresql.conf /etc/postgresql/$VERSION/main/\n#  COPY sets ownership on this directory to root\nRUN chown -R postgres:postgres /etc/postgresql/$VERSION/main\n#  Use wrapper scripts to start cron and Postgres\nCOPY scripts /data/scripts\nRUN chmod -R 755 /data/scripts\n#  Copy runit configs\nRUN mkdir -m 755 -p /etc/service/postgres\nCOPY runit/cron /etc/service/cron/run\nCOPY runit/postgres /etc/service/postgres/run\nRUN chmod 755 /etc/service/cron/run /etc/service/postgres/run\nUSER postgres\nRUN /etc/init.d/postgresql start \\\n && psql --command \"ALTER USER postgres WITH PASSWORD '$PASSWORD';\" \\\n && /etc/init.d/postgresql stop\nUSER root\n#  The image only runs Postgres by default. If you want to run periodic full\n#  backups with cron + WAL-E you should start supervisord instead (see README)\nCMD [\"/data/scripts/start_postgres.sh\"]\n#  Keep Postgres log, config and storage outside of union filesystem\nVOLUME [\"/var/log/postgresql\",  \"/var/log/supervisor\",  \"/etc/postgresql/9.4/main\",  \"/var/lib/postgresql/9.4/main\"]\nEXPOSE 5432/tcp\n","injectedSmells":[],"originalDockerfileHash":"a5513b257794f6746e23768ce9de9459","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:0.9.12\nMAINTAINER Abe Voelker <abe@abevoelker.com>\nENV USERNAME=\"postgres\"\nENV PASSWORD=\"password\"\nENV VERSION=\"9.4\"\n#   Temporary hack around a Docker Hub `docker build` issue. See:\n#   https://github.com/docker/docker/issues/6345#issuecomment-49245365\nRUN ln -s -f /bin/true /usr/bin/chfn\n#   Disable SSH and existing cron jobs\nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh /etc/cron.daily/dpkg /etc/cron.daily/apt /etc/cron.daily/passwd /etc/cron.daily/logrotate /etc/cron.daily/upstart /etc/cron.weekly/fstrim\n#   Ensure UTF-8 locale\nCOPY locale /etc/default/locale\nRUN locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales\n#   Update APT\nRUN DEBIAN_FRONTEND=noninteractive apt-get update\n#   Install build dependencies\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget\n#   Add PostgreSQL Global Development Group apt source\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n#   Add PGDG repository key\nRUN wget -qO - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -\nRUN DEBIAN_FRONTEND=noninteractive apt-get update\n#   Install Postgres, PL/Python, PL/V8\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-$VERSION postgresql-contrib-$VERSION postgresql-server-dev-$VERSION postgresql-plpython-$VERSION postgresql-$VERSION-plv8 libxml2-dev libxslt1-dev python-dev python-pip daemontools libevent-dev lzop pv libffi-dev libssl-dev \\\n && pip install virtualenv\n#   Install WAL-E into a virtualenv\nRUN virtualenv /var/lib/postgresql/wal-e \\\n && . /var/lib/postgresql/wal-e/bin/activate \\\n && pip install wal-e \\\n && ln -s /var/lib/postgresql/wal-e/bin/wal-e /usr/local/bin/wal-e\n#   Create directory for storing secret WAL-E environment variables\nRUN umask u=rwx,g=rx,o= \\\n && mkdir -p /etc/wal-e.d/env \\\n && chown -R root:postgres /etc/wal-e.d\n#   Remove build dependencies and clean up APT and temporary files\nRUN DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y wget \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Copy basic Postgres configs with values suitable for development\n#   (note: these should be overridden in production!)\nCOPY ./pg_hba.conf /etc/postgresql/$VERSION/main/\nCOPY ./postgresql.conf /etc/postgresql/$VERSION/main/\n#   COPY sets ownership on this directory to root\nRUN chown -R postgres:postgres /etc/postgresql/$VERSION/main\n#   Use wrapper scripts to start cron and Postgres\nCOPY scripts /data/scripts\nRUN chmod -R 755 /data/scripts\n#   Copy runit configs\nRUN mkdir -m 755 -p /etc/service/postgres\nCOPY runit/cron /etc/service/cron/run\nCOPY runit/postgres /etc/service/postgres/run\nRUN chmod 755 /etc/service/cron/run /etc/service/postgres/run\nUSER postgres\nRUN /etc/init.d/postgresql start \\\n && psql --command \"ALTER USER postgres WITH PASSWORD '$PASSWORD';\" \\\n && /etc/init.d/postgresql stop\nUSER root\n#   The image only runs Postgres by default. If you want to run periodic full\n#   backups with cron + WAL-E you should start supervisord instead (see README)\nCMD [\"/data/scripts/start_postgres.sh\"]\n#   Keep Postgres log, config and storage outside of union filesystem\nVOLUME [\"/var/log/postgresql\",  \"/var/log/supervisor\",  \"/etc/postgresql/9.4/main\",  \"/var/lib/postgresql/9.4/main\"]\nEXPOSE 5432/tcp\n","originalDockerfileUglifiedHash":"f50c45d12447d2e3131679f9edf446f6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/46108de1f2b1c45fc3eda0479eca2e98eb1b48ea.dockerfile"}