{"seed":2945138070,"processedDockerfileHash":"cc5f69d2d4b4ae6ba4235073253f69bb","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Start with the official Composer image and name it 'composer' for reference\nFROM composer AS composer\n#   get the proper 'PHP' image from the official PHP repo at\nFROM php:7.3-apache-stretch\n#   copy the Composer PHAR from the Composer image into the apache-php image\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\n#   Now that all the 'FROM' values are set, set the maintainer\nMAINTAINER Ilios Project Team <support@iliosproject.org>\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV COMPOSER_HOME=\"/tmp\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"true\" \\\n    APP_ENV=\"prod\" \\\n    ILIOS_DATABASE_URL=\"mysql://ilios:ilios@db/ilios\" \\\n    ILIOS_DATABASE_MYSQL_VERSION=\"5.7\" \\\n    ILIOS_MAILER_URL=\"null://localhost\" \\\n    ILIOS_LOCALE=\"en\" \\\n    ILIOS_AUTHENTICATION_TYPE=\"form\" \\\n    ILIOS_LEGACY_PASSWORD_SALT=\"null\" \\\n    ILIOS_FILE_SYSTEM_STORAGE_PATH=\"/data\" \\\n    ILIOS_INSTITUTION_DOMAIN=\"example.com\" \\\n    ILIOS_SUPPORTING_LINK=\"null\" \\\n    ILIOS_LDAP_AUTHENTICATION_HOST=\"null\" \\\n    ILIOS_LDAP_AUTHENTICATION_PORT=\"null\" \\\n    ILIOS_LDAP_AUTHENTICATION_BIND_TEMPLATE=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_URL=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_USER=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_SEARCH_BASE=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_CAMPUS_ID_PROPERTY=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_DISPLAY_NAME_PROPERTY=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_USERNAME_PROPERTY=\"null\" \\\n    ILIOS_SHIBBOLETH_AUTHENTICATION_LOGIN_PATH=\"null\" \\\n    ILIOS_SHIBBOLETH_AUTHENTICATION_LOGOUT_PATH=\"null\" \\\n    ILIOS_SHIBBOLETH_AUTHENTICATION_USER_ID_ATTRIBUTE=\"null\" \\\n    ILIOS_TIMEZONE=\"America/Los_Angeles\" \\\n    ILIOS_REQUIRE_SECURE_CONNECTION=\"true\" \\\n    ILIOS_KEEP_FRONTEND_UPDATED=\"true\" \\\n    ILIOS_FRONTEND_RELEASE_VERSION=\"null\" \\\n    ILIOS_CAS_AUTHENTICATION_SERVER=\"null\" \\\n    ILIOS_CAS_AUTHENTICATION_VERSION=\"3\" \\\n    ILIOS_CAS_AUTHENTICATION_VERIFY_SSL=\"false\" \\\n    ILIOS_CAS_AUTHENTICATION_CERTIFICATE_PATH=\"null\" \\\n    ILIOS_ENABLE_TRACKING=\"false\" \\\n    ILIOS_TRACKING_CODE=\"UA-XXXXXXXX-1\"\n#   configure Apache and the PHP extensions required for Ilios and delete the source files after install\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo libldap2-dev zlib1g-dev libicu-dev libzip-dev libzip4 -y \\\n && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\n && docker-php-ext-install ldap \\\n && docker-php-ext-install zip \\\n && docker-php-ext-install pdo_mysql \\\n && docker-php-ext-install intl \\\n && pecl channel-update pecl.php.net \\\n && pecl install apcu \\\n && docker-php-ext-enable apcu \\\n && docker-php-ext-enable opcache \\\n && a2enmod rewrite socache_shmcb mpm_prefork http2 \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge libldap2-dev zlib1g-dev libicu-dev -y \\\n && apt-get autoremove -y\n#   copy configuration into the default locations\nCOPY ./docker/php.ini $PHP_INI_DIR\nCOPY ./docker/apache.conf /etc/apache2/sites-enabled/000-default.conf\n#   create the volume that will store the learning materials\nVOLUME $ILIOS_FILE_SYSTEM_STORAGE_PATH\n#   copy the contents of the current directory to the /var/www/ilios directory\nCOPY . /var/www/ilios\n#   Override monolog to send errors to stdout\nCOPY ./docker/monolog.yaml /var/www/ilios/config/packages/prod\n#   add our own entrypoint scripts\nCOPY ./docker/ilios-entrypoint /usr/local/bin/\nWORKDIR /var/www/ilios\nRUN chown -R www-data:www-data /var/www/ilios\n#   Switch to the www-data user so everything installed after this can be read by apache\nUSER www-data\nRUN /usr/bin/composer install --working-dir /var/www/ilios --prefer-dist --no-dev --no-progress --no-interaction --no-suggest --classmap-authoritative \\\n && /usr/bin/composer dump-env $APP_ENV \\\n && /usr/bin/composer clear-cache \\\n && /var/www/ilios/bin/console assets:install\nUSER root\nENTRYPOINT [\"ilios-entrypoint\"]\nCMD [\"apache2-foreground\"]\nEXPOSE 80/tcp\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Start with the official Composer image and name it 'composer' for reference\nFROM composer AS composer\n#  get the proper 'PHP' image from the official PHP repo at\nFROM php:7.3-apache-stretch\n#  copy the Composer PHAR from the Composer image into the apache-php image\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\n#  Now that all the 'FROM' values are set, set the maintainer\nMAINTAINER Ilios Project Team <support@iliosproject.org>\nENV COMPOSER_HOME=\"/tmp\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"true\" \\\n    APP_ENV=\"prod\" \\\n    ILIOS_DATABASE_URL=\"mysql://ilios:ilios@db/ilios\" \\\n    ILIOS_DATABASE_MYSQL_VERSION=\"5.7\" \\\n    ILIOS_MAILER_URL=\"null://localhost\" \\\n    ILIOS_LOCALE=\"en\" \\\n    ILIOS_SECRET=\"ThisTokenIsNotSoSecretChangeIt\" \\\n    ILIOS_AUTHENTICATION_TYPE=\"form\" \\\n    ILIOS_LEGACY_PASSWORD_SALT=\"null\" \\\n    ILIOS_FILE_SYSTEM_STORAGE_PATH=\"/data\" \\\n    ILIOS_INSTITUTION_DOMAIN=\"example.com\" \\\n    ILIOS_SUPPORTING_LINK=\"null\" \\\n    ILIOS_LDAP_AUTHENTICATION_HOST=\"null\" \\\n    ILIOS_LDAP_AUTHENTICATION_PORT=\"null\" \\\n    ILIOS_LDAP_AUTHENTICATION_BIND_TEMPLATE=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_URL=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_USER=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_PASSWORD=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_SEARCH_BASE=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_CAMPUS_ID_PROPERTY=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_DISPLAY_NAME_PROPERTY=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_USERNAME_PROPERTY=\"null\" \\\n    ILIOS_SHIBBOLETH_AUTHENTICATION_LOGIN_PATH=\"null\" \\\n    ILIOS_SHIBBOLETH_AUTHENTICATION_LOGOUT_PATH=\"null\" \\\n    ILIOS_SHIBBOLETH_AUTHENTICATION_USER_ID_ATTRIBUTE=\"null\" \\\n    ILIOS_TIMEZONE=\"America/Los_Angeles\" \\\n    ILIOS_REQUIRE_SECURE_CONNECTION=\"true\" \\\n    ILIOS_KEEP_FRONTEND_UPDATED=\"true\" \\\n    ILIOS_FRONTEND_RELEASE_VERSION=\"null\" \\\n    ILIOS_CAS_AUTHENTICATION_SERVER=\"null\" \\\n    ILIOS_CAS_AUTHENTICATION_VERSION=\"3\" \\\n    ILIOS_CAS_AUTHENTICATION_VERIFY_SSL=\"false\" \\\n    ILIOS_CAS_AUTHENTICATION_CERTIFICATE_PATH=\"null\" \\\n    ILIOS_ENABLE_TRACKING=\"false\" \\\n    ILIOS_TRACKING_CODE=\"UA-XXXXXXXX-1\"\n#  configure Apache and the PHP extensions required for Ilios and delete the source files after install\nRUN apt-get update \\\n && apt-get install sudo libldap2-dev zlib1g-dev libicu-dev libzip-dev libzip4 -y \\\n && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\n && docker-php-ext-install ldap \\\n && docker-php-ext-install zip \\\n && docker-php-ext-install pdo_mysql \\\n && docker-php-ext-install intl \\\n && pecl channel-update pecl.php.net \\\n && pecl install apcu \\\n && docker-php-ext-enable apcu \\\n && docker-php-ext-enable opcache \\\n && a2enmod rewrite socache_shmcb mpm_prefork http2 \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge libldap2-dev zlib1g-dev libicu-dev -y \\\n && apt-get autoremove -y\n#  copy configuration into the default locations\nCOPY ./docker/php.ini $PHP_INI_DIR\nCOPY ./docker/apache.conf /etc/apache2/sites-enabled/000-default.conf\n#  create the volume that will store the learning materials\nVOLUME $ILIOS_FILE_SYSTEM_STORAGE_PATH\n#  copy the contents of the current directory to the /var/www/ilios directory\nCOPY . /var/www/ilios\n#  Override monolog to send errors to stdout\nCOPY ./docker/monolog.yaml /var/www/ilios/config/packages/prod\n#  add our own entrypoint scripts\nCOPY ./docker/ilios-entrypoint /usr/local/bin/\nWORKDIR /var/www/ilios\nRUN chown -R www-data:www-data /var/www/ilios\n#  Switch to the www-data user so everything installed after this can be read by apache\nUSER www-data\nRUN /usr/bin/composer install --working-dir /var/www/ilios --prefer-dist --no-dev --no-progress --no-interaction --no-suggest --classmap-authoritative \\\n && /usr/bin/composer dump-env $APP_ENV \\\n && /usr/bin/composer clear-cache \\\n && /var/www/ilios/bin/console assets:install\nUSER root\nENTRYPOINT [\"ilios-entrypoint\"]\nCMD [\"apache2-foreground\"]\nEXPOSE 80/tcp\n","injectedSmells":[],"originalDockerfileHash":"8aff17b5b0eca367ba8bbedaaf8b3d96","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Start with the official Composer image and name it 'composer' for reference\nFROM composer AS composer\n#   get the proper 'PHP' image from the official PHP repo at\nFROM php:7.3-apache-stretch\n#   copy the Composer PHAR from the Composer image into the apache-php image\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\n#   Now that all the 'FROM' values are set, set the maintainer\nMAINTAINER Ilios Project Team <support@iliosproject.org>\nENV COMPOSER_HOME=\"/tmp\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"true\" \\\n    APP_ENV=\"prod\" \\\n    ILIOS_DATABASE_URL=\"mysql://ilios:ilios@db/ilios\" \\\n    ILIOS_DATABASE_MYSQL_VERSION=\"5.7\" \\\n    ILIOS_MAILER_URL=\"null://localhost\" \\\n    ILIOS_LOCALE=\"en\" \\\n    ILIOS_SECRET=\"ThisTokenIsNotSoSecretChangeIt\" \\\n    ILIOS_AUTHENTICATION_TYPE=\"form\" \\\n    ILIOS_LEGACY_PASSWORD_SALT=\"null\" \\\n    ILIOS_FILE_SYSTEM_STORAGE_PATH=\"/data\" \\\n    ILIOS_INSTITUTION_DOMAIN=\"example.com\" \\\n    ILIOS_SUPPORTING_LINK=\"null\" \\\n    ILIOS_LDAP_AUTHENTICATION_HOST=\"null\" \\\n    ILIOS_LDAP_AUTHENTICATION_PORT=\"null\" \\\n    ILIOS_LDAP_AUTHENTICATION_BIND_TEMPLATE=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_URL=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_USER=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_PASSWORD=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_SEARCH_BASE=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_CAMPUS_ID_PROPERTY=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_DISPLAY_NAME_PROPERTY=\"null\" \\\n    ILIOS_LDAP_DIRECTORY_USERNAME_PROPERTY=\"null\" \\\n    ILIOS_SHIBBOLETH_AUTHENTICATION_LOGIN_PATH=\"null\" \\\n    ILIOS_SHIBBOLETH_AUTHENTICATION_LOGOUT_PATH=\"null\" \\\n    ILIOS_SHIBBOLETH_AUTHENTICATION_USER_ID_ATTRIBUTE=\"null\" \\\n    ILIOS_TIMEZONE=\"America/Los_Angeles\" \\\n    ILIOS_REQUIRE_SECURE_CONNECTION=\"true\" \\\n    ILIOS_KEEP_FRONTEND_UPDATED=\"true\" \\\n    ILIOS_FRONTEND_RELEASE_VERSION=\"null\" \\\n    ILIOS_CAS_AUTHENTICATION_SERVER=\"null\" \\\n    ILIOS_CAS_AUTHENTICATION_VERSION=\"3\" \\\n    ILIOS_CAS_AUTHENTICATION_VERIFY_SSL=\"false\" \\\n    ILIOS_CAS_AUTHENTICATION_CERTIFICATE_PATH=\"null\" \\\n    ILIOS_ENABLE_TRACKING=\"false\" \\\n    ILIOS_TRACKING_CODE=\"UA-XXXXXXXX-1\"\n#   configure Apache and the PHP extensions required for Ilios and delete the source files after install\nRUN apt-get update \\\n && apt-get install sudo libldap2-dev zlib1g-dev libicu-dev libzip-dev libzip4 -y \\\n && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\n && docker-php-ext-install ldap \\\n && docker-php-ext-install zip \\\n && docker-php-ext-install pdo_mysql \\\n && docker-php-ext-install intl \\\n && pecl channel-update pecl.php.net \\\n && pecl install apcu \\\n && docker-php-ext-enable apcu \\\n && docker-php-ext-enable opcache \\\n && a2enmod rewrite socache_shmcb mpm_prefork http2 \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge libldap2-dev zlib1g-dev libicu-dev -y \\\n && apt-get autoremove -y\n#   copy configuration into the default locations\nCOPY ./docker/php.ini $PHP_INI_DIR\nCOPY ./docker/apache.conf /etc/apache2/sites-enabled/000-default.conf\n#   create the volume that will store the learning materials\nVOLUME $ILIOS_FILE_SYSTEM_STORAGE_PATH\n#   copy the contents of the current directory to the /var/www/ilios directory\nCOPY . /var/www/ilios\n#   Override monolog to send errors to stdout\nCOPY ./docker/monolog.yaml /var/www/ilios/config/packages/prod\n#   add our own entrypoint scripts\nCOPY ./docker/ilios-entrypoint /usr/local/bin/\nWORKDIR /var/www/ilios\nRUN chown -R www-data:www-data /var/www/ilios\n#   Switch to the www-data user so everything installed after this can be read by apache\nUSER www-data\nRUN /usr/bin/composer install --working-dir /var/www/ilios --prefer-dist --no-dev --no-progress --no-interaction --no-suggest --classmap-authoritative \\\n && /usr/bin/composer dump-env $APP_ENV \\\n && /usr/bin/composer clear-cache \\\n && /var/www/ilios/bin/console assets:install\nUSER root\nENTRYPOINT [\"ilios-entrypoint\"]\nCMD [\"apache2-foreground\"]\nEXPOSE 80/tcp\n","originalDockerfileUglifiedHash":"ef9d93fd1332ef0ed319222f3d761ada","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6562ed5a835859cf89815d4c821874f836ad02ea.dockerfile"}