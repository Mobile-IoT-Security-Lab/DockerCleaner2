{"seed":4148275288,"processedDockerfileHash":"bd1176353d9731dbf055551661532f14","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:latest\nMAINTAINER liufee job@feehi.com\n#  php版本,因为php版本间配置文件模板不相同，此处的版本号只能为大于7.0以上版本\nARG PHP_VER=7.1.12\n#  nginx版本\nARG NGINX_VER=1.12.2\n#  修改dns地址\nRUN echo nameserver 223.5.5.5 > /etc/resolv.conf\n#  更换yum源\nRUN mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup \\\n && curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n#  安装基础工具\nRUN yum install vim wget git net-tools -y\n#  安装supervisor\nRUN yum install python-setuptools -y \\\n && easy_install supervisor\n#  安装php\nRUN yum install epel-release -y \\\n && yum update -y \\\n && yum -y install pcre pcre-devel zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libjpeg libjpeg-devel libpng libpng-devel curl curl-devel libicu libicu-devel libmcrypt libmcrypt-devel freetype freetype-devel libmcrypt libmcrypt-devel autoconf gcc-c++\nWORKDIR /usr/src\nRUN curl -o php.tar.gz http://php.net/get/php-${PHP_VER}.tar.gz/from/this/mirror -L \\\n && mkdir php \\\n && tar -xzvf php.tar.gz -C ./php --strip-components 1\nWORKDIR php\nRUN ./configure --prefix=/usr/local/php --with-config-file-path=/etc/php --enable-soap --enable-mbstring=all --enable-sockets --enable-fpm --with-gd --with-freetype-dir=/usr/include/freetype2/freetype --with-jpeg-dir=/usr/lib64 --with-zlib --with-iconv --enable-libxml --enable-xml --enable-intl --enable-zip --enable-pcntl --enable-bcmath --enable-maintainer-zts --with-curl --with-mcrypt --with-openssl --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd \\\n && make \\\n && make install \\\n && mkdir /etc/php \\\n && cp /usr/src/php/php.ini-development /etc/php/php.ini \\\n && cp /usr/src/php/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm \\\n && chmod +x /etc/init.d/php-fpm\nWORKDIR /usr/local/php/etc\nRUN cp php-fpm.conf.default php-fpm.conf \\\n && sed -i \"s/;daemonize = yes/daemonize = no/\" php-fpm.conf \\\n && cp ./php-fpm.d/www.conf.default ./php-fpm.d/www.conf \\\n && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/php\\/bin:$PATH\\nexport PATH/\" /etc/profile \\\n && sed -i \"s/export PATH/PATH=\\/etc\\/init.d:$PATH\\nexport PATH/\" /etc/profile\n#  安装nginx\nWORKDIR /usr/src\nRUN curl -o nginx.tar.gz http://nginx.org/download/nginx-${NGINX_VER}.tar.gz \\\n && mkdir nginx \\\n && tar -zxvf nginx.tar.gz -C ./nginx --strip-components 1\nWORKDIR nginx\nRUN ./configure --prefix=/usr/local/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx.lock --user=nginx --group=nginx --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module --with-http_gzip_static_module --http-client-body-temp-path=/tmp/nginx/client/ --http-proxy-temp-path=/tmp/nginx/proxy/ --http-fastcgi-temp-path=/tmp/nginx/fcgi/ --with-pcre --with-http_dav_module \\\n && make \\\n && make install \\\n && useradd nginx \\\n && mkdir -p -m 777 /tmp/nginx \\\n && echo \"#!/bin/sh\" > /etc/init.d/nginx \\\n && echo \"#description: Nginx web server.\" >> /etc/init.d/nginx \\\n && echo -e \"case $1 in \\n restart): \\n /usr/local/nginx/sbin/nginx -s reload \\n ;; \\n stop): \\n /usr/local/nginx/sbin/nginx -s stop \\n ;; \\n *): \\n /usr/local/nginx/sbin/nginx \\n ;; \\n esac \\n\" >> /etc/init.d/nginx \\\n && chmod +x /etc/init.d/nginx \\\n && sed -i \"64a }\" /etc/nginx/nginx.conf \\\n && sed -i \"64a include fastcgi_params;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a fastcgi_index index.php;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a fastcgi_pass 127.0.0.1:9000;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a root html/frontend/web;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a location ~ \\.php$ {\" /etc/nginx/nginx.conf \\\n && sed -i \"3a daemon off;\" /etc/nginx/nginx.conf \\\n && echo \"<?php phpinfo()?>\" > /usr/local/nginx/html/index.php \\\n && sed -i '45s/html;/html\\/frontend\\/web;/g' /etc/nginx/nginx.conf \\\n && sed -i '46s/index index.html index.htm;/index index.php index.html index.htm;/g' /etc/nginx/nginx.conf \\\n && sed -i \"46a try_files $uri $uri/ /index.php?$args;\" /etc/nginx/nginx.conf\n#  安装mysql\nRUN curl -o mysql-server.rpm https://repo.mysql.com//mysql57-community-release-el7-11.noarch.rpm\nRUN rpm -ivh mysql-server.rpm\nRUN /usr/bin/yum install mysql-community-server -y\nVOLUME ['/mysql']\nRUN sed -i \"/datadir=/s/\\/var\\/lib\\/mysql/\\/mysql/g\" /etc/my.cnf \\\n && sed -i \"/log-error=/s/\\/var\\/log\\/mysqld.log/\\/var\\/log\\/mysql\\/mysqld.log/g\" /etc/my.cnf \\\n && echo \"user=root\" >> /etc/my.cnf\nRUN echo -e \"#!/bin/sh \\n files=\\`ls /mysql\\` \\n if [ -z \\\"$files\\\" ];then \\n if [ ! ${MYSQL_PASSWORD} ]; then \\n MYSQL_PASSWORD='123456' \\n fi \\n /usr/sbin/mysqld --initialize \\n MYSQLOLDPASSWORD=\\`awk -F \\\"localhost: \\\" '/A temporary/{print $2}' /var/log/mysql/mysqld.log\\` \\n /usr/sbin/mysqld & \\n echo -e \\\"[client] \\n password=\\\"${MYSQLOLDPASSWORD}\\\" \\n user=root\\\" > ~/.my.cnf \\n sleep 5s \\n /usr/bin/mysql --connect-expired-password -e \\\"set password=password('$MYSQL_PASSWORD');update mysql.user set host='%' where user='root' \\\n && host='localhost';flush privileges;create database cms DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\\\" \\n echo -e \\\"[client] \\n password=\\\"${MYSQL_PASSWORD}\\\" \\n user=root\\\" > ~/.my.cnf \\n /usr/local/php/bin/php /usr/local/nginx/html/yii migrate/up --interactive=0 frontendUri=//localhost \\n else \\n rm -rf /var/lib/mysql/mysql.sock.locl \\n /usr/sbin/mysqld \\n fi\" > /mysql.sh\nRUN chmod +x /mysql.sh \\\n && ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock \\\n && mkdir /var/log/mysql\n#  安装必要的服务\nRUN yum install vixie-cron crontabs -y \\\n && cd /usr/src \\\n && /usr/local/php/bin/php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && /usr/local/php/bin/php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && rm -rf composer-setup.php \\\n && /usr/local/php/bin/php /usr/local/bin/composer config -g repo.packagist composer https://packagist.phpcomposer.com\n#  部署feehicms\nVOLUME ['/usr/local/nginx/html']\nWORKDIR '/usr/local/nginx'\nRUN rm -rf html \\\n && git clone https://git@github.com/liufee/cms.git html \\\n && cd html \\\n && /usr/local/php/bin/php /usr/local/bin/composer install -vvv\nRUN cd /usr/local/nginx/html \\\n && /usr/local/php/bin/php ./init --env=Development \\\n && sed -i \"6s/'dsn' => 'mysql:host=localhost;dbname=yii2advanced'/'dsn' => 'mysql:host=127.0.0.1;dbname=cms'/g\" common/config/main-local.php \\\n && sed -i \"8s/ 'password' => ''/ 'password' => '123456'/g\" common/config/main-local.php\n#  配置supervisor\nRUN echo [supervisord] > /etc/supervisord.conf \\\n && echo nodaemon=true >> /etc/supervisord.conf \\\n && echo [program:nginx] >> /etc/supervisord.conf \\\n && echo command=/etc/init.d/nginx start >> /etc/supervisord.conf \\\n && echo [program:php-fpm] >> /etc/supervisord.conf \\\n && echo command=/etc/init.d/php-fpm start >> /etc/supervisord.conf \\\n && echo [program:mysqld] >> /etc/supervisord.conf \\\n && echo command=/bin/sh /mysql.sh RUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime >> /etc/supervisord.conf \\\n && echo 'Asia/Shanghai' > /etc/timezonesource \\\n && source /etc/profile\nEXPOSE 80/tcp 3306/tcp\nCMD [\"/usr/bin/supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:latest\nMAINTAINER liufee job@feehi.com\n# php版本,因为php版本间配置文件模板不相同，此处的版本号只能为大于7.0以上版本\nARG PHP_VER=7.1.12\n# nginx版本\nARG NGINX_VER=1.12.2\n# 修改dns地址\nRUN echo nameserver 223.5.5.5 > /etc/resolv.conf\n# 更换yum源\nRUN mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup \\\n && curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n# 安装基础工具\nRUN yum install vim wget git net-tools -y\n# 安装supervisor\nRUN yum install python-setuptools -y \\\n && easy_install supervisor\n# 安装php\nRUN yum install epel-release -y \\\n && yum update -y \\\n && yum -y install pcre pcre-devel zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libjpeg libjpeg-devel libpng libpng-devel curl curl-devel libicu libicu-devel libmcrypt libmcrypt-devel freetype freetype-devel libmcrypt libmcrypt-devel autoconf gcc-c++\nWORKDIR /usr/src\nRUN curl -o php.tar.gz http://php.net/get/php-${PHP_VER}.tar.gz/from/this/mirror -L \\\n && mkdir php \\\n && tar -xzvf php.tar.gz -C ./php --strip-components 1\nWORKDIR php\nRUN ./configure --prefix=/usr/local/php --with-config-file-path=/etc/php --enable-soap --enable-mbstring=all --enable-sockets --enable-fpm --with-gd --with-freetype-dir=/usr/include/freetype2/freetype --with-jpeg-dir=/usr/lib64 --with-zlib --with-iconv --enable-libxml --enable-xml --enable-intl --enable-zip --enable-pcntl --enable-bcmath --enable-maintainer-zts --with-curl --with-mcrypt --with-openssl --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd \\\n && make \\\n && make install \\\n && mkdir /etc/php \\\n && cp /usr/src/php/php.ini-development /etc/php/php.ini \\\n && cp /usr/src/php/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm \\\n && chmod +x /etc/init.d/php-fpm\nWORKDIR /usr/local/php/etc\nRUN cp php-fpm.conf.default php-fpm.conf \\\n && sed -i \"s/;daemonize = yes/daemonize = no/\" php-fpm.conf \\\n && cp ./php-fpm.d/www.conf.default ./php-fpm.d/www.conf \\\n && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/php\\/bin:$PATH\\nexport PATH/\" /etc/profile \\\n && sed -i \"s/export PATH/PATH=\\/etc\\/init.d:$PATH\\nexport PATH/\" /etc/profile\n# 安装nginx\nWORKDIR /usr/src\nRUN curl -o nginx.tar.gz http://nginx.org/download/nginx-${NGINX_VER}.tar.gz \\\n && mkdir nginx \\\n && tar -zxvf nginx.tar.gz -C ./nginx --strip-components 1\nWORKDIR nginx\nRUN ./configure --prefix=/usr/local/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx.lock --user=nginx --group=nginx --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module --with-http_gzip_static_module --http-client-body-temp-path=/tmp/nginx/client/ --http-proxy-temp-path=/tmp/nginx/proxy/ --http-fastcgi-temp-path=/tmp/nginx/fcgi/ --with-pcre --with-http_dav_module \\\n && make \\\n && make install \\\n && useradd nginx \\\n && mkdir -p -m 777 /tmp/nginx \\\n && echo \"#!/bin/sh\" > /etc/init.d/nginx \\\n && echo \"#description: Nginx web server.\" >> /etc/init.d/nginx \\\n && echo -e \"case $1 in \\n restart): \\n /usr/local/nginx/sbin/nginx -s reload \\n ;; \\n stop): \\n /usr/local/nginx/sbin/nginx -s stop \\n ;; \\n *): \\n /usr/local/nginx/sbin/nginx \\n ;; \\n esac \\n\" >> /etc/init.d/nginx \\\n && chmod +x /etc/init.d/nginx \\\n && sed -i \"64a }\" /etc/nginx/nginx.conf \\\n && sed -i \"64a include fastcgi_params;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a fastcgi_index index.php;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a fastcgi_pass 127.0.0.1:9000;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a root html/frontend/web;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a location ~ \\.php$ {\" /etc/nginx/nginx.conf \\\n && sed -i \"3a daemon off;\" /etc/nginx/nginx.conf \\\n && echo \"<?php phpinfo()?>\" > /usr/local/nginx/html/index.php \\\n && sed -i '45s/html;/html\\/frontend\\/web;/g' /etc/nginx/nginx.conf \\\n && sed -i '46s/index index.html index.htm;/index index.php index.html index.htm;/g' /etc/nginx/nginx.conf \\\n && sed -i \"46a try_files $uri $uri/ /index.php?$args;\" /etc/nginx/nginx.conf\n# 安装mysql\nRUN curl -o mysql-server.rpm https://repo.mysql.com//mysql57-community-release-el7-11.noarch.rpm\nRUN rpm -ivh mysql-server.rpm\nRUN /usr/bin/yum install mysql-community-server -y\nVOLUME ['/mysql']\nRUN sed -i \"/datadir=/s/\\/var\\/lib\\/mysql/\\/mysql/g\" /etc/my.cnf \\\n && sed -i \"/log-error=/s/\\/var\\/log\\/mysqld.log/\\/var\\/log\\/mysql\\/mysqld.log/g\" /etc/my.cnf \\\n && echo \"user=root\" >> /etc/my.cnf\nRUN echo -e \"#!/bin/sh \\n files=\\`ls /mysql\\` \\n if [ -z \\\"$files\\\" ];then \\n if [ ! ${MYSQL_PASSWORD} ]; then \\n MYSQL_PASSWORD='123456' \\n fi \\n /usr/sbin/mysqld --initialize \\n MYSQLOLDPASSWORD=\\`awk -F \\\"localhost: \\\" '/A temporary/{print $2}' /var/log/mysql/mysqld.log\\` \\n /usr/sbin/mysqld & \\n echo -e \\\"[client] \\\\n password=\\\"${MYSQLOLDPASSWORD}\\\" \\\\n user=root\\\" > ~/.my.cnf \\n sleep 5s \\n /usr/bin/mysql --connect-expired-password -e \\\"set password=password('$MYSQL_PASSWORD');update mysql.user set host='%' where user='root' \\\n && host='localhost';flush privileges;create database cms DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\\\" \\n echo -e \\\"[client] \\\\n password=\\\"${MYSQL_PASSWORD}\\\" \\\\n user=root\\\" > ~/.my.cnf \\n /usr/local/php/bin/php /usr/local/nginx/html/yii migrate/up --interactive=0 frontendUri=//localhost \\n else \\n rm -rf /var/lib/mysql/mysql.sock.locl \\n /usr/sbin/mysqld \\n fi\" > /mysql.sh\nRUN chmod +x /mysql.sh \\\n && ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock \\\n && mkdir /var/log/mysql\n# 安装必要的服务\nRUN yum install vixie-cron crontabs -y \\\n && cd /usr/src \\\n && /usr/local/php/bin/php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && /usr/local/php/bin/php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && rm -rf composer-setup.php \\\n && /usr/local/php/bin/php /usr/local/bin/composer config -g repo.packagist composer https://packagist.phpcomposer.com\n# 部署feehicms\nVOLUME ['/usr/local/nginx/html']\nWORKDIR '/usr/local/nginx'\nRUN rm -rf html \\\n && git clone https://git@github.com/liufee/cms.git html \\\n && cd html \\\n && /usr/local/php/bin/php /usr/local/bin/composer install -vvv\nRUN cd /usr/local/nginx/html \\\n && /usr/local/php/bin/php ./init --env=Development \\\n && sed -i \"6s/'dsn' => 'mysql:host=localhost;dbname=yii2advanced'/'dsn' => 'mysql:host=127.0.0.1;dbname=cms'/g\" common/config/main-local.php \\\n && sed -i \"8s/ 'password' => ''/ 'password' => '123456'/g\" common/config/main-local.php\n# 配置supervisor\nRUN echo [supervisord] > /etc/supervisord.conf \\\n && echo nodaemon=true >> /etc/supervisord.conf \\\n && echo [program:nginx] >> /etc/supervisord.conf \\\n && echo command=/etc/init.d/nginx start >> /etc/supervisord.conf \\\n && echo [program:php-fpm] >> /etc/supervisord.conf \\\n && echo command=/etc/init.d/php-fpm start >> /etc/supervisord.conf \\\n && echo [program:mysqld] >> /etc/supervisord.conf \\\n && echo command=/bin/sh /mysql.sh RUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime >> /etc/supervisord.conf \\\n && echo 'Asia/Shanghai' > /etc/timezonesource \\\n && source /etc/profile\nEXPOSE 80/tcp 3306/tcp\nCMD [\"/usr/bin/supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"8c7ad3fd0db73796ace8c1cef741a858","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:latest\nMAINTAINER liufee job@feehi.com\n#  php版本,因为php版本间配置文件模板不相同，此处的版本号只能为大于7.0以上版本\nARG PHP_VER=7.1.12\n#  nginx版本\nARG NGINX_VER=1.12.2\n#  修改dns地址\nRUN echo nameserver 223.5.5.5 > /etc/resolv.conf\n#  更换yum源\nRUN mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup \\\n && curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n#  安装基础工具\nRUN yum install vim wget git net-tools -y\n#  安装supervisor\nRUN yum install python-setuptools -y \\\n && easy_install supervisor\n#  安装php\nRUN yum install epel-release -y \\\n && yum update -y \\\n && yum -y install pcre pcre-devel zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libjpeg libjpeg-devel libpng libpng-devel curl curl-devel libicu libicu-devel libmcrypt libmcrypt-devel freetype freetype-devel libmcrypt libmcrypt-devel autoconf gcc-c++\nWORKDIR /usr/src\nRUN curl -o php.tar.gz http://php.net/get/php-${PHP_VER}.tar.gz/from/this/mirror -L \\\n && mkdir php \\\n && tar -xzvf php.tar.gz -C ./php --strip-components 1\nWORKDIR php\nRUN ./configure --prefix=/usr/local/php --with-config-file-path=/etc/php --enable-soap --enable-mbstring=all --enable-sockets --enable-fpm --with-gd --with-freetype-dir=/usr/include/freetype2/freetype --with-jpeg-dir=/usr/lib64 --with-zlib --with-iconv --enable-libxml --enable-xml --enable-intl --enable-zip --enable-pcntl --enable-bcmath --enable-maintainer-zts --with-curl --with-mcrypt --with-openssl --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd \\\n && make \\\n && make install \\\n && mkdir /etc/php \\\n && cp /usr/src/php/php.ini-development /etc/php/php.ini \\\n && cp /usr/src/php/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm \\\n && chmod +x /etc/init.d/php-fpm\nWORKDIR /usr/local/php/etc\nRUN cp php-fpm.conf.default php-fpm.conf \\\n && sed -i \"s/;daemonize = yes/daemonize = no/\" php-fpm.conf \\\n && cp ./php-fpm.d/www.conf.default ./php-fpm.d/www.conf \\\n && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/php\\/bin:$PATH\\nexport PATH/\" /etc/profile \\\n && sed -i \"s/export PATH/PATH=\\/etc\\/init.d:$PATH\\nexport PATH/\" /etc/profile\n#  安装nginx\nWORKDIR /usr/src\nRUN curl -o nginx.tar.gz http://nginx.org/download/nginx-${NGINX_VER}.tar.gz \\\n && mkdir nginx \\\n && tar -zxvf nginx.tar.gz -C ./nginx --strip-components 1\nWORKDIR nginx\nRUN ./configure --prefix=/usr/local/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx.lock --user=nginx --group=nginx --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module --with-http_gzip_static_module --http-client-body-temp-path=/tmp/nginx/client/ --http-proxy-temp-path=/tmp/nginx/proxy/ --http-fastcgi-temp-path=/tmp/nginx/fcgi/ --with-pcre --with-http_dav_module \\\n && make \\\n && make install \\\n && useradd nginx \\\n && mkdir -p -m 777 /tmp/nginx \\\n && echo \"#!/bin/sh\" > /etc/init.d/nginx \\\n && echo \"#description: Nginx web server.\" >> /etc/init.d/nginx \\\n && echo -e \"case $1 in \\n restart): \\n /usr/local/nginx/sbin/nginx -s reload \\n ;; \\n stop): \\n /usr/local/nginx/sbin/nginx -s stop \\n ;; \\n *): \\n /usr/local/nginx/sbin/nginx \\n ;; \\n esac \\n\" >> /etc/init.d/nginx \\\n && chmod +x /etc/init.d/nginx \\\n && sed -i \"64a }\" /etc/nginx/nginx.conf \\\n && sed -i \"64a include fastcgi_params;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a fastcgi_index index.php;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a fastcgi_pass 127.0.0.1:9000;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a root html/frontend/web;\" /etc/nginx/nginx.conf \\\n && sed -i \"64a location ~ \\.php$ {\" /etc/nginx/nginx.conf \\\n && sed -i \"3a daemon off;\" /etc/nginx/nginx.conf \\\n && echo \"<?php phpinfo()?>\" > /usr/local/nginx/html/index.php \\\n && sed -i '45s/html;/html\\/frontend\\/web;/g' /etc/nginx/nginx.conf \\\n && sed -i '46s/index index.html index.htm;/index index.php index.html index.htm;/g' /etc/nginx/nginx.conf \\\n && sed -i \"46a try_files $uri $uri/ /index.php?$args;\" /etc/nginx/nginx.conf\n#  安装mysql\nRUN curl -o mysql-server.rpm https://repo.mysql.com//mysql57-community-release-el7-11.noarch.rpm\nRUN rpm -ivh mysql-server.rpm\nRUN /usr/bin/yum install mysql-community-server -y\nVOLUME ['/mysql']\nRUN sed -i \"/datadir=/s/\\/var\\/lib\\/mysql/\\/mysql/g\" /etc/my.cnf \\\n && sed -i \"/log-error=/s/\\/var\\/log\\/mysqld.log/\\/var\\/log\\/mysql\\/mysqld.log/g\" /etc/my.cnf \\\n && echo \"user=root\" >> /etc/my.cnf\nRUN echo -e \"#!/bin/sh \\n files=\\`ls /mysql\\` \\n if [ -z \\\"$files\\\" ];then \\n if [ ! ${MYSQL_PASSWORD} ]; then \\n MYSQL_PASSWORD='123456' \\n fi \\n /usr/sbin/mysqld --initialize \\n MYSQLOLDPASSWORD=\\`awk -F \\\"localhost: \\\" '/A temporary/{print $2}' /var/log/mysql/mysqld.log\\` \\n /usr/sbin/mysqld & \\n echo -e \\\"[client] \\n password=\\\"${MYSQLOLDPASSWORD}\\\" \\n user=root\\\" > ~/.my.cnf \\n sleep 5s \\n /usr/bin/mysql --connect-expired-password -e \\\"set password=password('$MYSQL_PASSWORD');update mysql.user set host='%' where user='root' \\\n && host='localhost';flush privileges;create database cms DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\\\" \\n echo -e \\\"[client] \\n password=\\\"${MYSQL_PASSWORD}\\\" \\n user=root\\\" > ~/.my.cnf \\n /usr/local/php/bin/php /usr/local/nginx/html/yii migrate/up --interactive=0 frontendUri=//localhost \\n else \\n rm -rf /var/lib/mysql/mysql.sock.locl \\n /usr/sbin/mysqld \\n fi\" > /mysql.sh\nRUN chmod +x /mysql.sh \\\n && ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock \\\n && mkdir /var/log/mysql\n#  安装必要的服务\nRUN yum install vixie-cron crontabs -y \\\n && cd /usr/src \\\n && /usr/local/php/bin/php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && /usr/local/php/bin/php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && rm -rf composer-setup.php \\\n && /usr/local/php/bin/php /usr/local/bin/composer config -g repo.packagist composer https://packagist.phpcomposer.com\n#  部署feehicms\nVOLUME ['/usr/local/nginx/html']\nWORKDIR '/usr/local/nginx'\nRUN rm -rf html \\\n && git clone https://git@github.com/liufee/cms.git html \\\n && cd html \\\n && /usr/local/php/bin/php /usr/local/bin/composer install -vvv\nRUN cd /usr/local/nginx/html \\\n && /usr/local/php/bin/php ./init --env=Development \\\n && sed -i \"6s/'dsn' => 'mysql:host=localhost;dbname=yii2advanced'/'dsn' => 'mysql:host=127.0.0.1;dbname=cms'/g\" common/config/main-local.php \\\n && sed -i \"8s/ 'password' => ''/ 'password' => '123456'/g\" common/config/main-local.php\n#  配置supervisor\nRUN echo [supervisord] > /etc/supervisord.conf \\\n && echo nodaemon=true >> /etc/supervisord.conf \\\n && echo [program:nginx] >> /etc/supervisord.conf \\\n && echo command=/etc/init.d/nginx start >> /etc/supervisord.conf \\\n && echo [program:php-fpm] >> /etc/supervisord.conf \\\n && echo command=/etc/init.d/php-fpm start >> /etc/supervisord.conf \\\n && echo [program:mysqld] >> /etc/supervisord.conf \\\n && echo command=/bin/sh /mysql.sh RUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime >> /etc/supervisord.conf \\\n && echo 'Asia/Shanghai' > /etc/timezonesource \\\n && source /etc/profile\nEXPOSE 80/tcp 3306/tcp\nCMD [\"/usr/bin/supervisord\"]\n","originalDockerfileUglifiedHash":"738649c80880d9d0902edc1ec250ab9e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/998396b15a24fb812a3e523c02fb7071a9faef8b.dockerfile"}