{"seed":133448073,"processedDockerfileHash":"9d7b6051ccc180b7356176b8af4b2dad","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM neurodata/fsl_1604:0.0.1\nMAINTAINER Derek Pisner <dpisner@utexas.edu>\n#  --------Environment Variables-----------------------------------------------#\nENV NDMG_URL=\"https://github.com/neurodata/ndmg.git\"\nENV NDMG_ATLASES=\"https://github.com/neurodata/neuroparc.git\"\nENV AFNI_URL=\"https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/5a0dd9a7b83f69027512a12b\"\nENV LIBXP_URL=\"http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb\"\nENV LIBPNG_URL=\"http://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb\"\n#  --------Initial Configuration-----------------------------------------------#\n#   download/install basic dependencies, and set up python\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends zip unzip vim git curl libglu1 python-setuptools zlib1g-dev git libpng-dev libfreetype6-dev pkg-config g++ vim r-base-core libgsl0-dev build-essential openssl -y )\n#   upgrade python to solve TLS issues\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common -y ) \\\n && apt-get update \\\n && add-apt-repository ppa:jonathonf/python-2.7 \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends python2.7 python2.7-dev -y )\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py\nRUN pip install pip==23.1 --upgrade\n#   Get neurodebian config\nRUN curl -sSL http://neuro.debian.net/lists/stretch.us-tn.full >> /etc/apt/sources.list.d/neurodebian.sources.list \\\n && apt-key add /root/.neurodebian.gpg \\\n && (apt-key adv --refresh-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9 || true ) \\\n && :\nRUN (apt-get update ;apt-get install --no-install-recommends -f )\n#   Configure git-lfs\nRUN (apt-get update ;apt-get install --no-install-recommends apt-transport-https debian-archive-keyring -y )\nRUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends git-lfs -y )\n#  ---------AFNI INSTALL--------------------------------------------------------#\n#   setup of AFNI, which provides robust modifications of many of neuroimaging\n#   algorithms\nRUN apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends ed gsl-bin libglu1-mesa-dev libglib2.0-0 libglw1-mesa fsl-atlases libgomp1 libjpeg62 libxm4 netpbm tcsh xfonts-base xvfb -yq ) \\\n && libs_path=/usr/lib/x86_64-linux-gnu \\\n && if [ -f $libs_path/libgsl.so.19 ] ; then ln $libs_path/libgsl.so.19 $libs_path/libgsl.so.0 ; fi\nRUN mkdir -p /opt/afni \\\n && curl -o afni.tar.gz -sSLO \"$AFNI_URL\" \\\n && tar zxv -C /opt/afni --strip-components=1 -f afni.tar.gz \\\n && rm -rf afni.tar.gz\nENV PATH=\"/opt/afni:$PATH\"\n#  --------ANTS SETUP-----------------------------------------------------------#\nRUN wget -qO- \"https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz\" | tar --strip-components=1 -xz -C /usr/local\nENV ANTS_VERSION=\"2.2.0\"\nWORKDIR /tmp\nRUN git clone git://github.com/stnava/ANTs.git ants \\\n && cd ants \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j8 \\\n && mkdir -p /opt/ants \\\n && mv bin/* /opt/ants \\\n && mv ../Scripts/* /opt/ants \\\n && cd .. \\\n && rm -rf build\nENV ANTSPATH=\"/opt/ants/\" \\\n    PATH=\"/opt/ants:$PATH\"\n#  --------NDMG SETUP-----------------------------------------------------------#\n#   setup of python dependencies for ndmg itself, as well as file dependencies\nRUN pip install setuptools==67.6.1 numpy==1.24.2 networkx==3.1 nibabel==5.1.0 dipy==1.6.0 scipy==1.10.1 python-dateutil==2.8.2 pandas==2.0.0 boto3==1.26.114 awscli==1.27.114 matplotlib==3.7.1 nilearn==0.10.0 sklearn==0.0.post4 pandas==2.0.0 cython==0.29.34 vtk==9.2.6 pyvtk==0.5.18 fury==0.9.0 awscli==1.27.114 requests==2.28.2 scikit-image==0.20.0 ipython==8.12.0 duecredit==0.9.2 --upgrade\nRUN pip install plotly==1.12.9 pybids==0.6.4\nWORKDIR /\n#   Delete buggy line in dipy\nRUN sed -i -e '189d;190d' /usr/local/lib/python2.7/dist-packages/dipy/tracking/eudx.py\nRUN mkdir /data \\\n && chmod -R 777 /data\nRUN mkdir /outputs \\\n && chmod -R 777 /outputs\nRUN git clone -b dev-dmri-fmri $NDMG_URL /ndmg \\\n && cd /ndmg \\\n && python setup.py install\nRUN mkdir /ndmg_atlases\nRUN git lfs clone $NDMG_ATLASES \\\n && mv /neuroparc/atlases /ndmg_atlases \\\n && rm -rf /neuroparc \\\n && rm -rf /ndmg_atlases/label/Human/DS* \\\n && rm -rf /ndmg_atlases/label/Human/pp264* \\\n && rm -rf /ndmg_atlases/label/Human/princeton* \\\n && rm -rf /ndmg_atlases/label/Human/slab* \\\n && rm -rf /ndmg_atlases/label/Human/hemispheric\nRUN chmod -R 777 /ndmg_atlases\nENV MPLCONFIGDIR=\"/tmp/matplotlib\"\nENV PYTHONWARNINGS=\"ignore\"\n#   copy over the entrypoint script\n#  ADD ./.vimrc .vimrc\nRUN ldconfig\nRUN chmod -R 777 /usr/local/bin/ndmg_bids\n#   and add it as an entrypoint\nENTRYPOINT [\"ndmg_bids\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM neurodata/fsl_1604:0.0.1\nMAINTAINER Derek Pisner <dpisner@utexas.edu>\n# --------Environment Variables-----------------------------------------------#\nENV NDMG_URL=\"https://github.com/neurodata/ndmg.git\"\nENV NDMG_ATLASES=\"https://github.com/neurodata/neuroparc.git\"\nENV AFNI_URL=\"https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/5a0dd9a7b83f69027512a12b\"\nENV LIBXP_URL=\"http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb\"\nENV LIBPNG_URL=\"http://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb\"\n# --------Initial Configuration-----------------------------------------------#\n#  download/install basic dependencies, and set up python\nRUN apt-get update \\\n && apt-get install zip unzip vim git curl libglu1 python-setuptools zlib1g-dev git libpng-dev libfreetype6-dev pkg-config g++ vim r-base-core libgsl0-dev build-essential openssl -y\n#  upgrade python to solve TLS issues\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && apt-get update \\\n && add-apt-repository ppa:jonathonf/python-2.7 \\\n && apt-get update \\\n && apt-get install python2.7 python2.7-dev -y\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py\nRUN pip install pip --upgrade\n#  Get neurodebian config\nRUN curl -sSL http://neuro.debian.net/lists/stretch.us-tn.full >> /etc/apt/sources.list.d/neurodebian.sources.list \\\n && apt-key add /root/.neurodebian.gpg \\\n && (apt-key adv --refresh-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9 || true ) \\\n && apt-get update -qq\nRUN apt-get install -f\n#  Configure git-lfs\nRUN apt-get install apt-transport-https debian-archive-keyring -y\nRUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \\\n && apt-get update \\\n && apt-get install git-lfs -y\n# ---------AFNI INSTALL--------------------------------------------------------#\n#  setup of AFNI, which provides robust modifications of many of neuroimaging\n#  algorithms\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ed gsl-bin libglu1-mesa-dev libglib2.0-0 libglw1-mesa fsl-atlases libgomp1 libjpeg62 libxm4 netpbm tcsh xfonts-base xvfb -yq \\\n && libs_path=/usr/lib/x86_64-linux-gnu \\\n && if [ -f $libs_path/libgsl.so.19 ] ; then ln $libs_path/libgsl.so.19 $libs_path/libgsl.so.0 ; fi\nRUN mkdir -p /opt/afni \\\n && curl -o afni.tar.gz -sSLO \"$AFNI_URL\" \\\n && tar zxv -C /opt/afni --strip-components=1 -f afni.tar.gz \\\n && rm -rf afni.tar.gz\nENV PATH=\"/opt/afni:$PATH\"\n# --------ANTS SETUP-----------------------------------------------------------#\nRUN wget -qO- \"https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz\" | tar --strip-components=1 -xz -C /usr/local\nENV ANTS_VERSION=\"2.2.0\"\nWORKDIR /tmp\nRUN git clone git://github.com/stnava/ANTs.git ants \\\n && cd ants \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j8 \\\n && mkdir -p /opt/ants \\\n && mv bin/* /opt/ants \\\n && mv ../Scripts/* /opt/ants \\\n && cd .. \\\n && rm -rf build\nENV ANTSPATH=\"/opt/ants/\" \\\n    PATH=\"/opt/ants:$PATH\"\n# --------NDMG SETUP-----------------------------------------------------------#\n#  setup of python dependencies for ndmg itself, as well as file dependencies\nRUN pip install setuptools numpy networkx nibabel dipy scipy python-dateutil pandas boto3 awscli matplotlib nilearn sklearn pandas cython vtk pyvtk fury awscli requests scikit-image ipython duecredit --upgrade\nRUN pip install plotly==1.12.9 pybids==0.6.4\nWORKDIR /\n#  Delete buggy line in dipy\nRUN sed -i -e '189d;190d' /usr/local/lib/python2.7/dist-packages/dipy/tracking/eudx.py\nRUN mkdir /data \\\n && chmod -R 777 /data\nRUN mkdir /outputs \\\n && chmod -R 777 /outputs\nRUN git clone -b dev-dmri-fmri $NDMG_URL /ndmg \\\n && cd /ndmg \\\n && python setup.py install\nRUN mkdir /ndmg_atlases\nRUN git lfs clone $NDMG_ATLASES \\\n && mv /neuroparc/atlases /ndmg_atlases \\\n && rm -rf /neuroparc \\\n && rm -rf /ndmg_atlases/label/Human/DS* \\\n && rm -rf /ndmg_atlases/label/Human/pp264* \\\n && rm -rf /ndmg_atlases/label/Human/princeton* \\\n && rm -rf /ndmg_atlases/label/Human/slab* \\\n && rm -rf /ndmg_atlases/label/Human/hemispheric\nRUN chmod -R 777 /ndmg_atlases\nENV MPLCONFIGDIR=\"/tmp/matplotlib\"\nENV PYTHONWARNINGS=\"ignore\"\n#  copy over the entrypoint script\n# ADD ./.vimrc .vimrc\nRUN ldconfig\nRUN chmod -R 777 /usr/local/bin/ndmg_bids\n#  and add it as an entrypoint\nENTRYPOINT [\"ndmg_bids\"]\n","injectedSmells":[],"originalDockerfileHash":"b21427568c07bc716aabac9d07f44189","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM neurodata/fsl_1604:0.0.1\nMAINTAINER Derek Pisner <dpisner@utexas.edu>\n#  --------Environment Variables-----------------------------------------------#\nENV NDMG_URL=\"https://github.com/neurodata/ndmg.git\"\nENV NDMG_ATLASES=\"https://github.com/neurodata/neuroparc.git\"\nENV AFNI_URL=\"https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/5a0dd9a7b83f69027512a12b\"\nENV LIBXP_URL=\"http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb\"\nENV LIBPNG_URL=\"http://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb\"\n#  --------Initial Configuration-----------------------------------------------#\n#   download/install basic dependencies, and set up python\nRUN apt-get update \\\n && apt-get install zip unzip vim git curl libglu1 python-setuptools zlib1g-dev git libpng-dev libfreetype6-dev pkg-config g++ vim r-base-core libgsl0-dev build-essential openssl -y\n#   upgrade python to solve TLS issues\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && apt-get update \\\n && add-apt-repository ppa:jonathonf/python-2.7 \\\n && apt-get update \\\n && apt-get install python2.7 python2.7-dev -y\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py\nRUN pip install pip --upgrade\n#   Get neurodebian config\nRUN curl -sSL http://neuro.debian.net/lists/stretch.us-tn.full >> /etc/apt/sources.list.d/neurodebian.sources.list \\\n && apt-key add /root/.neurodebian.gpg \\\n && (apt-key adv --refresh-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9 || true ) \\\n && apt-get update -qq\nRUN apt-get install -f\n#   Configure git-lfs\nRUN apt-get install apt-transport-https debian-archive-keyring -y\nRUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \\\n && apt-get update \\\n && apt-get install git-lfs -y\n#  ---------AFNI INSTALL--------------------------------------------------------#\n#   setup of AFNI, which provides robust modifications of many of neuroimaging\n#   algorithms\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ed gsl-bin libglu1-mesa-dev libglib2.0-0 libglw1-mesa fsl-atlases libgomp1 libjpeg62 libxm4 netpbm tcsh xfonts-base xvfb -yq \\\n && libs_path=/usr/lib/x86_64-linux-gnu \\\n && if [ -f $libs_path/libgsl.so.19 ] ; then ln $libs_path/libgsl.so.19 $libs_path/libgsl.so.0 ; fi\nRUN mkdir -p /opt/afni \\\n && curl -o afni.tar.gz -sSLO \"$AFNI_URL\" \\\n && tar zxv -C /opt/afni --strip-components=1 -f afni.tar.gz \\\n && rm -rf afni.tar.gz\nENV PATH=\"/opt/afni:$PATH\"\n#  --------ANTS SETUP-----------------------------------------------------------#\nRUN wget -qO- \"https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz\" | tar --strip-components=1 -xz -C /usr/local\nENV ANTS_VERSION=\"2.2.0\"\nWORKDIR /tmp\nRUN git clone git://github.com/stnava/ANTs.git ants \\\n && cd ants \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j8 \\\n && mkdir -p /opt/ants \\\n && mv bin/* /opt/ants \\\n && mv ../Scripts/* /opt/ants \\\n && cd .. \\\n && rm -rf build\nENV ANTSPATH=\"/opt/ants/\" \\\n    PATH=\"/opt/ants:$PATH\"\n#  --------NDMG SETUP-----------------------------------------------------------#\n#   setup of python dependencies for ndmg itself, as well as file dependencies\nRUN pip install setuptools numpy networkx nibabel dipy scipy python-dateutil pandas boto3 awscli matplotlib nilearn sklearn pandas cython vtk pyvtk fury awscli requests scikit-image ipython duecredit --upgrade\nRUN pip install plotly==1.12.9 pybids==0.6.4\nWORKDIR /\n#   Delete buggy line in dipy\nRUN sed -i -e '189d;190d' /usr/local/lib/python2.7/dist-packages/dipy/tracking/eudx.py\nRUN mkdir /data \\\n && chmod -R 777 /data\nRUN mkdir /outputs \\\n && chmod -R 777 /outputs\nRUN git clone -b dev-dmri-fmri $NDMG_URL /ndmg \\\n && cd /ndmg \\\n && python setup.py install\nRUN mkdir /ndmg_atlases\nRUN git lfs clone $NDMG_ATLASES \\\n && mv /neuroparc/atlases /ndmg_atlases \\\n && rm -rf /neuroparc \\\n && rm -rf /ndmg_atlases/label/Human/DS* \\\n && rm -rf /ndmg_atlases/label/Human/pp264* \\\n && rm -rf /ndmg_atlases/label/Human/princeton* \\\n && rm -rf /ndmg_atlases/label/Human/slab* \\\n && rm -rf /ndmg_atlases/label/Human/hemispheric\nRUN chmod -R 777 /ndmg_atlases\nENV MPLCONFIGDIR=\"/tmp/matplotlib\"\nENV PYTHONWARNINGS=\"ignore\"\n#   copy over the entrypoint script\n#  ADD ./.vimrc .vimrc\nRUN ldconfig\nRUN chmod -R 777 /usr/local/bin/ndmg_bids\n#   and add it as an entrypoint\nENTRYPOINT [\"ndmg_bids\"]\n","originalDockerfileUglifiedHash":"8a5103004187ad49cfeede7a0ea27c97","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/20e179c9438098bfeda959571e6115bc66627aa7.dockerfile"}