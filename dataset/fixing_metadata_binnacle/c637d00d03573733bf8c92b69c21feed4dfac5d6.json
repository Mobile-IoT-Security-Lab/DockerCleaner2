{"seed":2870332479,"processedDockerfileHash":"34027ab058f85928b053333f15cf6778","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  +++++++++++++++++++++++++++++++++++++++\n#   Dockerfile for webdevops/php-official:7.1\n#      -- automatically generated  --\n#  +++++++++++++++++++++++++++++++++++++++\n#   Staged baselayout builder\nFROM webdevops/toolbox AS baselayout\nRUN mkdir -p /baselayout/sbin /baselayout/usr/local/bin \\\n && wget -O /tmp/baselayout-install.sh https://raw.githubusercontent.com/webdevops/Docker-Image-Baselayout/master/install.sh \\\n && sh /tmp/baselayout-install.sh /baselayout \\\n && wget -O \"/baselayout/usr/local/bin/go-replace\" \"https://github.com/webdevops/goreplace/releases/download/1.1.2/gr-64-linux\" \\\n && chmod +x \"/baselayout/usr/local/bin/go-replace\" \\\n && \"/baselayout/usr/local/bin/go-replace\" --version \\\n && wget -O \"/baselayout/sbin/gosu\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64\" \\\n && wget -O \"/tmp/gosu.asc\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /tmp/gosu.asc \"/baselayout/sbin/gosu\" \\\n && rm -rf \"$GNUPGHOME\" /tmp/gosu.asc \\\n && chmod +x \"/baselayout/sbin/gosu\" \\\n && \"/baselayout/sbin/gosu\" nobody true\nFROM php:7.1-fpm\nLABEL maintainer=\"info@webdevops.io\" \\\n      vendor=\"WebDevOps.io\" \\\n      io.webdevops.layout=\"8\" \\\n      io.webdevops.version=\"1.5.0\"\nENV TERM=\"xterm\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\nENV DOCKER_CONF_HOME=\"/opt/docker/\" \\\n    LOG_STDOUT=\"\" \\\n    LOG_STDERR=\"\"\nENV APPLICATION_USER=\"application\" \\\n    APPLICATION_GROUP=\"application\" \\\n    APPLICATION_PATH=\"/app\" \\\n    APPLICATION_UID=\"1000\" \\\n    APPLICATION_GID=\"1000\"\n#   Baselayout copy (from staged image)\nCOPY --from=baselayout /baselayout /\nCOPY conf/ /opt/docker/\nRUN set -x \\\n && apt-update \\\n && /usr/local/bin/generate-dockerimage-info \\\n && sed -ri \"s/(deb.*\\/debian $( docker-image-info dist-codename ;) main)/\\1 contrib non-free /\" -- /etc/apt/sources.list \\\n && apt-update \\\n && /usr/local/bin/apt-upgrade \\\n && apt-install apt-transport-https ca-certificates locales gnupg\nRUN set -x \\\n && chmod +x /opt/docker/bin/* \\\n && apt-install supervisor wget curl net-tools tzdata \\\n && chmod +s /sbin/gosu \\\n && docker-run-bootstrap \\\n && docker-image-cleanup\nRUN set -x \\\n && apt-install zip unzip bzip2 moreutils dnsutils openssh-client rsync git \\\n && /usr/local/bin/generate-locales \\\n && docker-run-bootstrap \\\n && docker-image-cleanup\nRUN set -x \\\n && apt-install imagemagick graphicsmagick ghostscript libldap-2.4-2 libxslt1.1 zlib1g libpng16-16 libmcrypt4 libjpeg62-turbo-dev libfreetype6-dev libbz2-dev libicu-dev libldap2-dev libldb-dev libmcrypt-dev libxml2-dev libxslt1-dev zlib1g-dev libpng-dev \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install bcmath bz2 calendar exif intl gettext mysqli mcrypt hash pcntl pdo_mysql soap sockets tokenizer sysvmsg sysvsem sysvshm shmop xsl zip gd gettext opcache \\\n && apt-get purge -y -f --force-yes libbz2-dev libicu-dev libldap2-dev libldb-dev libmcrypt-dev libxml2-dev libxslt1-dev zlib1g-dev libpng-dev \\\n && pecl install apcu \\\n && pecl install redis \\\n && echo extension=apcu.so > /usr/local/etc/php/conf.d/apcu.ini \\\n && echo extension=redis.so > /usr/local/etc/php/conf.d/redis.ini \\\n && rm -f /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \\\n && docker-service enable syslog \\\n && docker-service enable cron \\\n && docker-run-bootstrap \\\n && docker-image-cleanup\nWORKDIR /\nEXPOSE 9000/tcp\nENTRYPOINT [\"/entrypoint\"]\nCMD [\"supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# +++++++++++++++++++++++++++++++++++++++\n#  Dockerfile for webdevops/php-official:7.1\n#     -- automatically generated  --\n# +++++++++++++++++++++++++++++++++++++++\n#  Staged baselayout builder\nFROM webdevops/toolbox AS baselayout\nRUN mkdir -p /baselayout/sbin /baselayout/usr/local/bin \\\n && wget -O /tmp/baselayout-install.sh https://raw.githubusercontent.com/webdevops/Docker-Image-Baselayout/master/install.sh \\\n && sh /tmp/baselayout-install.sh /baselayout \\\n && wget -O \"/baselayout/usr/local/bin/go-replace\" \"https://github.com/webdevops/goreplace/releases/download/1.1.2/gr-64-linux\" \\\n && chmod +x \"/baselayout/usr/local/bin/go-replace\" \\\n && \"/baselayout/usr/local/bin/go-replace\" --version \\\n && wget -O \"/baselayout/sbin/gosu\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64\" \\\n && wget -O \"/tmp/gosu.asc\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /tmp/gosu.asc \"/baselayout/sbin/gosu\" \\\n && rm -rf \"$GNUPGHOME\" /tmp/gosu.asc \\\n && chmod +x \"/baselayout/sbin/gosu\" \\\n && \"/baselayout/sbin/gosu\" nobody true\nFROM php:7.1-fpm\nLABEL maintainer=\"info@webdevops.io\" \\\n      vendor=\"WebDevOps.io\" \\\n      io.webdevops.layout=\"8\" \\\n      io.webdevops.version=\"1.5.0\"\nENV TERM=\"xterm\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\nENV DOCKER_CONF_HOME=\"/opt/docker/\" \\\n    LOG_STDOUT=\"\" \\\n    LOG_STDERR=\"\"\nENV APPLICATION_USER=\"application\" \\\n    APPLICATION_GROUP=\"application\" \\\n    APPLICATION_PATH=\"/app\" \\\n    APPLICATION_UID=\"1000\" \\\n    APPLICATION_GID=\"1000\"\n#  Baselayout copy (from staged image)\nCOPY --from=baselayout /baselayout /\nCOPY conf/ /opt/docker/\nRUN set -x \\\n && apt-update \\\n && /usr/local/bin/generate-dockerimage-info \\\n && sed -ri \"s/(deb.*\\/debian $( docker-image-info dist-codename ;) main)/\\1 contrib non-free /\" -- /etc/apt/sources.list \\\n && apt-update \\\n && /usr/local/bin/apt-upgrade \\\n && apt-install apt-transport-https ca-certificates locales gnupg\nRUN set -x \\\n && chmod +x /opt/docker/bin/* \\\n && apt-install supervisor wget curl net-tools tzdata \\\n && chmod +s /sbin/gosu \\\n && docker-run-bootstrap \\\n && docker-image-cleanup\nRUN set -x \\\n && apt-install zip unzip bzip2 moreutils dnsutils openssh-client rsync git \\\n && /usr/local/bin/generate-locales \\\n && docker-run-bootstrap \\\n && docker-image-cleanup\nRUN set -x \\\n && apt-install imagemagick graphicsmagick ghostscript libldap-2.4-2 libxslt1.1 zlib1g libpng16-16 libmcrypt4 libjpeg62-turbo-dev libfreetype6-dev libbz2-dev libicu-dev libldap2-dev libldb-dev libmcrypt-dev libxml2-dev libxslt1-dev zlib1g-dev libpng-dev \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install bcmath bz2 calendar exif intl gettext mysqli mcrypt hash pcntl pdo_mysql soap sockets tokenizer sysvmsg sysvsem sysvshm shmop xsl zip gd gettext opcache \\\n && apt-get purge -y -f --force-yes libbz2-dev libicu-dev libldap2-dev libldb-dev libmcrypt-dev libxml2-dev libxslt1-dev zlib1g-dev libpng-dev \\\n && pecl install apcu \\\n && pecl install redis \\\n && echo extension=apcu.so > /usr/local/etc/php/conf.d/apcu.ini \\\n && echo extension=redis.so > /usr/local/etc/php/conf.d/redis.ini \\\n && rm -f /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \\\n && docker-service enable syslog \\\n && docker-service enable cron \\\n && docker-run-bootstrap \\\n && docker-image-cleanup\nWORKDIR /\nEXPOSE 9000/tcp\nENTRYPOINT [\"/entrypoint\"]\nCMD [\"supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"508a392b0b72898bc3cbaeabab15cc3f","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  +++++++++++++++++++++++++++++++++++++++\n#   Dockerfile for webdevops/php-official:7.1\n#      -- automatically generated  --\n#  +++++++++++++++++++++++++++++++++++++++\n#   Staged baselayout builder\nFROM webdevops/toolbox AS baselayout\nRUN mkdir -p /baselayout/sbin /baselayout/usr/local/bin \\\n && wget -O /tmp/baselayout-install.sh https://raw.githubusercontent.com/webdevops/Docker-Image-Baselayout/master/install.sh \\\n && sh /tmp/baselayout-install.sh /baselayout \\\n && wget -O \"/baselayout/usr/local/bin/go-replace\" \"https://github.com/webdevops/goreplace/releases/download/1.1.2/gr-64-linux\" \\\n && chmod +x \"/baselayout/usr/local/bin/go-replace\" \\\n && \"/baselayout/usr/local/bin/go-replace\" --version \\\n && wget -O \"/baselayout/sbin/gosu\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64\" \\\n && wget -O \"/tmp/gosu.asc\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /tmp/gosu.asc \"/baselayout/sbin/gosu\" \\\n && rm -rf \"$GNUPGHOME\" /tmp/gosu.asc \\\n && chmod +x \"/baselayout/sbin/gosu\" \\\n && \"/baselayout/sbin/gosu\" nobody true\nFROM php:7.1-fpm\nLABEL maintainer=\"info@webdevops.io\" \\\n      vendor=\"WebDevOps.io\" \\\n      io.webdevops.layout=\"8\" \\\n      io.webdevops.version=\"1.5.0\"\nENV TERM=\"xterm\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\nENV DOCKER_CONF_HOME=\"/opt/docker/\" \\\n    LOG_STDOUT=\"\" \\\n    LOG_STDERR=\"\"\nENV APPLICATION_USER=\"application\" \\\n    APPLICATION_GROUP=\"application\" \\\n    APPLICATION_PATH=\"/app\" \\\n    APPLICATION_UID=\"1000\" \\\n    APPLICATION_GID=\"1000\"\n#   Baselayout copy (from staged image)\nCOPY --from=baselayout /baselayout /\nCOPY conf/ /opt/docker/\nRUN set -x \\\n && apt-update \\\n && /usr/local/bin/generate-dockerimage-info \\\n && sed -ri \"s/(deb.*\\/debian $( docker-image-info dist-codename ;) main)/\\1 contrib non-free /\" -- /etc/apt/sources.list \\\n && apt-update \\\n && /usr/local/bin/apt-upgrade \\\n && apt-install apt-transport-https ca-certificates locales gnupg\nRUN set -x \\\n && chmod +x /opt/docker/bin/* \\\n && apt-install supervisor wget curl net-tools tzdata \\\n && chmod +s /sbin/gosu \\\n && docker-run-bootstrap \\\n && docker-image-cleanup\nRUN set -x \\\n && apt-install zip unzip bzip2 moreutils dnsutils openssh-client rsync git \\\n && /usr/local/bin/generate-locales \\\n && docker-run-bootstrap \\\n && docker-image-cleanup\nRUN set -x \\\n && apt-install imagemagick graphicsmagick ghostscript libldap-2.4-2 libxslt1.1 zlib1g libpng16-16 libmcrypt4 libjpeg62-turbo-dev libfreetype6-dev libbz2-dev libicu-dev libldap2-dev libldb-dev libmcrypt-dev libxml2-dev libxslt1-dev zlib1g-dev libpng-dev \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install bcmath bz2 calendar exif intl gettext mysqli mcrypt hash pcntl pdo_mysql soap sockets tokenizer sysvmsg sysvsem sysvshm shmop xsl zip gd gettext opcache \\\n && apt-get purge -y -f --force-yes libbz2-dev libicu-dev libldap2-dev libldb-dev libmcrypt-dev libxml2-dev libxslt1-dev zlib1g-dev libpng-dev \\\n && pecl install apcu \\\n && pecl install redis \\\n && echo extension=apcu.so > /usr/local/etc/php/conf.d/apcu.ini \\\n && echo extension=redis.so > /usr/local/etc/php/conf.d/redis.ini \\\n && rm -f /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \\\n && docker-service enable syslog \\\n && docker-service enable cron \\\n && docker-run-bootstrap \\\n && docker-image-cleanup\nWORKDIR /\nEXPOSE 9000/tcp\nENTRYPOINT [\"/entrypoint\"]\nCMD [\"supervisord\"]\n","originalDockerfileUglifiedHash":"6f31e45f2f7277688aaa09f09962643b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c637d00d03573733bf8c92b69c21feed4dfac5d6.dockerfile"}