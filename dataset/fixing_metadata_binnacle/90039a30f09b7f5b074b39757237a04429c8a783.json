{"seed":2828364607,"processedDockerfileHash":"56144ae1a5feb478482025f0ceeb21b0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"#   Licensed CC-0-1.0 in the Catalog\nFROM archlinux/base\nRUN pacman -Syuq --noconfirm git base-devel sudo\n#   Skip the \"great powers... great responsibilities\" pedantry\nRUN echo \"Defaults lecture = never\" > /etc/sudoers.d/privacy \\\n && echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/wheel\nENV ARCH_FRONTEND=\"noninteractive\"\n#   Circle CI dependences\nRUN pacman -S --noconfirm openssh mercurial xorg-server-xvfb ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget\n#   timezone\nRUN ln -sf /usr/share/zoneinfo/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   Install Docker & CI Goodies\n#   Docker.com returns the URL of the latest binary when you hit a directory listing\n#   We curl this URL and `grep` the version out.\n#   The output looks like this:\n#  >    # To install, run the following commands as root:\n#  >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#  >\n#  >    # Then start docker in daemon mode:\n#  >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\n#   docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n && chmod +x /usr/bin/docker-compose \\\n && docker-compose version\n#   install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n && dockerize --version\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 -G wheel --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"ARCH_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#   Prettiness\nRUN pacman -S --noconfirm archey3\n#   Vulkano dependencies\nRUN pacman -Qkk --noconfirm gcc glibc\nRUN pacman -S --noconfirm gcc7 cmake python\n#   Shaderc dependencies\nRUN pacman -S --noconfirm shaderc gcc-libs asciidoctor cmake make glibc glslang spirv-tools\n#   Rust dependencies\nRUN pacman -S --noconfirm unzip zlib binutils llvm gcc\n#   Clear the package cache for teeny tiny image\nRUN pacman -Syu --noconfirm\nRUN pacman -Scc --noconfirm\nUSER circleci\nCMD [\"/bin/sh\"]\n#   Now commands run as user `circleci`\n#   Switching user can confuse Docker's idea of $HOME, so we set it explicitly\nENV HOME=\"/home/circleci\"\n#   Prettiness\nRUN echo \"archey3\" >> ~/.bashrc\n#   Installing rustfmt & toolchain to home directories\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\"\nENV PATH=\"$PATH:/home/circleci/.cargo/bin/\"\nRUN echo \"export PATH=$PATH:/home/circleci/.cargo/bin/\" >> ~/.bashrc\nRUN rustup toolchain install stable\nRUN rustup component add rustfmt\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed CC-0-1.0 in the Catalog\nFROM archlinux/base\nRUN pacman -Syuq --noconfirm git base-devel sudo\n#  Skip the \"great powers... great responsibilities\" pedantry\nRUN echo \"Defaults lecture = never\" > /etc/sudoers.d/privacy \\\n && echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/wheel\nENV ARCH_FRONTEND=\"noninteractive\"\n#  Circle CI dependences\nRUN pacman -S --noconfirm openssh mercurial xorg-server-xvfb ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget\n#  timezone\nRUN ln -sf /usr/share/zoneinfo/UTC /etc/localtime\n#  Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#  Install Docker & CI Goodies\n#  Docker.com returns the URL of the latest binary when you hit a directory listing\n#  We curl this URL and `grep` the version out.\n#  The output looks like this:\n# >    # To install, run the following commands as root:\n# >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n# >\n# >    # Then start docker in daemon mode:\n# >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\n#  docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n && chmod +x /usr/bin/docker-compose \\\n && docker-compose version\n#  install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n && dockerize --version\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 -G wheel --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"ARCH_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#  Prettiness\nRUN pacman -S --noconfirm archey3\n#  Vulkano dependencies\nRUN pacman -Qkk --noconfirm gcc glibc\nRUN pacman -S --noconfirm gcc7 cmake python\n#  Shaderc dependencies\nRUN pacman -S --noconfirm shaderc gcc-libs asciidoctor cmake make glibc glslang spirv-tools\n#  Rust dependencies\nRUN pacman -S --noconfirm unzip zlib binutils llvm gcc\n#  Clear the package cache for teeny tiny image\nRUN pacman -Syu --noconfirm\nRUN pacman -Scc --noconfirm\nUSER circleci\nCMD [\"/bin/sh\"]\n#  Now commands run as user `circleci`\n#  Switching user can confuse Docker's idea of $HOME, so we set it explicitly\nENV HOME=\"/home/circleci\"\n#  Prettiness\nRUN echo \"archey3\" >> ~/.bashrc\n#  Installing rustfmt & toolchain to home directories\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\"\nENV PATH=\"$PATH:/home/circleci/.cargo/bin/\"\nRUN echo \"export PATH=$PATH:/home/circleci/.cargo/bin/\" >> ~/.bashrc\nRUN rustup toolchain install stable\nRUN rustup component add rustfmt\n","injectedSmells":[],"originalDockerfileHash":"713eb45f4ba5838cce04c95aa8956b3f","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed CC-0-1.0 in the Catalog\nFROM archlinux/base\nRUN pacman -Syuq --noconfirm git base-devel sudo\n#   Skip the \"great powers... great responsibilities\" pedantry\nRUN echo \"Defaults lecture = never\" > /etc/sudoers.d/privacy \\\n && echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/wheel\nENV ARCH_FRONTEND=\"noninteractive\"\n#   Circle CI dependences\nRUN pacman -S --noconfirm openssh mercurial xorg-server-xvfb ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget\n#   timezone\nRUN ln -sf /usr/share/zoneinfo/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   Install Docker & CI Goodies\n#   Docker.com returns the URL of the latest binary when you hit a directory listing\n#   We curl this URL and `grep` the version out.\n#   The output looks like this:\n#  >    # To install, run the following commands as root:\n#  >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#  >\n#  >    # Then start docker in daemon mode:\n#  >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\n#   docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n && chmod +x /usr/bin/docker-compose \\\n && docker-compose version\n#   install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n && dockerize --version\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 -G wheel --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"ARCH_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#   Prettiness\nRUN pacman -S --noconfirm archey3\n#   Vulkano dependencies\nRUN pacman -Qkk --noconfirm gcc glibc\nRUN pacman -S --noconfirm gcc7 cmake python\n#   Shaderc dependencies\nRUN pacman -S --noconfirm shaderc gcc-libs asciidoctor cmake make glibc glslang spirv-tools\n#   Rust dependencies\nRUN pacman -S --noconfirm unzip zlib binutils llvm gcc\n#   Clear the package cache for teeny tiny image\nRUN pacman -Syu --noconfirm\nRUN pacman -Scc --noconfirm\nUSER circleci\nCMD [\"/bin/sh\"]\n#   Now commands run as user `circleci`\n#   Switching user can confuse Docker's idea of $HOME, so we set it explicitly\nENV HOME=\"/home/circleci\"\n#   Prettiness\nRUN echo \"archey3\" >> ~/.bashrc\n#   Installing rustfmt & toolchain to home directories\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\"\nENV PATH=\"$PATH:/home/circleci/.cargo/bin/\"\nRUN echo \"export PATH=$PATH:/home/circleci/.cargo/bin/\" >> ~/.bashrc\nRUN rustup toolchain install stable\nRUN rustup component add rustfmt\n","originalDockerfileUglifiedHash":"af3ce516bf13bb1179eaf4786bb33103","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/90039a30f09b7f5b074b39757237a04429c8a783.dockerfile"}