{"seed":239276384,"processedDockerfileHash":"a443c9e13df805b5c637bf652f9833a2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   SPDX-License-Identifier: GPL-3.0-or-later\n#   author  : paulfantom\n#   Cross-arch building is achieved by specifying ARCH as a build parameter with `--build-arg` option.\n#   It is automated in `build.sh` script\nARG ARCH=amd64-v3.8\nFROM multiarch/alpine:${ARCH} AS builder\nARG OUTPUT=\"/dev/stdout\"\n#   Install prerequisites\nRUN apk add alpine-sdk autoconf automake bash build-base curl jq libmnl-dev libuuid lm_sensors netcat-openbsd nodejs pkgconfig py-mysqldb py-psycopg2 py-yaml python util-linux-dev zlib-dev --no-cache\n#   Copy source\nCOPY . /opt/netdata.git\nWORKDIR /opt/netdata.git\n#   Install from source\nRUN chmod +x netdata-installer.sh \\\n && ./netdata-installer.sh --dont-wait --dont-start-it &> ${OUTPUT}\n#   files to one directory\nRUN mkdir -p /app/usr/sbin/ /app/usr/share /app/usr/libexec /app/usr/lib /app/var/cache /app/var/lib /app/etc \\\n && mv /usr/share/netdata /app/usr/share/ \\\n && mv /usr/libexec/netdata /app/usr/libexec/ \\\n && mv /usr/lib/netdata /app/usr/lib/ \\\n && mv /var/cache/netdata /app/var/cache/ \\\n && mv /var/lib/netdata /app/var/lib/ \\\n && mv /etc/netdata /app/etc/ \\\n && mv /usr/sbin/netdata /app/usr/sbin/ \\\n && mv packaging/docker/run.sh /app/usr/sbin/ \\\n && chmod +x /app/usr/sbin/run.sh\n#  ####################################################################\nARG ARCH\nFROM multiarch/alpine:${ARCH}\n#   Install some prerequisites\nRUN apk add curl fping jq libuuid lm_sensors netcat-openbsd nodejs py-mysqldb py-psycopg2 py-yaml python --no-cache\n#   Conditional subscribiton to Polyverse's Polymorphic Linux repositories\nRUN if [ \"$( uname -m ;)\" == \"x86_64\" ] ; then curl https://sh.polyverse.io | sh -s install gcxce5byVQbtRz0iwfGkozZwy support+netdata@polyverse.io ;apk update ;apk upgrade --available --no-cache ;sed -in 's/^#//g' /etc/apk/repositories ; fi\n#   Copy files over\nCOPY --from=builder /app /\n#   Configure system\nARG NETDATA_UID=201\nARG NETDATA_GID=201\nRUN mv /usr/sbin/fping /usr/local/bin/fping \\\n && chmod 4755 /usr/local/bin/fping \\\n && mkdir -p /var/log/netdata \\\n && addgroup -g ${NETDATA_GID} -S netdata \\\n && adduser -S -H -s /usr/sbin/nologin -u ${NETDATA_GID} -h /etc/netdata -G netdata netdata \\\n && chown -R root:netdata /etc/netdata \\\n && chown -R netdata:netdata /var/cache/netdata /var/lib/netdata /usr/share/netdata \\\n && chown -R root:netdata /usr/lib/netdata \\\n && chown -R root:netdata /usr/libexec/netdata/plugins.d/apps.plugin /usr/libexec/netdata/plugins.d/cgroup-network \\\n && chmod 4750 /usr/libexec/netdata/plugins.d/cgroup-network /usr/libexec/netdata/plugins.d/apps.plugin \\\n && chmod 0750 /var/lib/netdata /var/cache/netdata \\\n && ln -sf /dev/stdout /var/log/netdata/access.log \\\n && ln -sf /dev/stdout /var/log/netdata/debug.log \\\n && ln -sf /dev/stderr /var/log/netdata/error.log\nENV NETDATA_PORT=\"19999\"\nEXPOSE $NETDATA_PORT\nENTRYPOINT [\"/usr/sbin/run.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  SPDX-License-Identifier: GPL-3.0-or-later\n#  author  : paulfantom\n#  Cross-arch building is achieved by specifying ARCH as a build parameter with `--build-arg` option.\n#  It is automated in `build.sh` script\nARG ARCH=amd64-v3.8\nFROM multiarch/alpine:${ARCH} AS builder\nARG OUTPUT=\"/dev/stdout\"\n#  Install prerequisites\nRUN apk --no-cache add alpine-sdk autoconf automake bash build-base curl jq libmnl-dev libuuid lm_sensors netcat-openbsd nodejs pkgconfig py-mysqldb py-psycopg2 py-yaml python util-linux-dev zlib-dev\n#  Copy source\nCOPY . /opt/netdata.git\nWORKDIR /opt/netdata.git\n#  Install from source\nRUN chmod +x netdata-installer.sh \\\n && ./netdata-installer.sh --dont-wait --dont-start-it &> ${OUTPUT}\n#  files to one directory\nRUN mkdir -p /app/usr/sbin/ /app/usr/share /app/usr/libexec /app/usr/lib /app/var/cache /app/var/lib /app/etc \\\n && mv /usr/share/netdata /app/usr/share/ \\\n && mv /usr/libexec/netdata /app/usr/libexec/ \\\n && mv /usr/lib/netdata /app/usr/lib/ \\\n && mv /var/cache/netdata /app/var/cache/ \\\n && mv /var/lib/netdata /app/var/lib/ \\\n && mv /etc/netdata /app/etc/ \\\n && mv /usr/sbin/netdata /app/usr/sbin/ \\\n && mv packaging/docker/run.sh /app/usr/sbin/ \\\n && chmod +x /app/usr/sbin/run.sh\n# ####################################################################\nARG ARCH\nFROM multiarch/alpine:${ARCH}\n#  Install some prerequisites\nRUN apk --no-cache add curl fping jq libuuid lm_sensors netcat-openbsd nodejs py-mysqldb py-psycopg2 py-yaml python\n#  Conditional subscribiton to Polyverse's Polymorphic Linux repositories\nRUN if [ \"$( uname -m ;)\" == \"x86_64\" ] ; then curl https://sh.polyverse.io | sh -s install gcxce5byVQbtRz0iwfGkozZwy support+netdata@polyverse.io ;apk update ;apk upgrade --available --no-cache ;sed -in 's/^#//g' /etc/apk/repositories ; fi\n#  Copy files over\nCOPY --from=builder /app /\n#  Configure system\nARG NETDATA_UID=201\nARG NETDATA_GID=201\nRUN mv /usr/sbin/fping /usr/local/bin/fping \\\n && chmod 4755 /usr/local/bin/fping \\\n && mkdir -p /var/log/netdata \\\n && addgroup -g ${NETDATA_GID} -S netdata \\\n && adduser -S -H -s /usr/sbin/nologin -u ${NETDATA_GID} -h /etc/netdata -G netdata netdata \\\n && chown -R root:netdata /etc/netdata \\\n && chown -R netdata:netdata /var/cache/netdata /var/lib/netdata /usr/share/netdata \\\n && chown -R root:netdata /usr/lib/netdata \\\n && chown -R root:netdata /usr/libexec/netdata/plugins.d/apps.plugin /usr/libexec/netdata/plugins.d/cgroup-network \\\n && chmod 4750 /usr/libexec/netdata/plugins.d/cgroup-network /usr/libexec/netdata/plugins.d/apps.plugin \\\n && chmod 0750 /var/lib/netdata /var/cache/netdata \\\n && ln -sf /dev/stdout /var/log/netdata/access.log \\\n && ln -sf /dev/stdout /var/log/netdata/debug.log \\\n && ln -sf /dev/stderr /var/log/netdata/error.log\nENV NETDATA_PORT=\"19999\"\nEXPOSE $NETDATA_PORT\nENTRYPOINT [\"/usr/sbin/run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"f9292b6e643e0e717abf8fbf0e431160","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   SPDX-License-Identifier: GPL-3.0-or-later\n#   author  : paulfantom\n#   Cross-arch building is achieved by specifying ARCH as a build parameter with `--build-arg` option.\n#   It is automated in `build.sh` script\nARG ARCH=amd64-v3.8\nFROM multiarch/alpine:${ARCH} AS builder\nARG OUTPUT=\"/dev/stdout\"\n#   Install prerequisites\nRUN apk --no-cache add alpine-sdk autoconf automake bash build-base curl jq libmnl-dev libuuid lm_sensors netcat-openbsd nodejs pkgconfig py-mysqldb py-psycopg2 py-yaml python util-linux-dev zlib-dev\n#   Copy source\nCOPY . /opt/netdata.git\nWORKDIR /opt/netdata.git\n#   Install from source\nRUN chmod +x netdata-installer.sh \\\n && ./netdata-installer.sh --dont-wait --dont-start-it &> ${OUTPUT}\n#   files to one directory\nRUN mkdir -p /app/usr/sbin/ /app/usr/share /app/usr/libexec /app/usr/lib /app/var/cache /app/var/lib /app/etc \\\n && mv /usr/share/netdata /app/usr/share/ \\\n && mv /usr/libexec/netdata /app/usr/libexec/ \\\n && mv /usr/lib/netdata /app/usr/lib/ \\\n && mv /var/cache/netdata /app/var/cache/ \\\n && mv /var/lib/netdata /app/var/lib/ \\\n && mv /etc/netdata /app/etc/ \\\n && mv /usr/sbin/netdata /app/usr/sbin/ \\\n && mv packaging/docker/run.sh /app/usr/sbin/ \\\n && chmod +x /app/usr/sbin/run.sh\n#  ####################################################################\nARG ARCH\nFROM multiarch/alpine:${ARCH}\n#   Install some prerequisites\nRUN apk --no-cache add curl fping jq libuuid lm_sensors netcat-openbsd nodejs py-mysqldb py-psycopg2 py-yaml python\n#   Conditional subscribiton to Polyverse's Polymorphic Linux repositories\nRUN if [ \"$( uname -m ;)\" == \"x86_64\" ] ; then curl https://sh.polyverse.io | sh -s install gcxce5byVQbtRz0iwfGkozZwy support+netdata@polyverse.io ;apk update ;apk upgrade --available --no-cache ;sed -in 's/^#//g' /etc/apk/repositories ; fi\n#   Copy files over\nCOPY --from=builder /app /\n#   Configure system\nARG NETDATA_UID=201\nARG NETDATA_GID=201\nRUN mv /usr/sbin/fping /usr/local/bin/fping \\\n && chmod 4755 /usr/local/bin/fping \\\n && mkdir -p /var/log/netdata \\\n && addgroup -g ${NETDATA_GID} -S netdata \\\n && adduser -S -H -s /usr/sbin/nologin -u ${NETDATA_GID} -h /etc/netdata -G netdata netdata \\\n && chown -R root:netdata /etc/netdata \\\n && chown -R netdata:netdata /var/cache/netdata /var/lib/netdata /usr/share/netdata \\\n && chown -R root:netdata /usr/lib/netdata \\\n && chown -R root:netdata /usr/libexec/netdata/plugins.d/apps.plugin /usr/libexec/netdata/plugins.d/cgroup-network \\\n && chmod 4750 /usr/libexec/netdata/plugins.d/cgroup-network /usr/libexec/netdata/plugins.d/apps.plugin \\\n && chmod 0750 /var/lib/netdata /var/cache/netdata \\\n && ln -sf /dev/stdout /var/log/netdata/access.log \\\n && ln -sf /dev/stdout /var/log/netdata/debug.log \\\n && ln -sf /dev/stderr /var/log/netdata/error.log\nENV NETDATA_PORT=\"19999\"\nEXPOSE $NETDATA_PORT\nENTRYPOINT [\"/usr/sbin/run.sh\"]\n","originalDockerfileUglifiedHash":"5b88bb95ee7bab3a0a1e4737e4621d45","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/73cd9030f5926fa8db70f90d8e6680f28927bbb6.dockerfile"}