{"seed":3884726411,"processedDockerfileHash":"88b67786d745b6b3fcdaa089ce4c8d40","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   ==================================================================\n#   Based on Ubuntu\n#   ------------------------------------------------------------------\n#    C / C++ / Python2 / Python3 / PHP / Golang / NodeJS\n#   ==================================================================\nARG BASE_IMAGE\nFROM ${BASE_IMAGE}\nLABEL maintainer.name=\"xczh\" \\\n      maintainer.email=\"xczh.me@foxmail.com\" \\\n      description=\"Cloud9 WebIDE\"\nUSER root\nWORKDIR /root\nSHELL [\"/bin/bash\", \"-c\"]\nENV LANG=\"C.UTF-8\"\n#   ==================================================================\n#   add files\n#   ------------------------------------------------------------------\nCOPY build/ /tmp/build/\n#   ==================================================================\n#   prepare\n#   ------------------------------------------------------------------\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP2_INSTALL=\"pip2 --no-cache-dir install --upgrade\" \\\n && PIP3_INSTALL=\"pip3 --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --single-branch --depth 1\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && : \\\n && echo 'PATH=$PATH:/cloud9/bin:/usr/local/ide-bin' >> /root/.bashrc \\\n && echo \"alias open='c9 open'\" >> /root/.bashrc \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL apt-transport-https apt-utils ca-certificates curl file git gnupg htop inetutils-ping nano net-tools openssl tzdata unzip vim wget xauth zip \\\n && echo \"Asia/Shanghai\" > /etc/timezone \\\n && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n && mv -f /tmp/build/ide-run /usr/sbin/ \\\n && mv -f /tmp/build/ide-bin/ /usr/local/ \\\n && chmod -R a+x /usr/sbin/ide-run /usr/local/ide-bin/* \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential cmake g++ gcc gdb make \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python python-dev python3 python3-dev \\\n && curl -L https://bootstrap.pypa.io/get-pip.py | python2 \\\n && curl -L https://bootstrap.pypa.io/get-pip.py | python3 \\\n && $PIP2_INSTALL setuptools virtualenv \\\n && $PIP3_INSTALL setuptools virtualenv \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL php-bz2 php-cli php-curl php-gd php-json php-mbstring php-mysql php-net-smtp php-net-socket php-soap php-sqlite3 php-xdebug php-xml php-zip \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && GOLANG_VER=`git ls-remote -t https://github.com/golang/go | awk -F/ '$3 ~ /^go1(\\\\.[0-9]+)+$/ {print $3}' | sort -Vr | head -n 1 ` \\\n && curl -o /tmp/${GOLANG_VER}.linux-amd64.tar.gz https://dl.google.com/go/${GOLANG_VER}.linux-amd64.tar.gz \\\n && tar -zxf /tmp/${GOLANG_VER}.linux-amd64.tar.gz -C /usr/local/ \\\n && ln -s /usr/local/go/bin/go /usr/local/bin/go \\\n && ln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt \\\n && ln -s /usr/local/go/bin/godoc /usr/local/bin/godoc \\\n && rm -f /tmp/${GOLANG_VER}.linux-amd64.tar.gz \\\n && /usr/local/bin/go version \\\n && curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL nodejs \\\n && ln -s /usr/bin/nodejs /usr/local/bin/node \\\n && npm config set registry https://registry.npm.taobao.org \\\n && npm install http-server@14.1.1 -g \\\n && $GIT_CLONE https://github.com/c9/core.git /cloud9 \\\n && /cloud9/scripts/install-sdk.sh \\\n && virtualenv --python=python2 /root/.c9/python2 \\\n && . /root/.c9/python2/bin/activate \\\n && mkdir /tmp/codeintel \\\n && pip download -d /tmp/codeintel codeintel==0.9.3 \\\n && cd /tmp/codeintel \\\n && tar xf CodeIntel-0.9.3.tar.gz \\\n && mv CodeIntel-0.9.3/SilverCity CodeIntel-0.9.3/silvercity \\\n && tar -zcf CodeIntel-0.9.3.tar.gz CodeIntel-0.9.3 \\\n && pip install codeintel==2.0.0 -U --no-index --find-links=/tmp/codeintel \\\n && deactivate \\\n && cd /root \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL openssh-server \\\n && mkdir /var/run/sshd \\\n && sed -i 's/.*PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed -i 's/.*X11Forwarding.*/X11Forwarding yes/' /etc/ssh/sshd_config \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL supervisor \\\n && sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/' /etc/supervisor/supervisord.conf \\\n && mkdir -p /root/.c9/ /etc/supervisor/ \\\n && mv -f /tmp/build/config/user.settings /root/.c9/user.settings \\\n && mv -f /tmp/build/config/supervisord.conf /etc/supervisor/supervisord.conf \\\n && sed -i 's/http:\\/\\/archive.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list \\\n && sed -i 's/http:\\/\\/security.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list \\\n && apt-get clean -y \\\n && apt-get autoremove -y \\\n && npm cache clean --force \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache /root/.c9/tmux-* /root/.c9/libevent-* /root/.c9/ncurses-*\n#   ==================================================================\n#   meta\n#   ------------------------------------------------------------------\nVOLUME /workspace\nEXPOSE 80/tcp\nEXPOSE 22/tcp\nENV C9_AUTH=\"root:webide\"\nENV EXTERNAL_PORT=\"\"\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  ==================================================================\n#  Based on Ubuntu\n#  ------------------------------------------------------------------\n#   C / C++ / Python2 / Python3 / PHP / Golang / NodeJS\n#  ==================================================================\nARG BASE_IMAGE\nFROM ${BASE_IMAGE}\nLABEL maintainer.name=\"xczh\" \\\n      maintainer.email=\"xczh.me@foxmail.com\" \\\n      description=\"Cloud9 WebIDE\"\nUSER root\nWORKDIR /root\nSHELL [\"/bin/bash\", \"-c\"]\nENV LANG=\"C.UTF-8\"\n#  ==================================================================\n#  add files\n#  ------------------------------------------------------------------\nCOPY build/ /tmp/build/\n#  ==================================================================\n#  prepare\n#  ------------------------------------------------------------------\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP2_INSTALL=\"pip2 --no-cache-dir install --upgrade\" \\\n && PIP3_INSTALL=\"pip3 --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --single-branch --depth 1\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && apt-get update \\\n && echo 'PATH=$PATH:/cloud9/bin:/usr/local/ide-bin' >> /root/.bashrc \\\n && echo \"alias open='c9 open'\" >> /root/.bashrc \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL apt-transport-https apt-utils ca-certificates curl file git gnupg htop inetutils-ping nano net-tools openssl tzdata unzip vim wget xauth zip \\\n && echo \"Asia/Shanghai\" > /etc/timezone \\\n && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n && mv -f /tmp/build/ide-run /usr/sbin/ \\\n && mv -f /tmp/build/ide-bin/ /usr/local/ \\\n && chmod -R a+x /usr/sbin/ide-run /usr/local/ide-bin/* \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential cmake g++ gcc gdb make \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python python-dev python3 python3-dev \\\n && curl -L https://bootstrap.pypa.io/get-pip.py | python2 \\\n && curl -L https://bootstrap.pypa.io/get-pip.py | python3 \\\n && $PIP2_INSTALL setuptools virtualenv \\\n && $PIP3_INSTALL setuptools virtualenv \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL php-bz2 php-cli php-curl php-gd php-json php-mbstring php-mysql php-net-smtp php-net-socket php-soap php-sqlite3 php-xdebug php-xml php-zip \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && GOLANG_VER=`git ls-remote -t https://github.com/golang/go | awk -F/ '$3 ~ /^go1(\\\\.[0-9]+)+$/ {print $3}' | sort -Vr | head -n 1 ` \\\n && curl -o /tmp/${GOLANG_VER}.linux-amd64.tar.gz https://dl.google.com/go/${GOLANG_VER}.linux-amd64.tar.gz \\\n && tar -zxf /tmp/${GOLANG_VER}.linux-amd64.tar.gz -C /usr/local/ \\\n && ln -s /usr/local/go/bin/go /usr/local/bin/go \\\n && ln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt \\\n && ln -s /usr/local/go/bin/godoc /usr/local/bin/godoc \\\n && rm -f /tmp/${GOLANG_VER}.linux-amd64.tar.gz \\\n && /usr/local/bin/go version \\\n && curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL nodejs \\\n && ln -s /usr/bin/nodejs /usr/local/bin/node \\\n && npm config set registry https://registry.npm.taobao.org \\\n && npm install http-server -g \\\n && $GIT_CLONE https://github.com/c9/core.git /cloud9 \\\n && /cloud9/scripts/install-sdk.sh \\\n && virtualenv --python=python2 /root/.c9/python2 \\\n && . /root/.c9/python2/bin/activate \\\n && mkdir /tmp/codeintel \\\n && pip download -d /tmp/codeintel codeintel==0.9.3 \\\n && cd /tmp/codeintel \\\n && tar xf CodeIntel-0.9.3.tar.gz \\\n && mv CodeIntel-0.9.3/SilverCity CodeIntel-0.9.3/silvercity \\\n && tar -zcf CodeIntel-0.9.3.tar.gz CodeIntel-0.9.3 \\\n && pip install codeintel -U --no-index --find-links=/tmp/codeintel \\\n && deactivate \\\n && cd /root \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL openssh-server \\\n && mkdir /var/run/sshd \\\n && sed -i 's/.*PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed -i 's/.*X11Forwarding.*/X11Forwarding yes/' /etc/ssh/sshd_config \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL supervisor \\\n && sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/' /etc/supervisor/supervisord.conf \\\n && mkdir -p /root/.c9/ /etc/supervisor/ \\\n && mv -f /tmp/build/config/user.settings /root/.c9/user.settings \\\n && mv -f /tmp/build/config/supervisord.conf /etc/supervisor/supervisord.conf \\\n && sed -i 's/http:\\/\\/archive.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list \\\n && sed -i 's/http:\\/\\/security.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list \\\n && apt-get clean -y \\\n && apt-get autoremove -y \\\n && npm cache clean --force \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache /root/.c9/tmux-* /root/.c9/libevent-* /root/.c9/ncurses-*\n#  ==================================================================\n#  meta\n#  ------------------------------------------------------------------\nVOLUME /workspace\nEXPOSE 80/tcp\nEXPOSE 22/tcp\nENV C9_AUTH=\"root:webide\"\nENV EXTERNAL_PORT=\"\"\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"308f123064dc95368f566231e78c388b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ==================================================================\n#   Based on Ubuntu\n#   ------------------------------------------------------------------\n#    C / C++ / Python2 / Python3 / PHP / Golang / NodeJS\n#   ==================================================================\nARG BASE_IMAGE\nFROM ${BASE_IMAGE}\nLABEL maintainer.name=\"xczh\" \\\n      maintainer.email=\"xczh.me@foxmail.com\" \\\n      description=\"Cloud9 WebIDE\"\nUSER root\nWORKDIR /root\nSHELL [\"/bin/bash\", \"-c\"]\nENV LANG=\"C.UTF-8\"\n#   ==================================================================\n#   add files\n#   ------------------------------------------------------------------\nCOPY build/ /tmp/build/\n#   ==================================================================\n#   prepare\n#   ------------------------------------------------------------------\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP2_INSTALL=\"pip2 --no-cache-dir install --upgrade\" \\\n && PIP3_INSTALL=\"pip3 --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --single-branch --depth 1\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && apt-get update \\\n && echo 'PATH=$PATH:/cloud9/bin:/usr/local/ide-bin' >> /root/.bashrc \\\n && echo \"alias open='c9 open'\" >> /root/.bashrc \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL apt-transport-https apt-utils ca-certificates curl file git gnupg htop inetutils-ping nano net-tools openssl tzdata unzip vim wget xauth zip \\\n && echo \"Asia/Shanghai\" > /etc/timezone \\\n && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n && mv -f /tmp/build/ide-run /usr/sbin/ \\\n && mv -f /tmp/build/ide-bin/ /usr/local/ \\\n && chmod -R a+x /usr/sbin/ide-run /usr/local/ide-bin/* \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential cmake g++ gcc gdb make \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python python-dev python3 python3-dev \\\n && curl -L https://bootstrap.pypa.io/get-pip.py | python2 \\\n && curl -L https://bootstrap.pypa.io/get-pip.py | python3 \\\n && $PIP2_INSTALL setuptools virtualenv \\\n && $PIP3_INSTALL setuptools virtualenv \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL php-bz2 php-cli php-curl php-gd php-json php-mbstring php-mysql php-net-smtp php-net-socket php-soap php-sqlite3 php-xdebug php-xml php-zip \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && GOLANG_VER=`git ls-remote -t https://github.com/golang/go | awk -F/ '$3 ~ /^go1(\\\\.[0-9]+)+$/ {print $3}' | sort -Vr | head -n 1 ` \\\n && curl -o /tmp/${GOLANG_VER}.linux-amd64.tar.gz https://dl.google.com/go/${GOLANG_VER}.linux-amd64.tar.gz \\\n && tar -zxf /tmp/${GOLANG_VER}.linux-amd64.tar.gz -C /usr/local/ \\\n && ln -s /usr/local/go/bin/go /usr/local/bin/go \\\n && ln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt \\\n && ln -s /usr/local/go/bin/godoc /usr/local/bin/godoc \\\n && rm -f /tmp/${GOLANG_VER}.linux-amd64.tar.gz \\\n && /usr/local/bin/go version \\\n && curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL nodejs \\\n && ln -s /usr/bin/nodejs /usr/local/bin/node \\\n && npm config set registry https://registry.npm.taobao.org \\\n && npm install http-server -g \\\n && $GIT_CLONE https://github.com/c9/core.git /cloud9 \\\n && /cloud9/scripts/install-sdk.sh \\\n && virtualenv --python=python2 /root/.c9/python2 \\\n && . /root/.c9/python2/bin/activate \\\n && mkdir /tmp/codeintel \\\n && pip download -d /tmp/codeintel codeintel==0.9.3 \\\n && cd /tmp/codeintel \\\n && tar xf CodeIntel-0.9.3.tar.gz \\\n && mv CodeIntel-0.9.3/SilverCity CodeIntel-0.9.3/silvercity \\\n && tar -zcf CodeIntel-0.9.3.tar.gz CodeIntel-0.9.3 \\\n && pip install codeintel -U --no-index --find-links=/tmp/codeintel \\\n && deactivate \\\n && cd /root \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL openssh-server \\\n && mkdir /var/run/sshd \\\n && sed -i 's/.*PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n && sed -i 's/.*X11Forwarding.*/X11Forwarding yes/' /etc/ssh/sshd_config \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL supervisor \\\n && sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/' /etc/supervisor/supervisord.conf \\\n && mkdir -p /root/.c9/ /etc/supervisor/ \\\n && mv -f /tmp/build/config/user.settings /root/.c9/user.settings \\\n && mv -f /tmp/build/config/supervisord.conf /etc/supervisor/supervisord.conf \\\n && sed -i 's/http:\\/\\/archive.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list \\\n && sed -i 's/http:\\/\\/security.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list \\\n && apt-get clean -y \\\n && apt-get autoremove -y \\\n && npm cache clean --force \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache /root/.c9/tmux-* /root/.c9/libevent-* /root/.c9/ncurses-*\n#   ==================================================================\n#   meta\n#   ------------------------------------------------------------------\nVOLUME /workspace\nEXPOSE 80/tcp\nEXPOSE 22/tcp\nENV C9_AUTH=\"root:webide\"\nENV EXTERNAL_PORT=\"\"\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"dddc33c5508372731c21ed631e7b3330","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f3e01220e9313fb985b82af814f9f5e1e05594b0.dockerfile"}