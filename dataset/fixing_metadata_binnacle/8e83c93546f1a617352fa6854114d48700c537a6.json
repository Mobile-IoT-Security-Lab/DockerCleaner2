{"seed":2649049720,"processedDockerfileHash":"1b4e489fdd4422f66c5fb41cb2eb11bc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM tensorflow/tensorflow:1.7.0-devel-gpu-py3\nLABEL maintainer=\"richard@nodeflux.io\"\n#   Initial Dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates cmake cython3 g++ git libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libavformat-dev libpq-dev libgtk2.0-dev pkg-config python3-dev python3-wheel wget unzip yasm -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Build OpenCV\nENV OPENCV_VERSION=\"3.3.1\"\nCOPY 3.3.1.zip /\nWORKDIR / \nRUN unzip ${OPENCV_VERSION}.zip \\\n && mkdir /opencv-${OPENCV_VERSION}/cmake_binary \\\n && cd /opencv-${OPENCV_VERSION}/cmake_binary \\\n && cmake -DBUILD_TIFF=ON -DBUILD_opencv_java=OFF -DWITH_CUDA=OFF -DENABLE_AVX=ON -DWITH_OPENGL=ON -DWITH_OPENCL=ON -DWITH_IPP=ON -DWITH_TBB=ON -DWITH_EIGEN=ON -DWITH_V4L=ON -DWITH_GTK=ON -DWITH_GTK_2_X=ON -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$( python3 -c \"import sys; print(sys.prefix)\" ;) -DPYTHON_EXECUTABLE=$( which python3 ;) -DPYTHON_INCLUDE_DIR=$( python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\" ;) -D PYTHON3_NUMPY_INCLUDE_DIRS:PATH=/usr/local/lib/python3.5/dist-packages/numpy/core/include -DPYTHON_PACKAGES_PATH=/usr/local/lib/python3.5/dist-packages .. \\\n && make -j \"$( nproc ;)\" install \\\n && rm /${OPENCV_VERSION}.zip \\\n && rm -r /opencv-${OPENCV_VERSION}\n#   Build Darkflow\nCOPY darkflow /darkflow\nRUN cd darkflow \\\n && pip3 install .\n#   Build TensorRT\nENV TENSORRT_VERSION=\"3.0\"\nCOPY nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb /tmp/\nRUN cd /tmp/ \\\n && dpkg -i nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb \\\n && apt-get update \\\n && apt-get install --no-install-recommends tensorrt python3-libnvinfer-doc uff-converter-tf -y \\\n && rm -rf nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb\n#   Upgrade numpy and pillow version for tensorRT\nRUN pip3 install --upgrade numpy pillow enum34\n#   Install pyCUDA\nWORKDIR /\nCOPY pycuda-2017.1.1.tar.gz /\n#  RUN tar -xzvf / pycuda-2017.1.1.tar.gz && \\\n#      rm -rf pycuda-2017.1.1.tar.gz\nENV CUDA_ROOT=\"/usr/local/cuda\"\nRUN cd pycuda-2017.1.1 \\\n && python3 configure.py \\\n && make -j \"$( nproc ;)\" install \\\n && pip3 install .\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM tensorflow/tensorflow:1.7.0-devel-gpu-py3\nLABEL maintainer=\"richard@nodeflux.io\"\n#  Initial Dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates cmake cython3 g++ git libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libavformat-dev libpq-dev libgtk2.0-dev pkg-config python3-dev python3-wheel wget unzip yasm -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Build OpenCV\nENV OPENCV_VERSION=\"3.3.1\"\nCOPY 3.3.1.zip /\nWORKDIR / \nRUN unzip ${OPENCV_VERSION}.zip \\\n && mkdir /opencv-${OPENCV_VERSION}/cmake_binary \\\n && cd /opencv-${OPENCV_VERSION}/cmake_binary \\\n && cmake -DBUILD_TIFF=ON -DBUILD_opencv_java=OFF -DWITH_CUDA=OFF -DENABLE_AVX=ON -DWITH_OPENGL=ON -DWITH_OPENCL=ON -DWITH_IPP=ON -DWITH_TBB=ON -DWITH_EIGEN=ON -DWITH_V4L=ON -DWITH_GTK=ON -DWITH_GTK_2_X=ON -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$( python3 -c \"import sys; print(sys.prefix)\" ;) -DPYTHON_EXECUTABLE=$( which python3 ;) -DPYTHON_INCLUDE_DIR=$( python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\" ;) -D PYTHON3_NUMPY_INCLUDE_DIRS:PATH=/usr/local/lib/python3.5/dist-packages/numpy/core/include -DPYTHON_PACKAGES_PATH=/usr/local/lib/python3.5/dist-packages .. \\\n && make -j \"$( nproc ;)\" install \\\n && rm /${OPENCV_VERSION}.zip \\\n && rm -r /opencv-${OPENCV_VERSION}\n#  Build Darkflow\nCOPY darkflow /darkflow\nRUN cd darkflow \\\n && pip3 install .\n#  Build TensorRT\nENV TENSORRT_VERSION=\"3.0\"\nCOPY nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb /tmp/\nRUN cd /tmp/ \\\n && dpkg -i nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb \\\n && apt-get update \\\n && apt-get install --no-install-recommends tensorrt python3-libnvinfer-doc uff-converter-tf -y \\\n && rm -rf nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb\n#  Upgrade numpy and pillow version for tensorRT\nRUN pip3 install --upgrade numpy pillow enum34\n#  Install pyCUDA\nWORKDIR /\nADD pycuda-2017.1.1.tar.gz /\n# RUN tar -xzvf / pycuda-2017.1.1.tar.gz && \\\n#     rm -rf pycuda-2017.1.1.tar.gz\nENV CUDA_ROOT=\"/usr/local/cuda\"\nRUN cd pycuda-2017.1.1 \\\n && python3 configure.py \\\n && make -j \"$( nproc ;)\" install \\\n && pip3 install .\n","injectedSmells":[],"originalDockerfileHash":"afd2703c577993d563b1cd219de54a78","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM tensorflow/tensorflow:1.7.0-devel-gpu-py3\nLABEL maintainer=\"richard@nodeflux.io\"\n#   Initial Dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates cmake cython3 g++ git libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libavformat-dev libpq-dev libgtk2.0-dev pkg-config python3-dev python3-wheel wget unzip yasm -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Build OpenCV\nENV OPENCV_VERSION=\"3.3.1\"\nCOPY 3.3.1.zip /\nWORKDIR / \nRUN unzip ${OPENCV_VERSION}.zip \\\n && mkdir /opencv-${OPENCV_VERSION}/cmake_binary \\\n && cd /opencv-${OPENCV_VERSION}/cmake_binary \\\n && cmake -DBUILD_TIFF=ON -DBUILD_opencv_java=OFF -DWITH_CUDA=OFF -DENABLE_AVX=ON -DWITH_OPENGL=ON -DWITH_OPENCL=ON -DWITH_IPP=ON -DWITH_TBB=ON -DWITH_EIGEN=ON -DWITH_V4L=ON -DWITH_GTK=ON -DWITH_GTK_2_X=ON -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$( python3 -c \"import sys; print(sys.prefix)\" ;) -DPYTHON_EXECUTABLE=$( which python3 ;) -DPYTHON_INCLUDE_DIR=$( python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\" ;) -D PYTHON3_NUMPY_INCLUDE_DIRS:PATH=/usr/local/lib/python3.5/dist-packages/numpy/core/include -DPYTHON_PACKAGES_PATH=/usr/local/lib/python3.5/dist-packages .. \\\n && make -j \"$( nproc ;)\" install \\\n && rm /${OPENCV_VERSION}.zip \\\n && rm -r /opencv-${OPENCV_VERSION}\n#   Build Darkflow\nCOPY darkflow /darkflow\nRUN cd darkflow \\\n && pip3 install .\n#   Build TensorRT\nENV TENSORRT_VERSION=\"3.0\"\nCOPY nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb /tmp/\nRUN cd /tmp/ \\\n && dpkg -i nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb \\\n && apt-get update \\\n && apt-get install --no-install-recommends tensorrt python3-libnvinfer-doc uff-converter-tf -y \\\n && rm -rf nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb\n#   Upgrade numpy and pillow version for tensorRT\nRUN pip3 install --upgrade numpy pillow enum34\n#   Install pyCUDA\nWORKDIR /\nADD pycuda-2017.1.1.tar.gz /\n#  RUN tar -xzvf / pycuda-2017.1.1.tar.gz && \\\n#      rm -rf pycuda-2017.1.1.tar.gz\nENV CUDA_ROOT=\"/usr/local/cuda\"\nRUN cd pycuda-2017.1.1 \\\n && python3 configure.py \\\n && make -j \"$( nproc ;)\" install \\\n && pip3 install .\n","originalDockerfileUglifiedHash":"3952e0e14b841af851c6fda51f9abf64","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8e83c93546f1a617352fa6854114d48700c537a6.dockerfile"}