{"seed":3572550044,"processedDockerfileHash":"0163f244cd2cfab4242be5d101cf4639","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER leoatchina,leoatchina@gmail.com\nCOPY sources.list /etc/apt/sources.list\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 curl=7.47.0-1ubuntu2.19 net-tools=1.60-26ubuntu1 iputils-ping=3:20121221-5ubuntu2 apt-transport-https=1.2.35 openssh-server=1:7.2p2-4ubuntu2.10 unzip=6.0-20ubuntu1.1 bzip2=1.0.6-8ubuntu0.2 apt-utils=1.2.35 gdebi-core=0.9.5.7ubuntu1 tmux=2.1-3build1 git=1:2.7.4-0ubuntu1.10 htop=2.0.1-1ubuntu1 supervisor=3.2.0-2ubuntu0.2 xclip=0.12+svn84-4 cmake=3.5.1-1ubuntu3 sudo=1.8.16-0ubuntu1.10 libapparmor1=2.10.95-0ubuntu2.11 libcurl4-openssl-dev=7.47.0-1ubuntu2.19 libxml2=2.9.3+dfsg1-1ubuntu0.7 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libssl-dev=1.0.2g-1ubuntu4.20 libncurses5-dev=6.0+20160213-1ubuntu1 libncursesw5-dev=6.0+20160213-1ubuntu1 libjansson-dev=2.7-3ubuntu0.1 build-essential=12.1ubuntu2 gfortran=4:5.3.1-1ubuntu1 libcairo2-dev=1.14.6-1 libxt-dev=1:1.1.5-0ubuntu1 automake=1:1.15-4ubuntu1 bash-completion=1:2.1-4.2ubuntu1.1 libapparmor1=2.10.95-0ubuntu2.11 libedit2=3.1-20150325-1ubuntu2 libc6=2.23-0ubuntu11.3 psmisc=22.21-2.1ubuntu0.1 rrdtool=1.5.5-4 libzmq3-dev=4.1.4-7ubuntu0.1 libtool=2.4.6-0.1 software-properties-common=0.96.20.10 bioperl=1.6.924-3 libdbi-perl=1.634-1ubuntu0.2 tree=1.7.0-3 python-dev=2.7.12-1~16.04 python3-dev=3.5.1-3 locales=2.23-0ubuntu11.3 -y \\\n && locale-gen en_US.UTF-8 \\\n && cpan -i Try::Tiny \\\n && add-apt-repository ppa:jonathonf/vim -y \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends vim=2:7.4.1689-3ubuntu1.5 -y \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   configuration\nCOPY .bashrc .inputrc .configrc /root/\nRUN git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf \\\n && ~/.fzf/install --all\nRUN mkdir -p /opt/rc \\\n && cp /root/.bashrc /root/.inputrc /root/.configrc /opt/rc\n#   bash && ctags\nRUN cd /tmp \\\n && wget https://ftp.gnu.org/gnu/bash/bash-5.0.tar.gz \\\n && tar xvzf bash-5.0.tar.gz \\\n && cd bash-5.0 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd /tmp \\\n && curl -LO https://github.com/BurntSushi/ripgrep/releases/download/11.0.1/ripgrep_11.0.1_amd64.deb \\\n && dpkg -i ripgrep_11.0.1_amd64.deb \\\n && cd /tmp \\\n && git clone --depth 1 https://github.com/universal-ctags/ctags.git \\\n && cd ctags \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd /tmp \\\n && curl http://ftp.vim.org/ftp/gnu/global/global-6.6.3.tar.gz -o global.tar.gz \\\n && tar xvzf global.tar.gz \\\n && cd global-6.6.3 \\\n && ./configure --with-sqlite3 \\\n && make \\\n && make install \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   node and yarn \nRUN apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 nodejs-legacy=4.2.6~dfsg-1ubuntu4.2 npm=3.5.2-0ubuntu4 -y \\\n && npm config set registry https://registry.npm.taobao.org \\\n && npm install n@9.1.0 -g \\\n && n stable \\\n && npm install yarn@1.22.19 -g \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   R\nRUN add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/' \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && add-apt-repository ppa:ubuntugis/ppa -y \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends r-base-dev=3.2.3-4 r-base=3.2.3-4 r-base-core=3.2.3-4 r-recommended=3.2.3-4 -y \\\n && apt-get install --no-install-recommends libv8-3.14-dev=3.14.5.8-5ubuntu2 libudunits2-dev=2.2.20-1 libgdal1i=1.11.3+dfsg-3build2 libgdal1-dev=1.11.3+dfsg-3build2 libproj-dev=4.9.2-2 gdal-bin=1.11.3+dfsg-3build2 proj-bin=4.9.2-2 libgdal-dev=1.11.3+dfsg-3build2 libgeos-dev=3.5.0-1ubuntu2 libclang-dev=1:3.8-33ubuntu3.1 -y \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   rstudio\nRUN cd /tmp \\\n && curl https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb -o rstudio.deb \\\n && gdebi -n rstudio.deb \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   PATH, if not set here, conda cmd not work \nENV PATH=\"/opt/anaconda3/bin:$PATH\"\n#   anaconda3\nRUN cd /tmp \\\n && version=$( curl -s https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/ | grep Linux | grep _64 | tail -1 | awk -F'\"' '/^<a href/ {print $2}' ;) \\\n && curl https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/$version -o Anaconda3.sh \\\n && bash Anaconda3.sh -b -p /opt/anaconda3 \\\n && rm Anaconda3.sh \\\n && conda clean -a -y\n#  # 使用清华的源\nRUN conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/mro/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ \\\n && conda config --set show_channel_urls yes\nRUN conda install -c bioconda java-jdk \\\n && conda clean -a -y \\\n && R CMD javareconf \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#  # R kernel for anaconda3\nRUN Rscript -e \"options(encoding = 'UTF-8'); options('repos' = c(CRAN='https://mirrors.tuna.tsinghua.edu.cn/CRAN/')); install.packages(c('devtools', 'RCurl', 'crayon', 'repr', 'IRdisplay', 'pbdZMQ', 'IRkernel')); IRkernel::installspec(); system('rm -rf /tmp/*') \"\n#   coder server\nRUN cd /tmp \\\n && curl -L https://github.com/cdr/code-server/releases/download/1.1156-vsc1.33.1/code-server1.1156-vsc1.33.1-linux-x64.tar.gz -o code-server.tar.gz \\\n && tar xvzf code-server.tar.gz \\\n && mv code-server1.1156-vsc1.33.1-linux-x64 /opt/code-server \\\n && rm -rf /tmp/*.*\n#   pip install something\nCOPY pip.conf /root/.pip/\nRUN pip install PyHamcrest==2.0.4 \\\n && pip install pip==23.1 --upgrade \\\n && pip install neovim==0.3.1 mysql-connector-python==8.0.32 python-language-server==0.36.2 mock==5.0.1 radian==0.6.5 requests==2.28.2 pygments==2.15.0 \\\n && pip install flake8==6.0.0 --ignore-installed \\\n && rm -rf /root/.cache/pip/* /tmp/* \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#  # system local config\nRUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n && echo 'Asia/Shanghai' > /etc/timezone \\\n && echo \"export LC_ALL=en_US.UTF-8\" >> /etc/profile\n#  # users\nRUN useradd rserver -d /home/rserver \\\n && mkdir /jupyter \\\n && mkdir /var/run/sshd\nWORKDIR /jupyter\n#  # config dir\nRUN mkdir -p /etc/rstudio /opt/config /opt/log \\\n && chmod -R 777 /opt/config /opt/log\n#  # set up passwd in entrypoin.sh\nENV PASSWD=\"jupyter\"\nCOPY rserver.conf /etc/rstudio/\nCOPY jupyter_lab_config.py supervisord.conf passwd.py entrypoint.sh /opt/config/\nENTRYPOINT [\"bash\", \"/opt/config/entrypoint.sh\"]\n#  # share\nEXPOSE 8888/tcp 8787/tcp 8443/tcp 8822/tcp\nVOLUME [\"/home/rserver\",\"/jupyter\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER leoatchina,leoatchina@gmail.com\nCOPY sources.list /etc/apt/sources.list\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get install -y wget curl net-tools iputils-ping apt-transport-https openssh-server unzip bzip2 apt-utils gdebi-core tmux git htop supervisor xclip cmake sudo libapparmor1 libcurl4-openssl-dev libxml2 libxml2-dev libssl-dev libncurses5-dev libncursesw5-dev libjansson-dev build-essential gfortran libcairo2-dev libxt-dev automake bash-completion libapparmor1 libedit2 libc6 psmisc rrdtool libzmq3-dev libtool software-properties-common bioperl libdbi-perl tree python-dev python3-dev locales \\\n && locale-gen en_US.UTF-8 \\\n && cpan -i Try::Tiny \\\n && add-apt-repository ppa:jonathonf/vim -y \\\n && apt-get update -y \\\n && apt-get install -y vim \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#  configuration\nCOPY .bashrc .inputrc .configrc /root/\nRUN git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf \\\n && ~/.fzf/install --all\nRUN mkdir -p /opt/rc \\\n && cp /root/.bashrc /root/.inputrc /root/.configrc /opt/rc\n#  bash && ctags\nRUN cd /tmp \\\n && wget https://ftp.gnu.org/gnu/bash/bash-5.0.tar.gz \\\n && tar xvzf bash-5.0.tar.gz \\\n && cd bash-5.0 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd /tmp \\\n && curl -LO https://github.com/BurntSushi/ripgrep/releases/download/11.0.1/ripgrep_11.0.1_amd64.deb \\\n && dpkg -i ripgrep_11.0.1_amd64.deb \\\n && cd /tmp \\\n && git clone --depth 1 https://github.com/universal-ctags/ctags.git \\\n && cd ctags \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd /tmp \\\n && curl http://ftp.vim.org/ftp/gnu/global/global-6.6.3.tar.gz -o global.tar.gz \\\n && tar xvzf global.tar.gz \\\n && cd global-6.6.3 \\\n && ./configure --with-sqlite3 \\\n && make \\\n && make install \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#  node and yarn \nRUN apt-get install -y nodejs nodejs-legacy npm \\\n && npm config set registry https://registry.npm.taobao.org \\\n && npm install n -g \\\n && n stable \\\n && npm install yarn -g \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#  R\nRUN add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/' \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && add-apt-repository ppa:ubuntugis/ppa -y \\\n && apt-get update -y \\\n && apt-get install -y r-base-dev r-base r-base-core r-recommended \\\n && apt-get install -y libv8-3.14-dev libudunits2-dev libgdal1i libgdal1-dev libproj-dev gdal-bin proj-bin libgdal-dev libgeos-dev libclang-dev \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#  rstudio\nRUN cd /tmp \\\n && curl https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb -o rstudio.deb \\\n && gdebi -n rstudio.deb \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#  PATH, if not set here, conda cmd not work \nENV PATH=\"/opt/anaconda3/bin:$PATH\"\n#  anaconda3\nRUN cd /tmp \\\n && version=$( curl -s https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/ | grep Linux | grep _64 | tail -1 | awk -F'\"' '/^<a href/ {print $2}' ;) \\\n && curl https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/$version -o Anaconda3.sh \\\n && bash Anaconda3.sh -b -p /opt/anaconda3 \\\n && rm Anaconda3.sh \\\n && conda clean -a -y\n# # 使用清华的源\nRUN conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/mro/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ \\\n && conda config --set show_channel_urls yes\nRUN conda install -c bioconda java-jdk \\\n && conda clean -a -y \\\n && R CMD javareconf \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n# # R kernel for anaconda3\nRUN Rscript -e \"options(encoding = 'UTF-8'); options('repos' = c(CRAN='https://mirrors.tuna.tsinghua.edu.cn/CRAN/')); install.packages(c('devtools', 'RCurl', 'crayon', 'repr', 'IRdisplay', 'pbdZMQ', 'IRkernel')); IRkernel::installspec(); system('rm -rf /tmp/*') \"\n#  coder server\nRUN cd /tmp \\\n && curl -L https://github.com/cdr/code-server/releases/download/1.1156-vsc1.33.1/code-server1.1156-vsc1.33.1-linux-x64.tar.gz -o code-server.tar.gz \\\n && tar xvzf code-server.tar.gz \\\n && mv code-server1.1156-vsc1.33.1-linux-x64 /opt/code-server \\\n && rm -rf /tmp/*.*\n#  pip install something\nCOPY pip.conf /root/.pip/\nRUN pip install PyHamcrest \\\n && pip install pip --upgrade \\\n && pip install neovim mysql-connector-python python-language-server mock radian requests pygments \\\n && pip install flake8 --ignore-installed \\\n && rm -rf /root/.cache/pip/* /tmp/* \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n# # system local config\nRUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n && echo 'Asia/Shanghai' > /etc/timezone \\\n && echo \"export LC_ALL=en_US.UTF-8\" >> /etc/profile\n# # users\nRUN useradd rserver -d /home/rserver \\\n && mkdir /jupyter \\\n && mkdir /var/run/sshd\nWORKDIR /jupyter\n# # config dir\nRUN mkdir -p /etc/rstudio /opt/config /opt/log \\\n && chmod -R 777 /opt/config /opt/log\n# # set up passwd in entrypoin.sh\nENV PASSWD=\"jupyter\"\nCOPY rserver.conf /etc/rstudio/\nCOPY jupyter_lab_config.py supervisord.conf passwd.py entrypoint.sh /opt/config/\nENTRYPOINT [\"bash\", \"/opt/config/entrypoint.sh\"]\n# # share\nEXPOSE 8888/tcp 8787/tcp 8443/tcp 8822/tcp\nVOLUME [\"/home/rserver\",\"/jupyter\"]\n","injectedSmells":[],"originalDockerfileHash":"25ba3ebd628fc01ffad4929bd4f0c99c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER leoatchina,leoatchina@gmail.com\nCOPY sources.list /etc/apt/sources.list\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get install wget curl net-tools iputils-ping apt-transport-https openssh-server unzip bzip2 apt-utils gdebi-core tmux git htop supervisor xclip cmake sudo libapparmor1 libcurl4-openssl-dev libxml2 libxml2-dev libssl-dev libncurses5-dev libncursesw5-dev libjansson-dev build-essential gfortran libcairo2-dev libxt-dev automake bash-completion libapparmor1 libedit2 libc6 psmisc rrdtool libzmq3-dev libtool software-properties-common bioperl libdbi-perl tree python-dev python3-dev locales -y \\\n && locale-gen en_US.UTF-8 \\\n && cpan -i Try::Tiny \\\n && add-apt-repository ppa:jonathonf/vim -y \\\n && apt-get update -y \\\n && apt-get install vim -y \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   configuration\nCOPY .bashrc .inputrc .configrc /root/\nRUN git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf \\\n && ~/.fzf/install --all\nRUN mkdir -p /opt/rc \\\n && cp /root/.bashrc /root/.inputrc /root/.configrc /opt/rc\n#   bash && ctags\nRUN cd /tmp \\\n && wget https://ftp.gnu.org/gnu/bash/bash-5.0.tar.gz \\\n && tar xvzf bash-5.0.tar.gz \\\n && cd bash-5.0 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd /tmp \\\n && curl -LO https://github.com/BurntSushi/ripgrep/releases/download/11.0.1/ripgrep_11.0.1_amd64.deb \\\n && dpkg -i ripgrep_11.0.1_amd64.deb \\\n && cd /tmp \\\n && git clone --depth 1 https://github.com/universal-ctags/ctags.git \\\n && cd ctags \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd /tmp \\\n && curl http://ftp.vim.org/ftp/gnu/global/global-6.6.3.tar.gz -o global.tar.gz \\\n && tar xvzf global.tar.gz \\\n && cd global-6.6.3 \\\n && ./configure --with-sqlite3 \\\n && make \\\n && make install \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   node and yarn \nRUN apt-get install nodejs nodejs-legacy npm -y \\\n && npm config set registry https://registry.npm.taobao.org \\\n && npm install n -g \\\n && n stable \\\n && npm install yarn -g \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   R\nRUN add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/' \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && add-apt-repository ppa:ubuntugis/ppa -y \\\n && apt-get update -y \\\n && apt-get install r-base-dev r-base r-base-core r-recommended -y \\\n && apt-get install libv8-3.14-dev libudunits2-dev libgdal1i libgdal1-dev libproj-dev gdal-bin proj-bin libgdal-dev libgeos-dev libclang-dev -y \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   rstudio\nRUN cd /tmp \\\n && curl https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb -o rstudio.deb \\\n && gdebi -n rstudio.deb \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#   PATH, if not set here, conda cmd not work \nENV PATH=\"/opt/anaconda3/bin:$PATH\"\n#   anaconda3\nRUN cd /tmp \\\n && version=$( curl -s https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/ | grep Linux | grep _64 | tail -1 | awk -F'\"' '/^<a href/ {print $2}' ;) \\\n && curl https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/$version -o Anaconda3.sh \\\n && bash Anaconda3.sh -b -p /opt/anaconda3 \\\n && rm Anaconda3.sh \\\n && conda clean -a -y\n#  # 使用清华的源\nRUN conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/mro/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ \\\n && conda config --set show_channel_urls yes\nRUN conda install -c bioconda java-jdk \\\n && conda clean -a -y \\\n && R CMD javareconf \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#  # R kernel for anaconda3\nRUN Rscript -e \"options(encoding = 'UTF-8'); options('repos' = c(CRAN='https://mirrors.tuna.tsinghua.edu.cn/CRAN/')); install.packages(c('devtools', 'RCurl', 'crayon', 'repr', 'IRdisplay', 'pbdZMQ', 'IRkernel')); IRkernel::installspec(); system('rm -rf /tmp/*') \"\n#   coder server\nRUN cd /tmp \\\n && curl -L https://github.com/cdr/code-server/releases/download/1.1156-vsc1.33.1/code-server1.1156-vsc1.33.1-linux-x64.tar.gz -o code-server.tar.gz \\\n && tar xvzf code-server.tar.gz \\\n && mv code-server1.1156-vsc1.33.1-linux-x64 /opt/code-server \\\n && rm -rf /tmp/*.*\n#   pip install something\nCOPY pip.conf /root/.pip/\nRUN pip install PyHamcrest \\\n && pip install pip --upgrade \\\n && pip install neovim mysql-connector-python python-language-server mock radian requests pygments \\\n && pip install flake8 --ignore-installed \\\n && rm -rf /root/.cache/pip/* /tmp/* \\\n && apt-get autoremove \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n#  # system local config\nRUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n && echo 'Asia/Shanghai' > /etc/timezone \\\n && echo \"export LC_ALL=en_US.UTF-8\" >> /etc/profile\n#  # users\nRUN useradd rserver -d /home/rserver \\\n && mkdir /jupyter \\\n && mkdir /var/run/sshd\nWORKDIR /jupyter\n#  # config dir\nRUN mkdir -p /etc/rstudio /opt/config /opt/log \\\n && chmod -R 777 /opt/config /opt/log\n#  # set up passwd in entrypoin.sh\nENV PASSWD=\"jupyter\"\nCOPY rserver.conf /etc/rstudio/\nCOPY jupyter_lab_config.py supervisord.conf passwd.py entrypoint.sh /opt/config/\nENTRYPOINT [\"bash\", \"/opt/config/entrypoint.sh\"]\n#  # share\nEXPOSE 8888/tcp 8787/tcp 8443/tcp 8822/tcp\nVOLUME [\"/home/rserver\",\"/jupyter\"]\n","originalDockerfileUglifiedHash":"7e98e2f018c4c5975241cf174d8d9e5b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/14fd3e9de452b7e2a99053b3f47f01decf531589.dockerfile"}