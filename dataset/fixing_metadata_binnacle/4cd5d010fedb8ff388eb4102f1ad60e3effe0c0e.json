{"seed":2961156970,"processedDockerfileHash":"7c3f405d3e0b086501100ae7ae07471a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   This Dockerfile in thirdpart_containers/system-test/dockerfile dir is used to create an image with\n#   AdoptOpenJDK jdk binary installed. Basic test dependent executions\n#   are installed during the building process.\n#\n#   Build system: `docker build -t adoptopenjdk-system-test -f Dockerfile ../.`\n#\n#   This Dockerfile builds image based on adoptopenjdk/openjdk8:latest.\n#   If you want to build image based on other images, please use\n#   `--build-arg list` to specify your base image\n#\n#   Build systemtest: `docker build --build-arg IMAGE_NAME=<image_name> --build-arg IMAGE_VERSION=<image_version > -t adoptopenjdk-system-test .`\nARG SDK=openjdk8\nARG IMAGE_NAME=adoptopenjdk/$SDK\nARG IMAGE_VERSION=latest\nFROM $IMAGE_NAME:$IMAGE_VERSION\n#   Install test dependent executable files\nRUN apt-get update \\\n && apt-get install --no-install-recommends ant apt-transport-https ca-certificates dirmngr curl git make unzip vim wget cpio gcc -y\n#   Install ant\nENV ANT_VERSION=\"1.10.5\"\nRUN wget --no-check-certificate https://www.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz \\\n && gunzip apache-ant-${ANT_VERSION}-bin.tar.gz \\\n && tar -xvf apache-ant-${ANT_VERSION}-bin.tar\nRUN apt-get install --no-install-recommends libtext-csv-perl libjson-perl -y\nVOLUME [\"/java\"]\n#  ENV JAVA_HOME=/java \\\n#      PATH=/java/bin:$PATH \\\n#      JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\nENV JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\n#   Install Docker module to run test framework\nRUN apt-get install --no-install-recommends libtext-csv-perl libjson-perl libxml-parser-perl -y\n#   This is the main script to run system tests.  \nCOPY ./dockerfile/system-test.sh /system-test.sh\n#   Clone the repo where the 3rd party application code and tests reside. \nWORKDIR /\nRUN pwd\nENV ANT_HOME=\"${WORKDIR}/apache-ant-${ANT_VERSION}\"\nRUN wget https://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.tar.gz \\\n && tar -zxvf ant-contrib-1.0b3-bin.tar.gz \\\n && cp ant-contrib/ant-contrib-1.0b3.jar ${ANT_HOME}/lib\n#   Clone AdoptOpenJDK openjdk-tests repo\nRUN git clone https://github.com/AdoptOpenJDK/openjdk-tests.git\nENV TEST_JDK_HOME=\"$JAVA_HOME\"\nENV BUILD_LIST=\"systemtest\"\nRUN cd /openjdk-tests \\\n && ./get.sh -t /openjdk-tests\n#   Generates test targets applicable to the platform, implementation and version\nRUN echo \"Generating test targets applicable to the platform, implementation and version...\" \\\n && cd /openjdk-tests/TestConfig \\\n && make -f run_configure.mk \\\n && make compile\nENTRYPOINT [\"/bin/bash\", \"/system-test.sh\"]\nCMD [\"--version\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  This Dockerfile in thirdpart_containers/system-test/dockerfile dir is used to create an image with\n#  AdoptOpenJDK jdk binary installed. Basic test dependent executions\n#  are installed during the building process.\n#\n#  Build system: `docker build -t adoptopenjdk-system-test -f Dockerfile ../.`\n#\n#  This Dockerfile builds image based on adoptopenjdk/openjdk8:latest.\n#  If you want to build image based on other images, please use\n#  `--build-arg list` to specify your base image\n#\n#  Build systemtest: `docker build --build-arg IMAGE_NAME=<image_name> --build-arg IMAGE_VERSION=<image_version > -t adoptopenjdk-system-test .`\nARG SDK=openjdk8\nARG IMAGE_NAME=adoptopenjdk/$SDK\nARG IMAGE_VERSION=latest\nFROM $IMAGE_NAME:$IMAGE_VERSION\n#  Install test dependent executable files\nRUN apt-get update \\\n && apt-get install ant apt-transport-https ca-certificates dirmngr curl git make unzip vim wget cpio gcc -y\n#  Install ant\nENV ANT_VERSION=\"1.10.5\"\nRUN wget --no-check-certificate https://www.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz \\\n && gunzip apache-ant-${ANT_VERSION}-bin.tar.gz \\\n && tar -xvf apache-ant-${ANT_VERSION}-bin.tar\nRUN apt-get install libtext-csv-perl libjson-perl -y\nVOLUME [\"/java\"]\n# ENV JAVA_HOME=/java \\\n#     PATH=/java/bin:$PATH \\\n#     JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\nENV JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\n#  Install Docker module to run test framework\nRUN apt-get install libtext-csv-perl libjson-perl libxml-parser-perl -y\n#  This is the main script to run system tests.  \nCOPY ./dockerfile/system-test.sh /system-test.sh\n#  Clone the repo where the 3rd party application code and tests reside. \nWORKDIR /\nRUN pwd\nENV ANT_HOME=\"${WORKDIR}/apache-ant-${ANT_VERSION}\"\nRUN wget https://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.tar.gz \\\n && tar -zxvf ant-contrib-1.0b3-bin.tar.gz \\\n && cp ant-contrib/ant-contrib-1.0b3.jar ${ANT_HOME}/lib\n#  Clone AdoptOpenJDK openjdk-tests repo\nRUN git clone https://github.com/AdoptOpenJDK/openjdk-tests.git\nENV TEST_JDK_HOME=\"$JAVA_HOME\"\nENV BUILD_LIST=\"systemtest\"\nRUN cd /openjdk-tests \\\n && ./get.sh -t /openjdk-tests\n#  Generates test targets applicable to the platform, implementation and version\nRUN echo \"Generating test targets applicable to the platform, implementation and version...\" \\\n && cd /openjdk-tests/TestConfig \\\n && make -f run_configure.mk \\\n && make compile\nENTRYPOINT [\"/bin/bash\", \"/system-test.sh\"]\nCMD [\"--version\"]\n","injectedSmells":[],"originalDockerfileHash":"ee55efe14f90b643581326bdb07fab6a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   This Dockerfile in thirdpart_containers/system-test/dockerfile dir is used to create an image with\n#   AdoptOpenJDK jdk binary installed. Basic test dependent executions\n#   are installed during the building process.\n#\n#   Build system: `docker build -t adoptopenjdk-system-test -f Dockerfile ../.`\n#\n#   This Dockerfile builds image based on adoptopenjdk/openjdk8:latest.\n#   If you want to build image based on other images, please use\n#   `--build-arg list` to specify your base image\n#\n#   Build systemtest: `docker build --build-arg IMAGE_NAME=<image_name> --build-arg IMAGE_VERSION=<image_version > -t adoptopenjdk-system-test .`\nARG SDK=openjdk8\nARG IMAGE_NAME=adoptopenjdk/$SDK\nARG IMAGE_VERSION=latest\nFROM $IMAGE_NAME:$IMAGE_VERSION\n#   Install test dependent executable files\nRUN apt-get update \\\n && apt-get install ant apt-transport-https ca-certificates dirmngr curl git make unzip vim wget cpio gcc -y\n#   Install ant\nENV ANT_VERSION=\"1.10.5\"\nRUN wget --no-check-certificate https://www.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz \\\n && gunzip apache-ant-${ANT_VERSION}-bin.tar.gz \\\n && tar -xvf apache-ant-${ANT_VERSION}-bin.tar\nRUN apt-get install libtext-csv-perl libjson-perl -y\nVOLUME [\"/java\"]\n#  ENV JAVA_HOME=/java \\\n#      PATH=/java/bin:$PATH \\\n#      JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\nENV JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\n#   Install Docker module to run test framework\nRUN apt-get install libtext-csv-perl libjson-perl libxml-parser-perl -y\n#   This is the main script to run system tests.  \nCOPY ./dockerfile/system-test.sh /system-test.sh\n#   Clone the repo where the 3rd party application code and tests reside. \nWORKDIR /\nRUN pwd\nENV ANT_HOME=\"${WORKDIR}/apache-ant-${ANT_VERSION}\"\nRUN wget https://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.tar.gz \\\n && tar -zxvf ant-contrib-1.0b3-bin.tar.gz \\\n && cp ant-contrib/ant-contrib-1.0b3.jar ${ANT_HOME}/lib\n#   Clone AdoptOpenJDK openjdk-tests repo\nRUN git clone https://github.com/AdoptOpenJDK/openjdk-tests.git\nENV TEST_JDK_HOME=\"$JAVA_HOME\"\nENV BUILD_LIST=\"systemtest\"\nRUN cd /openjdk-tests \\\n && ./get.sh -t /openjdk-tests\n#   Generates test targets applicable to the platform, implementation and version\nRUN echo \"Generating test targets applicable to the platform, implementation and version...\" \\\n && cd /openjdk-tests/TestConfig \\\n && make -f run_configure.mk \\\n && make compile\nENTRYPOINT [\"/bin/bash\", \"/system-test.sh\"]\nCMD [\"--version\"]\n","originalDockerfileUglifiedHash":"0c33380f8279ef64d8a8dd4b9600766c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4cd5d010fedb8ff388eb4102f1ad60e3effe0c0e.dockerfile"}