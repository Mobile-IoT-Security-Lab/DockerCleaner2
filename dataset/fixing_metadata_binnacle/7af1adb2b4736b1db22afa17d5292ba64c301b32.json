{"seed":2913802763,"processedDockerfileHash":"a7cfd21807a6279d6fa3509306214b78","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM lsiobase/alpine:3.8 AS buildstage\n#  ############# build stage ##############\nARG DAAPD_RELEASE\nRUN echo \"**** install build packages ****\" \\\n && apk add alsa-lib-dev autoconf automake avahi-dev bash bsd-compat-headers confuse-dev curl curl-dev ffmpeg-dev file flac-dev g++ gcc gettext-dev gnutls-dev gperf json-c-dev libcurl libevent-dev libgcrypt-dev libogg-dev libplist-dev libressl-dev libsodium-dev libtool libunistring-dev libwebsockets-dev make openjdk8-jre-base protobuf-c-dev sqlite-dev taglib-dev tar --no-cache \\\n && apk add libantlr3c-dev mxml-dev --no-cache --repository http://nl.alpinelinux.org/alpine/edge/testing \\\n && echo \"**** make antlr wrapper and compile forked-daapd ****\" \\\n && mkdir -p /tmp/source/forked-daapd \\\n && echo \"#!/bin/bash\" > /tmp/source/antlr3 \\\n && echo \"exec java -cp /tmp/source/antlr-3.4-complete.jar org.antlr.Tool \\\"$@\\\"\" >> /tmp/source/antlr3 \\\n && chmod a+x /tmp/source/antlr3 \\\n && curl -o /tmp/source/antlr-3.4-complete.jar -L http://www.antlr3.org/download/antlr-3.4-complete.jar \\\n && if [ -z ${DAAPD_RELEASE+x} ] ; then DAAPD_RELEASE=$( curl -sX GET \"https://api.github.com/repos/ejurgensen/forked-daapd/releases/latest\" | awk '/tag_name/{print $4;exit}' FS='[\"\"]' ;) ; fi \\\n && curl -o /tmp/source/forked.tar.gz -L \"https://github.com/ejurgensen/forked-daapd/archive/${DAAPD_RELEASE}.tar.gz\" \\\n && tar xf /tmp/source/forked.tar.gz -C /tmp/source/forked-daapd --strip-components=1 \\\n && export PATH=\"/tmp/source:$PATH\" \\\n && cd /tmp/source/forked-daapd \\\n && autoreconf -i -v \\\n && ./configure --build=$CBUILD --disable-avcodecsend --enable-chromecast --enable-itunes --enable-lastfm --enable-mpd --host=$CHOST --infodir=/usr/share/info --localstatedir=/var --mandir=/usr/share/man --prefix=/usr --sysconfdir=/etc \\\n && make \\\n && make DESTDIR=/tmp/daapd-build install \\\n && mv /tmp/daapd-build/etc/forked-daapd.conf /tmp/daapd-build/etc/forked-daapd.conf.orig\n#  ############# runtime stage ##############\nFROM lsiobase/alpine:3.8\n#   set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\nRUN echo \"**** install runtime packages ****\" \\\n && apk add avahi confuse dbus ffmpeg json-c libcurl libevent libgcrypt libplist libressl libsodium libunistring libwebsockets protobuf-c sqlite sqlite-libs --no-cache \\\n && apk add libantlr3c mxml --no-cache --repository http://nl.alpinelinux.org/alpine/edge/testing\n#   copy buildstage and local files\nCOPY --from=buildstage /tmp/daapd-build/ /\nCOPY root/ /\n#   ports and volumes\nEXPOSE 3689/tcp\nVOLUME /config /music\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM lsiobase/alpine:3.8 AS buildstage\n# ############# build stage ##############\nARG DAAPD_RELEASE\nRUN echo \"**** install build packages ****\" \\\n && apk add --no-cache alsa-lib-dev autoconf automake avahi-dev bash bsd-compat-headers confuse-dev curl curl-dev ffmpeg-dev file flac-dev g++ gcc gettext-dev gnutls-dev gperf json-c-dev libcurl libevent-dev libgcrypt-dev libogg-dev libplist-dev libressl-dev libsodium-dev libtool libunistring-dev libwebsockets-dev make openjdk8-jre-base protobuf-c-dev sqlite-dev taglib-dev tar \\\n && apk add --no-cache --repository http://nl.alpinelinux.org/alpine/edge/testing libantlr3c-dev mxml-dev \\\n && echo \"**** make antlr wrapper and compile forked-daapd ****\" \\\n && mkdir -p /tmp/source/forked-daapd \\\n && echo \"#!/bin/bash\" > /tmp/source/antlr3 \\\n && echo \"exec java -cp /tmp/source/antlr-3.4-complete.jar org.antlr.Tool \\\"$@\\\"\" >> /tmp/source/antlr3 \\\n && chmod a+x /tmp/source/antlr3 \\\n && curl -o /tmp/source/antlr-3.4-complete.jar -L http://www.antlr3.org/download/antlr-3.4-complete.jar \\\n && if [ -z ${DAAPD_RELEASE+x} ] ; then DAAPD_RELEASE=$( curl -sX GET \"https://api.github.com/repos/ejurgensen/forked-daapd/releases/latest\" | awk '/tag_name/{print $4;exit}' FS='[\"\"]' ;) ; fi \\\n && curl -o /tmp/source/forked.tar.gz -L \"https://github.com/ejurgensen/forked-daapd/archive/${DAAPD_RELEASE}.tar.gz\" \\\n && tar xf /tmp/source/forked.tar.gz -C /tmp/source/forked-daapd --strip-components=1 \\\n && export PATH=\"/tmp/source:$PATH\" \\\n && cd /tmp/source/forked-daapd \\\n && autoreconf -i -v \\\n && ./configure --build=$CBUILD --disable-avcodecsend --enable-chromecast --enable-itunes --enable-lastfm --enable-mpd --host=$CHOST --infodir=/usr/share/info --localstatedir=/var --mandir=/usr/share/man --prefix=/usr --sysconfdir=/etc \\\n && make \\\n && make DESTDIR=/tmp/daapd-build install \\\n && mv /tmp/daapd-build/etc/forked-daapd.conf /tmp/daapd-build/etc/forked-daapd.conf.orig\n# ############# runtime stage ##############\nFROM lsiobase/alpine:3.8\n#  set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\nRUN echo \"**** install runtime packages ****\" \\\n && apk add --no-cache avahi confuse dbus ffmpeg json-c libcurl libevent libgcrypt libplist libressl libsodium libunistring libwebsockets protobuf-c sqlite sqlite-libs \\\n && apk add --no-cache --repository http://nl.alpinelinux.org/alpine/edge/testing libantlr3c mxml\n#  copy buildstage and local files\nCOPY --from=buildstage /tmp/daapd-build/ /\nCOPY root/ /\n#  ports and volumes\nEXPOSE 3689/tcp\nVOLUME /config /music\n","injectedSmells":[],"originalDockerfileHash":"7e0c99181810f3d392a8a970adad1a0b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM lsiobase/alpine:3.8 AS buildstage\n#  ############# build stage ##############\nARG DAAPD_RELEASE\nRUN echo \"**** install build packages ****\" \\\n && apk add --no-cache alsa-lib-dev autoconf automake avahi-dev bash bsd-compat-headers confuse-dev curl curl-dev ffmpeg-dev file flac-dev g++ gcc gettext-dev gnutls-dev gperf json-c-dev libcurl libevent-dev libgcrypt-dev libogg-dev libplist-dev libressl-dev libsodium-dev libtool libunistring-dev libwebsockets-dev make openjdk8-jre-base protobuf-c-dev sqlite-dev taglib-dev tar \\\n && apk add --no-cache --repository http://nl.alpinelinux.org/alpine/edge/testing libantlr3c-dev mxml-dev \\\n && echo \"**** make antlr wrapper and compile forked-daapd ****\" \\\n && mkdir -p /tmp/source/forked-daapd \\\n && echo \"#!/bin/bash\" > /tmp/source/antlr3 \\\n && echo \"exec java -cp /tmp/source/antlr-3.4-complete.jar org.antlr.Tool \\\"$@\\\"\" >> /tmp/source/antlr3 \\\n && chmod a+x /tmp/source/antlr3 \\\n && curl -o /tmp/source/antlr-3.4-complete.jar -L http://www.antlr3.org/download/antlr-3.4-complete.jar \\\n && if [ -z ${DAAPD_RELEASE+x} ] ; then DAAPD_RELEASE=$( curl -sX GET \"https://api.github.com/repos/ejurgensen/forked-daapd/releases/latest\" | awk '/tag_name/{print $4;exit}' FS='[\"\"]' ;) ; fi \\\n && curl -o /tmp/source/forked.tar.gz -L \"https://github.com/ejurgensen/forked-daapd/archive/${DAAPD_RELEASE}.tar.gz\" \\\n && tar xf /tmp/source/forked.tar.gz -C /tmp/source/forked-daapd --strip-components=1 \\\n && export PATH=\"/tmp/source:$PATH\" \\\n && cd /tmp/source/forked-daapd \\\n && autoreconf -i -v \\\n && ./configure --build=$CBUILD --disable-avcodecsend --enable-chromecast --enable-itunes --enable-lastfm --enable-mpd --host=$CHOST --infodir=/usr/share/info --localstatedir=/var --mandir=/usr/share/man --prefix=/usr --sysconfdir=/etc \\\n && make \\\n && make DESTDIR=/tmp/daapd-build install \\\n && mv /tmp/daapd-build/etc/forked-daapd.conf /tmp/daapd-build/etc/forked-daapd.conf.orig\n#  ############# runtime stage ##############\nFROM lsiobase/alpine:3.8\n#   set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\nRUN echo \"**** install runtime packages ****\" \\\n && apk add --no-cache avahi confuse dbus ffmpeg json-c libcurl libevent libgcrypt libplist libressl libsodium libunistring libwebsockets protobuf-c sqlite sqlite-libs \\\n && apk add --no-cache --repository http://nl.alpinelinux.org/alpine/edge/testing libantlr3c mxml\n#   copy buildstage and local files\nCOPY --from=buildstage /tmp/daapd-build/ /\nCOPY root/ /\n#   ports and volumes\nEXPOSE 3689/tcp\nVOLUME /config /music\n","originalDockerfileUglifiedHash":"93bf001445179d736312598bb0e5e19b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7af1adb2b4736b1db22afa17d5292ba64c301b32.dockerfile"}