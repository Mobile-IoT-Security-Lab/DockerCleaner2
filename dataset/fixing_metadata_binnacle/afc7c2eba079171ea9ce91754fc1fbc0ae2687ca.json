{"seed":994084779,"processedDockerfileHash":"a43e9579ad3329353fbc750232f292a9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Axelle Apvrille \nENV REFRESHED_AT=\"2019-03-04\"\nARG DEBIAN_FRONTEND=noninteractive\nENV SMALI_VERSION=\"\\\"2.2.6\\\"\"\nENV APKTOOL_VERSION=\"\\\"2.4.0\\\"\"\nENV JD_VERSION=\"\\\"1.4.0\\\"\"\nENV PROCYON_VERSION=\"\\\"0.5.30\\\"\"\nENV ANDROID_SDK_VERSION=\"\\\"4333796\\\"\"\nENV FRIDA_VERSION=\"\\\"12.4.0\\\"\"\nENV SSH_PASSWORD=\"\\\"rootpass\\\"\"\nENV VNC_PASSWORD=\"\\\"rootpass\\\"\"\nENV USER=\"root\"\nENV TERM=\"xterm\"\n#   System install ------------------------------\nRUN dpkg --add-architecture i386\nRUN apt-get update \\\n && apt-get install --no-install-recommends default-jdk=2:1.8-56ubuntu2 software-properties-common=0.96.20.10 unzip=6.0-20ubuntu1.1 zip=3.0-11 wget=1.17.1-1ubuntu1.5 git=1:2.7.4-0ubuntu1.10 androguard=2.0-1 build-essential=12.1ubuntu2 emacs=46.1 vim=2:7.4.1689-3ubuntu1.5 nano=2.5.3-2ubuntu2 iptables=1.6.0-2ubuntu3 iputils-ping=3:20121221-5ubuntu2 python-protobuf=2.6.1-1.3 python-pip=8.1.1-2ubuntu0.6 python-crypto=2.6.1-6ubuntu0.16.04.3 protobuf-compiler=2.6.1-1.3 libprotobuf-java=2.6.1-1.3 apt-transport-https=1.2.35 openssh-server=1:7.2p2-4ubuntu2.10 ssh=1:7.2p2-4ubuntu2.10 telnet=0.17-40 gdb-multiarch=7.11.1-0ubuntu1~16.5 eog=3.18.2-1ubuntu2.1 p7zip-full=9.20.1~dfsg.1-4.2ubuntu0.1 curl=7.47.0-1ubuntu2.19 pkg-config=0.29.1-0ubuntu1 tree=1.7.0-3 firefox=88.0+build2-0ubuntu0.16.04.1 python3=3.5.1-3 qemu-kvm=1:2.5+dfsg-5ubuntu10.51 libvirt-bin=1.3.1-1ubuntu10.31 ubuntu-vm-builder=0.12.4+bzr494-0ubuntu1 bridge-utils=1.5-9ubuntu1 libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1=1:1.2.8.dfsg-2ubuntu4.3 libbz2-1.0:i386 xvfb=2:1.18.4-0ubuntu0.12 x11vnc=0.9.13-1.2build1 xfce4=4.12.2 xfce4-terminal=0.6.3-2ubuntu1 supervisor=3.2.0-2ubuntu0.2 -yqq \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip install pip==23.1 --upgrade\n#   We need supervisor to launch ssh and vnc\nRUN mkdir -p /var/log/supervisor\n#   Install SSH access\nRUN mkdir /var/run/sshd\nRUN echo \"root:$SSH_PASSWORD\" | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN echo \"X11UseLocalhost no\" >> /etc/ssh/sshd_config\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   SSH login fix. Otherwise user is kicked off after login\n#   Install VNC server - we need GLX support for Android emulator\nRUN mkdir ~/.vnc\nRUN x11vnc -storepasswd $VNC_PASSWORD ~/.vnc/passwd\nRUN echo '#!/bin/bash' >> /root/startXvfb.sh\nRUN echo \"Xvfb :1 +extension GLX +render -noreset -screen 0 1280x1024x24& DISPLAY=:1 /usr/bin/xfce4-session >> /root/xsession.log 2>&1 &\" >> /root/startXvfb.sh\nRUN echo \"x11vnc -loop -usepw -display :1\" >> /root/startXvfb.sh\nRUN echo \"exit 0\" >> /root/startXvfb.sh\n#   Configure supervisor\nRUN echo \"[supervisord]\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"nodaemon=true\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"[program:sshd]\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"command=/usr/sbin/sshd -D\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"[program:startxvfb]\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"command=/bin/sh /root/startXvfb.sh\" >> /etc/supervisor/conf.d/supervisord.conf\n#  RUN echo \"[program:vnc]\" >> /etc/supervisor/conf.d/supervisord.conf\n#  RUN echo \"command=/root/vnc.sh\" >> /etc/supervisor/conf.d/supervisord.conf\n#   NodeJS & NPM useful for some labs and r2frida\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 -y\n#   Android Reverse Engineering tools -------------\nRUN mkdir -p /opt\n#   Install Smali / Baksmali\nRUN wget -q -O \"/opt/smali.jar\" \"https://bitbucket.org/JesusFreke/smali/downloads/smali-$SMALI_VERSION.jar\"\nRUN wget -q -O \"/opt/baksmali.jar\" \"https://bitbucket.org/JesusFreke/smali/downloads/baksmali-$SMALI_VERSION.jar\"\n#   Apktool\nRUN mkdir -p /opt/apktool\nRUN wget -q -O \"/opt/apktool/apktool\" https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool\nRUN wget -q -O \"/opt/apktool/apktool.jar\" https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_$APKTOOL_VERSION.jar\nRUN chmod u+x /opt/apktool/apktool /opt/apktool/apktool.jar\nENV PATH=\"$PATH:/opt/apktool\"\n#   Dex2Jar\nRUN wget -q -O \"/opt/dex2jar-2.0.zip\" http://downloads.sourceforge.net/project/dex2jar/dex2jar-2.0.zip \\\n && cd /opt \\\n && unzip /opt/dex2jar-2.0.zip \\\n && chmod u+x /opt/dex2jar-2.0/*.sh \\\n && rm -f /opt/dex2jar-2.0.zip\nENV PATH=\"$PATH:/opt/dex2jar-2.0\"\n#   JD-GUI\nRUN wget -q -O \"/opt/jd-gui.jar\" \"https://github.com/java-decompiler/jd-gui/releases/download/v$JD_VERSION/jd-gui-$JD_VERSION.jar\"\nRUN cd /opt \\\n && git clone https://github.com/kwart/jd-cmd\n#   JADX\nRUN cd /opt \\\n && git clone https://github.com/skylot/jadx.git\nRUN cd /opt/jadx \\\n && ./gradlew dist\n#   Procyon\nRUN wget -q -O \"/opt/procyon-decompiler.jar\" \"https://bitbucket.org/mstrobel/procyon/downloads/procyon-decompiler-$PROCYON_VERSION.jar\"\n#   Krakatau\nRUN cd /opt \\\n && git clone https://github.com/Storyyeller/Krakatau\n#   APKiD\n#  RUN cd /opt && git clone https://github.com/rednaga/APKiD\n#  RUN cd /opt/APKiD && git clone https://github.com/rednaga/yara-python\n#  RUN cd /opt/APKiD/yara-python && python setup.py install\n#  RUN cd /opt/APKiD && pip install apkid\n#   AXMLPrinter\nRUN cd /opt \\\n && git clone https://github.com/rednaga/axmlprinter\nRUN cd /opt/axmlprinter \\\n && ./gradlew jar\n#   Google Play API\nRUN cd /opt \\\n && git clone https://github.com/egirault/googleplay-api\n#   Google Play crawler\nRUN wget -q -O \"/opt/googleplaycrawler.jar\" https://raw.githubusercontent.com/Akdeniz/google-play-crawler/master/googleplay/googleplaycrawler-0.3.jar\n#   Google Play downloader\nRUN cd /opt \\\n && git clone https://github.com/bluemutedwisdom/google-play-downloader\n#   Radare2\nRUN cd /opt \\\n && git clone https://github.com/radare/radare2\nRUN cd /opt/radare2 \\\n && sys/install.sh \\\n && make symstall \\\n && r2pm init \\\n && pip install r2pipe==1.8.0\n#   Frida\nRUN pip install frida==16.0.13 \\\n && pip install frida==16.0.13 --upgrade \\\n && pip install frida-tools==12.1.1\nRUN cd /opt \\\n && wget -q -O \"/opt/frida-server.xz\" https://github.com/frida/frida/releases/download/${FRIDA_VERSION}/frida-server-${FRIDA_VERSION}-android-arm.xz \\\n && unxz /opt/frida-server.xz\n#  RUN r2pm -i r2frida\nRUN echo \"#!/bin/bash\" >> /opt/install-frida-server.sh\nRUN echo \"adb push /opt/frida-server /data/local/tmp/\" >> /opt/install-frida-server.sh\nRUN echo \"adb shell \\\"chmod 755 /data/local/tmp/frida-server\\\"\" >> /opt/install-frida-server.sh\nRUN chmod u+x /opt/install-frida-server.sh\n#   Simplify\n#  RUN cd /opt && git clone --recursive https://github.com/CalebFenton/simplify.git && cd simplify && ./gradlew fatjar && cd /opt && ln -s /opt/simplify/simplify/build/libs/simplify.jar simplify.jar\n#   Other tools with simple install\nRUN wget -q -O \"/opt/oat2dex.py\" https://github.com/jakev/oat2dex-python/blob/master/oat2dex.py\nRUN wget -q -O \"/opt/extract.sh\" https://gist.githubusercontent.com/PaulSec/39245428eb74577c5234/raw/4ff2c87fbe35c0cfdb55af063a6fee072622f292/extract.sh \\\n && sed -i 's/\\/path\\/to\\/jd-gui/java -jar \\/opt\\/jd-gui\\.jar/g' /opt/extract.sh \\\n && sed -i 's/\\/path\\/to\\/dex2jar-0.0.9.15\\/d2j-dex2jar\\.sh/\\/opt\\/dex2jar-2\\.0\\/d2j-dex2jar\\.sh/g' /opt/extract.sh \\\n && chmod +x /opt/extract.sh\nRUN mkdir -p /opt/jebPlugins \\\n && wget -q -O \"/opt/jebPlugins/DeCluster.java\" https://raw.githubusercontent.com/CunningLogic/myJEBPlugins/master/DeCluster.java\nRUN wget -q -O \"/opt/ClassyShark.jar\" https://github.com/google/android-classyshark/releases/download/6.7/ClassyShark.jar\n#  RUN wget -q -O \"/opt/androarsc.py\" https://raw.githubusercontent.com/androguard/androguard/master/androarsc.py\nRUN wget -q -O \"/opt/cfr_0_118.jar\" http://www.benf.org/other/cfr/cfr_0_118.jar\nRUN cd /opt \\\n && git clone https://github.com/Storyyeller/enjarify \\\n && ln -s /opt/enjarify/enjarify.sh /usr/bin/enjarify\nRUN cd /opt \\\n && wget -q -O \"/opt/parse_apk.py\" https://raw.githubusercontent.com/cryptax/dextools/master/parseapk/parse_apk.py \\\n && wget -q -O \"/opt/dexview.py\" https://raw.githubusercontent.com/cryptax/dextools/master/dexview/dexview.py\n#   IDA Pro Demo\nRUN wget -q -O \"/opt/idafree70_linux.run\" https://out7.hex-rays.com/files/idafree70_linux.run \\\n && chmod u+x /opt/idafree70_linux.run\n#   Android emulator\nRUN wget -q -O \"/opt/tools-linux.zip\" https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_SDK_VERSION.zip\nRUN unzip /opt/tools-linux.zip -d /opt/android-sdk-linux\nRUN rm -f /opt/tools-linux.zip\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV PATH=\"$PATH:/opt:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools\"\nRUN echo y | /opt/android-sdk-linux/tools/bin/sdkmanager --update\nRUN echo \"yes\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"emulator\" \"tools\" \"platform-tools\" \"build-tools;28.0.3\" \"ndk-bundle\" \"platforms;android-22\" \"platforms;android-23\" \"platforms;android-25\" \"platforms;android-28\" \"system-images;android-22;default;armeabi-v7a\" \"system-images;android-23;google_apis;armeabi-v7a\" \"system-images;android-25;google_apis;armeabi-v7a\" \"system-images;android-28;google_apis_playstore;x86_64\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android51\" -k \"system-images;android-22;default;armeabi-v7a\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android60\" -k \"system-images;android-23;google_apis;armeabi-v7a\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android711\" -k \"system-images;android-25;google_apis;armeabi-v7a\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android9_x86_64\" -k \"system-images;android-28;google_apis_playstore;x86_64\"\n#  RUN mkdir ${ANDROID_HOME}/tools/keymaps && touch ${ANDROID_HOME}/tools/keymaps/en-us\nENV LD_LIBRARY_PATH=\"${ANDROID_HOME}/emulator/lib64/qt/lib:${ANDROID_HOME}/emulator/lib64/gles_swiftshader/\"\n#   Cleaning up and final setup -------------------------\nRUN apt-get autoremove -yqq\nRUN apt-get clean\nRUN echo \"export PATH=$PATH\" >> /etc/profile\nRUN echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH\" >> /etc/profile\nRUN echo \"alias emulator='/opt/android-sdk-linux/emulator/emulator64-arm -avd Android51 -no-audio -partition-size 512 -no-boot-anim'\" >> /root/.bashrc\nRUN echo \"alias emulator7='/opt/android-sdk-linux/emulator/emulator64-arm -avd Android711 -no-audio -no-boot-anim'\" >> /root/.bashrc\nRUN echo \"alias emulator9='/opt/android-sdk-linux/tools/emulator -avd Android9_x86_64 -no-audio -no-boot-anim'\" >> /root/.bashrc\nRUN echo \"export LC_ALL=C\" >> /root/.bashrc\nRUN mkdir -p /workshop\nWORKDIR /workshop\nVOLUME [\"/data\"] # to be used for instance to pass along samples\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\nEXPOSE 5554/tcp\nEXPOSE 5555/tcp\nEXPOSE 5900/tcp\nEXPOSE 5037/tcp\nEXPOSE 22/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Axelle Apvrille \nENV REFRESHED_AT=\"2019-03-04\"\nARG DEBIAN_FRONTEND=noninteractive\nENV SMALI_VERSION=\"\\\"2.2.6\\\"\"\nENV APKTOOL_VERSION=\"\\\"2.4.0\\\"\"\nENV JD_VERSION=\"\\\"1.4.0\\\"\"\nENV PROCYON_VERSION=\"\\\"0.5.30\\\"\"\nENV ANDROID_SDK_VERSION=\"\\\"4333796\\\"\"\nENV FRIDA_VERSION=\"\\\"12.4.0\\\"\"\nENV SSH_PASSWORD=\"\\\"rootpass\\\"\"\nENV VNC_PASSWORD=\"\\\"rootpass\\\"\"\nENV USER=\"root\"\nENV TERM=\"xterm\"\n#  System install ------------------------------\nRUN dpkg --add-architecture i386\nRUN apt-get update \\\n && apt-get install default-jdk software-properties-common unzip zip wget git androguard build-essential emacs vim nano iptables iputils-ping python-protobuf python-pip python-crypto protobuf-compiler libprotobuf-java apt-transport-https openssh-server ssh telnet gdb-multiarch eog p7zip-full curl pkg-config tree firefox python3 qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386 xvfb x11vnc xfce4 xfce4-terminal supervisor -yqq \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip install pip --upgrade\n#  We need supervisor to launch ssh and vnc\nRUN mkdir -p /var/log/supervisor\n#  Install SSH access\nRUN mkdir /var/run/sshd\nRUN echo \"root:$SSH_PASSWORD\" | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN echo \"X11UseLocalhost no\" >> /etc/ssh/sshd_config\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#  SSH login fix. Otherwise user is kicked off after login\n#  Install VNC server - we need GLX support for Android emulator\nRUN mkdir ~/.vnc\nRUN x11vnc -storepasswd $VNC_PASSWORD ~/.vnc/passwd\nRUN echo '#!/bin/bash' >> /root/startXvfb.sh\nRUN echo \"Xvfb :1 +extension GLX +render -noreset -screen 0 1280x1024x24& DISPLAY=:1 /usr/bin/xfce4-session >> /root/xsession.log 2>&1 &\" >> /root/startXvfb.sh\nRUN echo \"x11vnc -loop -usepw -display :1\" >> /root/startXvfb.sh\nRUN echo \"exit 0\" >> /root/startXvfb.sh\n#  Configure supervisor\nRUN echo \"[supervisord]\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"nodaemon=true\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"[program:sshd]\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"command=/usr/sbin/sshd -D\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"[program:startxvfb]\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"command=/bin/sh /root/startXvfb.sh\" >> /etc/supervisor/conf.d/supervisord.conf\n# RUN echo \"[program:vnc]\" >> /etc/supervisor/conf.d/supervisord.conf\n# RUN echo \"command=/root/vnc.sh\" >> /etc/supervisor/conf.d/supervisord.conf\n#  NodeJS & NPM useful for some labs and r2frida\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install nodejs -y\n#  Android Reverse Engineering tools -------------\nRUN mkdir -p /opt\n#  Install Smali / Baksmali\nRUN wget -q -O \"/opt/smali.jar\" \"https://bitbucket.org/JesusFreke/smali/downloads/smali-$SMALI_VERSION.jar\"\nRUN wget -q -O \"/opt/baksmali.jar\" \"https://bitbucket.org/JesusFreke/smali/downloads/baksmali-$SMALI_VERSION.jar\"\n#  Apktool\nRUN mkdir -p /opt/apktool\nRUN wget -q -O \"/opt/apktool/apktool\" https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool\nRUN wget -q -O \"/opt/apktool/apktool.jar\" https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_$APKTOOL_VERSION.jar\nRUN chmod u+x /opt/apktool/apktool /opt/apktool/apktool.jar\nENV PATH=\"$PATH:/opt/apktool\"\n#  Dex2Jar\nRUN wget -q -O \"/opt/dex2jar-2.0.zip\" http://downloads.sourceforge.net/project/dex2jar/dex2jar-2.0.zip \\\n && cd /opt \\\n && unzip /opt/dex2jar-2.0.zip \\\n && chmod u+x /opt/dex2jar-2.0/*.sh \\\n && rm -f /opt/dex2jar-2.0.zip\nENV PATH=\"$PATH:/opt/dex2jar-2.0\"\n#  JD-GUI\nRUN wget -q -O \"/opt/jd-gui.jar\" \"https://github.com/java-decompiler/jd-gui/releases/download/v$JD_VERSION/jd-gui-$JD_VERSION.jar\"\nRUN cd /opt \\\n && git clone https://github.com/kwart/jd-cmd\n#  JADX\nRUN cd /opt \\\n && git clone https://github.com/skylot/jadx.git\nRUN cd /opt/jadx \\\n && ./gradlew dist\n#  Procyon\nRUN wget -q -O \"/opt/procyon-decompiler.jar\" \"https://bitbucket.org/mstrobel/procyon/downloads/procyon-decompiler-$PROCYON_VERSION.jar\"\n#  Krakatau\nRUN cd /opt \\\n && git clone https://github.com/Storyyeller/Krakatau\n#  APKiD\n# RUN cd /opt && git clone https://github.com/rednaga/APKiD\n# RUN cd /opt/APKiD && git clone https://github.com/rednaga/yara-python\n# RUN cd /opt/APKiD/yara-python && python setup.py install\n# RUN cd /opt/APKiD && pip install apkid\n#  AXMLPrinter\nRUN cd /opt \\\n && git clone https://github.com/rednaga/axmlprinter\nRUN cd /opt/axmlprinter \\\n && ./gradlew jar\n#  Google Play API\nRUN cd /opt \\\n && git clone https://github.com/egirault/googleplay-api\n#  Google Play crawler\nRUN wget -q -O \"/opt/googleplaycrawler.jar\" https://raw.githubusercontent.com/Akdeniz/google-play-crawler/master/googleplay/googleplaycrawler-0.3.jar\n#  Google Play downloader\nRUN cd /opt \\\n && git clone https://github.com/bluemutedwisdom/google-play-downloader\n#  Radare2\nRUN cd /opt \\\n && git clone https://github.com/radare/radare2\nRUN cd /opt/radare2 \\\n && sys/install.sh \\\n && make symstall \\\n && r2pm init \\\n && pip install r2pipe\n#  Frida\nRUN pip install frida \\\n && pip install frida --upgrade \\\n && pip install frida-tools\nRUN cd /opt \\\n && wget -q -O \"/opt/frida-server.xz\" https://github.com/frida/frida/releases/download/${FRIDA_VERSION}/frida-server-${FRIDA_VERSION}-android-arm.xz \\\n && unxz /opt/frida-server.xz\n# RUN r2pm -i r2frida\nRUN echo \"#!/bin/bash\" >> /opt/install-frida-server.sh\nRUN echo \"adb push /opt/frida-server /data/local/tmp/\" >> /opt/install-frida-server.sh\nRUN echo \"adb shell \\\"chmod 755 /data/local/tmp/frida-server\\\"\" >> /opt/install-frida-server.sh\nRUN chmod u+x /opt/install-frida-server.sh\n#  Simplify\n# RUN cd /opt && git clone --recursive https://github.com/CalebFenton/simplify.git && cd simplify && ./gradlew fatjar && cd /opt && ln -s /opt/simplify/simplify/build/libs/simplify.jar simplify.jar\n#  Other tools with simple install\nRUN wget -q -O \"/opt/oat2dex.py\" https://github.com/jakev/oat2dex-python/blob/master/oat2dex.py\nRUN wget -q -O \"/opt/extract.sh\" https://gist.githubusercontent.com/PaulSec/39245428eb74577c5234/raw/4ff2c87fbe35c0cfdb55af063a6fee072622f292/extract.sh \\\n && sed -i 's/\\/path\\/to\\/jd-gui/java -jar \\/opt\\/jd-gui\\.jar/g' /opt/extract.sh \\\n && sed -i 's/\\/path\\/to\\/dex2jar-0.0.9.15\\/d2j-dex2jar\\.sh/\\/opt\\/dex2jar-2\\.0\\/d2j-dex2jar\\.sh/g' /opt/extract.sh \\\n && chmod +x /opt/extract.sh\nRUN mkdir -p /opt/jebPlugins \\\n && wget -q -O \"/opt/jebPlugins/DeCluster.java\" https://raw.githubusercontent.com/CunningLogic/myJEBPlugins/master/DeCluster.java\nRUN wget -q -O \"/opt/ClassyShark.jar\" https://github.com/google/android-classyshark/releases/download/6.7/ClassyShark.jar\n# RUN wget -q -O \"/opt/androarsc.py\" https://raw.githubusercontent.com/androguard/androguard/master/androarsc.py\nRUN wget -q -O \"/opt/cfr_0_118.jar\" http://www.benf.org/other/cfr/cfr_0_118.jar\nRUN cd /opt \\\n && git clone https://github.com/Storyyeller/enjarify \\\n && ln -s /opt/enjarify/enjarify.sh /usr/bin/enjarify\nRUN cd /opt \\\n && wget -q -O \"/opt/parse_apk.py\" https://raw.githubusercontent.com/cryptax/dextools/master/parseapk/parse_apk.py \\\n && wget -q -O \"/opt/dexview.py\" https://raw.githubusercontent.com/cryptax/dextools/master/dexview/dexview.py\n#  IDA Pro Demo\nRUN wget -q -O \"/opt/idafree70_linux.run\" https://out7.hex-rays.com/files/idafree70_linux.run \\\n && chmod u+x /opt/idafree70_linux.run\n#  Android emulator\nRUN wget -q -O \"/opt/tools-linux.zip\" https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_SDK_VERSION.zip\nRUN unzip /opt/tools-linux.zip -d /opt/android-sdk-linux\nRUN rm -f /opt/tools-linux.zip\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV PATH=\"$PATH:/opt:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools\"\nRUN echo y | /opt/android-sdk-linux/tools/bin/sdkmanager --update\nRUN echo \"yes\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"emulator\" \"tools\" \"platform-tools\" \"build-tools;28.0.3\" \"ndk-bundle\" \"platforms;android-22\" \"platforms;android-23\" \"platforms;android-25\" \"platforms;android-28\" \"system-images;android-22;default;armeabi-v7a\" \"system-images;android-23;google_apis;armeabi-v7a\" \"system-images;android-25;google_apis;armeabi-v7a\" \"system-images;android-28;google_apis_playstore;x86_64\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android51\" -k \"system-images;android-22;default;armeabi-v7a\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android60\" -k \"system-images;android-23;google_apis;armeabi-v7a\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android711\" -k \"system-images;android-25;google_apis;armeabi-v7a\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android9_x86_64\" -k \"system-images;android-28;google_apis_playstore;x86_64\"\n# RUN mkdir ${ANDROID_HOME}/tools/keymaps && touch ${ANDROID_HOME}/tools/keymaps/en-us\nENV LD_LIBRARY_PATH=\"${ANDROID_HOME}/emulator/lib64/qt/lib:${ANDROID_HOME}/emulator/lib64/gles_swiftshader/\"\n#  Cleaning up and final setup -------------------------\nRUN apt-get autoremove -yqq\nRUN apt-get clean\nRUN echo \"export PATH=$PATH\" >> /etc/profile\nRUN echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH\" >> /etc/profile\nRUN echo \"alias emulator='/opt/android-sdk-linux/emulator/emulator64-arm -avd Android51 -no-audio -partition-size 512 -no-boot-anim'\" >> /root/.bashrc\nRUN echo \"alias emulator7='/opt/android-sdk-linux/emulator/emulator64-arm -avd Android711 -no-audio -no-boot-anim'\" >> /root/.bashrc\nRUN echo \"alias emulator9='/opt/android-sdk-linux/tools/emulator -avd Android9_x86_64 -no-audio -no-boot-anim'\" >> /root/.bashrc\nRUN echo \"export LC_ALL=C\" >> /root/.bashrc\nRUN mkdir -p /workshop\nWORKDIR /workshop\nVOLUME [\"/data\"] # to be used for instance to pass along samples\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\nEXPOSE 5554/tcp\nEXPOSE 5555/tcp\nEXPOSE 5900/tcp\nEXPOSE 5037/tcp\nEXPOSE 22/tcp\n","injectedSmells":[],"originalDockerfileHash":"19915018e977fc713d29a99b3b4087ab","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Axelle Apvrille \nENV REFRESHED_AT=\"2019-03-04\"\nARG DEBIAN_FRONTEND=noninteractive\nENV SMALI_VERSION=\"\\\"2.2.6\\\"\"\nENV APKTOOL_VERSION=\"\\\"2.4.0\\\"\"\nENV JD_VERSION=\"\\\"1.4.0\\\"\"\nENV PROCYON_VERSION=\"\\\"0.5.30\\\"\"\nENV ANDROID_SDK_VERSION=\"\\\"4333796\\\"\"\nENV FRIDA_VERSION=\"\\\"12.4.0\\\"\"\nENV SSH_PASSWORD=\"\\\"rootpass\\\"\"\nENV VNC_PASSWORD=\"\\\"rootpass\\\"\"\nENV USER=\"root\"\nENV TERM=\"xterm\"\n#   System install ------------------------------\nRUN dpkg --add-architecture i386\nRUN apt-get update \\\n && apt-get install default-jdk software-properties-common unzip zip wget git androguard build-essential emacs vim nano iptables iputils-ping python-protobuf python-pip python-crypto protobuf-compiler libprotobuf-java apt-transport-https openssh-server ssh telnet gdb-multiarch eog p7zip-full curl pkg-config tree firefox python3 qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386 xvfb x11vnc xfce4 xfce4-terminal supervisor -yqq \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip install pip --upgrade\n#   We need supervisor to launch ssh and vnc\nRUN mkdir -p /var/log/supervisor\n#   Install SSH access\nRUN mkdir /var/run/sshd\nRUN echo \"root:$SSH_PASSWORD\" | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN echo \"X11UseLocalhost no\" >> /etc/ssh/sshd_config\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   SSH login fix. Otherwise user is kicked off after login\n#   Install VNC server - we need GLX support for Android emulator\nRUN mkdir ~/.vnc\nRUN x11vnc -storepasswd $VNC_PASSWORD ~/.vnc/passwd\nRUN echo '#!/bin/bash' >> /root/startXvfb.sh\nRUN echo \"Xvfb :1 +extension GLX +render -noreset -screen 0 1280x1024x24& DISPLAY=:1 /usr/bin/xfce4-session >> /root/xsession.log 2>&1 &\" >> /root/startXvfb.sh\nRUN echo \"x11vnc -loop -usepw -display :1\" >> /root/startXvfb.sh\nRUN echo \"exit 0\" >> /root/startXvfb.sh\n#   Configure supervisor\nRUN echo \"[supervisord]\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"nodaemon=true\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"[program:sshd]\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"command=/usr/sbin/sshd -D\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"[program:startxvfb]\" >> /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"command=/bin/sh /root/startXvfb.sh\" >> /etc/supervisor/conf.d/supervisord.conf\n#  RUN echo \"[program:vnc]\" >> /etc/supervisor/conf.d/supervisord.conf\n#  RUN echo \"command=/root/vnc.sh\" >> /etc/supervisor/conf.d/supervisord.conf\n#   NodeJS & NPM useful for some labs and r2frida\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install nodejs -y\n#   Android Reverse Engineering tools -------------\nRUN mkdir -p /opt\n#   Install Smali / Baksmali\nRUN wget -q -O \"/opt/smali.jar\" \"https://bitbucket.org/JesusFreke/smali/downloads/smali-$SMALI_VERSION.jar\"\nRUN wget -q -O \"/opt/baksmali.jar\" \"https://bitbucket.org/JesusFreke/smali/downloads/baksmali-$SMALI_VERSION.jar\"\n#   Apktool\nRUN mkdir -p /opt/apktool\nRUN wget -q -O \"/opt/apktool/apktool\" https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool\nRUN wget -q -O \"/opt/apktool/apktool.jar\" https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_$APKTOOL_VERSION.jar\nRUN chmod u+x /opt/apktool/apktool /opt/apktool/apktool.jar\nENV PATH=\"$PATH:/opt/apktool\"\n#   Dex2Jar\nRUN wget -q -O \"/opt/dex2jar-2.0.zip\" http://downloads.sourceforge.net/project/dex2jar/dex2jar-2.0.zip \\\n && cd /opt \\\n && unzip /opt/dex2jar-2.0.zip \\\n && chmod u+x /opt/dex2jar-2.0/*.sh \\\n && rm -f /opt/dex2jar-2.0.zip\nENV PATH=\"$PATH:/opt/dex2jar-2.0\"\n#   JD-GUI\nRUN wget -q -O \"/opt/jd-gui.jar\" \"https://github.com/java-decompiler/jd-gui/releases/download/v$JD_VERSION/jd-gui-$JD_VERSION.jar\"\nRUN cd /opt \\\n && git clone https://github.com/kwart/jd-cmd\n#   JADX\nRUN cd /opt \\\n && git clone https://github.com/skylot/jadx.git\nRUN cd /opt/jadx \\\n && ./gradlew dist\n#   Procyon\nRUN wget -q -O \"/opt/procyon-decompiler.jar\" \"https://bitbucket.org/mstrobel/procyon/downloads/procyon-decompiler-$PROCYON_VERSION.jar\"\n#   Krakatau\nRUN cd /opt \\\n && git clone https://github.com/Storyyeller/Krakatau\n#   APKiD\n#  RUN cd /opt && git clone https://github.com/rednaga/APKiD\n#  RUN cd /opt/APKiD && git clone https://github.com/rednaga/yara-python\n#  RUN cd /opt/APKiD/yara-python && python setup.py install\n#  RUN cd /opt/APKiD && pip install apkid\n#   AXMLPrinter\nRUN cd /opt \\\n && git clone https://github.com/rednaga/axmlprinter\nRUN cd /opt/axmlprinter \\\n && ./gradlew jar\n#   Google Play API\nRUN cd /opt \\\n && git clone https://github.com/egirault/googleplay-api\n#   Google Play crawler\nRUN wget -q -O \"/opt/googleplaycrawler.jar\" https://raw.githubusercontent.com/Akdeniz/google-play-crawler/master/googleplay/googleplaycrawler-0.3.jar\n#   Google Play downloader\nRUN cd /opt \\\n && git clone https://github.com/bluemutedwisdom/google-play-downloader\n#   Radare2\nRUN cd /opt \\\n && git clone https://github.com/radare/radare2\nRUN cd /opt/radare2 \\\n && sys/install.sh \\\n && make symstall \\\n && r2pm init \\\n && pip install r2pipe\n#   Frida\nRUN pip install frida \\\n && pip install frida --upgrade \\\n && pip install frida-tools\nRUN cd /opt \\\n && wget -q -O \"/opt/frida-server.xz\" https://github.com/frida/frida/releases/download/${FRIDA_VERSION}/frida-server-${FRIDA_VERSION}-android-arm.xz \\\n && unxz /opt/frida-server.xz\n#  RUN r2pm -i r2frida\nRUN echo \"#!/bin/bash\" >> /opt/install-frida-server.sh\nRUN echo \"adb push /opt/frida-server /data/local/tmp/\" >> /opt/install-frida-server.sh\nRUN echo \"adb shell \\\"chmod 755 /data/local/tmp/frida-server\\\"\" >> /opt/install-frida-server.sh\nRUN chmod u+x /opt/install-frida-server.sh\n#   Simplify\n#  RUN cd /opt && git clone --recursive https://github.com/CalebFenton/simplify.git && cd simplify && ./gradlew fatjar && cd /opt && ln -s /opt/simplify/simplify/build/libs/simplify.jar simplify.jar\n#   Other tools with simple install\nRUN wget -q -O \"/opt/oat2dex.py\" https://github.com/jakev/oat2dex-python/blob/master/oat2dex.py\nRUN wget -q -O \"/opt/extract.sh\" https://gist.githubusercontent.com/PaulSec/39245428eb74577c5234/raw/4ff2c87fbe35c0cfdb55af063a6fee072622f292/extract.sh \\\n && sed -i 's/\\/path\\/to\\/jd-gui/java -jar \\/opt\\/jd-gui\\.jar/g' /opt/extract.sh \\\n && sed -i 's/\\/path\\/to\\/dex2jar-0.0.9.15\\/d2j-dex2jar\\.sh/\\/opt\\/dex2jar-2\\.0\\/d2j-dex2jar\\.sh/g' /opt/extract.sh \\\n && chmod +x /opt/extract.sh\nRUN mkdir -p /opt/jebPlugins \\\n && wget -q -O \"/opt/jebPlugins/DeCluster.java\" https://raw.githubusercontent.com/CunningLogic/myJEBPlugins/master/DeCluster.java\nRUN wget -q -O \"/opt/ClassyShark.jar\" https://github.com/google/android-classyshark/releases/download/6.7/ClassyShark.jar\n#  RUN wget -q -O \"/opt/androarsc.py\" https://raw.githubusercontent.com/androguard/androguard/master/androarsc.py\nRUN wget -q -O \"/opt/cfr_0_118.jar\" http://www.benf.org/other/cfr/cfr_0_118.jar\nRUN cd /opt \\\n && git clone https://github.com/Storyyeller/enjarify \\\n && ln -s /opt/enjarify/enjarify.sh /usr/bin/enjarify\nRUN cd /opt \\\n && wget -q -O \"/opt/parse_apk.py\" https://raw.githubusercontent.com/cryptax/dextools/master/parseapk/parse_apk.py \\\n && wget -q -O \"/opt/dexview.py\" https://raw.githubusercontent.com/cryptax/dextools/master/dexview/dexview.py\n#   IDA Pro Demo\nRUN wget -q -O \"/opt/idafree70_linux.run\" https://out7.hex-rays.com/files/idafree70_linux.run \\\n && chmod u+x /opt/idafree70_linux.run\n#   Android emulator\nRUN wget -q -O \"/opt/tools-linux.zip\" https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_SDK_VERSION.zip\nRUN unzip /opt/tools-linux.zip -d /opt/android-sdk-linux\nRUN rm -f /opt/tools-linux.zip\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV PATH=\"$PATH:/opt:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools\"\nRUN echo y | /opt/android-sdk-linux/tools/bin/sdkmanager --update\nRUN echo \"yes\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"emulator\" \"tools\" \"platform-tools\" \"build-tools;28.0.3\" \"ndk-bundle\" \"platforms;android-22\" \"platforms;android-23\" \"platforms;android-25\" \"platforms;android-28\" \"system-images;android-22;default;armeabi-v7a\" \"system-images;android-23;google_apis;armeabi-v7a\" \"system-images;android-25;google_apis;armeabi-v7a\" \"system-images;android-28;google_apis_playstore;x86_64\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android51\" -k \"system-images;android-22;default;armeabi-v7a\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android60\" -k \"system-images;android-23;google_apis;armeabi-v7a\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android711\" -k \"system-images;android-25;google_apis;armeabi-v7a\"\nRUN echo \"no\" | /opt/android-sdk-linux/tools/bin/avdmanager create avd -n \"Android9_x86_64\" -k \"system-images;android-28;google_apis_playstore;x86_64\"\n#  RUN mkdir ${ANDROID_HOME}/tools/keymaps && touch ${ANDROID_HOME}/tools/keymaps/en-us\nENV LD_LIBRARY_PATH=\"${ANDROID_HOME}/emulator/lib64/qt/lib:${ANDROID_HOME}/emulator/lib64/gles_swiftshader/\"\n#   Cleaning up and final setup -------------------------\nRUN apt-get autoremove -yqq\nRUN apt-get clean\nRUN echo \"export PATH=$PATH\" >> /etc/profile\nRUN echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH\" >> /etc/profile\nRUN echo \"alias emulator='/opt/android-sdk-linux/emulator/emulator64-arm -avd Android51 -no-audio -partition-size 512 -no-boot-anim'\" >> /root/.bashrc\nRUN echo \"alias emulator7='/opt/android-sdk-linux/emulator/emulator64-arm -avd Android711 -no-audio -no-boot-anim'\" >> /root/.bashrc\nRUN echo \"alias emulator9='/opt/android-sdk-linux/tools/emulator -avd Android9_x86_64 -no-audio -no-boot-anim'\" >> /root/.bashrc\nRUN echo \"export LC_ALL=C\" >> /root/.bashrc\nRUN mkdir -p /workshop\nWORKDIR /workshop\nVOLUME [\"/data\"] # to be used for instance to pass along samples\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\nEXPOSE 5554/tcp\nEXPOSE 5555/tcp\nEXPOSE 5900/tcp\nEXPOSE 5037/tcp\nEXPOSE 22/tcp\n","originalDockerfileUglifiedHash":"507cfef3b0c424485d82d568e894e4bc","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/afc7c2eba079171ea9ce91754fc1fbc0ae2687ca.dockerfile"}