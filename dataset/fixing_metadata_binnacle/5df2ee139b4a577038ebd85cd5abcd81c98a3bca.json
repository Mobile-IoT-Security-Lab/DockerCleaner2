{"seed":315865322,"processedDockerfileHash":"9678fed9b53f2942e53155ea9cef8643","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  --------- Generic stuff all our Dockerfiles should start with so we get caching ------------\nFROM tomcat:8.5\nMAINTAINER thinkWhere<info@thinkwhere.com>\n#  Credit: Tim Sutton<tim@linfiniti.com>\n#   kartoza/docker-geoserver\nRUN export DEBIAN_FRONTEND=noninteractive\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg-divert --local --rename --add /sbin/initctl\n#  RUN  ln -s /bin/true /sbin/initctl\n#   Use local cached debs from host (saves your bandwidth!)\n#   Change ip below to that of your apt-cacher-ng host\n#   Or comment this line out if you do not with to use caching\nCOPY 71-apt-cacher-ng /etc/apt/apt.conf.d/71-apt-cacher-ng\nRUN :\n#  -------------Application Specific Stuff ----------------------------------------------------\nENV GS_VERSION=\"2.11.5\"\nENV GEOSERVER_DATA_DIR=\"/opt/geoserver/data_dir\"\nRUN mkdir -p $GEOSERVER_DATA_DIR\n#   Unset Java related ENVs since they may change with Oracle JDK\nENV JAVA_VERSION=\"\"\nENV JAVA_DEBIAN_VERSION=\"\"\n#   Set JAVA_HOME to /usr/lib/jvm/default-java and link it to OpenJDK installation\nRUN ln -s /usr/lib/jvm/java-8-openjdk-amd64 /usr/lib/jvm/default-java\nENV JAVA_HOME=\"/usr/lib/jvm/default-java\"\nCOPY resources /tmp/resources\n#   Optionally add JAI and ImageIO for improved performance.\nWORKDIR /tmp\nARG JAI_IMAGEIO=true\nRUN if [ \"$JAI_IMAGEIO\" = true ] ; then wget http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64.tar.gz \\\n && wget http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64.tar.gz \\\n && gunzip -c jai-1_1_3-lib-linux-amd64.tar.gz | tar xf - \\\n && gunzip -c jai_imageio-1_1-lib-linux-amd64.tar.gz | tar xf - \\\n && mv /tmp/jai-1_1_3/lib/*.jar $JAVA_HOME/jre/lib/ext/ \\\n && mv /tmp/jai-1_1_3/lib/*.so $JAVA_HOME/jre/lib/amd64/ \\\n && mv /tmp/jai_imageio-1_1/lib/*.jar $JAVA_HOME/jre/lib/ext/ \\\n && mv /tmp/jai_imageio-1_1/lib/*.so $JAVA_HOME/jre/lib/amd64/ \\\n && rm /tmp/jai-1_1_3-lib-linux-amd64.tar.gz \\\n && rm -r /tmp/jai-1_1_3 \\\n && rm /tmp/jai_imageio-1_1-lib-linux-amd64.tar.gz \\\n && rm -r /tmp/jai_imageio-1_1 ; fi\n#   Add GDAL native libraries if the build-arg GDAL_NATIVE = true\nARG GDAL_NATIVE=false\n#   EWC and JP2ECW are subjected to licence restrictions\nENV GDAL_SKIP=\"\\\"ECW JP2ECW\\\"\"\nENV GDAL_DATA=\"$CATALINA_HOME/gdal-data\"\nENV LD_LIBRARY_PATH=\"$JAVA_HOME/jre/lib/amd64/gdal\"\nRUN if [ \"$GDAL_NATIVE\" = true ] ; then wget http://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.16/native/gdal/gdal-data.zip \\\n && wget http://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.16/native/gdal/linux/gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz \\\n && unzip gdal-data.zip -d $CATALINA_HOME \\\n && mkdir $JAVA_HOME/jre/lib/amd64/gdal \\\n && tar -xvf gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz -C $LD_LIBRARY_PATH ; fi\n#   If using GDAL make sure extension is downloaded\nRUN if [ \"$GDAL_NATIVE\" = true ] \\\n && [ ! -f /tmp/resources/plugins/geoserver-gdal-plugin.zip ] ; then wget -c http://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/extensions/geoserver-${GS_VERSION}-gdal-plugin.zip -O /tmp/resources/plugins/geoserver-gdal-plugin.zip ; fi\nWORKDIR $CATALINA_HOME\n#   Fetch the geoserver war file if it\n#   is not available locally in the resources dir and\nRUN if [ ! -f /tmp/resources/geoserver.zip ] ; then wget -c http://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/geoserver-${GS_VERSION}-war.zip -O /tmp/resources/geoserver.zip ; fi ; unzip /tmp/resources/geoserver.zip -d /tmp/geoserver \\\n && unzip /tmp/geoserver/geoserver.war -d $CATALINA_HOME/webapps/geoserver \\\n && rm -rf $CATALINA_HOME/webapps/geoserver/data \\\n && rm -rf /tmp/geoserver\n#   Install any plugin zip files in resources/plugins\nRUN if ls /tmp/resources/plugins/*.zip > /dev/null 2>&1; then for p in /tmp/resources/plugins/*.zip; do unzip $p -d /tmp/gs_plugin \\\n && mv /tmp/gs_plugin/*.jar $CATALINA_HOME/webapps/geoserver/WEB-INF/lib/ \\\n && rm -rf /tmp/gs_plugin ; done ; fi\n#   Overlay files and directories in resources/overlays if they exist\nRUN if ls /tmp/resources/overlays/* > /dev/null 2>&1; then cp -rf /tmp/resources/overlays/* / ; fi\n#   install Font files in resources/fonts if they exist\nRUN if ls /tmp/resources/fonts/*.ttf > /dev/null 2>&1; then cp -rf /tmp/resources/fonts/*.ttf /usr/share/fonts/truetype/ ; fi\n#   Optionally disable GeoWebCache\n#   (Note that this forcibly removes all gwc files. This may cause errors with extensions that depend on gwc files\n#     including:  Inspire; Control-Flow; )\nARG DISABLE_GWC=false\nRUN if [ \"$DISABLE_GWC\" = true ] ; then rm $CATALINA_HOME/webapps/geoserver/WEB-INF/lib/*gwc* ; fi\n#   Optionally remove Tomcat manager, docs, and examples\nARG TOMCAT_EXTRAS=true\nRUN if [ \"$TOMCAT_EXTRAS\" = false ] ; then rm -rf $CATALINA_HOME/webapps/ROOT \\\n && rm -rf $CATALINA_HOME/webapps/docs \\\n && rm -rf $CATALINA_HOME/webapps/examples \\\n && rm -rf $CATALINA_HOME/webapps/host-manager \\\n && rm -rf $CATALINA_HOME/webapps/manager ; fi\n#   Delete resources after installation\nRUN rm -rf /tmp/resources\n#  ENV GEOSERVER_HOME /opt/geoserver\n#  ENTRYPOINT \"/opt/geoserver/bin/startup.sh\"\n#  CMD \"/opt/geoserver/bin/startup.sh\"\nEXPOSE 8080/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8080 || exit 1\n","originalDockerfile":"# --------- Generic stuff all our Dockerfiles should start with so we get caching ------------\nFROM tomcat:8.5\nMAINTAINER thinkWhere<info@thinkwhere.com>\n# Credit: Tim Sutton<tim@linfiniti.com>\n#  kartoza/docker-geoserver\nRUN export DEBIAN_FRONTEND=noninteractive\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg-divert --local --rename --add /sbin/initctl\n# RUN  ln -s /bin/true /sbin/initctl\n#  Use local cached debs from host (saves your bandwidth!)\n#  Change ip below to that of your apt-cacher-ng host\n#  Or comment this line out if you do not with to use caching\nADD 71-apt-cacher-ng /etc/apt/apt.conf.d/71-apt-cacher-ng\nRUN apt-get update -y\n# -------------Application Specific Stuff ----------------------------------------------------\nENV GS_VERSION=\"2.11.5\"\nENV GEOSERVER_DATA_DIR=\"/opt/geoserver/data_dir\"\nRUN mkdir -p $GEOSERVER_DATA_DIR\n#  Unset Java related ENVs since they may change with Oracle JDK\nENV JAVA_VERSION=\"\"\nENV JAVA_DEBIAN_VERSION=\"\"\n#  Set JAVA_HOME to /usr/lib/jvm/default-java and link it to OpenJDK installation\nRUN ln -s /usr/lib/jvm/java-8-openjdk-amd64 /usr/lib/jvm/default-java\nENV JAVA_HOME=\"/usr/lib/jvm/default-java\"\nADD resources /tmp/resources\n#  Optionally add JAI and ImageIO for improved performance.\nWORKDIR /tmp\nARG JAI_IMAGEIO=true\nRUN if [ \"$JAI_IMAGEIO\" = true ] ; then wget http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64.tar.gz \\\n && wget http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64.tar.gz \\\n && gunzip -c jai-1_1_3-lib-linux-amd64.tar.gz | tar xf - \\\n && gunzip -c jai_imageio-1_1-lib-linux-amd64.tar.gz | tar xf - \\\n && mv /tmp/jai-1_1_3/lib/*.jar $JAVA_HOME/jre/lib/ext/ \\\n && mv /tmp/jai-1_1_3/lib/*.so $JAVA_HOME/jre/lib/amd64/ \\\n && mv /tmp/jai_imageio-1_1/lib/*.jar $JAVA_HOME/jre/lib/ext/ \\\n && mv /tmp/jai_imageio-1_1/lib/*.so $JAVA_HOME/jre/lib/amd64/ \\\n && rm /tmp/jai-1_1_3-lib-linux-amd64.tar.gz \\\n && rm -r /tmp/jai-1_1_3 \\\n && rm /tmp/jai_imageio-1_1-lib-linux-amd64.tar.gz \\\n && rm -r /tmp/jai_imageio-1_1 ; fi\n#  Add GDAL native libraries if the build-arg GDAL_NATIVE = true\nARG GDAL_NATIVE=false\n#  EWC and JP2ECW are subjected to licence restrictions\nENV GDAL_SKIP=\"\\\"ECW JP2ECW\\\"\"\nENV GDAL_DATA=\"$CATALINA_HOME/gdal-data\"\nENV LD_LIBRARY_PATH=\"$JAVA_HOME/jre/lib/amd64/gdal\"\nRUN if [ \"$GDAL_NATIVE\" = true ] ; then wget http://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.16/native/gdal/gdal-data.zip \\\n && wget http://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.16/native/gdal/linux/gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz \\\n && unzip gdal-data.zip -d $CATALINA_HOME \\\n && mkdir $JAVA_HOME/jre/lib/amd64/gdal \\\n && tar -xvf gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz -C $LD_LIBRARY_PATH ; fi\n#  If using GDAL make sure extension is downloaded\nRUN if [ \"$GDAL_NATIVE\" = true ] \\\n && [ ! -f /tmp/resources/plugins/geoserver-gdal-plugin.zip ] ; then wget -c http://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/extensions/geoserver-${GS_VERSION}-gdal-plugin.zip -O /tmp/resources/plugins/geoserver-gdal-plugin.zip ; fi\nWORKDIR $CATALINA_HOME\n#  Fetch the geoserver war file if it\n#  is not available locally in the resources dir and\nRUN if [ ! -f /tmp/resources/geoserver.zip ] ; then wget -c http://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/geoserver-${GS_VERSION}-war.zip -O /tmp/resources/geoserver.zip ; fi ; unzip /tmp/resources/geoserver.zip -d /tmp/geoserver \\\n && unzip /tmp/geoserver/geoserver.war -d $CATALINA_HOME/webapps/geoserver \\\n && rm -rf $CATALINA_HOME/webapps/geoserver/data \\\n && rm -rf /tmp/geoserver\n#  Install any plugin zip files in resources/plugins\nRUN if ls /tmp/resources/plugins/*.zip > /dev/null 2>&1; then for p in /tmp/resources/plugins/*.zip; do unzip $p -d /tmp/gs_plugin \\\n && mv /tmp/gs_plugin/*.jar $CATALINA_HOME/webapps/geoserver/WEB-INF/lib/ \\\n && rm -rf /tmp/gs_plugin ; done ; fi\n#  Overlay files and directories in resources/overlays if they exist\nRUN if ls /tmp/resources/overlays/* > /dev/null 2>&1; then cp -rf /tmp/resources/overlays/* / ; fi\n#  install Font files in resources/fonts if they exist\nRUN if ls /tmp/resources/fonts/*.ttf > /dev/null 2>&1; then cp -rf /tmp/resources/fonts/*.ttf /usr/share/fonts/truetype/ ; fi\n#  Optionally disable GeoWebCache\n#  (Note that this forcibly removes all gwc files. This may cause errors with extensions that depend on gwc files\n#    including:  Inspire; Control-Flow; )\nARG DISABLE_GWC=false\nRUN if [ \"$DISABLE_GWC\" = true ] ; then rm $CATALINA_HOME/webapps/geoserver/WEB-INF/lib/*gwc* ; fi\n#  Optionally remove Tomcat manager, docs, and examples\nARG TOMCAT_EXTRAS=true\nRUN if [ \"$TOMCAT_EXTRAS\" = false ] ; then rm -rf $CATALINA_HOME/webapps/ROOT \\\n && rm -rf $CATALINA_HOME/webapps/docs \\\n && rm -rf $CATALINA_HOME/webapps/examples \\\n && rm -rf $CATALINA_HOME/webapps/host-manager \\\n && rm -rf $CATALINA_HOME/webapps/manager ; fi\n#  Delete resources after installation\nRUN rm -rf /tmp/resources\n# ENV GEOSERVER_HOME /opt/geoserver\n# ENTRYPOINT \"/opt/geoserver/bin/startup.sh\"\n# CMD \"/opt/geoserver/bin/startup.sh\"\nEXPOSE 8080/tcp\n","injectedSmells":[],"originalDockerfileHash":"46c9aafaf3777a892a6e8c1412d3b8ea","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  --------- Generic stuff all our Dockerfiles should start with so we get caching ------------\nFROM tomcat:8.5\nMAINTAINER thinkWhere<info@thinkwhere.com>\n#  Credit: Tim Sutton<tim@linfiniti.com>\n#   kartoza/docker-geoserver\nRUN export DEBIAN_FRONTEND=noninteractive\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg-divert --local --rename --add /sbin/initctl\n#  RUN  ln -s /bin/true /sbin/initctl\n#   Use local cached debs from host (saves your bandwidth!)\n#   Change ip below to that of your apt-cacher-ng host\n#   Or comment this line out if you do not with to use caching\nADD 71-apt-cacher-ng /etc/apt/apt.conf.d/71-apt-cacher-ng\nRUN apt-get update -y\n#  -------------Application Specific Stuff ----------------------------------------------------\nENV GS_VERSION=\"2.11.5\"\nENV GEOSERVER_DATA_DIR=\"/opt/geoserver/data_dir\"\nRUN mkdir -p $GEOSERVER_DATA_DIR\n#   Unset Java related ENVs since they may change with Oracle JDK\nENV JAVA_VERSION=\"\"\nENV JAVA_DEBIAN_VERSION=\"\"\n#   Set JAVA_HOME to /usr/lib/jvm/default-java and link it to OpenJDK installation\nRUN ln -s /usr/lib/jvm/java-8-openjdk-amd64 /usr/lib/jvm/default-java\nENV JAVA_HOME=\"/usr/lib/jvm/default-java\"\nADD resources /tmp/resources\n#   Optionally add JAI and ImageIO for improved performance.\nWORKDIR /tmp\nARG JAI_IMAGEIO=true\nRUN if [ \"$JAI_IMAGEIO\" = true ] ; then wget http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64.tar.gz \\\n && wget http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64.tar.gz \\\n && gunzip -c jai-1_1_3-lib-linux-amd64.tar.gz | tar xf - \\\n && gunzip -c jai_imageio-1_1-lib-linux-amd64.tar.gz | tar xf - \\\n && mv /tmp/jai-1_1_3/lib/*.jar $JAVA_HOME/jre/lib/ext/ \\\n && mv /tmp/jai-1_1_3/lib/*.so $JAVA_HOME/jre/lib/amd64/ \\\n && mv /tmp/jai_imageio-1_1/lib/*.jar $JAVA_HOME/jre/lib/ext/ \\\n && mv /tmp/jai_imageio-1_1/lib/*.so $JAVA_HOME/jre/lib/amd64/ \\\n && rm /tmp/jai-1_1_3-lib-linux-amd64.tar.gz \\\n && rm -r /tmp/jai-1_1_3 \\\n && rm /tmp/jai_imageio-1_1-lib-linux-amd64.tar.gz \\\n && rm -r /tmp/jai_imageio-1_1 ; fi\n#   Add GDAL native libraries if the build-arg GDAL_NATIVE = true\nARG GDAL_NATIVE=false\n#   EWC and JP2ECW are subjected to licence restrictions\nENV GDAL_SKIP=\"\\\"ECW JP2ECW\\\"\"\nENV GDAL_DATA=\"$CATALINA_HOME/gdal-data\"\nENV LD_LIBRARY_PATH=\"$JAVA_HOME/jre/lib/amd64/gdal\"\nRUN if [ \"$GDAL_NATIVE\" = true ] ; then wget http://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.16/native/gdal/gdal-data.zip \\\n && wget http://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.16/native/gdal/linux/gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz \\\n && unzip gdal-data.zip -d $CATALINA_HOME \\\n && mkdir $JAVA_HOME/jre/lib/amd64/gdal \\\n && tar -xvf gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz -C $LD_LIBRARY_PATH ; fi\n#   If using GDAL make sure extension is downloaded\nRUN if [ \"$GDAL_NATIVE\" = true ] \\\n && [ ! -f /tmp/resources/plugins/geoserver-gdal-plugin.zip ] ; then wget -c http://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/extensions/geoserver-${GS_VERSION}-gdal-plugin.zip -O /tmp/resources/plugins/geoserver-gdal-plugin.zip ; fi\nWORKDIR $CATALINA_HOME\n#   Fetch the geoserver war file if it\n#   is not available locally in the resources dir and\nRUN if [ ! -f /tmp/resources/geoserver.zip ] ; then wget -c http://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/geoserver-${GS_VERSION}-war.zip -O /tmp/resources/geoserver.zip ; fi ; unzip /tmp/resources/geoserver.zip -d /tmp/geoserver \\\n && unzip /tmp/geoserver/geoserver.war -d $CATALINA_HOME/webapps/geoserver \\\n && rm -rf $CATALINA_HOME/webapps/geoserver/data \\\n && rm -rf /tmp/geoserver\n#   Install any plugin zip files in resources/plugins\nRUN if ls /tmp/resources/plugins/*.zip > /dev/null 2>&1; then for p in /tmp/resources/plugins/*.zip; do unzip $p -d /tmp/gs_plugin \\\n && mv /tmp/gs_plugin/*.jar $CATALINA_HOME/webapps/geoserver/WEB-INF/lib/ \\\n && rm -rf /tmp/gs_plugin ; done ; fi\n#   Overlay files and directories in resources/overlays if they exist\nRUN if ls /tmp/resources/overlays/* > /dev/null 2>&1; then cp -rf /tmp/resources/overlays/* / ; fi\n#   install Font files in resources/fonts if they exist\nRUN if ls /tmp/resources/fonts/*.ttf > /dev/null 2>&1; then cp -rf /tmp/resources/fonts/*.ttf /usr/share/fonts/truetype/ ; fi\n#   Optionally disable GeoWebCache\n#   (Note that this forcibly removes all gwc files. This may cause errors with extensions that depend on gwc files\n#     including:  Inspire; Control-Flow; )\nARG DISABLE_GWC=false\nRUN if [ \"$DISABLE_GWC\" = true ] ; then rm $CATALINA_HOME/webapps/geoserver/WEB-INF/lib/*gwc* ; fi\n#   Optionally remove Tomcat manager, docs, and examples\nARG TOMCAT_EXTRAS=true\nRUN if [ \"$TOMCAT_EXTRAS\" = false ] ; then rm -rf $CATALINA_HOME/webapps/ROOT \\\n && rm -rf $CATALINA_HOME/webapps/docs \\\n && rm -rf $CATALINA_HOME/webapps/examples \\\n && rm -rf $CATALINA_HOME/webapps/host-manager \\\n && rm -rf $CATALINA_HOME/webapps/manager ; fi\n#   Delete resources after installation\nRUN rm -rf /tmp/resources\n#  ENV GEOSERVER_HOME /opt/geoserver\n#  ENTRYPOINT \"/opt/geoserver/bin/startup.sh\"\n#  CMD \"/opt/geoserver/bin/startup.sh\"\nEXPOSE 8080/tcp\n","originalDockerfileUglifiedHash":"a00d9cda758b13c57e534d52b5079925","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5df2ee139b4a577038ebd85cd5abcd81c98a3bca.dockerfile"}