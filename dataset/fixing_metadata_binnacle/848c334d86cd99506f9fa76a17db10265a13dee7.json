{"seed":3597261762,"processedDockerfileHash":"d70f44bea9ae3b7f04a05d1c2b48643a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.8 AS protoc_builder\nRUN apk add build-base=0.5-r1 curl=7.61.1-r3 automake=1.16.1-r0 autoconf=2.69-r2 libtool=2.4.6-r5 git=2.18.4-r0 zlib-dev=1.2.11-r1 --no-cache\nENV GRPC_VERSION=\"1.16.0\" \\\n    GRPC_JAVA_VERSION=\"1.16.1\" \\\n    GRPC_WEB_VERSION=\"1.0.0\" \\\n    PROTOBUF_VERSION=\"3.6.1\" \\\n    PROTOBUF_C_VERSION=\"1.3.1\" \\\n    PROTOC_GEN_DOC_VERSION=\"1.1.0\" \\\n    OUTDIR=\"/out\"\nRUN mkdir -p /protobuf \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOBUF_VERSION}.tar.gz | tar xvz --strip-components=1 -C /protobuf\nRUN git clone --depth 1 --recursive -b v${GRPC_VERSION} https://github.com/grpc/grpc.git /grpc \\\n && rm -rf grpc/third_party/protobuf \\\n && ln -s /protobuf /grpc/third_party/protobuf\nRUN mkdir -p /grpc-java \\\n && curl -L https://github.com/grpc/grpc-java/archive/v${GRPC_JAVA_VERSION}.tar.gz | tar xvz --strip-components=1 -C /grpc-java\nRUN mkdir -p /grpc-web \\\n && curl -L https://github.com/grpc/grpc-web/archive/${GRPC_WEB_VERSION}.tar.gz | tar xvz --strip-components=1 -C /grpc-web\nRUN mkdir -p /protobuf-c \\\n && curl -L https://github.com/protobuf-c/protobuf-c/releases/download/v${PROTOBUF_C_VERSION}/protobuf-c-${PROTOBUF_C_VERSION}.tar.gz | tar xvz --strip-components=1 -C /protobuf-c\nRUN cd /protobuf \\\n && autoreconf -f -i -Wall,no-obsolete \\\n && ./configure --prefix=/usr --enable-static=no \\\n && make -j2 \\\n && make install\nRUN cd grpc \\\n && make -j2 plugins\nRUN cd /grpc-java/compiler/src/java_plugin/cpp \\\n && g++ -I. -I/protobuf/src *.cpp -L/protobuf/src/.libs -lprotoc -lprotobuf -lpthread --std=c++0x -s -o protoc-gen-grpc-java\nRUN cd /protobuf-c \\\n && ./configure --prefix=/usr \\\n && make -j2\nRUN cd /protobuf \\\n && make install DESTDIR=${OUTDIR}\nRUN cd /grpc \\\n && make install-plugins prefix=${OUTDIR}/usr\nRUN cd /grpc-java/compiler/src/java_plugin/cpp \\\n && install -c protoc-gen-grpc-java ${OUTDIR}/usr/bin/\nRUN cd /grpc-web/javascript/net/grpc/web \\\n && make \\\n && install protoc-gen-grpc-web ${OUTDIR}/usr/bin/\nRUN cd /protobuf-c \\\n && make install DESTDIR=${OUTDIR}\nRUN find ${OUTDIR} -name \"*.a\" -delete -or -name \"*.la\" -delete\nRUN apk add go=1.10.8-r0 --no-cache\nENV GOPATH=\"/go\" \\\n    PATH=\"/go/bin/:$PATH\"\nRUN go get -u -v -ldflags '-w -s' github.com/Masterminds/glide github.com/golang/protobuf/protoc-gen-go github.com/gogo/protobuf/protoc-gen-gofast github.com/gogo/protobuf/protoc-gen-gogo github.com/gogo/protobuf/protoc-gen-gogofast github.com/gogo/protobuf/protoc-gen-gogofaster github.com/gogo/protobuf/protoc-gen-gogoslick github.com/twitchtv/twirp/protoc-gen-twirp github.com/chrusty/protoc-gen-jsonschema github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway github.com/johanbrandhorst/protobuf/protoc-gen-gopherjs github.com/ckaznocha/protoc-gen-lint github.com/mwitkow/go-proto-validators/protoc-gen-govalidators github.com/lyft/protoc-gen-validate moul.io/protoc-gen-gotemplate github.com/micro/protoc-gen-micro \\\n && (cd ${GOPATH}/src/github.com/lyft/protoc-gen-validate \\\n && make build ) \\\n && install -c ${GOPATH}/bin/protoc-gen* ${OUTDIR}/usr/bin/\nRUN mkdir -p ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc \\\n && curl -L https://github.com/pseudomuto/protoc-gen-doc/archive/v${PROTOC_GEN_DOC_VERSION}.tar.gz | tar xvz --strip 1 -C ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc\nRUN cd ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc \\\n && make build \\\n && install -c ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc/protoc-gen-doc ${OUTDIR}/usr/bin/\nFROM ubuntu:16.04 AS swift_builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential make tar xz-utils bzip2 gzip sed libz-dev unzip patchelf curl libedit-dev python2.7 python2.7-dev libxml2 git libxml2-dev uuid-dev libssl-dev bash patch -y\nENV SWIFT_VERSION=\"4.2.1\" \\\n    LLVM_VERSION=\"5.0.2\"\nRUN curl -L http://releases.llvm.org/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-16.04.tar.xz | tar --strip-components 1 -C /usr/local/ -xJv\nRUN curl -L https://swift.org/builds/swift-${SWIFT_VERSION}-release/ubuntu1604/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu16.04.tar.gz | tar --strip-components 1 -C / -xz\nENV SWIFT_PROTOBUF_VERSION=\"1.2.0\"\nRUN mkdir -p /swift-protobuf \\\n && curl -L https://github.com/apple/swift-protobuf/archive/${SWIFT_PROTOBUF_VERSION}.tar.gz | tar --strip-components 1 -C /swift-protobuf -xz\nRUN apt-get install --no-install-recommends libcurl4-openssl-dev -y\nRUN cd /swift-protobuf \\\n && swift build -c release\nRUN mkdir -p /protoc-gen-swift \\\n && cp /swift-protobuf/.build/x86_64-unknown-linux/release/protoc-gen-swift /protoc-gen-swift/\nRUN cp /lib64/ld-linux-x86-64.so.2 $( ldd /protoc-gen-swift/protoc-gen-swift | awk '{print $3}' | grep /lib | sort | uniq ;) /protoc-gen-swift/\nRUN find /protoc-gen-swift/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-swift {}\nFROM ubuntu:16.04 AS javalite_builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash patch curl patchelf -y\nENV PROTOC_GEN_JAVALITE_VERSION=\"3.0.0\"\nRUN mkdir -p /protoc-gen-javalite \\\n && curl -L https://repo1.maven.org/maven2/com/google/protobuf/protoc-gen-javalite/${PROTOC_GEN_JAVALITE_VERSION}/protoc-gen-javalite-${PROTOC_GEN_JAVALITE_VERSION}-linux-x86_64.exe > /protoc-gen-javalite/protoc-gen-javalite \\\n && chmod 755 /protoc-gen-javalite/protoc-gen-javalite\nRUN cp /lib64/ld-linux-x86-64.so.2 $( ldd /protoc-gen-javalite/protoc-gen-javalite | awk '{print $3}' | grep /lib | sort | uniq ;) /protoc-gen-javalite/\nRUN find /protoc-gen-javalite/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-javalite {}\nFROM rust:1.22.1 AS rust_builder\nENV RUST_PROTOBUF_VERSION=\"1.4.3\" \\\n    OUTDIR=\"/out\"\nRUN mkdir -p ${OUTDIR}\nRUN apt-get update \\\n && apt-get install --no-install-recommends musl-tools -y\nRUN rustup target add x86_64-unknown-linux-musl\nRUN mkdir -p /rust-protobuf \\\n && curl -L https://github.com/stepancheg/rust-protobuf/archive/v${RUST_PROTOBUF_VERSION}.tar.gz | tar xvz --strip 1 -C /rust-protobuf\nRUN cd /rust-protobuf/protobuf \\\n && RUSTFLAGS='-C linker=musl-gcc' cargo build --target=x86_64-unknown-linux-musl --release\nRUN mkdir -p ${OUTDIR}/usr/bin \\\n && strip /rust-protobuf/target/x86_64-unknown-linux-musl/release/protoc-gen-rust \\\n && install -c /rust-protobuf/target/x86_64-unknown-linux-musl/release/protoc-gen-rust ${OUTDIR}/usr/bin/\nFROM znly/upx AS packer\nCOPY --from=protoc_builder /out/ /out/\nRUN upx --lzma /out/usr/bin/protoc /out/usr/bin/grpc_* /out/usr/bin/protoc-gen-*\nFROM alpine:3.7\nRUN apk add libstdc++=6.4.0-r9 --no-cache\nCOPY --from=packer /out/ /\nCOPY --from=rust_builder /out/ /\nCOPY --from=swift_builder /protoc-gen-swift /protoc-gen-swift\nRUN for p in protoc-gen-swift protoc-gen-swiftgrpc; do ln -s /protoc-gen-swift/${p} /usr/bin/${p} ; done\nCOPY --from=javalite_builder /protoc-gen-javalite /protoc-gen-javalite\nRUN ln -s /protoc-gen-javalite/protoc-gen-javalite /usr/bin/protoc-gen-javalite\nRUN apk add curl=7.61.1-r3 --no-cache \\\n && mkdir -p /protobuf/google/protobuf \\\n && for f in any duration descriptor empty struct timestamp wrappers; do curl -L -o /protobuf/google/protobuf/${f}.proto https://raw.githubusercontent.com/google/protobuf/master/src/google/protobuf/${f}.proto ; done \\\n && mkdir -p /protobuf/google/api \\\n && for f in annotations http; do curl -L -o /protobuf/google/api/${f}.proto https://raw.githubusercontent.com/grpc-ecosystem/grpc-gateway/master/third_party/googleapis/google/api/${f}.proto ; done \\\n && mkdir -p /protobuf/github.com/gogo/protobuf/gogoproto \\\n && curl -L -o /protobuf/github.com/gogo/protobuf/gogoproto/gogo.proto https://raw.githubusercontent.com/gogo/protobuf/master/gogoproto/gogo.proto \\\n && mkdir -p /protobuf/github.com/mwitkow/go-proto-validators \\\n && curl -L -o /protobuf/github.com/mwitkow/go-proto-validators/validator.proto https://raw.githubusercontent.com/mwitkow/go-proto-validators/master/validator.proto \\\n && mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/gogoproto \\\n && mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/validate \\\n && curl -L -o /protobuf/github.com/lyft/protoc-gen-validate/gogoproto/gogo.proto https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/gogoproto/gogo.proto \\\n && curl -L -o /protobuf/github.com/lyft/protoc-gen-validate/validate/validate.proto https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/validate/validate.proto \\\n && apk del curl \\\n && chmod a+x /usr/bin/protoc\nENTRYPOINT [\"/usr/bin/protoc\", \"-I/protobuf\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.8 AS protoc_builder\nRUN apk add --no-cache build-base curl automake autoconf libtool git zlib-dev\nENV GRPC_VERSION=\"1.16.0\" \\\n    GRPC_JAVA_VERSION=\"1.16.1\" \\\n    GRPC_WEB_VERSION=\"1.0.0\" \\\n    PROTOBUF_VERSION=\"3.6.1\" \\\n    PROTOBUF_C_VERSION=\"1.3.1\" \\\n    PROTOC_GEN_DOC_VERSION=\"1.1.0\" \\\n    OUTDIR=\"/out\"\nRUN mkdir -p /protobuf \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOBUF_VERSION}.tar.gz | tar xvz --strip-components=1 -C /protobuf\nRUN git clone --depth 1 --recursive -b v${GRPC_VERSION} https://github.com/grpc/grpc.git /grpc \\\n && rm -rf grpc/third_party/protobuf \\\n && ln -s /protobuf /grpc/third_party/protobuf\nRUN mkdir -p /grpc-java \\\n && curl -L https://github.com/grpc/grpc-java/archive/v${GRPC_JAVA_VERSION}.tar.gz | tar xvz --strip-components=1 -C /grpc-java\nRUN mkdir -p /grpc-web \\\n && curl -L https://github.com/grpc/grpc-web/archive/${GRPC_WEB_VERSION}.tar.gz | tar xvz --strip-components=1 -C /grpc-web\nRUN mkdir -p /protobuf-c \\\n && curl -L https://github.com/protobuf-c/protobuf-c/releases/download/v${PROTOBUF_C_VERSION}/protobuf-c-${PROTOBUF_C_VERSION}.tar.gz | tar xvz --strip-components=1 -C /protobuf-c\nRUN cd /protobuf \\\n && autoreconf -f -i -Wall,no-obsolete \\\n && ./configure --prefix=/usr --enable-static=no \\\n && make -j2 \\\n && make install\nRUN cd grpc \\\n && make -j2 plugins\nRUN cd /grpc-java/compiler/src/java_plugin/cpp \\\n && g++ -I. -I/protobuf/src *.cpp -L/protobuf/src/.libs -lprotoc -lprotobuf -lpthread --std=c++0x -s -o protoc-gen-grpc-java\nRUN cd /protobuf-c \\\n && ./configure --prefix=/usr \\\n && make -j2\nRUN cd /protobuf \\\n && make install DESTDIR=${OUTDIR}\nRUN cd /grpc \\\n && make install-plugins prefix=${OUTDIR}/usr\nRUN cd /grpc-java/compiler/src/java_plugin/cpp \\\n && install -c protoc-gen-grpc-java ${OUTDIR}/usr/bin/\nRUN cd /grpc-web/javascript/net/grpc/web \\\n && make \\\n && install protoc-gen-grpc-web ${OUTDIR}/usr/bin/\nRUN cd /protobuf-c \\\n && make install DESTDIR=${OUTDIR}\nRUN find ${OUTDIR} -name \"*.a\" -delete -or -name \"*.la\" -delete\nRUN apk add --no-cache go\nENV GOPATH=\"/go\" \\\n    PATH=\"/go/bin/:$PATH\"\nRUN go get -u -v -ldflags '-w -s' github.com/Masterminds/glide github.com/golang/protobuf/protoc-gen-go github.com/gogo/protobuf/protoc-gen-gofast github.com/gogo/protobuf/protoc-gen-gogo github.com/gogo/protobuf/protoc-gen-gogofast github.com/gogo/protobuf/protoc-gen-gogofaster github.com/gogo/protobuf/protoc-gen-gogoslick github.com/twitchtv/twirp/protoc-gen-twirp github.com/chrusty/protoc-gen-jsonschema github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway github.com/johanbrandhorst/protobuf/protoc-gen-gopherjs github.com/ckaznocha/protoc-gen-lint github.com/mwitkow/go-proto-validators/protoc-gen-govalidators github.com/lyft/protoc-gen-validate moul.io/protoc-gen-gotemplate github.com/micro/protoc-gen-micro \\\n && (cd ${GOPATH}/src/github.com/lyft/protoc-gen-validate \\\n && make build ) \\\n && install -c ${GOPATH}/bin/protoc-gen* ${OUTDIR}/usr/bin/\nRUN mkdir -p ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc \\\n && curl -L https://github.com/pseudomuto/protoc-gen-doc/archive/v${PROTOC_GEN_DOC_VERSION}.tar.gz | tar xvz --strip 1 -C ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc\nRUN cd ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc \\\n && make build \\\n && install -c ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc/protoc-gen-doc ${OUTDIR}/usr/bin/\nFROM ubuntu:16.04 AS swift_builder\nRUN apt-get update \\\n && apt-get install build-essential make tar xz-utils bzip2 gzip sed libz-dev unzip patchelf curl libedit-dev python2.7 python2.7-dev libxml2 git libxml2-dev uuid-dev libssl-dev bash patch -y\nENV SWIFT_VERSION=\"4.2.1\" \\\n    LLVM_VERSION=\"5.0.2\"\nRUN curl -L http://releases.llvm.org/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-16.04.tar.xz | tar --strip-components 1 -C /usr/local/ -xJv\nRUN curl -L https://swift.org/builds/swift-${SWIFT_VERSION}-release/ubuntu1604/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu16.04.tar.gz | tar --strip-components 1 -C / -xz\nENV SWIFT_PROTOBUF_VERSION=\"1.2.0\"\nRUN mkdir -p /swift-protobuf \\\n && curl -L https://github.com/apple/swift-protobuf/archive/${SWIFT_PROTOBUF_VERSION}.tar.gz | tar --strip-components 1 -C /swift-protobuf -xz\nRUN apt-get install libcurl4-openssl-dev -y\nRUN cd /swift-protobuf \\\n && swift build -c release\nRUN mkdir -p /protoc-gen-swift \\\n && cp /swift-protobuf/.build/x86_64-unknown-linux/release/protoc-gen-swift /protoc-gen-swift/\nRUN cp /lib64/ld-linux-x86-64.so.2 $( ldd /protoc-gen-swift/protoc-gen-swift | awk '{print $3}' | grep /lib | sort | uniq ;) /protoc-gen-swift/\nRUN find /protoc-gen-swift/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-swift {} ; \\\n && for p in protoc-gen-swift; do patchelf --set-interpreter /protoc-gen-swift/ld-linux-x86-64.so.2 /protoc-gen-swift/${p} ; done\nFROM ubuntu:16.04 AS javalite_builder\nRUN apt-get update \\\n && apt-get install bash patch curl patchelf -y\nENV PROTOC_GEN_JAVALITE_VERSION=\"3.0.0\"\nRUN mkdir -p /protoc-gen-javalite \\\n && curl -L https://repo1.maven.org/maven2/com/google/protobuf/protoc-gen-javalite/${PROTOC_GEN_JAVALITE_VERSION}/protoc-gen-javalite-${PROTOC_GEN_JAVALITE_VERSION}-linux-x86_64.exe > /protoc-gen-javalite/protoc-gen-javalite \\\n && chmod 755 /protoc-gen-javalite/protoc-gen-javalite\nRUN cp /lib64/ld-linux-x86-64.so.2 $( ldd /protoc-gen-javalite/protoc-gen-javalite | awk '{print $3}' | grep /lib | sort | uniq ;) /protoc-gen-javalite/\nRUN find /protoc-gen-javalite/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-javalite {} ; \\\n && for p in protoc-gen-javalite; do patchelf --set-interpreter /protoc-gen-javalite/ld-linux-x86-64.so.2 --set-rpath /protoc-gen-javalite /protoc-gen-javalite/${p} ; done\nFROM rust:1.22.1 AS rust_builder\nENV RUST_PROTOBUF_VERSION=\"1.4.3\" \\\n    OUTDIR=\"/out\"\nRUN mkdir -p ${OUTDIR}\nRUN apt-get update \\\n && apt-get install musl-tools -y\nRUN rustup target add x86_64-unknown-linux-musl\nRUN mkdir -p /rust-protobuf \\\n && curl -L https://github.com/stepancheg/rust-protobuf/archive/v${RUST_PROTOBUF_VERSION}.tar.gz | tar xvz --strip 1 -C /rust-protobuf\nRUN cd /rust-protobuf/protobuf \\\n && RUSTFLAGS='-C linker=musl-gcc' cargo build --target=x86_64-unknown-linux-musl --release\nRUN mkdir -p ${OUTDIR}/usr/bin \\\n && strip /rust-protobuf/target/x86_64-unknown-linux-musl/release/protoc-gen-rust \\\n && install -c /rust-protobuf/target/x86_64-unknown-linux-musl/release/protoc-gen-rust ${OUTDIR}/usr/bin/\nFROM znly/upx AS packer\nCOPY --from=protoc_builder /out/ /out/\nRUN upx --lzma /out/usr/bin/protoc /out/usr/bin/grpc_* /out/usr/bin/protoc-gen-*\nFROM alpine:3.7\nRUN apk add --no-cache libstdc++\nCOPY --from=packer /out/ /\nCOPY --from=rust_builder /out/ /\nCOPY --from=swift_builder /protoc-gen-swift /protoc-gen-swift\nRUN for p in protoc-gen-swift protoc-gen-swiftgrpc; do ln -s /protoc-gen-swift/${p} /usr/bin/${p} ; done\nCOPY --from=javalite_builder /protoc-gen-javalite /protoc-gen-javalite\nRUN ln -s /protoc-gen-javalite/protoc-gen-javalite /usr/bin/protoc-gen-javalite\nRUN apk add --no-cache curl \\\n && mkdir -p /protobuf/google/protobuf \\\n && for f in any duration descriptor empty struct timestamp wrappers; do curl -L -o /protobuf/google/protobuf/${f}.proto https://raw.githubusercontent.com/google/protobuf/master/src/google/protobuf/${f}.proto ; done \\\n && mkdir -p /protobuf/google/api \\\n && for f in annotations http; do curl -L -o /protobuf/google/api/${f}.proto https://raw.githubusercontent.com/grpc-ecosystem/grpc-gateway/master/third_party/googleapis/google/api/${f}.proto ; done \\\n && mkdir -p /protobuf/github.com/gogo/protobuf/gogoproto \\\n && curl -L -o /protobuf/github.com/gogo/protobuf/gogoproto/gogo.proto https://raw.githubusercontent.com/gogo/protobuf/master/gogoproto/gogo.proto \\\n && mkdir -p /protobuf/github.com/mwitkow/go-proto-validators \\\n && curl -L -o /protobuf/github.com/mwitkow/go-proto-validators/validator.proto https://raw.githubusercontent.com/mwitkow/go-proto-validators/master/validator.proto \\\n && mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/gogoproto \\\n && mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/validate \\\n && curl -L -o /protobuf/github.com/lyft/protoc-gen-validate/gogoproto/gogo.proto https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/gogoproto/gogo.proto \\\n && curl -L -o /protobuf/github.com/lyft/protoc-gen-validate/validate/validate.proto https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/validate/validate.proto \\\n && apk del curl \\\n && chmod a+x /usr/bin/protoc\nENTRYPOINT [\"/usr/bin/protoc\", \"-I/protobuf\"]\n","injectedSmells":[],"originalDockerfileHash":"0d192a50c95bbd68d9fef275d669dbc2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.8 AS protoc_builder\nRUN apk add --no-cache build-base curl automake autoconf libtool git zlib-dev\nENV GRPC_VERSION=\"1.16.0\" \\\n    GRPC_JAVA_VERSION=\"1.16.1\" \\\n    GRPC_WEB_VERSION=\"1.0.0\" \\\n    PROTOBUF_VERSION=\"3.6.1\" \\\n    PROTOBUF_C_VERSION=\"1.3.1\" \\\n    PROTOC_GEN_DOC_VERSION=\"1.1.0\" \\\n    OUTDIR=\"/out\"\nRUN mkdir -p /protobuf \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOBUF_VERSION}.tar.gz | tar xvz --strip-components=1 -C /protobuf\nRUN git clone --depth 1 --recursive -b v${GRPC_VERSION} https://github.com/grpc/grpc.git /grpc \\\n && rm -rf grpc/third_party/protobuf \\\n && ln -s /protobuf /grpc/third_party/protobuf\nRUN mkdir -p /grpc-java \\\n && curl -L https://github.com/grpc/grpc-java/archive/v${GRPC_JAVA_VERSION}.tar.gz | tar xvz --strip-components=1 -C /grpc-java\nRUN mkdir -p /grpc-web \\\n && curl -L https://github.com/grpc/grpc-web/archive/${GRPC_WEB_VERSION}.tar.gz | tar xvz --strip-components=1 -C /grpc-web\nRUN mkdir -p /protobuf-c \\\n && curl -L https://github.com/protobuf-c/protobuf-c/releases/download/v${PROTOBUF_C_VERSION}/protobuf-c-${PROTOBUF_C_VERSION}.tar.gz | tar xvz --strip-components=1 -C /protobuf-c\nRUN cd /protobuf \\\n && autoreconf -f -i -Wall,no-obsolete \\\n && ./configure --prefix=/usr --enable-static=no \\\n && make -j2 \\\n && make install\nRUN cd grpc \\\n && make -j2 plugins\nRUN cd /grpc-java/compiler/src/java_plugin/cpp \\\n && g++ -I. -I/protobuf/src *.cpp -L/protobuf/src/.libs -lprotoc -lprotobuf -lpthread --std=c++0x -s -o protoc-gen-grpc-java\nRUN cd /protobuf-c \\\n && ./configure --prefix=/usr \\\n && make -j2\nRUN cd /protobuf \\\n && make install DESTDIR=${OUTDIR}\nRUN cd /grpc \\\n && make install-plugins prefix=${OUTDIR}/usr\nRUN cd /grpc-java/compiler/src/java_plugin/cpp \\\n && install -c protoc-gen-grpc-java ${OUTDIR}/usr/bin/\nRUN cd /grpc-web/javascript/net/grpc/web \\\n && make \\\n && install protoc-gen-grpc-web ${OUTDIR}/usr/bin/\nRUN cd /protobuf-c \\\n && make install DESTDIR=${OUTDIR}\nRUN find ${OUTDIR} -name \"*.a\" -delete -or -name \"*.la\" -delete\nRUN apk add --no-cache go\nENV GOPATH=\"/go\" \\\n    PATH=\"/go/bin/:$PATH\"\nRUN go get -u -v -ldflags '-w -s' github.com/Masterminds/glide github.com/golang/protobuf/protoc-gen-go github.com/gogo/protobuf/protoc-gen-gofast github.com/gogo/protobuf/protoc-gen-gogo github.com/gogo/protobuf/protoc-gen-gogofast github.com/gogo/protobuf/protoc-gen-gogofaster github.com/gogo/protobuf/protoc-gen-gogoslick github.com/twitchtv/twirp/protoc-gen-twirp github.com/chrusty/protoc-gen-jsonschema github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway github.com/johanbrandhorst/protobuf/protoc-gen-gopherjs github.com/ckaznocha/protoc-gen-lint github.com/mwitkow/go-proto-validators/protoc-gen-govalidators github.com/lyft/protoc-gen-validate moul.io/protoc-gen-gotemplate github.com/micro/protoc-gen-micro \\\n && (cd ${GOPATH}/src/github.com/lyft/protoc-gen-validate \\\n && make build ) \\\n && install -c ${GOPATH}/bin/protoc-gen* ${OUTDIR}/usr/bin/\nRUN mkdir -p ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc \\\n && curl -L https://github.com/pseudomuto/protoc-gen-doc/archive/v${PROTOC_GEN_DOC_VERSION}.tar.gz | tar xvz --strip 1 -C ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc\nRUN cd ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc \\\n && make build \\\n && install -c ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc/protoc-gen-doc ${OUTDIR}/usr/bin/\nFROM ubuntu:16.04 AS swift_builder\nRUN apt-get update \\\n && apt-get install build-essential make tar xz-utils bzip2 gzip sed libz-dev unzip patchelf curl libedit-dev python2.7 python2.7-dev libxml2 git libxml2-dev uuid-dev libssl-dev bash patch -y\nENV SWIFT_VERSION=\"4.2.1\" \\\n    LLVM_VERSION=\"5.0.2\"\nRUN curl -L http://releases.llvm.org/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-16.04.tar.xz | tar --strip-components 1 -C /usr/local/ -xJv\nRUN curl -L https://swift.org/builds/swift-${SWIFT_VERSION}-release/ubuntu1604/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu16.04.tar.gz | tar --strip-components 1 -C / -xz\nENV SWIFT_PROTOBUF_VERSION=\"1.2.0\"\nRUN mkdir -p /swift-protobuf \\\n && curl -L https://github.com/apple/swift-protobuf/archive/${SWIFT_PROTOBUF_VERSION}.tar.gz | tar --strip-components 1 -C /swift-protobuf -xz\nRUN apt-get install libcurl4-openssl-dev -y\nRUN cd /swift-protobuf \\\n && swift build -c release\nRUN mkdir -p /protoc-gen-swift \\\n && cp /swift-protobuf/.build/x86_64-unknown-linux/release/protoc-gen-swift /protoc-gen-swift/\nRUN cp /lib64/ld-linux-x86-64.so.2 $( ldd /protoc-gen-swift/protoc-gen-swift | awk '{print $3}' | grep /lib | sort | uniq ;) /protoc-gen-swift/\nRUN find /protoc-gen-swift/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-swift {}\nFROM ubuntu:16.04 AS javalite_builder\nRUN apt-get update \\\n && apt-get install bash patch curl patchelf -y\nENV PROTOC_GEN_JAVALITE_VERSION=\"3.0.0\"\nRUN mkdir -p /protoc-gen-javalite \\\n && curl -L https://repo1.maven.org/maven2/com/google/protobuf/protoc-gen-javalite/${PROTOC_GEN_JAVALITE_VERSION}/protoc-gen-javalite-${PROTOC_GEN_JAVALITE_VERSION}-linux-x86_64.exe > /protoc-gen-javalite/protoc-gen-javalite \\\n && chmod 755 /protoc-gen-javalite/protoc-gen-javalite\nRUN cp /lib64/ld-linux-x86-64.so.2 $( ldd /protoc-gen-javalite/protoc-gen-javalite | awk '{print $3}' | grep /lib | sort | uniq ;) /protoc-gen-javalite/\nRUN find /protoc-gen-javalite/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-javalite {}\nFROM rust:1.22.1 AS rust_builder\nENV RUST_PROTOBUF_VERSION=\"1.4.3\" \\\n    OUTDIR=\"/out\"\nRUN mkdir -p ${OUTDIR}\nRUN apt-get update \\\n && apt-get install musl-tools -y\nRUN rustup target add x86_64-unknown-linux-musl\nRUN mkdir -p /rust-protobuf \\\n && curl -L https://github.com/stepancheg/rust-protobuf/archive/v${RUST_PROTOBUF_VERSION}.tar.gz | tar xvz --strip 1 -C /rust-protobuf\nRUN cd /rust-protobuf/protobuf \\\n && RUSTFLAGS='-C linker=musl-gcc' cargo build --target=x86_64-unknown-linux-musl --release\nRUN mkdir -p ${OUTDIR}/usr/bin \\\n && strip /rust-protobuf/target/x86_64-unknown-linux-musl/release/protoc-gen-rust \\\n && install -c /rust-protobuf/target/x86_64-unknown-linux-musl/release/protoc-gen-rust ${OUTDIR}/usr/bin/\nFROM znly/upx AS packer\nCOPY --from=protoc_builder /out/ /out/\nRUN upx --lzma /out/usr/bin/protoc /out/usr/bin/grpc_* /out/usr/bin/protoc-gen-*\nFROM alpine:3.7\nRUN apk add --no-cache libstdc++\nCOPY --from=packer /out/ /\nCOPY --from=rust_builder /out/ /\nCOPY --from=swift_builder /protoc-gen-swift /protoc-gen-swift\nRUN for p in protoc-gen-swift protoc-gen-swiftgrpc; do ln -s /protoc-gen-swift/${p} /usr/bin/${p} ; done\nCOPY --from=javalite_builder /protoc-gen-javalite /protoc-gen-javalite\nRUN ln -s /protoc-gen-javalite/protoc-gen-javalite /usr/bin/protoc-gen-javalite\nRUN apk add --no-cache curl \\\n && mkdir -p /protobuf/google/protobuf \\\n && for f in any duration descriptor empty struct timestamp wrappers; do curl -L -o /protobuf/google/protobuf/${f}.proto https://raw.githubusercontent.com/google/protobuf/master/src/google/protobuf/${f}.proto ; done \\\n && mkdir -p /protobuf/google/api \\\n && for f in annotations http; do curl -L -o /protobuf/google/api/${f}.proto https://raw.githubusercontent.com/grpc-ecosystem/grpc-gateway/master/third_party/googleapis/google/api/${f}.proto ; done \\\n && mkdir -p /protobuf/github.com/gogo/protobuf/gogoproto \\\n && curl -L -o /protobuf/github.com/gogo/protobuf/gogoproto/gogo.proto https://raw.githubusercontent.com/gogo/protobuf/master/gogoproto/gogo.proto \\\n && mkdir -p /protobuf/github.com/mwitkow/go-proto-validators \\\n && curl -L -o /protobuf/github.com/mwitkow/go-proto-validators/validator.proto https://raw.githubusercontent.com/mwitkow/go-proto-validators/master/validator.proto \\\n && mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/gogoproto \\\n && mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/validate \\\n && curl -L -o /protobuf/github.com/lyft/protoc-gen-validate/gogoproto/gogo.proto https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/gogoproto/gogo.proto \\\n && curl -L -o /protobuf/github.com/lyft/protoc-gen-validate/validate/validate.proto https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/validate/validate.proto \\\n && apk del curl \\\n && chmod a+x /usr/bin/protoc\nENTRYPOINT [\"/usr/bin/protoc\", \"-I/protobuf\"]\n","originalDockerfileUglifiedHash":"c7f98e67b726aeea4e84c868e036614f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/848c334d86cd99506f9fa76a17db10265a13dee7.dockerfile"}