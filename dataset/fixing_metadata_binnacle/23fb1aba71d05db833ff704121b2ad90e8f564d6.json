{"seed":2815164396,"processedDockerfileHash":"4899d77aedfe7925df5e0eee5b215cc8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","have-a-user"],"processedDockerfile":"ARG BASE_IMAGE=\"debian\"\nARG BASE_IMAGE_TAG=\"stretch\"\nFROM ${BASE_IMAGE}:${BASE_IMAGE_TAG}\n#   Arguments to instantiate as variables\nARG BASE_IMAGE\nARG BASE_IMAGE_TAG\nARG ARCH=\"amd64\"\nARG PLATFORM=\"linux\"\nARG TAG=\"\"\nARG TAG_ROLLING=\"\"\nARG BUILD_DATE=\"\"\nARG IMAGE_VCS_REF=\"\"\nARG VCS_REF=\"\"\nARG FHEM_VERSION=\"\"\nARG IMAGE_VERSION=\"\"\n#   Custom build options:\n#    Disable certain image layers using build env variables if desired\nARG IMAGE_LAYER_SYS_EXT\nARG IMAGE_LAYER_PERL_EXT\nARG IMAGE_LAYER_DEV\nARG IMAGE_LAYER_PERL_CPAN\nARG IMAGE_LAYER_PERL_CPAN_EXT\nARG IMAGE_LAYER_PYTHON\nARG IMAGE_LAYER_PYTHON_EXT\nARG IMAGE_LAYER_NODEJS\nARG IMAGE_LAYER_NODEJS_EXT\n#   Custom installation packages\nARG APT_PKGS\nARG CPAN_PKGS\nARG PIP_PKGS\nARG NPM_PKGS\n#   Re-usable variables during build\nARG L_AUTHORS=\"Julian Pawlowski (Forum.fhem.de:@loredo, Twitter:@loredo)\"\nARG L_URL=\"https://hub.docker.com/r/fhem/fhem-${ARCH}_${PLATFORM}\"\nARG L_USAGE=\"https://github.com/fhem/fhem-docker/blob/${IMAGE_VCS_REF}/README.md\"\nARG L_VCS_URL=\"https://github.com/fhem/fhem-docker/\"\nARG L_VENDOR=\"FHEM\"\nARG L_LICENSES=\"MIT\"\nARG L_TITLE=\"fhem-${ARCH}_${PLATFORM}\"\nARG L_DESCR=\"A basic Docker image for FHEM house automation system, based on Debian Stretch.\"\nARG L_AUTHORS_FHEM=\"https://fhem.de/MAINTAINER.txt\"\nARG L_URL_FHEM=\"https://fhem.de/\"\nARG L_USAGE_FHEM=\"https://fhem.de/#Documentation\"\nARG L_VCS_URL_FHEM=\"https://svn.fhem.de/\"\nARG L_VENDOR_FHEM=\"FHEM\"\nARG L_LICENSES_FHEM=\"GPL-2.0\"\nARG L_DESCR_FHEM=\"FHEM (TM) is a GPL'd perl server for house automation. It is used to automate some common tasks in the household like switching lamps / shutters / heating / etc. and to log events like temperature / humidity / power consumption.\"\n#   annotation labels according to\n#   https://github.com/opencontainers/image-spec/blob/v1.0.1/annotations.md#pre-defined-annotation-keys\nLABEL org.opencontainers.image.created=\"${BUILD_DATE}\"\nLABEL org.opencontainers.image.authors=\"${L_AUTHORS}\"\nLABEL org.opencontainers.image.url=\"${L_URL}\"\nLABEL org.opencontainers.image.documentation=\"${L_USAGE}\"\nLABEL org.opencontainers.image.source=\"${L_VCS_URL}\"\nLABEL org.opencontainers.image.version=\"${IMAGE_VERSION}\"\nLABEL org.opencontainers.image.revision=\"${IMAGE_VCS_REF}\"\nLABEL org.opencontainers.image.vendor=\"${L_VENDOR}\"\nLABEL org.opencontainers.image.licenses=\"${L_LICENSES}\"\nLABEL org.opencontainers.image.title=\"${L_TITLE}\"\nLABEL org.opencontainers.image.description=\"${L_DESCR}\"\n#   non-standard labels\nLABEL org.fhem.authors=\"${L_AUTHORS_FHEM}\"\nLABEL org.fhem.url=\"${L_URL_FHEM}\"\nLABEL org.fhem.documentation=\"${L_USAGE_FHEM}\"\nLABEL org.fhem.source=\"${L_VCS_URL_FHEM}\"\nLABEL org.fhem.version=\"${FHEM_VERSION}\"\nLABEL org.fhem.revision=\"${VCS_REF}\"\nLABEL org.fhem.vendor=\"${L_VENDOR_FHEM}\"\nLABEL org.fhem.licenses=\"${L_LICENSES_FHEM}\"\nLABEL org.fhem.description=\"${L_DESCR_FHEM}\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ADDRESS=\"de_DE.UTF-8\"\nENV LC_MEASUREMENT=\"de_DE.UTF-8\"\nENV LC_MESSAGES=\"en_DK.UTF-8\"\nENV LC_MONETARY=\"de_DE.UTF-8\"\nENV LC_NAME=\"de_DE.UTF-8\"\nENV LC_NUMERIC=\"de_DE.UTF-8\"\nENV LC_PAPER=\"de_DE.UTF-8\"\nENV LC_TELEPHONE=\"de_DE.UTF-8\"\nENV LC_TIME=\"de_DE.UTF-8\"\nENV TERM=\"xterm\"\nENV TZ=\"Europe/Berlin\"\n#   Install base environment\nCOPY ./src/qemu-* /usr/bin/\nCOPY src/entry.sh /entry.sh\nCOPY src/ssh_known_hosts.txt /ssh_known_hosts.txt\nCOPY src/health-check.sh /health-check.sh\nCOPY src/find-* /usr/local/bin/\nCOPY src/99_DockerImageInfo.pm /fhem/FHEM/\nRUN chmod 755 /*.sh /usr/local/bin/* \\\n && echo \"org.opencontainers.image.created=${BUILD_DATE}\\norg.opencontainers.image.authors=${L_AUTHORS}\\norg.opencontainers.image.url=${L_URL}\\norg.opencontainers.image.documentation=${L_USAGE}\\norg.opencontainers.image.source=${L_VCS_URL}\\norg.opencontainers.image.version=${IMAGE_VERSION}\\norg.opencontainers.image.revision=${IMAGE_VCS_REF}\\norg.opencontainers.image.vendor=${L_VENDOR}\\norg.opencontainers.image.licenses=${L_LICENSES}\\norg.opencontainers.image.title=${L_TITLE}\\norg.opencontainers.image.description=${L_DESCR}\\norg.fhem.authors=${L_AUTHORS_FHEM}\\norg.fhem.url=${L_URL_FHEM}\\norg.fhem.documentation=${L_USAGE_FHEM}\\norg.fhem.source=${L_VCS_URL_FHEM}\\norg.fhem.version=${FHEM_VERSION}\\norg.fhem.revision=${VCS_REF}\\norg.fhem.vendor=${L_VENDOR_FHEM}\\norg.fhem.licenses=${L_LICENSES_FHEM}\\norg.fhem.description=${L_DESCR_FHEM}\" > /image_info \\\n && sed -i \"s/stretch main/stretch main contrib non-free/g\" /etc/apt/sources.list \\\n && sed -i \"s/stretch-updates main/stretch-updates main contrib non-free/g\" /etc/apt/sources.list \\\n && sed -i \"s/stretch\\/updates main/stretch\\/updates main contrib non-free/g\" /etc/apt/sources.list \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends apt-transport-https apt-utils ca-certificates gnupg locales \\\n && DEBIAN_FRONTEND=noninteractive apt-get -qqy --no-install-recommends upgrade \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \\\n && echo 'de_DE@euro ISO-8859-15\\nde_DE ISO-8859-1\\nde_DE.UTF-8 UTF-8\\nen_DK ISO-8859-1\\nen_DK.ISO-8859-15 ISO-8859-15\\nen_DK.UTF-8 UTF-8\\nen_GB ISO-8859-1\\nen_GB.ISO-8859-15 ISO-8859-15\\nen_GB.UTF-8 UTF-8\\nen_IE ISO-8859-1\\nen_IE.ISO-8859-15 ISO-8859-15\\nen_IE.UTF-8 UTF-8\\nen_US ISO-8859-1\\nen_US.ISO-8859-15 ISO-8859-15\\nen_US.UTF-8 UTF-8\\nes_ES@euro ISO-8859-15\\nes_ES ISO-8859-1\\nes_ES.UTF-8 UTF-8\\nfr_FR@euro ISO-8859-15\\nfr_FR ISO-8859-1\\nfr_FR.UTF-8 UTF-8\\nit_IT@euro ISO-8859-15\\nit_IT ISO-8859-1\\nit_IT.UTF-8 UTF-8\\nnl_NL@euro ISO-8859-15\\nnl_NL ISO-8859-1\\nnl_NL.UTF-8 UTF-8\\npl_PL ISO-8859-2\\npl_PL.UTF-8 UTF-8' > /etc/locale.gen \\\n && locale-gen \\\n && ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime \\\n && echo \"Europe/Berlin\" > /etc/timezone \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure tzdata \\\n && sed -i \"s,http://deb.debian.org,https://cdn-aws.deb.debian.org,g\" /etc/apt/sources.list \\\n && sed -i \"s,http://security.debian.org,https://cdn-aws.deb.debian.org,g\" /etc/apt/sources.list \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends adb avahi-daemon avrdude bluez curl dnsutils etherwake git-core i2c-tools inetutils-ping jq libcap-ng-utils libcap2-bin lsb-release mariadb-client netcat openssh-client sendemail sqlite3 subversion sudo telnet ttf-liberation unzip usbutils wget ${APT_PKGS} \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/*\n#   Add extended system layer\nRUN if [ \"${IMAGE_LAYER_SYS_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends alsa-utils dfu-programmer ffmpeg espeak lame libsox-fmt-all libttspico-utils mp3wrap mpg123 mplayer nmap normalize-audio snmp snmp-mibs-downloader sox vorbis-tools \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add Perl basic app layer for pre-compiled packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends perl-base libarchive-extract-perl libarchive-zip-perl libcgi-pm-perl libcpanel-json-xs-perl libdbd-mysql libdbd-mysql-perl libdbd-pg-perl libdbd-sqlite3-perl libdbi-perl libdevice-serialport-perl libdevice-usb-perl libgd-graph-perl libgd-text-perl libimage-imlib2-perl libimage-info-perl libimage-librsvg-perl libio-all-perl libio-file-withpath-perl libio-interface-perl libio-socket-inet6-perl libio-socket-ssl-perl libjson-perl libjson-pp-perl libjson-xs-perl liblist-moreutils-perl libmail-gnupg-perl libmail-imapclient-perl libmail-sendmail-perl libmime-base64-perl libmime-lite-perl libnet-server-perl libsocket6-perl libtext-csv-perl libtext-diff-perl libtext-iconv-perl libtimedate-perl libutf8-all-perl libwww-curl-perl libwww-perl libxml-libxml-perl libxml-parser-lite-perl libxml-parser-perl libxml-simple-perl libxml-stream-perl libxml-treebuilder-perl libxml-xpath-perl libxml-xpathengine-perl libyaml-libyaml-perl libyaml-perl \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/*\n#   Add Perl extended app layer for pre-compiled packages\nRUN if [ \"${IMAGE_LAYER_PERL_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends perl libalgorithm-merge-perl libauthen-*-perl libclass-dbi-mysql-perl libclass-isa-perl libclass-loader-perl libcommon-sense-perl libconvert-base32-perl libcpan-meta-yaml-perl libcrypt-*-perl libdata-dump-perl libdatetime-format-strptime-perl libdatetime-perl libdevel-size-perl libdigest-*-perl libdpkg-perl libencode-perl liberror-perl libev-perl libextutils-makemaker-cpanfile-perl libfile-copy-recursive-perl libfile-fcntllock-perl libfinance-quote-perl libgnupg-interface-perl libhtml-strip-perl libhtml-treebuilder-xpath-perl libio-socket-*-perl liblinux-inotify2-perl libmath-round-perl libmodule-pluggable-perl libmojolicious-perl libmoose-perl libmoox-late-perl libmp3-info-perl libmp3-tag-perl libnet-address-ip-local-perl libnet-bonjour-perl libnet-jabber-perl libnet-oauth-perl libnet-oauth2-perl libnet-sip-perl libnet-snmp-perl libnet-ssleay-perl libnet-telnet-perl libnet-xmpp-perl libnmap-parser-perl librivescript-perl librpc-xml-perl libsnmp-perl libsnmp-session-perl libsoap-lite-perl libsocket-perl libswitch-perl libsys-hostname-long-perl libsys-statistics-linux-perl libterm-readkey-perl libterm-readline-perl-perl libtime-period-perl libtypes-path-tiny-perl liburi-escape-xs-perl \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add development/compilation layer\nRUN if [ \"${IMAGE_LAYER_DEV}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends autoconf automake build-essential libavahi-compat-libdnssd-dev libdb-dev libsodium-dev libssl-dev libtool libusb-1.0-0-dev patch \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add Perl app layer for self-compiled modules\n#    * exclude any ARM platforms due to long build time\n#    * manually pre-compiled ARM packages may be applied here\nRUN if [ \"${CPAN_PKGS}\" != \"\" ] || [ \"${PIP_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_PERL_CPAN}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] ; then curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://git.io/cpanm | perl - App::cpanminus \\\n && cpanm --notest App::cpanoutdated CPAN::Plugin::Sysdeps Perl::PrereqScanner::NotQuiteLite \\\n && if [ \"${CPAN_PKGS}\" != \"\" ] ; then cpanm ${CPAN_PKGS} ; fi \\\n && if [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] ; then cpanm --notest Crypt::Rijndael_PP \\\n && if [ \"${ARCH}\" = \"amd64\" ] || [ \"${ARCH}\" = \"i386\" ] ; then cpanm --notest Alien::Base::ModuleBuild Alien::Sodium Crypt::Argon2 Crypt::NaCl::Sodium Crypt::OpenSSL::AES CryptX Device::SMBus Net::MQTT::Constants Net::MQTT::Simple Net::WebSocket::Server ; fi ; fi \\\n && rm -rf /root/.cpanm \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add Python app layer\nRUN if [ \"${PIP_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends python3 python3-dev python3-pip \\\n && INLINE_PYTHON_EXECUTABLE=/usr/bin/python3 cpanm --notest Inline::Python \\\n && pip3 install --upgrade pip \\\n && cp -fv /usr/local/bin/pip3 /usr/bin/pip3 \\\n && pip3 install --upgrade setuptools wheel ${PIP_PKGS} \\\n && if [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] ; then pip3 install pychromecast speedtest-cli youtube-dl \\\n && if [ \"${ARCH}\" = \"arm32v5\" ] || [ \"${ARCH}\" = \"arm32v7\" ] || [ \"${ARCH}\" = \"arm64v8\" ] ; then pip3 install rpi.gpio ; fi \\\n && mkdir -p /usr/local/speedtest-cli \\\n && ln -s ../bin/speedtest-cli /usr/local/speedtest-cli/speedtest-cli ; fi \\\n && rm -rf /root/.cpanm \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add nodejs app layer\nRUN if ([ \"${NPM_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_NODEJS}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ) \\\n && [ \"${ARCH}\" != \"arm32v5\" ] ; then if [ \"${ARCH}\" = \"i386\" ] ; then curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://deb.nodesource.com/setup_8.x | bash - ; else curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://deb.nodesource.com/setup_10.x | bash - ; fi \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends nodejs \\\n && npm install npm@9.6.4 -g --unsafe-perm --production \\\n && if [ \"${NPM_PKGS}\" != \"\" ] ; then npm install ${NPM_PKGS} -g --unsafe-perm --production ; fi \\\n && if [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ; then npm install alexa-cookie2@4.1.3 alexa-fhem@0.5.64 gassistant-fhem@3.0.5 homebridge@1.6.0 homebridge-fhem@0.5.38 tradfri-fhem@0.1.9 -g --unsafe-perm --production ; fi \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add FHEM app layer\n#   Note: Manual checkout is required if build is not run by Travis:\n#     svn co https://svn.fhem.de/fhem/trunk ./src/fhem/trunk\nCOPY src/fhem/trunk/fhem/ /fhem/\nVOLUME [ \"/opt/fhem\" ]\nEXPOSE 8083/tcp\nHEALTHCHECK --interval=20s --timeout=10s --start-period=60s --retries=5 CMD /health-check.sh\nWORKDIR \"/opt/fhem\"\nENTRYPOINT [\"/entry.sh\"]\nCMD [\"start\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n","originalDockerfile":"ARG BASE_IMAGE=\"debian\"\nARG BASE_IMAGE_TAG=\"stretch\"\nFROM ${BASE_IMAGE}:${BASE_IMAGE_TAG}\n#  Arguments to instantiate as variables\nARG BASE_IMAGE\nARG BASE_IMAGE_TAG\nARG ARCH=\"amd64\"\nARG PLATFORM=\"linux\"\nARG TAG=\"\"\nARG TAG_ROLLING=\"\"\nARG BUILD_DATE=\"\"\nARG IMAGE_VCS_REF=\"\"\nARG VCS_REF=\"\"\nARG FHEM_VERSION=\"\"\nARG IMAGE_VERSION=\"\"\n#  Custom build options:\n#   Disable certain image layers using build env variables if desired\nARG IMAGE_LAYER_SYS_EXT\nARG IMAGE_LAYER_PERL_EXT\nARG IMAGE_LAYER_DEV\nARG IMAGE_LAYER_PERL_CPAN\nARG IMAGE_LAYER_PERL_CPAN_EXT\nARG IMAGE_LAYER_PYTHON\nARG IMAGE_LAYER_PYTHON_EXT\nARG IMAGE_LAYER_NODEJS\nARG IMAGE_LAYER_NODEJS_EXT\n#  Custom installation packages\nARG APT_PKGS\nARG CPAN_PKGS\nARG PIP_PKGS\nARG NPM_PKGS\n#  Re-usable variables during build\nARG L_AUTHORS=\"Julian Pawlowski (Forum.fhem.de:@loredo, Twitter:@loredo)\"\nARG L_URL=\"https://hub.docker.com/r/fhem/fhem-${ARCH}_${PLATFORM}\"\nARG L_USAGE=\"https://github.com/fhem/fhem-docker/blob/${IMAGE_VCS_REF}/README.md\"\nARG L_VCS_URL=\"https://github.com/fhem/fhem-docker/\"\nARG L_VENDOR=\"FHEM\"\nARG L_LICENSES=\"MIT\"\nARG L_TITLE=\"fhem-${ARCH}_${PLATFORM}\"\nARG L_DESCR=\"A basic Docker image for FHEM house automation system, based on Debian Stretch.\"\nARG L_AUTHORS_FHEM=\"https://fhem.de/MAINTAINER.txt\"\nARG L_URL_FHEM=\"https://fhem.de/\"\nARG L_USAGE_FHEM=\"https://fhem.de/#Documentation\"\nARG L_VCS_URL_FHEM=\"https://svn.fhem.de/\"\nARG L_VENDOR_FHEM=\"FHEM\"\nARG L_LICENSES_FHEM=\"GPL-2.0\"\nARG L_DESCR_FHEM=\"FHEM (TM) is a GPL'd perl server for house automation. It is used to automate some common tasks in the household like switching lamps / shutters / heating / etc. and to log events like temperature / humidity / power consumption.\"\n#  annotation labels according to\n#  https://github.com/opencontainers/image-spec/blob/v1.0.1/annotations.md#pre-defined-annotation-keys\nLABEL org.opencontainers.image.created=\"${BUILD_DATE}\"\nLABEL org.opencontainers.image.authors=\"${L_AUTHORS}\"\nLABEL org.opencontainers.image.url=\"${L_URL}\"\nLABEL org.opencontainers.image.documentation=\"${L_USAGE}\"\nLABEL org.opencontainers.image.source=\"${L_VCS_URL}\"\nLABEL org.opencontainers.image.version=\"${IMAGE_VERSION}\"\nLABEL org.opencontainers.image.revision=\"${IMAGE_VCS_REF}\"\nLABEL org.opencontainers.image.vendor=\"${L_VENDOR}\"\nLABEL org.opencontainers.image.licenses=\"${L_LICENSES}\"\nLABEL org.opencontainers.image.title=\"${L_TITLE}\"\nLABEL org.opencontainers.image.description=\"${L_DESCR}\"\n#  non-standard labels\nLABEL org.fhem.authors=\"${L_AUTHORS_FHEM}\"\nLABEL org.fhem.url=\"${L_URL_FHEM}\"\nLABEL org.fhem.documentation=\"${L_USAGE_FHEM}\"\nLABEL org.fhem.source=\"${L_VCS_URL_FHEM}\"\nLABEL org.fhem.version=\"${FHEM_VERSION}\"\nLABEL org.fhem.revision=\"${VCS_REF}\"\nLABEL org.fhem.vendor=\"${L_VENDOR_FHEM}\"\nLABEL org.fhem.licenses=\"${L_LICENSES_FHEM}\"\nLABEL org.fhem.description=\"${L_DESCR_FHEM}\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ADDRESS=\"de_DE.UTF-8\"\nENV LC_MEASUREMENT=\"de_DE.UTF-8\"\nENV LC_MESSAGES=\"en_DK.UTF-8\"\nENV LC_MONETARY=\"de_DE.UTF-8\"\nENV LC_NAME=\"de_DE.UTF-8\"\nENV LC_NUMERIC=\"de_DE.UTF-8\"\nENV LC_PAPER=\"de_DE.UTF-8\"\nENV LC_TELEPHONE=\"de_DE.UTF-8\"\nENV LC_TIME=\"de_DE.UTF-8\"\nENV TERM=\"xterm\"\nENV TZ=\"Europe/Berlin\"\n#  Install base environment\nCOPY ./src/qemu-* /usr/bin/\nCOPY src/entry.sh /entry.sh\nCOPY src/ssh_known_hosts.txt /ssh_known_hosts.txt\nCOPY src/health-check.sh /health-check.sh\nCOPY src/find-* /usr/local/bin/\nCOPY src/99_DockerImageInfo.pm /fhem/FHEM/\nRUN chmod 755 /*.sh /usr/local/bin/* \\\n && echo \"org.opencontainers.image.created=${BUILD_DATE}\\norg.opencontainers.image.authors=${L_AUTHORS}\\norg.opencontainers.image.url=${L_URL}\\norg.opencontainers.image.documentation=${L_USAGE}\\norg.opencontainers.image.source=${L_VCS_URL}\\norg.opencontainers.image.version=${IMAGE_VERSION}\\norg.opencontainers.image.revision=${IMAGE_VCS_REF}\\norg.opencontainers.image.vendor=${L_VENDOR}\\norg.opencontainers.image.licenses=${L_LICENSES}\\norg.opencontainers.image.title=${L_TITLE}\\norg.opencontainers.image.description=${L_DESCR}\\norg.fhem.authors=${L_AUTHORS_FHEM}\\norg.fhem.url=${L_URL_FHEM}\\norg.fhem.documentation=${L_USAGE_FHEM}\\norg.fhem.source=${L_VCS_URL_FHEM}\\norg.fhem.version=${FHEM_VERSION}\\norg.fhem.revision=${VCS_REF}\\norg.fhem.vendor=${L_VENDOR_FHEM}\\norg.fhem.licenses=${L_LICENSES_FHEM}\\norg.fhem.description=${L_DESCR_FHEM}\" > /image_info \\\n && sed -i \"s/stretch main/stretch main contrib non-free/g\" /etc/apt/sources.list \\\n && sed -i \"s/stretch-updates main/stretch-updates main contrib non-free/g\" /etc/apt/sources.list \\\n && sed -i \"s/stretch\\/updates main/stretch\\/updates main contrib non-free/g\" /etc/apt/sources.list \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends apt-transport-https apt-utils ca-certificates gnupg locales \\\n && DEBIAN_FRONTEND=noninteractive apt-get -qqy --no-install-recommends upgrade \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \\\n && echo 'de_DE@euro ISO-8859-15\\nde_DE ISO-8859-1\\nde_DE.UTF-8 UTF-8\\nen_DK ISO-8859-1\\nen_DK.ISO-8859-15 ISO-8859-15\\nen_DK.UTF-8 UTF-8\\nen_GB ISO-8859-1\\nen_GB.ISO-8859-15 ISO-8859-15\\nen_GB.UTF-8 UTF-8\\nen_IE ISO-8859-1\\nen_IE.ISO-8859-15 ISO-8859-15\\nen_IE.UTF-8 UTF-8\\nen_US ISO-8859-1\\nen_US.ISO-8859-15 ISO-8859-15\\nen_US.UTF-8 UTF-8\\nes_ES@euro ISO-8859-15\\nes_ES ISO-8859-1\\nes_ES.UTF-8 UTF-8\\nfr_FR@euro ISO-8859-15\\nfr_FR ISO-8859-1\\nfr_FR.UTF-8 UTF-8\\nit_IT@euro ISO-8859-15\\nit_IT ISO-8859-1\\nit_IT.UTF-8 UTF-8\\nnl_NL@euro ISO-8859-15\\nnl_NL ISO-8859-1\\nnl_NL.UTF-8 UTF-8\\npl_PL ISO-8859-2\\npl_PL.UTF-8 UTF-8' > /etc/locale.gen \\\n && locale-gen \\\n && ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime \\\n && echo \"Europe/Berlin\" > /etc/timezone \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure tzdata \\\n && sed -i \"s,http://deb.debian.org,https://cdn-aws.deb.debian.org,g\" /etc/apt/sources.list \\\n && sed -i \"s,http://security.debian.org,https://cdn-aws.deb.debian.org,g\" /etc/apt/sources.list \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends adb avahi-daemon avrdude bluez curl dnsutils etherwake git-core i2c-tools inetutils-ping jq libcap-ng-utils libcap2-bin lsb-release mariadb-client netcat openssh-client sendemail sqlite3 subversion sudo telnet ttf-liberation unzip usbutils wget ${APT_PKGS} \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/*\n#  Add extended system layer\nRUN if [ \"${IMAGE_LAYER_SYS_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends alsa-utils dfu-programmer ffmpeg espeak lame libsox-fmt-all libttspico-utils mp3wrap mpg123 mplayer nmap normalize-audio snmp snmp-mibs-downloader sox vorbis-tools \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#  Add Perl basic app layer for pre-compiled packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends perl-base libarchive-extract-perl libarchive-zip-perl libcgi-pm-perl libcpanel-json-xs-perl libdbd-mysql libdbd-mysql-perl libdbd-pg-perl libdbd-sqlite3-perl libdbi-perl libdevice-serialport-perl libdevice-usb-perl libgd-graph-perl libgd-text-perl libimage-imlib2-perl libimage-info-perl libimage-librsvg-perl libio-all-perl libio-file-withpath-perl libio-interface-perl libio-socket-inet6-perl libio-socket-ssl-perl libjson-perl libjson-pp-perl libjson-xs-perl liblist-moreutils-perl libmail-gnupg-perl libmail-imapclient-perl libmail-sendmail-perl libmime-base64-perl libmime-lite-perl libnet-server-perl libsocket6-perl libtext-csv-perl libtext-diff-perl libtext-iconv-perl libtimedate-perl libutf8-all-perl libwww-curl-perl libwww-perl libxml-libxml-perl libxml-parser-lite-perl libxml-parser-perl libxml-simple-perl libxml-stream-perl libxml-treebuilder-perl libxml-xpath-perl libxml-xpathengine-perl libyaml-libyaml-perl libyaml-perl \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/*\n#  Add Perl extended app layer for pre-compiled packages\nRUN if [ \"${IMAGE_LAYER_PERL_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends perl libalgorithm-merge-perl libauthen-*-perl libclass-dbi-mysql-perl libclass-isa-perl libclass-loader-perl libcommon-sense-perl libconvert-base32-perl libcpan-meta-yaml-perl libcrypt-*-perl libdata-dump-perl libdatetime-format-strptime-perl libdatetime-perl libdevel-size-perl libdigest-*-perl libdpkg-perl libencode-perl liberror-perl libev-perl libextutils-makemaker-cpanfile-perl libfile-copy-recursive-perl libfile-fcntllock-perl libfinance-quote-perl libgnupg-interface-perl libhtml-strip-perl libhtml-treebuilder-xpath-perl libio-socket-*-perl liblinux-inotify2-perl libmath-round-perl libmodule-pluggable-perl libmojolicious-perl libmoose-perl libmoox-late-perl libmp3-info-perl libmp3-tag-perl libnet-address-ip-local-perl libnet-bonjour-perl libnet-jabber-perl libnet-oauth-perl libnet-oauth2-perl libnet-sip-perl libnet-snmp-perl libnet-ssleay-perl libnet-telnet-perl libnet-xmpp-perl libnmap-parser-perl librivescript-perl librpc-xml-perl libsnmp-perl libsnmp-session-perl libsoap-lite-perl libsocket-perl libswitch-perl libsys-hostname-long-perl libsys-statistics-linux-perl libterm-readkey-perl libterm-readline-perl-perl libtime-period-perl libtypes-path-tiny-perl liburi-escape-xs-perl \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#  Add development/compilation layer\nRUN if [ \"${IMAGE_LAYER_DEV}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends autoconf automake build-essential libavahi-compat-libdnssd-dev libdb-dev libsodium-dev libssl-dev libtool libusb-1.0-0-dev patch \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#  Add Perl app layer for self-compiled modules\n#   * exclude any ARM platforms due to long build time\n#   * manually pre-compiled ARM packages may be applied here\nRUN if [ \"${CPAN_PKGS}\" != \"\" ] || [ \"${PIP_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_PERL_CPAN}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] ; then curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://git.io/cpanm | perl - App::cpanminus \\\n && cpanm --notest App::cpanoutdated CPAN::Plugin::Sysdeps Perl::PrereqScanner::NotQuiteLite \\\n && if [ \"${CPAN_PKGS}\" != \"\" ] ; then cpanm ${CPAN_PKGS} ; fi \\\n && if [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] ; then cpanm --notest Crypt::Rijndael_PP \\\n && if [ \"${ARCH}\" = \"amd64\" ] || [ \"${ARCH}\" = \"i386\" ] ; then cpanm --notest Alien::Base::ModuleBuild Alien::Sodium Crypt::Argon2 Crypt::NaCl::Sodium Crypt::OpenSSL::AES CryptX Device::SMBus Net::MQTT::Constants Net::MQTT::Simple Net::WebSocket::Server ; fi ; fi \\\n && rm -rf /root/.cpanm \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#  Add Python app layer\nRUN if [ \"${PIP_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends python3 python3-dev python3-pip \\\n && INLINE_PYTHON_EXECUTABLE=/usr/bin/python3 cpanm --notest Inline::Python \\\n && pip3 install --upgrade pip \\\n && cp -fv /usr/local/bin/pip3 /usr/bin/pip3 \\\n && pip3 install --upgrade setuptools wheel ${PIP_PKGS} \\\n && if [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] ; then pip3 install pychromecast speedtest-cli youtube-dl \\\n && if [ \"${ARCH}\" = \"arm32v5\" ] || [ \"${ARCH}\" = \"arm32v7\" ] || [ \"${ARCH}\" = \"arm64v8\" ] ; then pip3 install rpi.gpio ; fi \\\n && mkdir -p /usr/local/speedtest-cli \\\n && ln -s ../bin/speedtest-cli /usr/local/speedtest-cli/speedtest-cli ; fi \\\n && rm -rf /root/.cpanm \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#  Add nodejs app layer\nRUN if ([ \"${NPM_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_NODEJS}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ) \\\n && [ \"${ARCH}\" != \"arm32v5\" ] ; then if [ \"${ARCH}\" = \"i386\" ] ; then curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://deb.nodesource.com/setup_8.x | bash - ; else curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://deb.nodesource.com/setup_10.x | bash - ; fi \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends nodejs \\\n && npm install npm -g --unsafe-perm --production \\\n && if [ \"${NPM_PKGS}\" != \"\" ] ; then npm install ${NPM_PKGS} -g --unsafe-perm --production ; fi \\\n && if [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ; then npm install alexa-cookie2 alexa-fhem gassistant-fhem homebridge homebridge-fhem tradfri-fhem -g --unsafe-perm --production ; fi \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#  Add FHEM app layer\n#  Note: Manual checkout is required if build is not run by Travis:\n#    svn co https://svn.fhem.de/fhem/trunk ./src/fhem/trunk\nCOPY src/fhem/trunk/fhem/ /fhem/\nVOLUME [ \"/opt/fhem\" ]\nEXPOSE 8083/tcp\nHEALTHCHECK --interval=20s --timeout=10s --start-period=60s --retries=5 CMD /health-check.sh\nWORKDIR \"/opt/fhem\"\nENTRYPOINT [\"/entry.sh\"]\nCMD [\"start\"]\n","injectedSmells":[],"originalDockerfileHash":"315ac933e424ac9297818ddda7cbffec","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG BASE_IMAGE=\"debian\"\nARG BASE_IMAGE_TAG=\"stretch\"\nFROM ${BASE_IMAGE}:${BASE_IMAGE_TAG}\n#   Arguments to instantiate as variables\nARG BASE_IMAGE\nARG BASE_IMAGE_TAG\nARG ARCH=\"amd64\"\nARG PLATFORM=\"linux\"\nARG TAG=\"\"\nARG TAG_ROLLING=\"\"\nARG BUILD_DATE=\"\"\nARG IMAGE_VCS_REF=\"\"\nARG VCS_REF=\"\"\nARG FHEM_VERSION=\"\"\nARG IMAGE_VERSION=\"\"\n#   Custom build options:\n#    Disable certain image layers using build env variables if desired\nARG IMAGE_LAYER_SYS_EXT\nARG IMAGE_LAYER_PERL_EXT\nARG IMAGE_LAYER_DEV\nARG IMAGE_LAYER_PERL_CPAN\nARG IMAGE_LAYER_PERL_CPAN_EXT\nARG IMAGE_LAYER_PYTHON\nARG IMAGE_LAYER_PYTHON_EXT\nARG IMAGE_LAYER_NODEJS\nARG IMAGE_LAYER_NODEJS_EXT\n#   Custom installation packages\nARG APT_PKGS\nARG CPAN_PKGS\nARG PIP_PKGS\nARG NPM_PKGS\n#   Re-usable variables during build\nARG L_AUTHORS=\"Julian Pawlowski (Forum.fhem.de:@loredo, Twitter:@loredo)\"\nARG L_URL=\"https://hub.docker.com/r/fhem/fhem-${ARCH}_${PLATFORM}\"\nARG L_USAGE=\"https://github.com/fhem/fhem-docker/blob/${IMAGE_VCS_REF}/README.md\"\nARG L_VCS_URL=\"https://github.com/fhem/fhem-docker/\"\nARG L_VENDOR=\"FHEM\"\nARG L_LICENSES=\"MIT\"\nARG L_TITLE=\"fhem-${ARCH}_${PLATFORM}\"\nARG L_DESCR=\"A basic Docker image for FHEM house automation system, based on Debian Stretch.\"\nARG L_AUTHORS_FHEM=\"https://fhem.de/MAINTAINER.txt\"\nARG L_URL_FHEM=\"https://fhem.de/\"\nARG L_USAGE_FHEM=\"https://fhem.de/#Documentation\"\nARG L_VCS_URL_FHEM=\"https://svn.fhem.de/\"\nARG L_VENDOR_FHEM=\"FHEM\"\nARG L_LICENSES_FHEM=\"GPL-2.0\"\nARG L_DESCR_FHEM=\"FHEM (TM) is a GPL'd perl server for house automation. It is used to automate some common tasks in the household like switching lamps / shutters / heating / etc. and to log events like temperature / humidity / power consumption.\"\n#   annotation labels according to\n#   https://github.com/opencontainers/image-spec/blob/v1.0.1/annotations.md#pre-defined-annotation-keys\nLABEL org.opencontainers.image.created=\"${BUILD_DATE}\"\nLABEL org.opencontainers.image.authors=\"${L_AUTHORS}\"\nLABEL org.opencontainers.image.url=\"${L_URL}\"\nLABEL org.opencontainers.image.documentation=\"${L_USAGE}\"\nLABEL org.opencontainers.image.source=\"${L_VCS_URL}\"\nLABEL org.opencontainers.image.version=\"${IMAGE_VERSION}\"\nLABEL org.opencontainers.image.revision=\"${IMAGE_VCS_REF}\"\nLABEL org.opencontainers.image.vendor=\"${L_VENDOR}\"\nLABEL org.opencontainers.image.licenses=\"${L_LICENSES}\"\nLABEL org.opencontainers.image.title=\"${L_TITLE}\"\nLABEL org.opencontainers.image.description=\"${L_DESCR}\"\n#   non-standard labels\nLABEL org.fhem.authors=\"${L_AUTHORS_FHEM}\"\nLABEL org.fhem.url=\"${L_URL_FHEM}\"\nLABEL org.fhem.documentation=\"${L_USAGE_FHEM}\"\nLABEL org.fhem.source=\"${L_VCS_URL_FHEM}\"\nLABEL org.fhem.version=\"${FHEM_VERSION}\"\nLABEL org.fhem.revision=\"${VCS_REF}\"\nLABEL org.fhem.vendor=\"${L_VENDOR_FHEM}\"\nLABEL org.fhem.licenses=\"${L_LICENSES_FHEM}\"\nLABEL org.fhem.description=\"${L_DESCR_FHEM}\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ADDRESS=\"de_DE.UTF-8\"\nENV LC_MEASUREMENT=\"de_DE.UTF-8\"\nENV LC_MESSAGES=\"en_DK.UTF-8\"\nENV LC_MONETARY=\"de_DE.UTF-8\"\nENV LC_NAME=\"de_DE.UTF-8\"\nENV LC_NUMERIC=\"de_DE.UTF-8\"\nENV LC_PAPER=\"de_DE.UTF-8\"\nENV LC_TELEPHONE=\"de_DE.UTF-8\"\nENV LC_TIME=\"de_DE.UTF-8\"\nENV TERM=\"xterm\"\nENV TZ=\"Europe/Berlin\"\n#   Install base environment\nCOPY ./src/qemu-* /usr/bin/\nCOPY src/entry.sh /entry.sh\nCOPY src/ssh_known_hosts.txt /ssh_known_hosts.txt\nCOPY src/health-check.sh /health-check.sh\nCOPY src/find-* /usr/local/bin/\nCOPY src/99_DockerImageInfo.pm /fhem/FHEM/\nRUN chmod 755 /*.sh /usr/local/bin/* \\\n && echo \"org.opencontainers.image.created=${BUILD_DATE}\\norg.opencontainers.image.authors=${L_AUTHORS}\\norg.opencontainers.image.url=${L_URL}\\norg.opencontainers.image.documentation=${L_USAGE}\\norg.opencontainers.image.source=${L_VCS_URL}\\norg.opencontainers.image.version=${IMAGE_VERSION}\\norg.opencontainers.image.revision=${IMAGE_VCS_REF}\\norg.opencontainers.image.vendor=${L_VENDOR}\\norg.opencontainers.image.licenses=${L_LICENSES}\\norg.opencontainers.image.title=${L_TITLE}\\norg.opencontainers.image.description=${L_DESCR}\\norg.fhem.authors=${L_AUTHORS_FHEM}\\norg.fhem.url=${L_URL_FHEM}\\norg.fhem.documentation=${L_USAGE_FHEM}\\norg.fhem.source=${L_VCS_URL_FHEM}\\norg.fhem.version=${FHEM_VERSION}\\norg.fhem.revision=${VCS_REF}\\norg.fhem.vendor=${L_VENDOR_FHEM}\\norg.fhem.licenses=${L_LICENSES_FHEM}\\norg.fhem.description=${L_DESCR_FHEM}\" > /image_info \\\n && sed -i \"s/stretch main/stretch main contrib non-free/g\" /etc/apt/sources.list \\\n && sed -i \"s/stretch-updates main/stretch-updates main contrib non-free/g\" /etc/apt/sources.list \\\n && sed -i \"s/stretch\\/updates main/stretch\\/updates main contrib non-free/g\" /etc/apt/sources.list \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends apt-transport-https apt-utils ca-certificates gnupg locales \\\n && DEBIAN_FRONTEND=noninteractive apt-get -qqy --no-install-recommends upgrade \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \\\n && echo 'de_DE@euro ISO-8859-15\\nde_DE ISO-8859-1\\nde_DE.UTF-8 UTF-8\\nen_DK ISO-8859-1\\nen_DK.ISO-8859-15 ISO-8859-15\\nen_DK.UTF-8 UTF-8\\nen_GB ISO-8859-1\\nen_GB.ISO-8859-15 ISO-8859-15\\nen_GB.UTF-8 UTF-8\\nen_IE ISO-8859-1\\nen_IE.ISO-8859-15 ISO-8859-15\\nen_IE.UTF-8 UTF-8\\nen_US ISO-8859-1\\nen_US.ISO-8859-15 ISO-8859-15\\nen_US.UTF-8 UTF-8\\nes_ES@euro ISO-8859-15\\nes_ES ISO-8859-1\\nes_ES.UTF-8 UTF-8\\nfr_FR@euro ISO-8859-15\\nfr_FR ISO-8859-1\\nfr_FR.UTF-8 UTF-8\\nit_IT@euro ISO-8859-15\\nit_IT ISO-8859-1\\nit_IT.UTF-8 UTF-8\\nnl_NL@euro ISO-8859-15\\nnl_NL ISO-8859-1\\nnl_NL.UTF-8 UTF-8\\npl_PL ISO-8859-2\\npl_PL.UTF-8 UTF-8' > /etc/locale.gen \\\n && locale-gen \\\n && ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime \\\n && echo \"Europe/Berlin\" > /etc/timezone \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure tzdata \\\n && sed -i \"s,http://deb.debian.org,https://cdn-aws.deb.debian.org,g\" /etc/apt/sources.list \\\n && sed -i \"s,http://security.debian.org,https://cdn-aws.deb.debian.org,g\" /etc/apt/sources.list \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends adb avahi-daemon avrdude bluez curl dnsutils etherwake git-core i2c-tools inetutils-ping jq libcap-ng-utils libcap2-bin lsb-release mariadb-client netcat openssh-client sendemail sqlite3 subversion sudo telnet ttf-liberation unzip usbutils wget ${APT_PKGS} \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/*\n#   Add extended system layer\nRUN if [ \"${IMAGE_LAYER_SYS_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends alsa-utils dfu-programmer ffmpeg espeak lame libsox-fmt-all libttspico-utils mp3wrap mpg123 mplayer nmap normalize-audio snmp snmp-mibs-downloader sox vorbis-tools \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add Perl basic app layer for pre-compiled packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends perl-base libarchive-extract-perl libarchive-zip-perl libcgi-pm-perl libcpanel-json-xs-perl libdbd-mysql libdbd-mysql-perl libdbd-pg-perl libdbd-sqlite3-perl libdbi-perl libdevice-serialport-perl libdevice-usb-perl libgd-graph-perl libgd-text-perl libimage-imlib2-perl libimage-info-perl libimage-librsvg-perl libio-all-perl libio-file-withpath-perl libio-interface-perl libio-socket-inet6-perl libio-socket-ssl-perl libjson-perl libjson-pp-perl libjson-xs-perl liblist-moreutils-perl libmail-gnupg-perl libmail-imapclient-perl libmail-sendmail-perl libmime-base64-perl libmime-lite-perl libnet-server-perl libsocket6-perl libtext-csv-perl libtext-diff-perl libtext-iconv-perl libtimedate-perl libutf8-all-perl libwww-curl-perl libwww-perl libxml-libxml-perl libxml-parser-lite-perl libxml-parser-perl libxml-simple-perl libxml-stream-perl libxml-treebuilder-perl libxml-xpath-perl libxml-xpathengine-perl libyaml-libyaml-perl libyaml-perl \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/*\n#   Add Perl extended app layer for pre-compiled packages\nRUN if [ \"${IMAGE_LAYER_PERL_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends perl libalgorithm-merge-perl libauthen-*-perl libclass-dbi-mysql-perl libclass-isa-perl libclass-loader-perl libcommon-sense-perl libconvert-base32-perl libcpan-meta-yaml-perl libcrypt-*-perl libdata-dump-perl libdatetime-format-strptime-perl libdatetime-perl libdevel-size-perl libdigest-*-perl libdpkg-perl libencode-perl liberror-perl libev-perl libextutils-makemaker-cpanfile-perl libfile-copy-recursive-perl libfile-fcntllock-perl libfinance-quote-perl libgnupg-interface-perl libhtml-strip-perl libhtml-treebuilder-xpath-perl libio-socket-*-perl liblinux-inotify2-perl libmath-round-perl libmodule-pluggable-perl libmojolicious-perl libmoose-perl libmoox-late-perl libmp3-info-perl libmp3-tag-perl libnet-address-ip-local-perl libnet-bonjour-perl libnet-jabber-perl libnet-oauth-perl libnet-oauth2-perl libnet-sip-perl libnet-snmp-perl libnet-ssleay-perl libnet-telnet-perl libnet-xmpp-perl libnmap-parser-perl librivescript-perl librpc-xml-perl libsnmp-perl libsnmp-session-perl libsoap-lite-perl libsocket-perl libswitch-perl libsys-hostname-long-perl libsys-statistics-linux-perl libterm-readkey-perl libterm-readline-perl-perl libtime-period-perl libtypes-path-tiny-perl liburi-escape-xs-perl \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add development/compilation layer\nRUN if [ \"${IMAGE_LAYER_DEV}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends autoconf automake build-essential libavahi-compat-libdnssd-dev libdb-dev libsodium-dev libssl-dev libtool libusb-1.0-0-dev patch \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add Perl app layer for self-compiled modules\n#    * exclude any ARM platforms due to long build time\n#    * manually pre-compiled ARM packages may be applied here\nRUN if [ \"${CPAN_PKGS}\" != \"\" ] || [ \"${PIP_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_PERL_CPAN}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] ; then curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://git.io/cpanm | perl - App::cpanminus \\\n && cpanm --notest App::cpanoutdated CPAN::Plugin::Sysdeps Perl::PrereqScanner::NotQuiteLite \\\n && if [ \"${CPAN_PKGS}\" != \"\" ] ; then cpanm ${CPAN_PKGS} ; fi \\\n && if [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] ; then cpanm --notest Crypt::Rijndael_PP \\\n && if [ \"${ARCH}\" = \"amd64\" ] || [ \"${ARCH}\" = \"i386\" ] ; then cpanm --notest Alien::Base::ModuleBuild Alien::Sodium Crypt::Argon2 Crypt::NaCl::Sodium Crypt::OpenSSL::AES CryptX Device::SMBus Net::MQTT::Constants Net::MQTT::Simple Net::WebSocket::Server ; fi ; fi \\\n && rm -rf /root/.cpanm \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add Python app layer\nRUN if [ \"${PIP_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] ; then DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends python3 python3-dev python3-pip \\\n && INLINE_PYTHON_EXECUTABLE=/usr/bin/python3 cpanm --notest Inline::Python \\\n && pip3 install --upgrade pip \\\n && cp -fv /usr/local/bin/pip3 /usr/bin/pip3 \\\n && pip3 install --upgrade setuptools wheel ${PIP_PKGS} \\\n && if [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] ; then pip3 install pychromecast speedtest-cli youtube-dl \\\n && if [ \"${ARCH}\" = \"arm32v5\" ] || [ \"${ARCH}\" = \"arm32v7\" ] || [ \"${ARCH}\" = \"arm64v8\" ] ; then pip3 install rpi.gpio ; fi \\\n && mkdir -p /usr/local/speedtest-cli \\\n && ln -s ../bin/speedtest-cli /usr/local/speedtest-cli/speedtest-cli ; fi \\\n && rm -rf /root/.cpanm \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add nodejs app layer\nRUN if ([ \"${NPM_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_NODEJS}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ) \\\n && [ \"${ARCH}\" != \"arm32v5\" ] ; then if [ \"${ARCH}\" = \"i386\" ] ; then curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://deb.nodesource.com/setup_8.x | bash - ; else curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://deb.nodesource.com/setup_10.x | bash - ; fi \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends nodejs \\\n && npm install npm -g --unsafe-perm --production \\\n && if [ \"${NPM_PKGS}\" != \"\" ] ; then npm install ${NPM_PKGS} -g --unsafe-perm --production ; fi \\\n && if [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ; then npm install alexa-cookie2 alexa-fhem gassistant-fhem homebridge homebridge-fhem tradfri-fhem -g --unsafe-perm --production ; fi \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* ; fi\n#   Add FHEM app layer\n#   Note: Manual checkout is required if build is not run by Travis:\n#     svn co https://svn.fhem.de/fhem/trunk ./src/fhem/trunk\nCOPY src/fhem/trunk/fhem/ /fhem/\nVOLUME [ \"/opt/fhem\" ]\nEXPOSE 8083/tcp\nHEALTHCHECK --interval=20s --timeout=10s --start-period=60s --retries=5 CMD /health-check.sh\nWORKDIR \"/opt/fhem\"\nENTRYPOINT [\"/entry.sh\"]\nCMD [\"start\"]\n","originalDockerfileUglifiedHash":"eff633449b138639332bb1b0883dab08","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/23fb1aba71d05db833ff704121b2ad90e8f564d6.dockerfile"}