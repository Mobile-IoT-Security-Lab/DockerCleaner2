{"seed":3597725196,"processedDockerfileHash":"4da71fdfa2f129f217f2dadf8b1cfc64","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Mikkel Vilstrup <mikkel@vilstrup.dk>\n#  #############################################################################\n#   Install TensorFlow dependencies\n#  #############################################################################\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 ca-certificates=20210119~16.04.1 git=1:2.7.4-0ubuntu1.10 curl=7.47.0-1ubuntu2.19 libfreetype6-dev=2.6.1-0.1ubuntu2.5 libpng12-dev=1.2.54-1ubuntu1.1 l ibhdf5-dev openmpi-bin=1.10.2-8ubuntu1 pkg-config=0.29.1-0ubuntu1 zip=3.0-11 g++=4:5.3.1-1ubuntu1 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 unzip=6.0-20ubuntu1.1 build-essential=12.1ubuntu2 openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 openjdk-8-jre-headless=8u292-b10-0ubuntu1~16.04.1 software-properties-common=0.96.20.10 python=2.7.12-1~16.04 python-dev=2.7.12-1~16.04 apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\n#  #############################################################################\n#   Install Anaconda\n#  #############################################################################\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 bzip2=1.0.6-8ubuntu0.2 ca-certificates=20210119~16.04.1 -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget --quiet https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh \\\n && /bin/bash Anaconda3-4.4.0-Linux-x86_64.sh -b -p /opt/conda \\\n && rm Anaconda3-4.4.0-Linux-x86_64.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN pip install pip==23.1 --upgrade\n#  #############################################################################\n#   Install TensorFlow w/ CPU instructions\n#  #############################################################################\nRUN echo \"startup --batch\" >> /etc/bazel.bazelrc\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" >> /etc/bazel.bazelrc\nENV BAZEL_VERSION=\"0.5.0\"\nWORKDIR /\nRUN mkdir /bazel \\\n && cd /bazel \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \\\n && chmod +x bazel-*.sh \\\n && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && cd / \\\n && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\nRUN git clone https://github.com/tensorflow/tensorflow.git \\\n && cd tensorflow \\\n && git checkout r1.2\nWORKDIR /tensorflow\n#   Must set bazel commands:\n#   https://stackoverflow.com/questions/41293077/how-to-compile-tensorflow-with-sse4-2-and-avx-instructions\nRUN tensorflow/tools/ci_build/builds/configured CPU bazel build -c opt --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --copt=-msse4.1 --copt=-msse4.2 tensorflow/tools/pip_package:build_pip_package \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip \\\n && pip install /tmp/pip/tensorflow-*.whl --no-cache-dir --upgrade \\\n && rm -rf /tmp/pip \\\n && rm -rf /root/.cache\n#  #############################################################################\n#   Setup Language to UTF-8 for text\n#  #############################################################################\n#   https://askubuntu.com/a/601498\nRUN apt-get clean \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 -y \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#  #############################################################################\n#   Setup Jupyter\n#  #############################################################################\nCOPY config.py /root/.jupyter/jupyter_notebook_config.py\n#   Copy sample notebooks.\nCOPY notebooks /notebooks\n#   Jupyter has issues with being run directly:\n#     https://github.com/ipython/ipython/issues/7062\n#   We just add a little wrapper script.\nCOPY run_jupyter.sh /\n#   TensorBoard\nEXPOSE 6006/tcp\n#   IPython\nEXPOSE 8888/tcp\n#   Tell docker where to go automatically\nWORKDIR \"/notebooks\"\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Mikkel Vilstrup <mikkel@vilstrup.dk>\n# #############################################################################\n#  Install TensorFlow dependencies\n# #############################################################################\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget ca-certificates git curl libfreetype6-dev libpng12-dev l ibhdf5-dev openmpi-bin pkg-config zip g++ zlib1g-dev unzip build-essential openjdk-8-jdk openjdk-8-jre-headless software-properties-common python python-dev apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\n# #############################################################################\n#  Install Anaconda\n# #############################################################################\nRUN apt-get update \\\n && apt-get install wget bzip2 ca-certificates -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget --quiet https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh \\\n && /bin/bash Anaconda3-4.4.0-Linux-x86_64.sh -b -p /opt/conda \\\n && rm Anaconda3-4.4.0-Linux-x86_64.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN pip install pip --upgrade\n# #############################################################################\n#  Install TensorFlow w/ CPU instructions\n# #############################################################################\nRUN echo \"startup --batch\" >> /etc/bazel.bazelrc\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" >> /etc/bazel.bazelrc\nENV BAZEL_VERSION=\"0.5.0\"\nWORKDIR /\nRUN mkdir /bazel \\\n && cd /bazel \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \\\n && chmod +x bazel-*.sh \\\n && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && cd / \\\n && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\nRUN git clone https://github.com/tensorflow/tensorflow.git \\\n && cd tensorflow \\\n && git checkout r1.2\nWORKDIR /tensorflow\n#  Must set bazel commands:\n#  https://stackoverflow.com/questions/41293077/how-to-compile-tensorflow-with-sse4-2-and-avx-instructions\nRUN tensorflow/tools/ci_build/builds/configured CPU bazel build -c opt --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --copt=-msse4.1 --copt=-msse4.2 tensorflow/tools/pip_package:build_pip_package \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip \\\n && pip install /tmp/pip/tensorflow-*.whl --no-cache-dir --upgrade \\\n && rm -rf /tmp/pip \\\n && rm -rf /root/.cache\n# #############################################################################\n#  Setup Language to UTF-8 for text\n# #############################################################################\n#  https://askubuntu.com/a/601498\nRUN apt-get clean \\\n && apt-get update -y \\\n && apt-get install locales -y \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n# #############################################################################\n#  Setup Jupyter\n# #############################################################################\nCOPY config.py /root/.jupyter/jupyter_notebook_config.py\n#  Copy sample notebooks.\nCOPY notebooks /notebooks\n#  Jupyter has issues with being run directly:\n#    https://github.com/ipython/ipython/issues/7062\n#  We just add a little wrapper script.\nCOPY run_jupyter.sh /\n#  TensorBoard\nEXPOSE 6006/tcp\n#  IPython\nEXPOSE 8888/tcp\n#  Tell docker where to go automatically\nWORKDIR \"/notebooks\"\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\n","injectedSmells":[],"originalDockerfileHash":"b18f5ff00fcf7490f5d943b6d670ee0c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Mikkel Vilstrup <mikkel@vilstrup.dk>\n#  #############################################################################\n#   Install TensorFlow dependencies\n#  #############################################################################\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget ca-certificates git curl libfreetype6-dev libpng12-dev l ibhdf5-dev openmpi-bin pkg-config zip g++ zlib1g-dev unzip build-essential openjdk-8-jdk openjdk-8-jre-headless software-properties-common python python-dev apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\n#  #############################################################################\n#   Install Anaconda\n#  #############################################################################\nRUN apt-get update \\\n && apt-get install wget bzip2 ca-certificates -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget --quiet https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh \\\n && /bin/bash Anaconda3-4.4.0-Linux-x86_64.sh -b -p /opt/conda \\\n && rm Anaconda3-4.4.0-Linux-x86_64.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN pip install pip --upgrade\n#  #############################################################################\n#   Install TensorFlow w/ CPU instructions\n#  #############################################################################\nRUN echo \"startup --batch\" >> /etc/bazel.bazelrc\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" >> /etc/bazel.bazelrc\nENV BAZEL_VERSION=\"0.5.0\"\nWORKDIR /\nRUN mkdir /bazel \\\n && cd /bazel \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \\\n && chmod +x bazel-*.sh \\\n && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && cd / \\\n && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\nRUN git clone https://github.com/tensorflow/tensorflow.git \\\n && cd tensorflow \\\n && git checkout r1.2\nWORKDIR /tensorflow\n#   Must set bazel commands:\n#   https://stackoverflow.com/questions/41293077/how-to-compile-tensorflow-with-sse4-2-and-avx-instructions\nRUN tensorflow/tools/ci_build/builds/configured CPU bazel build -c opt --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --copt=-msse4.1 --copt=-msse4.2 tensorflow/tools/pip_package:build_pip_package \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip \\\n && pip install /tmp/pip/tensorflow-*.whl --no-cache-dir --upgrade \\\n && rm -rf /tmp/pip \\\n && rm -rf /root/.cache\n#  #############################################################################\n#   Setup Language to UTF-8 for text\n#  #############################################################################\n#   https://askubuntu.com/a/601498\nRUN apt-get clean \\\n && apt-get update -y \\\n && apt-get install locales -y \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#  #############################################################################\n#   Setup Jupyter\n#  #############################################################################\nCOPY config.py /root/.jupyter/jupyter_notebook_config.py\n#   Copy sample notebooks.\nCOPY notebooks /notebooks\n#   Jupyter has issues with being run directly:\n#     https://github.com/ipython/ipython/issues/7062\n#   We just add a little wrapper script.\nCOPY run_jupyter.sh /\n#   TensorBoard\nEXPOSE 6006/tcp\n#   IPython\nEXPOSE 8888/tcp\n#   Tell docker where to go automatically\nWORKDIR \"/notebooks\"\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\n","originalDockerfileUglifiedHash":"543852dad13e26f12c96fa50a3aff9a6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8459064207159ea46ae45a93692de09af364a2f9.dockerfile"}