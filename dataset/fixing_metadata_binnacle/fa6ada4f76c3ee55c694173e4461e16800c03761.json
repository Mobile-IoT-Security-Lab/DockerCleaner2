{"seed":2972472620,"processedDockerfileHash":"7202e488e5df6be44047527eba12bb0d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"FROM adoptopenjdk/openjdk8-openj9:alpine-jre\n#   this image already contains glibc\nENV JIRA_USER=\"jira\" \\\n    JIRA_GROUP=\"jira\" \\\n    CONTAINER_UID=\"1000\" \\\n    CONTAINER_GID=\"1000\" \\\n    JIRA_CONTEXT_PATH=\"ROOT\" \\\n    JIRA_HOME=\"/var/atlassian/jira\" \\\n    JIRA_INSTALL=\"/opt/jira\" \\\n    JIRA_SCRIPTS=\"/usr/local/share/atlassian\" \\\n    JRE_HOME=\"$JAVA_HOME\" \\\n    _RUNJAVA=\"java\"\nCOPY bin $JIRA_SCRIPTS\nWORKDIR /tmp\n#   glibc and pub key already installed by parent image; we need to install latest bin and i18n\nRUN export GLIBC_VERSION=2.29-r0 \\\n && export GLIBC_DOWNLOAD_URL=https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION \\\n && export GLIBC_BIN=glibc-bin-$GLIBC_VERSION.apk \\\n && export GLIBC_I18N=glibc-i18n-$GLIBC_VERSION.apk \\\n && wget -O $GLIBC_BIN $GLIBC_DOWNLOAD_URL/$GLIBC_BIN \\\n && wget -O $GLIBC_I18N $GLIBC_DOWNLOAD_URL/$GLIBC_I18N \\\n && apk add bash su-exec gzip nano tini wget xmlstarlet fontconfig msttcorefonts-installer ttf-dejavu ghostscript graphviz motif $GLIBC_BIN $GLIBC_I18N --update --no-cache \\\n && update-ms-fonts \\\n && fc-cache -f \\\n && export JIRA_LIB=$JIRA_INSTALL/lib \\\n && mkdir -p $JIRA_HOME $JIRA_INSTALL $JIRA_LIB \\\n && addgroup -g $CONTAINER_GID $JIRA_GROUP \\\n && export MYSQL_DRIVER_VERSION=5.1.47 \\\n && export MYSQL_FILE_BASE=mysql-connector-java-$MYSQL_DRIVER_VERSION \\\n && export MYSQL_FILE_TAR=$MYSQL_FILE_BASE.tar.gz \\\n && export MYSQL_FILE_BIN=$MYSQL_FILE_BASE-bin.jar \\\n && export MYSQL_DOWNLOAD_URL=https://dev.mysql.com/get/Downloads/Connector-J/$MYSQL_FILE_TAR \\\n && export POSTGRESQL_DRIVER_VERSION=42.2.5 \\\n && export POSTGRESQL_FILE=postgresql-$POSTGRESQL_DRIVER_VERSION.jar \\\n && export POSTGRESQL_DOWNLOAD_URL=https://jdbc.postgresql.org/download/$POSTGRESQL_FILE \\\n && rm -f $JIRA_LIB/mysql-connector-java*.jar \\\n && wget -O $MYSQL_FILE_TAR $MYSQL_DOWNLOAD_URL \\\n && tar xzf $MYSQL_FILE_TAR --strip=1 \\\n && cp $MYSQL_FILE_BIN $JIRA_LIB/$MYSQL_FILE_BIN \\\n && rm -f $JIRA_LIB/postgresql-*.jar \\\n && wget -O $JIRA_LIB/$POSTGRESQL_FILE $POSTGRESQL_DOWNLOAD_URL \\\n && export DOCKERIZE_VERSION=v0.6.1 \\\n && export DOCKERIZE_DOWNLOAD_URL=https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n && wget -O dockerize.tar.gz $DOCKERIZE_DOWNLOAD_URL \\\n && tar -C /usr/local/bin -xzvf dockerize.tar.gz \\\n && rm dockerize.tar.gz \\\n && export LE_DOWNLOAD_URL=https://letsencrypt.org/certs/ \\\n && export LE_AUTH_1=letsencryptauthorityx1.der \\\n && export LE_AUTH_2=letsencryptauthorityx2.der \\\n && export LE_CROSS_1=lets-encrypt-x1-cross-signed.der \\\n && export LE_CROSS_2=lets-encrypt-x2-cross-signed.der \\\n && export LE_CROSS_3=lets-encrypt-x3-cross-signed.der \\\n && export LE_CROSS_4=lets-encrypt-x4-cross-signed.der \\\n && export KEYSTORE=$JRE_HOME/lib/security/cacerts \\\n && wget $LE_DOWNLOAD_URL/$LE_AUTH_1 \\\n && wget $LE_DOWNLOAD_URL/$LE_AUTH_2 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_1 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_2 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_3 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_4 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file $LE_AUTH_1 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file $LE_AUTH_2 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file $LE_CROSS_1 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file $LE_CROSS_2 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file $LE_CROSS_3 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file $LE_CROSS_4 \\\n && apk del --no-cache msttcorefonts-installer \\\n && rm -rf /var/cache/apk/* /tmp/* /var/log/*\n#   Version\nARG JIRA_VERSION=8.2.1\n#   Language\nARG LANG_LANGUAGE=en\nARG LANG_COUNTRY=US\nRUN /usr/glibc-compat/bin/localedef -i ${LANG_LANGUAGE}_${LANG_COUNTRY} -f UTF-8 ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8\n#   Product\nARG JIRA_PRODUCT=jira-software\nRUN wget -O jira.bin https://www.atlassian.com/software/jira/downloads/binary/atlassian-$JIRA_PRODUCT-$JIRA_VERSION-x64.bin \\\n && chmod +x jira.bin \\\n && export JAVA_TOOL_OPTIONS=\"\" \\\n && ./jira.bin -q -varfile $JIRA_SCRIPTS/response.varfile \\\n && rm -rf $JIRA_INSTALL/jre \\\n && ln -s $JAVA_HOME $JIRA_INSTALL/jre \\\n && adduser -u $CONTAINER_UID -G $JIRA_GROUP -h /home/$JIRA_USER -s /bin/bash -S $JIRA_USER \\\n && wget -O /home/$JIRA_USER/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class \\\n && chown -R $JIRA_USER:$JIRA_GROUP $JIRA_HOME $JIRA_INSTALL $JIRA_SCRIPTS /home/$JIRA_USER \\\n && rm -rf /var/cache/apk/* /tmp/* /var/log/*\nUSER $JIRA_USER\nWORKDIR $JIRA_HOME\nVOLUME [\"$JIRA_HOME\"]\nEXPOSE 8080/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/share/atlassian/docker-entrypoint.sh\"]\nCMD [\"jira\"]\n#   This is set by the build script. Keep this at the end of the Dockerfile to preserve the build cache\nARG BUILD_DATE\n#   Image Metadata\nLABEL maintainer=\"Jonathan Hult <teamatldocker@JonathanHult.com>\" \\\n      org.opencontainers.image.authors=\"Jonathan Hult <teamatldocker@JonathanHult.com>\" \\\n      org.opencontainers.image.url=\"https://hub.docker.com/r/teamatldocker/jira/\" \\\n      org.opencontainers.image.title=\"$JIRA_PRODUCT\" \\\n      org.opencontainers.image.description=\"$JIRA_PRODUCT $JIRA_VERSION running on Alpine Linux\" \\\n      org.opencontainers.image.source=\"https://github.com/teamatldocker/jira/\" \\\n      org.opencontainers.image.created=\"$BUILD_DATE\" \\\n      org.opencontainers.image.version=\"$JIRA_VERSION\"\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM adoptopenjdk/openjdk8-openj9:alpine-jre\n#  this image already contains glibc\nENV JIRA_USER=\"jira\" \\\n    JIRA_GROUP=\"jira\" \\\n    CONTAINER_UID=\"1000\" \\\n    CONTAINER_GID=\"1000\" \\\n    JIRA_CONTEXT_PATH=\"ROOT\" \\\n    JIRA_HOME=\"/var/atlassian/jira\" \\\n    JIRA_INSTALL=\"/opt/jira\" \\\n    JIRA_SCRIPTS=\"/usr/local/share/atlassian\" \\\n    JRE_HOME=\"$JAVA_HOME\" \\\n    _RUNJAVA=\"java\"\nCOPY bin $JIRA_SCRIPTS\nWORKDIR /tmp\n#  glibc and pub key already installed by parent image; we need to install latest bin and i18n\nRUN export GLIBC_VERSION=2.29-r0 \\\n && export GLIBC_DOWNLOAD_URL=https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION \\\n && export GLIBC_BIN=glibc-bin-$GLIBC_VERSION.apk \\\n && export GLIBC_I18N=glibc-i18n-$GLIBC_VERSION.apk \\\n && wget -O $GLIBC_BIN $GLIBC_DOWNLOAD_URL/$GLIBC_BIN \\\n && wget -O $GLIBC_I18N $GLIBC_DOWNLOAD_URL/$GLIBC_I18N \\\n && apk add --update --no-cache bash su-exec gzip nano tini wget xmlstarlet $GLIBC_BIN $GLIBC_I18N fontconfig msttcorefonts-installer ttf-dejavu ghostscript graphviz motif \\\n && update-ms-fonts \\\n && fc-cache -f \\\n && export JIRA_LIB=$JIRA_INSTALL/lib \\\n && mkdir -p $JIRA_HOME $JIRA_INSTALL $JIRA_LIB \\\n && addgroup -g $CONTAINER_GID $JIRA_GROUP \\\n && export MYSQL_DRIVER_VERSION=5.1.47 \\\n && export MYSQL_FILE_BASE=mysql-connector-java-$MYSQL_DRIVER_VERSION \\\n && export MYSQL_FILE_TAR=$MYSQL_FILE_BASE.tar.gz \\\n && export MYSQL_FILE_BIN=$MYSQL_FILE_BASE-bin.jar \\\n && export MYSQL_DOWNLOAD_URL=https://dev.mysql.com/get/Downloads/Connector-J/$MYSQL_FILE_TAR \\\n && export POSTGRESQL_DRIVER_VERSION=42.2.5 \\\n && export POSTGRESQL_FILE=postgresql-$POSTGRESQL_DRIVER_VERSION.jar \\\n && export POSTGRESQL_DOWNLOAD_URL=https://jdbc.postgresql.org/download/$POSTGRESQL_FILE \\\n && rm -f $JIRA_LIB/mysql-connector-java*.jar \\\n && wget -O $MYSQL_FILE_TAR $MYSQL_DOWNLOAD_URL \\\n && tar xzf $MYSQL_FILE_TAR --strip=1 \\\n && cp $MYSQL_FILE_BIN $JIRA_LIB/$MYSQL_FILE_BIN \\\n && rm -f $JIRA_LIB/postgresql-*.jar \\\n && wget -O $JIRA_LIB/$POSTGRESQL_FILE $POSTGRESQL_DOWNLOAD_URL \\\n && export DOCKERIZE_VERSION=v0.6.1 \\\n && export DOCKERIZE_DOWNLOAD_URL=https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n && wget -O dockerize.tar.gz $DOCKERIZE_DOWNLOAD_URL \\\n && tar -C /usr/local/bin -xzvf dockerize.tar.gz \\\n && rm dockerize.tar.gz \\\n && export LE_DOWNLOAD_URL=https://letsencrypt.org/certs/ \\\n && export LE_AUTH_1=letsencryptauthorityx1.der \\\n && export LE_AUTH_2=letsencryptauthorityx2.der \\\n && export LE_CROSS_1=lets-encrypt-x1-cross-signed.der \\\n && export LE_CROSS_2=lets-encrypt-x2-cross-signed.der \\\n && export LE_CROSS_3=lets-encrypt-x3-cross-signed.der \\\n && export LE_CROSS_4=lets-encrypt-x4-cross-signed.der \\\n && export KEYSTORE=$JRE_HOME/lib/security/cacerts \\\n && wget $LE_DOWNLOAD_URL/$LE_AUTH_1 \\\n && wget $LE_DOWNLOAD_URL/$LE_AUTH_2 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_1 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_2 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_3 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_4 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file $LE_AUTH_1 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file $LE_AUTH_2 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file $LE_CROSS_1 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file $LE_CROSS_2 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file $LE_CROSS_3 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file $LE_CROSS_4 \\\n && apk del --no-cache msttcorefonts-installer \\\n && rm -rf /var/cache/apk/* /tmp/* /var/log/*\n#  Version\nARG JIRA_VERSION=8.2.1\n#  Language\nARG LANG_LANGUAGE=en\nARG LANG_COUNTRY=US\nRUN /usr/glibc-compat/bin/localedef -i ${LANG_LANGUAGE}_${LANG_COUNTRY} -f UTF-8 ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8\n#  Product\nARG JIRA_PRODUCT=jira-software\nRUN wget -O jira.bin https://www.atlassian.com/software/jira/downloads/binary/atlassian-$JIRA_PRODUCT-$JIRA_VERSION-x64.bin \\\n && chmod +x jira.bin \\\n && export JAVA_TOOL_OPTIONS=\"\" \\\n && ./jira.bin -q -varfile $JIRA_SCRIPTS/response.varfile \\\n && rm -rf $JIRA_INSTALL/jre \\\n && ln -s $JAVA_HOME $JIRA_INSTALL/jre \\\n && adduser -u $CONTAINER_UID -G $JIRA_GROUP -h /home/$JIRA_USER -s /bin/bash -S $JIRA_USER \\\n && wget -O /home/$JIRA_USER/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class \\\n && chown -R $JIRA_USER:$JIRA_GROUP $JIRA_HOME $JIRA_INSTALL $JIRA_SCRIPTS /home/$JIRA_USER \\\n && rm -rf /var/cache/apk/* /tmp/* /var/log/*\nUSER $JIRA_USER\nWORKDIR $JIRA_HOME\nVOLUME [\"$JIRA_HOME\"]\nEXPOSE 8080/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/share/atlassian/docker-entrypoint.sh\"]\nCMD [\"jira\"]\n#  This is set by the build script. Keep this at the end of the Dockerfile to preserve the build cache\nARG BUILD_DATE\n#  Image Metadata\nLABEL maintainer=\"Jonathan Hult <teamatldocker@JonathanHult.com>\" \\\n      org.opencontainers.image.authors=\"Jonathan Hult <teamatldocker@JonathanHult.com>\" \\\n      org.opencontainers.image.url=\"https://hub.docker.com/r/teamatldocker/jira/\" \\\n      org.opencontainers.image.title=\"$JIRA_PRODUCT\" \\\n      org.opencontainers.image.description=\"$JIRA_PRODUCT $JIRA_VERSION running on Alpine Linux\" \\\n      org.opencontainers.image.source=\"https://github.com/teamatldocker/jira/\" \\\n      org.opencontainers.image.created=\"$BUILD_DATE\" \\\n      org.opencontainers.image.version=\"$JIRA_VERSION\"\n","injectedSmells":[],"originalDockerfileHash":"5cf2cb9c063b91afe5ed5342b12c552c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM adoptopenjdk/openjdk8-openj9:alpine-jre\n#   this image already contains glibc\nENV JIRA_USER=\"jira\" \\\n    JIRA_GROUP=\"jira\" \\\n    CONTAINER_UID=\"1000\" \\\n    CONTAINER_GID=\"1000\" \\\n    JIRA_CONTEXT_PATH=\"ROOT\" \\\n    JIRA_HOME=\"/var/atlassian/jira\" \\\n    JIRA_INSTALL=\"/opt/jira\" \\\n    JIRA_SCRIPTS=\"/usr/local/share/atlassian\" \\\n    JRE_HOME=\"$JAVA_HOME\" \\\n    _RUNJAVA=\"java\"\nCOPY bin $JIRA_SCRIPTS\nWORKDIR /tmp\n#   glibc and pub key already installed by parent image; we need to install latest bin and i18n\nRUN export GLIBC_VERSION=2.29-r0 \\\n && export GLIBC_DOWNLOAD_URL=https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION \\\n && export GLIBC_BIN=glibc-bin-$GLIBC_VERSION.apk \\\n && export GLIBC_I18N=glibc-i18n-$GLIBC_VERSION.apk \\\n && wget -O $GLIBC_BIN $GLIBC_DOWNLOAD_URL/$GLIBC_BIN \\\n && wget -O $GLIBC_I18N $GLIBC_DOWNLOAD_URL/$GLIBC_I18N \\\n && apk add --update --no-cache bash su-exec gzip nano tini wget xmlstarlet $GLIBC_BIN $GLIBC_I18N fontconfig msttcorefonts-installer ttf-dejavu ghostscript graphviz motif \\\n && update-ms-fonts \\\n && fc-cache -f \\\n && export JIRA_LIB=$JIRA_INSTALL/lib \\\n && mkdir -p $JIRA_HOME $JIRA_INSTALL $JIRA_LIB \\\n && addgroup -g $CONTAINER_GID $JIRA_GROUP \\\n && export MYSQL_DRIVER_VERSION=5.1.47 \\\n && export MYSQL_FILE_BASE=mysql-connector-java-$MYSQL_DRIVER_VERSION \\\n && export MYSQL_FILE_TAR=$MYSQL_FILE_BASE.tar.gz \\\n && export MYSQL_FILE_BIN=$MYSQL_FILE_BASE-bin.jar \\\n && export MYSQL_DOWNLOAD_URL=https://dev.mysql.com/get/Downloads/Connector-J/$MYSQL_FILE_TAR \\\n && export POSTGRESQL_DRIVER_VERSION=42.2.5 \\\n && export POSTGRESQL_FILE=postgresql-$POSTGRESQL_DRIVER_VERSION.jar \\\n && export POSTGRESQL_DOWNLOAD_URL=https://jdbc.postgresql.org/download/$POSTGRESQL_FILE \\\n && rm -f $JIRA_LIB/mysql-connector-java*.jar \\\n && wget -O $MYSQL_FILE_TAR $MYSQL_DOWNLOAD_URL \\\n && tar xzf $MYSQL_FILE_TAR --strip=1 \\\n && cp $MYSQL_FILE_BIN $JIRA_LIB/$MYSQL_FILE_BIN \\\n && rm -f $JIRA_LIB/postgresql-*.jar \\\n && wget -O $JIRA_LIB/$POSTGRESQL_FILE $POSTGRESQL_DOWNLOAD_URL \\\n && export DOCKERIZE_VERSION=v0.6.1 \\\n && export DOCKERIZE_DOWNLOAD_URL=https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n && wget -O dockerize.tar.gz $DOCKERIZE_DOWNLOAD_URL \\\n && tar -C /usr/local/bin -xzvf dockerize.tar.gz \\\n && rm dockerize.tar.gz \\\n && export LE_DOWNLOAD_URL=https://letsencrypt.org/certs/ \\\n && export LE_AUTH_1=letsencryptauthorityx1.der \\\n && export LE_AUTH_2=letsencryptauthorityx2.der \\\n && export LE_CROSS_1=lets-encrypt-x1-cross-signed.der \\\n && export LE_CROSS_2=lets-encrypt-x2-cross-signed.der \\\n && export LE_CROSS_3=lets-encrypt-x3-cross-signed.der \\\n && export LE_CROSS_4=lets-encrypt-x4-cross-signed.der \\\n && export KEYSTORE=$JRE_HOME/lib/security/cacerts \\\n && wget $LE_DOWNLOAD_URL/$LE_AUTH_1 \\\n && wget $LE_DOWNLOAD_URL/$LE_AUTH_2 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_1 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_2 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_3 \\\n && wget $LE_DOWNLOAD_URL/$LE_CROSS_4 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file $LE_AUTH_1 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file $LE_AUTH_2 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file $LE_CROSS_1 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file $LE_CROSS_2 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file $LE_CROSS_3 \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file $LE_CROSS_4 \\\n && apk del --no-cache msttcorefonts-installer \\\n && rm -rf /var/cache/apk/* /tmp/* /var/log/*\n#   Version\nARG JIRA_VERSION=8.2.1\n#   Language\nARG LANG_LANGUAGE=en\nARG LANG_COUNTRY=US\nRUN /usr/glibc-compat/bin/localedef -i ${LANG_LANGUAGE}_${LANG_COUNTRY} -f UTF-8 ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8\n#   Product\nARG JIRA_PRODUCT=jira-software\nRUN wget -O jira.bin https://www.atlassian.com/software/jira/downloads/binary/atlassian-$JIRA_PRODUCT-$JIRA_VERSION-x64.bin \\\n && chmod +x jira.bin \\\n && export JAVA_TOOL_OPTIONS=\"\" \\\n && ./jira.bin -q -varfile $JIRA_SCRIPTS/response.varfile \\\n && rm -rf $JIRA_INSTALL/jre \\\n && ln -s $JAVA_HOME $JIRA_INSTALL/jre \\\n && adduser -u $CONTAINER_UID -G $JIRA_GROUP -h /home/$JIRA_USER -s /bin/bash -S $JIRA_USER \\\n && wget -O /home/$JIRA_USER/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class \\\n && chown -R $JIRA_USER:$JIRA_GROUP $JIRA_HOME $JIRA_INSTALL $JIRA_SCRIPTS /home/$JIRA_USER \\\n && rm -rf /var/cache/apk/* /tmp/* /var/log/*\nUSER $JIRA_USER\nWORKDIR $JIRA_HOME\nVOLUME [\"$JIRA_HOME\"]\nEXPOSE 8080/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/share/atlassian/docker-entrypoint.sh\"]\nCMD [\"jira\"]\n#   This is set by the build script. Keep this at the end of the Dockerfile to preserve the build cache\nARG BUILD_DATE\n#   Image Metadata\nLABEL maintainer=\"Jonathan Hult <teamatldocker@JonathanHult.com>\" \\\n      org.opencontainers.image.authors=\"Jonathan Hult <teamatldocker@JonathanHult.com>\" \\\n      org.opencontainers.image.url=\"https://hub.docker.com/r/teamatldocker/jira/\" \\\n      org.opencontainers.image.title=\"$JIRA_PRODUCT\" \\\n      org.opencontainers.image.description=\"$JIRA_PRODUCT $JIRA_VERSION running on Alpine Linux\" \\\n      org.opencontainers.image.source=\"https://github.com/teamatldocker/jira/\" \\\n      org.opencontainers.image.created=\"$BUILD_DATE\" \\\n      org.opencontainers.image.version=\"$JIRA_VERSION\"\n","originalDockerfileUglifiedHash":"84d26b11a345cccc56720721e6f0d0db","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fa6ada4f76c3ee55c694173e4461e16800c03761.dockerfile"}