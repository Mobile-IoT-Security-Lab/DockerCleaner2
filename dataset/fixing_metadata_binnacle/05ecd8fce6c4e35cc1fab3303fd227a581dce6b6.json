{"seed":894330935,"processedDockerfileHash":"fc4b268dcadb8afe0cd24d6a58b9c84b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-user"],"processedDockerfile":"#   Image metadata and config\nFROM debian:stretch\nLABEL name=\"angular.io PR preview\" \\\n      description=\"This image implements the PR preview functionality for angular.io.\" \\\n      vendor=\"Angular\" \\\n      version=\"1.0\"\nVOLUME /aio-secrets\nVOLUME /var/www/aio-builds\nVOLUME /dockerbuild\nEXPOSE 80/tcp 443/tcp\n#   Build-time args and env vars\n#   The AIO_ARTIFACT_PATH path needs to be kept in synch with the value of\n#   `aio_preview->steps->store_artifacts->destination` property in `.circleci/config.yml`\nARG AIO_ARTIFACT_PATH=aio/dist/aio-snapshot.tgz\nARG TEST_AIO_ARTIFACT_PATH=$AIO_ARTIFACT_PATH\nARG AIO_BUILDS_DIR=/var/www/aio-builds\nARG TEST_AIO_BUILDS_DIR=/tmp/aio-builds\nARG AIO_DOMAIN_NAME=ngbuilds.io\nARG TEST_AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME.localhost\nARG AIO_GITHUB_ORGANIZATION=angular\nARG TEST_AIO_GITHUB_ORGANIZATION=test-org\nARG AIO_GITHUB_REPO=angular\nARG TEST_AIO_GITHUB_REPO=test-repo\nARG AIO_GITHUB_TEAM_SLUGS=aio-auto-previews,aio-contributors\nARG TEST_AIO_GITHUB_TEAM_SLUGS=test-team-1,test-team-2\nARG AIO_NGINX_HOSTNAME=$AIO_DOMAIN_NAME\nARG TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_DOMAIN_NAME\nARG AIO_NGINX_PORT_HTTP=80\nARG TEST_AIO_NGINX_PORT_HTTP=8080\nARG AIO_NGINX_PORT_HTTPS=443\nARG TEST_AIO_NGINX_PORT_HTTPS=4433\nARG AIO_SIGNIFICANT_FILES_PATTERN='^(?:aio|packages)/(?!.*[._]spec\\\\.[jt]s$)'\nARG TEST_AIO_SIGNIFICANT_FILES_PATTERN=$AIO_SIGNIFICANT_FILES_PATTERN\nARG AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG TEST_AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG AIO_PREVIEW_SERVER_HOSTNAME=preview.localhost\nARG TEST_AIO_PREVIEW_SERVER_HOSTNAME=preview.localhost\nARG AIO_ARTIFACT_MAX_SIZE=26214400\nARG TEST_AIO_ARTIFACT_MAX_SIZE=200\nARG AIO_PREVIEW_SERVER_PORT=3000\nARG TEST_AIO_PREVIEW_SERVER_PORT=3001\nENV AIO_ARTIFACT_PATH=\"$AIO_ARTIFACT_PATH\" \\\n    TEST_AIO_ARTIFACT_PATH=\"$TEST_AIO_ARTIFACT_PATH\" \\\n    AIO_BUILDS_DIR=\"$AIO_BUILDS_DIR\" \\\n    TEST_AIO_BUILDS_DIR=\"$TEST_AIO_BUILDS_DIR\" \\\n    AIO_DOMAIN_NAME=\"$AIO_DOMAIN_NAME\" \\\n    TEST_AIO_DOMAIN_NAME=\"$TEST_AIO_DOMAIN_NAME\" \\\n    AIO_GITHUB_ORGANIZATION=\"$AIO_GITHUB_ORGANIZATION\" \\\n    TEST_AIO_GITHUB_ORGANIZATION=\"$TEST_AIO_GITHUB_ORGANIZATION\" \\\n    AIO_GITHUB_REPO=\"$AIO_GITHUB_REPO\" \\\n    TEST_AIO_GITHUB_REPO=\"$TEST_AIO_GITHUB_REPO\" \\\n    AIO_GITHUB_TEAM_SLUGS=\"$AIO_GITHUB_TEAM_SLUGS\" \\\n    TEST_AIO_GITHUB_TEAM_SLUGS=\"$TEST_AIO_GITHUB_TEAM_SLUGS\" \\\n    AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts\" \\\n    TEST_AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts-test\" \\\n    AIO_NGINX_HOSTNAME=\"$AIO_NGINX_HOSTNAME\" \\\n    TEST_AIO_NGINX_HOSTNAME=\"$TEST_AIO_NGINX_HOSTNAME\" \\\n    AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx\" \\\n    TEST_AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx-test\" \\\n    AIO_NGINX_PORT_HTTP=\"$AIO_NGINX_PORT_HTTP\" \\\n    TEST_AIO_NGINX_PORT_HTTP=\"$TEST_AIO_NGINX_PORT_HTTP\" \\\n    AIO_NGINX_PORT_HTTPS=\"$AIO_NGINX_PORT_HTTPS\" \\\n    TEST_AIO_NGINX_PORT_HTTPS=\"$TEST_AIO_NGINX_PORT_HTTPS\" \\\n    AIO_SCRIPTS_JS_DIR=\"/usr/share/aio-scripts-js\" \\\n    AIO_SCRIPTS_SH_DIR=\"/usr/share/aio-scripts-sh\" \\\n    AIO_SIGNIFICANT_FILES_PATTERN=\"$AIO_SIGNIFICANT_FILES_PATTERN\" \\\n    TEST_AIO_SIGNIFICANT_FILES_PATTERN=\"$TEST_AIO_SIGNIFICANT_FILES_PATTERN\" \\\n    AIO_TRUSTED_PR_LABEL=\"$AIO_TRUSTED_PR_LABEL\" \\\n    TEST_AIO_TRUSTED_PR_LABEL=\"$TEST_AIO_TRUSTED_PR_LABEL\" \\\n    AIO_PREVIEW_SERVER_HOSTNAME=\"$AIO_PREVIEW_SERVER_HOSTNAME\" \\\n    TEST_AIO_PREVIEW_SERVER_HOSTNAME=\"$TEST_AIO_PREVIEW_SERVER_HOSTNAME\" \\\n    AIO_ARTIFACT_MAX_SIZE=\"$AIO_ARTIFACT_MAX_SIZE\" \\\n    TEST_AIO_ARTIFACT_MAX_SIZE=\"$TEST_AIO_ARTIFACT_MAX_SIZE\" \\\n    AIO_PREVIEW_SERVER_PORT=\"$AIO_PREVIEW_SERVER_PORT\" \\\n    TEST_AIO_PREVIEW_SERVER_PORT=\"$TEST_AIO_PREVIEW_SERVER_PORT\" \\\n    AIO_WWW_USER=\"www-data\" \\\n    NODE_ENV=\"production\"\n#   Create directory for logs\nRUN mkdir /var/log/aio\n#   Add extra package sources\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends curl=7.52.1-5+deb9u16 -y\nRUN curl --silent --show-error --location https://deb.nodesource.com/setup_10.x | bash -\nRUN curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN echo \"deb http://ftp.debian.org/debian stretch-backports main\" | tee /etc/apt/sources.list.d/backports.list\n#   Install packages\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends cron=3.0pl1-128+deb9u1 dnsmasq=2.76-5+deb9u2 nano=2.7.4-1 nginx=1.10.3-1+deb9u2 nodejs=10.15.3-1nodesource1 openssl=1.1.0j-1~deb9u1 rsyslog=8.24.0-1 yarn=1.15.2-1 -y\nRUN yarn global add pm2@3.5.0\n#   Set up log rotation\nCOPY logrotate/* /etc/logrotate.d/\nRUN chmod 0644 /etc/logrotate.d/*\n#   Set up cronjobs\nCOPY cronjobs/aio-builds-cleanup /etc/cron.d/\nRUN chmod 0744 /etc/cron.d/aio-builds-cleanup\nRUN crontab /etc/cron.d/aio-builds-cleanup\nRUN printenv | grep AIO_ >> /etc/environment\n#   Set up dnsmasq\nCOPY dnsmasq/dnsmasq.conf /etc/\nRUN sed -i \"s|{{$AIO_NGINX_HOSTNAME}}|$AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_HOSTNAME}}|$AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_NGINX_HOSTNAME}}|$TEST_AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_PREVIEW_SERVER_HOSTNAME}}|$TEST_AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/dnsmasq.conf\n#   Set up SSL/TLS certificates\nCOPY nginx/create-selfsigned-cert.sh /tmp/\nRUN chmod a+x /tmp/create-selfsigned-cert.sh\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-prod\" \"$AIO_NGINX_HOSTNAME\" \"$AIO_LOCALCERTS_DIR\"\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-test\" \"$TEST_AIO_NGINX_HOSTNAME\" \"$TEST_AIO_LOCALCERTS_DIR\"\nRUN rm /tmp/create-selfsigned-cert.sh\nRUN update-ca-certificates\n#   Set up nginx (for production and testing)\nRUN sed -i -E \"s|^user\\s+\\S+;|user $AIO_WWW_USER;|\" /etc/nginx/nginx.conf\nRUN rm -f /etc/nginx/conf.d/*\nRUN rm -f /etc/nginx/sites-enabled/*\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_HOSTNAME}}|$AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_ARTIFACT_MAX_SIZE}}|$AIO_ARTIFACT_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_PORT}}|$AIO_PREVIEW_SERVER_PORT|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$TEST_AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$TEST_AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$TEST_AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$TEST_AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$TEST_AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$TEST_AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_HOSTNAME}}|$TEST_AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_ARTIFACT_MAX_SIZE}}|$TEST_AIO_ARTIFACT_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_PORT}}|$TEST_AIO_PREVIEW_SERVER_PORT|g\" /etc/nginx/conf.d/aio-builds-test.conf\n#   Set up pm2\nRUN pm2 startup --user root > /dev/null\n#   Set up the shell scripts\nCOPY scripts-sh/ $AIO_SCRIPTS_SH_DIR/\nRUN chmod a+x $AIO_SCRIPTS_SH_DIR/*\nRUN find $AIO_SCRIPTS_SH_DIR -maxdepth 1 -type f -printf \"%P\\n\" | while read file ; do ln -s $AIO_SCRIPTS_SH_DIR/$file /usr/local/bin/aio-${file%.*} ; done\n#   Set up the Node.js scripts\nCOPY scripts-js/ $AIO_SCRIPTS_JS_DIR/\nWORKDIR $AIO_SCRIPTS_JS_DIR/\nRUN yarn install --production --frozen-lockfile\n#   Set up health check\nHEALTHCHECK --interval=300s CMD /usr/local/bin/aio-health-check\n#   Go!\nWORKDIR /\nCMD aio-init \\\n && tail -f /dev/null\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n","originalDockerfile":"#  Image metadata and config\nFROM debian:stretch\nLABEL name=\"angular.io PR preview\" \\\n      description=\"This image implements the PR preview functionality for angular.io.\" \\\n      vendor=\"Angular\" \\\n      version=\"1.0\"\nVOLUME /aio-secrets\nVOLUME /var/www/aio-builds\nVOLUME /dockerbuild\nEXPOSE 80/tcp 443/tcp\n#  Build-time args and env vars\n#  The AIO_ARTIFACT_PATH path needs to be kept in synch with the value of\n#  `aio_preview->steps->store_artifacts->destination` property in `.circleci/config.yml`\nARG AIO_ARTIFACT_PATH=aio/dist/aio-snapshot.tgz\nARG TEST_AIO_ARTIFACT_PATH=$AIO_ARTIFACT_PATH\nARG AIO_BUILDS_DIR=/var/www/aio-builds\nARG TEST_AIO_BUILDS_DIR=/tmp/aio-builds\nARG AIO_DOMAIN_NAME=ngbuilds.io\nARG TEST_AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME.localhost\nARG AIO_GITHUB_ORGANIZATION=angular\nARG TEST_AIO_GITHUB_ORGANIZATION=test-org\nARG AIO_GITHUB_REPO=angular\nARG TEST_AIO_GITHUB_REPO=test-repo\nARG AIO_GITHUB_TEAM_SLUGS=aio-auto-previews,aio-contributors\nARG TEST_AIO_GITHUB_TEAM_SLUGS=test-team-1,test-team-2\nARG AIO_NGINX_HOSTNAME=$AIO_DOMAIN_NAME\nARG TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_DOMAIN_NAME\nARG AIO_NGINX_PORT_HTTP=80\nARG TEST_AIO_NGINX_PORT_HTTP=8080\nARG AIO_NGINX_PORT_HTTPS=443\nARG TEST_AIO_NGINX_PORT_HTTPS=4433\nARG AIO_SIGNIFICANT_FILES_PATTERN='^(?:aio|packages)/(?!.*[._]spec\\\\.[jt]s$)'\nARG TEST_AIO_SIGNIFICANT_FILES_PATTERN=$AIO_SIGNIFICANT_FILES_PATTERN\nARG AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG TEST_AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG AIO_PREVIEW_SERVER_HOSTNAME=preview.localhost\nARG TEST_AIO_PREVIEW_SERVER_HOSTNAME=preview.localhost\nARG AIO_ARTIFACT_MAX_SIZE=26214400\nARG TEST_AIO_ARTIFACT_MAX_SIZE=200\nARG AIO_PREVIEW_SERVER_PORT=3000\nARG TEST_AIO_PREVIEW_SERVER_PORT=3001\nENV AIO_ARTIFACT_PATH=\"$AIO_ARTIFACT_PATH\" \\\n    TEST_AIO_ARTIFACT_PATH=\"$TEST_AIO_ARTIFACT_PATH\" \\\n    AIO_BUILDS_DIR=\"$AIO_BUILDS_DIR\" \\\n    TEST_AIO_BUILDS_DIR=\"$TEST_AIO_BUILDS_DIR\" \\\n    AIO_DOMAIN_NAME=\"$AIO_DOMAIN_NAME\" \\\n    TEST_AIO_DOMAIN_NAME=\"$TEST_AIO_DOMAIN_NAME\" \\\n    AIO_GITHUB_ORGANIZATION=\"$AIO_GITHUB_ORGANIZATION\" \\\n    TEST_AIO_GITHUB_ORGANIZATION=\"$TEST_AIO_GITHUB_ORGANIZATION\" \\\n    AIO_GITHUB_REPO=\"$AIO_GITHUB_REPO\" \\\n    TEST_AIO_GITHUB_REPO=\"$TEST_AIO_GITHUB_REPO\" \\\n    AIO_GITHUB_TEAM_SLUGS=\"$AIO_GITHUB_TEAM_SLUGS\" \\\n    TEST_AIO_GITHUB_TEAM_SLUGS=\"$TEST_AIO_GITHUB_TEAM_SLUGS\" \\\n    AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts\" \\\n    TEST_AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts-test\" \\\n    AIO_NGINX_HOSTNAME=\"$AIO_NGINX_HOSTNAME\" \\\n    TEST_AIO_NGINX_HOSTNAME=\"$TEST_AIO_NGINX_HOSTNAME\" \\\n    AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx\" \\\n    TEST_AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx-test\" \\\n    AIO_NGINX_PORT_HTTP=\"$AIO_NGINX_PORT_HTTP\" \\\n    TEST_AIO_NGINX_PORT_HTTP=\"$TEST_AIO_NGINX_PORT_HTTP\" \\\n    AIO_NGINX_PORT_HTTPS=\"$AIO_NGINX_PORT_HTTPS\" \\\n    TEST_AIO_NGINX_PORT_HTTPS=\"$TEST_AIO_NGINX_PORT_HTTPS\" \\\n    AIO_SCRIPTS_JS_DIR=\"/usr/share/aio-scripts-js\" \\\n    AIO_SCRIPTS_SH_DIR=\"/usr/share/aio-scripts-sh\" \\\n    AIO_SIGNIFICANT_FILES_PATTERN=\"$AIO_SIGNIFICANT_FILES_PATTERN\" \\\n    TEST_AIO_SIGNIFICANT_FILES_PATTERN=\"$TEST_AIO_SIGNIFICANT_FILES_PATTERN\" \\\n    AIO_TRUSTED_PR_LABEL=\"$AIO_TRUSTED_PR_LABEL\" \\\n    TEST_AIO_TRUSTED_PR_LABEL=\"$TEST_AIO_TRUSTED_PR_LABEL\" \\\n    AIO_PREVIEW_SERVER_HOSTNAME=\"$AIO_PREVIEW_SERVER_HOSTNAME\" \\\n    TEST_AIO_PREVIEW_SERVER_HOSTNAME=\"$TEST_AIO_PREVIEW_SERVER_HOSTNAME\" \\\n    AIO_ARTIFACT_MAX_SIZE=\"$AIO_ARTIFACT_MAX_SIZE\" \\\n    TEST_AIO_ARTIFACT_MAX_SIZE=\"$TEST_AIO_ARTIFACT_MAX_SIZE\" \\\n    AIO_PREVIEW_SERVER_PORT=\"$AIO_PREVIEW_SERVER_PORT\" \\\n    TEST_AIO_PREVIEW_SERVER_PORT=\"$TEST_AIO_PREVIEW_SERVER_PORT\" \\\n    AIO_WWW_USER=\"www-data\" \\\n    NODE_ENV=\"production\"\n#  Create directory for logs\nRUN mkdir /var/log/aio\n#  Add extra package sources\nRUN apt-get update -y \\\n && apt-get install curl -y\nRUN curl --silent --show-error --location https://deb.nodesource.com/setup_10.x | bash -\nRUN curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN echo \"deb http://ftp.debian.org/debian stretch-backports main\" | tee /etc/apt/sources.list.d/backports.list\n#  Install packages\nRUN apt-get update -y \\\n && apt-get install cron=3.0pl1-128+deb9u1 dnsmasq=2.76-5+deb9u2 nano=2.7.4-1 nginx=1.10.3-1+deb9u2 nodejs=10.15.3-1nodesource1 openssl=1.1.0j-1~deb9u1 rsyslog=8.24.0-1 yarn=1.15.2-1 -y\nRUN yarn global add pm2@3.5.0\n#  Set up log rotation\nCOPY logrotate/* /etc/logrotate.d/\nRUN chmod 0644 /etc/logrotate.d/*\n#  Set up cronjobs\nCOPY cronjobs/aio-builds-cleanup /etc/cron.d/\nRUN chmod 0744 /etc/cron.d/aio-builds-cleanup\nRUN crontab /etc/cron.d/aio-builds-cleanup\nRUN printenv | grep AIO_ >> /etc/environment\n#  Set up dnsmasq\nCOPY dnsmasq/dnsmasq.conf /etc/\nRUN sed -i \"s|{{$AIO_NGINX_HOSTNAME}}|$AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_HOSTNAME}}|$AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_NGINX_HOSTNAME}}|$TEST_AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_PREVIEW_SERVER_HOSTNAME}}|$TEST_AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/dnsmasq.conf\n#  Set up SSL/TLS certificates\nCOPY nginx/create-selfsigned-cert.sh /tmp/\nRUN chmod a+x /tmp/create-selfsigned-cert.sh\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-prod\" \"$AIO_NGINX_HOSTNAME\" \"$AIO_LOCALCERTS_DIR\"\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-test\" \"$TEST_AIO_NGINX_HOSTNAME\" \"$TEST_AIO_LOCALCERTS_DIR\"\nRUN rm /tmp/create-selfsigned-cert.sh\nRUN update-ca-certificates\n#  Set up nginx (for production and testing)\nRUN sed -i -E \"s|^user\\s+\\S+;|user $AIO_WWW_USER;|\" /etc/nginx/nginx.conf\nRUN rm -f /etc/nginx/conf.d/*\nRUN rm -f /etc/nginx/sites-enabled/*\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_HOSTNAME}}|$AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_ARTIFACT_MAX_SIZE}}|$AIO_ARTIFACT_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_PORT}}|$AIO_PREVIEW_SERVER_PORT|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$TEST_AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$TEST_AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$TEST_AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$TEST_AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$TEST_AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$TEST_AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_HOSTNAME}}|$TEST_AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_ARTIFACT_MAX_SIZE}}|$TEST_AIO_ARTIFACT_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_PORT}}|$TEST_AIO_PREVIEW_SERVER_PORT|g\" /etc/nginx/conf.d/aio-builds-test.conf\n#  Set up pm2\nRUN pm2 startup --user root > /dev/null\n#  Set up the shell scripts\nCOPY scripts-sh/ $AIO_SCRIPTS_SH_DIR/\nRUN chmod a+x $AIO_SCRIPTS_SH_DIR/*\nRUN find $AIO_SCRIPTS_SH_DIR -maxdepth 1 -type f -printf \"%P\\n\" | while read file ; do ln -s $AIO_SCRIPTS_SH_DIR/$file /usr/local/bin/aio-${file%.*} ; done\n#  Set up the Node.js scripts\nCOPY scripts-js/ $AIO_SCRIPTS_JS_DIR/\nWORKDIR $AIO_SCRIPTS_JS_DIR/\nRUN yarn install --production --frozen-lockfile\n#  Set up health check\nHEALTHCHECK --interval=300s CMD /usr/local/bin/aio-health-check\n#  Go!\nWORKDIR /\nCMD aio-init \\\n && tail -f /dev/null\n","injectedSmells":[],"originalDockerfileHash":"0880319427866a866dc9ec9e354e6837","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Image metadata and config\nFROM debian:stretch\nLABEL name=\"angular.io PR preview\" \\\n      description=\"This image implements the PR preview functionality for angular.io.\" \\\n      vendor=\"Angular\" \\\n      version=\"1.0\"\nVOLUME /aio-secrets\nVOLUME /var/www/aio-builds\nVOLUME /dockerbuild\nEXPOSE 80/tcp 443/tcp\n#   Build-time args and env vars\n#   The AIO_ARTIFACT_PATH path needs to be kept in synch with the value of\n#   `aio_preview->steps->store_artifacts->destination` property in `.circleci/config.yml`\nARG AIO_ARTIFACT_PATH=aio/dist/aio-snapshot.tgz\nARG TEST_AIO_ARTIFACT_PATH=$AIO_ARTIFACT_PATH\nARG AIO_BUILDS_DIR=/var/www/aio-builds\nARG TEST_AIO_BUILDS_DIR=/tmp/aio-builds\nARG AIO_DOMAIN_NAME=ngbuilds.io\nARG TEST_AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME.localhost\nARG AIO_GITHUB_ORGANIZATION=angular\nARG TEST_AIO_GITHUB_ORGANIZATION=test-org\nARG AIO_GITHUB_REPO=angular\nARG TEST_AIO_GITHUB_REPO=test-repo\nARG AIO_GITHUB_TEAM_SLUGS=aio-auto-previews,aio-contributors\nARG TEST_AIO_GITHUB_TEAM_SLUGS=test-team-1,test-team-2\nARG AIO_NGINX_HOSTNAME=$AIO_DOMAIN_NAME\nARG TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_DOMAIN_NAME\nARG AIO_NGINX_PORT_HTTP=80\nARG TEST_AIO_NGINX_PORT_HTTP=8080\nARG AIO_NGINX_PORT_HTTPS=443\nARG TEST_AIO_NGINX_PORT_HTTPS=4433\nARG AIO_SIGNIFICANT_FILES_PATTERN='^(?:aio|packages)/(?!.*[._]spec\\\\.[jt]s$)'\nARG TEST_AIO_SIGNIFICANT_FILES_PATTERN=$AIO_SIGNIFICANT_FILES_PATTERN\nARG AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG TEST_AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG AIO_PREVIEW_SERVER_HOSTNAME=preview.localhost\nARG TEST_AIO_PREVIEW_SERVER_HOSTNAME=preview.localhost\nARG AIO_ARTIFACT_MAX_SIZE=26214400\nARG TEST_AIO_ARTIFACT_MAX_SIZE=200\nARG AIO_PREVIEW_SERVER_PORT=3000\nARG TEST_AIO_PREVIEW_SERVER_PORT=3001\nENV AIO_ARTIFACT_PATH=\"$AIO_ARTIFACT_PATH\" \\\n    TEST_AIO_ARTIFACT_PATH=\"$TEST_AIO_ARTIFACT_PATH\" \\\n    AIO_BUILDS_DIR=\"$AIO_BUILDS_DIR\" \\\n    TEST_AIO_BUILDS_DIR=\"$TEST_AIO_BUILDS_DIR\" \\\n    AIO_DOMAIN_NAME=\"$AIO_DOMAIN_NAME\" \\\n    TEST_AIO_DOMAIN_NAME=\"$TEST_AIO_DOMAIN_NAME\" \\\n    AIO_GITHUB_ORGANIZATION=\"$AIO_GITHUB_ORGANIZATION\" \\\n    TEST_AIO_GITHUB_ORGANIZATION=\"$TEST_AIO_GITHUB_ORGANIZATION\" \\\n    AIO_GITHUB_REPO=\"$AIO_GITHUB_REPO\" \\\n    TEST_AIO_GITHUB_REPO=\"$TEST_AIO_GITHUB_REPO\" \\\n    AIO_GITHUB_TEAM_SLUGS=\"$AIO_GITHUB_TEAM_SLUGS\" \\\n    TEST_AIO_GITHUB_TEAM_SLUGS=\"$TEST_AIO_GITHUB_TEAM_SLUGS\" \\\n    AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts\" \\\n    TEST_AIO_LOCALCERTS_DIR=\"/etc/ssl/localcerts-test\" \\\n    AIO_NGINX_HOSTNAME=\"$AIO_NGINX_HOSTNAME\" \\\n    TEST_AIO_NGINX_HOSTNAME=\"$TEST_AIO_NGINX_HOSTNAME\" \\\n    AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx\" \\\n    TEST_AIO_NGINX_LOGS_DIR=\"/var/log/aio/nginx-test\" \\\n    AIO_NGINX_PORT_HTTP=\"$AIO_NGINX_PORT_HTTP\" \\\n    TEST_AIO_NGINX_PORT_HTTP=\"$TEST_AIO_NGINX_PORT_HTTP\" \\\n    AIO_NGINX_PORT_HTTPS=\"$AIO_NGINX_PORT_HTTPS\" \\\n    TEST_AIO_NGINX_PORT_HTTPS=\"$TEST_AIO_NGINX_PORT_HTTPS\" \\\n    AIO_SCRIPTS_JS_DIR=\"/usr/share/aio-scripts-js\" \\\n    AIO_SCRIPTS_SH_DIR=\"/usr/share/aio-scripts-sh\" \\\n    AIO_SIGNIFICANT_FILES_PATTERN=\"$AIO_SIGNIFICANT_FILES_PATTERN\" \\\n    TEST_AIO_SIGNIFICANT_FILES_PATTERN=\"$TEST_AIO_SIGNIFICANT_FILES_PATTERN\" \\\n    AIO_TRUSTED_PR_LABEL=\"$AIO_TRUSTED_PR_LABEL\" \\\n    TEST_AIO_TRUSTED_PR_LABEL=\"$TEST_AIO_TRUSTED_PR_LABEL\" \\\n    AIO_PREVIEW_SERVER_HOSTNAME=\"$AIO_PREVIEW_SERVER_HOSTNAME\" \\\n    TEST_AIO_PREVIEW_SERVER_HOSTNAME=\"$TEST_AIO_PREVIEW_SERVER_HOSTNAME\" \\\n    AIO_ARTIFACT_MAX_SIZE=\"$AIO_ARTIFACT_MAX_SIZE\" \\\n    TEST_AIO_ARTIFACT_MAX_SIZE=\"$TEST_AIO_ARTIFACT_MAX_SIZE\" \\\n    AIO_PREVIEW_SERVER_PORT=\"$AIO_PREVIEW_SERVER_PORT\" \\\n    TEST_AIO_PREVIEW_SERVER_PORT=\"$TEST_AIO_PREVIEW_SERVER_PORT\" \\\n    AIO_WWW_USER=\"www-data\" \\\n    NODE_ENV=\"production\"\n#   Create directory for logs\nRUN mkdir /var/log/aio\n#   Add extra package sources\nRUN apt-get update -y \\\n && apt-get install curl -y\nRUN curl --silent --show-error --location https://deb.nodesource.com/setup_10.x | bash -\nRUN curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN echo \"deb http://ftp.debian.org/debian stretch-backports main\" | tee /etc/apt/sources.list.d/backports.list\n#   Install packages\nRUN apt-get update -y \\\n && apt-get install cron=3.0pl1-128+deb9u1 dnsmasq=2.76-5+deb9u2 nano=2.7.4-1 nginx=1.10.3-1+deb9u2 nodejs=10.15.3-1nodesource1 openssl=1.1.0j-1~deb9u1 rsyslog=8.24.0-1 yarn=1.15.2-1 -y\nRUN yarn global add pm2@3.5.0\n#   Set up log rotation\nCOPY logrotate/* /etc/logrotate.d/\nRUN chmod 0644 /etc/logrotate.d/*\n#   Set up cronjobs\nCOPY cronjobs/aio-builds-cleanup /etc/cron.d/\nRUN chmod 0744 /etc/cron.d/aio-builds-cleanup\nRUN crontab /etc/cron.d/aio-builds-cleanup\nRUN printenv | grep AIO_ >> /etc/environment\n#   Set up dnsmasq\nCOPY dnsmasq/dnsmasq.conf /etc/\nRUN sed -i \"s|{{$AIO_NGINX_HOSTNAME}}|$AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_HOSTNAME}}|$AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_NGINX_HOSTNAME}}|$TEST_AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{$TEST_AIO_PREVIEW_SERVER_HOSTNAME}}|$TEST_AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/dnsmasq.conf\n#   Set up SSL/TLS certificates\nCOPY nginx/create-selfsigned-cert.sh /tmp/\nRUN chmod a+x /tmp/create-selfsigned-cert.sh\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-prod\" \"$AIO_NGINX_HOSTNAME\" \"$AIO_LOCALCERTS_DIR\"\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-test\" \"$TEST_AIO_NGINX_HOSTNAME\" \"$TEST_AIO_LOCALCERTS_DIR\"\nRUN rm /tmp/create-selfsigned-cert.sh\nRUN update-ca-certificates\n#   Set up nginx (for production and testing)\nRUN sed -i -E \"s|^user\\s+\\S+;|user $AIO_WWW_USER;|\" /etc/nginx/nginx.conf\nRUN rm -f /etc/nginx/conf.d/*\nRUN rm -f /etc/nginx/sites-enabled/*\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_HOSTNAME}}|$AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_ARTIFACT_MAX_SIZE}}|$AIO_ARTIFACT_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_PORT}}|$AIO_PREVIEW_SERVER_PORT|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_BUILDS_DIR}}|$TEST_AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_DOMAIN_NAME}}|$TEST_AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_LOCALCERTS_DIR}}|$TEST_AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_LOGS_DIR}}|$TEST_AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTP}}|$TEST_AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_NGINX_PORT_HTTPS}}|$TEST_AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_HOSTNAME}}|$TEST_AIO_PREVIEW_SERVER_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_ARTIFACT_MAX_SIZE}}|$TEST_AIO_ARTIFACT_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{$AIO_PREVIEW_SERVER_PORT}}|$TEST_AIO_PREVIEW_SERVER_PORT|g\" /etc/nginx/conf.d/aio-builds-test.conf\n#   Set up pm2\nRUN pm2 startup --user root > /dev/null\n#   Set up the shell scripts\nCOPY scripts-sh/ $AIO_SCRIPTS_SH_DIR/\nRUN chmod a+x $AIO_SCRIPTS_SH_DIR/*\nRUN find $AIO_SCRIPTS_SH_DIR -maxdepth 1 -type f -printf \"%P\\n\" | while read file ; do ln -s $AIO_SCRIPTS_SH_DIR/$file /usr/local/bin/aio-${file%.*} ; done\n#   Set up the Node.js scripts\nCOPY scripts-js/ $AIO_SCRIPTS_JS_DIR/\nWORKDIR $AIO_SCRIPTS_JS_DIR/\nRUN yarn install --production --frozen-lockfile\n#   Set up health check\nHEALTHCHECK --interval=300s CMD /usr/local/bin/aio-health-check\n#   Go!\nWORKDIR /\nCMD aio-init \\\n && tail -f /dev/null\n","originalDockerfileUglifiedHash":"7e7c7f06bda0786ea765425caf2335f5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/05ecd8fce6c4e35cc1fab3303fd227a581dce6b6.dockerfile"}