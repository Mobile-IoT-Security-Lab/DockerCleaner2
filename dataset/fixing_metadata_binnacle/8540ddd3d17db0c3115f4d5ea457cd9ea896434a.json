{"seed":1301218012,"processedDockerfileHash":"d1d9925e5546ed8dd0c4ff498b141409","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"#   ==============================================================================\n#\n#   This Dockerfile contains all the commands required to set up an environment\n#   for using EstimationPy\n#   \nFROM ubuntu:14.04\nMAINTAINER lbl-srg\n#   Avoid interaction\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   =========== Basic Configuration ===============================================\n#   Update the system\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 git=1:1.9.1-1ubuntu0.10 python=2.7.5-5ubuntu3 python-dev=2.7.5-5ubuntu3 python-setuptools=3.3-1ubuntu2 make=3.81-8.2ubuntu3 cmake=2.8.12.2-0ubuntu3 gfortran=4:4.8.2-1ubuntu6 -y )\n#   Install pip for managing python packages\nRUN (apt-get update ;apt-get install --no-install-recommends python-pip=1.5.4-1ubuntu4 python-lxml=3.3.3-1ubuntu0.2 -y )\nRUN pip install cython==0.29.34\nRUN (apt-get update ;apt-get install --no-install-recommends python-lxml=3.3.3-1ubuntu0.2 -y )\n#   Add folders that will contains code before and after installation\nRUN mkdir -p /home/docker/to_install\nRUN mkdir -p /home/docker/installed\n#   Create an user and an environmental variable associated to it\nRUN adduser --disabled-password --gecos '' docker\nRUN adduser docker sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   =========== Install JAVA =======================================================\n#   Install Java (Open JDK, version 7)\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-7-jdk=7u211-2.6.17-0ubuntu0.1 -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\" >> /root/.bashrc\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\" >> /home/docker/.bashrc\n#   =========== Install PyFMI dependencies ======================================================\n#   Install Sundials ODE, DAE\nCOPY ./softwares/sundials-2.5.0.tar.gz /home/docker/to_install/\nRUN cd /home/docker/to_install \\\n && tar xzvf ./sundials-2.5.0.tar.gz\nWORKDIR /home/docker/to_install/sundials-2.5.0\nRUN mkdir -p build\nWORKDIR /home/docker/to_install/sundials-2.5.0/build\nRUN ../configure CFLAGS=\"-fPIC\" --prefix=/home/docker/installed/sundials-2.5.0\nRUN make \\\n && make install \\\n && make clean\nWORKDIR /home/docker\n#   Install BLAS and LAPACK\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends libblas3gf=1.2.20110419-7 libblas-doc=1.2.20110419-7 libblas-dev=1.2.20110419-7 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends liblapack3gf=3.5.0-2ubuntu1 liblapack-doc=3.5.0-2ubuntu1 liblapack-dev=3.5.0-2ubuntu1 -y )\n#   Other dependencies required before installing pylab and Matplotlib\nRUN (apt-get update ;apt-get install --no-install-recommends pkgconf=0.9.4-1 libpng-dev libfreetype6-dev=2.5.2-1ubuntu2.8 -y )\n#   Install Numpy, Matplotlib, SciPy and Pandas\nRUN pip install numpy==1.24.2\nRUN (apt-get update ;apt-get install --no-install-recommends python-matplotlib=1.3.1-1ubuntu5.1 -y )\nRUN pip install scipy==1.10.1\nRUN pip install pandas==2.0.0\n#   Install svn and git\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:1.9.1-1ubuntu0.10 subversion=1.8.8-1ubuntu3.3 -y )\n#   Install assimulo\nRUN cd /home/docker/to_install \\\n && svn checkout https://svn.jmodelica.org/assimulo/tags/Assimulo-2.8/\nWORKDIR /home/docker/to_install/Assimulo-2.8\nRUN python setup.py install --sundials-home=/home/docker/installed/sundials-2.5.0/ --blas-home=/usr/lib/lapack/\n#   Install FMILib\nRUN cd /home/docker/to_install/ \\\n && svn checkout https://svn.jmodelica.org/FMILibrary/tags/2.0.1/ FMILibrary-2.0.1\nRUN cd /home/docker/to_install \\\n && ls -la\nWORKDIR /home/docker/to_install/FMILibrary-2.0.1/\nRUN ls -la\nRUN mkdir -p build-fmil\nWORKDIR /home/docker/to_install/FMILibrary-2.0.1/build-fmil\nRUN cmake -DFMILIB_INSTALL_PREFIX=/home/docker/installed/FMIlib2.0.1 /home/docker/to_install/FMILibrary-2.0.1\nRUN make install test\n#   Finally install PyFMI\nRUN cd /home/docker/to_install/ \\\n && svn checkout https://svn.jmodelica.org/PyFMI/tags/PyFMI-2.0b1/\nWORKDIR /home/docker/to_install/PyFMI-2.0b1\nRUN python setup.py install --fmil-home=/home/docker/installed/FMIlib2.0.1/\n#   Create \"dummy\" Dymola license file. It is also required by FMUs that are exported in\n#   binary export mode\nRUN mkdir -p /home/docker/.dynasim\nRUN touch /home/docker/.dynasim/dymola.lic\nRUN echo \"SERVER yourserver.com ANY\" >> /home/docker/.dynasim/dymola.lic\nRUN echo \"VENDOR dynasim\" >> /home/docker/.dynasim/dymola.lic\nRUN echo \"USE_SERVER\" >> /home/docker/.dynasim/dymola.lic\nENV DYMOLA_RUNTIME_LICENSE=\"\\\"/home/ubuntu/.dynasim/dymola.lic\\\"\"\nRUN echo \"export DYMOLA_RUNTIME_LICENSE=/home/ubuntu/.dynasim/dymola.lic\" >> /root/.bashrc\nRUN echo \"export DYMOLA_RUNTIME_LICENSE=/home/ubuntu/.dynasim/dymola.lic\" >> /home/docker/.bashrc\n#   Install EstimationPy\nRUN cd /home/docker/to_install \\\n && git clone https://github.com/lbl-srg/EstimationPy.git \\\n && cd ./EstimationPy \\\n && python setup.py install\nWORKDIR /home/docker\n#   Install ipython notebook\nRUN pip install \"ipython[notebook]\"\n#   Change ownership of the content of /home/docker\nRUN chown -R docker:docker /home/docker/\n#   Change user to docker\nUSER docker\n#   Create folder that will be used as a shared volume\nRUN mkdir -p /home/docker/shared_folder\nVOLUME [\"/home/docker/shared_folder\"]\n#   Create environmental variables for the display\nENV DISPLAY=\":0.0\"\nENV USER=\"docker\"\n#   Expose the port where the ipython notebook server will listen\nEXPOSE 8888/tcp\n#   Command to run by default in detached mode\nCMD ipython notebook --ip=\"0.0.0.0\" --port=8888 --notebook-dir=/home/docker/shared_folder --no-browser\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  ==============================================================================\n#\n#  This Dockerfile contains all the commands required to set up an environment\n#  for using EstimationPy\n#  \nFROM ubuntu:14.04\nMAINTAINER lbl-srg\n#  Avoid interaction\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  =========== Basic Configuration ===============================================\n#  Update the system\nRUN apt-get update -y\nRUN apt-get install build-essential git python python-dev python-setuptools make cmake gfortran -y\n#  Install pip for managing python packages\nRUN apt-get install python-pip python-lxml -y\nRUN pip install cython\nRUN apt-get install python-lxml -y\n#  Add folders that will contains code before and after installation\nRUN mkdir -p /home/docker/to_install\nRUN mkdir -p /home/docker/installed\n#  Create an user and an environmental variable associated to it\nRUN adduser --disabled-password --gecos '' docker\nRUN adduser docker sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#  =========== Install JAVA =======================================================\n#  Install Java (Open JDK, version 7)\nRUN apt-get install openjdk-7-jdk -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\" >> /root/.bashrc\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\" >> /home/docker/.bashrc\n#  =========== Install PyFMI dependencies ======================================================\n#  Install Sundials ODE, DAE\nCOPY ./softwares/sundials-2.5.0.tar.gz /home/docker/to_install/\nRUN cd /home/docker/to_install \\\n && tar xzvf ./sundials-2.5.0.tar.gz\nWORKDIR /home/docker/to_install/sundials-2.5.0\nRUN mkdir -p build\nWORKDIR /home/docker/to_install/sundials-2.5.0/build\nRUN ../configure CFLAGS=\"-fPIC\" --prefix=/home/docker/installed/sundials-2.5.0\nRUN make \\\n && make install \\\n && make clean\nWORKDIR /home/docker\n#  Install BLAS and LAPACK\nRUN apt-get update\nRUN apt-get install libblas3gf libblas-doc libblas-dev -y\nRUN apt-get install liblapack3gf liblapack-doc liblapack-dev -y\n#  Other dependencies required before installing pylab and Matplotlib\nRUN apt-get install pkgconf libpng-dev libfreetype6-dev -y\n#  Install Numpy, Matplotlib, SciPy and Pandas\nRUN pip install numpy\nRUN apt-get install python-matplotlib -y\nRUN pip install scipy\nRUN pip install pandas\n#  Install svn and git\nRUN apt-get install git subversion -y\n#  Install assimulo\nRUN cd /home/docker/to_install \\\n && svn checkout https://svn.jmodelica.org/assimulo/tags/Assimulo-2.8/\nWORKDIR /home/docker/to_install/Assimulo-2.8\nRUN python setup.py install --sundials-home=/home/docker/installed/sundials-2.5.0/ --blas-home=/usr/lib/lapack/\n#  Install FMILib\nRUN cd /home/docker/to_install/ \\\n && svn checkout https://svn.jmodelica.org/FMILibrary/tags/2.0.1/ FMILibrary-2.0.1\nRUN cd /home/docker/to_install \\\n && ls -la\nWORKDIR /home/docker/to_install/FMILibrary-2.0.1/\nRUN ls -la\nRUN mkdir -p build-fmil\nWORKDIR /home/docker/to_install/FMILibrary-2.0.1/build-fmil\nRUN cmake -DFMILIB_INSTALL_PREFIX=/home/docker/installed/FMIlib2.0.1 /home/docker/to_install/FMILibrary-2.0.1\nRUN make install test\n#  Finally install PyFMI\nRUN cd /home/docker/to_install/ \\\n && svn checkout https://svn.jmodelica.org/PyFMI/tags/PyFMI-2.0b1/\nWORKDIR /home/docker/to_install/PyFMI-2.0b1\nRUN python setup.py install --fmil-home=/home/docker/installed/FMIlib2.0.1/\n#  Create \"dummy\" Dymola license file. It is also required by FMUs that are exported in\n#  binary export mode\nRUN mkdir -p /home/docker/.dynasim\nRUN touch /home/docker/.dynasim/dymola.lic\nRUN echo \"SERVER yourserver.com ANY\" >> /home/docker/.dynasim/dymola.lic\nRUN echo \"VENDOR dynasim\" >> /home/docker/.dynasim/dymola.lic\nRUN echo \"USE_SERVER\" >> /home/docker/.dynasim/dymola.lic\nENV DYMOLA_RUNTIME_LICENSE=\"\\\"/home/ubuntu/.dynasim/dymola.lic\\\"\"\nRUN echo \"export DYMOLA_RUNTIME_LICENSE=/home/ubuntu/.dynasim/dymola.lic\" >> /root/.bashrc\nRUN echo \"export DYMOLA_RUNTIME_LICENSE=/home/ubuntu/.dynasim/dymola.lic\" >> /home/docker/.bashrc\n#  Install EstimationPy\nRUN cd /home/docker/to_install \\\n && git clone https://github.com/lbl-srg/EstimationPy.git \\\n && cd ./EstimationPy \\\n && python setup.py install\nWORKDIR /home/docker\n#  Install ipython notebook\nRUN pip install \"ipython[notebook]\"\n#  Change ownership of the content of /home/docker\nRUN chown -R docker:docker /home/docker/\n#  Change user to docker\nUSER docker\n#  Create folder that will be used as a shared volume\nRUN mkdir -p /home/docker/shared_folder\nVOLUME [\"/home/docker/shared_folder\"]\n#  Create environmental variables for the display\nENV DISPLAY=\":0.0\"\nENV USER=\"docker\"\n#  Expose the port where the ipython notebook server will listen\nEXPOSE 8888/tcp\n#  Command to run by default in detached mode\nCMD ipython notebook --ip=\"0.0.0.0\" --port=8888 --notebook-dir=/home/docker/shared_folder --no-browser\n","injectedSmells":[],"originalDockerfileHash":"2a8cc64a072067ce4e9bcf654d8f02dc","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ==============================================================================\n#\n#   This Dockerfile contains all the commands required to set up an environment\n#   for using EstimationPy\n#   \nFROM ubuntu:14.04\nMAINTAINER lbl-srg\n#   Avoid interaction\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   =========== Basic Configuration ===============================================\n#   Update the system\nRUN apt-get update -y\nRUN apt-get install build-essential git python python-dev python-setuptools make cmake gfortran -y\n#   Install pip for managing python packages\nRUN apt-get install python-pip python-lxml -y\nRUN pip install cython\nRUN apt-get install python-lxml -y\n#   Add folders that will contains code before and after installation\nRUN mkdir -p /home/docker/to_install\nRUN mkdir -p /home/docker/installed\n#   Create an user and an environmental variable associated to it\nRUN adduser --disabled-password --gecos '' docker\nRUN adduser docker sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   =========== Install JAVA =======================================================\n#   Install Java (Open JDK, version 7)\nRUN apt-get install openjdk-7-jdk -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\" >> /root/.bashrc\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\" >> /home/docker/.bashrc\n#   =========== Install PyFMI dependencies ======================================================\n#   Install Sundials ODE, DAE\nCOPY ./softwares/sundials-2.5.0.tar.gz /home/docker/to_install/\nRUN cd /home/docker/to_install \\\n && tar xzvf ./sundials-2.5.0.tar.gz\nWORKDIR /home/docker/to_install/sundials-2.5.0\nRUN mkdir -p build\nWORKDIR /home/docker/to_install/sundials-2.5.0/build\nRUN ../configure CFLAGS=\"-fPIC\" --prefix=/home/docker/installed/sundials-2.5.0\nRUN make \\\n && make install \\\n && make clean\nWORKDIR /home/docker\n#   Install BLAS and LAPACK\nRUN apt-get update\nRUN apt-get install libblas3gf libblas-doc libblas-dev -y\nRUN apt-get install liblapack3gf liblapack-doc liblapack-dev -y\n#   Other dependencies required before installing pylab and Matplotlib\nRUN apt-get install pkgconf libpng-dev libfreetype6-dev -y\n#   Install Numpy, Matplotlib, SciPy and Pandas\nRUN pip install numpy\nRUN apt-get install python-matplotlib -y\nRUN pip install scipy\nRUN pip install pandas\n#   Install svn and git\nRUN apt-get install git subversion -y\n#   Install assimulo\nRUN cd /home/docker/to_install \\\n && svn checkout https://svn.jmodelica.org/assimulo/tags/Assimulo-2.8/\nWORKDIR /home/docker/to_install/Assimulo-2.8\nRUN python setup.py install --sundials-home=/home/docker/installed/sundials-2.5.0/ --blas-home=/usr/lib/lapack/\n#   Install FMILib\nRUN cd /home/docker/to_install/ \\\n && svn checkout https://svn.jmodelica.org/FMILibrary/tags/2.0.1/ FMILibrary-2.0.1\nRUN cd /home/docker/to_install \\\n && ls -la\nWORKDIR /home/docker/to_install/FMILibrary-2.0.1/\nRUN ls -la\nRUN mkdir -p build-fmil\nWORKDIR /home/docker/to_install/FMILibrary-2.0.1/build-fmil\nRUN cmake -DFMILIB_INSTALL_PREFIX=/home/docker/installed/FMIlib2.0.1 /home/docker/to_install/FMILibrary-2.0.1\nRUN make install test\n#   Finally install PyFMI\nRUN cd /home/docker/to_install/ \\\n && svn checkout https://svn.jmodelica.org/PyFMI/tags/PyFMI-2.0b1/\nWORKDIR /home/docker/to_install/PyFMI-2.0b1\nRUN python setup.py install --fmil-home=/home/docker/installed/FMIlib2.0.1/\n#   Create \"dummy\" Dymola license file. It is also required by FMUs that are exported in\n#   binary export mode\nRUN mkdir -p /home/docker/.dynasim\nRUN touch /home/docker/.dynasim/dymola.lic\nRUN echo \"SERVER yourserver.com ANY\" >> /home/docker/.dynasim/dymola.lic\nRUN echo \"VENDOR dynasim\" >> /home/docker/.dynasim/dymola.lic\nRUN echo \"USE_SERVER\" >> /home/docker/.dynasim/dymola.lic\nENV DYMOLA_RUNTIME_LICENSE=\"\\\"/home/ubuntu/.dynasim/dymola.lic\\\"\"\nRUN echo \"export DYMOLA_RUNTIME_LICENSE=/home/ubuntu/.dynasim/dymola.lic\" >> /root/.bashrc\nRUN echo \"export DYMOLA_RUNTIME_LICENSE=/home/ubuntu/.dynasim/dymola.lic\" >> /home/docker/.bashrc\n#   Install EstimationPy\nRUN cd /home/docker/to_install \\\n && git clone https://github.com/lbl-srg/EstimationPy.git \\\n && cd ./EstimationPy \\\n && python setup.py install\nWORKDIR /home/docker\n#   Install ipython notebook\nRUN pip install \"ipython[notebook]\"\n#   Change ownership of the content of /home/docker\nRUN chown -R docker:docker /home/docker/\n#   Change user to docker\nUSER docker\n#   Create folder that will be used as a shared volume\nRUN mkdir -p /home/docker/shared_folder\nVOLUME [\"/home/docker/shared_folder\"]\n#   Create environmental variables for the display\nENV DISPLAY=\":0.0\"\nENV USER=\"docker\"\n#   Expose the port where the ipython notebook server will listen\nEXPOSE 8888/tcp\n#   Command to run by default in detached mode\nCMD ipython notebook --ip=\"0.0.0.0\" --port=8888 --notebook-dir=/home/docker/shared_folder --no-browser\n","originalDockerfileUglifiedHash":"42e1fe025d0960bcd8a1deaf203f50d3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8540ddd3d17db0c3115f4d5ea457cd9ea896434a.dockerfile"}