{"seed":2050934520,"processedDockerfileHash":"e0c03f30bedcbb3736bacd20cdd6c347","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n#   Licensed under the Amazon Software License (the \"License\"). You may not use this file except in compliance with the License.\n#   A copy of the License is located at\n#\n#      http://aws.amazon.com/asl/\n#\n#   or in the \"license\" file accompanying this file.\n#   This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.\n#   See the License for the specific language governing permissions and limitations under the License.\n#\nFROM ubuntu:14.04.5\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"18.09.0\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"08795696e852328d66753963249f4396af2295a7fe2847b839f7102e25e47cb9\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.23.2\" \\\n    GITVERSION_VERSION=\"3.6.5\"\n#   Install git, SSH, and other utilities\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=1.0.1ubuntu2.24 -y \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-trusty main\" | tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y \\\n && apt-add-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends git=1:2.* -y \\\n && git version \\\n && apt-get install --no-install-recommends openssh-client=1:6.6* -y \\\n && mkdir ~/.ssh \\\n && touch ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts \\\n && chmod 600 ~/.ssh/known_hosts \\\n && apt-get install --no-install-recommends ca-certificates=20170717~14.04.2 jq=1.3-1.1ubuntu1.1 python3-pip=1.5.4-1ubuntu4 wget=1.15-* python3=3.4.* python3.4-dev=3.4.* fakeroot=1.20-* tar=1.27.* gzip=1.6-* zip=3.0-* autoconf=2.69-* automake=1:1.14.* bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.* libbz2-dev=1.0.* libc6-dev=2.19-* libcurl4-openssl-dev=7.35.* libdb-dev=1:5.3.* libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.* libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.* libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.* libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-* libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.* libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-* patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* unzip=6.0-* curl=7.35.* e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.* mono-devel=5.* less=458-* groff=1.22.* liberror-perl=0.17-* asciidoc=8.6.* build-essential=11.* bzr=2.6.* cvs=2:1.12.* cvsps=2.1-* docbook-xml=4.5-* docbook-xsl=1.78.* dpkg-dev=1.17.* libdbd-sqlite3-perl=1.40-* libdbi-perl=1.630-* libdpkg-perl=1.17.* libhttp-date-perl=6.02-* libio-pty-perl=1:1.08-* libserf-1-1=1.3.* libsvn-perl=1.8.* libsvn1=1.8.* libtcl8.6=8.6.* libtimedate-perl=2.3000-* libunistring0=0.9.* libxml2-utils=2.9.* libyaml-perl=0.84-* python-bzrlib=2.6.* python-configobj=4.7.* sgml-base=1.26+* sgml-data=2.0.* subversion=1.8.* tcl=8.6.* tcl8.6=8.6.* xml-core=0.13+* xmlto=0.0.* xsltproc=1.1.* tk=8.6.* gettext=0.18.* gettext-base=0.18.* libapr1=1.5.* libaprutil1=1.5.* libasprintf0c2=0.18.* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#   Download and set up GitVersion\nRUN set -ex \\\n && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe $@\" >> /usr/local/bin/gitversion \\\n && chmod +x /usr/local/bin/gitversion\n#   Install Docker\nRUN set -ex \\\n && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n && rm docker.tgz \\\n && docker -v \\\n && addgroup dockremap \\\n && useradd -g dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid \\\n && wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n && docker-compose version\nVOLUME /var/lib/docker\n#   Configure SSH\nCOPY ssh_config /root/.ssh/config\nCOPY dockerd-entrypoint.sh /usr/local/bin/\n#  ## NodeJS -- https://github.com/aws/aws-codebuild-docker-images/tree/master/ubuntu/nodejs/8.11.0\nENV NODE_VERSION=\"8.11.0\"\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nCOPY node-release-keys.asc /tmp/node-release-keys.asc\nRUN set -ex \\\n && gpg --import < /tmp/node-release-keys.asc \\\n && rm /tmp/node-release-keys.asc\nRUN set -ex \\\n && wget \"https://nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" -O node-v$NODE_VERSION-linux-x64.tar.gz \\\n && wget \"https://nodejs.org/download/release/v$NODE_VERSION/SHASUMS256.txt.asc\" -O SHASUMS256.txt.asc \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && npm install npm@~6.8.0 -g\nRUN npm set unsafe-perm true\n#  ## Java 8 -- https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/java/openjdk-8/Dockerfile\nENV JAVA_VERSION=\"8\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JDK_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JRE_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    ANT_VERSION=\"1.10.3\" \\\n    MAVEN_HOME=\"/opt/maven\" \\\n    MAVEN_VERSION=\"3.5.4\" \\\n    MAVEN_CONFIG=\"/root/.m2\" \\\n    GRADLE_VERSION=\"4.2.1\" \\\n    PROPERTIES_COMMON_VERSION=\"0.92.37.8\" \\\n    PYTHON_TOOL_VERSION=\"3.3-*\" \\\n    PYTHON_WHEEL_VERSION=\"0.24.*\" \\\n    JDK_VERSION=\"8u171-b11-2~14.04\" \\\n    ANT_DOWNLOAD_SHA512=\"73f2193700b1d1e32eedf25fab1009e2a98fb2f6425413f5c9fa1b0f2f9f49f59cb8ed3f04931c808ae022a64ecfa2619e5fb77643fea6dbc29721e489eb3a07\" \\\n    MAVEN_DOWNLOAD_SHA1=\"22cac91b3557586bb1eba326f2f7727543ff15e3\" \\\n    GRADLE_DOWNLOAD_SHA256=\"b551cc04f2ca51c78dd14edb060621f0e5439bdfafa6fd167032a09ac708fbc0\"\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=$PROPERTIES_COMMON_VERSION -y \\\n && add-apt-repository ppa:openjdk-r/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends python-setuptools=$PYTHON_TOOL_VERSION -y \\\n && apt-get install --no-install-recommends python-wheel=$PYTHON_WHEEL_VERSION -y \\\n && apt-get install --no-install-recommends openjdk-${JAVA_VERSION}-jdk=$JDK_VERSION -y \\\n && apt-get install --no-install-recommends ca-certificates-java=20130815ubuntu1 -y \\\n && apt-get clean \\\n && update-ca-certificates -f \\\n && curl -LSso /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz \\\n && echo \"$ANT_DOWNLOAD_SHA512 /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz\" | sha512sum -c - \\\n && tar -xzf /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz -C /opt \\\n && update-alternatives --install /usr/bin/ant ant /opt/apache-ant-$ANT_VERSION/bin/ant 10000 \\\n && mkdir -p $MAVEN_HOME \\\n && curl -LSso /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz https://apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n && echo \"$MAVEN_DOWNLOAD_SHA1 /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | sha1sum -c - \\\n && tar xzvf /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz -C $MAVEN_HOME --strip-components=1 \\\n && update-alternatives --install /usr/bin/mvn mvn /opt/maven/bin/mvn 10000 \\\n && mkdir -p $MAVEN_CONFIG \\\n && curl -LSso /var/tmp/gradle-$GRADLE_VERSION-bin.zip https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip \\\n && echo \"$GRADLE_DOWNLOAD_SHA256 /var/tmp/gradle-$GRADLE_VERSION-bin.zip\" | sha256sum -c - \\\n && unzip /var/tmp/gradle-$GRADLE_VERSION-bin.zip -d /opt \\\n && update-alternatives --install /usr/local/bin/gradle gradle /opt/gradle-$GRADLE_VERSION/bin/gradle 10000 \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get clean\nCOPY m2-settings.xml $MAVEN_CONFIG/settings.xml\n#  ## .NET CLI\n#   Install .NET CLI dependencies\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends libc6=2.19-* libcurl3=7.35.* libgcc1=1:4.9.* libgssapi-krb5-2=1.12* libicu52=52.1-* liblttng-ust0=2.4.* libssl1.0.0=1.0.* libunwind8=1.1-* libuuid1=2.20.* zlib1g=1:1.2.* software-properties-common=0.92.* -y \\\n && add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends libstdc++6=4.8.4-2ubuntu1~14.04.4 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install .NET Core SDK\nENV DOTNET_SDK_VERSION=\"2.2.202\"\nENV DOTNET_SDK_DOWNLOAD_URL=\"https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz\"\nENV DOTNET_SDK_DOWNLOAD_SHA=\"14F5C0E6FBB874A882334E0D500E494B01D7F363028E72DB58DFFF6DB43C54670533539DCF6B8F50A97CE1E099119A8286CE84E193B361D65B1FD8C7DFFCE63D\"\nRUN set -ex \\\n && curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz \\\n && echo \"$DOTNET_SDK_DOWNLOAD_SHA dotnet.tar.gz\" | sha512sum -c - \\\n && mkdir -p /usr/share/dotnet \\\n && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n && rm dotnet.tar.gz \\\n && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n#   Add .NET Core Global Tools install folder to PATH\nENV PATH=\"\\\"~/.dotnet/tools/:$PATH\\\"\"\n#   Trigger the population of the local package cache\nENV NUGET_XMLDOC_MODE=\"skip\"\nRUN set -ex \\\n && mkdir warmup \\\n && cd warmup \\\n && dotnet new \\\n && cd .. \\\n && rm -rf warmup \\\n && rm -rf /tmp/NuGetScratch\n#   Install Powershell Core\n#   See instructions at https://docs.microsoft.com/en-us/powershell/scripting/setup/installing-powershell-core-on-linux\nENV POWERSHELL_VERSION=\"6.1.0\"\nENV POWERSHELL_DOWNLOAD_URL=\"https://github.com/PowerShell/PowerShell/releases/download/v6.1.0/powershell-6.1.0-linux-x64.tar.gz\"\nENV POWERSHELL_DOWNLOAD_SHA=\"68674CFBA84ABF759C7E10EF6FCD926CBC125D9958E11A1926AF7CF7F604506C\"\nRUN set -ex \\\n && curl -SL $POWERSHELL_DOWNLOAD_URL --output powershell.tar.gz \\\n && echo \"$POWERSHELL_DOWNLOAD_SHA powershell.tar.gz\" | sha256sum -c - \\\n && mkdir -p /opt/microsoft/powershell/$POWERSHELL_VERSION \\\n && tar zxf powershell.tar.gz -C /opt/microsoft/powershell/$POWERSHELL_VERSION \\\n && rm powershell.tar.gz \\\n && ln -s /opt/microsoft/powershell/$POWERSHELL_VERSION/pwsh /usr/bin/pwsh\n#  ## Python 3.6.5 -- https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/python/3.6.5/Dockerfile\nENV PATH=\"/usr/local/bin:$PATH\" \\\n    GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\" \\\n    PYTHON_VERSION=\"3.6.5\" \\\n    PYTHON_PIP_VERSION=\"10.0.0\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\"\nCOPY python-release-keys.asc /tmp/python-release-keys.asc\nRUN apt-get update \\\n && apt-get install --no-install-recommends tcl-dev=8.6.0+6ubuntu3 tk-dev=8.6.0+6ubuntu3 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --import < /tmp/python-release-keys.asc \\\n && rm /tmp/python-release-keys.asc \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-loadable-sqlite-extensions --enable-shared \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && if [ ! -e /usr/local/bin/pip3 ] ; then : \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py ; fi \\\n && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n && pip install boto3==1.26.114 pipenv==2023.3.20 virtualenv==20.21.0 wheel==0.40.0 awscli==1.* --no-cache-dir \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth\n#  ## Ruby 2.5.1 - https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/ruby/2.5.1/Dockerfile\nENV RUBY_MAJOR=\"2.5\" \\\n    RUBY_VERSION=\"2.5.3\" \\\n    RUBY_DOWNLOAD_SHA256=\"9828d03852c37c20fa333a0264f2490f07338576734d910ee3fd538c9520846c\" \\\n    RUBYGEMS_VERSION=\"2.7.7\" \\\n    BUNDLER_VERSION=\"1.16.6\" \\\n    GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_BIN=\"$GEM_HOME/bin\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH=\"$BUNDLE_BIN:$PATH\"\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc \\\n && apt-get update \\\n && apt-get install --no-install-recommends bison=2:3.0.2.dfsg-2 libgdbm-dev=1.8.3-12build1 ruby=1:1.9.3.4 -y \\\n && wget \"https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz\" -O /tmp/ruby.tar.gz \\\n && echo \"$RUBY_DOWNLOAD_SHA256 /tmp/ruby.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xzf /tmp/ruby.tar.gz -C /usr/src/ruby --strip-components=1 \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && ./configure --disable-install-doc \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && apt-get purge -y --auto-remove bison libgdbm-dev ruby \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && gem update --system \"$RUBYGEMS_VERSION\" \\\n && gem install bundler --version 2.4.12 \\\n && mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  ## Local Tweaking\n#   Install rsync\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends rsync=3.1.0-2ubuntu0.4 -y\nRUN echo 'DOTNET_CLI_TELEMETRY_OPTOUT=1' >> ~/.bashrc\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n#  Licensed under the Amazon Software License (the \"License\"). You may not use this file except in compliance with the License.\n#  A copy of the License is located at\n#\n#     http://aws.amazon.com/asl/\n#\n#  or in the \"license\" file accompanying this file.\n#  This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.\n#  See the License for the specific language governing permissions and limitations under the License.\n#\nFROM ubuntu:14.04.5\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"18.09.0\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"08795696e852328d66753963249f4396af2295a7fe2847b839f7102e25e47cb9\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.23.2\" \\\n    GITVERSION_VERSION=\"3.6.5\"\n#  Install git, SSH, and other utilities\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && apt-get install -y apt-transport-https \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-trusty main\" | tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && apt-add-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends git=1:2.* -y \\\n && git version \\\n && apt-get install --no-install-recommends openssh-client=1:6.6* -y \\\n && mkdir ~/.ssh \\\n && touch ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts \\\n && chmod 600 ~/.ssh/known_hosts \\\n && apt-get install --no-install-recommends ca-certificates jq python3-pip wget=1.15-* python3=3.4.* python3.4-dev=3.4.* fakeroot=1.20-* tar=1.27.* gzip=1.6-* zip=3.0-* autoconf=2.69-* automake=1:1.14.* bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.* libbz2-dev=1.0.* libc6-dev=2.19-* libcurl4-openssl-dev=7.35.* libdb-dev=1:5.3.* libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.* libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.* libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.* libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-* libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.* libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-* patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* unzip=6.0-* curl=7.35.* e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.* mono-devel=5.* less=458-* groff=1.22.* liberror-perl=0.17-* asciidoc=8.6.* build-essential=11.* bzr=2.6.* cvs=2:1.12.* cvsps=2.1-* docbook-xml=4.5-* docbook-xsl=1.78.* dpkg-dev=1.17.* libdbd-sqlite3-perl=1.40-* libdbi-perl=1.630-* libdpkg-perl=1.17.* libhttp-date-perl=6.02-* libio-pty-perl=1:1.08-* libserf-1-1=1.3.* libsvn-perl=1.8.* libsvn1=1.8.* libtcl8.6=8.6.* libtimedate-perl=2.3000-* libunistring0=0.9.* libxml2-utils=2.9.* libyaml-perl=0.84-* python-bzrlib=2.6.* python-configobj=4.7.* sgml-base=1.26+* sgml-data=2.0.* subversion=1.8.* tcl=8.6.* tcl8.6=8.6.* xml-core=0.13+* xmlto=0.0.* xsltproc=1.1.* tk=8.6.* gettext=0.18.* gettext-base=0.18.* libapr1=1.5.* libaprutil1=1.5.* libasprintf0c2=0.18.* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#  Download and set up GitVersion\nRUN set -ex \\\n && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe $@\" >> /usr/local/bin/gitversion \\\n && chmod +x /usr/local/bin/gitversion\n#  Install Docker\nRUN set -ex \\\n && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n && rm docker.tgz \\\n && docker -v \\\n && addgroup dockremap \\\n && useradd -g dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid \\\n && wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n && docker-compose version\nVOLUME /var/lib/docker\n#  Configure SSH\nCOPY ssh_config /root/.ssh/config\nCOPY dockerd-entrypoint.sh /usr/local/bin/\n# ## NodeJS -- https://github.com/aws/aws-codebuild-docker-images/tree/master/ubuntu/nodejs/8.11.0\nENV NODE_VERSION=\"8.11.0\"\n#  gpg keys listed at https://github.com/nodejs/node#release-team\nCOPY node-release-keys.asc /tmp/node-release-keys.asc\nRUN set -ex \\\n && gpg --import < /tmp/node-release-keys.asc \\\n && rm /tmp/node-release-keys.asc\nRUN set -ex \\\n && wget \"https://nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" -O node-v$NODE_VERSION-linux-x64.tar.gz \\\n && wget \"https://nodejs.org/download/release/v$NODE_VERSION/SHASUMS256.txt.asc\" -O SHASUMS256.txt.asc \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && npm install npm@~6.8.0 -g\nRUN npm set unsafe-perm true\n# ## Java 8 -- https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/java/openjdk-8/Dockerfile\nENV JAVA_VERSION=\"8\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JDK_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JRE_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    ANT_VERSION=\"1.10.3\" \\\n    MAVEN_HOME=\"/opt/maven\" \\\n    MAVEN_VERSION=\"3.5.4\" \\\n    MAVEN_CONFIG=\"/root/.m2\" \\\n    GRADLE_VERSION=\"4.2.1\" \\\n    PROPERTIES_COMMON_VERSION=\"0.92.37.8\" \\\n    PYTHON_TOOL_VERSION=\"3.3-*\" \\\n    PYTHON_WHEEL_VERSION=\"0.24.*\" \\\n    JDK_VERSION=\"8u171-b11-2~14.04\" \\\n    ANT_DOWNLOAD_SHA512=\"73f2193700b1d1e32eedf25fab1009e2a98fb2f6425413f5c9fa1b0f2f9f49f59cb8ed3f04931c808ae022a64ecfa2619e5fb77643fea6dbc29721e489eb3a07\" \\\n    MAVEN_DOWNLOAD_SHA1=\"22cac91b3557586bb1eba326f2f7727543ff15e3\" \\\n    GRADLE_DOWNLOAD_SHA256=\"b551cc04f2ca51c78dd14edb060621f0e5439bdfafa6fd167032a09ac708fbc0\"\nRUN set -ex \\\n && apt-get update \\\n && apt-get install software-properties-common=$PROPERTIES_COMMON_VERSION -y \\\n && add-apt-repository ppa:openjdk-r/ppa \\\n && apt-get update \\\n && apt-get install python-setuptools=$PYTHON_TOOL_VERSION -y \\\n && apt-get install python-wheel=$PYTHON_WHEEL_VERSION -y \\\n && apt-get install openjdk-${JAVA_VERSION}-jdk=$JDK_VERSION -y \\\n && apt-get install --no-install-recommends ca-certificates-java -y \\\n && apt-get clean \\\n && update-ca-certificates -f \\\n && curl -LSso /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz \\\n && echo \"$ANT_DOWNLOAD_SHA512 /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz\" | sha512sum -c - \\\n && tar -xzf /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz -C /opt \\\n && update-alternatives --install /usr/bin/ant ant /opt/apache-ant-$ANT_VERSION/bin/ant 10000 \\\n && mkdir -p $MAVEN_HOME \\\n && curl -LSso /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz https://apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n && echo \"$MAVEN_DOWNLOAD_SHA1 /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | sha1sum -c - \\\n && tar xzvf /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz -C $MAVEN_HOME --strip-components=1 \\\n && update-alternatives --install /usr/bin/mvn mvn /opt/maven/bin/mvn 10000 \\\n && mkdir -p $MAVEN_CONFIG \\\n && curl -LSso /var/tmp/gradle-$GRADLE_VERSION-bin.zip https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip \\\n && echo \"$GRADLE_DOWNLOAD_SHA256 /var/tmp/gradle-$GRADLE_VERSION-bin.zip\" | sha256sum -c - \\\n && unzip /var/tmp/gradle-$GRADLE_VERSION-bin.zip -d /opt \\\n && update-alternatives --install /usr/local/bin/gradle gradle /opt/gradle-$GRADLE_VERSION/bin/gradle 10000 \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get clean\nCOPY m2-settings.xml $MAVEN_CONFIG/settings.xml\n# ## .NET CLI\n#  Install .NET CLI dependencies\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends libc6=2.19-* libcurl3=7.35.* libgcc1=1:4.9.* libgssapi-krb5-2=1.12* libicu52=52.1-* liblttng-ust0=2.4.* libssl1.0.0=1.0.* libunwind8=1.1-* libuuid1=2.20.* zlib1g=1:1.2.* software-properties-common=0.92.* -y \\\n && add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n && apt-get update \\\n && apt-get install libstdc++6 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install .NET Core SDK\nENV DOTNET_SDK_VERSION=\"2.2.202\"\nENV DOTNET_SDK_DOWNLOAD_URL=\"https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz\"\nENV DOTNET_SDK_DOWNLOAD_SHA=\"14F5C0E6FBB874A882334E0D500E494B01D7F363028E72DB58DFFF6DB43C54670533539DCF6B8F50A97CE1E099119A8286CE84E193B361D65B1FD8C7DFFCE63D\"\nRUN set -ex \\\n && curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz \\\n && echo \"$DOTNET_SDK_DOWNLOAD_SHA dotnet.tar.gz\" | sha512sum -c - \\\n && mkdir -p /usr/share/dotnet \\\n && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n && rm dotnet.tar.gz \\\n && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n#  Add .NET Core Global Tools install folder to PATH\nENV PATH=\"\\\"~/.dotnet/tools/:$PATH\\\"\"\n#  Trigger the population of the local package cache\nENV NUGET_XMLDOC_MODE=\"skip\"\nRUN set -ex \\\n && mkdir warmup \\\n && cd warmup \\\n && dotnet new \\\n && cd .. \\\n && rm -rf warmup \\\n && rm -rf /tmp/NuGetScratch\n#  Install Powershell Core\n#  See instructions at https://docs.microsoft.com/en-us/powershell/scripting/setup/installing-powershell-core-on-linux\nENV POWERSHELL_VERSION=\"6.1.0\"\nENV POWERSHELL_DOWNLOAD_URL=\"https://github.com/PowerShell/PowerShell/releases/download/v6.1.0/powershell-6.1.0-linux-x64.tar.gz\"\nENV POWERSHELL_DOWNLOAD_SHA=\"68674CFBA84ABF759C7E10EF6FCD926CBC125D9958E11A1926AF7CF7F604506C\"\nRUN set -ex \\\n && curl -SL $POWERSHELL_DOWNLOAD_URL --output powershell.tar.gz \\\n && echo \"$POWERSHELL_DOWNLOAD_SHA powershell.tar.gz\" | sha256sum -c - \\\n && mkdir -p /opt/microsoft/powershell/$POWERSHELL_VERSION \\\n && tar zxf powershell.tar.gz -C /opt/microsoft/powershell/$POWERSHELL_VERSION \\\n && rm powershell.tar.gz \\\n && ln -s /opt/microsoft/powershell/$POWERSHELL_VERSION/pwsh /usr/bin/pwsh\n# ## Python 3.6.5 -- https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/python/3.6.5/Dockerfile\nENV PATH=\"/usr/local/bin:$PATH\" \\\n    GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\" \\\n    PYTHON_VERSION=\"3.6.5\" \\\n    PYTHON_PIP_VERSION=\"10.0.0\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\"\nCOPY python-release-keys.asc /tmp/python-release-keys.asc\nRUN apt-get update \\\n && apt-get install --no-install-recommends tcl-dev tk-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --import < /tmp/python-release-keys.asc \\\n && rm /tmp/python-release-keys.asc \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-loadable-sqlite-extensions --enable-shared \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && if [ ! -e /usr/local/bin/pip3 ] ; then : \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py ; fi \\\n && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n && pip install boto3 pipenv virtualenv wheel awscli==1.* --no-cache-dir \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth ( ( -type d -a -name test -o -name tests ) -o ( -type f -a -name '*.pyc' -o -name '*.pyo' ) ) -exec rm -rf '{}' + \\\n && apt-get purge -y --auto-remove tcl-dev tk-dev \\\n && rm -rf /usr/src/python ~/.cache \\\n && cd /usr/local/bin \\\n && { [ -e easy_install ] || ln -s easy_install-* easy_install ; } \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\n# ## Ruby 2.5.1 - https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/ruby/2.5.1/Dockerfile\nENV RUBY_MAJOR=\"2.5\" \\\n    RUBY_VERSION=\"2.5.3\" \\\n    RUBY_DOWNLOAD_SHA256=\"9828d03852c37c20fa333a0264f2490f07338576734d910ee3fd538c9520846c\" \\\n    RUBYGEMS_VERSION=\"2.7.7\" \\\n    BUNDLER_VERSION=\"1.16.6\" \\\n    GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_BIN=\"$GEM_HOME/bin\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH=\"$BUNDLE_BIN:$PATH\"\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc \\\n && apt-get update \\\n && apt-get install --no-install-recommends bison libgdbm-dev ruby -y \\\n && wget \"https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz\" -O /tmp/ruby.tar.gz \\\n && echo \"$RUBY_DOWNLOAD_SHA256 /tmp/ruby.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xzf /tmp/ruby.tar.gz -C /usr/src/ruby --strip-components=1 \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && ./configure --disable-install-doc \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && apt-get purge -y --auto-remove bison libgdbm-dev ruby \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && gem update --system \"$RUBYGEMS_VERSION\" \\\n && gem install bundler \\\n && mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\n# ## Local Tweaking\n#  Install rsync\nRUN set -ex \\\n && apt-get update \\\n && apt-get install rsync -y\nRUN echo 'DOTNET_CLI_TELEMETRY_OPTOUT=1' >> ~/.bashrc\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"55381516fcd3bb9cf1aeb0ca7a3ec6f8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n#   Licensed under the Amazon Software License (the \"License\"). You may not use this file except in compliance with the License.\n#   A copy of the License is located at\n#\n#      http://aws.amazon.com/asl/\n#\n#   or in the \"license\" file accompanying this file.\n#   This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.\n#   See the License for the specific language governing permissions and limitations under the License.\n#\nFROM ubuntu:14.04.5\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"18.09.0\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"08795696e852328d66753963249f4396af2295a7fe2847b839f7102e25e47cb9\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.23.2\" \\\n    GITVERSION_VERSION=\"3.6.5\"\n#   Install git, SSH, and other utilities\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && apt-get install apt-transport-https -y \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-trusty main\" | tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && apt-add-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends git=1:2.* -y \\\n && git version \\\n && apt-get install --no-install-recommends openssh-client=1:6.6* -y \\\n && mkdir ~/.ssh \\\n && touch ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts \\\n && ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts \\\n && chmod 600 ~/.ssh/known_hosts \\\n && apt-get install --no-install-recommends ca-certificates jq python3-pip wget=1.15-* python3=3.4.* python3.4-dev=3.4.* fakeroot=1.20-* tar=1.27.* gzip=1.6-* zip=3.0-* autoconf=2.69-* automake=1:1.14.* bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.* libbz2-dev=1.0.* libc6-dev=2.19-* libcurl4-openssl-dev=7.35.* libdb-dev=1:5.3.* libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.* libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.* libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.* libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-* libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.* libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-* patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* unzip=6.0-* curl=7.35.* e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.* mono-devel=5.* less=458-* groff=1.22.* liberror-perl=0.17-* asciidoc=8.6.* build-essential=11.* bzr=2.6.* cvs=2:1.12.* cvsps=2.1-* docbook-xml=4.5-* docbook-xsl=1.78.* dpkg-dev=1.17.* libdbd-sqlite3-perl=1.40-* libdbi-perl=1.630-* libdpkg-perl=1.17.* libhttp-date-perl=6.02-* libio-pty-perl=1:1.08-* libserf-1-1=1.3.* libsvn-perl=1.8.* libsvn1=1.8.* libtcl8.6=8.6.* libtimedate-perl=2.3000-* libunistring0=0.9.* libxml2-utils=2.9.* libyaml-perl=0.84-* python-bzrlib=2.6.* python-configobj=4.7.* sgml-base=1.26+* sgml-data=2.0.* subversion=1.8.* tcl=8.6.* tcl8.6=8.6.* xml-core=0.13+* xmlto=0.0.* xsltproc=1.1.* tk=8.6.* gettext=0.18.* gettext-base=0.18.* libapr1=1.5.* libaprutil1=1.5.* libasprintf0c2=0.18.* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#   Download and set up GitVersion\nRUN set -ex \\\n && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe $@\" >> /usr/local/bin/gitversion \\\n && chmod +x /usr/local/bin/gitversion\n#   Install Docker\nRUN set -ex \\\n && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n && rm docker.tgz \\\n && docker -v \\\n && addgroup dockremap \\\n && useradd -g dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid \\\n && wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n && docker-compose version\nVOLUME /var/lib/docker\n#   Configure SSH\nCOPY ssh_config /root/.ssh/config\nCOPY dockerd-entrypoint.sh /usr/local/bin/\n#  ## NodeJS -- https://github.com/aws/aws-codebuild-docker-images/tree/master/ubuntu/nodejs/8.11.0\nENV NODE_VERSION=\"8.11.0\"\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nCOPY node-release-keys.asc /tmp/node-release-keys.asc\nRUN set -ex \\\n && gpg --import < /tmp/node-release-keys.asc \\\n && rm /tmp/node-release-keys.asc\nRUN set -ex \\\n && wget \"https://nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" -O node-v$NODE_VERSION-linux-x64.tar.gz \\\n && wget \"https://nodejs.org/download/release/v$NODE_VERSION/SHASUMS256.txt.asc\" -O SHASUMS256.txt.asc \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && npm install npm@~6.8.0 -g\nRUN npm set unsafe-perm true\n#  ## Java 8 -- https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/java/openjdk-8/Dockerfile\nENV JAVA_VERSION=\"8\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JDK_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JRE_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    ANT_VERSION=\"1.10.3\" \\\n    MAVEN_HOME=\"/opt/maven\" \\\n    MAVEN_VERSION=\"3.5.4\" \\\n    MAVEN_CONFIG=\"/root/.m2\" \\\n    GRADLE_VERSION=\"4.2.1\" \\\n    PROPERTIES_COMMON_VERSION=\"0.92.37.8\" \\\n    PYTHON_TOOL_VERSION=\"3.3-*\" \\\n    PYTHON_WHEEL_VERSION=\"0.24.*\" \\\n    JDK_VERSION=\"8u171-b11-2~14.04\" \\\n    ANT_DOWNLOAD_SHA512=\"73f2193700b1d1e32eedf25fab1009e2a98fb2f6425413f5c9fa1b0f2f9f49f59cb8ed3f04931c808ae022a64ecfa2619e5fb77643fea6dbc29721e489eb3a07\" \\\n    MAVEN_DOWNLOAD_SHA1=\"22cac91b3557586bb1eba326f2f7727543ff15e3\" \\\n    GRADLE_DOWNLOAD_SHA256=\"b551cc04f2ca51c78dd14edb060621f0e5439bdfafa6fd167032a09ac708fbc0\"\nRUN set -ex \\\n && apt-get update \\\n && apt-get install software-properties-common=$PROPERTIES_COMMON_VERSION -y \\\n && add-apt-repository ppa:openjdk-r/ppa \\\n && apt-get update \\\n && apt-get install python-setuptools=$PYTHON_TOOL_VERSION -y \\\n && apt-get install python-wheel=$PYTHON_WHEEL_VERSION -y \\\n && apt-get install openjdk-${JAVA_VERSION}-jdk=$JDK_VERSION -y \\\n && apt-get install --no-install-recommends ca-certificates-java -y \\\n && apt-get clean \\\n && update-ca-certificates -f \\\n && curl -LSso /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz \\\n && echo \"$ANT_DOWNLOAD_SHA512 /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz\" | sha512sum -c - \\\n && tar -xzf /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz -C /opt \\\n && update-alternatives --install /usr/bin/ant ant /opt/apache-ant-$ANT_VERSION/bin/ant 10000 \\\n && mkdir -p $MAVEN_HOME \\\n && curl -LSso /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz https://apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n && echo \"$MAVEN_DOWNLOAD_SHA1 /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | sha1sum -c - \\\n && tar xzvf /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz -C $MAVEN_HOME --strip-components=1 \\\n && update-alternatives --install /usr/bin/mvn mvn /opt/maven/bin/mvn 10000 \\\n && mkdir -p $MAVEN_CONFIG \\\n && curl -LSso /var/tmp/gradle-$GRADLE_VERSION-bin.zip https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip \\\n && echo \"$GRADLE_DOWNLOAD_SHA256 /var/tmp/gradle-$GRADLE_VERSION-bin.zip\" | sha256sum -c - \\\n && unzip /var/tmp/gradle-$GRADLE_VERSION-bin.zip -d /opt \\\n && update-alternatives --install /usr/local/bin/gradle gradle /opt/gradle-$GRADLE_VERSION/bin/gradle 10000 \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get clean\nCOPY m2-settings.xml $MAVEN_CONFIG/settings.xml\n#  ## .NET CLI\n#   Install .NET CLI dependencies\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends libc6=2.19-* libcurl3=7.35.* libgcc1=1:4.9.* libgssapi-krb5-2=1.12* libicu52=52.1-* liblttng-ust0=2.4.* libssl1.0.0=1.0.* libunwind8=1.1-* libuuid1=2.20.* zlib1g=1:1.2.* software-properties-common=0.92.* -y \\\n && add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n && apt-get update \\\n && apt-get install libstdc++6 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install .NET Core SDK\nENV DOTNET_SDK_VERSION=\"2.2.202\"\nENV DOTNET_SDK_DOWNLOAD_URL=\"https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz\"\nENV DOTNET_SDK_DOWNLOAD_SHA=\"14F5C0E6FBB874A882334E0D500E494B01D7F363028E72DB58DFFF6DB43C54670533539DCF6B8F50A97CE1E099119A8286CE84E193B361D65B1FD8C7DFFCE63D\"\nRUN set -ex \\\n && curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz \\\n && echo \"$DOTNET_SDK_DOWNLOAD_SHA dotnet.tar.gz\" | sha512sum -c - \\\n && mkdir -p /usr/share/dotnet \\\n && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n && rm dotnet.tar.gz \\\n && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n#   Add .NET Core Global Tools install folder to PATH\nENV PATH=\"\\\"~/.dotnet/tools/:$PATH\\\"\"\n#   Trigger the population of the local package cache\nENV NUGET_XMLDOC_MODE=\"skip\"\nRUN set -ex \\\n && mkdir warmup \\\n && cd warmup \\\n && dotnet new \\\n && cd .. \\\n && rm -rf warmup \\\n && rm -rf /tmp/NuGetScratch\n#   Install Powershell Core\n#   See instructions at https://docs.microsoft.com/en-us/powershell/scripting/setup/installing-powershell-core-on-linux\nENV POWERSHELL_VERSION=\"6.1.0\"\nENV POWERSHELL_DOWNLOAD_URL=\"https://github.com/PowerShell/PowerShell/releases/download/v6.1.0/powershell-6.1.0-linux-x64.tar.gz\"\nENV POWERSHELL_DOWNLOAD_SHA=\"68674CFBA84ABF759C7E10EF6FCD926CBC125D9958E11A1926AF7CF7F604506C\"\nRUN set -ex \\\n && curl -SL $POWERSHELL_DOWNLOAD_URL --output powershell.tar.gz \\\n && echo \"$POWERSHELL_DOWNLOAD_SHA powershell.tar.gz\" | sha256sum -c - \\\n && mkdir -p /opt/microsoft/powershell/$POWERSHELL_VERSION \\\n && tar zxf powershell.tar.gz -C /opt/microsoft/powershell/$POWERSHELL_VERSION \\\n && rm powershell.tar.gz \\\n && ln -s /opt/microsoft/powershell/$POWERSHELL_VERSION/pwsh /usr/bin/pwsh\n#  ## Python 3.6.5 -- https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/python/3.6.5/Dockerfile\nENV PATH=\"/usr/local/bin:$PATH\" \\\n    GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\" \\\n    PYTHON_VERSION=\"3.6.5\" \\\n    PYTHON_PIP_VERSION=\"10.0.0\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\"\nCOPY python-release-keys.asc /tmp/python-release-keys.asc\nRUN apt-get update \\\n && apt-get install --no-install-recommends tcl-dev tk-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --import < /tmp/python-release-keys.asc \\\n && rm /tmp/python-release-keys.asc \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-loadable-sqlite-extensions --enable-shared \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && if [ ! -e /usr/local/bin/pip3 ] ; then : \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py ; fi \\\n && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n && pip install boto3 pipenv virtualenv wheel awscli==1.* --no-cache-dir \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth\n#  ## Ruby 2.5.1 - https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/ruby/2.5.1/Dockerfile\nENV RUBY_MAJOR=\"2.5\" \\\n    RUBY_VERSION=\"2.5.3\" \\\n    RUBY_DOWNLOAD_SHA256=\"9828d03852c37c20fa333a0264f2490f07338576734d910ee3fd538c9520846c\" \\\n    RUBYGEMS_VERSION=\"2.7.7\" \\\n    BUNDLER_VERSION=\"1.16.6\" \\\n    GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_BIN=\"$GEM_HOME/bin\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH=\"$BUNDLE_BIN:$PATH\"\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc \\\n && apt-get update \\\n && apt-get install --no-install-recommends bison libgdbm-dev ruby -y \\\n && wget \"https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz\" -O /tmp/ruby.tar.gz \\\n && echo \"$RUBY_DOWNLOAD_SHA256 /tmp/ruby.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xzf /tmp/ruby.tar.gz -C /usr/src/ruby --strip-components=1 \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && ./configure --disable-install-doc \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && apt-get purge -y --auto-remove bison libgdbm-dev ruby \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && gem update --system \"$RUBYGEMS_VERSION\" \\\n && gem install bundler \\\n && mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  ## Local Tweaking\n#   Install rsync\nRUN set -ex \\\n && apt-get update \\\n && apt-get install rsync -y\nRUN echo 'DOTNET_CLI_TELEMETRY_OPTOUT=1' >> ~/.bashrc\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"2fb3be801e23966d03427ac138ee983a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ebdb62860fc4379bbdead1a33312069fbdedb108.dockerfile"}