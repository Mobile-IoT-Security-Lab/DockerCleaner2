{"seed":2239583737,"processedDockerfileHash":"9f31c3a6d050be4cf2d27a566c1bd1f3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 bzip2=1.0.6-8ubuntu0.2 ca-certificates=20210119~16.04.1 cmake=3.5.1-1ubuntu3 git=1:2.7.4-0ubuntu1.10 libatlas-base-dev=3.10.2-9 libboost-all-dev=1.58.0.1ubuntu1 libgflags-dev=2.1.2-3 libgoogle-glog-dev=0.3.4-0.1 libhdf5-serial-dev=1.8.16+docs-4ubuntu1.1 libleveldb-dev=1.18-5 liblmdb-dev=0.9.17-3 libopencv-dev=2.4.9.1+dfsg-1.5ubuntu1.1 libprotobuf-dev=2.6.1-1.3 libsnappy-dev=1.1.3-2 locales=2.23-0ubuntu11.3 netcat=1.10-41 protobuf-compiler=2.6.1-1.3 python3-dev=3.5.1-3 python3-numpy=1:1.11.0-1ubuntu1 python3-pip=8.1.1-2ubuntu0.6 python3-pydot=1.0.28-2 python3-scipy=0.17.0-1 python3-setuptools=20.7.0-1 sudo=1.8.16-0ubuntu1.10 wget=1.17.1-1ubuntu1.5 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install pip==9.0.3 \\\n && pip3 install -U cython h5py ipython jupyter leveldb lmdb matplotlib networkx nose numpy pandas Pillow protobuf pydot python-dateutil python-gflags pyyaml scikit-image scipy six \\\n && rm -rf ~/.cache/pip\nENV CAFFE_ROOT=\"/opt/caffe\"\nWORKDIR $CAFFE_ROOT\nENV CLONE_TAG=\"1.0\"\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 -Dpython_version=3 .. \\\n && make -j$( nproc ;)\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo '$CAFFE_ROOT/build/lib' >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   Configure environment\nENV SHELL=\"/bin/bash\" \\\n    NB_USER=\"aurora\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"2000\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\n#   Create aurora user with UID=1000 and in the 'aurora' group\nRUN groupadd -g $NB_GID $NB_USER \\\n && useradd -m -s $SHELL -N -u $NB_UID -g $NB_GID $NB_USER \\\n && echo '%'$NB_USER 'ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers\nEXPOSE 8888/tcp\nWORKDIR /workspace\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\n#   Install Aurora job submit tool\nARG CACHE_DATE\nARG SUBMIT_TOOL_NAME=aurora\nRUN wget https://raw.githubusercontent.com/linkernetworks/aurora/master/install.sh -O - | bash \\\n && if [ \"$SUBMIT_TOOL_NAME\" != \"aurora\" ] ; then mv /usr/local/bin/aurora /usr/local/bin/$SUBMIT_TOOL_NAME ; fi\n#   Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential bzip2 ca-certificates cmake git libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev locales netcat protobuf-compiler python3-dev python3-numpy python3-pip python3-pydot python3-scipy python3-setuptools sudo wget -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install pip==9.0.3 \\\n && pip3 install -U cython h5py ipython jupyter leveldb lmdb matplotlib networkx nose numpy pandas Pillow protobuf pydot python-dateutil python-gflags pyyaml scikit-image scipy six \\\n && rm -rf ~/.cache/pip\nENV CAFFE_ROOT=\"/opt/caffe\"\nWORKDIR $CAFFE_ROOT\nENV CLONE_TAG=\"1.0\"\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 -Dpython_version=3 .. \\\n && make -j$( nproc ;)\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo '$CAFFE_ROOT/build/lib' >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#  Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#  Configure environment\nENV SHELL=\"/bin/bash\" \\\n    NB_USER=\"aurora\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"2000\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\n#  Create aurora user with UID=1000 and in the 'aurora' group\nRUN groupadd -g $NB_GID $NB_USER \\\n && useradd -m -s $SHELL -N -u $NB_UID -g $NB_GID $NB_USER \\\n && echo '%'$NB_USER 'ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers\nEXPOSE 8888/tcp\nWORKDIR /workspace\n#  Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\n#  Install Aurora job submit tool\nARG CACHE_DATE\nARG SUBMIT_TOOL_NAME=aurora\nRUN wget https://raw.githubusercontent.com/linkernetworks/aurora/master/install.sh -O - | bash \\\n && if [ \"$SUBMIT_TOOL_NAME\" != \"aurora\" ] ; then mv /usr/local/bin/aurora /usr/local/bin/$SUBMIT_TOOL_NAME ; fi\n#  Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"1306c00d48e7de1a9324af3a857d55f9","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential bzip2 ca-certificates cmake git libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev locales netcat protobuf-compiler python3-dev python3-numpy python3-pip python3-pydot python3-scipy python3-setuptools sudo wget -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install pip==9.0.3 \\\n && pip3 install -U cython h5py ipython jupyter leveldb lmdb matplotlib networkx nose numpy pandas Pillow protobuf pydot python-dateutil python-gflags pyyaml scikit-image scipy six \\\n && rm -rf ~/.cache/pip\nENV CAFFE_ROOT=\"/opt/caffe\"\nWORKDIR $CAFFE_ROOT\nENV CLONE_TAG=\"1.0\"\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 -Dpython_version=3 .. \\\n && make -j$( nproc ;)\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo '$CAFFE_ROOT/build/lib' >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   Configure environment\nENV SHELL=\"/bin/bash\" \\\n    NB_USER=\"aurora\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"2000\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\n#   Create aurora user with UID=1000 and in the 'aurora' group\nRUN groupadd -g $NB_GID $NB_USER \\\n && useradd -m -s $SHELL -N -u $NB_UID -g $NB_GID $NB_USER \\\n && echo '%'$NB_USER 'ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers\nEXPOSE 8888/tcp\nWORKDIR /workspace\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\n#   Install Aurora job submit tool\nARG CACHE_DATE\nARG SUBMIT_TOOL_NAME=aurora\nRUN wget https://raw.githubusercontent.com/linkernetworks/aurora/master/install.sh -O - | bash \\\n && if [ \"$SUBMIT_TOOL_NAME\" != \"aurora\" ] ; then mv /usr/local/bin/aurora /usr/local/bin/$SUBMIT_TOOL_NAME ; fi\n#   Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n","originalDockerfileUglifiedHash":"a79b53586c7c4b5c5e5c91212d86d78b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b905ce12a7cd092f73d7f23c2566fab30c39c34b.dockerfile"}