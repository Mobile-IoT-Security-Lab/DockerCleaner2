{"seed":2561389838,"processedDockerfileHash":"eaea915b082464cb338e4276e42d5778","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\nMAINTAINER https://github.com/helderco/\n#   persistent / runtime deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl librecode0 libmysqlclient-dev libsqlite3-0 libxml2 -y \\\n && apt-get clean \\\n && rm -r /var/lib/apt/lists/*\n#   phpize deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf file g++ gcc libc-dev make pkg-config re2c -y \\\n && apt-get clean \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nENV GPG_KEYS=\"0B96609E270F565C13292B24C13C70B87267B52D 0A95E9A026542D53835E3F3A7DEC4E69FC9C83D7 0E604491\"\nRUN set -xe \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\n#   compile openssl, otherwise --with-openssl won't work\nRUN OPENSSL_VERSION=\"1.0.2k\" \\\n && cd /tmp \\\n && mkdir openssl \\\n && curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\" -o openssl.tar.gz \\\n && curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz.asc\" -o openssl.tar.gz.asc \\\n && gpg --verify openssl.tar.gz.asc \\\n && tar -xzf openssl.tar.gz -C openssl --strip-components=1 \\\n && cd /tmp/openssl \\\n && ./config \\\n && make \\\n && make install \\\n && rm -rf /tmp/*\nENV PHP_VERSION=\"5.3.29\"\n#   php 5.3 needs older autoconf\n#   --enable-mysqlnd is included below because it's harder to compile after the fact the extensions are (since it's a plugin for several extensions, not an extension in itself)\nRUN buildDeps=\" autoconf2.13 libcurl4-openssl-dev libreadline6-dev librecode-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils \" \\\n && set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\" -o php.tar.xz \\\n && curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\" -o php.tar.xz.asc \\\n && gpg --verify php.tar.xz.asc \\\n && mkdir -p /usr/src/php \\\n && tar -xof php.tar.xz -C /usr/src/php --strip-components=1 \\\n && rm php.tar.xz* \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi --enable-mysqlnd --with-mysql --with-curl --with-openssl=/usr/local/ssl --with-readline --with-recode --with-zlib \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \\\n && make clean\nCOPY docker-php-* /usr/local/bin/\nWORKDIR /var/www/html\nRUN set -ex \\\n && cd /usr/local/etc \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=etc/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && { echo '[global]' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo '; if we send this to /proc/self/fd/1, it never appears' ;echo 'access.log = /proc/self/fd/2' ;echo ;echo '; Ensure worker stdout and stderr are sent to the main error log.' ;echo 'catch_workers_output = yes' ; } | tee php-fpm.d/docker.conf \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo ;echo '[www]' ;echo 'listen = 9000' ; } | tee php-fpm.d/zz-docker.conf\n#   fix some weird corruption in this file\nRUN sed -i -e \"\" /usr/local/etc/php-fpm.d/www.conf\nEXPOSE 9000/tcp\nCMD [\"php-fpm\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nMAINTAINER https://github.com/helderco/\n#  persistent / runtime deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl librecode0 libmysqlclient-dev libsqlite3-0 libxml2 -y \\\n && apt-get clean \\\n && rm -r /var/lib/apt/lists/*\n#  phpize deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf file g++ gcc libc-dev make pkg-config re2c -y \\\n && apt-get clean \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nENV GPG_KEYS=\"0B96609E270F565C13292B24C13C70B87267B52D 0A95E9A026542D53835E3F3A7DEC4E69FC9C83D7 0E604491\"\nRUN set -xe \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\n#  compile openssl, otherwise --with-openssl won't work\nRUN OPENSSL_VERSION=\"1.0.2k\" \\\n && cd /tmp \\\n && mkdir openssl \\\n && curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\" -o openssl.tar.gz \\\n && curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz.asc\" -o openssl.tar.gz.asc \\\n && gpg --verify openssl.tar.gz.asc \\\n && tar -xzf openssl.tar.gz -C openssl --strip-components=1 \\\n && cd /tmp/openssl \\\n && ./config \\\n && make \\\n && make install \\\n && rm -rf /tmp/*\nENV PHP_VERSION=\"5.3.29\"\n#  php 5.3 needs older autoconf\n#  --enable-mysqlnd is included below because it's harder to compile after the fact the extensions are (since it's a plugin for several extensions, not an extension in itself)\nRUN buildDeps=\" autoconf2.13 libcurl4-openssl-dev libreadline6-dev librecode-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils \" \\\n && set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\" -o php.tar.xz \\\n && curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\" -o php.tar.xz.asc \\\n && gpg --verify php.tar.xz.asc \\\n && mkdir -p /usr/src/php \\\n && tar -xof php.tar.xz -C /usr/src/php --strip-components=1 \\\n && rm php.tar.xz* \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi --enable-mysqlnd --with-mysql --with-curl --with-openssl=/usr/local/ssl --with-readline --with-recode --with-zlib \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \\\n && make clean\nCOPY docker-php-* /usr/local/bin/\nWORKDIR /var/www/html\nRUN set -ex \\\n && cd /usr/local/etc \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=etc/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && { echo '[global]' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo '; if we send this to /proc/self/fd/1, it never appears' ;echo 'access.log = /proc/self/fd/2' ;echo ;echo '; Ensure worker stdout and stderr are sent to the main error log.' ;echo 'catch_workers_output = yes' ; } | tee php-fpm.d/docker.conf \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo ;echo '[www]' ;echo 'listen = 9000' ; } | tee php-fpm.d/zz-docker.conf\n#  fix some weird corruption in this file\nRUN sed -i -e \"\" /usr/local/etc/php-fpm.d/www.conf\nEXPOSE 9000/tcp\nCMD [\"php-fpm\"]\n","injectedSmells":[],"originalDockerfileHash":"65866177c4a041f7c839c24b98abb50e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nMAINTAINER https://github.com/helderco/\n#   persistent / runtime deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl librecode0 libmysqlclient-dev libsqlite3-0 libxml2 -y \\\n && apt-get clean \\\n && rm -r /var/lib/apt/lists/*\n#   phpize deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf file g++ gcc libc-dev make pkg-config re2c -y \\\n && apt-get clean \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nENV GPG_KEYS=\"0B96609E270F565C13292B24C13C70B87267B52D 0A95E9A026542D53835E3F3A7DEC4E69FC9C83D7 0E604491\"\nRUN set -xe \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\n#   compile openssl, otherwise --with-openssl won't work\nRUN OPENSSL_VERSION=\"1.0.2k\" \\\n && cd /tmp \\\n && mkdir openssl \\\n && curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\" -o openssl.tar.gz \\\n && curl -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz.asc\" -o openssl.tar.gz.asc \\\n && gpg --verify openssl.tar.gz.asc \\\n && tar -xzf openssl.tar.gz -C openssl --strip-components=1 \\\n && cd /tmp/openssl \\\n && ./config \\\n && make \\\n && make install \\\n && rm -rf /tmp/*\nENV PHP_VERSION=\"5.3.29\"\n#   php 5.3 needs older autoconf\n#   --enable-mysqlnd is included below because it's harder to compile after the fact the extensions are (since it's a plugin for several extensions, not an extension in itself)\nRUN buildDeps=\" autoconf2.13 libcurl4-openssl-dev libreadline6-dev librecode-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils \" \\\n && set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\" -o php.tar.xz \\\n && curl -SL \"http://php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\" -o php.tar.xz.asc \\\n && gpg --verify php.tar.xz.asc \\\n && mkdir -p /usr/src/php \\\n && tar -xof php.tar.xz -C /usr/src/php --strip-components=1 \\\n && rm php.tar.xz* \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi --enable-mysqlnd --with-mysql --with-curl --with-openssl=/usr/local/ssl --with-readline --with-recode --with-zlib \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \\\n && make clean\nCOPY docker-php-* /usr/local/bin/\nWORKDIR /var/www/html\nRUN set -ex \\\n && cd /usr/local/etc \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=etc/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && { echo '[global]' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo '; if we send this to /proc/self/fd/1, it never appears' ;echo 'access.log = /proc/self/fd/2' ;echo ;echo '; Ensure worker stdout and stderr are sent to the main error log.' ;echo 'catch_workers_output = yes' ; } | tee php-fpm.d/docker.conf \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo ;echo '[www]' ;echo 'listen = 9000' ; } | tee php-fpm.d/zz-docker.conf\n#   fix some weird corruption in this file\nRUN sed -i -e \"\" /usr/local/etc/php-fpm.d/www.conf\nEXPOSE 9000/tcp\nCMD [\"php-fpm\"]\n","originalDockerfileUglifiedHash":"89b7e00e154d890a1cac3ab449a22cc5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/eb268067346c57388fdfee574bfb076df12fb1c8.dockerfile"}