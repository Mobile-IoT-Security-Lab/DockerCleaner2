{"seed":829762197,"processedDockerfileHash":"131d7a1d3c0444fe8c019d400f7b5c68","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nENV TZ=\"Asia/Seoul\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV MYSQL_DATA_DIR=\"/var/lib/mysql\"\nENV MYSQL_PID_DIR=\"/var/run/mysqld\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV APACHE_ENVVARS=\"/etc/apache2/envvars\"\nENV APP_DIR=\"/var/www/html\"\n#  -------------------------------------------------------------------------------\n#   Install Packages\n#  -------------------------------------------------------------------------------\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 wget=1.17.1-1ubuntu1.5 ca-certificates=20210119~16.04.1 cron=3.0pl1-128ubuntu2 git=1:2.7.4-0ubuntu1.10 supervisor=3.2.0-2ubuntu0.2 apache2=2.4.18-2ubuntu3.17 php=1:7.0+35ubuntu6.1 php-cli=1:7.0+35ubuntu6.1 php-curl=1:7.0+35ubuntu6.1 php-gd=1:7.0+35ubuntu6.1 php-gmp=1:7.0+35ubuntu6.1 php-intl=1:7.0+35ubuntu6.1 php-mbstring=1:7.0+35ubuntu6.1 php-mcrypt=1:7.0+35ubuntu6.1 php-mysql=1:7.0+35ubuntu6.1 php-sqlite3=1:7.0+35ubuntu6.1 php-xdebug=2.4.0-1 php-xml=1:7.0+35ubuntu6.1 libapache2-mod-php=1:7.0+35ubuntu6.1 mysql-server=5.7.33-0ubuntu0.16.04.1 mysql-client=5.7.33-0ubuntu0.16.04.1 redis-server=2:3.0.6-1ubuntu0.4 vim=2:7.4.1689-3ubuntu1.5 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  -------------------------------------------------------------------------------\n#   Timezone Setting\n#  -------------------------------------------------------------------------------\nRUN echo $TZ | tee /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n#  -------------------------------------------------------------------------------\n#   Copy Settings\n#  -------------------------------------------------------------------------------\nRUN mkdir -p /var/redis /var/log/redis\nCOPY dockerfiles /\n#  -------------------------------------------------------------------------------\n#   Configure MySQL\n#  -------------------------------------------------------------------------------\nRUN sed -i \"s/user[\\t ]*=.*/user=root/g\" /etc/mysql/debian.cnf \\\n && sed -i \"s/password[\\t ]*=.*/password=/g\" /etc/mysql/debian.cnf\n#  -------------------------------------------------------------------------------\n#   Configure Apache\n#  -------------------------------------------------------------------------------\n#   @see https://github.com/docker-library/php/blob/e573f8f7fda5d7378bae9c6a936a298b850c4076/7.0/apache/Dockerfile#L38\nRUN sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" \"$APP_DIR\"; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done\nRUN a2dissite 000-default \\\n && a2ensite default \\\n && a2enmod rewrite deflate headers \\\n && service apache2 restart\n#  -------------------------------------------------------------------------------\n#   Install Cron Job\n#  -------------------------------------------------------------------------------\n#   앱 폴더를 마운트하므로 빌드할 때 .env 파일을 읽을 수 없습니다.\n#  RUN source \"$APP_DIR/.env\" \\\n#      && if [ \"$CRON_WORK\" = \"true\" ]; then crontab /root/crontab; fi;\nRUN crontab /root/crontab\n#  -------------------------------------------------------------------------------\n#   Run Environment\n#  -------------------------------------------------------------------------------\nVOLUME [\"$APP_DIR\", \"$MYSQL_DATA_DIR\"]\nEXPOSE 80/tcp 9001/tcp 3306/tcp 6379/tcp 1000/tcp\nWORKDIR \"$APP_DIR\"\nRUN /bin/bash /init_mysql.sh\nRUN /bin/bash /refresh_mysql_pid.sh\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nENV TZ=\"Asia/Seoul\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV MYSQL_DATA_DIR=\"/var/lib/mysql\"\nENV MYSQL_PID_DIR=\"/var/run/mysqld\"\nENV MYSQL_ROOT_PASSWORD=\"secret\"\nENV APACHE_ENVVARS=\"/etc/apache2/envvars\"\nENV APP_DIR=\"/var/www/html\"\n# -------------------------------------------------------------------------------\n#  Install Packages\n# -------------------------------------------------------------------------------\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl wget ca-certificates cron git supervisor apache2 php php-cli php-curl php-gd php-gmp php-intl php-mbstring php-mcrypt php-mysql php-sqlite3 php-xdebug php-xml libapache2-mod-php mysql-server mysql-client redis-server vim -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n# -------------------------------------------------------------------------------\n#  Timezone Setting\n# -------------------------------------------------------------------------------\nRUN echo $TZ | tee /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n# -------------------------------------------------------------------------------\n#  Copy Settings\n# -------------------------------------------------------------------------------\nRUN mkdir -p /var/redis /var/log/redis\nCOPY dockerfiles /\n# -------------------------------------------------------------------------------\n#  Configure MySQL\n# -------------------------------------------------------------------------------\nRUN sed -i \"s/user[\\t ]*=.*/user=root/g\" /etc/mysql/debian.cnf \\\n && sed -i \"s/password[\\t ]*=.*/password=/g\" /etc/mysql/debian.cnf\n# -------------------------------------------------------------------------------\n#  Configure Apache\n# -------------------------------------------------------------------------------\n#  @see https://github.com/docker-library/php/blob/e573f8f7fda5d7378bae9c6a936a298b850c4076/7.0/apache/Dockerfile#L38\nRUN sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" \"$APP_DIR\"; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done\nRUN a2dissite 000-default \\\n && a2ensite default \\\n && a2enmod rewrite deflate headers \\\n && service apache2 restart\n# -------------------------------------------------------------------------------\n#  Install Cron Job\n# -------------------------------------------------------------------------------\n#  앱 폴더를 마운트하므로 빌드할 때 .env 파일을 읽을 수 없습니다.\n# RUN source \"$APP_DIR/.env\" \\\n#     && if [ \"$CRON_WORK\" = \"true\" ]; then crontab /root/crontab; fi;\nRUN crontab /root/crontab\n# -------------------------------------------------------------------------------\n#  Run Environment\n# -------------------------------------------------------------------------------\nVOLUME [\"$APP_DIR\", \"$MYSQL_DATA_DIR\"]\nEXPOSE 80/tcp 9001/tcp 3306/tcp 6379/tcp 1000/tcp\nWORKDIR \"$APP_DIR\"\nRUN /bin/bash /init_mysql.sh\nRUN /bin/bash /refresh_mysql_pid.sh\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"c4821e2d0c7cbc5165dec9a631752a95","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nENV TZ=\"Asia/Seoul\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV MYSQL_DATA_DIR=\"/var/lib/mysql\"\nENV MYSQL_PID_DIR=\"/var/run/mysqld\"\nENV MYSQL_ROOT_PASSWORD=\"secret\"\nENV APACHE_ENVVARS=\"/etc/apache2/envvars\"\nENV APP_DIR=\"/var/www/html\"\n#  -------------------------------------------------------------------------------\n#   Install Packages\n#  -------------------------------------------------------------------------------\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl wget ca-certificates cron git supervisor apache2 php php-cli php-curl php-gd php-gmp php-intl php-mbstring php-mcrypt php-mysql php-sqlite3 php-xdebug php-xml libapache2-mod-php mysql-server mysql-client redis-server vim -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  -------------------------------------------------------------------------------\n#   Timezone Setting\n#  -------------------------------------------------------------------------------\nRUN echo $TZ | tee /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n#  -------------------------------------------------------------------------------\n#   Copy Settings\n#  -------------------------------------------------------------------------------\nRUN mkdir -p /var/redis /var/log/redis\nCOPY dockerfiles /\n#  -------------------------------------------------------------------------------\n#   Configure MySQL\n#  -------------------------------------------------------------------------------\nRUN sed -i \"s/user[\\t ]*=.*/user=root/g\" /etc/mysql/debian.cnf \\\n && sed -i \"s/password[\\t ]*=.*/password=/g\" /etc/mysql/debian.cnf\n#  -------------------------------------------------------------------------------\n#   Configure Apache\n#  -------------------------------------------------------------------------------\n#   @see https://github.com/docker-library/php/blob/e573f8f7fda5d7378bae9c6a936a298b850c4076/7.0/apache/Dockerfile#L38\nRUN sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" \"$APP_DIR\"; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done\nRUN a2dissite 000-default \\\n && a2ensite default \\\n && a2enmod rewrite deflate headers \\\n && service apache2 restart\n#  -------------------------------------------------------------------------------\n#   Install Cron Job\n#  -------------------------------------------------------------------------------\n#   앱 폴더를 마운트하므로 빌드할 때 .env 파일을 읽을 수 없습니다.\n#  RUN source \"$APP_DIR/.env\" \\\n#      && if [ \"$CRON_WORK\" = \"true\" ]; then crontab /root/crontab; fi;\nRUN crontab /root/crontab\n#  -------------------------------------------------------------------------------\n#   Run Environment\n#  -------------------------------------------------------------------------------\nVOLUME [\"$APP_DIR\", \"$MYSQL_DATA_DIR\"]\nEXPOSE 80/tcp 9001/tcp 3306/tcp 6379/tcp 1000/tcp\nWORKDIR \"$APP_DIR\"\nRUN /bin/bash /init_mysql.sh\nRUN /bin/bash /refresh_mysql_pid.sh\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"63ba79dbcb871c78fd3c4ba3a84cd3b2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ea121d3fc57a1f99849a497e7b8229b2c83e5dcf.dockerfile"}