{"seed":3977226392,"processedDockerfileHash":"8a68a9b84906e3fffb70a62684ead8ed","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.1-apache\nRUN apt-get update \\\n && apt-get install --no-install-recommends libfreetype6-dev=2.9.1-3+deb10u3 libjpeg62-turbo-dev=1:1.5.2-2+deb10u1 libmcrypt-dev=2.5.8-3.4 libpng-dev=1.6.36-6 libxslt-dev libicu-dev=63.1-6+deb10u3 mysql-client pv=1.6.6-1 vim=2:8.1.0875-5+deb10u4 bash-completion=1:2.8-6 openssh-server=1:7.9p1-10+deb10u2 ssl-cert=1.0.39 msmtp=1.8.3-1 sudo=1.8.27-1+deb10u5 dnsutils=1:9.11.5.P4+dfsg-5.1+deb10u8 iputils-ping=3:20180629-2+deb10u2 iputils-tracepath=3:20180629-2+deb10u2 host telnet=0.17-41.2 unzip=6.0-23+deb10u3 gnupg=2.2.12-1+deb10u2 -y \\\n && docker-php-ext-install -j$( nproc ;) iconv mcrypt soap sockets \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd bcmath pdo_mysql xsl intl zip\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.20.1-2+deb10u8 -y \\\n && apt-get clean all\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash\nRUN apt-get install --no-install-recommends nodejs=10.24.0~dfsg-1~deb10u3 -y\n#  Blackfire\nRUN version=$( php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\" ;) \\\n && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n && mkdir -p /tmp/blackfire \\\n && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \\\n && mv /tmp/blackfire/blackfire-*.so $( php -r \"echo ini_get('extension_dir');\" ;)/blackfire.so \\\n && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz\nRUN mkdir -p /tmp/blackfire \\\n && curl -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire \\\n && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n && rm -Rf /tmp/blackfire\n#  End blackfire\nENV _USER=\"magento\"\nENV _HOME_DIRECTORY=\"/home/${_USER}\"\nRUN useradd -m ${_USER} \\\n && echo \"${_USER}:${_USER}\" | chpasswd \\\n && chsh ${_USER} -s /bin/bash \\\n && adduser ${_USER} sudo\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN pecl install xdebug-2.5.5\nRUN echo \";zend_extension=xdebug.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_host=10.254.254.254\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_autostart=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.max_nesting_level=10000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.idekey=PHPSTORM\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#  RUN cd /tmp/ && curl -OL https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz && cd -\n#  RUN cd /tmp/ && tar xf ioncube_loaders_lin_x86-64.tar.gz && cd -\n#  RUN cp /tmp/ioncube/ioncube_loader_lin_7.0.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so\n#  RUN echo \"zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-ioncube.ini\nRUN pear install PHP_CodeSniffer\nRUN mkdir /usr/local/magento-ecg-code-sniffer\nRUN cd /usr/local/magento-ecg-code-sniffer/ \\\n && composer require magento-ecg/coding-standard\nRUN phpcs --config-set installed_paths /usr/local/magento-ecg-code-sniffer/vendor/magento-ecg/coding-standard\nRUN echo \"sendmail_path=/usr/bin/msmtp -t\" >> /usr/local/etc/php/conf.d/mailcatcher.ini\nRUN echo \"memory_limit=2G\" >> /usr/local/etc/php/conf.d/custom.ini\nRUN echo \"max_input_vars=10000\" >> /usr/local/etc/php/conf.d/custom.ini\nRUN echo \"account default\" >> /etc/msmtprc\nRUN echo \"host mailcatcher\" >> /etc/msmtprc\nRUN echo \"port 1025\" >> /etc/msmtprc\nRUN echo \"auto_from on\" >> /etc/msmtprc\n#  GIT\nCOPY ./etc/git/gitconfig ${_HOME_DIRECTORY}/.gitconfig\nCOPY ./etc/composer/auth.json /${_HOME_DIRECTORY}/.composer/auth.json\n#  SSH\nCOPY ./etc/ssh ${_HOME_DIRECTORY}/.ssh\nCOPY ./etc/ssh/magento2docker.pub ${_HOME_DIRECTORY}/.ssh/authorized_keys\nRUN chmod -R 700 ${_HOME_DIRECTORY}/.ssh\nRUN echo \" ServerAliveInterval 30\" >> /etc/ssh/ssh_config\nRUN echo \" TCPKeepAlive yes\" >> /etc/ssh/ssh_config\nCOPY ./etc/ssh /root/.ssh\nCOPY ./etc/ssh/magento2docker.pub /root/.ssh/authorized_keys\nRUN chmod -R 700 /root/.ssh\n#  END\nRUN echo \"Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,blowfish-cbc,aes128-cbc,3des-cbc,cast128-cbc,arcfour,aes192-cbc,aes256-cbc\" >> /etc/ssh/sshd_config\nCOPY ./misc/xdebug-php.sh /usr/local/bin/xdebug-php.sh\n#  APACHE\nRUN a2enmod ssl\nRUN a2ensite default-ssl.conf\nRUN a2enmod vhost_alias\nRUN a2enmod proxy\nRUN a2enmod rewrite\nRUN chown -R ${_USER}:${_USER} /var/www/html\nCOPY ./etc/apache/envvars /etc/apache2/envvars\n#  APACHE END\nRUN chown -R ${_USER}:${_USER} ${_HOME_DIRECTORY}\n#  USER SPECIFYC\nUSER magento\nRUN echo \"source /etc/bash_completion\" >> ${_HOME_DIRECTORY}/.bashrc\nRUN curl -sS https://accounts.magento.cloud/cli/installer | php\nUSER root\n#   Tune environment\nRUN echo \"Defaults timestamp_timeout=-1\" >> /etc/sudoers\n#   Hack to not cache https://github.com/docker/docker/issues/1996#issuecomment-185872769\nARG CACHEBUST=1\nCOPY ./misc/* /usr/local/bin/\nCOPY ./etc/apache /etc/apache2/sites-enabled/\nCOPY ./etc/fixtures /etc/fixtures\nCOPY ./etc/m2install/.m2install.conf* ${_HOME_DIRECTORY}/\nRUN curl -o /usr/local/bin/m2install.sh https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install.sh\nRUN curl -o /etc/bash_completion.d/m2install-bash-completion https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install-bash-completion\nRUN curl -o /usr/local/bin/n98-magerun2 https://files.magerun.net/n98-magerun2.phar\nRUN curl -o /etc/bash_completion.d/n98-magerun2.phar.bash https://raw.githubusercontent.com/netz98/n98-magerun2/master/res/autocompletion/bash/n98-magerun2.phar.bash\nRUN curl -o /usr/local/bin/m2-convert-for-composer https://raw.githubusercontent.com/isitnikov/m2-convert-patch-for-composer-install/master/convert-for-composer.php\nRUN curl -o /etc/bash_completion.d/magento2-bash-completion https://raw.githubusercontent.com/yvoronoy/magento2-bash-completion/master/magento2-bash-completion-enterprise\nRUN curl -L -o /tmp/teleport.tar.gz https://github.com/gravitational/teleport/releases/download/v1.3.2/teleport-v1.3.2-linux-amd64-bin.tar.gz\nRUN tar -xf /tmp/teleport.tar.gz -C /tmp/\nRUN make -C /tmp/teleport/\nRUN touch /root/.ssh/known_hosts\nRUN ssh-keygen -F github.com || ssh-keyscan github.com >> /root/.ssh/known_hosts\nRUN git ls-remote git@github.com:magento-sparta/ee-support-tools.git 2>&1 | if grep -q HEAD ; then git clone git@github.com:magento-sparta/ee-support-tools.git /usr/local/src/ee-support-tools ; else echo ; fi\nRUN if [ -d /usr/local/src/ee-support-tools ] ; then ln -s /usr/local/src/ee-support-tools/cloud-teleport/cloud-teleport /usr/local/bin/cloud-teleport ; else echo ; fi\nRUN chmod +x /usr/local/bin/*\nCMD service ssh start ; apache2-foreground\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.1-apache\nRUN apt-get update \\\n && apt-get install libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev libxslt-dev libicu-dev mysql-client pv vim bash-completion openssh-server ssl-cert msmtp sudo dnsutils iputils-ping iputils-tracepath host telnet unzip gnupg -y \\\n && docker-php-ext-install -j$( nproc ;) iconv mcrypt soap sockets \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd bcmath pdo_mysql xsl intl zip\nRUN apt-get update \\\n && apt-get install git -y \\\n && apt-get clean all\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash\nRUN apt-get install nodejs -y\n# Blackfire\nRUN version=$( php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\" ;) \\\n && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n && mkdir -p /tmp/blackfire \\\n && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \\\n && mv /tmp/blackfire/blackfire-*.so $( php -r \"echo ini_get('extension_dir');\" ;)/blackfire.so \\\n && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz\nRUN mkdir -p /tmp/blackfire \\\n && curl -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire \\\n && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n && rm -Rf /tmp/blackfire\n# End blackfire\nENV _USER=\"magento\"\nENV _HOME_DIRECTORY=\"/home/${_USER}\"\nRUN useradd -m ${_USER} \\\n && echo \"${_USER}:${_USER}\" | chpasswd \\\n && chsh ${_USER} -s /bin/bash \\\n && adduser ${_USER} sudo\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN pecl install xdebug-2.5.5\nRUN echo \";zend_extension=xdebug.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_host=10.254.254.254\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_autostart=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.max_nesting_level=10000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.idekey=PHPSTORM\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n# RUN cd /tmp/ && curl -OL https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz && cd -\n# RUN cd /tmp/ && tar xf ioncube_loaders_lin_x86-64.tar.gz && cd -\n# RUN cp /tmp/ioncube/ioncube_loader_lin_7.0.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so\n# RUN echo \"zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-ioncube.ini\nRUN pear install PHP_CodeSniffer\nRUN mkdir /usr/local/magento-ecg-code-sniffer\nRUN cd /usr/local/magento-ecg-code-sniffer/ \\\n && composer require magento-ecg/coding-standard\nRUN phpcs --config-set installed_paths /usr/local/magento-ecg-code-sniffer/vendor/magento-ecg/coding-standard\nRUN echo \"sendmail_path=/usr/bin/msmtp -t\" >> /usr/local/etc/php/conf.d/mailcatcher.ini\nRUN echo \"memory_limit=2G\" >> /usr/local/etc/php/conf.d/custom.ini\nRUN echo \"max_input_vars=10000\" >> /usr/local/etc/php/conf.d/custom.ini\nRUN echo \"account default\" >> /etc/msmtprc\nRUN echo \"host mailcatcher\" >> /etc/msmtprc\nRUN echo \"port 1025\" >> /etc/msmtprc\nRUN echo \"auto_from on\" >> /etc/msmtprc\n# GIT\nCOPY ./etc/git/gitconfig ${_HOME_DIRECTORY}/.gitconfig\nCOPY ./etc/composer/auth.json /${_HOME_DIRECTORY}/.composer/auth.json\n# SSH\nCOPY ./etc/ssh ${_HOME_DIRECTORY}/.ssh\nADD ./etc/ssh/magento2docker.pub ${_HOME_DIRECTORY}/.ssh/authorized_keys\nRUN chmod -R 700 ${_HOME_DIRECTORY}/.ssh\nRUN echo \" ServerAliveInterval 30\" >> /etc/ssh/ssh_config\nRUN echo \" TCPKeepAlive yes\" >> /etc/ssh/ssh_config\nCOPY ./etc/ssh /root/.ssh\nADD ./etc/ssh/magento2docker.pub /root/.ssh/authorized_keys\nRUN chmod -R 700 /root/.ssh\n# END\nRUN echo \"Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,blowfish-cbc,aes128-cbc,3des-cbc,cast128-cbc,arcfour,aes192-cbc,aes256-cbc\" >> /etc/ssh/sshd_config\nCOPY ./misc/xdebug-php.sh /usr/local/bin/xdebug-php.sh\n# APACHE\nRUN a2enmod ssl\nRUN a2ensite default-ssl.conf\nRUN a2enmod vhost_alias\nRUN a2enmod proxy\nRUN a2enmod rewrite\nRUN chown -R ${_USER}:${_USER} /var/www/html\nCOPY ./etc/apache/envvars /etc/apache2/envvars\n# APACHE END\nRUN chown -R ${_USER}:${_USER} ${_HOME_DIRECTORY}\n# USER SPECIFYC\nUSER magento\nRUN echo \"source /etc/bash_completion\" >> ${_HOME_DIRECTORY}/.bashrc\nRUN curl -sS https://accounts.magento.cloud/cli/installer | php\nUSER root\n#  Tune environment\nRUN echo \"Defaults timestamp_timeout=-1\" >> /etc/sudoers\n#  Hack to not cache https://github.com/docker/docker/issues/1996#issuecomment-185872769\nARG CACHEBUST=1\nCOPY ./misc/* /usr/local/bin/\nCOPY ./etc/apache /etc/apache2/sites-enabled/\nCOPY ./etc/fixtures /etc/fixtures\nCOPY ./etc/m2install/.m2install.conf* ${_HOME_DIRECTORY}/\nRUN curl -o /usr/local/bin/m2install.sh https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install.sh\nRUN curl -o /etc/bash_completion.d/m2install-bash-completion https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install-bash-completion\nRUN curl -o /usr/local/bin/n98-magerun2 https://files.magerun.net/n98-magerun2.phar\nRUN curl -o /etc/bash_completion.d/n98-magerun2.phar.bash https://raw.githubusercontent.com/netz98/n98-magerun2/master/res/autocompletion/bash/n98-magerun2.phar.bash\nRUN curl -o /usr/local/bin/m2-convert-for-composer https://raw.githubusercontent.com/isitnikov/m2-convert-patch-for-composer-install/master/convert-for-composer.php\nRUN curl -o /etc/bash_completion.d/magento2-bash-completion https://raw.githubusercontent.com/yvoronoy/magento2-bash-completion/master/magento2-bash-completion-enterprise\nRUN curl -L -o /tmp/teleport.tar.gz https://github.com/gravitational/teleport/releases/download/v1.3.2/teleport-v1.3.2-linux-amd64-bin.tar.gz\nRUN tar -xf /tmp/teleport.tar.gz -C /tmp/\nRUN make -C /tmp/teleport/\nRUN touch /root/.ssh/known_hosts\nRUN ssh-keygen -F github.com || ssh-keyscan github.com >> /root/.ssh/known_hosts\nRUN git ls-remote git@github.com:magento-sparta/ee-support-tools.git 2>&1 | if grep -q HEAD ; then git clone git@github.com:magento-sparta/ee-support-tools.git /usr/local/src/ee-support-tools ; else echo ; fi\nRUN if [ -d /usr/local/src/ee-support-tools ] ; then ln -s /usr/local/src/ee-support-tools/cloud-teleport/cloud-teleport /usr/local/bin/cloud-teleport ; else echo ; fi\nRUN chmod +x /usr/local/bin/*\nCMD service ssh start ; apache2-foreground\n","injectedSmells":[],"originalDockerfileHash":"28653443a675a7a89a5d7b25ed0fa898","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.1-apache\nRUN apt-get update \\\n && apt-get install libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev libxslt-dev libicu-dev mysql-client pv vim bash-completion openssh-server ssl-cert msmtp sudo dnsutils iputils-ping iputils-tracepath host telnet unzip gnupg -y \\\n && docker-php-ext-install -j$( nproc ;) iconv mcrypt soap sockets \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd bcmath pdo_mysql xsl intl zip\nRUN apt-get update \\\n && apt-get install git -y \\\n && apt-get clean all\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash\nRUN apt-get install nodejs -y\n#  Blackfire\nRUN version=$( php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\" ;) \\\n && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n && mkdir -p /tmp/blackfire \\\n && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \\\n && mv /tmp/blackfire/blackfire-*.so $( php -r \"echo ini_get('extension_dir');\" ;)/blackfire.so \\\n && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz\nRUN mkdir -p /tmp/blackfire \\\n && curl -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire \\\n && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n && rm -Rf /tmp/blackfire\n#  End blackfire\nENV _USER=\"magento\"\nENV _HOME_DIRECTORY=\"/home/${_USER}\"\nRUN useradd -m ${_USER} \\\n && echo \"${_USER}:${_USER}\" | chpasswd \\\n && chsh ${_USER} -s /bin/bash \\\n && adduser ${_USER} sudo\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN pecl install xdebug-2.5.5\nRUN echo \";zend_extension=xdebug.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_host=10.254.254.254\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_autostart=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.max_nesting_level=10000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.idekey=PHPSTORM\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#  RUN cd /tmp/ && curl -OL https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz && cd -\n#  RUN cd /tmp/ && tar xf ioncube_loaders_lin_x86-64.tar.gz && cd -\n#  RUN cp /tmp/ioncube/ioncube_loader_lin_7.0.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so\n#  RUN echo \"zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-ioncube.ini\nRUN pear install PHP_CodeSniffer\nRUN mkdir /usr/local/magento-ecg-code-sniffer\nRUN cd /usr/local/magento-ecg-code-sniffer/ \\\n && composer require magento-ecg/coding-standard\nRUN phpcs --config-set installed_paths /usr/local/magento-ecg-code-sniffer/vendor/magento-ecg/coding-standard\nRUN echo \"sendmail_path=/usr/bin/msmtp -t\" >> /usr/local/etc/php/conf.d/mailcatcher.ini\nRUN echo \"memory_limit=2G\" >> /usr/local/etc/php/conf.d/custom.ini\nRUN echo \"max_input_vars=10000\" >> /usr/local/etc/php/conf.d/custom.ini\nRUN echo \"account default\" >> /etc/msmtprc\nRUN echo \"host mailcatcher\" >> /etc/msmtprc\nRUN echo \"port 1025\" >> /etc/msmtprc\nRUN echo \"auto_from on\" >> /etc/msmtprc\n#  GIT\nCOPY ./etc/git/gitconfig ${_HOME_DIRECTORY}/.gitconfig\nCOPY ./etc/composer/auth.json /${_HOME_DIRECTORY}/.composer/auth.json\n#  SSH\nCOPY ./etc/ssh ${_HOME_DIRECTORY}/.ssh\nADD ./etc/ssh/magento2docker.pub ${_HOME_DIRECTORY}/.ssh/authorized_keys\nRUN chmod -R 700 ${_HOME_DIRECTORY}/.ssh\nRUN echo \" ServerAliveInterval 30\" >> /etc/ssh/ssh_config\nRUN echo \" TCPKeepAlive yes\" >> /etc/ssh/ssh_config\nCOPY ./etc/ssh /root/.ssh\nADD ./etc/ssh/magento2docker.pub /root/.ssh/authorized_keys\nRUN chmod -R 700 /root/.ssh\n#  END\nRUN echo \"Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,blowfish-cbc,aes128-cbc,3des-cbc,cast128-cbc,arcfour,aes192-cbc,aes256-cbc\" >> /etc/ssh/sshd_config\nCOPY ./misc/xdebug-php.sh /usr/local/bin/xdebug-php.sh\n#  APACHE\nRUN a2enmod ssl\nRUN a2ensite default-ssl.conf\nRUN a2enmod vhost_alias\nRUN a2enmod proxy\nRUN a2enmod rewrite\nRUN chown -R ${_USER}:${_USER} /var/www/html\nCOPY ./etc/apache/envvars /etc/apache2/envvars\n#  APACHE END\nRUN chown -R ${_USER}:${_USER} ${_HOME_DIRECTORY}\n#  USER SPECIFYC\nUSER magento\nRUN echo \"source /etc/bash_completion\" >> ${_HOME_DIRECTORY}/.bashrc\nRUN curl -sS https://accounts.magento.cloud/cli/installer | php\nUSER root\n#   Tune environment\nRUN echo \"Defaults timestamp_timeout=-1\" >> /etc/sudoers\n#   Hack to not cache https://github.com/docker/docker/issues/1996#issuecomment-185872769\nARG CACHEBUST=1\nCOPY ./misc/* /usr/local/bin/\nCOPY ./etc/apache /etc/apache2/sites-enabled/\nCOPY ./etc/fixtures /etc/fixtures\nCOPY ./etc/m2install/.m2install.conf* ${_HOME_DIRECTORY}/\nRUN curl -o /usr/local/bin/m2install.sh https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install.sh\nRUN curl -o /etc/bash_completion.d/m2install-bash-completion https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install-bash-completion\nRUN curl -o /usr/local/bin/n98-magerun2 https://files.magerun.net/n98-magerun2.phar\nRUN curl -o /etc/bash_completion.d/n98-magerun2.phar.bash https://raw.githubusercontent.com/netz98/n98-magerun2/master/res/autocompletion/bash/n98-magerun2.phar.bash\nRUN curl -o /usr/local/bin/m2-convert-for-composer https://raw.githubusercontent.com/isitnikov/m2-convert-patch-for-composer-install/master/convert-for-composer.php\nRUN curl -o /etc/bash_completion.d/magento2-bash-completion https://raw.githubusercontent.com/yvoronoy/magento2-bash-completion/master/magento2-bash-completion-enterprise\nRUN curl -L -o /tmp/teleport.tar.gz https://github.com/gravitational/teleport/releases/download/v1.3.2/teleport-v1.3.2-linux-amd64-bin.tar.gz\nRUN tar -xf /tmp/teleport.tar.gz -C /tmp/\nRUN make -C /tmp/teleport/\nRUN touch /root/.ssh/known_hosts\nRUN ssh-keygen -F github.com || ssh-keyscan github.com >> /root/.ssh/known_hosts\nRUN git ls-remote git@github.com:magento-sparta/ee-support-tools.git 2>&1 | if grep -q HEAD ; then git clone git@github.com:magento-sparta/ee-support-tools.git /usr/local/src/ee-support-tools ; else echo ; fi\nRUN if [ -d /usr/local/src/ee-support-tools ] ; then ln -s /usr/local/src/ee-support-tools/cloud-teleport/cloud-teleport /usr/local/bin/cloud-teleport ; else echo ; fi\nRUN chmod +x /usr/local/bin/*\nCMD service ssh start ; apache2-foreground\n","originalDockerfileUglifiedHash":"d9917d607cf019560fae2a1a331ddffd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/592dc6cbf52d676388bd69674b708ca733d48207.dockerfile"}