{"seed":3718051125,"processedDockerfileHash":"32f1f1794e83b3453f4155b2438998ee","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck"],"processedDockerfile":"#   Read the Docs - Environment base\nFROM ubuntu:18.04\nLABEL mantainer=\"Read the Docs <support@readthedocs.com>\"\nLABEL version=\"5.0.0\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV APPDIR=\"/app\"\nENV LANG=\"C.UTF-8\"\n#   Versions, and expose labels for external usage\nENV PYTHON_VERSION_27=\"2.7.16\"\nENV PYTHON_VERSION_35=\"3.5.7\"\nENV PYTHON_VERSION_36=\"3.6.8\"\nENV PYTHON_VERSION_37=\"3.7.3\"\nENV PYPY_VERSION_35=\"pypy3.5-7.0.0\"\nENV CONDA_VERSION=\"4.6.14\"\nLABEL python.version_27=\"$PYTHON_VERSION_27\"\nLABEL python.version_35=\"$PYTHON_VERSION_35\"\nLABEL python.version_36=\"$PYTHON_VERSION_36\"\nLABEL python.version_37=\"$PYTHON_VERSION_37\"\nLABEL pypy.version_35=\"$PYPY_VERSION_35\"\nLABEL conda.version=\"$CONDA_VERSION\"\n#   System dependencies\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.24.32.20 vim=2:8.0.1453-1ubuntu1.11 -y )\n#   Install requirements\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=12.4ubuntu1 bzr=2.7.0+bzr6622-10 curl=7.58.0-2ubuntu3.24 doxygen=1.8.13-10 g++=4:7.4.0-1ubuntu2.3 git-core graphviz-dev libbz2-dev=1.0.6-8.1ubuntu0.2 libcairo2-dev=1.15.10-2ubuntu0.1 libenchant1c2a=1.6.0-11.1 libevent-dev=2.1.8-stable-4build1 libffi-dev=3.2.1-8 libfreetype6=2.8.1-2ubuntu2.2 libfreetype6-dev=2.8.1-2ubuntu2.2 libgraphviz-dev=2.40.1-2 libjpeg8-dev=8c-2ubuntu8 libjpeg-dev=8c-2ubuntu8 liblcms2-dev=2.9-1ubuntu0.1 libmysqlclient-dev=5.7.41-0ubuntu0.18.04.1 libpq-dev=10.23-0ubuntu0.18.04.1 libreadline-dev=7.0-3 libsqlite3-dev=3.22.0-1ubuntu0.7 libtiff5-dev=4.0.9-5ubuntu0.10 libwebp-dev=0.6.1-2ubuntu0.18.04.1 libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 libxslt1-dev=1.1.29-5ubuntu0.3 libxslt-dev mercurial=4.5.3-1ubuntu2.2 pandoc=1.19.2.4~dfsg-1build4 pkg-config=0.29.1-0ubuntu2 postgresql-client=10+190ubuntu0.1 subversion=1.9.7-4ubuntu1.1 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 -y )\n#   pyenv extra requirements\n#   https://github.com/pyenv/pyenv/wiki/Common-build-problems\nRUN (apt-get update ;apt-get install --no-install-recommends liblzma-dev=5.2.2-1.3ubuntu0.1 libncurses5-dev=6.1-1ubuntu1.18.04 libncursesw5-dev=6.1-1ubuntu1.18.04 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 llvm=1:6.0-41~exp5~ubuntu1 make=4.1-9.1ubuntu1 python-openssl=17.5.0-1ubuntu1 tk-dev=8.6.0+9 wget=1.19.4-1ubuntu2.2 xz-utils=5.2.2-1.3ubuntu0.1 -y )\n#   LaTeX -- split to reduce image layer size\nRUN (apt-get update ;apt-get install --no-install-recommends texlive-fonts-extra=2017.20180305-2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends texlive-latex-extra-doc=2017.20180305-2 texlive-pictures-doc=2017.20180305-1 texlive-publishers-doc=2017.20180305-2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends texlive-lang-english=2017.20180305-1 texlive-lang-japanese=2017.20180305-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends texlive-full=2017.20180305-1 -y )\n#   lmodern: extra fonts\n#   https://github.com/rtfd/readthedocs.org/issues/5494\n#\n#   xindy: is useful to generate non-ascii indexes\n#   https://github.com/rtfd/readthedocs.org/issues/4454\nRUN (apt-get update ;apt-get install --no-install-recommends fonts-symbola=2.60-1 lmodern=2.004.5-3 latex-cjk-chinese-arphic-bkai00mp=1.23 latex-cjk-chinese-arphic-gbsn00lp=1.23 latex-cjk-chinese-arphic-gkai00mp=1.23 texlive-fonts-recommended=2017.20180305-1 xindy=2.5.1.20160104-4build1 -y )\n#   plantuml: is to support sphinxcontrib-plantuml\n#   https://pypi.org/project/sphinxcontrib-plantuml/\n#\n#   imagemagick: is to support sphinx.ext.imgconverter\n#   http://www.sphinx-doc.org/en/master/usage/extensions/imgconverter.html\n#\n#   rsvg-convert: is for SVG -> PDF conversion\n#   using Sphinx extension sphinxcontrib.rsvgconverter, see\n#   https://github.com/missinglinkelectronics/sphinxcontrib-svg2pdfconverter\n#\n#   swig: is required for different purposes\n#   https://github.com/rtfd/readthedocs-docker-images/issues/15\nRUN (apt-get update ;apt-get install --no-install-recommends imagemagick=8:6.9.7.4+dfsg-16ubuntu6.15 librsvg2-bin=2.40.20-2ubuntu0.2 plantuml=1:1.2017.15-1 swig=3.0.12-1 -y )\n#   Install Python tools/libs\nRUN (apt-get update ;apt-get install --no-install-recommends python-pip=9.0.1-2.3~ubuntu1.18.04.8 -y ) \\\n && pip install auxlib==0.0.43 virtualenv==20.21.0 -U\n#   sphinx-js dependencies: jsdoc and typedoc (TypeScript support)\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=8.10.0~dfsg-2ubuntu0.4 npm=3.5.2-0ubuntu4 -y ) \\\n && npm install jsdoc@4.0.2 typedoc@0.24.2 --global\n#   UID and GID from readthedocs/user\nRUN groupadd --gid 205 docs\nRUN useradd -m --uid 1005 --gid 205 docs\nUSER docs\nWORKDIR /home/docs\n#   Install Conda\nRUN curl -O https://repo.continuum.io/miniconda/Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh\nRUN bash Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh -b -p /home/docs/.conda/\nENV PATH=\"$PATH:/home/docs/.conda/bin\"\nRUN rm -f Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh\n#   Install pyenv\nRUN wget https://github.com/pyenv/pyenv/archive/master.zip\nRUN unzip master.zip \\\n && rm -f master.zip \\\n && mv pyenv-master ~docs/.pyenv\nENV PYENV_ROOT=\"/home/docs/.pyenv\"\nENV PATH=\"/home/docs/.pyenv/shims:$PATH:/home/docs/.pyenv/bin\"\n#   Install supported Python versions\nRUN pyenv install $PYTHON_VERSION_27 \\\n && pyenv install $PYTHON_VERSION_37 \\\n && pyenv install $PYTHON_VERSION_35 \\\n && pyenv install $PYTHON_VERSION_36 \\\n && pyenv install $PYPY_VERSION_35 \\\n && pyenv global $PYTHON_VERSION_27 $PYTHON_VERSION_37 $PYTHON_VERSION_36 $PYTHON_VERSION_35 $PYPY_VERSION_35\nWORKDIR /tmp\nRUN pyenv local $PYTHON_VERSION_27 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYTHON_VERSION_37 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYTHON_VERSION_36 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYTHON_VERSION_35 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYPY_VERSION_35 \\\n && pyenv exec python -m ensurepip \\\n && pyenv exec pip3 install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir virtualenv\nWORKDIR /\nCMD [\"/bin/bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Read the Docs - Environment base\nFROM ubuntu:18.04\nLABEL mantainer=\"Read the Docs <support@readthedocs.com>\"\nLABEL version=\"5.0.0\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV APPDIR=\"/app\"\nENV LANG=\"C.UTF-8\"\n#  Versions, and expose labels for external usage\nENV PYTHON_VERSION_27=\"2.7.16\"\nENV PYTHON_VERSION_35=\"3.5.7\"\nENV PYTHON_VERSION_36=\"3.6.8\"\nENV PYTHON_VERSION_37=\"3.7.3\"\nENV PYPY_VERSION_35=\"pypy3.5-7.0.0\"\nENV CONDA_VERSION=\"4.6.14\"\nLABEL python.version_27=\"$PYTHON_VERSION_27\"\nLABEL python.version_35=\"$PYTHON_VERSION_35\"\nLABEL python.version_36=\"$PYTHON_VERSION_36\"\nLABEL python.version_37=\"$PYTHON_VERSION_37\"\nLABEL pypy.version_35=\"$PYPY_VERSION_35\"\nLABEL conda.version=\"$CONDA_VERSION\"\n#  System dependencies\nRUN apt-get update -y\nRUN apt-get install software-properties-common vim -y\n#  Install requirements\nRUN apt-get install build-essential bzr curl doxygen g++ git-core graphviz-dev libbz2-dev libcairo2-dev libenchant1c2a libevent-dev libffi-dev libfreetype6 libfreetype6-dev libgraphviz-dev libjpeg8-dev libjpeg-dev liblcms2-dev libmysqlclient-dev libpq-dev libreadline-dev libsqlite3-dev libtiff5-dev libwebp-dev libxml2-dev libxslt1-dev libxslt-dev mercurial pandoc pkg-config postgresql-client subversion zlib1g-dev -y\n#  pyenv extra requirements\n#  https://github.com/pyenv/pyenv/wiki/Common-build-problems\nRUN apt-get install liblzma-dev libncurses5-dev libncursesw5-dev libssl-dev llvm make python-openssl tk-dev wget xz-utils -y\n#  LaTeX -- split to reduce image layer size\nRUN apt-get install texlive-fonts-extra -y\nRUN apt-get install texlive-latex-extra-doc texlive-pictures-doc texlive-publishers-doc -y\nRUN apt-get install texlive-lang-english texlive-lang-japanese -y\nRUN apt-get install texlive-full -y\n#  lmodern: extra fonts\n#  https://github.com/rtfd/readthedocs.org/issues/5494\n#\n#  xindy: is useful to generate non-ascii indexes\n#  https://github.com/rtfd/readthedocs.org/issues/4454\nRUN apt-get install fonts-symbola lmodern latex-cjk-chinese-arphic-bkai00mp latex-cjk-chinese-arphic-gbsn00lp latex-cjk-chinese-arphic-gkai00mp texlive-fonts-recommended xindy -y\n#  plantuml: is to support sphinxcontrib-plantuml\n#  https://pypi.org/project/sphinxcontrib-plantuml/\n#\n#  imagemagick: is to support sphinx.ext.imgconverter\n#  http://www.sphinx-doc.org/en/master/usage/extensions/imgconverter.html\n#\n#  rsvg-convert: is for SVG -> PDF conversion\n#  using Sphinx extension sphinxcontrib.rsvgconverter, see\n#  https://github.com/missinglinkelectronics/sphinxcontrib-svg2pdfconverter\n#\n#  swig: is required for different purposes\n#  https://github.com/rtfd/readthedocs-docker-images/issues/15\nRUN apt-get install imagemagick librsvg2-bin plantuml swig -y\n#  Install Python tools/libs\nRUN apt-get install python-pip -y \\\n && pip install auxlib virtualenv -U\n#  sphinx-js dependencies: jsdoc and typedoc (TypeScript support)\nRUN apt-get install nodejs npm -y \\\n && npm install jsdoc typedoc --global\n#  UID and GID from readthedocs/user\nRUN groupadd --gid 205 docs\nRUN useradd -m --uid 1005 --gid 205 docs\nUSER docs\nWORKDIR /home/docs\n#  Install Conda\nRUN curl -O https://repo.continuum.io/miniconda/Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh\nRUN bash Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh -b -p /home/docs/.conda/\nENV PATH=\"$PATH:/home/docs/.conda/bin\"\nRUN rm -f Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh\n#  Install pyenv\nRUN wget https://github.com/pyenv/pyenv/archive/master.zip\nRUN unzip master.zip \\\n && rm -f master.zip \\\n && mv pyenv-master ~docs/.pyenv\nENV PYENV_ROOT=\"/home/docs/.pyenv\"\nENV PATH=\"/home/docs/.pyenv/shims:$PATH:/home/docs/.pyenv/bin\"\n#  Install supported Python versions\nRUN pyenv install $PYTHON_VERSION_27 \\\n && pyenv install $PYTHON_VERSION_37 \\\n && pyenv install $PYTHON_VERSION_35 \\\n && pyenv install $PYTHON_VERSION_36 \\\n && pyenv install $PYPY_VERSION_35 \\\n && pyenv global $PYTHON_VERSION_27 $PYTHON_VERSION_37 $PYTHON_VERSION_36 $PYTHON_VERSION_35 $PYPY_VERSION_35\nWORKDIR /tmp\nRUN pyenv local $PYTHON_VERSION_27 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYTHON_VERSION_37 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYTHON_VERSION_36 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYTHON_VERSION_35 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYPY_VERSION_35 \\\n && pyenv exec python -m ensurepip \\\n && pyenv exec pip3 install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir virtualenv\nWORKDIR /\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"98c9c23ac548dc0d4a0fc846dd9cf535","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Read the Docs - Environment base\nFROM ubuntu:18.04\nLABEL mantainer=\"Read the Docs <support@readthedocs.com>\"\nLABEL version=\"5.0.0\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV APPDIR=\"/app\"\nENV LANG=\"C.UTF-8\"\n#   Versions, and expose labels for external usage\nENV PYTHON_VERSION_27=\"2.7.16\"\nENV PYTHON_VERSION_35=\"3.5.7\"\nENV PYTHON_VERSION_36=\"3.6.8\"\nENV PYTHON_VERSION_37=\"3.7.3\"\nENV PYPY_VERSION_35=\"pypy3.5-7.0.0\"\nENV CONDA_VERSION=\"4.6.14\"\nLABEL python.version_27=\"$PYTHON_VERSION_27\"\nLABEL python.version_35=\"$PYTHON_VERSION_35\"\nLABEL python.version_36=\"$PYTHON_VERSION_36\"\nLABEL python.version_37=\"$PYTHON_VERSION_37\"\nLABEL pypy.version_35=\"$PYPY_VERSION_35\"\nLABEL conda.version=\"$CONDA_VERSION\"\n#   System dependencies\nRUN apt-get update -y\nRUN apt-get install software-properties-common vim -y\n#   Install requirements\nRUN apt-get install build-essential bzr curl doxygen g++ git-core graphviz-dev libbz2-dev libcairo2-dev libenchant1c2a libevent-dev libffi-dev libfreetype6 libfreetype6-dev libgraphviz-dev libjpeg8-dev libjpeg-dev liblcms2-dev libmysqlclient-dev libpq-dev libreadline-dev libsqlite3-dev libtiff5-dev libwebp-dev libxml2-dev libxslt1-dev libxslt-dev mercurial pandoc pkg-config postgresql-client subversion zlib1g-dev -y\n#   pyenv extra requirements\n#   https://github.com/pyenv/pyenv/wiki/Common-build-problems\nRUN apt-get install liblzma-dev libncurses5-dev libncursesw5-dev libssl-dev llvm make python-openssl tk-dev wget xz-utils -y\n#   LaTeX -- split to reduce image layer size\nRUN apt-get install texlive-fonts-extra -y\nRUN apt-get install texlive-latex-extra-doc texlive-pictures-doc texlive-publishers-doc -y\nRUN apt-get install texlive-lang-english texlive-lang-japanese -y\nRUN apt-get install texlive-full -y\n#   lmodern: extra fonts\n#   https://github.com/rtfd/readthedocs.org/issues/5494\n#\n#   xindy: is useful to generate non-ascii indexes\n#   https://github.com/rtfd/readthedocs.org/issues/4454\nRUN apt-get install fonts-symbola lmodern latex-cjk-chinese-arphic-bkai00mp latex-cjk-chinese-arphic-gbsn00lp latex-cjk-chinese-arphic-gkai00mp texlive-fonts-recommended xindy -y\n#   plantuml: is to support sphinxcontrib-plantuml\n#   https://pypi.org/project/sphinxcontrib-plantuml/\n#\n#   imagemagick: is to support sphinx.ext.imgconverter\n#   http://www.sphinx-doc.org/en/master/usage/extensions/imgconverter.html\n#\n#   rsvg-convert: is for SVG -> PDF conversion\n#   using Sphinx extension sphinxcontrib.rsvgconverter, see\n#   https://github.com/missinglinkelectronics/sphinxcontrib-svg2pdfconverter\n#\n#   swig: is required for different purposes\n#   https://github.com/rtfd/readthedocs-docker-images/issues/15\nRUN apt-get install imagemagick librsvg2-bin plantuml swig -y\n#   Install Python tools/libs\nRUN apt-get install python-pip -y \\\n && pip install auxlib virtualenv -U\n#   sphinx-js dependencies: jsdoc and typedoc (TypeScript support)\nRUN apt-get install nodejs npm -y \\\n && npm install jsdoc typedoc --global\n#   UID and GID from readthedocs/user\nRUN groupadd --gid 205 docs\nRUN useradd -m --uid 1005 --gid 205 docs\nUSER docs\nWORKDIR /home/docs\n#   Install Conda\nRUN curl -O https://repo.continuum.io/miniconda/Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh\nRUN bash Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh -b -p /home/docs/.conda/\nENV PATH=\"$PATH:/home/docs/.conda/bin\"\nRUN rm -f Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh\n#   Install pyenv\nRUN wget https://github.com/pyenv/pyenv/archive/master.zip\nRUN unzip master.zip \\\n && rm -f master.zip \\\n && mv pyenv-master ~docs/.pyenv\nENV PYENV_ROOT=\"/home/docs/.pyenv\"\nENV PATH=\"/home/docs/.pyenv/shims:$PATH:/home/docs/.pyenv/bin\"\n#   Install supported Python versions\nRUN pyenv install $PYTHON_VERSION_27 \\\n && pyenv install $PYTHON_VERSION_37 \\\n && pyenv install $PYTHON_VERSION_35 \\\n && pyenv install $PYTHON_VERSION_36 \\\n && pyenv install $PYPY_VERSION_35 \\\n && pyenv global $PYTHON_VERSION_27 $PYTHON_VERSION_37 $PYTHON_VERSION_36 $PYTHON_VERSION_35 $PYPY_VERSION_35\nWORKDIR /tmp\nRUN pyenv local $PYTHON_VERSION_27 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYTHON_VERSION_37 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYTHON_VERSION_36 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYTHON_VERSION_35 \\\n && pyenv exec pip install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy \\\n && pyenv exec pip install --no-cache-dir pandas matplotlib virtualenv\nRUN pyenv local $PYPY_VERSION_35 \\\n && pyenv exec python -m ensurepip \\\n && pyenv exec pip3 install --no-cache-dir -U pip \\\n && pyenv exec pip install --no-cache-dir -U setuptools \\\n && pyenv exec pip install --no-cache-dir virtualenv\nWORKDIR /\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"47b323371b9a8ebd2d90e4c9bd7f5c78","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9839d65657f843231842d25855b854244dc2d375.dockerfile"}