{"seed":2877508287,"processedDockerfileHash":"a5b2f2f87c26663b126c06088bc0a8c6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:18.04\nLABEL authors=\"Vaclav Petras,Markus Neteler\"\nLABEL maintainer=\"wenzeslaus@gmail.com,neteler@osgeo.org\"\n#   system environment\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   data directory - not using the base images volume because then the permissions cannot be adapted\nENV DATA_DIR=\"/data\"\n#   GRASS GIS compile dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.4ubuntu1 libblas-dev=3.7.1-4ubuntu1 libbz2-dev=1.0.6-8.1ubuntu0.2 libcairo2-dev=1.15.10-2ubuntu0.1 libfftw3-dev=3.3.7-1 libfreetype6-dev=2.8.1-2ubuntu2.2 libgdal-dev=2.2.3+dfsg-2 libgeos-dev=3.6.2-1build2 libglu1-mesa-dev=9.0.0-2.1build1 libgsl0-dev libjpeg-dev=8c-2ubuntu8 liblapack-dev=3.7.1-4ubuntu1 libncurses5-dev=6.1-1ubuntu1.18.04 libnetcdf-dev=1:4.6.0-2build1 libopenjp2-7=2.3.0-2+deb10u2build0.18.04.1 libopenjp2-7-dev=2.3.0-2+deb10u2build0.18.04.1 libpdal-dev=1.6.0-1build2 pdal=1.6.0-1build2 libpdal-plugin-python=1.6.0-1build2 libpng-dev=1.6.34-1ubuntu0.18.04.2 libpq-dev=10.23-0ubuntu0.18.04.1 libproj-dev=4.9.3-2 libreadline-dev=7.0-3 libsqlite3-dev=3.22.0-1ubuntu0.7 libtiff-dev=4.0.9-5ubuntu0.10 libxmu-dev=2:1.1.2-2 libzstd-dev=1.3.3+dfsg-2ubuntu1.2 bison=2:3.0.4.dfsg-1build1 flex=2.6.4-6 g++=4:7.4.0-1ubuntu2.3 gettext=0.19.8.1-6ubuntu0.3 gdal-bin=2.2.3+dfsg-2 libfftw3-bin=3.3.7-1 make=4.1-9.1ubuntu1 ncurses-bin=6.1-1ubuntu1.18.04 netcdf-bin=1:4.6.0-2build1 proj-bin=4.9.3-2 proj-data=4.9.3-2 python=2.7.15~rc1-1 python-dev=2.7.15~rc1-1 python-numpy=1:1.13.3-2ubuntu1 python-pil=5.1.0-1ubuntu0.8 python-ply=3.11-1 python-six=1.11.0-2 sqlite3=3.22.0-1ubuntu0.7 subversion=1.9.7-4ubuntu1.1 unixodbc-dev=2.3.4-1.1ubuntu3 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 -y --no-install-suggests \\\n && apt-get autoremove \\\n && apt-get clean \\\n && mkdir -p $DATA_DIR\nRUN echo LANG=\"en_US.UTF-8\" > /etc/default/locale\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN mkdir /code\nRUN mkdir /code/grass\n#   add repository files to the image\nCOPY . /code/grass\nWORKDIR /code/grass\n#   Set gcc/g++ environmental variables for GRASS GIS compilation, without debug symbols\nENV MYCFLAGS=\"\\\"-O2 -std=gnu99 -m64\\\"\"\nENV MYLDFLAGS=\"\\\"-s\\\"\"\n#   CXX stuff:\nENV LD_LIBRARY_PATH=\"\\\"/usr/local/lib\\\"\"\nENV LDFLAGS=\"\\\"$MYLDFLAGS\\\"\"\nENV CFLAGS=\"\\\"$MYCFLAGS\\\"\"\nENV CXXFLAGS=\"\\\"$MYCXXFLAGS\\\"\"\n#   Configure, compile and install GRASS GIS\nENV NUMTHREADS=\"2\"\nRUN ./configure --enable-largefile --with-cxx --with-nls --with-readline --with-sqlite --with-bzlib --with-zstd --with-cairo --with-cairo-ldflags=-lfontconfig --with-freetype --with-freetype-includes=\"/usr/include/freetype2/\" --with-fftw --with-netcdf --with-pdal --with-proj --with-proj-share=/usr/share/proj --with-geos=/usr/bin/geos-config --with-postgres --with-postgres-includes=\"/usr/include/postgresql\" --with-opengl-libs=/usr/include/GL \\\n && make -j $NUMTHREADS \\\n && make install \\\n && ldconfig\n#   enable simple grass command regardless of version number\nRUN ln -s /usr/local/bin/grass* /usr/local/bin/grass\n#   Reduce the image size\nRUN apt-get autoremove -y\nRUN apt-get clean -y\n#   set SHELL var to avoid /bin/sh fallback in interactive GRASS GIS sessions in docker\nENV SHELL=\"/bin/bash\"\n#   Fix permissions\nRUN chmod -R a+rwx $DATA_DIR\n#   create a user\nRUN useradd -m -U grass\n#   declare data volume late so permissions apply\nVOLUME $DATA_DIR\nWORKDIR $DATA_DIR\n#   Further reduce the docker image size \nRUN rm -rf /code/grass\n#   switch the user\nUSER grass\nCMD [\"/usr/local/bin/grass\", \"--version\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nLABEL authors=\"Vaclav Petras,Markus Neteler\"\nLABEL maintainer=\"wenzeslaus@gmail.com,neteler@osgeo.org\"\n#  system environment\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  data directory - not using the base images volume because then the permissions cannot be adapted\nENV DATA_DIR=\"/data\"\n#  GRASS GIS compile dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential libblas-dev libbz2-dev libcairo2-dev libfftw3-dev libfreetype6-dev libgdal-dev libgeos-dev libglu1-mesa-dev libgsl0-dev libjpeg-dev liblapack-dev libncurses5-dev libnetcdf-dev libopenjp2-7 libopenjp2-7-dev libpdal-dev pdal libpdal-plugin-python libpng-dev libpq-dev libproj-dev libreadline-dev libsqlite3-dev libtiff-dev libxmu-dev libzstd-dev bison flex g++ gettext gdal-bin libfftw3-bin make ncurses-bin netcdf-bin proj-bin proj-data python python-dev python-numpy python-pil python-ply python-six sqlite3 subversion unixodbc-dev zlib1g-dev -y --no-install-suggests \\\n && apt-get autoremove \\\n && apt-get clean \\\n && mkdir -p $DATA_DIR\nRUN echo LANG=\"en_US.UTF-8\" > /etc/default/locale\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN mkdir /code\nRUN mkdir /code/grass\n#  add repository files to the image\nCOPY . /code/grass\nWORKDIR /code/grass\n#  Set gcc/g++ environmental variables for GRASS GIS compilation, without debug symbols\nENV MYCFLAGS=\"\\\"-O2 -std=gnu99 -m64\\\"\"\nENV MYLDFLAGS=\"\\\"-s\\\"\"\n#  CXX stuff:\nENV LD_LIBRARY_PATH=\"\\\"/usr/local/lib\\\"\"\nENV LDFLAGS=\"\\\"$MYLDFLAGS\\\"\"\nENV CFLAGS=\"\\\"$MYCFLAGS\\\"\"\nENV CXXFLAGS=\"\\\"$MYCXXFLAGS\\\"\"\n#  Configure, compile and install GRASS GIS\nENV NUMTHREADS=\"2\"\nRUN ./configure --enable-largefile --with-cxx --with-nls --with-readline --with-sqlite --with-bzlib --with-zstd --with-cairo --with-cairo-ldflags=-lfontconfig --with-freetype --with-freetype-includes=\"/usr/include/freetype2/\" --with-fftw --with-netcdf --with-pdal --with-proj --with-proj-share=/usr/share/proj --with-geos=/usr/bin/geos-config --with-postgres --with-postgres-includes=\"/usr/include/postgresql\" --with-opengl-libs=/usr/include/GL \\\n && make -j $NUMTHREADS \\\n && make install \\\n && ldconfig\n#  enable simple grass command regardless of version number\nRUN ln -s /usr/local/bin/grass* /usr/local/bin/grass\n#  Reduce the image size\nRUN apt-get autoremove -y\nRUN apt-get clean -y\n#  set SHELL var to avoid /bin/sh fallback in interactive GRASS GIS sessions in docker\nENV SHELL=\"/bin/bash\"\n#  Fix permissions\nRUN chmod -R a+rwx $DATA_DIR\n#  create a user\nRUN useradd -m -U grass\n#  declare data volume late so permissions apply\nVOLUME $DATA_DIR\nWORKDIR $DATA_DIR\n#  Further reduce the docker image size \nRUN rm -rf /code/grass\n#  switch the user\nUSER grass\nCMD [\"/usr/local/bin/grass\", \"--version\"]\n","injectedSmells":[],"originalDockerfileHash":"7319a3253d27cbf7b50fb444ab834abf","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nLABEL authors=\"Vaclav Petras,Markus Neteler\"\nLABEL maintainer=\"wenzeslaus@gmail.com,neteler@osgeo.org\"\n#   system environment\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   data directory - not using the base images volume because then the permissions cannot be adapted\nENV DATA_DIR=\"/data\"\n#   GRASS GIS compile dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential libblas-dev libbz2-dev libcairo2-dev libfftw3-dev libfreetype6-dev libgdal-dev libgeos-dev libglu1-mesa-dev libgsl0-dev libjpeg-dev liblapack-dev libncurses5-dev libnetcdf-dev libopenjp2-7 libopenjp2-7-dev libpdal-dev pdal libpdal-plugin-python libpng-dev libpq-dev libproj-dev libreadline-dev libsqlite3-dev libtiff-dev libxmu-dev libzstd-dev bison flex g++ gettext gdal-bin libfftw3-bin make ncurses-bin netcdf-bin proj-bin proj-data python python-dev python-numpy python-pil python-ply python-six sqlite3 subversion unixodbc-dev zlib1g-dev -y --no-install-suggests \\\n && apt-get autoremove \\\n && apt-get clean \\\n && mkdir -p $DATA_DIR\nRUN echo LANG=\"en_US.UTF-8\" > /etc/default/locale\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN mkdir /code\nRUN mkdir /code/grass\n#   add repository files to the image\nCOPY . /code/grass\nWORKDIR /code/grass\n#   Set gcc/g++ environmental variables for GRASS GIS compilation, without debug symbols\nENV MYCFLAGS=\"\\\"-O2 -std=gnu99 -m64\\\"\"\nENV MYLDFLAGS=\"\\\"-s\\\"\"\n#   CXX stuff:\nENV LD_LIBRARY_PATH=\"\\\"/usr/local/lib\\\"\"\nENV LDFLAGS=\"\\\"$MYLDFLAGS\\\"\"\nENV CFLAGS=\"\\\"$MYCFLAGS\\\"\"\nENV CXXFLAGS=\"\\\"$MYCXXFLAGS\\\"\"\n#   Configure, compile and install GRASS GIS\nENV NUMTHREADS=\"2\"\nRUN ./configure --enable-largefile --with-cxx --with-nls --with-readline --with-sqlite --with-bzlib --with-zstd --with-cairo --with-cairo-ldflags=-lfontconfig --with-freetype --with-freetype-includes=\"/usr/include/freetype2/\" --with-fftw --with-netcdf --with-pdal --with-proj --with-proj-share=/usr/share/proj --with-geos=/usr/bin/geos-config --with-postgres --with-postgres-includes=\"/usr/include/postgresql\" --with-opengl-libs=/usr/include/GL \\\n && make -j $NUMTHREADS \\\n && make install \\\n && ldconfig\n#   enable simple grass command regardless of version number\nRUN ln -s /usr/local/bin/grass* /usr/local/bin/grass\n#   Reduce the image size\nRUN apt-get autoremove -y\nRUN apt-get clean -y\n#   set SHELL var to avoid /bin/sh fallback in interactive GRASS GIS sessions in docker\nENV SHELL=\"/bin/bash\"\n#   Fix permissions\nRUN chmod -R a+rwx $DATA_DIR\n#   create a user\nRUN useradd -m -U grass\n#   declare data volume late so permissions apply\nVOLUME $DATA_DIR\nWORKDIR $DATA_DIR\n#   Further reduce the docker image size \nRUN rm -rf /code/grass\n#   switch the user\nUSER grass\nCMD [\"/usr/local/bin/grass\", \"--version\"]\n","originalDockerfileUglifiedHash":"717d07f7243a8eb655c3c974b3739ae7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0d649a1b992bdc59731e556f9ab5d1e32c38cc31.dockerfile"}