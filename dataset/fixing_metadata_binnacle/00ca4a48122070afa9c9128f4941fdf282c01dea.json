{"seed":2400217462,"processedDockerfileHash":"c85d9a6f0b3cb8d6b7d6fad745930995","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   ------------------------------------------------------------------------------\n#   First stage: compiling Exekube CLI\n#   ------------------------------------------------------------------------------\nFROM golang:1.12-alpine AS builder\nRUN apk add git=2.24.4-r0 --no-cache\nENV GOPATH=\"/build\"\nWORKDIR /build\nRUN go get github.com/urfave/cli github.com/sirupsen/logrus\nCOPY ./cli ./src/github.com/exekube/exekube/cli\nRUN go build -o ./bin/xk github.com/exekube/exekube/cli\n#   ------------------------------------------------------------------------------\n#   Second stage: getting all runtime deps\n#   ------------------------------------------------------------------------------\nFROM alpine:3.7\nRUN apk add curl=7.79.1-r0 python py-crcmod bash=5.0.11-r1 libc6-compat=1.1.24-r3 openssh-client=8.1_p1-r1 git=2.24.4-r0 openssl=1.1.1l-r0 tar=1.32-r2 ca-certificates=20191127-r2 apache2-utils=2.4.51-r0 tzdata=2021e-r0 jq=1.6-r0 gnupg=2.2.19-r1 --no-cache\nENV CLOUD_SDK_VERSION=\"242.0.0\"\nENV PATH=\"/google-cloud-sdk/bin:$PATH\"\nRUN curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && ln -s /lib /lib64 \\\n && gcloud config set core/disable_usage_reporting true \\\n && gcloud config set component_manager/disable_update_check true \\\n && gcloud config set metrics/environment github_docker_image \\\n && gcloud --version \\\n && gcloud components install alpha beta \\\n && gcloud components update \\\n && gcloud config set component_manager/disable_update_check true \\\n && rm -rf /google-cloud-sdk/.install/.backup\nENV KUBECTL_VERSION=\"1.12.7\"\nRUN curl -L -o kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n && chmod 0700 kubectl \\\n && mv kubectl /usr/bin\nENV HELM_VERSION=\"2.13.1\"\nRUN curl -L -o helm.tar.gz https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz \\\n && tar -xvzf helm.tar.gz \\\n && rm -rf helm.tar.gz \\\n && chmod 0700 linux-amd64/helm \\\n && mv linux-amd64/helm /usr/bin\nENV TERRAFORM_VERSION=\"0.11.12\"\nRUN curl -o ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && unzip terraform.zip \\\n && mv terraform /usr/bin \\\n && rm -rf terraform.zip\nENV TERRAGRUNT_VERSION=\"0.18.3\"\nRUN curl -L -o ./terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64 \\\n && chmod 0700 terragrunt \\\n && mv terragrunt /usr/bin\nENV TERRAFORM_PROVIDER_HELM_VERSION=\"0.7.0\"\nRUN curl -L -o ./tph.tar.gz https://github.com/gpii-ops/terraform-provider-helm/releases/download/v${TERRAFORM_PROVIDER_HELM_VERSION}/terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}_linux_amd64.tar.gz \\\n && tar -xvzf tph.tar.gz \\\n && rm -rf tph.tar.gz \\\n && cd terraform-provider-helm_linux_amd64 \\\n && chmod 0700 terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n && mkdir -p /root/.terraform.d/plugins/ \\\n && mv terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} /root/.terraform.d/plugins/\nENV HELMFILE_VERSION=\"0.54.2\"\nRUN curl -L -o helmfile https://github.com/roboll/helmfile/releases/download/v${HELMFILE_VERSION}/helmfile_linux_amd64 \\\n && chmod 0700 helmfile \\\n && mv helmfile /usr/bin\nCOPY terraform-plugins /terraform-plugins/\nRUN cd /terraform-plugins \\\n && terraform init \\\n && find /terraform-plugins \\\n && cp /terraform-plugins/.terraform/plugins/linux_amd64/terraform-provider* /root/.terraform.d/plugins/ \\\n && cd \\\n && rm -fr /terraform-plugins\nCOPY modules /exekube-modules/\nCOPY --from=builder /build/bin/xk /usr/local/bin/\nENV PATH=\"/exekube-modules/gcp-project-init:/exekube-modules/gcp-secret-mgmt/scripts:$PATH\"\nENTRYPOINT [\"/usr/local/bin/xk\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  ------------------------------------------------------------------------------\n#  First stage: compiling Exekube CLI\n#  ------------------------------------------------------------------------------\nFROM golang:1.12-alpine AS builder\nRUN apk add --no-cache git\nENV GOPATH=\"/build\"\nWORKDIR /build\nRUN go get github.com/urfave/cli github.com/sirupsen/logrus\nADD ./cli ./src/github.com/exekube/exekube/cli\nRUN go build -o ./bin/xk github.com/exekube/exekube/cli\n#  ------------------------------------------------------------------------------\n#  Second stage: getting all runtime deps\n#  ------------------------------------------------------------------------------\nFROM alpine:3.7\nRUN apk --no-cache add curl python py-crcmod bash libc6-compat openssh-client git openssl tar ca-certificates apache2-utils tzdata jq gnupg\nENV CLOUD_SDK_VERSION=\"242.0.0\"\nENV PATH=\"/google-cloud-sdk/bin:$PATH\"\nRUN curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && ln -s /lib /lib64 \\\n && gcloud config set core/disable_usage_reporting true \\\n && gcloud config set component_manager/disable_update_check true \\\n && gcloud config set metrics/environment github_docker_image \\\n && gcloud --version \\\n && gcloud components install alpha beta \\\n && gcloud components update \\\n && gcloud config set component_manager/disable_update_check true \\\n && rm -rf /google-cloud-sdk/.install/.backup\nENV KUBECTL_VERSION=\"1.12.7\"\nRUN curl -L -o kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n && chmod 0700 kubectl \\\n && mv kubectl /usr/bin\nENV HELM_VERSION=\"2.13.1\"\nRUN curl -L -o helm.tar.gz https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz \\\n && tar -xvzf helm.tar.gz \\\n && rm -rf helm.tar.gz \\\n && chmod 0700 linux-amd64/helm \\\n && mv linux-amd64/helm /usr/bin\nENV TERRAFORM_VERSION=\"0.11.12\"\nRUN curl -o ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && unzip terraform.zip \\\n && mv terraform /usr/bin \\\n && rm -rf terraform.zip\nENV TERRAGRUNT_VERSION=\"0.18.3\"\nRUN curl -L -o ./terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64 \\\n && chmod 0700 terragrunt \\\n && mv terragrunt /usr/bin\nENV TERRAFORM_PROVIDER_HELM_VERSION=\"0.7.0\"\nRUN curl -L -o ./tph.tar.gz https://github.com/gpii-ops/terraform-provider-helm/releases/download/v${TERRAFORM_PROVIDER_HELM_VERSION}/terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}_linux_amd64.tar.gz \\\n && tar -xvzf tph.tar.gz \\\n && rm -rf tph.tar.gz \\\n && cd terraform-provider-helm_linux_amd64 \\\n && chmod 0700 terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n && mkdir -p /root/.terraform.d/plugins/ \\\n && mv terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} /root/.terraform.d/plugins/\nENV HELMFILE_VERSION=\"0.54.2\"\nRUN curl -L -o helmfile https://github.com/roboll/helmfile/releases/download/v${HELMFILE_VERSION}/helmfile_linux_amd64 \\\n && chmod 0700 helmfile \\\n && mv helmfile /usr/bin\nCOPY terraform-plugins /terraform-plugins/\nRUN cd /terraform-plugins \\\n && terraform init \\\n && find /terraform-plugins \\\n && cp /terraform-plugins/.terraform/plugins/linux_amd64/terraform-provider* /root/.terraform.d/plugins/ \\\n && cd \\\n && rm -fr /terraform-plugins\nCOPY modules /exekube-modules/\nCOPY --from=builder /build/bin/xk /usr/local/bin/\nENV PATH=\"/exekube-modules/gcp-project-init:/exekube-modules/gcp-secret-mgmt/scripts:$PATH\"\nENTRYPOINT [\"/usr/local/bin/xk\"]\n","injectedSmells":[],"originalDockerfileHash":"74bd6da8582d3a189ab807148f106976","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ------------------------------------------------------------------------------\n#   First stage: compiling Exekube CLI\n#   ------------------------------------------------------------------------------\nFROM golang:1.12-alpine AS builder\nRUN apk add --no-cache git\nENV GOPATH=\"/build\"\nWORKDIR /build\nRUN go get github.com/urfave/cli github.com/sirupsen/logrus\nADD ./cli ./src/github.com/exekube/exekube/cli\nRUN go build -o ./bin/xk github.com/exekube/exekube/cli\n#   ------------------------------------------------------------------------------\n#   Second stage: getting all runtime deps\n#   ------------------------------------------------------------------------------\nFROM alpine:3.7\nRUN apk --no-cache add curl python py-crcmod bash libc6-compat openssh-client git openssl tar ca-certificates apache2-utils tzdata jq gnupg\nENV CLOUD_SDK_VERSION=\"242.0.0\"\nENV PATH=\"/google-cloud-sdk/bin:$PATH\"\nRUN curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && ln -s /lib /lib64 \\\n && gcloud config set core/disable_usage_reporting true \\\n && gcloud config set component_manager/disable_update_check true \\\n && gcloud config set metrics/environment github_docker_image \\\n && gcloud --version \\\n && gcloud components install alpha beta \\\n && gcloud components update \\\n && gcloud config set component_manager/disable_update_check true \\\n && rm -rf /google-cloud-sdk/.install/.backup\nENV KUBECTL_VERSION=\"1.12.7\"\nRUN curl -L -o kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n && chmod 0700 kubectl \\\n && mv kubectl /usr/bin\nENV HELM_VERSION=\"2.13.1\"\nRUN curl -L -o helm.tar.gz https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz \\\n && tar -xvzf helm.tar.gz \\\n && rm -rf helm.tar.gz \\\n && chmod 0700 linux-amd64/helm \\\n && mv linux-amd64/helm /usr/bin\nENV TERRAFORM_VERSION=\"0.11.12\"\nRUN curl -o ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && unzip terraform.zip \\\n && mv terraform /usr/bin \\\n && rm -rf terraform.zip\nENV TERRAGRUNT_VERSION=\"0.18.3\"\nRUN curl -L -o ./terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64 \\\n && chmod 0700 terragrunt \\\n && mv terragrunt /usr/bin\nENV TERRAFORM_PROVIDER_HELM_VERSION=\"0.7.0\"\nRUN curl -L -o ./tph.tar.gz https://github.com/gpii-ops/terraform-provider-helm/releases/download/v${TERRAFORM_PROVIDER_HELM_VERSION}/terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}_linux_amd64.tar.gz \\\n && tar -xvzf tph.tar.gz \\\n && rm -rf tph.tar.gz \\\n && cd terraform-provider-helm_linux_amd64 \\\n && chmod 0700 terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n && mkdir -p /root/.terraform.d/plugins/ \\\n && mv terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} /root/.terraform.d/plugins/\nENV HELMFILE_VERSION=\"0.54.2\"\nRUN curl -L -o helmfile https://github.com/roboll/helmfile/releases/download/v${HELMFILE_VERSION}/helmfile_linux_amd64 \\\n && chmod 0700 helmfile \\\n && mv helmfile /usr/bin\nCOPY terraform-plugins /terraform-plugins/\nRUN cd /terraform-plugins \\\n && terraform init \\\n && find /terraform-plugins \\\n && cp /terraform-plugins/.terraform/plugins/linux_amd64/terraform-provider* /root/.terraform.d/plugins/ \\\n && cd \\\n && rm -fr /terraform-plugins\nCOPY modules /exekube-modules/\nCOPY --from=builder /build/bin/xk /usr/local/bin/\nENV PATH=\"/exekube-modules/gcp-project-init:/exekube-modules/gcp-secret-mgmt/scripts:$PATH\"\nENTRYPOINT [\"/usr/local/bin/xk\"]\n","originalDockerfileUglifiedHash":"a02f406e43d0f8dbdd1f6c3b89c7d964","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/00ca4a48122070afa9c9128f4941fdf282c01dea.dockerfile"}