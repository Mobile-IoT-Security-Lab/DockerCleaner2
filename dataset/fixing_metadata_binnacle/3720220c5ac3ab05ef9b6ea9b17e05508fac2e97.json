{"seed":683944073,"processedDockerfileHash":"6ebf3383ab339c262b2bba17bbc34108","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"FROM harbor.h2o.ai/opsh2oai/h2o-3-hadoop-hdp-2.2:58\nENV LANG=\"'C.UTF-8'\"\nRUN locale\nRUN rm -rf /etc/hadoop/conf/yarn-site.xml\nCOPY conf/yarn-site.xml /etc/hadoop/conf/yarn-site.xml\nRUN rm /etc/startup/70_start_slapd\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/'\nRUN apt-get update \\\n && apt-get install --no-install-recommends git npm curl zip s3cmd r-base r-base-dev libxml2-dev libssl-dev libcurl4-openssl-dev -y\nRUN curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash - \\\n && sudo apt-get install -y nodejs\nRUN R -e 'install.packages(\"xml2\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"openssl\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"httr\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"bitops\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"RCurl\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"jsonlite\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"testthat\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"dplyr\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"devtools\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"usethis\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"sparklyr\", repos = \"http://cran.us.r-project.org\")'\n#  ##\n#  ##  Prepare Spark\n#  ##\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.4.3/spark-2.4.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.4.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.4.3-bin-hadoop2.7.tgz -C spark-2.4.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.4.3-bin-hadoop2.7.tgz\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.3.3/spark-2.3.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.3.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.3.3-bin-hadoop2.7.tgz -C spark-2.3.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.3.3-bin-hadoop2.7.tgz\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.2.3/spark-2.2.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.2.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.2.3-bin-hadoop2.7.tgz -C spark-2.2.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.2.3-bin-hadoop2.7.tgz\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.1.3/spark-2.1.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.1.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.1.3-bin-hadoop2.7.tgz -C spark-2.1.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.1.3-bin-hadoop2.7.tgz\nENV SPARK_HOME_2_4=\"/home/jenkins/spark-2.4.3-bin-hadoop2.7\"\nENV SPARK_HOME_2_3=\"/home/jenkins/spark-2.3.3-bin-hadoop2.7\"\nENV SPARK_HOME_2_2=\"/home/jenkins/spark-2.2.3-bin-hadoop2.7\"\nENV SPARK_HOME_2_1=\"/home/jenkins/spark-2.1.3-bin-hadoop2.7\"\nUSER jenkins\n#  ##\n#  ## Warm up Gradle caches for Sparkling Water\n#  ##\nRUN cd /home/jenkins \\\n && git clone https://github.com/h2oai/sparkling-water.git \\\n && cd sparkling-water \\\n && ./gradlew build testClasses resolveTestRuntimeDependencies -PtestMojoPipeline=true -x check -x :sparkling-water-r:build -x :sparkling-water-py:build \\\n && cd ..\n#  ## Create VirtualEnvs for each Spark & Python combination\nRUN cd /home/jenkins/sparkling-water \\\n && git checkout rel-2.4 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.3 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.2 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.1 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.4 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && git checkout rel-2.3 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && git checkout rel-2.2 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && git checkout rel-2.1 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && cp -R /home/jenkins/sparkling-water/.gradle/python /home/jenkins/.gradle/python\nUSER root\nRUN sudo sh -c \"echo \\\"jenkins ALL=(ALL) NOPASSWD:ALL\\\" >> /etc/sudoers\"\n#  ## Remove Sparkling Water\nRUN cd /home/jenkins \\\n && rm -rf sparkling-water\n#   Change permissions so we can install R packages\nRUN chmod 777 /usr/local/lib/R/site-library\nUSER jenkins\nENV USER=\"jenkins\"\n#   Install Conda as we need to publish Sparkling Water as conda package\nRUN cd /home/jenkins \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /home/jenkins/miniconda.sh \\\n && bash /home/jenkins/miniconda.sh -b -p /home/jenkins/miniconda \\\n && rm /home/jenkins/miniconda.sh\nENV PATH=\"\\\"/home/jenkins/miniconda/bin:${PATH}\\\"\"\nRUN conda install anaconda anaconda-client conda-build -y \\\n && conda update conda -y \\\n && conda update anaconda anaconda-client conda-build -y \\\n && conda config --add channels conda-forge\nENV HIVE_HOME=\"/usr/hdp/2.2.9.0-3393/hive\"\nRUN pip install awscli==1.27.114 --upgrade --user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM harbor.h2o.ai/opsh2oai/h2o-3-hadoop-hdp-2.2:58\nENV LANG=\"'C.UTF-8'\"\nRUN locale\nRUN rm -rf /etc/hadoop/conf/yarn-site.xml\nCOPY conf/yarn-site.xml /etc/hadoop/conf/yarn-site.xml\nRUN rm /etc/startup/70_start_slapd\nRUN apt-get update \\\n && apt-get install apt-transport-https \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/'\nRUN apt-get update \\\n && apt-get install git npm curl zip s3cmd r-base r-base-dev libxml2-dev libssl-dev libcurl4-openssl-dev -y\nRUN curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash - \\\n && sudo apt-get install -y nodejs\nRUN R -e 'install.packages(\"xml2\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"openssl\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"httr\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"bitops\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"RCurl\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"jsonlite\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"testthat\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"dplyr\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"devtools\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"usethis\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"sparklyr\", repos = \"http://cran.us.r-project.org\")'\n# ##\n# ##  Prepare Spark\n# ##\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.4.3/spark-2.4.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.4.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.4.3-bin-hadoop2.7.tgz -C spark-2.4.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.4.3-bin-hadoop2.7.tgz\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.3.3/spark-2.3.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.3.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.3.3-bin-hadoop2.7.tgz -C spark-2.3.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.3.3-bin-hadoop2.7.tgz\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.2.3/spark-2.2.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.2.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.2.3-bin-hadoop2.7.tgz -C spark-2.2.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.2.3-bin-hadoop2.7.tgz\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.1.3/spark-2.1.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.1.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.1.3-bin-hadoop2.7.tgz -C spark-2.1.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.1.3-bin-hadoop2.7.tgz\nENV SPARK_HOME_2_4=\"/home/jenkins/spark-2.4.3-bin-hadoop2.7\"\nENV SPARK_HOME_2_3=\"/home/jenkins/spark-2.3.3-bin-hadoop2.7\"\nENV SPARK_HOME_2_2=\"/home/jenkins/spark-2.2.3-bin-hadoop2.7\"\nENV SPARK_HOME_2_1=\"/home/jenkins/spark-2.1.3-bin-hadoop2.7\"\nUSER jenkins\n# ##\n# ## Warm up Gradle caches for Sparkling Water\n# ##\nRUN cd /home/jenkins \\\n && git clone https://github.com/h2oai/sparkling-water.git \\\n && cd sparkling-water \\\n && ./gradlew build testClasses resolveTestRuntimeDependencies -PtestMojoPipeline=true -x check -x :sparkling-water-r:build -x :sparkling-water-py:build \\\n && cd ..\n# ## Create VirtualEnvs for each Spark & Python combination\nRUN cd /home/jenkins/sparkling-water \\\n && git checkout rel-2.4 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.3 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.2 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.1 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.4 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && git checkout rel-2.3 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && git checkout rel-2.2 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && git checkout rel-2.1 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && cp -R /home/jenkins/sparkling-water/.gradle/python /home/jenkins/.gradle/python\nUSER root\nRUN sudo sh -c \"echo \\\"jenkins ALL=(ALL) NOPASSWD:ALL\\\" >> /etc/sudoers\"\n# ## Remove Sparkling Water\nRUN cd /home/jenkins \\\n && rm -rf sparkling-water\n#  Change permissions so we can install R packages\nRUN chmod 777 /usr/local/lib/R/site-library\nUSER jenkins\nENV USER=\"jenkins\"\n#  Install Conda as we need to publish Sparkling Water as conda package\nRUN cd /home/jenkins \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /home/jenkins/miniconda.sh \\\n && bash /home/jenkins/miniconda.sh -b -p /home/jenkins/miniconda \\\n && rm /home/jenkins/miniconda.sh\nENV PATH=\"\\\"/home/jenkins/miniconda/bin:${PATH}\\\"\"\nRUN conda install anaconda anaconda-client conda-build -y \\\n && conda update conda -y \\\n && conda update anaconda anaconda-client conda-build -y \\\n && conda config --add channels conda-forge\nENV HIVE_HOME=\"/usr/hdp/2.2.9.0-3393/hive\"\nRUN pip install awscli --upgrade --user\n","injectedSmells":[],"originalDockerfileHash":"176a19c3c6243fc8c8823aa428c42889","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM harbor.h2o.ai/opsh2oai/h2o-3-hadoop-hdp-2.2:58\nENV LANG=\"'C.UTF-8'\"\nRUN locale\nRUN rm -rf /etc/hadoop/conf/yarn-site.xml\nCOPY conf/yarn-site.xml /etc/hadoop/conf/yarn-site.xml\nRUN rm /etc/startup/70_start_slapd\nRUN apt-get update \\\n && apt-get install apt-transport-https \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/'\nRUN apt-get update \\\n && apt-get install git npm curl zip s3cmd r-base r-base-dev libxml2-dev libssl-dev libcurl4-openssl-dev -y\nRUN curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash - \\\n && sudo apt-get install -y nodejs\nRUN R -e 'install.packages(\"xml2\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"openssl\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"httr\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"bitops\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"RCurl\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"jsonlite\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"testthat\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"dplyr\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"devtools\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"usethis\", repos = \"http://cran.us.r-project.org\")' \\\n && R -e 'install.packages(\"sparklyr\", repos = \"http://cran.us.r-project.org\")'\n#  ##\n#  ##  Prepare Spark\n#  ##\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.4.3/spark-2.4.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.4.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.4.3-bin-hadoop2.7.tgz -C spark-2.4.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.4.3-bin-hadoop2.7.tgz\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.3.3/spark-2.3.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.3.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.3.3-bin-hadoop2.7.tgz -C spark-2.3.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.3.3-bin-hadoop2.7.tgz\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.2.3/spark-2.2.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.2.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.2.3-bin-hadoop2.7.tgz -C spark-2.2.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.2.3-bin-hadoop2.7.tgz\nRUN cd /home/jenkins \\\n && wget http://archive.apache.org/dist/spark/spark-2.1.3/spark-2.1.3-bin-hadoop2.7.tgz \\\n && mkdir -p spark-2.1.3-bin-hadoop2.7 \\\n && tar zxvf spark-2.1.3-bin-hadoop2.7.tgz -C spark-2.1.3-bin-hadoop2.7 --strip-components 1 \\\n && rm -rf spark-2.1.3-bin-hadoop2.7.tgz\nENV SPARK_HOME_2_4=\"/home/jenkins/spark-2.4.3-bin-hadoop2.7\"\nENV SPARK_HOME_2_3=\"/home/jenkins/spark-2.3.3-bin-hadoop2.7\"\nENV SPARK_HOME_2_2=\"/home/jenkins/spark-2.2.3-bin-hadoop2.7\"\nENV SPARK_HOME_2_1=\"/home/jenkins/spark-2.1.3-bin-hadoop2.7\"\nUSER jenkins\n#  ##\n#  ## Warm up Gradle caches for Sparkling Water\n#  ##\nRUN cd /home/jenkins \\\n && git clone https://github.com/h2oai/sparkling-water.git \\\n && cd sparkling-water \\\n && ./gradlew build testClasses resolveTestRuntimeDependencies -PtestMojoPipeline=true -x check -x :sparkling-water-r:build -x :sparkling-water-py:build \\\n && cd ..\n#  ## Create VirtualEnvs for each Spark & Python combination\nRUN cd /home/jenkins/sparkling-water \\\n && git checkout rel-2.4 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.3 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.2 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.1 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin \\\n && git checkout rel-2.4 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && git checkout rel-2.3 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && git checkout rel-2.2 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && git checkout rel-2.1 \\\n && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin \\\n && cp -R /home/jenkins/sparkling-water/.gradle/python /home/jenkins/.gradle/python\nUSER root\nRUN sudo sh -c \"echo \\\"jenkins ALL=(ALL) NOPASSWD:ALL\\\" >> /etc/sudoers\"\n#  ## Remove Sparkling Water\nRUN cd /home/jenkins \\\n && rm -rf sparkling-water\n#   Change permissions so we can install R packages\nRUN chmod 777 /usr/local/lib/R/site-library\nUSER jenkins\nENV USER=\"jenkins\"\n#   Install Conda as we need to publish Sparkling Water as conda package\nRUN cd /home/jenkins \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /home/jenkins/miniconda.sh \\\n && bash /home/jenkins/miniconda.sh -b -p /home/jenkins/miniconda \\\n && rm /home/jenkins/miniconda.sh\nENV PATH=\"\\\"/home/jenkins/miniconda/bin:${PATH}\\\"\"\nRUN conda install anaconda anaconda-client conda-build -y \\\n && conda update conda -y \\\n && conda update anaconda anaconda-client conda-build -y \\\n && conda config --add channels conda-forge\nENV HIVE_HOME=\"/usr/hdp/2.2.9.0-3393/hive\"\nRUN pip install awscli --upgrade --user\n","originalDockerfileUglifiedHash":"3815e2f0836739d0b214393c62580380","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3720220c5ac3ab05ef9b6ea9b17e05508fac2e97.dockerfile"}