{"seed":2703486161,"processedDockerfileHash":"8d8763067d9dfee9dc64630f0b9e231b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2019 Google LLC\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:bionic AS google-cloud-cpp-dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.4ubuntu1 cmake=3.10.2-1ubuntu2.18.04.2 git=1:2.17.1-1ubuntu0.17 gcc=4:7.4.0-1ubuntu2.3 g++=4:7.4.0-1ubuntu2.3 cmake=3.10.2-1ubuntu2.18.04.2 libc-ares-dev=1.14.0-1ubuntu0.2 libc-ares2=1.14.0-1ubuntu0.2 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 make=4.1-9.1ubuntu1 pkg-config=0.29.1-0ubuntu2 tar=1.29b-2ubuntu0.4 wget=1.19.4-1ubuntu2.2 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 -y\n#   #### crc32c\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/crc32c/archive/1.0.6.tar.gz\nRUN tar -xf 1.0.6.tar.gz\nWORKDIR /var/tmp/build/crc32c-1.0.6\nRUN cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=yes -DCRC32C_BUILD_TESTS=OFF -DCRC32C_BUILD_BENCHMARKS=OFF -DCRC32C_USE_GLOG=OFF -H. -Bcmake-out/crc32c\nRUN cmake --build cmake-out/crc32c --target install -- -j $( nproc ;)\nRUN ldconfig\n#   #### Protobuf\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/protobuf/archive/v3.7.1.tar.gz\nRUN tar -xf v3.7.1.tar.gz\nWORKDIR /var/tmp/build/protobuf-3.7.1/cmake\nRUN cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=yes -Dprotobuf_BUILD_TESTS=OFF -H. -Bcmake-out\nRUN cmake --build cmake-out --target install -- -j $( nproc ;)\nRUN ldconfig\n#   #### gRPC\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/grpc/grpc/archive/v1.21.0.tar.gz\nRUN tar -xf v1.21.0.tar.gz\nWORKDIR /var/tmp/build/grpc-1.21.0\nRUN make -j $( nproc ;)\nRUN make install\nRUN ldconfig\n#   Get the source code\nFROM google-cloud-cpp-dependencies AS google-cloud-cpp-build\nWORKDIR /w\nCOPY . /w\n#   #### google-cloud-cpp\nARG CMAKE_BUILD_TYPE=Release\nARG SHORT_SHA=\"\"\nRUN cmake -H. -Bcmake-out -DGOOGLE_CLOUD_CPP_DEPENDENCY_PROVIDER=package -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DGOOGLE_CLOUD_CPP_BUILD_METADATA=${SHORT_SHA}\nRUN cmake --build cmake-out -- -j $( nproc ;)\nWORKDIR /w/cmake-out\nRUN cmake --build . --target install\n#   ================================================================\n#   Prepare the final image, this image is much smaller because we only install:\n#   - The final binaries, without any intermdiate object files.\n#   - The run-time dependencies, without the build tool dependencies.\nFROM ubuntu:bionic\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20211016ubuntu0.18.04.1 libc-ares2=1.14.0-1ubuntu0.2 libcurl4=7.58.0-2ubuntu3.24 libstdc++6=8.4.0-1ubuntu1~18.04 libssl1.1=1.1.1-1ubuntu2.1~18.04.21 zlib1g=1:1.2.11.dfsg-0ubuntu2.2 -y\nRUN /usr/sbin/update-ca-certificates\nCOPY --from=google-cloud-cpp-build /usr/local/lib /usr/local/lib\nCOPY --from=google-cloud-cpp-build /usr/local/bin /usr/local/bin\nCOPY --from=google-cloud-cpp-build /w/cmake-out/google/cloud/bigtable/benchmarks/*_benchmark /r/\nCOPY --from=google-cloud-cpp-build /w/cmake-out/google/cloud/storage/benchmarks/*_benchmark /r/\nCOPY --from=google-cloud-cpp-build /w/cmake-out/google/cloud/storage/examples/*_samples /r/\nRUN ldconfig\nCMD [\"/bin/false\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2019 Google LLC\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM ubuntu:bionic AS google-cloud-cpp-dependencies\nRUN apt-get update \\\n && apt-get install -y build-essential cmake git gcc g++ cmake libc-ares-dev libc-ares2 libcurl4-openssl-dev libssl-dev make pkg-config tar wget zlib1g-dev\n#  #### crc32c\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/crc32c/archive/1.0.6.tar.gz\nRUN tar -xf 1.0.6.tar.gz\nWORKDIR /var/tmp/build/crc32c-1.0.6\nRUN cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=yes -DCRC32C_BUILD_TESTS=OFF -DCRC32C_BUILD_BENCHMARKS=OFF -DCRC32C_USE_GLOG=OFF -H. -Bcmake-out/crc32c\nRUN cmake --build cmake-out/crc32c --target install -- -j $( nproc ;)\nRUN ldconfig\n#  #### Protobuf\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/protobuf/archive/v3.7.1.tar.gz\nRUN tar -xf v3.7.1.tar.gz\nWORKDIR /var/tmp/build/protobuf-3.7.1/cmake\nRUN cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=yes -Dprotobuf_BUILD_TESTS=OFF -H. -Bcmake-out\nRUN cmake --build cmake-out --target install -- -j $( nproc ;)\nRUN ldconfig\n#  #### gRPC\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/grpc/grpc/archive/v1.21.0.tar.gz\nRUN tar -xf v1.21.0.tar.gz\nWORKDIR /var/tmp/build/grpc-1.21.0\nRUN make -j $( nproc ;)\nRUN make install\nRUN ldconfig\n#  Get the source code\nFROM google-cloud-cpp-dependencies AS google-cloud-cpp-build\nWORKDIR /w\nCOPY . /w\n#  #### google-cloud-cpp\nARG CMAKE_BUILD_TYPE=Release\nARG SHORT_SHA=\"\"\nRUN cmake -H. -Bcmake-out -DGOOGLE_CLOUD_CPP_DEPENDENCY_PROVIDER=package -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DGOOGLE_CLOUD_CPP_BUILD_METADATA=${SHORT_SHA}\nRUN cmake --build cmake-out -- -j $( nproc ;)\nWORKDIR /w/cmake-out\nRUN cmake --build . --target install\n#  ================================================================\n#  Prepare the final image, this image is much smaller because we only install:\n#  - The final binaries, without any intermdiate object files.\n#  - The run-time dependencies, without the build tool dependencies.\nFROM ubuntu:bionic\nRUN apt-get update \\\n && apt-get install -y ca-certificates libc-ares2 libcurl4 libstdc++6 libssl1.1 zlib1g\nRUN /usr/sbin/update-ca-certificates\nCOPY --from=google-cloud-cpp-build /usr/local/lib /usr/local/lib\nCOPY --from=google-cloud-cpp-build /usr/local/bin /usr/local/bin\nCOPY --from=google-cloud-cpp-build /w/cmake-out/google/cloud/bigtable/benchmarks/*_benchmark /r/\nCOPY --from=google-cloud-cpp-build /w/cmake-out/google/cloud/storage/benchmarks/*_benchmark /r/\nCOPY --from=google-cloud-cpp-build /w/cmake-out/google/cloud/storage/examples/*_samples /r/\nRUN ldconfig\nCMD [\"/bin/false\"]\n","injectedSmells":[],"originalDockerfileHash":"b73c366fe56144e172e47faba123ecd1","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2019 Google LLC\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:bionic AS google-cloud-cpp-dependencies\nRUN apt-get update \\\n && apt-get install build-essential cmake git gcc g++ cmake libc-ares-dev libc-ares2 libcurl4-openssl-dev libssl-dev make pkg-config tar wget zlib1g-dev -y\n#   #### crc32c\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/crc32c/archive/1.0.6.tar.gz\nRUN tar -xf 1.0.6.tar.gz\nWORKDIR /var/tmp/build/crc32c-1.0.6\nRUN cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=yes -DCRC32C_BUILD_TESTS=OFF -DCRC32C_BUILD_BENCHMARKS=OFF -DCRC32C_USE_GLOG=OFF -H. -Bcmake-out/crc32c\nRUN cmake --build cmake-out/crc32c --target install -- -j $( nproc ;)\nRUN ldconfig\n#   #### Protobuf\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/protobuf/archive/v3.7.1.tar.gz\nRUN tar -xf v3.7.1.tar.gz\nWORKDIR /var/tmp/build/protobuf-3.7.1/cmake\nRUN cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=yes -Dprotobuf_BUILD_TESTS=OFF -H. -Bcmake-out\nRUN cmake --build cmake-out --target install -- -j $( nproc ;)\nRUN ldconfig\n#   #### gRPC\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/grpc/grpc/archive/v1.21.0.tar.gz\nRUN tar -xf v1.21.0.tar.gz\nWORKDIR /var/tmp/build/grpc-1.21.0\nRUN make -j $( nproc ;)\nRUN make install\nRUN ldconfig\n#   Get the source code\nFROM google-cloud-cpp-dependencies AS google-cloud-cpp-build\nWORKDIR /w\nCOPY . /w\n#   #### google-cloud-cpp\nARG CMAKE_BUILD_TYPE=Release\nARG SHORT_SHA=\"\"\nRUN cmake -H. -Bcmake-out -DGOOGLE_CLOUD_CPP_DEPENDENCY_PROVIDER=package -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DGOOGLE_CLOUD_CPP_BUILD_METADATA=${SHORT_SHA}\nRUN cmake --build cmake-out -- -j $( nproc ;)\nWORKDIR /w/cmake-out\nRUN cmake --build . --target install\n#   ================================================================\n#   Prepare the final image, this image is much smaller because we only install:\n#   - The final binaries, without any intermdiate object files.\n#   - The run-time dependencies, without the build tool dependencies.\nFROM ubuntu:bionic\nRUN apt-get update \\\n && apt-get install ca-certificates libc-ares2 libcurl4 libstdc++6 libssl1.1 zlib1g -y\nRUN /usr/sbin/update-ca-certificates\nCOPY --from=google-cloud-cpp-build /usr/local/lib /usr/local/lib\nCOPY --from=google-cloud-cpp-build /usr/local/bin /usr/local/bin\nCOPY --from=google-cloud-cpp-build /w/cmake-out/google/cloud/bigtable/benchmarks/*_benchmark /r/\nCOPY --from=google-cloud-cpp-build /w/cmake-out/google/cloud/storage/benchmarks/*_benchmark /r/\nCOPY --from=google-cloud-cpp-build /w/cmake-out/google/cloud/storage/examples/*_samples /r/\nRUN ldconfig\nCMD [\"/bin/false\"]\n","originalDockerfileUglifiedHash":"416c6c96bd572b7451929a80d2543828","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/49d803392165c2a0daa30498903bf0077164cec3.dockerfile"}