{"seed":3692924978,"processedDockerfileHash":"8d9739206d12c9ee80580857b5c1b8c5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Ubuntu Docker file for Julia with slurm\n#   Version:0.0.1\nFROM ubuntu:16.04\nMAINTAINER Tanmay Mohapatra\nRUN apt-get update \\\n && apt-get upgrade -y -o Dpkg::Options::=\"--force-confdef\" -o DPkg::Options::=\"--force-confold\" \\\n && (apt-get update ;apt-get install --no-install-recommends man-db=2.7.5-1 libc6=2.23-0ubuntu11.3 libc6-dev=2.23-0ubuntu11.3 build-essential=12.1ubuntu2 wget=1.17.1-1ubuntu1.5 curl=7.47.0-1ubuntu2.19 file=1:5.25-2ubuntu1.4 vim=2:7.4.1689-3ubuntu1.5 screen=4.3.1-2ubuntu0.1 tmux=2.1-3build1 unzip=6.0-20ubuntu1.1 pkg-config=0.29.1-0ubuntu1 cmake=3.5.1-1ubuntu3 gfortran=4:5.3.1-1ubuntu1 gettext=0.19.7-2ubuntu3.1 libreadline-dev=6.3-8ubuntu2 libncurses-dev libpcre3-dev=2:8.38-3.1 libgnutls30=3.4.10-4ubuntu1.9 libzmq3-dev=4.1.4-7ubuntu0.1 libzmq5=4.1.4-7ubuntu0.1 python=2.7.12-1~16.04 python-yaml=3.11-3build1 python-m2crypto=0.22.6~rc4-1ubuntu1 python-crypto=2.6.1-6ubuntu0.16.04.3 msgpack-python python-dev=2.7.12-1~16.04 python-setuptools=20.7.0-1 supervisor=3.2.0-2ubuntu0.2 python-jinja2=2.8-1ubuntu0.1 python-requests=2.9.1-3ubuntu0.1 python-isodate=0.5.4-1 python-git=1.0.1+git137-gc8b8379-2.1 python-pip=8.1.1-2ubuntu0.6 -y ) \\\n && apt-get clean\nRUN pip install pyzmq==25.0.2 PyDrive==1.3.1 google-api-python-client==2.85.0 jsonpointer==2.3 jsonschema==4.17.3 tornado==6.2 sphinx==6.1.3 pygments==2.15.0 nose==1.3.7 readline==6.2.4.2 mistune==2.0.5 invoke==2.0.0 --upgrade\nRUN pip install 'notebook==4.2'\nRUN pip install 'rise==4.0.0b1' ; jupyter-nbextension install rise --py --sys-prefix ; jupyter-nbextension enable rise --py --sys-prefix\n#   Install julia 0.3\nRUN mkdir -p /opt/julia-0.3.12 \\\n && curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.3/julia-0.3.12-linux-x86_64.tar.gz | tar -C /opt/julia-0.3.12 -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.3.12 /opt/julia-0.3\n#   Install julia 0.4\nRUN mkdir -p /opt/julia-0.4.7 \\\n && curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.4/julia-0.4.7-linux-x86_64.tar.gz | tar -C /opt/julia-0.4.7 -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.4.7 /opt/julia-0.4\n#   Install julia 0.5\nRUN mkdir -p /opt/julia-0.5.0 \\\n && curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.5/julia-0.5.0-linux-x86_64.tar.gz | tar -C /opt/julia-0.5.0 -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.5.0 /opt/julia-0.5\n#   Install julia 0.6\nRUN mkdir -p /opt/julia-0.6.0-dev \\\n && curl -s -L https://status.julialang.org/download/linux-x86_64 | tar -C /opt/julia-0.6.0-dev -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.6.0-dev /opt/julia-0.6\n#   Make v0.5 default julia\nRUN ln -fs /opt/julia-0.5 /opt/julia\n#   Setup juliarc\nRUN echo '(\"JULIA_LOAD_CACHE_PATH\" in keys(ENV)) \\\n && unshift!(Base.LOAD_CACHE_PATH, ENV[\"JULIA_LOAD_CACHE_PATH\"])' >> /opt/julia-0.4/etc/julia/juliarc.jl\nRUN echo '(\"JULIA_LOAD_CACHE_PATH\" in keys(ENV)) \\\n && unshift!(Base.LOAD_CACHE_PATH, ENV[\"JULIA_LOAD_CACHE_PATH\"])' >> /opt/julia-0.5/etc/julia/juliarc.jl\nRUN echo '(\"JULIA_LOAD_CACHE_PATH\" in keys(ENV)) \\\n && unshift!(Base.LOAD_CACHE_PATH, ENV[\"JULIA_LOAD_CACHE_PATH\"])' >> /opt/julia-0.6/etc/julia/juliarc.jl\nRUN echo \"PATH=\\\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/julia/bin\\\"\" > /etc/environment \\\n && echo \"export PATH\" >> /etc/environment \\\n && echo \"source /etc/environment\" >> /root/.bashrc\nENV SLURM_VER=\"16.05.6\"\n#   Create users, set up SSH keys (for MPI)\nRUN useradd -u 2001 -d /home/slurm slurm\nRUN useradd -u 6000 -ms /bin/bash juser\nCOPY etc/sudoers.d/juser /etc/sudoers.d/juser\nCOPY home/juser/ssh/config /home/juser/.ssh/config\nCOPY home/juser/ssh/id_rsa /home/juser/.ssh/id_rsa\nCOPY home/juser/ssh/id_rsa.pub /home/juser/.ssh/id_rsa.pub\nCOPY home/juser/ssh/authorized_keys /home/juser/.ssh/authorized_keys\nRUN chown -R juser:juser /home/juser/.ssh/\nRUN chmod 400 /home/juser/.ssh/*\n#   Install packages\nRUN : \\\n && apt-get -y dist-upgrade\nRUN (apt-get update ;apt-get install --no-install-recommends munge=0.5.11-3ubuntu0.1 curl=7.47.0-1ubuntu2.19 gcc=4:5.3.1-1ubuntu1 make=4.1-6 bzip2=1.0.6-8ubuntu0.2 supervisor=3.2.0-2ubuntu0.2 python=2.7.12-1~16.04 python-dev=2.7.12-1~16.04 libmunge-dev=0.5.11-3ubuntu0.1 libmunge2=0.5.11-3ubuntu0.1 lua5.3=5.3.1-1ubuntu2.1 lua5.3-dev libopenmpi-dev=1.10.2-8ubuntu1 openmpi-bin=1.10.2-8ubuntu1 gfortran=4:5.3.1-1ubuntu1 vim=2:7.4.1689-3ubuntu1.5 python-mpi4py=1.3.1+hg20131106-2ubuntu5 python-numpy=1:1.11.0-1ubuntu1 python-psutil=3.4.2-1ubuntu0.1 sudo=1.8.16-0ubuntu1.10 psmisc=22.21-2.1ubuntu0.1 software-properties-common=0.96.20.10 python-software-properties=0.96.20.10 iputils-ping=3:20121221-5ubuntu2 openssh-server=1:7.2p2-4ubuntu2.10 openssh-client=1:7.2p2-4ubuntu2.10 -y )\n#   Download, compile and install SLURM\nRUN curl -fsL http://www.schedmd.com/download/total/slurm-${SLURM_VER}.tar.bz2 | tar xfj - -C /opt/ \\\n && cd /opt/slurm-${SLURM_VER}/ \\\n && ./configure \\\n && make \\\n && make install\nCOPY etc/slurm/slurm.conf /usr/local/etc/slurm.conf\n#   Configure OpenSSH\n#   Also see: https://docs.docker.com/engine/examples/running_ssh_service/\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\nRUN mkdir /var/run/sshd\nRUN echo 'juser:juser' | chpasswd\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nCOPY etc/supervisord.d/sshd.conf /etc/supervisor/conf.d/sshd.conf\n#   Configure munge (for SLURM authentication)\nCOPY etc/munge/munge.key /etc/munge/munge.key\nRUN mkdir /var/run/munge \\\n && chown root /var/lib/munge \\\n && chown root /etc/munge \\\n && chmod 600 /var/run/munge \\\n && chmod 755 /run/munge \\\n && chmod 600 /etc/munge/munge.key\nCOPY etc/supervisord.d/munged.conf /etc/supervisor/conf.d/munged.conf\nRUN /opt/julia/bin/julia -e 'Pkg.clone(\"https://github.com/JuliaParallel/Slurm.jl.git\")'\nRUN /opt/julia/bin/julia -e 'Pkg.add(\"IJulia\")'\nRUN /opt/julia/bin/julia -e 'Pkg.build(\"IJulia\")'\nRUN /opt/julia/bin/julia -e 'import IJulia; import Slurm'\nEXPOSE 22/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Ubuntu Docker file for Julia with slurm\n#  Version:0.0.1\nFROM ubuntu:16.04\nMAINTAINER Tanmay Mohapatra\nRUN apt-get update \\\n && apt-get upgrade -y -o Dpkg::Options::=\"--force-confdef\" -o DPkg::Options::=\"--force-confold\" \\\n && apt-get install man-db libc6 libc6-dev build-essential wget curl file vim screen tmux unzip pkg-config cmake gfortran gettext libreadline-dev libncurses-dev libpcre3-dev libgnutls30 libzmq3-dev libzmq5 python python-yaml python-m2crypto python-crypto msgpack-python python-dev python-setuptools supervisor python-jinja2 python-requests python-isodate python-git python-pip -y \\\n && apt-get clean\nRUN pip install pyzmq PyDrive google-api-python-client jsonpointer jsonschema tornado sphinx pygments nose readline mistune invoke --upgrade\nRUN pip install 'notebook==4.2'\nRUN pip install 'rise==4.0.0b1' ; jupyter-nbextension install rise --py --sys-prefix ; jupyter-nbextension enable rise --py --sys-prefix\n#  Install julia 0.3\nRUN mkdir -p /opt/julia-0.3.12 \\\n && curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.3/julia-0.3.12-linux-x86_64.tar.gz | tar -C /opt/julia-0.3.12 -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.3.12 /opt/julia-0.3\n#  Install julia 0.4\nRUN mkdir -p /opt/julia-0.4.7 \\\n && curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.4/julia-0.4.7-linux-x86_64.tar.gz | tar -C /opt/julia-0.4.7 -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.4.7 /opt/julia-0.4\n#  Install julia 0.5\nRUN mkdir -p /opt/julia-0.5.0 \\\n && curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.5/julia-0.5.0-linux-x86_64.tar.gz | tar -C /opt/julia-0.5.0 -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.5.0 /opt/julia-0.5\n#  Install julia 0.6\nRUN mkdir -p /opt/julia-0.6.0-dev \\\n && curl -s -L https://status.julialang.org/download/linux-x86_64 | tar -C /opt/julia-0.6.0-dev -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.6.0-dev /opt/julia-0.6\n#  Make v0.5 default julia\nRUN ln -fs /opt/julia-0.5 /opt/julia\n#  Setup juliarc\nRUN echo '(\"JULIA_LOAD_CACHE_PATH\" in keys(ENV)) \\\n && unshift!(Base.LOAD_CACHE_PATH, ENV[\"JULIA_LOAD_CACHE_PATH\"])' >> /opt/julia-0.4/etc/julia/juliarc.jl\nRUN echo '(\"JULIA_LOAD_CACHE_PATH\" in keys(ENV)) \\\n && unshift!(Base.LOAD_CACHE_PATH, ENV[\"JULIA_LOAD_CACHE_PATH\"])' >> /opt/julia-0.5/etc/julia/juliarc.jl\nRUN echo '(\"JULIA_LOAD_CACHE_PATH\" in keys(ENV)) \\\n && unshift!(Base.LOAD_CACHE_PATH, ENV[\"JULIA_LOAD_CACHE_PATH\"])' >> /opt/julia-0.6/etc/julia/juliarc.jl\nRUN echo \"PATH=\\\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/julia/bin\\\"\" > /etc/environment \\\n && echo \"export PATH\" >> /etc/environment \\\n && echo \"source /etc/environment\" >> /root/.bashrc\nENV SLURM_VER=\"16.05.6\"\n#  Create users, set up SSH keys (for MPI)\nRUN useradd -u 2001 -d /home/slurm slurm\nRUN useradd -u 6000 -ms /bin/bash juser\nADD etc/sudoers.d/juser /etc/sudoers.d/juser\nADD home/juser/ssh/config /home/juser/.ssh/config\nADD home/juser/ssh/id_rsa /home/juser/.ssh/id_rsa\nADD home/juser/ssh/id_rsa.pub /home/juser/.ssh/id_rsa.pub\nADD home/juser/ssh/authorized_keys /home/juser/.ssh/authorized_keys\nRUN chown -R juser:juser /home/juser/.ssh/\nRUN chmod 400 /home/juser/.ssh/*\n#  Install packages\nRUN apt-get update \\\n && apt-get -y dist-upgrade\nRUN apt-get install munge curl gcc make bzip2 supervisor python python-dev libmunge-dev libmunge2 lua5.3 lua5.3-dev libopenmpi-dev openmpi-bin gfortran vim python-mpi4py python-numpy python-psutil sudo psmisc software-properties-common python-software-properties iputils-ping openssh-server openssh-client -y\n#  Download, compile and install SLURM\nRUN curl -fsL http://www.schedmd.com/download/total/slurm-${SLURM_VER}.tar.bz2 | tar xfj - -C /opt/ \\\n && cd /opt/slurm-${SLURM_VER}/ \\\n && ./configure \\\n && make \\\n && make install\nADD etc/slurm/slurm.conf /usr/local/etc/slurm.conf\n#  Configure OpenSSH\n#  Also see: https://docs.docker.com/engine/examples/running_ssh_service/\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\nRUN mkdir /var/run/sshd\nRUN echo 'juser:juser' | chpasswd\n#  SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nADD etc/supervisord.d/sshd.conf /etc/supervisor/conf.d/sshd.conf\n#  Configure munge (for SLURM authentication)\nADD etc/munge/munge.key /etc/munge/munge.key\nRUN mkdir /var/run/munge \\\n && chown root /var/lib/munge \\\n && chown root /etc/munge \\\n && chmod 600 /var/run/munge \\\n && chmod 755 /run/munge \\\n && chmod 600 /etc/munge/munge.key\nADD etc/supervisord.d/munged.conf /etc/supervisor/conf.d/munged.conf\nRUN /opt/julia/bin/julia -e 'Pkg.clone(\"https://github.com/JuliaParallel/Slurm.jl.git\")'\nRUN /opt/julia/bin/julia -e 'Pkg.add(\"IJulia\")'\nRUN /opt/julia/bin/julia -e 'Pkg.build(\"IJulia\")'\nRUN /opt/julia/bin/julia -e 'import IJulia; import Slurm'\nEXPOSE 22/tcp\n","injectedSmells":[],"originalDockerfileHash":"d5fdb358175535175844a09edc1d9032","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Ubuntu Docker file for Julia with slurm\n#   Version:0.0.1\nFROM ubuntu:16.04\nMAINTAINER Tanmay Mohapatra\nRUN apt-get update \\\n && apt-get upgrade -y -o Dpkg::Options::=\"--force-confdef\" -o DPkg::Options::=\"--force-confold\" \\\n && apt-get install man-db libc6 libc6-dev build-essential wget curl file vim screen tmux unzip pkg-config cmake gfortran gettext libreadline-dev libncurses-dev libpcre3-dev libgnutls30 libzmq3-dev libzmq5 python python-yaml python-m2crypto python-crypto msgpack-python python-dev python-setuptools supervisor python-jinja2 python-requests python-isodate python-git python-pip -y \\\n && apt-get clean\nRUN pip install pyzmq PyDrive google-api-python-client jsonpointer jsonschema tornado sphinx pygments nose readline mistune invoke --upgrade\nRUN pip install 'notebook==4.2'\nRUN pip install 'rise==4.0.0b1' ; jupyter-nbextension install rise --py --sys-prefix ; jupyter-nbextension enable rise --py --sys-prefix\n#   Install julia 0.3\nRUN mkdir -p /opt/julia-0.3.12 \\\n && curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.3/julia-0.3.12-linux-x86_64.tar.gz | tar -C /opt/julia-0.3.12 -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.3.12 /opt/julia-0.3\n#   Install julia 0.4\nRUN mkdir -p /opt/julia-0.4.7 \\\n && curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.4/julia-0.4.7-linux-x86_64.tar.gz | tar -C /opt/julia-0.4.7 -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.4.7 /opt/julia-0.4\n#   Install julia 0.5\nRUN mkdir -p /opt/julia-0.5.0 \\\n && curl -s -L https://julialang.s3.amazonaws.com/bin/linux/x64/0.5/julia-0.5.0-linux-x86_64.tar.gz | tar -C /opt/julia-0.5.0 -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.5.0 /opt/julia-0.5\n#   Install julia 0.6\nRUN mkdir -p /opt/julia-0.6.0-dev \\\n && curl -s -L https://status.julialang.org/download/linux-x86_64 | tar -C /opt/julia-0.6.0-dev -x -z --strip-components=1 -f -\nRUN ln -fs /opt/julia-0.6.0-dev /opt/julia-0.6\n#   Make v0.5 default julia\nRUN ln -fs /opt/julia-0.5 /opt/julia\n#   Setup juliarc\nRUN echo '(\"JULIA_LOAD_CACHE_PATH\" in keys(ENV)) \\\n && unshift!(Base.LOAD_CACHE_PATH, ENV[\"JULIA_LOAD_CACHE_PATH\"])' >> /opt/julia-0.4/etc/julia/juliarc.jl\nRUN echo '(\"JULIA_LOAD_CACHE_PATH\" in keys(ENV)) \\\n && unshift!(Base.LOAD_CACHE_PATH, ENV[\"JULIA_LOAD_CACHE_PATH\"])' >> /opt/julia-0.5/etc/julia/juliarc.jl\nRUN echo '(\"JULIA_LOAD_CACHE_PATH\" in keys(ENV)) \\\n && unshift!(Base.LOAD_CACHE_PATH, ENV[\"JULIA_LOAD_CACHE_PATH\"])' >> /opt/julia-0.6/etc/julia/juliarc.jl\nRUN echo \"PATH=\\\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/julia/bin\\\"\" > /etc/environment \\\n && echo \"export PATH\" >> /etc/environment \\\n && echo \"source /etc/environment\" >> /root/.bashrc\nENV SLURM_VER=\"16.05.6\"\n#   Create users, set up SSH keys (for MPI)\nRUN useradd -u 2001 -d /home/slurm slurm\nRUN useradd -u 6000 -ms /bin/bash juser\nADD etc/sudoers.d/juser /etc/sudoers.d/juser\nADD home/juser/ssh/config /home/juser/.ssh/config\nADD home/juser/ssh/id_rsa /home/juser/.ssh/id_rsa\nADD home/juser/ssh/id_rsa.pub /home/juser/.ssh/id_rsa.pub\nADD home/juser/ssh/authorized_keys /home/juser/.ssh/authorized_keys\nRUN chown -R juser:juser /home/juser/.ssh/\nRUN chmod 400 /home/juser/.ssh/*\n#   Install packages\nRUN apt-get update \\\n && apt-get -y dist-upgrade\nRUN apt-get install munge curl gcc make bzip2 supervisor python python-dev libmunge-dev libmunge2 lua5.3 lua5.3-dev libopenmpi-dev openmpi-bin gfortran vim python-mpi4py python-numpy python-psutil sudo psmisc software-properties-common python-software-properties iputils-ping openssh-server openssh-client -y\n#   Download, compile and install SLURM\nRUN curl -fsL http://www.schedmd.com/download/total/slurm-${SLURM_VER}.tar.bz2 | tar xfj - -C /opt/ \\\n && cd /opt/slurm-${SLURM_VER}/ \\\n && ./configure \\\n && make \\\n && make install\nADD etc/slurm/slurm.conf /usr/local/etc/slurm.conf\n#   Configure OpenSSH\n#   Also see: https://docs.docker.com/engine/examples/running_ssh_service/\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\nRUN mkdir /var/run/sshd\nRUN echo 'juser:juser' | chpasswd\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nADD etc/supervisord.d/sshd.conf /etc/supervisor/conf.d/sshd.conf\n#   Configure munge (for SLURM authentication)\nADD etc/munge/munge.key /etc/munge/munge.key\nRUN mkdir /var/run/munge \\\n && chown root /var/lib/munge \\\n && chown root /etc/munge \\\n && chmod 600 /var/run/munge \\\n && chmod 755 /run/munge \\\n && chmod 600 /etc/munge/munge.key\nADD etc/supervisord.d/munged.conf /etc/supervisor/conf.d/munged.conf\nRUN /opt/julia/bin/julia -e 'Pkg.clone(\"https://github.com/JuliaParallel/Slurm.jl.git\")'\nRUN /opt/julia/bin/julia -e 'Pkg.add(\"IJulia\")'\nRUN /opt/julia/bin/julia -e 'Pkg.build(\"IJulia\")'\nRUN /opt/julia/bin/julia -e 'import IJulia; import Slurm'\nEXPOSE 22/tcp\n","originalDockerfileUglifiedHash":"65355fe371c81306cb87971b4eb260b3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d2e88bd738301ca635ebd637d0701d3a77e9bafd.dockerfile"}