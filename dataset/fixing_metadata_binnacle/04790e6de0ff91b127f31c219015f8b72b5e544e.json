{"seed":3024442605,"processedDockerfileHash":"98c63568d73e621177dff59dd6c88664","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nENV SUMMARY=\"galne-runtime\"\nENV DESCRIPTION=\"Application runtime for Galenframework\"\nENV AUTHOR=\"Martin Reinhardt <contact@martinreinhardt-online.de\"\nENV TZ=\"Europe/Berlin\"\nENV NVM_DIR=\"/home/galen\"\nENV NODE_VERSION=\"8.12.0\"\nENV TEST_HOME=\"/var/jenkins_home\"\nENV NODE_PATH=\"$NVM_DIR/v$NODE_VERSION/lib/node_modules\"\nENV PATH=\"$NVM_DIR/v$NODE_VERSION/bin:$PATH\"\nLABEL summary=\"$SUMMARY\" \\\n      description=\"$DESCRIPTION\" \\\n      version=\"$VERSION\" \\\n      author=\"$AUTHOR\" \\\n      io.k8s.description=\"$DESCRIPTION\" \\\n      io.k8s.display-name=\"galen-runtime\" \\\n      io.k8s.tags=\"galen,galenframework,layout-testing,testing\" \\\n      com.redhat.component=\"galen-runtime-container org.label-schema.license=MIT\"\n#  ================================================\n#   Customize sources for apt-get\n#  ================================================\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\n#   No interactive frontend during docker build\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    DEBCONF_NONINTERACTIVE_SEEN=\"true\"\n#  ========================\n#   Miscellaneous packages\n#   Includes minimal runtime used for executing non GUI Java programs\n#  ========================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends bzip2=1.0.6-8ubuntu0.2 ca-certificates=20210119~16.04.1 openjdk-8-jre-headless=8u292-b10-0ubuntu1~16.04.1 tzdata=2021a-0ubuntu0.16.04 sudo=1.8.16-0ubuntu1.10 unzip=6.0-20ubuntu1.1 curl=7.47.0-1ubuntu2.19 wget=1.17.1-1ubuntu1.5 -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n && sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\n#  ===================\n#   Timezone settings\n#   Possible alternative: https://github.com/docker/docker/issues/3359#issuecomment-32150214\n#  ===================\nENV TZ=\"\\\"UTC\\\"\"\nRUN echo \"${TZ}\" > /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n#  ========================================\n#   Add normal user with passwordless sudo\n#  ========================================\nRUN useradd galen --shell /bin/bash --create-home \\\n && usermod -a -G sudo galen \\\n && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n && echo 'galen:secret' | chpasswd\n#  ===================================================\n#   Install xvfb\n#  ===================================================\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends xvfb=2:1.18.4-0ubuntu0.12 -y\n#  ===================================================\n#   Install Chrome\n#  ===================================================\nRUN echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/chrome.list \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-chrome-stable -y\nCOPY scripts/xvfb-chrome /usr/bin/xvfb-chrome\nRUN ln -sf /usr/bin/xvfb-chrome /usr/bin/google-chrome\n#  ===================================================\n#   Install firefox\n#  ===================================================\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends firefox=88.0+build2-0ubuntu0.16.04.1 -y\nCOPY scripts/xvfb-firefox /usr/bin/xvfb-firefox\nRUN ln -sf /usr/bin/xvfb-firefox /usr/bin/firefox\n#  ===================================================\n#   This is needed for PhantomJS\n#  ===================================================\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends bzip2=1.0.6-8ubuntu0.2 zip=3.0-11 -y\n#   clean up\nRUN apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/\n#  ===================================================\n#   Run the following commands as non-privileged user\n#  ===================================================\nUSER galen\n#  ===================================================\n#   Install nvm with node and npm\n#  ===================================================\nRUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n && . $NVM_DIR/nvm.sh \\\n && nvm install $NODE_VERSION \\\n && nvm alias default $NODE_VERSION \\\n && nvm use default \\\n && npm install galenframework-cli@$GALEN_VERSION -g\nVOLUME /var/test_scripts\nCOPY ./etc/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nENV SUMMARY=\"galne-runtime\"\nENV DESCRIPTION=\"Application runtime for Galenframework\"\nENV AUTHOR=\"Martin Reinhardt <contact@martinreinhardt-online.de\"\nENV TZ=\"Europe/Berlin\"\nENV NVM_DIR=\"/home/galen\"\nENV NODE_VERSION=\"8.12.0\"\nENV TEST_HOME=\"/var/jenkins_home\"\nENV NODE_PATH=\"$NVM_DIR/v$NODE_VERSION/lib/node_modules\"\nENV PATH=\"$NVM_DIR/v$NODE_VERSION/bin:$PATH\"\nLABEL summary=\"$SUMMARY\" \\\n      description=\"$DESCRIPTION\" \\\n      version=\"$VERSION\" \\\n      author=\"$AUTHOR\" \\\n      io.k8s.description=\"$DESCRIPTION\" \\\n      io.k8s.display-name=\"galen-runtime\" \\\n      io.k8s.tags=\"galen,galenframework,layout-testing,testing\" \\\n      com.redhat.component=\"galen-runtime-container org.label-schema.license=MIT\"\n# ================================================\n#  Customize sources for apt-get\n# ================================================\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\n#  No interactive frontend during docker build\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    DEBCONF_NONINTERACTIVE_SEEN=\"true\"\n# ========================\n#  Miscellaneous packages\n#  Includes minimal runtime used for executing non GUI Java programs\n# ========================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends bzip2 ca-certificates openjdk-8-jre-headless tzdata sudo unzip curl wget -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n && sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\n# ===================\n#  Timezone settings\n#  Possible alternative: https://github.com/docker/docker/issues/3359#issuecomment-32150214\n# ===================\nENV TZ=\"\\\"UTC\\\"\"\nRUN echo \"${TZ}\" > /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n# ========================================\n#  Add normal user with passwordless sudo\n# ========================================\nRUN useradd galen --shell /bin/bash --create-home \\\n && usermod -a -G sudo galen \\\n && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n && echo 'galen:secret' | chpasswd\n# ===================================================\n#  Install xvfb\n# ===================================================\nRUN set -x \\\n && apt-get update \\\n && apt-get install xvfb -y\n# ===================================================\n#  Install Chrome\n# ===================================================\nRUN echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/chrome.list \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && set -x \\\n && apt-get update \\\n && apt-get install google-chrome-stable -y\nADD scripts/xvfb-chrome /usr/bin/xvfb-chrome\nRUN ln -sf /usr/bin/xvfb-chrome /usr/bin/google-chrome\n# ===================================================\n#  Install firefox\n# ===================================================\nRUN set -x \\\n && apt-get update \\\n && apt-get install firefox -y\nADD scripts/xvfb-firefox /usr/bin/xvfb-firefox\nRUN ln -sf /usr/bin/xvfb-firefox /usr/bin/firefox\n# ===================================================\n#  This is needed for PhantomJS\n# ===================================================\nRUN set -x \\\n && apt-get update \\\n && apt-get install bzip2 zip -y\n#  clean up\nRUN apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/\n# ===================================================\n#  Run the following commands as non-privileged user\n# ===================================================\nUSER galen\n# ===================================================\n#  Install nvm with node and npm\n# ===================================================\nRUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n && . $NVM_DIR/nvm.sh \\\n && nvm install $NODE_VERSION \\\n && nvm alias default $NODE_VERSION \\\n && nvm use default \\\n && npm install galenframework-cli@$GALEN_VERSION -g\nVOLUME /var/test_scripts\nADD ./etc/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"213b34524d5b7d2723b4ccb4b44554ed","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nENV SUMMARY=\"galne-runtime\"\nENV DESCRIPTION=\"Application runtime for Galenframework\"\nENV AUTHOR=\"Martin Reinhardt <contact@martinreinhardt-online.de\"\nENV TZ=\"Europe/Berlin\"\nENV NVM_DIR=\"/home/galen\"\nENV NODE_VERSION=\"8.12.0\"\nENV TEST_HOME=\"/var/jenkins_home\"\nENV NODE_PATH=\"$NVM_DIR/v$NODE_VERSION/lib/node_modules\"\nENV PATH=\"$NVM_DIR/v$NODE_VERSION/bin:$PATH\"\nLABEL summary=\"$SUMMARY\" \\\n      description=\"$DESCRIPTION\" \\\n      version=\"$VERSION\" \\\n      author=\"$AUTHOR\" \\\n      io.k8s.description=\"$DESCRIPTION\" \\\n      io.k8s.display-name=\"galen-runtime\" \\\n      io.k8s.tags=\"galen,galenframework,layout-testing,testing\" \\\n      com.redhat.component=\"galen-runtime-container org.label-schema.license=MIT\"\n#  ================================================\n#   Customize sources for apt-get\n#  ================================================\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\n#   No interactive frontend during docker build\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    DEBCONF_NONINTERACTIVE_SEEN=\"true\"\n#  ========================\n#   Miscellaneous packages\n#   Includes minimal runtime used for executing non GUI Java programs\n#  ========================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends bzip2 ca-certificates openjdk-8-jre-headless tzdata sudo unzip curl wget -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n && sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\n#  ===================\n#   Timezone settings\n#   Possible alternative: https://github.com/docker/docker/issues/3359#issuecomment-32150214\n#  ===================\nENV TZ=\"\\\"UTC\\\"\"\nRUN echo \"${TZ}\" > /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n#  ========================================\n#   Add normal user with passwordless sudo\n#  ========================================\nRUN useradd galen --shell /bin/bash --create-home \\\n && usermod -a -G sudo galen \\\n && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n && echo 'galen:secret' | chpasswd\n#  ===================================================\n#   Install xvfb\n#  ===================================================\nRUN set -x \\\n && apt-get update \\\n && apt-get install xvfb -y\n#  ===================================================\n#   Install Chrome\n#  ===================================================\nRUN echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/chrome.list \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && set -x \\\n && apt-get update \\\n && apt-get install google-chrome-stable -y\nADD scripts/xvfb-chrome /usr/bin/xvfb-chrome\nRUN ln -sf /usr/bin/xvfb-chrome /usr/bin/google-chrome\n#  ===================================================\n#   Install firefox\n#  ===================================================\nRUN set -x \\\n && apt-get update \\\n && apt-get install firefox -y\nADD scripts/xvfb-firefox /usr/bin/xvfb-firefox\nRUN ln -sf /usr/bin/xvfb-firefox /usr/bin/firefox\n#  ===================================================\n#   This is needed for PhantomJS\n#  ===================================================\nRUN set -x \\\n && apt-get update \\\n && apt-get install bzip2 zip -y\n#   clean up\nRUN apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/\n#  ===================================================\n#   Run the following commands as non-privileged user\n#  ===================================================\nUSER galen\n#  ===================================================\n#   Install nvm with node and npm\n#  ===================================================\nRUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n && . $NVM_DIR/nvm.sh \\\n && nvm install $NODE_VERSION \\\n && nvm alias default $NODE_VERSION \\\n && nvm use default \\\n && npm install galenframework-cli@$GALEN_VERSION -g\nVOLUME /var/test_scripts\nADD ./etc/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"827da8d27e5b416c0e23aa01b37eacbf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/04790e6de0ff91b127f31c219015f8b72b5e544e.dockerfile"}