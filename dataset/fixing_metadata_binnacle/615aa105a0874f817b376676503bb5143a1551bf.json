{"seed":11396056,"processedDockerfileHash":"f7b32516defde947d5a45c89728316aa","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.8\n#  #######################################################################\n#   Set up OS\n#  #######################################################################\nEXPOSE 80/tcp 443/tcp\nWORKDIR /root\nENV CPPFLAGS=\"-s\" \\\n    SHELL=\"/bin/bash\"\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"jupyter-notebook-secure\"]\nCOPY util/* /usr/local/bin/\nCOPY config/bashrc /root/.bashrc\nCOPY patches /root/.patches\nCOPY config/repositories /etc/apk/repositories\nCOPY config/*.rsa.pub /etc/apk/keys/\nRUN min-apk binutils \\\n && min-apk bash bzip2 ca-certificates curl file gcc g++ git libressl libsodium-dev make openssh-client patch readline-dev tar tini wget \\\n && echo \"### Install specific version of zeromq from source\" \\\n && min-package https://archive.org/download/zeromq_4.0.4/zeromq-4.0.4.tar.gz \\\n && ln -s /usr/local/lib/libzmq.so.3 /usr/local/lib/libzmq.so.4 \\\n && strip --strip-unneeded --strip-debug /usr/local/bin/curve_keygen \\\n && echo \"### Alpine compatibility patch for various packages\" \\\n && if [ ! -f /usr/include/xlocale.h ] ; then echo '#include <locale.h>' > /usr/include/xlocale.h; fi \\\n && echo \"### Cleanup unneeded files\" \\\n && clean-terminfo \\\n && rm /usr/local/share/man/*/zmq* \\\n && rm -rf /usr/include/c++/*/java \\\n && rm -rf /usr/include/c++/*/javax \\\n && rm -rf /usr/include/c++/*/gnu/awt \\\n && rm -rf /usr/include/c++/*/gnu/classpath \\\n && rm -rf /usr/include/c++/*/gnu/gcj \\\n && rm -rf /usr/include/c++/*/gnu/java \\\n && rm -rf /usr/include/c++/*/gnu/javax \\\n && rm /usr/libexec/gcc/x86_64-alpine-linux-musl/*/cc1obj \\\n && rm /usr/bin/gcov* \\\n && rm /usr/bin/gprof \\\n && rm /usr/bin/*gcj\n#  #######################################################################\n#   Install python2 kernel\n#  #######################################################################\nRUN min-apk py2-cffi py2-cparser py2-cryptography py2-dateutil py2-decorator py2-jinja2 py2-openssl py2-pip py2-ptyprocess py2-six py2-tornado py2-zmq python2 python2-dev \\\n && pip install setuptools==67.6.1 pip==23.1 --no-cache-dir --upgrade \\\n && min-pip2 entrypoints notebook==5.2.2 ipykernel ipywidgets==6.0.1 pypki2 ipydeps \\\n && echo \"### Cleanup unneeded files\" \\\n && rm -rf /usr/lib/python2*/*/tests \\\n && rm -rf /usr/lib/python2*/ensurepip \\\n && rm -rf /usr/lib/python2*/idlelib \\\n && rm -rf /usr/share/man/* \\\n && clean-pyc-files /usr/lib/python2*\n#  #######################################################################\n#   Install Python3, Jupyter, ipydeps\n#  #######################################################################\nCOPY config/jupyter /root/.jupyter/\nCOPY config/ipydeps /root/.config/ipydeps/\n#   TODO: decorator conflicts with the c++ kernel apk, which we are\n#   having trouble re-building.  Just let pip install it for now.\n#      py3-decorator \\\nRUN min-apk libffi-dev py3-pygments py3-cffi py3-cryptography py3-jinja2 py3-openssl py3-pexpect py3-tornado python3 python3-dev \\\n && pip3 install --no-cache-dir --upgrade setuptools pip \\\n && mkdir -p `python -m site --user-site ` \\\n && min-pip3 notebook==5.2.2 jupyter ipywidgets==6.0.1 jupyter_dashboards pypki2 ipydeps ordo jupyter_nbgallery \\\n && echo \"### Install jupyter extensions\" \\\n && jupyter nbextension enable --py --sys-prefix widgetsnbextension \\\n && jupyter serverextension enable --py jupyter_nbgallery \\\n && jupyter nbextension install --py jupyter_nbgallery \\\n && jupyter nbextension enable jupyter_nbgallery --py \\\n && jupyter dashboards quick-setup --sys-prefix \\\n && jupyter nbextension install --py ordo \\\n && jupyter nbextension enable ordo --py \\\n && echo \"### Cleanup unneeded files\" \\\n && rm -rf /usr/lib/python3*/*/tests \\\n && rm -rf /usr/lib/python3*/ensurepip \\\n && rm -rf /usr/lib/python3*/idlelib \\\n && rm -f /usr/lib/python3*/distutils/command/*exe \\\n && rm -rf /usr/share/man/* \\\n && clean-pyc-files /usr/lib/python3* \\\n && echo \"### Apply patches\" \\\n && cd / \\\n && sed -i 's/_max_upload_size_mb = [0-9][0-9]/_max_upload_size_mb = 50/g' /usr/lib/python3*/site-packages/notebook/static/tree/js/notebooklist.js /usr/lib/python3*/site-packages/notebook/static/tree/js/main.min.js /usr/lib/python3*/site-packages/notebook/static/tree/js/main.min.js.map \\\n && patch -p0 < /root/.patches/ipykernel_displayhook \\\n && patch -p0 < /root/.patches/websocket_keepalive\n#  #######################################################################\n#   Add dynamic kernels\n#  #######################################################################\nCOPY kernels /usr/share/jupyter/kernels/\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\" \\\n    SPARK_HOME=\"/usr/spark\" \\\n    GOPATH=\"/go\"\nENV PATH=\"$PATH:$JAVA_HOME/bin:$SPARK_HOME/bin:$GOPATH/bin:/usr/share/jupyter/kernels/installers\" \\\n    LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:$JAVA_HOME/jre/lib/amd64/server\"\n#  #######################################################################\n#   Add simple kernels (no extra apks)\n#  #######################################################################\nRUN min-pip3 bash_kernel jupyter_c_kernel==1.0.0 \\\n && python3 -m bash_kernel.install \\\n && clean-pyc-files /usr/lib/python3*\n#  #######################################################################\n#   Metadata\n#  #######################################################################\nENV NBGALLERY_CLIENT_VERSION=\"7.8.4\"\nLABEL gallery.nb.version=\"$NBGALLERY_CLIENT_VERSION\" \\\n      gallery.nb.description=\"Minimal alpine-based Jupyter notebook server\" \\\n      gallery.nb.URL=\"https://github.com/nbgallery\" \\\n      maintainer=\"https://github.com/nbgallery\"\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.8\n# #######################################################################\n#  Set up OS\n# #######################################################################\nEXPOSE 80/tcp 443/tcp\nWORKDIR /root\nENV CPPFLAGS=\"-s\" \\\n    SHELL=\"/bin/bash\"\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"jupyter-notebook-secure\"]\nCOPY util/* /usr/local/bin/\nCOPY config/bashrc /root/.bashrc\nCOPY patches /root/.patches\nCOPY config/repositories /etc/apk/repositories\nCOPY config/*.rsa.pub /etc/apk/keys/\nRUN min-apk binutils \\\n && min-apk bash bzip2 ca-certificates curl file gcc g++ git libressl libsodium-dev make openssh-client patch readline-dev tar tini wget \\\n && echo \"### Install specific version of zeromq from source\" \\\n && min-package https://archive.org/download/zeromq_4.0.4/zeromq-4.0.4.tar.gz \\\n && ln -s /usr/local/lib/libzmq.so.3 /usr/local/lib/libzmq.so.4 \\\n && strip --strip-unneeded --strip-debug /usr/local/bin/curve_keygen \\\n && echo \"### Alpine compatibility patch for various packages\" \\\n && if [ ! -f /usr/include/xlocale.h ] ; then echo '#include <locale.h>' > /usr/include/xlocale.h; fi \\\n && echo \"### Cleanup unneeded files\" \\\n && clean-terminfo \\\n && rm /usr/local/share/man/*/zmq* \\\n && rm -rf /usr/include/c++/*/java \\\n && rm -rf /usr/include/c++/*/javax \\\n && rm -rf /usr/include/c++/*/gnu/awt \\\n && rm -rf /usr/include/c++/*/gnu/classpath \\\n && rm -rf /usr/include/c++/*/gnu/gcj \\\n && rm -rf /usr/include/c++/*/gnu/java \\\n && rm -rf /usr/include/c++/*/gnu/javax \\\n && rm /usr/libexec/gcc/x86_64-alpine-linux-musl/*/cc1obj \\\n && rm /usr/bin/gcov* \\\n && rm /usr/bin/gprof \\\n && rm /usr/bin/*gcj\n# #######################################################################\n#  Install python2 kernel\n# #######################################################################\nRUN min-apk py2-cffi py2-cparser py2-cryptography py2-dateutil py2-decorator py2-jinja2 py2-openssl py2-pip py2-ptyprocess py2-six py2-tornado py2-zmq python2 python2-dev \\\n && pip install setuptools pip --no-cache-dir --upgrade \\\n && min-pip2 entrypoints notebook==5.2.2 ipykernel ipywidgets==6.0.1 pypki2 ipydeps \\\n && echo \"### Cleanup unneeded files\" \\\n && rm -rf /usr/lib/python2*/*/tests \\\n && rm -rf /usr/lib/python2*/ensurepip \\\n && rm -rf /usr/lib/python2*/idlelib \\\n && rm -rf /usr/share/man/* \\\n && clean-pyc-files /usr/lib/python2*\n# #######################################################################\n#  Install Python3, Jupyter, ipydeps\n# #######################################################################\nCOPY config/jupyter /root/.jupyter/\nCOPY config/ipydeps /root/.config/ipydeps/\n#  TODO: decorator conflicts with the c++ kernel apk, which we are\n#  having trouble re-building.  Just let pip install it for now.\n#     py3-decorator \\\nRUN min-apk libffi-dev py3-pygments py3-cffi py3-cryptography py3-jinja2 py3-openssl py3-pexpect py3-tornado python3 python3-dev \\\n && pip3 install --no-cache-dir --upgrade setuptools pip \\\n && mkdir -p `python -m site --user-site ` \\\n && min-pip3 notebook==5.2.2 jupyter ipywidgets==6.0.1 jupyter_dashboards pypki2 ipydeps ordo jupyter_nbgallery \\\n && echo \"### Install jupyter extensions\" \\\n && jupyter nbextension enable --py --sys-prefix widgetsnbextension \\\n && jupyter serverextension enable --py jupyter_nbgallery \\\n && jupyter nbextension install --py jupyter_nbgallery \\\n && jupyter nbextension enable jupyter_nbgallery --py \\\n && jupyter dashboards quick-setup --sys-prefix \\\n && jupyter nbextension install --py ordo \\\n && jupyter nbextension enable ordo --py \\\n && echo \"### Cleanup unneeded files\" \\\n && rm -rf /usr/lib/python3*/*/tests \\\n && rm -rf /usr/lib/python3*/ensurepip \\\n && rm -rf /usr/lib/python3*/idlelib \\\n && rm -f /usr/lib/python3*/distutils/command/*exe \\\n && rm -rf /usr/share/man/* \\\n && clean-pyc-files /usr/lib/python3* \\\n && echo \"### Apply patches\" \\\n && cd / \\\n && sed -i 's/_max_upload_size_mb = [0-9][0-9]/_max_upload_size_mb = 50/g' /usr/lib/python3*/site-packages/notebook/static/tree/js/notebooklist.js /usr/lib/python3*/site-packages/notebook/static/tree/js/main.min.js /usr/lib/python3*/site-packages/notebook/static/tree/js/main.min.js.map \\\n && patch -p0 < /root/.patches/ipykernel_displayhook \\\n && patch -p0 < /root/.patches/websocket_keepalive\n# #######################################################################\n#  Add dynamic kernels\n# #######################################################################\nADD kernels /usr/share/jupyter/kernels/\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\" \\\n    SPARK_HOME=\"/usr/spark\" \\\n    GOPATH=\"/go\"\nENV PATH=\"$PATH:$JAVA_HOME/bin:$SPARK_HOME/bin:$GOPATH/bin:/usr/share/jupyter/kernels/installers\" \\\n    LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:$JAVA_HOME/jre/lib/amd64/server\"\n# #######################################################################\n#  Add simple kernels (no extra apks)\n# #######################################################################\nRUN min-pip3 bash_kernel jupyter_c_kernel==1.0.0 \\\n && python3 -m bash_kernel.install \\\n && clean-pyc-files /usr/lib/python3*\n# #######################################################################\n#  Metadata\n# #######################################################################\nENV NBGALLERY_CLIENT_VERSION=\"7.8.4\"\nLABEL gallery.nb.version=\"$NBGALLERY_CLIENT_VERSION\" \\\n      gallery.nb.description=\"Minimal alpine-based Jupyter notebook server\" \\\n      gallery.nb.URL=\"https://github.com/nbgallery\" \\\n      maintainer=\"https://github.com/nbgallery\"\n","injectedSmells":[],"originalDockerfileHash":"c33dfa1acd0c5e436a6dbf3d00ade3d8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.8\n#  #######################################################################\n#   Set up OS\n#  #######################################################################\nEXPOSE 80/tcp 443/tcp\nWORKDIR /root\nENV CPPFLAGS=\"-s\" \\\n    SHELL=\"/bin/bash\"\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"jupyter-notebook-secure\"]\nCOPY util/* /usr/local/bin/\nCOPY config/bashrc /root/.bashrc\nCOPY patches /root/.patches\nCOPY config/repositories /etc/apk/repositories\nCOPY config/*.rsa.pub /etc/apk/keys/\nRUN min-apk binutils \\\n && min-apk bash bzip2 ca-certificates curl file gcc g++ git libressl libsodium-dev make openssh-client patch readline-dev tar tini wget \\\n && echo \"### Install specific version of zeromq from source\" \\\n && min-package https://archive.org/download/zeromq_4.0.4/zeromq-4.0.4.tar.gz \\\n && ln -s /usr/local/lib/libzmq.so.3 /usr/local/lib/libzmq.so.4 \\\n && strip --strip-unneeded --strip-debug /usr/local/bin/curve_keygen \\\n && echo \"### Alpine compatibility patch for various packages\" \\\n && if [ ! -f /usr/include/xlocale.h ] ; then echo '#include <locale.h>' > /usr/include/xlocale.h; fi \\\n && echo \"### Cleanup unneeded files\" \\\n && clean-terminfo \\\n && rm /usr/local/share/man/*/zmq* \\\n && rm -rf /usr/include/c++/*/java \\\n && rm -rf /usr/include/c++/*/javax \\\n && rm -rf /usr/include/c++/*/gnu/awt \\\n && rm -rf /usr/include/c++/*/gnu/classpath \\\n && rm -rf /usr/include/c++/*/gnu/gcj \\\n && rm -rf /usr/include/c++/*/gnu/java \\\n && rm -rf /usr/include/c++/*/gnu/javax \\\n && rm /usr/libexec/gcc/x86_64-alpine-linux-musl/*/cc1obj \\\n && rm /usr/bin/gcov* \\\n && rm /usr/bin/gprof \\\n && rm /usr/bin/*gcj\n#  #######################################################################\n#   Install python2 kernel\n#  #######################################################################\nRUN min-apk py2-cffi py2-cparser py2-cryptography py2-dateutil py2-decorator py2-jinja2 py2-openssl py2-pip py2-ptyprocess py2-six py2-tornado py2-zmq python2 python2-dev \\\n && pip install setuptools pip --no-cache-dir --upgrade \\\n && min-pip2 entrypoints notebook==5.2.2 ipykernel ipywidgets==6.0.1 pypki2 ipydeps \\\n && echo \"### Cleanup unneeded files\" \\\n && rm -rf /usr/lib/python2*/*/tests \\\n && rm -rf /usr/lib/python2*/ensurepip \\\n && rm -rf /usr/lib/python2*/idlelib \\\n && rm -rf /usr/share/man/* \\\n && clean-pyc-files /usr/lib/python2*\n#  #######################################################################\n#   Install Python3, Jupyter, ipydeps\n#  #######################################################################\nCOPY config/jupyter /root/.jupyter/\nCOPY config/ipydeps /root/.config/ipydeps/\n#   TODO: decorator conflicts with the c++ kernel apk, which we are\n#   having trouble re-building.  Just let pip install it for now.\n#      py3-decorator \\\nRUN min-apk libffi-dev py3-pygments py3-cffi py3-cryptography py3-jinja2 py3-openssl py3-pexpect py3-tornado python3 python3-dev \\\n && pip3 install --no-cache-dir --upgrade setuptools pip \\\n && mkdir -p `python -m site --user-site ` \\\n && min-pip3 notebook==5.2.2 jupyter ipywidgets==6.0.1 jupyter_dashboards pypki2 ipydeps ordo jupyter_nbgallery \\\n && echo \"### Install jupyter extensions\" \\\n && jupyter nbextension enable --py --sys-prefix widgetsnbextension \\\n && jupyter serverextension enable --py jupyter_nbgallery \\\n && jupyter nbextension install --py jupyter_nbgallery \\\n && jupyter nbextension enable jupyter_nbgallery --py \\\n && jupyter dashboards quick-setup --sys-prefix \\\n && jupyter nbextension install --py ordo \\\n && jupyter nbextension enable ordo --py \\\n && echo \"### Cleanup unneeded files\" \\\n && rm -rf /usr/lib/python3*/*/tests \\\n && rm -rf /usr/lib/python3*/ensurepip \\\n && rm -rf /usr/lib/python3*/idlelib \\\n && rm -f /usr/lib/python3*/distutils/command/*exe \\\n && rm -rf /usr/share/man/* \\\n && clean-pyc-files /usr/lib/python3* \\\n && echo \"### Apply patches\" \\\n && cd / \\\n && sed -i 's/_max_upload_size_mb = [0-9][0-9]/_max_upload_size_mb = 50/g' /usr/lib/python3*/site-packages/notebook/static/tree/js/notebooklist.js /usr/lib/python3*/site-packages/notebook/static/tree/js/main.min.js /usr/lib/python3*/site-packages/notebook/static/tree/js/main.min.js.map \\\n && patch -p0 < /root/.patches/ipykernel_displayhook \\\n && patch -p0 < /root/.patches/websocket_keepalive\n#  #######################################################################\n#   Add dynamic kernels\n#  #######################################################################\nADD kernels /usr/share/jupyter/kernels/\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\" \\\n    SPARK_HOME=\"/usr/spark\" \\\n    GOPATH=\"/go\"\nENV PATH=\"$PATH:$JAVA_HOME/bin:$SPARK_HOME/bin:$GOPATH/bin:/usr/share/jupyter/kernels/installers\" \\\n    LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:$JAVA_HOME/jre/lib/amd64/server\"\n#  #######################################################################\n#   Add simple kernels (no extra apks)\n#  #######################################################################\nRUN min-pip3 bash_kernel jupyter_c_kernel==1.0.0 \\\n && python3 -m bash_kernel.install \\\n && clean-pyc-files /usr/lib/python3*\n#  #######################################################################\n#   Metadata\n#  #######################################################################\nENV NBGALLERY_CLIENT_VERSION=\"7.8.4\"\nLABEL gallery.nb.version=\"$NBGALLERY_CLIENT_VERSION\" \\\n      gallery.nb.description=\"Minimal alpine-based Jupyter notebook server\" \\\n      gallery.nb.URL=\"https://github.com/nbgallery\" \\\n      maintainer=\"https://github.com/nbgallery\"\n","originalDockerfileUglifiedHash":"e3f4c4d46cb2edc88d6752ff94fe8ae8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/615aa105a0874f817b376676503bb5143a1551bf.dockerfile"}