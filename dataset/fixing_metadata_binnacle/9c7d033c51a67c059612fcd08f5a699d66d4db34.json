{"seed":3555384979,"processedDockerfileHash":"cc18591859df8241b9164febd74de090","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER CoNWeT Lab. Universidad Polit√©cnica de Madrid\nENV API_VERSION=\"develop\"\nRUN apt-get update ; apt-get install --no-install-recommends python2.7=2.7.12-1ubuntu0~16.04.18 python-pip=8.1.1-2ubuntu0.6 git=1:2.7.4-0ubuntu1.10 wget=1.17.1-1ubuntu1.5 unzip=6.0-20ubuntu1.1 maven=3.3.9-3 mysql-client=5.7.33-0ubuntu0.16.04.1 openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 -y --fix-missing ; wget http://download.java.net/glassfish/4.1/release/glassfish-4.1.zip ; unzip glassfish-4.1.zip ; pip install sh==2.0.3 ; wget http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.39.tar.gz ; tar -xvf mysql-connector-java-5.1.39.tar.gz ; cp ./mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar glassfish4/glassfish/domains/domain1/lib ; mkdir /apis\nWORKDIR /apis\nRUN mkdir wars ; git clone https://github.com/FIWARE-TMForum/DSPRODUCTCATALOG2.git\nWORKDIR DSPRODUCTCATALOG2\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/pcatv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSProductCatalog.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPRODUCTORDERING.git\nWORKDIR DSPRODUCTORDERING\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/podbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./src/main/java/org/tmf/dsmapi/settings.properties ./src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSProductOrdering.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPRODUCTINVENTORY.git\nWORKDIR DSPRODUCTINVENTORY\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/pidbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSProductInventory.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPARTYMANAGEMENT.git\nWORKDIR DSPARTYMANAGEMENT\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/partydb/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSPartyManagement.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSBILLINGMANAGEMENT.git\nWORKDIR DSBILLINGMANAGEMENT\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/bmdbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSBillingManagement.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSCUSTOMER.git\nWORKDIR DSCUSTOMER\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/customerdbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSCustomerManagement.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSUSAGEMANAGEMENT.git\nWORKDIR DSUSAGEMANAGEMENT\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/usagedbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSUsageManagement.war ../wars/\nWORKDIR ../\n#   Compile RSS\nRUN git clone https://github.com/FIWARE-TMForum/business-ecosystem-rss.git\nWORKDIR business-ecosystem-rss\nRUN git checkout $VERSION\nRUN mvn install -DskipTests \\\n && mkdir /etc/default/rss/\n#   Set volume for property files\nVOLUME /etc/default/rss\nWORKDIR ../\n#   Create a volume for exposing war files\nRUN mkdir wars-ext\nVOLUME /apis/wars-ext\nWORKDIR /\n#   Deploy charging backend\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc=4:5.3.1-1ubuntu1 vim=2:7.4.1689-3ubuntu1.5 git=1:2.7.4-0ubuntu1.10 wkhtmltopdf=0.12.2.4-1 xvfb=2:1.18.4-0ubuntu0.12 python2.7=2.7.12-1ubuntu0~16.04.18 python-pip=8.1.1-2ubuntu0.6 python-dev=2.7.12-1~16.04 build-essential=12.1ubuntu2 libssl-dev=1.0.2g-1ubuntu4.20 libffi-dev=3.2.1-4 apache2=2.4.18-2ubuntu3.17 libapache2-mod-wsgi=4.3.0-1.1ubuntu1 -y --fix-missing \\\n && git clone https://github.com/FIWARE-TMForum/business-ecosystem-charging-backend.git \\\n && pip install sh==2.0.3\nWORKDIR business-ecosystem-charging-backend\nRUN git checkout $VERSION \\\n && mkdir ./src/media \\\n && mkdir ./src/media/bills \\\n && mkdir ./src/media/assets \\\n && mkdir ./src/plugins \\\n && mkdir ./src/user_settings\nENV WORKSPACE=\"`pwd`\"\n#   Install dependencies and configure system to use volume settings\nRUN ./python-dep-install.sh \\\n && echo \"from user_settings.settings import *\" > ./src/settings.py\n#   Create volumes\nVOLUME /business-ecosystem-charging-backend/src/media/bills\nVOLUME /business-ecosystem-charging-backend/src/media/assets\nVOLUME /business-ecosystem-charging-backend/src/plugins\nVOLUME /business-ecosystem-charging-backend/src/user_settings\nVOLUME /business-ecosystem-charging-backend/src/wstore/asset_manager/resource_plugins/plugins\nWORKDIR src\nRUN rm wsgi.py\nCOPY wsgi.py .\nWORKDIR /etc/apache2/\nCOPY charging.conf ./sites-available\nRUN ln -s ../sites-available/charging.conf ./sites-enabled/charging.conf \\\n && sed -i \"s|Listen 80|Listen 8006|g\" ports.conf\n#   Deploy logic proxy\nWORKDIR /\nRUN git clone https://github.com/FIWARE-TMForum/business-ecosystem-logic-proxy\nWORKDIR business-ecosystem-logic-proxy\nRUN wget https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.xz \\\n && tar -xvf node-v6.9.1-linux-x64.tar.xz \\\n && echo 'export PATH=$PATH:/business-ecosystem-logic-proxy/node-v6.9.1-linux-x64/bin' >> ~/.bashrc \\\n && git checkout $VERSION \\\n && mkdir indexes \\\n && mkdir themes\nVOLUME /business-ecosystem-logic-proxy/indexes\nVOLUME /business-ecosystem-logic-proxy/themes\nVOLUME /business-ecosystem-logic-proxy/static\nRUN export PATH=$PATH:/business-ecosystem-logic-proxy/node-v6.9.1-linux-x64/bin \\\n && ./install.sh \\\n && mkdir etc \\\n && cp config.js.template etc/config.js \\\n && echo \"module.exports = require('./etc/config');\" > config.js\nCOPY ./getConfig.js /business-ecosystem-logic-proxy\nWORKDIR /\nCOPY ./entrypoint.sh /\nCOPY ./apis-entrypoint.py /\nEXPOSE 8000/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER CoNWeT Lab. Universidad Polit√©cnica de Madrid\nENV API_VERSION=\"develop\"\nRUN apt-get update ; apt-get install python2.7 python-pip git wget unzip maven mysql-client openjdk-8-jdk -y --fix-missing ; wget http://download.java.net/glassfish/4.1/release/glassfish-4.1.zip ; unzip glassfish-4.1.zip ; pip install sh ; wget http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.39.tar.gz ; tar -xvf mysql-connector-java-5.1.39.tar.gz ; cp ./mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar glassfish4/glassfish/domains/domain1/lib ; mkdir /apis\nWORKDIR /apis\nRUN mkdir wars ; git clone https://github.com/FIWARE-TMForum/DSPRODUCTCATALOG2.git\nWORKDIR DSPRODUCTCATALOG2\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/pcatv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSProductCatalog.war ../wars/\nWORKDIR ../\n#  Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPRODUCTORDERING.git\nWORKDIR DSPRODUCTORDERING\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/podbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./src/main/java/org/tmf/dsmapi/settings.properties ./src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSProductOrdering.war ../wars/\nWORKDIR ../\n#  Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPRODUCTINVENTORY.git\nWORKDIR DSPRODUCTINVENTORY\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/pidbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSProductInventory.war ../wars/\nWORKDIR ../\n#  Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPARTYMANAGEMENT.git\nWORKDIR DSPARTYMANAGEMENT\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/partydb/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSPartyManagement.war ../wars/\nWORKDIR ../\n#  Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSBILLINGMANAGEMENT.git\nWORKDIR DSBILLINGMANAGEMENT\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/bmdbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSBillingManagement.war ../wars/\nWORKDIR ../\n#  Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSCUSTOMER.git\nWORKDIR DSCUSTOMER\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/customerdbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSCustomerManagement.war ../wars/\nWORKDIR ../\n#  Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSUSAGEMANAGEMENT.git\nWORKDIR DSUSAGEMANAGEMENT\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/usagedbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSUsageManagement.war ../wars/\nWORKDIR ../\n#  Compile RSS\nRUN git clone https://github.com/FIWARE-TMForum/business-ecosystem-rss.git\nWORKDIR business-ecosystem-rss\nRUN git checkout $VERSION\nRUN mvn install -DskipTests \\\n && mkdir /etc/default/rss/\n#  Set volume for property files\nVOLUME /etc/default/rss\nWORKDIR ../\n#  Create a volume for exposing war files\nRUN mkdir wars-ext\nVOLUME /apis/wars-ext\nWORKDIR /\n#  Deploy charging backend\nRUN apt-get update \\\n && apt-get install gcc vim git wkhtmltopdf xvfb python2.7 python-pip python-dev build-essential libssl-dev libffi-dev apache2 libapache2-mod-wsgi -y --fix-missing \\\n && git clone https://github.com/FIWARE-TMForum/business-ecosystem-charging-backend.git \\\n && pip install sh\nWORKDIR business-ecosystem-charging-backend\nRUN git checkout $VERSION \\\n && mkdir ./src/media \\\n && mkdir ./src/media/bills \\\n && mkdir ./src/media/assets \\\n && mkdir ./src/plugins \\\n && mkdir ./src/user_settings\nENV WORKSPACE=\"`pwd`\"\n#  Install dependencies and configure system to use volume settings\nRUN ./python-dep-install.sh \\\n && echo \"from user_settings.settings import *\" > ./src/settings.py\n#  Create volumes\nVOLUME /business-ecosystem-charging-backend/src/media/bills\nVOLUME /business-ecosystem-charging-backend/src/media/assets\nVOLUME /business-ecosystem-charging-backend/src/plugins\nVOLUME /business-ecosystem-charging-backend/src/user_settings\nVOLUME /business-ecosystem-charging-backend/src/wstore/asset_manager/resource_plugins/plugins\nWORKDIR src\nRUN rm wsgi.py\nCOPY wsgi.py .\nWORKDIR /etc/apache2/\nCOPY charging.conf ./sites-available\nRUN ln -s ../sites-available/charging.conf ./sites-enabled/charging.conf \\\n && sed -i \"s|Listen 80|Listen 8006|g\" ports.conf\n#  Deploy logic proxy\nWORKDIR /\nRUN git clone https://github.com/FIWARE-TMForum/business-ecosystem-logic-proxy\nWORKDIR business-ecosystem-logic-proxy\nRUN wget https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.xz \\\n && tar -xvf node-v6.9.1-linux-x64.tar.xz \\\n && echo 'export PATH=$PATH:/business-ecosystem-logic-proxy/node-v6.9.1-linux-x64/bin' >> ~/.bashrc \\\n && git checkout $VERSION \\\n && mkdir indexes \\\n && mkdir themes\nVOLUME /business-ecosystem-logic-proxy/indexes\nVOLUME /business-ecosystem-logic-proxy/themes\nVOLUME /business-ecosystem-logic-proxy/static\nRUN export PATH=$PATH:/business-ecosystem-logic-proxy/node-v6.9.1-linux-x64/bin \\\n && ./install.sh \\\n && mkdir etc \\\n && cp config.js.template etc/config.js \\\n && echo \"module.exports = require('./etc/config');\" > config.js\nCOPY ./getConfig.js /business-ecosystem-logic-proxy\nWORKDIR /\nCOPY ./entrypoint.sh /\nCOPY ./apis-entrypoint.py /\nEXPOSE 8000/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"c45220844e61ecd8315c1e32d3eade93","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER CoNWeT Lab. Universidad Polit√©cnica de Madrid\nENV API_VERSION=\"develop\"\nRUN apt-get update ; apt-get install python2.7 python-pip git wget unzip maven mysql-client openjdk-8-jdk -y --fix-missing ; wget http://download.java.net/glassfish/4.1/release/glassfish-4.1.zip ; unzip glassfish-4.1.zip ; pip install sh ; wget http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.39.tar.gz ; tar -xvf mysql-connector-java-5.1.39.tar.gz ; cp ./mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar glassfish4/glassfish/domains/domain1/lib ; mkdir /apis\nWORKDIR /apis\nRUN mkdir wars ; git clone https://github.com/FIWARE-TMForum/DSPRODUCTCATALOG2.git\nWORKDIR DSPRODUCTCATALOG2\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/pcatv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSProductCatalog.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPRODUCTORDERING.git\nWORKDIR DSPRODUCTORDERING\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/podbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./src/main/java/org/tmf/dsmapi/settings.properties ./src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSProductOrdering.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPRODUCTINVENTORY.git\nWORKDIR DSPRODUCTINVENTORY\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/pidbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSProductInventory.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPARTYMANAGEMENT.git\nWORKDIR DSPARTYMANAGEMENT\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/partydb/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSPartyManagement.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSBILLINGMANAGEMENT.git\nWORKDIR DSBILLINGMANAGEMENT\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/bmdbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSBillingManagement.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSCUSTOMER.git\nWORKDIR DSCUSTOMER\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/customerdbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSCustomerManagement.war ../wars/\nWORKDIR ../\n#   Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSUSAGEMANAGEMENT.git\nWORKDIR DSUSAGEMANAGEMENT\nRUN git checkout $API_VERSION ; sed -i 's/jdbc\\/sample/jdbc\\/usagedbv2/g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml ; if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ] ; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties ; fi ; grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml ; mvn install ; mv ./target/DSUsageManagement.war ../wars/\nWORKDIR ../\n#   Compile RSS\nRUN git clone https://github.com/FIWARE-TMForum/business-ecosystem-rss.git\nWORKDIR business-ecosystem-rss\nRUN git checkout $VERSION\nRUN mvn install -DskipTests \\\n && mkdir /etc/default/rss/\n#   Set volume for property files\nVOLUME /etc/default/rss\nWORKDIR ../\n#   Create a volume for exposing war files\nRUN mkdir wars-ext\nVOLUME /apis/wars-ext\nWORKDIR /\n#   Deploy charging backend\nRUN apt-get update \\\n && apt-get install gcc vim git wkhtmltopdf xvfb python2.7 python-pip python-dev build-essential libssl-dev libffi-dev apache2 libapache2-mod-wsgi -y --fix-missing \\\n && git clone https://github.com/FIWARE-TMForum/business-ecosystem-charging-backend.git \\\n && pip install sh\nWORKDIR business-ecosystem-charging-backend\nRUN git checkout $VERSION \\\n && mkdir ./src/media \\\n && mkdir ./src/media/bills \\\n && mkdir ./src/media/assets \\\n && mkdir ./src/plugins \\\n && mkdir ./src/user_settings\nENV WORKSPACE=\"`pwd`\"\n#   Install dependencies and configure system to use volume settings\nRUN ./python-dep-install.sh \\\n && echo \"from user_settings.settings import *\" > ./src/settings.py\n#   Create volumes\nVOLUME /business-ecosystem-charging-backend/src/media/bills\nVOLUME /business-ecosystem-charging-backend/src/media/assets\nVOLUME /business-ecosystem-charging-backend/src/plugins\nVOLUME /business-ecosystem-charging-backend/src/user_settings\nVOLUME /business-ecosystem-charging-backend/src/wstore/asset_manager/resource_plugins/plugins\nWORKDIR src\nRUN rm wsgi.py\nCOPY wsgi.py .\nWORKDIR /etc/apache2/\nCOPY charging.conf ./sites-available\nRUN ln -s ../sites-available/charging.conf ./sites-enabled/charging.conf \\\n && sed -i \"s|Listen 80|Listen 8006|g\" ports.conf\n#   Deploy logic proxy\nWORKDIR /\nRUN git clone https://github.com/FIWARE-TMForum/business-ecosystem-logic-proxy\nWORKDIR business-ecosystem-logic-proxy\nRUN wget https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.xz \\\n && tar -xvf node-v6.9.1-linux-x64.tar.xz \\\n && echo 'export PATH=$PATH:/business-ecosystem-logic-proxy/node-v6.9.1-linux-x64/bin' >> ~/.bashrc \\\n && git checkout $VERSION \\\n && mkdir indexes \\\n && mkdir themes\nVOLUME /business-ecosystem-logic-proxy/indexes\nVOLUME /business-ecosystem-logic-proxy/themes\nVOLUME /business-ecosystem-logic-proxy/static\nRUN export PATH=$PATH:/business-ecosystem-logic-proxy/node-v6.9.1-linux-x64/bin \\\n && ./install.sh \\\n && mkdir etc \\\n && cp config.js.template etc/config.js \\\n && echo \"module.exports = require('./etc/config');\" > config.js\nCOPY ./getConfig.js /business-ecosystem-logic-proxy\nWORKDIR /\nCOPY ./entrypoint.sh /\nCOPY ./apis-entrypoint.py /\nEXPOSE 8000/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"9b9f826b5aeb0d19eae3338a5694a25f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9c7d033c51a67c059612fcd08f5a699d66d4db34.dockerfile"}