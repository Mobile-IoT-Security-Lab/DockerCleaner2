{"seed":2192898170,"processedDockerfileHash":"1e33449df544ef6521855f896e729dd1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER H2O.ai <ops@h2o.ai>\n#   Linux\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends apt-transport-https=1.2.35 apt-utils=1.2.35 python-software-properties=0.96.20.10 software-properties-common=0.96.20.10 -y )\n#   RStudio\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && echo \"deb https://cran.rstudio.com/bin/linux/ubuntu xenial/\" >> /etc/apt/sources.list\n#   Java8\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN :\n#   Linux\nRUN (apt-get update ;apt-get install --no-install-recommends cpio=2.11+dfsg-5ubuntu1.1 curl=7.47.0-1ubuntu2.19 dirmngr=2.1.11-6ubuntu2.1 gdebi-core=0.9.5.7ubuntu1 git=1:2.7.4-0ubuntu1.10 net-tools=1.60-26ubuntu1 sudo=1.8.16-0ubuntu1.10 vim=2:7.4.1689-3ubuntu1.5 wget=1.17.1-1ubuntu1.5 zip=3.0-11 -y )\n#   R\nRUN (apt-get update ;apt-get install --no-install-recommends r-base=3.2.3-4 r-base-dev=3.2.3-4 r-cran-jsonlite=0.9.19-1 r-cran-rcurl=1.95-4.7-1 -y ) \\\n && mkdir -p /usr/local/lib/R/site-library \\\n && chmod 777 /usr/local/lib/R/site-library\n#   Java 8\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && (apt-get update ;apt-get install --no-install-recommends oracle-java8-installer -y )\n#   Log directory used by run.sh\nRUN mkdir /log \\\n && chmod o+w /log\n#   RStudio\nRUN locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8 \\\n && wget https://download2.rstudio.org/rstudio-server-1.1.383-amd64.deb \\\n && gdebi --non-interactive rstudio-server-1.1.383-amd64.deb \\\n && echo \"server-app-armor-enabled=0\" >> /etc/rstudio/rserver.conf\n#   ----- USER H2O -----\n#   h2o user\nRUN useradd -ms /bin/bash h2o \\\n && usermod -a -G sudo h2o \\\n && echo \"h2o:h2o\" | chpasswd \\\n && echo 'h2o ALL=NOPASSWD: ALL' >> /etc/sudoers\nUSER h2o\nWORKDIR /home/h2o\n#   Miniconda\nENV MINICONDA_FILE=\"Miniconda3-4.3.11-Linux-x86_64.sh\"\nRUN wget https://repo.continuum.io/miniconda/${MINICONDA_FILE} \\\n && bash ${MINICONDA_FILE} -b -p /home/h2o/Miniconda3 \\\n && /home/h2o/Miniconda3/bin/conda create -y --name pysparkling python=2.7 anaconda \\\n && /home/h2o/Miniconda3/bin/conda create -y --name h2o python=3.5 anaconda \\\n && /home/h2o/Miniconda3/envs/h2o/bin/jupyter notebook --generate-config \\\n && sed -i \"s/#c.NotebookApp.token = '<generated>'/c.NotebookApp.token = 'h2o'/\" .jupyter/jupyter_notebook_config.py \\\n && rm ${MINICONDA_FILE}\n#   H2O\nENV H2O_BRANCH_NAME=\"rel-wheeler\"\nENV H2O_BUILD_NUMBER=\"2\"\nENV H2O_PROJECT_VERSION=\"3.16.0.${H2O_BUILD_NUMBER}\"\nENV H2O_DIRECTORY=\"h2o-${H2O_PROJECT_VERSION}\"\nRUN wget http://h2o-release.s3.amazonaws.com/h2o/${H2O_BRANCH_NAME}/${H2O_BUILD_NUMBER}/h2o-${H2O_PROJECT_VERSION}.zip \\\n && unzip ${H2O_DIRECTORY}.zip \\\n && rm ${H2O_DIRECTORY}.zip \\\n && bash -c \"source /home/h2o/Miniconda3/bin/activate h2o \\\n && pip install ${H2O_DIRECTORY}/python/h2o*.whl\" \\\n && R CMD INSTALL ${H2O_DIRECTORY}/R/h2o*.gz\n#   Spark\nENV SPARK_VERSION=\"2.2.0\"\nENV SPARK_HADOOP_VERSION=\"2.7\"\nENV SPARK_DIRECTORY=\"spark-${SPARK_VERSION}-bin-hadoop${SPARK_HADOOP_VERSION}\"\nENV SPARK_HOME=\"/home/h2o/bin/spark\"\nRUN mkdir bin \\\n && cd bin \\\n && mkdir -p ${SPARK_HOME} \\\n && wget http://mirrors.sonic.net/apache/spark/spark-${SPARK_VERSION}/${SPARK_DIRECTORY}.tgz \\\n && tar zxvf ${SPARK_DIRECTORY}.tgz -C ${SPARK_HOME} --strip-components 1 \\\n && rm ${SPARK_DIRECTORY}.tgz \\\n && bash -c \"source /home/h2o/Miniconda3/bin/activate pysparkling \\\n && pip install tabulate future colorama\"\n#   Sparkling Water\nENV SPARKLING_WATER_BRANCH_NUMBER=\"2.2\"\nENV SPARKLING_WATER_BRANCH_NAME=\"rel-${SPARKLING_WATER_BRANCH_NUMBER}\"\nENV SPARKLING_WATER_BUILD_NUMBER=\"4\"\nENV SPARKLING_WATER_PROJECT_VERSION=\"${SPARKLING_WATER_BRANCH_NUMBER}.${SPARKLING_WATER_BUILD_NUMBER}\"\nENV SPARKLING_WATER_DIRECTORY=\"sparkling-water-${SPARKLING_WATER_PROJECT_VERSION}\"\nRUN cd bin \\\n && wget http://h2o-release.s3.amazonaws.com/sparkling-water/${SPARKLING_WATER_BRANCH_NAME}/${SPARKLING_WATER_BUILD_NUMBER}/${SPARKLING_WATER_DIRECTORY}.zip \\\n && unzip ${SPARKLING_WATER_DIRECTORY}.zip \\\n && mv ${SPARKLING_WATER_DIRECTORY} sparkling-water \\\n && rm ${SPARKLING_WATER_DIRECTORY}.zip \\\n && /home/h2o/Miniconda3/envs/pysparkling/bin/ipython profile create pyspark\nCOPY conf/pyspark/00-pyspark-setup.py /home/h2o/.ipython/profile_pyspark/startup/\nCOPY conf/pyspark/kernel.json /home/h2o/Miniconda3/envs/h2o/share/jupyter/kernels/pyspark/\nENV SPARKLING_WATER_HOME=\"/home/h2o/bin/sparkling-water\"\n#  #####################################################################\n#   ADD CONTENT FOR INDIVIDUAL HANDS-ON SESSIONS HERE\n#  #####################################################################\n#   Prologue\nRUN mkdir data \\\n && mkdir Python \\\n && mkdir R\n#   Megan's NLP demo\nRUN mkdir data/nlp \\\n && mkdir Python/nlp \\\n && wget -O data/nlp/w2v.hex 'https://s3.amazonaws.com/tomk/h2o-world/megan/w2v.hex' \\\n && wget -O data/nlp/AmazonReviews.csv 'https://s3.amazonaws.com/tomk/h2o-world/megan/AmazonReviews.csv'\nCOPY nlp/AmazonReviews.ipynb Python/nlp\nCOPY nlp/stopwords.csv data/nlp\n#   Kuba's pysparkling demo\nCOPY pysparkling/AmazonFineFoodPipeline.ipynb Python\nCOPY pysparkling/img/scenario.png Python/img/scenario.png\nRUN mkdir data/pysparkling\nRUN wget -O data/pysparkling/AmazonReviews_Predictions.csv 'https://s3.amazonaws.com/tomk/h2o-world/kuba/AmazonReviews_Predictions.csv'\nRUN wget -O data/pysparkling/AmazonReviews_Train.csv 'https://s3.amazonaws.com/tomk/h2o-world/kuba/AmazonReviews_Train.csv'\n#   Erin's AutoML R & Python demos\nRUN mkdir data/automl \\\n && mkdir R/automl \\\n && mkdir Python/automl\nCOPY automl/R/automl_binary_classification_product_backorders.Rmd R/automl\nCOPY automl/R/automl_regression_powerplant_output.Rmd R/automl\nCOPY automl/Python/automl_binary_classification_product_backorders.ipynb Python/automl\nCOPY automl/Python/automl_regression_powerplant_output.ipynb Python/automl\nCOPY automl/data/product_backorders.csv data/automl\nCOPY automl/data/powerplant_output.csv data/automl\n#   Epilogue\nUSER root\nRUN chown -R h2o:h2o /home/h2o/data \\\n && chown -R h2o:h2o /home/h2o/Python \\\n && chown -R h2o:h2o /home/h2o/R\n#  #####################################################################\n#   ----- RUN INFORMATION -----\nUSER h2o\nWORKDIR /home/h2o\n#   Entry point\nCOPY run.sh /run.sh\nENTRYPOINT [\"/run.sh\"]\nEXPOSE 54321/tcp\nEXPOSE 8888/tcp\nEXPOSE 8787/tcp\nEXPOSE 4040/tcp\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER H2O.ai <ops@h2o.ai>\n#  Linux\nRUN apt-get update -y \\\n && apt-get install apt-transport-https apt-utils python-software-properties software-properties-common -y\n#  RStudio\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && echo \"deb https://cran.rstudio.com/bin/linux/ubuntu xenial/\" >> /etc/apt/sources.list\n#  Java8\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN apt-get update -y\n#  Linux\nRUN apt-get install cpio curl dirmngr gdebi-core git net-tools sudo vim wget zip -y\n#  R\nRUN apt-get install r-base r-base-dev r-cran-jsonlite r-cran-rcurl -y \\\n && mkdir -p /usr/local/lib/R/site-library \\\n && chmod 777 /usr/local/lib/R/site-library\n#  Java 8\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && apt-get install oracle-java8-installer -y\n#  Log directory used by run.sh\nRUN mkdir /log \\\n && chmod o+w /log\n#  RStudio\nRUN locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8 \\\n && wget https://download2.rstudio.org/rstudio-server-1.1.383-amd64.deb \\\n && gdebi --non-interactive rstudio-server-1.1.383-amd64.deb \\\n && echo \"server-app-armor-enabled=0\" >> /etc/rstudio/rserver.conf\n#  ----- USER H2O -----\n#  h2o user\nRUN useradd -ms /bin/bash h2o \\\n && usermod -a -G sudo h2o \\\n && echo \"h2o:h2o\" | chpasswd \\\n && echo 'h2o ALL=NOPASSWD: ALL' >> /etc/sudoers\nUSER h2o\nWORKDIR /home/h2o\n#  Miniconda\nENV MINICONDA_FILE=\"Miniconda3-4.3.11-Linux-x86_64.sh\"\nRUN wget https://repo.continuum.io/miniconda/${MINICONDA_FILE} \\\n && bash ${MINICONDA_FILE} -b -p /home/h2o/Miniconda3 \\\n && /home/h2o/Miniconda3/bin/conda create -y --name pysparkling python=2.7 anaconda \\\n && /home/h2o/Miniconda3/bin/conda create -y --name h2o python=3.5 anaconda \\\n && /home/h2o/Miniconda3/envs/h2o/bin/jupyter notebook --generate-config \\\n && sed -i \"s/#c.NotebookApp.token = '<generated>'/c.NotebookApp.token = 'h2o'/\" .jupyter/jupyter_notebook_config.py \\\n && rm ${MINICONDA_FILE}\n#  H2O\nENV H2O_BRANCH_NAME=\"rel-wheeler\"\nENV H2O_BUILD_NUMBER=\"2\"\nENV H2O_PROJECT_VERSION=\"3.16.0.${H2O_BUILD_NUMBER}\"\nENV H2O_DIRECTORY=\"h2o-${H2O_PROJECT_VERSION}\"\nRUN wget http://h2o-release.s3.amazonaws.com/h2o/${H2O_BRANCH_NAME}/${H2O_BUILD_NUMBER}/h2o-${H2O_PROJECT_VERSION}.zip \\\n && unzip ${H2O_DIRECTORY}.zip \\\n && rm ${H2O_DIRECTORY}.zip \\\n && bash -c \"source /home/h2o/Miniconda3/bin/activate h2o \\\n && pip install ${H2O_DIRECTORY}/python/h2o*.whl\" \\\n && R CMD INSTALL ${H2O_DIRECTORY}/R/h2o*.gz\n#  Spark\nENV SPARK_VERSION=\"2.2.0\"\nENV SPARK_HADOOP_VERSION=\"2.7\"\nENV SPARK_DIRECTORY=\"spark-${SPARK_VERSION}-bin-hadoop${SPARK_HADOOP_VERSION}\"\nENV SPARK_HOME=\"/home/h2o/bin/spark\"\nRUN mkdir bin \\\n && cd bin \\\n && mkdir -p ${SPARK_HOME} \\\n && wget http://mirrors.sonic.net/apache/spark/spark-${SPARK_VERSION}/${SPARK_DIRECTORY}.tgz \\\n && tar zxvf ${SPARK_DIRECTORY}.tgz -C ${SPARK_HOME} --strip-components 1 \\\n && rm ${SPARK_DIRECTORY}.tgz \\\n && bash -c \"source /home/h2o/Miniconda3/bin/activate pysparkling \\\n && pip install tabulate future colorama\"\n#  Sparkling Water\nENV SPARKLING_WATER_BRANCH_NUMBER=\"2.2\"\nENV SPARKLING_WATER_BRANCH_NAME=\"rel-${SPARKLING_WATER_BRANCH_NUMBER}\"\nENV SPARKLING_WATER_BUILD_NUMBER=\"4\"\nENV SPARKLING_WATER_PROJECT_VERSION=\"${SPARKLING_WATER_BRANCH_NUMBER}.${SPARKLING_WATER_BUILD_NUMBER}\"\nENV SPARKLING_WATER_DIRECTORY=\"sparkling-water-${SPARKLING_WATER_PROJECT_VERSION}\"\nRUN cd bin \\\n && wget http://h2o-release.s3.amazonaws.com/sparkling-water/${SPARKLING_WATER_BRANCH_NAME}/${SPARKLING_WATER_BUILD_NUMBER}/${SPARKLING_WATER_DIRECTORY}.zip \\\n && unzip ${SPARKLING_WATER_DIRECTORY}.zip \\\n && mv ${SPARKLING_WATER_DIRECTORY} sparkling-water \\\n && rm ${SPARKLING_WATER_DIRECTORY}.zip \\\n && /home/h2o/Miniconda3/envs/pysparkling/bin/ipython profile create pyspark\nCOPY conf/pyspark/00-pyspark-setup.py /home/h2o/.ipython/profile_pyspark/startup/\nCOPY conf/pyspark/kernel.json /home/h2o/Miniconda3/envs/h2o/share/jupyter/kernels/pyspark/\nENV SPARKLING_WATER_HOME=\"/home/h2o/bin/sparkling-water\"\n# #####################################################################\n#  ADD CONTENT FOR INDIVIDUAL HANDS-ON SESSIONS HERE\n# #####################################################################\n#  Prologue\nRUN mkdir data \\\n && mkdir Python \\\n && mkdir R\n#  Megan's NLP demo\nRUN mkdir data/nlp \\\n && mkdir Python/nlp \\\n && wget -O data/nlp/w2v.hex 'https://s3.amazonaws.com/tomk/h2o-world/megan/w2v.hex' \\\n && wget -O data/nlp/AmazonReviews.csv 'https://s3.amazonaws.com/tomk/h2o-world/megan/AmazonReviews.csv'\nCOPY nlp/AmazonReviews.ipynb Python/nlp\nCOPY nlp/stopwords.csv data/nlp\n#  Kuba's pysparkling demo\nCOPY pysparkling/AmazonFineFoodPipeline.ipynb Python\nCOPY pysparkling/img/scenario.png Python/img/scenario.png\nRUN mkdir data/pysparkling\nRUN wget -O data/pysparkling/AmazonReviews_Predictions.csv 'https://s3.amazonaws.com/tomk/h2o-world/kuba/AmazonReviews_Predictions.csv'\nRUN wget -O data/pysparkling/AmazonReviews_Train.csv 'https://s3.amazonaws.com/tomk/h2o-world/kuba/AmazonReviews_Train.csv'\n#  Erin's AutoML R & Python demos\nRUN mkdir data/automl \\\n && mkdir R/automl \\\n && mkdir Python/automl\nCOPY automl/R/automl_binary_classification_product_backorders.Rmd R/automl\nCOPY automl/R/automl_regression_powerplant_output.Rmd R/automl\nCOPY automl/Python/automl_binary_classification_product_backorders.ipynb Python/automl\nCOPY automl/Python/automl_regression_powerplant_output.ipynb Python/automl\nCOPY automl/data/product_backorders.csv data/automl\nCOPY automl/data/powerplant_output.csv data/automl\n#  Epilogue\nUSER root\nRUN chown -R h2o:h2o /home/h2o/data \\\n && chown -R h2o:h2o /home/h2o/Python \\\n && chown -R h2o:h2o /home/h2o/R\n# #####################################################################\n#  ----- RUN INFORMATION -----\nUSER h2o\nWORKDIR /home/h2o\n#  Entry point\nCOPY run.sh /run.sh\nENTRYPOINT [\"/run.sh\"]\nEXPOSE 54321/tcp\nEXPOSE 8888/tcp\nEXPOSE 8787/tcp\nEXPOSE 4040/tcp\n","injectedSmells":[],"originalDockerfileHash":"6d8e0c2914e16e7db04345f082b4f87a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER H2O.ai <ops@h2o.ai>\n#   Linux\nRUN apt-get update -y \\\n && apt-get install apt-transport-https apt-utils python-software-properties software-properties-common -y\n#   RStudio\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && echo \"deb https://cran.rstudio.com/bin/linux/ubuntu xenial/\" >> /etc/apt/sources.list\n#   Java8\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN apt-get update -y\n#   Linux\nRUN apt-get install cpio curl dirmngr gdebi-core git net-tools sudo vim wget zip -y\n#   R\nRUN apt-get install r-base r-base-dev r-cran-jsonlite r-cran-rcurl -y \\\n && mkdir -p /usr/local/lib/R/site-library \\\n && chmod 777 /usr/local/lib/R/site-library\n#   Java 8\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && apt-get install oracle-java8-installer -y\n#   Log directory used by run.sh\nRUN mkdir /log \\\n && chmod o+w /log\n#   RStudio\nRUN locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8 \\\n && wget https://download2.rstudio.org/rstudio-server-1.1.383-amd64.deb \\\n && gdebi --non-interactive rstudio-server-1.1.383-amd64.deb \\\n && echo \"server-app-armor-enabled=0\" >> /etc/rstudio/rserver.conf\n#   ----- USER H2O -----\n#   h2o user\nRUN useradd -ms /bin/bash h2o \\\n && usermod -a -G sudo h2o \\\n && echo \"h2o:h2o\" | chpasswd \\\n && echo 'h2o ALL=NOPASSWD: ALL' >> /etc/sudoers\nUSER h2o\nWORKDIR /home/h2o\n#   Miniconda\nENV MINICONDA_FILE=\"Miniconda3-4.3.11-Linux-x86_64.sh\"\nRUN wget https://repo.continuum.io/miniconda/${MINICONDA_FILE} \\\n && bash ${MINICONDA_FILE} -b -p /home/h2o/Miniconda3 \\\n && /home/h2o/Miniconda3/bin/conda create -y --name pysparkling python=2.7 anaconda \\\n && /home/h2o/Miniconda3/bin/conda create -y --name h2o python=3.5 anaconda \\\n && /home/h2o/Miniconda3/envs/h2o/bin/jupyter notebook --generate-config \\\n && sed -i \"s/#c.NotebookApp.token = '<generated>'/c.NotebookApp.token = 'h2o'/\" .jupyter/jupyter_notebook_config.py \\\n && rm ${MINICONDA_FILE}\n#   H2O\nENV H2O_BRANCH_NAME=\"rel-wheeler\"\nENV H2O_BUILD_NUMBER=\"2\"\nENV H2O_PROJECT_VERSION=\"3.16.0.${H2O_BUILD_NUMBER}\"\nENV H2O_DIRECTORY=\"h2o-${H2O_PROJECT_VERSION}\"\nRUN wget http://h2o-release.s3.amazonaws.com/h2o/${H2O_BRANCH_NAME}/${H2O_BUILD_NUMBER}/h2o-${H2O_PROJECT_VERSION}.zip \\\n && unzip ${H2O_DIRECTORY}.zip \\\n && rm ${H2O_DIRECTORY}.zip \\\n && bash -c \"source /home/h2o/Miniconda3/bin/activate h2o \\\n && pip install ${H2O_DIRECTORY}/python/h2o*.whl\" \\\n && R CMD INSTALL ${H2O_DIRECTORY}/R/h2o*.gz\n#   Spark\nENV SPARK_VERSION=\"2.2.0\"\nENV SPARK_HADOOP_VERSION=\"2.7\"\nENV SPARK_DIRECTORY=\"spark-${SPARK_VERSION}-bin-hadoop${SPARK_HADOOP_VERSION}\"\nENV SPARK_HOME=\"/home/h2o/bin/spark\"\nRUN mkdir bin \\\n && cd bin \\\n && mkdir -p ${SPARK_HOME} \\\n && wget http://mirrors.sonic.net/apache/spark/spark-${SPARK_VERSION}/${SPARK_DIRECTORY}.tgz \\\n && tar zxvf ${SPARK_DIRECTORY}.tgz -C ${SPARK_HOME} --strip-components 1 \\\n && rm ${SPARK_DIRECTORY}.tgz \\\n && bash -c \"source /home/h2o/Miniconda3/bin/activate pysparkling \\\n && pip install tabulate future colorama\"\n#   Sparkling Water\nENV SPARKLING_WATER_BRANCH_NUMBER=\"2.2\"\nENV SPARKLING_WATER_BRANCH_NAME=\"rel-${SPARKLING_WATER_BRANCH_NUMBER}\"\nENV SPARKLING_WATER_BUILD_NUMBER=\"4\"\nENV SPARKLING_WATER_PROJECT_VERSION=\"${SPARKLING_WATER_BRANCH_NUMBER}.${SPARKLING_WATER_BUILD_NUMBER}\"\nENV SPARKLING_WATER_DIRECTORY=\"sparkling-water-${SPARKLING_WATER_PROJECT_VERSION}\"\nRUN cd bin \\\n && wget http://h2o-release.s3.amazonaws.com/sparkling-water/${SPARKLING_WATER_BRANCH_NAME}/${SPARKLING_WATER_BUILD_NUMBER}/${SPARKLING_WATER_DIRECTORY}.zip \\\n && unzip ${SPARKLING_WATER_DIRECTORY}.zip \\\n && mv ${SPARKLING_WATER_DIRECTORY} sparkling-water \\\n && rm ${SPARKLING_WATER_DIRECTORY}.zip \\\n && /home/h2o/Miniconda3/envs/pysparkling/bin/ipython profile create pyspark\nCOPY conf/pyspark/00-pyspark-setup.py /home/h2o/.ipython/profile_pyspark/startup/\nCOPY conf/pyspark/kernel.json /home/h2o/Miniconda3/envs/h2o/share/jupyter/kernels/pyspark/\nENV SPARKLING_WATER_HOME=\"/home/h2o/bin/sparkling-water\"\n#  #####################################################################\n#   ADD CONTENT FOR INDIVIDUAL HANDS-ON SESSIONS HERE\n#  #####################################################################\n#   Prologue\nRUN mkdir data \\\n && mkdir Python \\\n && mkdir R\n#   Megan's NLP demo\nRUN mkdir data/nlp \\\n && mkdir Python/nlp \\\n && wget -O data/nlp/w2v.hex 'https://s3.amazonaws.com/tomk/h2o-world/megan/w2v.hex' \\\n && wget -O data/nlp/AmazonReviews.csv 'https://s3.amazonaws.com/tomk/h2o-world/megan/AmazonReviews.csv'\nCOPY nlp/AmazonReviews.ipynb Python/nlp\nCOPY nlp/stopwords.csv data/nlp\n#   Kuba's pysparkling demo\nCOPY pysparkling/AmazonFineFoodPipeline.ipynb Python\nCOPY pysparkling/img/scenario.png Python/img/scenario.png\nRUN mkdir data/pysparkling\nRUN wget -O data/pysparkling/AmazonReviews_Predictions.csv 'https://s3.amazonaws.com/tomk/h2o-world/kuba/AmazonReviews_Predictions.csv'\nRUN wget -O data/pysparkling/AmazonReviews_Train.csv 'https://s3.amazonaws.com/tomk/h2o-world/kuba/AmazonReviews_Train.csv'\n#   Erin's AutoML R & Python demos\nRUN mkdir data/automl \\\n && mkdir R/automl \\\n && mkdir Python/automl\nCOPY automl/R/automl_binary_classification_product_backorders.Rmd R/automl\nCOPY automl/R/automl_regression_powerplant_output.Rmd R/automl\nCOPY automl/Python/automl_binary_classification_product_backorders.ipynb Python/automl\nCOPY automl/Python/automl_regression_powerplant_output.ipynb Python/automl\nCOPY automl/data/product_backorders.csv data/automl\nCOPY automl/data/powerplant_output.csv data/automl\n#   Epilogue\nUSER root\nRUN chown -R h2o:h2o /home/h2o/data \\\n && chown -R h2o:h2o /home/h2o/Python \\\n && chown -R h2o:h2o /home/h2o/R\n#  #####################################################################\n#   ----- RUN INFORMATION -----\nUSER h2o\nWORKDIR /home/h2o\n#   Entry point\nCOPY run.sh /run.sh\nENTRYPOINT [\"/run.sh\"]\nEXPOSE 54321/tcp\nEXPOSE 8888/tcp\nEXPOSE 8787/tcp\nEXPOSE 4040/tcp\n","originalDockerfileUglifiedHash":"a75c9603cf22abe01f95b19bc9b4411d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b3b608bddce4ec663e047092958ccefaeee090ab.dockerfile"}