{"seed":1927197065,"processedDockerfileHash":"b5914f87563e60f3e6829c82aa5679b5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"FROM openshift/base-centos7\nMAINTAINER Ben Browning <bbrownin@redhat.com>\nEXPOSE 8080/tcp\nLABEL io.openshift.s2i.destination=\"/opt/s2i/destination\"\nENV APP_PATH=\"$HOME/app\" \\\n    ENV_PATH=\"$HOME/tmp/env\" \\\n    BUILD_PATH=\"$HOME/tmp/build\" \\\n    CACHE_PATH=\"$HOME/tmp/cache\" \\\n    BUILDPACK_PATH=\"$HOME/tmp/buildpacks\" \\\n    USER=\"1001\" \\\n    PORT=\"8080\"\n#   Install common packages useful for buildpacks\nRUN yum groupinstall -y \"Development Tools\"\nRUN yum install -y java-1.7.0-openjdk java-1.7.0-openjdk-headless libffi-devel libyaml-devel ncurses-devel openssl-libs python-devel readline-devel ruby ruby-devel tcl-devel\n#   Install Herokuish to detect and run buildpacks\nENV HEROKUISH_VERSION=\"0.3.10\"\nRUN curl --silent -L https://github.com/gliderlabs/herokuish/releases/download/v{$HEROKUISH_VERSION}/herokuish_${HEROKUISH_VERSION}_linux_x86_64.tgz | tar -xzC /bin \\\n && ln -s /bin/herokuish /build \\\n && ln -s /bin/herokuish /start \\\n && ln -s /bin/herokuish /exec\n#   CloudFoundry Java buildpack environment variables\nENV JAVA_BUILDPACK_VERSION=\"3.3.1\" \\\n    OPENJDK_VERSION=\"1.8.0_60\" \\\n    MEMORY_CALC_VERSION=\"2.0.0_RELEASE\" \\\n    MEMORY_LIMIT=\"2G\" \\\n    TMPDIR=\"$HOME/tmp\"\nENV JBP_CONFIG_OPEN_JDK_JRE=\"{jre: {version: ${OPENJDK_VERSION} }, memory_calculator: {version: ${MEMORY_CALC_VERSION} }}\"\n#   Install the CloudFoundry Java buildpack\nRUN mkdir -p $BUILDPACK_PATH/java-buildpack \\\n && wget -nv -O /tmp/java-buildpack.zip \"https://github.com/cloudfoundry/java-buildpack/releases/download/v${JAVA_BUILDPACK_VERSION}/java-buildpack-offline-v${JAVA_BUILDPACK_VERSION}.zip\" \\\n && unzip /tmp/java-buildpack.zip -d $BUILDPACK_PATH/java-buildpack/\n#   Make an OpenJDK build available for CentOS7\nRUN wget -nv -O $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fopenjdk%2Fcentos6%2Fx86_64%2Fopenjdk-${OPENJDK_VERSION}.tar.gz.cached \"https://download.run.pivotal.io/openjdk/centos6/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz\" \\\n && echo -e \"---\\n${OPENJDK_VERSION}: https://download.run.pivotal.io/openjdk/centos6/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz\" > $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fopenjdk%2Fcentos7%2Fx86_64%2Findex.yml.cached\n#   Make a memory-calculator tool available for CentOS7\nRUN wget -nv -O $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fmemory-calculator%2Fcentos6%2Fx86_64%2Fmemory-calculator-${MEMORY_CALC_VERSION}.tar.gz.cached \"https://download.run.pivotal.io/memory-calculator/centos6/x86_64/memory-calculator-${MEMORY_CALC_VERSION}.tar.gz\" \\\n && echo -e \"---\\n${MEMORY_CALC_VERSION}: https://download.run.pivotal.io/memory-calculator/centos6/x86_64/memory-calculator-${MEMORY_CALC_VERSION}.tar.gz\" > $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fmemory-calculator%2Fcentos7%2Fx86_64%2Findex.yml.cached\n#   CloudFoundry Node buildpack environment variables\nENV NODE_BUILDPACK_VERSION=\"1.5.11\" \\\n    CF_STACK=\"cflinuxfs2\"\n#   Install the CloudFoundry NodeJS buildpack\nRUN mkdir -p $BUILDPACK_PATH/node-buildpack \\\n && wget -nv -O /tmp/node-buildpack.zip \"https://github.com/cloudfoundry/nodejs-buildpack/releases/download/v${NODE_BUILDPACK_VERSION}/nodejs_buildpack-cached-v${NODE_BUILDPACK_VERSION}.zip\" \\\n && unzip /tmp/node-buildpack.zip -d $BUILDPACK_PATH/node-buildpack/\n#   Copy our OpenShift S2I scripts\nRUN mkdir -p $STI_SCRIPTS_PATH\nCOPY bin/assemble bin/run bin/vcap_env /${STI_SCRIPTS_PATH}/\n#   Tie up loose ends\nRUN mkdir -p /opt/s2i/destination/src \\\n && chmod -R go+rw /opt/s2i/destination \\\n && chmod +x $STI_SCRIPTS_PATH/* \\\n && mkdir -p $APP_PATH \\\n && chown -R $USER:$USER $APP_PATH \\\n && chmod -R go+rw $APP_PATH \\\n && mkdir -p $HOME/tmp \\\n && chown -R $USER:$USER $HOME/tmp \\\n && chmod -R go+rw $HOME/tmp\n#   Herokuish is already running as an unprivileged user so stub out\n#   any usermod commands it uses.\n#   TODO: Long-term, fork Herokuish to work natively on CentOS / RHEL\nRUN mkdir -p $HOME/bin \\\n && echo '' > $HOME/bin/usermod \\\n && echo '' > $HOME/bin/chown \\\n && echo -e 'shift\\neval \"$@\"' > $HOME/bin/setuidgid \\\n && chmod +x $HOME/bin/*\n#   Uncomment to enable debug logging for buildpacks\n#   ENV TRACE=1 \\\n#       JBP_LOG_LEVEL=DEBUG\nUSER $USER\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openshift/base-centos7\nMAINTAINER Ben Browning <bbrownin@redhat.com>\nEXPOSE 8080/tcp\nLABEL io.openshift.s2i.destination=\"/opt/s2i/destination\"\nENV APP_PATH=\"$HOME/app\" \\\n    ENV_PATH=\"$HOME/tmp/env\" \\\n    BUILD_PATH=\"$HOME/tmp/build\" \\\n    CACHE_PATH=\"$HOME/tmp/cache\" \\\n    BUILDPACK_PATH=\"$HOME/tmp/buildpacks\" \\\n    USER=\"1001\" \\\n    PORT=\"8080\"\n#  Install common packages useful for buildpacks\nRUN yum groupinstall -y \"Development Tools\"\nRUN yum install -y java-1.7.0-openjdk java-1.7.0-openjdk-headless libffi-devel libyaml-devel ncurses-devel openssl-libs python-devel readline-devel ruby ruby-devel tcl-devel\n#  Install Herokuish to detect and run buildpacks\nENV HEROKUISH_VERSION=\"0.3.10\"\nRUN curl --silent -L https://github.com/gliderlabs/herokuish/releases/download/v{$HEROKUISH_VERSION}/herokuish_${HEROKUISH_VERSION}_linux_x86_64.tgz | tar -xzC /bin \\\n && ln -s /bin/herokuish /build \\\n && ln -s /bin/herokuish /start \\\n && ln -s /bin/herokuish /exec\n#  CloudFoundry Java buildpack environment variables\nENV JAVA_BUILDPACK_VERSION=\"3.3.1\" \\\n    OPENJDK_VERSION=\"1.8.0_60\" \\\n    MEMORY_CALC_VERSION=\"2.0.0_RELEASE\" \\\n    MEMORY_LIMIT=\"2G\" \\\n    TMPDIR=\"$HOME/tmp\"\nENV JBP_CONFIG_OPEN_JDK_JRE=\"{jre: {version: ${OPENJDK_VERSION} }, memory_calculator: {version: ${MEMORY_CALC_VERSION} }}\"\n#  Install the CloudFoundry Java buildpack\nRUN mkdir -p $BUILDPACK_PATH/java-buildpack \\\n && wget -nv -O /tmp/java-buildpack.zip \"https://github.com/cloudfoundry/java-buildpack/releases/download/v${JAVA_BUILDPACK_VERSION}/java-buildpack-offline-v${JAVA_BUILDPACK_VERSION}.zip\" \\\n && unzip /tmp/java-buildpack.zip -d $BUILDPACK_PATH/java-buildpack/\n#  Make an OpenJDK build available for CentOS7\nRUN wget -nv -O $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fopenjdk%2Fcentos6%2Fx86_64%2Fopenjdk-${OPENJDK_VERSION}.tar.gz.cached \"https://download.run.pivotal.io/openjdk/centos6/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz\" \\\n && echo -e \"---\\n${OPENJDK_VERSION}: https://download.run.pivotal.io/openjdk/centos6/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz\" > $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fopenjdk%2Fcentos7%2Fx86_64%2Findex.yml.cached\n#  Make a memory-calculator tool available for CentOS7\nRUN wget -nv -O $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fmemory-calculator%2Fcentos6%2Fx86_64%2Fmemory-calculator-${MEMORY_CALC_VERSION}.tar.gz.cached \"https://download.run.pivotal.io/memory-calculator/centos6/x86_64/memory-calculator-${MEMORY_CALC_VERSION}.tar.gz\" \\\n && echo -e \"---\\n${MEMORY_CALC_VERSION}: https://download.run.pivotal.io/memory-calculator/centos6/x86_64/memory-calculator-${MEMORY_CALC_VERSION}.tar.gz\" > $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fmemory-calculator%2Fcentos7%2Fx86_64%2Findex.yml.cached\n#  CloudFoundry Node buildpack environment variables\nENV NODE_BUILDPACK_VERSION=\"1.5.11\" \\\n    CF_STACK=\"cflinuxfs2\"\n#  Install the CloudFoundry NodeJS buildpack\nRUN mkdir -p $BUILDPACK_PATH/node-buildpack \\\n && wget -nv -O /tmp/node-buildpack.zip \"https://github.com/cloudfoundry/nodejs-buildpack/releases/download/v${NODE_BUILDPACK_VERSION}/nodejs_buildpack-cached-v${NODE_BUILDPACK_VERSION}.zip\" \\\n && unzip /tmp/node-buildpack.zip -d $BUILDPACK_PATH/node-buildpack/\n#  Copy our OpenShift S2I scripts\nRUN mkdir -p $STI_SCRIPTS_PATH\nCOPY bin/assemble bin/run bin/vcap_env /${STI_SCRIPTS_PATH}/\n#  Tie up loose ends\nRUN mkdir -p /opt/s2i/destination/src \\\n && chmod -R go+rw /opt/s2i/destination \\\n && chmod +x $STI_SCRIPTS_PATH/* \\\n && mkdir -p $APP_PATH \\\n && chown -R $USER:$USER $APP_PATH \\\n && chmod -R go+rw $APP_PATH \\\n && mkdir -p $HOME/tmp \\\n && chown -R $USER:$USER $HOME/tmp \\\n && chmod -R go+rw $HOME/tmp\n#  Herokuish is already running as an unprivileged user so stub out\n#  any usermod commands it uses.\n#  TODO: Long-term, fork Herokuish to work natively on CentOS / RHEL\nRUN mkdir -p $HOME/bin \\\n && echo '' > $HOME/bin/usermod \\\n && echo '' > $HOME/bin/chown \\\n && echo -e 'shift\\neval \"$@\"' > $HOME/bin/setuidgid \\\n && chmod +x $HOME/bin/*\n#  Uncomment to enable debug logging for buildpacks\n#  ENV TRACE=1 \\\n#      JBP_LOG_LEVEL=DEBUG\nUSER $USER\n","injectedSmells":[],"originalDockerfileHash":"853ca7c5c108320d87566feb72deb189","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openshift/base-centos7\nMAINTAINER Ben Browning <bbrownin@redhat.com>\nEXPOSE 8080/tcp\nLABEL io.openshift.s2i.destination=\"/opt/s2i/destination\"\nENV APP_PATH=\"$HOME/app\" \\\n    ENV_PATH=\"$HOME/tmp/env\" \\\n    BUILD_PATH=\"$HOME/tmp/build\" \\\n    CACHE_PATH=\"$HOME/tmp/cache\" \\\n    BUILDPACK_PATH=\"$HOME/tmp/buildpacks\" \\\n    USER=\"1001\" \\\n    PORT=\"8080\"\n#   Install common packages useful for buildpacks\nRUN yum groupinstall -y \"Development Tools\"\nRUN yum install -y java-1.7.0-openjdk java-1.7.0-openjdk-headless libffi-devel libyaml-devel ncurses-devel openssl-libs python-devel readline-devel ruby ruby-devel tcl-devel\n#   Install Herokuish to detect and run buildpacks\nENV HEROKUISH_VERSION=\"0.3.10\"\nRUN curl --silent -L https://github.com/gliderlabs/herokuish/releases/download/v{$HEROKUISH_VERSION}/herokuish_${HEROKUISH_VERSION}_linux_x86_64.tgz | tar -xzC /bin \\\n && ln -s /bin/herokuish /build \\\n && ln -s /bin/herokuish /start \\\n && ln -s /bin/herokuish /exec\n#   CloudFoundry Java buildpack environment variables\nENV JAVA_BUILDPACK_VERSION=\"3.3.1\" \\\n    OPENJDK_VERSION=\"1.8.0_60\" \\\n    MEMORY_CALC_VERSION=\"2.0.0_RELEASE\" \\\n    MEMORY_LIMIT=\"2G\" \\\n    TMPDIR=\"$HOME/tmp\"\nENV JBP_CONFIG_OPEN_JDK_JRE=\"{jre: {version: ${OPENJDK_VERSION} }, memory_calculator: {version: ${MEMORY_CALC_VERSION} }}\"\n#   Install the CloudFoundry Java buildpack\nRUN mkdir -p $BUILDPACK_PATH/java-buildpack \\\n && wget -nv -O /tmp/java-buildpack.zip \"https://github.com/cloudfoundry/java-buildpack/releases/download/v${JAVA_BUILDPACK_VERSION}/java-buildpack-offline-v${JAVA_BUILDPACK_VERSION}.zip\" \\\n && unzip /tmp/java-buildpack.zip -d $BUILDPACK_PATH/java-buildpack/\n#   Make an OpenJDK build available for CentOS7\nRUN wget -nv -O $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fopenjdk%2Fcentos6%2Fx86_64%2Fopenjdk-${OPENJDK_VERSION}.tar.gz.cached \"https://download.run.pivotal.io/openjdk/centos6/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz\" \\\n && echo -e \"---\\n${OPENJDK_VERSION}: https://download.run.pivotal.io/openjdk/centos6/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz\" > $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fopenjdk%2Fcentos7%2Fx86_64%2Findex.yml.cached\n#   Make a memory-calculator tool available for CentOS7\nRUN wget -nv -O $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fmemory-calculator%2Fcentos6%2Fx86_64%2Fmemory-calculator-${MEMORY_CALC_VERSION}.tar.gz.cached \"https://download.run.pivotal.io/memory-calculator/centos6/x86_64/memory-calculator-${MEMORY_CALC_VERSION}.tar.gz\" \\\n && echo -e \"---\\n${MEMORY_CALC_VERSION}: https://download.run.pivotal.io/memory-calculator/centos6/x86_64/memory-calculator-${MEMORY_CALC_VERSION}.tar.gz\" > $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fmemory-calculator%2Fcentos7%2Fx86_64%2Findex.yml.cached\n#   CloudFoundry Node buildpack environment variables\nENV NODE_BUILDPACK_VERSION=\"1.5.11\" \\\n    CF_STACK=\"cflinuxfs2\"\n#   Install the CloudFoundry NodeJS buildpack\nRUN mkdir -p $BUILDPACK_PATH/node-buildpack \\\n && wget -nv -O /tmp/node-buildpack.zip \"https://github.com/cloudfoundry/nodejs-buildpack/releases/download/v${NODE_BUILDPACK_VERSION}/nodejs_buildpack-cached-v${NODE_BUILDPACK_VERSION}.zip\" \\\n && unzip /tmp/node-buildpack.zip -d $BUILDPACK_PATH/node-buildpack/\n#   Copy our OpenShift S2I scripts\nRUN mkdir -p $STI_SCRIPTS_PATH\nCOPY bin/assemble bin/run bin/vcap_env /${STI_SCRIPTS_PATH}/\n#   Tie up loose ends\nRUN mkdir -p /opt/s2i/destination/src \\\n && chmod -R go+rw /opt/s2i/destination \\\n && chmod +x $STI_SCRIPTS_PATH/* \\\n && mkdir -p $APP_PATH \\\n && chown -R $USER:$USER $APP_PATH \\\n && chmod -R go+rw $APP_PATH \\\n && mkdir -p $HOME/tmp \\\n && chown -R $USER:$USER $HOME/tmp \\\n && chmod -R go+rw $HOME/tmp\n#   Herokuish is already running as an unprivileged user so stub out\n#   any usermod commands it uses.\n#   TODO: Long-term, fork Herokuish to work natively on CentOS / RHEL\nRUN mkdir -p $HOME/bin \\\n && echo '' > $HOME/bin/usermod \\\n && echo '' > $HOME/bin/chown \\\n && echo -e 'shift\\neval \"$@\"' > $HOME/bin/setuidgid \\\n && chmod +x $HOME/bin/*\n#   Uncomment to enable debug logging for buildpacks\n#   ENV TRACE=1 \\\n#       JBP_LOG_LEVEL=DEBUG\nUSER $USER\n","originalDockerfileUglifiedHash":"c45a3b09723efe91c59213822fe6658b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b86c863ee8a556d2bc8156561242a04ccfbf0e35.dockerfile"}