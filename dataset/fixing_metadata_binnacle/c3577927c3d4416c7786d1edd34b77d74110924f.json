{"seed":482364573,"processedDockerfileHash":"ee53c01419fdab54fa9abeb43494b2ec","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  # -*- docker-image-name: \"homme/openstreetmap-tiles:latest\" -*-\n#  #\n#   The OpenStreetMap Tile Server\n#\n#   This creates an image with containing the OpenStreetMap tile server stack as\n#   described at\n#   <http://switch2osm.org/serving-tiles/manually-building-a-tile-server-12-04/>.\n#\nFROM phusion/baseimage:0.9.11\nMAINTAINER Homme Zwaagstra <hrz@geodata.soton.ac.uk>\n#   Set the locale. This affects the encoding of the Postgresql template\n#   databases.\nENV LANG=\"C.UTF-8\"\nRUN update-locale LANG=C.UTF-8\n#   Ensure `add-apt-repository` is present\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common python-software-properties -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-python-dev libboost-regex-dev libboost-system-dev libboost-thread-dev -y )\n#   Install remaining dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends subversion git-core tar unzip wget bzip2 build-essential autoconf libtool libxml2-dev libgeos-dev libpq-dev libbz2-dev munin-node munin libprotobuf-c0-dev protobuf-c-compiler libfreetype6-dev libpng12-dev libtiff4-dev libicu-dev libgdal-dev libcairo-dev libcairomm-1.0-dev apache2 apache2-dev libagg-dev liblua5.2-dev ttf-unifont -y )\nRUN (apt-get update ;apt-get install --no-install-recommends autoconf apache2-dev libtool libxml2-dev libbz2-dev libgeos-dev libgeos++-dev libproj-dev gdal-bin libgdal1-dev mapnik-utils python-mapnik libmapnik-dev -y )\n#   Install postgresql and postgis\nRUN (apt-get update ;apt-get install --no-install-recommends postgresql-9.3-postgis-2.1 postgresql-contrib postgresql-server-dev-9.3 -y )\n#   Install osm2pgsql\nRUN cd /tmp \\\n && git clone git://github.com/openstreetmap/osm2pgsql.git\nRUN cd /tmp/osm2pgsql \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   Install the Mapnik library\nRUN cd /tmp \\\n && git clone git://github.com/mapnik/mapnik\nRUN cd /tmp/mapnik \\\n && git checkout 2.2.x \\\n && python scons/scons.py configure INPUT_PLUGINS=all OPTIMIZATION=3 SYSTEM_FONTS=/usr/share/fonts/truetype/ \\\n && python scons/scons.py \\\n && python scons/scons.py install \\\n && ldconfig\n#   Verify that Mapnik has been installed correctly\nRUN python -c 'import mapnik'\n#   Install mod_tile and renderd\nRUN cd /tmp \\\n && git clone git://github.com/openstreetmap/mod_tile.git\nRUN cd /tmp/mod_tile \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && make install-mod_tile \\\n && ldconfig\n#   Install the Mapnik stylesheet\nRUN cd /usr/local/src \\\n && svn co http://svn.openstreetmap.org/applications/rendering/mapnik mapnik-style\n#   Install the coastline data\nRUN cd /usr/local/src/mapnik-style \\\n && ./get-coastlines.sh /usr/local/share\n#   Configure mapnik style-sheets\nRUN cd /usr/local/src/mapnik-style/inc \\\n && cp fontset-settings.xml.inc.template fontset-settings.xml.inc\nCOPY datasource-settings.sed /tmp/\nRUN cd /usr/local/src/mapnik-style/inc \\\n && sed --file /tmp/datasource-settings.sed datasource-settings.xml.inc.template > datasource-settings.xml.inc\nCOPY settings.sed /tmp/\nRUN cd /usr/local/src/mapnik-style/inc \\\n && sed --file /tmp/settings.sed settings.xml.inc.template > settings.xml.inc\n#   Configure renderd\nCOPY renderd.conf.sed /tmp/\nRUN cd /usr/local/etc \\\n && sed --file /tmp/renderd.conf.sed --in-place renderd.conf\n#   Create the files required for the mod_tile system to run\nRUN mkdir /var/run/renderd \\\n && chown www-data: /var/run/renderd\nRUN mkdir /var/lib/mod_tile \\\n && chown www-data /var/lib/mod_tile\n#   Configure mod_tile\nCOPY mod_tile.load /etc/apache2/mods-available/\nCOPY mod_tile.conf /etc/apache2/mods-available/\nRUN a2enmod mod_tile\n#   Ensure the webserver user can connect to the gis database\nRUN sed -i -e 's/local all all peer/local gis www-data peer/' /etc/postgresql/9.3/main/pg_hba.conf\n#   Tune postgresql\nCOPY postgresql.conf.sed /tmp/\nRUN sed --file /tmp/postgresql.conf.sed --in-place /etc/postgresql/9.3/main/postgresql.conf\n#   Define the application logging logic\nCOPY syslog-ng.conf /etc/syslog-ng/conf.d/local.conf\nRUN rm -rf /var/log/postgresql\n#   Create a `postgresql` `runit` service\nCOPY postgresql /etc/sv/postgresql\nRUN update-service --add /etc/sv/postgresql\n#   Create an `apache2` `runit` service\nCOPY apache2 /etc/sv/apache2\nRUN update-service --add /etc/sv/apache2\n#   Create a `renderd` `runit` service\nCOPY renderd /etc/sv/renderd\nRUN update-service --add /etc/sv/renderd\n#   Clean up APT when done\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Expose the webserver and database ports\nEXPOSE 80/tcp 5432/tcp\n#   We need the volume for importing data from\nVOLUME [\"/data\"]\n#   Set the osm2pgsql import cache size in MB. Used in `run import`.\nENV OSM_IMPORT_CACHE=\"800\"\n#   Add the README\nCOPY README.md /usr/local/share/doc/\n#   Add the help file\nRUN mkdir -p /usr/local/share/doc/run\nCOPY help.txt /usr/local/share/doc/run/help.txt\n#   Add the entrypoint\nCOPY run.sh /usr/local/sbin/run\nENTRYPOINT [\"/sbin/my_init\", \"--\", \"/usr/local/sbin/run\"]\n#   Default to showing the usage text\nCMD [\"help\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# # -*- docker-image-name: \"homme/openstreetmap-tiles:latest\" -*-\n# #\n#  The OpenStreetMap Tile Server\n#\n#  This creates an image with containing the OpenStreetMap tile server stack as\n#  described at\n#  <http://switch2osm.org/serving-tiles/manually-building-a-tile-server-12-04/>.\n#\nFROM phusion/baseimage:0.9.11\nMAINTAINER Homme Zwaagstra <hrz@geodata.soton.ac.uk>\n#  Set the locale. This affects the encoding of the Postgresql template\n#  databases.\nENV LANG=\"C.UTF-8\"\nRUN update-locale LANG=C.UTF-8\n#  Ensure `add-apt-repository` is present\nRUN apt-get update -y\nRUN apt-get install software-properties-common python-software-properties -y\nRUN apt-get install libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-python-dev libboost-regex-dev libboost-system-dev libboost-thread-dev -y\n#  Install remaining dependencies\nRUN apt-get install subversion git-core tar unzip wget bzip2 build-essential autoconf libtool libxml2-dev libgeos-dev libpq-dev libbz2-dev munin-node munin libprotobuf-c0-dev protobuf-c-compiler libfreetype6-dev libpng12-dev libtiff4-dev libicu-dev libgdal-dev libcairo-dev libcairomm-1.0-dev apache2 apache2-dev libagg-dev liblua5.2-dev ttf-unifont -y\nRUN apt-get install autoconf apache2-dev libtool libxml2-dev libbz2-dev libgeos-dev libgeos++-dev libproj-dev gdal-bin libgdal1-dev mapnik-utils python-mapnik libmapnik-dev -y\n#  Install postgresql and postgis\nRUN apt-get install postgresql-9.3-postgis-2.1 postgresql-contrib postgresql-server-dev-9.3 -y\n#  Install osm2pgsql\nRUN cd /tmp \\\n && git clone git://github.com/openstreetmap/osm2pgsql.git\nRUN cd /tmp/osm2pgsql \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#  Install the Mapnik library\nRUN cd /tmp \\\n && git clone git://github.com/mapnik/mapnik\nRUN cd /tmp/mapnik \\\n && git checkout 2.2.x \\\n && python scons/scons.py configure INPUT_PLUGINS=all OPTIMIZATION=3 SYSTEM_FONTS=/usr/share/fonts/truetype/ \\\n && python scons/scons.py \\\n && python scons/scons.py install \\\n && ldconfig\n#  Verify that Mapnik has been installed correctly\nRUN python -c 'import mapnik'\n#  Install mod_tile and renderd\nRUN cd /tmp \\\n && git clone git://github.com/openstreetmap/mod_tile.git\nRUN cd /tmp/mod_tile \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && make install-mod_tile \\\n && ldconfig\n#  Install the Mapnik stylesheet\nRUN cd /usr/local/src \\\n && svn co http://svn.openstreetmap.org/applications/rendering/mapnik mapnik-style\n#  Install the coastline data\nRUN cd /usr/local/src/mapnik-style \\\n && ./get-coastlines.sh /usr/local/share\n#  Configure mapnik style-sheets\nRUN cd /usr/local/src/mapnik-style/inc \\\n && cp fontset-settings.xml.inc.template fontset-settings.xml.inc\nADD datasource-settings.sed /tmp/\nRUN cd /usr/local/src/mapnik-style/inc \\\n && sed --file /tmp/datasource-settings.sed datasource-settings.xml.inc.template > datasource-settings.xml.inc\nADD settings.sed /tmp/\nRUN cd /usr/local/src/mapnik-style/inc \\\n && sed --file /tmp/settings.sed settings.xml.inc.template > settings.xml.inc\n#  Configure renderd\nADD renderd.conf.sed /tmp/\nRUN cd /usr/local/etc \\\n && sed --file /tmp/renderd.conf.sed --in-place renderd.conf\n#  Create the files required for the mod_tile system to run\nRUN mkdir /var/run/renderd \\\n && chown www-data: /var/run/renderd\nRUN mkdir /var/lib/mod_tile \\\n && chown www-data /var/lib/mod_tile\n#  Configure mod_tile\nADD mod_tile.load /etc/apache2/mods-available/\nADD mod_tile.conf /etc/apache2/mods-available/\nRUN a2enmod mod_tile\n#  Ensure the webserver user can connect to the gis database\nRUN sed -i -e 's/local all all peer/local gis www-data peer/' /etc/postgresql/9.3/main/pg_hba.conf\n#  Tune postgresql\nADD postgresql.conf.sed /tmp/\nRUN sed --file /tmp/postgresql.conf.sed --in-place /etc/postgresql/9.3/main/postgresql.conf\n#  Define the application logging logic\nADD syslog-ng.conf /etc/syslog-ng/conf.d/local.conf\nRUN rm -rf /var/log/postgresql\n#  Create a `postgresql` `runit` service\nADD postgresql /etc/sv/postgresql\nRUN update-service --add /etc/sv/postgresql\n#  Create an `apache2` `runit` service\nADD apache2 /etc/sv/apache2\nRUN update-service --add /etc/sv/apache2\n#  Create a `renderd` `runit` service\nADD renderd /etc/sv/renderd\nRUN update-service --add /etc/sv/renderd\n#  Clean up APT when done\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Expose the webserver and database ports\nEXPOSE 80/tcp 5432/tcp\n#  We need the volume for importing data from\nVOLUME [\"/data\"]\n#  Set the osm2pgsql import cache size in MB. Used in `run import`.\nENV OSM_IMPORT_CACHE=\"800\"\n#  Add the README\nADD README.md /usr/local/share/doc/\n#  Add the help file\nRUN mkdir -p /usr/local/share/doc/run\nADD help.txt /usr/local/share/doc/run/help.txt\n#  Add the entrypoint\nADD run.sh /usr/local/sbin/run\nENTRYPOINT [\"/sbin/my_init\", \"--\", \"/usr/local/sbin/run\"]\n#  Default to showing the usage text\nCMD [\"help\"]\n","injectedSmells":[],"originalDockerfileHash":"49b9606ec1678db4eeabe1fc1cc04c9d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  # -*- docker-image-name: \"homme/openstreetmap-tiles:latest\" -*-\n#  #\n#   The OpenStreetMap Tile Server\n#\n#   This creates an image with containing the OpenStreetMap tile server stack as\n#   described at\n#   <http://switch2osm.org/serving-tiles/manually-building-a-tile-server-12-04/>.\n#\nFROM phusion/baseimage:0.9.11\nMAINTAINER Homme Zwaagstra <hrz@geodata.soton.ac.uk>\n#   Set the locale. This affects the encoding of the Postgresql template\n#   databases.\nENV LANG=\"C.UTF-8\"\nRUN update-locale LANG=C.UTF-8\n#   Ensure `add-apt-repository` is present\nRUN apt-get update -y\nRUN apt-get install software-properties-common python-software-properties -y\nRUN apt-get install libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-python-dev libboost-regex-dev libboost-system-dev libboost-thread-dev -y\n#   Install remaining dependencies\nRUN apt-get install subversion git-core tar unzip wget bzip2 build-essential autoconf libtool libxml2-dev libgeos-dev libpq-dev libbz2-dev munin-node munin libprotobuf-c0-dev protobuf-c-compiler libfreetype6-dev libpng12-dev libtiff4-dev libicu-dev libgdal-dev libcairo-dev libcairomm-1.0-dev apache2 apache2-dev libagg-dev liblua5.2-dev ttf-unifont -y\nRUN apt-get install autoconf apache2-dev libtool libxml2-dev libbz2-dev libgeos-dev libgeos++-dev libproj-dev gdal-bin libgdal1-dev mapnik-utils python-mapnik libmapnik-dev -y\n#   Install postgresql and postgis\nRUN apt-get install postgresql-9.3-postgis-2.1 postgresql-contrib postgresql-server-dev-9.3 -y\n#   Install osm2pgsql\nRUN cd /tmp \\\n && git clone git://github.com/openstreetmap/osm2pgsql.git\nRUN cd /tmp/osm2pgsql \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   Install the Mapnik library\nRUN cd /tmp \\\n && git clone git://github.com/mapnik/mapnik\nRUN cd /tmp/mapnik \\\n && git checkout 2.2.x \\\n && python scons/scons.py configure INPUT_PLUGINS=all OPTIMIZATION=3 SYSTEM_FONTS=/usr/share/fonts/truetype/ \\\n && python scons/scons.py \\\n && python scons/scons.py install \\\n && ldconfig\n#   Verify that Mapnik has been installed correctly\nRUN python -c 'import mapnik'\n#   Install mod_tile and renderd\nRUN cd /tmp \\\n && git clone git://github.com/openstreetmap/mod_tile.git\nRUN cd /tmp/mod_tile \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && make install-mod_tile \\\n && ldconfig\n#   Install the Mapnik stylesheet\nRUN cd /usr/local/src \\\n && svn co http://svn.openstreetmap.org/applications/rendering/mapnik mapnik-style\n#   Install the coastline data\nRUN cd /usr/local/src/mapnik-style \\\n && ./get-coastlines.sh /usr/local/share\n#   Configure mapnik style-sheets\nRUN cd /usr/local/src/mapnik-style/inc \\\n && cp fontset-settings.xml.inc.template fontset-settings.xml.inc\nADD datasource-settings.sed /tmp/\nRUN cd /usr/local/src/mapnik-style/inc \\\n && sed --file /tmp/datasource-settings.sed datasource-settings.xml.inc.template > datasource-settings.xml.inc\nADD settings.sed /tmp/\nRUN cd /usr/local/src/mapnik-style/inc \\\n && sed --file /tmp/settings.sed settings.xml.inc.template > settings.xml.inc\n#   Configure renderd\nADD renderd.conf.sed /tmp/\nRUN cd /usr/local/etc \\\n && sed --file /tmp/renderd.conf.sed --in-place renderd.conf\n#   Create the files required for the mod_tile system to run\nRUN mkdir /var/run/renderd \\\n && chown www-data: /var/run/renderd\nRUN mkdir /var/lib/mod_tile \\\n && chown www-data /var/lib/mod_tile\n#   Configure mod_tile\nADD mod_tile.load /etc/apache2/mods-available/\nADD mod_tile.conf /etc/apache2/mods-available/\nRUN a2enmod mod_tile\n#   Ensure the webserver user can connect to the gis database\nRUN sed -i -e 's/local all all peer/local gis www-data peer/' /etc/postgresql/9.3/main/pg_hba.conf\n#   Tune postgresql\nADD postgresql.conf.sed /tmp/\nRUN sed --file /tmp/postgresql.conf.sed --in-place /etc/postgresql/9.3/main/postgresql.conf\n#   Define the application logging logic\nADD syslog-ng.conf /etc/syslog-ng/conf.d/local.conf\nRUN rm -rf /var/log/postgresql\n#   Create a `postgresql` `runit` service\nADD postgresql /etc/sv/postgresql\nRUN update-service --add /etc/sv/postgresql\n#   Create an `apache2` `runit` service\nADD apache2 /etc/sv/apache2\nRUN update-service --add /etc/sv/apache2\n#   Create a `renderd` `runit` service\nADD renderd /etc/sv/renderd\nRUN update-service --add /etc/sv/renderd\n#   Clean up APT when done\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Expose the webserver and database ports\nEXPOSE 80/tcp 5432/tcp\n#   We need the volume for importing data from\nVOLUME [\"/data\"]\n#   Set the osm2pgsql import cache size in MB. Used in `run import`.\nENV OSM_IMPORT_CACHE=\"800\"\n#   Add the README\nADD README.md /usr/local/share/doc/\n#   Add the help file\nRUN mkdir -p /usr/local/share/doc/run\nADD help.txt /usr/local/share/doc/run/help.txt\n#   Add the entrypoint\nADD run.sh /usr/local/sbin/run\nENTRYPOINT [\"/sbin/my_init\", \"--\", \"/usr/local/sbin/run\"]\n#   Default to showing the usage text\nCMD [\"help\"]\n","originalDockerfileUglifiedHash":"449ec582cc2b242663450609e77cdd93","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c3577927c3d4416c7786d1edd34b77d74110924f.dockerfile"}