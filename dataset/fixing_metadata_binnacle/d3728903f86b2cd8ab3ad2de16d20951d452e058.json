{"seed":3939186166,"processedDockerfileHash":"537b2d1befa3bb7ead67ecd316f60e71","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM python:2.7-slim\nENV RASA_NLU_DOCKER=\"YES\" \\\n    RASA_NLU_HOME=\"/app\" \\\n    RASA_NLU_PYTHON_PACKAGES=\"/usr/local/lib/python2.7/dist-packages\"\n#   Run updates, install basics and cleanup\n#   - build-essential: Compile specific dependencies\n#   - git-core: Checkout git repos\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends build-essential=12.6 git-core openssl=1.1.1n-0+deb10u4 libssl-dev=1.1.1n-0+deb10u4 libffi6=3.2.1-9 libffi-dev=3.2.1-9 curl=7.64.0-4+deb10u5 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   use bash always\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#  # install java stuff\nRUN echo \"deb http://http.debian.net/debian jessie-backports main\" > /etc/apt/sources.list.d/jessie-backports.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2=1.0.6-9.2~deb10u2 unzip=6.0-23+deb10u3 xz-utils=5.2.4-1+deb10u1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\n#   do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe\nRUN ln -svT \"/usr/lib/jvm/java-8-openjdk-$( dpkg --print-architecture ;)\" /docker-java-home\nENV JAVA_HOME=\"/docker-java-home\"\nENV JAVA_VERSION=\"8u141\"\nENV JAVA_DEBIAN_VERSION=\"8u141-b15-1~deb9u1\"\n#   see https://bugs.debian.org/775775\n#   and https://github.com/docker-library/java/issues/19#issuecomment-70546872\nENV CA_CERTIFICATES_JAVA_VERSION=\"20170531+nmu1\"\nRUN set -ex ; if [ ! -d /usr/share/man/man1 ] ; then mkdir -p /usr/share/man/man1 ; fi ; apt-get update ; apt-get install --no-install-recommends jessie-backports openjdk-8-jdk ca-certificates-java=20190405 -y -t ; rm -rf /var/lib/apt/lists/* ; [ \"$( readlink -f \"$JAVA_HOME\" ;)\" = \"$( docker-java-home ;)\" ] ; update-alternatives --get-selections | awk -v home=\"$( readlink -f \"$JAVA_HOME\" ;)\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }' ; update-alternatives --query java | grep -q 'Status: manual'\n#   see CA_CERTIFICATES_JAVA_VERSION notes above\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#  # done java\nWORKDIR ${RASA_NLU_HOME}\nCOPY . ${RASA_NLU_HOME}\nRUN pip install -r alt_requirements/requirements_mitie.txt\nRUN pip install -e .\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends wget=1.20.1-1.1 -y \\\n && wget -P data/ https://s3-eu-west-1.amazonaws.com/mitie/total_word_feature_extractor.dat \\\n && apt-get remove -y wget \\\n && apt-get autoremove -y\nCOPY sample_configs/config_mitie.json ${RASA_NLU_HOME}/config.json\nVOLUME [\"/app/projects\", \"/app/logs\", \"/app/data\"]\nEXPOSE 5000/tcp\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"start\", \"-c\", \"config.json\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM python:2.7-slim\nENV RASA_NLU_DOCKER=\"YES\" \\\n    RASA_NLU_HOME=\"/app\" \\\n    RASA_NLU_PYTHON_PACKAGES=\"/usr/local/lib/python2.7/dist-packages\"\n#  Run updates, install basics and cleanup\n#  - build-essential: Compile specific dependencies\n#  - git-core: Checkout git repos\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends build-essential git-core openssl libssl-dev libffi6 libffi-dev curl -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  use bash always\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\n# # install java stuff\nRUN echo \"deb http://http.debian.net/debian jessie-backports main\" > /etc/apt/sources.list.d/jessie-backports.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 unzip xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#  add a simple script that can auto-detect the appropriate JAVA_HOME value\n#  based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\n#  do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe\nRUN ln -svT \"/usr/lib/jvm/java-8-openjdk-$( dpkg --print-architecture ;)\" /docker-java-home\nENV JAVA_HOME=\"/docker-java-home\"\nENV JAVA_VERSION=\"8u141\"\nENV JAVA_DEBIAN_VERSION=\"8u141-b15-1~deb9u1\"\n#  see https://bugs.debian.org/775775\n#  and https://github.com/docker-library/java/issues/19#issuecomment-70546872\nENV CA_CERTIFICATES_JAVA_VERSION=\"20170531+nmu1\"\nRUN set -ex ; if [ ! -d /usr/share/man/man1 ] ; then mkdir -p /usr/share/man/man1 ; fi ; apt-get update ; apt-get install jessie-backports openjdk-8-jdk ca-certificates-java -y -t ; rm -rf /var/lib/apt/lists/* ; [ \"$( readlink -f \"$JAVA_HOME\" ;)\" = \"$( docker-java-home ;)\" ] ; update-alternatives --get-selections | awk -v home=\"$( readlink -f \"$JAVA_HOME\" ;)\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }' ; update-alternatives --query java | grep -q 'Status: manual'\n#  see CA_CERTIFICATES_JAVA_VERSION notes above\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n# # done java\nWORKDIR ${RASA_NLU_HOME}\nCOPY . ${RASA_NLU_HOME}\nRUN pip install -r alt_requirements/requirements_mitie.txt\nRUN pip install -e .\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends wget -y \\\n && wget -P data/ https://s3-eu-west-1.amazonaws.com/mitie/total_word_feature_extractor.dat \\\n && apt-get remove -y wget \\\n && apt-get autoremove -y\nCOPY sample_configs/config_mitie.json ${RASA_NLU_HOME}/config.json\nVOLUME [\"/app/projects\", \"/app/logs\", \"/app/data\"]\nEXPOSE 5000/tcp\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"start\", \"-c\", \"config.json\"]\n","injectedSmells":[],"originalDockerfileHash":"9eaac3c2a5d673b91363d050eacb35f6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM python:2.7-slim\nENV RASA_NLU_DOCKER=\"YES\" \\\n    RASA_NLU_HOME=\"/app\" \\\n    RASA_NLU_PYTHON_PACKAGES=\"/usr/local/lib/python2.7/dist-packages\"\n#   Run updates, install basics and cleanup\n#   - build-essential: Compile specific dependencies\n#   - git-core: Checkout git repos\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends build-essential git-core openssl libssl-dev libffi6 libffi-dev curl -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   use bash always\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#  # install java stuff\nRUN echo \"deb http://http.debian.net/debian jessie-backports main\" > /etc/apt/sources.list.d/jessie-backports.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 unzip xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\n#   do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe\nRUN ln -svT \"/usr/lib/jvm/java-8-openjdk-$( dpkg --print-architecture ;)\" /docker-java-home\nENV JAVA_HOME=\"/docker-java-home\"\nENV JAVA_VERSION=\"8u141\"\nENV JAVA_DEBIAN_VERSION=\"8u141-b15-1~deb9u1\"\n#   see https://bugs.debian.org/775775\n#   and https://github.com/docker-library/java/issues/19#issuecomment-70546872\nENV CA_CERTIFICATES_JAVA_VERSION=\"20170531+nmu1\"\nRUN set -ex ; if [ ! -d /usr/share/man/man1 ] ; then mkdir -p /usr/share/man/man1 ; fi ; apt-get update ; apt-get install jessie-backports openjdk-8-jdk ca-certificates-java -y -t ; rm -rf /var/lib/apt/lists/* ; [ \"$( readlink -f \"$JAVA_HOME\" ;)\" = \"$( docker-java-home ;)\" ] ; update-alternatives --get-selections | awk -v home=\"$( readlink -f \"$JAVA_HOME\" ;)\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }' ; update-alternatives --query java | grep -q 'Status: manual'\n#   see CA_CERTIFICATES_JAVA_VERSION notes above\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#  # done java\nWORKDIR ${RASA_NLU_HOME}\nCOPY . ${RASA_NLU_HOME}\nRUN pip install -r alt_requirements/requirements_mitie.txt\nRUN pip install -e .\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends wget -y \\\n && wget -P data/ https://s3-eu-west-1.amazonaws.com/mitie/total_word_feature_extractor.dat \\\n && apt-get remove -y wget \\\n && apt-get autoremove -y\nCOPY sample_configs/config_mitie.json ${RASA_NLU_HOME}/config.json\nVOLUME [\"/app/projects\", \"/app/logs\", \"/app/data\"]\nEXPOSE 5000/tcp\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"start\", \"-c\", \"config.json\"]\n","originalDockerfileUglifiedHash":"ec64f30f8a1b1bdb563a230ad5902410","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d3728903f86b2cd8ab3ad2de16d20951d452e058.dockerfile"}