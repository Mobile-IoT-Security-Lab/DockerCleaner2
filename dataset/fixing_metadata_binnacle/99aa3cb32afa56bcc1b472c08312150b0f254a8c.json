{"seed":2849013319,"processedDockerfileHash":"e001be4e38866988ec3b34656b16749b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\nMAINTAINER Fritz SMH <fritz.smh@gmail.com>\n#  ## Configuration #################################\nENV domogik_release=\"develop\"\nENV domogikmq_release=\"1.4\"\nENV domoweb_release=\"develop\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n#  ##################################################\n#\n#  ## How to...\n#\n#   1. Do development on git sources with the built image\n#   \n#   TODO : explain\n#\n#\n#\n#  ## TODO : \n#\n#   Improvments\n#   - process TODO in this Dockerfile\n#   - find a proper way to work on git sources and do the related doc (volumes)\n#     - https://howchoo.com/g/zdq5m2exmze/docker-persistence-with-a-data-only-container\n#     - https://howchoo.com/g/y2y1mtkznda/getting-started-with-docker-compose-and-django\n#     - http://www.alexecollins.com/docker-persistence/\n#   - install weather\n#   - find a way with domoweb to put some widget automatically\n#  ## Apt \nRUN :\n#  ## Tools not mandatory for Domogik but usefull for tests/debug/development\nRUN (apt-get update ;apt-get install --no-install-recommends vim telnet wget openssh-server screen dos2unix tcpdump -y )\n#  ## Minimum requirements\nRUN (apt-get update ;apt-get install --no-install-recommends sudo python2.7-dev python-pip git -y )\nRUN pip install netifaces==0.11.0 \\\n && pip install sphinx-better-theme==0.1.5\n#  ## Database server\n#   Install MySQL\n#   warning : no root password defined!\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server\n#   Create the empty database\nRUN /bin/bash -c \"/usr/bin/mysqld_safe &\" \\\n && sleep 5 \\\n && mysql -u root -e \"CREATE DATABASE domogik;\" \\\n && mysql -u root -e \"GRANT ALL PRIVILEGES ON domogik.* to domogik@localhost IDENTIFIED BY 'domopass';\"\n#  ## Create user and directories\nRUN useradd -M domogik \\\n && mkdir -p /opt/dmg \\\n && chown domogik:domogik /opt/dmg\n#  ## Change passwords\nRUN echo \"root:$ROOT_PASSWORD\" | chpasswd \\\n && echo \"domogik:$DOMOGIK_PASSWORD\" | chpasswd\n#  ## Create a fake cron folder to avoid error during install\nRUN mkdir -p /etc/cron.d/\n#  ## Deploy the sources\n#   1. demo mode\n#   grab sources from a git tag\nRUN cd /opt/dmg \\\n && git clone https://github.com/domogik/domogik-mq.git \\\n && cd /opt/dmg/domogik-mq \\\n && git checkout ${domogikmq_release}\nRUN cd /opt/dmg \\\n && git clone https://github.com/domogik/domogik.git \\\n && cd /opt/dmg/domogik \\\n && git checkout ${domogik_release}\nRUN cd /opt/dmg \\\n && git clone https://github.com/domogik/domoweb.git \\\n && cd /opt/dmg/domoweb \\\n && git checkout ${domoweb_release}\n#   2. dev mode\n#   this is done from command line with -v\n#   TODO : improve...\n#          currently this is only a copy\n#  COPY git/domogik /opt/dmg/domogik\n#  COPY git/domogik-mq /opt/dmg/domogik-mq\n#  RUN cd /opt/dmg/domogik-mq \\\n#   && git checkout ${domogikmq_release} \n#  RUN cd /opt/dmg/domogik \\\n#   && git checkout ${domogik_release}  \n#  ## Install\n#   Patches. TODO : move before\nRUN pip install Flask-Themes2==1.0.0\nRUN (apt-get update ;apt-get install --no-install-recommends libpq-dev -y )\nRUN pip install alembic==1.10.3\nRUN pip install SQLAlchemy-Utils==0.41.0\n#   Domogik-mq\nRUN cd /opt/dmg/domogik-mq \\\n && python install.py --daemon --user domogik --command-line\n#   Domogik\n#   MySQL should be run before install !\nRUN /bin/bash -c \"/usr/bin/mysqld_safe &\" \\\n && sleep 5 \\\n && cd /opt/dmg/domogik \\\n && python install.py --user domogik --command-line --no-create-database --admin_interfaces \"*\" --admin_secret_key \"dockersupersecretkey\"\n#   Domoweb\nRUN cd /opt/dmg/domoweb \\\n && python install.py --user domogik\n#  ## Install a few packages and their needed dependencies\nRUN su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-plugin-diskfree/archive/1.4.zip\"\nRUN su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-plugin-weather/archive/1.4.zip\"\nRUN su - domogik -c \"dmg_package -i http://github.com/domogik/domogik-brain-base/archive/1.3.zip\"\nRUN su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-plugin-generic/archive/develop.zip\"\nRUN pip install npyscreen==4.10.5 \\\n && su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-interface-chat/archive/develop.zip\"\n#  ## Cleanup\nRUN apt-get clean\n#  ## Expose ports\n#   40404 : domoweb\n#   40405 : domogik admin websocket\n#   40406 : domogik admin http\n#   3865 : xpl hub\nEXPOSE 40404/tcp 40405/tcp 40406/tcp 22/tcp 3865/tcp\n#  ## Volumes\n#   we set /opt/dmg/ as a volume to allow changes to be kept from one run to another run in case of debugging tests.\nVOLUME /opt/dmg/\n#   we set /var/log/domogik as a volume to allow checking logs from outside the container.\nVOLUME /var/log/domogik/\n#   we set /var/lib/domogik as a volume to allow access to domogik packages and other components\nVOLUME /var/lib/domogik/\n#  ## Startup actions\nCOPY scripts/startup.sh /opt/startup.sh\nRUN chmod a+x /opt/startup.sh\nCMD [\"/bin/bash\", \"/opt/startup.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nMAINTAINER Fritz SMH <fritz.smh@gmail.com>\n# ## Configuration #################################\nENV domogik_release=\"develop\"\nENV domogikmq_release=\"1.4\"\nENV domoweb_release=\"develop\"\nENV ROOT_PASSWORD=\"domopass\"\nENV DOMOGIK_PASSWORD=\"domopass\"\n# ##################################################\n#\n# ## How to...\n#\n#  1. Do development on git sources with the built image\n#  \n#  TODO : explain\n#\n#\n#\n# ## TODO : \n#\n#  Improvments\n#  - process TODO in this Dockerfile\n#  - find a proper way to work on git sources and do the related doc (volumes)\n#    - https://howchoo.com/g/zdq5m2exmze/docker-persistence-with-a-data-only-container\n#    - https://howchoo.com/g/y2y1mtkznda/getting-started-with-docker-compose-and-django\n#    - http://www.alexecollins.com/docker-persistence/\n#  - install weather\n#  - find a way with domoweb to put some widget automatically\n# ## Apt \nRUN apt-get update\n# ## Tools not mandatory for Domogik but usefull for tests/debug/development\nRUN apt-get install vim telnet wget openssh-server screen dos2unix tcpdump -y\n# ## Minimum requirements\nRUN apt-get install sudo python2.7-dev python-pip git -y\nRUN pip install netifaces \\\n && pip install sphinx-better-theme\n# ## Database server\n#  Install MySQL\n#  warning : no root password defined!\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server\n#  Create the empty database\nRUN /bin/bash -c \"/usr/bin/mysqld_safe &\" \\\n && sleep 5 \\\n && mysql -u root -e \"CREATE DATABASE domogik;\" \\\n && mysql -u root -e \"GRANT ALL PRIVILEGES ON domogik.* to domogik@localhost IDENTIFIED BY 'domopass';\"\n# ## Create user and directories\nRUN useradd -M domogik \\\n && mkdir -p /opt/dmg \\\n && chown domogik:domogik /opt/dmg\n# ## Change passwords\nRUN echo \"root:$ROOT_PASSWORD\" | chpasswd \\\n && echo \"domogik:$DOMOGIK_PASSWORD\" | chpasswd\n# ## Create a fake cron folder to avoid error during install\nRUN mkdir -p /etc/cron.d/\n# ## Deploy the sources\n#  1. demo mode\n#  grab sources from a git tag\nRUN cd /opt/dmg \\\n && git clone https://github.com/domogik/domogik-mq.git \\\n && cd /opt/dmg/domogik-mq \\\n && git checkout ${domogikmq_release}\nRUN cd /opt/dmg \\\n && git clone https://github.com/domogik/domogik.git \\\n && cd /opt/dmg/domogik \\\n && git checkout ${domogik_release}\nRUN cd /opt/dmg \\\n && git clone https://github.com/domogik/domoweb.git \\\n && cd /opt/dmg/domoweb \\\n && git checkout ${domoweb_release}\n#  2. dev mode\n#  this is done from command line with -v\n#  TODO : improve...\n#         currently this is only a copy\n# COPY git/domogik /opt/dmg/domogik\n# COPY git/domogik-mq /opt/dmg/domogik-mq\n# RUN cd /opt/dmg/domogik-mq \\\n#  && git checkout ${domogikmq_release} \n# RUN cd /opt/dmg/domogik \\\n#  && git checkout ${domogik_release}  \n# ## Install\n#  Patches. TODO : move before\nRUN pip install Flask-Themes2\nRUN apt-get install libpq-dev -y\nRUN pip install alembic\nRUN pip install SQLAlchemy-Utils\n#  Domogik-mq\nRUN cd /opt/dmg/domogik-mq \\\n && python install.py --daemon --user domogik --command-line\n#  Domogik\n#  MySQL should be run before install !\nRUN /bin/bash -c \"/usr/bin/mysqld_safe &\" \\\n && sleep 5 \\\n && cd /opt/dmg/domogik \\\n && python install.py --user domogik --command-line --no-create-database --admin_interfaces \"*\" --admin_secret_key \"dockersupersecretkey\"\n#  Domoweb\nRUN cd /opt/dmg/domoweb \\\n && python install.py --user domogik\n# ## Install a few packages and their needed dependencies\nRUN su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-plugin-diskfree/archive/1.4.zip\"\nRUN su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-plugin-weather/archive/1.4.zip\"\nRUN su - domogik -c \"dmg_package -i http://github.com/domogik/domogik-brain-base/archive/1.3.zip\"\nRUN su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-plugin-generic/archive/develop.zip\"\nRUN pip install npyscreen \\\n && su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-interface-chat/archive/develop.zip\"\n# ## Cleanup\nRUN apt-get clean\n# ## Expose ports\n#  40404 : domoweb\n#  40405 : domogik admin websocket\n#  40406 : domogik admin http\n#  3865 : xpl hub\nEXPOSE 40404/tcp 40405/tcp 40406/tcp 22/tcp 3865/tcp\n# ## Volumes\n#  we set /opt/dmg/ as a volume to allow changes to be kept from one run to another run in case of debugging tests.\nVOLUME /opt/dmg/\n#  we set /var/log/domogik as a volume to allow checking logs from outside the container.\nVOLUME /var/log/domogik/\n#  we set /var/lib/domogik as a volume to allow access to domogik packages and other components\nVOLUME /var/lib/domogik/\n# ## Startup actions\nCOPY scripts/startup.sh /opt/startup.sh\nRUN chmod a+x /opt/startup.sh\nCMD [\"/bin/bash\", \"/opt/startup.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"482bdad063511f3ad248cc4fa9d07e47","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nMAINTAINER Fritz SMH <fritz.smh@gmail.com>\n#  ## Configuration #################################\nENV domogik_release=\"develop\"\nENV domogikmq_release=\"1.4\"\nENV domoweb_release=\"develop\"\nENV ROOT_PASSWORD=\"domopass\"\nENV DOMOGIK_PASSWORD=\"domopass\"\n#  ##################################################\n#\n#  ## How to...\n#\n#   1. Do development on git sources with the built image\n#   \n#   TODO : explain\n#\n#\n#\n#  ## TODO : \n#\n#   Improvments\n#   - process TODO in this Dockerfile\n#   - find a proper way to work on git sources and do the related doc (volumes)\n#     - https://howchoo.com/g/zdq5m2exmze/docker-persistence-with-a-data-only-container\n#     - https://howchoo.com/g/y2y1mtkznda/getting-started-with-docker-compose-and-django\n#     - http://www.alexecollins.com/docker-persistence/\n#   - install weather\n#   - find a way with domoweb to put some widget automatically\n#  ## Apt \nRUN apt-get update\n#  ## Tools not mandatory for Domogik but usefull for tests/debug/development\nRUN apt-get install vim telnet wget openssh-server screen dos2unix tcpdump -y\n#  ## Minimum requirements\nRUN apt-get install sudo python2.7-dev python-pip git -y\nRUN pip install netifaces \\\n && pip install sphinx-better-theme\n#  ## Database server\n#   Install MySQL\n#   warning : no root password defined!\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server\n#   Create the empty database\nRUN /bin/bash -c \"/usr/bin/mysqld_safe &\" \\\n && sleep 5 \\\n && mysql -u root -e \"CREATE DATABASE domogik;\" \\\n && mysql -u root -e \"GRANT ALL PRIVILEGES ON domogik.* to domogik@localhost IDENTIFIED BY 'domopass';\"\n#  ## Create user and directories\nRUN useradd -M domogik \\\n && mkdir -p /opt/dmg \\\n && chown domogik:domogik /opt/dmg\n#  ## Change passwords\nRUN echo \"root:$ROOT_PASSWORD\" | chpasswd \\\n && echo \"domogik:$DOMOGIK_PASSWORD\" | chpasswd\n#  ## Create a fake cron folder to avoid error during install\nRUN mkdir -p /etc/cron.d/\n#  ## Deploy the sources\n#   1. demo mode\n#   grab sources from a git tag\nRUN cd /opt/dmg \\\n && git clone https://github.com/domogik/domogik-mq.git \\\n && cd /opt/dmg/domogik-mq \\\n && git checkout ${domogikmq_release}\nRUN cd /opt/dmg \\\n && git clone https://github.com/domogik/domogik.git \\\n && cd /opt/dmg/domogik \\\n && git checkout ${domogik_release}\nRUN cd /opt/dmg \\\n && git clone https://github.com/domogik/domoweb.git \\\n && cd /opt/dmg/domoweb \\\n && git checkout ${domoweb_release}\n#   2. dev mode\n#   this is done from command line with -v\n#   TODO : improve...\n#          currently this is only a copy\n#  COPY git/domogik /opt/dmg/domogik\n#  COPY git/domogik-mq /opt/dmg/domogik-mq\n#  RUN cd /opt/dmg/domogik-mq \\\n#   && git checkout ${domogikmq_release} \n#  RUN cd /opt/dmg/domogik \\\n#   && git checkout ${domogik_release}  \n#  ## Install\n#   Patches. TODO : move before\nRUN pip install Flask-Themes2\nRUN apt-get install libpq-dev -y\nRUN pip install alembic\nRUN pip install SQLAlchemy-Utils\n#   Domogik-mq\nRUN cd /opt/dmg/domogik-mq \\\n && python install.py --daemon --user domogik --command-line\n#   Domogik\n#   MySQL should be run before install !\nRUN /bin/bash -c \"/usr/bin/mysqld_safe &\" \\\n && sleep 5 \\\n && cd /opt/dmg/domogik \\\n && python install.py --user domogik --command-line --no-create-database --admin_interfaces \"*\" --admin_secret_key \"dockersupersecretkey\"\n#   Domoweb\nRUN cd /opt/dmg/domoweb \\\n && python install.py --user domogik\n#  ## Install a few packages and their needed dependencies\nRUN su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-plugin-diskfree/archive/1.4.zip\"\nRUN su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-plugin-weather/archive/1.4.zip\"\nRUN su - domogik -c \"dmg_package -i http://github.com/domogik/domogik-brain-base/archive/1.3.zip\"\nRUN su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-plugin-generic/archive/develop.zip\"\nRUN pip install npyscreen \\\n && su - domogik -c \"dmg_package -i http://github.com/fritz-smh/domogik-interface-chat/archive/develop.zip\"\n#  ## Cleanup\nRUN apt-get clean\n#  ## Expose ports\n#   40404 : domoweb\n#   40405 : domogik admin websocket\n#   40406 : domogik admin http\n#   3865 : xpl hub\nEXPOSE 40404/tcp 40405/tcp 40406/tcp 22/tcp 3865/tcp\n#  ## Volumes\n#   we set /opt/dmg/ as a volume to allow changes to be kept from one run to another run in case of debugging tests.\nVOLUME /opt/dmg/\n#   we set /var/log/domogik as a volume to allow checking logs from outside the container.\nVOLUME /var/log/domogik/\n#   we set /var/lib/domogik as a volume to allow access to domogik packages and other components\nVOLUME /var/lib/domogik/\n#  ## Startup actions\nCOPY scripts/startup.sh /opt/startup.sh\nRUN chmod a+x /opt/startup.sh\nCMD [\"/bin/bash\", \"/opt/startup.sh\"]\n","originalDockerfileUglifiedHash":"2982729f8fb6aef43ef72bf417905e3e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/99aa3cb32afa56bcc1b472c08312150b0f254a8c.dockerfile"}