{"seed":133836196,"processedDockerfileHash":"8a7f131bb790acd30359d95210e7cd84","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.4\nLABEL version=\"1.0.0\" \\\n      node=\"v7.7\" \\\n      os=\"Alpine v3.4\" \\\n      description=\"Node v7.7 compiled from source running on Alpine v3.4\"\nENV TERM=\"xterm\" \\\n    NLS_LANG=\"American_America.AL32UTF8\" \\\n    LANG=\"C.UTF-8\" \\\n    LANGUAGE=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    TIMEZONE=\"America/Denver\"\nENV NODE_VERSION=\"v7.7.4\" \\\n    NODE_PREFIX=\"/usr/local\"\nRUN set -x \\\n && echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n && apk update \\\n && apk add ca-certificates=20161130-r0 curl=7.60.0-r1 g++=5.3.0-r0 gcc=5.3.0-r0 git=2.8.6-r0 gnupg=2.1.12-r1 libgcc=5.3.0-r0 libstdc++=5.3.0-r0 linux-headers=4.4.6-r1 make=4.1-r1 mercurial=4.3.1-r0 openssh=7.2_p2-r5 paxctl=0.9-r0 python=2.7.14-r0 shadow subversion=1.9.7-r0 sudo=1.8.16-r0 tar=1.29-r1\n#  #############################################################################\n#   Install Node & NPM\n#   Based on https://github.com/mhart/alpine-node/blob/master/Dockerfile (thank you)\n#  #############################################################################\nRUN set -x \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && mkdir /node_src \\\n && cd /node_src \\\n && curl -o node-${NODE_VERSION}.tar.gz -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz \\\n && curl -o SHASUMS256.txt.asc -sSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc \\\n && gpg --verify SHASUMS256.txt.asc \\\n && grep node-${NODE_VERSION}.tar.gz SHASUMS256.txt.asc | sha256sum -c -\nRUN set -x \\\n && cd /node_src \\\n && tar -zxf node-${NODE_VERSION}.tar.gz \\\n && cd node-${NODE_VERSION} \\\n && export GYP_DEFINES=\"linux_use_gold_flags=0\" \\\n && ./configure --prefix=${NODE_PREFIX} \\\n && NPROC=$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) \\\n && make -j${NPROC} -C out mksnapshot BUILDTYPE=Release \\\n && paxctl -cm out/Release/mksnapshot \\\n && make -j${NPROC} \\\n && make install \\\n && paxctl -cm ${NODE_PREFIX}/bin/node\nRUN set -x \\\n && npm install gulp-cli@2.3.0 grunt-cli@1.4.3 bower@1.8.14 markdown-styles@3.2.0 yarn@1.22.19 --silent -g\n#  #############################################################################\n#   users\n#  #############################################################################\nRUN set -x \\\n && addgroup dev \\\n && adduser -D -s /bin/sh -G dev dev \\\n && echo \"dev:password\" | chpasswd \\\n && curl -o /run-as-user https://raw.githubusercontent.com/mkenney/docker-scripts/master/container/run-as-user \\\n && chmod 0755 /run-as-user\n#  #############################################################################\n#   ~ fin ~\n#  #############################################################################\nRUN set -x \\\n && apk del curl gnupg linux-headers paxctl python tar \\\n && find ${NODE_PREFIX}/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf \\\n && rm -rf /node_src /tmp/* /var/cache/apk/* ${NODE_PREFIX}/lib/node_modules/npm/man ${NODE_PREFIX}/lib/node_modules/npm/doc ${NODE_PREFIX}/lib/node_modules/npm/html\nVOLUME /src\nWORKDIR /src\nENTRYPOINT [\"/run-as-user\"]\nCMD [\"/usr/local/bin/npm\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.4\nLABEL version=\"1.0.0\" \\\n      node=\"v7.7\" \\\n      os=\"Alpine v3.4\" \\\n      description=\"Node v7.7 compiled from source running on Alpine v3.4\"\nENV TERM=\"xterm\" \\\n    NLS_LANG=\"American_America.AL32UTF8\" \\\n    LANG=\"C.UTF-8\" \\\n    LANGUAGE=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    TIMEZONE=\"America/Denver\"\nENV NODE_VERSION=\"v7.7.4\" \\\n    NODE_PREFIX=\"/usr/local\"\nRUN set -x \\\n && echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n && apk update \\\n && apk add ca-certificates curl g++ gcc git gnupg libgcc libstdc++ linux-headers make mercurial openssh paxctl python shadow subversion sudo tar\n# #############################################################################\n#  Install Node & NPM\n#  Based on https://github.com/mhart/alpine-node/blob/master/Dockerfile (thank you)\n# #############################################################################\nRUN set -x \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && mkdir /node_src \\\n && cd /node_src \\\n && curl -o node-${NODE_VERSION}.tar.gz -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz \\\n && curl -o SHASUMS256.txt.asc -sSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc \\\n && gpg --verify SHASUMS256.txt.asc \\\n && grep node-${NODE_VERSION}.tar.gz SHASUMS256.txt.asc | sha256sum -c -\nRUN set -x \\\n && cd /node_src \\\n && tar -zxf node-${NODE_VERSION}.tar.gz \\\n && cd node-${NODE_VERSION} \\\n && export GYP_DEFINES=\"linux_use_gold_flags=0\" \\\n && ./configure --prefix=${NODE_PREFIX} \\\n && NPROC=$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) \\\n && make -j${NPROC} -C out mksnapshot BUILDTYPE=Release \\\n && paxctl -cm out/Release/mksnapshot \\\n && make -j${NPROC} \\\n && make install \\\n && paxctl -cm ${NODE_PREFIX}/bin/node\nRUN set -x \\\n && npm install gulp-cli grunt-cli bower markdown-styles yarn --silent -g\n# #############################################################################\n#  users\n# #############################################################################\nRUN set -x \\\n && addgroup dev \\\n && adduser -D -s /bin/sh -G dev dev \\\n && echo \"dev:password\" | chpasswd \\\n && curl -o /run-as-user https://raw.githubusercontent.com/mkenney/docker-scripts/master/container/run-as-user \\\n && chmod 0755 /run-as-user\n# #############################################################################\n#  ~ fin ~\n# #############################################################################\nRUN set -x \\\n && apk del curl gnupg linux-headers paxctl python tar \\\n && find ${NODE_PREFIX}/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf \\\n && rm -rf /node_src /tmp/* /var/cache/apk/* ${NODE_PREFIX}/lib/node_modules/npm/man ${NODE_PREFIX}/lib/node_modules/npm/doc ${NODE_PREFIX}/lib/node_modules/npm/html\nVOLUME /src\nWORKDIR /src\nENTRYPOINT [\"/run-as-user\"]\nCMD [\"/usr/local/bin/npm\"]\n","injectedSmells":[],"originalDockerfileHash":"6231e8602447bb0e9425b6af07fa2da4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.4\nLABEL version=\"1.0.0\" \\\n      node=\"v7.7\" \\\n      os=\"Alpine v3.4\" \\\n      description=\"Node v7.7 compiled from source running on Alpine v3.4\"\nENV TERM=\"xterm\" \\\n    NLS_LANG=\"American_America.AL32UTF8\" \\\n    LANG=\"C.UTF-8\" \\\n    LANGUAGE=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    TIMEZONE=\"America/Denver\"\nENV NODE_VERSION=\"v7.7.4\" \\\n    NODE_PREFIX=\"/usr/local\"\nRUN set -x \\\n && echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n && apk update \\\n && apk add ca-certificates curl g++ gcc git gnupg libgcc libstdc++ linux-headers make mercurial openssh paxctl python shadow subversion sudo tar\n#  #############################################################################\n#   Install Node & NPM\n#   Based on https://github.com/mhart/alpine-node/blob/master/Dockerfile (thank you)\n#  #############################################################################\nRUN set -x \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && mkdir /node_src \\\n && cd /node_src \\\n && curl -o node-${NODE_VERSION}.tar.gz -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz \\\n && curl -o SHASUMS256.txt.asc -sSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc \\\n && gpg --verify SHASUMS256.txt.asc \\\n && grep node-${NODE_VERSION}.tar.gz SHASUMS256.txt.asc | sha256sum -c -\nRUN set -x \\\n && cd /node_src \\\n && tar -zxf node-${NODE_VERSION}.tar.gz \\\n && cd node-${NODE_VERSION} \\\n && export GYP_DEFINES=\"linux_use_gold_flags=0\" \\\n && ./configure --prefix=${NODE_PREFIX} \\\n && NPROC=$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) \\\n && make -j${NPROC} -C out mksnapshot BUILDTYPE=Release \\\n && paxctl -cm out/Release/mksnapshot \\\n && make -j${NPROC} \\\n && make install \\\n && paxctl -cm ${NODE_PREFIX}/bin/node\nRUN set -x \\\n && npm install gulp-cli grunt-cli bower markdown-styles yarn --silent -g\n#  #############################################################################\n#   users\n#  #############################################################################\nRUN set -x \\\n && addgroup dev \\\n && adduser -D -s /bin/sh -G dev dev \\\n && echo \"dev:password\" | chpasswd \\\n && curl -o /run-as-user https://raw.githubusercontent.com/mkenney/docker-scripts/master/container/run-as-user \\\n && chmod 0755 /run-as-user\n#  #############################################################################\n#   ~ fin ~\n#  #############################################################################\nRUN set -x \\\n && apk del curl gnupg linux-headers paxctl python tar \\\n && find ${NODE_PREFIX}/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf \\\n && rm -rf /node_src /tmp/* /var/cache/apk/* ${NODE_PREFIX}/lib/node_modules/npm/man ${NODE_PREFIX}/lib/node_modules/npm/doc ${NODE_PREFIX}/lib/node_modules/npm/html\nVOLUME /src\nWORKDIR /src\nENTRYPOINT [\"/run-as-user\"]\nCMD [\"/usr/local/bin/npm\"]\n","originalDockerfileUglifiedHash":"82924283ea2b22a3dd707e88caa037c1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b34db7fae7cc159c469c2b43e6ffd220492ce93f.dockerfile"}