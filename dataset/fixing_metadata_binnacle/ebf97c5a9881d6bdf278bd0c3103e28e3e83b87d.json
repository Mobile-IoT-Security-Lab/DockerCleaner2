{"seed":2335661824,"processedDockerfileHash":"e4d221974ae83069459eb9aa0ac35a3d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM quay.io/tianyikillua/base:latest\nLABEL maintainer=\"\\\"Tianyi Li <tianyikillua@gmail.com>\\\"\"\n#   Variables\nENV HDF5_VER=\"1.8.14\"\nENV MED_VER=\"3.3.1\"\nENV METIS_VER=\"5.1.0\"\nENV PARMETIS_VER=\"4.0.3\"\nENV SCOTCH_VER=\"6.0.4\"\nENV MUMPS_VER=\"5.1.1\"\nENV MFRONT_VER=\"3.0.0\"\nENV PETSC_VER=\"3.7.7\"\nENV SCALAPACK_VER=\"2.0.2\"\nENV ASTER_VER=\"13.6\"\nENV SCOTCH_SRC=\"scotch-${SCOTCH_VER}-aster5.tar.gz\"\nENV MUMPS_SRC=\"mumps-${MUMPS_VER}-aster2.tar.gz\"\nENV ASTER_SRC=\"aster-${ASTER_VER}.0.tgz\"\nENV SCALAPACK_SRC=\"http://www.netlib.org/scalapack/scalapack-${SCALAPACK_VER}.tgz\"\nENV PARMETIS_SRC=\"http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/parmetis-${PARMETIS_VER}.tar.gz\"\nENV PETSC_SRC=\"https://bitbucket.org/petsc/petsc/get/v${PETSC_VER}.tar.gz\"\nENV ASTER_FULL_SRC=\"https://www.code-aster.org/FICHIERS/aster-full-src-13.6.0-1.noarch.tar.gz\"\nENV ASTER_ROOT=\"/home/aster/aster\"\nENV PUBLIC=\"$ASTER_ROOT/public\"\n#   Get Ubuntu updates and basic packages\nUSER root\nRUN apt-get update \\\n && apt-get upgrade -y --with-new-pkgs -o Dpkg::Options::=\"--force-confold\" \\\n && apt-get install --no-install-recommends patch=2.7.6-7build2 make=4.3-4.1build1 cmake=3.25.1-1 zlib1g-dev=1:1.2.13.dfsg-1ubuntu4 tk=8.6.13 bison=2:3.8.2+dfsg-1build1 flex=2.6.4-8.1 libglu1-mesa=9.0.2-1.1 libxcursor-dev=1:1.2.1-1 libmpich-dev=4.0.2-3build1 libopenblas-dev=0.3.21+ds-4 libboost-python-dev=1.74.0.3ubuntu7 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nUSER aster\nWORKDIR /tmp\n#   Download and install the latest stable version\nRUN wget --no-check-certificate --quiet ${ASTER_FULL_SRC} -O aster_full.tar.gz \\\n && mkdir aster_full \\\n && tar xf aster_full.tar.gz -C aster_full --strip-components 1 \\\n && cd aster_full \\\n && python setup.py install --prefix ${ASTER_ROOT} --noprompt \\\n && mv SRC/${SCOTCH_SRC} SRC/${MUMPS_SRC} SRC/${ASTER_SRC} /tmp \\\n && rm -rf /tmp/aster_full.tar.gz /tmp/aster_full\n#   Build ptscotch\nCOPY --chown=aster:aster code_aster/data/patch_ptscotch /tmp/patch_ptscotch\nRUN mkdir ptscotch \\\n && tar xf ${SCOTCH_SRC} -C ptscotch --strip-components 1 \\\n && patch -s -p0 < patch_ptscotch \\\n && cd ptscotch/src \\\n && make scotch esmumps ptscotch ptesmumps CCD=mpicc \\\n && mkdir ${PUBLIC}/ptscotch-${SCOTCH_VER} \\\n && make install prefix=${PUBLIC}/ptscotch-${SCOTCH_VER} \\\n && rm -rf /tmp/${SCOTCH_SRC} /tmp/patch_ptscotch /tmp/ptscotch\n#   Build parmetis\nRUN wget --no-check-certificate --quiet ${PARMETIS_SRC} -O parmetis.tar.gz \\\n && mkdir parmetis \\\n && tar xf parmetis.tar.gz -C parmetis --strip-components 1 \\\n && cd parmetis \\\n && make config prefix=${PUBLIC}/parmetis-${PARMETIS_VER} \\\n && make \\\n && make install \\\n && rm -rf /tmp/parmetis.tar.gz /tmp/parmetis\n#   Build scalapack\nRUN wget --no-check-certificate --quiet ${SCALAPACK_SRC} -O scalapack.tar.gz \\\n && mkdir scalapack \\\n && tar xf scalapack.tar.gz -C scalapack --strip-components 1 \\\n && cd scalapack \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=${PUBLIC}/scalapack-${SCALAPACK_VER} -DBUILD_SHARED_LIBS=ON .. \\\n && make \\\n && make install \\\n && cd ${PUBLIC}/scalapack-${SCALAPACK_VER}/lib \\\n && cp libscalapack.so libblacs.so \\\n && rm -rf /tmp/scalapack.tar.gz /tmp/scalapack\n#   Build parallel mumps\nCOPY --chown=aster:aster code_aster/data/patch_mumps /tmp/patch_mumps\nRUN mkdir mumps \\\n && tar xf ${MUMPS_SRC} -C mumps --strip-components 1 \\\n && patch -s -p0 < patch_mumps \\\n && cd mumps \\\n && export INCLUDES=\"${PUBLIC}/metis-${METIS_VER}/include ${PUBLIC}/parmetis-${PARMETIS_VER}/include ${PUBLIC}/ptscotch-${SCOTCH_VER}/include\" \\\n && export LIBPATH=\"${PUBLIC}/metis-${METIS_VER}/lib ${PUBLIC}/parmetis-${PARMETIS_VER}/lib ${PUBLIC}/ptscotch-${SCOTCH_VER}/lib ${PUBLIC}/scalapack-${SCALAPACK_VER}/lib\" \\\n && ./waf configure --prefix=${PUBLIC}/mumps-${MUMPS_VER}_mpi --install-tests --enable-mpi \\\n && ./waf build --jobs=1 \\\n && ./waf install --jobs=1 \\\n && rm -rf /tmp/${MUMPS_SRC} /tmp/patch_mumps /tmp/mumps\n#   Build parallel PETSc\nRUN wget --no-check-certificate --quiet ${PETSC_SRC} -O petsc.tar.gz \\\n && mkdir petsc \\\n && tar xf petsc.tar.gz -C petsc --strip-components 1 \\\n && cd petsc \\\n && ./configure --COPTFLAGS=\"-O2\" --CXXOPTFLAGS=\"-O2\" --FOPTFLAGS=\"-O2\" --with-debugging=0 --with-shared-libraries=1 --with-scalapack-dir=${PUBLIC}/scalapack-${SCALAPACK_VER} --with-mumps-dir=${PUBLIC}/mumps-${MUMPS_VER}_mpi --with-metis-dir=${PUBLIC}/metis-${METIS_VER} --with-parmetis-dir=${PUBLIC}/parmetis-${PARMETIS_VER} --with-ptscotch-dir=${PUBLIC}/ptscotch-${SCOTCH_VER} --download-hypre --download-ml --LIBS=\"-lgomp\" --prefix=${PUBLIC}/petsc-${PETSC_VER} \\\n && make all \\\n && make install \\\n && rm -rf /tmp/petsc.tar.gz /tmp/petsc\n#   Build parallel aster\nCOPY --chown=aster:aster code_aster/data/cfg.py /tmp/cfg.py\nRUN . ${ASTER_ROOT}/${ASTER_VER}/share/aster/profile_mfront.sh \\\n && mkdir aster \\\n && tar xf ${ASTER_SRC} -C aster --strip-components 1 \\\n && cd aster \\\n && export INCLUDES=\"${PUBLIC}/hdf5-${HDF5_VER}/include ${PUBLIC}/med-${MED_VER}/include ${PUBLIC}/metis-${METIS_VER}/include ${PUBLIC}/parmetis-${PARMETIS_VER}/include ${PUBLIC}/ptscotch-${SCOTCH_VER}/include ${PUBLIC}/mumps-${MUMPS_VER}_mpi/include ${PUBLIC}/petsc-${PETSC_VER}/include ${PUBLIC}/tfel-${MFRONT_VER}/include\" \\\n && export LIBPATH=\"${PUBLIC}/hdf5-${HDF5_VER}/lib ${PUBLIC}/med-${MED_VER}/lib ${PUBLIC}/metis-${METIS_VER}/lib ${PUBLIC}/parmetis-${PARMETIS_VER}/lib ${PUBLIC}/ptscotch-${SCOTCH_VER}/lib ${PUBLIC}/scalapack-${SCALAPACK_VER}/lib ${PUBLIC}/mumps-${MUMPS_VER}_mpi/lib ${PUBLIC}/petsc-${PETSC_VER}/lib ${PUBLIC}/tfel-${MFRONT_VER}/lib\" \\\n && export METISDIR=${PUBLIC}/metis-${METIS_VER} \\\n && export TFELHOME=${PUBLIC}/tfel-${MFRONT_VER} \\\n && export GMSH_BIN_DIR=${PUBLIC}/gmsh-3.0.6-Linux64/bin \\\n && export HOMARD_ASTER_ROOT_DIR=${PUBLIC}/homard-11.10 \\\n && ./waf configure --use-config-dir=/tmp --use-config=cfg --prefix=${ASTER_ROOT}/${ASTER_VER}_mpi --install-tests --enable-mpi \\\n && ./waf build \\\n && ./waf install \\\n && rm -rf /tmp/${ASTER_SRC} /tmp/cfg.py /tmp/aster\n#   Add a welcome message and a script for testcases\nWORKDIR /home/aster\nCOPY code_aster/WELCOME /home/aster/WELCOME\nCOPY run_tests.sh /home/aster/run_tests.sh\nRUN echo \"vers : stable_mpi:${ASTER_ROOT}/${ASTER_VER}_mpi/share/aster\" >> ${ASTER_ROOT}/etc/codeaster/aster \\\n && echo \"localhost\" > ${ASTER_ROOT}/etc/codeaster/mpi_hostfile \\\n && rm -rf /tmp/* \\\n && echo \"\" >> .bashrc \\\n && echo \"source ~/aster/etc/codeaster/profile.sh\" >> .bashrc \\\n && echo \"cat ~/WELCOME\" >> .bashrc \\\n && echo \"echo\" >> .bashrc\nUSER root\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM quay.io/tianyikillua/base:latest\nLABEL maintainer=\"\\\"Tianyi Li <tianyikillua@gmail.com>\\\"\"\n#  Variables\nENV HDF5_VER=\"1.8.14\"\nENV MED_VER=\"3.3.1\"\nENV METIS_VER=\"5.1.0\"\nENV PARMETIS_VER=\"4.0.3\"\nENV SCOTCH_VER=\"6.0.4\"\nENV MUMPS_VER=\"5.1.1\"\nENV MFRONT_VER=\"3.0.0\"\nENV PETSC_VER=\"3.7.7\"\nENV SCALAPACK_VER=\"2.0.2\"\nENV ASTER_VER=\"13.6\"\nENV SCOTCH_SRC=\"scotch-${SCOTCH_VER}-aster5.tar.gz\"\nENV MUMPS_SRC=\"mumps-${MUMPS_VER}-aster2.tar.gz\"\nENV ASTER_SRC=\"aster-${ASTER_VER}.0.tgz\"\nENV SCALAPACK_SRC=\"http://www.netlib.org/scalapack/scalapack-${SCALAPACK_VER}.tgz\"\nENV PARMETIS_SRC=\"http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/parmetis-${PARMETIS_VER}.tar.gz\"\nENV PETSC_SRC=\"https://bitbucket.org/petsc/petsc/get/v${PETSC_VER}.tar.gz\"\nENV ASTER_FULL_SRC=\"https://www.code-aster.org/FICHIERS/aster-full-src-13.6.0-1.noarch.tar.gz\"\nENV ASTER_ROOT=\"/home/aster/aster\"\nENV PUBLIC=\"$ASTER_ROOT/public\"\n#  Get Ubuntu updates and basic packages\nUSER root\nRUN apt-get update \\\n && apt-get upgrade -y --with-new-pkgs -o Dpkg::Options::=\"--force-confold\" \\\n && apt-get install patch make cmake zlib1g-dev tk bison flex libglu1-mesa libxcursor-dev libmpich-dev libopenblas-dev libboost-python-dev -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nUSER aster\nWORKDIR /tmp\n#  Download and install the latest stable version\nRUN wget --no-check-certificate --quiet ${ASTER_FULL_SRC} -O aster_full.tar.gz \\\n && mkdir aster_full \\\n && tar xf aster_full.tar.gz -C aster_full --strip-components 1 \\\n && cd aster_full \\\n && python setup.py install --prefix ${ASTER_ROOT} --noprompt \\\n && mv SRC/${SCOTCH_SRC} SRC/${MUMPS_SRC} SRC/${ASTER_SRC} /tmp \\\n && rm -rf /tmp/aster_full.tar.gz /tmp/aster_full\n#  Build ptscotch\nCOPY --chown=aster:aster code_aster/data/patch_ptscotch /tmp/patch_ptscotch\nRUN mkdir ptscotch \\\n && tar xf ${SCOTCH_SRC} -C ptscotch --strip-components 1 \\\n && patch -s -p0 < patch_ptscotch \\\n && cd ptscotch/src \\\n && make scotch esmumps ptscotch ptesmumps CCD=mpicc \\\n && mkdir ${PUBLIC}/ptscotch-${SCOTCH_VER} \\\n && make install prefix=${PUBLIC}/ptscotch-${SCOTCH_VER} \\\n && rm -rf /tmp/${SCOTCH_SRC} /tmp/patch_ptscotch /tmp/ptscotch\n#  Build parmetis\nRUN wget --no-check-certificate --quiet ${PARMETIS_SRC} -O parmetis.tar.gz \\\n && mkdir parmetis \\\n && tar xf parmetis.tar.gz -C parmetis --strip-components 1 \\\n && cd parmetis \\\n && make config prefix=${PUBLIC}/parmetis-${PARMETIS_VER} \\\n && make \\\n && make install \\\n && rm -rf /tmp/parmetis.tar.gz /tmp/parmetis\n#  Build scalapack\nRUN wget --no-check-certificate --quiet ${SCALAPACK_SRC} -O scalapack.tar.gz \\\n && mkdir scalapack \\\n && tar xf scalapack.tar.gz -C scalapack --strip-components 1 \\\n && cd scalapack \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=${PUBLIC}/scalapack-${SCALAPACK_VER} -DBUILD_SHARED_LIBS=ON .. \\\n && make \\\n && make install \\\n && cd ${PUBLIC}/scalapack-${SCALAPACK_VER}/lib \\\n && cp libscalapack.so libblacs.so \\\n && rm -rf /tmp/scalapack.tar.gz /tmp/scalapack\n#  Build parallel mumps\nCOPY --chown=aster:aster code_aster/data/patch_mumps /tmp/patch_mumps\nRUN mkdir mumps \\\n && tar xf ${MUMPS_SRC} -C mumps --strip-components 1 \\\n && patch -s -p0 < patch_mumps \\\n && cd mumps \\\n && export INCLUDES=\"${PUBLIC}/metis-${METIS_VER}/include ${PUBLIC}/parmetis-${PARMETIS_VER}/include ${PUBLIC}/ptscotch-${SCOTCH_VER}/include\" \\\n && export LIBPATH=\"${PUBLIC}/metis-${METIS_VER}/lib ${PUBLIC}/parmetis-${PARMETIS_VER}/lib ${PUBLIC}/ptscotch-${SCOTCH_VER}/lib ${PUBLIC}/scalapack-${SCALAPACK_VER}/lib\" \\\n && ./waf configure --prefix=${PUBLIC}/mumps-${MUMPS_VER}_mpi --install-tests --enable-mpi \\\n && ./waf build --jobs=1 \\\n && ./waf install --jobs=1 \\\n && rm -rf /tmp/${MUMPS_SRC} /tmp/patch_mumps /tmp/mumps\n#  Build parallel PETSc\nRUN wget --no-check-certificate --quiet ${PETSC_SRC} -O petsc.tar.gz \\\n && mkdir petsc \\\n && tar xf petsc.tar.gz -C petsc --strip-components 1 \\\n && cd petsc \\\n && ./configure --COPTFLAGS=\"-O2\" --CXXOPTFLAGS=\"-O2\" --FOPTFLAGS=\"-O2\" --with-debugging=0 --with-shared-libraries=1 --with-scalapack-dir=${PUBLIC}/scalapack-${SCALAPACK_VER} --with-mumps-dir=${PUBLIC}/mumps-${MUMPS_VER}_mpi --with-metis-dir=${PUBLIC}/metis-${METIS_VER} --with-parmetis-dir=${PUBLIC}/parmetis-${PARMETIS_VER} --with-ptscotch-dir=${PUBLIC}/ptscotch-${SCOTCH_VER} --download-hypre --download-ml --LIBS=\"-lgomp\" --prefix=${PUBLIC}/petsc-${PETSC_VER} \\\n && make all \\\n && make install \\\n && rm -rf /tmp/petsc.tar.gz /tmp/petsc\n#  Build parallel aster\nCOPY --chown=aster:aster code_aster/data/cfg.py /tmp/cfg.py\nRUN . ${ASTER_ROOT}/${ASTER_VER}/share/aster/profile_mfront.sh \\\n && mkdir aster \\\n && tar xf ${ASTER_SRC} -C aster --strip-components 1 \\\n && cd aster \\\n && export INCLUDES=\"${PUBLIC}/hdf5-${HDF5_VER}/include ${PUBLIC}/med-${MED_VER}/include ${PUBLIC}/metis-${METIS_VER}/include ${PUBLIC}/parmetis-${PARMETIS_VER}/include ${PUBLIC}/ptscotch-${SCOTCH_VER}/include ${PUBLIC}/mumps-${MUMPS_VER}_mpi/include ${PUBLIC}/petsc-${PETSC_VER}/include ${PUBLIC}/tfel-${MFRONT_VER}/include\" \\\n && export LIBPATH=\"${PUBLIC}/hdf5-${HDF5_VER}/lib ${PUBLIC}/med-${MED_VER}/lib ${PUBLIC}/metis-${METIS_VER}/lib ${PUBLIC}/parmetis-${PARMETIS_VER}/lib ${PUBLIC}/ptscotch-${SCOTCH_VER}/lib ${PUBLIC}/scalapack-${SCALAPACK_VER}/lib ${PUBLIC}/mumps-${MUMPS_VER}_mpi/lib ${PUBLIC}/petsc-${PETSC_VER}/lib ${PUBLIC}/tfel-${MFRONT_VER}/lib\" \\\n && export METISDIR=${PUBLIC}/metis-${METIS_VER} \\\n && export TFELHOME=${PUBLIC}/tfel-${MFRONT_VER} \\\n && export GMSH_BIN_DIR=${PUBLIC}/gmsh-3.0.6-Linux64/bin \\\n && export HOMARD_ASTER_ROOT_DIR=${PUBLIC}/homard-11.10 \\\n && ./waf configure --use-config-dir=/tmp --use-config=cfg --prefix=${ASTER_ROOT}/${ASTER_VER}_mpi --install-tests --enable-mpi \\\n && ./waf build \\\n && ./waf install \\\n && rm -rf /tmp/${ASTER_SRC} /tmp/cfg.py /tmp/aster\n#  Add a welcome message and a script for testcases\nWORKDIR /home/aster\nCOPY code_aster/WELCOME /home/aster/WELCOME\nCOPY run_tests.sh /home/aster/run_tests.sh\nRUN echo \"vers : stable_mpi:${ASTER_ROOT}/${ASTER_VER}_mpi/share/aster\" >> ${ASTER_ROOT}/etc/codeaster/aster \\\n && echo \"localhost\" > ${ASTER_ROOT}/etc/codeaster/mpi_hostfile \\\n && rm -rf /tmp/* \\\n && echo \"\" >> .bashrc \\\n && echo \"source ~/aster/etc/codeaster/profile.sh\" >> .bashrc \\\n && echo \"cat ~/WELCOME\" >> .bashrc \\\n && echo \"echo\" >> .bashrc\nUSER root\n","injectedSmells":[],"originalDockerfileHash":"8bbae68a7ca42794ccfaf7f38b375f00","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM quay.io/tianyikillua/base:latest\nLABEL maintainer=\"\\\"Tianyi Li <tianyikillua@gmail.com>\\\"\"\n#   Variables\nENV HDF5_VER=\"1.8.14\"\nENV MED_VER=\"3.3.1\"\nENV METIS_VER=\"5.1.0\"\nENV PARMETIS_VER=\"4.0.3\"\nENV SCOTCH_VER=\"6.0.4\"\nENV MUMPS_VER=\"5.1.1\"\nENV MFRONT_VER=\"3.0.0\"\nENV PETSC_VER=\"3.7.7\"\nENV SCALAPACK_VER=\"2.0.2\"\nENV ASTER_VER=\"13.6\"\nENV SCOTCH_SRC=\"scotch-${SCOTCH_VER}-aster5.tar.gz\"\nENV MUMPS_SRC=\"mumps-${MUMPS_VER}-aster2.tar.gz\"\nENV ASTER_SRC=\"aster-${ASTER_VER}.0.tgz\"\nENV SCALAPACK_SRC=\"http://www.netlib.org/scalapack/scalapack-${SCALAPACK_VER}.tgz\"\nENV PARMETIS_SRC=\"http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/parmetis-${PARMETIS_VER}.tar.gz\"\nENV PETSC_SRC=\"https://bitbucket.org/petsc/petsc/get/v${PETSC_VER}.tar.gz\"\nENV ASTER_FULL_SRC=\"https://www.code-aster.org/FICHIERS/aster-full-src-13.6.0-1.noarch.tar.gz\"\nENV ASTER_ROOT=\"/home/aster/aster\"\nENV PUBLIC=\"$ASTER_ROOT/public\"\n#   Get Ubuntu updates and basic packages\nUSER root\nRUN apt-get update \\\n && apt-get upgrade -y --with-new-pkgs -o Dpkg::Options::=\"--force-confold\" \\\n && apt-get install patch make cmake zlib1g-dev tk bison flex libglu1-mesa libxcursor-dev libmpich-dev libopenblas-dev libboost-python-dev -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nUSER aster\nWORKDIR /tmp\n#   Download and install the latest stable version\nRUN wget --no-check-certificate --quiet ${ASTER_FULL_SRC} -O aster_full.tar.gz \\\n && mkdir aster_full \\\n && tar xf aster_full.tar.gz -C aster_full --strip-components 1 \\\n && cd aster_full \\\n && python setup.py install --prefix ${ASTER_ROOT} --noprompt \\\n && mv SRC/${SCOTCH_SRC} SRC/${MUMPS_SRC} SRC/${ASTER_SRC} /tmp \\\n && rm -rf /tmp/aster_full.tar.gz /tmp/aster_full\n#   Build ptscotch\nCOPY --chown=aster:aster code_aster/data/patch_ptscotch /tmp/patch_ptscotch\nRUN mkdir ptscotch \\\n && tar xf ${SCOTCH_SRC} -C ptscotch --strip-components 1 \\\n && patch -s -p0 < patch_ptscotch \\\n && cd ptscotch/src \\\n && make scotch esmumps ptscotch ptesmumps CCD=mpicc \\\n && mkdir ${PUBLIC}/ptscotch-${SCOTCH_VER} \\\n && make install prefix=${PUBLIC}/ptscotch-${SCOTCH_VER} \\\n && rm -rf /tmp/${SCOTCH_SRC} /tmp/patch_ptscotch /tmp/ptscotch\n#   Build parmetis\nRUN wget --no-check-certificate --quiet ${PARMETIS_SRC} -O parmetis.tar.gz \\\n && mkdir parmetis \\\n && tar xf parmetis.tar.gz -C parmetis --strip-components 1 \\\n && cd parmetis \\\n && make config prefix=${PUBLIC}/parmetis-${PARMETIS_VER} \\\n && make \\\n && make install \\\n && rm -rf /tmp/parmetis.tar.gz /tmp/parmetis\n#   Build scalapack\nRUN wget --no-check-certificate --quiet ${SCALAPACK_SRC} -O scalapack.tar.gz \\\n && mkdir scalapack \\\n && tar xf scalapack.tar.gz -C scalapack --strip-components 1 \\\n && cd scalapack \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=${PUBLIC}/scalapack-${SCALAPACK_VER} -DBUILD_SHARED_LIBS=ON .. \\\n && make \\\n && make install \\\n && cd ${PUBLIC}/scalapack-${SCALAPACK_VER}/lib \\\n && cp libscalapack.so libblacs.so \\\n && rm -rf /tmp/scalapack.tar.gz /tmp/scalapack\n#   Build parallel mumps\nCOPY --chown=aster:aster code_aster/data/patch_mumps /tmp/patch_mumps\nRUN mkdir mumps \\\n && tar xf ${MUMPS_SRC} -C mumps --strip-components 1 \\\n && patch -s -p0 < patch_mumps \\\n && cd mumps \\\n && export INCLUDES=\"${PUBLIC}/metis-${METIS_VER}/include ${PUBLIC}/parmetis-${PARMETIS_VER}/include ${PUBLIC}/ptscotch-${SCOTCH_VER}/include\" \\\n && export LIBPATH=\"${PUBLIC}/metis-${METIS_VER}/lib ${PUBLIC}/parmetis-${PARMETIS_VER}/lib ${PUBLIC}/ptscotch-${SCOTCH_VER}/lib ${PUBLIC}/scalapack-${SCALAPACK_VER}/lib\" \\\n && ./waf configure --prefix=${PUBLIC}/mumps-${MUMPS_VER}_mpi --install-tests --enable-mpi \\\n && ./waf build --jobs=1 \\\n && ./waf install --jobs=1 \\\n && rm -rf /tmp/${MUMPS_SRC} /tmp/patch_mumps /tmp/mumps\n#   Build parallel PETSc\nRUN wget --no-check-certificate --quiet ${PETSC_SRC} -O petsc.tar.gz \\\n && mkdir petsc \\\n && tar xf petsc.tar.gz -C petsc --strip-components 1 \\\n && cd petsc \\\n && ./configure --COPTFLAGS=\"-O2\" --CXXOPTFLAGS=\"-O2\" --FOPTFLAGS=\"-O2\" --with-debugging=0 --with-shared-libraries=1 --with-scalapack-dir=${PUBLIC}/scalapack-${SCALAPACK_VER} --with-mumps-dir=${PUBLIC}/mumps-${MUMPS_VER}_mpi --with-metis-dir=${PUBLIC}/metis-${METIS_VER} --with-parmetis-dir=${PUBLIC}/parmetis-${PARMETIS_VER} --with-ptscotch-dir=${PUBLIC}/ptscotch-${SCOTCH_VER} --download-hypre --download-ml --LIBS=\"-lgomp\" --prefix=${PUBLIC}/petsc-${PETSC_VER} \\\n && make all \\\n && make install \\\n && rm -rf /tmp/petsc.tar.gz /tmp/petsc\n#   Build parallel aster\nCOPY --chown=aster:aster code_aster/data/cfg.py /tmp/cfg.py\nRUN . ${ASTER_ROOT}/${ASTER_VER}/share/aster/profile_mfront.sh \\\n && mkdir aster \\\n && tar xf ${ASTER_SRC} -C aster --strip-components 1 \\\n && cd aster \\\n && export INCLUDES=\"${PUBLIC}/hdf5-${HDF5_VER}/include ${PUBLIC}/med-${MED_VER}/include ${PUBLIC}/metis-${METIS_VER}/include ${PUBLIC}/parmetis-${PARMETIS_VER}/include ${PUBLIC}/ptscotch-${SCOTCH_VER}/include ${PUBLIC}/mumps-${MUMPS_VER}_mpi/include ${PUBLIC}/petsc-${PETSC_VER}/include ${PUBLIC}/tfel-${MFRONT_VER}/include\" \\\n && export LIBPATH=\"${PUBLIC}/hdf5-${HDF5_VER}/lib ${PUBLIC}/med-${MED_VER}/lib ${PUBLIC}/metis-${METIS_VER}/lib ${PUBLIC}/parmetis-${PARMETIS_VER}/lib ${PUBLIC}/ptscotch-${SCOTCH_VER}/lib ${PUBLIC}/scalapack-${SCALAPACK_VER}/lib ${PUBLIC}/mumps-${MUMPS_VER}_mpi/lib ${PUBLIC}/petsc-${PETSC_VER}/lib ${PUBLIC}/tfel-${MFRONT_VER}/lib\" \\\n && export METISDIR=${PUBLIC}/metis-${METIS_VER} \\\n && export TFELHOME=${PUBLIC}/tfel-${MFRONT_VER} \\\n && export GMSH_BIN_DIR=${PUBLIC}/gmsh-3.0.6-Linux64/bin \\\n && export HOMARD_ASTER_ROOT_DIR=${PUBLIC}/homard-11.10 \\\n && ./waf configure --use-config-dir=/tmp --use-config=cfg --prefix=${ASTER_ROOT}/${ASTER_VER}_mpi --install-tests --enable-mpi \\\n && ./waf build \\\n && ./waf install \\\n && rm -rf /tmp/${ASTER_SRC} /tmp/cfg.py /tmp/aster\n#   Add a welcome message and a script for testcases\nWORKDIR /home/aster\nCOPY code_aster/WELCOME /home/aster/WELCOME\nCOPY run_tests.sh /home/aster/run_tests.sh\nRUN echo \"vers : stable_mpi:${ASTER_ROOT}/${ASTER_VER}_mpi/share/aster\" >> ${ASTER_ROOT}/etc/codeaster/aster \\\n && echo \"localhost\" > ${ASTER_ROOT}/etc/codeaster/mpi_hostfile \\\n && rm -rf /tmp/* \\\n && echo \"\" >> .bashrc \\\n && echo \"source ~/aster/etc/codeaster/profile.sh\" >> .bashrc \\\n && echo \"cat ~/WELCOME\" >> .bashrc \\\n && echo \"echo\" >> .bashrc\nUSER root\n","originalDockerfileUglifiedHash":"a2b5745b814ada7ab2f48669f15dd1a0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ebf97c5a9881d6bdf278bd0c3103e28e3e83b87d.dockerfile"}