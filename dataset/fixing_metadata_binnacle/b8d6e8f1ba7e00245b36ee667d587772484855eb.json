{"seed":3969858665,"processedDockerfileHash":"b77963b44833bbbd3ec6ed02323f12b6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM node:7.10-alpine\nCOPY . /app\nENV APK_PKGS=\"git openssh curl\" \\\n    NODE_PKGS=\"bower node-gyp node-sass\"\nRUN apk add $APK_PKGS --no-cache \\\n && echo 'Updating tar: http://bit.ly/2lvp7hp' \\\n && apk add tar=1.29-r1 --update \\\n && npm install $NODE_PKGS -g\n#   Having this before the build means it will rebuild everything, every time.\n#   Needed because we get dist/package.json from `ember build`\n#   NOTE: Moved below other ONBUILDs as to not invalidate them by simply\n#   changing app code.\nONBUILD COPY . /app\nONBUILD RUN mkdir -p ~/.ssh \\\n && chmod 700 ~/.ssh \\\n && cp /app/github-ssh/id_rsa ~/.ssh/id_rsa \\\n && chmod 0600 ~/.ssh/id_rsa \\\n && cat /app/github-ssh/known_hosts >> ~/.ssh/known_hosts \\\n && cat /app/github-ssh/ssh_config >> ~/.ssh/ssh_config \\\n && chmod 0644 ~/.ssh/known_hosts\nONBUILD RUN cd /app/server-fastboot-docker \\\n && npm install --production \\\n && cd /app/server-fastboot-docker/middleware \\\n && npm install --production \\\n && cd /app \\\n && npm install \\\n && bower install --allow-root \\\n && ./node_modules/.bin/ember build --environment=production \\\n && cd /app/dist \\\n && npm install --production \\\n && find /app/dist/node_modules /app/server-fastboot-docker/node_modules\nEXPOSE 3000/tcp\nCMD [\"node\", \"/app/server-fastboot-docker/server.js\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\n","originalDockerfile":"FROM node:7.10-alpine\nCOPY . /app\nENV APK_PKGS=\"git openssh curl\" \\\n    NODE_PKGS=\"bower node-gyp node-sass\"\nRUN apk --no-cache add $APK_PKGS \\\n && echo 'Updating tar: http://bit.ly/2lvp7hp' \\\n && apk --update add tar \\\n && npm install $NODE_PKGS -g\n#  Having this before the build means it will rebuild everything, every time.\n#  Needed because we get dist/package.json from `ember build`\n#  NOTE: Moved below other ONBUILDs as to not invalidate them by simply\n#  changing app code.\nONBUILD COPY . /app\nONBUILD RUN mkdir -p ~/.ssh \\\n && chmod 700 ~/.ssh \\\n && cp /app/github-ssh/id_rsa ~/.ssh/id_rsa \\\n && chmod 0600 ~/.ssh/id_rsa \\\n && cat /app/github-ssh/known_hosts >> ~/.ssh/known_hosts \\\n && cat /app/github-ssh/ssh_config >> ~/.ssh/ssh_config \\\n && chmod 0644 ~/.ssh/known_hosts\nONBUILD RUN cd /app/server-fastboot-docker \\\n && npm install --production \\\n && cd /app/server-fastboot-docker/middleware \\\n && npm install --production \\\n && cd /app \\\n && npm install \\\n && bower install --allow-root \\\n && ./node_modules/.bin/ember build --environment=production \\\n && cd /app/dist \\\n && npm install --production \\\n && find /app/dist/node_modules /app/server-fastboot-docker/node_modules ( ( -type d -name test -o -name .bin ) -o ( -type f -name *.md -o -iname LICENSE -o -name *.map ) ) -exec rm -rf '{}' + \\\n && apk del $APK_PKGS \\\n && rm -rf /app/.git /app/bower_components /app/node_modules /app/tmp /app/public \\\n && rm -rf ~/.cache/bower ~/.config/configstore \\\n && rm -rf ~/.node-gyp ~/.npm ~/.yarn /tmp/* /root/.cache \\\n && rm -rf /etc/ssl \\\n && rm -rf ~/.ssh \\\n && mv /app/dist/node_modules /app/node_modules \\\n && echo 'Done'\nEXPOSE 3000/tcp\nCMD [\"node\", \"/app/server-fastboot-docker/server.js\"]\n","injectedSmells":[],"originalDockerfileHash":"5f25ded0bfe6fe93da6386c6ec9f3c69","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM node:7.10-alpine\nCOPY . /app\nENV APK_PKGS=\"git openssh curl\" \\\n    NODE_PKGS=\"bower node-gyp node-sass\"\nRUN apk --no-cache add $APK_PKGS \\\n && echo 'Updating tar: http://bit.ly/2lvp7hp' \\\n && apk --update add tar \\\n && npm install $NODE_PKGS -g\n#   Having this before the build means it will rebuild everything, every time.\n#   Needed because we get dist/package.json from `ember build`\n#   NOTE: Moved below other ONBUILDs as to not invalidate them by simply\n#   changing app code.\nONBUILD COPY . /app\nONBUILD RUN mkdir -p ~/.ssh \\\n && chmod 700 ~/.ssh \\\n && cp /app/github-ssh/id_rsa ~/.ssh/id_rsa \\\n && chmod 0600 ~/.ssh/id_rsa \\\n && cat /app/github-ssh/known_hosts >> ~/.ssh/known_hosts \\\n && cat /app/github-ssh/ssh_config >> ~/.ssh/ssh_config \\\n && chmod 0644 ~/.ssh/known_hosts\nONBUILD RUN cd /app/server-fastboot-docker \\\n && npm install --production \\\n && cd /app/server-fastboot-docker/middleware \\\n && npm install --production \\\n && cd /app \\\n && npm install \\\n && bower install --allow-root \\\n && ./node_modules/.bin/ember build --environment=production \\\n && cd /app/dist \\\n && npm install --production \\\n && find /app/dist/node_modules /app/server-fastboot-docker/node_modules\nEXPOSE 3000/tcp\nCMD [\"node\", \"/app/server-fastboot-docker/server.js\"]\n","originalDockerfileUglifiedHash":"43917b74ccb0c78cdc86b576f66fc601","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b8d6e8f1ba7e00245b36ee667d587772484855eb.dockerfile"}