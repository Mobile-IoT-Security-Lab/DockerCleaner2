{"seed":3287769616,"processedDockerfileHash":"864e079cc074d15f30b6175b7b5ea5bd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ###########################################\n#  # Scientific course @CINECA\nFROM alpine:edge\nMAINTAINER \"Paolo D'Onorio De Meo <p.donoriodemeo@cineca.it>\"\n#  ###########################################\n#   Base packages\nENV SHELL=\"/bin/bash\"\nENV GLIBC_VERSION=\"2.23-r3\"\nENV GLIBC_REPO=\"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/$GLIBC_VERSION\"\nRUN apk add rethinkdb --update --repository http://dl-4.alpinelinux.org/alpine/edge/testing \\\n && apk add bash=5.2.15-r2 wget=1.21.3-r3 curl=8.0.1-r1 ca-certificates=20230106-r0 bzip2=1.0.8-r4 unzip=6.0-r13 sudo=1.9.13_p3-r2 musl-dev=1.2.3_git20230322-r0 git=2.40.0-r0 vim=9.0.1440-r0 gcc=12.2.1_git20220924-r9 libstdc++=12.2.1_git20220924-r9 glib=2.76.1-r0 libxext=1.3.5-r0 libxrender=0.9.11-r1 tini=0.19.0-r1 --update \\\n && curl -L \"$GLIBC_REPO/glibc-${GLIBC_VERSION}.apk\" -o /tmp/glibc.apk \\\n && curl -L \"$GLIBC_REPO/glibc-bin-${GLIBC_VERSION}.apk\" -o /tmp/glibc-bin.apk \\\n && curl -L \"$GLIBC_REPO/glibc-i18n-${GLIBC_VERSION}.apk\" -o /tmp/glibc-i18n.apk \\\n && apk add /tmp/glibc*.apk --allow-untrusted \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n && rm -rf /tmp/glibc*apk \\\n && rm -rf /var/cache/apk/*\n#  ###########################################\n#  # CONDA\nENV CONDA_DIR=\"/opt/conda\"\nRUN mkdir -p $CONDA_DIR\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nENV CONDA_VER=\"4.1.11\"\nENV CONTINUUM_REPO=\"https://repo.continuum.io/\"\nENV CONDA_LINK=\"$CONTINUUM_REPO/miniconda/Miniconda3-${CONDA_VER}-Linux-x86_64.sh\"\nENV INSTALL_SCRIPT=\"/tmp/conda.sh\"\nRUN echo $CONDA_LINK\nRUN curl -k -o $INSTALL_SCRIPT $CONDA_LINK \\\n && /bin/bash $INSTALL_SCRIPT -f -b -p $CONDA_DIR \\\n && rm $INSTALL_SCRIPT \\\n && echo \"installing\" \\\n && conda install --quiet --yes jupyter pip pandas scipy matplotlib cython numba seaborn \\\n && conda remove -y nbpresent \\\n && conda install -y -c damianavila82 rise \\\n && conda install -y -c pydy version_information \\\n && conda clean -y --all\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\n#  ###########################################\n#  # Python normal libs\nRUN pip install pip==23.1 xlrd==2.0.1 openpyxl==3.1.2 ptpython==3.0.23 ipython-sql==0.5.0 rethinkdb==2.4.9 attrs==23.1.0 flit==3.8.0 colorama==0.4.6 begins==0.9 pywebview==4.0.2 watchdog==3.0.0 ptpython==3.0.23 arrow==1.2.3 parsedatetime==2.6 timestring==1.6.4 boltons==23.0.0 --upgrade --no-cache-dir\n#  ###########################################\n#  # add user\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\n#   Create jovyan user with UID=1000 and in the 'users' group\nRUN adduser -s $SHELL -u $NB_UID $NB_USER -D \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER $CONDA_DIR\nUSER jovyan\n#   Setup jovyan home directory\nRUN mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/.jupyter \\\n && mkdir /home/$NB_USER/.local \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc\nCOPY notebook_config.py /home/$NB_USER/.jupyter/jupyter_notebook_config.py\n#   Personal keybindings\nRUN cd /opt/conda/share/jupyter/nbextensions/rise \\\n && wget -q http://j.mp/risecustomkeys -O main.js\n#   Fix matplotlib?\nRUN rm -rf ~/.cache/matplotlib ~/.matplotlib/fontList.cache ~/.cache/fontconfig\n#   Set executables for this user\nRUN echo \"export PATH=$CONDA_DIR/bin:/home/$NB_USER/.local/bin:$PATH\" > /home/$NB_USER/.bashrc\n#  #####################################\n#  ## tini as principal process ###\nUSER root\n#   jupyter kernel dies if you don't launch jupyter from inside a script\n#   https://github.com/ipython/ipython/issues/7062#issuecomment-223809024\nENV BOOTER=\"/docker-entrypoint.sh\"\n#   https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#/entrypoint\nENV DATADIR=\"/data\"\nVOLUME $DATADIR\nWORKDIR $DATADIR\nCOPY bootstrap.sh /docker-entrypoint.sh\nRUN chmod +x $BOOTER\nRUN chown $NB_USER -R $DATADIR\n#   WORKAROUND: tini\nENTRYPOINT [\"/sbin/tini\"]\nCMD [\"/docker-entrypoint.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###########################################\n# # Scientific course @CINECA\nFROM alpine:edge\nMAINTAINER \"Paolo D'Onorio De Meo <p.donoriodemeo@cineca.it>\"\n# ###########################################\n#  Base packages\nENV SHELL=\"/bin/bash\"\nENV GLIBC_VERSION=\"2.23-r3\"\nENV GLIBC_REPO=\"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/$GLIBC_VERSION\"\nRUN apk --update add --repository http://dl-4.alpinelinux.org/alpine/edge/testing rethinkdb \\\n && apk --update add bash wget curl ca-certificates bzip2 unzip sudo musl-dev git vim gcc libstdc++ glib libxext libxrender tini \\\n && curl -L \"$GLIBC_REPO/glibc-${GLIBC_VERSION}.apk\" -o /tmp/glibc.apk \\\n && curl -L \"$GLIBC_REPO/glibc-bin-${GLIBC_VERSION}.apk\" -o /tmp/glibc-bin.apk \\\n && curl -L \"$GLIBC_REPO/glibc-i18n-${GLIBC_VERSION}.apk\" -o /tmp/glibc-i18n.apk \\\n && apk add --allow-untrusted /tmp/glibc*.apk \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n && rm -rf /tmp/glibc*apk \\\n && rm -rf /var/cache/apk/*\n# ###########################################\n# # CONDA\nENV CONDA_DIR=\"/opt/conda\"\nRUN mkdir -p $CONDA_DIR\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nENV CONDA_VER=\"4.1.11\"\nENV CONTINUUM_REPO=\"https://repo.continuum.io/\"\nENV CONDA_LINK=\"$CONTINUUM_REPO/miniconda/Miniconda3-${CONDA_VER}-Linux-x86_64.sh\"\nENV INSTALL_SCRIPT=\"/tmp/conda.sh\"\nRUN echo $CONDA_LINK\nRUN curl -k -o $INSTALL_SCRIPT $CONDA_LINK \\\n && /bin/bash $INSTALL_SCRIPT -f -b -p $CONDA_DIR \\\n && rm $INSTALL_SCRIPT \\\n && echo \"installing\" \\\n && conda install --quiet --yes jupyter pip pandas scipy matplotlib cython numba seaborn \\\n && conda remove -y nbpresent \\\n && conda install -y -c damianavila82 rise \\\n && conda install -y -c pydy version_information \\\n && conda clean -y --all\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\n# ###########################################\n# # Python normal libs\nRUN pip install pip xlrd openpyxl ptpython ipython-sql rethinkdb attrs flit colorama begins pywebview watchdog ptpython arrow parsedatetime timestring boltons --upgrade --no-cache-dir\n# ###########################################\n# # add user\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\n#  Create jovyan user with UID=1000 and in the 'users' group\nRUN adduser -s $SHELL -u $NB_UID $NB_USER -D \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER $CONDA_DIR\nUSER jovyan\n#  Setup jovyan home directory\nRUN mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/.jupyter \\\n && mkdir /home/$NB_USER/.local \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc\nCOPY notebook_config.py /home/$NB_USER/.jupyter/jupyter_notebook_config.py\n#  Personal keybindings\nRUN cd /opt/conda/share/jupyter/nbextensions/rise \\\n && wget -q http://j.mp/risecustomkeys -O main.js\n#  Fix matplotlib?\nRUN rm -rf ~/.cache/matplotlib ~/.matplotlib/fontList.cache ~/.cache/fontconfig\n#  Set executables for this user\nRUN echo \"export PATH=$CONDA_DIR/bin:/home/$NB_USER/.local/bin:$PATH\" > /home/$NB_USER/.bashrc\n# #####################################\n# ## tini as principal process ###\nUSER root\n#  jupyter kernel dies if you don't launch jupyter from inside a script\n#  https://github.com/ipython/ipython/issues/7062#issuecomment-223809024\nENV BOOTER=\"/docker-entrypoint.sh\"\n#  https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#/entrypoint\nENV DATADIR=\"/data\"\nVOLUME $DATADIR\nWORKDIR $DATADIR\nADD bootstrap.sh /docker-entrypoint.sh\nRUN chmod +x $BOOTER\nRUN chown $NB_USER -R $DATADIR\n#  WORKAROUND: tini\nENTRYPOINT [\"/sbin/tini\"]\nCMD [\"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"a71c4151e7571ad38975975cc3f76210","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###########################################\n#  # Scientific course @CINECA\nFROM alpine:edge\nMAINTAINER \"Paolo D'Onorio De Meo <p.donoriodemeo@cineca.it>\"\n#  ###########################################\n#   Base packages\nENV SHELL=\"/bin/bash\"\nENV GLIBC_VERSION=\"2.23-r3\"\nENV GLIBC_REPO=\"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/$GLIBC_VERSION\"\nRUN apk --update add --repository http://dl-4.alpinelinux.org/alpine/edge/testing rethinkdb \\\n && apk --update add bash wget curl ca-certificates bzip2 unzip sudo musl-dev git vim gcc libstdc++ glib libxext libxrender tini \\\n && curl -L \"$GLIBC_REPO/glibc-${GLIBC_VERSION}.apk\" -o /tmp/glibc.apk \\\n && curl -L \"$GLIBC_REPO/glibc-bin-${GLIBC_VERSION}.apk\" -o /tmp/glibc-bin.apk \\\n && curl -L \"$GLIBC_REPO/glibc-i18n-${GLIBC_VERSION}.apk\" -o /tmp/glibc-i18n.apk \\\n && apk add --allow-untrusted /tmp/glibc*.apk \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n && rm -rf /tmp/glibc*apk \\\n && rm -rf /var/cache/apk/*\n#  ###########################################\n#  # CONDA\nENV CONDA_DIR=\"/opt/conda\"\nRUN mkdir -p $CONDA_DIR\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nENV CONDA_VER=\"4.1.11\"\nENV CONTINUUM_REPO=\"https://repo.continuum.io/\"\nENV CONDA_LINK=\"$CONTINUUM_REPO/miniconda/Miniconda3-${CONDA_VER}-Linux-x86_64.sh\"\nENV INSTALL_SCRIPT=\"/tmp/conda.sh\"\nRUN echo $CONDA_LINK\nRUN curl -k -o $INSTALL_SCRIPT $CONDA_LINK \\\n && /bin/bash $INSTALL_SCRIPT -f -b -p $CONDA_DIR \\\n && rm $INSTALL_SCRIPT \\\n && echo \"installing\" \\\n && conda install --quiet --yes jupyter pip pandas scipy matplotlib cython numba seaborn \\\n && conda remove -y nbpresent \\\n && conda install -y -c damianavila82 rise \\\n && conda install -y -c pydy version_information \\\n && conda clean -y --all\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\n#  ###########################################\n#  # Python normal libs\nRUN pip install pip xlrd openpyxl ptpython ipython-sql rethinkdb attrs flit colorama begins pywebview watchdog ptpython arrow parsedatetime timestring boltons --upgrade --no-cache-dir\n#  ###########################################\n#  # add user\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\n#   Create jovyan user with UID=1000 and in the 'users' group\nRUN adduser -s $SHELL -u $NB_UID $NB_USER -D \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER $CONDA_DIR\nUSER jovyan\n#   Setup jovyan home directory\nRUN mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/.jupyter \\\n && mkdir /home/$NB_USER/.local \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc\nCOPY notebook_config.py /home/$NB_USER/.jupyter/jupyter_notebook_config.py\n#   Personal keybindings\nRUN cd /opt/conda/share/jupyter/nbextensions/rise \\\n && wget -q http://j.mp/risecustomkeys -O main.js\n#   Fix matplotlib?\nRUN rm -rf ~/.cache/matplotlib ~/.matplotlib/fontList.cache ~/.cache/fontconfig\n#   Set executables for this user\nRUN echo \"export PATH=$CONDA_DIR/bin:/home/$NB_USER/.local/bin:$PATH\" > /home/$NB_USER/.bashrc\n#  #####################################\n#  ## tini as principal process ###\nUSER root\n#   jupyter kernel dies if you don't launch jupyter from inside a script\n#   https://github.com/ipython/ipython/issues/7062#issuecomment-223809024\nENV BOOTER=\"/docker-entrypoint.sh\"\n#   https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#/entrypoint\nENV DATADIR=\"/data\"\nVOLUME $DATADIR\nWORKDIR $DATADIR\nADD bootstrap.sh /docker-entrypoint.sh\nRUN chmod +x $BOOTER\nRUN chown $NB_USER -R $DATADIR\n#   WORKAROUND: tini\nENTRYPOINT [\"/sbin/tini\"]\nCMD [\"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"d852a122d18f4bb3f6650ead87c95623","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5abb20cd9707e9759d8e873ec41b3a6e3a9a4222.dockerfile"}