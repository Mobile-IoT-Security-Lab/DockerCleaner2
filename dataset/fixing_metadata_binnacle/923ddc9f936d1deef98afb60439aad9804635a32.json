{"seed":1850935871,"processedDockerfileHash":"d8ffe0709254dcedf78f1c1ec1a0877c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Ubuntu base image, see README for more details\n#\n#   VERSION               1.0.1\n#\nFROM ubuntu:16.04\n#\n#   Distribution configuration\n#\n#   Add some core repos\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends sudo=1.8.16-0ubuntu1.10 curl=7.47.0-1ubuntu2.19 zip=3.0-11 openssl=1.0.2g-1ubuntu4.20 build-essential=12.1ubuntu2 python-software-properties=0.96.20.10 -y ) \\\n && apt-get clean\n#   Add nodejs distribution\nRUN curl -sL https://deb.nodesource.com/setup_7.x | sudo bash - \\\n && : \\\n && apt-get clean\n#\n#   Default environment variables\n#\n#   Default system timezone (Singapore)\nENV TIMEZONE=\"GMT+08\"\n#   Used to configure OS language support\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Commands to execute prior to aptget install/upgrade on bootup\nENV APTGET_PRESCRIPT=\"\"\n#   Performs the installation of the following if missing on bootup\nENV APTGET_INSTALL=\"\"\n#   Performs an apt-get upgrade on bootup\nENV APTGET_UPGRADE=\"false\"\n#   Commands to execute after aptget install/upgrade on bootup\nENV APTGET_POSTSCRIPT=\"\"\n#\n#   Core folders setup\n#\n#   Make sure the basic folder is setup, with permission nukes\nRUN mkdir /workspace \\\n && mkdir /entrypoint \\\n && ln -s /workspace /appspace \\\n && chmod -R 0777 /workspace \\\n && chmod +x /workspace\nWORKDIR /workspace\n#   VOLUME /workspace\n#\n#   Prepares the entrypoint primer script\n#\nRUN echo '#!/bin/bash' > /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"### Start of picoded/ubuntu-base : entrypoint/primer.sh\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# Enters the /workspace' >> /entrypoint/primer.sh \\\n && echo 'cd /workspace;' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# TIMEZONE run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$TIMEZONE\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Enforce TIMEZONE config : $TIMEZONE\"' >> /entrypoint/primer.sh \\\n && echo ' TZ=\"$TIMEZONE\";' >> /entrypoint/primer.sh \\\n && echo ' export TZ;' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# LANGUAGE run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$LANGUAGE\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Enforce LANGUAGE config : $LANGUAGE\"' >> /entrypoint/primer.sh \\\n && echo ' locale-gen \"$LANGUAGE\";' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_PRESCRIPT run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$APTGET_PRESCRIPT\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_PRESCRIPT\"' >> /entrypoint/primer.sh \\\n && echo ' eval \"$APTGET_PRESCRIPT\";' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_INSTALL run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$APTGET_INSTALL\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_INSTALL\"' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo ' APTGET_INSTALL_ARRAY=($APTGET_INSTALL)' >> /entrypoint/primer.sh \\\n && echo ' ACTUAL_INSTALL_ARRAY=()' >> /entrypoint/primer.sh \\\n && echo ' for NAME in \"${APTGET_INSTALL_ARRAY[@]}\"' >> /entrypoint/primer.sh \\\n && echo ' do' >> /entrypoint/primer.sh \\\n && echo ' if [ -z $(which $NAME) ] ; then' >> /entrypoint/primer.sh \\\n && echo ' ACTUAL_INSTALL_ARRAY+=($NAME)' >> /entrypoint/primer.sh \\\n && echo ' fi' >> /entrypoint/primer.sh \\\n && echo ' done' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo ' if [ \"${#ACTUAL_INSTALL_ARRAY[@]}\" = 0 ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### - No additional installation needed\"' >> /entrypoint/primer.sh \\\n && echo ' else' >> /entrypoint/primer.sh \\\n && echo ' apt-get update;' >> /entrypoint/primer.sh \\\n && echo ' apt-get install -y $APTGET_INSTALL' >> /entrypoint/primer.sh \\\n && echo ' fi' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_UPGRADE run' >> /entrypoint/primer.sh \\\n && echo 'if [ \"$APTGET_UPGRADE\" = true ] || [ \"$APTGET_UPGRADE\" = \"true\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_UPGRADE\"' >> /entrypoint/primer.sh \\\n && echo ' apt-get update; apt-get -y upgrade;' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_POSTSCRIPT run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$APTGET_POSTSCRIPT\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_POSTSCRIPT\"' >> /entrypoint/primer.sh \\\n && echo ' eval \"$APTGET_POSTSCRIPT\";' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"### Finished picoded/ubuntu-base : entrypoint/primer.sh\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# Chain the execution commands' >> /entrypoint/primer.sh \\\n && echo 'exec \"$@\"' >> /entrypoint/primer.sh \\\n && chmod +x /entrypoint/primer.sh\n#\n#   Useful for build debugging\n#\n#   RUN cat /entrypoint/primer.sh;\n#\n#   Runs with entry point and command\n#\nENTRYPOINT [\"/entrypoint/primer.sh\"]\nCMD echo \"### hello world : overwrite your actual command here\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Ubuntu base image, see README for more details\n#\n#  VERSION               1.0.1\n#\nFROM ubuntu:16.04\n#\n#  Distribution configuration\n#\n#  Add some core repos\nRUN apt-get update \\\n && apt-get install sudo curl zip openssl build-essential python-software-properties -y \\\n && apt-get clean\n#  Add nodejs distribution\nRUN curl -sL https://deb.nodesource.com/setup_7.x | sudo bash - \\\n && apt-get update \\\n && apt-get clean\n#\n#  Default environment variables\n#\n#  Default system timezone (Singapore)\nENV TIMEZONE=\"GMT+08\"\n#  Used to configure OS language support\nENV LANGUAGE=\"en_US.UTF-8\"\n#  Commands to execute prior to aptget install/upgrade on bootup\nENV APTGET_PRESCRIPT=\"\"\n#  Performs the installation of the following if missing on bootup\nENV APTGET_INSTALL=\"\"\n#  Performs an apt-get upgrade on bootup\nENV APTGET_UPGRADE=\"false\"\n#  Commands to execute after aptget install/upgrade on bootup\nENV APTGET_POSTSCRIPT=\"\"\n#\n#  Core folders setup\n#\n#  Make sure the basic folder is setup, with permission nukes\nRUN mkdir /workspace \\\n && mkdir /entrypoint \\\n && ln -s /workspace /appspace \\\n && chmod -R 0777 /workspace \\\n && chmod +x /workspace\nWORKDIR /workspace\n#  VOLUME /workspace\n#\n#  Prepares the entrypoint primer script\n#\nRUN echo '#!/bin/bash' > /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"### Start of picoded/ubuntu-base : entrypoint/primer.sh\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# Enters the /workspace' >> /entrypoint/primer.sh \\\n && echo 'cd /workspace;' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# TIMEZONE run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$TIMEZONE\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Enforce TIMEZONE config : $TIMEZONE\"' >> /entrypoint/primer.sh \\\n && echo ' TZ=\"$TIMEZONE\";' >> /entrypoint/primer.sh \\\n && echo ' export TZ;' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# LANGUAGE run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$LANGUAGE\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Enforce LANGUAGE config : $LANGUAGE\"' >> /entrypoint/primer.sh \\\n && echo ' locale-gen \"$LANGUAGE\";' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_PRESCRIPT run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$APTGET_PRESCRIPT\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_PRESCRIPT\"' >> /entrypoint/primer.sh \\\n && echo ' eval \"$APTGET_PRESCRIPT\";' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_INSTALL run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$APTGET_INSTALL\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_INSTALL\"' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo ' APTGET_INSTALL_ARRAY=($APTGET_INSTALL)' >> /entrypoint/primer.sh \\\n && echo ' ACTUAL_INSTALL_ARRAY=()' >> /entrypoint/primer.sh \\\n && echo ' for NAME in \"${APTGET_INSTALL_ARRAY[@]}\"' >> /entrypoint/primer.sh \\\n && echo ' do' >> /entrypoint/primer.sh \\\n && echo ' if [ -z $(which $NAME) ] ; then' >> /entrypoint/primer.sh \\\n && echo ' ACTUAL_INSTALL_ARRAY+=($NAME)' >> /entrypoint/primer.sh \\\n && echo ' fi' >> /entrypoint/primer.sh \\\n && echo ' done' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo ' if [ \"${#ACTUAL_INSTALL_ARRAY[@]}\" = 0 ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### - No additional installation needed\"' >> /entrypoint/primer.sh \\\n && echo ' else' >> /entrypoint/primer.sh \\\n && echo ' apt-get update;' >> /entrypoint/primer.sh \\\n && echo ' apt-get install -y $APTGET_INSTALL' >> /entrypoint/primer.sh \\\n && echo ' fi' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_UPGRADE run' >> /entrypoint/primer.sh \\\n && echo 'if [ \"$APTGET_UPGRADE\" = true ] || [ \"$APTGET_UPGRADE\" = \"true\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_UPGRADE\"' >> /entrypoint/primer.sh \\\n && echo ' apt-get update; apt-get -y upgrade;' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_POSTSCRIPT run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$APTGET_POSTSCRIPT\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_POSTSCRIPT\"' >> /entrypoint/primer.sh \\\n && echo ' eval \"$APTGET_POSTSCRIPT\";' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"### Finished picoded/ubuntu-base : entrypoint/primer.sh\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# Chain the execution commands' >> /entrypoint/primer.sh \\\n && echo 'exec \"$@\"' >> /entrypoint/primer.sh \\\n && chmod +x /entrypoint/primer.sh\n#\n#  Useful for build debugging\n#\n#  RUN cat /entrypoint/primer.sh;\n#\n#  Runs with entry point and command\n#\nENTRYPOINT [\"/entrypoint/primer.sh\"]\nCMD echo \"### hello world : overwrite your actual command here\"\n","injectedSmells":[],"originalDockerfileHash":"31dfd9a287b5856496d703c26e530a3f","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Ubuntu base image, see README for more details\n#\n#   VERSION               1.0.1\n#\nFROM ubuntu:16.04\n#\n#   Distribution configuration\n#\n#   Add some core repos\nRUN apt-get update \\\n && apt-get install sudo curl zip openssl build-essential python-software-properties -y \\\n && apt-get clean\n#   Add nodejs distribution\nRUN curl -sL https://deb.nodesource.com/setup_7.x | sudo bash - \\\n && apt-get update \\\n && apt-get clean\n#\n#   Default environment variables\n#\n#   Default system timezone (Singapore)\nENV TIMEZONE=\"GMT+08\"\n#   Used to configure OS language support\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Commands to execute prior to aptget install/upgrade on bootup\nENV APTGET_PRESCRIPT=\"\"\n#   Performs the installation of the following if missing on bootup\nENV APTGET_INSTALL=\"\"\n#   Performs an apt-get upgrade on bootup\nENV APTGET_UPGRADE=\"false\"\n#   Commands to execute after aptget install/upgrade on bootup\nENV APTGET_POSTSCRIPT=\"\"\n#\n#   Core folders setup\n#\n#   Make sure the basic folder is setup, with permission nukes\nRUN mkdir /workspace \\\n && mkdir /entrypoint \\\n && ln -s /workspace /appspace \\\n && chmod -R 0777 /workspace \\\n && chmod +x /workspace\nWORKDIR /workspace\n#   VOLUME /workspace\n#\n#   Prepares the entrypoint primer script\n#\nRUN echo '#!/bin/bash' > /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"### Start of picoded/ubuntu-base : entrypoint/primer.sh\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# Enters the /workspace' >> /entrypoint/primer.sh \\\n && echo 'cd /workspace;' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# TIMEZONE run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$TIMEZONE\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Enforce TIMEZONE config : $TIMEZONE\"' >> /entrypoint/primer.sh \\\n && echo ' TZ=\"$TIMEZONE\";' >> /entrypoint/primer.sh \\\n && echo ' export TZ;' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# LANGUAGE run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$LANGUAGE\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Enforce LANGUAGE config : $LANGUAGE\"' >> /entrypoint/primer.sh \\\n && echo ' locale-gen \"$LANGUAGE\";' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_PRESCRIPT run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$APTGET_PRESCRIPT\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_PRESCRIPT\"' >> /entrypoint/primer.sh \\\n && echo ' eval \"$APTGET_PRESCRIPT\";' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_INSTALL run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$APTGET_INSTALL\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_INSTALL\"' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo ' APTGET_INSTALL_ARRAY=($APTGET_INSTALL)' >> /entrypoint/primer.sh \\\n && echo ' ACTUAL_INSTALL_ARRAY=()' >> /entrypoint/primer.sh \\\n && echo ' for NAME in \"${APTGET_INSTALL_ARRAY[@]}\"' >> /entrypoint/primer.sh \\\n && echo ' do' >> /entrypoint/primer.sh \\\n && echo ' if [ -z $(which $NAME) ] ; then' >> /entrypoint/primer.sh \\\n && echo ' ACTUAL_INSTALL_ARRAY+=($NAME)' >> /entrypoint/primer.sh \\\n && echo ' fi' >> /entrypoint/primer.sh \\\n && echo ' done' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo ' if [ \"${#ACTUAL_INSTALL_ARRAY[@]}\" = 0 ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### - No additional installation needed\"' >> /entrypoint/primer.sh \\\n && echo ' else' >> /entrypoint/primer.sh \\\n && echo ' apt-get update;' >> /entrypoint/primer.sh \\\n && echo ' apt-get install -y $APTGET_INSTALL' >> /entrypoint/primer.sh \\\n && echo ' fi' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_UPGRADE run' >> /entrypoint/primer.sh \\\n && echo 'if [ \"$APTGET_UPGRADE\" = true ] || [ \"$APTGET_UPGRADE\" = \"true\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_UPGRADE\"' >> /entrypoint/primer.sh \\\n && echo ' apt-get update; apt-get -y upgrade;' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# APTGET_POSTSCRIPT run' >> /entrypoint/primer.sh \\\n && echo 'if [ -n \"$APTGET_POSTSCRIPT\" ] ; then' >> /entrypoint/primer.sh \\\n && echo ' echo \"### Running APTGET_POSTSCRIPT\"' >> /entrypoint/primer.sh \\\n && echo ' eval \"$APTGET_POSTSCRIPT\";' >> /entrypoint/primer.sh \\\n && echo 'fi' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"### Finished picoded/ubuntu-base : entrypoint/primer.sh\"' >> /entrypoint/primer.sh \\\n && echo 'echo \"###\"' >> /entrypoint/primer.sh \\\n && echo '' >> /entrypoint/primer.sh \\\n && echo '# Chain the execution commands' >> /entrypoint/primer.sh \\\n && echo 'exec \"$@\"' >> /entrypoint/primer.sh \\\n && chmod +x /entrypoint/primer.sh\n#\n#   Useful for build debugging\n#\n#   RUN cat /entrypoint/primer.sh;\n#\n#   Runs with entry point and command\n#\nENTRYPOINT [\"/entrypoint/primer.sh\"]\nCMD echo \"### hello world : overwrite your actual command here\"\n","originalDockerfileUglifiedHash":"f4b39296590f1b78a579ad6e20a2cd44","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/923ddc9f936d1deef98afb60439aad9804635a32.dockerfile"}