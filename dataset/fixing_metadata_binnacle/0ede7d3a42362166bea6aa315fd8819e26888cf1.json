{"seed":1488322019,"processedDockerfileHash":"4cdf6e4aec4b7c3d454bfae842052e35","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.8 AS builder\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nENV ZEEK_VERSION=\"2.6.1\"\nRUN apk add zlib=1.2.11-r1 openssl=1.0.2u-r0 libstdc++=6.4.0-r9 libpcap=1.8.1-r1 libgcc=6.4.0-r9 --no-cache\nRUN apk add libmaxminddb-dev=1.3.2-r0 linux-headers=4.4.6-r2 openssl-dev=1.0.2u-r0 libpcap-dev=1.8.1-r1 python-dev zlib-dev=1.2.11-r1 binutils=2.30-r6 fts-dev=1.2.7-r1 cmake=3.11.1-r2 clang=5.0.1-r1 bison=3.0.4-r1 bash=4.4.19-r1 swig=3.0.12-r3 perl=5.26.3-r0 make=4.2.1-r2 flex=2.6.4-r1 git=2.18.4-r0 g++=6.4.0-r9 fts=1.2.7-r1 --no-cache -t .build-deps\nRUN echo \"===> Cloning zeek...\" \\\n && cd /tmp \\\n && git clone --recursive https://github.com/zeek/zeek.git\n#   && git clone --branch v$ZEEK_VERSION https://github.com/zeek/zeek.git\nRUN echo \"===> Compiling zeek...\" \\\n && cd /tmp/zeek \\\n && CC=clang ./configure --prefix=/usr/local/bro --build-type=MinSizeRel --disable-broker-tests --disable-zeekctl --disable-auxtools --disable-python \\\n && make -j 2 \\\n && make install\nRUN echo \"===> Compiling af_packet plugin...\" \\\n && cd /tmp/zeek/aux/ \\\n && git clone https://github.com/J-Gras/bro-af_packet-plugin.git \\\n && cd /tmp/zeek/aux/bro-af_packet-plugin \\\n && find . -name \"*.bro\" -exec sh -c 'mv \"$1\" \"${1%.bro}.zeek\"' _ {}\nRUN echo \"===> Installing hosom/file-extraction package...\" \\\n && cd /tmp \\\n && git clone https://github.com/hosom/file-extraction.git \\\n && find file-extraction -name \"*.bro\" -exec sh -c 'mv \"$1\" \"${1%.bro}.zeek\"' _ {}\nRUN echo \"===> Installing corelight/json-streaming-logs package...\" \\\n && cd /tmp \\\n && git clone https://github.com/corelight/json-streaming-logs.git json-streaming-logs \\\n && find json-streaming-logs -name \"*.bro\" -exec sh -c 'mv \"$1\" \"${1%.bro}.zeek\"' _ {}\nRUN echo \"===> Shrinking image...\" \\\n && strip -s /usr/local/bro/bin/bro\n#  ###################################################################################################\nFROM alpine:3.8 AS geoip\nENV MAXMIND_CITY=\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz\"\nENV MAXMIND_CNTRY=\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz\"\nENV MAXMIND_ASN=\"http://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz\"\nENV GITHUB_CITY=\"https://github.com/blacktop/docker-zeek/raw/master/maxmind/GeoLite2-City.tar.gz\"\nENV GITHUB_CNTRY=\"https://github.com/blacktop/docker-zeek/raw/master/maxmind/GeoLite2-Country.tar.gz\"\n#   Install the GeoIPLite Database\nRUN cd /tmp \\\n && mkdir -p /usr/share/GeoIP \\\n && wget ${GITHUB_CITY} \\\n && tar xzvf GeoLite2-City.tar.gz \\\n && mv GeoLite2-City*/GeoLite2-City.mmdb /usr/share/GeoIP/\n#   && wget ${MAXMIND_ASN} \\\n#   && tar xzvf GeoLite2-ASN.tar.gz \\\n#   && mv GeoLite2-ASN*/GeoLite2-ASN.mmdb /usr/share/GeoIP/\n#  ###################################################################################################\nFROM alpine:3.8\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nRUN apk add ca-certificates=20191127-r2 zlib=1.2.11-r1 openssl=1.0.2u-r0 libstdc++=6.4.0-r9 libpcap=1.8.1-r1 libgcc=6.4.0-r9 fts=1.2.7-r1 libmaxminddb=1.3.2-r0 --no-cache\nCOPY --from=builder /usr/local/bro /usr/local/bro\nCOPY local.bro /usr/local/bro/share/bro/site/local.zeek\n#   Add a few zeek scripts\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/local/bro/share/bro/site/geodata/conn-add-geodata.bro https://raw.githubusercontent.com/blacktop/docker-zeek/master/scripts/conn-add-geodata.bro\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/local/bro/share/bro/site/passwords/log-passwords.bro https://raw.githubusercontent.com/blacktop/docker-zeek/master/scripts/log-passwords.bro\nENV BROPATH=\".:/data/config:/usr/local/bro/share/bro:/usr/local/bro/share/bro/policy:/usr/local/bro/share/bro/site\"\nENV PATH=\"$PATH:/usr/local/bro/bin\"\nCOPY --from=geoip /usr/share/GeoIP /usr/share/GeoIP\nWORKDIR /pcap\nENTRYPOINT [\"bro\"]\nCMD [\"-h\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.8 AS builder\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nENV ZEEK_VERSION=\"2.6.1\"\nRUN apk add --no-cache zlib openssl libstdc++ libpcap libgcc\nRUN apk add --no-cache -t .build-deps libmaxminddb-dev linux-headers openssl-dev libpcap-dev python-dev zlib-dev binutils fts-dev cmake clang bison bash swig perl make flex git g++ fts\nRUN echo \"===> Cloning zeek...\" \\\n && cd /tmp \\\n && git clone --recursive https://github.com/zeek/zeek.git\n#  && git clone --branch v$ZEEK_VERSION https://github.com/zeek/zeek.git\nRUN echo \"===> Compiling zeek...\" \\\n && cd /tmp/zeek \\\n && CC=clang ./configure --prefix=/usr/local/bro --build-type=MinSizeRel --disable-broker-tests --disable-zeekctl --disable-auxtools --disable-python \\\n && make -j 2 \\\n && make install\nRUN echo \"===> Compiling af_packet plugin...\" \\\n && cd /tmp/zeek/aux/ \\\n && git clone https://github.com/J-Gras/bro-af_packet-plugin.git \\\n && cd /tmp/zeek/aux/bro-af_packet-plugin \\\n && find . -name \"*.bro\" -exec sh -c 'mv \"$1\" \"${1%.bro}.zeek\"' _ {} ; \\\n && CC=clang ./configure --with-kernel=/usr --bro-dist=/tmp/zeek \\\n && make -j 2 \\\n && make install \\\n && /usr/local/bro/bin/bro -NN Bro::AF_Packet\nRUN echo \"===> Installing hosom/file-extraction package...\" \\\n && cd /tmp \\\n && git clone https://github.com/hosom/file-extraction.git \\\n && find file-extraction -name \"*.bro\" -exec sh -c 'mv \"$1\" \"${1%.bro}.zeek\"' _ {} ; \\\n && mv file-extraction/scripts /usr/local/bro/share/bro/site/file-extraction\nRUN echo \"===> Installing corelight/json-streaming-logs package...\" \\\n && cd /tmp \\\n && git clone https://github.com/corelight/json-streaming-logs.git json-streaming-logs \\\n && find json-streaming-logs -name \"*.bro\" -exec sh -c 'mv \"$1\" \"${1%.bro}.zeek\"' _ {} ; \\\n && mv json-streaming-logs/scripts /usr/local/bro/share/bro/site/json-streaming-logs\nRUN echo \"===> Shrinking image...\" \\\n && strip -s /usr/local/bro/bin/bro\n# ###################################################################################################\nFROM alpine:3.8 AS geoip\nENV MAXMIND_CITY=\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz\"\nENV MAXMIND_CNTRY=\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz\"\nENV MAXMIND_ASN=\"http://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz\"\nENV GITHUB_CITY=\"https://github.com/blacktop/docker-zeek/raw/master/maxmind/GeoLite2-City.tar.gz\"\nENV GITHUB_CNTRY=\"https://github.com/blacktop/docker-zeek/raw/master/maxmind/GeoLite2-Country.tar.gz\"\n#  Install the GeoIPLite Database\nRUN cd /tmp \\\n && mkdir -p /usr/share/GeoIP \\\n && wget ${GITHUB_CITY} \\\n && tar xzvf GeoLite2-City.tar.gz \\\n && mv GeoLite2-City*/GeoLite2-City.mmdb /usr/share/GeoIP/\n#  && wget ${MAXMIND_ASN} \\\n#  && tar xzvf GeoLite2-ASN.tar.gz \\\n#  && mv GeoLite2-ASN*/GeoLite2-ASN.mmdb /usr/share/GeoIP/\n# ###################################################################################################\nFROM alpine:3.8\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nRUN apk --no-cache add ca-certificates zlib openssl libstdc++ libpcap libgcc fts libmaxminddb\nCOPY --from=builder /usr/local/bro /usr/local/bro\nCOPY local.bro /usr/local/bro/share/bro/site/local.zeek\n#  Add a few zeek scripts\nADD https://raw.githubusercontent.com/blacktop/docker-zeek/master/scripts/conn-add-geodata.bro /usr/local/bro/share/bro/site/geodata/conn-add-geodata.bro\nADD https://raw.githubusercontent.com/blacktop/docker-zeek/master/scripts/log-passwords.bro /usr/local/bro/share/bro/site/passwords/log-passwords.bro\nENV BROPATH=\".:/data/config:/usr/local/bro/share/bro:/usr/local/bro/share/bro/policy:/usr/local/bro/share/bro/site\"\nENV PATH=\"$PATH:/usr/local/bro/bin\"\nCOPY --from=geoip /usr/share/GeoIP /usr/share/GeoIP\nWORKDIR /pcap\nENTRYPOINT [\"bro\"]\nCMD [\"-h\"]\n","injectedSmells":[],"originalDockerfileHash":"09b7e804bcb6194e4a42e95158b5fde3","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.8 AS builder\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nENV ZEEK_VERSION=\"2.6.1\"\nRUN apk add --no-cache zlib openssl libstdc++ libpcap libgcc\nRUN apk add --no-cache -t .build-deps libmaxminddb-dev linux-headers openssl-dev libpcap-dev python-dev zlib-dev binutils fts-dev cmake clang bison bash swig perl make flex git g++ fts\nRUN echo \"===> Cloning zeek...\" \\\n && cd /tmp \\\n && git clone --recursive https://github.com/zeek/zeek.git\n#   && git clone --branch v$ZEEK_VERSION https://github.com/zeek/zeek.git\nRUN echo \"===> Compiling zeek...\" \\\n && cd /tmp/zeek \\\n && CC=clang ./configure --prefix=/usr/local/bro --build-type=MinSizeRel --disable-broker-tests --disable-zeekctl --disable-auxtools --disable-python \\\n && make -j 2 \\\n && make install\nRUN echo \"===> Compiling af_packet plugin...\" \\\n && cd /tmp/zeek/aux/ \\\n && git clone https://github.com/J-Gras/bro-af_packet-plugin.git \\\n && cd /tmp/zeek/aux/bro-af_packet-plugin \\\n && find . -name \"*.bro\" -exec sh -c 'mv \"$1\" \"${1%.bro}.zeek\"' _ {}\nRUN echo \"===> Installing hosom/file-extraction package...\" \\\n && cd /tmp \\\n && git clone https://github.com/hosom/file-extraction.git \\\n && find file-extraction -name \"*.bro\" -exec sh -c 'mv \"$1\" \"${1%.bro}.zeek\"' _ {}\nRUN echo \"===> Installing corelight/json-streaming-logs package...\" \\\n && cd /tmp \\\n && git clone https://github.com/corelight/json-streaming-logs.git json-streaming-logs \\\n && find json-streaming-logs -name \"*.bro\" -exec sh -c 'mv \"$1\" \"${1%.bro}.zeek\"' _ {}\nRUN echo \"===> Shrinking image...\" \\\n && strip -s /usr/local/bro/bin/bro\n#  ###################################################################################################\nFROM alpine:3.8 AS geoip\nENV MAXMIND_CITY=\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz\"\nENV MAXMIND_CNTRY=\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz\"\nENV MAXMIND_ASN=\"http://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz\"\nENV GITHUB_CITY=\"https://github.com/blacktop/docker-zeek/raw/master/maxmind/GeoLite2-City.tar.gz\"\nENV GITHUB_CNTRY=\"https://github.com/blacktop/docker-zeek/raw/master/maxmind/GeoLite2-Country.tar.gz\"\n#   Install the GeoIPLite Database\nRUN cd /tmp \\\n && mkdir -p /usr/share/GeoIP \\\n && wget ${GITHUB_CITY} \\\n && tar xzvf GeoLite2-City.tar.gz \\\n && mv GeoLite2-City*/GeoLite2-City.mmdb /usr/share/GeoIP/\n#   && wget ${MAXMIND_ASN} \\\n#   && tar xzvf GeoLite2-ASN.tar.gz \\\n#   && mv GeoLite2-ASN*/GeoLite2-ASN.mmdb /usr/share/GeoIP/\n#  ###################################################################################################\nFROM alpine:3.8\nLABEL maintainer=\"\\\"https://github.com/blacktop\\\"\"\nRUN apk --no-cache add ca-certificates zlib openssl libstdc++ libpcap libgcc fts libmaxminddb\nCOPY --from=builder /usr/local/bro /usr/local/bro\nCOPY local.bro /usr/local/bro/share/bro/site/local.zeek\n#   Add a few zeek scripts\nADD https://raw.githubusercontent.com/blacktop/docker-zeek/master/scripts/conn-add-geodata.bro /usr/local/bro/share/bro/site/geodata/conn-add-geodata.bro\nADD https://raw.githubusercontent.com/blacktop/docker-zeek/master/scripts/log-passwords.bro /usr/local/bro/share/bro/site/passwords/log-passwords.bro\nENV BROPATH=\".:/data/config:/usr/local/bro/share/bro:/usr/local/bro/share/bro/policy:/usr/local/bro/share/bro/site\"\nENV PATH=\"$PATH:/usr/local/bro/bin\"\nCOPY --from=geoip /usr/share/GeoIP /usr/share/GeoIP\nWORKDIR /pcap\nENTRYPOINT [\"bro\"]\nCMD [\"-h\"]\n","originalDockerfileUglifiedHash":"b29431053245833a90ae3b9870259a2b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0ede7d3a42362166bea6aa315fd8819e26888cf1.dockerfile"}