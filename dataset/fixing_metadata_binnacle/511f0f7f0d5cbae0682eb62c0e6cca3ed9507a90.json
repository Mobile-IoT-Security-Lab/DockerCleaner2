{"seed":1653198555,"processedDockerfileHash":"afdb85764f068a1a5b1c5dd53fe796bf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM opensuse:latest\n#   Make sure we do not spend time preparing the OS\n#   while the installation sources are not mounted.\nRUN test -f /var/tmp/ABAP_Trial/install.sh\n#   General information\nLABEL de.itsfullofstars.sapnwdocker.version=\"1.0.0-filak-sap-2\"\nLABEL de.itsfullofstars.sapnwdocker.vendor=\"Tobias Hofmann\"\nLABEL de.itsfullofstars.sapnwdocker.name=\"Docker for SAP NetWeaver 7.5x Developer Edition\"\nLABEL modified_by=\"Jakub Filak <jakub.filak@sap.com>\"\nLABEL flags_run=\"docker run -d -v /sys/fs/cgroup:/sys/fs/cgroup:ro --privileged -p 3200:3200 -p 3300:3300 -p 8000:8000 -p 44300:44300 -h vhcalnplci --name abaptrial\"\nLABEL installation_size=\"50\"\nLABEL thinpool_size=\"80\"\nLABEL base_size=\"65\"\nLABEL memory=\"4GB\"\nLABEL sid=\"npl\"\nLABEL dbpassword=\"S3cr3tP@ssw0rd\"\nLABEL sapusers=\"DDIC,SAP*,DEVELOPER\"\nLABEL sappassword=\"Down1oad\"\nENV container=\"docker\"\n#   Install dependencies and configure systemd to start only the services we\n#   need!\nRUN zypper refresh -y ; zypper dup -y ; zypper --non-interactive install --replacefiles systemd uuidd expect tcsh which iputils vim hostname tar net-tools iproute2 curl python-openssl python-pip ; zypper clean ; (cd /usr/lib/systemd/system/sysinit.target.wants/ ;for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; rm -f /usr/lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /usr/lib/systemd/system/local-fs.target.wants/* ; rm -f /usr/lib/systemd/system/sockets.target.wants/*udev* ; rm -f /usr/lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /usr/lib/systemd/system/basic.target.wants/* ; rm -f /usr/lib/systemd/system/anaconda.target.wants/*\n#   We need to start the container with cgroups:\n#   $ docker run -v /sys/fs/cgroup:/sys/fs/cgroup:ro ...\nVOLUME [ \"/sys/fs/cgroup\" ]\n#   Wrap the command startsap in a systemd service, so we do not need to log in\n#   to the container and start it manually.\nCOPY nwabap.service /etc/systemd/system\n#   Avoid the need to start uuidd manually.\n#   BTW, uuidd is not needed for the installation.\nRUN systemctl enable nwabap uuidd\n#   Copy trusted server certificates\nRUN mkdir -p /etc/pki/ca-trust/source/SAP\nCOPY files/certs/*.cer /etc/pki/ca-trust/source/SAP/\n#   Install PyRFC\nRUN pip install pip==23.1 --upgrade\nRUN cd /var/tmp \\\n && curl -LO https://github.com/SAP/PyRFC/raw/master/dist/pyrfc-1.9.93-cp27-cp27mu-linux_x86_64.whl \\\n && pip install /var/tmp/pyrfc-1.9.93-cp27-cp27mu-linux_x86_64.whl \\\n && rm -f /var/tmp/pyrfc-1.9.93-cp27-cp27mu-linux_x86_64.whl\n#   Install the utility for adding trusted certs over RFC\nCOPY utils/src/sap_add_trusted_server_cert /usr/local/bin\n#   Add the installer expect\nCOPY utils/src/install.expect /usr/local/bin\nRUN mkdir /usr/local/bin/mock\nCOPY utils/src/mock/sysctl /usr/local/bin/mock\n#   HOSTNAME is imbued into SAP stuff - so we must convince the installer\n#   to use the well known HOSTNAME.\n#   And we have to try really hard, so don't forget to start docker build with:\n#\n#   -v $PWD/mock_hostname/ld.so.preload\n#   -v $PWD/mock_hostname/libmockhostname.so:/usr/local/lib64/libmockhostname.so\n#\n#   In case you want to know what the library does:\n#     https://github.com/jfilak/snippets/tree/master/mock_hostname\n#\n#   Note: Password being used is S3cr3tP@ssw0rd\nRUN echo $( grep $( uname -n ;) /etc/hosts | cut -f1 -d$'\\t' ;) \"vhcalnplci\" >> /etc/hosts; export HOSTNAME=\"vhcalnplci\" ; echo $HOSTNAME > /etc/hostname; echo \"export HOSTNAME=$HOSTNAME\" >> /etc/profile; test $( hostname ;) == $HOSTNAME || exit 1 ; export SAP_LOG_FILE=\"/var/tmp/abap_trial_install.log\" ; export PATH=/usr/local/bin/mock:$PATH ; (/usr/local/bin/install.expect --password \"S3cr3tP@ssw0rd\" --accept-SAP-developer-license || exit 1 ;(export LD_LIBRARY_PATH=/sapmnt/NPL/exe/uc/linuxx86_64 ;python /usr/local/bin/sap_add_trusted_server_cert -v /etc/pki/ca-trust/source/SAP/*.cer ) ;su - npladm -c \"stopsap ALL\" )\n#   Persist database\n#   VOLUME [ \"/sybase/NPL/sapdata_1\" ]\n#   Here it comes, start your containers without the need to attach/exec and\n#   start SAP processes manually.\n#\n#   Do not forget to bind mount cgroups:\n#   -v /sys/fs/cgroup:/sys/fs/cgroup:ro\n#\nENTRYPOINT [\"/usr/lib/systemd/systemd\", \"--system\"]\n#   Command sequence to use this Dockerfile\n#   Before you start, please, configured docker to use devicemapper and set dm.basesize to 60G.\n#\n#   $ docker daemon --storage-opt dm.basesize=60\n#   To avoid the need to copy the installation files (10s of GBs), mount the directory with\n#   installation files to /var/tmp/SAPTestDrive.\n#   Finally, run the build command.\n#\n#   $ docker build \\\n#      -v $PWD/NW751:/var/tmp/ABAP_Trial \\\n#      -v $PWD/mock_hostname/ld.so.preload:/etc/ld.so.preload \\\n#      -v $PWD/mock_hostname/libmockhostname.so:/usr/local/lib64/libmockhostname.so \\\n#      -t abaptrial:752 .\n#\n#   When built, you can start it this way:\n#\n#   $ docker run -d -v /sys/fs/cgroup:/sys/fs/cgroup:ro --privileged \\\n#     -p 3200:3200 -p 3300:3300 -p 8000:8000 -p 44300:44300 \\\n#     --hostname vhcalnplci --name abaptrial abaptrial:752\n#\n#   Tips: you can leave out all the -p arguments and connect to SAP processes\n#   using the internal IP of the container. Run the following command to get the IP:\n#\n#   $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' abaptrial\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM opensuse:latest\n#  Make sure we do not spend time preparing the OS\n#  while the installation sources are not mounted.\nRUN test -f /var/tmp/ABAP_Trial/install.sh\n#  General information\nLABEL de.itsfullofstars.sapnwdocker.version=\"1.0.0-filak-sap-2\"\nLABEL de.itsfullofstars.sapnwdocker.vendor=\"Tobias Hofmann\"\nLABEL de.itsfullofstars.sapnwdocker.name=\"Docker for SAP NetWeaver 7.5x Developer Edition\"\nLABEL modified_by=\"Jakub Filak <jakub.filak@sap.com>\"\nLABEL flags_run=\"docker run -d -v /sys/fs/cgroup:/sys/fs/cgroup:ro --privileged -p 3200:3200 -p 3300:3300 -p 8000:8000 -p 44300:44300 -h vhcalnplci --name abaptrial\"\nLABEL installation_size=\"50\"\nLABEL thinpool_size=\"80\"\nLABEL base_size=\"65\"\nLABEL memory=\"4GB\"\nLABEL sid=\"npl\"\nLABEL dbpassword=\"S3cr3tP@ssw0rd\"\nLABEL sapusers=\"DDIC,SAP*,DEVELOPER\"\nLABEL sappassword=\"Down1oad\"\nENV container=\"docker\"\n#  Install dependencies and configure systemd to start only the services we\n#  need!\nRUN zypper refresh -y ; zypper dup -y ; zypper --non-interactive install --replacefiles systemd uuidd expect tcsh which iputils vim hostname tar net-tools iproute2 curl python-openssl python-pip ; zypper clean ; (cd /usr/lib/systemd/system/sysinit.target.wants/ ;for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; rm -f /usr/lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /usr/lib/systemd/system/local-fs.target.wants/* ; rm -f /usr/lib/systemd/system/sockets.target.wants/*udev* ; rm -f /usr/lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /usr/lib/systemd/system/basic.target.wants/* ; rm -f /usr/lib/systemd/system/anaconda.target.wants/*\n#  We need to start the container with cgroups:\n#  $ docker run -v /sys/fs/cgroup:/sys/fs/cgroup:ro ...\nVOLUME [ \"/sys/fs/cgroup\" ]\n#  Wrap the command startsap in a systemd service, so we do not need to log in\n#  to the container and start it manually.\nCOPY nwabap.service /etc/systemd/system\n#  Avoid the need to start uuidd manually.\n#  BTW, uuidd is not needed for the installation.\nRUN systemctl enable nwabap uuidd\n#  Copy trusted server certificates\nRUN mkdir -p /etc/pki/ca-trust/source/SAP\nCOPY files/certs/*.cer /etc/pki/ca-trust/source/SAP/\n#  Install PyRFC\nRUN pip install pip --upgrade\nRUN cd /var/tmp \\\n && curl -LO https://github.com/SAP/PyRFC/raw/master/dist/pyrfc-1.9.93-cp27-cp27mu-linux_x86_64.whl \\\n && pip install /var/tmp/pyrfc-1.9.93-cp27-cp27mu-linux_x86_64.whl \\\n && rm -f /var/tmp/pyrfc-1.9.93-cp27-cp27mu-linux_x86_64.whl\n#  Install the utility for adding trusted certs over RFC\nCOPY utils/src/sap_add_trusted_server_cert /usr/local/bin\n#  Add the installer expect\nCOPY utils/src/install.expect /usr/local/bin\nRUN mkdir /usr/local/bin/mock\nCOPY utils/src/mock/sysctl /usr/local/bin/mock\n#  HOSTNAME is imbued into SAP stuff - so we must convince the installer\n#  to use the well known HOSTNAME.\n#  And we have to try really hard, so don't forget to start docker build with:\n#\n#  -v $PWD/mock_hostname/ld.so.preload\n#  -v $PWD/mock_hostname/libmockhostname.so:/usr/local/lib64/libmockhostname.so\n#\n#  In case you want to know what the library does:\n#    https://github.com/jfilak/snippets/tree/master/mock_hostname\n#\n#  Note: Password being used is S3cr3tP@ssw0rd\nRUN echo $( grep $( uname -n ;) /etc/hosts | cut -f1 -d$'\\t' ;) \"vhcalnplci\" >> /etc/hosts; export HOSTNAME=\"vhcalnplci\" ; echo $HOSTNAME > /etc/hostname; echo \"export HOSTNAME=$HOSTNAME\" >> /etc/profile; test $( hostname ;) == $HOSTNAME || exit 1 ; export SAP_LOG_FILE=\"/var/tmp/abap_trial_install.log\" ; export PATH=/usr/local/bin/mock:$PATH ; (/usr/local/bin/install.expect --password \"S3cr3tP@ssw0rd\" --accept-SAP-developer-license || exit 1 ;(export LD_LIBRARY_PATH=/sapmnt/NPL/exe/uc/linuxx86_64 ;python /usr/local/bin/sap_add_trusted_server_cert -v /etc/pki/ca-trust/source/SAP/*.cer ) ;su - npladm -c \"stopsap ALL\" )\n#  Persist database\n#  VOLUME [ \"/sybase/NPL/sapdata_1\" ]\n#  Here it comes, start your containers without the need to attach/exec and\n#  start SAP processes manually.\n#\n#  Do not forget to bind mount cgroups:\n#  -v /sys/fs/cgroup:/sys/fs/cgroup:ro\n#\nENTRYPOINT [\"/usr/lib/systemd/systemd\", \"--system\"]\n#  Command sequence to use this Dockerfile\n#  Before you start, please, configured docker to use devicemapper and set dm.basesize to 60G.\n#\n#  $ docker daemon --storage-opt dm.basesize=60\n#  To avoid the need to copy the installation files (10s of GBs), mount the directory with\n#  installation files to /var/tmp/SAPTestDrive.\n#  Finally, run the build command.\n#\n#  $ docker build \\\n#     -v $PWD/NW751:/var/tmp/ABAP_Trial \\\n#     -v $PWD/mock_hostname/ld.so.preload:/etc/ld.so.preload \\\n#     -v $PWD/mock_hostname/libmockhostname.so:/usr/local/lib64/libmockhostname.so \\\n#     -t abaptrial:752 .\n#\n#  When built, you can start it this way:\n#\n#  $ docker run -d -v /sys/fs/cgroup:/sys/fs/cgroup:ro --privileged \\\n#    -p 3200:3200 -p 3300:3300 -p 8000:8000 -p 44300:44300 \\\n#    --hostname vhcalnplci --name abaptrial abaptrial:752\n#\n#  Tips: you can leave out all the -p arguments and connect to SAP processes\n#  using the internal IP of the container. Run the following command to get the IP:\n#\n#  $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' abaptrial\n","injectedSmells":[],"originalDockerfileHash":"875f019d8cb3157b164f27ec6289cedb","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM opensuse:latest\n#   Make sure we do not spend time preparing the OS\n#   while the installation sources are not mounted.\nRUN test -f /var/tmp/ABAP_Trial/install.sh\n#   General information\nLABEL de.itsfullofstars.sapnwdocker.version=\"1.0.0-filak-sap-2\"\nLABEL de.itsfullofstars.sapnwdocker.vendor=\"Tobias Hofmann\"\nLABEL de.itsfullofstars.sapnwdocker.name=\"Docker for SAP NetWeaver 7.5x Developer Edition\"\nLABEL modified_by=\"Jakub Filak <jakub.filak@sap.com>\"\nLABEL flags_run=\"docker run -d -v /sys/fs/cgroup:/sys/fs/cgroup:ro --privileged -p 3200:3200 -p 3300:3300 -p 8000:8000 -p 44300:44300 -h vhcalnplci --name abaptrial\"\nLABEL installation_size=\"50\"\nLABEL thinpool_size=\"80\"\nLABEL base_size=\"65\"\nLABEL memory=\"4GB\"\nLABEL sid=\"npl\"\nLABEL dbpassword=\"S3cr3tP@ssw0rd\"\nLABEL sapusers=\"DDIC,SAP*,DEVELOPER\"\nLABEL sappassword=\"Down1oad\"\nENV container=\"docker\"\n#   Install dependencies and configure systemd to start only the services we\n#   need!\nRUN zypper refresh -y ; zypper dup -y ; zypper --non-interactive install --replacefiles systemd uuidd expect tcsh which iputils vim hostname tar net-tools iproute2 curl python-openssl python-pip ; zypper clean ; (cd /usr/lib/systemd/system/sysinit.target.wants/ ;for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; rm -f /usr/lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /usr/lib/systemd/system/local-fs.target.wants/* ; rm -f /usr/lib/systemd/system/sockets.target.wants/*udev* ; rm -f /usr/lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /usr/lib/systemd/system/basic.target.wants/* ; rm -f /usr/lib/systemd/system/anaconda.target.wants/*\n#   We need to start the container with cgroups:\n#   $ docker run -v /sys/fs/cgroup:/sys/fs/cgroup:ro ...\nVOLUME [ \"/sys/fs/cgroup\" ]\n#   Wrap the command startsap in a systemd service, so we do not need to log in\n#   to the container and start it manually.\nCOPY nwabap.service /etc/systemd/system\n#   Avoid the need to start uuidd manually.\n#   BTW, uuidd is not needed for the installation.\nRUN systemctl enable nwabap uuidd\n#   Copy trusted server certificates\nRUN mkdir -p /etc/pki/ca-trust/source/SAP\nCOPY files/certs/*.cer /etc/pki/ca-trust/source/SAP/\n#   Install PyRFC\nRUN pip install pip --upgrade\nRUN cd /var/tmp \\\n && curl -LO https://github.com/SAP/PyRFC/raw/master/dist/pyrfc-1.9.93-cp27-cp27mu-linux_x86_64.whl \\\n && pip install /var/tmp/pyrfc-1.9.93-cp27-cp27mu-linux_x86_64.whl \\\n && rm -f /var/tmp/pyrfc-1.9.93-cp27-cp27mu-linux_x86_64.whl\n#   Install the utility for adding trusted certs over RFC\nCOPY utils/src/sap_add_trusted_server_cert /usr/local/bin\n#   Add the installer expect\nCOPY utils/src/install.expect /usr/local/bin\nRUN mkdir /usr/local/bin/mock\nCOPY utils/src/mock/sysctl /usr/local/bin/mock\n#   HOSTNAME is imbued into SAP stuff - so we must convince the installer\n#   to use the well known HOSTNAME.\n#   And we have to try really hard, so don't forget to start docker build with:\n#\n#   -v $PWD/mock_hostname/ld.so.preload\n#   -v $PWD/mock_hostname/libmockhostname.so:/usr/local/lib64/libmockhostname.so\n#\n#   In case you want to know what the library does:\n#     https://github.com/jfilak/snippets/tree/master/mock_hostname\n#\n#   Note: Password being used is S3cr3tP@ssw0rd\nRUN echo $( grep $( uname -n ;) /etc/hosts | cut -f1 -d$'\\t' ;) \"vhcalnplci\" >> /etc/hosts; export HOSTNAME=\"vhcalnplci\" ; echo $HOSTNAME > /etc/hostname; echo \"export HOSTNAME=$HOSTNAME\" >> /etc/profile; test $( hostname ;) == $HOSTNAME || exit 1 ; export SAP_LOG_FILE=\"/var/tmp/abap_trial_install.log\" ; export PATH=/usr/local/bin/mock:$PATH ; (/usr/local/bin/install.expect --password \"S3cr3tP@ssw0rd\" --accept-SAP-developer-license || exit 1 ;(export LD_LIBRARY_PATH=/sapmnt/NPL/exe/uc/linuxx86_64 ;python /usr/local/bin/sap_add_trusted_server_cert -v /etc/pki/ca-trust/source/SAP/*.cer ) ;su - npladm -c \"stopsap ALL\" )\n#   Persist database\n#   VOLUME [ \"/sybase/NPL/sapdata_1\" ]\n#   Here it comes, start your containers without the need to attach/exec and\n#   start SAP processes manually.\n#\n#   Do not forget to bind mount cgroups:\n#   -v /sys/fs/cgroup:/sys/fs/cgroup:ro\n#\nENTRYPOINT [\"/usr/lib/systemd/systemd\", \"--system\"]\n#   Command sequence to use this Dockerfile\n#   Before you start, please, configured docker to use devicemapper and set dm.basesize to 60G.\n#\n#   $ docker daemon --storage-opt dm.basesize=60\n#   To avoid the need to copy the installation files (10s of GBs), mount the directory with\n#   installation files to /var/tmp/SAPTestDrive.\n#   Finally, run the build command.\n#\n#   $ docker build \\\n#      -v $PWD/NW751:/var/tmp/ABAP_Trial \\\n#      -v $PWD/mock_hostname/ld.so.preload:/etc/ld.so.preload \\\n#      -v $PWD/mock_hostname/libmockhostname.so:/usr/local/lib64/libmockhostname.so \\\n#      -t abaptrial:752 .\n#\n#   When built, you can start it this way:\n#\n#   $ docker run -d -v /sys/fs/cgroup:/sys/fs/cgroup:ro --privileged \\\n#     -p 3200:3200 -p 3300:3300 -p 8000:8000 -p 44300:44300 \\\n#     --hostname vhcalnplci --name abaptrial abaptrial:752\n#\n#   Tips: you can leave out all the -p arguments and connect to SAP processes\n#   using the internal IP of the container. Run the following command to get the IP:\n#\n#   $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' abaptrial\n","originalDockerfileUglifiedHash":"b73f0d7a1050f0bcd938da4318087f1d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/511f0f7f0d5cbae0682eb62c0e6cca3ed9507a90.dockerfile"}