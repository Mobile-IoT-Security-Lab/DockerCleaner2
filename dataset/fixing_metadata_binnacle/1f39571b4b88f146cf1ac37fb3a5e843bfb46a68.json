{"seed":2072840066,"processedDockerfileHash":"ef0e6a2fe5eb2e1372768243571808e8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","do-not-have-secrets","have-a-healthcheck"],"processedDockerfile":"#   code: language=Dockerfile\n#   The code for the build image should be idendical with the code in\n#   Dockerfile.nginx to use the caching mechanism of Docker.\nFROM python:2 AS build\nWORKDIR /app\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends dnsutils mysql-client postgresql-client xmlsec1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists \\\n && true\nCOPY requirements.txt ./\nRUN pip wheel --wheel-dir=/tmp/wheels -r ./requirements.txt\nFROM python:2-slim\nWORKDIR /app\nRUN apt-get update -y \\\n && mkdir -p /usr/share/man/man1 /usr/share/man/man7 \\\n && apt-get install --no-install-recommends libopenjp2-7 libjpeg62 libtiff5 dnsutils mysql-client libmariadbclient18 xmlsec1 postgresql-client -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists \\\n && true\nRUN pip install pip==23.1 --no-cache-dir --upgrade\nCOPY --from=build /tmp/wheels /tmp/wheels\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir --no-index --find-links=/tmp/wheels -r ./requirements.txt\nCOPY docker/entrypoint-celery-beat.sh docker/entrypoint-celery-worker.sh docker/entrypoint-initializer.sh docker/entrypoint-uwsgi.sh docker/entrypoint-uwsgi-dev.sh docker/entrypoint-unit-tests.sh docker/entrypoint-unit-tests-devDocker.sh docker/wait-for-it.sh /\nCOPY wsgi.py manage.py tests/unit-tests.sh ./\nCOPY dojo/ ./dojo/\n#   Legacy installs need the modified settings.py, do not remove!\nRUN cp dojo/settings/settings.dist.py dojo/settings/settings.py\nCOPY tests/ ./tests/\nRUN mkdir dojo/migrations \\\n && chmod g=u dojo/migrations \\\n && chmod g=u /var/run \\\n && true\nUSER 1001\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV DD_ADMIN_USER=\"admin\" \\\n    DD_ADMIN_MAIL=\"admin@defectdojo.local\" \\\n    DD_ADMIN_FIRST_NAME=\"Administrator\" \\\n    DD_ADMIN_LAST_NAME=\"User\" \\\n    DD_ALLOWED_HOSTS=\"*\" \\\n    DD_CELERY_BEAT_SCHEDULE_FILENAME=\"/run/celery-beat-schedule\" \\\n    DD_CELERY_BROKER_SCHEME=\"amqp\" \\\n    DD_CELERY_BROKER_USER=\"defectdojo\" \\\n    DD_CELERY_BROKER_HOST=\"rabbitmq\" \\\n    DD_CELERY_BROKER_PORT=\"5672\" \\\n    DD_CELERY_BROKER_PATH=\"//\" \\\n    DD_CELERY_LOG_LEVEL=\"INFO\" \\\n    DD_DATABASE_ENGINE=\"django.db.backends.mysql\" \\\n    DD_DATABASE_HOST=\"mysql\" \\\n    DD_DATABASE_NAME=\"defectdojo\" \\\n    DD_DATABASE_PORT=\"3306\" \\\n    DD_DATABASE_USER=\"defectdojo\" \\\n    DD_CREDENTIAL_AES_256_KEY=\"&91a*agLqesc*0DJ+2*bAbsUZfR*4nLw\" \\\n    DD_INITIALIZE=\"true\" \\\n    DD_UWSGI_MODE=\"socket\" \\\n    DD_UWSGI_ENDPOINT=\"0.0.0.0:3031\" \\\n    DD_DJANGO_ADMIN_ENABLED=\"on\" \\\n    DD_TRACK_MIGRATIONS=\"on\"\nENTRYPOINT [\"/entrypoint-uwsgi.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  code: language=Dockerfile\n#  The code for the build image should be idendical with the code in\n#  Dockerfile.nginx to use the caching mechanism of Docker.\nFROM python:2 AS build\nWORKDIR /app\nRUN apt-get update -y \\\n && apt-get install dnsutils mysql-client postgresql-client xmlsec1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists \\\n && true\nCOPY requirements.txt ./\nRUN pip wheel --wheel-dir=/tmp/wheels -r ./requirements.txt\nFROM python:2-slim\nWORKDIR /app\nRUN apt-get update -y \\\n && mkdir -p /usr/share/man/man1 /usr/share/man/man7 \\\n && apt-get install --no-install-recommends libopenjp2-7 libjpeg62 libtiff5 dnsutils mysql-client libmariadbclient18 xmlsec1 postgresql-client -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists \\\n && true\nRUN pip install pip --no-cache-dir --upgrade\nCOPY --from=build /tmp/wheels /tmp/wheels\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir --no-index --find-links=/tmp/wheels -r ./requirements.txt\nCOPY docker/entrypoint-celery-beat.sh docker/entrypoint-celery-worker.sh docker/entrypoint-initializer.sh docker/entrypoint-uwsgi.sh docker/entrypoint-uwsgi-dev.sh docker/entrypoint-unit-tests.sh docker/entrypoint-unit-tests-devDocker.sh docker/wait-for-it.sh /\nCOPY wsgi.py manage.py tests/unit-tests.sh ./\nCOPY dojo/ ./dojo/\n#  Legacy installs need the modified settings.py, do not remove!\nRUN cp dojo/settings/settings.dist.py dojo/settings/settings.py\nCOPY tests/ ./tests/\nRUN mkdir dojo/migrations \\\n && chmod g=u dojo/migrations \\\n && chmod g=u /var/run \\\n && true\nUSER 1001\nENV DD_ADMIN_USER=\"admin\" \\\n    DD_ADMIN_MAIL=\"admin@defectdojo.local\" \\\n    DD_ADMIN_PASSWORD=\"\" \\\n    DD_ADMIN_FIRST_NAME=\"Administrator\" \\\n    DD_ADMIN_LAST_NAME=\"User\" \\\n    DD_ALLOWED_HOSTS=\"*\" \\\n    DD_CELERY_BEAT_SCHEDULE_FILENAME=\"/run/celery-beat-schedule\" \\\n    DD_CELERY_BROKER_SCHEME=\"amqp\" \\\n    DD_CELERY_BROKER_USER=\"defectdojo\" \\\n    DD_CELERY_BROKER_PASSWORD=\"defectdojo\" \\\n    DD_CELERY_BROKER_HOST=\"rabbitmq\" \\\n    DD_CELERY_BROKER_PORT=\"5672\" \\\n    DD_CELERY_BROKER_PATH=\"//\" \\\n    DD_CELERY_LOG_LEVEL=\"INFO\" \\\n    DD_DATABASE_ENGINE=\"django.db.backends.mysql\" \\\n    DD_DATABASE_HOST=\"mysql\" \\\n    DD_DATABASE_NAME=\"defectdojo\" \\\n    DD_DATABASE_PASSWORD=\"defectdojo\" \\\n    DD_DATABASE_PORT=\"3306\" \\\n    DD_DATABASE_USER=\"defectdojo\" \\\n    DD_SECRET_KEY=\"hhZCp@D28z!n@NED*yB!ROMt+WzsY*iq\" \\\n    DD_CREDENTIAL_AES_256_KEY=\"&91a*agLqesc*0DJ+2*bAbsUZfR*4nLw\" \\\n    DD_INITIALIZE=\"true\" \\\n    DD_UWSGI_MODE=\"socket\" \\\n    DD_UWSGI_ENDPOINT=\"0.0.0.0:3031\" \\\n    DD_DJANGO_ADMIN_ENABLED=\"on\" \\\n    DD_TRACK_MIGRATIONS=\"on\"\nENTRYPOINT [\"/entrypoint-uwsgi.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"e5c66d06c6a1f622a168d53a7b8d0782","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   code: language=Dockerfile\n#   The code for the build image should be idendical with the code in\n#   Dockerfile.nginx to use the caching mechanism of Docker.\nFROM python:2 AS build\nWORKDIR /app\nRUN apt-get update -y \\\n && apt-get install dnsutils mysql-client postgresql-client xmlsec1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists \\\n && true\nCOPY requirements.txt ./\nRUN pip wheel --wheel-dir=/tmp/wheels -r ./requirements.txt\nFROM python:2-slim\nWORKDIR /app\nRUN apt-get update -y \\\n && mkdir -p /usr/share/man/man1 /usr/share/man/man7 \\\n && apt-get install --no-install-recommends libopenjp2-7 libjpeg62 libtiff5 dnsutils mysql-client libmariadbclient18 xmlsec1 postgresql-client -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists \\\n && true\nRUN pip install pip --no-cache-dir --upgrade\nCOPY --from=build /tmp/wheels /tmp/wheels\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir --no-index --find-links=/tmp/wheels -r ./requirements.txt\nCOPY docker/entrypoint-celery-beat.sh docker/entrypoint-celery-worker.sh docker/entrypoint-initializer.sh docker/entrypoint-uwsgi.sh docker/entrypoint-uwsgi-dev.sh docker/entrypoint-unit-tests.sh docker/entrypoint-unit-tests-devDocker.sh docker/wait-for-it.sh /\nCOPY wsgi.py manage.py tests/unit-tests.sh ./\nCOPY dojo/ ./dojo/\n#   Legacy installs need the modified settings.py, do not remove!\nRUN cp dojo/settings/settings.dist.py dojo/settings/settings.py\nCOPY tests/ ./tests/\nRUN mkdir dojo/migrations \\\n && chmod g=u dojo/migrations \\\n && chmod g=u /var/run \\\n && true\nUSER 1001\nENV DD_ADMIN_USER=\"admin\" \\\n    DD_ADMIN_MAIL=\"admin@defectdojo.local\" \\\n    DD_ADMIN_PASSWORD=\"\" \\\n    DD_ADMIN_FIRST_NAME=\"Administrator\" \\\n    DD_ADMIN_LAST_NAME=\"User\" \\\n    DD_ALLOWED_HOSTS=\"*\" \\\n    DD_CELERY_BEAT_SCHEDULE_FILENAME=\"/run/celery-beat-schedule\" \\\n    DD_CELERY_BROKER_SCHEME=\"amqp\" \\\n    DD_CELERY_BROKER_USER=\"defectdojo\" \\\n    DD_CELERY_BROKER_PASSWORD=\"defectdojo\" \\\n    DD_CELERY_BROKER_HOST=\"rabbitmq\" \\\n    DD_CELERY_BROKER_PORT=\"5672\" \\\n    DD_CELERY_BROKER_PATH=\"//\" \\\n    DD_CELERY_LOG_LEVEL=\"INFO\" \\\n    DD_DATABASE_ENGINE=\"django.db.backends.mysql\" \\\n    DD_DATABASE_HOST=\"mysql\" \\\n    DD_DATABASE_NAME=\"defectdojo\" \\\n    DD_DATABASE_PASSWORD=\"defectdojo\" \\\n    DD_DATABASE_PORT=\"3306\" \\\n    DD_DATABASE_USER=\"defectdojo\" \\\n    DD_SECRET_KEY=\"hhZCp@D28z!n@NED*yB!ROMt+WzsY*iq\" \\\n    DD_CREDENTIAL_AES_256_KEY=\"&91a*agLqesc*0DJ+2*bAbsUZfR*4nLw\" \\\n    DD_INITIALIZE=\"true\" \\\n    DD_UWSGI_MODE=\"socket\" \\\n    DD_UWSGI_ENDPOINT=\"0.0.0.0:3031\" \\\n    DD_DJANGO_ADMIN_ENABLED=\"on\" \\\n    DD_TRACK_MIGRATIONS=\"on\"\nENTRYPOINT [\"/entrypoint-uwsgi.sh\"]\n","originalDockerfileUglifiedHash":"0b174c8039676a6097cfaa55465fffd7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1f39571b4b88f146cf1ac37fb3a5e843bfb46a68.dockerfile"}