{"seed":337627579,"processedDockerfileHash":"e42f920b0b9d9b0bbc5142a0bdc1980b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\n#   Ubuntu 16.04 (xenial) from 2018-02-28\n#   https://github.com/docker-library/official-images/commit/8728671fdca3dfc029be4ab838ab5315aa125181\nFROM ubuntu:xenial-20180228@sha256:e348fbbea0e0a0e73ab0370de151e7800684445c509d46195aef73e090a49bd6\nLABEL maintainer=\"Jupyter Project <jupyter@googlegroups.com>\"\nUSER root\n#   Install all OS dependencies for notebook server that starts but lacks all\n#   features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends wget bzip2 ca-certificates sudo locales fonts-liberation -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"aurora\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"2000\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\nCOPY fix-permissions /usr/local/bin/fix-permissions\n#   Create aurora user with UID=1000 and in the 'users' group\n#   and make sure these dirs are writable by the `users` group.\nRUN groupadd -g $NB_GID aurora \\\n && useradd -m -s /bin/bash -N -u $NB_UID -g aurora $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && chmod g+w /etc/passwd /etc/group \\\n && echo '%aurora ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers \\\n && fix-permissions $HOME \\\n && fix-permissions $CONDA_DIR\nUSER $NB_UID\n#   Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\n#   Install conda as aurora and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"4.5.1\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"332aeff0bb6b45bbf7e220dec17ba867 *Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda clean -tipsy \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Jupyter Notebook and Hub\nRUN conda install --quiet --yes 'notebook=5.4.*' 'jupyterlab=0.32.*' \\\n && conda clean -tipsy \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nUSER root\nEXPOSE 8888/tcp\nWORKDIR $HOME\n#   Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) Jupyter Development Team.\n#  Distributed under the terms of the Modified BSD License.\n#  Ubuntu 16.04 (xenial) from 2018-02-28\n#  https://github.com/docker-library/official-images/commit/8728671fdca3dfc029be4ab838ab5315aa125181\nFROM ubuntu:xenial-20180228@sha256:e348fbbea0e0a0e73ab0370de151e7800684445c509d46195aef73e090a49bd6\nLABEL maintainer=\"Jupyter Project <jupyter@googlegroups.com>\"\nUSER root\n#  Install all OS dependencies for notebook server that starts but lacks all\n#  features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends wget bzip2 ca-certificates sudo locales fonts-liberation -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#  Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#  Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"aurora\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"2000\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\nADD fix-permissions /usr/local/bin/fix-permissions\n#  Create aurora user with UID=1000 and in the 'users' group\n#  and make sure these dirs are writable by the `users` group.\nRUN groupadd -g $NB_GID aurora \\\n && useradd -m -s /bin/bash -N -u $NB_UID -g aurora $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && chmod g+w /etc/passwd /etc/group \\\n && echo '%aurora ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers \\\n && fix-permissions $HOME \\\n && fix-permissions $CONDA_DIR\nUSER $NB_UID\n#  Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\n#  Install conda as aurora and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"4.5.1\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"332aeff0bb6b45bbf7e220dec17ba867 *Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda clean -tipsy \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#  Install Jupyter Notebook and Hub\nRUN conda install --quiet --yes 'notebook=5.4.*' 'jupyterlab=0.32.*' \\\n && conda clean -tipsy \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nUSER root\nEXPOSE 8888/tcp\nWORKDIR $HOME\n#  Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#  Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\n","injectedSmells":[],"originalDockerfileHash":"aa48234717fcc1d689a87dd4141fc9bb","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\n#   Ubuntu 16.04 (xenial) from 2018-02-28\n#   https://github.com/docker-library/official-images/commit/8728671fdca3dfc029be4ab838ab5315aa125181\nFROM ubuntu:xenial-20180228@sha256:e348fbbea0e0a0e73ab0370de151e7800684445c509d46195aef73e090a49bd6\nLABEL maintainer=\"Jupyter Project <jupyter@googlegroups.com>\"\nUSER root\n#   Install all OS dependencies for notebook server that starts but lacks all\n#   features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends wget bzip2 ca-certificates sudo locales fonts-liberation -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"aurora\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"2000\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\nADD fix-permissions /usr/local/bin/fix-permissions\n#   Create aurora user with UID=1000 and in the 'users' group\n#   and make sure these dirs are writable by the `users` group.\nRUN groupadd -g $NB_GID aurora \\\n && useradd -m -s /bin/bash -N -u $NB_UID -g aurora $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && chmod g+w /etc/passwd /etc/group \\\n && echo '%aurora ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers \\\n && fix-permissions $HOME \\\n && fix-permissions $CONDA_DIR\nUSER $NB_UID\n#   Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\n#   Install conda as aurora and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"4.5.1\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"332aeff0bb6b45bbf7e220dec17ba867 *Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda2-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda clean -tipsy \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Jupyter Notebook and Hub\nRUN conda install --quiet --yes 'notebook=5.4.*' 'jupyterlab=0.32.*' \\\n && conda clean -tipsy \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nUSER root\nEXPOSE 8888/tcp\nWORKDIR $HOME\n#   Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\n","originalDockerfileUglifiedHash":"5ba0898b40677dd3678ee23aa5e1ab48","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/52b7f2610ca95c7d6a13df8ae1e8ad246d367f31.dockerfile"}