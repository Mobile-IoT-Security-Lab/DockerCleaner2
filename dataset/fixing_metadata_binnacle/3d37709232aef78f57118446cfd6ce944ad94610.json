{"seed":1813345296,"processedDockerfileHash":"1cce0b83cc836016579fa349944b8725","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.5\nMAINTAINER smizy\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"Apache License 2.0\" \\\n      org.label-schema.name=\"smizy/hadoop-base\" \\\n      org.label-schema.url=\"https://github.com/smizy\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-type=\"Git\" \\\n      org.label-schema.vcs-url=\"https://github.com/smizy/docker-hadoop-base\"\nENV HADOOP_VERSION=\"$VERSION\"\nENV HADOOP_HOME=\"/usr/local/hadoop-${HADOOP_VERSION}\"\nENV HADOOP_COMMON_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_HDFS_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_MAPRED_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_YARN_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_CONF_DIR=\"${HADOOP_HOME}/etc/hadoop \"\nENV HADOOP_LOG_DIR=\"/var/log/hdfs\"\nENV HADOOP_TMP_DIR=\"/hadoop\"\nENV YARN_CONF_DIR=\"${HADOOP_HOME}/etc/hadoop\"\nENV YARN_HOME=\"${HADOOP_HOME}\"\nENV YARN_LOG_DIR=\"/var/log/yarn\"\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nENV PATH=\"$PATH:${JAVA_HOME}/bin:${HADOOP_HOME}/sbin:${HADOOP_HOME}/bin\"\nENV HADOOP_CLUSTER_NAME=\"hadoop\"\nENV HADOOP_ZOOKEEPER_QUORUM=\"zookeeper-1.vnet:2181,zookeeper-2.vnet:2181,zookeeper-3.vnet:2181\"\nENV HADOOP_NAMENODE1_HOSTNAME=\"namenode-1.vnet\"\nENV HADOOP_NAMENODE2_HOSTNAME=\"namenode-2.vnet\"\nENV HADOOP_QJOURNAL_ADDRESS=\"journalnode-1.vnet:8485;journalnode-2.vnet:8485;journalnode-3.vnet:8485\"\nENV HADOOP_DFS_REPLICATION=\"3\"\nENV YARN_RESOURCEMANAGER_HOSTNAME=\"resourcemanager-1.vnet\"\nENV MAPRED_JOBHISTORY_HOSTNAME=\"historyserver-1.vnet\"\n#   [Java 8] Over usage of virtual memory(https://issues.apache.org/jira/browse/YARN-4714)\n#   ENV MAPRED_CHILD_JAVA_OPTS \"-XX:ReservedCodeCacheSize=100M -XX:MaxMetaspaceSize=256m -XX:CompressedClassSpaceSize=256m\"\n#  # default memory/cpu setting\nENV HADOOP_HEAPSIZE=\"1000\"\nENV YARN_HEAPSIZE=\"1000\"\nENV YARN_NODEMANAGER_MEMORY_MB=\"8192\"\nENV YARN_NODEMANAGER_CPU_VCORES=\"8\"\nENV YARN_NODEMANAGER_VMEM_CHECK=\"true\"\nENV YARN_SCHEDULER_MIN_ALLOC_MB=\"1024\"\nENV YARN_APPMASTER_MEMORY_MB=\"1536\"\nENV YARN_APPMASTER_COMMAND_OPTS=\"-Xmx1024m\"\nENV MAPRED_MAP_MEMORY_MB=\"1024\"\nENV MAPRED_REDUCE_MEMORY_MB=\"1024\"\n#  # HDFS path\nENV YARN_REMOTE_APP_LOG_DIR=\"/tmp/logs\"\nENV YARN_APP_MAPRED_STAGING_DIR=\"/tmp/hadoop-yarn/staging\"\nENV PROTOBUF_VERSION=\"2.5.0\"\nENV GOOGLETEST_VERSION=\"1.5.0    \"\nRUN set -x \\\n && apk add bash=4.3.46-r5 openjdk8-jre=8.181.13-r0 su-exec=0.2-r0 tar=1.29-r1 wget=1.18-r4 --no-cache \\\n && apk add zlib=1.2.11-r0 --no-cache \\\n && apk add autoconf=2.69-r0 automake=1.15-r0 build-base=0.4-r1 libtool=2.4.6-r1 zlib-dev=1.2.11-r0 --no-cache --virtual .builddeps \\\n && wget -q -O - https://github.com/google/protobuf/archive/v${PROTOBUF_VERSION}.tar.gz | tar -xzf - -C /tmp \\\n && cd /tmp/protobuf-* \\\n && wget -q -O - https://github.com/google/googletest/archive/release-${GOOGLETEST_VERSION}.tar.gz | tar -xzf - \\\n && mv googletest-* gtest \\\n && ./autogen.sh \\\n && CXXFLAGS=\"$CXXFLAGS -fno-delete-null-pointer-checks\" ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var \\\n && make \\\n && make check \\\n && make install \\\n && rm -rf /tmp/protobuf-* \\\n && apk add bash=4.3.46-r5 bzip2=1.0.6-r5 fts=1.2.5-r0 fuse=2.9.8-r0 libressl-dev=2.4.4-r0 libtirpc=1.0.1-r0 snappy=1.1.3-r0 zlib=1.2.11-r0 --no-cache \\\n && apk add autoconf=2.69-r0 automake=1.15-r0 build-base=0.4-r1 bzip2-dev=1.0.6-r5 cmake=3.6.3-r0 curl=7.61.1-r1 fts-dev=1.2.5-r0 fuse-dev=2.9.8-r0 git=2.11.3-r2 libtirpc-dev=1.0.1-r0 libtool=2.4.6-r1 maven=3.3.9-r1 openjdk8=8.181.13-r0 snappy-dev=1.1.3-r0 zlib-dev=1.2.11-r0 --no-cache --virtual .builddeps.1 \\\n && mirror_url=$( wget -q -O - \"http://www.apache.org/dyn/closer.cgi/?as_json=1\" | grep \"preferred\" | sed -n 's#.*\"\\(http://*[^\"]*\\)\".*#\\1#p' ;) \\\n && wget -q -O - ${mirror_url}/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}-src.tar.gz | tar -xzf - -C /tmp \\\n && cd /tmp/hadoop-* \\\n && sed -ri 's/executable=\"sh\"/executable=\"bash\"/g' hadoop-project-dist/pom.xml \\\n && sed -ri 's/^#if defined\\(__sun\\)/#if 1/g' hadoop-common-project/hadoop-common/src/main/native/src/exception.c \\\n && sed -ri 's/^( *container)/\\1\\n fts/g' hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/CMakeLists.txt \\\n && sed -ri 's/^(.*JniBasedUnixGroupsNetgroupMapping.c)/#\\1/g' hadoop-common-project/hadoop-common/src/CMakeLists.txt \\\n && sed -ri 's#^(include_directories.*)#\\1\\n /usr/include/tirpc#' hadoop-tools/hadoop-pipes/src/CMakeLists.txt \\\n && sed -ri 's/^( *pthread)/\\1\\n tirpc/g' hadoop-tools/hadoop-pipes/src/CMakeLists.txt \\\n && mvn package -Pdist,native -DskipTests -DskipDocs -Dtar \\\n && mv hadoop-dist/target/hadoop-${HADOOP_VERSION}.tar.gz / \\\n && tar -xzf /hadoop-${HADOOP_VERSION}.tar.gz -C /usr/local \\\n && rm -rf /tmp/hadoop-* \\\n && cd / \\\n && ln -s /usr/local/hadoop-${HADOOP_VERSION} /usr/local/hadoop-${HADOOP_VERSION%.*} \\\n && env | grep -E '^(JAVA|HADOOP|PATH|YARN)' | sed 's/^/export /g' > ~/.profile \\\n && cp ~/.profile /etc/profile.d/hadoop \\\n && sed -i 's@${JAVA_HOME}@'${JAVA_HOME}'@g' ${HADOOP_CONF_DIR}/hadoop-env.sh \\\n && adduser -D -g '' -s /sbin/nologin -u 1000 docker \\\n && for user in hadoop hdfs yarn mapred hbase; do adduser -D -g '' -s /sbin/nologin ${user} ; done \\\n && for user in root hdfs yarn mapred hbase docker; do adduser ${user} hadoop ; done \\\n && mkdir -p ${HADOOP_TMP_DIR}/dfs ${HADOOP_TMP_DIR}/yarn ${HADOOP_TMP_DIR}/mapred ${HADOOP_TMP_DIR}/nm-local-dir ${HADOOP_TMP_DIR}/yarn-nm-recovery ${HADOOP_LOG_DIR} ${YARN_LOG_DIR} \\\n && chmod -R 775 ${HADOOP_LOG_DIR} ${YARN_LOG_DIR} \\\n && chmod -R 700 ${HADOOP_TMP_DIR}/dfs \\\n && chown -R hdfs:hadoop ${HADOOP_TMP_DIR}/dfs ${HADOOP_LOG_DIR} \\\n && chown -R yarn:hadoop ${HADOOP_TMP_DIR}/yarn ${HADOOP_TMP_DIR}/nm-local-dir ${HADOOP_TMP_DIR}/yarn-nm-recovery ${YARN_LOG_DIR} \\\n && chown -R mapred:hadoop ${HADOOP_TMP_DIR}/mapred \\\n && rm -rf ${HADOOP_HOME}/share/doc \\\n && for dir in common hdfs mapreduce tools yarn; do rm -rf ${HADOOP_HOME}/share/hadoop/${dir}/sources ; done \\\n && rm -rf ${HADOOP_HOME}/share/hadoop/common/jdiff \\\n && rm -rf ${HADOOP_HOME}/share/hadoop/mapreduce/lib-examples \\\n && rm -rf ${HADOOP_HOME}/share/hadoop/yarn/test \\\n && find ${HADOOP_HOME}/share/hadoop -name *test*.jar | xargs rm -rf \\\n && rm /hadoop-${HADOOP_VERSION}.tar.gz \\\n && rm -rf /root/.m2 \\\n && apk del .builddeps .builddeps.1 \\\n && echo\nCOPY etc/* ${HADOOP_CONF_DIR}/\nCOPY bin/* /usr/local/bin/\nCOPY lib/* /usr/local/lib/\nWORKDIR ${HADOOP_HOME}\nVOLUME [\"${HADOOP_TMP_DIR}\", \"${HADOOP_LOG_DIR}\", \"${YARN_LOG_DIR}\", \"${HADOOP_HOME}\"]\nENTRYPOINT [\"entrypoint.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.5\nMAINTAINER smizy\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"Apache License 2.0\" \\\n      org.label-schema.name=\"smizy/hadoop-base\" \\\n      org.label-schema.url=\"https://github.com/smizy\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-type=\"Git\" \\\n      org.label-schema.vcs-url=\"https://github.com/smizy/docker-hadoop-base\"\nENV HADOOP_VERSION=\"$VERSION\"\nENV HADOOP_HOME=\"/usr/local/hadoop-${HADOOP_VERSION}\"\nENV HADOOP_COMMON_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_HDFS_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_MAPRED_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_YARN_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_CONF_DIR=\"${HADOOP_HOME}/etc/hadoop \"\nENV HADOOP_LOG_DIR=\"/var/log/hdfs\"\nENV HADOOP_TMP_DIR=\"/hadoop\"\nENV YARN_CONF_DIR=\"${HADOOP_HOME}/etc/hadoop\"\nENV YARN_HOME=\"${HADOOP_HOME}\"\nENV YARN_LOG_DIR=\"/var/log/yarn\"\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nENV PATH=\"$PATH:${JAVA_HOME}/bin:${HADOOP_HOME}/sbin:${HADOOP_HOME}/bin\"\nENV HADOOP_CLUSTER_NAME=\"hadoop\"\nENV HADOOP_ZOOKEEPER_QUORUM=\"zookeeper-1.vnet:2181,zookeeper-2.vnet:2181,zookeeper-3.vnet:2181\"\nENV HADOOP_NAMENODE1_HOSTNAME=\"namenode-1.vnet\"\nENV HADOOP_NAMENODE2_HOSTNAME=\"namenode-2.vnet\"\nENV HADOOP_QJOURNAL_ADDRESS=\"journalnode-1.vnet:8485;journalnode-2.vnet:8485;journalnode-3.vnet:8485\"\nENV HADOOP_DFS_REPLICATION=\"3\"\nENV YARN_RESOURCEMANAGER_HOSTNAME=\"resourcemanager-1.vnet\"\nENV MAPRED_JOBHISTORY_HOSTNAME=\"historyserver-1.vnet\"\n#  [Java 8] Over usage of virtual memory(https://issues.apache.org/jira/browse/YARN-4714)\n#  ENV MAPRED_CHILD_JAVA_OPTS \"-XX:ReservedCodeCacheSize=100M -XX:MaxMetaspaceSize=256m -XX:CompressedClassSpaceSize=256m\"\n# # default memory/cpu setting\nENV HADOOP_HEAPSIZE=\"1000\"\nENV YARN_HEAPSIZE=\"1000\"\nENV YARN_NODEMANAGER_MEMORY_MB=\"8192\"\nENV YARN_NODEMANAGER_CPU_VCORES=\"8\"\nENV YARN_NODEMANAGER_VMEM_CHECK=\"true\"\nENV YARN_SCHEDULER_MIN_ALLOC_MB=\"1024\"\nENV YARN_APPMASTER_MEMORY_MB=\"1536\"\nENV YARN_APPMASTER_COMMAND_OPTS=\"-Xmx1024m\"\nENV MAPRED_MAP_MEMORY_MB=\"1024\"\nENV MAPRED_REDUCE_MEMORY_MB=\"1024\"\n# # HDFS path\nENV YARN_REMOTE_APP_LOG_DIR=\"/tmp/logs\"\nENV YARN_APP_MAPRED_STAGING_DIR=\"/tmp/hadoop-yarn/staging\"\nENV PROTOBUF_VERSION=\"2.5.0\"\nENV GOOGLETEST_VERSION=\"1.5.0    \"\nRUN set -x \\\n && apk --no-cache add bash openjdk8-jre su-exec tar wget \\\n && apk --no-cache add zlib \\\n && apk --no-cache add --virtual .builddeps autoconf automake build-base libtool zlib-dev \\\n && wget -q -O - https://github.com/google/protobuf/archive/v${PROTOBUF_VERSION}.tar.gz | tar -xzf - -C /tmp \\\n && cd /tmp/protobuf-* \\\n && wget -q -O - https://github.com/google/googletest/archive/release-${GOOGLETEST_VERSION}.tar.gz | tar -xzf - \\\n && mv googletest-* gtest \\\n && ./autogen.sh \\\n && CXXFLAGS=\"$CXXFLAGS -fno-delete-null-pointer-checks\" ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var \\\n && make \\\n && make check \\\n && make install \\\n && rm -rf /tmp/protobuf-* \\\n && apk --no-cache add bash bzip2 fts fuse libressl-dev libtirpc snappy zlib \\\n && apk --no-cache add --virtual .builddeps.1 autoconf automake build-base bzip2-dev cmake curl fts-dev fuse-dev git libtirpc-dev libtool maven openjdk8 snappy-dev zlib-dev \\\n && mirror_url=$( wget -q -O - \"http://www.apache.org/dyn/closer.cgi/?as_json=1\" | grep \"preferred\" | sed -n 's#.*\"\\(http://*[^\"]*\\)\".*#\\1#p' ;) \\\n && wget -q -O - ${mirror_url}/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}-src.tar.gz | tar -xzf - -C /tmp \\\n && cd /tmp/hadoop-* \\\n && sed -ri 's/executable=\"sh\"/executable=\"bash\"/g' hadoop-project-dist/pom.xml \\\n && sed -ri 's/^#if defined\\(__sun\\)/#if 1/g' hadoop-common-project/hadoop-common/src/main/native/src/exception.c \\\n && sed -ri 's/^( *container)/\\1\\n fts/g' hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/CMakeLists.txt \\\n && sed -ri 's/^(.*JniBasedUnixGroupsNetgroupMapping.c)/#\\1/g' hadoop-common-project/hadoop-common/src/CMakeLists.txt \\\n && sed -ri 's#^(include_directories.*)#\\1\\n /usr/include/tirpc#' hadoop-tools/hadoop-pipes/src/CMakeLists.txt \\\n && sed -ri 's/^( *pthread)/\\1\\n tirpc/g' hadoop-tools/hadoop-pipes/src/CMakeLists.txt \\\n && mvn package -Pdist,native -DskipTests -DskipDocs -Dtar \\\n && mv hadoop-dist/target/hadoop-${HADOOP_VERSION}.tar.gz / \\\n && tar -xzf /hadoop-${HADOOP_VERSION}.tar.gz -C /usr/local \\\n && rm -rf /tmp/hadoop-* \\\n && cd / \\\n && ln -s /usr/local/hadoop-${HADOOP_VERSION} /usr/local/hadoop-${HADOOP_VERSION%.*} \\\n && env | grep -E '^(JAVA|HADOOP|PATH|YARN)' | sed 's/^/export /g' > ~/.profile \\\n && cp ~/.profile /etc/profile.d/hadoop \\\n && sed -i 's@${JAVA_HOME}@'${JAVA_HOME}'@g' ${HADOOP_CONF_DIR}/hadoop-env.sh \\\n && adduser -D -g '' -s /sbin/nologin -u 1000 docker \\\n && for user in hadoop hdfs yarn mapred hbase; do adduser -D -g '' -s /sbin/nologin ${user} ; done \\\n && for user in root hdfs yarn mapred hbase docker; do adduser ${user} hadoop ; done \\\n && mkdir -p ${HADOOP_TMP_DIR}/dfs ${HADOOP_TMP_DIR}/yarn ${HADOOP_TMP_DIR}/mapred ${HADOOP_TMP_DIR}/nm-local-dir ${HADOOP_TMP_DIR}/yarn-nm-recovery ${HADOOP_LOG_DIR} ${YARN_LOG_DIR} \\\n && chmod -R 775 ${HADOOP_LOG_DIR} ${YARN_LOG_DIR} \\\n && chmod -R 700 ${HADOOP_TMP_DIR}/dfs \\\n && chown -R hdfs:hadoop ${HADOOP_TMP_DIR}/dfs ${HADOOP_LOG_DIR} \\\n && chown -R yarn:hadoop ${HADOOP_TMP_DIR}/yarn ${HADOOP_TMP_DIR}/nm-local-dir ${HADOOP_TMP_DIR}/yarn-nm-recovery ${YARN_LOG_DIR} \\\n && chown -R mapred:hadoop ${HADOOP_TMP_DIR}/mapred \\\n && rm -rf ${HADOOP_HOME}/share/doc \\\n && for dir in common hdfs mapreduce tools yarn; do rm -rf ${HADOOP_HOME}/share/hadoop/${dir}/sources ; done \\\n && rm -rf ${HADOOP_HOME}/share/hadoop/common/jdiff \\\n && rm -rf ${HADOOP_HOME}/share/hadoop/mapreduce/lib-examples \\\n && rm -rf ${HADOOP_HOME}/share/hadoop/yarn/test \\\n && find ${HADOOP_HOME}/share/hadoop -name *test*.jar | xargs rm -rf \\\n && rm /hadoop-${HADOOP_VERSION}.tar.gz \\\n && rm -rf /root/.m2 \\\n && apk del .builddeps .builddeps.1 \\\n && echo\nCOPY etc/* ${HADOOP_CONF_DIR}/\nCOPY bin/* /usr/local/bin/\nCOPY lib/* /usr/local/lib/\nWORKDIR ${HADOOP_HOME}\nVOLUME [\"${HADOOP_TMP_DIR}\", \"${HADOOP_LOG_DIR}\", \"${YARN_LOG_DIR}\", \"${HADOOP_HOME}\"]\nENTRYPOINT [\"entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"a21c726079d130273f90acba6c157410","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.5\nMAINTAINER smizy\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"Apache License 2.0\" \\\n      org.label-schema.name=\"smizy/hadoop-base\" \\\n      org.label-schema.url=\"https://github.com/smizy\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-type=\"Git\" \\\n      org.label-schema.vcs-url=\"https://github.com/smizy/docker-hadoop-base\"\nENV HADOOP_VERSION=\"$VERSION\"\nENV HADOOP_HOME=\"/usr/local/hadoop-${HADOOP_VERSION}\"\nENV HADOOP_COMMON_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_HDFS_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_MAPRED_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_YARN_HOME=\"${HADOOP_HOME}\"\nENV HADOOP_CONF_DIR=\"${HADOOP_HOME}/etc/hadoop \"\nENV HADOOP_LOG_DIR=\"/var/log/hdfs\"\nENV HADOOP_TMP_DIR=\"/hadoop\"\nENV YARN_CONF_DIR=\"${HADOOP_HOME}/etc/hadoop\"\nENV YARN_HOME=\"${HADOOP_HOME}\"\nENV YARN_LOG_DIR=\"/var/log/yarn\"\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nENV PATH=\"$PATH:${JAVA_HOME}/bin:${HADOOP_HOME}/sbin:${HADOOP_HOME}/bin\"\nENV HADOOP_CLUSTER_NAME=\"hadoop\"\nENV HADOOP_ZOOKEEPER_QUORUM=\"zookeeper-1.vnet:2181,zookeeper-2.vnet:2181,zookeeper-3.vnet:2181\"\nENV HADOOP_NAMENODE1_HOSTNAME=\"namenode-1.vnet\"\nENV HADOOP_NAMENODE2_HOSTNAME=\"namenode-2.vnet\"\nENV HADOOP_QJOURNAL_ADDRESS=\"journalnode-1.vnet:8485;journalnode-2.vnet:8485;journalnode-3.vnet:8485\"\nENV HADOOP_DFS_REPLICATION=\"3\"\nENV YARN_RESOURCEMANAGER_HOSTNAME=\"resourcemanager-1.vnet\"\nENV MAPRED_JOBHISTORY_HOSTNAME=\"historyserver-1.vnet\"\n#   [Java 8] Over usage of virtual memory(https://issues.apache.org/jira/browse/YARN-4714)\n#   ENV MAPRED_CHILD_JAVA_OPTS \"-XX:ReservedCodeCacheSize=100M -XX:MaxMetaspaceSize=256m -XX:CompressedClassSpaceSize=256m\"\n#  # default memory/cpu setting\nENV HADOOP_HEAPSIZE=\"1000\"\nENV YARN_HEAPSIZE=\"1000\"\nENV YARN_NODEMANAGER_MEMORY_MB=\"8192\"\nENV YARN_NODEMANAGER_CPU_VCORES=\"8\"\nENV YARN_NODEMANAGER_VMEM_CHECK=\"true\"\nENV YARN_SCHEDULER_MIN_ALLOC_MB=\"1024\"\nENV YARN_APPMASTER_MEMORY_MB=\"1536\"\nENV YARN_APPMASTER_COMMAND_OPTS=\"-Xmx1024m\"\nENV MAPRED_MAP_MEMORY_MB=\"1024\"\nENV MAPRED_REDUCE_MEMORY_MB=\"1024\"\n#  # HDFS path\nENV YARN_REMOTE_APP_LOG_DIR=\"/tmp/logs\"\nENV YARN_APP_MAPRED_STAGING_DIR=\"/tmp/hadoop-yarn/staging\"\nENV PROTOBUF_VERSION=\"2.5.0\"\nENV GOOGLETEST_VERSION=\"1.5.0    \"\nRUN set -x \\\n && apk --no-cache add bash openjdk8-jre su-exec tar wget \\\n && apk --no-cache add zlib \\\n && apk --no-cache add --virtual .builddeps autoconf automake build-base libtool zlib-dev \\\n && wget -q -O - https://github.com/google/protobuf/archive/v${PROTOBUF_VERSION}.tar.gz | tar -xzf - -C /tmp \\\n && cd /tmp/protobuf-* \\\n && wget -q -O - https://github.com/google/googletest/archive/release-${GOOGLETEST_VERSION}.tar.gz | tar -xzf - \\\n && mv googletest-* gtest \\\n && ./autogen.sh \\\n && CXXFLAGS=\"$CXXFLAGS -fno-delete-null-pointer-checks\" ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var \\\n && make \\\n && make check \\\n && make install \\\n && rm -rf /tmp/protobuf-* \\\n && apk --no-cache add bash bzip2 fts fuse libressl-dev libtirpc snappy zlib \\\n && apk --no-cache add --virtual .builddeps.1 autoconf automake build-base bzip2-dev cmake curl fts-dev fuse-dev git libtirpc-dev libtool maven openjdk8 snappy-dev zlib-dev \\\n && mirror_url=$( wget -q -O - \"http://www.apache.org/dyn/closer.cgi/?as_json=1\" | grep \"preferred\" | sed -n 's#.*\"\\(http://*[^\"]*\\)\".*#\\1#p' ;) \\\n && wget -q -O - ${mirror_url}/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}-src.tar.gz | tar -xzf - -C /tmp \\\n && cd /tmp/hadoop-* \\\n && sed -ri 's/executable=\"sh\"/executable=\"bash\"/g' hadoop-project-dist/pom.xml \\\n && sed -ri 's/^#if defined\\(__sun\\)/#if 1/g' hadoop-common-project/hadoop-common/src/main/native/src/exception.c \\\n && sed -ri 's/^( *container)/\\1\\n fts/g' hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/CMakeLists.txt \\\n && sed -ri 's/^(.*JniBasedUnixGroupsNetgroupMapping.c)/#\\1/g' hadoop-common-project/hadoop-common/src/CMakeLists.txt \\\n && sed -ri 's#^(include_directories.*)#\\1\\n /usr/include/tirpc#' hadoop-tools/hadoop-pipes/src/CMakeLists.txt \\\n && sed -ri 's/^( *pthread)/\\1\\n tirpc/g' hadoop-tools/hadoop-pipes/src/CMakeLists.txt \\\n && mvn package -Pdist,native -DskipTests -DskipDocs -Dtar \\\n && mv hadoop-dist/target/hadoop-${HADOOP_VERSION}.tar.gz / \\\n && tar -xzf /hadoop-${HADOOP_VERSION}.tar.gz -C /usr/local \\\n && rm -rf /tmp/hadoop-* \\\n && cd / \\\n && ln -s /usr/local/hadoop-${HADOOP_VERSION} /usr/local/hadoop-${HADOOP_VERSION%.*} \\\n && env | grep -E '^(JAVA|HADOOP|PATH|YARN)' | sed 's/^/export /g' > ~/.profile \\\n && cp ~/.profile /etc/profile.d/hadoop \\\n && sed -i 's@${JAVA_HOME}@'${JAVA_HOME}'@g' ${HADOOP_CONF_DIR}/hadoop-env.sh \\\n && adduser -D -g '' -s /sbin/nologin -u 1000 docker \\\n && for user in hadoop hdfs yarn mapred hbase; do adduser -D -g '' -s /sbin/nologin ${user} ; done \\\n && for user in root hdfs yarn mapred hbase docker; do adduser ${user} hadoop ; done \\\n && mkdir -p ${HADOOP_TMP_DIR}/dfs ${HADOOP_TMP_DIR}/yarn ${HADOOP_TMP_DIR}/mapred ${HADOOP_TMP_DIR}/nm-local-dir ${HADOOP_TMP_DIR}/yarn-nm-recovery ${HADOOP_LOG_DIR} ${YARN_LOG_DIR} \\\n && chmod -R 775 ${HADOOP_LOG_DIR} ${YARN_LOG_DIR} \\\n && chmod -R 700 ${HADOOP_TMP_DIR}/dfs \\\n && chown -R hdfs:hadoop ${HADOOP_TMP_DIR}/dfs ${HADOOP_LOG_DIR} \\\n && chown -R yarn:hadoop ${HADOOP_TMP_DIR}/yarn ${HADOOP_TMP_DIR}/nm-local-dir ${HADOOP_TMP_DIR}/yarn-nm-recovery ${YARN_LOG_DIR} \\\n && chown -R mapred:hadoop ${HADOOP_TMP_DIR}/mapred \\\n && rm -rf ${HADOOP_HOME}/share/doc \\\n && for dir in common hdfs mapreduce tools yarn; do rm -rf ${HADOOP_HOME}/share/hadoop/${dir}/sources ; done \\\n && rm -rf ${HADOOP_HOME}/share/hadoop/common/jdiff \\\n && rm -rf ${HADOOP_HOME}/share/hadoop/mapreduce/lib-examples \\\n && rm -rf ${HADOOP_HOME}/share/hadoop/yarn/test \\\n && find ${HADOOP_HOME}/share/hadoop -name *test*.jar | xargs rm -rf \\\n && rm /hadoop-${HADOOP_VERSION}.tar.gz \\\n && rm -rf /root/.m2 \\\n && apk del .builddeps .builddeps.1 \\\n && echo\nCOPY etc/* ${HADOOP_CONF_DIR}/\nCOPY bin/* /usr/local/bin/\nCOPY lib/* /usr/local/lib/\nWORKDIR ${HADOOP_HOME}\nVOLUME [\"${HADOOP_TMP_DIR}\", \"${HADOOP_LOG_DIR}\", \"${YARN_LOG_DIR}\", \"${HADOOP_HOME}\"]\nENTRYPOINT [\"entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"be9f3ec7b0989f3abfc88d2c672c9fac","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3d37709232aef78f57118446cfd6ce944ad94610.dockerfile"}