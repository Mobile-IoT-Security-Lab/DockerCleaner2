{"seed":818892675,"processedDockerfileHash":"391e48bba27b822a043f93d4e11c61be","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:15.04\nMAINTAINER Wesley Hales <wesleyhales@gmail.com>\n#   Install.\nRUN sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get -y upgrade \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends byobu curl git htop man unzip vim wget -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   Set environment variables.\nENV HOME=\"/root\"\n#   Define working directory.\nWORKDIR /root\n#   Install Java.\n#   auto validate license\n#  RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections\n#   Install Java.\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends openjdk-7-jdk -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\n#   update repos\nRUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee /etc/apt/sources.list.d/webupd8team-java.list\nRUN echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886\nRUN :\n#   install java\nRUN (apt-get update ;apt-get install --no-install-recommends oracle-java8-installer -y )\nRUN apt-get clean\n#   Install Phantom2 build requirements\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends g++ libfontconfig1-dev libjpeg-dev -y )\n#  #################################### build latest phantom\n#  RUN apt-get -y install python\n#  RUN rm -rf phantomjs\n#  RUN git clone git://github.com/ariya/phantomjs.git\n#  RUN cd /root/phantomjs/deploy && ./docker-build.sh\n#  RUN ln -s /root/phantomjs/bin/phantomjs /usr/bin/phantomjs\n#  #####################################+++++ END build latest phantom\n#  #####################################+++++ comment out when building new version of phantomjs\nRUN curl -OLkv -A \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5\" https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN mv phantomjs-2.1.1-linux-x86_64 /usr/local/share\nRUN ln -sf /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin\n#  #####################################+++++ END comment out when building new version of phantomjs\nRUN git clone git://github.com/wesleyhales/speedgun.git\n#  RUN mkdir /root/speedgun/core/reports\n#  VOLUME [\"/root/speedgun/core/reports\"]\nRUN cd speedgun/core \\\n && phantomjs --ssl-protocol=any --ignore-ssl-errors=yes speedgun.js http://www.google.com performance csv\nRUN cd /root \\\n && wget https://www.dropbox.com/s/k2iz3qttedm43s9/server.tar\nRUN cd /root \\\n && tar -xvf server.tar\n#  RUN echo \"cd /root/jboss-as-7.1.1.Final-fluxui/ && ./bin/standalone.sh --server-config=standalone-full.xml -b 0.0.0.0\" >> /root/.bashrc\n#   install maven\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends maven -y )\nRUN cd /root/speedgun/server \\\n && mvn clean install\nRUN ln -s /root/speedgun/server/target/speedgun /root/jboss-as-7.1.1.Final-fluxui/standalone/deployments/speedgun.war\nRUN touch /root/jboss-as-7.1.1.Final-fluxui/standalone/deployments/speedgun.war.dodeploy\n#   Cleanup old JMS queue\nRUN rm -rf /root/jboss-as-7.1.1.Final-fluxui/standalone/tmp/ /root/jboss-as-7.1.1.Final-fluxui/standalone/data/*\nRUN rm -rf /root/jboss-as-7.1.1.Final-fluxui/standalone/configuration/standalone_xml_history\nRUN mkdir /root/jboss-as-7.1.1.Final-fluxui/speedgun\nRUN cd /root/jboss-as-7.1.1.Final-fluxui/speedgun \\\n && curl -O https://raw.githubusercontent.com/wesleyhales/speedgun/master/core/speedgun.js\nRUN cd /root/jboss-as-7.1.1.Final-fluxui/speedgun \\\n && curl -O https://raw.githubusercontent.com/wesleyhales/speedgun/master/core/config.json\nRUN cd /root/jboss-as-7.1.1.Final-fluxui/speedgun \\\n && curl -O https://raw.githubusercontent.com/wesleyhales/speedgun/master/core/pconfig.json\nCOPY server-entrypoint.sh /\nVOLUME /root/jboss-as-7.1.1.Final-fluxui/standalone/log\nENTRYPOINT [\"/server-entrypoint.sh\"]\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends postgresql-client -y )\nCOPY speedgun.sql /\nEXPOSE 3306/tcp 8080/tcp 8443/tcp\n#  CMD [\"postgres\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:15.04\nMAINTAINER Wesley Hales <wesleyhales@gmail.com>\n#  Install.\nRUN sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get -y upgrade \\\n && apt-get install build-essential -y \\\n && apt-get install software-properties-common -y \\\n && apt-get install byobu curl git htop man unzip vim wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Set environment variables.\nENV HOME=\"/root\"\n#  Define working directory.\nWORKDIR /root\n#  Install Java.\n#  auto validate license\n# RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections\n#  Install Java.\nRUN apt-get update \\\n && apt-get install openjdk-7-jdk -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\n#  update repos\nRUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee /etc/apt/sources.list.d/webupd8team-java.list\nRUN echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886\nRUN apt-get update\n#  install java\nRUN apt-get install oracle-java8-installer -y\nRUN apt-get clean\n#  Install Phantom2 build requirements\nRUN apt-get update \\\n && apt-get install g++ libfontconfig1-dev libjpeg-dev -y\n# #################################### build latest phantom\n# RUN apt-get -y install python\n# RUN rm -rf phantomjs\n# RUN git clone git://github.com/ariya/phantomjs.git\n# RUN cd /root/phantomjs/deploy && ./docker-build.sh\n# RUN ln -s /root/phantomjs/bin/phantomjs /usr/bin/phantomjs\n# #####################################+++++ END build latest phantom\n# #####################################+++++ comment out when building new version of phantomjs\nRUN curl -OLkv -A \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5\" https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN mv phantomjs-2.1.1-linux-x86_64 /usr/local/share\nRUN ln -sf /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin\n# #####################################+++++ END comment out when building new version of phantomjs\nRUN git clone git://github.com/wesleyhales/speedgun.git\n# RUN mkdir /root/speedgun/core/reports\n# VOLUME [\"/root/speedgun/core/reports\"]\nRUN cd speedgun/core \\\n && phantomjs --ssl-protocol=any --ignore-ssl-errors=yes speedgun.js http://www.google.com performance csv\nRUN cd /root \\\n && wget https://www.dropbox.com/s/k2iz3qttedm43s9/server.tar\nRUN cd /root \\\n && tar -xvf server.tar\n# RUN echo \"cd /root/jboss-as-7.1.1.Final-fluxui/ && ./bin/standalone.sh --server-config=standalone-full.xml -b 0.0.0.0\" >> /root/.bashrc\n#  install maven\nRUN apt-get update \\\n && apt-get install maven -y\nRUN cd /root/speedgun/server \\\n && mvn clean install\nRUN ln -s /root/speedgun/server/target/speedgun /root/jboss-as-7.1.1.Final-fluxui/standalone/deployments/speedgun.war\nRUN touch /root/jboss-as-7.1.1.Final-fluxui/standalone/deployments/speedgun.war.dodeploy\n#  Cleanup old JMS queue\nRUN rm -rf /root/jboss-as-7.1.1.Final-fluxui/standalone/tmp/ /root/jboss-as-7.1.1.Final-fluxui/standalone/data/*\nRUN rm -rf /root/jboss-as-7.1.1.Final-fluxui/standalone/configuration/standalone_xml_history\nRUN mkdir /root/jboss-as-7.1.1.Final-fluxui/speedgun\nRUN cd /root/jboss-as-7.1.1.Final-fluxui/speedgun \\\n && curl -O https://raw.githubusercontent.com/wesleyhales/speedgun/master/core/speedgun.js\nRUN cd /root/jboss-as-7.1.1.Final-fluxui/speedgun \\\n && curl -O https://raw.githubusercontent.com/wesleyhales/speedgun/master/core/config.json\nRUN cd /root/jboss-as-7.1.1.Final-fluxui/speedgun \\\n && curl -O https://raw.githubusercontent.com/wesleyhales/speedgun/master/core/pconfig.json\nCOPY server-entrypoint.sh /\nVOLUME /root/jboss-as-7.1.1.Final-fluxui/standalone/log\nENTRYPOINT [\"/server-entrypoint.sh\"]\nRUN apt-get update\nRUN apt-get install postgresql-client -y\nCOPY speedgun.sql /\nEXPOSE 3306/tcp 8080/tcp 8443/tcp\n# CMD [\"postgres\"]\n","injectedSmells":[],"originalDockerfileHash":"99771219da3a7a15e8aec8da30cf4f83","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:15.04\nMAINTAINER Wesley Hales <wesleyhales@gmail.com>\n#   Install.\nRUN sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get -y upgrade \\\n && apt-get install build-essential -y \\\n && apt-get install software-properties-common -y \\\n && apt-get install byobu curl git htop man unzip vim wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Set environment variables.\nENV HOME=\"/root\"\n#   Define working directory.\nWORKDIR /root\n#   Install Java.\n#   auto validate license\n#  RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections\n#   Install Java.\nRUN apt-get update \\\n && apt-get install openjdk-7-jdk -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\n#   update repos\nRUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee /etc/apt/sources.list.d/webupd8team-java.list\nRUN echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886\nRUN apt-get update\n#   install java\nRUN apt-get install oracle-java8-installer -y\nRUN apt-get clean\n#   Install Phantom2 build requirements\nRUN apt-get update \\\n && apt-get install g++ libfontconfig1-dev libjpeg-dev -y\n#  #################################### build latest phantom\n#  RUN apt-get -y install python\n#  RUN rm -rf phantomjs\n#  RUN git clone git://github.com/ariya/phantomjs.git\n#  RUN cd /root/phantomjs/deploy && ./docker-build.sh\n#  RUN ln -s /root/phantomjs/bin/phantomjs /usr/bin/phantomjs\n#  #####################################+++++ END build latest phantom\n#  #####################################+++++ comment out when building new version of phantomjs\nRUN curl -OLkv -A \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5\" https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN mv phantomjs-2.1.1-linux-x86_64 /usr/local/share\nRUN ln -sf /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin\n#  #####################################+++++ END comment out when building new version of phantomjs\nRUN git clone git://github.com/wesleyhales/speedgun.git\n#  RUN mkdir /root/speedgun/core/reports\n#  VOLUME [\"/root/speedgun/core/reports\"]\nRUN cd speedgun/core \\\n && phantomjs --ssl-protocol=any --ignore-ssl-errors=yes speedgun.js http://www.google.com performance csv\nRUN cd /root \\\n && wget https://www.dropbox.com/s/k2iz3qttedm43s9/server.tar\nRUN cd /root \\\n && tar -xvf server.tar\n#  RUN echo \"cd /root/jboss-as-7.1.1.Final-fluxui/ && ./bin/standalone.sh --server-config=standalone-full.xml -b 0.0.0.0\" >> /root/.bashrc\n#   install maven\nRUN apt-get update \\\n && apt-get install maven -y\nRUN cd /root/speedgun/server \\\n && mvn clean install\nRUN ln -s /root/speedgun/server/target/speedgun /root/jboss-as-7.1.1.Final-fluxui/standalone/deployments/speedgun.war\nRUN touch /root/jboss-as-7.1.1.Final-fluxui/standalone/deployments/speedgun.war.dodeploy\n#   Cleanup old JMS queue\nRUN rm -rf /root/jboss-as-7.1.1.Final-fluxui/standalone/tmp/ /root/jboss-as-7.1.1.Final-fluxui/standalone/data/*\nRUN rm -rf /root/jboss-as-7.1.1.Final-fluxui/standalone/configuration/standalone_xml_history\nRUN mkdir /root/jboss-as-7.1.1.Final-fluxui/speedgun\nRUN cd /root/jboss-as-7.1.1.Final-fluxui/speedgun \\\n && curl -O https://raw.githubusercontent.com/wesleyhales/speedgun/master/core/speedgun.js\nRUN cd /root/jboss-as-7.1.1.Final-fluxui/speedgun \\\n && curl -O https://raw.githubusercontent.com/wesleyhales/speedgun/master/core/config.json\nRUN cd /root/jboss-as-7.1.1.Final-fluxui/speedgun \\\n && curl -O https://raw.githubusercontent.com/wesleyhales/speedgun/master/core/pconfig.json\nCOPY server-entrypoint.sh /\nVOLUME /root/jboss-as-7.1.1.Final-fluxui/standalone/log\nENTRYPOINT [\"/server-entrypoint.sh\"]\nRUN apt-get update\nRUN apt-get install postgresql-client -y\nCOPY speedgun.sql /\nEXPOSE 3306/tcp 8080/tcp 8443/tcp\n#  CMD [\"postgres\"]\n","originalDockerfileUglifiedHash":"ade76e527212b78bb580f38d9a964fd0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e946dfff7b16845193529e4f34f83edfc1b4dd41.dockerfile"}