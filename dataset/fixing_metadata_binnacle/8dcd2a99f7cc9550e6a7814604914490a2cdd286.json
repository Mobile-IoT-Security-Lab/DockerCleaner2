{"seed":1152607495,"processedDockerfileHash":"e5bf39b3978a3ebb751609f5683b5573","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#  ###############################################################################\n#   base system\n#  ###############################################################################\nFROM ubuntu:18.04 AS system\nENV USERNAME=\"diUser\"\nRUN useradd -m $USERNAME \\\n && echo \"$USERNAME:$USERNAME\" | chpasswd \\\n && usermod --shell /bin/bash $USERNAME \\\n && usermod -aG video,audio $USERNAME\n#  ###############################################################################\n#   builder\n#  ###############################################################################\nFROM system AS builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsdl1.2-dev=1.2.15+dfsg2-0.1ubuntu0.2 libsdl-mixer1.2-dev=1.2.12-14 libsdl-image1.2-dev=1.2.12-8ubuntu0.1 byacc=20140715-1build1 libgtk2.0-dev=2.24.32-1ubuntu1 gcc-5=5.5.0-12ubuntu1 g++-5=5.5.0-12ubuntu1 automake=1:1.15.1-3ubuntu2 libtool=2.4.6-2 unzip=6.0-21ubuntu1.2 flex=2.6.4-6 git=1:2.17.1-1ubuntu0.17 ca-certificates=20211016ubuntu0.18.04.1 -y\n#  ## set default compilers\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 100 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 100 \\\n && update-alternatives --install /usr/bin/cpp cpp-bin /usr/bin/cpp-5 30 \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 \\\n && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 \\\n && cc --version \\\n && c++ --version \\\n && cpp --version\n#  ## build ffmpeg\nRUN git clone --depth 1 -b v0.5.2 http://github.com/FFmpeg/FFmpeg/ \\\n && cd FFmpeg \\\n && ./configure --prefix=/usr/local/ --disable-ffmpeg --disable-ffplay --disable-ffserver \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#  ## ffmpeg built\n#  ## build SDL_ffmpeg\nRUN git clone -b v0.9.0 http://github.com/lynxabraxas/SDL_ffmpeg \\\n && cd /SDL_ffmpeg/trunk/ \\\n && sed -i 's/CFLAGS=-I$INCDIR/CFLAGS=\"$CFLAGS -I$INCDIR\"/' configure \\\n && sed -i 's/LDFLAGS=-L$LIBDIR/LDFLAGS=\"$LDFLAGS -L$LIBDIR\"/' configure \\\n && LDFLAGS=\"-lm\" ./configure --prefix=/usr/local/ --static=yes \\\n && make \\\n && make install\n#  ## SDL_ffmpeg built\nENV LD_LIBRARY_PATH=\"\\\"${LD_LIBRARY_PATH}:/usr/local/lib\\\"\"\n#  # ctp2CD/ copy not done in builder stage such that stages before are compatible with travis docker build\n#  # not using `COPY  ./ /ctp2/` to avoid cache out-dating when ctp2CD/ is populated for 3rd stage\nCOPY autogen.sh configure.ac GNUmakefile.am Makefile /ctp2/\nCOPY ctp2_code/ /ctp2/ctp2_code/\nCOPY ctp2_data/ /ctp2/ctp2_data/\nRUN cd /ctp2 \\\n && ./autogen.sh \\\n && CPPFLAGS=\"-I/usr/local/include/SDL/\" CC=/usr/bin/gcc-5 CXX=/usr/bin/g++-5 CFLAGS=\"$CFLAGS -w -O3 -fuse-ld=gold\" CXXFLAGS=\"$CXXFLAGS -fpermissive -w -O3 -fuse-ld=gold\" LDFLAGS=\"$LDFLAGS -L/usr/local/lib\" ./configure --prefix=/opt/ctp2 --bindir=/opt/ctp2/ctp2_program/ctp --enable-silent-rules \\\n && make -j\"$( nproc ;)\" \\\n && make -j\"$( nproc ;)\" install \\\n && cp -r /ctp2/ctp2_data/ /opt/ctp2/ \\\n && mkdir -p /opt/ctp2/ctp2_program/ctp/dll/map/ \\\n && cp -v /ctp2/ctp2_code/mapgen/.libs/*.so /opt/ctp2/ctp2_program/ctp/dll/map/\n#  ###############################################################################\n#   merge\n#  ###############################################################################\nFROM system AS install\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsdl1.2debian=1.2.15+dfsg2-0.1ubuntu0.2 libsdl-mixer1.2=1.2.12-14 libsdl-image1.2=1.2.12-8ubuntu0.1 libgtk2.0-0=2.24.32-1ubuntu1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  # ctp2CD/ copy done in install stage such that stages before are compatible with travis docker build, results in one additional layer in the final DI (incr. DI download size)\nCOPY ctp2CD/ /opt/ctp2/\n#  # ctp2/ copy has to be after ctp2CD/ to overwrite with newer versions from civctp2\nCOPY --from=builder /opt/ctp2/ /opt/ctp2/\nCOPY --from=builder /usr/local/lib /usr/local/lib\nENV LD_LIBRARY_PATH=\"\\\"${LD_LIBRARY_PATH}:/usr/local/lib\\\"\"\nUSER $USERNAME\nWORKDIR /opt/ctp2/ctp2_program/ctp/\nCMD [\"./ctp2\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###############################################################################\n#  base system\n# ###############################################################################\nFROM ubuntu:18.04 AS system\nENV USERNAME=\"diUser\"\nRUN useradd -m $USERNAME \\\n && echo \"$USERNAME:$USERNAME\" | chpasswd \\\n && usermod --shell /bin/bash $USERNAME \\\n && usermod -aG video,audio $USERNAME\n# ###############################################################################\n#  builder\n# ###############################################################################\nFROM system AS builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsdl1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev byacc libgtk2.0-dev gcc-5 g++-5 automake libtool unzip flex git ca-certificates -y\n# ## set default compilers\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 100 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 100 \\\n && update-alternatives --install /usr/bin/cpp cpp-bin /usr/bin/cpp-5 30 \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 \\\n && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 \\\n && cc --version \\\n && c++ --version \\\n && cpp --version\n# ## build ffmpeg\nRUN git clone --depth 1 -b v0.5.2 http://github.com/FFmpeg/FFmpeg/ \\\n && cd FFmpeg \\\n && ./configure --prefix=/usr/local/ --disable-ffmpeg --disable-ffplay --disable-ffserver \\\n && make -j\"$( nproc ;)\" \\\n && make install\n# ## ffmpeg built\n# ## build SDL_ffmpeg\nRUN git clone -b v0.9.0 http://github.com/lynxabraxas/SDL_ffmpeg \\\n && cd /SDL_ffmpeg/trunk/ \\\n && sed -i 's/CFLAGS=-I$INCDIR/CFLAGS=\"$CFLAGS -I$INCDIR\"/' configure \\\n && sed -i 's/LDFLAGS=-L$LIBDIR/LDFLAGS=\"$LDFLAGS -L$LIBDIR\"/' configure \\\n && LDFLAGS=\"-lm\" ./configure --prefix=/usr/local/ --static=yes \\\n && make \\\n && make install\n# ## SDL_ffmpeg built\nENV LD_LIBRARY_PATH=\"\\\"${LD_LIBRARY_PATH}:/usr/local/lib\\\"\"\n# # ctp2CD/ copy not done in builder stage such that stages before are compatible with travis docker build\n# # not using `COPY  ./ /ctp2/` to avoid cache out-dating when ctp2CD/ is populated for 3rd stage\nCOPY autogen.sh configure.ac GNUmakefile.am Makefile /ctp2/\nCOPY ctp2_code/ /ctp2/ctp2_code/\nCOPY ctp2_data/ /ctp2/ctp2_data/\nRUN cd /ctp2 \\\n && ./autogen.sh \\\n && CPPFLAGS=\"-I/usr/local/include/SDL/\" CC=/usr/bin/gcc-5 CXX=/usr/bin/g++-5 CFLAGS=\"$CFLAGS -w -O3 -fuse-ld=gold\" CXXFLAGS=\"$CXXFLAGS -fpermissive -w -O3 -fuse-ld=gold\" LDFLAGS=\"$LDFLAGS -L/usr/local/lib\" ./configure --prefix=/opt/ctp2 --bindir=/opt/ctp2/ctp2_program/ctp --enable-silent-rules \\\n && make -j\"$( nproc ;)\" \\\n && make -j\"$( nproc ;)\" install \\\n && cp -r /ctp2/ctp2_data/ /opt/ctp2/ \\\n && mkdir -p /opt/ctp2/ctp2_program/ctp/dll/map/ \\\n && cp -v /ctp2/ctp2_code/mapgen/.libs/*.so /opt/ctp2/ctp2_program/ctp/dll/map/\n# ###############################################################################\n#  merge\n# ###############################################################################\nFROM system AS install\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsdl1.2debian libsdl-mixer1.2 libsdl-image1.2 libgtk2.0-0 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n# # ctp2CD/ copy done in install stage such that stages before are compatible with travis docker build, results in one additional layer in the final DI (incr. DI download size)\nCOPY ctp2CD/ /opt/ctp2/\n# # ctp2/ copy has to be after ctp2CD/ to overwrite with newer versions from civctp2\nCOPY --from=builder /opt/ctp2/ /opt/ctp2/\nCOPY --from=builder /usr/local/lib /usr/local/lib\nENV LD_LIBRARY_PATH=\"\\\"${LD_LIBRARY_PATH}:/usr/local/lib\\\"\"\nUSER $USERNAME\nWORKDIR /opt/ctp2/ctp2_program/ctp/\nCMD [\"./ctp2\"]\n","injectedSmells":[],"originalDockerfileHash":"e13f484aad05e89d4774c1aa44b36507","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###############################################################################\n#   base system\n#  ###############################################################################\nFROM ubuntu:18.04 AS system\nENV USERNAME=\"diUser\"\nRUN useradd -m $USERNAME \\\n && echo \"$USERNAME:$USERNAME\" | chpasswd \\\n && usermod --shell /bin/bash $USERNAME \\\n && usermod -aG video,audio $USERNAME\n#  ###############################################################################\n#   builder\n#  ###############################################################################\nFROM system AS builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsdl1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev byacc libgtk2.0-dev gcc-5 g++-5 automake libtool unzip flex git ca-certificates -y\n#  ## set default compilers\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 100 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 100 \\\n && update-alternatives --install /usr/bin/cpp cpp-bin /usr/bin/cpp-5 30 \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 \\\n && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 \\\n && cc --version \\\n && c++ --version \\\n && cpp --version\n#  ## build ffmpeg\nRUN git clone --depth 1 -b v0.5.2 http://github.com/FFmpeg/FFmpeg/ \\\n && cd FFmpeg \\\n && ./configure --prefix=/usr/local/ --disable-ffmpeg --disable-ffplay --disable-ffserver \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#  ## ffmpeg built\n#  ## build SDL_ffmpeg\nRUN git clone -b v0.9.0 http://github.com/lynxabraxas/SDL_ffmpeg \\\n && cd /SDL_ffmpeg/trunk/ \\\n && sed -i 's/CFLAGS=-I$INCDIR/CFLAGS=\"$CFLAGS -I$INCDIR\"/' configure \\\n && sed -i 's/LDFLAGS=-L$LIBDIR/LDFLAGS=\"$LDFLAGS -L$LIBDIR\"/' configure \\\n && LDFLAGS=\"-lm\" ./configure --prefix=/usr/local/ --static=yes \\\n && make \\\n && make install\n#  ## SDL_ffmpeg built\nENV LD_LIBRARY_PATH=\"\\\"${LD_LIBRARY_PATH}:/usr/local/lib\\\"\"\n#  # ctp2CD/ copy not done in builder stage such that stages before are compatible with travis docker build\n#  # not using `COPY  ./ /ctp2/` to avoid cache out-dating when ctp2CD/ is populated for 3rd stage\nCOPY autogen.sh configure.ac GNUmakefile.am Makefile /ctp2/\nCOPY ctp2_code/ /ctp2/ctp2_code/\nCOPY ctp2_data/ /ctp2/ctp2_data/\nRUN cd /ctp2 \\\n && ./autogen.sh \\\n && CPPFLAGS=\"-I/usr/local/include/SDL/\" CC=/usr/bin/gcc-5 CXX=/usr/bin/g++-5 CFLAGS=\"$CFLAGS -w -O3 -fuse-ld=gold\" CXXFLAGS=\"$CXXFLAGS -fpermissive -w -O3 -fuse-ld=gold\" LDFLAGS=\"$LDFLAGS -L/usr/local/lib\" ./configure --prefix=/opt/ctp2 --bindir=/opt/ctp2/ctp2_program/ctp --enable-silent-rules \\\n && make -j\"$( nproc ;)\" \\\n && make -j\"$( nproc ;)\" install \\\n && cp -r /ctp2/ctp2_data/ /opt/ctp2/ \\\n && mkdir -p /opt/ctp2/ctp2_program/ctp/dll/map/ \\\n && cp -v /ctp2/ctp2_code/mapgen/.libs/*.so /opt/ctp2/ctp2_program/ctp/dll/map/\n#  ###############################################################################\n#   merge\n#  ###############################################################################\nFROM system AS install\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsdl1.2debian libsdl-mixer1.2 libsdl-image1.2 libgtk2.0-0 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  # ctp2CD/ copy done in install stage such that stages before are compatible with travis docker build, results in one additional layer in the final DI (incr. DI download size)\nCOPY ctp2CD/ /opt/ctp2/\n#  # ctp2/ copy has to be after ctp2CD/ to overwrite with newer versions from civctp2\nCOPY --from=builder /opt/ctp2/ /opt/ctp2/\nCOPY --from=builder /usr/local/lib /usr/local/lib\nENV LD_LIBRARY_PATH=\"\\\"${LD_LIBRARY_PATH}:/usr/local/lib\\\"\"\nUSER $USERNAME\nWORKDIR /opt/ctp2/ctp2_program/ctp/\nCMD [\"./ctp2\"]\n","originalDockerfileUglifiedHash":"443092140f30d799cafd6991a13977fe","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8dcd2a99f7cc9550e6a7814604914490a2cdd286.dockerfile"}