{"seed":2631881134,"processedDockerfileHash":"3e82fd8c5e6e863506ae4bec6eff81bd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM buildpack-deps:bionic-scm\nENV APP_DIR=\"/srv/app\"\n#   Set up common env variables\nENV TZ=\"America/Los_Angeles\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN adduser --disabled-password --gecos \"Default Jupyter user\" jovyan\nRUN install -d -o jovyan -g jovyan ${APP_DIR}\nCOPY nodesource.list /etc/apt/sources.list.d/nodesource.list\nCOPY nodesource-key.asc /tmp/nodesource-key.asc\nRUN apt-key add /tmp/nodesource-key.asc\n#   TODO: remove me when apt can find our packages\n#  RUN echo 91.189.91.26  security.ubuntu.com >> /etc/hosts\n#  RUN echo 91.189.88.149  archive.ubuntu.com >> /etc/hosts\nRUN apt-get update -qq --yes \\\n && apt-get install --no-install-recommends python3.6 python3.6-venv python3.6-dev tar vim nodejs locales -qq --yes > /dev/null\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   for nbconvert\nRUN apt-get install --no-install-recommends pandoc texlive-xetex texlive-fonts-recommended texlive-generic-recommended -qq --yes > /dev/null\nRUN apt-get install --no-install-recommends libspatialindex-dev libgeos-dev gfortran ffmpeg -qq --yes > /dev/null\n#   install R, packages, and RStudio dependencies\nRUN apt-get update -qq --yes \\\n && apt-get install --no-install-recommends libapparmor1 libgdal-dev libproj-dev psmisc sudo r-base r-base-dev r-cran-aer r-cran-backports r-cran-base64enc r-cran-bindrcpp r-cran-broom r-cran-crayon r-cran-crosstalk r-cran-curl r-cran-data.table r-cran-dbi r-cran-devtools r-cran-digest r-cran-e1071 r-cran-evaluate r-cran-forcats r-cran-ggplot2 r-cran-glue r-cran-haven r-cran-highr r-cran-hms r-cran-htmlwidgets r-cran-httpuv r-cran-httr r-cran-lubridate r-cran-mapproj r-cran-maptools r-cran-markdown r-cran-matrix r-cran-matrixstats r-cran-memoise r-cran-nlme r-cran-openssl r-cran-pbdzmq r-cran-pillar r-cran-png r-cran-praise r-cran-proto r-cran-raster r-cran-rcolorbrewer r-cran-rcpp r-cran-rcurl r-cran-readr r-cran-readxl r-cran-rematch r-cran-repr r-cran-reshape r-cran-rjson r-cran-rlang r-cran-rpart r-cran-rprojroot r-cran-shiny r-cran-sp r-cran-spatstat r-cran-spdep r-cran-stringr r-cran-stringi r-cran-testthat r-cran-tibble r-cran-tidyr r-cran-utf8 r-cran-uuid r-cran-viridis r-cran-withr r-cran-xml2 r-cran-yaml lsb-release -qq --yes > /dev/null\n#   Install some R libraries that aren't in the debs\nCOPY install.R /tmp/install.R\n#   CircleCI stops printing output at 40k chars.\n#   We send stdout to a log file, and tail it a bit\n#   FIXME: Find something less sucky\n#   another hubploy #1\nRUN Rscript /tmp/install.R > /tmp/r-custom-packages.log 2>&1 \\\n && true || (echo FAIL ;tail /tmp/r-custom-packages.log ;false )\nRUN tail /tmp/r-custom-packages.log\nRUN rm /tmp/r-custom-packages.log\nENV RSTUDIO_URL=\"https://download2.rstudio.org/rstudio-server-1.1.453-amd64.deb\"\nENV RSTUDIO_CHECKSUM=\"3c546fa9067f48ed1a342f810fca8be6\"\n#   install rstudio\nRUN curl --silent --location --fail ${RSTUDIO_URL} > /tmp/rstudio.deb \\\n && echo \"${RSTUDIO_CHECKSUM} /tmp/rstudio.deb\" | md5sum -c - \\\n && dpkg -i /tmp/rstudio.deb \\\n && rm /tmp/rstudio.deb\nENV PATH=\"${APP_DIR}/venv/bin:$PATH:/usr/lib/rstudio-server/bin\"\n#   Set this to be on container storage, rather than under $HOME\nENV IPYTHONDIR=\"${APP_DIR}/venv/etc/ipython\"\nWORKDIR /home/jovyan\nUSER jovyan\nRUN python3.6 -m venv ${APP_DIR}/venv\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n#   Install JupyterLab extensions\nRUN jupyter labextension install @jupyterlab/hub-extension @jupyter-widgets/jupyterlab-manager jupyter-matplotlib @jupyterlab/plotly-extension @jupyterlab/geojson-extension\n#   Install IR kernelspec\nRUN Rscript -e \"IRkernel::installspec(user = FALSE, prefix='${APP_DIR}/venv')\"\n#   hmms needs to be installed after cython, for ce88 and ls88-3\nRUN pip install hmms==0.1 --no-cache-dir\n#   Cartopy needs to be installed after cython, for eps 88\nRUN pip install Cartopy==0.17.0 --no-cache-dir\nCOPY d8extension.bash /usr/local/sbin/d8extension.bash\nRUN /usr/local/sbin/d8extension.bash\nENV NLTK_DATA=\"${APP_DIR}/nltk_data\"\nCOPY connectors/text.bash /usr/local/sbin/connector-text.bash\nRUN /usr/local/sbin/connector-text.bash\n#  COPY connectors/eps88.bash /usr/local/sbin/connector-eps88.bash\n#  RUN /usr/local/sbin/connector-eps88.bash\nCOPY ipython_config.py ${IPYTHONDIR}/ipython_config.py\nCOPY jupyter_notebook_config.py ${APP_DIR}/venv/etc/jupyter/jupyter_notebook_config.py\n#   install gmaps notebook extension\nRUN jupyter nbextension enable --py --sys-prefix gmaps\n#   install QGrid notebook extension\nRUN jupyter nbextension enable --py --sys-prefix qgrid\n#   Install nbzip\nRUN jupyter serverextension enable --sys-prefix --py nbzip \\\n && jupyter nbextension install --sys-prefix --py nbzip \\\n && jupyter nbextension enable --sys-prefix --py nbzip\nEXPOSE 8888/tcp\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM buildpack-deps:bionic-scm\nENV APP_DIR=\"/srv/app\"\n#  Set up common env variables\nENV TZ=\"America/Los_Angeles\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN adduser --disabled-password --gecos \"Default Jupyter user\" jovyan\nRUN install -d -o jovyan -g jovyan ${APP_DIR}\nCOPY nodesource.list /etc/apt/sources.list.d/nodesource.list\nCOPY nodesource-key.asc /tmp/nodesource-key.asc\nRUN apt-key add /tmp/nodesource-key.asc\n#  TODO: remove me when apt can find our packages\n# RUN echo 91.189.91.26  security.ubuntu.com >> /etc/hosts\n# RUN echo 91.189.88.149  archive.ubuntu.com >> /etc/hosts\nRUN apt-get update -qq --yes \\\n && apt-get install python3.6 python3.6-venv python3.6-dev tar vim nodejs locales -qq --yes > /dev/null\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#  for nbconvert\nRUN apt-get install pandoc texlive-xetex texlive-fonts-recommended texlive-generic-recommended -qq --yes > /dev/null\nRUN apt-get install libspatialindex-dev libgeos-dev gfortran ffmpeg -qq --yes > /dev/null\n#  install R, packages, and RStudio dependencies\nRUN apt-get update -qq --yes \\\n && apt-get install libapparmor1 libgdal-dev libproj-dev psmisc sudo r-base r-base-dev r-cran-aer r-cran-backports r-cran-base64enc r-cran-bindrcpp r-cran-broom r-cran-crayon r-cran-crosstalk r-cran-curl r-cran-data.table r-cran-dbi r-cran-devtools r-cran-digest r-cran-e1071 r-cran-evaluate r-cran-forcats r-cran-ggplot2 r-cran-glue r-cran-haven r-cran-highr r-cran-hms r-cran-htmlwidgets r-cran-httpuv r-cran-httr r-cran-lubridate r-cran-mapproj r-cran-maptools r-cran-markdown r-cran-matrix r-cran-matrixstats r-cran-memoise r-cran-nlme r-cran-openssl r-cran-pbdzmq r-cran-pillar r-cran-png r-cran-praise r-cran-proto r-cran-raster r-cran-rcolorbrewer r-cran-rcpp r-cran-rcurl r-cran-readr r-cran-readxl r-cran-rematch r-cran-repr r-cran-reshape r-cran-rjson r-cran-rlang r-cran-rpart r-cran-rprojroot r-cran-shiny r-cran-sp r-cran-spatstat r-cran-spdep r-cran-stringr r-cran-stringi r-cran-testthat r-cran-tibble r-cran-tidyr r-cran-utf8 r-cran-uuid r-cran-viridis r-cran-withr r-cran-xml2 r-cran-yaml lsb-release -qq --yes > /dev/null\n#  Install some R libraries that aren't in the debs\nCOPY install.R /tmp/install.R\n#  CircleCI stops printing output at 40k chars.\n#  We send stdout to a log file, and tail it a bit\n#  FIXME: Find something less sucky\n#  another hubploy #1\nRUN Rscript /tmp/install.R > /tmp/r-custom-packages.log 2>&1 \\\n && true || (echo FAIL ;tail /tmp/r-custom-packages.log ;false )\nRUN tail /tmp/r-custom-packages.log\nRUN rm /tmp/r-custom-packages.log\nENV RSTUDIO_URL=\"https://download2.rstudio.org/rstudio-server-1.1.453-amd64.deb\"\nENV RSTUDIO_CHECKSUM=\"3c546fa9067f48ed1a342f810fca8be6\"\n#  install rstudio\nRUN curl --silent --location --fail ${RSTUDIO_URL} > /tmp/rstudio.deb \\\n && echo \"${RSTUDIO_CHECKSUM} /tmp/rstudio.deb\" | md5sum -c - \\\n && dpkg -i /tmp/rstudio.deb \\\n && rm /tmp/rstudio.deb\nENV PATH=\"${APP_DIR}/venv/bin:$PATH:/usr/lib/rstudio-server/bin\"\n#  Set this to be on container storage, rather than under $HOME\nENV IPYTHONDIR=\"${APP_DIR}/venv/etc/ipython\"\nWORKDIR /home/jovyan\nUSER jovyan\nRUN python3.6 -m venv ${APP_DIR}/venv\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n#  Install JupyterLab extensions\nRUN jupyter labextension install @jupyterlab/hub-extension @jupyter-widgets/jupyterlab-manager jupyter-matplotlib @jupyterlab/plotly-extension @jupyterlab/geojson-extension\n#  Install IR kernelspec\nRUN Rscript -e \"IRkernel::installspec(user = FALSE, prefix='${APP_DIR}/venv')\"\n#  hmms needs to be installed after cython, for ce88 and ls88-3\nRUN pip install hmms==0.1 --no-cache-dir\n#  Cartopy needs to be installed after cython, for eps 88\nRUN pip install Cartopy==0.17.0 --no-cache-dir\nCOPY d8extension.bash /usr/local/sbin/d8extension.bash\nRUN /usr/local/sbin/d8extension.bash\nENV NLTK_DATA=\"${APP_DIR}/nltk_data\"\nCOPY connectors/text.bash /usr/local/sbin/connector-text.bash\nRUN /usr/local/sbin/connector-text.bash\n# COPY connectors/eps88.bash /usr/local/sbin/connector-eps88.bash\n# RUN /usr/local/sbin/connector-eps88.bash\nADD ipython_config.py ${IPYTHONDIR}/ipython_config.py\nADD jupyter_notebook_config.py ${APP_DIR}/venv/etc/jupyter/jupyter_notebook_config.py\n#  install gmaps notebook extension\nRUN jupyter nbextension enable --py --sys-prefix gmaps\n#  install QGrid notebook extension\nRUN jupyter nbextension enable --py --sys-prefix qgrid\n#  Install nbzip\nRUN jupyter serverextension enable --sys-prefix --py nbzip \\\n && jupyter nbextension install --sys-prefix --py nbzip \\\n && jupyter nbextension enable --sys-prefix --py nbzip\nEXPOSE 8888/tcp\n","injectedSmells":[],"originalDockerfileHash":"775b877b7576a2c0427607919cdf51ae","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM buildpack-deps:bionic-scm\nENV APP_DIR=\"/srv/app\"\n#   Set up common env variables\nENV TZ=\"America/Los_Angeles\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN adduser --disabled-password --gecos \"Default Jupyter user\" jovyan\nRUN install -d -o jovyan -g jovyan ${APP_DIR}\nCOPY nodesource.list /etc/apt/sources.list.d/nodesource.list\nCOPY nodesource-key.asc /tmp/nodesource-key.asc\nRUN apt-key add /tmp/nodesource-key.asc\n#   TODO: remove me when apt can find our packages\n#  RUN echo 91.189.91.26  security.ubuntu.com >> /etc/hosts\n#  RUN echo 91.189.88.149  archive.ubuntu.com >> /etc/hosts\nRUN apt-get update -qq --yes \\\n && apt-get install python3.6 python3.6-venv python3.6-dev tar vim nodejs locales -qq --yes > /dev/null\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   for nbconvert\nRUN apt-get install pandoc texlive-xetex texlive-fonts-recommended texlive-generic-recommended -qq --yes > /dev/null\nRUN apt-get install libspatialindex-dev libgeos-dev gfortran ffmpeg -qq --yes > /dev/null\n#   install R, packages, and RStudio dependencies\nRUN apt-get update -qq --yes \\\n && apt-get install libapparmor1 libgdal-dev libproj-dev psmisc sudo r-base r-base-dev r-cran-aer r-cran-backports r-cran-base64enc r-cran-bindrcpp r-cran-broom r-cran-crayon r-cran-crosstalk r-cran-curl r-cran-data.table r-cran-dbi r-cran-devtools r-cran-digest r-cran-e1071 r-cran-evaluate r-cran-forcats r-cran-ggplot2 r-cran-glue r-cran-haven r-cran-highr r-cran-hms r-cran-htmlwidgets r-cran-httpuv r-cran-httr r-cran-lubridate r-cran-mapproj r-cran-maptools r-cran-markdown r-cran-matrix r-cran-matrixstats r-cran-memoise r-cran-nlme r-cran-openssl r-cran-pbdzmq r-cran-pillar r-cran-png r-cran-praise r-cran-proto r-cran-raster r-cran-rcolorbrewer r-cran-rcpp r-cran-rcurl r-cran-readr r-cran-readxl r-cran-rematch r-cran-repr r-cran-reshape r-cran-rjson r-cran-rlang r-cran-rpart r-cran-rprojroot r-cran-shiny r-cran-sp r-cran-spatstat r-cran-spdep r-cran-stringr r-cran-stringi r-cran-testthat r-cran-tibble r-cran-tidyr r-cran-utf8 r-cran-uuid r-cran-viridis r-cran-withr r-cran-xml2 r-cran-yaml lsb-release -qq --yes > /dev/null\n#   Install some R libraries that aren't in the debs\nCOPY install.R /tmp/install.R\n#   CircleCI stops printing output at 40k chars.\n#   We send stdout to a log file, and tail it a bit\n#   FIXME: Find something less sucky\n#   another hubploy #1\nRUN Rscript /tmp/install.R > /tmp/r-custom-packages.log 2>&1 \\\n && true || (echo FAIL ;tail /tmp/r-custom-packages.log ;false )\nRUN tail /tmp/r-custom-packages.log\nRUN rm /tmp/r-custom-packages.log\nENV RSTUDIO_URL=\"https://download2.rstudio.org/rstudio-server-1.1.453-amd64.deb\"\nENV RSTUDIO_CHECKSUM=\"3c546fa9067f48ed1a342f810fca8be6\"\n#   install rstudio\nRUN curl --silent --location --fail ${RSTUDIO_URL} > /tmp/rstudio.deb \\\n && echo \"${RSTUDIO_CHECKSUM} /tmp/rstudio.deb\" | md5sum -c - \\\n && dpkg -i /tmp/rstudio.deb \\\n && rm /tmp/rstudio.deb\nENV PATH=\"${APP_DIR}/venv/bin:$PATH:/usr/lib/rstudio-server/bin\"\n#   Set this to be on container storage, rather than under $HOME\nENV IPYTHONDIR=\"${APP_DIR}/venv/etc/ipython\"\nWORKDIR /home/jovyan\nUSER jovyan\nRUN python3.6 -m venv ${APP_DIR}/venv\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n#   Install JupyterLab extensions\nRUN jupyter labextension install @jupyterlab/hub-extension @jupyter-widgets/jupyterlab-manager jupyter-matplotlib @jupyterlab/plotly-extension @jupyterlab/geojson-extension\n#   Install IR kernelspec\nRUN Rscript -e \"IRkernel::installspec(user = FALSE, prefix='${APP_DIR}/venv')\"\n#   hmms needs to be installed after cython, for ce88 and ls88-3\nRUN pip install hmms==0.1 --no-cache-dir\n#   Cartopy needs to be installed after cython, for eps 88\nRUN pip install Cartopy==0.17.0 --no-cache-dir\nCOPY d8extension.bash /usr/local/sbin/d8extension.bash\nRUN /usr/local/sbin/d8extension.bash\nENV NLTK_DATA=\"${APP_DIR}/nltk_data\"\nCOPY connectors/text.bash /usr/local/sbin/connector-text.bash\nRUN /usr/local/sbin/connector-text.bash\n#  COPY connectors/eps88.bash /usr/local/sbin/connector-eps88.bash\n#  RUN /usr/local/sbin/connector-eps88.bash\nADD ipython_config.py ${IPYTHONDIR}/ipython_config.py\nADD jupyter_notebook_config.py ${APP_DIR}/venv/etc/jupyter/jupyter_notebook_config.py\n#   install gmaps notebook extension\nRUN jupyter nbextension enable --py --sys-prefix gmaps\n#   install QGrid notebook extension\nRUN jupyter nbextension enable --py --sys-prefix qgrid\n#   Install nbzip\nRUN jupyter serverextension enable --sys-prefix --py nbzip \\\n && jupyter nbextension install --sys-prefix --py nbzip \\\n && jupyter nbextension enable --sys-prefix --py nbzip\nEXPOSE 8888/tcp\n","originalDockerfileUglifiedHash":"730c9c092184ccdae0d44e23f1a77036","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/81bbf6aa9db9eae75a13d4b6072759c2058ebdf5.dockerfile"}