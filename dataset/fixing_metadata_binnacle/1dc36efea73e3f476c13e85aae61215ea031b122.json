{"seed":2146795572,"processedDockerfileHash":"ff8938498a871603afecf3e1be3967de","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"#  ###########################################################\n#   Dockerfile - Janus Gateway on Debian Jessie\n#   https://github.com/krull/docker-janus\n#  ###########################################################\n#   set base image debian jessie\nFROM debian:jessie\n#   file maintainer author\nMAINTAINER brendan jocson <brendan@jocson.eu>\n#   docker build environments\nENV CONFIG_PATH=\"/opt/janus/etc/janus\"\n#   docker build arguments\nARG BUILD_SRC=\"/usr/local/src\"\nARG JANUS_WITH_POSTPROCESSING=\"1\"\nARG JANUS_WITH_BORINGSSL=\"0\"\nARG JANUS_WITH_DOCS=\"0\"\nARG JANUS_WITH_REST=\"1\"\nARG JANUS_WITH_DATACHANNELS=\"1\"\nARG JANUS_WITH_WEBSOCKETS=\"1\"\nARG JANUS_WITH_MQTT=\"0\"\nARG JANUS_WITH_PFUNIX=\"1\"\nARG JANUS_WITH_RABBITMQ=\"0\"\n#   https://goo.gl/dmbvc1 \nARG JANUS_WITH_FREESWITCH_PATCH=\"0\"\nARG JANUS_CONFIG_DEPS=\" --prefix=/opt/janus  \"\nARG JANUS_CONFIG_OPTIONS=\" \"\nARG JANUS_BUILD_DEPS_DEV=\" libcurl4-openssl-dev  libjansson-dev  libnice-dev  libssl-dev  libsofia-sip-ua-dev  libglib2.0-dev  libopus-dev  libogg-dev  pkg-config  \"\nARG JANUS_BUILD_DEPS_EXT=\" libavutil-dev  libavcodec-dev  libavformat-dev  gengetopt  libtool  automake  git-core  build-essential  cmake  ca-certificates  curl  \"\nRUN export JANUS_WITH_POSTPROCESSING=\"${JANUS_WITH_POSTPROCESSING}\" \\\n && export JANUS_WITH_BORINGSSL=\"${JANUS_WITH_BORINGSSL}\" \\\n && export JANUS_WITH_DOCS=\"${JANUS_WITH_DOCS}\" \\\n && export JANUS_WITH_REST=\"${JANUS_WITH_REST}\" \\\n && export JANUS_WITH_DATACHANNELS=\"${JANUS_WITH_DATACHANNELS}\" \\\n && export JANUS_WITH_WEBSOCKETS=\"${JANUS_WITH_WEBSOCKETS}\" \\\n && export JANUS_WITH_MQTT=\"${JANUS_WITH_MQTT}\" \\\n && export JANUS_WITH_PFUNIX=\"${JANUS_WITH_PFUNIX}\" \\\n && export JANUS_WITH_RABBITMQ=\"${JANUS_WITH_RABBITMQ}\" \\\n && export JANUS_WITH_FREESWITCH_PATCH=\"${JANUS_WITH_FREESWITCH_PATCH}\" \\\n && export JANUS_BUILD_DEPS_DEV=\"${JANUS_BUILD_DEPS_DEV}\" \\\n && export JANUS_CONFIG_OPTIONS=\"${JANUS_CONFIG_OPTIONS}\" \\\n && if [ $JANUS_WITH_POSTPROCESSING = \"1\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --enable-post-processing\" ; fi \\\n && if [ $JANUS_WITH_BORINGSSL = \"1\" ] ; then export JANUS_BUILD_DEPS_DEV=\"$JANUS_BUILD_DEPS_DEV golang-go\" \\\n && export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --enable-boringssl --enable-dtls-settimeout\" ; fi \\\n && if [ $JANUS_WITH_DOCS = \"1\" ] ; then export JANUS_BUILD_DEPS_DEV=\"$JANUS_BUILD_DEPS_DEV doxygen graphviz\" \\\n && export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --enable-docs\" ; fi \\\n && if [ $JANUS_WITH_REST = \"1\" ] ; then export JANUS_BUILD_DEPS_DEV=\"$JANUS_BUILD_DEPS_DEV libmicrohttpd-dev\" ; else export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-rest\" ; fi \\\n && if [ $JANUS_WITH_DATACHANNELS = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-data-channels\" ; fi \\\n && if [ $JANUS_WITH_WEBSOCKETS = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-websockets\" ; fi \\\n && if [ $JANUS_WITH_MQTT = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-mqtt\" ; fi \\\n && if [ $JANUS_WITH_PFUNIX = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-unix-sockets\" ; fi \\\n && if [ $JANUS_WITH_RABBITMQ = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-rabbitmq\" ; fi \\\n && /usr/sbin/groupadd -r janus \\\n && /usr/sbin/useradd -r -g janus janus \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install $JANUS_BUILD_DEPS_DEV ${JANUS_BUILD_DEPS_EXT} \\\n && curl -fSL https://github.com/cisco/libsrtp/archive/v2.0.0.tar.gz -o ${BUILD_SRC}/v2.0.0.tar.gz \\\n && tar xzf ${BUILD_SRC}/v2.0.0.tar.gz -C ${BUILD_SRC} \\\n && cd ${BUILD_SRC}/libsrtp-2.0.0 \\\n && ./configure --prefix=/usr --enable-openssl \\\n && make shared_library \\\n && make install \\\n && if [ $JANUS_WITH_BORINGSSL = \"1\" ] ; then git clone https://boringssl.googlesource.com/boringssl ${BUILD_SRC}/boringssl \\\n && cd ${BUILD_SRC}/boringssl \\\n && sed -i s/\" -Werror\"//g CMakeLists.txt \\\n && mkdir -p ${BUILD_SRC}/boringssl/build \\\n && cd ${BUILD_SRC}/boringssl/build \\\n && cmake -DCMAKE_CXX_FLAGS=\"-lrt\" .. \\\n && make \\\n && mkdir -p /opt/boringssl \\\n && cp -R ${BUILD_SRC}/boringssl/include /opt/boringssl/ \\\n && mkdir -p /opt/boringssl/lib \\\n && cp ${BUILD_SRC}/boringssl/build/ssl/libssl.a /opt/boringssl/lib/ \\\n && cp ${BUILD_SRC}/boringssl/build/crypto/libcrypto.a /opt/boringssl/lib/ ; fi \\\n && if [ $JANUS_WITH_DATACHANNELS = \"1\" ] ; then git clone https://github.com/sctplab/usrsctp ${BUILD_SRC}/usrsctp \\\n && cd ${BUILD_SRC}/usrsctp \\\n && ./bootstrap \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install ; fi \\\n && if [ $JANUS_WITH_WEBSOCKETS = \"1\" ] ; then git clone https://github.com/warmcat/libwebsockets.git ${BUILD_SRC}/libwebsockets \\\n && cd ${BUILD_SRC}/libwebsockets \\\n && mkdir ${BUILD_SRC}/libwebsockets/build \\\n && cd ${BUILD_SRC}/libwebsockets/build \\\n && cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS=\"-fpic\" .. \\\n && make \\\n && make install ; fi \\\n && if [ $JANUS_WITH_MQTT = \"1\" ] ; then git clone https://github.com/eclipse/paho.mqtt.c.git ${BUILD_SRC}/paho.mqtt.c \\\n && cd ${BUILD_SRC}/paho.mqtt.c \\\n && make \\\n && make install ; fi \\\n && if [ $JANUS_WITH_RABBITMQ = \"1\" ] ; then git clone https://github.com/alanxz/rabbitmq-c ${BUILD_SRC}/rabbitmq-c \\\n && cd ${BUILD_SRC}/rabbitmq-c \\\n && git submodule init \\\n && git submodule update \\\n && autoreconf -i \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install ; fi \\\n && git clone https://github.com/meetecho/janus-gateway.git ${BUILD_SRC}/janus-gateway \\\n && if [ $JANUS_WITH_FREESWITCH_PATCH = \"1\" ] ; then curl -fSL https://raw.githubusercontent.com/krull/docker-misc/master/init_fs/tmp/janus_sip.c.patch -o ${BUILD_SRC}/janus-gateway/plugins/janus_sip.c.patch \\\n && cd ${BUILD_SRC}/janus-gateway/plugins \\\n && patch < janus_sip.c.patch; fi \\\n && cd ${BUILD_SRC}/janus-gateway \\\n && ./autogen.sh \\\n && ./configure ${JANUS_CONFIG_DEPS} $JANUS_CONFIG_OPTIONS \\\n && make \\\n && make install \\\n && chown -R janus:janus /opt/janus \\\n && cd ${BUILD_SRC} \\\n && if [ $JANUS_WITH_BORINGSSL = \"1\" ] ; then rm -rf boringssl ; fi \\\n && if [ $JANUS_WITH_DATACHANNELS = \"1\" ] ; then rm -rf usrsctp ; fi \\\n && if [ $JANUS_WITH_WEBSOCKETS = \"1\" ] ; then rm -rf libwebsockets ; fi \\\n && if [ $JANUS_WITH_MQTT = \"1\" ] ; then rm -rf paho.mqtt.c ; fi \\\n && if [ $JANUS_WITH_RABBITMQ = \"1\" ] ; then rm -rf rabbitmq-c ; fi \\\n && rm -rf v2.0.0.tar.gz libsrtp-2.0.0 janus-gateway \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y --auto-remove purge ${JANUS_BUILD_DEPS_EXT} \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y clean \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y autoclean \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y autoremove \\\n && rm -rf /usr/share/locale/* \\\n && rm -rf /var/cache/debconf/*-old \\\n && rm -rf /usr/share/doc/* \\\n && rm -rf /var/lib/apt/*\nUSER janus\nCMD [\"/opt/janus/bin/janus\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###########################################################\n#  Dockerfile - Janus Gateway on Debian Jessie\n#  https://github.com/krull/docker-janus\n# ###########################################################\n#  set base image debian jessie\nFROM debian:jessie\n#  file maintainer author\nMAINTAINER brendan jocson <brendan@jocson.eu>\n#  docker build environments\nENV CONFIG_PATH=\"/opt/janus/etc/janus\"\n#  docker build arguments\nARG BUILD_SRC=\"/usr/local/src\"\nARG JANUS_WITH_POSTPROCESSING=\"1\"\nARG JANUS_WITH_BORINGSSL=\"0\"\nARG JANUS_WITH_DOCS=\"0\"\nARG JANUS_WITH_REST=\"1\"\nARG JANUS_WITH_DATACHANNELS=\"1\"\nARG JANUS_WITH_WEBSOCKETS=\"1\"\nARG JANUS_WITH_MQTT=\"0\"\nARG JANUS_WITH_PFUNIX=\"1\"\nARG JANUS_WITH_RABBITMQ=\"0\"\n#  https://goo.gl/dmbvc1 \nARG JANUS_WITH_FREESWITCH_PATCH=\"0\"\nARG JANUS_CONFIG_DEPS=\" --prefix=/opt/janus  \"\nARG JANUS_CONFIG_OPTIONS=\" \"\nARG JANUS_BUILD_DEPS_DEV=\" libcurl4-openssl-dev  libjansson-dev  libnice-dev  libssl-dev  libsofia-sip-ua-dev  libglib2.0-dev  libopus-dev  libogg-dev  pkg-config  \"\nARG JANUS_BUILD_DEPS_EXT=\" libavutil-dev  libavcodec-dev  libavformat-dev  gengetopt  libtool  automake  git-core  build-essential  cmake  ca-certificates  curl  \"\nRUN export JANUS_WITH_POSTPROCESSING=\"${JANUS_WITH_POSTPROCESSING}\" \\\n && export JANUS_WITH_BORINGSSL=\"${JANUS_WITH_BORINGSSL}\" \\\n && export JANUS_WITH_DOCS=\"${JANUS_WITH_DOCS}\" \\\n && export JANUS_WITH_REST=\"${JANUS_WITH_REST}\" \\\n && export JANUS_WITH_DATACHANNELS=\"${JANUS_WITH_DATACHANNELS}\" \\\n && export JANUS_WITH_WEBSOCKETS=\"${JANUS_WITH_WEBSOCKETS}\" \\\n && export JANUS_WITH_MQTT=\"${JANUS_WITH_MQTT}\" \\\n && export JANUS_WITH_PFUNIX=\"${JANUS_WITH_PFUNIX}\" \\\n && export JANUS_WITH_RABBITMQ=\"${JANUS_WITH_RABBITMQ}\" \\\n && export JANUS_WITH_FREESWITCH_PATCH=\"${JANUS_WITH_FREESWITCH_PATCH}\" \\\n && export JANUS_BUILD_DEPS_DEV=\"${JANUS_BUILD_DEPS_DEV}\" \\\n && export JANUS_CONFIG_OPTIONS=\"${JANUS_CONFIG_OPTIONS}\" \\\n && if [ $JANUS_WITH_POSTPROCESSING = \"1\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --enable-post-processing\" ; fi \\\n && if [ $JANUS_WITH_BORINGSSL = \"1\" ] ; then export JANUS_BUILD_DEPS_DEV=\"$JANUS_BUILD_DEPS_DEV golang-go\" \\\n && export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --enable-boringssl --enable-dtls-settimeout\" ; fi \\\n && if [ $JANUS_WITH_DOCS = \"1\" ] ; then export JANUS_BUILD_DEPS_DEV=\"$JANUS_BUILD_DEPS_DEV doxygen graphviz\" \\\n && export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --enable-docs\" ; fi \\\n && if [ $JANUS_WITH_REST = \"1\" ] ; then export JANUS_BUILD_DEPS_DEV=\"$JANUS_BUILD_DEPS_DEV libmicrohttpd-dev\" ; else export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-rest\" ; fi \\\n && if [ $JANUS_WITH_DATACHANNELS = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-data-channels\" ; fi \\\n && if [ $JANUS_WITH_WEBSOCKETS = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-websockets\" ; fi \\\n && if [ $JANUS_WITH_MQTT = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-mqtt\" ; fi \\\n && if [ $JANUS_WITH_PFUNIX = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-unix-sockets\" ; fi \\\n && if [ $JANUS_WITH_RABBITMQ = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-rabbitmq\" ; fi \\\n && /usr/sbin/groupadd -r janus \\\n && /usr/sbin/useradd -r -g janus janus \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install $JANUS_BUILD_DEPS_DEV ${JANUS_BUILD_DEPS_EXT} \\\n && curl -fSL https://github.com/cisco/libsrtp/archive/v2.0.0.tar.gz -o ${BUILD_SRC}/v2.0.0.tar.gz \\\n && tar xzf ${BUILD_SRC}/v2.0.0.tar.gz -C ${BUILD_SRC} \\\n && cd ${BUILD_SRC}/libsrtp-2.0.0 \\\n && ./configure --prefix=/usr --enable-openssl \\\n && make shared_library \\\n && make install \\\n && if [ $JANUS_WITH_BORINGSSL = \"1\" ] ; then git clone https://boringssl.googlesource.com/boringssl ${BUILD_SRC}/boringssl \\\n && cd ${BUILD_SRC}/boringssl \\\n && sed -i s/\" -Werror\"//g CMakeLists.txt \\\n && mkdir -p ${BUILD_SRC}/boringssl/build \\\n && cd ${BUILD_SRC}/boringssl/build \\\n && cmake -DCMAKE_CXX_FLAGS=\"-lrt\" .. \\\n && make \\\n && mkdir -p /opt/boringssl \\\n && cp -R ${BUILD_SRC}/boringssl/include /opt/boringssl/ \\\n && mkdir -p /opt/boringssl/lib \\\n && cp ${BUILD_SRC}/boringssl/build/ssl/libssl.a /opt/boringssl/lib/ \\\n && cp ${BUILD_SRC}/boringssl/build/crypto/libcrypto.a /opt/boringssl/lib/ ; fi \\\n && if [ $JANUS_WITH_DATACHANNELS = \"1\" ] ; then git clone https://github.com/sctplab/usrsctp ${BUILD_SRC}/usrsctp \\\n && cd ${BUILD_SRC}/usrsctp \\\n && ./bootstrap \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install ; fi \\\n && if [ $JANUS_WITH_WEBSOCKETS = \"1\" ] ; then git clone https://github.com/warmcat/libwebsockets.git ${BUILD_SRC}/libwebsockets \\\n && cd ${BUILD_SRC}/libwebsockets \\\n && mkdir ${BUILD_SRC}/libwebsockets/build \\\n && cd ${BUILD_SRC}/libwebsockets/build \\\n && cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS=\"-fpic\" .. \\\n && make \\\n && make install ; fi \\\n && if [ $JANUS_WITH_MQTT = \"1\" ] ; then git clone https://github.com/eclipse/paho.mqtt.c.git ${BUILD_SRC}/paho.mqtt.c \\\n && cd ${BUILD_SRC}/paho.mqtt.c \\\n && make \\\n && make install ; fi \\\n && if [ $JANUS_WITH_RABBITMQ = \"1\" ] ; then git clone https://github.com/alanxz/rabbitmq-c ${BUILD_SRC}/rabbitmq-c \\\n && cd ${BUILD_SRC}/rabbitmq-c \\\n && git submodule init \\\n && git submodule update \\\n && autoreconf -i \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install ; fi \\\n && git clone https://github.com/meetecho/janus-gateway.git ${BUILD_SRC}/janus-gateway \\\n && if [ $JANUS_WITH_FREESWITCH_PATCH = \"1\" ] ; then curl -fSL https://raw.githubusercontent.com/krull/docker-misc/master/init_fs/tmp/janus_sip.c.patch -o ${BUILD_SRC}/janus-gateway/plugins/janus_sip.c.patch \\\n && cd ${BUILD_SRC}/janus-gateway/plugins \\\n && patch < janus_sip.c.patch; fi \\\n && cd ${BUILD_SRC}/janus-gateway \\\n && ./autogen.sh \\\n && ./configure ${JANUS_CONFIG_DEPS} $JANUS_CONFIG_OPTIONS \\\n && make \\\n && make install \\\n && chown -R janus:janus /opt/janus \\\n && cd ${BUILD_SRC} \\\n && if [ $JANUS_WITH_BORINGSSL = \"1\" ] ; then rm -rf boringssl ; fi \\\n && if [ $JANUS_WITH_DATACHANNELS = \"1\" ] ; then rm -rf usrsctp ; fi \\\n && if [ $JANUS_WITH_WEBSOCKETS = \"1\" ] ; then rm -rf libwebsockets ; fi \\\n && if [ $JANUS_WITH_MQTT = \"1\" ] ; then rm -rf paho.mqtt.c ; fi \\\n && if [ $JANUS_WITH_RABBITMQ = \"1\" ] ; then rm -rf rabbitmq-c ; fi \\\n && rm -rf v2.0.0.tar.gz libsrtp-2.0.0 janus-gateway \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y --auto-remove purge ${JANUS_BUILD_DEPS_EXT} \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y clean \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y autoclean \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y autoremove \\\n && rm -rf /usr/share/locale/* \\\n && rm -rf /var/cache/debconf/*-old \\\n && rm -rf /usr/share/doc/* \\\n && rm -rf /var/lib/apt/*\nUSER janus\nCMD [\"/opt/janus/bin/janus\"]\n","injectedSmells":[],"originalDockerfileHash":"16cd3f45f0ea62ece097ef217ff58034","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###########################################################\n#   Dockerfile - Janus Gateway on Debian Jessie\n#   https://github.com/krull/docker-janus\n#  ###########################################################\n#   set base image debian jessie\nFROM debian:jessie\n#   file maintainer author\nMAINTAINER brendan jocson <brendan@jocson.eu>\n#   docker build environments\nENV CONFIG_PATH=\"/opt/janus/etc/janus\"\n#   docker build arguments\nARG BUILD_SRC=\"/usr/local/src\"\nARG JANUS_WITH_POSTPROCESSING=\"1\"\nARG JANUS_WITH_BORINGSSL=\"0\"\nARG JANUS_WITH_DOCS=\"0\"\nARG JANUS_WITH_REST=\"1\"\nARG JANUS_WITH_DATACHANNELS=\"1\"\nARG JANUS_WITH_WEBSOCKETS=\"1\"\nARG JANUS_WITH_MQTT=\"0\"\nARG JANUS_WITH_PFUNIX=\"1\"\nARG JANUS_WITH_RABBITMQ=\"0\"\n#   https://goo.gl/dmbvc1 \nARG JANUS_WITH_FREESWITCH_PATCH=\"0\"\nARG JANUS_CONFIG_DEPS=\" --prefix=/opt/janus  \"\nARG JANUS_CONFIG_OPTIONS=\" \"\nARG JANUS_BUILD_DEPS_DEV=\" libcurl4-openssl-dev  libjansson-dev  libnice-dev  libssl-dev  libsofia-sip-ua-dev  libglib2.0-dev  libopus-dev  libogg-dev  pkg-config  \"\nARG JANUS_BUILD_DEPS_EXT=\" libavutil-dev  libavcodec-dev  libavformat-dev  gengetopt  libtool  automake  git-core  build-essential  cmake  ca-certificates  curl  \"\nRUN export JANUS_WITH_POSTPROCESSING=\"${JANUS_WITH_POSTPROCESSING}\" \\\n && export JANUS_WITH_BORINGSSL=\"${JANUS_WITH_BORINGSSL}\" \\\n && export JANUS_WITH_DOCS=\"${JANUS_WITH_DOCS}\" \\\n && export JANUS_WITH_REST=\"${JANUS_WITH_REST}\" \\\n && export JANUS_WITH_DATACHANNELS=\"${JANUS_WITH_DATACHANNELS}\" \\\n && export JANUS_WITH_WEBSOCKETS=\"${JANUS_WITH_WEBSOCKETS}\" \\\n && export JANUS_WITH_MQTT=\"${JANUS_WITH_MQTT}\" \\\n && export JANUS_WITH_PFUNIX=\"${JANUS_WITH_PFUNIX}\" \\\n && export JANUS_WITH_RABBITMQ=\"${JANUS_WITH_RABBITMQ}\" \\\n && export JANUS_WITH_FREESWITCH_PATCH=\"${JANUS_WITH_FREESWITCH_PATCH}\" \\\n && export JANUS_BUILD_DEPS_DEV=\"${JANUS_BUILD_DEPS_DEV}\" \\\n && export JANUS_CONFIG_OPTIONS=\"${JANUS_CONFIG_OPTIONS}\" \\\n && if [ $JANUS_WITH_POSTPROCESSING = \"1\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --enable-post-processing\" ; fi \\\n && if [ $JANUS_WITH_BORINGSSL = \"1\" ] ; then export JANUS_BUILD_DEPS_DEV=\"$JANUS_BUILD_DEPS_DEV golang-go\" \\\n && export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --enable-boringssl --enable-dtls-settimeout\" ; fi \\\n && if [ $JANUS_WITH_DOCS = \"1\" ] ; then export JANUS_BUILD_DEPS_DEV=\"$JANUS_BUILD_DEPS_DEV doxygen graphviz\" \\\n && export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --enable-docs\" ; fi \\\n && if [ $JANUS_WITH_REST = \"1\" ] ; then export JANUS_BUILD_DEPS_DEV=\"$JANUS_BUILD_DEPS_DEV libmicrohttpd-dev\" ; else export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-rest\" ; fi \\\n && if [ $JANUS_WITH_DATACHANNELS = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-data-channels\" ; fi \\\n && if [ $JANUS_WITH_WEBSOCKETS = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-websockets\" ; fi \\\n && if [ $JANUS_WITH_MQTT = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-mqtt\" ; fi \\\n && if [ $JANUS_WITH_PFUNIX = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-unix-sockets\" ; fi \\\n && if [ $JANUS_WITH_RABBITMQ = \"0\" ] ; then export JANUS_CONFIG_OPTIONS=\"$JANUS_CONFIG_OPTIONS --disable-rabbitmq\" ; fi \\\n && /usr/sbin/groupadd -r janus \\\n && /usr/sbin/useradd -r -g janus janus \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install $JANUS_BUILD_DEPS_DEV ${JANUS_BUILD_DEPS_EXT} \\\n && curl -fSL https://github.com/cisco/libsrtp/archive/v2.0.0.tar.gz -o ${BUILD_SRC}/v2.0.0.tar.gz \\\n && tar xzf ${BUILD_SRC}/v2.0.0.tar.gz -C ${BUILD_SRC} \\\n && cd ${BUILD_SRC}/libsrtp-2.0.0 \\\n && ./configure --prefix=/usr --enable-openssl \\\n && make shared_library \\\n && make install \\\n && if [ $JANUS_WITH_BORINGSSL = \"1\" ] ; then git clone https://boringssl.googlesource.com/boringssl ${BUILD_SRC}/boringssl \\\n && cd ${BUILD_SRC}/boringssl \\\n && sed -i s/\" -Werror\"//g CMakeLists.txt \\\n && mkdir -p ${BUILD_SRC}/boringssl/build \\\n && cd ${BUILD_SRC}/boringssl/build \\\n && cmake -DCMAKE_CXX_FLAGS=\"-lrt\" .. \\\n && make \\\n && mkdir -p /opt/boringssl \\\n && cp -R ${BUILD_SRC}/boringssl/include /opt/boringssl/ \\\n && mkdir -p /opt/boringssl/lib \\\n && cp ${BUILD_SRC}/boringssl/build/ssl/libssl.a /opt/boringssl/lib/ \\\n && cp ${BUILD_SRC}/boringssl/build/crypto/libcrypto.a /opt/boringssl/lib/ ; fi \\\n && if [ $JANUS_WITH_DATACHANNELS = \"1\" ] ; then git clone https://github.com/sctplab/usrsctp ${BUILD_SRC}/usrsctp \\\n && cd ${BUILD_SRC}/usrsctp \\\n && ./bootstrap \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install ; fi \\\n && if [ $JANUS_WITH_WEBSOCKETS = \"1\" ] ; then git clone https://github.com/warmcat/libwebsockets.git ${BUILD_SRC}/libwebsockets \\\n && cd ${BUILD_SRC}/libwebsockets \\\n && mkdir ${BUILD_SRC}/libwebsockets/build \\\n && cd ${BUILD_SRC}/libwebsockets/build \\\n && cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS=\"-fpic\" .. \\\n && make \\\n && make install ; fi \\\n && if [ $JANUS_WITH_MQTT = \"1\" ] ; then git clone https://github.com/eclipse/paho.mqtt.c.git ${BUILD_SRC}/paho.mqtt.c \\\n && cd ${BUILD_SRC}/paho.mqtt.c \\\n && make \\\n && make install ; fi \\\n && if [ $JANUS_WITH_RABBITMQ = \"1\" ] ; then git clone https://github.com/alanxz/rabbitmq-c ${BUILD_SRC}/rabbitmq-c \\\n && cd ${BUILD_SRC}/rabbitmq-c \\\n && git submodule init \\\n && git submodule update \\\n && autoreconf -i \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install ; fi \\\n && git clone https://github.com/meetecho/janus-gateway.git ${BUILD_SRC}/janus-gateway \\\n && if [ $JANUS_WITH_FREESWITCH_PATCH = \"1\" ] ; then curl -fSL https://raw.githubusercontent.com/krull/docker-misc/master/init_fs/tmp/janus_sip.c.patch -o ${BUILD_SRC}/janus-gateway/plugins/janus_sip.c.patch \\\n && cd ${BUILD_SRC}/janus-gateway/plugins \\\n && patch < janus_sip.c.patch; fi \\\n && cd ${BUILD_SRC}/janus-gateway \\\n && ./autogen.sh \\\n && ./configure ${JANUS_CONFIG_DEPS} $JANUS_CONFIG_OPTIONS \\\n && make \\\n && make install \\\n && chown -R janus:janus /opt/janus \\\n && cd ${BUILD_SRC} \\\n && if [ $JANUS_WITH_BORINGSSL = \"1\" ] ; then rm -rf boringssl ; fi \\\n && if [ $JANUS_WITH_DATACHANNELS = \"1\" ] ; then rm -rf usrsctp ; fi \\\n && if [ $JANUS_WITH_WEBSOCKETS = \"1\" ] ; then rm -rf libwebsockets ; fi \\\n && if [ $JANUS_WITH_MQTT = \"1\" ] ; then rm -rf paho.mqtt.c ; fi \\\n && if [ $JANUS_WITH_RABBITMQ = \"1\" ] ; then rm -rf rabbitmq-c ; fi \\\n && rm -rf v2.0.0.tar.gz libsrtp-2.0.0 janus-gateway \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y --auto-remove purge ${JANUS_BUILD_DEPS_EXT} \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y clean \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y autoclean \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y autoremove \\\n && rm -rf /usr/share/locale/* \\\n && rm -rf /var/cache/debconf/*-old \\\n && rm -rf /usr/share/doc/* \\\n && rm -rf /var/lib/apt/*\nUSER janus\nCMD [\"/opt/janus/bin/janus\"]\n","originalDockerfileUglifiedHash":"0304209e0658474cbb399fdc0ab488c9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1dc36efea73e3f476c13e85aae61215ea031b122.dockerfile"}