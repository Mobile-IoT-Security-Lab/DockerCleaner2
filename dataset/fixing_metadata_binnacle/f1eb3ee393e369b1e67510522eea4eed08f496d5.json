{"seed":3384080623,"processedDockerfileHash":"c1cdd96443b9f23cc6602408140679c7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM unocha/debian-base-s6:9-slim\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    HDX_CKAN_WORKERS=\"4\" \\\n    INI_FILE=\"/etc/ckan/prod.ini\" \\\n    HDX_CACHE_DIR=\"/srv/cache\"\nCOPY . /srv/ckan/\nWORKDIR /srv/ckan\nRUN apt-get update -qq -y \\\n && apt-get install --no-install-recommends locales -qq -y \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && cp docker/locale /etc/default/locale \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales \\\n && update-locale LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n && mkdir -p /usr/share/man/man1 /usr/share/man/man2 /usr/share/man/man3 /usr/share/man/man4 /usr/share/man/man5 /usr/share/man/man6 /usr/share/man/man7 /usr/share/man/man8 /usr/share/man/man9 \\\n && apt-get install --no-install-recommends procps psmisc net-tools iputils-ping gettext-base nano libmagic1 git gpg build-essential libxml2-dev libxslt1-dev zlib1g-dev python-dev python-setuptools postgresql-client libpq-dev libyaml-dev python3-psycopg2 libffi-dev libssl-dev -qq -y \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install --no-install-recommends nodejs -qq -y \\\n && npm install less@4.1.3 -g \\\n && easy_install pip \\\n && pip install gevent==22.10.2 gunicorn==20.1.0 lxml==4.9.2 pip==23.1 setuptools==36.1 -q --upgrade \\\n && mkdir -p /var/log/ckan /srv/filestore /etc/services.d/ckan /etc/ckan \\\n && cp -a docker/prod.ini.tpl /etc/ckan \\\n && cp -a docker/run_ckan /etc/services.d/ckan/run \\\n && chown www-data:www-data -R /var/log/ckan /srv/filestore \\\n && curl -s -o /srv/hdxckantool.py https://raw.githubusercontent.com/OCHA-DAP/hdx-infra-tools/master/hdxckantool.py \\\n && chmod +x /srv/hdxckantool.py \\\n && ln -s /srv/hdxckantool.py /usr/sbin/hdxckantool \\\n && echo \"application/vnd.geo+json geojson\" >> /etc/mime.types \\\n && python setup.py develop \\\n && pip install -r requirements.txt \\\n && pip install newrelic==8.8.0 \\\n && hdxckantool plugins dev \\\n && newrelic-admin generate-config LICENSE_KEY /srv/newrelic.ini \\\n && chown -R www-data ckan/public/base/i18n \\\n && apt-get -qq -y remove build-essential gpg libffi-dev libpq-dev libssl-dev libxml2-dev libxslt1-dev libyaml-dev zlib1g-dev python-dev \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && rm -rf .git /root/.cache /root/.npm /usr/local/man /usr/share/doc /usr/share/man /var/lib/apt/lists/* /var/tmp/* /tmp/*\nVOLUME [\"/srv/filestore\", \"/srv/backup\", \"/var/log/ckan\"]\nEXPOSE 5000/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM unocha/debian-base-s6:9-slim\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    HDX_CKAN_WORKERS=\"4\" \\\n    INI_FILE=\"/etc/ckan/prod.ini\" \\\n    HDX_CACHE_DIR=\"/srv/cache\"\nCOPY . /srv/ckan/\nWORKDIR /srv/ckan\nRUN apt-get update -qq -y \\\n && apt-get install locales -qq -y \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && cp docker/locale /etc/default/locale \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales \\\n && update-locale LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n && mkdir -p /usr/share/man/man1 /usr/share/man/man2 /usr/share/man/man3 /usr/share/man/man4 /usr/share/man/man5 /usr/share/man/man6 /usr/share/man/man7 /usr/share/man/man8 /usr/share/man/man9 \\\n && apt-get install procps psmisc net-tools iputils-ping gettext-base nano libmagic1 git gpg build-essential libxml2-dev libxslt1-dev zlib1g-dev python-dev python-setuptools postgresql-client libpq-dev libyaml-dev python3-psycopg2 libffi-dev libssl-dev -qq -y \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs -qq -y \\\n && npm install less -g \\\n && easy_install pip \\\n && pip install gevent gunicorn lxml pip setuptools==36.1 -q --upgrade \\\n && mkdir -p /var/log/ckan /srv/filestore /etc/services.d/ckan /etc/ckan \\\n && cp -a docker/prod.ini.tpl /etc/ckan \\\n && cp -a docker/run_ckan /etc/services.d/ckan/run \\\n && chown www-data:www-data -R /var/log/ckan /srv/filestore \\\n && curl -s -o /srv/hdxckantool.py https://raw.githubusercontent.com/OCHA-DAP/hdx-infra-tools/master/hdxckantool.py \\\n && chmod +x /srv/hdxckantool.py \\\n && ln -s /srv/hdxckantool.py /usr/sbin/hdxckantool \\\n && echo \"application/vnd.geo+json geojson\" >> /etc/mime.types \\\n && python setup.py develop \\\n && pip install -r requirements.txt \\\n && pip install newrelic \\\n && hdxckantool plugins dev \\\n && newrelic-admin generate-config LICENSE_KEY /srv/newrelic.ini \\\n && chown -R www-data ckan/public/base/i18n \\\n && apt-get -qq -y remove build-essential gpg libffi-dev libpq-dev libssl-dev libxml2-dev libxslt1-dev libyaml-dev zlib1g-dev python-dev \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && rm -rf .git /root/.cache /root/.npm /usr/local/man /usr/share/doc /usr/share/man /var/lib/apt/lists/* /var/tmp/* /tmp/*\nVOLUME [\"/srv/filestore\", \"/srv/backup\", \"/var/log/ckan\"]\nEXPOSE 5000/tcp\n","injectedSmells":[],"originalDockerfileHash":"df1890281927034409b99c5ec9b4f8ef","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM unocha/debian-base-s6:9-slim\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    HDX_CKAN_WORKERS=\"4\" \\\n    INI_FILE=\"/etc/ckan/prod.ini\" \\\n    HDX_CACHE_DIR=\"/srv/cache\"\nCOPY . /srv/ckan/\nWORKDIR /srv/ckan\nRUN apt-get update -qq -y \\\n && apt-get install locales -qq -y \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && cp docker/locale /etc/default/locale \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales \\\n && update-locale LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n && mkdir -p /usr/share/man/man1 /usr/share/man/man2 /usr/share/man/man3 /usr/share/man/man4 /usr/share/man/man5 /usr/share/man/man6 /usr/share/man/man7 /usr/share/man/man8 /usr/share/man/man9 \\\n && apt-get install procps psmisc net-tools iputils-ping gettext-base nano libmagic1 git gpg build-essential libxml2-dev libxslt1-dev zlib1g-dev python-dev python-setuptools postgresql-client libpq-dev libyaml-dev python3-psycopg2 libffi-dev libssl-dev -qq -y \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs -qq -y \\\n && npm install less -g \\\n && easy_install pip \\\n && pip install gevent gunicorn lxml pip setuptools==36.1 -q --upgrade \\\n && mkdir -p /var/log/ckan /srv/filestore /etc/services.d/ckan /etc/ckan \\\n && cp -a docker/prod.ini.tpl /etc/ckan \\\n && cp -a docker/run_ckan /etc/services.d/ckan/run \\\n && chown www-data:www-data -R /var/log/ckan /srv/filestore \\\n && curl -s -o /srv/hdxckantool.py https://raw.githubusercontent.com/OCHA-DAP/hdx-infra-tools/master/hdxckantool.py \\\n && chmod +x /srv/hdxckantool.py \\\n && ln -s /srv/hdxckantool.py /usr/sbin/hdxckantool \\\n && echo \"application/vnd.geo+json geojson\" >> /etc/mime.types \\\n && python setup.py develop \\\n && pip install -r requirements.txt \\\n && pip install newrelic \\\n && hdxckantool plugins dev \\\n && newrelic-admin generate-config LICENSE_KEY /srv/newrelic.ini \\\n && chown -R www-data ckan/public/base/i18n \\\n && apt-get -qq -y remove build-essential gpg libffi-dev libpq-dev libssl-dev libxml2-dev libxslt1-dev libyaml-dev zlib1g-dev python-dev \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && rm -rf .git /root/.cache /root/.npm /usr/local/man /usr/share/doc /usr/share/man /var/lib/apt/lists/* /var/tmp/* /tmp/*\nVOLUME [\"/srv/filestore\", \"/srv/backup\", \"/var/log/ckan\"]\nEXPOSE 5000/tcp\n","originalDockerfileUglifiedHash":"df1890281927034409b99c5ec9b4f8ef","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f1eb3ee393e369b1e67510522eea4eed08f496d5.dockerfile"}