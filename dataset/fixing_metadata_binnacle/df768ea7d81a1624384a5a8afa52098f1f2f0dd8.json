{"seed":2527354902,"processedDockerfileHash":"23b42e6d3a84c476bc92fbb44ca0e5f4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch-slim\nLABEL maintainer=\"NGINX Docker Maintainers <docker-maint@nginx.com>\"\nENV NGINX_VERSION=\"1.15.7-1~stretch\"\nENV NJS_VERSION=\"1.15.7.0.2.6-1~stretch\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends gnupg1 apt-transport-https ca-certificates --no-install-suggests -y \\\n && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 ; found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $NGINX_GPGKEY\" >&2 \\\n && exit 1 ; apt-get remove --purge --auto-remove -y gnupg1 \\\n && rm -rf /var/lib/apt/lists/* \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && nginxPackages=\" nginx=${NGINX_VERSION} nginx-module-xslt=${NGINX_VERSION} nginx-module-geoip=${NGINX_VERSION} nginx-module-image-filter=${NGINX_VERSION} nginx-module-njs=${NJS_VERSION} \" \\\n && case \"$dpkgArch\" in (amd64|i386) echo \"deb https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && apt-get update ;;(*) echo \"deb-src https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chmod 777 \"$tempDir\" \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get build-dep -y $nginxPackages \\\n && (cd \"$tempDir\" \\\n && DEB_BUILD_OPTIONS=\"nocheck parallel=$( nproc ;)\" apt-get source --compile $nginxPackages ) \\\n && apt-mark showmanual | xargs apt-mark auto > /dev/null \\\n && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; } \\\n && ls -lAFh \"$tempDir\" \\\n && (cd \"$tempDir\" \\\n && dpkg-scanpackages . > Packages) \\\n && grep '^Package: ' \"$tempDir/Packages\" \\\n && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \\\n && apt-get -o Acquire::GzipIndexes=false update ;; esac \\\n && apt-get install --no-install-recommends gettext-base $nginxPackages --no-install-suggests -y \\\n && apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \\\n && if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove \\\n && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp 443/tcp\nSTOPSIGNAL SIGTERM\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget curl unzip lsb-release runit -y -q\nENV CT_URL=\"https://releases.hashicorp.com/consul-template/0.19.5/consul-template_0.19.5_linux_amd64.zip\"\nRUN curl -O $CT_URL\nRUN unzip consul-template_0.19.5_linux_amd64.zip -d /usr/local/bin\n#   https://releases.hashicorp.com/consul-template/0.19.5/\nCOPY nginx.service /etc/service/nginx/run\nCOPY consul-template.service /etc/service/consul-template/run\nRUN chmod +x /etc/service/nginx/run\nRUN chmod +x /etc/service/consul-template/run\nRUN rm -v /etc/nginx/conf.d/*\nCOPY nginx.conf /etc/consul-templates/nginx.conf\nCOPY index.html /etc/consul-templates/index.html\nCMD [\"/usr/bin/runsvdir\", \"/etc/service\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch-slim\nLABEL maintainer=\"NGINX Docker Maintainers <docker-maint@nginx.com>\"\nENV NGINX_VERSION=\"1.15.7-1~stretch\"\nENV NJS_VERSION=\"1.15.7.0.2.6-1~stretch\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends gnupg1 apt-transport-https ca-certificates --no-install-suggests -y \\\n && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 ; found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $NGINX_GPGKEY\" >&2 \\\n && exit 1 ; apt-get remove --purge --auto-remove -y gnupg1 \\\n && rm -rf /var/lib/apt/lists/* \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && nginxPackages=\" nginx=${NGINX_VERSION} nginx-module-xslt=${NGINX_VERSION} nginx-module-geoip=${NGINX_VERSION} nginx-module-image-filter=${NGINX_VERSION} nginx-module-njs=${NJS_VERSION} \" \\\n && case \"$dpkgArch\" in (amd64|i386) echo \"deb https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && apt-get update ;;(*) echo \"deb-src https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chmod 777 \"$tempDir\" \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get build-dep -y $nginxPackages \\\n && (cd \"$tempDir\" \\\n && DEB_BUILD_OPTIONS=\"nocheck parallel=$( nproc ;)\" apt-get source --compile $nginxPackages ) \\\n && apt-mark showmanual | xargs apt-mark auto > /dev/null \\\n && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; } \\\n && ls -lAFh \"$tempDir\" \\\n && (cd \"$tempDir\" \\\n && dpkg-scanpackages . > Packages) \\\n && grep '^Package: ' \"$tempDir/Packages\" \\\n && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \\\n && apt-get -o Acquire::GzipIndexes=false update ;; esac \\\n && apt-get install --no-install-recommends gettext-base $nginxPackages --no-install-suggests -y \\\n && apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \\\n && if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove \\\n && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#  forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp 443/tcp\nSTOPSIGNAL SIGTERM\nRUN apt-get update \\\n && apt-get install wget curl unzip lsb-release runit -y -q\nENV CT_URL=\"https://releases.hashicorp.com/consul-template/0.19.5/consul-template_0.19.5_linux_amd64.zip\"\nRUN curl -O $CT_URL\nRUN unzip consul-template_0.19.5_linux_amd64.zip -d /usr/local/bin\n#  https://releases.hashicorp.com/consul-template/0.19.5/\nADD nginx.service /etc/service/nginx/run\nADD consul-template.service /etc/service/consul-template/run\nRUN chmod +x /etc/service/nginx/run\nRUN chmod +x /etc/service/consul-template/run\nRUN rm -v /etc/nginx/conf.d/*\nADD nginx.conf /etc/consul-templates/nginx.conf\nADD index.html /etc/consul-templates/index.html\nCMD [\"/usr/bin/runsvdir\", \"/etc/service\"]\n","injectedSmells":[],"originalDockerfileHash":"724362acb78dbdfbfcd9811496a46016","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch-slim\nLABEL maintainer=\"NGINX Docker Maintainers <docker-maint@nginx.com>\"\nENV NGINX_VERSION=\"1.15.7-1~stretch\"\nENV NJS_VERSION=\"1.15.7.0.2.6-1~stretch\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends gnupg1 apt-transport-https ca-certificates --no-install-suggests -y \\\n && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 ; found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $NGINX_GPGKEY\" >&2 \\\n && exit 1 ; apt-get remove --purge --auto-remove -y gnupg1 \\\n && rm -rf /var/lib/apt/lists/* \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && nginxPackages=\" nginx=${NGINX_VERSION} nginx-module-xslt=${NGINX_VERSION} nginx-module-geoip=${NGINX_VERSION} nginx-module-image-filter=${NGINX_VERSION} nginx-module-njs=${NJS_VERSION} \" \\\n && case \"$dpkgArch\" in (amd64|i386) echo \"deb https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && apt-get update ;;(*) echo \"deb-src https://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chmod 777 \"$tempDir\" \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get build-dep -y $nginxPackages \\\n && (cd \"$tempDir\" \\\n && DEB_BUILD_OPTIONS=\"nocheck parallel=$( nproc ;)\" apt-get source --compile $nginxPackages ) \\\n && apt-mark showmanual | xargs apt-mark auto > /dev/null \\\n && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; } \\\n && ls -lAFh \"$tempDir\" \\\n && (cd \"$tempDir\" \\\n && dpkg-scanpackages . > Packages) \\\n && grep '^Package: ' \"$tempDir/Packages\" \\\n && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \\\n && apt-get -o Acquire::GzipIndexes=false update ;; esac \\\n && apt-get install --no-install-recommends gettext-base $nginxPackages --no-install-suggests -y \\\n && apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \\\n && if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove \\\n && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp 443/tcp\nSTOPSIGNAL SIGTERM\nRUN apt-get update \\\n && apt-get install wget curl unzip lsb-release runit -y -q\nENV CT_URL=\"https://releases.hashicorp.com/consul-template/0.19.5/consul-template_0.19.5_linux_amd64.zip\"\nRUN curl -O $CT_URL\nRUN unzip consul-template_0.19.5_linux_amd64.zip -d /usr/local/bin\n#   https://releases.hashicorp.com/consul-template/0.19.5/\nADD nginx.service /etc/service/nginx/run\nADD consul-template.service /etc/service/consul-template/run\nRUN chmod +x /etc/service/nginx/run\nRUN chmod +x /etc/service/consul-template/run\nRUN rm -v /etc/nginx/conf.d/*\nADD nginx.conf /etc/consul-templates/nginx.conf\nADD index.html /etc/consul-templates/index.html\nCMD [\"/usr/bin/runsvdir\", \"/etc/service\"]\n","originalDockerfileUglifiedHash":"4730ea2859792ce9574c9cb1f2b8c9fc","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/df768ea7d81a1624384a5a8afa52098f1f2f0dd8.dockerfile"}