{"seed":455599516,"processedDockerfileHash":"c0df6a162619decd22b26151f6852b88","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#   Apache Thrift Docker build environment for Ubuntu Artful\n#   Using all stock Ubuntu Artful packaging except for:\n#   - cpp: stock boost 1.62 in artful has a nasty bug so we use stock boost 1.63\n#   - d: dmd does not come with Ubuntu\n#   - dart: does not come with Ubuntu. Pinned to last 1.x release\n#   - dotnet: does not come with Ubuntu\n#   - haxe: version 3.4.2 that comes with Ubuntu cores in our CI build\n#   - go: artful comes with 1.9, we want the latest (supported)\n#   - nodejs: want v8, artful comes with v6\n#\nFROM buildpack-deps:artful-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  ## Add apt repos\nRUN apt-get update \\\n && apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends apt apt-transport-https apt-utils curl dirmngr software-properties-common wget -y\n#   csharp (mono) - if we ever want a later version\n#   RUN echo \"deb http://download.mono-project.com/repo/debian xenial main\" | tee /etc/apt/sources.list.d/mono.list && \\\n#       apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF\n#   Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list\nENV DART_VERSION=\"1.24.3-1\"\n#   dotnet (netcore)\nRUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-artful-prod artful main\" > /etc/apt/sources.list.d/dotnetdev.list\n#   haxe (https://haxe.org/download/linux/)\nRUN add-apt-repository ppa:haxe/releases -y\n#   node.js\nRUN curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo \"deb https://deb.nodesource.com/node_8.x artful main\" | tee /etc/apt/sources.list.d/nodesource.list\n#  ## install general dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb llvm ninja-build pkg-config valgrind vim `` -y\nENV PATH=\"/usr/lib/llvm-3.8/bin:$PATH\"\n#   boost-1.62 has a terrible bug in boost::test, see https://svn.boost.org/trac10/ticket/12507\nRUN apt-get install --no-install-recommends libboost1.63-all-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nENV SBCL_VERSION=\"1.4.5\"\nRUN `` curl --version \\\n && curl -O -J -L https://kent.dl.sourceforge.net/project/sbcl/sbcl/${SBCL_VERSION}/sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 \\\n && tar xjf sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 \\\n && cd sbcl-${SBCL_VERSION}-x86-64-linux \\\n && ./install.sh \\\n && sbcl --version \\\n && rm -rf sbcl*\nENV D_VERSION=\"2.080.0\"\nENV DMD_DEB=\"dmd_2.080.0-0_amd64.deb\"\nRUN `` wget -q http://downloads.dlang.org/releases/2.x/${D_VERSION}/${DMD_DEB} \\\n && dpkg --install ${DMD_DEB} \\\n && rm -f ${DMD_DEB} \\\n && mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C \\\n && curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz | tar xz \\\n && mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ \\\n && mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ \\\n && rm -rf libevent-master \\\n && curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz | tar xz \\\n && mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ \\\n && mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ \\\n && rm -rf openssl-master\nRUN apt-get install --no-install-recommends `` dart=$DART_VERSION -y\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\nRUN apt-get install --no-install-recommends dotnet-sdk-2.1.4 `` -y\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\n#   golang\nENV GOLANG_VERSION=\"1.10\"\nENV GOLANG_DOWNLOAD_URL=\"https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\"\nENV GOLANG_DOWNLOAD_SHA256=\"b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33\"\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n && echo \"$GOLANG_DOWNLOAD_SHA256 golang.tar.gz\" | sha256sum -c - \\\n && tar -C /usr/local -xzf golang.tar.gz \\\n && ln -s /usr/local/go/bin/go /usr/local/bin \\\n && rm golang.tar.gz\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\nRUN apt-get install --no-install-recommends haxe neko neko-dev `` -y \\\n && haxelib setup --always /usr/share/haxe/lib \\\n && haxelib install --always hxcpp 2>&1 > /dev/null\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-8-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.2 lua5.2-dev `` -y\n#   https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212\n#   lua5.3 does not install alternatives!\n#   need to update our luasocket code, lua doesn't have luaL_openlib any more\nRUN apt-get install --no-install-recommends nodejs `` -y\n#   Test dependencies for running puppeteer\nRUN apt-get install --no-install-recommends libxss1 `` -y\nRUN apt-get install --no-install-recommends ocaml opam `` -y \\\n && opam init --yes \\\n && opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php php-cli php-dev php-pear re2c composer `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-ipaddress python-pip python-setuptools python-six python-tornado python-twisted python-wheel python-zope.interface `` -y \\\n && pip install backports.ssl_match_hostname==3.7.0.1 --upgrade\nRUN apt-get install --no-install-recommends python3-all python3-all-dbg python3-all-dev python3-pip python3-setuptools python3-six python3-tornado python3-twisted python3-wheel python3-zope.interface `` -y\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN apt-get install --no-install-recommends cargo rustc `` -y\nRUN apt-get install --no-install-recommends cppcheck sloccount `` -y \\\n && pip install flake8==6.0.0\n#   Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\n#  Apache Thrift Docker build environment for Ubuntu Artful\n#  Using all stock Ubuntu Artful packaging except for:\n#  - cpp: stock boost 1.62 in artful has a nasty bug so we use stock boost 1.63\n#  - d: dmd does not come with Ubuntu\n#  - dart: does not come with Ubuntu. Pinned to last 1.x release\n#  - dotnet: does not come with Ubuntu\n#  - haxe: version 3.4.2 that comes with Ubuntu cores in our CI build\n#  - go: artful comes with 1.9, we want the latest (supported)\n#  - nodejs: want v8, artful comes with v6\n#\nFROM buildpack-deps:artful-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# ## Add apt repos\nRUN apt-get update \\\n && apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends apt apt-transport-https apt-utils curl dirmngr software-properties-common wget -y\n#  csharp (mono) - if we ever want a later version\n#  RUN echo \"deb http://download.mono-project.com/repo/debian xenial main\" | tee /etc/apt/sources.list.d/mono.list && \\\n#      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF\n#  Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list\nENV DART_VERSION=\"1.24.3-1\"\n#  dotnet (netcore)\nRUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-artful-prod artful main\" > /etc/apt/sources.list.d/dotnetdev.list\n#  haxe (https://haxe.org/download/linux/)\nRUN add-apt-repository ppa:haxe/releases -y\n#  node.js\nRUN curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo \"deb https://deb.nodesource.com/node_8.x artful main\" | tee /etc/apt/sources.list.d/nodesource.list\n# ## install general dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb llvm ninja-build pkg-config valgrind vim `` -y\nENV PATH=\"/usr/lib/llvm-3.8/bin:$PATH\"\n#  boost-1.62 has a terrible bug in boost::test, see https://svn.boost.org/trac10/ticket/12507\nRUN apt-get install --no-install-recommends libboost1.63-all-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nENV SBCL_VERSION=\"1.4.5\"\nRUN `` curl --version \\\n && curl -O -J -L https://kent.dl.sourceforge.net/project/sbcl/sbcl/${SBCL_VERSION}/sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 \\\n && tar xjf sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 \\\n && cd sbcl-${SBCL_VERSION}-x86-64-linux \\\n && ./install.sh \\\n && sbcl --version \\\n && rm -rf sbcl*\nENV D_VERSION=\"2.080.0\"\nENV DMD_DEB=\"dmd_2.080.0-0_amd64.deb\"\nRUN `` wget -q http://downloads.dlang.org/releases/2.x/${D_VERSION}/${DMD_DEB} \\\n && dpkg --install ${DMD_DEB} \\\n && rm -f ${DMD_DEB} \\\n && mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C \\\n && curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz | tar xz \\\n && mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ \\\n && mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ \\\n && rm -rf libevent-master \\\n && curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz | tar xz \\\n && mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ \\\n && mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ \\\n && rm -rf openssl-master\nRUN apt-get install --no-install-recommends `` dart=$DART_VERSION -y\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\nRUN apt-get install --no-install-recommends dotnet-sdk-2.1.4 `` -y\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\n#  golang\nENV GOLANG_VERSION=\"1.10\"\nENV GOLANG_DOWNLOAD_URL=\"https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\"\nENV GOLANG_DOWNLOAD_SHA256=\"b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33\"\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n && echo \"$GOLANG_DOWNLOAD_SHA256 golang.tar.gz\" | sha256sum -c - \\\n && tar -C /usr/local -xzf golang.tar.gz \\\n && ln -s /usr/local/go/bin/go /usr/local/bin \\\n && rm golang.tar.gz\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\nRUN apt-get install --no-install-recommends haxe neko neko-dev `` -y \\\n && haxelib setup --always /usr/share/haxe/lib \\\n && haxelib install --always hxcpp 2>&1 > /dev/null\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-8-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.2 lua5.2-dev `` -y\n#  https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212\n#  lua5.3 does not install alternatives!\n#  need to update our luasocket code, lua doesn't have luaL_openlib any more\nRUN apt-get install --no-install-recommends nodejs `` -y\n#  Test dependencies for running puppeteer\nRUN apt-get install --no-install-recommends libxss1 `` -y\nRUN apt-get install --no-install-recommends ocaml opam `` -y \\\n && opam init --yes \\\n && opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php php-cli php-dev php-pear re2c composer `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-ipaddress python-pip python-setuptools python-six python-tornado python-twisted python-wheel python-zope.interface `` -y \\\n && pip install backports.ssl_match_hostname --upgrade\nRUN apt-get install --no-install-recommends python3-all python3-all-dbg python3-all-dev python3-pip python3-setuptools python3-six python3-tornado python3-twisted python3-wheel python3-zope.interface `` -y\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN apt-get install --no-install-recommends cargo rustc `` -y\nRUN apt-get install --no-install-recommends cppcheck sloccount `` -y \\\n && pip install flake8\n#  Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","injectedSmells":[],"originalDockerfileHash":"77278956478329834f8f3d021b27e59c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#   Apache Thrift Docker build environment for Ubuntu Artful\n#   Using all stock Ubuntu Artful packaging except for:\n#   - cpp: stock boost 1.62 in artful has a nasty bug so we use stock boost 1.63\n#   - d: dmd does not come with Ubuntu\n#   - dart: does not come with Ubuntu. Pinned to last 1.x release\n#   - dotnet: does not come with Ubuntu\n#   - haxe: version 3.4.2 that comes with Ubuntu cores in our CI build\n#   - go: artful comes with 1.9, we want the latest (supported)\n#   - nodejs: want v8, artful comes with v6\n#\nFROM buildpack-deps:artful-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  ## Add apt repos\nRUN apt-get update \\\n && apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends apt apt-transport-https apt-utils curl dirmngr software-properties-common wget -y\n#   csharp (mono) - if we ever want a later version\n#   RUN echo \"deb http://download.mono-project.com/repo/debian xenial main\" | tee /etc/apt/sources.list.d/mono.list && \\\n#       apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF\n#   Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list\nENV DART_VERSION=\"1.24.3-1\"\n#   dotnet (netcore)\nRUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-artful-prod artful main\" > /etc/apt/sources.list.d/dotnetdev.list\n#   haxe (https://haxe.org/download/linux/)\nRUN add-apt-repository ppa:haxe/releases -y\n#   node.js\nRUN curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo \"deb https://deb.nodesource.com/node_8.x artful main\" | tee /etc/apt/sources.list.d/nodesource.list\n#  ## install general dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb llvm ninja-build pkg-config valgrind vim `` -y\nENV PATH=\"/usr/lib/llvm-3.8/bin:$PATH\"\n#   boost-1.62 has a terrible bug in boost::test, see https://svn.boost.org/trac10/ticket/12507\nRUN apt-get install --no-install-recommends libboost1.63-all-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nENV SBCL_VERSION=\"1.4.5\"\nRUN `` curl --version \\\n && curl -O -J -L https://kent.dl.sourceforge.net/project/sbcl/sbcl/${SBCL_VERSION}/sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 \\\n && tar xjf sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 \\\n && cd sbcl-${SBCL_VERSION}-x86-64-linux \\\n && ./install.sh \\\n && sbcl --version \\\n && rm -rf sbcl*\nENV D_VERSION=\"2.080.0\"\nENV DMD_DEB=\"dmd_2.080.0-0_amd64.deb\"\nRUN `` wget -q http://downloads.dlang.org/releases/2.x/${D_VERSION}/${DMD_DEB} \\\n && dpkg --install ${DMD_DEB} \\\n && rm -f ${DMD_DEB} \\\n && mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C \\\n && curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz | tar xz \\\n && mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ \\\n && mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ \\\n && rm -rf libevent-master \\\n && curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz | tar xz \\\n && mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ \\\n && mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ \\\n && rm -rf openssl-master\nRUN apt-get install --no-install-recommends `` dart=$DART_VERSION -y\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\nRUN apt-get install --no-install-recommends dotnet-sdk-2.1.4 `` -y\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\n#   golang\nENV GOLANG_VERSION=\"1.10\"\nENV GOLANG_DOWNLOAD_URL=\"https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\"\nENV GOLANG_DOWNLOAD_SHA256=\"b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33\"\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n && echo \"$GOLANG_DOWNLOAD_SHA256 golang.tar.gz\" | sha256sum -c - \\\n && tar -C /usr/local -xzf golang.tar.gz \\\n && ln -s /usr/local/go/bin/go /usr/local/bin \\\n && rm golang.tar.gz\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\nRUN apt-get install --no-install-recommends haxe neko neko-dev `` -y \\\n && haxelib setup --always /usr/share/haxe/lib \\\n && haxelib install --always hxcpp 2>&1 > /dev/null\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-8-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.2 lua5.2-dev `` -y\n#   https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212\n#   lua5.3 does not install alternatives!\n#   need to update our luasocket code, lua doesn't have luaL_openlib any more\nRUN apt-get install --no-install-recommends nodejs `` -y\n#   Test dependencies for running puppeteer\nRUN apt-get install --no-install-recommends libxss1 `` -y\nRUN apt-get install --no-install-recommends ocaml opam `` -y \\\n && opam init --yes \\\n && opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php php-cli php-dev php-pear re2c composer `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-ipaddress python-pip python-setuptools python-six python-tornado python-twisted python-wheel python-zope.interface `` -y \\\n && pip install backports.ssl_match_hostname --upgrade\nRUN apt-get install --no-install-recommends python3-all python3-all-dbg python3-all-dev python3-pip python3-setuptools python3-six python3-tornado python3-twisted python3-wheel python3-zope.interface `` -y\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN apt-get install --no-install-recommends cargo rustc `` -y\nRUN apt-get install --no-install-recommends cppcheck sloccount `` -y \\\n && pip install flake8\n#   Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","originalDockerfileUglifiedHash":"ac3c8c750ea5ac6d9467cba3bf95acb5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/abe84d11c61962ffd490cfb461b959203fc99036.dockerfile"}