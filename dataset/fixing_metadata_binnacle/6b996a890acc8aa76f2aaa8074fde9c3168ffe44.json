{"seed":1086529919,"processedDockerfileHash":"2cd8b042573167e666bf8586802dce82","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel\nMAINTAINER berlius <berlius52@yahoo.com>\n#   This project contains my code and that of https://github.com/saiprashanths/dl-docker/\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends swig bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg2 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev libsdl2-2.0 libsdl2-dev openjdk-7-jdk lua5.1 libxerces-c3.1 liblua5.1-0-dev libav-tools python-tk timidity jackd1 lxterminal mencoder gnome-terminal python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler -y ) \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Add SNI support to Python\nRUN pip install pyopenssl==23.1.1 ndg-httpsclient==0.5.1 pyasn1==0.4.8 --no-cache-dir\n#   Install TensorFlow\nRUN pip install tensorflow-gpu==2.12.0 --no-cache-dir\n#   Install other useful Python packages using pip\nRUN pip install ipython==8.12.0 --no-cache-dir --upgrade \\\n && pip install Cython==0.29.34 ipykernel==6.22.0 jupyter==1.0.0 path.py==12.5.0 Pillow==9.5.0 pygments==2.15.0 tflearn==0.5.0 six==1.16.0 sphinx==6.1.3 wheel==0.40.0 zmq==0.0.0 tqdm==4.65.0 chainer==7.8.1 prettytensor==0.7.4 progressbar==2.5 ipdb==0.13.13 scikit-neuralnetwork==0.7 gym[all] --no-cache-dir \\\n && python -m ipykernel.kernelspec\nRUN update-ca-certificates -f\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\" \\\n    CLASSPATH=\"/usr/lib/jvm/java-7-openjdk-amd64/libtools.jar:$CLASSPATH\" \\\n    PATH=\"/usr/lib/jvm/java-7-openjdk-amd64/bin:$PATH\"\n#   Install Caffe \nRUN git clone -b master --depth 1 https://github.com/BVLC/caffe.git /root/caffe \\\n && cd /root/caffe \\\n && cat python/requirements.txt | xargs -n1 pip install \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_CUDNN=1 -DBLAS=Open .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Set up Caffe environment variables\nENV CAFFE_ROOT=\"/root/caffe\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\n#   Install Theano and set up Theano config (.theanorc) for CUDA and OpenBLAS\nRUN pip install git+git://github.com/Theano/Theano.git --no-cache-dir \\\n && echo \"[global]\\ndevice=gpu\\nfloatX=float32\\noptimizer_including=cudnn\\nmode=FAST_RUN \\n[lib]\\ncnmem=0.95 \\n[nvcc]\\nfastmath=True \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\n[DebugMode]\\ncheck_finite=1\" > /root/.theanorc\n#   Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@ --no-cache-dir\n#   Install Lasagne\nRUN pip install git+git://github.com/Lasagne/Lasagne.git --no-cache-dir\n#   Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && yes no | ./install.sh\n#   Export the LUA evironment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\" \\\n    LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" \\\n    PATH=\"/root/torch/install/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\" \\\n    DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\nRUN luarocks install display\nRUN luarocks install hdf5\nRUN luarocks install image\nRUN luarocks install loadcaffe\nRUN luarocks install mnist\n#   Install the latest versions of nn, cutorch, cunn, cuDNN bindings and iTorch\nRUN luarocks install nn \\\n && luarocks install cutorch \\\n && luarocks install cunn \\\n && cd /root \\\n && git clone https://github.com/soumith/cudnn.torch.git \\\n && cd cudnn.torch \\\n && git checkout R4 \\\n && luarocks make \\\n && cd /root \\\n && git clone https://github.com/facebook/iTorch.git \\\n && cd iTorch \\\n && luarocks make\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#   Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n#   Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006/tcp 8888/tcp 8000/tcp\nWORKDIR \"/root\"\nCMD [\"jackd\", \"-R\", \"-d\", \"alsa\", \"-d\", \"hw:1\"]\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel\nMAINTAINER berlius <berlius52@yahoo.com>\n#  This project contains my code and that of https://github.com/saiprashanths/dl-docker/\nRUN apt-get update\nRUN apt-get install swig bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg2 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev libsdl2-2.0 libsdl2-dev openjdk-7-jdk lua5.1 libxerces-c3.1 liblua5.1-0-dev libav-tools python-tk timidity jackd1 lxterminal mencoder gnome-terminal python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#  Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#  Add SNI support to Python\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --no-cache-dir\n#  Install TensorFlow\nRUN pip install tensorflow-gpu --no-cache-dir\n#  Install other useful Python packages using pip\nRUN pip install ipython --no-cache-dir --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments tflearn six sphinx wheel zmq tqdm chainer prettytensor progressbar ipdb scikit-neuralnetwork gym[all] --no-cache-dir \\\n && python -m ipykernel.kernelspec\nRUN update-ca-certificates -f\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\" \\\n    CLASSPATH=\"/usr/lib/jvm/java-7-openjdk-amd64/libtools.jar:$CLASSPATH\" \\\n    PATH=\"/usr/lib/jvm/java-7-openjdk-amd64/bin:$PATH\"\n#  Install Caffe \nRUN git clone -b master --depth 1 https://github.com/BVLC/caffe.git /root/caffe \\\n && cd /root/caffe \\\n && cat python/requirements.txt | xargs -n1 pip install \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_CUDNN=1 -DBLAS=Open .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#  Set up Caffe environment variables\nENV CAFFE_ROOT=\"/root/caffe\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\n#  Install Theano and set up Theano config (.theanorc) for CUDA and OpenBLAS\nRUN pip install git+git://github.com/Theano/Theano.git --no-cache-dir \\\n && echo \"[global]\\ndevice=gpu\\nfloatX=float32\\noptimizer_including=cudnn\\nmode=FAST_RUN \\n[lib]\\ncnmem=0.95 \\n[nvcc]\\nfastmath=True \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\n[DebugMode]\\ncheck_finite=1\" > /root/.theanorc\n#  Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@ --no-cache-dir\n#  Install Lasagne\nRUN pip install git+git://github.com/Lasagne/Lasagne.git --no-cache-dir\n#  Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && yes no | ./install.sh\n#  Export the LUA evironment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\" \\\n    LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" \\\n    PATH=\"/root/torch/install/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\" \\\n    DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\nRUN luarocks install display\nRUN luarocks install hdf5\nRUN luarocks install image\nRUN luarocks install loadcaffe\nRUN luarocks install mnist\n#  Install the latest versions of nn, cutorch, cunn, cuDNN bindings and iTorch\nRUN luarocks install nn \\\n && luarocks install cutorch \\\n && luarocks install cunn \\\n && cd /root \\\n && git clone https://github.com/soumith/cudnn.torch.git \\\n && cd cudnn.torch \\\n && git checkout R4 \\\n && luarocks make \\\n && cd /root \\\n && git clone https://github.com/facebook/iTorch.git \\\n && cd iTorch \\\n && luarocks make\n#  Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#  Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n#  Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006/tcp 8888/tcp 8000/tcp\nWORKDIR \"/root\"\nCMD [\"jackd\", \"-R\", \"-d\", \"alsa\", \"-d\", \"hw:1\"]\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"3db078cac6e4079e62f11bda40c3217f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:8.0-cudnn5-devel\nMAINTAINER berlius <berlius52@yahoo.com>\n#   This project contains my code and that of https://github.com/saiprashanths/dl-docker/\nRUN apt-get update\nRUN apt-get install swig bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg2 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev libsdl2-2.0 libsdl2-dev openjdk-7-jdk lua5.1 libxerces-c3.1 liblua5.1-0-dev libav-tools python-tk timidity jackd1 lxterminal mencoder gnome-terminal python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Add SNI support to Python\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --no-cache-dir\n#   Install TensorFlow\nRUN pip install tensorflow-gpu --no-cache-dir\n#   Install other useful Python packages using pip\nRUN pip install ipython --no-cache-dir --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments tflearn six sphinx wheel zmq tqdm chainer prettytensor progressbar ipdb scikit-neuralnetwork gym[all] --no-cache-dir \\\n && python -m ipykernel.kernelspec\nRUN update-ca-certificates -f\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\" \\\n    CLASSPATH=\"/usr/lib/jvm/java-7-openjdk-amd64/libtools.jar:$CLASSPATH\" \\\n    PATH=\"/usr/lib/jvm/java-7-openjdk-amd64/bin:$PATH\"\n#   Install Caffe \nRUN git clone -b master --depth 1 https://github.com/BVLC/caffe.git /root/caffe \\\n && cd /root/caffe \\\n && cat python/requirements.txt | xargs -n1 pip install \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_CUDNN=1 -DBLAS=Open .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Set up Caffe environment variables\nENV CAFFE_ROOT=\"/root/caffe\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\n#   Install Theano and set up Theano config (.theanorc) for CUDA and OpenBLAS\nRUN pip install git+git://github.com/Theano/Theano.git --no-cache-dir \\\n && echo \"[global]\\ndevice=gpu\\nfloatX=float32\\noptimizer_including=cudnn\\nmode=FAST_RUN \\n[lib]\\ncnmem=0.95 \\n[nvcc]\\nfastmath=True \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\n[DebugMode]\\ncheck_finite=1\" > /root/.theanorc\n#   Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@ --no-cache-dir\n#   Install Lasagne\nRUN pip install git+git://github.com/Lasagne/Lasagne.git --no-cache-dir\n#   Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && yes no | ./install.sh\n#   Export the LUA evironment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\" \\\n    LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" \\\n    PATH=\"/root/torch/install/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\" \\\n    DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\nRUN luarocks install display\nRUN luarocks install hdf5\nRUN luarocks install image\nRUN luarocks install loadcaffe\nRUN luarocks install mnist\n#   Install the latest versions of nn, cutorch, cunn, cuDNN bindings and iTorch\nRUN luarocks install nn \\\n && luarocks install cutorch \\\n && luarocks install cunn \\\n && cd /root \\\n && git clone https://github.com/soumith/cudnn.torch.git \\\n && cd cudnn.torch \\\n && git checkout R4 \\\n && luarocks make \\\n && cd /root \\\n && git clone https://github.com/facebook/iTorch.git \\\n && cd iTorch \\\n && luarocks make\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#   Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n#   Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006/tcp 8888/tcp 8000/tcp\nWORKDIR \"/root\"\nCMD [\"jackd\", \"-R\", \"-d\", \"alsa\", \"-d\", \"hw:1\"]\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"73cdd1cd580cb7dd5c78a240c3d4ee5b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6b996a890acc8aa76f2aaa8074fde9c3168ffe44.dockerfile"}