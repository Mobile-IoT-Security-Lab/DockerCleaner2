{"seed":1642409338,"processedDockerfileHash":"b2156167862d68c30d15577cf3ee85d1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM joynr-javascript:latest\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH\"\n#  ##################################################\n#   install clang 3.5 for formatting\n#  ##################################################\nRUN cd /tmp/ \\\n && . /etc/profile \\\n && wget http://llvm.org/releases/3.5.0/clang+llvm-3.5.0-x86_64-fedora20.tar.xz \\\n && tar -xf clang+llvm-3.5.0-x86_64-fedora20.tar.xz clang+llvm-3.5.0-x86_64-fedora20/bin/clang-format --strip-components=2 \\\n && mv clang-format /usr/local/bin/ \\\n && rm -f clang+llvm-3.5.0-x86_64-fedora20.tar.xz\n#  ##################################################\n#   install rpm-build required by CMake / CPack\n#  ##################################################\nRUN dnf update -y \\\n && dnf install -y rpm-build \\\n && dnf clean all\n#  ##################################################\n#   install jsmn\n#  ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/zserge/jsmn.git \\\n && cd jsmn \\\n && git checkout 572ace5 \\\n && CFLAGS=-fPIC make \\\n && cp libjsmn.a /usr/local/lib \\\n && cp jsmn.h /usr/local/include \\\n && cd /opt/ \\\n && rm -rf jsmn\n#  ##################################################\n#   install spdlog\n#  ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/gabime/spdlog.git \\\n && cd spdlog \\\n && git checkout 799ba2a57bb16b921099bd9ab64a513e4ebe4217 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt/ \\\n && rm -rf spdlog\n#  ##################################################\n#   install websocket++\n#  ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/zaphoyd/websocketpp.git \\\n && cd websocketpp \\\n && git checkout 0.8.1 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt/ \\\n && rm -rf websocketpp\n#  ##################################################\n#   install gcovr for code coverage reports\n#  ##################################################\nRUN dnf update -y \\\n && . /etc/profile \\\n && dnf install -y python-pip \\\n && dnf clean all \\\n && pip install gcovr==6.0\n#  ##################################################\n#   install lcov\n#  ##################################################\nRUN dnf update -y \\\n && dnf install -y lcov \\\n && dnf clean all\n#  ##################################################\n#   install boost\n#  ##################################################\nRUN dnf update -y \\\n && dnf install -y boost boost-devel \\\n && dnf clean all\n#  ##################################################\n#   install googletest & googlemock\n#  ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/google/googletest.git \\\n && cd googletest \\\n && git checkout ddb8012e \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt/ \\\n && rm -rf googletest\n#  ##################################################\n#   install psmisc tools (includes pstree)\n#  ##################################################\nRUN dnf update -y \\\n && . /etc/profile \\\n && dnf install -y psmisc \\\n && dnf clean all\nRUN chmod -R a+rw /opt \\\n && chown -R 1000 /usr/local\n#  ##################################################\n#   install flatbuffers\n#  ##################################################\nRUN export FLATBUFFERS_VERSION=v1.10.0 \\\n && . /etc/profile \\\n && cd /tmp \\\n && git clone https://github.com/google/flatbuffers.git \\\n && cd flatbuffers \\\n && git checkout $FLATBUFFERS_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DFLATBUFFERS_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release \\\n && make install -j\"$( nproc ;)\" \\\n && rm -rf /tmp/flatbuffers\n#  ##################################################\n#   install smrf\n#  ##################################################\nRUN export SMRF_VERSION=0.3.3 \\\n && . /etc/profile \\\n && cd /opt \\\n && git clone https://github.com/bmwcarit/smrf.git \\\n && cd smrf \\\n && git checkout $SMRF_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake -DBUILD_TESTS=Off .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt \\\n && rm -rf smrf\n#  ##################################################\n#   install MoCOCrW\n#  ##################################################\nRUN export MoCOCrW_VERSION=openssl1.1 \\\n && . /etc/profile \\\n && cd /opt \\\n && git clone https://github.com/bmwcarit/MoCOCrW.git \\\n && cd MoCOCrW \\\n && git checkout $MoCOCrW_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake -DBUILD_TESTING=Off .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt \\\n && rm -rf MoCOCrW\n#  ##################################################\n#   install valgrind\n#  ##################################################\nRUN export VALGRIND_VERSION=3.13.0 \\\n && . /etc/profile \\\n && cd /tmp \\\n && wget https://sourceware.org/pub/valgrind/valgrind-$VALGRIND_VERSION.tar.bz2 \\\n && tar xf valgrind-$VALGRIND_VERSION.tar.bz2 \\\n && cd valgrind-$VALGRIND_VERSION \\\n && ./configure \\\n && make install -j\"$( nproc ;)\" \\\n && rm -rf /tmp/valgrind-$VALGRIND_VERSION /tmp/valgrind-$VALGRIND_VERSION.tar.bz2\n#  ##################################################\n#   Copy build scripts\n#  ##################################################\nCOPY scripts /data/scripts\n#  ##################################################\n#   setup build environment\n#  ##################################################\nRUN mkdir -p /home/joynr/\nRUN mkdir /home/joynr/build\nRUN date -R > /data/timestamp\nRUN chmod -R a+rwx /usr/local\nRUN echo \"/usr/local/lib64\" > /etc/ld.so.conf.d/usr-local-lib64.conf \\\n && ldconfig\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM joynr-javascript:latest\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH\"\n# ##################################################\n#  install clang 3.5 for formatting\n# ##################################################\nRUN cd /tmp/ \\\n && . /etc/profile \\\n && wget http://llvm.org/releases/3.5.0/clang+llvm-3.5.0-x86_64-fedora20.tar.xz \\\n && tar -xf clang+llvm-3.5.0-x86_64-fedora20.tar.xz clang+llvm-3.5.0-x86_64-fedora20/bin/clang-format --strip-components=2 \\\n && mv clang-format /usr/local/bin/ \\\n && rm -f clang+llvm-3.5.0-x86_64-fedora20.tar.xz\n# ##################################################\n#  install rpm-build required by CMake / CPack\n# ##################################################\nRUN dnf update -y \\\n && dnf install -y rpm-build \\\n && dnf clean all\n# ##################################################\n#  install jsmn\n# ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/zserge/jsmn.git \\\n && cd jsmn \\\n && git checkout 572ace5 \\\n && CFLAGS=-fPIC make \\\n && cp libjsmn.a /usr/local/lib \\\n && cp jsmn.h /usr/local/include \\\n && cd /opt/ \\\n && rm -rf jsmn\n# ##################################################\n#  install spdlog\n# ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/gabime/spdlog.git \\\n && cd spdlog \\\n && git checkout 799ba2a57bb16b921099bd9ab64a513e4ebe4217 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt/ \\\n && rm -rf spdlog\n# ##################################################\n#  install websocket++\n# ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/zaphoyd/websocketpp.git \\\n && cd websocketpp \\\n && git checkout 0.8.1 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt/ \\\n && rm -rf websocketpp\n# ##################################################\n#  install gcovr for code coverage reports\n# ##################################################\nRUN dnf update -y \\\n && . /etc/profile \\\n && dnf install -y python-pip \\\n && dnf clean all \\\n && pip install gcovr\n# ##################################################\n#  install lcov\n# ##################################################\nRUN dnf update -y \\\n && dnf install -y lcov \\\n && dnf clean all\n# ##################################################\n#  install boost\n# ##################################################\nRUN dnf update -y \\\n && dnf install -y boost boost-devel \\\n && dnf clean all\n# ##################################################\n#  install googletest & googlemock\n# ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/google/googletest.git \\\n && cd googletest \\\n && git checkout ddb8012e \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt/ \\\n && rm -rf googletest\n# ##################################################\n#  install psmisc tools (includes pstree)\n# ##################################################\nRUN dnf update -y \\\n && . /etc/profile \\\n && dnf install -y psmisc \\\n && dnf clean all\nRUN chmod -R a+rw /opt \\\n && chown -R 1000 /usr/local\n# ##################################################\n#  install flatbuffers\n# ##################################################\nRUN export FLATBUFFERS_VERSION=v1.10.0 \\\n && . /etc/profile \\\n && cd /tmp \\\n && git clone https://github.com/google/flatbuffers.git \\\n && cd flatbuffers \\\n && git checkout $FLATBUFFERS_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DFLATBUFFERS_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release \\\n && make install -j\"$( nproc ;)\" \\\n && rm -rf /tmp/flatbuffers\n# ##################################################\n#  install smrf\n# ##################################################\nRUN export SMRF_VERSION=0.3.3 \\\n && . /etc/profile \\\n && cd /opt \\\n && git clone https://github.com/bmwcarit/smrf.git \\\n && cd smrf \\\n && git checkout $SMRF_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake -DBUILD_TESTS=Off .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt \\\n && rm -rf smrf\n# ##################################################\n#  install MoCOCrW\n# ##################################################\nRUN export MoCOCrW_VERSION=openssl1.1 \\\n && . /etc/profile \\\n && cd /opt \\\n && git clone https://github.com/bmwcarit/MoCOCrW.git \\\n && cd MoCOCrW \\\n && git checkout $MoCOCrW_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake -DBUILD_TESTING=Off .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt \\\n && rm -rf MoCOCrW\n# ##################################################\n#  install valgrind\n# ##################################################\nRUN export VALGRIND_VERSION=3.13.0 \\\n && . /etc/profile \\\n && cd /tmp \\\n && wget https://sourceware.org/pub/valgrind/valgrind-$VALGRIND_VERSION.tar.bz2 \\\n && tar xf valgrind-$VALGRIND_VERSION.tar.bz2 \\\n && cd valgrind-$VALGRIND_VERSION \\\n && ./configure \\\n && make install -j\"$( nproc ;)\" \\\n && rm -rf /tmp/valgrind-$VALGRIND_VERSION /tmp/valgrind-$VALGRIND_VERSION.tar.bz2\n# ##################################################\n#  Copy build scripts\n# ##################################################\nCOPY scripts /data/scripts\n# ##################################################\n#  setup build environment\n# ##################################################\nRUN mkdir -p /home/joynr/\nRUN mkdir /home/joynr/build\nRUN date -R > /data/timestamp\nRUN chmod -R a+rwx /usr/local\nRUN echo \"/usr/local/lib64\" > /etc/ld.so.conf.d/usr-local-lib64.conf \\\n && ldconfig\n","injectedSmells":[],"originalDockerfileHash":"4b91c1251ea19055083fb29b61e52d7a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM joynr-javascript:latest\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH\"\n#  ##################################################\n#   install clang 3.5 for formatting\n#  ##################################################\nRUN cd /tmp/ \\\n && . /etc/profile \\\n && wget http://llvm.org/releases/3.5.0/clang+llvm-3.5.0-x86_64-fedora20.tar.xz \\\n && tar -xf clang+llvm-3.5.0-x86_64-fedora20.tar.xz clang+llvm-3.5.0-x86_64-fedora20/bin/clang-format --strip-components=2 \\\n && mv clang-format /usr/local/bin/ \\\n && rm -f clang+llvm-3.5.0-x86_64-fedora20.tar.xz\n#  ##################################################\n#   install rpm-build required by CMake / CPack\n#  ##################################################\nRUN dnf update -y \\\n && dnf install -y rpm-build \\\n && dnf clean all\n#  ##################################################\n#   install jsmn\n#  ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/zserge/jsmn.git \\\n && cd jsmn \\\n && git checkout 572ace5 \\\n && CFLAGS=-fPIC make \\\n && cp libjsmn.a /usr/local/lib \\\n && cp jsmn.h /usr/local/include \\\n && cd /opt/ \\\n && rm -rf jsmn\n#  ##################################################\n#   install spdlog\n#  ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/gabime/spdlog.git \\\n && cd spdlog \\\n && git checkout 799ba2a57bb16b921099bd9ab64a513e4ebe4217 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt/ \\\n && rm -rf spdlog\n#  ##################################################\n#   install websocket++\n#  ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/zaphoyd/websocketpp.git \\\n && cd websocketpp \\\n && git checkout 0.8.1 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt/ \\\n && rm -rf websocketpp\n#  ##################################################\n#   install gcovr for code coverage reports\n#  ##################################################\nRUN dnf update -y \\\n && . /etc/profile \\\n && dnf install -y python-pip \\\n && dnf clean all \\\n && pip install gcovr\n#  ##################################################\n#   install lcov\n#  ##################################################\nRUN dnf update -y \\\n && dnf install -y lcov \\\n && dnf clean all\n#  ##################################################\n#   install boost\n#  ##################################################\nRUN dnf update -y \\\n && dnf install -y boost boost-devel \\\n && dnf clean all\n#  ##################################################\n#   install googletest & googlemock\n#  ##################################################\nRUN cd /opt \\\n && . /etc/profile \\\n && git clone https://github.com/google/googletest.git \\\n && cd googletest \\\n && git checkout ddb8012e \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt/ \\\n && rm -rf googletest\n#  ##################################################\n#   install psmisc tools (includes pstree)\n#  ##################################################\nRUN dnf update -y \\\n && . /etc/profile \\\n && dnf install -y psmisc \\\n && dnf clean all\nRUN chmod -R a+rw /opt \\\n && chown -R 1000 /usr/local\n#  ##################################################\n#   install flatbuffers\n#  ##################################################\nRUN export FLATBUFFERS_VERSION=v1.10.0 \\\n && . /etc/profile \\\n && cd /tmp \\\n && git clone https://github.com/google/flatbuffers.git \\\n && cd flatbuffers \\\n && git checkout $FLATBUFFERS_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DFLATBUFFERS_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release \\\n && make install -j\"$( nproc ;)\" \\\n && rm -rf /tmp/flatbuffers\n#  ##################################################\n#   install smrf\n#  ##################################################\nRUN export SMRF_VERSION=0.3.3 \\\n && . /etc/profile \\\n && cd /opt \\\n && git clone https://github.com/bmwcarit/smrf.git \\\n && cd smrf \\\n && git checkout $SMRF_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake -DBUILD_TESTS=Off .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt \\\n && rm -rf smrf\n#  ##################################################\n#   install MoCOCrW\n#  ##################################################\nRUN export MoCOCrW_VERSION=openssl1.1 \\\n && . /etc/profile \\\n && cd /opt \\\n && git clone https://github.com/bmwcarit/MoCOCrW.git \\\n && cd MoCOCrW \\\n && git checkout $MoCOCrW_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake -DBUILD_TESTING=Off .. \\\n && make install -j\"$( nproc ;)\" \\\n && cd /opt \\\n && rm -rf MoCOCrW\n#  ##################################################\n#   install valgrind\n#  ##################################################\nRUN export VALGRIND_VERSION=3.13.0 \\\n && . /etc/profile \\\n && cd /tmp \\\n && wget https://sourceware.org/pub/valgrind/valgrind-$VALGRIND_VERSION.tar.bz2 \\\n && tar xf valgrind-$VALGRIND_VERSION.tar.bz2 \\\n && cd valgrind-$VALGRIND_VERSION \\\n && ./configure \\\n && make install -j\"$( nproc ;)\" \\\n && rm -rf /tmp/valgrind-$VALGRIND_VERSION /tmp/valgrind-$VALGRIND_VERSION.tar.bz2\n#  ##################################################\n#   Copy build scripts\n#  ##################################################\nCOPY scripts /data/scripts\n#  ##################################################\n#   setup build environment\n#  ##################################################\nRUN mkdir -p /home/joynr/\nRUN mkdir /home/joynr/build\nRUN date -R > /data/timestamp\nRUN chmod -R a+rwx /usr/local\nRUN echo \"/usr/local/lib64\" > /etc/ld.so.conf.d/usr-local-lib64.conf \\\n && ldconfig\n","originalDockerfileUglifiedHash":"a84b66fbe06afc2fe9121e9373e587a4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6678bc36e0ee37498e189a3ae44fea6c9d1cada3.dockerfile"}