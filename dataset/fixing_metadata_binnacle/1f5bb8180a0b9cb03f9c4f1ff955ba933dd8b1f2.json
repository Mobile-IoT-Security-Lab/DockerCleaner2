{"seed":1533095230,"processedDockerfileHash":"a2354c9ef680619208feaba03a9bd602","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER yancy ribbens \"yribbens@credly.com\"\nVOLUME /home/.bitcoin\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends git=1:2.17.1-1ubuntu0.17 wget=1.19.4-1ubuntu2.2 build-essential=12.4ubuntu1 libtool=2.4.6-2 autotools-dev=20180224.1 automake=1:1.15.1-3ubuntu2 pkg-config=0.29.1-0ubuntu2 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 libevent-dev=2.1.8-stable-4build1 bsdmainutils=11.1.2ubuntu1 python3=3.6.7-1~18.04 libboost-all-dev=1.65.1.0ubuntu1 libminiupnpc-dev=1.9.20140610-4ubuntu2 libzmq3-dev=4.2.5-1ubuntu0.2 python3-pip=9.0.1-2.3~ubuntu1.18.04.8 locales=2.27-3ubuntu1.6 vim=2:8.0.1453-1ubuntu1.11 python3.6=3.6.9-1~18.04ubuntu1.12 python3.6-dev=3.6.9-1~18.04ubuntu1.12 uwsgi=2.0.15-10.2ubuntu2.2 uwsgi-src=2.0.15-10.2ubuntu2.2 uuid-dev=2.31.1-0.4ubuntu3.7 libcap-dev=1:2.25-1.2 libpcre3-dev=2:8.39-9ubuntu0.1 python-pip=9.0.1-2.3~ubuntu1.18.04.8 python-dev=2.7.15~rc1-1 nginx=1.14.0-0ubuntu1.11 apache2-utils=2.4.29-1ubuntu4.27 -y\n#   Checkout bitcoin source\nRUN mkdir /bitcoin-source\nWORKDIR /bitcoin-source\nRUN git clone https://github.com/bitcoin/bitcoin.git\n#   Install Berkley Database\nRUN wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz\nRUN tar -xvf db-4.8.30.NC.tar.gz\nWORKDIR /bitcoin-source/db-4.8.30.NC/build_unix\nRUN mkdir -p build\nRUN BDB_PREFIX=$( pwd ;)/build\nRUN ../dist/configure --disable-shared --enable-cxx --with-pic --prefix=$BDB_PREFIX\nRUN make install\n#   install bitcoin 0.16.3\nWORKDIR /bitcoin-source/bitcoin\nRUN git checkout tags/v0.16.3\nRUN ./autogen.sh\nRUN ./configure CPPFLAGS=\"-I${BDB_PREFIX}/include/ -O2\" LDFLAGS=\"-L${BDB_PREFIX}/lib/\" --without-gui\nRUN make\nRUN make install\n#   configure bitcoin network\nARG NETWORK=regtest\nARG RPC_USER=foo\nARG RPC_PASSWORD=bar\nRUN mkdir -p ~/.bitcoin\nRUN echo \"rpcuser=${RPC_USER}\\nrpcpassword=${RPC_PASSWORD}\\n${NETWORK}=1\\nrpcport=8332\\nrpcallowip=127.0.0.1\\nrpcconnect=127.0.0.1\\n\" > /root/.bitcoin/bitcoin.conf\n#   default to UTF8 character set\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_TYPE=\"en_US.UTF-8\"\nRUN locale-gen en_US.UTF-8\n#   configure cert-issuer\nARG ISSUER=<issuing-address>\nARG KEY=cert.key\nARG CRT=cert.crt\nCOPY . /cert-issuer\nCOPY conf_regtest.ini /etc/cert-issuer/conf.ini\nCOPY $CRT /etc/ssl/certs/$CRT\nCOPY $KEY /etc/ssl/private/$KEY\nRUN mkdir -p /etc/cert-issuer/\nWORKDIR /cert-issuer\nRUN pip3 install cert-issuer\nRUN pip3 install -r requirements.txt\nRUN sed -i.bak \"s/<issuing-address>/$ISSUER/g\" /etc/cert-issuer/conf.ini\n#   configure wsgi\nENV PYTHON=\"python3.6\"\nWORKDIR /root\nRUN uwsgi --build-plugin \"/usr/src/uwsgi/plugins/python python36\"\nRUN cp /root/python36_plugin.so /cert-issuer\nRUN chmod 644 /cert-issuer/python36_plugin.so\nRUN virtualenv -p python3 venv\nRUN pip3 install uwsgi flask\n#   configure nginx\nARG SERVER=<server-name>\nEXPOSE 443/tcp\nWORKDIR /cert-issuer\nCOPY cert_issuer_tls_site /etc/nginx/sites-available\nCOPY .htpasswd /etc/nginx/htpasswd\nRUN chmod -R 640 /etc/nginx/htpasswd\nRUN chown :www-data /etc/nginx/htpasswd\nRUN ln -s /etc/nginx/sites-available/cert_issuer_tls_site /etc/nginx/sites-enabled\nRUN sed -i.bak \"s/<server-name>/$SERVER/g\" /etc/nginx/sites-available/cert_issuer_tls_site\nRUN sed -i.bak \"s/<cert-crt-name>/$CRT/g\" /etc/nginx/sites-available/cert_issuer_tls_site\nRUN sed -i.bak \"s/<cert-key-name>/$KEY/g\" /etc/nginx/sites-available/cert_issuer_tls_site\nRUN sed -i.bak \"s/# server_names_hash_bucket_size 64/server_names_hash_bucket_size 128/g\" /etc/nginx/nginx.conf\nENTRYPOINT bitcoind -daemon \\\n && service nginx start \\\n && uwsgi --ini wsgi.ini\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER yancy ribbens \"yribbens@credly.com\"\nVOLUME /home/.bitcoin\nRUN apt-get update -qq \\\n && apt-get install git wget build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 libboost-all-dev libminiupnpc-dev libzmq3-dev python3-pip locales vim python3.6 python3.6-dev uwsgi uwsgi-src uuid-dev libcap-dev libpcre3-dev python-pip python-dev nginx apache2-utils -y\n#  Checkout bitcoin source\nRUN mkdir /bitcoin-source\nWORKDIR /bitcoin-source\nRUN git clone https://github.com/bitcoin/bitcoin.git\n#  Install Berkley Database\nRUN wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz\nRUN tar -xvf db-4.8.30.NC.tar.gz\nWORKDIR /bitcoin-source/db-4.8.30.NC/build_unix\nRUN mkdir -p build\nRUN BDB_PREFIX=$( pwd ;)/build\nRUN ../dist/configure --disable-shared --enable-cxx --with-pic --prefix=$BDB_PREFIX\nRUN make install\n#  install bitcoin 0.16.3\nWORKDIR /bitcoin-source/bitcoin\nRUN git checkout tags/v0.16.3\nRUN ./autogen.sh\nRUN ./configure CPPFLAGS=\"-I${BDB_PREFIX}/include/ -O2\" LDFLAGS=\"-L${BDB_PREFIX}/lib/\" --without-gui\nRUN make\nRUN make install\n#  configure bitcoin network\nARG NETWORK=regtest\nARG RPC_USER=foo\nARG RPC_PASSWORD=bar\nRUN mkdir -p ~/.bitcoin\nRUN echo \"rpcuser=${RPC_USER}\\nrpcpassword=${RPC_PASSWORD}\\n${NETWORK}=1\\nrpcport=8332\\nrpcallowip=127.0.0.1\\nrpcconnect=127.0.0.1\\n\" > /root/.bitcoin/bitcoin.conf\n#  default to UTF8 character set\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_TYPE=\"en_US.UTF-8\"\nRUN locale-gen en_US.UTF-8\n#  configure cert-issuer\nARG ISSUER=<issuing-address>\nARG KEY=cert.key\nARG CRT=cert.crt\nCOPY . /cert-issuer\nCOPY conf_regtest.ini /etc/cert-issuer/conf.ini\nCOPY $CRT /etc/ssl/certs/$CRT\nCOPY $KEY /etc/ssl/private/$KEY\nRUN mkdir -p /etc/cert-issuer/\nWORKDIR /cert-issuer\nRUN pip3 install cert-issuer\nRUN pip3 install -r requirements.txt\nRUN sed -i.bak \"s/<issuing-address>/$ISSUER/g\" /etc/cert-issuer/conf.ini\n#  configure wsgi\nENV PYTHON=\"python3.6\"\nWORKDIR /root\nRUN uwsgi --build-plugin \"/usr/src/uwsgi/plugins/python python36\"\nRUN cp /root/python36_plugin.so /cert-issuer\nRUN chmod 644 /cert-issuer/python36_plugin.so\nRUN virtualenv -p python3 venv\nRUN pip3 install uwsgi flask\n#  configure nginx\nARG SERVER=<server-name>\nEXPOSE 443/tcp\nWORKDIR /cert-issuer\nCOPY cert_issuer_tls_site /etc/nginx/sites-available\nCOPY .htpasswd /etc/nginx/htpasswd\nRUN chmod -R 640 /etc/nginx/htpasswd\nRUN chown :www-data /etc/nginx/htpasswd\nRUN ln -s /etc/nginx/sites-available/cert_issuer_tls_site /etc/nginx/sites-enabled\nRUN sed -i.bak \"s/<server-name>/$SERVER/g\" /etc/nginx/sites-available/cert_issuer_tls_site\nRUN sed -i.bak \"s/<cert-crt-name>/$CRT/g\" /etc/nginx/sites-available/cert_issuer_tls_site\nRUN sed -i.bak \"s/<cert-key-name>/$KEY/g\" /etc/nginx/sites-available/cert_issuer_tls_site\nRUN sed -i.bak \"s/# server_names_hash_bucket_size 64/server_names_hash_bucket_size 128/g\" /etc/nginx/nginx.conf\nENTRYPOINT bitcoind -daemon \\\n && service nginx start \\\n && uwsgi --ini wsgi.ini\n","injectedSmells":[],"originalDockerfileHash":"752657e2156bcec96cfed5b35b612d3e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER yancy ribbens \"yribbens@credly.com\"\nVOLUME /home/.bitcoin\nRUN apt-get update -qq \\\n && apt-get install git wget build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 libboost-all-dev libminiupnpc-dev libzmq3-dev python3-pip locales vim python3.6 python3.6-dev uwsgi uwsgi-src uuid-dev libcap-dev libpcre3-dev python-pip python-dev nginx apache2-utils -y\n#   Checkout bitcoin source\nRUN mkdir /bitcoin-source\nWORKDIR /bitcoin-source\nRUN git clone https://github.com/bitcoin/bitcoin.git\n#   Install Berkley Database\nRUN wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz\nRUN tar -xvf db-4.8.30.NC.tar.gz\nWORKDIR /bitcoin-source/db-4.8.30.NC/build_unix\nRUN mkdir -p build\nRUN BDB_PREFIX=$( pwd ;)/build\nRUN ../dist/configure --disable-shared --enable-cxx --with-pic --prefix=$BDB_PREFIX\nRUN make install\n#   install bitcoin 0.16.3\nWORKDIR /bitcoin-source/bitcoin\nRUN git checkout tags/v0.16.3\nRUN ./autogen.sh\nRUN ./configure CPPFLAGS=\"-I${BDB_PREFIX}/include/ -O2\" LDFLAGS=\"-L${BDB_PREFIX}/lib/\" --without-gui\nRUN make\nRUN make install\n#   configure bitcoin network\nARG NETWORK=regtest\nARG RPC_USER=foo\nARG RPC_PASSWORD=bar\nRUN mkdir -p ~/.bitcoin\nRUN echo \"rpcuser=${RPC_USER}\\nrpcpassword=${RPC_PASSWORD}\\n${NETWORK}=1\\nrpcport=8332\\nrpcallowip=127.0.0.1\\nrpcconnect=127.0.0.1\\n\" > /root/.bitcoin/bitcoin.conf\n#   default to UTF8 character set\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_TYPE=\"en_US.UTF-8\"\nRUN locale-gen en_US.UTF-8\n#   configure cert-issuer\nARG ISSUER=<issuing-address>\nARG KEY=cert.key\nARG CRT=cert.crt\nCOPY . /cert-issuer\nCOPY conf_regtest.ini /etc/cert-issuer/conf.ini\nCOPY $CRT /etc/ssl/certs/$CRT\nCOPY $KEY /etc/ssl/private/$KEY\nRUN mkdir -p /etc/cert-issuer/\nWORKDIR /cert-issuer\nRUN pip3 install cert-issuer\nRUN pip3 install -r requirements.txt\nRUN sed -i.bak \"s/<issuing-address>/$ISSUER/g\" /etc/cert-issuer/conf.ini\n#   configure wsgi\nENV PYTHON=\"python3.6\"\nWORKDIR /root\nRUN uwsgi --build-plugin \"/usr/src/uwsgi/plugins/python python36\"\nRUN cp /root/python36_plugin.so /cert-issuer\nRUN chmod 644 /cert-issuer/python36_plugin.so\nRUN virtualenv -p python3 venv\nRUN pip3 install uwsgi flask\n#   configure nginx\nARG SERVER=<server-name>\nEXPOSE 443/tcp\nWORKDIR /cert-issuer\nCOPY cert_issuer_tls_site /etc/nginx/sites-available\nCOPY .htpasswd /etc/nginx/htpasswd\nRUN chmod -R 640 /etc/nginx/htpasswd\nRUN chown :www-data /etc/nginx/htpasswd\nRUN ln -s /etc/nginx/sites-available/cert_issuer_tls_site /etc/nginx/sites-enabled\nRUN sed -i.bak \"s/<server-name>/$SERVER/g\" /etc/nginx/sites-available/cert_issuer_tls_site\nRUN sed -i.bak \"s/<cert-crt-name>/$CRT/g\" /etc/nginx/sites-available/cert_issuer_tls_site\nRUN sed -i.bak \"s/<cert-key-name>/$KEY/g\" /etc/nginx/sites-available/cert_issuer_tls_site\nRUN sed -i.bak \"s/# server_names_hash_bucket_size 64/server_names_hash_bucket_size 128/g\" /etc/nginx/nginx.conf\nENTRYPOINT bitcoind -daemon \\\n && service nginx start \\\n && uwsgi --ini wsgi.ini\n","originalDockerfileUglifiedHash":"a8027555a75dd189b26a7b5809da42fb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1f5bb8180a0b9cb03f9c4f1ff955ba933dd8b1f2.dockerfile"}