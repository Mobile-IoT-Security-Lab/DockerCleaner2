{"seed":226948789,"processedDockerfileHash":"7c977e4cbb00004c8d20d851b027ebff","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"FROM centos:6\nMAINTAINER Zhanwei Wang <wangzw@wangzw.org>\n#   install document with yum\nRUN sed -i 's/tsflags=nodocs//g' /etc/yum.conf\n#   install all software we need\nRUN yum install -y epel-release \\\n && yum makecache \\\n && yum install -y man passwd sudo tar which git mlocate links make bzip2 autoconf automake libtool m4 gcc gcc-c++ gdb flex cmake gperf indent libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel perl-ExtUtils-Embed pam-devel python-devel snappy-devel libyaml-devel libevent-devel bzip2-devel openssl-devel openldap-devel readline-devel net-snmp-devel apr-devel libesmtp-devel xerces-c-devel python-pip json-c-devel apache-ivy java-1.7.0-openjdk-devel openssh-clients openssh-server \\\n && yum clean all\n#   install libcurl 7.45.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"http://curl.haxx.se/download/curl-7.45.0.tar.bz2\" -o curl-7.45.0.tar.bz2 \\\n && tar -xjf curl-7.45.0.tar.bz2 \\\n && cd curl-7.45.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build \\\n && ldconfig\nRUN curl -L \"http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo\" -o /etc/yum.repos.d/epel-apache-maven.repo \\\n && yum install -y apache-maven \\\n && yum clean all\n#   setup ssh server and keys for root\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\n#   setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh \\\n && echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh \\\n && chmod a+x /etc/profile.d/java.sh\n#   install boost 1.59\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\" -o boost_1_59_0.tar.bz2 \\\n && tar -xjf boost_1_59_0.tar.bz2 \\\n && cd boost_1_59_0 \\\n && ./bootstrap.sh \\\n && ./b2 --prefix=/usr -q \\\n && ./b2 --prefix=/usr -q install \\\n && rm -rf /tmp/build\n#   install bison 2.5.1\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"ftp://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz\" -o bison-2.5.1.tar.gz \\\n && tar -xzf bison-2.5.1.tar.gz \\\n && cd bison-2.5.1 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#   install thrift 0.9.2\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"http://www.us.apache.org/dist/thrift/0.9.2/thrift-0.9.2.tar.gz\" -o thrift-0.9.2.tar.gz \\\n && tar -xzf thrift-0.9.2.tar.gz \\\n && cd thrift-0.9.2 \\\n && ./configure --prefix=/usr --with-cpp=yes --with-boost=yes --with-qt4=no --with-csharp=no --with-java=no --with-erlang=no --enable-tests=no --with-nodejs=no --with-lua=no --with-python=no --with-perl=no --with-php=no \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#   install protobuf 2.5.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2\" -o protobuf-2.5.0.tar.bz2 \\\n && tar -xjf protobuf-2.5.0.tar.bz2 \\\n && cd protobuf-2.5.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#   install libhdfs3\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && git clone https://github.com/PivotalRD/libhdfs3.git . \\\n && mkdir build \\\n && cd build \\\n && ../bootstrap --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#   install python module \nRUN yum makecache \\\n && yum install -y postgresql-devel \\\n && pip install pg8000==1.29.4 simplejson==3.19.1 unittest2==1.1.0 pycrypto==2.6.1 pygresql==5.2.4 pyyaml==6.0 lockfile==0.12.2 paramiko==3.1.0 psi==0.3b3 --retries=50 --timeout=300 \\\n && pip install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz --retries=50 --timeout=300 \\\n && pip install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz/download --retries=50 --timeout=300 \\\n && yum erase -y postgresql postgresql-libs postgresql-devel \\\n && yum clean all\n#   install libyarn\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && git clone --depth=1 https://github.com/apache/incubator-hawq.git . \\\n && cd depends/libyarn \\\n && mkdir build \\\n && cd build \\\n && ../bootstrap --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#   create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin \\\n && useradd -u 1000 -g 1000 gpadmin \\\n && echo \"gpadmin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\n#   sudo should not require tty\nRUN sed -i -e 's|Defaults requiretty|#Defaults requiretty|' /etc/sudoers\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh \\\n && echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh \\\n && chmod a+x /etc/profile.d/user.sh\nENV BASEDIR=\"/data\"\nRUN mkdir -p /data \\\n && chmod 777 /data\nUSER gpadmin\n#   setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\nWORKDIR /data\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:6\nMAINTAINER Zhanwei Wang <wangzw@wangzw.org>\n#  install document with yum\nRUN sed -i 's/tsflags=nodocs//g' /etc/yum.conf\n#  install all software we need\nRUN yum install -y epel-release \\\n && yum makecache \\\n && yum install -y man passwd sudo tar which git mlocate links make bzip2 autoconf automake libtool m4 gcc gcc-c++ gdb flex cmake gperf indent libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel perl-ExtUtils-Embed pam-devel python-devel snappy-devel libyaml-devel libevent-devel bzip2-devel openssl-devel openldap-devel readline-devel net-snmp-devel apr-devel libesmtp-devel xerces-c-devel python-pip json-c-devel apache-ivy java-1.7.0-openjdk-devel openssh-clients openssh-server \\\n && yum clean all\n#  install libcurl 7.45.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"http://curl.haxx.se/download/curl-7.45.0.tar.bz2\" -o curl-7.45.0.tar.bz2 \\\n && tar -xjf curl-7.45.0.tar.bz2 \\\n && cd curl-7.45.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build \\\n && ldconfig\nRUN curl -L \"http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo\" -o /etc/yum.repos.d/epel-apache-maven.repo \\\n && yum install -y apache-maven \\\n && yum clean all\n#  setup ssh server and keys for root\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\n#  setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh \\\n && echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh \\\n && chmod a+x /etc/profile.d/java.sh\n#  install boost 1.59\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\" -o boost_1_59_0.tar.bz2 \\\n && tar -xjf boost_1_59_0.tar.bz2 \\\n && cd boost_1_59_0 \\\n && ./bootstrap.sh \\\n && ./b2 --prefix=/usr -q \\\n && ./b2 --prefix=/usr -q install \\\n && rm -rf /tmp/build\n#  install bison 2.5.1\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"ftp://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz\" -o bison-2.5.1.tar.gz \\\n && tar -xzf bison-2.5.1.tar.gz \\\n && cd bison-2.5.1 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#  install thrift 0.9.2\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"http://www.us.apache.org/dist/thrift/0.9.2/thrift-0.9.2.tar.gz\" -o thrift-0.9.2.tar.gz \\\n && tar -xzf thrift-0.9.2.tar.gz \\\n && cd thrift-0.9.2 \\\n && ./configure --prefix=/usr --with-cpp=yes --with-boost=yes --with-qt4=no --with-csharp=no --with-java=no --with-erlang=no --enable-tests=no --with-nodejs=no --with-lua=no --with-python=no --with-perl=no --with-php=no \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#  install protobuf 2.5.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2\" -o protobuf-2.5.0.tar.bz2 \\\n && tar -xjf protobuf-2.5.0.tar.bz2 \\\n && cd protobuf-2.5.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#  install libhdfs3\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && git clone https://github.com/PivotalRD/libhdfs3.git . \\\n && mkdir build \\\n && cd build \\\n && ../bootstrap --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#  install python module \nRUN yum makecache \\\n && yum install -y postgresql-devel \\\n && pip install pg8000 simplejson unittest2 pycrypto pygresql pyyaml lockfile paramiko psi --retries=50 --timeout=300 \\\n && pip install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz --retries=50 --timeout=300 \\\n && pip install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz/download --retries=50 --timeout=300 \\\n && yum erase -y postgresql postgresql-libs postgresql-devel \\\n && yum clean all\n#  install libyarn\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && git clone --depth=1 https://github.com/apache/incubator-hawq.git . \\\n && cd depends/libyarn \\\n && mkdir build \\\n && cd build \\\n && ../bootstrap --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#  create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin \\\n && useradd -u 1000 -g 1000 gpadmin \\\n && echo \"gpadmin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\n#  sudo should not require tty\nRUN sed -i -e 's|Defaults requiretty|#Defaults requiretty|' /etc/sudoers\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh \\\n && echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh \\\n && chmod a+x /etc/profile.d/user.sh\nENV BASEDIR=\"/data\"\nRUN mkdir -p /data \\\n && chmod 777 /data\nUSER gpadmin\n#  setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\nWORKDIR /data\n","injectedSmells":[],"originalDockerfileHash":"ba684ad913beba5feb858e060d86f6b5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:6\nMAINTAINER Zhanwei Wang <wangzw@wangzw.org>\n#   install document with yum\nRUN sed -i 's/tsflags=nodocs//g' /etc/yum.conf\n#   install all software we need\nRUN yum install -y epel-release \\\n && yum makecache \\\n && yum install -y man passwd sudo tar which git mlocate links make bzip2 autoconf automake libtool m4 gcc gcc-c++ gdb flex cmake gperf indent libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel perl-ExtUtils-Embed pam-devel python-devel snappy-devel libyaml-devel libevent-devel bzip2-devel openssl-devel openldap-devel readline-devel net-snmp-devel apr-devel libesmtp-devel xerces-c-devel python-pip json-c-devel apache-ivy java-1.7.0-openjdk-devel openssh-clients openssh-server \\\n && yum clean all\n#   install libcurl 7.45.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"http://curl.haxx.se/download/curl-7.45.0.tar.bz2\" -o curl-7.45.0.tar.bz2 \\\n && tar -xjf curl-7.45.0.tar.bz2 \\\n && cd curl-7.45.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build \\\n && ldconfig\nRUN curl -L \"http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo\" -o /etc/yum.repos.d/epel-apache-maven.repo \\\n && yum install -y apache-maven \\\n && yum clean all\n#   setup ssh server and keys for root\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\n#   setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh \\\n && echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh \\\n && chmod a+x /etc/profile.d/java.sh\n#   install boost 1.59\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\" -o boost_1_59_0.tar.bz2 \\\n && tar -xjf boost_1_59_0.tar.bz2 \\\n && cd boost_1_59_0 \\\n && ./bootstrap.sh \\\n && ./b2 --prefix=/usr -q \\\n && ./b2 --prefix=/usr -q install \\\n && rm -rf /tmp/build\n#   install bison 2.5.1\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"ftp://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz\" -o bison-2.5.1.tar.gz \\\n && tar -xzf bison-2.5.1.tar.gz \\\n && cd bison-2.5.1 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#   install thrift 0.9.2\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && curl -L \"http://www.us.apache.org/dist/thrift/0.9.2/thrift-0.9.2.tar.gz\" -o thrift-0.9.2.tar.gz \\\n && tar -xzf thrift-0.9.2.tar.gz \\\n && cd thrift-0.9.2 \\\n && ./configure --prefix=/usr --with-cpp=yes --with-boost=yes --with-qt4=no --with-csharp=no --with-java=no --with-erlang=no --enable-tests=no --with-nodejs=no --with-lua=no --with-python=no --with-perl=no --with-php=no \\\n && make \\\n && make install \\\n && rm -rf /tmp/build\n#   install protobuf 2.5.0\nRUN mkdir -p /tmp/build/ \\\n && cd /tmp/build \\\n && curl -L \"https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2\" -o protobuf-2.5.0.tar.bz2 \\\n && tar -xjf protobuf-2.5.0.tar.bz2 \\\n && cd protobuf-2.5.0 \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#   install libhdfs3\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && git clone https://github.com/PivotalRD/libhdfs3.git . \\\n && mkdir build \\\n && cd build \\\n && ../bootstrap --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#   install python module \nRUN yum makecache \\\n && yum install -y postgresql-devel \\\n && pip install pg8000 simplejson unittest2 pycrypto pygresql pyyaml lockfile paramiko psi --retries=50 --timeout=300 \\\n && pip install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz --retries=50 --timeout=300 \\\n && pip install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz/download --retries=50 --timeout=300 \\\n && yum erase -y postgresql postgresql-libs postgresql-devel \\\n && yum clean all\n#   install libyarn\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && git clone --depth=1 https://github.com/apache/incubator-hawq.git . \\\n && cd depends/libyarn \\\n && mkdir build \\\n && cd build \\\n && ../bootstrap --prefix=/usr \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/build\n#   create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin \\\n && useradd -u 1000 -g 1000 gpadmin \\\n && echo \"gpadmin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\n#   sudo should not require tty\nRUN sed -i -e 's|Defaults requiretty|#Defaults requiretty|' /etc/sudoers\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh \\\n && echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh \\\n && chmod a+x /etc/profile.d/user.sh\nENV BASEDIR=\"/data\"\nRUN mkdir -p /data \\\n && chmod 777 /data\nUSER gpadmin\n#   setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\nWORKDIR /data\n","originalDockerfileUglifiedHash":"ae7ca6c4968809e07516be7636e4de42","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1c2a3fd3931e208f64dd2b817df4e34e798ad309.dockerfile"}