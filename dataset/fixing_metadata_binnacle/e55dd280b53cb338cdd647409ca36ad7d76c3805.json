{"seed":1701866419,"processedDockerfileHash":"f22532cffbee01d493c431eef661e6c7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG BUILD_FROM=hassioaddons/base:3.1.1\n#   hadolint ignore=DL3006\nFROM ${BUILD_FROM}\n#   Set shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nENV PATH=\"${PATH}:/opt/pihole\" \\\n    CORE_TAG=\"v4.3\" \\\n    WEB_TAG=\"v4.3\" \\\n    FTL_TAG=\"v4.3\"\n#   We need to copy in the patches need during build\nCOPY rootfs/patches /patches\n#   Setup base\n#   hadolint ignore=DL3003\nRUN apk add gcc=8.3.0-r0 make=4.2.1-r2 musl-dev=1.1.20-r4 libexecinfo-dev=1.1-r0 linux-headers=4.18.13-r1 nettle-dev=3.4.1-r0 build-base=0.5-r1 --no-cache --virtual .build-dependencies \\\n && apk add bash=4.4.19-r1 bc=1.07.1-r0 bind-tools=9.12.4_p1-r1 coreutils=8.30-r0 git=2.20.1-r0 grep=3.1-r2 libcap=2.26-r0 libxml2=2.9.9-r1 logrotate=3.15.0-r0 ncurses=6.1_p20190105-r0 nginx=1.14.2-r1 openssl=1.1.1b-r1 perl=5.26.3-r0 php7-fileinfo=7.2.18-r0 php7-fpm=7.2.18-r0 php7-json=7.2.18-r0 php7-opcache=7.2.18-r00 php7-openssl=7.2.18-r0 php7-phar=7.2.18-r0 php7-session=7.2.18-r0 php7-sockets=7.2.18-r0 php7-sqlite3=7.2.18-r0 php7-zip=7.2.18-r0 procps=3.3.15-r0 psmisc=23.2-r1 sed=4.5-r0 sudo=1.8.25_p1-r2 wget=1.20.3-r0 --no-cache \\\n && addgroup -S pihole \\\n && adduser -S -s /sbin/nologin pihole pihole \\\n && addgroup pihole nginx \\\n && git clone --branch \"${CORE_TAG}\" --depth=1 https://github.com/pi-hole/pi-hole.git /etc/.pihole \\\n && git -C /etc/.pihole checkout -b master \\\n && git clone --branch \"${WEB_TAG}\" --depth=1 https://github.com/pi-hole/AdminLTE.git /var/www/html/admin \\\n && git -C /var/www/html/admin checkout -b master \\\n && git clone --branch \"${FTL_TAG}\" --depth=1 https://github.com/pi-hole/FTL.git /root/FTL \\\n && git -C /root/FTL checkout -b master \\\n && cd /root/FTL \\\n && patch -p1 < /patches/FTL/fix-poll-h-include-warning-on-musl.patch \\\n && patch -p1 < /patches/FTL/no-backtrace-on-musl.patch \\\n && make \\\n && mv /root/FTL/pihole-FTL /usr/bin \\\n && cd - \\\n && install -o pihole -Dm755 -d \"/opt/pihole\" \\\n && install -o pihole -Dm755 -t \"/opt/pihole\" /etc/.pihole/gravity.sh \\\n && install -o pihole -Dm755 -t \"/opt/pihole\" /etc/.pihole/advanced/Scripts/*.sh \\\n && install -o pihole -Dm755 -t \"/opt/pihole\" /etc/.pihole/advanced/Scripts/COL_TABLE \\\n && cd /etc/.pihole/ \\\n && patch -p1 < /patches/pihole/fix-killall-brain-damage.patch \\\n && install -o pihole -Dm755 -t \"/usr/local/bin\" /etc/.pihole/pihole \\\n && rm -f -r /root/FTL \\\n && apk del --purge .build-dependencies\n#   Copy root filesystem\nCOPY rootfs /\n#   Build arguments\nARG BUILD_ARCH\nARG BUILD_DATE\nARG BUILD_REF\nARG BUILD_VERSION\n#   Labels\nLABEL io.hass.name=\"Pi-hole\" \\\n      io.hass.description=\"Network-wide ad blocking using your Hass.io instance\" \\\n      io.hass.arch=\"${BUILD_ARCH}\" \\\n      io.hass.type=\"addon\" \\\n      io.hass.version=\"${BUILD_VERSION}\" \\\n      maintainer=\"Franck Nijhof <frenck@addons.community>\" \\\n      org.label-schema.description=\"Network-wide ad blocking using your Hass.io instance\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.name=\"Pi-hole\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.url=\"https://community.home-assistant.io/t/community-hass-io-add-on-pi-hole/33817?u=frenck\" \\\n      org.label-schema.usage=\"https://github.com/hassio-addons/addon-pi-hole/tree/master/README.md\" \\\n      org.label-schema.vcs-ref=\"${BUILD_REF}\" \\\n      org.label-schema.vcs-url=\"https://github.com/hassio-addons/addon-pi-hole\" \\\n      org.label-schema.vendor=\"Community Hass.io Addons\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG BUILD_FROM=hassioaddons/base:3.1.1\n#  hadolint ignore=DL3006\nFROM ${BUILD_FROM}\n#  Set shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nENV PATH=\"${PATH}:/opt/pihole\" \\\n    CORE_TAG=\"v4.3\" \\\n    WEB_TAG=\"v4.3\" \\\n    FTL_TAG=\"v4.3\"\n#  We need to copy in the patches need during build\nCOPY rootfs/patches /patches\n#  Setup base\n#  hadolint ignore=DL3003\nRUN apk add --no-cache --virtual .build-dependencies gcc=8.3.0-r0 make=4.2.1-r2 musl-dev=1.1.20-r4 libexecinfo-dev=1.1-r0 linux-headers=4.18.13-r1 nettle-dev=3.4.1-r0 build-base=0.5-r1 \\\n && apk add --no-cache bash=4.4.19-r1 bc=1.07.1-r0 bind-tools=9.12.4_p1-r1 coreutils=8.30-r0 git=2.20.1-r0 grep=3.1-r2 libcap=2.26-r0 libxml2=2.9.9-r1 logrotate=3.15.0-r0 ncurses=6.1_p20190105-r0 nginx=1.14.2-r1 openssl=1.1.1b-r1 perl=5.26.3-r0 php7-fileinfo=7.2.18-r0 php7-fpm=7.2.18-r0 php7-json=7.2.18-r0 php7-opcache=7.2.18-r00 php7-openssl=7.2.18-r0 php7-phar=7.2.18-r0 php7-session=7.2.18-r0 php7-sockets=7.2.18-r0 php7-sqlite3=7.2.18-r0 php7-zip=7.2.18-r0 procps=3.3.15-r0 psmisc=23.2-r1 sed=4.5-r0 sudo=1.8.25_p1-r2 wget=1.20.3-r0 \\\n && addgroup -S pihole \\\n && adduser -S -s /sbin/nologin pihole pihole \\\n && addgroup pihole nginx \\\n && git clone --branch \"${CORE_TAG}\" --depth=1 https://github.com/pi-hole/pi-hole.git /etc/.pihole \\\n && git -C /etc/.pihole checkout -b master \\\n && git clone --branch \"${WEB_TAG}\" --depth=1 https://github.com/pi-hole/AdminLTE.git /var/www/html/admin \\\n && git -C /var/www/html/admin checkout -b master \\\n && git clone --branch \"${FTL_TAG}\" --depth=1 https://github.com/pi-hole/FTL.git /root/FTL \\\n && git -C /root/FTL checkout -b master \\\n && cd /root/FTL \\\n && patch -p1 < /patches/FTL/fix-poll-h-include-warning-on-musl.patch \\\n && patch -p1 < /patches/FTL/no-backtrace-on-musl.patch \\\n && make \\\n && mv /root/FTL/pihole-FTL /usr/bin \\\n && cd - \\\n && install -o pihole -Dm755 -d \"/opt/pihole\" \\\n && install -o pihole -Dm755 -t \"/opt/pihole\" /etc/.pihole/gravity.sh \\\n && install -o pihole -Dm755 -t \"/opt/pihole\" /etc/.pihole/advanced/Scripts/*.sh \\\n && install -o pihole -Dm755 -t \"/opt/pihole\" /etc/.pihole/advanced/Scripts/COL_TABLE \\\n && cd /etc/.pihole/ \\\n && patch -p1 < /patches/pihole/fix-killall-brain-damage.patch \\\n && install -o pihole -Dm755 -t \"/usr/local/bin\" /etc/.pihole/pihole \\\n && rm -f -r /root/FTL \\\n && apk del --purge .build-dependencies\n#  Copy root filesystem\nCOPY rootfs /\n#  Build arguments\nARG BUILD_ARCH\nARG BUILD_DATE\nARG BUILD_REF\nARG BUILD_VERSION\n#  Labels\nLABEL io.hass.name=\"Pi-hole\" \\\n      io.hass.description=\"Network-wide ad blocking using your Hass.io instance\" \\\n      io.hass.arch=\"${BUILD_ARCH}\" \\\n      io.hass.type=\"addon\" \\\n      io.hass.version=\"${BUILD_VERSION}\" \\\n      maintainer=\"Franck Nijhof <frenck@addons.community>\" \\\n      org.label-schema.description=\"Network-wide ad blocking using your Hass.io instance\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.name=\"Pi-hole\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.url=\"https://community.home-assistant.io/t/community-hass-io-add-on-pi-hole/33817?u=frenck\" \\\n      org.label-schema.usage=\"https://github.com/hassio-addons/addon-pi-hole/tree/master/README.md\" \\\n      org.label-schema.vcs-ref=\"${BUILD_REF}\" \\\n      org.label-schema.vcs-url=\"https://github.com/hassio-addons/addon-pi-hole\" \\\n      org.label-schema.vendor=\"Community Hass.io Addons\"\n","injectedSmells":[],"originalDockerfileHash":"474d84e5cfbd94fa64577a3565706bb3","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG BUILD_FROM=hassioaddons/base:3.1.1\n#   hadolint ignore=DL3006\nFROM ${BUILD_FROM}\n#   Set shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nENV PATH=\"${PATH}:/opt/pihole\" \\\n    CORE_TAG=\"v4.3\" \\\n    WEB_TAG=\"v4.3\" \\\n    FTL_TAG=\"v4.3\"\n#   We need to copy in the patches need during build\nCOPY rootfs/patches /patches\n#   Setup base\n#   hadolint ignore=DL3003\nRUN apk add --no-cache --virtual .build-dependencies gcc=8.3.0-r0 make=4.2.1-r2 musl-dev=1.1.20-r4 libexecinfo-dev=1.1-r0 linux-headers=4.18.13-r1 nettle-dev=3.4.1-r0 build-base=0.5-r1 \\\n && apk add --no-cache bash=4.4.19-r1 bc=1.07.1-r0 bind-tools=9.12.4_p1-r1 coreutils=8.30-r0 git=2.20.1-r0 grep=3.1-r2 libcap=2.26-r0 libxml2=2.9.9-r1 logrotate=3.15.0-r0 ncurses=6.1_p20190105-r0 nginx=1.14.2-r1 openssl=1.1.1b-r1 perl=5.26.3-r0 php7-fileinfo=7.2.18-r0 php7-fpm=7.2.18-r0 php7-json=7.2.18-r0 php7-opcache=7.2.18-r00 php7-openssl=7.2.18-r0 php7-phar=7.2.18-r0 php7-session=7.2.18-r0 php7-sockets=7.2.18-r0 php7-sqlite3=7.2.18-r0 php7-zip=7.2.18-r0 procps=3.3.15-r0 psmisc=23.2-r1 sed=4.5-r0 sudo=1.8.25_p1-r2 wget=1.20.3-r0 \\\n && addgroup -S pihole \\\n && adduser -S -s /sbin/nologin pihole pihole \\\n && addgroup pihole nginx \\\n && git clone --branch \"${CORE_TAG}\" --depth=1 https://github.com/pi-hole/pi-hole.git /etc/.pihole \\\n && git -C /etc/.pihole checkout -b master \\\n && git clone --branch \"${WEB_TAG}\" --depth=1 https://github.com/pi-hole/AdminLTE.git /var/www/html/admin \\\n && git -C /var/www/html/admin checkout -b master \\\n && git clone --branch \"${FTL_TAG}\" --depth=1 https://github.com/pi-hole/FTL.git /root/FTL \\\n && git -C /root/FTL checkout -b master \\\n && cd /root/FTL \\\n && patch -p1 < /patches/FTL/fix-poll-h-include-warning-on-musl.patch \\\n && patch -p1 < /patches/FTL/no-backtrace-on-musl.patch \\\n && make \\\n && mv /root/FTL/pihole-FTL /usr/bin \\\n && cd - \\\n && install -o pihole -Dm755 -d \"/opt/pihole\" \\\n && install -o pihole -Dm755 -t \"/opt/pihole\" /etc/.pihole/gravity.sh \\\n && install -o pihole -Dm755 -t \"/opt/pihole\" /etc/.pihole/advanced/Scripts/*.sh \\\n && install -o pihole -Dm755 -t \"/opt/pihole\" /etc/.pihole/advanced/Scripts/COL_TABLE \\\n && cd /etc/.pihole/ \\\n && patch -p1 < /patches/pihole/fix-killall-brain-damage.patch \\\n && install -o pihole -Dm755 -t \"/usr/local/bin\" /etc/.pihole/pihole \\\n && rm -f -r /root/FTL \\\n && apk del --purge .build-dependencies\n#   Copy root filesystem\nCOPY rootfs /\n#   Build arguments\nARG BUILD_ARCH\nARG BUILD_DATE\nARG BUILD_REF\nARG BUILD_VERSION\n#   Labels\nLABEL io.hass.name=\"Pi-hole\" \\\n      io.hass.description=\"Network-wide ad blocking using your Hass.io instance\" \\\n      io.hass.arch=\"${BUILD_ARCH}\" \\\n      io.hass.type=\"addon\" \\\n      io.hass.version=\"${BUILD_VERSION}\" \\\n      maintainer=\"Franck Nijhof <frenck@addons.community>\" \\\n      org.label-schema.description=\"Network-wide ad blocking using your Hass.io instance\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.name=\"Pi-hole\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.url=\"https://community.home-assistant.io/t/community-hass-io-add-on-pi-hole/33817?u=frenck\" \\\n      org.label-schema.usage=\"https://github.com/hassio-addons/addon-pi-hole/tree/master/README.md\" \\\n      org.label-schema.vcs-ref=\"${BUILD_REF}\" \\\n      org.label-schema.vcs-url=\"https://github.com/hassio-addons/addon-pi-hole\" \\\n      org.label-schema.vendor=\"Community Hass.io Addons\"\n","originalDockerfileUglifiedHash":"bff8167776aa033a0eb6db61446b1f3f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e55dd280b53cb338cdd647409ca36ad7d76c3805.dockerfile"}