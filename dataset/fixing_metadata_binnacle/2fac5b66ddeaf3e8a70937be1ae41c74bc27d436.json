{"seed":1580908407,"processedDockerfileHash":"a22e067d996543cfa304258db109e691","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#\n#   Docker file that builds RelEx and starts the RelEx server.\n#\n#   To build:\n#      docker build -t relex/relex .\n#\n#   To start:\n#      docker run -p 3333:3333 relex/relex /bin/sh plain-text-server.sh\n#\n#   Or alternately, this:\n#      docker run -p 4444:4444 relex/relex /bin/sh opencog-server.sh\n#\n#      docker run -p 9000:9000 relex/relex /bin/sh link-grammar-server.sh\n#\n#   To demo:\n#      telnet localhost 4444\n#      This is a test sentence!\n#\n#   That is, after connecting by telnet, type in any sentence, ending\n#   with a period, and hit enter.  The response returned will be the\n#   parse of the sentence, in opencog scheme format.\n#\nFROM ubuntu:18.04\nMAINTAINER David Hart \"dhart@opencog.org\"\nMAINTAINER Linas Vepštas \"linasvepstas@gmail.com\"\n#   Avoid triggering apt-get dialogs (which may lead to errors). See:\n#   http://stackoverflow.com/questions/25019183/docker-java7-install-fail\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#   Change line below only if you really, really need a newer OS version.\n#   Otherwise, leave it alone, and the cache will be used.\nENV LAST_OS_UPDATE=\"2015-02-25\"\nRUN :\nRUN apt-get -y upgrade\nRUN (apt-get update ;apt-get install --no-install-recommends screen=4.6.2-1ubuntu1.1 telnet=0.17-41 netcat-openbsd=1.187-1ubuntu0.1 byobu=5.125-0ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.19.4-1ubuntu2.2 vim=2:8.0.1453-1ubuntu1.11 unzip=6.0-21ubuntu1.2 -y )\n#   GCC and basic build tools\nRUN (apt-get update ;apt-get install --no-install-recommends gcc=4:7.4.0-1ubuntu2.3 g++=4:7.4.0-1ubuntu2.3 make=4.1-9.1ubuntu1 -y )\n#   Java\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-8-jdk=8u362-ga-0ubuntu1~18.04.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends ant=1.10.5-3~18.04 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends maven=3.6.0-1~18.04.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libcommons-logging-java=1.2-2 -y )\n#   Wordnet\nRUN (apt-get update ;apt-get install --no-install-recommends wordnet=1:3.0-35 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends wordnet-dev=1:3.0-35 -y )\n#   RUN apt-get -y install wordnet-sense-index\n#   There are UTF8 chars in the Java sources, and the RelEx build will\n#   break if build in a C environment.\nRUN (apt-get update ;apt-get install --no-install-recommends locales=2.27-3ubuntu1.6 -y )\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN mkdir /usr/local/share/java\nWORKDIR /home/Downloads/\n#   Change line below on rebuild. Will use cache up to this line.\nENV LAST_SOFTWARE_UPDATE=\"2015-02-25\"\n#   Link Parser -- changes often\n#   Download the current released version of link-grammar.\n#   The wget gets the latest version w/ wildcard\nRUN wget -r --no-parent -nH --cut-dirs=2 http://www.abisource.com/downloads/link-grammar/current/\n#   Unpack the sources, too.\nRUN tar -zxf current/link-grammar-5*.tar.gz\nRUN (cd link-grammar-5.*/ ;./configure ;make -j6 ;make install ;ldconfig )\nRUN LINKGRAMMAR_JAR=`find ./link-grammar* -name linkgrammar*.jar ` \\\n && LINKGRAMMAR_VERSION=`echo $LINKGRAMMAR_JAR | grep -oP '(?<=-)\\\\d+\\\\.\\\\d+\\\\.\\\\d+(?=\\\\.)' ` \\\n && mvn install:install-file -Dfile=$LINKGRAMMAR_JAR -DgroupId=org.opencog -DartifactId=linkgrammar -Dversion=$LINKGRAMMAR_VERSION -Dpackaging=jar\n#   Relex -- changes often\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /home/Downloads/relex-master.zip http://github.com/opencog/relex/archive/master.zip\nRUN (unzip relex-master.zip ;cd relex-master ;mvn package )\n#   Create and switch user. The user is privileged, with no password\n#   required.  That is, you can use sudo.\nRUN adduser --disabled-password --gecos \"ReLex USER\" relex\nRUN adduser relex sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   Punch out ports\n#  # plain-text-server.sh port\nEXPOSE 3333/tcp\n#  # opencog-server.sh port\nEXPOSE 4444/tcp\n#  # link-grammar-server.sh port\nEXPOSE 9000/tcp\nWORKDIR /home/Downloads/relex-master/\nUSER relex\n#   ENTRYPOINT bash -l -c ./opencog-server.sh\nCMD /bin/bash\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Docker file that builds RelEx and starts the RelEx server.\n#\n#  To build:\n#     docker build -t relex/relex .\n#\n#  To start:\n#     docker run -p 3333:3333 relex/relex /bin/sh plain-text-server.sh\n#\n#  Or alternately, this:\n#     docker run -p 4444:4444 relex/relex /bin/sh opencog-server.sh\n#\n#     docker run -p 9000:9000 relex/relex /bin/sh link-grammar-server.sh\n#\n#  To demo:\n#     telnet localhost 4444\n#     This is a test sentence!\n#\n#  That is, after connecting by telnet, type in any sentence, ending\n#  with a period, and hit enter.  The response returned will be the\n#  parse of the sentence, in opencog scheme format.\n#\nFROM ubuntu:18.04\nMAINTAINER David Hart \"dhart@opencog.org\"\nMAINTAINER Linas Vepštas \"linasvepstas@gmail.com\"\n#  Avoid triggering apt-get dialogs (which may lead to errors). See:\n#  http://stackoverflow.com/questions/25019183/docker-java7-install-fail\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#  Change line below only if you really, really need a newer OS version.\n#  Otherwise, leave it alone, and the cache will be used.\nENV LAST_OS_UPDATE=\"2015-02-25\"\nRUN apt-get update -y\nRUN apt-get -y upgrade\nRUN apt-get install screen telnet netcat-openbsd byobu -y\nRUN apt-get install wget vim unzip -y\n#  GCC and basic build tools\nRUN apt-get install gcc g++ make -y\n#  Java\nRUN apt-get install openjdk-8-jdk -y\nRUN apt-get install ant -y\nRUN apt-get install maven -y\nRUN apt-get install libcommons-logging-java -y\n#  Wordnet\nRUN apt-get install wordnet -y\nRUN apt-get install wordnet-dev -y\n#  RUN apt-get -y install wordnet-sense-index\n#  There are UTF8 chars in the Java sources, and the RelEx build will\n#  break if build in a C environment.\nRUN apt-get install locales -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN mkdir /usr/local/share/java\nWORKDIR /home/Downloads/\n#  Change line below on rebuild. Will use cache up to this line.\nENV LAST_SOFTWARE_UPDATE=\"2015-02-25\"\n#  Link Parser -- changes often\n#  Download the current released version of link-grammar.\n#  The wget gets the latest version w/ wildcard\nRUN wget -r --no-parent -nH --cut-dirs=2 http://www.abisource.com/downloads/link-grammar/current/\n#  Unpack the sources, too.\nRUN tar -zxf current/link-grammar-5*.tar.gz\nRUN (cd link-grammar-5.*/ ;./configure ;make -j6 ;make install ;ldconfig )\nRUN LINKGRAMMAR_JAR=`find ./link-grammar* -name linkgrammar*.jar ` \\\n && LINKGRAMMAR_VERSION=`echo $LINKGRAMMAR_JAR | grep -oP '(?<=-)\\\\d+\\\\.\\\\d+\\\\.\\\\d+(?=\\\\.)' ` \\\n && mvn install:install-file -Dfile=$LINKGRAMMAR_JAR -DgroupId=org.opencog -DartifactId=linkgrammar -Dversion=$LINKGRAMMAR_VERSION -Dpackaging=jar\n#  Relex -- changes often\nADD http://github.com/opencog/relex/archive/master.zip /home/Downloads/relex-master.zip\nRUN (unzip relex-master.zip ;cd relex-master ;mvn package )\n#  Create and switch user. The user is privileged, with no password\n#  required.  That is, you can use sudo.\nRUN adduser --disabled-password --gecos \"ReLex USER\" relex\nRUN adduser relex sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#  Punch out ports\n# # plain-text-server.sh port\nEXPOSE 3333/tcp\n# # opencog-server.sh port\nEXPOSE 4444/tcp\n# # link-grammar-server.sh port\nEXPOSE 9000/tcp\nWORKDIR /home/Downloads/relex-master/\nUSER relex\n#  ENTRYPOINT bash -l -c ./opencog-server.sh\nCMD /bin/bash\n","injectedSmells":[],"originalDockerfileHash":"bd845814ba1e264f16fc16365e3abf77","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Docker file that builds RelEx and starts the RelEx server.\n#\n#   To build:\n#      docker build -t relex/relex .\n#\n#   To start:\n#      docker run -p 3333:3333 relex/relex /bin/sh plain-text-server.sh\n#\n#   Or alternately, this:\n#      docker run -p 4444:4444 relex/relex /bin/sh opencog-server.sh\n#\n#      docker run -p 9000:9000 relex/relex /bin/sh link-grammar-server.sh\n#\n#   To demo:\n#      telnet localhost 4444\n#      This is a test sentence!\n#\n#   That is, after connecting by telnet, type in any sentence, ending\n#   with a period, and hit enter.  The response returned will be the\n#   parse of the sentence, in opencog scheme format.\n#\nFROM ubuntu:18.04\nMAINTAINER David Hart \"dhart@opencog.org\"\nMAINTAINER Linas Vepštas \"linasvepstas@gmail.com\"\n#   Avoid triggering apt-get dialogs (which may lead to errors). See:\n#   http://stackoverflow.com/questions/25019183/docker-java7-install-fail\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#   Change line below only if you really, really need a newer OS version.\n#   Otherwise, leave it alone, and the cache will be used.\nENV LAST_OS_UPDATE=\"2015-02-25\"\nRUN apt-get update -y\nRUN apt-get -y upgrade\nRUN apt-get install screen telnet netcat-openbsd byobu -y\nRUN apt-get install wget vim unzip -y\n#   GCC and basic build tools\nRUN apt-get install gcc g++ make -y\n#   Java\nRUN apt-get install openjdk-8-jdk -y\nRUN apt-get install ant -y\nRUN apt-get install maven -y\nRUN apt-get install libcommons-logging-java -y\n#   Wordnet\nRUN apt-get install wordnet -y\nRUN apt-get install wordnet-dev -y\n#   RUN apt-get -y install wordnet-sense-index\n#   There are UTF8 chars in the Java sources, and the RelEx build will\n#   break if build in a C environment.\nRUN apt-get install locales -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN mkdir /usr/local/share/java\nWORKDIR /home/Downloads/\n#   Change line below on rebuild. Will use cache up to this line.\nENV LAST_SOFTWARE_UPDATE=\"2015-02-25\"\n#   Link Parser -- changes often\n#   Download the current released version of link-grammar.\n#   The wget gets the latest version w/ wildcard\nRUN wget -r --no-parent -nH --cut-dirs=2 http://www.abisource.com/downloads/link-grammar/current/\n#   Unpack the sources, too.\nRUN tar -zxf current/link-grammar-5*.tar.gz\nRUN (cd link-grammar-5.*/ ;./configure ;make -j6 ;make install ;ldconfig )\nRUN LINKGRAMMAR_JAR=`find ./link-grammar* -name linkgrammar*.jar ` \\\n && LINKGRAMMAR_VERSION=`echo $LINKGRAMMAR_JAR | grep -oP '(?<=-)\\\\d+\\\\.\\\\d+\\\\.\\\\d+(?=\\\\.)' ` \\\n && mvn install:install-file -Dfile=$LINKGRAMMAR_JAR -DgroupId=org.opencog -DartifactId=linkgrammar -Dversion=$LINKGRAMMAR_VERSION -Dpackaging=jar\n#   Relex -- changes often\nADD http://github.com/opencog/relex/archive/master.zip /home/Downloads/relex-master.zip\nRUN (unzip relex-master.zip ;cd relex-master ;mvn package )\n#   Create and switch user. The user is privileged, with no password\n#   required.  That is, you can use sudo.\nRUN adduser --disabled-password --gecos \"ReLex USER\" relex\nRUN adduser relex sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   Punch out ports\n#  # plain-text-server.sh port\nEXPOSE 3333/tcp\n#  # opencog-server.sh port\nEXPOSE 4444/tcp\n#  # link-grammar-server.sh port\nEXPOSE 9000/tcp\nWORKDIR /home/Downloads/relex-master/\nUSER relex\n#   ENTRYPOINT bash -l -c ./opencog-server.sh\nCMD /bin/bash\n","originalDockerfileUglifiedHash":"f1f275e81cbf38b78c0fc149dc2f4452","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2fac5b66ddeaf3e8a70937be1ae41c74bc27d436.dockerfile"}