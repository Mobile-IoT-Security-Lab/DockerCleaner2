{"seed":381689213,"processedDockerfileHash":"d34a843db911f014ea39d2c344d45a89","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Package creation tool for Kurento projects - Dockerfile\n#\n#   This Docker image is used to generate Debian packages from Kurento projects.\n#   It runs [kurento-buildpackage.sh][1] from a properly configured system.\n#\n#   [1]: https://github.com/Kurento/adm-scripts/blob/master/kurento-buildpackage.sh\n#\n#\n#   Build command\n#   -------------\n#\n#   docker build [Args...] --tag kurento/kurento-buildpackage:<UbuntuVersion> .\n#\n#\n#   Build arguments\n#   ---------------\n#\n#   --build-arg UBUNTU_VERSION=<UbuntuVersion>\n#\n#     <UbuntuVersion> is like \"xenial\", \"bionic\", etc.\n#     Valid values are listed here: https://hub.docker.com/_/buildpack-deps/\n#\n#     Optional. Default: \"xenial\".\n#\n#\n#   Run command\n#   -----------\n#\n#   git clone https://github.com/Kurento/kms-core.git\n#   cd kms-core/\n#   docker run --rm \\\n#       --mount type=bind,src=\"$PWD\",dst=/hostdir \\\n#       kurento/kurento-buildpackage:xenial \\\n#       --install-kurento nightly \\\n#       [RunArguments...]\n#\n#\n#   Run arguments\n#   -------------\n#\n#   It is possible to pass arguments to the `kurento-buildpackage.sh` script in\n#   this image: just append them to the `docker run` call.\n#\n#   The argument '--install-kurento <Version>' is strongly recommended, because\n#   this Docker image doesn't include any build dependencies.\n#\n#   Use '--help' to read about arguments accepted by *kurento-buildpackage*.\nARG UBUNTU_VERSION=xenial\nFROM buildpack-deps:${UBUNTU_VERSION}-curl\n#   Configure environment:\n#   * DEBIAN_FRONTEND: Disable interactive questions and messages\n#   * LANG: Set the default locale for all commands\n#   * PATH: Add the auxiliary scripts to the current PATH\n#   * PYTHONUNBUFFERED: Disable stdin/stdout/stderr buffering in Python\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LANG=\"C.UTF-8\" \\\n    PATH=\"/adm-scripts:${PATH}\" \\\n    PYTHONUNBUFFERED=\"1\"\n#   Configure `apt-get`:\n#   * Disable installation of recommended and suggested packages\nRUN echo 'APT::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/00recommends \\\n && echo 'APT::Install-Suggests \"false\";' >> /etc/apt/apt.conf.d/00recommends\n#   Install a basic set of packages\n#   * build-essential, cmake, pkg-config: For C/C++ based projects\n#   * Miscellaneous tools that are used by CI scripts\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential cmake pkg-config gnupg iproute2 zip unzip --yes \\\n && rm -rf /var/lib/apt/lists/*\n#   Install dependencies of 'kurento-buildpackage'\n#   (listed in the tool's help/header)\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3 python3-pip python3-setuptools python3-wheel devscripts dpkg-dev lintian git openssh-client lsb-release equivs coreutils --yes \\\n && rm -rf /var/lib/apt/lists/*\n#   Install 'git-buildpackage'\nRUN PIP_VERSION=\"$( python3 -c 'import pip; print(pip.__version__)' ;)\" dpkg --compare-versions \"$PIP_VERSION\" ge \"1.6.0\" \\\n && ARGS=\"--no-cache-dir\" ; pip3 $ARGS install --upgrade gbp==0.9.10\n#   Configure Git user, which will appear in the Debian Changelog files\n#   (this is needed by git-buildpackage)\nRUN git config --system user.name \"kurento-buildpackage\" \\\n && git config --system user.email \"kurento@googlegroups.com\"\n#   ------------ Final configuration ------------\n#   Configure `apt-get`:\n#   * Automatically cleaning the apt cache breaks 'd-devlibdeps' (d-shlibs) < 0.83\n#     so this workaround is needed:\n#     https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=916856\n#\n#     Also, this enables persistently caching downloaded packages. This allows\n#     setting up a persistent cache in an external Docker volume. Useful if you're\n#     doing lots of (re)builds and want to avoid downloading the same packages\n#     over and over again...\nRUN rm -f /etc/apt/apt.conf.d/docker-clean\n#   ------------ Runtime command ------------\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD []\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Package creation tool for Kurento projects - Dockerfile\n#\n#  This Docker image is used to generate Debian packages from Kurento projects.\n#  It runs [kurento-buildpackage.sh][1] from a properly configured system.\n#\n#  [1]: https://github.com/Kurento/adm-scripts/blob/master/kurento-buildpackage.sh\n#\n#\n#  Build command\n#  -------------\n#\n#  docker build [Args...] --tag kurento/kurento-buildpackage:<UbuntuVersion> .\n#\n#\n#  Build arguments\n#  ---------------\n#\n#  --build-arg UBUNTU_VERSION=<UbuntuVersion>\n#\n#    <UbuntuVersion> is like \"xenial\", \"bionic\", etc.\n#    Valid values are listed here: https://hub.docker.com/_/buildpack-deps/\n#\n#    Optional. Default: \"xenial\".\n#\n#\n#  Run command\n#  -----------\n#\n#  git clone https://github.com/Kurento/kms-core.git\n#  cd kms-core/\n#  docker run --rm \\\n#      --mount type=bind,src=\"$PWD\",dst=/hostdir \\\n#      kurento/kurento-buildpackage:xenial \\\n#      --install-kurento nightly \\\n#      [RunArguments...]\n#\n#\n#  Run arguments\n#  -------------\n#\n#  It is possible to pass arguments to the `kurento-buildpackage.sh` script in\n#  this image: just append them to the `docker run` call.\n#\n#  The argument '--install-kurento <Version>' is strongly recommended, because\n#  this Docker image doesn't include any build dependencies.\n#\n#  Use '--help' to read about arguments accepted by *kurento-buildpackage*.\nARG UBUNTU_VERSION=xenial\nFROM buildpack-deps:${UBUNTU_VERSION}-curl\n#  Configure environment:\n#  * DEBIAN_FRONTEND: Disable interactive questions and messages\n#  * LANG: Set the default locale for all commands\n#  * PATH: Add the auxiliary scripts to the current PATH\n#  * PYTHONUNBUFFERED: Disable stdin/stdout/stderr buffering in Python\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LANG=\"C.UTF-8\" \\\n    PATH=\"/adm-scripts:${PATH}\" \\\n    PYTHONUNBUFFERED=\"1\"\n#  Configure `apt-get`:\n#  * Disable installation of recommended and suggested packages\nRUN echo 'APT::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/00recommends \\\n && echo 'APT::Install-Suggests \"false\";' >> /etc/apt/apt.conf.d/00recommends\n#  Install a basic set of packages\n#  * build-essential, cmake, pkg-config: For C/C++ based projects\n#  * Miscellaneous tools that are used by CI scripts\nRUN apt-get update \\\n && apt-get install build-essential cmake pkg-config gnupg iproute2 zip unzip --yes \\\n && rm -rf /var/lib/apt/lists/*\n#  Install dependencies of 'kurento-buildpackage'\n#  (listed in the tool's help/header)\nRUN apt-get update \\\n && apt-get install python3 python3-pip python3-setuptools python3-wheel devscripts dpkg-dev lintian git openssh-client lsb-release equivs coreutils --yes \\\n && rm -rf /var/lib/apt/lists/*\n#  Install 'git-buildpackage'\nRUN PIP_VERSION=\"$( python3 -c 'import pip; print(pip.__version__)' ;)\" dpkg --compare-versions \"$PIP_VERSION\" ge \"1.6.0\" \\\n && ARGS=\"--no-cache-dir\" ; pip3 $ARGS install --upgrade gbp==0.9.10\n#  Configure Git user, which will appear in the Debian Changelog files\n#  (this is needed by git-buildpackage)\nRUN git config --system user.name \"kurento-buildpackage\" \\\n && git config --system user.email \"kurento@googlegroups.com\"\n#  ------------ Final configuration ------------\n#  Configure `apt-get`:\n#  * Automatically cleaning the apt cache breaks 'd-devlibdeps' (d-shlibs) < 0.83\n#    so this workaround is needed:\n#    https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=916856\n#\n#    Also, this enables persistently caching downloaded packages. This allows\n#    setting up a persistent cache in an external Docker volume. Useful if you're\n#    doing lots of (re)builds and want to avoid downloading the same packages\n#    over and over again...\nRUN rm -f /etc/apt/apt.conf.d/docker-clean\n#  ------------ Runtime command ------------\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD []\n","injectedSmells":[],"originalDockerfileHash":"84853b1c41ac407bba8a2cf416c01d7d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Package creation tool for Kurento projects - Dockerfile\n#\n#   This Docker image is used to generate Debian packages from Kurento projects.\n#   It runs [kurento-buildpackage.sh][1] from a properly configured system.\n#\n#   [1]: https://github.com/Kurento/adm-scripts/blob/master/kurento-buildpackage.sh\n#\n#\n#   Build command\n#   -------------\n#\n#   docker build [Args...] --tag kurento/kurento-buildpackage:<UbuntuVersion> .\n#\n#\n#   Build arguments\n#   ---------------\n#\n#   --build-arg UBUNTU_VERSION=<UbuntuVersion>\n#\n#     <UbuntuVersion> is like \"xenial\", \"bionic\", etc.\n#     Valid values are listed here: https://hub.docker.com/_/buildpack-deps/\n#\n#     Optional. Default: \"xenial\".\n#\n#\n#   Run command\n#   -----------\n#\n#   git clone https://github.com/Kurento/kms-core.git\n#   cd kms-core/\n#   docker run --rm \\\n#       --mount type=bind,src=\"$PWD\",dst=/hostdir \\\n#       kurento/kurento-buildpackage:xenial \\\n#       --install-kurento nightly \\\n#       [RunArguments...]\n#\n#\n#   Run arguments\n#   -------------\n#\n#   It is possible to pass arguments to the `kurento-buildpackage.sh` script in\n#   this image: just append them to the `docker run` call.\n#\n#   The argument '--install-kurento <Version>' is strongly recommended, because\n#   this Docker image doesn't include any build dependencies.\n#\n#   Use '--help' to read about arguments accepted by *kurento-buildpackage*.\nARG UBUNTU_VERSION=xenial\nFROM buildpack-deps:${UBUNTU_VERSION}-curl\n#   Configure environment:\n#   * DEBIAN_FRONTEND: Disable interactive questions and messages\n#   * LANG: Set the default locale for all commands\n#   * PATH: Add the auxiliary scripts to the current PATH\n#   * PYTHONUNBUFFERED: Disable stdin/stdout/stderr buffering in Python\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LANG=\"C.UTF-8\" \\\n    PATH=\"/adm-scripts:${PATH}\" \\\n    PYTHONUNBUFFERED=\"1\"\n#   Configure `apt-get`:\n#   * Disable installation of recommended and suggested packages\nRUN echo 'APT::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/00recommends \\\n && echo 'APT::Install-Suggests \"false\";' >> /etc/apt/apt.conf.d/00recommends\n#   Install a basic set of packages\n#   * build-essential, cmake, pkg-config: For C/C++ based projects\n#   * Miscellaneous tools that are used by CI scripts\nRUN apt-get update \\\n && apt-get install build-essential cmake pkg-config gnupg iproute2 zip unzip --yes \\\n && rm -rf /var/lib/apt/lists/*\n#   Install dependencies of 'kurento-buildpackage'\n#   (listed in the tool's help/header)\nRUN apt-get update \\\n && apt-get install python3 python3-pip python3-setuptools python3-wheel devscripts dpkg-dev lintian git openssh-client lsb-release equivs coreutils --yes \\\n && rm -rf /var/lib/apt/lists/*\n#   Install 'git-buildpackage'\nRUN PIP_VERSION=\"$( python3 -c 'import pip; print(pip.__version__)' ;)\" dpkg --compare-versions \"$PIP_VERSION\" ge \"1.6.0\" \\\n && ARGS=\"--no-cache-dir\" ; pip3 $ARGS install --upgrade gbp==0.9.10\n#   Configure Git user, which will appear in the Debian Changelog files\n#   (this is needed by git-buildpackage)\nRUN git config --system user.name \"kurento-buildpackage\" \\\n && git config --system user.email \"kurento@googlegroups.com\"\n#   ------------ Final configuration ------------\n#   Configure `apt-get`:\n#   * Automatically cleaning the apt cache breaks 'd-devlibdeps' (d-shlibs) < 0.83\n#     so this workaround is needed:\n#     https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=916856\n#\n#     Also, this enables persistently caching downloaded packages. This allows\n#     setting up a persistent cache in an external Docker volume. Useful if you're\n#     doing lots of (re)builds and want to avoid downloading the same packages\n#     over and over again...\nRUN rm -f /etc/apt/apt.conf.d/docker-clean\n#   ------------ Runtime command ------------\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD []\n","originalDockerfileUglifiedHash":"46bef9ef0d64cd91931c95176e5cc0d5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/10ef62f265f44e0e79ca40df488fcc8e72a9cb17.dockerfile"}