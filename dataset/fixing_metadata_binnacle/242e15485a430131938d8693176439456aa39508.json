{"seed":2730589261,"processedDockerfileHash":"498efd24be6d9bd42bbd42d12e28d122","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-user"],"processedDockerfile":"FROM alpine:3.7\n#   Internals, you probably don't need to change these\nENV APP_DIR=\"/srv/app\"\nENV SRC_DIR=\"/srv/app/src\"\nENV CKAN_INI=\"${APP_DIR}/production.ini\"\nENV PIP_SRC=\"${SRC_DIR}\"\nENV CKAN_STORAGE_PATH=\"/var/lib/ckan\"\nENV GIT_URL=\"https://github.com/ckan/ckan.git\"\n#   CKAN version to build\nENV GIT_BRANCH=\"ckan-2.7.5\"\n#   Customize these on the .env file if needed\nENV CKAN_SITE_URL=\"http://localhost:5000\"\nENV CKAN__PLUGINS=\"image_view text_view recline_view datastore datapusher envvars\"\nWORKDIR ${APP_DIR}\n#   Install necessary packages to run CKAN\nRUN apk add tzdata=2019c-r0 git=2.15.4-r0 gettext=0.19.8.1-r1 postgresql-client=10.10-r0 python apache2-utils=2.4.41-r0 libxml2=2.9.8-r1 libxslt=1.1.31-r2 musl-dev=1.1.18-r4 uwsgi=2.0.17-r0 uwsgi-http=2.0.17-r0 uwsgi-corerouter=2.0.17-r0 uwsgi-python=2.0.17-r0 py2-gevent=1.2.2-r0 uwsgi-gevent=2.0.17-r0 libmagic=5.32-r2 curl=7.61.1-r3 sudo=1.8.21_p2-r1 --no-cache \\\n && apk add postgresql-dev=10.10-r0 gcc=6.4.0-r5 make=4.2.1-r0 g++=6.4.0-r5 autoconf=2.69-r0 automake=1.15.1-r0 libtool=2.4.6-r4 python-dev libxml2-dev=2.9.8-r1 libxslt-dev=1.1.31-r2 linux-headers=4.4.6-r2 --no-cache --virtual .build-deps \\\n && mkdir -p ${SRC_DIR} \\\n && curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python ${SRC_DIR}/get-pip.py \\\n && pip install supervisor==4.2.5 \\\n && mkdir /etc/supervisord.d \\\n && rm -rf ${SRC_DIR}/get-pip.py\nRUN echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk add geos@testing geos-dev@testing py-geos@testing --update --no-cache\nCOPY setup/supervisord.conf /etc\n#   Install CKAN\nRUN pip install -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan \\\n && cd ${SRC_DIR}/ckan \\\n && cp who.ini ${APP_DIR} \\\n && sed -i -e \"s/psycopg2==2.4.5/psycopg2==2.7.3.2/g\" requirements.txt \\\n && pip install :all:==null --no-binary -r requirements.txt \\\n && pip install -e git+https://github.com/okfn/ckanext-envvars.git#egg=ckanext-envvars \\\n && paster --plugin=ckan make-config ckan ${CKAN_INI} \\\n && paster --plugin=ckan config-tool ${CKAN_INI} \"ckan.plugins = ${CKAN__PLUGINS}\" \\\n && paster --plugin=ckan config-tool ${CKAN_INI} \"ckan.site_url = ${CKAN__SITE_URL}\"\n#   Create a local user and group to run the app\nRUN addgroup -g 92 -S ckan \\\n && adduser -u 92 -h /srv/app -H -D -S -G ckan ckan\n#   Create local storage folder\nRUN mkdir -p $CKAN_STORAGE_PATH \\\n && chown -R ckan:ckan $CKAN_STORAGE_PATH\nCOPY setup ${APP_DIR}\nCOPY setup/supervisor.worker.conf /etc/supervisord.d/worker.conf\nCOPY setup/uwsgi.conf /srv/app/uwsgi.conf\n#   Create entrypoint directory for children image scripts\nONBUILD RUN mkdir /docker-entrypoint.d\nRUN chown ckan -R /srv/app\nEXPOSE 5000/tcp\nHEALTHCHECK --interval=10s --timeout=5s --retries=5 CMD curl --fail http://localhost:5000/api/3/action/status_show || exit 1\nCMD [\"/srv/app/start_ckan.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n","originalDockerfile":"FROM alpine:3.7\n#  Internals, you probably don't need to change these\nENV APP_DIR=\"/srv/app\"\nENV SRC_DIR=\"/srv/app/src\"\nENV CKAN_INI=\"${APP_DIR}/production.ini\"\nENV PIP_SRC=\"${SRC_DIR}\"\nENV CKAN_STORAGE_PATH=\"/var/lib/ckan\"\nENV GIT_URL=\"https://github.com/ckan/ckan.git\"\n#  CKAN version to build\nENV GIT_BRANCH=\"ckan-2.7.5\"\n#  Customize these on the .env file if needed\nENV CKAN_SITE_URL=\"http://localhost:5000\"\nENV CKAN__PLUGINS=\"image_view text_view recline_view datastore datapusher envvars\"\nWORKDIR ${APP_DIR}\n#  Install necessary packages to run CKAN\nRUN apk add --no-cache tzdata git gettext postgresql-client python apache2-utils libxml2 libxslt musl-dev uwsgi uwsgi-http uwsgi-corerouter uwsgi-python py2-gevent uwsgi-gevent libmagic curl sudo \\\n && apk add --no-cache --virtual .build-deps postgresql-dev gcc make g++ autoconf automake libtool python-dev libxml2-dev libxslt-dev linux-headers \\\n && mkdir -p ${SRC_DIR} \\\n && curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python ${SRC_DIR}/get-pip.py \\\n && pip install supervisor \\\n && mkdir /etc/supervisord.d \\\n && rm -rf ${SRC_DIR}/get-pip.py\nRUN echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk add --update --no-cache geos@testing geos-dev@testing py-geos@testing\nCOPY setup/supervisord.conf /etc\n#  Install CKAN\nRUN pip install -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan \\\n && cd ${SRC_DIR}/ckan \\\n && cp who.ini ${APP_DIR} \\\n && sed -i -e \"s/psycopg2==2.4.5/psycopg2==2.7.3.2/g\" requirements.txt \\\n && pip install :all: --no-binary -r requirements.txt \\\n && pip install -e git+https://github.com/okfn/ckanext-envvars.git#egg=ckanext-envvars \\\n && paster --plugin=ckan make-config ckan ${CKAN_INI} \\\n && paster --plugin=ckan config-tool ${CKAN_INI} \"ckan.plugins = ${CKAN__PLUGINS}\" \\\n && paster --plugin=ckan config-tool ${CKAN_INI} \"ckan.site_url = ${CKAN__SITE_URL}\"\n#  Create a local user and group to run the app\nRUN addgroup -g 92 -S ckan \\\n && adduser -u 92 -h /srv/app -H -D -S -G ckan ckan\n#  Create local storage folder\nRUN mkdir -p $CKAN_STORAGE_PATH \\\n && chown -R ckan:ckan $CKAN_STORAGE_PATH\nCOPY setup ${APP_DIR}\nCOPY setup/supervisor.worker.conf /etc/supervisord.d/worker.conf\nCOPY setup/uwsgi.conf /srv/app/uwsgi.conf\n#  Create entrypoint directory for children image scripts\nONBUILD RUN mkdir /docker-entrypoint.d\nRUN chown ckan -R /srv/app\nEXPOSE 5000/tcp\nHEALTHCHECK --interval=10s --timeout=5s --retries=5 CMD curl --fail http://localhost:5000/api/3/action/status_show || exit 1\nCMD [\"/srv/app/start_ckan.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"47bb12e2f808ca81455d20d8a2c17c4d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.7\n#   Internals, you probably don't need to change these\nENV APP_DIR=\"/srv/app\"\nENV SRC_DIR=\"/srv/app/src\"\nENV CKAN_INI=\"${APP_DIR}/production.ini\"\nENV PIP_SRC=\"${SRC_DIR}\"\nENV CKAN_STORAGE_PATH=\"/var/lib/ckan\"\nENV GIT_URL=\"https://github.com/ckan/ckan.git\"\n#   CKAN version to build\nENV GIT_BRANCH=\"ckan-2.7.5\"\n#   Customize these on the .env file if needed\nENV CKAN_SITE_URL=\"http://localhost:5000\"\nENV CKAN__PLUGINS=\"image_view text_view recline_view datastore datapusher envvars\"\nWORKDIR ${APP_DIR}\n#   Install necessary packages to run CKAN\nRUN apk add --no-cache tzdata git gettext postgresql-client python apache2-utils libxml2 libxslt musl-dev uwsgi uwsgi-http uwsgi-corerouter uwsgi-python py2-gevent uwsgi-gevent libmagic curl sudo \\\n && apk add --no-cache --virtual .build-deps postgresql-dev gcc make g++ autoconf automake libtool python-dev libxml2-dev libxslt-dev linux-headers \\\n && mkdir -p ${SRC_DIR} \\\n && curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python ${SRC_DIR}/get-pip.py \\\n && pip install supervisor \\\n && mkdir /etc/supervisord.d \\\n && rm -rf ${SRC_DIR}/get-pip.py\nRUN echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk add --update --no-cache geos@testing geos-dev@testing py-geos@testing\nCOPY setup/supervisord.conf /etc\n#   Install CKAN\nRUN pip install -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan \\\n && cd ${SRC_DIR}/ckan \\\n && cp who.ini ${APP_DIR} \\\n && sed -i -e \"s/psycopg2==2.4.5/psycopg2==2.7.3.2/g\" requirements.txt \\\n && pip install :all: --no-binary -r requirements.txt \\\n && pip install -e git+https://github.com/okfn/ckanext-envvars.git#egg=ckanext-envvars \\\n && paster --plugin=ckan make-config ckan ${CKAN_INI} \\\n && paster --plugin=ckan config-tool ${CKAN_INI} \"ckan.plugins = ${CKAN__PLUGINS}\" \\\n && paster --plugin=ckan config-tool ${CKAN_INI} \"ckan.site_url = ${CKAN__SITE_URL}\"\n#   Create a local user and group to run the app\nRUN addgroup -g 92 -S ckan \\\n && adduser -u 92 -h /srv/app -H -D -S -G ckan ckan\n#   Create local storage folder\nRUN mkdir -p $CKAN_STORAGE_PATH \\\n && chown -R ckan:ckan $CKAN_STORAGE_PATH\nCOPY setup ${APP_DIR}\nCOPY setup/supervisor.worker.conf /etc/supervisord.d/worker.conf\nCOPY setup/uwsgi.conf /srv/app/uwsgi.conf\n#   Create entrypoint directory for children image scripts\nONBUILD RUN mkdir /docker-entrypoint.d\nRUN chown ckan -R /srv/app\nEXPOSE 5000/tcp\nHEALTHCHECK --interval=10s --timeout=5s --retries=5 CMD curl --fail http://localhost:5000/api/3/action/status_show || exit 1\nCMD [\"/srv/app/start_ckan.sh\"]\n","originalDockerfileUglifiedHash":"bc8da56094ce602d246ac52b541efbaf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/242e15485a430131938d8693176439456aa39508.dockerfile"}