{"seed":2135545897,"processedDockerfileHash":"a749fa6f32ab9e2198d813e19d31a7c2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:bionic\nENV NODE_VERSION=\"8.11.2\"\nENV YARN_VERSION=\"1.7.0\"\nENV DSPACE_ANGULAR_GIT=\"https://github.com/DSpace/dspace-angular.git\"\nENV DSPACE7-SPRING-REST=\"https://dspace7.4science.it/dspace-spring-rest/\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=1.6.14 build-essential=12.4ubuntu1 bash-completion=1:2.8-1ubuntu1 ca-certificates=20211016ubuntu0.18.04.1 curl=7.58.0-2ubuntu3.24 gcc=4:7.4.0-1ubuntu2.3 git=1:2.17.1-1ubuntu0.17 gnupg=2.2.4-1ubuntu1.6 less=487-0.1 libkrb5-dev=1.16-2ubuntu0.4 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 locales=2.27-3ubuntu1.6 make=4.1-9.1ubuntu1 python=2.7.15~rc1-1 ruby-full=1:2.5.1 rubygems-integration=1.11 screen=4.6.2-1ubuntu1.1 software-properties-common=0.96.24.32.20 sudo=1.8.21p2-3ubuntu1.5 unzip=6.0-21ubuntu1.2 vim=2:8.0.1453-1ubuntu1.11 wget=1.19.4-1ubuntu2.2 -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\nWORKDIR /tmp\nRUN mkdir -p /root/.gnupg \\\n && chmod 700 /root/.gnupg\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#  Create DSpace folders\nRUN mkdir -p /dspace-angular /home/dspace\n#  ##\n#   Bash configuration\n#  ##\n#  Configure colors and autocompletion\nCOPY bashrc /home/dspace/.bashrc\n#   fill the bash history with some commands\nCOPY bash_history /home/dspace/.bash_history\n#   Configure other useful dotfiles\nCOPY screenrc /home/dspace/.screenrc\nCOPY vimrc /home/dspace/.vimrc\nCOPY gitconfig /home/dspace/.gitconfig\nRUN mkdir /home/dspace/.vimbackup\n#   create user\nRUN export HOME=/home/dspace\nRUN export uid=1000 gid=1000 \\\n && mkdir -p /home/dspace \\\n && echo \"dspace:x:${uid}:${gid}:DSpace,,,:/home/dspace:/bin/bash\" >> /etc/passwd \\\n && echo \"dspace:x:${uid}:\" >> /etc/group \\\n && echo \"dspace ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/dspace \\\n && chmod 0440 /etc/sudoers.d/dspace \\\n && chown ${uid}:${gid} -R /home/dspace\n#   Fix permissions\nRUN chown -R dspace:dspace /dspace-angular /home/dspace\n#   Change the current user\nUSER dspace\n#   preload node_modules\nRUN git clone ${DSPACE_ANGULAR_GIT} /tmp/dspace-angular \\\n && cd /tmp/dspace-angular \\\n && yarn install \\\n && cd - \\\n && rm -rf /tmp/dspace-angular\nWORKDIR /dspace-angular\n#   3000 for node\n#   8080 to test if changing the port by an environment variable works\n#   9876 to see test coverage\nEXPOSE 3000/tcp 8080/tcp 9876/tcp\nCMD tail -f /dev/null\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:bionic\nENV NODE_VERSION=\"8.11.2\"\nENV YARN_VERSION=\"1.7.0\"\nENV DSPACE_ANGULAR_GIT=\"https://github.com/DSpace/dspace-angular.git\"\nENV DSPACE7-SPRING-REST=\"https://dspace7.4science.it/dspace-spring-rest/\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https build-essential bash-completion ca-certificates curl gcc git gnupg less libkrb5-dev libssl-dev locales make python ruby-full rubygems-integration screen software-properties-common sudo unzip vim wget -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\nWORKDIR /tmp\nRUN mkdir -p /root/.gnupg \\\n && chmod 700 /root/.gnupg\n#  gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n# Create DSpace folders\nRUN mkdir -p /dspace-angular /home/dspace\n# ##\n#  Bash configuration\n# ##\n# Configure colors and autocompletion\nCOPY bashrc /home/dspace/.bashrc\n#  fill the bash history with some commands\nCOPY bash_history /home/dspace/.bash_history\n#  Configure other useful dotfiles\nCOPY screenrc /home/dspace/.screenrc\nCOPY vimrc /home/dspace/.vimrc\nCOPY gitconfig /home/dspace/.gitconfig\nRUN mkdir /home/dspace/.vimbackup\n#  create user\nRUN export HOME=/home/dspace\nRUN export uid=1000 gid=1000 \\\n && mkdir -p /home/dspace \\\n && echo \"dspace:x:${uid}:${gid}:DSpace,,,:/home/dspace:/bin/bash\" >> /etc/passwd \\\n && echo \"dspace:x:${uid}:\" >> /etc/group \\\n && echo \"dspace ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/dspace \\\n && chmod 0440 /etc/sudoers.d/dspace \\\n && chown ${uid}:${gid} -R /home/dspace\n#  Fix permissions\nRUN chown -R dspace:dspace /dspace-angular /home/dspace\n#  Change the current user\nUSER dspace\n#  preload node_modules\nRUN git clone ${DSPACE_ANGULAR_GIT} /tmp/dspace-angular \\\n && cd /tmp/dspace-angular \\\n && yarn install \\\n && cd - \\\n && rm -rf /tmp/dspace-angular\nWORKDIR /dspace-angular\n#  3000 for node\n#  8080 to test if changing the port by an environment variable works\n#  9876 to see test coverage\nEXPOSE 3000/tcp 8080/tcp 9876/tcp\nCMD tail -f /dev/null\n","injectedSmells":[],"originalDockerfileHash":"ae82a1d91576fba166cb2d717f49d829","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:bionic\nENV NODE_VERSION=\"8.11.2\"\nENV YARN_VERSION=\"1.7.0\"\nENV DSPACE_ANGULAR_GIT=\"https://github.com/DSpace/dspace-angular.git\"\nENV DSPACE7-SPRING-REST=\"https://dspace7.4science.it/dspace-spring-rest/\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https build-essential bash-completion ca-certificates curl gcc git gnupg less libkrb5-dev libssl-dev locales make python ruby-full rubygems-integration screen software-properties-common sudo unzip vim wget -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\nWORKDIR /tmp\nRUN mkdir -p /root/.gnupg \\\n && chmod 700 /root/.gnupg\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#  Create DSpace folders\nRUN mkdir -p /dspace-angular /home/dspace\n#  ##\n#   Bash configuration\n#  ##\n#  Configure colors and autocompletion\nCOPY bashrc /home/dspace/.bashrc\n#   fill the bash history with some commands\nCOPY bash_history /home/dspace/.bash_history\n#   Configure other useful dotfiles\nCOPY screenrc /home/dspace/.screenrc\nCOPY vimrc /home/dspace/.vimrc\nCOPY gitconfig /home/dspace/.gitconfig\nRUN mkdir /home/dspace/.vimbackup\n#   create user\nRUN export HOME=/home/dspace\nRUN export uid=1000 gid=1000 \\\n && mkdir -p /home/dspace \\\n && echo \"dspace:x:${uid}:${gid}:DSpace,,,:/home/dspace:/bin/bash\" >> /etc/passwd \\\n && echo \"dspace:x:${uid}:\" >> /etc/group \\\n && echo \"dspace ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/dspace \\\n && chmod 0440 /etc/sudoers.d/dspace \\\n && chown ${uid}:${gid} -R /home/dspace\n#   Fix permissions\nRUN chown -R dspace:dspace /dspace-angular /home/dspace\n#   Change the current user\nUSER dspace\n#   preload node_modules\nRUN git clone ${DSPACE_ANGULAR_GIT} /tmp/dspace-angular \\\n && cd /tmp/dspace-angular \\\n && yarn install \\\n && cd - \\\n && rm -rf /tmp/dspace-angular\nWORKDIR /dspace-angular\n#   3000 for node\n#   8080 to test if changing the port by an environment variable works\n#   9876 to see test coverage\nEXPOSE 3000/tcp 8080/tcp 9876/tcp\nCMD tail -f /dev/null\n","originalDockerfileUglifiedHash":"309cd5aaebe0e72193a028b1dbe6a670","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e694426ef5c92f0e9d5c6dab52ac3d9492e2e5d5.dockerfile"}