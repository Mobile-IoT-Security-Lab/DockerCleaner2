{"seed":946016951,"processedDockerfileHash":"f9d622b183c24d0f25d2fa26a1bf8d44","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#  upstream https://github.com/blacklabelops/jira\nFROM blacklabelops/alpine:3.7\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add tzdata \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#   Note that you also need to update buildscripts/release.sh when the\n#   Jira version changes\nARG JIRA_VERSION=7.3.8\nARG JIRA_PRODUCT=jira-software\n#   Permissions, set the linux user id and group id\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\n#   Image Build Date By Buildsystem\nARG BUILD_DATE=undefined\nENV JIRA_USER=\"jira\" \\\n    JIRA_GROUP=\"jira\" \\\n    JIRA_CONTEXT_PATH=\"ROOT\" \\\n    JIRA_HOME=\"/var/atlassian/jira\" \\\n    JIRA_INSTALL=\"/opt/atlassian/jira\" \\\n    JIRA_SCRIPTS=\"/usr/local/share/atlassian\" \\\n    MYSQL_DRIVER_VERSION=\"5.1.44\" \\\n    DOCKERIZE_VERSION=\"v0.4.0\"\nENV JAVA_HOME=\"$JIRA_INSTALL/jre\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nCOPY imagescripts ${JIRA_SCRIPTS}\nCOPY atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin /tmp/jira.bin\nRUN apk add ca-certificates gzip curl tini wget xmlstarlet --update \\\n && export GLIBC_VERSION=2.26-r0 \\\n && wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \\\n && apk add /tmp/glibc-${GLIBC_VERSION}.apk --allow-untrusted \\\n && wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk \\\n && apk add /tmp/glibc-bin-${GLIBC_VERSION}.apk --allow-untrusted \\\n && wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk \\\n && apk add /tmp/glibc-i18n-${GLIBC_VERSION}.apk --allow-untrusted \\\n && export JIRA_BIN=atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin \\\n && mkdir -p ${JIRA_HOME} \\\n && mkdir -p ${JIRA_INSTALL} \\\n && chmod +x /tmp/jira.bin \\\n && /tmp/jira.bin -q -varfile ${JIRA_SCRIPTS}/response.varfile \\\n && rm -f ${JIRA_INSTALL}/lib/mysql-connector-java*.jar \\\n && wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz \\\n && tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz --directory=/tmp \\\n && cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar ${JIRA_INSTALL}/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar \\\n && export CONTAINER_USER=jira \\\n && export CONTAINER_UID=1000 \\\n && export CONTAINER_GROUP=jira \\\n && export CONTAINER_GID=1000 \\\n && addgroup -g $CONTAINER_GID $CONTAINER_GROUP \\\n && adduser -u $CONTAINER_UID -G $CONTAINER_GROUP -h /home/$CONTAINER_USER -s /bin/bash -S $CONTAINER_USER \\\n && export KEYSTORE=$JAVA_HOME/lib/security/cacerts \\\n && wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der \\\n && wget -O /home/${JIRA_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class \\\n && chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_HOME} \\\n && chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_INSTALL} \\\n && chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_SCRIPTS} \\\n && chown -R $JIRA_USER:$JIRA_GROUP /home/${JIRA_USER} \\\n && wget -O /tmp/dockerize.tar.gz https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz \\\n && rm /tmp/dockerize.tar.gz \\\n && apk del ca-certificates gzip wget \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/log/*\n#   add patch\nCOPY atlassian-extras-3.2.jar $JIRA_INSTALL/atlassian-jira/WEB-INF/lib/atlassian-extras-3.2.jar\nCOPY atlassian-universal-plugin-manager-plugin-2.22.2.jar $JIRA_INSTALL/atlassian-jira/WEB-INF/atlassian-bundled-plugins/atlassian-universal-plugin-manager-plugin-2.22.2.jar\n#   Image Metadata\nLABEL com.blacklabelops.application.jira.version=\"$JIRA_PRODUCT-$JIRA_VERSION\" \\\n      com.blacklabelops.application.jira.userid=\"$CONTAINER_UID\" \\\n      com.blacklabelops.application.jira.groupid=\"$CONTAINER_GID\" \\\n      com.blacklabelops.image.builddate.jira=\"${BUILD_DATE}\"\nUSER jira\nWORKDIR ${JIRA_HOME}\nVOLUME [\"/var/atlassian/jira\"]\nEXPOSE 8080/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/share/atlassian/docker-entrypoint.sh\"]\nCMD [\"jira\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/blacklabelops/jira\nFROM blacklabelops/alpine:3.7\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#  Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add tzdata \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#  Note that you also need to update buildscripts/release.sh when the\n#  Jira version changes\nARG JIRA_VERSION=7.3.8\nARG JIRA_PRODUCT=jira-software\n#  Permissions, set the linux user id and group id\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\n#  Image Build Date By Buildsystem\nARG BUILD_DATE=undefined\nENV JIRA_USER=\"jira\" \\\n    JIRA_GROUP=\"jira\" \\\n    JIRA_CONTEXT_PATH=\"ROOT\" \\\n    JIRA_HOME=\"/var/atlassian/jira\" \\\n    JIRA_INSTALL=\"/opt/atlassian/jira\" \\\n    JIRA_SCRIPTS=\"/usr/local/share/atlassian\" \\\n    MYSQL_DRIVER_VERSION=\"5.1.44\" \\\n    DOCKERIZE_VERSION=\"v0.4.0\"\nENV JAVA_HOME=\"$JIRA_INSTALL/jre\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nCOPY imagescripts ${JIRA_SCRIPTS}\nCOPY atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin /tmp/jira.bin\nRUN apk add --update ca-certificates gzip curl tini wget xmlstarlet \\\n && export GLIBC_VERSION=2.26-r0 \\\n && wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \\\n && apk add --allow-untrusted /tmp/glibc-${GLIBC_VERSION}.apk \\\n && wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk \\\n && apk add --allow-untrusted /tmp/glibc-bin-${GLIBC_VERSION}.apk \\\n && wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk \\\n && apk --allow-untrusted add /tmp/glibc-i18n-${GLIBC_VERSION}.apk \\\n && export JIRA_BIN=atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin \\\n && mkdir -p ${JIRA_HOME} \\\n && mkdir -p ${JIRA_INSTALL} \\\n && chmod +x /tmp/jira.bin \\\n && /tmp/jira.bin -q -varfile ${JIRA_SCRIPTS}/response.varfile \\\n && rm -f ${JIRA_INSTALL}/lib/mysql-connector-java*.jar \\\n && wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz \\\n && tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz --directory=/tmp \\\n && cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar ${JIRA_INSTALL}/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar \\\n && export CONTAINER_USER=jira \\\n && export CONTAINER_UID=1000 \\\n && export CONTAINER_GROUP=jira \\\n && export CONTAINER_GID=1000 \\\n && addgroup -g $CONTAINER_GID $CONTAINER_GROUP \\\n && adduser -u $CONTAINER_UID -G $CONTAINER_GROUP -h /home/$CONTAINER_USER -s /bin/bash -S $CONTAINER_USER \\\n && export KEYSTORE=$JAVA_HOME/lib/security/cacerts \\\n && wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der \\\n && wget -O /home/${JIRA_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class \\\n && chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_HOME} \\\n && chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_INSTALL} \\\n && chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_SCRIPTS} \\\n && chown -R $JIRA_USER:$JIRA_GROUP /home/${JIRA_USER} \\\n && wget -O /tmp/dockerize.tar.gz https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz \\\n && rm /tmp/dockerize.tar.gz \\\n && apk del ca-certificates gzip wget \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/log/*\n#  add patch\nADD atlassian-extras-3.2.jar $JIRA_INSTALL/atlassian-jira/WEB-INF/lib/atlassian-extras-3.2.jar\nADD atlassian-universal-plugin-manager-plugin-2.22.2.jar $JIRA_INSTALL/atlassian-jira/WEB-INF/atlassian-bundled-plugins/atlassian-universal-plugin-manager-plugin-2.22.2.jar\n#  Image Metadata\nLABEL com.blacklabelops.application.jira.version=\"$JIRA_PRODUCT-$JIRA_VERSION\" \\\n      com.blacklabelops.application.jira.userid=\"$CONTAINER_UID\" \\\n      com.blacklabelops.application.jira.groupid=\"$CONTAINER_GID\" \\\n      com.blacklabelops.image.builddate.jira=\"${BUILD_DATE}\"\nUSER jira\nWORKDIR ${JIRA_HOME}\nVOLUME [\"/var/atlassian/jira\"]\nEXPOSE 8080/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/share/atlassian/docker-entrypoint.sh\"]\nCMD [\"jira\"]\n","injectedSmells":[],"originalDockerfileHash":"f35c5d07374d7564d4b5f767386312b7","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/blacklabelops/jira\nFROM blacklabelops/alpine:3.7\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add tzdata \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#   Note that you also need to update buildscripts/release.sh when the\n#   Jira version changes\nARG JIRA_VERSION=7.3.8\nARG JIRA_PRODUCT=jira-software\n#   Permissions, set the linux user id and group id\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\n#   Image Build Date By Buildsystem\nARG BUILD_DATE=undefined\nENV JIRA_USER=\"jira\" \\\n    JIRA_GROUP=\"jira\" \\\n    JIRA_CONTEXT_PATH=\"ROOT\" \\\n    JIRA_HOME=\"/var/atlassian/jira\" \\\n    JIRA_INSTALL=\"/opt/atlassian/jira\" \\\n    JIRA_SCRIPTS=\"/usr/local/share/atlassian\" \\\n    MYSQL_DRIVER_VERSION=\"5.1.44\" \\\n    DOCKERIZE_VERSION=\"v0.4.0\"\nENV JAVA_HOME=\"$JIRA_INSTALL/jre\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nCOPY imagescripts ${JIRA_SCRIPTS}\nCOPY atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin /tmp/jira.bin\nRUN apk add --update ca-certificates gzip curl tini wget xmlstarlet \\\n && export GLIBC_VERSION=2.26-r0 \\\n && wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \\\n && apk add --allow-untrusted /tmp/glibc-${GLIBC_VERSION}.apk \\\n && wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk \\\n && apk add --allow-untrusted /tmp/glibc-bin-${GLIBC_VERSION}.apk \\\n && wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk \\\n && apk --allow-untrusted add /tmp/glibc-i18n-${GLIBC_VERSION}.apk \\\n && export JIRA_BIN=atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin \\\n && mkdir -p ${JIRA_HOME} \\\n && mkdir -p ${JIRA_INSTALL} \\\n && chmod +x /tmp/jira.bin \\\n && /tmp/jira.bin -q -varfile ${JIRA_SCRIPTS}/response.varfile \\\n && rm -f ${JIRA_INSTALL}/lib/mysql-connector-java*.jar \\\n && wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz \\\n && tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz --directory=/tmp \\\n && cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar ${JIRA_INSTALL}/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar \\\n && export CONTAINER_USER=jira \\\n && export CONTAINER_UID=1000 \\\n && export CONTAINER_GROUP=jira \\\n && export CONTAINER_GID=1000 \\\n && addgroup -g $CONTAINER_GID $CONTAINER_GROUP \\\n && adduser -u $CONTAINER_UID -G $CONTAINER_GROUP -h /home/$CONTAINER_USER -s /bin/bash -S $CONTAINER_USER \\\n && export KEYSTORE=$JAVA_HOME/lib/security/cacerts \\\n && wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der \\\n && wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der \\\n && keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der \\\n && wget -O /home/${JIRA_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class \\\n && chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_HOME} \\\n && chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_INSTALL} \\\n && chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_SCRIPTS} \\\n && chown -R $JIRA_USER:$JIRA_GROUP /home/${JIRA_USER} \\\n && wget -O /tmp/dockerize.tar.gz https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz \\\n && rm /tmp/dockerize.tar.gz \\\n && apk del ca-certificates gzip wget \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/log/*\n#   add patch\nADD atlassian-extras-3.2.jar $JIRA_INSTALL/atlassian-jira/WEB-INF/lib/atlassian-extras-3.2.jar\nADD atlassian-universal-plugin-manager-plugin-2.22.2.jar $JIRA_INSTALL/atlassian-jira/WEB-INF/atlassian-bundled-plugins/atlassian-universal-plugin-manager-plugin-2.22.2.jar\n#   Image Metadata\nLABEL com.blacklabelops.application.jira.version=\"$JIRA_PRODUCT-$JIRA_VERSION\" \\\n      com.blacklabelops.application.jira.userid=\"$CONTAINER_UID\" \\\n      com.blacklabelops.application.jira.groupid=\"$CONTAINER_GID\" \\\n      com.blacklabelops.image.builddate.jira=\"${BUILD_DATE}\"\nUSER jira\nWORKDIR ${JIRA_HOME}\nVOLUME [\"/var/atlassian/jira\"]\nEXPOSE 8080/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/share/atlassian/docker-entrypoint.sh\"]\nCMD [\"jira\"]\n","originalDockerfileUglifiedHash":"2ca28b88834647b14cad4c7f34fe7609","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/00b06abd4eb1ea284a4b537cc69bd2ad1c579288.dockerfile"}