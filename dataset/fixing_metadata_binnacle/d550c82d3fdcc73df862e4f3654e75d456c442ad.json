{"seed":2061236441,"processedDockerfileHash":"8bd971b6fa8b038d5e6f9214061a1b65","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   upsteam https://github.com/mesosphere/dcos-jenkins-service\nFROM jenkins/jenkins:2.73.3\nMAINTAINER 若虚 <slpcat@qq.com>\nUSER root\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\nWORKDIR /tmp\n#   Environment variables used throughout this Dockerfile\n#\n#   $JENKINS_HOME     will be the final destination that Jenkins will use as its\n#                     data directory. This cannot be populated before Marathon\n#                     has a chance to create the host-container volume mapping.\n#\nENV JENKINS_FOLDER=\"/usr/share/jenkins\"\n#   Build Args\nARG LIBMESOS_DOWNLOAD_URL=https://downloads.mesosphere.com/libmesos-bundle/libmesos-bundle-1.8.7-1.0.2-2.tar.gz\nARG LIBMESOS_DOWNLOAD_SHA256=9757b2e86c975488f68ce325fdf08578669e3c0f1fcccf24545d3bd1bd423a25\nARG BLUEOCEAN_VERSION=1.3.1\nARG JENKINS_STAGING=/usr/share/jenkins/ref/\n#   install dependencies\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends nginx python zip jq -y )\n#   libmesos bundle\nRUN curl -fsSL \"$LIBMESOS_DOWNLOAD_URL\" -o libmesos-bundle.tar.gz \\\n && echo \"$LIBMESOS_DOWNLOAD_SHA256 libmesos-bundle.tar.gz\" | sha256sum -c - \\\n && tar -C / -xzf libmesos-bundle.tar.gz \\\n && rm libmesos-bundle.tar.gz\n#   update to newer git version\nRUN echo \"deb http://ftp.debian.org/debian testing main\" >> /etc/apt/sources.list \\\n && : \\\n && apt-get -t testing install -y git\n#   Override the default property for DNS lookup caching\nRUN echo 'networkaddress.cache.ttl=60' >> ${JAVA_HOME}/jre/lib/security/java.security\n#   bootstrap scripts and needed dir setup\nCOPY scripts/bootstrap.py /usr/local/jenkins/bin/bootstrap.py\nCOPY scripts/export-libssl.sh /usr/local/jenkins/bin/export-libssl.sh\nCOPY scripts/dcos-account.sh /usr/local/jenkins/bin/dcos-account.sh\nRUN mkdir -p \"$JENKINS_HOME\" \"${JENKINS_FOLDER}/war\"\n#   nginx setup\nRUN mkdir -p /var/log/nginx/jenkins\nCOPY conf/nginx/nginx.conf /etc/nginx/nginx.conf\n#   jenkins setup\nCOPY conf/jenkins/config.xml \"${JENKINS_STAGING}/config.xml\"\nCOPY conf/jenkins/jenkins.model.JenkinsLocationConfiguration.xml \"${JENKINS_STAGING}/jenkins.model.JenkinsLocationConfiguration.xml\"\nCOPY conf/jenkins/nodeMonitors.xml \"${JENKINS_STAGING}/nodeMonitors.xml\"\n#   add plugins\nRUN /usr/local/bin/install-plugins.sh blueocean-commons:${BLUEOCEAN_VERSION} blueocean-config:${BLUEOCEAN_VERSION} blueocean-dashboard:${BLUEOCEAN_VERSION} blueocean-events:${BLUEOCEAN_VERSION} blueocean-git-pipeline:${BLUEOCEAN_VERSION} blueocean-github-pipeline:${BLUEOCEAN_VERSION} blueocean-i18n:${BLUEOCEAN_VERSION} blueocean-jwt:${BLUEOCEAN_VERSION} blueocean-personalization:${BLUEOCEAN_VERSION} blueocean-pipeline-api-impl:${BLUEOCEAN_VERSION} blueocean-pipeline-editor:${BLUEOCEAN_VERSION} blueocean-pipeline-scm-api:${BLUEOCEAN_VERSION} blueocean-rest-impl:${BLUEOCEAN_VERSION} blueocean-rest:${BLUEOCEAN_VERSION} blueocean-web:${BLUEOCEAN_VERSION} blueocean:${BLUEOCEAN_VERSION} ant:1.7 ace-editor:1.1 ansicolor:0.5.2 antisamy-markup-formatter:1.5 artifactory:2.13.1 authentication-tokens:1.3 azure-credentials:1.3 azure-vm-agents:0.4.8 branch-api:2.0.15 build-name-setter:1.6.7 build-timeout:1.19 cloudbees-folder:6.2.1 conditional-buildstep:1.3.6 config-file-provider:2.16.4 copyartifact:1.39 cvs:2.13 docker-build-publish:1.3.2 docker-workflow:1.14 durable-task:1.15 ec2:1.37 embeddable-build-status:1.9 external-monitor-job:1.7 ghprb:1.39.0 git:3.6.4 git-client:2.6.0 git-server:1.7 github:1.28.1 github-api:1.90 github-branch-source:2.3 github-organization-folder:1.6 gitlab:1.5.1 gradle:1.28 greenballs:1.15 handlebars:1.1.1 ivy:1.28 jackson2-api:2.8.7.0 job-dsl:1.66 jobConfigHistory:2.18 jquery:1.12.4-0 ldap:1.17 mapdb-api:1.0.9.0 marathon:1.6.0 matrix-auth:2.1.1 matrix-project:1.12 maven-plugin:3.0 mesos:0.15.0 metrics:3.1.2.10 momentjs:1.1.1 monitoring:1.70.0 nant:1.4.3 node-iterator-api:1.5.0 pam-auth:1.3 parameterized-trigger:2.35.2 pipeline-build-step:2.5.1 pipeline-github-lib:1.0 pipeline-input-step:2.8 pipeline-milestone-step:1.3.1 pipeline-model-api:1.2.4 pipeline-model-definition:1.2.4 pipeline-model-extensions:1.2.4 pipeline-rest-api:2.9 pipeline-stage-step:2.3 pipeline-stage-view:2.9 plain-credentials:1.4 rebuild:1.27 role-strategy:2.6.1 run-condition:1.0 s3:0.10.12 saferestart:0.3 saml:1.0.4 scm-api:2.2.5 ssh-agent:1.15 ssh-slaves:1.22 subversion:2.9 timestamper:1.8.8 translation:1.15 variant:1.1 windows-slaves:1.3.1 workflow-aggregator:2.5 workflow-api:2.23.1 workflow-basic-steps:2.6 workflow-cps:2.41 workflow-cps-global-lib:2.9 workflow-durable-task-step:2.17 workflow-job:2.15 workflow-multibranch:2.16 workflow-scm-step:2.6 workflow-step-api:2.13 workflow-support:2.16\n#   disable first-run wizard\nRUN echo 2.0 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state\nCMD export LD_LIBRARY_PATH=/libmesos-bundle/lib:/libmesos-bundle/lib/mesos:$LD_LIBRARY_PATH \\\n && export MESOS_NATIVE_JAVA_LIBRARY=$( ls /libmesos-bundle/lib/libmesos-*.so ;) \\\n && . /usr/local/jenkins/bin/export-libssl.sh \\\n && /usr/local/jenkins/bin/bootstrap.py \\\n && nginx \\\n && . /usr/local/jenkins/bin/dcos-account.sh \\\n && java ${JVM_OPTS} -Dhudson.udp=-1 -Djava.awt.headless=true -Dhudson.DNSMultiCast.disabled=true -Djenkins.install.runSetupWizard=false -jar ${JENKINS_FOLDER}/jenkins.war ${JENKINS_OPTS} --httpPort=${PORT1} --webroot=${JENKINS_FOLDER}/war --ajp13Port=-1 --httpListenAddress=127.0.0.1 --ajp13ListenAddress=127.0.0.1 --prefix=${JENKINS_CONTEXT}\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  upsteam https://github.com/mesosphere/dcos-jenkins-service\nFROM jenkins/jenkins:2.73.3\nMAINTAINER 若虚 <slpcat@qq.com>\nUSER root\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#  Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  Install required packages\nRUN apt-get dist-upgrade -y\nWORKDIR /tmp\n#  Environment variables used throughout this Dockerfile\n#\n#  $JENKINS_HOME     will be the final destination that Jenkins will use as its\n#                    data directory. This cannot be populated before Marathon\n#                    has a chance to create the host-container volume mapping.\n#\nENV JENKINS_FOLDER=\"/usr/share/jenkins\"\n#  Build Args\nARG LIBMESOS_DOWNLOAD_URL=https://downloads.mesosphere.com/libmesos-bundle/libmesos-bundle-1.8.7-1.0.2-2.tar.gz\nARG LIBMESOS_DOWNLOAD_SHA256=9757b2e86c975488f68ce325fdf08578669e3c0f1fcccf24545d3bd1bd423a25\nARG BLUEOCEAN_VERSION=1.3.1\nARG JENKINS_STAGING=/usr/share/jenkins/ref/\n#  install dependencies\nRUN apt-get update \\\n && apt-get install nginx python zip jq -y\n#  libmesos bundle\nRUN curl -fsSL \"$LIBMESOS_DOWNLOAD_URL\" -o libmesos-bundle.tar.gz \\\n && echo \"$LIBMESOS_DOWNLOAD_SHA256 libmesos-bundle.tar.gz\" | sha256sum -c - \\\n && tar -C / -xzf libmesos-bundle.tar.gz \\\n && rm libmesos-bundle.tar.gz\n#  update to newer git version\nRUN echo \"deb http://ftp.debian.org/debian testing main\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get -t testing install -y git\n#  Override the default property for DNS lookup caching\nRUN echo 'networkaddress.cache.ttl=60' >> ${JAVA_HOME}/jre/lib/security/java.security\n#  bootstrap scripts and needed dir setup\nCOPY scripts/bootstrap.py /usr/local/jenkins/bin/bootstrap.py\nCOPY scripts/export-libssl.sh /usr/local/jenkins/bin/export-libssl.sh\nCOPY scripts/dcos-account.sh /usr/local/jenkins/bin/dcos-account.sh\nRUN mkdir -p \"$JENKINS_HOME\" \"${JENKINS_FOLDER}/war\"\n#  nginx setup\nRUN mkdir -p /var/log/nginx/jenkins\nCOPY conf/nginx/nginx.conf /etc/nginx/nginx.conf\n#  jenkins setup\nCOPY conf/jenkins/config.xml \"${JENKINS_STAGING}/config.xml\"\nCOPY conf/jenkins/jenkins.model.JenkinsLocationConfiguration.xml \"${JENKINS_STAGING}/jenkins.model.JenkinsLocationConfiguration.xml\"\nCOPY conf/jenkins/nodeMonitors.xml \"${JENKINS_STAGING}/nodeMonitors.xml\"\n#  add plugins\nRUN /usr/local/bin/install-plugins.sh blueocean-commons:${BLUEOCEAN_VERSION} blueocean-config:${BLUEOCEAN_VERSION} blueocean-dashboard:${BLUEOCEAN_VERSION} blueocean-events:${BLUEOCEAN_VERSION} blueocean-git-pipeline:${BLUEOCEAN_VERSION} blueocean-github-pipeline:${BLUEOCEAN_VERSION} blueocean-i18n:${BLUEOCEAN_VERSION} blueocean-jwt:${BLUEOCEAN_VERSION} blueocean-personalization:${BLUEOCEAN_VERSION} blueocean-pipeline-api-impl:${BLUEOCEAN_VERSION} blueocean-pipeline-editor:${BLUEOCEAN_VERSION} blueocean-pipeline-scm-api:${BLUEOCEAN_VERSION} blueocean-rest-impl:${BLUEOCEAN_VERSION} blueocean-rest:${BLUEOCEAN_VERSION} blueocean-web:${BLUEOCEAN_VERSION} blueocean:${BLUEOCEAN_VERSION} ant:1.7 ace-editor:1.1 ansicolor:0.5.2 antisamy-markup-formatter:1.5 artifactory:2.13.1 authentication-tokens:1.3 azure-credentials:1.3 azure-vm-agents:0.4.8 branch-api:2.0.15 build-name-setter:1.6.7 build-timeout:1.19 cloudbees-folder:6.2.1 conditional-buildstep:1.3.6 config-file-provider:2.16.4 copyartifact:1.39 cvs:2.13 docker-build-publish:1.3.2 docker-workflow:1.14 durable-task:1.15 ec2:1.37 embeddable-build-status:1.9 external-monitor-job:1.7 ghprb:1.39.0 git:3.6.4 git-client:2.6.0 git-server:1.7 github:1.28.1 github-api:1.90 github-branch-source:2.3 github-organization-folder:1.6 gitlab:1.5.1 gradle:1.28 greenballs:1.15 handlebars:1.1.1 ivy:1.28 jackson2-api:2.8.7.0 job-dsl:1.66 jobConfigHistory:2.18 jquery:1.12.4-0 ldap:1.17 mapdb-api:1.0.9.0 marathon:1.6.0 matrix-auth:2.1.1 matrix-project:1.12 maven-plugin:3.0 mesos:0.15.0 metrics:3.1.2.10 momentjs:1.1.1 monitoring:1.70.0 nant:1.4.3 node-iterator-api:1.5.0 pam-auth:1.3 parameterized-trigger:2.35.2 pipeline-build-step:2.5.1 pipeline-github-lib:1.0 pipeline-input-step:2.8 pipeline-milestone-step:1.3.1 pipeline-model-api:1.2.4 pipeline-model-definition:1.2.4 pipeline-model-extensions:1.2.4 pipeline-rest-api:2.9 pipeline-stage-step:2.3 pipeline-stage-view:2.9 plain-credentials:1.4 rebuild:1.27 role-strategy:2.6.1 run-condition:1.0 s3:0.10.12 saferestart:0.3 saml:1.0.4 scm-api:2.2.5 ssh-agent:1.15 ssh-slaves:1.22 subversion:2.9 timestamper:1.8.8 translation:1.15 variant:1.1 windows-slaves:1.3.1 workflow-aggregator:2.5 workflow-api:2.23.1 workflow-basic-steps:2.6 workflow-cps:2.41 workflow-cps-global-lib:2.9 workflow-durable-task-step:2.17 workflow-job:2.15 workflow-multibranch:2.16 workflow-scm-step:2.6 workflow-step-api:2.13 workflow-support:2.16\n#  disable first-run wizard\nRUN echo 2.0 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state\nCMD export LD_LIBRARY_PATH=/libmesos-bundle/lib:/libmesos-bundle/lib/mesos:$LD_LIBRARY_PATH \\\n && export MESOS_NATIVE_JAVA_LIBRARY=$( ls /libmesos-bundle/lib/libmesos-*.so ;) \\\n && . /usr/local/jenkins/bin/export-libssl.sh \\\n && /usr/local/jenkins/bin/bootstrap.py \\\n && nginx \\\n && . /usr/local/jenkins/bin/dcos-account.sh \\\n && java ${JVM_OPTS} -Dhudson.udp=-1 -Djava.awt.headless=true -Dhudson.DNSMultiCast.disabled=true -Djenkins.install.runSetupWizard=false -jar ${JENKINS_FOLDER}/jenkins.war ${JENKINS_OPTS} --httpPort=${PORT1} --webroot=${JENKINS_FOLDER}/war --ajp13Port=-1 --httpListenAddress=127.0.0.1 --ajp13ListenAddress=127.0.0.1 --prefix=${JENKINS_CONTEXT}\n","injectedSmells":[],"originalDockerfileHash":"f244e860abe378fb2863818a7adbf8d9","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   upsteam https://github.com/mesosphere/dcos-jenkins-service\nFROM jenkins/jenkins:2.73.3\nMAINTAINER 若虚 <slpcat@qq.com>\nUSER root\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\nWORKDIR /tmp\n#   Environment variables used throughout this Dockerfile\n#\n#   $JENKINS_HOME     will be the final destination that Jenkins will use as its\n#                     data directory. This cannot be populated before Marathon\n#                     has a chance to create the host-container volume mapping.\n#\nENV JENKINS_FOLDER=\"/usr/share/jenkins\"\n#   Build Args\nARG LIBMESOS_DOWNLOAD_URL=https://downloads.mesosphere.com/libmesos-bundle/libmesos-bundle-1.8.7-1.0.2-2.tar.gz\nARG LIBMESOS_DOWNLOAD_SHA256=9757b2e86c975488f68ce325fdf08578669e3c0f1fcccf24545d3bd1bd423a25\nARG BLUEOCEAN_VERSION=1.3.1\nARG JENKINS_STAGING=/usr/share/jenkins/ref/\n#   install dependencies\nRUN apt-get update \\\n && apt-get install nginx python zip jq -y\n#   libmesos bundle\nRUN curl -fsSL \"$LIBMESOS_DOWNLOAD_URL\" -o libmesos-bundle.tar.gz \\\n && echo \"$LIBMESOS_DOWNLOAD_SHA256 libmesos-bundle.tar.gz\" | sha256sum -c - \\\n && tar -C / -xzf libmesos-bundle.tar.gz \\\n && rm libmesos-bundle.tar.gz\n#   update to newer git version\nRUN echo \"deb http://ftp.debian.org/debian testing main\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get -t testing install -y git\n#   Override the default property for DNS lookup caching\nRUN echo 'networkaddress.cache.ttl=60' >> ${JAVA_HOME}/jre/lib/security/java.security\n#   bootstrap scripts and needed dir setup\nCOPY scripts/bootstrap.py /usr/local/jenkins/bin/bootstrap.py\nCOPY scripts/export-libssl.sh /usr/local/jenkins/bin/export-libssl.sh\nCOPY scripts/dcos-account.sh /usr/local/jenkins/bin/dcos-account.sh\nRUN mkdir -p \"$JENKINS_HOME\" \"${JENKINS_FOLDER}/war\"\n#   nginx setup\nRUN mkdir -p /var/log/nginx/jenkins\nCOPY conf/nginx/nginx.conf /etc/nginx/nginx.conf\n#   jenkins setup\nCOPY conf/jenkins/config.xml \"${JENKINS_STAGING}/config.xml\"\nCOPY conf/jenkins/jenkins.model.JenkinsLocationConfiguration.xml \"${JENKINS_STAGING}/jenkins.model.JenkinsLocationConfiguration.xml\"\nCOPY conf/jenkins/nodeMonitors.xml \"${JENKINS_STAGING}/nodeMonitors.xml\"\n#   add plugins\nRUN /usr/local/bin/install-plugins.sh blueocean-commons:${BLUEOCEAN_VERSION} blueocean-config:${BLUEOCEAN_VERSION} blueocean-dashboard:${BLUEOCEAN_VERSION} blueocean-events:${BLUEOCEAN_VERSION} blueocean-git-pipeline:${BLUEOCEAN_VERSION} blueocean-github-pipeline:${BLUEOCEAN_VERSION} blueocean-i18n:${BLUEOCEAN_VERSION} blueocean-jwt:${BLUEOCEAN_VERSION} blueocean-personalization:${BLUEOCEAN_VERSION} blueocean-pipeline-api-impl:${BLUEOCEAN_VERSION} blueocean-pipeline-editor:${BLUEOCEAN_VERSION} blueocean-pipeline-scm-api:${BLUEOCEAN_VERSION} blueocean-rest-impl:${BLUEOCEAN_VERSION} blueocean-rest:${BLUEOCEAN_VERSION} blueocean-web:${BLUEOCEAN_VERSION} blueocean:${BLUEOCEAN_VERSION} ant:1.7 ace-editor:1.1 ansicolor:0.5.2 antisamy-markup-formatter:1.5 artifactory:2.13.1 authentication-tokens:1.3 azure-credentials:1.3 azure-vm-agents:0.4.8 branch-api:2.0.15 build-name-setter:1.6.7 build-timeout:1.19 cloudbees-folder:6.2.1 conditional-buildstep:1.3.6 config-file-provider:2.16.4 copyartifact:1.39 cvs:2.13 docker-build-publish:1.3.2 docker-workflow:1.14 durable-task:1.15 ec2:1.37 embeddable-build-status:1.9 external-monitor-job:1.7 ghprb:1.39.0 git:3.6.4 git-client:2.6.0 git-server:1.7 github:1.28.1 github-api:1.90 github-branch-source:2.3 github-organization-folder:1.6 gitlab:1.5.1 gradle:1.28 greenballs:1.15 handlebars:1.1.1 ivy:1.28 jackson2-api:2.8.7.0 job-dsl:1.66 jobConfigHistory:2.18 jquery:1.12.4-0 ldap:1.17 mapdb-api:1.0.9.0 marathon:1.6.0 matrix-auth:2.1.1 matrix-project:1.12 maven-plugin:3.0 mesos:0.15.0 metrics:3.1.2.10 momentjs:1.1.1 monitoring:1.70.0 nant:1.4.3 node-iterator-api:1.5.0 pam-auth:1.3 parameterized-trigger:2.35.2 pipeline-build-step:2.5.1 pipeline-github-lib:1.0 pipeline-input-step:2.8 pipeline-milestone-step:1.3.1 pipeline-model-api:1.2.4 pipeline-model-definition:1.2.4 pipeline-model-extensions:1.2.4 pipeline-rest-api:2.9 pipeline-stage-step:2.3 pipeline-stage-view:2.9 plain-credentials:1.4 rebuild:1.27 role-strategy:2.6.1 run-condition:1.0 s3:0.10.12 saferestart:0.3 saml:1.0.4 scm-api:2.2.5 ssh-agent:1.15 ssh-slaves:1.22 subversion:2.9 timestamper:1.8.8 translation:1.15 variant:1.1 windows-slaves:1.3.1 workflow-aggregator:2.5 workflow-api:2.23.1 workflow-basic-steps:2.6 workflow-cps:2.41 workflow-cps-global-lib:2.9 workflow-durable-task-step:2.17 workflow-job:2.15 workflow-multibranch:2.16 workflow-scm-step:2.6 workflow-step-api:2.13 workflow-support:2.16\n#   disable first-run wizard\nRUN echo 2.0 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state\nCMD export LD_LIBRARY_PATH=/libmesos-bundle/lib:/libmesos-bundle/lib/mesos:$LD_LIBRARY_PATH \\\n && export MESOS_NATIVE_JAVA_LIBRARY=$( ls /libmesos-bundle/lib/libmesos-*.so ;) \\\n && . /usr/local/jenkins/bin/export-libssl.sh \\\n && /usr/local/jenkins/bin/bootstrap.py \\\n && nginx \\\n && . /usr/local/jenkins/bin/dcos-account.sh \\\n && java ${JVM_OPTS} -Dhudson.udp=-1 -Djava.awt.headless=true -Dhudson.DNSMultiCast.disabled=true -Djenkins.install.runSetupWizard=false -jar ${JENKINS_FOLDER}/jenkins.war ${JENKINS_OPTS} --httpPort=${PORT1} --webroot=${JENKINS_FOLDER}/war --ajp13Port=-1 --httpListenAddress=127.0.0.1 --ajp13ListenAddress=127.0.0.1 --prefix=${JENKINS_CONTEXT}\n","originalDockerfileUglifiedHash":"7cd99173e4ac53183b8fe0dade9ad040","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d550c82d3fdcc73df862e4f3654e75d456c442ad.dockerfile"}