{"seed":3141610831,"processedDockerfileHash":"564f475554438c3ffd9f85c65ae3562c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch-slim\nWORKDIR /gtrader\nENV PAXIFY=\"'setfattr -n user.pax.flags -v \\\"m\\\"'\"\nENV PAX_PHP=\"\\\"$PAXIFY /usr/bin/php\\\"\"\nENV PAX_NODE=\"\\\"$PAXIFY /usr/bin/nodejs\\\"\"\nENV SUG=\"\\\"su -s /bin/sh -m gtrader -c\\\"\"\nENV CACHE=\"/tmp/cache\"\nRUN DEBIAN_FRONTEND=noninteractive LC_ALL=C.UTF-8 apt-get update \\\n && apt-get install --no-install-recommends software-properties-common dirmngr gnupg locales -y \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n && add-apt-repository ppa:ondrej/php \\\n && apt-get update \\\n && apt-get install --no-install-recommends php-dev php-cli php-fpm php-mysql php-gd php-mcrypt php-xml php-zip php-mbstring php-pear curl openssl ca-certificates git unzip mysql-client libfann2 libfann-dev make attr nano cron logrotate gnupg runit -y\nRUN set -eux ; echo \"############### PECL ##########################\" \\\n && pecl channel-update pecl.php.net \\\n && pecl install trader \\\n && pecl install fann \\\n && echo \"############### GET COMPOSER ##################\" \\\n && $PAX_PHP \\\n && curl -sL https://getcomposer.org/installer | php -- --install-dir /usr/bin --filename composer \\\n && echo \"############### GET NODE ######################\" \\\n && curl -sL https://deb.nodesource.com/setup_7.x | bash - \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs \\\n && echo \"############### CLEAN UP ######################\" \\\n && apt-get -y remove libfann-dev make php-dev software-properties-common dirmngr gnupg locales \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && rm -rfv /var/cache/apt/* /var/lib/apt/lists/* /tmp/pear*\nCOPY . /gtrader\nRUN\nEXPOSE 9000/tcp\nCMD [\"/usr/bin/runsvdir\", \"/etc/service\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch-slim\nWORKDIR /gtrader\nENV PAXIFY=\"'setfattr -n user.pax.flags -v \\\"m\\\"'\"\nENV PAX_PHP=\"\\\"$PAXIFY /usr/bin/php\\\"\"\nENV PAX_NODE=\"\\\"$PAXIFY /usr/bin/nodejs\\\"\"\nENV SUG=\"\\\"su -s /bin/sh -m gtrader -c\\\"\"\nENV CACHE=\"/tmp/cache\"\nRUN DEBIAN_FRONTEND=noninteractive LC_ALL=C.UTF-8 apt-get update \\\n && apt-get install --no-install-recommends software-properties-common dirmngr gnupg locales -y \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n && add-apt-repository ppa:ondrej/php \\\n && apt-get update \\\n && apt-get install --no-install-recommends php-dev php-cli php-fpm php-mysql php-gd php-mcrypt php-xml php-zip php-mbstring php-pear curl openssl ca-certificates git unzip mysql-client libfann2 libfann-dev make attr nano cron logrotate gnupg runit -y\nRUN set -eux ; echo \"############### PECL ##########################\" \\\n && pecl channel-update pecl.php.net \\\n && pecl install trader \\\n && pecl install fann \\\n && echo \"############### GET COMPOSER ##################\" \\\n && $PAX_PHP \\\n && curl -sL https://getcomposer.org/installer | php -- --install-dir /usr/bin --filename composer \\\n && echo \"############### GET NODE ######################\" \\\n && curl -sL https://deb.nodesource.com/setup_7.x | bash - \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs \\\n && echo \"############### CLEAN UP ######################\" \\\n && apt-get -y remove libfann-dev make php-dev software-properties-common dirmngr gnupg locales \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && rm -rfv /var/cache/apt/* /var/lib/apt/lists/* /tmp/pear*\nCOPY . /gtrader\nRUN echo \"############### FILES #########################\" \\\n && cp -Rv /gtrader/docker-fs/* / \\\n && useradd -G www-data -d /gtrader -s /bin/bash -M gtrader \\\n && for file in laravel schedule trainingManager bots; do touch /gtrader/storage/logs/$file.log ; done \\\n && chown -Rc gtrader:gtrader /gtrader \\\n && for dir in /gtrader/storage /gtrader/bootstrap/cache; do chgrp -Rc www-data $dir ;find $dir -type d -exec chmod -c 775 {} ; ;find $dir -type f -exec chmod -c 664 {} ; ; done \\\n && phpenmod pdo_mysql trader fann \\\n && echo \"############### COMPOSER INSTALL ##############\" \\\n && $PAX_PHP \\\n && $SUG \"mkdir -p $CACHE/composer \\\n && COMPOSER_CACHE_DIR=$CACHE/composer composer install\" \\\n && echo \"############### NPM INSTALL ###################\" \\\n && $PAX_NODE \\\n && $SUG \"mkdir $CACHE/npm \\\n && npm_config_cache=$CACHE/npm npm install\" \\\n && rm -rfv $CACHE \\\n && echo \"############### ARTISAN #######################\" \\\n && $SUG \"cp docker.env .env\" \\\n && $PAX_PHP \\\n && $SUG \"php artisan key:generate\" \\\n && $PAX_PHP \\\n && $SUG \"php artisan optimize\" \\\n && echo \"############### NPM RUN DEV ###################\" \\\n && $PAX_NODE \\\n && $SUG \"HOME=/tmp npm run dev\" \\\n && rm -rfv /tmp/npm* \\\n && echo \"############### CRONTAB #######################\" \\\n && $SUG \"crontab -u gtrader crontab\"\nEXPOSE 9000/tcp\nCMD [\"/usr/bin/runsvdir\", \"/etc/service\"]\n","injectedSmells":[],"originalDockerfileHash":"e30f917b5f38bb930983d1efbb412d4f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch-slim\nWORKDIR /gtrader\nENV PAXIFY=\"'setfattr -n user.pax.flags -v \\\"m\\\"'\"\nENV PAX_PHP=\"\\\"$PAXIFY /usr/bin/php\\\"\"\nENV PAX_NODE=\"\\\"$PAXIFY /usr/bin/nodejs\\\"\"\nENV SUG=\"\\\"su -s /bin/sh -m gtrader -c\\\"\"\nENV CACHE=\"/tmp/cache\"\nRUN DEBIAN_FRONTEND=noninteractive LC_ALL=C.UTF-8 apt-get update \\\n && apt-get install --no-install-recommends software-properties-common dirmngr gnupg locales -y \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n && add-apt-repository ppa:ondrej/php \\\n && apt-get update \\\n && apt-get install --no-install-recommends php-dev php-cli php-fpm php-mysql php-gd php-mcrypt php-xml php-zip php-mbstring php-pear curl openssl ca-certificates git unzip mysql-client libfann2 libfann-dev make attr nano cron logrotate gnupg runit -y\nRUN set -eux ; echo \"############### PECL ##########################\" \\\n && pecl channel-update pecl.php.net \\\n && pecl install trader \\\n && pecl install fann \\\n && echo \"############### GET COMPOSER ##################\" \\\n && $PAX_PHP \\\n && curl -sL https://getcomposer.org/installer | php -- --install-dir /usr/bin --filename composer \\\n && echo \"############### GET NODE ######################\" \\\n && curl -sL https://deb.nodesource.com/setup_7.x | bash - \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs \\\n && echo \"############### CLEAN UP ######################\" \\\n && apt-get -y remove libfann-dev make php-dev software-properties-common dirmngr gnupg locales \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && rm -rfv /var/cache/apt/* /var/lib/apt/lists/* /tmp/pear*\nCOPY . /gtrader\nRUN\nEXPOSE 9000/tcp\nCMD [\"/usr/bin/runsvdir\", \"/etc/service\"]\n","originalDockerfileUglifiedHash":"0b18c253b6d7f9ebac75c46dc7332124","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/13ff6d578ffdfed36abb7407155a1f7f0fc94b2e.dockerfile"}