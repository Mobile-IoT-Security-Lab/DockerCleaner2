{"seed":254982018,"processedDockerfileHash":"d94aa17c6604bc2a254ddd0af1029f24","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2017 Mirantis\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Some parts are taken from here:\n#   https://github.com/kubernetes/test-infra/blob/master/dind/base/Dockerfile\n#   Copyright 2017 The Kubernetes Authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   ci-xenial-systemd image source: https://github.com/errordeveloper/kubeadm-ci-dind\n#   The tag includes commit id\nFROM k8s.gcr.io/debian-base-amd64:0.4.1\nSTOPSIGNAL SIGRTMIN+3\nLABEL mirantis.kubeadm_dind_cluster=\"1\"\nENV ARCH=\"amd64\"\nENV CRICTL_VERSION=\"v1.12.0\"\nENV CRICTL_SHA256=\"e7d913bcce40bf54e37ab1d4b75013c823d0551e6bc088b217bc1893207b4844\"\nENV CNI_VERSION=\"v0.7.1\"\nENV CNI_ARCHIVE=\"cni-plugins-${ARCH}-${CNI_VERSION}.tgz\"\nENV CNI_SHA1=\"fb29e20401d3e9598a1d8e8d7992970a36de5e05\"\n#   Specify CONTAINERD_VERSION if containerd which ships with Docker needs to be\n#   replaced. Note that containerd version must be specified w/o \"v\" prefix,\n#   e.g. v1.2.1\nENV CONTAINERD_VERSION=\"1.2.1\"\nENV CONTAINERD_SHA256=\"9818e3af4f9aac8d55fc3f66114346db1d1acd48d45f88b2cefd3d3bafb380e0\"\n#   make systemd behave correctly in Docker container\n#   (e.g. accept systemd.setenv args, etc.)\nENV container=\"docker\"\nARG DEBIAN_FRONTEND=noninteractive\nRUN clean-install apt-transport-https bash bridge-utils ca-certificates curl e2fsprogs ebtables ethtool gnupg2 ipcalc iptables iproute2 iputils-ping ipset ipvsadm jq kmod lsb-core less lzma liblz4-tool mount net-tools procps socat software-properties-common util-linux vim systemd systemd-sysv sysvinit-utils\n#   Install docker.\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \\\n && apt-key fingerprint 0EBFCD88 \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $( lsb_release -cs ;) stable\"\nRUN clean-install docker-ce=5:18.09.0~3-0~debian-stretch \\\n && sed -i '/^disabled_plugins/d' /etc/containerd/config.toml\nRUN curl -sSL --retry 5 https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz > /tmp/crictl.tar.gz \\\n && echo \"${CRICTL_SHA256} /tmp/crictl.tar.gz\" | sha256sum -c \\\n && tar -C /usr/local/bin -xvzf /tmp/crictl.tar.gz \\\n && rm -f /tmp/crictl.tar.gz \\\n && if [ ${CONTAINERD_VERSION} ] ; then curl -sSL --retry 5 https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/containerd-${CONTAINERD_VERSION}.linux-amd64.tar.gz > /tmp/containerd.tar.gz \\\n && echo \"${CONTAINERD_SHA256} /tmp/containerd.tar.gz\" | sha256sum -c \\\n && tar -C /usr -xvzf /tmp/containerd.tar.gz \\\n && rm -f /tmp/containerd.tar.gz ; fi\nRUN mkdir -p /hypokube /etc/systemd/system/docker.service.d /var/lib/kubelet\nCOPY hypokube.dkr /hypokube/\nCOPY kubelet.service /lib/systemd/system/\nCOPY dindnet.service /lib/systemd/system/\nCOPY docker.service /lib/systemd/system/docker.service\nCOPY wrapkubeadm /usr/local/bin/\nCOPY start_services /usr/local/bin/\nCOPY rundocker /usr/local/bin\nCOPY dindnet /usr/local/bin\nCOPY snapshot /usr/local/bin\nCOPY kubeadm.conf.1.12.tmpl /etc/kubeadm.conf.1.12.tmpl\nCOPY kubeadm.conf.1.13.tmpl /etc/kubeadm.conf.1.13.tmpl\nCOPY dind-cluster-rbd /usr/bin/rbd\nCOPY node-info /\n#   Remove unwanted systemd services.\n#   TODO: use 'systemctl mask' to disable units\n#   See here for example: https://github.com/docker/docker/issues/27202#issuecomment-253579916\nRUN for i in /lib/systemd/system/sysinit.target.wants/*; do [ \"${i##*/}\" = \"systemd-tmpfiles-setup.service\" ] || rm -f \"$i\" ; done ; rm -f /lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /lib/systemd/system/local-fs.target.wants/* ; rm -f /lib/systemd/system/sockets.target.wants/*udev* ; rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /lib/systemd/system/basic.target.wants/* ; rm -f /lib/systemd/system/anaconda.target.wants/*\nRUN chmod +x /usr/local/bin/rundocker /usr/local/bin/dindnet /usr/local/bin/snapshot \\\n && mkdir -p /opt/cni/bin \\\n && curl -sSL --retry 5 https://github.com/containernetworking/plugins/releases/download/\"${CNI_VERSION}\"/\"${CNI_ARCHIVE}\" > \"/tmp/${CNI_ARCHIVE}\" \\\n && echo \"${CNI_SHA1} /tmp/${CNI_ARCHIVE}\" | sha1sum -c \\\n && tar -C /opt/cni/bin -xzf \"/tmp/${CNI_ARCHIVE}\" \\\n && rm -f \"/tmp/${CNI_ARCHIVE}\" \\\n && mkdir -p /etc/systemd/system/docker.service.wants \\\n && ln -s /lib/systemd/system/dindnet.service /etc/systemd/system/docker.service.wants/ \\\n && ln -s /dind/containerd /var/lib/containerd \\\n && mkdir -p /dind/containerd \\\n && ln -s /k8s/hyperkube /usr/bin/kubectl \\\n && ln -s /k8s/hyperkube /usr/bin/kubelet \\\n && ln -s /k8s/kubeadm /usr/bin/kubeadm\n#   TODO: move getty target removal to the base image\nEXPOSE 8080/tcp\nRUN ln -fs /sbin/init /sbin/dind_init\nENTRYPOINT [\"/sbin/dind_init\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2017 Mirantis\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Some parts are taken from here:\n#  https://github.com/kubernetes/test-infra/blob/master/dind/base/Dockerfile\n#  Copyright 2017 The Kubernetes Authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  ci-xenial-systemd image source: https://github.com/errordeveloper/kubeadm-ci-dind\n#  The tag includes commit id\nFROM k8s.gcr.io/debian-base-amd64:0.4.1\nSTOPSIGNAL SIGRTMIN+3\nLABEL mirantis.kubeadm_dind_cluster=\"1\"\nENV ARCH=\"amd64\"\nENV CRICTL_VERSION=\"v1.12.0\"\nENV CRICTL_SHA256=\"e7d913bcce40bf54e37ab1d4b75013c823d0551e6bc088b217bc1893207b4844\"\nENV CNI_VERSION=\"v0.7.1\"\nENV CNI_ARCHIVE=\"cni-plugins-${ARCH}-${CNI_VERSION}.tgz\"\nENV CNI_SHA1=\"fb29e20401d3e9598a1d8e8d7992970a36de5e05\"\n#  Specify CONTAINERD_VERSION if containerd which ships with Docker needs to be\n#  replaced. Note that containerd version must be specified w/o \"v\" prefix,\n#  e.g. v1.2.1\nENV CONTAINERD_VERSION=\"1.2.1\"\nENV CONTAINERD_SHA256=\"9818e3af4f9aac8d55fc3f66114346db1d1acd48d45f88b2cefd3d3bafb380e0\"\n#  make systemd behave correctly in Docker container\n#  (e.g. accept systemd.setenv args, etc.)\nENV container=\"docker\"\nARG DEBIAN_FRONTEND=noninteractive\nRUN clean-install apt-transport-https bash bridge-utils ca-certificates curl e2fsprogs ebtables ethtool gnupg2 ipcalc iptables iproute2 iputils-ping ipset ipvsadm jq kmod lsb-core less lzma liblz4-tool mount net-tools procps socat software-properties-common util-linux vim systemd systemd-sysv sysvinit-utils\n#  Install docker.\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \\\n && apt-key fingerprint 0EBFCD88 \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $( lsb_release -cs ;) stable\"\nRUN clean-install docker-ce=5:18.09.0~3-0~debian-stretch \\\n && sed -i '/^disabled_plugins/d' /etc/containerd/config.toml\nRUN curl -sSL --retry 5 https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz > /tmp/crictl.tar.gz \\\n && echo \"${CRICTL_SHA256} /tmp/crictl.tar.gz\" | sha256sum -c \\\n && tar -C /usr/local/bin -xvzf /tmp/crictl.tar.gz \\\n && rm -f /tmp/crictl.tar.gz \\\n && if [ ${CONTAINERD_VERSION} ] ; then curl -sSL --retry 5 https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/containerd-${CONTAINERD_VERSION}.linux-amd64.tar.gz > /tmp/containerd.tar.gz \\\n && echo \"${CONTAINERD_SHA256} /tmp/containerd.tar.gz\" | sha256sum -c \\\n && tar -C /usr -xvzf /tmp/containerd.tar.gz \\\n && rm -f /tmp/containerd.tar.gz ; fi\nRUN mkdir -p /hypokube /etc/systemd/system/docker.service.d /var/lib/kubelet\nCOPY hypokube.dkr /hypokube/\nCOPY kubelet.service /lib/systemd/system/\nCOPY dindnet.service /lib/systemd/system/\nCOPY docker.service /lib/systemd/system/docker.service\nCOPY wrapkubeadm /usr/local/bin/\nCOPY start_services /usr/local/bin/\nCOPY rundocker /usr/local/bin\nCOPY dindnet /usr/local/bin\nCOPY snapshot /usr/local/bin\nCOPY kubeadm.conf.1.12.tmpl /etc/kubeadm.conf.1.12.tmpl\nCOPY kubeadm.conf.1.13.tmpl /etc/kubeadm.conf.1.13.tmpl\nCOPY dind-cluster-rbd /usr/bin/rbd\nCOPY node-info /\n#  Remove unwanted systemd services.\n#  TODO: use 'systemctl mask' to disable units\n#  See here for example: https://github.com/docker/docker/issues/27202#issuecomment-253579916\nRUN for i in /lib/systemd/system/sysinit.target.wants/*; do [ \"${i##*/}\" = \"systemd-tmpfiles-setup.service\" ] || rm -f \"$i\" ; done ; rm -f /lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /lib/systemd/system/local-fs.target.wants/* ; rm -f /lib/systemd/system/sockets.target.wants/*udev* ; rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /lib/systemd/system/basic.target.wants/* ; rm -f /lib/systemd/system/anaconda.target.wants/*\nRUN chmod +x /usr/local/bin/rundocker /usr/local/bin/dindnet /usr/local/bin/snapshot \\\n && mkdir -p /opt/cni/bin \\\n && curl -sSL --retry 5 https://github.com/containernetworking/plugins/releases/download/\"${CNI_VERSION}\"/\"${CNI_ARCHIVE}\" > \"/tmp/${CNI_ARCHIVE}\" \\\n && echo \"${CNI_SHA1} /tmp/${CNI_ARCHIVE}\" | sha1sum -c \\\n && tar -C /opt/cni/bin -xzf \"/tmp/${CNI_ARCHIVE}\" \\\n && rm -f \"/tmp/${CNI_ARCHIVE}\" \\\n && mkdir -p /etc/systemd/system/docker.service.wants \\\n && ln -s /lib/systemd/system/dindnet.service /etc/systemd/system/docker.service.wants/ \\\n && ln -s /dind/containerd /var/lib/containerd \\\n && mkdir -p /dind/containerd \\\n && ln -s /k8s/hyperkube /usr/bin/kubectl \\\n && ln -s /k8s/hyperkube /usr/bin/kubelet \\\n && ln -s /k8s/kubeadm /usr/bin/kubeadm\n#  TODO: move getty target removal to the base image\nEXPOSE 8080/tcp\nRUN ln -fs /sbin/init /sbin/dind_init\nENTRYPOINT [\"/sbin/dind_init\"]\n","injectedSmells":[],"originalDockerfileHash":"b6a7ff464a03e96773eb1d2b0f32b782","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2017 Mirantis\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Some parts are taken from here:\n#   https://github.com/kubernetes/test-infra/blob/master/dind/base/Dockerfile\n#   Copyright 2017 The Kubernetes Authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   ci-xenial-systemd image source: https://github.com/errordeveloper/kubeadm-ci-dind\n#   The tag includes commit id\nFROM k8s.gcr.io/debian-base-amd64:0.4.1\nSTOPSIGNAL SIGRTMIN+3\nLABEL mirantis.kubeadm_dind_cluster=\"1\"\nENV ARCH=\"amd64\"\nENV CRICTL_VERSION=\"v1.12.0\"\nENV CRICTL_SHA256=\"e7d913bcce40bf54e37ab1d4b75013c823d0551e6bc088b217bc1893207b4844\"\nENV CNI_VERSION=\"v0.7.1\"\nENV CNI_ARCHIVE=\"cni-plugins-${ARCH}-${CNI_VERSION}.tgz\"\nENV CNI_SHA1=\"fb29e20401d3e9598a1d8e8d7992970a36de5e05\"\n#   Specify CONTAINERD_VERSION if containerd which ships with Docker needs to be\n#   replaced. Note that containerd version must be specified w/o \"v\" prefix,\n#   e.g. v1.2.1\nENV CONTAINERD_VERSION=\"1.2.1\"\nENV CONTAINERD_SHA256=\"9818e3af4f9aac8d55fc3f66114346db1d1acd48d45f88b2cefd3d3bafb380e0\"\n#   make systemd behave correctly in Docker container\n#   (e.g. accept systemd.setenv args, etc.)\nENV container=\"docker\"\nARG DEBIAN_FRONTEND=noninteractive\nRUN clean-install apt-transport-https bash bridge-utils ca-certificates curl e2fsprogs ebtables ethtool gnupg2 ipcalc iptables iproute2 iputils-ping ipset ipvsadm jq kmod lsb-core less lzma liblz4-tool mount net-tools procps socat software-properties-common util-linux vim systemd systemd-sysv sysvinit-utils\n#   Install docker.\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \\\n && apt-key fingerprint 0EBFCD88 \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $( lsb_release -cs ;) stable\"\nRUN clean-install docker-ce=5:18.09.0~3-0~debian-stretch \\\n && sed -i '/^disabled_plugins/d' /etc/containerd/config.toml\nRUN curl -sSL --retry 5 https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz > /tmp/crictl.tar.gz \\\n && echo \"${CRICTL_SHA256} /tmp/crictl.tar.gz\" | sha256sum -c \\\n && tar -C /usr/local/bin -xvzf /tmp/crictl.tar.gz \\\n && rm -f /tmp/crictl.tar.gz \\\n && if [ ${CONTAINERD_VERSION} ] ; then curl -sSL --retry 5 https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/containerd-${CONTAINERD_VERSION}.linux-amd64.tar.gz > /tmp/containerd.tar.gz \\\n && echo \"${CONTAINERD_SHA256} /tmp/containerd.tar.gz\" | sha256sum -c \\\n && tar -C /usr -xvzf /tmp/containerd.tar.gz \\\n && rm -f /tmp/containerd.tar.gz ; fi\nRUN mkdir -p /hypokube /etc/systemd/system/docker.service.d /var/lib/kubelet\nCOPY hypokube.dkr /hypokube/\nCOPY kubelet.service /lib/systemd/system/\nCOPY dindnet.service /lib/systemd/system/\nCOPY docker.service /lib/systemd/system/docker.service\nCOPY wrapkubeadm /usr/local/bin/\nCOPY start_services /usr/local/bin/\nCOPY rundocker /usr/local/bin\nCOPY dindnet /usr/local/bin\nCOPY snapshot /usr/local/bin\nCOPY kubeadm.conf.1.12.tmpl /etc/kubeadm.conf.1.12.tmpl\nCOPY kubeadm.conf.1.13.tmpl /etc/kubeadm.conf.1.13.tmpl\nCOPY dind-cluster-rbd /usr/bin/rbd\nCOPY node-info /\n#   Remove unwanted systemd services.\n#   TODO: use 'systemctl mask' to disable units\n#   See here for example: https://github.com/docker/docker/issues/27202#issuecomment-253579916\nRUN for i in /lib/systemd/system/sysinit.target.wants/*; do [ \"${i##*/}\" = \"systemd-tmpfiles-setup.service\" ] || rm -f \"$i\" ; done ; rm -f /lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /lib/systemd/system/local-fs.target.wants/* ; rm -f /lib/systemd/system/sockets.target.wants/*udev* ; rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /lib/systemd/system/basic.target.wants/* ; rm -f /lib/systemd/system/anaconda.target.wants/*\nRUN chmod +x /usr/local/bin/rundocker /usr/local/bin/dindnet /usr/local/bin/snapshot \\\n && mkdir -p /opt/cni/bin \\\n && curl -sSL --retry 5 https://github.com/containernetworking/plugins/releases/download/\"${CNI_VERSION}\"/\"${CNI_ARCHIVE}\" > \"/tmp/${CNI_ARCHIVE}\" \\\n && echo \"${CNI_SHA1} /tmp/${CNI_ARCHIVE}\" | sha1sum -c \\\n && tar -C /opt/cni/bin -xzf \"/tmp/${CNI_ARCHIVE}\" \\\n && rm -f \"/tmp/${CNI_ARCHIVE}\" \\\n && mkdir -p /etc/systemd/system/docker.service.wants \\\n && ln -s /lib/systemd/system/dindnet.service /etc/systemd/system/docker.service.wants/ \\\n && ln -s /dind/containerd /var/lib/containerd \\\n && mkdir -p /dind/containerd \\\n && ln -s /k8s/hyperkube /usr/bin/kubectl \\\n && ln -s /k8s/hyperkube /usr/bin/kubelet \\\n && ln -s /k8s/kubeadm /usr/bin/kubeadm\n#   TODO: move getty target removal to the base image\nEXPOSE 8080/tcp\nRUN ln -fs /sbin/init /sbin/dind_init\nENTRYPOINT [\"/sbin/dind_init\"]\n","originalDockerfileUglifiedHash":"9b42d6db01aa3baca2613b4daa7385bd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3bf9f468629300f71507111f5db60fab0166cfa9.dockerfile"}