{"seed":1197544802,"processedDockerfileHash":"ae22a51fbadc6fadbe6e3178047fa002","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#   To allow unicode characters in the terminal\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\n#   To make the CUDA device order match the IDs in nvidia-smi\nENV CUDA_DEVICE_ORDER=\"PCI_BUS_ID\"\n#  ##########\n#  # Tools ##\n#  ##########\nRUN apt-get update --fix-missing \\\n && apt-get install --no-install-recommends wget vim git unzip -y\n#  #############\n#  # Anaconda ##\n#  #############\n#   https://github.com/ContinuumIO/docker-images/blob/master/anaconda3/Dockerfile\nRUN apt-get update --fix-missing \\\n && apt-get install --no-install-recommends bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\n#   Removed Tini because Docker 1.13 has the --init flag.\nENV PATH=\"/opt/conda/bin:$PATH\"\n#  #######################\n#  # Intel MKL settings ##\n#  #######################\n#   Anaconda comes with MKL. Using Intel's conda channel doesn't seem needed.\n#   To allow setting the number of CPU threads\nRUN conda install mkl-service\n#   To allow MKL to see all CPU threads\nENV MKL_DYNAMIC=\"FALSE\"\n#   To set number of CPU threads:\n#     import mkl\n#     mkl.set_num_threads(NUM_THREADS)\n#   Sometimes allowing more threads slows things down.\n#   Consider these results from my system (6 cores, 2 threads per core, Intel i7-6850K):\n#     Eigendecomposition of a 2048x2048 matrix in X s.\n#       num threads | X (seconds)\n#       4           | 4.04\n#       5           | 3.95\n#       6           | 4.09\n#       7           | 4.90\n#       12          | 6.78\n#   Benchmark code from: http://markus-beuckelmann.de/blog/boosting-numpy-blas.html\n#   Discussion of slow downs from more threads: https://unix.stackexchange.com/a/80427/201733\n#  ############\n#  # Jupyter ##\n#  ############\nRUN conda update -y -n base conda\nRUN conda install -y notebook\n#   Error: IsADirectoryError(21, 'Is a directory'):\nRUN conda install -y jupyter_contrib_nbextensions -c conda-forge ; exit 0\n#   The error doesnt appear again if you try to install again.\nRUN conda install -y jupyter_contrib_nbextensions -c conda-forge\nRUN jupyter nbextensions_configurator enable --user\nRUN jupyter nbextension enable collapsible_headings/main\nRUN pip install ipywidgets==8.0.6\nRUN jupyter nbextension enable --py widgetsnbextension --sys-prefix\nRUN jupyter notebook --generate-config --allow-root \\\n && echo \"c.NotebookApp.ip = '*'\" >> ~/.jupyter/jupyter_notebook_config.py \\\n && echo \"c.NotebookApp.open_browser = False\" >> ~/.jupyter/jupyter_notebook_config.py\nRUN echo \"alias j8=\\\"CUDA_VISIBLE_DEVICES=0 jupyter notebook --port=8888 --allow-root\\\"\" >> ~/.bashrc\nRUN echo \"alias jupyter_notebook_GPU_0_PORT_8888=j8\" >> ~/.bashrc\nRUN echo \"alias j9=\\\"CUDA_VISIBLE_DEVICES=1 jupyter notebook --port=8889 --allow-root\\\"\" >> ~/.bashrc\nRUN echo \"alias jupyter_notebook_GPU_1_PORT_8889=j9\" >> ~/.bashrc\n#  ########################\n#  # Andres dependencies ##\n#  ########################\n#   https://github.com/antorsae/sp-society-camera-model-identification\nRUN apt-get install --no-install-recommends libturbojpeg -y\nRUN pip install numpngw==0.1.2 tqdm==4.65.0 jpeg4py==0.1.4 opencv-python==4.7.0.72\n#   Add sym links to:\n#     train\n#     test\n#     models\n#     submissions\n#     flickr_data\n#     val_data\n#  ############\n#  # PyTorch ##\n#  ############\n#   http://pytorch.org/\nRUN conda install pytorch torchvision cuda90 -c pytorch\n#  ##########\n#  # Other ##\n#  ##########\n#   Using Python Fire instead of argparse.\n#   https://github.com/google/python-fire\nRUN pip install fire==0.5.0 zarr==2.14.2 numcodecs==0.11.0\nRUN apt-get update --fix-missing \\\n && apt-get install --no-install-recommends libgl1-mesa-glx -y\n#  ############\n#  # Aliases ##\n#  ############\nRUN echo \"alias p=\\\"ipython --no-confirm-exit\\\"\" >> ~/.bashrc\nRUN echo \"alias c1=\\\"ipython -- main.py --gpu 1 --test-code --test\\\"\" >> ~/.bashrc\nCMD bash\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#  To allow unicode characters in the terminal\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\n#  To make the CUDA device order match the IDs in nvidia-smi\nENV CUDA_DEVICE_ORDER=\"PCI_BUS_ID\"\n# ##########\n# # Tools ##\n# ##########\nRUN apt-get update --fix-missing \\\n && apt-get install wget vim git unzip -y\n# #############\n# # Anaconda ##\n# #############\n#  https://github.com/ContinuumIO/docker-images/blob/master/anaconda3/Dockerfile\nRUN apt-get update --fix-missing \\\n && apt-get install bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\n#  Removed Tini because Docker 1.13 has the --init flag.\nENV PATH=\"/opt/conda/bin:$PATH\"\n# #######################\n# # Intel MKL settings ##\n# #######################\n#  Anaconda comes with MKL. Using Intel's conda channel doesn't seem needed.\n#  To allow setting the number of CPU threads\nRUN conda install mkl-service\n#  To allow MKL to see all CPU threads\nENV MKL_DYNAMIC=\"FALSE\"\n#  To set number of CPU threads:\n#    import mkl\n#    mkl.set_num_threads(NUM_THREADS)\n#  Sometimes allowing more threads slows things down.\n#  Consider these results from my system (6 cores, 2 threads per core, Intel i7-6850K):\n#    Eigendecomposition of a 2048x2048 matrix in X s.\n#      num threads | X (seconds)\n#      4           | 4.04\n#      5           | 3.95\n#      6           | 4.09\n#      7           | 4.90\n#      12          | 6.78\n#  Benchmark code from: http://markus-beuckelmann.de/blog/boosting-numpy-blas.html\n#  Discussion of slow downs from more threads: https://unix.stackexchange.com/a/80427/201733\n# ############\n# # Jupyter ##\n# ############\nRUN conda update -y -n base conda\nRUN conda install -y notebook\n#  Error: IsADirectoryError(21, 'Is a directory'):\nRUN conda install -y jupyter_contrib_nbextensions -c conda-forge ; exit 0\n#  The error doesnt appear again if you try to install again.\nRUN conda install -y jupyter_contrib_nbextensions -c conda-forge\nRUN jupyter nbextensions_configurator enable --user\nRUN jupyter nbextension enable collapsible_headings/main\nRUN pip install ipywidgets\nRUN jupyter nbextension enable --py widgetsnbextension --sys-prefix\nRUN jupyter notebook --generate-config --allow-root \\\n && echo \"c.NotebookApp.ip = '*'\" >> ~/.jupyter/jupyter_notebook_config.py \\\n && echo \"c.NotebookApp.open_browser = False\" >> ~/.jupyter/jupyter_notebook_config.py\nRUN echo \"alias j8=\\\"CUDA_VISIBLE_DEVICES=0 jupyter notebook --port=8888 --allow-root\\\"\" >> ~/.bashrc\nRUN echo \"alias jupyter_notebook_GPU_0_PORT_8888=j8\" >> ~/.bashrc\nRUN echo \"alias j9=\\\"CUDA_VISIBLE_DEVICES=1 jupyter notebook --port=8889 --allow-root\\\"\" >> ~/.bashrc\nRUN echo \"alias jupyter_notebook_GPU_1_PORT_8889=j9\" >> ~/.bashrc\n# ########################\n# # Andres dependencies ##\n# ########################\n#  https://github.com/antorsae/sp-society-camera-model-identification\nRUN apt-get install libturbojpeg -y\nRUN pip install numpngw tqdm jpeg4py opencv-python\n#  Add sym links to:\n#    train\n#    test\n#    models\n#    submissions\n#    flickr_data\n#    val_data\n# ############\n# # PyTorch ##\n# ############\n#  http://pytorch.org/\nRUN conda install pytorch torchvision cuda90 -c pytorch\n# ##########\n# # Other ##\n# ##########\n#  Using Python Fire instead of argparse.\n#  https://github.com/google/python-fire\nRUN pip install fire zarr numcodecs\nRUN apt-get update --fix-missing \\\n && apt-get install libgl1-mesa-glx -y\n# ############\n# # Aliases ##\n# ############\nRUN echo \"alias p=\\\"ipython --no-confirm-exit\\\"\" >> ~/.bashrc\nRUN echo \"alias c1=\\\"ipython -- main.py --gpu 1 --test-code --test\\\"\" >> ~/.bashrc\nCMD bash\n","injectedSmells":[],"originalDockerfileHash":"0dd3032397605e2fe5d0431147611562","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#   To allow unicode characters in the terminal\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\n#   To make the CUDA device order match the IDs in nvidia-smi\nENV CUDA_DEVICE_ORDER=\"PCI_BUS_ID\"\n#  ##########\n#  # Tools ##\n#  ##########\nRUN apt-get update --fix-missing \\\n && apt-get install wget vim git unzip -y\n#  #############\n#  # Anaconda ##\n#  #############\n#   https://github.com/ContinuumIO/docker-images/blob/master/anaconda3/Dockerfile\nRUN apt-get update --fix-missing \\\n && apt-get install bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\n#   Removed Tini because Docker 1.13 has the --init flag.\nENV PATH=\"/opt/conda/bin:$PATH\"\n#  #######################\n#  # Intel MKL settings ##\n#  #######################\n#   Anaconda comes with MKL. Using Intel's conda channel doesn't seem needed.\n#   To allow setting the number of CPU threads\nRUN conda install mkl-service\n#   To allow MKL to see all CPU threads\nENV MKL_DYNAMIC=\"FALSE\"\n#   To set number of CPU threads:\n#     import mkl\n#     mkl.set_num_threads(NUM_THREADS)\n#   Sometimes allowing more threads slows things down.\n#   Consider these results from my system (6 cores, 2 threads per core, Intel i7-6850K):\n#     Eigendecomposition of a 2048x2048 matrix in X s.\n#       num threads | X (seconds)\n#       4           | 4.04\n#       5           | 3.95\n#       6           | 4.09\n#       7           | 4.90\n#       12          | 6.78\n#   Benchmark code from: http://markus-beuckelmann.de/blog/boosting-numpy-blas.html\n#   Discussion of slow downs from more threads: https://unix.stackexchange.com/a/80427/201733\n#  ############\n#  # Jupyter ##\n#  ############\nRUN conda update -y -n base conda\nRUN conda install -y notebook\n#   Error: IsADirectoryError(21, 'Is a directory'):\nRUN conda install -y jupyter_contrib_nbextensions -c conda-forge ; exit 0\n#   The error doesnt appear again if you try to install again.\nRUN conda install -y jupyter_contrib_nbextensions -c conda-forge\nRUN jupyter nbextensions_configurator enable --user\nRUN jupyter nbextension enable collapsible_headings/main\nRUN pip install ipywidgets\nRUN jupyter nbextension enable --py widgetsnbextension --sys-prefix\nRUN jupyter notebook --generate-config --allow-root \\\n && echo \"c.NotebookApp.ip = '*'\" >> ~/.jupyter/jupyter_notebook_config.py \\\n && echo \"c.NotebookApp.open_browser = False\" >> ~/.jupyter/jupyter_notebook_config.py\nRUN echo \"alias j8=\\\"CUDA_VISIBLE_DEVICES=0 jupyter notebook --port=8888 --allow-root\\\"\" >> ~/.bashrc\nRUN echo \"alias jupyter_notebook_GPU_0_PORT_8888=j8\" >> ~/.bashrc\nRUN echo \"alias j9=\\\"CUDA_VISIBLE_DEVICES=1 jupyter notebook --port=8889 --allow-root\\\"\" >> ~/.bashrc\nRUN echo \"alias jupyter_notebook_GPU_1_PORT_8889=j9\" >> ~/.bashrc\n#  ########################\n#  # Andres dependencies ##\n#  ########################\n#   https://github.com/antorsae/sp-society-camera-model-identification\nRUN apt-get install libturbojpeg -y\nRUN pip install numpngw tqdm jpeg4py opencv-python\n#   Add sym links to:\n#     train\n#     test\n#     models\n#     submissions\n#     flickr_data\n#     val_data\n#  ############\n#  # PyTorch ##\n#  ############\n#   http://pytorch.org/\nRUN conda install pytorch torchvision cuda90 -c pytorch\n#  ##########\n#  # Other ##\n#  ##########\n#   Using Python Fire instead of argparse.\n#   https://github.com/google/python-fire\nRUN pip install fire zarr numcodecs\nRUN apt-get update --fix-missing \\\n && apt-get install libgl1-mesa-glx -y\n#  ############\n#  # Aliases ##\n#  ############\nRUN echo \"alias p=\\\"ipython --no-confirm-exit\\\"\" >> ~/.bashrc\nRUN echo \"alias c1=\\\"ipython -- main.py --gpu 1 --test-code --test\\\"\" >> ~/.bashrc\nCMD bash\n","originalDockerfileUglifiedHash":"caa7a2114f77d2e8c0a63dffe9ddef08","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b2c50c76158d34a7444bcbbbf5845123055db8aa.dockerfile"}