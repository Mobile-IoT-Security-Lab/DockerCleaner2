{"seed":101131005,"processedDockerfileHash":"b872e23e4a588f21882c6cde89e05bea","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#   Apache Thrift Docker build environment for Ubuntu Trusty\n#   Using all stock Ubuntu Trusty packaging except for:\n#   - d: does not come with Ubuntu so we're installing 2.070.0\n#   - dart: does not come with Ubuntu so we're installing 1.20.1\n#   - dotnetcore, disabled because netcore is for 1.0.0-preview and 2.0.0 is out\n#   - haxe, disabled because the distro comes with 3.0.0 and it cores while installing\n#   - node.js, disabled because it is at 0.10.0 in the distro which is too old (need 4+)\n#   - ocaml, disabled because it fails to install properly\n#\nFROM buildpack-deps:trusty-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends apt apt-transport-https apt-utils curl dirmngr software-properties-common wget -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb llvm ninja-build pkg-config valgrind vim `` -y\nENV PATH=\"/usr/lib/llvm-3.8/bin:$PATH\"\nRUN apt-get install --no-install-recommends libboost-all-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EBCF975E5BA24D5E \\\n && wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list \\\n && wget -qO - https://dlang.org/d-keyring.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends dmd-bin=2.070.2-0 libphobos2-dev=2.070.2-0 dub dfmt dscanner xdg-utils `` -y\n#   RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n#       curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n#       mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf libevent-master\n#   RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n#       mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf openssl-master\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends dart=1.20.1-1 `` -y\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\nRUN apt-get install --no-install-recommends golang-go `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\n#   disabled because it cores while installing\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# Haxe dependencies` \\\n#         haxe \\\n#         neko \\\n#         neko-dev && \\\n#       haxelib setup /usr/share/haxe/lib && \\\n#       haxelib install hxcpp 3.2.102\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-7-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.1 lua5.1-dev `` -y\n#   disabled because it is too old\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# Node.js dependencies` \\\n#         nodejs \\\n#         npm\n#   disabled because it fails to install properly\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# OCaml dependencies` \\\n#         ocaml \\\n#         opam && \\\n#       opam init --yes && \\\n#       opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php5 php5-cli php5-dev php-pear re2c phpunit `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-pip python-setuptools python-six python-twisted python-wheel python-zope.interface python3-all python3-all-dbg python3-all-dev python3-pip python3-setuptools python3-six python3-wheel python3-zope.interface `` -y \\\n && pip install ipaddress==1.0.23 backports.ssl_match_hostname==3.7.0.1 tornado==6.2 -U \\\n && pip3 install -U backports.ssl_match_hostname tornado\n#   installing tornado by pip/pip3 instead of debian package\n#   if we install the debian package, the build fails in py2\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN gem install bundler --version 2.4.12 --no-ri --no-rdoc\nRUN apt-get install --no-install-recommends cargo rustc `` -y\nRUN apt-get install --no-install-recommends cppcheck sloccount `` -y \\\n && pip install flake8==6.0.0\n#   Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\n#  Apache Thrift Docker build environment for Ubuntu Trusty\n#  Using all stock Ubuntu Trusty packaging except for:\n#  - d: does not come with Ubuntu so we're installing 2.070.0\n#  - dart: does not come with Ubuntu so we're installing 1.20.1\n#  - dotnetcore, disabled because netcore is for 1.0.0-preview and 2.0.0 is out\n#  - haxe, disabled because the distro comes with 3.0.0 and it cores while installing\n#  - node.js, disabled because it is at 0.10.0 in the distro which is too old (need 4+)\n#  - ocaml, disabled because it fails to install properly\n#\nFROM buildpack-deps:trusty-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends apt apt-transport-https apt-utils curl dirmngr software-properties-common wget -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb llvm ninja-build pkg-config valgrind vim `` -y\nENV PATH=\"/usr/lib/llvm-3.8/bin:$PATH\"\nRUN apt-get install --no-install-recommends libboost-all-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EBCF975E5BA24D5E \\\n && wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list \\\n && wget -qO - https://dlang.org/d-keyring.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends dmd-bin=2.070.2-0 libphobos2-dev=2.070.2-0 dub dfmt dscanner xdg-utils `` -y\n#  RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n#      curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n#      mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#      mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#      rm -rf libevent-master\n#  RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n#      mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#      mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#      rm -rf openssl-master\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends dart=1.20.1-1 `` -y\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\nRUN apt-get install --no-install-recommends golang-go `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\n#  disabled because it cores while installing\n#  RUN apt-get install -y --no-install-recommends \\\n#  `# Haxe dependencies` \\\n#        haxe \\\n#        neko \\\n#        neko-dev && \\\n#      haxelib setup /usr/share/haxe/lib && \\\n#      haxelib install hxcpp 3.2.102\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-7-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.1 lua5.1-dev `` -y\n#  disabled because it is too old\n#  RUN apt-get install -y --no-install-recommends \\\n#  `# Node.js dependencies` \\\n#        nodejs \\\n#        npm\n#  disabled because it fails to install properly\n#  RUN apt-get install -y --no-install-recommends \\\n#  `# OCaml dependencies` \\\n#        ocaml \\\n#        opam && \\\n#      opam init --yes && \\\n#      opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php5 php5-cli php5-dev php-pear re2c phpunit `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-pip python-setuptools python-six python-twisted python-wheel python-zope.interface python3-all python3-all-dbg python3-all-dev python3-pip python3-setuptools python3-six python3-wheel python3-zope.interface `` -y \\\n && pip install ipaddress backports.ssl_match_hostname tornado -U \\\n && pip3 install -U backports.ssl_match_hostname tornado\n#  installing tornado by pip/pip3 instead of debian package\n#  if we install the debian package, the build fails in py2\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN gem install bundler --no-ri --no-rdoc\nRUN apt-get install --no-install-recommends cargo rustc `` -y\nRUN apt-get install --no-install-recommends cppcheck sloccount `` -y \\\n && pip install flake8\n#  Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","injectedSmells":[],"originalDockerfileHash":"4ecaa9ddfdfa838570848d44060722fd","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#   Apache Thrift Docker build environment for Ubuntu Trusty\n#   Using all stock Ubuntu Trusty packaging except for:\n#   - d: does not come with Ubuntu so we're installing 2.070.0\n#   - dart: does not come with Ubuntu so we're installing 1.20.1\n#   - dotnetcore, disabled because netcore is for 1.0.0-preview and 2.0.0 is out\n#   - haxe, disabled because the distro comes with 3.0.0 and it cores while installing\n#   - node.js, disabled because it is at 0.10.0 in the distro which is too old (need 4+)\n#   - ocaml, disabled because it fails to install properly\n#\nFROM buildpack-deps:trusty-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends apt apt-transport-https apt-utils curl dirmngr software-properties-common wget -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb llvm ninja-build pkg-config valgrind vim `` -y\nENV PATH=\"/usr/lib/llvm-3.8/bin:$PATH\"\nRUN apt-get install --no-install-recommends libboost-all-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EBCF975E5BA24D5E \\\n && wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list \\\n && wget -qO - https://dlang.org/d-keyring.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends dmd-bin=2.070.2-0 libphobos2-dev=2.070.2-0 dub dfmt dscanner xdg-utils `` -y\n#   RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n#       curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n#       mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf libevent-master\n#   RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n#       mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf openssl-master\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends dart=1.20.1-1 `` -y\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\nRUN apt-get install --no-install-recommends golang-go `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\n#   disabled because it cores while installing\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# Haxe dependencies` \\\n#         haxe \\\n#         neko \\\n#         neko-dev && \\\n#       haxelib setup /usr/share/haxe/lib && \\\n#       haxelib install hxcpp 3.2.102\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-7-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.1 lua5.1-dev `` -y\n#   disabled because it is too old\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# Node.js dependencies` \\\n#         nodejs \\\n#         npm\n#   disabled because it fails to install properly\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# OCaml dependencies` \\\n#         ocaml \\\n#         opam && \\\n#       opam init --yes && \\\n#       opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php5 php5-cli php5-dev php-pear re2c phpunit `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-pip python-setuptools python-six python-twisted python-wheel python-zope.interface python3-all python3-all-dbg python3-all-dev python3-pip python3-setuptools python3-six python3-wheel python3-zope.interface `` -y \\\n && pip install ipaddress backports.ssl_match_hostname tornado -U \\\n && pip3 install -U backports.ssl_match_hostname tornado\n#   installing tornado by pip/pip3 instead of debian package\n#   if we install the debian package, the build fails in py2\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN gem install bundler --no-ri --no-rdoc\nRUN apt-get install --no-install-recommends cargo rustc `` -y\nRUN apt-get install --no-install-recommends cppcheck sloccount `` -y \\\n && pip install flake8\n#   Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","originalDockerfileUglifiedHash":"e286e3ffb1456fc03fc1db8786af0ce5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/db2041a1fe4ce5878b7e89cdbe77c606247af569.dockerfile"}