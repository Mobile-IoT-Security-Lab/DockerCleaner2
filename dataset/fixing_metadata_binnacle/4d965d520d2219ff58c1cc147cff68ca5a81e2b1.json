{"seed":2491216835,"processedDockerfileHash":"4610cfe6e44095b123b80d8560ca5457","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM python:2.7-slim\nENV APP_DIR=\"/munkiwebadmin\"\n#  munkiwebadmin config\nENV APPNAME=\"'MunkiWebAdmin'\"\nENV TIME_ZONE=\"'UTC'\"\nENV LANGUAGE_CODE=\"'en-us'\"\nENV SIMPLEMDMKEY=\"''\"\nENV ALLOWED_HOSTS=\"'[*]'\"\nENV DEFAULT_MANIFEST=\"'serail_number'\"\nENV PROXY_ADDRESS=\"''\"\nENV STYLE=\"'default'\"\nENV VAULT_USERNAME=\"'admin'\"\nENV CONVERT_TO_QWERTZ=\"''\"\n#  database\nENV DB=\"'postgres'\"\nENV DB_NAME=\"'munkiwebadmin_db'\"\nENV DB_USER=\"'postgres'\"\nENV DB_PASS=\"'postgres'\"\nENV DB_HOST=\"'db'\"\nENV DB_PORT=\"'5432'\"\n#   Install all debian packages\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends gcc=4:8.3.0-1 g++=4:8.3.0-1 unixodbc-dev=2.3.6-0.1 mysql-client libmariadbclient-dev=1:10.3.38-0+deb10u1 libpq-dev=11.19-0+deb10u1 sqlite3=3.27.2-3+deb10u2 net-tools=1.60+git20180626.aebd88e-1 supervisor=3.3.5-1 unzip=6.0-23+deb10u3 tdsodbc=1.00.104-1+deb10u1 git=1:2.20.1-2+deb10u8 gnupg=2.2.12-1+deb10u2 curl=7.64.0-4+deb10u5 nginx=1.14.2-2+deb10u5 apt-transport-https=1.8.2.3 libsasl2-dev=2.1.27+dfsg-1+deb10u2 python-dev=2.7.16-1 libldap2-dev=2.4.47+dfsg-3+deb10u7 libssl-dev=1.1.1n-0+deb10u4 dnsutils=1:9.11.5.P4+dfsg-5.1+deb10u8 -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   install necessary locales\nRUN apt-get clean \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends locales=2.28-10+deb10u2 -y )\nRUN sed -i '/^#.* en_US.* /s/^#//' /etc/locale.gen\nRUN locale-gen\n#   install mssql\nRUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list\nRUN : \\\n && ACCEPT_EULA=Y apt-get install -y msodbcsql17\n#   create dirs\nRUN mkdir ${APP_DIR}\nRUN mkdir /munkirepo\nRUN mkdir /munkitools\nRUN mkdir /config\nRUN mkdir /fieldkeys\n#   download munkitools\nRUN curl -Lk -o munkitools.zip `curl --silent https://api.github.com/repos/munki/munki/releases/latest | /usr/bin/awk '/zipball_url/ { print $2 }' | sed 's/[\",]//g' ` \\\n && unzip munkitools.zip -d . \\\n && rm -rf /munkitools.zip\nRUN cp -r /munki-munki*/code/client/* /munkitools \\\n && rm -rf /munki-munki*\n#   Copy all source files to the container's working directory\nCOPY . ${APP_DIR}\nWORKDIR ${APP_DIR}\n#  load default style\nRUN curl -Lk -o /tmp/mwa2-style.zip https://github.com/SteveKueng/mwa2-style/archive/master.zip \\\n && unzip /tmp/mwa2-style.zip -d /tmp \\\n && rm -rf /tmp/mwa2-style.zip\nRUN mkdir -p /munkiwebadmin/munkiwebadmin/static/styles/default\nRUN cp -r /tmp/mwa2-style-master/* /munkiwebadmin/munkiwebadmin/static/styles/default \\\n && rm -rf /tmp/mwa2-style-master\n#   clean pyc\nRUN find ${APP_DIR} -name '*.pyc' -delete\n#   Install all python dependency libs\nRUN pip install -r requirements.txt\n#   Configure Nginx, uWSGI and supervisord\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /var/log/uwsgi\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   configure git\nRUN git config --global core.preloadindex true\nRUN git config --global core.fscache true\nRUN git config --global gc.auto 256\nVOLUME [ \"/munkirepo\", \"/fieldkeys\", \"/reposado\" ]\n#   Exposed port\nEXPOSE 80/tcp\nENTRYPOINT [\"/bin/sh\", \"docker/run.sh\"]\nCMD [\"/usr/bin/supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM python:2.7-slim\nENV APP_DIR=\"/munkiwebadmin\"\n# munkiwebadmin config\nENV APPNAME=\"'MunkiWebAdmin'\"\nENV TIME_ZONE=\"'UTC'\"\nENV LANGUAGE_CODE=\"'en-us'\"\nENV SIMPLEMDMKEY=\"''\"\nENV ALLOWED_HOSTS=\"'[*]'\"\nENV DEFAULT_MANIFEST=\"'serail_number'\"\nENV PROXY_ADDRESS=\"''\"\nENV STYLE=\"'default'\"\nENV VAULT_USERNAME=\"'admin'\"\nENV CONVERT_TO_QWERTZ=\"''\"\n# database\nENV DB=\"'postgres'\"\nENV DB_NAME=\"'munkiwebadmin_db'\"\nENV DB_USER=\"'postgres'\"\nENV DB_PASS=\"'postgres'\"\nENV DB_HOST=\"'db'\"\nENV DB_PORT=\"'5432'\"\n#  Install all debian packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc g++ unixodbc-dev mysql-client libmariadbclient-dev libpq-dev sqlite3 net-tools supervisor unzip tdsodbc git gnupg curl nginx apt-transport-https libsasl2-dev python-dev libldap2-dev libssl-dev dnsutils -y \\\n && rm -rf /var/lib/apt/lists/*\n#  install necessary locales\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install locales -y\nRUN sed -i '/^#.* en_US.* /s/^#//' /etc/locale.gen\nRUN locale-gen\n#  install mssql\nRUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list\nRUN apt-get update \\\n && ACCEPT_EULA=Y apt-get install -y msodbcsql17\n#  create dirs\nRUN mkdir ${APP_DIR}\nRUN mkdir /munkirepo\nRUN mkdir /munkitools\nRUN mkdir /config\nRUN mkdir /fieldkeys\n#  download munkitools\nRUN curl -Lk -o munkitools.zip `curl --silent https://api.github.com/repos/munki/munki/releases/latest | /usr/bin/awk '/zipball_url/ { print $2 }' | sed 's/[\",]//g' ` \\\n && unzip munkitools.zip -d . \\\n && rm -rf /munkitools.zip\nRUN cp -r /munki-munki*/code/client/* /munkitools \\\n && rm -rf /munki-munki*\n#  Copy all source files to the container's working directory\nCOPY . ${APP_DIR}\nWORKDIR ${APP_DIR}\n# load default style\nRUN curl -Lk -o /tmp/mwa2-style.zip https://github.com/SteveKueng/mwa2-style/archive/master.zip \\\n && unzip /tmp/mwa2-style.zip -d /tmp \\\n && rm -rf /tmp/mwa2-style.zip\nRUN mkdir -p /munkiwebadmin/munkiwebadmin/static/styles/default\nRUN cp -r /tmp/mwa2-style-master/* /munkiwebadmin/munkiwebadmin/static/styles/default \\\n && rm -rf /tmp/mwa2-style-master\n#  clean pyc\nRUN find ${APP_DIR} -name '*.pyc' -delete\n#  Install all python dependency libs\nRUN pip install -r requirements.txt\n#  Configure Nginx, uWSGI and supervisord\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /var/log/uwsgi\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  configure git\nRUN git config --global core.preloadindex true\nRUN git config --global core.fscache true\nRUN git config --global gc.auto 256\nVOLUME [ \"/munkirepo\", \"/fieldkeys\", \"/reposado\" ]\n#  Exposed port\nEXPOSE 80/tcp\nENTRYPOINT [\"/bin/sh\", \"docker/run.sh\"]\nCMD [\"/usr/bin/supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"6440ee7e48bf3894e07a72ea947cf3c3","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM python:2.7-slim\nENV APP_DIR=\"/munkiwebadmin\"\n#  munkiwebadmin config\nENV APPNAME=\"'MunkiWebAdmin'\"\nENV TIME_ZONE=\"'UTC'\"\nENV LANGUAGE_CODE=\"'en-us'\"\nENV SIMPLEMDMKEY=\"''\"\nENV ALLOWED_HOSTS=\"'[*]'\"\nENV DEFAULT_MANIFEST=\"'serail_number'\"\nENV PROXY_ADDRESS=\"''\"\nENV STYLE=\"'default'\"\nENV VAULT_USERNAME=\"'admin'\"\nENV CONVERT_TO_QWERTZ=\"''\"\n#  database\nENV DB=\"'postgres'\"\nENV DB_NAME=\"'munkiwebadmin_db'\"\nENV DB_USER=\"'postgres'\"\nENV DB_PASS=\"'postgres'\"\nENV DB_HOST=\"'db'\"\nENV DB_PORT=\"'5432'\"\n#   Install all debian packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc g++ unixodbc-dev mysql-client libmariadbclient-dev libpq-dev sqlite3 net-tools supervisor unzip tdsodbc git gnupg curl nginx apt-transport-https libsasl2-dev python-dev libldap2-dev libssl-dev dnsutils -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install necessary locales\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install locales -y\nRUN sed -i '/^#.* en_US.* /s/^#//' /etc/locale.gen\nRUN locale-gen\n#   install mssql\nRUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list\nRUN apt-get update \\\n && ACCEPT_EULA=Y apt-get install -y msodbcsql17\n#   create dirs\nRUN mkdir ${APP_DIR}\nRUN mkdir /munkirepo\nRUN mkdir /munkitools\nRUN mkdir /config\nRUN mkdir /fieldkeys\n#   download munkitools\nRUN curl -Lk -o munkitools.zip `curl --silent https://api.github.com/repos/munki/munki/releases/latest | /usr/bin/awk '/zipball_url/ { print $2 }' | sed 's/[\",]//g' ` \\\n && unzip munkitools.zip -d . \\\n && rm -rf /munkitools.zip\nRUN cp -r /munki-munki*/code/client/* /munkitools \\\n && rm -rf /munki-munki*\n#   Copy all source files to the container's working directory\nCOPY . ${APP_DIR}\nWORKDIR ${APP_DIR}\n#  load default style\nRUN curl -Lk -o /tmp/mwa2-style.zip https://github.com/SteveKueng/mwa2-style/archive/master.zip \\\n && unzip /tmp/mwa2-style.zip -d /tmp \\\n && rm -rf /tmp/mwa2-style.zip\nRUN mkdir -p /munkiwebadmin/munkiwebadmin/static/styles/default\nRUN cp -r /tmp/mwa2-style-master/* /munkiwebadmin/munkiwebadmin/static/styles/default \\\n && rm -rf /tmp/mwa2-style-master\n#   clean pyc\nRUN find ${APP_DIR} -name '*.pyc' -delete\n#   Install all python dependency libs\nRUN pip install -r requirements.txt\n#   Configure Nginx, uWSGI and supervisord\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /var/log/uwsgi\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   configure git\nRUN git config --global core.preloadindex true\nRUN git config --global core.fscache true\nRUN git config --global gc.auto 256\nVOLUME [ \"/munkirepo\", \"/fieldkeys\", \"/reposado\" ]\n#   Exposed port\nEXPOSE 80/tcp\nENTRYPOINT [\"/bin/sh\", \"docker/run.sh\"]\nCMD [\"/usr/bin/supervisord\"]\n","originalDockerfileUglifiedHash":"8baa4b98b9530658bda8dfcd07e2912d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4d965d520d2219ff58c1cc147cff68ca5a81e2b1.dockerfile"}