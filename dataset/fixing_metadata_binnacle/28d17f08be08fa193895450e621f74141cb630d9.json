{"seed":2499089686,"processedDockerfileHash":"3d5f9557f752e3ef374226d56ec090fa","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"FROM fedora:29\nLABEL maintainer=\"heh@praqma.net kaz@praqma.net lel@praqma.net\"\n#   Why Fedora as base OS?\n#   * Fedora always has latest packages compared to CentOS.\n#   * Fedora does not need extra CentOS's EPEL repositories to install tools.\n#   * Fedora runs as 'root', and has '/' as it's default WORKDIR.\n#   This Dockerfile builds a container image for Atlassian BitBucket, \n#   using atlassian-bitbucket-*.bin installer. The advantage of using the bin-installer is\n#     that it includes OracleJDK. We do not have to depend on Oracle Java \n#     or manage it in our image.\n#\n#   Since this container image contains OracleJDK, we can not (re)distribute it \n#     as binary image, because of licensing issues. Though mentioning it in \n#     Dockerfile is ok.\n#\n#   IMPORTANT: Check build-instructions.md for building this image.\n#  ################## START -  Environment variables #############################\n#\n#\n#   BITBUCKET_VERSION:\n#   ----------------- \n#   The value for BITBUCKET_VERSION should be a version number,\n#     which is part of the name of the Bitbucket software bin/tarball/zip.\nENV BITBUCKET_VERSION=\"6.3.0\"\n#   BITBUCKET_DOWNLOAD_URL:\n#   ----------------------\n#   User does not need to modify this ENV variable unless absolutely necessary.\nENV BITBUCKET_DOWNLOAD_URL=\"https://www.atlassian.com/software/stash/downloads/binary/atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin\"\n#   OS_USERNAME:\n#   -----------\n#   Bitbucket bin-installer automatically creates a 'atlbitbucket' user and a 'atlbitbucket' group. \n#   Just make sure to specify what it's name is.\nENV OS_USERNAME=\"atlbitbucket\"\n#   OS_GROUPNAME:\n#   ------------\n#   Bitbucket bin-installer automatically creates a 'atlbitbucket' user and a 'atlbitbucket' group. \n#   Just make sure to specify what it's name is.\nENV OS_GROUPNAME=\"atlbitbucket\"\n#   BITBUCKET_HOME:\n#   --------------\n#   Persistent directory: (need persistent storage.) This can be mounted on a OS directory mount-point.\n#   Need to be owned by the same UID as of user bitbucket, normally UID 1000.\n#   The value if this variable should be same as 'app.bitbucketHome' in the bitbucket-response.varfile file.\nENV BITBUCKET_HOME=\"/var/atlassian/application-data/bitbucket\"\n#   BITBUCKET_INSTALL:\n#   -----------------\n#   BitBucket Installation files: (persistent storage NOT needed)\n#   This ENV var is important to set here, as it is used by docker-entry.sh script at container startup.\n#   The value if this variable should be same as 'app.defaultInstallDir' in the bitbucket-response.varfile file.\nENV BITBUCKET_INSTALL=\"/opt/atlassian/bitbucket\"\n#   TZ_FILE:\n#   -------\n#   This is the timezone file to use for the container.\n#   Timezone files are normally found in /usr/share/zoneinfo/* .\n#   Use correct zone for the container image.\nENV TZ_FILE=\"\\\"/usr/share/zoneinfo/Europe/Oslo\\\"\"\n#   JAVA_HOME:\n#   ---------\nENV JAVA_HOME=\"/opt/atlassian/bitbucket/jre\"\n#   JAVA_OPTS:\n#   ---------\n#   Optional values you want to pass as JAVA_OPTS. You can pass Java memory parameters to this variable,\n#      but in newer versionso of Atlassian software, memory settings are done in CATALINA_OPTS.\n#   JAVA_OPTS  \"-Dsome.javaSetting=somevalue\"\n#   ENV JAVA_OPTS \"-Dhttp.nonProxyHosts=bitbucket.example.com\"\n#   CATALINA_OPTS:\n#   -------------\n#   CATLINA_OPTS will be used by BITBUCKET_INSTALL/bin/setenv.sh script .\n#   You can use this to setup internationalization options and also any Java memory settings.\n#   It is a good idea to use same value for -Xms and -Xmx to avoid frequence shrinking and expanding of Java memory.\n#   In the example below it is set to 2 GB. It should always be half (or less) of physical RAM of the server/node/pod/container.\nENV CATALINA_OPTS=\"\\\"-Dfile.encoding=UTF-8 -Xms1024m -Xmx1024m\\\"\"\n#   ENABLE_CERT_IMPORT:\n#   ------------------\n#   Allow import of user defined certificates.\nENV ENABLE_CERT_IMPORT=\"false\"\n#   SSL_CERTS_PATH:\n#   --------------\n#   If you have self signed certificates, you need to force Atlassian applications to trust those certs.\n#   Very useful when different atlassian applications need to talk to each other.\n#   This should be a path which you either volume-mount in docker or k8s.\nENV SSL_CERTS_PATH=\"/var/atlassian/ssl\"\n#   PLUGINS_FILE (BitBucket plugins):\n#   --------------------------------\n#   Any additional bitbucket plugins you need to install should be listed in file named `bitbucket-plugins.list` - one at each line.\n#   Then mount that file at container-runtime at the location you specified in PLUGINS_FILE environment variable.\n#   This also means that you can control the location and name of this file just by controlling this variable.\n#   The following specifies the path of this file **inside** the container. It is later used by docker-entrypoint.sh.\nENV PLUGINS_FILE=\"/tmp/bitbucket-plugins.list\"\n#   ELASTICSEARCH_ENABLED\n#   Set 'false' to prevent Elasticsearch from starting in the container. \n#   This should be used if Elasticsearch is running remotely, e.g. for if Bitbucket is running in a Data Center cluster.\nENV ELASTICSEARCH_ENABLED=\"false\"\n#   DATACENTER_MODE:\n#   ---------------\n#   This needs to be set to true if you want to setup Bitbucket in a data-center mode.\nENV DATACENTER_MODE=\"false\"\n#   BITBUCKET_DATACENTER_SHARE:\n#   --------------------------\n#   This is only used in DataCenter mode. It needs to be a shared location, which multiple Bitbucket instances can write to.\n#   This location will most probably be an NFS share, and should exist on the file system.\n#   If it does not exist, then it will be created and chown to the Bitbucket OS user.\n#   NB: For this to work, DATA_CENTER_MODE should be set to true.\n#   ENV BITBUCKET_DATACENTER_SHARE /var/atlassian/bitbucket-datacenter\nENV BITBUCKET_DATACENTER_SHARE=\"/mnt/shared\"\n#   Reverse proxy specific environment variables:\n#   ============================================\n#   Reference: README.md at https://bitbucket.org/atlassian-docker/docker-atlassian-bitbucket-server/src/base-6/\n#   This applies to BitBucket version 5+ . These variables are:\n#   SERVER_SECURE:\n#   -------------\n#   This should be set to true if SERVER_SCHEME (below) is set to https.\n#   Otherwise, it should be set to false (default).\n#   ENV SERVER_SECURE false\n#   SERVER_SCHEME:\n#   -------------\n#   The scheme used by the internet facing proxy (normally https)\n#   ENV SERVER_SCHEME https\n#   SERVER_PROXY_PORT:\n#   -----------------\n#   The public facing port, not the bitbucket container port\n#   ENV SERVER_PROXY_PORT 443\n#   SERVER_PROXY_NAME:\n#   -----------------\n#   The FQDN used by anyone accessing bitbucket from outside (i.e. The FQDN of the proxy server/ingress controller):\n#   ENV SERVER_PROXY_NAME=<Your url here>\n#   ENV SERVER_PROXY_NAME=bitbucket.example.com\n#   SERVER_CONTEXT_PATH:\n#   -------------------\n#   Normally you do not need to change the context-path, and if undefined, it is set to '/' by default.\n#   ENV SERVER_CONTEXT_PATH=\"/\"\n#\n#\n#  ###################################### END - Environment variables #######################################\n#  ########################################## START - Build image #####################################\n#\n#\n#   Internaltionalization / i18n - Notes on OS settings (Fedora):\n#   ------------------------------------------------------------\n#   Note the file '/etc/sysconfig/i18n' does not exist by default\n#   RUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/sysconfig/i18n\n#   RUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.conf\n#   Internaltionalization / i18n - Notes on OS settings (Debian):\n#   ------------------------------------------------------------\n#   RUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/default/locale\n#   Unattended installation mode also allows you to supply a response file with a -varfile option, \n#     to supply answers for all questions that are used instead of the defaults.\n#   https://confluence.atlassian.com/bitbucketserver/running-the-bitbucket-server-installer-776640183.html#RunningtheBitbucketServerinstaller-Consoleandunattendedmode\n#   Bitbucket response file is used for unattended installation using atlassian-bitbucket-*.bin installer.\nCOPY bitbucket-response.varfile /tmp/\n#   Combine several steps in a single RUN to reduce the image size:\n#   --------------------------------------------------------------\n#   We install some tools. We need:\n#   * xmlstarlet to modify XML files though.\n#   * latest git to be able to install bitbucket\n#   * gunzip, hostname , ps are  needed by bitbucket installer.\n#   * 'which' is used by the installer to find the location of gunzip\n#   * iproute gives us 'ss' newer alternative for netstat.\n#   Download Bitbucket Software: (gets downloaded in '/'):\n#   -----------------------------------------------------\n#   https://www.atlassian.com/software/bitbucket/downloads/binary/atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin\n#   The 'sync' is important for some reason. Otherwise dockerhub fails to build the image.\n#   Sometimes the installer fails for whatever reason.\n#   So during development time, it is best to separate the download step from the install step.\n#   Chown the BITBUCKET_INSTALL directory, so we can edit files there later (such as server.xml), as user bitbucket.\n#   The BITBUCKET_HOME is already setup by the installer to be owned by Bitbucket user.\nRUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/sysconfig/i18n \\\n && echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.conf \\\n && yum -y install findutils which gzip hostname procps iputils bind-utils iproute jq git dejavu-sans-fonts \\\n && sync \\\n && yum -y clean all \\\n && ln -sf ${TZ_FILE} /etc/localtime \\\n && echo \"Downloading BitBucket version ${BITBUCKET_VERSION} from: ${BITBUCKET_DOWNLOAD_URL}\" \\\n && curl -# -O -L ${BITBUCKET_DOWNLOAD_URL} \\\n && sync \\\n && chmod +x atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin \\\n && ./atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin -q -varfile /tmp/bitbucket-response.varfile \\\n && sync \\\n && rm atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin \\\n && if [ ! -z \"${BITBUCKET_DATACENTER_SHARE}\" ] \\\n && [ ! -d \"${BITBUCKET_DATACENTER_SHARE}\" ] ; then mkdir ${BITBUCKET_DATACENTER_SHARE} ; fi \\\n && if [ ! -z \"${BITBUCKET_DATACENTER_SHARE}\" ] \\\n && [ -d \"${BITBUCKET_DATACENTER_SHARE}\" ] ; then chown -R ${OS_USERNAME}:${OS_GROUPNAME} ${BITBUCKET_DATACENTER_SHARE} ; fi \\\n && chown -R ${OS_USERNAME}:${OS_GROUPNAME} ${BITBUCKET_INSTALL} ${BITBUCKET_HOME} \\\n && HOME_DIR=$( grep ${OS_USERNAME} /etc/passwd | cut -d ':' -f 6 ;) \\\n && cp /etc/localtime ${HOME_DIR}/ \\\n && chown ${OS_USERNAME}:${OS_GROUPNAME} ${HOME_DIR}/localtime \\\n && ln -sf ${HOME_DIR}/localtime /etc/localtime \\\n && sync \\\n && if [ -n \"${SSL_CERTS_PATH}\" ] \\\n && [ ! -d \"${SSL_CERTS_PATH}\" ] ; then mkdir -p ${SSL_CERTS_PATH} ; fi \\\n && if [ -n \"${SSL_CERTS_PATH}\" ] \\\n && [ -d \"${SSL_CERTS_PATH}\" ] ; then chown ${OS_USERNAME}:${OS_GROUPNAME} ${SSL_CERTS_PATH} ; fi \\\n && sync\n#   Copy the entry point to / path.\nCOPY docker-entrypoint.sh /\n#   Expose default HTTP connector port.\nEXPOSE 7990/tcp\n#   Expose the SSH port.\nEXPOSE 7999/tcp\n#   Change the the default working directory from '/' to '/var/atlassian/application-data/bitbucket'\nWORKDIR ${BITBUCKET_HOME}\n#   Set the default user for the image/container to user 'atlbitbucket'.\n#     Bitbucket software will be run as this user & group.\n#     USER ${OS_USER_NAME}:${OS_USER_GROUP}\n#   USER atlbitbucket:atlbitbucket\nUSER ${OS_USERNAME}:${OS_GROUPNAME}\n#   Persistent volumes:\n#   Set volume mount points for installation and home directory.\n#   Changes to the home directory needs to be persisted.\n#   Optionally, changes to parts of the installation directory also need persistence, eg. logs.\nVOLUME [\"${BITBUCKET_HOME}\", \"${BITBUCKET_INSTALL}/logs\"]\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#   Run Atlassian Bitbucket as a foreground process by default, using our modified startup script.\n#   The CMD command does not take environment variable, so it has to be a fixed path.\nCMD [\"/opt/atlassian/bitbucket/bin/start-bitbucket.sh\", \"-fg\"]\n#\n#\n#  ########################################## END - Build image ###########################################\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM fedora:29\nLABEL maintainer=\"heh@praqma.net kaz@praqma.net lel@praqma.net\"\n#  Why Fedora as base OS?\n#  * Fedora always has latest packages compared to CentOS.\n#  * Fedora does not need extra CentOS's EPEL repositories to install tools.\n#  * Fedora runs as 'root', and has '/' as it's default WORKDIR.\n#  This Dockerfile builds a container image for Atlassian BitBucket, \n#  using atlassian-bitbucket-*.bin installer. The advantage of using the bin-installer is\n#    that it includes OracleJDK. We do not have to depend on Oracle Java \n#    or manage it in our image.\n#\n#  Since this container image contains OracleJDK, we can not (re)distribute it \n#    as binary image, because of licensing issues. Though mentioning it in \n#    Dockerfile is ok.\n#\n#  IMPORTANT: Check build-instructions.md for building this image.\n# ################## START -  Environment variables #############################\n#\n#\n#  BITBUCKET_VERSION:\n#  ----------------- \n#  The value for BITBUCKET_VERSION should be a version number,\n#    which is part of the name of the Bitbucket software bin/tarball/zip.\nENV BITBUCKET_VERSION=\"6.3.0\"\n#  BITBUCKET_DOWNLOAD_URL:\n#  ----------------------\n#  User does not need to modify this ENV variable unless absolutely necessary.\nENV BITBUCKET_DOWNLOAD_URL=\"https://www.atlassian.com/software/stash/downloads/binary/atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin\"\n#  OS_USERNAME:\n#  -----------\n#  Bitbucket bin-installer automatically creates a 'atlbitbucket' user and a 'atlbitbucket' group. \n#  Just make sure to specify what it's name is.\nENV OS_USERNAME=\"atlbitbucket\"\n#  OS_GROUPNAME:\n#  ------------\n#  Bitbucket bin-installer automatically creates a 'atlbitbucket' user and a 'atlbitbucket' group. \n#  Just make sure to specify what it's name is.\nENV OS_GROUPNAME=\"atlbitbucket\"\n#  BITBUCKET_HOME:\n#  --------------\n#  Persistent directory: (need persistent storage.) This can be mounted on a OS directory mount-point.\n#  Need to be owned by the same UID as of user bitbucket, normally UID 1000.\n#  The value if this variable should be same as 'app.bitbucketHome' in the bitbucket-response.varfile file.\nENV BITBUCKET_HOME=\"/var/atlassian/application-data/bitbucket\"\n#  BITBUCKET_INSTALL:\n#  -----------------\n#  BitBucket Installation files: (persistent storage NOT needed)\n#  This ENV var is important to set here, as it is used by docker-entry.sh script at container startup.\n#  The value if this variable should be same as 'app.defaultInstallDir' in the bitbucket-response.varfile file.\nENV BITBUCKET_INSTALL=\"/opt/atlassian/bitbucket\"\n#  TZ_FILE:\n#  -------\n#  This is the timezone file to use for the container.\n#  Timezone files are normally found in /usr/share/zoneinfo/* .\n#  Use correct zone for the container image.\nENV TZ_FILE=\"\\\"/usr/share/zoneinfo/Europe/Oslo\\\"\"\n#  JAVA_HOME:\n#  ---------\nENV JAVA_HOME=\"/opt/atlassian/bitbucket/jre\"\n#  JAVA_OPTS:\n#  ---------\n#  Optional values you want to pass as JAVA_OPTS. You can pass Java memory parameters to this variable,\n#     but in newer versionso of Atlassian software, memory settings are done in CATALINA_OPTS.\n#  JAVA_OPTS  \"-Dsome.javaSetting=somevalue\"\n#  ENV JAVA_OPTS \"-Dhttp.nonProxyHosts=bitbucket.example.com\"\n#  CATALINA_OPTS:\n#  -------------\n#  CATLINA_OPTS will be used by BITBUCKET_INSTALL/bin/setenv.sh script .\n#  You can use this to setup internationalization options and also any Java memory settings.\n#  It is a good idea to use same value for -Xms and -Xmx to avoid frequence shrinking and expanding of Java memory.\n#  In the example below it is set to 2 GB. It should always be half (or less) of physical RAM of the server/node/pod/container.\nENV CATALINA_OPTS=\"\\\"-Dfile.encoding=UTF-8 -Xms1024m -Xmx1024m\\\"\"\n#  ENABLE_CERT_IMPORT:\n#  ------------------\n#  Allow import of user defined certificates.\nENV ENABLE_CERT_IMPORT=\"false\"\n#  SSL_CERTS_PATH:\n#  --------------\n#  If you have self signed certificates, you need to force Atlassian applications to trust those certs.\n#  Very useful when different atlassian applications need to talk to each other.\n#  This should be a path which you either volume-mount in docker or k8s.\nENV SSL_CERTS_PATH=\"/var/atlassian/ssl\"\n#  PLUGINS_FILE (BitBucket plugins):\n#  --------------------------------\n#  Any additional bitbucket plugins you need to install should be listed in file named `bitbucket-plugins.list` - one at each line.\n#  Then mount that file at container-runtime at the location you specified in PLUGINS_FILE environment variable.\n#  This also means that you can control the location and name of this file just by controlling this variable.\n#  The following specifies the path of this file **inside** the container. It is later used by docker-entrypoint.sh.\nENV PLUGINS_FILE=\"/tmp/bitbucket-plugins.list\"\n#  ELASTICSEARCH_ENABLED\n#  Set 'false' to prevent Elasticsearch from starting in the container. \n#  This should be used if Elasticsearch is running remotely, e.g. for if Bitbucket is running in a Data Center cluster.\nENV ELASTICSEARCH_ENABLED=\"false\"\n#  DATACENTER_MODE:\n#  ---------------\n#  This needs to be set to true if you want to setup Bitbucket in a data-center mode.\nENV DATACENTER_MODE=\"false\"\n#  BITBUCKET_DATACENTER_SHARE:\n#  --------------------------\n#  This is only used in DataCenter mode. It needs to be a shared location, which multiple Bitbucket instances can write to.\n#  This location will most probably be an NFS share, and should exist on the file system.\n#  If it does not exist, then it will be created and chown to the Bitbucket OS user.\n#  NB: For this to work, DATA_CENTER_MODE should be set to true.\n#  ENV BITBUCKET_DATACENTER_SHARE /var/atlassian/bitbucket-datacenter\nENV BITBUCKET_DATACENTER_SHARE=\"/mnt/shared\"\n#  Reverse proxy specific environment variables:\n#  ============================================\n#  Reference: README.md at https://bitbucket.org/atlassian-docker/docker-atlassian-bitbucket-server/src/base-6/\n#  This applies to BitBucket version 5+ . These variables are:\n#  SERVER_SECURE:\n#  -------------\n#  This should be set to true if SERVER_SCHEME (below) is set to https.\n#  Otherwise, it should be set to false (default).\n#  ENV SERVER_SECURE false\n#  SERVER_SCHEME:\n#  -------------\n#  The scheme used by the internet facing proxy (normally https)\n#  ENV SERVER_SCHEME https\n#  SERVER_PROXY_PORT:\n#  -----------------\n#  The public facing port, not the bitbucket container port\n#  ENV SERVER_PROXY_PORT 443\n#  SERVER_PROXY_NAME:\n#  -----------------\n#  The FQDN used by anyone accessing bitbucket from outside (i.e. The FQDN of the proxy server/ingress controller):\n#  ENV SERVER_PROXY_NAME=<Your url here>\n#  ENV SERVER_PROXY_NAME=bitbucket.example.com\n#  SERVER_CONTEXT_PATH:\n#  -------------------\n#  Normally you do not need to change the context-path, and if undefined, it is set to '/' by default.\n#  ENV SERVER_CONTEXT_PATH=\"/\"\n#\n#\n# ###################################### END - Environment variables #######################################\n# ########################################## START - Build image #####################################\n#\n#\n#  Internaltionalization / i18n - Notes on OS settings (Fedora):\n#  ------------------------------------------------------------\n#  Note the file '/etc/sysconfig/i18n' does not exist by default\n#  RUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/sysconfig/i18n\n#  RUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.conf\n#  Internaltionalization / i18n - Notes on OS settings (Debian):\n#  ------------------------------------------------------------\n#  RUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/default/locale\n#  Unattended installation mode also allows you to supply a response file with a -varfile option, \n#    to supply answers for all questions that are used instead of the defaults.\n#  https://confluence.atlassian.com/bitbucketserver/running-the-bitbucket-server-installer-776640183.html#RunningtheBitbucketServerinstaller-Consoleandunattendedmode\n#  Bitbucket response file is used for unattended installation using atlassian-bitbucket-*.bin installer.\nCOPY bitbucket-response.varfile /tmp/\n#  Combine several steps in a single RUN to reduce the image size:\n#  --------------------------------------------------------------\n#  We install some tools. We need:\n#  * xmlstarlet to modify XML files though.\n#  * latest git to be able to install bitbucket\n#  * gunzip, hostname , ps are  needed by bitbucket installer.\n#  * 'which' is used by the installer to find the location of gunzip\n#  * iproute gives us 'ss' newer alternative for netstat.\n#  Download Bitbucket Software: (gets downloaded in '/'):\n#  -----------------------------------------------------\n#  https://www.atlassian.com/software/bitbucket/downloads/binary/atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin\n#  The 'sync' is important for some reason. Otherwise dockerhub fails to build the image.\n#  Sometimes the installer fails for whatever reason.\n#  So during development time, it is best to separate the download step from the install step.\n#  Chown the BITBUCKET_INSTALL directory, so we can edit files there later (such as server.xml), as user bitbucket.\n#  The BITBUCKET_HOME is already setup by the installer to be owned by Bitbucket user.\nRUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/sysconfig/i18n \\\n && echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.conf \\\n && yum -y install findutils which gzip hostname procps iputils bind-utils iproute jq git dejavu-sans-fonts \\\n && sync \\\n && yum -y clean all \\\n && ln -sf ${TZ_FILE} /etc/localtime \\\n && echo \"Downloading BitBucket version ${BITBUCKET_VERSION} from: ${BITBUCKET_DOWNLOAD_URL}\" \\\n && curl -# -O -L ${BITBUCKET_DOWNLOAD_URL} \\\n && sync \\\n && chmod +x atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin \\\n && ./atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin -q -varfile /tmp/bitbucket-response.varfile \\\n && sync \\\n && rm atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin \\\n && if [ ! -z \"${BITBUCKET_DATACENTER_SHARE}\" ] \\\n && [ ! -d \"${BITBUCKET_DATACENTER_SHARE}\" ] ; then mkdir ${BITBUCKET_DATACENTER_SHARE} ; fi \\\n && if [ ! -z \"${BITBUCKET_DATACENTER_SHARE}\" ] \\\n && [ -d \"${BITBUCKET_DATACENTER_SHARE}\" ] ; then chown -R ${OS_USERNAME}:${OS_GROUPNAME} ${BITBUCKET_DATACENTER_SHARE} ; fi \\\n && chown -R ${OS_USERNAME}:${OS_GROUPNAME} ${BITBUCKET_INSTALL} ${BITBUCKET_HOME} \\\n && HOME_DIR=$( grep ${OS_USERNAME} /etc/passwd | cut -d ':' -f 6 ;) \\\n && cp /etc/localtime ${HOME_DIR}/ \\\n && chown ${OS_USERNAME}:${OS_GROUPNAME} ${HOME_DIR}/localtime \\\n && ln -sf ${HOME_DIR}/localtime /etc/localtime \\\n && sync \\\n && if [ -n \"${SSL_CERTS_PATH}\" ] \\\n && [ ! -d \"${SSL_CERTS_PATH}\" ] ; then mkdir -p ${SSL_CERTS_PATH} ; fi \\\n && if [ -n \"${SSL_CERTS_PATH}\" ] \\\n && [ -d \"${SSL_CERTS_PATH}\" ] ; then chown ${OS_USERNAME}:${OS_GROUPNAME} ${SSL_CERTS_PATH} ; fi \\\n && sync\n#  Copy the entry point to / path.\nCOPY docker-entrypoint.sh /\n#  Expose default HTTP connector port.\nEXPOSE 7990/tcp\n#  Expose the SSH port.\nEXPOSE 7999/tcp\n#  Change the the default working directory from '/' to '/var/atlassian/application-data/bitbucket'\nWORKDIR ${BITBUCKET_HOME}\n#  Set the default user for the image/container to user 'atlbitbucket'.\n#    Bitbucket software will be run as this user & group.\n#    USER ${OS_USER_NAME}:${OS_USER_GROUP}\n#  USER atlbitbucket:atlbitbucket\nUSER ${OS_USERNAME}:${OS_GROUPNAME}\n#  Persistent volumes:\n#  Set volume mount points for installation and home directory.\n#  Changes to the home directory needs to be persisted.\n#  Optionally, changes to parts of the installation directory also need persistence, eg. logs.\nVOLUME [\"${BITBUCKET_HOME}\", \"${BITBUCKET_INSTALL}/logs\"]\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#  Run Atlassian Bitbucket as a foreground process by default, using our modified startup script.\n#  The CMD command does not take environment variable, so it has to be a fixed path.\nCMD [\"/opt/atlassian/bitbucket/bin/start-bitbucket.sh\", \"-fg\"]\n#\n#\n# ########################################## END - Build image ###########################################\n","injectedSmells":[],"originalDockerfileHash":"a82bcbbe69682578696054aa94f51516","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM fedora:29\nLABEL maintainer=\"heh@praqma.net kaz@praqma.net lel@praqma.net\"\n#   Why Fedora as base OS?\n#   * Fedora always has latest packages compared to CentOS.\n#   * Fedora does not need extra CentOS's EPEL repositories to install tools.\n#   * Fedora runs as 'root', and has '/' as it's default WORKDIR.\n#   This Dockerfile builds a container image for Atlassian BitBucket, \n#   using atlassian-bitbucket-*.bin installer. The advantage of using the bin-installer is\n#     that it includes OracleJDK. We do not have to depend on Oracle Java \n#     or manage it in our image.\n#\n#   Since this container image contains OracleJDK, we can not (re)distribute it \n#     as binary image, because of licensing issues. Though mentioning it in \n#     Dockerfile is ok.\n#\n#   IMPORTANT: Check build-instructions.md for building this image.\n#  ################## START -  Environment variables #############################\n#\n#\n#   BITBUCKET_VERSION:\n#   ----------------- \n#   The value for BITBUCKET_VERSION should be a version number,\n#     which is part of the name of the Bitbucket software bin/tarball/zip.\nENV BITBUCKET_VERSION=\"6.3.0\"\n#   BITBUCKET_DOWNLOAD_URL:\n#   ----------------------\n#   User does not need to modify this ENV variable unless absolutely necessary.\nENV BITBUCKET_DOWNLOAD_URL=\"https://www.atlassian.com/software/stash/downloads/binary/atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin\"\n#   OS_USERNAME:\n#   -----------\n#   Bitbucket bin-installer automatically creates a 'atlbitbucket' user and a 'atlbitbucket' group. \n#   Just make sure to specify what it's name is.\nENV OS_USERNAME=\"atlbitbucket\"\n#   OS_GROUPNAME:\n#   ------------\n#   Bitbucket bin-installer automatically creates a 'atlbitbucket' user and a 'atlbitbucket' group. \n#   Just make sure to specify what it's name is.\nENV OS_GROUPNAME=\"atlbitbucket\"\n#   BITBUCKET_HOME:\n#   --------------\n#   Persistent directory: (need persistent storage.) This can be mounted on a OS directory mount-point.\n#   Need to be owned by the same UID as of user bitbucket, normally UID 1000.\n#   The value if this variable should be same as 'app.bitbucketHome' in the bitbucket-response.varfile file.\nENV BITBUCKET_HOME=\"/var/atlassian/application-data/bitbucket\"\n#   BITBUCKET_INSTALL:\n#   -----------------\n#   BitBucket Installation files: (persistent storage NOT needed)\n#   This ENV var is important to set here, as it is used by docker-entry.sh script at container startup.\n#   The value if this variable should be same as 'app.defaultInstallDir' in the bitbucket-response.varfile file.\nENV BITBUCKET_INSTALL=\"/opt/atlassian/bitbucket\"\n#   TZ_FILE:\n#   -------\n#   This is the timezone file to use for the container.\n#   Timezone files are normally found in /usr/share/zoneinfo/* .\n#   Use correct zone for the container image.\nENV TZ_FILE=\"\\\"/usr/share/zoneinfo/Europe/Oslo\\\"\"\n#   JAVA_HOME:\n#   ---------\nENV JAVA_HOME=\"/opt/atlassian/bitbucket/jre\"\n#   JAVA_OPTS:\n#   ---------\n#   Optional values you want to pass as JAVA_OPTS. You can pass Java memory parameters to this variable,\n#      but in newer versionso of Atlassian software, memory settings are done in CATALINA_OPTS.\n#   JAVA_OPTS  \"-Dsome.javaSetting=somevalue\"\n#   ENV JAVA_OPTS \"-Dhttp.nonProxyHosts=bitbucket.example.com\"\n#   CATALINA_OPTS:\n#   -------------\n#   CATLINA_OPTS will be used by BITBUCKET_INSTALL/bin/setenv.sh script .\n#   You can use this to setup internationalization options and also any Java memory settings.\n#   It is a good idea to use same value for -Xms and -Xmx to avoid frequence shrinking and expanding of Java memory.\n#   In the example below it is set to 2 GB. It should always be half (or less) of physical RAM of the server/node/pod/container.\nENV CATALINA_OPTS=\"\\\"-Dfile.encoding=UTF-8 -Xms1024m -Xmx1024m\\\"\"\n#   ENABLE_CERT_IMPORT:\n#   ------------------\n#   Allow import of user defined certificates.\nENV ENABLE_CERT_IMPORT=\"false\"\n#   SSL_CERTS_PATH:\n#   --------------\n#   If you have self signed certificates, you need to force Atlassian applications to trust those certs.\n#   Very useful when different atlassian applications need to talk to each other.\n#   This should be a path which you either volume-mount in docker or k8s.\nENV SSL_CERTS_PATH=\"/var/atlassian/ssl\"\n#   PLUGINS_FILE (BitBucket plugins):\n#   --------------------------------\n#   Any additional bitbucket plugins you need to install should be listed in file named `bitbucket-plugins.list` - one at each line.\n#   Then mount that file at container-runtime at the location you specified in PLUGINS_FILE environment variable.\n#   This also means that you can control the location and name of this file just by controlling this variable.\n#   The following specifies the path of this file **inside** the container. It is later used by docker-entrypoint.sh.\nENV PLUGINS_FILE=\"/tmp/bitbucket-plugins.list\"\n#   ELASTICSEARCH_ENABLED\n#   Set 'false' to prevent Elasticsearch from starting in the container. \n#   This should be used if Elasticsearch is running remotely, e.g. for if Bitbucket is running in a Data Center cluster.\nENV ELASTICSEARCH_ENABLED=\"false\"\n#   DATACENTER_MODE:\n#   ---------------\n#   This needs to be set to true if you want to setup Bitbucket in a data-center mode.\nENV DATACENTER_MODE=\"false\"\n#   BITBUCKET_DATACENTER_SHARE:\n#   --------------------------\n#   This is only used in DataCenter mode. It needs to be a shared location, which multiple Bitbucket instances can write to.\n#   This location will most probably be an NFS share, and should exist on the file system.\n#   If it does not exist, then it will be created and chown to the Bitbucket OS user.\n#   NB: For this to work, DATA_CENTER_MODE should be set to true.\n#   ENV BITBUCKET_DATACENTER_SHARE /var/atlassian/bitbucket-datacenter\nENV BITBUCKET_DATACENTER_SHARE=\"/mnt/shared\"\n#   Reverse proxy specific environment variables:\n#   ============================================\n#   Reference: README.md at https://bitbucket.org/atlassian-docker/docker-atlassian-bitbucket-server/src/base-6/\n#   This applies to BitBucket version 5+ . These variables are:\n#   SERVER_SECURE:\n#   -------------\n#   This should be set to true if SERVER_SCHEME (below) is set to https.\n#   Otherwise, it should be set to false (default).\n#   ENV SERVER_SECURE false\n#   SERVER_SCHEME:\n#   -------------\n#   The scheme used by the internet facing proxy (normally https)\n#   ENV SERVER_SCHEME https\n#   SERVER_PROXY_PORT:\n#   -----------------\n#   The public facing port, not the bitbucket container port\n#   ENV SERVER_PROXY_PORT 443\n#   SERVER_PROXY_NAME:\n#   -----------------\n#   The FQDN used by anyone accessing bitbucket from outside (i.e. The FQDN of the proxy server/ingress controller):\n#   ENV SERVER_PROXY_NAME=<Your url here>\n#   ENV SERVER_PROXY_NAME=bitbucket.example.com\n#   SERVER_CONTEXT_PATH:\n#   -------------------\n#   Normally you do not need to change the context-path, and if undefined, it is set to '/' by default.\n#   ENV SERVER_CONTEXT_PATH=\"/\"\n#\n#\n#  ###################################### END - Environment variables #######################################\n#  ########################################## START - Build image #####################################\n#\n#\n#   Internaltionalization / i18n - Notes on OS settings (Fedora):\n#   ------------------------------------------------------------\n#   Note the file '/etc/sysconfig/i18n' does not exist by default\n#   RUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/sysconfig/i18n\n#   RUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.conf\n#   Internaltionalization / i18n - Notes on OS settings (Debian):\n#   ------------------------------------------------------------\n#   RUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/default/locale\n#   Unattended installation mode also allows you to supply a response file with a -varfile option, \n#     to supply answers for all questions that are used instead of the defaults.\n#   https://confluence.atlassian.com/bitbucketserver/running-the-bitbucket-server-installer-776640183.html#RunningtheBitbucketServerinstaller-Consoleandunattendedmode\n#   Bitbucket response file is used for unattended installation using atlassian-bitbucket-*.bin installer.\nCOPY bitbucket-response.varfile /tmp/\n#   Combine several steps in a single RUN to reduce the image size:\n#   --------------------------------------------------------------\n#   We install some tools. We need:\n#   * xmlstarlet to modify XML files though.\n#   * latest git to be able to install bitbucket\n#   * gunzip, hostname , ps are  needed by bitbucket installer.\n#   * 'which' is used by the installer to find the location of gunzip\n#   * iproute gives us 'ss' newer alternative for netstat.\n#   Download Bitbucket Software: (gets downloaded in '/'):\n#   -----------------------------------------------------\n#   https://www.atlassian.com/software/bitbucket/downloads/binary/atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin\n#   The 'sync' is important for some reason. Otherwise dockerhub fails to build the image.\n#   Sometimes the installer fails for whatever reason.\n#   So during development time, it is best to separate the download step from the install step.\n#   Chown the BITBUCKET_INSTALL directory, so we can edit files there later (such as server.xml), as user bitbucket.\n#   The BITBUCKET_HOME is already setup by the installer to be owned by Bitbucket user.\nRUN echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/sysconfig/i18n \\\n && echo -e \"LANG=\\\"en_US.UTF-8\\\" \\n LC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.conf \\\n && yum -y install findutils which gzip hostname procps iputils bind-utils iproute jq git dejavu-sans-fonts \\\n && sync \\\n && yum -y clean all \\\n && ln -sf ${TZ_FILE} /etc/localtime \\\n && echo \"Downloading BitBucket version ${BITBUCKET_VERSION} from: ${BITBUCKET_DOWNLOAD_URL}\" \\\n && curl -# -O -L ${BITBUCKET_DOWNLOAD_URL} \\\n && sync \\\n && chmod +x atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin \\\n && ./atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin -q -varfile /tmp/bitbucket-response.varfile \\\n && sync \\\n && rm atlassian-bitbucket-${BITBUCKET_VERSION}-x64.bin \\\n && if [ ! -z \"${BITBUCKET_DATACENTER_SHARE}\" ] \\\n && [ ! -d \"${BITBUCKET_DATACENTER_SHARE}\" ] ; then mkdir ${BITBUCKET_DATACENTER_SHARE} ; fi \\\n && if [ ! -z \"${BITBUCKET_DATACENTER_SHARE}\" ] \\\n && [ -d \"${BITBUCKET_DATACENTER_SHARE}\" ] ; then chown -R ${OS_USERNAME}:${OS_GROUPNAME} ${BITBUCKET_DATACENTER_SHARE} ; fi \\\n && chown -R ${OS_USERNAME}:${OS_GROUPNAME} ${BITBUCKET_INSTALL} ${BITBUCKET_HOME} \\\n && HOME_DIR=$( grep ${OS_USERNAME} /etc/passwd | cut -d ':' -f 6 ;) \\\n && cp /etc/localtime ${HOME_DIR}/ \\\n && chown ${OS_USERNAME}:${OS_GROUPNAME} ${HOME_DIR}/localtime \\\n && ln -sf ${HOME_DIR}/localtime /etc/localtime \\\n && sync \\\n && if [ -n \"${SSL_CERTS_PATH}\" ] \\\n && [ ! -d \"${SSL_CERTS_PATH}\" ] ; then mkdir -p ${SSL_CERTS_PATH} ; fi \\\n && if [ -n \"${SSL_CERTS_PATH}\" ] \\\n && [ -d \"${SSL_CERTS_PATH}\" ] ; then chown ${OS_USERNAME}:${OS_GROUPNAME} ${SSL_CERTS_PATH} ; fi \\\n && sync\n#   Copy the entry point to / path.\nCOPY docker-entrypoint.sh /\n#   Expose default HTTP connector port.\nEXPOSE 7990/tcp\n#   Expose the SSH port.\nEXPOSE 7999/tcp\n#   Change the the default working directory from '/' to '/var/atlassian/application-data/bitbucket'\nWORKDIR ${BITBUCKET_HOME}\n#   Set the default user for the image/container to user 'atlbitbucket'.\n#     Bitbucket software will be run as this user & group.\n#     USER ${OS_USER_NAME}:${OS_USER_GROUP}\n#   USER atlbitbucket:atlbitbucket\nUSER ${OS_USERNAME}:${OS_GROUPNAME}\n#   Persistent volumes:\n#   Set volume mount points for installation and home directory.\n#   Changes to the home directory needs to be persisted.\n#   Optionally, changes to parts of the installation directory also need persistence, eg. logs.\nVOLUME [\"${BITBUCKET_HOME}\", \"${BITBUCKET_INSTALL}/logs\"]\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#   Run Atlassian Bitbucket as a foreground process by default, using our modified startup script.\n#   The CMD command does not take environment variable, so it has to be a fixed path.\nCMD [\"/opt/atlassian/bitbucket/bin/start-bitbucket.sh\", \"-fg\"]\n#\n#\n#  ########################################## END - Build image ###########################################\n","originalDockerfileUglifiedHash":"fabcf54835ef7400e2d249c604c8cca3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/28d17f08be08fa193895450e621f74141cb630d9.dockerfile"}