{"seed":147654572,"processedDockerfileHash":"66632112adcb82efe8464ebeaea7f863","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Cartodb container\n#\nFROM ubuntu:14.04\nMAINTAINER Adrien Fleury <fleu42@gmail.com>\n#   Configuring locales\nRUN dpkg-reconfigure locales \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8  \"\nENV LANGUAGE=\"en_US:en  \"\nENV LC_ALL=\"en_US.UTF-8\"\n#   Preparing apt\nRUN apt-get update \\\n && useradd -m -d /home/cartodb -s /bin/bash cartodb \\\n && apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y -q \\\n && add-apt-repository -y ppa:chris-lea/node.js \\\n && apt-get update\n#   Installing stuff \nRUN apt-get install --no-install-recommends build-essential=11.6ubuntu6 checkinstall=1.6.2-4ubuntu1 unp=2.0~pre7+nmu1 zip=3.0-8 libgeos-c1=3.4.2-4ubuntu1 libgeos-dev=3.4.2-4ubuntu1 libjson0=0.11-3ubuntu1.2 python-simplejson=3.3.1-1ubuntu6 libjson0-dev=0.11-3ubuntu1.2 proj-bin=4.8.0-2ubuntu2 proj-data=4.8.0-2ubuntu2 libproj-dev=4.8.0-2ubuntu2 postgresql-9.3=9.3.24-0ubuntu0.14.04 postgresql-client-9.3=9.3.24-0ubuntu0.14.04 postgresql-contrib-9.3=9.3.24-0ubuntu0.14.04 postgresql-server-dev-9.3=9.3.24-0ubuntu0.14.04 postgresql-plpython-9.3=9.3.24-0ubuntu0.14.04 gdal-bin=1.10.1+dfsg-5ubuntu1 libgdal1-dev=1.10.1+dfsg-5ubuntu1 nodejs=0.10.25~dfsg2-2ubuntu1.2 redis-server=2:2.8.4-2ubuntu0.2 python2.7-dev=2.7.6-8ubuntu0.5 build-essential=11.6ubuntu6 python-setuptools=3.3-1ubuntu2 varnish=3.0.5-2ubuntu0.1 imagemagick=8:6.7.7.10-6ubuntu3.13 git=1:1.9.1-1ubuntu0.10 postgresql-9.3-postgis-2.1=2.1.2+dfsg-2ubuntu0.2 libmapnik-dev=2.2.0+ds1-6build2 python-mapnik=2.2.0+ds1-6build2 mapnik-utils=2.2.0+ds1-6build2 postgresql-9.3-postgis-2.1-scripts=2.1.2+dfsg-2ubuntu0.2 postgis=2.1.2+dfsg-2ubuntu0.2 python-argparse python-gdal=1.10.1+dfsg-5ubuntu1 python-chardet=2.0.1-2build2 openssl=1.0.1f-1ubuntu2.27 libreadline6=6.3-4ubuntu2 curl=7.35.0-1ubuntu2.20 git-core=1:1.9.1-1ubuntu0.10 zlib1g=1:1.2.8.dfsg-1ubuntu1.1 zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 libssl-dev=1.0.1f-1ubuntu2.27 libyaml-dev=0.1.4-3ubuntu3.1 libsqlite3-dev=3.8.2-1ubuntu2.2 sqlite3=3.8.2-1ubuntu2.2 libxml2-dev=2.9.1+dfsg1-3ubuntu4.13 libxslt-dev autoconf=2.69-6 libc6-dev=2.19-0ubuntu6.15 ncurses-dev automake=1:1.14.1-2ubuntu1 libtool=2.4.2-1.7ubuntu1 bison=2:3.0.2.dfsg-2 subversion=1.8.8-1ubuntu3.3 pkg-config=0.26-1ubuntu4 libpq5=9.3.24-0ubuntu0.14.04 libpq-dev=9.3.24-0ubuntu0.14.04 libcurl4-gnutls-dev=7.35.0-1ubuntu2.20 libffi-dev=3.1~rc1+r3.0.13-12ubuntu0.2 libgdbm-dev=1.8.3-12build1 gnupg=1.4.16-1ubuntu2.6 libreadline6-dev=6.3-4ubuntu2 -y -q\n#   Setting PostgreSQL\nRUN sed -i 's/\\(peer\\|md5\\)/trust/' /etc/postgresql/9.3/main/pg_hba.conf\n#   Install schema_triggers\nRUN git clone https://github.com/CartoDB/pg_schema_triggers.git \\\n && cd pg_schema_triggers \\\n && make all install \\\n && sed -i \"/#shared_preload/a shared_preload_libraries = 'schema_triggers.so'\" /etc/postgresql/9.3/main/postgresql.conf\nCOPY ./template_postgis.sh /tmp/template_postgis.sh\nRUN service postgresql start \\\n && /bin/su postgres -c /tmp/template_postgis.sh \\\n && service postgresql stop\n#   Install cartodb extension\nRUN git clone --branch 0.5.1 https://github.com/CartoDB/cartodb-postgresql \\\n && cd cartodb-postgresql \\\n && PGUSER=postgres make install\nCOPY ./cartodb_pgsql.sh /tmp/cartodb_pgsql.sh\nRUN service postgresql start \\\n && /bin/su postgres -c /tmp/cartodb_pgsql.sh \\\n && service postgresql stop\n#   Install CartoDB API\nRUN git clone git://github.com/CartoDB/CartoDB-SQL-API.git \\\n && cd CartoDB-SQL-API \\\n && ./configure \\\n && npm install\nCOPY ./config/CartoDB-dev.js /CartoDB-SQL-API/config/environments/development.js\n#   Install Windshaft\nRUN git clone git://github.com/CartoDB/Windshaft-cartodb.git \\\n && cd Windshaft-cartodb \\\n && ./configure \\\n && npm install \\\n && mkdir logs\nCOPY ./config/WS-dev.js /Windshaft-cartodb/config/environments/development.js\n#   Install rvm\nRUN gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3\nRUN curl -L https://get.rvm.io | bash -s stable --ruby\nRUN echo 'source /usr/local/rvm/scripts/rvm' >> /etc/bash.bashrc\nRUN /bin/bash -l -c rvm requirements\nENV PATH=\"/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN /bin/bash -l -c 'rvm install 1.9.3-p547 --patch railsexpress'\nRUN /bin/bash -l -c 'rvm use 1.9.3-p547 --default'\nRUN /bin/bash -l -c 'gem install bundle archive-tar-minitar'\n#   Install bundler\nRUN /bin/bash -l -c 'gem install bundler --no-doc --no-ri'\n#   Install CartoDB (with the bug correction on bundle install)\nRUN git clone git://github.com/CartoDB/cartodb.git \\\n && cd cartodb \\\n && /bin/bash -l -c 'bundle install' || /bin/bash -l -c \"cd $( /bin/bash -l -c 'gem contents debugger-ruby_core_source' | grep CHANGELOG | sed -e 's,CHANGELOG.md,,' ;) \\\n && /bin/bash -l -c 'rake add_source VERSION=$( /bin/bash -l -c 'ruby --version' | awk '{print $2}' | sed -e 's,p55,-p55,' ;)' \\\n && cd /cartodb \\\n && /bin/bash -l -c 'bundle install'\"\n#   Copy confs\nCOPY ./config/app_config.yml /cartodb/config/app_config.yml\nCOPY ./config/database.yml /cartodb/config/database.yml\nCOPY ./create_dev_user /cartodb/script/create_dev_user\nENV PATH=\"/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN service postgresql start \\\n && service redis-server start \\\n && bash -l -c \"cd /cartodb \\\n && bash script/create_dev_user\" \\\n && service postgresql stop \\\n && service redis-server stop\nEXPOSE 3000/tcp\nCOPY ./startup.sh /opt/startup.sh\nCMD [\"/bin/bash\", \"/opt/startup.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Cartodb container\n#\nFROM ubuntu:14.04\nMAINTAINER Adrien Fleury <fleu42@gmail.com>\n#  Configuring locales\nRUN dpkg-reconfigure locales \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8  \"\nENV LANGUAGE=\"en_US:en  \"\nENV LC_ALL=\"en_US.UTF-8\"\n#  Preparing apt\nRUN apt-get update \\\n && useradd -m -d /home/cartodb -s /bin/bash cartodb \\\n && apt-get install software-properties-common -y -q \\\n && add-apt-repository -y ppa:chris-lea/node.js \\\n && apt-get update\n#  Installing stuff \nRUN apt-get install build-essential checkinstall unp zip libgeos-c1 libgeos-dev libjson0 python-simplejson libjson0-dev proj-bin proj-data libproj-dev postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 postgresql-server-dev-9.3 postgresql-plpython-9.3 gdal-bin libgdal1-dev nodejs redis-server python2.7-dev build-essential python-setuptools varnish imagemagick git postgresql-9.3-postgis-2.1 libmapnik-dev python-mapnik mapnik-utils postgresql-9.3-postgis-2.1-scripts postgis python-argparse python-gdal python-chardet openssl libreadline6 curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion pkg-config libpq5 libpq-dev libcurl4-gnutls-dev libffi-dev libgdbm-dev gnupg libreadline6-dev -y -q\n#  Setting PostgreSQL\nRUN sed -i 's/\\(peer\\|md5\\)/trust/' /etc/postgresql/9.3/main/pg_hba.conf\n#  Install schema_triggers\nRUN git clone https://github.com/CartoDB/pg_schema_triggers.git \\\n && cd pg_schema_triggers \\\n && make all install \\\n && sed -i \"/#shared_preload/a shared_preload_libraries = 'schema_triggers.so'\" /etc/postgresql/9.3/main/postgresql.conf\nADD ./template_postgis.sh /tmp/template_postgis.sh\nRUN service postgresql start \\\n && /bin/su postgres -c /tmp/template_postgis.sh \\\n && service postgresql stop\n#  Install cartodb extension\nRUN git clone --branch 0.5.1 https://github.com/CartoDB/cartodb-postgresql \\\n && cd cartodb-postgresql \\\n && PGUSER=postgres make install\nADD ./cartodb_pgsql.sh /tmp/cartodb_pgsql.sh\nRUN service postgresql start \\\n && /bin/su postgres -c /tmp/cartodb_pgsql.sh \\\n && service postgresql stop\n#  Install CartoDB API\nRUN git clone git://github.com/CartoDB/CartoDB-SQL-API.git \\\n && cd CartoDB-SQL-API \\\n && ./configure \\\n && npm install\nADD ./config/CartoDB-dev.js /CartoDB-SQL-API/config/environments/development.js\n#  Install Windshaft\nRUN git clone git://github.com/CartoDB/Windshaft-cartodb.git \\\n && cd Windshaft-cartodb \\\n && ./configure \\\n && npm install \\\n && mkdir logs\nADD ./config/WS-dev.js /Windshaft-cartodb/config/environments/development.js\n#  Install rvm\nRUN gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3\nRUN curl -L https://get.rvm.io | bash -s stable --ruby\nRUN echo 'source /usr/local/rvm/scripts/rvm' >> /etc/bash.bashrc\nRUN /bin/bash -l -c rvm requirements\nENV PATH=\"/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN /bin/bash -l -c 'rvm install 1.9.3-p547 --patch railsexpress'\nRUN /bin/bash -l -c 'rvm use 1.9.3-p547 --default'\nRUN /bin/bash -l -c 'gem install bundle archive-tar-minitar'\n#  Install bundler\nRUN /bin/bash -l -c 'gem install bundler --no-doc --no-ri'\n#  Install CartoDB (with the bug correction on bundle install)\nRUN git clone git://github.com/CartoDB/cartodb.git \\\n && cd cartodb \\\n && /bin/bash -l -c 'bundle install' || /bin/bash -l -c \"cd $( /bin/bash -l -c 'gem contents debugger-ruby_core_source' | grep CHANGELOG | sed -e 's,CHANGELOG.md,,' ;) \\\n && /bin/bash -l -c 'rake add_source VERSION=$( /bin/bash -l -c 'ruby --version' | awk '{print $2}' | sed -e 's,p55,-p55,' ;)' \\\n && cd /cartodb \\\n && /bin/bash -l -c 'bundle install'\"\n#  Copy confs\nADD ./config/app_config.yml /cartodb/config/app_config.yml\nADD ./config/database.yml /cartodb/config/database.yml\nADD ./create_dev_user /cartodb/script/create_dev_user\nENV PATH=\"/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN service postgresql start \\\n && service redis-server start \\\n && bash -l -c \"cd /cartodb \\\n && bash script/create_dev_user\" \\\n && service postgresql stop \\\n && service redis-server stop\nEXPOSE 3000/tcp\nADD ./startup.sh /opt/startup.sh\nCMD [\"/bin/bash\", \"/opt/startup.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"69f1a767b01dae1157ddccbd08cd07ac","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Cartodb container\n#\nFROM ubuntu:14.04\nMAINTAINER Adrien Fleury <fleu42@gmail.com>\n#   Configuring locales\nRUN dpkg-reconfigure locales \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8  \"\nENV LANGUAGE=\"en_US:en  \"\nENV LC_ALL=\"en_US.UTF-8\"\n#   Preparing apt\nRUN apt-get update \\\n && useradd -m -d /home/cartodb -s /bin/bash cartodb \\\n && apt-get install software-properties-common -y -q \\\n && add-apt-repository -y ppa:chris-lea/node.js \\\n && apt-get update\n#   Installing stuff \nRUN apt-get install build-essential checkinstall unp zip libgeos-c1 libgeos-dev libjson0 python-simplejson libjson0-dev proj-bin proj-data libproj-dev postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 postgresql-server-dev-9.3 postgresql-plpython-9.3 gdal-bin libgdal1-dev nodejs redis-server python2.7-dev build-essential python-setuptools varnish imagemagick git postgresql-9.3-postgis-2.1 libmapnik-dev python-mapnik mapnik-utils postgresql-9.3-postgis-2.1-scripts postgis python-argparse python-gdal python-chardet openssl libreadline6 curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion pkg-config libpq5 libpq-dev libcurl4-gnutls-dev libffi-dev libgdbm-dev gnupg libreadline6-dev -y -q\n#   Setting PostgreSQL\nRUN sed -i 's/\\(peer\\|md5\\)/trust/' /etc/postgresql/9.3/main/pg_hba.conf\n#   Install schema_triggers\nRUN git clone https://github.com/CartoDB/pg_schema_triggers.git \\\n && cd pg_schema_triggers \\\n && make all install \\\n && sed -i \"/#shared_preload/a shared_preload_libraries = 'schema_triggers.so'\" /etc/postgresql/9.3/main/postgresql.conf\nADD ./template_postgis.sh /tmp/template_postgis.sh\nRUN service postgresql start \\\n && /bin/su postgres -c /tmp/template_postgis.sh \\\n && service postgresql stop\n#   Install cartodb extension\nRUN git clone --branch 0.5.1 https://github.com/CartoDB/cartodb-postgresql \\\n && cd cartodb-postgresql \\\n && PGUSER=postgres make install\nADD ./cartodb_pgsql.sh /tmp/cartodb_pgsql.sh\nRUN service postgresql start \\\n && /bin/su postgres -c /tmp/cartodb_pgsql.sh \\\n && service postgresql stop\n#   Install CartoDB API\nRUN git clone git://github.com/CartoDB/CartoDB-SQL-API.git \\\n && cd CartoDB-SQL-API \\\n && ./configure \\\n && npm install\nADD ./config/CartoDB-dev.js /CartoDB-SQL-API/config/environments/development.js\n#   Install Windshaft\nRUN git clone git://github.com/CartoDB/Windshaft-cartodb.git \\\n && cd Windshaft-cartodb \\\n && ./configure \\\n && npm install \\\n && mkdir logs\nADD ./config/WS-dev.js /Windshaft-cartodb/config/environments/development.js\n#   Install rvm\nRUN gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3\nRUN curl -L https://get.rvm.io | bash -s stable --ruby\nRUN echo 'source /usr/local/rvm/scripts/rvm' >> /etc/bash.bashrc\nRUN /bin/bash -l -c rvm requirements\nENV PATH=\"/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN /bin/bash -l -c 'rvm install 1.9.3-p547 --patch railsexpress'\nRUN /bin/bash -l -c 'rvm use 1.9.3-p547 --default'\nRUN /bin/bash -l -c 'gem install bundle archive-tar-minitar'\n#   Install bundler\nRUN /bin/bash -l -c 'gem install bundler --no-doc --no-ri'\n#   Install CartoDB (with the bug correction on bundle install)\nRUN git clone git://github.com/CartoDB/cartodb.git \\\n && cd cartodb \\\n && /bin/bash -l -c 'bundle install' || /bin/bash -l -c \"cd $( /bin/bash -l -c 'gem contents debugger-ruby_core_source' | grep CHANGELOG | sed -e 's,CHANGELOG.md,,' ;) \\\n && /bin/bash -l -c 'rake add_source VERSION=$( /bin/bash -l -c 'ruby --version' | awk '{print $2}' | sed -e 's,p55,-p55,' ;)' \\\n && cd /cartodb \\\n && /bin/bash -l -c 'bundle install'\"\n#   Copy confs\nADD ./config/app_config.yml /cartodb/config/app_config.yml\nADD ./config/database.yml /cartodb/config/database.yml\nADD ./create_dev_user /cartodb/script/create_dev_user\nENV PATH=\"/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN service postgresql start \\\n && service redis-server start \\\n && bash -l -c \"cd /cartodb \\\n && bash script/create_dev_user\" \\\n && service postgresql stop \\\n && service redis-server stop\nEXPOSE 3000/tcp\nADD ./startup.sh /opt/startup.sh\nCMD [\"/bin/bash\", \"/opt/startup.sh\"]\n","originalDockerfileUglifiedHash":"9dabf5763fd0c211cef1ebe14afa2402","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e4b8c262c86052cbecdd7d93ee43282183146bfc.dockerfile"}