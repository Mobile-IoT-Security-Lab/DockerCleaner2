{"seed":1563932132,"processedDockerfileHash":"783b2d4ae966225ddd54a5b02b1d485b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG VERSION_UBUNTU=latest\nFROM ubuntu:$VERSION_UBUNTU\nMAINTAINER KINOSHITA minoru <5021543+minoruta@users.noreply.github.com>\n#\n#     Essential arguments\n#\nARG VERSION_ASTERISK\nARG VERSION_MONGOC\nARG VERSION_LIBSRTP\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /root\nRUN mkdir src\nCOPY src/* src/\nRUN mkdir ast_mongo\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libssl-dev libsasl2-dev libncurses5-dev libnewt-dev libxml2-dev libsqlite3-dev libjansson-dev libcurl4-openssl-dev libedit-dev pkg-config build-essential cmake autoconf uuid-dev wget file git -qq -y\n#\n#     Prepare strp\n#\nWORKDIR /root\nRUN wget https://github.com/cisco/libsrtp/archive/v$VERSION_LIBSRTP.tar.gz \\\n && tar xzf v$VERSION_LIBSRTP.tar.gz \\\n && rm v$VERSION_LIBSRTP.tar.gz \\\n && cd libsrtp-$VERSION_LIBSRTP \\\n && ./configure > /dev/null \\\n && make \\\n && make install \\\n && make clean \\\n && ldconfig \\\n && cd ..\n#\n#     Prepare MongoDB C Driver\n#\nRUN cd $HOME \\\n && wget -nv \"https://github.com/mongodb/mongo-c-driver/releases/download/$VERSION_MONGOC/mongo-c-driver-$VERSION_MONGOC.tar.gz\" -O - | tar xzf - \\\n && cd mongo-c-driver-$VERSION_MONGOC \\\n && function version_gt() { test \"$( printf '%s\\n' \"$@\" | sort -V | head -n 1 ;)\" != \"$1\" ; } \\\n && if version_gt $VERSION_MONGOC \"1.10\" ; then mkdir cmake-build ;cd cmake-build ;cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF .. ; else ./configure --disable-automatic-init-and-cleanup > /dev/null; fi \\\n && make all install > make.log \\\n && make clean \\\n && cd $HOME \\\n && tar czf mongo-c-driver-$VERSION_MONGOC.tgz mongo-c-driver-$VERSION_MONGOC \\\n && rm -rf mongo-c-driver-$VERSION_MONGOC\n#\n#     Build and install Asterisk with patches for ast_mongo\n#\nRUN cd $HOME \\\n && wget -nv \"http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-$VERSION_ASTERISK.tar.gz\" -O - | tar -zxf - \\\n && cd asterisk-$VERSION_ASTERISK \\\n && git config --global user.email \"you@example.com\" \\\n && git init \\\n && git add . \\\n && git commit . -m \"initial\" \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/cdr \\\n && cp $HOME/src/cdr_mongodb.c . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/cel \\\n && cp $HOME/src/cel_mongodb.c . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/res \\\n && cp $HOME/src/res_mongodb.c . \\\n && cp $HOME/src/res_mongodb.exports.in . \\\n && cp $HOME/src/res_config_mongodb.c . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/include/asterisk \\\n && cp $HOME/src/res_mongodb.h . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK \\\n && patch -p1 -F3 -i $HOME/src/mongodb.for.asterisk.patch \\\n && git diff build_tools/menuselect-deps.in configure.ac makeopts.in > $HOME/ast_mongo/mongodb.for.asterisk.patch \\\n && git diff HEAD > $HOME/ast_mongo/ast_mongo-$VERSION_ASTERISK.patch \\\n && ./bootstrap.sh \\\n && function version_gt() { test \"$( printf '%s\\n' \"$@\" | sort -V | head -n 1 ;)\" != \"$1\" ; } \\\n && if version_gt $VERSION_ASTERISK \"16\" ; then JANSSONBUNDLED=\"--with-jansson-bundled\" ; fi \\\n && ./configure --disable-xmldoc --with-pjproject-bundled $JANSSONBUNDLED > /dev/null \\\n && tar czf $HOME/ast_mongo/asterisk-$VERSION_ASTERISK-config.log.tgz config.log \\\n && make all > make.log \\\n && make install > install.log \\\n && ldconfig /usr/lib \\\n && make samples > samples.log \\\n && make clean > clean.log\n#\n#   Copy back the updated patches to host & Launch asterisk\n#\nCMD cp /root/ast_mongo/ast_mongo-* /mnt/ast_mongo/patches/ \\\n && asterisk -c > /dev/null\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG VERSION_UBUNTU=latest\nFROM ubuntu:$VERSION_UBUNTU\nMAINTAINER KINOSHITA minoru <5021543+minoruta@users.noreply.github.com>\n#\n#    Essential arguments\n#\nARG VERSION_ASTERISK\nARG VERSION_MONGOC\nARG VERSION_LIBSRTP\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /root\nRUN mkdir src\nCOPY src/* src/\nRUN mkdir ast_mongo\nRUN apt-get -qq update \\\n && apt-get -qq install -y libssl-dev libsasl2-dev libncurses5-dev libnewt-dev libxml2-dev libsqlite3-dev libjansson-dev libcurl4-openssl-dev libedit-dev pkg-config build-essential cmake autoconf uuid-dev wget file git\n#\n#    Prepare strp\n#\nWORKDIR /root\nRUN wget https://github.com/cisco/libsrtp/archive/v$VERSION_LIBSRTP.tar.gz \\\n && tar xzf v$VERSION_LIBSRTP.tar.gz \\\n && rm v$VERSION_LIBSRTP.tar.gz \\\n && cd libsrtp-$VERSION_LIBSRTP \\\n && ./configure > /dev/null \\\n && make \\\n && make install \\\n && make clean \\\n && ldconfig \\\n && cd ..\n#\n#    Prepare MongoDB C Driver\n#\nRUN cd $HOME \\\n && wget -nv \"https://github.com/mongodb/mongo-c-driver/releases/download/$VERSION_MONGOC/mongo-c-driver-$VERSION_MONGOC.tar.gz\" -O - | tar xzf - \\\n && cd mongo-c-driver-$VERSION_MONGOC \\\n && function version_gt() { test \"$( printf '%s\\n' \"$@\" | sort -V | head -n 1 ;)\" != \"$1\" ; } \\\n && if version_gt $VERSION_MONGOC \"1.10\" ; then mkdir cmake-build ;cd cmake-build ;cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF .. ; else ./configure --disable-automatic-init-and-cleanup > /dev/null; fi \\\n && make all install > make.log \\\n && make clean \\\n && cd $HOME \\\n && tar czf mongo-c-driver-$VERSION_MONGOC.tgz mongo-c-driver-$VERSION_MONGOC \\\n && rm -rf mongo-c-driver-$VERSION_MONGOC\n#\n#    Build and install Asterisk with patches for ast_mongo\n#\nRUN cd $HOME \\\n && wget -nv \"http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-$VERSION_ASTERISK.tar.gz\" -O - | tar -zxf - \\\n && cd asterisk-$VERSION_ASTERISK \\\n && git config --global user.email \"you@example.com\" \\\n && git init \\\n && git add . \\\n && git commit . -m \"initial\" \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/cdr \\\n && cp $HOME/src/cdr_mongodb.c . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/cel \\\n && cp $HOME/src/cel_mongodb.c . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/res \\\n && cp $HOME/src/res_mongodb.c . \\\n && cp $HOME/src/res_mongodb.exports.in . \\\n && cp $HOME/src/res_config_mongodb.c . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/include/asterisk \\\n && cp $HOME/src/res_mongodb.h . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK \\\n && patch -p1 -F3 -i $HOME/src/mongodb.for.asterisk.patch \\\n && git diff build_tools/menuselect-deps.in configure.ac makeopts.in > $HOME/ast_mongo/mongodb.for.asterisk.patch \\\n && git diff HEAD > $HOME/ast_mongo/ast_mongo-$VERSION_ASTERISK.patch \\\n && ./bootstrap.sh \\\n && function version_gt() { test \"$( printf '%s\\n' \"$@\" | sort -V | head -n 1 ;)\" != \"$1\" ; } \\\n && if version_gt $VERSION_ASTERISK \"16\" ; then JANSSONBUNDLED=\"--with-jansson-bundled\" ; fi \\\n && ./configure --disable-xmldoc --with-pjproject-bundled $JANSSONBUNDLED > /dev/null \\\n && tar czf $HOME/ast_mongo/asterisk-$VERSION_ASTERISK-config.log.tgz config.log \\\n && make all > make.log \\\n && make install > install.log \\\n && ldconfig /usr/lib \\\n && make samples > samples.log \\\n && make clean > clean.log\n#\n#  Copy back the updated patches to host & Launch asterisk\n#\nCMD cp /root/ast_mongo/ast_mongo-* /mnt/ast_mongo/patches/ \\\n && asterisk -c > /dev/null\n","injectedSmells":[],"originalDockerfileHash":"32057e16c9c4b8e6df8c7eef5d37b5e4","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG VERSION_UBUNTU=latest\nFROM ubuntu:$VERSION_UBUNTU\nMAINTAINER KINOSHITA minoru <5021543+minoruta@users.noreply.github.com>\n#\n#     Essential arguments\n#\nARG VERSION_ASTERISK\nARG VERSION_MONGOC\nARG VERSION_LIBSRTP\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /root\nRUN mkdir src\nCOPY src/* src/\nRUN mkdir ast_mongo\nRUN apt-get update -qq \\\n && apt-get install libssl-dev libsasl2-dev libncurses5-dev libnewt-dev libxml2-dev libsqlite3-dev libjansson-dev libcurl4-openssl-dev libedit-dev pkg-config build-essential cmake autoconf uuid-dev wget file git -qq -y\n#\n#     Prepare strp\n#\nWORKDIR /root\nRUN wget https://github.com/cisco/libsrtp/archive/v$VERSION_LIBSRTP.tar.gz \\\n && tar xzf v$VERSION_LIBSRTP.tar.gz \\\n && rm v$VERSION_LIBSRTP.tar.gz \\\n && cd libsrtp-$VERSION_LIBSRTP \\\n && ./configure > /dev/null \\\n && make \\\n && make install \\\n && make clean \\\n && ldconfig \\\n && cd ..\n#\n#     Prepare MongoDB C Driver\n#\nRUN cd $HOME \\\n && wget -nv \"https://github.com/mongodb/mongo-c-driver/releases/download/$VERSION_MONGOC/mongo-c-driver-$VERSION_MONGOC.tar.gz\" -O - | tar xzf - \\\n && cd mongo-c-driver-$VERSION_MONGOC \\\n && function version_gt() { test \"$( printf '%s\\n' \"$@\" | sort -V | head -n 1 ;)\" != \"$1\" ; } \\\n && if version_gt $VERSION_MONGOC \"1.10\" ; then mkdir cmake-build ;cd cmake-build ;cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF .. ; else ./configure --disable-automatic-init-and-cleanup > /dev/null; fi \\\n && make all install > make.log \\\n && make clean \\\n && cd $HOME \\\n && tar czf mongo-c-driver-$VERSION_MONGOC.tgz mongo-c-driver-$VERSION_MONGOC \\\n && rm -rf mongo-c-driver-$VERSION_MONGOC\n#\n#     Build and install Asterisk with patches for ast_mongo\n#\nRUN cd $HOME \\\n && wget -nv \"http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-$VERSION_ASTERISK.tar.gz\" -O - | tar -zxf - \\\n && cd asterisk-$VERSION_ASTERISK \\\n && git config --global user.email \"you@example.com\" \\\n && git init \\\n && git add . \\\n && git commit . -m \"initial\" \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/cdr \\\n && cp $HOME/src/cdr_mongodb.c . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/cel \\\n && cp $HOME/src/cel_mongodb.c . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/res \\\n && cp $HOME/src/res_mongodb.c . \\\n && cp $HOME/src/res_mongodb.exports.in . \\\n && cp $HOME/src/res_config_mongodb.c . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK/include/asterisk \\\n && cp $HOME/src/res_mongodb.h . \\\n && git add . \\\n && cd $HOME/asterisk-$VERSION_ASTERISK \\\n && patch -p1 -F3 -i $HOME/src/mongodb.for.asterisk.patch \\\n && git diff build_tools/menuselect-deps.in configure.ac makeopts.in > $HOME/ast_mongo/mongodb.for.asterisk.patch \\\n && git diff HEAD > $HOME/ast_mongo/ast_mongo-$VERSION_ASTERISK.patch \\\n && ./bootstrap.sh \\\n && function version_gt() { test \"$( printf '%s\\n' \"$@\" | sort -V | head -n 1 ;)\" != \"$1\" ; } \\\n && if version_gt $VERSION_ASTERISK \"16\" ; then JANSSONBUNDLED=\"--with-jansson-bundled\" ; fi \\\n && ./configure --disable-xmldoc --with-pjproject-bundled $JANSSONBUNDLED > /dev/null \\\n && tar czf $HOME/ast_mongo/asterisk-$VERSION_ASTERISK-config.log.tgz config.log \\\n && make all > make.log \\\n && make install > install.log \\\n && ldconfig /usr/lib \\\n && make samples > samples.log \\\n && make clean > clean.log\n#\n#   Copy back the updated patches to host & Launch asterisk\n#\nCMD cp /root/ast_mongo/ast_mongo-* /mnt/ast_mongo/patches/ \\\n && asterisk -c > /dev/null\n","originalDockerfileUglifiedHash":"dc219f134c3aabb88d5e9426b7440873","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ee7926f075bb27faba7efed1e59c5c82c7cd61cb.dockerfile"}