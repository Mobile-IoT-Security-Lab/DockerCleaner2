{"seed":1335762433,"processedDockerfileHash":"2fcd6cd98a63e7dc6aa79d4eb8de229e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ------------------------------------------------#\n#   NGSeasy Dev Tool Box\n#  ------------------------------------------------#\n#   Base image\nFROM compbio/ngseasy-base:latest\n#   Maintainer \nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n#   Set correct environment variables.\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Update\nRUN : \\\n && apt-get upgrade -y\n#   FastQC & Trimmomatic ---------------------------------------------------------------------\nRUN wget -O /tmp/fastqc_v0.11.2.zip http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.2.zip \\\n && unzip /tmp/fastqc_v0.11.2.zip -d /usr/local/pipeline/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/FastQC \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/FastQC/jbzip2-0.9.jar:/usr/local/pipeline/FastQC/sam-1.103.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/FastQC' /home/pipeman/.bashrc \\\n && echo \"alias ngsFastqc='/usr/local/pipeline/FastQC'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/FastQC/fastqc /usr/local/bin \\\n && wget -O /tmp/Trimmomatic-0.32.zip http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.32.zip \\\n && unzip /tmp/Trimmomatic-0.32.zip -d /usr/local/pipeline/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/Trimmomatic-0.32 \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/Trimmomatic-0.32/trimmomatic-0.32.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/Trimmomatic-0.32' /home/pipeman/.bashrc \\\n && echo \"alias ngsTrimfq='/usr/local/pipeline/Trimmomatic-0.32'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/Trimmomatic-0.32/* /usr/local/bin\n#   picard ----------------------------------------------------------------------\nRUN wget -O /tmp/picard-tools-1.119.zip http://sourceforge.net/projects/picard/files/picard-tools/1.119/picard-tools-1.119.zip \\\n && mkdir /usr/local/pipeline/picardtools \\\n && unzip /tmp/picard-tools-1.119.zip -d /usr/local/pipeline/picardtools/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/picardtools \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/picardtools/picard-tools-1.119/snappy-java-1.0.3-rc3.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/picardtools/picard-tools-1.119' /home/pipeman/.bashrc \\\n && echo \"alias ngsPicard='/usr/local/pipeline/picardtools/picard-tools-1.119'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/picardtools/picard-tools-1.119/* /usr/local/bin\n#   Aligners ---------------------------------------------------------------------\n#   bwa, stampy, bowtie2\n#   manually build novoalign and commit local image\nRUN wget -O /tmp/bwa-0.7.10.tar.bz2 http://sourceforge.net/projects/bio-bwa/files/bwa-0.7.10.tar.bz2 \\\n && tar xjvf /tmp/bwa-0.7.10.tar.bz2 -C /usr/local/pipeline/ \\\n && cd /usr/local/pipeline/bwa-0.7.10 \\\n && make \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/bwa-0.7.10 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bwa-0.7.10' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bwa-0.7.10' ~/.bashrc \\\n && echo \"alias ngsBWA='/usr/local/pipeline/bwa-0.7.10'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/bwa-0.7.10/* /usr/local/bin \\\n && wget -O /tmp/stampy-latest.tgz http://www.well.ox.ac.uk/~gerton/software/Stampy/stampy-latest.tgz \\\n && tar xvf /tmp/stampy-latest.tgz -C /usr/local/pipeline/ \\\n && sed -i 's/-Wl//' /usr/local/pipeline/stampy-1.0.23/makefile \\\n && chmod -R 755 /usr/local/pipeline/stampy-1.0.23 \\\n && cd /usr/local/pipeline/stampy-1.0.23 \\\n && make \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/stampy-1.0.23 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/stampy-1.0.23' /home/pipeman/.bashrc \\\n && echo \"alias ngsStampy='/usr/local/pipeline/stampy-1.0.23'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/stampy-1.0.23/* /usr/local/bin \\\n && wget -O /tmp/bowtie2-2.2.4-linux-x86_64.zip http://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.2.4/bowtie2-2.2.4-linux-x86_64.zip \\\n && unzip /tmp/bowtie2-2.2.4-linux-x86_64.zip -d /usr/local/pipeline/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/bowtie2-2.2.4 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bowtie2-2.2.4:/usr/local/pipeline/bowtie2-2.2.4/scripts' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bowtie2-2.2.4:/usr/local/pipeline/bowtie2-2.2.4/scripts' ~/.bashrc \\\n && echo \"alias ngsBowtie2='/usr/local/pipeline/bowtie2-2.2.4'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/bowtie2-2.2.4/* /usr/local/bin\n#   Variant callers -------------------------------------------------------------------------------------\nRUN cd /usr/local/pipeline \\\n && git clone --recursive git://github.com/ekg/freebayes.git \\\n && cd /usr/local/pipeline/freebayes \\\n && make \\\n && chmod -R 755 /usr/local/pipeline/freebayes \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/freebayes \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/freebayes/bin' /home/pipeman/.bashrc \\\n && echo \"alias ngsFreebayes='/usr/local/pipeline/freebayes/bin'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/freebayes/bin/* /usr/local/bin \\\n && wget -O /tmp/Platypus-latest.tgz http://www.well.ox.ac.uk/bioinformatics/Software/Platypus-latest.tgz \\\n && tar xvf /tmp/Platypus-latest.tgz -C /usr/local/pipeline/ \\\n && cd /usr/local/pipeline/Platypus_0.7.9.1 \\\n && sh ./buildPlatypus.sh \\\n && chmod -R 755 /usr/local/pipeline/Platypus_0.7.9.1 \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/Platypus_0.7.9.1 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/Platypus_0.7.9.1' /home/pipeman/.bashrc \\\n && echo \"alias ngsPlatypus='/usr/local/pipeline/Platypus_0.7.9.1'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/Platypus_0.7.9.1/* /usr/local/bin \\\n && mkdir /usr/local/pipeline/bcbio \\\n && cd /usr/local/pipeline/bcbio \\\n && wget https://github.com/chapmanb/bcbio.variation/releases/download/v0.1.9/bcbio.variation-0.1.9-standalone.jar \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/bcbio/bcbio.variation-0.1.9-standalone.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bcbio/' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bcbio/' ~/.bashrc \\\n && echo \"alias ngsBCBIOVAR'/usr/local/pipeline/bcbio/'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/bcbio/* /usr/local/bin\n#  -------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n#  ---------------------------------------------------------------------\n#  Cleanup the temp dir\nRUN rm -rf /tmp/*\n#  open ports private only\nEXPOSE 80/tcp\n#   Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN apt-get autoclean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ------------------------------------------------#\n#  NGSeasy Dev Tool Box\n# ------------------------------------------------#\n#  Base image\nFROM compbio/ngseasy-base:latest\n#  Maintainer \nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n#  Set correct environment variables.\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Update\nRUN apt-get update -y \\\n && apt-get upgrade -y\n#  FastQC & Trimmomatic ---------------------------------------------------------------------\nRUN wget -O /tmp/fastqc_v0.11.2.zip http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.2.zip \\\n && unzip /tmp/fastqc_v0.11.2.zip -d /usr/local/pipeline/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/FastQC \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/FastQC/jbzip2-0.9.jar:/usr/local/pipeline/FastQC/sam-1.103.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/FastQC' /home/pipeman/.bashrc \\\n && echo \"alias ngsFastqc='/usr/local/pipeline/FastQC'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/FastQC/fastqc /usr/local/bin \\\n && wget -O /tmp/Trimmomatic-0.32.zip http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.32.zip \\\n && unzip /tmp/Trimmomatic-0.32.zip -d /usr/local/pipeline/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/Trimmomatic-0.32 \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/Trimmomatic-0.32/trimmomatic-0.32.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/Trimmomatic-0.32' /home/pipeman/.bashrc \\\n && echo \"alias ngsTrimfq='/usr/local/pipeline/Trimmomatic-0.32'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/Trimmomatic-0.32/* /usr/local/bin\n#  picard ----------------------------------------------------------------------\nRUN wget -O /tmp/picard-tools-1.119.zip http://sourceforge.net/projects/picard/files/picard-tools/1.119/picard-tools-1.119.zip \\\n && mkdir /usr/local/pipeline/picardtools \\\n && unzip /tmp/picard-tools-1.119.zip -d /usr/local/pipeline/picardtools/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/picardtools \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/picardtools/picard-tools-1.119/snappy-java-1.0.3-rc3.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/picardtools/picard-tools-1.119' /home/pipeman/.bashrc \\\n && echo \"alias ngsPicard='/usr/local/pipeline/picardtools/picard-tools-1.119'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/picardtools/picard-tools-1.119/* /usr/local/bin\n#  Aligners ---------------------------------------------------------------------\n#  bwa, stampy, bowtie2\n#  manually build novoalign and commit local image\nRUN wget -O /tmp/bwa-0.7.10.tar.bz2 http://sourceforge.net/projects/bio-bwa/files/bwa-0.7.10.tar.bz2 \\\n && tar xjvf /tmp/bwa-0.7.10.tar.bz2 -C /usr/local/pipeline/ \\\n && cd /usr/local/pipeline/bwa-0.7.10 \\\n && make \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/bwa-0.7.10 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bwa-0.7.10' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bwa-0.7.10' ~/.bashrc \\\n && echo \"alias ngsBWA='/usr/local/pipeline/bwa-0.7.10'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/bwa-0.7.10/* /usr/local/bin \\\n && wget -O /tmp/stampy-latest.tgz http://www.well.ox.ac.uk/~gerton/software/Stampy/stampy-latest.tgz \\\n && tar xvf /tmp/stampy-latest.tgz -C /usr/local/pipeline/ \\\n && sed -i 's/-Wl//' /usr/local/pipeline/stampy-1.0.23/makefile \\\n && chmod -R 755 /usr/local/pipeline/stampy-1.0.23 \\\n && cd /usr/local/pipeline/stampy-1.0.23 \\\n && make \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/stampy-1.0.23 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/stampy-1.0.23' /home/pipeman/.bashrc \\\n && echo \"alias ngsStampy='/usr/local/pipeline/stampy-1.0.23'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/stampy-1.0.23/* /usr/local/bin \\\n && wget -O /tmp/bowtie2-2.2.4-linux-x86_64.zip http://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.2.4/bowtie2-2.2.4-linux-x86_64.zip \\\n && unzip /tmp/bowtie2-2.2.4-linux-x86_64.zip -d /usr/local/pipeline/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/bowtie2-2.2.4 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bowtie2-2.2.4:/usr/local/pipeline/bowtie2-2.2.4/scripts' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bowtie2-2.2.4:/usr/local/pipeline/bowtie2-2.2.4/scripts' ~/.bashrc \\\n && echo \"alias ngsBowtie2='/usr/local/pipeline/bowtie2-2.2.4'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/bowtie2-2.2.4/* /usr/local/bin\n#  Variant callers -------------------------------------------------------------------------------------\nRUN cd /usr/local/pipeline \\\n && git clone --recursive git://github.com/ekg/freebayes.git \\\n && cd /usr/local/pipeline/freebayes \\\n && make \\\n && chmod -R 755 /usr/local/pipeline/freebayes \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/freebayes \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/freebayes/bin' /home/pipeman/.bashrc \\\n && echo \"alias ngsFreebayes='/usr/local/pipeline/freebayes/bin'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/freebayes/bin/* /usr/local/bin \\\n && wget -O /tmp/Platypus-latest.tgz http://www.well.ox.ac.uk/bioinformatics/Software/Platypus-latest.tgz \\\n && tar xvf /tmp/Platypus-latest.tgz -C /usr/local/pipeline/ \\\n && cd /usr/local/pipeline/Platypus_0.7.9.1 \\\n && sh ./buildPlatypus.sh \\\n && chmod -R 755 /usr/local/pipeline/Platypus_0.7.9.1 \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/Platypus_0.7.9.1 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/Platypus_0.7.9.1' /home/pipeman/.bashrc \\\n && echo \"alias ngsPlatypus='/usr/local/pipeline/Platypus_0.7.9.1'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/Platypus_0.7.9.1/* /usr/local/bin \\\n && mkdir /usr/local/pipeline/bcbio \\\n && cd /usr/local/pipeline/bcbio \\\n && wget https://github.com/chapmanb/bcbio.variation/releases/download/v0.1.9/bcbio.variation-0.1.9-standalone.jar \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/bcbio/bcbio.variation-0.1.9-standalone.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bcbio/' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bcbio/' ~/.bashrc \\\n && echo \"alias ngsBCBIOVAR'/usr/local/pipeline/bcbio/'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/bcbio/* /usr/local/bin\n# -------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n# ---------------------------------------------------------------------\n# Cleanup the temp dir\nRUN rm -rf /tmp/*\n# open ports private only\nEXPOSE 80/tcp\n#  Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n# Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN apt-get autoclean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\n","injectedSmells":[],"originalDockerfileHash":"80bbedfb0b0259e2567f5ee34f9e1e01","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ------------------------------------------------#\n#   NGSeasy Dev Tool Box\n#  ------------------------------------------------#\n#   Base image\nFROM compbio/ngseasy-base:latest\n#   Maintainer \nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n#   Set correct environment variables.\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Update\nRUN apt-get update -y \\\n && apt-get upgrade -y\n#   FastQC & Trimmomatic ---------------------------------------------------------------------\nRUN wget -O /tmp/fastqc_v0.11.2.zip http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.2.zip \\\n && unzip /tmp/fastqc_v0.11.2.zip -d /usr/local/pipeline/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/FastQC \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/FastQC/jbzip2-0.9.jar:/usr/local/pipeline/FastQC/sam-1.103.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/FastQC' /home/pipeman/.bashrc \\\n && echo \"alias ngsFastqc='/usr/local/pipeline/FastQC'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/FastQC/fastqc /usr/local/bin \\\n && wget -O /tmp/Trimmomatic-0.32.zip http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.32.zip \\\n && unzip /tmp/Trimmomatic-0.32.zip -d /usr/local/pipeline/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/Trimmomatic-0.32 \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/Trimmomatic-0.32/trimmomatic-0.32.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/Trimmomatic-0.32' /home/pipeman/.bashrc \\\n && echo \"alias ngsTrimfq='/usr/local/pipeline/Trimmomatic-0.32'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/Trimmomatic-0.32/* /usr/local/bin\n#   picard ----------------------------------------------------------------------\nRUN wget -O /tmp/picard-tools-1.119.zip http://sourceforge.net/projects/picard/files/picard-tools/1.119/picard-tools-1.119.zip \\\n && mkdir /usr/local/pipeline/picardtools \\\n && unzip /tmp/picard-tools-1.119.zip -d /usr/local/pipeline/picardtools/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/picardtools \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/picardtools/picard-tools-1.119/snappy-java-1.0.3-rc3.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/picardtools/picard-tools-1.119' /home/pipeman/.bashrc \\\n && echo \"alias ngsPicard='/usr/local/pipeline/picardtools/picard-tools-1.119'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/picardtools/picard-tools-1.119/* /usr/local/bin\n#   Aligners ---------------------------------------------------------------------\n#   bwa, stampy, bowtie2\n#   manually build novoalign and commit local image\nRUN wget -O /tmp/bwa-0.7.10.tar.bz2 http://sourceforge.net/projects/bio-bwa/files/bwa-0.7.10.tar.bz2 \\\n && tar xjvf /tmp/bwa-0.7.10.tar.bz2 -C /usr/local/pipeline/ \\\n && cd /usr/local/pipeline/bwa-0.7.10 \\\n && make \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/bwa-0.7.10 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bwa-0.7.10' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bwa-0.7.10' ~/.bashrc \\\n && echo \"alias ngsBWA='/usr/local/pipeline/bwa-0.7.10'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/bwa-0.7.10/* /usr/local/bin \\\n && wget -O /tmp/stampy-latest.tgz http://www.well.ox.ac.uk/~gerton/software/Stampy/stampy-latest.tgz \\\n && tar xvf /tmp/stampy-latest.tgz -C /usr/local/pipeline/ \\\n && sed -i 's/-Wl//' /usr/local/pipeline/stampy-1.0.23/makefile \\\n && chmod -R 755 /usr/local/pipeline/stampy-1.0.23 \\\n && cd /usr/local/pipeline/stampy-1.0.23 \\\n && make \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/stampy-1.0.23 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/stampy-1.0.23' /home/pipeman/.bashrc \\\n && echo \"alias ngsStampy='/usr/local/pipeline/stampy-1.0.23'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/stampy-1.0.23/* /usr/local/bin \\\n && wget -O /tmp/bowtie2-2.2.4-linux-x86_64.zip http://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.2.4/bowtie2-2.2.4-linux-x86_64.zip \\\n && unzip /tmp/bowtie2-2.2.4-linux-x86_64.zip -d /usr/local/pipeline/ \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/bowtie2-2.2.4 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bowtie2-2.2.4:/usr/local/pipeline/bowtie2-2.2.4/scripts' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bowtie2-2.2.4:/usr/local/pipeline/bowtie2-2.2.4/scripts' ~/.bashrc \\\n && echo \"alias ngsBowtie2='/usr/local/pipeline/bowtie2-2.2.4'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/bowtie2-2.2.4/* /usr/local/bin\n#   Variant callers -------------------------------------------------------------------------------------\nRUN cd /usr/local/pipeline \\\n && git clone --recursive git://github.com/ekg/freebayes.git \\\n && cd /usr/local/pipeline/freebayes \\\n && make \\\n && chmod -R 755 /usr/local/pipeline/freebayes \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/freebayes \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/freebayes/bin' /home/pipeman/.bashrc \\\n && echo \"alias ngsFreebayes='/usr/local/pipeline/freebayes/bin'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/freebayes/bin/* /usr/local/bin \\\n && wget -O /tmp/Platypus-latest.tgz http://www.well.ox.ac.uk/bioinformatics/Software/Platypus-latest.tgz \\\n && tar xvf /tmp/Platypus-latest.tgz -C /usr/local/pipeline/ \\\n && cd /usr/local/pipeline/Platypus_0.7.9.1 \\\n && sh ./buildPlatypus.sh \\\n && chmod -R 755 /usr/local/pipeline/Platypus_0.7.9.1 \\\n && chown -R pipeman:ngsgroup /usr/local/pipeline/Platypus_0.7.9.1 \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/Platypus_0.7.9.1' /home/pipeman/.bashrc \\\n && echo \"alias ngsPlatypus='/usr/local/pipeline/Platypus_0.7.9.1'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/Platypus_0.7.9.1/* /usr/local/bin \\\n && mkdir /usr/local/pipeline/bcbio \\\n && cd /usr/local/pipeline/bcbio \\\n && wget https://github.com/chapmanb/bcbio.variation/releases/download/v0.1.9/bcbio.variation-0.1.9-standalone.jar \\\n && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/bcbio/bcbio.variation-0.1.9-standalone.jar' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bcbio/' /home/pipeman/.bashrc \\\n && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bcbio/' ~/.bashrc \\\n && echo \"alias ngsBCBIOVAR'/usr/local/pipeline/bcbio/'\" >> /home/pipeman/.bashrc \\\n && cp -vr /usr/local/pipeline/bcbio/* /usr/local/bin\n#  -------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n#  ---------------------------------------------------------------------\n#  Cleanup the temp dir\nRUN rm -rf /tmp/*\n#  open ports private only\nEXPOSE 80/tcp\n#   Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN apt-get autoclean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\n","originalDockerfileUglifiedHash":"ae87fe1f4595b0cbd2b328595563eb6b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e0d3837de4b35a7d198fcf7c895237fbc36d125d.dockerfile"}