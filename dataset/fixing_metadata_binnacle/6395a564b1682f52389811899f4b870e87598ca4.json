{"seed":3472876538,"processedDockerfileHash":"eab34c182b63dc17dc0877ef29a2dad5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-apk"],"processedDockerfile":"FROM alpine:edge\nLABEL author=\"github.com/chrisdlangton\"\nENV NODE_VERSION=\"9.10.0\"\nENV YARN_VERSION=\"1.5.1\"\nENV PHASER_PORT=\"3000\"\nENV PHASER_INDEX=\"src/index.html\"\nENV NODE_ENV=\"development\"\nENV STATIC_SERVER_ARGS=\"\\\"\nRUN addgroup -g 1000 node \\\n && adduser -u 1000 -G node -s /bin/sh -D node \\\n && apk add libstdc++=12.2.1_git20220924-r9 --no-cache \\\n && apk add binutils-gold=2.40-r3 curl=8.0.1-r1 g++=12.2.1_git20220924-r9 gcc=12.2.1_git20220924-r9 gnupg=2.4.0-r1 libgcc=12.2.1_git20220924-r9 linux-headers=6.2-r0 make=4.4.1-r0 python --no-cache --virtual .build-deps \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && apk del .build-deps \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\nRUN apk add curl=8.0.1-r1 gnupg=2.4.0-r1 tar=1.34-r2 --no-cache --virtual .build-deps-yarn \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && apk del .build-deps-yarn\n#   The SUID flag on binaries has a vulnerability where intruders have a vector for assuming root access to the host\nRUN for i in `find / -path /proc -prune -o -perm /6000 -type f `; do chmod a-s $i ; done\nRUN npm install generator-phaser-plus@3.0.0-beta.1 static-server@2.2 es6-module-transpiler@0.10 -g --no-optional --no-package-lock \\\n && apk update \\\n && apk add git=2.40.0-r0 curl=8.0.1-r1 bash=5.2.15-r2 --no-cache --update \\\n && rm -rf /tmp/ \\\n && rm -rf /var/cache/apk/*\nRUN adduser -s /usr/local/bin/node -h /phaser -G node -S -D phaser\nWORKDIR /phaser\nUSER phaser\nCOPY package.json .\nRUN npm install phaser@3.3 --no-optional --no-package-lock \\\n && git clone https://github.com/photonstorm/phaser3-project-template.git /phaser/boilerplate \\\n && cd /phaser/boilerplate \\\n && npm install --no-optional --no-package-lock\nHEALTHCHECK --interval=10s --timeout=3s --start-period=3s CMD curl --silent --fail http://localhost:${PHASER_PORT}/ || exit 1\n#   Expose webpack server on 8080\nEXPOSE 8080/tcp\n#   Expose static web server\nEXPOSE $PHASER_PORT\nVOLUME [ \"/phaser/src\", \"/phaser/assets\" ]\nCMD [\"bash\", \"-c\", \"static-server\", \"-p\", \"${PHASER_PORT}\", \"-i\", \"${PHASER_INDEX}\", \"${STATIC_SERVER_ARGS}\"]\n","originalDockerfile":"FROM alpine:edge\nLABEL author=\"github.com/chrisdlangton\"\nENV NODE_VERSION=\"9.10.0\"\nENV YARN_VERSION=\"1.5.1\"\nENV PHASER_PORT=\"3000\"\nENV PHASER_INDEX=\"src/index.html\"\nENV NODE_ENV=\"development\"\nENV STATIC_SERVER_ARGS=\"\"\\\"\"\nRUN addgroup -g 1000 node \\\n && adduser -u 1000 -G node -s /bin/sh -D node \\\n && apk add --no-cache libstdc++ \\\n && apk add --no-cache --virtual .build-deps binutils-gold curl g++ gcc gnupg libgcc linux-headers make python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && apk del .build-deps \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\nRUN apk add --no-cache --virtual .build-deps-yarn curl gnupg tar \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && apk del .build-deps-yarn\n#  The SUID flag on binaries has a vulnerability where intruders have a vector for assuming root access to the host\nRUN for i in `find / -path /proc -prune -o -perm /6000 -type f `; do chmod a-s $i ; done\nRUN npm install generator-phaser-plus@3.0.0-beta.1 static-server@2.2 es6-module-transpiler@0.10 -g --no-optional --no-package-lock \\\n && apk update \\\n && apk add --no-cache --update git curl bash \\\n && rm -rf /tmp/ \\\n && rm -rf /var/cache/apk/*\nRUN adduser -s /usr/local/bin/node -h /phaser -G node -S -D phaser\nWORKDIR /phaser\nUSER phaser\nCOPY package.json .\nRUN npm install phaser@3.3 --no-optional --no-package-lock \\\n && git clone https://github.com/photonstorm/phaser3-project-template.git /phaser/boilerplate \\\n && cd /phaser/boilerplate \\\n && npm install --no-optional --no-package-lock\nHEALTHCHECK --interval=10s --timeout=3s --start-period=3s CMD curl --silent --fail http://localhost:${PHASER_PORT}/ || exit 1\n#  Expose webpack server on 8080\nEXPOSE 8080/tcp\n#  Expose static web server\nEXPOSE $PHASER_PORT\nVOLUME [ \"/phaser/src\", \"/phaser/assets\" ]\nCMD [\"bash\", \"-c\", \"static-server\", \"-p\", \"${PHASER_PORT}\", \"-i\", \"${PHASER_INDEX}\", \"${STATIC_SERVER_ARGS}\"]\n","injectedSmells":[],"originalDockerfileHash":"d732fffe18deccf83f119e41ceffe3fa","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:edge\nLABEL author=\"github.com/chrisdlangton\"\nENV NODE_VERSION=\"9.10.0\"\nENV YARN_VERSION=\"1.5.1\"\nENV PHASER_PORT=\"3000\"\nENV PHASER_INDEX=\"src/index.html\"\nENV NODE_ENV=\"development\"\nENV STATIC_SERVER_ARGS=\"\\\"\nRUN addgroup -g 1000 node \\\n && adduser -u 1000 -G node -s /bin/sh -D node \\\n && apk add --no-cache libstdc++ \\\n && apk add --no-cache --virtual .build-deps binutils-gold curl g++ gcc gnupg libgcc linux-headers make python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && apk del .build-deps \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\nRUN apk add --no-cache --virtual .build-deps-yarn curl gnupg tar \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && apk del .build-deps-yarn\n#   The SUID flag on binaries has a vulnerability where intruders have a vector for assuming root access to the host\nRUN for i in `find / -path /proc -prune -o -perm /6000 -type f `; do chmod a-s $i ; done\nRUN npm install generator-phaser-plus@3.0.0-beta.1 static-server@2.2 es6-module-transpiler@0.10 -g --no-optional --no-package-lock \\\n && apk update \\\n && apk add --no-cache --update git curl bash \\\n && rm -rf /tmp/ \\\n && rm -rf /var/cache/apk/*\nRUN adduser -s /usr/local/bin/node -h /phaser -G node -S -D phaser\nWORKDIR /phaser\nUSER phaser\nCOPY package.json .\nRUN npm install phaser@3.3 --no-optional --no-package-lock \\\n && git clone https://github.com/photonstorm/phaser3-project-template.git /phaser/boilerplate \\\n && cd /phaser/boilerplate \\\n && npm install --no-optional --no-package-lock\nHEALTHCHECK --interval=10s --timeout=3s --start-period=3s CMD curl --silent --fail http://localhost:${PHASER_PORT}/ || exit 1\n#   Expose webpack server on 8080\nEXPOSE 8080/tcp\n#   Expose static web server\nEXPOSE $PHASER_PORT\nVOLUME [ \"/phaser/src\", \"/phaser/assets\" ]\nCMD [\"bash\", \"-c\", \"static-server\", \"-p\", \"${PHASER_PORT}\", \"-i\", \"${PHASER_INDEX}\", \"${STATIC_SERVER_ARGS}\"]\n","originalDockerfileUglifiedHash":"fcaf31e5ec38703fda4e55eb49b65cf2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6395a564b1682f52389811899f4b870e87598ca4.dockerfile"}