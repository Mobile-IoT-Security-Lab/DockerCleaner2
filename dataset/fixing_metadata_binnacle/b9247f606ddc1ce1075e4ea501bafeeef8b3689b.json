{"seed":1562384624,"processedDockerfileHash":"efa509b10719ec81d146fc7ae552d286","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   使用超小的Linux镜像alpine\nFROM alpine\nENV HOME=\"/root\"\n#   安装准备\nRUN apk update \\\n && apk add bash=5.2.15-r0 gcc=12.2.1_git20220924-r4 libc-dev=0.7.2-r3 make=4.3-r1 openssl-dev=3.0.8-r3 pcre-dev=8.45-r2 zlib-dev=1.2.13-r0 linux-headers=5.19.5-r0 curl=7.88.1-r1 gnupg=2.2.40-r0 libxslt-dev=1.1.37-r1 gd-dev=2.3.3-r3 geoip-dev=1.6.12-r3 git=2.38.4-r1 wget=1.21.3-r2 --no-cache --virtual .build-deps\n#   复制工具\n#  ADD soft ${HOME}\n#\n#  RUN cd ${HOME} \\\n#      && tar xvf libfastcommon-master.tar.gz \\\n#      && tar xvf fastdfs-master.tar.gz \\\n#      && tar xvf fastdfs-nginx-module-master.tar.gz \\\n#      && tar xvf fastdht-master.tar.gz \\\n#      && tar xvf nginx-1.15.3.tar.gz \\\n#      && tar xvf db-18.1.32.tar.gz\n#   下载libfastcommon、fastdfs、fastdfs-nginx-module、fastdht、berkeley-db、nginx插件的源码\nRUN cd ${HOME} \\\n && curl -L https://github.com/happyfish100/libfastcommon/archive/master.tar.gz -o libfastcommon-master.tar.gz \\\n && curl -L https://github.com/happyfish100/fastdfs/archive/master.tar.gz -o fastdfs-master.tar.gz \\\n && curl -L https://github.com/happyfish100/fastdfs-nginx-module/archive/master.tar.gz -o fastdfs-nginx-module-master.tar.gz \\\n && curl -L https://github.com/happyfish100/fastdht/archive/master.tar.gz -o fastdht-master.tar.gz \\\n && curl -L http://nginx.org/download/nginx-1.15.3.tar.gz -o nginx-1.15.3.tar.gz \\\n && wget --http-user=username --http-passwd=password \"http://download.oracle.com/otn/berkeley-db/db-18.1.32.tar.gz\" \\\n && tar xvf libfastcommon-master.tar.gz \\\n && tar xvf fastdfs-master.tar.gz \\\n && tar xvf fastdfs-nginx-module-master.tar.gz \\\n && tar xvf fastdht-master.tar.gz \\\n && tar xvf nginx-1.15.3.tar.gz \\\n && tar xvf db-18.1.32.tar.gz\n#   安装libfastcommon\nRUN cd ${HOME}/libfastcommon-master/ \\\n && ./make.sh \\\n && ./make.sh install\n#   安装fastdfs\nRUN cd ${HOME}/fastdfs-master/ \\\n && ./make.sh \\\n && ./make.sh install\n#  安装berkeley db\nWORKDIR ${HOME}/db-18.1.32/build_unix\nRUN ../dist/configure -prefix=/usr \\\n && make \\\n && make install\n#  安装fastdht\nRUN cd ${HOME}/fastdht-master/ \\\n && sed -i \"s?CFLAGS='-Wall -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE'?CFLAGS='-Wall -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -I/usr/include/ -L/usr/lib/'?\" make.sh \\\n && ./make.sh \\\n && ./make.sh install\n#   配置fastdfs: base_dir\nRUN cd /etc/fdfs/ \\\n && cp storage.conf.sample storage.conf \\\n && cp tracker.conf.sample tracker.conf \\\n && cp client.conf.sample client.conf \\\n && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/tracker|g\" /etc/fdfs/tracker.conf \\\n && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/storage.conf \\\n && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/client.conf \\\n && sed -i \"s|/home/yuqing/fastdht|/var/local/fdht|g\" /etc/fdht/fdhtd.conf \\\n && sed -i \"s|/home/yuqing/fastdht|/var/local/fdht|g\" /etc/fdht/fdht_client.conf\n#   获取nginx源码，与fastdfs插件一起编译\nRUN cd ${HOME} \\\n && chmod u+x ${HOME}/fastdfs-nginx-module-master/src/config \\\n && cd nginx-1.15.3 \\\n && ./configure --add-module=${HOME}/fastdfs-nginx-module-master/src \\\n && make \\\n && make install\n#   设置nginx和fastdfs联合环境，并配置nginx\nRUN cp ${HOME}/fastdfs-nginx-module-master/src/mod_fastdfs.conf /etc/fdfs/ \\\n && sed -i \"s|^store_path0.*$|store_path0=/var/local/fdfs/storage|g\" /etc/fdfs/mod_fastdfs.conf \\\n && sed -i \"s|^url_have_group_name =.*$|url_have_group_name = true|g\" /etc/fdfs/mod_fastdfs.conf \\\n && cd ${HOME}/fastdfs-master/conf/ \\\n && cp http.conf mime.types anti-steal.jpg /etc/fdfs/ \\\n && echo -e \" events {\\n worker_connections 1024;\\n }\\n http {\\n include mime.types;\\n default_type application/octet-stream;\\n server {\\n listen 8080;\\n server_name localhost;\\n location ~ /group[0-9]/M00 {\\n ngx_fastdfs_module;\\n }\\n }\\n }\" > /usr/local/nginx/conf/nginx.conf\n#   清理文件\nRUN rm -rf ${HOME}/*\nRUN apk del .build-deps gcc libc-dev make openssl-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev\nRUN apk add bash=5.2.15-r0 pcre-dev=8.45-r2 zlib-dev=1.2.13-r0\n#   配置启动脚本，在启动时中根据环境变量替换nginx端口、fastdfs端口\n#   默认nginx端口\nENV WEB_PORT=\"8080\"\n#   默认fastdfs端口\nENV FDFS_PORT=\"22122\"\n#   默认fastdht端口\nENV FDHT_PORT=\"11411\"\n#   创建启动脚本\nRUN echo -e \"mkdir -p /var/local/fdfs/storage/data /var/local/fdfs/tracker /var/local/fdht; \\nsed -i \\\"s/listen\\ .*$/listen\\ $WEB_PORT;/g\\\" /usr/local/nginx/conf/nginx.conf; \\nsed -i \\\"s/http.server_port=.*$/http.server_port=$WEB_PORT/g\\\" /etc/fdfs/storage.conf; \\n\\nif [ \\\"$IP\\\" = \\\"\\\" ]; then \\n IP=\\`ifconfig eth0 | grep inet | awk '{print $2}'| awk -F: '{print $2}'\\`; \\nfi \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=$IP:$FDFS_PORT/g\\\" /etc/fdfs/client.conf; \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=$IP:$FDFS_PORT/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=$IP:$FDFS_PORT/g\\\" /etc/fdfs/mod_fastdfs.conf; \\nsed -i \\\"s/^group0.*$/group0=$IP:$FDHT_PORT/\\\" /etc/fdht/fdht_servers.conf; \\nsed -i \\\"4d\\\" /etc/fdht/fdht_servers.conf; \\nsed -i \\\"s/^check_file_duplicate=.*$/check_file_duplicate=1/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^keep_alive=.*$/keep_alive=1/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^##include \\/home\\/yuqing\\/fastdht\\/conf\\/fdht_servers.conf/#include \\/etc\\/fdht\\/fdht_servers.conf/g\\\" /etc/fdfs/storage.conf; \\n/etc/init.d/fdfs_trackerd start; \\n/usr/local/bin/fdhtd /etc/fdht/fdhtd.conf; \\n/etc/init.d/fdfs_storaged start; \\n/usr/local/nginx/sbin/nginx; \\ntail -f /usr/local/nginx/logs/access.log \" > /start.sh \\\n && chmod u+x /start.sh\nENTRYPOINT [\"/bin/bash\", \"/start.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  使用超小的Linux镜像alpine\nFROM alpine\nENV HOME=\"/root\"\n#  安装准备\nRUN apk update \\\n && apk add --no-cache --virtual .build-deps bash gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev git wget\n#  复制工具\n# ADD soft ${HOME}\n#\n# RUN cd ${HOME} \\\n#     && tar xvf libfastcommon-master.tar.gz \\\n#     && tar xvf fastdfs-master.tar.gz \\\n#     && tar xvf fastdfs-nginx-module-master.tar.gz \\\n#     && tar xvf fastdht-master.tar.gz \\\n#     && tar xvf nginx-1.15.3.tar.gz \\\n#     && tar xvf db-18.1.32.tar.gz\n#  下载libfastcommon、fastdfs、fastdfs-nginx-module、fastdht、berkeley-db、nginx插件的源码\nRUN cd ${HOME} \\\n && curl -L https://github.com/happyfish100/libfastcommon/archive/master.tar.gz -o libfastcommon-master.tar.gz \\\n && curl -L https://github.com/happyfish100/fastdfs/archive/master.tar.gz -o fastdfs-master.tar.gz \\\n && curl -L https://github.com/happyfish100/fastdfs-nginx-module/archive/master.tar.gz -o fastdfs-nginx-module-master.tar.gz \\\n && curl -L https://github.com/happyfish100/fastdht/archive/master.tar.gz -o fastdht-master.tar.gz \\\n && curl -L http://nginx.org/download/nginx-1.15.3.tar.gz -o nginx-1.15.3.tar.gz \\\n && wget --http-user=username --http-passwd=password \"http://download.oracle.com/otn/berkeley-db/db-18.1.32.tar.gz\" \\\n && tar xvf libfastcommon-master.tar.gz \\\n && tar xvf fastdfs-master.tar.gz \\\n && tar xvf fastdfs-nginx-module-master.tar.gz \\\n && tar xvf fastdht-master.tar.gz \\\n && tar xvf nginx-1.15.3.tar.gz \\\n && tar xvf db-18.1.32.tar.gz\n#  安装libfastcommon\nRUN cd ${HOME}/libfastcommon-master/ \\\n && ./make.sh \\\n && ./make.sh install\n#  安装fastdfs\nRUN cd ${HOME}/fastdfs-master/ \\\n && ./make.sh \\\n && ./make.sh install\n# 安装berkeley db\nWORKDIR ${HOME}/db-18.1.32/build_unix\nRUN ../dist/configure -prefix=/usr \\\n && make \\\n && make install\n# 安装fastdht\nRUN cd ${HOME}/fastdht-master/ \\\n && sed -i \"s?CFLAGS='-Wall -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE'?CFLAGS='-Wall -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -I/usr/include/ -L/usr/lib/'?\" make.sh \\\n && ./make.sh \\\n && ./make.sh install\n#  配置fastdfs: base_dir\nRUN cd /etc/fdfs/ \\\n && cp storage.conf.sample storage.conf \\\n && cp tracker.conf.sample tracker.conf \\\n && cp client.conf.sample client.conf \\\n && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/tracker|g\" /etc/fdfs/tracker.conf \\\n && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/storage.conf \\\n && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/client.conf \\\n && sed -i \"s|/home/yuqing/fastdht|/var/local/fdht|g\" /etc/fdht/fdhtd.conf \\\n && sed -i \"s|/home/yuqing/fastdht|/var/local/fdht|g\" /etc/fdht/fdht_client.conf\n#  获取nginx源码，与fastdfs插件一起编译\nRUN cd ${HOME} \\\n && chmod u+x ${HOME}/fastdfs-nginx-module-master/src/config \\\n && cd nginx-1.15.3 \\\n && ./configure --add-module=${HOME}/fastdfs-nginx-module-master/src \\\n && make \\\n && make install\n#  设置nginx和fastdfs联合环境，并配置nginx\nRUN cp ${HOME}/fastdfs-nginx-module-master/src/mod_fastdfs.conf /etc/fdfs/ \\\n && sed -i \"s|^store_path0.*$|store_path0=/var/local/fdfs/storage|g\" /etc/fdfs/mod_fastdfs.conf \\\n && sed -i \"s|^url_have_group_name =.*$|url_have_group_name = true|g\" /etc/fdfs/mod_fastdfs.conf \\\n && cd ${HOME}/fastdfs-master/conf/ \\\n && cp http.conf mime.types anti-steal.jpg /etc/fdfs/ \\\n && echo -e \" events {\\n worker_connections 1024;\\n }\\n http {\\n include mime.types;\\n default_type application/octet-stream;\\n server {\\n listen 8080;\\n server_name localhost;\\n location ~ /group[0-9]/M00 {\\n ngx_fastdfs_module;\\n }\\n }\\n }\" > /usr/local/nginx/conf/nginx.conf\n#  清理文件\nRUN rm -rf ${HOME}/*\nRUN apk del .build-deps gcc libc-dev make openssl-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev\nRUN apk add bash pcre-dev zlib-dev\n#  配置启动脚本，在启动时中根据环境变量替换nginx端口、fastdfs端口\n#  默认nginx端口\nENV WEB_PORT=\"8080\"\n#  默认fastdfs端口\nENV FDFS_PORT=\"22122\"\n#  默认fastdht端口\nENV FDHT_PORT=\"11411\"\n#  创建启动脚本\nRUN echo -e \"mkdir -p /var/local/fdfs/storage/data /var/local/fdfs/tracker /var/local/fdht; \\nsed -i \\\"s/listen\\ .*$/listen\\ $WEB_PORT;/g\\\" /usr/local/nginx/conf/nginx.conf; \\nsed -i \\\"s/http.server_port=.*$/http.server_port=$WEB_PORT/g\\\" /etc/fdfs/storage.conf; \\n\\nif [ \\\"$IP\\\" = \\\"\\\" ]; then \\n IP=\\`ifconfig eth0 | grep inet | awk '{print $2}'| awk -F: '{print $2}'\\`; \\nfi \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=$IP:$FDFS_PORT/g\\\" /etc/fdfs/client.conf; \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=$IP:$FDFS_PORT/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=$IP:$FDFS_PORT/g\\\" /etc/fdfs/mod_fastdfs.conf; \\nsed -i \\\"s/^group0.*$/group0=$IP:$FDHT_PORT/\\\" /etc/fdht/fdht_servers.conf; \\nsed -i \\\"4d\\\" /etc/fdht/fdht_servers.conf; \\nsed -i \\\"s/^check_file_duplicate=.*$/check_file_duplicate=1/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^keep_alive=.*$/keep_alive=1/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^##include \\/home\\/yuqing\\/fastdht\\/conf\\/fdht_servers.conf/#include \\/etc\\/fdht\\/fdht_servers.conf/g\\\" /etc/fdfs/storage.conf; \\n/etc/init.d/fdfs_trackerd start; \\n/usr/local/bin/fdhtd /etc/fdht/fdhtd.conf; \\n/etc/init.d/fdfs_storaged start; \\n/usr/local/nginx/sbin/nginx; \\ntail -f /usr/local/nginx/logs/access.log \" > /start.sh \\\n && chmod u+x /start.sh\nENTRYPOINT [\"/bin/bash\", \"/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"e61e8eb8669f2e2036aaf34e5d2018f0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   使用超小的Linux镜像alpine\nFROM alpine\nENV HOME=\"/root\"\n#   安装准备\nRUN apk update \\\n && apk add --no-cache --virtual .build-deps bash gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev git wget\n#   复制工具\n#  ADD soft ${HOME}\n#\n#  RUN cd ${HOME} \\\n#      && tar xvf libfastcommon-master.tar.gz \\\n#      && tar xvf fastdfs-master.tar.gz \\\n#      && tar xvf fastdfs-nginx-module-master.tar.gz \\\n#      && tar xvf fastdht-master.tar.gz \\\n#      && tar xvf nginx-1.15.3.tar.gz \\\n#      && tar xvf db-18.1.32.tar.gz\n#   下载libfastcommon、fastdfs、fastdfs-nginx-module、fastdht、berkeley-db、nginx插件的源码\nRUN cd ${HOME} \\\n && curl -L https://github.com/happyfish100/libfastcommon/archive/master.tar.gz -o libfastcommon-master.tar.gz \\\n && curl -L https://github.com/happyfish100/fastdfs/archive/master.tar.gz -o fastdfs-master.tar.gz \\\n && curl -L https://github.com/happyfish100/fastdfs-nginx-module/archive/master.tar.gz -o fastdfs-nginx-module-master.tar.gz \\\n && curl -L https://github.com/happyfish100/fastdht/archive/master.tar.gz -o fastdht-master.tar.gz \\\n && curl -L http://nginx.org/download/nginx-1.15.3.tar.gz -o nginx-1.15.3.tar.gz \\\n && wget --http-user=username --http-passwd=password \"http://download.oracle.com/otn/berkeley-db/db-18.1.32.tar.gz\" \\\n && tar xvf libfastcommon-master.tar.gz \\\n && tar xvf fastdfs-master.tar.gz \\\n && tar xvf fastdfs-nginx-module-master.tar.gz \\\n && tar xvf fastdht-master.tar.gz \\\n && tar xvf nginx-1.15.3.tar.gz \\\n && tar xvf db-18.1.32.tar.gz\n#   安装libfastcommon\nRUN cd ${HOME}/libfastcommon-master/ \\\n && ./make.sh \\\n && ./make.sh install\n#   安装fastdfs\nRUN cd ${HOME}/fastdfs-master/ \\\n && ./make.sh \\\n && ./make.sh install\n#  安装berkeley db\nWORKDIR ${HOME}/db-18.1.32/build_unix\nRUN ../dist/configure -prefix=/usr \\\n && make \\\n && make install\n#  安装fastdht\nRUN cd ${HOME}/fastdht-master/ \\\n && sed -i \"s?CFLAGS='-Wall -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE'?CFLAGS='-Wall -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -I/usr/include/ -L/usr/lib/'?\" make.sh \\\n && ./make.sh \\\n && ./make.sh install\n#   配置fastdfs: base_dir\nRUN cd /etc/fdfs/ \\\n && cp storage.conf.sample storage.conf \\\n && cp tracker.conf.sample tracker.conf \\\n && cp client.conf.sample client.conf \\\n && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/tracker|g\" /etc/fdfs/tracker.conf \\\n && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/storage.conf \\\n && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/client.conf \\\n && sed -i \"s|/home/yuqing/fastdht|/var/local/fdht|g\" /etc/fdht/fdhtd.conf \\\n && sed -i \"s|/home/yuqing/fastdht|/var/local/fdht|g\" /etc/fdht/fdht_client.conf\n#   获取nginx源码，与fastdfs插件一起编译\nRUN cd ${HOME} \\\n && chmod u+x ${HOME}/fastdfs-nginx-module-master/src/config \\\n && cd nginx-1.15.3 \\\n && ./configure --add-module=${HOME}/fastdfs-nginx-module-master/src \\\n && make \\\n && make install\n#   设置nginx和fastdfs联合环境，并配置nginx\nRUN cp ${HOME}/fastdfs-nginx-module-master/src/mod_fastdfs.conf /etc/fdfs/ \\\n && sed -i \"s|^store_path0.*$|store_path0=/var/local/fdfs/storage|g\" /etc/fdfs/mod_fastdfs.conf \\\n && sed -i \"s|^url_have_group_name =.*$|url_have_group_name = true|g\" /etc/fdfs/mod_fastdfs.conf \\\n && cd ${HOME}/fastdfs-master/conf/ \\\n && cp http.conf mime.types anti-steal.jpg /etc/fdfs/ \\\n && echo -e \" events {\\n worker_connections 1024;\\n }\\n http {\\n include mime.types;\\n default_type application/octet-stream;\\n server {\\n listen 8080;\\n server_name localhost;\\n location ~ /group[0-9]/M00 {\\n ngx_fastdfs_module;\\n }\\n }\\n }\" > /usr/local/nginx/conf/nginx.conf\n#   清理文件\nRUN rm -rf ${HOME}/*\nRUN apk del .build-deps gcc libc-dev make openssl-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev\nRUN apk add bash pcre-dev zlib-dev\n#   配置启动脚本，在启动时中根据环境变量替换nginx端口、fastdfs端口\n#   默认nginx端口\nENV WEB_PORT=\"8080\"\n#   默认fastdfs端口\nENV FDFS_PORT=\"22122\"\n#   默认fastdht端口\nENV FDHT_PORT=\"11411\"\n#   创建启动脚本\nRUN echo -e \"mkdir -p /var/local/fdfs/storage/data /var/local/fdfs/tracker /var/local/fdht; \\nsed -i \\\"s/listen\\ .*$/listen\\ $WEB_PORT;/g\\\" /usr/local/nginx/conf/nginx.conf; \\nsed -i \\\"s/http.server_port=.*$/http.server_port=$WEB_PORT/g\\\" /etc/fdfs/storage.conf; \\n\\nif [ \\\"$IP\\\" = \\\"\\\" ]; then \\n IP=\\`ifconfig eth0 | grep inet | awk '{print $2}'| awk -F: '{print $2}'\\`; \\nfi \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=$IP:$FDFS_PORT/g\\\" /etc/fdfs/client.conf; \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=$IP:$FDFS_PORT/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^tracker_server=.*$/tracker_server=$IP:$FDFS_PORT/g\\\" /etc/fdfs/mod_fastdfs.conf; \\nsed -i \\\"s/^group0.*$/group0=$IP:$FDHT_PORT/\\\" /etc/fdht/fdht_servers.conf; \\nsed -i \\\"4d\\\" /etc/fdht/fdht_servers.conf; \\nsed -i \\\"s/^check_file_duplicate=.*$/check_file_duplicate=1/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^keep_alive=.*$/keep_alive=1/g\\\" /etc/fdfs/storage.conf; \\nsed -i \\\"s/^##include \\/home\\/yuqing\\/fastdht\\/conf\\/fdht_servers.conf/#include \\/etc\\/fdht\\/fdht_servers.conf/g\\\" /etc/fdfs/storage.conf; \\n/etc/init.d/fdfs_trackerd start; \\n/usr/local/bin/fdhtd /etc/fdht/fdhtd.conf; \\n/etc/init.d/fdfs_storaged start; \\n/usr/local/nginx/sbin/nginx; \\ntail -f /usr/local/nginx/logs/access.log \" > /start.sh \\\n && chmod u+x /start.sh\nENTRYPOINT [\"/bin/bash\", \"/start.sh\"]\n","originalDockerfileUglifiedHash":"3619f1f824c4995701ef7f39f7dd162e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b9247f606ddc1ce1075e4ea501bafeeef8b3689b.dockerfile"}