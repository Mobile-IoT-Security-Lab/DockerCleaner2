{"seed":4130912464,"processedDockerfileHash":"f657539a202155ac150122d27df7cc30","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for generating a Fedora image with the full KallistiOS SDK installed so you can compile\n#   Dreamcast applications\nFROM fedora:21\nMAINTAINER kazade <kazade@gmail.com>\nRUN yum clean all \\\n && yum -y install yum-plugin-ovl\nRUN yum -y update \\\n && yum clean all \\\n && yum -y install automake make git hostname glibc-static bison elfutils flex glibc-devel binutils binutils-devel gdb tar bzip2 patch gcc gcc-c++ texinfo libjpeg-turbo-devel libpng-devel python3 cmake mpfr-devel gmp-devel libmpc-devel openssl-devel python-devel python-setuptools libffi-devel genisoimage unzip python-pip \\\n && yum clean all \\\n && pip install pip==23.1 -U\nRUN mkdir -p /opt/toolchains/dc\nRUN git clone git://git.code.sf.net/p/cadcdev/kallistios /opt/toolchains/dc/kos\nRUN git clone --recursive git://git.code.sf.net/p/cadcdev/kos-ports /opt/toolchains/dc/kos-ports\n#  # Uncomment the below to enable a 5.2 toolchain\n#  # Download update GCC and newlib diffs\n#  RUN cd /opt/toolchains/dc/kos/utils/dc-chain/patches; curl -O https://raw.githubusercontent.com/DC-SWAT/#DreamShell/master/sdk/toolchain/patches/gcc-5.2.0-kos.diff; cd -\n#  RUN cd /opt/toolchains/dc/kos/utils/dc-chain/patches; curl -O https://raw.githubusercontent.com/DC-SWAT/#DreamShell/master/sdk/toolchain/patches/newlib-2.2.0-kos.diff; cd -\n#\n#  # Custom SWAT/DreamShell patches which should probably be upstream??\n#  RUN cd /opt/toolchains/dc/kos/utils/dc-chain/patches; curl -O https://raw.githubusercontent.com/DC-SWAT/#DreamShell/master/sdk/toolchain/patches/kos.diff; cd -\n#\n#  RUN cd /opt/toolchains/dc/kos && patch -p1 < /opt/toolchains/dc/kos/utils/dc-chain/patches/kos.diff\n#\n#  # Update GCC\n#  RUN sed -i 's/4.7.3/5.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/download.sh\n#  RUN sed -i 's/4.7.3/5.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/unpack.sh\n#  RUN sed -i 's/4.7.3/5.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n#\n#  # Update newlib\n#  RUN sed -i 's/2.0.0/2.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/download.sh\n#  RUN sed -i 's/2.0.0/2.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/unpack.sh\n#  RUN sed -i 's/2.0.0/2.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n#   Speed up compilation\nRUN set -i 's/# makejobs=-jn/makejobs=-j5/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n#   Disable objc, and obj-c++\nRUN sed -i 's/c,c++,objc,obj-c++/c,c++/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\nRUN cd /opt/toolchains/dc/kos/utils/dc-chain \\\n && sh ./download.sh \\\n && sh ./unpack.sh \\\n && make\nRUN cp /opt/toolchains/dc/kos/doc/environ.sh.sample /opt/toolchains/dc/kos/environ.sh\n#   Enable C++ functionality which is disabled by default\nRUN sed -i 's/-fno-rtti//' /opt/toolchains/dc/kos/environ_base.sh\nRUN sed -i 's/-fno-exceptions//' /opt/toolchains/dc/kos/environ_base.sh\nRUN sed -i 's/-fno-operator-names//' /opt/toolchains/dc/kos/environ_base.sh\nRUN set -i 's/-g / /' /opt/toolchains/dc/kos/environ_base.sh\n#   Remove default optimisations, so it can be controlled by CMake or whatever\nRUN sed -i 's/-O2//' /opt/toolchains/dc/kos/environ.sh\nRUN echo -e \"\\nsource /opt/toolchains/dc/kos/environ.sh\" >> /etc/bash.bashrc\nRUN ln -s /etc/bash.bashrc /root/.bashrc\nRUN source /etc/bash.bashrc ; echo ${KOS_BASE}\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos \\\n && make\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos-ports/libjpeg \\\n && make install clean\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos-ports/libpng \\\n && make install clean\nRUN . /etc/bash.bashrc ; cd /opt/toolchains/dc/kos/utils \\\n && mkdir makeip \\\n && cd makeip \\\n && curl http://www.boob.co.uk/files/makeip.tar.gz > makeip.tar.gz \\\n && tar -xf makeip.tar.gz \\\n && rm makeip.tar.gz \\\n && gcc makeip.c -o makeip\nRUN . /etc/bash.bashrc ; cd /opt/toolchains/dc/kos/utils \\\n && git clone https://github.com/Kazade/img4dc.git \\\n && cd img4dc \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make BUMP=9\n#   Add GLdc as a kos port\nRUN mkdir -p /opt/toolchains/dc/kos-ports/GLdc/files\nRUN echo $'\\nTARGET = libGLdc.a\\nOBJS = GL/draw.o GL/flush.o GL/framebuffer.o GL/immediate.o GL/lighting.o GL/state.o GL/texture.o GL/glu.o\\nOBJS += GL/matrix.o GL/fog.o GL/error.o GL/clip.o containers/stack.o containers/named_array.o containers/aligned_vector.o GL/profiler.o\\n\\nKOS_CFLAGS += -Iinclude -ffast-math -O3\\n\\ninclude ${KOS_PORTS}/scripts/lib.mk\\n' > /opt/toolchains/dc/kos-ports/GLdc/files/KOSMakefile.mk\nRUN echo $'\\nPORTNAME = GLdc\\nPORTVERSION = 1.0.0\\n\\nMAINTAINER = Luke Benstead <kazade@gmail.com>\\nLICENSE = BSD 2-Clause \"Simplified\" License\\nSHORT_DESC = Partial OpenGL 1.2 implementation for KOS\\n\\nDEPENDENCIES = \\n\\nGIT_REPOSITORY = https://github.com/Kazade/GLdc.git\\n\\nTARGET = libGLdc.a\\nINSTALLED_HDRS = include/gl.h include/glext.h include/glu.h include/glkos.h\\nHDR_COMDIR = GL\\n\\nKOS_DISTFILES = KOSMakefile.mk\\n\\ninclude ${KOS_PORTS}/scripts/kos-ports.mk\\n' > /opt/toolchains/dc/kos-ports/GLdc/Makefile\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos-ports/GLdc \\\n && BUMP=1 make install clean\n#   Now install dcload-ip\nRUN yum install -y elfutils-libelf-devel\nRUN . /etc/bash.bashrc ; git clone https://git.code.sf.net/p/cadcdev/dcload-ip /opt/toolchains/dc/dc-load-ip\nRUN . /etc/bash.bashrc ; cp /opt/toolchains/dc/dc-load-ip/example-src/dc4.x /opt/toolchains/dc/dc-load-ip/example-src/dc5.x\nRUN . /etc/bash.bashrc ; cd /opt/toolchains/dc/dc-load-ip \\\n && make\nRUN . /etc/bash.bashrc ; mkdir -p /opt/toolchains/dc/bin \\\n && cp /opt/toolchains/dc/dc-load-ip/host-src/tool/dc-tool /opt/toolchains/dc/bin\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for generating a Fedora image with the full KallistiOS SDK installed so you can compile\n#  Dreamcast applications\nFROM fedora:21\nMAINTAINER kazade <kazade@gmail.com>\nRUN yum clean all \\\n && yum -y install yum-plugin-ovl\nRUN yum -y update \\\n && yum clean all \\\n && yum -y install automake make git hostname glibc-static bison elfutils flex glibc-devel binutils binutils-devel gdb tar bzip2 patch gcc gcc-c++ texinfo libjpeg-turbo-devel libpng-devel python3 cmake mpfr-devel gmp-devel libmpc-devel openssl-devel python-devel python-setuptools libffi-devel genisoimage unzip python-pip \\\n && yum clean all \\\n && pip install pip -U\nRUN mkdir -p /opt/toolchains/dc\nRUN git clone git://git.code.sf.net/p/cadcdev/kallistios /opt/toolchains/dc/kos\nRUN git clone --recursive git://git.code.sf.net/p/cadcdev/kos-ports /opt/toolchains/dc/kos-ports\n# # Uncomment the below to enable a 5.2 toolchain\n# # Download update GCC and newlib diffs\n# RUN cd /opt/toolchains/dc/kos/utils/dc-chain/patches; curl -O https://raw.githubusercontent.com/DC-SWAT/#DreamShell/master/sdk/toolchain/patches/gcc-5.2.0-kos.diff; cd -\n# RUN cd /opt/toolchains/dc/kos/utils/dc-chain/patches; curl -O https://raw.githubusercontent.com/DC-SWAT/#DreamShell/master/sdk/toolchain/patches/newlib-2.2.0-kos.diff; cd -\n#\n# # Custom SWAT/DreamShell patches which should probably be upstream??\n# RUN cd /opt/toolchains/dc/kos/utils/dc-chain/patches; curl -O https://raw.githubusercontent.com/DC-SWAT/#DreamShell/master/sdk/toolchain/patches/kos.diff; cd -\n#\n# RUN cd /opt/toolchains/dc/kos && patch -p1 < /opt/toolchains/dc/kos/utils/dc-chain/patches/kos.diff\n#\n# # Update GCC\n# RUN sed -i 's/4.7.3/5.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/download.sh\n# RUN sed -i 's/4.7.3/5.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/unpack.sh\n# RUN sed -i 's/4.7.3/5.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n#\n# # Update newlib\n# RUN sed -i 's/2.0.0/2.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/download.sh\n# RUN sed -i 's/2.0.0/2.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/unpack.sh\n# RUN sed -i 's/2.0.0/2.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n#  Speed up compilation\nRUN set -i 's/# makejobs=-jn/makejobs=-j5/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n#  Disable objc, and obj-c++\nRUN sed -i 's/c,c++,objc,obj-c++/c,c++/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\nRUN cd /opt/toolchains/dc/kos/utils/dc-chain \\\n && sh ./download.sh \\\n && sh ./unpack.sh \\\n && make\nRUN cp /opt/toolchains/dc/kos/doc/environ.sh.sample /opt/toolchains/dc/kos/environ.sh\n#  Enable C++ functionality which is disabled by default\nRUN sed -i 's/-fno-rtti//' /opt/toolchains/dc/kos/environ_base.sh\nRUN sed -i 's/-fno-exceptions//' /opt/toolchains/dc/kos/environ_base.sh\nRUN sed -i 's/-fno-operator-names//' /opt/toolchains/dc/kos/environ_base.sh\nRUN set -i 's/-g / /' /opt/toolchains/dc/kos/environ_base.sh\n#  Remove default optimisations, so it can be controlled by CMake or whatever\nRUN sed -i 's/-O2//' /opt/toolchains/dc/kos/environ.sh\nRUN echo -e \"\\nsource /opt/toolchains/dc/kos/environ.sh\" >> /etc/bash.bashrc\nRUN ln -s /etc/bash.bashrc /root/.bashrc\nRUN source /etc/bash.bashrc ; echo ${KOS_BASE}\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos \\\n && make\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos-ports/libjpeg \\\n && make install clean\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos-ports/libpng \\\n && make install clean\nRUN . /etc/bash.bashrc ; cd /opt/toolchains/dc/kos/utils \\\n && mkdir makeip \\\n && cd makeip \\\n && curl http://www.boob.co.uk/files/makeip.tar.gz > makeip.tar.gz \\\n && tar -xf makeip.tar.gz \\\n && rm makeip.tar.gz \\\n && gcc makeip.c -o makeip\nRUN . /etc/bash.bashrc ; cd /opt/toolchains/dc/kos/utils \\\n && git clone https://github.com/Kazade/img4dc.git \\\n && cd img4dc \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make BUMP=9\n#  Add GLdc as a kos port\nRUN mkdir -p /opt/toolchains/dc/kos-ports/GLdc/files\nRUN echo $'\\nTARGET = libGLdc.a\\nOBJS = GL/draw.o GL/flush.o GL/framebuffer.o GL/immediate.o GL/lighting.o GL/state.o GL/texture.o GL/glu.o\\nOBJS += GL/matrix.o GL/fog.o GL/error.o GL/clip.o containers/stack.o containers/named_array.o containers/aligned_vector.o GL/profiler.o\\n\\nKOS_CFLAGS += -Iinclude -ffast-math -O3\\n\\ninclude ${KOS_PORTS}/scripts/lib.mk\\n' > /opt/toolchains/dc/kos-ports/GLdc/files/KOSMakefile.mk\nRUN echo $'\\nPORTNAME = GLdc\\nPORTVERSION = 1.0.0\\n\\nMAINTAINER = Luke Benstead <kazade@gmail.com>\\nLICENSE = BSD 2-Clause \"Simplified\" License\\nSHORT_DESC = Partial OpenGL 1.2 implementation for KOS\\n\\nDEPENDENCIES = \\n\\nGIT_REPOSITORY = https://github.com/Kazade/GLdc.git\\n\\nTARGET = libGLdc.a\\nINSTALLED_HDRS = include/gl.h include/glext.h include/glu.h include/glkos.h\\nHDR_COMDIR = GL\\n\\nKOS_DISTFILES = KOSMakefile.mk\\n\\ninclude ${KOS_PORTS}/scripts/kos-ports.mk\\n' > /opt/toolchains/dc/kos-ports/GLdc/Makefile\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos-ports/GLdc \\\n && BUMP=1 make install clean\n#  Now install dcload-ip\nRUN yum install -y elfutils-libelf-devel\nRUN . /etc/bash.bashrc ; git clone https://git.code.sf.net/p/cadcdev/dcload-ip /opt/toolchains/dc/dc-load-ip\nRUN . /etc/bash.bashrc ; cp /opt/toolchains/dc/dc-load-ip/example-src/dc4.x /opt/toolchains/dc/dc-load-ip/example-src/dc5.x\nRUN . /etc/bash.bashrc ; cd /opt/toolchains/dc/dc-load-ip \\\n && make\nRUN . /etc/bash.bashrc ; mkdir -p /opt/toolchains/dc/bin \\\n && cp /opt/toolchains/dc/dc-load-ip/host-src/tool/dc-tool /opt/toolchains/dc/bin\n","injectedSmells":[],"originalDockerfileHash":"789c7d0403beec364b58e7f1f638b8d0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for generating a Fedora image with the full KallistiOS SDK installed so you can compile\n#   Dreamcast applications\nFROM fedora:21\nMAINTAINER kazade <kazade@gmail.com>\nRUN yum clean all \\\n && yum -y install yum-plugin-ovl\nRUN yum -y update \\\n && yum clean all \\\n && yum -y install automake make git hostname glibc-static bison elfutils flex glibc-devel binutils binutils-devel gdb tar bzip2 patch gcc gcc-c++ texinfo libjpeg-turbo-devel libpng-devel python3 cmake mpfr-devel gmp-devel libmpc-devel openssl-devel python-devel python-setuptools libffi-devel genisoimage unzip python-pip \\\n && yum clean all \\\n && pip install pip -U\nRUN mkdir -p /opt/toolchains/dc\nRUN git clone git://git.code.sf.net/p/cadcdev/kallistios /opt/toolchains/dc/kos\nRUN git clone --recursive git://git.code.sf.net/p/cadcdev/kos-ports /opt/toolchains/dc/kos-ports\n#  # Uncomment the below to enable a 5.2 toolchain\n#  # Download update GCC and newlib diffs\n#  RUN cd /opt/toolchains/dc/kos/utils/dc-chain/patches; curl -O https://raw.githubusercontent.com/DC-SWAT/#DreamShell/master/sdk/toolchain/patches/gcc-5.2.0-kos.diff; cd -\n#  RUN cd /opt/toolchains/dc/kos/utils/dc-chain/patches; curl -O https://raw.githubusercontent.com/DC-SWAT/#DreamShell/master/sdk/toolchain/patches/newlib-2.2.0-kos.diff; cd -\n#\n#  # Custom SWAT/DreamShell patches which should probably be upstream??\n#  RUN cd /opt/toolchains/dc/kos/utils/dc-chain/patches; curl -O https://raw.githubusercontent.com/DC-SWAT/#DreamShell/master/sdk/toolchain/patches/kos.diff; cd -\n#\n#  RUN cd /opt/toolchains/dc/kos && patch -p1 < /opt/toolchains/dc/kos/utils/dc-chain/patches/kos.diff\n#\n#  # Update GCC\n#  RUN sed -i 's/4.7.3/5.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/download.sh\n#  RUN sed -i 's/4.7.3/5.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/unpack.sh\n#  RUN sed -i 's/4.7.3/5.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n#\n#  # Update newlib\n#  RUN sed -i 's/2.0.0/2.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/download.sh\n#  RUN sed -i 's/2.0.0/2.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/unpack.sh\n#  RUN sed -i 's/2.0.0/2.2.0/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n#   Speed up compilation\nRUN set -i 's/# makejobs=-jn/makejobs=-j5/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n#   Disable objc, and obj-c++\nRUN sed -i 's/c,c++,objc,obj-c++/c,c++/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\nRUN cd /opt/toolchains/dc/kos/utils/dc-chain \\\n && sh ./download.sh \\\n && sh ./unpack.sh \\\n && make\nRUN cp /opt/toolchains/dc/kos/doc/environ.sh.sample /opt/toolchains/dc/kos/environ.sh\n#   Enable C++ functionality which is disabled by default\nRUN sed -i 's/-fno-rtti//' /opt/toolchains/dc/kos/environ_base.sh\nRUN sed -i 's/-fno-exceptions//' /opt/toolchains/dc/kos/environ_base.sh\nRUN sed -i 's/-fno-operator-names//' /opt/toolchains/dc/kos/environ_base.sh\nRUN set -i 's/-g / /' /opt/toolchains/dc/kos/environ_base.sh\n#   Remove default optimisations, so it can be controlled by CMake or whatever\nRUN sed -i 's/-O2//' /opt/toolchains/dc/kos/environ.sh\nRUN echo -e \"\\nsource /opt/toolchains/dc/kos/environ.sh\" >> /etc/bash.bashrc\nRUN ln -s /etc/bash.bashrc /root/.bashrc\nRUN source /etc/bash.bashrc ; echo ${KOS_BASE}\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos \\\n && make\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos-ports/libjpeg \\\n && make install clean\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos-ports/libpng \\\n && make install clean\nRUN . /etc/bash.bashrc ; cd /opt/toolchains/dc/kos/utils \\\n && mkdir makeip \\\n && cd makeip \\\n && curl http://www.boob.co.uk/files/makeip.tar.gz > makeip.tar.gz \\\n && tar -xf makeip.tar.gz \\\n && rm makeip.tar.gz \\\n && gcc makeip.c -o makeip\nRUN . /etc/bash.bashrc ; cd /opt/toolchains/dc/kos/utils \\\n && git clone https://github.com/Kazade/img4dc.git \\\n && cd img4dc \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make BUMP=9\n#   Add GLdc as a kos port\nRUN mkdir -p /opt/toolchains/dc/kos-ports/GLdc/files\nRUN echo $'\\nTARGET = libGLdc.a\\nOBJS = GL/draw.o GL/flush.o GL/framebuffer.o GL/immediate.o GL/lighting.o GL/state.o GL/texture.o GL/glu.o\\nOBJS += GL/matrix.o GL/fog.o GL/error.o GL/clip.o containers/stack.o containers/named_array.o containers/aligned_vector.o GL/profiler.o\\n\\nKOS_CFLAGS += -Iinclude -ffast-math -O3\\n\\ninclude ${KOS_PORTS}/scripts/lib.mk\\n' > /opt/toolchains/dc/kos-ports/GLdc/files/KOSMakefile.mk\nRUN echo $'\\nPORTNAME = GLdc\\nPORTVERSION = 1.0.0\\n\\nMAINTAINER = Luke Benstead <kazade@gmail.com>\\nLICENSE = BSD 2-Clause \"Simplified\" License\\nSHORT_DESC = Partial OpenGL 1.2 implementation for KOS\\n\\nDEPENDENCIES = \\n\\nGIT_REPOSITORY = https://github.com/Kazade/GLdc.git\\n\\nTARGET = libGLdc.a\\nINSTALLED_HDRS = include/gl.h include/glext.h include/glu.h include/glkos.h\\nHDR_COMDIR = GL\\n\\nKOS_DISTFILES = KOSMakefile.mk\\n\\ninclude ${KOS_PORTS}/scripts/kos-ports.mk\\n' > /opt/toolchains/dc/kos-ports/GLdc/Makefile\nRUN source /etc/bash.bashrc ; cd /opt/toolchains/dc/kos-ports/GLdc \\\n && BUMP=1 make install clean\n#   Now install dcload-ip\nRUN yum install -y elfutils-libelf-devel\nRUN . /etc/bash.bashrc ; git clone https://git.code.sf.net/p/cadcdev/dcload-ip /opt/toolchains/dc/dc-load-ip\nRUN . /etc/bash.bashrc ; cp /opt/toolchains/dc/dc-load-ip/example-src/dc4.x /opt/toolchains/dc/dc-load-ip/example-src/dc5.x\nRUN . /etc/bash.bashrc ; cd /opt/toolchains/dc/dc-load-ip \\\n && make\nRUN . /etc/bash.bashrc ; mkdir -p /opt/toolchains/dc/bin \\\n && cp /opt/toolchains/dc/dc-load-ip/host-src/tool/dc-tool /opt/toolchains/dc/bin\n","originalDockerfileUglifiedHash":"4c0b1efdbc816f5b7e51cf657232deaf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2aa9438603e3bc031d6e6d280c64c035fd4ae599.dockerfile"}