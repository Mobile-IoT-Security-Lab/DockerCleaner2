{"seed":494243574,"processedDockerfileHash":"c61f70e5dbecacbdeea8b56b8e77a63d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:0.9.22\nMAINTAINER Denys Zhdanov <denis.zhdanov@gmail.com>\nRUN apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends vim nginx python-dev python-flup python-pip python-ldap expect git memcached sqlite3 libffi-dev libcairo2 libcairo2-dev python-cairo python-rrdtool pkg-config nodejs -y \\\n && rm -rf /var/lib/apt/lists/*\n#   choose a timezone at build-time\n#   use `--build-arg CONTAINER_TIMEZONE=Europe/Brussels` in `docker build`\nARG CONTAINER_TIMEZONE\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN if [ ! -z \"${CONTAINER_TIMEZONE}\" ] ; then ln -sf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime \\\n && dpkg-reconfigure -f noninteractive tzdata ; fi\n#   fix python dependencies (LTS Django and newer memcached/txAMQP)\nRUN pip install pip==23.1 --upgrade \\\n && pip install django==1.8.18 python-memcached==1.53 txAMQP==0.6.2\nARG version=1.0.2\nARG whisper_version=${version}\nARG carbon_version=${version}\nARG graphite_version=${version}\nRUN echo \"Building Version: $version\"\nARG whisper_repo=https://github.com/graphite-project/whisper.git\nARG carbon_repo=https://github.com/graphite-project/carbon.git\nARG graphite_repo=https://github.com/graphite-project/graphite-web.git\nARG statsd_version=v0.8.0\nARG statsd_repo=https://github.com/etsy/statsd.git\n#   install whisper\nRUN git clone -b ${whisper_version} --depth 1 ${whisper_repo} /usr/local/src/whisper\nWORKDIR /usr/local/src/whisper\nRUN python ./setup.py install\n#   install carbon\nRUN git clone -b ${carbon_version} --depth 1 ${carbon_repo} /usr/local/src/carbon\nWORKDIR /usr/local/src/carbon\nRUN pip install -r requirements.txt \\\n && python ./setup.py install\n#   install graphite\nRUN git clone -b ${graphite_version} --depth 1 ${graphite_repo} /usr/local/src/graphite-web\nWORKDIR /usr/local/src/graphite-web\nRUN pip install -r requirements.txt \\\n && python ./setup.py install\n#   install statsd\nRUN git clone -b ${statsd_version} ${statsd_repo} /opt/statsd\n#   config graphite\nCOPY conf/opt/graphite/conf/*.conf /opt/graphite/conf/\nCOPY conf/opt/graphite/webapp/graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\n#   ADD conf/opt/graphite/webapp/graphite/app_settings.py /opt/graphite/webapp/graphite/app_settings.py\nWORKDIR /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite/ \\\n && PYTHONPATH=/opt/graphite/webapp django-admin.py collectstatic --noinput --settings=graphite.settings\n#   config statsd\nCOPY conf/opt/statsd/config.js /opt/statsd/\n#   config nginx\nRUN rm /etc/nginx/sites-enabled/default\nCOPY conf/etc/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY conf/etc/nginx/sites-enabled/graphite-statsd.conf /etc/nginx/sites-enabled/graphite-statsd.conf\n#   init django admin\nCOPY conf/usr/local/bin/django_admin_init.exp /usr/local/bin/django_admin_init.exp\nCOPY conf/usr/local/bin/manage.sh /usr/local/bin/manage.sh\nRUN chmod +x /usr/local/bin/manage.sh \\\n && /usr/local/bin/django_admin_init.exp\n#   logging support\nRUN mkdir -p /var/log/carbon /var/log/graphite /var/log/nginx\nCOPY conf/etc/logrotate.d/graphite-statsd /etc/logrotate.d/graphite-statsd\n#   daemons\nCOPY conf/etc/service/carbon/run /etc/service/carbon/run\nCOPY conf/etc/service/carbon-aggregator/run /etc/service/carbon-aggregator/run\nCOPY conf/etc/service/graphite/run /etc/service/graphite/run\nCOPY conf/etc/service/statsd/run /etc/service/statsd/run\nCOPY conf/etc/service/nginx/run /etc/service/nginx/run\n#   default conf setup\nCOPY conf /etc/graphite-statsd/conf\nCOPY conf/etc/my_init.d/01_conf_init.sh /etc/my_init.d/01_conf_init.sh\n#   cleanup\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   defaults\nEXPOSE 80/tcp 2003-2004 2023-2024 8125/tcp 8125/udp 8126/tcp\nVOLUME [\"/opt/graphite/conf\", \"/opt/graphite/storage\", \"/etc/nginx\", \"/opt/statsd\", \"/etc/logrotate.d\", \"/var/log\"]\nWORKDIR /\nENV HOME=\"/root\"\nENV STATSD_INTERFACE=\"udp\"\nCMD [\"/sbin/my_init\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:0.9.22\nMAINTAINER Denys Zhdanov <denis.zhdanov@gmail.com>\nRUN apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install vim nginx python-dev python-flup python-pip python-ldap expect git memcached sqlite3 libffi-dev libcairo2 libcairo2-dev python-cairo python-rrdtool pkg-config nodejs -y \\\n && rm -rf /var/lib/apt/lists/*\n#  choose a timezone at build-time\n#  use `--build-arg CONTAINER_TIMEZONE=Europe/Brussels` in `docker build`\nARG CONTAINER_TIMEZONE\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN if [ ! -z \"${CONTAINER_TIMEZONE}\" ] ; then ln -sf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime \\\n && dpkg-reconfigure -f noninteractive tzdata ; fi\n#  fix python dependencies (LTS Django and newer memcached/txAMQP)\nRUN pip install pip --upgrade \\\n && pip install django==1.8.18 python-memcached==1.53 txAMQP==0.6.2\nARG version=1.0.2\nARG whisper_version=${version}\nARG carbon_version=${version}\nARG graphite_version=${version}\nRUN echo \"Building Version: $version\"\nARG whisper_repo=https://github.com/graphite-project/whisper.git\nARG carbon_repo=https://github.com/graphite-project/carbon.git\nARG graphite_repo=https://github.com/graphite-project/graphite-web.git\nARG statsd_version=v0.8.0\nARG statsd_repo=https://github.com/etsy/statsd.git\n#  install whisper\nRUN git clone -b ${whisper_version} --depth 1 ${whisper_repo} /usr/local/src/whisper\nWORKDIR /usr/local/src/whisper\nRUN python ./setup.py install\n#  install carbon\nRUN git clone -b ${carbon_version} --depth 1 ${carbon_repo} /usr/local/src/carbon\nWORKDIR /usr/local/src/carbon\nRUN pip install -r requirements.txt \\\n && python ./setup.py install\n#  install graphite\nRUN git clone -b ${graphite_version} --depth 1 ${graphite_repo} /usr/local/src/graphite-web\nWORKDIR /usr/local/src/graphite-web\nRUN pip install -r requirements.txt \\\n && python ./setup.py install\n#  install statsd\nRUN git clone -b ${statsd_version} ${statsd_repo} /opt/statsd\n#  config graphite\nADD conf/opt/graphite/conf/*.conf /opt/graphite/conf/\nADD conf/opt/graphite/webapp/graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\n#  ADD conf/opt/graphite/webapp/graphite/app_settings.py /opt/graphite/webapp/graphite/app_settings.py\nWORKDIR /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite/ \\\n && PYTHONPATH=/opt/graphite/webapp django-admin.py collectstatic --noinput --settings=graphite.settings\n#  config statsd\nADD conf/opt/statsd/config.js /opt/statsd/\n#  config nginx\nRUN rm /etc/nginx/sites-enabled/default\nADD conf/etc/nginx/nginx.conf /etc/nginx/nginx.conf\nADD conf/etc/nginx/sites-enabled/graphite-statsd.conf /etc/nginx/sites-enabled/graphite-statsd.conf\n#  init django admin\nADD conf/usr/local/bin/django_admin_init.exp /usr/local/bin/django_admin_init.exp\nADD conf/usr/local/bin/manage.sh /usr/local/bin/manage.sh\nRUN chmod +x /usr/local/bin/manage.sh \\\n && /usr/local/bin/django_admin_init.exp\n#  logging support\nRUN mkdir -p /var/log/carbon /var/log/graphite /var/log/nginx\nADD conf/etc/logrotate.d/graphite-statsd /etc/logrotate.d/graphite-statsd\n#  daemons\nADD conf/etc/service/carbon/run /etc/service/carbon/run\nADD conf/etc/service/carbon-aggregator/run /etc/service/carbon-aggregator/run\nADD conf/etc/service/graphite/run /etc/service/graphite/run\nADD conf/etc/service/statsd/run /etc/service/statsd/run\nADD conf/etc/service/nginx/run /etc/service/nginx/run\n#  default conf setup\nADD conf /etc/graphite-statsd/conf\nADD conf/etc/my_init.d/01_conf_init.sh /etc/my_init.d/01_conf_init.sh\n#  cleanup\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  defaults\nEXPOSE 80/tcp 2003-2004 2023-2024 8125/tcp 8125/udp 8126/tcp\nVOLUME [\"/opt/graphite/conf\", \"/opt/graphite/storage\", \"/etc/nginx\", \"/opt/statsd\", \"/etc/logrotate.d\", \"/var/log\"]\nWORKDIR /\nENV HOME=\"/root\"\nENV STATSD_INTERFACE=\"udp\"\nCMD [\"/sbin/my_init\"]\n","injectedSmells":[],"originalDockerfileHash":"7449bf03d7a0e2f78baa74271d758ef6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:0.9.22\nMAINTAINER Denys Zhdanov <denis.zhdanov@gmail.com>\nRUN apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install vim nginx python-dev python-flup python-pip python-ldap expect git memcached sqlite3 libffi-dev libcairo2 libcairo2-dev python-cairo python-rrdtool pkg-config nodejs -y \\\n && rm -rf /var/lib/apt/lists/*\n#   choose a timezone at build-time\n#   use `--build-arg CONTAINER_TIMEZONE=Europe/Brussels` in `docker build`\nARG CONTAINER_TIMEZONE\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN if [ ! -z \"${CONTAINER_TIMEZONE}\" ] ; then ln -sf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime \\\n && dpkg-reconfigure -f noninteractive tzdata ; fi\n#   fix python dependencies (LTS Django and newer memcached/txAMQP)\nRUN pip install pip --upgrade \\\n && pip install django==1.8.18 python-memcached==1.53 txAMQP==0.6.2\nARG version=1.0.2\nARG whisper_version=${version}\nARG carbon_version=${version}\nARG graphite_version=${version}\nRUN echo \"Building Version: $version\"\nARG whisper_repo=https://github.com/graphite-project/whisper.git\nARG carbon_repo=https://github.com/graphite-project/carbon.git\nARG graphite_repo=https://github.com/graphite-project/graphite-web.git\nARG statsd_version=v0.8.0\nARG statsd_repo=https://github.com/etsy/statsd.git\n#   install whisper\nRUN git clone -b ${whisper_version} --depth 1 ${whisper_repo} /usr/local/src/whisper\nWORKDIR /usr/local/src/whisper\nRUN python ./setup.py install\n#   install carbon\nRUN git clone -b ${carbon_version} --depth 1 ${carbon_repo} /usr/local/src/carbon\nWORKDIR /usr/local/src/carbon\nRUN pip install -r requirements.txt \\\n && python ./setup.py install\n#   install graphite\nRUN git clone -b ${graphite_version} --depth 1 ${graphite_repo} /usr/local/src/graphite-web\nWORKDIR /usr/local/src/graphite-web\nRUN pip install -r requirements.txt \\\n && python ./setup.py install\n#   install statsd\nRUN git clone -b ${statsd_version} ${statsd_repo} /opt/statsd\n#   config graphite\nADD conf/opt/graphite/conf/*.conf /opt/graphite/conf/\nADD conf/opt/graphite/webapp/graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\n#   ADD conf/opt/graphite/webapp/graphite/app_settings.py /opt/graphite/webapp/graphite/app_settings.py\nWORKDIR /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite/ \\\n && PYTHONPATH=/opt/graphite/webapp django-admin.py collectstatic --noinput --settings=graphite.settings\n#   config statsd\nADD conf/opt/statsd/config.js /opt/statsd/\n#   config nginx\nRUN rm /etc/nginx/sites-enabled/default\nADD conf/etc/nginx/nginx.conf /etc/nginx/nginx.conf\nADD conf/etc/nginx/sites-enabled/graphite-statsd.conf /etc/nginx/sites-enabled/graphite-statsd.conf\n#   init django admin\nADD conf/usr/local/bin/django_admin_init.exp /usr/local/bin/django_admin_init.exp\nADD conf/usr/local/bin/manage.sh /usr/local/bin/manage.sh\nRUN chmod +x /usr/local/bin/manage.sh \\\n && /usr/local/bin/django_admin_init.exp\n#   logging support\nRUN mkdir -p /var/log/carbon /var/log/graphite /var/log/nginx\nADD conf/etc/logrotate.d/graphite-statsd /etc/logrotate.d/graphite-statsd\n#   daemons\nADD conf/etc/service/carbon/run /etc/service/carbon/run\nADD conf/etc/service/carbon-aggregator/run /etc/service/carbon-aggregator/run\nADD conf/etc/service/graphite/run /etc/service/graphite/run\nADD conf/etc/service/statsd/run /etc/service/statsd/run\nADD conf/etc/service/nginx/run /etc/service/nginx/run\n#   default conf setup\nADD conf /etc/graphite-statsd/conf\nADD conf/etc/my_init.d/01_conf_init.sh /etc/my_init.d/01_conf_init.sh\n#   cleanup\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   defaults\nEXPOSE 80/tcp 2003-2004 2023-2024 8125/tcp 8125/udp 8126/tcp\nVOLUME [\"/opt/graphite/conf\", \"/opt/graphite/storage\", \"/etc/nginx\", \"/opt/statsd\", \"/etc/logrotate.d\", \"/var/log\"]\nWORKDIR /\nENV HOME=\"/root\"\nENV STATSD_INTERFACE=\"udp\"\nCMD [\"/sbin/my_init\"]\n","originalDockerfileUglifiedHash":"688d7d0b983b51a322faca71ee39fd1d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7bf8b15fa843a99db3a4f7d1ffa7123c34b4ff8a.dockerfile"}