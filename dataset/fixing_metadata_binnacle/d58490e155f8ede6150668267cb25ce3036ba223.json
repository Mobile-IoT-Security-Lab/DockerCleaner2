{"seed":774350590,"processedDockerfileHash":"1342472e7c5b3c50c24a5f3499862c8e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\n#   Set version and github repo which you want to build from\nENV GITHUB_OWNER=\"druid-io\"\nENV DRUID_VERSION=\"master\"\nENV ZOOKEEPER_VERSION=\"3.4.12\"\n#   Java 8\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y \\\n && apt-add-repository -y ppa:webupd8team/java \\\n && apt-get purge --auto-remove -y software-properties-common \\\n && apt-get update \\\n && echo oracle-java-8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n && apt-get install --no-install-recommends oracle-java8-installer oracle-java8-set-default mysql-server=5.5.62-0ubuntu0.14.04.1 supervisor=3.0b2-1ubuntu0.1 git=1:1.9.1-1ubuntu0.10 python-pip=1.5.4-1ubuntu4 -y \\\n && apt-get clean \\\n && rm -rf /var/cache/oracle-jdk8-installer \\\n && rm -rf /var/lib/apt/lists/*\n#   Maven\nRUN wget -q -O - http://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz | tar -xzf - -C /usr/local \\\n && ln -s /usr/local/apache-maven-3.3.9 /usr/local/apache-maven \\\n && ln -s /usr/local/apache-maven/bin/mvn /usr/local/bin/mvn\n#   Zookeeper\nRUN wget -q -O - http://www.us.apache.org/dist/zookeeper/zookeeper-$ZOOKEEPER_VERSION/zookeeper-$ZOOKEEPER_VERSION.tar.gz | tar -xzf - -C /usr/local \\\n && cp /usr/local/zookeeper-$ZOOKEEPER_VERSION/conf/zoo_sample.cfg /usr/local/zookeeper-$ZOOKEEPER_VERSION/conf/zoo.cfg \\\n && ln -s /usr/local/zookeeper-$ZOOKEEPER_VERSION /usr/local/zookeeper\n#   Druid system user\nRUN adduser --system --group --no-create-home druid \\\n && mkdir -p /var/lib/druid \\\n && chown druid:druid /var/lib/druid\n#   Druid (from source)\nRUN mkdir -p /usr/local/druid/lib\n#   trigger rebuild only if branch changed\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document druid-version.json https://api.github.com/repos/$GITHUB_OWNER/druid/git/refs/heads/$DRUID_VERSION\nRUN git clone -q --branch $DRUID_VERSION --depth 1 https://github.com/$GITHUB_OWNER/druid.git /tmp/druid\nWORKDIR /tmp/druid\n#   package and install Druid locally\n#   use versions-maven-plugin 2.1 to work around https://jira.codehaus.org/browse/MVERSIONS-285\nRUN mvn -U -B org.codehaus.mojo:versions-maven-plugin:2.1:set -DgenerateBackupPoms=false -DnewVersion=$DRUID_VERSION \\\n && mvn -U -B install -DskipTests=true -Dmaven.javadoc.skip=true \\\n && cp services/target/druid-services-$DRUID_VERSION-selfcontained.jar /usr/local/druid/lib \\\n && cp -r distribution/target/extensions /usr/local/druid/ \\\n && cp -r distribution/target/hadoop-dependencies /usr/local/druid/ \\\n && rm -rf /tmp/* /var/tmp/* /usr/local/apache-maven-3.3.9 /usr/local/apache-maven /root/.m2\nWORKDIR /usr/local/druid\nRUN java -cp \"lib/*\" -Ddruid.extensions.directory=\"extensions\" -Ddruid.extensions.hadoopDependenciesDir=\"hadoop-dependencies\" io.druid.cli.Main tools pull-deps --no-default-hadoop -c \"org.apache.parquet:parquet-avro:1.9.0\"\nWORKDIR /\n#   Setup metadata store\nRUN /etc/init.d/mysql start \\\n && mysql -u root -e \"GRANT ALL ON druid.* TO 'druid'@'localhost' IDENTIFIED BY 'diurd'; CREATE database druid CHARACTER SET utf8;\" \\\n && java -cp /usr/local/druid/lib/druid-services-*-selfcontained.jar -Ddruid.extensions.directory=/usr/local/druid/extensions -Ddruid.extensions.loadList=[\"mysql-metadata-storage\",\"druid-kafka-indexing-service\"] -Ddruid.metadata.storage.type=mysql io.druid.cli.Main tools metadata-init --connectURI=\"jdbc:mysql://localhost:3306/druid\" --user=druid --password=diurd \\\n && /etc/init.d/mysql stop\n#   Setup supervisord\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   Expose ports:\n#   - 8081: HTTP (coordinator)\n#   - 8082: HTTP (broker)\n#   - 8083: HTTP (historical)\n#   - 8090: HTTP (overlord)\n#   - 3306: MySQL\n#   - 2181 2888 3888: ZooKeeper\nEXPOSE 8081/tcp\nEXPOSE 8082/tcp\nEXPOSE 8083/tcp\nEXPOSE 8090/tcp\nEXPOSE 3306/tcp\nEXPOSE 2181/tcp 2888/tcp 3888/tcp\nWORKDIR /var/lib/druid\nCMD export HOSTIP=\"$( resolveip -s $HOSTNAME ;)\" \\\n && exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\n#  Set version and github repo which you want to build from\nENV GITHUB_OWNER=\"druid-io\"\nENV DRUID_VERSION=\"master\"\nENV ZOOKEEPER_VERSION=\"3.4.12\"\n#  Java 8\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && apt-add-repository -y ppa:webupd8team/java \\\n && apt-get purge --auto-remove -y software-properties-common \\\n && apt-get update \\\n && echo oracle-java-8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n && apt-get install oracle-java8-installer oracle-java8-set-default mysql-server supervisor git python-pip -y \\\n && apt-get clean \\\n && rm -rf /var/cache/oracle-jdk8-installer \\\n && rm -rf /var/lib/apt/lists/*\n#  Maven\nRUN wget -q -O - http://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz | tar -xzf - -C /usr/local \\\n && ln -s /usr/local/apache-maven-3.3.9 /usr/local/apache-maven \\\n && ln -s /usr/local/apache-maven/bin/mvn /usr/local/bin/mvn\n#  Zookeeper\nRUN wget -q -O - http://www.us.apache.org/dist/zookeeper/zookeeper-$ZOOKEEPER_VERSION/zookeeper-$ZOOKEEPER_VERSION.tar.gz | tar -xzf - -C /usr/local \\\n && cp /usr/local/zookeeper-$ZOOKEEPER_VERSION/conf/zoo_sample.cfg /usr/local/zookeeper-$ZOOKEEPER_VERSION/conf/zoo.cfg \\\n && ln -s /usr/local/zookeeper-$ZOOKEEPER_VERSION /usr/local/zookeeper\n#  Druid system user\nRUN adduser --system --group --no-create-home druid \\\n && mkdir -p /var/lib/druid \\\n && chown druid:druid /var/lib/druid\n#  Druid (from source)\nRUN mkdir -p /usr/local/druid/lib\n#  trigger rebuild only if branch changed\nADD https://api.github.com/repos/$GITHUB_OWNER/druid/git/refs/heads/$DRUID_VERSION druid-version.json\nRUN git clone -q --branch $DRUID_VERSION --depth 1 https://github.com/$GITHUB_OWNER/druid.git /tmp/druid\nWORKDIR /tmp/druid\n#  package and install Druid locally\n#  use versions-maven-plugin 2.1 to work around https://jira.codehaus.org/browse/MVERSIONS-285\nRUN mvn -U -B org.codehaus.mojo:versions-maven-plugin:2.1:set -DgenerateBackupPoms=false -DnewVersion=$DRUID_VERSION \\\n && mvn -U -B install -DskipTests=true -Dmaven.javadoc.skip=true \\\n && cp services/target/druid-services-$DRUID_VERSION-selfcontained.jar /usr/local/druid/lib \\\n && cp -r distribution/target/extensions /usr/local/druid/ \\\n && cp -r distribution/target/hadoop-dependencies /usr/local/druid/ \\\n && rm -rf /tmp/* /var/tmp/* /usr/local/apache-maven-3.3.9 /usr/local/apache-maven /root/.m2\nWORKDIR /usr/local/druid\nRUN java -cp \"lib/*\" -Ddruid.extensions.directory=\"extensions\" -Ddruid.extensions.hadoopDependenciesDir=\"hadoop-dependencies\" io.druid.cli.Main tools pull-deps --no-default-hadoop -c \"org.apache.parquet:parquet-avro:1.9.0\"\nWORKDIR /\n#  Setup metadata store\nRUN /etc/init.d/mysql start \\\n && mysql -u root -e \"GRANT ALL ON druid.* TO 'druid'@'localhost' IDENTIFIED BY 'diurd'; CREATE database druid CHARACTER SET utf8;\" \\\n && java -cp /usr/local/druid/lib/druid-services-*-selfcontained.jar -Ddruid.extensions.directory=/usr/local/druid/extensions -Ddruid.extensions.loadList=[\"mysql-metadata-storage\",\"druid-kafka-indexing-service\"] -Ddruid.metadata.storage.type=mysql io.druid.cli.Main tools metadata-init --connectURI=\"jdbc:mysql://localhost:3306/druid\" --user=druid --password=diurd \\\n && /etc/init.d/mysql stop\n#  Setup supervisord\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  Expose ports:\n#  - 8081: HTTP (coordinator)\n#  - 8082: HTTP (broker)\n#  - 8083: HTTP (historical)\n#  - 8090: HTTP (overlord)\n#  - 3306: MySQL\n#  - 2181 2888 3888: ZooKeeper\nEXPOSE 8081/tcp\nEXPOSE 8082/tcp\nEXPOSE 8083/tcp\nEXPOSE 8090/tcp\nEXPOSE 3306/tcp\nEXPOSE 2181/tcp 2888/tcp 3888/tcp\nWORKDIR /var/lib/druid\nCMD export HOSTIP=\"$( resolveip -s $HOSTNAME ;)\" \\\n && exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf\n","injectedSmells":[],"originalDockerfileHash":"f14951c395a00150cf3a0f632e27a6fe","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\n#   Set version and github repo which you want to build from\nENV GITHUB_OWNER=\"druid-io\"\nENV DRUID_VERSION=\"master\"\nENV ZOOKEEPER_VERSION=\"3.4.12\"\n#   Java 8\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && apt-add-repository -y ppa:webupd8team/java \\\n && apt-get purge --auto-remove -y software-properties-common \\\n && apt-get update \\\n && echo oracle-java-8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n && apt-get install oracle-java8-installer oracle-java8-set-default mysql-server supervisor git python-pip -y \\\n && apt-get clean \\\n && rm -rf /var/cache/oracle-jdk8-installer \\\n && rm -rf /var/lib/apt/lists/*\n#   Maven\nRUN wget -q -O - http://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz | tar -xzf - -C /usr/local \\\n && ln -s /usr/local/apache-maven-3.3.9 /usr/local/apache-maven \\\n && ln -s /usr/local/apache-maven/bin/mvn /usr/local/bin/mvn\n#   Zookeeper\nRUN wget -q -O - http://www.us.apache.org/dist/zookeeper/zookeeper-$ZOOKEEPER_VERSION/zookeeper-$ZOOKEEPER_VERSION.tar.gz | tar -xzf - -C /usr/local \\\n && cp /usr/local/zookeeper-$ZOOKEEPER_VERSION/conf/zoo_sample.cfg /usr/local/zookeeper-$ZOOKEEPER_VERSION/conf/zoo.cfg \\\n && ln -s /usr/local/zookeeper-$ZOOKEEPER_VERSION /usr/local/zookeeper\n#   Druid system user\nRUN adduser --system --group --no-create-home druid \\\n && mkdir -p /var/lib/druid \\\n && chown druid:druid /var/lib/druid\n#   Druid (from source)\nRUN mkdir -p /usr/local/druid/lib\n#   trigger rebuild only if branch changed\nADD https://api.github.com/repos/$GITHUB_OWNER/druid/git/refs/heads/$DRUID_VERSION druid-version.json\nRUN git clone -q --branch $DRUID_VERSION --depth 1 https://github.com/$GITHUB_OWNER/druid.git /tmp/druid\nWORKDIR /tmp/druid\n#   package and install Druid locally\n#   use versions-maven-plugin 2.1 to work around https://jira.codehaus.org/browse/MVERSIONS-285\nRUN mvn -U -B org.codehaus.mojo:versions-maven-plugin:2.1:set -DgenerateBackupPoms=false -DnewVersion=$DRUID_VERSION \\\n && mvn -U -B install -DskipTests=true -Dmaven.javadoc.skip=true \\\n && cp services/target/druid-services-$DRUID_VERSION-selfcontained.jar /usr/local/druid/lib \\\n && cp -r distribution/target/extensions /usr/local/druid/ \\\n && cp -r distribution/target/hadoop-dependencies /usr/local/druid/ \\\n && rm -rf /tmp/* /var/tmp/* /usr/local/apache-maven-3.3.9 /usr/local/apache-maven /root/.m2\nWORKDIR /usr/local/druid\nRUN java -cp \"lib/*\" -Ddruid.extensions.directory=\"extensions\" -Ddruid.extensions.hadoopDependenciesDir=\"hadoop-dependencies\" io.druid.cli.Main tools pull-deps --no-default-hadoop -c \"org.apache.parquet:parquet-avro:1.9.0\"\nWORKDIR /\n#   Setup metadata store\nRUN /etc/init.d/mysql start \\\n && mysql -u root -e \"GRANT ALL ON druid.* TO 'druid'@'localhost' IDENTIFIED BY 'diurd'; CREATE database druid CHARACTER SET utf8;\" \\\n && java -cp /usr/local/druid/lib/druid-services-*-selfcontained.jar -Ddruid.extensions.directory=/usr/local/druid/extensions -Ddruid.extensions.loadList=[\"mysql-metadata-storage\",\"druid-kafka-indexing-service\"] -Ddruid.metadata.storage.type=mysql io.druid.cli.Main tools metadata-init --connectURI=\"jdbc:mysql://localhost:3306/druid\" --user=druid --password=diurd \\\n && /etc/init.d/mysql stop\n#   Setup supervisord\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   Expose ports:\n#   - 8081: HTTP (coordinator)\n#   - 8082: HTTP (broker)\n#   - 8083: HTTP (historical)\n#   - 8090: HTTP (overlord)\n#   - 3306: MySQL\n#   - 2181 2888 3888: ZooKeeper\nEXPOSE 8081/tcp\nEXPOSE 8082/tcp\nEXPOSE 8083/tcp\nEXPOSE 8090/tcp\nEXPOSE 3306/tcp\nEXPOSE 2181/tcp 2888/tcp 3888/tcp\nWORKDIR /var/lib/druid\nCMD export HOSTIP=\"$( resolveip -s $HOSTNAME ;)\" \\\n && exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf\n","originalDockerfileUglifiedHash":"f8a266d1c09e271159d56ac3c24051ab","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d58490e155f8ede6150668267cb25ce3036ba223.dockerfile"}