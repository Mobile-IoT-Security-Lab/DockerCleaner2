{"seed":4167196531,"processedDockerfileHash":"398b676492d514881f9330369e4aebb1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Pull base image.\nFROM php:7.0.12-apache\nCOPY config/php.ini /usr/local/etc/php/\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install --no-install-recommends wget=1.21.3-1ubuntu1 --fix-missing -y\nRUN echo \"deb http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list\nRUN cd /tmp \\\n && wget https://www.dotdeb.org/dotdeb.gpg \\\n && apt-key add dotdeb.gpg\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install --no-install-recommends ruby-dev=1:3.1 rubygems imagemagick=8:6.9.11.60+dfsg-1.6 graphviz=2.42.2-7build3 sudo=1.9.13p1-1ubuntu2 git=1:2.39.2-1ubuntu1 vim=2:9.0.1000-4ubuntu2 php7.0-dev memcached=1.6.18-1 libmemcached-tools=1.1.4-1 libmemcached-dev=1.1.4-1 libpng12-dev libjpeg62-turbo-dev libmcrypt-dev=2.5.8-7 libxml2-dev=2.9.14+dfsg-1.1build2 libxslt1-dev=1.1.35-1 mysql-client=8.0.32-0ubuntu4 php5-mysqlnd zip=3.0-13 wget=1.21.3-1ubuntu1 linux-libc-dev=6.2.0-18.18 libyaml-dev=0.2.5-1 apt-transport-https=2.6.0 zlib1g-dev=1:1.2.13.dfsg-1ubuntu4 libicu-dev=72.1-3ubuntu1 libpq-dev=15.2-1 bash-completion=1:2.11-6ubuntu1 htop=3.2.2-1 --fix-missing -y\n#   postgresql-client-9.5\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends postgresql-client-9.5 -y\n#   Install memcached for PHP 7\nRUN cd /tmp \\\n && git clone https://github.com/php-memcached-dev/php-memcached.git\nRUN cd /tmp/php-memcached \\\n && sudo git checkout php7 \\\n && phpize \\\n && ./configure --disable-memcached-sasl \\\n && make \\\n && make install\nRUN touch /usr/local/etc/php/conf.d/memcached.ini \\\n && echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/memcached.so\" >> /usr/local/etc/php/conf.d/memcached.ini\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd mbstring mcrypt zip soap pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp\n#   Create new web user for apache and grant sudo without password\nRUN useradd web -d /var/www -g www-data -s /bin/bash\nRUN usermod -aG sudo web\nRUN echo 'web ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN pecl install yaml-2.0.0 \\\n && echo \"extension=yaml.so\" > /usr/local/etc/php/conf.d/ext-yaml.ini\nCOPY core/memcached.conf /etc/memcached.conf\n#   SASS and Compass installation\nRUN gem install compass --version 1.0.3\n#   Installation node.js\nRUN curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash -\nRUN DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install -y nodejs\n#   Installation of LESS\nRUN npm update -g npm \\\n && npm install less@4.1.3 -g \\\n && npm install less-plugin-clean-css@1.5.1 -g\n#   Installation of Grunt\nRUN npm install grunt-cli@1.4.3 -g\n#   Installation of Gulp\nRUN npm install gulp@4.0.2 -g\n#   Installation of Bower\nRUN npm install bower@1.8.14 -g\n#   Installation of Composer\nRUN cd /usr/src \\\n && curl -sS http://getcomposer.org/installer | php\nRUN cd /usr/src \\\n && mv composer.phar /usr/bin/composer\n#   Installation of drush\nRUN git clone https://github.com/drush-ops/drush.git /usr/local/src/drush\nRUN cd /usr/local/src/drush \\\n && git checkout 8.1.5\nRUN ln -s /usr/local/src/drush/drush /usr/bin/drush\nRUN cd /usr/local/src/drush \\\n && composer update \\\n && composer install\n#   Install xdebug. We need at least 2.4 version to have PHP 7 support.\nRUN cd /tmp/ \\\n && wget http://xdebug.org/files/xdebug-2.4.0.tgz \\\n && tar -xvzf xdebug-2.4.0.tgz \\\n && cd xdebug-2.4.0/ \\\n && phpize \\\n && ./configure --enable-xdebug --with-php-config=/usr/local/bin/php-config \\\n && make \\\n && make install\nRUN cd /tmp/xdebug-2.4.0 \\\n && cp modules/xdebug.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/\nRUN echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20151012/xdebug.so' >> /usr/local/etc/php/php.ini\nRUN touch /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_connect_back=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_log=/tmp/php5-xdebug.log >> /usr/local/etc/php/conf.d/xdebug.ini\nRUN rm -rf /var/www/html \\\n && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n && chown -R web:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n#   Installation of PHP_CodeSniffer with Drupal coding standards.\n#   See https://www.drupal.org/node/1419988#coder-composer\nRUN composer global require drupal/coder\nRUN ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin\nRUN ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin\nRUN phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\n#   # Installation of Symfony console autocomplete\n#   RUN composer global require bamarni/symfony-console-autocomplete\n#   installation of ssmtp\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp \\\n && rm -r /var/lib/apt/lists/*\nCOPY core/ssmtp.conf /etc/ssmtp/ssmtp.conf\nCOPY core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\nCOPY config/apache2.conf /etc/apache2\nCOPY core/envvars /etc/apache2\nCOPY core/other-vhosts-access-log.conf /etc/apache2/conf-enabled/\nRUN rm /etc/apache2/sites-enabled/000-default.conf\n#   Installation of Opcode cache\nRUN (echo \"opcache.memory_consumption=128\" ;echo \"opcache.interned_strings_buffer=8\" ;echo \"opcache.max_accelerated_files=4000\" ;echo \"opcache.revalidate_freq=5\" ;echo \"opcache.fast_shutdown=1\" ;echo \"opcache.enable_cli=1\" ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires \\\n && service apache2 restart\n#   Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\n#   Our apache volume\nVOLUME /var/www/html\n#   create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R web:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n#   Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#   Expose 80 for apache, 9000 for xdebug\nEXPOSE 80/tcp 9000/tcp\n#   Add web and root .bashrc config\n#   When you \"docker exec -it\" into the container, you will be switched as web user and placed in /var/www/html\nRUN echo \"exec su - web\" > /root/.bashrc \\\n && echo \". .profile\" > /var/www/.bashrc \\\n && echo \"alias ll='ls -al'\" > /var/www/.profile \\\n && echo \"cd /var/www/html\" >> /var/www/.profile\n#   Install symfony autocomplete for web user\nRUN sudo -u web composer global require bamarni/symfony-console-autocomplete\nRUN echo \"export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/var/www/.composer/vendor/bamarni/symfony-console-autocomplete/\" >> /var/www/.profile\nRUN echo 'eval \"$(symfony-autocomplete)\"' >> /var/www/.profile\n#   Set and run a custom entrypoint\nCOPY core/docker-entrypoint.sh /\nRUN chmod 777 /docker-entrypoint.sh \\\n && chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  Pull base image.\nFROM php:7.0.12-apache\nCOPY config/php.ini /usr/local/etc/php/\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install wget --fix-missing -y\nRUN echo \"deb http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list\nRUN cd /tmp \\\n && wget https://www.dotdeb.org/dotdeb.gpg \\\n && apt-key add dotdeb.gpg\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install ruby-dev rubygems imagemagick graphviz sudo git vim php7.0-dev memcached libmemcached-tools libmemcached-dev libpng12-dev libjpeg62-turbo-dev libmcrypt-dev libxml2-dev libxslt1-dev mysql-client php5-mysqlnd zip wget linux-libc-dev libyaml-dev apt-transport-https zlib1g-dev libicu-dev libpq-dev bash-completion htop --fix-missing -y\n#  postgresql-client-9.5\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install postgresql-client-9.5 -y\n#  Install memcached for PHP 7\nRUN cd /tmp \\\n && git clone https://github.com/php-memcached-dev/php-memcached.git\nRUN cd /tmp/php-memcached \\\n && sudo git checkout php7 \\\n && phpize \\\n && ./configure --disable-memcached-sasl \\\n && make \\\n && make install\nRUN touch /usr/local/etc/php/conf.d/memcached.ini \\\n && echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/memcached.so\" >> /usr/local/etc/php/conf.d/memcached.ini\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd mbstring mcrypt zip soap pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp\n#  Create new web user for apache and grant sudo without password\nRUN useradd web -d /var/www -g www-data -s /bin/bash\nRUN usermod -aG sudo web\nRUN echo 'web ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN pecl install yaml-2.0.0 \\\n && echo \"extension=yaml.so\" > /usr/local/etc/php/conf.d/ext-yaml.ini\nCOPY core/memcached.conf /etc/memcached.conf\n#  SASS and Compass installation\nRUN gem install compass\n#  Installation node.js\nRUN curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash -\nRUN DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install -y nodejs\n#  Installation of LESS\nRUN npm update -g npm \\\n && npm install less -g \\\n && npm install less-plugin-clean-css -g\n#  Installation of Grunt\nRUN npm install grunt-cli -g\n#  Installation of Gulp\nRUN npm install gulp -g\n#  Installation of Bower\nRUN npm install bower -g\n#  Installation of Composer\nRUN cd /usr/src \\\n && curl -sS http://getcomposer.org/installer | php\nRUN cd /usr/src \\\n && mv composer.phar /usr/bin/composer\n#  Installation of drush\nRUN git clone https://github.com/drush-ops/drush.git /usr/local/src/drush\nRUN cd /usr/local/src/drush \\\n && git checkout 8.1.5\nRUN ln -s /usr/local/src/drush/drush /usr/bin/drush\nRUN cd /usr/local/src/drush \\\n && composer update \\\n && composer install\n#  Install xdebug. We need at least 2.4 version to have PHP 7 support.\nRUN cd /tmp/ \\\n && wget http://xdebug.org/files/xdebug-2.4.0.tgz \\\n && tar -xvzf xdebug-2.4.0.tgz \\\n && cd xdebug-2.4.0/ \\\n && phpize \\\n && ./configure --enable-xdebug --with-php-config=/usr/local/bin/php-config \\\n && make \\\n && make install\nRUN cd /tmp/xdebug-2.4.0 \\\n && cp modules/xdebug.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/\nRUN echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20151012/xdebug.so' >> /usr/local/etc/php/php.ini\nRUN touch /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_connect_back=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_log=/tmp/php5-xdebug.log >> /usr/local/etc/php/conf.d/xdebug.ini\nRUN rm -rf /var/www/html \\\n && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n && chown -R web:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n#  Installation of PHP_CodeSniffer with Drupal coding standards.\n#  See https://www.drupal.org/node/1419988#coder-composer\nRUN composer global require drupal/coder\nRUN ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin\nRUN ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin\nRUN phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\n#  # Installation of Symfony console autocomplete\n#  RUN composer global require bamarni/symfony-console-autocomplete\n#  installation of ssmtp\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp \\\n && rm -r /var/lib/apt/lists/*\nADD core/ssmtp.conf /etc/ssmtp/ssmtp.conf\nADD core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\nCOPY config/apache2.conf /etc/apache2\nCOPY core/envvars /etc/apache2\nCOPY core/other-vhosts-access-log.conf /etc/apache2/conf-enabled/\nRUN rm /etc/apache2/sites-enabled/000-default.conf\n#  Installation of Opcode cache\nRUN (echo \"opcache.memory_consumption=128\" ;echo \"opcache.interned_strings_buffer=8\" ;echo \"opcache.max_accelerated_files=4000\" ;echo \"opcache.revalidate_freq=5\" ;echo \"opcache.fast_shutdown=1\" ;echo \"opcache.enable_cli=1\" ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires \\\n && service apache2 restart\n#  Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\n#  Our apache volume\nVOLUME /var/www/html\n#  create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R web:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n#  Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#  Expose 80 for apache, 9000 for xdebug\nEXPOSE 80/tcp 9000/tcp\n#  Add web and root .bashrc config\n#  When you \"docker exec -it\" into the container, you will be switched as web user and placed in /var/www/html\nRUN echo \"exec su - web\" > /root/.bashrc \\\n && echo \". .profile\" > /var/www/.bashrc \\\n && echo \"alias ll='ls -al'\" > /var/www/.profile \\\n && echo \"cd /var/www/html\" >> /var/www/.profile\n#  Install symfony autocomplete for web user\nRUN sudo -u web composer global require bamarni/symfony-console-autocomplete\nRUN echo \"export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/var/www/.composer/vendor/bamarni/symfony-console-autocomplete/\" >> /var/www/.profile\nRUN echo 'eval \"$(symfony-autocomplete)\"' >> /var/www/.profile\n#  Set and run a custom entrypoint\nCOPY core/docker-entrypoint.sh /\nRUN chmod 777 /docker-entrypoint.sh \\\n && chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"0f17793e7497edc9bc0d33bbf8625f73","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Pull base image.\nFROM php:7.0.12-apache\nCOPY config/php.ini /usr/local/etc/php/\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install wget --fix-missing -y\nRUN echo \"deb http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list\nRUN cd /tmp \\\n && wget https://www.dotdeb.org/dotdeb.gpg \\\n && apt-key add dotdeb.gpg\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install ruby-dev rubygems imagemagick graphviz sudo git vim php7.0-dev memcached libmemcached-tools libmemcached-dev libpng12-dev libjpeg62-turbo-dev libmcrypt-dev libxml2-dev libxslt1-dev mysql-client php5-mysqlnd zip wget linux-libc-dev libyaml-dev apt-transport-https zlib1g-dev libicu-dev libpq-dev bash-completion htop --fix-missing -y\n#   postgresql-client-9.5\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install postgresql-client-9.5 -y\n#   Install memcached for PHP 7\nRUN cd /tmp \\\n && git clone https://github.com/php-memcached-dev/php-memcached.git\nRUN cd /tmp/php-memcached \\\n && sudo git checkout php7 \\\n && phpize \\\n && ./configure --disable-memcached-sasl \\\n && make \\\n && make install\nRUN touch /usr/local/etc/php/conf.d/memcached.ini \\\n && echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/memcached.so\" >> /usr/local/etc/php/conf.d/memcached.ini\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd mbstring mcrypt zip soap pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp\n#   Create new web user for apache and grant sudo without password\nRUN useradd web -d /var/www -g www-data -s /bin/bash\nRUN usermod -aG sudo web\nRUN echo 'web ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN pecl install yaml-2.0.0 \\\n && echo \"extension=yaml.so\" > /usr/local/etc/php/conf.d/ext-yaml.ini\nCOPY core/memcached.conf /etc/memcached.conf\n#   SASS and Compass installation\nRUN gem install compass\n#   Installation node.js\nRUN curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash -\nRUN DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install -y nodejs\n#   Installation of LESS\nRUN npm update -g npm \\\n && npm install less -g \\\n && npm install less-plugin-clean-css -g\n#   Installation of Grunt\nRUN npm install grunt-cli -g\n#   Installation of Gulp\nRUN npm install gulp -g\n#   Installation of Bower\nRUN npm install bower -g\n#   Installation of Composer\nRUN cd /usr/src \\\n && curl -sS http://getcomposer.org/installer | php\nRUN cd /usr/src \\\n && mv composer.phar /usr/bin/composer\n#   Installation of drush\nRUN git clone https://github.com/drush-ops/drush.git /usr/local/src/drush\nRUN cd /usr/local/src/drush \\\n && git checkout 8.1.5\nRUN ln -s /usr/local/src/drush/drush /usr/bin/drush\nRUN cd /usr/local/src/drush \\\n && composer update \\\n && composer install\n#   Install xdebug. We need at least 2.4 version to have PHP 7 support.\nRUN cd /tmp/ \\\n && wget http://xdebug.org/files/xdebug-2.4.0.tgz \\\n && tar -xvzf xdebug-2.4.0.tgz \\\n && cd xdebug-2.4.0/ \\\n && phpize \\\n && ./configure --enable-xdebug --with-php-config=/usr/local/bin/php-config \\\n && make \\\n && make install\nRUN cd /tmp/xdebug-2.4.0 \\\n && cp modules/xdebug.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/\nRUN echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20151012/xdebug.so' >> /usr/local/etc/php/php.ini\nRUN touch /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_connect_back=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_log=/tmp/php5-xdebug.log >> /usr/local/etc/php/conf.d/xdebug.ini\nRUN rm -rf /var/www/html \\\n && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n && chown -R web:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n#   Installation of PHP_CodeSniffer with Drupal coding standards.\n#   See https://www.drupal.org/node/1419988#coder-composer\nRUN composer global require drupal/coder\nRUN ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin\nRUN ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin\nRUN phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\n#   # Installation of Symfony console autocomplete\n#   RUN composer global require bamarni/symfony-console-autocomplete\n#   installation of ssmtp\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp \\\n && rm -r /var/lib/apt/lists/*\nADD core/ssmtp.conf /etc/ssmtp/ssmtp.conf\nADD core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\nCOPY config/apache2.conf /etc/apache2\nCOPY core/envvars /etc/apache2\nCOPY core/other-vhosts-access-log.conf /etc/apache2/conf-enabled/\nRUN rm /etc/apache2/sites-enabled/000-default.conf\n#   Installation of Opcode cache\nRUN (echo \"opcache.memory_consumption=128\" ;echo \"opcache.interned_strings_buffer=8\" ;echo \"opcache.max_accelerated_files=4000\" ;echo \"opcache.revalidate_freq=5\" ;echo \"opcache.fast_shutdown=1\" ;echo \"opcache.enable_cli=1\" ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires \\\n && service apache2 restart\n#   Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\n#   Our apache volume\nVOLUME /var/www/html\n#   create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R web:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n#   Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#   Expose 80 for apache, 9000 for xdebug\nEXPOSE 80/tcp 9000/tcp\n#   Add web and root .bashrc config\n#   When you \"docker exec -it\" into the container, you will be switched as web user and placed in /var/www/html\nRUN echo \"exec su - web\" > /root/.bashrc \\\n && echo \". .profile\" > /var/www/.bashrc \\\n && echo \"alias ll='ls -al'\" > /var/www/.profile \\\n && echo \"cd /var/www/html\" >> /var/www/.profile\n#   Install symfony autocomplete for web user\nRUN sudo -u web composer global require bamarni/symfony-console-autocomplete\nRUN echo \"export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/var/www/.composer/vendor/bamarni/symfony-console-autocomplete/\" >> /var/www/.profile\nRUN echo 'eval \"$(symfony-autocomplete)\"' >> /var/www/.profile\n#   Set and run a custom entrypoint\nCOPY core/docker-entrypoint.sh /\nRUN chmod 777 /docker-entrypoint.sh \\\n && chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"69e45dee59386d902c90557e44f4067b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d805e3ed3274141d2ac06bcaf756be46be42302d.dockerfile"}