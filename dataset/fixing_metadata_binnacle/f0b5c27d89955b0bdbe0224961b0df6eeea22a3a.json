{"seed":1353049514,"processedDockerfileHash":"232afd30fc22cf410202fcf02b12766b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2018 Google LLC\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       https://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM alpine:3.8 AS builder\nRUN apk add bash=4.4.19-r1 git=2.18.4-r0 go=1.10.8-r0 make=4.2.1-r2 musl-dev=1.1.19-r11 --no-cache\nENV APP_BASE_DIR=\"/cftk\"\nRUN mkdir -p $APP_BASE_DIR/home \\\n && mkdir -p $APP_BASE_DIR/bin \\\n && mkdir -p $APP_BASE_DIR/workdir\nENV GOPATH=\"/root/go\"\nARG BUILD_PROVIDER_GOOGLE_VERSION\nENV PROVIDER_GOOGLE_VERSION=\"${BUILD_PROVIDER_GOOGLE_VERSION}\"\nRUN mkdir -p $APP_BASE_DIR/home/.terraform.d/plugins \\\n && mkdir -p $GOPATH/src/github.com/terraform-providers \\\n && cd $GOPATH/src/github.com/terraform-providers \\\n && git clone https://github.com/terraform-providers/terraform-provider-google.git \\\n && cd terraform-provider-google \\\n && git fetch --all --tags --prune \\\n && git checkout tags/v${PROVIDER_GOOGLE_VERSION} -b v${PROVIDER_GOOGLE_VERSION} \\\n && make fmt \\\n && make build \\\n && mv $GOPATH/bin/terraform-provider-google $APP_BASE_DIR/home/.terraform.d/plugins/terraform-provider-google_v${PROVIDER_GOOGLE_VERSION}\nFROM alpine:3.8\nRUN apk add bash=4.4.19-r1 curl=7.61.1-r3 git=2.18.4-r0 jq=1.6_rc1-r1 make=4.2.1-r2 python2=2.7.15-r3 --no-cache\nENV APP_BASE_DIR=\"/cftk\"\nCOPY --from=builder $APP_BASE_DIR $APP_BASE_DIR\nENV HOME=\"$APP_BASE_DIR/home\"\nENV PATH=\"$APP_BASE_DIR/bin:$APP_BASE_DIR/google-cloud-sdk/bin:$PATH\"\nENV GOOGLE_APPLICATION_CREDENTIALS=\"$CREDENTIALS_PATH\" \\\n    CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=\"$CREDENTIALS_PATH\"\n#   Fix base64 inconsistency\nSHELL [\"/bin/bash\", \"-c\"]\nRUN echo 'base64() { if [[ $@ == \"--decode\" ]]; then command base64 -d | more; else command base64 \"$@\"; fi; }' >> $APP_BASE_DIR/home/.bashrc\nARG BUILD_CLOUD_SDK_VERSION\nENV CLOUD_SDK_VERSION=\"${BUILD_CLOUD_SDK_VERSION}\"\nRUN cd cftk \\\n && curl -LO https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && ln -s /lib /lib64 \\\n && gcloud config set core/disable_usage_reporting true \\\n && gcloud config set component_manager/disable_update_check true \\\n && gcloud config set metrics/environment github_docker_image \\\n && gcloud --version\nARG BUILD_TERRAFORM_VERSION\nENV TERRAFORM_VERSION=\"${BUILD_TERRAFORM_VERSION}\"\nRUN curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && mv terraform $APP_BASE_DIR/bin \\\n && terraform --version\nARG BUILD_PROVIDER_GSUITE_VERSION\nENV PROVIDER_GSUITE_VERSION=\"${BUILD_PROVIDER_GSUITE_VERSION}\"\nRUN curl -LO https://github.com/DeviaVir/terraform-provider-gsuite/releases/download/v${PROVIDER_GSUITE_VERSION}/terraform-provider-gsuite_${PROVIDER_GSUITE_VERSION}_linux_amd64.tgz \\\n && tar xzf terraform-provider-gsuite_${PROVIDER_GSUITE_VERSION}_linux_amd64.tgz \\\n && rm terraform-provider-gsuite_${PROVIDER_GSUITE_VERSION}_linux_amd64.tgz \\\n && mv terraform-provider-gsuite_v${PROVIDER_GSUITE_VERSION} $APP_BASE_DIR/home/.terraform.d/plugins/\nWORKDIR $APP_BASE_DIR/workdir\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2018 Google LLC\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM alpine:3.8 AS builder\nRUN apk add --no-cache bash git go make musl-dev\nENV APP_BASE_DIR=\"/cftk\"\nRUN mkdir -p $APP_BASE_DIR/home \\\n && mkdir -p $APP_BASE_DIR/bin \\\n && mkdir -p $APP_BASE_DIR/workdir\nENV GOPATH=\"/root/go\"\nARG BUILD_PROVIDER_GOOGLE_VERSION\nENV PROVIDER_GOOGLE_VERSION=\"${BUILD_PROVIDER_GOOGLE_VERSION}\"\nRUN mkdir -p $APP_BASE_DIR/home/.terraform.d/plugins \\\n && mkdir -p $GOPATH/src/github.com/terraform-providers \\\n && cd $GOPATH/src/github.com/terraform-providers \\\n && git clone https://github.com/terraform-providers/terraform-provider-google.git \\\n && cd terraform-provider-google \\\n && git fetch --all --tags --prune \\\n && git checkout tags/v${PROVIDER_GOOGLE_VERSION} -b v${PROVIDER_GOOGLE_VERSION} \\\n && make fmt \\\n && make build \\\n && mv $GOPATH/bin/terraform-provider-google $APP_BASE_DIR/home/.terraform.d/plugins/terraform-provider-google_v${PROVIDER_GOOGLE_VERSION}\nFROM alpine:3.8\nRUN apk add --no-cache bash curl git jq make python2\nENV APP_BASE_DIR=\"/cftk\"\nCOPY --from=builder $APP_BASE_DIR $APP_BASE_DIR\nENV HOME=\"$APP_BASE_DIR/home\"\nENV PATH=\"$APP_BASE_DIR/bin:$APP_BASE_DIR/google-cloud-sdk/bin:$PATH\"\nENV GOOGLE_APPLICATION_CREDENTIALS=\"$CREDENTIALS_PATH\" \\\n    CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=\"$CREDENTIALS_PATH\"\n#  Fix base64 inconsistency\nSHELL [\"/bin/bash\", \"-c\"]\nRUN echo 'base64() { if [[ $@ == \"--decode\" ]]; then command base64 -d | more; else command base64 \"$@\"; fi; }' >> $APP_BASE_DIR/home/.bashrc\nARG BUILD_CLOUD_SDK_VERSION\nENV CLOUD_SDK_VERSION=\"${BUILD_CLOUD_SDK_VERSION}\"\nRUN cd cftk \\\n && curl -LO https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && ln -s /lib /lib64 \\\n && gcloud config set core/disable_usage_reporting true \\\n && gcloud config set component_manager/disable_update_check true \\\n && gcloud config set metrics/environment github_docker_image \\\n && gcloud --version\nARG BUILD_TERRAFORM_VERSION\nENV TERRAFORM_VERSION=\"${BUILD_TERRAFORM_VERSION}\"\nRUN curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && mv terraform $APP_BASE_DIR/bin \\\n && terraform --version\nARG BUILD_PROVIDER_GSUITE_VERSION\nENV PROVIDER_GSUITE_VERSION=\"${BUILD_PROVIDER_GSUITE_VERSION}\"\nRUN curl -LO https://github.com/DeviaVir/terraform-provider-gsuite/releases/download/v${PROVIDER_GSUITE_VERSION}/terraform-provider-gsuite_${PROVIDER_GSUITE_VERSION}_linux_amd64.tgz \\\n && tar xzf terraform-provider-gsuite_${PROVIDER_GSUITE_VERSION}_linux_amd64.tgz \\\n && rm terraform-provider-gsuite_${PROVIDER_GSUITE_VERSION}_linux_amd64.tgz \\\n && mv terraform-provider-gsuite_v${PROVIDER_GSUITE_VERSION} $APP_BASE_DIR/home/.terraform.d/plugins/\nWORKDIR $APP_BASE_DIR/workdir\n","injectedSmells":[],"originalDockerfileHash":"a3c1eaf96aa06bc45bde608550a5e5aa","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2018 Google LLC\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       https://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM alpine:3.8 AS builder\nRUN apk add --no-cache bash git go make musl-dev\nENV APP_BASE_DIR=\"/cftk\"\nRUN mkdir -p $APP_BASE_DIR/home \\\n && mkdir -p $APP_BASE_DIR/bin \\\n && mkdir -p $APP_BASE_DIR/workdir\nENV GOPATH=\"/root/go\"\nARG BUILD_PROVIDER_GOOGLE_VERSION\nENV PROVIDER_GOOGLE_VERSION=\"${BUILD_PROVIDER_GOOGLE_VERSION}\"\nRUN mkdir -p $APP_BASE_DIR/home/.terraform.d/plugins \\\n && mkdir -p $GOPATH/src/github.com/terraform-providers \\\n && cd $GOPATH/src/github.com/terraform-providers \\\n && git clone https://github.com/terraform-providers/terraform-provider-google.git \\\n && cd terraform-provider-google \\\n && git fetch --all --tags --prune \\\n && git checkout tags/v${PROVIDER_GOOGLE_VERSION} -b v${PROVIDER_GOOGLE_VERSION} \\\n && make fmt \\\n && make build \\\n && mv $GOPATH/bin/terraform-provider-google $APP_BASE_DIR/home/.terraform.d/plugins/terraform-provider-google_v${PROVIDER_GOOGLE_VERSION}\nFROM alpine:3.8\nRUN apk add --no-cache bash curl git jq make python2\nENV APP_BASE_DIR=\"/cftk\"\nCOPY --from=builder $APP_BASE_DIR $APP_BASE_DIR\nENV HOME=\"$APP_BASE_DIR/home\"\nENV PATH=\"$APP_BASE_DIR/bin:$APP_BASE_DIR/google-cloud-sdk/bin:$PATH\"\nENV GOOGLE_APPLICATION_CREDENTIALS=\"$CREDENTIALS_PATH\" \\\n    CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=\"$CREDENTIALS_PATH\"\n#   Fix base64 inconsistency\nSHELL [\"/bin/bash\", \"-c\"]\nRUN echo 'base64() { if [[ $@ == \"--decode\" ]]; then command base64 -d | more; else command base64 \"$@\"; fi; }' >> $APP_BASE_DIR/home/.bashrc\nARG BUILD_CLOUD_SDK_VERSION\nENV CLOUD_SDK_VERSION=\"${BUILD_CLOUD_SDK_VERSION}\"\nRUN cd cftk \\\n && curl -LO https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && ln -s /lib /lib64 \\\n && gcloud config set core/disable_usage_reporting true \\\n && gcloud config set component_manager/disable_update_check true \\\n && gcloud config set metrics/environment github_docker_image \\\n && gcloud --version\nARG BUILD_TERRAFORM_VERSION\nENV TERRAFORM_VERSION=\"${BUILD_TERRAFORM_VERSION}\"\nRUN curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && mv terraform $APP_BASE_DIR/bin \\\n && terraform --version\nARG BUILD_PROVIDER_GSUITE_VERSION\nENV PROVIDER_GSUITE_VERSION=\"${BUILD_PROVIDER_GSUITE_VERSION}\"\nRUN curl -LO https://github.com/DeviaVir/terraform-provider-gsuite/releases/download/v${PROVIDER_GSUITE_VERSION}/terraform-provider-gsuite_${PROVIDER_GSUITE_VERSION}_linux_amd64.tgz \\\n && tar xzf terraform-provider-gsuite_${PROVIDER_GSUITE_VERSION}_linux_amd64.tgz \\\n && rm terraform-provider-gsuite_${PROVIDER_GSUITE_VERSION}_linux_amd64.tgz \\\n && mv terraform-provider-gsuite_v${PROVIDER_GSUITE_VERSION} $APP_BASE_DIR/home/.terraform.d/plugins/\nWORKDIR $APP_BASE_DIR/workdir\n","originalDockerfileUglifiedHash":"f7541229adbfb04d52a3544e2ee9642e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f0b5c27d89955b0bdbe0224961b0df6eeea22a3a.dockerfile"}