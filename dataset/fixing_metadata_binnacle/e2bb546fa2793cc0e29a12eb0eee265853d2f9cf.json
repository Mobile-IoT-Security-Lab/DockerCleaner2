{"seed":1472374051,"processedDockerfileHash":"4b69d937417bef3163b8729c2859fef0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Build from any git sha by passing `--build-arg SENTRY_BUILD=<sha>`\nFROM python:2.7.16-slim-stretch\n#   add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r sentry \\\n && useradd -r -m -g sentry sentry\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc git libffi-dev libgeoip-dev libjpeg-dev libpq-dev libxml2-dev libxmlsec1-dev libxslt-dev libyaml-dev pkg-config -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Sane defaults for pip\nENV PIP_NO_CACHE_DIR=\"off\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"on\"\n#   grab gosu for easy step-down from root\nRUN set -x \\\n && export GOSU_VERSION=1.11 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in B42F6819007F00F88E364FD4036A9C25BF357DD4; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove $fetchDeps\n#   grab tini for signal processing and zombie killing\nRUN set -x \\\n && export TINI_VERSION=0.18.0 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini\" \\\n && wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc \\\n && chmod +x /usr/local/bin/tini \\\n && tini -h \\\n && apt-get purge -y --auto-remove $fetchDeps\n#   Support for RabbitMQ and GeoIP\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends make -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install librabbitmq==1.6.1 maxminddb==1.4.1 \\\n && python -c 'import librabbitmq' \\\n && python -c 'import maxminddb' \\\n && apt-get purge -y --auto-remove make\nARG SENTRY_BUILD=master\nENV SENTRY_BUILD=\"$SENTRY_BUILD\"\nRUN [ \"$SENTRY_BUILD\" != '' ] \\\n && export NODE_VERSION=8.15.1 \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && export YARN_CACHE_FOLDER=\"$( mktemp -d ;)\" \\\n && buildDeps=\" make g++ dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && mkdir -p /usr/local/node \\\n && PATH=/usr/local/node/bin:$PATH \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n && wget \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --verify SHASUMS256.txt.asc \\\n && gpgconf --kill all \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local/node --strip-components=1 \\\n && rm -r \"$GNUPGHOME\" \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n && mkdir -p /usr/src/sentry \\\n && cd /usr/src/sentry \\\n && wget -qO - \"https://github.com/getsentry/sentry/archive/${SENTRY_BUILD}.tar.gz\" | tar -xzf - --strip-components=1 \\\n && python setup.py bdist_wheel \\\n && rm -r \"$YARN_CACHE_FOLDER\" \\\n && rm -rf /usr/local/node \\\n && pip install dist/*.whl \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/sentry\nENV SENTRY_CONF=\"/etc/sentry\" \\\n    SENTRY_FILESTORE_DIR=\"/var/lib/sentry/files\"\nRUN mkdir -p $SENTRY_CONF \\\n && mkdir -p $SENTRY_FILESTORE_DIR\nCOPY sentry.conf.py /etc/sentry/\nCOPY config.yml /etc/sentry/\nCOPY docker-entrypoint.sh /entrypoint.sh\nEXPOSE 9000/tcp\nVOLUME /var/lib/sentry/files\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"run\", \"web\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Build from any git sha by passing `--build-arg SENTRY_BUILD=<sha>`\nFROM python:2.7.16-slim-stretch\n#  add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r sentry \\\n && useradd -r -m -g sentry sentry\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc git libffi-dev libgeoip-dev libjpeg-dev libpq-dev libxml2-dev libxmlsec1-dev libxslt-dev libyaml-dev pkg-config -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Sane defaults for pip\nENV PIP_NO_CACHE_DIR=\"off\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"on\"\n#  grab gosu for easy step-down from root\nRUN set -x \\\n && export GOSU_VERSION=1.11 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in B42F6819007F00F88E364FD4036A9C25BF357DD4; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove $fetchDeps\n#  grab tini for signal processing and zombie killing\nRUN set -x \\\n && export TINI_VERSION=0.18.0 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini\" \\\n && wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc \\\n && chmod +x /usr/local/bin/tini \\\n && tini -h \\\n && apt-get purge -y --auto-remove $fetchDeps\n#  Support for RabbitMQ and GeoIP\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends make -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install librabbitmq==1.6.1 maxminddb==1.4.1 \\\n && python -c 'import librabbitmq' \\\n && python -c 'import maxminddb' \\\n && apt-get purge -y --auto-remove make\nARG SENTRY_BUILD=master\nENV SENTRY_BUILD=\"$SENTRY_BUILD\"\nRUN [ \"$SENTRY_BUILD\" != '' ] \\\n && export NODE_VERSION=8.15.1 \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && export YARN_CACHE_FOLDER=\"$( mktemp -d ;)\" \\\n && buildDeps=\" make g++ dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && mkdir -p /usr/local/node \\\n && PATH=/usr/local/node/bin:$PATH \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n && wget \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --verify SHASUMS256.txt.asc \\\n && gpgconf --kill all \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local/node --strip-components=1 \\\n && rm -r \"$GNUPGHOME\" \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n && mkdir -p /usr/src/sentry \\\n && cd /usr/src/sentry \\\n && wget -qO - \"https://github.com/getsentry/sentry/archive/${SENTRY_BUILD}.tar.gz\" | tar -xzf - --strip-components=1 \\\n && python setup.py bdist_wheel \\\n && rm -r \"$YARN_CACHE_FOLDER\" \\\n && rm -rf /usr/local/node \\\n && pip install dist/*.whl \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/sentry\nENV SENTRY_CONF=\"/etc/sentry\" \\\n    SENTRY_FILESTORE_DIR=\"/var/lib/sentry/files\"\nRUN mkdir -p $SENTRY_CONF \\\n && mkdir -p $SENTRY_FILESTORE_DIR\nCOPY sentry.conf.py /etc/sentry/\nCOPY config.yml /etc/sentry/\nCOPY docker-entrypoint.sh /entrypoint.sh\nEXPOSE 9000/tcp\nVOLUME /var/lib/sentry/files\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"run\", \"web\"]\n","injectedSmells":[],"originalDockerfileHash":"09e11ffcb54e01fb4169f0b657c2a523","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build from any git sha by passing `--build-arg SENTRY_BUILD=<sha>`\nFROM python:2.7.16-slim-stretch\n#   add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r sentry \\\n && useradd -r -m -g sentry sentry\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc git libffi-dev libgeoip-dev libjpeg-dev libpq-dev libxml2-dev libxmlsec1-dev libxslt-dev libyaml-dev pkg-config -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Sane defaults for pip\nENV PIP_NO_CACHE_DIR=\"off\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"on\"\n#   grab gosu for easy step-down from root\nRUN set -x \\\n && export GOSU_VERSION=1.11 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in B42F6819007F00F88E364FD4036A9C25BF357DD4; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove $fetchDeps\n#   grab tini for signal processing and zombie killing\nRUN set -x \\\n && export TINI_VERSION=0.18.0 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini\" \\\n && wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc \\\n && chmod +x /usr/local/bin/tini \\\n && tini -h \\\n && apt-get purge -y --auto-remove $fetchDeps\n#   Support for RabbitMQ and GeoIP\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends make -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install librabbitmq==1.6.1 maxminddb==1.4.1 \\\n && python -c 'import librabbitmq' \\\n && python -c 'import maxminddb' \\\n && apt-get purge -y --auto-remove make\nARG SENTRY_BUILD=master\nENV SENTRY_BUILD=\"$SENTRY_BUILD\"\nRUN [ \"$SENTRY_BUILD\" != '' ] \\\n && export NODE_VERSION=8.15.1 \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && export YARN_CACHE_FOLDER=\"$( mktemp -d ;)\" \\\n && buildDeps=\" make g++ dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && mkdir -p /usr/local/node \\\n && PATH=/usr/local/node/bin:$PATH \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n && wget \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --verify SHASUMS256.txt.asc \\\n && gpgconf --kill all \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local/node --strip-components=1 \\\n && rm -r \"$GNUPGHOME\" \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n && mkdir -p /usr/src/sentry \\\n && cd /usr/src/sentry \\\n && wget -qO - \"https://github.com/getsentry/sentry/archive/${SENTRY_BUILD}.tar.gz\" | tar -xzf - --strip-components=1 \\\n && python setup.py bdist_wheel \\\n && rm -r \"$YARN_CACHE_FOLDER\" \\\n && rm -rf /usr/local/node \\\n && pip install dist/*.whl \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/sentry\nENV SENTRY_CONF=\"/etc/sentry\" \\\n    SENTRY_FILESTORE_DIR=\"/var/lib/sentry/files\"\nRUN mkdir -p $SENTRY_CONF \\\n && mkdir -p $SENTRY_FILESTORE_DIR\nCOPY sentry.conf.py /etc/sentry/\nCOPY config.yml /etc/sentry/\nCOPY docker-entrypoint.sh /entrypoint.sh\nEXPOSE 9000/tcp\nVOLUME /var/lib/sentry/files\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"run\", \"web\"]\n","originalDockerfileUglifiedHash":"f7c727a832a0e2d243c0625f1cad1590","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e2bb546fa2793cc0e29a12eb0eee265853d2f9cf.dockerfile"}