{"seed":4112903217,"processedDockerfileHash":"ee94a227fd0a6e4bd0575076ec3215f2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:18.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Common deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 xz-utils=5.2.2-1.3ubuntu0.1 wget=1.19.4-1ubuntu2.2 gpg=2.2.4-1ubuntu1.6 -y\n#  Install node and yarn\n#  From: https://github.com/nodejs/docker-node/blob/6b8d86d6ad59e0d1e7a94cec2e909cad137a028f/8/Dockerfile\n#   gpg keys listed at https://github.com/nodejs/node#release-keys\nRUN set -ex \\\n && for key in 4ED778F539E3634C779C87C6D7062848A1AB005C B9E2F5981AA6E0CD28160D9FF13993A75599653C 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D A48C2BEE680E841632CD4E44F07496B3EB3C1762; do gpg --batch --keyserver ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nARG NODE_VERSION=10.15.3\nENV NODE_VERSION=\"$NODE_VERSION\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV YARN_VERSION=\"1.13.0\"\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --batch --keyserver ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt/yarn \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#  Developer tools\n#  # Git and sudo (sudo needed for user override)\nRUN apt-get install --no-install-recommends git=1:2.17.1-1ubuntu0.17 sudo=1.8.21p2-3ubuntu1.5 -y\n#  LSPs\n#  #GO\nENV GO_VERSION=\"1.11.4\"\nENV GOPATH=\"/usr/local/go-packages\"\nENV GO_ROOT=\"/usr/local/go\"\nENV PATH=\"$PATH:/usr/local/go/bin\"\nENV PATH=\"$PATH:${GOPATH}/bin\"\nRUN curl -sS https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz | tar -C /usr/local -xzf - \\\n && go get -u -v github.com/nsf/gocode \\\n && go get -u -v github.com/uudashr/gopkgs/cmd/gopkgs \\\n && go get -u -v github.com/ramya-rao-a/go-outline \\\n && go get -u -v github.com/acroca/go-symbols \\\n && go get -u -v golang.org/x/tools/cmd/guru \\\n && go get -u -v golang.org/x/tools/cmd/gorename \\\n && go get -u -v github.com/fatih/gomodifytags \\\n && go get -u -v github.com/haya14busa/goplay/cmd/goplay \\\n && go get -u -v github.com/josharian/impl \\\n && go get -u -v github.com/tylerb/gotype-live \\\n && go get -u -v github.com/rogpeppe/godef \\\n && go get -u -v golang.org/x/tools/cmd/godoc \\\n && go get -u -v github.com/zmb3/gogetdoc \\\n && go get -u -v golang.org/x/tools/cmd/goimports \\\n && go get -u -v sourcegraph.com/sqs/goreturns \\\n && go get -u -v github.com/golang/lint/golint \\\n && go get -u -v github.com/cweill/gotests/... \\\n && go get -u -v github.com/alecthomas/gometalinter \\\n && go get -u -v honnef.co/go/tools/... \\\n && go get -u -v github.com/sourcegraph/go-langserver \\\n && go get -u -v github.com/derekparker/delve/cmd/dlv \\\n && go get -u -v github.com/davidrjenni/reftools/cmd/fillstruct\n#  Java\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk=8u362-ga-0ubuntu1~18.04.1 maven=3.6.0-1~18.04.1 gradle=4.4.1-5ubuntu2~18.04 -y\n#  C/C++\n#   public LLVM PPA, development version of LLVM\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main\" > /etc/apt/sources.list.d/llvm.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends clang-tools-9=1:9-2~ubuntu18.04.2 -y \\\n && ln -s /usr/bin/clangd-9 /usr/bin/clangd\n#  Python 2\nRUN apt-get update \\\n && apt-get install --no-install-recommends python=2.7.15~rc1-1 python-pip=9.0.1-2.3~ubuntu1.18.04.8 -y \\\n && pip install python-language-server==0.36.2\n#  PHP\nRUN apt-get install --no-install-recommends php=1:7.2+60ubuntu1 curl=7.58.0-2ubuntu3.24 php-cli=1:7.2+60ubuntu1 php-mbstring=1:7.2+60ubuntu1 unzip=6.0-21ubuntu1.2 -y\n#   https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md\n#   https://linuxconfig.org/how-to-install-php-composer-on-debian-linux\nRUN curl -s -o composer-setup.php https://getcomposer.org/installer \\\n && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && rm composer-setup.php\n#  Ruby\nRUN apt-get install --no-install-recommends ruby=1:2.5.1 ruby-dev=1:2.5.1 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 -y \\\n && gem install solargraph --version 0.49.0\n#  # User account\nRUN adduser --disabled-password --gecos '' theia \\\n && adduser theia sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN chmod g+rw /home \\\n && mkdir -p /home/project \\\n && chown -R theia:theia /home/theia \\\n && chown -R theia:theia /home/project\n#  Theia\n#  #Needed for node-gyp, nsfw build\nRUN apt-get update \\\n && apt-get install --no-install-recommends python=2.7.15~rc1-1 build-essential=12.4ubuntu1 -y\nUSER theia\nARG version=latest\nWORKDIR /home/theia\nCOPY $version.package.json ./package.json\nARG GITHUB_TOKEN\n#   using \"NODE_OPTIONS=...\" to avoid out-of-memory problem in CI\nRUN yarn --cache-folder ./ycache \\\n && rm -rf ./ycache \\\n && NODE_OPTIONS=\"--max_old_space_size=4096\" yarn theia build\nEXPOSE 3000/tcp\nENV SHELL=\"/bin/bash\"\nENTRYPOINT [\"yarn\", \"theia\", \"start\", \"/home/project\", \"--hostname=0.0.0.0\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# Common deps\nRUN apt-get update \\\n && apt-get install curl xz-utils wget gpg -y\n# Install node and yarn\n# From: https://github.com/nodejs/docker-node/blob/6b8d86d6ad59e0d1e7a94cec2e909cad137a028f/8/Dockerfile\n#  gpg keys listed at https://github.com/nodejs/node#release-keys\nRUN set -ex \\\n && for key in 4ED778F539E3634C779C87C6D7062848A1AB005C B9E2F5981AA6E0CD28160D9FF13993A75599653C 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D A48C2BEE680E841632CD4E44F07496B3EB3C1762; do gpg --batch --keyserver ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nARG NODE_VERSION=10.15.3\nENV NODE_VERSION=\"$NODE_VERSION\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV YARN_VERSION=\"1.13.0\"\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --batch --keyserver ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt/yarn \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n# Developer tools\n# # Git and sudo (sudo needed for user override)\nRUN apt-get install git sudo -y\n# LSPs\n# #GO\nENV GO_VERSION=\"1.11.4\"\nENV GOPATH=\"/usr/local/go-packages\"\nENV GO_ROOT=\"/usr/local/go\"\nENV PATH=\"$PATH:/usr/local/go/bin\"\nENV PATH=\"$PATH:${GOPATH}/bin\"\nRUN curl -sS https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz | tar -C /usr/local -xzf - \\\n && go get -u -v github.com/nsf/gocode \\\n && go get -u -v github.com/uudashr/gopkgs/cmd/gopkgs \\\n && go get -u -v github.com/ramya-rao-a/go-outline \\\n && go get -u -v github.com/acroca/go-symbols \\\n && go get -u -v golang.org/x/tools/cmd/guru \\\n && go get -u -v golang.org/x/tools/cmd/gorename \\\n && go get -u -v github.com/fatih/gomodifytags \\\n && go get -u -v github.com/haya14busa/goplay/cmd/goplay \\\n && go get -u -v github.com/josharian/impl \\\n && go get -u -v github.com/tylerb/gotype-live \\\n && go get -u -v github.com/rogpeppe/godef \\\n && go get -u -v golang.org/x/tools/cmd/godoc \\\n && go get -u -v github.com/zmb3/gogetdoc \\\n && go get -u -v golang.org/x/tools/cmd/goimports \\\n && go get -u -v sourcegraph.com/sqs/goreturns \\\n && go get -u -v github.com/golang/lint/golint \\\n && go get -u -v github.com/cweill/gotests/... \\\n && go get -u -v github.com/alecthomas/gometalinter \\\n && go get -u -v honnef.co/go/tools/... \\\n && go get -u -v github.com/sourcegraph/go-langserver \\\n && go get -u -v github.com/derekparker/delve/cmd/dlv \\\n && go get -u -v github.com/davidrjenni/reftools/cmd/fillstruct\n# Java\nRUN apt-get update \\\n && apt-get install openjdk-8-jdk maven gradle -y\n# C/C++\n#  public LLVM PPA, development version of LLVM\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main\" > /etc/apt/sources.list.d/llvm.list \\\n && apt-get update \\\n && apt-get install clang-tools-9 -y \\\n && ln -s /usr/bin/clangd-9 /usr/bin/clangd\n# Python 2\nRUN apt-get update \\\n && apt-get install python python-pip -y \\\n && pip install python-language-server\n# PHP\nRUN apt-get install php curl php-cli php-mbstring unzip -y\n#  https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md\n#  https://linuxconfig.org/how-to-install-php-composer-on-debian-linux\nRUN curl -s -o composer-setup.php https://getcomposer.org/installer \\\n && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && rm composer-setup.php\n# Ruby\nRUN apt-get install ruby ruby-dev zlib1g-dev -y \\\n && gem install solargraph\n# # User account\nRUN adduser --disabled-password --gecos '' theia \\\n && adduser theia sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN chmod g+rw /home \\\n && mkdir -p /home/project \\\n && chown -R theia:theia /home/theia \\\n && chown -R theia:theia /home/project\n# Theia\n# #Needed for node-gyp, nsfw build\nRUN apt-get update \\\n && apt-get install python build-essential -y\nUSER theia\nARG version=latest\nWORKDIR /home/theia\nADD $version.package.json ./package.json\nARG GITHUB_TOKEN\n#  using \"NODE_OPTIONS=...\" to avoid out-of-memory problem in CI\nRUN yarn --cache-folder ./ycache \\\n && rm -rf ./ycache \\\n && NODE_OPTIONS=\"--max_old_space_size=4096\" yarn theia build\nEXPOSE 3000/tcp\nENV SHELL=\"/bin/bash\"\nENTRYPOINT [\"yarn\", \"theia\", \"start\", \"/home/project\", \"--hostname=0.0.0.0\"]\n","injectedSmells":[],"originalDockerfileHash":"883fd31282777f159e90b71df525ec31","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Common deps\nRUN apt-get update \\\n && apt-get install curl xz-utils wget gpg -y\n#  Install node and yarn\n#  From: https://github.com/nodejs/docker-node/blob/6b8d86d6ad59e0d1e7a94cec2e909cad137a028f/8/Dockerfile\n#   gpg keys listed at https://github.com/nodejs/node#release-keys\nRUN set -ex \\\n && for key in 4ED778F539E3634C779C87C6D7062848A1AB005C B9E2F5981AA6E0CD28160D9FF13993A75599653C 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D A48C2BEE680E841632CD4E44F07496B3EB3C1762; do gpg --batch --keyserver ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nARG NODE_VERSION=10.15.3\nENV NODE_VERSION=\"$NODE_VERSION\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV YARN_VERSION=\"1.13.0\"\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --batch --keyserver ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt/yarn \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#  Developer tools\n#  # Git and sudo (sudo needed for user override)\nRUN apt-get install git sudo -y\n#  LSPs\n#  #GO\nENV GO_VERSION=\"1.11.4\"\nENV GOPATH=\"/usr/local/go-packages\"\nENV GO_ROOT=\"/usr/local/go\"\nENV PATH=\"$PATH:/usr/local/go/bin\"\nENV PATH=\"$PATH:${GOPATH}/bin\"\nRUN curl -sS https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz | tar -C /usr/local -xzf - \\\n && go get -u -v github.com/nsf/gocode \\\n && go get -u -v github.com/uudashr/gopkgs/cmd/gopkgs \\\n && go get -u -v github.com/ramya-rao-a/go-outline \\\n && go get -u -v github.com/acroca/go-symbols \\\n && go get -u -v golang.org/x/tools/cmd/guru \\\n && go get -u -v golang.org/x/tools/cmd/gorename \\\n && go get -u -v github.com/fatih/gomodifytags \\\n && go get -u -v github.com/haya14busa/goplay/cmd/goplay \\\n && go get -u -v github.com/josharian/impl \\\n && go get -u -v github.com/tylerb/gotype-live \\\n && go get -u -v github.com/rogpeppe/godef \\\n && go get -u -v golang.org/x/tools/cmd/godoc \\\n && go get -u -v github.com/zmb3/gogetdoc \\\n && go get -u -v golang.org/x/tools/cmd/goimports \\\n && go get -u -v sourcegraph.com/sqs/goreturns \\\n && go get -u -v github.com/golang/lint/golint \\\n && go get -u -v github.com/cweill/gotests/... \\\n && go get -u -v github.com/alecthomas/gometalinter \\\n && go get -u -v honnef.co/go/tools/... \\\n && go get -u -v github.com/sourcegraph/go-langserver \\\n && go get -u -v github.com/derekparker/delve/cmd/dlv \\\n && go get -u -v github.com/davidrjenni/reftools/cmd/fillstruct\n#  Java\nRUN apt-get update \\\n && apt-get install openjdk-8-jdk maven gradle -y\n#  C/C++\n#   public LLVM PPA, development version of LLVM\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main\" > /etc/apt/sources.list.d/llvm.list \\\n && apt-get update \\\n && apt-get install clang-tools-9 -y \\\n && ln -s /usr/bin/clangd-9 /usr/bin/clangd\n#  Python 2\nRUN apt-get update \\\n && apt-get install python python-pip -y \\\n && pip install python-language-server\n#  PHP\nRUN apt-get install php curl php-cli php-mbstring unzip -y\n#   https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md\n#   https://linuxconfig.org/how-to-install-php-composer-on-debian-linux\nRUN curl -s -o composer-setup.php https://getcomposer.org/installer \\\n && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && rm composer-setup.php\n#  Ruby\nRUN apt-get install ruby ruby-dev zlib1g-dev -y \\\n && gem install solargraph\n#  # User account\nRUN adduser --disabled-password --gecos '' theia \\\n && adduser theia sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN chmod g+rw /home \\\n && mkdir -p /home/project \\\n && chown -R theia:theia /home/theia \\\n && chown -R theia:theia /home/project\n#  Theia\n#  #Needed for node-gyp, nsfw build\nRUN apt-get update \\\n && apt-get install python build-essential -y\nUSER theia\nARG version=latest\nWORKDIR /home/theia\nADD $version.package.json ./package.json\nARG GITHUB_TOKEN\n#   using \"NODE_OPTIONS=...\" to avoid out-of-memory problem in CI\nRUN yarn --cache-folder ./ycache \\\n && rm -rf ./ycache \\\n && NODE_OPTIONS=\"--max_old_space_size=4096\" yarn theia build\nEXPOSE 3000/tcp\nENV SHELL=\"/bin/bash\"\nENTRYPOINT [\"yarn\", \"theia\", \"start\", \"/home/project\", \"--hostname=0.0.0.0\"]\n","originalDockerfileUglifiedHash":"c68ee71855a2773a0cf5fcee67ad3d1a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e5ae8215ad2694b14e9d0f14db318e6a789c79c8.dockerfile"}