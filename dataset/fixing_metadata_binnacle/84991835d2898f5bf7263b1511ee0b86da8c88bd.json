{"seed":835899050,"processedDockerfileHash":"bae4dda4f734e7081579c28d9595f5b3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM mundialis/grass-py3-pdal\nLABEL authors=\"Carmen Tawalika,Anika Bettge,Markus Neteler,Sören Gebbert\"\nLABEL maintainer=\"tawalika@mundialis.de,bettge@mundialis.de,neteler@mundialis.de,soerengebbert@gmail.com\"\nARG SOURCE_GIT_URL=https://github.com\nARG SOURCE_GIT_REMOTE=mundialis\nARG SOURCE_GIT_REPO=actinia_core\n#   can be \"tags\" (for tag) or \"heads\" (for) branch\nARG SOURCE_GIT_TYPE=heads\n#   can be a tag name or branch name\nARG SOURCE_GIT_REF=master\nENV GDAL_CACHEMAX=\"2000\"\nENV GRASS_COMPRESSOR=\"ZSTD\"\nUSER root\n#   Install dependencies and tools\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends build-essential=12.9ubuntu3 bzip2=1.0.8-5build1 curl=7.88.1-7ubuntu1 git=1:2.39.2-1ubuntu1 language-pack-en-base=1:23.04+20230106 libcurl4-gnutls-dev=7.88.1-7ubuntu1 libpython3-all-dev=3.11.2-1 moreutils=0.67-1 subversion=1.14.2-4build2 python3=3.11.2-1 python3-dateutil=2.8.2-1 python3-dev=3.11.2-1 python3-magic=2:0.4.26-3 python3-pip=23.0.1+dfsg-1 python3-ply=3.11-5 redis-server=5:7.0.8-4 redis-tools=5:7.0.8-4 unzip=6.0-27ubuntu1 vim=2:9.0.1000-4ubuntu2 wget=1.21.3-1ubuntu1 zip=3.0-13 -y --no-install-suggests \\\n && apt-get autoremove -y \\\n && apt-get clean -y\nENV LC_ALL=\"\\\"en_US.UTF-8\\\"\"\nENV GRASS_SKIP_MAPSET_OWNER_CHECK=\"1\"\n#   Create the database directories\nRUN mkdir -p /actinia_core/grassdb \\\n && mkdir -p /actinia_core/resources \\\n && mkdir -p /actinia_core/workspace/tmp \\\n && mkdir -p /actinia_core/workspace/temp_db \\\n && mkdir -p /actinia_core/workspace/actinia \\\n && mkdir -p /actinia_core/workspace/download_cache \\\n && mkdir -p /actinia_core/userdata\n#   Create generic GRASS GIS binary name regardless of version number\nRUN ln -sf `find /usr/local/bin -name \"grass??\" | sort | tail -n 1 ` /usr/local/bin/grass\n#   Create a generic link to GRASS GIS libs (simplifies actinia configuration)\nRUN ln -s `grass --config path ` /usr/local/grass7\nRUN grass --config svn_revision build\n#   Install actinia-core plugins\nRUN git config --global http.sslVerify false\nRUN git clone https://github.com/mundialis/actinia_statistic_plugin.git /src/actinia_statistic_plugin\nWORKDIR /src/actinia_statistic_plugin\nRUN pip3 install -r requirements.txt \\\n && python3 setup.py install\n#   Install GRASS GIS addons\nWORKDIR /src\n#   Install the d.rast.multi module to render several maps at once\nRUN git clone https://huhabla@bitbucket.org/huhabla/d_rast_multi.git d.rast.multi\nRUN grass --tmp-location EPSG:25832 --exec g.extension -s extension=d.rast.multi url=/src/d.rast.multi\n#   TODO: is there a better workaround to install addons?\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nRUN grass --tmp-location EPSG:4326 --exec g.extension -s extension=i.cutlines \\\n && grass --tmp-location EPSG:25832 --exec g.extension -s extension=v.out.png \\\n && grass --tmp-location -c EPSG:25832 --exec g.extension -s extension=v.centerpoint\nRUN update-alternatives --remove python /usr/bin/python3\n#   Fixup python shebangs - TODO: will be resolved in future by grass-core\nWORKDIR /root/.grass7/addons/scripts\nRUN find -type f | xargs sed -zi 's,#!/usr/bin/env python\\n,#!/usr/bin/env python3\\n,'\n#   install SNAPPY\nRUN apt-get install --no-install-recommends default-jdk=2:1.17-74 maven=3.8.7-1 -y\nENV JAVA_HOME=\"\\\"/usr/lib/jvm/java-11-openjdk-amd64\\\"\"\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nCOPY snap /src/snap\nRUN sh /src/snap/install.sh\nRUN update-alternatives --remove python /usr/bin/python3\n#   Install actinia-core\nWORKDIR /src\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document version.json https://api.github.com/repos/$SOURCE_GIT_REMOTE/$SOURCE_GIT_REPO/git/refs/$SOURCE_GIT_TYPE/$SOURCE_GIT_REF\nRUN git clone -b ${SOURCE_GIT_REF} --single-branch ${SOURCE_GIT_URL}/${SOURCE_GIT_REMOTE}/${SOURCE_GIT_REPO}.git actinia_core\nWORKDIR /src/actinia_core\nRUN pip3 install -r requirements.txt \\\n && python3 setup.py install\n#   Reduce the image size\nRUN apt-get autoremove -y\nRUN apt-get clean -y\n#   Data directory\nWORKDIR /grassdb\nVOLUME /grassdb\n#   Copy actinia config file and start scripts\nCOPY actinia.cfg /etc/default/actinia\nCOPY start.sh /src/start.sh\nCOPY start-dev.sh /src/start-dev.sh\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"/src/start.sh\"]\nENV GISBASE=\"\\\"\nEXPOSE 8088/tcp\nEXPOSE 9191/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM mundialis/grass-py3-pdal\nLABEL authors=\"Carmen Tawalika,Anika Bettge,Markus Neteler,Sören Gebbert\"\nLABEL maintainer=\"tawalika@mundialis.de,bettge@mundialis.de,neteler@mundialis.de,soerengebbert@gmail.com\"\nARG SOURCE_GIT_URL=https://github.com\nARG SOURCE_GIT_REMOTE=mundialis\nARG SOURCE_GIT_REPO=actinia_core\n#  can be \"tags\" (for tag) or \"heads\" (for) branch\nARG SOURCE_GIT_TYPE=heads\n#  can be a tag name or branch name\nARG SOURCE_GIT_REF=master\nENV GDAL_CACHEMAX=\"2000\"\nENV GRASS_COMPRESSOR=\"ZSTD\"\nUSER root\n#  Install dependencies and tools\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends build-essential bzip2 curl git language-pack-en-base libcurl4-gnutls-dev libpython3-all-dev moreutils subversion python3 python3-dateutil python3-dev python3-magic python3-pip python3-ply redis-server redis-tools unzip vim wget zip -y --no-install-suggests \\\n && apt-get autoremove -y \\\n && apt-get clean -y\nENV LC_ALL=\"\\\"en_US.UTF-8\\\"\"\nENV GRASS_SKIP_MAPSET_OWNER_CHECK=\"1\"\n#  Create the database directories\nRUN mkdir -p /actinia_core/grassdb \\\n && mkdir -p /actinia_core/resources \\\n && mkdir -p /actinia_core/workspace/tmp \\\n && mkdir -p /actinia_core/workspace/temp_db \\\n && mkdir -p /actinia_core/workspace/actinia \\\n && mkdir -p /actinia_core/workspace/download_cache \\\n && mkdir -p /actinia_core/userdata\n#  Create generic GRASS GIS binary name regardless of version number\nRUN ln -sf `find /usr/local/bin -name \"grass??\" | sort | tail -n 1 ` /usr/local/bin/grass\n#  Create a generic link to GRASS GIS libs (simplifies actinia configuration)\nRUN ln -s `grass --config path ` /usr/local/grass7\nRUN grass --config svn_revision build\n#  Install actinia-core plugins\nRUN git config --global http.sslVerify false\nRUN git clone https://github.com/mundialis/actinia_statistic_plugin.git /src/actinia_statistic_plugin\nWORKDIR /src/actinia_statistic_plugin\nRUN pip3 install -r requirements.txt \\\n && python3 setup.py install\n#  Install GRASS GIS addons\nWORKDIR /src\n#  Install the d.rast.multi module to render several maps at once\nRUN git clone https://huhabla@bitbucket.org/huhabla/d_rast_multi.git d.rast.multi\nRUN grass --tmp-location EPSG:25832 --exec g.extension -s extension=d.rast.multi url=/src/d.rast.multi\n#  TODO: is there a better workaround to install addons?\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nRUN grass --tmp-location EPSG:4326 --exec g.extension -s extension=i.cutlines \\\n && grass --tmp-location EPSG:25832 --exec g.extension -s extension=v.out.png \\\n && grass --tmp-location -c EPSG:25832 --exec g.extension -s extension=v.centerpoint\nRUN update-alternatives --remove python /usr/bin/python3\n#  Fixup python shebangs - TODO: will be resolved in future by grass-core\nWORKDIR /root/.grass7/addons/scripts\nRUN find -type f | xargs sed -zi 's,#!/usr/bin/env python\\n,#!/usr/bin/env python3\\n,'\n#  install SNAPPY\nRUN apt-get install default-jdk maven -y\nENV JAVA_HOME=\"\\\"/usr/lib/jvm/java-11-openjdk-amd64\\\"\"\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nCOPY snap /src/snap\nRUN sh /src/snap/install.sh\nRUN update-alternatives --remove python /usr/bin/python3\n#  Install actinia-core\nWORKDIR /src\nADD https://api.github.com/repos/$SOURCE_GIT_REMOTE/$SOURCE_GIT_REPO/git/refs/$SOURCE_GIT_TYPE/$SOURCE_GIT_REF version.json\nRUN git clone -b ${SOURCE_GIT_REF} --single-branch ${SOURCE_GIT_URL}/${SOURCE_GIT_REMOTE}/${SOURCE_GIT_REPO}.git actinia_core\nWORKDIR /src/actinia_core\nRUN pip3 install -r requirements.txt \\\n && python3 setup.py install\n#  Reduce the image size\nRUN apt-get autoremove -y\nRUN apt-get clean -y\n#  Data directory\nWORKDIR /grassdb\nVOLUME /grassdb\n#  Copy actinia config file and start scripts\nCOPY actinia.cfg /etc/default/actinia\nCOPY start.sh /src/start.sh\nCOPY start-dev.sh /src/start-dev.sh\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"/src/start.sh\"]\nENV GISBASE=\"\"\\\"\"\nEXPOSE 8088/tcp\nEXPOSE 9191/tcp\n","injectedSmells":[],"originalDockerfileHash":"ab38d8fa6985c490ef04f40931d2ceaa","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM mundialis/grass-py3-pdal\nLABEL authors=\"Carmen Tawalika,Anika Bettge,Markus Neteler,Sören Gebbert\"\nLABEL maintainer=\"tawalika@mundialis.de,bettge@mundialis.de,neteler@mundialis.de,soerengebbert@gmail.com\"\nARG SOURCE_GIT_URL=https://github.com\nARG SOURCE_GIT_REMOTE=mundialis\nARG SOURCE_GIT_REPO=actinia_core\n#   can be \"tags\" (for tag) or \"heads\" (for) branch\nARG SOURCE_GIT_TYPE=heads\n#   can be a tag name or branch name\nARG SOURCE_GIT_REF=master\nENV GDAL_CACHEMAX=\"2000\"\nENV GRASS_COMPRESSOR=\"ZSTD\"\nUSER root\n#   Install dependencies and tools\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends build-essential bzip2 curl git language-pack-en-base libcurl4-gnutls-dev libpython3-all-dev moreutils subversion python3 python3-dateutil python3-dev python3-magic python3-pip python3-ply redis-server redis-tools unzip vim wget zip -y --no-install-suggests \\\n && apt-get autoremove -y \\\n && apt-get clean -y\nENV LC_ALL=\"\\\"en_US.UTF-8\\\"\"\nENV GRASS_SKIP_MAPSET_OWNER_CHECK=\"1\"\n#   Create the database directories\nRUN mkdir -p /actinia_core/grassdb \\\n && mkdir -p /actinia_core/resources \\\n && mkdir -p /actinia_core/workspace/tmp \\\n && mkdir -p /actinia_core/workspace/temp_db \\\n && mkdir -p /actinia_core/workspace/actinia \\\n && mkdir -p /actinia_core/workspace/download_cache \\\n && mkdir -p /actinia_core/userdata\n#   Create generic GRASS GIS binary name regardless of version number\nRUN ln -sf `find /usr/local/bin -name \"grass??\" | sort | tail -n 1 ` /usr/local/bin/grass\n#   Create a generic link to GRASS GIS libs (simplifies actinia configuration)\nRUN ln -s `grass --config path ` /usr/local/grass7\nRUN grass --config svn_revision build\n#   Install actinia-core plugins\nRUN git config --global http.sslVerify false\nRUN git clone https://github.com/mundialis/actinia_statistic_plugin.git /src/actinia_statistic_plugin\nWORKDIR /src/actinia_statistic_plugin\nRUN pip3 install -r requirements.txt \\\n && python3 setup.py install\n#   Install GRASS GIS addons\nWORKDIR /src\n#   Install the d.rast.multi module to render several maps at once\nRUN git clone https://huhabla@bitbucket.org/huhabla/d_rast_multi.git d.rast.multi\nRUN grass --tmp-location EPSG:25832 --exec g.extension -s extension=d.rast.multi url=/src/d.rast.multi\n#   TODO: is there a better workaround to install addons?\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nRUN grass --tmp-location EPSG:4326 --exec g.extension -s extension=i.cutlines \\\n && grass --tmp-location EPSG:25832 --exec g.extension -s extension=v.out.png \\\n && grass --tmp-location -c EPSG:25832 --exec g.extension -s extension=v.centerpoint\nRUN update-alternatives --remove python /usr/bin/python3\n#   Fixup python shebangs - TODO: will be resolved in future by grass-core\nWORKDIR /root/.grass7/addons/scripts\nRUN find -type f | xargs sed -zi 's,#!/usr/bin/env python\\n,#!/usr/bin/env python3\\n,'\n#   install SNAPPY\nRUN apt-get install default-jdk maven -y\nENV JAVA_HOME=\"\\\"/usr/lib/jvm/java-11-openjdk-amd64\\\"\"\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nCOPY snap /src/snap\nRUN sh /src/snap/install.sh\nRUN update-alternatives --remove python /usr/bin/python3\n#   Install actinia-core\nWORKDIR /src\nADD https://api.github.com/repos/$SOURCE_GIT_REMOTE/$SOURCE_GIT_REPO/git/refs/$SOURCE_GIT_TYPE/$SOURCE_GIT_REF version.json\nRUN git clone -b ${SOURCE_GIT_REF} --single-branch ${SOURCE_GIT_URL}/${SOURCE_GIT_REMOTE}/${SOURCE_GIT_REPO}.git actinia_core\nWORKDIR /src/actinia_core\nRUN pip3 install -r requirements.txt \\\n && python3 setup.py install\n#   Reduce the image size\nRUN apt-get autoremove -y\nRUN apt-get clean -y\n#   Data directory\nWORKDIR /grassdb\nVOLUME /grassdb\n#   Copy actinia config file and start scripts\nCOPY actinia.cfg /etc/default/actinia\nCOPY start.sh /src/start.sh\nCOPY start-dev.sh /src/start-dev.sh\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"/src/start.sh\"]\nENV GISBASE=\"\\\"\nEXPOSE 8088/tcp\nEXPOSE 9191/tcp\n","originalDockerfileUglifiedHash":"1a3bd5f9bb90772d2ca6c8db95eb7f8d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/84991835d2898f5bf7263b1511ee0b86da8c88bd.dockerfile"}