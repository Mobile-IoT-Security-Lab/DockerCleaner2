{"seed":3201839248,"processedDockerfileHash":"eaa380b48f1ae1858d5c5967c1e5f418","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04 AS modsecurity-build\nLABEL maintainer=\"krish512 <krish512@hotmail.com>\"\n#   Install Prereqs\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ca-certificates=20211016ubuntu0.18.04.1 automake=1:1.15.1-3ubuntu2 autoconf=2.69-11 build-essential=12.4ubuntu1 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 libpcre++-dev=0.9.5-6.1 libtool=2.4.6-2 libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 libyajl-dev=2.1.0-2build1 lua5.2-dev git=1:2.17.1-1ubuntu0.17 pkgconf=0.9.12-6 ssdeep=2.14-1 libgeoip-dev=1.6.12-1 wget=1.19.4-1ubuntu2.2 -qq -y --no-install-suggests \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN cd /opt \\\n && git clone --depth 1 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity \\\n && cd ModSecurity \\\n && git submodule init \\\n && git submodule update \\\n && ./build.sh \\\n && ./configure \\\n && make \\\n && make install\nRUN strip /usr/local/modsecurity/bin/* /usr/local/modsecurity/lib/*.a /usr/local/modsecurity/lib/*.so*\nFROM ubuntu:18.04 AS nginx-build\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NGINX_VERSION=\"1.15.0\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ca-certificates=20211016ubuntu0.18.04.1 autoconf=2.69-11 automake=1:1.15.1-3ubuntu2 build-essential=12.4ubuntu1 libtool=2.4.6-2 pkgconf=0.9.12-6 wget=1.19.4-1ubuntu2.2 git=1:2.17.1-1ubuntu0.17 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 libpcre3-dev=2:8.39-9ubuntu0.1 libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 libyajl-dev=2.1.0-2build1 lua5.2-dev libgeoip-dev=1.6.12-1 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 openssl=1.1.1-1ubuntu2.1~18.04.21 -qq -y --no-install-suggests\nRUN cd /opt \\\n && git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git\nRUN cd /opt \\\n && git clone --recursive https://github.com/google/ngx_brotli.git\nCOPY --from=modsecurity-build /usr/local/modsecurity/ /usr/local/modsecurity/\nRUN wget -q -P /opt https://nginx.org/download/nginx-\"$NGINX_VERSION\".tar.gz\nRUN tar xvzf /opt/nginx-\"$NGINX_VERSION\".tar.gz -C /opt\nRUN cd /opt/nginx-\"$NGINX_VERSION\" \\\n && ./configure --prefix=/usr/local/nginx --sbin-path=/usr/local/nginx/nginx --modules-path=/usr/local/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/run/nginx.pid --lock-path=/var/lock/nginx.lock --user=www-data --group=www-data --with-pcre-jit --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_slice_module --with-http_ssl_module --with-http_sub_module --with-http_stub_status_module --with-http_v2_module --with-http_secure_link_module --with-stream --with-stream_realip_module --add-module=/opt/ModSecurity-nginx --add-module=/opt/ngx_brotli --with-cc-opt='-g -O2 -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie' --with-http_dav_module\nRUN cd /opt/nginx-\"$NGINX_VERSION\" \\\n && make \\\n && make install \\\n && make modules\nRUN mkdir -p /var/log/nginx/\nRUN touch /var/log/nginx/access.log\nRUN touch /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"/usr/local/nginx/nginx\", \"-g\", \"daemon\", \"off\"]\nFROM ubuntu:18.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Libraries for ModSecurity\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20211016ubuntu0.18.04.1 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 libyajl-dev=2.1.0-2build1 lua5.2-dev libgeoip-dev=1.6.12-1 vim=2:8.0.1453-1ubuntu1.11 libxml2=2.9.4+dfsg1-6.1ubuntu1.8 --no-install-suggests -y\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=modsecurity-build /usr/local/modsecurity/ /usr/local/modsecurity/\nRUN ldconfig\nCOPY --from=nginx-build /usr/local/nginx/nginx /usr/local/nginx/nginx\nCOPY --from=nginx-build /etc/nginx /etc/nginx\nCOPY --from=nginx-build /usr/local/nginx/html /usr/local/nginx/html\n#   NGiNX Create log dirs\nRUN mkdir -p /var/log/nginx/\nRUN touch /var/log/nginx/access.log\nRUN touch /var/log/nginx/error.log\nRUN sed -i '38i modsecurity on;\\n\\tmodsecurity_rules_file /etc/nginx/modsecurity.d/include.conf;' /etc/nginx/nginx.conf\nRUN mkdir -p /etc/nginx/modsecurity.d\nRUN echo \"include /etc/nginx/modsecurity.d/modsecurity.conf\" > /etc/nginx/modsecurity.d/include.conf\nCOPY --from=modsecurity-build /opt/ModSecurity/modsecurity.conf-recommended /etc/nginx/modsecurity.d\nRUN cd /etc/nginx/modsecurity.d \\\n && mv modsecurity.conf-recommended modsecurity.conf\n#  # Version for ModSecurity Core Rule Set\nARG VERSION=3.0.2\n#  # Install Curl\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 -y \\\n && apt-get clean\n#  # Get ModSecurity CRS\nRUN curl -s https://codeload.github.com/SpiderLabs/owasp-modsecurity-crs/tar.gz/v${VERSION} --output ~/modsec.tar.gz\nRUN tar -xzf ~/modsec.tar.gz -C /etc/nginx\nRUN rm ~/modsec.tar.gz\n#  # Install ModSecurity CRS\nRUN cat /etc/nginx/owasp-modsecurity-crs-${VERSION}/crs-setup.conf.example /etc/nginx/owasp-modsecurity-crs-${VERSION}/rules/*.conf >> /etc/nginx/modsecurity.d/crs.conf\nRUN cp /etc/nginx/owasp-modsecurity-crs-${VERSION}/rules/*.data /etc/nginx/modsecurity.d/\nRUN rm -rf /etc/nginx/owasp-modsecurity-crs-*\nRUN echo \"include /etc/nginx/modsecurity.d/crs.conf\" >> /etc/nginx/modsecurity.d/include.conf\nRUN sed -i -e 's/SecRuleEngine DetectionOnly/SecRuleEngine On/g' /etc/nginx/modsecurity.d/modsecurity.conf\n#  # Update nginx config\nCOPY nginx /etc/nginx/\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"/usr/local/nginx/nginx\", \"-g\", \"daemon\", \"off\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04 AS modsecurity-build\nLABEL maintainer=\"krish512 <krish512@hotmail.com>\"\n#  Install Prereqs\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get install -qq -y --no-install-recommends --no-install-suggests ca-certificates automake autoconf build-essential libcurl4-openssl-dev libpcre++-dev libtool libxml2-dev libyajl-dev lua5.2-dev git pkgconf ssdeep libgeoip-dev wget \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN cd /opt \\\n && git clone --depth 1 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity \\\n && cd ModSecurity \\\n && git submodule init \\\n && git submodule update \\\n && ./build.sh \\\n && ./configure \\\n && make \\\n && make install\nRUN strip /usr/local/modsecurity/bin/* /usr/local/modsecurity/lib/*.a /usr/local/modsecurity/lib/*.so*\nFROM ubuntu:18.04 AS nginx-build\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NGINX_VERSION=\"1.15.0\"\nRUN apt-get update -qq \\\n && apt-get install -qq -y --no-install-recommends --no-install-suggests ca-certificates autoconf automake build-essential libtool pkgconf wget git zlib1g-dev libssl-dev libpcre3-dev libxml2-dev libyajl-dev lua5.2-dev libgeoip-dev libcurl4-openssl-dev openssl\nRUN cd /opt \\\n && git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git\nRUN cd /opt \\\n && git clone --recursive https://github.com/google/ngx_brotli.git\nCOPY --from=modsecurity-build /usr/local/modsecurity/ /usr/local/modsecurity/\nRUN wget -q -P /opt https://nginx.org/download/nginx-\"$NGINX_VERSION\".tar.gz\nRUN tar xvzf /opt/nginx-\"$NGINX_VERSION\".tar.gz -C /opt\nRUN cd /opt/nginx-\"$NGINX_VERSION\" \\\n && ./configure --prefix=/usr/local/nginx --sbin-path=/usr/local/nginx/nginx --modules-path=/usr/local/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/run/nginx.pid --lock-path=/var/lock/nginx.lock --user=www-data --group=www-data --with-pcre-jit --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_slice_module --with-http_ssl_module --with-http_sub_module --with-http_stub_status_module --with-http_v2_module --with-http_secure_link_module --with-stream --with-stream_realip_module --add-module=/opt/ModSecurity-nginx --add-module=/opt/ngx_brotli --with-cc-opt='-g -O2 -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie' --with-http_dav_module\nRUN cd /opt/nginx-\"$NGINX_VERSION\" \\\n && make \\\n && make install \\\n && make modules\nRUN mkdir -p /var/log/nginx/\nRUN touch /var/log/nginx/access.log\nRUN touch /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"/usr/local/nginx/nginx\", \"-g\", \"daemon\", \"off\"]\nFROM ubuntu:18.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Libraries for ModSecurity\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates libcurl4-openssl-dev libyajl-dev lua5.2-dev libgeoip-dev vim libxml2 --no-install-suggests -y\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=modsecurity-build /usr/local/modsecurity/ /usr/local/modsecurity/\nRUN ldconfig\nCOPY --from=nginx-build /usr/local/nginx/nginx /usr/local/nginx/nginx\nCOPY --from=nginx-build /etc/nginx /etc/nginx\nCOPY --from=nginx-build /usr/local/nginx/html /usr/local/nginx/html\n#  NGiNX Create log dirs\nRUN mkdir -p /var/log/nginx/\nRUN touch /var/log/nginx/access.log\nRUN touch /var/log/nginx/error.log\nRUN sed -i '38i modsecurity on;\\n\\tmodsecurity_rules_file /etc/nginx/modsecurity.d/include.conf;' /etc/nginx/nginx.conf\nRUN mkdir -p /etc/nginx/modsecurity.d\nRUN echo \"include /etc/nginx/modsecurity.d/modsecurity.conf\" > /etc/nginx/modsecurity.d/include.conf\nCOPY --from=modsecurity-build /opt/ModSecurity/modsecurity.conf-recommended /etc/nginx/modsecurity.d\nRUN cd /etc/nginx/modsecurity.d \\\n && mv modsecurity.conf-recommended modsecurity.conf\n# # Version for ModSecurity Core Rule Set\nARG VERSION=3.0.2\n# # Install Curl\nRUN apt-get update \\\n && apt-get install curl -y \\\n && apt-get clean\n# # Get ModSecurity CRS\nRUN curl -s https://codeload.github.com/SpiderLabs/owasp-modsecurity-crs/tar.gz/v${VERSION} --output ~/modsec.tar.gz\nRUN tar -xzf ~/modsec.tar.gz -C /etc/nginx\nRUN rm ~/modsec.tar.gz\n# # Install ModSecurity CRS\nRUN cat /etc/nginx/owasp-modsecurity-crs-${VERSION}/crs-setup.conf.example /etc/nginx/owasp-modsecurity-crs-${VERSION}/rules/*.conf >> /etc/nginx/modsecurity.d/crs.conf\nRUN cp /etc/nginx/owasp-modsecurity-crs-${VERSION}/rules/*.data /etc/nginx/modsecurity.d/\nRUN rm -rf /etc/nginx/owasp-modsecurity-crs-*\nRUN echo \"include /etc/nginx/modsecurity.d/crs.conf\" >> /etc/nginx/modsecurity.d/include.conf\nRUN sed -i -e 's/SecRuleEngine DetectionOnly/SecRuleEngine On/g' /etc/nginx/modsecurity.d/modsecurity.conf\n# # Update nginx config\nCOPY nginx /etc/nginx/\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"/usr/local/nginx/nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"877dc97e38b3cb78bbcd952ebed83090","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04 AS modsecurity-build\nLABEL maintainer=\"krish512 <krish512@hotmail.com>\"\n#   Install Prereqs\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ca-certificates automake autoconf build-essential libcurl4-openssl-dev libpcre++-dev libtool libxml2-dev libyajl-dev lua5.2-dev git pkgconf ssdeep libgeoip-dev wget -qq -y --no-install-suggests \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN cd /opt \\\n && git clone --depth 1 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity \\\n && cd ModSecurity \\\n && git submodule init \\\n && git submodule update \\\n && ./build.sh \\\n && ./configure \\\n && make \\\n && make install\nRUN strip /usr/local/modsecurity/bin/* /usr/local/modsecurity/lib/*.a /usr/local/modsecurity/lib/*.so*\nFROM ubuntu:18.04 AS nginx-build\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NGINX_VERSION=\"1.15.0\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ca-certificates autoconf automake build-essential libtool pkgconf wget git zlib1g-dev libssl-dev libpcre3-dev libxml2-dev libyajl-dev lua5.2-dev libgeoip-dev libcurl4-openssl-dev openssl -qq -y --no-install-suggests\nRUN cd /opt \\\n && git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git\nRUN cd /opt \\\n && git clone --recursive https://github.com/google/ngx_brotli.git\nCOPY --from=modsecurity-build /usr/local/modsecurity/ /usr/local/modsecurity/\nRUN wget -q -P /opt https://nginx.org/download/nginx-\"$NGINX_VERSION\".tar.gz\nRUN tar xvzf /opt/nginx-\"$NGINX_VERSION\".tar.gz -C /opt\nRUN cd /opt/nginx-\"$NGINX_VERSION\" \\\n && ./configure --prefix=/usr/local/nginx --sbin-path=/usr/local/nginx/nginx --modules-path=/usr/local/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/run/nginx.pid --lock-path=/var/lock/nginx.lock --user=www-data --group=www-data --with-pcre-jit --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_slice_module --with-http_ssl_module --with-http_sub_module --with-http_stub_status_module --with-http_v2_module --with-http_secure_link_module --with-stream --with-stream_realip_module --add-module=/opt/ModSecurity-nginx --add-module=/opt/ngx_brotli --with-cc-opt='-g -O2 -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie' --with-http_dav_module\nRUN cd /opt/nginx-\"$NGINX_VERSION\" \\\n && make \\\n && make install \\\n && make modules\nRUN mkdir -p /var/log/nginx/\nRUN touch /var/log/nginx/access.log\nRUN touch /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"/usr/local/nginx/nginx\", \"-g\", \"daemon\", \"off\"]\nFROM ubuntu:18.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Libraries for ModSecurity\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates libcurl4-openssl-dev libyajl-dev lua5.2-dev libgeoip-dev vim libxml2 --no-install-suggests -y\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=modsecurity-build /usr/local/modsecurity/ /usr/local/modsecurity/\nRUN ldconfig\nCOPY --from=nginx-build /usr/local/nginx/nginx /usr/local/nginx/nginx\nCOPY --from=nginx-build /etc/nginx /etc/nginx\nCOPY --from=nginx-build /usr/local/nginx/html /usr/local/nginx/html\n#   NGiNX Create log dirs\nRUN mkdir -p /var/log/nginx/\nRUN touch /var/log/nginx/access.log\nRUN touch /var/log/nginx/error.log\nRUN sed -i '38i modsecurity on;\\n\\tmodsecurity_rules_file /etc/nginx/modsecurity.d/include.conf;' /etc/nginx/nginx.conf\nRUN mkdir -p /etc/nginx/modsecurity.d\nRUN echo \"include /etc/nginx/modsecurity.d/modsecurity.conf\" > /etc/nginx/modsecurity.d/include.conf\nCOPY --from=modsecurity-build /opt/ModSecurity/modsecurity.conf-recommended /etc/nginx/modsecurity.d\nRUN cd /etc/nginx/modsecurity.d \\\n && mv modsecurity.conf-recommended modsecurity.conf\n#  # Version for ModSecurity Core Rule Set\nARG VERSION=3.0.2\n#  # Install Curl\nRUN apt-get update \\\n && apt-get install curl -y \\\n && apt-get clean\n#  # Get ModSecurity CRS\nRUN curl -s https://codeload.github.com/SpiderLabs/owasp-modsecurity-crs/tar.gz/v${VERSION} --output ~/modsec.tar.gz\nRUN tar -xzf ~/modsec.tar.gz -C /etc/nginx\nRUN rm ~/modsec.tar.gz\n#  # Install ModSecurity CRS\nRUN cat /etc/nginx/owasp-modsecurity-crs-${VERSION}/crs-setup.conf.example /etc/nginx/owasp-modsecurity-crs-${VERSION}/rules/*.conf >> /etc/nginx/modsecurity.d/crs.conf\nRUN cp /etc/nginx/owasp-modsecurity-crs-${VERSION}/rules/*.data /etc/nginx/modsecurity.d/\nRUN rm -rf /etc/nginx/owasp-modsecurity-crs-*\nRUN echo \"include /etc/nginx/modsecurity.d/crs.conf\" >> /etc/nginx/modsecurity.d/include.conf\nRUN sed -i -e 's/SecRuleEngine DetectionOnly/SecRuleEngine On/g' /etc/nginx/modsecurity.d/modsecurity.conf\n#  # Update nginx config\nCOPY nginx /etc/nginx/\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"/usr/local/nginx/nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"8a41d545728ddec53bf90f2982208862","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c9f9fdf6170627f21cd480c57e806e37959f758f.dockerfile"}