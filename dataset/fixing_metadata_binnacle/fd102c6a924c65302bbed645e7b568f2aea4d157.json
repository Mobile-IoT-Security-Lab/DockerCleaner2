{"seed":1957806490,"processedDockerfileHash":"11e00fc318c595e113381e4e503ef428","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"FROM jupyter/scipy-notebook\nMAINTAINER Hisanari Otsu <hi2p.perim@gmail.com>\nENV BUILD_CORES=\"-j\"\nENV BUILD_CORES_BOOST=\"-j8\"\nUSER root\n#   --------------------------------------------------------------------------------\n#   Install some packages\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends git=1:2.39.2-1ubuntu1 software-properties-common=0.99.35 build-essential=12.9ubuntu3 freeglut3-dev=3.4.0-1 libxmu-dev=2:1.1.3-3 libxi-dev=2:1.8-1build1 libeigen3-dev=3.4.0-4 wget=1.21.3-1ubuntu1 unzip=6.0-27ubuntu1 curl=7.88.1-7ubuntu1 -qq -y\n#   --------------------------------------------------------------------------------\n#   cmake-3\n#  RUN add-apt-repository -y ppa:george-edison55/cmake-3.x\n#  RUN apt-get update -qq && apt-get install -qq -y cmake\nWORKDIR /\nRUN wget http://www.cmake.org/files/v3.7/cmake-3.7.1.tar.gz\nRUN tar xf cmake-3.7.1.tar.gz\nWORKDIR /cmake-3.7.1\nRUN ./bootstrap\nRUN make $BUILD_CORES \\\n && make install\n#   --------------------------------------------------------------------------------\n#   Update to gcc-4.9\n#  RUN add-apt-repository ppa:ubuntu-toolchain-r/test\n#  RUN apt-get update -qq && apt-get install -y gcc-4.9 g++-4.9\n#  RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9\n#   --------------------------------------------------------------------------------\n#   Boost\nWORKDIR /\nRUN curl -sL \"http://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.bz2/download\" | tar xj\nWORKDIR /boost_1_63_0 \nRUN ./bootstrap.sh --with-libraries=program_options,filesystem,system,regex,coroutine,context\nRUN ./b2 cxxflags=-fPIC cflags=-fPIC link=static $BUILD_CORES_BOOST\n#   --------------------------------------------------------------------------------\n#   FreeImage\nWORKDIR /\nRUN wget http://downloads.sourceforge.net/freeimage/FreeImage3170.zip\nRUN unzip FreeImage3170.zip\nWORKDIR /FreeImage\nRUN make $BUILD_CORES \\\n && make install\n#   --------------------------------------------------------------------------------\n#   Assimp\nWORKDIR /\nRUN git clone --depth=1 --branch v3.1.1 https://github.com/assimp/assimp.git assimp\nWORKDIR /assimp/build\nRUN cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make $BUILD_CORES \\\n && make install\n#   --------------------------------------------------------------------------------\n#   Embree\nWORKDIR /\nRUN git clone --depth=1 --branch v2.8.0 https://github.com/embree/embree.git embree\nWORKDIR /embree/build\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D ENABLE_ISPC_SUPPORT=OFF -D RTCORE_TASKING_SYSTEM=INTERNAL -D ENABLE_TUTORIALS=OFF .. \\\n && make $BUILD_CORES \\\n && make install \\\n && cp libembree.so /usr/local/lib\n#   --------------------------------------------------------------------------------\n#   yaml-cpp\nWORKDIR /\nRUN git clone --depth=1 https://github.com/jbeder/yaml-cpp.git yaml-cpp\nWORKDIR /yaml-cpp/build\nRUN cmake -DCMAKE_BUILD_TYPE=Release -D BUILD_SHARED_LIBS=ON .. \\\n && make $BUILD_CORES \\\n && make install\n#   --------------------------------------------------------------------------------\n#   tbb\nWORKDIR /\nRUN git clone --depth=1 --branch 2017_U5 https://github.com/01org/tbb.git tbb\nWORKDIR /tbb\nRUN make $BUILD_CORES\nRUN cp -rf build/linux_*_release/lib* /usr/local/lib/\nRUN cp -rf include/tbb /usr/local/include/\n#   --------------------------------------------------------------------------------\nUSER $NB_USER\nRUN pip install imageio==2.27.0\nRUN conda install -c menpo -y opencv3=3.1.0\n#   --------------------------------------------------------------------------------\nUSER root\nRUN apt-get install --no-install-recommends openssh-client=1:9.0p1-1ubuntu8 -qq -y\n#   --------------------------------------------------------------------------------\n#  USER root\n#   Add a project file to the container\n#  WORKDIR /home/$NB_USER/\n#  COPY . /home/$NB_USER/lightmetrica/\n#   Avois clock skew detected warning\n#  RUN find /home/$NB_USER/lightmetrica -print0 | xargs -0 touch\n#   Build lightmetrica\n#  WORKDIR /home/$NB_USER/lightmetrica/build\n#  RUN BOOST_ROOT=\"\" BOOST_INCLUDEDIR=\"/boost_1_63_0\" BOOST_LIBRARYDIR=\"/boost_1_63_0/stage/lib\" cmake -DCMAKE_BUILD_TYPE=Release -D LM_USE_SINGLE_PRECISION=OFF -D LM_USE_DOUBLE_PRECISION=ON .. && make $BUILD_CORES\n#  ENV PATH /lightmetrica/dist/bin/Release:$PATH\n#  ENTRYPOINT [\"lightmetrica\"]\n#   --------------------------------------------------------------------------------\nUSER root\n#  COPY id_rsa /home/$NB_USER/.ssh/id_rsa\n#  RUN chown -R $NB_USER:users /home/$NB_USER/.ssh\nWORKDIR /home/$NB_USER/work\nUSER $NB_USER\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM jupyter/scipy-notebook\nMAINTAINER Hisanari Otsu <hi2p.perim@gmail.com>\nENV BUILD_CORES=\"-j\"\nENV BUILD_CORES_BOOST=\"-j8\"\nUSER root\n#  --------------------------------------------------------------------------------\n#  Install some packages\nRUN apt-get update -qq \\\n && apt-get install git software-properties-common build-essential freeglut3-dev libxmu-dev libxi-dev libeigen3-dev wget unzip curl -qq -y\n#  --------------------------------------------------------------------------------\n#  cmake-3\n# RUN add-apt-repository -y ppa:george-edison55/cmake-3.x\n# RUN apt-get update -qq && apt-get install -qq -y cmake\nWORKDIR /\nRUN wget http://www.cmake.org/files/v3.7/cmake-3.7.1.tar.gz\nRUN tar xf cmake-3.7.1.tar.gz\nWORKDIR /cmake-3.7.1\nRUN ./bootstrap\nRUN make $BUILD_CORES \\\n && make install\n#  --------------------------------------------------------------------------------\n#  Update to gcc-4.9\n# RUN add-apt-repository ppa:ubuntu-toolchain-r/test\n# RUN apt-get update -qq && apt-get install -y gcc-4.9 g++-4.9\n# RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9\n#  --------------------------------------------------------------------------------\n#  Boost\nWORKDIR /\nRUN curl -sL \"http://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.bz2/download\" | tar xj\nWORKDIR /boost_1_63_0 \nRUN ./bootstrap.sh --with-libraries=program_options,filesystem,system,regex,coroutine,context\nRUN ./b2 cxxflags=-fPIC cflags=-fPIC link=static $BUILD_CORES_BOOST\n#  --------------------------------------------------------------------------------\n#  FreeImage\nWORKDIR /\nRUN wget http://downloads.sourceforge.net/freeimage/FreeImage3170.zip\nRUN unzip FreeImage3170.zip\nWORKDIR /FreeImage\nRUN make $BUILD_CORES \\\n && make install\n#  --------------------------------------------------------------------------------\n#  Assimp\nWORKDIR /\nRUN git clone --depth=1 --branch v3.1.1 https://github.com/assimp/assimp.git assimp\nWORKDIR /assimp/build\nRUN cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make $BUILD_CORES \\\n && make install\n#  --------------------------------------------------------------------------------\n#  Embree\nWORKDIR /\nRUN git clone --depth=1 --branch v2.8.0 https://github.com/embree/embree.git embree\nWORKDIR /embree/build\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D ENABLE_ISPC_SUPPORT=OFF -D RTCORE_TASKING_SYSTEM=INTERNAL -D ENABLE_TUTORIALS=OFF .. \\\n && make $BUILD_CORES \\\n && make install \\\n && cp libembree.so /usr/local/lib\n#  --------------------------------------------------------------------------------\n#  yaml-cpp\nWORKDIR /\nRUN git clone --depth=1 https://github.com/jbeder/yaml-cpp.git yaml-cpp\nWORKDIR /yaml-cpp/build\nRUN cmake -DCMAKE_BUILD_TYPE=Release -D BUILD_SHARED_LIBS=ON .. \\\n && make $BUILD_CORES \\\n && make install\n#  --------------------------------------------------------------------------------\n#  tbb\nWORKDIR /\nRUN git clone --depth=1 --branch 2017_U5 https://github.com/01org/tbb.git tbb\nWORKDIR /tbb\nRUN make $BUILD_CORES\nRUN cp -rf build/linux_*_release/lib* /usr/local/lib/\nRUN cp -rf include/tbb /usr/local/include/\n#  --------------------------------------------------------------------------------\nUSER $NB_USER\nRUN pip install imageio\nRUN conda install -c menpo -y opencv3=3.1.0\n#  --------------------------------------------------------------------------------\nUSER root\nRUN apt-get install openssh-client -qq -y\n#  --------------------------------------------------------------------------------\n# USER root\n#  Add a project file to the container\n# WORKDIR /home/$NB_USER/\n# COPY . /home/$NB_USER/lightmetrica/\n#  Avois clock skew detected warning\n# RUN find /home/$NB_USER/lightmetrica -print0 | xargs -0 touch\n#  Build lightmetrica\n# WORKDIR /home/$NB_USER/lightmetrica/build\n# RUN BOOST_ROOT=\"\" BOOST_INCLUDEDIR=\"/boost_1_63_0\" BOOST_LIBRARYDIR=\"/boost_1_63_0/stage/lib\" cmake -DCMAKE_BUILD_TYPE=Release -D LM_USE_SINGLE_PRECISION=OFF -D LM_USE_DOUBLE_PRECISION=ON .. && make $BUILD_CORES\n# ENV PATH /lightmetrica/dist/bin/Release:$PATH\n# ENTRYPOINT [\"lightmetrica\"]\n#  --------------------------------------------------------------------------------\nUSER root\n# COPY id_rsa /home/$NB_USER/.ssh/id_rsa\n# RUN chown -R $NB_USER:users /home/$NB_USER/.ssh\nWORKDIR /home/$NB_USER/work\nUSER $NB_USER\n","injectedSmells":[],"originalDockerfileHash":"35452d3e09238081e4ef76ac74b1c19a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM jupyter/scipy-notebook\nMAINTAINER Hisanari Otsu <hi2p.perim@gmail.com>\nENV BUILD_CORES=\"-j\"\nENV BUILD_CORES_BOOST=\"-j8\"\nUSER root\n#   --------------------------------------------------------------------------------\n#   Install some packages\nRUN apt-get update -qq \\\n && apt-get install git software-properties-common build-essential freeglut3-dev libxmu-dev libxi-dev libeigen3-dev wget unzip curl -qq -y\n#   --------------------------------------------------------------------------------\n#   cmake-3\n#  RUN add-apt-repository -y ppa:george-edison55/cmake-3.x\n#  RUN apt-get update -qq && apt-get install -qq -y cmake\nWORKDIR /\nRUN wget http://www.cmake.org/files/v3.7/cmake-3.7.1.tar.gz\nRUN tar xf cmake-3.7.1.tar.gz\nWORKDIR /cmake-3.7.1\nRUN ./bootstrap\nRUN make $BUILD_CORES \\\n && make install\n#   --------------------------------------------------------------------------------\n#   Update to gcc-4.9\n#  RUN add-apt-repository ppa:ubuntu-toolchain-r/test\n#  RUN apt-get update -qq && apt-get install -y gcc-4.9 g++-4.9\n#  RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9\n#   --------------------------------------------------------------------------------\n#   Boost\nWORKDIR /\nRUN curl -sL \"http://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.bz2/download\" | tar xj\nWORKDIR /boost_1_63_0 \nRUN ./bootstrap.sh --with-libraries=program_options,filesystem,system,regex,coroutine,context\nRUN ./b2 cxxflags=-fPIC cflags=-fPIC link=static $BUILD_CORES_BOOST\n#   --------------------------------------------------------------------------------\n#   FreeImage\nWORKDIR /\nRUN wget http://downloads.sourceforge.net/freeimage/FreeImage3170.zip\nRUN unzip FreeImage3170.zip\nWORKDIR /FreeImage\nRUN make $BUILD_CORES \\\n && make install\n#   --------------------------------------------------------------------------------\n#   Assimp\nWORKDIR /\nRUN git clone --depth=1 --branch v3.1.1 https://github.com/assimp/assimp.git assimp\nWORKDIR /assimp/build\nRUN cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make $BUILD_CORES \\\n && make install\n#   --------------------------------------------------------------------------------\n#   Embree\nWORKDIR /\nRUN git clone --depth=1 --branch v2.8.0 https://github.com/embree/embree.git embree\nWORKDIR /embree/build\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D ENABLE_ISPC_SUPPORT=OFF -D RTCORE_TASKING_SYSTEM=INTERNAL -D ENABLE_TUTORIALS=OFF .. \\\n && make $BUILD_CORES \\\n && make install \\\n && cp libembree.so /usr/local/lib\n#   --------------------------------------------------------------------------------\n#   yaml-cpp\nWORKDIR /\nRUN git clone --depth=1 https://github.com/jbeder/yaml-cpp.git yaml-cpp\nWORKDIR /yaml-cpp/build\nRUN cmake -DCMAKE_BUILD_TYPE=Release -D BUILD_SHARED_LIBS=ON .. \\\n && make $BUILD_CORES \\\n && make install\n#   --------------------------------------------------------------------------------\n#   tbb\nWORKDIR /\nRUN git clone --depth=1 --branch 2017_U5 https://github.com/01org/tbb.git tbb\nWORKDIR /tbb\nRUN make $BUILD_CORES\nRUN cp -rf build/linux_*_release/lib* /usr/local/lib/\nRUN cp -rf include/tbb /usr/local/include/\n#   --------------------------------------------------------------------------------\nUSER $NB_USER\nRUN pip install imageio\nRUN conda install -c menpo -y opencv3=3.1.0\n#   --------------------------------------------------------------------------------\nUSER root\nRUN apt-get install openssh-client -qq -y\n#   --------------------------------------------------------------------------------\n#  USER root\n#   Add a project file to the container\n#  WORKDIR /home/$NB_USER/\n#  COPY . /home/$NB_USER/lightmetrica/\n#   Avois clock skew detected warning\n#  RUN find /home/$NB_USER/lightmetrica -print0 | xargs -0 touch\n#   Build lightmetrica\n#  WORKDIR /home/$NB_USER/lightmetrica/build\n#  RUN BOOST_ROOT=\"\" BOOST_INCLUDEDIR=\"/boost_1_63_0\" BOOST_LIBRARYDIR=\"/boost_1_63_0/stage/lib\" cmake -DCMAKE_BUILD_TYPE=Release -D LM_USE_SINGLE_PRECISION=OFF -D LM_USE_DOUBLE_PRECISION=ON .. && make $BUILD_CORES\n#  ENV PATH /lightmetrica/dist/bin/Release:$PATH\n#  ENTRYPOINT [\"lightmetrica\"]\n#   --------------------------------------------------------------------------------\nUSER root\n#  COPY id_rsa /home/$NB_USER/.ssh/id_rsa\n#  RUN chown -R $NB_USER:users /home/$NB_USER/.ssh\nWORKDIR /home/$NB_USER/work\nUSER $NB_USER\n","originalDockerfileUglifiedHash":"7cc0ea42c77108eec8335c3aa2f1f966","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fd102c6a924c65302bbed645e7b568f2aea4d157.dockerfile"}