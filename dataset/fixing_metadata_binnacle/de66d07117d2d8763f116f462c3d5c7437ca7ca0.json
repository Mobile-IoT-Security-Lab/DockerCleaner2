{"seed":381480776,"processedDockerfileHash":"ac070942d2a876d106c2a82873f3325a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER AiiDA Team <info@aiida.net>\nARG uid=1000\nARG gid=1000\n#  # Set correct locale\n#  # For something more complex, as reported by https://hub.docker.com/_/ubuntu/\n#  # and taken from postgres:\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#   Putting the LANG also in the root .bashrc, so that the DB is later\n#   Created with the UTF8 locale\nRUN sed -i '/interactively/iexport LANG=en_US.utf8' /root/.bashrc\n#   This is probably the right command to issue to make sure all users see it as the default locale\nRUN update-locale LANG=en_US.utf8\n#   I don't define it for now (should use the one of ubuntu by default, anyway\n#   jenkins will replace it with 'cat')\n#  CMD [\"/bin/true\"]\n#   install required software\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 vim=2:7.4.1689-3ubuntu1.5 openssh-client=1:7.2p2-4ubuntu2.10 postgresql-client-9.5=9.5.25-0ubuntu0.16.04.1 postgresql-9.5=9.5.25-0ubuntu0.16.04.1 postgresql-server-dev-9.5=9.5.25-0ubuntu0.16.04.1 python2.7=2.7.12-1ubuntu0~16.04.18 -y \\\n && apt-get install --no-install-recommends python-pip=8.1.1-2ubuntu0.6 ipython=2.4.1-1 python2.7-dev=2.7.12-1ubuntu0~16.04.18 -y \\\n && apt-get install --no-install-recommends texlive-base=2015.20160320-1ubuntu0.1 texlive-generic-recommended=2015.20160320-1ubuntu0.1 texlive-fonts-recommended=2015.20160320-1ubuntu0.1 texlive-latex-base=2015.20160320-1ubuntu0.1 texlive-latex-recommended=2015.20160320-1ubuntu0.1 texlive-latex-extra=2015.20160320-1 dvipng=1.15-0ubuntu1 dvidvi=1.0-8etch2 graphviz=2.38.0-12ubuntu2.1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean all\n#   Disable password requests for requests coming from localhost\n#   Of course insecure, but ok for testing\nRUN cp /etc/postgresql/9.5/main/pg_hba.conf /etc/postgresql/9.5/main/pg_hba.conf~ \\\n && perl -npe 's/^([^#]*)md5$/$1trust/' /etc/postgresql/9.5/main/pg_hba.conf~ > /etc/postgresql/9.5/main/pg_hba.conf\n#   install sudo otherwise tests for quicksetup fail,\n#   see #1382. I think this part should be removed in the\n#   future and AiiDA should work also without sudo.\n#  # Also install openssh-server needed for AiiDA tests,\n#  # and openmpi-bin to have 'mpirun',\n#  # and rabbitmq-server needed by AiiDA as the event queue\n#  # and libkrb5-dev for gssapi.h\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo=1.8.16-0ubuntu1.10 locate=4.6.0+git+20160126-2 openssh-server=1:7.2p2-4ubuntu2.10 openmpi-bin=1.10.2-8ubuntu1 rabbitmq-server=3.5.7-1ubuntu0.16.04.4 libkrb5-dev=1.13.2+dfsg-5ubuntu2.2 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean all\n#   locate will not find anything if the DB is not updated.\n#   Should take ~3-4 secs, so ok\nRUN updatedb\n#   update pip and setuptools to get a relatively-recent version\n#   This can be updated in the future\nRUN pip install pip==18.1 setuptools==40.6.2\n#   Put the doubler script\nCOPY doubler.sh /usr/local/bin/\n#   Use messed-up filename to test quoting robustness\nRUN\n#   Put the add script\nCOPY add.sh /usr/local/bin/\n#   add USER (no password); 1000 is the uid of the user in the jenkins docker\nRUN groupadd -g ${gid} jenkins \\\n && useradd -m -s /bin/bash -u ${uid} -g ${gid} jenkins\n#   add to sudoers and don't ask password\nRUN adduser jenkins sudo \\\n && adduser jenkins adm\nRUN echo \"%sudo ALL=(ALL:ALL) NOPASSWD:ALL\" > /etc/sudoers.d/nopwd\nRUN mkdir -p /scratch/jenkins/ \\\n && chown jenkins /scratch/jenkins/ \\\n && chmod o+rX /scratch/\n#  #########################################\n#  ########### Installation Setup ##########\n#  #########################################\n#   install rest of the packages as normal user\nUSER jenkins\n#   set $HOME, create git directory\nENV HOME=\"/home/jenkins\"\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER AiiDA Team <info@aiida.net>\nARG uid=1000\nARG gid=1000\n# # Set correct locale\n# # For something more complex, as reported by https://hub.docker.com/_/ubuntu/\n# # and taken from postgres:\n#  make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#  Putting the LANG also in the root .bashrc, so that the DB is later\n#  Created with the UTF8 locale\nRUN sed -i '/interactively/iexport LANG=en_US.utf8' /root/.bashrc\n#  This is probably the right command to issue to make sure all users see it as the default locale\nRUN update-locale LANG=en_US.utf8\n#  I don't define it for now (should use the one of ubuntu by default, anyway\n#  jenkins will replace it with 'cat')\n# CMD [\"/bin/true\"]\n#  install required software\nRUN apt-get update \\\n && apt-get install git vim openssh-client postgresql-client-9.5 postgresql-9.5 postgresql-server-dev-9.5 python2.7 -y \\\n && apt-get install python-pip ipython python2.7-dev -y \\\n && apt-get install texlive-base texlive-generic-recommended texlive-fonts-recommended texlive-latex-base texlive-latex-recommended texlive-latex-extra dvipng dvidvi graphviz -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean all\n#  Disable password requests for requests coming from localhost\n#  Of course insecure, but ok for testing\nRUN cp /etc/postgresql/9.5/main/pg_hba.conf /etc/postgresql/9.5/main/pg_hba.conf~ \\\n && perl -npe 's/^([^#]*)md5$/$1trust/' /etc/postgresql/9.5/main/pg_hba.conf~ > /etc/postgresql/9.5/main/pg_hba.conf\n#  install sudo otherwise tests for quicksetup fail,\n#  see #1382. I think this part should be removed in the\n#  future and AiiDA should work also without sudo.\n# # Also install openssh-server needed for AiiDA tests,\n# # and openmpi-bin to have 'mpirun',\n# # and rabbitmq-server needed by AiiDA as the event queue\n# # and libkrb5-dev for gssapi.h\nRUN apt-get update \\\n && apt-get install sudo locate openssh-server openmpi-bin rabbitmq-server libkrb5-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean all\n#  locate will not find anything if the DB is not updated.\n#  Should take ~3-4 secs, so ok\nRUN updatedb\n#  update pip and setuptools to get a relatively-recent version\n#  This can be updated in the future\nRUN pip install pip==18.1 setuptools==40.6.2\n#  Put the doubler script\nCOPY doubler.sh /usr/local/bin/\n#  Use messed-up filename to test quoting robustness\nRUN mv /usr/local/bin/doubler.sh /usr/local/bin/d\\\"o'ub ler.sh\n#  Put the add script\nCOPY add.sh /usr/local/bin/\n#  add USER (no password); 1000 is the uid of the user in the jenkins docker\nRUN groupadd -g ${gid} jenkins \\\n && useradd -m -s /bin/bash -u ${uid} -g ${gid} jenkins\n#  add to sudoers and don't ask password\nRUN adduser jenkins sudo \\\n && adduser jenkins adm\nRUN echo \"%sudo ALL=(ALL:ALL) NOPASSWD:ALL\" > /etc/sudoers.d/nopwd\nRUN mkdir -p /scratch/jenkins/ \\\n && chown jenkins /scratch/jenkins/ \\\n && chmod o+rX /scratch/\n# #########################################\n# ########### Installation Setup ##########\n# #########################################\n#  install rest of the packages as normal user\nUSER jenkins\n#  set $HOME, create git directory\nENV HOME=\"/home/jenkins\"\n","injectedSmells":[],"originalDockerfileHash":"d919a43ff6fc2cc5f95882e516bcef48","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER AiiDA Team <info@aiida.net>\nARG uid=1000\nARG gid=1000\n#  # Set correct locale\n#  # For something more complex, as reported by https://hub.docker.com/_/ubuntu/\n#  # and taken from postgres:\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#   Putting the LANG also in the root .bashrc, so that the DB is later\n#   Created with the UTF8 locale\nRUN sed -i '/interactively/iexport LANG=en_US.utf8' /root/.bashrc\n#   This is probably the right command to issue to make sure all users see it as the default locale\nRUN update-locale LANG=en_US.utf8\n#   I don't define it for now (should use the one of ubuntu by default, anyway\n#   jenkins will replace it with 'cat')\n#  CMD [\"/bin/true\"]\n#   install required software\nRUN apt-get update \\\n && apt-get install git vim openssh-client postgresql-client-9.5 postgresql-9.5 postgresql-server-dev-9.5 python2.7 -y \\\n && apt-get install python-pip ipython python2.7-dev -y \\\n && apt-get install texlive-base texlive-generic-recommended texlive-fonts-recommended texlive-latex-base texlive-latex-recommended texlive-latex-extra dvipng dvidvi graphviz -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean all\n#   Disable password requests for requests coming from localhost\n#   Of course insecure, but ok for testing\nRUN cp /etc/postgresql/9.5/main/pg_hba.conf /etc/postgresql/9.5/main/pg_hba.conf~ \\\n && perl -npe 's/^([^#]*)md5$/$1trust/' /etc/postgresql/9.5/main/pg_hba.conf~ > /etc/postgresql/9.5/main/pg_hba.conf\n#   install sudo otherwise tests for quicksetup fail,\n#   see #1382. I think this part should be removed in the\n#   future and AiiDA should work also without sudo.\n#  # Also install openssh-server needed for AiiDA tests,\n#  # and openmpi-bin to have 'mpirun',\n#  # and rabbitmq-server needed by AiiDA as the event queue\n#  # and libkrb5-dev for gssapi.h\nRUN apt-get update \\\n && apt-get install sudo locate openssh-server openmpi-bin rabbitmq-server libkrb5-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean all\n#   locate will not find anything if the DB is not updated.\n#   Should take ~3-4 secs, so ok\nRUN updatedb\n#   update pip and setuptools to get a relatively-recent version\n#   This can be updated in the future\nRUN pip install pip==18.1 setuptools==40.6.2\n#   Put the doubler script\nCOPY doubler.sh /usr/local/bin/\n#   Use messed-up filename to test quoting robustness\nRUN\n#   Put the add script\nCOPY add.sh /usr/local/bin/\n#   add USER (no password); 1000 is the uid of the user in the jenkins docker\nRUN groupadd -g ${gid} jenkins \\\n && useradd -m -s /bin/bash -u ${uid} -g ${gid} jenkins\n#   add to sudoers and don't ask password\nRUN adduser jenkins sudo \\\n && adduser jenkins adm\nRUN echo \"%sudo ALL=(ALL:ALL) NOPASSWD:ALL\" > /etc/sudoers.d/nopwd\nRUN mkdir -p /scratch/jenkins/ \\\n && chown jenkins /scratch/jenkins/ \\\n && chmod o+rX /scratch/\n#  #########################################\n#  ########### Installation Setup ##########\n#  #########################################\n#   install rest of the packages as normal user\nUSER jenkins\n#   set $HOME, create git directory\nENV HOME=\"/home/jenkins\"\n","originalDockerfileUglifiedHash":"60aebe5bd5191644a581c3e22a2e48d8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/de66d07117d2d8763f116f462c3d5c7437ca7ca0.dockerfile"}