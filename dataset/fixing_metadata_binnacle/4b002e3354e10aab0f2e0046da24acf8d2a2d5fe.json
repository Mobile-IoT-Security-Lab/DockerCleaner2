{"seed":1953484061,"processedDockerfileHash":"d58ae89f69619424e9c3fe89267dae2e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.2-fpm-stretch\nARG log_errors\nARG display_errors\nARG site_name\nARG app_env\nARG app_secret\nARG trusted_proxies\nARG trusted_hosts\nARG no_reply_address\nARG mailer_url\nARG database_url\nARG git_sha\nARG git_branch\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libpq-dev libcurl4-openssl-dev libpng-dev libjpeg-dev zlib1g-dev ruby gnupg libfreetype6-dev -y \\\n && pecl install apcu_bc-1.0.4 \\\n && apt-get install --no-install-recommends libpq-dev -y \\\n && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n && docker-php-ext-install pdo pdo_pgsql pgsql \\\n && docker-php-ext-install mbstring curl iconv opcache \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include --with-jpeg-dir=/usr/include \\\n && docker-php-ext-install gd \\\n && docker-php-ext-enable apcu opcache gd pdo pdo_pgsql pgsql \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install --no-install-recommends nodejs -y \\\n && apt-get install --no-install-recommends zip git -y \\\n && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php composer-setup.php --install-dir=/usr/bin --filename=composer \\\n && php -r \"unlink('composer-setup.php');\" \\\n && rm -r /var/lib/apt/lists/* /tmp/*\nCOPY package.json /var/www/\nRUN cd /var/www \\\n && npm install\n#   PHP-FPM Config\n#   prod only: opcache.validate_timestamps=0\n#   composer dump-autoload --optimize --no-dev --classmap-authoritative\nRUN echo \"[www] \\n user = www-data \\n group = www-data \\n listen = 127.0.0.1:9000 \\n listen.backlog = 65536 \\n pm = static \\n pm.max_children = 2 \\n ;pm.max_requests = 0 \\n ;pm.status_path = /status \\n php_admin_value[error_reporting]=0 \\n php_admin_flag[log_errors] = ${log_errors} \\n php_flag[display_errors] = ${display_errors} \\n php_value[memory_limit] = 256M \\n php_value[opcache.enable] = 1 \\n php_value[opcache.max_accelerated_files] = 20000 \\n php_value[opcache.memory_consumption]=256 \\n php_value[realpath_cache_size]=4096K \\n php_value[realpath_cache_ttl]=600 \" > /usr/local/etc/php-fpm.d/www.conf\n#   Generate ENV\nCOPY ./.env.erb /tmp\nRUN erb -T - site_name=$site_name app_env=$app_env app_secret=$app_secret trusted_proxies=$trusted_proxies trusted_hosts=$trusted_hosts database_url=$database_url aws_ssm_name_db_url=$aws_ssm_name_db_url aws_ssm_region=$aws_ssm_region no_reply_address=$no_reply_address mailer_url=$mailer_url git_sha=$git_sha git_branch=$git_branch /tmp/.env.erb > /tmp/.env\n#   build prod-like stuff\nCOPY assets/ /var/www/assets/\nCOPY config/ /var/www/config/\nCOPY public/ /var/www/public/\nCOPY src/ /var/www/src/\nCOPY templates/ /var/www/templates/\nCOPY translations/ /var/www/translations/\nCOPY composer.json /var/www/\nCOPY fontello.json /var/www/\nCOPY phpunit.xml.dist /var/www/\nCOPY webpack.config.js /var/www\n#   uncomment me for lighter container and slower build\n#   RUN apt-get purge   -y ruby\nRUN echo \"cd /var/www; cp /tmp/.env /var/www/.env; chown www-data:www-data /var/www/.env; composer install; npm run build-${app_env}; cp /tmp/.env /var/www/.env \\\n && rm /tmp/.env \\\n && rm /tmp/env.erb; chown www-data:www-data /var/www/.env; mkdir -p ./public/media/; chown www-data:www-data public/media -R; mkdir -p ./public/submission_images/; chown www-data:www-data public/submission_images -R; mkdir -p ./var/cache/; chown www-data:www-data ./var/cache/ -R; bin/console doctrine:migrations:migrate --no-interaction; bin/console app:user:add -a -p devdevdev dev; cd /var/www/public; php-fpm\" > /start.sh \\\n && chmod +x /start.sh\nWORKDIR /var/www/public\nCMD /start.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.2-fpm-stretch\nARG log_errors\nARG display_errors\nARG site_name\nARG app_env\nARG app_secret\nARG trusted_proxies\nARG trusted_hosts\nARG no_reply_address\nARG mailer_url\nARG database_url\nARG git_sha\nARG git_branch\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install libpq-dev libcurl4-openssl-dev libpng-dev libjpeg-dev zlib1g-dev ruby gnupg libfreetype6-dev -y \\\n && pecl install apcu_bc-1.0.4 \\\n && apt-get install libpq-dev -y \\\n && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n && docker-php-ext-install pdo pdo_pgsql pgsql \\\n && docker-php-ext-install mbstring curl iconv opcache \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include --with-jpeg-dir=/usr/include \\\n && docker-php-ext-install gd \\\n && docker-php-ext-enable apcu opcache gd pdo pdo_pgsql pgsql \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs -y \\\n && apt-get install zip git -y \\\n && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php composer-setup.php --install-dir=/usr/bin --filename=composer \\\n && php -r \"unlink('composer-setup.php');\" \\\n && rm -r /var/lib/apt/lists/* /tmp/*\nADD package.json /var/www/\nRUN cd /var/www \\\n && npm install\n#  PHP-FPM Config\n#  prod only: opcache.validate_timestamps=0\n#  composer dump-autoload --optimize --no-dev --classmap-authoritative\nRUN echo \"[www] \\n user = www-data \\n group = www-data \\n listen = 127.0.0.1:9000 \\n listen.backlog = 65536 \\n pm = static \\n pm.max_children = 2 \\n ;pm.max_requests = 0 \\n ;pm.status_path = /status \\n php_admin_value[error_reporting]=0 \\n php_admin_flag[log_errors] = ${log_errors} \\n php_flag[display_errors] = ${display_errors} \\n php_value[memory_limit] = 256M \\n php_value[opcache.enable] = 1 \\n php_value[opcache.max_accelerated_files] = 20000 \\n php_value[opcache.memory_consumption]=256 \\n php_value[realpath_cache_size]=4096K \\n php_value[realpath_cache_ttl]=600 \" > /usr/local/etc/php-fpm.d/www.conf\n#  Generate ENV\nADD ./.env.erb /tmp\nRUN erb -T - site_name=$site_name app_env=$app_env app_secret=$app_secret trusted_proxies=$trusted_proxies trusted_hosts=$trusted_hosts database_url=$database_url aws_ssm_name_db_url=$aws_ssm_name_db_url aws_ssm_region=$aws_ssm_region no_reply_address=$no_reply_address mailer_url=$mailer_url git_sha=$git_sha git_branch=$git_branch /tmp/.env.erb > /tmp/.env\n#  build prod-like stuff\nADD assets/ /var/www/assets/\nADD config/ /var/www/config/\nADD public/ /var/www/public/\nADD src/ /var/www/src/\nADD templates/ /var/www/templates/\nADD translations/ /var/www/translations/\nADD composer.json /var/www/\nADD fontello.json /var/www/\nADD phpunit.xml.dist /var/www/\nADD webpack.config.js /var/www\n#  uncomment me for lighter container and slower build\n#  RUN apt-get purge   -y ruby\nRUN echo \"cd /var/www; cp /tmp/.env /var/www/.env; chown www-data:www-data /var/www/.env; composer install; npm run build-${app_env}; cp /tmp/.env /var/www/.env \\\n && rm /tmp/.env \\\n && rm /tmp/env.erb; chown www-data:www-data /var/www/.env; mkdir -p ./public/media/; chown www-data:www-data public/media -R; mkdir -p ./public/submission_images/; chown www-data:www-data public/submission_images -R; mkdir -p ./var/cache/; chown www-data:www-data ./var/cache/ -R; bin/console doctrine:migrations:migrate --no-interaction; bin/console app:user:add -a -p devdevdev dev; cd /var/www/public; php-fpm\" > /start.sh \\\n && chmod +x /start.sh\nWORKDIR /var/www/public\nCMD /start.sh\n","injectedSmells":[],"originalDockerfileHash":"b417311dcc65dc96c8ecbdd8746fcd1d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.2-fpm-stretch\nARG log_errors\nARG display_errors\nARG site_name\nARG app_env\nARG app_secret\nARG trusted_proxies\nARG trusted_hosts\nARG no_reply_address\nARG mailer_url\nARG database_url\nARG git_sha\nARG git_branch\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install libpq-dev libcurl4-openssl-dev libpng-dev libjpeg-dev zlib1g-dev ruby gnupg libfreetype6-dev -y \\\n && pecl install apcu_bc-1.0.4 \\\n && apt-get install libpq-dev -y \\\n && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n && docker-php-ext-install pdo pdo_pgsql pgsql \\\n && docker-php-ext-install mbstring curl iconv opcache \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include --with-jpeg-dir=/usr/include \\\n && docker-php-ext-install gd \\\n && docker-php-ext-enable apcu opcache gd pdo pdo_pgsql pgsql \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs -y \\\n && apt-get install zip git -y \\\n && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php composer-setup.php --install-dir=/usr/bin --filename=composer \\\n && php -r \"unlink('composer-setup.php');\" \\\n && rm -r /var/lib/apt/lists/* /tmp/*\nADD package.json /var/www/\nRUN cd /var/www \\\n && npm install\n#   PHP-FPM Config\n#   prod only: opcache.validate_timestamps=0\n#   composer dump-autoload --optimize --no-dev --classmap-authoritative\nRUN echo \"[www] \\n user = www-data \\n group = www-data \\n listen = 127.0.0.1:9000 \\n listen.backlog = 65536 \\n pm = static \\n pm.max_children = 2 \\n ;pm.max_requests = 0 \\n ;pm.status_path = /status \\n php_admin_value[error_reporting]=0 \\n php_admin_flag[log_errors] = ${log_errors} \\n php_flag[display_errors] = ${display_errors} \\n php_value[memory_limit] = 256M \\n php_value[opcache.enable] = 1 \\n php_value[opcache.max_accelerated_files] = 20000 \\n php_value[opcache.memory_consumption]=256 \\n php_value[realpath_cache_size]=4096K \\n php_value[realpath_cache_ttl]=600 \" > /usr/local/etc/php-fpm.d/www.conf\n#   Generate ENV\nADD ./.env.erb /tmp\nRUN erb -T - site_name=$site_name app_env=$app_env app_secret=$app_secret trusted_proxies=$trusted_proxies trusted_hosts=$trusted_hosts database_url=$database_url aws_ssm_name_db_url=$aws_ssm_name_db_url aws_ssm_region=$aws_ssm_region no_reply_address=$no_reply_address mailer_url=$mailer_url git_sha=$git_sha git_branch=$git_branch /tmp/.env.erb > /tmp/.env\n#   build prod-like stuff\nADD assets/ /var/www/assets/\nADD config/ /var/www/config/\nADD public/ /var/www/public/\nADD src/ /var/www/src/\nADD templates/ /var/www/templates/\nADD translations/ /var/www/translations/\nADD composer.json /var/www/\nADD fontello.json /var/www/\nADD phpunit.xml.dist /var/www/\nADD webpack.config.js /var/www\n#   uncomment me for lighter container and slower build\n#   RUN apt-get purge   -y ruby\nRUN echo \"cd /var/www; cp /tmp/.env /var/www/.env; chown www-data:www-data /var/www/.env; composer install; npm run build-${app_env}; cp /tmp/.env /var/www/.env \\\n && rm /tmp/.env \\\n && rm /tmp/env.erb; chown www-data:www-data /var/www/.env; mkdir -p ./public/media/; chown www-data:www-data public/media -R; mkdir -p ./public/submission_images/; chown www-data:www-data public/submission_images -R; mkdir -p ./var/cache/; chown www-data:www-data ./var/cache/ -R; bin/console doctrine:migrations:migrate --no-interaction; bin/console app:user:add -a -p devdevdev dev; cd /var/www/public; php-fpm\" > /start.sh \\\n && chmod +x /start.sh\nWORKDIR /var/www/public\nCMD /start.sh\n","originalDockerfileUglifiedHash":"39afd1ea4bc38c3daed0032a1d2d28bf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4b002e3354e10aab0f2e0046da24acf8d2a2d5fe.dockerfile"}