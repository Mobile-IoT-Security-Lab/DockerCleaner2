{"seed":836349416,"processedDockerfileHash":"54195cfea50a7df0ca5f9784bde71193","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This file describes the standard way to build Docker on aarch64, using docker\n#\n#   Usage:\n#\n#   # Assemble the full dev environment. This is slow the first time.\n#   docker build -t docker -f Dockerfile.aarch64 .\n#\n#   # Mount your source in an interactive container for quick testing:\n#   docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash\n#\n#   # Run the test suite:\n#   docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py\n#\n#   Note: AppArmor used to mess with privileged mode, but this is no longer\n#   the case. Therefore, you don't have to disable it anymore.\n#\nFROM debian:stretch\n#   allow replacing httpredir or deb mirror\nARG APT_MIRROR=deb.debian.org\nRUN sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list\n#   Packaged dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apparmor=2.11.0-3+deb9u2 apt-utils=1.4.11 aufs-tools=1:4.1+20161219-1 automake=1:1.15-6 bash-completion=1:2.1-4.3 bsdmainutils=9.0.12+nmu1 btrfs-tools=4.7.3-1 build-essential=12.3 cmake=3.7.2-1 createrepo=0.10.3-1 curl=7.52.1-5+deb9u16 dpkg-sig=0.13.1+nmu4 gcc=4:6.3.0-4 git=1:2.11.0-3+deb9u7 iptables=1.6.0+snapshot20161117-6 jq=1.5+dfsg-1.3 less=481-2.1 libapparmor-dev=2.11.0-3+deb9u2 libcap-dev=1:2.25-1 libdevmapper-dev=2:1.02.137-2 libnl-3-dev=3.2.27-2 libprotobuf-c0-dev libprotobuf-dev=3.0.0-9 libseccomp-dev=2.3.1-2.1+deb9u1 libsystemd-dev=232-25+deb9u14 libtool=2.4.6-2 libudev-dev=232-25+deb9u14 mercurial=4.0-1+deb9u2 net-tools=1.60+git20161116.90da8a0-1 pigz=2.3.4-1 pkg-config=0.29-4+b1 protobuf-compiler=3.0.0-9 protobuf-c-compiler=1.2.1-2 python-backports.ssl-match-hostname=3.5.0.1-1 python-dev=2.7.13-2 python-mock=2.0.0-3 python-pip=9.0.1-2+deb9u2 python-requests=2.12.4-1 python-setuptools=33.1.1-1 python-websocket=0.37.0-2 python-wheel=0.29.0-2 tar=1.29b-1.1+deb9u1 thin-provisioning-tools=0.6.1-4+b1 vim=2:8.0.0197-4+deb9u7 vim-common=2:8.0.0197-4+deb9u7 xfsprogs=4.9.0+nmu1 zip=3.0-11+b1 -y\n#   Install Go\n#   IMPORTANT: When updating this please note that stdlib archive/tar pkg is vendored\nENV GO_VERSION=\"1.9.2\"\nRUN curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-arm64.tar.gz\" | tar -xzC /usr/local\nENV PATH=\"/go/bin:/usr/local/go/bin:$PATH\"\nENV GOPATH=\"/go\"\n#   Only install one version of the registry, because old version which support\n#   schema1 manifests is not working on ARM64, we should skip integration-cli\n#   tests for schema1 manifests on ARM64.\nENV REGISTRY_COMMIT=\"47a064d4195a9b56133891bbb13620c3ac83a827\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/distribution.git \"$GOPATH/src/github.com/docker/distribution\" \\\n && (cd \"$GOPATH/src/github.com/docker/distribution\" \\\n && git checkout -q \"$REGISTRY_COMMIT\" ) \\\n && GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\" go build -o /usr/local/bin/registry-v2 github.com/docker/distribution/cmd/registry \\\n && rm -rf \"$GOPATH\"\n#   Install notary and notary-server\nENV NOTARY_VERSION=\"v0.5.0\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/notary.git \"$GOPATH/src/github.com/docker/notary\" \\\n && (cd \"$GOPATH/src/github.com/docker/notary\" \\\n && git checkout -q \"$NOTARY_VERSION\" ) \\\n && GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" go build -o /usr/local/bin/notary-server github.com/docker/notary/cmd/notary-server \\\n && GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" go build -o /usr/local/bin/notary github.com/docker/notary/cmd/notary \\\n && rm -rf \"$GOPATH\"\n#   Get the \"docker-py\" source so we can run their integration tests\nENV DOCKER_PY_COMMIT=\"1d6b5b203222ba5df7dedfcd1ee061a452f99c8a\"\n#   To run integration tests docker-pycreds is required.\nRUN git clone https://github.com/docker/docker-py.git /docker-py \\\n && cd /docker-py \\\n && git checkout -q $DOCKER_PY_COMMIT \\\n && pip install docker-pycreds==0.2.1 \\\n && pip install -r test-requirements.txt\n#   Install yamllint for validating swagger.yaml\nRUN pip install yamllint==1.5.0\n#   Install go-swagger for validating swagger.yaml\nENV GO_SWAGGER_COMMIT=\"c28258affb0b6251755d92489ef685af8d4ff3eb\"\nRUN git clone https://github.com/go-swagger/go-swagger.git /go/src/github.com/go-swagger/go-swagger \\\n && (cd /go/src/github.com/go-swagger/go-swagger \\\n && git checkout -q $GO_SWAGGER_COMMIT ) \\\n && go install -v github.com/go-swagger/go-swagger/cmd/swagger\n#   Set user.email so crosbymichael's in-container merge commits go smoothly\nRUN git config --global user.email 'docker-dummy@example.com'\n#   Add an unprivileged user to be used for tests which need it\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser\nVOLUME /var/lib/docker\nWORKDIR /go/src/github.com/docker/docker\nENV DOCKER_BUILDTAGS=\"apparmor seccomp selinux\"\n#   Let us use a .bashrc file\nRUN ln -sfv $PWD/.bashrc ~/.bashrc\n#   Register Docker's bash completion.\nRUN ln -sv $PWD/contrib/completion/bash/docker /etc/bash_completion.d/docker\n#   Get useful and necessary Hub images so we can \"docker load\" locally instead of pulling\nCOPY contrib/download-frozen-image-v2.sh /go/src/github.com/docker/docker/contrib/\nRUN ./contrib/download-frozen-image-v2.sh /docker-frozen-images buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c\n#   See also ensureFrozenImagesLinux() in \"integration-cli/fixtures_linux_daemon_test.go\" (which needs to be updated when adding images to this list)\n#   Install tomlv, vndr, runc, containerd, tini, docker-proxy\n#   Please edit hack/dockerfile/install-binaries.sh to update them.\nCOPY hack/dockerfile/binaries-commits /tmp/binaries-commits\nCOPY hack/dockerfile/install-binaries.sh /tmp/install-binaries.sh\nRUN /tmp/install-binaries.sh tomlv vndr runc containerd tini proxy dockercli gometalinter\nENV PATH=\"/usr/local/cli:$PATH\"\n#   Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n#   Options for hack/validate/gometalinter\nENV GOMETALINTER_OPTS=\"--deadline=4m -j2\"\n#   Upload docker source\nCOPY . /go/src/github.com/docker/docker\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This file describes the standard way to build Docker on aarch64, using docker\n#\n#  Usage:\n#\n#  # Assemble the full dev environment. This is slow the first time.\n#  docker build -t docker -f Dockerfile.aarch64 .\n#\n#  # Mount your source in an interactive container for quick testing:\n#  docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash\n#\n#  # Run the test suite:\n#  docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py\n#\n#  Note: AppArmor used to mess with privileged mode, but this is no longer\n#  the case. Therefore, you don't have to disable it anymore.\n#\nFROM debian:stretch\n#  allow replacing httpredir or deb mirror\nARG APT_MIRROR=deb.debian.org\nRUN sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list\n#  Packaged dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apparmor apt-utils aufs-tools automake bash-completion bsdmainutils btrfs-tools build-essential cmake createrepo curl dpkg-sig gcc git iptables jq less libapparmor-dev libcap-dev libdevmapper-dev libnl-3-dev libprotobuf-c0-dev libprotobuf-dev libseccomp-dev libsystemd-dev libtool libudev-dev mercurial net-tools pigz pkg-config protobuf-compiler protobuf-c-compiler python-backports.ssl-match-hostname python-dev python-mock python-pip python-requests python-setuptools python-websocket python-wheel tar thin-provisioning-tools vim vim-common xfsprogs zip -y\n#  Install Go\n#  IMPORTANT: When updating this please note that stdlib archive/tar pkg is vendored\nENV GO_VERSION=\"1.9.2\"\nRUN curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-arm64.tar.gz\" | tar -xzC /usr/local\nENV PATH=\"/go/bin:/usr/local/go/bin:$PATH\"\nENV GOPATH=\"/go\"\n#  Only install one version of the registry, because old version which support\n#  schema1 manifests is not working on ARM64, we should skip integration-cli\n#  tests for schema1 manifests on ARM64.\nENV REGISTRY_COMMIT=\"47a064d4195a9b56133891bbb13620c3ac83a827\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/distribution.git \"$GOPATH/src/github.com/docker/distribution\" \\\n && (cd \"$GOPATH/src/github.com/docker/distribution\" \\\n && git checkout -q \"$REGISTRY_COMMIT\" ) \\\n && GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\" go build -o /usr/local/bin/registry-v2 github.com/docker/distribution/cmd/registry \\\n && rm -rf \"$GOPATH\"\n#  Install notary and notary-server\nENV NOTARY_VERSION=\"v0.5.0\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/notary.git \"$GOPATH/src/github.com/docker/notary\" \\\n && (cd \"$GOPATH/src/github.com/docker/notary\" \\\n && git checkout -q \"$NOTARY_VERSION\" ) \\\n && GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" go build -o /usr/local/bin/notary-server github.com/docker/notary/cmd/notary-server \\\n && GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" go build -o /usr/local/bin/notary github.com/docker/notary/cmd/notary \\\n && rm -rf \"$GOPATH\"\n#  Get the \"docker-py\" source so we can run their integration tests\nENV DOCKER_PY_COMMIT=\"1d6b5b203222ba5df7dedfcd1ee061a452f99c8a\"\n#  To run integration tests docker-pycreds is required.\nRUN git clone https://github.com/docker/docker-py.git /docker-py \\\n && cd /docker-py \\\n && git checkout -q $DOCKER_PY_COMMIT \\\n && pip install docker-pycreds==0.2.1 \\\n && pip install -r test-requirements.txt\n#  Install yamllint for validating swagger.yaml\nRUN pip install yamllint==1.5.0\n#  Install go-swagger for validating swagger.yaml\nENV GO_SWAGGER_COMMIT=\"c28258affb0b6251755d92489ef685af8d4ff3eb\"\nRUN git clone https://github.com/go-swagger/go-swagger.git /go/src/github.com/go-swagger/go-swagger \\\n && (cd /go/src/github.com/go-swagger/go-swagger \\\n && git checkout -q $GO_SWAGGER_COMMIT ) \\\n && go install -v github.com/go-swagger/go-swagger/cmd/swagger\n#  Set user.email so crosbymichael's in-container merge commits go smoothly\nRUN git config --global user.email 'docker-dummy@example.com'\n#  Add an unprivileged user to be used for tests which need it\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser\nVOLUME /var/lib/docker\nWORKDIR /go/src/github.com/docker/docker\nENV DOCKER_BUILDTAGS=\"apparmor seccomp selinux\"\n#  Let us use a .bashrc file\nRUN ln -sfv $PWD/.bashrc ~/.bashrc\n#  Register Docker's bash completion.\nRUN ln -sv $PWD/contrib/completion/bash/docker /etc/bash_completion.d/docker\n#  Get useful and necessary Hub images so we can \"docker load\" locally instead of pulling\nCOPY contrib/download-frozen-image-v2.sh /go/src/github.com/docker/docker/contrib/\nRUN ./contrib/download-frozen-image-v2.sh /docker-frozen-images buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c\n#  See also ensureFrozenImagesLinux() in \"integration-cli/fixtures_linux_daemon_test.go\" (which needs to be updated when adding images to this list)\n#  Install tomlv, vndr, runc, containerd, tini, docker-proxy\n#  Please edit hack/dockerfile/install-binaries.sh to update them.\nCOPY hack/dockerfile/binaries-commits /tmp/binaries-commits\nCOPY hack/dockerfile/install-binaries.sh /tmp/install-binaries.sh\nRUN /tmp/install-binaries.sh tomlv vndr runc containerd tini proxy dockercli gometalinter\nENV PATH=\"/usr/local/cli:$PATH\"\n#  Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n#  Options for hack/validate/gometalinter\nENV GOMETALINTER_OPTS=\"--deadline=4m -j2\"\n#  Upload docker source\nCOPY . /go/src/github.com/docker/docker\n","injectedSmells":[],"originalDockerfileHash":"4cab7b113fa660b20b46bc0131d9ade8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This file describes the standard way to build Docker on aarch64, using docker\n#\n#   Usage:\n#\n#   # Assemble the full dev environment. This is slow the first time.\n#   docker build -t docker -f Dockerfile.aarch64 .\n#\n#   # Mount your source in an interactive container for quick testing:\n#   docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash\n#\n#   # Run the test suite:\n#   docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py\n#\n#   Note: AppArmor used to mess with privileged mode, but this is no longer\n#   the case. Therefore, you don't have to disable it anymore.\n#\nFROM debian:stretch\n#   allow replacing httpredir or deb mirror\nARG APT_MIRROR=deb.debian.org\nRUN sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list\n#   Packaged dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apparmor apt-utils aufs-tools automake bash-completion bsdmainutils btrfs-tools build-essential cmake createrepo curl dpkg-sig gcc git iptables jq less libapparmor-dev libcap-dev libdevmapper-dev libnl-3-dev libprotobuf-c0-dev libprotobuf-dev libseccomp-dev libsystemd-dev libtool libudev-dev mercurial net-tools pigz pkg-config protobuf-compiler protobuf-c-compiler python-backports.ssl-match-hostname python-dev python-mock python-pip python-requests python-setuptools python-websocket python-wheel tar thin-provisioning-tools vim vim-common xfsprogs zip -y\n#   Install Go\n#   IMPORTANT: When updating this please note that stdlib archive/tar pkg is vendored\nENV GO_VERSION=\"1.9.2\"\nRUN curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-arm64.tar.gz\" | tar -xzC /usr/local\nENV PATH=\"/go/bin:/usr/local/go/bin:$PATH\"\nENV GOPATH=\"/go\"\n#   Only install one version of the registry, because old version which support\n#   schema1 manifests is not working on ARM64, we should skip integration-cli\n#   tests for schema1 manifests on ARM64.\nENV REGISTRY_COMMIT=\"47a064d4195a9b56133891bbb13620c3ac83a827\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/distribution.git \"$GOPATH/src/github.com/docker/distribution\" \\\n && (cd \"$GOPATH/src/github.com/docker/distribution\" \\\n && git checkout -q \"$REGISTRY_COMMIT\" ) \\\n && GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\" go build -o /usr/local/bin/registry-v2 github.com/docker/distribution/cmd/registry \\\n && rm -rf \"$GOPATH\"\n#   Install notary and notary-server\nENV NOTARY_VERSION=\"v0.5.0\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/docker/notary.git \"$GOPATH/src/github.com/docker/notary\" \\\n && (cd \"$GOPATH/src/github.com/docker/notary\" \\\n && git checkout -q \"$NOTARY_VERSION\" ) \\\n && GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" go build -o /usr/local/bin/notary-server github.com/docker/notary/cmd/notary-server \\\n && GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" go build -o /usr/local/bin/notary github.com/docker/notary/cmd/notary \\\n && rm -rf \"$GOPATH\"\n#   Get the \"docker-py\" source so we can run their integration tests\nENV DOCKER_PY_COMMIT=\"1d6b5b203222ba5df7dedfcd1ee061a452f99c8a\"\n#   To run integration tests docker-pycreds is required.\nRUN git clone https://github.com/docker/docker-py.git /docker-py \\\n && cd /docker-py \\\n && git checkout -q $DOCKER_PY_COMMIT \\\n && pip install docker-pycreds==0.2.1 \\\n && pip install -r test-requirements.txt\n#   Install yamllint for validating swagger.yaml\nRUN pip install yamllint==1.5.0\n#   Install go-swagger for validating swagger.yaml\nENV GO_SWAGGER_COMMIT=\"c28258affb0b6251755d92489ef685af8d4ff3eb\"\nRUN git clone https://github.com/go-swagger/go-swagger.git /go/src/github.com/go-swagger/go-swagger \\\n && (cd /go/src/github.com/go-swagger/go-swagger \\\n && git checkout -q $GO_SWAGGER_COMMIT ) \\\n && go install -v github.com/go-swagger/go-swagger/cmd/swagger\n#   Set user.email so crosbymichael's in-container merge commits go smoothly\nRUN git config --global user.email 'docker-dummy@example.com'\n#   Add an unprivileged user to be used for tests which need it\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser\nVOLUME /var/lib/docker\nWORKDIR /go/src/github.com/docker/docker\nENV DOCKER_BUILDTAGS=\"apparmor seccomp selinux\"\n#   Let us use a .bashrc file\nRUN ln -sfv $PWD/.bashrc ~/.bashrc\n#   Register Docker's bash completion.\nRUN ln -sv $PWD/contrib/completion/bash/docker /etc/bash_completion.d/docker\n#   Get useful and necessary Hub images so we can \"docker load\" locally instead of pulling\nCOPY contrib/download-frozen-image-v2.sh /go/src/github.com/docker/docker/contrib/\nRUN ./contrib/download-frozen-image-v2.sh /docker-frozen-images buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c\n#   See also ensureFrozenImagesLinux() in \"integration-cli/fixtures_linux_daemon_test.go\" (which needs to be updated when adding images to this list)\n#   Install tomlv, vndr, runc, containerd, tini, docker-proxy\n#   Please edit hack/dockerfile/install-binaries.sh to update them.\nCOPY hack/dockerfile/binaries-commits /tmp/binaries-commits\nCOPY hack/dockerfile/install-binaries.sh /tmp/install-binaries.sh\nRUN /tmp/install-binaries.sh tomlv vndr runc containerd tini proxy dockercli gometalinter\nENV PATH=\"/usr/local/cli:$PATH\"\n#   Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n#   Options for hack/validate/gometalinter\nENV GOMETALINTER_OPTS=\"--deadline=4m -j2\"\n#   Upload docker source\nCOPY . /go/src/github.com/docker/docker\n","originalDockerfileUglifiedHash":"c7122cf28fa43774ada131cd0b4accfd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e7f422d3ca03a7fea7d781d88ff0923bd2663660.dockerfile"}