{"seed":1129752613,"processedDockerfileHash":"6cbbd969915a8f0141b1c2cd7bc831a4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  latest=8.1   wheezy=7.8\nFROM debian:7.9\n#  FROM    supermy/docker-debian:7\nMAINTAINER supermy <springclick@gmail.com>\nRUN sed -i '1,3d' /etc/apt/sources.list \\\n && echo '#hello' >> /etc/apt/sources.list \\\n && sed -i '1a deb http://mirrors.163.com/debian/ wheezy main non-free contrib \\n deb http://mirrors.163.com/debian/ wheezy-proposed-updates main contrib non-free \\n deb http://mirrors.163.com/debian-security/ wheezy/updates main contrib non-free \\n deb-src http://mirrors.163.com/debian/ wheezy main non-free contrib \\n deb-src http://mirrors.163.com/debian/ wheezy-proposed-updates main contrib non-free \\n deb-src http://mirrors.163.com/debian-security/ wheezy/updates main contrib non-free \\n ' /etc/apt/sources.list\n#   sohu 更新服务器：\n#  RUN sed -i '1a \\\n#      deb http://mirrors.sohu.com/debian/ wheezy main non-free contrib  \\\n#      deb http://mirrors.sohu.com/debian/ wheezy-proposed-updates main non-free contrib \\\n#      deb http://mirrors.sohu.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n#      deb-src http://mirrors.sohu.com/debian/ wheezy main non-free contrib \\\n#      deb-src http://mirrors.sohu.com/debian/ wheezy-proposed-updates main non-free contrib \\\n#      deb-src http://mirrors.sohu.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n#      ' /etc/apt/sources.list\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends gcc libpcre3 libpcre3-dev openssl libssl-dev make wget libreadline-dev libncurses-dev graphicsmagick -qqy\n#  RUN export http_proxy=http://172.16.71.25:8087\n#  -e http_proxy=172.16.71.25:8087\nWORKDIR /tmp\nRUN wget http://tengine.taobao.org/download/tengine-2.1.2.tar.gz \\\n && wget --no-check-certificate https://openresty.org/download/openresty-1.9.7.4.tar.gz \\\n && wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz \\\n && tar xvf tengine-2.1.2.tar.gz \\\n && tar zxf openresty-1.9.7.4.tar.gz \\\n && tar zxf ngx_cache_purge-2.3.tar.gz\nWORKDIR /tmp/openresty-1.9.7.4\nRUN ./configure --prefix=/usr/local/openresty --with-luajit \\\n && make \\\n && make install\nWORKDIR /tmp/openresty-1.9.7.4/bundle/lua-5.1.5\nRUN make linux \\\n && make install\n#\n#  WORKDIR /tmp\n#  RUN wget http://bitop.luajit.org/download/LuaBitOp-1.0.2.tar.gz\n#  RUN tar zxf LuaBitOp-1.0.2.tar.gz\n#  WORKDIR /tmp/LuaBitOp-1.0.2\n#  RUN make && make install\n#\n#  WORKDIR /tmp\n#  COPY lua-lib/lua-resty-kafka /tmp/lua-resty-kafka\n#  WORKDIR /tmp/lua-resty-kafka\n#  RUN make && make install\n#  ##waf begin naxsi 应用防火墙 抵御SQL注入、跨站脚本、跨域伪造请求、本地和远程文件包含漏洞\nENV NAXSI_VERSION=\"master\"\nWORKDIR /tmp\nRUN gpg --keyserver keyserver.ubuntu.com --recv-keys 2685AED4 7BD9BF62 A1C052F8 \\\n && apt-get install --no-install-recommends ca-certificates -y \\\n && wget \"https://github.com/nbs-system/naxsi/archive/${NAXSI_VERSION}.tar.gz\" -O nginx-${NAXSI_VERSION}.tar.gz \\\n && tar zxvf nginx-${NAXSI_VERSION}.tar.gz\n#  ##waf end\nWORKDIR /tmp/tengine-2.1.2\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr_local_lib.conf\n#  更新，混淆版本标识\nRUN sed -in 's/nginx\\//myserver\\//g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/1.6.2/8.8/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/Tengine\\\"/myserver\\\"/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/2.1.0/8.8/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/NGINX\\\"/myserver\\\"/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/2001000/800800/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN cd /tmp/tengine-2.1.2 \\\n && ./configure --with-ld-opt='-Wl,-rpath,/usr/local/lib/' --add-module=/tmp/openresty-1.9.7.4/bundle/redis2-nginx-module-0.12/ --add-module=/tmp/openresty-1.9.7.4/bundle/ngx_devel_kit-0.2.19/ --add-module=/tmp/openresty-1.9.7.4/bundle/set-misc-nginx-module-0.30/ --add-module=/tmp/openresty-1.9.7.4/bundle/echo-nginx-module-0.58/ --add-module=/tmp/openresty-1.9.7.4/bundle/ngx_lua-0.10.2/ --add-module=/tmp/ngx_cache_purge-2.3/ --add-module=/tmp/naxsi-${NAXSI_VERSION}/naxsi_src/ --with-ld-opt=\"-L /usr/local/lib\" \\\n && make \\\n && make install\nCOPY nginx.conf /usr/local/nginx/conf/nginx.conf\nWORKDIR /root\n#  RUN rm -rf /tmp/tengine-*\n#  RUN rm -rf /tmp/lua-*\nENV HOME=\"/root\"\nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh\nRUN mkdir -p /etc/my_init.d\n#  nginx 配置文件\nCOPY http.d /usr/local/nginx/conf/http.d\nCOPY server.d /usr/local/nginx/conf/server.d\nCOPY naxsi.d /usr/local/nginx/conf/naxsi.d\nRUN cp /tmp/naxsi-master/naxsi_config/naxsi_core.rules /usr/local/nginx/conf/naxsi.d/\nCOPY waf.d /usr/local/nginx/conf/waf.d\nRUN mkdir -p /data/logs/hack \\\n && chmod -R 775 /data/logs/hack\n#  lua 库与配置文件\nCOPY lua-lib /usr/local/nginx/conf/lua-lib\nCOPY lua.d /usr/local/nginx/conf/lua.d\nCOPY nginx.sh /etc/my_init.d/nginx.sh\nRUN chmod 755 /etc/my_init.d/nginx.sh\n#  RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN mkdir -p /var/lib/nginx/cache\n#  配置时区\nRUN echo \"Asia/Shanghai\" > /etc/timezone\nRUN dpkg-reconfigure -f noninteractive tzdata\nEXPOSE 80/tcp 443/tcp\nCMD [\"/etc/my_init.d/nginx.sh\"]\n#   build\n#   docker build -t supermy/docker-mynginx:2.1 .\n#   userage\n#   docker run -d -p 8080:80 --name test -v /home/utgard/www/:/data/www/ mynginx_web\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# latest=8.1   wheezy=7.8\nFROM debian:7.9\n# FROM    supermy/docker-debian:7\nMAINTAINER supermy <springclick@gmail.com>\nRUN sed -i '1,3d' /etc/apt/sources.list \\\n && echo '#hello' >> /etc/apt/sources.list \\\n && sed -i '1a deb http://mirrors.163.com/debian/ wheezy main non-free contrib \\n deb http://mirrors.163.com/debian/ wheezy-proposed-updates main contrib non-free \\n deb http://mirrors.163.com/debian-security/ wheezy/updates main contrib non-free \\n deb-src http://mirrors.163.com/debian/ wheezy main non-free contrib \\n deb-src http://mirrors.163.com/debian/ wheezy-proposed-updates main contrib non-free \\n deb-src http://mirrors.163.com/debian-security/ wheezy/updates main contrib non-free \\n ' /etc/apt/sources.list\n#  sohu 更新服务器：\n# RUN sed -i '1a \\\n#     deb http://mirrors.sohu.com/debian/ wheezy main non-free contrib  \\\n#     deb http://mirrors.sohu.com/debian/ wheezy-proposed-updates main non-free contrib \\\n#     deb http://mirrors.sohu.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n#     deb-src http://mirrors.sohu.com/debian/ wheezy main non-free contrib \\\n#     deb-src http://mirrors.sohu.com/debian/ wheezy-proposed-updates main non-free contrib \\\n#     deb-src http://mirrors.sohu.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n#     ' /etc/apt/sources.list\nRUN apt-get update -qqy \\\n && apt-get install gcc libpcre3 libpcre3-dev openssl libssl-dev make wget libreadline-dev libncurses-dev graphicsmagick -qqy\n# RUN export http_proxy=http://172.16.71.25:8087\n# -e http_proxy=172.16.71.25:8087\nWORKDIR /tmp\nRUN wget http://tengine.taobao.org/download/tengine-2.1.2.tar.gz \\\n && wget --no-check-certificate https://openresty.org/download/openresty-1.9.7.4.tar.gz \\\n && wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz \\\n && tar xvf tengine-2.1.2.tar.gz \\\n && tar zxf openresty-1.9.7.4.tar.gz \\\n && tar zxf ngx_cache_purge-2.3.tar.gz\nWORKDIR /tmp/openresty-1.9.7.4\nRUN ./configure --prefix=/usr/local/openresty --with-luajit \\\n && make \\\n && make install\nWORKDIR /tmp/openresty-1.9.7.4/bundle/lua-5.1.5\nRUN make linux \\\n && make install\n#\n# WORKDIR /tmp\n# RUN wget http://bitop.luajit.org/download/LuaBitOp-1.0.2.tar.gz\n# RUN tar zxf LuaBitOp-1.0.2.tar.gz\n# WORKDIR /tmp/LuaBitOp-1.0.2\n# RUN make && make install\n#\n# WORKDIR /tmp\n# COPY lua-lib/lua-resty-kafka /tmp/lua-resty-kafka\n# WORKDIR /tmp/lua-resty-kafka\n# RUN make && make install\n# ##waf begin naxsi 应用防火墙 抵御SQL注入、跨站脚本、跨域伪造请求、本地和远程文件包含漏洞\nENV NAXSI_VERSION=\"master\"\nWORKDIR /tmp\nRUN gpg --keyserver keyserver.ubuntu.com --recv-keys 2685AED4 7BD9BF62 A1C052F8 \\\n && apt-get install ca-certificates -y \\\n && wget \"https://github.com/nbs-system/naxsi/archive/${NAXSI_VERSION}.tar.gz\" -O nginx-${NAXSI_VERSION}.tar.gz \\\n && tar zxvf nginx-${NAXSI_VERSION}.tar.gz\n# ##waf end\nWORKDIR /tmp/tengine-2.1.2\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr_local_lib.conf\n# 更新，混淆版本标识\nRUN sed -in 's/nginx\\//myserver\\//g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/1.6.2/8.8/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/Tengine\\\"/myserver\\\"/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/2.1.0/8.8/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/NGINX\\\"/myserver\\\"/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/2001000/800800/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN cd /tmp/tengine-2.1.2 \\\n && ./configure --with-ld-opt='-Wl,-rpath,/usr/local/lib/' --add-module=/tmp/openresty-1.9.7.4/bundle/redis2-nginx-module-0.12/ --add-module=/tmp/openresty-1.9.7.4/bundle/ngx_devel_kit-0.2.19/ --add-module=/tmp/openresty-1.9.7.4/bundle/set-misc-nginx-module-0.30/ --add-module=/tmp/openresty-1.9.7.4/bundle/echo-nginx-module-0.58/ --add-module=/tmp/openresty-1.9.7.4/bundle/ngx_lua-0.10.2/ --add-module=/tmp/ngx_cache_purge-2.3/ --add-module=/tmp/naxsi-${NAXSI_VERSION}/naxsi_src/ --with-ld-opt=\"-L /usr/local/lib\" \\\n && make \\\n && make install\nADD nginx.conf /usr/local/nginx/conf/nginx.conf\nWORKDIR /root\n# RUN rm -rf /tmp/tengine-*\n# RUN rm -rf /tmp/lua-*\nENV HOME=\"/root\"\nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh\nRUN mkdir -p /etc/my_init.d\n# nginx 配置文件\nCOPY http.d /usr/local/nginx/conf/http.d\nCOPY server.d /usr/local/nginx/conf/server.d\nCOPY naxsi.d /usr/local/nginx/conf/naxsi.d\nRUN cp /tmp/naxsi-master/naxsi_config/naxsi_core.rules /usr/local/nginx/conf/naxsi.d/\nCOPY waf.d /usr/local/nginx/conf/waf.d\nRUN mkdir -p /data/logs/hack \\\n && chmod -R 775 /data/logs/hack\n# lua 库与配置文件\nCOPY lua-lib /usr/local/nginx/conf/lua-lib\nCOPY lua.d /usr/local/nginx/conf/lua.d\nADD nginx.sh /etc/my_init.d/nginx.sh\nRUN chmod 755 /etc/my_init.d/nginx.sh\n# RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN mkdir -p /var/lib/nginx/cache\n# 配置时区\nRUN echo \"Asia/Shanghai\" > /etc/timezone\nRUN dpkg-reconfigure -f noninteractive tzdata\nEXPOSE 80/tcp 443/tcp\nCMD [\"/etc/my_init.d/nginx.sh\"]\n#  build\n#  docker build -t supermy/docker-mynginx:2.1 .\n#  userage\n#  docker run -d -p 8080:80 --name test -v /home/utgard/www/:/data/www/ mynginx_web\n","injectedSmells":[],"originalDockerfileHash":"07fceefb235eeea1329d00644356a825","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  latest=8.1   wheezy=7.8\nFROM debian:7.9\n#  FROM    supermy/docker-debian:7\nMAINTAINER supermy <springclick@gmail.com>\nRUN sed -i '1,3d' /etc/apt/sources.list \\\n && echo '#hello' >> /etc/apt/sources.list \\\n && sed -i '1a deb http://mirrors.163.com/debian/ wheezy main non-free contrib \\n deb http://mirrors.163.com/debian/ wheezy-proposed-updates main contrib non-free \\n deb http://mirrors.163.com/debian-security/ wheezy/updates main contrib non-free \\n deb-src http://mirrors.163.com/debian/ wheezy main non-free contrib \\n deb-src http://mirrors.163.com/debian/ wheezy-proposed-updates main contrib non-free \\n deb-src http://mirrors.163.com/debian-security/ wheezy/updates main contrib non-free \\n ' /etc/apt/sources.list\n#   sohu 更新服务器：\n#  RUN sed -i '1a \\\n#      deb http://mirrors.sohu.com/debian/ wheezy main non-free contrib  \\\n#      deb http://mirrors.sohu.com/debian/ wheezy-proposed-updates main non-free contrib \\\n#      deb http://mirrors.sohu.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n#      deb-src http://mirrors.sohu.com/debian/ wheezy main non-free contrib \\\n#      deb-src http://mirrors.sohu.com/debian/ wheezy-proposed-updates main non-free contrib \\\n#      deb-src http://mirrors.sohu.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n#      ' /etc/apt/sources.list\nRUN apt-get update -qqy \\\n && apt-get install gcc libpcre3 libpcre3-dev openssl libssl-dev make wget libreadline-dev libncurses-dev graphicsmagick -qqy\n#  RUN export http_proxy=http://172.16.71.25:8087\n#  -e http_proxy=172.16.71.25:8087\nWORKDIR /tmp\nRUN wget http://tengine.taobao.org/download/tengine-2.1.2.tar.gz \\\n && wget --no-check-certificate https://openresty.org/download/openresty-1.9.7.4.tar.gz \\\n && wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz \\\n && tar xvf tengine-2.1.2.tar.gz \\\n && tar zxf openresty-1.9.7.4.tar.gz \\\n && tar zxf ngx_cache_purge-2.3.tar.gz\nWORKDIR /tmp/openresty-1.9.7.4\nRUN ./configure --prefix=/usr/local/openresty --with-luajit \\\n && make \\\n && make install\nWORKDIR /tmp/openresty-1.9.7.4/bundle/lua-5.1.5\nRUN make linux \\\n && make install\n#\n#  WORKDIR /tmp\n#  RUN wget http://bitop.luajit.org/download/LuaBitOp-1.0.2.tar.gz\n#  RUN tar zxf LuaBitOp-1.0.2.tar.gz\n#  WORKDIR /tmp/LuaBitOp-1.0.2\n#  RUN make && make install\n#\n#  WORKDIR /tmp\n#  COPY lua-lib/lua-resty-kafka /tmp/lua-resty-kafka\n#  WORKDIR /tmp/lua-resty-kafka\n#  RUN make && make install\n#  ##waf begin naxsi 应用防火墙 抵御SQL注入、跨站脚本、跨域伪造请求、本地和远程文件包含漏洞\nENV NAXSI_VERSION=\"master\"\nWORKDIR /tmp\nRUN gpg --keyserver keyserver.ubuntu.com --recv-keys 2685AED4 7BD9BF62 A1C052F8 \\\n && apt-get install ca-certificates -y \\\n && wget \"https://github.com/nbs-system/naxsi/archive/${NAXSI_VERSION}.tar.gz\" -O nginx-${NAXSI_VERSION}.tar.gz \\\n && tar zxvf nginx-${NAXSI_VERSION}.tar.gz\n#  ##waf end\nWORKDIR /tmp/tengine-2.1.2\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr_local_lib.conf\n#  更新，混淆版本标识\nRUN sed -in 's/nginx\\//myserver\\//g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/1.6.2/8.8/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/Tengine\\\"/myserver\\\"/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/2.1.0/8.8/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/NGINX\\\"/myserver\\\"/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/2001000/800800/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN cd /tmp/tengine-2.1.2 \\\n && ./configure --with-ld-opt='-Wl,-rpath,/usr/local/lib/' --add-module=/tmp/openresty-1.9.7.4/bundle/redis2-nginx-module-0.12/ --add-module=/tmp/openresty-1.9.7.4/bundle/ngx_devel_kit-0.2.19/ --add-module=/tmp/openresty-1.9.7.4/bundle/set-misc-nginx-module-0.30/ --add-module=/tmp/openresty-1.9.7.4/bundle/echo-nginx-module-0.58/ --add-module=/tmp/openresty-1.9.7.4/bundle/ngx_lua-0.10.2/ --add-module=/tmp/ngx_cache_purge-2.3/ --add-module=/tmp/naxsi-${NAXSI_VERSION}/naxsi_src/ --with-ld-opt=\"-L /usr/local/lib\" \\\n && make \\\n && make install\nADD nginx.conf /usr/local/nginx/conf/nginx.conf\nWORKDIR /root\n#  RUN rm -rf /tmp/tengine-*\n#  RUN rm -rf /tmp/lua-*\nENV HOME=\"/root\"\nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh\nRUN mkdir -p /etc/my_init.d\n#  nginx 配置文件\nCOPY http.d /usr/local/nginx/conf/http.d\nCOPY server.d /usr/local/nginx/conf/server.d\nCOPY naxsi.d /usr/local/nginx/conf/naxsi.d\nRUN cp /tmp/naxsi-master/naxsi_config/naxsi_core.rules /usr/local/nginx/conf/naxsi.d/\nCOPY waf.d /usr/local/nginx/conf/waf.d\nRUN mkdir -p /data/logs/hack \\\n && chmod -R 775 /data/logs/hack\n#  lua 库与配置文件\nCOPY lua-lib /usr/local/nginx/conf/lua-lib\nCOPY lua.d /usr/local/nginx/conf/lua.d\nADD nginx.sh /etc/my_init.d/nginx.sh\nRUN chmod 755 /etc/my_init.d/nginx.sh\n#  RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN mkdir -p /var/lib/nginx/cache\n#  配置时区\nRUN echo \"Asia/Shanghai\" > /etc/timezone\nRUN dpkg-reconfigure -f noninteractive tzdata\nEXPOSE 80/tcp 443/tcp\nCMD [\"/etc/my_init.d/nginx.sh\"]\n#   build\n#   docker build -t supermy/docker-mynginx:2.1 .\n#   userage\n#   docker run -d -p 8080:80 --name test -v /home/utgard/www/:/data/www/ mynginx_web\n","originalDockerfileUglifiedHash":"1840fdf9cebb7614ce45e3b93222ba48","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/42ddd62fad732daaa5b2ff26678551ae71b4a37c.dockerfile"}