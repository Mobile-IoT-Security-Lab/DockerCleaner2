{"seed":3159656827,"processedDockerfileHash":"84561cc14549d6fa29315e8a1f649029","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   use builder image to compile ledisdb (without GCO)\nFROM golang:1.9-stretch AS builder\nENV LEDISDB_VERSION=\"0.6\"\nENV LEVELDB_VERSION=\"47cb9e2a211e1d7157078ba7bab536beb29e56dc\"\nENV ROCKSDB_VERSION=\"5.8.6\"\nENV GOSU_VERSION=\"1.10\"\nWORKDIR /build\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget gcc-6 g++-6 build-essential libsnappy1v5 libsnappy-dev libgflags-dev -y\n#   get LedisDB\nRUN wget -O ledisdb-src.tar.gz \"https://github.com/siddontang/ledisdb/archive/v$LEDISDB_VERSION.tar.gz\" \\\n && tar -zxf ledisdb-src.tar.gz \\\n && mkdir -p /go/src/github.com/siddontang/ \\\n && mv ledisdb-$LEDISDB_VERSION /go/src/github.com/siddontang/ledisdb\n#   build LevelDB\nRUN wget -O leveldb-src.tar.gz \"https://github.com/google/leveldb/archive/$LEVELDB_VERSION.tar.gz\" \\\n && tar -zxf leveldb-src.tar.gz \\\n && cd leveldb-$LEVELDB_VERSION \\\n && patch -p0 < /go/src/github.com/siddontang/ledisdb/tools/leveldb.patch \\\n && mkdir -p out-shared/db \\\n && make -j \"$( nproc ;)\" \\\n && mkdir /build/lib \\\n && mkdir -p /build/include/leveldb \\\n && cp out-static/lib* /build/lib/ \\\n && install include/leveldb/*.h /build/include/leveldb\n#   build RocksDB\nRUN wget -O rocksdb-src.tar.gz \"https://github.com/facebook/rocksdb/archive/v$ROCKSDB_VERSION.tar.gz\" \\\n && tar -zxf rocksdb-src.tar.gz \\\n && cd rocksdb-$ROCKSDB_VERSION \\\n && make static_lib -j \"$( nproc ;)\" \\\n && mkdir -p /build/include/rocksdb \\\n && cp librocksdb.a /build/lib/ \\\n && install include/rocksdb/*.h /build/include/rocksdb\nENV CGO_CFLAGS=\"\\\"-I/build/include\\\"\"\nENV CGO_CXXFLAGS=\"\\\"-I/build/include\\\"\"\nENV CGO_LDFLAGS=\"\\\"-L/build/lib -lsnappy\\\"\"\n#  build LedisDB\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/build/lib:/usr/lib \\\n && export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/build/lib:/usr/lib \\\n && mkdir -p /build/bin \\\n && rm -rf /build/bin/* \\\n && cd /go/src/github.com/siddontang/ledisdb \\\n && GOGC=off go build -i -o /build/bin/ledis-server -tags \"snappy leveldb rocksdb\" cmd/ledis-server/* \\\n && GOGC=off go build -i -o /build/bin/ledis-cli -tags \"snappy leveldb rocksdb\" cmd/ledis-cli/* \\\n && GOGC=off go build -i -o /build/bin/ledis-benchmark -tags \"snappy leveldb rocksdb\" cmd/ledis-benchmark/* \\\n && GOGC=off go build -i -o /build/bin/ledis-dump -tags \"snappy leveldb rocksdb\" cmd/ledis-dump/* \\\n && GOGC=off go build -i -o /build/bin/ledis-load -tags \"snappy leveldb rocksdb\" cmd/ledis-load/* \\\n && GOGC=off go build -i -o /build/bin/ledis-repair -tags \"snappy leveldb rocksdb\" cmd/ledis-repair/*\n#   grab gosu for easy step-down from root\n#   https://github.com/tianon/gosu/releases\nRUN set -ex ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; chmod +x /usr/local/bin/gosu\n#   done building - now create a tiny image with a statically linked Ledis\nFROM debian:stretch-slim\nCOPY --from=builder /build/lib/* /usr/lib/\nCOPY --from=builder /build/bin/ledis-* /bin/\nCOPY --from=builder /go/src/github.com/siddontang/ledisdb/config/config-docker.toml /config.toml\nCOPY --from=builder /usr/local/bin/gosu /bin/\nRUN groupadd -r ledis \\\n && useradd -r -g ledis ledis \\\n && mkdir /datastore \\\n && chown ledis:ledis /datastore \\\n && chmod 444 /config.toml \\\n && gosu nobody true\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsnappy1v5 -y \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /datastore\nCOPY entrypoint.sh /bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\nEXPOSE 6380/tcp 11181/tcp\nCMD [\"ledis-server\", \"--config=/config.toml\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  use builder image to compile ledisdb (without GCO)\nFROM golang:1.9-stretch AS builder\nENV LEDISDB_VERSION=\"0.6\"\nENV LEVELDB_VERSION=\"47cb9e2a211e1d7157078ba7bab536beb29e56dc\"\nENV ROCKSDB_VERSION=\"5.8.6\"\nENV GOSU_VERSION=\"1.10\"\nWORKDIR /build\nRUN apt-get update \\\n && apt-get install ca-certificates wget gcc-6 g++-6 build-essential libsnappy1v5 libsnappy-dev libgflags-dev -y\n#  get LedisDB\nRUN wget -O ledisdb-src.tar.gz \"https://github.com/siddontang/ledisdb/archive/v$LEDISDB_VERSION.tar.gz\" \\\n && tar -zxf ledisdb-src.tar.gz \\\n && mkdir -p /go/src/github.com/siddontang/ \\\n && mv ledisdb-$LEDISDB_VERSION /go/src/github.com/siddontang/ledisdb\n#  build LevelDB\nRUN wget -O leveldb-src.tar.gz \"https://github.com/google/leveldb/archive/$LEVELDB_VERSION.tar.gz\" \\\n && tar -zxf leveldb-src.tar.gz \\\n && cd leveldb-$LEVELDB_VERSION \\\n && patch -p0 < /go/src/github.com/siddontang/ledisdb/tools/leveldb.patch \\\n && mkdir -p out-shared/db \\\n && make -j \"$( nproc ;)\" \\\n && mkdir /build/lib \\\n && mkdir -p /build/include/leveldb \\\n && cp out-static/lib* /build/lib/ \\\n && install include/leveldb/*.h /build/include/leveldb\n#  build RocksDB\nRUN wget -O rocksdb-src.tar.gz \"https://github.com/facebook/rocksdb/archive/v$ROCKSDB_VERSION.tar.gz\" \\\n && tar -zxf rocksdb-src.tar.gz \\\n && cd rocksdb-$ROCKSDB_VERSION \\\n && make static_lib -j \"$( nproc ;)\" \\\n && mkdir -p /build/include/rocksdb \\\n && cp librocksdb.a /build/lib/ \\\n && install include/rocksdb/*.h /build/include/rocksdb\nENV CGO_CFLAGS=\"\\\"-I/build/include\\\"\"\nENV CGO_CXXFLAGS=\"\\\"-I/build/include\\\"\"\nENV CGO_LDFLAGS=\"\\\"-L/build/lib -lsnappy\\\"\"\n# build LedisDB\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/build/lib:/usr/lib \\\n && export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/build/lib:/usr/lib \\\n && mkdir -p /build/bin \\\n && rm -rf /build/bin/* \\\n && cd /go/src/github.com/siddontang/ledisdb \\\n && GOGC=off go build -i -o /build/bin/ledis-server -tags \"snappy leveldb rocksdb\" cmd/ledis-server/* \\\n && GOGC=off go build -i -o /build/bin/ledis-cli -tags \"snappy leveldb rocksdb\" cmd/ledis-cli/* \\\n && GOGC=off go build -i -o /build/bin/ledis-benchmark -tags \"snappy leveldb rocksdb\" cmd/ledis-benchmark/* \\\n && GOGC=off go build -i -o /build/bin/ledis-dump -tags \"snappy leveldb rocksdb\" cmd/ledis-dump/* \\\n && GOGC=off go build -i -o /build/bin/ledis-load -tags \"snappy leveldb rocksdb\" cmd/ledis-load/* \\\n && GOGC=off go build -i -o /build/bin/ledis-repair -tags \"snappy leveldb rocksdb\" cmd/ledis-repair/*\n#  grab gosu for easy step-down from root\n#  https://github.com/tianon/gosu/releases\nRUN set -ex ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; chmod +x /usr/local/bin/gosu\n#  done building - now create a tiny image with a statically linked Ledis\nFROM debian:stretch-slim\nCOPY --from=builder /build/lib/* /usr/lib/\nCOPY --from=builder /build/bin/ledis-* /bin/\nCOPY --from=builder /go/src/github.com/siddontang/ledisdb/config/config-docker.toml /config.toml\nCOPY --from=builder /usr/local/bin/gosu /bin/\nRUN groupadd -r ledis \\\n && useradd -r -g ledis ledis \\\n && mkdir /datastore \\\n && chown ledis:ledis /datastore \\\n && chmod 444 /config.toml \\\n && gosu nobody true\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsnappy1v5 -y \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /datastore\nADD entrypoint.sh /bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\nEXPOSE 6380/tcp 11181/tcp\nCMD [\"ledis-server\", \"--config=/config.toml\"]\n","injectedSmells":[],"originalDockerfileHash":"6732b2724f135b2f0ca27ca5bc54897b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   use builder image to compile ledisdb (without GCO)\nFROM golang:1.9-stretch AS builder\nENV LEDISDB_VERSION=\"0.6\"\nENV LEVELDB_VERSION=\"47cb9e2a211e1d7157078ba7bab536beb29e56dc\"\nENV ROCKSDB_VERSION=\"5.8.6\"\nENV GOSU_VERSION=\"1.10\"\nWORKDIR /build\nRUN apt-get update \\\n && apt-get install ca-certificates wget gcc-6 g++-6 build-essential libsnappy1v5 libsnappy-dev libgflags-dev -y\n#   get LedisDB\nRUN wget -O ledisdb-src.tar.gz \"https://github.com/siddontang/ledisdb/archive/v$LEDISDB_VERSION.tar.gz\" \\\n && tar -zxf ledisdb-src.tar.gz \\\n && mkdir -p /go/src/github.com/siddontang/ \\\n && mv ledisdb-$LEDISDB_VERSION /go/src/github.com/siddontang/ledisdb\n#   build LevelDB\nRUN wget -O leveldb-src.tar.gz \"https://github.com/google/leveldb/archive/$LEVELDB_VERSION.tar.gz\" \\\n && tar -zxf leveldb-src.tar.gz \\\n && cd leveldb-$LEVELDB_VERSION \\\n && patch -p0 < /go/src/github.com/siddontang/ledisdb/tools/leveldb.patch \\\n && mkdir -p out-shared/db \\\n && make -j \"$( nproc ;)\" \\\n && mkdir /build/lib \\\n && mkdir -p /build/include/leveldb \\\n && cp out-static/lib* /build/lib/ \\\n && install include/leveldb/*.h /build/include/leveldb\n#   build RocksDB\nRUN wget -O rocksdb-src.tar.gz \"https://github.com/facebook/rocksdb/archive/v$ROCKSDB_VERSION.tar.gz\" \\\n && tar -zxf rocksdb-src.tar.gz \\\n && cd rocksdb-$ROCKSDB_VERSION \\\n && make static_lib -j \"$( nproc ;)\" \\\n && mkdir -p /build/include/rocksdb \\\n && cp librocksdb.a /build/lib/ \\\n && install include/rocksdb/*.h /build/include/rocksdb\nENV CGO_CFLAGS=\"\\\"-I/build/include\\\"\"\nENV CGO_CXXFLAGS=\"\\\"-I/build/include\\\"\"\nENV CGO_LDFLAGS=\"\\\"-L/build/lib -lsnappy\\\"\"\n#  build LedisDB\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/build/lib:/usr/lib \\\n && export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/build/lib:/usr/lib \\\n && mkdir -p /build/bin \\\n && rm -rf /build/bin/* \\\n && cd /go/src/github.com/siddontang/ledisdb \\\n && GOGC=off go build -i -o /build/bin/ledis-server -tags \"snappy leveldb rocksdb\" cmd/ledis-server/* \\\n && GOGC=off go build -i -o /build/bin/ledis-cli -tags \"snappy leveldb rocksdb\" cmd/ledis-cli/* \\\n && GOGC=off go build -i -o /build/bin/ledis-benchmark -tags \"snappy leveldb rocksdb\" cmd/ledis-benchmark/* \\\n && GOGC=off go build -i -o /build/bin/ledis-dump -tags \"snappy leveldb rocksdb\" cmd/ledis-dump/* \\\n && GOGC=off go build -i -o /build/bin/ledis-load -tags \"snappy leveldb rocksdb\" cmd/ledis-load/* \\\n && GOGC=off go build -i -o /build/bin/ledis-repair -tags \"snappy leveldb rocksdb\" cmd/ledis-repair/*\n#   grab gosu for easy step-down from root\n#   https://github.com/tianon/gosu/releases\nRUN set -ex ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; chmod +x /usr/local/bin/gosu\n#   done building - now create a tiny image with a statically linked Ledis\nFROM debian:stretch-slim\nCOPY --from=builder /build/lib/* /usr/lib/\nCOPY --from=builder /build/bin/ledis-* /bin/\nCOPY --from=builder /go/src/github.com/siddontang/ledisdb/config/config-docker.toml /config.toml\nCOPY --from=builder /usr/local/bin/gosu /bin/\nRUN groupadd -r ledis \\\n && useradd -r -g ledis ledis \\\n && mkdir /datastore \\\n && chown ledis:ledis /datastore \\\n && chmod 444 /config.toml \\\n && gosu nobody true\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsnappy1v5 -y \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /datastore\nADD entrypoint.sh /bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\nEXPOSE 6380/tcp 11181/tcp\nCMD [\"ledis-server\", \"--config=/config.toml\"]\n","originalDockerfileUglifiedHash":"9623511b72713bada960051544b0b1a6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/607334874698634878fb7b74d5693467d4ecd01c.dockerfile"}