{"seed":3197921459,"processedDockerfileHash":"05c36264d0178e72023fcae1bc3362d5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG ARCH=amd64\nFROM alpine AS qemu\nRUN apk add curl=7.88.1-r1 --no-cache\nARG QEMU_VERSION=3.1.0-2\nARG QEMU_ARCHS=\"arm aarch64\"\nRUN for i in ${QEMU_ARCHS}; do curl -fsSL https://github.com/multiarch/qemu-user-static/releases/download/v${QEMU_VERSION}/qemu-${i}-static.tar.gz | tar zxvf - -C /usr/bin ; done \\\n && chmod +x /usr/bin/qemu-*\n#   ----------------------------------------------------------------------------\nFROM ${ARCH}/alpine:3.9 AS libressl\nENV LIBRESSL_VERSION=\"2.8.3\"\nENV LIBRESSL_SHA=\"3967e08b3dc2277bf77057ea1f11148df7f96a2203cd21cf841902f2a1ec11320384a001d01fa58154d35612f7981bf89d5b1a60a2387713d5657677f76cc682\"\nENV LIBRESSL_DOWNLOAD_URL=\"https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRESSL_VERSION}.tar.gz\"\n#   install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n#   install build dependencies\nRUN apk add build-base=0.5-r3 curl=7.88.1-r1 file=5.43-r0 linux-headers=5.19.5-r0 --no-cache\n#   work in temp dir\nWORKDIR /tmp/src\n#   download, verify, extract, build, clean, strip\nRUN curl -fsSL \"${LIBRESSL_DOWNLOAD_URL}\" -o libressl.tar.gz \\\n && echo \"${LIBRESSL_SHA} *libressl.tar.gz\" | sha512sum -c - \\\n && tar xzf libressl.tar.gz --strip-components=1 \\\n && rm -f libressl.tar.gz \\\n && CFLAGS=\"-DLIBRESSL_APPS=off -DLIBRESSL_TESTS=off\" ./configure --prefix=/opt/libressl --enable-static=no \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /opt/libressl/share /opt/libressl/include* /opt/libressl/lib/libtls.* /opt/libressl/bin/ocspcheck /opt/libressl/lib/pkgconfig /opt/libressl/lib/*.la \\\n && strip --strip-all /opt/libressl/bin/* /opt/libressl/lib/lib*\n#   ----------------------------------------------------------------------------\nFROM ${ARCH}/alpine:3.9 AS unbound\nENV UNBOUND_VERSION=\"1.9.0\"\nENV UNBOUND_SHA=\"7dfa8e078507fc24a2d0938eea590389453bacfcac023f1a41af19350ea1f7b87d0c82d7eead121a11068921292a96865e177274ff27ed8b8868445f80f7baf6\"\nENV UNBOUND_DOWNLOAD_URL=\"https://www.unbound.net/downloads/unbound-${UNBOUND_VERSION}.tar.gz\"\n#   install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n#   create unbound group and user\nRUN addgroup unbound \\\n && adduser -D -H -s /sbin/nologin -G unbound unbound\n#   install build dependencies\nRUN apk add build-base=0.5-r3 curl=7.88.1-r1 file=5.43-r0 linux-headers=5.19.5-r0 libevent=2.1.12-r5 libevent-dev=2.1.12-r5 expat=2.5.0-r0 expat-dev=2.5.0-r0 --no-cache\n#   work in temp dir\nWORKDIR /tmp/src\n#   copy libressl\nCOPY --from=libressl /opt/libressl /opt/libressl\n#   download, verify, extract, build, clean, strip\nRUN curl -fsSL \"${UNBOUND_DOWNLOAD_URL}\" -o unbound.tar.gz \\\n && echo \"${UNBOUND_SHA} *unbound.tar.gz\" | sha512sum -c - \\\n && tar xzf unbound.tar.gz --strip-components=1 \\\n && rm -f unbound.tar.gz \\\n && RANLIB=\"gcc-ranlib\" ./configure --prefix=/opt/unbound --with-pthreads --with-username=unbound --with-ssl=/opt/libressl --with-libevent --enable-event-api --enable-static=no --enable-pie --enable-relro-now \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && mv /opt/unbound/etc/unbound/unbound.conf /opt/unbound/etc/unbound/unbound.conf.example \\\n && rm -rf /opt/unbound/share /opt/unbound/include /opt/unbound/lib/pkgconfig /opt/unbound/lib/*.la \\\n && strip --strip-all /opt/unbound/lib/lib* /opt/unbound/sbin/unbound /opt/unbound/sbin/unbound-anchor /opt/unbound/sbin/unbound-checkconf /opt/unbound/sbin/unbound-control /opt/unbound/sbin/unbound-host\n#   ----------------------------------------------------------------------------\nFROM ${ARCH}/alpine:3.9\nARG BUILD_DATE\nARG BUILD_VERSION\nARG VCS_REF\nLABEL maintainer=\"kylemharding@gmail.com\"\nLABEL org.label-schema.schema-version=\"1.0\"\nLABEL org.label-schema.name=\"klutchell/unbound\"\nLABEL org.label-schema.description=\"Unbound is a validating, recursive, caching DNS resolver\"\nLABEL org.label-schema.url=\"https://unbound.net/\"\nLABEL org.label-schema.vcs-url=\"https://github.com/klutchell/unbound\"\nLABEL org.label-schema.docker.cmd=\"docker run -p 53:53/tcp -p 53:53/udp klutchell/unbound\"\nLABEL org.label-schema.build-date=\"${BUILD_DATE}\"\nLABEL org.label-schema.version=\"${BUILD_VERSION}\"\nLABEL org.label-schema.vcs-ref=\"${VCS_REF}\"\n#   copy libressl and unbound\nCOPY --from=unbound /opt/ /opt/\n#   work in unbound root directory\nWORKDIR /opt/unbound/etc/unbound\n#   copy default config file\nCOPY a-records.conf unbound.conf ./\n#   copy startup script\nCOPY startup.sh /\n#   install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n#   create unbound group and user\nRUN addgroup unbound \\\n && adduser -D -H -s /sbin/nologin -G unbound unbound\n#   install runtime dependencies\nRUN apk add libevent=2.1.12-r5 expat=2.5.0-r0 curl=7.88.1-r1 drill=1.8.3-r0 ca-certificates=20220614-r4 --no-cache\n#   set execute bit\nRUN chmod +x /startup.sh\n#   remove qemu binaries used for cross-compiling\nRUN rm /usr/bin/qemu-*\n#   add unbound binaries to path\nENV PATH=\"/opt/unbound/sbin:\\\"${PATH}\\\"\"\n#   expose dns ports\nEXPOSE 53/tcp 53/udp\n#   run startup script\nCMD [\"/bin/sh\", \"-xe\", \"/startup.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG ARCH=amd64\nFROM alpine AS qemu\nRUN apk add --no-cache curl\nARG QEMU_VERSION=3.1.0-2\nARG QEMU_ARCHS=\"arm aarch64\"\nRUN for i in ${QEMU_ARCHS}; do curl -fsSL https://github.com/multiarch/qemu-user-static/releases/download/v${QEMU_VERSION}/qemu-${i}-static.tar.gz | tar zxvf - -C /usr/bin ; done \\\n && chmod +x /usr/bin/qemu-*\n#  ----------------------------------------------------------------------------\nFROM ${ARCH}/alpine:3.9 AS libressl\nENV LIBRESSL_VERSION=\"2.8.3\"\nENV LIBRESSL_SHA=\"3967e08b3dc2277bf77057ea1f11148df7f96a2203cd21cf841902f2a1ec11320384a001d01fa58154d35612f7981bf89d5b1a60a2387713d5657677f76cc682\"\nENV LIBRESSL_DOWNLOAD_URL=\"https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRESSL_VERSION}.tar.gz\"\n#  install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n#  install build dependencies\nRUN apk add --no-cache build-base curl file linux-headers\n#  work in temp dir\nWORKDIR /tmp/src\n#  download, verify, extract, build, clean, strip\nRUN curl -fsSL \"${LIBRESSL_DOWNLOAD_URL}\" -o libressl.tar.gz \\\n && echo \"${LIBRESSL_SHA} *libressl.tar.gz\" | sha512sum -c - \\\n && tar xzf libressl.tar.gz --strip-components=1 \\\n && rm -f libressl.tar.gz \\\n && CFLAGS=\"-DLIBRESSL_APPS=off -DLIBRESSL_TESTS=off\" ./configure --prefix=/opt/libressl --enable-static=no \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /opt/libressl/share /opt/libressl/include* /opt/libressl/lib/libtls.* /opt/libressl/bin/ocspcheck /opt/libressl/lib/pkgconfig /opt/libressl/lib/*.la \\\n && strip --strip-all /opt/libressl/bin/* /opt/libressl/lib/lib*\n#  ----------------------------------------------------------------------------\nFROM ${ARCH}/alpine:3.9 AS unbound\nENV UNBOUND_VERSION=\"1.9.0\"\nENV UNBOUND_SHA=\"7dfa8e078507fc24a2d0938eea590389453bacfcac023f1a41af19350ea1f7b87d0c82d7eead121a11068921292a96865e177274ff27ed8b8868445f80f7baf6\"\nENV UNBOUND_DOWNLOAD_URL=\"https://www.unbound.net/downloads/unbound-${UNBOUND_VERSION}.tar.gz\"\n#  install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n#  create unbound group and user\nRUN addgroup unbound \\\n && adduser -D -H -s /sbin/nologin -G unbound unbound\n#  install build dependencies\nRUN apk add --no-cache build-base curl file linux-headers libevent libevent-dev expat expat-dev\n#  work in temp dir\nWORKDIR /tmp/src\n#  copy libressl\nCOPY --from=libressl /opt/libressl /opt/libressl\n#  download, verify, extract, build, clean, strip\nRUN curl -fsSL \"${UNBOUND_DOWNLOAD_URL}\" -o unbound.tar.gz \\\n && echo \"${UNBOUND_SHA} *unbound.tar.gz\" | sha512sum -c - \\\n && tar xzf unbound.tar.gz --strip-components=1 \\\n && rm -f unbound.tar.gz \\\n && RANLIB=\"gcc-ranlib\" ./configure --prefix=/opt/unbound --with-pthreads --with-username=unbound --with-ssl=/opt/libressl --with-libevent --enable-event-api --enable-static=no --enable-pie --enable-relro-now \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && mv /opt/unbound/etc/unbound/unbound.conf /opt/unbound/etc/unbound/unbound.conf.example \\\n && rm -rf /opt/unbound/share /opt/unbound/include /opt/unbound/lib/pkgconfig /opt/unbound/lib/*.la \\\n && strip --strip-all /opt/unbound/lib/lib* /opt/unbound/sbin/unbound /opt/unbound/sbin/unbound-anchor /opt/unbound/sbin/unbound-checkconf /opt/unbound/sbin/unbound-control /opt/unbound/sbin/unbound-host\n#  ----------------------------------------------------------------------------\nFROM ${ARCH}/alpine:3.9\nARG BUILD_DATE\nARG BUILD_VERSION\nARG VCS_REF\nLABEL maintainer=\"kylemharding@gmail.com\"\nLABEL org.label-schema.schema-version=\"1.0\"\nLABEL org.label-schema.name=\"klutchell/unbound\"\nLABEL org.label-schema.description=\"Unbound is a validating, recursive, caching DNS resolver\"\nLABEL org.label-schema.url=\"https://unbound.net/\"\nLABEL org.label-schema.vcs-url=\"https://github.com/klutchell/unbound\"\nLABEL org.label-schema.docker.cmd=\"docker run -p 53:53/tcp -p 53:53/udp klutchell/unbound\"\nLABEL org.label-schema.build-date=\"${BUILD_DATE}\"\nLABEL org.label-schema.version=\"${BUILD_VERSION}\"\nLABEL org.label-schema.vcs-ref=\"${VCS_REF}\"\n#  copy libressl and unbound\nCOPY --from=unbound /opt/ /opt/\n#  work in unbound root directory\nWORKDIR /opt/unbound/etc/unbound\n#  copy default config file\nCOPY a-records.conf unbound.conf ./\n#  copy startup script\nCOPY startup.sh /\n#  install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n#  create unbound group and user\nRUN addgroup unbound \\\n && adduser -D -H -s /sbin/nologin -G unbound unbound\n#  install runtime dependencies\nRUN apk add --no-cache libevent expat curl drill ca-certificates\n#  set execute bit\nRUN chmod +x /startup.sh\n#  remove qemu binaries used for cross-compiling\nRUN rm /usr/bin/qemu-*\n#  add unbound binaries to path\nENV PATH=\"/opt/unbound/sbin:\\\"${PATH}\\\"\"\n#  expose dns ports\nEXPOSE 53/tcp 53/udp\n#  run startup script\nCMD [\"/bin/sh\", \"-xe\", \"/startup.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"d8b7d7aaec18dbcf694dd4bfbe9c68b3","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG ARCH=amd64\nFROM alpine AS qemu\nRUN apk add --no-cache curl\nARG QEMU_VERSION=3.1.0-2\nARG QEMU_ARCHS=\"arm aarch64\"\nRUN for i in ${QEMU_ARCHS}; do curl -fsSL https://github.com/multiarch/qemu-user-static/releases/download/v${QEMU_VERSION}/qemu-${i}-static.tar.gz | tar zxvf - -C /usr/bin ; done \\\n && chmod +x /usr/bin/qemu-*\n#   ----------------------------------------------------------------------------\nFROM ${ARCH}/alpine:3.9 AS libressl\nENV LIBRESSL_VERSION=\"2.8.3\"\nENV LIBRESSL_SHA=\"3967e08b3dc2277bf77057ea1f11148df7f96a2203cd21cf841902f2a1ec11320384a001d01fa58154d35612f7981bf89d5b1a60a2387713d5657677f76cc682\"\nENV LIBRESSL_DOWNLOAD_URL=\"https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRESSL_VERSION}.tar.gz\"\n#   install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n#   install build dependencies\nRUN apk add --no-cache build-base curl file linux-headers\n#   work in temp dir\nWORKDIR /tmp/src\n#   download, verify, extract, build, clean, strip\nRUN curl -fsSL \"${LIBRESSL_DOWNLOAD_URL}\" -o libressl.tar.gz \\\n && echo \"${LIBRESSL_SHA} *libressl.tar.gz\" | sha512sum -c - \\\n && tar xzf libressl.tar.gz --strip-components=1 \\\n && rm -f libressl.tar.gz \\\n && CFLAGS=\"-DLIBRESSL_APPS=off -DLIBRESSL_TESTS=off\" ./configure --prefix=/opt/libressl --enable-static=no \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /opt/libressl/share /opt/libressl/include* /opt/libressl/lib/libtls.* /opt/libressl/bin/ocspcheck /opt/libressl/lib/pkgconfig /opt/libressl/lib/*.la \\\n && strip --strip-all /opt/libressl/bin/* /opt/libressl/lib/lib*\n#   ----------------------------------------------------------------------------\nFROM ${ARCH}/alpine:3.9 AS unbound\nENV UNBOUND_VERSION=\"1.9.0\"\nENV UNBOUND_SHA=\"7dfa8e078507fc24a2d0938eea590389453bacfcac023f1a41af19350ea1f7b87d0c82d7eead121a11068921292a96865e177274ff27ed8b8868445f80f7baf6\"\nENV UNBOUND_DOWNLOAD_URL=\"https://www.unbound.net/downloads/unbound-${UNBOUND_VERSION}.tar.gz\"\n#   install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n#   create unbound group and user\nRUN addgroup unbound \\\n && adduser -D -H -s /sbin/nologin -G unbound unbound\n#   install build dependencies\nRUN apk add --no-cache build-base curl file linux-headers libevent libevent-dev expat expat-dev\n#   work in temp dir\nWORKDIR /tmp/src\n#   copy libressl\nCOPY --from=libressl /opt/libressl /opt/libressl\n#   download, verify, extract, build, clean, strip\nRUN curl -fsSL \"${UNBOUND_DOWNLOAD_URL}\" -o unbound.tar.gz \\\n && echo \"${UNBOUND_SHA} *unbound.tar.gz\" | sha512sum -c - \\\n && tar xzf unbound.tar.gz --strip-components=1 \\\n && rm -f unbound.tar.gz \\\n && RANLIB=\"gcc-ranlib\" ./configure --prefix=/opt/unbound --with-pthreads --with-username=unbound --with-ssl=/opt/libressl --with-libevent --enable-event-api --enable-static=no --enable-pie --enable-relro-now \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && mv /opt/unbound/etc/unbound/unbound.conf /opt/unbound/etc/unbound/unbound.conf.example \\\n && rm -rf /opt/unbound/share /opt/unbound/include /opt/unbound/lib/pkgconfig /opt/unbound/lib/*.la \\\n && strip --strip-all /opt/unbound/lib/lib* /opt/unbound/sbin/unbound /opt/unbound/sbin/unbound-anchor /opt/unbound/sbin/unbound-checkconf /opt/unbound/sbin/unbound-control /opt/unbound/sbin/unbound-host\n#   ----------------------------------------------------------------------------\nFROM ${ARCH}/alpine:3.9\nARG BUILD_DATE\nARG BUILD_VERSION\nARG VCS_REF\nLABEL maintainer=\"kylemharding@gmail.com\"\nLABEL org.label-schema.schema-version=\"1.0\"\nLABEL org.label-schema.name=\"klutchell/unbound\"\nLABEL org.label-schema.description=\"Unbound is a validating, recursive, caching DNS resolver\"\nLABEL org.label-schema.url=\"https://unbound.net/\"\nLABEL org.label-schema.vcs-url=\"https://github.com/klutchell/unbound\"\nLABEL org.label-schema.docker.cmd=\"docker run -p 53:53/tcp -p 53:53/udp klutchell/unbound\"\nLABEL org.label-schema.build-date=\"${BUILD_DATE}\"\nLABEL org.label-schema.version=\"${BUILD_VERSION}\"\nLABEL org.label-schema.vcs-ref=\"${VCS_REF}\"\n#   copy libressl and unbound\nCOPY --from=unbound /opt/ /opt/\n#   work in unbound root directory\nWORKDIR /opt/unbound/etc/unbound\n#   copy default config file\nCOPY a-records.conf unbound.conf ./\n#   copy startup script\nCOPY startup.sh /\n#   install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n#   create unbound group and user\nRUN addgroup unbound \\\n && adduser -D -H -s /sbin/nologin -G unbound unbound\n#   install runtime dependencies\nRUN apk add --no-cache libevent expat curl drill ca-certificates\n#   set execute bit\nRUN chmod +x /startup.sh\n#   remove qemu binaries used for cross-compiling\nRUN rm /usr/bin/qemu-*\n#   add unbound binaries to path\nENV PATH=\"/opt/unbound/sbin:\\\"${PATH}\\\"\"\n#   expose dns ports\nEXPOSE 53/tcp 53/udp\n#   run startup script\nCMD [\"/bin/sh\", \"-xe\", \"/startup.sh\"]\n","originalDockerfileUglifiedHash":"f34a08f780a7fe7d8c44c67e6e451cb3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4582399c7f7dee44458caf521bb9c1b2aa5384f8.dockerfile"}