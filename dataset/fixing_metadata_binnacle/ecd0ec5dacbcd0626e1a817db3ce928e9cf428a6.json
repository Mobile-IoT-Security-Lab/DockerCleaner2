{"seed":3427812288,"processedDockerfileHash":"20ad5eb5e98f86e47e0025c84bbfd83c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Build command:\n#     $ docker build -t aprokop/fortrilinos-stack:latest -f Dockerfile_stack  .\nFROM ubuntu:16.04\nARG NPROC=14\n#   1. Need gcc-7 to install pgmath using Spack (required by Flang)\n#   2. Do not install cmake as we'll need cmake 3.10+ for Trilinos\n#   3. Need gawk for pgmath as default mawk segfaults\n#   4. Need bc for kokkos build system (and other misc trilinos build)\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-9 bc=1.06.95-9build1 build-essential=12.1ubuntu2 curl=7.47.0-1ubuntu2.19 environment-modules=3.2.10-9 gfortran=4:5.3.1-1ubuntu1 git=1:2.7.4-0ubuntu1.10 lcov=1.12-2 libatlas-base-dev=3.10.2-9 libbz2-dev=1.0.6-8ubuntu0.2 libfreetype6-dev=2.6.1-0.1ubuntu2.5 libopenmpi-dev=1.10.2-8ubuntu1 libpng-dev libsqlite3-dev=3.11.0-1ubuntu1.5 libssl-dev=1.0.2g-1ubuntu4.20 libxft-dev=2.3.2-1 python2.7-dev=2.7.12-1ubuntu0~16.04.18 tmux=2.1-3build1 unzip=6.0-20ubuntu1.1 valgrind=1:3.11.0-1ubuntu4.2 vim=2:7.4.1689-3ubuntu1.5 wget=1.17.1-1ubuntu1.5 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -y \\\n && apt-get install --no-install-recommends gawk=1:4.1.3+dfsg-0.1 -y \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y \\\n && add-apt-repository -y ppa:ubuntu-toolchain-r/test \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-7 g++-7 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && ln -s /usr/bin/python2.7 /usr/bin/python\nENV PREFIX=\"/scratch\"\nRUN mkdir -p ${PREFIX} \\\n && cd ${PREFIX} \\\n && mkdir archive \\\n && mkdir source \\\n && mkdir build \\\n && mkdir install\n#   append the option flag --allow-run-as-root to mpiexec\nRUN echo '#!/usr/bin/env bash' > /usr/local/bin/mpiexec \\\n && echo '/usr/bin/mpiexec --allow-run-as-root \"$@\"' >> /usr/local/bin/mpiexec \\\n && chmod +x /usr/local/bin/mpiexec\nENV HOME=\"/root\"\n#   Install CMake\nENV CMAKE_DIR=\"/opt/cmake\"\nRUN CMAKE_VERSION=3.13.4 \\\n && CMAKE_VERSION_SHORT=3.13 \\\n && CMAKE_URL=https://cmake.org/files/v${CMAKE_VERSION_SHORT}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && wget --quiet ${CMAKE_URL} --output-document=${CMAKE_SCRIPT} \\\n && mkdir -p ${CMAKE_DIR} \\\n && sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} \\\n && rm ${CMAKE_SCRIPT}\nENV PATH=\"${CMAKE_DIR}/bin:$PATH\"\n#   Install Flang\nENV FLANG_DIR=\"/opt/flang\"\nRUN FLANG_VERSION=20190329 \\\n && FLANG_ARCHIVE=flang-${FLANG_VERSION}-x86-70.tgz \\\n && FLANG_URL=https://github.com/flang-compiler/flang/releases/download/flang_${FLANG_VERSION}/${FLANG_ARCHIVE} \\\n && wget --quiet ${FLANG_URL} --output-document=${FLANG_ARCHIVE} \\\n && mkdir -p ${FLANG_DIR} \\\n && tar -xvf ${FLANG_ARCHIVE} -C ${FLANG_DIR} \\\n && rm ${FLANG_ARCHIVE}\nENV PATH=\"${FLANG_DIR}/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"${FLANG_DIR}/lib:$LD_LIBRARY_PATH\"\n#   Download Trilinos (version specified in TrilinosVersion.cmake)\nCOPY \"trilinos_version\" \"${PREFIX}/\"\nRUN export TRILINOS_HASH=\"$( cat ${PREFIX}/trilinos_version ;)\" \\\n && export TRILINOS_VERSION=\"${TRILINOS_HASH}\" \\\n && export TRILINOS_URL=\"https://github.com/trilinos/Trilinos/archive/${TRILINOS_HASH}.tar.gz\" \\\n && export TRILINOS_ARCHIVE=\"${PREFIX}/archive/trilinos-${TRILINOS_HASH}.tar.gz\" \\\n && export TRILINOS_SOURCE_DIR=\"${PREFIX}/source/trilinos/${TRILINOS_HASH}\" \\\n && export TRILINOS_BUILD_DIR=\"${PREFIX}/build/trilinos/${TRILINOS_HASH}\" \\\n && wget --quiet \"${TRILINOS_URL}\" --output-document=\"${TRILINOS_ARCHIVE}\" \\\n && mkdir -p \"${TRILINOS_SOURCE_DIR}\" \\\n && tar -xf \"${TRILINOS_ARCHIVE}\" -C \"${TRILINOS_SOURCE_DIR}\" --strip-components=1 \\\n && ln -s \"${TRILINOS_SOURCE_DIR}\" \"${PREFIX}/source/trilinos/release\" \\\n && mkdir -p \"${TRILINOS_BUILD_DIR}\" \\\n && rm -rf \"${TRILINOS_ARCHIVE}\"\nENV TRILINOS_DIR=\"/scratch/source/trilinos/release\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Build command:\n#    $ docker build -t aprokop/fortrilinos-stack:latest -f Dockerfile_stack  .\nFROM ubuntu:16.04\nARG NPROC=14\n#  1. Need gcc-7 to install pgmath using Spack (required by Flang)\n#  2. Do not install cmake as we'll need cmake 3.10+ for Trilinos\n#  3. Need gawk for pgmath as default mawk segfaults\n#  4. Need bc for kokkos build system (and other misc trilinos build)\nRUN apt-get update \\\n && apt-get install autoconf bc build-essential curl environment-modules gfortran git lcov libatlas-base-dev libbz2-dev libfreetype6-dev libopenmpi-dev libpng-dev libsqlite3-dev libssl-dev libxft-dev python2.7-dev tmux unzip valgrind vim wget zlib1g-dev -y \\\n && apt-get install gawk -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:ubuntu-toolchain-r/test \\\n && apt-get update \\\n && apt-get install gcc-7 g++-7 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && ln -s /usr/bin/python2.7 /usr/bin/python\nENV PREFIX=\"/scratch\"\nRUN mkdir -p ${PREFIX} \\\n && cd ${PREFIX} \\\n && mkdir archive \\\n && mkdir source \\\n && mkdir build \\\n && mkdir install\n#  append the option flag --allow-run-as-root to mpiexec\nRUN echo '#!/usr/bin/env bash' > /usr/local/bin/mpiexec \\\n && echo '/usr/bin/mpiexec --allow-run-as-root \"$@\"' >> /usr/local/bin/mpiexec \\\n && chmod +x /usr/local/bin/mpiexec\nENV HOME=\"/root\"\n#  Install CMake\nENV CMAKE_DIR=\"/opt/cmake\"\nRUN CMAKE_VERSION=3.13.4 \\\n && CMAKE_VERSION_SHORT=3.13 \\\n && CMAKE_URL=https://cmake.org/files/v${CMAKE_VERSION_SHORT}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && wget --quiet ${CMAKE_URL} --output-document=${CMAKE_SCRIPT} \\\n && mkdir -p ${CMAKE_DIR} \\\n && sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} \\\n && rm ${CMAKE_SCRIPT}\nENV PATH=\"${CMAKE_DIR}/bin:$PATH\"\n#  Install Flang\nENV FLANG_DIR=\"/opt/flang\"\nRUN FLANG_VERSION=20190329 \\\n && FLANG_ARCHIVE=flang-${FLANG_VERSION}-x86-70.tgz \\\n && FLANG_URL=https://github.com/flang-compiler/flang/releases/download/flang_${FLANG_VERSION}/${FLANG_ARCHIVE} \\\n && wget --quiet ${FLANG_URL} --output-document=${FLANG_ARCHIVE} \\\n && mkdir -p ${FLANG_DIR} \\\n && tar -xvf ${FLANG_ARCHIVE} -C ${FLANG_DIR} \\\n && rm ${FLANG_ARCHIVE}\nENV PATH=\"${FLANG_DIR}/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"${FLANG_DIR}/lib:$LD_LIBRARY_PATH\"\n#  Download Trilinos (version specified in TrilinosVersion.cmake)\nCOPY \"trilinos_version\" \"${PREFIX}/\"\nRUN export TRILINOS_HASH=\"$( cat ${PREFIX}/trilinos_version ;)\" \\\n && export TRILINOS_VERSION=\"${TRILINOS_HASH}\" \\\n && export TRILINOS_URL=\"https://github.com/trilinos/Trilinos/archive/${TRILINOS_HASH}.tar.gz\" \\\n && export TRILINOS_ARCHIVE=\"${PREFIX}/archive/trilinos-${TRILINOS_HASH}.tar.gz\" \\\n && export TRILINOS_SOURCE_DIR=\"${PREFIX}/source/trilinos/${TRILINOS_HASH}\" \\\n && export TRILINOS_BUILD_DIR=\"${PREFIX}/build/trilinos/${TRILINOS_HASH}\" \\\n && wget --quiet \"${TRILINOS_URL}\" --output-document=\"${TRILINOS_ARCHIVE}\" \\\n && mkdir -p \"${TRILINOS_SOURCE_DIR}\" \\\n && tar -xf \"${TRILINOS_ARCHIVE}\" -C \"${TRILINOS_SOURCE_DIR}\" --strip-components=1 \\\n && ln -s \"${TRILINOS_SOURCE_DIR}\" \"${PREFIX}/source/trilinos/release\" \\\n && mkdir -p \"${TRILINOS_BUILD_DIR}\" \\\n && rm -rf \"${TRILINOS_ARCHIVE}\"\nENV TRILINOS_DIR=\"/scratch/source/trilinos/release\"\n","injectedSmells":[],"originalDockerfileHash":"dae1fe4b6a10149f77d307b7cc5043c0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build command:\n#     $ docker build -t aprokop/fortrilinos-stack:latest -f Dockerfile_stack  .\nFROM ubuntu:16.04\nARG NPROC=14\n#   1. Need gcc-7 to install pgmath using Spack (required by Flang)\n#   2. Do not install cmake as we'll need cmake 3.10+ for Trilinos\n#   3. Need gawk for pgmath as default mawk segfaults\n#   4. Need bc for kokkos build system (and other misc trilinos build)\nRUN apt-get update \\\n && apt-get install autoconf bc build-essential curl environment-modules gfortran git lcov libatlas-base-dev libbz2-dev libfreetype6-dev libopenmpi-dev libpng-dev libsqlite3-dev libssl-dev libxft-dev python2.7-dev tmux unzip valgrind vim wget zlib1g-dev -y \\\n && apt-get install gawk -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:ubuntu-toolchain-r/test \\\n && apt-get update \\\n && apt-get install gcc-7 g++-7 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && ln -s /usr/bin/python2.7 /usr/bin/python\nENV PREFIX=\"/scratch\"\nRUN mkdir -p ${PREFIX} \\\n && cd ${PREFIX} \\\n && mkdir archive \\\n && mkdir source \\\n && mkdir build \\\n && mkdir install\n#   append the option flag --allow-run-as-root to mpiexec\nRUN echo '#!/usr/bin/env bash' > /usr/local/bin/mpiexec \\\n && echo '/usr/bin/mpiexec --allow-run-as-root \"$@\"' >> /usr/local/bin/mpiexec \\\n && chmod +x /usr/local/bin/mpiexec\nENV HOME=\"/root\"\n#   Install CMake\nENV CMAKE_DIR=\"/opt/cmake\"\nRUN CMAKE_VERSION=3.13.4 \\\n && CMAKE_VERSION_SHORT=3.13 \\\n && CMAKE_URL=https://cmake.org/files/v${CMAKE_VERSION_SHORT}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n && wget --quiet ${CMAKE_URL} --output-document=${CMAKE_SCRIPT} \\\n && mkdir -p ${CMAKE_DIR} \\\n && sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} \\\n && rm ${CMAKE_SCRIPT}\nENV PATH=\"${CMAKE_DIR}/bin:$PATH\"\n#   Install Flang\nENV FLANG_DIR=\"/opt/flang\"\nRUN FLANG_VERSION=20190329 \\\n && FLANG_ARCHIVE=flang-${FLANG_VERSION}-x86-70.tgz \\\n && FLANG_URL=https://github.com/flang-compiler/flang/releases/download/flang_${FLANG_VERSION}/${FLANG_ARCHIVE} \\\n && wget --quiet ${FLANG_URL} --output-document=${FLANG_ARCHIVE} \\\n && mkdir -p ${FLANG_DIR} \\\n && tar -xvf ${FLANG_ARCHIVE} -C ${FLANG_DIR} \\\n && rm ${FLANG_ARCHIVE}\nENV PATH=\"${FLANG_DIR}/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"${FLANG_DIR}/lib:$LD_LIBRARY_PATH\"\n#   Download Trilinos (version specified in TrilinosVersion.cmake)\nCOPY \"trilinos_version\" \"${PREFIX}/\"\nRUN export TRILINOS_HASH=\"$( cat ${PREFIX}/trilinos_version ;)\" \\\n && export TRILINOS_VERSION=\"${TRILINOS_HASH}\" \\\n && export TRILINOS_URL=\"https://github.com/trilinos/Trilinos/archive/${TRILINOS_HASH}.tar.gz\" \\\n && export TRILINOS_ARCHIVE=\"${PREFIX}/archive/trilinos-${TRILINOS_HASH}.tar.gz\" \\\n && export TRILINOS_SOURCE_DIR=\"${PREFIX}/source/trilinos/${TRILINOS_HASH}\" \\\n && export TRILINOS_BUILD_DIR=\"${PREFIX}/build/trilinos/${TRILINOS_HASH}\" \\\n && wget --quiet \"${TRILINOS_URL}\" --output-document=\"${TRILINOS_ARCHIVE}\" \\\n && mkdir -p \"${TRILINOS_SOURCE_DIR}\" \\\n && tar -xf \"${TRILINOS_ARCHIVE}\" -C \"${TRILINOS_SOURCE_DIR}\" --strip-components=1 \\\n && ln -s \"${TRILINOS_SOURCE_DIR}\" \"${PREFIX}/source/trilinos/release\" \\\n && mkdir -p \"${TRILINOS_BUILD_DIR}\" \\\n && rm -rf \"${TRILINOS_ARCHIVE}\"\nENV TRILINOS_DIR=\"/scratch/source/trilinos/release\"\n","originalDockerfileUglifiedHash":"0ed4e44c976e0098d9f03b2044ba2b77","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ecd0ec5dacbcd0626e1a817db3ce928e9cf428a6.dockerfile"}