{"seed":3231594908,"processedDockerfileHash":"3494e3cac19dc3147f809367ffd8c891","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\n#   Based on\n#   https://switch2osm.org/manually-building-a-tile-server-18-04-lts/\n#   Set up environment\nENV TZ=\"UTC\"\nENV AUTOVACUUM=\"on\"\nENV UPDATES=\"disabled\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   Install dependencies\nRUN echo \"deb [ allow-insecure=yes ] http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=1.6.14 ca-certificates=20211016ubuntu0.18.04.1 -y \\\n && apt-get install --no-install-recommends apache2=2.4.29-1ubuntu4.27 apache2-dev=2.4.29-1ubuntu4.27 autoconf=2.69-11 build-essential=12.4ubuntu1 bzip2=1.0.6-8.1ubuntu0.2 cmake=3.10.2-1ubuntu2.18.04.2 fonts-noto-cjk=1:20190409+repack1-0ubuntu0.18.04 fonts-noto-hinted=20171026-2 fonts-noto-unhinted=20171026-2 clang=1:6.0-41~exp5~ubuntu1 gdal-bin=2.2.3+dfsg-2 git-core libagg-dev=1:2.4-r127+dfsg1-1 libboost-all-dev=1.65.1.0ubuntu1 libbz2-dev=1.0.6-8.1ubuntu0.2 libcairo-dev libcairomm-1.0-dev=1.12.2-3 libexpat1-dev=2.2.5-3ubuntu0.9 libfreetype6-dev=2.8.1-2ubuntu2.2 libgdal-dev=2.2.3+dfsg-2 libgeos++-dev=3.6.2-1build2 libgeos-dev=3.6.2-1build2 libgeotiff-epsg=1.4.2-1 libicu-dev=60.2-3ubuntu3.2 liblua5.3-dev=5.3.3-1ubuntu0.18.04.1 libmapnik-dev=3.0.19+ds-1 libpq-dev=10.23-0ubuntu0.18.04.1 libproj-dev=4.9.3-2 libprotobuf-c0-dev libtiff5-dev=4.0.9-5ubuntu0.10 libtool=2.4.6-2 libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 lua5.3=5.3.3-1ubuntu0.18.04.1 make=4.1-9.1ubuntu1 mapnik-utils=3.0.19+ds-1 nodejs=8.10.0~dfsg-2ubuntu0.4 npm=3.5.2-0ubuntu4 postgis=2.4.3+dfsg-4 postgresql-10=10.23-0ubuntu0.18.04.1 postgresql-10-postgis-2.5 postgresql-10-postgis-2.5-scripts postgresql-contrib-10 protobuf-c-compiler=1.2.1-2 python-mapnik=1:0.0~20180130-804a7947d-1 sudo=1.8.21p2-3ubuntu1.5 tar=1.29b-2ubuntu0.4 ttf-unifont=1:10.0.07-1 unzip=6.0-21ubuntu1.2 wget=1.19.4-1ubuntu2.2 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 osmosis=0.46-2 osmium-tool=1.7.1-1 cron=3.0pl1-128.1ubuntu1.2 python-psycopg2=2.7.4-1 python-shapely=1.6.4-1 python-lxml=4.2.1-1ubuntu0.6 -y --allow-unauthenticated \\\n && apt-get clean autoclean \\\n && apt-get autoremove --yes \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\n#   Set up renderer user\nRUN adduser --disabled-password --gecos \"\" renderer\nUSER renderer\n#   Install latest osm2pgsql\nRUN mkdir /home/renderer/src\nWORKDIR /home/renderer/src\nRUN git clone https://github.com/openstreetmap/osm2pgsql.git\nWORKDIR /home/renderer/src/osm2pgsql\nRUN mkdir build\nWORKDIR /home/renderer/src/osm2pgsql/build\nRUN cmake .. \\\n && make -j $( nproc ;)\nUSER root\nRUN make install\nUSER renderer\n#   Install and test Mapnik\nRUN python -c 'import mapnik'\n#   Install mod_tile and renderd\nWORKDIR /home/renderer/src\nRUN git clone -b switch2osm https://github.com/SomeoneElseOSM/mod_tile.git\nWORKDIR /home/renderer/src/mod_tile\nRUN ./autogen.sh \\\n && ./configure \\\n && make -j $( nproc ;)\nUSER root\nRUN make -j $( nproc ;) install \\\n && make -j $( nproc ;) install-mod_tile \\\n && ldconfig\nUSER renderer\n#   Configure stylesheet\nWORKDIR /home/renderer/src\nRUN git clone https://github.com/gravitystorm/openstreetmap-carto.git\nWORKDIR /home/renderer/src/openstreetmap-carto\nUSER root\nRUN npm install carto@1.2.0 -g\nUSER renderer\nRUN carto project.mml > mapnik.xml\n#   Load shapefiles\nWORKDIR /home/renderer/src/openstreetmap-carto\nRUN scripts/get-shapefiles.py\n#   Configure renderd\nUSER root\nRUN sed -i 's/renderaccount/renderer/g' /usr/local/etc/renderd.conf \\\n && sed -i 's/hot/tile/g' /usr/local/etc/renderd.conf\nUSER renderer\n#   Configure Apache\nUSER root\nRUN mkdir /var/lib/mod_tile \\\n && chown renderer /var/lib/mod_tile \\\n && mkdir /var/run/renderd \\\n && chown renderer /var/run/renderd\nRUN echo \"LoadModule tile_module /usr/lib/apache2/modules/mod_tile.so\" >> /etc/apache2/conf-available/mod_tile.conf \\\n && a2enconf mod_tile\nCOPY apache.conf /etc/apache2/sites-available/000-default.conf\nCOPY leaflet-demo.html /var/www/html/index.html\nRUN ln -sf /proc/1/fd/1 /var/log/apache2/access.log \\\n && ln -sf /proc/1/fd/2 /var/log/apache2/error.log\n#   Configure PosgtreSQL\nCOPY postgresql.custom.conf.tmpl /etc/postgresql/10/main/\nRUN chown -R postgres:postgres /var/lib/postgresql \\\n && chown postgres:postgres /etc/postgresql/10/main/postgresql.custom.conf.tmpl \\\n && echo \"\\ninclude 'postgresql.custom.conf'\" >> /etc/postgresql/10/main/postgresql.conf\n#   copy update scripts\nCOPY openstreetmap-tiles-update-expire /usr/bin/\nRUN chmod +x /usr/bin/openstreetmap-tiles-update-expire \\\n && mkdir /var/log/tiles \\\n && chmod a+rw /var/log/tiles \\\n && ln -s /home/renderer/src/mod_tile/osmosis-db_replag /usr/bin/osmosis-db_replag \\\n && echo \"* * * * * renderer openstreetmap-tiles-update-expire\\n\" >> /etc/crontab\n#   install trim_osc.py helper script\nUSER renderer\nRUN cd ~/src \\\n && git clone https://github.com/zverik/regional \\\n && chmod u+x ~/src/regional/trim_osc.py\n#   Start running\nUSER root\nCOPY run.sh /\nCOPY indexes.sql /\nENTRYPOINT [\"/run.sh\"]\nCMD []\nEXPOSE 80/tcp 5432/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\n#  Based on\n#  https://switch2osm.org/manually-building-a-tile-server-18-04-lts/\n#  Set up environment\nENV TZ=\"UTC\"\nENV AUTOVACUUM=\"on\"\nENV UPDATES=\"disabled\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#  Install dependencies\nRUN echo \"deb [ allow-insecure=yes ] http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list \\\n && apt-get update \\\n && apt-get install apt-transport-https ca-certificates -y \\\n && apt-get install --no-install-recommends apache2 apache2-dev autoconf build-essential bzip2 cmake fonts-noto-cjk fonts-noto-hinted fonts-noto-unhinted clang gdal-bin git-core libagg-dev libboost-all-dev libbz2-dev libcairo-dev libcairomm-1.0-dev libexpat1-dev libfreetype6-dev libgdal-dev libgeos++-dev libgeos-dev libgeotiff-epsg libicu-dev liblua5.3-dev libmapnik-dev libpq-dev libproj-dev libprotobuf-c0-dev libtiff5-dev libtool libxml2-dev lua5.3 make mapnik-utils nodejs npm postgis postgresql-10 postgresql-10-postgis-2.5 postgresql-10-postgis-2.5-scripts postgresql-contrib-10 protobuf-c-compiler python-mapnik sudo tar ttf-unifont unzip wget zlib1g-dev osmosis osmium-tool cron python-psycopg2 python-shapely python-lxml -y --allow-unauthenticated \\\n && apt-get clean autoclean \\\n && apt-get autoremove --yes \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\n#  Set up renderer user\nRUN adduser --disabled-password --gecos \"\" renderer\nUSER renderer\n#  Install latest osm2pgsql\nRUN mkdir /home/renderer/src\nWORKDIR /home/renderer/src\nRUN git clone https://github.com/openstreetmap/osm2pgsql.git\nWORKDIR /home/renderer/src/osm2pgsql\nRUN mkdir build\nWORKDIR /home/renderer/src/osm2pgsql/build\nRUN cmake .. \\\n && make -j $( nproc ;)\nUSER root\nRUN make install\nUSER renderer\n#  Install and test Mapnik\nRUN python -c 'import mapnik'\n#  Install mod_tile and renderd\nWORKDIR /home/renderer/src\nRUN git clone -b switch2osm https://github.com/SomeoneElseOSM/mod_tile.git\nWORKDIR /home/renderer/src/mod_tile\nRUN ./autogen.sh \\\n && ./configure \\\n && make -j $( nproc ;)\nUSER root\nRUN make -j $( nproc ;) install \\\n && make -j $( nproc ;) install-mod_tile \\\n && ldconfig\nUSER renderer\n#  Configure stylesheet\nWORKDIR /home/renderer/src\nRUN git clone https://github.com/gravitystorm/openstreetmap-carto.git\nWORKDIR /home/renderer/src/openstreetmap-carto\nUSER root\nRUN npm install carto -g\nUSER renderer\nRUN carto project.mml > mapnik.xml\n#  Load shapefiles\nWORKDIR /home/renderer/src/openstreetmap-carto\nRUN scripts/get-shapefiles.py\n#  Configure renderd\nUSER root\nRUN sed -i 's/renderaccount/renderer/g' /usr/local/etc/renderd.conf \\\n && sed -i 's/hot/tile/g' /usr/local/etc/renderd.conf\nUSER renderer\n#  Configure Apache\nUSER root\nRUN mkdir /var/lib/mod_tile \\\n && chown renderer /var/lib/mod_tile \\\n && mkdir /var/run/renderd \\\n && chown renderer /var/run/renderd\nRUN echo \"LoadModule tile_module /usr/lib/apache2/modules/mod_tile.so\" >> /etc/apache2/conf-available/mod_tile.conf \\\n && a2enconf mod_tile\nCOPY apache.conf /etc/apache2/sites-available/000-default.conf\nCOPY leaflet-demo.html /var/www/html/index.html\nRUN ln -sf /proc/1/fd/1 /var/log/apache2/access.log \\\n && ln -sf /proc/1/fd/2 /var/log/apache2/error.log\n#  Configure PosgtreSQL\nCOPY postgresql.custom.conf.tmpl /etc/postgresql/10/main/\nRUN chown -R postgres:postgres /var/lib/postgresql \\\n && chown postgres:postgres /etc/postgresql/10/main/postgresql.custom.conf.tmpl \\\n && echo \"\\ninclude 'postgresql.custom.conf'\" >> /etc/postgresql/10/main/postgresql.conf\n#  copy update scripts\nCOPY openstreetmap-tiles-update-expire /usr/bin/\nRUN chmod +x /usr/bin/openstreetmap-tiles-update-expire \\\n && mkdir /var/log/tiles \\\n && chmod a+rw /var/log/tiles \\\n && ln -s /home/renderer/src/mod_tile/osmosis-db_replag /usr/bin/osmosis-db_replag \\\n && echo \"* * * * * renderer openstreetmap-tiles-update-expire\\n\" >> /etc/crontab\n#  install trim_osc.py helper script\nUSER renderer\nRUN cd ~/src \\\n && git clone https://github.com/zverik/regional \\\n && chmod u+x ~/src/regional/trim_osc.py\n#  Start running\nUSER root\nCOPY run.sh /\nCOPY indexes.sql /\nENTRYPOINT [\"/run.sh\"]\nCMD []\nEXPOSE 80/tcp 5432/tcp\n","injectedSmells":[],"originalDockerfileHash":"1eaa897359f4bf2ac4fb2606c09e399c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\n#   Based on\n#   https://switch2osm.org/manually-building-a-tile-server-18-04-lts/\n#   Set up environment\nENV TZ=\"UTC\"\nENV AUTOVACUUM=\"on\"\nENV UPDATES=\"disabled\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   Install dependencies\nRUN echo \"deb [ allow-insecure=yes ] http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list \\\n && apt-get update \\\n && apt-get install apt-transport-https ca-certificates -y \\\n && apt-get install --no-install-recommends apache2 apache2-dev autoconf build-essential bzip2 cmake fonts-noto-cjk fonts-noto-hinted fonts-noto-unhinted clang gdal-bin git-core libagg-dev libboost-all-dev libbz2-dev libcairo-dev libcairomm-1.0-dev libexpat1-dev libfreetype6-dev libgdal-dev libgeos++-dev libgeos-dev libgeotiff-epsg libicu-dev liblua5.3-dev libmapnik-dev libpq-dev libproj-dev libprotobuf-c0-dev libtiff5-dev libtool libxml2-dev lua5.3 make mapnik-utils nodejs npm postgis postgresql-10 postgresql-10-postgis-2.5 postgresql-10-postgis-2.5-scripts postgresql-contrib-10 protobuf-c-compiler python-mapnik sudo tar ttf-unifont unzip wget zlib1g-dev osmosis osmium-tool cron python-psycopg2 python-shapely python-lxml -y --allow-unauthenticated \\\n && apt-get clean autoclean \\\n && apt-get autoremove --yes \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\n#   Set up renderer user\nRUN adduser --disabled-password --gecos \"\" renderer\nUSER renderer\n#   Install latest osm2pgsql\nRUN mkdir /home/renderer/src\nWORKDIR /home/renderer/src\nRUN git clone https://github.com/openstreetmap/osm2pgsql.git\nWORKDIR /home/renderer/src/osm2pgsql\nRUN mkdir build\nWORKDIR /home/renderer/src/osm2pgsql/build\nRUN cmake .. \\\n && make -j $( nproc ;)\nUSER root\nRUN make install\nUSER renderer\n#   Install and test Mapnik\nRUN python -c 'import mapnik'\n#   Install mod_tile and renderd\nWORKDIR /home/renderer/src\nRUN git clone -b switch2osm https://github.com/SomeoneElseOSM/mod_tile.git\nWORKDIR /home/renderer/src/mod_tile\nRUN ./autogen.sh \\\n && ./configure \\\n && make -j $( nproc ;)\nUSER root\nRUN make -j $( nproc ;) install \\\n && make -j $( nproc ;) install-mod_tile \\\n && ldconfig\nUSER renderer\n#   Configure stylesheet\nWORKDIR /home/renderer/src\nRUN git clone https://github.com/gravitystorm/openstreetmap-carto.git\nWORKDIR /home/renderer/src/openstreetmap-carto\nUSER root\nRUN npm install carto -g\nUSER renderer\nRUN carto project.mml > mapnik.xml\n#   Load shapefiles\nWORKDIR /home/renderer/src/openstreetmap-carto\nRUN scripts/get-shapefiles.py\n#   Configure renderd\nUSER root\nRUN sed -i 's/renderaccount/renderer/g' /usr/local/etc/renderd.conf \\\n && sed -i 's/hot/tile/g' /usr/local/etc/renderd.conf\nUSER renderer\n#   Configure Apache\nUSER root\nRUN mkdir /var/lib/mod_tile \\\n && chown renderer /var/lib/mod_tile \\\n && mkdir /var/run/renderd \\\n && chown renderer /var/run/renderd\nRUN echo \"LoadModule tile_module /usr/lib/apache2/modules/mod_tile.so\" >> /etc/apache2/conf-available/mod_tile.conf \\\n && a2enconf mod_tile\nCOPY apache.conf /etc/apache2/sites-available/000-default.conf\nCOPY leaflet-demo.html /var/www/html/index.html\nRUN ln -sf /proc/1/fd/1 /var/log/apache2/access.log \\\n && ln -sf /proc/1/fd/2 /var/log/apache2/error.log\n#   Configure PosgtreSQL\nCOPY postgresql.custom.conf.tmpl /etc/postgresql/10/main/\nRUN chown -R postgres:postgres /var/lib/postgresql \\\n && chown postgres:postgres /etc/postgresql/10/main/postgresql.custom.conf.tmpl \\\n && echo \"\\ninclude 'postgresql.custom.conf'\" >> /etc/postgresql/10/main/postgresql.conf\n#   copy update scripts\nCOPY openstreetmap-tiles-update-expire /usr/bin/\nRUN chmod +x /usr/bin/openstreetmap-tiles-update-expire \\\n && mkdir /var/log/tiles \\\n && chmod a+rw /var/log/tiles \\\n && ln -s /home/renderer/src/mod_tile/osmosis-db_replag /usr/bin/osmosis-db_replag \\\n && echo \"* * * * * renderer openstreetmap-tiles-update-expire\\n\" >> /etc/crontab\n#   install trim_osc.py helper script\nUSER renderer\nRUN cd ~/src \\\n && git clone https://github.com/zverik/regional \\\n && chmod u+x ~/src/regional/trim_osc.py\n#   Start running\nUSER root\nCOPY run.sh /\nCOPY indexes.sql /\nENTRYPOINT [\"/run.sh\"]\nCMD []\nEXPOSE 80/tcp 5432/tcp\n","originalDockerfileUglifiedHash":"e632083f74e5c97f221639b980e2195a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/75e5ddc8a93e59e24c6707dcacec149df9984d24.dockerfile"}