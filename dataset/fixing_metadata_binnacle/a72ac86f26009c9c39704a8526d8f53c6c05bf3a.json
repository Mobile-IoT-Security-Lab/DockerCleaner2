{"seed":1595105829,"processedDockerfileHash":"42ab6f158248afae17b0180a2aa80818","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add"],"processedDockerfile":"FROM ubuntu:latest@sha256:6d0e0c26489e33f5a6f0020edface2727db9489744ecc9b4f50c7fa671f23c49\n#   Contributors\nLABEL author=\"Vincent Voyer <vincent@zeroload.net>\"\nLABEL maintainers=\"Serban Ghita <serbanghita@gmail.com>, David Catalan <catalan.david@gmail.com>\"\n#   Env variables\nENV LC_ALL=\"C\"\nENV DISPLAY=\":99\"\nENV SELENIUM_CONSOLE_URL=\"http://localhost:4444/wd/hub\"\nENV SCREEN_GEOMETRY=\"1024x768x16\"\n#   Expose Selenium web console port\nEXPOSE 4444/tcp\n#   Update packages\nRUN :\n#   Install commons\nRUN (apt-get update ;apt-get install --no-install-recommends apt-transport-https=2.6.0 ca-certificates=20230311 curl=7.88.1-7ubuntu1 jq=1.6-2.1ubuntu3 software-properties-common=0.99.35 sudo=1.9.13p1-1ubuntu2 openjdk-8-jre-headless=8u362-ga-0ubuntu2 wget=1.21.3-1ubuntu1 xvfb=2:21.1.7-1ubuntu2 xfonts-100dpi=1:1.0.5 xfonts-75dpi=1:1.0.5 xfonts-scalable=1:1.0.3-1.3 xfonts-cyrillic=1:1.0.5 -qqy )\n#   Install Browser from vendor source\n#   Strategies copied from official Selenium Docker images (https://github.com/SeleniumHQ/docker-selenium)\n#  # Install latest Firefox\nARG FIREFOX_VERSION=latest\nRUN FIREFOX_DOWNLOAD_URL=$( if [ $FIREFOX_VERSION = \"latest\" ] || [ $FIREFOX_VERSION = \"nightly-latest\" ] || [ $FIREFOX_VERSION = \"devedition-latest\" ] ; then echo \"https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION-ssl&os=linux64&lang=en-US\" ; else echo \"https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2\" ; fi ;) \\\n && (apt-get update ;apt-get install --no-install-recommends firefox=1:1snap1-0ubuntu3 -qqy ) \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n && wget --no-verbose -O /tmp/firefox.tar.bz2 $FIREFOX_DOWNLOAD_URL \\\n && apt-get -y purge firefox \\\n && rm -rf /opt/firefox \\\n && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n && rm /tmp/firefox.tar.bz2 \\\n && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\n#  # Install latest Google Chrome\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update -qqy \\\n && (apt-get update ;apt-get install --no-install-recommends ${CHROME_VERSION:-google-chrome-stable} -qqy ) \\\n && rm /etc/apt/sources.list.d/google-chrome.list \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n#  # Chrome Launch Script Wrapper (forces no-sandbox so no need to use --privileged parameter)\nCOPY ./scripts/wrap_chrome_binary /opt/bin/wrap_chrome_binary\nRUN /opt/bin/wrap_chrome_binary\n#   Install Node.js LTS\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=18.13.0+dfsg1-1ubuntu2 -qqy )\n#   Add non-root user\nRUN useradd seluser --shell /bin/bash --create-home \\\n && usermod -a -G sudo seluser \\\n && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n && echo 'seluser:secret' | chpasswd\n#   Install selenium-standalone\nARG DEBUG\nRUN npm install selenium-standalone@8.3.0 -g\nRUN selenium-standalone install\nCOPY ./scripts/ /home/seluser/scripts\n#   Add Tini for graceful shutdown\nENV TINI_VERSION=\"v0.18.0\"\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n#   Force using non root user to execute the image\nUSER seluser\n#   Display Selenium environment\nRUN . /home/seluser/scripts/utils.sh \\\n && print_selenium_env\n#   Selenium server healthcheck\nHEALTHCHECK --interval=3s --start-period=5s --retries=8 CMD curl -qsf \"$SELENIUM_CONSOLE_URL/status\" | jq -r '.value.ready' | grep \"true\" || exit 1\n#   Run our start script under Tini\nCMD [\"/home/seluser/scripts/start.sh\"]\n","originalDockerfile":"FROM ubuntu:latest@sha256:6d0e0c26489e33f5a6f0020edface2727db9489744ecc9b4f50c7fa671f23c49\n#  Contributors\nLABEL author=\"Vincent Voyer <vincent@zeroload.net>\"\nLABEL maintainers=\"Serban Ghita <serbanghita@gmail.com>, David Catalan <catalan.david@gmail.com>\"\n#  Env variables\nENV LC_ALL=\"C\"\nENV DISPLAY=\":99\"\nENV SELENIUM_CONSOLE_URL=\"http://localhost:4444/wd/hub\"\nENV SCREEN_GEOMETRY=\"1024x768x16\"\n#  Expose Selenium web console port\nEXPOSE 4444/tcp\n#  Update packages\nRUN apt-get update -qqy\n#  Install commons\nRUN apt-get install apt-transport-https ca-certificates curl jq software-properties-common sudo openjdk-8-jre-headless wget xvfb xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic -qqy\n#  Install Browser from vendor source\n#  Strategies copied from official Selenium Docker images (https://github.com/SeleniumHQ/docker-selenium)\n# # Install latest Firefox\nARG FIREFOX_VERSION=latest\nRUN FIREFOX_DOWNLOAD_URL=$( if [ $FIREFOX_VERSION = \"latest\" ] || [ $FIREFOX_VERSION = \"nightly-latest\" ] || [ $FIREFOX_VERSION = \"devedition-latest\" ] ; then echo \"https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION-ssl&os=linux64&lang=en-US\" ; else echo \"https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2\" ; fi ;) \\\n && apt-get install --no-install-recommends firefox -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n && wget --no-verbose -O /tmp/firefox.tar.bz2 $FIREFOX_DOWNLOAD_URL \\\n && apt-get -y purge firefox \\\n && rm -rf /opt/firefox \\\n && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n && rm /tmp/firefox.tar.bz2 \\\n && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\n# # Install latest Google Chrome\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update -qqy \\\n && apt-get install ${CHROME_VERSION:-google-chrome-stable} -qqy \\\n && rm /etc/apt/sources.list.d/google-chrome.list \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n# # Chrome Launch Script Wrapper (forces no-sandbox so no need to use --privileged parameter)\nCOPY ./scripts/wrap_chrome_binary /opt/bin/wrap_chrome_binary\nRUN /opt/bin/wrap_chrome_binary\n#  Install Node.js LTS\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN apt-get install --no-install-recommends nodejs -qqy\n#  Add non-root user\nRUN useradd seluser --shell /bin/bash --create-home \\\n && usermod -a -G sudo seluser \\\n && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n && echo 'seluser:secret' | chpasswd\n#  Install selenium-standalone\nARG DEBUG\nRUN npm install selenium-standalone -g\nRUN selenium-standalone install\nADD ./scripts/ /home/seluser/scripts\n#  Add Tini for graceful shutdown\nENV TINI_VERSION=\"v0.18.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n#  Force using non root user to execute the image\nUSER seluser\n#  Display Selenium environment\nRUN . /home/seluser/scripts/utils.sh \\\n && print_selenium_env\n#  Selenium server healthcheck\nHEALTHCHECK --interval=3s --start-period=5s --retries=8 CMD curl -qsf \"$SELENIUM_CONSOLE_URL/status\" | jq -r '.value.ready' | grep \"true\" || exit 1\n#  Run our start script under Tini\nCMD [\"/home/seluser/scripts/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"6aa1ee9fc89a12e7636fdd145f136225","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:latest@sha256:6d0e0c26489e33f5a6f0020edface2727db9489744ecc9b4f50c7fa671f23c49\n#   Contributors\nLABEL author=\"Vincent Voyer <vincent@zeroload.net>\"\nLABEL maintainers=\"Serban Ghita <serbanghita@gmail.com>, David Catalan <catalan.david@gmail.com>\"\n#   Env variables\nENV LC_ALL=\"C\"\nENV DISPLAY=\":99\"\nENV SELENIUM_CONSOLE_URL=\"http://localhost:4444/wd/hub\"\nENV SCREEN_GEOMETRY=\"1024x768x16\"\n#   Expose Selenium web console port\nEXPOSE 4444/tcp\n#   Update packages\nRUN apt-get update -qqy\n#   Install commons\nRUN apt-get install apt-transport-https ca-certificates curl jq software-properties-common sudo openjdk-8-jre-headless wget xvfb xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic -qqy\n#   Install Browser from vendor source\n#   Strategies copied from official Selenium Docker images (https://github.com/SeleniumHQ/docker-selenium)\n#  # Install latest Firefox\nARG FIREFOX_VERSION=latest\nRUN FIREFOX_DOWNLOAD_URL=$( if [ $FIREFOX_VERSION = \"latest\" ] || [ $FIREFOX_VERSION = \"nightly-latest\" ] || [ $FIREFOX_VERSION = \"devedition-latest\" ] ; then echo \"https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION-ssl&os=linux64&lang=en-US\" ; else echo \"https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2\" ; fi ;) \\\n && apt-get install --no-install-recommends firefox -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n && wget --no-verbose -O /tmp/firefox.tar.bz2 $FIREFOX_DOWNLOAD_URL \\\n && apt-get -y purge firefox \\\n && rm -rf /opt/firefox \\\n && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n && rm /tmp/firefox.tar.bz2 \\\n && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\n#  # Install latest Google Chrome\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update -qqy \\\n && apt-get install ${CHROME_VERSION:-google-chrome-stable} -qqy \\\n && rm /etc/apt/sources.list.d/google-chrome.list \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n#  # Chrome Launch Script Wrapper (forces no-sandbox so no need to use --privileged parameter)\nCOPY ./scripts/wrap_chrome_binary /opt/bin/wrap_chrome_binary\nRUN /opt/bin/wrap_chrome_binary\n#   Install Node.js LTS\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN apt-get install --no-install-recommends nodejs -qqy\n#   Add non-root user\nRUN useradd seluser --shell /bin/bash --create-home \\\n && usermod -a -G sudo seluser \\\n && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n && echo 'seluser:secret' | chpasswd\n#   Install selenium-standalone\nARG DEBUG\nRUN npm install selenium-standalone -g\nRUN selenium-standalone install\nADD ./scripts/ /home/seluser/scripts\n#   Add Tini for graceful shutdown\nENV TINI_VERSION=\"v0.18.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n#   Force using non root user to execute the image\nUSER seluser\n#   Display Selenium environment\nRUN . /home/seluser/scripts/utils.sh \\\n && print_selenium_env\n#   Selenium server healthcheck\nHEALTHCHECK --interval=3s --start-period=5s --retries=8 CMD curl -qsf \"$SELENIUM_CONSOLE_URL/status\" | jq -r '.value.ready' | grep \"true\" || exit 1\n#   Run our start script under Tini\nCMD [\"/home/seluser/scripts/start.sh\"]\n","originalDockerfileUglifiedHash":"c5f0418238d2f592eb8d7f9fd8138e4a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a72ac86f26009c9c39704a8526d8f53c6c05bf3a.dockerfile"}