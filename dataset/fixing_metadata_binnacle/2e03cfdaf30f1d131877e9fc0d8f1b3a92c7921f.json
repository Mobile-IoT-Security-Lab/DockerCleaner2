{"seed":454020119,"processedDockerfileHash":"7abdfa29acbb3ba79aef8c89f47760da","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM rocker/r-devel-ubsan-clang\nENV UBSAN_OPTIONS=\"print_stacktrace=1\"\nENV ASAN_OPTIONS=\"alloc_dealloc_mismatch=0:detect_leaks=0:detect_odr_violation=0:malloc_context_size=10:fast_unwind_on_malloc=false\"\nRUN apt-get update -qq \\\n && apt-get -qq remove r-base-core r-cran-* -y \\\n && apt-get -qq dist-upgrade -y \\\n && apt-get install --no-install-recommends git=1:2.39.2-1ubuntu1 pandoc=2.17.1.1-1.1ubuntu1 pandoc-citeproc libssl-dev=3.0.8-1ubuntu1 -qq -y\nRUN apt-get install --no-install-recommends libgmp-dev=2:6.2.1+dfsg1-1.1ubuntu1 libmpfr-dev=4.2.0-1 libxml2-dev=2.9.14+dfsg-1.1build2 -qq -y\nRUN apt-get install --no-install-recommends clang-6.0 -qq -y\n#  # Build Rdevel with clang-6.0\n#  # Add symlink and check out R-devel\nRUN rm /usr/local/bin/llvm-symbolizer \\\n && ln -s $( which llvm-symbolizer-6.0 ;) /usr/local/bin/llvm-symbolizer \\\n && cd /tmp \\\n && svn co https://svn.r-project.org/R/trunk R-devel\n#  # Build and install according extending the standard 'recipe' I emailed/posted years ago\n#  # Leak detection does not work at build time, see https://github.com/google/sanitizers/issues/764 and the fact that we cannot add privileges during build (e.g. https://unix.stackexchange.com/q/329816/19205)\nRUN cd /tmp/R-devel \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CC=\"clang-6.0 -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CXX=\"clang++-6.0 -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" FFLAGS=\"-g -O2 -mtune=native\" FCFLAGS=\"-g -O2 -mtune=native\" CXXFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" MAIN_LD=\"clang++-6.0 -stdlib=libc++ -fsanitize=undefined,address\" FC=\"gfortran\" F77=\"gfortran\" ASAN_OPTIONS=detect_leaks=0 ./configure --enable-R-shlib --without-blas --without-lapack --with-readline --without-recommended-packages --program-suffix=dev --disable-openmp \\\n && ASAN_OPTIONS=detect_leaks=0 make \\\n && ASAN_OPTIONS=detect_leaks=0 make install \\\n && ASAN_OPTIONS=detect_leaks=0 make clean\n#  # Set default CRAN repo\nRUN echo 'options(download.file.method=\"wget\")' >> /usr/local/lib/R/etc/Rprofile.site\nRUN chmod -R a+rw /usr/local/lib/R/site-library\nENV HOME=\"/home/user\"\nRUN useradd --create-home --home-dir $HOME user \\\n && chown -R user:user $HOME\nWORKDIR $HOME\nUSER user\nRUN mkdir -p ~/.R \\\n && echo 'PKG_CXXFLAGS= -I../inst/include -stdlib=libc++ -fno-omit-frame-pointer -g -Wno-ignored-attributes -Wno-deprecated-declarations -Wno-sign-compare' > ~/.R/Makevars \\\n && echo 'CXX=clang++-6.0 -stdlib=libc++' >> ~/.R/Makevars \\\n && echo 'CXX11=clang++-6.0 -stdlib=libc++' >> ~/.R/Makevars\nRUN RDscript -e 'install.packages(\"Rcpp\")'\nRUN RDscript -e 'install.packages(\"Matrix\")'\nRUN RDscript -e 'install.packages(\"igraph\")'\nRUN RDscript -e 'install.packages(\"expm\")'\nRUN RDscript -e 'install.packages(\"lattice\")'\nRUN RDscript -e 'install.packages(\"devtools\")'\n#  RUN RDscript -e 'install.packages(\"RcppParallel\")'\nRUN RDscript -e 'install.packages(\"RcppEigen\")'\nRUN RDscript -e 'install.packages(\"microbenchmark\")'\nRUN RDscript -e 'install.packages(\"stringi\")'\nRUN RDscript -e 'install.packages(\"MASS\")'\nRUN RDscript -e 'install.packages(\"survival\")'\nRUN RDscript -e 'install.packages(\"nnet\")'\nRUN RDscript -e 'install.packages(\"gnm\")'\nRUN RDscript -e 'install.packages(\"testthat\")'\nRUN RDscript -e 'install.packages(\"ggplot2\")'\nRUN RDscript -e 'install.packages(\"ff\")'\nRUN RDscript -e 'install.packages(\"ffbase\")'\nRUN RDscript -e 'install.packages(\"roxygen2\")'\nRUN RDscript -e 'install.packages(\"Cyclops\", dependencies = TRUE)'\nRUN mkdir -p ~/.R \\\n && echo 'PKG_CXXFLAGS= -I../inst/include -stdlib=libc++ -fno-omit-frame-pointer -g' > ~/.R/Makevars \\\n && echo 'CXX11=clang++-6.0 -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope' >> ~/.R/Makevars\n#  RUN git clone https://github.com/OHDSI/Cyclops \\\n#    && RD CMD build Cyclops --no-build-vignettes\nENV UBSAN_OPTIONS=\"print_stacktrace=1\"\nENV ASAN_OPTIONS=\"alloc_dealloc_mismatch=0:detect_leaks=0:detect_odr_violation=0:malloc_context_size=10:fast_unwind_on_malloc=false\"\n#   To build container: docker build -t cyclops-san-clang .\n#   To execute check: docker run --cap-add SYS_PTRACE -v /Users/msuchard/Dropbox/Projects/Cyclops:/home/user/Cyclops --rm -it cyclops-san-clang /usr/bin/bash\n#   $ RD CMD check Cyclops*.tar.gz\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM rocker/r-devel-ubsan-clang\nENV UBSAN_OPTIONS=\"print_stacktrace=1\"\nENV ASAN_OPTIONS=\"alloc_dealloc_mismatch=0:detect_leaks=0:detect_odr_violation=0:malloc_context_size=10:fast_unwind_on_malloc=false\"\nRUN apt-get update -qq \\\n && apt-get -qq remove r-base-core r-cran-* -y \\\n && apt-get -qq dist-upgrade -y \\\n && apt-get install git pandoc pandoc-citeproc libssl-dev -qq -y\nRUN apt-get install libgmp-dev libmpfr-dev libxml2-dev -qq -y\nRUN apt-get install clang-6.0 -qq -y\n# # Build Rdevel with clang-6.0\n# # Add symlink and check out R-devel\nRUN rm /usr/local/bin/llvm-symbolizer \\\n && ln -s $( which llvm-symbolizer-6.0 ;) /usr/local/bin/llvm-symbolizer \\\n && cd /tmp \\\n && svn co https://svn.r-project.org/R/trunk R-devel\n# # Build and install according extending the standard 'recipe' I emailed/posted years ago\n# # Leak detection does not work at build time, see https://github.com/google/sanitizers/issues/764 and the fact that we cannot add privileges during build (e.g. https://unix.stackexchange.com/q/329816/19205)\nRUN cd /tmp/R-devel \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CC=\"clang-6.0 -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CXX=\"clang++-6.0 -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" FFLAGS=\"-g -O2 -mtune=native\" FCFLAGS=\"-g -O2 -mtune=native\" CXXFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" MAIN_LD=\"clang++-6.0 -stdlib=libc++ -fsanitize=undefined,address\" FC=\"gfortran\" F77=\"gfortran\" ASAN_OPTIONS=detect_leaks=0 ./configure --enable-R-shlib --without-blas --without-lapack --with-readline --without-recommended-packages --program-suffix=dev --disable-openmp \\\n && ASAN_OPTIONS=detect_leaks=0 make \\\n && ASAN_OPTIONS=detect_leaks=0 make install \\\n && ASAN_OPTIONS=detect_leaks=0 make clean\n# # Set default CRAN repo\nRUN echo 'options(download.file.method=\"wget\")' >> /usr/local/lib/R/etc/Rprofile.site\nRUN chmod -R a+rw /usr/local/lib/R/site-library\nENV HOME=\"/home/user\"\nRUN useradd --create-home --home-dir $HOME user \\\n && chown -R user:user $HOME\nWORKDIR $HOME\nUSER user\nRUN mkdir -p ~/.R \\\n && echo 'PKG_CXXFLAGS= -I../inst/include -stdlib=libc++ -fno-omit-frame-pointer -g -Wno-ignored-attributes -Wno-deprecated-declarations -Wno-sign-compare' > ~/.R/Makevars \\\n && echo 'CXX=clang++-6.0 -stdlib=libc++' >> ~/.R/Makevars \\\n && echo 'CXX11=clang++-6.0 -stdlib=libc++' >> ~/.R/Makevars\nRUN RDscript -e 'install.packages(\"Rcpp\")'\nRUN RDscript -e 'install.packages(\"Matrix\")'\nRUN RDscript -e 'install.packages(\"igraph\")'\nRUN RDscript -e 'install.packages(\"expm\")'\nRUN RDscript -e 'install.packages(\"lattice\")'\nRUN RDscript -e 'install.packages(\"devtools\")'\n# RUN RDscript -e 'install.packages(\"RcppParallel\")'\nRUN RDscript -e 'install.packages(\"RcppEigen\")'\nRUN RDscript -e 'install.packages(\"microbenchmark\")'\nRUN RDscript -e 'install.packages(\"stringi\")'\nRUN RDscript -e 'install.packages(\"MASS\")'\nRUN RDscript -e 'install.packages(\"survival\")'\nRUN RDscript -e 'install.packages(\"nnet\")'\nRUN RDscript -e 'install.packages(\"gnm\")'\nRUN RDscript -e 'install.packages(\"testthat\")'\nRUN RDscript -e 'install.packages(\"ggplot2\")'\nRUN RDscript -e 'install.packages(\"ff\")'\nRUN RDscript -e 'install.packages(\"ffbase\")'\nRUN RDscript -e 'install.packages(\"roxygen2\")'\nRUN RDscript -e 'install.packages(\"Cyclops\", dependencies = TRUE)'\nRUN mkdir -p ~/.R \\\n && echo 'PKG_CXXFLAGS= -I../inst/include -stdlib=libc++ -fno-omit-frame-pointer -g' > ~/.R/Makevars \\\n && echo 'CXX11=clang++-6.0 -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope' >> ~/.R/Makevars\n# RUN git clone https://github.com/OHDSI/Cyclops \\\n#   && RD CMD build Cyclops --no-build-vignettes\nENV UBSAN_OPTIONS=\"print_stacktrace=1\"\nENV ASAN_OPTIONS=\"alloc_dealloc_mismatch=0:detect_leaks=0:detect_odr_violation=0:malloc_context_size=10:fast_unwind_on_malloc=false\"\n#  To build container: docker build -t cyclops-san-clang .\n#  To execute check: docker run --cap-add SYS_PTRACE -v /Users/msuchard/Dropbox/Projects/Cyclops:/home/user/Cyclops --rm -it cyclops-san-clang /usr/bin/bash\n#  $ RD CMD check Cyclops*.tar.gz\n","injectedSmells":[],"originalDockerfileHash":"d1d6336bbe9023dbf43419611b0fcc17","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM rocker/r-devel-ubsan-clang\nENV UBSAN_OPTIONS=\"print_stacktrace=1\"\nENV ASAN_OPTIONS=\"alloc_dealloc_mismatch=0:detect_leaks=0:detect_odr_violation=0:malloc_context_size=10:fast_unwind_on_malloc=false\"\nRUN apt-get update -qq \\\n && apt-get -qq remove r-base-core r-cran-* -y \\\n && apt-get -qq dist-upgrade -y \\\n && apt-get install git pandoc pandoc-citeproc libssl-dev -qq -y\nRUN apt-get install libgmp-dev libmpfr-dev libxml2-dev -qq -y\nRUN apt-get install clang-6.0 -qq -y\n#  # Build Rdevel with clang-6.0\n#  # Add symlink and check out R-devel\nRUN rm /usr/local/bin/llvm-symbolizer \\\n && ln -s $( which llvm-symbolizer-6.0 ;) /usr/local/bin/llvm-symbolizer \\\n && cd /tmp \\\n && svn co https://svn.r-project.org/R/trunk R-devel\n#  # Build and install according extending the standard 'recipe' I emailed/posted years ago\n#  # Leak detection does not work at build time, see https://github.com/google/sanitizers/issues/764 and the fact that we cannot add privileges during build (e.g. https://unix.stackexchange.com/q/329816/19205)\nRUN cd /tmp/R-devel \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CC=\"clang-6.0 -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CXX=\"clang++-6.0 -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" FFLAGS=\"-g -O2 -mtune=native\" FCFLAGS=\"-g -O2 -mtune=native\" CXXFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" MAIN_LD=\"clang++-6.0 -stdlib=libc++ -fsanitize=undefined,address\" FC=\"gfortran\" F77=\"gfortran\" ASAN_OPTIONS=detect_leaks=0 ./configure --enable-R-shlib --without-blas --without-lapack --with-readline --without-recommended-packages --program-suffix=dev --disable-openmp \\\n && ASAN_OPTIONS=detect_leaks=0 make \\\n && ASAN_OPTIONS=detect_leaks=0 make install \\\n && ASAN_OPTIONS=detect_leaks=0 make clean\n#  # Set default CRAN repo\nRUN echo 'options(download.file.method=\"wget\")' >> /usr/local/lib/R/etc/Rprofile.site\nRUN chmod -R a+rw /usr/local/lib/R/site-library\nENV HOME=\"/home/user\"\nRUN useradd --create-home --home-dir $HOME user \\\n && chown -R user:user $HOME\nWORKDIR $HOME\nUSER user\nRUN mkdir -p ~/.R \\\n && echo 'PKG_CXXFLAGS= -I../inst/include -stdlib=libc++ -fno-omit-frame-pointer -g -Wno-ignored-attributes -Wno-deprecated-declarations -Wno-sign-compare' > ~/.R/Makevars \\\n && echo 'CXX=clang++-6.0 -stdlib=libc++' >> ~/.R/Makevars \\\n && echo 'CXX11=clang++-6.0 -stdlib=libc++' >> ~/.R/Makevars\nRUN RDscript -e 'install.packages(\"Rcpp\")'\nRUN RDscript -e 'install.packages(\"Matrix\")'\nRUN RDscript -e 'install.packages(\"igraph\")'\nRUN RDscript -e 'install.packages(\"expm\")'\nRUN RDscript -e 'install.packages(\"lattice\")'\nRUN RDscript -e 'install.packages(\"devtools\")'\n#  RUN RDscript -e 'install.packages(\"RcppParallel\")'\nRUN RDscript -e 'install.packages(\"RcppEigen\")'\nRUN RDscript -e 'install.packages(\"microbenchmark\")'\nRUN RDscript -e 'install.packages(\"stringi\")'\nRUN RDscript -e 'install.packages(\"MASS\")'\nRUN RDscript -e 'install.packages(\"survival\")'\nRUN RDscript -e 'install.packages(\"nnet\")'\nRUN RDscript -e 'install.packages(\"gnm\")'\nRUN RDscript -e 'install.packages(\"testthat\")'\nRUN RDscript -e 'install.packages(\"ggplot2\")'\nRUN RDscript -e 'install.packages(\"ff\")'\nRUN RDscript -e 'install.packages(\"ffbase\")'\nRUN RDscript -e 'install.packages(\"roxygen2\")'\nRUN RDscript -e 'install.packages(\"Cyclops\", dependencies = TRUE)'\nRUN mkdir -p ~/.R \\\n && echo 'PKG_CXXFLAGS= -I../inst/include -stdlib=libc++ -fno-omit-frame-pointer -g' > ~/.R/Makevars \\\n && echo 'CXX11=clang++-6.0 -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope' >> ~/.R/Makevars\n#  RUN git clone https://github.com/OHDSI/Cyclops \\\n#    && RD CMD build Cyclops --no-build-vignettes\nENV UBSAN_OPTIONS=\"print_stacktrace=1\"\nENV ASAN_OPTIONS=\"alloc_dealloc_mismatch=0:detect_leaks=0:detect_odr_violation=0:malloc_context_size=10:fast_unwind_on_malloc=false\"\n#   To build container: docker build -t cyclops-san-clang .\n#   To execute check: docker run --cap-add SYS_PTRACE -v /Users/msuchard/Dropbox/Projects/Cyclops:/home/user/Cyclops --rm -it cyclops-san-clang /usr/bin/bash\n#   $ RD CMD check Cyclops*.tar.gz\n","originalDockerfileUglifiedHash":"5b4e7e69a8fed359c67b1a0ed2cd17ca","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2e03cfdaf30f1d131877e9fc0d8f1b3a92c7921f.dockerfile"}