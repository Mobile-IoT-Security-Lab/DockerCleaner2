{"seed":367152822,"processedDockerfileHash":"1f47b34f737c61e5a9878ab1a40cb64e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:latest\nMAINTAINER Grow SDK Authors <hello@grow.io>\nARG grow_version\nRUN echo \"Grow: $grow_version\"\n#   Use LTS Versions when available.\nENV CLOUD_SDK_VERSION=\"213.0.0\" \\\n    NODE_VERSION=\"v8.11.4\" \\\n    NPM_VERSION=\"6\" \\\n    YARN_VERSION=\"latest\"\nENV PATH=\"/google-cloud-sdk/bin:$PATH\"\n#   Install Grow.\nRUN apk update \\\n && apk add python python-dev py-pip build-base=0.5-r3 libffi-dev=3.4.4-r0 libressl-dev=3.6.2-r0 g++=12.2.1_git20220924-r4 yaml-dev=0.2.5-r0 --update \\\n && python --version \\\n && pip install pip==23.1 wheel==0.40.0 --no-cache-dir --upgrade \\\n && pip install grow==$grow_version --no-cache-dir --upgrade \\\n && rm -rf /usr/share/man /tmp/* /var/cache/apk/*\n#   Install GCloud.\n#   See https://cloud.google.com/sdk/docs/#linux\n#   From https://github.com/GoogleCloudPlatform/cloud-sdk-docker\nRUN apk update \\\n && apk add curl=7.88.1-r1 python py-crcmod bash=5.2.15-r0 libc6-compat=1.2.3-r4 openssh-client git=2.38.4-r1 \\\n && curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && ln -s /lib /lib64 \\\n && gcloud config set core/disable_usage_reporting true \\\n && gcloud config set component_manager/disable_update_check true \\\n && rm -rf /usr/share/man /tmp/* /var/cache/apk/*\n#   Install Node.\n#   From https://github.com/mhart/alpine-node\nRUN apk add curl=7.88.1-r1 make=4.3-r1 gcc=12.2.1_git20220924-r4 g++=12.2.1_git20220924-r4 python linux-headers=5.19.5-r0 binutils-gold=2.39-r2 gnupg=2.2.40-r0 libstdc++=12.2.1_git20220924-r4 --no-cache \\\n && for server in ipv4.pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do gpg --keyserver $server --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n && break ; done \\\n && curl -sfSLO https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.xz \\\n && curl -sfSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc | gpg --batch --decrypt | grep \" node-${NODE_VERSION}.tar.xz$\" | sha256sum -c | grep ': OK$' \\\n && tar -xf node-${NODE_VERSION}.tar.xz \\\n && cd node-${NODE_VERSION} \\\n && ./configure --prefix=/usr ${CONFIG_FLAGS} \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && cd / \\\n && if [ -z \"$CONFIG_FLAGS\" ] ; then if [ -n \"$NPM_VERSION\" ] ; then npm install npm@${NPM_VERSION} -g ; fi ;find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf ;if [ -n \"$YARN_VERSION\" ] ; then echo \"Installing Yarn ${YARN_VERSION}\" \\\n && for server in ipv4.pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do gpg --keyserver $server --recv-keys 6A010C5166006599AA17F08146C2130DFD2497F5 \\\n && break ; done \\\n && curl -sfSL -O https://yarnpkg.com/${YARN_VERSION}.tar.gz -O https://yarnpkg.com/${YARN_VERSION}.tar.gz.asc \\\n && gpg --batch --verify ${YARN_VERSION}.tar.gz.asc ${YARN_VERSION}.tar.gz \\\n && mkdir /usr/local/share/yarn \\\n && tar -xf ${YARN_VERSION}.tar.gz -C /usr/local/share/yarn --strip 1 \\\n && ln -s /usr/local/share/yarn/bin/yarn /usr/local/bin/ \\\n && ln -s /usr/local/share/yarn/bin/yarnpkg /usr/local/bin/ \\\n && rm ${YARN_VERSION}.tar.gz* ; fi ; fi \\\n && apk del curl make gcc g++ python linux-headers binutils-gold gnupg ${DEL_PKGS} \\\n && rm -rf /usr/share/man /tmp/* /var/cache/apk/* \\\n && rm -rf /node-${NODE_VERSION}* /root/.npm /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts\n#   Confirm versions that are installed.\nRUN echo \"Grow: `grow --version `\" \\\n && echo \"Node: `node -v `\" \\\n && echo \"NPM: `npm -v `\" \\\n && echo \"Yarn: `yarn --version `\" \\\n && echo \"GCloud: `gcloud -v `\"\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:latest\nMAINTAINER Grow SDK Authors <hello@grow.io>\nARG grow_version\nRUN echo \"Grow: $grow_version\"\n#  Use LTS Versions when available.\nENV CLOUD_SDK_VERSION=\"213.0.0\" \\\n    NODE_VERSION=\"v8.11.4\" \\\n    NPM_VERSION=\"6\" \\\n    YARN_VERSION=\"latest\"\nENV PATH=\"/google-cloud-sdk/bin:$PATH\"\n#  Install Grow.\nRUN apk update \\\n && apk add --update python python-dev py-pip build-base libffi-dev libressl-dev g++ yaml-dev \\\n && python --version \\\n && pip install pip wheel --no-cache-dir --upgrade \\\n && pip install grow==$grow_version --no-cache-dir --upgrade \\\n && rm -rf /usr/share/man /tmp/* /var/cache/apk/*\n#  Install GCloud.\n#  See https://cloud.google.com/sdk/docs/#linux\n#  From https://github.com/GoogleCloudPlatform/cloud-sdk-docker\nRUN apk update \\\n && apk add curl python py-crcmod bash libc6-compat openssh-client git \\\n && curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && ln -s /lib /lib64 \\\n && gcloud config set core/disable_usage_reporting true \\\n && gcloud config set component_manager/disable_update_check true \\\n && rm -rf /usr/share/man /tmp/* /var/cache/apk/*\n#  Install Node.\n#  From https://github.com/mhart/alpine-node\nRUN apk add --no-cache curl make gcc g++ python linux-headers binutils-gold gnupg libstdc++ \\\n && for server in ipv4.pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do gpg --keyserver $server --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n && break ; done \\\n && curl -sfSLO https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.xz \\\n && curl -sfSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc | gpg --batch --decrypt | grep \" node-${NODE_VERSION}.tar.xz$\" | sha256sum -c | grep ': OK$' \\\n && tar -xf node-${NODE_VERSION}.tar.xz \\\n && cd node-${NODE_VERSION} \\\n && ./configure --prefix=/usr ${CONFIG_FLAGS} \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && cd / \\\n && if [ -z \"$CONFIG_FLAGS\" ] ; then if [ -n \"$NPM_VERSION\" ] ; then npm install npm@${NPM_VERSION} -g ; fi ;find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf ;if [ -n \"$YARN_VERSION\" ] ; then echo \"Installing Yarn ${YARN_VERSION}\" \\\n && for server in ipv4.pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do gpg --keyserver $server --recv-keys 6A010C5166006599AA17F08146C2130DFD2497F5 \\\n && break ; done \\\n && curl -sfSL -O https://yarnpkg.com/${YARN_VERSION}.tar.gz -O https://yarnpkg.com/${YARN_VERSION}.tar.gz.asc \\\n && gpg --batch --verify ${YARN_VERSION}.tar.gz.asc ${YARN_VERSION}.tar.gz \\\n && mkdir /usr/local/share/yarn \\\n && tar -xf ${YARN_VERSION}.tar.gz -C /usr/local/share/yarn --strip 1 \\\n && ln -s /usr/local/share/yarn/bin/yarn /usr/local/bin/ \\\n && ln -s /usr/local/share/yarn/bin/yarnpkg /usr/local/bin/ \\\n && rm ${YARN_VERSION}.tar.gz* ; fi ; fi \\\n && apk del curl make gcc g++ python linux-headers binutils-gold gnupg ${DEL_PKGS} \\\n && rm -rf /usr/share/man /tmp/* /var/cache/apk/* \\\n && rm -rf /node-${NODE_VERSION}* /root/.npm /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts\n#  Confirm versions that are installed.\nRUN echo \"Grow: `grow --version `\" \\\n && echo \"Node: `node -v `\" \\\n && echo \"NPM: `npm -v `\" \\\n && echo \"Yarn: `yarn --version `\" \\\n && echo \"GCloud: `gcloud -v `\"\n","injectedSmells":[],"originalDockerfileHash":"72b27f7be0f3b3c132f5c9c015e24eb6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:latest\nMAINTAINER Grow SDK Authors <hello@grow.io>\nARG grow_version\nRUN echo \"Grow: $grow_version\"\n#   Use LTS Versions when available.\nENV CLOUD_SDK_VERSION=\"213.0.0\" \\\n    NODE_VERSION=\"v8.11.4\" \\\n    NPM_VERSION=\"6\" \\\n    YARN_VERSION=\"latest\"\nENV PATH=\"/google-cloud-sdk/bin:$PATH\"\n#   Install Grow.\nRUN apk update \\\n && apk add --update python python-dev py-pip build-base libffi-dev libressl-dev g++ yaml-dev \\\n && python --version \\\n && pip install pip wheel --no-cache-dir --upgrade \\\n && pip install grow==$grow_version --no-cache-dir --upgrade \\\n && rm -rf /usr/share/man /tmp/* /var/cache/apk/*\n#   Install GCloud.\n#   See https://cloud.google.com/sdk/docs/#linux\n#   From https://github.com/GoogleCloudPlatform/cloud-sdk-docker\nRUN apk update \\\n && apk add curl python py-crcmod bash libc6-compat openssh-client git \\\n && curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n && ln -s /lib /lib64 \\\n && gcloud config set core/disable_usage_reporting true \\\n && gcloud config set component_manager/disable_update_check true \\\n && rm -rf /usr/share/man /tmp/* /var/cache/apk/*\n#   Install Node.\n#   From https://github.com/mhart/alpine-node\nRUN apk add --no-cache curl make gcc g++ python linux-headers binutils-gold gnupg libstdc++ \\\n && for server in ipv4.pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do gpg --keyserver $server --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n && break ; done \\\n && curl -sfSLO https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.xz \\\n && curl -sfSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc | gpg --batch --decrypt | grep \" node-${NODE_VERSION}.tar.xz$\" | sha256sum -c | grep ': OK$' \\\n && tar -xf node-${NODE_VERSION}.tar.xz \\\n && cd node-${NODE_VERSION} \\\n && ./configure --prefix=/usr ${CONFIG_FLAGS} \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && cd / \\\n && if [ -z \"$CONFIG_FLAGS\" ] ; then if [ -n \"$NPM_VERSION\" ] ; then npm install npm@${NPM_VERSION} -g ; fi ;find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf ;if [ -n \"$YARN_VERSION\" ] ; then echo \"Installing Yarn ${YARN_VERSION}\" \\\n && for server in ipv4.pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do gpg --keyserver $server --recv-keys 6A010C5166006599AA17F08146C2130DFD2497F5 \\\n && break ; done \\\n && curl -sfSL -O https://yarnpkg.com/${YARN_VERSION}.tar.gz -O https://yarnpkg.com/${YARN_VERSION}.tar.gz.asc \\\n && gpg --batch --verify ${YARN_VERSION}.tar.gz.asc ${YARN_VERSION}.tar.gz \\\n && mkdir /usr/local/share/yarn \\\n && tar -xf ${YARN_VERSION}.tar.gz -C /usr/local/share/yarn --strip 1 \\\n && ln -s /usr/local/share/yarn/bin/yarn /usr/local/bin/ \\\n && ln -s /usr/local/share/yarn/bin/yarnpkg /usr/local/bin/ \\\n && rm ${YARN_VERSION}.tar.gz* ; fi ; fi \\\n && apk del curl make gcc g++ python linux-headers binutils-gold gnupg ${DEL_PKGS} \\\n && rm -rf /usr/share/man /tmp/* /var/cache/apk/* \\\n && rm -rf /node-${NODE_VERSION}* /root/.npm /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts\n#   Confirm versions that are installed.\nRUN echo \"Grow: `grow --version `\" \\\n && echo \"Node: `node -v `\" \\\n && echo \"NPM: `npm -v `\" \\\n && echo \"Yarn: `yarn --version `\" \\\n && echo \"GCloud: `gcloud -v `\"\n","originalDockerfileUglifiedHash":"b9c2e6e6a1878ae05ff76e73335e23fa","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ae31ca12f6e5611379a4b6a5712ae5d1a672f889.dockerfile"}