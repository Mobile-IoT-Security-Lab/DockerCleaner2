{"seed":1392768421,"processedDockerfileHash":"8e8fcc8da80d41a566665bda0997b46b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  #################\n#   nginx 1.11 with lua support to build up a canary release solution.\n#   Extended from https://github.com/nginxinc/docker-nginx/blob/11fc019b2be3ad51ba5d097b1857a099c4056213/mainline/alpine/Dockerfile\n#  #################\nFROM alpine:3.4\nMAINTAINER TDAF Team \"tdaf@tid.es\"\nARG NGINX_VERSION=1.11.5\nARG NDK_VERSION=0.3.0\nARG LUA_NGINX_VERSION=0.10.7\nARG GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8\nARG CONFIG=\" --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=/usr/lib/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-http_ssl_module  --with-http_realip_module  --with-http_addition_module  --with-http_sub_module  --with-http_dav_module  --with-http_flv_module  --with-http_mp4_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_random_index_module  --with-http_secure_link_module  --with-http_stub_status_module  --with-http_auth_request_module  --with-http_xslt_module=dynamic  --with-http_image_filter_module=dynamic  --with-http_geoip_module=dynamic  --with-http_perl_module=dynamic  --with-threads  --with-stream  --with-stream_ssl_module  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-file-aio  --with-http_v2_module  --with-ipv6  --with-ld-opt=\"-Wl,-rpath,/usr/lib64\"  --add-module=/usr/src/ngx_devel_kit-${NDK_VERSION}  --add-module=/usr/src/lua-nginx-module-${LUA_NGINX_VERSION}  \"\nRUN addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && apk add lua=5.1.5-r4 luajit=2.0.4-r0 gettext=0.19.7-r3 bash=4.3.42-r5 --no-cache \\\n && apk add gcc=5.3.0-r0 libc-dev=0.7-r0 make=4.1-r1 openssl-dev=1.0.2n-r0 pcre-dev=8.38-r1 zlib-dev=1.2.11-r0 linux-headers=4.4.6-r1 curl=7.60.0-r1 gnupg=2.1.12-r1 libxslt-dev=1.1.29-r1 gd-dev=2.2.5-r0 geoip-dev=1.6.7-r1 perl-dev=5.22.3-r0 lua-dev=5.1.5-r4 luajit-dev=2.0.4-r0 --no-cache --virtual .build-deps \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \\\n && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && curl -fSL https://github.com/simpl/ngx_devel_kit/archive/v${NDK_VERSION}.tar.gz -o ngx_devel_kit-${NDK_VERSION}.tar.gz \\\n && curl -fSL https://github.com/openresty/lua-nginx-module/archive/v${LUA_NGINX_VERSION}.tar.gz -o lua-nginx-module-${LUA_NGINX_VERSION}.tar.gz \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f ngx_devel_kit-${NDK_VERSION}.tar.gz \\\n && tar -zxC /usr/src -f lua-nginx-module-${LUA_NGINX_VERSION}.tar.gz \\\n && rm ngx_devel_kit-${NDK_VERSION}.tar.gz \\\n && rm lua-nginx-module-${LUA_NGINX_VERSION}.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \\\n && ./configure $CONFIG \\\n && make \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && mkdir -p /var/run/nginx \\\n && chown -R nginx:nginx /var/run/nginx \\\n && apk add $runDeps --virtual .nginx-rundeps \\\n && apk del .build-deps \\\n && rm -rf /usr/src\nCOPY config /etc/nginx/\nCOPY *.sh /usr/bin/\nVOLUME /etc/nginx/conf.d /etc/nginx/canary /var/log/nginx\nEXPOSE 8080/tcp\nENTRYPOINT [\"/usr/bin/nginx-docker-entrypoint.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# #################\n#  nginx 1.11 with lua support to build up a canary release solution.\n#  Extended from https://github.com/nginxinc/docker-nginx/blob/11fc019b2be3ad51ba5d097b1857a099c4056213/mainline/alpine/Dockerfile\n# #################\nFROM alpine:3.4\nMAINTAINER TDAF Team \"tdaf@tid.es\"\nARG NGINX_VERSION=1.11.5\nARG NDK_VERSION=0.3.0\nARG LUA_NGINX_VERSION=0.10.7\nARG GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8\nARG CONFIG=\" --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=/usr/lib/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-http_ssl_module  --with-http_realip_module  --with-http_addition_module  --with-http_sub_module  --with-http_dav_module  --with-http_flv_module  --with-http_mp4_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_random_index_module  --with-http_secure_link_module  --with-http_stub_status_module  --with-http_auth_request_module  --with-http_xslt_module=dynamic  --with-http_image_filter_module=dynamic  --with-http_geoip_module=dynamic  --with-http_perl_module=dynamic  --with-threads  --with-stream  --with-stream_ssl_module  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-file-aio  --with-http_v2_module  --with-ipv6  --with-ld-opt=\"-Wl,-rpath,/usr/lib64\"  --add-module=/usr/src/ngx_devel_kit-${NDK_VERSION}  --add-module=/usr/src/lua-nginx-module-${LUA_NGINX_VERSION}  \"\nRUN addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && apk add --no-cache lua luajit gettext bash \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev perl-dev lua-dev luajit-dev \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \\\n && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && curl -fSL https://github.com/simpl/ngx_devel_kit/archive/v${NDK_VERSION}.tar.gz -o ngx_devel_kit-${NDK_VERSION}.tar.gz \\\n && curl -fSL https://github.com/openresty/lua-nginx-module/archive/v${LUA_NGINX_VERSION}.tar.gz -o lua-nginx-module-${LUA_NGINX_VERSION}.tar.gz \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f ngx_devel_kit-${NDK_VERSION}.tar.gz \\\n && tar -zxC /usr/src -f lua-nginx-module-${LUA_NGINX_VERSION}.tar.gz \\\n && rm ngx_devel_kit-${NDK_VERSION}.tar.gz \\\n && rm lua-nginx-module-${LUA_NGINX_VERSION}.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \\\n && ./configure $CONFIG \\\n && make \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && mkdir -p /var/run/nginx \\\n && chown -R nginx:nginx /var/run/nginx \\\n && apk add --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && rm -rf /usr/src\nADD config /etc/nginx/\nADD *.sh /usr/bin/\nVOLUME /etc/nginx/conf.d /etc/nginx/canary /var/log/nginx\nEXPOSE 8080/tcp\nENTRYPOINT [\"/usr/bin/nginx-docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"c03e75c9e71322ee74236d305303f5a5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  #################\n#   nginx 1.11 with lua support to build up a canary release solution.\n#   Extended from https://github.com/nginxinc/docker-nginx/blob/11fc019b2be3ad51ba5d097b1857a099c4056213/mainline/alpine/Dockerfile\n#  #################\nFROM alpine:3.4\nMAINTAINER TDAF Team \"tdaf@tid.es\"\nARG NGINX_VERSION=1.11.5\nARG NDK_VERSION=0.3.0\nARG LUA_NGINX_VERSION=0.10.7\nARG GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8\nARG CONFIG=\" --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx  --modules-path=/usr/lib/nginx/modules  --conf-path=/etc/nginx/nginx.conf  --error-log-path=/var/log/nginx/error.log  --http-log-path=/var/log/nginx/access.log  --pid-path=/var/run/nginx.pid  --lock-path=/var/run/nginx.lock  --http-client-body-temp-path=/var/cache/nginx/client_temp  --http-proxy-temp-path=/var/cache/nginx/proxy_temp  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp  --http-scgi-temp-path=/var/cache/nginx/scgi_temp  --user=nginx  --group=nginx  --with-http_ssl_module  --with-http_realip_module  --with-http_addition_module  --with-http_sub_module  --with-http_dav_module  --with-http_flv_module  --with-http_mp4_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_random_index_module  --with-http_secure_link_module  --with-http_stub_status_module  --with-http_auth_request_module  --with-http_xslt_module=dynamic  --with-http_image_filter_module=dynamic  --with-http_geoip_module=dynamic  --with-http_perl_module=dynamic  --with-threads  --with-stream  --with-stream_ssl_module  --with-http_slice_module  --with-mail  --with-mail_ssl_module  --with-file-aio  --with-http_v2_module  --with-ipv6  --with-ld-opt=\"-Wl,-rpath,/usr/lib64\"  --add-module=/usr/src/ngx_devel_kit-${NDK_VERSION}  --add-module=/usr/src/lua-nginx-module-${LUA_NGINX_VERSION}  \"\nRUN addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && apk add --no-cache lua luajit gettext bash \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev perl-dev lua-dev luajit-dev \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \\\n && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && curl -fSL https://github.com/simpl/ngx_devel_kit/archive/v${NDK_VERSION}.tar.gz -o ngx_devel_kit-${NDK_VERSION}.tar.gz \\\n && curl -fSL https://github.com/openresty/lua-nginx-module/archive/v${LUA_NGINX_VERSION}.tar.gz -o lua-nginx-module-${LUA_NGINX_VERSION}.tar.gz \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f ngx_devel_kit-${NDK_VERSION}.tar.gz \\\n && tar -zxC /usr/src -f lua-nginx-module-${LUA_NGINX_VERSION}.tar.gz \\\n && rm ngx_devel_kit-${NDK_VERSION}.tar.gz \\\n && rm lua-nginx-module-${LUA_NGINX_VERSION}.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \\\n && ./configure $CONFIG \\\n && make \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && mkdir -p /var/run/nginx \\\n && chown -R nginx:nginx /var/run/nginx \\\n && apk add --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && rm -rf /usr/src\nADD config /etc/nginx/\nADD *.sh /usr/bin/\nVOLUME /etc/nginx/conf.d /etc/nginx/canary /var/log/nginx\nEXPOSE 8080/tcp\nENTRYPOINT [\"/usr/bin/nginx-docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"f7cedf4754d774b93d554c780457bf9b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6235753d3342fa884508f17e1b06183ff1ad83ff.dockerfile"}