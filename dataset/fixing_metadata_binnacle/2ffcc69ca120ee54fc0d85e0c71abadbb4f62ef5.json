{"seed":1542506445,"processedDockerfileHash":"3e2cf0d08bae06e9b805fd33926b37a6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  #######################################################################\n#   Dockerfile for Oracle JDK 8 on Ubuntu 16.04\n#  #######################################################################\n#   pull base image\nFROM ubuntu:16.04\n#   maintainer details\nMAINTAINER h2oai \"h2o.ai\"\n#   add a post-invoke hook to dpkg which deletes cached deb files\n#   update the sources.list\n#   update/dist-upgrade\n#   clear the caches\nRUN echo 'DPkg::Post-Invoke {\"/bin/rm -f /var/cache/apt/archives/*.deb || true\";};' | tee /etc/apt/apt.conf.d/no-cache \\\n && echo \"deb http://mirror.math.princeton.edu/pub/ubuntu xenial main universe\" >> /etc/apt/sources.list \\\n && : \\\n && apt-get dist-upgrade -y \\\n && apt-get clean \\\n && rm -rf /var/cache/apt/* \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y curl wget unzip apt-utils software-properties-common python-software-properties python3-setuptools python3-pip python-pip gdebi python3-pandas python-pandas python3-numpy python-numpy python3-matplotlib python-matplotlib libxml2-dev libssl-dev libcurl4-openssl-dev libgtk2.0-0 iputils-ping cloud-utils apache2-utils \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && : \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y oracle-java8-installer \\\n && apt-get clean \\\n && wget http://h2o-release.s3.amazonaws.com/h2o/latest_stable -O latest \\\n && wget --no-check-certificate -i latest -O /opt/h2o.zip \\\n && unzip -d /opt /opt/h2o.zip \\\n && rm /opt/h2o.zip \\\n && cd /opt \\\n && cd `find . -name 'h2o.jar' | sed 's/.\\\\///;s/\\\\/h2o.jar//g' ` \\\n && cp h2o.jar /opt \\\n && /usr/bin/pip install `find . -name \"*.whl\" ` \\\n && cd / \\\n && wget https://raw.githubusercontent.com/h2oai/h2o-3/master/docker/start-h2o-docker.sh \\\n && chmod +x start-h2o-docker.sh \\\n && wget http://s3.amazonaws.com/h2o-training/mnist/train.csv.gz \\\n && gunzip train.csv.gz \\\n && wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Extraction_Script.py \\\n && wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Transformation_Script.py \\\n && wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Modeling_Script.py\n#   Get kubectl\nRUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl \\\n && chmod +x ./kubectl \\\n && mv ./kubectl /usr/local/bin/kubectl\n#   Define a mountable data directory\n#  VOLUME \\\n#    [\"/data\"]\n#   Define the working directory\n#  WORKDIR \\\n#    /data\nCOPY docker-startup.sh /opt/docker-startup.sh\nRUN chmod +x /opt/docker-startup.sh\nEXPOSE 54321/tcp\nEXPOSE 54322/tcp\nEXPOSE 54323/tcp\nEXPOSE 54324/tcp\n#  ENTRYPOINT [\"java\", \"-Xmx4g\", \"-jar\", \"/opt/h2o.jar\"]\n#   Define default command\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# #######################################################################\n#  Dockerfile for Oracle JDK 8 on Ubuntu 16.04\n# #######################################################################\n#  pull base image\nFROM ubuntu:16.04\n#  maintainer details\nMAINTAINER h2oai \"h2o.ai\"\n#  add a post-invoke hook to dpkg which deletes cached deb files\n#  update the sources.list\n#  update/dist-upgrade\n#  clear the caches\nRUN echo 'DPkg::Post-Invoke {\"/bin/rm -f /var/cache/apt/archives/*.deb || true\";};' | tee /etc/apt/apt.conf.d/no-cache \\\n && echo \"deb http://mirror.math.princeton.edu/pub/ubuntu xenial main universe\" >> /etc/apt/sources.list \\\n && apt-get update -q -y \\\n && apt-get dist-upgrade -y \\\n && apt-get clean \\\n && rm -rf /var/cache/apt/* \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y curl wget unzip apt-utils software-properties-common python-software-properties python3-setuptools python3-pip python-pip gdebi python3-pandas python-pandas python3-numpy python-numpy python3-matplotlib python-matplotlib libxml2-dev libssl-dev libcurl4-openssl-dev libgtk2.0-0 iputils-ping cloud-utils apache2-utils \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update -q \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y oracle-java8-installer \\\n && apt-get clean \\\n && wget http://h2o-release.s3.amazonaws.com/h2o/latest_stable -O latest \\\n && wget --no-check-certificate -i latest -O /opt/h2o.zip \\\n && unzip -d /opt /opt/h2o.zip \\\n && rm /opt/h2o.zip \\\n && cd /opt \\\n && cd `find . -name 'h2o.jar' | sed 's/.\\\\///;s/\\\\/h2o.jar//g' ` \\\n && cp h2o.jar /opt \\\n && /usr/bin/pip install `find . -name \"*.whl\" ` \\\n && cd / \\\n && wget https://raw.githubusercontent.com/h2oai/h2o-3/master/docker/start-h2o-docker.sh \\\n && chmod +x start-h2o-docker.sh \\\n && wget http://s3.amazonaws.com/h2o-training/mnist/train.csv.gz \\\n && gunzip train.csv.gz \\\n && wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Extraction_Script.py \\\n && wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Transformation_Script.py \\\n && wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Modeling_Script.py\n#  Get kubectl\nRUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl \\\n && chmod +x ./kubectl \\\n && mv ./kubectl /usr/local/bin/kubectl\n#  Define a mountable data directory\n# VOLUME \\\n#   [\"/data\"]\n#  Define the working directory\n# WORKDIR \\\n#   /data\nCOPY docker-startup.sh /opt/docker-startup.sh\nRUN chmod +x /opt/docker-startup.sh\nEXPOSE 54321/tcp\nEXPOSE 54322/tcp\nEXPOSE 54323/tcp\nEXPOSE 54324/tcp\n# ENTRYPOINT [\"java\", \"-Xmx4g\", \"-jar\", \"/opt/h2o.jar\"]\n#  Define default command\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"bc5098f49af0c82097842f6b5bf0c7cd","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  #######################################################################\n#   Dockerfile for Oracle JDK 8 on Ubuntu 16.04\n#  #######################################################################\n#   pull base image\nFROM ubuntu:16.04\n#   maintainer details\nMAINTAINER h2oai \"h2o.ai\"\n#   add a post-invoke hook to dpkg which deletes cached deb files\n#   update the sources.list\n#   update/dist-upgrade\n#   clear the caches\nRUN echo 'DPkg::Post-Invoke {\"/bin/rm -f /var/cache/apt/archives/*.deb || true\";};' | tee /etc/apt/apt.conf.d/no-cache \\\n && echo \"deb http://mirror.math.princeton.edu/pub/ubuntu xenial main universe\" >> /etc/apt/sources.list \\\n && apt-get update -q -y \\\n && apt-get dist-upgrade -y \\\n && apt-get clean \\\n && rm -rf /var/cache/apt/* \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y curl wget unzip apt-utils software-properties-common python-software-properties python3-setuptools python3-pip python-pip gdebi python3-pandas python-pandas python3-numpy python-numpy python3-matplotlib python-matplotlib libxml2-dev libssl-dev libcurl4-openssl-dev libgtk2.0-0 iputils-ping cloud-utils apache2-utils \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update -q \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y oracle-java8-installer \\\n && apt-get clean \\\n && wget http://h2o-release.s3.amazonaws.com/h2o/latest_stable -O latest \\\n && wget --no-check-certificate -i latest -O /opt/h2o.zip \\\n && unzip -d /opt /opt/h2o.zip \\\n && rm /opt/h2o.zip \\\n && cd /opt \\\n && cd `find . -name 'h2o.jar' | sed 's/.\\\\///;s/\\\\/h2o.jar//g' ` \\\n && cp h2o.jar /opt \\\n && /usr/bin/pip install `find . -name \"*.whl\" ` \\\n && cd / \\\n && wget https://raw.githubusercontent.com/h2oai/h2o-3/master/docker/start-h2o-docker.sh \\\n && chmod +x start-h2o-docker.sh \\\n && wget http://s3.amazonaws.com/h2o-training/mnist/train.csv.gz \\\n && gunzip train.csv.gz \\\n && wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Extraction_Script.py \\\n && wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Transformation_Script.py \\\n && wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Modeling_Script.py\n#   Get kubectl\nRUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl \\\n && chmod +x ./kubectl \\\n && mv ./kubectl /usr/local/bin/kubectl\n#   Define a mountable data directory\n#  VOLUME \\\n#    [\"/data\"]\n#   Define the working directory\n#  WORKDIR \\\n#    /data\nCOPY docker-startup.sh /opt/docker-startup.sh\nRUN chmod +x /opt/docker-startup.sh\nEXPOSE 54321/tcp\nEXPOSE 54322/tcp\nEXPOSE 54323/tcp\nEXPOSE 54324/tcp\n#  ENTRYPOINT [\"java\", \"-Xmx4g\", \"-jar\", \"/opt/h2o.jar\"]\n#   Define default command\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"9025710ddb62f0400b2a974aff2ee87a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2ffcc69ca120ee54fc0d85e0c71abadbb4f62ef5.dockerfile"}