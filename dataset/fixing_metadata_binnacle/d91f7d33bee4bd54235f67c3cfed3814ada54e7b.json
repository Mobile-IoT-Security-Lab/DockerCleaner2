{"seed":1758587212,"processedDockerfileHash":"71c530a20a5a45a66a09bf2d818ed999","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  Download base image ubuntu 16.04\nFROM ubuntu:16.04\n#   Volume configuration: available during `docker build` time, read only\n#   (use docker build -v ? )\n#  VOLUME [\"/vagrant\"]\n#   hassle #1: default user name in Docker is 'root'\n#   -m forces to make home directory\nRUN useradd -m vagrant\n#   hassle #2: default Dockerfile shell is sh\nSHELL [\"/bin/bash\", \"-c\"]\n#   Update Software repository # Install packages from ubuntu repository\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 make=4.1-6 automake=1:1.15-4ubuntu1 libtool=2.4.6-0.1 autoconf=2.69-9 patch=2.7.5-1ubuntu0.16.04.2 subversion=1.9.3-2ubuntu1.3 fuse=2.9.4-1ubuntu3.1 libatlas-base-dev=3.10.2-9 libatlas-dev=3.10.2-9 liblapack-dev=3.6.0-2ubuntu2 sox=14.4.1-5+deb8u4ubuntu0.1 libav-tools=7:2.8.17-0ubuntu0.1 g++=4:5.3.1-1ubuntu1 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 libsox-fmt-all=14.4.1-5+deb8u4ubuntu0.1 apache2=2.4.18-2ubuntu3.17 sshfs=2.5-1ubuntu1 gcc-multilib=4:5.3.1-1ubuntu1 libncurses5-dev=6.0+20160213-1ubuntu1 unzip=6.0-20ubuntu1.1 wget=1.17.1-1ubuntu1.5 bzip2=1.0.6-8ubuntu0.2 libboost-all-dev=1.58.0.1ubuntu1 -y\nRUN apt-get install --no-install-recommends icedtea-netx-common=1.6.2-3ubuntu1 icedtea-netx=1.6.2-3ubuntu1 -y\nRUN rm -rf /var/lib/apt/lists/*\n#   Kaldi and others want bash - otherwise the build process fails\nRUN [ $( readlink /bin/sh ;) == \"dash\" ] \\\n && ln -s -f bash /bin/sh\n#   Install Anaconda and Theano\nRUN echo \"Downloading Anaconda-2.3.0...\"\nUSER vagrant\nWORKDIR /home/vagrant\nRUN wget -q https://3230d63b5fc54e62148e-c95ac804525aac4b6dba79b00b39d1d3.ssl.cf1.rackcdn.com/Anaconda-2.3.0-Linux-x86_64.sh\nRUN bash /home/vagrant/Anaconda-2.3.0-Linux-x86_64.sh -b\nRUN rm Anaconda-2.3.0-Linux-x86_64.sh\nRUN if ! grep -q -i anaconda .bashrc ; then echo \"export PATH=/home/vagrant/anaconda/bin:$PATH\" >> /home/vagrant/.bashrc; fi\n#   install Matlab runtime environment\nUSER root\nRUN cd /tmp \\\n && wget -q http://ssd.mathworks.com/supportfiles/downloads/R2017b/deployment_files/R2017b/installers/glnxa64/MCR_R2017b_glnxa64_installer.zip \\\n && unzip -q MCR_R2017b_glnxa64_installer.zip \\\n && ./install -mode silent -agreeToLicense yes\n#   add Matlab stuff to path\nRUN echo 'LD_LIBRARY_PATH=\"/usr/local/MATLAB/MATLAB_Runtime/v93/runtime/glnxa64:/usr/local/MATLAB/MATLAB_Runtime/v93/bin/glnxa64:/usr/local/MATLAB/MATLAB_Runtime/v93/sys/os/glnxa64:$LD_LIBRARY_PATH\"' >> /home/vagrant/.bashrc\nRUN rm /tmp/MCR_R2017b_glnxa64_installer.zip\n#   Install OpenSMILE\nRUN echo \"Installing OpenSMILE\"\nUSER vagrant\nWORKDIR /home/vagrant\nRUN wget -q http://audeering.com/download/1131/ -O OpenSMILE-2.1.tar.gz \\\n && tar zxvf OpenSMILE-2.1.tar.gz --no-same-owner \\\n && rm OpenSMILE-2.1.tar.gz\n#   optionally Install HTK (without it, some other tools will not work)\n#   the idea is to make users independently download HTK installer since\n#   we cannot redistribute\nWORKDIR /home/vagrant\nUSER root\nRUN wget http://speech-kitchen.org/vms/Data/HTK.tar.gz \\\n && tar zxf HTK.tar.gz --no-same-owner\nWORKDIR /home/vagrant/htk\nRUN ./configure --without-x --disable-hslab\n#   Fix bad Makefile\nRUN sed -i \"s/ /\\t/g\" HLMTools/Makefile \\\n && make all\nRUN make install\n#   Get OpenSAT and all the tools\n#   Install DiarTK, LDC SAD, LDC scoring, Rajat's LENA stuff\n#  git clone http://github.com/srvk/ldc_sad_hmm\nUSER vagrant\nWORKDIR /home/vagrant\nRUN git clone http://github.com/srvk/OpenSAT \\\n && cp -f OpenSAT/theanorc /home/vagrant/.theanorc \\\n && git clone http://github.com/srvk/ib_diarization_toolkit \\\n && git clone https://github.com/rajatkuls/lena-clean \\\n && git clone https://github.com/srvk/Yunitator \\\n && git clone https://github.com/srvk/To-Combo-SAD \\\n && git clone https://github.com/srvk/tools.git \\\n && git clone https://github.com/aclew/varia.git\n#   Get tools: PDNN, coconut, ldc_sad_hmm\nUSER vagrant\nWORKDIR /home/vagrant\nRUN mkdir G \\\n && cd G \\\n && git clone http://github.com/yajiemiao/pdnn \\\n && git clone http://github.com/srvk/coconut\n#   get theanorc!\n#   need to figure out how to access this at 'docker build' time. Do it at 'docker run' time instead???\n#  RUN    cp /vagrant/.theanorc /home/vagrant/\n#   install theano\n#   install pympi (for eaf -> rttm conversion) and tgt (for textgrid -> rttm conversion)\n#   and intervaltree (needed for rttm2scp.py)\n#   assume 'conda' is installed now (get path)\n#   now dependencies for Yunitator\nRUN export PATH=/home/vagrant/anaconda/bin:$PATH \\\n && /home/vagrant/anaconda/bin/conda install -y theano=0.8.2 \\\n && /home/vagrant/anaconda/bin/pip install pympi-ling tgt intervaltree \\\n && /home/vagrant/anaconda/bin/conda install numpy scipy mkl dill tabulate joblib \\\n && /home/vagrant/anaconda/bin/conda install cudatoolkit \\\n && /home/vagrant/anaconda/bin/conda install pytorch-cpu -c pytorch\nUSER root\n#   Some cleanup\n#   If default user is given by USER, passwordless sudo not work???\nRUN touch /home/vagrant/.Xauthority \\\n && chown -R vagrant:vagrant /home/vagrant \\\n && apt-get autoremove -y\n#   Open up HTTP / HTTPS ports\n#  EXPOSE 80 443\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# Download base image ubuntu 16.04\nFROM ubuntu:16.04\n#  Volume configuration: available during `docker build` time, read only\n#  (use docker build -v ? )\n# VOLUME [\"/vagrant\"]\n#  hassle #1: default user name in Docker is 'root'\n#  -m forces to make home directory\nRUN useradd -m vagrant\n#  hassle #2: default Dockerfile shell is sh\nSHELL [\"/bin/bash\", \"-c\"]\n#  Update Software repository # Install packages from ubuntu repository\nRUN apt-get update \\\n && apt-get install git make automake libtool autoconf patch subversion fuse libatlas-base-dev libatlas-dev liblapack-dev sox libav-tools g++ zlib1g-dev libsox-fmt-all apache2 sshfs gcc-multilib libncurses5-dev unzip wget bzip2 libboost-all-dev -y\nRUN apt-get install icedtea-netx-common icedtea-netx -y\nRUN rm -rf /var/lib/apt/lists/*\n#  Kaldi and others want bash - otherwise the build process fails\nRUN [ $( readlink /bin/sh ;) == \"dash\" ] \\\n && ln -s -f bash /bin/sh\n#  Install Anaconda and Theano\nRUN echo \"Downloading Anaconda-2.3.0...\"\nUSER vagrant\nWORKDIR /home/vagrant\nRUN wget -q https://3230d63b5fc54e62148e-c95ac804525aac4b6dba79b00b39d1d3.ssl.cf1.rackcdn.com/Anaconda-2.3.0-Linux-x86_64.sh\nRUN bash /home/vagrant/Anaconda-2.3.0-Linux-x86_64.sh -b\nRUN rm Anaconda-2.3.0-Linux-x86_64.sh\nRUN if ! grep -q -i anaconda .bashrc ; then echo \"export PATH=/home/vagrant/anaconda/bin:$PATH\" >> /home/vagrant/.bashrc; fi\n#  install Matlab runtime environment\nUSER root\nRUN cd /tmp \\\n && wget -q http://ssd.mathworks.com/supportfiles/downloads/R2017b/deployment_files/R2017b/installers/glnxa64/MCR_R2017b_glnxa64_installer.zip \\\n && unzip -q MCR_R2017b_glnxa64_installer.zip \\\n && ./install -mode silent -agreeToLicense yes\n#  add Matlab stuff to path\nRUN echo 'LD_LIBRARY_PATH=\"/usr/local/MATLAB/MATLAB_Runtime/v93/runtime/glnxa64:/usr/local/MATLAB/MATLAB_Runtime/v93/bin/glnxa64:/usr/local/MATLAB/MATLAB_Runtime/v93/sys/os/glnxa64:$LD_LIBRARY_PATH\"' >> /home/vagrant/.bashrc\nRUN rm /tmp/MCR_R2017b_glnxa64_installer.zip\n#  Install OpenSMILE\nRUN echo \"Installing OpenSMILE\"\nUSER vagrant\nWORKDIR /home/vagrant\nRUN wget -q http://audeering.com/download/1131/ -O OpenSMILE-2.1.tar.gz \\\n && tar zxvf OpenSMILE-2.1.tar.gz --no-same-owner \\\n && rm OpenSMILE-2.1.tar.gz\n#  optionally Install HTK (without it, some other tools will not work)\n#  the idea is to make users independently download HTK installer since\n#  we cannot redistribute\nWORKDIR /home/vagrant\nUSER root\nRUN wget http://speech-kitchen.org/vms/Data/HTK.tar.gz \\\n && tar zxf HTK.tar.gz --no-same-owner\nWORKDIR /home/vagrant/htk\nRUN ./configure --without-x --disable-hslab\n#  Fix bad Makefile\nRUN sed -i \"s/ /\\t/g\" HLMTools/Makefile \\\n && make all\nRUN make install\n#  Get OpenSAT and all the tools\n#  Install DiarTK, LDC SAD, LDC scoring, Rajat's LENA stuff\n# git clone http://github.com/srvk/ldc_sad_hmm\nUSER vagrant\nWORKDIR /home/vagrant\nRUN git clone http://github.com/srvk/OpenSAT \\\n && cp -f OpenSAT/theanorc /home/vagrant/.theanorc \\\n && git clone http://github.com/srvk/ib_diarization_toolkit \\\n && git clone https://github.com/rajatkuls/lena-clean \\\n && git clone https://github.com/srvk/Yunitator \\\n && git clone https://github.com/srvk/To-Combo-SAD \\\n && git clone https://github.com/srvk/tools.git \\\n && git clone https://github.com/aclew/varia.git\n#  Get tools: PDNN, coconut, ldc_sad_hmm\nUSER vagrant\nWORKDIR /home/vagrant\nRUN mkdir G \\\n && cd G \\\n && git clone http://github.com/yajiemiao/pdnn \\\n && git clone http://github.com/srvk/coconut\n#  get theanorc!\n#  need to figure out how to access this at 'docker build' time. Do it at 'docker run' time instead???\n# RUN    cp /vagrant/.theanorc /home/vagrant/\n#  install theano\n#  install pympi (for eaf -> rttm conversion) and tgt (for textgrid -> rttm conversion)\n#  and intervaltree (needed for rttm2scp.py)\n#  assume 'conda' is installed now (get path)\n#  now dependencies for Yunitator\nRUN export PATH=/home/vagrant/anaconda/bin:$PATH \\\n && /home/vagrant/anaconda/bin/conda install -y theano=0.8.2 \\\n && /home/vagrant/anaconda/bin/pip install pympi-ling tgt intervaltree \\\n && /home/vagrant/anaconda/bin/conda install numpy scipy mkl dill tabulate joblib \\\n && /home/vagrant/anaconda/bin/conda install cudatoolkit \\\n && /home/vagrant/anaconda/bin/conda install pytorch-cpu -c pytorch\nUSER root\n#  Some cleanup\n#  If default user is given by USER, passwordless sudo not work???\nRUN touch /home/vagrant/.Xauthority \\\n && chown -R vagrant:vagrant /home/vagrant \\\n && apt-get autoremove -y\n#  Open up HTTP / HTTPS ports\n# EXPOSE 80 443\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"432f32cc6ebb7f2441ef9be068d1e94c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  Download base image ubuntu 16.04\nFROM ubuntu:16.04\n#   Volume configuration: available during `docker build` time, read only\n#   (use docker build -v ? )\n#  VOLUME [\"/vagrant\"]\n#   hassle #1: default user name in Docker is 'root'\n#   -m forces to make home directory\nRUN useradd -m vagrant\n#   hassle #2: default Dockerfile shell is sh\nSHELL [\"/bin/bash\", \"-c\"]\n#   Update Software repository # Install packages from ubuntu repository\nRUN apt-get update \\\n && apt-get install git make automake libtool autoconf patch subversion fuse libatlas-base-dev libatlas-dev liblapack-dev sox libav-tools g++ zlib1g-dev libsox-fmt-all apache2 sshfs gcc-multilib libncurses5-dev unzip wget bzip2 libboost-all-dev -y\nRUN apt-get install icedtea-netx-common icedtea-netx -y\nRUN rm -rf /var/lib/apt/lists/*\n#   Kaldi and others want bash - otherwise the build process fails\nRUN [ $( readlink /bin/sh ;) == \"dash\" ] \\\n && ln -s -f bash /bin/sh\n#   Install Anaconda and Theano\nRUN echo \"Downloading Anaconda-2.3.0...\"\nUSER vagrant\nWORKDIR /home/vagrant\nRUN wget -q https://3230d63b5fc54e62148e-c95ac804525aac4b6dba79b00b39d1d3.ssl.cf1.rackcdn.com/Anaconda-2.3.0-Linux-x86_64.sh\nRUN bash /home/vagrant/Anaconda-2.3.0-Linux-x86_64.sh -b\nRUN rm Anaconda-2.3.0-Linux-x86_64.sh\nRUN if ! grep -q -i anaconda .bashrc ; then echo \"export PATH=/home/vagrant/anaconda/bin:$PATH\" >> /home/vagrant/.bashrc; fi\n#   install Matlab runtime environment\nUSER root\nRUN cd /tmp \\\n && wget -q http://ssd.mathworks.com/supportfiles/downloads/R2017b/deployment_files/R2017b/installers/glnxa64/MCR_R2017b_glnxa64_installer.zip \\\n && unzip -q MCR_R2017b_glnxa64_installer.zip \\\n && ./install -mode silent -agreeToLicense yes\n#   add Matlab stuff to path\nRUN echo 'LD_LIBRARY_PATH=\"/usr/local/MATLAB/MATLAB_Runtime/v93/runtime/glnxa64:/usr/local/MATLAB/MATLAB_Runtime/v93/bin/glnxa64:/usr/local/MATLAB/MATLAB_Runtime/v93/sys/os/glnxa64:$LD_LIBRARY_PATH\"' >> /home/vagrant/.bashrc\nRUN rm /tmp/MCR_R2017b_glnxa64_installer.zip\n#   Install OpenSMILE\nRUN echo \"Installing OpenSMILE\"\nUSER vagrant\nWORKDIR /home/vagrant\nRUN wget -q http://audeering.com/download/1131/ -O OpenSMILE-2.1.tar.gz \\\n && tar zxvf OpenSMILE-2.1.tar.gz --no-same-owner \\\n && rm OpenSMILE-2.1.tar.gz\n#   optionally Install HTK (without it, some other tools will not work)\n#   the idea is to make users independently download HTK installer since\n#   we cannot redistribute\nWORKDIR /home/vagrant\nUSER root\nRUN wget http://speech-kitchen.org/vms/Data/HTK.tar.gz \\\n && tar zxf HTK.tar.gz --no-same-owner\nWORKDIR /home/vagrant/htk\nRUN ./configure --without-x --disable-hslab\n#   Fix bad Makefile\nRUN sed -i \"s/ /\\t/g\" HLMTools/Makefile \\\n && make all\nRUN make install\n#   Get OpenSAT and all the tools\n#   Install DiarTK, LDC SAD, LDC scoring, Rajat's LENA stuff\n#  git clone http://github.com/srvk/ldc_sad_hmm\nUSER vagrant\nWORKDIR /home/vagrant\nRUN git clone http://github.com/srvk/OpenSAT \\\n && cp -f OpenSAT/theanorc /home/vagrant/.theanorc \\\n && git clone http://github.com/srvk/ib_diarization_toolkit \\\n && git clone https://github.com/rajatkuls/lena-clean \\\n && git clone https://github.com/srvk/Yunitator \\\n && git clone https://github.com/srvk/To-Combo-SAD \\\n && git clone https://github.com/srvk/tools.git \\\n && git clone https://github.com/aclew/varia.git\n#   Get tools: PDNN, coconut, ldc_sad_hmm\nUSER vagrant\nWORKDIR /home/vagrant\nRUN mkdir G \\\n && cd G \\\n && git clone http://github.com/yajiemiao/pdnn \\\n && git clone http://github.com/srvk/coconut\n#   get theanorc!\n#   need to figure out how to access this at 'docker build' time. Do it at 'docker run' time instead???\n#  RUN    cp /vagrant/.theanorc /home/vagrant/\n#   install theano\n#   install pympi (for eaf -> rttm conversion) and tgt (for textgrid -> rttm conversion)\n#   and intervaltree (needed for rttm2scp.py)\n#   assume 'conda' is installed now (get path)\n#   now dependencies for Yunitator\nRUN export PATH=/home/vagrant/anaconda/bin:$PATH \\\n && /home/vagrant/anaconda/bin/conda install -y theano=0.8.2 \\\n && /home/vagrant/anaconda/bin/pip install pympi-ling tgt intervaltree \\\n && /home/vagrant/anaconda/bin/conda install numpy scipy mkl dill tabulate joblib \\\n && /home/vagrant/anaconda/bin/conda install cudatoolkit \\\n && /home/vagrant/anaconda/bin/conda install pytorch-cpu -c pytorch\nUSER root\n#   Some cleanup\n#   If default user is given by USER, passwordless sudo not work???\nRUN touch /home/vagrant/.Xauthority \\\n && chown -R vagrant:vagrant /home/vagrant \\\n && apt-get autoremove -y\n#   Open up HTTP / HTTPS ports\n#  EXPOSE 80 443\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"80aa96b46758a20c37b1d440669d9097","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d91f7d33bee4bd54235f67c3cfed3814ada54e7b.dockerfile"}