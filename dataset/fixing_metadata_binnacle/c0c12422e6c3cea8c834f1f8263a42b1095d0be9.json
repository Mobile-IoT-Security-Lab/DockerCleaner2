{"seed":3336233157,"processedDockerfileHash":"c5d6f5ea20f8e98249ac3bfc0b311af7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This file describes the standard way to build serviced, using docker\n#\n#   Usage:\n#\n#   # Assemble the full dev environment. This is slow the first time.\n#   docker build -t docker .\n#   # Apparmor messes with privileged mode: disable it\n#   /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown\n#\n#   # Mount your source in an interactive container for quick testing:\n#   docker run -v `pwd`:/go/src/github.com/zenoss/serviced -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t serviced bash\n#\n#   Please be careful when changing the 'FROM' line below - the packaging code\n#   uses the output of 'lsb_release' to determine the version string of the\n#   .deb pacakge, and if the base image changes here, then that string will\n#   change accordingly.\nFROM ubuntu:xenial\nMAINTAINER Zenoss, Inc <dev@zenoss.com>\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends iptables=1.6.0-2ubuntu3 ca-certificates=20210119~16.04.1 aufs-tools=1:3.2+20130722-1.1ubuntu1 -qqy\n#   Build dependencies\n#  RUN\tdpkg-divert --local --rename --add /sbin/initctl\n#  RUN\tln -s /bin/true /sbin/initctl\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 curl=7.47.0-1ubuntu2.19 git=1:2.7.4-0ubuntu1.10 unzip=6.0-20ubuntu1.1 -y -q\n#   Install Go\nRUN curl -s https://storage.googleapis.com/golang/go1.7.4.linux-amd64.tar.gz | tar -v -C /usr/local -xz\nENV GOPATH=\"/go\"\nENV PATH=\"$PATH:/go/bin:/usr/local/go/bin\"\nRUN go get github.com/tools/godep\n#   build dependencies\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends make=4.1-6 gcc=4:5.3.1-1ubuntu1 libpam0g-dev=1.1.8-3.2ubuntu2.3 ruby=1:2.3.0+1 ruby-dev=1:2.3.0+1 -y -q\nRUN gem install fpm --version 1.15.1\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends rpm=4.12.0.1+dfsg1-3build3 -y -q\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends mercurial=3.7.3-1ubuntu1.2 bzr=2.7.0-2ubuntu3.1 -y -q\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libdevmapper-dev=2:1.02.110-1ubuntu10 libsqlite3-dev=3.11.0-1ubuntu1.5 -y -q\n#   Install the xvfb for firefox and chrome so they can run on a headless system\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends xvfb=2:1.18.4-0ubuntu0.12 -y -q\n#   Install chromedriver that selenium needs to work with chrome\n#   (from https://devblog.supportbee.com/2014/10/27/setting-up-cucumber-to-run-with-Chrome-on-Linux/)\nRUN wget -N http://chromedriver.storage.googleapis.com/2.24/chromedriver_linux64.zip -P /tmp\nRUN unzip /tmp/chromedriver_linux64.zip -d /tmp\nRUN mv /tmp/chromedriver /usr/bin\nRUN chmod +x /usr/bin/chromedriver\nRUN rm /tmp/chromedriver_linux64.zip\n#   Install chrome - blend of info from several sources\n#   General process info: http://askubuntu.com/questions/79280/how-to-install-chrome-browser-properly-via-command-line\n#   Public Key info for safe download: http://www.google.com/linuxrepositories/\n#   Info about differnet Chrome versions: http://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-stable\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libxss1=1:1.2.2-1 libappindicator1=12.10.1+16.04.20170215-0ubuntu1 libindicator7=12.10.2+16.04.20151208-0ubuntu1 -y -q\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list\n#   Tried a specific version like 41.0.2272.76-1, but specifying on the command line doesn't always work :-(\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends google-chrome-stable -y -q --force-yes\n#   Install nodejs, npm, gulp, etc\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends nodejs=6.12.3-1nodesource1 -y\n#  RUN apt-get update -qq && apt-get install -y -q nodejs=0.10.25~dfsg2-2ubuntu1 npm=1.3.10~dfsg-1\n#   karma has dependencies that need to run native builds, so we need build-essential\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 -yq\n#   Setup Xvfb - FF and chrome will connect to this DISPLAY\n#   (https://github.com/keyvanfatehi/docker-chrome-xvfb)\nENV DISPLAY=\":99\"\nCOPY xvfb_init /etc/init.d/xvfb\nRUN chmod a+x /etc/init.d/xvfb\n#   install and use yarn instead of npm\nRUN npm install yarn@0.16.1 -g\n#   make a place for yarn globals to live\nRUN mkdir /yarn-global\nRUN chmod 755 /yarn-global\nRUN yarn global add gulp@3.8.8 jshint@2.9.2 babel@5.8.23 --global-folder /yarn-global\n#   Cache the NPM packages within the docker image\nRUN mkdir -p /npm-cache/serviced/node_modules\nCOPY package.json /npm-cache/serviced/package.json\nCOPY yarn.lock /npm-cache/serviced/yarn.lock\nRUN cd /npm-cache/serviced ; yarn install --pure-lockfile\n#   HACK - yarn doesnt try to normalize permissions after\n#   unpacking tar files so do it by hand. see\n#   https://github.com/yarnpkg/yarn/pull/1490\nRUN chmod -R +r /npm-cache/serviced/node_modules\n#   add a script that allows tasks to be\n#   performed as a specific user\nCOPY userdo.sh /root/userdo.sh\nWORKDIR /go/src/github.com/control-center/serviced\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This file describes the standard way to build serviced, using docker\n#\n#  Usage:\n#\n#  # Assemble the full dev environment. This is slow the first time.\n#  docker build -t docker .\n#  # Apparmor messes with privileged mode: disable it\n#  /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown\n#\n#  # Mount your source in an interactive container for quick testing:\n#  docker run -v `pwd`:/go/src/github.com/zenoss/serviced -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t serviced bash\n#\n#  Please be careful when changing the 'FROM' line below - the packaging code\n#  uses the output of 'lsb_release' to determine the version string of the\n#  .deb pacakge, and if the base image changes here, then that string will\n#  change accordingly.\nFROM ubuntu:xenial\nMAINTAINER Zenoss, Inc <dev@zenoss.com>\nRUN apt-get update -qq \\\n && apt-get install iptables ca-certificates aufs-tools -qqy\n#  Build dependencies\n# RUN\tdpkg-divert --local --rename --add /sbin/initctl\n# RUN\tln -s /bin/true /sbin/initctl\nRUN apt-get update -qq \\\n && apt-get install wget curl git unzip -y -q\n#  Install Go\nRUN curl -s https://storage.googleapis.com/golang/go1.7.4.linux-amd64.tar.gz | tar -v -C /usr/local -xz\nENV GOPATH=\"/go\"\nENV PATH=\"$PATH:/go/bin:/usr/local/go/bin\"\nRUN go get github.com/tools/godep\n#  build dependencies\nRUN apt-get update -qq \\\n && apt-get install make gcc libpam0g-dev ruby ruby-dev -y -q\nRUN gem install fpm\nRUN apt-get update -qq \\\n && apt-get install rpm -y -q\nRUN apt-get update -qq \\\n && apt-get install mercurial bzr -y -q\nRUN apt-get update -qq \\\n && apt-get install libdevmapper-dev libsqlite3-dev -y -q\n#  Install the xvfb for firefox and chrome so they can run on a headless system\nRUN apt-get update -qq \\\n && apt-get install xvfb -y -q\n#  Install chromedriver that selenium needs to work with chrome\n#  (from https://devblog.supportbee.com/2014/10/27/setting-up-cucumber-to-run-with-Chrome-on-Linux/)\nRUN wget -N http://chromedriver.storage.googleapis.com/2.24/chromedriver_linux64.zip -P /tmp\nRUN unzip /tmp/chromedriver_linux64.zip -d /tmp\nRUN mv /tmp/chromedriver /usr/bin\nRUN chmod +x /usr/bin/chromedriver\nRUN rm /tmp/chromedriver_linux64.zip\n#  Install chrome - blend of info from several sources\n#  General process info: http://askubuntu.com/questions/79280/how-to-install-chrome-browser-properly-via-command-line\n#  Public Key info for safe download: http://www.google.com/linuxrepositories/\n#  Info about differnet Chrome versions: http://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-stable\nRUN apt-get update -qq \\\n && apt-get install libxss1 libappindicator1 libindicator7 -y -q\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list\n#  Tried a specific version like 41.0.2272.76-1, but specifying on the command line doesn't always work :-(\nRUN apt-get update -qq \\\n && apt-get install google-chrome-stable -y -q --force-yes\n#  Install nodejs, npm, gulp, etc\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get update -qq \\\n && apt-get install -y nodejs=6.12.3-1nodesource1\n# RUN apt-get update -qq && apt-get install -y -q nodejs=0.10.25~dfsg2-2ubuntu1 npm=1.3.10~dfsg-1\n#  karma has dependencies that need to run native builds, so we need build-essential\nRUN apt-get update -qq \\\n && apt-get install build-essential=12.1ubuntu2 -yq\n#  Setup Xvfb - FF and chrome will connect to this DISPLAY\n#  (https://github.com/keyvanfatehi/docker-chrome-xvfb)\nENV DISPLAY=\":99\"\nADD xvfb_init /etc/init.d/xvfb\nRUN chmod a+x /etc/init.d/xvfb\n#  install and use yarn instead of npm\nRUN npm install yarn@0.16.1 -g\n#  make a place for yarn globals to live\nRUN mkdir /yarn-global\nRUN chmod 755 /yarn-global\nRUN yarn global add gulp@3.8.8 jshint@2.9.2 babel@5.8.23 --global-folder /yarn-global\n#  Cache the NPM packages within the docker image\nRUN mkdir -p /npm-cache/serviced/node_modules\nADD package.json /npm-cache/serviced/package.json\nADD yarn.lock /npm-cache/serviced/yarn.lock\nRUN cd /npm-cache/serviced ; yarn install --pure-lockfile\n#  HACK - yarn doesnt try to normalize permissions after\n#  unpacking tar files so do it by hand. see\n#  https://github.com/yarnpkg/yarn/pull/1490\nRUN chmod -R +r /npm-cache/serviced/node_modules\n#  add a script that allows tasks to be\n#  performed as a specific user\nADD userdo.sh /root/userdo.sh\nWORKDIR /go/src/github.com/control-center/serviced\n","injectedSmells":[],"originalDockerfileHash":"b0ada79c396db6a1e74c38cec6dae0c5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This file describes the standard way to build serviced, using docker\n#\n#   Usage:\n#\n#   # Assemble the full dev environment. This is slow the first time.\n#   docker build -t docker .\n#   # Apparmor messes with privileged mode: disable it\n#   /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown\n#\n#   # Mount your source in an interactive container for quick testing:\n#   docker run -v `pwd`:/go/src/github.com/zenoss/serviced -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t serviced bash\n#\n#   Please be careful when changing the 'FROM' line below - the packaging code\n#   uses the output of 'lsb_release' to determine the version string of the\n#   .deb pacakge, and if the base image changes here, then that string will\n#   change accordingly.\nFROM ubuntu:xenial\nMAINTAINER Zenoss, Inc <dev@zenoss.com>\nRUN apt-get update -qq \\\n && apt-get install iptables ca-certificates aufs-tools -qqy\n#   Build dependencies\n#  RUN\tdpkg-divert --local --rename --add /sbin/initctl\n#  RUN\tln -s /bin/true /sbin/initctl\nRUN apt-get update -qq \\\n && apt-get install wget curl git unzip -y -q\n#   Install Go\nRUN curl -s https://storage.googleapis.com/golang/go1.7.4.linux-amd64.tar.gz | tar -v -C /usr/local -xz\nENV GOPATH=\"/go\"\nENV PATH=\"$PATH:/go/bin:/usr/local/go/bin\"\nRUN go get github.com/tools/godep\n#   build dependencies\nRUN apt-get update -qq \\\n && apt-get install make gcc libpam0g-dev ruby ruby-dev -y -q\nRUN gem install fpm\nRUN apt-get update -qq \\\n && apt-get install rpm -y -q\nRUN apt-get update -qq \\\n && apt-get install mercurial bzr -y -q\nRUN apt-get update -qq \\\n && apt-get install libdevmapper-dev libsqlite3-dev -y -q\n#   Install the xvfb for firefox and chrome so they can run on a headless system\nRUN apt-get update -qq \\\n && apt-get install xvfb -y -q\n#   Install chromedriver that selenium needs to work with chrome\n#   (from https://devblog.supportbee.com/2014/10/27/setting-up-cucumber-to-run-with-Chrome-on-Linux/)\nRUN wget -N http://chromedriver.storage.googleapis.com/2.24/chromedriver_linux64.zip -P /tmp\nRUN unzip /tmp/chromedriver_linux64.zip -d /tmp\nRUN mv /tmp/chromedriver /usr/bin\nRUN chmod +x /usr/bin/chromedriver\nRUN rm /tmp/chromedriver_linux64.zip\n#   Install chrome - blend of info from several sources\n#   General process info: http://askubuntu.com/questions/79280/how-to-install-chrome-browser-properly-via-command-line\n#   Public Key info for safe download: http://www.google.com/linuxrepositories/\n#   Info about differnet Chrome versions: http://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-stable\nRUN apt-get update -qq \\\n && apt-get install libxss1 libappindicator1 libindicator7 -y -q\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list\n#   Tried a specific version like 41.0.2272.76-1, but specifying on the command line doesn't always work :-(\nRUN apt-get update -qq \\\n && apt-get install google-chrome-stable -y -q --force-yes\n#   Install nodejs, npm, gulp, etc\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get update -qq \\\n && apt-get install nodejs=6.12.3-1nodesource1 -y\n#  RUN apt-get update -qq && apt-get install -y -q nodejs=0.10.25~dfsg2-2ubuntu1 npm=1.3.10~dfsg-1\n#   karma has dependencies that need to run native builds, so we need build-essential\nRUN apt-get update -qq \\\n && apt-get install build-essential=12.1ubuntu2 -yq\n#   Setup Xvfb - FF and chrome will connect to this DISPLAY\n#   (https://github.com/keyvanfatehi/docker-chrome-xvfb)\nENV DISPLAY=\":99\"\nADD xvfb_init /etc/init.d/xvfb\nRUN chmod a+x /etc/init.d/xvfb\n#   install and use yarn instead of npm\nRUN npm install yarn@0.16.1 -g\n#   make a place for yarn globals to live\nRUN mkdir /yarn-global\nRUN chmod 755 /yarn-global\nRUN yarn global add gulp@3.8.8 jshint@2.9.2 babel@5.8.23 --global-folder /yarn-global\n#   Cache the NPM packages within the docker image\nRUN mkdir -p /npm-cache/serviced/node_modules\nADD package.json /npm-cache/serviced/package.json\nADD yarn.lock /npm-cache/serviced/yarn.lock\nRUN cd /npm-cache/serviced ; yarn install --pure-lockfile\n#   HACK - yarn doesnt try to normalize permissions after\n#   unpacking tar files so do it by hand. see\n#   https://github.com/yarnpkg/yarn/pull/1490\nRUN chmod -R +r /npm-cache/serviced/node_modules\n#   add a script that allows tasks to be\n#   performed as a specific user\nADD userdo.sh /root/userdo.sh\nWORKDIR /go/src/github.com/control-center/serviced\n","originalDockerfileUglifiedHash":"2ae3a533a6354eedaeeeb303d3d3004b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c0c12422e6c3cea8c834f1f8263a42b1095d0be9.dockerfile"}