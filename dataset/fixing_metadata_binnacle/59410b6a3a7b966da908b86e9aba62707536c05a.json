{"seed":1440851192,"processedDockerfileHash":"b17701e541cd5fc82d36ba77b127b6a6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.3.5-fpm-alpine\nLABEL Maintainer=\"Michael Shihjay Chen <shihjay2@gmail.com>\"\n#   Add Repositories\nRUN rm -f /etc/apk/repositories \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/main\" >> /etc/apk/repositories \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/community\" >> /etc/apk/repositories\n#   Add Build Dependencies\nRUN apk add zlib-dev libjpeg-turbo-dev libpng-dev libxml2-dev php7-dev autoconf gcc g++ make pcre-dev bzip2-dev --no-cache --virtual .build-deps\n#   Add Production Dependencies\nRUN apk add jpegoptim pngquant optipng supervisor nano icu-dev mariadb-client imagemagick-dev libssh2-dev libzip-dev imap-dev libtool freetype-dev --update --no-cache\n#   Configure & Install Extension\nRUN docker-php-ext-configure opcache --enable-opcache \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure imap --with-imap --with-imap-ssl \\\n && docker-php-ext-install opcache mysqli pdo pdo_mysql sockets json intl gd xml zip bz2 pcntl soap imap bcmath\n#   imagick\nRUN pecl install imagick \\\n && docker-php-ext-enable imagick\n#   Cleanup\nRUN apk del .build-deps\n#   Copy composer.lock and composer.json\nCOPY composer.lock composer.json /var/www/nosh/\nWORKDIR \"/var/www/nosh\"\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV PATH=\"./vendor/bin:$PATH\"\n#   Copy source files and run composer\nCOPY . /var/www/nosh\nRUN mkdir /var/www/nosh/vendor\n#   Copy existing application directory permissions\nCOPY --chown=www-data:www-data . /var/www/nosh\nRUN chmod 777 /var/www/nosh/storage\nRUN chmod 777 /var/www/nosh/public\nRUN chmod 777 /var/www/nosh/vendor\nUSER www-data\n#   Install all PHP dependencies\nRUN composer install --no-interaction\nUSER root\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/docker-entrypoint.sh\"]\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY schedule.sh /usr/local/bin/schedule.sh\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/schedule.sh\"]\nRUN mkdir /noshdocuments\nRUN chown -R www-data:www-data /noshdocuments\nRUN chmod -R 755 /noshdocuments\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nEXPOSE 9000/tcp\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.3.5-fpm-alpine\nLABEL Maintainer=\"Michael Shihjay Chen <shihjay2@gmail.com>\"\n#  Add Repositories\nRUN rm -f /etc/apk/repositories \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/main\" >> /etc/apk/repositories \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/community\" >> /etc/apk/repositories\n#  Add Build Dependencies\nRUN apk add --no-cache --virtual .build-deps zlib-dev libjpeg-turbo-dev libpng-dev libxml2-dev php7-dev autoconf gcc g++ make pcre-dev bzip2-dev\n#  Add Production Dependencies\nRUN apk add --update --no-cache jpegoptim pngquant optipng supervisor nano icu-dev mariadb-client imagemagick-dev libssh2-dev libzip-dev imap-dev libtool freetype-dev\n#  Configure & Install Extension\nRUN docker-php-ext-configure opcache --enable-opcache \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure imap --with-imap --with-imap-ssl \\\n && docker-php-ext-install opcache mysqli pdo pdo_mysql sockets json intl gd xml zip bz2 pcntl soap imap bcmath\n#  imagick\nRUN pecl install imagick \\\n && docker-php-ext-enable imagick\n#  Cleanup\nRUN apk del .build-deps\n#  Copy composer.lock and composer.json\nCOPY composer.lock composer.json /var/www/nosh/\nWORKDIR \"/var/www/nosh\"\n#  Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV PATH=\"./vendor/bin:$PATH\"\n#  Copy source files and run composer\nCOPY . /var/www/nosh\nRUN mkdir /var/www/nosh/vendor\n#  Copy existing application directory permissions\nCOPY --chown=www-data:www-data . /var/www/nosh\nRUN chmod 777 /var/www/nosh/storage\nRUN chmod 777 /var/www/nosh/public\nRUN chmod 777 /var/www/nosh/vendor\nUSER www-data\n#  Install all PHP dependencies\nRUN composer install --no-interaction\nUSER root\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/docker-entrypoint.sh\"]\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY schedule.sh /usr/local/bin/schedule.sh\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/schedule.sh\"]\nRUN mkdir /noshdocuments\nRUN chown -R www-data:www-data /noshdocuments\nRUN chmod -R 755 /noshdocuments\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nEXPOSE 9000/tcp\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"1537f49a63103f6ea3313d8a55e1a4f8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.3.5-fpm-alpine\nLABEL Maintainer=\"Michael Shihjay Chen <shihjay2@gmail.com>\"\n#   Add Repositories\nRUN rm -f /etc/apk/repositories \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/main\" >> /etc/apk/repositories \\\n && echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/community\" >> /etc/apk/repositories\n#   Add Build Dependencies\nRUN apk add --no-cache --virtual .build-deps zlib-dev libjpeg-turbo-dev libpng-dev libxml2-dev php7-dev autoconf gcc g++ make pcre-dev bzip2-dev\n#   Add Production Dependencies\nRUN apk add --update --no-cache jpegoptim pngquant optipng supervisor nano icu-dev mariadb-client imagemagick-dev libssh2-dev libzip-dev imap-dev libtool freetype-dev\n#   Configure & Install Extension\nRUN docker-php-ext-configure opcache --enable-opcache \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure imap --with-imap --with-imap-ssl \\\n && docker-php-ext-install opcache mysqli pdo pdo_mysql sockets json intl gd xml zip bz2 pcntl soap imap bcmath\n#   imagick\nRUN pecl install imagick \\\n && docker-php-ext-enable imagick\n#   Cleanup\nRUN apk del .build-deps\n#   Copy composer.lock and composer.json\nCOPY composer.lock composer.json /var/www/nosh/\nWORKDIR \"/var/www/nosh\"\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV PATH=\"./vendor/bin:$PATH\"\n#   Copy source files and run composer\nCOPY . /var/www/nosh\nRUN mkdir /var/www/nosh/vendor\n#   Copy existing application directory permissions\nCOPY --chown=www-data:www-data . /var/www/nosh\nRUN chmod 777 /var/www/nosh/storage\nRUN chmod 777 /var/www/nosh/public\nRUN chmod 777 /var/www/nosh/vendor\nUSER www-data\n#   Install all PHP dependencies\nRUN composer install --no-interaction\nUSER root\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/docker-entrypoint.sh\"]\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY schedule.sh /usr/local/bin/schedule.sh\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/schedule.sh\"]\nRUN mkdir /noshdocuments\nRUN chown -R www-data:www-data /noshdocuments\nRUN chmod -R 755 /noshdocuments\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nEXPOSE 9000/tcp\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"60390e1b039d42a2924fc3ee1751b621","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/59410b6a3a7b966da908b86e9aba62707536c05a.dockerfile"}