{"seed":4287243614,"processedDockerfileHash":"f99c069b30366bce853a113e2aa7f579","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:bionic\n#   FROM arm64=arm64v8/ubuntu:bionic\n#   get the apt-cacher proxy set\nARG APTPROXY\nRUN echo \"Acquire::http { Proxy \\\"$APTPROXY\\\"; };\" >> /etc/apt/apt.conf.d/01proxy \\\n && cat /etc/apt/apt.conf.d/01proxy \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.4ubuntu1 ca-certificates=20211016ubuntu0.18.04.1 cpio=2.12+dfsg-6ubuntu0.18.04.4 curl=7.58.0-2ubuntu3.24 dosfstools=4.1-1 gccgo=4:8.3.0-1ubuntu2.3 genisoimage=9:1.1.11-3ubuntu2 gettext=0.19.8.1-6ubuntu0.3 git=1:2.17.1-1ubuntu0.17 isolinux=3:6.03+dfsg1-2 less=487-0.1 libblkid-dev=2.31.1-0.4ubuntu3.7 libmount-dev=2.31.1-0.4ubuntu3.7 libselinux1-dev=2.7-2build2 locales=2.27-3ubuntu1.6 module-init-tools=24-1ubuntu3.5 mtools=4.0.18-2ubuntu1 openssh-client=1:7.6p1-4ubuntu0.7 pkg-config=0.29.1-0ubuntu2 qemu=1:2.11+dfsg-1ubuntu7.41 qemu-kvm=1:2.11+dfsg-1ubuntu7.41 rsync=3.1.2-2.1ubuntu1.6 sudo=1.8.21p2-3ubuntu1.5 syslinux-common=3:6.03+dfsg1-2 vim=2:8.0.1453-1ubuntu1.11 wget=1.19.4-1ubuntu2.2 xorriso=1.4.8-3 xz-utils=5.2.2-1.3ubuntu0.1 telnet=0.17-41 -y\n#  ######### Dapper Configuration #####################\nENV DAPPER_ENV=\"VERSION DEV_BUILD RUNTEST DEBUG APTPROXY ENGINE_REGISTRY_MIRROR KERNEL_CHECK APPEND_SYSTEM_IMAGES APPEND_USER_IMAGES\"\nENV DAPPER_DOCKER_SOCKET=\"true\"\nENV DAPPER_SOURCE=\"/go/src/github.com/rancher/os\"\nENV DAPPER_OUTPUT=\"./bin ./dist ./build/initrd ./build/kernel\"\nENV DAPPER_RUN_ARGS=\"--privileged\"\nENV TRASH_CACHE=\"${DAPPER_SOURCE}/.trash-cache\"\nENV SHELL=\"/bin/bash\"\nWORKDIR ${DAPPER_SOURCE}\n#  ######### General Configuration #####################\nARG DAPPER_HOST_ARCH=amd64\nARG HOST_ARCH=${DAPPER_HOST_ARCH}\nARG ARCH=${HOST_ARCH}\nARG OS_REPO=rancher\nARG HOSTNAME_DEFAULT=rancher\nARG DISTRIB_ID=RancherOS\nARG SELINUX_POLICY_URL=https://github.com/rancher/refpolicy/releases/download/v0.0.3/policy.29\nARG KERNEL_VERSION=4.14.128-rancher\nARG KERNEL_URL_amd64=https://github.com/rancher/os-kernel/releases/download/v${KERNEL_VERSION}/linux-${KERNEL_VERSION}-x86.tar.gz\nARG KERNEL_URL_arm64=https://github.com/rancher/os-kernel/releases/download/v${KERNEL_VERSION}/linux-${KERNEL_VERSION}-arm64.tar.gz\nARG BUILD_DOCKER_URL_amd64=https://get.docker.com/builds/Linux/x86_64/docker-1.10.3\nARG BUILD_DOCKER_URL_arm64=https://github.com/rancher/docker/releases/download/v1.10.3-ros1/docker-1.10.3_arm64\nARG OS_RELEASES_YML=https://releases.rancher.com/os\nARG OS_SERVICES_REPO=https://raw.githubusercontent.com/${OS_REPO}/os-services\nARG IMAGE_NAME=${OS_REPO}/os\nARG OS_CONSOLE=default\nARG OS_AUTOFORMAT=false\nARG OS_BASE_URL_amd64=https://github.com/rancher/os-base/releases/download/v2018.02.11-1/os-base_amd64.tar.xz\nARG OS_BASE_URL_arm64=https://github.com/rancher/os-base/releases/download/v2018.02.11-1/os-base_arm64.tar.xz\nARG OS_INITRD_BASE_URL_amd64=https://github.com/rancher/os-initrd-base/releases/download/v2018.02.11-1/os-initrd-base-amd64.tar.gz\nARG OS_INITRD_BASE_URL_arm64=https://github.com/rancher/os-initrd-base/releases/download/v2018.02.11-1/os-initrd-base-arm64.tar.gz\nARG SYSTEM_DOCKER_VERSION=17.06-ros6\nARG SYSTEM_DOCKER_URL_amd64=https://github.com/rancher/os-system-docker/releases/download/${SYSTEM_DOCKER_VERSION}/docker-amd64-${SYSTEM_DOCKER_VERSION}.tgz\nARG SYSTEM_DOCKER_URL_arm64=https://github.com/rancher/os-system-docker/releases/download/${SYSTEM_DOCKER_VERSION}/docker-arm64-${SYSTEM_DOCKER_VERSION}.tgz\nARG USER_DOCKER_VERSION=18.06.3\nARG USER_DOCKER_ENGINE_VERSION=docker-${USER_DOCKER_VERSION}-ce\nARG AZURE_SERVICE=false\nARG PROXMOXVE_SERVICE=false\n#  #####################################################\n#   Set up environment and export all ARGS as ENV\nENV ARCH=\"${ARCH}\" \\\n    HOST_ARCH=\"${HOST_ARCH}\" \\\n    XZ_DEFAULTS=\"-T0\"\nENV BUILD_DOCKER_URL=\"BUILD_DOCKER_URL_${ARCH}\" \\\n    BUILD_DOCKER_URL_amd64=\"${BUILD_DOCKER_URL_amd64}\" \\\n    BUILD_DOCKER_URL_arm64=\"${BUILD_DOCKER_URL_arm64}\" \\\n    DAPPER_HOST_ARCH=\"${DAPPER_HOST_ARCH}\" \\\n    DISTRIB_ID=\"${DISTRIB_ID}\" \\\n    DOWNLOADS=\"/usr/src/downloads\" \\\n    GOPATH=\"/go\" \\\n    GO_VERSION=\"1.8.5\" \\\n    GOARCH=\"$ARCH\" \\\n    HOSTNAME_DEFAULT=\"${HOSTNAME_DEFAULT}\" \\\n    IMAGE_NAME=\"${IMAGE_NAME}\" \\\n    KERNEL_VERSION=\"${KERNEL_VERSION}\" \\\n    KERNEL_URL=\"KERNEL_URL_${ARCH}\" \\\n    KERNEL_URL_amd64=\"${KERNEL_URL_amd64}\" \\\n    KERNEL_URL_arm64=\"${KERNEL_URL_arm64}\" \\\n    OS_BASE_URL=\"OS_BASE_URL_${ARCH}\" \\\n    OS_BASE_URL_amd64=\"${OS_BASE_URL_amd64}\" \\\n    OS_BASE_URL_arm64=\"${OS_BASE_URL_arm64}\" \\\n    OS_INITRD_BASE_URL=\"OS_INITRD_BASE_URL_${ARCH}\" \\\n    OS_INITRD_BASE_URL_amd64=\"${OS_INITRD_BASE_URL_amd64}\" \\\n    OS_INITRD_BASE_URL_arm64=\"${OS_INITRD_BASE_URL_arm64}\" \\\n    OS_RELEASES_YML=\"${OS_RELEASES_YML}\" \\\n    OS_REPO=\"${OS_REPO}\" \\\n    OS_SERVICES_REPO=\"${OS_SERVICES_REPO}\" \\\n    OS_CONSOLE=\"${OS_CONSOLE}\" \\\n    OS_AUTOFORMAT=\"${OS_AUTOFORMAT}\" \\\n    REPO_VERSION=\"master\" \\\n    SELINUX_POLICY_URL=\"${SELINUX_POLICY_URL}\" \\\n    SYSTEM_DOCKER_URL=\"SYSTEM_DOCKER_URL_${ARCH}\" \\\n    SYSTEM_DOCKER_URL_amd64=\"${SYSTEM_DOCKER_URL_amd64}\" \\\n    SYSTEM_DOCKER_URL_arm64=\"${SYSTEM_DOCKER_URL_arm64}\" \\\n    USER_DOCKER_VERSION=\"${USER_DOCKER_VERSION}\" \\\n    USER_DOCKER_ENGINE_VERSION=\"${USER_DOCKER_ENGINE_VERSION}\" \\\n    AZURE_SERVICE=\"${AZURE_SERVICE}\" \\\n    PROXMOXVE_SERVICE=\"${PROXMOXVE_SERVICE}\"\nENV PATH=\"${GOPATH}/bin:/usr/local/go/bin:$PATH\"\nRUN mkdir -p ${DOWNLOADS}\n#   Download kernel\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nRUN echo \"... Downloading ${!KERNEL_URL}\" ; if [ -n \"${!KERNEL_URL}\" ] ; then curl -fL ${!KERNEL_URL} > ${DOWNLOADS}/kernel.tar.gz; fi\n#   Download SELinux Policy\nRUN curl -pfL ${SELINUX_POLICY_URL} > ${DOWNLOADS}/$( basename ${SELINUX_POLICY_URL} ;)\n#   Install Go\nRUN wget -O - https://storage.googleapis.com/golang/go${GO_VERSION}.linux-${GOARCH}.tar.gz | tar -xzf - -C /usr/local \\\n && go get github.com/rancher/trash\nRUN mkdir -p ${GOPATH}/src/golang.org/x \\\n && cd ${GOPATH}/src/golang.org/x/ \\\n && git clone https://github.com/golang/tools \\\n && cd tools \\\n && git checkout 6adeb8aab2ded9eb693b831d5fd090c10a6ebdfa -b temp \\\n && go get golang.org/x/lint/golint\n#   Install Host Docker\nRUN curl -fL ${!BUILD_DOCKER_URL} > /usr/bin/docker \\\n && chmod +x /usr/bin/docker\n#   Install dapper\nRUN curl -sL https://releases.rancher.com/dapper/latest/dapper-`uname -s `-`uname -m | sed 's/arm.*/arm/' ` > /usr/bin/dapper \\\n && chmod +x /usr/bin/dapper\nRUN cd ${DOWNLOADS} \\\n && curl -pfL ${!OS_BASE_URL} | tar xvJf -\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:bionic\n#  FROM arm64=arm64v8/ubuntu:bionic\n#  get the apt-cacher proxy set\nARG APTPROXY\nRUN echo \"Acquire::http { Proxy \\\"$APTPROXY\\\"; };\" >> /etc/apt/apt.conf.d/01proxy \\\n && cat /etc/apt/apt.conf.d/01proxy \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates cpio curl dosfstools gccgo genisoimage gettext git isolinux less libblkid-dev libmount-dev libselinux1-dev locales module-init-tools mtools openssh-client pkg-config qemu qemu-kvm rsync sudo syslinux-common vim wget xorriso xz-utils telnet -y\n# ######### Dapper Configuration #####################\nENV DAPPER_ENV=\"VERSION DEV_BUILD RUNTEST DEBUG APTPROXY ENGINE_REGISTRY_MIRROR KERNEL_CHECK APPEND_SYSTEM_IMAGES APPEND_USER_IMAGES\"\nENV DAPPER_DOCKER_SOCKET=\"true\"\nENV DAPPER_SOURCE=\"/go/src/github.com/rancher/os\"\nENV DAPPER_OUTPUT=\"./bin ./dist ./build/initrd ./build/kernel\"\nENV DAPPER_RUN_ARGS=\"--privileged\"\nENV TRASH_CACHE=\"${DAPPER_SOURCE}/.trash-cache\"\nENV SHELL=\"/bin/bash\"\nWORKDIR ${DAPPER_SOURCE}\n# ######### General Configuration #####################\nARG DAPPER_HOST_ARCH=amd64\nARG HOST_ARCH=${DAPPER_HOST_ARCH}\nARG ARCH=${HOST_ARCH}\nARG OS_REPO=rancher\nARG HOSTNAME_DEFAULT=rancher\nARG DISTRIB_ID=RancherOS\nARG SELINUX_POLICY_URL=https://github.com/rancher/refpolicy/releases/download/v0.0.3/policy.29\nARG KERNEL_VERSION=4.14.128-rancher\nARG KERNEL_URL_amd64=https://github.com/rancher/os-kernel/releases/download/v${KERNEL_VERSION}/linux-${KERNEL_VERSION}-x86.tar.gz\nARG KERNEL_URL_arm64=https://github.com/rancher/os-kernel/releases/download/v${KERNEL_VERSION}/linux-${KERNEL_VERSION}-arm64.tar.gz\nARG BUILD_DOCKER_URL_amd64=https://get.docker.com/builds/Linux/x86_64/docker-1.10.3\nARG BUILD_DOCKER_URL_arm64=https://github.com/rancher/docker/releases/download/v1.10.3-ros1/docker-1.10.3_arm64\nARG OS_RELEASES_YML=https://releases.rancher.com/os\nARG OS_SERVICES_REPO=https://raw.githubusercontent.com/${OS_REPO}/os-services\nARG IMAGE_NAME=${OS_REPO}/os\nARG OS_CONSOLE=default\nARG OS_AUTOFORMAT=false\nARG OS_BASE_URL_amd64=https://github.com/rancher/os-base/releases/download/v2018.02.11-1/os-base_amd64.tar.xz\nARG OS_BASE_URL_arm64=https://github.com/rancher/os-base/releases/download/v2018.02.11-1/os-base_arm64.tar.xz\nARG OS_INITRD_BASE_URL_amd64=https://github.com/rancher/os-initrd-base/releases/download/v2018.02.11-1/os-initrd-base-amd64.tar.gz\nARG OS_INITRD_BASE_URL_arm64=https://github.com/rancher/os-initrd-base/releases/download/v2018.02.11-1/os-initrd-base-arm64.tar.gz\nARG SYSTEM_DOCKER_VERSION=17.06-ros6\nARG SYSTEM_DOCKER_URL_amd64=https://github.com/rancher/os-system-docker/releases/download/${SYSTEM_DOCKER_VERSION}/docker-amd64-${SYSTEM_DOCKER_VERSION}.tgz\nARG SYSTEM_DOCKER_URL_arm64=https://github.com/rancher/os-system-docker/releases/download/${SYSTEM_DOCKER_VERSION}/docker-arm64-${SYSTEM_DOCKER_VERSION}.tgz\nARG USER_DOCKER_VERSION=18.06.3\nARG USER_DOCKER_ENGINE_VERSION=docker-${USER_DOCKER_VERSION}-ce\nARG AZURE_SERVICE=false\nARG PROXMOXVE_SERVICE=false\n# #####################################################\n#  Set up environment and export all ARGS as ENV\nENV ARCH=\"${ARCH}\" \\\n    HOST_ARCH=\"${HOST_ARCH}\" \\\n    XZ_DEFAULTS=\"-T0\"\nENV BUILD_DOCKER_URL=\"BUILD_DOCKER_URL_${ARCH}\" \\\n    BUILD_DOCKER_URL_amd64=\"${BUILD_DOCKER_URL_amd64}\" \\\n    BUILD_DOCKER_URL_arm64=\"${BUILD_DOCKER_URL_arm64}\" \\\n    DAPPER_HOST_ARCH=\"${DAPPER_HOST_ARCH}\" \\\n    DISTRIB_ID=\"${DISTRIB_ID}\" \\\n    DOWNLOADS=\"/usr/src/downloads\" \\\n    GOPATH=\"/go\" \\\n    GO_VERSION=\"1.8.5\" \\\n    GOARCH=\"$ARCH\" \\\n    HOSTNAME_DEFAULT=\"${HOSTNAME_DEFAULT}\" \\\n    IMAGE_NAME=\"${IMAGE_NAME}\" \\\n    KERNEL_VERSION=\"${KERNEL_VERSION}\" \\\n    KERNEL_URL=\"KERNEL_URL_${ARCH}\" \\\n    KERNEL_URL_amd64=\"${KERNEL_URL_amd64}\" \\\n    KERNEL_URL_arm64=\"${KERNEL_URL_arm64}\" \\\n    OS_BASE_URL=\"OS_BASE_URL_${ARCH}\" \\\n    OS_BASE_URL_amd64=\"${OS_BASE_URL_amd64}\" \\\n    OS_BASE_URL_arm64=\"${OS_BASE_URL_arm64}\" \\\n    OS_INITRD_BASE_URL=\"OS_INITRD_BASE_URL_${ARCH}\" \\\n    OS_INITRD_BASE_URL_amd64=\"${OS_INITRD_BASE_URL_amd64}\" \\\n    OS_INITRD_BASE_URL_arm64=\"${OS_INITRD_BASE_URL_arm64}\" \\\n    OS_RELEASES_YML=\"${OS_RELEASES_YML}\" \\\n    OS_REPO=\"${OS_REPO}\" \\\n    OS_SERVICES_REPO=\"${OS_SERVICES_REPO}\" \\\n    OS_CONSOLE=\"${OS_CONSOLE}\" \\\n    OS_AUTOFORMAT=\"${OS_AUTOFORMAT}\" \\\n    REPO_VERSION=\"master\" \\\n    SELINUX_POLICY_URL=\"${SELINUX_POLICY_URL}\" \\\n    SYSTEM_DOCKER_URL=\"SYSTEM_DOCKER_URL_${ARCH}\" \\\n    SYSTEM_DOCKER_URL_amd64=\"${SYSTEM_DOCKER_URL_amd64}\" \\\n    SYSTEM_DOCKER_URL_arm64=\"${SYSTEM_DOCKER_URL_arm64}\" \\\n    USER_DOCKER_VERSION=\"${USER_DOCKER_VERSION}\" \\\n    USER_DOCKER_ENGINE_VERSION=\"${USER_DOCKER_ENGINE_VERSION}\" \\\n    AZURE_SERVICE=\"${AZURE_SERVICE}\" \\\n    PROXMOXVE_SERVICE=\"${PROXMOXVE_SERVICE}\"\nENV PATH=\"${GOPATH}/bin:/usr/local/go/bin:$PATH\"\nRUN mkdir -p ${DOWNLOADS}\n#  Download kernel\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nRUN echo \"... Downloading ${!KERNEL_URL}\" ; if [ -n \"${!KERNEL_URL}\" ] ; then curl -fL ${!KERNEL_URL} > ${DOWNLOADS}/kernel.tar.gz; fi\n#  Download SELinux Policy\nRUN curl -pfL ${SELINUX_POLICY_URL} > ${DOWNLOADS}/$( basename ${SELINUX_POLICY_URL} ;)\n#  Install Go\nRUN wget -O - https://storage.googleapis.com/golang/go${GO_VERSION}.linux-${GOARCH}.tar.gz | tar -xzf - -C /usr/local \\\n && go get github.com/rancher/trash\nRUN mkdir -p ${GOPATH}/src/golang.org/x \\\n && cd ${GOPATH}/src/golang.org/x/ \\\n && git clone https://github.com/golang/tools \\\n && cd tools \\\n && git checkout 6adeb8aab2ded9eb693b831d5fd090c10a6ebdfa -b temp \\\n && go get golang.org/x/lint/golint\n#  Install Host Docker\nRUN curl -fL ${!BUILD_DOCKER_URL} > /usr/bin/docker \\\n && chmod +x /usr/bin/docker\n#  Install dapper\nRUN curl -sL https://releases.rancher.com/dapper/latest/dapper-`uname -s `-`uname -m | sed 's/arm.*/arm/' ` > /usr/bin/dapper \\\n && chmod +x /usr/bin/dapper\nRUN cd ${DOWNLOADS} \\\n && curl -pfL ${!OS_BASE_URL} | tar xvJf -\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n","injectedSmells":[],"originalDockerfileHash":"71ff1baf30b63e5ddeafc136ff8a255e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:bionic\n#   FROM arm64=arm64v8/ubuntu:bionic\n#   get the apt-cacher proxy set\nARG APTPROXY\nRUN echo \"Acquire::http { Proxy \\\"$APTPROXY\\\"; };\" >> /etc/apt/apt.conf.d/01proxy \\\n && cat /etc/apt/apt.conf.d/01proxy \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates cpio curl dosfstools gccgo genisoimage gettext git isolinux less libblkid-dev libmount-dev libselinux1-dev locales module-init-tools mtools openssh-client pkg-config qemu qemu-kvm rsync sudo syslinux-common vim wget xorriso xz-utils telnet -y\n#  ######### Dapper Configuration #####################\nENV DAPPER_ENV=\"VERSION DEV_BUILD RUNTEST DEBUG APTPROXY ENGINE_REGISTRY_MIRROR KERNEL_CHECK APPEND_SYSTEM_IMAGES APPEND_USER_IMAGES\"\nENV DAPPER_DOCKER_SOCKET=\"true\"\nENV DAPPER_SOURCE=\"/go/src/github.com/rancher/os\"\nENV DAPPER_OUTPUT=\"./bin ./dist ./build/initrd ./build/kernel\"\nENV DAPPER_RUN_ARGS=\"--privileged\"\nENV TRASH_CACHE=\"${DAPPER_SOURCE}/.trash-cache\"\nENV SHELL=\"/bin/bash\"\nWORKDIR ${DAPPER_SOURCE}\n#  ######### General Configuration #####################\nARG DAPPER_HOST_ARCH=amd64\nARG HOST_ARCH=${DAPPER_HOST_ARCH}\nARG ARCH=${HOST_ARCH}\nARG OS_REPO=rancher\nARG HOSTNAME_DEFAULT=rancher\nARG DISTRIB_ID=RancherOS\nARG SELINUX_POLICY_URL=https://github.com/rancher/refpolicy/releases/download/v0.0.3/policy.29\nARG KERNEL_VERSION=4.14.128-rancher\nARG KERNEL_URL_amd64=https://github.com/rancher/os-kernel/releases/download/v${KERNEL_VERSION}/linux-${KERNEL_VERSION}-x86.tar.gz\nARG KERNEL_URL_arm64=https://github.com/rancher/os-kernel/releases/download/v${KERNEL_VERSION}/linux-${KERNEL_VERSION}-arm64.tar.gz\nARG BUILD_DOCKER_URL_amd64=https://get.docker.com/builds/Linux/x86_64/docker-1.10.3\nARG BUILD_DOCKER_URL_arm64=https://github.com/rancher/docker/releases/download/v1.10.3-ros1/docker-1.10.3_arm64\nARG OS_RELEASES_YML=https://releases.rancher.com/os\nARG OS_SERVICES_REPO=https://raw.githubusercontent.com/${OS_REPO}/os-services\nARG IMAGE_NAME=${OS_REPO}/os\nARG OS_CONSOLE=default\nARG OS_AUTOFORMAT=false\nARG OS_BASE_URL_amd64=https://github.com/rancher/os-base/releases/download/v2018.02.11-1/os-base_amd64.tar.xz\nARG OS_BASE_URL_arm64=https://github.com/rancher/os-base/releases/download/v2018.02.11-1/os-base_arm64.tar.xz\nARG OS_INITRD_BASE_URL_amd64=https://github.com/rancher/os-initrd-base/releases/download/v2018.02.11-1/os-initrd-base-amd64.tar.gz\nARG OS_INITRD_BASE_URL_arm64=https://github.com/rancher/os-initrd-base/releases/download/v2018.02.11-1/os-initrd-base-arm64.tar.gz\nARG SYSTEM_DOCKER_VERSION=17.06-ros6\nARG SYSTEM_DOCKER_URL_amd64=https://github.com/rancher/os-system-docker/releases/download/${SYSTEM_DOCKER_VERSION}/docker-amd64-${SYSTEM_DOCKER_VERSION}.tgz\nARG SYSTEM_DOCKER_URL_arm64=https://github.com/rancher/os-system-docker/releases/download/${SYSTEM_DOCKER_VERSION}/docker-arm64-${SYSTEM_DOCKER_VERSION}.tgz\nARG USER_DOCKER_VERSION=18.06.3\nARG USER_DOCKER_ENGINE_VERSION=docker-${USER_DOCKER_VERSION}-ce\nARG AZURE_SERVICE=false\nARG PROXMOXVE_SERVICE=false\n#  #####################################################\n#   Set up environment and export all ARGS as ENV\nENV ARCH=\"${ARCH}\" \\\n    HOST_ARCH=\"${HOST_ARCH}\" \\\n    XZ_DEFAULTS=\"-T0\"\nENV BUILD_DOCKER_URL=\"BUILD_DOCKER_URL_${ARCH}\" \\\n    BUILD_DOCKER_URL_amd64=\"${BUILD_DOCKER_URL_amd64}\" \\\n    BUILD_DOCKER_URL_arm64=\"${BUILD_DOCKER_URL_arm64}\" \\\n    DAPPER_HOST_ARCH=\"${DAPPER_HOST_ARCH}\" \\\n    DISTRIB_ID=\"${DISTRIB_ID}\" \\\n    DOWNLOADS=\"/usr/src/downloads\" \\\n    GOPATH=\"/go\" \\\n    GO_VERSION=\"1.8.5\" \\\n    GOARCH=\"$ARCH\" \\\n    HOSTNAME_DEFAULT=\"${HOSTNAME_DEFAULT}\" \\\n    IMAGE_NAME=\"${IMAGE_NAME}\" \\\n    KERNEL_VERSION=\"${KERNEL_VERSION}\" \\\n    KERNEL_URL=\"KERNEL_URL_${ARCH}\" \\\n    KERNEL_URL_amd64=\"${KERNEL_URL_amd64}\" \\\n    KERNEL_URL_arm64=\"${KERNEL_URL_arm64}\" \\\n    OS_BASE_URL=\"OS_BASE_URL_${ARCH}\" \\\n    OS_BASE_URL_amd64=\"${OS_BASE_URL_amd64}\" \\\n    OS_BASE_URL_arm64=\"${OS_BASE_URL_arm64}\" \\\n    OS_INITRD_BASE_URL=\"OS_INITRD_BASE_URL_${ARCH}\" \\\n    OS_INITRD_BASE_URL_amd64=\"${OS_INITRD_BASE_URL_amd64}\" \\\n    OS_INITRD_BASE_URL_arm64=\"${OS_INITRD_BASE_URL_arm64}\" \\\n    OS_RELEASES_YML=\"${OS_RELEASES_YML}\" \\\n    OS_REPO=\"${OS_REPO}\" \\\n    OS_SERVICES_REPO=\"${OS_SERVICES_REPO}\" \\\n    OS_CONSOLE=\"${OS_CONSOLE}\" \\\n    OS_AUTOFORMAT=\"${OS_AUTOFORMAT}\" \\\n    REPO_VERSION=\"master\" \\\n    SELINUX_POLICY_URL=\"${SELINUX_POLICY_URL}\" \\\n    SYSTEM_DOCKER_URL=\"SYSTEM_DOCKER_URL_${ARCH}\" \\\n    SYSTEM_DOCKER_URL_amd64=\"${SYSTEM_DOCKER_URL_amd64}\" \\\n    SYSTEM_DOCKER_URL_arm64=\"${SYSTEM_DOCKER_URL_arm64}\" \\\n    USER_DOCKER_VERSION=\"${USER_DOCKER_VERSION}\" \\\n    USER_DOCKER_ENGINE_VERSION=\"${USER_DOCKER_ENGINE_VERSION}\" \\\n    AZURE_SERVICE=\"${AZURE_SERVICE}\" \\\n    PROXMOXVE_SERVICE=\"${PROXMOXVE_SERVICE}\"\nENV PATH=\"${GOPATH}/bin:/usr/local/go/bin:$PATH\"\nRUN mkdir -p ${DOWNLOADS}\n#   Download kernel\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nRUN echo \"... Downloading ${!KERNEL_URL}\" ; if [ -n \"${!KERNEL_URL}\" ] ; then curl -fL ${!KERNEL_URL} > ${DOWNLOADS}/kernel.tar.gz; fi\n#   Download SELinux Policy\nRUN curl -pfL ${SELINUX_POLICY_URL} > ${DOWNLOADS}/$( basename ${SELINUX_POLICY_URL} ;)\n#   Install Go\nRUN wget -O - https://storage.googleapis.com/golang/go${GO_VERSION}.linux-${GOARCH}.tar.gz | tar -xzf - -C /usr/local \\\n && go get github.com/rancher/trash\nRUN mkdir -p ${GOPATH}/src/golang.org/x \\\n && cd ${GOPATH}/src/golang.org/x/ \\\n && git clone https://github.com/golang/tools \\\n && cd tools \\\n && git checkout 6adeb8aab2ded9eb693b831d5fd090c10a6ebdfa -b temp \\\n && go get golang.org/x/lint/golint\n#   Install Host Docker\nRUN curl -fL ${!BUILD_DOCKER_URL} > /usr/bin/docker \\\n && chmod +x /usr/bin/docker\n#   Install dapper\nRUN curl -sL https://releases.rancher.com/dapper/latest/dapper-`uname -s `-`uname -m | sed 's/arm.*/arm/' ` > /usr/bin/dapper \\\n && chmod +x /usr/bin/dapper\nRUN cd ${DOWNLOADS} \\\n && curl -pfL ${!OS_BASE_URL} | tar xvJf -\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n","originalDockerfileUglifiedHash":"13b8034636f8802f405b13b9b558b287","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5e59872991d7668a39f13d54681868495fe688f3.dockerfile"}