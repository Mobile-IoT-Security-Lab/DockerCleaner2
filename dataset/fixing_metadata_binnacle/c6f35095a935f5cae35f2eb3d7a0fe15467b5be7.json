{"seed":955065408,"processedDockerfileHash":"5a4501a9f292d5e2a86c42874117d55e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes apt-utils autoconf gcc g++ make procps coreutils ctags curl gawk gdb git jq lynx netcat ngrep sed sip-tester vim wget bison debhelper default-libmysqlclient-dev dh-systemd docbook-xml docbook2x dpkg-dev erlang-dev flex gcj-jdk libbson-dev libconfuse-dev libcurl4-openssl-dev libdb-dev libev-dev libevent-dev libexpat1-dev libgeoip-dev libhiredis-dev libjansson-dev libjson-c-dev libldap2-dev liblua5.1-0-dev libmaxminddb-dev libmemcached-dev libmnl-dev libmongoc-dev libmono-2.0-dev libncurses5-dev libpcre3-dev libperl-dev libphonenumber-dev libpq-dev librabbitmq-dev libradcli-dev libreadline-dev libsasl2-dev libsctp-dev libsnmp-dev libsqlite3-dev libssl-dev libsystemd-dev libunistring-dev libxml2-dev lua-cjson openssl pkg-config python python-dev python3-dev ruby-dev unixodbc-dev uuid-dev xsltproc zlib1g-dev\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes mysql-client mysql-server\nRUN rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nRUN mysql_install_db --user=mysql\nWORKDIR /usr/local/src\nRUN git clone https://github.com/nils-ohlmeier/sipsak\nWORKDIR /usr/local/src/sipsak\nRUN autoreconf --install\nRUN ./configure\nRUN make\nRUN make install\nRUN mkdir -p /usr/local/src/data/GeoLite2\nRUN mkdir -p /usr/local/src/tmp\nWORKDIR /usr/local/src/tmp\nRUN wget -O GeoLite2-City.tar.gz http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz\nRUN tar xvfz GeoLite2-City.tar.gz\nRUN mv GeoLite2-City_*/*.* ../data/GeoLite2/\nWORKDIR /usr/local/src\nRUN rm -rf tmp\nCOPY kamailio /usr/local/src/kamailio\nWORKDIR /usr/local/src/kamailio\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 exclude_modules=\"db_cassandra db_oracle dnssec ndb_cassandra nsq osp\" cfg\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 Q=0 CC_EXTRA_OPTS=\"-Wall\" all\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 install\nWORKDIR src/modules/tls\nRUN make install-tls-cert\nENV DBENGINE=\"MYSQL\"\nENV DBRWPW=\"kamailiorw\"\nENV DBROOTPW=\"ktestsrootpw\"\nCOPY kamailio-tests /usr/local/src/kamailio-tests\nCOPY kamailio-tests/etc/excludeunits.txt.debian9 /usr/local/src/kamailio-tests/excludeunits.txt\nWORKDIR /usr/local/src/kamailio-tests\nENTRYPOINT [\"/usr/local/src/kamailio-tests/ktestsctl\"]\nCMD [\"-m\", \"run\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes apt-utils autoconf gcc g++ make procps coreutils ctags curl gawk gdb git jq lynx netcat ngrep sed sip-tester vim wget bison debhelper default-libmysqlclient-dev dh-systemd docbook-xml docbook2x dpkg-dev erlang-dev flex gcj-jdk libbson-dev libconfuse-dev libcurl4-openssl-dev libdb-dev libev-dev libevent-dev libexpat1-dev libgeoip-dev libhiredis-dev libjansson-dev libjson-c-dev libldap2-dev liblua5.1-0-dev libmaxminddb-dev libmemcached-dev libmnl-dev libmongoc-dev libmono-2.0-dev libncurses5-dev libpcre3-dev libperl-dev libphonenumber-dev libpq-dev librabbitmq-dev libradcli-dev libreadline-dev libsasl2-dev libsctp-dev libsnmp-dev libsqlite3-dev libssl-dev libsystemd-dev libunistring-dev libxml2-dev lua-cjson openssl pkg-config python python-dev python3-dev ruby-dev unixodbc-dev uuid-dev xsltproc zlib1g-dev\nENV MYSQL_ROOT_PASSWORD=\"ktestsrootpw\"\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes mysql-client mysql-server\nRUN rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nRUN mysql_install_db --user=mysql\nWORKDIR /usr/local/src\nRUN git clone https://github.com/nils-ohlmeier/sipsak\nWORKDIR /usr/local/src/sipsak\nRUN autoreconf --install\nRUN ./configure\nRUN make\nRUN make install\nRUN mkdir -p /usr/local/src/data/GeoLite2\nRUN mkdir -p /usr/local/src/tmp\nWORKDIR /usr/local/src/tmp\nRUN wget -O GeoLite2-City.tar.gz http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz\nRUN tar xvfz GeoLite2-City.tar.gz\nRUN mv GeoLite2-City_*/*.* ../data/GeoLite2/\nWORKDIR /usr/local/src\nRUN rm -rf tmp\nCOPY kamailio /usr/local/src/kamailio\nWORKDIR /usr/local/src/kamailio\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 exclude_modules=\"db_cassandra db_oracle dnssec ndb_cassandra nsq osp\" cfg\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 Q=0 CC_EXTRA_OPTS=\"-Wall\" all\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 install\nWORKDIR src/modules/tls\nRUN make install-tls-cert\nENV DBENGINE=\"MYSQL\"\nENV DBRWPW=\"kamailiorw\"\nENV DBROOTPW=\"ktestsrootpw\"\nCOPY kamailio-tests /usr/local/src/kamailio-tests\nCOPY kamailio-tests/etc/excludeunits.txt.debian9 /usr/local/src/kamailio-tests/excludeunits.txt\nWORKDIR /usr/local/src/kamailio-tests\nENTRYPOINT [\"/usr/local/src/kamailio-tests/ktestsctl\"]\nCMD [\"-m\", \"run\"]\n","injectedSmells":[],"originalDockerfileHash":"7c203c85a5d370b02d01957f38ed2440","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes apt-utils autoconf gcc g++ make procps coreutils ctags curl gawk gdb git jq lynx netcat ngrep sed sip-tester vim wget bison debhelper default-libmysqlclient-dev dh-systemd docbook-xml docbook2x dpkg-dev erlang-dev flex gcj-jdk libbson-dev libconfuse-dev libcurl4-openssl-dev libdb-dev libev-dev libevent-dev libexpat1-dev libgeoip-dev libhiredis-dev libjansson-dev libjson-c-dev libldap2-dev liblua5.1-0-dev libmaxminddb-dev libmemcached-dev libmnl-dev libmongoc-dev libmono-2.0-dev libncurses5-dev libpcre3-dev libperl-dev libphonenumber-dev libpq-dev librabbitmq-dev libradcli-dev libreadline-dev libsasl2-dev libsctp-dev libsnmp-dev libsqlite3-dev libssl-dev libsystemd-dev libunistring-dev libxml2-dev lua-cjson openssl pkg-config python python-dev python3-dev ruby-dev unixodbc-dev uuid-dev xsltproc zlib1g-dev\nENV MYSQL_ROOT_PASSWORD=\"ktestsrootpw\"\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes mysql-client mysql-server\nRUN rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nRUN mysql_install_db --user=mysql\nWORKDIR /usr/local/src\nRUN git clone https://github.com/nils-ohlmeier/sipsak\nWORKDIR /usr/local/src/sipsak\nRUN autoreconf --install\nRUN ./configure\nRUN make\nRUN make install\nRUN mkdir -p /usr/local/src/data/GeoLite2\nRUN mkdir -p /usr/local/src/tmp\nWORKDIR /usr/local/src/tmp\nRUN wget -O GeoLite2-City.tar.gz http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz\nRUN tar xvfz GeoLite2-City.tar.gz\nRUN mv GeoLite2-City_*/*.* ../data/GeoLite2/\nWORKDIR /usr/local/src\nRUN rm -rf tmp\nCOPY kamailio /usr/local/src/kamailio\nWORKDIR /usr/local/src/kamailio\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 exclude_modules=\"db_cassandra db_oracle dnssec ndb_cassandra nsq osp\" cfg\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 Q=0 CC_EXTRA_OPTS=\"-Wall\" all\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 install\nWORKDIR src/modules/tls\nRUN make install-tls-cert\nENV DBENGINE=\"MYSQL\"\nENV DBRWPW=\"kamailiorw\"\nENV DBROOTPW=\"ktestsrootpw\"\nCOPY kamailio-tests /usr/local/src/kamailio-tests\nCOPY kamailio-tests/etc/excludeunits.txt.debian9 /usr/local/src/kamailio-tests/excludeunits.txt\nWORKDIR /usr/local/src/kamailio-tests\nENTRYPOINT [\"/usr/local/src/kamailio-tests/ktestsctl\"]\nCMD [\"-m\", \"run\"]\n","originalDockerfileUglifiedHash":"7c203c85a5d370b02d01957f38ed2440","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c6f35095a935f5cae35f2eb3d7a0fe15467b5be7.dockerfile"}