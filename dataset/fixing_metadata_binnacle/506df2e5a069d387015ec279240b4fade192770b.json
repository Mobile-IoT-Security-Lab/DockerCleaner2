{"seed":669183175,"processedDockerfileHash":"a73906940b67978ed737e6b3eae4df9b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##############################################################################\n#\n#  IMAGE:   Jenkins(Alpine)\n#  VERSION: 2.176.1\n#  BASE:    Jenkins LTS Version\n#  INTEGRATION:\n#           Jenkins Slave: 3.28\n#           tini         : 0.18.0\n#           maven        : 3.6.0\n#           sonar-scanner: 3.2.0.1227\n#           kubectl      : 1.10.12\n#           docker       : 18.09.0\n#           svn          : 1.10.2\n#\n#  ##############################################################################\nFROM openjdk:8-jdk-alpine\n#  ##############################################################################\n#  MAINTAINER\n#  ##############################################################################\nMAINTAINER LiuMiao <liumiaocn@outlook.com>\n#  ##############################################################################\n#  ARG Setting\n#  ##############################################################################\nARG http_port=8080\nARG agent_port=50000\nARG TINI_VERSION=0.18.0\nARG TINI_SHA=eadb9d6e2dc960655481d78a92d2c8bc021861045987ccd3e27c7eae5af0cf33\nARG JENKINS_HOME=\"/data/jenkins\"\nARG JENKINS_SLAVE_VER=\"3.28\"\nARG JENKINS_SLAVE_AGENT_PORT=${agent_port}\nARG JENKINS_VERSION=${JENKINS_VERSION:-2.176.1}\nARG JENKINS_SHA=8bbc6e2043e7bd102f751aca94b51652e1e792ec0a11377d52c9d9ed484f0e8c\nARG JENKINS_URL=http://mirrors.jenkins.io/war-stable/${JENKINS_VERSION}/jenkins.war\nARG COPY_REFERENCE_FILE_LOG=$JENKINS_HOME/copy_reference_file.log\nARG MAVEN_HOME=\"/usr/local/share/maven\"\nARG MAVEN_VER=\"3.6.0\"\nARG SONAR_HOME=\"/usr/local/share/sonar\"\nARG SONAR_SCANNER_VER=\"3.2.0.1227\"\nARG KUBECTL_VER=\"1.10.12\"\nARG DOCKER_VERSION=18.09.0\n#  ##############################################################################\n#  ENV Setting\n#  ##############################################################################\nENV JENKINS_HOME=\"${JENKINS_HOME}\"\nENV JENKINS_MODE=\"${JENKINS_MODE}\"\nENV JENKINS_SLAVE_AGENT_PORT=\"${agent_port}\"\nENV JENKINS_ADMIN_ID=\"${JENKINS_ADMIN_ID:-root}\"\nENV JENKINS_ADMIN_PW=\"${JENKINS_ADMIN_PW:-hello123}\"\nENV JENKINS_MASTER_URL=\"${JENKINS_MASTER_URL}\"\nENV JENKINS_SLAVE_NAME=\"${JENKINS_SLAVE_NAME}\"\nENV JENKINS_SLAVE_SECRET=\"${JENKINS_SLAVE_SECRET}\"\nENV JENKINS_SLAVE_WORKDIR=\"${JENKINS_SLAVE_WORKDIR}\"\nENV JENKINS_VERSION=\"${JENKINS_VERSION}\"\nENV JENKINS_UC=\"https://updates.jenkins.io\"\nENV JENKINS_UC_EXPERIMENTAL=\"https://updates.jenkins.io/experimental\"\nENV COPY_REFERENCE_FILE_LOG=\"$JENKINS_HOME/copy_reference_file.log\"\n#  ##############################################################################\n#  Install && Setting\n#  ##############################################################################\nRUN apk add git openssh-client curl unzip bash ttf-dejavu coreutils py-pip ansible subversion --no-cache \\\n && echo \"mkdir -p ${JENKINS_HOME}\" \\\n && mkdir -p ${JENKINS_HOME} \\\n && mkdir -p /usr/share/jenkins/ref/init.groovy.d \\\n && echo \"################ docker client \" \\\n && curl -L -o docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n && tar xf docker.tgz \\\n && mv docker/docker /usr/local/bin/docker \\\n && chmod a+x /usr/local/bin/docker \\\n && rm -rf docker \\\n && echo \"################ kubectl client \" \\\n && curl -sSL -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VER/bin/linux/amd64/kubectl \\\n && chmod a+x /usr/local/bin/kubectl \\\n && echo \"################ tini \" \\\n && curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64 -o /bin/tini \\\n && chmod +x /bin/tini \\\n && echo \"$TINI_SHA /bin/tini\" | sha256sum -c - \\\n && echo \"################ jenkins master\" \\\n && curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war \\\n && echo \"${JENKINS_SHA} /usr/share/jenkins/jenkins.war\" | sha256sum -c - \\\n && echo \"################ jenkins slave\" \\\n && curl -L -o /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${JENKINS_SLAVE_VER}/remoting-${JENKINS_SLAVE_VER}.jar \\\n && echo \"\\n################ maven \" \\\n && curl -L -o apache-maven-$MAVEN_VER-bin.tar.gz http://apache.mirror.cdnetworks.com/maven/maven-3/$MAVEN_VER/binaries/apache-maven-$MAVEN_VER-bin.tar.gz \\\n && tar xf apache-maven-$MAVEN_VER-bin.tar.gz \\\n && mv apache-maven-$MAVEN_VER $MAVEN_HOME \\\n && rm apache-maven-$MAVEN_VER-bin.tar.gz \\\n && echo \"################ sonar-scanner \" \\\n && curl -L -o sonar-scanner-$SONAR_SCANNER_VER.zip https://github.com/SonarSource/sonar-scanner-cli/archive/$SONAR_SCANNER_VER.zip \\\n && unzip sonar-scanner-$SONAR_SCANNER_VER.zip > /dev/null 2>&1 \\\n && mv sonar-scanner-cli-$SONAR_SCANNER_VER sonar-scanner-$SONAR_SCANNER_VER \\\n && mv sonar-scanner-$SONAR_SCANNER_VER $SONAR_HOME \\\n && rm sonar-scanner-$SONAR_SCANNER_VER.zip \\\n && echo \"################ robot framework\" \\\n && pip install pip==23.1 --upgrade ; pip install robotframework==6.0.2 robotframework-selenium2library==3.0.0 --no-cache-dir \\\n && ln -s /usr/local/share/maven/bin/mvn /usr/local/bin/mvn \\\n && ln -s /usr/local/share/sonar/bin/sonar-scanner /usr/local/bin/sonar-scanner \\\n && mkdir -p /data/jenkins \\\n && mkdir -p /data/maven \\\n && mkdir -p /data/kube \\\n && mkdir -p /data/sonar \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/*.apk\n#  ##############################################################################\n#  Prepare Setting\n#  ##############################################################################\nCOPY init.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy\nCOPY init_login.groovy /usr/share/jenkins/ref/init.groovy.d/set-user-security.groovy\nCOPY jenkins-support /usr/local/bin/jenkins-support\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\nCOPY install-plugins.sh /usr/local/bin/install-plugins.sh\n#  ##############################################################################\n#  Install plugins\n#  ##############################################################################\n#  RUN /usr/local/bin/install-plugins.sh gitlab-plugin sonar redmine docker-build-step ansible build-pipeline-plugin buildgraph-view workflow-aggregator pipeline-maven pipeline-utility-steps ssh-slaves\nRUN /usr/local/bin/install-plugins.sh gitlab-plugin ansible sonar redmine docker-build-step docker-workflow blueocean\n#  ##############################################################################\n#  Volume Setting\n#  ##############################################################################\nVOLUME [\"/usr/share/jenkins/\", \"/data/jenkins\", \"/data/maven\", \"/data/kube\", \"/data/sonar\", \"/data/robot\"]\n#  ##############################################################################\n#  expose Setting\n#  ##############################################################################\n#   for main web interface:\nEXPOSE ${http_port}\n#   will be used by attached slave agents:\nEXPOSE ${agent_port}\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##############################################################################\n#\n# IMAGE:   Jenkins(Alpine)\n# VERSION: 2.176.1\n# BASE:    Jenkins LTS Version\n# INTEGRATION:\n#          Jenkins Slave: 3.28\n#          tini         : 0.18.0\n#          maven        : 3.6.0\n#          sonar-scanner: 3.2.0.1227\n#          kubectl      : 1.10.12\n#          docker       : 18.09.0\n#          svn          : 1.10.2\n#\n# ##############################################################################\nFROM openjdk:8-jdk-alpine\n# ##############################################################################\n# MAINTAINER\n# ##############################################################################\nMAINTAINER LiuMiao <liumiaocn@outlook.com>\n# ##############################################################################\n# ARG Setting\n# ##############################################################################\nARG http_port=8080\nARG agent_port=50000\nARG TINI_VERSION=0.18.0\nARG TINI_SHA=eadb9d6e2dc960655481d78a92d2c8bc021861045987ccd3e27c7eae5af0cf33\nARG JENKINS_HOME=\"/data/jenkins\"\nARG JENKINS_SLAVE_VER=\"3.28\"\nARG JENKINS_SLAVE_AGENT_PORT=${agent_port}\nARG JENKINS_VERSION=${JENKINS_VERSION:-2.176.1}\nARG JENKINS_SHA=8bbc6e2043e7bd102f751aca94b51652e1e792ec0a11377d52c9d9ed484f0e8c\nARG JENKINS_URL=http://mirrors.jenkins.io/war-stable/${JENKINS_VERSION}/jenkins.war\nARG COPY_REFERENCE_FILE_LOG=$JENKINS_HOME/copy_reference_file.log\nARG MAVEN_HOME=\"/usr/local/share/maven\"\nARG MAVEN_VER=\"3.6.0\"\nARG SONAR_HOME=\"/usr/local/share/sonar\"\nARG SONAR_SCANNER_VER=\"3.2.0.1227\"\nARG KUBECTL_VER=\"1.10.12\"\nARG DOCKER_VERSION=18.09.0\n# ##############################################################################\n# ENV Setting\n# ##############################################################################\nENV JENKINS_HOME=\"${JENKINS_HOME}\"\nENV JENKINS_MODE=\"${JENKINS_MODE}\"\nENV JENKINS_SLAVE_AGENT_PORT=\"${agent_port}\"\nENV JENKINS_ADMIN_ID=\"${JENKINS_ADMIN_ID:-root}\"\nENV JENKINS_ADMIN_PW=\"${JENKINS_ADMIN_PW:-hello123}\"\nENV JENKINS_MASTER_URL=\"${JENKINS_MASTER_URL}\"\nENV JENKINS_SLAVE_NAME=\"${JENKINS_SLAVE_NAME}\"\nENV JENKINS_SLAVE_SECRET=\"${JENKINS_SLAVE_SECRET}\"\nENV JENKINS_SLAVE_WORKDIR=\"${JENKINS_SLAVE_WORKDIR}\"\nENV JENKINS_VERSION=\"${JENKINS_VERSION}\"\nENV JENKINS_UC=\"https://updates.jenkins.io\"\nENV JENKINS_UC_EXPERIMENTAL=\"https://updates.jenkins.io/experimental\"\nENV COPY_REFERENCE_FILE_LOG=\"$JENKINS_HOME/copy_reference_file.log\"\n# ##############################################################################\n# Install && Setting\n# ##############################################################################\nRUN apk add --no-cache git openssh-client curl unzip bash ttf-dejavu coreutils py-pip ansible subversion \\\n && echo \"mkdir -p ${JENKINS_HOME}\" \\\n && mkdir -p ${JENKINS_HOME} \\\n && mkdir -p /usr/share/jenkins/ref/init.groovy.d \\\n && echo \"################ docker client \" \\\n && curl -L -o docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n && tar xf docker.tgz \\\n && mv docker/docker /usr/local/bin/docker \\\n && chmod a+x /usr/local/bin/docker \\\n && rm -rf docker \\\n && echo \"################ kubectl client \" \\\n && curl -sSL -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VER/bin/linux/amd64/kubectl \\\n && chmod a+x /usr/local/bin/kubectl \\\n && echo \"################ tini \" \\\n && curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64 -o /bin/tini \\\n && chmod +x /bin/tini \\\n && echo \"$TINI_SHA /bin/tini\" | sha256sum -c - \\\n && echo \"################ jenkins master\" \\\n && curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war \\\n && echo \"${JENKINS_SHA} /usr/share/jenkins/jenkins.war\" | sha256sum -c - \\\n && echo \"################ jenkins slave\" \\\n && curl -L -o /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${JENKINS_SLAVE_VER}/remoting-${JENKINS_SLAVE_VER}.jar \\\n && echo \"\\n################ maven \" \\\n && curl -L -o apache-maven-$MAVEN_VER-bin.tar.gz http://apache.mirror.cdnetworks.com/maven/maven-3/$MAVEN_VER/binaries/apache-maven-$MAVEN_VER-bin.tar.gz \\\n && tar xf apache-maven-$MAVEN_VER-bin.tar.gz \\\n && mv apache-maven-$MAVEN_VER $MAVEN_HOME \\\n && rm apache-maven-$MAVEN_VER-bin.tar.gz \\\n && echo \"################ sonar-scanner \" \\\n && curl -L -o sonar-scanner-$SONAR_SCANNER_VER.zip https://github.com/SonarSource/sonar-scanner-cli/archive/$SONAR_SCANNER_VER.zip \\\n && unzip sonar-scanner-$SONAR_SCANNER_VER.zip > /dev/null 2>&1 \\\n && mv sonar-scanner-cli-$SONAR_SCANNER_VER sonar-scanner-$SONAR_SCANNER_VER \\\n && mv sonar-scanner-$SONAR_SCANNER_VER $SONAR_HOME \\\n && rm sonar-scanner-$SONAR_SCANNER_VER.zip \\\n && echo \"################ robot framework\" \\\n && pip install pip --upgrade ; pip install robotframework robotframework-selenium2library --no-cache-dir \\\n && ln -s /usr/local/share/maven/bin/mvn /usr/local/bin/mvn \\\n && ln -s /usr/local/share/sonar/bin/sonar-scanner /usr/local/bin/sonar-scanner \\\n && mkdir -p /data/jenkins \\\n && mkdir -p /data/maven \\\n && mkdir -p /data/kube \\\n && mkdir -p /data/sonar \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/*.apk\n# ##############################################################################\n# Prepare Setting\n# ##############################################################################\nCOPY init.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy\nCOPY init_login.groovy /usr/share/jenkins/ref/init.groovy.d/set-user-security.groovy\nCOPY jenkins-support /usr/local/bin/jenkins-support\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\nCOPY install-plugins.sh /usr/local/bin/install-plugins.sh\n# ##############################################################################\n# Install plugins\n# ##############################################################################\n# RUN /usr/local/bin/install-plugins.sh gitlab-plugin sonar redmine docker-build-step ansible build-pipeline-plugin buildgraph-view workflow-aggregator pipeline-maven pipeline-utility-steps ssh-slaves\nRUN /usr/local/bin/install-plugins.sh gitlab-plugin ansible sonar redmine docker-build-step docker-workflow blueocean\n# ##############################################################################\n# Volume Setting\n# ##############################################################################\nVOLUME [\"/usr/share/jenkins/\", \"/data/jenkins\", \"/data/maven\", \"/data/kube\", \"/data/sonar\", \"/data/robot\"]\n# ##############################################################################\n# expose Setting\n# ##############################################################################\n#  for main web interface:\nEXPOSE ${http_port}\n#  will be used by attached slave agents:\nEXPOSE ${agent_port}\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"f4fe07cf79c4b5c21e95fb8927e2ecc7","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##############################################################################\n#\n#  IMAGE:   Jenkins(Alpine)\n#  VERSION: 2.176.1\n#  BASE:    Jenkins LTS Version\n#  INTEGRATION:\n#           Jenkins Slave: 3.28\n#           tini         : 0.18.0\n#           maven        : 3.6.0\n#           sonar-scanner: 3.2.0.1227\n#           kubectl      : 1.10.12\n#           docker       : 18.09.0\n#           svn          : 1.10.2\n#\n#  ##############################################################################\nFROM openjdk:8-jdk-alpine\n#  ##############################################################################\n#  MAINTAINER\n#  ##############################################################################\nMAINTAINER LiuMiao <liumiaocn@outlook.com>\n#  ##############################################################################\n#  ARG Setting\n#  ##############################################################################\nARG http_port=8080\nARG agent_port=50000\nARG TINI_VERSION=0.18.0\nARG TINI_SHA=eadb9d6e2dc960655481d78a92d2c8bc021861045987ccd3e27c7eae5af0cf33\nARG JENKINS_HOME=\"/data/jenkins\"\nARG JENKINS_SLAVE_VER=\"3.28\"\nARG JENKINS_SLAVE_AGENT_PORT=${agent_port}\nARG JENKINS_VERSION=${JENKINS_VERSION:-2.176.1}\nARG JENKINS_SHA=8bbc6e2043e7bd102f751aca94b51652e1e792ec0a11377d52c9d9ed484f0e8c\nARG JENKINS_URL=http://mirrors.jenkins.io/war-stable/${JENKINS_VERSION}/jenkins.war\nARG COPY_REFERENCE_FILE_LOG=$JENKINS_HOME/copy_reference_file.log\nARG MAVEN_HOME=\"/usr/local/share/maven\"\nARG MAVEN_VER=\"3.6.0\"\nARG SONAR_HOME=\"/usr/local/share/sonar\"\nARG SONAR_SCANNER_VER=\"3.2.0.1227\"\nARG KUBECTL_VER=\"1.10.12\"\nARG DOCKER_VERSION=18.09.0\n#  ##############################################################################\n#  ENV Setting\n#  ##############################################################################\nENV JENKINS_HOME=\"${JENKINS_HOME}\"\nENV JENKINS_MODE=\"${JENKINS_MODE}\"\nENV JENKINS_SLAVE_AGENT_PORT=\"${agent_port}\"\nENV JENKINS_ADMIN_ID=\"${JENKINS_ADMIN_ID:-root}\"\nENV JENKINS_ADMIN_PW=\"${JENKINS_ADMIN_PW:-hello123}\"\nENV JENKINS_MASTER_URL=\"${JENKINS_MASTER_URL}\"\nENV JENKINS_SLAVE_NAME=\"${JENKINS_SLAVE_NAME}\"\nENV JENKINS_SLAVE_SECRET=\"${JENKINS_SLAVE_SECRET}\"\nENV JENKINS_SLAVE_WORKDIR=\"${JENKINS_SLAVE_WORKDIR}\"\nENV JENKINS_VERSION=\"${JENKINS_VERSION}\"\nENV JENKINS_UC=\"https://updates.jenkins.io\"\nENV JENKINS_UC_EXPERIMENTAL=\"https://updates.jenkins.io/experimental\"\nENV COPY_REFERENCE_FILE_LOG=\"$JENKINS_HOME/copy_reference_file.log\"\n#  ##############################################################################\n#  Install && Setting\n#  ##############################################################################\nRUN apk add --no-cache git openssh-client curl unzip bash ttf-dejavu coreutils py-pip ansible subversion \\\n && echo \"mkdir -p ${JENKINS_HOME}\" \\\n && mkdir -p ${JENKINS_HOME} \\\n && mkdir -p /usr/share/jenkins/ref/init.groovy.d \\\n && echo \"################ docker client \" \\\n && curl -L -o docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n && tar xf docker.tgz \\\n && mv docker/docker /usr/local/bin/docker \\\n && chmod a+x /usr/local/bin/docker \\\n && rm -rf docker \\\n && echo \"################ kubectl client \" \\\n && curl -sSL -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VER/bin/linux/amd64/kubectl \\\n && chmod a+x /usr/local/bin/kubectl \\\n && echo \"################ tini \" \\\n && curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64 -o /bin/tini \\\n && chmod +x /bin/tini \\\n && echo \"$TINI_SHA /bin/tini\" | sha256sum -c - \\\n && echo \"################ jenkins master\" \\\n && curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war \\\n && echo \"${JENKINS_SHA} /usr/share/jenkins/jenkins.war\" | sha256sum -c - \\\n && echo \"################ jenkins slave\" \\\n && curl -L -o /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${JENKINS_SLAVE_VER}/remoting-${JENKINS_SLAVE_VER}.jar \\\n && echo \"\\n################ maven \" \\\n && curl -L -o apache-maven-$MAVEN_VER-bin.tar.gz http://apache.mirror.cdnetworks.com/maven/maven-3/$MAVEN_VER/binaries/apache-maven-$MAVEN_VER-bin.tar.gz \\\n && tar xf apache-maven-$MAVEN_VER-bin.tar.gz \\\n && mv apache-maven-$MAVEN_VER $MAVEN_HOME \\\n && rm apache-maven-$MAVEN_VER-bin.tar.gz \\\n && echo \"################ sonar-scanner \" \\\n && curl -L -o sonar-scanner-$SONAR_SCANNER_VER.zip https://github.com/SonarSource/sonar-scanner-cli/archive/$SONAR_SCANNER_VER.zip \\\n && unzip sonar-scanner-$SONAR_SCANNER_VER.zip > /dev/null 2>&1 \\\n && mv sonar-scanner-cli-$SONAR_SCANNER_VER sonar-scanner-$SONAR_SCANNER_VER \\\n && mv sonar-scanner-$SONAR_SCANNER_VER $SONAR_HOME \\\n && rm sonar-scanner-$SONAR_SCANNER_VER.zip \\\n && echo \"################ robot framework\" \\\n && pip install pip --upgrade ; pip install robotframework robotframework-selenium2library --no-cache-dir \\\n && ln -s /usr/local/share/maven/bin/mvn /usr/local/bin/mvn \\\n && ln -s /usr/local/share/sonar/bin/sonar-scanner /usr/local/bin/sonar-scanner \\\n && mkdir -p /data/jenkins \\\n && mkdir -p /data/maven \\\n && mkdir -p /data/kube \\\n && mkdir -p /data/sonar \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/*.apk\n#  ##############################################################################\n#  Prepare Setting\n#  ##############################################################################\nCOPY init.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy\nCOPY init_login.groovy /usr/share/jenkins/ref/init.groovy.d/set-user-security.groovy\nCOPY jenkins-support /usr/local/bin/jenkins-support\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\nCOPY install-plugins.sh /usr/local/bin/install-plugins.sh\n#  ##############################################################################\n#  Install plugins\n#  ##############################################################################\n#  RUN /usr/local/bin/install-plugins.sh gitlab-plugin sonar redmine docker-build-step ansible build-pipeline-plugin buildgraph-view workflow-aggregator pipeline-maven pipeline-utility-steps ssh-slaves\nRUN /usr/local/bin/install-plugins.sh gitlab-plugin ansible sonar redmine docker-build-step docker-workflow blueocean\n#  ##############################################################################\n#  Volume Setting\n#  ##############################################################################\nVOLUME [\"/usr/share/jenkins/\", \"/data/jenkins\", \"/data/maven\", \"/data/kube\", \"/data/sonar\", \"/data/robot\"]\n#  ##############################################################################\n#  expose Setting\n#  ##############################################################################\n#   for main web interface:\nEXPOSE ${http_port}\n#   will be used by attached slave agents:\nEXPOSE ${agent_port}\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]\n","originalDockerfileUglifiedHash":"dd82cf527897a452f9d422e332743207","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/506df2e5a069d387015ec279240b4fade192770b.dockerfile"}