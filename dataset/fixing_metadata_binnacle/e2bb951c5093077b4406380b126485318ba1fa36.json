{"seed":728711435,"processedDockerfileHash":"d6c868fccd77fabe9160191c2fe268a3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial\nMAINTAINER dominicwilliams\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"Modify the silly string to rebuild from here w/o the cache alsdjajdasd\"\nRUN :\nRUN apt-get upgrade -q -y\nRUN apt-get dist-upgrade -q -y\nRUN (apt-get update ;apt-get install --no-install-recommends apt-utils=1.2.35 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends sudo=1.8.16-0ubuntu1.10 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends figlet=2.2.5-2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends strace=4.11-1ubuntu3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends vim=2:7.4.1689-3ubuntu1.5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 -y )\nRUN curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python=2.7.12-1~16.04 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python-pip=8.1.1-2ubuntu0.6 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python-dev=2.7.12-1~16.04 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libssl-dev=1.0.2g-1ubuntu4.20 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends rake=10.5.0-2ubuntu0.1 -y )\n#   Install tmux to gain split screen management and screen sharing capabilities\nRUN (apt-get update ;apt-get install --no-install-recommends tmux=2.1-3build1 -y )\n#   Pimp VIM with Nerd Tree and other goodies using the Braintree setup\nWORKDIR /root\nRUN git clone https://github.com/braintreeps/vim_dotfiles.git\nWORKDIR /root/vim_dotfiles\nRUN rake\n#   Add TypeScrupt support too\nRUN echo \"Plug 'leafgarland/typescript-vim'\" >> /root/.vimrc.bundles.local\nWORKDIR /root/.vim/plugged\nRUN git clone https://github.com/leafgarland/typescript-vim.git typescript-vim\n#   Make sure we are using \nRUN echo 'set encoding=utf-8' >> /root/.vimrc\n#   Configure VIM with support for Solidity\nWORKDIR /root\nRUN curl -o vim-solidity-master.zip https://codeload.github.com/tomlion/vim-solidity/zip/master\nRUN unzip vim-solidity-master.zip\nRUN rsync -a vim-solidity-master/ .vim/\nRUN rm -rf vim-solidity-master\n#   Add an SSH server for social hacking i.e. pair/multi programming and configure run on port 2222\nRUN (apt-get update ;apt-get install --no-install-recommends openssh-server=1:7.2p2-4ubuntu2.10 -y )\nRUN sed -i '/Port 22/c\\Port 2222' /etc/ssh/sshd_config\nRUN sed -i '/LogLevel INFO/c\\LogLevel VERBOSE' /etc/ssh/sshd_config\nRUN sed -i '/PasswordAuthentication yes/c\\PasswordAuthentication no' /etc/ssh/sshd_config\nRUN mkdir /var/run/sshd\nRUN mkdir /root/.ssh\n#   Add Cloud9 for pair programming & IDE, in addition to tmux\nWORKDIR /opt\nRUN git clone git://github.com/c9/core.git cloud9\nWORKDIR /opt/cloud9\nRUN scripts/install-sdk.sh\n#   patch for solidty syntax\nCOPY patches/c9/node_modules/ace/lib/ace/ext/modelist.js /opt/cloud9/node_modules/ace/lib/ace/ext/modelist.js\nCOPY patches/c9/node_modules/ace/lib/ace/mode/solidity.js /opt/cloud9/node_modules/ace/lib/ace/mode/solidity.js\nCOPY patches/c9/node_modules/ace/lib/ace/mode/solidity_highlight_rules.js /opt/cloud9/node_modules/ace/lib/ace/mode/solidity_highlight_rules.js\nCOPY patches/c9/node_modules/ace/lib/ace/snippets/solidity.js /opt/cloud9/node_modules/ace/lib/ace/snippets/solidity.js\n#   make C9 server runnable (user needs to run $ c9.sh to launch platform)\nRUN mkdir /opt/cloud9/workspace\nWORKDIR /opt/cloud9/workspace\nRUN ln -s /src src\nRUN echo 'cd /opt/cloud9;node server.js --collab -p 8181 --listen 0.0.0.0 -a : -w /opt/cloud9/workspace' > /usr/local/bin/c9.sh\nRUN chmod ugo+x /usr/local/bin/c9.sh\n#   Install testrpc and Truffle directly from github as PIP and NPM not regularly\n#   updated (e.g. make sure we have latest version solc)\n#   ethereumjs-testrpc\nWORKDIR /tmp\nRUN git clone https://github.com/ethereumjs/testrpc.git\nWORKDIR /tmp/testrpc\nRUN npm install .@null -g\n#   Truffle\nWORKDIR /tmp\nRUN git clone https://github.com/ConsenSys/truffle-default-builder.git\nRUN df -h\nWORKDIR /tmp/truffle-default-builder\nRUN npm install .@null -g\nWORKDIR /tmp\nRUN git clone https://github.com/ConsenSys/truffle.git\nWORKDIR /tmp/truffle\nRUN npm install .@null -g\n#   Create an instructive welcome message\nRUN echo 'figlet Instant Dapp IDE' >> /root/.bashrc\nRUN echo 'echo \"\\n Build 2016-12-08.1\\n \\n *** GET STARTED ***\\n tmux is used to maintain concurrent windows. In window 0 we are running\\n testrpc, which is a dummy blockchain for testing and development. In window 1\\n we are running c9.sh, which makes the Cloud9 IDE available in a Web browser on\\n http://localhost:8181. You are in window 2, which is a great place to build\\n a Dapp. Note you can create a new window using ctrl-b c, and you can\\n navigate to an existing window using ctrl-b <window>.\\n \\n SAMPLE BUILD PROCESS...\\n $ mkdir new-proj # create a new project folder\\n $ cd new-proj # make project folder current directory\\n $ truffle init # initialize a bare bones project!!!\\n $ truffle compile # compile project contracts\\n $ truffle test # run project'\"'s\"' unit tests\\n $ truffle build # build the whole Dapp (inc. html, js...)\\n $ truffle migrate # migrate compiled contracts to e.g. testrpc chain\\n $ truffle serve # serve Dapp for testing on http://localhost:8080\\n \\n TIPS\\n -- Share your Cloud9 url with collaborators on your external IP address\\n ---- Cloud9 supports real time shared editing of code\\n -- If you prefer using the terminal we have installed VIM\\n ---- Ready pimped with NerdTree and Solidity support\\n -- An SSH server makes it possible to share tmux session\\n ---- Pair programmers join tmux sessions using $ tmux a -t pair\\n \\n DOCS\\n -- http://truffleframework.com/ [Truffle]\\n -- https://media.readthedocs.org/pdf/solidity/latest/solidity.pdf [Solidity]\\n -- https://gist.github.com/MohamedAlaa/2961058 [tmux]\\n \\n Enjoy! Ping me with feature requests via https://twitter.com/dominic_w\\n\"' >> /root/.bashrc\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   On entry, start sshd, copy pair programming keys into authorized keys, and run bash\nENTRYPOINT service ssh start \\\n && cp /root/.import/authorized_keys /root/.ssh/ \\\n && tmux new -s pair 'testrpc -d 0.0.0.0' ; new-window 'c9.sh' ; new-window\n#   Start user in their source code directory...\nWORKDIR /src\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial\nMAINTAINER dominicwilliams\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"Modify the silly string to rebuild from here w/o the cache alsdjajdasd\"\nRUN apt-get update\nRUN apt-get upgrade -q -y\nRUN apt-get dist-upgrade -q -y\nRUN apt-get install apt-utils -y\nRUN apt-get install sudo -y\nRUN apt-get install figlet -y\nRUN apt-get install strace -y\nRUN apt-get install curl -y\nRUN apt-get install vim -y\nRUN apt-get install git -y\nRUN curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\nRUN apt-get install nodejs -y\nRUN apt-get install python -y\nRUN apt-get install python-pip -y\nRUN apt-get install python-dev -y\nRUN apt-get install libssl-dev -y\nRUN apt-get install rake -y\n#  Install tmux to gain split screen management and screen sharing capabilities\nRUN apt-get install tmux -y\n#  Pimp VIM with Nerd Tree and other goodies using the Braintree setup\nWORKDIR /root\nRUN git clone https://github.com/braintreeps/vim_dotfiles.git\nWORKDIR /root/vim_dotfiles\nRUN rake\n#  Add TypeScrupt support too\nRUN echo \"Plug 'leafgarland/typescript-vim'\" >> /root/.vimrc.bundles.local\nWORKDIR /root/.vim/plugged\nRUN git clone https://github.com/leafgarland/typescript-vim.git typescript-vim\n#  Make sure we are using \nRUN echo 'set encoding=utf-8' >> /root/.vimrc\n#  Configure VIM with support for Solidity\nWORKDIR /root\nRUN curl -o vim-solidity-master.zip https://codeload.github.com/tomlion/vim-solidity/zip/master\nRUN unzip vim-solidity-master.zip\nRUN rsync -a vim-solidity-master/ .vim/\nRUN rm -rf vim-solidity-master\n#  Add an SSH server for social hacking i.e. pair/multi programming and configure run on port 2222\nRUN apt-get install openssh-server -y\nRUN sed -i '/Port 22/c\\Port 2222' /etc/ssh/sshd_config\nRUN sed -i '/LogLevel INFO/c\\LogLevel VERBOSE' /etc/ssh/sshd_config\nRUN sed -i '/PasswordAuthentication yes/c\\PasswordAuthentication no' /etc/ssh/sshd_config\nRUN mkdir /var/run/sshd\nRUN mkdir /root/.ssh\n#  Add Cloud9 for pair programming & IDE, in addition to tmux\nWORKDIR /opt\nRUN git clone git://github.com/c9/core.git cloud9\nWORKDIR /opt/cloud9\nRUN scripts/install-sdk.sh\n#  patch for solidty syntax\nADD patches/c9/node_modules/ace/lib/ace/ext/modelist.js /opt/cloud9/node_modules/ace/lib/ace/ext/modelist.js\nADD patches/c9/node_modules/ace/lib/ace/mode/solidity.js /opt/cloud9/node_modules/ace/lib/ace/mode/solidity.js\nADD patches/c9/node_modules/ace/lib/ace/mode/solidity_highlight_rules.js /opt/cloud9/node_modules/ace/lib/ace/mode/solidity_highlight_rules.js\nADD patches/c9/node_modules/ace/lib/ace/snippets/solidity.js /opt/cloud9/node_modules/ace/lib/ace/snippets/solidity.js\n#  make C9 server runnable (user needs to run $ c9.sh to launch platform)\nRUN mkdir /opt/cloud9/workspace\nWORKDIR /opt/cloud9/workspace\nRUN ln -s /src src\nRUN echo 'cd /opt/cloud9;node server.js --collab -p 8181 --listen 0.0.0.0 -a : -w /opt/cloud9/workspace' > /usr/local/bin/c9.sh\nRUN chmod ugo+x /usr/local/bin/c9.sh\n#  Install testrpc and Truffle directly from github as PIP and NPM not regularly\n#  updated (e.g. make sure we have latest version solc)\n#  ethereumjs-testrpc\nWORKDIR /tmp\nRUN git clone https://github.com/ethereumjs/testrpc.git\nWORKDIR /tmp/testrpc\nRUN npm install . -g\n#  Truffle\nWORKDIR /tmp\nRUN git clone https://github.com/ConsenSys/truffle-default-builder.git\nRUN df -h\nWORKDIR /tmp/truffle-default-builder\nRUN npm install . -g\nWORKDIR /tmp\nRUN git clone https://github.com/ConsenSys/truffle.git\nWORKDIR /tmp/truffle\nRUN npm install . -g\n#  Create an instructive welcome message\nRUN echo 'figlet Instant Dapp IDE' >> /root/.bashrc\nRUN echo 'echo \"\\n Build 2016-12-08.1\\n \\n *** GET STARTED ***\\n tmux is used to maintain concurrent windows. In window 0 we are running\\n testrpc, which is a dummy blockchain for testing and development. In window 1\\n we are running c9.sh, which makes the Cloud9 IDE available in a Web browser on\\n http://localhost:8181. You are in window 2, which is a great place to build\\n a Dapp. Note you can create a new window using ctrl-b c, and you can\\n navigate to an existing window using ctrl-b <window>.\\n \\n SAMPLE BUILD PROCESS...\\n $ mkdir new-proj # create a new project folder\\n $ cd new-proj # make project folder current directory\\n $ truffle init # initialize a bare bones project!!!\\n $ truffle compile # compile project contracts\\n $ truffle test # run project'\"'s\"' unit tests\\n $ truffle build # build the whole Dapp (inc. html, js...)\\n $ truffle migrate # migrate compiled contracts to e.g. testrpc chain\\n $ truffle serve # serve Dapp for testing on http://localhost:8080\\n \\n TIPS\\n -- Share your Cloud9 url with collaborators on your external IP address\\n ---- Cloud9 supports real time shared editing of code\\n -- If you prefer using the terminal we have installed VIM\\n ---- Ready pimped with NerdTree and Solidity support\\n -- An SSH server makes it possible to share tmux session\\n ---- Pair programmers join tmux sessions using $ tmux a -t pair\\n \\n DOCS\\n -- http://truffleframework.com/ [Truffle]\\n -- https://media.readthedocs.org/pdf/solidity/latest/solidity.pdf [Solidity]\\n -- https://gist.github.com/MohamedAlaa/2961058 [tmux]\\n \\n Enjoy! Ping me with feature requests via https://twitter.com/dominic_w\\n\"' >> /root/.bashrc\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  On entry, start sshd, copy pair programming keys into authorized keys, and run bash\nENTRYPOINT service ssh start \\\n && cp /root/.import/authorized_keys /root/.ssh/ \\\n && tmux new -s pair 'testrpc -d 0.0.0.0' ; new-window 'c9.sh' ; new-window\n#  Start user in their source code directory...\nWORKDIR /src\n","injectedSmells":[],"originalDockerfileHash":"0d262f0700a18f1b480270e32b6f410b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial\nMAINTAINER dominicwilliams\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"Modify the silly string to rebuild from here w/o the cache alsdjajdasd\"\nRUN apt-get update\nRUN apt-get upgrade -q -y\nRUN apt-get dist-upgrade -q -y\nRUN apt-get install apt-utils -y\nRUN apt-get install sudo -y\nRUN apt-get install figlet -y\nRUN apt-get install strace -y\nRUN apt-get install curl -y\nRUN apt-get install vim -y\nRUN apt-get install git -y\nRUN curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\nRUN apt-get install nodejs -y\nRUN apt-get install python -y\nRUN apt-get install python-pip -y\nRUN apt-get install python-dev -y\nRUN apt-get install libssl-dev -y\nRUN apt-get install rake -y\n#   Install tmux to gain split screen management and screen sharing capabilities\nRUN apt-get install tmux -y\n#   Pimp VIM with Nerd Tree and other goodies using the Braintree setup\nWORKDIR /root\nRUN git clone https://github.com/braintreeps/vim_dotfiles.git\nWORKDIR /root/vim_dotfiles\nRUN rake\n#   Add TypeScrupt support too\nRUN echo \"Plug 'leafgarland/typescript-vim'\" >> /root/.vimrc.bundles.local\nWORKDIR /root/.vim/plugged\nRUN git clone https://github.com/leafgarland/typescript-vim.git typescript-vim\n#   Make sure we are using \nRUN echo 'set encoding=utf-8' >> /root/.vimrc\n#   Configure VIM with support for Solidity\nWORKDIR /root\nRUN curl -o vim-solidity-master.zip https://codeload.github.com/tomlion/vim-solidity/zip/master\nRUN unzip vim-solidity-master.zip\nRUN rsync -a vim-solidity-master/ .vim/\nRUN rm -rf vim-solidity-master\n#   Add an SSH server for social hacking i.e. pair/multi programming and configure run on port 2222\nRUN apt-get install openssh-server -y\nRUN sed -i '/Port 22/c\\Port 2222' /etc/ssh/sshd_config\nRUN sed -i '/LogLevel INFO/c\\LogLevel VERBOSE' /etc/ssh/sshd_config\nRUN sed -i '/PasswordAuthentication yes/c\\PasswordAuthentication no' /etc/ssh/sshd_config\nRUN mkdir /var/run/sshd\nRUN mkdir /root/.ssh\n#   Add Cloud9 for pair programming & IDE, in addition to tmux\nWORKDIR /opt\nRUN git clone git://github.com/c9/core.git cloud9\nWORKDIR /opt/cloud9\nRUN scripts/install-sdk.sh\n#   patch for solidty syntax\nADD patches/c9/node_modules/ace/lib/ace/ext/modelist.js /opt/cloud9/node_modules/ace/lib/ace/ext/modelist.js\nADD patches/c9/node_modules/ace/lib/ace/mode/solidity.js /opt/cloud9/node_modules/ace/lib/ace/mode/solidity.js\nADD patches/c9/node_modules/ace/lib/ace/mode/solidity_highlight_rules.js /opt/cloud9/node_modules/ace/lib/ace/mode/solidity_highlight_rules.js\nADD patches/c9/node_modules/ace/lib/ace/snippets/solidity.js /opt/cloud9/node_modules/ace/lib/ace/snippets/solidity.js\n#   make C9 server runnable (user needs to run $ c9.sh to launch platform)\nRUN mkdir /opt/cloud9/workspace\nWORKDIR /opt/cloud9/workspace\nRUN ln -s /src src\nRUN echo 'cd /opt/cloud9;node server.js --collab -p 8181 --listen 0.0.0.0 -a : -w /opt/cloud9/workspace' > /usr/local/bin/c9.sh\nRUN chmod ugo+x /usr/local/bin/c9.sh\n#   Install testrpc and Truffle directly from github as PIP and NPM not regularly\n#   updated (e.g. make sure we have latest version solc)\n#   ethereumjs-testrpc\nWORKDIR /tmp\nRUN git clone https://github.com/ethereumjs/testrpc.git\nWORKDIR /tmp/testrpc\nRUN npm install . -g\n#   Truffle\nWORKDIR /tmp\nRUN git clone https://github.com/ConsenSys/truffle-default-builder.git\nRUN df -h\nWORKDIR /tmp/truffle-default-builder\nRUN npm install . -g\nWORKDIR /tmp\nRUN git clone https://github.com/ConsenSys/truffle.git\nWORKDIR /tmp/truffle\nRUN npm install . -g\n#   Create an instructive welcome message\nRUN echo 'figlet Instant Dapp IDE' >> /root/.bashrc\nRUN echo 'echo \"\\n Build 2016-12-08.1\\n \\n *** GET STARTED ***\\n tmux is used to maintain concurrent windows. In window 0 we are running\\n testrpc, which is a dummy blockchain for testing and development. In window 1\\n we are running c9.sh, which makes the Cloud9 IDE available in a Web browser on\\n http://localhost:8181. You are in window 2, which is a great place to build\\n a Dapp. Note you can create a new window using ctrl-b c, and you can\\n navigate to an existing window using ctrl-b <window>.\\n \\n SAMPLE BUILD PROCESS...\\n $ mkdir new-proj # create a new project folder\\n $ cd new-proj # make project folder current directory\\n $ truffle init # initialize a bare bones project!!!\\n $ truffle compile # compile project contracts\\n $ truffle test # run project'\"'s\"' unit tests\\n $ truffle build # build the whole Dapp (inc. html, js...)\\n $ truffle migrate # migrate compiled contracts to e.g. testrpc chain\\n $ truffle serve # serve Dapp for testing on http://localhost:8080\\n \\n TIPS\\n -- Share your Cloud9 url with collaborators on your external IP address\\n ---- Cloud9 supports real time shared editing of code\\n -- If you prefer using the terminal we have installed VIM\\n ---- Ready pimped with NerdTree and Solidity support\\n -- An SSH server makes it possible to share tmux session\\n ---- Pair programmers join tmux sessions using $ tmux a -t pair\\n \\n DOCS\\n -- http://truffleframework.com/ [Truffle]\\n -- https://media.readthedocs.org/pdf/solidity/latest/solidity.pdf [Solidity]\\n -- https://gist.github.com/MohamedAlaa/2961058 [tmux]\\n \\n Enjoy! Ping me with feature requests via https://twitter.com/dominic_w\\n\"' >> /root/.bashrc\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   On entry, start sshd, copy pair programming keys into authorized keys, and run bash\nENTRYPOINT service ssh start \\\n && cp /root/.import/authorized_keys /root/.ssh/ \\\n && tmux new -s pair 'testrpc -d 0.0.0.0' ; new-window 'c9.sh' ; new-window\n#   Start user in their source code directory...\nWORKDIR /src\n","originalDockerfileUglifiedHash":"9abb728d436d1c56aa56ae72aca8250c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e2bb951c5093077b4406380b126485318ba1fa36.dockerfile"}