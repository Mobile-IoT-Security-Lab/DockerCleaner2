{"seed":3282274712,"processedDockerfileHash":"63f34c5449bd50e6c401134a5cd34d2b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  # see https://github.com/pbhogale/gpu-keras-rstudio\nFROM nvidia/cuda:9.0-cudnn7-runtime\nMAINTAINER \"prasanna bhogale\"\nENV CRAN_URL=\"https://cloud.r-project.org/\"\nRUN set -e \\\n && apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends apt-utils libapparmor1 libcurl4-openssl-dev libxml2-dev libssl-dev gdebi-core apt-transport-https pandoc libssh2-1-dev libpython2.7 python-pip imagemagick libxt-dev libxml2-dev xterm -y )\nRUN set -e \\\n && grep '^DISTRIB_CODENAME' /etc/lsb-release | cut -d = -f 2 | xargs -I {} echo \"deb ${CRAN_URL}bin/linux/ubuntu {}/\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && apt-get update -y \\\n && apt-get -y upgrade \\\n && (apt-get update ;apt-get install --no-install-recommends r-base r-base-dev r-cran-littler -y ) \\\n && apt-get -y autoremove \\\n && apt-get clean\nRUN set -e \\\n && (apt-get update ;apt-get install --no-install-recommends curl -y ) \\\n && curl -sS https://s3.amazonaws.com/rstudio-server/current.ver | xargs -I {} curl -sS http://download2.rstudio.org/rstudio-server-{}-amd64.deb -o /tmp/rstudio.deb \\\n && gdebi -n /tmp/rstudio.deb \\\n && rm -rf /tmp/* \\\n && apt-get -y autoremove \\\n && apt-get clean\nRUN set -e \\\n && useradd -m -d /home/rstudio rstudio \\\n && echo rstudio:rstudioTheLegendOfZelda | chpasswd \\\n && apt-get -y autoremove \\\n && apt-get clean\nRUN set -e \\\n && grep '^DISTRIB_CODENAME' /etc/lsb-release | cut -d = -f 2 | xargs -I {} echo \"deb ${CRAN_URL}bin/linux/ubuntu {}/\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && : \\\n && apt-get upgrade -y -q \\\n && pip install pip==9.0.3 --upgrade \\\n && pip install virtualenv==20.21.0 \\\n && pip install pelican==4.8.0 \\\n && rm -rf .cache \\\n && echo 'options(repos = c(CRAN = \"https://cloud.r-project.org\"))' >> /etc/R/Rprofile.site \\\n && /usr/lib/R/site-library/littler/examples/install.r tensorflow keras \\\n && r -e \"install.packages(c('devtools', 'keras', 'xgboost', 'tidyverse', 'rmarkdown', 'greta', 'usethis', 'docopt'))\" \\\n && r -e \"keras::install_keras(tensorflow = 'gpu')\" \\\n && apt-get -y autoremove \\\n && apt-get clean\n#  # Add LaTeX, rticles and bookdown support\n#  # uses dummy texlive, see FAQ 8: https://yihui.name/tinytex/faq/\nRUN (apt-get update ;apt-get install --no-install-recommends wget software-properties-common python-software-properties -y ) \\\n && add-apt-repository -y ppa:opencpu/jq \\\n && apt-get update \\\n && wget \"https://travis-bin.yihui.name/texlive-local.deb\" \\\n && dpkg -i texlive-local.deb \\\n && rm texlive-local.deb \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends default-jdk fonts-roboto ghostscript libbz2-dev libicu-dev liblzma-dev libhunspell-dev libmagick++-dev librdf0-dev libv8-dev libjq-dev qpdf texinfo ssh less vim git-all -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/ \\\n && wget -qO- \"https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh\" | sh -s - --admin --no-path \\\n && mv ~/.TinyTeX /opt/TinyTeX \\\n && /opt/TinyTeX/bin/*/tlmgr path add \\\n && tlmgr install metafont mfware inconsolata tex ae parskip listings \\\n && tlmgr path add \\\n && Rscript -e \"source('https://install-github.me/yihui/tinytex'); tinytex::r_texmf()\" \\\n && chown -R root:staff /opt/TinyTeX \\\n && chmod -R g+w /opt/TinyTeX \\\n && chmod -R g+wx /opt/TinyTeX/bin \\\n && /usr/lib/R/site-library/littler/examples/install2.r --error --deps TRUE bookdown rticles rmdshower DT DiagrammeR bayesplot\nRUN pip install typogrify==2.0.7 pygments==2.15.0 markdown==3.4.3 beautifulsoup4==4.12.2 \\\n && rm -rf .cache \\\n && git clone --recursive https://github.com/getpelican/pelican-themes ~/pelican-themes \\\n && pelican-themes -i ~/pelican-themes/Flex \\\n && pelican-themes -i ~/pelican-themes/elegant \\\n && pelican-themes -i ~/pelican-themes/pelican-bootstrap3 \\\n && git clone --recursive https://github.com/getpelican/pelican-plugins ~/pelican-plugins\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends libglu1-mesa-dev -y ) \\\n && apt-get autoremove \\\n && apt-get clean \\\n && /usr/lib/R/site-library/littler/examples/install2.r --error --deps TRUE vars prophet fanplot chron tseriesEntropy tseriesChaos pdfetch Quandl factorstochvol wavelets Risk fGarch \\\n && pelican-themes -i ~/pelican-themes/pelican-bootstrap3\nRUN (apt-get update ;apt-get install --no-install-recommends libgsl-dev -y ) \\\n && /usr/lib/R/site-library/littler/examples/install2.r --error --deps TRUE tidytext janeaustenr shiny wordcloud sentimentr stringr gutenbergr ggthemes rsconnect\nEXPOSE 8787/tcp\nCMD [\"/usr/lib/rstudio-server/bin/rserver\", \"--server-daemonize=0\", \"--server-app-armor-enabled=0\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# # see https://github.com/pbhogale/gpu-keras-rstudio\nFROM nvidia/cuda:9.0-cudnn7-runtime\nMAINTAINER \"prasanna bhogale\"\nENV CRAN_URL=\"https://cloud.r-project.org/\"\nRUN set -e \\\n && apt-get update -y \\\n && apt-get install apt-utils libapparmor1 libcurl4-openssl-dev libxml2-dev libssl-dev gdebi-core apt-transport-https pandoc libssh2-1-dev libpython2.7 python-pip imagemagick libxt-dev libxml2-dev xterm -y\nRUN set -e \\\n && grep '^DISTRIB_CODENAME' /etc/lsb-release | cut -d = -f 2 | xargs -I {} echo \"deb ${CRAN_URL}bin/linux/ubuntu {}/\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends r-base r-base-dev r-cran-littler -y \\\n && apt-get -y autoremove \\\n && apt-get clean\nRUN set -e \\\n && apt-get install curl -y \\\n && curl -sS https://s3.amazonaws.com/rstudio-server/current.ver | xargs -I {} curl -sS http://download2.rstudio.org/rstudio-server-{}-amd64.deb -o /tmp/rstudio.deb \\\n && gdebi -n /tmp/rstudio.deb \\\n && rm -rf /tmp/* \\\n && apt-get -y autoremove \\\n && apt-get clean\nRUN set -e \\\n && useradd -m -d /home/rstudio rstudio \\\n && echo rstudio:rstudioTheLegendOfZelda | chpasswd \\\n && apt-get -y autoremove \\\n && apt-get clean\nRUN set -e \\\n && grep '^DISTRIB_CODENAME' /etc/lsb-release | cut -d = -f 2 | xargs -I {} echo \"deb ${CRAN_URL}bin/linux/ubuntu {}/\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && apt-get update \\\n && apt-get upgrade -y -q \\\n && pip install pip==9.0.3 --upgrade \\\n && pip install virtualenv \\\n && pip install pelican \\\n && rm -rf .cache \\\n && echo 'options(repos = c(CRAN = \"https://cloud.r-project.org\"))' >> /etc/R/Rprofile.site \\\n && /usr/lib/R/site-library/littler/examples/install.r tensorflow keras \\\n && r -e \"install.packages(c('devtools', 'keras', 'xgboost', 'tidyverse', 'rmarkdown', 'greta', 'usethis', 'docopt'))\" \\\n && r -e \"keras::install_keras(tensorflow = 'gpu')\" \\\n && apt-get -y autoremove \\\n && apt-get clean\n# # Add LaTeX, rticles and bookdown support\n# # uses dummy texlive, see FAQ 8: https://yihui.name/tinytex/faq/\nRUN apt-get install --no-install-recommends wget software-properties-common python-software-properties -y \\\n && add-apt-repository -y ppa:opencpu/jq \\\n && apt-get update \\\n && wget \"https://travis-bin.yihui.name/texlive-local.deb\" \\\n && dpkg -i texlive-local.deb \\\n && rm texlive-local.deb \\\n && apt-get update \\\n && apt-get install --no-install-recommends default-jdk fonts-roboto ghostscript libbz2-dev libicu-dev liblzma-dev libhunspell-dev libmagick++-dev librdf0-dev libv8-dev libjq-dev qpdf texinfo ssh less vim git-all -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/ \\\n && wget -qO- \"https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh\" | sh -s - --admin --no-path \\\n && mv ~/.TinyTeX /opt/TinyTeX \\\n && /opt/TinyTeX/bin/*/tlmgr path add \\\n && tlmgr install metafont mfware inconsolata tex ae parskip listings \\\n && tlmgr path add \\\n && Rscript -e \"source('https://install-github.me/yihui/tinytex'); tinytex::r_texmf()\" \\\n && chown -R root:staff /opt/TinyTeX \\\n && chmod -R g+w /opt/TinyTeX \\\n && chmod -R g+wx /opt/TinyTeX/bin \\\n && /usr/lib/R/site-library/littler/examples/install2.r --error --deps TRUE bookdown rticles rmdshower DT DiagrammeR bayesplot\nRUN pip install typogrify pygments markdown beautifulsoup4 \\\n && rm -rf .cache \\\n && git clone --recursive https://github.com/getpelican/pelican-themes ~/pelican-themes \\\n && pelican-themes -i ~/pelican-themes/Flex \\\n && pelican-themes -i ~/pelican-themes/elegant \\\n && pelican-themes -i ~/pelican-themes/pelican-bootstrap3 \\\n && git clone --recursive https://github.com/getpelican/pelican-plugins ~/pelican-plugins\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends libglu1-mesa-dev -y \\\n && apt-get autoremove \\\n && apt-get clean \\\n && /usr/lib/R/site-library/littler/examples/install2.r --error --deps TRUE vars prophet fanplot chron tseriesEntropy tseriesChaos pdfetch Quandl factorstochvol wavelets Risk fGarch \\\n && pelican-themes -i ~/pelican-themes/pelican-bootstrap3\nRUN apt-get install --no-install-recommends libgsl-dev -y \\\n && /usr/lib/R/site-library/littler/examples/install2.r --error --deps TRUE tidytext janeaustenr shiny wordcloud sentimentr stringr gutenbergr ggthemes rsconnect\nEXPOSE 8787/tcp\nCMD [\"/usr/lib/rstudio-server/bin/rserver\", \"--server-daemonize=0\", \"--server-app-armor-enabled=0\"]\n","injectedSmells":[],"originalDockerfileHash":"12b433b69efbcbeb57dfb6dbc3a38998","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  # see https://github.com/pbhogale/gpu-keras-rstudio\nFROM nvidia/cuda:9.0-cudnn7-runtime\nMAINTAINER \"prasanna bhogale\"\nENV CRAN_URL=\"https://cloud.r-project.org/\"\nRUN set -e \\\n && apt-get update -y \\\n && apt-get install apt-utils libapparmor1 libcurl4-openssl-dev libxml2-dev libssl-dev gdebi-core apt-transport-https pandoc libssh2-1-dev libpython2.7 python-pip imagemagick libxt-dev libxml2-dev xterm -y\nRUN set -e \\\n && grep '^DISTRIB_CODENAME' /etc/lsb-release | cut -d = -f 2 | xargs -I {} echo \"deb ${CRAN_URL}bin/linux/ubuntu {}/\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends r-base r-base-dev r-cran-littler -y \\\n && apt-get -y autoremove \\\n && apt-get clean\nRUN set -e \\\n && apt-get install curl -y \\\n && curl -sS https://s3.amazonaws.com/rstudio-server/current.ver | xargs -I {} curl -sS http://download2.rstudio.org/rstudio-server-{}-amd64.deb -o /tmp/rstudio.deb \\\n && gdebi -n /tmp/rstudio.deb \\\n && rm -rf /tmp/* \\\n && apt-get -y autoremove \\\n && apt-get clean\nRUN set -e \\\n && useradd -m -d /home/rstudio rstudio \\\n && echo rstudio:rstudioTheLegendOfZelda | chpasswd \\\n && apt-get -y autoremove \\\n && apt-get clean\nRUN set -e \\\n && grep '^DISTRIB_CODENAME' /etc/lsb-release | cut -d = -f 2 | xargs -I {} echo \"deb ${CRAN_URL}bin/linux/ubuntu {}/\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && apt-get update \\\n && apt-get upgrade -y -q \\\n && pip install pip==9.0.3 --upgrade \\\n && pip install virtualenv \\\n && pip install pelican \\\n && rm -rf .cache \\\n && echo 'options(repos = c(CRAN = \"https://cloud.r-project.org\"))' >> /etc/R/Rprofile.site \\\n && /usr/lib/R/site-library/littler/examples/install.r tensorflow keras \\\n && r -e \"install.packages(c('devtools', 'keras', 'xgboost', 'tidyverse', 'rmarkdown', 'greta', 'usethis', 'docopt'))\" \\\n && r -e \"keras::install_keras(tensorflow = 'gpu')\" \\\n && apt-get -y autoremove \\\n && apt-get clean\n#  # Add LaTeX, rticles and bookdown support\n#  # uses dummy texlive, see FAQ 8: https://yihui.name/tinytex/faq/\nRUN apt-get install --no-install-recommends wget software-properties-common python-software-properties -y \\\n && add-apt-repository -y ppa:opencpu/jq \\\n && apt-get update \\\n && wget \"https://travis-bin.yihui.name/texlive-local.deb\" \\\n && dpkg -i texlive-local.deb \\\n && rm texlive-local.deb \\\n && apt-get update \\\n && apt-get install --no-install-recommends default-jdk fonts-roboto ghostscript libbz2-dev libicu-dev liblzma-dev libhunspell-dev libmagick++-dev librdf0-dev libv8-dev libjq-dev qpdf texinfo ssh less vim git-all -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/ \\\n && wget -qO- \"https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh\" | sh -s - --admin --no-path \\\n && mv ~/.TinyTeX /opt/TinyTeX \\\n && /opt/TinyTeX/bin/*/tlmgr path add \\\n && tlmgr install metafont mfware inconsolata tex ae parskip listings \\\n && tlmgr path add \\\n && Rscript -e \"source('https://install-github.me/yihui/tinytex'); tinytex::r_texmf()\" \\\n && chown -R root:staff /opt/TinyTeX \\\n && chmod -R g+w /opt/TinyTeX \\\n && chmod -R g+wx /opt/TinyTeX/bin \\\n && /usr/lib/R/site-library/littler/examples/install2.r --error --deps TRUE bookdown rticles rmdshower DT DiagrammeR bayesplot\nRUN pip install typogrify pygments markdown beautifulsoup4 \\\n && rm -rf .cache \\\n && git clone --recursive https://github.com/getpelican/pelican-themes ~/pelican-themes \\\n && pelican-themes -i ~/pelican-themes/Flex \\\n && pelican-themes -i ~/pelican-themes/elegant \\\n && pelican-themes -i ~/pelican-themes/pelican-bootstrap3 \\\n && git clone --recursive https://github.com/getpelican/pelican-plugins ~/pelican-plugins\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends libglu1-mesa-dev -y \\\n && apt-get autoremove \\\n && apt-get clean \\\n && /usr/lib/R/site-library/littler/examples/install2.r --error --deps TRUE vars prophet fanplot chron tseriesEntropy tseriesChaos pdfetch Quandl factorstochvol wavelets Risk fGarch \\\n && pelican-themes -i ~/pelican-themes/pelican-bootstrap3\nRUN apt-get install --no-install-recommends libgsl-dev -y \\\n && /usr/lib/R/site-library/littler/examples/install2.r --error --deps TRUE tidytext janeaustenr shiny wordcloud sentimentr stringr gutenbergr ggthemes rsconnect\nEXPOSE 8787/tcp\nCMD [\"/usr/lib/rstudio-server/bin/rserver\", \"--server-daemonize=0\", \"--server-app-armor-enabled=0\"]\n","originalDockerfileUglifiedHash":"b27f96e6ce19a5c22e68f042bdf05f82","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/db197c7209d0fd453c7f5b1c28ae36f1dcc59554.dockerfile"}