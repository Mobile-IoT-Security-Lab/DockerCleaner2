{"seed":3895105841,"processedDockerfileHash":"255c0212a8068d756c3ada9e9204efcd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-have-secrets","have-a-healthcheck"],"processedDockerfile":"#  FROM tomcat:7.0-jre8\nFROM tomcat:9.0.11-jre10\n#  -----------------------------------------------------------------------------\n#   To build: docker build -t ipac/firefly --build-arg IMAGE_NAME=ipac/firefly .\n#   For help in running: docker run --rm  ipac/firefly --help\n#  -----------------------------------------------------------------------------\n#   Support single server deployments\n#   For multi server we need to look at multicast issues so ehcache can communicate\n#   add packages: vim, etc\n#   add any other standard apt packages here\nRUN apt-get update \\\n && apt-get install --no-install-recommends vim procps wget emacs24-nox -y \\\n && rm -rf var/lib/apt/lists//*\n#   create catalina_base directory .. so tomcat can run as non-root\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV CATALINA_BASE=\"/usr/local/tomcat-base\"\nWORKDIR ${CATALINA_BASE}\nRUN chmod g-s ${CATALINA_BASE} \\\n && mkdir bin conf lib logs temp webapps work \\\n && cp ${CATALINA_HOME}/conf/* ${CATALINA_BASE}/conf/ \\\n && chmod +rw ${CATALINA_BASE}/conf/* \\\n && chmod -R +rX ${CATALINA_HOME}\n#   These environment varibles are not really made to be overridden\n#   they can be but are mostly for setup\nENV JPDA_ADDRESS=\"5050\"\nENV CATALINA_PID=\"${CATALINA_BASE}/bin/catalina.pid\"\n#   work dir and config dir might be overridden if they were used in a mounted volume\n#   in the case make sure the directories exist\nENV SERVER_CONFIG_DIR=\"${CATALINA_BASE}/firefly-config\"\nENV FIREFLY_WORK_DIR=\"${CATALINA_BASE}/firefly-work\"\nENV FIREFLY_SHARED_WORK_DIR=\"\"\nENV EXTERNAL_MOUNT_POINT=\"/external\"\nENV VISUALIZE_FITS_SEARCH_PATH=\"${EXTERNAL_MOUNT_POINT}\"\n#   container has access to the image name, used for help only\nARG IMAGE_NAME=''\nENV BUILD_TIME_NAME=\"${IMAGE_NAME}\"\n#   These are the file there are executed at startup, they start tomcat\nCOPY launchTomcat.sh start-examples.txt setupSharedCacheJars.sh ${CATALINA_BASE}/\n#   Tomcat config files, tomcat-users is for the admin username and password\n#   context.xml set delegate to true for we can use the classpath of tomcat\nCOPY tomcat-users.xml context.xml ${CATALINA_BASE}/conf/\n#   Make directories, make scripts executable, save old tomcat config files, remove unwanted apps\nRUN chmod +x ${CATALINA_BASE}/launchTomcat.sh ${CATALINA_BASE}/setupSharedCacheJars.sh ; mkdir -p ${SERVER_CONFIG_DIR} ; mkdir -p ${FIREFLY_WORK_DIR} ; mkdir -p ${EXTERNAL_MOUNT_POINT} ; chmod 777 bin conf lib logs temp webapps work ${SERVER_CONFIG_DIR} ${FIREFLY_WORK_DIR} ; mv ${CATALINA_BASE}/conf/tomcat-users.xml ${CATALINA_BASE}/conf/tomcat-users.xml.in\n#   setenv.sh is used to defined CATALINA_OPTS and JAVA_OPTS\nCOPY setenv.sh ${CATALINA_BASE}/bin/\n#   increase max header size to avoid failing on large auth token\nRUN sed -i 's/Connector port=\"8080\"/Connector maxHttpHeaderSize=\"24576\" port=\"8080\"/g' ${CATALINA_BASE}/conf/server.xml\n#   8080 - http\n#   5050 - debug\nEXPOSE 8080/tcp 5050/tcp\n#   ----------------------------------------------------------\n#   ----------------------------------------------------------\n#   Overide the following from the command line:\n#            MIN_JVM_SIZE, MAX_JVM_SIZE, ADMIN_USER, ADMIN_PASSWORD,\n#            DEBUG, jvmRoute, LOG_FILE_TO_CONSOLE, FIREFLY_OPTS,\n#   ----------------------------------------------------------\n#   ----------------------------------------------------------\n#   MIN_JVM_SIZE and MAX_JVM_SIZE should be used to set the min and max JVM side\n#   at least MAX_JVM_SIZE should almost alway be used on the command line with \n#   parameter such as: -e \"MAX_JVM_SIZE=4G\"\nENV MIN_JVM_SIZE=\"1G\"\nENV MAX_JVM_SIZE=\"8G\"\nENV JVM_CORES=\"0\"\n#  User name and password to use admin\nENV ADMIN_USER=\"admin\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV DEBUG=\"false\"\nENV MANAGER=\"true\"\n#   if jvmRoute is not passed the hostname (the container id) is used\n#   such as: -e jvmRoute=\"myroute1\"\nENV jvmRoute=\"\"\n#   file to log to console, such as -e \"LOG_FILE_TO_CONSOLE=firefly.log\"\nENV LOG_FILE_TO_CONSOLE=\"\"\n#   FIREFLY_OPTS could be used to pass any properties, setenv.sh picks it up\nENV FIREFLY_OPTS=\"\"\n#   SHARE_CACHE set to TRUE when deploying multiple apps to share the VIS_SHARED_MEM cache\nENV SHARE_CACHE=\"FALSE\"\n#  copy all wars, typically there should only be one\nCOPY *.war ${CATALINA_BASE}/webapps/\nRUN groupadd -g 91 tomcat \\\n && useradd -r -u 91 -g tomcat tomcat\nUSER tomcat:tomcat\n#  CMD [\"bin/catalina.sh\",\"jpda\", \"run\"]\n#  CMD [\"/bin/bash\", \"./launchTomcat.sh\"]\nENTRYPOINT [\"/bin/bash\", \"-c\", \"./launchTomcat.sh\", \"${*}\", \"--\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8080 || exit 1\n","originalDockerfile":"# FROM tomcat:7.0-jre8\nFROM tomcat:9.0.11-jre10\n# -----------------------------------------------------------------------------\n#  To build: docker build -t ipac/firefly --build-arg IMAGE_NAME=ipac/firefly .\n#  For help in running: docker run --rm  ipac/firefly --help\n# -----------------------------------------------------------------------------\n#  Support single server deployments\n#  For multi server we need to look at multicast issues so ehcache can communicate\n#  add packages: vim, etc\n#  add any other standard apt packages here\nRUN apt-get update \\\n && apt-get install vim procps wget emacs24-nox -y \\\n && rm -rf var/lib/apt/lists//*\n#  create catalina_base directory .. so tomcat can run as non-root\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV CATALINA_BASE=\"/usr/local/tomcat-base\"\nWORKDIR ${CATALINA_BASE}\nRUN chmod g-s ${CATALINA_BASE} \\\n && mkdir bin conf lib logs temp webapps work \\\n && cp ${CATALINA_HOME}/conf/* ${CATALINA_BASE}/conf/ \\\n && chmod +rw ${CATALINA_BASE}/conf/* \\\n && chmod -R +rX ${CATALINA_HOME}\n#  These environment varibles are not really made to be overridden\n#  they can be but are mostly for setup\nENV JPDA_ADDRESS=\"5050\"\nENV CATALINA_PID=\"${CATALINA_BASE}/bin/catalina.pid\"\n#  work dir and config dir might be overridden if they were used in a mounted volume\n#  in the case make sure the directories exist\nENV SERVER_CONFIG_DIR=\"${CATALINA_BASE}/firefly-config\"\nENV FIREFLY_WORK_DIR=\"${CATALINA_BASE}/firefly-work\"\nENV FIREFLY_SHARED_WORK_DIR=\"\"\nENV EXTERNAL_MOUNT_POINT=\"/external\"\nENV VISUALIZE_FITS_SEARCH_PATH=\"${EXTERNAL_MOUNT_POINT}\"\n#  container has access to the image name, used for help only\nARG IMAGE_NAME=''\nENV BUILD_TIME_NAME=\"${IMAGE_NAME}\"\n#  These are the file there are executed at startup, they start tomcat\nCOPY launchTomcat.sh start-examples.txt setupSharedCacheJars.sh ${CATALINA_BASE}/\n#  Tomcat config files, tomcat-users is for the admin username and password\n#  context.xml set delegate to true for we can use the classpath of tomcat\nCOPY tomcat-users.xml context.xml ${CATALINA_BASE}/conf/\n#  Make directories, make scripts executable, save old tomcat config files, remove unwanted apps\nRUN chmod +x ${CATALINA_BASE}/launchTomcat.sh ${CATALINA_BASE}/setupSharedCacheJars.sh ; mkdir -p ${SERVER_CONFIG_DIR} ; mkdir -p ${FIREFLY_WORK_DIR} ; mkdir -p ${EXTERNAL_MOUNT_POINT} ; chmod 777 bin conf lib logs temp webapps work ${SERVER_CONFIG_DIR} ${FIREFLY_WORK_DIR} ; mv ${CATALINA_BASE}/conf/tomcat-users.xml ${CATALINA_BASE}/conf/tomcat-users.xml.in\n#  setenv.sh is used to defined CATALINA_OPTS and JAVA_OPTS\nCOPY setenv.sh ${CATALINA_BASE}/bin/\n#  increase max header size to avoid failing on large auth token\nRUN sed -i 's/Connector port=\"8080\"/Connector maxHttpHeaderSize=\"24576\" port=\"8080\"/g' ${CATALINA_BASE}/conf/server.xml\n#  8080 - http\n#  5050 - debug\nEXPOSE 8080/tcp 5050/tcp\n#  ----------------------------------------------------------\n#  ----------------------------------------------------------\n#  Overide the following from the command line:\n#           MIN_JVM_SIZE, MAX_JVM_SIZE, ADMIN_USER, ADMIN_PASSWORD,\n#           DEBUG, jvmRoute, LOG_FILE_TO_CONSOLE, FIREFLY_OPTS,\n#  ----------------------------------------------------------\n#  ----------------------------------------------------------\n#  MIN_JVM_SIZE and MAX_JVM_SIZE should be used to set the min and max JVM side\n#  at least MAX_JVM_SIZE should almost alway be used on the command line with \n#  parameter such as: -e \"MAX_JVM_SIZE=4G\"\nENV MIN_JVM_SIZE=\"1G\"\nENV MAX_JVM_SIZE=\"8G\"\nENV JVM_CORES=\"0\"\n# User name and password to use admin\nENV ADMIN_USER=\"admin\"\nENV ADMIN_PASSWORD=\"replaceMe\"\nENV DEBUG=\"false\"\nENV MANAGER=\"true\"\n#  if jvmRoute is not passed the hostname (the container id) is used\n#  such as: -e jvmRoute=\"myroute1\"\nENV jvmRoute=\"\"\n#  file to log to console, such as -e \"LOG_FILE_TO_CONSOLE=firefly.log\"\nENV LOG_FILE_TO_CONSOLE=\"\"\n#  FIREFLY_OPTS could be used to pass any properties, setenv.sh picks it up\nENV FIREFLY_OPTS=\"\"\n#  SHARE_CACHE set to TRUE when deploying multiple apps to share the VIS_SHARED_MEM cache\nENV SHARE_CACHE=\"FALSE\"\n# copy all wars, typically there should only be one\nCOPY *.war ${CATALINA_BASE}/webapps/\nRUN groupadd -g 91 tomcat \\\n && useradd -r -u 91 -g tomcat tomcat\nUSER tomcat:tomcat\n# CMD [\"bin/catalina.sh\",\"jpda\", \"run\"]\n# CMD [\"/bin/bash\", \"./launchTomcat.sh\"]\nENTRYPOINT [\"/bin/bash\", \"-c\", \"./launchTomcat.sh\", \"${*}\", \"--\"]\n","injectedSmells":[],"originalDockerfileHash":"d1dca5eb1e13bb0fe177e027e82a9931","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  FROM tomcat:7.0-jre8\nFROM tomcat:9.0.11-jre10\n#  -----------------------------------------------------------------------------\n#   To build: docker build -t ipac/firefly --build-arg IMAGE_NAME=ipac/firefly .\n#   For help in running: docker run --rm  ipac/firefly --help\n#  -----------------------------------------------------------------------------\n#   Support single server deployments\n#   For multi server we need to look at multicast issues so ehcache can communicate\n#   add packages: vim, etc\n#   add any other standard apt packages here\nRUN apt-get update \\\n && apt-get install vim procps wget emacs24-nox -y \\\n && rm -rf var/lib/apt/lists//*\n#   create catalina_base directory .. so tomcat can run as non-root\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV CATALINA_BASE=\"/usr/local/tomcat-base\"\nWORKDIR ${CATALINA_BASE}\nRUN chmod g-s ${CATALINA_BASE} \\\n && mkdir bin conf lib logs temp webapps work \\\n && cp ${CATALINA_HOME}/conf/* ${CATALINA_BASE}/conf/ \\\n && chmod +rw ${CATALINA_BASE}/conf/* \\\n && chmod -R +rX ${CATALINA_HOME}\n#   These environment varibles are not really made to be overridden\n#   they can be but are mostly for setup\nENV JPDA_ADDRESS=\"5050\"\nENV CATALINA_PID=\"${CATALINA_BASE}/bin/catalina.pid\"\n#   work dir and config dir might be overridden if they were used in a mounted volume\n#   in the case make sure the directories exist\nENV SERVER_CONFIG_DIR=\"${CATALINA_BASE}/firefly-config\"\nENV FIREFLY_WORK_DIR=\"${CATALINA_BASE}/firefly-work\"\nENV FIREFLY_SHARED_WORK_DIR=\"\"\nENV EXTERNAL_MOUNT_POINT=\"/external\"\nENV VISUALIZE_FITS_SEARCH_PATH=\"${EXTERNAL_MOUNT_POINT}\"\n#   container has access to the image name, used for help only\nARG IMAGE_NAME=''\nENV BUILD_TIME_NAME=\"${IMAGE_NAME}\"\n#   These are the file there are executed at startup, they start tomcat\nCOPY launchTomcat.sh start-examples.txt setupSharedCacheJars.sh ${CATALINA_BASE}/\n#   Tomcat config files, tomcat-users is for the admin username and password\n#   context.xml set delegate to true for we can use the classpath of tomcat\nCOPY tomcat-users.xml context.xml ${CATALINA_BASE}/conf/\n#   Make directories, make scripts executable, save old tomcat config files, remove unwanted apps\nRUN chmod +x ${CATALINA_BASE}/launchTomcat.sh ${CATALINA_BASE}/setupSharedCacheJars.sh ; mkdir -p ${SERVER_CONFIG_DIR} ; mkdir -p ${FIREFLY_WORK_DIR} ; mkdir -p ${EXTERNAL_MOUNT_POINT} ; chmod 777 bin conf lib logs temp webapps work ${SERVER_CONFIG_DIR} ${FIREFLY_WORK_DIR} ; mv ${CATALINA_BASE}/conf/tomcat-users.xml ${CATALINA_BASE}/conf/tomcat-users.xml.in\n#   setenv.sh is used to defined CATALINA_OPTS and JAVA_OPTS\nCOPY setenv.sh ${CATALINA_BASE}/bin/\n#   increase max header size to avoid failing on large auth token\nRUN sed -i 's/Connector port=\"8080\"/Connector maxHttpHeaderSize=\"24576\" port=\"8080\"/g' ${CATALINA_BASE}/conf/server.xml\n#   8080 - http\n#   5050 - debug\nEXPOSE 8080/tcp 5050/tcp\n#   ----------------------------------------------------------\n#   ----------------------------------------------------------\n#   Overide the following from the command line:\n#            MIN_JVM_SIZE, MAX_JVM_SIZE, ADMIN_USER, ADMIN_PASSWORD,\n#            DEBUG, jvmRoute, LOG_FILE_TO_CONSOLE, FIREFLY_OPTS,\n#   ----------------------------------------------------------\n#   ----------------------------------------------------------\n#   MIN_JVM_SIZE and MAX_JVM_SIZE should be used to set the min and max JVM side\n#   at least MAX_JVM_SIZE should almost alway be used on the command line with \n#   parameter such as: -e \"MAX_JVM_SIZE=4G\"\nENV MIN_JVM_SIZE=\"1G\"\nENV MAX_JVM_SIZE=\"8G\"\nENV JVM_CORES=\"0\"\n#  User name and password to use admin\nENV ADMIN_USER=\"admin\"\nENV ADMIN_PASSWORD=\"replaceMe\"\nENV DEBUG=\"false\"\nENV MANAGER=\"true\"\n#   if jvmRoute is not passed the hostname (the container id) is used\n#   such as: -e jvmRoute=\"myroute1\"\nENV jvmRoute=\"\"\n#   file to log to console, such as -e \"LOG_FILE_TO_CONSOLE=firefly.log\"\nENV LOG_FILE_TO_CONSOLE=\"\"\n#   FIREFLY_OPTS could be used to pass any properties, setenv.sh picks it up\nENV FIREFLY_OPTS=\"\"\n#   SHARE_CACHE set to TRUE when deploying multiple apps to share the VIS_SHARED_MEM cache\nENV SHARE_CACHE=\"FALSE\"\n#  copy all wars, typically there should only be one\nCOPY *.war ${CATALINA_BASE}/webapps/\nRUN groupadd -g 91 tomcat \\\n && useradd -r -u 91 -g tomcat tomcat\nUSER tomcat:tomcat\n#  CMD [\"bin/catalina.sh\",\"jpda\", \"run\"]\n#  CMD [\"/bin/bash\", \"./launchTomcat.sh\"]\nENTRYPOINT [\"/bin/bash\", \"-c\", \"./launchTomcat.sh\", \"${*}\", \"--\"]\n","originalDockerfileUglifiedHash":"74d7db2b26774caf3cbf2a185ed19d67","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2b4c2a40536bb237ca2eb2c9635f79c844b3d336.dockerfile"}