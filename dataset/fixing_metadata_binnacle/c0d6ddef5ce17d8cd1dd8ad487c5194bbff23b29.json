{"seed":2701723464,"processedDockerfileHash":"adeaff68f4c3419691cd76c3dfde8dee","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM lambci/lambda:build-python2.7\nARG http_proxy\nARG CURL_VERSION=7.59.0\nARG GDAL_VERSION=2.3.0\nARG LIBJPEG_TURBO_VERSION=1.5.90\nARG NGHTTP2_VERSION=1.31.1\nARG PROJ_VERSION=4.9.3\n#   add gdal-config and curl to PATH for rasterio + libcurl usage\nENV PATH=\"/var/task/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nENV LD_LIBRARY_PATH=\"/lib64:/usr/lib64:/var/runtime:/var/runtime/lib:/var/task:/var/task/lib:/var/task/lib64\"\nENV LIBRARY_PATH=\"/lib64:/usr/lib64:/var/runtime:/var/runtime/lib:/var/task:/var/task/lib:/var/task/lib64\"\n#   Install deps\nRUN rpm --rebuilddb \\\n && yum install -y automake16 libpng-devel nasm\n#   Fetch and build nghttp2\nRUN mkdir /tmp/nghttp2 \\\n && curl -sfL https://github.com/nghttp2/nghttp2/releases/download/v${NGHTTP2_VERSION}/nghttp2-${NGHTTP2_VERSION}.tar.gz | tar zxf - -C /tmp/nghttp2 --strip-components=1 \\\n && cd /tmp/nghttp2 \\\n && ./configure --enable-lib-only --prefix=/var/task \\\n && make -j $( nproc ;) install\n#   Fetch and install libcurl\nRUN mkdir /tmp/curl \\\n && curl -sfL https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz | tar zxf - -C /tmp/curl --strip-components=1 \\\n && cd /tmp/curl \\\n && ./configure --prefix=/var/task --disable-manual --disable-cookies --with-nghttp2=/var/task \\\n && make -j $( nproc ;) install\n#   Fetch PROJ.4\nRUN curl -sfL http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz | tar zxf - -C /tmp\n#   Build and install PROJ.4\nWORKDIR /tmp/proj-${PROJ_VERSION}\nRUN ./configure --prefix=/var/task \\\n && make -j $( nproc ;) \\\n && make install\n#   Build and install libjpeg-turbo\nRUN mkdir -p /tmp/libjpeg-turbo \\\n && curl -sfL https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${LIBJPEG_TURBO_VERSION}.tar.gz | tar zxf - -C /tmp/libjpeg-turbo --strip-components=1 \\\n && cd /tmp/libjpeg-turbo \\\n && cmake -G\"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=/var/task . \\\n && make -j $( nproc ;) install\n#   Fetch GDAL\nRUN mkdir -p /tmp/gdal \\\n && curl -sfL https://github.com/OSGeo/gdal/archive/v${GDAL_VERSION}.tar.gz | tar zxf - -C /tmp/gdal --strip-components=2\n#   Build + install GDAL\nWORKDIR /tmp/gdal\nRUN ./configure --prefix=/var/task --datarootdir=/var/task/share/gdal --with-curl=/var/task/bin/curl-config --without-qhull --without-mrf --without-grib --without-pcraster --without-png --without-gif --with-jpeg=/var/task --without-pcidsk \\\n && make -j $( nproc ;) \\\n && make -j $( nproc ;) install\n#   Install Python deps\nWORKDIR /var/task\nCOPY requirements-lambda.txt /var/task/\nCOPY requirements.txt /var/task/\nENV PYTHONPATH=\"/var/task/.pypath\"\nRUN mkdir -p .pypath \\\n && pip install Cython==0.29.34 \"numpy == 1.13.1\" -U -t .pypath/ \\\n && pip install -r requirements-lambda.txt -t .pypath/\nRUN find . -name *.so* -exec strip {}\nCOPY deps/required.txt /var/task/required.txt\nCOPY deps/prune.sh /var/task/prune.sh\nRUN /var/task/prune.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM lambci/lambda:build-python2.7\nARG http_proxy\nARG CURL_VERSION=7.59.0\nARG GDAL_VERSION=2.3.0\nARG LIBJPEG_TURBO_VERSION=1.5.90\nARG NGHTTP2_VERSION=1.31.1\nARG PROJ_VERSION=4.9.3\n#  add gdal-config and curl to PATH for rasterio + libcurl usage\nENV PATH=\"/var/task/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nENV LD_LIBRARY_PATH=\"/lib64:/usr/lib64:/var/runtime:/var/runtime/lib:/var/task:/var/task/lib:/var/task/lib64\"\nENV LIBRARY_PATH=\"/lib64:/usr/lib64:/var/runtime:/var/runtime/lib:/var/task:/var/task/lib:/var/task/lib64\"\n#  Install deps\nRUN rpm --rebuilddb \\\n && yum install -y automake16 libpng-devel nasm\n#  Fetch and build nghttp2\nRUN mkdir /tmp/nghttp2 \\\n && curl -sfL https://github.com/nghttp2/nghttp2/releases/download/v${NGHTTP2_VERSION}/nghttp2-${NGHTTP2_VERSION}.tar.gz | tar zxf - -C /tmp/nghttp2 --strip-components=1 \\\n && cd /tmp/nghttp2 \\\n && ./configure --enable-lib-only --prefix=/var/task \\\n && make -j $( nproc ;) install\n#  Fetch and install libcurl\nRUN mkdir /tmp/curl \\\n && curl -sfL https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz | tar zxf - -C /tmp/curl --strip-components=1 \\\n && cd /tmp/curl \\\n && ./configure --prefix=/var/task --disable-manual --disable-cookies --with-nghttp2=/var/task \\\n && make -j $( nproc ;) install\n#  Fetch PROJ.4\nRUN curl -sfL http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz | tar zxf - -C /tmp\n#  Build and install PROJ.4\nWORKDIR /tmp/proj-${PROJ_VERSION}\nRUN ./configure --prefix=/var/task \\\n && make -j $( nproc ;) \\\n && make install\n#  Build and install libjpeg-turbo\nRUN mkdir -p /tmp/libjpeg-turbo \\\n && curl -sfL https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${LIBJPEG_TURBO_VERSION}.tar.gz | tar zxf - -C /tmp/libjpeg-turbo --strip-components=1 \\\n && cd /tmp/libjpeg-turbo \\\n && cmake -G\"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=/var/task . \\\n && make -j $( nproc ;) install\n#  Fetch GDAL\nRUN mkdir -p /tmp/gdal \\\n && curl -sfL https://github.com/OSGeo/gdal/archive/v${GDAL_VERSION}.tar.gz | tar zxf - -C /tmp/gdal --strip-components=2\n#  Build + install GDAL\nWORKDIR /tmp/gdal\nRUN ./configure --prefix=/var/task --datarootdir=/var/task/share/gdal --with-curl=/var/task/bin/curl-config --without-qhull --without-mrf --without-grib --without-pcraster --without-png --without-gif --with-jpeg=/var/task --without-pcidsk \\\n && make -j $( nproc ;) \\\n && make -j $( nproc ;) install\n#  Install Python deps\nWORKDIR /var/task\nCOPY requirements-lambda.txt /var/task/\nCOPY requirements.txt /var/task/\nENV PYTHONPATH=\"/var/task/.pypath\"\nRUN mkdir -p .pypath \\\n && pip install Cython \"numpy == 1.13.1\" -U -t .pypath/ \\\n && pip install -r requirements-lambda.txt -t .pypath/\nRUN find . -name *.so* -exec strip {} ;\nCOPY deps/required.txt /var/task/required.txt\nCOPY deps/prune.sh /var/task/prune.sh\nRUN /var/task/prune.sh\n","injectedSmells":[],"originalDockerfileHash":"5f92ff5387f3ee193d4dabe7a1090748","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM lambci/lambda:build-python2.7\nARG http_proxy\nARG CURL_VERSION=7.59.0\nARG GDAL_VERSION=2.3.0\nARG LIBJPEG_TURBO_VERSION=1.5.90\nARG NGHTTP2_VERSION=1.31.1\nARG PROJ_VERSION=4.9.3\n#   add gdal-config and curl to PATH for rasterio + libcurl usage\nENV PATH=\"/var/task/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nENV LD_LIBRARY_PATH=\"/lib64:/usr/lib64:/var/runtime:/var/runtime/lib:/var/task:/var/task/lib:/var/task/lib64\"\nENV LIBRARY_PATH=\"/lib64:/usr/lib64:/var/runtime:/var/runtime/lib:/var/task:/var/task/lib:/var/task/lib64\"\n#   Install deps\nRUN rpm --rebuilddb \\\n && yum install -y automake16 libpng-devel nasm\n#   Fetch and build nghttp2\nRUN mkdir /tmp/nghttp2 \\\n && curl -sfL https://github.com/nghttp2/nghttp2/releases/download/v${NGHTTP2_VERSION}/nghttp2-${NGHTTP2_VERSION}.tar.gz | tar zxf - -C /tmp/nghttp2 --strip-components=1 \\\n && cd /tmp/nghttp2 \\\n && ./configure --enable-lib-only --prefix=/var/task \\\n && make -j $( nproc ;) install\n#   Fetch and install libcurl\nRUN mkdir /tmp/curl \\\n && curl -sfL https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz | tar zxf - -C /tmp/curl --strip-components=1 \\\n && cd /tmp/curl \\\n && ./configure --prefix=/var/task --disable-manual --disable-cookies --with-nghttp2=/var/task \\\n && make -j $( nproc ;) install\n#   Fetch PROJ.4\nRUN curl -sfL http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz | tar zxf - -C /tmp\n#   Build and install PROJ.4\nWORKDIR /tmp/proj-${PROJ_VERSION}\nRUN ./configure --prefix=/var/task \\\n && make -j $( nproc ;) \\\n && make install\n#   Build and install libjpeg-turbo\nRUN mkdir -p /tmp/libjpeg-turbo \\\n && curl -sfL https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${LIBJPEG_TURBO_VERSION}.tar.gz | tar zxf - -C /tmp/libjpeg-turbo --strip-components=1 \\\n && cd /tmp/libjpeg-turbo \\\n && cmake -G\"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=/var/task . \\\n && make -j $( nproc ;) install\n#   Fetch GDAL\nRUN mkdir -p /tmp/gdal \\\n && curl -sfL https://github.com/OSGeo/gdal/archive/v${GDAL_VERSION}.tar.gz | tar zxf - -C /tmp/gdal --strip-components=2\n#   Build + install GDAL\nWORKDIR /tmp/gdal\nRUN ./configure --prefix=/var/task --datarootdir=/var/task/share/gdal --with-curl=/var/task/bin/curl-config --without-qhull --without-mrf --without-grib --without-pcraster --without-png --without-gif --with-jpeg=/var/task --without-pcidsk \\\n && make -j $( nproc ;) \\\n && make -j $( nproc ;) install\n#   Install Python deps\nWORKDIR /var/task\nCOPY requirements-lambda.txt /var/task/\nCOPY requirements.txt /var/task/\nENV PYTHONPATH=\"/var/task/.pypath\"\nRUN mkdir -p .pypath \\\n && pip install Cython \"numpy == 1.13.1\" -U -t .pypath/ \\\n && pip install -r requirements-lambda.txt -t .pypath/\nRUN find . -name *.so* -exec strip {}\nCOPY deps/required.txt /var/task/required.txt\nCOPY deps/prune.sh /var/task/prune.sh\nRUN /var/task/prune.sh\n","originalDockerfileUglifiedHash":"2499b4c5ca47a18a2710fab6ba9f26b8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c0d6ddef5ce17d8cd1dd8ad487c5194bbff23b29.dockerfile"}