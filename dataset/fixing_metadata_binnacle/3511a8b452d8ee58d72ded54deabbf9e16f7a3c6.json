{"seed":670076900,"processedDockerfileHash":"6c9befdd7b15a0abb278df60e21c0ab7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","have-a-healthcheck"],"processedDockerfile":"#\n#   Build an image with node.js and angular-cli and copy the project data into it.\n#   Runs NG Live Development Server when the container starts.\n#\n#   Exposed ports:\n#     4200   - app\n#     49152  - live reload\n#\n#   ##################### INFOS ######################\n#     - App path: /home/app/angular\n#     - User for the execution: app\n#\n#     - Quickstart App: http://localhost:4200\n#   ##################### INFOS ######################\n#\n#\n#\n#   ##################### DOCKER #####################\n#   BUILD\n#   docker build -t angular2/quickstart-primeng:1.0.0 .\n#\n#   RUN (add -d parameter to start a container in detached mode)\n#   docker run -P -it --rm -p 4200:4200 --name angular2-quickstart-primeng angular2/quickstart-primeng:1.0.0\n#\n#   STOP\n#   docker stop angular2-quickstart-primeng\n#\n#   REMOVE CONTAINER AND IMAGE\n#   docker rm -f angular2-quickstart-primeng ; docker rmi -f angular2/quickstart-primeng:1.0.0\n#\n#   LOGIN INTO CONTAINER\n#   docker exec -i -t angular2-quickstart-primeng /bin/bash\n#\n#   COPY FILE FROM CONTAINER TO HOST\n#   docker cp angular2-quickstart-primeng:/home/app/angular/package.json ./package.json\n#   ##################### DOCKER #####################\n#\n#   ********************** INIT **********************\n#   build file based on Node.js 7.5.0\nFROM node:7.5.0\nMAINTAINER \"Markus Eschenbach <mail@blogging-it.com>\"\n#   ********* DEFINE ENVIRONMENT VARIABLES ***********\nENV APP_NAME=\"\\\"angular\\\"\"\nENV APP_USER=\"\\\"app\\\"\"\nENV NPM_LOG_LEVEL=\"\\\"warn\\\"\"\nENV HOME=\"/home/$APP_USER\"\nENV APP_DIR=\"$HOME/$APP_NAME\"\n#   ****************** ADD APP USER ******************\nRUN useradd --user-group --create-home --shell /bin/false $APP_USER\n#   ************* INSTALL ANGULAR CLI ****************\nRUN npm install @angular/cli@latest $NPM_LOG_LEVEL --global --loglevel\n#   **************** INSTALL YARN ********************\nRUN npm install yarn@latest $NPM_LOG_LEVEL --global --loglevel\n#   ********** SET GLOBAL PACKAGE MANGER *************\nRUN ng set --global packageManager=yarn\n#   *************** SET WORKING DIR ******************\nWORKDIR $APP_DIR\n#   ************* COPY MANIFEST INFOS ****************\nCOPY package.json $APP_DIR/package.json\n#   *********** INSTALL DEPENDENCIES *****************\n#   RUN npm install --loglevel $NPM_LOG_LEVEL && npm cache clean\nRUN yarn \\\n && npm cache clean\n#   ************ COPY PROJECT FILES ******************\nCOPY . $APP_DIR\n#   ************** SET USER RIGHTS *******************\nRUN chown -R $APP_USER:$APP_USER $HOME/*\nUSER $APP_USER\n#   ******************** EXPOSE *********************\nEXPOSE 4200/tcp 49152/tcp\n#   ***************** START SERVER ******************\nCMD [\"ng\", \"serve\", \"--host=0.0.0.0\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\n","originalDockerfile":"#\n#  Build an image with node.js and angular-cli and copy the project data into it.\n#  Runs NG Live Development Server when the container starts.\n#\n#  Exposed ports:\n#    4200   - app\n#    49152  - live reload\n#\n#  ##################### INFOS ######################\n#    - App path: /home/app/angular\n#    - User for the execution: app\n#\n#    - Quickstart App: http://localhost:4200\n#  ##################### INFOS ######################\n#\n#\n#\n#  ##################### DOCKER #####################\n#  BUILD\n#  docker build -t angular2/quickstart-primeng:1.0.0 .\n#\n#  RUN (add -d parameter to start a container in detached mode)\n#  docker run -P -it --rm -p 4200:4200 --name angular2-quickstart-primeng angular2/quickstart-primeng:1.0.0\n#\n#  STOP\n#  docker stop angular2-quickstart-primeng\n#\n#  REMOVE CONTAINER AND IMAGE\n#  docker rm -f angular2-quickstart-primeng ; docker rmi -f angular2/quickstart-primeng:1.0.0\n#\n#  LOGIN INTO CONTAINER\n#  docker exec -i -t angular2-quickstart-primeng /bin/bash\n#\n#  COPY FILE FROM CONTAINER TO HOST\n#  docker cp angular2-quickstart-primeng:/home/app/angular/package.json ./package.json\n#  ##################### DOCKER #####################\n#\n#  ********************** INIT **********************\n#  build file based on Node.js 7.5.0\nFROM node:7.5.0\nMAINTAINER \"Markus Eschenbach <mail@blogging-it.com>\"\n#  ********* DEFINE ENVIRONMENT VARIABLES ***********\nENV APP_NAME=\"\\\"angular\\\"\"\nENV APP_USER=\"\\\"app\\\"\"\nENV NPM_LOG_LEVEL=\"\\\"warn\\\"\"\nENV HOME=\"/home/$APP_USER\"\nENV APP_DIR=\"$HOME/$APP_NAME\"\n#  ****************** ADD APP USER ******************\nRUN useradd --user-group --create-home --shell /bin/false $APP_USER\n#  ************* INSTALL ANGULAR CLI ****************\nRUN npm install @angular/cli@latest $NPM_LOG_LEVEL --global --loglevel\n#  **************** INSTALL YARN ********************\nRUN npm install yarn@latest $NPM_LOG_LEVEL --global --loglevel\n#  ********** SET GLOBAL PACKAGE MANGER *************\nRUN ng set --global packageManager=yarn\n#  *************** SET WORKING DIR ******************\nWORKDIR $APP_DIR\n#  ************* COPY MANIFEST INFOS ****************\nCOPY package.json $APP_DIR/package.json\n#  *********** INSTALL DEPENDENCIES *****************\n#  RUN npm install --loglevel $NPM_LOG_LEVEL && npm cache clean\nRUN yarn \\\n && npm cache clean\n#  ************ COPY PROJECT FILES ******************\nCOPY . $APP_DIR\n#  ************** SET USER RIGHTS *******************\nRUN chown -R $APP_USER:$APP_USER $HOME/*\nUSER $APP_USER\n#  ******************** EXPOSE *********************\nEXPOSE 4200/tcp 49152/tcp\n#  ***************** START SERVER ******************\nCMD [\"ng\", \"serve\", \"--host=0.0.0.0\"]\n","injectedSmells":[],"originalDockerfileHash":"91f0c902e4ed7d0d8881712027f08fe4","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Build an image with node.js and angular-cli and copy the project data into it.\n#   Runs NG Live Development Server when the container starts.\n#\n#   Exposed ports:\n#     4200   - app\n#     49152  - live reload\n#\n#   ##################### INFOS ######################\n#     - App path: /home/app/angular\n#     - User for the execution: app\n#\n#     - Quickstart App: http://localhost:4200\n#   ##################### INFOS ######################\n#\n#\n#\n#   ##################### DOCKER #####################\n#   BUILD\n#   docker build -t angular2/quickstart-primeng:1.0.0 .\n#\n#   RUN (add -d parameter to start a container in detached mode)\n#   docker run -P -it --rm -p 4200:4200 --name angular2-quickstart-primeng angular2/quickstart-primeng:1.0.0\n#\n#   STOP\n#   docker stop angular2-quickstart-primeng\n#\n#   REMOVE CONTAINER AND IMAGE\n#   docker rm -f angular2-quickstart-primeng ; docker rmi -f angular2/quickstart-primeng:1.0.0\n#\n#   LOGIN INTO CONTAINER\n#   docker exec -i -t angular2-quickstart-primeng /bin/bash\n#\n#   COPY FILE FROM CONTAINER TO HOST\n#   docker cp angular2-quickstart-primeng:/home/app/angular/package.json ./package.json\n#   ##################### DOCKER #####################\n#\n#   ********************** INIT **********************\n#   build file based on Node.js 7.5.0\nFROM node:7.5.0\nMAINTAINER \"Markus Eschenbach <mail@blogging-it.com>\"\n#   ********* DEFINE ENVIRONMENT VARIABLES ***********\nENV APP_NAME=\"\\\"angular\\\"\"\nENV APP_USER=\"\\\"app\\\"\"\nENV NPM_LOG_LEVEL=\"\\\"warn\\\"\"\nENV HOME=\"/home/$APP_USER\"\nENV APP_DIR=\"$HOME/$APP_NAME\"\n#   ****************** ADD APP USER ******************\nRUN useradd --user-group --create-home --shell /bin/false $APP_USER\n#   ************* INSTALL ANGULAR CLI ****************\nRUN npm install @angular/cli@latest $NPM_LOG_LEVEL --global --loglevel\n#   **************** INSTALL YARN ********************\nRUN npm install yarn@latest $NPM_LOG_LEVEL --global --loglevel\n#   ********** SET GLOBAL PACKAGE MANGER *************\nRUN ng set --global packageManager=yarn\n#   *************** SET WORKING DIR ******************\nWORKDIR $APP_DIR\n#   ************* COPY MANIFEST INFOS ****************\nCOPY package.json $APP_DIR/package.json\n#   *********** INSTALL DEPENDENCIES *****************\n#   RUN npm install --loglevel $NPM_LOG_LEVEL && npm cache clean\nRUN yarn \\\n && npm cache clean\n#   ************ COPY PROJECT FILES ******************\nCOPY . $APP_DIR\n#   ************** SET USER RIGHTS *******************\nRUN chown -R $APP_USER:$APP_USER $HOME/*\nUSER $APP_USER\n#   ******************** EXPOSE *********************\nEXPOSE 4200/tcp 49152/tcp\n#   ***************** START SERVER ******************\nCMD [\"ng\", \"serve\", \"--host=0.0.0.0\"]\n","originalDockerfileUglifiedHash":"593460ec2b09a6d0e6bbe0890dcc37a5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3511a8b452d8ee58d72ded54deabbf9e16f7a3c6.dockerfile"}