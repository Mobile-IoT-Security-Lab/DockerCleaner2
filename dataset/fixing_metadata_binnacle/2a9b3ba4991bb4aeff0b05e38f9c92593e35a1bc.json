{"seed":2445335624,"processedDockerfileHash":"2fec330d0fed1cccba1aa996abbac85b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nLABEL maintainer=\"\\\"Andrew Beers <andrew_beers@alumni.brown.edu>\\\"\"\nARG TENSORFLOW_VERSION=1.11.0\nARG TENSORFLOW_ARCH=gpu\nARG KERAS_VERSION=2.2.2\n#   Install some dependencies\n#   Install basic packages and miscellaneous dependencies\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y liblapack-dev libopenblas-dev libzmq3-dev python3 python3-dev python3-pip python3-setuptools python3-tk\n#   Install Pillow (PIL) dependencies\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y libfreetype6-dev libjpeg-dev liblcms2-dev libopenjpeg-dev libpng12-dev libtiff5-dev libwebp-dev zlib1g-dev\n#   Install support functions\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y curl git wget cmake\n#   Cleanup Installs\nRUN apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install pip\nRUN pip3 install --upgrade setuptools pip\n#   Add SNI support to Python\nRUN pip3 --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n#   Install other useful Python packages using pip\nRUN pip3 --no-cache-dir install --upgrade ipython \\\n && pip3 --no-cache-dir install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq \\\n && python3 -m ipykernel.kernelspec\n#   Install TensorFlow\n#   For specific installations -- TODO, peg a version of Tensorflow.\n#   RUN pip --no-cache-dir install \\\n#   https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_${TENSORFLOW_ARCH}-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl\n#   Generic.\nRUN pip3 --no-cache-dir install tensorflow-gpu\n#   Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@${KERAS_VERSION} --no-cache-dir\n#   Install Additional Packages for DeepNeuro\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends graphviz -y )\nRUN pip3 --no-cache-dir install pydot\nRUN pip3 --no-cache-dir install pandas --upgrade\nRUN pip3 --no-cache-dir install numexpr --upgrade\nRUN pip3 --no-cache-dir install nibabel pydicom lycon tqdm pynrrd tables imageio matplotlib\n#   Install Slicer\nRUN SLICER_URL=\"http://download.slicer.org/bitstream/561384\" \\\n && curl -v -s -L $SLICER_URL | tar xz -C /tmp \\\n && mv /tmp/Slicer* /opt/slicer\n#   Install ANTS\nWORKDIR /home\nRUN wget \"https://github.com/stnava/ANTs/releases/download/v2.1.0/Linux_Ubuntu14.04.tar.bz2\" \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes bzip2 \\\n && tar -C /usr/local -xjf Linux_Ubuntu14.04.tar.bz2 \\\n && rm Linux_Ubuntu14.04.tar.bz2\n#   Python 2.7\nWORKDIR /usr/src\nENV PYTHON_VERSION=\"2.7.10\"\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xvzf Python-${PYTHON_VERSION}.tgz \\\n && cd Python-${PYTHON_VERSION} \\\n && ./configure \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf Python-${PYTHON_VERSION}*\n#   Build and install dcmqi\nWORKDIR /usr/src\nENV PYTHON_VERSION=\"2.7.10\"\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xvzf Python-${PYTHON_VERSION}.tgz \\\n && cd Python-${PYTHON_VERSION} \\\n && ./configure \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf Python-${PYTHON_VERSION}*\nWORKDIR /usr/src\nRUN git clone https://github.com/QIICR/dcmqi.git \\\n && mkdir dcmqi-superbuild \\\n && cd dcmqi-superbuild \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr ../dcmqi \\\n && make -j$( grep -c processor /proc/cpuinfo ;)\n#   Environmental Variables\nENV PATH=\"\\\"$PATH:/opt/slicer\\\"\"\nENV PATH=\"\\\"$PATH:/usr/local/ANTs.2.1.0.Debian-Ubuntu_X64\\\"\"\n#   Install DeepNeuro. Scikit-image has installation problems with EasyInstall and setup.py\nRUN git clone https://github.com/QTIM-Lab/DeepNeuro /home/DeepNeuro\nWORKDIR /home/DeepNeuro\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nLABEL maintainer=\"\\\"Andrew Beers <andrew_beers@alumni.brown.edu>\\\"\"\nARG TENSORFLOW_VERSION=1.11.0\nARG TENSORFLOW_ARCH=gpu\nARG KERAS_VERSION=2.2.2\n#  Install some dependencies\n#  Install basic packages and miscellaneous dependencies\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y liblapack-dev libopenblas-dev libzmq3-dev python3 python3-dev python3-pip python3-setuptools python3-tk\n#  Install Pillow (PIL) dependencies\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y libfreetype6-dev libjpeg-dev liblcms2-dev libopenjpeg-dev libpng12-dev libtiff5-dev libwebp-dev zlib1g-dev\n#  Install support functions\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y curl git wget cmake\n#  Cleanup Installs\nRUN apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#  Install pip\nRUN pip3 install --upgrade setuptools pip\n#  Add SNI support to Python\nRUN pip3 --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n#  Install other useful Python packages using pip\nRUN pip3 --no-cache-dir install --upgrade ipython \\\n && pip3 --no-cache-dir install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq \\\n && python3 -m ipykernel.kernelspec\n#  Install TensorFlow\n#  For specific installations -- TODO, peg a version of Tensorflow.\n#  RUN pip --no-cache-dir install \\\n#  https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_${TENSORFLOW_ARCH}-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl\n#  Generic.\nRUN pip3 --no-cache-dir install tensorflow-gpu\n#  Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@${KERAS_VERSION} --no-cache-dir\n#  Install Additional Packages for DeepNeuro\nRUN apt-get update -y\nRUN apt-get install graphviz -y\nRUN pip3 --no-cache-dir install pydot\nRUN pip3 --no-cache-dir install pandas --upgrade\nRUN pip3 --no-cache-dir install numexpr --upgrade\nRUN pip3 --no-cache-dir install nibabel pydicom lycon tqdm pynrrd tables imageio matplotlib\n#  Install Slicer\nRUN SLICER_URL=\"http://download.slicer.org/bitstream/561384\" \\\n && curl -v -s -L $SLICER_URL | tar xz -C /tmp \\\n && mv /tmp/Slicer* /opt/slicer\n#  Install ANTS\nWORKDIR /home\nRUN wget \"https://github.com/stnava/ANTs/releases/download/v2.1.0/Linux_Ubuntu14.04.tar.bz2\" \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes bzip2 \\\n && tar -C /usr/local -xjf Linux_Ubuntu14.04.tar.bz2 \\\n && rm Linux_Ubuntu14.04.tar.bz2\n#  Python 2.7\nWORKDIR /usr/src\nENV PYTHON_VERSION=\"2.7.10\"\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xvzf Python-${PYTHON_VERSION}.tgz \\\n && cd Python-${PYTHON_VERSION} \\\n && ./configure \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf Python-${PYTHON_VERSION}*\n#  Build and install dcmqi\nWORKDIR /usr/src\nENV PYTHON_VERSION=\"2.7.10\"\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xvzf Python-${PYTHON_VERSION}.tgz \\\n && cd Python-${PYTHON_VERSION} \\\n && ./configure \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf Python-${PYTHON_VERSION}*\nWORKDIR /usr/src\nRUN git clone https://github.com/QIICR/dcmqi.git \\\n && mkdir dcmqi-superbuild \\\n && cd dcmqi-superbuild \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr ../dcmqi \\\n && make -j$( grep -c processor /proc/cpuinfo ;)\n#  Environmental Variables\nENV PATH=\"\\\"$PATH:/opt/slicer\\\"\"\nENV PATH=\"\\\"$PATH:/usr/local/ANTs.2.1.0.Debian-Ubuntu_X64\\\"\"\n#  Install DeepNeuro. Scikit-image has installation problems with EasyInstall and setup.py\nRUN git clone https://github.com/QTIM-Lab/DeepNeuro /home/DeepNeuro\nWORKDIR /home/DeepNeuro\n","injectedSmells":[],"originalDockerfileHash":"6833400d9f62ec43843b90c191c0dc48","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nLABEL maintainer=\"\\\"Andrew Beers <andrew_beers@alumni.brown.edu>\\\"\"\nARG TENSORFLOW_VERSION=1.11.0\nARG TENSORFLOW_ARCH=gpu\nARG KERAS_VERSION=2.2.2\n#   Install some dependencies\n#   Install basic packages and miscellaneous dependencies\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y liblapack-dev libopenblas-dev libzmq3-dev python3 python3-dev python3-pip python3-setuptools python3-tk\n#   Install Pillow (PIL) dependencies\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y libfreetype6-dev libjpeg-dev liblcms2-dev libopenjpeg-dev libpng12-dev libtiff5-dev libwebp-dev zlib1g-dev\n#   Install support functions\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y curl git wget cmake\n#   Cleanup Installs\nRUN apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install pip\nRUN pip3 install --upgrade setuptools pip\n#   Add SNI support to Python\nRUN pip3 --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n#   Install other useful Python packages using pip\nRUN pip3 --no-cache-dir install --upgrade ipython \\\n && pip3 --no-cache-dir install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq \\\n && python3 -m ipykernel.kernelspec\n#   Install TensorFlow\n#   For specific installations -- TODO, peg a version of Tensorflow.\n#   RUN pip --no-cache-dir install \\\n#   https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_${TENSORFLOW_ARCH}-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl\n#   Generic.\nRUN pip3 --no-cache-dir install tensorflow-gpu\n#   Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@${KERAS_VERSION} --no-cache-dir\n#   Install Additional Packages for DeepNeuro\nRUN apt-get update -y\nRUN apt-get install graphviz -y\nRUN pip3 --no-cache-dir install pydot\nRUN pip3 --no-cache-dir install pandas --upgrade\nRUN pip3 --no-cache-dir install numexpr --upgrade\nRUN pip3 --no-cache-dir install nibabel pydicom lycon tqdm pynrrd tables imageio matplotlib\n#   Install Slicer\nRUN SLICER_URL=\"http://download.slicer.org/bitstream/561384\" \\\n && curl -v -s -L $SLICER_URL | tar xz -C /tmp \\\n && mv /tmp/Slicer* /opt/slicer\n#   Install ANTS\nWORKDIR /home\nRUN wget \"https://github.com/stnava/ANTs/releases/download/v2.1.0/Linux_Ubuntu14.04.tar.bz2\" \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes bzip2 \\\n && tar -C /usr/local -xjf Linux_Ubuntu14.04.tar.bz2 \\\n && rm Linux_Ubuntu14.04.tar.bz2\n#   Python 2.7\nWORKDIR /usr/src\nENV PYTHON_VERSION=\"2.7.10\"\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xvzf Python-${PYTHON_VERSION}.tgz \\\n && cd Python-${PYTHON_VERSION} \\\n && ./configure \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf Python-${PYTHON_VERSION}*\n#   Build and install dcmqi\nWORKDIR /usr/src\nENV PYTHON_VERSION=\"2.7.10\"\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xvzf Python-${PYTHON_VERSION}.tgz \\\n && cd Python-${PYTHON_VERSION} \\\n && ./configure \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf Python-${PYTHON_VERSION}*\nWORKDIR /usr/src\nRUN git clone https://github.com/QIICR/dcmqi.git \\\n && mkdir dcmqi-superbuild \\\n && cd dcmqi-superbuild \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr ../dcmqi \\\n && make -j$( grep -c processor /proc/cpuinfo ;)\n#   Environmental Variables\nENV PATH=\"\\\"$PATH:/opt/slicer\\\"\"\nENV PATH=\"\\\"$PATH:/usr/local/ANTs.2.1.0.Debian-Ubuntu_X64\\\"\"\n#   Install DeepNeuro. Scikit-image has installation problems with EasyInstall and setup.py\nRUN git clone https://github.com/QTIM-Lab/DeepNeuro /home/DeepNeuro\nWORKDIR /home/DeepNeuro\n","originalDockerfileUglifiedHash":"a2b1a92c952c198a3b47677dfc1777be","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2a9b3ba4991bb4aeff0b05e38f9c92593e35a1bc.dockerfile"}