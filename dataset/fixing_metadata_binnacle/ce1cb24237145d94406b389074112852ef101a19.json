{"seed":3487832639,"processedDockerfileHash":"7c9a83250881168d2454b6a8048dc956","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   upsteam https://github.com/mesosphere/dcos-jenkins-service\nFROM jenkins/jenkins:lts-alpine\nMAINTAINER 若虚 <slpcat@qq.com>\nUSER root\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash tzdata vim tini su-exec gzip tar wget curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n#   Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.27-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add wget ca-certificates --no-cache --virtual=.build-dependencies \\\n && wget \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\" -O \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" --no-cache \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nWORKDIR /tmp\n#   Environment variables used throughout this Dockerfile\n#\n#   $JENKINS_HOME     will be the final destination that Jenkins will use as its\n#                     data directory. This cannot be populated before Marathon\n#                     has a chance to create the host-container volume mapping.\n#\nENV JENKINS_FOLDER=\"/usr/share/jenkins\"\n#   Build Args\nARG BLUEOCEAN_VERSION=latest\nARG JENKINS_STAGING=/usr/share/jenkins/ref/\nARG CURL_RETRY=20\nARG CURL_RETRY_MAX_TIME=900\n#   install dependencies\nRUN apk update \\\n && apk add python jq git bzip2 openssh-client unzip zip\n#   Override the default property for DNS lookup caching\nRUN echo 'networkaddress.cache.ttl=60' >> ${JAVA_HOME}/jre/lib/security/java.security\nRUN mkdir -p \"$JENKINS_HOME\" \"${JENKINS_FOLDER}/war\"\n#   jenkins setup\nCOPY conf/jenkins/config.xml \"${JENKINS_STAGING}/config.xml\"\n#  COPY conf/jenkins/jenkins.model.JenkinsLocationConfiguration.xml \"${JENKINS_STAGING}/jenkins.model.JenkinsLocationConfiguration.xml\"\n#  COPY conf/jenkins/nodeMonitors.xml \"${JENKINS_STAGING}/nodeMonitors.xml\"\n#  COPY conf/jenkins/hudson.model.UpdateCenter.xml \"${JENKINS_HOME}/hudson.model.UpdateCenter.xml\"\n#   lets configure Jenkins with some defaults\n#  COPY config/*.xml /usr/share/jenkins/ref/\n#   add plugins\nRUN /usr/local/bin/install-plugins.sh blueocean-autofavorite:latest blueocean-commons:${BLUEOCEAN_VERSION} blueocean-config:${BLUEOCEAN_VERSION} blueocean-dashboard:${BLUEOCEAN_VERSION} blueocean-display-url:latest blueocean-events:${BLUEOCEAN_VERSION} blueocean-git-pipeline:${BLUEOCEAN_VERSION} blueocean-github-pipeline:${BLUEOCEAN_VERSION} blueocean-i18n:${BLUEOCEAN_VERSION} blueocean-jwt:${BLUEOCEAN_VERSION} blueocean-personalization:${BLUEOCEAN_VERSION} blueocean-pipeline-api-impl:${BLUEOCEAN_VERSION} blueocean-pipeline-editor:${BLUEOCEAN_VERSION} blueocean-pipeline-scm-api:${BLUEOCEAN_VERSION} blueocean-rest-impl:${BLUEOCEAN_VERSION} blueocean-rest:${BLUEOCEAN_VERSION} blueocean-web:${BLUEOCEAN_VERSION} blueocean:${BLUEOCEAN_VERSION} ace-editor:latest android-emulator:latest android-lint:latest ant:latest analysis-core:latest ansible:latest ansicolor:latest antisamy-markup-formatter:latest artifactory:latest audit-trail:latest authentication-tokens:latest azure-credentials:latest azure-vm-agents:latest bouncycastle-api:latest branch-api:latest build-failure-analyzer:latest build-name-setter:latest build-pipeline-plugin:latest build-timeout:latest build-token-root:latest cloudbees-folder:latest credentials:latest credentials-binding:latest cloverphp:latest conditional-buildstep:latest config-file-provider:latest copyartifact:latest cvs:latest dashboard-view:latest delivery-pipeline-plugin:latest description-setter:latest dingding-notifications:latest display-url-api:latest docker-commons:latest docker-build-publish:latest docker-workflow:latest durable-task:latest ec2:latest email-ext:latest embeddable-build-status:latest external-monitor-job:latest favorite:latest ghprb:latest git:latest git-client:latest git-changelog:latest git-server:latest github:latest github-api:latest github-branch-source:latest github-issues:latest github-oauth:latest github-organization-folder:latest github-pullrequest:latest github-pr-coverage-status:latest gitlab:latest gitlab-hook:latest gitlab-merge-request-jenkins:latest gitlab-oauth:latest gitlab-plugin:latest google-login:latest gradle:latest gravatar:latest greenballs:latest handlebars:latest icon-shim:latest ivy:latest jackson2-api:latest javadoc:latest jenkins-multijob-plugin:latest job-dsl:latest jobConfigHistory:latest jquery:latest junit:latest kerberos-sso:latest kpp-management-plugin:latest kubernetes:latest kubernetes-ci:latest kubernetes-cd:latest kubernetes-pipeline-steps:latest ldap:latest mailer:latest mapdb-api:latest marathon:latest matrix-auth:latest matrix-project:latest maven-plugin:latest mercurial:latest mesos:latest metrics:latest momentjs:latest monitoring:latest msbuild:latest nant:latest node-iterator-api:latest oauth-credentials:latest oic-auth:latest openid:latest openshift-login:latest openshift-pipeline:latest pam-auth:latest parameterized-trigger:latest performance:latest pipeline-build-step:latest pipeline-github-lib:latest pipeline-githubnotify-step:latest pipeline-graph-analysis:latest pipeline-input-step:latest pipeline-milestone-step:latest pipeline-model-api:latest pipeline-model-definition:latest pipeline-model-extensions:latest pipeline-rest-api:latest pipeline-stage-step:latest pipeline-stage-tags-metadata:latest pipeline-stage-view:latest pipeline-utility-steps:latest plain-credentials:latest postbuildscript:latest publish-over-cifs:latest publish-over-ftp:latest publish-over-ssh:latest pubsub-light:latest puppet:latest rebuild:latest resource-disposer:latest role-strategy:latest run-condition:latest s3:latest saferestart:latest saml:latest saltstack:latest scm-api:latest script-security:latest sse-gateway:latest ssh-agent:latest ssh-credentials:latest ssh-slaves:latest slave-setup:latest structs:latest subversion:latest timestamper:latest token-macro:latest translation:latest uno-choice:latest url-auth-sso:latest variant:latest view-job-filters:latest windows-slaves:latest workflow-aggregator:latest workflow-api:latest workflow-basic-steps:latest workflow-cps:latest workflow-cps-global-lib:latest workflow-durable-task-step:latest workflow-job:latest workflow-multibranch:latest workflow-scm-step:latest workflow-step-api:latest workflow-support:latest ws-cleanup:latest xcode-plugin:latest\n#   copy custom built plugins\nCOPY plugins/*.hpi /usr/share/jenkins/ref/plugins/\n#   so we can use jenkins cli\n#  COPY config/jenkins.properties /usr/share/jenkins/ref/\n#   disable first-run wizard\nRUN echo 2.0 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state\n#   remove executors in master\nCOPY src/main/docker/master-executors.groovy /usr/share/jenkins/ref/init.groovy.d/\n#   ENV JAVA_OPTS=\"-Djava.util.logging.config.file=/var/jenkins_home/log.properties\"\nENV JAVA_OPTS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -XshowSettings:vm  -Djenkins.install.runSetupWizard=false -Dhudson.udp=-1 -Djava.awt.headless=true -Dhudson.DNSMultiCast.disabled=true\"\nENV JENKINS_OPTS=\"--webroot=${JENKINS_FOLDER}/war --httpListenAddress=0.0.0.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  upsteam https://github.com/mesosphere/dcos-jenkins-service\nFROM jenkins/jenkins:lts-alpine\nMAINTAINER 若虚 <slpcat@qq.com>\nUSER root\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#  Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash tzdata vim tini su-exec gzip tar wget curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n#  Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.27-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add --no-cache --virtual=.build-dependencies wget ca-certificates \\\n && wget \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\" -O \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add --no-cache \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nWORKDIR /tmp\n#  Environment variables used throughout this Dockerfile\n#\n#  $JENKINS_HOME     will be the final destination that Jenkins will use as its\n#                    data directory. This cannot be populated before Marathon\n#                    has a chance to create the host-container volume mapping.\n#\nENV JENKINS_FOLDER=\"/usr/share/jenkins\"\n#  Build Args\nARG BLUEOCEAN_VERSION=latest\nARG JENKINS_STAGING=/usr/share/jenkins/ref/\nARG CURL_RETRY=20\nARG CURL_RETRY_MAX_TIME=900\n#  install dependencies\nRUN apk update \\\n && apk add python jq git bzip2 openssh-client unzip zip\n#  Override the default property for DNS lookup caching\nRUN echo 'networkaddress.cache.ttl=60' >> ${JAVA_HOME}/jre/lib/security/java.security\nRUN mkdir -p \"$JENKINS_HOME\" \"${JENKINS_FOLDER}/war\"\n#  jenkins setup\nCOPY conf/jenkins/config.xml \"${JENKINS_STAGING}/config.xml\"\n# COPY conf/jenkins/jenkins.model.JenkinsLocationConfiguration.xml \"${JENKINS_STAGING}/jenkins.model.JenkinsLocationConfiguration.xml\"\n# COPY conf/jenkins/nodeMonitors.xml \"${JENKINS_STAGING}/nodeMonitors.xml\"\n# COPY conf/jenkins/hudson.model.UpdateCenter.xml \"${JENKINS_HOME}/hudson.model.UpdateCenter.xml\"\n#  lets configure Jenkins with some defaults\n# COPY config/*.xml /usr/share/jenkins/ref/\n#  add plugins\nRUN /usr/local/bin/install-plugins.sh blueocean-autofavorite:latest blueocean-commons:${BLUEOCEAN_VERSION} blueocean-config:${BLUEOCEAN_VERSION} blueocean-dashboard:${BLUEOCEAN_VERSION} blueocean-display-url:latest blueocean-events:${BLUEOCEAN_VERSION} blueocean-git-pipeline:${BLUEOCEAN_VERSION} blueocean-github-pipeline:${BLUEOCEAN_VERSION} blueocean-i18n:${BLUEOCEAN_VERSION} blueocean-jwt:${BLUEOCEAN_VERSION} blueocean-personalization:${BLUEOCEAN_VERSION} blueocean-pipeline-api-impl:${BLUEOCEAN_VERSION} blueocean-pipeline-editor:${BLUEOCEAN_VERSION} blueocean-pipeline-scm-api:${BLUEOCEAN_VERSION} blueocean-rest-impl:${BLUEOCEAN_VERSION} blueocean-rest:${BLUEOCEAN_VERSION} blueocean-web:${BLUEOCEAN_VERSION} blueocean:${BLUEOCEAN_VERSION} ace-editor:latest android-emulator:latest android-lint:latest ant:latest analysis-core:latest ansible:latest ansicolor:latest antisamy-markup-formatter:latest artifactory:latest audit-trail:latest authentication-tokens:latest azure-credentials:latest azure-vm-agents:latest bouncycastle-api:latest branch-api:latest build-failure-analyzer:latest build-name-setter:latest build-pipeline-plugin:latest build-timeout:latest build-token-root:latest cloudbees-folder:latest credentials:latest credentials-binding:latest cloverphp:latest conditional-buildstep:latest config-file-provider:latest copyartifact:latest cvs:latest dashboard-view:latest delivery-pipeline-plugin:latest description-setter:latest dingding-notifications:latest display-url-api:latest docker-commons:latest docker-build-publish:latest docker-workflow:latest durable-task:latest ec2:latest email-ext:latest embeddable-build-status:latest external-monitor-job:latest favorite:latest ghprb:latest git:latest git-client:latest git-changelog:latest git-server:latest github:latest github-api:latest github-branch-source:latest github-issues:latest github-oauth:latest github-organization-folder:latest github-pullrequest:latest github-pr-coverage-status:latest gitlab:latest gitlab-hook:latest gitlab-merge-request-jenkins:latest gitlab-oauth:latest gitlab-plugin:latest google-login:latest gradle:latest gravatar:latest greenballs:latest handlebars:latest icon-shim:latest ivy:latest jackson2-api:latest javadoc:latest jenkins-multijob-plugin:latest job-dsl:latest jobConfigHistory:latest jquery:latest junit:latest kerberos-sso:latest kpp-management-plugin:latest kubernetes:latest kubernetes-ci:latest kubernetes-cd:latest kubernetes-pipeline-steps:latest ldap:latest mailer:latest mapdb-api:latest marathon:latest matrix-auth:latest matrix-project:latest maven-plugin:latest mercurial:latest mesos:latest metrics:latest momentjs:latest monitoring:latest msbuild:latest nant:latest node-iterator-api:latest oauth-credentials:latest oic-auth:latest openid:latest openshift-login:latest openshift-pipeline:latest pam-auth:latest parameterized-trigger:latest performance:latest pipeline-build-step:latest pipeline-github-lib:latest pipeline-githubnotify-step:latest pipeline-graph-analysis:latest pipeline-input-step:latest pipeline-milestone-step:latest pipeline-model-api:latest pipeline-model-definition:latest pipeline-model-extensions:latest pipeline-rest-api:latest pipeline-stage-step:latest pipeline-stage-tags-metadata:latest pipeline-stage-view:latest pipeline-utility-steps:latest plain-credentials:latest postbuildscript:latest publish-over-cifs:latest publish-over-ftp:latest publish-over-ssh:latest pubsub-light:latest puppet:latest rebuild:latest resource-disposer:latest role-strategy:latest run-condition:latest s3:latest saferestart:latest saml:latest saltstack:latest scm-api:latest script-security:latest sse-gateway:latest ssh-agent:latest ssh-credentials:latest ssh-slaves:latest slave-setup:latest structs:latest subversion:latest timestamper:latest token-macro:latest translation:latest uno-choice:latest url-auth-sso:latest variant:latest view-job-filters:latest windows-slaves:latest workflow-aggregator:latest workflow-api:latest workflow-basic-steps:latest workflow-cps:latest workflow-cps-global-lib:latest workflow-durable-task-step:latest workflow-job:latest workflow-multibranch:latest workflow-scm-step:latest workflow-step-api:latest workflow-support:latest ws-cleanup:latest xcode-plugin:latest\n#  copy custom built plugins\nCOPY plugins/*.hpi /usr/share/jenkins/ref/plugins/\n#  so we can use jenkins cli\n# COPY config/jenkins.properties /usr/share/jenkins/ref/\n#  disable first-run wizard\nRUN echo 2.0 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state\n#  remove executors in master\nCOPY src/main/docker/master-executors.groovy /usr/share/jenkins/ref/init.groovy.d/\n#  ENV JAVA_OPTS=\"-Djava.util.logging.config.file=/var/jenkins_home/log.properties\"\nENV JAVA_OPTS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -XshowSettings:vm  -Djenkins.install.runSetupWizard=false -Dhudson.udp=-1 -Djava.awt.headless=true -Dhudson.DNSMultiCast.disabled=true\"\nENV JENKINS_OPTS=\"--webroot=${JENKINS_FOLDER}/war --httpListenAddress=0.0.0.0\"\n","injectedSmells":[],"originalDockerfileHash":"ca8b86d6740139502af1c8e0cfe41a3f","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   upsteam https://github.com/mesosphere/dcos-jenkins-service\nFROM jenkins/jenkins:lts-alpine\nMAINTAINER 若虚 <slpcat@qq.com>\nUSER root\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash tzdata vim tini su-exec gzip tar wget curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n#   Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.27-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add --no-cache --virtual=.build-dependencies wget ca-certificates \\\n && wget \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\" -O \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add --no-cache \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nWORKDIR /tmp\n#   Environment variables used throughout this Dockerfile\n#\n#   $JENKINS_HOME     will be the final destination that Jenkins will use as its\n#                     data directory. This cannot be populated before Marathon\n#                     has a chance to create the host-container volume mapping.\n#\nENV JENKINS_FOLDER=\"/usr/share/jenkins\"\n#   Build Args\nARG BLUEOCEAN_VERSION=latest\nARG JENKINS_STAGING=/usr/share/jenkins/ref/\nARG CURL_RETRY=20\nARG CURL_RETRY_MAX_TIME=900\n#   install dependencies\nRUN apk update \\\n && apk add python jq git bzip2 openssh-client unzip zip\n#   Override the default property for DNS lookup caching\nRUN echo 'networkaddress.cache.ttl=60' >> ${JAVA_HOME}/jre/lib/security/java.security\nRUN mkdir -p \"$JENKINS_HOME\" \"${JENKINS_FOLDER}/war\"\n#   jenkins setup\nCOPY conf/jenkins/config.xml \"${JENKINS_STAGING}/config.xml\"\n#  COPY conf/jenkins/jenkins.model.JenkinsLocationConfiguration.xml \"${JENKINS_STAGING}/jenkins.model.JenkinsLocationConfiguration.xml\"\n#  COPY conf/jenkins/nodeMonitors.xml \"${JENKINS_STAGING}/nodeMonitors.xml\"\n#  COPY conf/jenkins/hudson.model.UpdateCenter.xml \"${JENKINS_HOME}/hudson.model.UpdateCenter.xml\"\n#   lets configure Jenkins with some defaults\n#  COPY config/*.xml /usr/share/jenkins/ref/\n#   add plugins\nRUN /usr/local/bin/install-plugins.sh blueocean-autofavorite:latest blueocean-commons:${BLUEOCEAN_VERSION} blueocean-config:${BLUEOCEAN_VERSION} blueocean-dashboard:${BLUEOCEAN_VERSION} blueocean-display-url:latest blueocean-events:${BLUEOCEAN_VERSION} blueocean-git-pipeline:${BLUEOCEAN_VERSION} blueocean-github-pipeline:${BLUEOCEAN_VERSION} blueocean-i18n:${BLUEOCEAN_VERSION} blueocean-jwt:${BLUEOCEAN_VERSION} blueocean-personalization:${BLUEOCEAN_VERSION} blueocean-pipeline-api-impl:${BLUEOCEAN_VERSION} blueocean-pipeline-editor:${BLUEOCEAN_VERSION} blueocean-pipeline-scm-api:${BLUEOCEAN_VERSION} blueocean-rest-impl:${BLUEOCEAN_VERSION} blueocean-rest:${BLUEOCEAN_VERSION} blueocean-web:${BLUEOCEAN_VERSION} blueocean:${BLUEOCEAN_VERSION} ace-editor:latest android-emulator:latest android-lint:latest ant:latest analysis-core:latest ansible:latest ansicolor:latest antisamy-markup-formatter:latest artifactory:latest audit-trail:latest authentication-tokens:latest azure-credentials:latest azure-vm-agents:latest bouncycastle-api:latest branch-api:latest build-failure-analyzer:latest build-name-setter:latest build-pipeline-plugin:latest build-timeout:latest build-token-root:latest cloudbees-folder:latest credentials:latest credentials-binding:latest cloverphp:latest conditional-buildstep:latest config-file-provider:latest copyartifact:latest cvs:latest dashboard-view:latest delivery-pipeline-plugin:latest description-setter:latest dingding-notifications:latest display-url-api:latest docker-commons:latest docker-build-publish:latest docker-workflow:latest durable-task:latest ec2:latest email-ext:latest embeddable-build-status:latest external-monitor-job:latest favorite:latest ghprb:latest git:latest git-client:latest git-changelog:latest git-server:latest github:latest github-api:latest github-branch-source:latest github-issues:latest github-oauth:latest github-organization-folder:latest github-pullrequest:latest github-pr-coverage-status:latest gitlab:latest gitlab-hook:latest gitlab-merge-request-jenkins:latest gitlab-oauth:latest gitlab-plugin:latest google-login:latest gradle:latest gravatar:latest greenballs:latest handlebars:latest icon-shim:latest ivy:latest jackson2-api:latest javadoc:latest jenkins-multijob-plugin:latest job-dsl:latest jobConfigHistory:latest jquery:latest junit:latest kerberos-sso:latest kpp-management-plugin:latest kubernetes:latest kubernetes-ci:latest kubernetes-cd:latest kubernetes-pipeline-steps:latest ldap:latest mailer:latest mapdb-api:latest marathon:latest matrix-auth:latest matrix-project:latest maven-plugin:latest mercurial:latest mesos:latest metrics:latest momentjs:latest monitoring:latest msbuild:latest nant:latest node-iterator-api:latest oauth-credentials:latest oic-auth:latest openid:latest openshift-login:latest openshift-pipeline:latest pam-auth:latest parameterized-trigger:latest performance:latest pipeline-build-step:latest pipeline-github-lib:latest pipeline-githubnotify-step:latest pipeline-graph-analysis:latest pipeline-input-step:latest pipeline-milestone-step:latest pipeline-model-api:latest pipeline-model-definition:latest pipeline-model-extensions:latest pipeline-rest-api:latest pipeline-stage-step:latest pipeline-stage-tags-metadata:latest pipeline-stage-view:latest pipeline-utility-steps:latest plain-credentials:latest postbuildscript:latest publish-over-cifs:latest publish-over-ftp:latest publish-over-ssh:latest pubsub-light:latest puppet:latest rebuild:latest resource-disposer:latest role-strategy:latest run-condition:latest s3:latest saferestart:latest saml:latest saltstack:latest scm-api:latest script-security:latest sse-gateway:latest ssh-agent:latest ssh-credentials:latest ssh-slaves:latest slave-setup:latest structs:latest subversion:latest timestamper:latest token-macro:latest translation:latest uno-choice:latest url-auth-sso:latest variant:latest view-job-filters:latest windows-slaves:latest workflow-aggregator:latest workflow-api:latest workflow-basic-steps:latest workflow-cps:latest workflow-cps-global-lib:latest workflow-durable-task-step:latest workflow-job:latest workflow-multibranch:latest workflow-scm-step:latest workflow-step-api:latest workflow-support:latest ws-cleanup:latest xcode-plugin:latest\n#   copy custom built plugins\nCOPY plugins/*.hpi /usr/share/jenkins/ref/plugins/\n#   so we can use jenkins cli\n#  COPY config/jenkins.properties /usr/share/jenkins/ref/\n#   disable first-run wizard\nRUN echo 2.0 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state\n#   remove executors in master\nCOPY src/main/docker/master-executors.groovy /usr/share/jenkins/ref/init.groovy.d/\n#   ENV JAVA_OPTS=\"-Djava.util.logging.config.file=/var/jenkins_home/log.properties\"\nENV JAVA_OPTS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -XshowSettings:vm  -Djenkins.install.runSetupWizard=false -Dhudson.udp=-1 -Djava.awt.headless=true -Dhudson.DNSMultiCast.disabled=true\"\nENV JENKINS_OPTS=\"--webroot=${JENKINS_FOLDER}/war --httpListenAddress=0.0.0.0\"\n","originalDockerfileUglifiedHash":"a34dbe141057c8eb42d1e3ae5659ab6e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ce1cb24237145d94406b389074112852ef101a19.dockerfile"}