{"seed":3310024232,"processedDockerfileHash":"4902cdd235b80a4caacf2d9b4261657a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch-slim\n#   interactive mode\nENV TERM=\"xterm\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   additional apt settings\nRUN echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries\n#   building environments\nRUN set -ex ; apt-get update \\\n && apt-get install --no-install-recommends apache2 curl default-libmysqlclient-dev libapache2-mod-wsgi geoip-database libldap2-dev libsasl2-dev python python-pip python-setuptools python-virtualenv rsyslog python-pip python-dev libssl-dev libyajl2 swig sudo wget -y \\\n && apt-get clean\n#   adding the standard user with a blank password\nRUN useradd -ms /bin/bash -p '' dataman\nWORKDIR /home/dataman\n#   cloning the repository\nCOPY . /home/dataman/n6\nCOPY docker/web/test_data/test-n6-api.conf /etc/apache2/sites-available/n6-api.conf\nCOPY docker/web/test_data/test-n6-api.wsgi /home/dataman/n6/N6RestApi/n6-api.wsgi\nCOPY docker/web/test_data/test-production.ini /home/dataman/n6/N6RestApi/production.ini\n#   permissions\nRUN chown -R dataman:dataman /home/dataman/n6 ; usermod -a -G dataman www-data ; usermod -aG sudo dataman ; chown -R www-data:www-data /etc/apache2/sites-available/n6-api.conf ; chown -R dataman:dataman /home/dataman/n6/N6RestApi/n6-api.wsgi ; chown -R dataman:dataman /home/dataman/n6/N6RestApi/production.ini ; echo 'ServerName localhost' >> /etc/apache2/apache2.conf\n#   speed up building images\nWORKDIR /home/dataman/n6\nRUN pip install -r N6Lib/requirements ; pip install -r N6SDK/requirements\n#   installing n6 componenets\nUSER dataman\nRUN sudo ./do_setup.py N6Core N6Lib N6SDK N6RestApi N6Portal N6AdminPanel ; yes | n6config\n#   n6adminpanel and n6portal\nCOPY docker/web/test_data/test-n6-adminpanel.conf /etc/apache2/sites-available/n6-adminpanel.conf\nCOPY docker/web/test_data/test-config.json N6Portal/gui/src/config/config.json\nUSER root\nRUN set -ex ; curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - ; apt-get install --no-install-recommends nodejs -y \\\n && apt-get clean\nWORKDIR /home/dataman/n6/N6Portal/gui\nRUN npm install \\\n && npm run build\nCOPY docker/web/test_data/test-n6-portal.wsgi /home/dataman/n6/N6Portal/n6-portal.wsgi\nCOPY docker/web/test_data/test-portal-production.ini /home/dataman/n6/N6Portal/production.ini\nCOPY docker/web/test_data/test-n6-portal-api.conf /etc/apache2/sites-available/n6-portal-api.conf\nRUN chown -R www-data:www-data /etc/apache2/sites-available/n6-portal-api.conf\n#   default website redirect to ssl connetions\nCOPY docker/web/test_data/test-000-default.conf /etc/apache2/sites-available/000-default.conf\n#   generate new app_secret_key\nCOPY docker/web/test_data/test-admin_panel.conf /etc/n6/admin_panel.conf\nRUN app_secret_key=`python -c 'import os, base64; print(base64.b64encode(os.urandom(16)))' ` ; sed -i \"s/1dOvshmX+dU2Bl8XB0itYg==/$app_secret_key/g\" /etc/n6/admin_panel.conf\n#   permissions\nWORKDIR /home/dataman/n6\nRUN mkdir -p /home/dataman/n6/.python-eggs ; chown -R www-data:www-data /home/dataman/n6/.python-eggs ; chmod -R 744 /home/dataman/n6/.python-eggs ; mkdir -p /var/log/n6 ; chmod 777 /var/log/n6\n#   apache config\nRUN a2enmod wsgi \\\n && a2enmod ssl \\\n && a2enmod rewrite \\\n && a2ensite 000-default \\\n && a2ensite n6-api \\\n && a2ensite n6-portal-api \\\n && a2ensite n6-adminpanel\n#   rest docker commands\nEXPOSE 80/tcp 443/tcp 4443/tcp 4444/tcp\nCOPY docker/web/entrypoint.sh /entrypoint.sh\nRUN chmod a+x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n#   helpers\n#   https://localhost:4444/\n#   https://localhost\n#   https://localhost/api/info\n#   https://localhost/login\n#   Username: login@example.com\n#   Organization: example.com\n#   Password: aaaa\n#   curl --cert /root/certs/cert.pem --key /root/certs/key.pem -k 'https://web:4443/search/events.json?time.min=2015-01-01T00:00:00'\n#   https://localhost:15671\n#   mongo --host mongo n6 -u admin -p password\n#   mongo --host mongo admin -u admin -p password\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch-slim\n#  interactive mode\nENV TERM=\"xterm\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  additional apt settings\nRUN echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries\n#  building environments\nRUN set -ex ; apt-get update \\\n && apt-get install apache2 curl default-libmysqlclient-dev libapache2-mod-wsgi geoip-database libldap2-dev libsasl2-dev python python-pip python-setuptools python-virtualenv rsyslog python-pip python-dev libssl-dev libyajl2 swig sudo wget -y \\\n && apt-get clean\n#  adding the standard user with a blank password\nRUN useradd -ms /bin/bash -p '' dataman\nWORKDIR /home/dataman\n#  cloning the repository\nADD . /home/dataman/n6\nADD docker/web/test_data/test-n6-api.conf /etc/apache2/sites-available/n6-api.conf\nADD docker/web/test_data/test-n6-api.wsgi /home/dataman/n6/N6RestApi/n6-api.wsgi\nADD docker/web/test_data/test-production.ini /home/dataman/n6/N6RestApi/production.ini\n#  permissions\nRUN chown -R dataman:dataman /home/dataman/n6 ; usermod -a -G dataman www-data ; usermod -aG sudo dataman ; chown -R www-data:www-data /etc/apache2/sites-available/n6-api.conf ; chown -R dataman:dataman /home/dataman/n6/N6RestApi/n6-api.wsgi ; chown -R dataman:dataman /home/dataman/n6/N6RestApi/production.ini ; echo 'ServerName localhost' >> /etc/apache2/apache2.conf\n#  speed up building images\nWORKDIR /home/dataman/n6\nRUN pip install -r N6Lib/requirements ; pip install -r N6SDK/requirements\n#  installing n6 componenets\nUSER dataman\nRUN sudo ./do_setup.py N6Core N6Lib N6SDK N6RestApi N6Portal N6AdminPanel ; yes | n6config\n#  n6adminpanel and n6portal\nADD docker/web/test_data/test-n6-adminpanel.conf /etc/apache2/sites-available/n6-adminpanel.conf\nADD docker/web/test_data/test-config.json N6Portal/gui/src/config/config.json\nUSER root\nRUN set -ex ; curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - ; apt-get install nodejs -y \\\n && apt-get clean\nWORKDIR /home/dataman/n6/N6Portal/gui\nRUN npm install \\\n && npm run build\nADD docker/web/test_data/test-n6-portal.wsgi /home/dataman/n6/N6Portal/n6-portal.wsgi\nADD docker/web/test_data/test-portal-production.ini /home/dataman/n6/N6Portal/production.ini\nADD docker/web/test_data/test-n6-portal-api.conf /etc/apache2/sites-available/n6-portal-api.conf\nRUN chown -R www-data:www-data /etc/apache2/sites-available/n6-portal-api.conf\n#  default website redirect to ssl connetions\nADD docker/web/test_data/test-000-default.conf /etc/apache2/sites-available/000-default.conf\n#  generate new app_secret_key\nADD docker/web/test_data/test-admin_panel.conf /etc/n6/admin_panel.conf\nRUN app_secret_key=`python -c 'import os, base64; print(base64.b64encode(os.urandom(16)))' ` ; sed -i \"s/1dOvshmX+dU2Bl8XB0itYg==/$app_secret_key/g\" /etc/n6/admin_panel.conf\n#  permissions\nWORKDIR /home/dataman/n6\nRUN mkdir -p /home/dataman/n6/.python-eggs ; chown -R www-data:www-data /home/dataman/n6/.python-eggs ; chmod -R 744 /home/dataman/n6/.python-eggs ; mkdir -p /var/log/n6 ; chmod 777 /var/log/n6\n#  apache config\nRUN a2enmod wsgi \\\n && a2enmod ssl \\\n && a2enmod rewrite \\\n && a2ensite 000-default \\\n && a2ensite n6-api \\\n && a2ensite n6-portal-api \\\n && a2ensite n6-adminpanel\n#  rest docker commands\nEXPOSE 80/tcp 443/tcp 4443/tcp 4444/tcp\nADD docker/web/entrypoint.sh /entrypoint.sh\nRUN chmod a+x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n#  helpers\n#  https://localhost:4444/\n#  https://localhost\n#  https://localhost/api/info\n#  https://localhost/login\n#  Username: login@example.com\n#  Organization: example.com\n#  Password: aaaa\n#  curl --cert /root/certs/cert.pem --key /root/certs/key.pem -k 'https://web:4443/search/events.json?time.min=2015-01-01T00:00:00'\n#  https://localhost:15671\n#  mongo --host mongo n6 -u admin -p password\n#  mongo --host mongo admin -u admin -p password\n","injectedSmells":[],"originalDockerfileHash":"09bf699ee4e568bbd8fab69bc54af628","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch-slim\n#   interactive mode\nENV TERM=\"xterm\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   additional apt settings\nRUN echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries\n#   building environments\nRUN set -ex ; apt-get update \\\n && apt-get install apache2 curl default-libmysqlclient-dev libapache2-mod-wsgi geoip-database libldap2-dev libsasl2-dev python python-pip python-setuptools python-virtualenv rsyslog python-pip python-dev libssl-dev libyajl2 swig sudo wget -y \\\n && apt-get clean\n#   adding the standard user with a blank password\nRUN useradd -ms /bin/bash -p '' dataman\nWORKDIR /home/dataman\n#   cloning the repository\nADD . /home/dataman/n6\nADD docker/web/test_data/test-n6-api.conf /etc/apache2/sites-available/n6-api.conf\nADD docker/web/test_data/test-n6-api.wsgi /home/dataman/n6/N6RestApi/n6-api.wsgi\nADD docker/web/test_data/test-production.ini /home/dataman/n6/N6RestApi/production.ini\n#   permissions\nRUN chown -R dataman:dataman /home/dataman/n6 ; usermod -a -G dataman www-data ; usermod -aG sudo dataman ; chown -R www-data:www-data /etc/apache2/sites-available/n6-api.conf ; chown -R dataman:dataman /home/dataman/n6/N6RestApi/n6-api.wsgi ; chown -R dataman:dataman /home/dataman/n6/N6RestApi/production.ini ; echo 'ServerName localhost' >> /etc/apache2/apache2.conf\n#   speed up building images\nWORKDIR /home/dataman/n6\nRUN pip install -r N6Lib/requirements ; pip install -r N6SDK/requirements\n#   installing n6 componenets\nUSER dataman\nRUN sudo ./do_setup.py N6Core N6Lib N6SDK N6RestApi N6Portal N6AdminPanel ; yes | n6config\n#   n6adminpanel and n6portal\nADD docker/web/test_data/test-n6-adminpanel.conf /etc/apache2/sites-available/n6-adminpanel.conf\nADD docker/web/test_data/test-config.json N6Portal/gui/src/config/config.json\nUSER root\nRUN set -ex ; curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - ; apt-get install nodejs -y \\\n && apt-get clean\nWORKDIR /home/dataman/n6/N6Portal/gui\nRUN npm install \\\n && npm run build\nADD docker/web/test_data/test-n6-portal.wsgi /home/dataman/n6/N6Portal/n6-portal.wsgi\nADD docker/web/test_data/test-portal-production.ini /home/dataman/n6/N6Portal/production.ini\nADD docker/web/test_data/test-n6-portal-api.conf /etc/apache2/sites-available/n6-portal-api.conf\nRUN chown -R www-data:www-data /etc/apache2/sites-available/n6-portal-api.conf\n#   default website redirect to ssl connetions\nADD docker/web/test_data/test-000-default.conf /etc/apache2/sites-available/000-default.conf\n#   generate new app_secret_key\nADD docker/web/test_data/test-admin_panel.conf /etc/n6/admin_panel.conf\nRUN app_secret_key=`python -c 'import os, base64; print(base64.b64encode(os.urandom(16)))' ` ; sed -i \"s/1dOvshmX+dU2Bl8XB0itYg==/$app_secret_key/g\" /etc/n6/admin_panel.conf\n#   permissions\nWORKDIR /home/dataman/n6\nRUN mkdir -p /home/dataman/n6/.python-eggs ; chown -R www-data:www-data /home/dataman/n6/.python-eggs ; chmod -R 744 /home/dataman/n6/.python-eggs ; mkdir -p /var/log/n6 ; chmod 777 /var/log/n6\n#   apache config\nRUN a2enmod wsgi \\\n && a2enmod ssl \\\n && a2enmod rewrite \\\n && a2ensite 000-default \\\n && a2ensite n6-api \\\n && a2ensite n6-portal-api \\\n && a2ensite n6-adminpanel\n#   rest docker commands\nEXPOSE 80/tcp 443/tcp 4443/tcp 4444/tcp\nADD docker/web/entrypoint.sh /entrypoint.sh\nRUN chmod a+x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n#   helpers\n#   https://localhost:4444/\n#   https://localhost\n#   https://localhost/api/info\n#   https://localhost/login\n#   Username: login@example.com\n#   Organization: example.com\n#   Password: aaaa\n#   curl --cert /root/certs/cert.pem --key /root/certs/key.pem -k 'https://web:4443/search/events.json?time.min=2015-01-01T00:00:00'\n#   https://localhost:15671\n#   mongo --host mongo n6 -u admin -p password\n#   mongo --host mongo admin -u admin -p password\n","originalDockerfileUglifiedHash":"abc96db0622caeddb6344c0a1e3e3b4e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1f7158155f697e1c7877696961e13b5907a86db8.dockerfile"}