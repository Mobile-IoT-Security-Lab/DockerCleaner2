{"seed":601606623,"processedDockerfileHash":"303c997f40e23a52f6bc766898bb9688","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM python:2.7.16-slim-stretch\n#   add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r sentry \\\n && useradd -r -m -g sentry sentry\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc git libffi-dev libjpeg-dev libpq-dev libxml2-dev libxmlsec1-dev libxslt-dev libyaml-dev pkg-config -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Sane defaults for pip\nENV PIP_NO_CACHE_DIR=\"off\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"on\"\n#   grab gosu for easy step-down from root\nRUN set -x \\\n && export GOSU_VERSION=1.11 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in B42F6819007F00F88E364FD4036A9C25BF357DD4; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove $fetchDeps\n#   grab tini for signal processing and zombie killing\nRUN set -x \\\n && export TINI_VERSION=0.18.0 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini\" \\\n && wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc \\\n && chmod +x /usr/local/bin/tini \\\n && tini -h \\\n && apt-get purge -y --auto-remove $fetchDeps\n#   Support for RabbitMQ and GeoIP\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends make -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install librabbitmq==1.6.1 maxminddb==1.4.1 \\\n && python -c 'import librabbitmq' \\\n && python -c 'import maxminddb' \\\n && apt-get purge -y --auto-remove make\nENV SENTRY_VERSION=\"9.1.1\"\nRUN set -x \\\n && buildDeps=\" g++ dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /usr/src/sentry \\\n && wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl\" \\\n && wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc\" \\\n && wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl\" \\\n && wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in D8749766A66DD714236A932C3B2D400CE5BBCA60; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl \\\n && gpg --batch --verify /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \\\n && gpgconf --kill all \\\n && pip install /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \\\n && sentry --help \\\n && sentry plugins list \\\n && rm -r \"$GNUPGHOME\" /usr/src/sentry \\\n && apt-get purge -y --auto-remove $buildDeps\nENV SENTRY_CONF=\"/etc/sentry\" \\\n    SENTRY_FILESTORE_DIR=\"/var/lib/sentry/files\"\nRUN mkdir -p $SENTRY_CONF \\\n && mkdir -p $SENTRY_FILESTORE_DIR\nCOPY sentry.conf.py /etc/sentry/\nCOPY config.yml /etc/sentry/\nCOPY docker-entrypoint.sh /entrypoint.sh\nEXPOSE 9000/tcp\nVOLUME /var/lib/sentry/files\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"run\", \"web\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM python:2.7.16-slim-stretch\n#  add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r sentry \\\n && useradd -r -m -g sentry sentry\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc git libffi-dev libjpeg-dev libpq-dev libxml2-dev libxmlsec1-dev libxslt-dev libyaml-dev pkg-config -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Sane defaults for pip\nENV PIP_NO_CACHE_DIR=\"off\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"on\"\n#  grab gosu for easy step-down from root\nRUN set -x \\\n && export GOSU_VERSION=1.11 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in B42F6819007F00F88E364FD4036A9C25BF357DD4; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove $fetchDeps\n#  grab tini for signal processing and zombie killing\nRUN set -x \\\n && export TINI_VERSION=0.18.0 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini\" \\\n && wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc \\\n && chmod +x /usr/local/bin/tini \\\n && tini -h \\\n && apt-get purge -y --auto-remove $fetchDeps\n#  Support for RabbitMQ and GeoIP\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends make -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install librabbitmq==1.6.1 maxminddb==1.4.1 \\\n && python -c 'import librabbitmq' \\\n && python -c 'import maxminddb' \\\n && apt-get purge -y --auto-remove make\nENV SENTRY_VERSION=\"9.1.1\"\nRUN set -x \\\n && buildDeps=\" g++ dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /usr/src/sentry \\\n && wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl\" \\\n && wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc\" \\\n && wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl\" \\\n && wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in D8749766A66DD714236A932C3B2D400CE5BBCA60; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl \\\n && gpg --batch --verify /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \\\n && gpgconf --kill all \\\n && pip install /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \\\n && sentry --help \\\n && sentry plugins list \\\n && rm -r \"$GNUPGHOME\" /usr/src/sentry \\\n && apt-get purge -y --auto-remove $buildDeps\nENV SENTRY_CONF=\"/etc/sentry\" \\\n    SENTRY_FILESTORE_DIR=\"/var/lib/sentry/files\"\nRUN mkdir -p $SENTRY_CONF \\\n && mkdir -p $SENTRY_FILESTORE_DIR\nCOPY sentry.conf.py /etc/sentry/\nCOPY config.yml /etc/sentry/\nCOPY docker-entrypoint.sh /entrypoint.sh\nEXPOSE 9000/tcp\nVOLUME /var/lib/sentry/files\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"run\", \"web\"]\n","injectedSmells":[],"originalDockerfileHash":"b5efbe4fb834db8917d64fbe23dbc9df","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM python:2.7.16-slim-stretch\n#   add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r sentry \\\n && useradd -r -m -g sentry sentry\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc git libffi-dev libjpeg-dev libpq-dev libxml2-dev libxmlsec1-dev libxslt-dev libyaml-dev pkg-config -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Sane defaults for pip\nENV PIP_NO_CACHE_DIR=\"off\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"on\"\n#   grab gosu for easy step-down from root\nRUN set -x \\\n && export GOSU_VERSION=1.11 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in B42F6819007F00F88E364FD4036A9C25BF357DD4; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove $fetchDeps\n#   grab tini for signal processing and zombie killing\nRUN set -x \\\n && export TINI_VERSION=0.18.0 \\\n && fetchDeps=\" dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $fetchDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini\" \\\n && wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \\\n && gpgconf --kill all \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc \\\n && chmod +x /usr/local/bin/tini \\\n && tini -h \\\n && apt-get purge -y --auto-remove $fetchDeps\n#   Support for RabbitMQ and GeoIP\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends make -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install librabbitmq==1.6.1 maxminddb==1.4.1 \\\n && python -c 'import librabbitmq' \\\n && python -c 'import maxminddb' \\\n && apt-get purge -y --auto-remove make\nENV SENTRY_VERSION=\"9.1.1\"\nRUN set -x \\\n && buildDeps=\" g++ dirmngr gnupg wget \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /usr/src/sentry \\\n && wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl\" \\\n && wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc\" \\\n && wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl\" \\\n && wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in D8749766A66DD714236A932C3B2D400CE5BBCA60; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && gpg --batch --verify /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl \\\n && gpg --batch --verify /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \\\n && gpgconf --kill all \\\n && pip install /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \\\n && sentry --help \\\n && sentry plugins list \\\n && rm -r \"$GNUPGHOME\" /usr/src/sentry \\\n && apt-get purge -y --auto-remove $buildDeps\nENV SENTRY_CONF=\"/etc/sentry\" \\\n    SENTRY_FILESTORE_DIR=\"/var/lib/sentry/files\"\nRUN mkdir -p $SENTRY_CONF \\\n && mkdir -p $SENTRY_FILESTORE_DIR\nCOPY sentry.conf.py /etc/sentry/\nCOPY config.yml /etc/sentry/\nCOPY docker-entrypoint.sh /entrypoint.sh\nEXPOSE 9000/tcp\nVOLUME /var/lib/sentry/files\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"run\", \"web\"]\n","originalDockerfileUglifiedHash":"92d3cfc8b2eac4ae7e9b0d9c6eaa7386","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bb2ceb6334c2dd8e25c41ef9f37a89eeff34e0b1.dockerfile"}