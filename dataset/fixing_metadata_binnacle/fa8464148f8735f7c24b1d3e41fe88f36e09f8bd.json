{"seed":1821111794,"processedDockerfileHash":"5d2d270204c1bb684024d2bb029a7560","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.7\nLABEL repository.hub=\"alexmasterov/alpine-php:7.0\" \\\n      repository.url=\"https://github.com/AlexMasterov/dockerfiles\" \\\n      maintainer=\"Alex Masterov <alex.masterow@gmail.com>\"\nARG PHP_VERSION=7.0.30\nARG PHP_CONFIG=/etc/php\nARG REALPATH_TURBO_TAG=v2.0.0\nARG XDEBUG_TAG=2.6.0\nARG MSGPACK_TAG=msgpack-2.0.2\nARG REDIS_TAG=4.0.2\nARG PHPIREDIS_TAG=v1.0.0\nARG MEMCACHED_TAG=v3.0.4\nARG TARANTOOL_VERSION=0.3.2\nARG MONGODB_VERSION=1.4.4\nARG AMQP_TAG=v1.9.3\nARG PHPV8_VERSION=0.1.9\nARG GRAPHQL_BRANCH=master\n#   https://github.com/AlexMasterov/dockerfiles#alpine-libv8\nARG V8_SOURCE=https://www.dropbox.com/s/lhd6x20r47z39v0/alpine-libv8-6.4.34.tar.gz\nARG V8_DIR=/usr/local/v8\nRUN set -x \\\n && apk add ssmtp=2.64-r12 tini=0.16.1-r0 --update \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -S -D -h /var/cache/www-data -s /sbin/nologin -G www-data www-data\nRUN set -x \\\n && apk add autoconf=2.69-r0 binutils=2.30-r2 bzip2-dev=1.0.6-r7 curl=7.61.1-r3 curl-dev=7.61.1-r3 file=5.32-r2 freetype-dev=2.8.1-r4 g++=6.4.0-r5 gcc=6.4.0-r5 git=2.15.4-r0 icu-dev=59.1-r1 jpeg-dev=8-r6 libmcrypt-dev=2.5.8-r7 libpng-dev=1.6.37-r0 libtool=2.4.6-r4 libwebp-dev=0.6.0-r1 libxml2-dev=2.9.8-r1 libxslt-dev=1.1.31-r2 make=4.2.1-r0 pcre-dev=8.41-r1 postgresql-dev=10.10-r0 re2c=1.0.2-r0 readline-dev=7.0.003-r0 sqlite-dev=3.25.3-r2 --virtual .php-build-dependencies \\\n && : \"---------- Proper iconv ----------\" \\\n && apk add gnu-libiconv-dev --no-cache --virtual .iconv-runtime-dependencies --repository https://dl-3.alpinelinux.org/alpine/edge/testing/ \\\n && : \"---------- Replace binary and headers ----------\" \\\n && (mv /usr/bin/gnu-iconv /usr/bin/iconv ;mv /usr/include/gnu-libiconv/*.h /usr/include ;rm -rf /usr/include/gnu-libiconv ) \\\n && : \"---------- Build flags ----------\" \\\n && export LDFLAGS=\"-Wl,-O2 -Wl,--hash-style=both -pie\" \\\n && export CFLAGS=\"-O2 -march=native -fstack-protector-strong -fpic -fpie\" \\\n && export CPPFLAGS=${CFLAGS} \\\n && export MAKEFLAGS=\"-j $( expr $( getconf _NPROCESSORS_ONLN ;) + 1 ;)\" \\\n && : \"---------- PHP ----------\" \\\n && PHP_SOURCE=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\" \\\n && curl -fSL --connect-timeout 30 ${PHP_SOURCE} | tar xJ -C /tmp \\\n && cd /tmp/php-${PHP_VERSION} \\\n && : \"---------- Build ----------\" \\\n && ./configure --prefix=/usr --sysconfdir=${PHP_CONFIG} --with-config-file-path=${PHP_CONFIG} --with-config-file-scan-dir=${PHP_CONFIG}/conf.d --without-pear --disable-cgi --disable-debug --disable-ipv6 --disable-phpdbg --disable-rpath --disable-static --enable-bcmath --enable-calendar --enable-dom --enable-exif --enable-fd-setsize=$( ulimit -n ;) --enable-fpm --with-fpm-group=www-data --with-fpm-user=www-data --enable-ftp --enable-inline-optimization --enable-intl --enable-json --enable-libxml --with-libxml-dir=/usr --enable-mbregex --enable-mbstring --enable-opcache --enable-huge-code-pages --enable-opcache-file --enable-pcntl --enable-phar --enable-session --enable-shmop --enable-soap --enable-sockets --enable-xml --enable-xmlreader --enable-xmlwriter --enable-zip --with-pcre-dir=/usr --with-bz2=/usr --with-curl=/usr --with-gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr --with-webp-dir=/usr --with-xpm-dir=no --with-zlib-dir=/usr --with-iconv=/usr --with-mcrypt=/usr --with-mhash --with-openssl=/usr --with-system-ciphers --with-pcre-regex=/usr --with-pcre-jit --with-pdo-mysql=mysqlnd --with-pdo-pgsql --with-pdo-sqlite --with-pgsql --with-readline=/usr --with-xmlrpc --with-xsl=/usr \\\n && make \\\n && make install \\\n && runtimeDeps=\"$( scanelf --needed --nobanner --recursive /usr/sbin/php-fpm | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add ${runtimeDeps} --virtual .php-runtime-dependencies \\\n && : \"---------- https://bugs.php.net/bug.php?id=52312 ----------\" \\\n && git clone -o ${REALPATH_TURBO_TAG} --depth 1 https://github.com/Whissi/realpath_turbo.git /tmp/realpath_turbo \\\n && cd /tmp/realpath_turbo \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- xDebug ----------\" \\\n && git clone -o ${XDEBUG_TAG} --depth 1 https://github.com/xdebug/xdebug.git /tmp/xdebug \\\n && cd /tmp/xdebug \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Msgpack ----------\" \\\n && git clone -o ${MSGPACK_TAG} --depth 1 https://github.com/msgpack/msgpack-php.git /tmp/msgpack-php \\\n && cd /tmp/msgpack-php \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Redis ----------\" \\\n && git clone -o ${REDIS_TAG} --depth 1 https://github.com/phpredis/phpredis.git /tmp/redis \\\n && cd /tmp/redis \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Phpiredis ----------\" \\\n && : \"---------- https://blog.remirepo.net/post/2016/11/13/Redis-from-PHP ----------\" \\\n && apk add hiredis-dev=0.13.3-r1 --virtual .phpiredis-build-dependencies \\\n && apk add hiredis=0.13.3-r1 --virtual .phpiredis-runtime-dependencies \\\n && git clone -o ${PHPIREDIS_TAG} --depth 1 https://github.com/nrk/phpiredis.git /tmp/phpiredis \\\n && cd /tmp/phpiredis \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && apk del .phpiredis-build-dependencies \\\n && : \"---------- Memcached ----------\" \\\n && apk add libmemcached-dev=1.0.18-r2 cyrus-sasl-dev=2.1.26-r11 --virtual .memcached-build-dependencies \\\n && apk add libmemcached=1.0.18-r2 --virtual .memcached-runtime-dependencies \\\n && git clone -o ${MEMCACHED_TAG} --depth 1 https://github.com/php-memcached-dev/php-memcached.git /tmp/php-memcached \\\n && cd /tmp/php-memcached \\\n && phpize \\\n && ./configure --disable-memcached-sasl --enable-memcached-msgpack --enable-memcached-json \\\n && make \\\n && make install \\\n && apk del .memcached-build-dependencies \\\n && : \"---------- Tarantool ----------\" \\\n && apk add libltdl=2.4.6-r4 --virtual .tarantool-runtime-dependencies \\\n && TARANTOOL_FILENAME=\"tarantool-php-${TARANTOOL_VERSION}\" \\\n && TARANTOOL_SOURCE=\"https://github.com/tarantool/tarantool-php/archive/${TARANTOOL_VERSION}.tar.gz\" \\\n && curl -fSL --connect-timeout 30 ${TARANTOOL_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/${TARANTOOL_FILENAME} \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Mongodb ----------\" \\\n && apk add cmake=3.9.5-r0 pkgconfig --virtual .mongodb-build-dependencies \\\n && apk add libressl2.6-libtls=2.6.5-r0 --virtual .mongodb-runtime-dependencies \\\n && : \"---------- mongo-php-driver ----------\" \\\n && MONGODB_FILENAME=\"mongodb-${MONGODB_VERSION}\" \\\n && MONGODB_SOURCE=\"https://github.com/mongodb/mongo-php-driver/releases/download/${MONGODB_VERSION}/${MONGODB_FILENAME}.tgz\" \\\n && curl -fSL --connect-timeout 30 ${MONGODB_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/${MONGODB_FILENAME} \\\n && phpize \\\n && ./configure --with-mongodb-ssl=libressl \\\n && make \\\n && make install \\\n && apk del .mongodb-build-dependencies \\\n && : \"---------- php-amqp (RabbitMQ) ----------\" \\\n && apk add rabbitmq-c-dev=0.8.0-r3 --virtual .amqp-build-dependencies \\\n && apk add rabbitmq-c=0.8.0-r3 --virtual .amqp-runtime-dependencies \\\n && git clone -o ${AMQP_TAG} --depth 1 https://github.com/pdezwart/php-amqp.git /tmp/php-amqp \\\n && cd /tmp/php-amqp \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && apk del .amqp-build-dependencies \\\n && : \"---------- libv8 ----------\" \\\n && (mkdir -p ${V8_DIR} ;curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xz -C ${V8_DIR} ) \\\n && : \"---------- php-v8 ----------\" \\\n && PHPV8_FILENAME=\"php-v8-${PHPV8_VERSION}\" \\\n && PHPV8_SOURCE=\"https://github.com/pinepain/php-v8/archive/v${PHPV8_VERSION}.tar.gz\" \\\n && curl -fSL --connect-timeout 30 ${PHPV8_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/${PHPV8_FILENAME} \\\n && phpize \\\n && ./configure --with-v8=${V8_DIR} \\\n && make \\\n && make install \\\n && : \"---------- graphql-parser ----------\" \\\n && apk add bison=3.0.4-r0 cmake=3.9.5-r0 flex=2.6.4-r1 python2=2.7.15-r3 --virtual .graphql-build-dependencies \\\n && git clone -b ${GRAPHQL_BRANCH} --depth 1 https://github.com/dosten/graphql-parser-php.git /tmp/graphql \\\n && : \"---------- libgraphqlparser ----------\" \\\n && cd /tmp/graphql/deps/libgraphqlparser \\\n && cmake . \\\n && make \\\n && make install \\\n && : \"---------- graphql-parser-php ----------\" \\\n && cd /tmp/graphql \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && apk del .graphql-build-dependencies \\\n && : \"---------- Removing build dependencies, clean temporary files ----------\" \\\n && apk del .php-build-dependencies \\\n && rm -rf /var/cache/apk/* /var/tmp/* /tmp/*\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"php-fpm\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.7\nLABEL repository.hub=\"alexmasterov/alpine-php:7.0\" \\\n      repository.url=\"https://github.com/AlexMasterov/dockerfiles\" \\\n      maintainer=\"Alex Masterov <alex.masterow@gmail.com>\"\nARG PHP_VERSION=7.0.30\nARG PHP_CONFIG=/etc/php\nARG REALPATH_TURBO_TAG=v2.0.0\nARG XDEBUG_TAG=2.6.0\nARG MSGPACK_TAG=msgpack-2.0.2\nARG REDIS_TAG=4.0.2\nARG PHPIREDIS_TAG=v1.0.0\nARG MEMCACHED_TAG=v3.0.4\nARG TARANTOOL_VERSION=0.3.2\nARG MONGODB_VERSION=1.4.4\nARG AMQP_TAG=v1.9.3\nARG PHPV8_VERSION=0.1.9\nARG GRAPHQL_BRANCH=master\n#  https://github.com/AlexMasterov/dockerfiles#alpine-libv8\nARG V8_SOURCE=https://www.dropbox.com/s/lhd6x20r47z39v0/alpine-libv8-6.4.34.tar.gz\nARG V8_DIR=/usr/local/v8\nRUN set -x \\\n && apk add --update ssmtp tini \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -S -D -h /var/cache/www-data -s /sbin/nologin -G www-data www-data\nRUN set -x \\\n && apk add --virtual .php-build-dependencies autoconf binutils bzip2-dev curl curl-dev file freetype-dev g++ gcc git icu-dev jpeg-dev libmcrypt-dev libpng-dev libtool libwebp-dev libxml2-dev libxslt-dev make pcre-dev postgresql-dev re2c readline-dev sqlite-dev \\\n && : \"---------- Proper iconv ----------\" \\\n && apk add --no-cache --virtual .iconv-runtime-dependencies --repository https://dl-3.alpinelinux.org/alpine/edge/testing/ gnu-libiconv-dev \\\n && : \"---------- Replace binary and headers ----------\" \\\n && (mv /usr/bin/gnu-iconv /usr/bin/iconv ;mv /usr/include/gnu-libiconv/*.h /usr/include ;rm -rf /usr/include/gnu-libiconv ) \\\n && : \"---------- Build flags ----------\" \\\n && export LDFLAGS=\"-Wl,-O2 -Wl,--hash-style=both -pie\" \\\n && export CFLAGS=\"-O2 -march=native -fstack-protector-strong -fpic -fpie\" \\\n && export CPPFLAGS=${CFLAGS} \\\n && export MAKEFLAGS=\"-j $( expr $( getconf _NPROCESSORS_ONLN ;) + 1 ;)\" \\\n && : \"---------- PHP ----------\" \\\n && PHP_SOURCE=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\" \\\n && curl -fSL --connect-timeout 30 ${PHP_SOURCE} | tar xJ -C /tmp \\\n && cd /tmp/php-${PHP_VERSION} \\\n && : \"---------- Build ----------\" \\\n && ./configure --prefix=/usr --sysconfdir=${PHP_CONFIG} --with-config-file-path=${PHP_CONFIG} --with-config-file-scan-dir=${PHP_CONFIG}/conf.d --without-pear --disable-cgi --disable-debug --disable-ipv6 --disable-phpdbg --disable-rpath --disable-static --enable-bcmath --enable-calendar --enable-dom --enable-exif --enable-fd-setsize=$( ulimit -n ;) --enable-fpm --with-fpm-group=www-data --with-fpm-user=www-data --enable-ftp --enable-inline-optimization --enable-intl --enable-json --enable-libxml --with-libxml-dir=/usr --enable-mbregex --enable-mbstring --enable-opcache --enable-huge-code-pages --enable-opcache-file --enable-pcntl --enable-phar --enable-session --enable-shmop --enable-soap --enable-sockets --enable-xml --enable-xmlreader --enable-xmlwriter --enable-zip --with-pcre-dir=/usr --with-bz2=/usr --with-curl=/usr --with-gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr --with-webp-dir=/usr --with-xpm-dir=no --with-zlib-dir=/usr --with-iconv=/usr --with-mcrypt=/usr --with-mhash --with-openssl=/usr --with-system-ciphers --with-pcre-regex=/usr --with-pcre-jit --with-pdo-mysql=mysqlnd --with-pdo-pgsql --with-pdo-sqlite --with-pgsql --with-readline=/usr --with-xmlrpc --with-xsl=/usr \\\n && make \\\n && make install \\\n && runtimeDeps=\"$( scanelf --needed --nobanner --recursive /usr/sbin/php-fpm | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .php-runtime-dependencies ${runtimeDeps} \\\n && : \"---------- https://bugs.php.net/bug.php?id=52312 ----------\" \\\n && git clone -o ${REALPATH_TURBO_TAG} --depth 1 https://github.com/Whissi/realpath_turbo.git /tmp/realpath_turbo \\\n && cd /tmp/realpath_turbo \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- xDebug ----------\" \\\n && git clone -o ${XDEBUG_TAG} --depth 1 https://github.com/xdebug/xdebug.git /tmp/xdebug \\\n && cd /tmp/xdebug \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Msgpack ----------\" \\\n && git clone -o ${MSGPACK_TAG} --depth 1 https://github.com/msgpack/msgpack-php.git /tmp/msgpack-php \\\n && cd /tmp/msgpack-php \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Redis ----------\" \\\n && git clone -o ${REDIS_TAG} --depth 1 https://github.com/phpredis/phpredis.git /tmp/redis \\\n && cd /tmp/redis \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Phpiredis ----------\" \\\n && : \"---------- https://blog.remirepo.net/post/2016/11/13/Redis-from-PHP ----------\" \\\n && apk add --virtual .phpiredis-build-dependencies hiredis-dev \\\n && apk add --virtual .phpiredis-runtime-dependencies hiredis \\\n && git clone -o ${PHPIREDIS_TAG} --depth 1 https://github.com/nrk/phpiredis.git /tmp/phpiredis \\\n && cd /tmp/phpiredis \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && apk del .phpiredis-build-dependencies \\\n && : \"---------- Memcached ----------\" \\\n && apk add --virtual .memcached-build-dependencies libmemcached-dev cyrus-sasl-dev \\\n && apk add --virtual .memcached-runtime-dependencies libmemcached \\\n && git clone -o ${MEMCACHED_TAG} --depth 1 https://github.com/php-memcached-dev/php-memcached.git /tmp/php-memcached \\\n && cd /tmp/php-memcached \\\n && phpize \\\n && ./configure --disable-memcached-sasl --enable-memcached-msgpack --enable-memcached-json \\\n && make \\\n && make install \\\n && apk del .memcached-build-dependencies \\\n && : \"---------- Tarantool ----------\" \\\n && apk add --virtual .tarantool-runtime-dependencies libltdl \\\n && TARANTOOL_FILENAME=\"tarantool-php-${TARANTOOL_VERSION}\" \\\n && TARANTOOL_SOURCE=\"https://github.com/tarantool/tarantool-php/archive/${TARANTOOL_VERSION}.tar.gz\" \\\n && curl -fSL --connect-timeout 30 ${TARANTOOL_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/${TARANTOOL_FILENAME} \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Mongodb ----------\" \\\n && apk add --virtual .mongodb-build-dependencies cmake pkgconfig \\\n && apk add --virtual .mongodb-runtime-dependencies libressl2.6-libtls \\\n && : \"---------- mongo-php-driver ----------\" \\\n && MONGODB_FILENAME=\"mongodb-${MONGODB_VERSION}\" \\\n && MONGODB_SOURCE=\"https://github.com/mongodb/mongo-php-driver/releases/download/${MONGODB_VERSION}/${MONGODB_FILENAME}.tgz\" \\\n && curl -fSL --connect-timeout 30 ${MONGODB_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/${MONGODB_FILENAME} \\\n && phpize \\\n && ./configure --with-mongodb-ssl=libressl \\\n && make \\\n && make install \\\n && apk del .mongodb-build-dependencies \\\n && : \"---------- php-amqp (RabbitMQ) ----------\" \\\n && apk add --virtual .amqp-build-dependencies rabbitmq-c-dev \\\n && apk add --virtual .amqp-runtime-dependencies rabbitmq-c \\\n && git clone -o ${AMQP_TAG} --depth 1 https://github.com/pdezwart/php-amqp.git /tmp/php-amqp \\\n && cd /tmp/php-amqp \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && apk del .amqp-build-dependencies \\\n && : \"---------- libv8 ----------\" \\\n && (mkdir -p ${V8_DIR} ;curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xz -C ${V8_DIR} ) \\\n && : \"---------- php-v8 ----------\" \\\n && PHPV8_FILENAME=\"php-v8-${PHPV8_VERSION}\" \\\n && PHPV8_SOURCE=\"https://github.com/pinepain/php-v8/archive/v${PHPV8_VERSION}.tar.gz\" \\\n && curl -fSL --connect-timeout 30 ${PHPV8_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/${PHPV8_FILENAME} \\\n && phpize \\\n && ./configure --with-v8=${V8_DIR} \\\n && make \\\n && make install \\\n && : \"---------- graphql-parser ----------\" \\\n && apk add --virtual .graphql-build-dependencies bison cmake flex python2 \\\n && git clone -b ${GRAPHQL_BRANCH} --depth 1 https://github.com/dosten/graphql-parser-php.git /tmp/graphql \\\n && : \"---------- libgraphqlparser ----------\" \\\n && cd /tmp/graphql/deps/libgraphqlparser \\\n && cmake . \\\n && make \\\n && make install \\\n && : \"---------- graphql-parser-php ----------\" \\\n && cd /tmp/graphql \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && apk del .graphql-build-dependencies \\\n && : \"---------- Removing build dependencies, clean temporary files ----------\" \\\n && apk del .php-build-dependencies \\\n && rm -rf /var/cache/apk/* /var/tmp/* /tmp/*\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"php-fpm\"]\n","injectedSmells":[],"originalDockerfileHash":"33b184e0597297f275de4c196c8bf5f2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.7\nLABEL repository.hub=\"alexmasterov/alpine-php:7.0\" \\\n      repository.url=\"https://github.com/AlexMasterov/dockerfiles\" \\\n      maintainer=\"Alex Masterov <alex.masterow@gmail.com>\"\nARG PHP_VERSION=7.0.30\nARG PHP_CONFIG=/etc/php\nARG REALPATH_TURBO_TAG=v2.0.0\nARG XDEBUG_TAG=2.6.0\nARG MSGPACK_TAG=msgpack-2.0.2\nARG REDIS_TAG=4.0.2\nARG PHPIREDIS_TAG=v1.0.0\nARG MEMCACHED_TAG=v3.0.4\nARG TARANTOOL_VERSION=0.3.2\nARG MONGODB_VERSION=1.4.4\nARG AMQP_TAG=v1.9.3\nARG PHPV8_VERSION=0.1.9\nARG GRAPHQL_BRANCH=master\n#   https://github.com/AlexMasterov/dockerfiles#alpine-libv8\nARG V8_SOURCE=https://www.dropbox.com/s/lhd6x20r47z39v0/alpine-libv8-6.4.34.tar.gz\nARG V8_DIR=/usr/local/v8\nRUN set -x \\\n && apk add --update ssmtp tini \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -S -D -h /var/cache/www-data -s /sbin/nologin -G www-data www-data\nRUN set -x \\\n && apk add --virtual .php-build-dependencies autoconf binutils bzip2-dev curl curl-dev file freetype-dev g++ gcc git icu-dev jpeg-dev libmcrypt-dev libpng-dev libtool libwebp-dev libxml2-dev libxslt-dev make pcre-dev postgresql-dev re2c readline-dev sqlite-dev \\\n && : \"---------- Proper iconv ----------\" \\\n && apk add --no-cache --virtual .iconv-runtime-dependencies --repository https://dl-3.alpinelinux.org/alpine/edge/testing/ gnu-libiconv-dev \\\n && : \"---------- Replace binary and headers ----------\" \\\n && (mv /usr/bin/gnu-iconv /usr/bin/iconv ;mv /usr/include/gnu-libiconv/*.h /usr/include ;rm -rf /usr/include/gnu-libiconv ) \\\n && : \"---------- Build flags ----------\" \\\n && export LDFLAGS=\"-Wl,-O2 -Wl,--hash-style=both -pie\" \\\n && export CFLAGS=\"-O2 -march=native -fstack-protector-strong -fpic -fpie\" \\\n && export CPPFLAGS=${CFLAGS} \\\n && export MAKEFLAGS=\"-j $( expr $( getconf _NPROCESSORS_ONLN ;) + 1 ;)\" \\\n && : \"---------- PHP ----------\" \\\n && PHP_SOURCE=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\" \\\n && curl -fSL --connect-timeout 30 ${PHP_SOURCE} | tar xJ -C /tmp \\\n && cd /tmp/php-${PHP_VERSION} \\\n && : \"---------- Build ----------\" \\\n && ./configure --prefix=/usr --sysconfdir=${PHP_CONFIG} --with-config-file-path=${PHP_CONFIG} --with-config-file-scan-dir=${PHP_CONFIG}/conf.d --without-pear --disable-cgi --disable-debug --disable-ipv6 --disable-phpdbg --disable-rpath --disable-static --enable-bcmath --enable-calendar --enable-dom --enable-exif --enable-fd-setsize=$( ulimit -n ;) --enable-fpm --with-fpm-group=www-data --with-fpm-user=www-data --enable-ftp --enable-inline-optimization --enable-intl --enable-json --enable-libxml --with-libxml-dir=/usr --enable-mbregex --enable-mbstring --enable-opcache --enable-huge-code-pages --enable-opcache-file --enable-pcntl --enable-phar --enable-session --enable-shmop --enable-soap --enable-sockets --enable-xml --enable-xmlreader --enable-xmlwriter --enable-zip --with-pcre-dir=/usr --with-bz2=/usr --with-curl=/usr --with-gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr --with-webp-dir=/usr --with-xpm-dir=no --with-zlib-dir=/usr --with-iconv=/usr --with-mcrypt=/usr --with-mhash --with-openssl=/usr --with-system-ciphers --with-pcre-regex=/usr --with-pcre-jit --with-pdo-mysql=mysqlnd --with-pdo-pgsql --with-pdo-sqlite --with-pgsql --with-readline=/usr --with-xmlrpc --with-xsl=/usr \\\n && make \\\n && make install \\\n && runtimeDeps=\"$( scanelf --needed --nobanner --recursive /usr/sbin/php-fpm | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .php-runtime-dependencies ${runtimeDeps} \\\n && : \"---------- https://bugs.php.net/bug.php?id=52312 ----------\" \\\n && git clone -o ${REALPATH_TURBO_TAG} --depth 1 https://github.com/Whissi/realpath_turbo.git /tmp/realpath_turbo \\\n && cd /tmp/realpath_turbo \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- xDebug ----------\" \\\n && git clone -o ${XDEBUG_TAG} --depth 1 https://github.com/xdebug/xdebug.git /tmp/xdebug \\\n && cd /tmp/xdebug \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Msgpack ----------\" \\\n && git clone -o ${MSGPACK_TAG} --depth 1 https://github.com/msgpack/msgpack-php.git /tmp/msgpack-php \\\n && cd /tmp/msgpack-php \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Redis ----------\" \\\n && git clone -o ${REDIS_TAG} --depth 1 https://github.com/phpredis/phpredis.git /tmp/redis \\\n && cd /tmp/redis \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Phpiredis ----------\" \\\n && : \"---------- https://blog.remirepo.net/post/2016/11/13/Redis-from-PHP ----------\" \\\n && apk add --virtual .phpiredis-build-dependencies hiredis-dev \\\n && apk add --virtual .phpiredis-runtime-dependencies hiredis \\\n && git clone -o ${PHPIREDIS_TAG} --depth 1 https://github.com/nrk/phpiredis.git /tmp/phpiredis \\\n && cd /tmp/phpiredis \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && apk del .phpiredis-build-dependencies \\\n && : \"---------- Memcached ----------\" \\\n && apk add --virtual .memcached-build-dependencies libmemcached-dev cyrus-sasl-dev \\\n && apk add --virtual .memcached-runtime-dependencies libmemcached \\\n && git clone -o ${MEMCACHED_TAG} --depth 1 https://github.com/php-memcached-dev/php-memcached.git /tmp/php-memcached \\\n && cd /tmp/php-memcached \\\n && phpize \\\n && ./configure --disable-memcached-sasl --enable-memcached-msgpack --enable-memcached-json \\\n && make \\\n && make install \\\n && apk del .memcached-build-dependencies \\\n && : \"---------- Tarantool ----------\" \\\n && apk add --virtual .tarantool-runtime-dependencies libltdl \\\n && TARANTOOL_FILENAME=\"tarantool-php-${TARANTOOL_VERSION}\" \\\n && TARANTOOL_SOURCE=\"https://github.com/tarantool/tarantool-php/archive/${TARANTOOL_VERSION}.tar.gz\" \\\n && curl -fSL --connect-timeout 30 ${TARANTOOL_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/${TARANTOOL_FILENAME} \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && : \"---------- Mongodb ----------\" \\\n && apk add --virtual .mongodb-build-dependencies cmake pkgconfig \\\n && apk add --virtual .mongodb-runtime-dependencies libressl2.6-libtls \\\n && : \"---------- mongo-php-driver ----------\" \\\n && MONGODB_FILENAME=\"mongodb-${MONGODB_VERSION}\" \\\n && MONGODB_SOURCE=\"https://github.com/mongodb/mongo-php-driver/releases/download/${MONGODB_VERSION}/${MONGODB_FILENAME}.tgz\" \\\n && curl -fSL --connect-timeout 30 ${MONGODB_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/${MONGODB_FILENAME} \\\n && phpize \\\n && ./configure --with-mongodb-ssl=libressl \\\n && make \\\n && make install \\\n && apk del .mongodb-build-dependencies \\\n && : \"---------- php-amqp (RabbitMQ) ----------\" \\\n && apk add --virtual .amqp-build-dependencies rabbitmq-c-dev \\\n && apk add --virtual .amqp-runtime-dependencies rabbitmq-c \\\n && git clone -o ${AMQP_TAG} --depth 1 https://github.com/pdezwart/php-amqp.git /tmp/php-amqp \\\n && cd /tmp/php-amqp \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && apk del .amqp-build-dependencies \\\n && : \"---------- libv8 ----------\" \\\n && (mkdir -p ${V8_DIR} ;curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xz -C ${V8_DIR} ) \\\n && : \"---------- php-v8 ----------\" \\\n && PHPV8_FILENAME=\"php-v8-${PHPV8_VERSION}\" \\\n && PHPV8_SOURCE=\"https://github.com/pinepain/php-v8/archive/v${PHPV8_VERSION}.tar.gz\" \\\n && curl -fSL --connect-timeout 30 ${PHPV8_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/${PHPV8_FILENAME} \\\n && phpize \\\n && ./configure --with-v8=${V8_DIR} \\\n && make \\\n && make install \\\n && : \"---------- graphql-parser ----------\" \\\n && apk add --virtual .graphql-build-dependencies bison cmake flex python2 \\\n && git clone -b ${GRAPHQL_BRANCH} --depth 1 https://github.com/dosten/graphql-parser-php.git /tmp/graphql \\\n && : \"---------- libgraphqlparser ----------\" \\\n && cd /tmp/graphql/deps/libgraphqlparser \\\n && cmake . \\\n && make \\\n && make install \\\n && : \"---------- graphql-parser-php ----------\" \\\n && cd /tmp/graphql \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && apk del .graphql-build-dependencies \\\n && : \"---------- Removing build dependencies, clean temporary files ----------\" \\\n && apk del .php-build-dependencies \\\n && rm -rf /var/cache/apk/* /var/tmp/* /tmp/*\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"php-fpm\"]\n","originalDockerfileUglifiedHash":"0799650c91917eb379a572abfa6ae8fa","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fa8464148f8735f7c24b1d3e41fe88f36e09f8bd.dockerfile"}