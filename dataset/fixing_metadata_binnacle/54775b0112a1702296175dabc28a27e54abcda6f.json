{"seed":3760777627,"processedDockerfileHash":"3d045b71272cff5a8a290b7324a6370d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Pull base image.\nFROM php:5.6-apache\nCOPY config/php.ini /usr/local/etc/php/\n#   ADD BASHRC CONFIG\nCOPY config/bashrc /root/\nRUN mv /root/bashrc /root/.bashrc\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install --no-install-recommends ruby-dev rubygems imagemagick graphviz sudo git vim memcached libmemcached-tools libpng-dev libjpeg62-turbo-dev libmcrypt-dev libxml2-dev libxslt1-dev mysql-client zip wget linux-libc-dev libyaml-dev apt-transport-https zlib1g-dev libicu-dev gnupg2 libssl-dev libpq-dev -y --fix-missing\n#   postgresql-client-9.5\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends postgresql-client-9.5 -y\n#   Install PECL packages\nCOPY docker-php-pecl-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-pecl-install\nRUN docker-php-pecl-install uploadprogress-1.0.3.1 memcache-3.0.8 yaml-1.2.0 mongo-1.6.12\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd mbstring mcrypt zip soap mysql pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp\n#   Installation node.js\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo bash -\nRUN apt-get install --no-install-recommends nodejs build-essential -y ; npm update -g npm \\\n && npm install less@4.1.3 -g \\\n && npm install less-plugin-clean-css@1.5.1 -g ; npm install grunt-cli@1.4.3 -g ; npm install gulp@4.0.2 -g ; cd /usr/src \\\n && curl -sS http://getcomposer.org/installer | php ; cd /usr/src \\\n && mv composer.phar /usr/bin/composer ; git clone https://github.com/drush-ops/drush.git /usr/local/src/drush ; cd /usr/local/src/drush \\\n && git checkout 8.1.2 ; ln -s /usr/local/src/drush/drush /usr/bin/drush ; cd /usr/local/src/drush \\\n && composer update \\\n && composer install ; mkdir /var/www/.drush ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/registry_rebuild-7.x-2.3.zip \\\n && unzip registry_rebuild-7.x-2.3.zip ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/site_audit-7.x-1.15.zip \\\n && unzip site_audit-7.x-1.15.zip ; cd /var/www/.drush \\\n && rm *.zip ; chown -R www-data:www-data /var/www ; sudo -u www-data drush cc drush ; composer global require drupal/coder ; ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin ; ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin ; phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\nRUN rm -rf /var/www/html \\\n && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n#   install msmtp\nRUN set -x \\\n && DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install --no-install-recommends msmtp -y \\\n && rm -r /var/lib/apt/lists/*\nCOPY core/msmtprc.conf /usr/local/etc/msmtprc\nCOPY core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\nCOPY config/apache2.conf /etc/apache2\nCOPY core/envvars /etc/apache2\nCOPY core/other-vhosts-access-log.conf /etc/apache2/conf-enabled/\nRUN rm /etc/apache2/sites-enabled/000-default.conf\nRUN chown -R www-data:www-data /var/www\n#   Installation of Opcode cache\nRUN (echo \"opcache.memory_consumption=128\" ;echo \"opcache.interned_strings_buffer=8\" ;echo \"opcache.max_accelerated_files=4000\" ;echo \"opcache.revalidate_freq=5\" ;echo \"opcache.fast_shutdown=1\" ;echo \"opcache.enable_cli=1\" ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires \\\n && service apache2 restart\n#   install phing\nRUN pear channel-discover pear.phing.info \\\n && pear install [--alldeps] phing/phing\n#   install phpcpd\nRUN wget https://phar.phpunit.de/phpcpd.phar \\\n && chmod +x phpcpd.phar \\\n && mv phpcpd.phar /usr/local/bin/phpcpd\n#   install phpmetrics\nRUN wget https://github.com/phpmetrics/PhpMetrics/raw/master/build/phpmetrics.phar \\\n && chmod +x phpmetrics.phar \\\n && mv phpmetrics.phar /usr/local/bin/phpmetrics\n#   Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\n#   Our apache volume\nVOLUME /var/www/html\n#   create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n#   Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#   Expose 80 for apache, 9000 for xdebug\nEXPOSE 80/tcp 9000/tcp\n#   Set a custom entrypoint.\nCOPY core/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  Pull base image.\nFROM php:5.6-apache\nCOPY config/php.ini /usr/local/etc/php/\n#  ADD BASHRC CONFIG\nCOPY config/bashrc /root/\nRUN mv /root/bashrc /root/.bashrc\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install ruby-dev rubygems imagemagick graphviz sudo git vim memcached libmemcached-tools libpng-dev libjpeg62-turbo-dev libmcrypt-dev libxml2-dev libxslt1-dev mysql-client zip wget linux-libc-dev libyaml-dev apt-transport-https zlib1g-dev libicu-dev gnupg2 libssl-dev libpq-dev -y --fix-missing\n#  postgresql-client-9.5\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install postgresql-client-9.5 -y\n#  Install PECL packages\nCOPY docker-php-pecl-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-pecl-install\nRUN docker-php-pecl-install uploadprogress-1.0.3.1 memcache-3.0.8 yaml-1.2.0 mongo-1.6.12\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd mbstring mcrypt zip soap mysql pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp\n#  Installation node.js\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo bash -\nRUN apt-get install nodejs build-essential -y ; npm update -g npm \\\n && npm install less -g \\\n && npm install less-plugin-clean-css -g ; npm install grunt-cli -g ; npm install gulp -g ; cd /usr/src \\\n && curl -sS http://getcomposer.org/installer | php ; cd /usr/src \\\n && mv composer.phar /usr/bin/composer ; git clone https://github.com/drush-ops/drush.git /usr/local/src/drush ; cd /usr/local/src/drush \\\n && git checkout 8.1.2 ; ln -s /usr/local/src/drush/drush /usr/bin/drush ; cd /usr/local/src/drush \\\n && composer update \\\n && composer install ; mkdir /var/www/.drush ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/registry_rebuild-7.x-2.3.zip \\\n && unzip registry_rebuild-7.x-2.3.zip ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/site_audit-7.x-1.15.zip \\\n && unzip site_audit-7.x-1.15.zip ; cd /var/www/.drush \\\n && rm *.zip ; chown -R www-data:www-data /var/www ; sudo -u www-data drush cc drush ; composer global require drupal/coder ; ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin ; ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin ; phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\nRUN rm -rf /var/www/html \\\n && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n#  install msmtp\nRUN set -x \\\n && DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install --no-install-recommends msmtp -y \\\n && rm -r /var/lib/apt/lists/*\nADD core/msmtprc.conf /usr/local/etc/msmtprc\nADD core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\nCOPY config/apache2.conf /etc/apache2\nCOPY core/envvars /etc/apache2\nCOPY core/other-vhosts-access-log.conf /etc/apache2/conf-enabled/\nRUN rm /etc/apache2/sites-enabled/000-default.conf\nRUN chown -R www-data:www-data /var/www\n#  Installation of Opcode cache\nRUN (echo \"opcache.memory_consumption=128\" ;echo \"opcache.interned_strings_buffer=8\" ;echo \"opcache.max_accelerated_files=4000\" ;echo \"opcache.revalidate_freq=5\" ;echo \"opcache.fast_shutdown=1\" ;echo \"opcache.enable_cli=1\" ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires \\\n && service apache2 restart\n#  install phing\nRUN pear channel-discover pear.phing.info \\\n && pear install [--alldeps] phing/phing\n#  install phpcpd\nRUN wget https://phar.phpunit.de/phpcpd.phar \\\n && chmod +x phpcpd.phar \\\n && mv phpcpd.phar /usr/local/bin/phpcpd\n#  install phpmetrics\nRUN wget https://github.com/phpmetrics/PhpMetrics/raw/master/build/phpmetrics.phar \\\n && chmod +x phpmetrics.phar \\\n && mv phpmetrics.phar /usr/local/bin/phpmetrics\n#  Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\n#  Our apache volume\nVOLUME /var/www/html\n#  create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n#  Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#  Expose 80 for apache, 9000 for xdebug\nEXPOSE 80/tcp 9000/tcp\n#  Set a custom entrypoint.\nCOPY core/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"a8a14334915d55de5fce8381e028e99b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Pull base image.\nFROM php:5.6-apache\nCOPY config/php.ini /usr/local/etc/php/\n#   ADD BASHRC CONFIG\nCOPY config/bashrc /root/\nRUN mv /root/bashrc /root/.bashrc\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install ruby-dev rubygems imagemagick graphviz sudo git vim memcached libmemcached-tools libpng-dev libjpeg62-turbo-dev libmcrypt-dev libxml2-dev libxslt1-dev mysql-client zip wget linux-libc-dev libyaml-dev apt-transport-https zlib1g-dev libicu-dev gnupg2 libssl-dev libpq-dev -y --fix-missing\n#   postgresql-client-9.5\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install postgresql-client-9.5 -y\n#   Install PECL packages\nCOPY docker-php-pecl-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-pecl-install\nRUN docker-php-pecl-install uploadprogress-1.0.3.1 memcache-3.0.8 yaml-1.2.0 mongo-1.6.12\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd mbstring mcrypt zip soap mysql pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp\n#   Installation node.js\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo bash -\nRUN apt-get install nodejs build-essential -y ; npm update -g npm \\\n && npm install less -g \\\n && npm install less-plugin-clean-css -g ; npm install grunt-cli -g ; npm install gulp -g ; cd /usr/src \\\n && curl -sS http://getcomposer.org/installer | php ; cd /usr/src \\\n && mv composer.phar /usr/bin/composer ; git clone https://github.com/drush-ops/drush.git /usr/local/src/drush ; cd /usr/local/src/drush \\\n && git checkout 8.1.2 ; ln -s /usr/local/src/drush/drush /usr/bin/drush ; cd /usr/local/src/drush \\\n && composer update \\\n && composer install ; mkdir /var/www/.drush ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/registry_rebuild-7.x-2.3.zip \\\n && unzip registry_rebuild-7.x-2.3.zip ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/site_audit-7.x-1.15.zip \\\n && unzip site_audit-7.x-1.15.zip ; cd /var/www/.drush \\\n && rm *.zip ; chown -R www-data:www-data /var/www ; sudo -u www-data drush cc drush ; composer global require drupal/coder ; ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin ; ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin ; phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\nRUN rm -rf /var/www/html \\\n && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n#   install msmtp\nRUN set -x \\\n && DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install --no-install-recommends msmtp -y \\\n && rm -r /var/lib/apt/lists/*\nADD core/msmtprc.conf /usr/local/etc/msmtprc\nADD core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\nCOPY config/apache2.conf /etc/apache2\nCOPY core/envvars /etc/apache2\nCOPY core/other-vhosts-access-log.conf /etc/apache2/conf-enabled/\nRUN rm /etc/apache2/sites-enabled/000-default.conf\nRUN chown -R www-data:www-data /var/www\n#   Installation of Opcode cache\nRUN (echo \"opcache.memory_consumption=128\" ;echo \"opcache.interned_strings_buffer=8\" ;echo \"opcache.max_accelerated_files=4000\" ;echo \"opcache.revalidate_freq=5\" ;echo \"opcache.fast_shutdown=1\" ;echo \"opcache.enable_cli=1\" ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires \\\n && service apache2 restart\n#   install phing\nRUN pear channel-discover pear.phing.info \\\n && pear install [--alldeps] phing/phing\n#   install phpcpd\nRUN wget https://phar.phpunit.de/phpcpd.phar \\\n && chmod +x phpcpd.phar \\\n && mv phpcpd.phar /usr/local/bin/phpcpd\n#   install phpmetrics\nRUN wget https://github.com/phpmetrics/PhpMetrics/raw/master/build/phpmetrics.phar \\\n && chmod +x phpmetrics.phar \\\n && mv phpmetrics.phar /usr/local/bin/phpmetrics\n#   Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\n#   Our apache volume\nVOLUME /var/www/html\n#   create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n#   Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#   Expose 80 for apache, 9000 for xdebug\nEXPOSE 80/tcp 9000/tcp\n#   Set a custom entrypoint.\nCOPY core/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"630a986b200d77ebc3330aab626b203d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/54775b0112a1702296175dabc28a27e54abcda6f.dockerfile"}