{"seed":2891576886,"processedDockerfileHash":"8d561d162b1918936fd9f517d7dd562e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:edge\nMAINTAINER Ahmad <ahmadt@gmail.com> https://github.com/mrahmadt/\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nENV VPN_USERNAME=\"username\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV VPN_OPTIONS=\"options\"\nENV CIDR_NETWORK=\"192.168.1.0/24\"\nENV VPN_DNS1=\"103.86.96.100\"\nENV VPN_DNS2=\"103.86.99.100\"\nRUN apk --update upgrade \\\n && apk add runit=2.1.2-r7 \\\n && rm -rf /var/cache/apk/* \\\n && mkdir -p /etc/service \\\n && mkdir /initser\nWORKDIR /initser\n#  ################\n#  ### dnsmasq ####\n#  ################\nRUN apk add dnsmasq=2.89-r4 --update \\\n && rm -rf /var/cache/apk/* \\\n && echo -e \"localise-queries\\nno-resolv\\ncache-size=10000\\nlocal-ttl=2\\nserver=${VPN_DNS1}\\nserver=${VPN_DNS2}\\ndomain-needed\\nbogus-priv\\nlocal-service\\nbind-interfaces\\nuser=root\\nconf-dir=/etc/dnsmasq.d/,*.conf\\n\" > /etc/dnsmasq.conf \\\n && mkdir /etc/service/dnsmasq \\\n && echo -e '#!/bin/sh' \"\\nexec dnsmasq -C /etc/dnsmasq.conf --keep-in-foreground\" > /etc/service/dnsmasq/run \\\n && chmod 755 /etc/service/dnsmasq/run\nCOPY start.sh /initser\nRUN chmod 755 /initser/start.sh\n#  ###################\n#  #### SNIPROXY #####\n#  ###################\nRUN apk add sniproxy=0.6.1-r0 --update \\\n && rm -rf /var/cache/apk/* \\\n && echo -e \"user daemon\\npidfile /var/run/sniproxy.pid\\nlisten 80 {\\nproto http\\n}\\nlisten 443 {\\nproto tls\\n}\\ntable {\\n.* *\\n}\\nresolver {\\nnameserver 127.0.0.1\\nmode ipv4_only\\n}\\n\" > /etc/sniproxy/sniproxy.conf \\\n && mkdir /etc/service/sniproxy \\\n && touch /var/log/sniproxy-errors.log \\\n && touch /var/log/sniproxy-access.log \\\n && chmod 777 /var/log/sniproxy-errors.log \\\n && chmod 777 /var/log/sniproxy-access.log \\\n && echo -e '#!/bin/sh' \"\\nexec sniproxy -f -c /etc/sniproxy/sniproxy.conf\" > /etc/service/sniproxy/run \\\n && chmod 755 /etc/service/sniproxy/run\n#  ###################\n#  #### PYTHON3 ######\n#  ###################\nRUN set -x \\\n && apk add python3=3.11.3-r0 --no-cache \\\n && python3 -m ensurepip \\\n && rm -r /usr/lib/python*/ensurepip \\\n && pip3 install --upgrade pip setuptools \\\n && if [ ! -e /usr/bin/pip ] ; then ln -s pip3 /usr/bin/pip ; fi \\\n && if [[ ! -e /usr/bin/python ]] ; then ln -sf /usr/bin/python3 /usr/bin/python ; fi \\\n && rm -r /root/.cache\n#  ###################\n#  #### openpyn ######\n#  ###################\nRUN apk add openvpn=2.6.2-r0 unzip=6.0-r13 wget=1.21.3-r3 sudo=1.9.13_p3-r2 iputils=20221126-r1 expect=5.45.4-r3 --update \\\n && rm -rf /var/cache/apk/* \\\n && python3 -m pip install --upgrade openpyn \\\n && echo -e '#!/usr/bin/expect -f' > /initser/setup_openpyn.sh \\\n && echo -e \"\\n\\nset username [lindex $argv 0]\\nset password [lindex $argv 1]\\n\\nset timeout -1\\nspawn openpyn --init\\nmatch_max 100000\\nexpect \\\"*\\\"\\nexpect \\\"Enter your username\\\"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'send -- \"$username\\\\r\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'expect \"Enter the password\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'send -- \"$password\\\\r\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'expect \"*\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'send -- \"\\\\r\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e \"expect eof\\n\" >> /initser/setup_openpyn.sh \\\n && chmod 755 /initser/setup_openpyn.sh \\\n && mkdir /etc/service/openpyn \\\n && echo -e '#!/bin/sh' \"\\nexec openpyn $VPN_OPTIONS\" > /etc/service/openpyn/run \\\n && chmod 755 /etc/service/openpyn/run\n#   Final cleanup\nRUN rm -rf /var/cache/apk/* /tmp/* /var/tmp/*\nCMD [\"/initser/start.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:edge\nMAINTAINER Ahmad <ahmadt@gmail.com> https://github.com/mrahmadt/\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nENV VPN_USERNAME=\"username\"\nENV VPN_PASSWORD=\"password\"\nENV VPN_OPTIONS=\"options\"\nENV CIDR_NETWORK=\"192.168.1.0/24\"\nENV VPN_DNS1=\"103.86.96.100\"\nENV VPN_DNS2=\"103.86.99.100\"\nRUN apk --update upgrade \\\n && apk add runit \\\n && rm -rf /var/cache/apk/* \\\n && mkdir -p /etc/service \\\n && mkdir /initser\nWORKDIR /initser\n# ################\n# ### dnsmasq ####\n# ################\nRUN apk add --update dnsmasq \\\n && rm -rf /var/cache/apk/* \\\n && echo -e \"localise-queries\\nno-resolv\\ncache-size=10000\\nlocal-ttl=2\\nserver=${VPN_DNS1}\\nserver=${VPN_DNS2}\\ndomain-needed\\nbogus-priv\\nlocal-service\\nbind-interfaces\\nuser=root\\nconf-dir=/etc/dnsmasq.d/,*.conf\\n\" > /etc/dnsmasq.conf \\\n && mkdir /etc/service/dnsmasq \\\n && echo -e '#!/bin/sh' \"\\nexec dnsmasq -C /etc/dnsmasq.conf --keep-in-foreground\" > /etc/service/dnsmasq/run \\\n && chmod 755 /etc/service/dnsmasq/run\nCOPY start.sh /initser\nRUN chmod 755 /initser/start.sh\n# ###################\n# #### SNIPROXY #####\n# ###################\nRUN apk add --update sniproxy \\\n && rm -rf /var/cache/apk/* \\\n && echo -e \"user daemon\\npidfile /var/run/sniproxy.pid\\nlisten 80 {\\nproto http\\n}\\nlisten 443 {\\nproto tls\\n}\\ntable {\\n.* *\\n}\\nresolver {\\nnameserver 127.0.0.1\\nmode ipv4_only\\n}\\n\" > /etc/sniproxy/sniproxy.conf \\\n && mkdir /etc/service/sniproxy \\\n && touch /var/log/sniproxy-errors.log \\\n && touch /var/log/sniproxy-access.log \\\n && chmod 777 /var/log/sniproxy-errors.log \\\n && chmod 777 /var/log/sniproxy-access.log \\\n && echo -e '#!/bin/sh' \"\\nexec sniproxy -f -c /etc/sniproxy/sniproxy.conf\" > /etc/service/sniproxy/run \\\n && chmod 755 /etc/service/sniproxy/run\n# ###################\n# #### PYTHON3 ######\n# ###################\nRUN set -x \\\n && apk add --no-cache python3 \\\n && python3 -m ensurepip \\\n && rm -r /usr/lib/python*/ensurepip \\\n && pip3 install --upgrade pip setuptools \\\n && if [ ! -e /usr/bin/pip ] ; then ln -s pip3 /usr/bin/pip ; fi \\\n && if [[ ! -e /usr/bin/python ]] ; then ln -sf /usr/bin/python3 /usr/bin/python ; fi \\\n && rm -r /root/.cache\n# ###################\n# #### openpyn ######\n# ###################\nRUN apk add --update openvpn unzip wget sudo iputils expect \\\n && rm -rf /var/cache/apk/* \\\n && python3 -m pip install --upgrade openpyn \\\n && echo -e '#!/usr/bin/expect -f' > /initser/setup_openpyn.sh \\\n && echo -e \"\\n\\nset username [lindex $argv 0]\\nset password [lindex $argv 1]\\n\\nset timeout -1\\nspawn openpyn --init\\nmatch_max 100000\\nexpect \\\"*\\\"\\nexpect \\\"Enter your username\\\"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'send -- \"$username\\\\r\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'expect \"Enter the password\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'send -- \"$password\\\\r\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'expect \"*\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'send -- \"\\\\r\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e \"expect eof\\n\" >> /initser/setup_openpyn.sh \\\n && chmod 755 /initser/setup_openpyn.sh \\\n && mkdir /etc/service/openpyn \\\n && echo -e '#!/bin/sh' \"\\nexec openpyn $VPN_OPTIONS\" > /etc/service/openpyn/run \\\n && chmod 755 /etc/service/openpyn/run\n#  Final cleanup\nRUN rm -rf /var/cache/apk/* /tmp/* /var/tmp/*\nCMD [\"/initser/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"3a50b1547e6c027e29ea7bb3ac59f636","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:edge\nMAINTAINER Ahmad <ahmadt@gmail.com> https://github.com/mrahmadt/\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nENV VPN_USERNAME=\"username\"\nENV VPN_PASSWORD=\"password\"\nENV VPN_OPTIONS=\"options\"\nENV CIDR_NETWORK=\"192.168.1.0/24\"\nENV VPN_DNS1=\"103.86.96.100\"\nENV VPN_DNS2=\"103.86.99.100\"\nRUN apk --update upgrade \\\n && apk add runit \\\n && rm -rf /var/cache/apk/* \\\n && mkdir -p /etc/service \\\n && mkdir /initser\nWORKDIR /initser\n#  ################\n#  ### dnsmasq ####\n#  ################\nRUN apk add --update dnsmasq \\\n && rm -rf /var/cache/apk/* \\\n && echo -e \"localise-queries\\nno-resolv\\ncache-size=10000\\nlocal-ttl=2\\nserver=${VPN_DNS1}\\nserver=${VPN_DNS2}\\ndomain-needed\\nbogus-priv\\nlocal-service\\nbind-interfaces\\nuser=root\\nconf-dir=/etc/dnsmasq.d/,*.conf\\n\" > /etc/dnsmasq.conf \\\n && mkdir /etc/service/dnsmasq \\\n && echo -e '#!/bin/sh' \"\\nexec dnsmasq -C /etc/dnsmasq.conf --keep-in-foreground\" > /etc/service/dnsmasq/run \\\n && chmod 755 /etc/service/dnsmasq/run\nCOPY start.sh /initser\nRUN chmod 755 /initser/start.sh\n#  ###################\n#  #### SNIPROXY #####\n#  ###################\nRUN apk add --update sniproxy \\\n && rm -rf /var/cache/apk/* \\\n && echo -e \"user daemon\\npidfile /var/run/sniproxy.pid\\nlisten 80 {\\nproto http\\n}\\nlisten 443 {\\nproto tls\\n}\\ntable {\\n.* *\\n}\\nresolver {\\nnameserver 127.0.0.1\\nmode ipv4_only\\n}\\n\" > /etc/sniproxy/sniproxy.conf \\\n && mkdir /etc/service/sniproxy \\\n && touch /var/log/sniproxy-errors.log \\\n && touch /var/log/sniproxy-access.log \\\n && chmod 777 /var/log/sniproxy-errors.log \\\n && chmod 777 /var/log/sniproxy-access.log \\\n && echo -e '#!/bin/sh' \"\\nexec sniproxy -f -c /etc/sniproxy/sniproxy.conf\" > /etc/service/sniproxy/run \\\n && chmod 755 /etc/service/sniproxy/run\n#  ###################\n#  #### PYTHON3 ######\n#  ###################\nRUN set -x \\\n && apk add --no-cache python3 \\\n && python3 -m ensurepip \\\n && rm -r /usr/lib/python*/ensurepip \\\n && pip3 install --upgrade pip setuptools \\\n && if [ ! -e /usr/bin/pip ] ; then ln -s pip3 /usr/bin/pip ; fi \\\n && if [[ ! -e /usr/bin/python ]] ; then ln -sf /usr/bin/python3 /usr/bin/python ; fi \\\n && rm -r /root/.cache\n#  ###################\n#  #### openpyn ######\n#  ###################\nRUN apk add --update openvpn unzip wget sudo iputils expect \\\n && rm -rf /var/cache/apk/* \\\n && python3 -m pip install --upgrade openpyn \\\n && echo -e '#!/usr/bin/expect -f' > /initser/setup_openpyn.sh \\\n && echo -e \"\\n\\nset username [lindex $argv 0]\\nset password [lindex $argv 1]\\n\\nset timeout -1\\nspawn openpyn --init\\nmatch_max 100000\\nexpect \\\"*\\\"\\nexpect \\\"Enter your username\\\"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'send -- \"$username\\\\r\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'expect \"Enter the password\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'send -- \"$password\\\\r\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'expect \"*\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e 'send -- \"\\\\r\"' \"\\n\" >> /initser/setup_openpyn.sh \\\n && echo -e \"expect eof\\n\" >> /initser/setup_openpyn.sh \\\n && chmod 755 /initser/setup_openpyn.sh \\\n && mkdir /etc/service/openpyn \\\n && echo -e '#!/bin/sh' \"\\nexec openpyn $VPN_OPTIONS\" > /etc/service/openpyn/run \\\n && chmod 755 /etc/service/openpyn/run\n#   Final cleanup\nRUN rm -rf /var/cache/apk/* /tmp/* /var/tmp/*\nCMD [\"/initser/start.sh\"]\n","originalDockerfileUglifiedHash":"45368f04adf22a718643231c212e52dc","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/45d8a754593a14b9e7d8b1bd4bea692104fb34ef.dockerfile"}