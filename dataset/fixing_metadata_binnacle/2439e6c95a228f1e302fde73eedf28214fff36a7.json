{"seed":877009682,"processedDockerfileHash":"ec310a3db896b50a0d42f848839f886b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM funcatron/frontend:latest\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends bzip2=1.0.8-5build1 unzip=6.0-27ubuntu1 wget=1.21.3-1ubuntu1 xz-utils=5.4.1-0.2 git=1:2.39.2-1ubuntu1 openjdk-8-jdk=8u362-ga-0ubuntu2 -y\n#   Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#  # From the OpenJDK docker file:\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\nRUN mkdir /app \\\n && wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein \\\n && chmod +x lein \\\n && mv lein /usr/local/bin \\\n && export LEIN_ROOT=ok\n#   From https://github.com/docker-library/rabbitmq/blob/d2bd71d329cacc3f010e665fbfd54f3ceaec1071/3.6/debian/Dockerfile\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r rabbitmq \\\n && useradd -r -d /var/lib/rabbitmq -m -g rabbitmq rabbitmq\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get install --no-install-recommends ca-certificates=20230311 wget=1.21.3-1ubuntu1 -y \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   Add the officially endorsed Erlang debian repository:\n#   See:\n#    - http://www.erlang.org/download.html\n#    - https://www.erlang-solutions.com/resources/download.html\nRUN set -ex ; key='434975BD900CCBE4F7EE1B1ED208507CA14F4FCA' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/erlang-solutions.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\nRUN echo 'deb http://packages.erlang-solutions.com/debian jessie contrib' > /etc/apt/sources.list.d/erlang.list\n#   install Erlang\nRUN apt-get update \\\n && apt-get install --no-install-recommends erlang-asn1=1:25.2.3+dfsg-1 erlang-base-hipe erlang-crypto=1:25.2.3+dfsg-1 erlang-eldap=1:25.2.3+dfsg-1 erlang-inets=1:25.2.3+dfsg-1 erlang-mnesia=1:25.2.3+dfsg-1 erlang-nox=1:25.2.3+dfsg-1 erlang-os-mon=1:25.2.3+dfsg-1 erlang-public-key=1:25.2.3+dfsg-1 erlang-ssl=1:25.2.3+dfsg-1 erlang-xmerl=1:25.2.3+dfsg-1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=\"-\" \\\n    RABBITMQ_SASL_LOGS=\"-\"\n#   https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\n#   http://www.rabbitmq.com/install-debian.html\n#   \"Please note that the word testing in this line refers to the state of our release of RabbitMQ, not any particular Debian distribution.\"\nRUN set -ex ; key='0A9AF2115F4687BD29803A206B73A36E6026DFCA' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/rabbitmq.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\nRUN echo 'deb http://www.rabbitmq.com/debian testing main' > /etc/apt/sources.list.d/rabbitmq.list\nENV RABBITMQ_VERSION=\"3.6.10\"\nENV RABBITMQ_DEBIAN_VERSION=\"3.6.10-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends rabbitmq-server=$RABBITMQ_DEBIAN_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#   /usr/sbin/rabbitmq-server has some irritating behavior, and only exists to \"su - rabbitmq /usr/lib/rabbitmq/bin/rabbitmq-server ...\"\nENV PATH=\"/usr/lib/rabbitmq/bin:$PATH\"\n#   set home so that any `--user` knows where to put the erlang cookie\nENV HOME=\"/var/lib/rabbitmq\"\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq \\\n && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq \\\n && chmod -R 777 /var/lib/rabbitmq /etc/rabbitmq\nVOLUME /var/lib/rabbitmq\n#   add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\nRUN ln -sf /usr/lib/rabbitmq/lib/rabbitmq_server-$RABBITMQ_VERSION/plugins /plugins\nRUN rabbitmq-plugins enable --offline rabbitmq_management\nRUN rabbitmq-plugins enable --offline rabbitmq_stomp\nRUN rabbitmq-plugins enable --offline rabbitmq_web_stomp\nCOPY tron /tmp/tron\nRUN cd /tmp \\\n && export LEIN_ROOT=yes \\\n && cd tron \\\n && lein uberjar \\\n && cp target/uberjar/tron-*-standalone.jar /root/tron.jar \\\n && cd /tmp \\\n && rm -rf master.zip tron-master tron\nCOPY all-in-one/docker-entrypoint.sh /usr/local/bin/\nCOPY all-in-one/start-all.sh /usr/local/bin/\nEXPOSE 80/tcp 3000/tcp\nENTRYPOINT [\"/usr/local/bin/start-all.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM funcatron/frontend:latest\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends bzip2 unzip wget xz-utils git openjdk-8-jdk -y\n#  Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n# # From the OpenJDK docker file:\n#  add a simple script that can auto-detect the appropriate JAVA_HOME value\n#  based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\nRUN mkdir /app \\\n && wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein \\\n && chmod +x lein \\\n && mv lein /usr/local/bin \\\n && export LEIN_ROOT=ok\n#  From https://github.com/docker-library/rabbitmq/blob/d2bd71d329cacc3f010e665fbfd54f3ceaec1071/3.6/debian/Dockerfile\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r rabbitmq \\\n && useradd -r -d /var/lib/rabbitmq -m -g rabbitmq rabbitmq\n#  grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get install ca-certificates wget -y \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#  Add the officially endorsed Erlang debian repository:\n#  See:\n#   - http://www.erlang.org/download.html\n#   - https://www.erlang-solutions.com/resources/download.html\nRUN set -ex ; key='434975BD900CCBE4F7EE1B1ED208507CA14F4FCA' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/erlang-solutions.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\nRUN echo 'deb http://packages.erlang-solutions.com/debian jessie contrib' > /etc/apt/sources.list.d/erlang.list\n#  install Erlang\nRUN apt-get update \\\n && apt-get install --no-install-recommends erlang-asn1 erlang-base-hipe erlang-crypto erlang-eldap erlang-inets erlang-mnesia erlang-nox erlang-os-mon erlang-public-key erlang-ssl erlang-xmerl -y \\\n && rm -rf /var/lib/apt/lists/*\n#  get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=\"-\" \\\n    RABBITMQ_SASL_LOGS=\"-\"\n#  https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\n#  http://www.rabbitmq.com/install-debian.html\n#  \"Please note that the word testing in this line refers to the state of our release of RabbitMQ, not any particular Debian distribution.\"\nRUN set -ex ; key='0A9AF2115F4687BD29803A206B73A36E6026DFCA' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/rabbitmq.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\nRUN echo 'deb http://www.rabbitmq.com/debian testing main' > /etc/apt/sources.list.d/rabbitmq.list\nENV RABBITMQ_VERSION=\"3.6.10\"\nENV RABBITMQ_DEBIAN_VERSION=\"3.6.10-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends rabbitmq-server=$RABBITMQ_DEBIAN_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#  /usr/sbin/rabbitmq-server has some irritating behavior, and only exists to \"su - rabbitmq /usr/lib/rabbitmq/bin/rabbitmq-server ...\"\nENV PATH=\"/usr/lib/rabbitmq/bin:$PATH\"\n#  set home so that any `--user` knows where to put the erlang cookie\nENV HOME=\"/var/lib/rabbitmq\"\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq \\\n && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq \\\n && chmod -R 777 /var/lib/rabbitmq /etc/rabbitmq\nVOLUME /var/lib/rabbitmq\n#  add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\nRUN ln -sf /usr/lib/rabbitmq/lib/rabbitmq_server-$RABBITMQ_VERSION/plugins /plugins\nRUN rabbitmq-plugins enable --offline rabbitmq_management\nRUN rabbitmq-plugins enable --offline rabbitmq_stomp\nRUN rabbitmq-plugins enable --offline rabbitmq_web_stomp\nCOPY tron /tmp/tron\nRUN cd /tmp \\\n && export LEIN_ROOT=yes \\\n && cd tron \\\n && lein uberjar \\\n && cp target/uberjar/tron-*-standalone.jar /root/tron.jar \\\n && cd /tmp \\\n && rm -rf master.zip tron-master tron\nCOPY all-in-one/docker-entrypoint.sh /usr/local/bin/\nCOPY all-in-one/start-all.sh /usr/local/bin/\nEXPOSE 80/tcp 3000/tcp\nENTRYPOINT [\"/usr/local/bin/start-all.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"653b3e44adad0b0a931352c834461b12","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM funcatron/frontend:latest\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends bzip2 unzip wget xz-utils git openjdk-8-jdk -y\n#   Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#  # From the OpenJDK docker file:\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\nRUN mkdir /app \\\n && wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein \\\n && chmod +x lein \\\n && mv lein /usr/local/bin \\\n && export LEIN_ROOT=ok\n#   From https://github.com/docker-library/rabbitmq/blob/d2bd71d329cacc3f010e665fbfd54f3ceaec1071/3.6/debian/Dockerfile\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r rabbitmq \\\n && useradd -r -d /var/lib/rabbitmq -m -g rabbitmq rabbitmq\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get install ca-certificates wget -y \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   Add the officially endorsed Erlang debian repository:\n#   See:\n#    - http://www.erlang.org/download.html\n#    - https://www.erlang-solutions.com/resources/download.html\nRUN set -ex ; key='434975BD900CCBE4F7EE1B1ED208507CA14F4FCA' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/erlang-solutions.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\nRUN echo 'deb http://packages.erlang-solutions.com/debian jessie contrib' > /etc/apt/sources.list.d/erlang.list\n#   install Erlang\nRUN apt-get update \\\n && apt-get install --no-install-recommends erlang-asn1 erlang-base-hipe erlang-crypto erlang-eldap erlang-inets erlang-mnesia erlang-nox erlang-os-mon erlang-public-key erlang-ssl erlang-xmerl -y \\\n && rm -rf /var/lib/apt/lists/*\n#   get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=\"-\" \\\n    RABBITMQ_SASL_LOGS=\"-\"\n#   https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\n#   http://www.rabbitmq.com/install-debian.html\n#   \"Please note that the word testing in this line refers to the state of our release of RabbitMQ, not any particular Debian distribution.\"\nRUN set -ex ; key='0A9AF2115F4687BD29803A206B73A36E6026DFCA' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/rabbitmq.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\nRUN echo 'deb http://www.rabbitmq.com/debian testing main' > /etc/apt/sources.list.d/rabbitmq.list\nENV RABBITMQ_VERSION=\"3.6.10\"\nENV RABBITMQ_DEBIAN_VERSION=\"3.6.10-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends rabbitmq-server=$RABBITMQ_DEBIAN_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#   /usr/sbin/rabbitmq-server has some irritating behavior, and only exists to \"su - rabbitmq /usr/lib/rabbitmq/bin/rabbitmq-server ...\"\nENV PATH=\"/usr/lib/rabbitmq/bin:$PATH\"\n#   set home so that any `--user` knows where to put the erlang cookie\nENV HOME=\"/var/lib/rabbitmq\"\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq \\\n && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq \\\n && chmod -R 777 /var/lib/rabbitmq /etc/rabbitmq\nVOLUME /var/lib/rabbitmq\n#   add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\nRUN ln -sf /usr/lib/rabbitmq/lib/rabbitmq_server-$RABBITMQ_VERSION/plugins /plugins\nRUN rabbitmq-plugins enable --offline rabbitmq_management\nRUN rabbitmq-plugins enable --offline rabbitmq_stomp\nRUN rabbitmq-plugins enable --offline rabbitmq_web_stomp\nCOPY tron /tmp/tron\nRUN cd /tmp \\\n && export LEIN_ROOT=yes \\\n && cd tron \\\n && lein uberjar \\\n && cp target/uberjar/tron-*-standalone.jar /root/tron.jar \\\n && cd /tmp \\\n && rm -rf master.zip tron-master tron\nCOPY all-in-one/docker-entrypoint.sh /usr/local/bin/\nCOPY all-in-one/start-all.sh /usr/local/bin/\nEXPOSE 80/tcp 3000/tcp\nENTRYPOINT [\"/usr/local/bin/start-all.sh\"]\n","originalDockerfileUglifiedHash":"e1494cc81630268e613246f69f9baa9c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2439e6c95a228f1e302fde73eedf28214fff36a7.dockerfile"}