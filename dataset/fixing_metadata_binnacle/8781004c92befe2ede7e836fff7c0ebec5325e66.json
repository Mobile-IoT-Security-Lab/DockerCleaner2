{"seed":3329819890,"processedDockerfileHash":"8d48fa0e61dd025822d5f2031f92f8d6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#  ################# BASE IMAGE ######################\nFROM biocontainers/biocontainers:v1.0.0_cv4\n#  ################# METADATA ######################\nLABEL base_image=\"biocontainers:v1.0.0_cv4\"\nLABEL version=\"2\"\nLABEL software=\"PyMol-Jupyter\"\nLABEL software.version=\"1.0.0\"\nLABEL about.summary=\"a portable way of interacting with PyMol via Jupyter notebook\"\nLABEL about.home=\"http://github.com/ocramz/jupyter-docker-pymol\"\nLABEL about.documentation=\"http://github.com/ocramz/jupyter-docker-pymol\"\nLABEL about.license_file=\"https://github.com/ocramz/jupyter-docker-pymol/blob/master/LICENSE\"\nLABEL about.license=\"SPDX:MIT\"\nLABEL about.tags=\"Proteomics\"\n#  ################# MAINTAINER ######################\nMAINTAINER Marco Zocca <zoccaNO.marcoSP@gmailAM.com>\n#   Environment variables\nENV PYMOL_VERSION_G=\"1.8\"\nENV PYMOL_VERSION=\"1.8.2.0\"\nENV PYMOL_SHA=\"6181024fe3f0107f57fcd02914b96747881272ade4fd0f3419784c972debce66\"\nENV TINI_VER=\"v0.9.0\"\nENV TINI_SHA=\"faafbfb5b079303691a939a747d7f60591f2143164093727e870b289a44d9872\"\nENV MINICONDA_VER_G=\"3\"\nENV MINICONDA_VER=\"3.19.0\"\nENV MINICONDA_VER_BUMP=\"3.19.1\"\nENV MINICONDA_SHA=\"9ea57c0fdf481acf89d816184f969b04bc44dea27b258c4e86b1e3a25ff26aa0\"\nENV NOTEBOOK_VER=\"4.2\"\nENV JUPYTERHUB_VER=\"0.5\"\nENV USER=\"biodocker\"\nENV IPYNBS_DIR=\"/home/${USER}/notebooks/iPyMol\"\nENV DL_DIR=\"/home/${USER}/tmp\"\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"${CONDA_DIR}/bin:${PATH}\"\nENV SHELL=\"/bin/bash\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nUSER root\n#   Setup `biodocker` home directory\nRUN mkdir -p ${CONDA_DIR} \\\n && chown ${USER} ${CONDA_DIR} \\\n && mkdir -p ${DL_DIR} \\\n && chown ${USER} ${DL_DIR} \\\n && mkdir -p ${IPYNBS_DIR} \\\n && chown ${USER} ${IPYNBS_DIR} \\\n && mkdir /home/${USER}/work \\\n && chown ${USER} /home/${USER}/work \\\n && mkdir /home/${USER}/.jupyter \\\n && chown ${USER} /home/${USER}/.jupyter \\\n && mkdir /home/${USER}/.local \\\n && chown ${USER} /home/${USER}/.local \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/${USER}/.curlrc \\\n && chown ${USER} /home/${USER}/.curlrc\n#   Add example notebook\nCOPY ipymol/ ${IPYNBS_DIR}\nRUN apt-get update \\\n && apt-get install --no-install-recommends pkg-config language-pack-en-base locales -y \\\n && echo -e \"en_US.UTF-8 UTF-8\\nLC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.gen \\\n && locale-gen \\\n && update-locale \\\n && dpkg-reconfigure locales \\\n && apt-get install --no-install-recommends sudo build-essential bzip2 ca-certificates emacs git jed libsm6 libxrender1 make pandoc python-pip python-dev python3 python3-dev python3-setuptools python3-zmq python3-pip texlive-latex-base texlive-latex-extra texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended freeglut3 freeglut3-dev glew-utils liblcms2-dev libfreetype6 libfreetype6-dev libglew-dev libjpeg8-dev libpng3 libpng12-dev libpng-dev libtiff5-dev libwebp-dev libxml2-dev pmw python-tk python3-scipy python3-nose tcl8.5-dev tk8.5-dev zlib1g-dev -y \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Use bash rather than sh\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nWORKDIR ${DL_DIR}\n#   Install Tini (Jupyter dep.)\nRUN wget --quiet https://github.com/krallin/tini/releases/download/${TINI_VER}/tini \\\n && echo \"${TINI_SHA} *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\nUSER ${USER}\n#   Install conda as `biodocker`\nRUN mkdir -p ${CONDA_DIR} \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh \\\n && echo \"${MINICONDA_SHA} *Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh\" | sha256sum -c - \\\n && /bin/bash Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh -f -b -p ${CONDA_DIR} \\\n && rm Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh \\\n && ${CONDA_DIR}/bin/conda install --quiet --yes conda==${MINICONDA_VER_BUMP} \\\n && ${CONDA_DIR}/bin/conda config --system --add channels conda-forge \\\n && conda clean -tipsy\n#   Install Jupyter notebook as `biodocker`\nRUN conda install --quiet --yes \"notebook=${NOTEBOOK_VER}*\" terminado \\\n && conda clean -tipsy\n#   Install JupyterHub to get the jupyterhub-singleuser startup script\nRUN pip install pip==23.1 --upgrade \\\n && pip install \"jupyterhub==${JUPYTERHUB_VER}\"\n#   PyMol\nRUN wget --no-verbose https://sourceforge.net/projects/pymol/files/pymol/${PYMOL_VERSION_G}/pymol-v${PYMOL_VERSION}.tar.bz2 \\\n && echo \"${PYMOL_SHA} pymol-v${PYMOL_VERSION}.tar.bz2\" | sha256sum -c - \\\n && tar jxf pymol-v${PYMOL_VERSION}.tar.bz2 \\\n && rm pymol-v* \\\n && cd pymol \\\n && python3 setup.py build install\n#   iPyMol + dependencies\nRUN pip3 install git+https://github.com/ocramz/ipymol.git@python3\nUSER root\n#   NB : Add local files as late as possible to avoid cache busting\n#   Start notebook server\nCOPY jupyter-minimal-notebook/start-notebook.sh /usr/local/bin/\n#   Start single-user notebook server for use with JupyterHub\nCOPY jupyter-minimal-notebook/start-singleuser.sh /usr/local/bin/\nCOPY jupyter-minimal-notebook/jupyter_notebook_config.py /home/${USER}/.jupyter/\nRUN chown -R ${USER}:users /home/${USER}/.jupyter\nRUN rm -rf ${DL_DIR}\n#   Switch back to user to avoid accidental container runs as root\nUSER ${USER}\n#   Expose port\nEXPOSE 8888/tcp\n#   working directory\nWORKDIR /home/${USER}/data\n#   mount shared volume\nVOLUME /home/${USER}/data\nENTRYPOINT [\"tini\", \"--\"]\n#   command to run when Docker image is run\nCMD [\"jupyter\", \"notebook\", \"--no-browser\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ################# BASE IMAGE ######################\nFROM biocontainers/biocontainers:v1.0.0_cv4\n# ################# METADATA ######################\nLABEL base_image=\"biocontainers:v1.0.0_cv4\"\nLABEL version=\"2\"\nLABEL software=\"PyMol-Jupyter\"\nLABEL software.version=\"1.0.0\"\nLABEL about.summary=\"a portable way of interacting with PyMol via Jupyter notebook\"\nLABEL about.home=\"http://github.com/ocramz/jupyter-docker-pymol\"\nLABEL about.documentation=\"http://github.com/ocramz/jupyter-docker-pymol\"\nLABEL about.license_file=\"https://github.com/ocramz/jupyter-docker-pymol/blob/master/LICENSE\"\nLABEL about.license=\"SPDX:MIT\"\nLABEL about.tags=\"Proteomics\"\n# ################# MAINTAINER ######################\nMAINTAINER Marco Zocca <zoccaNO.marcoSP@gmailAM.com>\n#  Environment variables\nENV PYMOL_VERSION_G=\"1.8\"\nENV PYMOL_VERSION=\"1.8.2.0\"\nENV PYMOL_SHA=\"6181024fe3f0107f57fcd02914b96747881272ade4fd0f3419784c972debce66\"\nENV TINI_VER=\"v0.9.0\"\nENV TINI_SHA=\"faafbfb5b079303691a939a747d7f60591f2143164093727e870b289a44d9872\"\nENV MINICONDA_VER_G=\"3\"\nENV MINICONDA_VER=\"3.19.0\"\nENV MINICONDA_VER_BUMP=\"3.19.1\"\nENV MINICONDA_SHA=\"9ea57c0fdf481acf89d816184f969b04bc44dea27b258c4e86b1e3a25ff26aa0\"\nENV NOTEBOOK_VER=\"4.2\"\nENV JUPYTERHUB_VER=\"0.5\"\nENV USER=\"biodocker\"\nENV IPYNBS_DIR=\"/home/${USER}/notebooks/iPyMol\"\nENV DL_DIR=\"/home/${USER}/tmp\"\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"${CONDA_DIR}/bin:${PATH}\"\nENV SHELL=\"/bin/bash\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nUSER root\n#  Setup `biodocker` home directory\nRUN mkdir -p ${CONDA_DIR} \\\n && chown ${USER} ${CONDA_DIR} \\\n && mkdir -p ${DL_DIR} \\\n && chown ${USER} ${DL_DIR} \\\n && mkdir -p ${IPYNBS_DIR} \\\n && chown ${USER} ${IPYNBS_DIR} \\\n && mkdir /home/${USER}/work \\\n && chown ${USER} /home/${USER}/work \\\n && mkdir /home/${USER}/.jupyter \\\n && chown ${USER} /home/${USER}/.jupyter \\\n && mkdir /home/${USER}/.local \\\n && chown ${USER} /home/${USER}/.local \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/${USER}/.curlrc \\\n && chown ${USER} /home/${USER}/.curlrc\n#  Add example notebook\nADD ipymol/ ${IPYNBS_DIR}\nRUN apt-get update \\\n && apt-get install --no-install-recommends pkg-config language-pack-en-base locales -y \\\n && echo -e \"en_US.UTF-8 UTF-8\\nLC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.gen \\\n && locale-gen \\\n && update-locale \\\n && dpkg-reconfigure locales \\\n && apt-get install --no-install-recommends sudo build-essential bzip2 ca-certificates emacs git jed libsm6 libxrender1 make pandoc python-pip python-dev python3 python3-dev python3-setuptools python3-zmq python3-pip texlive-latex-base texlive-latex-extra texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended freeglut3 freeglut3-dev glew-utils liblcms2-dev libfreetype6 libfreetype6-dev libglew-dev libjpeg8-dev libpng3 libpng12-dev libpng-dev libtiff5-dev libwebp-dev libxml2-dev pmw python-tk python3-scipy python3-nose tcl8.5-dev tk8.5-dev zlib1g-dev -y \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Use bash rather than sh\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nWORKDIR ${DL_DIR}\n#  Install Tini (Jupyter dep.)\nRUN wget --quiet https://github.com/krallin/tini/releases/download/${TINI_VER}/tini \\\n && echo \"${TINI_SHA} *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\nUSER ${USER}\n#  Install conda as `biodocker`\nRUN mkdir -p ${CONDA_DIR} \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh \\\n && echo \"${MINICONDA_SHA} *Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh\" | sha256sum -c - \\\n && /bin/bash Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh -f -b -p ${CONDA_DIR} \\\n && rm Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh \\\n && ${CONDA_DIR}/bin/conda install --quiet --yes conda==${MINICONDA_VER_BUMP} \\\n && ${CONDA_DIR}/bin/conda config --system --add channels conda-forge \\\n && conda clean -tipsy\n#  Install Jupyter notebook as `biodocker`\nRUN conda install --quiet --yes \"notebook=${NOTEBOOK_VER}*\" terminado \\\n && conda clean -tipsy\n#  Install JupyterHub to get the jupyterhub-singleuser startup script\nRUN pip install pip --upgrade \\\n && pip install \"jupyterhub==${JUPYTERHUB_VER}\"\n#  PyMol\nRUN wget --no-verbose https://sourceforge.net/projects/pymol/files/pymol/${PYMOL_VERSION_G}/pymol-v${PYMOL_VERSION}.tar.bz2 \\\n && echo \"${PYMOL_SHA} pymol-v${PYMOL_VERSION}.tar.bz2\" | sha256sum -c - \\\n && tar jxf pymol-v${PYMOL_VERSION}.tar.bz2 \\\n && rm pymol-v* \\\n && cd pymol \\\n && python3 setup.py build install\n#  iPyMol + dependencies\nRUN pip3 install git+https://github.com/ocramz/ipymol.git@python3\nUSER root\n#  NB : Add local files as late as possible to avoid cache busting\n#  Start notebook server\nCOPY jupyter-minimal-notebook/start-notebook.sh /usr/local/bin/\n#  Start single-user notebook server for use with JupyterHub\nCOPY jupyter-minimal-notebook/start-singleuser.sh /usr/local/bin/\nCOPY jupyter-minimal-notebook/jupyter_notebook_config.py /home/${USER}/.jupyter/\nRUN chown -R ${USER}:users /home/${USER}/.jupyter\nRUN rm -rf ${DL_DIR}\n#  Switch back to user to avoid accidental container runs as root\nUSER ${USER}\n#  Expose port\nEXPOSE 8888/tcp\n#  working directory\nWORKDIR /home/${USER}/data\n#  mount shared volume\nVOLUME /home/${USER}/data\nENTRYPOINT [\"tini\", \"--\"]\n#  command to run when Docker image is run\nCMD [\"jupyter\", \"notebook\", \"--no-browser\"]\n","injectedSmells":[],"originalDockerfileHash":"1e333bf7f65d61b05433e89dc67904f2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ################# BASE IMAGE ######################\nFROM biocontainers/biocontainers:v1.0.0_cv4\n#  ################# METADATA ######################\nLABEL base_image=\"biocontainers:v1.0.0_cv4\"\nLABEL version=\"2\"\nLABEL software=\"PyMol-Jupyter\"\nLABEL software.version=\"1.0.0\"\nLABEL about.summary=\"a portable way of interacting with PyMol via Jupyter notebook\"\nLABEL about.home=\"http://github.com/ocramz/jupyter-docker-pymol\"\nLABEL about.documentation=\"http://github.com/ocramz/jupyter-docker-pymol\"\nLABEL about.license_file=\"https://github.com/ocramz/jupyter-docker-pymol/blob/master/LICENSE\"\nLABEL about.license=\"SPDX:MIT\"\nLABEL about.tags=\"Proteomics\"\n#  ################# MAINTAINER ######################\nMAINTAINER Marco Zocca <zoccaNO.marcoSP@gmailAM.com>\n#   Environment variables\nENV PYMOL_VERSION_G=\"1.8\"\nENV PYMOL_VERSION=\"1.8.2.0\"\nENV PYMOL_SHA=\"6181024fe3f0107f57fcd02914b96747881272ade4fd0f3419784c972debce66\"\nENV TINI_VER=\"v0.9.0\"\nENV TINI_SHA=\"faafbfb5b079303691a939a747d7f60591f2143164093727e870b289a44d9872\"\nENV MINICONDA_VER_G=\"3\"\nENV MINICONDA_VER=\"3.19.0\"\nENV MINICONDA_VER_BUMP=\"3.19.1\"\nENV MINICONDA_SHA=\"9ea57c0fdf481acf89d816184f969b04bc44dea27b258c4e86b1e3a25ff26aa0\"\nENV NOTEBOOK_VER=\"4.2\"\nENV JUPYTERHUB_VER=\"0.5\"\nENV USER=\"biodocker\"\nENV IPYNBS_DIR=\"/home/${USER}/notebooks/iPyMol\"\nENV DL_DIR=\"/home/${USER}/tmp\"\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"${CONDA_DIR}/bin:${PATH}\"\nENV SHELL=\"/bin/bash\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nUSER root\n#   Setup `biodocker` home directory\nRUN mkdir -p ${CONDA_DIR} \\\n && chown ${USER} ${CONDA_DIR} \\\n && mkdir -p ${DL_DIR} \\\n && chown ${USER} ${DL_DIR} \\\n && mkdir -p ${IPYNBS_DIR} \\\n && chown ${USER} ${IPYNBS_DIR} \\\n && mkdir /home/${USER}/work \\\n && chown ${USER} /home/${USER}/work \\\n && mkdir /home/${USER}/.jupyter \\\n && chown ${USER} /home/${USER}/.jupyter \\\n && mkdir /home/${USER}/.local \\\n && chown ${USER} /home/${USER}/.local \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/${USER}/.curlrc \\\n && chown ${USER} /home/${USER}/.curlrc\n#   Add example notebook\nADD ipymol/ ${IPYNBS_DIR}\nRUN apt-get update \\\n && apt-get install --no-install-recommends pkg-config language-pack-en-base locales -y \\\n && echo -e \"en_US.UTF-8 UTF-8\\nLC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.gen \\\n && locale-gen \\\n && update-locale \\\n && dpkg-reconfigure locales \\\n && apt-get install --no-install-recommends sudo build-essential bzip2 ca-certificates emacs git jed libsm6 libxrender1 make pandoc python-pip python-dev python3 python3-dev python3-setuptools python3-zmq python3-pip texlive-latex-base texlive-latex-extra texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended freeglut3 freeglut3-dev glew-utils liblcms2-dev libfreetype6 libfreetype6-dev libglew-dev libjpeg8-dev libpng3 libpng12-dev libpng-dev libtiff5-dev libwebp-dev libxml2-dev pmw python-tk python3-scipy python3-nose tcl8.5-dev tk8.5-dev zlib1g-dev -y \\\n && apt-get clean \\\n && apt-get purge \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Use bash rather than sh\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nWORKDIR ${DL_DIR}\n#   Install Tini (Jupyter dep.)\nRUN wget --quiet https://github.com/krallin/tini/releases/download/${TINI_VER}/tini \\\n && echo \"${TINI_SHA} *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\nUSER ${USER}\n#   Install conda as `biodocker`\nRUN mkdir -p ${CONDA_DIR} \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh \\\n && echo \"${MINICONDA_SHA} *Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh\" | sha256sum -c - \\\n && /bin/bash Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh -f -b -p ${CONDA_DIR} \\\n && rm Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh \\\n && ${CONDA_DIR}/bin/conda install --quiet --yes conda==${MINICONDA_VER_BUMP} \\\n && ${CONDA_DIR}/bin/conda config --system --add channels conda-forge \\\n && conda clean -tipsy\n#   Install Jupyter notebook as `biodocker`\nRUN conda install --quiet --yes \"notebook=${NOTEBOOK_VER}*\" terminado \\\n && conda clean -tipsy\n#   Install JupyterHub to get the jupyterhub-singleuser startup script\nRUN pip install pip --upgrade \\\n && pip install \"jupyterhub==${JUPYTERHUB_VER}\"\n#   PyMol\nRUN wget --no-verbose https://sourceforge.net/projects/pymol/files/pymol/${PYMOL_VERSION_G}/pymol-v${PYMOL_VERSION}.tar.bz2 \\\n && echo \"${PYMOL_SHA} pymol-v${PYMOL_VERSION}.tar.bz2\" | sha256sum -c - \\\n && tar jxf pymol-v${PYMOL_VERSION}.tar.bz2 \\\n && rm pymol-v* \\\n && cd pymol \\\n && python3 setup.py build install\n#   iPyMol + dependencies\nRUN pip3 install git+https://github.com/ocramz/ipymol.git@python3\nUSER root\n#   NB : Add local files as late as possible to avoid cache busting\n#   Start notebook server\nCOPY jupyter-minimal-notebook/start-notebook.sh /usr/local/bin/\n#   Start single-user notebook server for use with JupyterHub\nCOPY jupyter-minimal-notebook/start-singleuser.sh /usr/local/bin/\nCOPY jupyter-minimal-notebook/jupyter_notebook_config.py /home/${USER}/.jupyter/\nRUN chown -R ${USER}:users /home/${USER}/.jupyter\nRUN rm -rf ${DL_DIR}\n#   Switch back to user to avoid accidental container runs as root\nUSER ${USER}\n#   Expose port\nEXPOSE 8888/tcp\n#   working directory\nWORKDIR /home/${USER}/data\n#   mount shared volume\nVOLUME /home/${USER}/data\nENTRYPOINT [\"tini\", \"--\"]\n#   command to run when Docker image is run\nCMD [\"jupyter\", \"notebook\", \"--no-browser\"]\n","originalDockerfileUglifiedHash":"eb8c8ee678128fa7da2ba8aa97d9ecfe","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8781004c92befe2ede7e836fff7c0ebec5325e66.dockerfile"}