{"seed":2061998689,"processedDockerfileHash":"53b00cb81745cae70722097b065dc394","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for Hyperledger fabric base image.\n#   If you need a peer node to run, please see the yeasy/hyperledger-peer image.\n#   Workdir is set to $GOPATH/src/github.com/hyperledger/fabric\n#   Data is stored under /var/hyperledger/db and /var/hyperledger/production\n#   Currently, the binary will look for config files at corresponding path.\nFROM golang:1.9\nLABEL maintainer=\"\\\"Baohua Yang <yangbaohua@gmail.com>\\\"\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Reused in all children images\nENV FABRIC_CFG_PATH=\"/etc/hyperledger/fabric\"\n#   Only useful for the building\nENV FABRIC_ROOT=\"$GOPATH/src/github.com/hyperledger/fabric\"\nENV ARCH=\"x86_64\"\n#   version for the base images\nENV BASEIMAGE_RELEASE=\"0.3.2\"\n#   BASE_VERSION is required in core.yaml to build and run cc container\nENV BASE_VERSION=\"1.0.6\"\n#   version for the peer/orderer binaries, the community version tracks the hash value like 1.0.0-snapshot-51b7e85\nENV PROJECT_VERSION=\"1.0.6\"\n#   generic builder environment: builder: $(DOCKER_NS)/fabric-ccenv:$(ARCH)-$(PROJECT_VERSION)\nENV DOCKER_NS=\"hyperledger\"\n#   for golang or car's baseos: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASEIMAGE_RELEASE)\nENV BASE_DOCKER_NS=\"hyperledger\"\nENV LD_FLAGS=\"-X github.com/hyperledger/fabric/common/metadata.Version=${PROJECT_VERSION}  -X github.com/hyperledger/fabric/common/metadata.BaseVersion=${BASEIMAGE_RELEASE}  -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric  -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger  -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger  -linkmode external -extldflags '-static -lpthread'\"\nRUN mkdir -p /var/hyperledger/db /var/hyperledger/production /chaincode/input /chaincode/output $FABRIC_CFG_PATH\nRUN apt-get update \\\n && apt-get install --no-install-recommends libsnappy-dev zlib1g-dev libbz2-dev libltdl-dev -y \\\n && apt-get install --no-install-recommends tree jq -y \\\n && apt-get install --no-install-recommends unzip -y \\\n && rm -rf /var/cache/apt\n#   install chaintool\nRUN curl -L https://github.com/hyperledger/fabric-chaintool/releases/download/v0.10.3/chaintool > /usr/local/bin/chaintool \\\n && chmod a+x /usr/local/bin/chaintool\n#   install gotools\nRUN go get github.com/golang/protobuf/protoc-gen-go \\\n && go get github.com/kardianos/govendor \\\n && go get github.com/golang/lint/golint \\\n && go get golang.org/x/tools/cmd/goimports \\\n && go get github.com/onsi/ginkgo/ginkgo \\\n && go get github.com/axw/gocov/... \\\n && go get github.com/client9/misspell/cmd/misspell \\\n && go get github.com/AlekSi/gocov-xml\n#   clone hyperledger fabric code and add configuration files\nRUN mkdir -p $GOPATH/src/github.com/hyperledger \\\n && cd $GOPATH/src/github.com/hyperledger \\\n && wget https://github.com/hyperledger/fabric/archive/v${PROJECT_VERSION}.zip \\\n && unzip v${PROJECT_VERSION}.zip \\\n && rm v${PROJECT_VERSION}.zip \\\n && mv fabric-${PROJECT_VERSION} fabric \\\n && cp $FABRIC_ROOT/devenv/limits.conf /etc/security/limits.conf \\\n && cp -r $FABRIC_ROOT/sampleconfig/* $FABRIC_CFG_PATH\n#   temp resolve the incompatibility between golang 19.4 and old version of pkcs11 pkg\nRUN cd $FABRIC_ROOT \\\n && govendor fetch github.com/miekg/pkcs11\n#   install configtxgen, cryptogen and configtxlator\nRUN cd $FABRIC_ROOT/ \\\n && go install -ldflags \"${LD_FLAGS}\" github.com/hyperledger/fabric/common/configtx/tool/configtxgen \\\n && go install -ldflags \"${LD_FLAGS}\" github.com/hyperledger/fabric/common/tools/cryptogen \\\n && go install -ldflags \"${LD_FLAGS}\" github.com/hyperledger/fabric/common/tools/configtxlator\n#   Install block-listener\nRUN cd $FABRIC_ROOT/examples/events/block-listener \\\n && go build \\\n && mv block-listener $GOPATH/bin\n#   The data and config dir, can map external one with -v\nVOLUME /var/hyperledger\n#  VOLUME /etc/hyperledger/fabric\n#   this is only a workaround for current hard-coded problem when using as fabric-baseimage.\nRUN ln -s $GOPATH /opt/gopath\n#   temporarily fix the `go list` complain problem, which is required in chaincode packaging, see core/chaincode/platforms/golang/platform.go#GetDepoymentPayload\nENV GOROOT=\"/usr/local/go\"\nWORKDIR $FABRIC_ROOT\nLABEL org.hyperledger.fabric.version=\"${PROJECT_VERSION}\" \\\n      org.hyperledger.fabric.base.version=\"${BASEIMAGE_RELEASE}\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for Hyperledger fabric base image.\n#  If you need a peer node to run, please see the yeasy/hyperledger-peer image.\n#  Workdir is set to $GOPATH/src/github.com/hyperledger/fabric\n#  Data is stored under /var/hyperledger/db and /var/hyperledger/production\n#  Currently, the binary will look for config files at corresponding path.\nFROM golang:1.9\nLABEL maintainer=\"\\\"Baohua Yang <yangbaohua@gmail.com>\\\"\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Reused in all children images\nENV FABRIC_CFG_PATH=\"/etc/hyperledger/fabric\"\n#  Only useful for the building\nENV FABRIC_ROOT=\"$GOPATH/src/github.com/hyperledger/fabric\"\nENV ARCH=\"x86_64\"\n#  version for the base images\nENV BASEIMAGE_RELEASE=\"0.3.2\"\n#  BASE_VERSION is required in core.yaml to build and run cc container\nENV BASE_VERSION=\"1.0.6\"\n#  version for the peer/orderer binaries, the community version tracks the hash value like 1.0.0-snapshot-51b7e85\nENV PROJECT_VERSION=\"1.0.6\"\n#  generic builder environment: builder: $(DOCKER_NS)/fabric-ccenv:$(ARCH)-$(PROJECT_VERSION)\nENV DOCKER_NS=\"hyperledger\"\n#  for golang or car's baseos: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASEIMAGE_RELEASE)\nENV BASE_DOCKER_NS=\"hyperledger\"\nENV LD_FLAGS=\"-X github.com/hyperledger/fabric/common/metadata.Version=${PROJECT_VERSION}  -X github.com/hyperledger/fabric/common/metadata.BaseVersion=${BASEIMAGE_RELEASE}  -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric  -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger  -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger  -linkmode external -extldflags '-static -lpthread'\"\nRUN mkdir -p /var/hyperledger/db /var/hyperledger/production /chaincode/input /chaincode/output $FABRIC_CFG_PATH\nRUN apt-get update \\\n && apt-get install libsnappy-dev zlib1g-dev libbz2-dev libltdl-dev -y \\\n && apt-get install tree jq -y \\\n && apt-get install unzip -y \\\n && rm -rf /var/cache/apt\n#  install chaintool\nRUN curl -L https://github.com/hyperledger/fabric-chaintool/releases/download/v0.10.3/chaintool > /usr/local/bin/chaintool \\\n && chmod a+x /usr/local/bin/chaintool\n#  install gotools\nRUN go get github.com/golang/protobuf/protoc-gen-go \\\n && go get github.com/kardianos/govendor \\\n && go get github.com/golang/lint/golint \\\n && go get golang.org/x/tools/cmd/goimports \\\n && go get github.com/onsi/ginkgo/ginkgo \\\n && go get github.com/axw/gocov/... \\\n && go get github.com/client9/misspell/cmd/misspell \\\n && go get github.com/AlekSi/gocov-xml\n#  clone hyperledger fabric code and add configuration files\nRUN mkdir -p $GOPATH/src/github.com/hyperledger \\\n && cd $GOPATH/src/github.com/hyperledger \\\n && wget https://github.com/hyperledger/fabric/archive/v${PROJECT_VERSION}.zip \\\n && unzip v${PROJECT_VERSION}.zip \\\n && rm v${PROJECT_VERSION}.zip \\\n && mv fabric-${PROJECT_VERSION} fabric \\\n && cp $FABRIC_ROOT/devenv/limits.conf /etc/security/limits.conf \\\n && cp -r $FABRIC_ROOT/sampleconfig/* $FABRIC_CFG_PATH\n#  temp resolve the incompatibility between golang 19.4 and old version of pkcs11 pkg\nRUN cd $FABRIC_ROOT \\\n && govendor fetch github.com/miekg/pkcs11\n#  install configtxgen, cryptogen and configtxlator\nRUN cd $FABRIC_ROOT/ \\\n && go install -ldflags \"${LD_FLAGS}\" github.com/hyperledger/fabric/common/configtx/tool/configtxgen \\\n && go install -ldflags \"${LD_FLAGS}\" github.com/hyperledger/fabric/common/tools/cryptogen \\\n && go install -ldflags \"${LD_FLAGS}\" github.com/hyperledger/fabric/common/tools/configtxlator\n#  Install block-listener\nRUN cd $FABRIC_ROOT/examples/events/block-listener \\\n && go build \\\n && mv block-listener $GOPATH/bin\n#  The data and config dir, can map external one with -v\nVOLUME /var/hyperledger\n# VOLUME /etc/hyperledger/fabric\n#  this is only a workaround for current hard-coded problem when using as fabric-baseimage.\nRUN ln -s $GOPATH /opt/gopath\n#  temporarily fix the `go list` complain problem, which is required in chaincode packaging, see core/chaincode/platforms/golang/platform.go#GetDepoymentPayload\nENV GOROOT=\"/usr/local/go\"\nWORKDIR $FABRIC_ROOT\nLABEL org.hyperledger.fabric.version=\"${PROJECT_VERSION}\" \\\n      org.hyperledger.fabric.base.version=\"${BASEIMAGE_RELEASE}\"\n","injectedSmells":[],"originalDockerfileHash":"8b6b0ebdd01ce2bc1f71c3c27ae79a61","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for Hyperledger fabric base image.\n#   If you need a peer node to run, please see the yeasy/hyperledger-peer image.\n#   Workdir is set to $GOPATH/src/github.com/hyperledger/fabric\n#   Data is stored under /var/hyperledger/db and /var/hyperledger/production\n#   Currently, the binary will look for config files at corresponding path.\nFROM golang:1.9\nLABEL maintainer=\"\\\"Baohua Yang <yangbaohua@gmail.com>\\\"\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Reused in all children images\nENV FABRIC_CFG_PATH=\"/etc/hyperledger/fabric\"\n#   Only useful for the building\nENV FABRIC_ROOT=\"$GOPATH/src/github.com/hyperledger/fabric\"\nENV ARCH=\"x86_64\"\n#   version for the base images\nENV BASEIMAGE_RELEASE=\"0.3.2\"\n#   BASE_VERSION is required in core.yaml to build and run cc container\nENV BASE_VERSION=\"1.0.6\"\n#   version for the peer/orderer binaries, the community version tracks the hash value like 1.0.0-snapshot-51b7e85\nENV PROJECT_VERSION=\"1.0.6\"\n#   generic builder environment: builder: $(DOCKER_NS)/fabric-ccenv:$(ARCH)-$(PROJECT_VERSION)\nENV DOCKER_NS=\"hyperledger\"\n#   for golang or car's baseos: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASEIMAGE_RELEASE)\nENV BASE_DOCKER_NS=\"hyperledger\"\nENV LD_FLAGS=\"-X github.com/hyperledger/fabric/common/metadata.Version=${PROJECT_VERSION}  -X github.com/hyperledger/fabric/common/metadata.BaseVersion=${BASEIMAGE_RELEASE}  -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric  -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger  -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger  -linkmode external -extldflags '-static -lpthread'\"\nRUN mkdir -p /var/hyperledger/db /var/hyperledger/production /chaincode/input /chaincode/output $FABRIC_CFG_PATH\nRUN apt-get update \\\n && apt-get install libsnappy-dev zlib1g-dev libbz2-dev libltdl-dev -y \\\n && apt-get install tree jq -y \\\n && apt-get install unzip -y \\\n && rm -rf /var/cache/apt\n#   install chaintool\nRUN curl -L https://github.com/hyperledger/fabric-chaintool/releases/download/v0.10.3/chaintool > /usr/local/bin/chaintool \\\n && chmod a+x /usr/local/bin/chaintool\n#   install gotools\nRUN go get github.com/golang/protobuf/protoc-gen-go \\\n && go get github.com/kardianos/govendor \\\n && go get github.com/golang/lint/golint \\\n && go get golang.org/x/tools/cmd/goimports \\\n && go get github.com/onsi/ginkgo/ginkgo \\\n && go get github.com/axw/gocov/... \\\n && go get github.com/client9/misspell/cmd/misspell \\\n && go get github.com/AlekSi/gocov-xml\n#   clone hyperledger fabric code and add configuration files\nRUN mkdir -p $GOPATH/src/github.com/hyperledger \\\n && cd $GOPATH/src/github.com/hyperledger \\\n && wget https://github.com/hyperledger/fabric/archive/v${PROJECT_VERSION}.zip \\\n && unzip v${PROJECT_VERSION}.zip \\\n && rm v${PROJECT_VERSION}.zip \\\n && mv fabric-${PROJECT_VERSION} fabric \\\n && cp $FABRIC_ROOT/devenv/limits.conf /etc/security/limits.conf \\\n && cp -r $FABRIC_ROOT/sampleconfig/* $FABRIC_CFG_PATH\n#   temp resolve the incompatibility between golang 19.4 and old version of pkcs11 pkg\nRUN cd $FABRIC_ROOT \\\n && govendor fetch github.com/miekg/pkcs11\n#   install configtxgen, cryptogen and configtxlator\nRUN cd $FABRIC_ROOT/ \\\n && go install -ldflags \"${LD_FLAGS}\" github.com/hyperledger/fabric/common/configtx/tool/configtxgen \\\n && go install -ldflags \"${LD_FLAGS}\" github.com/hyperledger/fabric/common/tools/cryptogen \\\n && go install -ldflags \"${LD_FLAGS}\" github.com/hyperledger/fabric/common/tools/configtxlator\n#   Install block-listener\nRUN cd $FABRIC_ROOT/examples/events/block-listener \\\n && go build \\\n && mv block-listener $GOPATH/bin\n#   The data and config dir, can map external one with -v\nVOLUME /var/hyperledger\n#  VOLUME /etc/hyperledger/fabric\n#   this is only a workaround for current hard-coded problem when using as fabric-baseimage.\nRUN ln -s $GOPATH /opt/gopath\n#   temporarily fix the `go list` complain problem, which is required in chaincode packaging, see core/chaincode/platforms/golang/platform.go#GetDepoymentPayload\nENV GOROOT=\"/usr/local/go\"\nWORKDIR $FABRIC_ROOT\nLABEL org.hyperledger.fabric.version=\"${PROJECT_VERSION}\" \\\n      org.hyperledger.fabric.base.version=\"${BASEIMAGE_RELEASE}\"\n","originalDockerfileUglifiedHash":"ca118d7234ea1c31729cf2219455d112","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/571b006a8d6a3205e1a00e7b4f1dd38030d667ae.dockerfile"}