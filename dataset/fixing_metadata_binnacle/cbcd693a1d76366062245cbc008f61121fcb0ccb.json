{"seed":2265219692,"processedDockerfileHash":"a3077ec5700f5165a58dca0bd2a0b0ba","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ## BEG SCRIPT INFO\n#\n#   Header:\n#\n#           fname : \"Dockerfile\"\n#           cdate : \"12.07.2018\"\n#          author : \"Michał Żurawski <trimstray@gmail.com>\"\n#        tab_size : \"2\"\n#       soft_tabs : \"yes\"\n#\n#   Description:\n#\n#     This Dockerfile builds a static htrace.sh in a Docker container.\n#\n#     - converted Dockerfile to Alpine Linux\n#       author: https://github.com/davidneudorfer\n#\n#     For build:\n#       cd htrace.sh && build/build.sh\n#\n#     For init:\n#       docker run --rm -it --name htrace.sh htrace.sh -u https://nmap.org -h\n#\n#     For debug:\n#       docker exec -it htrace.sh /bin/bash\n#       docker run --rm -it --entrypoint /bin/bash --name htrace.sh htrace.sh\n#\n#   License:\n#\n#     htrace.sh, Copyright (C) 2018  Michał Żurawski\n#\n#     This program is free software: you can redistribute it and/or modify\n#     it under the terms of the GNU General Public License as published by\n#     the Free Software Foundation, either version 3 of the License, or\n#     (at your option) any later version.\n#\n#     This program is distributed in the hope that it will be useful,\n#     but WITHOUT ANY WARRANTY; without even the implied warranty of\n#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n#     GNU General Public License for more details.\n#\n#     You should have received a copy of the GNU General Public License\n#     along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n#  ## END SCRIPT INFO\nFROM golang:alpine AS golang\nRUN apk update \\\n && apk add git=2.38.4-r1 --no-cache\nRUN go get github.com/ssllabs/ssllabs-scan\nRUN go get github.com/maxmind/geoipupdate/cmd/geoipupdate\nRUN go get github.com/subfinder/subfinder\nFROM drwetter/testssl.sh:stable AS testssl\nFROM alpine:latest\nMAINTAINER trimstray \"trimstray@gmail.com\"\nRUN apk add bash=5.2.15-r0 bc=1.07.1-r2 bind-tools=9.18.13-r0 ca-certificates=20220614-r4 coreutils=9.1-r0 curl=7.88.1-r1 drill=1.8.3-r0 git=2.38.4-r1 gnupg=2.2.40-r0 ncurses=6.3_p20221119-r0 openssl=3.0.8-r3 procps=3.3.17-r2 unzip=6.0-r13 wget=1.21.3-r2 jq=1.6-r2 libmaxminddb=1.7.1-r0 python py-pip rsync=3.2.7-r0 --no-cache \\\n && rm -rf /var/cache/apk/*\nRUN apk add nmap=7.93-r0 nmap-nselibs=7.93-r0 nmap-scripts=7.93-r0 --no-cache \\\n && rm -rf /var/cache/apk/*\nRUN apk add php php7-curl php7-xml php7-dom --no-cache \\\n && rm -rf /var/cache/apk/*\nRUN apk add composer=2.4.4-r0 \\\n && composer global require bramus/mixed-content-scan \\\n && ln -s /root/.composer/vendor/bramus/mixed-content-scan/bin/mixed-content-scan /usr/bin/mixed-content-scan\nRUN apk add nodejs=18.14.2-r0 npm=9.1.2-r0 --no-cache \\\n && rm -rf /var/cache/apk/* \\\n && npm config set unsafe-perm true \\\n && npm install observatory-cli@0.7.1 -g\nRUN git clone https://github.com/ekultek/whatwaf.git /opt/whatwaf \\\n && cd /opt/whatwaf \\\n && chmod +x whatwaf.py \\\n && pip install -r requirements.txt \\\n && ./setup.sh install \\\n && cp ~/.whatwaf/.install/bin/whatwaf /usr/bin/whatwaf \\\n && ./setup.sh uninstall\nCOPY --from=golang /go/bin/ssllabs-scan /usr/bin/ssllabs-scan\nCOPY --from=golang /go/bin/geoipupdate /usr/bin/geoipupdate\nCOPY --from=golang /go/bin/subfinder /usr/bin/subfinder\nCOPY --from=testssl /usr/local/bin/testssl.sh /usr/bin/testssl.sh\nCOPY --from=testssl /home/testssl/etc/ /etc/testssl/etc/\nRUN mkdir -p /usr/local/etc/ \\\n && echo -en \"AccountID 0\\nLicenseKey 000000000000\\nEditionIDs GeoLite2-Country GeoLite2-City\" > /usr/local/etc/GeoIP.conf\nRUN mkdir -p /usr/local/share/GeoIP/ \\\n && geoipupdate\nRUN cp -R /usr/local/share/GeoIP /usr/share/\nENV TESTSSL_INSTALL_DIR=\"/etc/testssl\"\nWORKDIR /opt/htrace.sh\nCOPY bin /opt/htrace.sh/bin/\nCOPY lib /opt/htrace.sh/lib/\nCOPY src /opt/htrace.sh/src/\nCOPY static /opt/htrace.sh/static/\nCOPY dependencies.sh setup.sh config /opt/htrace.sh/\nRUN ./setup.sh install\nENTRYPOINT [\"/usr/local/bin/htrace.sh\"]\nCMD [\"--help\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ## BEG SCRIPT INFO\n#\n#  Header:\n#\n#          fname : \"Dockerfile\"\n#          cdate : \"12.07.2018\"\n#         author : \"Michał Żurawski <trimstray@gmail.com>\"\n#       tab_size : \"2\"\n#      soft_tabs : \"yes\"\n#\n#  Description:\n#\n#    This Dockerfile builds a static htrace.sh in a Docker container.\n#\n#    - converted Dockerfile to Alpine Linux\n#      author: https://github.com/davidneudorfer\n#\n#    For build:\n#      cd htrace.sh && build/build.sh\n#\n#    For init:\n#      docker run --rm -it --name htrace.sh htrace.sh -u https://nmap.org -h\n#\n#    For debug:\n#      docker exec -it htrace.sh /bin/bash\n#      docker run --rm -it --entrypoint /bin/bash --name htrace.sh htrace.sh\n#\n#  License:\n#\n#    htrace.sh, Copyright (C) 2018  Michał Żurawski\n#\n#    This program is free software: you can redistribute it and/or modify\n#    it under the terms of the GNU General Public License as published by\n#    the Free Software Foundation, either version 3 of the License, or\n#    (at your option) any later version.\n#\n#    This program is distributed in the hope that it will be useful,\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n#    GNU General Public License for more details.\n#\n#    You should have received a copy of the GNU General Public License\n#    along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n# ## END SCRIPT INFO\nFROM golang:alpine AS golang\nRUN apk update \\\n && apk add --no-cache git\nRUN go get github.com/ssllabs/ssllabs-scan\nRUN go get github.com/maxmind/geoipupdate/cmd/geoipupdate\nRUN go get github.com/subfinder/subfinder\nFROM drwetter/testssl.sh:stable AS testssl\nFROM alpine:latest\nMAINTAINER trimstray \"trimstray@gmail.com\"\nRUN apk add --no-cache bash bc bind-tools ca-certificates coreutils curl drill git gnupg ncurses openssl procps unzip wget jq libmaxminddb python py-pip rsync \\\n && rm -rf /var/cache/apk/*\nRUN apk add --no-cache nmap nmap-nselibs nmap-scripts \\\n && rm -rf /var/cache/apk/*\nRUN apk add --no-cache php php7-curl php7-xml php7-dom \\\n && rm -rf /var/cache/apk/*\nRUN apk add composer \\\n && composer global require bramus/mixed-content-scan \\\n && ln -s /root/.composer/vendor/bramus/mixed-content-scan/bin/mixed-content-scan /usr/bin/mixed-content-scan\nRUN apk add --no-cache nodejs npm \\\n && rm -rf /var/cache/apk/* \\\n && npm config set unsafe-perm true \\\n && npm install observatory-cli -g\nRUN git clone https://github.com/ekultek/whatwaf.git /opt/whatwaf \\\n && cd /opt/whatwaf \\\n && chmod +x whatwaf.py \\\n && pip install -r requirements.txt \\\n && ./setup.sh install \\\n && cp ~/.whatwaf/.install/bin/whatwaf /usr/bin/whatwaf \\\n && ./setup.sh uninstall\nCOPY --from=golang /go/bin/ssllabs-scan /usr/bin/ssllabs-scan\nCOPY --from=golang /go/bin/geoipupdate /usr/bin/geoipupdate\nCOPY --from=golang /go/bin/subfinder /usr/bin/subfinder\nCOPY --from=testssl /usr/local/bin/testssl.sh /usr/bin/testssl.sh\nCOPY --from=testssl /home/testssl/etc/ /etc/testssl/etc/\nRUN mkdir -p /usr/local/etc/ \\\n && echo -en \"AccountID 0\\nLicenseKey 000000000000\\nEditionIDs GeoLite2-Country GeoLite2-City\" > /usr/local/etc/GeoIP.conf\nRUN mkdir -p /usr/local/share/GeoIP/ \\\n && geoipupdate\nRUN cp -R /usr/local/share/GeoIP /usr/share/\nENV TESTSSL_INSTALL_DIR=\"/etc/testssl\"\nWORKDIR /opt/htrace.sh\nCOPY bin /opt/htrace.sh/bin/\nCOPY lib /opt/htrace.sh/lib/\nCOPY src /opt/htrace.sh/src/\nCOPY static /opt/htrace.sh/static/\nCOPY dependencies.sh setup.sh config /opt/htrace.sh/\nRUN ./setup.sh install\nENTRYPOINT [\"/usr/local/bin/htrace.sh\"]\nCMD [\"--help\"]\n","injectedSmells":[],"originalDockerfileHash":"642bff7e4e0d9f61877a272e8704826c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ## BEG SCRIPT INFO\n#\n#   Header:\n#\n#           fname : \"Dockerfile\"\n#           cdate : \"12.07.2018\"\n#          author : \"Michał Żurawski <trimstray@gmail.com>\"\n#        tab_size : \"2\"\n#       soft_tabs : \"yes\"\n#\n#   Description:\n#\n#     This Dockerfile builds a static htrace.sh in a Docker container.\n#\n#     - converted Dockerfile to Alpine Linux\n#       author: https://github.com/davidneudorfer\n#\n#     For build:\n#       cd htrace.sh && build/build.sh\n#\n#     For init:\n#       docker run --rm -it --name htrace.sh htrace.sh -u https://nmap.org -h\n#\n#     For debug:\n#       docker exec -it htrace.sh /bin/bash\n#       docker run --rm -it --entrypoint /bin/bash --name htrace.sh htrace.sh\n#\n#   License:\n#\n#     htrace.sh, Copyright (C) 2018  Michał Żurawski\n#\n#     This program is free software: you can redistribute it and/or modify\n#     it under the terms of the GNU General Public License as published by\n#     the Free Software Foundation, either version 3 of the License, or\n#     (at your option) any later version.\n#\n#     This program is distributed in the hope that it will be useful,\n#     but WITHOUT ANY WARRANTY; without even the implied warranty of\n#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n#     GNU General Public License for more details.\n#\n#     You should have received a copy of the GNU General Public License\n#     along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n#  ## END SCRIPT INFO\nFROM golang:alpine AS golang\nRUN apk update \\\n && apk add --no-cache git\nRUN go get github.com/ssllabs/ssllabs-scan\nRUN go get github.com/maxmind/geoipupdate/cmd/geoipupdate\nRUN go get github.com/subfinder/subfinder\nFROM drwetter/testssl.sh:stable AS testssl\nFROM alpine:latest\nMAINTAINER trimstray \"trimstray@gmail.com\"\nRUN apk add --no-cache bash bc bind-tools ca-certificates coreutils curl drill git gnupg ncurses openssl procps unzip wget jq libmaxminddb python py-pip rsync \\\n && rm -rf /var/cache/apk/*\nRUN apk add --no-cache nmap nmap-nselibs nmap-scripts \\\n && rm -rf /var/cache/apk/*\nRUN apk add --no-cache php php7-curl php7-xml php7-dom \\\n && rm -rf /var/cache/apk/*\nRUN apk add composer \\\n && composer global require bramus/mixed-content-scan \\\n && ln -s /root/.composer/vendor/bramus/mixed-content-scan/bin/mixed-content-scan /usr/bin/mixed-content-scan\nRUN apk add --no-cache nodejs npm \\\n && rm -rf /var/cache/apk/* \\\n && npm config set unsafe-perm true \\\n && npm install observatory-cli -g\nRUN git clone https://github.com/ekultek/whatwaf.git /opt/whatwaf \\\n && cd /opt/whatwaf \\\n && chmod +x whatwaf.py \\\n && pip install -r requirements.txt \\\n && ./setup.sh install \\\n && cp ~/.whatwaf/.install/bin/whatwaf /usr/bin/whatwaf \\\n && ./setup.sh uninstall\nCOPY --from=golang /go/bin/ssllabs-scan /usr/bin/ssllabs-scan\nCOPY --from=golang /go/bin/geoipupdate /usr/bin/geoipupdate\nCOPY --from=golang /go/bin/subfinder /usr/bin/subfinder\nCOPY --from=testssl /usr/local/bin/testssl.sh /usr/bin/testssl.sh\nCOPY --from=testssl /home/testssl/etc/ /etc/testssl/etc/\nRUN mkdir -p /usr/local/etc/ \\\n && echo -en \"AccountID 0\\nLicenseKey 000000000000\\nEditionIDs GeoLite2-Country GeoLite2-City\" > /usr/local/etc/GeoIP.conf\nRUN mkdir -p /usr/local/share/GeoIP/ \\\n && geoipupdate\nRUN cp -R /usr/local/share/GeoIP /usr/share/\nENV TESTSSL_INSTALL_DIR=\"/etc/testssl\"\nWORKDIR /opt/htrace.sh\nCOPY bin /opt/htrace.sh/bin/\nCOPY lib /opt/htrace.sh/lib/\nCOPY src /opt/htrace.sh/src/\nCOPY static /opt/htrace.sh/static/\nCOPY dependencies.sh setup.sh config /opt/htrace.sh/\nRUN ./setup.sh install\nENTRYPOINT [\"/usr/local/bin/htrace.sh\"]\nCMD [\"--help\"]\n","originalDockerfileUglifiedHash":"8f829da913fae63c4a3aa1867644462f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cbcd693a1d76366062245cbc008f61121fcb0ccb.dockerfile"}