{"seed":370521366,"processedDockerfileHash":"2b719d3d7dad3219d137827986b4733b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.2-fpm-alpine3.7\nMAINTAINER Dmitri Pisarev <dimaip@gmail.com>\nARG PHP_REDIS_VERSION=\"3.1.6\"\nARG PHP_YAML_VERSION=\"2.0.2\"\nARG PHP_XDEBUG_VERSION=\"2.6.0beta1\"\nARG S6_VERSION=\"1.21.2.2\"\nENV FLOW_REWRITEURLS=\"1\"\nENV COMPOSER_VERSION=\"1.6.2\"\nENV COMPOSER_HOME=\"/composer\"\nENV PATH=\"/composer/vendor/bin:$PATH\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Set default values for env vars used in init scripts, override them if needed\nENV DB_DATABASE=\"db\"\nENV DB_HOST=\"db\"\nENV DB_USER=\"admin\"\nENV DB_PASS=\"pass\"\nENV VERSION=\"master\"\n#   Basic build-time metadata as defined at http://label-schema.org\nLABEL org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"MIT\" \\\n      org.label-schema.name=\"Neos Alpine Docker Image\" \\\n      org.label-schema.url=\"https://github.com/psmb/docker-neos-alpine\" \\\n      org.label-schema.vcs-url=\"https://github.com/psmb/docker-neos-alpine\" \\\n      org.label-schema.vcs-type=\"Git\"\nRUN set -x \\\n && apk update \\\n && apk add tar=1.32-r0 rsync=3.1.3-r0 curl=7.61.1-r3 sed=4.4-r1 bash=4.4.19-r1 yaml=0.1.7-r0 python py-pip py-setuptools=33.1.1-r1 groff=1.22.3-r2 less=520-r0 mysql-client=10.1.41-r0 git=2.15.4-r0 nginx=1.12.2-r4 optipng=0.7.6-r1 freetype=2.8.1-r4 libjpeg-turbo-utils=1.5.3-r3 icu-dev=59.1-r1 openssh=7.5_p1-r10 pwgen=2.08-r0 sudo=1.8.21_p2-r1 s6=2.6.1.1-r0 \\\n && pip install awscli==1.27.114 \\\n && apk del py-pip py-setuptools \\\n && apk add libtool=2.4.6-r4 freetype-dev=2.8.1-r4 libpng-dev=1.6.37-r0 libjpeg-turbo-dev=1.5.3-r3 yaml-dev=0.1.7-r0 $PHPIZE_DEPS --virtual .phpize-deps \\\n && docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd pdo pdo_mysql mbstring opcache intl exif json tokenizer \\\n && pecl install redis-${PHP_REDIS_VERSION} yaml-${PHP_YAML_VERSION} xdebug-${PHP_XDEBUG_VERSION} \\\n && docker-php-ext-enable xdebug \\\n && docker-php-ext-enable redis \\\n && docker-php-ext-enable yaml \\\n && apk del .phpize-deps \\\n && curl -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && rm -rf /tmp/composer-setup.php \\\n && curl -s http://beard.famelo.com/ > /usr/local/bin/beard \\\n && chmod +x /usr/local/bin/beard \\\n && git config --global user.email \"server@server.com\" \\\n && git config --global user.name \"Server\" \\\n && rm -rf /var/cache/apk/*\n#   Copy configuration\nCOPY root /\n#   Download s6\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /tmp/ https://github.com/just-containers/s6-overlay/releases/download/v${S6_VERSION}/s6-overlay-amd64.tar.gz\nRUN tar xzf /tmp/s6-overlay-amd64.tar.gz -C / \\\n && rm /tmp/s6-overlay-amd64.tar.gz \\\n && echo \"xdebug.remote_enable=0\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.remote_connect_back=1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.max_nesting_level=512\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.remote_host=172.17.0.1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && deluser www-data \\\n && delgroup cdrw \\\n && addgroup -g 80 www-data \\\n && adduser -u 80 -G www-data -s /bin/bash -D www-data -h /data \\\n && rm -Rf /home/www-data \\\n && sed -i -e \"s#listen = 9000#listen = /var/run/php-fpm.sock#\" /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"clear_env = no\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"listen.owner = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"listen.group = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"listen.mode = 0660\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && chown 80:80 -R /var/lib/nginx \\\n && chmod +x /github-keys.sh \\\n && sed -i -r 's/.?UseDNS\\syes/UseDNS no/' /etc/ssh/sshd_config \\\n && sed -i -r 's/.?PasswordAuthentication.+/PasswordAuthentication no/' /etc/ssh/sshd_config \\\n && sed -i -r 's/.?ChallengeResponseAuthentication.+/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config \\\n && sed -i -r 's/.?PermitRootLogin.+/PermitRootLogin no/' /etc/ssh/sshd_config \\\n && sed -i '/secure_path/d' /etc/sudoers \\\n && echo 'www-data ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/www \\\n && /bin/bash -c \"source /init-php-conf.sh\"\n#   Expose ports\nEXPOSE 80/tcp 22/tcp\n#   Define working directory\nWORKDIR /data\n#   Define entrypoint and command\nENTRYPOINT [\"/init\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.2-fpm-alpine3.7\nMAINTAINER Dmitri Pisarev <dimaip@gmail.com>\nARG PHP_REDIS_VERSION=\"3.1.6\"\nARG PHP_YAML_VERSION=\"2.0.2\"\nARG PHP_XDEBUG_VERSION=\"2.6.0beta1\"\nARG S6_VERSION=\"1.21.2.2\"\nENV FLOW_REWRITEURLS=\"1\"\nENV COMPOSER_VERSION=\"1.6.2\"\nENV COMPOSER_HOME=\"/composer\"\nENV PATH=\"/composer/vendor/bin:$PATH\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\n#  Set default values for env vars used in init scripts, override them if needed\nENV DB_DATABASE=\"db\"\nENV DB_HOST=\"db\"\nENV DB_USER=\"admin\"\nENV DB_PASS=\"pass\"\nENV VERSION=\"master\"\n#  Basic build-time metadata as defined at http://label-schema.org\nLABEL org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"MIT\" \\\n      org.label-schema.name=\"Neos Alpine Docker Image\" \\\n      org.label-schema.url=\"https://github.com/psmb/docker-neos-alpine\" \\\n      org.label-schema.vcs-url=\"https://github.com/psmb/docker-neos-alpine\" \\\n      org.label-schema.vcs-type=\"Git\"\nRUN set -x \\\n && apk update \\\n && apk add tar rsync curl sed bash yaml python py-pip py-setuptools groff less mysql-client git nginx optipng freetype libjpeg-turbo-utils icu-dev openssh pwgen sudo s6 \\\n && pip install awscli \\\n && apk del py-pip py-setuptools \\\n && apk add --virtual .phpize-deps $PHPIZE_DEPS libtool freetype-dev libpng-dev libjpeg-turbo-dev yaml-dev \\\n && docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd pdo pdo_mysql mbstring opcache intl exif json tokenizer \\\n && pecl install redis-${PHP_REDIS_VERSION} yaml-${PHP_YAML_VERSION} xdebug-${PHP_XDEBUG_VERSION} \\\n && docker-php-ext-enable xdebug \\\n && docker-php-ext-enable redis \\\n && docker-php-ext-enable yaml \\\n && apk del .phpize-deps \\\n && curl -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && rm -rf /tmp/composer-setup.php \\\n && curl -s http://beard.famelo.com/ > /usr/local/bin/beard \\\n && chmod +x /usr/local/bin/beard \\\n && git config --global user.email \"server@server.com\" \\\n && git config --global user.name \"Server\" \\\n && rm -rf /var/cache/apk/*\n#  Copy configuration\nCOPY root /\n#  Download s6\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_VERSION}/s6-overlay-amd64.tar.gz /tmp/\nRUN tar xzf /tmp/s6-overlay-amd64.tar.gz -C / \\\n && rm /tmp/s6-overlay-amd64.tar.gz \\\n && echo \"xdebug.remote_enable=0\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.remote_connect_back=1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.max_nesting_level=512\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.remote_host=172.17.0.1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && deluser www-data \\\n && delgroup cdrw \\\n && addgroup -g 80 www-data \\\n && adduser -u 80 -G www-data -s /bin/bash -D www-data -h /data \\\n && rm -Rf /home/www-data \\\n && sed -i -e \"s#listen = 9000#listen = /var/run/php-fpm.sock#\" /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"clear_env = no\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"listen.owner = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"listen.group = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"listen.mode = 0660\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && chown 80:80 -R /var/lib/nginx \\\n && chmod +x /github-keys.sh \\\n && sed -i -r 's/.?UseDNS\\syes/UseDNS no/' /etc/ssh/sshd_config \\\n && sed -i -r 's/.?PasswordAuthentication.+/PasswordAuthentication no/' /etc/ssh/sshd_config \\\n && sed -i -r 's/.?ChallengeResponseAuthentication.+/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config \\\n && sed -i -r 's/.?PermitRootLogin.+/PermitRootLogin no/' /etc/ssh/sshd_config \\\n && sed -i '/secure_path/d' /etc/sudoers \\\n && echo 'www-data ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/www \\\n && /bin/bash -c \"source /init-php-conf.sh\"\n#  Expose ports\nEXPOSE 80/tcp 22/tcp\n#  Define working directory\nWORKDIR /data\n#  Define entrypoint and command\nENTRYPOINT [\"/init\"]\n","injectedSmells":[],"originalDockerfileHash":"6ac3039b619e40c77d68ab951615b516","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.2-fpm-alpine3.7\nMAINTAINER Dmitri Pisarev <dimaip@gmail.com>\nARG PHP_REDIS_VERSION=\"3.1.6\"\nARG PHP_YAML_VERSION=\"2.0.2\"\nARG PHP_XDEBUG_VERSION=\"2.6.0beta1\"\nARG S6_VERSION=\"1.21.2.2\"\nENV FLOW_REWRITEURLS=\"1\"\nENV COMPOSER_VERSION=\"1.6.2\"\nENV COMPOSER_HOME=\"/composer\"\nENV PATH=\"/composer/vendor/bin:$PATH\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Set default values for env vars used in init scripts, override them if needed\nENV DB_DATABASE=\"db\"\nENV DB_HOST=\"db\"\nENV DB_USER=\"admin\"\nENV DB_PASS=\"pass\"\nENV VERSION=\"master\"\n#   Basic build-time metadata as defined at http://label-schema.org\nLABEL org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"MIT\" \\\n      org.label-schema.name=\"Neos Alpine Docker Image\" \\\n      org.label-schema.url=\"https://github.com/psmb/docker-neos-alpine\" \\\n      org.label-schema.vcs-url=\"https://github.com/psmb/docker-neos-alpine\" \\\n      org.label-schema.vcs-type=\"Git\"\nRUN set -x \\\n && apk update \\\n && apk add tar rsync curl sed bash yaml python py-pip py-setuptools groff less mysql-client git nginx optipng freetype libjpeg-turbo-utils icu-dev openssh pwgen sudo s6 \\\n && pip install awscli \\\n && apk del py-pip py-setuptools \\\n && apk add --virtual .phpize-deps $PHPIZE_DEPS libtool freetype-dev libpng-dev libjpeg-turbo-dev yaml-dev \\\n && docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd pdo pdo_mysql mbstring opcache intl exif json tokenizer \\\n && pecl install redis-${PHP_REDIS_VERSION} yaml-${PHP_YAML_VERSION} xdebug-${PHP_XDEBUG_VERSION} \\\n && docker-php-ext-enable xdebug \\\n && docker-php-ext-enable redis \\\n && docker-php-ext-enable yaml \\\n && apk del .phpize-deps \\\n && curl -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && rm -rf /tmp/composer-setup.php \\\n && curl -s http://beard.famelo.com/ > /usr/local/bin/beard \\\n && chmod +x /usr/local/bin/beard \\\n && git config --global user.email \"server@server.com\" \\\n && git config --global user.name \"Server\" \\\n && rm -rf /var/cache/apk/*\n#   Copy configuration\nCOPY root /\n#   Download s6\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_VERSION}/s6-overlay-amd64.tar.gz /tmp/\nRUN tar xzf /tmp/s6-overlay-amd64.tar.gz -C / \\\n && rm /tmp/s6-overlay-amd64.tar.gz \\\n && echo \"xdebug.remote_enable=0\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.remote_connect_back=1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.max_nesting_level=512\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"xdebug.remote_host=172.17.0.1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n && deluser www-data \\\n && delgroup cdrw \\\n && addgroup -g 80 www-data \\\n && adduser -u 80 -G www-data -s /bin/bash -D www-data -h /data \\\n && rm -Rf /home/www-data \\\n && sed -i -e \"s#listen = 9000#listen = /var/run/php-fpm.sock#\" /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"clear_env = no\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"listen.owner = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"listen.group = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && echo \"listen.mode = 0660\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n && chown 80:80 -R /var/lib/nginx \\\n && chmod +x /github-keys.sh \\\n && sed -i -r 's/.?UseDNS\\syes/UseDNS no/' /etc/ssh/sshd_config \\\n && sed -i -r 's/.?PasswordAuthentication.+/PasswordAuthentication no/' /etc/ssh/sshd_config \\\n && sed -i -r 's/.?ChallengeResponseAuthentication.+/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config \\\n && sed -i -r 's/.?PermitRootLogin.+/PermitRootLogin no/' /etc/ssh/sshd_config \\\n && sed -i '/secure_path/d' /etc/sudoers \\\n && echo 'www-data ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/www \\\n && /bin/bash -c \"source /init-php-conf.sh\"\n#   Expose ports\nEXPOSE 80/tcp 22/tcp\n#   Define working directory\nWORKDIR /data\n#   Define entrypoint and command\nENTRYPOINT [\"/init\"]\n","originalDockerfileUglifiedHash":"fb8bd064b7a20774cd01cb681d34a563","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b00e85a3576ade2749455174580721001d7db396.dockerfile"}