{"seed":3647165999,"processedDockerfileHash":"0fdf4cc405d23bc1b56a3ad25f286b71","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch\nMAINTAINER keopx <keopx@keopx.net>\n#\n#   Step 1: Installation\n#\n#   Set frontend. We'll clean this later on!\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Locale\nENV LOCALE=\"es_ES.UTF-8\"\n#   GOTPL\nENV GOTPL_VER=\"0.1.5\"\n#   Default Document root.\nENV DEFAULT_ROOT=\"/var/www/html\"\nARG UID=1000\nARG GID=1000\nARG UNAME=keopx\n#   Set repositories\nRUN echo \"deb http://ftp.de.debian.org/debian/ stretch main non-free contrib\" > /etc/apt/sources.list \\\n && echo \"deb-src http://ftp.de.debian.org/debian/ stretch main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/ stretch/updates main contrib non-free\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://security.debian.org/ stretch/updates main contrib non-free\" >> /etc/apt/sources.list \\\n && : \\\n && apt-get -qqy upgrade\n#   Install some basic tools needed for deployment\nRUN (apt-get update ;apt-get install --no-install-recommends apt-utils=1.4.11 build-essential=12.3 debconf-utils=1.5.61 debconf=1.5.61 mysql-client=5.5.9999+default locales=2.24-11+deb9u4 curl=7.52.1-5+deb9u16 wget=1.18-5+deb9u3 unzip=6.0-21+deb9u2 patch=2.7.5-1+deb9u2 rsync=3.1.2-1+deb9u3 vim=2:8.0.0197-4+deb9u7 nano=2.7.4-1 openssh-client=1:7.4p1-10+deb9u7 git=1:2.11.0-3+deb9u7 bash-completion=1:2.1-4.3 locales=2.24-11+deb9u4 libjpeg-turbo-progs=1:1.5.1-2+deb9u2 libjpeg-progs pngcrush=1.7.85-1+b2 optipng=0.7.6-1+deb9u1 -yqq )\n#   Install locale\nRUN sed -i -e \"s/# $LOCALE/$LOCALE/\" /etc/locale.gen \\\n && echo \"LANG=$LOCALE\" > /etc/default/locale \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=$LOCALE\nRUN gotpl_url=\"https://github.com/wodby/gotpl/releases/download/${GOTPL_VER}/gotpl-linux-amd64-${GOTPL_VER}.tar.gz\" ; wget -qO- \"${gotpl_url}\" | tar xz -C /usr/local/bin\n#   Configure Sury sources\n#   @see https://www.noobunbox.net/serveur/auto-hebergement/installer-php-7-1-sous-debian-et-ubuntu\nRUN (apt-get update ;apt-get install --no-install-recommends apt-transport-https=1.4.11 lsb-release=9.20161125 ca-certificates=20200601~deb9u2 -yqq ) \\\n && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/php.list \\\n && apt-get update -qq \\\n && apt-get -qqy upgrade\n#   Install PHP7 with Xdebug (dev environment)\nRUN (apt-get update ;apt-get install --no-install-recommends php7.3 php7.3-bcmath php7.3-bz2 php7.3-curl php7.3-dev php7.3-gd php7.3-dom php7.3-imap php7.3-imagick php7.3-intl php7.3-json php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-oauth php7.3-odbc php7.3-uploadprogress php7.3-ssh2 php7.3-xml php7.3-yaml php7.3-solr php7.3-zip php7.3-apcu php7.3-opcache php7.3-redis php7.3-opcache php7.3-memcached php7.3-xdebug libapache2-mod-php7.3 -yqq )\n#     php7.3-memcache \t\\ # No exist\n#   Install manually xhprof\nRUN cd /tmp \\\n && wget https://github.com/Yaoguais/phpng-xhprof/archive/master.zip \\\n && unzip master.zip \\\n && cd phpng-xhprof-master \\\n && phpize7.3 \\\n && ./configure --with-php-config=/usr/bin/php-config7.3 \\\n && make \\\n && make install \\\n && mv /usr/lib/php/20180731/phpng_xhprof.so /usr/lib/php/20180731/xhprof.so \\\n && echo \"extension=xhprof.so\" > /etc/php/7.3/mods-available/xhprof.ini \\\n && echo \"xhprof.output_dir=/var/www/xhprof\" >> /etc/php/7.3/mods-available/xhprof.ini\n#   Install manually APC\nRUN echo \"extension=apcu.so\" > /etc/php/7.3/mods-available/apcu_bc.ini \\\n && echo \"extension=apc.so\" >> /etc/php/7.3/mods-available/apcu_bc.ini\n#   Install SMTP.\nRUN (apt-get update ;apt-get install --no-install-recommends ssmtp=2.64-8+b2 -y )\n#   Install Apache web server.\nRUN (apt-get update ;apt-get install --no-install-recommends apache2=2.4.25-3+deb9u13 -yqq )\n#\n#   Step 2: Configuration\n#\n#   Enable uploadprogress, imagick, redis and solr.\nRUN phpenmod uploadprogress imagick redis solr\n#   Disable by default apcu, apcu_bc, opcache, xdebug and xhprof. Use docker-compose.yml to add file.\nRUN phpdismod apcu apcu_bc opcache xdebug xhprof\n#   Remove all sites enabled\n#   RUN rm /etc/apache2/sites-enabled/*\n#   Configure needed apache modules and disable default site\nRUN a2dismod mpm_event cgi\nRUN a2enmod access_compat actions alias auth_basic authn_core authn_file authz_core authz_groupfile authz_host authz_user autoindex dir env expires filter headers mime negotiation php7.3 mpm_prefork reqtimeout rewrite setenvif status ssl\n#   without the following line we get \"AH00558: apache2: Could not reliably determine the server's fully qualified domain name\"\n#   autorise .htaccess files\nRUN sed -i '/<Directory \\/var\\/www\\/>/,/<\\/Directory>/ s/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf\n#   Install composer (latest version) | prestissimo to speed up composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && composer global require \"hirak/prestissimo:^0.3\"\n#  ## Install DRUSH (latest stable) ###\n#   Run this in your terminal to get the latest DRUSH project version:\nRUN composer global require drush/drush \\\n && ~/.composer/vendor/bin/drush init\n#  ## Install DRUPAL CONSOLE (latest version) ###\n#   Run this in your terminal to get the latest project version:\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal \\\n && drupal self-update\n#   Bash setup.\nRUN echo \". /usr/share/bash-completion/bash_completion\" >> ~/.bashrc \\\n && echo \"alias ll='ls -lahs'\" >> ~/.bashrc\n#\n#   Step 3: Clean the system\n#\n#   Cleanup some things.\nRUN apt-get -q autoclean \\\n && rm -rf /var/lib/apt/lists/*\n#\n#   Step 4: Run\n#\n#   Create 'keopx' user like local machime user.\nRUN groupadd -g $UID $GID ; useradd -m -u $UID -g $GID -s /bin/bash $UNAME ; usermod -aG www-data $UNAME ; echo \". /usr/share/bash-completion/bash_completion\" >> ~/.bashrc \\\n && echo \"alias ll='ls -lahs'\" >> /home/$UNAME/.bashrc\n#   Working dir\nWORKDIR ${DEFAULT_ROOT}\n#   Configure templates\nCOPY templates /etc/gotpl/\nCOPY scripts/apache2-foreground /usr/bin/\nEXPOSE 80/tcp 443/tcp\nCMD [\"apache2-foreground\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch\nMAINTAINER keopx <keopx@keopx.net>\n#\n#  Step 1: Installation\n#\n#  Set frontend. We'll clean this later on!\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Locale\nENV LOCALE=\"es_ES.UTF-8\"\n#  GOTPL\nENV GOTPL_VER=\"0.1.5\"\n#  Default Document root.\nENV DEFAULT_ROOT=\"/var/www/html\"\nARG UID=1000\nARG GID=1000\nARG UNAME=keopx\n#  Set repositories\nRUN echo \"deb http://ftp.de.debian.org/debian/ stretch main non-free contrib\" > /etc/apt/sources.list \\\n && echo \"deb-src http://ftp.de.debian.org/debian/ stretch main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/ stretch/updates main contrib non-free\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://security.debian.org/ stretch/updates main contrib non-free\" >> /etc/apt/sources.list \\\n && apt-get update -qq \\\n && apt-get -qqy upgrade\n#  Install some basic tools needed for deployment\nRUN apt-get install apt-utils build-essential debconf-utils debconf mysql-client locales curl wget unzip patch rsync vim nano openssh-client git bash-completion locales libjpeg-turbo-progs libjpeg-progs pngcrush optipng -yqq\n#  Install locale\nRUN sed -i -e \"s/# $LOCALE/$LOCALE/\" /etc/locale.gen \\\n && echo \"LANG=$LOCALE\" > /etc/default/locale \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=$LOCALE\nRUN gotpl_url=\"https://github.com/wodby/gotpl/releases/download/${GOTPL_VER}/gotpl-linux-amd64-${GOTPL_VER}.tar.gz\" ; wget -qO- \"${gotpl_url}\" | tar xz -C /usr/local/bin\n#  Configure Sury sources\n#  @see https://www.noobunbox.net/serveur/auto-hebergement/installer-php-7-1-sous-debian-et-ubuntu\nRUN apt-get install apt-transport-https lsb-release ca-certificates -yqq \\\n && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/php.list \\\n && apt-get update -qq \\\n && apt-get -qqy upgrade\n#  Install PHP7 with Xdebug (dev environment)\nRUN apt-get install php7.3 php7.3-bcmath php7.3-bz2 php7.3-curl php7.3-dev php7.3-gd php7.3-dom php7.3-imap php7.3-imagick php7.3-intl php7.3-json php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-oauth php7.3-odbc php7.3-uploadprogress php7.3-ssh2 php7.3-xml php7.3-yaml php7.3-solr php7.3-zip php7.3-apcu php7.3-opcache php7.3-redis php7.3-opcache php7.3-memcached php7.3-xdebug libapache2-mod-php7.3 -yqq\n#    php7.3-memcache \t\\ # No exist\n#  Install manually xhprof\nRUN cd /tmp \\\n && wget https://github.com/Yaoguais/phpng-xhprof/archive/master.zip \\\n && unzip master.zip \\\n && cd phpng-xhprof-master \\\n && phpize7.3 \\\n && ./configure --with-php-config=/usr/bin/php-config7.3 \\\n && make \\\n && make install \\\n && mv /usr/lib/php/20180731/phpng_xhprof.so /usr/lib/php/20180731/xhprof.so \\\n && echo \"extension=xhprof.so\" > /etc/php/7.3/mods-available/xhprof.ini \\\n && echo \"xhprof.output_dir=/var/www/xhprof\" >> /etc/php/7.3/mods-available/xhprof.ini\n#  Install manually APC\nRUN echo \"extension=apcu.so\" > /etc/php/7.3/mods-available/apcu_bc.ini \\\n && echo \"extension=apc.so\" >> /etc/php/7.3/mods-available/apcu_bc.ini\n#  Install SMTP.\nRUN apt-get install ssmtp -y\n#  Install Apache web server.\nRUN apt-get install apache2 -yqq\n#\n#  Step 2: Configuration\n#\n#  Enable uploadprogress, imagick, redis and solr.\nRUN phpenmod uploadprogress imagick redis solr\n#  Disable by default apcu, apcu_bc, opcache, xdebug and xhprof. Use docker-compose.yml to add file.\nRUN phpdismod apcu apcu_bc opcache xdebug xhprof\n#  Remove all sites enabled\n#  RUN rm /etc/apache2/sites-enabled/*\n#  Configure needed apache modules and disable default site\nRUN a2dismod mpm_event cgi\nRUN a2enmod access_compat actions alias auth_basic authn_core authn_file authz_core authz_groupfile authz_host authz_user autoindex dir env expires filter headers mime negotiation php7.3 mpm_prefork reqtimeout rewrite setenvif status ssl\n#  without the following line we get \"AH00558: apache2: Could not reliably determine the server's fully qualified domain name\"\n#  autorise .htaccess files\nRUN sed -i '/<Directory \\/var\\/www\\/>/,/<\\/Directory>/ s/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf\n#  Install composer (latest version) | prestissimo to speed up composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && composer global require \"hirak/prestissimo:^0.3\"\n# ## Install DRUSH (latest stable) ###\n#  Run this in your terminal to get the latest DRUSH project version:\nRUN composer global require drush/drush \\\n && ~/.composer/vendor/bin/drush init\n# ## Install DRUPAL CONSOLE (latest version) ###\n#  Run this in your terminal to get the latest project version:\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal \\\n && drupal self-update\n#  Bash setup.\nRUN echo \". /usr/share/bash-completion/bash_completion\" >> ~/.bashrc \\\n && echo \"alias ll='ls -lahs'\" >> ~/.bashrc\n#\n#  Step 3: Clean the system\n#\n#  Cleanup some things.\nRUN apt-get -q autoclean \\\n && rm -rf /var/lib/apt/lists/*\n#\n#  Step 4: Run\n#\n#  Create 'keopx' user like local machime user.\nRUN groupadd -g $UID $GID ; useradd -m -u $UID -g $GID -s /bin/bash $UNAME ; usermod -aG www-data $UNAME ; echo \". /usr/share/bash-completion/bash_completion\" >> ~/.bashrc \\\n && echo \"alias ll='ls -lahs'\" >> /home/$UNAME/.bashrc\n#  Working dir\nWORKDIR ${DEFAULT_ROOT}\n#  Configure templates\nCOPY templates /etc/gotpl/\nCOPY scripts/apache2-foreground /usr/bin/\nEXPOSE 80/tcp 443/tcp\nCMD [\"apache2-foreground\"]\n","injectedSmells":[],"originalDockerfileHash":"aaa4382dc10f565abda66215d963562f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch\nMAINTAINER keopx <keopx@keopx.net>\n#\n#   Step 1: Installation\n#\n#   Set frontend. We'll clean this later on!\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Locale\nENV LOCALE=\"es_ES.UTF-8\"\n#   GOTPL\nENV GOTPL_VER=\"0.1.5\"\n#   Default Document root.\nENV DEFAULT_ROOT=\"/var/www/html\"\nARG UID=1000\nARG GID=1000\nARG UNAME=keopx\n#   Set repositories\nRUN echo \"deb http://ftp.de.debian.org/debian/ stretch main non-free contrib\" > /etc/apt/sources.list \\\n && echo \"deb-src http://ftp.de.debian.org/debian/ stretch main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/ stretch/updates main contrib non-free\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://security.debian.org/ stretch/updates main contrib non-free\" >> /etc/apt/sources.list \\\n && apt-get update -qq \\\n && apt-get -qqy upgrade\n#   Install some basic tools needed for deployment\nRUN apt-get install apt-utils build-essential debconf-utils debconf mysql-client locales curl wget unzip patch rsync vim nano openssh-client git bash-completion locales libjpeg-turbo-progs libjpeg-progs pngcrush optipng -yqq\n#   Install locale\nRUN sed -i -e \"s/# $LOCALE/$LOCALE/\" /etc/locale.gen \\\n && echo \"LANG=$LOCALE\" > /etc/default/locale \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=$LOCALE\nRUN gotpl_url=\"https://github.com/wodby/gotpl/releases/download/${GOTPL_VER}/gotpl-linux-amd64-${GOTPL_VER}.tar.gz\" ; wget -qO- \"${gotpl_url}\" | tar xz -C /usr/local/bin\n#   Configure Sury sources\n#   @see https://www.noobunbox.net/serveur/auto-hebergement/installer-php-7-1-sous-debian-et-ubuntu\nRUN apt-get install apt-transport-https lsb-release ca-certificates -yqq \\\n && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/php.list \\\n && apt-get update -qq \\\n && apt-get -qqy upgrade\n#   Install PHP7 with Xdebug (dev environment)\nRUN apt-get install php7.3 php7.3-bcmath php7.3-bz2 php7.3-curl php7.3-dev php7.3-gd php7.3-dom php7.3-imap php7.3-imagick php7.3-intl php7.3-json php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-oauth php7.3-odbc php7.3-uploadprogress php7.3-ssh2 php7.3-xml php7.3-yaml php7.3-solr php7.3-zip php7.3-apcu php7.3-opcache php7.3-redis php7.3-opcache php7.3-memcached php7.3-xdebug libapache2-mod-php7.3 -yqq\n#     php7.3-memcache \t\\ # No exist\n#   Install manually xhprof\nRUN cd /tmp \\\n && wget https://github.com/Yaoguais/phpng-xhprof/archive/master.zip \\\n && unzip master.zip \\\n && cd phpng-xhprof-master \\\n && phpize7.3 \\\n && ./configure --with-php-config=/usr/bin/php-config7.3 \\\n && make \\\n && make install \\\n && mv /usr/lib/php/20180731/phpng_xhprof.so /usr/lib/php/20180731/xhprof.so \\\n && echo \"extension=xhprof.so\" > /etc/php/7.3/mods-available/xhprof.ini \\\n && echo \"xhprof.output_dir=/var/www/xhprof\" >> /etc/php/7.3/mods-available/xhprof.ini\n#   Install manually APC\nRUN echo \"extension=apcu.so\" > /etc/php/7.3/mods-available/apcu_bc.ini \\\n && echo \"extension=apc.so\" >> /etc/php/7.3/mods-available/apcu_bc.ini\n#   Install SMTP.\nRUN apt-get install ssmtp -y\n#   Install Apache web server.\nRUN apt-get install apache2 -yqq\n#\n#   Step 2: Configuration\n#\n#   Enable uploadprogress, imagick, redis and solr.\nRUN phpenmod uploadprogress imagick redis solr\n#   Disable by default apcu, apcu_bc, opcache, xdebug and xhprof. Use docker-compose.yml to add file.\nRUN phpdismod apcu apcu_bc opcache xdebug xhprof\n#   Remove all sites enabled\n#   RUN rm /etc/apache2/sites-enabled/*\n#   Configure needed apache modules and disable default site\nRUN a2dismod mpm_event cgi\nRUN a2enmod access_compat actions alias auth_basic authn_core authn_file authz_core authz_groupfile authz_host authz_user autoindex dir env expires filter headers mime negotiation php7.3 mpm_prefork reqtimeout rewrite setenvif status ssl\n#   without the following line we get \"AH00558: apache2: Could not reliably determine the server's fully qualified domain name\"\n#   autorise .htaccess files\nRUN sed -i '/<Directory \\/var\\/www\\/>/,/<\\/Directory>/ s/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf\n#   Install composer (latest version) | prestissimo to speed up composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && composer global require \"hirak/prestissimo:^0.3\"\n#  ## Install DRUSH (latest stable) ###\n#   Run this in your terminal to get the latest DRUSH project version:\nRUN composer global require drush/drush \\\n && ~/.composer/vendor/bin/drush init\n#  ## Install DRUPAL CONSOLE (latest version) ###\n#   Run this in your terminal to get the latest project version:\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal \\\n && drupal self-update\n#   Bash setup.\nRUN echo \". /usr/share/bash-completion/bash_completion\" >> ~/.bashrc \\\n && echo \"alias ll='ls -lahs'\" >> ~/.bashrc\n#\n#   Step 3: Clean the system\n#\n#   Cleanup some things.\nRUN apt-get -q autoclean \\\n && rm -rf /var/lib/apt/lists/*\n#\n#   Step 4: Run\n#\n#   Create 'keopx' user like local machime user.\nRUN groupadd -g $UID $GID ; useradd -m -u $UID -g $GID -s /bin/bash $UNAME ; usermod -aG www-data $UNAME ; echo \". /usr/share/bash-completion/bash_completion\" >> ~/.bashrc \\\n && echo \"alias ll='ls -lahs'\" >> /home/$UNAME/.bashrc\n#   Working dir\nWORKDIR ${DEFAULT_ROOT}\n#   Configure templates\nCOPY templates /etc/gotpl/\nCOPY scripts/apache2-foreground /usr/bin/\nEXPOSE 80/tcp 443/tcp\nCMD [\"apache2-foreground\"]\n","originalDockerfileUglifiedHash":"8704ef25759eb0c8a7063283dd6cd670","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/453a3b9a9d6be2c2d34e2d92268ef29a8e15e1f2.dockerfile"}