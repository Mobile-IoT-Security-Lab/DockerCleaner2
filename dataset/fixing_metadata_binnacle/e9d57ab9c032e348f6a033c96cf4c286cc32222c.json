{"seed":1930821347,"processedDockerfileHash":"cff774dd5c3f461fad5351fbfab57bd4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER Datmo devs <dev@datmo.io>\nRUN apt-get update ; apt-get install --no-install-recommends python=2.7.5-5ubuntu3 python-pip=1.5.4-1ubuntu4 python-numpy=1:1.8.2-0ubuntu0.1 python-scipy=0.13.3-1build1 build-essential=11.6ubuntu6 python-dev=2.7.5-5ubuntu3 python-setuptools=3.3-1ubuntu2 libatlas-dev=3.10.1-4 libatlas3gf-base=3.10.1-4 -y\nRUN update-alternatives --set libblas.so.3 /usr/lib/atlas-base/atlas/libblas.so.3 ; update-alternatives --set liblapack.so.3 /usr/lib/atlas-base/atlas/liblapack.so.3\nRUN pip install scikit-learn==1.2.2 -U\n#   All other dependencies are more or less needed by building phase of OpenCV.\n#   The last \"apt-get clean\" command is needed to reduce Docker image size.\nRUN apt-get upgrade -y \\\n && apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y \\\n && add-apt-repository ppa:saiarcot895/myppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-fast -y \\\n && apt-fast install -y build-essential cmake git pkg-config libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev libdc1394-22 libdc1394-utils libv4l-0 libv4l-dev libgl1-mesa-dev libgles1-mesa-dev libgles2-mesa-dev libopenvg1-mesa-dev libglu1-mesa-dev libgtkglext1 libgtkglext1-dev openjdk-7-jdk ant vtk6 libvtk6-dev \\\n && apt-get clean\n#   Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Install other useful Python packages using pip\nRUN pip install ipython==8.12.0 --upgrade \\\n && pip install Cython==0.29.34 ipykernel==6.22.0 jupyter==1.0.0 path.py==12.5.0 Pillow==9.5.0 pygments==2.15.0 six==1.16.0 sphinx==6.1.3 wheel==0.40.0 zmq==0.0.0 \\\n && python -m ipykernel.kernelspec\n#   git clone the repo from OpenCV official repository on GitHub.\nRUN mkdir /opt/opencv-build \\\n && cd /opt/opencv-build \\\n && git clone https://github.com/Itseez/opencv \\\n && cd opencv \\\n && git checkout master \\\n && mkdir build\nWORKDIR /opt/opencv-build/opencv/build\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.7.0-openjdk-amd64\"\n#   OpenCV repository is kept but all building intermediate files are removed.\n#   All other dependencies is using the default settings from CMake file of OpenCV.\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/opt .. \\\n && make -j2 \\\n && make install \\\n && make clean \\\n && cd .. \\\n && rm -rf build\n#   Let python can find the newly install OpenCV modules.\nRUN echo '/opt/lib/python2.7/dist-packages/' > /usr/lib/python2.7/dist-packages/cv2.pth\nRUN echo 'ln /dev/null /dev/raw1394' >> ~/.bashrc\n#  Jupyter notebook related configs\nCOPY jupyter_notebook_config.py /root/.jupyter/\nEXPOSE 8888/tcp\n#   Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /home/\n#  Adding flask\nRUN pip install flask==2.2.3\nEXPOSE 5000/tcp\nWORKDIR /workspace\nRUN chmod -R a+w /workspace\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER Datmo devs <dev@datmo.io>\nRUN apt-get update ; apt-get install python python-pip python-numpy python-scipy build-essential python-dev python-setuptools libatlas-dev libatlas3gf-base -y\nRUN update-alternatives --set libblas.so.3 /usr/lib/atlas-base/atlas/libblas.so.3 ; update-alternatives --set liblapack.so.3 /usr/lib/atlas-base/atlas/liblapack.so.3\nRUN pip install scikit-learn -U\n#  All other dependencies are more or less needed by building phase of OpenCV.\n#  The last \"apt-get clean\" command is needed to reduce Docker image size.\nRUN apt-get upgrade -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:saiarcot895/myppa \\\n && apt-get update \\\n && apt-get install apt-fast -y \\\n && apt-fast install -y build-essential cmake git pkg-config libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev libdc1394-22 libdc1394-utils libv4l-0 libv4l-dev libgl1-mesa-dev libgles1-mesa-dev libgles2-mesa-dev libopenvg1-mesa-dev libglu1-mesa-dev libgtkglext1 libgtkglext1-dev openjdk-7-jdk ant vtk6 libvtk6-dev \\\n && apt-get clean\n#  Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#  Install other useful Python packages using pip\nRUN pip install ipython --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq \\\n && python -m ipykernel.kernelspec\n#  git clone the repo from OpenCV official repository on GitHub.\nRUN mkdir /opt/opencv-build \\\n && cd /opt/opencv-build \\\n && git clone https://github.com/Itseez/opencv \\\n && cd opencv \\\n && git checkout master \\\n && mkdir build\nWORKDIR /opt/opencv-build/opencv/build\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.7.0-openjdk-amd64\"\n#  OpenCV repository is kept but all building intermediate files are removed.\n#  All other dependencies is using the default settings from CMake file of OpenCV.\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/opt .. \\\n && make -j2 \\\n && make install \\\n && make clean \\\n && cd .. \\\n && rm -rf build\n#  Let python can find the newly install OpenCV modules.\nRUN echo '/opt/lib/python2.7/dist-packages/' > /usr/lib/python2.7/dist-packages/cv2.pth\nRUN echo 'ln /dev/null /dev/raw1394' >> ~/.bashrc\n# Jupyter notebook related configs\nCOPY jupyter_notebook_config.py /root/.jupyter/\nEXPOSE 8888/tcp\n#  Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /home/\n# Adding flask\nRUN pip install flask\nEXPOSE 5000/tcp\nWORKDIR /workspace\nRUN chmod -R a+w /workspace\n","injectedSmells":[],"originalDockerfileHash":"84387308b6d8d6fdcfbbdbf17315fee3","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER Datmo devs <dev@datmo.io>\nRUN apt-get update ; apt-get install python python-pip python-numpy python-scipy build-essential python-dev python-setuptools libatlas-dev libatlas3gf-base -y\nRUN update-alternatives --set libblas.so.3 /usr/lib/atlas-base/atlas/libblas.so.3 ; update-alternatives --set liblapack.so.3 /usr/lib/atlas-base/atlas/liblapack.so.3\nRUN pip install scikit-learn -U\n#   All other dependencies are more or less needed by building phase of OpenCV.\n#   The last \"apt-get clean\" command is needed to reduce Docker image size.\nRUN apt-get upgrade -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:saiarcot895/myppa \\\n && apt-get update \\\n && apt-get install apt-fast -y \\\n && apt-fast install -y build-essential cmake git pkg-config libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev libdc1394-22 libdc1394-utils libv4l-0 libv4l-dev libgl1-mesa-dev libgles1-mesa-dev libgles2-mesa-dev libopenvg1-mesa-dev libglu1-mesa-dev libgtkglext1 libgtkglext1-dev openjdk-7-jdk ant vtk6 libvtk6-dev \\\n && apt-get clean\n#   Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Install other useful Python packages using pip\nRUN pip install ipython --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq \\\n && python -m ipykernel.kernelspec\n#   git clone the repo from OpenCV official repository on GitHub.\nRUN mkdir /opt/opencv-build \\\n && cd /opt/opencv-build \\\n && git clone https://github.com/Itseez/opencv \\\n && cd opencv \\\n && git checkout master \\\n && mkdir build\nWORKDIR /opt/opencv-build/opencv/build\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.7.0-openjdk-amd64\"\n#   OpenCV repository is kept but all building intermediate files are removed.\n#   All other dependencies is using the default settings from CMake file of OpenCV.\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/opt .. \\\n && make -j2 \\\n && make install \\\n && make clean \\\n && cd .. \\\n && rm -rf build\n#   Let python can find the newly install OpenCV modules.\nRUN echo '/opt/lib/python2.7/dist-packages/' > /usr/lib/python2.7/dist-packages/cv2.pth\nRUN echo 'ln /dev/null /dev/raw1394' >> ~/.bashrc\n#  Jupyter notebook related configs\nCOPY jupyter_notebook_config.py /root/.jupyter/\nEXPOSE 8888/tcp\n#   Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /home/\n#  Adding flask\nRUN pip install flask\nEXPOSE 5000/tcp\nWORKDIR /workspace\nRUN chmod -R a+w /workspace\n","originalDockerfileUglifiedHash":"9ee49c478eb4185cfbec460072358e6b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e9d57ab9c032e348f6a033c96cf4c286cc32222c.dockerfile"}