{"seed":3057544943,"processedDockerfileHash":"f35580115792901e7b87b724f0b51a6d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial AS base\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo=1.8.16-0ubuntu1.10 curl=7.47.0-1ubuntu2.19 locales=2.23-0ubuntu11.3 -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#   Add fixuid to change permissions for bind-mounts. Set uid to same as host with -u <uid>:<guid>\nRUN addgroup --gid 1000 docker \\\n && adduser --uid 1000 --ingroup docker --home /home/docker --shell /bin/sh --disabled-password --gecos \"\" docker \\\n && usermod -aG sudo docker \\\n && sed -i.bkp -e 's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers\nRUN USER=docker \\\n && GROUP=docker \\\n && curl -SsL https://github.com/boxboat/fixuid/releases/download/v0.3/fixuid-0.3-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf - \\\n && chown root:root /usr/local/bin/fixuid \\\n && chmod 4755 /usr/local/bin/fixuid \\\n && mkdir -p /etc/fixuid \\\n && printf \"user: $USER\\ngroup: $GROUP\\npaths:\\n - /service\\n\" > /etc/fixuid/config.yml\nRUN echo \"LANG=C.UTF-8\" > /etc/default/locale\n#   TAG can be specified when building with --build-arg TAG=..., this is redeclared in the source-build stage\nARG BRANCH=dev\nARG REPO=hioa-cs\nENV BRANCH=\"$BRANCH\"\nENV REPO=\"$REPO\"\nLABEL dockerfile.version=\"1\" \\\n      includeos.version=\"$BRANCH\"\nWORKDIR /service\n#  ########################\nFROM base AS source-build\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 lsb-release=9.20160110ubuntu0.2 net-tools=1.60-26ubuntu1 wget=1.17.1-1ubuntu1.5 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Triggers new build if there are changes to head\n#  ADD https://api.github.com/repos/$REPO/IncludeOS/git/refs/heads/$BRANCH version.json\nRUN echo \"cloning $BRANCH\"\nRUN cd ~ \\\n && pwd \\\n && git clone https://github.com/$REPO/IncludeOS.git \\\n && cd IncludeOS \\\n && git checkout $BRANCH \\\n && git submodule update --init --recursive \\\n && git fetch --tags\nRUN cd ~ \\\n && pwd \\\n && cd IncludeOS \\\n && ./install.sh -n\nRUN git -C /root/IncludeOS describe --tags > /ios_version.txt\n#  ##########################\nFROM base AS build\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 clang-5.0=1:5.0-3~16.04.1 cmake=3.5.1-1ubuntu3 nasm=2.11.08-1ubuntu0.1 python-pip=8.1.1-2ubuntu0.6 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install pystache==0.6.0 antlr4-python2-runtime==4.12.0 \\\n && apt-get remove -y python-pip \\\n && apt-get autoremove -y\nCOPY --from=source-build /usr/local/includeos /usr/local/includeos/\nCOPY --from=source-build /usr/local/bin/boot /usr/local/bin/boot\nCOPY --from=source-build /root/IncludeOS/etc/install_dependencies_linux.sh /\nCOPY --from=source-build /root/IncludeOS/etc/use_clang_version.sh /\nCOPY --from=source-build /root/IncludeOS/lib/uplink/starbase /root/IncludeOS/lib/uplink/starbase/\nCOPY --from=source-build /ios_version.txt /\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD mkdir -p build \\\n && cd build \\\n && cp $( find /usr/local/includeos -name chainloader ;) /service/build/chainloader \\\n && cmake .. \\\n && make\n#  ############################\nFROM base AS grubify\nRUN apt-get update \\\n && apt-get install --no-install-recommends dosfstools=3.0.28-2ubuntu0.1 grub-pc=2.02~beta2-36ubuntu3.32 -y\nCOPY --from=source-build /usr/local/includeos/scripts/grubify.sh /home/ubuntu/IncludeOS_install/includeos/scripts/grubify.sh\nENTRYPOINT [\"fixuid\", \"/home/ubuntu/IncludeOS_install/includeos/scripts/grubify.sh\"]\n#  ##############################\nFROM build AS webserver\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=source-build /root/IncludeOS/examples/acorn /acorn\nWORKDIR /acorn\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD mkdir build \\\n && cd build \\\n && rm -rf /acorn/disk1/public/* \\\n && cp -a -v /public/. /acorn/disk1/public \\\n && cmake .. \\\n && make \\\n && cp acorn /public\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial AS base\nRUN apt-get update \\\n && apt-get install sudo curl locales -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#  Add fixuid to change permissions for bind-mounts. Set uid to same as host with -u <uid>:<guid>\nRUN addgroup --gid 1000 docker \\\n && adduser --uid 1000 --ingroup docker --home /home/docker --shell /bin/sh --disabled-password --gecos \"\" docker \\\n && usermod -aG sudo docker \\\n && sed -i.bkp -e 's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers\nRUN USER=docker \\\n && GROUP=docker \\\n && curl -SsL https://github.com/boxboat/fixuid/releases/download/v0.3/fixuid-0.3-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf - \\\n && chown root:root /usr/local/bin/fixuid \\\n && chmod 4755 /usr/local/bin/fixuid \\\n && mkdir -p /etc/fixuid \\\n && printf \"user: $USER\\ngroup: $GROUP\\npaths:\\n - /service\\n\" > /etc/fixuid/config.yml\nRUN echo \"LANG=C.UTF-8\" > /etc/default/locale\n#  TAG can be specified when building with --build-arg TAG=..., this is redeclared in the source-build stage\nARG BRANCH=dev\nARG REPO=hioa-cs\nENV BRANCH=\"$BRANCH\"\nENV REPO=\"$REPO\"\nLABEL dockerfile.version=\"1\" \\\n      includeos.version=\"$BRANCH\"\nWORKDIR /service\n# ########################\nFROM base AS source-build\nRUN apt-get update \\\n && apt-get install git lsb-release net-tools wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Triggers new build if there are changes to head\n# ADD https://api.github.com/repos/$REPO/IncludeOS/git/refs/heads/$BRANCH version.json\nRUN echo \"cloning $BRANCH\"\nRUN cd ~ \\\n && pwd \\\n && git clone https://github.com/$REPO/IncludeOS.git \\\n && cd IncludeOS \\\n && git checkout $BRANCH \\\n && git submodule update --init --recursive \\\n && git fetch --tags\nRUN cd ~ \\\n && pwd \\\n && cd IncludeOS \\\n && ./install.sh -n\nRUN git -C /root/IncludeOS describe --tags > /ios_version.txt\n# ##########################\nFROM base AS build\nRUN apt-get update \\\n && apt-get install git clang-5.0 cmake nasm python-pip -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install pystache antlr4-python2-runtime \\\n && apt-get remove -y python-pip \\\n && apt-get autoremove -y\nCOPY --from=source-build /usr/local/includeos /usr/local/includeos/\nCOPY --from=source-build /usr/local/bin/boot /usr/local/bin/boot\nCOPY --from=source-build /root/IncludeOS/etc/install_dependencies_linux.sh /\nCOPY --from=source-build /root/IncludeOS/etc/use_clang_version.sh /\nCOPY --from=source-build /root/IncludeOS/lib/uplink/starbase /root/IncludeOS/lib/uplink/starbase/\nCOPY --from=source-build /ios_version.txt /\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD mkdir -p build \\\n && cd build \\\n && cp $( find /usr/local/includeos -name chainloader ;) /service/build/chainloader \\\n && cmake .. \\\n && make\n# ############################\nFROM base AS grubify\nRUN apt-get update \\\n && apt-get install dosfstools grub-pc -y\nCOPY --from=source-build /usr/local/includeos/scripts/grubify.sh /home/ubuntu/IncludeOS_install/includeos/scripts/grubify.sh\nENTRYPOINT [\"fixuid\", \"/home/ubuntu/IncludeOS_install/includeos/scripts/grubify.sh\"]\n# ##############################\nFROM build AS webserver\nRUN apt-get update \\\n && apt-get install git -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=source-build /root/IncludeOS/examples/acorn /acorn\nWORKDIR /acorn\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD mkdir build \\\n && cd build \\\n && rm -rf /acorn/disk1/public/* \\\n && cp -a -v /public/. /acorn/disk1/public \\\n && cmake .. \\\n && make \\\n && cp acorn /public\n","injectedSmells":[],"originalDockerfileHash":"22f5989b9bc8929c51e55dfdb63e6eef","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial AS base\nRUN apt-get update \\\n && apt-get install sudo curl locales -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#   Add fixuid to change permissions for bind-mounts. Set uid to same as host with -u <uid>:<guid>\nRUN addgroup --gid 1000 docker \\\n && adduser --uid 1000 --ingroup docker --home /home/docker --shell /bin/sh --disabled-password --gecos \"\" docker \\\n && usermod -aG sudo docker \\\n && sed -i.bkp -e 's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers\nRUN USER=docker \\\n && GROUP=docker \\\n && curl -SsL https://github.com/boxboat/fixuid/releases/download/v0.3/fixuid-0.3-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf - \\\n && chown root:root /usr/local/bin/fixuid \\\n && chmod 4755 /usr/local/bin/fixuid \\\n && mkdir -p /etc/fixuid \\\n && printf \"user: $USER\\ngroup: $GROUP\\npaths:\\n - /service\\n\" > /etc/fixuid/config.yml\nRUN echo \"LANG=C.UTF-8\" > /etc/default/locale\n#   TAG can be specified when building with --build-arg TAG=..., this is redeclared in the source-build stage\nARG BRANCH=dev\nARG REPO=hioa-cs\nENV BRANCH=\"$BRANCH\"\nENV REPO=\"$REPO\"\nLABEL dockerfile.version=\"1\" \\\n      includeos.version=\"$BRANCH\"\nWORKDIR /service\n#  ########################\nFROM base AS source-build\nRUN apt-get update \\\n && apt-get install git lsb-release net-tools wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Triggers new build if there are changes to head\n#  ADD https://api.github.com/repos/$REPO/IncludeOS/git/refs/heads/$BRANCH version.json\nRUN echo \"cloning $BRANCH\"\nRUN cd ~ \\\n && pwd \\\n && git clone https://github.com/$REPO/IncludeOS.git \\\n && cd IncludeOS \\\n && git checkout $BRANCH \\\n && git submodule update --init --recursive \\\n && git fetch --tags\nRUN cd ~ \\\n && pwd \\\n && cd IncludeOS \\\n && ./install.sh -n\nRUN git -C /root/IncludeOS describe --tags > /ios_version.txt\n#  ##########################\nFROM base AS build\nRUN apt-get update \\\n && apt-get install git clang-5.0 cmake nasm python-pip -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install pystache antlr4-python2-runtime \\\n && apt-get remove -y python-pip \\\n && apt-get autoremove -y\nCOPY --from=source-build /usr/local/includeos /usr/local/includeos/\nCOPY --from=source-build /usr/local/bin/boot /usr/local/bin/boot\nCOPY --from=source-build /root/IncludeOS/etc/install_dependencies_linux.sh /\nCOPY --from=source-build /root/IncludeOS/etc/use_clang_version.sh /\nCOPY --from=source-build /root/IncludeOS/lib/uplink/starbase /root/IncludeOS/lib/uplink/starbase/\nCOPY --from=source-build /ios_version.txt /\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD mkdir -p build \\\n && cd build \\\n && cp $( find /usr/local/includeos -name chainloader ;) /service/build/chainloader \\\n && cmake .. \\\n && make\n#  ############################\nFROM base AS grubify\nRUN apt-get update \\\n && apt-get install dosfstools grub-pc -y\nCOPY --from=source-build /usr/local/includeos/scripts/grubify.sh /home/ubuntu/IncludeOS_install/includeos/scripts/grubify.sh\nENTRYPOINT [\"fixuid\", \"/home/ubuntu/IncludeOS_install/includeos/scripts/grubify.sh\"]\n#  ##############################\nFROM build AS webserver\nRUN apt-get update \\\n && apt-get install git -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=source-build /root/IncludeOS/examples/acorn /acorn\nWORKDIR /acorn\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD mkdir build \\\n && cd build \\\n && rm -rf /acorn/disk1/public/* \\\n && cp -a -v /public/. /acorn/disk1/public \\\n && cmake .. \\\n && make \\\n && cp acorn /public\n","originalDockerfileUglifiedHash":"7d7df6bfd26e5eb6b421952bb71b7c6a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/083d7a52887a90da15a1d8be4eff40df40b4bab4.dockerfile"}