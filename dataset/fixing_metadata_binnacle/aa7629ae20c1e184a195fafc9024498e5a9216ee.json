{"seed":1752294903,"processedDockerfileHash":"f1e5d71e4d58d8647c97b9650731d536","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM nvidia/cuda:9.0-base\n#  FROM nvidia/cuda:9.1-base\n#  FROM nvidia/cuda:9.2-devel-ubuntu18.04\n#  FROM nvidia/cuda:9.0-devel-ubuntu18.04\nMAINTAINER Tom Breuel <tmbdev@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_NONINTERACTIVE_SEEN=\"true\"\nRUN : \\\n && apt-get dist-upgrade -y\nRUN (apt-get update ;apt-get install --no-install-recommends sudo lsb-release build-essential curl software-properties-common -y ) \\\n && echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$( lsb_release -c -s ;) main\" >> /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update -y \\\n && apt-get dist-upgrade -y \\\n && (apt-get update ;apt-get install --no-install-recommends apt-utils -y )\nRUN (apt-get update ;apt-get install --no-install-recommends locales -y ) \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales \\\n && (apt-get update ;apt-get install --no-install-recommends google-cloud-sdk -y )\nRUN (apt-get update ;apt-get install --no-install-recommends wget tightvncserver tmux rxvt xterm mlterm imagemagick firefox blackbox imagemagick vim-gtk gnome-terminal i3 chromium-browser git mercurial lynx daemon -y )\nRUN (apt-get update ;apt-get install --no-install-recommends nginx -y )\nRUN (apt-get update ;apt-get install --no-install-recommends nginx-extras -y )\nRUN (apt-get update ;apt-get install --no-install-recommends cadaver -y )\nRUN cd /tmp \\\n && wget --quiet -nd https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh \\\n && bash ./Miniconda2-latest-Linux-x86_64.sh -b -p /opt/conda \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \\\n && ln -s /opt/conda/bin/conda /usr/bin/conda \\\n && rm -f Miniconda*.sh\nRUN (apt-get update ;apt-get install --no-install-recommends redis-tools -y )\nRUN conda install git\nRUN conda install numpy\nRUN conda install scipy\nRUN conda install msgpack\nRUN conda install simplejson\nRUN conda install pyzmq\nRUN conda install jupyter\nRUN conda install scikit-image\nRUN conda install scikit-learn\nRUN conda install redis\nRUN conda install Pillow\nRUN conda install pytorch=0.3.1 torchvision cuda90 -c pytorch\nRUN conda install msgpack\nRUN conda install -c conda-forge google-cloud-storage\nRUN conda install cython\nRUN conda install -c auto editdistance\nRUN conda install -c menpo opencv3\nRUN conda install pip \\\n && ln -s /opt/conda/bin/pip /usr/bin/pip\nRUN conda install setuptools\nENV PATH=\"/opt/conda/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nCOPY dlinputs /tmp/dlinputs\nRUN cd /tmp/dlinputs \\\n && python setup.py install \\\n && rm -rf /tmp/dlinputs\nCOPY dltrainers /tmp/dltrainers\nRUN cd /tmp/dltrainers \\\n && python setup.py install \\\n && rm -rf /tmp/dltrainers\nCOPY dlmodels /tmp/dlmodels\nRUN cd /tmp/dlmodels \\\n && python setup.py install \\\n && rm -rf /tmp/dlmodels\nCOPY cctc /tmp/cctc\nRUN cd /tmp/cctc \\\n && python setup.py install \\\n && rm -rf /tmp/cctc\nCOPY ocrobin /tmp/ocrobin\nRUN cd /tmp/ocrobin \\\n && python setup.py install \\\n && rm -rf /tmp/ocrobin\nCOPY ocrodeg /tmp/ocrodeg\nRUN cd /tmp/ocrodeg \\\n && python setup.py install \\\n && rm -rf /tmp/ocrodeg\nCOPY ocroline /tmp/ocroline\nRUN cd /tmp/ocroline \\\n && python setup.py install \\\n && rm -rf /tmp/ocroline\nCOPY ocrorot /tmp/ocrorot\nRUN cd /tmp/ocrorot \\\n && python setup.py install \\\n && rm -rf /tmp/ocrorot\nCOPY ocroseg /tmp/ocroseg\nRUN cd /tmp/ocroseg \\\n && python setup.py install \\\n && rm -rf /tmp/ocroseg\nENV USER=\"user\"\nENV HOME=\"/home/$USER\"\nENV GID=\"1000\"\nENV UID=\"1000\"\nENV TERM=\"xterm\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"compute,utility\"\nCOPY nginx.conf /etc/nginx\nEXPOSE 3218/tcp\nRUN mkdir -p $HOME \\\n && groupadd -g $GID -r $USER \\\n && useradd --no-log-init -u $UID -r -g $USER $USER\nRUN mkdir -p $HOME/.jupyter $HOME/.vnc $HOME/.ssh\nCOPY jupyter_config/* $HOME/.jupyter/\nCOPY vnc_config/* $HOME/.vnc/\nCOPY scripts/* /usr/local/bin/\nRUN true \\\n && echo \". /opt/conda/etc/profile.d/conda.sh\" >> $HOME/.bashrc \\\n && echo \"conda activate base\" >> $HOME/.bashrc \\\n && chown -R $USER.$USER $HOME\nRUN echo 'user ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER $UID\nENTRYPOINT [\"runcmd\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:9.0-base\n# FROM nvidia/cuda:9.1-base\n# FROM nvidia/cuda:9.2-devel-ubuntu18.04\n# FROM nvidia/cuda:9.0-devel-ubuntu18.04\nMAINTAINER Tom Breuel <tmbdev@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_NONINTERACTIVE_SEEN=\"true\"\nRUN apt-get update -y \\\n && apt-get dist-upgrade -y\nRUN apt-get install sudo lsb-release build-essential curl software-properties-common -y \\\n && echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$( lsb_release -c -s ;) main\" >> /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update -y \\\n && apt-get dist-upgrade -y \\\n && apt-get install apt-utils -y\nRUN apt-get install locales -y \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales \\\n && apt-get install google-cloud-sdk -y\nRUN apt-get install wget tightvncserver tmux rxvt xterm mlterm imagemagick firefox blackbox imagemagick vim-gtk gnome-terminal i3 chromium-browser git mercurial lynx daemon -y\nRUN apt-get install nginx -y\nRUN apt-get install nginx-extras -y\nRUN apt-get install cadaver -y\nRUN cd /tmp \\\n && wget --quiet -nd https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh \\\n && bash ./Miniconda2-latest-Linux-x86_64.sh -b -p /opt/conda \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \\\n && ln -s /opt/conda/bin/conda /usr/bin/conda \\\n && rm -f Miniconda*.sh\nRUN apt-get install redis-tools -y\nRUN conda install git\nRUN conda install numpy\nRUN conda install scipy\nRUN conda install msgpack\nRUN conda install simplejson\nRUN conda install pyzmq\nRUN conda install jupyter\nRUN conda install scikit-image\nRUN conda install scikit-learn\nRUN conda install redis\nRUN conda install Pillow\nRUN conda install pytorch=0.3.1 torchvision cuda90 -c pytorch\nRUN conda install msgpack\nRUN conda install -c conda-forge google-cloud-storage\nRUN conda install cython\nRUN conda install -c auto editdistance\nRUN conda install -c menpo opencv3\nRUN conda install pip \\\n && ln -s /opt/conda/bin/pip /usr/bin/pip\nRUN conda install setuptools\nENV PATH=\"/opt/conda/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nCOPY dlinputs /tmp/dlinputs\nRUN cd /tmp/dlinputs \\\n && python setup.py install \\\n && rm -rf /tmp/dlinputs\nCOPY dltrainers /tmp/dltrainers\nRUN cd /tmp/dltrainers \\\n && python setup.py install \\\n && rm -rf /tmp/dltrainers\nCOPY dlmodels /tmp/dlmodels\nRUN cd /tmp/dlmodels \\\n && python setup.py install \\\n && rm -rf /tmp/dlmodels\nCOPY cctc /tmp/cctc\nRUN cd /tmp/cctc \\\n && python setup.py install \\\n && rm -rf /tmp/cctc\nCOPY ocrobin /tmp/ocrobin\nRUN cd /tmp/ocrobin \\\n && python setup.py install \\\n && rm -rf /tmp/ocrobin\nCOPY ocrodeg /tmp/ocrodeg\nRUN cd /tmp/ocrodeg \\\n && python setup.py install \\\n && rm -rf /tmp/ocrodeg\nCOPY ocroline /tmp/ocroline\nRUN cd /tmp/ocroline \\\n && python setup.py install \\\n && rm -rf /tmp/ocroline\nCOPY ocrorot /tmp/ocrorot\nRUN cd /tmp/ocrorot \\\n && python setup.py install \\\n && rm -rf /tmp/ocrorot\nCOPY ocroseg /tmp/ocroseg\nRUN cd /tmp/ocroseg \\\n && python setup.py install \\\n && rm -rf /tmp/ocroseg\nENV USER=\"user\"\nENV HOME=\"/home/$USER\"\nENV GID=\"1000\"\nENV UID=\"1000\"\nENV TERM=\"xterm\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"compute,utility\"\nCOPY nginx.conf /etc/nginx\nEXPOSE 3218/tcp\nRUN mkdir -p $HOME \\\n && groupadd -g $GID -r $USER \\\n && useradd --no-log-init -u $UID -r -g $USER $USER\nRUN mkdir -p $HOME/.jupyter $HOME/.vnc $HOME/.ssh\nADD jupyter_config/* $HOME/.jupyter/\nADD vnc_config/* $HOME/.vnc/\nADD scripts/* /usr/local/bin/\nRUN true \\\n && echo \". /opt/conda/etc/profile.d/conda.sh\" >> $HOME/.bashrc \\\n && echo \"conda activate base\" >> $HOME/.bashrc \\\n && chown -R $USER.$USER $HOME\nRUN echo 'user ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER $UID\nENTRYPOINT [\"runcmd\"]\n","injectedSmells":[],"originalDockerfileHash":"a2350abf370e71557b8042766871e5f7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:9.0-base\n#  FROM nvidia/cuda:9.1-base\n#  FROM nvidia/cuda:9.2-devel-ubuntu18.04\n#  FROM nvidia/cuda:9.0-devel-ubuntu18.04\nMAINTAINER Tom Breuel <tmbdev@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_NONINTERACTIVE_SEEN=\"true\"\nRUN apt-get update -y \\\n && apt-get dist-upgrade -y\nRUN apt-get install sudo lsb-release build-essential curl software-properties-common -y \\\n && echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$( lsb_release -c -s ;) main\" >> /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update -y \\\n && apt-get dist-upgrade -y \\\n && apt-get install apt-utils -y\nRUN apt-get install locales -y \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales \\\n && apt-get install google-cloud-sdk -y\nRUN apt-get install wget tightvncserver tmux rxvt xterm mlterm imagemagick firefox blackbox imagemagick vim-gtk gnome-terminal i3 chromium-browser git mercurial lynx daemon -y\nRUN apt-get install nginx -y\nRUN apt-get install nginx-extras -y\nRUN apt-get install cadaver -y\nRUN cd /tmp \\\n && wget --quiet -nd https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh \\\n && bash ./Miniconda2-latest-Linux-x86_64.sh -b -p /opt/conda \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \\\n && ln -s /opt/conda/bin/conda /usr/bin/conda \\\n && rm -f Miniconda*.sh\nRUN apt-get install redis-tools -y\nRUN conda install git\nRUN conda install numpy\nRUN conda install scipy\nRUN conda install msgpack\nRUN conda install simplejson\nRUN conda install pyzmq\nRUN conda install jupyter\nRUN conda install scikit-image\nRUN conda install scikit-learn\nRUN conda install redis\nRUN conda install Pillow\nRUN conda install pytorch=0.3.1 torchvision cuda90 -c pytorch\nRUN conda install msgpack\nRUN conda install -c conda-forge google-cloud-storage\nRUN conda install cython\nRUN conda install -c auto editdistance\nRUN conda install -c menpo opencv3\nRUN conda install pip \\\n && ln -s /opt/conda/bin/pip /usr/bin/pip\nRUN conda install setuptools\nENV PATH=\"/opt/conda/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nCOPY dlinputs /tmp/dlinputs\nRUN cd /tmp/dlinputs \\\n && python setup.py install \\\n && rm -rf /tmp/dlinputs\nCOPY dltrainers /tmp/dltrainers\nRUN cd /tmp/dltrainers \\\n && python setup.py install \\\n && rm -rf /tmp/dltrainers\nCOPY dlmodels /tmp/dlmodels\nRUN cd /tmp/dlmodels \\\n && python setup.py install \\\n && rm -rf /tmp/dlmodels\nCOPY cctc /tmp/cctc\nRUN cd /tmp/cctc \\\n && python setup.py install \\\n && rm -rf /tmp/cctc\nCOPY ocrobin /tmp/ocrobin\nRUN cd /tmp/ocrobin \\\n && python setup.py install \\\n && rm -rf /tmp/ocrobin\nCOPY ocrodeg /tmp/ocrodeg\nRUN cd /tmp/ocrodeg \\\n && python setup.py install \\\n && rm -rf /tmp/ocrodeg\nCOPY ocroline /tmp/ocroline\nRUN cd /tmp/ocroline \\\n && python setup.py install \\\n && rm -rf /tmp/ocroline\nCOPY ocrorot /tmp/ocrorot\nRUN cd /tmp/ocrorot \\\n && python setup.py install \\\n && rm -rf /tmp/ocrorot\nCOPY ocroseg /tmp/ocroseg\nRUN cd /tmp/ocroseg \\\n && python setup.py install \\\n && rm -rf /tmp/ocroseg\nENV USER=\"user\"\nENV HOME=\"/home/$USER\"\nENV GID=\"1000\"\nENV UID=\"1000\"\nENV TERM=\"xterm\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"compute,utility\"\nCOPY nginx.conf /etc/nginx\nEXPOSE 3218/tcp\nRUN mkdir -p $HOME \\\n && groupadd -g $GID -r $USER \\\n && useradd --no-log-init -u $UID -r -g $USER $USER\nRUN mkdir -p $HOME/.jupyter $HOME/.vnc $HOME/.ssh\nADD jupyter_config/* $HOME/.jupyter/\nADD vnc_config/* $HOME/.vnc/\nADD scripts/* /usr/local/bin/\nRUN true \\\n && echo \". /opt/conda/etc/profile.d/conda.sh\" >> $HOME/.bashrc \\\n && echo \"conda activate base\" >> $HOME/.bashrc \\\n && chown -R $USER.$USER $HOME\nRUN echo 'user ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER $UID\nENTRYPOINT [\"runcmd\"]\n","originalDockerfileUglifiedHash":"7176f3a57a9060730f26b80a78c2a5a1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/aa7629ae20c1e184a195fafc9024498e5a9216ee.dockerfile"}