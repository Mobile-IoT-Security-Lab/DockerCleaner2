{"seed":4217326131,"processedDockerfileHash":"b7d3b3010448dcdce3ef9222523621e4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-gem","have-a-healthcheck"],"processedDockerfile":"FROM ruby:2.6.2\nMAINTAINER Sharetribe Team <team@sharetribe.com>\nENV REFRESHED_AT=\"2019-04-12\"\n#   NOTE: we will migrate soon to newer ruby version and away from Debian\n#   Jessie-based image. For now, enable only package repositories that are still\n#   maintained for jessie for LTS.\nRUN echo 'deb http://deb.debian.org/debian jessie main' > /etc/apt/sources.list \\\n && echo 'deb http://security.debian.org jessie/updates main' >> /etc/apt/sources.list \\\n && : \\\n && apt-get dist-upgrade -y\n#   Prevent GPG from trying to bind on IPv6 address even if there are none\nRUN mkdir ~/.gnupg \\\n && chmod 600 ~/.gnupg \\\n && echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf\n#\n#   Node (based on official docker node image)\n#\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"7.8.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#   Add helper for decrypting secure environment variables\nRUN curl -sfSL -o /usr/sbin/secure-environment \"https://github.com/convox/secure-environment/releases/download/v0.0.1/secure-environment\" \\\n && echo \"4e4c1ed98f1ff4518c8448814c74d6d05ba873879e16817cd6a02ee5013334ea */usr/sbin/secure-environment\" | sha256sum -c - \\\n && chmod 755 /usr/sbin/secure-environment\n#\n#   Sharetribe\n#\n#   Install nginx - used to serve maintenance mode page\nRUN (apt-get update ;apt-get install --no-install-recommends nginx -y )\n#   Install latest bundler\nENV BUNDLE_BIN=\"\"\nRUN gem install bundler --version 2.4.12\n#   Run as non-privileged user\nRUN useradd -m -s /bin/bash app \\\n && mkdir /opt/app /opt/app/client /opt/app/log /opt/app/tmp \\\n && chown -R app:app /opt/app\nWORKDIR /opt/app\nCOPY Gemfile /opt/app\nCOPY Gemfile.lock /opt/app\nENV RAILS_ENV=\"production\"\nUSER app\nRUN bundle install --deployment --without test,development\nCOPY package.json /opt/app/\nCOPY client/package.json /opt/app/client/\nCOPY client/customloaders/customfileloader /opt/app/client/customloaders/customfileloader\nENV NODE_ENV=\"production\"\nENV NPM_CONFIG_LOGLEVEL=\"error\"\nENV NPM_CONFIG_PRODUCTION=\"true\"\nRUN npm install\nCOPY . /opt/app\nEXPOSE 3000/tcp\nCMD [\"script/startup.sh\"]\nENTRYPOINT [\"script/entrypoint.sh\"]\n#\n#   Assets\n#\n#   Fix ownership of directories that need to be writable\nUSER root\nRUN mkdir -p app/assets/webpack public/assets public/webpack \\\n && chown -R app:app app/assets/javascripts app/assets/webpack client/app/ public/assets public/webpack\nUSER app\n#   If assets.tar.gz file exists in project root\n#   assets will be extracted from there.\n#   Otherwise, assets will be compiled with `rake assets:precompile`.\n#   Useful for caching assets between builds.\nRUN script/prepare-assets.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ruby:2.6.2\nMAINTAINER Sharetribe Team <team@sharetribe.com>\nENV REFRESHED_AT=\"2019-04-12\"\n#  NOTE: we will migrate soon to newer ruby version and away from Debian\n#  Jessie-based image. For now, enable only package repositories that are still\n#  maintained for jessie for LTS.\nRUN echo 'deb http://deb.debian.org/debian jessie main' > /etc/apt/sources.list \\\n && echo 'deb http://security.debian.org jessie/updates main' >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get dist-upgrade -y\n#  Prevent GPG from trying to bind on IPv6 address even if there are none\nRUN mkdir ~/.gnupg \\\n && chmod 600 ~/.gnupg \\\n && echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf\n#\n#  Node (based on official docker node image)\n#\n#  gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"7.8.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#  Add helper for decrypting secure environment variables\nRUN curl -sfSL -o /usr/sbin/secure-environment \"https://github.com/convox/secure-environment/releases/download/v0.0.1/secure-environment\" \\\n && echo \"4e4c1ed98f1ff4518c8448814c74d6d05ba873879e16817cd6a02ee5013334ea */usr/sbin/secure-environment\" | sha256sum -c - \\\n && chmod 755 /usr/sbin/secure-environment\n#\n#  Sharetribe\n#\n#  Install nginx - used to serve maintenance mode page\nRUN apt-get install nginx -y\n#  Install latest bundler\nENV BUNDLE_BIN=\"\"\nRUN gem install bundler\n#  Run as non-privileged user\nRUN useradd -m -s /bin/bash app \\\n && mkdir /opt/app /opt/app/client /opt/app/log /opt/app/tmp \\\n && chown -R app:app /opt/app\nWORKDIR /opt/app\nCOPY Gemfile /opt/app\nCOPY Gemfile.lock /opt/app\nENV RAILS_ENV=\"production\"\nUSER app\nRUN bundle install --deployment --without test,development\nCOPY package.json /opt/app/\nCOPY client/package.json /opt/app/client/\nCOPY client/customloaders/customfileloader /opt/app/client/customloaders/customfileloader\nENV NODE_ENV=\"production\"\nENV NPM_CONFIG_LOGLEVEL=\"error\"\nENV NPM_CONFIG_PRODUCTION=\"true\"\nRUN npm install\nCOPY . /opt/app\nEXPOSE 3000/tcp\nCMD [\"script/startup.sh\"]\nENTRYPOINT [\"script/entrypoint.sh\"]\n#\n#  Assets\n#\n#  Fix ownership of directories that need to be writable\nUSER root\nRUN mkdir -p app/assets/webpack public/assets public/webpack \\\n && chown -R app:app app/assets/javascripts app/assets/webpack client/app/ public/assets public/webpack\nUSER app\n#  If assets.tar.gz file exists in project root\n#  assets will be extracted from there.\n#  Otherwise, assets will be compiled with `rake assets:precompile`.\n#  Useful for caching assets between builds.\nRUN script/prepare-assets.sh\n","injectedSmells":[],"originalDockerfileHash":"1f0b5f48dcc54c77db9055d9fb5f4a33","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ruby:2.6.2\nMAINTAINER Sharetribe Team <team@sharetribe.com>\nENV REFRESHED_AT=\"2019-04-12\"\n#   NOTE: we will migrate soon to newer ruby version and away from Debian\n#   Jessie-based image. For now, enable only package repositories that are still\n#   maintained for jessie for LTS.\nRUN echo 'deb http://deb.debian.org/debian jessie main' > /etc/apt/sources.list \\\n && echo 'deb http://security.debian.org jessie/updates main' >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get dist-upgrade -y\n#   Prevent GPG from trying to bind on IPv6 address even if there are none\nRUN mkdir ~/.gnupg \\\n && chmod 600 ~/.gnupg \\\n && echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf\n#\n#   Node (based on official docker node image)\n#\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"7.8.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#   Add helper for decrypting secure environment variables\nRUN curl -sfSL -o /usr/sbin/secure-environment \"https://github.com/convox/secure-environment/releases/download/v0.0.1/secure-environment\" \\\n && echo \"4e4c1ed98f1ff4518c8448814c74d6d05ba873879e16817cd6a02ee5013334ea */usr/sbin/secure-environment\" | sha256sum -c - \\\n && chmod 755 /usr/sbin/secure-environment\n#\n#   Sharetribe\n#\n#   Install nginx - used to serve maintenance mode page\nRUN apt-get install nginx -y\n#   Install latest bundler\nENV BUNDLE_BIN=\"\"\nRUN gem install bundler\n#   Run as non-privileged user\nRUN useradd -m -s /bin/bash app \\\n && mkdir /opt/app /opt/app/client /opt/app/log /opt/app/tmp \\\n && chown -R app:app /opt/app\nWORKDIR /opt/app\nCOPY Gemfile /opt/app\nCOPY Gemfile.lock /opt/app\nENV RAILS_ENV=\"production\"\nUSER app\nRUN bundle install --deployment --without test,development\nCOPY package.json /opt/app/\nCOPY client/package.json /opt/app/client/\nCOPY client/customloaders/customfileloader /opt/app/client/customloaders/customfileloader\nENV NODE_ENV=\"production\"\nENV NPM_CONFIG_LOGLEVEL=\"error\"\nENV NPM_CONFIG_PRODUCTION=\"true\"\nRUN npm install\nCOPY . /opt/app\nEXPOSE 3000/tcp\nCMD [\"script/startup.sh\"]\nENTRYPOINT [\"script/entrypoint.sh\"]\n#\n#   Assets\n#\n#   Fix ownership of directories that need to be writable\nUSER root\nRUN mkdir -p app/assets/webpack public/assets public/webpack \\\n && chown -R app:app app/assets/javascripts app/assets/webpack client/app/ public/assets public/webpack\nUSER app\n#   If assets.tar.gz file exists in project root\n#   assets will be extracted from there.\n#   Otherwise, assets will be compiled with `rake assets:precompile`.\n#   Useful for caching assets between builds.\nRUN script/prepare-assets.sh\n","originalDockerfileUglifiedHash":"1a319f745a7deafaaeac3365b7f6d3f2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/161324aaa37bd29d0e1dc7a2d8a73cba559009fd.dockerfile"}