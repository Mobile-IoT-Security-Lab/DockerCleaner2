{"seed":587547011,"processedDockerfileHash":"6dc512b46cc9d0ea3d68d8377027e975","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  upstream https://github.com/frol/docker-alpine-oraclejdk8\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash=4.4.19-r1 tzdata=2020a-r0 vim=8.1.1365-r0 tini=0.18.0-r0 su-exec=0.2-r0 gzip=1.9-r0 tar=1.32-r0 wget=1.20.3-r0 curl=7.61.1-r3 \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#   Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.28-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add wget=1.20.3-r0 ca-certificates=20191127-r2 --no-cache --virtual=.build-dependencies \\\n && wget \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" -O \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" --no-cache \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nENV JAVA_VERSION=\"8\" \\\n    JAVA_UPDATE=\"181\" \\\n    JAVA_BUILD=\"13\" \\\n    JAVA_PATH=\"96a7b8442fe848ef90c96a2fad6ed6d1\" \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nRUN apk add wget=1.20.3-r0 ca-certificates=20191127-r2 unzip=6.0-r6 --no-cache --virtual=build-dependencies \\\n && cd \"/tmp\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && mkdir -p \"/usr/lib/jvm\" \\\n && mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \\\n && ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" \\\n && ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" \\\n && rm -rf \"$JAVA_HOME/\"*src.zip \\\n && rm -rf \"$JAVA_HOME/lib/missioncontrol\" \"$JAVA_HOME/lib/visualvm\" \"$JAVA_HOME/lib/\"*javafx* \"$JAVA_HOME/jre/lib/plugin.jar\" \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \"$JAVA_HOME/jre/bin/javaws\" \"$JAVA_HOME/jre/lib/javaws.jar\" \"$JAVA_HOME/jre/lib/desktop\" \"$JAVA_HOME/jre/plugin\" \"$JAVA_HOME/jre/lib/\"deploy* \"$JAVA_HOME/jre/lib/\"*javafx* \"$JAVA_HOME/jre/lib/\"*jfx* \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so \\\n && rm -rf \"$JAVA_HOME/jre/bin/jjs\" \"$JAVA_HOME/jre/bin/keytool\" \"$JAVA_HOME/jre/bin/orbd\" \"$JAVA_HOME/jre/bin/pack200\" \"$JAVA_HOME/jre/bin/policytool\" \"$JAVA_HOME/jre/bin/rmid\" \"$JAVA_HOME/jre/bin/rmiregistry\" \"$JAVA_HOME/jre/bin/servertool\" \"$JAVA_HOME/jre/bin/tnameserv\" \"$JAVA_HOME/jre/bin/unpack200\" \"$JAVA_HOME/jre/lib/ext/nashorn.jar\" \"$JAVA_HOME/jre/lib/jfr.jar\" \"$JAVA_HOME/jre/lib/jfr\" \"$JAVA_HOME/jre/lib/oblique-fonts\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" \\\n && unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" \\\n && rm \"${JAVA_HOME}/jre/lib/security/README.txt\" \\\n && apk del build-dependencies \\\n && rm \"/tmp/\"*\nARG MAVEN_VERSION=3.5.4\nARG USER_HOME_DIR=\"/root\"\nARG SHA=ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d\n#  ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n && echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n && rm -f /tmp/apache-maven.tar.gz \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\nCOPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\nENTRYPOINT [\"/usr/local/bin/mvn-entrypoint.sh\"]\nCMD [\"mvn\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/frol/docker-alpine-oraclejdk8\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#  Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash tzdata vim tini su-exec gzip tar wget curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#  Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.28-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add --no-cache --virtual=.build-dependencies wget ca-certificates \\\n && wget \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" -O \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add --no-cache \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nENV JAVA_VERSION=\"8\" \\\n    JAVA_UPDATE=\"181\" \\\n    JAVA_BUILD=\"13\" \\\n    JAVA_PATH=\"96a7b8442fe848ef90c96a2fad6ed6d1\" \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nRUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip \\\n && cd \"/tmp\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && mkdir -p \"/usr/lib/jvm\" \\\n && mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \\\n && ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" \\\n && ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" \\\n && rm -rf \"$JAVA_HOME/\"*src.zip \\\n && rm -rf \"$JAVA_HOME/lib/missioncontrol\" \"$JAVA_HOME/lib/visualvm\" \"$JAVA_HOME/lib/\"*javafx* \"$JAVA_HOME/jre/lib/plugin.jar\" \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \"$JAVA_HOME/jre/bin/javaws\" \"$JAVA_HOME/jre/lib/javaws.jar\" \"$JAVA_HOME/jre/lib/desktop\" \"$JAVA_HOME/jre/plugin\" \"$JAVA_HOME/jre/lib/\"deploy* \"$JAVA_HOME/jre/lib/\"*javafx* \"$JAVA_HOME/jre/lib/\"*jfx* \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so \\\n && rm -rf \"$JAVA_HOME/jre/bin/jjs\" \"$JAVA_HOME/jre/bin/keytool\" \"$JAVA_HOME/jre/bin/orbd\" \"$JAVA_HOME/jre/bin/pack200\" \"$JAVA_HOME/jre/bin/policytool\" \"$JAVA_HOME/jre/bin/rmid\" \"$JAVA_HOME/jre/bin/rmiregistry\" \"$JAVA_HOME/jre/bin/servertool\" \"$JAVA_HOME/jre/bin/tnameserv\" \"$JAVA_HOME/jre/bin/unpack200\" \"$JAVA_HOME/jre/lib/ext/nashorn.jar\" \"$JAVA_HOME/jre/lib/jfr.jar\" \"$JAVA_HOME/jre/lib/jfr\" \"$JAVA_HOME/jre/lib/oblique-fonts\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" \\\n && unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" \\\n && rm \"${JAVA_HOME}/jre/lib/security/README.txt\" \\\n && apk del build-dependencies \\\n && rm \"/tmp/\"*\nARG MAVEN_VERSION=3.5.4\nARG USER_HOME_DIR=\"/root\"\nARG SHA=ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d\n# ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n && echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n && rm -f /tmp/apache-maven.tar.gz \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\nCOPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\nENTRYPOINT [\"/usr/local/bin/mvn-entrypoint.sh\"]\nCMD [\"mvn\"]\n","injectedSmells":[],"originalDockerfileHash":"01a3c68abb1adc02aa68879a23054183","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/frol/docker-alpine-oraclejdk8\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash tzdata vim tini su-exec gzip tar wget curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#   Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.28-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add --no-cache --virtual=.build-dependencies wget ca-certificates \\\n && wget \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" -O \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add --no-cache \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nENV JAVA_VERSION=\"8\" \\\n    JAVA_UPDATE=\"181\" \\\n    JAVA_BUILD=\"13\" \\\n    JAVA_PATH=\"96a7b8442fe848ef90c96a2fad6ed6d1\" \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nRUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip \\\n && cd \"/tmp\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && mkdir -p \"/usr/lib/jvm\" \\\n && mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \\\n && ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" \\\n && ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" \\\n && rm -rf \"$JAVA_HOME/\"*src.zip \\\n && rm -rf \"$JAVA_HOME/lib/missioncontrol\" \"$JAVA_HOME/lib/visualvm\" \"$JAVA_HOME/lib/\"*javafx* \"$JAVA_HOME/jre/lib/plugin.jar\" \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \"$JAVA_HOME/jre/bin/javaws\" \"$JAVA_HOME/jre/lib/javaws.jar\" \"$JAVA_HOME/jre/lib/desktop\" \"$JAVA_HOME/jre/plugin\" \"$JAVA_HOME/jre/lib/\"deploy* \"$JAVA_HOME/jre/lib/\"*javafx* \"$JAVA_HOME/jre/lib/\"*jfx* \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so \\\n && rm -rf \"$JAVA_HOME/jre/bin/jjs\" \"$JAVA_HOME/jre/bin/keytool\" \"$JAVA_HOME/jre/bin/orbd\" \"$JAVA_HOME/jre/bin/pack200\" \"$JAVA_HOME/jre/bin/policytool\" \"$JAVA_HOME/jre/bin/rmid\" \"$JAVA_HOME/jre/bin/rmiregistry\" \"$JAVA_HOME/jre/bin/servertool\" \"$JAVA_HOME/jre/bin/tnameserv\" \"$JAVA_HOME/jre/bin/unpack200\" \"$JAVA_HOME/jre/lib/ext/nashorn.jar\" \"$JAVA_HOME/jre/lib/jfr.jar\" \"$JAVA_HOME/jre/lib/jfr\" \"$JAVA_HOME/jre/lib/oblique-fonts\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" \\\n && unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" \\\n && rm \"${JAVA_HOME}/jre/lib/security/README.txt\" \\\n && apk del build-dependencies \\\n && rm \"/tmp/\"*\nARG MAVEN_VERSION=3.5.4\nARG USER_HOME_DIR=\"/root\"\nARG SHA=ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d\n#  ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n && echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n && rm -f /tmp/apache-maven.tar.gz \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\nCOPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\nENTRYPOINT [\"/usr/local/bin/mvn-entrypoint.sh\"]\nCMD [\"mvn\"]\n","originalDockerfileUglifiedHash":"ceec90a304b0802c7eed1c24cff5de6e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/402fa013035c3d95f4f6cdc4b12015d40f71f03e.dockerfile"}