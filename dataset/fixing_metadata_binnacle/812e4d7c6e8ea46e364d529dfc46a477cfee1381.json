{"seed":302894548,"processedDockerfileHash":"fc536fb6a6c3fe7516be77cb672f05fb","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck"],"processedDockerfile":"FROM debian:sid\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends antlr4 automake autotools-dev bison build-essential checkinstall clang-6.0 clang-format-6.0 cmake curl default-jdk dh-lua ed gawk git gobject-introspection icheck lcov libantlr4-runtime-dev libaugeas-dev libboost-all-dev libbotan-2-dev libdbus-1-dev libev-dev libgirepository1.0-dev libgit2-dev libglib2.0-dev liblua5.3-dev libpcre++-dev libpcre3-dev libpython3-dev libssl-dev libsystemd-dev libuv1-dev libxerces-c-dev libyajl-dev libyaml-cpp-dev libzmq3-dev llvm maven moreutils ninja-build npm pkg-config python-dev python-pip python3-dev ruby-dev sloccount swig3.0 systemd tao-pegtl-dev tclcl-dev valgrind -y \\\n && rm -rf /var/lib/apt/lists/*\n#   YAEP\nARG YAEP_VERSION=550de4cc5600d5f6109c7ebcfbacec51bf80d8d3\nRUN cd /tmp \\\n && mkdir yaep \\\n && curl -o yaep.tar.gz -L https://github.com/vnmakarov/yaep/archive/${YAEP_VERSION}.tar.gz \\\n && tar -zxvf yaep.tar.gz --strip-components=1 -C yaep \\\n && cd yaep \\\n && mkdir build \\\n && cd build \\\n && env CFLAGS='-fPIC' CXXFLAGS='-fPIC' cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make install \\\n && cd ../.. \\\n && rm -r yaep yaep.tar.gz\n#   Update cache for shared libraries\nRUN ldconfig\nRUN pip install cmake-format[yaml]==0.4.5\n#   Google Test\nENV GTEST_ROOT=\"/opt/gtest\"\nARG GTEST_VER=release-1.8.1\nRUN mkdir -p ${GTEST_ROOT} \\\n && cd /tmp \\\n && curl -o gtest.tar.gz -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n && rm gtest.tar.gz\n#   Prettier\nRUN npm install prettier@1.16.4 --global\n#   hyperfine\nARG HYPERFINE_VERSION=1.5.0\nRUN cd /tmp \\\n && curl -o hyperfine.deb -L https://github.com/sharkdp/hyperfine/releases/download/v${HYPERFINE_VERSION}/hyperfine_${HYPERFINE_VERSION}_amd64.deb \\\n && dpkg -i hyperfine.deb \\\n && rm hyperfine.deb\n#   Create User:Group\n#   The id is important as jenkins docker agents use the same id that is running\n#   on the slaves to execute containers\nARG JENKINS_GROUPID\nRUN groupadd -g ${JENKINS_GROUPID} -f jenkins\nARG JENKINS_USERID\nRUN useradd --create-home --uid ${JENKINS_USERID} --gid ${JENKINS_GROUPID} --shell \"/bin/bash\" jenkins\nUSER ${JENKINS_USERID}\n#   shfmt\nENV SHFMT_PATH=\"/home/jenkins/bin\"\nENV SHFMT_VERSION=\"v2.6.3\"\nENV PATH=\"${SHFMT_PATH}:${PATH}\"\nRUN mkdir -p \"${SHFMT_PATH}\" \\\n && cd \"${SHFMT_PATH}\" \\\n && curl -L \"https://github.com/mvdan/sh/releases/download/${SHFMT_VERSION}/shfmt_${SHFMT_VERSION}_linux_amd64\" -o shfmt \\\n && chmod a+x shfmt\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:sid\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install antlr4 automake autotools-dev bison build-essential checkinstall clang-6.0 clang-format-6.0 cmake curl default-jdk dh-lua ed gawk git gobject-introspection icheck lcov libantlr4-runtime-dev libaugeas-dev libboost-all-dev libbotan-2-dev libdbus-1-dev libev-dev libgirepository1.0-dev libgit2-dev libglib2.0-dev liblua5.3-dev libpcre++-dev libpcre3-dev libpython3-dev libssl-dev libsystemd-dev libuv1-dev libxerces-c-dev libyajl-dev libyaml-cpp-dev libzmq3-dev llvm maven moreutils ninja-build npm pkg-config python-dev python-pip python3-dev ruby-dev sloccount swig3.0 systemd tao-pegtl-dev tclcl-dev valgrind -y \\\n && rm -rf /var/lib/apt/lists/*\n#  YAEP\nARG YAEP_VERSION=550de4cc5600d5f6109c7ebcfbacec51bf80d8d3\nRUN cd /tmp \\\n && mkdir yaep \\\n && curl -o yaep.tar.gz -L https://github.com/vnmakarov/yaep/archive/${YAEP_VERSION}.tar.gz \\\n && tar -zxvf yaep.tar.gz --strip-components=1 -C yaep \\\n && cd yaep \\\n && mkdir build \\\n && cd build \\\n && env CFLAGS='-fPIC' CXXFLAGS='-fPIC' cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make install \\\n && cd ../.. \\\n && rm -r yaep yaep.tar.gz\n#  Update cache for shared libraries\nRUN ldconfig\nRUN pip install cmake-format[yaml]==0.4.5\n#  Google Test\nENV GTEST_ROOT=\"/opt/gtest\"\nARG GTEST_VER=release-1.8.1\nRUN mkdir -p ${GTEST_ROOT} \\\n && cd /tmp \\\n && curl -o gtest.tar.gz -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n && rm gtest.tar.gz\n#  Prettier\nRUN npm install prettier@1.16.4 --global\n#  hyperfine\nARG HYPERFINE_VERSION=1.5.0\nRUN cd /tmp \\\n && curl -o hyperfine.deb -L https://github.com/sharkdp/hyperfine/releases/download/v${HYPERFINE_VERSION}/hyperfine_${HYPERFINE_VERSION}_amd64.deb \\\n && dpkg -i hyperfine.deb \\\n && rm hyperfine.deb\n#  Create User:Group\n#  The id is important as jenkins docker agents use the same id that is running\n#  on the slaves to execute containers\nARG JENKINS_GROUPID\nRUN groupadd -g ${JENKINS_GROUPID} -f jenkins\nARG JENKINS_USERID\nRUN useradd --create-home --uid ${JENKINS_USERID} --gid ${JENKINS_GROUPID} --shell \"/bin/bash\" jenkins\nUSER ${JENKINS_USERID}\n#  shfmt\nENV SHFMT_PATH=\"/home/jenkins/bin\"\nENV SHFMT_VERSION=\"v2.6.3\"\nENV PATH=\"${SHFMT_PATH}:${PATH}\"\nRUN mkdir -p \"${SHFMT_PATH}\" \\\n && cd \"${SHFMT_PATH}\" \\\n && curl -L \"https://github.com/mvdan/sh/releases/download/${SHFMT_VERSION}/shfmt_${SHFMT_VERSION}_linux_amd64\" -o shfmt \\\n && chmod a+x shfmt\n","injectedSmells":[],"originalDockerfileHash":"b89d27ea873a2d410962f40b120dcdd4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:sid\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install antlr4 automake autotools-dev bison build-essential checkinstall clang-6.0 clang-format-6.0 cmake curl default-jdk dh-lua ed gawk git gobject-introspection icheck lcov libantlr4-runtime-dev libaugeas-dev libboost-all-dev libbotan-2-dev libdbus-1-dev libev-dev libgirepository1.0-dev libgit2-dev libglib2.0-dev liblua5.3-dev libpcre++-dev libpcre3-dev libpython3-dev libssl-dev libsystemd-dev libuv1-dev libxerces-c-dev libyajl-dev libyaml-cpp-dev libzmq3-dev llvm maven moreutils ninja-build npm pkg-config python-dev python-pip python3-dev ruby-dev sloccount swig3.0 systemd tao-pegtl-dev tclcl-dev valgrind -y \\\n && rm -rf /var/lib/apt/lists/*\n#   YAEP\nARG YAEP_VERSION=550de4cc5600d5f6109c7ebcfbacec51bf80d8d3\nRUN cd /tmp \\\n && mkdir yaep \\\n && curl -o yaep.tar.gz -L https://github.com/vnmakarov/yaep/archive/${YAEP_VERSION}.tar.gz \\\n && tar -zxvf yaep.tar.gz --strip-components=1 -C yaep \\\n && cd yaep \\\n && mkdir build \\\n && cd build \\\n && env CFLAGS='-fPIC' CXXFLAGS='-fPIC' cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make install \\\n && cd ../.. \\\n && rm -r yaep yaep.tar.gz\n#   Update cache for shared libraries\nRUN ldconfig\nRUN pip install cmake-format[yaml]==0.4.5\n#   Google Test\nENV GTEST_ROOT=\"/opt/gtest\"\nARG GTEST_VER=release-1.8.1\nRUN mkdir -p ${GTEST_ROOT} \\\n && cd /tmp \\\n && curl -o gtest.tar.gz -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n && rm gtest.tar.gz\n#   Prettier\nRUN npm install prettier@1.16.4 --global\n#   hyperfine\nARG HYPERFINE_VERSION=1.5.0\nRUN cd /tmp \\\n && curl -o hyperfine.deb -L https://github.com/sharkdp/hyperfine/releases/download/v${HYPERFINE_VERSION}/hyperfine_${HYPERFINE_VERSION}_amd64.deb \\\n && dpkg -i hyperfine.deb \\\n && rm hyperfine.deb\n#   Create User:Group\n#   The id is important as jenkins docker agents use the same id that is running\n#   on the slaves to execute containers\nARG JENKINS_GROUPID\nRUN groupadd -g ${JENKINS_GROUPID} -f jenkins\nARG JENKINS_USERID\nRUN useradd --create-home --uid ${JENKINS_USERID} --gid ${JENKINS_GROUPID} --shell \"/bin/bash\" jenkins\nUSER ${JENKINS_USERID}\n#   shfmt\nENV SHFMT_PATH=\"/home/jenkins/bin\"\nENV SHFMT_VERSION=\"v2.6.3\"\nENV PATH=\"${SHFMT_PATH}:${PATH}\"\nRUN mkdir -p \"${SHFMT_PATH}\" \\\n && cd \"${SHFMT_PATH}\" \\\n && curl -L \"https://github.com/mvdan/sh/releases/download/${SHFMT_VERSION}/shfmt_${SHFMT_VERSION}_linux_amd64\" -o shfmt \\\n && chmod a+x shfmt\n","originalDockerfileUglifiedHash":"9eadd2f52e51c5d3bd6e82615d287f6a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/812e4d7c6e8ea46e364d529dfc46a477cfee1381.dockerfile"}