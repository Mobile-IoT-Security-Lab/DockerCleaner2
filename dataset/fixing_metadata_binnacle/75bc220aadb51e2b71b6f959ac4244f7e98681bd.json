{"seed":1022099972,"processedDockerfileHash":"94f732de85f6844ea2d0141ba1792dad","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:%%PLACEHOLDER%%\nRUN apk add gmp-dev --no-cache\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"%%VERSION%%\"\nENV RUBY_VERSION=\"%%FULL_VERSION%%\"\nENV RUBY_DOWNLOAD_SHA256=\"%%SHA256%%\"\nENV RUBYGEMS_VERSION=\"%%RUBYGEMS%%\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\n#   readline-dev vs libedit-dev: https://bugs.ruby-lang.org/issues/11869 and https://github.com/docker-library/ruby/issues/75\nRUN set -ex \\\n && apk add autoconf bison bzip2 bzip2-dev ca-certificates coreutils dpkg-dev dpkg gcc gdbm-dev glib-dev libc-dev libffi-dev libxml2-dev libxslt-dev linux-headers make ncurses-dev openssl openssl-dev procps readline-dev ruby tar xz yaml-dev zlib-dev --no-cache --virtual .ruby-builddeps \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && wget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch' \\\n && echo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch' | sha256sum -c - \\\n && patch -p1 -i thread-stack-fix.patch \\\n && rm thread-stack-fix.patch \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && export ac_cv_func_isnan=yes ac_cv_func_isinf=yes \\\n && ./configure --build=\"$gnuArch\" --disable-install-doc --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add bzip2 ca-certificates libffi-dev procps yaml-dev zlib-dev $runDeps --no-network --virtual .ruby-rundeps \\\n && apk del --no-network .ruby-builddeps \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && ruby -e 'exit(Gem::Version.create(ENV[\"RUBYGEMS_VERSION\"]) > Gem::Version.create(Gem::VERSION))' \\\n && gem update --system \"$RUBYGEMS_VERSION\" \\\n && rm -r /root/.gem/ \\\n && ruby --version \\\n && gem --version \\\n && bundle --version\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n#   path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH=\"$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\"\n#   adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" \\\n && chmod 777 \"$GEM_HOME\"\n#   (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\nCMD [\"irb\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:%%PLACEHOLDER%%\nRUN apk add --no-cache gmp-dev\n#  skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"%%VERSION%%\"\nENV RUBY_VERSION=\"%%FULL_VERSION%%\"\nENV RUBY_DOWNLOAD_SHA256=\"%%SHA256%%\"\nENV RUBYGEMS_VERSION=\"%%RUBYGEMS%%\"\n#  some of ruby's build scripts are written in ruby\n#    we purge system ruby later to make sure our final image uses what we just built\n#  readline-dev vs libedit-dev: https://bugs.ruby-lang.org/issues/11869 and https://github.com/docker-library/ruby/issues/75\nRUN set -ex \\\n && apk add --no-cache --virtual .ruby-builddeps autoconf bison bzip2 bzip2-dev ca-certificates coreutils dpkg-dev dpkg gcc gdbm-dev glib-dev libc-dev libffi-dev libxml2-dev libxslt-dev linux-headers make ncurses-dev openssl openssl-dev procps readline-dev ruby tar xz yaml-dev zlib-dev \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && wget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch' \\\n && echo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch' | sha256sum -c - \\\n && patch -p1 -i thread-stack-fix.patch \\\n && rm thread-stack-fix.patch \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && export ac_cv_func_isnan=yes ac_cv_func_isinf=yes \\\n && ./configure --build=\"$gnuArch\" --disable-install-doc --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --no-network --virtual .ruby-rundeps $runDeps bzip2 ca-certificates libffi-dev procps yaml-dev zlib-dev \\\n && apk del --no-network .ruby-builddeps \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && ruby -e 'exit(Gem::Version.create(ENV[\"RUBYGEMS_VERSION\"]) > Gem::Version.create(Gem::VERSION))' \\\n && gem update --system \"$RUBYGEMS_VERSION\" \\\n && rm -r /root/.gem/ \\\n && ruby --version \\\n && gem --version \\\n && bundle --version\n#  install things globally, for great justice\n#  and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n#  path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH=\"$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\"\n#  adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" \\\n && chmod 777 \"$GEM_HOME\"\n#  (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\nCMD [\"irb\"]\n","injectedSmells":[],"originalDockerfileHash":"6f9ac397cac8142d7d7c0bb53cec0204","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:%%PLACEHOLDER%%\nRUN apk add --no-cache gmp-dev\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"%%VERSION%%\"\nENV RUBY_VERSION=\"%%FULL_VERSION%%\"\nENV RUBY_DOWNLOAD_SHA256=\"%%SHA256%%\"\nENV RUBYGEMS_VERSION=\"%%RUBYGEMS%%\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\n#   readline-dev vs libedit-dev: https://bugs.ruby-lang.org/issues/11869 and https://github.com/docker-library/ruby/issues/75\nRUN set -ex \\\n && apk add --no-cache --virtual .ruby-builddeps autoconf bison bzip2 bzip2-dev ca-certificates coreutils dpkg-dev dpkg gcc gdbm-dev glib-dev libc-dev libffi-dev libxml2-dev libxslt-dev linux-headers make ncurses-dev openssl openssl-dev procps readline-dev ruby tar xz yaml-dev zlib-dev \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && wget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch' \\\n && echo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645 *thread-stack-fix.patch' | sha256sum -c - \\\n && patch -p1 -i thread-stack-fix.patch \\\n && rm thread-stack-fix.patch \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && export ac_cv_func_isnan=yes ac_cv_func_isinf=yes \\\n && ./configure --build=\"$gnuArch\" --disable-install-doc --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --no-network --virtual .ruby-rundeps $runDeps bzip2 ca-certificates libffi-dev procps yaml-dev zlib-dev \\\n && apk del --no-network .ruby-builddeps \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && ruby -e 'exit(Gem::Version.create(ENV[\"RUBYGEMS_VERSION\"]) > Gem::Version.create(Gem::VERSION))' \\\n && gem update --system \"$RUBYGEMS_VERSION\" \\\n && rm -r /root/.gem/ \\\n && ruby --version \\\n && gem --version \\\n && bundle --version\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n#   path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH=\"$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\"\n#   adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" \\\n && chmod 777 \"$GEM_HOME\"\n#   (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\nCMD [\"irb\"]\n","originalDockerfileUglifiedHash":"1702ad7b25db00a9d11dbc8be096ec55","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/75bc220aadb51e2b71b6f959ac4244f7e98681bd.dockerfile"}