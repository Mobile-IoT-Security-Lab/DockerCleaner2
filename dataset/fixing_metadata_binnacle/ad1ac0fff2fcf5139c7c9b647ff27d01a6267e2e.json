{"seed":3956085540,"processedDockerfileHash":"2bfe02aec34f826361686d78e61117bb","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:19.04\n#   Packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends gpg curl wget lsb-release add-apt-key ca-certificates dumb-init -y \\\n && rm -rf /var/lib/apt/lists/*\n#   CF CLI\nRUN curl -sS -o - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add \\\n && echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends cf-cli -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Helm CLI\nRUN curl \"https://raw.githubusercontent.com/helm/helm/master/scripts/get\" | bash\n#   Kubectl CLI\nRUN curl -sL \"https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl\" -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#   Azure CLI\nRUN curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $( lsb_release -cs ;) main\" | tee /etc/apt/sources.list.d/azure-cli.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends azure-cli -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Common SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends git sudo gdb pkg-config build-essential -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Node SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends nodejs npm -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Golang SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends golang-1.12 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Python SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3 python-dev python3-pip -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN python3 -m pip install --upgrade setuptools \\\n && python3 -m pip install wheel \\\n && python3 -m pip install -U pylint\n#   Java SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends default-jre-headless default-jdk-headless maven gradle -y \\\n && rm -rf /var/lib/apt/lists/*\n#   .NET Core SDK\n#   RUN curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null\n#   RUN echo \"deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod $(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/microsoft-prod.list\n#   RUN apt-get update && apt-get install --no-install-recommends -y \\\n#      libunwind8 \\\n#      dotnet-sdk-2.2 \\\n#      && rm -rf /var/lib/apt/lists/*\n#   Chromium\nRUN apt-get update \\\n && apt-get install --no-install-recommends chromium-browser -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Chrome\n#   RUN curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add\n#   RUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list\n#   RUN apt-get update && apt-get install --no-install-recommends -y \\\n#      google-chrome-stable \\\n#      && rm -rf /var/lib/apt/lists/*\n#   Code-Server\nRUN apt-get update \\\n && apt-get install --no-install-recommends bsdtar openssl locales net-tools -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nENV DISABLE_TELEMETRY=\"true\"\nENV CODE_VERSION=\"1.1119-vsc1.33.1\"\nRUN curl -sL https://github.com/cdr/code-server/releases/download/${CODE_VERSION}/code-server${CODE_VERSION}-linux-x64.tar.gz | tar --strip-components=1 -zx -C /usr/local/bin code-server${CODE_VERSION}-linux-x64/code-server\n#   Setup User\nRUN groupadd -r coder \\\n && useradd -m -r coder -g coder -s /bin/bash \\\n && echo \"coder ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/nopasswd\nUSER coder\n#   Setup User Go Environment\nRUN mkdir /home/coder/go\nENV GOPATH=\"\\\"/home/coder/go\\\"\"\nENV PATH=\"\\\"${PATH}:/usr/local/go/bin:/home/coder/go/bin\\\"\"\n#   Setup Uset .NET Environment\n#   ENV DOTNET_CLI_TELEMETRY_OPTOUT \"true\"\n#   ENV MSBuildSDKsPath \"/usr/share/dotnet/sdk/2.2.202/Sdks\"\n#   ENV PATH \"${PATH}:${MSBuildSDKsPath}\"\n#   Setup User Visual Studio Code Extentions\nENV VSCODE_USER=\"\\\"/home/coder/.local/share/code-server/User\\\"\"\nENV VSCODE_EXTENSIONS=\"\\\"/home/coder/.local/share/code-server/extensions\\\"\"\nRUN mkdir -p ${VSCODE_USER}\nCOPY --chown=coder:coder settings.json /home/coder/.local/share/code-server/User/\n#   Setup Go Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/go \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-vscode/vsextensions/Go/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/go extension\n#   Setup Python Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/python \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-python/vsextensions/python/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/python extension\n#   Setup Java Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/java \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/java/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/java-debugger \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-debug/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java-debugger extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/java-test \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-test/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java-test extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/maven \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-maven/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/maven extension\n#   Setup Kubernetes Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/yaml \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/vscode-yaml/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/yaml extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/kubernetes \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-kubernetes-tools/vsextensions/vscode-kubernetes-tools/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/kubernetes extension\nRUN helm init --client-only\n#   Setup Browser Preview\nRUN mkdir -p ${VSCODE_EXTENSIONS}/browser-debugger \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/msjsdiag/vsextensions/debugger-for-chrome/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/browser-debugger extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/browser-preview \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/auchenberg/vsextensions/vscode-browser-preview/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/browser-preview extension\n#   Setup User Workspace\nRUN mkdir -p /home/coder/project\nWORKDIR /home/coder/project\nENTRYPOINT [\"dumb-init\", \"code-server\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:19.04\n#  Packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends gpg curl wget lsb-release add-apt-key ca-certificates dumb-init -y \\\n && rm -rf /var/lib/apt/lists/*\n#  CF CLI\nRUN curl -sS -o - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add \\\n && echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends cf-cli -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Helm CLI\nRUN curl \"https://raw.githubusercontent.com/helm/helm/master/scripts/get\" | bash\n#  Kubectl CLI\nRUN curl -sL \"https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl\" -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#  Azure CLI\nRUN curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $( lsb_release -cs ;) main\" | tee /etc/apt/sources.list.d/azure-cli.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends azure-cli -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Common SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends git sudo gdb pkg-config build-essential -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Node SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends nodejs npm -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Golang SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends golang-1.12 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Python SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3 python-dev python3-pip -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN python3 -m pip install --upgrade setuptools \\\n && python3 -m pip install wheel \\\n && python3 -m pip install -U pylint\n#  Java SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends default-jre-headless default-jdk-headless maven gradle -y \\\n && rm -rf /var/lib/apt/lists/*\n#  .NET Core SDK\n#  RUN curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null\n#  RUN echo \"deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod $(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/microsoft-prod.list\n#  RUN apt-get update && apt-get install --no-install-recommends -y \\\n#     libunwind8 \\\n#     dotnet-sdk-2.2 \\\n#     && rm -rf /var/lib/apt/lists/*\n#  Chromium\nRUN apt-get update \\\n && apt-get install --no-install-recommends chromium-browser -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Chrome\n#  RUN curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add\n#  RUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list\n#  RUN apt-get update && apt-get install --no-install-recommends -y \\\n#     google-chrome-stable \\\n#     && rm -rf /var/lib/apt/lists/*\n#  Code-Server\nRUN apt-get update \\\n && apt-get install --no-install-recommends bsdtar openssl locales net-tools -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nENV DISABLE_TELEMETRY=\"true\"\nENV CODE_VERSION=\"1.1119-vsc1.33.1\"\nRUN curl -sL https://github.com/cdr/code-server/releases/download/${CODE_VERSION}/code-server${CODE_VERSION}-linux-x64.tar.gz | tar --strip-components=1 -zx -C /usr/local/bin code-server${CODE_VERSION}-linux-x64/code-server\n#  Setup User\nRUN groupadd -r coder \\\n && useradd -m -r coder -g coder -s /bin/bash \\\n && echo \"coder ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/nopasswd\nUSER coder\n#  Setup User Go Environment\nRUN mkdir /home/coder/go\nENV GOPATH=\"\\\"/home/coder/go\\\"\"\nENV PATH=\"\\\"${PATH}:/usr/local/go/bin:/home/coder/go/bin\\\"\"\n#  Setup Uset .NET Environment\n#  ENV DOTNET_CLI_TELEMETRY_OPTOUT \"true\"\n#  ENV MSBuildSDKsPath \"/usr/share/dotnet/sdk/2.2.202/Sdks\"\n#  ENV PATH \"${PATH}:${MSBuildSDKsPath}\"\n#  Setup User Visual Studio Code Extentions\nENV VSCODE_USER=\"\\\"/home/coder/.local/share/code-server/User\\\"\"\nENV VSCODE_EXTENSIONS=\"\\\"/home/coder/.local/share/code-server/extensions\\\"\"\nRUN mkdir -p ${VSCODE_USER}\nCOPY --chown=coder:coder settings.json /home/coder/.local/share/code-server/User/\n#  Setup Go Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/go \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-vscode/vsextensions/Go/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/go extension\n#  Setup Python Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/python \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-python/vsextensions/python/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/python extension\n#  Setup Java Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/java \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/java/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/java-debugger \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-debug/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java-debugger extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/java-test \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-test/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java-test extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/maven \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-maven/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/maven extension\n#  Setup Kubernetes Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/yaml \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/vscode-yaml/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/yaml extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/kubernetes \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-kubernetes-tools/vsextensions/vscode-kubernetes-tools/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/kubernetes extension\nRUN helm init --client-only\n#  Setup Browser Preview\nRUN mkdir -p ${VSCODE_EXTENSIONS}/browser-debugger \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/msjsdiag/vsextensions/debugger-for-chrome/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/browser-debugger extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/browser-preview \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/auchenberg/vsextensions/vscode-browser-preview/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/browser-preview extension\n#  Setup User Workspace\nRUN mkdir -p /home/coder/project\nWORKDIR /home/coder/project\nENTRYPOINT [\"dumb-init\", \"code-server\"]\n","injectedSmells":[],"originalDockerfileHash":"c83ea5cd6a0a79837ed3c68bebcd1324","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:19.04\n#   Packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends gpg curl wget lsb-release add-apt-key ca-certificates dumb-init -y \\\n && rm -rf /var/lib/apt/lists/*\n#   CF CLI\nRUN curl -sS -o - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add \\\n && echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends cf-cli -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Helm CLI\nRUN curl \"https://raw.githubusercontent.com/helm/helm/master/scripts/get\" | bash\n#   Kubectl CLI\nRUN curl -sL \"https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl\" -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#   Azure CLI\nRUN curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $( lsb_release -cs ;) main\" | tee /etc/apt/sources.list.d/azure-cli.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends azure-cli -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Common SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends git sudo gdb pkg-config build-essential -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Node SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends nodejs npm -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Golang SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends golang-1.12 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Python SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3 python-dev python3-pip -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN python3 -m pip install --upgrade setuptools \\\n && python3 -m pip install wheel \\\n && python3 -m pip install -U pylint\n#   Java SDK\nRUN apt-get update \\\n && apt-get install --no-install-recommends default-jre-headless default-jdk-headless maven gradle -y \\\n && rm -rf /var/lib/apt/lists/*\n#   .NET Core SDK\n#   RUN curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null\n#   RUN echo \"deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod $(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/microsoft-prod.list\n#   RUN apt-get update && apt-get install --no-install-recommends -y \\\n#      libunwind8 \\\n#      dotnet-sdk-2.2 \\\n#      && rm -rf /var/lib/apt/lists/*\n#   Chromium\nRUN apt-get update \\\n && apt-get install --no-install-recommends chromium-browser -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Chrome\n#   RUN curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add\n#   RUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list\n#   RUN apt-get update && apt-get install --no-install-recommends -y \\\n#      google-chrome-stable \\\n#      && rm -rf /var/lib/apt/lists/*\n#   Code-Server\nRUN apt-get update \\\n && apt-get install --no-install-recommends bsdtar openssl locales net-tools -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nENV DISABLE_TELEMETRY=\"true\"\nENV CODE_VERSION=\"1.1119-vsc1.33.1\"\nRUN curl -sL https://github.com/cdr/code-server/releases/download/${CODE_VERSION}/code-server${CODE_VERSION}-linux-x64.tar.gz | tar --strip-components=1 -zx -C /usr/local/bin code-server${CODE_VERSION}-linux-x64/code-server\n#   Setup User\nRUN groupadd -r coder \\\n && useradd -m -r coder -g coder -s /bin/bash \\\n && echo \"coder ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/nopasswd\nUSER coder\n#   Setup User Go Environment\nRUN mkdir /home/coder/go\nENV GOPATH=\"\\\"/home/coder/go\\\"\"\nENV PATH=\"\\\"${PATH}:/usr/local/go/bin:/home/coder/go/bin\\\"\"\n#   Setup Uset .NET Environment\n#   ENV DOTNET_CLI_TELEMETRY_OPTOUT \"true\"\n#   ENV MSBuildSDKsPath \"/usr/share/dotnet/sdk/2.2.202/Sdks\"\n#   ENV PATH \"${PATH}:${MSBuildSDKsPath}\"\n#   Setup User Visual Studio Code Extentions\nENV VSCODE_USER=\"\\\"/home/coder/.local/share/code-server/User\\\"\"\nENV VSCODE_EXTENSIONS=\"\\\"/home/coder/.local/share/code-server/extensions\\\"\"\nRUN mkdir -p ${VSCODE_USER}\nCOPY --chown=coder:coder settings.json /home/coder/.local/share/code-server/User/\n#   Setup Go Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/go \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-vscode/vsextensions/Go/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/go extension\n#   Setup Python Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/python \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-python/vsextensions/python/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/python extension\n#   Setup Java Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/java \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/java/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/java-debugger \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-debug/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java-debugger extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/java-test \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-test/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/java-test extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/maven \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-maven/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/maven extension\n#   Setup Kubernetes Extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/yaml \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/vscode-yaml/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/yaml extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/kubernetes \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-kubernetes-tools/vsextensions/vscode-kubernetes-tools/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/kubernetes extension\nRUN helm init --client-only\n#   Setup Browser Preview\nRUN mkdir -p ${VSCODE_EXTENSIONS}/browser-debugger \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/msjsdiag/vsextensions/debugger-for-chrome/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/browser-debugger extension\nRUN mkdir -p ${VSCODE_EXTENSIONS}/browser-preview \\\n && curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/auchenberg/vsextensions/vscode-browser-preview/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/browser-preview extension\n#   Setup User Workspace\nRUN mkdir -p /home/coder/project\nWORKDIR /home/coder/project\nENTRYPOINT [\"dumb-init\", \"code-server\"]\n","originalDockerfileUglifiedHash":"ffdeb454b0e8d221d45794785d6d9839","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ad1ac0fff2fcf5139c7c9b647ff27d01a6267e2e.dockerfile"}