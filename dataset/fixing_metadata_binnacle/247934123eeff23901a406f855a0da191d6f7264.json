{"seed":2709129382,"processedDockerfileHash":"04afb9ec879e8e35f69fcd2d8b34963e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends language-pack-en-base=1:16.04+20160627 -qy ) \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN (apt-get update ;apt-get install --no-install-recommends apache2=2.4.18-2ubuntu3.17 -y )\nRUN a2enmod headers\nRUN a2enmod rewrite\n#   add PPA for PHP 7\nRUN (apt-get update ;apt-get install --no-install-recommends apt-utils=1.2.35 -y )\nRUN :\nRUN apt-get -y dist-upgrade\nRUN apt-get remove --purge ca-certificates\nRUN apt-get autoremove\nRUN (apt-get update ;apt-get install --no-install-recommends ca-certificates=20210119~16.04.1 )\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.10 python-software-properties=0.96.20.10 -y )\nRUN add-apt-repository -y ppa:ondrej/php\n#    Adding php 7\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends php7.1 php7.1-fpm php7.1-cli php7.1-common php7.1-mbstring php7.1-gd php7.1-intl php7.1-xml php7.1-mysql php7.1-mcrypt php7.1-zip -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libapache2-mod-php7.1 php7.1 php7.1-cli php-xdebug=2.4.0-1 php7.1-mbstring sqlite3=3.11.0-1ubuntu1.5 php7.1-mysql php-imagick=3.4.0~rc6-1ubuntu3 php-memcached=2.2.0-51-ge573a6e+2.2.0-2build2 php-pear=1:1.10.1+submodules+notgz-6ubuntu0.3 curl=7.47.0-1ubuntu2.19 imagemagick=8:6.8.9.9-7ubuntu5.16 php7.1-dev php7.1-phpdbg php7.1-gd npm=3.5.2-0ubuntu4 nodejs-legacy=4.2.6~dfsg-1ubuntu4.2 php7.1-json php7.1-curl php7.1-sqlite3 php7.1-intl apache2=2.4.18-2ubuntu3.17 vim=2:7.4.1689-3ubuntu1.5 git-core=1:2.7.4-0ubuntu1.10 wget=1.17.1-1ubuntu1.5 libsasl2-dev=2.1.26.dfsg1-14ubuntu0.2 libssl-dev=1.0.2g-1ubuntu4.20 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libsslcommon2-dev=0.16-9ubuntu2 libcurl4-openssl-dev=7.47.0-1ubuntu2.19 autoconf=2.69-9 g++=4:5.3.1-1ubuntu1 make=4.1-6 openssl=1.0.2g-1ubuntu4.20 libssl-dev=1.0.2g-1ubuntu4.20 libcurl4-openssl-dev=7.47.0-1ubuntu2.19 pkg-config=0.29.1-0ubuntu1 libsasl2-dev=2.1.26.dfsg1-14ubuntu0.2 libpcre3-dev=2:8.38-3.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends imagemagick=8:6.8.9.9-7ubuntu5.16 graphicsmagick=1.3.23-1ubuntu0.6 -y )\nRUN a2enmod headers\nRUN a2enmod rewrite\nENV APACHE_RUN_USER=\"www-data\"\nENV APACHE_RUN_GROUP=\"www-data\"\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\nENV APACHE_PID_FILE=\"/var/run/apache2.pid\"\nENV APACHE_RUN_DIR=\"/var/run/apache2\"\nENV APACHE_LOCK_DIR=\"/var/lock/apache2\"\nRUN ln -sf /dev/stdout /var/log/apache2/access.log \\\n && ln -sf /dev/stderr /var/log/apache2/error.log\nRUN mkdir -p $APACHE_RUN_DIR $APACHE_LOCK_DIR $APACHE_LOG_DIR\n#   Update application repository list and install the Redis server. \n#  RUN apt-get update && apt-get install -y redis-server\n#   Allow Composer to be run as root\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Setup the Composer installer\nRUN curl -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n && curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n && php /tmp/composer-setup.php \\\n && chmod a+x composer.phar \\\n && mv composer.phar /usr/local/bin/composer\n#   Install composer dependencies\nRUN echo pwd: `pwd ` \\\n && echo ls: `ls `\n#   RUN composer install\nEXPOSE 80/tcp\n#   Expose default port\n#  EXPOSE 6379\nVOLUME [ \"/var/www/html\" ,\"/etc/mysql\"]\nWORKDIR /var/www/html\nENTRYPOINT [\"/usr/sbin/apache2\"]\nCMD [\"-D\", \"FOREGROUND\"]\nCOPY . /var/www/html\nCOPY ./deploy/vhost.conf /etc/apache2/sites-available/000-default.conf\nRUN chown -R www-data:www-data /var/www/html \\\n && a2enmod rewrite\nRUN chown -R 777 /var/www/html/\nRUN composer install\n#  RUN php artisan vendor:publish --provider=\"Tymon\\JWTAuth\\Providers\\LaravelServiceProvider\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install language-pack-en-base -qy \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get install apache2 -y\nRUN a2enmod headers\nRUN a2enmod rewrite\n#  add PPA for PHP 7\nRUN apt-get install --no-install-recommends apt-utils -y\nRUN apt-get update\nRUN apt-get -y dist-upgrade\nRUN apt-get remove --purge ca-certificates\nRUN apt-get autoremove\nRUN apt-get install ca-certificates\nRUN apt-get install software-properties-common python-software-properties -y\nRUN add-apt-repository -y ppa:ondrej/php\n#   Adding php 7\nRUN apt-get update\nRUN apt-get install php7.1 php7.1-fpm php7.1-cli php7.1-common php7.1-mbstring php7.1-gd php7.1-intl php7.1-xml php7.1-mysql php7.1-mcrypt php7.1-zip -y\nRUN apt-get install libapache2-mod-php7.1 php7.1 php7.1-cli php-xdebug php7.1-mbstring sqlite3 php7.1-mysql php-imagick php-memcached php-pear curl imagemagick php7.1-dev php7.1-phpdbg php7.1-gd npm nodejs-legacy php7.1-json php7.1-curl php7.1-sqlite3 php7.1-intl apache2 vim git-core wget libsasl2-dev libssl-dev -y\nRUN apt-get install libsslcommon2-dev libcurl4-openssl-dev autoconf g++ make openssl libssl-dev libcurl4-openssl-dev pkg-config libsasl2-dev libpcre3-dev -y\nRUN apt-get install imagemagick graphicsmagick -y\nRUN a2enmod headers\nRUN a2enmod rewrite\nENV APACHE_RUN_USER=\"www-data\"\nENV APACHE_RUN_GROUP=\"www-data\"\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\nENV APACHE_PID_FILE=\"/var/run/apache2.pid\"\nENV APACHE_RUN_DIR=\"/var/run/apache2\"\nENV APACHE_LOCK_DIR=\"/var/lock/apache2\"\nRUN ln -sf /dev/stdout /var/log/apache2/access.log \\\n && ln -sf /dev/stderr /var/log/apache2/error.log\nRUN mkdir -p $APACHE_RUN_DIR $APACHE_LOCK_DIR $APACHE_LOG_DIR\n#  Update application repository list and install the Redis server. \n# RUN apt-get update && apt-get install -y redis-server\n#  Allow Composer to be run as root\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\n#  Setup the Composer installer\nRUN curl -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n && curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n && php /tmp/composer-setup.php \\\n && chmod a+x composer.phar \\\n && mv composer.phar /usr/local/bin/composer\n#  Install composer dependencies\nRUN echo pwd: `pwd ` \\\n && echo ls: `ls `\n#  RUN composer install\nEXPOSE 80/tcp\n#  Expose default port\n# EXPOSE 6379\nVOLUME [ \"/var/www/html\" ,\"/etc/mysql\"]\nWORKDIR /var/www/html\nENTRYPOINT [\"/usr/sbin/apache2\"]\nCMD [\"-D\", \"FOREGROUND\"]\nCOPY . /var/www/html\nCOPY ./deploy/vhost.conf /etc/apache2/sites-available/000-default.conf\nRUN chown -R www-data:www-data /var/www/html \\\n && a2enmod rewrite\nRUN chown -R 777 /var/www/html/\nRUN composer install\n# RUN php artisan vendor:publish --provider=\"Tymon\\JWTAuth\\Providers\\LaravelServiceProvider\"\n","injectedSmells":[],"originalDockerfileHash":"a0b9b89e8dfc6429b2563b6fa17a08a6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install language-pack-en-base -qy \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get install apache2 -y\nRUN a2enmod headers\nRUN a2enmod rewrite\n#   add PPA for PHP 7\nRUN apt-get install --no-install-recommends apt-utils -y\nRUN apt-get update\nRUN apt-get -y dist-upgrade\nRUN apt-get remove --purge ca-certificates\nRUN apt-get autoremove\nRUN apt-get install ca-certificates\nRUN apt-get install software-properties-common python-software-properties -y\nRUN add-apt-repository -y ppa:ondrej/php\n#    Adding php 7\nRUN apt-get update\nRUN apt-get install php7.1 php7.1-fpm php7.1-cli php7.1-common php7.1-mbstring php7.1-gd php7.1-intl php7.1-xml php7.1-mysql php7.1-mcrypt php7.1-zip -y\nRUN apt-get install libapache2-mod-php7.1 php7.1 php7.1-cli php-xdebug php7.1-mbstring sqlite3 php7.1-mysql php-imagick php-memcached php-pear curl imagemagick php7.1-dev php7.1-phpdbg php7.1-gd npm nodejs-legacy php7.1-json php7.1-curl php7.1-sqlite3 php7.1-intl apache2 vim git-core wget libsasl2-dev libssl-dev -y\nRUN apt-get install libsslcommon2-dev libcurl4-openssl-dev autoconf g++ make openssl libssl-dev libcurl4-openssl-dev pkg-config libsasl2-dev libpcre3-dev -y\nRUN apt-get install imagemagick graphicsmagick -y\nRUN a2enmod headers\nRUN a2enmod rewrite\nENV APACHE_RUN_USER=\"www-data\"\nENV APACHE_RUN_GROUP=\"www-data\"\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\nENV APACHE_PID_FILE=\"/var/run/apache2.pid\"\nENV APACHE_RUN_DIR=\"/var/run/apache2\"\nENV APACHE_LOCK_DIR=\"/var/lock/apache2\"\nRUN ln -sf /dev/stdout /var/log/apache2/access.log \\\n && ln -sf /dev/stderr /var/log/apache2/error.log\nRUN mkdir -p $APACHE_RUN_DIR $APACHE_LOCK_DIR $APACHE_LOG_DIR\n#   Update application repository list and install the Redis server. \n#  RUN apt-get update && apt-get install -y redis-server\n#   Allow Composer to be run as root\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Setup the Composer installer\nRUN curl -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n && curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n && php /tmp/composer-setup.php \\\n && chmod a+x composer.phar \\\n && mv composer.phar /usr/local/bin/composer\n#   Install composer dependencies\nRUN echo pwd: `pwd ` \\\n && echo ls: `ls `\n#   RUN composer install\nEXPOSE 80/tcp\n#   Expose default port\n#  EXPOSE 6379\nVOLUME [ \"/var/www/html\" ,\"/etc/mysql\"]\nWORKDIR /var/www/html\nENTRYPOINT [\"/usr/sbin/apache2\"]\nCMD [\"-D\", \"FOREGROUND\"]\nCOPY . /var/www/html\nCOPY ./deploy/vhost.conf /etc/apache2/sites-available/000-default.conf\nRUN chown -R www-data:www-data /var/www/html \\\n && a2enmod rewrite\nRUN chown -R 777 /var/www/html/\nRUN composer install\n#  RUN php artisan vendor:publish --provider=\"Tymon\\JWTAuth\\Providers\\LaravelServiceProvider\"\n","originalDockerfileUglifiedHash":"9d7a2cb2cc80a7c15d1675f7fa91fd0f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/247934123eeff23901a406f855a0da191d6f7264.dockerfile"}