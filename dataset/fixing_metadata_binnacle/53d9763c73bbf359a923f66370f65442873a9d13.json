{"seed":1628985295,"processedDockerfileHash":"b98b39facc1239a80f18b59eb9c41dd1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.6\nARG BUILD_CORES\nARG NGINX_VER=1.13.6\nARG PHP_VER=7.1.11\nARG LIBICONV_VERSION=1.15\nLABEL description=\"nginx + php image based on Alpine\" \\\n      maintainer=\"Wonderfall <wonderfall@targaryen.house>\" \\\n      php_version=\"PHP v$PHP_VER built from source\" \\\n      nginx_version=\"nginx v$NGINX_VER built from source\"\nARG PHP_MIRROR=http://ch1.php.net\nARG NGINX_CONF=\"  --prefix=/nginx  --sbin-path=/usr/local/sbin/nginx  --http-log-path=/nginx/logs/access.log  --error-log-path=/nginx/logs/error.log  --pid-path=/nginx/run/nginx.pid  --lock-path=/nginx/run/nginx.lock  --with-threads  --with-file-aio  --without-http_geo_module  --without-http_autoindex_module  --without-http_split_clients_module  --without-http_memcached_module  --without-http_empty_gif_module  --without-http_browser_module\"\nARG PHP_CONF=\"  --prefix=/usr  --libdir=/usr/lib/php  --datadir=/usr/share/php  --sysconfdir=/php/etc  --localstatedir=/php/var  --with-pear=/usr/share/php  --with-config-file-scan-dir=/php/conf.d  --with-config-file-path=/php  --with-pic  --disable-short-tags  --without-readline  --enable-bcmath=shared  --enable-fpm  --disable-cgi  --enable-mysqlnd  --enable-mbstring  --with-curl  --with-libedit  --with-openssl  --with-iconv=/usr/local  --with-gd  --with-jpeg-dir  --with-png-dir  --with-webp-dir  --with-xpm-dir=no  --with-freetype-dir  --enable-gd-native-ttf  --disable-gd-jis-conv  --with-zlib\"\nARG PHP_EXT_LIST=\"  mysqli  ctype  dom  json  xml  mbstring  posix  xmlwriter  zip  zlib  sqlite3  pdo_sqlite  pdo_pgsql  pdo_mysql  pcntl  curl  fileinfo  bz2  intl  mcrypt  openssl  ldap  simplexml  pgsql  ftp  exif  gmp  imap\"\nARG CUSTOM_BUILD_PKGS=\"  freetype-dev  openldap-dev  gmp-dev  libmcrypt-dev  icu-dev  postgresql-dev  libpng-dev  libwebp-dev  gd-dev  libjpeg-turbo-dev  libxpm-dev  libedit-dev  libxml2-dev  libressl-dev  libbz2  sqlite-dev  imap-dev\"\nARG CUSTOM_PKGS=\"  freetype  openldap  gmp  libmcrypt  bzip2-dev  icu  libpq  c-client\"\nCOPY rootfs /\nRUN NB_CORES=${BUILD_CORES-$( getconf _NPROCESSORS_CONF ;)} \\\n && BUILD_DEPS=\" linux-headers libtool build-base pcre-dev zlib-dev wget gnupg autoconf gcc g++ libc-dev make pkgconf curl-dev ca-certificates ${CUSTOM_BUILD_PKGS}\" \\\n && apk add s6=2.5.1.0-r0 su-exec=0.2-r0 curl=7.61.1-r2 libedit=20170329.3.1-r2 libxml2=2.9.8-r1 libressl=2.5.5-r2 libwebp=0.6.0-r0 gd=2.2.5-r3 pcre=8.41-r0 zlib=1.2.11-r0 ${BUILD_DEPS} ${CUSTOM_PKGS} -U \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz.asc/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz.asc \\\n && wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz -O /tmp/libiconv-${LIBICONV_VERSION}.tar.gz \\\n && mkdir -p /php/conf.d \\\n && mkdir -p /usr/src \\\n && tar xzf /tmp/nginx-${NGINX_VER}.tar.gz -C /usr/src \\\n && tar xzvf /tmp/php-${PHP_VER}.tar.gz -C /usr/src \\\n && tar xzf /tmp/libiconv-${LIBICONV_VERSION}.tar.gz -C /usr/src \\\n && cd /usr/src/nginx-${NGINX_VER} \\\n && ./configure --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong\" ${NGINX_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /usr/src/libiconv-${LIBICONV_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && libtool --finish /usr/local/lib \\\n && mv /usr/src/php-${PHP_VER} /usr/src/php \\\n && cd /usr/src/php \\\n && ./configure CFLAGS=\"-O3 -fstack-protector-strong\" ${PHP_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && chmod u+x /usr/local/bin/* /etc/s6.d/*/* \\\n && docker-php-ext-install ${PHP_EXT_LIST} \\\n && apk del ${BUILD_DEPS} \\\n && rm -rf /tmp/* /var/cache/apk/* /usr/src/* \\\n && mkdir -p /nginx/logs /nginx/run /php/php-fpm.d /php/logs /php/run /php/session\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.6\nARG BUILD_CORES\nARG NGINX_VER=1.13.6\nARG PHP_VER=7.1.11\nARG LIBICONV_VERSION=1.15\nLABEL description=\"nginx + php image based on Alpine\" \\\n      maintainer=\"Wonderfall <wonderfall@targaryen.house>\" \\\n      php_version=\"PHP v$PHP_VER built from source\" \\\n      nginx_version=\"nginx v$NGINX_VER built from source\"\nARG PHP_MIRROR=http://ch1.php.net\nARG NGINX_CONF=\"  --prefix=/nginx  --sbin-path=/usr/local/sbin/nginx  --http-log-path=/nginx/logs/access.log  --error-log-path=/nginx/logs/error.log  --pid-path=/nginx/run/nginx.pid  --lock-path=/nginx/run/nginx.lock  --with-threads  --with-file-aio  --without-http_geo_module  --without-http_autoindex_module  --without-http_split_clients_module  --without-http_memcached_module  --without-http_empty_gif_module  --without-http_browser_module\"\nARG PHP_CONF=\"  --prefix=/usr  --libdir=/usr/lib/php  --datadir=/usr/share/php  --sysconfdir=/php/etc  --localstatedir=/php/var  --with-pear=/usr/share/php  --with-config-file-scan-dir=/php/conf.d  --with-config-file-path=/php  --with-pic  --disable-short-tags  --without-readline  --enable-bcmath=shared  --enable-fpm  --disable-cgi  --enable-mysqlnd  --enable-mbstring  --with-curl  --with-libedit  --with-openssl  --with-iconv=/usr/local  --with-gd  --with-jpeg-dir  --with-png-dir  --with-webp-dir  --with-xpm-dir=no  --with-freetype-dir  --enable-gd-native-ttf  --disable-gd-jis-conv  --with-zlib\"\nARG PHP_EXT_LIST=\"  mysqli  ctype  dom  json  xml  mbstring  posix  xmlwriter  zip  zlib  sqlite3  pdo_sqlite  pdo_pgsql  pdo_mysql  pcntl  curl  fileinfo  bz2  intl  mcrypt  openssl  ldap  simplexml  pgsql  ftp  exif  gmp  imap\"\nARG CUSTOM_BUILD_PKGS=\"  freetype-dev  openldap-dev  gmp-dev  libmcrypt-dev  icu-dev  postgresql-dev  libpng-dev  libwebp-dev  gd-dev  libjpeg-turbo-dev  libxpm-dev  libedit-dev  libxml2-dev  libressl-dev  libbz2  sqlite-dev  imap-dev\"\nARG CUSTOM_PKGS=\"  freetype  openldap  gmp  libmcrypt  bzip2-dev  icu  libpq  c-client\"\nCOPY rootfs /\nRUN NB_CORES=${BUILD_CORES-$( getconf _NPROCESSORS_CONF ;)} \\\n && BUILD_DEPS=\" linux-headers libtool build-base pcre-dev zlib-dev wget gnupg autoconf gcc g++ libc-dev make pkgconf curl-dev ca-certificates ${CUSTOM_BUILD_PKGS}\" \\\n && apk -U add ${BUILD_DEPS} s6 su-exec curl libedit libxml2 libressl libwebp gd pcre zlib ${CUSTOM_PKGS} \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz.asc/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz.asc \\\n && wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz -O /tmp/libiconv-${LIBICONV_VERSION}.tar.gz \\\n && mkdir -p /php/conf.d \\\n && mkdir -p /usr/src \\\n && tar xzf /tmp/nginx-${NGINX_VER}.tar.gz -C /usr/src \\\n && tar xzvf /tmp/php-${PHP_VER}.tar.gz -C /usr/src \\\n && tar xzf /tmp/libiconv-${LIBICONV_VERSION}.tar.gz -C /usr/src \\\n && cd /usr/src/nginx-${NGINX_VER} \\\n && ./configure --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong\" ${NGINX_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /usr/src/libiconv-${LIBICONV_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && libtool --finish /usr/local/lib \\\n && mv /usr/src/php-${PHP_VER} /usr/src/php \\\n && cd /usr/src/php \\\n && ./configure CFLAGS=\"-O3 -fstack-protector-strong\" ${PHP_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && chmod u+x /usr/local/bin/* /etc/s6.d/*/* \\\n && docker-php-ext-install ${PHP_EXT_LIST} \\\n && apk del ${BUILD_DEPS} \\\n && rm -rf /tmp/* /var/cache/apk/* /usr/src/* \\\n && mkdir -p /nginx/logs /nginx/run /php/php-fpm.d /php/logs /php/run /php/session\n","injectedSmells":[],"originalDockerfileHash":"c6b8f17e76185f9a89a24aaa611857cf","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.6\nARG BUILD_CORES\nARG NGINX_VER=1.13.6\nARG PHP_VER=7.1.11\nARG LIBICONV_VERSION=1.15\nLABEL description=\"nginx + php image based on Alpine\" \\\n      maintainer=\"Wonderfall <wonderfall@targaryen.house>\" \\\n      php_version=\"PHP v$PHP_VER built from source\" \\\n      nginx_version=\"nginx v$NGINX_VER built from source\"\nARG PHP_MIRROR=http://ch1.php.net\nARG NGINX_CONF=\"  --prefix=/nginx  --sbin-path=/usr/local/sbin/nginx  --http-log-path=/nginx/logs/access.log  --error-log-path=/nginx/logs/error.log  --pid-path=/nginx/run/nginx.pid  --lock-path=/nginx/run/nginx.lock  --with-threads  --with-file-aio  --without-http_geo_module  --without-http_autoindex_module  --without-http_split_clients_module  --without-http_memcached_module  --without-http_empty_gif_module  --without-http_browser_module\"\nARG PHP_CONF=\"  --prefix=/usr  --libdir=/usr/lib/php  --datadir=/usr/share/php  --sysconfdir=/php/etc  --localstatedir=/php/var  --with-pear=/usr/share/php  --with-config-file-scan-dir=/php/conf.d  --with-config-file-path=/php  --with-pic  --disable-short-tags  --without-readline  --enable-bcmath=shared  --enable-fpm  --disable-cgi  --enable-mysqlnd  --enable-mbstring  --with-curl  --with-libedit  --with-openssl  --with-iconv=/usr/local  --with-gd  --with-jpeg-dir  --with-png-dir  --with-webp-dir  --with-xpm-dir=no  --with-freetype-dir  --enable-gd-native-ttf  --disable-gd-jis-conv  --with-zlib\"\nARG PHP_EXT_LIST=\"  mysqli  ctype  dom  json  xml  mbstring  posix  xmlwriter  zip  zlib  sqlite3  pdo_sqlite  pdo_pgsql  pdo_mysql  pcntl  curl  fileinfo  bz2  intl  mcrypt  openssl  ldap  simplexml  pgsql  ftp  exif  gmp  imap\"\nARG CUSTOM_BUILD_PKGS=\"  freetype-dev  openldap-dev  gmp-dev  libmcrypt-dev  icu-dev  postgresql-dev  libpng-dev  libwebp-dev  gd-dev  libjpeg-turbo-dev  libxpm-dev  libedit-dev  libxml2-dev  libressl-dev  libbz2  sqlite-dev  imap-dev\"\nARG CUSTOM_PKGS=\"  freetype  openldap  gmp  libmcrypt  bzip2-dev  icu  libpq  c-client\"\nCOPY rootfs /\nRUN NB_CORES=${BUILD_CORES-$( getconf _NPROCESSORS_CONF ;)} \\\n && BUILD_DEPS=\" linux-headers libtool build-base pcre-dev zlib-dev wget gnupg autoconf gcc g++ libc-dev make pkgconf curl-dev ca-certificates ${CUSTOM_BUILD_PKGS}\" \\\n && apk -U add ${BUILD_DEPS} s6 su-exec curl libedit libxml2 libressl libwebp gd pcre zlib ${CUSTOM_PKGS} \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz.asc/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz.asc \\\n && wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz -O /tmp/libiconv-${LIBICONV_VERSION}.tar.gz \\\n && mkdir -p /php/conf.d \\\n && mkdir -p /usr/src \\\n && tar xzf /tmp/nginx-${NGINX_VER}.tar.gz -C /usr/src \\\n && tar xzvf /tmp/php-${PHP_VER}.tar.gz -C /usr/src \\\n && tar xzf /tmp/libiconv-${LIBICONV_VERSION}.tar.gz -C /usr/src \\\n && cd /usr/src/nginx-${NGINX_VER} \\\n && ./configure --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong\" ${NGINX_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /usr/src/libiconv-${LIBICONV_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && libtool --finish /usr/local/lib \\\n && mv /usr/src/php-${PHP_VER} /usr/src/php \\\n && cd /usr/src/php \\\n && ./configure CFLAGS=\"-O3 -fstack-protector-strong\" ${PHP_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && chmod u+x /usr/local/bin/* /etc/s6.d/*/* \\\n && docker-php-ext-install ${PHP_EXT_LIST} \\\n && apk del ${BUILD_DEPS} \\\n && rm -rf /tmp/* /var/cache/apk/* /usr/src/* \\\n && mkdir -p /nginx/logs /nginx/run /php/php-fpm.d /php/logs /php/run /php/session\n","originalDockerfileUglifiedHash":"c6b8f17e76185f9a89a24aaa611857cf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/53d9763c73bbf359a923f66370f65442873a9d13.dockerfile"}