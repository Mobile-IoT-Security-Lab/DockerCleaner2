{"seed":2208937847,"processedDockerfileHash":"4fc1f331612c88732a93a104cec7d69b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#   Build with: docker build -f docker/Dockerfile .\nFROM ubuntu:16.04\nMAINTAINER Julia Kodysh <julia326@gmail.com>\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections \\\n && apt-get clean \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20210119~16.04.1 curl=7.47.0-1ubuntu2.19 gawk=1:4.1.3+dfsg-0.1 git=1:2.7.4-0ubuntu1.10 graphviz=2.38.0-12ubuntu2.1 g++=4:5.3.1-1ubuntu1 libfreetype6-dev=2.6.1-0.1ubuntu2.5 libx11-dev=2:1.6.3-1ubuntu2.2 make=4.1-6 perl=5.22.1-9ubuntu0.9 pkg-config=0.29.1-0ubuntu1 python-tk=2.7.12-1~16.04 python2.7-dev=2.7.12-1ubuntu0~16.04.18 python3.5-dev=3.5.2-2ubuntu0~16.04.13 rsync=3.1.1-3ubuntu1.3 sudo=1.8.16-0ubuntu1.10 tar=1.28-2.1ubuntu0.2 tcsh=6.18.01-5 unzip=6.0-20ubuntu1.1 wget=1.17.1-1ubuntu1.5 xvfb=2:1.18.4-0ubuntu0.12 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 --no-upgrade -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install wkhtmltopdf from source, this version comes with patched QT necessary for PDF gen\nRUN cd /tmp \\\n && wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \\\n && tar xvfJ wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \\\n && cd /tmp/wkhtmltox/bin \\\n && sudo chown root:root wkhtmltopdf \\\n && sudo cp /tmp/wkhtmltox/bin/wkhtmltopdf /usr/local/bin/wkhtmltopdf \\\n && rm -rf /tmp/*\nRUN useradd --create-home --home-dir /home/user --shell /bin/bash -G sudo user \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER user\nENV HOME=\"/home/user\"\nENV SHELL=\"/bin/bash\"\nENV USER=\"user\"\nWORKDIR /home/user\n#   Install the Perl vcftools\nRUN cd /tmp \\\n && wget https://kent.dl.sourceforge.net/project/vcftools/vcftools_0.1.13.tar.gz \\\n && tar xvfz vcftools_0.1.13.tar.gz \\\n && cd vcftools_0.1.13/ \\\n && make \\\n && sudo cp -r /tmp/vcftools_0.1.13/bin/* /usr/local/bin \\\n && sudo cp -r /tmp/vcftools_0.1.13/lib/perl5/site_perl/* /usr/local/lib \\\n && rm -rf /tmp/*\nENV PERL5LIB=\"/usr/local/lib\"\n#   Install Strelka\nRUN mkdir $HOME/strelka \\\n && cd /tmp \\\n && wget ftp://strelka:%27%27@ftp.illumina.com/v1-branch/v1.0.14/strelka_workflow-1.0.14.tar.gz \\\n && tar xvfz strelka_workflow-1.0.14.tar.gz \\\n && cd strelka_workflow-1.0.14 \\\n && ./configure prefix=$HOME/strelka \\\n && make \\\n && chmod -R a+rx ./* \\\n && make install \\\n && rm -rf /tmp/*\nENV STRELKA_BIN=\"$HOME/strelka/bin\"\n#   Install Miniconda\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh \\\n && bash miniconda.sh -b -p $HOME/miniconda\nENV PATH=\"$HOME/miniconda/bin:$PATH\"\nENV PGV_BIN=\"/home/user/miniconda/envs/pgv/bin\"\nENV JAVA7_BIN=\"/home/user/miniconda/envs/java7/bin\"\n#   install a bunch of bfx tools; gatk needs to be this version, latest doesn't work\n#   graphviz needed for DAG visualization\n#   ucsc-liftover for converting coverage bed files between various alignments\n#   java version specific to MuTect\nRUN conda config --add channels r \\\n && conda config --add channels defaults \\\n && conda config --add channels conda-forge \\\n && conda config --add channels bioconda \\\n && conda create -n pgv bedtools bwa==0.7.17 cython fastqc gatk==3.7 java-jdk==8.0.92 picard==2.18.5 pip sambamba==0.6.6 samtools==1.8 snakemake star==2.6.0c vcftools==0.1.15 \\\n && conda clean --all -y\n#   most of the tools we're using are in the pgv environment; adding to PATH for convenience\nENV PATH=\"$PGV_BIN:$PATH\"\n#   MuTect needs Java 1.7, while GATK and other things need Java 1.8.\n#   Dealing with this by setting up a separate Conda environment, specifically for Java 7\nRUN conda create -n java7 java-jdk==7.0.91 \\\n && conda clean --all -y\n#   Set up MuTect 1.1.7\nRUN wget --content-disposition https://software.broadinstitute.org/gatk/download/auth?package=M1 \\\n && unzip mutect-1.1.7.jar.zip \\\n && rm mutect-1.1.7.jar.zip\nENV MUTECT=\"$HOME/mutect-1.1.7.jar\"\n#   Set up GATK 3.7; need to link with gatk-register\nRUN wget --content-disposition \"https://software.broadinstitute.org/gatk/download/auth?package=GATK-archive&version=3.7-0-gcfedb67\" \\\n && tar -xvjf GenomeAnalysisTK-3.7-0-gcfedb67.tar.bz2 \\\n && rm -rf resources/ GenomeAnalysisTK-3.7-0-gcfedb67.tar.bz2\nRUN $PGV_BIN/gatk-register $HOME/GenomeAnalysisTK.jar\n#   Copy and install Vaxrank and other python dependencies; they won't change very often,\n#   so we want to do this before any further COPY commands in this Dockerfile.\n#   See https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy\nCOPY requirements.txt $HOME\nRUN pip install --ignore-installed -r $HOME/requirements.txt\n#   Vaxrank-required env variables and setup\nENV KERAS_BACKEND=\"tensorflow\"\nENV PYENSEMBL_CACHE_DIR=\"/reference-genome/pyensembl-cache\"\nENV VAXRANK_REF_PEPTIDES_DIR=\"/reference-genome/reference-peptides\"\n#   this is needed for Vaxrank reports to be reasonably formatted, otherwise kerning is off\nRUN curl https://pastebin.com/raw/AmfYN3er > $HOME/.fonts.conf\n#   Copy the current directory contents into the container\nCOPY . $HOME\n#   Strelka setup\nENV STRELKA_CONFIG=\"$HOME/pipeline/strelka_config.txt\"\n#   Python scripts setup, for things that are too small/simple to be their own modules\nENV SCRIPTS=\"$HOME/pipeline/scripts\"\n#   snakemake logs get written here (hidden dir)\nRUN mkdir -p $HOME/.snakemake \\\n && sudo chown -R $USER $HOME/.snakemake\nENTRYPOINT [\"python\", \"run_snakemake.py\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Build with: docker build -f docker/Dockerfile .\nFROM ubuntu:16.04\nMAINTAINER Julia Kodysh <julia326@gmail.com>\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections \\\n && apt-get clean \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl gawk git graphviz g++ libfreetype6-dev libx11-dev make perl pkg-config python-tk python2.7-dev python3.5-dev rsync sudo tar tcsh unzip wget xvfb zlib1g-dev --no-upgrade -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\n#  install wkhtmltopdf from source, this version comes with patched QT necessary for PDF gen\nRUN cd /tmp \\\n && wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \\\n && tar xvfJ wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \\\n && cd /tmp/wkhtmltox/bin \\\n && sudo chown root:root wkhtmltopdf \\\n && sudo cp /tmp/wkhtmltox/bin/wkhtmltopdf /usr/local/bin/wkhtmltopdf \\\n && rm -rf /tmp/*\nRUN useradd --create-home --home-dir /home/user --shell /bin/bash -G sudo user \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER user\nENV HOME=\"/home/user\"\nENV SHELL=\"/bin/bash\"\nENV USER=\"user\"\nWORKDIR /home/user\n#  Install the Perl vcftools\nRUN cd /tmp \\\n && wget https://kent.dl.sourceforge.net/project/vcftools/vcftools_0.1.13.tar.gz \\\n && tar xvfz vcftools_0.1.13.tar.gz \\\n && cd vcftools_0.1.13/ \\\n && make \\\n && sudo cp -r /tmp/vcftools_0.1.13/bin/* /usr/local/bin \\\n && sudo cp -r /tmp/vcftools_0.1.13/lib/perl5/site_perl/* /usr/local/lib \\\n && rm -rf /tmp/*\nENV PERL5LIB=\"/usr/local/lib\"\n#  Install Strelka\nRUN mkdir $HOME/strelka \\\n && cd /tmp \\\n && wget ftp://strelka:%27%27@ftp.illumina.com/v1-branch/v1.0.14/strelka_workflow-1.0.14.tar.gz \\\n && tar xvfz strelka_workflow-1.0.14.tar.gz \\\n && cd strelka_workflow-1.0.14 \\\n && ./configure prefix=$HOME/strelka \\\n && make \\\n && chmod -R a+rx ./* \\\n && make install \\\n && rm -rf /tmp/*\nENV STRELKA_BIN=\"$HOME/strelka/bin\"\n#  Install Miniconda\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh \\\n && bash miniconda.sh -b -p $HOME/miniconda\nENV PATH=\"$HOME/miniconda/bin:$PATH\"\nENV PGV_BIN=\"/home/user/miniconda/envs/pgv/bin\"\nENV JAVA7_BIN=\"/home/user/miniconda/envs/java7/bin\"\n#  install a bunch of bfx tools; gatk needs to be this version, latest doesn't work\n#  graphviz needed for DAG visualization\n#  ucsc-liftover for converting coverage bed files between various alignments\n#  java version specific to MuTect\nRUN conda config --add channels r \\\n && conda config --add channels defaults \\\n && conda config --add channels conda-forge \\\n && conda config --add channels bioconda \\\n && conda create -n pgv bedtools bwa==0.7.17 cython fastqc gatk==3.7 java-jdk==8.0.92 picard==2.18.5 pip sambamba==0.6.6 samtools==1.8 snakemake star==2.6.0c vcftools==0.1.15 \\\n && conda clean --all -y\n#  most of the tools we're using are in the pgv environment; adding to PATH for convenience\nENV PATH=\"$PGV_BIN:$PATH\"\n#  MuTect needs Java 1.7, while GATK and other things need Java 1.8.\n#  Dealing with this by setting up a separate Conda environment, specifically for Java 7\nRUN conda create -n java7 java-jdk==7.0.91 \\\n && conda clean --all -y\n#  Set up MuTect 1.1.7\nRUN wget --content-disposition https://software.broadinstitute.org/gatk/download/auth?package=M1 \\\n && unzip mutect-1.1.7.jar.zip \\\n && rm mutect-1.1.7.jar.zip\nENV MUTECT=\"$HOME/mutect-1.1.7.jar\"\n#  Set up GATK 3.7; need to link with gatk-register\nRUN wget --content-disposition \"https://software.broadinstitute.org/gatk/download/auth?package=GATK-archive&version=3.7-0-gcfedb67\" \\\n && tar -xvjf GenomeAnalysisTK-3.7-0-gcfedb67.tar.bz2 \\\n && rm -rf resources/ GenomeAnalysisTK-3.7-0-gcfedb67.tar.bz2\nRUN $PGV_BIN/gatk-register $HOME/GenomeAnalysisTK.jar\n#  Copy and install Vaxrank and other python dependencies; they won't change very often,\n#  so we want to do this before any further COPY commands in this Dockerfile.\n#  See https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy\nCOPY requirements.txt $HOME\nRUN pip install --ignore-installed -r $HOME/requirements.txt\n#  Vaxrank-required env variables and setup\nENV KERAS_BACKEND=\"tensorflow\"\nENV PYENSEMBL_CACHE_DIR=\"/reference-genome/pyensembl-cache\"\nENV VAXRANK_REF_PEPTIDES_DIR=\"/reference-genome/reference-peptides\"\n#  this is needed for Vaxrank reports to be reasonably formatted, otherwise kerning is off\nRUN curl https://pastebin.com/raw/AmfYN3er > $HOME/.fonts.conf\n#  Copy the current directory contents into the container\nCOPY . $HOME\n#  Strelka setup\nENV STRELKA_CONFIG=\"$HOME/pipeline/strelka_config.txt\"\n#  Python scripts setup, for things that are too small/simple to be their own modules\nENV SCRIPTS=\"$HOME/pipeline/scripts\"\n#  snakemake logs get written here (hidden dir)\nRUN mkdir -p $HOME/.snakemake \\\n && sudo chown -R $USER $HOME/.snakemake\nENTRYPOINT [\"python\", \"run_snakemake.py\"]\n","injectedSmells":[],"originalDockerfileHash":"29c46c5b293d1f01b880859e83a9b777","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build with: docker build -f docker/Dockerfile .\nFROM ubuntu:16.04\nMAINTAINER Julia Kodysh <julia326@gmail.com>\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections \\\n && apt-get clean \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl gawk git graphviz g++ libfreetype6-dev libx11-dev make perl pkg-config python-tk python2.7-dev python3.5-dev rsync sudo tar tcsh unzip wget xvfb zlib1g-dev --no-upgrade -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install wkhtmltopdf from source, this version comes with patched QT necessary for PDF gen\nRUN cd /tmp \\\n && wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \\\n && tar xvfJ wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \\\n && cd /tmp/wkhtmltox/bin \\\n && sudo chown root:root wkhtmltopdf \\\n && sudo cp /tmp/wkhtmltox/bin/wkhtmltopdf /usr/local/bin/wkhtmltopdf \\\n && rm -rf /tmp/*\nRUN useradd --create-home --home-dir /home/user --shell /bin/bash -G sudo user \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER user\nENV HOME=\"/home/user\"\nENV SHELL=\"/bin/bash\"\nENV USER=\"user\"\nWORKDIR /home/user\n#   Install the Perl vcftools\nRUN cd /tmp \\\n && wget https://kent.dl.sourceforge.net/project/vcftools/vcftools_0.1.13.tar.gz \\\n && tar xvfz vcftools_0.1.13.tar.gz \\\n && cd vcftools_0.1.13/ \\\n && make \\\n && sudo cp -r /tmp/vcftools_0.1.13/bin/* /usr/local/bin \\\n && sudo cp -r /tmp/vcftools_0.1.13/lib/perl5/site_perl/* /usr/local/lib \\\n && rm -rf /tmp/*\nENV PERL5LIB=\"/usr/local/lib\"\n#   Install Strelka\nRUN mkdir $HOME/strelka \\\n && cd /tmp \\\n && wget ftp://strelka:%27%27@ftp.illumina.com/v1-branch/v1.0.14/strelka_workflow-1.0.14.tar.gz \\\n && tar xvfz strelka_workflow-1.0.14.tar.gz \\\n && cd strelka_workflow-1.0.14 \\\n && ./configure prefix=$HOME/strelka \\\n && make \\\n && chmod -R a+rx ./* \\\n && make install \\\n && rm -rf /tmp/*\nENV STRELKA_BIN=\"$HOME/strelka/bin\"\n#   Install Miniconda\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh \\\n && bash miniconda.sh -b -p $HOME/miniconda\nENV PATH=\"$HOME/miniconda/bin:$PATH\"\nENV PGV_BIN=\"/home/user/miniconda/envs/pgv/bin\"\nENV JAVA7_BIN=\"/home/user/miniconda/envs/java7/bin\"\n#   install a bunch of bfx tools; gatk needs to be this version, latest doesn't work\n#   graphviz needed for DAG visualization\n#   ucsc-liftover for converting coverage bed files between various alignments\n#   java version specific to MuTect\nRUN conda config --add channels r \\\n && conda config --add channels defaults \\\n && conda config --add channels conda-forge \\\n && conda config --add channels bioconda \\\n && conda create -n pgv bedtools bwa==0.7.17 cython fastqc gatk==3.7 java-jdk==8.0.92 picard==2.18.5 pip sambamba==0.6.6 samtools==1.8 snakemake star==2.6.0c vcftools==0.1.15 \\\n && conda clean --all -y\n#   most of the tools we're using are in the pgv environment; adding to PATH for convenience\nENV PATH=\"$PGV_BIN:$PATH\"\n#   MuTect needs Java 1.7, while GATK and other things need Java 1.8.\n#   Dealing with this by setting up a separate Conda environment, specifically for Java 7\nRUN conda create -n java7 java-jdk==7.0.91 \\\n && conda clean --all -y\n#   Set up MuTect 1.1.7\nRUN wget --content-disposition https://software.broadinstitute.org/gatk/download/auth?package=M1 \\\n && unzip mutect-1.1.7.jar.zip \\\n && rm mutect-1.1.7.jar.zip\nENV MUTECT=\"$HOME/mutect-1.1.7.jar\"\n#   Set up GATK 3.7; need to link with gatk-register\nRUN wget --content-disposition \"https://software.broadinstitute.org/gatk/download/auth?package=GATK-archive&version=3.7-0-gcfedb67\" \\\n && tar -xvjf GenomeAnalysisTK-3.7-0-gcfedb67.tar.bz2 \\\n && rm -rf resources/ GenomeAnalysisTK-3.7-0-gcfedb67.tar.bz2\nRUN $PGV_BIN/gatk-register $HOME/GenomeAnalysisTK.jar\n#   Copy and install Vaxrank and other python dependencies; they won't change very often,\n#   so we want to do this before any further COPY commands in this Dockerfile.\n#   See https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy\nCOPY requirements.txt $HOME\nRUN pip install --ignore-installed -r $HOME/requirements.txt\n#   Vaxrank-required env variables and setup\nENV KERAS_BACKEND=\"tensorflow\"\nENV PYENSEMBL_CACHE_DIR=\"/reference-genome/pyensembl-cache\"\nENV VAXRANK_REF_PEPTIDES_DIR=\"/reference-genome/reference-peptides\"\n#   this is needed for Vaxrank reports to be reasonably formatted, otherwise kerning is off\nRUN curl https://pastebin.com/raw/AmfYN3er > $HOME/.fonts.conf\n#   Copy the current directory contents into the container\nCOPY . $HOME\n#   Strelka setup\nENV STRELKA_CONFIG=\"$HOME/pipeline/strelka_config.txt\"\n#   Python scripts setup, for things that are too small/simple to be their own modules\nENV SCRIPTS=\"$HOME/pipeline/scripts\"\n#   snakemake logs get written here (hidden dir)\nRUN mkdir -p $HOME/.snakemake \\\n && sudo chown -R $USER $HOME/.snakemake\nENTRYPOINT [\"python\", \"run_snakemake.py\"]\n","originalDockerfileUglifiedHash":"7e67afd5e05c5be44c7e39880f3f2580","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dbb855c0b97112650044813519ca58306d868709.dockerfile"}