{"seed":2228038870,"processedDockerfileHash":"eb24017ac1aeb8e9d2f0873692f390d3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM python:3.6-slim-stretch\nENV PYTHONDONTWRITEBYTECODE=\"1\"\n#   Allow scripts to detect we're running in our own container\nRUN touch /addons-server-docker-container\n#   Add nodesource repository and requirements\nCOPY docker/nodesource.gpg.key /etc/pki/gpg/GPG-KEY-nodesource\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-transport-https gnupg2 -y ) \\\n && rm -rf /var/lib/apt/lists/*\nRUN cat /etc/pki/gpg/GPG-KEY-nodesource | apt-key add -\nCOPY docker/debian-stretch-nodesource-repo /etc/apt/sources.list.d/nodesource.list\nCOPY docker/debian-buster-testing-repo /etc/apt/sources.list.d/testing.list\nRUN : \\\n && apt-get -t stretch install -y bash-completion build-essential curl libjpeg-dev libsasl2-dev libxml2-dev libxslt-dev locales zlib1g-dev libffi-dev libssl-dev libmagic-dev nodejs git mysql-client default-libmysqlclient-dev swig gettext librsvg2-bin pngcrush uuid libmaxminddb0 libmaxminddb-dev \\\n && rm -rf /var/lib/apt/lists/*\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /tmp http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz\nRUN mkdir -p /usr/local/share/GeoIP \\\n && gunzip -c /tmp/GeoLite2-Country.mmdb.gz > /usr/local/share/GeoIP/GeoLite2-Country.mmdb \\\n && rm -f /tmp/GeoLite2-Country.mmdb.gz\nRUN : \\\n && apt-get -t buster install -y file libmagic-dev \\\n && rm -rf /var/lib/apt/lists/*\n#   Compile required locale\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n#   Set the locale. This is mainly so that tests can write non-ascii files to\n#   disk.\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nCOPY . /code\nWORKDIR /code\nENV PIP_BUILD=\"/deps/build/\"\nENV PIP_CACHE_DIR=\"/deps/cache/\"\nENV PIP_SRC=\"/deps/src/\"\nENV NPM_CONFIG_PREFIX=\"/deps/\"\nENV SWIG_FEATURES=\"-D__x86_64__\"\n#   Install all python requires\nRUN mkdir -p /deps/{build,cache,src}/ \\\n && ln -s /code/package.json /deps/package.json \\\n && make update_deps \\\n && rm -rf /deps/build/ /deps/cache/\n#   Preserve bash history across image updates.\n#   This works best when you link your local source code\n#   as a volume.\nENV HISTFILE=\"/code/docker/artifacts/bash_history\"\n#   Configure bash history.\nENV HISTSIZE=\"50000\"\nENV HISTIGNORE=\"ls:exit:\\\"cd ..\\\"\"\n#   This prevents dupes but only in memory for the current session.\nENV HISTCONTROL=\"erasedups\"\nENV CLEANCSS_BIN=\"/deps/node_modules/.bin/cleancss\"\nENV LESS_BIN=\"/deps/node_modules/.bin/lessc\"\nENV UGLIFY_BIN=\"/deps/node_modules/.bin/uglifyjs\"\nENV ADDONS_LINTER_BIN=\"/deps/node_modules/.bin/addons-linter\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM python:3.6-slim-stretch\nENV PYTHONDONTWRITEBYTECODE=\"1\"\n#  Allow scripts to detect we're running in our own container\nRUN touch /addons-server-docker-container\n#  Add nodesource repository and requirements\nADD docker/nodesource.gpg.key /etc/pki/gpg/GPG-KEY-nodesource\nRUN apt-get update \\\n && apt-get install apt-transport-https gnupg2 -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN cat /etc/pki/gpg/GPG-KEY-nodesource | apt-key add -\nADD docker/debian-stretch-nodesource-repo /etc/apt/sources.list.d/nodesource.list\nADD docker/debian-buster-testing-repo /etc/apt/sources.list.d/testing.list\nRUN apt-get update \\\n && apt-get -t stretch install -y bash-completion build-essential curl libjpeg-dev libsasl2-dev libxml2-dev libxslt-dev locales zlib1g-dev libffi-dev libssl-dev libmagic-dev nodejs git mysql-client default-libmysqlclient-dev swig gettext librsvg2-bin pngcrush uuid libmaxminddb0 libmaxminddb-dev \\\n && rm -rf /var/lib/apt/lists/*\nADD http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz /tmp\nRUN mkdir -p /usr/local/share/GeoIP \\\n && gunzip -c /tmp/GeoLite2-Country.mmdb.gz > /usr/local/share/GeoIP/GeoLite2-Country.mmdb \\\n && rm -f /tmp/GeoLite2-Country.mmdb.gz\nRUN apt-get update \\\n && apt-get -t buster install -y file libmagic-dev \\\n && rm -rf /var/lib/apt/lists/*\n#  Compile required locale\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n#  Set the locale. This is mainly so that tests can write non-ascii files to\n#  disk.\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nCOPY . /code\nWORKDIR /code\nENV PIP_BUILD=\"/deps/build/\"\nENV PIP_CACHE_DIR=\"/deps/cache/\"\nENV PIP_SRC=\"/deps/src/\"\nENV NPM_CONFIG_PREFIX=\"/deps/\"\nENV SWIG_FEATURES=\"-D__x86_64__\"\n#  Install all python requires\nRUN mkdir -p /deps/{build,cache,src}/ \\\n && ln -s /code/package.json /deps/package.json \\\n && make update_deps \\\n && rm -rf /deps/build/ /deps/cache/\n#  Preserve bash history across image updates.\n#  This works best when you link your local source code\n#  as a volume.\nENV HISTFILE=\"/code/docker/artifacts/bash_history\"\n#  Configure bash history.\nENV HISTSIZE=\"50000\"\nENV HISTIGNORE=\"ls:exit:\\\"cd ..\\\"\"\n#  This prevents dupes but only in memory for the current session.\nENV HISTCONTROL=\"erasedups\"\nENV CLEANCSS_BIN=\"/deps/node_modules/.bin/cleancss\"\nENV LESS_BIN=\"/deps/node_modules/.bin/lessc\"\nENV UGLIFY_BIN=\"/deps/node_modules/.bin/uglifyjs\"\nENV ADDONS_LINTER_BIN=\"/deps/node_modules/.bin/addons-linter\"\n","injectedSmells":[],"originalDockerfileHash":"05361cf67caf185c8f4b101584cd2cd6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM python:3.6-slim-stretch\nENV PYTHONDONTWRITEBYTECODE=\"1\"\n#   Allow scripts to detect we're running in our own container\nRUN touch /addons-server-docker-container\n#   Add nodesource repository and requirements\nADD docker/nodesource.gpg.key /etc/pki/gpg/GPG-KEY-nodesource\nRUN apt-get update \\\n && apt-get install apt-transport-https gnupg2 -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN cat /etc/pki/gpg/GPG-KEY-nodesource | apt-key add -\nADD docker/debian-stretch-nodesource-repo /etc/apt/sources.list.d/nodesource.list\nADD docker/debian-buster-testing-repo /etc/apt/sources.list.d/testing.list\nRUN apt-get update \\\n && apt-get -t stretch install -y bash-completion build-essential curl libjpeg-dev libsasl2-dev libxml2-dev libxslt-dev locales zlib1g-dev libffi-dev libssl-dev libmagic-dev nodejs git mysql-client default-libmysqlclient-dev swig gettext librsvg2-bin pngcrush uuid libmaxminddb0 libmaxminddb-dev \\\n && rm -rf /var/lib/apt/lists/*\nADD http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz /tmp\nRUN mkdir -p /usr/local/share/GeoIP \\\n && gunzip -c /tmp/GeoLite2-Country.mmdb.gz > /usr/local/share/GeoIP/GeoLite2-Country.mmdb \\\n && rm -f /tmp/GeoLite2-Country.mmdb.gz\nRUN apt-get update \\\n && apt-get -t buster install -y file libmagic-dev \\\n && rm -rf /var/lib/apt/lists/*\n#   Compile required locale\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n#   Set the locale. This is mainly so that tests can write non-ascii files to\n#   disk.\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nCOPY . /code\nWORKDIR /code\nENV PIP_BUILD=\"/deps/build/\"\nENV PIP_CACHE_DIR=\"/deps/cache/\"\nENV PIP_SRC=\"/deps/src/\"\nENV NPM_CONFIG_PREFIX=\"/deps/\"\nENV SWIG_FEATURES=\"-D__x86_64__\"\n#   Install all python requires\nRUN mkdir -p /deps/{build,cache,src}/ \\\n && ln -s /code/package.json /deps/package.json \\\n && make update_deps \\\n && rm -rf /deps/build/ /deps/cache/\n#   Preserve bash history across image updates.\n#   This works best when you link your local source code\n#   as a volume.\nENV HISTFILE=\"/code/docker/artifacts/bash_history\"\n#   Configure bash history.\nENV HISTSIZE=\"50000\"\nENV HISTIGNORE=\"ls:exit:\\\"cd ..\\\"\"\n#   This prevents dupes but only in memory for the current session.\nENV HISTCONTROL=\"erasedups\"\nENV CLEANCSS_BIN=\"/deps/node_modules/.bin/cleancss\"\nENV LESS_BIN=\"/deps/node_modules/.bin/lessc\"\nENV UGLIFY_BIN=\"/deps/node_modules/.bin/uglifyjs\"\nENV ADDONS_LINTER_BIN=\"/deps/node_modules/.bin/addons-linter\"\n","originalDockerfileUglifiedHash":"d1be827d57f773d068409dd652102539","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c2af32972b85dad24ecf9a613d2486c6a4a78598.dockerfile"}