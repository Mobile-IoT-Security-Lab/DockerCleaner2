{"seed":2517892166,"processedDockerfileHash":"cb4da1fe12e037cfe3fcb3ad920e867a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"FROM $REPLACE_FROM\nLABEL maintainer=\"Martijn Koster \\\"mak-docker@greenhills.co.uk\\\"\"\nLABEL repository=\"https://github.com/docker-solr/docker-solr\"\n#   Override the solr download location with e.g.:\n#     docker build -t mine --build-arg SOLR_DOWNLOAD_SERVER=http://www-eu.apache.org/dist/lucene/solr .\nARG SOLR_DOWNLOAD_SERVER\nRUN apk add acl=2.3.1-r1 bash=5.2.15-r0 gnupg=2.2.40-r0 lsof=4.96.4-r0 procps=3.3.17-r2 tar=1.34-r2 --no-cache\nRUN apk add ca-certificates=20220614-r4 wget=1.21.3-r2 --no-cache \\\n && update-ca-certificates\nENV SOLR_USER=\"solr\" \\\n    SOLR_UID=\"8983\" \\\n    SOLR_GROUP=\"solr\" \\\n    SOLR_GID=\"8983\" \\\n    SOLR_VERSION=\"$REPLACE_SOLR_VERSION\" \\\n    SOLR_URL=\"${SOLR_DOWNLOAD_SERVER:-https://archive.apache.org/dist/lucene/solr}/$REPLACE_SOLR_VERSION/solr-$REPLACE_SOLR_VERSION.tgz\" \\\n    SOLR_SHA256=\"$REPLACE_SOLR_SHA256\" \\\n    SOLR_KEYS=\"$REPLACE_SOLR_KEYS\" \\\n    PATH=\"/opt/solr/bin:/opt/docker-solr/scripts:$PATH\" \\\n    SOLR_INCLUDE=\"/etc/default/solr.in.sh\" \\\n    SOLR_HOME=\"/var/solr/data\" \\\n    SOLR_PID_DIR=\"/var/solr\" \\\n    SOLR_LOGS_DIR=\"/var/solr/logs\" \\\n    LOG4J_PROPS=\"/var/solr/log4j2.xml\"\nENV GOSU_VERSION=\"1.11\"\nENV GOSU_KEY=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN addgroup -S -g \"$SOLR_GID\" \"$SOLR_GROUP\" \\\n && adduser -S -u \"$SOLR_UID\" -G \"$SOLR_GROUP\" \"$SOLR_USER\"\nRUN set -e ; export GNUPGHOME=\"/tmp/gnupg_home\" \\\n && mkdir -p \"$GNUPGHOME\" \\\n && chmod 700 \"$GNUPGHOME\" \\\n && echo \"disable-ipv6\" >> \"$GNUPGHOME/dirmngr.conf\" \\\n && for key in $SOLR_KEYS $GOSU_KEY; do found='' ;for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \" trying $server for $key\" ;gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" \\\n && found=yes \\\n && break ;gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" \\\n && found=yes \\\n && break ; done ;test -z \"$found\" \\\n && echo \"error: failed to fetch $key from several disparate servers -- network issues?\" >&2 \\\n && exit 1 ; done ; exit 0\nRUN set -e ; export GNUPGHOME=\"/tmp/gnupg_home\" \\\n && pkgArch=\"$( apk --print-arch | sed 's/x86_64/amd64/' | sed 's/aarch64/arm64/' ;)\" \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$pkgArch\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$pkgArch.asc\" \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && echo \"downloading $SOLR_URL\" \\\n && wget -q \"$SOLR_URL\" -O \"/opt/solr-$SOLR_VERSION.tgz\" \\\n && echo \"downloading $SOLR_URL.asc\" \\\n && wget -q \"$SOLR_URL.asc\" -O \"/opt/solr-$SOLR_VERSION.tgz.asc\" \\\n && echo \"$SOLR_SHA256 */opt/solr-$SOLR_VERSION.tgz\" | sha256sum -c - \\\n && (ls -l \"/opt/solr-$SOLR_VERSION.tgz\" \"/opt/solr-$SOLR_VERSION.tgz.asc\" >&2) \\\n && gpg --batch --verify \"/opt/solr-$SOLR_VERSION.tgz.asc\" \"/opt/solr-$SOLR_VERSION.tgz\" \\\n && tar -C /opt --extract --file \"/opt/solr-$SOLR_VERSION.tgz\" \\\n && (cd /opt \\\n && ln -s \"solr-$SOLR_VERSION\" solr ) \\\n && rm \"/opt/solr-$SOLR_VERSION.tgz\"* \\\n && rm -Rf /opt/solr/docs/ \\\n && mkdir -p /opt/solr/server/solr/lib /docker-entrypoint-initdb.d /opt/docker-solr \\\n && chown -R 0:0 \"/opt/solr-$SOLR_VERSION\" \\\n && find \"/opt/solr-$SOLR_VERSION\" -type d -print0 | xargs -0 chmod 0755 \\\n && find \"/opt/solr-$SOLR_VERSION\" -type f -print0 | xargs -0 chmod 0644 \\\n && chmod -R 0755 \"/opt/solr-$SOLR_VERSION/bin\" \\\n && mkdir /etc/default \\\n && chown root: /etc/default \\\n && chmod 0755 /etc/default \\\n && cp /opt/solr/bin/solr.in.sh /etc/default/solr.in.sh \\\n && mv /opt/solr/bin/solr.in.sh /opt/solr/bin/solr.in.sh.orig \\\n && mv /opt/solr/bin/solr.in.cmd /opt/solr/bin/solr.in.cmd.orig \\\n && chown solr:0 /etc/default/solr.in.sh \\\n && chmod 0664 /etc/default/solr.in.sh \\\n && mkdir -p /var/solr/data /var/solr/logs \\\n && (cd /opt/solr/server/solr \\\n && cp solr.xml zoo.cfg /var/solr/data/ ) \\\n && cp /opt/solr/server/resources/log4j2.xml /var/solr/log4j2.xml \\\n && find /var/solr -type d -print0 | xargs -0 chmod 0770 \\\n && find /var/solr -type f -print0 | xargs -0 chmod 0660 \\\n && sed -i -e \"s/\\\"$( whoami ;)\\\" == \\\"root\\\"/$( id -u ;) == 0/\" /opt/solr/bin/solr \\\n && sed -i -e 's/lsof -PniTCP:/lsof -t -PniTCP:/' /opt/solr/bin/solr \\\n && chown -R \"0:0\" /opt/solr-$SOLR_VERSION /docker-entrypoint-initdb.d /opt/docker-solr \\\n && chown -R \"$SOLR_USER:0\" /var/solr\nCOPY --chown=0:0 scripts /opt/docker-solr/scripts\nVOLUME /var/solr\nEXPOSE 8983/tcp\nWORKDIR /opt/solr\nUSER $SOLR_USER\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"solr-foreground\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM $REPLACE_FROM\nLABEL maintainer=\"Martijn Koster \\\"mak-docker@greenhills.co.uk\\\"\"\nLABEL repository=\"https://github.com/docker-solr/docker-solr\"\n#  Override the solr download location with e.g.:\n#    docker build -t mine --build-arg SOLR_DOWNLOAD_SERVER=http://www-eu.apache.org/dist/lucene/solr .\nARG SOLR_DOWNLOAD_SERVER\nRUN apk add --no-cache acl bash gnupg lsof procps tar\nRUN apk add --no-cache ca-certificates wget \\\n && update-ca-certificates\nENV SOLR_USER=\"solr\" \\\n    SOLR_UID=\"8983\" \\\n    SOLR_GROUP=\"solr\" \\\n    SOLR_GID=\"8983\" \\\n    SOLR_VERSION=\"$REPLACE_SOLR_VERSION\" \\\n    SOLR_URL=\"${SOLR_DOWNLOAD_SERVER:-https://archive.apache.org/dist/lucene/solr}/$REPLACE_SOLR_VERSION/solr-$REPLACE_SOLR_VERSION.tgz\" \\\n    SOLR_SHA256=\"$REPLACE_SOLR_SHA256\" \\\n    SOLR_KEYS=\"$REPLACE_SOLR_KEYS\" \\\n    PATH=\"/opt/solr/bin:/opt/docker-solr/scripts:$PATH\" \\\n    SOLR_INCLUDE=\"/etc/default/solr.in.sh\" \\\n    SOLR_HOME=\"/var/solr/data\" \\\n    SOLR_PID_DIR=\"/var/solr\" \\\n    SOLR_LOGS_DIR=\"/var/solr/logs\" \\\n    LOG4J_PROPS=\"/var/solr/log4j2.xml\"\nENV GOSU_VERSION=\"1.11\"\nENV GOSU_KEY=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN addgroup -S -g \"$SOLR_GID\" \"$SOLR_GROUP\" \\\n && adduser -S -u \"$SOLR_UID\" -G \"$SOLR_GROUP\" \"$SOLR_USER\"\nRUN set -e ; export GNUPGHOME=\"/tmp/gnupg_home\" \\\n && mkdir -p \"$GNUPGHOME\" \\\n && chmod 700 \"$GNUPGHOME\" \\\n && echo \"disable-ipv6\" >> \"$GNUPGHOME/dirmngr.conf\" \\\n && for key in $SOLR_KEYS $GOSU_KEY; do found='' ;for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \" trying $server for $key\" ;gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" \\\n && found=yes \\\n && break ;gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" \\\n && found=yes \\\n && break ; done ;test -z \"$found\" \\\n && echo \"error: failed to fetch $key from several disparate servers -- network issues?\" >&2 \\\n && exit 1 ; done ; exit 0\nRUN set -e ; export GNUPGHOME=\"/tmp/gnupg_home\" \\\n && pkgArch=\"$( apk --print-arch | sed 's/x86_64/amd64/' | sed 's/aarch64/arm64/' ;)\" \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$pkgArch\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$pkgArch.asc\" \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && echo \"downloading $SOLR_URL\" \\\n && wget -q \"$SOLR_URL\" -O \"/opt/solr-$SOLR_VERSION.tgz\" \\\n && echo \"downloading $SOLR_URL.asc\" \\\n && wget -q \"$SOLR_URL.asc\" -O \"/opt/solr-$SOLR_VERSION.tgz.asc\" \\\n && echo \"$SOLR_SHA256 */opt/solr-$SOLR_VERSION.tgz\" | sha256sum -c - \\\n && (ls -l \"/opt/solr-$SOLR_VERSION.tgz\" \"/opt/solr-$SOLR_VERSION.tgz.asc\" >&2) \\\n && gpg --batch --verify \"/opt/solr-$SOLR_VERSION.tgz.asc\" \"/opt/solr-$SOLR_VERSION.tgz\" \\\n && tar -C /opt --extract --file \"/opt/solr-$SOLR_VERSION.tgz\" \\\n && (cd /opt \\\n && ln -s \"solr-$SOLR_VERSION\" solr ) \\\n && rm \"/opt/solr-$SOLR_VERSION.tgz\"* \\\n && rm -Rf /opt/solr/docs/ \\\n && mkdir -p /opt/solr/server/solr/lib /docker-entrypoint-initdb.d /opt/docker-solr \\\n && chown -R 0:0 \"/opt/solr-$SOLR_VERSION\" \\\n && find \"/opt/solr-$SOLR_VERSION\" -type d -print0 | xargs -0 chmod 0755 \\\n && find \"/opt/solr-$SOLR_VERSION\" -type f -print0 | xargs -0 chmod 0644 \\\n && chmod -R 0755 \"/opt/solr-$SOLR_VERSION/bin\" \\\n && mkdir /etc/default \\\n && chown root: /etc/default \\\n && chmod 0755 /etc/default \\\n && cp /opt/solr/bin/solr.in.sh /etc/default/solr.in.sh \\\n && mv /opt/solr/bin/solr.in.sh /opt/solr/bin/solr.in.sh.orig \\\n && mv /opt/solr/bin/solr.in.cmd /opt/solr/bin/solr.in.cmd.orig \\\n && chown solr:0 /etc/default/solr.in.sh \\\n && chmod 0664 /etc/default/solr.in.sh \\\n && mkdir -p /var/solr/data /var/solr/logs \\\n && (cd /opt/solr/server/solr \\\n && cp solr.xml zoo.cfg /var/solr/data/ ) \\\n && cp /opt/solr/server/resources/log4j2.xml /var/solr/log4j2.xml \\\n && find /var/solr -type d -print0 | xargs -0 chmod 0770 \\\n && find /var/solr -type f -print0 | xargs -0 chmod 0660 \\\n && sed -i -e \"s/\\\"$(whoami)\\\" == \\\"root\\\"/$(id -u) == 0/\" /opt/solr/bin/solr \\\n && sed -i -e 's/lsof -PniTCP:/lsof -t -PniTCP:/' /opt/solr/bin/solr \\\n && chown -R \"0:0\" /opt/solr-$SOLR_VERSION /docker-entrypoint-initdb.d /opt/docker-solr \\\n && chown -R \"$SOLR_USER:0\" /var/solr\nCOPY --chown=0:0 scripts /opt/docker-solr/scripts\nVOLUME /var/solr\nEXPOSE 8983/tcp\nWORKDIR /opt/solr\nUSER $SOLR_USER\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"solr-foreground\"]\n","injectedSmells":[],"originalDockerfileHash":"ed447c54100ef6e874f8098a9613fc46","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM $REPLACE_FROM\nLABEL maintainer=\"Martijn Koster \\\"mak-docker@greenhills.co.uk\\\"\"\nLABEL repository=\"https://github.com/docker-solr/docker-solr\"\n#   Override the solr download location with e.g.:\n#     docker build -t mine --build-arg SOLR_DOWNLOAD_SERVER=http://www-eu.apache.org/dist/lucene/solr .\nARG SOLR_DOWNLOAD_SERVER\nRUN apk add --no-cache acl bash gnupg lsof procps tar\nRUN apk add --no-cache ca-certificates wget \\\n && update-ca-certificates\nENV SOLR_USER=\"solr\" \\\n    SOLR_UID=\"8983\" \\\n    SOLR_GROUP=\"solr\" \\\n    SOLR_GID=\"8983\" \\\n    SOLR_VERSION=\"$REPLACE_SOLR_VERSION\" \\\n    SOLR_URL=\"${SOLR_DOWNLOAD_SERVER:-https://archive.apache.org/dist/lucene/solr}/$REPLACE_SOLR_VERSION/solr-$REPLACE_SOLR_VERSION.tgz\" \\\n    SOLR_SHA256=\"$REPLACE_SOLR_SHA256\" \\\n    SOLR_KEYS=\"$REPLACE_SOLR_KEYS\" \\\n    PATH=\"/opt/solr/bin:/opt/docker-solr/scripts:$PATH\" \\\n    SOLR_INCLUDE=\"/etc/default/solr.in.sh\" \\\n    SOLR_HOME=\"/var/solr/data\" \\\n    SOLR_PID_DIR=\"/var/solr\" \\\n    SOLR_LOGS_DIR=\"/var/solr/logs\" \\\n    LOG4J_PROPS=\"/var/solr/log4j2.xml\"\nENV GOSU_VERSION=\"1.11\"\nENV GOSU_KEY=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN addgroup -S -g \"$SOLR_GID\" \"$SOLR_GROUP\" \\\n && adduser -S -u \"$SOLR_UID\" -G \"$SOLR_GROUP\" \"$SOLR_USER\"\nRUN set -e ; export GNUPGHOME=\"/tmp/gnupg_home\" \\\n && mkdir -p \"$GNUPGHOME\" \\\n && chmod 700 \"$GNUPGHOME\" \\\n && echo \"disable-ipv6\" >> \"$GNUPGHOME/dirmngr.conf\" \\\n && for key in $SOLR_KEYS $GOSU_KEY; do found='' ;for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \" trying $server for $key\" ;gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" \\\n && found=yes \\\n && break ;gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" \\\n && found=yes \\\n && break ; done ;test -z \"$found\" \\\n && echo \"error: failed to fetch $key from several disparate servers -- network issues?\" >&2 \\\n && exit 1 ; done ; exit 0\nRUN set -e ; export GNUPGHOME=\"/tmp/gnupg_home\" \\\n && pkgArch=\"$( apk --print-arch | sed 's/x86_64/amd64/' | sed 's/aarch64/arm64/' ;)\" \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$pkgArch\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$pkgArch.asc\" \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && echo \"downloading $SOLR_URL\" \\\n && wget -q \"$SOLR_URL\" -O \"/opt/solr-$SOLR_VERSION.tgz\" \\\n && echo \"downloading $SOLR_URL.asc\" \\\n && wget -q \"$SOLR_URL.asc\" -O \"/opt/solr-$SOLR_VERSION.tgz.asc\" \\\n && echo \"$SOLR_SHA256 */opt/solr-$SOLR_VERSION.tgz\" | sha256sum -c - \\\n && (ls -l \"/opt/solr-$SOLR_VERSION.tgz\" \"/opt/solr-$SOLR_VERSION.tgz.asc\" >&2) \\\n && gpg --batch --verify \"/opt/solr-$SOLR_VERSION.tgz.asc\" \"/opt/solr-$SOLR_VERSION.tgz\" \\\n && tar -C /opt --extract --file \"/opt/solr-$SOLR_VERSION.tgz\" \\\n && (cd /opt \\\n && ln -s \"solr-$SOLR_VERSION\" solr ) \\\n && rm \"/opt/solr-$SOLR_VERSION.tgz\"* \\\n && rm -Rf /opt/solr/docs/ \\\n && mkdir -p /opt/solr/server/solr/lib /docker-entrypoint-initdb.d /opt/docker-solr \\\n && chown -R 0:0 \"/opt/solr-$SOLR_VERSION\" \\\n && find \"/opt/solr-$SOLR_VERSION\" -type d -print0 | xargs -0 chmod 0755 \\\n && find \"/opt/solr-$SOLR_VERSION\" -type f -print0 | xargs -0 chmod 0644 \\\n && chmod -R 0755 \"/opt/solr-$SOLR_VERSION/bin\" \\\n && mkdir /etc/default \\\n && chown root: /etc/default \\\n && chmod 0755 /etc/default \\\n && cp /opt/solr/bin/solr.in.sh /etc/default/solr.in.sh \\\n && mv /opt/solr/bin/solr.in.sh /opt/solr/bin/solr.in.sh.orig \\\n && mv /opt/solr/bin/solr.in.cmd /opt/solr/bin/solr.in.cmd.orig \\\n && chown solr:0 /etc/default/solr.in.sh \\\n && chmod 0664 /etc/default/solr.in.sh \\\n && mkdir -p /var/solr/data /var/solr/logs \\\n && (cd /opt/solr/server/solr \\\n && cp solr.xml zoo.cfg /var/solr/data/ ) \\\n && cp /opt/solr/server/resources/log4j2.xml /var/solr/log4j2.xml \\\n && find /var/solr -type d -print0 | xargs -0 chmod 0770 \\\n && find /var/solr -type f -print0 | xargs -0 chmod 0660 \\\n && sed -i -e \"s/\\\"$( whoami ;)\\\" == \\\"root\\\"/$( id -u ;) == 0/\" /opt/solr/bin/solr \\\n && sed -i -e 's/lsof -PniTCP:/lsof -t -PniTCP:/' /opt/solr/bin/solr \\\n && chown -R \"0:0\" /opt/solr-$SOLR_VERSION /docker-entrypoint-initdb.d /opt/docker-solr \\\n && chown -R \"$SOLR_USER:0\" /var/solr\nCOPY --chown=0:0 scripts /opt/docker-solr/scripts\nVOLUME /var/solr\nEXPOSE 8983/tcp\nWORKDIR /opt/solr\nUSER $SOLR_USER\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"solr-foreground\"]\n","originalDockerfileUglifiedHash":"cff0bcd4d0c8b4621aa792e5980e1b20","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/43de36296300444345d606b9f9ecc2fbea4b553d.dockerfile"}