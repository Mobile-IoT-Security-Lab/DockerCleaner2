{"seed":4051850253,"processedDockerfileHash":"529bbaf63e0bbbd4bc6da640a024b135","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER mislav.novakovic@sartura.hr\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.17.1-1ubuntu0.17 cmake=3.10.2-1ubuntu2.18.04.2 build-essential=12.4ubuntu1 vim=2:8.0.1453-1ubuntu1.11 supervisor=3.3.1-1.1 libpcre3-dev=2:8.39-9ubuntu0.1 pkg-config=0.29.1-0ubuntu2 libavl-dev=0.3.5-4 libev-dev=1:4.22-1 libprotobuf-c-dev=1.2.1-2 protobuf-c-compiler=1.2.1-2 libssh-dev=0.8.0~20170825.94fa1e38-1ubuntu0.7 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 swig=3.0.12-1 python-dev=2.7.15~rc1-1 -y\n#   add netconf user\nRUN adduser --system netconf \\\n && echo \"netconf:netconf\" | chpasswd\n#   generate ssh keys for netconf user\nRUN mkdir -p /home/netconf/.ssh \\\n && ssh-keygen -A \\\n && ssh-keygen -t dsa -P '' -f /home/netconf/.ssh/id_dsa \\\n && cat /home/netconf/.ssh/id_dsa.pub > /home/netconf/.ssh/authorized_keys\n#   use /opt/dev as working directory\nRUN mkdir /opt/dev\nWORKDIR /opt/dev\n#   libyang\nRUN git clone -b devel https://github.com/CESNET/libyang.git \\\n && cd libyang \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   sysrepo\nRUN git clone -b devel https://github.com/sysrepo/sysrepo.git \\\n && cd sysrepo \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_TESTS=OFF -DREPOSITORY_LOC:PATH=/etc/sysrepo .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   libnetconf2\nRUN git clone -b devel https://github.com/CESNET/libnetconf2.git \\\n && cd libnetconf2 \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   keystore\nRUN cd /opt/dev \\\n && git clone https://github.com/CESNET/Netopeer2.git \\\n && cd Netopeer2 \\\n && cd keystored \\\n && mkdir build \\\n && cd build \\\n && git checkout devel-server \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   netopeer2\nRUN cd /opt/dev \\\n && cd Netopeer2/server \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && cd ../../cli \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install\nENV EDITOR=\"vim\"\nEXPOSE 830/tcp\nCOPY supervisord.conf /etc/supervisord.conf\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER mislav.novakovic@sartura.hr\nRUN apt-get update \\\n && apt-get install git cmake build-essential vim supervisor libpcre3-dev pkg-config libavl-dev libev-dev libprotobuf-c-dev protobuf-c-compiler libssh-dev libssl-dev swig python-dev -y\n#  add netconf user\nRUN adduser --system netconf \\\n && echo \"netconf:netconf\" | chpasswd\n#  generate ssh keys for netconf user\nRUN mkdir -p /home/netconf/.ssh \\\n && ssh-keygen -A \\\n && ssh-keygen -t dsa -P '' -f /home/netconf/.ssh/id_dsa \\\n && cat /home/netconf/.ssh/id_dsa.pub > /home/netconf/.ssh/authorized_keys\n#  use /opt/dev as working directory\nRUN mkdir /opt/dev\nWORKDIR /opt/dev\n#  libyang\nRUN git clone -b devel https://github.com/CESNET/libyang.git \\\n && cd libyang \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#  sysrepo\nRUN git clone -b devel https://github.com/sysrepo/sysrepo.git \\\n && cd sysrepo \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_TESTS=OFF -DREPOSITORY_LOC:PATH=/etc/sysrepo .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#  libnetconf2\nRUN git clone -b devel https://github.com/CESNET/libnetconf2.git \\\n && cd libnetconf2 \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#  keystore\nRUN cd /opt/dev \\\n && git clone https://github.com/CESNET/Netopeer2.git \\\n && cd Netopeer2 \\\n && cd keystored \\\n && mkdir build \\\n && cd build \\\n && git checkout devel-server \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#  netopeer2\nRUN cd /opt/dev \\\n && cd Netopeer2/server \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && cd ../../cli \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install\nENV EDITOR=\"vim\"\nEXPOSE 830/tcp\nCOPY supervisord.conf /etc/supervisord.conf\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"599630bd07b9c61cf1393df0f182540d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER mislav.novakovic@sartura.hr\nRUN apt-get update \\\n && apt-get install git cmake build-essential vim supervisor libpcre3-dev pkg-config libavl-dev libev-dev libprotobuf-c-dev protobuf-c-compiler libssh-dev libssl-dev swig python-dev -y\n#   add netconf user\nRUN adduser --system netconf \\\n && echo \"netconf:netconf\" | chpasswd\n#   generate ssh keys for netconf user\nRUN mkdir -p /home/netconf/.ssh \\\n && ssh-keygen -A \\\n && ssh-keygen -t dsa -P '' -f /home/netconf/.ssh/id_dsa \\\n && cat /home/netconf/.ssh/id_dsa.pub > /home/netconf/.ssh/authorized_keys\n#   use /opt/dev as working directory\nRUN mkdir /opt/dev\nWORKDIR /opt/dev\n#   libyang\nRUN git clone -b devel https://github.com/CESNET/libyang.git \\\n && cd libyang \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   sysrepo\nRUN git clone -b devel https://github.com/sysrepo/sysrepo.git \\\n && cd sysrepo \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_TESTS=OFF -DREPOSITORY_LOC:PATH=/etc/sysrepo .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   libnetconf2\nRUN git clone -b devel https://github.com/CESNET/libnetconf2.git \\\n && cd libnetconf2 \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   keystore\nRUN cd /opt/dev \\\n && git clone https://github.com/CESNET/Netopeer2.git \\\n && cd Netopeer2 \\\n && cd keystored \\\n && mkdir build \\\n && cd build \\\n && git checkout devel-server \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   netopeer2\nRUN cd /opt/dev \\\n && cd Netopeer2/server \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && cd ../../cli \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install\nENV EDITOR=\"vim\"\nEXPOSE 830/tcp\nCOPY supervisord.conf /etc/supervisord.conf\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"9674988c342f9b7bae644eed584b5639","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/689ff8fa3d793629f48fdd306ac2882e8e34fd06.dockerfile"}