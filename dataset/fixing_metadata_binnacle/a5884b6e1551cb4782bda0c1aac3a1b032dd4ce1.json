{"seed":3899867222,"processedDockerfileHash":"07a72dd8217bc7d39e8ae1ae751bf3b9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\nMAINTAINER cedric.olivier@free.fr\nENV JEEDOM_DB_HOST=\"localhost\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nRUN echo \"mysql-server mysql-server/root_password password ${JEEDOM_DB_PASSWORD}\" | debconf-set-selections\nRUN echo \"mysql-server mysql-server/root_password_again password ${JEEDOM_DB_PASSWORD}\" | debconf-set-selections\nRUN apt-get update \\\n && apt-get install --no-install-recommends adduser build-essential cron curl libarchive-dev libav-tools libjsoncpp-dev libpcre3-dev git libssh2-php libtinyxml-dev libudev1 libxml2 locales miniupnpc mysql-client mysql-common mysql-server mysql-server-core net-tools nginx-common nginx-full nodejs npm ntp openssh-server php5-cli php5-common php5-curl php5-dev php5-fpm php5-json php5-mysql php-pear python-serial sudo supervisor systemd unzip usb-modeswitch wget -y\nRUN dpkg-reconfigure locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8\nENV LC_ALL=\"C.UTF-8\"\n#  RUN pecl install oauth\nRUN apt-get autoremove\n#   Configuration nginx\nCOPY nginx_default /etc/nginx/sites-available/default\nRUN touch /etc/nginx/sites-available/jeedom_dynamic_rule \\\n && chmod 777 /etc/nginx/sites-available/jeedom_dynamic_rule\n#   Configuration nginx_ssl\nRUN openssl genrsa -out jeedom.key 2048\nRUN openssl req -new -subj \"/C=FR/ST=France/L=Paris/O=jeedom/OU=JE/CN=jeedom\" -key jeedom.key -out jeedom.csr \\\n && openssl x509 -req -days 9999 -in jeedom.csr -signkey jeedom.key -out jeedom.crt\nRUN mkdir /etc/nginx/certs \\\n && cp jeedom.key /etc/nginx/certs \\\n && cp jeedom.crt /etc/nginx/certs \\\n && rm jeedom.key jeedom.crt\nCOPY nginx_default_ssl /etc/nginx/sites-enabled/default_ssl\n#   modification de la configuration PHP pour un temps d'exécution allongé et le traitement de fichiers lourds\nRUN sed -i \"s/max_execution_time = 30/max_execution_time = 300/g\" /etc/php5/fpm/php.ini\nRUN sed -i \"s/upload_max_filesize = 2M/upload_max_filesize = 1G/g\" /etc/php5/fpm/php.ini\nRUN sed -i \"s/post_max_size = 8M/post_max_size = 1G/g\" /etc/php5/fpm/php.ini\n#   installation nginx\nRUN mkdir -p /usr/share/nginx/www\n#   téléchargement de l'archive\n#  RUN cd /usr/share/nginx/jeedom/ && wget --no-check-certificate -O jeedom.zip https://market.jeedom.fr/jeedom/stable/jeedom.zip\nRUN cd /usr/share/nginx/www \\\n && git clone https://github.com/jeedom/core.git jeedom\n#   ajout au préalable d'un dossier tmp\nRUN mkdir -p /usr/share/nginx/www/jeedom/tmp\n#   définition des droits utilisateur/groupes/autres de manière récursif\nRUN chmod 755 -R /usr/share/nginx/www/jeedom\n#   délégation des droits pour l'utilisateur www-data de manière récursif\nRUN chown -R www-data:www-data /usr/share/nginx/www/jeedom\n#   ajout de l'utilisateur www-data au group dialout (pour piloter la connexion 3G éventuelle)\nRUN adduser www-data dialout\nRUN echo \"www-data ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n#   on copie le fichier de configuration d'exemple \nRUN cp /usr/share/nginx/www/jeedom/core/config/common.config.sample.php /usr/share/nginx/www/jeedom/core/config/common.config.php\n#   on modifie le contenu avec les paramètres fixés lors de la configuration de l'utilisateur mysql dédié (cf. \"Bases de données mysql\")\nRUN sed -i \"s/#PASSWORD#/${JEEDOM_DB_PASSWORD}/g\" /usr/share/nginx/www/jeedom/core/config/common.config.php\nCOPY docker-entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nRUN sed -i \"s/PermitRootLogin without-password/PermitRootLogin yes/g\" /etc/ssh/sshd_config\n#  ADD nginx.conf /etc/nginx/sites-available/default\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\nRUN echo \"root:${SHELL_ROOT_PASSWORD}\" | chpasswd\nRUN mkdir -p /var/run/sshd /var/log/supervisor\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"* * * * * su --shell=/bin/bash - www-data -c 'nice -n 19 /usr/bin/php /usr/share/nginx/www/jeedom/core/php/jeeCron.php' >> /dev/null\" | crontab -\nWORKDIR /usr/share/nginx/www/jeedom\nEXPOSE 80/tcp 8070/tcp 8083/tcp 9001/tcp 443/tcp 22/tcp 10000/tcp 17100/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/usr/bin/supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nMAINTAINER cedric.olivier@free.fr\nENV JEEDOM_DB_HOST=\"localhost\"\nENV JEEDOM_DB_PASSWORD=\"jeedom\"\nENV SHELL_ROOT_PASSWORD=\"jeedom\"\nRUN echo \"mysql-server mysql-server/root_password password ${JEEDOM_DB_PASSWORD}\" | debconf-set-selections\nRUN echo \"mysql-server mysql-server/root_password_again password ${JEEDOM_DB_PASSWORD}\" | debconf-set-selections\nRUN apt-get update \\\n && apt-get install adduser build-essential cron curl libarchive-dev libav-tools libjsoncpp-dev libpcre3-dev git libssh2-php libtinyxml-dev libudev1 libxml2 locales miniupnpc mysql-client mysql-common mysql-server mysql-server-core net-tools nginx-common nginx-full nodejs npm ntp openssh-server php5-cli php5-common php5-curl php5-dev php5-fpm php5-json php5-mysql php-pear python-serial sudo supervisor systemd unzip usb-modeswitch wget -y\nRUN dpkg-reconfigure locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8\nENV LC_ALL=\"C.UTF-8\"\n# RUN pecl install oauth\nRUN apt-get autoremove\n#  Configuration nginx\nCOPY nginx_default /etc/nginx/sites-available/default\nRUN touch /etc/nginx/sites-available/jeedom_dynamic_rule \\\n && chmod 777 /etc/nginx/sites-available/jeedom_dynamic_rule\n#  Configuration nginx_ssl\nRUN openssl genrsa -out jeedom.key 2048\nRUN openssl req -new -subj \"/C=FR/ST=France/L=Paris/O=jeedom/OU=JE/CN=jeedom\" -key jeedom.key -out jeedom.csr \\\n && openssl x509 -req -days 9999 -in jeedom.csr -signkey jeedom.key -out jeedom.crt\nRUN mkdir /etc/nginx/certs \\\n && cp jeedom.key /etc/nginx/certs \\\n && cp jeedom.crt /etc/nginx/certs \\\n && rm jeedom.key jeedom.crt\nCOPY nginx_default_ssl /etc/nginx/sites-enabled/default_ssl\n#  modification de la configuration PHP pour un temps d'exécution allongé et le traitement de fichiers lourds\nRUN sed -i \"s/max_execution_time = 30/max_execution_time = 300/g\" /etc/php5/fpm/php.ini\nRUN sed -i \"s/upload_max_filesize = 2M/upload_max_filesize = 1G/g\" /etc/php5/fpm/php.ini\nRUN sed -i \"s/post_max_size = 8M/post_max_size = 1G/g\" /etc/php5/fpm/php.ini\n#  installation nginx\nRUN mkdir -p /usr/share/nginx/www\n#  téléchargement de l'archive\n# RUN cd /usr/share/nginx/jeedom/ && wget --no-check-certificate -O jeedom.zip https://market.jeedom.fr/jeedom/stable/jeedom.zip\nRUN cd /usr/share/nginx/www \\\n && git clone https://github.com/jeedom/core.git jeedom\n#  ajout au préalable d'un dossier tmp\nRUN mkdir -p /usr/share/nginx/www/jeedom/tmp\n#  définition des droits utilisateur/groupes/autres de manière récursif\nRUN chmod 755 -R /usr/share/nginx/www/jeedom\n#  délégation des droits pour l'utilisateur www-data de manière récursif\nRUN chown -R www-data:www-data /usr/share/nginx/www/jeedom\n#  ajout de l'utilisateur www-data au group dialout (pour piloter la connexion 3G éventuelle)\nRUN adduser www-data dialout\nRUN echo \"www-data ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n#  on copie le fichier de configuration d'exemple \nRUN cp /usr/share/nginx/www/jeedom/core/config/common.config.sample.php /usr/share/nginx/www/jeedom/core/config/common.config.php\n#  on modifie le contenu avec les paramètres fixés lors de la configuration de l'utilisateur mysql dédié (cf. \"Bases de données mysql\")\nRUN sed -i \"s/#PASSWORD#/${JEEDOM_DB_PASSWORD}/g\" /usr/share/nginx/www/jeedom/core/config/common.config.php\nCOPY docker-entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nRUN sed -i \"s/PermitRootLogin without-password/PermitRootLogin yes/g\" /etc/ssh/sshd_config\n# ADD nginx.conf /etc/nginx/sites-available/default\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\nRUN echo \"root:${SHELL_ROOT_PASSWORD}\" | chpasswd\nRUN mkdir -p /var/run/sshd /var/log/supervisor\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"* * * * * su --shell=/bin/bash - www-data -c 'nice -n 19 /usr/bin/php /usr/share/nginx/www/jeedom/core/php/jeeCron.php' >> /dev/null\" | crontab -\nWORKDIR /usr/share/nginx/www/jeedom\nEXPOSE 80/tcp 8070/tcp 8083/tcp 9001/tcp 443/tcp 22/tcp 10000/tcp 17100/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/usr/bin/supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"23bd8522d391af1f05a5fe20e8734056","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nMAINTAINER cedric.olivier@free.fr\nENV JEEDOM_DB_HOST=\"localhost\"\nENV JEEDOM_DB_PASSWORD=\"jeedom\"\nENV SHELL_ROOT_PASSWORD=\"jeedom\"\nRUN echo \"mysql-server mysql-server/root_password password ${JEEDOM_DB_PASSWORD}\" | debconf-set-selections\nRUN echo \"mysql-server mysql-server/root_password_again password ${JEEDOM_DB_PASSWORD}\" | debconf-set-selections\nRUN apt-get update \\\n && apt-get install adduser build-essential cron curl libarchive-dev libav-tools libjsoncpp-dev libpcre3-dev git libssh2-php libtinyxml-dev libudev1 libxml2 locales miniupnpc mysql-client mysql-common mysql-server mysql-server-core net-tools nginx-common nginx-full nodejs npm ntp openssh-server php5-cli php5-common php5-curl php5-dev php5-fpm php5-json php5-mysql php-pear python-serial sudo supervisor systemd unzip usb-modeswitch wget -y\nRUN dpkg-reconfigure locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8\nENV LC_ALL=\"C.UTF-8\"\n#  RUN pecl install oauth\nRUN apt-get autoremove\n#   Configuration nginx\nCOPY nginx_default /etc/nginx/sites-available/default\nRUN touch /etc/nginx/sites-available/jeedom_dynamic_rule \\\n && chmod 777 /etc/nginx/sites-available/jeedom_dynamic_rule\n#   Configuration nginx_ssl\nRUN openssl genrsa -out jeedom.key 2048\nRUN openssl req -new -subj \"/C=FR/ST=France/L=Paris/O=jeedom/OU=JE/CN=jeedom\" -key jeedom.key -out jeedom.csr \\\n && openssl x509 -req -days 9999 -in jeedom.csr -signkey jeedom.key -out jeedom.crt\nRUN mkdir /etc/nginx/certs \\\n && cp jeedom.key /etc/nginx/certs \\\n && cp jeedom.crt /etc/nginx/certs \\\n && rm jeedom.key jeedom.crt\nCOPY nginx_default_ssl /etc/nginx/sites-enabled/default_ssl\n#   modification de la configuration PHP pour un temps d'exécution allongé et le traitement de fichiers lourds\nRUN sed -i \"s/max_execution_time = 30/max_execution_time = 300/g\" /etc/php5/fpm/php.ini\nRUN sed -i \"s/upload_max_filesize = 2M/upload_max_filesize = 1G/g\" /etc/php5/fpm/php.ini\nRUN sed -i \"s/post_max_size = 8M/post_max_size = 1G/g\" /etc/php5/fpm/php.ini\n#   installation nginx\nRUN mkdir -p /usr/share/nginx/www\n#   téléchargement de l'archive\n#  RUN cd /usr/share/nginx/jeedom/ && wget --no-check-certificate -O jeedom.zip https://market.jeedom.fr/jeedom/stable/jeedom.zip\nRUN cd /usr/share/nginx/www \\\n && git clone https://github.com/jeedom/core.git jeedom\n#   ajout au préalable d'un dossier tmp\nRUN mkdir -p /usr/share/nginx/www/jeedom/tmp\n#   définition des droits utilisateur/groupes/autres de manière récursif\nRUN chmod 755 -R /usr/share/nginx/www/jeedom\n#   délégation des droits pour l'utilisateur www-data de manière récursif\nRUN chown -R www-data:www-data /usr/share/nginx/www/jeedom\n#   ajout de l'utilisateur www-data au group dialout (pour piloter la connexion 3G éventuelle)\nRUN adduser www-data dialout\nRUN echo \"www-data ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n#   on copie le fichier de configuration d'exemple \nRUN cp /usr/share/nginx/www/jeedom/core/config/common.config.sample.php /usr/share/nginx/www/jeedom/core/config/common.config.php\n#   on modifie le contenu avec les paramètres fixés lors de la configuration de l'utilisateur mysql dédié (cf. \"Bases de données mysql\")\nRUN sed -i \"s/#PASSWORD#/${JEEDOM_DB_PASSWORD}/g\" /usr/share/nginx/www/jeedom/core/config/common.config.php\nCOPY docker-entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nRUN sed -i \"s/PermitRootLogin without-password/PermitRootLogin yes/g\" /etc/ssh/sshd_config\n#  ADD nginx.conf /etc/nginx/sites-available/default\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\nRUN echo \"root:${SHELL_ROOT_PASSWORD}\" | chpasswd\nRUN mkdir -p /var/run/sshd /var/log/supervisor\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN echo \"* * * * * su --shell=/bin/bash - www-data -c 'nice -n 19 /usr/bin/php /usr/share/nginx/www/jeedom/core/php/jeeCron.php' >> /dev/null\" | crontab -\nWORKDIR /usr/share/nginx/www/jeedom\nEXPOSE 80/tcp 8070/tcp 8083/tcp 9001/tcp 443/tcp 22/tcp 10000/tcp 17100/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/usr/bin/supervisord\"]\n","originalDockerfileUglifiedHash":"141cfb39f94e98ec55adf9d995021023","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a5884b6e1551cb4782bda0c1aac3a1b032dd4ce1.dockerfile"}