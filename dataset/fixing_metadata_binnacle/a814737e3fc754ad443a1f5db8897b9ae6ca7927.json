{"seed":1949799432,"processedDockerfileHash":"3f0e2c81a68eaf260c3c69a7c177a72c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ####################\n#    Building Stage   #\n#  ####################\nFROM gitlab/gitlab-ce:10.8.7-ce.0 AS builder\nENV GITLAB_DIR=\"/opt/gitlab/embedded/service/gitlab-rails\"\nENV GITLAB_GIT_ZH=\"https://gitlab.com/xhang/gitlab.git\"\n#   Reference:\n#   * https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/config/software/gitlab-rails.rb\n#   * https://gitlab.com/gitlab-org/gitlab-ce/blob/master/.gitlab-ci.yml\nRUN set -xe \\\n && echo \" # Preparing ...\" \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && export SSL_CERT_DIR=/etc/ssl/certs/ \\\n && export GIT_SSL_CAPATH=/etc/ssl/certs/ \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends lsb-release patch nodejs python build-essential yarn cmake -yqq\nRUN set -xe \\\n && echo \" # Generating translation patch ...\" \\\n && cd /tmp \\\n && git clone ${GITLAB_GIT_ZH} gitlab \\\n && cd gitlab \\\n && export IGNORE_DIRS=':!qa :!spec :!features :!.gitignore :!.gitlab :!locale :!app/assets/ :!vendor/assets/' \\\n && git diff --diff-filter=d v10.8.7..v10.8.7-zh -- . ${IGNORE_DIRS} > ../zh_CN.diff \\\n && echo \" # Patching ...\" \\\n && patch -d ${GITLAB_DIR} -p1 < ../zh_CN.diff \\\n && echo \" # Copy assets files ...\" \\\n && git checkout v10.8.7-zh \\\n && cp -R locale ${GITLAB_DIR}/ \\\n && mkdir -p ${GITLAB_DIR}/app \\\n && cp -R app/assets ${GITLAB_DIR}/app/ \\\n && mkdir -p ${GITLAB_DIR}/vendor \\\n && cp -R vendor/assets ${GITLAB_DIR}/vendor/\nRUN set -xe \\\n && echo \" # Regenerating the assets\" \\\n && cd ${GITLAB_DIR} \\\n && cp config/gitlab.yml.example config/gitlab.yml \\\n && cp config/database.yml.postgresql config/database.yml \\\n && cp config/secrets.yml.example config/secrets.yml \\\n && rm -rf public/assets \\\n && export NODE_ENV=production \\\n && export RAILS_ENV=production \\\n && export SETUP_DB=false \\\n && export USE_DB=false \\\n && export SKIP_STORAGE_VALIDATION=true \\\n && export WEBPACK_REPORT=true \\\n && export NO_COMPRESSION=true \\\n && export NO_PRIVILEGE_DROP=true \\\n && export NODE_OPTIONS=--max-old-space-size=4086 \\\n && yarn install --frozen-lockfile \\\n && bin/bundle install --frozen \\\n && bin/rake gettext:compile \\\n && bin/rake gitlab:assets:compile\nRUN set -xe \\\n && echo \" # Cleaning ...\" \\\n && yarn cache clean \\\n && rm -rf log tmp config/gitlab.yml config/database.yml config/secrets.yml .secret .gitlab_shell_secret .gitlab_workhorse_secret app/assets node_modules \\\n && find /usr/lib/ -name __pycache__ | xargs rm -rf \\\n && rm -rf /tmp/gitlab /tmp/*.diff /root/.cache /var/lib/apt/lists/*\n#  #####################\n#    Production Stage  #\n#  #####################\nFROM gitlab/gitlab-ce:10.8.7-ce.0 AS production\nRUN set -xe \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install --no-install-recommends locales tzdata -yqq \\\n && locale-gen en_US.UTF-8 \\\n && rm -rf /var/lib/apt/lists/*\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\nENV TZ=\"Asia/Shanghai\"\nENV GITLAB_VERSION=\"v10.8.7\"\nENV GITLAB_DIR=\"/opt/gitlab/embedded/service/gitlab-rails\"\nENV GITLAB_GIT_ZH=\"https://gitlab.com/xhang/gitlab.git\"\nENV GITLAB_GIT_COMMIT_UPSTREAM=\"v10.8.7\"\nENV GITLAB_GIT_COMMIT_ZH=\"v10.8.7-zh\"\nCOPY --from=builder ${GITLAB_DIR}/app ${GITLAB_DIR}/app\nCOPY --from=builder ${GITLAB_DIR}/public ${GITLAB_DIR}/public\nCOPY --from=builder ${GITLAB_DIR}/config/application.rb ${GITLAB_DIR}/config/application.rb\nCOPY --from=builder ${GITLAB_DIR}/config/initializers ${GITLAB_DIR}/config/initializers\nCOPY --from=builder ${GITLAB_DIR}/config/locales ${GITLAB_DIR}/config/locales\nCOPY --from=builder ${GITLAB_DIR}/lib/gitlab ${GITLAB_DIR}/lib/gitlab\nCOPY --from=builder ${GITLAB_DIR}/locale ${GITLAB_DIR}/locale\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ####################\n#   Building Stage   #\n# ####################\nFROM gitlab/gitlab-ce:10.8.7-ce.0 AS builder\nENV GITLAB_DIR=\"/opt/gitlab/embedded/service/gitlab-rails\"\nENV GITLAB_GIT_ZH=\"https://gitlab.com/xhang/gitlab.git\"\n#  Reference:\n#  * https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/config/software/gitlab-rails.rb\n#  * https://gitlab.com/gitlab-org/gitlab-ce/blob/master/.gitlab-ci.yml\nRUN set -xe \\\n && echo \" # Preparing ...\" \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && export SSL_CERT_DIR=/etc/ssl/certs/ \\\n && export GIT_SSL_CAPATH=/etc/ssl/certs/ \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install lsb-release patch nodejs python build-essential yarn cmake -yqq\nRUN set -xe \\\n && echo \" # Generating translation patch ...\" \\\n && cd /tmp \\\n && git clone ${GITLAB_GIT_ZH} gitlab \\\n && cd gitlab \\\n && export IGNORE_DIRS=':!qa :!spec :!features :!.gitignore :!.gitlab :!locale :!app/assets/ :!vendor/assets/' \\\n && git diff --diff-filter=d v10.8.7..v10.8.7-zh -- . ${IGNORE_DIRS} > ../zh_CN.diff \\\n && echo \" # Patching ...\" \\\n && patch -d ${GITLAB_DIR} -p1 < ../zh_CN.diff \\\n && echo \" # Copy assets files ...\" \\\n && git checkout v10.8.7-zh \\\n && cp -R locale ${GITLAB_DIR}/ \\\n && mkdir -p ${GITLAB_DIR}/app \\\n && cp -R app/assets ${GITLAB_DIR}/app/ \\\n && mkdir -p ${GITLAB_DIR}/vendor \\\n && cp -R vendor/assets ${GITLAB_DIR}/vendor/\nRUN set -xe \\\n && echo \" # Regenerating the assets\" \\\n && cd ${GITLAB_DIR} \\\n && cp config/gitlab.yml.example config/gitlab.yml \\\n && cp config/database.yml.postgresql config/database.yml \\\n && cp config/secrets.yml.example config/secrets.yml \\\n && rm -rf public/assets \\\n && export NODE_ENV=production \\\n && export RAILS_ENV=production \\\n && export SETUP_DB=false \\\n && export USE_DB=false \\\n && export SKIP_STORAGE_VALIDATION=true \\\n && export WEBPACK_REPORT=true \\\n && export NO_COMPRESSION=true \\\n && export NO_PRIVILEGE_DROP=true \\\n && export NODE_OPTIONS=--max-old-space-size=4086 \\\n && yarn install --frozen-lockfile \\\n && bin/bundle install --frozen \\\n && bin/rake gettext:compile \\\n && bin/rake gitlab:assets:compile\nRUN set -xe \\\n && echo \" # Cleaning ...\" \\\n && yarn cache clean \\\n && rm -rf log tmp config/gitlab.yml config/database.yml config/secrets.yml .secret .gitlab_shell_secret .gitlab_workhorse_secret app/assets node_modules \\\n && find /usr/lib/ -name __pycache__ | xargs rm -rf \\\n && rm -rf /tmp/gitlab /tmp/*.diff /root/.cache /var/lib/apt/lists/*\n# #####################\n#   Production Stage  #\n# #####################\nFROM gitlab/gitlab-ce:10.8.7-ce.0 AS production\nRUN set -xe \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install locales tzdata -yqq \\\n && locale-gen en_US.UTF-8 \\\n && rm -rf /var/lib/apt/lists/*\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\nENV TZ=\"Asia/Shanghai\"\nENV GITLAB_VERSION=\"v10.8.7\"\nENV GITLAB_DIR=\"/opt/gitlab/embedded/service/gitlab-rails\"\nENV GITLAB_GIT_ZH=\"https://gitlab.com/xhang/gitlab.git\"\nENV GITLAB_GIT_COMMIT_UPSTREAM=\"v10.8.7\"\nENV GITLAB_GIT_COMMIT_ZH=\"v10.8.7-zh\"\nCOPY --from=builder ${GITLAB_DIR}/app ${GITLAB_DIR}/app\nCOPY --from=builder ${GITLAB_DIR}/public ${GITLAB_DIR}/public\nCOPY --from=builder ${GITLAB_DIR}/config/application.rb ${GITLAB_DIR}/config/application.rb\nCOPY --from=builder ${GITLAB_DIR}/config/initializers ${GITLAB_DIR}/config/initializers\nCOPY --from=builder ${GITLAB_DIR}/config/locales ${GITLAB_DIR}/config/locales\nCOPY --from=builder ${GITLAB_DIR}/lib/gitlab ${GITLAB_DIR}/lib/gitlab\nCOPY --from=builder ${GITLAB_DIR}/locale ${GITLAB_DIR}/locale\n","injectedSmells":[],"originalDockerfileHash":"545bed34ed46f1f5d695a7d474379408","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ####################\n#    Building Stage   #\n#  ####################\nFROM gitlab/gitlab-ce:10.8.7-ce.0 AS builder\nENV GITLAB_DIR=\"/opt/gitlab/embedded/service/gitlab-rails\"\nENV GITLAB_GIT_ZH=\"https://gitlab.com/xhang/gitlab.git\"\n#   Reference:\n#   * https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/config/software/gitlab-rails.rb\n#   * https://gitlab.com/gitlab-org/gitlab-ce/blob/master/.gitlab-ci.yml\nRUN set -xe \\\n && echo \" # Preparing ...\" \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && export SSL_CERT_DIR=/etc/ssl/certs/ \\\n && export GIT_SSL_CAPATH=/etc/ssl/certs/ \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install lsb-release patch nodejs python build-essential yarn cmake -yqq\nRUN set -xe \\\n && echo \" # Generating translation patch ...\" \\\n && cd /tmp \\\n && git clone ${GITLAB_GIT_ZH} gitlab \\\n && cd gitlab \\\n && export IGNORE_DIRS=':!qa :!spec :!features :!.gitignore :!.gitlab :!locale :!app/assets/ :!vendor/assets/' \\\n && git diff --diff-filter=d v10.8.7..v10.8.7-zh -- . ${IGNORE_DIRS} > ../zh_CN.diff \\\n && echo \" # Patching ...\" \\\n && patch -d ${GITLAB_DIR} -p1 < ../zh_CN.diff \\\n && echo \" # Copy assets files ...\" \\\n && git checkout v10.8.7-zh \\\n && cp -R locale ${GITLAB_DIR}/ \\\n && mkdir -p ${GITLAB_DIR}/app \\\n && cp -R app/assets ${GITLAB_DIR}/app/ \\\n && mkdir -p ${GITLAB_DIR}/vendor \\\n && cp -R vendor/assets ${GITLAB_DIR}/vendor/\nRUN set -xe \\\n && echo \" # Regenerating the assets\" \\\n && cd ${GITLAB_DIR} \\\n && cp config/gitlab.yml.example config/gitlab.yml \\\n && cp config/database.yml.postgresql config/database.yml \\\n && cp config/secrets.yml.example config/secrets.yml \\\n && rm -rf public/assets \\\n && export NODE_ENV=production \\\n && export RAILS_ENV=production \\\n && export SETUP_DB=false \\\n && export USE_DB=false \\\n && export SKIP_STORAGE_VALIDATION=true \\\n && export WEBPACK_REPORT=true \\\n && export NO_COMPRESSION=true \\\n && export NO_PRIVILEGE_DROP=true \\\n && export NODE_OPTIONS=--max-old-space-size=4086 \\\n && yarn install --frozen-lockfile \\\n && bin/bundle install --frozen \\\n && bin/rake gettext:compile \\\n && bin/rake gitlab:assets:compile\nRUN set -xe \\\n && echo \" # Cleaning ...\" \\\n && yarn cache clean \\\n && rm -rf log tmp config/gitlab.yml config/database.yml config/secrets.yml .secret .gitlab_shell_secret .gitlab_workhorse_secret app/assets node_modules \\\n && find /usr/lib/ -name __pycache__ | xargs rm -rf \\\n && rm -rf /tmp/gitlab /tmp/*.diff /root/.cache /var/lib/apt/lists/*\n#  #####################\n#    Production Stage  #\n#  #####################\nFROM gitlab/gitlab-ce:10.8.7-ce.0 AS production\nRUN set -xe \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install locales tzdata -yqq \\\n && locale-gen en_US.UTF-8 \\\n && rm -rf /var/lib/apt/lists/*\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\nENV TZ=\"Asia/Shanghai\"\nENV GITLAB_VERSION=\"v10.8.7\"\nENV GITLAB_DIR=\"/opt/gitlab/embedded/service/gitlab-rails\"\nENV GITLAB_GIT_ZH=\"https://gitlab.com/xhang/gitlab.git\"\nENV GITLAB_GIT_COMMIT_UPSTREAM=\"v10.8.7\"\nENV GITLAB_GIT_COMMIT_ZH=\"v10.8.7-zh\"\nCOPY --from=builder ${GITLAB_DIR}/app ${GITLAB_DIR}/app\nCOPY --from=builder ${GITLAB_DIR}/public ${GITLAB_DIR}/public\nCOPY --from=builder ${GITLAB_DIR}/config/application.rb ${GITLAB_DIR}/config/application.rb\nCOPY --from=builder ${GITLAB_DIR}/config/initializers ${GITLAB_DIR}/config/initializers\nCOPY --from=builder ${GITLAB_DIR}/config/locales ${GITLAB_DIR}/config/locales\nCOPY --from=builder ${GITLAB_DIR}/lib/gitlab ${GITLAB_DIR}/lib/gitlab\nCOPY --from=builder ${GITLAB_DIR}/locale ${GITLAB_DIR}/locale\n","originalDockerfileUglifiedHash":"e6ee927b4c28267041cd4ec4b7f698bf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a814737e3fc754ad443a1f5db8897b9ae6ca7927.dockerfile"}