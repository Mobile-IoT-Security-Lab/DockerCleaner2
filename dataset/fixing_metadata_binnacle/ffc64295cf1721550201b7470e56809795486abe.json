{"seed":112908556,"processedDockerfileHash":"f4d9e01433ad03787390c4b556fb6dc0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Docker container for Ubuntu 14.04\n#   See https://github.com/ceejatec/naked-docker/ for details about the\n#   construction of the base image.\nFROM ceejatec/naked-ubuntu:14.04\nMAINTAINER build-team@couchbase.com\nUSER root\n#   Install SSH server\nRUN apt-get update \\\n && apt-get install --no-install-recommends openssh-server -y \\\n && rm -f /var/cache/apt/archives/*.deb \\\n && mkdir /var/run/sshd\n#   Create couchbase user with password-less sudo privs, and give\n#   ownership of /opt/couchbase\nRUN useradd couchbase -G sudo -m -s /bin/bash \\\n && mkdir -p /opt/couchbase \\\n && chown -R couchbase:couchbase /opt/couchbase \\\n && echo 'couchbase:couchbase' | chpasswd \\\n && sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\n#   Expose and start SSH daemon\nEXPOSE 22/tcp\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n#   Install Couchbase Mobile build dependencies. We don't need \"go\" or \"repo\"\n#   yet, but we probably will.\nRUN apt-get update \\\n && apt-get install --no-install-recommends ccache git-core ed man curl ccache gcc-multilib g++-multilib lib32z1 lib32stdc++6 npm bc -y \\\n && rm -f /var/cache/apt/archives/*.deb\nRUN ln -s /usr/bin/nodejs /usr/bin/node\nRUN ln -s /usr/bin/nodejs /usr/sbin/node\nRUN ln -s /usr/bin/nodejs /usr/local/bin/node\nRUN echo 'PATH=\"/usr/lib/ccache:$PATH\"' >> /home/couchbase/.profile\nRUN mkdir /tmp/deploy \\\n && curl https://storage.googleapis.com/golang/go1.4.1.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/go.tar.gz \\\n && cd bin \\\n && for file in /usr/local/go/bin/*; do ln -s $file ; done \\\n && curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\n#   Node.js dependency to build phonegap-plugin\nRUN npm config set registry=\"http://registry.npmjs.org/\"\nRUN npm install xmlbuilder@15.1.1\nRUN npm install findit@2.0.0\nRUN npm install ncp@2.0.0\nRUN echo yes | apt-get install --no-install-recommends zip\n#   JDK for Jenkins.\n#   JCE Unlimited Policy is not available by default from oracle-java8-installer\n#   Software-properties-common is required for add-apt-repository\nRUN apt-get update \\\n && apt-get install --no-install-recommends maven unzip -y \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && add-apt-repository ppa:webupd8team/java -y \\\n && apt-get update \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections \\\n && apt-get install --no-install-recommends oracle-java8-installer -y \\\n && apt-get install --no-install-recommends oracle-java8-set-default \\\n && apt-get install --no-install-recommends oracle-java8-unlimited-jce-policy \\\n && rm -f /var/cache/apt/archives/*.deb\n#   CLANG compiler\nRUN apt-get install --no-install-recommends clang-3.6 -y\n#   Android SDK/CLANG environment settings\nRUN echo 'export ANDROID_NDK_HOME=\"/home/couchbase/jenkins/tools/android-ndk-r12b\"\\nexport ANDROID_HOME=\"/home/couchbase/jenkins/tools/android-sdk\"\\nexport ANDROID_SDK_HOME=\"/home/couchbase/jenkins/tools/android-sdk\"\\nexport PATH=\"/usr/lib/llvm-3.6/bin:$ANDROID_NDK_HOME:$ANDROID_SDK_HOME:$ANDROID_SDK_HOME/tools:$ANDROID_SDK_HOME/platform-tools:$PATH\"' > /etc/profile.d/android.sh\n#   Android SDK\nUSER couchbase\nRUN mkdir -p /home/couchbase/jenkins/tools \\\n && cd /home/couchbase/jenkins/tools \\\n && curl -L https://dl.google.com/android/repository/tools_r25.2.3-linux.zip -o android-sdk.zip \\\n && unzip android-sdk.zip -d android-sdk \\\n && chown -R couchbase:couchbase android-sdk \\\n && chmod 755 android-sdk\nENV ANDROID_HOME=\"/home/couchbase/jenkins/tools/android-sdk\"\nENV SDK_CMD=\"$ANDROID_HOME/tools/bin/sdkmanager\"\n#   Android SDK License\nRUN mkdir $ANDROID_HOME/licenses \\\n && echo 8933bad161af4178b1185d1a37fbf41ea5269c55 > $ANDROID_HOME/licenses/android-sdk-license \\\n && echo d56f5187479451eabf01fb78af6dfcb131a6481e >> $ANDROID_HOME/licenses/android-sdk-license \\\n && echo 84831b9409646a918e30573bab4c9c91346d8abd > $ANDROID_HOME/licenses/android-sdk-preview-license\nRUN . /etc/profile \\\n && $SDK_CMD \"tools\" \"platform-tools\" \\\n && $SDK_CMD \"build-tools;27.0.3\" \"build-tools;27.0.0\" \"build-tools;26.0.2\" \"build-tools;24.0.0\" \"build-tools;25.0.3\" \"build-tools;22.0.1\" \"build-tools;23.0.3\" \"build-tools;19.1.0\" \\\n && $SDK_CMD \"platforms;android-27\" \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-22\" \"platforms;android-16\" \\\n && $SDK_CMD \"system-images;android-16;default;armeabi-v7a\" \\\n && $SDK_CMD \"system-images;android-19;default;armeabi-v7a\" \\\n && $SDK_CMD \"system-images;android-24;default;armeabi-v7a\" \\\n && $SDK_CMD \"system-images;android-25;google_apis;armeabi-v7a\"\n#   Android NDK\nUSER couchbase\nRUN cd /home/couchbase/jenkins/tools \\\n && curl -L https://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip -o android-ndk-r12b.zip \\\n && unzip -qq android-ndk-r12b.zip \\\n && chown -R couchbase:couchbase android-ndk-r12b \\\n && chmod 755 android-ndk-r12b\n#   Revert so CMD will run as root.\nUSER root\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Docker container for Ubuntu 14.04\n#  See https://github.com/ceejatec/naked-docker/ for details about the\n#  construction of the base image.\nFROM ceejatec/naked-ubuntu:14.04\nMAINTAINER build-team@couchbase.com\nUSER root\n#  Install SSH server\nRUN apt-get update \\\n && apt-get install openssh-server -y \\\n && rm -f /var/cache/apt/archives/*.deb \\\n && mkdir /var/run/sshd\n#  Create couchbase user with password-less sudo privs, and give\n#  ownership of /opt/couchbase\nRUN useradd couchbase -G sudo -m -s /bin/bash \\\n && mkdir -p /opt/couchbase \\\n && chown -R couchbase:couchbase /opt/couchbase \\\n && echo 'couchbase:couchbase' | chpasswd \\\n && sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\n#  Expose and start SSH daemon\nEXPOSE 22/tcp\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n#  Install Couchbase Mobile build dependencies. We don't need \"go\" or \"repo\"\n#  yet, but we probably will.\nRUN apt-get update \\\n && apt-get install ccache git-core ed man curl ccache gcc-multilib g++-multilib lib32z1 lib32stdc++6 npm bc -y \\\n && rm -f /var/cache/apt/archives/*.deb\nRUN ln -s /usr/bin/nodejs /usr/bin/node\nRUN ln -s /usr/bin/nodejs /usr/sbin/node\nRUN ln -s /usr/bin/nodejs /usr/local/bin/node\nRUN echo 'PATH=\"/usr/lib/ccache:$PATH\"' >> /home/couchbase/.profile\nRUN mkdir /tmp/deploy \\\n && curl https://storage.googleapis.com/golang/go1.4.1.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/go.tar.gz \\\n && cd bin \\\n && for file in /usr/local/go/bin/*; do ln -s $file ; done \\\n && curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\n#  Node.js dependency to build phonegap-plugin\nRUN npm config set registry=\"http://registry.npmjs.org/\"\nRUN npm install xmlbuilder\nRUN npm install findit\nRUN npm install ncp\nRUN echo yes | apt-get install zip\n#  JDK for Jenkins.\n#  JCE Unlimited Policy is not available by default from oracle-java8-installer\n#  Software-properties-common is required for add-apt-repository\nRUN apt-get update \\\n && apt-get install maven unzip -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:webupd8team/java -y \\\n && apt-get update \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections \\\n && apt-get install oracle-java8-installer -y \\\n && apt-get install oracle-java8-set-default \\\n && apt-get install oracle-java8-unlimited-jce-policy \\\n && rm -f /var/cache/apt/archives/*.deb\n#  CLANG compiler\nRUN apt-get install clang-3.6 -y\n#  Android SDK/CLANG environment settings\nRUN echo 'export ANDROID_NDK_HOME=\"/home/couchbase/jenkins/tools/android-ndk-r12b\"\\nexport ANDROID_HOME=\"/home/couchbase/jenkins/tools/android-sdk\"\\nexport ANDROID_SDK_HOME=\"/home/couchbase/jenkins/tools/android-sdk\"\\nexport PATH=\"/usr/lib/llvm-3.6/bin:$ANDROID_NDK_HOME:$ANDROID_SDK_HOME:$ANDROID_SDK_HOME/tools:$ANDROID_SDK_HOME/platform-tools:$PATH\"' > /etc/profile.d/android.sh\n#  Android SDK\nUSER couchbase\nRUN mkdir -p /home/couchbase/jenkins/tools \\\n && cd /home/couchbase/jenkins/tools \\\n && curl -L https://dl.google.com/android/repository/tools_r25.2.3-linux.zip -o android-sdk.zip \\\n && unzip android-sdk.zip -d android-sdk \\\n && chown -R couchbase:couchbase android-sdk \\\n && chmod 755 android-sdk\nENV ANDROID_HOME=\"/home/couchbase/jenkins/tools/android-sdk\"\nENV SDK_CMD=\"$ANDROID_HOME/tools/bin/sdkmanager\"\n#  Android SDK License\nRUN mkdir $ANDROID_HOME/licenses \\\n && echo 8933bad161af4178b1185d1a37fbf41ea5269c55 > $ANDROID_HOME/licenses/android-sdk-license \\\n && echo d56f5187479451eabf01fb78af6dfcb131a6481e >> $ANDROID_HOME/licenses/android-sdk-license \\\n && echo 84831b9409646a918e30573bab4c9c91346d8abd > $ANDROID_HOME/licenses/android-sdk-preview-license\nRUN . /etc/profile \\\n && $SDK_CMD \"tools\" \"platform-tools\" \\\n && $SDK_CMD \"build-tools;27.0.3\" \"build-tools;27.0.0\" \"build-tools;26.0.2\" \"build-tools;24.0.0\" \"build-tools;25.0.3\" \"build-tools;22.0.1\" \"build-tools;23.0.3\" \"build-tools;19.1.0\" \\\n && $SDK_CMD \"platforms;android-27\" \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-22\" \"platforms;android-16\" \\\n && $SDK_CMD \"system-images;android-16;default;armeabi-v7a\" \\\n && $SDK_CMD \"system-images;android-19;default;armeabi-v7a\" \\\n && $SDK_CMD \"system-images;android-24;default;armeabi-v7a\" \\\n && $SDK_CMD \"system-images;android-25;google_apis;armeabi-v7a\"\n#  Android NDK\nUSER couchbase\nRUN cd /home/couchbase/jenkins/tools \\\n && curl -L https://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip -o android-ndk-r12b.zip \\\n && unzip -qq android-ndk-r12b.zip \\\n && chown -R couchbase:couchbase android-ndk-r12b \\\n && chmod 755 android-ndk-r12b\n#  Revert so CMD will run as root.\nUSER root\n","injectedSmells":[],"originalDockerfileHash":"4ead75f263831a6f460ea7a906bad90c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Docker container for Ubuntu 14.04\n#   See https://github.com/ceejatec/naked-docker/ for details about the\n#   construction of the base image.\nFROM ceejatec/naked-ubuntu:14.04\nMAINTAINER build-team@couchbase.com\nUSER root\n#   Install SSH server\nRUN apt-get update \\\n && apt-get install openssh-server -y \\\n && rm -f /var/cache/apt/archives/*.deb \\\n && mkdir /var/run/sshd\n#   Create couchbase user with password-less sudo privs, and give\n#   ownership of /opt/couchbase\nRUN useradd couchbase -G sudo -m -s /bin/bash \\\n && mkdir -p /opt/couchbase \\\n && chown -R couchbase:couchbase /opt/couchbase \\\n && echo 'couchbase:couchbase' | chpasswd \\\n && sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\n#   Expose and start SSH daemon\nEXPOSE 22/tcp\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n#   Install Couchbase Mobile build dependencies. We don't need \"go\" or \"repo\"\n#   yet, but we probably will.\nRUN apt-get update \\\n && apt-get install ccache git-core ed man curl ccache gcc-multilib g++-multilib lib32z1 lib32stdc++6 npm bc -y \\\n && rm -f /var/cache/apt/archives/*.deb\nRUN ln -s /usr/bin/nodejs /usr/bin/node\nRUN ln -s /usr/bin/nodejs /usr/sbin/node\nRUN ln -s /usr/bin/nodejs /usr/local/bin/node\nRUN echo 'PATH=\"/usr/lib/ccache:$PATH\"' >> /home/couchbase/.profile\nRUN mkdir /tmp/deploy \\\n && curl https://storage.googleapis.com/golang/go1.4.1.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/go.tar.gz \\\n && cd bin \\\n && for file in /usr/local/go/bin/*; do ln -s $file ; done \\\n && curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\n#   Node.js dependency to build phonegap-plugin\nRUN npm config set registry=\"http://registry.npmjs.org/\"\nRUN npm install xmlbuilder\nRUN npm install findit\nRUN npm install ncp\nRUN echo yes | apt-get install zip\n#   JDK for Jenkins.\n#   JCE Unlimited Policy is not available by default from oracle-java8-installer\n#   Software-properties-common is required for add-apt-repository\nRUN apt-get update \\\n && apt-get install maven unzip -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:webupd8team/java -y \\\n && apt-get update \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections \\\n && apt-get install oracle-java8-installer -y \\\n && apt-get install oracle-java8-set-default \\\n && apt-get install oracle-java8-unlimited-jce-policy \\\n && rm -f /var/cache/apt/archives/*.deb\n#   CLANG compiler\nRUN apt-get install clang-3.6 -y\n#   Android SDK/CLANG environment settings\nRUN echo 'export ANDROID_NDK_HOME=\"/home/couchbase/jenkins/tools/android-ndk-r12b\"\\nexport ANDROID_HOME=\"/home/couchbase/jenkins/tools/android-sdk\"\\nexport ANDROID_SDK_HOME=\"/home/couchbase/jenkins/tools/android-sdk\"\\nexport PATH=\"/usr/lib/llvm-3.6/bin:$ANDROID_NDK_HOME:$ANDROID_SDK_HOME:$ANDROID_SDK_HOME/tools:$ANDROID_SDK_HOME/platform-tools:$PATH\"' > /etc/profile.d/android.sh\n#   Android SDK\nUSER couchbase\nRUN mkdir -p /home/couchbase/jenkins/tools \\\n && cd /home/couchbase/jenkins/tools \\\n && curl -L https://dl.google.com/android/repository/tools_r25.2.3-linux.zip -o android-sdk.zip \\\n && unzip android-sdk.zip -d android-sdk \\\n && chown -R couchbase:couchbase android-sdk \\\n && chmod 755 android-sdk\nENV ANDROID_HOME=\"/home/couchbase/jenkins/tools/android-sdk\"\nENV SDK_CMD=\"$ANDROID_HOME/tools/bin/sdkmanager\"\n#   Android SDK License\nRUN mkdir $ANDROID_HOME/licenses \\\n && echo 8933bad161af4178b1185d1a37fbf41ea5269c55 > $ANDROID_HOME/licenses/android-sdk-license \\\n && echo d56f5187479451eabf01fb78af6dfcb131a6481e >> $ANDROID_HOME/licenses/android-sdk-license \\\n && echo 84831b9409646a918e30573bab4c9c91346d8abd > $ANDROID_HOME/licenses/android-sdk-preview-license\nRUN . /etc/profile \\\n && $SDK_CMD \"tools\" \"platform-tools\" \\\n && $SDK_CMD \"build-tools;27.0.3\" \"build-tools;27.0.0\" \"build-tools;26.0.2\" \"build-tools;24.0.0\" \"build-tools;25.0.3\" \"build-tools;22.0.1\" \"build-tools;23.0.3\" \"build-tools;19.1.0\" \\\n && $SDK_CMD \"platforms;android-27\" \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-22\" \"platforms;android-16\" \\\n && $SDK_CMD \"system-images;android-16;default;armeabi-v7a\" \\\n && $SDK_CMD \"system-images;android-19;default;armeabi-v7a\" \\\n && $SDK_CMD \"system-images;android-24;default;armeabi-v7a\" \\\n && $SDK_CMD \"system-images;android-25;google_apis;armeabi-v7a\"\n#   Android NDK\nUSER couchbase\nRUN cd /home/couchbase/jenkins/tools \\\n && curl -L https://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip -o android-ndk-r12b.zip \\\n && unzip -qq android-ndk-r12b.zip \\\n && chown -R couchbase:couchbase android-ndk-r12b \\\n && chmod 755 android-ndk-r12b\n#   Revert so CMD will run as root.\nUSER root\n","originalDockerfileUglifiedHash":"ee84737172b044b7f660fa2e82a0a0fa","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ffc64295cf1721550201b7470e56809795486abe.dockerfile"}