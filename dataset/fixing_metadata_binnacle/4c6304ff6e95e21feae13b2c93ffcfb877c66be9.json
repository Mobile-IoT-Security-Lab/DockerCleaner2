{"seed":2139121453,"processedDockerfileHash":"5c3748afb03ffd3419006430ec45f438","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   NOTICE: To keep consistency across this docker file, scripts/setup_linux.sh\n#   and scripts/setup_macos.sh, if there's any changes applied to this file,\n#   specially regarding the installation of dependencies, apply those same\n#   changes to the mentioned files.\nARG PARENT_IMAGE=ubuntu:16.04\nFROM $PARENT_IMAGE\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   apt dependencies\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y wget bzip2 unzip git curl cmake xorg-dev libglew-dev libosmesa6-dev patchelf libpq-dev ffmpeg libjpeg-dev swig libsdl2-dev libopenmpi-dev openmpi-bin \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Build GLFW because the Ubuntu 16.04 version is too old\n#   See https://github.com/glfw/glfw/issues/1004\nRUN apt-get purge -y -v libglfw*\nRUN git clone https://github.com/glfw/glfw.git \\\n && cd glfw \\\n && git checkout 0be4f3f75aebd9d24583ee86590a38e741db0904 \\\n && mkdir glfw-build \\\n && cd glfw-build \\\n && cmake -DBUILD_SHARED_LIBS=ON -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_BUILD_DOCS=OFF .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && cd ../../ \\\n && rm -rf glfw\n#   MuJoCo 2.0 (for dm_control)\nRUN mkdir -p /root/.mujoco \\\n && wget https://www.roboti.us/download/mujoco200_linux.zip -O mujoco.zip \\\n && unzip mujoco.zip -d $HOME/.mujoco \\\n && rm mujoco.zip \\\n && ln -s $HOME/.mujoco/mujoco200_linux $HOME/.mujoco/mujoco200\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/root/.mujoco/mujoco200/bin\"\n#   conda\nRUN wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh \\\n && bash miniconda.sh -b -p /opt/conda \\\n && rm miniconda.sh \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh\nENV PATH=\"$PATH:/opt/conda/bin\"\nRUN conda update -q -y conda\n#   conda environment\n#   Copy over just environment.yml and setup.py first, so the Docker cache doesn't\n#   expire until they change\n#\n#   Files needed to run setup.py\n#   - README.md\n#   - VERSION\n#   - scripts/garage\n#   - src/garage/__init__.py\n#   - setup.py\nCOPY README.md /root/code/garage/README.md\nCOPY VERSION /root/code/garage/VERSION\nCOPY scripts/garage /root/code/garage/scripts/garage\nCOPY src/garage/__init__.py /root/code/garage/src/garage/__init__.py\nCOPY setup.py /root/code/garage/setup.py\nCOPY environment.yml /root/code/garage/environment.yml\n#   We need a MuJoCo key to install mujoco_py\n#   In this step only the presence of the file mjkey.txt is required, so we only\n#   create an empty file\nARG MJKEY\nRUN touch /root/.mujoco/mjkey.txt \\\n && conda env create -f /root/code/garage/environment.yml \\\n && rm -rf /opt/conda/pkgs/* \\\n && rm /root/.mujoco/mjkey.txt\n#   Extras\n#   prevent pip from complaining about available upgrades\nRUN [\"/bin/bash\", \"-c\", \"source\", \"activate\", \"garage\", \"&&\", \"pip\", \"install\", \"pip==23.1\", \"--upgrade\"]\n#   Setup repo\nWORKDIR /root/code/garage\n#   Pre-build pre-commit env\nCOPY .pre-commit-config.yaml /root/code/garage\nRUN [\"/bin/bash\", \"-c\", \"source\", \"activate\", \"garage\", \"&&\", \"git\", \"init\", \"&&\", \"pre-commit\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  NOTICE: To keep consistency across this docker file, scripts/setup_linux.sh\n#  and scripts/setup_macos.sh, if there's any changes applied to this file,\n#  specially regarding the installation of dependencies, apply those same\n#  changes to the mentioned files.\nARG PARENT_IMAGE=ubuntu:16.04\nFROM $PARENT_IMAGE\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  apt dependencies\nRUN apt-get update -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y wget bzip2 unzip git curl cmake xorg-dev libglew-dev libosmesa6-dev patchelf libpq-dev ffmpeg libjpeg-dev swig libsdl2-dev libopenmpi-dev openmpi-bin \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Build GLFW because the Ubuntu 16.04 version is too old\n#  See https://github.com/glfw/glfw/issues/1004\nRUN apt-get purge -y -v libglfw*\nRUN git clone https://github.com/glfw/glfw.git \\\n && cd glfw \\\n && git checkout 0be4f3f75aebd9d24583ee86590a38e741db0904 \\\n && mkdir glfw-build \\\n && cd glfw-build \\\n && cmake -DBUILD_SHARED_LIBS=ON -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_BUILD_DOCS=OFF .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && cd ../../ \\\n && rm -rf glfw\n#  MuJoCo 2.0 (for dm_control)\nRUN mkdir -p /root/.mujoco \\\n && wget https://www.roboti.us/download/mujoco200_linux.zip -O mujoco.zip \\\n && unzip mujoco.zip -d $HOME/.mujoco \\\n && rm mujoco.zip \\\n && ln -s $HOME/.mujoco/mujoco200_linux $HOME/.mujoco/mujoco200\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/root/.mujoco/mujoco200/bin\"\n#  conda\nRUN wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh \\\n && bash miniconda.sh -b -p /opt/conda \\\n && rm miniconda.sh \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh\nENV PATH=\"$PATH:/opt/conda/bin\"\nRUN conda update -q -y conda\n#  conda environment\n#  Copy over just environment.yml and setup.py first, so the Docker cache doesn't\n#  expire until they change\n#\n#  Files needed to run setup.py\n#  - README.md\n#  - VERSION\n#  - scripts/garage\n#  - src/garage/__init__.py\n#  - setup.py\nCOPY README.md /root/code/garage/README.md\nCOPY VERSION /root/code/garage/VERSION\nCOPY scripts/garage /root/code/garage/scripts/garage\nCOPY src/garage/__init__.py /root/code/garage/src/garage/__init__.py\nCOPY setup.py /root/code/garage/setup.py\nCOPY environment.yml /root/code/garage/environment.yml\n#  We need a MuJoCo key to install mujoco_py\n#  In this step only the presence of the file mjkey.txt is required, so we only\n#  create an empty file\nARG MJKEY\nRUN touch /root/.mujoco/mjkey.txt \\\n && conda env create -f /root/code/garage/environment.yml \\\n && rm -rf /opt/conda/pkgs/* \\\n && rm /root/.mujoco/mjkey.txt\n#  Extras\n#  prevent pip from complaining about available upgrades\nRUN [\"/bin/bash\", \"-c\", \"source\", \"activate\", \"garage\", \"&&\", \"pip\", \"install\", \"pip\", \"--upgrade\"]\n#  Setup repo\nWORKDIR /root/code/garage\n#  Pre-build pre-commit env\nCOPY .pre-commit-config.yaml /root/code/garage\nRUN [\"/bin/bash\", \"-c\", \"source\", \"activate\", \"garage\", \"&&\", \"git\", \"init\", \"&&\", \"pre-commit\"]\n","injectedSmells":[],"originalDockerfileHash":"c41031b4f716072aa3cf21877f80672d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   NOTICE: To keep consistency across this docker file, scripts/setup_linux.sh\n#   and scripts/setup_macos.sh, if there's any changes applied to this file,\n#   specially regarding the installation of dependencies, apply those same\n#   changes to the mentioned files.\nARG PARENT_IMAGE=ubuntu:16.04\nFROM $PARENT_IMAGE\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   apt dependencies\nRUN apt-get update -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y wget bzip2 unzip git curl cmake xorg-dev libglew-dev libosmesa6-dev patchelf libpq-dev ffmpeg libjpeg-dev swig libsdl2-dev libopenmpi-dev openmpi-bin \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Build GLFW because the Ubuntu 16.04 version is too old\n#   See https://github.com/glfw/glfw/issues/1004\nRUN apt-get purge -y -v libglfw*\nRUN git clone https://github.com/glfw/glfw.git \\\n && cd glfw \\\n && git checkout 0be4f3f75aebd9d24583ee86590a38e741db0904 \\\n && mkdir glfw-build \\\n && cd glfw-build \\\n && cmake -DBUILD_SHARED_LIBS=ON -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_BUILD_DOCS=OFF .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && cd ../../ \\\n && rm -rf glfw\n#   MuJoCo 2.0 (for dm_control)\nRUN mkdir -p /root/.mujoco \\\n && wget https://www.roboti.us/download/mujoco200_linux.zip -O mujoco.zip \\\n && unzip mujoco.zip -d $HOME/.mujoco \\\n && rm mujoco.zip \\\n && ln -s $HOME/.mujoco/mujoco200_linux $HOME/.mujoco/mujoco200\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/root/.mujoco/mujoco200/bin\"\n#   conda\nRUN wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh \\\n && bash miniconda.sh -b -p /opt/conda \\\n && rm miniconda.sh \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh\nENV PATH=\"$PATH:/opt/conda/bin\"\nRUN conda update -q -y conda\n#   conda environment\n#   Copy over just environment.yml and setup.py first, so the Docker cache doesn't\n#   expire until they change\n#\n#   Files needed to run setup.py\n#   - README.md\n#   - VERSION\n#   - scripts/garage\n#   - src/garage/__init__.py\n#   - setup.py\nCOPY README.md /root/code/garage/README.md\nCOPY VERSION /root/code/garage/VERSION\nCOPY scripts/garage /root/code/garage/scripts/garage\nCOPY src/garage/__init__.py /root/code/garage/src/garage/__init__.py\nCOPY setup.py /root/code/garage/setup.py\nCOPY environment.yml /root/code/garage/environment.yml\n#   We need a MuJoCo key to install mujoco_py\n#   In this step only the presence of the file mjkey.txt is required, so we only\n#   create an empty file\nARG MJKEY\nRUN touch /root/.mujoco/mjkey.txt \\\n && conda env create -f /root/code/garage/environment.yml \\\n && rm -rf /opt/conda/pkgs/* \\\n && rm /root/.mujoco/mjkey.txt\n#   Extras\n#   prevent pip from complaining about available upgrades\nRUN [\"/bin/bash\", \"-c\", \"source\", \"activate\", \"garage\", \"&&\", \"pip\", \"install\", \"pip\", \"--upgrade\"]\n#   Setup repo\nWORKDIR /root/code/garage\n#   Pre-build pre-commit env\nCOPY .pre-commit-config.yaml /root/code/garage\nRUN [\"/bin/bash\", \"-c\", \"source\", \"activate\", \"garage\", \"&&\", \"git\", \"init\", \"&&\", \"pre-commit\"]\n","originalDockerfileUglifiedHash":"8c9899f673e5486e518d20f3d9817b7d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4c6304ff6e95e21feae13b2c93ffcfb877c66be9.dockerfile"}