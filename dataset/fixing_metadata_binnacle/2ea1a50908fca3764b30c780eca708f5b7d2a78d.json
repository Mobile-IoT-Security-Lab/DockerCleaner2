{"seed":59514575,"processedDockerfileHash":"46320f890f0a264447bea94725da72a0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##############################################################################\n#   Copyright 2018 Dell Technologies, Inc All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#  ##############################################################################\n#   Docker image for building EdgeX Foundry Config Seed\nFROM golang:1.12-alpine AS build-env\n#   environment variables\nENV GO111MODULE=\"on\"\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:$PATH\"\n#   set the working directory\nWORKDIR $GOPATH/src/github.com/edgexfoundry/edgex-go\nRUN apk update \\\n && apk add make=4.2.1-r2 git=2.24.4-r0 python3=3.8.10-r0 jq=1.6-r0\n#   install remarshal for processing config files in proper way, i.e. turn toml\n#   into json, use jq to set the correct keys, then turn back into toml in the \n#   files\nRUN python3 -m pip install remarshal\n#   copy go source files\nCOPY go.mod .\n#  COPY go.sum .\nRUN go mod download\nCOPY . .\n#   create an identical dir structure under /cmd-redis for using redis\n#   instead of mongodb\nCOPY ./cmd ./cmd-redis\n#   for svcs supporting redis directly, change the following keys before copying\n#   Databases.Primary.Type = redisdb \n#   Databases.Primary.Port = 6379\n#   Databases.Primary.Host = edgex-redis\nRUN for svc in core-data core-metadata export-client support-notifications support-scheduler; do configFile=./cmd-redis/$svc/res/docker/configuration.toml \\\n && toml2json --preserve-key-order \"$configFile\" | jq -r '.Databases.Primary.Type = \"redisdb\" | .Databases.Primary.Port = 6379 | .Databases.Primary.Host = \"edgex-redis\"' | json2toml --preserve-key-order > \"$configFile.tmp\" \\\n && mv \"$configFile.tmp\" \"$configFile\" ; done\n#   support-logging needs the Writable.Persistence key set to file to be usable with Redis\nRUN configFile=./cmd-redis/support-logging/res/docker/configuration.toml \\\n && toml2json --preserve-key-order \"$configFile\" | jq -r '.Writable.Persistence = \"file\"' | json2toml --preserve-key-order > \"$configFile.tmp\" \\\n && mv \"$configFile.tmp\" \"$configFile\"\n#   cleanup build only utils\nRUN python3 -m pip uninstall -y remarshal \\\n && apk del python3 jq\n#   build\nRUN make cmd/config-seed/config-seed\nFROM scratch\nLABEL license=\"SPDX-License-Identifier: Apache-2.0\" \\\n      copyright=\"Copyright (c) 2017: Samsung\"\n#   set the working directory\nWORKDIR /edgex/cmd/config-seed\n#   copy files\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/Attribution.txt .\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/config-seed .\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/res ./res\n#   copy all the default (i.e. mongodb) configuration.toml files into /edgex/cmd\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-command/res /edgex/cmd/core-command/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-data/res /edgex/cmd/core-data/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-metadata/res /edgex/cmd/core-metadata/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/export-client/res /edgex/cmd/export-client/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/export-distro/res /edgex/cmd/export-distro/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-logging/res /edgex/cmd/support-logging/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-notifications/res /edgex/cmd/support-notifications/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-scheduler/res /edgex/cmd/support-scheduler/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/sys-mgmt-agent/res /edgex/cmd/sys-mgmt-agent/res\n#   copy all the redis configuration.toml into /edgex/cmd-redis\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-command/res /edgex/cmd-redis/core-command/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-data/res /edgex/cmd-redis/core-data/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-metadata/res /edgex/cmd-redis/core-metadata/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/export-client/res /edgex/cmd-redis/export-client/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/export-distro/res /edgex/cmd-redis/export-distro/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-logging/res /edgex/cmd-redis/support-logging/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-notifications/res /edgex/cmd-redis/support-notifications/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-scheduler/res /edgex/cmd-redis/support-scheduler/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/sys-mgmt-agent/res /edgex/cmd-redis/sys-mgmt-agent/res\nENTRYPOINT [\"/edgex/cmd/config-seed/config-seed\"]\nCMD [\"--profile=docker\", \"--cmd=/edgex/cmd\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##############################################################################\n#  Copyright 2018 Dell Technologies, Inc All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\n# ##############################################################################\n#  Docker image for building EdgeX Foundry Config Seed\nFROM golang:1.12-alpine AS build-env\n#  environment variables\nENV GO111MODULE=\"on\"\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:$PATH\"\n#  set the working directory\nWORKDIR $GOPATH/src/github.com/edgexfoundry/edgex-go\nRUN apk update \\\n && apk add make git python3 jq\n#  install remarshal for processing config files in proper way, i.e. turn toml\n#  into json, use jq to set the correct keys, then turn back into toml in the \n#  files\nRUN python3 -m pip install remarshal\n#  copy go source files\nCOPY go.mod .\n# COPY go.sum .\nRUN go mod download\nCOPY . .\n#  create an identical dir structure under /cmd-redis for using redis\n#  instead of mongodb\nCOPY ./cmd ./cmd-redis\n#  for svcs supporting redis directly, change the following keys before copying\n#  Databases.Primary.Type = redisdb \n#  Databases.Primary.Port = 6379\n#  Databases.Primary.Host = edgex-redis\nRUN for svc in core-data core-metadata export-client support-notifications support-scheduler; do configFile=./cmd-redis/$svc/res/docker/configuration.toml \\\n && toml2json --preserve-key-order \"$configFile\" | jq -r '.Databases.Primary.Type = \"redisdb\" | .Databases.Primary.Port = 6379 | .Databases.Primary.Host = \"edgex-redis\"' | json2toml --preserve-key-order > \"$configFile.tmp\" \\\n && mv \"$configFile.tmp\" \"$configFile\" ; done\n#  support-logging needs the Writable.Persistence key set to file to be usable with Redis\nRUN configFile=./cmd-redis/support-logging/res/docker/configuration.toml \\\n && toml2json --preserve-key-order \"$configFile\" | jq -r '.Writable.Persistence = \"file\"' | json2toml --preserve-key-order > \"$configFile.tmp\" \\\n && mv \"$configFile.tmp\" \"$configFile\"\n#  cleanup build only utils\nRUN python3 -m pip uninstall -y remarshal \\\n && apk del python3 jq\n#  build\nRUN make cmd/config-seed/config-seed\nFROM scratch\nLABEL license=\"SPDX-License-Identifier: Apache-2.0\" \\\n      copyright=\"Copyright (c) 2017: Samsung\"\n#  set the working directory\nWORKDIR /edgex/cmd/config-seed\n#  copy files\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/Attribution.txt .\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/config-seed .\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/res ./res\n#  copy all the default (i.e. mongodb) configuration.toml files into /edgex/cmd\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-command/res /edgex/cmd/core-command/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-data/res /edgex/cmd/core-data/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-metadata/res /edgex/cmd/core-metadata/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/export-client/res /edgex/cmd/export-client/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/export-distro/res /edgex/cmd/export-distro/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-logging/res /edgex/cmd/support-logging/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-notifications/res /edgex/cmd/support-notifications/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-scheduler/res /edgex/cmd/support-scheduler/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/sys-mgmt-agent/res /edgex/cmd/sys-mgmt-agent/res\n#  copy all the redis configuration.toml into /edgex/cmd-redis\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-command/res /edgex/cmd-redis/core-command/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-data/res /edgex/cmd-redis/core-data/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-metadata/res /edgex/cmd-redis/core-metadata/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/export-client/res /edgex/cmd-redis/export-client/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/export-distro/res /edgex/cmd-redis/export-distro/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-logging/res /edgex/cmd-redis/support-logging/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-notifications/res /edgex/cmd-redis/support-notifications/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-scheduler/res /edgex/cmd-redis/support-scheduler/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/sys-mgmt-agent/res /edgex/cmd-redis/sys-mgmt-agent/res\nENTRYPOINT [\"/edgex/cmd/config-seed/config-seed\"]\nCMD [\"--profile=docker\", \"--cmd=/edgex/cmd\"]\n","injectedSmells":[],"originalDockerfileHash":"ac391b363b36bffd332c2376038c1ecf","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##############################################################################\n#   Copyright 2018 Dell Technologies, Inc All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#  ##############################################################################\n#   Docker image for building EdgeX Foundry Config Seed\nFROM golang:1.12-alpine AS build-env\n#   environment variables\nENV GO111MODULE=\"on\"\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:$PATH\"\n#   set the working directory\nWORKDIR $GOPATH/src/github.com/edgexfoundry/edgex-go\nRUN apk update \\\n && apk add make git python3 jq\n#   install remarshal for processing config files in proper way, i.e. turn toml\n#   into json, use jq to set the correct keys, then turn back into toml in the \n#   files\nRUN python3 -m pip install remarshal\n#   copy go source files\nCOPY go.mod .\n#  COPY go.sum .\nRUN go mod download\nCOPY . .\n#   create an identical dir structure under /cmd-redis for using redis\n#   instead of mongodb\nCOPY ./cmd ./cmd-redis\n#   for svcs supporting redis directly, change the following keys before copying\n#   Databases.Primary.Type = redisdb \n#   Databases.Primary.Port = 6379\n#   Databases.Primary.Host = edgex-redis\nRUN for svc in core-data core-metadata export-client support-notifications support-scheduler; do configFile=./cmd-redis/$svc/res/docker/configuration.toml \\\n && toml2json --preserve-key-order \"$configFile\" | jq -r '.Databases.Primary.Type = \"redisdb\" | .Databases.Primary.Port = 6379 | .Databases.Primary.Host = \"edgex-redis\"' | json2toml --preserve-key-order > \"$configFile.tmp\" \\\n && mv \"$configFile.tmp\" \"$configFile\" ; done\n#   support-logging needs the Writable.Persistence key set to file to be usable with Redis\nRUN configFile=./cmd-redis/support-logging/res/docker/configuration.toml \\\n && toml2json --preserve-key-order \"$configFile\" | jq -r '.Writable.Persistence = \"file\"' | json2toml --preserve-key-order > \"$configFile.tmp\" \\\n && mv \"$configFile.tmp\" \"$configFile\"\n#   cleanup build only utils\nRUN python3 -m pip uninstall -y remarshal \\\n && apk del python3 jq\n#   build\nRUN make cmd/config-seed/config-seed\nFROM scratch\nLABEL license=\"SPDX-License-Identifier: Apache-2.0\" \\\n      copyright=\"Copyright (c) 2017: Samsung\"\n#   set the working directory\nWORKDIR /edgex/cmd/config-seed\n#   copy files\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/Attribution.txt .\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/config-seed .\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/res ./res\n#   copy all the default (i.e. mongodb) configuration.toml files into /edgex/cmd\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-command/res /edgex/cmd/core-command/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-data/res /edgex/cmd/core-data/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-metadata/res /edgex/cmd/core-metadata/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/export-client/res /edgex/cmd/export-client/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/export-distro/res /edgex/cmd/export-distro/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-logging/res /edgex/cmd/support-logging/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-notifications/res /edgex/cmd/support-notifications/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-scheduler/res /edgex/cmd/support-scheduler/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/sys-mgmt-agent/res /edgex/cmd/sys-mgmt-agent/res\n#   copy all the redis configuration.toml into /edgex/cmd-redis\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-command/res /edgex/cmd-redis/core-command/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-data/res /edgex/cmd-redis/core-data/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-metadata/res /edgex/cmd-redis/core-metadata/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/export-client/res /edgex/cmd-redis/export-client/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/export-distro/res /edgex/cmd-redis/export-distro/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-logging/res /edgex/cmd-redis/support-logging/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-notifications/res /edgex/cmd-redis/support-notifications/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-scheduler/res /edgex/cmd-redis/support-scheduler/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/sys-mgmt-agent/res /edgex/cmd-redis/sys-mgmt-agent/res\nENTRYPOINT [\"/edgex/cmd/config-seed/config-seed\"]\nCMD [\"--profile=docker\", \"--cmd=/edgex/cmd\"]\n","originalDockerfileUglifiedHash":"d745ce2281a4875b530537607b885313","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2ea1a50908fca3764b30c780eca708f5b7d2a78d.dockerfile"}