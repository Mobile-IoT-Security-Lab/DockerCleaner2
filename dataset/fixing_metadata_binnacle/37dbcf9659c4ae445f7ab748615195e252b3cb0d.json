{"seed":2278726616,"processedDockerfileHash":"c26407b5c8ab4aa79e176eb8991ce244","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Build target lablup/commom-tensorflow:ff-19.06-py36\n#   import python-binary\nFROM lablup/kernel-base:python3.6 AS python-binary\nFROM ubuntu:16.04\nLABEL maintainer=\"Mario Cho <m.cho@lablup.com>\"\n#   The TensorFlow version\nENV TF_VERSION=\"1.14\"\nENV BAZEL_VERSION=\"0.24.1\"\nENV PYTHON_BIN_PATH=\"/usr/local/bin/python\"\nENV PYTHON_LIB_PATH=\"/usr/local/lib/python3.6/site-packages \"\nENV GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc \"\nENV CC_OPT_FLAGS=\"\\\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\\\" \"\nENV TF_NEED_JEMALLOC=\"1\"\nENV TF_NEED_GCP=\"1\"\nENV TF_NEED_HDFS=\"1\"\nENV TF_ENABLE_XLA=\"1\"\nENV TF_NEED_VERBS=\"0\"\nENV TF_NEED_MPI=\"0\"\nENV TF_NEED_GDR=\"1\"\nENV TF_NEED_S3=\"1 \"\nENV TF_NEED_KAFKA=\"0 \"\nENV TF_NEED_OPENCL=\"0\"\nENV TF_NEED_OPENCL_SYCL=\"0\"\nENV TF_NEED_CUDA=\"0\"\nENV TF_CUDA_CLANG=\"0\"\nENV TF_DOWNLOAD_CLANG=\"0\"\nENV TF_NEED_TENSORRT=\"0\"\nENV TF_SET_ANDROID_WORKSPACE=\"0\"\n#   Install system package dependencies\n#   NOTE: running bazel requires JDK, not JRE!\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk-headless -y \\\n && apt-get install --no-install-recommends gcc g++ make libssl-dev libfreetype6-dev libhdf5-serial-dev libzmq3-dev pkg-config rsync software-properties-common zip unzip zlib1g-dev wget imagemagick graphviz cmake curl wget rsync sed swig git-core libcurl3-dev zip -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=python-binary /python.tar.gz /\nRUN cd / ; tar xzpf python.tar.gz ; rm python.tar.gz ; ldconfig\n#   Prepare for building TensorFlow wheel\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3 \\\n && python3 -m pip install --no-cache-dir -U setuptools pip \\\n && python3 -m pip install --no-cache-dir wheel numpy scipy sklearn pandas keras_applications keras_preprocessing matplotlib future \\\n && rm -f /tmp/*.whl\n#   Check Python is runnable.\nRUN python3 -c \"import sys; print(sys.prefix); print(sys.version_info)\"\n#   Running bazel inside a `docker build` command causes trouble, cf:\n#     https://github.com/bazelbuild/bazel/issues/134\n#   The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >> /etc/bazel.bazelrc\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" >> /etc/bazel.bazelrc\nWORKDIR /\nRUN mkdir /bazel \\\n && cd /bazel \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \\\n && chmod +x bazel-*.sh \\\n && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && cd / \\\n && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && bazel version \\\n && python3 -c \"import sys; print(sys.prefix); print(sys.version_info)\" \\\n && python3 -c \"import numpy; numpy.show_config()\" \\\n && python3 -c \"import scipy; scipy.show_config()\"\nRUN : build TensorFlow pip package \\\n && cd /tmp \\\n && git clone --branch=r${TF_VERSION} --depth=1 https://github.com/tensorflow/tensorflow.git tensorflow-${TF_VERSION} \\\n && ldconfig\nRUN cd /tmp/tensorflow-${TF_VERSION} \\\n && CC_OPT_FLAGS=\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" tensorflow/tools/ci_build/builds/configured CPU bazel build -c opt --copt=-mavx --copt=-mavx2 --config=monolithic --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package \\\n && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && rm -fr /root/.cache\nRUN ls -l /tmp/tensorflow_pkg\n#   vim: ft=dockerfile sts=4 sw=4 et tw=0\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Build target lablup/commom-tensorflow:ff-19.06-py36\n#  import python-binary\nFROM lablup/kernel-base:python3.6 AS python-binary\nFROM ubuntu:16.04\nLABEL maintainer=\"Mario Cho <m.cho@lablup.com>\"\n#  The TensorFlow version\nENV TF_VERSION=\"1.14\"\nENV BAZEL_VERSION=\"0.24.1\"\nENV PYTHON_BIN_PATH=\"/usr/local/bin/python\"\nENV PYTHON_LIB_PATH=\"/usr/local/lib/python3.6/site-packages \"\nENV GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc \"\nENV CC_OPT_FLAGS=\"\\\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\\\" \"\nENV TF_NEED_JEMALLOC=\"1\"\nENV TF_NEED_GCP=\"1\"\nENV TF_NEED_HDFS=\"1\"\nENV TF_ENABLE_XLA=\"1\"\nENV TF_NEED_VERBS=\"0\"\nENV TF_NEED_MPI=\"0\"\nENV TF_NEED_GDR=\"1\"\nENV TF_NEED_S3=\"1 \"\nENV TF_NEED_KAFKA=\"0 \"\nENV TF_NEED_OPENCL=\"0\"\nENV TF_NEED_OPENCL_SYCL=\"0\"\nENV TF_NEED_CUDA=\"0\"\nENV TF_CUDA_CLANG=\"0\"\nENV TF_DOWNLOAD_CLANG=\"0\"\nENV TF_NEED_TENSORRT=\"0\"\nENV TF_SET_ANDROID_WORKSPACE=\"0\"\n#  Install system package dependencies\n#  NOTE: running bazel requires JDK, not JRE!\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk-headless -y \\\n && apt-get install --no-install-recommends gcc g++ make libssl-dev libfreetype6-dev libhdf5-serial-dev libzmq3-dev pkg-config rsync software-properties-common zip unzip zlib1g-dev wget imagemagick graphviz cmake curl wget rsync sed swig git-core libcurl3-dev zip -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=python-binary /python.tar.gz /\nRUN cd / ; tar xzpf python.tar.gz ; rm python.tar.gz ; ldconfig\n#  Prepare for building TensorFlow wheel\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3 \\\n && python3 -m pip install --no-cache-dir -U setuptools pip \\\n && python3 -m pip install --no-cache-dir wheel numpy scipy sklearn pandas keras_applications keras_preprocessing matplotlib future \\\n && rm -f /tmp/*.whl\n#  Check Python is runnable.\nRUN python3 -c \"import sys; print(sys.prefix); print(sys.version_info)\"\n#  Running bazel inside a `docker build` command causes trouble, cf:\n#    https://github.com/bazelbuild/bazel/issues/134\n#  The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >> /etc/bazel.bazelrc\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" >> /etc/bazel.bazelrc\nWORKDIR /\nRUN mkdir /bazel \\\n && cd /bazel \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \\\n && chmod +x bazel-*.sh \\\n && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && cd / \\\n && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && bazel version \\\n && python3 -c \"import sys; print(sys.prefix); print(sys.version_info)\" \\\n && python3 -c \"import numpy; numpy.show_config()\" \\\n && python3 -c \"import scipy; scipy.show_config()\"\nRUN : build TensorFlow pip package \\\n && cd /tmp \\\n && git clone --branch=r${TF_VERSION} --depth=1 https://github.com/tensorflow/tensorflow.git tensorflow-${TF_VERSION} \\\n && ldconfig\nRUN cd /tmp/tensorflow-${TF_VERSION} \\\n && CC_OPT_FLAGS=\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" tensorflow/tools/ci_build/builds/configured CPU bazel build -c opt --copt=-mavx --copt=-mavx2 --config=monolithic --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package \\\n && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && rm -fr /root/.cache\nRUN ls -l /tmp/tensorflow_pkg\n#  vim: ft=dockerfile sts=4 sw=4 et tw=0\n","injectedSmells":[],"originalDockerfileHash":"38a949df982572ab16d1996a87d29bd8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build target lablup/commom-tensorflow:ff-19.06-py36\n#   import python-binary\nFROM lablup/kernel-base:python3.6 AS python-binary\nFROM ubuntu:16.04\nLABEL maintainer=\"Mario Cho <m.cho@lablup.com>\"\n#   The TensorFlow version\nENV TF_VERSION=\"1.14\"\nENV BAZEL_VERSION=\"0.24.1\"\nENV PYTHON_BIN_PATH=\"/usr/local/bin/python\"\nENV PYTHON_LIB_PATH=\"/usr/local/lib/python3.6/site-packages \"\nENV GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc \"\nENV CC_OPT_FLAGS=\"\\\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\\\" \"\nENV TF_NEED_JEMALLOC=\"1\"\nENV TF_NEED_GCP=\"1\"\nENV TF_NEED_HDFS=\"1\"\nENV TF_ENABLE_XLA=\"1\"\nENV TF_NEED_VERBS=\"0\"\nENV TF_NEED_MPI=\"0\"\nENV TF_NEED_GDR=\"1\"\nENV TF_NEED_S3=\"1 \"\nENV TF_NEED_KAFKA=\"0 \"\nENV TF_NEED_OPENCL=\"0\"\nENV TF_NEED_OPENCL_SYCL=\"0\"\nENV TF_NEED_CUDA=\"0\"\nENV TF_CUDA_CLANG=\"0\"\nENV TF_DOWNLOAD_CLANG=\"0\"\nENV TF_NEED_TENSORRT=\"0\"\nENV TF_SET_ANDROID_WORKSPACE=\"0\"\n#   Install system package dependencies\n#   NOTE: running bazel requires JDK, not JRE!\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk-headless -y \\\n && apt-get install --no-install-recommends gcc g++ make libssl-dev libfreetype6-dev libhdf5-serial-dev libzmq3-dev pkg-config rsync software-properties-common zip unzip zlib1g-dev wget imagemagick graphviz cmake curl wget rsync sed swig git-core libcurl3-dev zip -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=python-binary /python.tar.gz /\nRUN cd / ; tar xzpf python.tar.gz ; rm python.tar.gz ; ldconfig\n#   Prepare for building TensorFlow wheel\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3 \\\n && python3 -m pip install --no-cache-dir -U setuptools pip \\\n && python3 -m pip install --no-cache-dir wheel numpy scipy sklearn pandas keras_applications keras_preprocessing matplotlib future \\\n && rm -f /tmp/*.whl\n#   Check Python is runnable.\nRUN python3 -c \"import sys; print(sys.prefix); print(sys.version_info)\"\n#   Running bazel inside a `docker build` command causes trouble, cf:\n#     https://github.com/bazelbuild/bazel/issues/134\n#   The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >> /etc/bazel.bazelrc\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" >> /etc/bazel.bazelrc\nWORKDIR /\nRUN mkdir /bazel \\\n && cd /bazel \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \\\n && chmod +x bazel-*.sh \\\n && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && cd / \\\n && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && bazel version \\\n && python3 -c \"import sys; print(sys.prefix); print(sys.version_info)\" \\\n && python3 -c \"import numpy; numpy.show_config()\" \\\n && python3 -c \"import scipy; scipy.show_config()\"\nRUN : build TensorFlow pip package \\\n && cd /tmp \\\n && git clone --branch=r${TF_VERSION} --depth=1 https://github.com/tensorflow/tensorflow.git tensorflow-${TF_VERSION} \\\n && ldconfig\nRUN cd /tmp/tensorflow-${TF_VERSION} \\\n && CC_OPT_FLAGS=\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" tensorflow/tools/ci_build/builds/configured CPU bazel build -c opt --copt=-mavx --copt=-mavx2 --config=monolithic --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package \\\n && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && rm -fr /root/.cache\nRUN ls -l /tmp/tensorflow_pkg\n#   vim: ft=dockerfile sts=4 sw=4 et tw=0\n","originalDockerfileUglifiedHash":"ee8ac73b22ef45a826597eaf9d7d3d8f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/37dbcf9659c4ae445f7ab748615195e252b3cb0d.dockerfile"}