{"seed":2849568828,"processedDockerfileHash":"cb3d954646b4505616459723f5318eb9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM alpine:3.4\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkgconf  re2c\"\nRUN apk add ca-certificates=20161130-r0 curl=7.60.0-r1 tar=1.29-r1 xz=5.2.2-r1 --no-cache --virtual .persistent-deps\n#   ensure www-data user exists\nRUN set -x \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -D -S -G www-data www-data\n#   82 is the standard uid/gid for \"www-data\" in Alpine\n#   http://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.3.2\n#   http://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.3.2\n#   http://git.alpinelinux.org/cgit/aports/tree/main/nginx-initscripts/nginx-initscripts.pre-install?h=v3.3.2\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\n#  #<autogenerated>##\n#  #</autogenerated>##\nENV GPG_KEYS=\"1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763\"\nENV PHP_VERSION=\"7.0.11\"\nENV PHP_FILENAME=\"php-7.0.11.tar.xz\"\nENV PHP_SHA256=\"d4cccea8da1d27c11b89386f8b8e95692ad3356610d571253d00ca67d524c735\"\nRUN set -xe \\\n && apk add gnupg=2.1.12-r1 --no-cache --virtual .fetch-deps \\\n && mkdir -p /usr/src \\\n && cd /usr/src \\\n && curl -fSL \"https://secure.php.net/get/$PHP_FILENAME/from/this/mirror\" -o php.tar.xz \\\n && echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - \\\n && curl -fSL \"https://secure.php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && gpg --batch --verify php.tar.xz.asc php.tar.xz \\\n && rm -r \"$GNUPGHOME\" \\\n && apk del .fetch-deps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && apk add curl-dev=7.60.0-r1 libedit-dev=20150325.3.1-r3 libxml2-dev=2.9.5-r0 openssl-dev=1.0.2n-r0 sqlite-dev=3.13.0-r2 $PHPIZE_DEPS --no-cache --virtual .build-deps \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j\"$( getconf _NPROCESSORS_ONLN ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --no-cache --virtual .php-rundeps \\\n && apk del .build-deps\nCOPY docker-php-ext-* /usr/local/bin/\n#  #<autogenerated>##\nCMD [\"php\", \"-a\"]\n#  #</autogenerated>##\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM alpine:3.4\n#  persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkgconf  re2c\"\nRUN apk add --no-cache --virtual .persistent-deps ca-certificates curl tar xz\n#  ensure www-data user exists\nRUN set -x \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -D -S -G www-data www-data\n#  82 is the standard uid/gid for \"www-data\" in Alpine\n#  http://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.3.2\n#  http://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.3.2\n#  http://git.alpinelinux.org/cgit/aports/tree/main/nginx-initscripts/nginx-initscripts.pre-install?h=v3.3.2\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\n# #<autogenerated>##\n# #</autogenerated>##\nENV GPG_KEYS=\"1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763\"\nENV PHP_VERSION=\"7.0.11\"\nENV PHP_FILENAME=\"php-7.0.11.tar.xz\"\nENV PHP_SHA256=\"d4cccea8da1d27c11b89386f8b8e95692ad3356610d571253d00ca67d524c735\"\nRUN set -xe \\\n && apk add --no-cache --virtual .fetch-deps gnupg \\\n && mkdir -p /usr/src \\\n && cd /usr/src \\\n && curl -fSL \"https://secure.php.net/get/$PHP_FILENAME/from/this/mirror\" -o php.tar.xz \\\n && echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - \\\n && curl -fSL \"https://secure.php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && gpg --batch --verify php.tar.xz.asc php.tar.xz \\\n && rm -r \"$GNUPGHOME\" \\\n && apk del .fetch-deps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS curl-dev libedit-dev libxml2-dev openssl-dev sqlite-dev \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j\"$( getconf _NPROCESSORS_ONLN ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .php-rundeps $runDeps \\\n && apk del .build-deps\nCOPY docker-php-ext-* /usr/local/bin/\n# #<autogenerated>##\nCMD [\"php\", \"-a\"]\n# #</autogenerated>##\n","injectedSmells":[],"originalDockerfileHash":"57c07ccec71ef50770b81e80a9d8f83c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM alpine:3.4\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkgconf  re2c\"\nRUN apk add --no-cache --virtual .persistent-deps ca-certificates curl tar xz\n#   ensure www-data user exists\nRUN set -x \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -D -S -G www-data www-data\n#   82 is the standard uid/gid for \"www-data\" in Alpine\n#   http://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.3.2\n#   http://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.3.2\n#   http://git.alpinelinux.org/cgit/aports/tree/main/nginx-initscripts/nginx-initscripts.pre-install?h=v3.3.2\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\n#  #<autogenerated>##\n#  #</autogenerated>##\nENV GPG_KEYS=\"1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763\"\nENV PHP_VERSION=\"7.0.11\"\nENV PHP_FILENAME=\"php-7.0.11.tar.xz\"\nENV PHP_SHA256=\"d4cccea8da1d27c11b89386f8b8e95692ad3356610d571253d00ca67d524c735\"\nRUN set -xe \\\n && apk add --no-cache --virtual .fetch-deps gnupg \\\n && mkdir -p /usr/src \\\n && cd /usr/src \\\n && curl -fSL \"https://secure.php.net/get/$PHP_FILENAME/from/this/mirror\" -o php.tar.xz \\\n && echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - \\\n && curl -fSL \"https://secure.php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && gpg --batch --verify php.tar.xz.asc php.tar.xz \\\n && rm -r \"$GNUPGHOME\" \\\n && apk del .fetch-deps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS curl-dev libedit-dev libxml2-dev openssl-dev sqlite-dev \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j\"$( getconf _NPROCESSORS_ONLN ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .php-rundeps $runDeps \\\n && apk del .build-deps\nCOPY docker-php-ext-* /usr/local/bin/\n#  #<autogenerated>##\nCMD [\"php\", \"-a\"]\n#  #</autogenerated>##\n","originalDockerfileUglifiedHash":"fb5372dd1623541a26630090b6f141b5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/de467593faffa72a6ab978e068e790c8072bd461.dockerfile"}