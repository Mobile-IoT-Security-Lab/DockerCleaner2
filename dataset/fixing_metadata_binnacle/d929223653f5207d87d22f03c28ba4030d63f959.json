{"seed":1350085477,"processedDockerfileHash":"0a180e7a862056ebbf1de9bfda4442a9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Docker container for Cuckoo Sandbox\n#\nFROM ubuntu:14.04\n#   Container needs to know that it has no TTY\nENV DEBIAN_FRONTEND=\"noninteractive\"\nWORKDIR /tmp\n#  ############################ PACKAGE INSTALLATION ################################\nCOPY packages.txt /tmp/\nCOPY requirements.txt /tmp/\nCOPY libs/inetsim_1.2.6-1_all.deb /tmp/inetsim_1.2.6-1_all.deb\n#   Also change policy-rc.d to fix errors:\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\nCOPY libs/volatility-2.5.tar.gz /tmp/\n#   cgroup-lite fixup compensates for a ubuntu:trusty-docker:cgroup broken package\nRUN apt-get update \\\n && touch /etc/init/cgroup-lite.conf \\\n && ln /etc/init/cgroup-lite.conf /etc/init.d/cgroup-lite \\\n && yes | apt-get install --no-install-recommends cgroup-lite=1.9 -y --force-yes \\\n && xargs apt-get install -y --force-yes --no-install-recommends < /tmp/packages.txt \\\n && dpkg -i /tmp/inetsim_1.2.6-1_all.deb \\\n && rm /tmp/inetsim_1.2.6-1_all.deb \\\n && xargs -n 1 pip install --upgrade < /tmp/requirements.txt \\\n && pip install /tmp/volatility-2.5.tar.gz \\\n && apt-get remove -y --force-yes python-dev libffi-dev libssl-dev libjpeg-dev zlib1g-dev libxml2-dev libxslt1-dev libc6-dev libpython2.7 vim-tiny vim-common gcc cpp g++ make \\\n && apt-get autoremove -y --force-yes \\\n && apt-get clean \\\n && rm /tmp/requirements.txt /tmp/packages.txt /tmp/volatility-2.5.tar.gz\n#   tcpdump workaround\nRUN mv /usr/sbin/tcpdump /usr/bin/tcpdump \\\n && ln -s /usr/bin/tcpdump /usr/sbin/tcpdump \\\n && chmod +s /usr/sbin/tcpdump\n#   Fix policykit-1\nRUN mkdir -p /var/run/dbus || /bin/true\nRUN sed -ie 's/auth_admin_keep/yes/' /usr/share/polkit-1/actions/org.libvirt.unix.policy\n#  RUN cd /tmp/docker/build\n#   Make sure deps are available\nRUN echo \"/usr/local/lib\" >> /etc/ld.so.conf\nRUN ldconfig\n#   Create sandbox user\n#   RUN addgroup libvirtd || /bin/true\nRUN mkdir /opt/sandbox \\\n && useradd sandbox \\\n && mkdir /home/sandbox \\\n && usermod -a -G libvirtd sandbox \\\n && usermod -G sandbox www-data \\\n && chown -R sandbox:sandbox /home/sandbox \\\n && chown -R sandbox:sandbox /opt/sandbox\n#   Setup KVM user\n#   RUN groupadd kvm || /bin/true\nRUN usermod -a -G libvirtd libvirt-qemu \\\n && usermod -a -G kvm libvirt-qemu\n#   Setup libvirt\nCOPY conf/libvirtd.conf /etc/libvirt/libvirtd.conf\nRUN echo \"\" >> /home/sandbox/.bashrc \\\n && echo \"export LIBVIRT_DEFAULT_URI=qemu:///system\" >> /home/sandbox/.bashrc\n#   Seems like there are issues running things in the container from /usr/sbin\n#   Moving libvirt and tcpdump for now..\nRUN mv /usr/sbin/libvirtd /usr/bin/libvirtd \\\n && ln -s /usr/bin/libvirtd /usr/sbin/libvirtd\n#   Disable slow ntpdate updating\nRUN rm /etc/network/if-up.d/ntpdate\n#  ################################## CONFIGURATION ######################################\nCOPY startup.sh /home/sandbox/startup.sh\nCOPY bootstrap.py /home/sandbox/bootstrap.py\n#   Make sure they're executable\nRUN chown -R sandbox: /home/sandbox \\\n && chmod +x /home/sandbox/startup.sh /home/sandbox/bootstrap.py\n#   Run this portion of the build as the sandbox user\nUSER sandbox\nWORKDIR /home/sandbox/\n#   Copy over configuration files\nRUN mkdir /home/sandbox/conf\nCOPY conf/* /home/sandbox/conf/\nRUN cuckoo \\\n && cuckoo community \\\n && mkdir /home/sandbox/supervisor \\\n && cp /home/sandbox/conf/processing.conf /home/sandbox/.cuckoo/conf/\nUSER root\n#   Expose cuckoo/libvirt ports\nEXPOSE 80/tcp 2042/tcp 5353/tcp 8090/tcp 9040/tcp 16509/tcp\n#   Set the entry point\nENTRYPOINT [\"/home/sandbox/startup.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Docker container for Cuckoo Sandbox\n#\nFROM ubuntu:14.04\n#  Container needs to know that it has no TTY\nENV DEBIAN_FRONTEND=\"noninteractive\"\nWORKDIR /tmp\n# ############################ PACKAGE INSTALLATION ################################\nCOPY packages.txt /tmp/\nCOPY requirements.txt /tmp/\nCOPY libs/inetsim_1.2.6-1_all.deb /tmp/inetsim_1.2.6-1_all.deb\n#  Also change policy-rc.d to fix errors:\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\nCOPY libs/volatility-2.5.tar.gz /tmp/\n#  cgroup-lite fixup compensates for a ubuntu:trusty-docker:cgroup broken package\nRUN apt-get update \\\n && touch /etc/init/cgroup-lite.conf \\\n && ln /etc/init/cgroup-lite.conf /etc/init.d/cgroup-lite \\\n && yes | apt-get install --no-install-recommends cgroup-lite -y --force-yes \\\n && xargs apt-get install -y --force-yes --no-install-recommends < /tmp/packages.txt \\\n && dpkg -i /tmp/inetsim_1.2.6-1_all.deb \\\n && rm /tmp/inetsim_1.2.6-1_all.deb \\\n && xargs -n 1 pip install --upgrade < /tmp/requirements.txt \\\n && pip install /tmp/volatility-2.5.tar.gz \\\n && apt-get remove -y --force-yes python-dev libffi-dev libssl-dev libjpeg-dev zlib1g-dev libxml2-dev libxslt1-dev libc6-dev libpython2.7 vim-tiny vim-common gcc cpp g++ make \\\n && apt-get autoremove -y --force-yes \\\n && apt-get clean \\\n && rm /tmp/requirements.txt /tmp/packages.txt /tmp/volatility-2.5.tar.gz\n#  tcpdump workaround\nRUN mv /usr/sbin/tcpdump /usr/bin/tcpdump \\\n && ln -s /usr/bin/tcpdump /usr/sbin/tcpdump \\\n && chmod +s /usr/sbin/tcpdump\n#  Fix policykit-1\nRUN mkdir -p /var/run/dbus || /bin/true\nRUN sed -ie 's/auth_admin_keep/yes/' /usr/share/polkit-1/actions/org.libvirt.unix.policy\n# RUN cd /tmp/docker/build\n#  Make sure deps are available\nRUN echo \"/usr/local/lib\" >> /etc/ld.so.conf\nRUN ldconfig\n#  Create sandbox user\n#  RUN addgroup libvirtd || /bin/true\nRUN mkdir /opt/sandbox \\\n && useradd sandbox \\\n && mkdir /home/sandbox \\\n && usermod -a -G libvirtd sandbox \\\n && usermod -G sandbox www-data \\\n && chown -R sandbox:sandbox /home/sandbox \\\n && chown -R sandbox:sandbox /opt/sandbox\n#  Setup KVM user\n#  RUN groupadd kvm || /bin/true\nRUN usermod -a -G libvirtd libvirt-qemu \\\n && usermod -a -G kvm libvirt-qemu\n#  Setup libvirt\nCOPY conf/libvirtd.conf /etc/libvirt/libvirtd.conf\nRUN echo \"\" >> /home/sandbox/.bashrc \\\n && echo \"export LIBVIRT_DEFAULT_URI=qemu:///system\" >> /home/sandbox/.bashrc\n#  Seems like there are issues running things in the container from /usr/sbin\n#  Moving libvirt and tcpdump for now..\nRUN mv /usr/sbin/libvirtd /usr/bin/libvirtd \\\n && ln -s /usr/bin/libvirtd /usr/sbin/libvirtd\n#  Disable slow ntpdate updating\nRUN rm /etc/network/if-up.d/ntpdate\n# ################################## CONFIGURATION ######################################\nCOPY startup.sh /home/sandbox/startup.sh\nCOPY bootstrap.py /home/sandbox/bootstrap.py\n#  Make sure they're executable\nRUN chown -R sandbox: /home/sandbox \\\n && chmod +x /home/sandbox/startup.sh /home/sandbox/bootstrap.py\n#  Run this portion of the build as the sandbox user\nUSER sandbox\nWORKDIR /home/sandbox/\n#  Copy over configuration files\nRUN mkdir /home/sandbox/conf\nCOPY conf/* /home/sandbox/conf/\nRUN cuckoo \\\n && cuckoo community \\\n && mkdir /home/sandbox/supervisor \\\n && cp /home/sandbox/conf/processing.conf /home/sandbox/.cuckoo/conf/\nUSER root\n#  Expose cuckoo/libvirt ports\nEXPOSE 80/tcp 2042/tcp 5353/tcp 8090/tcp 9040/tcp 16509/tcp\n#  Set the entry point\nENTRYPOINT [\"/home/sandbox/startup.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"93056bda0a617a85272bba7b5078ab65","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Docker container for Cuckoo Sandbox\n#\nFROM ubuntu:14.04\n#   Container needs to know that it has no TTY\nENV DEBIAN_FRONTEND=\"noninteractive\"\nWORKDIR /tmp\n#  ############################ PACKAGE INSTALLATION ################################\nCOPY packages.txt /tmp/\nCOPY requirements.txt /tmp/\nCOPY libs/inetsim_1.2.6-1_all.deb /tmp/inetsim_1.2.6-1_all.deb\n#   Also change policy-rc.d to fix errors:\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\nCOPY libs/volatility-2.5.tar.gz /tmp/\n#   cgroup-lite fixup compensates for a ubuntu:trusty-docker:cgroup broken package\nRUN apt-get update \\\n && touch /etc/init/cgroup-lite.conf \\\n && ln /etc/init/cgroup-lite.conf /etc/init.d/cgroup-lite \\\n && yes | apt-get install --no-install-recommends cgroup-lite -y --force-yes \\\n && xargs apt-get install -y --force-yes --no-install-recommends < /tmp/packages.txt \\\n && dpkg -i /tmp/inetsim_1.2.6-1_all.deb \\\n && rm /tmp/inetsim_1.2.6-1_all.deb \\\n && xargs -n 1 pip install --upgrade < /tmp/requirements.txt \\\n && pip install /tmp/volatility-2.5.tar.gz \\\n && apt-get remove -y --force-yes python-dev libffi-dev libssl-dev libjpeg-dev zlib1g-dev libxml2-dev libxslt1-dev libc6-dev libpython2.7 vim-tiny vim-common gcc cpp g++ make \\\n && apt-get autoremove -y --force-yes \\\n && apt-get clean \\\n && rm /tmp/requirements.txt /tmp/packages.txt /tmp/volatility-2.5.tar.gz\n#   tcpdump workaround\nRUN mv /usr/sbin/tcpdump /usr/bin/tcpdump \\\n && ln -s /usr/bin/tcpdump /usr/sbin/tcpdump \\\n && chmod +s /usr/sbin/tcpdump\n#   Fix policykit-1\nRUN mkdir -p /var/run/dbus || /bin/true\nRUN sed -ie 's/auth_admin_keep/yes/' /usr/share/polkit-1/actions/org.libvirt.unix.policy\n#  RUN cd /tmp/docker/build\n#   Make sure deps are available\nRUN echo \"/usr/local/lib\" >> /etc/ld.so.conf\nRUN ldconfig\n#   Create sandbox user\n#   RUN addgroup libvirtd || /bin/true\nRUN mkdir /opt/sandbox \\\n && useradd sandbox \\\n && mkdir /home/sandbox \\\n && usermod -a -G libvirtd sandbox \\\n && usermod -G sandbox www-data \\\n && chown -R sandbox:sandbox /home/sandbox \\\n && chown -R sandbox:sandbox /opt/sandbox\n#   Setup KVM user\n#   RUN groupadd kvm || /bin/true\nRUN usermod -a -G libvirtd libvirt-qemu \\\n && usermod -a -G kvm libvirt-qemu\n#   Setup libvirt\nCOPY conf/libvirtd.conf /etc/libvirt/libvirtd.conf\nRUN echo \"\" >> /home/sandbox/.bashrc \\\n && echo \"export LIBVIRT_DEFAULT_URI=qemu:///system\" >> /home/sandbox/.bashrc\n#   Seems like there are issues running things in the container from /usr/sbin\n#   Moving libvirt and tcpdump for now..\nRUN mv /usr/sbin/libvirtd /usr/bin/libvirtd \\\n && ln -s /usr/bin/libvirtd /usr/sbin/libvirtd\n#   Disable slow ntpdate updating\nRUN rm /etc/network/if-up.d/ntpdate\n#  ################################## CONFIGURATION ######################################\nCOPY startup.sh /home/sandbox/startup.sh\nCOPY bootstrap.py /home/sandbox/bootstrap.py\n#   Make sure they're executable\nRUN chown -R sandbox: /home/sandbox \\\n && chmod +x /home/sandbox/startup.sh /home/sandbox/bootstrap.py\n#   Run this portion of the build as the sandbox user\nUSER sandbox\nWORKDIR /home/sandbox/\n#   Copy over configuration files\nRUN mkdir /home/sandbox/conf\nCOPY conf/* /home/sandbox/conf/\nRUN cuckoo \\\n && cuckoo community \\\n && mkdir /home/sandbox/supervisor \\\n && cp /home/sandbox/conf/processing.conf /home/sandbox/.cuckoo/conf/\nUSER root\n#   Expose cuckoo/libvirt ports\nEXPOSE 80/tcp 2042/tcp 5353/tcp 8090/tcp 9040/tcp 16509/tcp\n#   Set the entry point\nENTRYPOINT [\"/home/sandbox/startup.sh\"]\n","originalDockerfileUglifiedHash":"1f8a208f1d0c89e2f8b3ff7b00a8c27d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d929223653f5207d87d22f03c28ba4030d63f959.dockerfile"}