{"seed":193254969,"processedDockerfileHash":"0ba6df1bd23734a060e619e23c366aae","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   docker build -t opencog/ros-hydro-zenorsm .\n#   xhost +\n#   docker run --rm --privileged -i -v /dev/ttyACM0:/dev/ttyACM0 -v /tmp/.X11-unix/X0:/tmp/.X11-unix/X0 -v /dev/dri:/dev/dri -v /dev/shm:/dev/shm -v /dev/video0:/dev/video0 -v /dev/video1:/dev/video1 -e DISPLAY=:0.0 -p 33433:33433/udp -t opencog/ros-hydro-zenorsm \n#   Note: port 33433=faceshift, /dev/ttyACM0=pololu, /dev/dri=gpu, /dev/shm=gpu\n#   ToDo: add MORSE robot simulator\n#         replace faceshift with OpenCV FaceRecognizer, etc.\nFROM opencog/ros-hydro-dev\nMAINTAINER Mandeep Singh Bhatia \"mandeep.singh.bhatia@gmail.com\"\nMAINTAINER David Hart \"dhart@opencog.org\"\nRUN :\n#   Crap, didn't notice that it's installing blender...I think this can be removed? - AvdP\nRUN (apt-get update ;apt-get install --no-install-recommends blender=3.4.1+dfsg-2build3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python3-yaml=6.0-3build1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python3-setuptools=66.1.1-1 -y )\nRUN easy_install3 pip\nRUN pip3 install rospkg catkin_pkg\nRUN echo source /opt/ros/hydro/setup.bash >> /.bash_profile \\\n && echo -e \"\\e[1;34m[$SELF_NAME] catkin devel setup\\.bash sourced\\e[0m\"\n#   Install ITFTalk and prerequisites\nWORKDIR /catkin_ws/src\nRUN (apt-get update ;apt-get install --no-install-recommends mplayer=2:1.5+svn38408-1 python-pycurl libcurl3 -y )\nRUN git clone https://github.com/Alex-van-der-Peet/ITFTalk\n#   Install ITFListen and prerequisites\nWORKDIR /catkin_ws/src\nRUN (apt-get update ;apt-get install --no-install-recommends sox=14.4.2+git20190427-3.4ubuntu1 python-simplejson -y )\nRUN git clone https://github.com/Alex-van-der-Peet/ITFListen\n#   Install ITFParrot to test ITFListen -> ITFTalk\nWORKDIR /catkin_ws/src\nRUN git clone https://github.com/Alex-van-der-Peet/ITFParrot\n#   I figured it'd be undesirable to auto-start the parrot, so\n#   to Run ITFParrot, go to /catkin_ws and then run:\n#   source devel/setup.bash\n#   rosrlaunch itf_parrot itf_parrot.launch\n#   Install openEAR prerequisites\nRUN (apt-get update ;apt-get install --no-install-recommends autoconf=2.71-3 libtool=2.4.7-5 g++=4:12.2.0-3ubuntu1 libportaudio2=19.6.0-1.2 -y )\n#   Download ROS-enabled version of openEAR\n#   WORKDIR /\n#   Line below is needed otherwise it keeps saying ros_open_ear exists\n#   and is not empty\n#   RUN rm -rf /ros_open_ear\n#   RUN git clone https://github.com/Alex-van-der-Peet/ros_open_ear\n#   Unpack, make and install portaudio (openEAR prerequisite)\n#   WORKDIR /ros_open_ear/thirdparty\n#   RUN tar -xvf portaudio.tgz\n#   WORKDIR /ros_open_ear/thirdparty/portaudio\n#   RUN ./configure\n#   RUN make\n#   RUN make install\n#   Configure, build and install the modified version of openEAR\n#   WORKDIR /ros_open_ear\n#   Double run below is on purpose\n#  ### ENV C_INCLUDE_PATH /opt/ros/hydro/include/ros:/opt/ros/hydro/include\n#   RUN ./autogen.sh\n#   RUN ./autogen.sh\n#   RUN ./configure\n#   RUN apt-get install libc6-dev build-essential\n#   RUN echo \"C_INCLUDEPATH=$C_INCLUDE_PATH\"\n#   RUN make\n#   RUN make install\nWORKDIR /catkin_ws/src\nRUN cp /opt/ros/hydro/setup.sh /etc/profile.d/ros_hydro.sh\nENV PYTHONPATH=\"/opt/ros/hydro/lib/python2.7/dist-packages\"\nRUN /usr/bin/python3 /opt/ros/hydro/bin/catkin_init_workspace\n#  Download and install DepthSenseSDK\nWORKDIR /Downloads\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /Downloads/DepthSenseSDK-1.4.3-1527-amd64.deb http://buildbot.opencog.org/hidden/DepthSenseSDK-1.4.3-1527-amd64.deb\nRUN dpkg -i DepthSenseSDK-1.4.3-1527-amd64.deb\nWORKDIR /catkin_ws/src\n#   The steps below clone ROS packages, but since the Gizmo runs out of memory we have to build \n#   intermediately every few packages\nRUN git clone https://github.com/hansonrobotics/robo_blender\nRUN git clone https://github.com/yantrabuddhi/ros_pololu_servo\nWORKDIR /catkin_ws\nRUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\nWORKDIR /catkin_ws/src\n#   RUN git clone https://github.com/yantrabuddhi/ros_nmpt_saliency\n#   Mandeep's saliency tracker above doesn't work, so I'm using the one I made\n#   which is stored in Jamie's repo - Alex\n#  RUN git clone https://github.com/jdddog/ros_nmpt_saliency\nRUN git clone https://github.com/yantrabuddhi/ros_faceshift\nRUN git clone https://github.com/yantrabuddhi/simple_face_tracker\nWORKDIR /catkin_ws\nRUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\nWORKDIR /catkin_ws/src\n#   Octomap breaks catkin_build, hence disabled:\n#  RUN git clone https://github.com/OctoMap/octomap\n#  RUN git clone https://github.com/Alex-van-der-Peet/ITFOpenEar\n#   Jamie's repo doesn't work, so taking the source repo of his fork\n#  RUN git clone https://github.com/jdddog/softkinetic\nRUN git clone https://github.com/ipa320/softkinetic\nWORKDIR /catkin_ws\nRUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\nWORKDIR /catkin_ws/src\nWORKDIR /catkin_ws\n#  RUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\n#   RUN /opt/ros/hydro/bin/catkin_make\nWORKDIR /catkin_ws\nRUN (apt-get update ;apt-get install --no-install-recommends ros-hydro-cv-camera -y )\nENV STARTSCRIPT=\"\\\"echo evaluating startup script... &&source /catkin_ws/devel/setup.bash &&tmux new-session -d 'echo -e \\\"\\e[1;34mroscore\\e[0m\\\" ; roscore' &&tmux set -g set-remain-on-exit on &&tmux set-option -g set-remain-on-exit on &&tmux bind-key R respawn-window &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_pololu_servo\\e[0m\\\" ; rosrun ros_pololu_servo ros_pololu_servo_node' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mblender robo.blend\\e[0m\\\" ; sleep 4 && blender robo.blend' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mbash shell\\e[0m\\\" ; bash -l -i' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_itf_talk\\e[0m\\\" ; roslaunch itf_talk itf_talk.launch' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_itf_listen\\e[0m\\\" ; roslaunch itf_listen itf_listen.launch' &&tmux select-layout even-vertical &&tmux attach \\\"\"\n#   CMD /bin/bash -l -c \"eval $STARTSCRIPT\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  docker build -t opencog/ros-hydro-zenorsm .\n#  xhost +\n#  docker run --rm --privileged -i -v /dev/ttyACM0:/dev/ttyACM0 -v /tmp/.X11-unix/X0:/tmp/.X11-unix/X0 -v /dev/dri:/dev/dri -v /dev/shm:/dev/shm -v /dev/video0:/dev/video0 -v /dev/video1:/dev/video1 -e DISPLAY=:0.0 -p 33433:33433/udp -t opencog/ros-hydro-zenorsm \n#  Note: port 33433=faceshift, /dev/ttyACM0=pololu, /dev/dri=gpu, /dev/shm=gpu\n#  ToDo: add MORSE robot simulator\n#        replace faceshift with OpenCV FaceRecognizer, etc.\nFROM opencog/ros-hydro-dev\nMAINTAINER Mandeep Singh Bhatia \"mandeep.singh.bhatia@gmail.com\"\nMAINTAINER David Hart \"dhart@opencog.org\"\nRUN apt-get update -y\n#  Crap, didn't notice that it's installing blender...I think this can be removed? - AvdP\nRUN apt-get install blender -y\nRUN apt-get install python3-yaml -y\nRUN apt-get install python3-setuptools -y\nRUN easy_install3 pip\nRUN pip3 install rospkg catkin_pkg\nRUN echo source /opt/ros/hydro/setup.bash >> /.bash_profile \\\n && echo -e \"\\e[1;34m[$SELF_NAME] catkin devel setup\\.bash sourced\\e[0m\"\n#  Install ITFTalk and prerequisites\nWORKDIR /catkin_ws/src\nRUN apt-get install mplayer python-pycurl libcurl3 -y\nRUN git clone https://github.com/Alex-van-der-Peet/ITFTalk\n#  Install ITFListen and prerequisites\nWORKDIR /catkin_ws/src\nRUN apt-get install sox python-simplejson -y\nRUN git clone https://github.com/Alex-van-der-Peet/ITFListen\n#  Install ITFParrot to test ITFListen -> ITFTalk\nWORKDIR /catkin_ws/src\nRUN git clone https://github.com/Alex-van-der-Peet/ITFParrot\n#  I figured it'd be undesirable to auto-start the parrot, so\n#  to Run ITFParrot, go to /catkin_ws and then run:\n#  source devel/setup.bash\n#  rosrlaunch itf_parrot itf_parrot.launch\n#  Install openEAR prerequisites\nRUN apt-get install autoconf libtool g++ libportaudio2 -y\n#  Download ROS-enabled version of openEAR\n#  WORKDIR /\n#  Line below is needed otherwise it keeps saying ros_open_ear exists\n#  and is not empty\n#  RUN rm -rf /ros_open_ear\n#  RUN git clone https://github.com/Alex-van-der-Peet/ros_open_ear\n#  Unpack, make and install portaudio (openEAR prerequisite)\n#  WORKDIR /ros_open_ear/thirdparty\n#  RUN tar -xvf portaudio.tgz\n#  WORKDIR /ros_open_ear/thirdparty/portaudio\n#  RUN ./configure\n#  RUN make\n#  RUN make install\n#  Configure, build and install the modified version of openEAR\n#  WORKDIR /ros_open_ear\n#  Double run below is on purpose\n# ### ENV C_INCLUDE_PATH /opt/ros/hydro/include/ros:/opt/ros/hydro/include\n#  RUN ./autogen.sh\n#  RUN ./autogen.sh\n#  RUN ./configure\n#  RUN apt-get install libc6-dev build-essential\n#  RUN echo \"C_INCLUDEPATH=$C_INCLUDE_PATH\"\n#  RUN make\n#  RUN make install\nWORKDIR /catkin_ws/src\nRUN cp /opt/ros/hydro/setup.sh /etc/profile.d/ros_hydro.sh\nENV PYTHONPATH=\"/opt/ros/hydro/lib/python2.7/dist-packages\"\nRUN /usr/bin/python3 /opt/ros/hydro/bin/catkin_init_workspace\n# Download and install DepthSenseSDK\nWORKDIR /Downloads\nADD http://buildbot.opencog.org/hidden/DepthSenseSDK-1.4.3-1527-amd64.deb /Downloads/DepthSenseSDK-1.4.3-1527-amd64.deb\nRUN dpkg -i DepthSenseSDK-1.4.3-1527-amd64.deb\nWORKDIR /catkin_ws/src\n#  The steps below clone ROS packages, but since the Gizmo runs out of memory we have to build \n#  intermediately every few packages\nRUN git clone https://github.com/hansonrobotics/robo_blender\nRUN git clone https://github.com/yantrabuddhi/ros_pololu_servo\nWORKDIR /catkin_ws\nRUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\nWORKDIR /catkin_ws/src\n#  RUN git clone https://github.com/yantrabuddhi/ros_nmpt_saliency\n#  Mandeep's saliency tracker above doesn't work, so I'm using the one I made\n#  which is stored in Jamie's repo - Alex\n# RUN git clone https://github.com/jdddog/ros_nmpt_saliency\nRUN git clone https://github.com/yantrabuddhi/ros_faceshift\nRUN git clone https://github.com/yantrabuddhi/simple_face_tracker\nWORKDIR /catkin_ws\nRUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\nWORKDIR /catkin_ws/src\n#  Octomap breaks catkin_build, hence disabled:\n# RUN git clone https://github.com/OctoMap/octomap\n# RUN git clone https://github.com/Alex-van-der-Peet/ITFOpenEar\n#  Jamie's repo doesn't work, so taking the source repo of his fork\n# RUN git clone https://github.com/jdddog/softkinetic\nRUN git clone https://github.com/ipa320/softkinetic\nWORKDIR /catkin_ws\nRUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\nWORKDIR /catkin_ws/src\nWORKDIR /catkin_ws\n# RUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\n#  RUN /opt/ros/hydro/bin/catkin_make\nWORKDIR /catkin_ws\nRUN apt-get install ros-hydro-cv-camera -y\nENV STARTSCRIPT=\"\\\"echo evaluating startup script... &&source /catkin_ws/devel/setup.bash &&tmux new-session -d 'echo -e \\\"\\e[1;34mroscore\\e[0m\\\" ; roscore' &&tmux set -g set-remain-on-exit on &&tmux set-option -g set-remain-on-exit on &&tmux bind-key R respawn-window &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_pololu_servo\\e[0m\\\" ; rosrun ros_pololu_servo ros_pololu_servo_node' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mblender robo.blend\\e[0m\\\" ; sleep 4 && blender robo.blend' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mbash shell\\e[0m\\\" ; bash -l -i' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_itf_talk\\e[0m\\\" ; roslaunch itf_talk itf_talk.launch' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_itf_listen\\e[0m\\\" ; roslaunch itf_listen itf_listen.launch' &&tmux select-layout even-vertical &&tmux attach \\\"\"\n#  CMD /bin/bash -l -c \"eval $STARTSCRIPT\"\n","injectedSmells":[],"originalDockerfileHash":"dbe900f63015316c50041e2e0b84d639","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   docker build -t opencog/ros-hydro-zenorsm .\n#   xhost +\n#   docker run --rm --privileged -i -v /dev/ttyACM0:/dev/ttyACM0 -v /tmp/.X11-unix/X0:/tmp/.X11-unix/X0 -v /dev/dri:/dev/dri -v /dev/shm:/dev/shm -v /dev/video0:/dev/video0 -v /dev/video1:/dev/video1 -e DISPLAY=:0.0 -p 33433:33433/udp -t opencog/ros-hydro-zenorsm \n#   Note: port 33433=faceshift, /dev/ttyACM0=pololu, /dev/dri=gpu, /dev/shm=gpu\n#   ToDo: add MORSE robot simulator\n#         replace faceshift with OpenCV FaceRecognizer, etc.\nFROM opencog/ros-hydro-dev\nMAINTAINER Mandeep Singh Bhatia \"mandeep.singh.bhatia@gmail.com\"\nMAINTAINER David Hart \"dhart@opencog.org\"\nRUN apt-get update -y\n#   Crap, didn't notice that it's installing blender...I think this can be removed? - AvdP\nRUN apt-get install blender -y\nRUN apt-get install python3-yaml -y\nRUN apt-get install python3-setuptools -y\nRUN easy_install3 pip\nRUN pip3 install rospkg catkin_pkg\nRUN echo source /opt/ros/hydro/setup.bash >> /.bash_profile \\\n && echo -e \"\\e[1;34m[$SELF_NAME] catkin devel setup\\.bash sourced\\e[0m\"\n#   Install ITFTalk and prerequisites\nWORKDIR /catkin_ws/src\nRUN apt-get install mplayer python-pycurl libcurl3 -y\nRUN git clone https://github.com/Alex-van-der-Peet/ITFTalk\n#   Install ITFListen and prerequisites\nWORKDIR /catkin_ws/src\nRUN apt-get install sox python-simplejson -y\nRUN git clone https://github.com/Alex-van-der-Peet/ITFListen\n#   Install ITFParrot to test ITFListen -> ITFTalk\nWORKDIR /catkin_ws/src\nRUN git clone https://github.com/Alex-van-der-Peet/ITFParrot\n#   I figured it'd be undesirable to auto-start the parrot, so\n#   to Run ITFParrot, go to /catkin_ws and then run:\n#   source devel/setup.bash\n#   rosrlaunch itf_parrot itf_parrot.launch\n#   Install openEAR prerequisites\nRUN apt-get install autoconf libtool g++ libportaudio2 -y\n#   Download ROS-enabled version of openEAR\n#   WORKDIR /\n#   Line below is needed otherwise it keeps saying ros_open_ear exists\n#   and is not empty\n#   RUN rm -rf /ros_open_ear\n#   RUN git clone https://github.com/Alex-van-der-Peet/ros_open_ear\n#   Unpack, make and install portaudio (openEAR prerequisite)\n#   WORKDIR /ros_open_ear/thirdparty\n#   RUN tar -xvf portaudio.tgz\n#   WORKDIR /ros_open_ear/thirdparty/portaudio\n#   RUN ./configure\n#   RUN make\n#   RUN make install\n#   Configure, build and install the modified version of openEAR\n#   WORKDIR /ros_open_ear\n#   Double run below is on purpose\n#  ### ENV C_INCLUDE_PATH /opt/ros/hydro/include/ros:/opt/ros/hydro/include\n#   RUN ./autogen.sh\n#   RUN ./autogen.sh\n#   RUN ./configure\n#   RUN apt-get install libc6-dev build-essential\n#   RUN echo \"C_INCLUDEPATH=$C_INCLUDE_PATH\"\n#   RUN make\n#   RUN make install\nWORKDIR /catkin_ws/src\nRUN cp /opt/ros/hydro/setup.sh /etc/profile.d/ros_hydro.sh\nENV PYTHONPATH=\"/opt/ros/hydro/lib/python2.7/dist-packages\"\nRUN /usr/bin/python3 /opt/ros/hydro/bin/catkin_init_workspace\n#  Download and install DepthSenseSDK\nWORKDIR /Downloads\nADD http://buildbot.opencog.org/hidden/DepthSenseSDK-1.4.3-1527-amd64.deb /Downloads/DepthSenseSDK-1.4.3-1527-amd64.deb\nRUN dpkg -i DepthSenseSDK-1.4.3-1527-amd64.deb\nWORKDIR /catkin_ws/src\n#   The steps below clone ROS packages, but since the Gizmo runs out of memory we have to build \n#   intermediately every few packages\nRUN git clone https://github.com/hansonrobotics/robo_blender\nRUN git clone https://github.com/yantrabuddhi/ros_pololu_servo\nWORKDIR /catkin_ws\nRUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\nWORKDIR /catkin_ws/src\n#   RUN git clone https://github.com/yantrabuddhi/ros_nmpt_saliency\n#   Mandeep's saliency tracker above doesn't work, so I'm using the one I made\n#   which is stored in Jamie's repo - Alex\n#  RUN git clone https://github.com/jdddog/ros_nmpt_saliency\nRUN git clone https://github.com/yantrabuddhi/ros_faceshift\nRUN git clone https://github.com/yantrabuddhi/simple_face_tracker\nWORKDIR /catkin_ws\nRUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\nWORKDIR /catkin_ws/src\n#   Octomap breaks catkin_build, hence disabled:\n#  RUN git clone https://github.com/OctoMap/octomap\n#  RUN git clone https://github.com/Alex-van-der-Peet/ITFOpenEar\n#   Jamie's repo doesn't work, so taking the source repo of his fork\n#  RUN git clone https://github.com/jdddog/softkinetic\nRUN git clone https://github.com/ipa320/softkinetic\nWORKDIR /catkin_ws\nRUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\nWORKDIR /catkin_ws/src\nWORKDIR /catkin_ws\n#  RUN bash -l -c \"source /opt/ros/hydro/setup.bash; /usr/bin/python3 /opt/ros/hydro/bin/catkin_make\"\n#   RUN /opt/ros/hydro/bin/catkin_make\nWORKDIR /catkin_ws\nRUN apt-get install ros-hydro-cv-camera -y\nENV STARTSCRIPT=\"\\\"echo evaluating startup script... &&source /catkin_ws/devel/setup.bash &&tmux new-session -d 'echo -e \\\"\\e[1;34mroscore\\e[0m\\\" ; roscore' &&tmux set -g set-remain-on-exit on &&tmux set-option -g set-remain-on-exit on &&tmux bind-key R respawn-window &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_pololu_servo\\e[0m\\\" ; rosrun ros_pololu_servo ros_pololu_servo_node' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mblender robo.blend\\e[0m\\\" ; sleep 4 && blender robo.blend' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mbash shell\\e[0m\\\" ; bash -l -i' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_itf_talk\\e[0m\\\" ; roslaunch itf_talk itf_talk.launch' &&tmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_itf_listen\\e[0m\\\" ; roslaunch itf_listen itf_listen.launch' &&tmux select-layout even-vertical &&tmux attach \\\"\"\n#   CMD /bin/bash -l -c \"eval $STARTSCRIPT\"\n","originalDockerfileUglifiedHash":"af1ebde9441965da67b24946553f380b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a013642d0156666755d9db5a4962c72590a96a50.dockerfile"}