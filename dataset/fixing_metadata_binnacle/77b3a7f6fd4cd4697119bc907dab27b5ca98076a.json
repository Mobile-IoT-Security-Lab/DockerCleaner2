{"seed":629740700,"processedDockerfileHash":"67f8873037cb01839d95694a78c6d91c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   BUILD: docker build . -t solita/napote-ckan\n#   docker build . -t ckan && docker run -d -p 80:5000 --link db:db --link redis:redis --link solr:solr ckan\nFROM centos:7\nENV CKAN_HOME=\"/usr/lib/ckan\"\nENV CKAN_VIRTUAL_ENV=\"$CKAN_HOME/virtualenv\"\nENV CKAN_CONFIG=\"/etc/ckan\"\nENV CKAN_STORAGE_PATH=\"/var/lib/ckan\"\nENV CKAN_CUSTOM_PLUGINS_PATH=\"/ckan-plugins\"\n#   These build-time vars are specified by docker-compose.yml\nARG CKAN_PORT=5555\nARG CKAN_SITE_URL=http://localhost:8080\n#  # Install required packages ##\n#   NOTE: lipgq-dev (debian) = postgresql-libs (centos)\n#   NOTE: build-essential (debian) = gcc gcc-c++ make openssl-devel (centos)\n#   Perform updates and install EPEL for inotify-tools\nRUN yum -y update \\\n && yum -y upgrade \\\n && yum -y install epel-release\n#   Install packages\nRUN yum -y update \\\n && yum --enablerepo=epel -y install python-devel postgresql-devel postgresql-libs python-virtualenv git-core gcc gcc-c++ make openssl-devel libffi-devel gcc inotify-tools \\\n && yum clean all\n#   Create ckan user\nRUN useradd -r -u 900 -m -c \"ckan account\" -d $CKAN_HOME -s /bin/false ckan\n#  # SetUp Virtual Environment for CKAN ##\nRUN mkdir -p $CKAN_VIRTUAL_ENV $CKAN_CONFIG $CKAN_STORAGE_PATH $CKAN_CUSTOM_PLUGINS_PATH\nRUN virtualenv $CKAN_VIRTUAL_ENV\nRUN ln -s $CKAN_VIRTUAL_ENV/bin/pip /usr/local/bin/ckan-pip\nRUN ln -s $CKAN_VIRTUAL_ENV/bin/paster /usr/local/bin/ckan-paster\n#  # Install recommended version of setup tools ##\n#   NOTE: setuptools version defined in ckan/dev-requirements.txt\nRUN ckan-pip install setuptools==20.4\n#  # Install latest stable CKAN in $CKAN_HOME/src/ckan directory ##\nRUN ckan-pip install -e 'git+https://github.com/ckan/ckan.git@ckan-2.7.0#egg=ckan'\n#   Install ckan plugins\nCOPY ./ckan-plugins $CKAN_HOME/src/\nRUN ckan-pip install -e $CKAN_HOME/src/ckanext-napote_theme\n#   Copy config files\nCOPY ./who.ini /\nRUN ln -s /who.ini $CKAN_CONFIG/who.ini\n#  # Install pytz. ##\n#   NOTE: It seems that some of the requirements have pytz dependency, so we'll have to install pytz before installing\n#         requirements.txt\n#   NOTE: pytz version defined in ckan/requirements.txt\nRUN ckan-pip install pytz==2016.7\n#  # Install CKAN dependencies ##\nRUN ckan-pip install --upgrade -r $CKAN_VIRTUAL_ENV/src/ckan/requirements.txt\n#  # SetUp EntryPoint ##\nCOPY ./ckan-entrypoint.sh /\n#   CHMOD\nRUN chmod +x /ckan-entrypoint.sh\nRUN chown -R ckan:ckan $CKAN_HOME $CKAN_VIRTUAL_ENV $CKAN_CONFIG $CKAN_STORAGE_PATH\nENTRYPOINT [\"/ckan-entrypoint.sh\"]\n#  # Volumes ##\n#   Config\nVOLUME [\"/etc/ckan\"]\n#   Home\nVOLUME [\"/usr/lib/ckan\"]\n#   Storage\nVOLUME [\"/var/lib/ckan\"]\n#   Volume for custom ckan plugins\nVOLUME [\"/ckan-plugins\"]\nUSER ckan\nEXPOSE $CKAN_PORT\nCMD [\"ckan-paster\", \"serve\", \"--reload\", \"/etc/ckan/ckan.ini\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  BUILD: docker build . -t solita/napote-ckan\n#  docker build . -t ckan && docker run -d -p 80:5000 --link db:db --link redis:redis --link solr:solr ckan\nFROM centos:7\nENV CKAN_HOME=\"/usr/lib/ckan\"\nENV CKAN_VIRTUAL_ENV=\"$CKAN_HOME/virtualenv\"\nENV CKAN_CONFIG=\"/etc/ckan\"\nENV CKAN_STORAGE_PATH=\"/var/lib/ckan\"\nENV CKAN_CUSTOM_PLUGINS_PATH=\"/ckan-plugins\"\n#  These build-time vars are specified by docker-compose.yml\nARG CKAN_PORT=5555\nARG CKAN_SITE_URL=http://localhost:8080\n# # Install required packages ##\n#  NOTE: lipgq-dev (debian) = postgresql-libs (centos)\n#  NOTE: build-essential (debian) = gcc gcc-c++ make openssl-devel (centos)\n#  Perform updates and install EPEL for inotify-tools\nRUN yum -y update \\\n && yum -y upgrade \\\n && yum -y install epel-release\n#  Install packages\nRUN yum -y update \\\n && yum --enablerepo=epel -y install python-devel postgresql-devel postgresql-libs python-virtualenv git-core gcc gcc-c++ make openssl-devel libffi-devel gcc inotify-tools \\\n && yum clean all\n#  Create ckan user\nRUN useradd -r -u 900 -m -c \"ckan account\" -d $CKAN_HOME -s /bin/false ckan\n# # SetUp Virtual Environment for CKAN ##\nRUN mkdir -p $CKAN_VIRTUAL_ENV $CKAN_CONFIG $CKAN_STORAGE_PATH $CKAN_CUSTOM_PLUGINS_PATH\nRUN virtualenv $CKAN_VIRTUAL_ENV\nRUN ln -s $CKAN_VIRTUAL_ENV/bin/pip /usr/local/bin/ckan-pip\nRUN ln -s $CKAN_VIRTUAL_ENV/bin/paster /usr/local/bin/ckan-paster\n# # Install recommended version of setup tools ##\n#  NOTE: setuptools version defined in ckan/dev-requirements.txt\nRUN ckan-pip install setuptools==20.4\n# # Install latest stable CKAN in $CKAN_HOME/src/ckan directory ##\nRUN ckan-pip install -e 'git+https://github.com/ckan/ckan.git@ckan-2.7.0#egg=ckan'\n#  Install ckan plugins\nADD ./ckan-plugins $CKAN_HOME/src/\nRUN ckan-pip install -e $CKAN_HOME/src/ckanext-napote_theme\n#  Copy config files\nCOPY ./who.ini /\nRUN ln -s /who.ini $CKAN_CONFIG/who.ini\n# # Install pytz. ##\n#  NOTE: It seems that some of the requirements have pytz dependency, so we'll have to install pytz before installing\n#        requirements.txt\n#  NOTE: pytz version defined in ckan/requirements.txt\nRUN ckan-pip install pytz==2016.7\n# # Install CKAN dependencies ##\nRUN ckan-pip install --upgrade -r $CKAN_VIRTUAL_ENV/src/ckan/requirements.txt\n# # SetUp EntryPoint ##\nCOPY ./ckan-entrypoint.sh /\n#  CHMOD\nRUN chmod +x /ckan-entrypoint.sh\nRUN chown -R ckan:ckan $CKAN_HOME $CKAN_VIRTUAL_ENV $CKAN_CONFIG $CKAN_STORAGE_PATH\nENTRYPOINT [\"/ckan-entrypoint.sh\"]\n# # Volumes ##\n#  Config\nVOLUME [\"/etc/ckan\"]\n#  Home\nVOLUME [\"/usr/lib/ckan\"]\n#  Storage\nVOLUME [\"/var/lib/ckan\"]\n#  Volume for custom ckan plugins\nVOLUME [\"/ckan-plugins\"]\nUSER ckan\nEXPOSE $CKAN_PORT\nCMD [\"ckan-paster\", \"serve\", \"--reload\", \"/etc/ckan/ckan.ini\"]\n","injectedSmells":[],"originalDockerfileHash":"f026cde3686c6ae3a0da9bb52589149c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   BUILD: docker build . -t solita/napote-ckan\n#   docker build . -t ckan && docker run -d -p 80:5000 --link db:db --link redis:redis --link solr:solr ckan\nFROM centos:7\nENV CKAN_HOME=\"/usr/lib/ckan\"\nENV CKAN_VIRTUAL_ENV=\"$CKAN_HOME/virtualenv\"\nENV CKAN_CONFIG=\"/etc/ckan\"\nENV CKAN_STORAGE_PATH=\"/var/lib/ckan\"\nENV CKAN_CUSTOM_PLUGINS_PATH=\"/ckan-plugins\"\n#   These build-time vars are specified by docker-compose.yml\nARG CKAN_PORT=5555\nARG CKAN_SITE_URL=http://localhost:8080\n#  # Install required packages ##\n#   NOTE: lipgq-dev (debian) = postgresql-libs (centos)\n#   NOTE: build-essential (debian) = gcc gcc-c++ make openssl-devel (centos)\n#   Perform updates and install EPEL for inotify-tools\nRUN yum -y update \\\n && yum -y upgrade \\\n && yum -y install epel-release\n#   Install packages\nRUN yum -y update \\\n && yum --enablerepo=epel -y install python-devel postgresql-devel postgresql-libs python-virtualenv git-core gcc gcc-c++ make openssl-devel libffi-devel gcc inotify-tools \\\n && yum clean all\n#   Create ckan user\nRUN useradd -r -u 900 -m -c \"ckan account\" -d $CKAN_HOME -s /bin/false ckan\n#  # SetUp Virtual Environment for CKAN ##\nRUN mkdir -p $CKAN_VIRTUAL_ENV $CKAN_CONFIG $CKAN_STORAGE_PATH $CKAN_CUSTOM_PLUGINS_PATH\nRUN virtualenv $CKAN_VIRTUAL_ENV\nRUN ln -s $CKAN_VIRTUAL_ENV/bin/pip /usr/local/bin/ckan-pip\nRUN ln -s $CKAN_VIRTUAL_ENV/bin/paster /usr/local/bin/ckan-paster\n#  # Install recommended version of setup tools ##\n#   NOTE: setuptools version defined in ckan/dev-requirements.txt\nRUN ckan-pip install setuptools==20.4\n#  # Install latest stable CKAN in $CKAN_HOME/src/ckan directory ##\nRUN ckan-pip install -e 'git+https://github.com/ckan/ckan.git@ckan-2.7.0#egg=ckan'\n#   Install ckan plugins\nADD ./ckan-plugins $CKAN_HOME/src/\nRUN ckan-pip install -e $CKAN_HOME/src/ckanext-napote_theme\n#   Copy config files\nCOPY ./who.ini /\nRUN ln -s /who.ini $CKAN_CONFIG/who.ini\n#  # Install pytz. ##\n#   NOTE: It seems that some of the requirements have pytz dependency, so we'll have to install pytz before installing\n#         requirements.txt\n#   NOTE: pytz version defined in ckan/requirements.txt\nRUN ckan-pip install pytz==2016.7\n#  # Install CKAN dependencies ##\nRUN ckan-pip install --upgrade -r $CKAN_VIRTUAL_ENV/src/ckan/requirements.txt\n#  # SetUp EntryPoint ##\nCOPY ./ckan-entrypoint.sh /\n#   CHMOD\nRUN chmod +x /ckan-entrypoint.sh\nRUN chown -R ckan:ckan $CKAN_HOME $CKAN_VIRTUAL_ENV $CKAN_CONFIG $CKAN_STORAGE_PATH\nENTRYPOINT [\"/ckan-entrypoint.sh\"]\n#  # Volumes ##\n#   Config\nVOLUME [\"/etc/ckan\"]\n#   Home\nVOLUME [\"/usr/lib/ckan\"]\n#   Storage\nVOLUME [\"/var/lib/ckan\"]\n#   Volume for custom ckan plugins\nVOLUME [\"/ckan-plugins\"]\nUSER ckan\nEXPOSE $CKAN_PORT\nCMD [\"ckan-paster\", \"serve\", \"--reload\", \"/etc/ckan/ckan.ini\"]\n","originalDockerfileUglifiedHash":"3f399a3b7ab4645fb844412303f4af35","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/77b3a7f6fd4cd4697119bc907dab27b5ca98076a.dockerfile"}