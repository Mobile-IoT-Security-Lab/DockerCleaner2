{"seed":3427885686,"processedDockerfileHash":"69df5b36f91be34eb905a00a74894f98","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#  ####\n#\n#   Used to generate the 'unidata/cloudstream' docker container.\n#   Visit us on the web at http://www.unidata.ucar.edu\n#\n#   Copyright Unidata 2015 - 2018\n#\n#  ####\nFROM ubuntu:trusty\nMAINTAINER Ward Fisher <wfisher@ucar.edu>\nENV CLOUDSTREAM_VERSION=\"development\"\n#   Set the following, required for IDV 5.5+\n#   ENV MESA_GL_VERSION_OVERRIDE 3.1\n#  ####\n#   Update base docker image.\n#  ####\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN : \\\n && apt-get -y upgrade\n#  ##\n#   Install bare minimum set of tools.\n#  ##\nRUN (apt-get update ;apt-get install --no-install-recommends nano=2.2.6-1ubuntu1 curl=7.35.0-1ubuntu2.20 x11vnc=0.9.13-1.1 xvfb=2:1.15.1-0ubuntu2.11 xinit=1.3.2-1 git=1:1.9.1-1ubuntu0.10 python=2.7.5-5ubuntu3 zip=3.0-8 xdg-utils=1.1.0~rc1-2ubuntu7.2 firefox=66.0.3+build1-0ubuntu0.14.04.1 python3-tk=3.4.3-1~14.04.2 python3-pexpect=3.1-1ubuntu0.1 fluxbox=1.3.5-2 x11-apps=7.7+2 swisswatch=0.6-14 man mesa-utils=8.1.0-2 sudo=1.8.9p5-1ubuntu1.4 bzip2=1.0.6-5 net-tools=1.60-25ubuntu2.1 -y )\n#  ##\n#   Set up a non-root user account.\n#  ##\nENV CUSER=\"stream\"\nENV CUSERPWORD=\"\\\"password.1234\\\"\"\nRUN useradd -ms /bin/bash ${CUSER}\nRUN adduser ${CUSER} sudo\n#   There is no need for the password to be known, so\n#   randomize it for now.\nRUN echo \"${CUSER}:${CUSERPWORD}${RANDOM} \" | chpasswd\nRUN echo \"${CUSER} ALL=NOPASSWD: ALL\" >> /etc/sudoers\n#  ####\n#   Switch to the non-root user,\n#   configure system and environment.\n#  ####\nUSER ${CUSER}\nENV HOME=\"/home/${CUSER}\"\nWORKDIR ${HOME}\nRUN mkdir ~/.vnc\n#  ##\n#   Create a .xinitrc file.\n#\n#   The environmental variable APORT = 5901 by default but can be\n#   overridden when invoking 'docker run', e.g.\n#     $ docker run -e APORT=4435\n#  ##\nRUN echo '/usr/bin/x11vnc -display :1 $SHARESTRING -autoport $APORT -repeat -forever &' > ~/.xinitrc.nopassword\nRUN echo '/usr/bin/x11vnc -usepw -display :1 $SHARESTRING -autoport $APORT -repeat -forever &' > ~/.xinitrc.password\nRUN echo \"/usr/bin/startfluxbox\" >> ~/.xinitrc.nopassword\nRUN echo \"/usr/bin/startfluxbox\" >> ~/.xinitrc.password\n#  ##\n#   Configure fluxbox.\n#  ##\nRUN mkdir ~/.fluxbox/\nRUN bash -c 'echo \"xterm &\" >> ~/.fluxbox/startup'\nRUN echo \"/usr/bin/fluxbox -log ~/.fluxbox/log\" >> ~/.fluxbox/startup\n#  ####\n#   Set up Websocket-based VNC.\n#  ####\n#  ##\n#   Expose Websocket port for VNC server.\n#  ##\nENV APORT=\"5901\"\nENV WPORT=\"6080\"\nEXPOSE ${WPORT}\nRUN git clone git://github.com/kanaka/noVNC\nRUN cp /home/${CUSER}/noVNC/vnc.html /home/${CUSER}/noVNC/index.html\n#  #\n#   Added an ssl-only option to a fork of noVNC,\n#   use the forked version until it is merged into official repo.\n#  #\nRUN cd /home/${CUSER}/noVNC/utils \\\n && git clone https://github.com/kanaka/websockify\n#  ##\n#   Install rclone from prebuilt binary.\n#  ##\nUSER root\nRUN curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip \\\n && unzip -j -d /usr/bin rclone-current-linux-amd64.zip\nUSER ${CUSER}\n#  ##\n#   We can parameterize screen dimensions\n#   with the following variables.\n#   e.g.\n#      docker run -p 6080:6080 -e SIZEH=800 -e SIZEW=640 -e CDEPTH=8 \\\n#                         -it [docker image] bootstrap.sh\n#  ##\nENV SIZEW=\"1680\"\nENV SIZEH=\"1050\"\nENV CDEPTH=\"24\"\n#  ##\n#   Set up an option to allow for sharing.\n#  ##\nENV SHARESTRING=\"--noshared\"\n#  ##\n#   Copy over a few files.\n#  ##\nCOPY start.sh ${HOME}/\nCOPY bootstrap.sh ${HOME}/\nCOPY Dockerfile.cloudstream.ubuntu ${HOME}/\nCOPY Dockerfile.template ${HOME}/\nCOPY README.md ${HOME}/\nCOPY COPYRIGHT_CLOUDSTREAM.md ${HOME}/\nCOPY RELEASE_NOTES.md ${HOME}/\nCOPY QUICKSTART.md ${HOME}/\nRUN mv README.md CLOUDSTREAM_README.md\nCOPY examples ${HOME}/examples\n#  ##\n#   Create a version file.\n#  ##\nENV VERSION_FILE=\"VERSION.md\"\nRUN echo \"CloudStream Version: \"$CLOUDSTREAM_VERSION\" $( date ;)\" > $VERSION_FILE\n#  ##\n#   A little housekeeping.\n#  ##\nUSER root\nRUN chown -R ${CUSER}:${CUSER} ${HOME}\nUSER ${CUSER}\n#  ##\n#   Run the bootstrap.sh script.\n#   This will set up/run the VNC environment,\n#   and execute the start.sh file if present.\n#  ##\nCMD /home/${CUSER}/bootstrap.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ####\n#\n#  Used to generate the 'unidata/cloudstream' docker container.\n#  Visit us on the web at http://www.unidata.ucar.edu\n#\n#  Copyright Unidata 2015 - 2018\n#\n# ####\nFROM ubuntu:trusty\nMAINTAINER Ward Fisher <wfisher@ucar.edu>\nENV CLOUDSTREAM_VERSION=\"development\"\n#  Set the following, required for IDV 5.5+\n#  ENV MESA_GL_VERSION_OVERRIDE 3.1\n# ####\n#  Update base docker image.\n# ####\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -y upgrade\n# ##\n#  Install bare minimum set of tools.\n# ##\nRUN apt-get install nano curl x11vnc xvfb xinit git python zip xdg-utils firefox python3-tk python3-pexpect fluxbox x11-apps swisswatch man mesa-utils sudo bzip2 net-tools -y\n# ##\n#  Set up a non-root user account.\n# ##\nENV CUSER=\"stream\"\nENV CUSERPWORD=\"\\\"password.1234\\\"\"\nRUN useradd -ms /bin/bash ${CUSER}\nRUN adduser ${CUSER} sudo\n#  There is no need for the password to be known, so\n#  randomize it for now.\nRUN echo \"${CUSER}:${CUSERPWORD}${RANDOM} \" | chpasswd\nRUN echo \"${CUSER} ALL=NOPASSWD: ALL\" >> /etc/sudoers\n# ####\n#  Switch to the non-root user,\n#  configure system and environment.\n# ####\nUSER ${CUSER}\nENV HOME=\"/home/${CUSER}\"\nWORKDIR ${HOME}\nRUN mkdir ~/.vnc\n# ##\n#  Create a .xinitrc file.\n#\n#  The environmental variable APORT = 5901 by default but can be\n#  overridden when invoking 'docker run', e.g.\n#    $ docker run -e APORT=4435\n# ##\nRUN echo '/usr/bin/x11vnc -display :1 $SHARESTRING -autoport $APORT -repeat -forever &' > ~/.xinitrc.nopassword\nRUN echo '/usr/bin/x11vnc -usepw -display :1 $SHARESTRING -autoport $APORT -repeat -forever &' > ~/.xinitrc.password\nRUN echo \"/usr/bin/startfluxbox\" >> ~/.xinitrc.nopassword\nRUN echo \"/usr/bin/startfluxbox\" >> ~/.xinitrc.password\n# ##\n#  Configure fluxbox.\n# ##\nRUN mkdir ~/.fluxbox/\nRUN bash -c 'echo \"xterm &\" >> ~/.fluxbox/startup'\nRUN echo \"/usr/bin/fluxbox -log ~/.fluxbox/log\" >> ~/.fluxbox/startup\n# ####\n#  Set up Websocket-based VNC.\n# ####\n# ##\n#  Expose Websocket port for VNC server.\n# ##\nENV APORT=\"5901\"\nENV WPORT=\"6080\"\nEXPOSE ${WPORT}\nRUN git clone git://github.com/kanaka/noVNC\nRUN cp /home/${CUSER}/noVNC/vnc.html /home/${CUSER}/noVNC/index.html\n# #\n#  Added an ssl-only option to a fork of noVNC,\n#  use the forked version until it is merged into official repo.\n# #\nRUN cd /home/${CUSER}/noVNC/utils \\\n && git clone https://github.com/kanaka/websockify\n# ##\n#  Install rclone from prebuilt binary.\n# ##\nUSER root\nRUN curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip \\\n && unzip -j -d /usr/bin rclone-current-linux-amd64.zip\nUSER ${CUSER}\n# ##\n#  We can parameterize screen dimensions\n#  with the following variables.\n#  e.g.\n#     docker run -p 6080:6080 -e SIZEH=800 -e SIZEW=640 -e CDEPTH=8 \\\n#                        -it [docker image] bootstrap.sh\n# ##\nENV SIZEW=\"1680\"\nENV SIZEH=\"1050\"\nENV CDEPTH=\"24\"\n# ##\n#  Set up an option to allow for sharing.\n# ##\nENV SHARESTRING=\"--noshared\"\n# ##\n#  Copy over a few files.\n# ##\nCOPY start.sh ${HOME}/\nCOPY bootstrap.sh ${HOME}/\nCOPY Dockerfile.cloudstream.ubuntu ${HOME}/\nCOPY Dockerfile.template ${HOME}/\nCOPY README.md ${HOME}/\nCOPY COPYRIGHT_CLOUDSTREAM.md ${HOME}/\nCOPY RELEASE_NOTES.md ${HOME}/\nCOPY QUICKSTART.md ${HOME}/\nRUN mv README.md CLOUDSTREAM_README.md\nADD examples ${HOME}/examples\n# ##\n#  Create a version file.\n# ##\nENV VERSION_FILE=\"VERSION.md\"\nRUN echo \"CloudStream Version: \"$CLOUDSTREAM_VERSION\" $( date ;)\" > $VERSION_FILE\n# ##\n#  A little housekeeping.\n# ##\nUSER root\nRUN chown -R ${CUSER}:${CUSER} ${HOME}\nUSER ${CUSER}\n# ##\n#  Run the bootstrap.sh script.\n#  This will set up/run the VNC environment,\n#  and execute the start.sh file if present.\n# ##\nCMD /home/${CUSER}/bootstrap.sh\n","injectedSmells":[],"originalDockerfileHash":"36688bf3b649492ab3f3171ccc516276","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ####\n#\n#   Used to generate the 'unidata/cloudstream' docker container.\n#   Visit us on the web at http://www.unidata.ucar.edu\n#\n#   Copyright Unidata 2015 - 2018\n#\n#  ####\nFROM ubuntu:trusty\nMAINTAINER Ward Fisher <wfisher@ucar.edu>\nENV CLOUDSTREAM_VERSION=\"development\"\n#   Set the following, required for IDV 5.5+\n#   ENV MESA_GL_VERSION_OVERRIDE 3.1\n#  ####\n#   Update base docker image.\n#  ####\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -y upgrade\n#  ##\n#   Install bare minimum set of tools.\n#  ##\nRUN apt-get install nano curl x11vnc xvfb xinit git python zip xdg-utils firefox python3-tk python3-pexpect fluxbox x11-apps swisswatch man mesa-utils sudo bzip2 net-tools -y\n#  ##\n#   Set up a non-root user account.\n#  ##\nENV CUSER=\"stream\"\nENV CUSERPWORD=\"\\\"password.1234\\\"\"\nRUN useradd -ms /bin/bash ${CUSER}\nRUN adduser ${CUSER} sudo\n#   There is no need for the password to be known, so\n#   randomize it for now.\nRUN echo \"${CUSER}:${CUSERPWORD}${RANDOM} \" | chpasswd\nRUN echo \"${CUSER} ALL=NOPASSWD: ALL\" >> /etc/sudoers\n#  ####\n#   Switch to the non-root user,\n#   configure system and environment.\n#  ####\nUSER ${CUSER}\nENV HOME=\"/home/${CUSER}\"\nWORKDIR ${HOME}\nRUN mkdir ~/.vnc\n#  ##\n#   Create a .xinitrc file.\n#\n#   The environmental variable APORT = 5901 by default but can be\n#   overridden when invoking 'docker run', e.g.\n#     $ docker run -e APORT=4435\n#  ##\nRUN echo '/usr/bin/x11vnc -display :1 $SHARESTRING -autoport $APORT -repeat -forever &' > ~/.xinitrc.nopassword\nRUN echo '/usr/bin/x11vnc -usepw -display :1 $SHARESTRING -autoport $APORT -repeat -forever &' > ~/.xinitrc.password\nRUN echo \"/usr/bin/startfluxbox\" >> ~/.xinitrc.nopassword\nRUN echo \"/usr/bin/startfluxbox\" >> ~/.xinitrc.password\n#  ##\n#   Configure fluxbox.\n#  ##\nRUN mkdir ~/.fluxbox/\nRUN bash -c 'echo \"xterm &\" >> ~/.fluxbox/startup'\nRUN echo \"/usr/bin/fluxbox -log ~/.fluxbox/log\" >> ~/.fluxbox/startup\n#  ####\n#   Set up Websocket-based VNC.\n#  ####\n#  ##\n#   Expose Websocket port for VNC server.\n#  ##\nENV APORT=\"5901\"\nENV WPORT=\"6080\"\nEXPOSE ${WPORT}\nRUN git clone git://github.com/kanaka/noVNC\nRUN cp /home/${CUSER}/noVNC/vnc.html /home/${CUSER}/noVNC/index.html\n#  #\n#   Added an ssl-only option to a fork of noVNC,\n#   use the forked version until it is merged into official repo.\n#  #\nRUN cd /home/${CUSER}/noVNC/utils \\\n && git clone https://github.com/kanaka/websockify\n#  ##\n#   Install rclone from prebuilt binary.\n#  ##\nUSER root\nRUN curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip \\\n && unzip -j -d /usr/bin rclone-current-linux-amd64.zip\nUSER ${CUSER}\n#  ##\n#   We can parameterize screen dimensions\n#   with the following variables.\n#   e.g.\n#      docker run -p 6080:6080 -e SIZEH=800 -e SIZEW=640 -e CDEPTH=8 \\\n#                         -it [docker image] bootstrap.sh\n#  ##\nENV SIZEW=\"1680\"\nENV SIZEH=\"1050\"\nENV CDEPTH=\"24\"\n#  ##\n#   Set up an option to allow for sharing.\n#  ##\nENV SHARESTRING=\"--noshared\"\n#  ##\n#   Copy over a few files.\n#  ##\nCOPY start.sh ${HOME}/\nCOPY bootstrap.sh ${HOME}/\nCOPY Dockerfile.cloudstream.ubuntu ${HOME}/\nCOPY Dockerfile.template ${HOME}/\nCOPY README.md ${HOME}/\nCOPY COPYRIGHT_CLOUDSTREAM.md ${HOME}/\nCOPY RELEASE_NOTES.md ${HOME}/\nCOPY QUICKSTART.md ${HOME}/\nRUN mv README.md CLOUDSTREAM_README.md\nADD examples ${HOME}/examples\n#  ##\n#   Create a version file.\n#  ##\nENV VERSION_FILE=\"VERSION.md\"\nRUN echo \"CloudStream Version: \"$CLOUDSTREAM_VERSION\" $( date ;)\" > $VERSION_FILE\n#  ##\n#   A little housekeeping.\n#  ##\nUSER root\nRUN chown -R ${CUSER}:${CUSER} ${HOME}\nUSER ${CUSER}\n#  ##\n#   Run the bootstrap.sh script.\n#   This will set up/run the VNC environment,\n#   and execute the start.sh file if present.\n#  ##\nCMD /home/${CUSER}/bootstrap.sh\n","originalDockerfileUglifiedHash":"30bf777393b59cb8f13bb91eadd7ff53","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bfd6dfefdc3561e654e6592879a41822d93d19a3.dockerfile"}