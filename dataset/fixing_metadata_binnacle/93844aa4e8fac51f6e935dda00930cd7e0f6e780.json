{"seed":2854485487,"processedDockerfileHash":"8a0f1b1935bff19e438876ed9aa94d94","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:8.0-devel-ubuntu14.04\nLABEL maintainer=\"\\\"patlekano@gmail.com\\\"\"\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#   setup environment\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\n#   setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu trusty main\" > /etc/apt/sources.list.d/ros-latest.list\n#   install bootstrap tools\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends python-rosdep python-rosinstall python-vcstools --allow-unauthenticated -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   bootstrap rosdep\nRUN rosdep init \\\n && rosdep update\n#   install ros packages\nENV ROS_DISTRO=\"indigo\"\n#   # setup entrypoint\n#   COPY ./ros_entrypoint.sh /\n#   ENTRYPOINT [\"/ros_entrypoint.sh\"]\n#   CMD [\"bash\"]\nENV TERM=\"xterm\"\n#   ros-indigo-ros-base\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential gcc g++ wget make nano curl protobuf-compiler libhdf5-dev libprotobuf-dev protobuf-compiler swig python-pygame python-pip python-dev git libgflags-dev libgoogle-glog-dev liblmdb-dev autoconf automake libtool unzip libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libatlas-base-dev libopenblas-dev ros-indigo-desktop-full=1.1.4-0* -y --allow-unauthenticated ) \\\n && rm -rf /var/lib/apt/lists/*\n#\n#\n#   Start with Caffe dependencies\n#  We need this for boost\nRUN pip install b2==3.8.0 --upgrade\nENV ROOT_DIR=\"/root\"\nRUN cd $ROOT_DIR \\\n && wget https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.gz \\\n && tar -zvxf boost_1_61_0.tar.gz \\\n && cd boost_1_61_0 \\\n && ./bootstrap.sh --prefix=/usr/local --with-libraries=program_options atomic link=static runtime-link=shared threading=multi \\\n && ./b2 install \\\n && cd $ROOT_DIR \\\n && rm boost*.gz\n#\n#  protobuf-compiler\nENV PROTOBUF=\"/root/protobuf\"\nRUN git clone https://github.com/google/protobuf.git \\\n && cd protobuf \\\n && bash autogen.sh \\\n && ./configure \\\n && make -j \\\n && make install \\\n && ldconfig \\\n && cd ../ \\\n && rm -rf protobuf\nRUN cd /root \\\n && wget https://ecs.utdallas.edu/~opo140030/docker_files/cudnn.tar.gz \\\n && tar -zvxf cudnn.tar.gz \\\n && cd cudnnv5.1 \\\n && cp include/cudnn.h /usr/local/cuda/include \\\n && cp include/cudnn.h /usr/local/cuda-8.0/include \\\n && cp lib64/*.* /usr/local/cuda-8.0/lib64 \\\n && cp lib64/*.* /usr/local/cuda/lib64 \\\n && rm /root/cudnn* -rf\n#  clone caffe\nENV CAFFE_ROOT=\"/root/caffe/\"\nRUN cd ~ \\\n && git clone https://github.com/BVLC/caffe.git\nCOPY CaffeCMake.txt $CAFFE_ROOT/CMakeLists.txt\nRUN cd $CAFFE_ROOT \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_CUDNN=ON .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Setup catkin workspace\nRUN /bin/bash -c echo \"source /opt/ros/indigo/setup.bash\" >> ~/.bashrc \\\n && /bin/bash -c echo \"export PYTHONPATH=${PYTHONPATH:+:${PYTHONPATH}}:/root/caffe/python:/root/catkin_ws/src/gps\" >> ~/.bashrc \\\n && /bin/bash -c echo \" source /usr/local/etc/bash_completion.d/catkin_tools-completion.bash\" >> ~/.bashrc \\\n && /bin/bash -c \"source /root/.bashrc\" \\\n && /bin/bash -c echo \"export CAFFE_ROOT=/root/caffe/build\"\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python ./get-pip.py \\\n && (apt-get update ;apt-get install --no-install-recommends python-pip ) \\\n && rm get-pip.py\n#  install catkin build\nRUN pip install catkin_tools==0.9.0 -U\nENV CATKIN_WS=\"/root/catkin_ws\"\nRUN mkdir -p $CATKIN_WS/src \\\n && cd $CATKIN_WS/src \\\n && mkdir gps\nCOPY . $CATKIN_WS/src/gps\nRUN /bin/bash -c \"source /opt/ros/indigo/setup.bash\" \\\n && cd $CATKIN_WS/src/gps \\\n && rm CaffeCMake.txt \\\n && ./compile_proto.sh \\\n && cd gps_agent_pkg \\\n && echo \"deb http://packages.ros.org/ros/ubuntu $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/ros-latest.list \\\n && apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n && : \\\n && rosdep install --from-paths -r -y . \\\n && cd /root \\\n && git clone https://github.com/pybox2d/pybox2d \\\n && cd pybox2d \\\n && python setup.py build \\\n && python setup.py install \\\n && rm -rf /root/pybox2d\n#   split this to help debugging during build process\nRUN cd $CATKIN_WS/src/gps \\\n && chmod 777 *.sh \\\n && cp *.sh $CATKIN_WS \\\n && pip install -r requirements.txt \\\n && rm -rf /var/lib/apt/lists/*\n#  ADD setup.sh $ROOT_DIR\n#   \n#   RUN cd $ROOT_DIR \\\n#       && bash setup.sh \\\n#       && cd $CATKIN_WS/src \\\n#       && catkin init \\\n#       && cd $CATKIN_WS \\\n#       && export CAFFE_ROOT=/root/caffe/ \\\n#       && catkin build\nRUN echo \" =========== Build Complete ========= \"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:8.0-devel-ubuntu14.04\nLABEL maintainer=\"\\\"patlekano@gmail.com\\\"\"\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#  setup environment\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\n#  setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu trusty main\" > /etc/apt/sources.list.d/ros-latest.list\n#  install bootstrap tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-rosdep python-rosinstall python-vcstools --allow-unauthenticated -y \\\n && rm -rf /var/lib/apt/lists/*\n#  bootstrap rosdep\nRUN rosdep init \\\n && rosdep update\n#  install ros packages\nENV ROS_DISTRO=\"indigo\"\n#  # setup entrypoint\n#  COPY ./ros_entrypoint.sh /\n#  ENTRYPOINT [\"/ros_entrypoint.sh\"]\n#  CMD [\"bash\"]\nENV TERM=\"xterm\"\n#  ros-indigo-ros-base\nRUN apt-get update \\\n && apt-get install build-essential gcc g++ wget make nano curl protobuf-compiler libhdf5-dev libprotobuf-dev protobuf-compiler swig python-pygame python-pip python-dev git libgflags-dev libgoogle-glog-dev liblmdb-dev autoconf automake libtool unzip libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libatlas-base-dev libopenblas-dev ros-indigo-desktop-full=1.1.4-0* -y --allow-unauthenticated \\\n && rm -rf /var/lib/apt/lists/*\n#\n#\n#  Start with Caffe dependencies\n# We need this for boost\nRUN pip install b2 --upgrade\nENV ROOT_DIR=\"/root\"\nRUN cd $ROOT_DIR \\\n && wget https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.gz \\\n && tar -zvxf boost_1_61_0.tar.gz \\\n && cd boost_1_61_0 \\\n && ./bootstrap.sh --prefix=/usr/local --with-libraries=program_options atomic link=static runtime-link=shared threading=multi \\\n && ./b2 install \\\n && cd $ROOT_DIR \\\n && rm boost*.gz\n#\n# protobuf-compiler\nENV PROTOBUF=\"/root/protobuf\"\nRUN git clone https://github.com/google/protobuf.git \\\n && cd protobuf \\\n && bash autogen.sh \\\n && ./configure \\\n && make -j \\\n && make install \\\n && ldconfig \\\n && cd ../ \\\n && rm -rf protobuf\nRUN cd /root \\\n && wget https://ecs.utdallas.edu/~opo140030/docker_files/cudnn.tar.gz \\\n && tar -zvxf cudnn.tar.gz \\\n && cd cudnnv5.1 \\\n && cp include/cudnn.h /usr/local/cuda/include \\\n && cp include/cudnn.h /usr/local/cuda-8.0/include \\\n && cp lib64/*.* /usr/local/cuda-8.0/lib64 \\\n && cp lib64/*.* /usr/local/cuda/lib64 \\\n && rm /root/cudnn* -rf\n# clone caffe\nENV CAFFE_ROOT=\"/root/caffe/\"\nRUN cd ~ \\\n && git clone https://github.com/BVLC/caffe.git\nCOPY CaffeCMake.txt $CAFFE_ROOT/CMakeLists.txt\nRUN cd $CAFFE_ROOT \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_CUDNN=ON .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#  Setup catkin workspace\nRUN /bin/bash -c echo \"source /opt/ros/indigo/setup.bash\" >> ~/.bashrc \\\n && /bin/bash -c echo \"export PYTHONPATH=${PYTHONPATH:+:${PYTHONPATH}}:/root/caffe/python:/root/catkin_ws/src/gps\" >> ~/.bashrc \\\n && /bin/bash -c echo \" source /usr/local/etc/bash_completion.d/catkin_tools-completion.bash\" >> ~/.bashrc \\\n && /bin/bash -c \"source /root/.bashrc\" \\\n && /bin/bash -c echo \"export CAFFE_ROOT=/root/caffe/build\"\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python ./get-pip.py \\\n && apt-get install python-pip \\\n && rm get-pip.py\n# install catkin build\nRUN pip install catkin_tools -U\nENV CATKIN_WS=\"/root/catkin_ws\"\nRUN mkdir -p $CATKIN_WS/src \\\n && cd $CATKIN_WS/src \\\n && mkdir gps\nCOPY . $CATKIN_WS/src/gps\nRUN /bin/bash -c \"source /opt/ros/indigo/setup.bash\" \\\n && cd $CATKIN_WS/src/gps \\\n && rm CaffeCMake.txt \\\n && ./compile_proto.sh \\\n && cd gps_agent_pkg \\\n && echo \"deb http://packages.ros.org/ros/ubuntu $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/ros-latest.list \\\n && apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n && apt-get update \\\n && rosdep install --from-paths -r -y . \\\n && cd /root \\\n && git clone https://github.com/pybox2d/pybox2d \\\n && cd pybox2d \\\n && python setup.py build \\\n && python setup.py install \\\n && rm -rf /root/pybox2d\n#  split this to help debugging during build process\nRUN cd $CATKIN_WS/src/gps \\\n && chmod 777 *.sh \\\n && cp *.sh $CATKIN_WS \\\n && pip install -r requirements.txt \\\n && rm -rf /var/lib/apt/lists/*\n# ADD setup.sh $ROOT_DIR\n#  \n#  RUN cd $ROOT_DIR \\\n#      && bash setup.sh \\\n#      && cd $CATKIN_WS/src \\\n#      && catkin init \\\n#      && cd $CATKIN_WS \\\n#      && export CAFFE_ROOT=/root/caffe/ \\\n#      && catkin build\nRUN echo \" =========== Build Complete ========= \"\n","injectedSmells":[],"originalDockerfileHash":"f7d76994494e429b24e095e2aa23fdef","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:8.0-devel-ubuntu14.04\nLABEL maintainer=\"\\\"patlekano@gmail.com\\\"\"\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#   setup environment\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\n#   setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu trusty main\" > /etc/apt/sources.list.d/ros-latest.list\n#   install bootstrap tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-rosdep python-rosinstall python-vcstools --allow-unauthenticated -y \\\n && rm -rf /var/lib/apt/lists/*\n#   bootstrap rosdep\nRUN rosdep init \\\n && rosdep update\n#   install ros packages\nENV ROS_DISTRO=\"indigo\"\n#   # setup entrypoint\n#   COPY ./ros_entrypoint.sh /\n#   ENTRYPOINT [\"/ros_entrypoint.sh\"]\n#   CMD [\"bash\"]\nENV TERM=\"xterm\"\n#   ros-indigo-ros-base\nRUN apt-get update \\\n && apt-get install build-essential gcc g++ wget make nano curl protobuf-compiler libhdf5-dev libprotobuf-dev protobuf-compiler swig python-pygame python-pip python-dev git libgflags-dev libgoogle-glog-dev liblmdb-dev autoconf automake libtool unzip libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libatlas-base-dev libopenblas-dev ros-indigo-desktop-full=1.1.4-0* -y --allow-unauthenticated \\\n && rm -rf /var/lib/apt/lists/*\n#\n#\n#   Start with Caffe dependencies\n#  We need this for boost\nRUN pip install b2 --upgrade\nENV ROOT_DIR=\"/root\"\nRUN cd $ROOT_DIR \\\n && wget https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.gz \\\n && tar -zvxf boost_1_61_0.tar.gz \\\n && cd boost_1_61_0 \\\n && ./bootstrap.sh --prefix=/usr/local --with-libraries=program_options atomic link=static runtime-link=shared threading=multi \\\n && ./b2 install \\\n && cd $ROOT_DIR \\\n && rm boost*.gz\n#\n#  protobuf-compiler\nENV PROTOBUF=\"/root/protobuf\"\nRUN git clone https://github.com/google/protobuf.git \\\n && cd protobuf \\\n && bash autogen.sh \\\n && ./configure \\\n && make -j \\\n && make install \\\n && ldconfig \\\n && cd ../ \\\n && rm -rf protobuf\nRUN cd /root \\\n && wget https://ecs.utdallas.edu/~opo140030/docker_files/cudnn.tar.gz \\\n && tar -zvxf cudnn.tar.gz \\\n && cd cudnnv5.1 \\\n && cp include/cudnn.h /usr/local/cuda/include \\\n && cp include/cudnn.h /usr/local/cuda-8.0/include \\\n && cp lib64/*.* /usr/local/cuda-8.0/lib64 \\\n && cp lib64/*.* /usr/local/cuda/lib64 \\\n && rm /root/cudnn* -rf\n#  clone caffe\nENV CAFFE_ROOT=\"/root/caffe/\"\nRUN cd ~ \\\n && git clone https://github.com/BVLC/caffe.git\nCOPY CaffeCMake.txt $CAFFE_ROOT/CMakeLists.txt\nRUN cd $CAFFE_ROOT \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_CUDNN=ON .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Setup catkin workspace\nRUN /bin/bash -c echo \"source /opt/ros/indigo/setup.bash\" >> ~/.bashrc \\\n && /bin/bash -c echo \"export PYTHONPATH=${PYTHONPATH:+:${PYTHONPATH}}:/root/caffe/python:/root/catkin_ws/src/gps\" >> ~/.bashrc \\\n && /bin/bash -c echo \" source /usr/local/etc/bash_completion.d/catkin_tools-completion.bash\" >> ~/.bashrc \\\n && /bin/bash -c \"source /root/.bashrc\" \\\n && /bin/bash -c echo \"export CAFFE_ROOT=/root/caffe/build\"\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python ./get-pip.py \\\n && apt-get install python-pip \\\n && rm get-pip.py\n#  install catkin build\nRUN pip install catkin_tools -U\nENV CATKIN_WS=\"/root/catkin_ws\"\nRUN mkdir -p $CATKIN_WS/src \\\n && cd $CATKIN_WS/src \\\n && mkdir gps\nCOPY . $CATKIN_WS/src/gps\nRUN /bin/bash -c \"source /opt/ros/indigo/setup.bash\" \\\n && cd $CATKIN_WS/src/gps \\\n && rm CaffeCMake.txt \\\n && ./compile_proto.sh \\\n && cd gps_agent_pkg \\\n && echo \"deb http://packages.ros.org/ros/ubuntu $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/ros-latest.list \\\n && apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n && apt-get update \\\n && rosdep install --from-paths -r -y . \\\n && cd /root \\\n && git clone https://github.com/pybox2d/pybox2d \\\n && cd pybox2d \\\n && python setup.py build \\\n && python setup.py install \\\n && rm -rf /root/pybox2d\n#   split this to help debugging during build process\nRUN cd $CATKIN_WS/src/gps \\\n && chmod 777 *.sh \\\n && cp *.sh $CATKIN_WS \\\n && pip install -r requirements.txt \\\n && rm -rf /var/lib/apt/lists/*\n#  ADD setup.sh $ROOT_DIR\n#   \n#   RUN cd $ROOT_DIR \\\n#       && bash setup.sh \\\n#       && cd $CATKIN_WS/src \\\n#       && catkin init \\\n#       && cd $CATKIN_WS \\\n#       && export CAFFE_ROOT=/root/caffe/ \\\n#       && catkin build\nRUN echo \" =========== Build Complete ========= \"\n","originalDockerfileUglifiedHash":"79a209df52db10372bef8225f4624785","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/93844aa4e8fac51f6e935dda00930cd7e0f6e780.dockerfile"}