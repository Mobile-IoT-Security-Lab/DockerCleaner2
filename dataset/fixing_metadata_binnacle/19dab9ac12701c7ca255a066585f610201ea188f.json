{"seed":1451314249,"processedDockerfileHash":"0f0579ca53d76caef9d1c85ce33b729f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##########\n#  # Usage ##\n#  ##########\n#   sp-society-camera-model-identification should be in the $CODE directory.\n#   alias andres=\"docker run --runtime=nvidia --init -it --rm \\\n#                 --ipc=host \\\n#                 -v $CODE:/code -v $DATA:/data \\\n#                 -w=/code/sp-society-camera-model-identification \\\n#                 mwksmith/cam:andres\"\n#   When you get into the container enter \"sa\" to activate the conda environment,\n#   then create sym links to your data folders according to the globals set in train.py,\n#   then run train.py.\n#   Direct questions here: https://www.kaggle.com/c/sp-society-camera-model-identification/discussion/48293#274879\n#   Mini-tutorial on docker run options: https://github.com/MattKleinsmith/dockerfiles/tree/master/fastai#explanation\n#  ##########\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#   To allow unicode characters in the terminal\nENV LANG=\"C.UTF-8\"\n#  ##########\n#  # Tools ##\n#  ##########\nRUN apt-get update --fix-missing \\\n && apt-get install --no-install-recommends wget vim git unzip -y\n#  #############\n#  # Anaconda ##\n#  #############\nRUN apt-get update --fix-missing \\\n && apt-get install --no-install-recommends libglib2.0-0 libsm6 libxext6 libxrender1 -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\n#  ###############\n#  # Tensorflow ##\n#  ###############\n#   https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential curl libfreetype6-dev libpng12-dev libzmq3-dev pkg-config python python-dev rsync software-properties-common unzip -y\nRUN conda create -n tf python=3.5 anaconda\nRUN /bin/bash -c \" source activate tf \\\n && pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp35-cp35m-linux_x86_64.whl\"\n#  ##########\n#  # Keras ##\n#  ##########\nRUN /bin/bash -c \"source activate tf \\\n && pip install keras\"\n#  ########################\n#  # Andres dependencies ##\n#  ########################\nRUN /bin/bash -c \"source activate tf \\\n && pip install numpngw tqdm jpeg4py opencv-python conditional\"\nRUN apt-get install --no-install-recommends libturbojpeg -y\n#   Add sym links to:\n#     train\n#     test\n#     models\n#  ##########\n#  # Other ##\n#  ##########\n#   TODO: MKL\nRUN echo \"export CUDA_DEVICE_ORDER=PCI_BUS_ID\" >> ~/.bashrc\nRUN echo \"alias sa=\\\"source activate tf\\\"\" >> ~/.bashrc\nCMD bash\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##########\n# # Usage ##\n# ##########\n#  sp-society-camera-model-identification should be in the $CODE directory.\n#  alias andres=\"docker run --runtime=nvidia --init -it --rm \\\n#                --ipc=host \\\n#                -v $CODE:/code -v $DATA:/data \\\n#                -w=/code/sp-society-camera-model-identification \\\n#                mwksmith/cam:andres\"\n#  When you get into the container enter \"sa\" to activate the conda environment,\n#  then create sym links to your data folders according to the globals set in train.py,\n#  then run train.py.\n#  Direct questions here: https://www.kaggle.com/c/sp-society-camera-model-identification/discussion/48293#274879\n#  Mini-tutorial on docker run options: https://github.com/MattKleinsmith/dockerfiles/tree/master/fastai#explanation\n# ##########\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#  To allow unicode characters in the terminal\nENV LANG=\"C.UTF-8\"\n# ##########\n# # Tools ##\n# ##########\nRUN apt-get update --fix-missing \\\n && apt-get install wget vim git unzip -y\n# #############\n# # Anaconda ##\n# #############\nRUN apt-get update --fix-missing \\\n && apt-get install libglib2.0-0 libsm6 libxext6 libxrender1 -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\n# ###############\n# # Tensorflow ##\n# ###############\n#  https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential curl libfreetype6-dev libpng12-dev libzmq3-dev pkg-config python python-dev rsync software-properties-common unzip -y\nRUN conda create -n tf python=3.5 anaconda\nRUN /bin/bash -c \" source activate tf \\\n && pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp35-cp35m-linux_x86_64.whl\"\n# ##########\n# # Keras ##\n# ##########\nRUN /bin/bash -c \"source activate tf \\\n && pip install keras\"\n# ########################\n# # Andres dependencies ##\n# ########################\nRUN /bin/bash -c \"source activate tf \\\n && pip install numpngw tqdm jpeg4py opencv-python conditional\"\nRUN apt-get install libturbojpeg -y\n#  Add sym links to:\n#    train\n#    test\n#    models\n# ##########\n# # Other ##\n# ##########\n#  TODO: MKL\nRUN echo \"export CUDA_DEVICE_ORDER=PCI_BUS_ID\" >> ~/.bashrc\nRUN echo \"alias sa=\\\"source activate tf\\\"\" >> ~/.bashrc\nCMD bash\n","injectedSmells":[],"originalDockerfileHash":"fa49d5f17a0804882ebb5d1556814c49","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##########\n#  # Usage ##\n#  ##########\n#   sp-society-camera-model-identification should be in the $CODE directory.\n#   alias andres=\"docker run --runtime=nvidia --init -it --rm \\\n#                 --ipc=host \\\n#                 -v $CODE:/code -v $DATA:/data \\\n#                 -w=/code/sp-society-camera-model-identification \\\n#                 mwksmith/cam:andres\"\n#   When you get into the container enter \"sa\" to activate the conda environment,\n#   then create sym links to your data folders according to the globals set in train.py,\n#   then run train.py.\n#   Direct questions here: https://www.kaggle.com/c/sp-society-camera-model-identification/discussion/48293#274879\n#   Mini-tutorial on docker run options: https://github.com/MattKleinsmith/dockerfiles/tree/master/fastai#explanation\n#  ##########\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#   To allow unicode characters in the terminal\nENV LANG=\"C.UTF-8\"\n#  ##########\n#  # Tools ##\n#  ##########\nRUN apt-get update --fix-missing \\\n && apt-get install wget vim git unzip -y\n#  #############\n#  # Anaconda ##\n#  #############\nRUN apt-get update --fix-missing \\\n && apt-get install libglib2.0-0 libsm6 libxext6 libxrender1 -y\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\n#  ###############\n#  # Tensorflow ##\n#  ###############\n#   https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential curl libfreetype6-dev libpng12-dev libzmq3-dev pkg-config python python-dev rsync software-properties-common unzip -y\nRUN conda create -n tf python=3.5 anaconda\nRUN /bin/bash -c \" source activate tf \\\n && pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp35-cp35m-linux_x86_64.whl\"\n#  ##########\n#  # Keras ##\n#  ##########\nRUN /bin/bash -c \"source activate tf \\\n && pip install keras\"\n#  ########################\n#  # Andres dependencies ##\n#  ########################\nRUN /bin/bash -c \"source activate tf \\\n && pip install numpngw tqdm jpeg4py opencv-python conditional\"\nRUN apt-get install libturbojpeg -y\n#   Add sym links to:\n#     train\n#     test\n#     models\n#  ##########\n#  # Other ##\n#  ##########\n#   TODO: MKL\nRUN echo \"export CUDA_DEVICE_ORDER=PCI_BUS_ID\" >> ~/.bashrc\nRUN echo \"alias sa=\\\"source activate tf\\\"\" >> ~/.bashrc\nCMD bash\n","originalDockerfileUglifiedHash":"6eb59e227f1c67f714b4fc6277402604","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/19dab9ac12701c7ca255a066585f610201ea188f.dockerfile"}