{"seed":2624265419,"processedDockerfileHash":"da5fa66d854b5f184e13f3eceb2ef8cb","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   PHP Docker image for Yii 2.0 Framework runtime\n#   ==============================================\nARG PHP_BASE_IMAGE_VERSION\nFROM php:${PHP_BASE_IMAGE_VERSION}-fpm\n#   Install system packages for PHP extensions recommended for Yii 2.0 Framework\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg2 -y \\\n && curl -sL https://deb.nodesource.com/setup_6.x | bash - \\\n && apt-key update \\\n && apt-get update \\\n && apt-get install --no-install-recommends g++ git bash-completion curl imagemagick libfreetype6-dev libcurl3-dev libicu-dev libmcrypt-dev libfreetype6-dev libjpeg-dev libjpeg62-turbo-dev libmagickwand-dev libmcrypt-dev libpq-dev libpng-dev zlib1g-dev mysql-client openssh-client libxml2-dev nano linkchecker nodejs -y \\\n && apt-get clean \\\n && npm install npm@latest -g \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install PHP extensions required for Yii 2.0 Framework\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure bcmath \\\n && docker-php-ext-install soap zip curl bcmath exif gd iconv intl mbstring opcache pdo_mysql pdo_pgsql\n#   Install PECL extensions\n#   see http://stackoverflow.com/a/8154466/291573) for usage of `printf`\nRUN printf \"\\n\" | pecl install apcu-5.1.3 imagick mcrypt-1.0.0 \\\n && docker-php-ext-enable apcu imagick\n#   Install xdebug\nRUN cd /tmp \\\n && git clone git://github.com/xdebug/xdebug.git \\\n && cd xdebug \\\n && git checkout 52adff7539109db592d07d3f6c325f6ee2a7669f \\\n && phpize \\\n && ./configure --enable-xdebug \\\n && make \\\n && make install \\\n && rm -rf /tmp/xdebug\n#   Install less-compiler\nRUN npm install less@4.1.3 lesshint@6.3.7 uglify-js@3.17.4 uglifycss@0.0.29 -g\n#   Install Yii framework bash autocompletion\nRUN curl -L https://raw.githubusercontent.com/yiisoft/yii2/master/contrib/completion/bash/yii -o /etc/bash_completion.d/yii\nENV PHP_USER_ID=\"33\" \\\n    PHP_ENABLE_XDEBUG=\"0\" \\\n    VERSION_COMPOSER_ASSET_PLUGIN=\"^1.4.3\" \\\n    VERSION_PRESTISSIMO_PLUGIN=\"^0.3.0\" \\\n    PATH=\"/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\" \\\n    TERM=\"linux\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Add configuration files\nCOPY image-files/ /\n#   Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 /usr/local/bin/docker-entrypoint.sh /usr/local/bin/docker-run.sh /usr/local/bin/composer\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --filename=composer.phar --install-dir=/usr/local/bin \\\n && composer global require --optimize-autoloader \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" \\\n && composer global dumpautoload --optimize \\\n && composer clear-cache\nWORKDIR /app\n#   Startup script for FPM\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"docker-run.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  PHP Docker image for Yii 2.0 Framework runtime\n#  ==============================================\nARG PHP_BASE_IMAGE_VERSION\nFROM php:${PHP_BASE_IMAGE_VERSION}-fpm\n#  Install system packages for PHP extensions recommended for Yii 2.0 Framework\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install gnupg2 -y \\\n && curl -sL https://deb.nodesource.com/setup_6.x | bash - \\\n && apt-key update \\\n && apt-get update \\\n && apt-get install --no-install-recommends g++ git bash-completion curl imagemagick libfreetype6-dev libcurl3-dev libicu-dev libmcrypt-dev libfreetype6-dev libjpeg-dev libjpeg62-turbo-dev libmagickwand-dev libmcrypt-dev libpq-dev libpng-dev zlib1g-dev mysql-client openssh-client libxml2-dev nano linkchecker nodejs -y \\\n && apt-get clean \\\n && npm install npm@latest -g \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Install PHP extensions required for Yii 2.0 Framework\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure bcmath \\\n && docker-php-ext-install soap zip curl bcmath exif gd iconv intl mbstring opcache pdo_mysql pdo_pgsql\n#  Install PECL extensions\n#  see http://stackoverflow.com/a/8154466/291573) for usage of `printf`\nRUN printf \"\\n\" | pecl install apcu-5.1.3 imagick mcrypt-1.0.0 \\\n && docker-php-ext-enable apcu imagick\n#  Install xdebug\nRUN cd /tmp \\\n && git clone git://github.com/xdebug/xdebug.git \\\n && cd xdebug \\\n && git checkout 52adff7539109db592d07d3f6c325f6ee2a7669f \\\n && phpize \\\n && ./configure --enable-xdebug \\\n && make \\\n && make install \\\n && rm -rf /tmp/xdebug\n#  Install less-compiler\nRUN npm install less lesshint uglify-js uglifycss -g\n#  Install Yii framework bash autocompletion\nRUN curl -L https://raw.githubusercontent.com/yiisoft/yii2/master/contrib/completion/bash/yii -o /etc/bash_completion.d/yii\nENV PHP_USER_ID=\"33\" \\\n    PHP_ENABLE_XDEBUG=\"0\" \\\n    VERSION_COMPOSER_ASSET_PLUGIN=\"^1.4.3\" \\\n    VERSION_PRESTISSIMO_PLUGIN=\"^0.3.0\" \\\n    PATH=\"/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\" \\\n    TERM=\"linux\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\"\n#  Add configuration files\nCOPY image-files/ /\n#  Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 /usr/local/bin/docker-entrypoint.sh /usr/local/bin/docker-run.sh /usr/local/bin/composer\n#  Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --filename=composer.phar --install-dir=/usr/local/bin \\\n && composer global require --optimize-autoloader \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" \\\n && composer global dumpautoload --optimize \\\n && composer clear-cache\nWORKDIR /app\n#  Startup script for FPM\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"docker-run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"f351f6d40096e7eb99fdf0c09c6b1ccb","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   PHP Docker image for Yii 2.0 Framework runtime\n#   ==============================================\nARG PHP_BASE_IMAGE_VERSION\nFROM php:${PHP_BASE_IMAGE_VERSION}-fpm\n#   Install system packages for PHP extensions recommended for Yii 2.0 Framework\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install gnupg2 -y \\\n && curl -sL https://deb.nodesource.com/setup_6.x | bash - \\\n && apt-key update \\\n && apt-get update \\\n && apt-get install --no-install-recommends g++ git bash-completion curl imagemagick libfreetype6-dev libcurl3-dev libicu-dev libmcrypt-dev libfreetype6-dev libjpeg-dev libjpeg62-turbo-dev libmagickwand-dev libmcrypt-dev libpq-dev libpng-dev zlib1g-dev mysql-client openssh-client libxml2-dev nano linkchecker nodejs -y \\\n && apt-get clean \\\n && npm install npm@latest -g \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install PHP extensions required for Yii 2.0 Framework\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure bcmath \\\n && docker-php-ext-install soap zip curl bcmath exif gd iconv intl mbstring opcache pdo_mysql pdo_pgsql\n#   Install PECL extensions\n#   see http://stackoverflow.com/a/8154466/291573) for usage of `printf`\nRUN printf \"\\n\" | pecl install apcu-5.1.3 imagick mcrypt-1.0.0 \\\n && docker-php-ext-enable apcu imagick\n#   Install xdebug\nRUN cd /tmp \\\n && git clone git://github.com/xdebug/xdebug.git \\\n && cd xdebug \\\n && git checkout 52adff7539109db592d07d3f6c325f6ee2a7669f \\\n && phpize \\\n && ./configure --enable-xdebug \\\n && make \\\n && make install \\\n && rm -rf /tmp/xdebug\n#   Install less-compiler\nRUN npm install less lesshint uglify-js uglifycss -g\n#   Install Yii framework bash autocompletion\nRUN curl -L https://raw.githubusercontent.com/yiisoft/yii2/master/contrib/completion/bash/yii -o /etc/bash_completion.d/yii\nENV PHP_USER_ID=\"33\" \\\n    PHP_ENABLE_XDEBUG=\"0\" \\\n    VERSION_COMPOSER_ASSET_PLUGIN=\"^1.4.3\" \\\n    VERSION_PRESTISSIMO_PLUGIN=\"^0.3.0\" \\\n    PATH=\"/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\" \\\n    TERM=\"linux\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Add configuration files\nCOPY image-files/ /\n#   Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 /usr/local/bin/docker-entrypoint.sh /usr/local/bin/docker-run.sh /usr/local/bin/composer\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --filename=composer.phar --install-dir=/usr/local/bin \\\n && composer global require --optimize-autoloader \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" \\\n && composer global dumpautoload --optimize \\\n && composer clear-cache\nWORKDIR /app\n#   Startup script for FPM\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"docker-run.sh\"]\n","originalDockerfileUglifiedHash":"21725f9d6bb71d97c0e6cf659d181ec0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f730f1118217720e643be3f0ca52513d004c6796.dockerfile"}