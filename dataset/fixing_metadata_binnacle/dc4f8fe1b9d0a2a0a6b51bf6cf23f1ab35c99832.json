{"seed":727227406,"processedDockerfileHash":"13c83b5e928d5a37ab57aff93866616c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:unstable\nLABEL maintainer=\"Sysdig <support@sysdig.com>\"\nARG FALCO_VERSION=0.1.1dev\nENV FALCO_VERSION=\"${FALCO_VERSION}\"\nLABEL RUN=\"docker run -i -t -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro --name NAME IMAGE\"\nENV SYSDIG_HOST_ROOT=\"/host\"\nENV HOME=\"/root\"\nRUN cp /etc/skel/.bashrc /root \\\n && cp /etc/skel/.profile /root\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /etc/apt/preferences.d/ http://download.draios.com/apt-draios-priority\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion bc clang-7 ca-certificates curl dkms gnupg2 gcc jq libc6-dev libelf-dev llvm-7 netcat xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\n#   gcc 6 is no longer included in debian unstable, but we need it to\n#   build kernel modules on the default debian-based ami used by\n#   kops. So grab copies we've saved from debian snapshots with the\n#   prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n#   or so.\nRUN curl -o cpp-6_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/cpp-6_6.3.0-18_amd64.deb \\\n && curl -o gcc-6-base_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/gcc-6-base_6.3.0-18_amd64.deb \\\n && curl -o gcc-6_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/gcc-6_6.3.0-18_amd64.deb \\\n && curl -o libasan3_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libasan3_6.3.0-18_amd64.deb \\\n && curl -o libcilkrts5_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libcilkrts5_6.3.0-18_amd64.deb \\\n && curl -o libgcc-6-dev_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libgcc-6-dev_6.3.0-18_amd64.deb \\\n && curl -o libubsan0_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libubsan0_6.3.0-18_amd64.deb \\\n && curl -o libmpfr4_3.1.3-2_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libmpfr4_3.1.3-2_amd64.deb \\\n && curl -o libisl15_0.18-1_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libisl15_0.18-1_amd64.deb \\\n && dpkg -i cpp-6_6.3.0-18_amd64.deb gcc-6-base_6.3.0-18_amd64.deb gcc-6_6.3.0-18_amd64.deb libasan3_6.3.0-18_amd64.deb libcilkrts5_6.3.0-18_amd64.deb libgcc-6-dev_6.3.0-18_amd64.deb libubsan0_6.3.0-18_amd64.deb libmpfr4_3.1.3-2_amd64.deb libisl15_0.18-1_amd64.deb \\\n && rm -f cpp-6_6.3.0-18_amd64.deb gcc-6-base_6.3.0-18_amd64.deb gcc-6_6.3.0-18_amd64.deb libasan3_6.3.0-18_amd64.deb libcilkrts5_6.3.0-18_amd64.deb libgcc-6-dev_6.3.0-18_amd64.deb libubsan0_6.3.0-18_amd64.deb libmpfr4_3.1.3-2_amd64.deb libisl15_0.18-1_amd64.deb\n#   gcc 5 is no longer included in debian unstable, but we need it to\n#   build centos kernels, which are 3.x based and explicitly want a gcc\n#   version 3, 4, or 5 compiler. So grab copies we've saved from debian\n#   snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\nRUN curl -o cpp-5_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/cpp-5_5.5.0-12_amd64.deb \\\n && curl -o gcc-5-base_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-5-base_5.5.0-12_amd64.deb \\\n && curl -o gcc-5_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-5_5.5.0-12_amd64.deb \\\n && curl -o libasan2_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libasan2_5.5.0-12_amd64.deb \\\n && curl -o libgcc-5-dev_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libgcc-5-dev_5.5.0-12_amd64.deb \\\n && curl -o libisl15_0.18-4_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libisl15_0.18-4_amd64.deb \\\n && curl -o libmpx0_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libmpx0_5.5.0-12_amd64.deb \\\n && dpkg -i cpp-5_5.5.0-12_amd64.deb gcc-5-base_5.5.0-12_amd64.deb gcc-5_5.5.0-12_amd64.deb libasan2_5.5.0-12_amd64.deb libgcc-5-dev_5.5.0-12_amd64.deb libisl15_0.18-4_amd64.deb libmpx0_5.5.0-12_amd64.deb \\\n && rm -f cpp-5_5.5.0-12_amd64.deb gcc-5-base_5.5.0-12_amd64.deb gcc-5_5.5.0-12_amd64.deb libasan2_5.5.0-12_amd64.deb libgcc-5-dev_5.5.0-12_amd64.deb libisl15_0.18-4_amd64.deb libmpx0_5.5.0-12_amd64.deb\n#   Since our base Debian image ships with GCC 7 which breaks older kernels, revert the\n#   default to gcc-5.\nRUN rm -rf /usr/bin/gcc \\\n && ln -s /usr/bin/gcc-5 /usr/bin/gcc\nRUN rm -rf /usr/bin/clang \\\n && rm -rf /usr/bin/llc \\\n && ln -s /usr/bin/clang-7 /usr/bin/clang \\\n && ln -s /usr/bin/llc-7 /usr/bin/llc\n#   Some base images have an empty /lib/modules by default\n#   If it's not empty, docker build will fail instead of\n#   silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n && ln -s $SYSDIG_HOST_ROOT/lib/modules /lib/modules\nCOPY falco-${FALCO_VERSION}-x86_64.deb /\nRUN dpkg -i /falco-${FALCO_VERSION}-x86_64.deb\n#   Change the falco config within the container to enable ISO 8601\n#   output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n && mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n#   debian:unstable head contains binutils 2.31, which generates\n#   binaries that are incompatible with kernels < 4.16. So manually\n#   forcibly install binutils 2.30-22 instead.\nRUN curl -s -o binutils_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils_2.30-22_amd64.deb \\\n && curl -s -o libbinutils_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libbinutils_2.30-22_amd64.deb \\\n && curl -s -o binutils-x86-64-linux-gnu_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils-x86-64-linux-gnu_2.30-22_amd64.deb \\\n && curl -s -o binutils-common_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils-common_2.30-22_amd64.deb \\\n && dpkg -i *binutils*.deb \\\n && rm -f *binutils*.deb\n#   The local container also copies some test trace files and\n#   corresponding rules that are used when running regression tests.\nCOPY rules/*.yaml /rules/\nCOPY traces/*.scap /traces/\nCOPY ./docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/bin/falco\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:unstable\nLABEL maintainer=\"Sysdig <support@sysdig.com>\"\nARG FALCO_VERSION=0.1.1dev\nENV FALCO_VERSION=\"${FALCO_VERSION}\"\nLABEL RUN=\"docker run -i -t -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro --name NAME IMAGE\"\nENV SYSDIG_HOST_ROOT=\"/host\"\nENV HOME=\"/root\"\nRUN cp /etc/skel/.bashrc /root \\\n && cp /etc/skel/.profile /root\nADD http://download.draios.com/apt-draios-priority /etc/apt/preferences.d/\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion bc clang-7 ca-certificates curl dkms gnupg2 gcc jq libc6-dev libelf-dev llvm-7 netcat xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\n#  gcc 6 is no longer included in debian unstable, but we need it to\n#  build kernel modules on the default debian-based ami used by\n#  kops. So grab copies we've saved from debian snapshots with the\n#  prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n#  or so.\nRUN curl -o cpp-6_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/cpp-6_6.3.0-18_amd64.deb \\\n && curl -o gcc-6-base_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/gcc-6-base_6.3.0-18_amd64.deb \\\n && curl -o gcc-6_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/gcc-6_6.3.0-18_amd64.deb \\\n && curl -o libasan3_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libasan3_6.3.0-18_amd64.deb \\\n && curl -o libcilkrts5_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libcilkrts5_6.3.0-18_amd64.deb \\\n && curl -o libgcc-6-dev_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libgcc-6-dev_6.3.0-18_amd64.deb \\\n && curl -o libubsan0_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libubsan0_6.3.0-18_amd64.deb \\\n && curl -o libmpfr4_3.1.3-2_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libmpfr4_3.1.3-2_amd64.deb \\\n && curl -o libisl15_0.18-1_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libisl15_0.18-1_amd64.deb \\\n && dpkg -i cpp-6_6.3.0-18_amd64.deb gcc-6-base_6.3.0-18_amd64.deb gcc-6_6.3.0-18_amd64.deb libasan3_6.3.0-18_amd64.deb libcilkrts5_6.3.0-18_amd64.deb libgcc-6-dev_6.3.0-18_amd64.deb libubsan0_6.3.0-18_amd64.deb libmpfr4_3.1.3-2_amd64.deb libisl15_0.18-1_amd64.deb \\\n && rm -f cpp-6_6.3.0-18_amd64.deb gcc-6-base_6.3.0-18_amd64.deb gcc-6_6.3.0-18_amd64.deb libasan3_6.3.0-18_amd64.deb libcilkrts5_6.3.0-18_amd64.deb libgcc-6-dev_6.3.0-18_amd64.deb libubsan0_6.3.0-18_amd64.deb libmpfr4_3.1.3-2_amd64.deb libisl15_0.18-1_amd64.deb\n#  gcc 5 is no longer included in debian unstable, but we need it to\n#  build centos kernels, which are 3.x based and explicitly want a gcc\n#  version 3, 4, or 5 compiler. So grab copies we've saved from debian\n#  snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\nRUN curl -o cpp-5_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/cpp-5_5.5.0-12_amd64.deb \\\n && curl -o gcc-5-base_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-5-base_5.5.0-12_amd64.deb \\\n && curl -o gcc-5_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-5_5.5.0-12_amd64.deb \\\n && curl -o libasan2_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libasan2_5.5.0-12_amd64.deb \\\n && curl -o libgcc-5-dev_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libgcc-5-dev_5.5.0-12_amd64.deb \\\n && curl -o libisl15_0.18-4_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libisl15_0.18-4_amd64.deb \\\n && curl -o libmpx0_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libmpx0_5.5.0-12_amd64.deb \\\n && dpkg -i cpp-5_5.5.0-12_amd64.deb gcc-5-base_5.5.0-12_amd64.deb gcc-5_5.5.0-12_amd64.deb libasan2_5.5.0-12_amd64.deb libgcc-5-dev_5.5.0-12_amd64.deb libisl15_0.18-4_amd64.deb libmpx0_5.5.0-12_amd64.deb \\\n && rm -f cpp-5_5.5.0-12_amd64.deb gcc-5-base_5.5.0-12_amd64.deb gcc-5_5.5.0-12_amd64.deb libasan2_5.5.0-12_amd64.deb libgcc-5-dev_5.5.0-12_amd64.deb libisl15_0.18-4_amd64.deb libmpx0_5.5.0-12_amd64.deb\n#  Since our base Debian image ships with GCC 7 which breaks older kernels, revert the\n#  default to gcc-5.\nRUN rm -rf /usr/bin/gcc \\\n && ln -s /usr/bin/gcc-5 /usr/bin/gcc\nRUN rm -rf /usr/bin/clang \\\n && rm -rf /usr/bin/llc \\\n && ln -s /usr/bin/clang-7 /usr/bin/clang \\\n && ln -s /usr/bin/llc-7 /usr/bin/llc\n#  Some base images have an empty /lib/modules by default\n#  If it's not empty, docker build will fail instead of\n#  silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n && ln -s $SYSDIG_HOST_ROOT/lib/modules /lib/modules\nADD falco-${FALCO_VERSION}-x86_64.deb /\nRUN dpkg -i /falco-${FALCO_VERSION}-x86_64.deb\n#  Change the falco config within the container to enable ISO 8601\n#  output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n && mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n#  debian:unstable head contains binutils 2.31, which generates\n#  binaries that are incompatible with kernels < 4.16. So manually\n#  forcibly install binutils 2.30-22 instead.\nRUN curl -s -o binutils_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils_2.30-22_amd64.deb \\\n && curl -s -o libbinutils_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libbinutils_2.30-22_amd64.deb \\\n && curl -s -o binutils-x86-64-linux-gnu_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils-x86-64-linux-gnu_2.30-22_amd64.deb \\\n && curl -s -o binutils-common_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils-common_2.30-22_amd64.deb \\\n && dpkg -i *binutils*.deb \\\n && rm -f *binutils*.deb\n#  The local container also copies some test trace files and\n#  corresponding rules that are used when running regression tests.\nCOPY rules/*.yaml /rules/\nCOPY traces/*.scap /traces/\nCOPY ./docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/bin/falco\"]\n","injectedSmells":[],"originalDockerfileHash":"ebd33227d0c213025f713d7b2b589c0e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:unstable\nLABEL maintainer=\"Sysdig <support@sysdig.com>\"\nARG FALCO_VERSION=0.1.1dev\nENV FALCO_VERSION=\"${FALCO_VERSION}\"\nLABEL RUN=\"docker run -i -t -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro --name NAME IMAGE\"\nENV SYSDIG_HOST_ROOT=\"/host\"\nENV HOME=\"/root\"\nRUN cp /etc/skel/.bashrc /root \\\n && cp /etc/skel/.profile /root\nADD http://download.draios.com/apt-draios-priority /etc/apt/preferences.d/\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion bc clang-7 ca-certificates curl dkms gnupg2 gcc jq libc6-dev libelf-dev llvm-7 netcat xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\n#   gcc 6 is no longer included in debian unstable, but we need it to\n#   build kernel modules on the default debian-based ami used by\n#   kops. So grab copies we've saved from debian snapshots with the\n#   prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n#   or so.\nRUN curl -o cpp-6_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/cpp-6_6.3.0-18_amd64.deb \\\n && curl -o gcc-6-base_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/gcc-6-base_6.3.0-18_amd64.deb \\\n && curl -o gcc-6_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/gcc-6_6.3.0-18_amd64.deb \\\n && curl -o libasan3_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libasan3_6.3.0-18_amd64.deb \\\n && curl -o libcilkrts5_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libcilkrts5_6.3.0-18_amd64.deb \\\n && curl -o libgcc-6-dev_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libgcc-6-dev_6.3.0-18_amd64.deb \\\n && curl -o libubsan0_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libubsan0_6.3.0-18_amd64.deb \\\n && curl -o libmpfr4_3.1.3-2_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libmpfr4_3.1.3-2_amd64.deb \\\n && curl -o libisl15_0.18-1_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libisl15_0.18-1_amd64.deb \\\n && dpkg -i cpp-6_6.3.0-18_amd64.deb gcc-6-base_6.3.0-18_amd64.deb gcc-6_6.3.0-18_amd64.deb libasan3_6.3.0-18_amd64.deb libcilkrts5_6.3.0-18_amd64.deb libgcc-6-dev_6.3.0-18_amd64.deb libubsan0_6.3.0-18_amd64.deb libmpfr4_3.1.3-2_amd64.deb libisl15_0.18-1_amd64.deb \\\n && rm -f cpp-6_6.3.0-18_amd64.deb gcc-6-base_6.3.0-18_amd64.deb gcc-6_6.3.0-18_amd64.deb libasan3_6.3.0-18_amd64.deb libcilkrts5_6.3.0-18_amd64.deb libgcc-6-dev_6.3.0-18_amd64.deb libubsan0_6.3.0-18_amd64.deb libmpfr4_3.1.3-2_amd64.deb libisl15_0.18-1_amd64.deb\n#   gcc 5 is no longer included in debian unstable, but we need it to\n#   build centos kernels, which are 3.x based and explicitly want a gcc\n#   version 3, 4, or 5 compiler. So grab copies we've saved from debian\n#   snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\nRUN curl -o cpp-5_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/cpp-5_5.5.0-12_amd64.deb \\\n && curl -o gcc-5-base_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-5-base_5.5.0-12_amd64.deb \\\n && curl -o gcc-5_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-5_5.5.0-12_amd64.deb \\\n && curl -o libasan2_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libasan2_5.5.0-12_amd64.deb \\\n && curl -o libgcc-5-dev_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libgcc-5-dev_5.5.0-12_amd64.deb \\\n && curl -o libisl15_0.18-4_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libisl15_0.18-4_amd64.deb \\\n && curl -o libmpx0_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libmpx0_5.5.0-12_amd64.deb \\\n && dpkg -i cpp-5_5.5.0-12_amd64.deb gcc-5-base_5.5.0-12_amd64.deb gcc-5_5.5.0-12_amd64.deb libasan2_5.5.0-12_amd64.deb libgcc-5-dev_5.5.0-12_amd64.deb libisl15_0.18-4_amd64.deb libmpx0_5.5.0-12_amd64.deb \\\n && rm -f cpp-5_5.5.0-12_amd64.deb gcc-5-base_5.5.0-12_amd64.deb gcc-5_5.5.0-12_amd64.deb libasan2_5.5.0-12_amd64.deb libgcc-5-dev_5.5.0-12_amd64.deb libisl15_0.18-4_amd64.deb libmpx0_5.5.0-12_amd64.deb\n#   Since our base Debian image ships with GCC 7 which breaks older kernels, revert the\n#   default to gcc-5.\nRUN rm -rf /usr/bin/gcc \\\n && ln -s /usr/bin/gcc-5 /usr/bin/gcc\nRUN rm -rf /usr/bin/clang \\\n && rm -rf /usr/bin/llc \\\n && ln -s /usr/bin/clang-7 /usr/bin/clang \\\n && ln -s /usr/bin/llc-7 /usr/bin/llc\n#   Some base images have an empty /lib/modules by default\n#   If it's not empty, docker build will fail instead of\n#   silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n && ln -s $SYSDIG_HOST_ROOT/lib/modules /lib/modules\nADD falco-${FALCO_VERSION}-x86_64.deb /\nRUN dpkg -i /falco-${FALCO_VERSION}-x86_64.deb\n#   Change the falco config within the container to enable ISO 8601\n#   output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n && mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n#   debian:unstable head contains binutils 2.31, which generates\n#   binaries that are incompatible with kernels < 4.16. So manually\n#   forcibly install binutils 2.30-22 instead.\nRUN curl -s -o binutils_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils_2.30-22_amd64.deb \\\n && curl -s -o libbinutils_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libbinutils_2.30-22_amd64.deb \\\n && curl -s -o binutils-x86-64-linux-gnu_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils-x86-64-linux-gnu_2.30-22_amd64.deb \\\n && curl -s -o binutils-common_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils-common_2.30-22_amd64.deb \\\n && dpkg -i *binutils*.deb \\\n && rm -f *binutils*.deb\n#   The local container also copies some test trace files and\n#   corresponding rules that are used when running regression tests.\nCOPY rules/*.yaml /rules/\nCOPY traces/*.scap /traces/\nCOPY ./docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/bin/falco\"]\n","originalDockerfileUglifiedHash":"b015a90472b4fdca20875093592a03ff","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dc4f8fe1b9d0a2a0a6b51bf6cf23f1ab35c99832.dockerfile"}