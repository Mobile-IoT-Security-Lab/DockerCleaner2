{"seed":965288730,"processedDockerfileHash":"987747cfc6ece8eec188c7fd1fcadd4f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Image: pubnative/zeppelin\nFROM debian:stretch\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales=2.24-11+deb9u4 -y \\\n && dpkg-reconfigure -f noninteractive locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Users with other locales should set this in their derivative image\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.52.1-5+deb9u16 unzip=6.0-21+deb9u2 python3=3.5.3-1 python3-setuptools=33.1.1-1 -y \\\n && ln -s /usr/bin/python3 /usr/bin/python \\\n && easy_install3 pip py4j \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   http://blog.stuart.axelbrooke.com/python-3-on-spark-return-of-the-pythonhashseed\nENV PYTHONHASHSEED=\"0\"\nENV PYTHONIOENCODING=\"UTF-8\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"1\"\n#   JAVA\nARG JAVA_MAJOR_VERSION=8\nARG JAVA_UPDATE_VERSION=181\nARG JAVA_BUILD_NUMBER=13\nENV JAVA_HOME=\"/usr/jdk1.${JAVA_MAJOR_VERSION}.0_${JAVA_UPDATE_VERSION}\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nRUN curl -sL --retry 3 --insecure --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-b${JAVA_BUILD_NUMBER}/96a7b8442fe848ef90c96a2fad6ed6d1/server-jre-${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-linux-x64.tar.gz\" | gunzip | tar x -C /usr/ \\\n && ln -s $JAVA_HOME /usr/java \\\n && rm -rf $JAVA_HOME/man\n#   HADOOP\nENV HADOOP_VERSION=\"2.7.3\"\nENV HADOOP_HOME=\"/usr/hadoop-$HADOOP_VERSION\"\nENV HADOOP_CONF_DIR=\"$HADOOP_HOME/etc/hadoop\"\nENV PATH=\"$PATH:$HADOOP_HOME/bin\"\nRUN curl -sL --retry 3 \"http://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\" | gunzip | tar -x -C /usr/ \\\n && rm -rf $HADOOP_HOME/share/doc \\\n && chown -R root:root $HADOOP_HOME\n#   SPARK\nENV SPARK_VERSION=\"2.3.1\"\nENV SPARK_PACKAGE=\"spark-${SPARK_VERSION}-bin-without-hadoop\"\nENV SPARK_HOME=\"/usr/spark-${SPARK_VERSION}\"\nENV SPARK_DIST_CLASSPATH=\"$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/*\"\nENV PATH=\"$PATH:${SPARK_HOME}/bin\"\nRUN curl -sL --retry 3 \"https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=spark/spark-${SPARK_VERSION}/${SPARK_PACKAGE}.tgz\" | gunzip | tar x -C /usr/ \\\n && mv /usr/$SPARK_PACKAGE $SPARK_HOME \\\n && chown -R root:root $SPARK_HOME\nWORKDIR $SPARK_HOME\nCMD [\"bin/spark-class\", \"org.apache.spark.deploy.master.Master\"]\n#   Python packages\nRUN set -ex \\\n && buildDeps=' libpython3-dev build-essential pkg-config gfortran ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20200601~deb9u2 wget=1.18-5+deb9u3 libblas-dev=3.7.0-2 libatlas-dev=3.10.3-1+b1 liblapack-dev=3.7.0-2 libopenblas-dev=0.2.19-3 libpng-dev=1.6.28-1+deb9u1 libfreetype6-dev=2.6.3-3.2+deb9u2 libxft-dev=2.3.2-1+b2 python3-tk=3.5.3-1 libxml2-dev=2.9.4+dfsg1-2.2+deb9u7 libxslt-dev zlib1g-dev=1:1.2.8.dfsg-5+deb9u1 $buildDeps -y \\\n && packages=' numpy pandasql matplotlib scipy ' \\\n && pip3 install $packages \\\n && rm -rf /root/.cache/pip \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   R and its packages\nRUN set -ex \\\n && rDeps=' r-base r-base-dev r-cran-evaluate ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $rDeps -y \\\n && apt-get install --no-install-recommends r-base=3.3.3-1 r-base-dev=3.3.3-1 -y \\\n && R -e \"install.packages('knitr', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('ggplot2', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('googleVis', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('data.table', repos='http://cran.us.r-project.org')\" \\\n && apt-get install --no-install-recommends libcurl4-gnutls-dev=7.52.1-5+deb9u16 libssl-dev=1.1.0l-1~deb9u6 -y \\\n && R -e \"install.packages('devtools', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('Rcpp', repos='http://cran.us.r-project.org')\" \\\n && Rscript -e \"library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Zeppelin\nENV ZEPPELIN_PORT=\"8080\"\nENV ZEPPELIN_HOME=\"/usr/zeppelin\"\nENV ZEPPELIN_CONF_DIR=\"$ZEPPELIN_HOME/conf\"\nENV ZEPPELIN_NOTEBOOK_DIR=\"$ZEPPELIN_HOME/notebook\"\nENV Z_VERSION=\"0.8.0\"\nRUN echo '{ \"allow_root\": true }' > /root/.bowerrc\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg=2.1.18-8~deb9u4 -y \\\n && curl -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN set -ex \\\n && additionalDeps=' git bzip2 nodejs npm libfontconfig ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $additionalDeps -y \\\n && wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz http://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && mv ./zeppelin-${Z_VERSION}-bin-all ${ZEPPELIN_HOME}\nRUN mkdir -p $ZEPPELIN_HOME/run\n#   Mesos\nRUN echo \"deb http://ftp.debian.org/debian jessie-backports main\" >> /etc/apt/sources.list\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends libssl1.0.0 -y\nRUN echo 'deb http://repos.mesosphere.com/ubuntu xenial main' >> /etc/apt/sources.list.d/mesosphere.list\nRUN apt-get install --no-install-recommends dirmngr=2.1.18-8~deb9u4 \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends mesos=1.3.0-2.0.3 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR $ZEPPELIN_HOME\nCMD [\"bin/zeppelin.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Image: pubnative/zeppelin\nFROM debian:stretch\nRUN apt-get update \\\n && apt-get install locales -y \\\n && dpkg-reconfigure -f noninteractive locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Users with other locales should set this in their derivative image\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install curl unzip python3 python3-setuptools -y \\\n && ln -s /usr/bin/python3 /usr/bin/python \\\n && easy_install3 pip py4j \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  http://blog.stuart.axelbrooke.com/python-3-on-spark-return-of-the-pythonhashseed\nENV PYTHONHASHSEED=\"0\"\nENV PYTHONIOENCODING=\"UTF-8\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"1\"\n#  JAVA\nARG JAVA_MAJOR_VERSION=8\nARG JAVA_UPDATE_VERSION=181\nARG JAVA_BUILD_NUMBER=13\nENV JAVA_HOME=\"/usr/jdk1.${JAVA_MAJOR_VERSION}.0_${JAVA_UPDATE_VERSION}\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nRUN curl -sL --retry 3 --insecure --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-b${JAVA_BUILD_NUMBER}/96a7b8442fe848ef90c96a2fad6ed6d1/server-jre-${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-linux-x64.tar.gz\" | gunzip | tar x -C /usr/ \\\n && ln -s $JAVA_HOME /usr/java \\\n && rm -rf $JAVA_HOME/man\n#  HADOOP\nENV HADOOP_VERSION=\"2.7.3\"\nENV HADOOP_HOME=\"/usr/hadoop-$HADOOP_VERSION\"\nENV HADOOP_CONF_DIR=\"$HADOOP_HOME/etc/hadoop\"\nENV PATH=\"$PATH:$HADOOP_HOME/bin\"\nRUN curl -sL --retry 3 \"http://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\" | gunzip | tar -x -C /usr/ \\\n && rm -rf $HADOOP_HOME/share/doc \\\n && chown -R root:root $HADOOP_HOME\n#  SPARK\nENV SPARK_VERSION=\"2.3.1\"\nENV SPARK_PACKAGE=\"spark-${SPARK_VERSION}-bin-without-hadoop\"\nENV SPARK_HOME=\"/usr/spark-${SPARK_VERSION}\"\nENV SPARK_DIST_CLASSPATH=\"$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/*\"\nENV PATH=\"$PATH:${SPARK_HOME}/bin\"\nRUN curl -sL --retry 3 \"https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=spark/spark-${SPARK_VERSION}/${SPARK_PACKAGE}.tgz\" | gunzip | tar x -C /usr/ \\\n && mv /usr/$SPARK_PACKAGE $SPARK_HOME \\\n && chown -R root:root $SPARK_HOME\nWORKDIR $SPARK_HOME\nCMD [\"bin/spark-class\", \"org.apache.spark.deploy.master.Master\"]\n#  Python packages\nRUN set -ex \\\n && buildDeps=' libpython3-dev build-essential pkg-config gfortran ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget libblas-dev libatlas-dev liblapack-dev libopenblas-dev libpng-dev libfreetype6-dev libxft-dev python3-tk libxml2-dev libxslt-dev zlib1g-dev $buildDeps -y \\\n && packages=' numpy pandasql matplotlib scipy ' \\\n && pip3 install $packages \\\n && rm -rf /root/.cache/pip \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  R and its packages\nRUN set -ex \\\n && rDeps=' r-base r-base-dev r-cran-evaluate ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $rDeps -y \\\n && apt-get install r-base r-base-dev -y \\\n && R -e \"install.packages('knitr', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('ggplot2', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('googleVis', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('data.table', repos='http://cran.us.r-project.org')\" \\\n && apt-get install libcurl4-gnutls-dev libssl-dev -y \\\n && R -e \"install.packages('devtools', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('Rcpp', repos='http://cran.us.r-project.org')\" \\\n && Rscript -e \"library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Zeppelin\nENV ZEPPELIN_PORT=\"8080\"\nENV ZEPPELIN_HOME=\"/usr/zeppelin\"\nENV ZEPPELIN_CONF_DIR=\"$ZEPPELIN_HOME/conf\"\nENV ZEPPELIN_NOTEBOOK_DIR=\"$ZEPPELIN_HOME/notebook\"\nENV Z_VERSION=\"0.8.0\"\nRUN echo '{ \"allow_root\": true }' > /root/.bowerrc\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg -y \\\n && curl -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN set -ex \\\n && additionalDeps=' git bzip2 nodejs npm libfontconfig ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $additionalDeps -y \\\n && wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz http://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && mv ./zeppelin-${Z_VERSION}-bin-all ${ZEPPELIN_HOME}\nRUN mkdir -p $ZEPPELIN_HOME/run\n#  Mesos\nRUN echo \"deb http://ftp.debian.org/debian jessie-backports main\" >> /etc/apt/sources.list\nRUN apt-get -q update \\\n && apt-get install -y libssl1.0.0\nRUN echo 'deb http://repos.mesosphere.com/ubuntu xenial main' >> /etc/apt/sources.list.d/mesosphere.list\nRUN apt-get install dirmngr \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF \\\n && apt-get update -y \\\n && apt-get install mesos=1.3.0-2.0.3 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR $ZEPPELIN_HOME\nCMD [\"bin/zeppelin.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"4c89c37d0482a4ceb4cfb1183989231a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Image: pubnative/zeppelin\nFROM debian:stretch\nRUN apt-get update \\\n && apt-get install locales -y \\\n && dpkg-reconfigure -f noninteractive locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Users with other locales should set this in their derivative image\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install curl unzip python3 python3-setuptools -y \\\n && ln -s /usr/bin/python3 /usr/bin/python \\\n && easy_install3 pip py4j \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   http://blog.stuart.axelbrooke.com/python-3-on-spark-return-of-the-pythonhashseed\nENV PYTHONHASHSEED=\"0\"\nENV PYTHONIOENCODING=\"UTF-8\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"1\"\n#   JAVA\nARG JAVA_MAJOR_VERSION=8\nARG JAVA_UPDATE_VERSION=181\nARG JAVA_BUILD_NUMBER=13\nENV JAVA_HOME=\"/usr/jdk1.${JAVA_MAJOR_VERSION}.0_${JAVA_UPDATE_VERSION}\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nRUN curl -sL --retry 3 --insecure --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-b${JAVA_BUILD_NUMBER}/96a7b8442fe848ef90c96a2fad6ed6d1/server-jre-${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-linux-x64.tar.gz\" | gunzip | tar x -C /usr/ \\\n && ln -s $JAVA_HOME /usr/java \\\n && rm -rf $JAVA_HOME/man\n#   HADOOP\nENV HADOOP_VERSION=\"2.7.3\"\nENV HADOOP_HOME=\"/usr/hadoop-$HADOOP_VERSION\"\nENV HADOOP_CONF_DIR=\"$HADOOP_HOME/etc/hadoop\"\nENV PATH=\"$PATH:$HADOOP_HOME/bin\"\nRUN curl -sL --retry 3 \"http://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\" | gunzip | tar -x -C /usr/ \\\n && rm -rf $HADOOP_HOME/share/doc \\\n && chown -R root:root $HADOOP_HOME\n#   SPARK\nENV SPARK_VERSION=\"2.3.1\"\nENV SPARK_PACKAGE=\"spark-${SPARK_VERSION}-bin-without-hadoop\"\nENV SPARK_HOME=\"/usr/spark-${SPARK_VERSION}\"\nENV SPARK_DIST_CLASSPATH=\"$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/*\"\nENV PATH=\"$PATH:${SPARK_HOME}/bin\"\nRUN curl -sL --retry 3 \"https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=spark/spark-${SPARK_VERSION}/${SPARK_PACKAGE}.tgz\" | gunzip | tar x -C /usr/ \\\n && mv /usr/$SPARK_PACKAGE $SPARK_HOME \\\n && chown -R root:root $SPARK_HOME\nWORKDIR $SPARK_HOME\nCMD [\"bin/spark-class\", \"org.apache.spark.deploy.master.Master\"]\n#   Python packages\nRUN set -ex \\\n && buildDeps=' libpython3-dev build-essential pkg-config gfortran ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget libblas-dev libatlas-dev liblapack-dev libopenblas-dev libpng-dev libfreetype6-dev libxft-dev python3-tk libxml2-dev libxslt-dev zlib1g-dev $buildDeps -y \\\n && packages=' numpy pandasql matplotlib scipy ' \\\n && pip3 install $packages \\\n && rm -rf /root/.cache/pip \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   R and its packages\nRUN set -ex \\\n && rDeps=' r-base r-base-dev r-cran-evaluate ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $rDeps -y \\\n && apt-get install r-base r-base-dev -y \\\n && R -e \"install.packages('knitr', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('ggplot2', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('googleVis', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('data.table', repos='http://cran.us.r-project.org')\" \\\n && apt-get install libcurl4-gnutls-dev libssl-dev -y \\\n && R -e \"install.packages('devtools', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('Rcpp', repos='http://cran.us.r-project.org')\" \\\n && Rscript -e \"library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Zeppelin\nENV ZEPPELIN_PORT=\"8080\"\nENV ZEPPELIN_HOME=\"/usr/zeppelin\"\nENV ZEPPELIN_CONF_DIR=\"$ZEPPELIN_HOME/conf\"\nENV ZEPPELIN_NOTEBOOK_DIR=\"$ZEPPELIN_HOME/notebook\"\nENV Z_VERSION=\"0.8.0\"\nRUN echo '{ \"allow_root\": true }' > /root/.bowerrc\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg -y \\\n && curl -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN set -ex \\\n && additionalDeps=' git bzip2 nodejs npm libfontconfig ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $additionalDeps -y \\\n && wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz http://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && mv ./zeppelin-${Z_VERSION}-bin-all ${ZEPPELIN_HOME}\nRUN mkdir -p $ZEPPELIN_HOME/run\n#   Mesos\nRUN echo \"deb http://ftp.debian.org/debian jessie-backports main\" >> /etc/apt/sources.list\nRUN apt-get update -q \\\n && apt-get install libssl1.0.0 -y\nRUN echo 'deb http://repos.mesosphere.com/ubuntu xenial main' >> /etc/apt/sources.list.d/mesosphere.list\nRUN apt-get install dirmngr \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF \\\n && apt-get update -y \\\n && apt-get install mesos=1.3.0-2.0.3 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR $ZEPPELIN_HOME\nCMD [\"bin/zeppelin.sh\"]\n","originalDockerfileUglifiedHash":"25a7a5860e3be96644ee147a468c6faf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7d6d8db25c7d9063ea11c4415eb1dac55940abae.dockerfile"}