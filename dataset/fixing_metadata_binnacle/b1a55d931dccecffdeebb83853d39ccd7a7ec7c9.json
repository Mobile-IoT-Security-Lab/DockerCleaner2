{"seed":4019106214,"processedDockerfileHash":"91b86dbec8ad53bafdfa7ebf53fe2845","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Creates pseudo distributed hadoop 2.7.1\n#\n#   docker build -t sequenceiq/hadoop .\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER SequenceIQ\nUSER root\n#   install dev tools\nRUN yum clean all ; rpm --rebuilddb ; yum install -y curl which tar sudo openssh-server openssh-clients rsync\n#   update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\nRUN yum update -y libselinux\n#   passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#   java\nRUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\nRUN rpm -i jdk-7u71-linux-x64.rpm\nRUN rm jdk-7u71-linux-x64.rpm\nENV JAVA_HOME=\"/usr/java/default\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nRUN rm /usr/bin/java \\\n && ln -s $JAVA_HOME/bin/java /usr/bin/java\n#   download native support\nRUN mkdir -p /tmp/native\nRUN curl -L https://github.com/sequenceiq/docker-hadoop-build/releases/download/v2.7.1/hadoop-native-64-2.7.1.tgz | tar -xz -C /tmp/native\n#   hadoop\nRUN curl -s http://www.eu.apache.org/dist/hadoop/common/hadoop-2.7.1/hadoop-2.7.1.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local \\\n && ln -s ./hadoop-2.7.1 hadoop\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nENV HADOOP_COMMON_HOME=\"/usr/local/hadoop\"\nENV HADOOP_HDFS_HOME=\"/usr/local/hadoop\"\nENV HADOOP_MAPRED_HOME=\"/usr/local/hadoop\"\nENV HADOOP_YARN_HOME=\"/usr/local/hadoop\"\nENV HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV YARN_CONF_DIR=\"$HADOOP_PREFIX/etc/hadoop\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n#  RUN . $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN mkdir $HADOOP_PREFIX/input\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n#   pseudo distributed\nCOPY core-site.xml.template $HADOOP_PREFIX/etc/hadoop/core-site.xml.template\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nCOPY hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\nCOPY mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nCOPY yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\n#   fixing the libhadoop.so like a boss\nRUN rm -rf /usr/local/hadoop/lib/native\nRUN mv /tmp/native /usr/local/hadoop/lib\nCOPY ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n#   # installing supervisord\n#   RUN yum install -y python-setuptools\n#   RUN easy_install pip\n#   RUN curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -o - | python\n#   RUN pip install supervisor\n#\n#   ADD supervisord.conf /etc/supervisord.conf\nCOPY bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\nENV BOOTSTRAP=\"/etc/bootstrap.sh\"\n#   workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n#   fix the 254 error code\nRUN sed -i \"/^[^#]*UsePAM/ s/.*/#&/\" /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -mkdir -p /user/root\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -put $HADOOP_PREFIX/etc/hadoop/ input\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n#   Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#   Mapred ports\nEXPOSE 10020/tcp 19888/tcp\n#  Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n#  Other ports\nEXPOSE 49707/tcp 2122/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Creates pseudo distributed hadoop 2.7.1\n#\n#  docker build -t sequenceiq/hadoop .\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER SequenceIQ\nUSER root\n#  install dev tools\nRUN yum clean all ; rpm --rebuilddb ; yum install -y curl which tar sudo openssh-server openssh-clients rsync\n#  update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\nRUN yum update -y libselinux\n#  passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  java\nRUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\nRUN rpm -i jdk-7u71-linux-x64.rpm\nRUN rm jdk-7u71-linux-x64.rpm\nENV JAVA_HOME=\"/usr/java/default\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nRUN rm /usr/bin/java \\\n && ln -s $JAVA_HOME/bin/java /usr/bin/java\n#  download native support\nRUN mkdir -p /tmp/native\nRUN curl -L https://github.com/sequenceiq/docker-hadoop-build/releases/download/v2.7.1/hadoop-native-64-2.7.1.tgz | tar -xz -C /tmp/native\n#  hadoop\nRUN curl -s http://www.eu.apache.org/dist/hadoop/common/hadoop-2.7.1/hadoop-2.7.1.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local \\\n && ln -s ./hadoop-2.7.1 hadoop\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nENV HADOOP_COMMON_HOME=\"/usr/local/hadoop\"\nENV HADOOP_HDFS_HOME=\"/usr/local/hadoop\"\nENV HADOOP_MAPRED_HOME=\"/usr/local/hadoop\"\nENV HADOOP_YARN_HOME=\"/usr/local/hadoop\"\nENV HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV YARN_CONF_DIR=\"$HADOOP_PREFIX/etc/hadoop\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n# RUN . $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN mkdir $HADOOP_PREFIX/input\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n#  pseudo distributed\nADD core-site.xml.template $HADOOP_PREFIX/etc/hadoop/core-site.xml.template\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\nADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\n#  fixing the libhadoop.so like a boss\nRUN rm -rf /usr/local/hadoop/lib/native\nRUN mv /tmp/native /usr/local/hadoop/lib\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n#  # installing supervisord\n#  RUN yum install -y python-setuptools\n#  RUN easy_install pip\n#  RUN curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -o - | python\n#  RUN pip install supervisor\n#\n#  ADD supervisord.conf /etc/supervisord.conf\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\nENV BOOTSTRAP=\"/etc/bootstrap.sh\"\n#  workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n#  fix the 254 error code\nRUN sed -i \"/^[^#]*UsePAM/ s/.*/#&/\" /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -mkdir -p /user/root\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -put $HADOOP_PREFIX/etc/hadoop/ input\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n#  Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#  Mapred ports\nEXPOSE 10020/tcp 19888/tcp\n# Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n# Other ports\nEXPOSE 49707/tcp 2122/tcp\n","injectedSmells":[],"originalDockerfileHash":"6cd92ff26ce6f4c21eaf7bcaef8eb1a6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Creates pseudo distributed hadoop 2.7.1\n#\n#   docker build -t sequenceiq/hadoop .\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER SequenceIQ\nUSER root\n#   install dev tools\nRUN yum clean all ; rpm --rebuilddb ; yum install -y curl which tar sudo openssh-server openssh-clients rsync\n#   update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\nRUN yum update -y libselinux\n#   passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#   java\nRUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\nRUN rpm -i jdk-7u71-linux-x64.rpm\nRUN rm jdk-7u71-linux-x64.rpm\nENV JAVA_HOME=\"/usr/java/default\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nRUN rm /usr/bin/java \\\n && ln -s $JAVA_HOME/bin/java /usr/bin/java\n#   download native support\nRUN mkdir -p /tmp/native\nRUN curl -L https://github.com/sequenceiq/docker-hadoop-build/releases/download/v2.7.1/hadoop-native-64-2.7.1.tgz | tar -xz -C /tmp/native\n#   hadoop\nRUN curl -s http://www.eu.apache.org/dist/hadoop/common/hadoop-2.7.1/hadoop-2.7.1.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local \\\n && ln -s ./hadoop-2.7.1 hadoop\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nENV HADOOP_COMMON_HOME=\"/usr/local/hadoop\"\nENV HADOOP_HDFS_HOME=\"/usr/local/hadoop\"\nENV HADOOP_MAPRED_HOME=\"/usr/local/hadoop\"\nENV HADOOP_YARN_HOME=\"/usr/local/hadoop\"\nENV HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV YARN_CONF_DIR=\"$HADOOP_PREFIX/etc/hadoop\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n#  RUN . $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN mkdir $HADOOP_PREFIX/input\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n#   pseudo distributed\nADD core-site.xml.template $HADOOP_PREFIX/etc/hadoop/core-site.xml.template\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\nADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\n#   fixing the libhadoop.so like a boss\nRUN rm -rf /usr/local/hadoop/lib/native\nRUN mv /tmp/native /usr/local/hadoop/lib\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n#   # installing supervisord\n#   RUN yum install -y python-setuptools\n#   RUN easy_install pip\n#   RUN curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -o - | python\n#   RUN pip install supervisor\n#\n#   ADD supervisord.conf /etc/supervisord.conf\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\nENV BOOTSTRAP=\"/etc/bootstrap.sh\"\n#   workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n#   fix the 254 error code\nRUN sed -i \"/^[^#]*UsePAM/ s/.*/#&/\" /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -mkdir -p /user/root\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -put $HADOOP_PREFIX/etc/hadoop/ input\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n#   Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#   Mapred ports\nEXPOSE 10020/tcp 19888/tcp\n#  Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n#  Other ports\nEXPOSE 49707/tcp 2122/tcp\n","originalDockerfileUglifiedHash":"33af9452cc1303193a5f2a35a3412c9e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b1a55d931dccecffdeebb83853d39ccd7a7ec7c9.dockerfile"}