{"seed":2601266511,"processedDockerfileHash":"9a1a9c437a9b55ebe7a4762d9cf4284a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#  -------------------------------------------------------------------------------\n#   Dockerfile for cross-compiling the Ethereum C++ components for mobile Linux\n#   platforms such as Tizen, Sailfish and Ubuntu Touch.  Assumes that we have\n#   previous built the cross-compiler and can just copy that into our\n#   container.\n#\n#   See http://ethereum.org/ to learn more about Ethereum.\n#   See http://doublethink.co/ to learn more about doublethinkco\n#\n#   Copyright (c) 2015-2016 Kitsilano Software Inc (https://doublethink.co)\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.  \n#  -------------------------------------------------------------------------------\nFROM ubuntu:wily\nMAINTAINER Bob Summerwill <bob@summerwill.net>\n#   External packages required by our scripts\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-8 bzip2=1.0.6-8 cmake=3.2.2-2ubuntu3 git=1:2.5.0-1ubuntu0.2 m4=1.4.17-4 texinfo=6.0.0.dfsg.1-3 tree=1.7.0-3 unzip=6.0-17ubuntu1.2 wget=1.16.1-1ubuntu1 -y\n#   Install \"official\" armel and armhf cross-compiler packages, which\n#   can be used as an alternative to our own custom crosstool-NG toolchains.\n#\n#   NOTE - The GCC armel cross-compiler package which comes with\n#   Ubuntu-14.04 (Trusty) is REALLY old (GCC 4.7.2, released September 2012)\n#   and is pretty much unusable on this code-base.\n#\n#   NOTE - Tizen ships with an even older version of GCC again :-)\n#   The Gear S2 smartwatch comes with libstdc++.so.6.0.16, which is the\n#   version which shipped with GCC 4.6.1, released in April 2010.   Running\n#   the armel binaries generated with the GCC 5.2.1 cross-compiler which\n#   we are now using here results in binaries which we cannot run on the\n#   Gear S2.  That results in the following runtime errors:\n#\n#       ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by ./eth)\n#       ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.19' not found (required by ./eth)\n#       ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.17' not found (required by ./eth)\n#       ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.18' not found (required by\n#\n#   So it looks like I am going to have to specifically use an older\n#   sysroot to get something which can work on the Gear S2.  I am unable\n#   SDB connect to any of my other Tizen devices right now, so cannot verify\n#   if they have slightly newer runtime libraries.  The SDK does also have a\n#   GCC-4.9 toolchain, which perhaps was included in the Tizen 2.4 runtime?\n#   Using a different sysroot will involve getting GCC 4.6 headers and libraries\n#   onto the build machine, and then getting -sysroot into the CC and CXX\n#   command-lines, probably by creating a shell script which wraps the\n#   actual GCC binaries, as per the example below.\n#\n#   See http://stackoverflow.com/questions/2977182/alternatives-to-the-sysroot-switch-of-gcc\nRUN apt-get update \\\n && apt-get install --no-install-recommends g++-arm-linux-gnueabi=4:5.2.1-1 gcc-arm-linux-gnueabi=4:5.2.1-1 g++-arm-linux-gnueabihf=4:5.2.1-1 gcc-arm-linux-gnueabihf=4:5.2.1-1 -y\n#   Switch to a normal user account.\nRUN useradd -ms /bin/bash crosseth\nUSER crosseth\n#   Commit of the webthree-umbrella repo to use.\nENV CPP_ETHEREUM_REPO=\"https://github.com/doublethinkco/cpp-ethereum.git\"\nENV CPP_ETHEREUM_BRANCH=\"develop\"\n#   Workaround - using doublethinkco fork of cpp-ethereum to chop out std::future usage.\n#\n#   See \"Build break - armel - invalid use of incomplete type 'class std::future<void>\"\n#   https://github.com/doublethinkco/cpp-ethereum-cross/issues/111\n#   https://github.com/doublethinkco/cpp-ethereum/commit/edfafc\nENV CPP_ETHEREUM_COMMIT=\"415fe0c\"\n#   Clone the webthree-umbrella repo into the docker container, including sub-modules\nWORKDIR /home/crosseth\nRUN git clone -b ${CPP_ETHEREUM_BRANCH} --recursive ${CPP_ETHEREUM_REPO} \\\n && cd cpp-ethereum \\\n && git checkout ${CPP_ETHEREUM_COMMIT} \\\n && git submodule update --init\n#   Copy our cross-building scripts into the container\nCOPY cross-build/ /home/crosseth/cpp-ethereum/cross-build/\n#   And switch the working directory to the Ethereum cross-build scripts\nWORKDIR /home/crosseth/cpp-ethereum/cross-build/ethereum\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# -------------------------------------------------------------------------------\n#  Dockerfile for cross-compiling the Ethereum C++ components for mobile Linux\n#  platforms such as Tizen, Sailfish and Ubuntu Touch.  Assumes that we have\n#  previous built the cross-compiler and can just copy that into our\n#  container.\n#\n#  See http://ethereum.org/ to learn more about Ethereum.\n#  See http://doublethink.co/ to learn more about doublethinkco\n#\n#  Copyright (c) 2015-2016 Kitsilano Software Inc (https://doublethink.co)\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.  \n# -------------------------------------------------------------------------------\nFROM ubuntu:wily\nMAINTAINER Bob Summerwill <bob@summerwill.net>\n#  External packages required by our scripts\nRUN apt-get update \\\n && apt-get install autoconf=2.69-8 bzip2=1.0.6-8 cmake=3.2.2-2ubuntu3 git=1:2.5.0-1ubuntu0.2 m4=1.4.17-4 texinfo=6.0.0.dfsg.1-3 tree=1.7.0-3 unzip=6.0-17ubuntu1.2 wget=1.16.1-1ubuntu1 -y\n#  Install \"official\" armel and armhf cross-compiler packages, which\n#  can be used as an alternative to our own custom crosstool-NG toolchains.\n#\n#  NOTE - The GCC armel cross-compiler package which comes with\n#  Ubuntu-14.04 (Trusty) is REALLY old (GCC 4.7.2, released September 2012)\n#  and is pretty much unusable on this code-base.\n#\n#  NOTE - Tizen ships with an even older version of GCC again :-)\n#  The Gear S2 smartwatch comes with libstdc++.so.6.0.16, which is the\n#  version which shipped with GCC 4.6.1, released in April 2010.   Running\n#  the armel binaries generated with the GCC 5.2.1 cross-compiler which\n#  we are now using here results in binaries which we cannot run on the\n#  Gear S2.  That results in the following runtime errors:\n#\n#      ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by ./eth)\n#      ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.19' not found (required by ./eth)\n#      ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.17' not found (required by ./eth)\n#      ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.18' not found (required by\n#\n#  So it looks like I am going to have to specifically use an older\n#  sysroot to get something which can work on the Gear S2.  I am unable\n#  SDB connect to any of my other Tizen devices right now, so cannot verify\n#  if they have slightly newer runtime libraries.  The SDK does also have a\n#  GCC-4.9 toolchain, which perhaps was included in the Tizen 2.4 runtime?\n#  Using a different sysroot will involve getting GCC 4.6 headers and libraries\n#  onto the build machine, and then getting -sysroot into the CC and CXX\n#  command-lines, probably by creating a shell script which wraps the\n#  actual GCC binaries, as per the example below.\n#\n#  See http://stackoverflow.com/questions/2977182/alternatives-to-the-sysroot-switch-of-gcc\nRUN apt-get update \\\n && apt-get install g++-arm-linux-gnueabi=4:5.2.1-1 gcc-arm-linux-gnueabi=4:5.2.1-1 g++-arm-linux-gnueabihf=4:5.2.1-1 gcc-arm-linux-gnueabihf=4:5.2.1-1 -y\n#  Switch to a normal user account.\nRUN useradd -ms /bin/bash crosseth\nUSER crosseth\n#  Commit of the webthree-umbrella repo to use.\nENV CPP_ETHEREUM_REPO=\"https://github.com/doublethinkco/cpp-ethereum.git\"\nENV CPP_ETHEREUM_BRANCH=\"develop\"\n#  Workaround - using doublethinkco fork of cpp-ethereum to chop out std::future usage.\n#\n#  See \"Build break - armel - invalid use of incomplete type 'class std::future<void>\"\n#  https://github.com/doublethinkco/cpp-ethereum-cross/issues/111\n#  https://github.com/doublethinkco/cpp-ethereum/commit/edfafc\nENV CPP_ETHEREUM_COMMIT=\"415fe0c\"\n#  Clone the webthree-umbrella repo into the docker container, including sub-modules\nWORKDIR /home/crosseth\nRUN git clone -b ${CPP_ETHEREUM_BRANCH} --recursive ${CPP_ETHEREUM_REPO} \\\n && cd cpp-ethereum \\\n && git checkout ${CPP_ETHEREUM_COMMIT} \\\n && git submodule update --init\n#  Copy our cross-building scripts into the container\nADD cross-build/ /home/crosseth/cpp-ethereum/cross-build/\n#  And switch the working directory to the Ethereum cross-build scripts\nWORKDIR /home/crosseth/cpp-ethereum/cross-build/ethereum\n","injectedSmells":[],"originalDockerfileHash":"a760ee3371685c082ea80d6d9b0c2d4f","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  -------------------------------------------------------------------------------\n#   Dockerfile for cross-compiling the Ethereum C++ components for mobile Linux\n#   platforms such as Tizen, Sailfish and Ubuntu Touch.  Assumes that we have\n#   previous built the cross-compiler and can just copy that into our\n#   container.\n#\n#   See http://ethereum.org/ to learn more about Ethereum.\n#   See http://doublethink.co/ to learn more about doublethinkco\n#\n#   Copyright (c) 2015-2016 Kitsilano Software Inc (https://doublethink.co)\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.  \n#  -------------------------------------------------------------------------------\nFROM ubuntu:wily\nMAINTAINER Bob Summerwill <bob@summerwill.net>\n#   External packages required by our scripts\nRUN apt-get update \\\n && apt-get install autoconf=2.69-8 bzip2=1.0.6-8 cmake=3.2.2-2ubuntu3 git=1:2.5.0-1ubuntu0.2 m4=1.4.17-4 texinfo=6.0.0.dfsg.1-3 tree=1.7.0-3 unzip=6.0-17ubuntu1.2 wget=1.16.1-1ubuntu1 -y\n#   Install \"official\" armel and armhf cross-compiler packages, which\n#   can be used as an alternative to our own custom crosstool-NG toolchains.\n#\n#   NOTE - The GCC armel cross-compiler package which comes with\n#   Ubuntu-14.04 (Trusty) is REALLY old (GCC 4.7.2, released September 2012)\n#   and is pretty much unusable on this code-base.\n#\n#   NOTE - Tizen ships with an even older version of GCC again :-)\n#   The Gear S2 smartwatch comes with libstdc++.so.6.0.16, which is the\n#   version which shipped with GCC 4.6.1, released in April 2010.   Running\n#   the armel binaries generated with the GCC 5.2.1 cross-compiler which\n#   we are now using here results in binaries which we cannot run on the\n#   Gear S2.  That results in the following runtime errors:\n#\n#       ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by ./eth)\n#       ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.19' not found (required by ./eth)\n#       ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.17' not found (required by ./eth)\n#       ./eth: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.18' not found (required by\n#\n#   So it looks like I am going to have to specifically use an older\n#   sysroot to get something which can work on the Gear S2.  I am unable\n#   SDB connect to any of my other Tizen devices right now, so cannot verify\n#   if they have slightly newer runtime libraries.  The SDK does also have a\n#   GCC-4.9 toolchain, which perhaps was included in the Tizen 2.4 runtime?\n#   Using a different sysroot will involve getting GCC 4.6 headers and libraries\n#   onto the build machine, and then getting -sysroot into the CC and CXX\n#   command-lines, probably by creating a shell script which wraps the\n#   actual GCC binaries, as per the example below.\n#\n#   See http://stackoverflow.com/questions/2977182/alternatives-to-the-sysroot-switch-of-gcc\nRUN apt-get update \\\n && apt-get install g++-arm-linux-gnueabi=4:5.2.1-1 gcc-arm-linux-gnueabi=4:5.2.1-1 g++-arm-linux-gnueabihf=4:5.2.1-1 gcc-arm-linux-gnueabihf=4:5.2.1-1 -y\n#   Switch to a normal user account.\nRUN useradd -ms /bin/bash crosseth\nUSER crosseth\n#   Commit of the webthree-umbrella repo to use.\nENV CPP_ETHEREUM_REPO=\"https://github.com/doublethinkco/cpp-ethereum.git\"\nENV CPP_ETHEREUM_BRANCH=\"develop\"\n#   Workaround - using doublethinkco fork of cpp-ethereum to chop out std::future usage.\n#\n#   See \"Build break - armel - invalid use of incomplete type 'class std::future<void>\"\n#   https://github.com/doublethinkco/cpp-ethereum-cross/issues/111\n#   https://github.com/doublethinkco/cpp-ethereum/commit/edfafc\nENV CPP_ETHEREUM_COMMIT=\"415fe0c\"\n#   Clone the webthree-umbrella repo into the docker container, including sub-modules\nWORKDIR /home/crosseth\nRUN git clone -b ${CPP_ETHEREUM_BRANCH} --recursive ${CPP_ETHEREUM_REPO} \\\n && cd cpp-ethereum \\\n && git checkout ${CPP_ETHEREUM_COMMIT} \\\n && git submodule update --init\n#   Copy our cross-building scripts into the container\nADD cross-build/ /home/crosseth/cpp-ethereum/cross-build/\n#   And switch the working directory to the Ethereum cross-build scripts\nWORKDIR /home/crosseth/cpp-ethereum/cross-build/ethereum\n","originalDockerfileUglifiedHash":"886f24824b62f3a841391627d1c56101","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/352c9b126b67a6d28f92055758f5476cbf8fe799.dockerfile"}