{"seed":103110281,"processedDockerfileHash":"3426b2e4eb8e831b1f69b14cde8e61ec","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:8\nMAINTAINER Simon Meggle<simon.meggle@consol.de>\nEXPOSE 80/tcp 443/tcp 22/tcp 4730/tcp 5666/tcp\nLABEL org.freenas.interactive=\"false\" \\\n      org.freenas.version=\"20170323\" \\\n      org.freenas.upgradeable=\"true\" \\\n      org.freenas.expose-ports-at-host=\"true\" \\\n      org.freenas.autostart=\"true\" \\\n      org.freenas.web-ui-protocol=\"https\" \\\n      org.freenas.web-ui-port=\"443\" \\\n      org.freenas.web-ui-path=\"/cmk\" \\\n      org.freenas.port-mappings=\"80:80/tcp,443:443/tcp,22:22/tcp,4730:4730/tcp,5666:5666/tcp\" \\\n      org.freenas.volumes=\"[                                             {                                                              \\\"name\\\": \\\"/opt/omd/sites/cmk/etc\\\",                      \\\"descr\\\": \\\"CMK site /etc\\\"                               },                                                             {                                                              \\\"name\\\": \\\"/opt/omd/sites/cmk/var\\\",                      \\\"descr\\\": \\\"CMK site /var\\\"                               },                                                             {                                                              \\\"name\\\": \\\"/opt/omd/sites/cmk/local\\\",                    \\\"descr\\\": \\\"CMK site /local\\\"                             }                                                              ]\" \\\n      org.freenas.settings=\"[                                           {                                                              \\\"env\\\": \\\"PUID\\\",                                         \\\"descr\\\": \\\"UserID - Keep as 1000\\\",                      \\\"optional\\\": false                                        },                                                             {                                                              \\\"env\\\": \\\"PGID\\\",                                         \\\"descr\\\": \\\"GroupID - Keep as 1000\\\",                     \\\"optional\\\": false                                        },                                                             {                                                              \\\"env\\\": \\\"TZ\\\",                                           \\\"descr\\\": \\\"Timezone - eg Europe/London\\\",                \\\"optional\\\": true                                         }                                                              ]\"\nENV REFRESHED=\"20170323\"\n#  ## OMD installation ######################################\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo 'net.ipv6.conf.default.disable_ipv6 = 1' > /etc/sysctl.d/20-ipv6-disable.conf; echo 'net.ipv6.conf.all.disable_ipv6 = 1' >> /etc/sysctl.d/20-ipv6-disable.conf; echo 'net.ipv6.conf.lo.disable_ipv6 = 1' >> /etc/sysctl.d/20-ipv6-disable.conf; cat /etc/sysctl.d/20-ipv6-disable.conf ; sysctl -p\nRUN apt-get update \\\n && apt-get install --no-install-recommends lsof vim git openssh-server tree tcpdump libevent-2.0-5 -y\nRUN gpg --keyserver keys.gnupg.net --recv-keys F8C1CA08A57B9ED7 \\\n && gpg --armor --export F8C1CA08A57B9ED7 | apt-key add - \\\n && echo \"deb http://labs.consol.de/repo/testing/debian $( cat /etc/os-release | grep 'VERSION=' | tr '(' ')' | cut -d ')' -f2 ;) main\" > /etc/apt/sources.list.d/labs-consol-testing.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends omd-labs-edition-daily -y \\\n && apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  ### user environment ######################################\nENV HOME=\"/root\"\nWORKDIR $HOME\nCOPY ./scripts/debian/start.sh $HOME\n#  ### ansible ################################################\nARG ANSIBLE_DROPIN=$HOME/ansible_dropin\nENV ANSIBLE_DROPIN=\"$ANSIBLE_DROPIN\"\nENV PYTHONPATH=\"/omd/versions/default/lib/python/\"\nENV ANSIBLE_CONFIG=\"${ANSIBLE_DROPIN}/ansible.cfg\"\nENV ANSIBLE_VERBOSITY=\"\"\n#  ## -- OMD site creation (DEMO) ##############################\nARG SITENAME=demo\nENV SITENAME=\"cmk\"\nRUN echo \"export SITENAME=$SITENAME\" > .sitename.env\nRUN sed -i 's|echo \"on\"$|echo \"off\"|' /opt/omd/versions/default/lib/omd/hooks/TMPFS\nRUN echo \"create OMD site: $SITENAME\" \\\n && omd create -u 1000 -g 1000 $SITENAME || true\n#  ## PERSISTENT VOLUMES #######################################\n#   Dynamic OMD data folders (etc, local, var) are renamed to .ORIG.\n#   On run time the start script (start.sh) will check if any of this folders is mounted from the host\n#   - if not => no data container mounts\n#     -> remove symlinks\n#     -> move .ORIG paths to the original location\n#   - if data container mount points\n#     -> nothing to do, use the mounts.\nRUN mv /omd/sites/$SITENAME/local /omd/sites/$SITENAME/local.ORIG \\\n && mv /omd/sites/$SITENAME/etc /omd/sites/$SITENAME/etc.ORIG \\\n && mv /omd/sites/$SITENAME/var /omd/sites/$SITENAME/var.ORIG\n#   -- ONBUILD\n#   when used as a base image, this instructions trigger the creation of another site if NEW_SITENAME is not `demo`\nONBUILD ARG NEW_SITENAME=demo\nONBUILD ENV NEW_SITENAME=\"$NEW_SITENAME\"\nONBUILD RUN [ \"$NEW_SITENAME\" != \"demo\" ] \\\n && echo \"export SITENAME=$NEW_SITENAME\" > .sitename.env \\\n && echo \"CREATE new site:$NEW_SITENAME\" \\\n && omd -f rm $SITENAME \\\n && omd create -u 1001 -g 1001 $NEW_SITENAME || true\nONBUILD RUN [ \"$NEW_SITENAME\" != \"demo\" ] \\\n && mv /omd/sites/$NEW_SITENAME/local /omd/sites/$NEW_SITENAME/local.ORIG \\\n && mv /omd/sites/$NEW_SITENAME/etc /omd/sites/$NEW_SITENAME/etc.ORIG \\\n && mv /omd/sites/$NEW_SITENAME/var /omd/sites/$NEW_SITENAME/var.ORIG || true\nCMD [\"/root/start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:8\nMAINTAINER Simon Meggle<simon.meggle@consol.de>\nEXPOSE 80/tcp 443/tcp 22/tcp 4730/tcp 5666/tcp\nLABEL org.freenas.interactive=\"false\" \\\n      org.freenas.version=\"20170323\" \\\n      org.freenas.upgradeable=\"true\" \\\n      org.freenas.expose-ports-at-host=\"true\" \\\n      org.freenas.autostart=\"true\" \\\n      org.freenas.web-ui-protocol=\"https\" \\\n      org.freenas.web-ui-port=\"443\" \\\n      org.freenas.web-ui-path=\"/cmk\" \\\n      org.freenas.port-mappings=\"80:80/tcp,443:443/tcp,22:22/tcp,4730:4730/tcp,5666:5666/tcp\" \\\n      org.freenas.volumes=\"[                                             {                                                              \\\"name\\\": \\\"/opt/omd/sites/cmk/etc\\\",                      \\\"descr\\\": \\\"CMK site /etc\\\"                               },                                                             {                                                              \\\"name\\\": \\\"/opt/omd/sites/cmk/var\\\",                      \\\"descr\\\": \\\"CMK site /var\\\"                               },                                                             {                                                              \\\"name\\\": \\\"/opt/omd/sites/cmk/local\\\",                    \\\"descr\\\": \\\"CMK site /local\\\"                             }                                                              ]\" \\\n      org.freenas.settings=\"[                                           {                                                              \\\"env\\\": \\\"PUID\\\",                                         \\\"descr\\\": \\\"UserID - Keep as 1000\\\",                      \\\"optional\\\": false                                        },                                                             {                                                              \\\"env\\\": \\\"PGID\\\",                                         \\\"descr\\\": \\\"GroupID - Keep as 1000\\\",                     \\\"optional\\\": false                                        },                                                             {                                                              \\\"env\\\": \\\"TZ\\\",                                           \\\"descr\\\": \\\"Timezone - eg Europe/London\\\",                \\\"optional\\\": true                                         }                                                              ]\"\nENV REFRESHED=\"20170323\"\n# ## OMD installation ######################################\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo 'net.ipv6.conf.default.disable_ipv6 = 1' > /etc/sysctl.d/20-ipv6-disable.conf; echo 'net.ipv6.conf.all.disable_ipv6 = 1' >> /etc/sysctl.d/20-ipv6-disable.conf; echo 'net.ipv6.conf.lo.disable_ipv6 = 1' >> /etc/sysctl.d/20-ipv6-disable.conf; cat /etc/sysctl.d/20-ipv6-disable.conf ; sysctl -p\nRUN apt-get update \\\n && apt-get install lsof vim git openssh-server tree tcpdump libevent-2.0-5 -y\nRUN gpg --keyserver keys.gnupg.net --recv-keys F8C1CA08A57B9ED7 \\\n && gpg --armor --export F8C1CA08A57B9ED7 | apt-key add - \\\n && echo \"deb http://labs.consol.de/repo/testing/debian $( cat /etc/os-release | grep 'VERSION=' | tr '(' ')' | cut -d ')' -f2 ;) main\" > /etc/apt/sources.list.d/labs-consol-testing.list \\\n && apt-get update \\\n && apt-get install omd-labs-edition-daily -y \\\n && apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n# ### user environment ######################################\nENV HOME=\"/root\"\nWORKDIR $HOME\nADD ./scripts/debian/start.sh $HOME\n# ### ansible ################################################\nARG ANSIBLE_DROPIN=$HOME/ansible_dropin\nENV ANSIBLE_DROPIN=\"$ANSIBLE_DROPIN\"\nENV PYTHONPATH=\"/omd/versions/default/lib/python/\"\nENV ANSIBLE_CONFIG=\"${ANSIBLE_DROPIN}/ansible.cfg\"\nENV ANSIBLE_VERBOSITY=\"\"\n# ## -- OMD site creation (DEMO) ##############################\nARG SITENAME=demo\nENV SITENAME=\"cmk\"\nRUN echo \"export SITENAME=$SITENAME\" > .sitename.env\nRUN sed -i 's|echo \"on\"$|echo \"off\"|' /opt/omd/versions/default/lib/omd/hooks/TMPFS\nRUN echo \"create OMD site: $SITENAME\" \\\n && omd create -u 1000 -g 1000 $SITENAME || true\n# ## PERSISTENT VOLUMES #######################################\n#  Dynamic OMD data folders (etc, local, var) are renamed to .ORIG.\n#  On run time the start script (start.sh) will check if any of this folders is mounted from the host\n#  - if not => no data container mounts\n#    -> remove symlinks\n#    -> move .ORIG paths to the original location\n#  - if data container mount points\n#    -> nothing to do, use the mounts.\nRUN mv /omd/sites/$SITENAME/local /omd/sites/$SITENAME/local.ORIG \\\n && mv /omd/sites/$SITENAME/etc /omd/sites/$SITENAME/etc.ORIG \\\n && mv /omd/sites/$SITENAME/var /omd/sites/$SITENAME/var.ORIG\n#  -- ONBUILD\n#  when used as a base image, this instructions trigger the creation of another site if NEW_SITENAME is not `demo`\nONBUILD ARG NEW_SITENAME=demo\nONBUILD ENV NEW_SITENAME=\"$NEW_SITENAME\"\nONBUILD RUN [ \"$NEW_SITENAME\" != \"demo\" ] \\\n && echo \"export SITENAME=$NEW_SITENAME\" > .sitename.env \\\n && echo \"CREATE new site:$NEW_SITENAME\" \\\n && omd -f rm $SITENAME \\\n && omd create -u 1001 -g 1001 $NEW_SITENAME || true\nONBUILD RUN [ \"$NEW_SITENAME\" != \"demo\" ] \\\n && mv /omd/sites/$NEW_SITENAME/local /omd/sites/$NEW_SITENAME/local.ORIG \\\n && mv /omd/sites/$NEW_SITENAME/etc /omd/sites/$NEW_SITENAME/etc.ORIG \\\n && mv /omd/sites/$NEW_SITENAME/var /omd/sites/$NEW_SITENAME/var.ORIG || true\nCMD [\"/root/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"92c42efed835359d3420b96906255689","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:8\nMAINTAINER Simon Meggle<simon.meggle@consol.de>\nEXPOSE 80/tcp 443/tcp 22/tcp 4730/tcp 5666/tcp\nLABEL org.freenas.interactive=\"false\" \\\n      org.freenas.version=\"20170323\" \\\n      org.freenas.upgradeable=\"true\" \\\n      org.freenas.expose-ports-at-host=\"true\" \\\n      org.freenas.autostart=\"true\" \\\n      org.freenas.web-ui-protocol=\"https\" \\\n      org.freenas.web-ui-port=\"443\" \\\n      org.freenas.web-ui-path=\"/cmk\" \\\n      org.freenas.port-mappings=\"80:80/tcp,443:443/tcp,22:22/tcp,4730:4730/tcp,5666:5666/tcp\" \\\n      org.freenas.volumes=\"[                                             {                                                              \\\"name\\\": \\\"/opt/omd/sites/cmk/etc\\\",                      \\\"descr\\\": \\\"CMK site /etc\\\"                               },                                                             {                                                              \\\"name\\\": \\\"/opt/omd/sites/cmk/var\\\",                      \\\"descr\\\": \\\"CMK site /var\\\"                               },                                                             {                                                              \\\"name\\\": \\\"/opt/omd/sites/cmk/local\\\",                    \\\"descr\\\": \\\"CMK site /local\\\"                             }                                                              ]\" \\\n      org.freenas.settings=\"[                                           {                                                              \\\"env\\\": \\\"PUID\\\",                                         \\\"descr\\\": \\\"UserID - Keep as 1000\\\",                      \\\"optional\\\": false                                        },                                                             {                                                              \\\"env\\\": \\\"PGID\\\",                                         \\\"descr\\\": \\\"GroupID - Keep as 1000\\\",                     \\\"optional\\\": false                                        },                                                             {                                                              \\\"env\\\": \\\"TZ\\\",                                           \\\"descr\\\": \\\"Timezone - eg Europe/London\\\",                \\\"optional\\\": true                                         }                                                              ]\"\nENV REFRESHED=\"20170323\"\n#  ## OMD installation ######################################\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo 'net.ipv6.conf.default.disable_ipv6 = 1' > /etc/sysctl.d/20-ipv6-disable.conf; echo 'net.ipv6.conf.all.disable_ipv6 = 1' >> /etc/sysctl.d/20-ipv6-disable.conf; echo 'net.ipv6.conf.lo.disable_ipv6 = 1' >> /etc/sysctl.d/20-ipv6-disable.conf; cat /etc/sysctl.d/20-ipv6-disable.conf ; sysctl -p\nRUN apt-get update \\\n && apt-get install lsof vim git openssh-server tree tcpdump libevent-2.0-5 -y\nRUN gpg --keyserver keys.gnupg.net --recv-keys F8C1CA08A57B9ED7 \\\n && gpg --armor --export F8C1CA08A57B9ED7 | apt-key add - \\\n && echo \"deb http://labs.consol.de/repo/testing/debian $( cat /etc/os-release | grep 'VERSION=' | tr '(' ')' | cut -d ')' -f2 ;) main\" > /etc/apt/sources.list.d/labs-consol-testing.list \\\n && apt-get update \\\n && apt-get install omd-labs-edition-daily -y \\\n && apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  ### user environment ######################################\nENV HOME=\"/root\"\nWORKDIR $HOME\nADD ./scripts/debian/start.sh $HOME\n#  ### ansible ################################################\nARG ANSIBLE_DROPIN=$HOME/ansible_dropin\nENV ANSIBLE_DROPIN=\"$ANSIBLE_DROPIN\"\nENV PYTHONPATH=\"/omd/versions/default/lib/python/\"\nENV ANSIBLE_CONFIG=\"${ANSIBLE_DROPIN}/ansible.cfg\"\nENV ANSIBLE_VERBOSITY=\"\"\n#  ## -- OMD site creation (DEMO) ##############################\nARG SITENAME=demo\nENV SITENAME=\"cmk\"\nRUN echo \"export SITENAME=$SITENAME\" > .sitename.env\nRUN sed -i 's|echo \"on\"$|echo \"off\"|' /opt/omd/versions/default/lib/omd/hooks/TMPFS\nRUN echo \"create OMD site: $SITENAME\" \\\n && omd create -u 1000 -g 1000 $SITENAME || true\n#  ## PERSISTENT VOLUMES #######################################\n#   Dynamic OMD data folders (etc, local, var) are renamed to .ORIG.\n#   On run time the start script (start.sh) will check if any of this folders is mounted from the host\n#   - if not => no data container mounts\n#     -> remove symlinks\n#     -> move .ORIG paths to the original location\n#   - if data container mount points\n#     -> nothing to do, use the mounts.\nRUN mv /omd/sites/$SITENAME/local /omd/sites/$SITENAME/local.ORIG \\\n && mv /omd/sites/$SITENAME/etc /omd/sites/$SITENAME/etc.ORIG \\\n && mv /omd/sites/$SITENAME/var /omd/sites/$SITENAME/var.ORIG\n#   -- ONBUILD\n#   when used as a base image, this instructions trigger the creation of another site if NEW_SITENAME is not `demo`\nONBUILD ARG NEW_SITENAME=demo\nONBUILD ENV NEW_SITENAME=\"$NEW_SITENAME\"\nONBUILD RUN [ \"$NEW_SITENAME\" != \"demo\" ] \\\n && echo \"export SITENAME=$NEW_SITENAME\" > .sitename.env \\\n && echo \"CREATE new site:$NEW_SITENAME\" \\\n && omd -f rm $SITENAME \\\n && omd create -u 1001 -g 1001 $NEW_SITENAME || true\nONBUILD RUN [ \"$NEW_SITENAME\" != \"demo\" ] \\\n && mv /omd/sites/$NEW_SITENAME/local /omd/sites/$NEW_SITENAME/local.ORIG \\\n && mv /omd/sites/$NEW_SITENAME/etc /omd/sites/$NEW_SITENAME/etc.ORIG \\\n && mv /omd/sites/$NEW_SITENAME/var /omd/sites/$NEW_SITENAME/var.ORIG || true\nCMD [\"/root/start.sh\"]\n","originalDockerfileUglifiedHash":"dd96a143ee868c61bfabe17bccb48a60","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ea200dc6abc2c77ec20b7f0cd583885e8906cf6e.dockerfile"}