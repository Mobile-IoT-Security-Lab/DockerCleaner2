{"seed":2071900247,"processedDockerfileHash":"b42955d8ad9c3d50320f1aa5dc6f400e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"FROM alpine:3.4\nMAINTAINER \"Paolo D'Onorio De Meo <p.donoriodemeo@gmail.it>\"\n#   RUN apk add --no-cache python3 && \\\n#       python3 -m ensurepip && \\\n#       rm -r /usr/lib/python*/ensurepip && \\\n#       pip3 --no-cache-dir install --upgrade pip setuptools && \\\n#       rm -r /root/.cache\n#   # RUN apk update && apk upgrade \\\n#   #     && apk add \\\n#   #     py-setuptools\nRUN apk update \\\n && apk upgrade\nRUN apk --update --no-cache --repository http://dl-4.alpinelinux.org/alpine/edge/community add bash git curl ca-certificates bzip2 unzip sudo tini\nRUN curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk\" -o /tmp/glibc.apk \\\n && curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk\" -o /tmp/glibc-bin.apk \\\n && curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-i18n-2.23-r3.apk\" -o /tmp/glibc-i18n.apk \\\n && apk add /tmp/glibc*.apk --allow-untrusted \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n && rm -rf /tmp/glibc*apk /var/cache/apk/*\nRUN apk add rethinkdb --no-cache --repository http://dl-4.alpinelinux.org/alpine/edge/testing\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    CONDA_VER=\"4.1.11\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    SHELL=\"/bin/bash\" \\\n    LANG=\"C.UTF-8\"\nENV CONDA_REPO=\"https://repo.continuum.io/miniconda\"\n#   Install conda\nRUN mkdir -p $CONDA_DIR \\\n && echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh \\\n && curl $CONDA_REPO/Miniconda3-${CONDA_VER}-Linux-x86_64.sh -o mconda.sh \\\n && /bin/bash mconda.sh -f -b -p $CONDA_DIR \\\n && rm mconda.sh \\\n && $CONDA_DIR/bin/conda install --yes conda==${CONDA_VER}\n#   Install all OS dependencies for fully functional notebook server\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"jovyan\" \\\n    NB_UID=\"1000\"\n#   Install Jupyter notebook\n#   Create jovyan user with UID=1000 and in the 'users' group\n#   Grant ownership over the conda dir and home dir, but stick the group as root.\nRUN adduser -s /bin/bash -u $NB_UID -D $NB_USER \\\n && mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/.jupyter \\\n && mkdir /home/$NB_USER/.local \\\n && mkdir -p $CONDA_DIR \\\n && chown -R $NB_USER:users $CONDA_DIR \\\n && chown -R $NB_USER:users /home/$NB_USER\nUSER $NB_USER\nRUN conda install --yes 'notebook=4.2*' terminado pip ipywidgets jupyter 'pandas=0.18*' 'matplotlib=1.5*' 'scipy=0.17*' 'seaborn=0.7*' 'cython=0.23*' 'numba=0.23*' 'bokeh=0.11*' \\\n && conda remove --quiet --yes --force qt pyqt \\\n && conda clean -tipsy\n#   # Activate ipywidgets extension in the environment that runs the notebook server\n#   RUN jupyter nbextension enable --py widgetsnbextension --sys-prefix\nRUN pip install pip==23.1 rethinkdb==2.4.9 --no-cache-dir --upgrade\n#   Configure container startup\nEXPOSE 8888/tcp\nWORKDIR /home/$NB_USER/work\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\nUSER root\n#   Add local files as late as possible to avoid cache busting\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\nUSER $NB_USER\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.4\nMAINTAINER \"Paolo D'Onorio De Meo <p.donoriodemeo@gmail.it>\"\n#  RUN apk add --no-cache python3 && \\\n#      python3 -m ensurepip && \\\n#      rm -r /usr/lib/python*/ensurepip && \\\n#      pip3 --no-cache-dir install --upgrade pip setuptools && \\\n#      rm -r /root/.cache\n#  # RUN apk update && apk upgrade \\\n#  #     && apk add \\\n#  #     py-setuptools\nRUN apk update \\\n && apk upgrade\nRUN apk --update --no-cache --repository http://dl-4.alpinelinux.org/alpine/edge/community add bash git curl ca-certificates bzip2 unzip sudo tini\nRUN curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk\" -o /tmp/glibc.apk \\\n && curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk\" -o /tmp/glibc-bin.apk \\\n && curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-i18n-2.23-r3.apk\" -o /tmp/glibc-i18n.apk \\\n && apk add --allow-untrusted /tmp/glibc*.apk \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n && rm -rf /tmp/glibc*apk /var/cache/apk/*\nRUN apk add rethinkdb --no-cache --repository http://dl-4.alpinelinux.org/alpine/edge/testing\n#  Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    CONDA_VER=\"4.1.11\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    SHELL=\"/bin/bash\" \\\n    LANG=\"C.UTF-8\"\nENV CONDA_REPO=\"https://repo.continuum.io/miniconda\"\n#  Install conda\nRUN mkdir -p $CONDA_DIR \\\n && echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh \\\n && curl $CONDA_REPO/Miniconda3-${CONDA_VER}-Linux-x86_64.sh -o mconda.sh \\\n && /bin/bash mconda.sh -f -b -p $CONDA_DIR \\\n && rm mconda.sh \\\n && $CONDA_DIR/bin/conda install --yes conda==${CONDA_VER}\n#  Install all OS dependencies for fully functional notebook server\n#  Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"jovyan\" \\\n    NB_UID=\"1000\"\n#  Install Jupyter notebook\n#  Create jovyan user with UID=1000 and in the 'users' group\n#  Grant ownership over the conda dir and home dir, but stick the group as root.\nRUN adduser -s /bin/bash -u $NB_UID -D $NB_USER \\\n && mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/.jupyter \\\n && mkdir /home/$NB_USER/.local \\\n && mkdir -p $CONDA_DIR \\\n && chown -R $NB_USER:users $CONDA_DIR \\\n && chown -R $NB_USER:users /home/$NB_USER\nUSER $NB_USER\nRUN conda install --yes 'notebook=4.2*' terminado pip ipywidgets jupyter 'pandas=0.18*' 'matplotlib=1.5*' 'scipy=0.17*' 'seaborn=0.7*' 'cython=0.23*' 'numba=0.23*' 'bokeh=0.11*' \\\n && conda remove --quiet --yes --force qt pyqt \\\n && conda clean -tipsy\n#  # Activate ipywidgets extension in the environment that runs the notebook server\n#  RUN jupyter nbextension enable --py widgetsnbextension --sys-prefix\nRUN pip install pip rethinkdb --no-cache-dir --upgrade\n#  Configure container startup\nEXPOSE 8888/tcp\nWORKDIR /home/$NB_USER/work\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\nUSER root\n#  Add local files as late as possible to avoid cache busting\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\nUSER $NB_USER\n","injectedSmells":[],"originalDockerfileHash":"d88ddb2e623cd506c9aa7f827b7eb057","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.4\nMAINTAINER \"Paolo D'Onorio De Meo <p.donoriodemeo@gmail.it>\"\n#   RUN apk add --no-cache python3 && \\\n#       python3 -m ensurepip && \\\n#       rm -r /usr/lib/python*/ensurepip && \\\n#       pip3 --no-cache-dir install --upgrade pip setuptools && \\\n#       rm -r /root/.cache\n#   # RUN apk update && apk upgrade \\\n#   #     && apk add \\\n#   #     py-setuptools\nRUN apk update \\\n && apk upgrade\nRUN apk --update --no-cache --repository http://dl-4.alpinelinux.org/alpine/edge/community add bash git curl ca-certificates bzip2 unzip sudo tini\nRUN curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk\" -o /tmp/glibc.apk \\\n && curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk\" -o /tmp/glibc-bin.apk \\\n && curl -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-i18n-2.23-r3.apk\" -o /tmp/glibc-i18n.apk \\\n && apk add --allow-untrusted /tmp/glibc*.apk \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n && rm -rf /tmp/glibc*apk /var/cache/apk/*\nRUN apk add rethinkdb --no-cache --repository http://dl-4.alpinelinux.org/alpine/edge/testing\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    CONDA_VER=\"4.1.11\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    SHELL=\"/bin/bash\" \\\n    LANG=\"C.UTF-8\"\nENV CONDA_REPO=\"https://repo.continuum.io/miniconda\"\n#   Install conda\nRUN mkdir -p $CONDA_DIR \\\n && echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh \\\n && curl $CONDA_REPO/Miniconda3-${CONDA_VER}-Linux-x86_64.sh -o mconda.sh \\\n && /bin/bash mconda.sh -f -b -p $CONDA_DIR \\\n && rm mconda.sh \\\n && $CONDA_DIR/bin/conda install --yes conda==${CONDA_VER}\n#   Install all OS dependencies for fully functional notebook server\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"jovyan\" \\\n    NB_UID=\"1000\"\n#   Install Jupyter notebook\n#   Create jovyan user with UID=1000 and in the 'users' group\n#   Grant ownership over the conda dir and home dir, but stick the group as root.\nRUN adduser -s /bin/bash -u $NB_UID -D $NB_USER \\\n && mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/.jupyter \\\n && mkdir /home/$NB_USER/.local \\\n && mkdir -p $CONDA_DIR \\\n && chown -R $NB_USER:users $CONDA_DIR \\\n && chown -R $NB_USER:users /home/$NB_USER\nUSER $NB_USER\nRUN conda install --yes 'notebook=4.2*' terminado pip ipywidgets jupyter 'pandas=0.18*' 'matplotlib=1.5*' 'scipy=0.17*' 'seaborn=0.7*' 'cython=0.23*' 'numba=0.23*' 'bokeh=0.11*' \\\n && conda remove --quiet --yes --force qt pyqt \\\n && conda clean -tipsy\n#   # Activate ipywidgets extension in the environment that runs the notebook server\n#   RUN jupyter nbextension enable --py widgetsnbextension --sys-prefix\nRUN pip install pip rethinkdb --no-cache-dir --upgrade\n#   Configure container startup\nEXPOSE 8888/tcp\nWORKDIR /home/$NB_USER/work\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\nUSER root\n#   Add local files as late as possible to avoid cache busting\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\nUSER $NB_USER\n","originalDockerfileUglifiedHash":"bfd77529df1820eb9ed119299a16c78a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a278533d40cab40d5781bd9900da82b623a89ea9.dockerfile"}