{"seed":2434607447,"processedDockerfileHash":"09198e4ea8ea8c054b970b274cf9a1bd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial\n#   metadata\nLABEL base.image=\"ubuntu:xenial\"\nLABEL version=\"1\"\nLABEL software=\"Shovill\"\nLABEL software.version=\"1.0.4\"\nLABEL description=\"faster than SPAdes de novo DBG genome assembler (with assembler options!)\"\nLABEL website=\"https://github.com/tseemann/shovill\"\nLABEL lisence=\"https://github.com/tseemann/shovill/blob/master/LICENSE\"\nMAINTAINER Curtis Kapsak <pjx8@cdc.gov>\nRUN apt-get update \\\n && apt-get install --no-install-recommends python=2.7.12-1~16.04 wget=1.17.1-1ubuntu1.5 pigz=2.3.1-2 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 make=4.1-6 gcc=4:5.3.1-1ubuntu1 g++=4:5.3.1-1ubuntu1 libpthread-stubs0-dev=0.3-4 openjdk-9-jre=9~b114-0ubuntu1 unzip=6.0-20ubuntu1.1 bzip2=1.0.6-8ubuntu0.2 libncurses5-dev=6.0+20160213-1ubuntu1 libbz2-dev=1.0.6-8ubuntu0.2 liblzma-dev=5.1.1alpha+20120614-2ubuntu2 libcurl4-gnutls-dev=7.47.0-1ubuntu2.19 libssl-dev=1.0.2g-1ubuntu4.20 libfindbin-libs-perl=2.150-1 -y\n#   get spades, unpack, remove tarball\nRUN mkdir spades \\\n && cd spades \\\n && wget http://cab.spbu.ru/files/release3.12.0/SPAdes-3.12.0-Linux.tar.gz \\\n && tar -xzf SPAdes-3.12.0-Linux.tar.gz \\\n && rm -r SPAdes-3.12.0-Linux.tar.gz\n#   get Seqtk\nRUN mkdir seqtk \\\n && cd seqtk \\\n && wget https://github.com/lh3/seqtk/archive/v1.3.tar.gz \\\n && tar -zxf v1.3.tar.gz \\\n && rm v1.3.tar.gz \\\n && cd seqtk-1.3/ \\\n && make \\\n && make install\n#   get Mash and the associated RefSeqSketches k=21 s=1000 database. Is db even needed?\nRUN wget https://github.com/marbl/Mash/releases/download/v2.1/mash-Linux64-v2.1.tar \\\n && tar -xvf mash-Linux64-v2.1.tar \\\n && rm -rf mash-Linux64-v2.1.tar\n#  ### Commented out because I don't think the Mash database is needed\n#  make database directory, store mash db there\n#  mkdir /db && \\\n#  cd /db && \\\n#  wget https://gembox.cbcb.umd.edu/mash/RefSeqSketchesDefaults.msh.gz && \\\n#  gunzip RefSeqSketchesDefaults.msh.gz\n#   install lighter 1.1.1\nRUN wget https://github.com/mourisl/Lighter/archive/v1.1.1.tar.gz \\\n && tar -zxf v1.1.1.tar.gz \\\n && rm -rf v1.1.1.tar.gz \\\n && cd Lighter-1.1.1 \\\n && make\n#   install trimmomatic\nRUN mkdir trimmomatic \\\n && cd trimmomatic \\\n && wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.38.zip \\\n && unzip Trimmomatic-0.38.zip \\\n && rm -rf Trimmomatic-0.38.zip \\\n && chmod +x Trimmomatic-0.38/trimmomatic-0.38.jar \\\n && echo \"#!/bin/bash\" >> trimmomatic \\\n && echo \"exec java -jar /trimmomatic/Trimmomatic-0.38/trimmomatic-0.38.jar \"\"\"\"$\"\"@\"\"\"\" \" >> trimmomatic \\\n && chmod +x trimmomatic\n#   install bwa (mem)\nRUN mkdir bwa \\\n && cd bwa \\\n && wget https://github.com/lh3/bwa/releases/download/v0.7.17/bwa-0.7.17.tar.bz2 \\\n && tar -xjf bwa-0.7.17.tar.bz2 \\\n && rm bwa-0.7.17.tar.bz2 \\\n && cd bwa-0.7.17 \\\n && make\n#   install samtools \nRUN mkdir samtools \\\n && cd samtools \\\n && wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2 \\\n && tar -xjf samtools-1.9.tar.bz2 \\\n && rm samtools-1.9.tar.bz2 \\\n && cd samtools-1.9 \\\n && ./configure \\\n && make \\\n && make install\n#   install skesa binary?(I think?)\nRUN mkdir skesa \\\n && cd skesa \\\n && wget https://github.com/ncbi/SKESA/releases/download/v2.3.0/skesa.centos6.10 \\\n && mv skesa.centos6.10 skesa \\\n && chmod +x skesa\n#   install MEGAHIT binary (I'm pretty sure these are binaries at this point)\nRUN mkdir megahit \\\n && cd megahit \\\n && wget https://github.com/voutcn/megahit/releases/download/v1.1.4/megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz \\\n && tar -xzf megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz \\\n && rm megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz\n#   install Velvet\nRUN mkdir velvet \\\n && cd velvet \\\n && wget https://github.com/dzerbino/velvet/archive/v1.2.10.tar.gz \\\n && tar -xzf v1.2.10.tar.gz \\\n && rm -rf v1.2.10.tar.gz \\\n && cd velvet-1.2.10 \\\n && make\n#   install Flash\nRUN mkdir flash \\\n && cd flash \\\n && wget https://sourceforge.net/projects/flashpage/files/FLASH-1.2.11.tar.gz \\\n && tar -zxf FLASH-1.2.11.tar.gz \\\n && rm -rf FLASH-1.2.11.tar.gz \\\n && cd FLASH-1.2.11 \\\n && make\n#   install pilon binary\nRUN mkdir pilon \\\n && cd pilon \\\n && wget https://github.com/broadinstitute/pilon/releases/download/v1.22/pilon-1.22.jar \\\n && chmod +x pilon-1.22.jar \\\n && echo \"#!/bin/bash\" >> pilon \\\n && echo \"exec java -jar /pilon/pilon-1.22.jar \"\"\"\"$\"\"@\"\"\"\" \" >> pilon \\\n && chmod +x pilon\n#   Samclip\nRUN mkdir samclip \\\n && cd samclip \\\n && wget https://raw.githubusercontent.com/tseemann/samclip/master/samclip \\\n && chmod +x samclip\n#   aaannnddd finally install shovill v1.0.4 itself\n#   extra perl module I had to install via apt-get: libfindbin-libs-perl\nRUN mkdir shovill \\\n && cd shovill \\\n && wget https://github.com/tseemann/shovill/archive/v1.0.4.tar.gz \\\n && tar -xzf v1.0.4.tar.gz \\\n && rm v1.0.4.tar.gz\n#   create /data directory and set as working directory\nRUN mkdir /data\nWORKDIR /data\n#   set $PATH's\nENV PATH=\"${PATH}:/spades/SPAdes-3.12.0-Linux/bin:/mash-Linux64-v2.1:/Lighter-1.1.1:/trimmomatic:/bwa/bwa-0.7.17:/skesa:/megahit/megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin:/velvet/velvet-1.2.10:/flash/FLASH-1.2.11:/shovill/shovill-1.0.4/bin:/pilon:/samclip\"\n#   set perl locale settings\nENV LC_ALL=\"C\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial\n#  metadata\nLABEL base.image=\"ubuntu:xenial\"\nLABEL version=\"1\"\nLABEL software=\"Shovill\"\nLABEL software.version=\"1.0.4\"\nLABEL description=\"faster than SPAdes de novo DBG genome assembler (with assembler options!)\"\nLABEL website=\"https://github.com/tseemann/shovill\"\nLABEL lisence=\"https://github.com/tseemann/shovill/blob/master/LICENSE\"\nMAINTAINER Curtis Kapsak <pjx8@cdc.gov>\nRUN apt-get update \\\n && apt-get install python wget pigz zlib1g-dev make gcc g++ libpthread-stubs0-dev openjdk-9-jre unzip bzip2 libncurses5-dev libbz2-dev liblzma-dev libcurl4-gnutls-dev libssl-dev libfindbin-libs-perl -y\n#  get spades, unpack, remove tarball\nRUN mkdir spades \\\n && cd spades \\\n && wget http://cab.spbu.ru/files/release3.12.0/SPAdes-3.12.0-Linux.tar.gz \\\n && tar -xzf SPAdes-3.12.0-Linux.tar.gz \\\n && rm -r SPAdes-3.12.0-Linux.tar.gz\n#  get Seqtk\nRUN mkdir seqtk \\\n && cd seqtk \\\n && wget https://github.com/lh3/seqtk/archive/v1.3.tar.gz \\\n && tar -zxf v1.3.tar.gz \\\n && rm v1.3.tar.gz \\\n && cd seqtk-1.3/ \\\n && make \\\n && make install\n#  get Mash and the associated RefSeqSketches k=21 s=1000 database. Is db even needed?\nRUN wget https://github.com/marbl/Mash/releases/download/v2.1/mash-Linux64-v2.1.tar \\\n && tar -xvf mash-Linux64-v2.1.tar \\\n && rm -rf mash-Linux64-v2.1.tar\n# ### Commented out because I don't think the Mash database is needed\n# make database directory, store mash db there\n# mkdir /db && \\\n# cd /db && \\\n# wget https://gembox.cbcb.umd.edu/mash/RefSeqSketchesDefaults.msh.gz && \\\n# gunzip RefSeqSketchesDefaults.msh.gz\n#  install lighter 1.1.1\nRUN wget https://github.com/mourisl/Lighter/archive/v1.1.1.tar.gz \\\n && tar -zxf v1.1.1.tar.gz \\\n && rm -rf v1.1.1.tar.gz \\\n && cd Lighter-1.1.1 \\\n && make\n#  install trimmomatic\nRUN mkdir trimmomatic \\\n && cd trimmomatic \\\n && wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.38.zip \\\n && unzip Trimmomatic-0.38.zip \\\n && rm -rf Trimmomatic-0.38.zip \\\n && chmod +x Trimmomatic-0.38/trimmomatic-0.38.jar \\\n && echo \"#!/bin/bash\" >> trimmomatic \\\n && echo \"exec java -jar /trimmomatic/Trimmomatic-0.38/trimmomatic-0.38.jar \"\"\"\"$\"\"@\"\"\"\" \" >> trimmomatic \\\n && chmod +x trimmomatic\n#  install bwa (mem)\nRUN mkdir bwa \\\n && cd bwa \\\n && wget https://github.com/lh3/bwa/releases/download/v0.7.17/bwa-0.7.17.tar.bz2 \\\n && tar -xjf bwa-0.7.17.tar.bz2 \\\n && rm bwa-0.7.17.tar.bz2 \\\n && cd bwa-0.7.17 \\\n && make\n#  install samtools \nRUN mkdir samtools \\\n && cd samtools \\\n && wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2 \\\n && tar -xjf samtools-1.9.tar.bz2 \\\n && rm samtools-1.9.tar.bz2 \\\n && cd samtools-1.9 \\\n && ./configure \\\n && make \\\n && make install\n#  install skesa binary?(I think?)\nRUN mkdir skesa \\\n && cd skesa \\\n && wget https://github.com/ncbi/SKESA/releases/download/v2.3.0/skesa.centos6.10 \\\n && mv skesa.centos6.10 skesa \\\n && chmod +x skesa\n#  install MEGAHIT binary (I'm pretty sure these are binaries at this point)\nRUN mkdir megahit \\\n && cd megahit \\\n && wget https://github.com/voutcn/megahit/releases/download/v1.1.4/megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz \\\n && tar -xzf megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz \\\n && rm megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz\n#  install Velvet\nRUN mkdir velvet \\\n && cd velvet \\\n && wget https://github.com/dzerbino/velvet/archive/v1.2.10.tar.gz \\\n && tar -xzf v1.2.10.tar.gz \\\n && rm -rf v1.2.10.tar.gz \\\n && cd velvet-1.2.10 \\\n && make\n#  install Flash\nRUN mkdir flash \\\n && cd flash \\\n && wget https://sourceforge.net/projects/flashpage/files/FLASH-1.2.11.tar.gz \\\n && tar -zxf FLASH-1.2.11.tar.gz \\\n && rm -rf FLASH-1.2.11.tar.gz \\\n && cd FLASH-1.2.11 \\\n && make\n#  install pilon binary\nRUN mkdir pilon \\\n && cd pilon \\\n && wget https://github.com/broadinstitute/pilon/releases/download/v1.22/pilon-1.22.jar \\\n && chmod +x pilon-1.22.jar \\\n && echo \"#!/bin/bash\" >> pilon \\\n && echo \"exec java -jar /pilon/pilon-1.22.jar \"\"\"\"$\"\"@\"\"\"\" \" >> pilon \\\n && chmod +x pilon\n#  Samclip\nRUN mkdir samclip \\\n && cd samclip \\\n && wget https://raw.githubusercontent.com/tseemann/samclip/master/samclip \\\n && chmod +x samclip\n#  aaannnddd finally install shovill v1.0.4 itself\n#  extra perl module I had to install via apt-get: libfindbin-libs-perl\nRUN mkdir shovill \\\n && cd shovill \\\n && wget https://github.com/tseemann/shovill/archive/v1.0.4.tar.gz \\\n && tar -xzf v1.0.4.tar.gz \\\n && rm v1.0.4.tar.gz\n#  create /data directory and set as working directory\nRUN mkdir /data\nWORKDIR /data\n#  set $PATH's\nENV PATH=\"${PATH}:/spades/SPAdes-3.12.0-Linux/bin:/mash-Linux64-v2.1:/Lighter-1.1.1:/trimmomatic:/bwa/bwa-0.7.17:/skesa:/megahit/megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin:/velvet/velvet-1.2.10:/flash/FLASH-1.2.11:/shovill/shovill-1.0.4/bin:/pilon:/samclip\"\n#  set perl locale settings\nENV LC_ALL=\"C\"\n","injectedSmells":[],"originalDockerfileHash":"2a2e2f2c253ff56a5bae0d12911d2957","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial\n#   metadata\nLABEL base.image=\"ubuntu:xenial\"\nLABEL version=\"1\"\nLABEL software=\"Shovill\"\nLABEL software.version=\"1.0.4\"\nLABEL description=\"faster than SPAdes de novo DBG genome assembler (with assembler options!)\"\nLABEL website=\"https://github.com/tseemann/shovill\"\nLABEL lisence=\"https://github.com/tseemann/shovill/blob/master/LICENSE\"\nMAINTAINER Curtis Kapsak <pjx8@cdc.gov>\nRUN apt-get update \\\n && apt-get install python wget pigz zlib1g-dev make gcc g++ libpthread-stubs0-dev openjdk-9-jre unzip bzip2 libncurses5-dev libbz2-dev liblzma-dev libcurl4-gnutls-dev libssl-dev libfindbin-libs-perl -y\n#   get spades, unpack, remove tarball\nRUN mkdir spades \\\n && cd spades \\\n && wget http://cab.spbu.ru/files/release3.12.0/SPAdes-3.12.0-Linux.tar.gz \\\n && tar -xzf SPAdes-3.12.0-Linux.tar.gz \\\n && rm -r SPAdes-3.12.0-Linux.tar.gz\n#   get Seqtk\nRUN mkdir seqtk \\\n && cd seqtk \\\n && wget https://github.com/lh3/seqtk/archive/v1.3.tar.gz \\\n && tar -zxf v1.3.tar.gz \\\n && rm v1.3.tar.gz \\\n && cd seqtk-1.3/ \\\n && make \\\n && make install\n#   get Mash and the associated RefSeqSketches k=21 s=1000 database. Is db even needed?\nRUN wget https://github.com/marbl/Mash/releases/download/v2.1/mash-Linux64-v2.1.tar \\\n && tar -xvf mash-Linux64-v2.1.tar \\\n && rm -rf mash-Linux64-v2.1.tar\n#  ### Commented out because I don't think the Mash database is needed\n#  make database directory, store mash db there\n#  mkdir /db && \\\n#  cd /db && \\\n#  wget https://gembox.cbcb.umd.edu/mash/RefSeqSketchesDefaults.msh.gz && \\\n#  gunzip RefSeqSketchesDefaults.msh.gz\n#   install lighter 1.1.1\nRUN wget https://github.com/mourisl/Lighter/archive/v1.1.1.tar.gz \\\n && tar -zxf v1.1.1.tar.gz \\\n && rm -rf v1.1.1.tar.gz \\\n && cd Lighter-1.1.1 \\\n && make\n#   install trimmomatic\nRUN mkdir trimmomatic \\\n && cd trimmomatic \\\n && wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.38.zip \\\n && unzip Trimmomatic-0.38.zip \\\n && rm -rf Trimmomatic-0.38.zip \\\n && chmod +x Trimmomatic-0.38/trimmomatic-0.38.jar \\\n && echo \"#!/bin/bash\" >> trimmomatic \\\n && echo \"exec java -jar /trimmomatic/Trimmomatic-0.38/trimmomatic-0.38.jar \"\"\"\"$\"\"@\"\"\"\" \" >> trimmomatic \\\n && chmod +x trimmomatic\n#   install bwa (mem)\nRUN mkdir bwa \\\n && cd bwa \\\n && wget https://github.com/lh3/bwa/releases/download/v0.7.17/bwa-0.7.17.tar.bz2 \\\n && tar -xjf bwa-0.7.17.tar.bz2 \\\n && rm bwa-0.7.17.tar.bz2 \\\n && cd bwa-0.7.17 \\\n && make\n#   install samtools \nRUN mkdir samtools \\\n && cd samtools \\\n && wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2 \\\n && tar -xjf samtools-1.9.tar.bz2 \\\n && rm samtools-1.9.tar.bz2 \\\n && cd samtools-1.9 \\\n && ./configure \\\n && make \\\n && make install\n#   install skesa binary?(I think?)\nRUN mkdir skesa \\\n && cd skesa \\\n && wget https://github.com/ncbi/SKESA/releases/download/v2.3.0/skesa.centos6.10 \\\n && mv skesa.centos6.10 skesa \\\n && chmod +x skesa\n#   install MEGAHIT binary (I'm pretty sure these are binaries at this point)\nRUN mkdir megahit \\\n && cd megahit \\\n && wget https://github.com/voutcn/megahit/releases/download/v1.1.4/megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz \\\n && tar -xzf megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz \\\n && rm megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz\n#   install Velvet\nRUN mkdir velvet \\\n && cd velvet \\\n && wget https://github.com/dzerbino/velvet/archive/v1.2.10.tar.gz \\\n && tar -xzf v1.2.10.tar.gz \\\n && rm -rf v1.2.10.tar.gz \\\n && cd velvet-1.2.10 \\\n && make\n#   install Flash\nRUN mkdir flash \\\n && cd flash \\\n && wget https://sourceforge.net/projects/flashpage/files/FLASH-1.2.11.tar.gz \\\n && tar -zxf FLASH-1.2.11.tar.gz \\\n && rm -rf FLASH-1.2.11.tar.gz \\\n && cd FLASH-1.2.11 \\\n && make\n#   install pilon binary\nRUN mkdir pilon \\\n && cd pilon \\\n && wget https://github.com/broadinstitute/pilon/releases/download/v1.22/pilon-1.22.jar \\\n && chmod +x pilon-1.22.jar \\\n && echo \"#!/bin/bash\" >> pilon \\\n && echo \"exec java -jar /pilon/pilon-1.22.jar \"\"\"\"$\"\"@\"\"\"\" \" >> pilon \\\n && chmod +x pilon\n#   Samclip\nRUN mkdir samclip \\\n && cd samclip \\\n && wget https://raw.githubusercontent.com/tseemann/samclip/master/samclip \\\n && chmod +x samclip\n#   aaannnddd finally install shovill v1.0.4 itself\n#   extra perl module I had to install via apt-get: libfindbin-libs-perl\nRUN mkdir shovill \\\n && cd shovill \\\n && wget https://github.com/tseemann/shovill/archive/v1.0.4.tar.gz \\\n && tar -xzf v1.0.4.tar.gz \\\n && rm v1.0.4.tar.gz\n#   create /data directory and set as working directory\nRUN mkdir /data\nWORKDIR /data\n#   set $PATH's\nENV PATH=\"${PATH}:/spades/SPAdes-3.12.0-Linux/bin:/mash-Linux64-v2.1:/Lighter-1.1.1:/trimmomatic:/bwa/bwa-0.7.17:/skesa:/megahit/megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin:/velvet/velvet-1.2.10:/flash/FLASH-1.2.11:/shovill/shovill-1.0.4/bin:/pilon:/samclip\"\n#   set perl locale settings\nENV LC_ALL=\"C\"\n","originalDockerfileUglifiedHash":"7a5cd94513fbdadb0768b438dcdcd8a2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5a203d263f5b28d99343f05d4edb1b3e8207de9b.dockerfile"}