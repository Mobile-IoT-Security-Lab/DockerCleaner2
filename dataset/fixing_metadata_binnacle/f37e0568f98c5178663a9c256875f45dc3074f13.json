{"seed":3084279556,"processedDockerfileHash":"dc084ed36d42687ea086c5aeb298d33d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   since nginx image is bigger (143 lines), we're starting with it and adding node to it.\n#   Use an official nginx image\n#    from https://github.com/nginxinc/docker-nginx/blob/1d2e2ccae2f6e478f628f4091d8a5c36a122a157/mainline/alpine/Dockerfile\nFROM nginx:1.17-alpine\n#   \"FROM node:9.3-alpine\"\n#     from https://github.com/nodejs/docker-node/blob/a7e88f1dd2102689180f485c51133212f45fa064/9/alpine/Dockerfile\n#   --\nENV NODE_VERSION=\"8.11.1\"\nENV SSH_PRIVATE_KEY=\"./.ssh/id_rsa\"\nENV API_DB_HOST=\"\\\"pellefant.db.elephantsql.com\\\"\"\nENV API_DB_PORT=\"5432\"\nENV API_DB_USERNAME=\"\\\"skmsmrzz\\\"\"\nENV API_DB_PASSWORD=\"\\\"Hsm9XMc1Jlp-_jflt9whZ-1PYdeETNQC\\\"\"\nENV API_DB_NAME=\"\\\"skmsmrzz\\\"\"\nENV GIT_PROVIDER=\"github.com\"\nENV GIT_BRANCH=\"master\"\nENV GIT_REPO=\"git@github.com:vip-git/react-ssr-advanced-seed.git\"\nRUN addgroup -g 1000 node \\\n && adduser -u 1000 -G node -s /bin/sh -D node \\\n && apk add libstdc++=9.3.0-r0 --no-cache \\\n && apk add binutils-gold=2.33.1-r1 curl=7.79.1-r0 g++=9.3.0-r0 gcc=9.3.0-r0 gnupg=2.2.19-r1 libgcc=9.3.0-r0 linux-headers=4.19.36-r0 make=4.2.1-r2 python --no-cache --virtual .build-deps \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && apk del .build-deps \\\n && apk add bash=5.0.11-r1 git=2.24.4-r0 openssh=8.1_p1-r1 --no-cache \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n#   Installs latest Chromium (64) package.\nRUN apk update \\\n && apk upgrade \\\n && echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories \\\n && echo @edge http://nl.alpinelinux.org/alpine/edge/main >> /etc/apk/repositories \\\n && apk add chromium@edge nss@edge --no-cache\n#   We're not using it's command.\n#   CMD [ \"node\" ]\n#   --\n#   [end] node:9.3-alpine\n#   From now on we have both nginx and node (+ git) available\n#   Create known_hosts\n#   RUN touch /root/.ssh/known_hosts\n#   Add gitlab key\n#   RUN ssh-keyscan gitlab.com >> /root/.ssh/known_hosts\n#   And we end our Dockerfile with nginx Dockerfile last instructions\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\nCOPY ./run.sh /run.sh\nRUN [\"chmod\", \"+x\", \"/run.sh\"]\nEXPOSE 80/tcp\nVOLUME /root/.ssh/\nSTOPSIGNAL SIGTERM\nWORKDIR /\nCMD /bin/sh ./run.sh\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  since nginx image is bigger (143 lines), we're starting with it and adding node to it.\n#  Use an official nginx image\n#   from https://github.com/nginxinc/docker-nginx/blob/1d2e2ccae2f6e478f628f4091d8a5c36a122a157/mainline/alpine/Dockerfile\nFROM nginx:1.17-alpine\n#  \"FROM node:9.3-alpine\"\n#    from https://github.com/nodejs/docker-node/blob/a7e88f1dd2102689180f485c51133212f45fa064/9/alpine/Dockerfile\n#  --\nENV NODE_VERSION=\"8.11.1\"\nENV SSH_PRIVATE_KEY=\"./.ssh/id_rsa\"\nENV API_DB_HOST=\"\\\"pellefant.db.elephantsql.com\\\"\"\nENV API_DB_PORT=\"5432\"\nENV API_DB_USERNAME=\"\\\"skmsmrzz\\\"\"\nENV API_DB_PASSWORD=\"\\\"Hsm9XMc1Jlp-_jflt9whZ-1PYdeETNQC\\\"\"\nENV API_DB_NAME=\"\\\"skmsmrzz\\\"\"\nENV GIT_PROVIDER=\"github.com\"\nENV GIT_BRANCH=\"master\"\nENV GIT_REPO=\"git@github.com:vip-git/react-ssr-advanced-seed.git\"\nRUN addgroup -g 1000 node \\\n && adduser -u 1000 -G node -s /bin/sh -D node \\\n && apk add --no-cache libstdc++ \\\n && apk add --no-cache --virtual .build-deps binutils-gold curl g++ gcc gnupg libgcc linux-headers make python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && apk del .build-deps \\\n && apk add --no-cache bash git openssh \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n#  Installs latest Chromium (64) package.\nRUN apk update \\\n && apk upgrade \\\n && echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories \\\n && echo @edge http://nl.alpinelinux.org/alpine/edge/main >> /etc/apk/repositories \\\n && apk add --no-cache chromium@edge nss@edge\n#  We're not using it's command.\n#  CMD [ \"node\" ]\n#  --\n#  [end] node:9.3-alpine\n#  From now on we have both nginx and node (+ git) available\n#  Create known_hosts\n#  RUN touch /root/.ssh/known_hosts\n#  Add gitlab key\n#  RUN ssh-keyscan gitlab.com >> /root/.ssh/known_hosts\n#  And we end our Dockerfile with nginx Dockerfile last instructions\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\nCOPY ./run.sh /run.sh\nRUN [\"chmod\", \"+x\", \"/run.sh\"]\nEXPOSE 80/tcp\nVOLUME /root/.ssh/\nSTOPSIGNAL SIGTERM\nWORKDIR /\nCMD /bin/sh ./run.sh\n","injectedSmells":[],"originalDockerfileHash":"15d90c3d9c12b843f49cfb10b7d65f04","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   since nginx image is bigger (143 lines), we're starting with it and adding node to it.\n#   Use an official nginx image\n#    from https://github.com/nginxinc/docker-nginx/blob/1d2e2ccae2f6e478f628f4091d8a5c36a122a157/mainline/alpine/Dockerfile\nFROM nginx:1.17-alpine\n#   \"FROM node:9.3-alpine\"\n#     from https://github.com/nodejs/docker-node/blob/a7e88f1dd2102689180f485c51133212f45fa064/9/alpine/Dockerfile\n#   --\nENV NODE_VERSION=\"8.11.1\"\nENV SSH_PRIVATE_KEY=\"./.ssh/id_rsa\"\nENV API_DB_HOST=\"\\\"pellefant.db.elephantsql.com\\\"\"\nENV API_DB_PORT=\"5432\"\nENV API_DB_USERNAME=\"\\\"skmsmrzz\\\"\"\nENV API_DB_PASSWORD=\"\\\"Hsm9XMc1Jlp-_jflt9whZ-1PYdeETNQC\\\"\"\nENV API_DB_NAME=\"\\\"skmsmrzz\\\"\"\nENV GIT_PROVIDER=\"github.com\"\nENV GIT_BRANCH=\"master\"\nENV GIT_REPO=\"git@github.com:vip-git/react-ssr-advanced-seed.git\"\nRUN addgroup -g 1000 node \\\n && adduser -u 1000 -G node -s /bin/sh -D node \\\n && apk add --no-cache libstdc++ \\\n && apk add --no-cache --virtual .build-deps binutils-gold curl g++ gcc gnupg libgcc linux-headers make python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && apk del .build-deps \\\n && apk add --no-cache bash git openssh \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n#   Installs latest Chromium (64) package.\nRUN apk update \\\n && apk upgrade \\\n && echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories \\\n && echo @edge http://nl.alpinelinux.org/alpine/edge/main >> /etc/apk/repositories \\\n && apk add --no-cache chromium@edge nss@edge\n#   We're not using it's command.\n#   CMD [ \"node\" ]\n#   --\n#   [end] node:9.3-alpine\n#   From now on we have both nginx and node (+ git) available\n#   Create known_hosts\n#   RUN touch /root/.ssh/known_hosts\n#   Add gitlab key\n#   RUN ssh-keyscan gitlab.com >> /root/.ssh/known_hosts\n#   And we end our Dockerfile with nginx Dockerfile last instructions\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\nCOPY ./run.sh /run.sh\nRUN [\"chmod\", \"+x\", \"/run.sh\"]\nEXPOSE 80/tcp\nVOLUME /root/.ssh/\nSTOPSIGNAL SIGTERM\nWORKDIR /\nCMD /bin/sh ./run.sh\n","originalDockerfileUglifiedHash":"5579a3268dd3106d7349525c42907f88","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f37e0568f98c5178663a9c256875f45dc3074f13.dockerfile"}