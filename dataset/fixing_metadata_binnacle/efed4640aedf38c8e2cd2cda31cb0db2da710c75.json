{"seed":3736184778,"processedDockerfileHash":"8e16c8bc14106bca311002aecc553e13","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   -----------------------------------------------------------------------------\n#   Builder image to generate OVS debian packages and Magma proto files\n#   -----------------------------------------------------------------------------\nFROM ubuntu:xenial AS builder\n#   Add the magma apt repo\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils=1.2.35 software-properties-common=0.96.20.10 apt-transport-https=1.2.35 -y\nCOPY orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub /tmp/jfrog.pub\nRUN apt-key add /tmp/jfrog.pub \\\n && apt-add-repository \"deb https://magma.jfrog.io/magma/list/dev/ xenial main\"\n#   Install the runtime deps from apt.\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 make=4.1-6 virtualenv=15.0.1+ds-3ubuntu1.1 zip=3.0-11 tar=1.28-2.1ubuntu0.2 -y\n#   TODO: Fetch necessary OVS debian packages from pkgrepo\n#   Fetch OVS v2.8.1 tarball\nRUN curl -Lfs https://www.openvswitch.org/releases/openvswitch-2.8.1.tar.gz | tar xvz\n#   Install OVS dependencies for building\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends graphviz=2.38.0-12ubuntu2.1 autoconf=2.69-9 automake=1:1.15-4ubuntu1 bzip2=1.0.6-8ubuntu0.2 debhelper=9.20160115ubuntu3 dh-autoreconf=11 libssl-dev=1.0.2g-1ubuntu4.20 libtool=2.4.6-0.1 openssl=1.0.2g-1ubuntu4.20 procps=2:3.3.10-4ubuntu2.5 python-all=2.7.12-1~16.04 python-twisted-conch=1:16.0.0-1ubuntu0.4 python-zopeinterface python-six=1.10.0-3 build-essential=12.1ubuntu2 fakeroot=1.20.2-1ubuntu1 -y\n#   Build OVS v2.8.1 debian packages\nRUN cd openvswitch-2.8.1 \\\n && DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary\n#   Install protobuf compiler.\nRUN curl -Lfs https://github.com/google/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -o protoc3.zip \\\n && unzip protoc3.zip -d protoc3 \\\n && mv protoc3/bin/protoc /usr/bin/protoc \\\n && chmod a+rx /usr/bin/protoc \\\n && cp -r protoc3/include/google /usr/include/ \\\n && chmod -R a+Xr /usr/include/google \\\n && rm -rf protoc3.zip protoc3\nENV MAGMA_ROOT=\"/magma\"\nENV PYTHON_BUILD=\"/build/python\"\nENV PIP_CACHE_HOME=\"~/.pipcache\"\n#   Generate python proto bindings.\nCOPY feg/protos $MAGMA_ROOT/feg/protos\nCOPY lte/gateway/python/defs.mk $MAGMA_ROOT/lte/gateway/python/defs.mk\nCOPY lte/gateway/python/Makefile $MAGMA_ROOT/lte/gateway/python/Makefile\nCOPY lte/protos $MAGMA_ROOT/lte/protos\nCOPY orc8r/gateway/python/python.mk $MAGMA_ROOT/orc8r/gateway/python/python.mk\nCOPY orc8r/protos $MAGMA_ROOT/orc8r/protos\nCOPY protos $MAGMA_ROOT/protos\nRUN make -C $MAGMA_ROOT/lte/gateway/python protos\n#   -----------------------------------------------------------------------------\n#   Dev/Production image\n#   -----------------------------------------------------------------------------\nFROM ubuntu:xenial AS lte_gateway_python\n#   Add the magma apt repo\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils=1.2.35 software-properties-common=0.96.20.10 apt-transport-https=1.2.35 -y\nCOPY orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub /tmp/jfrog.pub\nRUN apt-key add /tmp/jfrog.pub \\\n && apt-add-repository \"deb https://magma.jfrog.io/magma/list/dev/ xenial main\"\n#   Install the runtime deps from apt.\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 libc-ares2=1.10.0-3ubuntu0.2 libev4=1:4.22-1 libevent-openssl-2.0-5=2.0.21-stable-2ubuntu0.16.04.1 libffi-dev=3.2.1-4 libjansson4=2.7-3ubuntu0.1 libjemalloc1=3.6.0-9ubuntu1 libssl-dev=1.0.2g-1ubuntu4.20 libsystemd-dev=229-4ubuntu21.31 magma-nghttpx=1.31.1-1 net-tools=1.60-26ubuntu1 openssl=1.0.2g-1ubuntu4.20 pkg-config=0.29.1-0ubuntu1 python-cffi=1.5.2-1ubuntu1 python3-aioeventlet=0.4-1 python3-pip=8.1.1-2ubuntu0.6 redis-server=2:3.0.6-1ubuntu0.4 -y\n#   Copy OVS debian packages from builder\nCOPY --from=builder libopenvswitch_2.8.1-1_amd64.deb /tmp/ovs/\nCOPY --from=builder openvswitch-common_2.8.1-1_amd64.deb /tmp/ovs/\nCOPY --from=builder openvswitch-switch_2.8.1-1_amd64.deb /tmp/ovs/\nCOPY --from=builder python-openvswitch_2.8.1-1_all.deb /tmp/ovs/\n#   Install OVS debian packages\nRUN apt-get install --no-install-recommends /tmp/ovs/libopenvswitch_2.8.1-1_amd64.deb /tmp/ovs/openvswitch-common_2.8.1-1_amd64.deb /tmp/ovs/openvswitch-switch_2.8.1-1_amd64.deb /tmp/ovs/python-openvswitch_2.8.1-1_all.deb -y\n#   Install orc8r python (magma.common required for lte python)\nCOPY orc8r/gateway/python /tmp/orc8r\nRUN pip3 install /tmp/orc8r\n#   Install lte python\nCOPY lte/gateway/python /tmp/lte\nRUN pip3 install /tmp/lte\n#   Copy the build artifacts.\nCOPY --from=builder /build/python/gen /usr/local/lib/python3.5/dist-packages/\n#   Copy the configs.\nCOPY lte/gateway/configs /etc/magma\nCOPY orc8r/gateway/configs/templates /etc/magma/templates\nCOPY orc8r/cloud/docker/proxy/magma_headers.rb /etc/nghttpx/magma_headers.rb\nRUN mkdir -p /var/opt/magma/configs\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  -----------------------------------------------------------------------------\n#  Builder image to generate OVS debian packages and Magma proto files\n#  -----------------------------------------------------------------------------\nFROM ubuntu:xenial AS builder\n#  Add the magma apt repo\nRUN apt-get update \\\n && apt-get install apt-utils software-properties-common apt-transport-https -y\nCOPY orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub /tmp/jfrog.pub\nRUN apt-key add /tmp/jfrog.pub \\\n && apt-add-repository \"deb https://magma.jfrog.io/magma/list/dev/ xenial main\"\n#  Install the runtime deps from apt.\nRUN apt-get update -y \\\n && apt-get install curl make virtualenv zip tar -y\n#  TODO: Fetch necessary OVS debian packages from pkgrepo\n#  Fetch OVS v2.8.1 tarball\nRUN curl -Lfs https://www.openvswitch.org/releases/openvswitch-2.8.1.tar.gz | tar xvz\n#  Install OVS dependencies for building\nRUN apt-get update -y \\\n && apt-get install graphviz autoconf automake bzip2 debhelper dh-autoreconf libssl-dev libtool openssl procps python-all python-twisted-conch python-zopeinterface python-six build-essential fakeroot -y\n#  Build OVS v2.8.1 debian packages\nRUN cd openvswitch-2.8.1 \\\n && DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary\n#  Install protobuf compiler.\nRUN curl -Lfs https://github.com/google/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -o protoc3.zip \\\n && unzip protoc3.zip -d protoc3 \\\n && mv protoc3/bin/protoc /usr/bin/protoc \\\n && chmod a+rx /usr/bin/protoc \\\n && cp -r protoc3/include/google /usr/include/ \\\n && chmod -R a+Xr /usr/include/google \\\n && rm -rf protoc3.zip protoc3\nENV MAGMA_ROOT=\"/magma\"\nENV PYTHON_BUILD=\"/build/python\"\nENV PIP_CACHE_HOME=\"~/.pipcache\"\n#  Generate python proto bindings.\nCOPY feg/protos $MAGMA_ROOT/feg/protos\nCOPY lte/gateway/python/defs.mk $MAGMA_ROOT/lte/gateway/python/defs.mk\nCOPY lte/gateway/python/Makefile $MAGMA_ROOT/lte/gateway/python/Makefile\nCOPY lte/protos $MAGMA_ROOT/lte/protos\nCOPY orc8r/gateway/python/python.mk $MAGMA_ROOT/orc8r/gateway/python/python.mk\nCOPY orc8r/protos $MAGMA_ROOT/orc8r/protos\nCOPY protos $MAGMA_ROOT/protos\nRUN make -C $MAGMA_ROOT/lte/gateway/python protos\n#  -----------------------------------------------------------------------------\n#  Dev/Production image\n#  -----------------------------------------------------------------------------\nFROM ubuntu:xenial AS lte_gateway_python\n#  Add the magma apt repo\nRUN apt-get update \\\n && apt-get install apt-utils software-properties-common apt-transport-https -y\nCOPY orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub /tmp/jfrog.pub\nRUN apt-key add /tmp/jfrog.pub \\\n && apt-add-repository \"deb https://magma.jfrog.io/magma/list/dev/ xenial main\"\n#  Install the runtime deps from apt.\nRUN apt-get update -y \\\n && apt-get install curl libc-ares2 libev4 libevent-openssl-2.0-5 libffi-dev libjansson4 libjemalloc1 libssl-dev libsystemd-dev magma-nghttpx=1.31.1-1 net-tools openssl pkg-config python-cffi python3-aioeventlet python3-pip redis-server -y\n#  Copy OVS debian packages from builder\nCOPY --from=builder libopenvswitch_2.8.1-1_amd64.deb /tmp/ovs/\nCOPY --from=builder openvswitch-common_2.8.1-1_amd64.deb /tmp/ovs/\nCOPY --from=builder openvswitch-switch_2.8.1-1_amd64.deb /tmp/ovs/\nCOPY --from=builder python-openvswitch_2.8.1-1_all.deb /tmp/ovs/\n#  Install OVS debian packages\nRUN apt-get install /tmp/ovs/libopenvswitch_2.8.1-1_amd64.deb /tmp/ovs/openvswitch-common_2.8.1-1_amd64.deb /tmp/ovs/openvswitch-switch_2.8.1-1_amd64.deb /tmp/ovs/python-openvswitch_2.8.1-1_all.deb -y\n#  Install orc8r python (magma.common required for lte python)\nCOPY orc8r/gateway/python /tmp/orc8r\nRUN pip3 install /tmp/orc8r\n#  Install lte python\nCOPY lte/gateway/python /tmp/lte\nRUN pip3 install /tmp/lte\n#  Copy the build artifacts.\nCOPY --from=builder /build/python/gen /usr/local/lib/python3.5/dist-packages/\n#  Copy the configs.\nCOPY lte/gateway/configs /etc/magma\nCOPY orc8r/gateway/configs/templates /etc/magma/templates\nCOPY orc8r/cloud/docker/proxy/magma_headers.rb /etc/nghttpx/magma_headers.rb\nRUN mkdir -p /var/opt/magma/configs\n","injectedSmells":[],"originalDockerfileHash":"026de736b4ce947b05ca8d29deb1a7ca","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   -----------------------------------------------------------------------------\n#   Builder image to generate OVS debian packages and Magma proto files\n#   -----------------------------------------------------------------------------\nFROM ubuntu:xenial AS builder\n#   Add the magma apt repo\nRUN apt-get update \\\n && apt-get install apt-utils software-properties-common apt-transport-https -y\nCOPY orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub /tmp/jfrog.pub\nRUN apt-key add /tmp/jfrog.pub \\\n && apt-add-repository \"deb https://magma.jfrog.io/magma/list/dev/ xenial main\"\n#   Install the runtime deps from apt.\nRUN apt-get update -y \\\n && apt-get install curl make virtualenv zip tar -y\n#   TODO: Fetch necessary OVS debian packages from pkgrepo\n#   Fetch OVS v2.8.1 tarball\nRUN curl -Lfs https://www.openvswitch.org/releases/openvswitch-2.8.1.tar.gz | tar xvz\n#   Install OVS dependencies for building\nRUN apt-get update -y \\\n && apt-get install graphviz autoconf automake bzip2 debhelper dh-autoreconf libssl-dev libtool openssl procps python-all python-twisted-conch python-zopeinterface python-six build-essential fakeroot -y\n#   Build OVS v2.8.1 debian packages\nRUN cd openvswitch-2.8.1 \\\n && DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary\n#   Install protobuf compiler.\nRUN curl -Lfs https://github.com/google/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -o protoc3.zip \\\n && unzip protoc3.zip -d protoc3 \\\n && mv protoc3/bin/protoc /usr/bin/protoc \\\n && chmod a+rx /usr/bin/protoc \\\n && cp -r protoc3/include/google /usr/include/ \\\n && chmod -R a+Xr /usr/include/google \\\n && rm -rf protoc3.zip protoc3\nENV MAGMA_ROOT=\"/magma\"\nENV PYTHON_BUILD=\"/build/python\"\nENV PIP_CACHE_HOME=\"~/.pipcache\"\n#   Generate python proto bindings.\nCOPY feg/protos $MAGMA_ROOT/feg/protos\nCOPY lte/gateway/python/defs.mk $MAGMA_ROOT/lte/gateway/python/defs.mk\nCOPY lte/gateway/python/Makefile $MAGMA_ROOT/lte/gateway/python/Makefile\nCOPY lte/protos $MAGMA_ROOT/lte/protos\nCOPY orc8r/gateway/python/python.mk $MAGMA_ROOT/orc8r/gateway/python/python.mk\nCOPY orc8r/protos $MAGMA_ROOT/orc8r/protos\nCOPY protos $MAGMA_ROOT/protos\nRUN make -C $MAGMA_ROOT/lte/gateway/python protos\n#   -----------------------------------------------------------------------------\n#   Dev/Production image\n#   -----------------------------------------------------------------------------\nFROM ubuntu:xenial AS lte_gateway_python\n#   Add the magma apt repo\nRUN apt-get update \\\n && apt-get install apt-utils software-properties-common apt-transport-https -y\nCOPY orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub /tmp/jfrog.pub\nRUN apt-key add /tmp/jfrog.pub \\\n && apt-add-repository \"deb https://magma.jfrog.io/magma/list/dev/ xenial main\"\n#   Install the runtime deps from apt.\nRUN apt-get update -y \\\n && apt-get install curl libc-ares2 libev4 libevent-openssl-2.0-5 libffi-dev libjansson4 libjemalloc1 libssl-dev libsystemd-dev magma-nghttpx=1.31.1-1 net-tools openssl pkg-config python-cffi python3-aioeventlet python3-pip redis-server -y\n#   Copy OVS debian packages from builder\nCOPY --from=builder libopenvswitch_2.8.1-1_amd64.deb /tmp/ovs/\nCOPY --from=builder openvswitch-common_2.8.1-1_amd64.deb /tmp/ovs/\nCOPY --from=builder openvswitch-switch_2.8.1-1_amd64.deb /tmp/ovs/\nCOPY --from=builder python-openvswitch_2.8.1-1_all.deb /tmp/ovs/\n#   Install OVS debian packages\nRUN apt-get install /tmp/ovs/libopenvswitch_2.8.1-1_amd64.deb /tmp/ovs/openvswitch-common_2.8.1-1_amd64.deb /tmp/ovs/openvswitch-switch_2.8.1-1_amd64.deb /tmp/ovs/python-openvswitch_2.8.1-1_all.deb -y\n#   Install orc8r python (magma.common required for lte python)\nCOPY orc8r/gateway/python /tmp/orc8r\nRUN pip3 install /tmp/orc8r\n#   Install lte python\nCOPY lte/gateway/python /tmp/lte\nRUN pip3 install /tmp/lte\n#   Copy the build artifacts.\nCOPY --from=builder /build/python/gen /usr/local/lib/python3.5/dist-packages/\n#   Copy the configs.\nCOPY lte/gateway/configs /etc/magma\nCOPY orc8r/gateway/configs/templates /etc/magma/templates\nCOPY orc8r/cloud/docker/proxy/magma_headers.rb /etc/nghttpx/magma_headers.rb\nRUN mkdir -p /var/opt/magma/configs\n","originalDockerfileUglifiedHash":"ddce9cb4df2074a11ae367c804138920","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/efed4640aedf38c8e2cd2cda31cb0db2da710c75.dockerfile"}