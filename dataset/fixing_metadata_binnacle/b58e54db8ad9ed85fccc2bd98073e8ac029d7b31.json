{"seed":1285210239,"processedDockerfileHash":"bc570c0556415896b925dd6ba3b11460","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER Yuvi Panda <yuvipanda@gmail.com>\nENV EDITOR=\"/bin/nano\"\nENV PYWIKIBOT2_DIR=\"/srv/paws\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Use bash as default shell, rather than sh\nENV SHELL=\"/bin/bash\"\n#   Set up user\nENV NB_USER=\"tools.paws\"\nENV NB_UID=\"52771\"\nENV HOME=\"/home/paws\"\nRUN adduser --disabled-password --gecos \"Default user\" --uid ${NB_UID} --home ${HOME} --force-badname ${NB_USER}\nWORKDIR ${HOME}\n#   Base building utilities that'll always be required, probably\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:2.17.1-1ubuntu0.17 locales=2.27-3ubuntu1.6 pkg-config=0.29.1-0ubuntu2 build-essential=12.4ubuntu1 gcc=4:7.4.0-1ubuntu2.3 apt-transport-https=1.6.14 --yes )\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Setup nodesource, because node on Ubuntu is far too old to be useful\nCOPY node/nodesource.gpg.key /etc/apt/trusted.gpg.d/nodesource.gpg.key\nCOPY node/nodesource.list /etc/apt/sources.list.d/nodesource.list\nRUN apt-key add /etc/apt/trusted.gpg.d/nodesource.gpg.key\nRUN :\n#   Install languages needed and their core dev packages\nRUN (apt-get update ;apt-get install --no-install-recommends python3=3.6.7-1~18.04 python3-dev=3.6.7-1~18.04 python3-venv=3.6.7-1~18.04 r-recommended=3.4.4-1ubuntu1 r-base-dev=3.4.4-1ubuntu1 nodejs=8.10.0~dfsg-2ubuntu0.4 --yes )\n#   Utilities\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 wget=1.19.4-1ubuntu2.2 less=487-0.1 dnsutils=1:9.11.3+dfsg-1ubuntu1.18 emacs=47.0 links=2.14-5build1 nano=2.9.3-2 vim=2:8.0.1453-1ubuntu1.11 mariadb-client=1:10.1.48-0ubuntu0.18.04.1 --yes )\n#   Machine-learning type stuff\nRUN (apt-get update ;apt-get install --no-install-recommends libblas-dev=3.7.1-4ubuntu1 liblapack-dev=3.7.1-4ubuntu1 libquadmath0=8.4.0-1ubuntu1~18.04 gfortran=4:7.4.0-1ubuntu2.3 libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 libxslt1-dev=1.1.29-5ubuntu0.3 libfreetype6-dev=2.8.1-2ubuntu2.2 libpng-dev=1.6.34-1ubuntu0.18.04.2 libzmq3-dev=4.2.5-1ubuntu0.2 libreadline-dev=7.0-3 libmariadb-client-lgpl-dev libcurl4-openssl-dev=7.58.0-2ubuntu3.24 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 pandoc=1.19.2.4~dfsg-1build4 texlive-xetex=2017.20180305-1 --yes )\nRUN mkdir -p /srv/paws \\\n && chown ${NB_USER}:${NB_USER} /srv/paws\nENV PATH=\"/srv/paws/pwb:/srv/paws/bin:/srv/paws:$PATH\"\nUSER ${NB_USER}\nRUN python3.6 -m venv /srv/paws\n#   Install base notebook packages\nRUN pip install jupyterhub==0.9.0 notebook==6.5.4 jupyterlab==3.6.3 bash_kernel==0.9.0 --no-cache-dir\n#   Install the bash kernel\nRUN python -m bash_kernel.install --sys-prefix\n#   Install the R Kernel and libraries\nCOPY install-r /usr/local/bin/install-r\n#   We need root simply to install the kernelspec lol\n#   https://github.com/IRkernel/IRkernel/issues/495\nUSER root\nRUN /usr/local/bin/install-r\n#   Install mass amount of python libraries!\nCOPY --chown=tools.paws:tools.paws requirements.txt /tmp/requirements.txt\nUSER ${NB_USER}\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n#   Install pywikibot\nRUN git clone --branch stable --recursive https://gerrit.wikimedia.org/r/pywikibot/core.git /srv/paws/pwb\nCOPY --chown=tools.paws:tools.paws user-config.py /srv/paws/\nCOPY --chown=tools.paws:tools.paws user-fixes.py /srv/paws/\nCOPY install-pwb /usr/local/bin/\nRUN /usr/local/bin/install-pwb\nCOPY install-extensions /usr/local/bin/\nRUN /usr/local/bin/install-extensions\nCOPY banner /etc/bash.bashrc\n#   Install nbpawspublic as a hack\nRUN pip install git+https://github.com/yuvipanda/nbpawspublic@023c27b --no-cache-dir \\\n && jupyter nbextension install --py nbpawspublic --sys-prefix \\\n && jupyter nbextension enable --py nbpawspublic --sys-prefix\nRUN pip install git+https://github.com/yuvipanda/ipynb-paws@60c94e3 --no-cache-dir\n#   use custom css to hide clusters tab\nCOPY --chown=tools.paws:tools.paws hide_clusters_tab.css /home/paws/.jupyter/custom/custom.css\nUSER ${NB_USER}\nEXPOSE 8888/tcp\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER Yuvi Panda <yuvipanda@gmail.com>\nENV EDITOR=\"/bin/nano\"\nENV PYWIKIBOT2_DIR=\"/srv/paws\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Use bash as default shell, rather than sh\nENV SHELL=\"/bin/bash\"\n#  Set up user\nENV NB_USER=\"tools.paws\"\nENV NB_UID=\"52771\"\nENV HOME=\"/home/paws\"\nRUN adduser --disabled-password --gecos \"Default user\" --uid ${NB_UID} --home ${HOME} --force-badname ${NB_USER}\nWORKDIR ${HOME}\n#  Base building utilities that'll always be required, probably\nRUN apt-get update --yes\nRUN apt-get install git locales pkg-config build-essential gcc apt-transport-https --yes\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#  Setup nodesource, because node on Ubuntu is far too old to be useful\nADD node/nodesource.gpg.key /etc/apt/trusted.gpg.d/nodesource.gpg.key\nADD node/nodesource.list /etc/apt/sources.list.d/nodesource.list\nRUN apt-key add /etc/apt/trusted.gpg.d/nodesource.gpg.key\nRUN apt-get update --yes\n#  Install languages needed and their core dev packages\nRUN apt-get install python3 python3-dev python3-venv r-recommended r-base-dev nodejs --yes\n#  Utilities\nRUN apt-get install curl wget less dnsutils emacs links nano vim mariadb-client --yes\n#  Machine-learning type stuff\nRUN apt-get install libblas-dev liblapack-dev libquadmath0 gfortran libxml2-dev libxslt1-dev libfreetype6-dev libpng-dev libzmq3-dev libreadline-dev libmariadb-client-lgpl-dev libcurl4-openssl-dev libssl-dev pandoc texlive-xetex --yes\nRUN mkdir -p /srv/paws \\\n && chown ${NB_USER}:${NB_USER} /srv/paws\nENV PATH=\"/srv/paws/pwb:/srv/paws/bin:/srv/paws:$PATH\"\nUSER ${NB_USER}\nRUN python3.6 -m venv /srv/paws\n#  Install base notebook packages\nRUN pip install jupyterhub==0.9.0 notebook jupyterlab bash_kernel --no-cache-dir\n#  Install the bash kernel\nRUN python -m bash_kernel.install --sys-prefix\n#  Install the R Kernel and libraries\nCOPY install-r /usr/local/bin/install-r\n#  We need root simply to install the kernelspec lol\n#  https://github.com/IRkernel/IRkernel/issues/495\nUSER root\nRUN /usr/local/bin/install-r\n#  Install mass amount of python libraries!\nCOPY --chown=tools.paws:tools.paws requirements.txt /tmp/requirements.txt\nUSER ${NB_USER}\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n#  Install pywikibot\nRUN git clone --branch stable --recursive https://gerrit.wikimedia.org/r/pywikibot/core.git /srv/paws/pwb\nCOPY --chown=tools.paws:tools.paws user-config.py /srv/paws/\nCOPY --chown=tools.paws:tools.paws user-fixes.py /srv/paws/\nCOPY install-pwb /usr/local/bin/\nRUN /usr/local/bin/install-pwb\nCOPY install-extensions /usr/local/bin/\nRUN /usr/local/bin/install-extensions\nCOPY banner /etc/bash.bashrc\n#  Install nbpawspublic as a hack\nRUN pip install git+https://github.com/yuvipanda/nbpawspublic@023c27b --no-cache-dir \\\n && jupyter nbextension install --py nbpawspublic --sys-prefix \\\n && jupyter nbextension enable --py nbpawspublic --sys-prefix\nRUN pip install git+https://github.com/yuvipanda/ipynb-paws@60c94e3 --no-cache-dir\n#  use custom css to hide clusters tab\nCOPY --chown=tools.paws:tools.paws hide_clusters_tab.css /home/paws/.jupyter/custom/custom.css\nUSER ${NB_USER}\nEXPOSE 8888/tcp\n","injectedSmells":[],"originalDockerfileHash":"1c03c70be8255004c2f46e674c9ac07f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER Yuvi Panda <yuvipanda@gmail.com>\nENV EDITOR=\"/bin/nano\"\nENV PYWIKIBOT2_DIR=\"/srv/paws\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Use bash as default shell, rather than sh\nENV SHELL=\"/bin/bash\"\n#   Set up user\nENV NB_USER=\"tools.paws\"\nENV NB_UID=\"52771\"\nENV HOME=\"/home/paws\"\nRUN adduser --disabled-password --gecos \"Default user\" --uid ${NB_UID} --home ${HOME} --force-badname ${NB_USER}\nWORKDIR ${HOME}\n#   Base building utilities that'll always be required, probably\nRUN apt-get update --yes\nRUN apt-get install git locales pkg-config build-essential gcc apt-transport-https --yes\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Setup nodesource, because node on Ubuntu is far too old to be useful\nADD node/nodesource.gpg.key /etc/apt/trusted.gpg.d/nodesource.gpg.key\nADD node/nodesource.list /etc/apt/sources.list.d/nodesource.list\nRUN apt-key add /etc/apt/trusted.gpg.d/nodesource.gpg.key\nRUN apt-get update --yes\n#   Install languages needed and their core dev packages\nRUN apt-get install python3 python3-dev python3-venv r-recommended r-base-dev nodejs --yes\n#   Utilities\nRUN apt-get install curl wget less dnsutils emacs links nano vim mariadb-client --yes\n#   Machine-learning type stuff\nRUN apt-get install libblas-dev liblapack-dev libquadmath0 gfortran libxml2-dev libxslt1-dev libfreetype6-dev libpng-dev libzmq3-dev libreadline-dev libmariadb-client-lgpl-dev libcurl4-openssl-dev libssl-dev pandoc texlive-xetex --yes\nRUN mkdir -p /srv/paws \\\n && chown ${NB_USER}:${NB_USER} /srv/paws\nENV PATH=\"/srv/paws/pwb:/srv/paws/bin:/srv/paws:$PATH\"\nUSER ${NB_USER}\nRUN python3.6 -m venv /srv/paws\n#   Install base notebook packages\nRUN pip install jupyterhub==0.9.0 notebook jupyterlab bash_kernel --no-cache-dir\n#   Install the bash kernel\nRUN python -m bash_kernel.install --sys-prefix\n#   Install the R Kernel and libraries\nCOPY install-r /usr/local/bin/install-r\n#   We need root simply to install the kernelspec lol\n#   https://github.com/IRkernel/IRkernel/issues/495\nUSER root\nRUN /usr/local/bin/install-r\n#   Install mass amount of python libraries!\nCOPY --chown=tools.paws:tools.paws requirements.txt /tmp/requirements.txt\nUSER ${NB_USER}\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n#   Install pywikibot\nRUN git clone --branch stable --recursive https://gerrit.wikimedia.org/r/pywikibot/core.git /srv/paws/pwb\nCOPY --chown=tools.paws:tools.paws user-config.py /srv/paws/\nCOPY --chown=tools.paws:tools.paws user-fixes.py /srv/paws/\nCOPY install-pwb /usr/local/bin/\nRUN /usr/local/bin/install-pwb\nCOPY install-extensions /usr/local/bin/\nRUN /usr/local/bin/install-extensions\nCOPY banner /etc/bash.bashrc\n#   Install nbpawspublic as a hack\nRUN pip install git+https://github.com/yuvipanda/nbpawspublic@023c27b --no-cache-dir \\\n && jupyter nbextension install --py nbpawspublic --sys-prefix \\\n && jupyter nbextension enable --py nbpawspublic --sys-prefix\nRUN pip install git+https://github.com/yuvipanda/ipynb-paws@60c94e3 --no-cache-dir\n#   use custom css to hide clusters tab\nCOPY --chown=tools.paws:tools.paws hide_clusters_tab.css /home/paws/.jupyter/custom/custom.css\nUSER ${NB_USER}\nEXPOSE 8888/tcp\n","originalDockerfileUglifiedHash":"d535aeb5b5e30d5c7b277f79c6da1137","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b58e54db8ad9ed85fccc2bd98073e8ac029d7b31.dockerfile"}