{"seed":2213489698,"processedDockerfileHash":"ab839ca6cf4f401d6eb020ef99d9eed5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\nMAINTAINER paixu@0xn0.de\nENV PYTHON_VERSION=\"2.7.11\"\nENV OPENSSL_VERSION=\"1.0.2f\"\nENV ZLIB_VERSION=\"1.2.8\"\nENV MINGW_VERSION=\"0.6.2-beta-20131004-1\"\nENV MINGW_BIN_VERSION=\"0.6.2-mingw32-beta-20131004-1-bin\"\nENV WINEDEBUG=\"fixme-all\"\n#  #####\n#   install packages required to build\n#   https-transport: winehq deb\n#   winbind: pip install keyring (requirements.pip) needs this somehow\n#   git-core: clone rw copy of repo and build specific commit\n#   imagemagick: convert png to ico-files\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends unzip curl apt-transport-https winbind build-essential autoconf bison gperf flex libtool mingw-w64 git-core imagemagick pkg-config -y )\n#   install wine > 1.6.2 (debian:jessie version fails with pip)\nRUN dpkg --add-architecture i386 \\\n && curl https://dl.winehq.org/wine-builds/Release.key | apt-key add - \\\n && echo 'deb https://dl.winehq.org/wine-builds/debian/ jessie main' >> /etc/apt/sources.list.d/wine.list \\\n && :\nRUN curl https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}.msi > /tmp/python-${PYTHON_VERSION}.msi\nRUN curl -L http://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip\n#   alternative with messy python afterwards\n#   RUN curl -L http://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi > /tmp/msvcforpython27.msi\nRUN curl -L http://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz > /tmp/openssl-${OPENSSL_VERSION}.tar.gz\nRUN (apt-get update ;apt-get install --no-install-recommends winehq-staging -y )\nRUN curl -L http://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip\nRUN mkdir -p /root/.wine/drive_c/mingw \\\n && unzip -d /root/.wine/drive_c/mingw /tmp/mingw-get.zip\n#  ######\n#   Build python dependency\n#   using the 'host' (linux) xcompiler instead of fiddeling in wine\n#   zlib - needs a update every 5 years\n#   adds a patch that makes a shared lib - default is static\nRUN curl -L http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz > /tmp/zlib-${ZLIB_VERSION}.tar.gz\nCOPY zlib-mingw-shared.patch /zlib-mingw-shared.patch\nRUN mkdir -p /root/.wine/drive_c/zlib/src \\\n && mv /tmp/zlib-${ZLIB_VERSION}.tar.gz /root/.wine/drive_c/zlib/src \\\n && cd /root/.wine/drive_c/zlib/src \\\n && tar xzf zlib-${ZLIB_VERSION}.tar.gz \\\n && cd zlib-${ZLIB_VERSION} \\\n && patch -p0 < /zlib-mingw-shared.patch \\\n && make -f win32/Makefile.gcc PREFIX=/usr/bin/i686-w64-mingw32- \\\n && make -f win32/Makefile.gcc INCLUDE_PATH=/root/.wine/drive_c/zlib/include LIBRARY_PATH=/root/.wine/drive_c/zlib/lib BINARY_PATH=/root/.wine/drive_c/zlib/bin install\n#  #####\n#   install gcc for most pip builds\n#   install g++ for pycryptopp\n#   this is mingw in wine, not to get confused with mingw-w64 in container-host\nRUN wine msiexec -i /tmp/python-${PYTHON_VERSION}.msi -q \\\n && wine c:/mingw/bin/mingw-get.exe install gcc g++ mingw32-make \\\n && rm -r /tmp/.wine-0\n#  ###\n#   pip configuration\n#   set wine mingw compiler to be used by \"python setup build\"\n#   set default include dirs, libraries and library paths\n#   the libraries=crypto is added because srp will only link using -lssl but links to BN_* (libcrypto) code\n#   'install' zlib to mingw so python may find its dlls\n#   pyside-rcc fix (https://srinikom.github.io/pyside-bz-archive/670.html)\nRUN printf \"[build]\\ncompiler=mingw32\\n\\n[build_ext]\\ninclude_dirs=c:\\openssl\\include;c:\\zlib\\include\\nlibraries=crypto\\nlibrary_dirs=c:\\openssl\\lib;c:\\openssl\\bin;c:\\zlib\\lib;c:\\zlib\\bin\" > /root/.wine/drive_c/Python27/Lib/distutils/distutils.cfg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"PATH\"=\"C:\\\\\\\\python27;C:\\\\\\\\python27\\\\\\\\Scripts;C:\\\\\\\\python27\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\PySide;C:\\\\\\\\mingw\\\\\\\\bin;c:\\\\\\\\windows;c:\\\\\\\\windows\\\\\\\\system\"' > /root/.wine/drive_c/path.reg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"OPENSSL_CONF\"=\"C:\\\\\\\\openssl\"' > /root/.wine/drive_c/openssl_conf.reg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"PYTHONPATH\"=\"C:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages;Z:\\\\\\\\var\\\\\\\\build\\\\\\\\bitmask_rw\\\\\\\\src\"' > /root/.wine/drive_c/pythonpath.reg \\\n && cp /root/.wine/drive_c/zlib/bin/zlib1.dll /root/.wine/drive_c/mingw/bin \\\n && cp /root/.wine/drive_c/zlib/lib/libz.dll.a /root/.wine/drive_c/mingw/lib\n#  ###\n#   prepare the environment with all python dependencies installed\n#   inject dirspec from distribution\n#\nRUN (apt-get update ;apt-get install --no-install-recommends python-dirspec -y ) \\\n && cp -r /usr/lib/python2.7/dist-packages/dirspec* /root/.wine/drive_c/Python27/Lib/site-packages/\nRUN (apt-get update ;apt-get install --no-install-recommends python-setuptools -y )\nRUN wine regedit /root/.wine/drive_c/path.reg \\\n && wine regedit /root/.wine/drive_c/openssl_conf.reg \\\n && wine regedit /root/.wine/drive_c/pythonpath.reg \\\n && wine pip install virtualenv pyinstaller \\\n && wine pip install wheel \\\n && wine pip install -U setuptools-scm \\\n && wine pip install -U setuptools_scm \\\n && wine pip install -U pyside python-qt \\\n && wine pip install -I psutil==3.4.2 \\\n && rm -r /tmp/.wine-0\n#   alternative msvc: after python is installed (or before?)\n#   && wine msiexec -i /tmp/msvcforpython27.msi -q \\\nRUN (apt-get update ;apt-get install --no-install-recommends mc -y )\nENTRYPOINT [\"/var/src/bitmask/pkg/windows/pyinstaller-build.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nMAINTAINER paixu@0xn0.de\nENV PYTHON_VERSION=\"2.7.11\"\nENV OPENSSL_VERSION=\"1.0.2f\"\nENV ZLIB_VERSION=\"1.2.8\"\nENV MINGW_VERSION=\"0.6.2-beta-20131004-1\"\nENV MINGW_BIN_VERSION=\"0.6.2-mingw32-beta-20131004-1-bin\"\nENV WINEDEBUG=\"fixme-all\"\n# #####\n#  install packages required to build\n#  https-transport: winehq deb\n#  winbind: pip install keyring (requirements.pip) needs this somehow\n#  git-core: clone rw copy of repo and build specific commit\n#  imagemagick: convert png to ico-files\nRUN apt-get update \\\n && apt-get install unzip curl apt-transport-https winbind build-essential autoconf bison gperf flex libtool mingw-w64 git-core imagemagick pkg-config -y\n#  install wine > 1.6.2 (debian:jessie version fails with pip)\nRUN dpkg --add-architecture i386 \\\n && curl https://dl.winehq.org/wine-builds/Release.key | apt-key add - \\\n && echo 'deb https://dl.winehq.org/wine-builds/debian/ jessie main' >> /etc/apt/sources.list.d/wine.list \\\n && apt-get update\nRUN curl https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}.msi > /tmp/python-${PYTHON_VERSION}.msi\nRUN curl -L http://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip\n#  alternative with messy python afterwards\n#  RUN curl -L http://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi > /tmp/msvcforpython27.msi\nRUN curl -L http://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz > /tmp/openssl-${OPENSSL_VERSION}.tar.gz\nRUN apt-get install winehq-staging -y\nRUN curl -L http://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip\nRUN mkdir -p /root/.wine/drive_c/mingw \\\n && unzip -d /root/.wine/drive_c/mingw /tmp/mingw-get.zip\n# ######\n#  Build python dependency\n#  using the 'host' (linux) xcompiler instead of fiddeling in wine\n#  zlib - needs a update every 5 years\n#  adds a patch that makes a shared lib - default is static\nRUN curl -L http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz > /tmp/zlib-${ZLIB_VERSION}.tar.gz\nADD zlib-mingw-shared.patch /zlib-mingw-shared.patch\nRUN mkdir -p /root/.wine/drive_c/zlib/src \\\n && mv /tmp/zlib-${ZLIB_VERSION}.tar.gz /root/.wine/drive_c/zlib/src \\\n && cd /root/.wine/drive_c/zlib/src \\\n && tar xzf zlib-${ZLIB_VERSION}.tar.gz \\\n && cd zlib-${ZLIB_VERSION} \\\n && patch -p0 < /zlib-mingw-shared.patch \\\n && make -f win32/Makefile.gcc PREFIX=/usr/bin/i686-w64-mingw32- \\\n && make -f win32/Makefile.gcc INCLUDE_PATH=/root/.wine/drive_c/zlib/include LIBRARY_PATH=/root/.wine/drive_c/zlib/lib BINARY_PATH=/root/.wine/drive_c/zlib/bin install\n# #####\n#  install gcc for most pip builds\n#  install g++ for pycryptopp\n#  this is mingw in wine, not to get confused with mingw-w64 in container-host\nRUN wine msiexec -i /tmp/python-${PYTHON_VERSION}.msi -q \\\n && wine c:/mingw/bin/mingw-get.exe install gcc g++ mingw32-make \\\n && rm -r /tmp/.wine-0\n# ###\n#  pip configuration\n#  set wine mingw compiler to be used by \"python setup build\"\n#  set default include dirs, libraries and library paths\n#  the libraries=crypto is added because srp will only link using -lssl but links to BN_* (libcrypto) code\n#  'install' zlib to mingw so python may find its dlls\n#  pyside-rcc fix (https://srinikom.github.io/pyside-bz-archive/670.html)\nRUN printf \"[build]\\ncompiler=mingw32\\n\\n[build_ext]\\ninclude_dirs=c:\\openssl\\include;c:\\zlib\\include\\nlibraries=crypto\\nlibrary_dirs=c:\\openssl\\lib;c:\\openssl\\bin;c:\\zlib\\lib;c:\\zlib\\bin\" > /root/.wine/drive_c/Python27/Lib/distutils/distutils.cfg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"PATH\"=\"C:\\\\\\\\python27;C:\\\\\\\\python27\\\\\\\\Scripts;C:\\\\\\\\python27\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\PySide;C:\\\\\\\\mingw\\\\\\\\bin;c:\\\\\\\\windows;c:\\\\\\\\windows\\\\\\\\system\"' > /root/.wine/drive_c/path.reg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"OPENSSL_CONF\"=\"C:\\\\\\\\openssl\"' > /root/.wine/drive_c/openssl_conf.reg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"PYTHONPATH\"=\"C:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages;Z:\\\\\\\\var\\\\\\\\build\\\\\\\\bitmask_rw\\\\\\\\src\"' > /root/.wine/drive_c/pythonpath.reg \\\n && cp /root/.wine/drive_c/zlib/bin/zlib1.dll /root/.wine/drive_c/mingw/bin \\\n && cp /root/.wine/drive_c/zlib/lib/libz.dll.a /root/.wine/drive_c/mingw/lib\n# ###\n#  prepare the environment with all python dependencies installed\n#  inject dirspec from distribution\n#\nRUN apt-get install python-dirspec -y \\\n && cp -r /usr/lib/python2.7/dist-packages/dirspec* /root/.wine/drive_c/Python27/Lib/site-packages/\nRUN apt-get install python-setuptools -y\nRUN wine regedit /root/.wine/drive_c/path.reg \\\n && wine regedit /root/.wine/drive_c/openssl_conf.reg \\\n && wine regedit /root/.wine/drive_c/pythonpath.reg \\\n && wine pip install virtualenv pyinstaller \\\n && wine pip install wheel \\\n && wine pip install -U setuptools-scm \\\n && wine pip install -U setuptools_scm \\\n && wine pip install -U pyside python-qt \\\n && wine pip install -I psutil==3.4.2 \\\n && rm -r /tmp/.wine-0\n#  alternative msvc: after python is installed (or before?)\n#  && wine msiexec -i /tmp/msvcforpython27.msi -q \\\nRUN apt-get install mc -y\nENTRYPOINT [\"/var/src/bitmask/pkg/windows/pyinstaller-build.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"add3644fc5525b0a8f9607e783ef2c22","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nMAINTAINER paixu@0xn0.de\nENV PYTHON_VERSION=\"2.7.11\"\nENV OPENSSL_VERSION=\"1.0.2f\"\nENV ZLIB_VERSION=\"1.2.8\"\nENV MINGW_VERSION=\"0.6.2-beta-20131004-1\"\nENV MINGW_BIN_VERSION=\"0.6.2-mingw32-beta-20131004-1-bin\"\nENV WINEDEBUG=\"fixme-all\"\n#  #####\n#   install packages required to build\n#   https-transport: winehq deb\n#   winbind: pip install keyring (requirements.pip) needs this somehow\n#   git-core: clone rw copy of repo and build specific commit\n#   imagemagick: convert png to ico-files\nRUN apt-get update \\\n && apt-get install unzip curl apt-transport-https winbind build-essential autoconf bison gperf flex libtool mingw-w64 git-core imagemagick pkg-config -y\n#   install wine > 1.6.2 (debian:jessie version fails with pip)\nRUN dpkg --add-architecture i386 \\\n && curl https://dl.winehq.org/wine-builds/Release.key | apt-key add - \\\n && echo 'deb https://dl.winehq.org/wine-builds/debian/ jessie main' >> /etc/apt/sources.list.d/wine.list \\\n && apt-get update\nRUN curl https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}.msi > /tmp/python-${PYTHON_VERSION}.msi\nRUN curl -L http://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip\n#   alternative with messy python afterwards\n#   RUN curl -L http://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi > /tmp/msvcforpython27.msi\nRUN curl -L http://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz > /tmp/openssl-${OPENSSL_VERSION}.tar.gz\nRUN apt-get install winehq-staging -y\nRUN curl -L http://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip\nRUN mkdir -p /root/.wine/drive_c/mingw \\\n && unzip -d /root/.wine/drive_c/mingw /tmp/mingw-get.zip\n#  ######\n#   Build python dependency\n#   using the 'host' (linux) xcompiler instead of fiddeling in wine\n#   zlib - needs a update every 5 years\n#   adds a patch that makes a shared lib - default is static\nRUN curl -L http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz > /tmp/zlib-${ZLIB_VERSION}.tar.gz\nADD zlib-mingw-shared.patch /zlib-mingw-shared.patch\nRUN mkdir -p /root/.wine/drive_c/zlib/src \\\n && mv /tmp/zlib-${ZLIB_VERSION}.tar.gz /root/.wine/drive_c/zlib/src \\\n && cd /root/.wine/drive_c/zlib/src \\\n && tar xzf zlib-${ZLIB_VERSION}.tar.gz \\\n && cd zlib-${ZLIB_VERSION} \\\n && patch -p0 < /zlib-mingw-shared.patch \\\n && make -f win32/Makefile.gcc PREFIX=/usr/bin/i686-w64-mingw32- \\\n && make -f win32/Makefile.gcc INCLUDE_PATH=/root/.wine/drive_c/zlib/include LIBRARY_PATH=/root/.wine/drive_c/zlib/lib BINARY_PATH=/root/.wine/drive_c/zlib/bin install\n#  #####\n#   install gcc for most pip builds\n#   install g++ for pycryptopp\n#   this is mingw in wine, not to get confused with mingw-w64 in container-host\nRUN wine msiexec -i /tmp/python-${PYTHON_VERSION}.msi -q \\\n && wine c:/mingw/bin/mingw-get.exe install gcc g++ mingw32-make \\\n && rm -r /tmp/.wine-0\n#  ###\n#   pip configuration\n#   set wine mingw compiler to be used by \"python setup build\"\n#   set default include dirs, libraries and library paths\n#   the libraries=crypto is added because srp will only link using -lssl but links to BN_* (libcrypto) code\n#   'install' zlib to mingw so python may find its dlls\n#   pyside-rcc fix (https://srinikom.github.io/pyside-bz-archive/670.html)\nRUN printf \"[build]\\ncompiler=mingw32\\n\\n[build_ext]\\ninclude_dirs=c:\\openssl\\include;c:\\zlib\\include\\nlibraries=crypto\\nlibrary_dirs=c:\\openssl\\lib;c:\\openssl\\bin;c:\\zlib\\lib;c:\\zlib\\bin\" > /root/.wine/drive_c/Python27/Lib/distutils/distutils.cfg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"PATH\"=\"C:\\\\\\\\python27;C:\\\\\\\\python27\\\\\\\\Scripts;C:\\\\\\\\python27\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\PySide;C:\\\\\\\\mingw\\\\\\\\bin;c:\\\\\\\\windows;c:\\\\\\\\windows\\\\\\\\system\"' > /root/.wine/drive_c/path.reg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"OPENSSL_CONF\"=\"C:\\\\\\\\openssl\"' > /root/.wine/drive_c/openssl_conf.reg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"PYTHONPATH\"=\"C:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages;Z:\\\\\\\\var\\\\\\\\build\\\\\\\\bitmask_rw\\\\\\\\src\"' > /root/.wine/drive_c/pythonpath.reg \\\n && cp /root/.wine/drive_c/zlib/bin/zlib1.dll /root/.wine/drive_c/mingw/bin \\\n && cp /root/.wine/drive_c/zlib/lib/libz.dll.a /root/.wine/drive_c/mingw/lib\n#  ###\n#   prepare the environment with all python dependencies installed\n#   inject dirspec from distribution\n#\nRUN apt-get install python-dirspec -y \\\n && cp -r /usr/lib/python2.7/dist-packages/dirspec* /root/.wine/drive_c/Python27/Lib/site-packages/\nRUN apt-get install python-setuptools -y\nRUN wine regedit /root/.wine/drive_c/path.reg \\\n && wine regedit /root/.wine/drive_c/openssl_conf.reg \\\n && wine regedit /root/.wine/drive_c/pythonpath.reg \\\n && wine pip install virtualenv pyinstaller \\\n && wine pip install wheel \\\n && wine pip install -U setuptools-scm \\\n && wine pip install -U setuptools_scm \\\n && wine pip install -U pyside python-qt \\\n && wine pip install -I psutil==3.4.2 \\\n && rm -r /tmp/.wine-0\n#   alternative msvc: after python is installed (or before?)\n#   && wine msiexec -i /tmp/msvcforpython27.msi -q \\\nRUN apt-get install mc -y\nENTRYPOINT [\"/var/src/bitmask/pkg/windows/pyinstaller-build.sh\"]\n","originalDockerfileUglifiedHash":"6e19e7790fdc41af7686d3a064223920","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2da0da3a849b07c0fab6e0b4e53450a771ee7c42.dockerfile"}