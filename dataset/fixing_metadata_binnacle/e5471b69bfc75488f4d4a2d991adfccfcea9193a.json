{"seed":3713751230,"processedDockerfileHash":"ea6e16042fec9bc78d0015f2c5e610b8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied.  See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\n#   Using official python runtime base image\nFROM ubuntu:18.04\nSHELL [\"/bin/bash\", \"-c\"]\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Java installation.\nENV LANG=\"C.UTF-8\"\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#   lsb\nRUN apt-get update \\\n && apt-get install --no-install-recommends lsb-release=9.20170808ubuntu1 mysql-server=5.7.41-0ubuntu0.18.04.1 libmysqlclient-dev=5.7.41-0ubuntu0.18.04.1 libsasl2-dev=2.1.27~101-g0780600+dfsg-3ubuntu2.4 mysql-client=5.7.41-0ubuntu0.18.04.1 -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2=1.0.6-8.1ubuntu0.2 unzip=6.0-21ubuntu1.2 apt-transport-https=1.6.14 xz-utils=5.2.2-1.3ubuntu0.1 -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk=8u362-ga-0ubuntu1~18.04.1 -y \\\n && [ \"$JAVA_HOME\" = \"$( docker-java-home ;)\" ] \\\n && apt-get clean\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql=10+190ubuntu0.1 postgresql-contrib=10+190ubuntu0.1 -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip=9.0.1-2.3~ubuntu1.18.04.8 python3-pip=9.0.1-2.3~ubuntu1.18.04.8 virtualenvwrapper=4.3.1-2 -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends git-all=1:2.17.1-1ubuntu0.17 tig=2.3.0-1 tmux=2.6-3ubuntu0.3 vim=2:8.0.1453-1ubuntu1.11 less=487-0.1 curl=7.58.0-2ubuntu3.24 gnupg2=2.2.4-1ubuntu1.6 software-properties-common=0.96.24.32.20 libpq-dev=10.23-0ubuntu0.18.04.1 -y \\\n && apt-get clean\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-cloud-sdk -y \\\n && apt-get clean\n#   Install python 3.6 for airflow's compatibility,\n#   python-dev and necessary libraries to build all python packages\nRUN add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends python3.6=3.6.9-1~18.04ubuntu1.12 python3.6-dev=3.6.9-1~18.04ubuntu1.12 python3.5 python3.5-dev python-dev=2.7.15~rc1-1 build-essential=12.4ubuntu1 autoconf=2.69-11 libtool=2.4.6-2 libkrb5-dev=1.16-2ubuntu0.4 -y \\\n && apt-get clean\nWORKDIR /workspace\nRUN mkdir -pv /airflow/dags\n#   Set airflow home\nENV AIRFLOW_HOME=\"/airflow\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends mlocate=0.26-2ubuntu3.1 -y \\\n && apt-get clean\nRUN updatedb\n#   Setup un-privileged user with passwordless sudo access.\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo=1.8.21p2-3ubuntu1.5 -y \\\n && apt-get clean\nRUN groupadd -r airflow \\\n && useradd -m -r -g airflow -G sudo airflow\nRUN echo 'airflow ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-setuptools=39.0.1-2ubuntu0.1 python3-setuptools=39.0.1-2ubuntu0.1 \\\n && apt-get clean\nRUN pip install virtualenvwrapper==4.8.4 --upgrade \\\n && pip3 install --upgrade virtualenvwrapper\nRUN source /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n && mkvirtualenv -p /usr/bin/python3.6 airflow36 \\\n && mkvirtualenv -p /usr/bin/python3.5 airflow35\n#  # Preinstall airflow\n#  # Airflow requires this variable be set on installation to avoid a GPL dependency.\nENV SLUGIFY_USES_TEXT_UNIDECODE=\"yes\"\n#   Note. Increase this number to force rebuilding to the latest dependencies\nENV REBUILD_AIRFLOW_BREEZE_VERSION=\"6\"\nARG AIRFLOW_REPO_URL=https://github.com/apache/airflow\nARG AIRFLOW_REPO_BRANCH=master\nRUN echo Checking out airflow source from ${AIRFLOW_REPO_URL}, branch: ${AIRFLOW_REPO_BRANCH}\nRUN git clone ${AIRFLOW_REPO_URL} temp_airflow\nRUN cd temp_airflow \\\n && git checkout ${AIRFLOW_REPO_BRANCH}\n#   Speed up the installation of cassandra driver\nENV CASS_DRIVER_BUILD_CONCURRENCY=\"8\"\nENV CASS_DRIVER_NO_CYTHON=\"1\"\nRUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n && cd temp_airflow \\\n && workon airflow36 \\\n && pip install --no-use-pep517 -e .[devel_ci]\nRUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n && cd temp_airflow \\\n && workon airflow35 \\\n && pip install --no-use-pep517 -e .[devel_ci]\nRUN apt-get update \\\n && apt-get install --no-install-recommends jq=1.5+dfsg-2 -y \\\n && apt-get clean\nRUN rm -rf temp_airflow\nRUN mkdir -pv /airflow/output\nRUN sed -i \"s/^#listen_addresses.*/listen_addresses = '*'/\" /etc/postgresql/10/main/postgresql.conf\nRUN sed -i \"s/127.0.0.1\\/32/0.0.0.0\\/0/\" /etc/postgresql/10/main/pg_hba.conf\nRUN pip install awscli==1.27.114 botocore==1.29.114\n#  # Add config and scripts\nCOPY airflow.cfg /airflow/airflow.cfg\nCOPY _init.sh /airflow/_init.sh\nCOPY _setup_gcp_key.sh /airflow/_setup_gcp_key.sh\nCOPY _reset.sh /airflow/_reset.sh\nCOPY _create_links.sh /airflow/_create_links.sh\nCOPY _setup_gcp_connection.py /airflow/_setup_gcp_connection.py\nCOPY _decrypt_encrypted_variables.sh /airflow/_decrypt_encrypted_variables.sh\nCOPY _bash_aliases /root/.bash_aliases\nCOPY _inputrc /root/.inputrc\nCOPY cloudbuild /root/cloudbuild\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing,\n#  software distributed under the License is distributed on an\n#  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied.  See the License for the\n#  specific language governing permissions and limitations\n#  under the License.\n#  Using official python runtime base image\nFROM ubuntu:18.04\nSHELL [\"/bin/bash\", \"-c\"]\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Java installation.\nENV LANG=\"C.UTF-8\"\n#  add a simple script that can auto-detect the appropriate JAVA_HOME value\n#  based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#  lsb\nRUN apt-get update \\\n && apt-get install --no-install-recommends lsb-release mysql-server libmysqlclient-dev libsasl2-dev mysql-client -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 unzip apt-transport-https xz-utils -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk -y \\\n && [ \"$JAVA_HOME\" = \"$( docker-java-home ;)\" ] \\\n && apt-get clean\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql postgresql-contrib -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip python3-pip virtualenvwrapper -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends git-all tig tmux vim less curl gnupg2 software-properties-common libpq-dev -y \\\n && apt-get clean\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-cloud-sdk -y \\\n && apt-get clean\n#  Install python 3.6 for airflow's compatibility,\n#  python-dev and necessary libraries to build all python packages\nRUN add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends python3.6 python3.6-dev python3.5 python3.5-dev python-dev build-essential autoconf libtool libkrb5-dev -y \\\n && apt-get clean\nWORKDIR /workspace\nRUN mkdir -pv /airflow/dags\n#  Set airflow home\nENV AIRFLOW_HOME=\"/airflow\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends mlocate -y \\\n && apt-get clean\nRUN updatedb\n#  Setup un-privileged user with passwordless sudo access.\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo -y \\\n && apt-get clean\nRUN groupadd -r airflow \\\n && useradd -m -r -g airflow -G sudo airflow\nRUN echo 'airflow ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\nRUN apt-get update \\\n && apt-get install python-setuptools python3-setuptools \\\n && apt-get clean\nRUN pip install virtualenvwrapper --upgrade \\\n && pip3 install --upgrade virtualenvwrapper\nRUN source /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n && mkvirtualenv -p /usr/bin/python3.6 airflow36 \\\n && mkvirtualenv -p /usr/bin/python3.5 airflow35\n# # Preinstall airflow\n# # Airflow requires this variable be set on installation to avoid a GPL dependency.\nENV SLUGIFY_USES_TEXT_UNIDECODE=\"yes\"\n#  Note. Increase this number to force rebuilding to the latest dependencies\nENV REBUILD_AIRFLOW_BREEZE_VERSION=\"6\"\nARG AIRFLOW_REPO_URL=https://github.com/apache/airflow\nARG AIRFLOW_REPO_BRANCH=master\nRUN echo Checking out airflow source from ${AIRFLOW_REPO_URL}, branch: ${AIRFLOW_REPO_BRANCH}\nRUN git clone ${AIRFLOW_REPO_URL} temp_airflow\nRUN cd temp_airflow \\\n && git checkout ${AIRFLOW_REPO_BRANCH}\n#  Speed up the installation of cassandra driver\nENV CASS_DRIVER_BUILD_CONCURRENCY=\"8\"\nENV CASS_DRIVER_NO_CYTHON=\"1\"\nRUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n && cd temp_airflow \\\n && workon airflow36 \\\n && pip install --no-use-pep517 -e .[devel_ci]\nRUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n && cd temp_airflow \\\n && workon airflow35 \\\n && pip install --no-use-pep517 -e .[devel_ci]\nRUN apt-get update \\\n && apt-get install --no-install-recommends jq -y \\\n && apt-get clean\nRUN rm -rf temp_airflow\nRUN mkdir -pv /airflow/output\nRUN sed -i \"s/^#listen_addresses.*/listen_addresses = '*'/\" /etc/postgresql/10/main/postgresql.conf\nRUN sed -i \"s/127.0.0.1\\/32/0.0.0.0\\/0/\" /etc/postgresql/10/main/pg_hba.conf\nRUN pip install awscli botocore\n# # Add config and scripts\nCOPY airflow.cfg /airflow/airflow.cfg\nCOPY _init.sh /airflow/_init.sh\nCOPY _setup_gcp_key.sh /airflow/_setup_gcp_key.sh\nCOPY _reset.sh /airflow/_reset.sh\nCOPY _create_links.sh /airflow/_create_links.sh\nCOPY _setup_gcp_connection.py /airflow/_setup_gcp_connection.py\nCOPY _decrypt_encrypted_variables.sh /airflow/_decrypt_encrypted_variables.sh\nCOPY _bash_aliases /root/.bash_aliases\nCOPY _inputrc /root/.inputrc\nCOPY cloudbuild /root/cloudbuild\n","injectedSmells":[],"originalDockerfileHash":"1f60fc63f169625dd6f9df75dd5b58be","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied.  See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\n#   Using official python runtime base image\nFROM ubuntu:18.04\nSHELL [\"/bin/bash\", \"-c\"]\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Java installation.\nENV LANG=\"C.UTF-8\"\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#   lsb\nRUN apt-get update \\\n && apt-get install --no-install-recommends lsb-release mysql-server libmysqlclient-dev libsasl2-dev mysql-client -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 unzip apt-transport-https xz-utils -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk -y \\\n && [ \"$JAVA_HOME\" = \"$( docker-java-home ;)\" ] \\\n && apt-get clean\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql postgresql-contrib -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip python3-pip virtualenvwrapper -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends git-all tig tmux vim less curl gnupg2 software-properties-common libpq-dev -y \\\n && apt-get clean\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-cloud-sdk -y \\\n && apt-get clean\n#   Install python 3.6 for airflow's compatibility,\n#   python-dev and necessary libraries to build all python packages\nRUN add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends python3.6 python3.6-dev python3.5 python3.5-dev python-dev build-essential autoconf libtool libkrb5-dev -y \\\n && apt-get clean\nWORKDIR /workspace\nRUN mkdir -pv /airflow/dags\n#   Set airflow home\nENV AIRFLOW_HOME=\"/airflow\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends mlocate -y \\\n && apt-get clean\nRUN updatedb\n#   Setup un-privileged user with passwordless sudo access.\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo -y \\\n && apt-get clean\nRUN groupadd -r airflow \\\n && useradd -m -r -g airflow -G sudo airflow\nRUN echo 'airflow ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\nRUN apt-get update \\\n && apt-get install python-setuptools python3-setuptools \\\n && apt-get clean\nRUN pip install virtualenvwrapper --upgrade \\\n && pip3 install --upgrade virtualenvwrapper\nRUN source /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n && mkvirtualenv -p /usr/bin/python3.6 airflow36 \\\n && mkvirtualenv -p /usr/bin/python3.5 airflow35\n#  # Preinstall airflow\n#  # Airflow requires this variable be set on installation to avoid a GPL dependency.\nENV SLUGIFY_USES_TEXT_UNIDECODE=\"yes\"\n#   Note. Increase this number to force rebuilding to the latest dependencies\nENV REBUILD_AIRFLOW_BREEZE_VERSION=\"6\"\nARG AIRFLOW_REPO_URL=https://github.com/apache/airflow\nARG AIRFLOW_REPO_BRANCH=master\nRUN echo Checking out airflow source from ${AIRFLOW_REPO_URL}, branch: ${AIRFLOW_REPO_BRANCH}\nRUN git clone ${AIRFLOW_REPO_URL} temp_airflow\nRUN cd temp_airflow \\\n && git checkout ${AIRFLOW_REPO_BRANCH}\n#   Speed up the installation of cassandra driver\nENV CASS_DRIVER_BUILD_CONCURRENCY=\"8\"\nENV CASS_DRIVER_NO_CYTHON=\"1\"\nRUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n && cd temp_airflow \\\n && workon airflow36 \\\n && pip install --no-use-pep517 -e .[devel_ci]\nRUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n && cd temp_airflow \\\n && workon airflow35 \\\n && pip install --no-use-pep517 -e .[devel_ci]\nRUN apt-get update \\\n && apt-get install --no-install-recommends jq -y \\\n && apt-get clean\nRUN rm -rf temp_airflow\nRUN mkdir -pv /airflow/output\nRUN sed -i \"s/^#listen_addresses.*/listen_addresses = '*'/\" /etc/postgresql/10/main/postgresql.conf\nRUN sed -i \"s/127.0.0.1\\/32/0.0.0.0\\/0/\" /etc/postgresql/10/main/pg_hba.conf\nRUN pip install awscli botocore\n#  # Add config and scripts\nCOPY airflow.cfg /airflow/airflow.cfg\nCOPY _init.sh /airflow/_init.sh\nCOPY _setup_gcp_key.sh /airflow/_setup_gcp_key.sh\nCOPY _reset.sh /airflow/_reset.sh\nCOPY _create_links.sh /airflow/_create_links.sh\nCOPY _setup_gcp_connection.py /airflow/_setup_gcp_connection.py\nCOPY _decrypt_encrypted_variables.sh /airflow/_decrypt_encrypted_variables.sh\nCOPY _bash_aliases /root/.bash_aliases\nCOPY _inputrc /root/.inputrc\nCOPY cloudbuild /root/cloudbuild\n","originalDockerfileUglifiedHash":"ccb290b354440cd840e84f23b0513803","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e5471b69bfc75488f4d4a2d991adfccfcea9193a.dockerfile"}