{"seed":3359516019,"processedDockerfileHash":"ee6b547bdb07e375fdaceb1dfb3390e1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM quay.io/fenicsproject/stable:2017.2.0.r4\nMAINTAINER pf4d <mail@cummings.evan@gmail.com>\nUSER root\n#   note that many extra latex options are installed for matplotlib plotting :\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip python-netcdf4 python-matplotlib git curl wget subversion patch gmsh libxrender1 libgeos-dev libglu1-mesa libsm6 libxcursor1 texlive-base texlive-fonts-recommended texlive-latex-extra texlive-math-extra texlive-fonts-extra texlive-science -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   get the latest python packages :\nRUN pip install pip==23.1 --upgrade\nRUN pip install ipython==8.12.0 colored==1.4.4 termcolor==2.2.0 shapely==2.0.1 pyproj==3.5.0 tifffile==2023.4.12 --upgrade\n#   install everything as user 'fenics' and local dir '~/.local/' :\nUSER fenics\nCOPY WELCOME $FENICS_HOME/WELCOME\nENV CSLVR_VERSION=\"2017.2.0\"\nENV PKG_DIR=\"$FENICS_HOME/.local\"\nENV IPOPT_DIR=\"$PKG_DIR\"\nENV GEOS_DIR=\"$PKG_DIR\"\nENV PYTHONPATH=\"$FENICS_HOME/cslvr:$PYTHONPATH\"\nENV PATH=\"$PKG_DIR/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"$PKG_DIR/lib:$LD_LIBRARY_PATH\"\n#   install libadjoint :\nRUN cd $FENICS_HOME \\\n && git clone -b libadjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/libadjoint\nRUN cd $FENICS_HOME/libadjoint \\\n && mkdir build ; cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=$PKG_DIR .. \\\n && make install \\\n && cd ../.. \\\n && rm -r libadjoint\n#   install dolfin-adjoint :\nRUN cd $FENICS_HOME \\\n && git clone -b dolfin-adjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/dolfin-adjoint\nRUN cd $FENICS_HOME/dolfin-adjoint \\\n && python setup.py install --user \\\n && cd .. \\\n && rm -r dolfin-adjoint\n#   install ipopt with default packages -- these overlap with those used by \n#   fenics, but it works, and is supported by IPOPT crew :\nRUN cd $FENICS_HOME \\\n && svn co https://projects.coin-or.org/svn/Ipopt/stable/3.12 ipopt\n#       git clone https://github.com/coin-or/Ipopt\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Metis \\\n && ./get.Metis\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Lapack \\\n && ./get.Lapack\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Blas \\\n && ./get.Blas\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Mumps \\\n && ./get.Mumps\nRUN cd $FENICS_HOME/ipopt/ThirdParty/ASL \\\n && ./get.ASL\nRUN cd $FENICS_HOME/ipopt \\\n && ./configure --prefix=$PKG_DIR \\\n && make -j 4 \\\n && make install \\\n && cd .. \\\n && rm -r ipopt\n#   install pyipopt :\nRUN cd $FENICS_HOME \\\n && git clone https://github.com/pf4d/pyipopt.git\nRUN cd $FENICS_HOME/pyipopt \\\n && python setup.py install --user \\\n && cd .. \\\n && rm -r pyipopt\n#   install basemap for matplotlib :\nRUN cd $PKG_DIR \\\n && git clone https://github.com/matplotlib/basemap.git \\\n && cd basemap \\\n && python setup.py install --user \\\n && cd ..\n#   install gmsh-dynamic 2.10.1 :\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git\nRUN cd gmsh \\\n && mkdir build \\\n && cd build \\\n && cmake -D ENABLE_WRAP_PYTHON=ON -D ENABLE_FLTK=ON -D ENABLE_PRIVATE_API=ON -D PYTHON_EXECUTABLE:FILEPATH=$( which python ;) -D ENABLE_PETSC=OFF -D ENABLE_SLEPC=OFF -D ENABLE_PETSC4PY=OFF -D ENABLE_MPI=ON -D CMAKE_C_COMPILER=mpicc -D CMAKE_CXX_COMPILER=mpicxx -D CMAKE_Fortran_COMPILER=mpifort -D CMAKE_INSTALL_PREFIX=$PKG_DIR .. \\\n && make \\\n && make install\n#   install cslvr :\nRUN cd $PKG_DIR \\\n && git clone https://github.com/pf4d/cslvr\nUSER root\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM quay.io/fenicsproject/stable:2017.2.0.r4\nMAINTAINER pf4d <mail@cummings.evan@gmail.com>\nUSER root\n#  note that many extra latex options are installed for matplotlib plotting :\nRUN apt-get update \\\n && apt-get install python-pip python-netcdf4 python-matplotlib git curl wget subversion patch gmsh libxrender1 libgeos-dev libglu1-mesa libsm6 libxcursor1 texlive-base texlive-fonts-recommended texlive-latex-extra texlive-math-extra texlive-fonts-extra texlive-science -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  get the latest python packages :\nRUN pip install pip --upgrade\nRUN pip install ipython colored termcolor shapely pyproj tifffile --upgrade\n#  install everything as user 'fenics' and local dir '~/.local/' :\nUSER fenics\nCOPY WELCOME $FENICS_HOME/WELCOME\nENV CSLVR_VERSION=\"2017.2.0\"\nENV PKG_DIR=\"$FENICS_HOME/.local\"\nENV IPOPT_DIR=\"$PKG_DIR\"\nENV GEOS_DIR=\"$PKG_DIR\"\nENV PYTHONPATH=\"$FENICS_HOME/cslvr:$PYTHONPATH\"\nENV PATH=\"$PKG_DIR/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"$PKG_DIR/lib:$LD_LIBRARY_PATH\"\n#  install libadjoint :\nRUN cd $FENICS_HOME \\\n && git clone -b libadjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/libadjoint\nRUN cd $FENICS_HOME/libadjoint \\\n && mkdir build ; cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=$PKG_DIR .. \\\n && make install \\\n && cd ../.. \\\n && rm -r libadjoint\n#  install dolfin-adjoint :\nRUN cd $FENICS_HOME \\\n && git clone -b dolfin-adjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/dolfin-adjoint\nRUN cd $FENICS_HOME/dolfin-adjoint \\\n && python setup.py install --user \\\n && cd .. \\\n && rm -r dolfin-adjoint\n#  install ipopt with default packages -- these overlap with those used by \n#  fenics, but it works, and is supported by IPOPT crew :\nRUN cd $FENICS_HOME \\\n && svn co https://projects.coin-or.org/svn/Ipopt/stable/3.12 ipopt\n#      git clone https://github.com/coin-or/Ipopt\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Metis \\\n && ./get.Metis\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Lapack \\\n && ./get.Lapack\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Blas \\\n && ./get.Blas\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Mumps \\\n && ./get.Mumps\nRUN cd $FENICS_HOME/ipopt/ThirdParty/ASL \\\n && ./get.ASL\nRUN cd $FENICS_HOME/ipopt \\\n && ./configure --prefix=$PKG_DIR \\\n && make -j 4 \\\n && make install \\\n && cd .. \\\n && rm -r ipopt\n#  install pyipopt :\nRUN cd $FENICS_HOME \\\n && git clone https://github.com/pf4d/pyipopt.git\nRUN cd $FENICS_HOME/pyipopt \\\n && python setup.py install --user \\\n && cd .. \\\n && rm -r pyipopt\n#  install basemap for matplotlib :\nRUN cd $PKG_DIR \\\n && git clone https://github.com/matplotlib/basemap.git \\\n && cd basemap \\\n && python setup.py install --user \\\n && cd ..\n#  install gmsh-dynamic 2.10.1 :\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git\nRUN cd gmsh \\\n && mkdir build \\\n && cd build \\\n && cmake -D ENABLE_WRAP_PYTHON=ON -D ENABLE_FLTK=ON -D ENABLE_PRIVATE_API=ON -D PYTHON_EXECUTABLE:FILEPATH=$( which python ;) -D ENABLE_PETSC=OFF -D ENABLE_SLEPC=OFF -D ENABLE_PETSC4PY=OFF -D ENABLE_MPI=ON -D CMAKE_C_COMPILER=mpicc -D CMAKE_CXX_COMPILER=mpicxx -D CMAKE_Fortran_COMPILER=mpifort -D CMAKE_INSTALL_PREFIX=$PKG_DIR .. \\\n && make \\\n && make install\n#  install cslvr :\nRUN cd $PKG_DIR \\\n && git clone https://github.com/pf4d/cslvr\nUSER root\n","injectedSmells":[],"originalDockerfileHash":"b11ee172e680a2050a8349b3c83e2573","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM quay.io/fenicsproject/stable:2017.2.0.r4\nMAINTAINER pf4d <mail@cummings.evan@gmail.com>\nUSER root\n#   note that many extra latex options are installed for matplotlib plotting :\nRUN apt-get update \\\n && apt-get install python-pip python-netcdf4 python-matplotlib git curl wget subversion patch gmsh libxrender1 libgeos-dev libglu1-mesa libsm6 libxcursor1 texlive-base texlive-fonts-recommended texlive-latex-extra texlive-math-extra texlive-fonts-extra texlive-science -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   get the latest python packages :\nRUN pip install pip --upgrade\nRUN pip install ipython colored termcolor shapely pyproj tifffile --upgrade\n#   install everything as user 'fenics' and local dir '~/.local/' :\nUSER fenics\nCOPY WELCOME $FENICS_HOME/WELCOME\nENV CSLVR_VERSION=\"2017.2.0\"\nENV PKG_DIR=\"$FENICS_HOME/.local\"\nENV IPOPT_DIR=\"$PKG_DIR\"\nENV GEOS_DIR=\"$PKG_DIR\"\nENV PYTHONPATH=\"$FENICS_HOME/cslvr:$PYTHONPATH\"\nENV PATH=\"$PKG_DIR/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"$PKG_DIR/lib:$LD_LIBRARY_PATH\"\n#   install libadjoint :\nRUN cd $FENICS_HOME \\\n && git clone -b libadjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/libadjoint\nRUN cd $FENICS_HOME/libadjoint \\\n && mkdir build ; cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=$PKG_DIR .. \\\n && make install \\\n && cd ../.. \\\n && rm -r libadjoint\n#   install dolfin-adjoint :\nRUN cd $FENICS_HOME \\\n && git clone -b dolfin-adjoint-2017.2.0 https://bitbucket.org/dolfin-adjoint/dolfin-adjoint\nRUN cd $FENICS_HOME/dolfin-adjoint \\\n && python setup.py install --user \\\n && cd .. \\\n && rm -r dolfin-adjoint\n#   install ipopt with default packages -- these overlap with those used by \n#   fenics, but it works, and is supported by IPOPT crew :\nRUN cd $FENICS_HOME \\\n && svn co https://projects.coin-or.org/svn/Ipopt/stable/3.12 ipopt\n#       git clone https://github.com/coin-or/Ipopt\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Metis \\\n && ./get.Metis\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Lapack \\\n && ./get.Lapack\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Blas \\\n && ./get.Blas\nRUN cd $FENICS_HOME/ipopt/ThirdParty/Mumps \\\n && ./get.Mumps\nRUN cd $FENICS_HOME/ipopt/ThirdParty/ASL \\\n && ./get.ASL\nRUN cd $FENICS_HOME/ipopt \\\n && ./configure --prefix=$PKG_DIR \\\n && make -j 4 \\\n && make install \\\n && cd .. \\\n && rm -r ipopt\n#   install pyipopt :\nRUN cd $FENICS_HOME \\\n && git clone https://github.com/pf4d/pyipopt.git\nRUN cd $FENICS_HOME/pyipopt \\\n && python setup.py install --user \\\n && cd .. \\\n && rm -r pyipopt\n#   install basemap for matplotlib :\nRUN cd $PKG_DIR \\\n && git clone https://github.com/matplotlib/basemap.git \\\n && cd basemap \\\n && python setup.py install --user \\\n && cd ..\n#   install gmsh-dynamic 2.10.1 :\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git\nRUN cd gmsh \\\n && mkdir build \\\n && cd build \\\n && cmake -D ENABLE_WRAP_PYTHON=ON -D ENABLE_FLTK=ON -D ENABLE_PRIVATE_API=ON -D PYTHON_EXECUTABLE:FILEPATH=$( which python ;) -D ENABLE_PETSC=OFF -D ENABLE_SLEPC=OFF -D ENABLE_PETSC4PY=OFF -D ENABLE_MPI=ON -D CMAKE_C_COMPILER=mpicc -D CMAKE_CXX_COMPILER=mpicxx -D CMAKE_Fortran_COMPILER=mpifort -D CMAKE_INSTALL_PREFIX=$PKG_DIR .. \\\n && make \\\n && make install\n#   install cslvr :\nRUN cd $PKG_DIR \\\n && git clone https://github.com/pf4d/cslvr\nUSER root\n","originalDockerfileUglifiedHash":"e765982db46bddd66889fa2d7504b832","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/29458cf767506a1e879ac2fa53823a822dbb6342.dockerfile"}