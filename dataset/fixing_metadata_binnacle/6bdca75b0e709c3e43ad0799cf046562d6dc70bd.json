{"seed":1853158394,"processedDockerfileHash":"506aa9a87206e3a2b4a4c207176e57ae","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch-slim\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 ca-certificates libffi-dev libgdbm3 libgmp-dev libssl-dev libyaml-dev procps zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.7-rc\"\nENV RUBY_VERSION=\"2.7.0-preview1\"\nENV RUBY_DOWNLOAD_SHA256=\"8c546df3345398b3edc9d0ab097846f033783d33762889fd0f3dc8bb465c3354\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf bison dpkg-dev gcc libbz2-dev libgdbm-dev libglib2.0-dev libncurses-dev libreadline-dev libxml2-dev libxslt-dev make ruby wget xz-utils -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --disable-install-doc --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && apt-mark auto '.*' > /dev/null \\\n && apt-mark manual $savedAptMark \\\n && find /usr/local -type f -executable -not\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n#   path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH=\"$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\"\n#   adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" \\\n && chmod 777 \"$GEM_HOME\"\n#   (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\nCMD [\"irb\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch-slim\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 ca-certificates libffi-dev libgdbm3 libgmp-dev libssl-dev libyaml-dev procps zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#  skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.7-rc\"\nENV RUBY_VERSION=\"2.7.0-preview1\"\nENV RUBY_DOWNLOAD_SHA256=\"8c546df3345398b3edc9d0ab097846f033783d33762889fd0f3dc8bb465c3354\"\n#  some of ruby's build scripts are written in ruby\n#    we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf bison dpkg-dev gcc libbz2-dev libgdbm-dev libglib2.0-dev libncurses-dev libreadline-dev libxml2-dev libxslt-dev make ruby wget xz-utils -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --disable-install-doc --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && apt-mark auto '.*' > /dev/null \\\n && apt-mark manual $savedAptMark \\\n && find /usr/local -type f -executable -not ( -name '*tkinter*' ) -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && ruby --version \\\n && gem --version \\\n && bundle --version\n#  install things globally, for great justice\n#  and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n#  path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH=\"$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\"\n#  adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" \\\n && chmod 777 \"$GEM_HOME\"\n#  (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\nCMD [\"irb\"]\n","injectedSmells":[],"originalDockerfileHash":"d69b77c2a3dca1b8a647cd446e74f3fa","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch-slim\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 ca-certificates libffi-dev libgdbm3 libgmp-dev libssl-dev libyaml-dev procps zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.7-rc\"\nENV RUBY_VERSION=\"2.7.0-preview1\"\nENV RUBY_DOWNLOAD_SHA256=\"8c546df3345398b3edc9d0ab097846f033783d33762889fd0f3dc8bb465c3354\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf bison dpkg-dev gcc libbz2-dev libgdbm-dev libglib2.0-dev libncurses-dev libreadline-dev libxml2-dev libxslt-dev make ruby wget xz-utils -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --disable-install-doc --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && apt-mark auto '.*' > /dev/null \\\n && apt-mark manual $savedAptMark \\\n && find /usr/local -type f -executable -not\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n#   path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH=\"$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\"\n#   adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" \\\n && chmod 777 \"$GEM_HOME\"\n#   (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\nCMD [\"irb\"]\n","originalDockerfileUglifiedHash":"bc2dbaca846ff4dc6134b02dd0ef3b37","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6bdca75b0e709c3e43ad0799cf046562d6dc70bd.dockerfile"}