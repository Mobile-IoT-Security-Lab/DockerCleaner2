{"seed":1256019214,"processedDockerfileHash":"bbbf6f68aa013f03b86a23730e84cb5f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch\nMAINTAINER Wouter Admiraal <wad@wadmiraal.net>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DRUPAL_VERSION=\"8.6.2\"\n#   Install packages.\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends vim=2:8.0.0197-4+deb9u7 git=1:2.11.0-3+deb9u7 apache2=2.4.25-3+deb9u13 php-cli=1:7.0+49 php-mysql=1:7.0+49 php-gd=1:7.0+49 php-curl=1:7.0+49 php-xdebug=2.5.0-1 php-bcmath=1:7.0+49 php7.0-sqlite3=7.0.33-0+deb9u12 libapache2-mod-php=1:7.0+49 curl=7.52.1-5+deb9u16 mysql-server=5.5.9999+default mysql-client=5.5.9999+default openssh-server=1:7.4p1-10+deb9u7 phpmyadmin=4:4.6.6-4+deb9u2 wget=1.18-5+deb9u3 unzip=6.0-21+deb9u2 cron=3.0pl1-128+deb9u2 gnupg=2.1.18-8~deb9u4 supervisor=3.3.1-1+deb9u1 -y )\nRUN apt-get clean\n#   Setup PHP.\nRUN sed -i 's/display_errors = Off/display_errors = On/' /etc/php/7.0/apache2/php.ini\nRUN sed -i 's/display_errors = Off/display_errors = On/' /etc/php/7.0/cli/php.ini\n#   Setup Blackfire.\n#   Get the sources and install the Debian packages.\n#   We create our own start script. If the environment variables are set, we\n#   simply start Blackfire in the foreground. If not, we create a dummy daemon\n#   script that simply loops indefinitely. This is to trick Supervisor into\n#   thinking the program is running and avoid unnecessary error messages.\nRUN wget -O - https://packagecloud.io/gpg.key | apt-key add -\nRUN echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends blackfire-agent blackfire-php -y )\nRUN echo '#!/bin/bash\\nif [[ -z \"$BLACKFIREIO_SERVER_ID\" || -z \"$BLACKFIREIO_SERVER_TOKEN\" ]]; then\\n while true; do\\n sleep 1000\\n done\\nelse\\n /usr/bin/blackfire-agent -server-id=\"$BLACKFIREIO_SERVER_ID\" -server-token=\"$BLACKFIREIO_SERVER_TOKEN\"\\nfi\\n' > /usr/local/bin/launch-blackfire\nRUN chmod +x /usr/local/bin/launch-blackfire\nRUN mkdir -p /var/run/blackfire\n#   Setup Apache.\n#   In order to run our Simpletest tests, we need to make Apache\n#   listen on the same port as the one we forwarded. Because we use\n#   8080 by default, we set it up for that port.\nRUN sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf\nRUN sed -i 's/DocumentRoot \\/var\\/www\\/html/DocumentRoot \\/var\\/www/' /etc/apache2/sites-available/000-default.conf\nRUN sed -i 's/DocumentRoot \\/var\\/www\\/html/DocumentRoot \\/var\\/www/' /etc/apache2/sites-available/default-ssl.conf\nRUN echo \"Listen 8080\" >> /etc/apache2/ports.conf\nRUN echo \"Listen 8081\" >> /etc/apache2/ports.conf\nRUN echo \"Listen 8443\" >> /etc/apache2/ports.conf\nRUN sed -i 's/VirtualHost \\*:80/VirtualHost \\*:\\*/' /etc/apache2/sites-available/000-default.conf\nRUN sed -i 's/VirtualHost __default__:443/VirtualHost _default_:443 _default_:8443/' /etc/apache2/sites-available/default-ssl.conf\nRUN a2enmod rewrite\nRUN a2enmod ssl\nRUN a2ensite default-ssl.conf\n#   Setup PHPMyAdmin\nRUN echo \"\\n# Include PHPMyAdmin configuration\\nInclude /etc/phpmyadmin/apache.conf\\n\" >> /etc/apache2/apache2.conf\nRUN sed -i -e \"s/\\/\\/ $cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\]/$cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\]/g\" /etc/phpmyadmin/config.inc.php\nRUN sed -i -e \"s/$cfg\\['Servers'\\]\\[$i\\]\\['\\(table_uiprefs\\|history\\)'\\].*/$cfg\\['Servers'\\]\\[$i\\]\\['\\1'\\] = false;/g\" /etc/phpmyadmin/config.inc.php\n#   Setup MySQL, bind on all addresses.\nRUN sed -i -e 's/^bind-address\\s*=\\s*127.0.0.1/#bind-address = 127.0.0.1/' /etc/mysql/my.cnf\nRUN /etc/init.d/mysql start \\\n && mysql -u root -e \"GRANT ALL PRIVILEGES ON *.* TO drupal@localhost IDENTIFIED BY 'drupal'\"\n#   Setup SSH.\nRUN echo 'root:root' | chpasswd\nRUN useradd -ms /bin/bash drupal\nRUN echo 'drupal:drupal' | chpasswd\nRUN sed -i 's/^#PermitRootLogin.\\+/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN mkdir /var/run/sshd \\\n && chmod 0755 /var/run/sshd\nRUN mkdir -p /root/.ssh/ \\\n && touch /root/.ssh/authorized_keys\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   Setup Supervisor.\nRUN echo '[program:apache2]\\ncommand=/bin/bash -c \"source /etc/apache2/envvars \\\n && exec /usr/sbin/apache2 -DFOREGROUND\"\\nautorestart=true\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:mysql]\\ncommand=/usr/bin/pidproxy /var/run/mysqld/mysqld.pid /usr/sbin/mysqld\\nautorestart=true\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:sshd]\\ncommand=/usr/sbin/sshd -D\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:blackfire]\\ncommand=/usr/local/bin/launch-blackfire\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:cron]\\ncommand=cron -f\\nautorestart=false \\n\\n' >> /etc/supervisor/supervisord.conf\n#   Setup XDebug.\nRUN echo \"xdebug.max_nesting_level = 300\" >> /etc/php/7.0/apache2/conf.d/20-xdebug.ini\nRUN echo \"xdebug.max_nesting_level = 300\" >> /etc/php/7.0/cli/conf.d/20-xdebug.ini\n#   Install Composer.\nRUN curl -sS https://getcomposer.org/installer | php\nRUN mv composer.phar /usr/local/bin/composer\n#   Install Drush 8.\nRUN composer global require drush/drush:8.*\nRUN composer global update\n#   Unfortunately, adding the composer vendor dir to the PATH doesn't seem to work. So:\nRUN ln -s /root/.composer/vendor/bin/drush /usr/local/bin/drush\n#   Install Drupal Console. There are no stable releases yet, so set the minimum \n#   stability to dev.\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\nRUN drupal init\n#   Install Drupal.\nRUN rm -rf /var/www\nRUN cd /var \\\n && drush dl drupal-$DRUPAL_VERSION \\\n && mv /var/drupal* /var/www\nRUN mkdir -p /var/www/sites/default/files \\\n && chmod a+w /var/www/sites/default -R \\\n && mkdir /var/www/sites/all/modules/contrib -p \\\n && mkdir /var/www/sites/all/modules/custom \\\n && mkdir /var/www/sites/all/themes/contrib -p \\\n && mkdir /var/www/sites/all/themes/custom \\\n && cp /var/www/sites/default/default.settings.php /var/www/sites/default/settings.php \\\n && cp /var/www/sites/default/default.services.yml /var/www/sites/default/services.yml \\\n && chmod 0664 /var/www/sites/default/settings.php \\\n && chmod 0664 /var/www/sites/default/services.yml \\\n && chown -R www-data:www-data /var/www/\nRUN /etc/init.d/mysql start \\\n && cd /var/www \\\n && drush si -y standard --db-url=mysql://drupal:drupal@localhost/drupal --account-pass=admin \\\n && drush dl admin_menu devel \\\n && composer install --dev \\\n && drush en -y simpletest devel \\\n && drush en -y bartik\nRUN /etc/init.d/mysql start \\\n && cd /var/www \\\n && drush cset system.theme default 'bartik' -y\n#   Allow Kernel and Browser tests to be run via PHPUnit.\t\nRUN sed -i 's/name=\"SIMPLETEST_DB\" value=\"\"/name=\"SIMPLETEST_DB\" value=\"sqlite:\\/\\/localhost\\/tmp\\/db.sqlite\"/' /var/www/core/phpunit.xml.dist\nEXPOSE 80/tcp 3306/tcp 22/tcp 443/tcp\nCMD exec supervisord -n\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch\nMAINTAINER Wouter Admiraal <wad@wadmiraal.net>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DRUPAL_VERSION=\"8.6.2\"\n#  Install packages.\nRUN apt-get update\nRUN apt-get install vim git apache2 php-cli php-mysql php-gd php-curl php-xdebug php-bcmath php7.0-sqlite3 libapache2-mod-php curl mysql-server mysql-client openssh-server phpmyadmin wget unzip cron gnupg supervisor -y\nRUN apt-get clean\n#  Setup PHP.\nRUN sed -i 's/display_errors = Off/display_errors = On/' /etc/php/7.0/apache2/php.ini\nRUN sed -i 's/display_errors = Off/display_errors = On/' /etc/php/7.0/cli/php.ini\n#  Setup Blackfire.\n#  Get the sources and install the Debian packages.\n#  We create our own start script. If the environment variables are set, we\n#  simply start Blackfire in the foreground. If not, we create a dummy daemon\n#  script that simply loops indefinitely. This is to trick Supervisor into\n#  thinking the program is running and avoid unnecessary error messages.\nRUN wget -O - https://packagecloud.io/gpg.key | apt-key add -\nRUN echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list\nRUN apt-get update\nRUN apt-get install blackfire-agent blackfire-php -y\nRUN echo '#!/bin/bash\\nif [[ -z \"$BLACKFIREIO_SERVER_ID\" || -z \"$BLACKFIREIO_SERVER_TOKEN\" ]]; then\\n while true; do\\n sleep 1000\\n done\\nelse\\n /usr/bin/blackfire-agent -server-id=\"$BLACKFIREIO_SERVER_ID\" -server-token=\"$BLACKFIREIO_SERVER_TOKEN\"\\nfi\\n' > /usr/local/bin/launch-blackfire\nRUN chmod +x /usr/local/bin/launch-blackfire\nRUN mkdir -p /var/run/blackfire\n#  Setup Apache.\n#  In order to run our Simpletest tests, we need to make Apache\n#  listen on the same port as the one we forwarded. Because we use\n#  8080 by default, we set it up for that port.\nRUN sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf\nRUN sed -i 's/DocumentRoot \\/var\\/www\\/html/DocumentRoot \\/var\\/www/' /etc/apache2/sites-available/000-default.conf\nRUN sed -i 's/DocumentRoot \\/var\\/www\\/html/DocumentRoot \\/var\\/www/' /etc/apache2/sites-available/default-ssl.conf\nRUN echo \"Listen 8080\" >> /etc/apache2/ports.conf\nRUN echo \"Listen 8081\" >> /etc/apache2/ports.conf\nRUN echo \"Listen 8443\" >> /etc/apache2/ports.conf\nRUN sed -i 's/VirtualHost \\*:80/VirtualHost \\*:\\*/' /etc/apache2/sites-available/000-default.conf\nRUN sed -i 's/VirtualHost __default__:443/VirtualHost _default_:443 _default_:8443/' /etc/apache2/sites-available/default-ssl.conf\nRUN a2enmod rewrite\nRUN a2enmod ssl\nRUN a2ensite default-ssl.conf\n#  Setup PHPMyAdmin\nRUN echo \"\\n# Include PHPMyAdmin configuration\\nInclude /etc/phpmyadmin/apache.conf\\n\" >> /etc/apache2/apache2.conf\nRUN sed -i -e \"s/\\/\\/ $cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\]/$cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\]/g\" /etc/phpmyadmin/config.inc.php\nRUN sed -i -e \"s/$cfg\\['Servers'\\]\\[$i\\]\\['\\(table_uiprefs\\|history\\)'\\].*/$cfg\\['Servers'\\]\\[$i\\]\\['\\1'\\] = false;/g\" /etc/phpmyadmin/config.inc.php\n#  Setup MySQL, bind on all addresses.\nRUN sed -i -e 's/^bind-address\\s*=\\s*127.0.0.1/#bind-address = 127.0.0.1/' /etc/mysql/my.cnf\nRUN /etc/init.d/mysql start \\\n && mysql -u root -e \"GRANT ALL PRIVILEGES ON *.* TO drupal@localhost IDENTIFIED BY 'drupal'\"\n#  Setup SSH.\nRUN echo 'root:root' | chpasswd\nRUN useradd -ms /bin/bash drupal\nRUN echo 'drupal:drupal' | chpasswd\nRUN sed -i 's/^#PermitRootLogin.\\+/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN mkdir /var/run/sshd \\\n && chmod 0755 /var/run/sshd\nRUN mkdir -p /root/.ssh/ \\\n && touch /root/.ssh/authorized_keys\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#  Setup Supervisor.\nRUN echo '[program:apache2]\\ncommand=/bin/bash -c \"source /etc/apache2/envvars \\\n && exec /usr/sbin/apache2 -DFOREGROUND\"\\nautorestart=true\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:mysql]\\ncommand=/usr/bin/pidproxy /var/run/mysqld/mysqld.pid /usr/sbin/mysqld\\nautorestart=true\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:sshd]\\ncommand=/usr/sbin/sshd -D\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:blackfire]\\ncommand=/usr/local/bin/launch-blackfire\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:cron]\\ncommand=cron -f\\nautorestart=false \\n\\n' >> /etc/supervisor/supervisord.conf\n#  Setup XDebug.\nRUN echo \"xdebug.max_nesting_level = 300\" >> /etc/php/7.0/apache2/conf.d/20-xdebug.ini\nRUN echo \"xdebug.max_nesting_level = 300\" >> /etc/php/7.0/cli/conf.d/20-xdebug.ini\n#  Install Composer.\nRUN curl -sS https://getcomposer.org/installer | php\nRUN mv composer.phar /usr/local/bin/composer\n#  Install Drush 8.\nRUN composer global require drush/drush:8.*\nRUN composer global update\n#  Unfortunately, adding the composer vendor dir to the PATH doesn't seem to work. So:\nRUN ln -s /root/.composer/vendor/bin/drush /usr/local/bin/drush\n#  Install Drupal Console. There are no stable releases yet, so set the minimum \n#  stability to dev.\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\nRUN drupal init\n#  Install Drupal.\nRUN rm -rf /var/www\nRUN cd /var \\\n && drush dl drupal-$DRUPAL_VERSION \\\n && mv /var/drupal* /var/www\nRUN mkdir -p /var/www/sites/default/files \\\n && chmod a+w /var/www/sites/default -R \\\n && mkdir /var/www/sites/all/modules/contrib -p \\\n && mkdir /var/www/sites/all/modules/custom \\\n && mkdir /var/www/sites/all/themes/contrib -p \\\n && mkdir /var/www/sites/all/themes/custom \\\n && cp /var/www/sites/default/default.settings.php /var/www/sites/default/settings.php \\\n && cp /var/www/sites/default/default.services.yml /var/www/sites/default/services.yml \\\n && chmod 0664 /var/www/sites/default/settings.php \\\n && chmod 0664 /var/www/sites/default/services.yml \\\n && chown -R www-data:www-data /var/www/\nRUN /etc/init.d/mysql start \\\n && cd /var/www \\\n && drush si -y standard --db-url=mysql://drupal:drupal@localhost/drupal --account-pass=admin \\\n && drush dl admin_menu devel \\\n && composer install --dev \\\n && drush en -y simpletest devel \\\n && drush en -y bartik\nRUN /etc/init.d/mysql start \\\n && cd /var/www \\\n && drush cset system.theme default 'bartik' -y\n#  Allow Kernel and Browser tests to be run via PHPUnit.\t\nRUN sed -i 's/name=\"SIMPLETEST_DB\" value=\"\"/name=\"SIMPLETEST_DB\" value=\"sqlite:\\/\\/localhost\\/tmp\\/db.sqlite\"/' /var/www/core/phpunit.xml.dist\nEXPOSE 80/tcp 3306/tcp 22/tcp 443/tcp\nCMD exec supervisord -n\n","injectedSmells":[],"originalDockerfileHash":"19e461654af2491428aa3a554add550e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch\nMAINTAINER Wouter Admiraal <wad@wadmiraal.net>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DRUPAL_VERSION=\"8.6.2\"\n#   Install packages.\nRUN apt-get update\nRUN apt-get install vim git apache2 php-cli php-mysql php-gd php-curl php-xdebug php-bcmath php7.0-sqlite3 libapache2-mod-php curl mysql-server mysql-client openssh-server phpmyadmin wget unzip cron gnupg supervisor -y\nRUN apt-get clean\n#   Setup PHP.\nRUN sed -i 's/display_errors = Off/display_errors = On/' /etc/php/7.0/apache2/php.ini\nRUN sed -i 's/display_errors = Off/display_errors = On/' /etc/php/7.0/cli/php.ini\n#   Setup Blackfire.\n#   Get the sources and install the Debian packages.\n#   We create our own start script. If the environment variables are set, we\n#   simply start Blackfire in the foreground. If not, we create a dummy daemon\n#   script that simply loops indefinitely. This is to trick Supervisor into\n#   thinking the program is running and avoid unnecessary error messages.\nRUN wget -O - https://packagecloud.io/gpg.key | apt-key add -\nRUN echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list\nRUN apt-get update\nRUN apt-get install blackfire-agent blackfire-php -y\nRUN echo '#!/bin/bash\\nif [[ -z \"$BLACKFIREIO_SERVER_ID\" || -z \"$BLACKFIREIO_SERVER_TOKEN\" ]]; then\\n while true; do\\n sleep 1000\\n done\\nelse\\n /usr/bin/blackfire-agent -server-id=\"$BLACKFIREIO_SERVER_ID\" -server-token=\"$BLACKFIREIO_SERVER_TOKEN\"\\nfi\\n' > /usr/local/bin/launch-blackfire\nRUN chmod +x /usr/local/bin/launch-blackfire\nRUN mkdir -p /var/run/blackfire\n#   Setup Apache.\n#   In order to run our Simpletest tests, we need to make Apache\n#   listen on the same port as the one we forwarded. Because we use\n#   8080 by default, we set it up for that port.\nRUN sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf\nRUN sed -i 's/DocumentRoot \\/var\\/www\\/html/DocumentRoot \\/var\\/www/' /etc/apache2/sites-available/000-default.conf\nRUN sed -i 's/DocumentRoot \\/var\\/www\\/html/DocumentRoot \\/var\\/www/' /etc/apache2/sites-available/default-ssl.conf\nRUN echo \"Listen 8080\" >> /etc/apache2/ports.conf\nRUN echo \"Listen 8081\" >> /etc/apache2/ports.conf\nRUN echo \"Listen 8443\" >> /etc/apache2/ports.conf\nRUN sed -i 's/VirtualHost \\*:80/VirtualHost \\*:\\*/' /etc/apache2/sites-available/000-default.conf\nRUN sed -i 's/VirtualHost __default__:443/VirtualHost _default_:443 _default_:8443/' /etc/apache2/sites-available/default-ssl.conf\nRUN a2enmod rewrite\nRUN a2enmod ssl\nRUN a2ensite default-ssl.conf\n#   Setup PHPMyAdmin\nRUN echo \"\\n# Include PHPMyAdmin configuration\\nInclude /etc/phpmyadmin/apache.conf\\n\" >> /etc/apache2/apache2.conf\nRUN sed -i -e \"s/\\/\\/ $cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\]/$cfg\\['Servers'\\]\\[$i\\]\\['AllowNoPassword'\\]/g\" /etc/phpmyadmin/config.inc.php\nRUN sed -i -e \"s/$cfg\\['Servers'\\]\\[$i\\]\\['\\(table_uiprefs\\|history\\)'\\].*/$cfg\\['Servers'\\]\\[$i\\]\\['\\1'\\] = false;/g\" /etc/phpmyadmin/config.inc.php\n#   Setup MySQL, bind on all addresses.\nRUN sed -i -e 's/^bind-address\\s*=\\s*127.0.0.1/#bind-address = 127.0.0.1/' /etc/mysql/my.cnf\nRUN /etc/init.d/mysql start \\\n && mysql -u root -e \"GRANT ALL PRIVILEGES ON *.* TO drupal@localhost IDENTIFIED BY 'drupal'\"\n#   Setup SSH.\nRUN echo 'root:root' | chpasswd\nRUN useradd -ms /bin/bash drupal\nRUN echo 'drupal:drupal' | chpasswd\nRUN sed -i 's/^#PermitRootLogin.\\+/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN mkdir /var/run/sshd \\\n && chmod 0755 /var/run/sshd\nRUN mkdir -p /root/.ssh/ \\\n && touch /root/.ssh/authorized_keys\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   Setup Supervisor.\nRUN echo '[program:apache2]\\ncommand=/bin/bash -c \"source /etc/apache2/envvars \\\n && exec /usr/sbin/apache2 -DFOREGROUND\"\\nautorestart=true\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:mysql]\\ncommand=/usr/bin/pidproxy /var/run/mysqld/mysqld.pid /usr/sbin/mysqld\\nautorestart=true\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:sshd]\\ncommand=/usr/sbin/sshd -D\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:blackfire]\\ncommand=/usr/local/bin/launch-blackfire\\n\\n' >> /etc/supervisor/supervisord.conf\nRUN echo '[program:cron]\\ncommand=cron -f\\nautorestart=false \\n\\n' >> /etc/supervisor/supervisord.conf\n#   Setup XDebug.\nRUN echo \"xdebug.max_nesting_level = 300\" >> /etc/php/7.0/apache2/conf.d/20-xdebug.ini\nRUN echo \"xdebug.max_nesting_level = 300\" >> /etc/php/7.0/cli/conf.d/20-xdebug.ini\n#   Install Composer.\nRUN curl -sS https://getcomposer.org/installer | php\nRUN mv composer.phar /usr/local/bin/composer\n#   Install Drush 8.\nRUN composer global require drush/drush:8.*\nRUN composer global update\n#   Unfortunately, adding the composer vendor dir to the PATH doesn't seem to work. So:\nRUN ln -s /root/.composer/vendor/bin/drush /usr/local/bin/drush\n#   Install Drupal Console. There are no stable releases yet, so set the minimum \n#   stability to dev.\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\nRUN drupal init\n#   Install Drupal.\nRUN rm -rf /var/www\nRUN cd /var \\\n && drush dl drupal-$DRUPAL_VERSION \\\n && mv /var/drupal* /var/www\nRUN mkdir -p /var/www/sites/default/files \\\n && chmod a+w /var/www/sites/default -R \\\n && mkdir /var/www/sites/all/modules/contrib -p \\\n && mkdir /var/www/sites/all/modules/custom \\\n && mkdir /var/www/sites/all/themes/contrib -p \\\n && mkdir /var/www/sites/all/themes/custom \\\n && cp /var/www/sites/default/default.settings.php /var/www/sites/default/settings.php \\\n && cp /var/www/sites/default/default.services.yml /var/www/sites/default/services.yml \\\n && chmod 0664 /var/www/sites/default/settings.php \\\n && chmod 0664 /var/www/sites/default/services.yml \\\n && chown -R www-data:www-data /var/www/\nRUN /etc/init.d/mysql start \\\n && cd /var/www \\\n && drush si -y standard --db-url=mysql://drupal:drupal@localhost/drupal --account-pass=admin \\\n && drush dl admin_menu devel \\\n && composer install --dev \\\n && drush en -y simpletest devel \\\n && drush en -y bartik\nRUN /etc/init.d/mysql start \\\n && cd /var/www \\\n && drush cset system.theme default 'bartik' -y\n#   Allow Kernel and Browser tests to be run via PHPUnit.\t\nRUN sed -i 's/name=\"SIMPLETEST_DB\" value=\"\"/name=\"SIMPLETEST_DB\" value=\"sqlite:\\/\\/localhost\\/tmp\\/db.sqlite\"/' /var/www/core/phpunit.xml.dist\nEXPOSE 80/tcp 3306/tcp 22/tcp 443/tcp\nCMD exec supervisord -n\n","originalDockerfileUglifiedHash":"847f4aa814e36bb562ec1b579686a6f2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/528f8acc9d59eeb9c6752fb71a95088f26c2fe9a.dockerfile"}