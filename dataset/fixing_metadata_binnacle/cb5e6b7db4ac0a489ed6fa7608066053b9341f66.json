{"seed":3514281502,"processedDockerfileHash":"19631890f7e3b262a08cf581080ad58e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (c) 2015 Jimmy Cuadra\n#\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n#   of this software and associated documentation files (the \"Software\"), to deal\n#   in the Software without restriction, including without limitation the rights\n#   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the Software is\n#   furnished to do so, subject to the following conditions:\n#\n#   The above copyright notice and this permission notice shall be included in\n#   all copies or substantial portions of the Software.\n#\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n#   THE SOFTWARE.\n#   This Dockerfile is an mashup of the dockerfiles written by Jimmy Cuadra\n#   (https://github.com/jimmycuadra/docker-rust) and by Andrew Dunham\n#   (https://github.com/andrew-d/docker-osxcross).\n#   Depend on Unbuntu 17.04 to avoid a bug around compiling the compilter_rt\n#   See: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=819072\nFROM ubuntu:17.04\nENV USER=\"root\"\n#   Install (most) dependencies.\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends build-essential ca-certificates curl git openssh-client libssl-dev pkg-config autotools-dev automake cmake libfuse-dev clang python file llvm-3.8 llvm-3.8-dev clang-3.8\n#   Install Rust\nENV RUST_VERSION=\"1.19.0\"\nRUN curl -sO https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init \\\n && chmod +x rustup-init \\\n && ./rustup-init -y --default-toolchain $RUST_VERSION --no-modify-path\nENV PATH=\"$PATH:/root/.cargo/bin\"\n#   Install OSXCROSS\n#\n#   NOTE: The Docker Hub's build machines run varying types of CPUs, so an image\n#   built with `-march=native` on one of those may not run on every machine - I\n#   ran into this problem when the images wouldn't run on my 2013-era Macbook\n#   Pro. As such, we remove this flag entirely.\nENV OSXCROSS_SDK_VERSION=\"10.11\"\nENV OSX_VERSION_MIN=\"10.7\"\nRUN mkdir /opt/osxcross \\\n && cd /opt \\\n && git clone https://github.com/tpoechtrager/osxcross.git \\\n && cd osxcross \\\n && git checkout 474f359d2f27ff68916a064f0138c9188c63db7d \\\n && sed -i -e 's|-march=native||g' ./build_clang.sh ./wrapper/build.sh \\\n && ./tools/get_dependencies.sh \\\n && curl -L -o ./tarballs/MacOSX${OSXCROSS_SDK_VERSION}.sdk.tar.xz https://s3.amazonaws.com/andrew-osx-sdks/MacOSX${OSXCROSS_SDK_VERSION}.sdk.tar.xz \\\n && yes | PORTABLE=true ./build.sh \\\n && ./build_compiler_rt.sh\nENV PATH=\"$PATH:/opt/osxcross/target/bin\"\n#   Install Rust toolchain for OSX\nRUN rustup target add x86_64-apple-darwin\nCOPY config /root/.cargo\n#   Make sure Weld uses the correct version of LLVM.\nRUN ln -s /usr/bin/llvm-config-3.8 /usr/local/bin/llvm-config\n#   Cleanup\nRUN DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y curl \\\n && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y \\\n && rm -rf rustup-init /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Create the work directory\nRUN mkdir /source\nWORKDIR /source\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) 2015 Jimmy Cuadra\n#\n#  Permission is hereby granted, free of charge, to any person obtaining a copy\n#  of this software and associated documentation files (the \"Software\"), to deal\n#  in the Software without restriction, including without limitation the rights\n#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#  copies of the Software, and to permit persons to whom the Software is\n#  furnished to do so, subject to the following conditions:\n#\n#  The above copyright notice and this permission notice shall be included in\n#  all copies or substantial portions of the Software.\n#\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n#  THE SOFTWARE.\n#  This Dockerfile is an mashup of the dockerfiles written by Jimmy Cuadra\n#  (https://github.com/jimmycuadra/docker-rust) and by Andrew Dunham\n#  (https://github.com/andrew-d/docker-osxcross).\n#  Depend on Unbuntu 17.04 to avoid a bug around compiling the compilter_rt\n#  See: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=819072\nFROM ubuntu:17.04\nENV USER=\"root\"\n#  Install (most) dependencies.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends build-essential ca-certificates curl git openssh-client libssl-dev pkg-config autotools-dev automake cmake libfuse-dev clang python file llvm-3.8 llvm-3.8-dev clang-3.8\n#  Install Rust\nENV RUST_VERSION=\"1.19.0\"\nRUN curl -sO https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init \\\n && chmod +x rustup-init \\\n && ./rustup-init -y --default-toolchain $RUST_VERSION --no-modify-path\nENV PATH=\"$PATH:/root/.cargo/bin\"\n#  Install OSXCROSS\n#\n#  NOTE: The Docker Hub's build machines run varying types of CPUs, so an image\n#  built with `-march=native` on one of those may not run on every machine - I\n#  ran into this problem when the images wouldn't run on my 2013-era Macbook\n#  Pro. As such, we remove this flag entirely.\nENV OSXCROSS_SDK_VERSION=\"10.11\"\nENV OSX_VERSION_MIN=\"10.7\"\nRUN mkdir /opt/osxcross \\\n && cd /opt \\\n && git clone https://github.com/tpoechtrager/osxcross.git \\\n && cd osxcross \\\n && git checkout 474f359d2f27ff68916a064f0138c9188c63db7d \\\n && sed -i -e 's|-march=native||g' ./build_clang.sh ./wrapper/build.sh \\\n && ./tools/get_dependencies.sh \\\n && curl -L -o ./tarballs/MacOSX${OSXCROSS_SDK_VERSION}.sdk.tar.xz https://s3.amazonaws.com/andrew-osx-sdks/MacOSX${OSXCROSS_SDK_VERSION}.sdk.tar.xz \\\n && yes | PORTABLE=true ./build.sh \\\n && ./build_compiler_rt.sh\nENV PATH=\"$PATH:/opt/osxcross/target/bin\"\n#  Install Rust toolchain for OSX\nRUN rustup target add x86_64-apple-darwin\nCOPY config /root/.cargo\n#  Make sure Weld uses the correct version of LLVM.\nRUN ln -s /usr/bin/llvm-config-3.8 /usr/local/bin/llvm-config\n#  Cleanup\nRUN DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y curl \\\n && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y \\\n && rm -rf rustup-init /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Create the work directory\nRUN mkdir /source\nWORKDIR /source\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"a65d0291d089e77f9b713449d177ae1e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) 2015 Jimmy Cuadra\n#\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n#   of this software and associated documentation files (the \"Software\"), to deal\n#   in the Software without restriction, including without limitation the rights\n#   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the Software is\n#   furnished to do so, subject to the following conditions:\n#\n#   The above copyright notice and this permission notice shall be included in\n#   all copies or substantial portions of the Software.\n#\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n#   THE SOFTWARE.\n#   This Dockerfile is an mashup of the dockerfiles written by Jimmy Cuadra\n#   (https://github.com/jimmycuadra/docker-rust) and by Andrew Dunham\n#   (https://github.com/andrew-d/docker-osxcross).\n#   Depend on Unbuntu 17.04 to avoid a bug around compiling the compilter_rt\n#   See: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=819072\nFROM ubuntu:17.04\nENV USER=\"root\"\n#   Install (most) dependencies.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends build-essential ca-certificates curl git openssh-client libssl-dev pkg-config autotools-dev automake cmake libfuse-dev clang python file llvm-3.8 llvm-3.8-dev clang-3.8\n#   Install Rust\nENV RUST_VERSION=\"1.19.0\"\nRUN curl -sO https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init \\\n && chmod +x rustup-init \\\n && ./rustup-init -y --default-toolchain $RUST_VERSION --no-modify-path\nENV PATH=\"$PATH:/root/.cargo/bin\"\n#   Install OSXCROSS\n#\n#   NOTE: The Docker Hub's build machines run varying types of CPUs, so an image\n#   built with `-march=native` on one of those may not run on every machine - I\n#   ran into this problem when the images wouldn't run on my 2013-era Macbook\n#   Pro. As such, we remove this flag entirely.\nENV OSXCROSS_SDK_VERSION=\"10.11\"\nENV OSX_VERSION_MIN=\"10.7\"\nRUN mkdir /opt/osxcross \\\n && cd /opt \\\n && git clone https://github.com/tpoechtrager/osxcross.git \\\n && cd osxcross \\\n && git checkout 474f359d2f27ff68916a064f0138c9188c63db7d \\\n && sed -i -e 's|-march=native||g' ./build_clang.sh ./wrapper/build.sh \\\n && ./tools/get_dependencies.sh \\\n && curl -L -o ./tarballs/MacOSX${OSXCROSS_SDK_VERSION}.sdk.tar.xz https://s3.amazonaws.com/andrew-osx-sdks/MacOSX${OSXCROSS_SDK_VERSION}.sdk.tar.xz \\\n && yes | PORTABLE=true ./build.sh \\\n && ./build_compiler_rt.sh\nENV PATH=\"$PATH:/opt/osxcross/target/bin\"\n#   Install Rust toolchain for OSX\nRUN rustup target add x86_64-apple-darwin\nCOPY config /root/.cargo\n#   Make sure Weld uses the correct version of LLVM.\nRUN ln -s /usr/bin/llvm-config-3.8 /usr/local/bin/llvm-config\n#   Cleanup\nRUN DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y curl \\\n && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y \\\n && rm -rf rustup-init /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Create the work directory\nRUN mkdir /source\nWORKDIR /source\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"bd0f17436251b587146f08c3d9d32a8e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cb5e6b7db4ac0a489ed6fa7608066053b9341f66.dockerfile"}