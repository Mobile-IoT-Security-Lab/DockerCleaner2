{"seed":3956968824,"processedDockerfileHash":"36a5a5ca9ec60231cb45886ed7491a63","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This is an auto generated Dockerfile for ros:nightly\n#   generated from docker_images_ros2/nightly/create_ros_image.Dockerfile.em\nFROM ubuntu:bionic\n#   setup timezone\nRUN echo 'Etc/UTC' > /etc/timezone \\\n && ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends tzdata=2022g-0ubuntu0.18.04 -q -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   install packages\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends bash-completion=1:2.8-1ubuntu1 dirmngr=2.2.4-1ubuntu1.6 gnupg2=2.2.4-1ubuntu1.6 lsb-release=9.20170808ubuntu1 python3-pip=9.0.1-2.3~ubuntu1.18.04.8 wget=1.19.4-1ubuntu2.2 -q -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   setup ros2 keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n#   setup sources.list\nRUN echo \"deb http://packages.ros.org/ros2-testing/ubuntu `lsb_release -sc ` main\" > /etc/apt/sources.list.d/ros2-testing.list\n#   install bootstrap tools\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends git=1:2.17.1-1ubuntu0.17 python3-rosdep python3-vcstool -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   setup environment\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\n#   bootstrap rosdep\nRUN rosdep init \\\n && rosdep update\n#   install python packages\nRUN pip3 install -U argcomplete colcon-common-extensions flake8 flake8-blind-except flake8-builtins flake8-class-newline flake8-comprehensions flake8-deprecated flake8-docstrings flake8-import-order flake8-quotes pytest-repeat pytest-rerunfailures\n#   FIXME This is a workaround for pytest not found causing builds to fail\n#   Following RUN statements tests for regression of https://github.com/ros2/ros2/issues/722\nRUN pip3 freeze | grep pytest \\\n && python3 -m pytest --version\n#   install ros2 packages\nENV ROS_DISTRO=\"dashing\"\nRUN mkdir -p /opt/ros/$ROS_DISTRO\nARG ROS2_BINARY_URL=https://ci.ros2.org/view/packaging/job/packaging_linux/lastSuccessfulBuild/artifact/ws/ros2-package-linux-x86_64.tar.bz2\nRUN wget -q $ROS2_BINARY_URL -O - | tar -xj --strip-components=1 -C /opt/ros/$ROS_DISTRO\n#   install setup files\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ros-$ROS_DISTRO-ros-workspace -q -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   add custom rosdep rule files\nCOPY prereqs.yaml /etc/ros/rosdep/\nRUN echo \"yaml file:///etc/ros/rosdep/prereqs.yaml\" | cat - /etc/ros/rosdep/sources.list.d/20-default.list > temp \\\n && mv temp /etc/ros/rosdep/sources.list.d/20-default.list\nRUN rosdep update\n#   install dependencies\nRUN . /opt/ros/$ROS_DISTRO/setup.sh \\\n && : \\\n && rosdep install -y --from-paths /opt/ros/$ROS_DISTRO/share --ignore-src --skip-keys \" libopensplice69 rti-connext-dds-5.3.1\" \\\n && rm -rf /var/lib/apt/lists/*\n#   FIXME Remove this once rosdep detects ROS 2 packages https://github.com/ros-infrastructure/rosdep/issues/660\n#   ignore installed rosdep keys\nENV ROS_PACKAGE_PATH=\"/opt/ros/$ROS_DISTRO/share\"\n#   FIXME Remove this once ament_export_interfaces respects COLCON_CURRENT_PREFIX https://github.com/ament/ament_cmake/issues/173\n#  Workaround hard coded paths in nightly tarball setup scripts\nARG UPSTREAM_CI_WS=/home/jenkins-agent/workspace/packaging_linux/ws\nRUN mkdir -p $UPSTREAM_CI_WS \\\n && ln -s /opt/ros/$ROS_DISTRO $UPSTREAM_CI_WS/install\n#   setup entrypoint\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This is an auto generated Dockerfile for ros:nightly\n#  generated from docker_images_ros2/nightly/create_ros_image.Dockerfile.em\nFROM ubuntu:bionic\n#  setup timezone\nRUN echo 'Etc/UTC' > /etc/timezone \\\n && ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime \\\n && apt-get update \\\n && apt-get install tzdata -q -y \\\n && rm -rf /var/lib/apt/lists/*\n#  install packages\nRUN apt-get update \\\n && apt-get install bash-completion dirmngr gnupg2 lsb-release python3-pip wget -q -y \\\n && rm -rf /var/lib/apt/lists/*\n#  setup ros2 keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n#  setup sources.list\nRUN echo \"deb http://packages.ros.org/ros2-testing/ubuntu `lsb_release -sc ` main\" > /etc/apt/sources.list.d/ros2-testing.list\n#  install bootstrap tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends git python3-rosdep python3-vcstool -y \\\n && rm -rf /var/lib/apt/lists/*\n#  setup environment\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\n#  bootstrap rosdep\nRUN rosdep init \\\n && rosdep update\n#  install python packages\nRUN pip3 install -U argcomplete colcon-common-extensions flake8 flake8-blind-except flake8-builtins flake8-class-newline flake8-comprehensions flake8-deprecated flake8-docstrings flake8-import-order flake8-quotes pytest-repeat pytest-rerunfailures\n#  FIXME This is a workaround for pytest not found causing builds to fail\n#  Following RUN statements tests for regression of https://github.com/ros2/ros2/issues/722\nRUN pip3 freeze | grep pytest \\\n && python3 -m pytest --version\n#  install ros2 packages\nENV ROS_DISTRO=\"dashing\"\nRUN mkdir -p /opt/ros/$ROS_DISTRO\nARG ROS2_BINARY_URL=https://ci.ros2.org/view/packaging/job/packaging_linux/lastSuccessfulBuild/artifact/ws/ros2-package-linux-x86_64.tar.bz2\nRUN wget -q $ROS2_BINARY_URL -O - | tar -xj --strip-components=1 -C /opt/ros/$ROS_DISTRO\n#  install setup files\nRUN apt-get update \\\n && apt-get install ros-$ROS_DISTRO-ros-workspace -q -y \\\n && rm -rf /var/lib/apt/lists/*\n#  add custom rosdep rule files\nCOPY prereqs.yaml /etc/ros/rosdep/\nRUN echo \"yaml file:///etc/ros/rosdep/prereqs.yaml\" | cat - /etc/ros/rosdep/sources.list.d/20-default.list > temp \\\n && mv temp /etc/ros/rosdep/sources.list.d/20-default.list\nRUN rosdep update\n#  install dependencies\nRUN . /opt/ros/$ROS_DISTRO/setup.sh \\\n && apt-get update \\\n && rosdep install -y --from-paths /opt/ros/$ROS_DISTRO/share --ignore-src --skip-keys \" libopensplice69 rti-connext-dds-5.3.1\" \\\n && rm -rf /var/lib/apt/lists/*\n#  FIXME Remove this once rosdep detects ROS 2 packages https://github.com/ros-infrastructure/rosdep/issues/660\n#  ignore installed rosdep keys\nENV ROS_PACKAGE_PATH=\"/opt/ros/$ROS_DISTRO/share\"\n#  FIXME Remove this once ament_export_interfaces respects COLCON_CURRENT_PREFIX https://github.com/ament/ament_cmake/issues/173\n# Workaround hard coded paths in nightly tarball setup scripts\nARG UPSTREAM_CI_WS=/home/jenkins-agent/workspace/packaging_linux/ws\nRUN mkdir -p $UPSTREAM_CI_WS \\\n && ln -s /opt/ros/$ROS_DISTRO $UPSTREAM_CI_WS/install\n#  setup entrypoint\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"58fe4cc7f63f4935d048ed52ebda8d78","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This is an auto generated Dockerfile for ros:nightly\n#   generated from docker_images_ros2/nightly/create_ros_image.Dockerfile.em\nFROM ubuntu:bionic\n#   setup timezone\nRUN echo 'Etc/UTC' > /etc/timezone \\\n && ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime \\\n && apt-get update \\\n && apt-get install tzdata -q -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install packages\nRUN apt-get update \\\n && apt-get install bash-completion dirmngr gnupg2 lsb-release python3-pip wget -q -y \\\n && rm -rf /var/lib/apt/lists/*\n#   setup ros2 keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n#   setup sources.list\nRUN echo \"deb http://packages.ros.org/ros2-testing/ubuntu `lsb_release -sc ` main\" > /etc/apt/sources.list.d/ros2-testing.list\n#   install bootstrap tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends git python3-rosdep python3-vcstool -y \\\n && rm -rf /var/lib/apt/lists/*\n#   setup environment\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\n#   bootstrap rosdep\nRUN rosdep init \\\n && rosdep update\n#   install python packages\nRUN pip3 install -U argcomplete colcon-common-extensions flake8 flake8-blind-except flake8-builtins flake8-class-newline flake8-comprehensions flake8-deprecated flake8-docstrings flake8-import-order flake8-quotes pytest-repeat pytest-rerunfailures\n#   FIXME This is a workaround for pytest not found causing builds to fail\n#   Following RUN statements tests for regression of https://github.com/ros2/ros2/issues/722\nRUN pip3 freeze | grep pytest \\\n && python3 -m pytest --version\n#   install ros2 packages\nENV ROS_DISTRO=\"dashing\"\nRUN mkdir -p /opt/ros/$ROS_DISTRO\nARG ROS2_BINARY_URL=https://ci.ros2.org/view/packaging/job/packaging_linux/lastSuccessfulBuild/artifact/ws/ros2-package-linux-x86_64.tar.bz2\nRUN wget -q $ROS2_BINARY_URL -O - | tar -xj --strip-components=1 -C /opt/ros/$ROS_DISTRO\n#   install setup files\nRUN apt-get update \\\n && apt-get install ros-$ROS_DISTRO-ros-workspace -q -y \\\n && rm -rf /var/lib/apt/lists/*\n#   add custom rosdep rule files\nCOPY prereqs.yaml /etc/ros/rosdep/\nRUN echo \"yaml file:///etc/ros/rosdep/prereqs.yaml\" | cat - /etc/ros/rosdep/sources.list.d/20-default.list > temp \\\n && mv temp /etc/ros/rosdep/sources.list.d/20-default.list\nRUN rosdep update\n#   install dependencies\nRUN . /opt/ros/$ROS_DISTRO/setup.sh \\\n && apt-get update \\\n && rosdep install -y --from-paths /opt/ros/$ROS_DISTRO/share --ignore-src --skip-keys \" libopensplice69 rti-connext-dds-5.3.1\" \\\n && rm -rf /var/lib/apt/lists/*\n#   FIXME Remove this once rosdep detects ROS 2 packages https://github.com/ros-infrastructure/rosdep/issues/660\n#   ignore installed rosdep keys\nENV ROS_PACKAGE_PATH=\"/opt/ros/$ROS_DISTRO/share\"\n#   FIXME Remove this once ament_export_interfaces respects COLCON_CURRENT_PREFIX https://github.com/ament/ament_cmake/issues/173\n#  Workaround hard coded paths in nightly tarball setup scripts\nARG UPSTREAM_CI_WS=/home/jenkins-agent/workspace/packaging_linux/ws\nRUN mkdir -p $UPSTREAM_CI_WS \\\n && ln -s /opt/ros/$ROS_DISTRO $UPSTREAM_CI_WS/install\n#   setup entrypoint\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"b495c344ba1b5d99bfc4ff35604a4249","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/adf8525c10207169060cb6ec162181d22c17e9cc.dockerfile"}