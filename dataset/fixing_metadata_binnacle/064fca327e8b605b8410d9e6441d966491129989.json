{"seed":3349873348,"processedDockerfileHash":"6e85872a80a76efe0db2f5ae3f263053","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG EXTENSIONS=\"-DENABLE_ALL_EXT=true\"\nFROM centos:7\nARG EXTENSIONS\nWORKDIR /root\nCOPY docker.arrow.keys.txt /root/docker.arrow.keys.txt\nRUN rpm --import /root/docker.arrow.keys.txt\n#   Install most of our package dependencies here\nRUN yum makecache \\\n && yum install -y git rpm-build c-compiler make curl gcc gcc-c++ systemd-devel autoconf automake centos-release-scl epel-release zlib-devel openssl-devel postgresql-devel libcurl-devel lua-devel \\\n && yum install -y https://packages.red-data-tools.org/centos/red-data-tools-release-1.0.0-1.noarch.rpm \\\n && yum install -y libmaxminddb-devel jq libmaxminddb librdkafka-devel jansson-devel devtoolset-6 \\\n && yum install -y --enablerepo=epel arrow-devel-0.9.0 \\\n && curl -OL https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz \\\n && if [[ `sha256sum cmake-3.10.2-Linux-x86_64.tar.gz | awk '{print $1}' ` != \"7a82b46c35f4e68a0807e8dc04e779dee3f36cd42c6387fd13b5c29fe62a69ea\" ]] ; then exit 1 ; fi \\\n && (cd /usr \\\n && tar --strip-components=1 -zxf /root/cmake-3.10.2-Linux-x86_64.tar.gz ) \\\n && curl -OL https://s3-us-west-2.amazonaws.com/net-mozaws-data-us-west-2-ops-ci-artifacts/mozilla-services/lua_sandbox_extensions/external/centos7/awssdk-1.3.7-1.x86_64.rpm \\\n && if [[ `sha256sum awssdk-1.3.7-1.x86_64.rpm | awk '{print $1}' ` != \"d78b164b774848d9b6adf99b59d2651832d3cfe52bae5727fb5afeb33eb13191\" ]] ; then exit 1 ; fi \\\n && rpm -i awssdk-1.3.7-1.x86_64.rpm \\\n && curl -OL https://s3-us-west-2.amazonaws.com/net-mozaws-data-us-west-2-ops-ci-artifacts/mozilla-services/lua_sandbox_extensions/external/centos7/parquet-cpp-1.3.1-1.x86_64.rpm \\\n && if [[ `sha256sum parquet-cpp-1.3.1-1.x86_64.rpm | awk '{print $1}' ` != \"7170c4d9d4bc114053ad8e59a2eb4b18ab54580d104179f1d53602f792513374\" ]] ; then exit 1 ; fi \\\n && rpm -i parquet-cpp-1.3.1-1.x86_64.rpm \\\n && cat /etc/yum.conf | grep -v override_install_langs > /etc/yum.conf.lang \\\n && cp /etc/yum.conf.lang /etc/yum.conf \\\n && yum reinstall -y glibc-common \\\n && yum install -y stow \\\n && curl -OL https://s3-us-west-2.amazonaws.com/net-mozaws-data-us-west-2-ops-ci-artifacts/mozilla-services/lua_sandbox_extensions/external/centos7/grpc_stow.tgz \\\n && if [[ `sha256sum grpc_stow.tgz | awk '{print $1}' ` != \"65dba4a11ccc09ced4dad64ef196cab6299736a5f5e0df83fef6f1046213797b\" ]] ; then exit 1 ; fi \\\n && tar -C / -zxf grpc_stow.tgz \\\n && stow -d /usr/local/stow protobuf-3 grpc googleapis\n#   Use devtoolset-6\nENV PERL5LIB=\"PERL5LIB=/opt/rh/devtoolset-6/root//usr/lib64/perl5/vendor_perl:/opt/rh/devtoolset-6/root/usr/lib/perl5:/opt/rh/devtoolset-6/root//usr/share/perl5/vendor_perl\" \\\n    X_SCLS=\"devtoolset-6\" \\\n    PCP_DIR=\"/opt/rh/devtoolset-6/root\" \\\n    LD_LIBRARY_PATH=\"/opt/rh/devtoolset-6/root/usr/lib64:/opt/rh/devtoolset-6/root/usr/lib\" \\\n    PATH=\"/opt/rh/devtoolset-6/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n    PYTHONPATH=\"/opt/rh/devtoolset-6/root/usr/lib64/python2.7/site-packages:/opt/rh/devtoolset-6/root/usr/lib/python2.7/site-packages\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\n#   Compile and install lua_sandbox and hindsight using master branch\nRUN git clone https://github.com/mozilla-services/lua_sandbox \\\n && git clone https://github.com/mozilla-services/hindsight \\\n && mkdir -p lua_sandbox/release \\\n && cd lua_sandbox/release \\\n && cmake -DCMAKE_BUILD_TYPE=release .. \\\n && make \\\n && ctest \\\n && cpack -G RPM \\\n && rpm -i *.rpm \\\n && cd ../.. \\\n && mkdir -p hindsight/release \\\n && cd hindsight/release \\\n && cmake -DCMAKE_BUILD_TYPE=release .. \\\n && make \\\n && ctest \\\n && cpack -G RPM \\\n && rpm -i *.rpm\n#   Compile some additional dependencies we need for lua_sandbox_extensions that we\n#   don't have packages for.\n#\n#   cjose is required for jose, and right now the jose module requires 0.5.1\nRUN git clone https://github.com/cisco/cjose.git \\\n && cd cjose \\\n && git checkout tags/0.5.1 \\\n && autoreconf \\\n && env CFLAGS='-g -O2 -I/usr/include/ -I/usr/include -fPIC' ./configure --with-openssl=/usr --with-jansson=/usr --enable-static --disable-shared --prefix=/usr \\\n && make \\\n && make install \\\n && cp cjose.pc /usr/lib64/pkgconfig/cjose.pc \\\n && cd .. \\\n && git clone https://github.com/trink/streaming_algorithms.git \\\n && mkdir -p streaming_algorithms/release \\\n && cd streaming_algorithms/release \\\n && cmake -DCMAKE_BUILD_TYPE=release -DCPACK_GENERATOR=RPM .. \\\n && make \\\n && ctest \\\n && make packages \\\n && rpm -i luasandbox*.rpm \\\n && cd ../.. \\\n && git clone https://github.com/mozilla-services/mozilla-pipeline-schemas.git \\\n && mkdir -p mozilla-pipeline-schemas/release \\\n && cd mozilla-pipeline-schemas/release \\\n && cmake .. \\\n && make \\\n && cpack -G RPM \\\n && rpm -i *.rpm \\\n && cd ../.. \\\n && git clone https://github.com/trink/lua_date.git \\\n && mkdir -p lua_date/release \\\n && cd lua_date \\\n && git submodule init \\\n && git submodule update \\\n && cd release \\\n && cmake -DCMAKE_BUILD_TYPE=release -DCPACK_GENERATOR=RPM .. \\\n && make \\\n && ctest \\\n && make packages\n#   Add our extensions repo, build all of them, test and install the RPMs in the image\n#\n#   As a final step here as well, place the RPMs generated from some of the external\n#   dependencies in the release directory with the lua_sandbox_extensions packages\nCOPY . /root/lua_sandbox_extensions\nRUN mkdir -p lua_sandbox_extensions/release \\\n && cd lua_sandbox_extensions/release \\\n && cmake -DCMAKE_BUILD_TYPE=release -DCPACK_GENERATOR=RPM ${EXTENSIONS} .. \\\n && make \\\n && ctest -V \\\n && make packages \\\n && cp ../../lua_date/release/iana*rpm ../../lua_date/release/luasandbox*rpm . \\\n && rpm -i *.rpm \\\n && cp ../../streaming_algorithms/release/luasandbox-streaming-algorithms* . \\\n && cp ../../hindsight/release/*.rpm . \\\n && cp ../../lua_sandbox/release/*.rpm .\n#   Add a hindsight user and default RUN command\nRUN groupadd hindsight \\\n && useradd -g hindsight -s /bin/bash -m hindsight\nCMD /usr/bin/su - hindsight -c 'cd /home/hindsight \\\n && hindsight hindsight.cfg 7'\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG EXTENSIONS=\"-DENABLE_ALL_EXT=true\"\nFROM centos:7\nARG EXTENSIONS\nWORKDIR /root\nCOPY docker.arrow.keys.txt /root/docker.arrow.keys.txt\nRUN rpm --import /root/docker.arrow.keys.txt\n#  Install most of our package dependencies here\nRUN yum makecache \\\n && yum install -y git rpm-build c-compiler make curl gcc gcc-c++ systemd-devel autoconf automake centos-release-scl epel-release zlib-devel openssl-devel postgresql-devel libcurl-devel lua-devel \\\n && yum install -y https://packages.red-data-tools.org/centos/red-data-tools-release-1.0.0-1.noarch.rpm \\\n && yum install -y libmaxminddb-devel jq libmaxminddb librdkafka-devel jansson-devel devtoolset-6 \\\n && yum install -y --enablerepo=epel arrow-devel-0.9.0 \\\n && curl -OL https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz \\\n && if [[ `sha256sum cmake-3.10.2-Linux-x86_64.tar.gz | awk '{print $1}' ` != \"7a82b46c35f4e68a0807e8dc04e779dee3f36cd42c6387fd13b5c29fe62a69ea\" ]] ; then exit 1 ; fi \\\n && (cd /usr \\\n && tar --strip-components=1 -zxf /root/cmake-3.10.2-Linux-x86_64.tar.gz ) \\\n && curl -OL https://s3-us-west-2.amazonaws.com/net-mozaws-data-us-west-2-ops-ci-artifacts/mozilla-services/lua_sandbox_extensions/external/centos7/awssdk-1.3.7-1.x86_64.rpm \\\n && if [[ `sha256sum awssdk-1.3.7-1.x86_64.rpm | awk '{print $1}' ` != \"d78b164b774848d9b6adf99b59d2651832d3cfe52bae5727fb5afeb33eb13191\" ]] ; then exit 1 ; fi \\\n && rpm -i awssdk-1.3.7-1.x86_64.rpm \\\n && curl -OL https://s3-us-west-2.amazonaws.com/net-mozaws-data-us-west-2-ops-ci-artifacts/mozilla-services/lua_sandbox_extensions/external/centos7/parquet-cpp-1.3.1-1.x86_64.rpm \\\n && if [[ `sha256sum parquet-cpp-1.3.1-1.x86_64.rpm | awk '{print $1}' ` != \"7170c4d9d4bc114053ad8e59a2eb4b18ab54580d104179f1d53602f792513374\" ]] ; then exit 1 ; fi \\\n && rpm -i parquet-cpp-1.3.1-1.x86_64.rpm \\\n && cat /etc/yum.conf | grep -v override_install_langs > /etc/yum.conf.lang \\\n && cp /etc/yum.conf.lang /etc/yum.conf \\\n && yum reinstall -y glibc-common \\\n && yum install -y stow \\\n && curl -OL https://s3-us-west-2.amazonaws.com/net-mozaws-data-us-west-2-ops-ci-artifacts/mozilla-services/lua_sandbox_extensions/external/centos7/grpc_stow.tgz \\\n && if [[ `sha256sum grpc_stow.tgz | awk '{print $1}' ` != \"65dba4a11ccc09ced4dad64ef196cab6299736a5f5e0df83fef6f1046213797b\" ]] ; then exit 1 ; fi \\\n && tar -C / -zxf grpc_stow.tgz \\\n && stow -d /usr/local/stow protobuf-3 grpc googleapis\n#  Use devtoolset-6\nENV PERL5LIB=\"PERL5LIB=/opt/rh/devtoolset-6/root//usr/lib64/perl5/vendor_perl:/opt/rh/devtoolset-6/root/usr/lib/perl5:/opt/rh/devtoolset-6/root//usr/share/perl5/vendor_perl\" \\\n    X_SCLS=\"devtoolset-6\" \\\n    PCP_DIR=\"/opt/rh/devtoolset-6/root\" \\\n    LD_LIBRARY_PATH=\"/opt/rh/devtoolset-6/root/usr/lib64:/opt/rh/devtoolset-6/root/usr/lib\" \\\n    PATH=\"/opt/rh/devtoolset-6/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n    PYTHONPATH=\"/opt/rh/devtoolset-6/root/usr/lib64/python2.7/site-packages:/opt/rh/devtoolset-6/root/usr/lib/python2.7/site-packages\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\n#  Compile and install lua_sandbox and hindsight using master branch\nRUN git clone https://github.com/mozilla-services/lua_sandbox \\\n && git clone https://github.com/mozilla-services/hindsight \\\n && mkdir -p lua_sandbox/release \\\n && cd lua_sandbox/release \\\n && cmake -DCMAKE_BUILD_TYPE=release .. \\\n && make \\\n && ctest \\\n && cpack -G RPM \\\n && rpm -i *.rpm \\\n && cd ../.. \\\n && mkdir -p hindsight/release \\\n && cd hindsight/release \\\n && cmake -DCMAKE_BUILD_TYPE=release .. \\\n && make \\\n && ctest \\\n && cpack -G RPM \\\n && rpm -i *.rpm\n#  Compile some additional dependencies we need for lua_sandbox_extensions that we\n#  don't have packages for.\n#\n#  cjose is required for jose, and right now the jose module requires 0.5.1\nRUN git clone https://github.com/cisco/cjose.git \\\n && cd cjose \\\n && git checkout tags/0.5.1 \\\n && autoreconf \\\n && env CFLAGS='-g -O2 -I/usr/include/ -I/usr/include -fPIC' ./configure --with-openssl=/usr --with-jansson=/usr --enable-static --disable-shared --prefix=/usr \\\n && make \\\n && make install \\\n && cp cjose.pc /usr/lib64/pkgconfig/cjose.pc \\\n && cd .. \\\n && git clone https://github.com/trink/streaming_algorithms.git \\\n && mkdir -p streaming_algorithms/release \\\n && cd streaming_algorithms/release \\\n && cmake -DCMAKE_BUILD_TYPE=release -DCPACK_GENERATOR=RPM .. \\\n && make \\\n && ctest \\\n && make packages \\\n && rpm -i luasandbox*.rpm \\\n && cd ../.. \\\n && git clone https://github.com/mozilla-services/mozilla-pipeline-schemas.git \\\n && mkdir -p mozilla-pipeline-schemas/release \\\n && cd mozilla-pipeline-schemas/release \\\n && cmake .. \\\n && make \\\n && cpack -G RPM \\\n && rpm -i *.rpm \\\n && cd ../.. \\\n && git clone https://github.com/trink/lua_date.git \\\n && mkdir -p lua_date/release \\\n && cd lua_date \\\n && git submodule init \\\n && git submodule update \\\n && cd release \\\n && cmake -DCMAKE_BUILD_TYPE=release -DCPACK_GENERATOR=RPM .. \\\n && make \\\n && ctest \\\n && make packages\n#  Add our extensions repo, build all of them, test and install the RPMs in the image\n#\n#  As a final step here as well, place the RPMs generated from some of the external\n#  dependencies in the release directory with the lua_sandbox_extensions packages\nADD . /root/lua_sandbox_extensions\nRUN mkdir -p lua_sandbox_extensions/release \\\n && cd lua_sandbox_extensions/release \\\n && cmake -DCMAKE_BUILD_TYPE=release -DCPACK_GENERATOR=RPM ${EXTENSIONS} .. \\\n && make \\\n && ctest -V \\\n && make packages \\\n && cp ../../lua_date/release/iana*rpm ../../lua_date/release/luasandbox*rpm . \\\n && rpm -i *.rpm \\\n && cp ../../streaming_algorithms/release/luasandbox-streaming-algorithms* . \\\n && cp ../../hindsight/release/*.rpm . \\\n && cp ../../lua_sandbox/release/*.rpm .\n#  Add a hindsight user and default RUN command\nRUN groupadd hindsight \\\n && useradd -g hindsight -s /bin/bash -m hindsight\nCMD /usr/bin/su - hindsight -c 'cd /home/hindsight \\\n && hindsight hindsight.cfg 7'\n","injectedSmells":[],"originalDockerfileHash":"306fcd1227d35d2ab949d0eac7ab02c4","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG EXTENSIONS=\"-DENABLE_ALL_EXT=true\"\nFROM centos:7\nARG EXTENSIONS\nWORKDIR /root\nCOPY docker.arrow.keys.txt /root/docker.arrow.keys.txt\nRUN rpm --import /root/docker.arrow.keys.txt\n#   Install most of our package dependencies here\nRUN yum makecache \\\n && yum install -y git rpm-build c-compiler make curl gcc gcc-c++ systemd-devel autoconf automake centos-release-scl epel-release zlib-devel openssl-devel postgresql-devel libcurl-devel lua-devel \\\n && yum install -y https://packages.red-data-tools.org/centos/red-data-tools-release-1.0.0-1.noarch.rpm \\\n && yum install -y libmaxminddb-devel jq libmaxminddb librdkafka-devel jansson-devel devtoolset-6 \\\n && yum install -y --enablerepo=epel arrow-devel-0.9.0 \\\n && curl -OL https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz \\\n && if [[ `sha256sum cmake-3.10.2-Linux-x86_64.tar.gz | awk '{print $1}' ` != \"7a82b46c35f4e68a0807e8dc04e779dee3f36cd42c6387fd13b5c29fe62a69ea\" ]] ; then exit 1 ; fi \\\n && (cd /usr \\\n && tar --strip-components=1 -zxf /root/cmake-3.10.2-Linux-x86_64.tar.gz ) \\\n && curl -OL https://s3-us-west-2.amazonaws.com/net-mozaws-data-us-west-2-ops-ci-artifacts/mozilla-services/lua_sandbox_extensions/external/centos7/awssdk-1.3.7-1.x86_64.rpm \\\n && if [[ `sha256sum awssdk-1.3.7-1.x86_64.rpm | awk '{print $1}' ` != \"d78b164b774848d9b6adf99b59d2651832d3cfe52bae5727fb5afeb33eb13191\" ]] ; then exit 1 ; fi \\\n && rpm -i awssdk-1.3.7-1.x86_64.rpm \\\n && curl -OL https://s3-us-west-2.amazonaws.com/net-mozaws-data-us-west-2-ops-ci-artifacts/mozilla-services/lua_sandbox_extensions/external/centos7/parquet-cpp-1.3.1-1.x86_64.rpm \\\n && if [[ `sha256sum parquet-cpp-1.3.1-1.x86_64.rpm | awk '{print $1}' ` != \"7170c4d9d4bc114053ad8e59a2eb4b18ab54580d104179f1d53602f792513374\" ]] ; then exit 1 ; fi \\\n && rpm -i parquet-cpp-1.3.1-1.x86_64.rpm \\\n && cat /etc/yum.conf | grep -v override_install_langs > /etc/yum.conf.lang \\\n && cp /etc/yum.conf.lang /etc/yum.conf \\\n && yum reinstall -y glibc-common \\\n && yum install -y stow \\\n && curl -OL https://s3-us-west-2.amazonaws.com/net-mozaws-data-us-west-2-ops-ci-artifacts/mozilla-services/lua_sandbox_extensions/external/centos7/grpc_stow.tgz \\\n && if [[ `sha256sum grpc_stow.tgz | awk '{print $1}' ` != \"65dba4a11ccc09ced4dad64ef196cab6299736a5f5e0df83fef6f1046213797b\" ]] ; then exit 1 ; fi \\\n && tar -C / -zxf grpc_stow.tgz \\\n && stow -d /usr/local/stow protobuf-3 grpc googleapis\n#   Use devtoolset-6\nENV PERL5LIB=\"PERL5LIB=/opt/rh/devtoolset-6/root//usr/lib64/perl5/vendor_perl:/opt/rh/devtoolset-6/root/usr/lib/perl5:/opt/rh/devtoolset-6/root//usr/share/perl5/vendor_perl\" \\\n    X_SCLS=\"devtoolset-6\" \\\n    PCP_DIR=\"/opt/rh/devtoolset-6/root\" \\\n    LD_LIBRARY_PATH=\"/opt/rh/devtoolset-6/root/usr/lib64:/opt/rh/devtoolset-6/root/usr/lib\" \\\n    PATH=\"/opt/rh/devtoolset-6/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n    PYTHONPATH=\"/opt/rh/devtoolset-6/root/usr/lib64/python2.7/site-packages:/opt/rh/devtoolset-6/root/usr/lib/python2.7/site-packages\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\n#   Compile and install lua_sandbox and hindsight using master branch\nRUN git clone https://github.com/mozilla-services/lua_sandbox \\\n && git clone https://github.com/mozilla-services/hindsight \\\n && mkdir -p lua_sandbox/release \\\n && cd lua_sandbox/release \\\n && cmake -DCMAKE_BUILD_TYPE=release .. \\\n && make \\\n && ctest \\\n && cpack -G RPM \\\n && rpm -i *.rpm \\\n && cd ../.. \\\n && mkdir -p hindsight/release \\\n && cd hindsight/release \\\n && cmake -DCMAKE_BUILD_TYPE=release .. \\\n && make \\\n && ctest \\\n && cpack -G RPM \\\n && rpm -i *.rpm\n#   Compile some additional dependencies we need for lua_sandbox_extensions that we\n#   don't have packages for.\n#\n#   cjose is required for jose, and right now the jose module requires 0.5.1\nRUN git clone https://github.com/cisco/cjose.git \\\n && cd cjose \\\n && git checkout tags/0.5.1 \\\n && autoreconf \\\n && env CFLAGS='-g -O2 -I/usr/include/ -I/usr/include -fPIC' ./configure --with-openssl=/usr --with-jansson=/usr --enable-static --disable-shared --prefix=/usr \\\n && make \\\n && make install \\\n && cp cjose.pc /usr/lib64/pkgconfig/cjose.pc \\\n && cd .. \\\n && git clone https://github.com/trink/streaming_algorithms.git \\\n && mkdir -p streaming_algorithms/release \\\n && cd streaming_algorithms/release \\\n && cmake -DCMAKE_BUILD_TYPE=release -DCPACK_GENERATOR=RPM .. \\\n && make \\\n && ctest \\\n && make packages \\\n && rpm -i luasandbox*.rpm \\\n && cd ../.. \\\n && git clone https://github.com/mozilla-services/mozilla-pipeline-schemas.git \\\n && mkdir -p mozilla-pipeline-schemas/release \\\n && cd mozilla-pipeline-schemas/release \\\n && cmake .. \\\n && make \\\n && cpack -G RPM \\\n && rpm -i *.rpm \\\n && cd ../.. \\\n && git clone https://github.com/trink/lua_date.git \\\n && mkdir -p lua_date/release \\\n && cd lua_date \\\n && git submodule init \\\n && git submodule update \\\n && cd release \\\n && cmake -DCMAKE_BUILD_TYPE=release -DCPACK_GENERATOR=RPM .. \\\n && make \\\n && ctest \\\n && make packages\n#   Add our extensions repo, build all of them, test and install the RPMs in the image\n#\n#   As a final step here as well, place the RPMs generated from some of the external\n#   dependencies in the release directory with the lua_sandbox_extensions packages\nADD . /root/lua_sandbox_extensions\nRUN mkdir -p lua_sandbox_extensions/release \\\n && cd lua_sandbox_extensions/release \\\n && cmake -DCMAKE_BUILD_TYPE=release -DCPACK_GENERATOR=RPM ${EXTENSIONS} .. \\\n && make \\\n && ctest -V \\\n && make packages \\\n && cp ../../lua_date/release/iana*rpm ../../lua_date/release/luasandbox*rpm . \\\n && rpm -i *.rpm \\\n && cp ../../streaming_algorithms/release/luasandbox-streaming-algorithms* . \\\n && cp ../../hindsight/release/*.rpm . \\\n && cp ../../lua_sandbox/release/*.rpm .\n#   Add a hindsight user and default RUN command\nRUN groupadd hindsight \\\n && useradd -g hindsight -s /bin/bash -m hindsight\nCMD /usr/bin/su - hindsight -c 'cd /home/hindsight \\\n && hindsight hindsight.cfg 7'\n","originalDockerfileUglifiedHash":"fabbddceb6d6819693ce0430065b013f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/064fca327e8b605b8410d9e6441d966491129989.dockerfile"}