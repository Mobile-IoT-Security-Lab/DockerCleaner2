{"seed":2365249910,"processedDockerfileHash":"1561b307aeeca2528377218f69c3890b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM prevsio/pool-base\nMAINTAINER mookjp\nWORKDIR /tmp\nRUN export PATH=$PATH:/usr/local/bin\n#   Update docker\nRUN curl -s https://get.docker.com/builds/Linux/x86_64/docker-latest -o docker\nRUN chmod +x docker\nRUN cp docker /usr/bin/\n#   hostname settings\nCOPY provisioning/network /etc/sysconfig/network\nCOPY provisioning/hosts /etc/sysconfig/hosts\n#   Add Apache settings\nCOPY provisioning/httpd.conf /etc/httpd/conf/httpd.conf\nCOPY provisioning/mruby.conf /etc/httpd/conf.d/mruby.conf\n#   Add supervisor configuration file\nCOPY provisioning/supervisord.conf /etc/supervisord.conf\n#   Add container-limitation configuration gile\nCOPY provisioning/cron/limit_containers /etc/cron.d/limit_containers\n#   Install build-srver\nCOPY builder /tmp/builder\nWORKDIR /tmp/builder\nRUN /opt/ruby-2.1.2/bin/bundle install --path=vendor/bundle\n#   Test builder\nRUN /opt/ruby-2.1.2/bin/bundle exec rake spec\nRUN /usr/local/bin/gem build builder.gemspec\nRUN /usr/local/bin/gem install builder-0.0.1.gem\n#   Add mod_mruby handler to manage request\nCOPY handlers /app/handlers\n#   Install build-screen\nRUN mkdir -p /app/handlers/resources\nRUN mkdir /tmp/build-screen\n#   Add package.json beforehand then execute npm install\nCOPY build-screen/package.json /tmp/build-screen/package.json\nWORKDIR /tmp/build-screen\nRUN npm install\nCOPY build-screen /tmp/build-screen-2\nRUN cp -nr /tmp/build-screen-2/* /tmp/build-screen\nRUN cp -nr /tmp/build-screen-2/.[^.]* /tmp/build-screen\n#   For bower install\nRUN git config --global url.https://.insteadOf git://\nRUN $( npm bin ;)/bower --allow-root install\nRUN $( npm bin ;)/grunt build\nRUN mv /tmp/build-screen/dist /app/handlers/resources/build-screen\n#   Add util scripts for handling containers\nCOPY scripts /app/scripts\nRUN chmod +x /app/scripts/starter\nRUN chmod +x /app/scripts/limit_containers\n#   Add log directories\nRUN mkdir -p /var/log/supervisor\nRUN mkdir -p /var/log/builder\nRUN mkdir -p /app/images\nRUN touch /app/images/ids\n#   Add private key directory to clone repository\nRUN mkdir -p /root/.ssh\nRUN mkdir -p /var/www/.ssh\nCOPY keys /app/keys\nCOPY /provisioning/ssh_config /var/www/.ssh/config\nCOPY /provisioning/ssh_config /root/.ssh/config\nRUN chown -R apache. /var/www/.ssh\nRUN chmod 600 /var/www/.ssh/config /root/.ssh/config\nRUN chmod 700 /var/www/.ssh /root/.ssh\n#   Add config files\nCOPY config /app/config\n#   Add test files\nCOPY tests /app/tests\n#   Add apache to pool and docker group to access /app\n#   as hook.rb has to access application's repository in it\n#   and to access docker sock file\nRUN groupadd pool\nRUN usermod -G docker,pool apache\nRUN chgrp --recursive pool /app\nRUN chmod --recursive g+rwx /app\n#   Set target preview repository\nENV PREVIEW_REPOSITORY_URL=\"https://github.com/mookjp/flaskapp.git\"\nENV MAX_CONTAINERS=\"10\"\nENV GIT_COMMIT_ID_CACHE_EXPIRE=\"10\"\nENV POOL_BASE_DOMAIN=\"pool.dev\"\nENV GITHUB_BOT=\"false\"\nEXPOSE 80/tcp 8080/tcp\nCMD /app/scripts/starter \\\n && tail -F /var/log/httpd/error_log\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM prevsio/pool-base\nMAINTAINER mookjp\nWORKDIR /tmp\nRUN export PATH=$PATH:/usr/local/bin\n#  Update docker\nRUN curl -s https://get.docker.com/builds/Linux/x86_64/docker-latest -o docker\nRUN chmod +x docker\nRUN cp docker /usr/bin/\n#  hostname settings\nADD provisioning/network /etc/sysconfig/network\nADD provisioning/hosts /etc/sysconfig/hosts\n#  Add Apache settings\nADD provisioning/httpd.conf /etc/httpd/conf/httpd.conf\nADD provisioning/mruby.conf /etc/httpd/conf.d/mruby.conf\n#  Add supervisor configuration file\nADD provisioning/supervisord.conf /etc/supervisord.conf\n#  Add container-limitation configuration gile\nADD provisioning/cron/limit_containers /etc/cron.d/limit_containers\n#  Install build-srver\nADD builder /tmp/builder\nWORKDIR /tmp/builder\nRUN /opt/ruby-2.1.2/bin/bundle install --path=vendor/bundle\n#  Test builder\nRUN /opt/ruby-2.1.2/bin/bundle exec rake spec\nRUN /usr/local/bin/gem build builder.gemspec\nRUN /usr/local/bin/gem install builder-0.0.1.gem\n#  Add mod_mruby handler to manage request\nADD handlers /app/handlers\n#  Install build-screen\nRUN mkdir -p /app/handlers/resources\nRUN mkdir /tmp/build-screen\n#  Add package.json beforehand then execute npm install\nADD build-screen/package.json /tmp/build-screen/package.json\nWORKDIR /tmp/build-screen\nRUN npm install\nADD build-screen /tmp/build-screen-2\nRUN cp -nr /tmp/build-screen-2/* /tmp/build-screen\nRUN cp -nr /tmp/build-screen-2/.[^.]* /tmp/build-screen\n#  For bower install\nRUN git config --global url.https://.insteadOf git://\nRUN $( npm bin ;)/bower --allow-root install\nRUN $( npm bin ;)/grunt build\nRUN mv /tmp/build-screen/dist /app/handlers/resources/build-screen\n#  Add util scripts for handling containers\nADD scripts /app/scripts\nRUN chmod +x /app/scripts/starter\nRUN chmod +x /app/scripts/limit_containers\n#  Add log directories\nRUN mkdir -p /var/log/supervisor\nRUN mkdir -p /var/log/builder\nRUN mkdir -p /app/images\nRUN touch /app/images/ids\n#  Add private key directory to clone repository\nRUN mkdir -p /root/.ssh\nRUN mkdir -p /var/www/.ssh\nADD keys /app/keys\nADD /provisioning/ssh_config /var/www/.ssh/config\nADD /provisioning/ssh_config /root/.ssh/config\nRUN chown -R apache. /var/www/.ssh\nRUN chmod 600 /var/www/.ssh/config /root/.ssh/config\nRUN chmod 700 /var/www/.ssh /root/.ssh\n#  Add config files\nADD config /app/config\n#  Add test files\nADD tests /app/tests\n#  Add apache to pool and docker group to access /app\n#  as hook.rb has to access application's repository in it\n#  and to access docker sock file\nRUN groupadd pool\nRUN usermod -G docker,pool apache\nRUN chgrp --recursive pool /app\nRUN chmod --recursive g+rwx /app\n#  Set target preview repository\nENV PREVIEW_REPOSITORY_URL=\"https://github.com/mookjp/flaskapp.git\"\nENV MAX_CONTAINERS=\"10\"\nENV GIT_COMMIT_ID_CACHE_EXPIRE=\"10\"\nENV POOL_BASE_DOMAIN=\"pool.dev\"\nENV GITHUB_BOT=\"false\"\nEXPOSE 80/tcp 8080/tcp\nCMD /app/scripts/starter \\\n && tail -F /var/log/httpd/error_log\n","injectedSmells":[],"originalDockerfileHash":"471639c01005569752ed38888cfad976","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM prevsio/pool-base\nMAINTAINER mookjp\nWORKDIR /tmp\nRUN export PATH=$PATH:/usr/local/bin\n#   Update docker\nRUN curl -s https://get.docker.com/builds/Linux/x86_64/docker-latest -o docker\nRUN chmod +x docker\nRUN cp docker /usr/bin/\n#   hostname settings\nADD provisioning/network /etc/sysconfig/network\nADD provisioning/hosts /etc/sysconfig/hosts\n#   Add Apache settings\nADD provisioning/httpd.conf /etc/httpd/conf/httpd.conf\nADD provisioning/mruby.conf /etc/httpd/conf.d/mruby.conf\n#   Add supervisor configuration file\nADD provisioning/supervisord.conf /etc/supervisord.conf\n#   Add container-limitation configuration gile\nADD provisioning/cron/limit_containers /etc/cron.d/limit_containers\n#   Install build-srver\nADD builder /tmp/builder\nWORKDIR /tmp/builder\nRUN /opt/ruby-2.1.2/bin/bundle install --path=vendor/bundle\n#   Test builder\nRUN /opt/ruby-2.1.2/bin/bundle exec rake spec\nRUN /usr/local/bin/gem build builder.gemspec\nRUN /usr/local/bin/gem install builder-0.0.1.gem\n#   Add mod_mruby handler to manage request\nADD handlers /app/handlers\n#   Install build-screen\nRUN mkdir -p /app/handlers/resources\nRUN mkdir /tmp/build-screen\n#   Add package.json beforehand then execute npm install\nADD build-screen/package.json /tmp/build-screen/package.json\nWORKDIR /tmp/build-screen\nRUN npm install\nADD build-screen /tmp/build-screen-2\nRUN cp -nr /tmp/build-screen-2/* /tmp/build-screen\nRUN cp -nr /tmp/build-screen-2/.[^.]* /tmp/build-screen\n#   For bower install\nRUN git config --global url.https://.insteadOf git://\nRUN $( npm bin ;)/bower --allow-root install\nRUN $( npm bin ;)/grunt build\nRUN mv /tmp/build-screen/dist /app/handlers/resources/build-screen\n#   Add util scripts for handling containers\nADD scripts /app/scripts\nRUN chmod +x /app/scripts/starter\nRUN chmod +x /app/scripts/limit_containers\n#   Add log directories\nRUN mkdir -p /var/log/supervisor\nRUN mkdir -p /var/log/builder\nRUN mkdir -p /app/images\nRUN touch /app/images/ids\n#   Add private key directory to clone repository\nRUN mkdir -p /root/.ssh\nRUN mkdir -p /var/www/.ssh\nADD keys /app/keys\nADD /provisioning/ssh_config /var/www/.ssh/config\nADD /provisioning/ssh_config /root/.ssh/config\nRUN chown -R apache. /var/www/.ssh\nRUN chmod 600 /var/www/.ssh/config /root/.ssh/config\nRUN chmod 700 /var/www/.ssh /root/.ssh\n#   Add config files\nADD config /app/config\n#   Add test files\nADD tests /app/tests\n#   Add apache to pool and docker group to access /app\n#   as hook.rb has to access application's repository in it\n#   and to access docker sock file\nRUN groupadd pool\nRUN usermod -G docker,pool apache\nRUN chgrp --recursive pool /app\nRUN chmod --recursive g+rwx /app\n#   Set target preview repository\nENV PREVIEW_REPOSITORY_URL=\"https://github.com/mookjp/flaskapp.git\"\nENV MAX_CONTAINERS=\"10\"\nENV GIT_COMMIT_ID_CACHE_EXPIRE=\"10\"\nENV POOL_BASE_DOMAIN=\"pool.dev\"\nENV GITHUB_BOT=\"false\"\nEXPOSE 80/tcp 8080/tcp\nCMD /app/scripts/starter \\\n && tail -F /var/log/httpd/error_log\n","originalDockerfileUglifiedHash":"f4bdd272b69f9484f3798a8cb82f0ad8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/eb64167274cf61622750bf574a245cf8835b201a.dockerfile"}