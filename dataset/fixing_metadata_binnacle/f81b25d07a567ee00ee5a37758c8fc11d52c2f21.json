{"seed":3567338972,"processedDockerfileHash":"b1c763897bb2fc2749483c56e739c612","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck"],"processedDockerfile":"FROM debian:stretch\nLABEL Name=\"cyph\"\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends apt-transport-https=1.4.11 apt-utils=1.4.11 curl=7.52.1-5+deb9u16 gnupg=2.1.18-8~deb9u4 lsb-release=9.20161125 -y --allow-downgrades )\nRUN dpkg --add-architecture i386\nRUN echo \"deb https://deb.nodesource.com/node_10.x stretch main\" >> /etc/apt/sources.list\nRUN echo 'deb https://dl.yarnpkg.com/debian/ stable main' >> /etc/apt/sources.list\nRUN curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN curl -s https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN :\nRUN apt-get -y --allow-downgrades upgrade\nRUN (apt-get update ;apt-get install --no-install-recommends autoconf=2.69-10 automake=1:1.15-6 build-essential=12.3 cmake=3.7.2-1 devscripts=2.17.6+deb9u2 expect=5.45-7+deb9u1 gcc-6=6.3.0-18+deb9u1 g++=4:6.3.0-4 git=1:2.11.0-3+deb9u7 golang-go=2:1.7~5 haxe=1:3.2.1+dfsg-1+b1 inotify-tools=3.14-2 lib32ncurses5=6.0+20161126-1+deb9u2 lib32z1=1:1.2.8.dfsg-5+deb9u1 libbz2-1.0:i386 libgconf-2-4=3.2.6-4+b1 libsodium-dev=1.0.11-2 libstdc++6:i386 libtool=2.4.6-2 mono-complete=4.6.2.7+dfsg-1 nano=2.7.4-1 nodejs=4.8.2~dfsg-1 openjdk-8-jdk=8u332-ga-1~deb9u1 perl=5.24.1-3+deb9u7 pinentry-curses=1.0.0-2 procps=2:3.3.12-3+deb9u1 python=2.7.13-2 python-pip=9.0.1-2+deb9u2 ruby=1:2.3.3 ruby-dev=1:2.3.3 shellcheck=0.4.4-4 sudo=1.8.19p1-2.1+deb9u3 tightvncserver=1:1.3.9-9+deb9u1 wget=1.18-5+deb9u3 yarn zopfli=1.0.1+git160119-1+b1 -y --allow-downgrades )\nRUN :\nRUN apt-get -y --allow-downgrades upgrade\nRUN apt-get -y --allow-downgrades autoremove\nRUN pip install grpcio==1.53.0\nRUN gem update\nRUN gem install sass --version 3.7.4\nRUN echo ' source /home/gibson/emsdk-portable/emsdk_env.sh &> /dev/null; export GIT_EDITOR=\"vim\"; export GOPATH=\"/home/gibson/go\"; export ANDROID_HOME=\"/home/gibson/androidsdk\"; export JAVA_HOME=\"$( update-alternatives --query javac | sed -n -e \"s/Best: *\\(.*\\)\\/bin\\/javac/\\\\1/p\" )\"; export PATH=\"$( echo -n \"/opt/local/bin:\"; echo -n \"/opt/local/sbin:\"; echo -n \"/usr/local/opt/go/libexec/bin:\"; echo -n \"${GOPATH}/bin:\"; echo -n \"${ANDROID_HOME}/platform-tools:\"; echo -n \"${ANDROID_HOME}/tools:\"; echo -n \"${PATH}:\"; echo -n \"/node_modules/.bin\"; )\"; if [ ! -d ~/.gnupg -a -d ~/.gnupg.original ] ; then cp -a ~/.gnupg.original ~/.gnupg ; fi; export GPG_TTY=\"$(tty)\"; eval $(gpg-agent --daemon 2> /dev/null) &> /dev/null; eval $(ssh-agent 2> /dev/null) &> /dev/null; if [ -f /cyph/commands/.bashrc ] ; then source /cyph/commands/.bashrc ; fi ' >> /.bashrc\nRUN echo 'gibson ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\nRUN useradd -ms /bin/bash gibson\nRUN mkdir -p /home/gibson\nRUN cp -f /.bashrc /home/gibson/.bashrc\nRUN cp -f /.bashrc /root/.bashrc\nRUN chmod 700 /home/gibson/.bashrc\nUSER gibson\nENV HOME=\"/home/gibson\"\nRUN wget https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz -O ~/emsdk.tar.gz\nRUN wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-150.0.0-linux-x86_64.tar.gz -O ~/gcloud-sdk.tar.gz\nRUN ls ~/*.tar.gz | xargs -I% tar xvzf % -C ~\nRUN rm ~/*.tar.gz\n#  RUN mkdir ~/androidsdk\n#  RUN wget https://dl.google.com/android/repository/tools_r25.2.5-linux.zip -O ~/androidsdk.zip\n#  RUN unzip ~/androidsdk.zip -d ~/androidsdk\n#  RUN rm ~/androidsdk.zip\n#  RUN bash -c ' \\\n#  \tsource ~/.bashrc; \\\n#  \tmv $ANDROID_HOME/tools $ANDROID_HOME/balls; \\\n#  \tln -s $ANDROID_HOME/balls $ANDROID_HOME/tools; \\\n#  \tyes | $ANDROID_HOME/tools/bin/sdkmanager --licenses; \\\n#  \t$ANDROID_HOME/tools/bin/sdkmanager \\\n#  \t\t\"tools\" \\\n#  \t\t\"platform-tools\" \\\n#  \t\t\"platforms;android-25\" \\\n#  \t\t\"build-tools;25.0.2\" \\\n#  \t\t\"extras;android;m2repository\" \\\n#  \t\t\"extras;google;m2repository\" \\\n#  \t; \\\n#  \trm -rf $ANDROID_HOME/balls; \\\n#  '\nRUN mkdir ~/haxelib\nRUN haxelib setup ~/haxelib\nRUN haxelib install hxcpp\nRUN haxelib install hxcs\nRUN haxelib install hxjava\nRUN haxelib install hxnodejs\nRUN rm -rf ~/.gnupg\n#  CIRCLECI:RUN sudo apt-get -y --allow-downgrades update\n#  CIRCLECI:RUN sudo apt-get -y --allow-downgrades upgrade\n#  CIRCLECI:RUN mkdir -p ~/getlibs/commands ~/getlibs/native ~/getlibs/shared/lib/js\n#  CIRCLECI:BASE64_FILES\n#  CIRCLECI:RUN chmod -R 777 ~/getlibs\n#  CIRCLECI:RUN ~/getlibs/commands/updatedockerimage.sh\n#  CIRCLECI:RUN ~/getlibs/commands/getlibs.sh\n#  CIRCLECI:RUN ~/getlibs/commands/dockerpostmake.sh\n#  CIRCLECI:RUN sudo mkdir /cyph\n#  CIRCLECI:RUN sudo chmod 777 /cyph\nVOLUME /cyph\nVOLUME /home/gibson/.cyph\nVOLUME /home/gibson/.gitconfig\nVOLUME /home/gibson/.gnupg.original\nVOLUME /home/gibson/.ssh\nWORKDIR /cyph/commands\nEXPOSE 9005/tcp 9876/tcp 31337/tcp 42000/tcp 42001/tcp 42002/tcp 44000/tcp\nCMD /bin/bash\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch\nLABEL Name=\"cyph\"\nRUN apt-get update -y --allow-downgrades\nRUN apt-get install apt-transport-https apt-utils curl gnupg lsb-release -y --allow-downgrades\nRUN dpkg --add-architecture i386\nRUN echo \"deb https://deb.nodesource.com/node_10.x stretch main\" >> /etc/apt/sources.list\nRUN echo 'deb https://dl.yarnpkg.com/debian/ stable main' >> /etc/apt/sources.list\nRUN curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN curl -s https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN apt-get update -y --allow-downgrades\nRUN apt-get -y --allow-downgrades upgrade\nRUN apt-get install autoconf automake build-essential cmake devscripts expect gcc-6 g++ git golang-go haxe inotify-tools lib32ncurses5 lib32z1 libbz2-1.0:i386 libgconf-2-4 libsodium-dev libstdc++6:i386 libtool mono-complete nano nodejs openjdk-8-jdk perl pinentry-curses procps python python-pip ruby ruby-dev shellcheck sudo tightvncserver wget yarn zopfli -y --allow-downgrades\nRUN apt-get update -y --allow-downgrades\nRUN apt-get -y --allow-downgrades upgrade\nRUN apt-get -y --allow-downgrades autoremove\nRUN pip install grpcio\nRUN gem update\nRUN gem install sass\nRUN echo ' source /home/gibson/emsdk-portable/emsdk_env.sh &> /dev/null; export GIT_EDITOR=\"vim\"; export GOPATH=\"/home/gibson/go\"; export ANDROID_HOME=\"/home/gibson/androidsdk\"; export JAVA_HOME=\"$( update-alternatives --query javac | sed -n -e \"s/Best: *\\(.*\\)\\/bin\\/javac/\\\\1/p\" )\"; export PATH=\"$( echo -n \"/opt/local/bin:\"; echo -n \"/opt/local/sbin:\"; echo -n \"/usr/local/opt/go/libexec/bin:\"; echo -n \"${GOPATH}/bin:\"; echo -n \"${ANDROID_HOME}/platform-tools:\"; echo -n \"${ANDROID_HOME}/tools:\"; echo -n \"${PATH}:\"; echo -n \"/node_modules/.bin\"; )\"; if [ ! -d ~/.gnupg -a -d ~/.gnupg.original ] ; then cp -a ~/.gnupg.original ~/.gnupg ; fi; export GPG_TTY=\"$(tty)\"; eval $(gpg-agent --daemon 2> /dev/null) &> /dev/null; eval $(ssh-agent 2> /dev/null) &> /dev/null; if [ -f /cyph/commands/.bashrc ] ; then source /cyph/commands/.bashrc ; fi ' >> /.bashrc\nRUN echo 'gibson ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\nRUN useradd -ms /bin/bash gibson\nRUN mkdir -p /home/gibson\nRUN cp -f /.bashrc /home/gibson/.bashrc\nRUN cp -f /.bashrc /root/.bashrc\nRUN chmod 700 /home/gibson/.bashrc\nUSER gibson\nENV HOME=\"/home/gibson\"\nRUN wget https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz -O ~/emsdk.tar.gz\nRUN wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-150.0.0-linux-x86_64.tar.gz -O ~/gcloud-sdk.tar.gz\nRUN ls ~/*.tar.gz | xargs -I% tar xvzf % -C ~\nRUN rm ~/*.tar.gz\n# RUN mkdir ~/androidsdk\n# RUN wget https://dl.google.com/android/repository/tools_r25.2.5-linux.zip -O ~/androidsdk.zip\n# RUN unzip ~/androidsdk.zip -d ~/androidsdk\n# RUN rm ~/androidsdk.zip\n# RUN bash -c ' \\\n# \tsource ~/.bashrc; \\\n# \tmv $ANDROID_HOME/tools $ANDROID_HOME/balls; \\\n# \tln -s $ANDROID_HOME/balls $ANDROID_HOME/tools; \\\n# \tyes | $ANDROID_HOME/tools/bin/sdkmanager --licenses; \\\n# \t$ANDROID_HOME/tools/bin/sdkmanager \\\n# \t\t\"tools\" \\\n# \t\t\"platform-tools\" \\\n# \t\t\"platforms;android-25\" \\\n# \t\t\"build-tools;25.0.2\" \\\n# \t\t\"extras;android;m2repository\" \\\n# \t\t\"extras;google;m2repository\" \\\n# \t; \\\n# \trm -rf $ANDROID_HOME/balls; \\\n# '\nRUN mkdir ~/haxelib\nRUN haxelib setup ~/haxelib\nRUN haxelib install hxcpp\nRUN haxelib install hxcs\nRUN haxelib install hxjava\nRUN haxelib install hxnodejs\nRUN rm -rf ~/.gnupg\n# CIRCLECI:RUN sudo apt-get -y --allow-downgrades update\n# CIRCLECI:RUN sudo apt-get -y --allow-downgrades upgrade\n# CIRCLECI:RUN mkdir -p ~/getlibs/commands ~/getlibs/native ~/getlibs/shared/lib/js\n# CIRCLECI:BASE64_FILES\n# CIRCLECI:RUN chmod -R 777 ~/getlibs\n# CIRCLECI:RUN ~/getlibs/commands/updatedockerimage.sh\n# CIRCLECI:RUN ~/getlibs/commands/getlibs.sh\n# CIRCLECI:RUN ~/getlibs/commands/dockerpostmake.sh\n# CIRCLECI:RUN sudo mkdir /cyph\n# CIRCLECI:RUN sudo chmod 777 /cyph\nVOLUME /cyph\nVOLUME /home/gibson/.cyph\nVOLUME /home/gibson/.gitconfig\nVOLUME /home/gibson/.gnupg.original\nVOLUME /home/gibson/.ssh\nWORKDIR /cyph/commands\nEXPOSE 9005/tcp 9876/tcp 31337/tcp 42000/tcp 42001/tcp 42002/tcp 44000/tcp\nCMD /bin/bash\n","injectedSmells":[],"originalDockerfileHash":"48552b3754116fc90ad67061d4a145dc","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch\nLABEL Name=\"cyph\"\nRUN apt-get update -y --allow-downgrades\nRUN apt-get install apt-transport-https apt-utils curl gnupg lsb-release -y --allow-downgrades\nRUN dpkg --add-architecture i386\nRUN echo \"deb https://deb.nodesource.com/node_10.x stretch main\" >> /etc/apt/sources.list\nRUN echo 'deb https://dl.yarnpkg.com/debian/ stable main' >> /etc/apt/sources.list\nRUN curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN curl -s https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN apt-get update -y --allow-downgrades\nRUN apt-get -y --allow-downgrades upgrade\nRUN apt-get install autoconf automake build-essential cmake devscripts expect gcc-6 g++ git golang-go haxe inotify-tools lib32ncurses5 lib32z1 libbz2-1.0:i386 libgconf-2-4 libsodium-dev libstdc++6:i386 libtool mono-complete nano nodejs openjdk-8-jdk perl pinentry-curses procps python python-pip ruby ruby-dev shellcheck sudo tightvncserver wget yarn zopfli -y --allow-downgrades\nRUN apt-get update -y --allow-downgrades\nRUN apt-get -y --allow-downgrades upgrade\nRUN apt-get -y --allow-downgrades autoremove\nRUN pip install grpcio\nRUN gem update\nRUN gem install sass\nRUN echo ' source /home/gibson/emsdk-portable/emsdk_env.sh &> /dev/null; export GIT_EDITOR=\"vim\"; export GOPATH=\"/home/gibson/go\"; export ANDROID_HOME=\"/home/gibson/androidsdk\"; export JAVA_HOME=\"$( update-alternatives --query javac | sed -n -e \"s/Best: *\\(.*\\)\\/bin\\/javac/\\\\1/p\" )\"; export PATH=\"$( echo -n \"/opt/local/bin:\"; echo -n \"/opt/local/sbin:\"; echo -n \"/usr/local/opt/go/libexec/bin:\"; echo -n \"${GOPATH}/bin:\"; echo -n \"${ANDROID_HOME}/platform-tools:\"; echo -n \"${ANDROID_HOME}/tools:\"; echo -n \"${PATH}:\"; echo -n \"/node_modules/.bin\"; )\"; if [ ! -d ~/.gnupg -a -d ~/.gnupg.original ] ; then cp -a ~/.gnupg.original ~/.gnupg ; fi; export GPG_TTY=\"$(tty)\"; eval $(gpg-agent --daemon 2> /dev/null) &> /dev/null; eval $(ssh-agent 2> /dev/null) &> /dev/null; if [ -f /cyph/commands/.bashrc ] ; then source /cyph/commands/.bashrc ; fi ' >> /.bashrc\nRUN echo 'gibson ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\nRUN useradd -ms /bin/bash gibson\nRUN mkdir -p /home/gibson\nRUN cp -f /.bashrc /home/gibson/.bashrc\nRUN cp -f /.bashrc /root/.bashrc\nRUN chmod 700 /home/gibson/.bashrc\nUSER gibson\nENV HOME=\"/home/gibson\"\nRUN wget https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz -O ~/emsdk.tar.gz\nRUN wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-150.0.0-linux-x86_64.tar.gz -O ~/gcloud-sdk.tar.gz\nRUN ls ~/*.tar.gz | xargs -I% tar xvzf % -C ~\nRUN rm ~/*.tar.gz\n#  RUN mkdir ~/androidsdk\n#  RUN wget https://dl.google.com/android/repository/tools_r25.2.5-linux.zip -O ~/androidsdk.zip\n#  RUN unzip ~/androidsdk.zip -d ~/androidsdk\n#  RUN rm ~/androidsdk.zip\n#  RUN bash -c ' \\\n#  \tsource ~/.bashrc; \\\n#  \tmv $ANDROID_HOME/tools $ANDROID_HOME/balls; \\\n#  \tln -s $ANDROID_HOME/balls $ANDROID_HOME/tools; \\\n#  \tyes | $ANDROID_HOME/tools/bin/sdkmanager --licenses; \\\n#  \t$ANDROID_HOME/tools/bin/sdkmanager \\\n#  \t\t\"tools\" \\\n#  \t\t\"platform-tools\" \\\n#  \t\t\"platforms;android-25\" \\\n#  \t\t\"build-tools;25.0.2\" \\\n#  \t\t\"extras;android;m2repository\" \\\n#  \t\t\"extras;google;m2repository\" \\\n#  \t; \\\n#  \trm -rf $ANDROID_HOME/balls; \\\n#  '\nRUN mkdir ~/haxelib\nRUN haxelib setup ~/haxelib\nRUN haxelib install hxcpp\nRUN haxelib install hxcs\nRUN haxelib install hxjava\nRUN haxelib install hxnodejs\nRUN rm -rf ~/.gnupg\n#  CIRCLECI:RUN sudo apt-get -y --allow-downgrades update\n#  CIRCLECI:RUN sudo apt-get -y --allow-downgrades upgrade\n#  CIRCLECI:RUN mkdir -p ~/getlibs/commands ~/getlibs/native ~/getlibs/shared/lib/js\n#  CIRCLECI:BASE64_FILES\n#  CIRCLECI:RUN chmod -R 777 ~/getlibs\n#  CIRCLECI:RUN ~/getlibs/commands/updatedockerimage.sh\n#  CIRCLECI:RUN ~/getlibs/commands/getlibs.sh\n#  CIRCLECI:RUN ~/getlibs/commands/dockerpostmake.sh\n#  CIRCLECI:RUN sudo mkdir /cyph\n#  CIRCLECI:RUN sudo chmod 777 /cyph\nVOLUME /cyph\nVOLUME /home/gibson/.cyph\nVOLUME /home/gibson/.gitconfig\nVOLUME /home/gibson/.gnupg.original\nVOLUME /home/gibson/.ssh\nWORKDIR /cyph/commands\nEXPOSE 9005/tcp 9876/tcp 31337/tcp 42000/tcp 42001/tcp 42002/tcp 44000/tcp\nCMD /bin/bash\n","originalDockerfileUglifiedHash":"3dca823f5f6831fc02159239393055e0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f81b25d07a567ee00ee5a37758c8fc11d52c2f21.dockerfile"}