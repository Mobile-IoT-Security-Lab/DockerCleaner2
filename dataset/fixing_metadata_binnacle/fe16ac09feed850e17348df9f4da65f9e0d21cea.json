{"seed":1899120394,"processedDockerfileHash":"519b5120134ef9fc5b0ee2f6aaeda5ae","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   MIT License\n#   Copyright (c) 2016 Chris R\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n#   of this software and associated documentation files (the \"Software\"), to deal\n#   in the Software without restriction, including without limitation the rights\n#   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the Software is\n#   furnished to do so, subject to the following conditions:\n#   The above copyright notice and this permission notice shall be included in all\n#   copies or substantial portions of the Software.\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n#   SOFTWARE.\nFROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG WINE_VERSION=winehq-staging\nARG PYTHON_VERSION=3.6.4\nARG PYINSTALLER_VERSION=3.4\n#   we need wine for this all to work, so we'll use the PPA\nRUN set -x \\\n && dpkg --add-architecture i386 \\\n && apt-get update -qy \\\n && apt-get install --no-install-recommends apt-transport-https=1.2.35 software-properties-common=0.96.20.10 wget=1.17.1-1ubuntu1.5 zip=3.0-11 -qfy \\\n && wget -nv https://dl.winehq.org/wine-builds/winehq.key \\\n && apt-key add winehq.key \\\n && add-apt-repository 'https://dl.winehq.org/wine-builds/ubuntu/' \\\n && apt-get update -qy \\\n && apt-get install --no-install-recommends winbind=2:4.3.11+dfsg-0ubuntu0.16.04.34 cabextract=1.6-1 $WINE_VERSION -qfy \\\n && apt-get clean \\\n && wget -nv https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks \\\n && chmod +x winetricks \\\n && mv winetricks /usr/local/bin\n#   wine settings\nENV WINEARCH=\"win64\"\nENV WINEDEBUG=\"fixme-all\"\nENV WINEPREFIX=\"/wine\"\n#   PYPI repository location\nENV PYPI_URL=\"https://pypi.python.org/\"\n#   PYPI index location\nENV PYPI_INDEX_URL=\"https://pypi.python.org/simple\"\n#   install python in wine, using the msi packages to install, extracting\n#   the files directly, since installing isn't running correctly.\nRUN set -x \\\n && winetricks win7 \\\n && for msifile in `echo core dev exe lib path pip tcltk tools `; do wget -nv \"https://www.python.org/ftp/python/$PYTHON_VERSION/amd64/${msifile}.msi\" ;wine msiexec /i \"${msifile}.msi\" /qb TARGETDIR=C:/Python36 ;rm ${msifile}.msi ; done \\\n && cd /wine/drive_c/Python36 \\\n && echo 'wine '''C:Python36python.exe''' \"$@\"' > /usr/bin/python \\\n && echo 'wine '''C:Python36Scriptseasy_install.exe''' \"$@\"' > /usr/bin/easy_install \\\n && echo 'wine '''C:Python36Scriptspip.exe''' \"$@\"' > /usr/bin/pip \\\n && echo 'wine '''C:Python36Scriptspyinstaller.exe''' \"$@\"' > /usr/bin/pyinstaller \\\n && echo 'wine '''C:Python36Scriptspyupdater.exe''' \"$@\"' > /usr/bin/pyupdater \\\n && echo 'assoc .py=PythonScript' | wine cmd \\\n && echo 'ftype PythonScript=c:\\Python36\\python.exe \"%1\" %*' | wine cmd \\\n && while pgrep wineserver > /dev/null; do echo \"Waiting for wineserver\" ;sleep 1 ; done \\\n && chmod +x /usr/bin/python /usr/bin/easy_install /usr/bin/pip /usr/bin/pyinstaller /usr/bin/pyupdater \\\n && (pip install pip==23.1 -U || true ) \\\n && rm -rf /tmp/.wine-*\nENV W_DRIVE_C=\"/wine/drive_c\"\nENV W_WINDIR_UNIX=\"$W_DRIVE_C/windows\"\nENV W_SYSTEM64_DLLS=\"$W_WINDIR_UNIX/system32\"\nENV W_TMP=\"$W_DRIVE_C/windows/temp/_$0\"\n#   install Microsoft Visual C++ Redistributable for Visual Studio 2017 dll files\nRUN set -x \\\n && rm -f \"$W_TMP\"/* \\\n && wget -P \"$W_TMP\" https://download.visualstudio.microsoft.com/download/pr/11100230/15ccb3f02745c7b206ad10373cbca89b/VC_redist.x64.exe \\\n && cabextract -q --directory=\"$W_TMP\" \"$W_TMP\"/VC_redist.x64.exe \\\n && cabextract -q --directory=\"$W_TMP\" \"$W_TMP/a10\" \\\n && cabextract -q --directory=\"$W_TMP\" \"$W_TMP/a11\" \\\n && cd \"$W_TMP\" \\\n && rename 's/_/\\-/g' *.dll \\\n && cp \"$W_TMP\"/*.dll \"$W_SYSTEM64_DLLS\"/\n#   put the src folder inside wine\nRUN mkdir /src/ \\\n && ln -s /src /wine/drive_c/src\nVOLUME /src/\nWORKDIR /wine/drive_c/src/\nRUN mkdir -p /wine/drive_c/tmp\nRUN pip install pyinstaller==$PYINSTALLER_VERSION\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  MIT License\n#  Copyright (c) 2016 Chris R\n#  Permission is hereby granted, free of charge, to any person obtaining a copy\n#  of this software and associated documentation files (the \"Software\"), to deal\n#  in the Software without restriction, including without limitation the rights\n#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#  copies of the Software, and to permit persons to whom the Software is\n#  furnished to do so, subject to the following conditions:\n#  The above copyright notice and this permission notice shall be included in all\n#  copies or substantial portions of the Software.\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n#  SOFTWARE.\nFROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG WINE_VERSION=winehq-staging\nARG PYTHON_VERSION=3.6.4\nARG PYINSTALLER_VERSION=3.4\n#  we need wine for this all to work, so we'll use the PPA\nRUN set -x \\\n && dpkg --add-architecture i386 \\\n && apt-get update -qy \\\n && apt-get install --no-install-recommends apt-transport-https software-properties-common wget zip -qfy \\\n && wget -nv https://dl.winehq.org/wine-builds/winehq.key \\\n && apt-key add winehq.key \\\n && add-apt-repository 'https://dl.winehq.org/wine-builds/ubuntu/' \\\n && apt-get update -qy \\\n && apt-get install --no-install-recommends winbind cabextract $WINE_VERSION -qfy \\\n && apt-get clean \\\n && wget -nv https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks \\\n && chmod +x winetricks \\\n && mv winetricks /usr/local/bin\n#  wine settings\nENV WINEARCH=\"win64\"\nENV WINEDEBUG=\"fixme-all\"\nENV WINEPREFIX=\"/wine\"\n#  PYPI repository location\nENV PYPI_URL=\"https://pypi.python.org/\"\n#  PYPI index location\nENV PYPI_INDEX_URL=\"https://pypi.python.org/simple\"\n#  install python in wine, using the msi packages to install, extracting\n#  the files directly, since installing isn't running correctly.\nRUN set -x \\\n && winetricks win7 \\\n && for msifile in `echo core dev exe lib path pip tcltk tools `; do wget -nv \"https://www.python.org/ftp/python/$PYTHON_VERSION/amd64/${msifile}.msi\" ;wine msiexec /i \"${msifile}.msi\" /qb TARGETDIR=C:/Python36 ;rm ${msifile}.msi ; done \\\n && cd /wine/drive_c/Python36 \\\n && echo 'wine '''C:\\Python36\\python.exe''' \"$@\"' > /usr/bin/python \\\n && echo 'wine '''C:\\Python36\\Scripts\\easy_install.exe''' \"$@\"' > /usr/bin/easy_install \\\n && echo 'wine '''C:\\Python36\\Scripts\\pip.exe''' \"$@\"' > /usr/bin/pip \\\n && echo 'wine '''C:\\Python36\\Scripts\\pyinstaller.exe''' \"$@\"' > /usr/bin/pyinstaller \\\n && echo 'wine '''C:\\Python36\\Scripts\\pyupdater.exe''' \"$@\"' > /usr/bin/pyupdater \\\n && echo 'assoc .py=PythonScript' | wine cmd \\\n && echo 'ftype PythonScript=c:\\Python36\\python.exe \"%1\" %*' | wine cmd \\\n && while pgrep wineserver > /dev/null; do echo \"Waiting for wineserver\" ;sleep 1 ; done \\\n && chmod +x /usr/bin/python /usr/bin/easy_install /usr/bin/pip /usr/bin/pyinstaller /usr/bin/pyupdater \\\n && (pip install pip -U || true ) \\\n && rm -rf /tmp/.wine-*\nENV W_DRIVE_C=\"/wine/drive_c\"\nENV W_WINDIR_UNIX=\"$W_DRIVE_C/windows\"\nENV W_SYSTEM64_DLLS=\"$W_WINDIR_UNIX/system32\"\nENV W_TMP=\"$W_DRIVE_C/windows/temp/_$0\"\n#  install Microsoft Visual C++ Redistributable for Visual Studio 2017 dll files\nRUN set -x \\\n && rm -f \"$W_TMP\"/* \\\n && wget -P \"$W_TMP\" https://download.visualstudio.microsoft.com/download/pr/11100230/15ccb3f02745c7b206ad10373cbca89b/VC_redist.x64.exe \\\n && cabextract -q --directory=\"$W_TMP\" \"$W_TMP\"/VC_redist.x64.exe \\\n && cabextract -q --directory=\"$W_TMP\" \"$W_TMP/a10\" \\\n && cabextract -q --directory=\"$W_TMP\" \"$W_TMP/a11\" \\\n && cd \"$W_TMP\" \\\n && rename 's/_/\\-/g' *.dll \\\n && cp \"$W_TMP\"/*.dll \"$W_SYSTEM64_DLLS\"/\n#  put the src folder inside wine\nRUN mkdir /src/ \\\n && ln -s /src /wine/drive_c/src\nVOLUME /src/\nWORKDIR /wine/drive_c/src/\nRUN mkdir -p /wine/drive_c/tmp\nRUN pip install pyinstaller==$PYINSTALLER_VERSION\n","injectedSmells":[],"originalDockerfileHash":"f86558fcd52a4a479b82bfc27132470a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   MIT License\n#   Copyright (c) 2016 Chris R\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n#   of this software and associated documentation files (the \"Software\"), to deal\n#   in the Software without restriction, including without limitation the rights\n#   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the Software is\n#   furnished to do so, subject to the following conditions:\n#   The above copyright notice and this permission notice shall be included in all\n#   copies or substantial portions of the Software.\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n#   SOFTWARE.\nFROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG WINE_VERSION=winehq-staging\nARG PYTHON_VERSION=3.6.4\nARG PYINSTALLER_VERSION=3.4\n#   we need wine for this all to work, so we'll use the PPA\nRUN set -x \\\n && dpkg --add-architecture i386 \\\n && apt-get update -qy \\\n && apt-get install --no-install-recommends apt-transport-https software-properties-common wget zip -qfy \\\n && wget -nv https://dl.winehq.org/wine-builds/winehq.key \\\n && apt-key add winehq.key \\\n && add-apt-repository 'https://dl.winehq.org/wine-builds/ubuntu/' \\\n && apt-get update -qy \\\n && apt-get install --no-install-recommends winbind cabextract $WINE_VERSION -qfy \\\n && apt-get clean \\\n && wget -nv https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks \\\n && chmod +x winetricks \\\n && mv winetricks /usr/local/bin\n#   wine settings\nENV WINEARCH=\"win64\"\nENV WINEDEBUG=\"fixme-all\"\nENV WINEPREFIX=\"/wine\"\n#   PYPI repository location\nENV PYPI_URL=\"https://pypi.python.org/\"\n#   PYPI index location\nENV PYPI_INDEX_URL=\"https://pypi.python.org/simple\"\n#   install python in wine, using the msi packages to install, extracting\n#   the files directly, since installing isn't running correctly.\nRUN set -x \\\n && winetricks win7 \\\n && for msifile in `echo core dev exe lib path pip tcltk tools `; do wget -nv \"https://www.python.org/ftp/python/$PYTHON_VERSION/amd64/${msifile}.msi\" ;wine msiexec /i \"${msifile}.msi\" /qb TARGETDIR=C:/Python36 ;rm ${msifile}.msi ; done \\\n && cd /wine/drive_c/Python36 \\\n && echo 'wine '''C:Python36python.exe''' \"$@\"' > /usr/bin/python \\\n && echo 'wine '''C:Python36Scriptseasy_install.exe''' \"$@\"' > /usr/bin/easy_install \\\n && echo 'wine '''C:Python36Scriptspip.exe''' \"$@\"' > /usr/bin/pip \\\n && echo 'wine '''C:Python36Scriptspyinstaller.exe''' \"$@\"' > /usr/bin/pyinstaller \\\n && echo 'wine '''C:Python36Scriptspyupdater.exe''' \"$@\"' > /usr/bin/pyupdater \\\n && echo 'assoc .py=PythonScript' | wine cmd \\\n && echo 'ftype PythonScript=c:\\Python36\\python.exe \"%1\" %*' | wine cmd \\\n && while pgrep wineserver > /dev/null; do echo \"Waiting for wineserver\" ;sleep 1 ; done \\\n && chmod +x /usr/bin/python /usr/bin/easy_install /usr/bin/pip /usr/bin/pyinstaller /usr/bin/pyupdater \\\n && (pip install pip -U || true ) \\\n && rm -rf /tmp/.wine-*\nENV W_DRIVE_C=\"/wine/drive_c\"\nENV W_WINDIR_UNIX=\"$W_DRIVE_C/windows\"\nENV W_SYSTEM64_DLLS=\"$W_WINDIR_UNIX/system32\"\nENV W_TMP=\"$W_DRIVE_C/windows/temp/_$0\"\n#   install Microsoft Visual C++ Redistributable for Visual Studio 2017 dll files\nRUN set -x \\\n && rm -f \"$W_TMP\"/* \\\n && wget -P \"$W_TMP\" https://download.visualstudio.microsoft.com/download/pr/11100230/15ccb3f02745c7b206ad10373cbca89b/VC_redist.x64.exe \\\n && cabextract -q --directory=\"$W_TMP\" \"$W_TMP\"/VC_redist.x64.exe \\\n && cabextract -q --directory=\"$W_TMP\" \"$W_TMP/a10\" \\\n && cabextract -q --directory=\"$W_TMP\" \"$W_TMP/a11\" \\\n && cd \"$W_TMP\" \\\n && rename 's/_/\\-/g' *.dll \\\n && cp \"$W_TMP\"/*.dll \"$W_SYSTEM64_DLLS\"/\n#   put the src folder inside wine\nRUN mkdir /src/ \\\n && ln -s /src /wine/drive_c/src\nVOLUME /src/\nWORKDIR /wine/drive_c/src/\nRUN mkdir -p /wine/drive_c/tmp\nRUN pip install pyinstaller==$PYINSTALLER_VERSION\n","originalDockerfileUglifiedHash":"568d465a261e6721319016e43e853da1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fe16ac09feed850e17348df9f4da65f9e0d21cea.dockerfile"}