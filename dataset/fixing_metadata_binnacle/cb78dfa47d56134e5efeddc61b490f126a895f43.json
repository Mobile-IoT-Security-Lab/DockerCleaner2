{"seed":1987398287,"processedDockerfileHash":"aa0510b85aca949dc4f361c812f4fa1e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"FROM archlinux/base\n#  # Pacman config customization\n#   Use /tmp for package cache dir\nRUN sed -i s/#CacheDir/CacheDir/ /etc/pacman.conf\nRUN sed -i s/var/cache/tmp/ /etc/pacman.conf\n#  # Upgrade system\nRUN pacman -Suy --noconfirm\n#  # Install CircleCI dependencies\nRUN pacman -S --noconfirm awk binutils diffutils fakeroot file gcc git make\nRUN pacman -S --noconfirm pkg-config sudo tar yajl\n#  # Setup circleci user and group\nRUN groupadd -g 3434 circleci\nRUN useradd -u 3434 -g circleci -s /bin/bash --create-home circleci\nRUN echo 'circleci ALL=NOPASSWD: ALL' > /etc/sudoers.d/50-circleci\nUSER circleci\nWORKDIR /home/circleci\nRUN mkdir -p /home/circleci/.local/bin\nENV PATH=\"/home/circleci/.local/bin:$PATH\"\n#  # Install yaourt for easy access to AUR repos\nRUN git clone https://aur.archlinux.org/package-query.git\nRUN cd package-query \\\n && makepkg -si --noconfirm\nRUN git clone https://aur.archlinux.org/yaourt.git\nRUN cd yaourt \\\n && makepkg -si --noconfirm\nENV TERM=\"vt100\"\n#  # Install common language dependencies\nRUN yaourt -S --noconfirm glpk lua patch z3\nRUN echo \"/usr/bin/glpsol $* > /dev/null\" > /home/circleci/.local/bin/glpsol\nRUN chmod a+x /home/circleci/.local/bin/glpsol\n#  # Install languages\n#   Common Lisp\nRUN yaourt -S --noconfirm sbcl\n#   Crystal\nRUN yaourt -S --noconfirm crystal\n#   D\nRUN yaourt -S --noconfirm dmd\n#   Factor\nRUN yaourt -S --noconfirm factor\n#   JavaScript\nRUN yaourt -S --noconfirm nodejs\n#   Julia\nRUN yaourt -S --noconfirm julia\n#   Haxe\nRUN yaourt -S --noconfirm haxe\n#   Go\nRUN yaourt -S --noconfirm go\n#   MoonScript\nRUN yaourt -S --noconfirm moonscript\n#   Nim\n#   Package doesn't work properly, use choosenim instead\nRUN curl https://nim-lang.org/choosenim/init.sh -sSf > choosenim-init.sh\nRUN sh choosenim-init.sh -y\nENV PATH=\"/home/circleci/.nimble/bin:$PATH\"\n#   OCaml\nRUN yaourt -S --noconfirm ocaml\nRUN yaourt -S --noconfirm ocaml-base ocaml-bin_prot ocaml-configurator\nRUN yaourt -S --noconfirm ocaml-fieldslib ocaml-jane-street-headers\nRUN yaourt -S --noconfirm ocaml-ppx_assert ocaml-ppx_base ocaml-ppx_hash\nRUN yaourt -S --noconfirm ocaml-ppx_inline_test ocaml-ppx_jane\nRUN yaourt -S --noconfirm ocaml-ppx_sexp_conv ocaml-ppx_sexp_message\nRUN yaourt -S --noconfirm ocaml-sexplib ocaml-splittable_random ocaml-stdio\nRUN yaourt -S --noconfirm ocaml-typerep ocaml-variantslib\nRUN yaourt -S --noconfirm ocaml-migrate-parsetree ocaml-ppxlib ocaml-spawn\nRUN git clone https://github.com/abeaumont/aur-ocaml-core_kernel.git\nRUN cd aur-ocaml-core_kernel \\\n && makepkg -si --noconfirm\nRUN git clone https://github.com/abeaumont/aur-ocaml-core.git\nRUN cd aur-ocaml-core \\\n && makepkg -si --noconfirm\n#   ooc\nRUN yaourt -S --noconfirm rock\n#   OpenDylan\nRUN yaourt -S --noconfirm opendylan\nENV OPEN_DYLAN_USER_ROOT=\"/home/circleci/.od\"\nRUN make-dylan-app dylan-prebuild\nRUN dylan-compiler -build dylan-prebuild/dylan-prebuild.lid\n#   Picat\nRUN yaourt -S --noconfirm picat\n#   Pony\nRUN yaourt -S --noconfirm ponyc\n#   Python2\nRUN yaourt -S --noconfirm python2\n#   Python3\nRUN yaourt -S --noconfirm --needed python python-numpy python-scipy\n#   PyPy 3\nRUN yaourt -S --noconfirm pypy3\n#   Racket\nRUN yaourt -S --noconfirm racket\n#   Ruby\nRUN yaourt -S --noconfirm ruby\n#   Rust\nRUN yaourt -S --noconfirm rust\n#   Standard ML\nRUN yaourt -S --noconfirm mlton\n#   Stanza\nRUN git clone https://github.com/abeaumont/aur-stanza.git\nRUN cd aur-stanza \\\n && makepkg -si --noconfirm\nRUN cd /opt/stanza/ \\\n && ./stanza install -platform linux\n#   Wren\nRUN yaourt -S --noconfirm wren\n#   Zig\nRUN yaourt -S --noconfirm zig-git\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM archlinux/base\n# # Pacman config customization\n#  Use /tmp for package cache dir\nRUN sed -i s/#CacheDir/CacheDir/ /etc/pacman.conf\nRUN sed -i s/var\\/cache/tmp/ /etc/pacman.conf\n# # Upgrade system\nRUN pacman -Suy --noconfirm\n# # Install CircleCI dependencies\nRUN pacman -S --noconfirm awk binutils diffutils fakeroot file gcc git make\nRUN pacman -S --noconfirm pkg-config sudo tar yajl\n# # Setup circleci user and group\nRUN groupadd -g 3434 circleci\nRUN useradd -u 3434 -g circleci -s /bin/bash --create-home circleci\nRUN echo 'circleci ALL=NOPASSWD: ALL' > /etc/sudoers.d/50-circleci\nUSER circleci\nWORKDIR /home/circleci\nRUN mkdir -p /home/circleci/.local/bin\nENV PATH=\"/home/circleci/.local/bin:$PATH\"\n# # Install yaourt for easy access to AUR repos\nRUN git clone https://aur.archlinux.org/package-query.git\nRUN cd package-query \\\n && makepkg -si --noconfirm\nRUN git clone https://aur.archlinux.org/yaourt.git\nRUN cd yaourt \\\n && makepkg -si --noconfirm\nENV TERM=\"vt100\"\n# # Install common language dependencies\nRUN yaourt -S --noconfirm glpk lua patch z3\nRUN echo \"/usr/bin/glpsol $* > /dev/null\" > /home/circleci/.local/bin/glpsol\nRUN chmod a+x /home/circleci/.local/bin/glpsol\n# # Install languages\n#  Common Lisp\nRUN yaourt -S --noconfirm sbcl\n#  Crystal\nRUN yaourt -S --noconfirm crystal\n#  D\nRUN yaourt -S --noconfirm dmd\n#  Factor\nRUN yaourt -S --noconfirm factor\n#  JavaScript\nRUN yaourt -S --noconfirm nodejs\n#  Julia\nRUN yaourt -S --noconfirm julia\n#  Haxe\nRUN yaourt -S --noconfirm haxe\n#  Go\nRUN yaourt -S --noconfirm go\n#  MoonScript\nRUN yaourt -S --noconfirm moonscript\n#  Nim\n#  Package doesn't work properly, use choosenim instead\nRUN curl https://nim-lang.org/choosenim/init.sh -sSf > choosenim-init.sh\nRUN sh choosenim-init.sh -y\nENV PATH=\"/home/circleci/.nimble/bin:$PATH\"\n#  OCaml\nRUN yaourt -S --noconfirm ocaml\nRUN yaourt -S --noconfirm ocaml-base ocaml-bin_prot ocaml-configurator\nRUN yaourt -S --noconfirm ocaml-fieldslib ocaml-jane-street-headers\nRUN yaourt -S --noconfirm ocaml-ppx_assert ocaml-ppx_base ocaml-ppx_hash\nRUN yaourt -S --noconfirm ocaml-ppx_inline_test ocaml-ppx_jane\nRUN yaourt -S --noconfirm ocaml-ppx_sexp_conv ocaml-ppx_sexp_message\nRUN yaourt -S --noconfirm ocaml-sexplib ocaml-splittable_random ocaml-stdio\nRUN yaourt -S --noconfirm ocaml-typerep ocaml-variantslib\nRUN yaourt -S --noconfirm ocaml-migrate-parsetree ocaml-ppxlib ocaml-spawn\nRUN git clone https://github.com/abeaumont/aur-ocaml-core_kernel.git\nRUN cd aur-ocaml-core_kernel \\\n && makepkg -si --noconfirm\nRUN git clone https://github.com/abeaumont/aur-ocaml-core.git\nRUN cd aur-ocaml-core \\\n && makepkg -si --noconfirm\n#  ooc\nRUN yaourt -S --noconfirm rock\n#  OpenDylan\nRUN yaourt -S --noconfirm opendylan\nENV OPEN_DYLAN_USER_ROOT=\"/home/circleci/.od\"\nRUN make-dylan-app dylan-prebuild\nRUN dylan-compiler -build dylan-prebuild/dylan-prebuild.lid\n#  Picat\nRUN yaourt -S --noconfirm picat\n#  Pony\nRUN yaourt -S --noconfirm ponyc\n#  Python2\nRUN yaourt -S --noconfirm python2\n#  Python3\nRUN yaourt -S --noconfirm --needed python python-numpy python-scipy\n#  PyPy 3\nRUN yaourt -S --noconfirm pypy3\n#  Racket\nRUN yaourt -S --noconfirm racket\n#  Ruby\nRUN yaourt -S --noconfirm ruby\n#  Rust\nRUN yaourt -S --noconfirm rust\n#  Standard ML\nRUN yaourt -S --noconfirm mlton\n#  Stanza\nRUN git clone https://github.com/abeaumont/aur-stanza.git\nRUN cd aur-stanza \\\n && makepkg -si --noconfirm\nRUN cd /opt/stanza/ \\\n && ./stanza install -platform linux\n#  Wren\nRUN yaourt -S --noconfirm wren\n#  Zig\nRUN yaourt -S --noconfirm zig-git\n","injectedSmells":[],"originalDockerfileHash":"331eb742a5ba8a7c50b1665076754a8f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM archlinux/base\n#  # Pacman config customization\n#   Use /tmp for package cache dir\nRUN sed -i s/#CacheDir/CacheDir/ /etc/pacman.conf\nRUN sed -i s/var/cache/tmp/ /etc/pacman.conf\n#  # Upgrade system\nRUN pacman -Suy --noconfirm\n#  # Install CircleCI dependencies\nRUN pacman -S --noconfirm awk binutils diffutils fakeroot file gcc git make\nRUN pacman -S --noconfirm pkg-config sudo tar yajl\n#  # Setup circleci user and group\nRUN groupadd -g 3434 circleci\nRUN useradd -u 3434 -g circleci -s /bin/bash --create-home circleci\nRUN echo 'circleci ALL=NOPASSWD: ALL' > /etc/sudoers.d/50-circleci\nUSER circleci\nWORKDIR /home/circleci\nRUN mkdir -p /home/circleci/.local/bin\nENV PATH=\"/home/circleci/.local/bin:$PATH\"\n#  # Install yaourt for easy access to AUR repos\nRUN git clone https://aur.archlinux.org/package-query.git\nRUN cd package-query \\\n && makepkg -si --noconfirm\nRUN git clone https://aur.archlinux.org/yaourt.git\nRUN cd yaourt \\\n && makepkg -si --noconfirm\nENV TERM=\"vt100\"\n#  # Install common language dependencies\nRUN yaourt -S --noconfirm glpk lua patch z3\nRUN echo \"/usr/bin/glpsol $* > /dev/null\" > /home/circleci/.local/bin/glpsol\nRUN chmod a+x /home/circleci/.local/bin/glpsol\n#  # Install languages\n#   Common Lisp\nRUN yaourt -S --noconfirm sbcl\n#   Crystal\nRUN yaourt -S --noconfirm crystal\n#   D\nRUN yaourt -S --noconfirm dmd\n#   Factor\nRUN yaourt -S --noconfirm factor\n#   JavaScript\nRUN yaourt -S --noconfirm nodejs\n#   Julia\nRUN yaourt -S --noconfirm julia\n#   Haxe\nRUN yaourt -S --noconfirm haxe\n#   Go\nRUN yaourt -S --noconfirm go\n#   MoonScript\nRUN yaourt -S --noconfirm moonscript\n#   Nim\n#   Package doesn't work properly, use choosenim instead\nRUN curl https://nim-lang.org/choosenim/init.sh -sSf > choosenim-init.sh\nRUN sh choosenim-init.sh -y\nENV PATH=\"/home/circleci/.nimble/bin:$PATH\"\n#   OCaml\nRUN yaourt -S --noconfirm ocaml\nRUN yaourt -S --noconfirm ocaml-base ocaml-bin_prot ocaml-configurator\nRUN yaourt -S --noconfirm ocaml-fieldslib ocaml-jane-street-headers\nRUN yaourt -S --noconfirm ocaml-ppx_assert ocaml-ppx_base ocaml-ppx_hash\nRUN yaourt -S --noconfirm ocaml-ppx_inline_test ocaml-ppx_jane\nRUN yaourt -S --noconfirm ocaml-ppx_sexp_conv ocaml-ppx_sexp_message\nRUN yaourt -S --noconfirm ocaml-sexplib ocaml-splittable_random ocaml-stdio\nRUN yaourt -S --noconfirm ocaml-typerep ocaml-variantslib\nRUN yaourt -S --noconfirm ocaml-migrate-parsetree ocaml-ppxlib ocaml-spawn\nRUN git clone https://github.com/abeaumont/aur-ocaml-core_kernel.git\nRUN cd aur-ocaml-core_kernel \\\n && makepkg -si --noconfirm\nRUN git clone https://github.com/abeaumont/aur-ocaml-core.git\nRUN cd aur-ocaml-core \\\n && makepkg -si --noconfirm\n#   ooc\nRUN yaourt -S --noconfirm rock\n#   OpenDylan\nRUN yaourt -S --noconfirm opendylan\nENV OPEN_DYLAN_USER_ROOT=\"/home/circleci/.od\"\nRUN make-dylan-app dylan-prebuild\nRUN dylan-compiler -build dylan-prebuild/dylan-prebuild.lid\n#   Picat\nRUN yaourt -S --noconfirm picat\n#   Pony\nRUN yaourt -S --noconfirm ponyc\n#   Python2\nRUN yaourt -S --noconfirm python2\n#   Python3\nRUN yaourt -S --noconfirm --needed python python-numpy python-scipy\n#   PyPy 3\nRUN yaourt -S --noconfirm pypy3\n#   Racket\nRUN yaourt -S --noconfirm racket\n#   Ruby\nRUN yaourt -S --noconfirm ruby\n#   Rust\nRUN yaourt -S --noconfirm rust\n#   Standard ML\nRUN yaourt -S --noconfirm mlton\n#   Stanza\nRUN git clone https://github.com/abeaumont/aur-stanza.git\nRUN cd aur-stanza \\\n && makepkg -si --noconfirm\nRUN cd /opt/stanza/ \\\n && ./stanza install -platform linux\n#   Wren\nRUN yaourt -S --noconfirm wren\n#   Zig\nRUN yaourt -S --noconfirm zig-git\n","originalDockerfileUglifiedHash":"4c29eacd49e68d650cc87803b5cce50c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cb78dfa47d56134e5efeddc61b490f126a895f43.dockerfile"}