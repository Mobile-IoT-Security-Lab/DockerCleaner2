{"seed":968138514,"processedDockerfileHash":"47f09695953007ff929f629fab3f0ab7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Use an official Python runtime as a parent image\nFROM python:3.7-slim-stretch\n#   add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r zeus \\\n && useradd -r -m -g zeus zeus\nENV PATH=\"/usr/src/zeus/bin:/root/.poetry/bin:$PATH\"\nENV NODE_ENV=\"production\"\nENV PYTHONUNBUFFERED=\"1\"\n#   Sane defaults for pip\nENV PIP_NO_CACHE_DIR=\"off\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"on\"\nRUN mkdir -p /usr/src/zeus\nWORKDIR /usr/src/zeus\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates curl gcc git gosu libffi-dev libpq-dev libxml2-dev libxslt-dev openssl ssh wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install node and yarn\n#   gpg keys listed at https://github.com/nodejs/node\nARG YARN_VERSION=1.13.0\nENV YARN_VERSION=\"$YARN_VERSION\"\nARG NODE_VERSION=8.11.3\nENV NODE_VERSION=\"$NODE_VERSION\"\nRUN set -x \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && export NPM_CONFIG_CACHE=\"$( mktemp -d ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends dirmngr gnupg -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D 9554F04D7259F04124DE6B476D5A82AC7E37093B 93C7E9E91B49E432C2F75674B0A78B0A6C481CF6 56730D5401028683275BD23C23EFEFE93C4CFFFE 114F43EE0176B71C7BC219DD50A3051F888C628D 7937DFD2AB06298B2293C3187D33FF9D0246406D; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && wget --no-verbose \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n && wget --no-verbose \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --verify SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n && rm -rf \"$GNUPGHOME\" \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n && apt-get purge -y --auto-remove dirmngr gnupg \\\n && npm install yarn@$YARN_VERSION -g \\\n && rm -r \"$NPM_CONFIG_CACHE\"\nRUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/0.12.14/get-poetry.py | python \\\n && poetry config settings.virtualenvs.create false\nCOPY pyproject.toml /usr/src/zeus/\nCOPY poetry.lock /usr/src/zeus/\nRUN poetry install --no-dev\nCOPY yarn.lock /usr/src/zeus/\nCOPY package.json /usr/src/zeus/\nRUN export YARN_CACHE_FOLDER=\"$( mktemp -d ;)\" \\\n && yarn install --production --pure-lockfile --ignore-optional \\\n && rm -r \"$YARN_CACHE_FOLDER\"\nCOPY . /usr/src/zeus\n#   # we run poetry install again to ensure the 'zeus' module gets installed\nRUN poetry install --no-dev\nRUN node_modules/.bin/webpack -p\nENV WORKSPACE_ROOT=\"/workspace\"\nENV REPO_ROOT=\"/workspace/repos\"\nRUN mkdir -p $WORKSPACE_ROOT $REPO_ROOT\nARG BUILD_REVISION\nENV BUILD_REVISION=\"$BUILD_REVISION\"\n#   Make port 8080 available to the world outside this container\nEXPOSE 8080/tcp\nEXPOSE 8090/tcp\nVOLUME /workspace\nENTRYPOINT [\"docker-entrypoint\"]\n#   Run Zeus\nCMD [\"zeus\", \"run\", \"--host=0.0.0.0\", \"--port=8080\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Use an official Python runtime as a parent image\nFROM python:3.7-slim-stretch\n#  add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r zeus \\\n && useradd -r -m -g zeus zeus\nENV PATH=\"/usr/src/zeus/bin:/root/.poetry/bin:$PATH\"\nENV NODE_ENV=\"production\"\nENV PYTHONUNBUFFERED=\"1\"\n#  Sane defaults for pip\nENV PIP_NO_CACHE_DIR=\"off\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"on\"\nRUN mkdir -p /usr/src/zeus\nWORKDIR /usr/src/zeus\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates curl gcc git gosu libffi-dev libpq-dev libxml2-dev libxslt-dev openssl ssh wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#  install node and yarn\n#  gpg keys listed at https://github.com/nodejs/node\nARG YARN_VERSION=1.13.0\nENV YARN_VERSION=\"$YARN_VERSION\"\nARG NODE_VERSION=8.11.3\nENV NODE_VERSION=\"$NODE_VERSION\"\nRUN set -x \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && export NPM_CONFIG_CACHE=\"$( mktemp -d ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends dirmngr gnupg -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D 9554F04D7259F04124DE6B476D5A82AC7E37093B 93C7E9E91B49E432C2F75674B0A78B0A6C481CF6 56730D5401028683275BD23C23EFEFE93C4CFFFE 114F43EE0176B71C7BC219DD50A3051F888C628D 7937DFD2AB06298B2293C3187D33FF9D0246406D; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && wget --no-verbose \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n && wget --no-verbose \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --verify SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n && rm -rf \"$GNUPGHOME\" \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n && apt-get purge -y --auto-remove dirmngr gnupg \\\n && npm install yarn@$YARN_VERSION -g \\\n && rm -r \"$NPM_CONFIG_CACHE\"\nRUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/0.12.14/get-poetry.py | python \\\n && poetry config settings.virtualenvs.create false\nCOPY pyproject.toml /usr/src/zeus/\nCOPY poetry.lock /usr/src/zeus/\nRUN poetry install --no-dev\nCOPY yarn.lock /usr/src/zeus/\nCOPY package.json /usr/src/zeus/\nRUN export YARN_CACHE_FOLDER=\"$( mktemp -d ;)\" \\\n && yarn install --production --pure-lockfile --ignore-optional \\\n && rm -r \"$YARN_CACHE_FOLDER\"\nCOPY . /usr/src/zeus\n#  # we run poetry install again to ensure the 'zeus' module gets installed\nRUN poetry install --no-dev\nRUN node_modules/.bin/webpack -p\nENV WORKSPACE_ROOT=\"/workspace\"\nENV REPO_ROOT=\"/workspace/repos\"\nRUN mkdir -p $WORKSPACE_ROOT $REPO_ROOT\nARG BUILD_REVISION\nENV BUILD_REVISION=\"$BUILD_REVISION\"\n#  Make port 8080 available to the world outside this container\nEXPOSE 8080/tcp\nEXPOSE 8090/tcp\nVOLUME /workspace\nENTRYPOINT [\"docker-entrypoint\"]\n#  Run Zeus\nCMD [\"zeus\", \"run\", \"--host=0.0.0.0\", \"--port=8080\"]\n","injectedSmells":[],"originalDockerfileHash":"20961cdb79cefa45e68da64039b49f12","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Use an official Python runtime as a parent image\nFROM python:3.7-slim-stretch\n#   add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r zeus \\\n && useradd -r -m -g zeus zeus\nENV PATH=\"/usr/src/zeus/bin:/root/.poetry/bin:$PATH\"\nENV NODE_ENV=\"production\"\nENV PYTHONUNBUFFERED=\"1\"\n#   Sane defaults for pip\nENV PIP_NO_CACHE_DIR=\"off\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=\"on\"\nRUN mkdir -p /usr/src/zeus\nWORKDIR /usr/src/zeus\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates curl gcc git gosu libffi-dev libpq-dev libxml2-dev libxslt-dev openssl ssh wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install node and yarn\n#   gpg keys listed at https://github.com/nodejs/node\nARG YARN_VERSION=1.13.0\nENV YARN_VERSION=\"$YARN_VERSION\"\nARG NODE_VERSION=8.11.3\nENV NODE_VERSION=\"$NODE_VERSION\"\nRUN set -x \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && export NPM_CONFIG_CACHE=\"$( mktemp -d ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends dirmngr gnupg -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D 9554F04D7259F04124DE6B476D5A82AC7E37093B 93C7E9E91B49E432C2F75674B0A78B0A6C481CF6 56730D5401028683275BD23C23EFEFE93C4CFFFE 114F43EE0176B71C7BC219DD50A3051F888C628D 7937DFD2AB06298B2293C3187D33FF9D0246406D; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && wget --no-verbose \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n && wget --no-verbose \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --verify SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n && rm -rf \"$GNUPGHOME\" \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n && apt-get purge -y --auto-remove dirmngr gnupg \\\n && npm install yarn@$YARN_VERSION -g \\\n && rm -r \"$NPM_CONFIG_CACHE\"\nRUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/0.12.14/get-poetry.py | python \\\n && poetry config settings.virtualenvs.create false\nCOPY pyproject.toml /usr/src/zeus/\nCOPY poetry.lock /usr/src/zeus/\nRUN poetry install --no-dev\nCOPY yarn.lock /usr/src/zeus/\nCOPY package.json /usr/src/zeus/\nRUN export YARN_CACHE_FOLDER=\"$( mktemp -d ;)\" \\\n && yarn install --production --pure-lockfile --ignore-optional \\\n && rm -r \"$YARN_CACHE_FOLDER\"\nCOPY . /usr/src/zeus\n#   # we run poetry install again to ensure the 'zeus' module gets installed\nRUN poetry install --no-dev\nRUN node_modules/.bin/webpack -p\nENV WORKSPACE_ROOT=\"/workspace\"\nENV REPO_ROOT=\"/workspace/repos\"\nRUN mkdir -p $WORKSPACE_ROOT $REPO_ROOT\nARG BUILD_REVISION\nENV BUILD_REVISION=\"$BUILD_REVISION\"\n#   Make port 8080 available to the world outside this container\nEXPOSE 8080/tcp\nEXPOSE 8090/tcp\nVOLUME /workspace\nENTRYPOINT [\"docker-entrypoint\"]\n#   Run Zeus\nCMD [\"zeus\", \"run\", \"--host=0.0.0.0\", \"--port=8080\"]\n","originalDockerfileUglifiedHash":"ef87773a80b352727dfdb007e1d373a1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f1b8a2a651a4016943734035e4079249312da03d.dockerfile"}