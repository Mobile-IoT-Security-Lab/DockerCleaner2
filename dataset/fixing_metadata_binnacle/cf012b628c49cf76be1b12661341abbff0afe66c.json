{"seed":559814630,"processedDockerfileHash":"03703a30a3ae5997774cb5364ce52003","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   centos6 php7.0.14\n#  FROM centos:centos6.8\nFROM daocloud.io/centos:6.8\nMAINTAINER yjc@52fhy.com\n#   php\nENV PHP_VERSION=\"7.0.14\"\nENV PHP_URL=\"http://cn2.php.net/distributions/php-${PHP_VERSION}.tar.bz2\"\n#   nginx\nENV NGINX_VERSION=\"1.12.2\"\n#   redis\nENV REDIS_VER=\"3.2.6\"\n#   php-ext\t\nENV SWOOLE_VER=\"1.10.1\"\n#   https://github.com/swoole/swoole-src/archive/v1.10.1.tar.gz\nENV PHPREDIS_VER=\"3.0.0\"\nENV YAR_VER=\"2.0.2\"\nENV PHP_INI_FILE=\"/usr/local/php/etc/php.ini\"\nCOPY libmcrypt-2.5.8.tar.gz /libmcrypt-2.5.8.tar.gz\nCOPY mcrypt-2.6.8.tar.gz /mcrypt-2.6.8.tar.gz\nCOPY mhash-0.9.9.9.tar.gz /mhash-0.9.9.9.tar.gz\nCOPY nginx-${NGINX_VERSION}.tar.gz /nginx-${NGINX_VERSION}.tar.gz\nCOPY swoole-src-${SWOOLE_VER}.tar.gz /${SWOOLE_VER}.tar.gz\nCOPY redis-${REDIS_VER}.tar.gz /redis-${REDIS_VER}.tar.gz\nCOPY phpredis-${PHPREDIS_VER}.tar.gz /phpredis-${PHPREDIS_VER}.tar.gz\nCOPY yar-${YAR_VER}.tgz /yar-${YAR_VER}.tgz\nENV TZ=\"Asia/Shanghai\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\nRUN yum install -y gcc gcc-c++ bison autoconf wget lrzsz \\\n && yum install -y make cmake libtool libtool-ltdl-devel \\\n && yum install -y libjpeg-devel libpng-devel freetype-devel gd-devel \\\n && yum install -y python-devel patch \\\n && yum install -y openssl openssl-devel ncurses-devel \\\n && yum install -y bzip2 bzip2-devel.x86_64 unzip zlib-devel \\\n && yum install -y libxml2 libxml2-devel \\\n && yum install -y curl-devel \\\n && yum install -y readline-devel \\\n && yum install -y pcre-devel \\\n && yum clean all\n#     RUN wget -O /libmcrypt-2.5.8.tar.gz ftp://mcrypt.hellug.gr/pub/crypto/mcrypt/libmcrypt/libmcrypt-2.5.7.tar.gz \\\nRUN tar zxvf /libmcrypt-2.5.8.tar.gz \\\n && cd /libmcrypt-2.5.8 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd - / \\\n && rm -rf /libmcrypt* \\\n && tar zxvf /mhash-0.9.9.9.tar.gz \\\n && cd mhash-0.9.9.9 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd - / \\\n && rm -rf /mhash* \\\n && tar zxvf /mcrypt-2.6.8.tar.gz \\\n && cd mcrypt-2.6.8 \\\n && LD_LIBRARY_PATH=/usr/local/lib ./configure \\\n && make \\\n && make install \\\n && cd - / \\\n && rm -rf /mcrypt*\nRUN wget -O /php-${PHP_VERSION}.tar.bz2 \"$PHP_URL\" \\\n && tar jxvf /php-${PHP_VERSION}.tar.bz2 \\\n && cd php-${PHP_VERSION}/ \\\n && ./configure --prefix=/usr/local/php --with-config-file-scan-dir=/usr/local/php/etc/ --enable-inline-optimization --enable-opcache --enable-session --enable-fpm --with-fpm-user=www --with-fpm-group=www --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-pdo-sqlite --with-sqlite3 --with-gettext --enable-mbregex --enable-mbstring --enable-xml --with-iconv --with-mcrypt --with-mhash --with-openssl --enable-bcmath --enable-soap --with-xmlrpc --with-libxml-dir --enable-pcntl --enable-shmop --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-sockets --with-curl --with-curlwrappers --with-zlib --enable-zip --with-bz2 --with-gd --enable-gd-native-ttf --with-jpeg-dir --with-png-dir --with-freetype-dir --with-iconv-dir --with-readline \\\n && make \\\n && make install \\\n && cp php.ini-production php.ini \\\n && cp php.ini* /usr/local/php/etc/ \\\n && cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf \\\n && cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf \\\n && make clean \\\n && yum clean all \\\n && cd - \\\n && rm -rf /php-${PHP_VERSION}* \\\n && ln -sf /usr/local/php/bin/* /usr/bin/ \\\n && ln -sf /usr/local/php/sbin/* /usr/bin/ \\\n && sed -i \"s/;date.timezone =/date.timezone =PRC/\" /usr/local/php/etc/php.ini\nRUN useradd www\n#  RUN wget -O /nginx-${NGINX_VERSION}.tar.gz http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \\\nRUN echo 'install nginx' \\\n && tar zxvf /nginx-${NGINX_VERSION}.tar.gz \\\n && cd nginx-${NGINX_VERSION} \\\n && ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_realip_module --with-http_sub_module --with-http_gzip_static_module --with-pcre \\\n && make \\\n && make install \\\n && ln -sf /usr/local/nginx/sbin/nginx /usr/bin \\\n && make clean \\\n && yum clean all \\\n && cd ../ \\\n && rm -rf nginx-${NGINX_VERSION}*\n#  RUN wget https://github.com/swoole/swoole-src/archive/swoole-src-${SWOOLE_VER}.tar.gz \\\nRUN echo 'install swoole' \\\n && tar xzf /${SWOOLE_VER}.tar.gz \\\n && cd swoole-src-${SWOOLE_VER} \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=swoole.so\" >> \"$PHP_INI_FILE\" \\\n && cd ../ \\\n && rm -rf swoole-src-${SWOOLE_VER}*\n#  RUN wget https://codeload.github.com/phpredis/phpredis/tar.gz/${PHPREDIS_VER}.tar.gz\\\nRUN echo 'install phpredis' \\\n && tar xzf /phpredis-${PHPREDIS_VER}.tar.gz \\\n && cd phpredis-${PHPREDIS_VER}/ \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=redis.so\" >> \"$PHP_INI_FILE\" \\\n && cd ../ \\\n && rm -rf phpredis-${PHPREDIS_VER}*\nRUN echo 'install yar' \\\n && tar xzf /yar-${YAR_VER}.tgz \\\n && cd yar-${YAR_VER}/ \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=yar.so\" >> \"$PHP_INI_FILE\" \\\n && cd ../ \\\n && rm -rf yar-${YAR_VER}*\n#  RUN wget http://download.redis.io/releases/redis-${REDIS_VER}.tar.gz \\\nRUN echo 'install redis' \\\n && tar xzf /redis-${REDIS_VER}.tar.gz \\\n && cd redis-${REDIS_VER} \\\n && make \\\n && mkdir /usr/local/redis \\\n && cp redis.conf /usr/local/redis/ \\\n && cd src \\\n && cp redis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server redis-trib.rb /usr/local/redis \\\n && cd ../ \\\n && rm -rf redis-${REDIS_VER}*\nCOPY ./run.sh /run.sh\nRUN chmod 755 /run.sh\nCMD /run.sh \\\n && tail -f\nEXPOSE 80/tcp\nEXPOSE 9000/tcp\n#  docker build -t php70-fpm-centos68 .\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  centos6 php7.0.14\n# FROM centos:centos6.8\nFROM daocloud.io/centos:6.8\nMAINTAINER yjc@52fhy.com\n#  php\nENV PHP_VERSION=\"7.0.14\"\nENV PHP_URL=\"http://cn2.php.net/distributions/php-${PHP_VERSION}.tar.bz2\"\n#  nginx\nENV NGINX_VERSION=\"1.12.2\"\n#  redis\nENV REDIS_VER=\"3.2.6\"\n#  php-ext\t\nENV SWOOLE_VER=\"1.10.1\"\n#  https://github.com/swoole/swoole-src/archive/v1.10.1.tar.gz\nENV PHPREDIS_VER=\"3.0.0\"\nENV YAR_VER=\"2.0.2\"\nENV PHP_INI_FILE=\"/usr/local/php/etc/php.ini\"\nCOPY libmcrypt-2.5.8.tar.gz /libmcrypt-2.5.8.tar.gz\nCOPY mcrypt-2.6.8.tar.gz /mcrypt-2.6.8.tar.gz\nCOPY mhash-0.9.9.9.tar.gz /mhash-0.9.9.9.tar.gz\nCOPY nginx-${NGINX_VERSION}.tar.gz /nginx-${NGINX_VERSION}.tar.gz\nCOPY swoole-src-${SWOOLE_VER}.tar.gz /${SWOOLE_VER}.tar.gz\nCOPY redis-${REDIS_VER}.tar.gz /redis-${REDIS_VER}.tar.gz\nCOPY phpredis-${PHPREDIS_VER}.tar.gz /phpredis-${PHPREDIS_VER}.tar.gz\nCOPY yar-${YAR_VER}.tgz /yar-${YAR_VER}.tgz\nENV TZ=\"Asia/Shanghai\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\nRUN yum install -y gcc gcc-c++ bison autoconf wget lrzsz \\\n && yum install -y make cmake libtool libtool-ltdl-devel \\\n && yum install -y libjpeg-devel libpng-devel freetype-devel gd-devel \\\n && yum install -y python-devel patch \\\n && yum install -y openssl openssl-devel ncurses-devel \\\n && yum install -y bzip2 bzip2-devel.x86_64 unzip zlib-devel \\\n && yum install -y libxml2 libxml2-devel \\\n && yum install -y curl-devel \\\n && yum install -y readline-devel \\\n && yum install -y pcre-devel \\\n && yum clean all\n#    RUN wget -O /libmcrypt-2.5.8.tar.gz ftp://mcrypt.hellug.gr/pub/crypto/mcrypt/libmcrypt/libmcrypt-2.5.7.tar.gz \\\nRUN tar zxvf /libmcrypt-2.5.8.tar.gz \\\n && cd /libmcrypt-2.5.8 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd - / \\\n && rm -rf /libmcrypt* \\\n && tar zxvf /mhash-0.9.9.9.tar.gz \\\n && cd mhash-0.9.9.9 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd - / \\\n && rm -rf /mhash* \\\n && tar zxvf /mcrypt-2.6.8.tar.gz \\\n && cd mcrypt-2.6.8 \\\n && LD_LIBRARY_PATH=/usr/local/lib ./configure \\\n && make \\\n && make install \\\n && cd - / \\\n && rm -rf /mcrypt*\nRUN wget -O /php-${PHP_VERSION}.tar.bz2 \"$PHP_URL\" \\\n && tar jxvf /php-${PHP_VERSION}.tar.bz2 \\\n && cd php-${PHP_VERSION}/ \\\n && ./configure --prefix=/usr/local/php --with-config-file-scan-dir=/usr/local/php/etc/ --enable-inline-optimization --enable-opcache --enable-session --enable-fpm --with-fpm-user=www --with-fpm-group=www --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-pdo-sqlite --with-sqlite3 --with-gettext --enable-mbregex --enable-mbstring --enable-xml --with-iconv --with-mcrypt --with-mhash --with-openssl --enable-bcmath --enable-soap --with-xmlrpc --with-libxml-dir --enable-pcntl --enable-shmop --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-sockets --with-curl --with-curlwrappers --with-zlib --enable-zip --with-bz2 --with-gd --enable-gd-native-ttf --with-jpeg-dir --with-png-dir --with-freetype-dir --with-iconv-dir --with-readline \\\n && make \\\n && make install \\\n && cp php.ini-production php.ini \\\n && cp php.ini* /usr/local/php/etc/ \\\n && cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf \\\n && cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf \\\n && make clean \\\n && yum clean all \\\n && cd - \\\n && rm -rf /php-${PHP_VERSION}* \\\n && ln -sf /usr/local/php/bin/* /usr/bin/ \\\n && ln -sf /usr/local/php/sbin/* /usr/bin/ \\\n && sed -i \"s/;date.timezone =/date.timezone =PRC/\" /usr/local/php/etc/php.ini\nRUN useradd www\n# RUN wget -O /nginx-${NGINX_VERSION}.tar.gz http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \\\nRUN echo 'install nginx' \\\n && tar zxvf /nginx-${NGINX_VERSION}.tar.gz \\\n && cd nginx-${NGINX_VERSION} \\\n && ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_realip_module --with-http_sub_module --with-http_gzip_static_module --with-pcre \\\n && make \\\n && make install \\\n && ln -sf /usr/local/nginx/sbin/nginx /usr/bin \\\n && make clean \\\n && yum clean all \\\n && cd ../ \\\n && rm -rf nginx-${NGINX_VERSION}*\n# RUN wget https://github.com/swoole/swoole-src/archive/swoole-src-${SWOOLE_VER}.tar.gz \\\nRUN echo 'install swoole' \\\n && tar xzf /${SWOOLE_VER}.tar.gz \\\n && cd swoole-src-${SWOOLE_VER} \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=swoole.so\" >> \"$PHP_INI_FILE\" \\\n && cd ../ \\\n && rm -rf swoole-src-${SWOOLE_VER}*\n# RUN wget https://codeload.github.com/phpredis/phpredis/tar.gz/${PHPREDIS_VER}.tar.gz\\\nRUN echo 'install phpredis' \\\n && tar xzf /phpredis-${PHPREDIS_VER}.tar.gz \\\n && cd phpredis-${PHPREDIS_VER}/ \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=redis.so\" >> \"$PHP_INI_FILE\" \\\n && cd ../ \\\n && rm -rf phpredis-${PHPREDIS_VER}*\nRUN echo 'install yar' \\\n && tar xzf /yar-${YAR_VER}.tgz \\\n && cd yar-${YAR_VER}/ \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=yar.so\" >> \"$PHP_INI_FILE\" \\\n && cd ../ \\\n && rm -rf yar-${YAR_VER}*\n# RUN wget http://download.redis.io/releases/redis-${REDIS_VER}.tar.gz \\\nRUN echo 'install redis' \\\n && tar xzf /redis-${REDIS_VER}.tar.gz \\\n && cd redis-${REDIS_VER} \\\n && make \\\n && mkdir /usr/local/redis \\\n && cp redis.conf /usr/local/redis/ \\\n && cd src \\\n && cp redis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server redis-trib.rb /usr/local/redis \\\n && cd ../ \\\n && rm -rf redis-${REDIS_VER}*\nADD ./run.sh /run.sh\nRUN chmod 755 /run.sh\nCMD /run.sh \\\n && tail -f\nEXPOSE 80/tcp\nEXPOSE 9000/tcp\n# docker build -t php70-fpm-centos68 .\n","injectedSmells":[],"originalDockerfileHash":"815c5049058ceeff7ec3353d215e17e6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   centos6 php7.0.14\n#  FROM centos:centos6.8\nFROM daocloud.io/centos:6.8\nMAINTAINER yjc@52fhy.com\n#   php\nENV PHP_VERSION=\"7.0.14\"\nENV PHP_URL=\"http://cn2.php.net/distributions/php-${PHP_VERSION}.tar.bz2\"\n#   nginx\nENV NGINX_VERSION=\"1.12.2\"\n#   redis\nENV REDIS_VER=\"3.2.6\"\n#   php-ext\t\nENV SWOOLE_VER=\"1.10.1\"\n#   https://github.com/swoole/swoole-src/archive/v1.10.1.tar.gz\nENV PHPREDIS_VER=\"3.0.0\"\nENV YAR_VER=\"2.0.2\"\nENV PHP_INI_FILE=\"/usr/local/php/etc/php.ini\"\nCOPY libmcrypt-2.5.8.tar.gz /libmcrypt-2.5.8.tar.gz\nCOPY mcrypt-2.6.8.tar.gz /mcrypt-2.6.8.tar.gz\nCOPY mhash-0.9.9.9.tar.gz /mhash-0.9.9.9.tar.gz\nCOPY nginx-${NGINX_VERSION}.tar.gz /nginx-${NGINX_VERSION}.tar.gz\nCOPY swoole-src-${SWOOLE_VER}.tar.gz /${SWOOLE_VER}.tar.gz\nCOPY redis-${REDIS_VER}.tar.gz /redis-${REDIS_VER}.tar.gz\nCOPY phpredis-${PHPREDIS_VER}.tar.gz /phpredis-${PHPREDIS_VER}.tar.gz\nCOPY yar-${YAR_VER}.tgz /yar-${YAR_VER}.tgz\nENV TZ=\"Asia/Shanghai\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\nRUN yum install -y gcc gcc-c++ bison autoconf wget lrzsz \\\n && yum install -y make cmake libtool libtool-ltdl-devel \\\n && yum install -y libjpeg-devel libpng-devel freetype-devel gd-devel \\\n && yum install -y python-devel patch \\\n && yum install -y openssl openssl-devel ncurses-devel \\\n && yum install -y bzip2 bzip2-devel.x86_64 unzip zlib-devel \\\n && yum install -y libxml2 libxml2-devel \\\n && yum install -y curl-devel \\\n && yum install -y readline-devel \\\n && yum install -y pcre-devel \\\n && yum clean all\n#     RUN wget -O /libmcrypt-2.5.8.tar.gz ftp://mcrypt.hellug.gr/pub/crypto/mcrypt/libmcrypt/libmcrypt-2.5.7.tar.gz \\\nRUN tar zxvf /libmcrypt-2.5.8.tar.gz \\\n && cd /libmcrypt-2.5.8 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd - / \\\n && rm -rf /libmcrypt* \\\n && tar zxvf /mhash-0.9.9.9.tar.gz \\\n && cd mhash-0.9.9.9 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd - / \\\n && rm -rf /mhash* \\\n && tar zxvf /mcrypt-2.6.8.tar.gz \\\n && cd mcrypt-2.6.8 \\\n && LD_LIBRARY_PATH=/usr/local/lib ./configure \\\n && make \\\n && make install \\\n && cd - / \\\n && rm -rf /mcrypt*\nRUN wget -O /php-${PHP_VERSION}.tar.bz2 \"$PHP_URL\" \\\n && tar jxvf /php-${PHP_VERSION}.tar.bz2 \\\n && cd php-${PHP_VERSION}/ \\\n && ./configure --prefix=/usr/local/php --with-config-file-scan-dir=/usr/local/php/etc/ --enable-inline-optimization --enable-opcache --enable-session --enable-fpm --with-fpm-user=www --with-fpm-group=www --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-pdo-sqlite --with-sqlite3 --with-gettext --enable-mbregex --enable-mbstring --enable-xml --with-iconv --with-mcrypt --with-mhash --with-openssl --enable-bcmath --enable-soap --with-xmlrpc --with-libxml-dir --enable-pcntl --enable-shmop --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-sockets --with-curl --with-curlwrappers --with-zlib --enable-zip --with-bz2 --with-gd --enable-gd-native-ttf --with-jpeg-dir --with-png-dir --with-freetype-dir --with-iconv-dir --with-readline \\\n && make \\\n && make install \\\n && cp php.ini-production php.ini \\\n && cp php.ini* /usr/local/php/etc/ \\\n && cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf \\\n && cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf \\\n && make clean \\\n && yum clean all \\\n && cd - \\\n && rm -rf /php-${PHP_VERSION}* \\\n && ln -sf /usr/local/php/bin/* /usr/bin/ \\\n && ln -sf /usr/local/php/sbin/* /usr/bin/ \\\n && sed -i \"s/;date.timezone =/date.timezone =PRC/\" /usr/local/php/etc/php.ini\nRUN useradd www\n#  RUN wget -O /nginx-${NGINX_VERSION}.tar.gz http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \\\nRUN echo 'install nginx' \\\n && tar zxvf /nginx-${NGINX_VERSION}.tar.gz \\\n && cd nginx-${NGINX_VERSION} \\\n && ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_realip_module --with-http_sub_module --with-http_gzip_static_module --with-pcre \\\n && make \\\n && make install \\\n && ln -sf /usr/local/nginx/sbin/nginx /usr/bin \\\n && make clean \\\n && yum clean all \\\n && cd ../ \\\n && rm -rf nginx-${NGINX_VERSION}*\n#  RUN wget https://github.com/swoole/swoole-src/archive/swoole-src-${SWOOLE_VER}.tar.gz \\\nRUN echo 'install swoole' \\\n && tar xzf /${SWOOLE_VER}.tar.gz \\\n && cd swoole-src-${SWOOLE_VER} \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=swoole.so\" >> \"$PHP_INI_FILE\" \\\n && cd ../ \\\n && rm -rf swoole-src-${SWOOLE_VER}*\n#  RUN wget https://codeload.github.com/phpredis/phpredis/tar.gz/${PHPREDIS_VER}.tar.gz\\\nRUN echo 'install phpredis' \\\n && tar xzf /phpredis-${PHPREDIS_VER}.tar.gz \\\n && cd phpredis-${PHPREDIS_VER}/ \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=redis.so\" >> \"$PHP_INI_FILE\" \\\n && cd ../ \\\n && rm -rf phpredis-${PHPREDIS_VER}*\nRUN echo 'install yar' \\\n && tar xzf /yar-${YAR_VER}.tgz \\\n && cd yar-${YAR_VER}/ \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=yar.so\" >> \"$PHP_INI_FILE\" \\\n && cd ../ \\\n && rm -rf yar-${YAR_VER}*\n#  RUN wget http://download.redis.io/releases/redis-${REDIS_VER}.tar.gz \\\nRUN echo 'install redis' \\\n && tar xzf /redis-${REDIS_VER}.tar.gz \\\n && cd redis-${REDIS_VER} \\\n && make \\\n && mkdir /usr/local/redis \\\n && cp redis.conf /usr/local/redis/ \\\n && cd src \\\n && cp redis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel redis-server redis-trib.rb /usr/local/redis \\\n && cd ../ \\\n && rm -rf redis-${REDIS_VER}*\nADD ./run.sh /run.sh\nRUN chmod 755 /run.sh\nCMD /run.sh \\\n && tail -f\nEXPOSE 80/tcp\nEXPOSE 9000/tcp\n#  docker build -t php70-fpm-centos68 .\n","originalDockerfileUglifiedHash":"5f7a48c70345f06bbe91b968eba44ebc","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cf012b628c49cf76be1b12661341abbff0afe66c.dockerfile"}