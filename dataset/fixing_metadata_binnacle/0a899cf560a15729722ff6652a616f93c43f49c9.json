{"seed":3912408242,"processedDockerfileHash":"87ba05a168570cafc2cef31f63f05b48","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:17.10 AS BUILD\nMAINTAINER source{d}\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends curl git bc make dpkg-dev libssl-dev module-init-tools p7zip-full libelf-dev -y \\\n && apt-get autoremove \\\n && apt-get clean\nARG COREOS_RELEASE_CHANNEL=stable\nARG COREOS_VERSION\nARG NVIDIA_DRIVER_VERSION\nARG KERNEL_VERSION\nARG KERNEL_TAG\nENV KERNEL_PATH=\"/usr/src/kernels/linux\"\nENV KERNEL_REPOSITORY=\"git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git\"\nENV COREOS_RELEASE_URL=\"https://${COREOS_RELEASE_CHANNEL}.release.core-os.net/amd64-usr/${COREOS_VERSION}\"\nRUN git clone ${KERNEL_REPOSITORY} --single-branch --depth 1 --branch v${KERNEL_TAG} ${KERNEL_PATH}\nWORKDIR ${KERNEL_PATH}\nRUN git checkout -b stable v${KERNEL_TAG} \\\n && rm -rf .git\nRUN curl ${COREOS_RELEASE_URL}/coreos_developer_container.bin.bz2 | bzip2 -d > /tmp/coreos_developer_container.bin\nRUN 7z e /tmp/coreos_developer_container.bin \"usr/lib64/modules/*-coreos*/build/.config\"\nRUN 7z e /tmp/coreos_developer_container.bin \"usr/lib64/modules/*-coreos*/build/include/config/kernel.release\" \\\n && cp kernel.release /tmp/kernel.release\nRUN make modules_prepare\nRUN sed -i -e \"s/${KERNEL_VERSION}/$( cat /tmp/kernel.release ;)/\" include/generated/utsrelease.h\nENV NVIDIA_DRIVER_URL=\"http://us.download.nvidia.com/XFree86/Linux-x86_64/${NVIDIA_DRIVER_VERSION}/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run\"\nENV NVIDIA_PATH=\"/opt/nvidia\"\nENV NVIDIA_BUILD_PATH=\"/opt/nvidia/build\"\n#   NVIDIA driver\nWORKDIR ${NVIDIA_PATH}/download\nRUN curl ${NVIDIA_DRIVER_URL} -o driver.run \\\n && chmod +x driver.run\nRUN ${NVIDIA_PATH}/download/driver.run --accept-license --extract-only --ui=none\nENV NVIDIA_INSTALLER=\"/opt/nvidia/download/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}/nvidia-installer\"\nRUN ${NVIDIA_INSTALLER} --accept-license --no-questions --ui=none --no-precompiled-interface --kernel-source-path=${KERNEL_PATH} --kernel-name=$( cat /tmp/kernel.release ;) --installer-prefix=${NVIDIA_BUILD_PATH} --utility-prefix=${NVIDIA_BUILD_PATH} --opengl-prefix=${NVIDIA_BUILD_PATH}\nRUN mkdir ${NVIDIA_BUILD_PATH}/lib/modules/ \\\n && cp -rf /lib/modules/$( cat /tmp/kernel.release ;) ${NVIDIA_BUILD_PATH}/lib/modules/${KERNEL_VERSION}\nFROM ubuntu:17.10\nMAINTAINER source{d}\nARG COREOS_RELEASE_CHANNEL=stable\nARG COREOS_VERSION\nARG KERNEL_VERSION\nARG NVIDIA_DRIVER_VERSION\nLABEL vendor=\"source{d}\" \\\n      com.coreos.release-channel=\"${COREOS_RELEASE_CHANNEL}\" \\\n      com.coreos.version=\"${COREOS_VERSION}\" \\\n      com.coreos.kernel.version=\"${KERNEL_VERSION}\" \\\n      com.nvidia.driver.version=\"${NVIDIA_DRIVER_VERSION}\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends module-init-tools pciutils -y \\\n && apt-get autoremove \\\n && apt-get clean\nENV COREOS_RELEASE_CHANNEL=\"${COREOS_RELEASE_CHANNEL}\"\nENV COREOS_VERSION=\"${COREOS_VERSION}\"\nENV NVIDIA_DRIVER_VERSION=\"${NVIDIA_DRIVER_VERSION}\"\nENV KERNEL_VERSION=\"${KERNEL_VERSION}\"\nENV NVIDIA_PATH=\"/opt/nvidia\"\nENV NVIDIA_BIN_PATH=\"${NVIDIA_PATH}/bin\"\nENV NVIDIA_LIB_PATH=\"${NVIDIA_PATH}/lib\"\nENV NVIDIA_MODULES_PATH=\"${NVIDIA_LIB_PATH}/modules/${KERNEL_VERSION}/video\"\nCOPY --from=BUILD /opt/nvidia/build ${NVIDIA_PATH}\nCOPY scripts/nvidia-mkdevs ${NVIDIA_BIN_PATH}/nvidia-mkdevs\nENV PATH=\"$PATH:${NVIDIA_BIN_PATH}\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:${NVIDIA_LIB_PATH}\"\nVOLUME ${NVIDIA_PATH}\nCMD if ! lsmod | grep \"ipmi_msghandler\" &> /dev/null; then insmod `find /rootfs/usr -iname ipmi_msghandler.ko ` ; fi\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:17.10 AS BUILD\nMAINTAINER source{d}\nRUN apt-get update -y \\\n && apt-get install curl git bc make dpkg-dev libssl-dev module-init-tools p7zip-full libelf-dev -y \\\n && apt-get autoremove \\\n && apt-get clean\nARG COREOS_RELEASE_CHANNEL=stable\nARG COREOS_VERSION\nARG NVIDIA_DRIVER_VERSION\nARG KERNEL_VERSION\nARG KERNEL_TAG\nENV KERNEL_PATH=\"/usr/src/kernels/linux\"\nENV KERNEL_REPOSITORY=\"git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git\"\nENV COREOS_RELEASE_URL=\"https://${COREOS_RELEASE_CHANNEL}.release.core-os.net/amd64-usr/${COREOS_VERSION}\"\nRUN git clone ${KERNEL_REPOSITORY} --single-branch --depth 1 --branch v${KERNEL_TAG} ${KERNEL_PATH}\nWORKDIR ${KERNEL_PATH}\nRUN git checkout -b stable v${KERNEL_TAG} \\\n && rm -rf .git\nRUN curl ${COREOS_RELEASE_URL}/coreos_developer_container.bin.bz2 | bzip2 -d > /tmp/coreos_developer_container.bin\nRUN 7z e /tmp/coreos_developer_container.bin \"usr/lib64/modules/*-coreos*/build/.config\"\nRUN 7z e /tmp/coreos_developer_container.bin \"usr/lib64/modules/*-coreos*/build/include/config/kernel.release\" \\\n && cp kernel.release /tmp/kernel.release\nRUN make modules_prepare\nRUN sed -i -e \"s/${KERNEL_VERSION}/$( cat /tmp/kernel.release ;)/\" include/generated/utsrelease.h\nENV NVIDIA_DRIVER_URL=\"http://us.download.nvidia.com/XFree86/Linux-x86_64/${NVIDIA_DRIVER_VERSION}/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run\"\nENV NVIDIA_PATH=\"/opt/nvidia\"\nENV NVIDIA_BUILD_PATH=\"/opt/nvidia/build\"\n#  NVIDIA driver\nWORKDIR ${NVIDIA_PATH}/download\nRUN curl ${NVIDIA_DRIVER_URL} -o driver.run \\\n && chmod +x driver.run\nRUN ${NVIDIA_PATH}/download/driver.run --accept-license --extract-only --ui=none\nENV NVIDIA_INSTALLER=\"/opt/nvidia/download/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}/nvidia-installer\"\nRUN ${NVIDIA_INSTALLER} --accept-license --no-questions --ui=none --no-precompiled-interface --kernel-source-path=${KERNEL_PATH} --kernel-name=$( cat /tmp/kernel.release ;) --installer-prefix=${NVIDIA_BUILD_PATH} --utility-prefix=${NVIDIA_BUILD_PATH} --opengl-prefix=${NVIDIA_BUILD_PATH}\nRUN mkdir ${NVIDIA_BUILD_PATH}/lib/modules/ \\\n && cp -rf /lib/modules/$( cat /tmp/kernel.release ;) ${NVIDIA_BUILD_PATH}/lib/modules/${KERNEL_VERSION}\nFROM ubuntu:17.10\nMAINTAINER source{d}\nARG COREOS_RELEASE_CHANNEL=stable\nARG COREOS_VERSION\nARG KERNEL_VERSION\nARG NVIDIA_DRIVER_VERSION\nLABEL vendor=\"source{d}\" \\\n      com.coreos.release-channel=\"${COREOS_RELEASE_CHANNEL}\" \\\n      com.coreos.version=\"${COREOS_VERSION}\" \\\n      com.coreos.kernel.version=\"${KERNEL_VERSION}\" \\\n      com.nvidia.driver.version=\"${NVIDIA_DRIVER_VERSION}\"\nRUN apt-get update -y \\\n && apt-get install module-init-tools pciutils -y \\\n && apt-get autoremove \\\n && apt-get clean\nENV COREOS_RELEASE_CHANNEL=\"${COREOS_RELEASE_CHANNEL}\"\nENV COREOS_VERSION=\"${COREOS_VERSION}\"\nENV NVIDIA_DRIVER_VERSION=\"${NVIDIA_DRIVER_VERSION}\"\nENV KERNEL_VERSION=\"${KERNEL_VERSION}\"\nENV NVIDIA_PATH=\"/opt/nvidia\"\nENV NVIDIA_BIN_PATH=\"${NVIDIA_PATH}/bin\"\nENV NVIDIA_LIB_PATH=\"${NVIDIA_PATH}/lib\"\nENV NVIDIA_MODULES_PATH=\"${NVIDIA_LIB_PATH}/modules/${KERNEL_VERSION}/video\"\nCOPY --from=BUILD /opt/nvidia/build ${NVIDIA_PATH}\nCOPY scripts/nvidia-mkdevs ${NVIDIA_BIN_PATH}/nvidia-mkdevs\nENV PATH=\"$PATH:${NVIDIA_BIN_PATH}\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:${NVIDIA_LIB_PATH}\"\nVOLUME ${NVIDIA_PATH}\nCMD if ! lsmod | grep \"ipmi_msghandler\" &> /dev/null; then insmod `find /rootfs/usr -iname ipmi_msghandler.ko ` ; fi\n","injectedSmells":[],"originalDockerfileHash":"4ab1786855074a69fa9abe96e9329cb2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:17.10 AS BUILD\nMAINTAINER source{d}\nRUN apt-get update -y \\\n && apt-get install curl git bc make dpkg-dev libssl-dev module-init-tools p7zip-full libelf-dev -y \\\n && apt-get autoremove \\\n && apt-get clean\nARG COREOS_RELEASE_CHANNEL=stable\nARG COREOS_VERSION\nARG NVIDIA_DRIVER_VERSION\nARG KERNEL_VERSION\nARG KERNEL_TAG\nENV KERNEL_PATH=\"/usr/src/kernels/linux\"\nENV KERNEL_REPOSITORY=\"git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git\"\nENV COREOS_RELEASE_URL=\"https://${COREOS_RELEASE_CHANNEL}.release.core-os.net/amd64-usr/${COREOS_VERSION}\"\nRUN git clone ${KERNEL_REPOSITORY} --single-branch --depth 1 --branch v${KERNEL_TAG} ${KERNEL_PATH}\nWORKDIR ${KERNEL_PATH}\nRUN git checkout -b stable v${KERNEL_TAG} \\\n && rm -rf .git\nRUN curl ${COREOS_RELEASE_URL}/coreos_developer_container.bin.bz2 | bzip2 -d > /tmp/coreos_developer_container.bin\nRUN 7z e /tmp/coreos_developer_container.bin \"usr/lib64/modules/*-coreos*/build/.config\"\nRUN 7z e /tmp/coreos_developer_container.bin \"usr/lib64/modules/*-coreos*/build/include/config/kernel.release\" \\\n && cp kernel.release /tmp/kernel.release\nRUN make modules_prepare\nRUN sed -i -e \"s/${KERNEL_VERSION}/$( cat /tmp/kernel.release ;)/\" include/generated/utsrelease.h\nENV NVIDIA_DRIVER_URL=\"http://us.download.nvidia.com/XFree86/Linux-x86_64/${NVIDIA_DRIVER_VERSION}/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run\"\nENV NVIDIA_PATH=\"/opt/nvidia\"\nENV NVIDIA_BUILD_PATH=\"/opt/nvidia/build\"\n#   NVIDIA driver\nWORKDIR ${NVIDIA_PATH}/download\nRUN curl ${NVIDIA_DRIVER_URL} -o driver.run \\\n && chmod +x driver.run\nRUN ${NVIDIA_PATH}/download/driver.run --accept-license --extract-only --ui=none\nENV NVIDIA_INSTALLER=\"/opt/nvidia/download/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}/nvidia-installer\"\nRUN ${NVIDIA_INSTALLER} --accept-license --no-questions --ui=none --no-precompiled-interface --kernel-source-path=${KERNEL_PATH} --kernel-name=$( cat /tmp/kernel.release ;) --installer-prefix=${NVIDIA_BUILD_PATH} --utility-prefix=${NVIDIA_BUILD_PATH} --opengl-prefix=${NVIDIA_BUILD_PATH}\nRUN mkdir ${NVIDIA_BUILD_PATH}/lib/modules/ \\\n && cp -rf /lib/modules/$( cat /tmp/kernel.release ;) ${NVIDIA_BUILD_PATH}/lib/modules/${KERNEL_VERSION}\nFROM ubuntu:17.10\nMAINTAINER source{d}\nARG COREOS_RELEASE_CHANNEL=stable\nARG COREOS_VERSION\nARG KERNEL_VERSION\nARG NVIDIA_DRIVER_VERSION\nLABEL vendor=\"source{d}\" \\\n      com.coreos.release-channel=\"${COREOS_RELEASE_CHANNEL}\" \\\n      com.coreos.version=\"${COREOS_VERSION}\" \\\n      com.coreos.kernel.version=\"${KERNEL_VERSION}\" \\\n      com.nvidia.driver.version=\"${NVIDIA_DRIVER_VERSION}\"\nRUN apt-get update -y \\\n && apt-get install module-init-tools pciutils -y \\\n && apt-get autoremove \\\n && apt-get clean\nENV COREOS_RELEASE_CHANNEL=\"${COREOS_RELEASE_CHANNEL}\"\nENV COREOS_VERSION=\"${COREOS_VERSION}\"\nENV NVIDIA_DRIVER_VERSION=\"${NVIDIA_DRIVER_VERSION}\"\nENV KERNEL_VERSION=\"${KERNEL_VERSION}\"\nENV NVIDIA_PATH=\"/opt/nvidia\"\nENV NVIDIA_BIN_PATH=\"${NVIDIA_PATH}/bin\"\nENV NVIDIA_LIB_PATH=\"${NVIDIA_PATH}/lib\"\nENV NVIDIA_MODULES_PATH=\"${NVIDIA_LIB_PATH}/modules/${KERNEL_VERSION}/video\"\nCOPY --from=BUILD /opt/nvidia/build ${NVIDIA_PATH}\nCOPY scripts/nvidia-mkdevs ${NVIDIA_BIN_PATH}/nvidia-mkdevs\nENV PATH=\"$PATH:${NVIDIA_BIN_PATH}\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:${NVIDIA_LIB_PATH}\"\nVOLUME ${NVIDIA_PATH}\nCMD if ! lsmod | grep \"ipmi_msghandler\" &> /dev/null; then insmod `find /rootfs/usr -iname ipmi_msghandler.ko ` ; fi\n","originalDockerfileUglifiedHash":"bc0f1983ae7d06ac78270aa3749b55ac","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0a899cf560a15729722ff6652a616f93c43f49c9.dockerfile"}