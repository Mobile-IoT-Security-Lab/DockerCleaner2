{"seed":3072217634,"processedDockerfileHash":"e80f8258f720730618cab06a94aec42b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2015 gRPC authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM debian:jessie\n#   Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf autotools-dev build-essential bzip2 ccache curl dnsutils gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n#  ================\n#   Build profiling\nRUN apt-get update \\\n && apt-get install --no-install-recommends time -y \\\n && apt-get clean\n#   Google Cloud platform API libraries\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip -y \\\n && apt-get clean\nRUN pip install google-api-python-client==2.85.0 oauth2client==4.1.3 --upgrade\n#  ====================\n#   Python dependencies\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-all-dev python3-all-dev python-pip -y\n#   Install Python packages from PyPI\nRUN pip install pip==10.0.1 --upgrade\nRUN pip install virtualenv==20.21.0\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0\n#  =================\n#   C++ dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends libgflags-dev libgtest-dev libc++-dev clang -y \\\n && apt-get clean\n#  =================\n#   Use cmake 3.6 from jessie-backports\n#   should only be used for images based on debian jessie.\nRUN echo \"deb http://archive.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/jessie-backports.list\nRUN echo 'Acquire::Check-Valid-Until \"false\";' > /etc/apt/apt.conf\nRUN sed -i '/deb http:\\/\\/deb.debian.org\\/debian jessie-updates main/d' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends jessie-backports cmake -t -y \\\n && apt-get clean\n#  =================\n#   Update clang to a version with improved tsan and fuzzing capabilities\nRUN git clone -n -b release_38 http://llvm.org/git/llvm.git \\\n && cd llvm \\\n && git checkout ad57503 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/clang.git \\\n && cd clang \\\n && git checkout ad2c56e \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/compiler-rt.git \\\n && cd compiler-rt \\\n && git checkout 3176922 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/clang-tools-extra.git \\\n && cd clang-tools-extra \\\n && git checkout c288525 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/libcxx.git \\\n && cd libcxx \\\n && git checkout fda3549 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/libcxxabi.git \\\n && cd libcxxabi \\\n && git checkout 8d4e51d \\\n && cd ..\nRUN mv clang llvm/tools\nRUN mv compiler-rt llvm/projects\nRUN mv clang-tools-extra llvm/tools/clang/tools\nRUN mv libcxx llvm/projects\nRUN mv libcxxabi llvm/projects\nRUN mkdir llvm-build\nRUN cd llvm-build \\\n && cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:STRING=/usr -DLLVM_TARGETS_TO_BUILD:STRING=X86 ../llvm\nRUN make -C llvm-build -j 12 \\\n && make -C llvm-build install \\\n && rm -rf llvm-build\nRUN mkdir /var/local/jenkins\nRUN clang++ -c -g -O2 -std=c++11 llvm/lib/Fuzzer/*.cpp -IFuzzer\nRUN ar ruv libFuzzer.a Fuzzer*.o\nRUN mv libFuzzer.a /usr/lib\nRUN rm -f Fuzzer*.o\n#   Define the default command.\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2015 gRPC authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM debian:jessie\n#  Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl dnsutils gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n# ================\n#  Build profiling\nRUN apt-get update \\\n && apt-get install time -y \\\n && apt-get clean\n#  Google Cloud platform API libraries\nRUN apt-get update \\\n && apt-get install python-pip -y \\\n && apt-get clean\nRUN pip install google-api-python-client oauth2client --upgrade\n# ====================\n#  Python dependencies\n#  Install dependencies\nRUN apt-get update \\\n && apt-get install python-all-dev python3-all-dev python-pip -y\n#  Install Python packages from PyPI\nRUN pip install pip==10.0.1 --upgrade\nRUN pip install virtualenv\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0\n# =================\n#  C++ dependencies\nRUN apt-get update \\\n && apt-get install libgflags-dev libgtest-dev libc++-dev clang -y \\\n && apt-get clean\n# =================\n#  Use cmake 3.6 from jessie-backports\n#  should only be used for images based on debian jessie.\nRUN echo \"deb http://archive.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/jessie-backports.list\nRUN echo 'Acquire::Check-Valid-Until \"false\";' > /etc/apt/apt.conf\nRUN sed -i '/deb http:\\/\\/deb.debian.org\\/debian jessie-updates main/d' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install jessie-backports cmake -t -y \\\n && apt-get clean\n# =================\n#  Update clang to a version with improved tsan and fuzzing capabilities\nRUN git clone -n -b release_38 http://llvm.org/git/llvm.git \\\n && cd llvm \\\n && git checkout ad57503 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/clang.git \\\n && cd clang \\\n && git checkout ad2c56e \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/compiler-rt.git \\\n && cd compiler-rt \\\n && git checkout 3176922 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/clang-tools-extra.git \\\n && cd clang-tools-extra \\\n && git checkout c288525 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/libcxx.git \\\n && cd libcxx \\\n && git checkout fda3549 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/libcxxabi.git \\\n && cd libcxxabi \\\n && git checkout 8d4e51d \\\n && cd ..\nRUN mv clang llvm/tools\nRUN mv compiler-rt llvm/projects\nRUN mv clang-tools-extra llvm/tools/clang/tools\nRUN mv libcxx llvm/projects\nRUN mv libcxxabi llvm/projects\nRUN mkdir llvm-build\nRUN cd llvm-build \\\n && cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:STRING=/usr -DLLVM_TARGETS_TO_BUILD:STRING=X86 ../llvm\nRUN make -C llvm-build -j 12 \\\n && make -C llvm-build install \\\n && rm -rf llvm-build\nRUN mkdir /var/local/jenkins\nRUN clang++ -c -g -O2 -std=c++11 llvm/lib/Fuzzer/*.cpp -IFuzzer\nRUN ar ruv libFuzzer.a Fuzzer*.o\nRUN mv libFuzzer.a /usr/lib\nRUN rm -f Fuzzer*.o\n#  Define the default command.\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"a8224618510e4ce38997109ab71e5222","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2015 gRPC authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM debian:jessie\n#   Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl dnsutils gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n#  ================\n#   Build profiling\nRUN apt-get update \\\n && apt-get install time -y \\\n && apt-get clean\n#   Google Cloud platform API libraries\nRUN apt-get update \\\n && apt-get install python-pip -y \\\n && apt-get clean\nRUN pip install google-api-python-client oauth2client --upgrade\n#  ====================\n#   Python dependencies\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install python-all-dev python3-all-dev python-pip -y\n#   Install Python packages from PyPI\nRUN pip install pip==10.0.1 --upgrade\nRUN pip install virtualenv\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0\n#  =================\n#   C++ dependencies\nRUN apt-get update \\\n && apt-get install libgflags-dev libgtest-dev libc++-dev clang -y \\\n && apt-get clean\n#  =================\n#   Use cmake 3.6 from jessie-backports\n#   should only be used for images based on debian jessie.\nRUN echo \"deb http://archive.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/jessie-backports.list\nRUN echo 'Acquire::Check-Valid-Until \"false\";' > /etc/apt/apt.conf\nRUN sed -i '/deb http:\\/\\/deb.debian.org\\/debian jessie-updates main/d' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install jessie-backports cmake -t -y \\\n && apt-get clean\n#  =================\n#   Update clang to a version with improved tsan and fuzzing capabilities\nRUN git clone -n -b release_38 http://llvm.org/git/llvm.git \\\n && cd llvm \\\n && git checkout ad57503 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/clang.git \\\n && cd clang \\\n && git checkout ad2c56e \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/compiler-rt.git \\\n && cd compiler-rt \\\n && git checkout 3176922 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/clang-tools-extra.git \\\n && cd clang-tools-extra \\\n && git checkout c288525 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/libcxx.git \\\n && cd libcxx \\\n && git checkout fda3549 \\\n && cd ..\nRUN git clone -n -b release_38 http://llvm.org/git/libcxxabi.git \\\n && cd libcxxabi \\\n && git checkout 8d4e51d \\\n && cd ..\nRUN mv clang llvm/tools\nRUN mv compiler-rt llvm/projects\nRUN mv clang-tools-extra llvm/tools/clang/tools\nRUN mv libcxx llvm/projects\nRUN mv libcxxabi llvm/projects\nRUN mkdir llvm-build\nRUN cd llvm-build \\\n && cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:STRING=/usr -DLLVM_TARGETS_TO_BUILD:STRING=X86 ../llvm\nRUN make -C llvm-build -j 12 \\\n && make -C llvm-build install \\\n && rm -rf llvm-build\nRUN mkdir /var/local/jenkins\nRUN clang++ -c -g -O2 -std=c++11 llvm/lib/Fuzzer/*.cpp -IFuzzer\nRUN ar ruv libFuzzer.a Fuzzer*.o\nRUN mv libFuzzer.a /usr/lib\nRUN rm -f Fuzzer*.o\n#   Define the default command.\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"4967b1838c8677736b56b355bfbfb27f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f9dd948a1b311a2814fa782c60bb3478552a0eae.dockerfile"}