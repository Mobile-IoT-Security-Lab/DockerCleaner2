{"seed":3454915084,"processedDockerfileHash":"a023b293bc2c03a4a96764fea303e59c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM i386/debian:stretch-backports\n#  ###############################################################################\n#  ## set metadata\nENV TOOL_NAME=\"msconvert\"\nENV TOOL_VERSION=\"3.0.18205\"\nENV CONTAINER_VERSION=\"1.3\"\nENV CONTAINER_GITHUB=\"https://github.com/phnmnl/container-pwiz\"\nLABEL version=\"1.3\"\nLABEL software.version=\"3.0.18205\"\nLABEL software=\"msconvert\"\nLABEL base.image=\"i386/debian:stretch-backports\"\nLABEL description=\"Convert LC/MS or GC/MS RAW vendor files to mzML.\"\nLABEL website=\"https://github.com/phnmnl/container-pwiz\"\nLABEL documentation=\"https://github.com/phnmnl/container-pwiz\"\nLABEL license=\"https://github.com/phnmnl/container-pwiz\"\nLABEL tags=\"Metabolomics\"\n#   we need wget, bzip2, wine from winehq, \n#   xvfb to fake X11 for winetricks during installation,\n#   and winbind because wine complains about missing \nRUN apt-get update \\\n && apt-get install --no-install-recommends wget gnupg -y \\\n && echo \"deb http://dl.winehq.org/wine-builds/debian/ stretch main\" >> /etc/apt/sources.list.d/winehq.list \\\n && wget http://dl.winehq.org/wine-builds/winehq.key -qO- | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends bzip2 unzip curl winehq-devel winbind xvfb cabextract -y --install-recommends \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/* /usr/share/doc /usr/share/doc-base /usr/share/man /usr/share/locale /usr/share/zoneinfo \\\n && wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks -O /usr/local/bin/winetricks \\\n && chmod +x /usr/local/bin/winetricks\n#   put C:\\pwiz on the Windows search path\nENV WINEARCH=\"win32\"\nENV WINEDEBUG=\"-all,err+all\"\nENV WINEPATH=\"\\\"C:\\pwiz\\\"\"\nENV DISPLAY=\":0\"\n#   To be singularity friendly, avoid installing anything to /root\nRUN mkdir /wineprefix/\nENV WINEPREFIX=\"/wineprefix\"\nWORKDIR /wineprefix\n#   wineserver needs to shut down properly!!! \nCOPY waitonprocess.sh /wineprefix/waitonprocess.sh\nRUN chmod +x waitonprocess.sh\n#   Install dependencies\nRUN winetricks -q win7 \\\n && xvfb-run winetricks -q vcrun2008 corefonts \\\n && xvfb-run winetricks -q dotnet452 \\\n && xvfb-run winetricks --force -q dotnet462 \\\n && ./waitonprocess.sh wineserver\n#\n#   download ProteoWizard and extract it to C:\\pwiz\n#\n#   Pull latest version from TeamCity\nRUN wget -O- \"https://teamcity.labkey.org/httpAuth/app/rest/builds/?locator=buildType:bt36,status:success,running:false,count:1&guest=1\" | sed -e 's#.*build id=\\\"\\([0-9]*\\)\\\".*#\\1#' > /tmp/pwiz.build\n#   To specify a particular build,\n#   e.g. https://teamcity.labkey.org/viewLog.html?buildId=574320&buildTypeId=bt36&tab=artifacts&guest=1\n#   Don't forget to also change TOOL_VERSION=3.0.XXXX at the top of this file\n#  RUN echo \"606438\" >/tmp/pwiz.build\n#  RUN wget -O /tmp/pwiz.version https://teamcity.labkey.org/repository/download/bt36/`cat /tmp/pwiz.build`:id/VERSION?guest=1\nRUN wget -O /tmp/pwiz.artifacts https://teamcity.labkey.org/httpAuth/app/rest/builds/id:`cat /tmp/pwiz.build `/artifacts/children/?guest=1\nRUN mkdir /wineprefix/drive_c/pwiz \\\n && wget -O /tmp/pwiz.tar.bz2 https://teamcity.labkey.org`cat /tmp/pwiz.artifacts | grep -o 'content href=\"[^\"]*bz2' | sed 's/content href=\"//g' `?guest=1\nRUN tar -f /tmp/pwiz.tar.bz2 --directory=/wineprefix/drive_c/pwiz -xj\n#  # Add wrapper with xauth handling\nCOPY MSconvertGUI.sh /usr/local/bin\n#  # Prepare for container testing following \n#  # https://github.com/phnmnl/phenomenal-h2020/wiki/Testing-Guide-Proposal-3\nCOPY runTest1.sh /usr/local/bin/runTest1.sh\nRUN chmod +x /usr/local/bin/runTest1.sh\nCOPY runTest2.sh /usr/local/bin/runTest2.sh\nRUN chmod +x /usr/local/bin/runTest2.sh\n#   Prepare that a user-specific WINEPREFIX can be set,\n#   since the global wineprefix is owned by root\nCOPY mywine /usr/local/bin/mywine\nRUN mkdir /mywineprefix ; rm '/wineprefix/dosdevices/c:' ; ln -sf /wineprefix/drive_c /wineprefix/dosdevices/c: ; chmod 777 /mywineprefix ; chmod +x /usr/local/bin/mywine ; ln -sf /wineprefix/drive_c '/wineprefix/dosdevices/c:'\n#   Set up working directory and permissions to let user xclient save data\nRUN mkdir /data\nWORKDIR /data\nCMD [\"mywine\", \"msconvert\"]\n#  # If you need a proxy during build, don't put it into the Dockerfile itself:\n#  # docker build --build-arg http_proxy=http://www-cache.ipb-halle.de:3128/  -t phnmnl/pwiz:3.0.9098-0.1 .\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM i386/debian:stretch-backports\n# ###############################################################################\n# ## set metadata\nENV TOOL_NAME=\"msconvert\"\nENV TOOL_VERSION=\"3.0.18205\"\nENV CONTAINER_VERSION=\"1.3\"\nENV CONTAINER_GITHUB=\"https://github.com/phnmnl/container-pwiz\"\nLABEL version=\"1.3\"\nLABEL software.version=\"3.0.18205\"\nLABEL software=\"msconvert\"\nLABEL base.image=\"i386/debian:stretch-backports\"\nLABEL description=\"Convert LC/MS or GC/MS RAW vendor files to mzML.\"\nLABEL website=\"https://github.com/phnmnl/container-pwiz\"\nLABEL documentation=\"https://github.com/phnmnl/container-pwiz\"\nLABEL license=\"https://github.com/phnmnl/container-pwiz\"\nLABEL tags=\"Metabolomics\"\n#  we need wget, bzip2, wine from winehq, \n#  xvfb to fake X11 for winetricks during installation,\n#  and winbind because wine complains about missing \nRUN apt-get update \\\n && apt-get install wget gnupg -y \\\n && echo \"deb http://dl.winehq.org/wine-builds/debian/ stretch main\" >> /etc/apt/sources.list.d/winehq.list \\\n && wget http://dl.winehq.org/wine-builds/winehq.key -qO- | apt-key add - \\\n && apt-get update \\\n && apt-get install bzip2 unzip curl winehq-devel winbind xvfb cabextract -y --install-recommends \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/* /usr/share/doc /usr/share/doc-base /usr/share/man /usr/share/locale /usr/share/zoneinfo \\\n && wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks -O /usr/local/bin/winetricks \\\n && chmod +x /usr/local/bin/winetricks\n#  put C:\\pwiz on the Windows search path\nENV WINEARCH=\"win32\"\nENV WINEDEBUG=\"-all,err+all\"\nENV WINEPATH=\"\\\"C:\\pwiz\\\"\"\nENV DISPLAY=\":0\"\n#  To be singularity friendly, avoid installing anything to /root\nRUN mkdir /wineprefix/\nENV WINEPREFIX=\"/wineprefix\"\nWORKDIR /wineprefix\n#  wineserver needs to shut down properly!!! \nADD waitonprocess.sh /wineprefix/waitonprocess.sh\nRUN chmod +x waitonprocess.sh\n#  Install dependencies\nRUN winetricks -q win7 \\\n && xvfb-run winetricks -q vcrun2008 corefonts \\\n && xvfb-run winetricks -q dotnet452 \\\n && xvfb-run winetricks --force -q dotnet462 \\\n && ./waitonprocess.sh wineserver\n#\n#  download ProteoWizard and extract it to C:\\pwiz\n#\n#  Pull latest version from TeamCity\nRUN wget -O- \"https://teamcity.labkey.org/httpAuth/app/rest/builds/?locator=buildType:bt36,status:success,running:false,count:1&guest=1\" | sed -e 's#.*build id=\\\"\\([0-9]*\\)\\\".*#\\1#' > /tmp/pwiz.build\n#  To specify a particular build,\n#  e.g. https://teamcity.labkey.org/viewLog.html?buildId=574320&buildTypeId=bt36&tab=artifacts&guest=1\n#  Don't forget to also change TOOL_VERSION=3.0.XXXX at the top of this file\n# RUN echo \"606438\" >/tmp/pwiz.build\n# RUN wget -O /tmp/pwiz.version https://teamcity.labkey.org/repository/download/bt36/`cat /tmp/pwiz.build`:id/VERSION?guest=1\nRUN wget -O /tmp/pwiz.artifacts https://teamcity.labkey.org/httpAuth/app/rest/builds/id:`cat /tmp/pwiz.build `/artifacts/children/?guest=1\nRUN mkdir /wineprefix/drive_c/pwiz \\\n && wget -O /tmp/pwiz.tar.bz2 https://teamcity.labkey.org`cat /tmp/pwiz.artifacts | grep -o 'content href=\"[^\"]*bz2' | sed 's/content href=\"//g' `?guest=1\nRUN tar -f /tmp/pwiz.tar.bz2 --directory=/wineprefix/drive_c/pwiz -xj\n# # Add wrapper with xauth handling\nADD MSconvertGUI.sh /usr/local/bin\n# # Prepare for container testing following \n# # https://github.com/phnmnl/phenomenal-h2020/wiki/Testing-Guide-Proposal-3\nADD runTest1.sh /usr/local/bin/runTest1.sh\nRUN chmod +x /usr/local/bin/runTest1.sh\nADD runTest2.sh /usr/local/bin/runTest2.sh\nRUN chmod +x /usr/local/bin/runTest2.sh\n#  Prepare that a user-specific WINEPREFIX can be set,\n#  since the global wineprefix is owned by root\nADD mywine /usr/local/bin/mywine\nRUN mkdir /mywineprefix ; rm '/wineprefix/dosdevices/c:' ; ln -sf /wineprefix/drive_c /wineprefix/dosdevices/c: ; chmod 777 /mywineprefix ; chmod +x /usr/local/bin/mywine ; ln -sf /wineprefix/drive_c '/wineprefix/dosdevices/c:'\n#  Set up working directory and permissions to let user xclient save data\nRUN mkdir /data\nWORKDIR /data\nCMD [\"mywine\", \"msconvert\"]\n# # If you need a proxy during build, don't put it into the Dockerfile itself:\n# # docker build --build-arg http_proxy=http://www-cache.ipb-halle.de:3128/  -t phnmnl/pwiz:3.0.9098-0.1 .\n","injectedSmells":[],"originalDockerfileHash":"1a9318b34443bafb969bee60cdedd20c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM i386/debian:stretch-backports\n#  ###############################################################################\n#  ## set metadata\nENV TOOL_NAME=\"msconvert\"\nENV TOOL_VERSION=\"3.0.18205\"\nENV CONTAINER_VERSION=\"1.3\"\nENV CONTAINER_GITHUB=\"https://github.com/phnmnl/container-pwiz\"\nLABEL version=\"1.3\"\nLABEL software.version=\"3.0.18205\"\nLABEL software=\"msconvert\"\nLABEL base.image=\"i386/debian:stretch-backports\"\nLABEL description=\"Convert LC/MS or GC/MS RAW vendor files to mzML.\"\nLABEL website=\"https://github.com/phnmnl/container-pwiz\"\nLABEL documentation=\"https://github.com/phnmnl/container-pwiz\"\nLABEL license=\"https://github.com/phnmnl/container-pwiz\"\nLABEL tags=\"Metabolomics\"\n#   we need wget, bzip2, wine from winehq, \n#   xvfb to fake X11 for winetricks during installation,\n#   and winbind because wine complains about missing \nRUN apt-get update \\\n && apt-get install wget gnupg -y \\\n && echo \"deb http://dl.winehq.org/wine-builds/debian/ stretch main\" >> /etc/apt/sources.list.d/winehq.list \\\n && wget http://dl.winehq.org/wine-builds/winehq.key -qO- | apt-key add - \\\n && apt-get update \\\n && apt-get install bzip2 unzip curl winehq-devel winbind xvfb cabextract -y --install-recommends \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/* /usr/share/doc /usr/share/doc-base /usr/share/man /usr/share/locale /usr/share/zoneinfo \\\n && wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks -O /usr/local/bin/winetricks \\\n && chmod +x /usr/local/bin/winetricks\n#   put C:\\pwiz on the Windows search path\nENV WINEARCH=\"win32\"\nENV WINEDEBUG=\"-all,err+all\"\nENV WINEPATH=\"\\\"C:\\pwiz\\\"\"\nENV DISPLAY=\":0\"\n#   To be singularity friendly, avoid installing anything to /root\nRUN mkdir /wineprefix/\nENV WINEPREFIX=\"/wineprefix\"\nWORKDIR /wineprefix\n#   wineserver needs to shut down properly!!! \nADD waitonprocess.sh /wineprefix/waitonprocess.sh\nRUN chmod +x waitonprocess.sh\n#   Install dependencies\nRUN winetricks -q win7 \\\n && xvfb-run winetricks -q vcrun2008 corefonts \\\n && xvfb-run winetricks -q dotnet452 \\\n && xvfb-run winetricks --force -q dotnet462 \\\n && ./waitonprocess.sh wineserver\n#\n#   download ProteoWizard and extract it to C:\\pwiz\n#\n#   Pull latest version from TeamCity\nRUN wget -O- \"https://teamcity.labkey.org/httpAuth/app/rest/builds/?locator=buildType:bt36,status:success,running:false,count:1&guest=1\" | sed -e 's#.*build id=\\\"\\([0-9]*\\)\\\".*#\\1#' > /tmp/pwiz.build\n#   To specify a particular build,\n#   e.g. https://teamcity.labkey.org/viewLog.html?buildId=574320&buildTypeId=bt36&tab=artifacts&guest=1\n#   Don't forget to also change TOOL_VERSION=3.0.XXXX at the top of this file\n#  RUN echo \"606438\" >/tmp/pwiz.build\n#  RUN wget -O /tmp/pwiz.version https://teamcity.labkey.org/repository/download/bt36/`cat /tmp/pwiz.build`:id/VERSION?guest=1\nRUN wget -O /tmp/pwiz.artifacts https://teamcity.labkey.org/httpAuth/app/rest/builds/id:`cat /tmp/pwiz.build `/artifacts/children/?guest=1\nRUN mkdir /wineprefix/drive_c/pwiz \\\n && wget -O /tmp/pwiz.tar.bz2 https://teamcity.labkey.org`cat /tmp/pwiz.artifacts | grep -o 'content href=\"[^\"]*bz2' | sed 's/content href=\"//g' `?guest=1\nRUN tar -f /tmp/pwiz.tar.bz2 --directory=/wineprefix/drive_c/pwiz -xj\n#  # Add wrapper with xauth handling\nADD MSconvertGUI.sh /usr/local/bin\n#  # Prepare for container testing following \n#  # https://github.com/phnmnl/phenomenal-h2020/wiki/Testing-Guide-Proposal-3\nADD runTest1.sh /usr/local/bin/runTest1.sh\nRUN chmod +x /usr/local/bin/runTest1.sh\nADD runTest2.sh /usr/local/bin/runTest2.sh\nRUN chmod +x /usr/local/bin/runTest2.sh\n#   Prepare that a user-specific WINEPREFIX can be set,\n#   since the global wineprefix is owned by root\nADD mywine /usr/local/bin/mywine\nRUN mkdir /mywineprefix ; rm '/wineprefix/dosdevices/c:' ; ln -sf /wineprefix/drive_c /wineprefix/dosdevices/c: ; chmod 777 /mywineprefix ; chmod +x /usr/local/bin/mywine ; ln -sf /wineprefix/drive_c '/wineprefix/dosdevices/c:'\n#   Set up working directory and permissions to let user xclient save data\nRUN mkdir /data\nWORKDIR /data\nCMD [\"mywine\", \"msconvert\"]\n#  # If you need a proxy during build, don't put it into the Dockerfile itself:\n#  # docker build --build-arg http_proxy=http://www-cache.ipb-halle.de:3128/  -t phnmnl/pwiz:3.0.9098-0.1 .\n","originalDockerfileUglifiedHash":"81540c8277424818072f00dfc944cec6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fd5111876d03084ed9df3397ebd045d64e56fb25.dockerfile"}