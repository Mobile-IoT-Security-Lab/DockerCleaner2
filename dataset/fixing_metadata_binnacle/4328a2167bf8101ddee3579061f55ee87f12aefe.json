{"seed":1237894892,"processedDockerfileHash":"021794eb5a1aeebcfa2c4245c2ed1eee","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nginx\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends libcurl4-openssl-dev=7.74.0-1.3+deb11u7 libprotobuf-dev=3.12.4-1 protobuf-compiler=3.12.4-1 --no-install-suggests -y \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chmod 777 \"$tempDir\" \\\n && apt-get install --no-install-recommends build-essential=12.9 cmake=3.18.4-2+deb11u1 git=1:2.30.2-1+deb11u2 ca-certificates=20210119 pkg-config=0.29.2-1 wget=1.21-1+deb11u1 golang=2:1.15~1 libz-dev automake=1:1.16.3-2 autogen=1:5.18.16-4 autoconf=2.69-14 libtool=2.4.6-15 --no-install-suggests -y \\\n && apt-mark showmanual | xargs apt-mark auto > /dev/null \\\n && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; } \\\n && git clone https://github.com/opentracing/opentracing-cpp.git \\\n && cd opentracing-cpp \\\n && mkdir .build \\\n && cd .build \\\n && cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && apt-get install --no-install-recommends libcurl4-gnutls-dev=7.74.0-1.3+deb11u7 --no-install-suggests -y \\\n && git clone https://github.com/rnburn/zipkin-cpp-opentracing.git \\\n && cd zipkin-cpp-opentracing \\\n && mkdir .build \\\n && cd .build \\\n && cmake -DBUILD_SHARED_LIBS=1 -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && git clone -b v1.4.x https://github.com/grpc/grpc \\\n && cd grpc \\\n && git submodule update --init \\\n && make HAS_SYSTEM_PROTOBUF=false \\\n && make install \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && git clone https://github.com/lightstep/lightstep-tracer-cpp.git \\\n && cd lightstep-tracer-cpp \\\n && mkdir .build \\\n && cd .build \\\n && cmake -DBUILD_SHARED_LIBS=1 -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && git clone https://github.com/opentracing-contrib/nginx-opentracing.git \\\n && NGINX_VERSION=`nginx -v 2>&1` \\\n && NGINX_VERSION=${NGINX_VERSION#*nginx/} \\\n && echo \"deb-src http://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get build-dep -y nginx=${NGINX_VERSION} \\\n && wget -O nginx-release-${NGINX_VERSION}.tar.gz https://github.com/nginx/nginx/archive/release-${NGINX_VERSION}.tar.gz \\\n && tar zxf nginx-release-${NGINX_VERSION}.tar.gz \\\n && cd nginx-release-${NGINX_VERSION} \\\n && NGINX_MODULES_PATH=$( nginx -V 2>&1 | grep -oP \"modules-path=\\K[^\\s]*\" ;) \\\n && auto/configure --with-compat --add-dynamic-module=${tempDir}/nginx-opentracing/opentracing --add-dynamic-module=${tempDir}/nginx-opentracing/zipkin --add-dynamic-module=${tempDir}/nginx-opentracing/lightstep \\\n && make modules \\\n && cp objs/ngx_http_opentracing_module.so $NGINX_MODULES_PATH/ \\\n && cp objs/ngx_http_zipkin_module.so $NGINX_MODULES_PATH/ \\\n && cp objs/ngx_http_lightstep_module.so $NGINX_MODULES_PATH/ \\\n && if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove \\\n && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM nginx\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends libcurl4-openssl-dev libprotobuf-dev protobuf-compiler --no-install-suggests -y \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chmod 777 \"$tempDir\" \\\n && apt-get install --no-install-recommends build-essential cmake git ca-certificates pkg-config wget golang libz-dev automake autogen autoconf libtool --no-install-suggests -y \\\n && apt-mark showmanual | xargs apt-mark auto > /dev/null \\\n && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; } \\\n && git clone https://github.com/opentracing/opentracing-cpp.git \\\n && cd opentracing-cpp \\\n && mkdir .build \\\n && cd .build \\\n && cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && apt-get install --no-install-recommends libcurl4-gnutls-dev --no-install-suggests -y \\\n && git clone https://github.com/rnburn/zipkin-cpp-opentracing.git \\\n && cd zipkin-cpp-opentracing \\\n && mkdir .build \\\n && cd .build \\\n && cmake -DBUILD_SHARED_LIBS=1 -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && git clone -b v1.4.x https://github.com/grpc/grpc \\\n && cd grpc \\\n && git submodule update --init \\\n && make HAS_SYSTEM_PROTOBUF=false \\\n && make install \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && git clone https://github.com/lightstep/lightstep-tracer-cpp.git \\\n && cd lightstep-tracer-cpp \\\n && mkdir .build \\\n && cd .build \\\n && cmake -DBUILD_SHARED_LIBS=1 -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && git clone https://github.com/opentracing-contrib/nginx-opentracing.git \\\n && NGINX_VERSION=`nginx -v 2>&1` \\\n && NGINX_VERSION=${NGINX_VERSION#*nginx/} \\\n && echo \"deb-src http://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get build-dep -y nginx=${NGINX_VERSION} \\\n && wget -O nginx-release-${NGINX_VERSION}.tar.gz https://github.com/nginx/nginx/archive/release-${NGINX_VERSION}.tar.gz \\\n && tar zxf nginx-release-${NGINX_VERSION}.tar.gz \\\n && cd nginx-release-${NGINX_VERSION} \\\n && NGINX_MODULES_PATH=$( nginx -V 2>&1 | grep -oP \"modules-path=\\K[^\\s]*\" ;) \\\n && auto/configure --with-compat --add-dynamic-module=${tempDir}/nginx-opentracing/opentracing --add-dynamic-module=${tempDir}/nginx-opentracing/zipkin --add-dynamic-module=${tempDir}/nginx-opentracing/lightstep \\\n && make modules \\\n && cp objs/ngx_http_opentracing_module.so $NGINX_MODULES_PATH/ \\\n && cp objs/ngx_http_zipkin_module.so $NGINX_MODULES_PATH/ \\\n && cp objs/ngx_http_lightstep_module.so $NGINX_MODULES_PATH/ \\\n && if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove \\\n && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#  forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"e8d5310a52bd96d13886c44149c8c6ec","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nginx\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends libcurl4-openssl-dev libprotobuf-dev protobuf-compiler --no-install-suggests -y \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chmod 777 \"$tempDir\" \\\n && apt-get install --no-install-recommends build-essential cmake git ca-certificates pkg-config wget golang libz-dev automake autogen autoconf libtool --no-install-suggests -y \\\n && apt-mark showmanual | xargs apt-mark auto > /dev/null \\\n && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; } \\\n && git clone https://github.com/opentracing/opentracing-cpp.git \\\n && cd opentracing-cpp \\\n && mkdir .build \\\n && cd .build \\\n && cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && apt-get install --no-install-recommends libcurl4-gnutls-dev --no-install-suggests -y \\\n && git clone https://github.com/rnburn/zipkin-cpp-opentracing.git \\\n && cd zipkin-cpp-opentracing \\\n && mkdir .build \\\n && cd .build \\\n && cmake -DBUILD_SHARED_LIBS=1 -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && git clone -b v1.4.x https://github.com/grpc/grpc \\\n && cd grpc \\\n && git submodule update --init \\\n && make HAS_SYSTEM_PROTOBUF=false \\\n && make install \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && git clone https://github.com/lightstep/lightstep-tracer-cpp.git \\\n && cd lightstep-tracer-cpp \\\n && mkdir .build \\\n && cd .build \\\n && cmake -DBUILD_SHARED_LIBS=1 -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && cd \"$tempDir\" \\\n && git clone https://github.com/opentracing-contrib/nginx-opentracing.git \\\n && NGINX_VERSION=`nginx -v 2>&1` \\\n && NGINX_VERSION=${NGINX_VERSION#*nginx/} \\\n && echo \"deb-src http://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get build-dep -y nginx=${NGINX_VERSION} \\\n && wget -O nginx-release-${NGINX_VERSION}.tar.gz https://github.com/nginx/nginx/archive/release-${NGINX_VERSION}.tar.gz \\\n && tar zxf nginx-release-${NGINX_VERSION}.tar.gz \\\n && cd nginx-release-${NGINX_VERSION} \\\n && NGINX_MODULES_PATH=$( nginx -V 2>&1 | grep -oP \"modules-path=\\K[^\\s]*\" ;) \\\n && auto/configure --with-compat --add-dynamic-module=${tempDir}/nginx-opentracing/opentracing --add-dynamic-module=${tempDir}/nginx-opentracing/zipkin --add-dynamic-module=${tempDir}/nginx-opentracing/lightstep \\\n && make modules \\\n && cp objs/ngx_http_opentracing_module.so $NGINX_MODULES_PATH/ \\\n && cp objs/ngx_http_zipkin_module.so $NGINX_MODULES_PATH/ \\\n && cp objs/ngx_http_lightstep_module.so $NGINX_MODULES_PATH/ \\\n && if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove \\\n && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"f91e97017d787c28776048bc4084e4fd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4328a2167bf8101ddee3579061f55ee87f12aefe.dockerfile"}