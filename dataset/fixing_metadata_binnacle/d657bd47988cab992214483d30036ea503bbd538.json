{"seed":2855385333,"processedDockerfileHash":"8b0ffb985326c2c2f8357596cf90d1a1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04.2\nMAINTAINER Konstantin Weitz <konstantin.weitz@gmail.com>\nRUN apt-get update ; apt-get install --no-install-recommends binutils=2.24-5ubuntu14.2 default-jre=2:1.7-51 git=1:1.9.1-1ubuntu0.10 g++=4:4.8.2-1ubuntu6 haskell-platform=2013.2.0.0.debian3 make=3.81-8.2ubuntu3 python=2.7.5-5ubuntu3 python-pip=1.5.4-1ubuntu4 python-yaml=3.10-4ubuntu0.1 wget=1.15-1ubuntu1.14.04.5 -y\n#   install z3\nRUN git clone https://github.com/Z3Prover/z3.git\nRUN cd z3 ; python scripts/mk_make.py\nRUN cd z3/build ; make ; make install\nRUN rm -r z3\n#   install racket\nRUN wget http://mirror.racket-lang.org/installers/6.1.1/racket-6.1.1-x86_64-linux-ubuntu-precise.sh -O install.sh\nRUN chmod +x install.sh\nRUN ./install.sh --in-place --create-links /usr --dest /usr/racket\nRUN rm install.sh\n#   install rosette\nRUN git clone https://github.com/emina/rosette.git \\\n && cd rosette ; git checkout db80315cb37df8e32766f6436c9baad9544540a4 \\\n && raco link rosette \\\n && raco setup -l rosette \\\n && ln -s /usr/bin/z3 bin/\n#   install some haskell packets that we think will be useful\nRUN cabal update ; cabal install --force-reinstalls array base bytestring containers filepath MissingH parsec QuickCheck regex-compat split syb sexp text-format-simple\nRUN apt-get update ; apt-get install --no-install-recommends binutils=2.24-5ubuntu14.2 camlp5=6.11+dfsg-3 curl=7.35.0-1ubuntu2.20 libpcre-ocaml-dev=7.0.4-1 libpcre3-dev=1:8.31-2ubuntu2.3 libreadline-dev=6.3-4ubuntu2 libz-dev make=3.81-8.2ubuntu3 pkg-config=0.26-1ubuntu4 vim=2:7.4.052-1ubuntu3.1 -y\n#   install coq\nRUN curl -O https://coq.inria.fr/distrib/V8.5beta2/files/coq-8.5beta2.tar.gz\nRUN tar -xvf coq-8.5beta2.tar.gz\nRUN cd coq-8.5beta2 ; ./configure -bindir /usr/local/bin -libdir /usr/local/lib/coq -configdir /etc/xdg/coq -datadir /usr/local/share/coq -mandir /usr/local/share/man -docdir /usr/local/share/doc/coq -emacs /usr/local/share/emacs/site-lisp -coqdocdir /usr/local/share/texmf/tex/latex/misc\nRUN cd coq-8.5beta2 ; make -j4 ; make install\n#   install sshd\nRUN apt-get update ; apt-get install --no-install-recommends openssh-server=1:6.6p1-2ubuntu2.13 -y\nRUN ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\nRUN echo 'Host *' >> /root/.ssh/config\nRUN echo ' StrictHostKeyChecking no' >> /root/.ssh/config\n#   install bagpipe haskell parser\nCOPY src/bagpipe/hs /bagpipe/src/bagpipe/hs\nRUN cd /bagpipe/src/bagpipe/hs/ ; cabal update ; cabal install\n#   install bagpipe coq proof\nCOPY src/bagpipe/coq/Main /bagpipe/src/bagpipe/coq/Main\nCOPY src/bagpipe/coq/Makefile /bagpipe/src/bagpipe/coq/Makefile\nRUN cd /bagpipe/src/bagpipe/coq/ ; make clean ; make -j4\n#   install bagpipe coq extraction\nCOPY src/bagpipe/coq/Test /bagpipe/src/bagpipe/coq/Test\nRUN cd /bagpipe/src/bagpipe/coq/ ; make -j4 test\n#   install bagpipe\nCOPY src/bagpipe/racket /bagpipe/src/bagpipe/racket\nRUN cp /bagpipe/src/bagpipe/coq/build/bgpv.rkt /bagpipe/src/bagpipe/racket/main/\nRUN find /bagpipe/src/bagpipe/racket -name compiled -type d -exec rm -r {} +\nRUN raco make /bagpipe/src/bagpipe/racket/main/bagpipe.rkt\nENV BAGPIPE=\"/bagpipe\"\n#   install scripts\nCOPY src/bagpipe/python /bagpipe/src/bagpipe/python\nRUN cp /bagpipe/src/bagpipe/python/bagpipe /usr/bin/\nENTRYPOINT [\"bagpipe\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04.2\nMAINTAINER Konstantin Weitz <konstantin.weitz@gmail.com>\nRUN apt-get update ; apt-get install binutils default-jre git g++ haskell-platform make python python-pip python-yaml wget -y\n#  install z3\nRUN git clone https://github.com/Z3Prover/z3.git\nRUN cd z3 ; python scripts/mk_make.py\nRUN cd z3/build ; make ; make install\nRUN rm -r z3\n#  install racket\nRUN wget http://mirror.racket-lang.org/installers/6.1.1/racket-6.1.1-x86_64-linux-ubuntu-precise.sh -O install.sh\nRUN chmod +x install.sh\nRUN ./install.sh --in-place --create-links /usr --dest /usr/racket\nRUN rm install.sh\n#  install rosette\nRUN git clone https://github.com/emina/rosette.git \\\n && cd rosette ; git checkout db80315cb37df8e32766f6436c9baad9544540a4 \\\n && raco link rosette \\\n && raco setup -l rosette \\\n && ln -s /usr/bin/z3 bin/\n#  install some haskell packets that we think will be useful\nRUN cabal update ; cabal install --force-reinstalls array base bytestring containers filepath MissingH parsec QuickCheck regex-compat split syb sexp text-format-simple\nRUN apt-get update ; apt-get install binutils camlp5 curl libpcre-ocaml-dev libpcre3-dev libreadline-dev libz-dev make pkg-config vim -y\n#  install coq\nRUN curl -O https://coq.inria.fr/distrib/V8.5beta2/files/coq-8.5beta2.tar.gz\nRUN tar -xvf coq-8.5beta2.tar.gz\nRUN cd coq-8.5beta2 ; ./configure -bindir /usr/local/bin -libdir /usr/local/lib/coq -configdir /etc/xdg/coq -datadir /usr/local/share/coq -mandir /usr/local/share/man -docdir /usr/local/share/doc/coq -emacs /usr/local/share/emacs/site-lisp -coqdocdir /usr/local/share/texmf/tex/latex/misc\nRUN cd coq-8.5beta2 ; make -j4 ; make install\n#  install sshd\nRUN apt-get update ; apt-get install openssh-server -y\nRUN ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\nRUN echo 'Host *' >> /root/.ssh/config\nRUN echo ' StrictHostKeyChecking no' >> /root/.ssh/config\n#  install bagpipe haskell parser\nADD src/bagpipe/hs /bagpipe/src/bagpipe/hs\nRUN cd /bagpipe/src/bagpipe/hs/ ; cabal update ; cabal install\n#  install bagpipe coq proof\nADD src/bagpipe/coq/Main /bagpipe/src/bagpipe/coq/Main\nADD src/bagpipe/coq/Makefile /bagpipe/src/bagpipe/coq/Makefile\nRUN cd /bagpipe/src/bagpipe/coq/ ; make clean ; make -j4\n#  install bagpipe coq extraction\nADD src/bagpipe/coq/Test /bagpipe/src/bagpipe/coq/Test\nRUN cd /bagpipe/src/bagpipe/coq/ ; make -j4 test\n#  install bagpipe\nADD src/bagpipe/racket /bagpipe/src/bagpipe/racket\nRUN cp /bagpipe/src/bagpipe/coq/build/bgpv.rkt /bagpipe/src/bagpipe/racket/main/\nRUN find /bagpipe/src/bagpipe/racket -name compiled -type d -exec rm -r {} +\nRUN raco make /bagpipe/src/bagpipe/racket/main/bagpipe.rkt\nENV BAGPIPE=\"/bagpipe\"\n#  install scripts\nADD src/bagpipe/python /bagpipe/src/bagpipe/python\nRUN cp /bagpipe/src/bagpipe/python/bagpipe /usr/bin/\nENTRYPOINT [\"bagpipe\"]\n","injectedSmells":[],"originalDockerfileHash":"8b7370d6aa3c9faab58eea2caa31b8f5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04.2\nMAINTAINER Konstantin Weitz <konstantin.weitz@gmail.com>\nRUN apt-get update ; apt-get install binutils default-jre git g++ haskell-platform make python python-pip python-yaml wget -y\n#   install z3\nRUN git clone https://github.com/Z3Prover/z3.git\nRUN cd z3 ; python scripts/mk_make.py\nRUN cd z3/build ; make ; make install\nRUN rm -r z3\n#   install racket\nRUN wget http://mirror.racket-lang.org/installers/6.1.1/racket-6.1.1-x86_64-linux-ubuntu-precise.sh -O install.sh\nRUN chmod +x install.sh\nRUN ./install.sh --in-place --create-links /usr --dest /usr/racket\nRUN rm install.sh\n#   install rosette\nRUN git clone https://github.com/emina/rosette.git \\\n && cd rosette ; git checkout db80315cb37df8e32766f6436c9baad9544540a4 \\\n && raco link rosette \\\n && raco setup -l rosette \\\n && ln -s /usr/bin/z3 bin/\n#   install some haskell packets that we think will be useful\nRUN cabal update ; cabal install --force-reinstalls array base bytestring containers filepath MissingH parsec QuickCheck regex-compat split syb sexp text-format-simple\nRUN apt-get update ; apt-get install binutils camlp5 curl libpcre-ocaml-dev libpcre3-dev libreadline-dev libz-dev make pkg-config vim -y\n#   install coq\nRUN curl -O https://coq.inria.fr/distrib/V8.5beta2/files/coq-8.5beta2.tar.gz\nRUN tar -xvf coq-8.5beta2.tar.gz\nRUN cd coq-8.5beta2 ; ./configure -bindir /usr/local/bin -libdir /usr/local/lib/coq -configdir /etc/xdg/coq -datadir /usr/local/share/coq -mandir /usr/local/share/man -docdir /usr/local/share/doc/coq -emacs /usr/local/share/emacs/site-lisp -coqdocdir /usr/local/share/texmf/tex/latex/misc\nRUN cd coq-8.5beta2 ; make -j4 ; make install\n#   install sshd\nRUN apt-get update ; apt-get install openssh-server -y\nRUN ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\nRUN echo 'Host *' >> /root/.ssh/config\nRUN echo ' StrictHostKeyChecking no' >> /root/.ssh/config\n#   install bagpipe haskell parser\nADD src/bagpipe/hs /bagpipe/src/bagpipe/hs\nRUN cd /bagpipe/src/bagpipe/hs/ ; cabal update ; cabal install\n#   install bagpipe coq proof\nADD src/bagpipe/coq/Main /bagpipe/src/bagpipe/coq/Main\nADD src/bagpipe/coq/Makefile /bagpipe/src/bagpipe/coq/Makefile\nRUN cd /bagpipe/src/bagpipe/coq/ ; make clean ; make -j4\n#   install bagpipe coq extraction\nADD src/bagpipe/coq/Test /bagpipe/src/bagpipe/coq/Test\nRUN cd /bagpipe/src/bagpipe/coq/ ; make -j4 test\n#   install bagpipe\nADD src/bagpipe/racket /bagpipe/src/bagpipe/racket\nRUN cp /bagpipe/src/bagpipe/coq/build/bgpv.rkt /bagpipe/src/bagpipe/racket/main/\nRUN find /bagpipe/src/bagpipe/racket -name compiled -type d -exec rm -r {} +\nRUN raco make /bagpipe/src/bagpipe/racket/main/bagpipe.rkt\nENV BAGPIPE=\"/bagpipe\"\n#   install scripts\nADD src/bagpipe/python /bagpipe/src/bagpipe/python\nRUN cp /bagpipe/src/bagpipe/python/bagpipe /usr/bin/\nENTRYPOINT [\"bagpipe\"]\n","originalDockerfileUglifiedHash":"13ebae1ca67957d4e980a5ba63efed9d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d657bd47988cab992214483d30036ea503bbd538.dockerfile"}