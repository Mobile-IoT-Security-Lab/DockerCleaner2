{"seed":1146718823,"processedDockerfileHash":"72f031ad60c67a90509c6fd354ddb45f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"ARG BASEIMAGE_VERSION=7\nFROM amd64/centos:${BASEIMAGE_VERSION} AS base_image\nFROM base_image AS build_tools\nRUN yum install -y centos-release-scl-rh epel-release \\\n && yum update -y \\\n && yum install -y devtoolset-6-toolchain devtoolset-6-libasan-devel devtoolset-6-liblsan-devel tar curl openssl ca-certificates unzip \\\n && yum clean all \\\n && rm -rf /var/cache/yum\nENV M2_HOME=\"/opt/maven\"\nRUN mkdir -p ${M2_HOME} \\\n && curl -fsSL http://apache.osuosl.org/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz | tar -xzC ${M2_HOME} --strip-components=1 \\\n && curl -O http://repo1.maven.org/maven2/io/takari/aether/takari-local-repository/0.11.2/takari-local-repository-0.11.2.jar \\\n && mv takari-local-repository-0.11.2.jar ${M2_HOME}/lib/ext \\\n && curl -O http://repo1.maven.org/maven2/io/takari/takari-filemanager/0.8.3/takari-filemanager-0.8.3.jar \\\n && mv takari-filemanager-0.8.3.jar ${M2_HOME}/lib/ext\nRUN mkdir -p /opt/sbt \\\n && curl -fsSL https://dl.bintray.com/sbt/native-packages/sbt/0.13.13/sbt-0.13.13.tgz | tar -xzC /opt/sbt --strip-components=1\nRUN mkdir -p /opt/cmake \\\n && curl -fsSL https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz | tar -xzC /opt/cmake --strip-components=1\nRUN source /opt/rh/devtoolset-6/enable \\\n && curl -fsSL https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz | tar xz \\\n && cd protobuf-3.5.1 \\\n && ./configure --prefix=/opt/protobuf \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && rm -rf protobuf-3.5.1\nRUN mkdir -p /opt \\\n && curl -s http://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip -o android-ndk-r16b-linux-x86_64.zip \\\n && unzip -q android-ndk-r16b-linux-x86_64.zip -d /opt \\\n && rm -f android-ndk-r16b-linux-x86_64.zip\nFROM base_image AS base_builder_image\nCOPY --from=build_tools /opt /opt\nRUN yum install -y centos-release-scl-rh epel-release \\\n && yum update -y \\\n && yum install -y devtoolset-4-toolchain devtoolset-4-libasan-devel devtoolset-4-liblsan-devel devtoolset-6-toolchain devtoolset-6-libasan-devel devtoolset-6-liblsan-devel devtoolset-7-toolchain devtoolset-7-libasan-devel devtoolset-7-liblsan-devel tar wget curl openssl ca-certificates git rpm-build java-1.8.0-openjdk-devel which gtk2-devel \\\n && yum clean all \\\n && rm -rf /var/cache/yum \\\n && ln -s /opt/maven/bin/mvn /usr/bin/mvn\nENV HOME=\"/home/jenkins\"\nRUN groupadd jenkins -g 1000 \\\n && useradd -d ${HOME} -u 1000 -g 1000 -m jenkins\nUSER jenkins\nWORKDIR ${HOME}\nENV PATH=\"/opt/sbt/bin:/opt/cmake/bin:/opt/protobuf/bin:${PATH}\" \\\n    JAVA_OPTS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap ${JAVA_OPTS}\" \\\n    ANDROID_NDK_HOME=\"/opt/android-ndk-r16b\"\n#   This environment variable required for buildnativeoperations.sh script execution\nENV ANDROID_NDK=\"${ANDROID_NDK_HOME}\"\nCMD [\"cat\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG BASEIMAGE_VERSION=7\nFROM amd64/centos:${BASEIMAGE_VERSION} AS base_image\nFROM base_image AS build_tools\nRUN yum install -y centos-release-scl-rh epel-release \\\n && yum update -y \\\n && yum install -y devtoolset-6-toolchain devtoolset-6-libasan-devel devtoolset-6-liblsan-devel tar curl openssl ca-certificates unzip \\\n && yum clean all \\\n && rm -rf /var/cache/yum\nENV M2_HOME=\"/opt/maven\"\nRUN mkdir -p ${M2_HOME} \\\n && curl -fsSL http://apache.osuosl.org/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz | tar -xzC ${M2_HOME} --strip-components=1 \\\n && curl -O http://repo1.maven.org/maven2/io/takari/aether/takari-local-repository/0.11.2/takari-local-repository-0.11.2.jar \\\n && mv takari-local-repository-0.11.2.jar ${M2_HOME}/lib/ext \\\n && curl -O http://repo1.maven.org/maven2/io/takari/takari-filemanager/0.8.3/takari-filemanager-0.8.3.jar \\\n && mv takari-filemanager-0.8.3.jar ${M2_HOME}/lib/ext\nRUN mkdir -p /opt/sbt \\\n && curl -fsSL https://dl.bintray.com/sbt/native-packages/sbt/0.13.13/sbt-0.13.13.tgz | tar -xzC /opt/sbt --strip-components=1\nRUN mkdir -p /opt/cmake \\\n && curl -fsSL https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz | tar -xzC /opt/cmake --strip-components=1\nRUN source /opt/rh/devtoolset-6/enable \\\n && curl -fsSL https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz | tar xz \\\n && cd protobuf-3.5.1 \\\n && ./configure --prefix=/opt/protobuf \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && rm -rf protobuf-3.5.1\nRUN mkdir -p /opt \\\n && curl -s http://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip -o android-ndk-r16b-linux-x86_64.zip \\\n && unzip -q android-ndk-r16b-linux-x86_64.zip -d /opt \\\n && rm -f android-ndk-r16b-linux-x86_64.zip\nFROM base_image AS base_builder_image\nCOPY --from=build_tools /opt /opt\nRUN yum install -y centos-release-scl-rh epel-release \\\n && yum update -y \\\n && yum install -y devtoolset-4-toolchain devtoolset-4-libasan-devel devtoolset-4-liblsan-devel devtoolset-6-toolchain devtoolset-6-libasan-devel devtoolset-6-liblsan-devel devtoolset-7-toolchain devtoolset-7-libasan-devel devtoolset-7-liblsan-devel tar wget curl openssl ca-certificates git rpm-build java-1.8.0-openjdk-devel which gtk2-devel \\\n && yum clean all \\\n && rm -rf /var/cache/yum \\\n && ln -s /opt/maven/bin/mvn /usr/bin/mvn\nENV HOME=\"/home/jenkins\"\nRUN groupadd jenkins -g 1000 \\\n && useradd -d ${HOME} -u 1000 -g 1000 -m jenkins\nUSER jenkins\nWORKDIR ${HOME}\nENV PATH=\"/opt/sbt/bin:/opt/cmake/bin:/opt/protobuf/bin:${PATH}\" \\\n    JAVA_OPTS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap ${JAVA_OPTS}\" \\\n    ANDROID_NDK_HOME=\"/opt/android-ndk-r16b\"\n#  This environment variable required for buildnativeoperations.sh script execution\nENV ANDROID_NDK=\"${ANDROID_NDK_HOME}\"\nCMD [\"cat\"]\n","injectedSmells":[],"originalDockerfileHash":"7e95a44e3fc8487ee7bc86d444598a67","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG BASEIMAGE_VERSION=7\nFROM amd64/centos:${BASEIMAGE_VERSION} AS base_image\nFROM base_image AS build_tools\nRUN yum install -y centos-release-scl-rh epel-release \\\n && yum update -y \\\n && yum install -y devtoolset-6-toolchain devtoolset-6-libasan-devel devtoolset-6-liblsan-devel tar curl openssl ca-certificates unzip \\\n && yum clean all \\\n && rm -rf /var/cache/yum\nENV M2_HOME=\"/opt/maven\"\nRUN mkdir -p ${M2_HOME} \\\n && curl -fsSL http://apache.osuosl.org/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz | tar -xzC ${M2_HOME} --strip-components=1 \\\n && curl -O http://repo1.maven.org/maven2/io/takari/aether/takari-local-repository/0.11.2/takari-local-repository-0.11.2.jar \\\n && mv takari-local-repository-0.11.2.jar ${M2_HOME}/lib/ext \\\n && curl -O http://repo1.maven.org/maven2/io/takari/takari-filemanager/0.8.3/takari-filemanager-0.8.3.jar \\\n && mv takari-filemanager-0.8.3.jar ${M2_HOME}/lib/ext\nRUN mkdir -p /opt/sbt \\\n && curl -fsSL https://dl.bintray.com/sbt/native-packages/sbt/0.13.13/sbt-0.13.13.tgz | tar -xzC /opt/sbt --strip-components=1\nRUN mkdir -p /opt/cmake \\\n && curl -fsSL https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz | tar -xzC /opt/cmake --strip-components=1\nRUN source /opt/rh/devtoolset-6/enable \\\n && curl -fsSL https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz | tar xz \\\n && cd protobuf-3.5.1 \\\n && ./configure --prefix=/opt/protobuf \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && rm -rf protobuf-3.5.1\nRUN mkdir -p /opt \\\n && curl -s http://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip -o android-ndk-r16b-linux-x86_64.zip \\\n && unzip -q android-ndk-r16b-linux-x86_64.zip -d /opt \\\n && rm -f android-ndk-r16b-linux-x86_64.zip\nFROM base_image AS base_builder_image\nCOPY --from=build_tools /opt /opt\nRUN yum install -y centos-release-scl-rh epel-release \\\n && yum update -y \\\n && yum install -y devtoolset-4-toolchain devtoolset-4-libasan-devel devtoolset-4-liblsan-devel devtoolset-6-toolchain devtoolset-6-libasan-devel devtoolset-6-liblsan-devel devtoolset-7-toolchain devtoolset-7-libasan-devel devtoolset-7-liblsan-devel tar wget curl openssl ca-certificates git rpm-build java-1.8.0-openjdk-devel which gtk2-devel \\\n && yum clean all \\\n && rm -rf /var/cache/yum \\\n && ln -s /opt/maven/bin/mvn /usr/bin/mvn\nENV HOME=\"/home/jenkins\"\nRUN groupadd jenkins -g 1000 \\\n && useradd -d ${HOME} -u 1000 -g 1000 -m jenkins\nUSER jenkins\nWORKDIR ${HOME}\nENV PATH=\"/opt/sbt/bin:/opt/cmake/bin:/opt/protobuf/bin:${PATH}\" \\\n    JAVA_OPTS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap ${JAVA_OPTS}\" \\\n    ANDROID_NDK_HOME=\"/opt/android-ndk-r16b\"\n#   This environment variable required for buildnativeoperations.sh script execution\nENV ANDROID_NDK=\"${ANDROID_NDK_HOME}\"\nCMD [\"cat\"]\n","originalDockerfileUglifiedHash":"3babfb4cb2a204ef5325fbad66957e6a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/79b21ee6286c651ec881497f6639541995feccb1.dockerfile"}