{"seed":3557964821,"processedDockerfileHash":"ea831c80aad45d03597c9746eb0b6b0b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (c) Microsoft Corporation\n#   All rights reserved.\n#\n#   MIT License\n#\n#   Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n#   documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n#   the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n#   to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n#   The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n#\n#   THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n#   BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n#   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n#   DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'\n#\n#\n#   Copyright (c) Peking University 2018\n#\n#   The software is released under the Open-Intelligence Open Source License V1.0.\n#   The copyright owner promises to follow \"Open-Intelligence Open Source Platform\n#   Management Regulation V1.0\", which is provided by The New Generation of \n#   Artificial Intelligence Technology Innovation Strategic Alliance (the AITISA).\n#   tag: qizhi.build.base:hadoop2.7.2-cuda9.0-cudnn7-devel-ubuntu16.04\n#\n#   Base image to build for the system.\n#   Other images depend on it, so build it like:\n#\n#   docker build -f Dockerfile.build.base -t qizhi.build.base:hadoop2.7.2-cuda9.0-cudnn7-devel-ubuntu16.04 .\n#   Tag: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#   Label: com.nvidia.cuda.version: 9.0.176\n#   Label: com.nvidia.cudnn.version: 7.1.2.21\n#   Label: com.nvidia.volumes.needed: nvidia_driver\n#   Label: maintainer: NVIDIA CORPORATION <cudatools@nvidia.com>\n#   Ubuntu 16.04\nFROM nvidia/cuda@sha256:40db1c98b66e133f54197ba1a66312b9c29842635c8cba5ae66fb56ded695b7c\nENV HADOOP_VERSION=\"2.7.2\"\nLABEL HADOOP_VERSION=\"2.7.2\"\nRUN sed -i 's/http:\\/\\/archive\\.ubuntu\\.com\\/ubuntu\\//http:\\/\\/mirrors\\.tuna\\.tsinghua\\.edu\\.cn\\/ubuntu\\//g' /etc/apt/sources.list\nRUN DEBIAN_FRONTEND=noninteractive \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends python python-pip python-dev python3=3.11.2-1 python3-pip=23.0.1+dfsg-1 python3-dev=3.11.2-1 python-yaml python-six build-essential=12.9ubuntu3 git=1:2.39.2-1ubuntu1 wget=1.21.3-1ubuntu1 curl=7.88.1-7ubuntu1 unzip=6.0-27ubuntu1 automake=1:1.16.5-1.3 openjdk-8-jdk=8u362-ga-0ubuntu2 openssh-server=1:9.0p1-1ubuntu8 openssh-client=1:9.0p1-1ubuntu8 vim=2:9.0.1000-4ubuntu2 lsof=4.95.0-1 libcupti-dev=11.8.87~11.8.0-2ubuntu1 -y \\\n && apt-get clean \\\n && git clone https://github.com/rofl0r/proxychains-ng.git \\\n && cd proxychains-ng \\\n && ./configure --prefix=/usr --sysconfdir=/etc \\\n && make \\\n && make install \\\n && make install-config \\\n && cd .. \\\n && rm -rf proxychains-ng \\\n && sed -i 's/^socks4/#socks4/g' /etc/proxychains.conf \\\n && echo 'socks5 162.105.95.73 3331' >> /etc/proxychains.conf\nRUN proxychains4 wget -qO- http://archive.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz | tar xz -C /usr/local \\\n && mv /usr/local/hadoop-${HADOOP_VERSION} /usr/local/hadoop\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    HADOOP_INSTALL=\"/usr/local/hadoop\" \\\n    NVIDIA_VISIBLE_DEVICES=\"all\"\nENV HADOOP_PREFIX=\"${HADOOP_INSTALL}\" \\\n    HADOOP_BIN_DIR=\"${HADOOP_INSTALL}/bin\" \\\n    HADOOP_SBIN_DIR=\"${HADOOP_INSTALL}/sbin\" \\\n    HADOOP_HDFS_HOME=\"${HADOOP_INSTALL}\" \\\n    HADOOP_COMMON_LIB_NATIVE_DIR=\"${HADOOP_INSTALL}/lib/native\" \\\n    HADOOP_OPTS=\"-Djava.library.path=${HADOOP_INSTALL}/lib/native\"\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${HADOOP_BIN_DIR}:${HADOOP_SBIN_DIR}\" \\\n    LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:/usr/local/cuda/targets/x86_64-linux/lib/stubs:${JAVA_HOME}/jre/lib/amd64/server\"\nWORKDIR /root\nRUN pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow keras mxnet torch torchvision flask --user \\\n && git clone https://github.com/iCGY96/open-exchange.git\nWORKDIR /root/open-exchange/restapi\nEXPOSE 6023/tcp\nENTRYPOINT [\"python3\", \"app.py\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) Microsoft Corporation\n#  All rights reserved.\n#\n#  MIT License\n#\n#  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n#  documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n#  the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n#  to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n#  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n#\n#  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n#  BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n#  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n#  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'\n#\n#\n#  Copyright (c) Peking University 2018\n#\n#  The software is released under the Open-Intelligence Open Source License V1.0.\n#  The copyright owner promises to follow \"Open-Intelligence Open Source Platform\n#  Management Regulation V1.0\", which is provided by The New Generation of \n#  Artificial Intelligence Technology Innovation Strategic Alliance (the AITISA).\n#  tag: qizhi.build.base:hadoop2.7.2-cuda9.0-cudnn7-devel-ubuntu16.04\n#\n#  Base image to build for the system.\n#  Other images depend on it, so build it like:\n#\n#  docker build -f Dockerfile.build.base -t qizhi.build.base:hadoop2.7.2-cuda9.0-cudnn7-devel-ubuntu16.04 .\n#  Tag: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#  Label: com.nvidia.cuda.version: 9.0.176\n#  Label: com.nvidia.cudnn.version: 7.1.2.21\n#  Label: com.nvidia.volumes.needed: nvidia_driver\n#  Label: maintainer: NVIDIA CORPORATION <cudatools@nvidia.com>\n#  Ubuntu 16.04\nFROM nvidia/cuda@sha256:40db1c98b66e133f54197ba1a66312b9c29842635c8cba5ae66fb56ded695b7c\nENV HADOOP_VERSION=\"2.7.2\"\nLABEL HADOOP_VERSION=\"2.7.2\"\nRUN sed -i 's/http:\\/\\/archive\\.ubuntu\\.com\\/ubuntu\\//http:\\/\\/mirrors\\.tuna\\.tsinghua\\.edu\\.cn\\/ubuntu\\//g' /etc/apt/sources.list\nRUN DEBIAN_FRONTEND=noninteractive \\\n && apt-get update -y \\\n && apt-get install python python-pip python-dev python3 python3-pip python3-dev python-yaml python-six build-essential git wget curl unzip automake openjdk-8-jdk openssh-server openssh-client vim lsof libcupti-dev -y \\\n && apt-get clean \\\n && git clone https://github.com/rofl0r/proxychains-ng.git \\\n && cd proxychains-ng \\\n && ./configure --prefix=/usr --sysconfdir=/etc \\\n && make \\\n && make install \\\n && make install-config \\\n && cd .. \\\n && rm -rf proxychains-ng \\\n && sed -i 's/^socks4/#socks4/g' /etc/proxychains.conf \\\n && echo 'socks5 162.105.95.73 3331' >> /etc/proxychains.conf\nRUN proxychains4 wget -qO- http://archive.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz | tar xz -C /usr/local \\\n && mv /usr/local/hadoop-${HADOOP_VERSION} /usr/local/hadoop\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    HADOOP_INSTALL=\"/usr/local/hadoop\" \\\n    NVIDIA_VISIBLE_DEVICES=\"all\"\nENV HADOOP_PREFIX=\"${HADOOP_INSTALL}\" \\\n    HADOOP_BIN_DIR=\"${HADOOP_INSTALL}/bin\" \\\n    HADOOP_SBIN_DIR=\"${HADOOP_INSTALL}/sbin\" \\\n    HADOOP_HDFS_HOME=\"${HADOOP_INSTALL}\" \\\n    HADOOP_COMMON_LIB_NATIVE_DIR=\"${HADOOP_INSTALL}/lib/native\" \\\n    HADOOP_OPTS=\"-Djava.library.path=${HADOOP_INSTALL}/lib/native\"\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${HADOOP_BIN_DIR}:${HADOOP_SBIN_DIR}\" \\\n    LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:/usr/local/cuda/targets/x86_64-linux/lib/stubs:${JAVA_HOME}/jre/lib/amd64/server\"\nWORKDIR /root\nRUN pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow keras mxnet torch torchvision flask --user \\\n && git clone https://github.com/iCGY96/open-exchange.git\nWORKDIR /root/open-exchange/restapi\nEXPOSE 6023/tcp\nENTRYPOINT [\"python3\", \"app.py\"]\n","injectedSmells":[],"originalDockerfileHash":"85b1ecba52c5be8d50d2054fd4123c15","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) Microsoft Corporation\n#   All rights reserved.\n#\n#   MIT License\n#\n#   Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n#   documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n#   the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n#   to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n#   The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n#\n#   THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n#   BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n#   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n#   DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'\n#\n#\n#   Copyright (c) Peking University 2018\n#\n#   The software is released under the Open-Intelligence Open Source License V1.0.\n#   The copyright owner promises to follow \"Open-Intelligence Open Source Platform\n#   Management Regulation V1.0\", which is provided by The New Generation of \n#   Artificial Intelligence Technology Innovation Strategic Alliance (the AITISA).\n#   tag: qizhi.build.base:hadoop2.7.2-cuda9.0-cudnn7-devel-ubuntu16.04\n#\n#   Base image to build for the system.\n#   Other images depend on it, so build it like:\n#\n#   docker build -f Dockerfile.build.base -t qizhi.build.base:hadoop2.7.2-cuda9.0-cudnn7-devel-ubuntu16.04 .\n#   Tag: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#   Label: com.nvidia.cuda.version: 9.0.176\n#   Label: com.nvidia.cudnn.version: 7.1.2.21\n#   Label: com.nvidia.volumes.needed: nvidia_driver\n#   Label: maintainer: NVIDIA CORPORATION <cudatools@nvidia.com>\n#   Ubuntu 16.04\nFROM nvidia/cuda@sha256:40db1c98b66e133f54197ba1a66312b9c29842635c8cba5ae66fb56ded695b7c\nENV HADOOP_VERSION=\"2.7.2\"\nLABEL HADOOP_VERSION=\"2.7.2\"\nRUN sed -i 's/http:\\/\\/archive\\.ubuntu\\.com\\/ubuntu\\//http:\\/\\/mirrors\\.tuna\\.tsinghua\\.edu\\.cn\\/ubuntu\\//g' /etc/apt/sources.list\nRUN DEBIAN_FRONTEND=noninteractive \\\n && apt-get update -y \\\n && apt-get install python python-pip python-dev python3 python3-pip python3-dev python-yaml python-six build-essential git wget curl unzip automake openjdk-8-jdk openssh-server openssh-client vim lsof libcupti-dev -y \\\n && apt-get clean \\\n && git clone https://github.com/rofl0r/proxychains-ng.git \\\n && cd proxychains-ng \\\n && ./configure --prefix=/usr --sysconfdir=/etc \\\n && make \\\n && make install \\\n && make install-config \\\n && cd .. \\\n && rm -rf proxychains-ng \\\n && sed -i 's/^socks4/#socks4/g' /etc/proxychains.conf \\\n && echo 'socks5 162.105.95.73 3331' >> /etc/proxychains.conf\nRUN proxychains4 wget -qO- http://archive.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz | tar xz -C /usr/local \\\n && mv /usr/local/hadoop-${HADOOP_VERSION} /usr/local/hadoop\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    HADOOP_INSTALL=\"/usr/local/hadoop\" \\\n    NVIDIA_VISIBLE_DEVICES=\"all\"\nENV HADOOP_PREFIX=\"${HADOOP_INSTALL}\" \\\n    HADOOP_BIN_DIR=\"${HADOOP_INSTALL}/bin\" \\\n    HADOOP_SBIN_DIR=\"${HADOOP_INSTALL}/sbin\" \\\n    HADOOP_HDFS_HOME=\"${HADOOP_INSTALL}\" \\\n    HADOOP_COMMON_LIB_NATIVE_DIR=\"${HADOOP_INSTALL}/lib/native\" \\\n    HADOOP_OPTS=\"-Djava.library.path=${HADOOP_INSTALL}/lib/native\"\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${HADOOP_BIN_DIR}:${HADOOP_SBIN_DIR}\" \\\n    LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:/usr/local/cuda/targets/x86_64-linux/lib/stubs:${JAVA_HOME}/jre/lib/amd64/server\"\nWORKDIR /root\nRUN pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow keras mxnet torch torchvision flask --user \\\n && git clone https://github.com/iCGY96/open-exchange.git\nWORKDIR /root/open-exchange/restapi\nEXPOSE 6023/tcp\nENTRYPOINT [\"python3\", \"app.py\"]\n","originalDockerfileUglifiedHash":"1cd0e6f9c2e0a0cd38e7318c3f96bef9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6f7037512a8583449d0d499e31fb51d2893a64cd.dockerfile"}