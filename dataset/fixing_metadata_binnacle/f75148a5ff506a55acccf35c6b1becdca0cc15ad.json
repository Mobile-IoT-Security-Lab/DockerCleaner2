{"seed":1127734261,"processedDockerfileHash":"9e8e3a6b1fb890a977de1cd8defdf22b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   ffmpeg - http://ffmpeg.org/download.html\n#\n#   From https://trac.ffmpeg.org/wiki/CompilationGuide/Centos\n#\n#   https://hub.docker.com/r/jrottenberg/ffmpeg/\n#\n#\nFROM centos:7 AS base\nRUN yum -y install libgomp \\\n && yum clean all\nFROM base AS build\nWORKDIR /tmp/workdir\nARG PKG_CONFIG_PATH=/opt/ffmpeg/lib/pkgconfig\nARG LD_LIBRARY_PATH=/opt/ffmpeg/lib\nARG PREFIX=/opt/ffmpeg\nARG MAKEFLAGS=\"-j2\"\nENV FFMPEG_VERSION=\"3.0.12\" \\\n    FDKAAC_VERSION=\"0.1.5\" \\\n    LAME_VERSION=\"3.100\" \\\n    LIBASS_VERSION=\"0.13.7\" \\\n    OGG_VERSION=\"1.3.2\" \\\n    OPENCOREAMR_VERSION=\"0.1.5\" \\\n    OPUS_VERSION=\"1.2\" \\\n    OPENJPEG_VERSION=\"2.1.2\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.8.0\" \\\n    X264_VERSION=\"20170226-2245-stable\" \\\n    X265_VERSION=\"2.3\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    FREETYPE_VERSION=\"2.5.5\" \\\n    FRIBIDI_VERSION=\"0.19.7\" \\\n    FONTCONFIG_VERSION=\"2.12.4\" \\\n    LIBVIDSTAB_VERSION=\"1.1.0\" \\\n    KVAZAAR_VERSION=\"1.2.0\" \\\n    AOM_VERSION=\"v1.0.0\" \\\n    SRC=\"/usr/local\"\nARG OGG_SHA256SUM=\"e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692  libogg-1.3.2.tar.gz\"\nARG OPUS_SHA256SUM=\"77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9  opus-1.2.tar.gz\"\nARG VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\"\nARG THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\"\nARG XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\"\nARG FREETYPE_SHA256SUM=\"5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8  freetype-2.5.5.tar.gz\"\nARG LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\nARG LIBASS_SHA256SUM=\"8fadf294bf701300d4605e6f1d92929304187fca4b8d8a47889315526adbafd7  0.13.7.tar.gz\"\nARG FRIBIDI_SHA256SUM=\"3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8  0.19.7.tar.gz\"\nRUN buildDeps=\"autoconf automake bzip2 cmake expat-devel gcc gcc-c++ git gperf libtool make nasm perl openssl-devel tar yasm which zlib-devel\" \\\n && echo \"${SRC}/lib\" > /etc/ld.so.conf.d/libc.conf \\\n && yum --enablerepo=extras install -y epel-release \\\n && yum install -y ${buildDeps}\n#  # opencore-amr https://sourceforge.net/projects/opencore-amr/\nRUN DIR=/tmp/opencore-amr \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://kent.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # x264 http://www.videolan.org/developers/x264.html\nRUN DIR=/tmp/x264 \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | tar -jx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared --enable-pic --disable-cli \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## x265 http://x265.org/\nRUN DIR=/tmp/x265 \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | tar -zx \\\n && cd x265_${X265_VERSION}/build/linux \\\n && sed -i \"/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=${PREFIX}/\" multilib.sh \\\n && sed -i \"/^cmake/ s/$/ -DENABLE_CLI=OFF/\" multilib.sh \\\n && ./multilib.sh \\\n && make -C 8bit install \\\n && rm -rf ${DIR}\n#  ## libogg https://www.xiph.org/ogg/\nRUN DIR=/tmp/ogg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz \\\n && echo ${OGG_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libopus https://www.opus-codec.org/\nRUN DIR=/tmp/opus \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz \\\n && echo ${OPUS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libvorbis https://xiph.org/vorbis/\nRUN DIR=/tmp/vorbis \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz \\\n && echo ${VORBIS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libtheora http://www.theora.org/\nRUN DIR=/tmp/theora \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz \\\n && echo ${THEORA_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libvpx https://www.webmproject.org/code/\nRUN DIR=/tmp/vpx \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared --disable-debug --disable-examples --disable-docs --disable-install-bins \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libmp3lame http://lame.sourceforge.net/\nRUN DIR=/tmp/lame \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://kent.dl.sourceforge.net/project/lame/lame/$( echo ${LAME_VERSION} | sed -e 's/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/' ;)/lame-${LAME_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --enable-shared --enable-nasm --enable-pic --disable-frontend \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## xvid https://www.xvid.com/\nRUN DIR=/tmp/xvid \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \\\n && echo ${XVID_SHA256SUM} | sha256sum --check \\\n && tar -zx -f xvidcore-${XVID_VERSION}.tar.gz \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --datadir=\"${DIR}\" --enable-shared --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## fdk-aac https://github.com/mstorsjo/fdk-aac\nRUN DIR=/tmp/fdk-aac \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # openjpeg https://github.com/uclouvain/openjpeg\nRUN DIR=/tmp/openjpeg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # freetype https://www.freetype.org/\nRUN DIR=/tmp/freetype \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz \\\n && echo ${FREETYPE_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # libvstab https://github.com/georgmartius/vid.stab\nRUN DIR=/tmp/vid.stab \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz \\\n && echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz \\\n && cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # fridibi https://www.fribidi.org/\n#   + https://github.com/fribidi/fribidi/issues/8\nRUN DIR=/tmp/fribidi \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz \\\n && echo ${FRIBIDI_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz \\\n && sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am \\\n && ./bootstrap --no-config \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make -j 1 \\\n && make install \\\n && rm -rf ${DIR}\n#  # fontconfig https://www.freedesktop.org/wiki/Software/fontconfig/\nRUN DIR=/tmp/fontconfig \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 \\\n && tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # libass https://github.com/libass/libass\nRUN DIR=/tmp/libass \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz \\\n && echo ${LIBASS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz \\\n && ./autogen.sh \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # kvazaar https://github.com/ultravideo/kvazaar\nRUN DIR=/tmp/kvazaar \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz \\\n && tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz \\\n && ./autogen.sh \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\nRUN DIR=/tmp/aom \\\n && git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} ; cd ${DIR} ; rm -rf CMakeCache.txt CMakeFiles ; mkdir -p ./aom_build ; cd ./aom_build ; cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 .. ; make ; make install ; rm -rf ${DIR}\n#  # ffmpeg https://ffmpeg.org/\nRUN DIR=/tmp/ffmpeg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2\nRUN DIR=/tmp/ffmpeg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && ./configure --disable-debug --disable-doc --disable-ffplay --enable-shared --enable-avresample --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-gpl --enable-libass --enable-libfreetype --enable-libvidstab --enable-libmp3lame --enable-libopenjpeg --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx265 --enable-libxvid --enable-libx264 --enable-nonfree --enable-openssl --enable-libfdk_aac --enable-libkvazaar --enable-postproc --enable-small --enable-version3 --extra-cflags=\"-I${PREFIX}/include\" --extra-ldflags=\"-L${PREFIX}/lib\" --extra-libs=-ldl --prefix=\"${PREFIX}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && cd tools \\\n && make qt-faststart \\\n && cp qt-faststart ${PREFIX}/bin\nRUN ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib64/ \\\n && cp ${PREFIX}/bin/* /usr/local/bin/ \\\n && cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ \\\n && LD_LIBRARY_PATH=/usr/local/lib64 ffmpeg -buildconf\nFROM base\nMAINTAINER Julien Rottenberg <julien@rottenberg.info>\nCMD [\"--help\"]\nENTRYPOINT [\"ffmpeg\"]\nENV LD_LIBRARY_PATH=\"/usr/local/lib64\"\nCOPY --from=build /usr/local/ /usr/local/\n#   Let's make sure the app built correctly\n#   Convenient to verify on https://hub.docker.com/r/jrottenberg/ffmpeg/builds/ console output\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  ffmpeg - http://ffmpeg.org/download.html\n#\n#  From https://trac.ffmpeg.org/wiki/CompilationGuide/Centos\n#\n#  https://hub.docker.com/r/jrottenberg/ffmpeg/\n#\n#\nFROM centos:7 AS base\nRUN yum -y install libgomp \\\n && yum clean all\nFROM base AS build\nWORKDIR /tmp/workdir\nARG PKG_CONFIG_PATH=/opt/ffmpeg/lib/pkgconfig\nARG LD_LIBRARY_PATH=/opt/ffmpeg/lib\nARG PREFIX=/opt/ffmpeg\nARG MAKEFLAGS=\"-j2\"\nENV FFMPEG_VERSION=\"3.0.12\" \\\n    FDKAAC_VERSION=\"0.1.5\" \\\n    LAME_VERSION=\"3.100\" \\\n    LIBASS_VERSION=\"0.13.7\" \\\n    OGG_VERSION=\"1.3.2\" \\\n    OPENCOREAMR_VERSION=\"0.1.5\" \\\n    OPUS_VERSION=\"1.2\" \\\n    OPENJPEG_VERSION=\"2.1.2\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.8.0\" \\\n    X264_VERSION=\"20170226-2245-stable\" \\\n    X265_VERSION=\"2.3\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    FREETYPE_VERSION=\"2.5.5\" \\\n    FRIBIDI_VERSION=\"0.19.7\" \\\n    FONTCONFIG_VERSION=\"2.12.4\" \\\n    LIBVIDSTAB_VERSION=\"1.1.0\" \\\n    KVAZAAR_VERSION=\"1.2.0\" \\\n    AOM_VERSION=\"v1.0.0\" \\\n    SRC=\"/usr/local\"\nARG OGG_SHA256SUM=\"e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692  libogg-1.3.2.tar.gz\"\nARG OPUS_SHA256SUM=\"77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9  opus-1.2.tar.gz\"\nARG VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\"\nARG THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\"\nARG XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\"\nARG FREETYPE_SHA256SUM=\"5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8  freetype-2.5.5.tar.gz\"\nARG LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\nARG LIBASS_SHA256SUM=\"8fadf294bf701300d4605e6f1d92929304187fca4b8d8a47889315526adbafd7  0.13.7.tar.gz\"\nARG FRIBIDI_SHA256SUM=\"3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8  0.19.7.tar.gz\"\nRUN buildDeps=\"autoconf automake bzip2 cmake expat-devel gcc gcc-c++ git gperf libtool make nasm perl openssl-devel tar yasm which zlib-devel\" \\\n && echo \"${SRC}/lib\" > /etc/ld.so.conf.d/libc.conf \\\n && yum --enablerepo=extras install -y epel-release \\\n && yum install -y ${buildDeps}\n# # opencore-amr https://sourceforge.net/projects/opencore-amr/\nRUN DIR=/tmp/opencore-amr \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://kent.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# # x264 http://www.videolan.org/developers/x264.html\nRUN DIR=/tmp/x264 \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | tar -jx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared --enable-pic --disable-cli \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# ## x265 http://x265.org/\nRUN DIR=/tmp/x265 \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | tar -zx \\\n && cd x265_${X265_VERSION}/build/linux \\\n && sed -i \"/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=${PREFIX}/\" multilib.sh \\\n && sed -i \"/^cmake/ s/$/ -DENABLE_CLI=OFF/\" multilib.sh \\\n && ./multilib.sh \\\n && make -C 8bit install \\\n && rm -rf ${DIR}\n# ## libogg https://www.xiph.org/ogg/\nRUN DIR=/tmp/ogg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz \\\n && echo ${OGG_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# ## libopus https://www.opus-codec.org/\nRUN DIR=/tmp/opus \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz \\\n && echo ${OPUS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# ## libvorbis https://xiph.org/vorbis/\nRUN DIR=/tmp/vorbis \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz \\\n && echo ${VORBIS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# ## libtheora http://www.theora.org/\nRUN DIR=/tmp/theora \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz \\\n && echo ${THEORA_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# ## libvpx https://www.webmproject.org/code/\nRUN DIR=/tmp/vpx \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared --disable-debug --disable-examples --disable-docs --disable-install-bins \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# ## libmp3lame http://lame.sourceforge.net/\nRUN DIR=/tmp/lame \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://kent.dl.sourceforge.net/project/lame/lame/$( echo ${LAME_VERSION} | sed -e 's/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/' ;)/lame-${LAME_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --enable-shared --enable-nasm --enable-pic --disable-frontend \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# ## xvid https://www.xvid.com/\nRUN DIR=/tmp/xvid \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \\\n && echo ${XVID_SHA256SUM} | sha256sum --check \\\n && tar -zx -f xvidcore-${XVID_VERSION}.tar.gz \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --datadir=\"${DIR}\" --enable-shared --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# ## fdk-aac https://github.com/mstorsjo/fdk-aac\nRUN DIR=/tmp/fdk-aac \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# # openjpeg https://github.com/uclouvain/openjpeg\nRUN DIR=/tmp/openjpeg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# # freetype https://www.freetype.org/\nRUN DIR=/tmp/freetype \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz \\\n && echo ${FREETYPE_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# # libvstab https://github.com/georgmartius/vid.stab\nRUN DIR=/tmp/vid.stab \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz \\\n && echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz \\\n && cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# # fridibi https://www.fribidi.org/\n#  + https://github.com/fribidi/fribidi/issues/8\nRUN DIR=/tmp/fribidi \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz \\\n && echo ${FRIBIDI_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz \\\n && sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am \\\n && ./bootstrap --no-config \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make -j 1 \\\n && make install \\\n && rm -rf ${DIR}\n# # fontconfig https://www.freedesktop.org/wiki/Software/fontconfig/\nRUN DIR=/tmp/fontconfig \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 \\\n && tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# # libass https://github.com/libass/libass\nRUN DIR=/tmp/libass \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz \\\n && echo ${LIBASS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz \\\n && ./autogen.sh \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n# # kvazaar https://github.com/ultravideo/kvazaar\nRUN DIR=/tmp/kvazaar \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz \\\n && tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz \\\n && ./autogen.sh \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\nRUN DIR=/tmp/aom \\\n && git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} ; cd ${DIR} ; rm -rf CMakeCache.txt CMakeFiles ; mkdir -p ./aom_build ; cd ./aom_build ; cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 .. ; make ; make install ; rm -rf ${DIR}\n# # ffmpeg https://ffmpeg.org/\nRUN DIR=/tmp/ffmpeg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2\nRUN DIR=/tmp/ffmpeg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && ./configure --disable-debug --disable-doc --disable-ffplay --enable-shared --enable-avresample --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-gpl --enable-libass --enable-libfreetype --enable-libvidstab --enable-libmp3lame --enable-libopenjpeg --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx265 --enable-libxvid --enable-libx264 --enable-nonfree --enable-openssl --enable-libfdk_aac --enable-libkvazaar --enable-postproc --enable-small --enable-version3 --extra-cflags=\"-I${PREFIX}/include\" --extra-ldflags=\"-L${PREFIX}/lib\" --extra-libs=-ldl --prefix=\"${PREFIX}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && cd tools \\\n && make qt-faststart \\\n && cp qt-faststart ${PREFIX}/bin\nRUN ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib64/ \\\n && cp ${PREFIX}/bin/* /usr/local/bin/ \\\n && cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ \\\n && LD_LIBRARY_PATH=/usr/local/lib64 ffmpeg -buildconf\nFROM base\nMAINTAINER Julien Rottenberg <julien@rottenberg.info>\nCMD [\"--help\"]\nENTRYPOINT [\"ffmpeg\"]\nENV LD_LIBRARY_PATH=\"/usr/local/lib64\"\nCOPY --from=build /usr/local/ /usr/local/\n#  Let's make sure the app built correctly\n#  Convenient to verify on https://hub.docker.com/r/jrottenberg/ffmpeg/builds/ console output\n","injectedSmells":[],"originalDockerfileHash":"3bc89ec58a749faca0d943514337dbf5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ffmpeg - http://ffmpeg.org/download.html\n#\n#   From https://trac.ffmpeg.org/wiki/CompilationGuide/Centos\n#\n#   https://hub.docker.com/r/jrottenberg/ffmpeg/\n#\n#\nFROM centos:7 AS base\nRUN yum -y install libgomp \\\n && yum clean all\nFROM base AS build\nWORKDIR /tmp/workdir\nARG PKG_CONFIG_PATH=/opt/ffmpeg/lib/pkgconfig\nARG LD_LIBRARY_PATH=/opt/ffmpeg/lib\nARG PREFIX=/opt/ffmpeg\nARG MAKEFLAGS=\"-j2\"\nENV FFMPEG_VERSION=\"3.0.12\" \\\n    FDKAAC_VERSION=\"0.1.5\" \\\n    LAME_VERSION=\"3.100\" \\\n    LIBASS_VERSION=\"0.13.7\" \\\n    OGG_VERSION=\"1.3.2\" \\\n    OPENCOREAMR_VERSION=\"0.1.5\" \\\n    OPUS_VERSION=\"1.2\" \\\n    OPENJPEG_VERSION=\"2.1.2\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.8.0\" \\\n    X264_VERSION=\"20170226-2245-stable\" \\\n    X265_VERSION=\"2.3\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    FREETYPE_VERSION=\"2.5.5\" \\\n    FRIBIDI_VERSION=\"0.19.7\" \\\n    FONTCONFIG_VERSION=\"2.12.4\" \\\n    LIBVIDSTAB_VERSION=\"1.1.0\" \\\n    KVAZAAR_VERSION=\"1.2.0\" \\\n    AOM_VERSION=\"v1.0.0\" \\\n    SRC=\"/usr/local\"\nARG OGG_SHA256SUM=\"e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692  libogg-1.3.2.tar.gz\"\nARG OPUS_SHA256SUM=\"77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9  opus-1.2.tar.gz\"\nARG VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\"\nARG THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\"\nARG XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\"\nARG FREETYPE_SHA256SUM=\"5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8  freetype-2.5.5.tar.gz\"\nARG LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\nARG LIBASS_SHA256SUM=\"8fadf294bf701300d4605e6f1d92929304187fca4b8d8a47889315526adbafd7  0.13.7.tar.gz\"\nARG FRIBIDI_SHA256SUM=\"3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8  0.19.7.tar.gz\"\nRUN buildDeps=\"autoconf automake bzip2 cmake expat-devel gcc gcc-c++ git gperf libtool make nasm perl openssl-devel tar yasm which zlib-devel\" \\\n && echo \"${SRC}/lib\" > /etc/ld.so.conf.d/libc.conf \\\n && yum --enablerepo=extras install -y epel-release \\\n && yum install -y ${buildDeps}\n#  # opencore-amr https://sourceforge.net/projects/opencore-amr/\nRUN DIR=/tmp/opencore-amr \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://kent.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # x264 http://www.videolan.org/developers/x264.html\nRUN DIR=/tmp/x264 \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | tar -jx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared --enable-pic --disable-cli \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## x265 http://x265.org/\nRUN DIR=/tmp/x265 \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | tar -zx \\\n && cd x265_${X265_VERSION}/build/linux \\\n && sed -i \"/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=${PREFIX}/\" multilib.sh \\\n && sed -i \"/^cmake/ s/$/ -DENABLE_CLI=OFF/\" multilib.sh \\\n && ./multilib.sh \\\n && make -C 8bit install \\\n && rm -rf ${DIR}\n#  ## libogg https://www.xiph.org/ogg/\nRUN DIR=/tmp/ogg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz \\\n && echo ${OGG_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libopus https://www.opus-codec.org/\nRUN DIR=/tmp/opus \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz \\\n && echo ${OPUS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libvorbis https://xiph.org/vorbis/\nRUN DIR=/tmp/vorbis \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz \\\n && echo ${VORBIS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libtheora http://www.theora.org/\nRUN DIR=/tmp/theora \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz \\\n && echo ${THEORA_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libvpx https://www.webmproject.org/code/\nRUN DIR=/tmp/vpx \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared --disable-debug --disable-examples --disable-docs --disable-install-bins \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## libmp3lame http://lame.sourceforge.net/\nRUN DIR=/tmp/lame \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://kent.dl.sourceforge.net/project/lame/lame/$( echo ${LAME_VERSION} | sed -e 's/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/' ;)/lame-${LAME_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --enable-shared --enable-nasm --enable-pic --disable-frontend \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## xvid https://www.xvid.com/\nRUN DIR=/tmp/xvid \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \\\n && echo ${XVID_SHA256SUM} | sha256sum --check \\\n && tar -zx -f xvidcore-${XVID_VERSION}.tar.gz \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --datadir=\"${DIR}\" --enable-shared --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  ## fdk-aac https://github.com/mstorsjo/fdk-aac\nRUN DIR=/tmp/fdk-aac \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${PREFIX}\" --enable-shared --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # openjpeg https://github.com/uclouvain/openjpeg\nRUN DIR=/tmp/openjpeg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # freetype https://www.freetype.org/\nRUN DIR=/tmp/freetype \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz \\\n && echo ${FREETYPE_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz \\\n && ./configure --prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # libvstab https://github.com/georgmartius/vid.stab\nRUN DIR=/tmp/vid.stab \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz \\\n && echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz \\\n && cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # fridibi https://www.fribidi.org/\n#   + https://github.com/fribidi/fribidi/issues/8\nRUN DIR=/tmp/fribidi \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz \\\n && echo ${FRIBIDI_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz \\\n && sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am \\\n && ./bootstrap --no-config \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make -j 1 \\\n && make install \\\n && rm -rf ${DIR}\n#  # fontconfig https://www.freedesktop.org/wiki/Software/fontconfig/\nRUN DIR=/tmp/fontconfig \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 \\\n && tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # libass https://github.com/libass/libass\nRUN DIR=/tmp/libass \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz \\\n && echo ${LIBASS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz \\\n && ./autogen.sh \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  # kvazaar https://github.com/ultravideo/kvazaar\nRUN DIR=/tmp/kvazaar \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz \\\n && tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz \\\n && ./autogen.sh \\\n && ./configure -prefix=\"${PREFIX}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\nRUN DIR=/tmp/aom \\\n && git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} ; cd ${DIR} ; rm -rf CMakeCache.txt CMakeFiles ; mkdir -p ./aom_build ; cd ./aom_build ; cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 .. ; make ; make install ; rm -rf ${DIR}\n#  # ffmpeg https://ffmpeg.org/\nRUN DIR=/tmp/ffmpeg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2\nRUN DIR=/tmp/ffmpeg \\\n && mkdir -p ${DIR} \\\n && cd ${DIR} \\\n && ./configure --disable-debug --disable-doc --disable-ffplay --enable-shared --enable-avresample --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-gpl --enable-libass --enable-libfreetype --enable-libvidstab --enable-libmp3lame --enable-libopenjpeg --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx265 --enable-libxvid --enable-libx264 --enable-nonfree --enable-openssl --enable-libfdk_aac --enable-libkvazaar --enable-postproc --enable-small --enable-version3 --extra-cflags=\"-I${PREFIX}/include\" --extra-ldflags=\"-L${PREFIX}/lib\" --extra-libs=-ldl --prefix=\"${PREFIX}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && cd tools \\\n && make qt-faststart \\\n && cp qt-faststart ${PREFIX}/bin\nRUN ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib64/ \\\n && cp ${PREFIX}/bin/* /usr/local/bin/ \\\n && cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ \\\n && LD_LIBRARY_PATH=/usr/local/lib64 ffmpeg -buildconf\nFROM base\nMAINTAINER Julien Rottenberg <julien@rottenberg.info>\nCMD [\"--help\"]\nENTRYPOINT [\"ffmpeg\"]\nENV LD_LIBRARY_PATH=\"/usr/local/lib64\"\nCOPY --from=build /usr/local/ /usr/local/\n#   Let's make sure the app built correctly\n#   Convenient to verify on https://hub.docker.com/r/jrottenberg/ffmpeg/builds/ console output\n","originalDockerfileUglifiedHash":"dd0210e6f02f67e5b466623f723c3287","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f75148a5ff506a55acccf35c6b1becdca0cc15ad.dockerfile"}