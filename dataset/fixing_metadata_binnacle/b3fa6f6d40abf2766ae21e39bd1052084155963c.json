{"seed":589487411,"processedDockerfileHash":"b4d8bd282bf54901f86b229a4c10ce8a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ###\n#   Builds the lucida base image\nFROM ubuntu:14.04\n#  ### environment variables\nENV LUCIDAROOT=\"/usr/local/lucida/lucida\"\nENV THRIFT_ROOT=\"/usr/src/thrift-$THRIFT_VERSION\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV CAFFE=\"/usr/src/caffe/distribute\"\nENV CPU_ONLY=\"1 # for caffe\"\nENV OPENCV_VERSION=\"2.4.9\"\nENV THRIFT_VERSION=\"0.9.2\"\nENV THREADS=\"4\"\nENV PROTOBUF_VERSION=\"2.5.0\"\nENV JAVA_VERSION=\"7\"\nENV JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\n#  ### common package installations\nRUN sed 's/main$/main universe/' -i /etc/apt/sources.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gfortran=4:4.8.2-1ubuntu6 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends make=3.81-8.2ubuntu3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends ant=1.9.3-2ubuntu0.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gcc=4:4.8.2-1ubuntu6 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends g++=4:4.8.2-1ubuntu6 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends automake=1:1.14.1-2ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:1.9.1-1ubuntu0.10 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libboost-all-dev=1.54.0.1ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libevent-dev=2.0.21-stable-1ubuntu1.14.04.2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libtool=2.4.2-1.7ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends pkg-config=0.26-1ubuntu4 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libtesseract-dev=3.03.02-3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libopenblas-dev=0.2.8-6ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libblas-dev=1.2.20110419-7 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libatlas-dev=3.10.1-4 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libatlas-base-dev=3.10.1-4 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends liblapack-dev=3.5.0-2ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends cmake=2.8.12.2-0ubuntu3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends zip=3.0-8 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends unzip=6.0-9ubuntu1.5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends sox=14.4.1-3ubuntu1.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libsox-dev=14.4.1-3ubuntu1.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends autoconf=2.69-6 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends bison=2:3.0.2.dfsg-2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends swig=2.0.11-1ubuntu2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python-pip=1.5.4-1ubuntu4 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends subversion=1.8.8-1ubuntu3.3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libssl-dev=1.0.1f-1ubuntu2.27 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libprotoc-dev=2.5.0-9ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends supervisor=3.0b2-1ubuntu0.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends flac=1.3.0-2ubuntu0.14.04.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gawk=1:4.0.1+dfsg-2.1ubuntu2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends imagemagick=8:6.7.7.10-6ubuntu3.13 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libgflags-dev=2.0-1.1ubuntu1 libgoogle-glog-dev=0.3.3-1 liblmdb-dev=0.9.10-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libleveldb-dev=1.15.0-2 libsnappy-dev=1.1.0-1ubuntu1 libhdf5-serial-dev=1.8.11-5ubuntu7.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends bc=1.06.95-8ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python-numpy=1:1.8.2-0ubuntu0.1 -y )\n#  ### package specific routines\nRUN echo oracle-java$JAVA_VERSION-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends oracle-java$JAVA_VERSION-installer -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk$JAVA_VERSION-installer\n#  ### Thrift\nRUN cd /usr/src \\\n && wget \"http://archive.apache.org/dist/thrift/$THRIFT_VERSION/thrift-$THRIFT_VERSION.tar.gz\" \\\n && tar xf thrift-$THRIFT_VERSION.tar.gz \\\n && cd thrift-$THRIFT_VERSION \\\n && ./configure \\\n && make -j $THREADS \\\n && make -j $THREADS install \\\n && cd lib/py/ \\\n && python setup.py install \\\n && cd ../../lib/java/ \\\n && ant \\\n && cd ../../..\n#  ### OpenCV\nRUN mkdir -p /usr/src/opencv\nRUN cd /usr/src/opencv \\\n && git clone https://github.com/Itseez/opencv.git opencv-$OPENCV_VERSION \\\n && cd opencv-$OPENCV_VERSION \\\n && git checkout $OPENCV_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j$THREADS \\\n && make -j$THREADS install\n#  ### Protobuf\nRUN mkdir -p /usr/src/protobuf\nRUN cd /usr/src/protobuf \\\n && wget \"https://github.com/google/protobuf/releases/download/v$PROTOBUF_VERSION/protobuf-$PROTOBUF_VERSION.tar.gz\" \\\n && tar xf protobuf-$PROTOBUF_VERSION.tar.gz \\\n && cd protobuf-$PROTOBUF_VERSION \\\n && ./configure \\\n && make -j$THREADS \\\n && make install\n#  ### Caffe for djinn\nRUN cd /usr/src \\\n && git clone https://github.com/jhauswald/caffe.git \\\n && cd caffe \\\n && git checkout ipa \\\n && cp Makefile.config.example Makefile.config \\\n && make -j$THREADS \\\n && make distribute\n#  # install lucida\n#   fixes some weird OE compiliation issue\nRUN mkdir -p /usr/local/lucida\nWORKDIR /usr/local/lucida\nCOPY . /usr/local/lucida\nRUN cd lucida/ \\\n && ./thrift-gen.sh\nRUN /usr/bin/make all\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###\n#  Builds the lucida base image\nFROM ubuntu:14.04\n# ### environment variables\nENV LUCIDAROOT=\"/usr/local/lucida/lucida\"\nENV THRIFT_ROOT=\"/usr/src/thrift-$THRIFT_VERSION\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV CAFFE=\"/usr/src/caffe/distribute\"\nENV CPU_ONLY=\"1 # for caffe\"\nENV OPENCV_VERSION=\"2.4.9\"\nENV THRIFT_VERSION=\"0.9.2\"\nENV THREADS=\"4\"\nENV PROTOBUF_VERSION=\"2.5.0\"\nENV JAVA_VERSION=\"7\"\nENV JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\n# ### common package installations\nRUN sed 's/main$/main universe/' -i /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install software-properties-common -y\nRUN apt-get install gfortran -y\nRUN apt-get install make -y\nRUN apt-get install ant -y\nRUN apt-get install gcc -y\nRUN apt-get install g++ -y\nRUN apt-get install wget -y\nRUN apt-get install automake -y\nRUN apt-get install git -y\nRUN apt-get install curl -y\nRUN apt-get install libboost-all-dev -y\nRUN apt-get install libevent-dev -y\nRUN apt-get install libtool -y\nRUN apt-get install pkg-config -y\nRUN apt-get install libtesseract-dev -y\nRUN apt-get install libopenblas-dev -y\nRUN apt-get install libblas-dev -y\nRUN apt-get install libatlas-dev -y\nRUN apt-get install libatlas-base-dev -y\nRUN apt-get install liblapack-dev -y\nRUN apt-get install cmake -y\nRUN apt-get install zip -y\nRUN apt-get install unzip -y\nRUN apt-get install sox -y\nRUN apt-get install libsox-dev -y\nRUN apt-get install autoconf -y\nRUN apt-get install bison -y\nRUN apt-get install swig -y\nRUN apt-get install python-pip -y\nRUN apt-get install subversion -y\nRUN apt-get install libssl-dev -y\nRUN apt-get install libprotoc-dev -y\nRUN apt-get install supervisor -y\nRUN apt-get install flac -y\nRUN apt-get install gawk -y\nRUN apt-get install imagemagick -y\nRUN apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev -y\nRUN apt-get install libleveldb-dev libsnappy-dev libhdf5-serial-dev -y\nRUN apt-get install bc -y\nRUN apt-get install python-numpy -y\n# ### package specific routines\nRUN echo oracle-java$JAVA_VERSION-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java$JAVA_VERSION-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk$JAVA_VERSION-installer\n# ### Thrift\nRUN cd /usr/src \\\n && wget \"http://archive.apache.org/dist/thrift/$THRIFT_VERSION/thrift-$THRIFT_VERSION.tar.gz\" \\\n && tar xf thrift-$THRIFT_VERSION.tar.gz \\\n && cd thrift-$THRIFT_VERSION \\\n && ./configure \\\n && make -j $THREADS \\\n && make -j $THREADS install \\\n && cd lib/py/ \\\n && python setup.py install \\\n && cd ../../lib/java/ \\\n && ant \\\n && cd ../../..\n# ### OpenCV\nRUN mkdir -p /usr/src/opencv\nRUN cd /usr/src/opencv \\\n && git clone https://github.com/Itseez/opencv.git opencv-$OPENCV_VERSION \\\n && cd opencv-$OPENCV_VERSION \\\n && git checkout $OPENCV_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j$THREADS \\\n && make -j$THREADS install\n# ### Protobuf\nRUN mkdir -p /usr/src/protobuf\nRUN cd /usr/src/protobuf \\\n && wget \"https://github.com/google/protobuf/releases/download/v$PROTOBUF_VERSION/protobuf-$PROTOBUF_VERSION.tar.gz\" \\\n && tar xf protobuf-$PROTOBUF_VERSION.tar.gz \\\n && cd protobuf-$PROTOBUF_VERSION \\\n && ./configure \\\n && make -j$THREADS \\\n && make install\n# ### Caffe for djinn\nRUN cd /usr/src \\\n && git clone https://github.com/jhauswald/caffe.git \\\n && cd caffe \\\n && git checkout ipa \\\n && cp Makefile.config.example Makefile.config \\\n && make -j$THREADS \\\n && make distribute\n# # install lucida\n#  fixes some weird OE compiliation issue\nRUN mkdir -p /usr/local/lucida\nWORKDIR /usr/local/lucida\nADD . /usr/local/lucida\nRUN cd lucida/ \\\n && ./thrift-gen.sh\nRUN /usr/bin/make all\n","injectedSmells":[],"originalDockerfileHash":"61b04289d7130c5a17694fda2322dd33","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###\n#   Builds the lucida base image\nFROM ubuntu:14.04\n#  ### environment variables\nENV LUCIDAROOT=\"/usr/local/lucida/lucida\"\nENV THRIFT_ROOT=\"/usr/src/thrift-$THRIFT_VERSION\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV CAFFE=\"/usr/src/caffe/distribute\"\nENV CPU_ONLY=\"1 # for caffe\"\nENV OPENCV_VERSION=\"2.4.9\"\nENV THRIFT_VERSION=\"0.9.2\"\nENV THREADS=\"4\"\nENV PROTOBUF_VERSION=\"2.5.0\"\nENV JAVA_VERSION=\"7\"\nENV JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\n#  ### common package installations\nRUN sed 's/main$/main universe/' -i /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install software-properties-common -y\nRUN apt-get install gfortran -y\nRUN apt-get install make -y\nRUN apt-get install ant -y\nRUN apt-get install gcc -y\nRUN apt-get install g++ -y\nRUN apt-get install wget -y\nRUN apt-get install automake -y\nRUN apt-get install git -y\nRUN apt-get install curl -y\nRUN apt-get install libboost-all-dev -y\nRUN apt-get install libevent-dev -y\nRUN apt-get install libtool -y\nRUN apt-get install pkg-config -y\nRUN apt-get install libtesseract-dev -y\nRUN apt-get install libopenblas-dev -y\nRUN apt-get install libblas-dev -y\nRUN apt-get install libatlas-dev -y\nRUN apt-get install libatlas-base-dev -y\nRUN apt-get install liblapack-dev -y\nRUN apt-get install cmake -y\nRUN apt-get install zip -y\nRUN apt-get install unzip -y\nRUN apt-get install sox -y\nRUN apt-get install libsox-dev -y\nRUN apt-get install autoconf -y\nRUN apt-get install bison -y\nRUN apt-get install swig -y\nRUN apt-get install python-pip -y\nRUN apt-get install subversion -y\nRUN apt-get install libssl-dev -y\nRUN apt-get install libprotoc-dev -y\nRUN apt-get install supervisor -y\nRUN apt-get install flac -y\nRUN apt-get install gawk -y\nRUN apt-get install imagemagick -y\nRUN apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev -y\nRUN apt-get install libleveldb-dev libsnappy-dev libhdf5-serial-dev -y\nRUN apt-get install bc -y\nRUN apt-get install python-numpy -y\n#  ### package specific routines\nRUN echo oracle-java$JAVA_VERSION-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java$JAVA_VERSION-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk$JAVA_VERSION-installer\n#  ### Thrift\nRUN cd /usr/src \\\n && wget \"http://archive.apache.org/dist/thrift/$THRIFT_VERSION/thrift-$THRIFT_VERSION.tar.gz\" \\\n && tar xf thrift-$THRIFT_VERSION.tar.gz \\\n && cd thrift-$THRIFT_VERSION \\\n && ./configure \\\n && make -j $THREADS \\\n && make -j $THREADS install \\\n && cd lib/py/ \\\n && python setup.py install \\\n && cd ../../lib/java/ \\\n && ant \\\n && cd ../../..\n#  ### OpenCV\nRUN mkdir -p /usr/src/opencv\nRUN cd /usr/src/opencv \\\n && git clone https://github.com/Itseez/opencv.git opencv-$OPENCV_VERSION \\\n && cd opencv-$OPENCV_VERSION \\\n && git checkout $OPENCV_VERSION \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j$THREADS \\\n && make -j$THREADS install\n#  ### Protobuf\nRUN mkdir -p /usr/src/protobuf\nRUN cd /usr/src/protobuf \\\n && wget \"https://github.com/google/protobuf/releases/download/v$PROTOBUF_VERSION/protobuf-$PROTOBUF_VERSION.tar.gz\" \\\n && tar xf protobuf-$PROTOBUF_VERSION.tar.gz \\\n && cd protobuf-$PROTOBUF_VERSION \\\n && ./configure \\\n && make -j$THREADS \\\n && make install\n#  ### Caffe for djinn\nRUN cd /usr/src \\\n && git clone https://github.com/jhauswald/caffe.git \\\n && cd caffe \\\n && git checkout ipa \\\n && cp Makefile.config.example Makefile.config \\\n && make -j$THREADS \\\n && make distribute\n#  # install lucida\n#   fixes some weird OE compiliation issue\nRUN mkdir -p /usr/local/lucida\nWORKDIR /usr/local/lucida\nADD . /usr/local/lucida\nRUN cd lucida/ \\\n && ./thrift-gen.sh\nRUN /usr/bin/make all\n","originalDockerfileUglifiedHash":"c7be7448b8f78808094f47841e07978c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b3fa6f6d40abf2766ae21e39bd1052084155963c.dockerfile"}