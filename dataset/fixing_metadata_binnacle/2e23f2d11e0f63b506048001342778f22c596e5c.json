{"seed":1837851682,"processedDockerfileHash":"a8ea8f44effb4e68ffe9de63e15f2c32","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   container for rsyslog development\n#   creates the build environment\n#   to search for packages:\n#   note: czmq OBS link: https://build.opensuse.org/package/show/network:messaging:zeromq:release-stable/czmq\n#   1. zypper search\n#   2. scout bin which  # scout need zypper install scout - then call \"scout\" for usage\nFROM opensuse/tumbleweed\nRUN zypper --non-interactive update\nRUN zypper --non-interactive install autoconf autoconf-archive automake bison clang cmake curl flex gcc gdb git gzip hiredis-devel java-11-openjdk-devel krb5-devel libcurl-devel libczmq4 libdbi-devel libdbi-drivers-dbd-mysql libestr-devel libfaketime libgcrypt-devel libgnutls-devel libmaxminddb-devel libmysqlclient-devel libnet-devel libopenssl-devel libpcap-devel libqpid-proton10 libtool libuuid-devel make net-snmp-devel pcre-devel postgresql-devel python3-docutils python-devel python-docutils python-sphinx qpid-proton qpid-proton-devel systemd-devel tcl-devel util-linux-systemd valgrind vi wget which zlib-devel\nRUN zypper --non-interactive addrepo https://download.opensuse.org/repositories/network:messaging:zeromq:release-stable/openSUSE_Tumbleweed/network:messaging:zeromq:release-stable.repo \\\n && zypper --non-interactive --gpg-auto-import-keys refresh \\\n && zypper --non-interactive install openpgm-devel czmq czmq-devel\nENV REBUILD=\"1\"\nWORKDIR /home/devel\nRUN groupadd rsyslog \\\n && useradd -g rsyslog -s /bin/bash rsyslog \\\n && echo \"rsyslog ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nRUN mkdir /rsyslog \\\n && chown rsyslog:rsyslog /rsyslog\nVOLUME /rsyslog\nCOPY setup-projects.sh setup-projects.sh\nENV PKG_CONFIG_PATH=\"/usr/lib/pkgconfig\" \\\n    xLD_LIBRARY_PATH=\"/usr/local/lib\"\n#   create dependency cache\nRUN mkdir /local_dep_cache \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.9.tar.gz -O /local_dep_cache/elasticsearch-5.6.9.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.tar.gz -O /local_dep_cache/elasticsearch-6.0.0.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.tar.gz -O /local_dep_cache/elasticsearch-6.3.1.tar.gz\n#   tell tests which are the newester versions, so they can be checked without the need\n#   to adjust test sources.\nENV ELASTICSEARCH_NEWEST=\"elasticsearch-6.3.1.tar.gz\"\n#   bump dependency version below to trigger a dependency rebuild\n#   but not a full one (via --no-cache)\nENV DEP_VERSION=\"1\"\n#   Helper projects and dependency build starts here\nRUN mkdir helper-projects\n#   code style checker - not yet packaged\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/codestyle \\\n && cd codestyle \\\n && gcc --std=c99 stylecheck.c -o stylecheck \\\n && mv stylecheck /usr/bin/rsyslog_stylecheck \\\n && cd .. \\\n && rm -r codestyle \\\n && cd ..\n#   we need Guardtime libksi here, otherwise we cannot check the KSI component\t\nRUN cd helper-projects \\\n && git clone https://github.com/guardtime/libksi.git \\\n && cd libksi \\\n && autoreconf -fvi \\\n && ./configure --libdir=/usr/lib64 \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && rm -r libksi \\\n && cd ..\n#   we need the latest librdkafka as there as always required updates\nRUN cd helper-projects \\\n && git clone https://github.com/edenhill/librdkafka \\\n && cd librdkafka \\\n && (unset CFLAGS ;./configure --prefix=/usr --libdir=/usr/lib64 --CFLAGS=\"-g\" ;make -j ) \\\n && make install \\\n && cd .. \\\n && cd ..\n#   libmongoc is unfortunately not available on openSuse - later?\nRUN cd helper-projects \\\n && wget -nv https://github.com/mongodb/mongo-c-driver/releases/download/1.12.0/mongo-c-driver-1.12.0.tar.gz \\\n && tar xzf mongo-c-driver-1.12.0.tar.gz \\\n && cd mongo-c-driver-1.12.0 \\\n && mkdir cmake-build \\\n && cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r mongo-c-driver-1.12.0* \\\n && cd ..\n#   bump dependency version below to trigger a dependency rebuild\n#   but not a full one (via --no-cache)\nENV RSYSLOG_DEP_VERSION=\"2018-07-22\"\n#   libestr - currently, not needed, we use from offical repo (unlikely to change)\n#  RUN\tcd helper-projects && \\\n#  \tgit clone https://github.com/rsyslog/libestr.git && \\\n#  \tcd libestr && \\\n#  \tautoreconf -fi && ./configure --libdir=/usr/lib64 --prefix=/usr && \\\n#  \tmake -j4 && \\\n#  \tmake install && \\\n#  \tcd .. && \\\n#  \trm -r libestr && \\\n#  \tcd ..\n#   liblogging\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblogging.git \\\n && cd liblogging \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-journal \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblogging \\\n && cd ..\n#   liblfastjson\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/libfastjson.git \\\n && cd libfastjson \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r libfastjson \\\n && cd ..\n#   liblognorm\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblognorm.git \\\n && cd liblognorm \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblognorm \\\n && cd ..\n#   librelp\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/librelp.git \\\n && cd librelp \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --enable-compile-warnings=yes --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r librelp \\\n && cd ..\n#   next ENV is specifically for running scan-build - so we do not need to\n#   change scripts if at a later time we can move on to a newer version\nENV SCAN_BUILD=\"scan-build\" \\\n    SCAN_BUILD_CC=\"clang-6.0\"\n#   unfortunately, tcl-devel does not properly setup required bits in the environment\n#   so we now try to do that. In case this does no longer work with a version, search\n#   for a file tclConfig.sh, which should be present in the library directory (usually\n#   beneath /usr). It contains the environment variables. Inside container do:\n#   $cat $(find /usr -name tclConfig.sh|head -n1)\nENV TCL_LIB_SPEC=\"-L/usr/lib64 -ltcl8.6\" \\\n    TCL_INCLUDE_SPEC=\"-I/usr/include\"\nENV RSYSLOG_CONFIGURE_OPTIONS=\"--enable-elasticsearch  --enable-elasticsearch-tests  --enable-gnutls  --enable-imbatchreport  --enable-imdiag  --enable-imdocker  --enable-imfile  --enable-imjournal  --enable-imkafka  --enable-impstats  --enable-impcap  --enable-imptcp  --enable-imtuxedoulog  --enable-kafka-tests  --enable-ksi-ls12  --enable-libdbi  --enable-libfaketime  --enable-libgcrypt  --enable-mail  --enable-mmanon  --enable-mmaudit  --enable-mmcount  --enable-mmcapture  --enable-mmfields  --enable-mmjsonparse  --enable-mmkubernetes  --enable-mmnormalize  --enable-mmpstrucdata  --enable-mmrm1stspace  --enable-mmsequence  --enable-mmsnmptrapd  --enable-mmutf8fix  --enable-mysql  --enable-omamqp1  --enable-omhiredis  --enable-omhiredis  --enable-omhttp  --enable-omhttpfs  --enable-omjournal  --enable-omkafka  --enable-omprog  --enable-omrelp-default-port=13515  --enable-omruleset  --enable-omstdout  --enable-omudpspoof  --enable-omuxsock  --enable-openssl  --enable-pgsql  --enable-pmaixforwardedfrom  --enable-pmciscoios  --enable-pmcisconames  --enable-pmlastmsg  --enable-pmnormalize  --enable-pmnull  --enable-pmsnare  --enable-relp  --enable-snmp  --enable-usertools  --enable-valgrind  --enable-gssapi-krb5  --enable-omtcl  --enable-imczmq  --enable-omczmq  --enable-mmdblookup  --enable-kmsg  --enable-ommongodb  --enable-testbench\"\n#   module needs fixes:\n#  \t--enable-mmgrok\n#  \t   -> we cannot build, libtokyocabinet dependency is not available as well\nWORKDIR /rsyslog\nUSER rsyslog\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  container for rsyslog development\n#  creates the build environment\n#  to search for packages:\n#  note: czmq OBS link: https://build.opensuse.org/package/show/network:messaging:zeromq:release-stable/czmq\n#  1. zypper search\n#  2. scout bin which  # scout need zypper install scout - then call \"scout\" for usage\nFROM opensuse/tumbleweed\nRUN zypper --non-interactive update\nRUN zypper --non-interactive install autoconf autoconf-archive automake bison clang cmake curl flex gcc gdb git gzip hiredis-devel java-11-openjdk-devel krb5-devel libcurl-devel libczmq4 libdbi-devel libdbi-drivers-dbd-mysql libestr-devel libfaketime libgcrypt-devel libgnutls-devel libmaxminddb-devel libmysqlclient-devel libnet-devel libopenssl-devel libpcap-devel libqpid-proton10 libtool libuuid-devel make net-snmp-devel pcre-devel postgresql-devel python3-docutils python-devel python-docutils python-sphinx qpid-proton qpid-proton-devel systemd-devel tcl-devel util-linux-systemd valgrind vi wget which zlib-devel\nRUN zypper --non-interactive addrepo https://download.opensuse.org/repositories/network:messaging:zeromq:release-stable/openSUSE_Tumbleweed/network:messaging:zeromq:release-stable.repo \\\n && zypper --non-interactive --gpg-auto-import-keys refresh \\\n && zypper --non-interactive install openpgm-devel czmq czmq-devel\nENV REBUILD=\"1\"\nWORKDIR /home/devel\nRUN groupadd rsyslog \\\n && useradd -g rsyslog -s /bin/bash rsyslog \\\n && echo \"rsyslog ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nRUN mkdir /rsyslog \\\n && chown rsyslog:rsyslog /rsyslog\nVOLUME /rsyslog\nADD setup-projects.sh setup-projects.sh\nENV PKG_CONFIG_PATH=\"/usr/lib/pkgconfig\" \\\n    xLD_LIBRARY_PATH=\"/usr/local/lib\"\n#  create dependency cache\nRUN mkdir /local_dep_cache \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.9.tar.gz -O /local_dep_cache/elasticsearch-5.6.9.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.tar.gz -O /local_dep_cache/elasticsearch-6.0.0.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.tar.gz -O /local_dep_cache/elasticsearch-6.3.1.tar.gz\n#  tell tests which are the newester versions, so they can be checked without the need\n#  to adjust test sources.\nENV ELASTICSEARCH_NEWEST=\"elasticsearch-6.3.1.tar.gz\"\n#  bump dependency version below to trigger a dependency rebuild\n#  but not a full one (via --no-cache)\nENV DEP_VERSION=\"1\"\n#  Helper projects and dependency build starts here\nRUN mkdir helper-projects\n#  code style checker - not yet packaged\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/codestyle \\\n && cd codestyle \\\n && gcc --std=c99 stylecheck.c -o stylecheck \\\n && mv stylecheck /usr/bin/rsyslog_stylecheck \\\n && cd .. \\\n && rm -r codestyle \\\n && cd ..\n#  we need Guardtime libksi here, otherwise we cannot check the KSI component\t\nRUN cd helper-projects \\\n && git clone https://github.com/guardtime/libksi.git \\\n && cd libksi \\\n && autoreconf -fvi \\\n && ./configure --libdir=/usr/lib64 \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && rm -r libksi \\\n && cd ..\n#  we need the latest librdkafka as there as always required updates\nRUN cd helper-projects \\\n && git clone https://github.com/edenhill/librdkafka \\\n && cd librdkafka \\\n && (unset CFLAGS ;./configure --prefix=/usr --libdir=/usr/lib64 --CFLAGS=\"-g\" ;make -j ) \\\n && make install \\\n && cd .. \\\n && cd ..\n#  libmongoc is unfortunately not available on openSuse - later?\nRUN cd helper-projects \\\n && wget -nv https://github.com/mongodb/mongo-c-driver/releases/download/1.12.0/mongo-c-driver-1.12.0.tar.gz \\\n && tar xzf mongo-c-driver-1.12.0.tar.gz \\\n && cd mongo-c-driver-1.12.0 \\\n && mkdir cmake-build \\\n && cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r mongo-c-driver-1.12.0* \\\n && cd ..\n#  bump dependency version below to trigger a dependency rebuild\n#  but not a full one (via --no-cache)\nENV RSYSLOG_DEP_VERSION=\"2018-07-22\"\n#  libestr - currently, not needed, we use from offical repo (unlikely to change)\n# RUN\tcd helper-projects && \\\n# \tgit clone https://github.com/rsyslog/libestr.git && \\\n# \tcd libestr && \\\n# \tautoreconf -fi && ./configure --libdir=/usr/lib64 --prefix=/usr && \\\n# \tmake -j4 && \\\n# \tmake install && \\\n# \tcd .. && \\\n# \trm -r libestr && \\\n# \tcd ..\n#  liblogging\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblogging.git \\\n && cd liblogging \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-journal \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblogging \\\n && cd ..\n#  liblfastjson\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/libfastjson.git \\\n && cd libfastjson \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r libfastjson \\\n && cd ..\n#  liblognorm\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblognorm.git \\\n && cd liblognorm \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblognorm \\\n && cd ..\n#  librelp\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/librelp.git \\\n && cd librelp \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --enable-compile-warnings=yes --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r librelp \\\n && cd ..\n#  next ENV is specifically for running scan-build - so we do not need to\n#  change scripts if at a later time we can move on to a newer version\nENV SCAN_BUILD=\"scan-build\" \\\n    SCAN_BUILD_CC=\"clang-6.0\"\n#  unfortunately, tcl-devel does not properly setup required bits in the environment\n#  so we now try to do that. In case this does no longer work with a version, search\n#  for a file tclConfig.sh, which should be present in the library directory (usually\n#  beneath /usr). It contains the environment variables. Inside container do:\n#  $cat $(find /usr -name tclConfig.sh|head -n1)\nENV TCL_LIB_SPEC=\"-L/usr/lib64 -ltcl8.6\" \\\n    TCL_INCLUDE_SPEC=\"-I/usr/include\"\nENV RSYSLOG_CONFIGURE_OPTIONS=\"--enable-elasticsearch  --enable-elasticsearch-tests  --enable-gnutls  --enable-imbatchreport  --enable-imdiag  --enable-imdocker  --enable-imfile  --enable-imjournal  --enable-imkafka  --enable-impstats  --enable-impcap  --enable-imptcp  --enable-imtuxedoulog  --enable-kafka-tests  --enable-ksi-ls12  --enable-libdbi  --enable-libfaketime  --enable-libgcrypt  --enable-mail  --enable-mmanon  --enable-mmaudit  --enable-mmcount  --enable-mmcapture  --enable-mmfields  --enable-mmjsonparse  --enable-mmkubernetes  --enable-mmnormalize  --enable-mmpstrucdata  --enable-mmrm1stspace  --enable-mmsequence  --enable-mmsnmptrapd  --enable-mmutf8fix  --enable-mysql  --enable-omamqp1  --enable-omhiredis  --enable-omhiredis  --enable-omhttp  --enable-omhttpfs  --enable-omjournal  --enable-omkafka  --enable-omprog  --enable-omrelp-default-port=13515  --enable-omruleset  --enable-omstdout  --enable-omudpspoof  --enable-omuxsock  --enable-openssl  --enable-pgsql  --enable-pmaixforwardedfrom  --enable-pmciscoios  --enable-pmcisconames  --enable-pmlastmsg  --enable-pmnormalize  --enable-pmnull  --enable-pmsnare  --enable-relp  --enable-snmp  --enable-usertools  --enable-valgrind  --enable-gssapi-krb5  --enable-omtcl  --enable-imczmq  --enable-omczmq  --enable-mmdblookup  --enable-kmsg  --enable-ommongodb  --enable-testbench\"\n#  module needs fixes:\n# \t--enable-mmgrok\n# \t   -> we cannot build, libtokyocabinet dependency is not available as well\nWORKDIR /rsyslog\nUSER rsyslog\n","injectedSmells":[],"originalDockerfileHash":"8a806bb71086950a8bc750d96d8b6422","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   container for rsyslog development\n#   creates the build environment\n#   to search for packages:\n#   note: czmq OBS link: https://build.opensuse.org/package/show/network:messaging:zeromq:release-stable/czmq\n#   1. zypper search\n#   2. scout bin which  # scout need zypper install scout - then call \"scout\" for usage\nFROM opensuse/tumbleweed\nRUN zypper --non-interactive update\nRUN zypper --non-interactive install autoconf autoconf-archive automake bison clang cmake curl flex gcc gdb git gzip hiredis-devel java-11-openjdk-devel krb5-devel libcurl-devel libczmq4 libdbi-devel libdbi-drivers-dbd-mysql libestr-devel libfaketime libgcrypt-devel libgnutls-devel libmaxminddb-devel libmysqlclient-devel libnet-devel libopenssl-devel libpcap-devel libqpid-proton10 libtool libuuid-devel make net-snmp-devel pcre-devel postgresql-devel python3-docutils python-devel python-docutils python-sphinx qpid-proton qpid-proton-devel systemd-devel tcl-devel util-linux-systemd valgrind vi wget which zlib-devel\nRUN zypper --non-interactive addrepo https://download.opensuse.org/repositories/network:messaging:zeromq:release-stable/openSUSE_Tumbleweed/network:messaging:zeromq:release-stable.repo \\\n && zypper --non-interactive --gpg-auto-import-keys refresh \\\n && zypper --non-interactive install openpgm-devel czmq czmq-devel\nENV REBUILD=\"1\"\nWORKDIR /home/devel\nRUN groupadd rsyslog \\\n && useradd -g rsyslog -s /bin/bash rsyslog \\\n && echo \"rsyslog ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nRUN mkdir /rsyslog \\\n && chown rsyslog:rsyslog /rsyslog\nVOLUME /rsyslog\nADD setup-projects.sh setup-projects.sh\nENV PKG_CONFIG_PATH=\"/usr/lib/pkgconfig\" \\\n    xLD_LIBRARY_PATH=\"/usr/local/lib\"\n#   create dependency cache\nRUN mkdir /local_dep_cache \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.9.tar.gz -O /local_dep_cache/elasticsearch-5.6.9.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.tar.gz -O /local_dep_cache/elasticsearch-6.0.0.tar.gz \\\n && wget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.tar.gz -O /local_dep_cache/elasticsearch-6.3.1.tar.gz\n#   tell tests which are the newester versions, so they can be checked without the need\n#   to adjust test sources.\nENV ELASTICSEARCH_NEWEST=\"elasticsearch-6.3.1.tar.gz\"\n#   bump dependency version below to trigger a dependency rebuild\n#   but not a full one (via --no-cache)\nENV DEP_VERSION=\"1\"\n#   Helper projects and dependency build starts here\nRUN mkdir helper-projects\n#   code style checker - not yet packaged\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/codestyle \\\n && cd codestyle \\\n && gcc --std=c99 stylecheck.c -o stylecheck \\\n && mv stylecheck /usr/bin/rsyslog_stylecheck \\\n && cd .. \\\n && rm -r codestyle \\\n && cd ..\n#   we need Guardtime libksi here, otherwise we cannot check the KSI component\t\nRUN cd helper-projects \\\n && git clone https://github.com/guardtime/libksi.git \\\n && cd libksi \\\n && autoreconf -fvi \\\n && ./configure --libdir=/usr/lib64 \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && rm -r libksi \\\n && cd ..\n#   we need the latest librdkafka as there as always required updates\nRUN cd helper-projects \\\n && git clone https://github.com/edenhill/librdkafka \\\n && cd librdkafka \\\n && (unset CFLAGS ;./configure --prefix=/usr --libdir=/usr/lib64 --CFLAGS=\"-g\" ;make -j ) \\\n && make install \\\n && cd .. \\\n && cd ..\n#   libmongoc is unfortunately not available on openSuse - later?\nRUN cd helper-projects \\\n && wget -nv https://github.com/mongodb/mongo-c-driver/releases/download/1.12.0/mongo-c-driver-1.12.0.tar.gz \\\n && tar xzf mongo-c-driver-1.12.0.tar.gz \\\n && cd mongo-c-driver-1.12.0 \\\n && mkdir cmake-build \\\n && cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r mongo-c-driver-1.12.0* \\\n && cd ..\n#   bump dependency version below to trigger a dependency rebuild\n#   but not a full one (via --no-cache)\nENV RSYSLOG_DEP_VERSION=\"2018-07-22\"\n#   libestr - currently, not needed, we use from offical repo (unlikely to change)\n#  RUN\tcd helper-projects && \\\n#  \tgit clone https://github.com/rsyslog/libestr.git && \\\n#  \tcd libestr && \\\n#  \tautoreconf -fi && ./configure --libdir=/usr/lib64 --prefix=/usr && \\\n#  \tmake -j4 && \\\n#  \tmake install && \\\n#  \tcd .. && \\\n#  \trm -r libestr && \\\n#  \tcd ..\n#   liblogging\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblogging.git \\\n && cd liblogging \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-journal \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblogging \\\n && cd ..\n#   liblfastjson\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/libfastjson.git \\\n && cd libfastjson \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r libfastjson \\\n && cd ..\n#   liblognorm\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/liblognorm.git \\\n && cd liblognorm \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r liblognorm \\\n && cd ..\n#   librelp\nRUN cd helper-projects \\\n && git clone https://github.com/rsyslog/librelp.git \\\n && cd librelp \\\n && autoreconf -fi \\\n && ./configure --prefix=/usr --enable-compile-warnings=yes --libdir=/usr/lib64 \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -r librelp \\\n && cd ..\n#   next ENV is specifically for running scan-build - so we do not need to\n#   change scripts if at a later time we can move on to a newer version\nENV SCAN_BUILD=\"scan-build\" \\\n    SCAN_BUILD_CC=\"clang-6.0\"\n#   unfortunately, tcl-devel does not properly setup required bits in the environment\n#   so we now try to do that. In case this does no longer work with a version, search\n#   for a file tclConfig.sh, which should be present in the library directory (usually\n#   beneath /usr). It contains the environment variables. Inside container do:\n#   $cat $(find /usr -name tclConfig.sh|head -n1)\nENV TCL_LIB_SPEC=\"-L/usr/lib64 -ltcl8.6\" \\\n    TCL_INCLUDE_SPEC=\"-I/usr/include\"\nENV RSYSLOG_CONFIGURE_OPTIONS=\"--enable-elasticsearch  --enable-elasticsearch-tests  --enable-gnutls  --enable-imbatchreport  --enable-imdiag  --enable-imdocker  --enable-imfile  --enable-imjournal  --enable-imkafka  --enable-impstats  --enable-impcap  --enable-imptcp  --enable-imtuxedoulog  --enable-kafka-tests  --enable-ksi-ls12  --enable-libdbi  --enable-libfaketime  --enable-libgcrypt  --enable-mail  --enable-mmanon  --enable-mmaudit  --enable-mmcount  --enable-mmcapture  --enable-mmfields  --enable-mmjsonparse  --enable-mmkubernetes  --enable-mmnormalize  --enable-mmpstrucdata  --enable-mmrm1stspace  --enable-mmsequence  --enable-mmsnmptrapd  --enable-mmutf8fix  --enable-mysql  --enable-omamqp1  --enable-omhiredis  --enable-omhiredis  --enable-omhttp  --enable-omhttpfs  --enable-omjournal  --enable-omkafka  --enable-omprog  --enable-omrelp-default-port=13515  --enable-omruleset  --enable-omstdout  --enable-omudpspoof  --enable-omuxsock  --enable-openssl  --enable-pgsql  --enable-pmaixforwardedfrom  --enable-pmciscoios  --enable-pmcisconames  --enable-pmlastmsg  --enable-pmnormalize  --enable-pmnull  --enable-pmsnare  --enable-relp  --enable-snmp  --enable-usertools  --enable-valgrind  --enable-gssapi-krb5  --enable-omtcl  --enable-imczmq  --enable-omczmq  --enable-mmdblookup  --enable-kmsg  --enable-ommongodb  --enable-testbench\"\n#   module needs fixes:\n#  \t--enable-mmgrok\n#  \t   -> we cannot build, libtokyocabinet dependency is not available as well\nWORKDIR /rsyslog\nUSER rsyslog\n","originalDockerfileUglifiedHash":"6309d078f4cbf00af7bab554d230aab8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2e23f2d11e0f63b506048001342778f22c596e5c.dockerfile"}