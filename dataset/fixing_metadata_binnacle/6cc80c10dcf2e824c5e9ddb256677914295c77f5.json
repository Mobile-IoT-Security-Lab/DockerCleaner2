{"seed":2424410511,"processedDockerfileHash":"00548846b8e1340139603f5b0eb53d53","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM manageiq/ruby:2.4\nMAINTAINER ManageIQ https://github.com/ManageIQ/manageiq-appliance-build\n#  # Set build ARGs\nARG REF=master\n#  # Set ENV, LANG only needed if building with docker-1.8\nENV TERM=\"xterm\" \\\n    CONTAINER=\"true\" \\\n    APP_ROOT=\"/var/www/miq/vmdb\" \\\n    APP_ROOT_PERSISTENT=\"/persistent\" \\\n    APPLIANCE_ROOT=\"/opt/manageiq/manageiq-appliance\" \\\n    CONTAINER_SCRIPTS_ROOT=\"/opt/manageiq/container-scripts\" \\\n    IMAGE_VERSION=\"${REF}\"\n#  # Atomic/OpenShift Labels\nLABEL name=\"manageiq\" \\\n      vendor=\"ManageIQ\" \\\n      version=\"Master\" \\\n      release=\"${REF}\" \\\n      url=\"http://manageiq.org/\" \\\n      summary=\"ManageIQ appliance image\" \\\n      description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.k8s.display-name=\"ManageIQ\" \\\n      io.k8s.description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.openshift.tags=\"ManageIQ,miq,manageiq\"\n#   Fetch MIQ repo for http-parser\nRUN curl -sSLko /etc/yum.repos.d/manageiq-ManageIQ-Master-epel-7.repo https://copr.fedorainfracloud.org/coprs/manageiq/ManageIQ-Master/repo/epel-7/manageiq-ManageIQ-Master-epel-7.repo\n#  # Install EPEL repo, yum necessary packages for the build without docs, clean all caches\nRUN yum -y install centos-release-scl-rh https://rpm.nodesource.com/pub_8.x/el/7/x86_64/nodesource-release-el7-1.noarch.rpm \\\n && yum -y install --setopt=tsflags=nodocs chrony cmake cronie file gcc-c++ git http-parser initscripts libcurl-devel libtool libxslt-devel logrotate lvm2 net-tools nmap-ncat nodejs openldap-clients openscap-scanner patch psmisc rh-postgresql95-postgresql-devel rh-postgresql95-postgresql-libs sqlite-devel sysvinit-tools which \\\n && yum clean all\n#  # GIT clone manageiq-appliance\nRUN mkdir -p ${APPLIANCE_ROOT} \\\n && curl -L https://github.com/ManageIQ/manageiq-appliance/tarball/${REF} | tar vxz -C ${APPLIANCE_ROOT} --strip 1\n#  # GIT clone manageiq\nRUN mkdir -p ${APP_ROOT} \\\n && ln -vs ${APP_ROOT} /opt/manageiq/manageiq \\\n && curl -L https://github.com/ManageIQ/manageiq/tarball/${REF} | tar vxz -C ${APP_ROOT} --strip 1 \\\n && echo \"`date +'%Y%m%d%H%M%S' `_`git ls-remote https://github.com/ManageIQ/manageiq.git ${REF} | cut -c 1-7 `\" > ${APP_ROOT}/BUILD\n#  # Setup environment\nRUN ${APPLIANCE_ROOT}/setup \\\n && mkdir -p ${APP_ROOT}/log/apache \\\n && mkdir ${APP_ROOT_PERSISTENT} \\\n && mkdir -p ${CONTAINER_SCRIPTS_ROOT} \\\n && cp ${APP_ROOT}/config/cable.yml.sample ${APP_ROOT}/config/cable.yml\n#  # Change workdir to application root, build/install gems\nWORKDIR ${APP_ROOT}\nRUN source /etc/default/evm \\\n && export RAILS_USE_MEMORY_STORE=\"true\" \\\n && npm install bower@1.8.14 yarn@1.22.19 -g \\\n && gem install bundler --version 2.4.12 \\\n && bundle install \\\n && rake update:ui \\\n && bin/rails log:clear tmp:clear \\\n && rake evm:compile_assets \\\n && rake evm:compile_sti_loader \\\n && npm cache clean --force \\\n && bower cache clean \\\n && find ${RUBY_GEMS_ROOT}/gems/ -name .git | xargs rm -rvf \\\n && find ${RUBY_GEMS_ROOT}/gems/ | grep \"\\.s\\?o$\" | xargs rm -rvf \\\n && rm -rvf ${RUBY_GEMS_ROOT}/gems/rugged-*/vendor/libgit2/build \\\n && rm -rvf ${RUBY_GEMS_ROOT}/cache/* \\\n && rm -rvf /root/.bundle/cache \\\n && rm -rvf ${APP_ROOT}/tmp/cache/assets \\\n && rm -vf ${APP_ROOT}/log/*.log\n#  # Copy OpenShift and appliance-initialize scripts\nCOPY container-assets/entrypoint /usr/bin\nCOPY container-assets/container.data.persist /\nCOPY container-assets/appliance-initialize.sh /bin\nCOPY container-assets/check-dependent-services.sh /bin\nCOPY container-assets/miq_logs.conf /etc/logrotate.d\nCOPY container-assets/container-scripts ${CONTAINER_SCRIPTS_ROOT}\nRUN wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 \\\n && chmod +x /usr/local/bin/dumb-init\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"--single-child\", \"--\"]\nCMD [\"entrypoint\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM manageiq/ruby:2.4\nMAINTAINER ManageIQ https://github.com/ManageIQ/manageiq-appliance-build\n# # Set build ARGs\nARG REF=master\n# # Set ENV, LANG only needed if building with docker-1.8\nENV TERM=\"xterm\" \\\n    CONTAINER=\"true\" \\\n    APP_ROOT=\"/var/www/miq/vmdb\" \\\n    APP_ROOT_PERSISTENT=\"/persistent\" \\\n    APPLIANCE_ROOT=\"/opt/manageiq/manageiq-appliance\" \\\n    CONTAINER_SCRIPTS_ROOT=\"/opt/manageiq/container-scripts\" \\\n    IMAGE_VERSION=\"${REF}\"\n# # Atomic/OpenShift Labels\nLABEL name=\"manageiq\" \\\n      vendor=\"ManageIQ\" \\\n      version=\"Master\" \\\n      release=\"${REF}\" \\\n      url=\"http://manageiq.org/\" \\\n      summary=\"ManageIQ appliance image\" \\\n      description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.k8s.display-name=\"ManageIQ\" \\\n      io.k8s.description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.openshift.tags=\"ManageIQ,miq,manageiq\"\n#  Fetch MIQ repo for http-parser\nRUN curl -sSLko /etc/yum.repos.d/manageiq-ManageIQ-Master-epel-7.repo https://copr.fedorainfracloud.org/coprs/manageiq/ManageIQ-Master/repo/epel-7/manageiq-ManageIQ-Master-epel-7.repo\n# # Install EPEL repo, yum necessary packages for the build without docs, clean all caches\nRUN yum -y install centos-release-scl-rh https://rpm.nodesource.com/pub_8.x/el/7/x86_64/nodesource-release-el7-1.noarch.rpm \\\n && yum -y install --setopt=tsflags=nodocs chrony cmake cronie file gcc-c++ git http-parser initscripts libcurl-devel libtool libxslt-devel logrotate lvm2 net-tools nmap-ncat nodejs openldap-clients openscap-scanner patch psmisc rh-postgresql95-postgresql-devel rh-postgresql95-postgresql-libs sqlite-devel sysvinit-tools which \\\n && yum clean all\n# # GIT clone manageiq-appliance\nRUN mkdir -p ${APPLIANCE_ROOT} \\\n && curl -L https://github.com/ManageIQ/manageiq-appliance/tarball/${REF} | tar vxz -C ${APPLIANCE_ROOT} --strip 1\n# # GIT clone manageiq\nRUN mkdir -p ${APP_ROOT} \\\n && ln -vs ${APP_ROOT} /opt/manageiq/manageiq \\\n && curl -L https://github.com/ManageIQ/manageiq/tarball/${REF} | tar vxz -C ${APP_ROOT} --strip 1 \\\n && echo \"`date +'%Y%m%d%H%M%S' `_`git ls-remote https://github.com/ManageIQ/manageiq.git ${REF} | cut -c 1-7 `\" > ${APP_ROOT}/BUILD\n# # Setup environment\nRUN ${APPLIANCE_ROOT}/setup \\\n && mkdir -p ${APP_ROOT}/log/apache \\\n && mkdir ${APP_ROOT_PERSISTENT} \\\n && mkdir -p ${CONTAINER_SCRIPTS_ROOT} \\\n && cp ${APP_ROOT}/config/cable.yml.sample ${APP_ROOT}/config/cable.yml\n# # Change workdir to application root, build/install gems\nWORKDIR ${APP_ROOT}\nRUN source /etc/default/evm \\\n && export RAILS_USE_MEMORY_STORE=\"true\" \\\n && npm install bower yarn -g \\\n && gem install bundler \\\n && bundle install \\\n && rake update:ui \\\n && bin/rails log:clear tmp:clear \\\n && rake evm:compile_assets \\\n && rake evm:compile_sti_loader \\\n && npm cache clean --force \\\n && bower cache clean \\\n && find ${RUBY_GEMS_ROOT}/gems/ -name .git | xargs rm -rvf \\\n && find ${RUBY_GEMS_ROOT}/gems/ | grep \"\\.s\\?o$\" | xargs rm -rvf \\\n && rm -rvf ${RUBY_GEMS_ROOT}/gems/rugged-*/vendor/libgit2/build \\\n && rm -rvf ${RUBY_GEMS_ROOT}/cache/* \\\n && rm -rvf /root/.bundle/cache \\\n && rm -rvf ${APP_ROOT}/tmp/cache/assets \\\n && rm -vf ${APP_ROOT}/log/*.log\n# # Copy OpenShift and appliance-initialize scripts\nCOPY container-assets/entrypoint /usr/bin\nCOPY container-assets/container.data.persist /\nCOPY container-assets/appliance-initialize.sh /bin\nCOPY container-assets/check-dependent-services.sh /bin\nCOPY container-assets/miq_logs.conf /etc/logrotate.d\nADD container-assets/container-scripts ${CONTAINER_SCRIPTS_ROOT}\nRUN wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 \\\n && chmod +x /usr/local/bin/dumb-init\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"--single-child\", \"--\"]\nCMD [\"entrypoint\"]\n","injectedSmells":[],"originalDockerfileHash":"6ae3d29932d8eae9fc69d3ca9081918f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM manageiq/ruby:2.4\nMAINTAINER ManageIQ https://github.com/ManageIQ/manageiq-appliance-build\n#  # Set build ARGs\nARG REF=master\n#  # Set ENV, LANG only needed if building with docker-1.8\nENV TERM=\"xterm\" \\\n    CONTAINER=\"true\" \\\n    APP_ROOT=\"/var/www/miq/vmdb\" \\\n    APP_ROOT_PERSISTENT=\"/persistent\" \\\n    APPLIANCE_ROOT=\"/opt/manageiq/manageiq-appliance\" \\\n    CONTAINER_SCRIPTS_ROOT=\"/opt/manageiq/container-scripts\" \\\n    IMAGE_VERSION=\"${REF}\"\n#  # Atomic/OpenShift Labels\nLABEL name=\"manageiq\" \\\n      vendor=\"ManageIQ\" \\\n      version=\"Master\" \\\n      release=\"${REF}\" \\\n      url=\"http://manageiq.org/\" \\\n      summary=\"ManageIQ appliance image\" \\\n      description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.k8s.display-name=\"ManageIQ\" \\\n      io.k8s.description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.openshift.tags=\"ManageIQ,miq,manageiq\"\n#   Fetch MIQ repo for http-parser\nRUN curl -sSLko /etc/yum.repos.d/manageiq-ManageIQ-Master-epel-7.repo https://copr.fedorainfracloud.org/coprs/manageiq/ManageIQ-Master/repo/epel-7/manageiq-ManageIQ-Master-epel-7.repo\n#  # Install EPEL repo, yum necessary packages for the build without docs, clean all caches\nRUN yum -y install centos-release-scl-rh https://rpm.nodesource.com/pub_8.x/el/7/x86_64/nodesource-release-el7-1.noarch.rpm \\\n && yum -y install --setopt=tsflags=nodocs chrony cmake cronie file gcc-c++ git http-parser initscripts libcurl-devel libtool libxslt-devel logrotate lvm2 net-tools nmap-ncat nodejs openldap-clients openscap-scanner patch psmisc rh-postgresql95-postgresql-devel rh-postgresql95-postgresql-libs sqlite-devel sysvinit-tools which \\\n && yum clean all\n#  # GIT clone manageiq-appliance\nRUN mkdir -p ${APPLIANCE_ROOT} \\\n && curl -L https://github.com/ManageIQ/manageiq-appliance/tarball/${REF} | tar vxz -C ${APPLIANCE_ROOT} --strip 1\n#  # GIT clone manageiq\nRUN mkdir -p ${APP_ROOT} \\\n && ln -vs ${APP_ROOT} /opt/manageiq/manageiq \\\n && curl -L https://github.com/ManageIQ/manageiq/tarball/${REF} | tar vxz -C ${APP_ROOT} --strip 1 \\\n && echo \"`date +'%Y%m%d%H%M%S' `_`git ls-remote https://github.com/ManageIQ/manageiq.git ${REF} | cut -c 1-7 `\" > ${APP_ROOT}/BUILD\n#  # Setup environment\nRUN ${APPLIANCE_ROOT}/setup \\\n && mkdir -p ${APP_ROOT}/log/apache \\\n && mkdir ${APP_ROOT_PERSISTENT} \\\n && mkdir -p ${CONTAINER_SCRIPTS_ROOT} \\\n && cp ${APP_ROOT}/config/cable.yml.sample ${APP_ROOT}/config/cable.yml\n#  # Change workdir to application root, build/install gems\nWORKDIR ${APP_ROOT}\nRUN source /etc/default/evm \\\n && export RAILS_USE_MEMORY_STORE=\"true\" \\\n && npm install bower yarn -g \\\n && gem install bundler \\\n && bundle install \\\n && rake update:ui \\\n && bin/rails log:clear tmp:clear \\\n && rake evm:compile_assets \\\n && rake evm:compile_sti_loader \\\n && npm cache clean --force \\\n && bower cache clean \\\n && find ${RUBY_GEMS_ROOT}/gems/ -name .git | xargs rm -rvf \\\n && find ${RUBY_GEMS_ROOT}/gems/ | grep \"\\.s\\?o$\" | xargs rm -rvf \\\n && rm -rvf ${RUBY_GEMS_ROOT}/gems/rugged-*/vendor/libgit2/build \\\n && rm -rvf ${RUBY_GEMS_ROOT}/cache/* \\\n && rm -rvf /root/.bundle/cache \\\n && rm -rvf ${APP_ROOT}/tmp/cache/assets \\\n && rm -vf ${APP_ROOT}/log/*.log\n#  # Copy OpenShift and appliance-initialize scripts\nCOPY container-assets/entrypoint /usr/bin\nCOPY container-assets/container.data.persist /\nCOPY container-assets/appliance-initialize.sh /bin\nCOPY container-assets/check-dependent-services.sh /bin\nCOPY container-assets/miq_logs.conf /etc/logrotate.d\nADD container-assets/container-scripts ${CONTAINER_SCRIPTS_ROOT}\nRUN wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 \\\n && chmod +x /usr/local/bin/dumb-init\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"--single-child\", \"--\"]\nCMD [\"entrypoint\"]\n","originalDockerfileUglifiedHash":"ba05b3a10123139e28023560006f875e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6cc80c10dcf2e824c5e9ddb256677914295c77f5.dockerfile"}