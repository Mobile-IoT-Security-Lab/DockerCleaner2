{"seed":2815457695,"processedDockerfileHash":"0051d8e8480eb5941f4fa2e7e28a8269","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER nlfox <nlfox@msn.cn>\n#   set some environment variables\nENV APP_NAME=\"app\"\nENV APP_EMAIL=\"app@laraedit.com\"\nENV APP_DOMAIN=\"app.dev\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN :\n#   install some prerequisites\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 curl=7.35.0-1ubuntu2.20 build-essential=11.6ubuntu6 dos2unix=6.0.4-1 gcc=4:4.8.2-1ubuntu6 git=1:1.9.1-1ubuntu0.10 libmcrypt4=2.5.8-3.1ubuntu1 libpcre3-dev=1:8.31-2ubuntu2.3 memcached=1.4.14-0ubuntu9.3 make=3.81-8.2ubuntu3 python2.7-dev=2.7.6-8ubuntu0.5 python-pip=1.5.4-1ubuntu4 re2c=0.13.5-1build2 unattended-upgrades=0.82.1ubuntu2.5 whois=5.1.1 vim=2:7.4.052-1ubuntu3.1 libnotify-bin=0.7.6-1ubuntu3 nano=2.2.6-1ubuntu1 wget=1.15-1ubuntu1.14.04.5 debconf-utils=1.5.51ubuntu2 -y )\n#   add some repositories\nRUN apt-add-repository ppa:nginx/stable -y \\\n && apt-add-repository ppa:ondrej/php -y \\\n && :\n#   set the locale\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/default/locale \\\n && locale-gen en_US.UTF-8 \\\n && ln -sf /usr/share/zoneinfo/UTC /etc/localtime\n#   install nginx\nRUN (apt-get update ;apt-get install --no-install-recommends nginx=1.4.6-1ubuntu3.9 -y --force-yes )\nCOPY homestead /etc/nginx/sites-available/\nRUN rm -rf /etc/nginx/sites-available/default \\\n && rm -rf /etc/nginx/sites-enabled/default \\\n && ln -fs \"/etc/nginx/sites-available/homestead\" \"/etc/nginx/sites-enabled/homestead\" \\\n && sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf \\\n && sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf \\\n && echo \"daemon off;\" >> /etc/nginx/nginx.conf \\\n && usermod -u 1000 www-data \\\n && chown -Rf www-data.www-data /var/www/html/ \\\n && sed -i -e\"s/worker_processes 1/worker_processes 5/\" /etc/nginx/nginx.conf\nVOLUME [\"/var/cache/nginx\"]\nVOLUME [\"/var/log/nginx\"]\n#   install php\nRUN (apt-get update ;apt-get install --no-install-recommends php7.0-fpm php7.0-cli php7.0-dev php7.0-sqlite3 php7.0-gd php-apcu php7.0-curl php7.0-mcrypt php7.0-imap php7.0-mysql php7.0-readline php-xdebug php-common php7.0-mbstring php7.0-xml php7.0-zip -y --force-yes )\nRUN sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.0/cli/php.ini \\\n && sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.0/cli/php.ini \\\n && sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.0/cli/php.ini \\\n && sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 100M/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/post_max_size = .*/post_max_size = 100M/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.0/fpm/php-fpm.conf \\\n && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.max_children = 5/pm.max_children = 9/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/;listen.mode = 0660/listen.mode = 0750/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && find /etc/php/7.0/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {}\nCOPY fastcgi_params /etc/nginx/\nRUN phpenmod mcrypt \\\n && mkdir -p /run/php/ \\\n && chown -Rf www-data.www-data /run/php\n#   install sqlite \nRUN (apt-get update ;apt-get install --no-install-recommends sqlite3=3.8.2-1ubuntu2.2 libsqlite3-dev=3.8.2-1ubuntu2.2 -y )\n#   install composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && printf \"\\nPATH=\\\"~/.composer/vendor/bin:$PATH\\\"\\n\" | tee -a ~/.bashrc\n#   install prestissimo\n#   RUN composer global require \"hirak/prestissimo\"\n#   install laravel envoy\nRUN composer global require \"laravel/envoy\"\n#  install laravel installer\nRUN composer global require \"laravel/installer\"\n#   install supervisor\nRUN (apt-get update ;apt-get install --no-install-recommends supervisor=3.0b2-1ubuntu0.1 -y ) \\\n && mkdir -p /var/log/supervisor\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nVOLUME [\"/var/log/supervisor\"]\nRUN git clone https://github.com/nlfox/ctfPlatform.git /var/www/html/app\nRUN ls -al /var/www/html/app/\nRUN touch /var/www/html/app/database/database.sqlite\nRUN cd /var/www/html/app/ \\\n && composer install\nCOPY .env /var/www/html/app/.env\nRUN cd /var/www/html/app/ \\\n && php artisan migrate\nRUN cd /var/www/html/ \\\n && chown -R www-data app/storage\nRUN cd /var/www/html/ \\\n && chown -R www-data app/database \\\n && chmod o+w app/database\n#   clean up our mess\nRUN apt-get remove --purge -y software-properties-common \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && apt-get autoclean \\\n && echo -n > /var/lib/apt/extended_states \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /usr/share/man/?? \\\n && rm -rf /usr/share/man/??_*\nWORKDIR /var/www/html/app/\n#   expose ports\nEXPOSE 80/tcp 443/tcp\n#   set container entrypoints\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"/usr/bin/supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER nlfox <nlfox@msn.cn>\n#  set some environment variables\nENV APP_NAME=\"app\"\nENV APP_EMAIL=\"app@laraedit.com\"\nENV APP_DOMAIN=\"app.dev\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update\n#  install some prerequisites\nRUN apt-get install software-properties-common curl build-essential dos2unix gcc git libmcrypt4 libpcre3-dev memcached make python2.7-dev python-pip re2c unattended-upgrades whois vim libnotify-bin nano wget debconf-utils -y\n#  add some repositories\nRUN apt-add-repository ppa:nginx/stable -y \\\n && apt-add-repository ppa:ondrej/php -y \\\n && apt-get update\n#  set the locale\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/default/locale \\\n && locale-gen en_US.UTF-8 \\\n && ln -sf /usr/share/zoneinfo/UTC /etc/localtime\n#  install nginx\nRUN apt-get install nginx -y --force-yes\nCOPY homestead /etc/nginx/sites-available/\nRUN rm -rf /etc/nginx/sites-available/default \\\n && rm -rf /etc/nginx/sites-enabled/default \\\n && ln -fs \"/etc/nginx/sites-available/homestead\" \"/etc/nginx/sites-enabled/homestead\" \\\n && sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf \\\n && sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf \\\n && echo \"daemon off;\" >> /etc/nginx/nginx.conf \\\n && usermod -u 1000 www-data \\\n && chown -Rf www-data.www-data /var/www/html/ \\\n && sed -i -e\"s/worker_processes 1/worker_processes 5/\" /etc/nginx/nginx.conf\nVOLUME [\"/var/cache/nginx\"]\nVOLUME [\"/var/log/nginx\"]\n#  install php\nRUN apt-get install php7.0-fpm php7.0-cli php7.0-dev php7.0-sqlite3 php7.0-gd php-apcu php7.0-curl php7.0-mcrypt php7.0-imap php7.0-mysql php7.0-readline php-xdebug php-common php7.0-mbstring php7.0-xml php7.0-zip -y --force-yes\nRUN sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.0/cli/php.ini \\\n && sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.0/cli/php.ini \\\n && sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.0/cli/php.ini \\\n && sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 100M/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/post_max_size = .*/post_max_size = 100M/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.0/fpm/php-fpm.conf \\\n && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.max_children = 5/pm.max_children = 9/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/;listen.mode = 0660/listen.mode = 0750/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && find /etc/php/7.0/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} ;\nCOPY fastcgi_params /etc/nginx/\nRUN phpenmod mcrypt \\\n && mkdir -p /run/php/ \\\n && chown -Rf www-data.www-data /run/php\n#  install sqlite \nRUN apt-get install sqlite3 libsqlite3-dev -y\n#  install composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && printf \"\\nPATH=\\\"~/.composer/vendor/bin:$PATH\\\"\\n\" | tee -a ~/.bashrc\n#  install prestissimo\n#  RUN composer global require \"hirak/prestissimo\"\n#  install laravel envoy\nRUN composer global require \"laravel/envoy\"\n# install laravel installer\nRUN composer global require \"laravel/installer\"\n#  install supervisor\nRUN apt-get install supervisor -y \\\n && mkdir -p /var/log/supervisor\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nVOLUME [\"/var/log/supervisor\"]\nRUN git clone https://github.com/nlfox/ctfPlatform.git /var/www/html/app\nRUN ls -al /var/www/html/app/\nRUN touch /var/www/html/app/database/database.sqlite\nRUN cd /var/www/html/app/ \\\n && composer install\nCOPY .env /var/www/html/app/.env\nRUN cd /var/www/html/app/ \\\n && php artisan migrate\nRUN cd /var/www/html/ \\\n && chown -R www-data app/storage\nRUN cd /var/www/html/ \\\n && chown -R www-data app/database \\\n && chmod o+w app/database\n#  clean up our mess\nRUN apt-get remove --purge -y software-properties-common \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && apt-get autoclean \\\n && echo -n > /var/lib/apt/extended_states \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /usr/share/man/?? \\\n && rm -rf /usr/share/man/??_*\nWORKDIR /var/www/html/app/\n#  expose ports\nEXPOSE 80/tcp 443/tcp\n#  set container entrypoints\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"/usr/bin/supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"0ffbfb4ece872ab02cc4d67fa7d0799f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER nlfox <nlfox@msn.cn>\n#   set some environment variables\nENV APP_NAME=\"app\"\nENV APP_EMAIL=\"app@laraedit.com\"\nENV APP_DOMAIN=\"app.dev\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update\n#   install some prerequisites\nRUN apt-get install software-properties-common curl build-essential dos2unix gcc git libmcrypt4 libpcre3-dev memcached make python2.7-dev python-pip re2c unattended-upgrades whois vim libnotify-bin nano wget debconf-utils -y\n#   add some repositories\nRUN apt-add-repository ppa:nginx/stable -y \\\n && apt-add-repository ppa:ondrej/php -y \\\n && apt-get update\n#   set the locale\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/default/locale \\\n && locale-gen en_US.UTF-8 \\\n && ln -sf /usr/share/zoneinfo/UTC /etc/localtime\n#   install nginx\nRUN apt-get install nginx -y --force-yes\nCOPY homestead /etc/nginx/sites-available/\nRUN rm -rf /etc/nginx/sites-available/default \\\n && rm -rf /etc/nginx/sites-enabled/default \\\n && ln -fs \"/etc/nginx/sites-available/homestead\" \"/etc/nginx/sites-enabled/homestead\" \\\n && sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf \\\n && sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf \\\n && echo \"daemon off;\" >> /etc/nginx/nginx.conf \\\n && usermod -u 1000 www-data \\\n && chown -Rf www-data.www-data /var/www/html/ \\\n && sed -i -e\"s/worker_processes 1/worker_processes 5/\" /etc/nginx/nginx.conf\nVOLUME [\"/var/cache/nginx\"]\nVOLUME [\"/var/log/nginx\"]\n#   install php\nRUN apt-get install php7.0-fpm php7.0-cli php7.0-dev php7.0-sqlite3 php7.0-gd php-apcu php7.0-curl php7.0-mcrypt php7.0-imap php7.0-mysql php7.0-readline php-xdebug php-common php7.0-mbstring php7.0-xml php7.0-zip -y --force-yes\nRUN sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.0/cli/php.ini \\\n && sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.0/cli/php.ini \\\n && sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.0/cli/php.ini \\\n && sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 100M/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/post_max_size = .*/post_max_size = 100M/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.0/fpm/php.ini \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.0/fpm/php-fpm.conf \\\n && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.max_children = 5/pm.max_children = 9/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && sed -i -e \"s/;listen.mode = 0660/listen.mode = 0750/g\" /etc/php/7.0/fpm/pool.d/www.conf \\\n && find /etc/php/7.0/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {}\nCOPY fastcgi_params /etc/nginx/\nRUN phpenmod mcrypt \\\n && mkdir -p /run/php/ \\\n && chown -Rf www-data.www-data /run/php\n#   install sqlite \nRUN apt-get install sqlite3 libsqlite3-dev -y\n#   install composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && printf \"\\nPATH=\\\"~/.composer/vendor/bin:$PATH\\\"\\n\" | tee -a ~/.bashrc\n#   install prestissimo\n#   RUN composer global require \"hirak/prestissimo\"\n#   install laravel envoy\nRUN composer global require \"laravel/envoy\"\n#  install laravel installer\nRUN composer global require \"laravel/installer\"\n#   install supervisor\nRUN apt-get install supervisor -y \\\n && mkdir -p /var/log/supervisor\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nVOLUME [\"/var/log/supervisor\"]\nRUN git clone https://github.com/nlfox/ctfPlatform.git /var/www/html/app\nRUN ls -al /var/www/html/app/\nRUN touch /var/www/html/app/database/database.sqlite\nRUN cd /var/www/html/app/ \\\n && composer install\nCOPY .env /var/www/html/app/.env\nRUN cd /var/www/html/app/ \\\n && php artisan migrate\nRUN cd /var/www/html/ \\\n && chown -R www-data app/storage\nRUN cd /var/www/html/ \\\n && chown -R www-data app/database \\\n && chmod o+w app/database\n#   clean up our mess\nRUN apt-get remove --purge -y software-properties-common \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && apt-get autoclean \\\n && echo -n > /var/lib/apt/extended_states \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /usr/share/man/?? \\\n && rm -rf /usr/share/man/??_*\nWORKDIR /var/www/html/app/\n#   expose ports\nEXPOSE 80/tcp 443/tcp\n#   set container entrypoints\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"/usr/bin/supervisord\"]\n","originalDockerfileUglifiedHash":"0ec209ce994c7605626a437e1175f9ce","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/45b0cd7460c46ede410c625c29eb14f84c4e71f6.dockerfile"}