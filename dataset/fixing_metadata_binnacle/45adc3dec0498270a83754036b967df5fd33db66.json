{"seed":929897067,"processedDockerfileHash":"761985c4370f6d86b26f2a96ed3e82d0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Version: 0.7.1\nFROM ubuntu:14.04\nMAINTAINER Valerio Di Giampietro \"valerio@digiampietro.com\"\n#\n#   increase the version to force recompilation of everything\n#\nENV GNS3LARGEVERSION=\"0.7.2\"\n#\n#   ------------------------------------------------------------------\n#   environment variables to avoid that dpkg-reconfigure \n#   tries to ask the user any questions\n#\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_NONINTERACTIVE_SEEN=\"true\"\n#\n#   ----------------------------------------------------------------- \n#   install needed packages to build and run gns3 and related sw\n#\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:1.9.1-1ubuntu0.10 wget=1.15-1ubuntu1.14.04.5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libpcap-dev=1.5.3-2 uuid-dev=2.20.1-5.1ubuntu20.9 libelf-dev=0.158-0ubuntu5.3 cmake=2.8.12.2-0ubuntu3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python3-setuptools=3.3-1ubuntu2 python3-pyqt4=4.10.4+dfsg-1ubuntu1 python3-ws4py=0.3.2-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python3-netifaces=0.8-3build1 python3-zmq=14.0.1-1build2 python3-tornado=3.1.1-1ubuntu2 python3-dev=3.4.0-0ubuntu2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends bison=2:3.0.2.dfsg-2 flex=2.5.35-10.1ubuntu2 -y )\n#   \n#   for iou install 32 bit libraries, python is needed to generate the license file\n#\nRUN (apt-get update ;apt-get install --no-install-recommends lib32z1=1:1.2.8.dfsg-1ubuntu1.1 lib32ncurses5=5.9+20140118-1ubuntu1 lib32bz2-1.0=1.0.6-5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends lxterminal=0.1.11-4ubuntu3.1 telnet=0.17-36build2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python=2.7.5-5ubuntu3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends wireshark=2.6.6-1~ubuntu14.04.0 cpulimit=2.0-1 -y )\n#\n#   -----------------------------------------------------------------\n#   compile and install dynamips, gns3-server, gns3-gui\n#\nRUN mkdir /src\nRUN cd /src ; git clone https://github.com/GNS3/dynamips.git\nRUN cd /src/dynamips ; git checkout v0.2.14\nRUN mkdir /src/dynamips/build\nRUN cd /src/dynamips/build ; cmake .. ; make ; make install\n#\nRUN cd /src ; git clone https://github.com/GNS3/gns3-gui.git\nRUN cd /src ; git clone https://github.com/GNS3/gns3-server.git\nRUN cd /src/gns3-server ; git checkout v1.2.3 ; python3 setup.py install\nRUN cd /src/gns3-gui ; git checkout v1.2.3 ; python3 setup.py install\n#\n#  -----------------------------------------------------------------------\n#   compile and install vpcs, 64 bit version\n#\nRUN cd /src ; wget -O - http://sourceforge.net/projects/vpcs/files/0.5/beta/vpcs-0.5b2-src.tbz/download | bzcat | tar -xvf -\nRUN cd /src/vpcs-*/src ; ./mk.sh 64\nRUN cp /src/vpcs-*/src/vpcs /usr/local/bin/vpcs\n#\n#   --------------------------------------------------------------------\n#   compile and install iniparser (needed for iouyap) and \n#   iouyap (needed to run iou without additional virtual machine)\n#\nRUN cd /src ; git clone http://github.com/ndevilla/iniparser.git\nRUN cd /src/iniparser ; make\nRUN cd /src/iniparser ; cp libiniparser.* /usr/lib ; cp src/iniparser.h /usr/local/include/ ; cp src/dictionary.h /usr/local/include/\n#\nRUN cd /src ; git clone https://github.com/GNS3/iouyap.git\nRUN cd /src/iouyap ; make\nRUN cd /src/iouyap ; cp iouyap /usr/local/bin\n#\n#   to run iou 32 bit support is needed so add i386 repository, cannot be done\n#   before compiling dynamips\n#\nRUN dpkg --add-architecture i386\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends libssl-dev:i386 -y )\n#\n#   ---------------------------------------------------------------------------\n#   install QEMU\n#\nRUN (apt-get update ;apt-get install --no-install-recommends qemu=2.0.0+dfsg-2ubuntu1.46 -y )\n#\n#   ---------------------------------------------------------------------------\n#   install uml-utilities e iptables to be able to  use tap0 device\n#   and NAT\n#\nRUN (apt-get update ;apt-get install --no-install-recommends uml-utilities=20070815-1.3ubuntu1 iptables=1.4.21-1ubuntu1 -y )\n#\n#   ---------------------------------------------------------------------------\n#   these links are needed to run IOU\n#\nRUN ln -s /usr/lib/i386-linux-gnu/libcrypto.so /usr/lib/i386-linux-gnu/libcrypto.so.4\n#\n#\n#   prepare startup files /src/misc\n#\nRUN mkdir /src/misc\n#\n#   install gnome connection manager\n#\nRUN cd /src/misc ; wget http://kuthulu.com/gcm/gnome-connection-manager_1.1.0_all.deb\n#  RUN cd /src/misc; wget http://va.ler.io/myfiles/deb/gnome-connection-manager_1.1.0_all.deb\nRUN (apt-get update ;apt-get install --no-install-recommends expect=5.45-5ubuntu1 python-vte=1:0.28.2-5ubuntu1 python-glade2=2.24.0-3ubuntu3 -y )\nRUN mkdir -p /usr/share/desktop-directories\nRUN cd /src/misc ; dpkg -i gnome-connection-manager_1.1.0_all.deb\nRUN (while true ; do echo ; done ) | perl -MCPAN -e 'install JSON::Tiny'\nRUN (while true ; do echo ; done ) | perl -MCPAN -e 'install File::Slurp'\n#  RUN cd /usr/local/bin; ln -s /usr/share/gnome-connection-manager/* .\nCOPY gcmconf /usr/local/bin/gcmconf\nCOPY startup.sh /src/misc/startup.sh\nCOPY iourc.sample /src/misc/iourc.txt\nCOPY gcm /usr/local/bin/gcm\n#   Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8  \"\nENV LANGUAGE=\"en_US:en  \"\nENV LC_ALL=\"en_US.UTF-8  \"\nRUN chmod a+x /src/misc/startup.sh\nENTRYPOINT cd /src/misc ; ./startup.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Version: 0.7.1\nFROM ubuntu:14.04\nMAINTAINER Valerio Di Giampietro \"valerio@digiampietro.com\"\n#\n#  increase the version to force recompilation of everything\n#\nENV GNS3LARGEVERSION=\"0.7.2\"\n#\n#  ------------------------------------------------------------------\n#  environment variables to avoid that dpkg-reconfigure \n#  tries to ask the user any questions\n#\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_NONINTERACTIVE_SEEN=\"true\"\n#\n#  ----------------------------------------------------------------- \n#  install needed packages to build and run gns3 and related sw\n#\nRUN apt-get update\nRUN apt-get install git wget -y\nRUN apt-get install libpcap-dev uuid-dev libelf-dev cmake -y\nRUN apt-get install python3-setuptools python3-pyqt4 python3-ws4py -y\nRUN apt-get install python3-netifaces python3-zmq python3-tornado python3-dev -y\nRUN apt-get install bison flex -y\n#  \n#  for iou install 32 bit libraries, python is needed to generate the license file\n#\nRUN apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 -y\nRUN apt-get install lxterminal telnet -y\nRUN apt-get install python -y\nRUN apt-get install wireshark cpulimit -y\n#\n#  -----------------------------------------------------------------\n#  compile and install dynamips, gns3-server, gns3-gui\n#\nRUN mkdir /src\nRUN cd /src ; git clone https://github.com/GNS3/dynamips.git\nRUN cd /src/dynamips ; git checkout v0.2.14\nRUN mkdir /src/dynamips/build\nRUN cd /src/dynamips/build ; cmake .. ; make ; make install\n#\nRUN cd /src ; git clone https://github.com/GNS3/gns3-gui.git\nRUN cd /src ; git clone https://github.com/GNS3/gns3-server.git\nRUN cd /src/gns3-server ; git checkout v1.2.3 ; python3 setup.py install\nRUN cd /src/gns3-gui ; git checkout v1.2.3 ; python3 setup.py install\n#\n# -----------------------------------------------------------------------\n#  compile and install vpcs, 64 bit version\n#\nRUN cd /src ; wget -O - http://sourceforge.net/projects/vpcs/files/0.5/beta/vpcs-0.5b2-src.tbz/download | bzcat | tar -xvf -\nRUN cd /src/vpcs-*/src ; ./mk.sh 64\nRUN cp /src/vpcs-*/src/vpcs /usr/local/bin/vpcs\n#\n#  --------------------------------------------------------------------\n#  compile and install iniparser (needed for iouyap) and \n#  iouyap (needed to run iou without additional virtual machine)\n#\nRUN cd /src ; git clone http://github.com/ndevilla/iniparser.git\nRUN cd /src/iniparser ; make\nRUN cd /src/iniparser ; cp libiniparser.* /usr/lib ; cp src/iniparser.h /usr/local/include/ ; cp src/dictionary.h /usr/local/include/\n#\nRUN cd /src ; git clone https://github.com/GNS3/iouyap.git\nRUN cd /src/iouyap ; make\nRUN cd /src/iouyap ; cp iouyap /usr/local/bin\n#\n#  to run iou 32 bit support is needed so add i386 repository, cannot be done\n#  before compiling dynamips\n#\nRUN dpkg --add-architecture i386\nRUN apt-get update\nRUN apt-get install libssl-dev:i386 -y\n#\n#  ---------------------------------------------------------------------------\n#  install QEMU\n#\nRUN apt-get install qemu -y\n#\n#  ---------------------------------------------------------------------------\n#  install uml-utilities e iptables to be able to  use tap0 device\n#  and NAT\n#\nRUN apt-get install uml-utilities iptables -y\n#\n#  ---------------------------------------------------------------------------\n#  these links are needed to run IOU\n#\nRUN ln -s /usr/lib/i386-linux-gnu/libcrypto.so /usr/lib/i386-linux-gnu/libcrypto.so.4\n#\n#\n#  prepare startup files /src/misc\n#\nRUN mkdir /src/misc\n#\n#  install gnome connection manager\n#\nRUN cd /src/misc ; wget http://kuthulu.com/gcm/gnome-connection-manager_1.1.0_all.deb\n# RUN cd /src/misc; wget http://va.ler.io/myfiles/deb/gnome-connection-manager_1.1.0_all.deb\nRUN apt-get install expect python-vte python-glade2 -y\nRUN mkdir -p /usr/share/desktop-directories\nRUN cd /src/misc ; dpkg -i gnome-connection-manager_1.1.0_all.deb\nRUN (while true ; do echo ; done ) | perl -MCPAN -e 'install JSON::Tiny'\nRUN (while true ; do echo ; done ) | perl -MCPAN -e 'install File::Slurp'\n# RUN cd /usr/local/bin; ln -s /usr/share/gnome-connection-manager/* .\nADD gcmconf /usr/local/bin/gcmconf\nADD startup.sh /src/misc/startup.sh\nADD iourc.sample /src/misc/iourc.txt\nADD gcm /usr/local/bin/gcm\n#  Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8  \"\nENV LANGUAGE=\"en_US:en  \"\nENV LC_ALL=\"en_US.UTF-8  \"\nRUN chmod a+x /src/misc/startup.sh\nENTRYPOINT cd /src/misc ; ./startup.sh\n","injectedSmells":[],"originalDockerfileHash":"a0464a81f1d2526cd62adf66376d1a6b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Version: 0.7.1\nFROM ubuntu:14.04\nMAINTAINER Valerio Di Giampietro \"valerio@digiampietro.com\"\n#\n#   increase the version to force recompilation of everything\n#\nENV GNS3LARGEVERSION=\"0.7.2\"\n#\n#   ------------------------------------------------------------------\n#   environment variables to avoid that dpkg-reconfigure \n#   tries to ask the user any questions\n#\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_NONINTERACTIVE_SEEN=\"true\"\n#\n#   ----------------------------------------------------------------- \n#   install needed packages to build and run gns3 and related sw\n#\nRUN apt-get update\nRUN apt-get install git wget -y\nRUN apt-get install libpcap-dev uuid-dev libelf-dev cmake -y\nRUN apt-get install python3-setuptools python3-pyqt4 python3-ws4py -y\nRUN apt-get install python3-netifaces python3-zmq python3-tornado python3-dev -y\nRUN apt-get install bison flex -y\n#   \n#   for iou install 32 bit libraries, python is needed to generate the license file\n#\nRUN apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 -y\nRUN apt-get install lxterminal telnet -y\nRUN apt-get install python -y\nRUN apt-get install wireshark cpulimit -y\n#\n#   -----------------------------------------------------------------\n#   compile and install dynamips, gns3-server, gns3-gui\n#\nRUN mkdir /src\nRUN cd /src ; git clone https://github.com/GNS3/dynamips.git\nRUN cd /src/dynamips ; git checkout v0.2.14\nRUN mkdir /src/dynamips/build\nRUN cd /src/dynamips/build ; cmake .. ; make ; make install\n#\nRUN cd /src ; git clone https://github.com/GNS3/gns3-gui.git\nRUN cd /src ; git clone https://github.com/GNS3/gns3-server.git\nRUN cd /src/gns3-server ; git checkout v1.2.3 ; python3 setup.py install\nRUN cd /src/gns3-gui ; git checkout v1.2.3 ; python3 setup.py install\n#\n#  -----------------------------------------------------------------------\n#   compile and install vpcs, 64 bit version\n#\nRUN cd /src ; wget -O - http://sourceforge.net/projects/vpcs/files/0.5/beta/vpcs-0.5b2-src.tbz/download | bzcat | tar -xvf -\nRUN cd /src/vpcs-*/src ; ./mk.sh 64\nRUN cp /src/vpcs-*/src/vpcs /usr/local/bin/vpcs\n#\n#   --------------------------------------------------------------------\n#   compile and install iniparser (needed for iouyap) and \n#   iouyap (needed to run iou without additional virtual machine)\n#\nRUN cd /src ; git clone http://github.com/ndevilla/iniparser.git\nRUN cd /src/iniparser ; make\nRUN cd /src/iniparser ; cp libiniparser.* /usr/lib ; cp src/iniparser.h /usr/local/include/ ; cp src/dictionary.h /usr/local/include/\n#\nRUN cd /src ; git clone https://github.com/GNS3/iouyap.git\nRUN cd /src/iouyap ; make\nRUN cd /src/iouyap ; cp iouyap /usr/local/bin\n#\n#   to run iou 32 bit support is needed so add i386 repository, cannot be done\n#   before compiling dynamips\n#\nRUN dpkg --add-architecture i386\nRUN apt-get update\nRUN apt-get install libssl-dev:i386 -y\n#\n#   ---------------------------------------------------------------------------\n#   install QEMU\n#\nRUN apt-get install qemu -y\n#\n#   ---------------------------------------------------------------------------\n#   install uml-utilities e iptables to be able to  use tap0 device\n#   and NAT\n#\nRUN apt-get install uml-utilities iptables -y\n#\n#   ---------------------------------------------------------------------------\n#   these links are needed to run IOU\n#\nRUN ln -s /usr/lib/i386-linux-gnu/libcrypto.so /usr/lib/i386-linux-gnu/libcrypto.so.4\n#\n#\n#   prepare startup files /src/misc\n#\nRUN mkdir /src/misc\n#\n#   install gnome connection manager\n#\nRUN cd /src/misc ; wget http://kuthulu.com/gcm/gnome-connection-manager_1.1.0_all.deb\n#  RUN cd /src/misc; wget http://va.ler.io/myfiles/deb/gnome-connection-manager_1.1.0_all.deb\nRUN apt-get install expect python-vte python-glade2 -y\nRUN mkdir -p /usr/share/desktop-directories\nRUN cd /src/misc ; dpkg -i gnome-connection-manager_1.1.0_all.deb\nRUN (while true ; do echo ; done ) | perl -MCPAN -e 'install JSON::Tiny'\nRUN (while true ; do echo ; done ) | perl -MCPAN -e 'install File::Slurp'\n#  RUN cd /usr/local/bin; ln -s /usr/share/gnome-connection-manager/* .\nADD gcmconf /usr/local/bin/gcmconf\nADD startup.sh /src/misc/startup.sh\nADD iourc.sample /src/misc/iourc.txt\nADD gcm /usr/local/bin/gcm\n#   Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8  \"\nENV LANGUAGE=\"en_US:en  \"\nENV LC_ALL=\"en_US.UTF-8  \"\nRUN chmod a+x /src/misc/startup.sh\nENTRYPOINT cd /src/misc ; ./startup.sh\n","originalDockerfileUglifiedHash":"830d4d3c4660a29c1b2d7591f4723201","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/45adc3dec0498270a83754036b967df5fd33db66.dockerfile"}