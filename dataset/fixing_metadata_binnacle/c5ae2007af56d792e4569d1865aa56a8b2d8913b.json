{"seed":4225811890,"processedDockerfileHash":"a5b0b5cd9858bc7ee7b768d7dfc28006","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck"],"processedDockerfile":"#   Copyright (c) 2012-2016 Codenvy, S.A.\n#   All rights reserved. This program and the accompanying materials\n#   are made available under the terms of the Eclipse Public License v1.0\n#   which accompanies this distribution, and is available at\n#   http://www.eclipse.org/legal/epl-v10.html\n#   Contributors:\n#   Codenvy, S.A. - initial API and implementation\nFROM debian:wheezy\nENV JAVA_VERSION=\"8u65\" \\\n    JAVA_VERSION_PREFIX=\"1.8.0_65\"\nENV JAVA_HOME=\"/opt/jre$JAVA_VERSION_PREFIX\"\nENV PATH=\"$JAVA_HOME/bin:$PATH\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends openssh-server sudo procps wget unzip mc locales ca-certificates curl -y \\\n && mkdir /var/run/sshd \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n && echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user\nRUN PASS=$( openssl rand -base64 32 ;) \\\n && echo \"$PASS\\n$PASS\" | passwd user \\\n && sudo echo -e \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\\ndeb-src http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\" >> /etc/apt/sources.list.d/sources.list \\\n && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A1715D88E1DF1F24 \\\n && sudo apt-get install git subversion -y \\\n && apt-get clean \\\n && wget --no-cookies --no-check-certificate --header \"Cookie: oraclelicense=accept-securebackup-cookie\" -qO- \"http://download.oracle.com/otn-pub/java/jdk/$JAVA_VERSION-b17/jre-$JAVA_VERSION-linux-x64.tar.gz\" | tar -zx -C /opt/ \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"#! /bin/bash\\n set -e\\n sudo /usr/sbin/sshd -D &\\n exec \\\"$@\\\"\" > /home/user/entrypoint.sh \\\n && chmod a+x /home/user/entrypoint.sh\nENV LANG=\"C.UTF-8\"\nRUN echo \"export JAVA_HOME=/opt/jre$JAVA_VERSION_PREFIX\\nexport PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\" >> /home/user/.bashrc\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-key adv --keyserver pgp.mit.edu --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\nRUN echo \"deb http://download.mono-project.com/repo/debian wheezy/snapshots/4.2.1.102 main\" > /etc/apt/sources.list.d/mono-xamarin.list \\\n && apt-get install --no-install-recommends -f \\\n && apt-get update \\\n && apt-get install --no-install-recommends mono-devel ca-certificates-mono fsharp mono-vbnc nuget -y \\\n && rm -rf /var/lib/apt/lists/*\nENV DNX_VERSION=\"1.0.0-rc1-update1\"\nENV DNX_USER_HOME=\"/opt/dnx\"\n#  Currently the CLR packages don't have runtime ids to handle debian:jessie but\n#  we are making sure that the dependencies are the right versions and are opting for\n#  the smaller base image. So we use this variable to overwrite the default detection.\nENV DNX_RUNTIME_ID=\"ubuntu.14.04-x64\"\n#   In order to address an issue with running a sqlite3 database on aspnet-docker-linux\n#   a version of sqlite3 must be installed that is greater than or equal to 3.7.15\n#   which is not available on the default apt sources list in this image.\n#   ref:  https://github.com/aspnet/EntityFramework/issues/3089\n#         https://github.com/aspnet/aspnet-docker/issues/121\nRUN printf \"deb http://ftp.us.debian.org/debian jessie main\\n\" >> /etc/apt/sources.list\n#   added sqlite3 & libsqlite3-dev install for use with aspnet-generators (Entity framework)\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends unzip libc6-dev libicu-dev sqlite3 libsqlite3-dev -qqy \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_USER_HOME=$DNX_USER_HOME DNX_BRANCH=v$DNX_VERSION sh\nRUN bash -c \"source $DNX_USER_HOME/dnvm/dnvm.sh \\\n && dnvm install $DNX_VERSION -alias default \\\n && dnvm alias default | xargs -i ln -s $DNX_USER_HOME/runtimes/{} $DNX_USER_HOME/runtimes/default\"\n#   Install libuv for Kestrel from source code (binary is not in wheezy and one in jessie is still too old)\n#   Combining this with the uninstall and purge will save us the space of the build tools in the image\nRUN LIBUV_VERSION=1.4.2 \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends autoconf automake build-essential libtool -qqy \\\n && curl -sSL https://github.com/libuv/libuv/archive/v${LIBUV_VERSION}.tar.gz | tar zxfv - -C /usr/local/src \\\n && cd /usr/local/src/libuv-$LIBUV_VERSION \\\n && sh autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /usr/local/src/libuv-$LIBUV_VERSION \\\n && ldconfig \\\n && apt-get -y purge autoconf automake build-essential libtool \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"$DNX_USER_HOME/runtimes/default/bin:$PATH\"\n#  ENV PATH $JAVA_HOME/bin:$PATH\n#   Prevent `dnu restore` from stalling (gh#63, gh#80)\nENV MONO_THREADS_PER_CPU=\"50\"\nUSER user\nRUN echo 'export PATH=$DNX_USER_HOME/runtimes/default/bin:$PATH' >> /home/user/.bashrc\nLABEL che:server:5004:ref=\"asp.net.server\" \\\n      che:server:5004:protocol=\"http\"\nEXPOSE 5004/tcp 22/tcp 4403/tcp\nWORKDIR /projects\nCMD tail -f /dev/null\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) 2012-2016 Codenvy, S.A.\n#  All rights reserved. This program and the accompanying materials\n#  are made available under the terms of the Eclipse Public License v1.0\n#  which accompanies this distribution, and is available at\n#  http://www.eclipse.org/legal/epl-v10.html\n#  Contributors:\n#  Codenvy, S.A. - initial API and implementation\nFROM debian:wheezy\nENV JAVA_VERSION=\"8u65\" \\\n    JAVA_VERSION_PREFIX=\"1.8.0_65\"\nENV JAVA_HOME=\"/opt/jre$JAVA_VERSION_PREFIX\"\nENV PATH=\"$JAVA_HOME/bin:$PATH\"\nRUN apt-get update \\\n && apt-get install openssh-server sudo procps wget unzip mc locales ca-certificates curl -y \\\n && mkdir /var/run/sshd \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n && echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user\nRUN PASS=$( openssl rand -base64 32 ;) \\\n && echo \"$PASS\\n$PASS\" | passwd user \\\n && sudo echo -e \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\\ndeb-src http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\" >> /etc/apt/sources.list.d/sources.list \\\n && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A1715D88E1DF1F24 \\\n && sudo apt-get install git subversion -y \\\n && apt-get clean \\\n && wget --no-cookies --no-check-certificate --header \"Cookie: oraclelicense=accept-securebackup-cookie\" -qO- \"http://download.oracle.com/otn-pub/java/jdk/$JAVA_VERSION-b17/jre-$JAVA_VERSION-linux-x64.tar.gz\" | tar -zx -C /opt/ \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"#! /bin/bash\\n set -e\\n sudo /usr/sbin/sshd -D &\\n exec \\\"$@\\\"\" > /home/user/entrypoint.sh \\\n && chmod a+x /home/user/entrypoint.sh\nENV LANG=\"C.UTF-8\"\nRUN echo \"export JAVA_HOME=/opt/jre$JAVA_VERSION_PREFIX\\nexport PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\" >> /home/user/.bashrc\nRUN apt-get update \\\n && apt-get install curl -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-key adv --keyserver pgp.mit.edu --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\nRUN echo \"deb http://download.mono-project.com/repo/debian wheezy/snapshots/4.2.1.102 main\" > /etc/apt/sources.list.d/mono-xamarin.list \\\n && apt-get install -f \\\n && apt-get update \\\n && apt-get install mono-devel ca-certificates-mono fsharp mono-vbnc nuget -y \\\n && rm -rf /var/lib/apt/lists/*\nENV DNX_VERSION=\"1.0.0-rc1-update1\"\nENV DNX_USER_HOME=\"/opt/dnx\"\n# Currently the CLR packages don't have runtime ids to handle debian:jessie but\n# we are making sure that the dependencies are the right versions and are opting for\n# the smaller base image. So we use this variable to overwrite the default detection.\nENV DNX_RUNTIME_ID=\"ubuntu.14.04-x64\"\n#  In order to address an issue with running a sqlite3 database on aspnet-docker-linux\n#  a version of sqlite3 must be installed that is greater than or equal to 3.7.15\n#  which is not available on the default apt sources list in this image.\n#  ref:  https://github.com/aspnet/EntityFramework/issues/3089\n#        https://github.com/aspnet/aspnet-docker/issues/121\nRUN printf \"deb http://ftp.us.debian.org/debian jessie main\\n\" >> /etc/apt/sources.list\n#  added sqlite3 & libsqlite3-dev install for use with aspnet-generators (Entity framework)\nRUN apt-get update -qq \\\n && apt-get install unzip libc6-dev libicu-dev sqlite3 libsqlite3-dev -qqy \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_USER_HOME=$DNX_USER_HOME DNX_BRANCH=v$DNX_VERSION sh\nRUN bash -c \"source $DNX_USER_HOME/dnvm/dnvm.sh \\\n && dnvm install $DNX_VERSION -alias default \\\n && dnvm alias default | xargs -i ln -s $DNX_USER_HOME/runtimes/{} $DNX_USER_HOME/runtimes/default\"\n#  Install libuv for Kestrel from source code (binary is not in wheezy and one in jessie is still too old)\n#  Combining this with the uninstall and purge will save us the space of the build tools in the image\nRUN LIBUV_VERSION=1.4.2 \\\n && apt-get update -qq \\\n && apt-get install autoconf automake build-essential libtool -qqy \\\n && curl -sSL https://github.com/libuv/libuv/archive/v${LIBUV_VERSION}.tar.gz | tar zxfv - -C /usr/local/src \\\n && cd /usr/local/src/libuv-$LIBUV_VERSION \\\n && sh autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /usr/local/src/libuv-$LIBUV_VERSION \\\n && ldconfig \\\n && apt-get -y purge autoconf automake build-essential libtool \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"$DNX_USER_HOME/runtimes/default/bin:$PATH\"\n# ENV PATH $JAVA_HOME/bin:$PATH\n#  Prevent `dnu restore` from stalling (gh#63, gh#80)\nENV MONO_THREADS_PER_CPU=\"50\"\nUSER user\nRUN echo 'export PATH=$DNX_USER_HOME/runtimes/default/bin:$PATH' >> /home/user/.bashrc\nLABEL che:server:5004:ref=\"asp.net.server\" \\\n      che:server:5004:protocol=\"http\"\nEXPOSE 5004/tcp 22/tcp 4403/tcp\nWORKDIR /projects\nCMD tail -f /dev/null\n","injectedSmells":[],"originalDockerfileHash":"95e9beedaa5dab05df000973fbe0c5b2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) 2012-2016 Codenvy, S.A.\n#   All rights reserved. This program and the accompanying materials\n#   are made available under the terms of the Eclipse Public License v1.0\n#   which accompanies this distribution, and is available at\n#   http://www.eclipse.org/legal/epl-v10.html\n#   Contributors:\n#   Codenvy, S.A. - initial API and implementation\nFROM debian:wheezy\nENV JAVA_VERSION=\"8u65\" \\\n    JAVA_VERSION_PREFIX=\"1.8.0_65\"\nENV JAVA_HOME=\"/opt/jre$JAVA_VERSION_PREFIX\"\nENV PATH=\"$JAVA_HOME/bin:$PATH\"\nRUN apt-get update \\\n && apt-get install openssh-server sudo procps wget unzip mc locales ca-certificates curl -y \\\n && mkdir /var/run/sshd \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n && echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user\nRUN PASS=$( openssl rand -base64 32 ;) \\\n && echo \"$PASS\\n$PASS\" | passwd user \\\n && sudo echo -e \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\\ndeb-src http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\" >> /etc/apt/sources.list.d/sources.list \\\n && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A1715D88E1DF1F24 \\\n && sudo apt-get install git subversion -y \\\n && apt-get clean \\\n && wget --no-cookies --no-check-certificate --header \"Cookie: oraclelicense=accept-securebackup-cookie\" -qO- \"http://download.oracle.com/otn-pub/java/jdk/$JAVA_VERSION-b17/jre-$JAVA_VERSION-linux-x64.tar.gz\" | tar -zx -C /opt/ \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"#! /bin/bash\\n set -e\\n sudo /usr/sbin/sshd -D &\\n exec \\\"$@\\\"\" > /home/user/entrypoint.sh \\\n && chmod a+x /home/user/entrypoint.sh\nENV LANG=\"C.UTF-8\"\nRUN echo \"export JAVA_HOME=/opt/jre$JAVA_VERSION_PREFIX\\nexport PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\" >> /home/user/.bashrc\nRUN apt-get update \\\n && apt-get install curl -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-key adv --keyserver pgp.mit.edu --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\nRUN echo \"deb http://download.mono-project.com/repo/debian wheezy/snapshots/4.2.1.102 main\" > /etc/apt/sources.list.d/mono-xamarin.list \\\n && apt-get install -f \\\n && apt-get update \\\n && apt-get install mono-devel ca-certificates-mono fsharp mono-vbnc nuget -y \\\n && rm -rf /var/lib/apt/lists/*\nENV DNX_VERSION=\"1.0.0-rc1-update1\"\nENV DNX_USER_HOME=\"/opt/dnx\"\n#  Currently the CLR packages don't have runtime ids to handle debian:jessie but\n#  we are making sure that the dependencies are the right versions and are opting for\n#  the smaller base image. So we use this variable to overwrite the default detection.\nENV DNX_RUNTIME_ID=\"ubuntu.14.04-x64\"\n#   In order to address an issue with running a sqlite3 database on aspnet-docker-linux\n#   a version of sqlite3 must be installed that is greater than or equal to 3.7.15\n#   which is not available on the default apt sources list in this image.\n#   ref:  https://github.com/aspnet/EntityFramework/issues/3089\n#         https://github.com/aspnet/aspnet-docker/issues/121\nRUN printf \"deb http://ftp.us.debian.org/debian jessie main\\n\" >> /etc/apt/sources.list\n#   added sqlite3 & libsqlite3-dev install for use with aspnet-generators (Entity framework)\nRUN apt-get update -qq \\\n && apt-get install unzip libc6-dev libicu-dev sqlite3 libsqlite3-dev -qqy \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_USER_HOME=$DNX_USER_HOME DNX_BRANCH=v$DNX_VERSION sh\nRUN bash -c \"source $DNX_USER_HOME/dnvm/dnvm.sh \\\n && dnvm install $DNX_VERSION -alias default \\\n && dnvm alias default | xargs -i ln -s $DNX_USER_HOME/runtimes/{} $DNX_USER_HOME/runtimes/default\"\n#   Install libuv for Kestrel from source code (binary is not in wheezy and one in jessie is still too old)\n#   Combining this with the uninstall and purge will save us the space of the build tools in the image\nRUN LIBUV_VERSION=1.4.2 \\\n && apt-get update -qq \\\n && apt-get install autoconf automake build-essential libtool -qqy \\\n && curl -sSL https://github.com/libuv/libuv/archive/v${LIBUV_VERSION}.tar.gz | tar zxfv - -C /usr/local/src \\\n && cd /usr/local/src/libuv-$LIBUV_VERSION \\\n && sh autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /usr/local/src/libuv-$LIBUV_VERSION \\\n && ldconfig \\\n && apt-get -y purge autoconf automake build-essential libtool \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"$DNX_USER_HOME/runtimes/default/bin:$PATH\"\n#  ENV PATH $JAVA_HOME/bin:$PATH\n#   Prevent `dnu restore` from stalling (gh#63, gh#80)\nENV MONO_THREADS_PER_CPU=\"50\"\nUSER user\nRUN echo 'export PATH=$DNX_USER_HOME/runtimes/default/bin:$PATH' >> /home/user/.bashrc\nLABEL che:server:5004:ref=\"asp.net.server\" \\\n      che:server:5004:protocol=\"http\"\nEXPOSE 5004/tcp 22/tcp 4403/tcp\nWORKDIR /projects\nCMD tail -f /dev/null\n","originalDockerfileUglifiedHash":"015b3ce86a92918bc584bd6eb744c0ce","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c5ae2007af56d792e4569d1865aa56a8b2d8913b.dockerfile"}