{"seed":3994416042,"processedDockerfileHash":"7a7bfabefa8d41e1bb7d6b24ad960f2b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  Openstack\nFROM ubuntu\nRUN echo 'deb http://archive.ubuntu.com/ubuntu precise main universe' > /etc/apt/sources.list \\\n && echo 'deb http://archive.ubuntu.com/ubuntu precise-updates universe' >> /etc/apt/sources.list \\\n && :\n#  Prevent daemon start during install\nRUN echo '#!/bin/sh\\nexit 101' > /usr/sbin/policy-rc.d \\\n && chmod +x /usr/sbin/policy-rc.d\n#  Supervisord\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y supervisor \\\n && mkdir -p /var/log/supervisor\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n#  SSHD\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y openssh-server \\\n && mkdir /var/run/sshd \\\n && echo 'root:root' | chpasswd\n#  Utilities\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y vim less net-tools inetutils-ping curl git telnet nmap socat\n#  Others\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y vlan bridge-utils python python-pip python-software-properties software-properties-common python-keyring\n#  MySQL\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server python-mysqldb \\\n && sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mysql/my.cnf\n#  RabbitMQ\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y rabbitmq-server\n#  For Openstack\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y ubuntu-cloud-keyring \\\n && echo \"deb http://ubuntu-cloud.archive.canonical.com/ubuntu precise-updates/havana main\" >> /etc/apt/sources.list.d/openstack.list \\\n && :\n#  Keystone\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y keystone \\\n && sed -i -e 's/# admin_token = ADMIN/admin_token = ADMIN/' -e \"s#^connection.*#connection = mysql://keystone@localhost/keystone#\" /etc/keystone/keystone.conf\n#  Quantum\n#  RUN apt-get install -y quantum-server \n#  RUN apt-get install -y quantum-plugin-linuxbridge \n#  RUN apt-get install -y quantum-plugin-linuxbridge-agent \n#  RUN apt-get install -y dnsmasq-base\n#  RUN apt-get install -y dnsmasq \n#  RUN apt-get install -y quantum-dhcp-agent \n#  RUN apt-get install -y quantum-l3-agent\n#  Nova Controller\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y nova-novncproxy novnc nova-api nova-ajax-console-proxy nova-cert nova-conductor nova-consoleauth nova-doc nova-scheduler python-novaclient nova-network \\\n && sed -i -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = nova#\" -e \"s#^admin_password =.*#admin_password = nova#\" /etc/nova/api-paste.ini\n#  Glance\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y glance \\\n && sed -i -e \"s#^sql_connection.*#sql_connection = mysql://glance@localhost/glance#\" -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = glance#\" -e \"s#^admin_password =.*#admin_password = glance#\" -e \"s|^\\#config_file.*|config_file = /etc/glance/glance-api-paste.ini|\" -e \"s|^\\#flavor.*|flavor = keystone|\" -e \"2 i container_formats = ami,ari,aki,bare,ovf,docker\" /etc/glance/glance-api.conf \\\n && sed -i -e \"s#^sql_connection.*#sql_connection = mysql://glance@localhost/glance#\" -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = glance#\" -e \"s#^admin_password =.*#admin_password = glance#\" -e \"s|^\\#config_file.*|config_file = /etc/glance/glance-registry-paste.ini|\" -e \"s|^\\#flavor.*|flavor = keystone|\" /etc/glance/glance-registry.conf \\\n && echo \"[pipeline:glance-registry-keystone]\\npipeline = authtoken context registryapp\" >> /etc/glance/glance-registry-paste.ini\n#  Cinder\n#  RUN apt-get -y install cinder-api cinder-scheduler cinder-volume open-iscsi python-cinderclient tgt && \\\n#      sed -i -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" \\\n#      \t-e \"s#^admin_user =.*#admin_user = cinder#\" \\\n#      \t-e \"s#^admin_password =.*#admin_password = cinder#\" \\\n#      \t/etc/cinder/api-paste.ini && \\\n#   \techo 'sql_connection = mysql://cinder@localhost/cinder\\nrabbit_host = localhost' >> /etc/cinder/cinder.conf \n#  Dashboard\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y memcached python-memcache libapache2-mod-wsgi openstack-dashboard \\\n && apt-get remove -y --purge openstack-dashboard-ubuntu-theme \\\n && echo \"SESSION_ENGINE = 'django.contrib.sessions.backends.cache'\" >> /etc/openstack-dashboard/local_settings.py\n#  Nova Compute Node\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y nova-compute \\\n && sed -i -e \"s|^compute_driver=.*|compute_driver=docker.DockerDriver|\" /etc/nova/nova-compute.conf\n#  Docker\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -qqy iptables ca-certificates lxc \\\n && wget -O /usr/local/bin/docker https://get.docker.io/builds/Linux/x86_64/docker-latest \\\n && chmod +x /usr/local/bin/docker\nVOLUME /var/lib/docker\n#  todo move up later\n#  Neutron\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y neutron-server neutron-dhcp-agent neutron-plugin-openvswitch neutron-l3-agent\nRUN echo \"net.ipv4.ip_forward=1\\nnet.ipv4.conf.all.rp_filter=0\\nnet.ipv4.conf.default.rp_filter=0\" >> /etc/sysctl.conf\nRUN sed -i -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = neutron#\" -e \"s#^admin_password =.*#admin_password = neutron#\" -e \"s#^connection.*#connection = mysql://neutron@localhost/neutron#\" /etc/neutron/neutron.conf \\\n && sed -i -e \"s|.*auth_token.*|paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory\\nauth_host = localhost\\nauth_uri=http://localhost:5000\\nadmin_tenant_name = service\\nadmin_user = neutron\\nadmin_password = neutron|\" /etc/neutron/api-paste.ini\n#  Heat\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y heat-api heat-api-cfn heat-engine\nRUN mkdir /etc/heat/environment.d \\\n && sed -i -e \"s|^sql_connection.*||\" -e \"s|^#sql_connection.*|sql_connection = mysql://heat@localhost/heat|\" /etc/heat/heat.conf \\\n && sed -i -e \"s|.*auth_token.*|paste.filter_factory = heat.common.auth_token:filter_factory\\nauth_host = localhost\\nauth_port = 35357\\nauth_protocol = http\\nadmin_tenant_name = service\\nadmin_user = heat\\nadmin_password = heat|\" /etc/heat/api-paste.ini\nRUN git clone https://github.com/dotcloud/openstack-heat-docker.git \\\n && pip install -r openstack-heat-docker/requirements.txt \\\n && mkdir /usr/lib/heat \\\n && ln -sf $( cd openstack-heat-docker/plugin ;pwd ;) /usr/lib/heat/docker\n#  Config files\nCOPY ./ /docker-openstack\nRUN cd /docker-openstack \\\n && chmod +x *.sh \\\n && mv /etc/nova/nova.conf /etc/nova/nova.conf.saved \\\n && cp nova.conf /etc/nova/nova.conf \\\n && cp supervisord-openstack.conf /etc/supervisor/conf.d/supervisord-openstack.conf\n#  Init MySql\nRUN mysqld &; keystone-all &; apachectl start &; sleep 3 \\\n && mysql < /docker-openstack/mysql.ddl \\\n && keystone-manage db_sync \\\n && /docker-openstack/sample_data.sh \\\n && nova-manage db sync \\\n && glance-manage db_sync \\\n && heat-manage db_sync \\\n && mysqladmin shutdown\n#  ENV\nENV OS_USERNAME=\"admin\"\nENV OS_TENANT_NAME=\"demo\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV OS_AUTH_URL=\"http://localhost:35357/v2.0\"\nEXPOSE 22/tcp 80/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# Openstack\nFROM ubuntu\nRUN echo 'deb http://archive.ubuntu.com/ubuntu precise main universe' > /etc/apt/sources.list \\\n && echo 'deb http://archive.ubuntu.com/ubuntu precise-updates universe' >> /etc/apt/sources.list \\\n && apt-get update\n# Prevent daemon start during install\nRUN echo '#!/bin/sh\\nexit 101' > /usr/sbin/policy-rc.d \\\n && chmod +x /usr/sbin/policy-rc.d\n# Supervisord\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y supervisor \\\n && mkdir -p /var/log/supervisor\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n# SSHD\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y openssh-server \\\n && mkdir /var/run/sshd \\\n && echo 'root:root' | chpasswd\n# Utilities\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y vim less net-tools inetutils-ping curl git telnet nmap socat\n# Others\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y vlan bridge-utils python python-pip python-software-properties software-properties-common python-keyring\n# MySQL\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server python-mysqldb \\\n && sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mysql/my.cnf\n# RabbitMQ\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y rabbitmq-server\n# For Openstack\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y ubuntu-cloud-keyring \\\n && echo \"deb http://ubuntu-cloud.archive.canonical.com/ubuntu precise-updates/havana main\" >> /etc/apt/sources.list.d/openstack.list \\\n && apt-get update\n# Keystone\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y keystone \\\n && sed -i -e 's/# admin_token = ADMIN/admin_token = ADMIN/' -e \"s#^connection.*#connection = mysql://keystone@localhost/keystone#\" /etc/keystone/keystone.conf\n# Quantum\n# RUN apt-get install -y quantum-server \n# RUN apt-get install -y quantum-plugin-linuxbridge \n# RUN apt-get install -y quantum-plugin-linuxbridge-agent \n# RUN apt-get install -y dnsmasq-base\n# RUN apt-get install -y dnsmasq \n# RUN apt-get install -y quantum-dhcp-agent \n# RUN apt-get install -y quantum-l3-agent\n# Nova Controller\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y nova-novncproxy novnc nova-api nova-ajax-console-proxy nova-cert nova-conductor nova-consoleauth nova-doc nova-scheduler python-novaclient nova-network \\\n && sed -i -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = nova#\" -e \"s#^admin_password =.*#admin_password = nova#\" /etc/nova/api-paste.ini\n# Glance\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y glance \\\n && sed -i -e \"s#^sql_connection.*#sql_connection = mysql://glance@localhost/glance#\" -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = glance#\" -e \"s#^admin_password =.*#admin_password = glance#\" -e \"s|^\\#config_file.*|config_file = /etc/glance/glance-api-paste.ini|\" -e \"s|^\\#flavor.*|flavor = keystone|\" -e \"2 i container_formats = ami,ari,aki,bare,ovf,docker\" /etc/glance/glance-api.conf \\\n && sed -i -e \"s#^sql_connection.*#sql_connection = mysql://glance@localhost/glance#\" -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = glance#\" -e \"s#^admin_password =.*#admin_password = glance#\" -e \"s|^\\#config_file.*|config_file = /etc/glance/glance-registry-paste.ini|\" -e \"s|^\\#flavor.*|flavor = keystone|\" /etc/glance/glance-registry.conf \\\n && echo \"[pipeline:glance-registry-keystone]\\npipeline = authtoken context registryapp\" >> /etc/glance/glance-registry-paste.ini\n# Cinder\n# RUN apt-get -y install cinder-api cinder-scheduler cinder-volume open-iscsi python-cinderclient tgt && \\\n#     sed -i -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" \\\n#     \t-e \"s#^admin_user =.*#admin_user = cinder#\" \\\n#     \t-e \"s#^admin_password =.*#admin_password = cinder#\" \\\n#     \t/etc/cinder/api-paste.ini && \\\n#  \techo 'sql_connection = mysql://cinder@localhost/cinder\\nrabbit_host = localhost' >> /etc/cinder/cinder.conf \n# Dashboard\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y memcached python-memcache libapache2-mod-wsgi openstack-dashboard \\\n && apt-get remove -y --purge openstack-dashboard-ubuntu-theme \\\n && echo \"SESSION_ENGINE = 'django.contrib.sessions.backends.cache'\" >> /etc/openstack-dashboard/local_settings.py\n# Nova Compute Node\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y nova-compute \\\n && sed -i -e \"s|^compute_driver=.*|compute_driver=docker.DockerDriver|\" /etc/nova/nova-compute.conf\n# Docker\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -qqy iptables ca-certificates lxc \\\n && wget -O /usr/local/bin/docker https://get.docker.io/builds/Linux/x86_64/docker-latest \\\n && chmod +x /usr/local/bin/docker\nVOLUME /var/lib/docker\n# todo move up later\n# Neutron\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y neutron-server neutron-dhcp-agent neutron-plugin-openvswitch neutron-l3-agent\nRUN echo \"net.ipv4.ip_forward=1\\nnet.ipv4.conf.all.rp_filter=0\\nnet.ipv4.conf.default.rp_filter=0\" >> /etc/sysctl.conf\nRUN sed -i -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = neutron#\" -e \"s#^admin_password =.*#admin_password = neutron#\" -e \"s#^connection.*#connection = mysql://neutron@localhost/neutron#\" /etc/neutron/neutron.conf \\\n && sed -i -e \"s|.*auth_token.*|paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory\\nauth_host = localhost\\nauth_uri=http://localhost:5000\\nadmin_tenant_name = service\\nadmin_user = neutron\\nadmin_password = neutron|\" /etc/neutron/api-paste.ini\n# Heat\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y heat-api heat-api-cfn heat-engine\nRUN mkdir /etc/heat/environment.d \\\n && sed -i -e \"s|^sql_connection.*||\" -e \"s|^#sql_connection.*|sql_connection = mysql://heat@localhost/heat|\" /etc/heat/heat.conf \\\n && sed -i -e \"s|.*auth_token.*|paste.filter_factory = heat.common.auth_token:filter_factory\\nauth_host = localhost\\nauth_port = 35357\\nauth_protocol = http\\nadmin_tenant_name = service\\nadmin_user = heat\\nadmin_password = heat|\" /etc/heat/api-paste.ini\nRUN git clone https://github.com/dotcloud/openstack-heat-docker.git \\\n && pip install -r openstack-heat-docker/requirements.txt \\\n && mkdir /usr/lib/heat \\\n && ln -sf $( cd openstack-heat-docker/plugin ;pwd ;) /usr/lib/heat/docker\n# Config files\nADD ./ /docker-openstack\nRUN cd /docker-openstack \\\n && chmod +x *.sh \\\n && mv /etc/nova/nova.conf /etc/nova/nova.conf.saved \\\n && cp nova.conf /etc/nova/nova.conf \\\n && cp supervisord-openstack.conf /etc/supervisor/conf.d/supervisord-openstack.conf\n# Init MySql\nRUN mysqld &; keystone-all &; apachectl start &; sleep 3 \\\n && mysql < /docker-openstack/mysql.ddl \\\n && keystone-manage db_sync \\\n && /docker-openstack/sample_data.sh \\\n && nova-manage db sync \\\n && glance-manage db_sync \\\n && heat-manage db_sync \\\n && mysqladmin shutdown\n# ENV\nENV OS_USERNAME=\"admin\"\nENV OS_TENANT_NAME=\"demo\"\nENV OS_PASSWORD=\"secrete\"\nENV OS_AUTH_URL=\"http://localhost:35357/v2.0\"\nEXPOSE 22/tcp 80/tcp\n","injectedSmells":[],"originalDockerfileHash":"2ef6e3095fb633d03a1dc12eee15f3aa","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  Openstack\nFROM ubuntu\nRUN echo 'deb http://archive.ubuntu.com/ubuntu precise main universe' > /etc/apt/sources.list \\\n && echo 'deb http://archive.ubuntu.com/ubuntu precise-updates universe' >> /etc/apt/sources.list \\\n && apt-get update\n#  Prevent daemon start during install\nRUN echo '#!/bin/sh\\nexit 101' > /usr/sbin/policy-rc.d \\\n && chmod +x /usr/sbin/policy-rc.d\n#  Supervisord\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y supervisor \\\n && mkdir -p /var/log/supervisor\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n#  SSHD\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y openssh-server \\\n && mkdir /var/run/sshd \\\n && echo 'root:root' | chpasswd\n#  Utilities\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y vim less net-tools inetutils-ping curl git telnet nmap socat\n#  Others\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y vlan bridge-utils python python-pip python-software-properties software-properties-common python-keyring\n#  MySQL\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server python-mysqldb \\\n && sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mysql/my.cnf\n#  RabbitMQ\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y rabbitmq-server\n#  For Openstack\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y ubuntu-cloud-keyring \\\n && echo \"deb http://ubuntu-cloud.archive.canonical.com/ubuntu precise-updates/havana main\" >> /etc/apt/sources.list.d/openstack.list \\\n && apt-get update\n#  Keystone\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y keystone \\\n && sed -i -e 's/# admin_token = ADMIN/admin_token = ADMIN/' -e \"s#^connection.*#connection = mysql://keystone@localhost/keystone#\" /etc/keystone/keystone.conf\n#  Quantum\n#  RUN apt-get install -y quantum-server \n#  RUN apt-get install -y quantum-plugin-linuxbridge \n#  RUN apt-get install -y quantum-plugin-linuxbridge-agent \n#  RUN apt-get install -y dnsmasq-base\n#  RUN apt-get install -y dnsmasq \n#  RUN apt-get install -y quantum-dhcp-agent \n#  RUN apt-get install -y quantum-l3-agent\n#  Nova Controller\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y nova-novncproxy novnc nova-api nova-ajax-console-proxy nova-cert nova-conductor nova-consoleauth nova-doc nova-scheduler python-novaclient nova-network \\\n && sed -i -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = nova#\" -e \"s#^admin_password =.*#admin_password = nova#\" /etc/nova/api-paste.ini\n#  Glance\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y glance \\\n && sed -i -e \"s#^sql_connection.*#sql_connection = mysql://glance@localhost/glance#\" -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = glance#\" -e \"s#^admin_password =.*#admin_password = glance#\" -e \"s|^\\#config_file.*|config_file = /etc/glance/glance-api-paste.ini|\" -e \"s|^\\#flavor.*|flavor = keystone|\" -e \"2 i container_formats = ami,ari,aki,bare,ovf,docker\" /etc/glance/glance-api.conf \\\n && sed -i -e \"s#^sql_connection.*#sql_connection = mysql://glance@localhost/glance#\" -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = glance#\" -e \"s#^admin_password =.*#admin_password = glance#\" -e \"s|^\\#config_file.*|config_file = /etc/glance/glance-registry-paste.ini|\" -e \"s|^\\#flavor.*|flavor = keystone|\" /etc/glance/glance-registry.conf \\\n && echo \"[pipeline:glance-registry-keystone]\\npipeline = authtoken context registryapp\" >> /etc/glance/glance-registry-paste.ini\n#  Cinder\n#  RUN apt-get -y install cinder-api cinder-scheduler cinder-volume open-iscsi python-cinderclient tgt && \\\n#      sed -i -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" \\\n#      \t-e \"s#^admin_user =.*#admin_user = cinder#\" \\\n#      \t-e \"s#^admin_password =.*#admin_password = cinder#\" \\\n#      \t/etc/cinder/api-paste.ini && \\\n#   \techo 'sql_connection = mysql://cinder@localhost/cinder\\nrabbit_host = localhost' >> /etc/cinder/cinder.conf \n#  Dashboard\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y memcached python-memcache libapache2-mod-wsgi openstack-dashboard \\\n && apt-get remove -y --purge openstack-dashboard-ubuntu-theme \\\n && echo \"SESSION_ENGINE = 'django.contrib.sessions.backends.cache'\" >> /etc/openstack-dashboard/local_settings.py\n#  Nova Compute Node\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y nova-compute \\\n && sed -i -e \"s|^compute_driver=.*|compute_driver=docker.DockerDriver|\" /etc/nova/nova-compute.conf\n#  Docker\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -qqy iptables ca-certificates lxc \\\n && wget -O /usr/local/bin/docker https://get.docker.io/builds/Linux/x86_64/docker-latest \\\n && chmod +x /usr/local/bin/docker\nVOLUME /var/lib/docker\n#  todo move up later\n#  Neutron\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y neutron-server neutron-dhcp-agent neutron-plugin-openvswitch neutron-l3-agent\nRUN echo \"net.ipv4.ip_forward=1\\nnet.ipv4.conf.all.rp_filter=0\\nnet.ipv4.conf.default.rp_filter=0\" >> /etc/sysctl.conf\nRUN sed -i -e \"s#^admin_tenant_name =.*#admin_tenant_name = service#\" -e \"s#^admin_user =.*#admin_user = neutron#\" -e \"s#^admin_password =.*#admin_password = neutron#\" -e \"s#^connection.*#connection = mysql://neutron@localhost/neutron#\" /etc/neutron/neutron.conf \\\n && sed -i -e \"s|.*auth_token.*|paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory\\nauth_host = localhost\\nauth_uri=http://localhost:5000\\nadmin_tenant_name = service\\nadmin_user = neutron\\nadmin_password = neutron|\" /etc/neutron/api-paste.ini\n#  Heat\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y heat-api heat-api-cfn heat-engine\nRUN mkdir /etc/heat/environment.d \\\n && sed -i -e \"s|^sql_connection.*||\" -e \"s|^#sql_connection.*|sql_connection = mysql://heat@localhost/heat|\" /etc/heat/heat.conf \\\n && sed -i -e \"s|.*auth_token.*|paste.filter_factory = heat.common.auth_token:filter_factory\\nauth_host = localhost\\nauth_port = 35357\\nauth_protocol = http\\nadmin_tenant_name = service\\nadmin_user = heat\\nadmin_password = heat|\" /etc/heat/api-paste.ini\nRUN git clone https://github.com/dotcloud/openstack-heat-docker.git \\\n && pip install -r openstack-heat-docker/requirements.txt \\\n && mkdir /usr/lib/heat \\\n && ln -sf $( cd openstack-heat-docker/plugin ;pwd ;) /usr/lib/heat/docker\n#  Config files\nADD ./ /docker-openstack\nRUN cd /docker-openstack \\\n && chmod +x *.sh \\\n && mv /etc/nova/nova.conf /etc/nova/nova.conf.saved \\\n && cp nova.conf /etc/nova/nova.conf \\\n && cp supervisord-openstack.conf /etc/supervisor/conf.d/supervisord-openstack.conf\n#  Init MySql\nRUN mysqld &; keystone-all &; apachectl start &; sleep 3 \\\n && mysql < /docker-openstack/mysql.ddl \\\n && keystone-manage db_sync \\\n && /docker-openstack/sample_data.sh \\\n && nova-manage db sync \\\n && glance-manage db_sync \\\n && heat-manage db_sync \\\n && mysqladmin shutdown\n#  ENV\nENV OS_USERNAME=\"admin\"\nENV OS_TENANT_NAME=\"demo\"\nENV OS_PASSWORD=\"secrete\"\nENV OS_AUTH_URL=\"http://localhost:35357/v2.0\"\nEXPOSE 22/tcp 80/tcp\n","originalDockerfileUglifiedHash":"13b60da13168f7c9e51ffc39e7a87013","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d6929daf4add1d753994a91d17d49e228984bfa5.dockerfile"}