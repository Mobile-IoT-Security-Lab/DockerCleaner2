{"seed":59140111,"processedDockerfileHash":"994e058954d5a72351cf16dad8197800","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER dev@marvin.apache.org\nLABEL authors=\"jeremy.elster\"\nENV SLEEP_MILLIS=\"0\"\nUSER root\n#  #############################################################\n#   Define all environment variables to be used \n#  #############################################################\nENV MARVIN_HOME=\"/opt/marvin\"\nENV MARVIN_DATA_PATH=\"/marvin-data\"\nENV MARVIN_ENGINE_HOME=\"$MARVIN_HOME/engine\"\nENV MARVIN_ENGINE_ENV=\"marvin-engine-env\"\nENV WORKON_HOME=\"$MARVIN_HOME/.virtualenvs\"\nENV SPARK_HOME=\"/opt/spark\"\nENV SPARK_CONF_DIR=\"$SPARK_HOME/conf\"\nENV HADOOP_CONF_DIR=\"$SPARK_CONF_DIR\"\nENV YARN_CONF_DIR=\"$SPARK_CONF_DIR\"\n#  #############################################################\n#   Create all folders needed \n#  #############################################################\nRUN mkdir -p $MARVIN_HOME \\\n && mkdir -p $MARVIN_DATA_PATH \\\n && mkdir -p $MARVIN_ENGINE_HOME \\\n && mkdir -p /var/log/marvin/engines \\\n && mkdir -p /var/run/marvin/engines\n#  #############################################################\n#   Install the system dependencies for default installation \n#  #############################################################\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 -y \\\n && apt-get install --no-install-recommends maven=3.3.9-3 git=1:2.7.4-0ubuntu1.10 python=2.7.12-1~16.04 cmake=3.5.1-1ubuntu3 software-properties-common=0.96.20.10 curl=7.47.0-1ubuntu2.19 libstdc++6=5.4.0-6ubuntu1~16.04.12 -y \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 -y \\\n && apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 -y \\\n && apt-get install --no-install-recommends python2.7-dev=2.7.12-1ubuntu0~16.04.18 -y \\\n && apt-get install --no-install-recommends python-pip=8.1.1-2ubuntu0.6 -y \\\n && apt-get install --no-install-recommends ipython=2.4.1-1 -y \\\n && apt-get install --no-install-recommends libffi-dev=3.2.1-4 -y \\\n && apt-get install --no-install-recommends libssl-dev=1.0.2g-1ubuntu4.20 -y \\\n && apt-get install --no-install-recommends libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 -y \\\n && apt-get install --no-install-recommends libxslt1-dev=1.1.28-2.1ubuntu0.3 -y \\\n && apt-get install --no-install-recommends libpng12-dev=1.2.54-1ubuntu1.1 -y \\\n && apt-get install --no-install-recommends libfreetype6-dev=2.6.1-0.1ubuntu2.5 -y \\\n && apt-get install --no-install-recommends python-tk=2.7.12-1~16.04 -y \\\n && apt-get install --no-install-recommends libsasl2-dev=2.1.26.dfsg1-14ubuntu0.2 -y \\\n && apt-get install --no-install-recommends python-pip=8.1.1-2ubuntu0.6 -y \\\n && apt-get install --no-install-recommends graphviz=2.38.0-12ubuntu2.1 -y \\\n && pip install pip==23.1 --upgrade \\\n && apt-get clean\nRUN pip install virtualenvwrapper==4.8.4\n#   Install Oracle JDK\nRUN add-apt-repository ppa:webupd8team/java -y \\\n && apt-get update -qq \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && apt-get install --no-install-recommends oracle-java8-installer -y\n#  #############################################################\n#   Install Apache Spark\n#\n#   Uncomment if you are using spark, note that is needed the \n#   spark configuration files to the think works correctly.\n#  #############################################################\nRUN mkdir -p $SPARK_CONF_DIR\n#  #############################################################\n#   Create the virtualenv configuration\n#  #############################################################\nRUN /bin/bash -c \"cd $MARVIN_ENGINE_HOME \\\n && source /usr/local/bin/virtualenvwrapper.sh \\\n && mkvirtualenv $MARVIN_ENGINE_ENV\"\n#  #############################################################\n#          <CUSTOM ENGINE INSTALLATION PROCEDURE HERE>         #\n#  #############################################################\n#  #############################################################\n#   Copy and Install the marvin engine inside virtualenv\n#  #############################################################\nCOPY build/engine.tar $MARVIN_ENGINE_HOME\nCOPY build/marvin-engine-executor-assembly.jar $MARVIN_DATA_PATH\nRUN /bin/bash -c \"source /usr/local/bin/virtualenvwrapper.sh \\\n && workon $MARVIN_ENGINE_ENV \\\n && cd $MARVIN_ENGINE_HOME \\\n && pip install . --process-dependency-links\"\n#  #############################################################\n#   Starts the engine http server\n#  #############################################################\nEXPOSE 8000/tcp\nCMD /bin/bash -c \"source /usr/local/bin/virtualenvwrapper.sh \\\n && workon $MARVIN_ENGINE_ENV \\\n && cd $MARVIN_ENGINE_HOME \\\n && marvin engine-httpserver -h 0.0.0.0 -p 8000\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER dev@marvin.apache.org\nLABEL authors=\"jeremy.elster\"\nENV SLEEP_MILLIS=\"0\"\nUSER root\n# #############################################################\n#  Define all environment variables to be used \n# #############################################################\nENV MARVIN_HOME=\"/opt/marvin\"\nENV MARVIN_DATA_PATH=\"/marvin-data\"\nENV MARVIN_ENGINE_HOME=\"$MARVIN_HOME/engine\"\nENV MARVIN_ENGINE_ENV=\"marvin-engine-env\"\nENV WORKON_HOME=\"$MARVIN_HOME/.virtualenvs\"\nENV SPARK_HOME=\"/opt/spark\"\nENV SPARK_CONF_DIR=\"$SPARK_HOME/conf\"\nENV HADOOP_CONF_DIR=\"$SPARK_CONF_DIR\"\nENV YARN_CONF_DIR=\"$SPARK_CONF_DIR\"\n# #############################################################\n#  Create all folders needed \n# #############################################################\nRUN mkdir -p $MARVIN_HOME \\\n && mkdir -p $MARVIN_DATA_PATH \\\n && mkdir -p $MARVIN_ENGINE_HOME \\\n && mkdir -p /var/log/marvin/engines \\\n && mkdir -p /var/run/marvin/engines\n# #############################################################\n#  Install the system dependencies for default installation \n# #############################################################\nRUN apt-get update -y \\\n && apt-get install build-essential -y \\\n && apt-get install maven git python cmake software-properties-common curl libstdc++6 -y \\\n && apt-get install git -y \\\n && apt-get install wget -y \\\n && apt-get install python2.7-dev -y \\\n && apt-get install python-pip -y \\\n && apt-get install ipython -y \\\n && apt-get install libffi-dev -y \\\n && apt-get install libssl-dev -y \\\n && apt-get install libxml2-dev -y \\\n && apt-get install libxslt1-dev -y \\\n && apt-get install libpng12-dev -y \\\n && apt-get install libfreetype6-dev -y \\\n && apt-get install python-tk -y \\\n && apt-get install libsasl2-dev -y \\\n && apt-get install python-pip -y \\\n && apt-get install graphviz -y \\\n && pip install pip --upgrade \\\n && apt-get clean\nRUN pip install virtualenvwrapper\n#  Install Oracle JDK\nRUN add-apt-repository ppa:webupd8team/java -y \\\n && apt-get update -qq \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && apt-get install oracle-java8-installer -y\n# #############################################################\n#  Install Apache Spark\n#\n#  Uncomment if you are using spark, note that is needed the \n#  spark configuration files to the think works correctly.\n# #############################################################\nRUN mkdir -p $SPARK_CONF_DIR\n# #############################################################\n#  Create the virtualenv configuration\n# #############################################################\nRUN /bin/bash -c \"cd $MARVIN_ENGINE_HOME \\\n && source /usr/local/bin/virtualenvwrapper.sh \\\n && mkvirtualenv $MARVIN_ENGINE_ENV\"\n# #############################################################\n#         <CUSTOM ENGINE INSTALLATION PROCEDURE HERE>         #\n# #############################################################\n# #############################################################\n#  Copy and Install the marvin engine inside virtualenv\n# #############################################################\nADD build/engine.tar $MARVIN_ENGINE_HOME\nADD build/marvin-engine-executor-assembly.jar $MARVIN_DATA_PATH\nRUN /bin/bash -c \"source /usr/local/bin/virtualenvwrapper.sh \\\n && workon $MARVIN_ENGINE_ENV \\\n && cd $MARVIN_ENGINE_HOME \\\n && pip install . --process-dependency-links\"\n# #############################################################\n#  Starts the engine http server\n# #############################################################\nEXPOSE 8000/tcp\nCMD /bin/bash -c \"source /usr/local/bin/virtualenvwrapper.sh \\\n && workon $MARVIN_ENGINE_ENV \\\n && cd $MARVIN_ENGINE_HOME \\\n && marvin engine-httpserver -h 0.0.0.0 -p 8000\"\n","injectedSmells":[],"originalDockerfileHash":"27dab2cf8b7717ba08ad1b340386680f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER dev@marvin.apache.org\nLABEL authors=\"jeremy.elster\"\nENV SLEEP_MILLIS=\"0\"\nUSER root\n#  #############################################################\n#   Define all environment variables to be used \n#  #############################################################\nENV MARVIN_HOME=\"/opt/marvin\"\nENV MARVIN_DATA_PATH=\"/marvin-data\"\nENV MARVIN_ENGINE_HOME=\"$MARVIN_HOME/engine\"\nENV MARVIN_ENGINE_ENV=\"marvin-engine-env\"\nENV WORKON_HOME=\"$MARVIN_HOME/.virtualenvs\"\nENV SPARK_HOME=\"/opt/spark\"\nENV SPARK_CONF_DIR=\"$SPARK_HOME/conf\"\nENV HADOOP_CONF_DIR=\"$SPARK_CONF_DIR\"\nENV YARN_CONF_DIR=\"$SPARK_CONF_DIR\"\n#  #############################################################\n#   Create all folders needed \n#  #############################################################\nRUN mkdir -p $MARVIN_HOME \\\n && mkdir -p $MARVIN_DATA_PATH \\\n && mkdir -p $MARVIN_ENGINE_HOME \\\n && mkdir -p /var/log/marvin/engines \\\n && mkdir -p /var/run/marvin/engines\n#  #############################################################\n#   Install the system dependencies for default installation \n#  #############################################################\nRUN apt-get update -y \\\n && apt-get install build-essential -y \\\n && apt-get install maven git python cmake software-properties-common curl libstdc++6 -y \\\n && apt-get install git -y \\\n && apt-get install wget -y \\\n && apt-get install python2.7-dev -y \\\n && apt-get install python-pip -y \\\n && apt-get install ipython -y \\\n && apt-get install libffi-dev -y \\\n && apt-get install libssl-dev -y \\\n && apt-get install libxml2-dev -y \\\n && apt-get install libxslt1-dev -y \\\n && apt-get install libpng12-dev -y \\\n && apt-get install libfreetype6-dev -y \\\n && apt-get install python-tk -y \\\n && apt-get install libsasl2-dev -y \\\n && apt-get install python-pip -y \\\n && apt-get install graphviz -y \\\n && pip install pip --upgrade \\\n && apt-get clean\nRUN pip install virtualenvwrapper\n#   Install Oracle JDK\nRUN add-apt-repository ppa:webupd8team/java -y \\\n && apt-get update -qq \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && apt-get install oracle-java8-installer -y\n#  #############################################################\n#   Install Apache Spark\n#\n#   Uncomment if you are using spark, note that is needed the \n#   spark configuration files to the think works correctly.\n#  #############################################################\nRUN mkdir -p $SPARK_CONF_DIR\n#  #############################################################\n#   Create the virtualenv configuration\n#  #############################################################\nRUN /bin/bash -c \"cd $MARVIN_ENGINE_HOME \\\n && source /usr/local/bin/virtualenvwrapper.sh \\\n && mkvirtualenv $MARVIN_ENGINE_ENV\"\n#  #############################################################\n#          <CUSTOM ENGINE INSTALLATION PROCEDURE HERE>         #\n#  #############################################################\n#  #############################################################\n#   Copy and Install the marvin engine inside virtualenv\n#  #############################################################\nADD build/engine.tar $MARVIN_ENGINE_HOME\nADD build/marvin-engine-executor-assembly.jar $MARVIN_DATA_PATH\nRUN /bin/bash -c \"source /usr/local/bin/virtualenvwrapper.sh \\\n && workon $MARVIN_ENGINE_ENV \\\n && cd $MARVIN_ENGINE_HOME \\\n && pip install . --process-dependency-links\"\n#  #############################################################\n#   Starts the engine http server\n#  #############################################################\nEXPOSE 8000/tcp\nCMD /bin/bash -c \"source /usr/local/bin/virtualenvwrapper.sh \\\n && workon $MARVIN_ENGINE_ENV \\\n && cd $MARVIN_ENGINE_HOME \\\n && marvin engine-httpserver -h 0.0.0.0 -p 8000\"\n","originalDockerfileUglifiedHash":"ad634e734edbc8f2b6c53ab23f87a336","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4f0a31ee652ffd50406fcea611a754051eaf9d21.dockerfile"}