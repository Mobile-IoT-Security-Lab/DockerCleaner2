{"seed":4016128525,"processedDockerfileHash":"dbfe6b00d4d21b58116275db7b5d787d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Don't edit this file directly, since it was generated from a template,\n#   and you're changes will be *clobbered*.  Edit the template instead.\nFROM tleyden5iwx/ubuntu-cuda\nENV PYTHONPATH=\"/opt/caffe/python\"\n#   Add caffe binaries to path\nENV PATH=\"$PATH:/opt/caffe/.build_release/tools\"\n#   Get dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends bc=1.07.1-3build1 cmake=3.25.1-1 curl=7.88.1-7ubuntu1 gcc-4.6 g++-4.6 gcc-4.6-multilib g++-4.6-multilib gfortran=4:12.2.0-3ubuntu1 git=1:2.39.2-1ubuntu1 libprotobuf-dev=3.21.12-1ubuntu7 libleveldb-dev=1.23-4 libsnappy-dev=1.1.9-3 libopencv-dev=4.6.0+dfsg-11 libboost-all-dev=1.74.0.3ubuntu7 libhdf5-serial-dev liblmdb-dev=0.9.24-1build2 libjpeg62=1:6b2-3.1 libfreeimage-dev=3.18.0+ds2-9 libatlas-base-dev=3.10.3-13ubuntu1 pkgconf=1.8.1-1ubuntu2 protobuf-compiler=3.21.12-1ubuntu7 python-dev python-pip unzip=6.0-27ubuntu1 wget=1.21.3-1ubuntu1 -y\n#   Use gcc 4.6\nRUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.6 30 \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-4.6 30 \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 30 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 30\n#   Allow it to find CUDA libs\nRUN echo \"/usr/local/cuda/lib64\" > /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\n#   Clone the Caffe repo\nRUN cd /opt \\\n && git clone https://github.com/BVLC/caffe.git\n#   Glog\nRUN cd /opt \\\n && wget https://google-glog.googlecode.com/files/glog-0.3.3.tar.gz \\\n && tar zxvf glog-0.3.3.tar.gz \\\n && cd /opt/glog-0.3.3 \\\n && ./configure \\\n && make \\\n && make install\n#   Workaround for error loading libglog:\n#     error while loading shared libraries: libglog.so.0: cannot open shared object file\n#   The system already has /usr/local/lib listed in /etc/ld.so.conf.d/libc.conf, so\n#   running `ldconfig` fixes the problem (which is simpler than using $LD_LIBRARY_PATH)\n#   TODO: looks like this needs to be run _every_ time a new docker instance is run,\n#         so maybe LD_LIBRARY_PATh is a better approach (or add call to ldconfig in ~/.bashrc)\nRUN ldconfig\n#   Gflags\nRUN cd /opt \\\n && wget https://github.com/schuhschuh/gflags/archive/master.zip \\\n && unzip master.zip \\\n && cd /opt/gflags-master \\\n && mkdir build \\\n && cd /opt/gflags-master/build \\\n && export CXXFLAGS=\"-fPIC\" \\\n && cmake .. \\\n && make VERBOSE=1 \\\n && make \\\n && make install\n#   Build Caffe core\nRUN cd /opt/caffe \\\n && cp Makefile.config.example Makefile.config \\\n && echo \"CXX := /usr/bin/g++-4.6\" >> Makefile.config \\\n && sed -i 's/CXX :=/CXX ?=/' Makefile \\\n && make all\n#   Add ld-so.conf so it can find libcaffe.so\nCOPY caffe-ld-so.conf /etc/ld.so.conf.d/\n#   Run ldconfig again (not sure if needed)\nRUN ldconfig\n#   Install python deps\nRUN cd /opt/caffe \\\n && cat python/requirements.txt | xargs -L 1 sudo pip install\n#   Numpy include path hack - github.com/BVLC/caffe/wiki/Ubuntu-14.04-VirtualBox-VM\nRUN ln -s /usr/include/python2.7/ /usr/local/include/python2.7 \\\n && ln -s /usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/ /usr/local/include/python2.7/numpy\n#   Build Caffe python bindings\nRUN cd /opt/caffe \\\n && make pycaffe\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Don't edit this file directly, since it was generated from a template,\n#  and you're changes will be *clobbered*.  Edit the template instead.\nFROM tleyden5iwx/ubuntu-cuda\nENV PYTHONPATH=\"/opt/caffe/python\"\n#  Add caffe binaries to path\nENV PATH=\"$PATH:/opt/caffe/.build_release/tools\"\n#  Get dependencies\nRUN apt-get update \\\n && apt-get install bc cmake curl gcc-4.6 g++-4.6 gcc-4.6-multilib g++-4.6-multilib gfortran git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev liblmdb-dev libjpeg62 libfreeimage-dev libatlas-base-dev pkgconf protobuf-compiler python-dev python-pip unzip wget -y\n#  Use gcc 4.6\nRUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.6 30 \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-4.6 30 \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 30 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 30\n#  Allow it to find CUDA libs\nRUN echo \"/usr/local/cuda/lib64\" > /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\n#  Clone the Caffe repo\nRUN cd /opt \\\n && git clone https://github.com/BVLC/caffe.git\n#  Glog\nRUN cd /opt \\\n && wget https://google-glog.googlecode.com/files/glog-0.3.3.tar.gz \\\n && tar zxvf glog-0.3.3.tar.gz \\\n && cd /opt/glog-0.3.3 \\\n && ./configure \\\n && make \\\n && make install\n#  Workaround for error loading libglog:\n#    error while loading shared libraries: libglog.so.0: cannot open shared object file\n#  The system already has /usr/local/lib listed in /etc/ld.so.conf.d/libc.conf, so\n#  running `ldconfig` fixes the problem (which is simpler than using $LD_LIBRARY_PATH)\n#  TODO: looks like this needs to be run _every_ time a new docker instance is run,\n#        so maybe LD_LIBRARY_PATh is a better approach (or add call to ldconfig in ~/.bashrc)\nRUN ldconfig\n#  Gflags\nRUN cd /opt \\\n && wget https://github.com/schuhschuh/gflags/archive/master.zip \\\n && unzip master.zip \\\n && cd /opt/gflags-master \\\n && mkdir build \\\n && cd /opt/gflags-master/build \\\n && export CXXFLAGS=\"-fPIC\" \\\n && cmake .. \\\n && make VERBOSE=1 \\\n && make \\\n && make install\n#  Build Caffe core\nRUN cd /opt/caffe \\\n && cp Makefile.config.example Makefile.config \\\n && echo \"CXX := /usr/bin/g++-4.6\" >> Makefile.config \\\n && sed -i 's/CXX :=/CXX ?=/' Makefile \\\n && make all\n#  Add ld-so.conf so it can find libcaffe.so\nADD caffe-ld-so.conf /etc/ld.so.conf.d/\n#  Run ldconfig again (not sure if needed)\nRUN ldconfig\n#  Install python deps\nRUN cd /opt/caffe \\\n && cat python/requirements.txt | xargs -L 1 sudo pip install\n#  Numpy include path hack - github.com/BVLC/caffe/wiki/Ubuntu-14.04-VirtualBox-VM\nRUN ln -s /usr/include/python2.7/ /usr/local/include/python2.7 \\\n && ln -s /usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/ /usr/local/include/python2.7/numpy\n#  Build Caffe python bindings\nRUN cd /opt/caffe \\\n && make pycaffe\n","injectedSmells":[],"originalDockerfileHash":"485fddf4f68ce937cc716c40ef61420d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Don't edit this file directly, since it was generated from a template,\n#   and you're changes will be *clobbered*.  Edit the template instead.\nFROM tleyden5iwx/ubuntu-cuda\nENV PYTHONPATH=\"/opt/caffe/python\"\n#   Add caffe binaries to path\nENV PATH=\"$PATH:/opt/caffe/.build_release/tools\"\n#   Get dependencies\nRUN apt-get update \\\n && apt-get install bc cmake curl gcc-4.6 g++-4.6 gcc-4.6-multilib g++-4.6-multilib gfortran git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev liblmdb-dev libjpeg62 libfreeimage-dev libatlas-base-dev pkgconf protobuf-compiler python-dev python-pip unzip wget -y\n#   Use gcc 4.6\nRUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.6 30 \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-4.6 30 \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 30 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 30\n#   Allow it to find CUDA libs\nRUN echo \"/usr/local/cuda/lib64\" > /etc/ld.so.conf.d/cuda.conf \\\n && ldconfig\n#   Clone the Caffe repo\nRUN cd /opt \\\n && git clone https://github.com/BVLC/caffe.git\n#   Glog\nRUN cd /opt \\\n && wget https://google-glog.googlecode.com/files/glog-0.3.3.tar.gz \\\n && tar zxvf glog-0.3.3.tar.gz \\\n && cd /opt/glog-0.3.3 \\\n && ./configure \\\n && make \\\n && make install\n#   Workaround for error loading libglog:\n#     error while loading shared libraries: libglog.so.0: cannot open shared object file\n#   The system already has /usr/local/lib listed in /etc/ld.so.conf.d/libc.conf, so\n#   running `ldconfig` fixes the problem (which is simpler than using $LD_LIBRARY_PATH)\n#   TODO: looks like this needs to be run _every_ time a new docker instance is run,\n#         so maybe LD_LIBRARY_PATh is a better approach (or add call to ldconfig in ~/.bashrc)\nRUN ldconfig\n#   Gflags\nRUN cd /opt \\\n && wget https://github.com/schuhschuh/gflags/archive/master.zip \\\n && unzip master.zip \\\n && cd /opt/gflags-master \\\n && mkdir build \\\n && cd /opt/gflags-master/build \\\n && export CXXFLAGS=\"-fPIC\" \\\n && cmake .. \\\n && make VERBOSE=1 \\\n && make \\\n && make install\n#   Build Caffe core\nRUN cd /opt/caffe \\\n && cp Makefile.config.example Makefile.config \\\n && echo \"CXX := /usr/bin/g++-4.6\" >> Makefile.config \\\n && sed -i 's/CXX :=/CXX ?=/' Makefile \\\n && make all\n#   Add ld-so.conf so it can find libcaffe.so\nADD caffe-ld-so.conf /etc/ld.so.conf.d/\n#   Run ldconfig again (not sure if needed)\nRUN ldconfig\n#   Install python deps\nRUN cd /opt/caffe \\\n && cat python/requirements.txt | xargs -L 1 sudo pip install\n#   Numpy include path hack - github.com/BVLC/caffe/wiki/Ubuntu-14.04-VirtualBox-VM\nRUN ln -s /usr/include/python2.7/ /usr/local/include/python2.7 \\\n && ln -s /usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/ /usr/local/include/python2.7/numpy\n#   Build Caffe python bindings\nRUN cd /opt/caffe \\\n && make pycaffe\n","originalDockerfileUglifiedHash":"55e40d5796773cc9b13a952c82ea3b74","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/abe373d83f6cd836209e1bdf56bc0ed463a1305c.dockerfile"}