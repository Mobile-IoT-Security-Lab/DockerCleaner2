{"seed":4270087529,"processedDockerfileHash":"02665129e4b819caf0303a5841dba67e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Base image heroku cedar stack v14\nFROM heroku/cedar:14\n#   Make folder structure\nRUN mkdir /app\nRUN mkdir /app/.heroku\nRUN mkdir /app/.heroku/vendor\nENV LD_LIBRARY_PATH=\"/app/.heroku/vendor/lib/\"\n#   Install ATLAS with LAPACK and BLAS\nWORKDIR /app/.heroku\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends gfortran -y )\nRUN curl -s -L http://www.netlib.org/lapack/lapack-3.6.1.tgz > lapack-3.6.1.tgz\nRUN curl -s -L http://netix.dl.sourceforge.net/project/math-atlas/Stable/3.10.3/atlas3.10.3.tar.bz2 > /app/.heroku/atlas3.10.3.tar.bz2\nRUN bunzip2 -c atlas3.10.3.tar.bz2 | tar xfm -\nRUN mkdir /app/.heroku/ATLAS/Linux_C2D64SSE3\nWORKDIR /app/.heroku/ATLAS/Linux_C2D64SSE3\nRUN ../configure -b 64 -D c -DPentiumCPS=2400 --prefix=/app/.heroku/vendor/ --with-netlib-lapack-tarfile=/app/.heroku/lapack-3.6.1.tgz\nRUN make build \\\n && make check \\\n && make ptcheck \\\n && make time \\\n && make install\nWORKDIR /app/.heroku\nRUN rm lapack-3.6.1.tgz\nRUN rm atlas3.10.3.tar.bz2\nRUN rm -r ATLAS\nENV ATLAS=\"/app/.heroku/vendor/lib/libatlas.a\"\nENV BLAS=\"/app/.heroku/vendor/lib/libcblas.a\"\nENV LAPACK=\"/app/.heroku/vendor/lib/liblapack.a\"\n#   Install Python 2.7.10\nRUN apt-get remove -y python2.7\nRUN apt-get remove -y python3.4\nRUN apt-get remove -y python2.7-minimal\nRUN apt-get remove -y python3.4-minimal\nRUN apt-get remove -y libpython2.7-minimal\nRUN apt-get remove -y libpython3.4-minimal\nRUN curl -s -L http://kent.dl.sourceforge.net/project/tcl/Tcl/8.6.6/tcl8.6.6-src.tar.gz > tcl8.6.6-src.tar.gz\nRUN tar -xvf tcl8.6.6-src.tar.gz\nRUN rm tcl8.6.6-src.tar.gz\nWORKDIR /app/.heroku/tcl8.6.6/unix\nRUN ./configure --prefix=/app/.heroku/vendor/\nRUN make \\\n && make install\nWORKDIR /app/.heroku/\nRUN curl -s -L http://heanet.dl.sourceforge.net/project/tcl/Tcl/8.6.6/tk8.6.6-src.tar.gz > tk8.6.6-src.tar.gz\nRUN tar -xvf tk8.6.6-src.tar.gz\nRUN rm tk8.6.6-src.tar.gz\nWORKDIR /app/.heroku/tk8.6.6/unix\nRUN ./configure --prefix=/app/.heroku/vendor/ --with-tcl=/app/.heroku/tcl8.6.6/unix\nRUN make \\\n && make install\nWORKDIR /app/.heroku/\nRUN rm -r tcl8.6.6\nRUN rm -r tk8.6.6\nRUN curl -s -L https://www.python.org/ftp/python/2.7.10/Python-2.7.10.tgz > Python-2.7.10.tgz\nRUN tar zxvf Python-2.7.10.tgz\nRUN rm Python-2.7.10.tgz\nWORKDIR /app/.heroku/Python-2.7.10\nRUN ./configure --prefix=/app/.heroku/vendor/ --enable-shared --with-tcltk-includes=\"-I/app/.heroku/vendor/include\" --with-tcltk-libs=\"-L/app/.heroku/vendor/lib -ltcl8.6.6 -L/app/.heroku/vendor/lib -ltk8.6.6\"\nRUN make install\nWORKDIR /app/.heroku\nRUN rm -rf Python-2.7.10\nENV PATH=\"/app/.heroku/vendor/bin:$PATH\"\nENV PYTHONPATH=\"/app/.heroku/vendor/lib/python2.7/site-packages\"\n#   Install latest setup-tools and pip\nRUN curl -s -L https://bootstrap.pypa.io/get-pip.py > get-pip.py\nRUN python get-pip.py\nRUN rm get-pip.py\n#   Install Numpy\nRUN pip install numpy==1.11.1 -v\n#   Install Scipy\nRUN pip install scipy==0.18.0 -v\n#   Install Matplotlib\nRUN pip install matplotlib==1.5.3 -v\n#   Install Opencv with python bindings\nRUN (apt-get update ;apt-get install --no-install-recommends cmake -y )\nRUN curl -s -L https://github.com/Itseez/opencv/archive/2.4.11.zip > opencv-2.4.11.zip\nRUN unzip opencv-2.4.11.zip\nRUN rm opencv-2.4.11.zip\nWORKDIR /app/.heroku/opencv-2.4.11\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/app/.heroku/vendor -D BUILD_DOCS=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_EXAMPLES=OFF -D BUILD_opencv_python=ON .\nRUN make install\nWORKDIR /app/.heroku\nRUN rm -rf opencv-2.4.11\n#   Create vendor package\nWORKDIR /app/\nRUN tar cvfj /vendor.tar.bz2 .\nVOLUME /vendoring\nCMD cp /vendor.tar.bz2 /vendoring\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Base image heroku cedar stack v14\nFROM heroku/cedar:14\n#  Make folder structure\nRUN mkdir /app\nRUN mkdir /app/.heroku\nRUN mkdir /app/.heroku/vendor\nENV LD_LIBRARY_PATH=\"/app/.heroku/vendor/lib/\"\n#  Install ATLAS with LAPACK and BLAS\nWORKDIR /app/.heroku\nRUN apt-get update\nRUN apt-get install gfortran -y\nRUN curl -s -L http://www.netlib.org/lapack/lapack-3.6.1.tgz > lapack-3.6.1.tgz\nRUN curl -s -L http://netix.dl.sourceforge.net/project/math-atlas/Stable/3.10.3/atlas3.10.3.tar.bz2 > /app/.heroku/atlas3.10.3.tar.bz2\nRUN bunzip2 -c atlas3.10.3.tar.bz2 | tar xfm -\nRUN mkdir /app/.heroku/ATLAS/Linux_C2D64SSE3\nWORKDIR /app/.heroku/ATLAS/Linux_C2D64SSE3\nRUN ../configure -b 64 -D c -DPentiumCPS=2400 --prefix=/app/.heroku/vendor/ --with-netlib-lapack-tarfile=/app/.heroku/lapack-3.6.1.tgz\nRUN make build \\\n && make check \\\n && make ptcheck \\\n && make time \\\n && make install\nWORKDIR /app/.heroku\nRUN rm lapack-3.6.1.tgz\nRUN rm atlas3.10.3.tar.bz2\nRUN rm -r ATLAS\nENV ATLAS=\"/app/.heroku/vendor/lib/libatlas.a\"\nENV BLAS=\"/app/.heroku/vendor/lib/libcblas.a\"\nENV LAPACK=\"/app/.heroku/vendor/lib/liblapack.a\"\n#  Install Python 2.7.10\nRUN apt-get remove -y python2.7\nRUN apt-get remove -y python3.4\nRUN apt-get remove -y python2.7-minimal\nRUN apt-get remove -y python3.4-minimal\nRUN apt-get remove -y libpython2.7-minimal\nRUN apt-get remove -y libpython3.4-minimal\nRUN curl -s -L http://kent.dl.sourceforge.net/project/tcl/Tcl/8.6.6/tcl8.6.6-src.tar.gz > tcl8.6.6-src.tar.gz\nRUN tar -xvf tcl8.6.6-src.tar.gz\nRUN rm tcl8.6.6-src.tar.gz\nWORKDIR /app/.heroku/tcl8.6.6/unix\nRUN ./configure --prefix=/app/.heroku/vendor/\nRUN make \\\n && make install\nWORKDIR /app/.heroku/\nRUN curl -s -L http://heanet.dl.sourceforge.net/project/tcl/Tcl/8.6.6/tk8.6.6-src.tar.gz > tk8.6.6-src.tar.gz\nRUN tar -xvf tk8.6.6-src.tar.gz\nRUN rm tk8.6.6-src.tar.gz\nWORKDIR /app/.heroku/tk8.6.6/unix\nRUN ./configure --prefix=/app/.heroku/vendor/ --with-tcl=/app/.heroku/tcl8.6.6/unix\nRUN make \\\n && make install\nWORKDIR /app/.heroku/\nRUN rm -r tcl8.6.6\nRUN rm -r tk8.6.6\nRUN curl -s -L https://www.python.org/ftp/python/2.7.10/Python-2.7.10.tgz > Python-2.7.10.tgz\nRUN tar zxvf Python-2.7.10.tgz\nRUN rm Python-2.7.10.tgz\nWORKDIR /app/.heroku/Python-2.7.10\nRUN ./configure --prefix=/app/.heroku/vendor/ --enable-shared --with-tcltk-includes=\"-I/app/.heroku/vendor/include\" --with-tcltk-libs=\"-L/app/.heroku/vendor/lib -ltcl8.6.6 -L/app/.heroku/vendor/lib -ltk8.6.6\"\nRUN make install\nWORKDIR /app/.heroku\nRUN rm -rf Python-2.7.10\nENV PATH=\"/app/.heroku/vendor/bin:$PATH\"\nENV PYTHONPATH=\"/app/.heroku/vendor/lib/python2.7/site-packages\"\n#  Install latest setup-tools and pip\nRUN curl -s -L https://bootstrap.pypa.io/get-pip.py > get-pip.py\nRUN python get-pip.py\nRUN rm get-pip.py\n#  Install Numpy\nRUN pip install numpy==1.11.1 -v\n#  Install Scipy\nRUN pip install scipy==0.18.0 -v\n#  Install Matplotlib\nRUN pip install matplotlib==1.5.3 -v\n#  Install Opencv with python bindings\nRUN apt-get install cmake -y\nRUN curl -s -L https://github.com/Itseez/opencv/archive/2.4.11.zip > opencv-2.4.11.zip\nRUN unzip opencv-2.4.11.zip\nRUN rm opencv-2.4.11.zip\nWORKDIR /app/.heroku/opencv-2.4.11\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/app/.heroku/vendor -D BUILD_DOCS=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_EXAMPLES=OFF -D BUILD_opencv_python=ON .\nRUN make install\nWORKDIR /app/.heroku\nRUN rm -rf opencv-2.4.11\n#  Create vendor package\nWORKDIR /app/\nRUN tar cvfj /vendor.tar.bz2 .\nVOLUME /vendoring\nCMD cp /vendor.tar.bz2 /vendoring\n","injectedSmells":[],"originalDockerfileHash":"0705210a847b05029d03a8bffe845d69","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Base image heroku cedar stack v14\nFROM heroku/cedar:14\n#   Make folder structure\nRUN mkdir /app\nRUN mkdir /app/.heroku\nRUN mkdir /app/.heroku/vendor\nENV LD_LIBRARY_PATH=\"/app/.heroku/vendor/lib/\"\n#   Install ATLAS with LAPACK and BLAS\nWORKDIR /app/.heroku\nRUN apt-get update\nRUN apt-get install gfortran -y\nRUN curl -s -L http://www.netlib.org/lapack/lapack-3.6.1.tgz > lapack-3.6.1.tgz\nRUN curl -s -L http://netix.dl.sourceforge.net/project/math-atlas/Stable/3.10.3/atlas3.10.3.tar.bz2 > /app/.heroku/atlas3.10.3.tar.bz2\nRUN bunzip2 -c atlas3.10.3.tar.bz2 | tar xfm -\nRUN mkdir /app/.heroku/ATLAS/Linux_C2D64SSE3\nWORKDIR /app/.heroku/ATLAS/Linux_C2D64SSE3\nRUN ../configure -b 64 -D c -DPentiumCPS=2400 --prefix=/app/.heroku/vendor/ --with-netlib-lapack-tarfile=/app/.heroku/lapack-3.6.1.tgz\nRUN make build \\\n && make check \\\n && make ptcheck \\\n && make time \\\n && make install\nWORKDIR /app/.heroku\nRUN rm lapack-3.6.1.tgz\nRUN rm atlas3.10.3.tar.bz2\nRUN rm -r ATLAS\nENV ATLAS=\"/app/.heroku/vendor/lib/libatlas.a\"\nENV BLAS=\"/app/.heroku/vendor/lib/libcblas.a\"\nENV LAPACK=\"/app/.heroku/vendor/lib/liblapack.a\"\n#   Install Python 2.7.10\nRUN apt-get remove -y python2.7\nRUN apt-get remove -y python3.4\nRUN apt-get remove -y python2.7-minimal\nRUN apt-get remove -y python3.4-minimal\nRUN apt-get remove -y libpython2.7-minimal\nRUN apt-get remove -y libpython3.4-minimal\nRUN curl -s -L http://kent.dl.sourceforge.net/project/tcl/Tcl/8.6.6/tcl8.6.6-src.tar.gz > tcl8.6.6-src.tar.gz\nRUN tar -xvf tcl8.6.6-src.tar.gz\nRUN rm tcl8.6.6-src.tar.gz\nWORKDIR /app/.heroku/tcl8.6.6/unix\nRUN ./configure --prefix=/app/.heroku/vendor/\nRUN make \\\n && make install\nWORKDIR /app/.heroku/\nRUN curl -s -L http://heanet.dl.sourceforge.net/project/tcl/Tcl/8.6.6/tk8.6.6-src.tar.gz > tk8.6.6-src.tar.gz\nRUN tar -xvf tk8.6.6-src.tar.gz\nRUN rm tk8.6.6-src.tar.gz\nWORKDIR /app/.heroku/tk8.6.6/unix\nRUN ./configure --prefix=/app/.heroku/vendor/ --with-tcl=/app/.heroku/tcl8.6.6/unix\nRUN make \\\n && make install\nWORKDIR /app/.heroku/\nRUN rm -r tcl8.6.6\nRUN rm -r tk8.6.6\nRUN curl -s -L https://www.python.org/ftp/python/2.7.10/Python-2.7.10.tgz > Python-2.7.10.tgz\nRUN tar zxvf Python-2.7.10.tgz\nRUN rm Python-2.7.10.tgz\nWORKDIR /app/.heroku/Python-2.7.10\nRUN ./configure --prefix=/app/.heroku/vendor/ --enable-shared --with-tcltk-includes=\"-I/app/.heroku/vendor/include\" --with-tcltk-libs=\"-L/app/.heroku/vendor/lib -ltcl8.6.6 -L/app/.heroku/vendor/lib -ltk8.6.6\"\nRUN make install\nWORKDIR /app/.heroku\nRUN rm -rf Python-2.7.10\nENV PATH=\"/app/.heroku/vendor/bin:$PATH\"\nENV PYTHONPATH=\"/app/.heroku/vendor/lib/python2.7/site-packages\"\n#   Install latest setup-tools and pip\nRUN curl -s -L https://bootstrap.pypa.io/get-pip.py > get-pip.py\nRUN python get-pip.py\nRUN rm get-pip.py\n#   Install Numpy\nRUN pip install numpy==1.11.1 -v\n#   Install Scipy\nRUN pip install scipy==0.18.0 -v\n#   Install Matplotlib\nRUN pip install matplotlib==1.5.3 -v\n#   Install Opencv with python bindings\nRUN apt-get install cmake -y\nRUN curl -s -L https://github.com/Itseez/opencv/archive/2.4.11.zip > opencv-2.4.11.zip\nRUN unzip opencv-2.4.11.zip\nRUN rm opencv-2.4.11.zip\nWORKDIR /app/.heroku/opencv-2.4.11\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/app/.heroku/vendor -D BUILD_DOCS=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_EXAMPLES=OFF -D BUILD_opencv_python=ON .\nRUN make install\nWORKDIR /app/.heroku\nRUN rm -rf opencv-2.4.11\n#   Create vendor package\nWORKDIR /app/\nRUN tar cvfj /vendor.tar.bz2 .\nVOLUME /vendoring\nCMD cp /vendor.tar.bz2 /vendoring\n","originalDockerfileUglifiedHash":"60b0cbe9d1ef195f6207014d0f7b6824","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3fe9bc64d691524d28e84cdd4bd86ea9ccae8bb4.dockerfile"}