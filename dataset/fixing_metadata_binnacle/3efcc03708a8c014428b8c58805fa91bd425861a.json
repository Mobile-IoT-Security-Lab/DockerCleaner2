{"seed":883645024,"processedDockerfileHash":"887ac7804fc48fbd6d1b87e5d054fada","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   =================================================================\n#\n#   Authors: Tom Kralidis <tomkralidis@gmail.com>\n#            Just van den Broecke <justb4@gmail.com>\n#\n#   Copyright (c) 2019 Tom Kralidis\n#   Copyright (c) 2019 Just van den Broecke\n#\n#   Permission is hereby granted, free of charge, to any person\n#   obtaining a copy of this software and associated documentation\n#   files (the \"Software\"), to deal in the Software without\n#   restriction, including without limitation the rights to use,\n#   copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the\n#   Software is furnished to do so, subject to the following\n#   conditions:\n#\n#   The above copyright notice and this permission notice shall be\n#   included in all copies or substantial portions of the Software.\n#\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n#   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n#   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n#   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n#   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n#   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n#   OTHER DEALINGS IN THE SOFTWARE.\n#\n#   =================================================================\nFROM debian:buster-slim\nLABEL maintainer=\"Just van den Broecke <justb4@gmail.com>\"\n#   Docker file for full geoapi server with libs/packages for all providers.\n#   Server runs with gunicorn. You can override ENV settings.\n#   Defaults:\n#   SCRIPT_NAME=/\n#   CONTAINER_NAME=pygeoapi\n#   CONTAINER_HOST=0.0.0.0\n#   CONTAINER_PORT=80\n#   WSGI_WORKERS=4\n#   WSGI_WORKER_TIMEOUT=6000\n#   WSGI_WORKER_CLASS=gevent\n#   Calls entrypoint.sh to run. Inspect it for options.\n#   Contains some test data. Also allows you to verify by running all unit tests.\n#   Simply run: docker run -it geopython/pygeoapi test\n#   Override the default config file /pygeoapi/local.config.yml\n#   via Docker Volume mapping or within a docker-compose.yml file. See example at\n#   https://github.com/geopython/demo.pygeoapi.io/tree/master/services/pygeoapi\n#   ARGS\nARG TIMEZONE=\"Europe/London\"\nARG LOCALE=\"en_US.UTF-8\"\nARG ADD_DEB_PACKAGES=\"\"\nARG ADD_PIP_PACKAGES=\"\"\n#   ENV settings\nENV TZ=\"${TIMEZONE}\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    DEB_BUILD_DEPS=\"tzdata build-essential python3-setuptools python3-pip apt-utils git\" \\\n    DEB_PACKAGES=\"locales libgdal20 python3-gdal libsqlite3-mod-spatialite curl ${ADD_DEB_PACKAGES}\" \\\n    PIP_PACKAGES=\"gunicorn==19.9.0 gevent==1.4.0 wheel==0.33.4 ${ADD_PIP_PACKAGES}\"\nCOPY . /pygeoapi\n#   Run all installs\nRUN apt-get update \\\n && apt-get install --no-install-recommends ${DEB_BUILD_DEPS} ${DEB_PACKAGES} -y \\\n && cp /usr/share/zoneinfo/${TZ} /etc/localtime \\\n && dpkg-reconfigure tzdata \\\n && sed -i -e \"s/# ${LOCALE} UTF-8/${LOCALE} UTF-8/\" /etc/locale.gen \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=${LOCALE} \\\n && echo \"For ${TZ} date=$( date ;)\" \\\n && echo \"Locale=$( locale ;)\" \\\n && pip3 install ${PIP_PACKAGES} \\\n && cd /pygeoapi \\\n && pip3 install -r requirements.txt \\\n && pip3 install -r requirements-dev.txt \\\n && pip3 install -r requirements-provider.txt \\\n && pip3 install -e . \\\n && pip3 uninstall --yes wheel \\\n && apt-get remove --purge ${DEB_BUILD_DEPS} -y \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY ./docker/default.config.yml /pygeoapi/local.config.yml\nCOPY ./docker/entrypoint.sh /entrypoint.sh\nWORKDIR /pygeoapi\nENTRYPOINT [\"/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  =================================================================\n#\n#  Authors: Tom Kralidis <tomkralidis@gmail.com>\n#           Just van den Broecke <justb4@gmail.com>\n#\n#  Copyright (c) 2019 Tom Kralidis\n#  Copyright (c) 2019 Just van den Broecke\n#\n#  Permission is hereby granted, free of charge, to any person\n#  obtaining a copy of this software and associated documentation\n#  files (the \"Software\"), to deal in the Software without\n#  restriction, including without limitation the rights to use,\n#  copy, modify, merge, publish, distribute, sublicense, and/or sell\n#  copies of the Software, and to permit persons to whom the\n#  Software is furnished to do so, subject to the following\n#  conditions:\n#\n#  The above copyright notice and this permission notice shall be\n#  included in all copies or substantial portions of the Software.\n#\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n#  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n#  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n#  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n#  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n#  OTHER DEALINGS IN THE SOFTWARE.\n#\n#  =================================================================\nFROM debian:buster-slim\nLABEL maintainer=\"Just van den Broecke <justb4@gmail.com>\"\n#  Docker file for full geoapi server with libs/packages for all providers.\n#  Server runs with gunicorn. You can override ENV settings.\n#  Defaults:\n#  SCRIPT_NAME=/\n#  CONTAINER_NAME=pygeoapi\n#  CONTAINER_HOST=0.0.0.0\n#  CONTAINER_PORT=80\n#  WSGI_WORKERS=4\n#  WSGI_WORKER_TIMEOUT=6000\n#  WSGI_WORKER_CLASS=gevent\n#  Calls entrypoint.sh to run. Inspect it for options.\n#  Contains some test data. Also allows you to verify by running all unit tests.\n#  Simply run: docker run -it geopython/pygeoapi test\n#  Override the default config file /pygeoapi/local.config.yml\n#  via Docker Volume mapping or within a docker-compose.yml file. See example at\n#  https://github.com/geopython/demo.pygeoapi.io/tree/master/services/pygeoapi\n#  ARGS\nARG TIMEZONE=\"Europe/London\"\nARG LOCALE=\"en_US.UTF-8\"\nARG ADD_DEB_PACKAGES=\"\"\nARG ADD_PIP_PACKAGES=\"\"\n#  ENV settings\nENV TZ=\"${TIMEZONE}\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    DEB_BUILD_DEPS=\"tzdata build-essential python3-setuptools python3-pip apt-utils git\" \\\n    DEB_PACKAGES=\"locales libgdal20 python3-gdal libsqlite3-mod-spatialite curl ${ADD_DEB_PACKAGES}\" \\\n    PIP_PACKAGES=\"gunicorn==19.9.0 gevent==1.4.0 wheel==0.33.4 ${ADD_PIP_PACKAGES}\"\nADD . /pygeoapi\n#  Run all installs\nRUN apt-get update \\\n && apt-get install --no-install-recommends ${DEB_BUILD_DEPS} ${DEB_PACKAGES} -y \\\n && cp /usr/share/zoneinfo/${TZ} /etc/localtime \\\n && dpkg-reconfigure tzdata \\\n && sed -i -e \"s/# ${LOCALE} UTF-8/${LOCALE} UTF-8/\" /etc/locale.gen \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=${LOCALE} \\\n && echo \"For ${TZ} date=$( date ;)\" \\\n && echo \"Locale=$( locale ;)\" \\\n && pip3 install ${PIP_PACKAGES} \\\n && cd /pygeoapi \\\n && pip3 install -r requirements.txt \\\n && pip3 install -r requirements-dev.txt \\\n && pip3 install -r requirements-provider.txt \\\n && pip3 install -e . \\\n && pip3 uninstall --yes wheel \\\n && apt-get remove --purge ${DEB_BUILD_DEPS} -y \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY ./docker/default.config.yml /pygeoapi/local.config.yml\nCOPY ./docker/entrypoint.sh /entrypoint.sh\nWORKDIR /pygeoapi\nENTRYPOINT [\"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"adcd952b3fb89b08fb60ea9634ab5a60","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   =================================================================\n#\n#   Authors: Tom Kralidis <tomkralidis@gmail.com>\n#            Just van den Broecke <justb4@gmail.com>\n#\n#   Copyright (c) 2019 Tom Kralidis\n#   Copyright (c) 2019 Just van den Broecke\n#\n#   Permission is hereby granted, free of charge, to any person\n#   obtaining a copy of this software and associated documentation\n#   files (the \"Software\"), to deal in the Software without\n#   restriction, including without limitation the rights to use,\n#   copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the\n#   Software is furnished to do so, subject to the following\n#   conditions:\n#\n#   The above copyright notice and this permission notice shall be\n#   included in all copies or substantial portions of the Software.\n#\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n#   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n#   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n#   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n#   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n#   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n#   OTHER DEALINGS IN THE SOFTWARE.\n#\n#   =================================================================\nFROM debian:buster-slim\nLABEL maintainer=\"Just van den Broecke <justb4@gmail.com>\"\n#   Docker file for full geoapi server with libs/packages for all providers.\n#   Server runs with gunicorn. You can override ENV settings.\n#   Defaults:\n#   SCRIPT_NAME=/\n#   CONTAINER_NAME=pygeoapi\n#   CONTAINER_HOST=0.0.0.0\n#   CONTAINER_PORT=80\n#   WSGI_WORKERS=4\n#   WSGI_WORKER_TIMEOUT=6000\n#   WSGI_WORKER_CLASS=gevent\n#   Calls entrypoint.sh to run. Inspect it for options.\n#   Contains some test data. Also allows you to verify by running all unit tests.\n#   Simply run: docker run -it geopython/pygeoapi test\n#   Override the default config file /pygeoapi/local.config.yml\n#   via Docker Volume mapping or within a docker-compose.yml file. See example at\n#   https://github.com/geopython/demo.pygeoapi.io/tree/master/services/pygeoapi\n#   ARGS\nARG TIMEZONE=\"Europe/London\"\nARG LOCALE=\"en_US.UTF-8\"\nARG ADD_DEB_PACKAGES=\"\"\nARG ADD_PIP_PACKAGES=\"\"\n#   ENV settings\nENV TZ=\"${TIMEZONE}\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    DEB_BUILD_DEPS=\"tzdata build-essential python3-setuptools python3-pip apt-utils git\" \\\n    DEB_PACKAGES=\"locales libgdal20 python3-gdal libsqlite3-mod-spatialite curl ${ADD_DEB_PACKAGES}\" \\\n    PIP_PACKAGES=\"gunicorn==19.9.0 gevent==1.4.0 wheel==0.33.4 ${ADD_PIP_PACKAGES}\"\nADD . /pygeoapi\n#   Run all installs\nRUN apt-get update \\\n && apt-get install --no-install-recommends ${DEB_BUILD_DEPS} ${DEB_PACKAGES} -y \\\n && cp /usr/share/zoneinfo/${TZ} /etc/localtime \\\n && dpkg-reconfigure tzdata \\\n && sed -i -e \"s/# ${LOCALE} UTF-8/${LOCALE} UTF-8/\" /etc/locale.gen \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=${LOCALE} \\\n && echo \"For ${TZ} date=$( date ;)\" \\\n && echo \"Locale=$( locale ;)\" \\\n && pip3 install ${PIP_PACKAGES} \\\n && cd /pygeoapi \\\n && pip3 install -r requirements.txt \\\n && pip3 install -r requirements-dev.txt \\\n && pip3 install -r requirements-provider.txt \\\n && pip3 install -e . \\\n && pip3 uninstall --yes wheel \\\n && apt-get remove --purge ${DEB_BUILD_DEPS} -y \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY ./docker/default.config.yml /pygeoapi/local.config.yml\nCOPY ./docker/entrypoint.sh /entrypoint.sh\nWORKDIR /pygeoapi\nENTRYPOINT [\"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"a6336fbcc5334c2bc6d1d859ebcdd040","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3efcc03708a8c014428b8c58805fa91bd425861a.dockerfile"}