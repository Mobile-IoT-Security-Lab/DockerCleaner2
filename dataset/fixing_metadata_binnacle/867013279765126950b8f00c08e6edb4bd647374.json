{"seed":3509769420,"processedDockerfileHash":"e1c03f11453b99e36d6a7ba834806da9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\n#   To edit the 'workspace' base Image, visit its repository on Github\n#      https://github.com/Laradock/workspace\n#\n#   To change its version, see the available Tags on the Docker Hub:\n#      https://hub.docker.com/r/laradock/workspace/tags/\n#\n#   Note: Base Image name format {image-tag}-{php-version}\n#\nFROM laradock/workspace:1.8-56\nMAINTAINER Kim Hsiao <white.shopping@gmail.com>\n#  ####################################\n#   Basic environment:\n#  ####################################\n#   Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nARG PGID=1000\nENV PUID=\"${PUID}\"\nENV PGID=\"${PGID}\"\nRUN groupadd -g ${PGID} laradock \\\n && useradd -u ${PUID} -g laradock -m laradock \\\n && :\n#  ####################################\n#   Set Timezone\n#  ####################################\nARG TZ=UTC\nENV TZ=\"${TZ}\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#  ####################################\n#   Install Supervisor:\n#  ####################################\nRUN apt-get upgrade -y \\\n && (apt-get update ;apt-get install --no-install-recommends supervisor -y ) \\\n && groupadd supervisor \\\n && usermod -a laradock -G supervisor\n#\n#  --------------------------------------------------------------------------\n#   Mandatory Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Mandatory Software's such as (\"php7.1-cli\", \"git\", \"vim\", ....) are\n#   installed on the base image 'laradock/workspace' image. If you want\n#   to add more Software's or remove existing one, you need to edit the\n#   base image (https://github.com/Laradock/workspace).\n#\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Optional Software's will only be installed if you set them to `true`\n#   in the `docker-compose.yml` before the build.\n#   Example:\n#     - INSTALL_NODE=false\n#     - ...\n#\n#  ####################################\n#   SOAP:\n#  ####################################\nARG INSTALL_SOAP=false\nENV INSTALL_SOAP=\"${INSTALL_SOAP}\"\nRUN if [ ${INSTALL_SOAP} = true ] ; then add-apt-repository -y ppa:ondrej/php \\\n && apt-get update -yqq \\\n && (apt-get update ;apt-get install --no-install-recommends libxml2-dev php5.6-soap -y ) ; fi\n#  ####################################\n#   PHP GMP\n#  ####################################\nARG INSTALL_GMP=false\nENV INSTALL_GMP=\"${INSTALL_GMP}\"\nRUN if [ ${INSTALL_GMP} = true ] ; then (apt-get update ;apt-get install --no-install-recommends php-gmp -y ) ; fi\n#  ####################################\n#   xDebug:\n#  ####################################\nARG INSTALL_XDEBUG=false\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then (apt-get update ;apt-get install --no-install-recommends php5.6-xdebug -y --force-yes ) \\\n && sed -i 's/^;//g' /etc/php/5.6/cli/conf.d/20-xdebug.ini \\\n && echo \"alias phpunit='php -dzend_extension=xdebug.so /var/www/vendor/bin/phpunit'\" >> ~/.bashrc; fi\n#   ADD for REMOTE debugging\nCOPY ./xdebug.ini /etc/php/5.6/cli/conf.d/xdebug.ini\n#  ####################################\n#   MongoDB:\n#  ####################################\n#   Check if Mongo needs to be installed\nARG INSTALL_MONGO=false\nENV INSTALL_MONGO=\"${INSTALL_MONGO}\"\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && echo \"extension=mongodb.so\" >> /etc/php/5.6/cli/conf.d/30-mongodb.ini; fi\n#  ####################################\n#   PHP Aerospike:\n#  ####################################\nARG INSTALL_AEROSPIKE=true\nENV INSTALL_AEROSPIKE=\"${INSTALL_AEROSPIKE}\"\n#   Copy aerospike configration for remote debugging\nCOPY ./aerospike.ini /etc/php/5.6/cli/conf.d/aerospike.ini\nRUN if [ ${INSTALL_AEROSPIKE} = true ] ; then curl -L -o /tmp/aerospike-client-php.tar.gz \"https://github.com/aerospike/aerospike-client-php/archive/3.4.14.tar.gz\" \\\n && mkdir -p aerospike-client-php \\\n && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \\\n && (cd aerospike-client-php/src/aerospike \\\n && phpize \\\n && ./build.sh \\\n && make install ) \\\n && rm /tmp/aerospike-client-php.tar.gz ; fi\nRUN if [ ${INSTALL_AEROSPIKE} = false ] ; then rm /etc/php/5.6/cli/conf.d/aerospike.ini ; fi\n#  ####################################\n#   MySQL client\n#  ####################################\nUSER root\nARG INSTALL_MYSQL_CLIENT=false\nENV INSTALL_MYSQL_CLIENT=\"${INSTALL_MYSQL_CLIENT}\"\nRUN if [ ${INSTALL_MYSQL_CLIENT} = true ] ; then apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends mysql-client -y ) ; fi\n#  ####################################\n#   PostgreSQL client\n#  ####################################\nUSER root\nARG INSTALL_PGSQL_CLIENT=false\nENV INSTALL_PGSQL_CLIENT=\"${INSTALL_PGSQL_CLIENT}\"\nRUN if [ ${INSTALL_PGSQL_CLIENT} = true ] ; then apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends postgresql-client -y ) ; fi\n#\n#  --------------------------------------------------------------------------\n#   Optional Supervisord Configuration\n#  --------------------------------------------------------------------------\n#\n#   Modify the ./supervisor.conf file to match your App's requirements.\n#   Make sure you rebuild your container with every change.\n#\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   If you need to modify this image, feel free to do it right here.\n#\n#   -- Your awesome modifications go here -- #\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\n#   Clean up\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Set default work directory\nWORKDIR /etc/supervisor/conf.d/\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\", \"-n\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n# --------------------------------------------------------------------------\n#  Image Setup\n# --------------------------------------------------------------------------\n#\n#  To edit the 'workspace' base Image, visit its repository on Github\n#     https://github.com/Laradock/workspace\n#\n#  To change its version, see the available Tags on the Docker Hub:\n#     https://hub.docker.com/r/laradock/workspace/tags/\n#\n#  Note: Base Image name format {image-tag}-{php-version}\n#\nFROM laradock/workspace:1.8-56\nMAINTAINER Kim Hsiao <white.shopping@gmail.com>\n# ####################################\n#  Basic environment:\n# ####################################\n#  Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nARG PGID=1000\nENV PUID=\"${PUID}\"\nENV PGID=\"${PGID}\"\nRUN groupadd -g ${PGID} laradock \\\n && useradd -u ${PUID} -g laradock -m laradock \\\n && apt-get update -yqq\n# ####################################\n#  Set Timezone\n# ####################################\nARG TZ=UTC\nENV TZ=\"${TZ}\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n# ####################################\n#  Install Supervisor:\n# ####################################\nRUN apt-get upgrade -y \\\n && apt-get install supervisor -y \\\n && groupadd supervisor \\\n && usermod -a laradock -G supervisor\n#\n# --------------------------------------------------------------------------\n#  Mandatory Software's Installation\n# --------------------------------------------------------------------------\n#\n#  Mandatory Software's such as (\"php7.1-cli\", \"git\", \"vim\", ....) are\n#  installed on the base image 'laradock/workspace' image. If you want\n#  to add more Software's or remove existing one, you need to edit the\n#  base image (https://github.com/Laradock/workspace).\n#\n#\n# --------------------------------------------------------------------------\n#  Optional Software's Installation\n# --------------------------------------------------------------------------\n#\n#  Optional Software's will only be installed if you set them to `true`\n#  in the `docker-compose.yml` before the build.\n#  Example:\n#    - INSTALL_NODE=false\n#    - ...\n#\n# ####################################\n#  SOAP:\n# ####################################\nARG INSTALL_SOAP=false\nENV INSTALL_SOAP=\"${INSTALL_SOAP}\"\nRUN if [ ${INSTALL_SOAP} = true ] ; then add-apt-repository -y ppa:ondrej/php \\\n && apt-get update -yqq \\\n && apt-get install libxml2-dev php5.6-soap -y ; fi\n# ####################################\n#  PHP GMP\n# ####################################\nARG INSTALL_GMP=false\nENV INSTALL_GMP=\"${INSTALL_GMP}\"\nRUN if [ ${INSTALL_GMP} = true ] ; then apt-get install php-gmp -y ; fi\n# ####################################\n#  xDebug:\n# ####################################\nARG INSTALL_XDEBUG=false\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then apt-get install php5.6-xdebug -y --force-yes \\\n && sed -i 's/^;//g' /etc/php/5.6/cli/conf.d/20-xdebug.ini \\\n && echo \"alias phpunit='php -dzend_extension=xdebug.so /var/www/vendor/bin/phpunit'\" >> ~/.bashrc; fi\n#  ADD for REMOTE debugging\nCOPY ./xdebug.ini /etc/php/5.6/cli/conf.d/xdebug.ini\n# ####################################\n#  MongoDB:\n# ####################################\n#  Check if Mongo needs to be installed\nARG INSTALL_MONGO=false\nENV INSTALL_MONGO=\"${INSTALL_MONGO}\"\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && echo \"extension=mongodb.so\" >> /etc/php/5.6/cli/conf.d/30-mongodb.ini; fi\n# ####################################\n#  PHP Aerospike:\n# ####################################\nARG INSTALL_AEROSPIKE=true\nENV INSTALL_AEROSPIKE=\"${INSTALL_AEROSPIKE}\"\n#  Copy aerospike configration for remote debugging\nCOPY ./aerospike.ini /etc/php/5.6/cli/conf.d/aerospike.ini\nRUN if [ ${INSTALL_AEROSPIKE} = true ] ; then curl -L -o /tmp/aerospike-client-php.tar.gz \"https://github.com/aerospike/aerospike-client-php/archive/3.4.14.tar.gz\" \\\n && mkdir -p aerospike-client-php \\\n && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \\\n && (cd aerospike-client-php/src/aerospike \\\n && phpize \\\n && ./build.sh \\\n && make install ) \\\n && rm /tmp/aerospike-client-php.tar.gz ; fi\nRUN if [ ${INSTALL_AEROSPIKE} = false ] ; then rm /etc/php/5.6/cli/conf.d/aerospike.ini ; fi\n# ####################################\n#  MySQL client\n# ####################################\nUSER root\nARG INSTALL_MYSQL_CLIENT=false\nENV INSTALL_MYSQL_CLIENT=\"${INSTALL_MYSQL_CLIENT}\"\nRUN if [ ${INSTALL_MYSQL_CLIENT} = true ] ; then apt-get update \\\n && apt-get install mysql-client -y ; fi\n# ####################################\n#  PostgreSQL client\n# ####################################\nUSER root\nARG INSTALL_PGSQL_CLIENT=false\nENV INSTALL_PGSQL_CLIENT=\"${INSTALL_PGSQL_CLIENT}\"\nRUN if [ ${INSTALL_PGSQL_CLIENT} = true ] ; then apt-get update \\\n && apt-get install postgresql-client -y ; fi\n#\n# --------------------------------------------------------------------------\n#  Optional Supervisord Configuration\n# --------------------------------------------------------------------------\n#\n#  Modify the ./supervisor.conf file to match your App's requirements.\n#  Make sure you rebuild your container with every change.\n#\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#\n# --------------------------------------------------------------------------\n#  Optional Software's Installation\n# --------------------------------------------------------------------------\n#\n#  If you need to modify this image, feel free to do it right here.\n#\n#  -- Your awesome modifications go here -- #\n#\n# --------------------------------------------------------------------------\n#  Final Touch\n# --------------------------------------------------------------------------\n#\n#  Clean up\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Set default work directory\nWORKDIR /etc/supervisor/conf.d/\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\", \"-n\"]\n","injectedSmells":[],"originalDockerfileHash":"d0e405fdf6505205fa77a1cdd132d4cc","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\n#   To edit the 'workspace' base Image, visit its repository on Github\n#      https://github.com/Laradock/workspace\n#\n#   To change its version, see the available Tags on the Docker Hub:\n#      https://hub.docker.com/r/laradock/workspace/tags/\n#\n#   Note: Base Image name format {image-tag}-{php-version}\n#\nFROM laradock/workspace:1.8-56\nMAINTAINER Kim Hsiao <white.shopping@gmail.com>\n#  ####################################\n#   Basic environment:\n#  ####################################\n#   Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nARG PGID=1000\nENV PUID=\"${PUID}\"\nENV PGID=\"${PGID}\"\nRUN groupadd -g ${PGID} laradock \\\n && useradd -u ${PUID} -g laradock -m laradock \\\n && apt-get update -yqq\n#  ####################################\n#   Set Timezone\n#  ####################################\nARG TZ=UTC\nENV TZ=\"${TZ}\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#  ####################################\n#   Install Supervisor:\n#  ####################################\nRUN apt-get upgrade -y \\\n && apt-get install supervisor -y \\\n && groupadd supervisor \\\n && usermod -a laradock -G supervisor\n#\n#  --------------------------------------------------------------------------\n#   Mandatory Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Mandatory Software's such as (\"php7.1-cli\", \"git\", \"vim\", ....) are\n#   installed on the base image 'laradock/workspace' image. If you want\n#   to add more Software's or remove existing one, you need to edit the\n#   base image (https://github.com/Laradock/workspace).\n#\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Optional Software's will only be installed if you set them to `true`\n#   in the `docker-compose.yml` before the build.\n#   Example:\n#     - INSTALL_NODE=false\n#     - ...\n#\n#  ####################################\n#   SOAP:\n#  ####################################\nARG INSTALL_SOAP=false\nENV INSTALL_SOAP=\"${INSTALL_SOAP}\"\nRUN if [ ${INSTALL_SOAP} = true ] ; then add-apt-repository -y ppa:ondrej/php \\\n && apt-get update -yqq \\\n && apt-get install libxml2-dev php5.6-soap -y ; fi\n#  ####################################\n#   PHP GMP\n#  ####################################\nARG INSTALL_GMP=false\nENV INSTALL_GMP=\"${INSTALL_GMP}\"\nRUN if [ ${INSTALL_GMP} = true ] ; then apt-get install php-gmp -y ; fi\n#  ####################################\n#   xDebug:\n#  ####################################\nARG INSTALL_XDEBUG=false\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then apt-get install php5.6-xdebug -y --force-yes \\\n && sed -i 's/^;//g' /etc/php/5.6/cli/conf.d/20-xdebug.ini \\\n && echo \"alias phpunit='php -dzend_extension=xdebug.so /var/www/vendor/bin/phpunit'\" >> ~/.bashrc; fi\n#   ADD for REMOTE debugging\nCOPY ./xdebug.ini /etc/php/5.6/cli/conf.d/xdebug.ini\n#  ####################################\n#   MongoDB:\n#  ####################################\n#   Check if Mongo needs to be installed\nARG INSTALL_MONGO=false\nENV INSTALL_MONGO=\"${INSTALL_MONGO}\"\nRUN if [ ${INSTALL_MONGO} = true ] ; then pecl install mongodb \\\n && echo \"extension=mongodb.so\" >> /etc/php/5.6/cli/conf.d/30-mongodb.ini; fi\n#  ####################################\n#   PHP Aerospike:\n#  ####################################\nARG INSTALL_AEROSPIKE=true\nENV INSTALL_AEROSPIKE=\"${INSTALL_AEROSPIKE}\"\n#   Copy aerospike configration for remote debugging\nCOPY ./aerospike.ini /etc/php/5.6/cli/conf.d/aerospike.ini\nRUN if [ ${INSTALL_AEROSPIKE} = true ] ; then curl -L -o /tmp/aerospike-client-php.tar.gz \"https://github.com/aerospike/aerospike-client-php/archive/3.4.14.tar.gz\" \\\n && mkdir -p aerospike-client-php \\\n && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \\\n && (cd aerospike-client-php/src/aerospike \\\n && phpize \\\n && ./build.sh \\\n && make install ) \\\n && rm /tmp/aerospike-client-php.tar.gz ; fi\nRUN if [ ${INSTALL_AEROSPIKE} = false ] ; then rm /etc/php/5.6/cli/conf.d/aerospike.ini ; fi\n#  ####################################\n#   MySQL client\n#  ####################################\nUSER root\nARG INSTALL_MYSQL_CLIENT=false\nENV INSTALL_MYSQL_CLIENT=\"${INSTALL_MYSQL_CLIENT}\"\nRUN if [ ${INSTALL_MYSQL_CLIENT} = true ] ; then apt-get update \\\n && apt-get install mysql-client -y ; fi\n#  ####################################\n#   PostgreSQL client\n#  ####################################\nUSER root\nARG INSTALL_PGSQL_CLIENT=false\nENV INSTALL_PGSQL_CLIENT=\"${INSTALL_PGSQL_CLIENT}\"\nRUN if [ ${INSTALL_PGSQL_CLIENT} = true ] ; then apt-get update \\\n && apt-get install postgresql-client -y ; fi\n#\n#  --------------------------------------------------------------------------\n#   Optional Supervisord Configuration\n#  --------------------------------------------------------------------------\n#\n#   Modify the ./supervisor.conf file to match your App's requirements.\n#   Make sure you rebuild your container with every change.\n#\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   If you need to modify this image, feel free to do it right here.\n#\n#   -- Your awesome modifications go here -- #\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\n#   Clean up\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Set default work directory\nWORKDIR /etc/supervisor/conf.d/\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\", \"-n\"]\n","originalDockerfileUglifiedHash":"1c0d14435c729dfe577bdcd1ff651c87","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/867013279765126950b8f00c08e6edb4bd647374.dockerfile"}