{"seed":4110531152,"processedDockerfileHash":"d3795d80df388d5c0d773db0160ee1ce","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM jacknlliu/ubuntu-init:16.04\nLABEL maintainer=\"Jack Liu <jacknlliu@gmail.com>\"\n#   setup environment\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"en_US.UTF-8\"\n#   define ros distribution version\nENV ROS_DISTRO=\"kinetic\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-utils apt-transport-https aptitude locales -y -q \\\n && locale-gen en_US.UTF-8\n#   setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list \\\n && apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n && aptitude update -y -q \\\n && aptitude install -y -q -R ros-kinetic-desktop python-rosinstall ninja-build python3-pip python3-setuptools python3-defusedxml python3-dev ros-kinetic-rosbridge-library ros-kinetic-rosbridge-server ros-kinetic-rosbridge-suite\n#   update gazebo7 to gazebo9\nRUN echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu xenial main\" > /etc/apt/sources.list.d/gazebo-latest.list \\\n && curl http://packages.osrfoundation.org/gazebo.key | apt-key add - \\\n && aptitude update -y -q \\\n && aptitude remove -y -q gazebo7 ; aptitude install -y -q -R gazebo9\nRUN aptitude install -y -q -R ros-kinetic-gazebo9-ros-control ros-kinetic-gazebo9-ros-pkgs ros-kinetic-tf2-geometry-msgs ros-kinetic-tf2-sensor-msgs\n#   install ros python3 support\nRUN pip3 install --upgrade pip \\\n && pip3 install --no-cache-dir catkin-tools rospkg ws4py transforms3d trollius\n#   install dependecies for ros genmsg\nRUN pip install empy==3.3.4\n#   install additional system packages and ros packages\n#   install additional build tool\nRUN aptitude install -y -q -R build-essential gdb \\\n && aptitude install -y -q -R mesa-common-dev libglu1-mesa-dev libfontconfig1 qt5-default qtcreator qtdeclarative5-qtquick2-plugin \\\n && aptitude install -y -q -R libgl1-mesa-glx libgl1-mesa-dri \\\n && aptitude install -y -q -R mesa-vdpau-drivers xserver-xorg-video-ati mesa-utils module-init-tools\n#   install RoboWare\nRUN aptitude install -y -q -R wget python-pip pylint clang libxss1 libnss3 libnotify4 libxtst6 ~nlibgconf-2 \\\n && export ROBOWAREVERSION=\"1.1.0-1514335284\" \\\n && wget https://github.com/tonyrobotics/RoboWare/raw/master/Studio/roboware-studio_${ROBOWAREVERSION}_amd64.deb -O roboware_amd64.deb \\\n && chmod a+x roboware_amd64.deb \\\n && dpkg -i roboware_amd64.deb \\\n && apt-get install --no-install-recommends -y -f \\\n && rm -f roboware_amd64.deb\n#   install essential tools, ssh sever, sudo\nRUN aptitude update -y -q \\\n && aptitude install -y -q -R bash-completion wget vim git iputils-ping iproute2 netcat tmux terminator xauth openssh-server sudo pcmanfm\n#   install ros related components\nRUN aptitude install -y -q -R ros-kinetic-ros-controllers ros-kinetic-rqt-controller-manager ros-kinetic-moveit ros-kinetic-orocos-kdl ros-kinetic-orocos-kinematics-dynamics ros-kinetic-pid \\\n && aptitude install -y -q -R libignition-math2-dev ros-kinetic-barrett-hand \\\n && aptitude install -y -q -R libusb-1.0-0 libusb-1.0-0-dev freeglut3 freeglut3-dev \\\n && aptitude install -y -q -R ros-kinetic-calibration-estimation ros-kinetic-kdl-parser-py \\\n && aptitude install -y -q -R ros-kinetic-katana-moveit-ikfast-plugin ros-kinetic-trac-ik-lib ros-kinetic-trac-ik-kinematics-plugin \\\n && aptitude install -y -q -R ros-kinetic-video-stream-opencv ros-kinetic-find-object-2d libcgal-dev libcgal-qt5-dev\nRUN mkdir -p /opt/scripts/container/\nCOPY ./scripts/* /opt/scripts/container/\n#   copy entrypoint file\nRUN chmod -R a+rx /opt/scripts/ \\\n && cp /opt/scripts/container/containerinit.sh /etc/my_init.d/ \\\n && chmod u+x /etc/my_init.d/containerinit.sh\nRUN /opt/scripts/container/quick-fix.sh\n#   aptitude clean\nRUN apt-get autoclean \\\n && apt-get clean all \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* /var/tmp/*\n#   config sshd\nRUN mkdir -p /var/run/sshd \\\n && echo \"X11UseLocalhost no\" >> /etc/ssh/sshd_config \\\n && rm -f /etc/service/sshd/down \\\n && /etc/my_init.d/00_regen_ssh_host_keys.sh\n#   set user ros and sudo\nRUN adduser --gecos \"ROS User\" --home /home/ros --disabled-password ros \\\n && usermod -a -G dialout ros \\\n && echo \"ros ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/99_aptget\n#   switch to user ros, but the HOME is still /, not /home/ros\nUSER ros\n#   setup ros env\nRUN sudo rosdep init \\\n && rosdep update \\\n && echo \"source \"/opt/ros/$ROS_DISTRO/setup.bash\"\" >> /home/ros/.bashrc\n#   configure Qt\nRUN mkdir -p /home/ros/.config/QtProject\nUSER root\nCOPY ./config/QtCreator.ini /home/ros/.config/QtProject/\nRUN chown -R ros:ros /home/ros/.config/QtProject/\n#   config gazebo volume\nRUN mkdir -p /home/ros/.gazebo/models \\\n && chown -R ros:ros /home/ros/.gazebo\n#   share this volume with other containers from this image\nVOLUME [\"/home/ros/.gazebo/models\"]\n#   cd /home/ros default\nWORKDIR /home/ros\n#   must run /sbin/my_init with root user\nENTRYPOINT [\"/sbin/my_init\", \"--quiet\", \"--\", \"setuser\", \"ros\", \"/opt/scripts/container/ros_entrypoint.sh\"]\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM jacknlliu/ubuntu-init:16.04\nLABEL maintainer=\"Jack Liu <jacknlliu@gmail.com>\"\n#  setup environment\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"en_US.UTF-8\"\n#  define ros distribution version\nENV ROS_DISTRO=\"kinetic\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-utils apt-transport-https aptitude locales -y -q \\\n && locale-gen en_US.UTF-8\n#  setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list \\\n && apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n && aptitude update -y -q \\\n && aptitude install -y -q -R ros-kinetic-desktop python-rosinstall ninja-build python3-pip python3-setuptools python3-defusedxml python3-dev ros-kinetic-rosbridge-library ros-kinetic-rosbridge-server ros-kinetic-rosbridge-suite\n#  update gazebo7 to gazebo9\nRUN echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu xenial main\" > /etc/apt/sources.list.d/gazebo-latest.list \\\n && curl http://packages.osrfoundation.org/gazebo.key | apt-key add - \\\n && aptitude update -y -q \\\n && aptitude remove -y -q gazebo7 ; aptitude install -y -q -R gazebo9\nRUN aptitude install -y -q -R ros-kinetic-gazebo9-ros-control ros-kinetic-gazebo9-ros-pkgs ros-kinetic-tf2-geometry-msgs ros-kinetic-tf2-sensor-msgs\n#  install ros python3 support\nRUN pip3 install --upgrade pip \\\n && pip3 install --no-cache-dir catkin-tools rospkg ws4py transforms3d trollius\n#  install dependecies for ros genmsg\nRUN pip install empy\n#  install additional system packages and ros packages\n#  install additional build tool\nRUN aptitude install -y -q -R build-essential gdb \\\n && aptitude install -y -q -R mesa-common-dev libglu1-mesa-dev libfontconfig1 qt5-default qtcreator qtdeclarative5-qtquick2-plugin \\\n && aptitude install -y -q -R libgl1-mesa-glx libgl1-mesa-dri \\\n && aptitude install -y -q -R mesa-vdpau-drivers xserver-xorg-video-ati mesa-utils module-init-tools\n#  install RoboWare\nRUN aptitude install -y -q -R wget python-pip pylint clang libxss1 libnss3 libnotify4 libxtst6 ~nlibgconf-2 \\\n && export ROBOWAREVERSION=\"1.1.0-1514335284\" \\\n && wget https://github.com/tonyrobotics/RoboWare/raw/master/Studio/roboware-studio_${ROBOWAREVERSION}_amd64.deb -O roboware_amd64.deb \\\n && chmod a+x roboware_amd64.deb \\\n && dpkg -i roboware_amd64.deb \\\n && apt-get install --no-install-recommends -y -f \\\n && rm -f roboware_amd64.deb\n#  install essential tools, ssh sever, sudo\nRUN aptitude update -y -q \\\n && aptitude install -y -q -R bash-completion wget vim git iputils-ping iproute2 netcat tmux terminator xauth openssh-server sudo pcmanfm\n#  install ros related components\nRUN aptitude install -y -q -R ros-kinetic-ros-controllers ros-kinetic-rqt-controller-manager ros-kinetic-moveit ros-kinetic-orocos-kdl ros-kinetic-orocos-kinematics-dynamics ros-kinetic-pid \\\n && aptitude install -y -q -R libignition-math2-dev ros-kinetic-barrett-hand \\\n && aptitude install -y -q -R libusb-1.0-0 libusb-1.0-0-dev freeglut3 freeglut3-dev \\\n && aptitude install -y -q -R ros-kinetic-calibration-estimation ros-kinetic-kdl-parser-py \\\n && aptitude install -y -q -R ros-kinetic-katana-moveit-ikfast-plugin ros-kinetic-trac-ik-lib ros-kinetic-trac-ik-kinematics-plugin \\\n && aptitude install -y -q -R ros-kinetic-video-stream-opencv ros-kinetic-find-object-2d libcgal-dev libcgal-qt5-dev\nRUN mkdir -p /opt/scripts/container/\nCOPY ./scripts/* /opt/scripts/container/\n#  copy entrypoint file\nRUN chmod -R a+rx /opt/scripts/ \\\n && cp /opt/scripts/container/containerinit.sh /etc/my_init.d/ \\\n && chmod u+x /etc/my_init.d/containerinit.sh\nRUN /opt/scripts/container/quick-fix.sh\n#  aptitude clean\nRUN apt-get autoclean \\\n && apt-get clean all \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* /var/tmp/*\n#  config sshd\nRUN mkdir -p /var/run/sshd \\\n && echo \"X11UseLocalhost no\" >> /etc/ssh/sshd_config \\\n && rm -f /etc/service/sshd/down \\\n && /etc/my_init.d/00_regen_ssh_host_keys.sh\n#  set user ros and sudo\nRUN adduser --gecos \"ROS User\" --home /home/ros --disabled-password ros \\\n && usermod -a -G dialout ros \\\n && echo \"ros ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/99_aptget\n#  switch to user ros, but the HOME is still /, not /home/ros\nUSER ros\n#  setup ros env\nRUN sudo rosdep init \\\n && rosdep update \\\n && echo \"source \"/opt/ros/$ROS_DISTRO/setup.bash\"\" >> /home/ros/.bashrc\n#  configure Qt\nRUN mkdir -p /home/ros/.config/QtProject\nUSER root\nCOPY ./config/QtCreator.ini /home/ros/.config/QtProject/\nRUN chown -R ros:ros /home/ros/.config/QtProject/\n#  config gazebo volume\nRUN mkdir -p /home/ros/.gazebo/models \\\n && chown -R ros:ros /home/ros/.gazebo\n#  share this volume with other containers from this image\nVOLUME [\"/home/ros/.gazebo/models\"]\n#  cd /home/ros default\nWORKDIR /home/ros\n#  must run /sbin/my_init with root user\nENTRYPOINT [\"/sbin/my_init\", \"--quiet\", \"--\", \"setuser\", \"ros\", \"/opt/scripts/container/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"c74f056849dc7e2394c046edf501ba50","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM jacknlliu/ubuntu-init:16.04\nLABEL maintainer=\"Jack Liu <jacknlliu@gmail.com>\"\n#   setup environment\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"en_US.UTF-8\"\n#   define ros distribution version\nENV ROS_DISTRO=\"kinetic\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-utils apt-transport-https aptitude locales -y -q \\\n && locale-gen en_US.UTF-8\n#   setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list \\\n && apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n && aptitude update -y -q \\\n && aptitude install -y -q -R ros-kinetic-desktop python-rosinstall ninja-build python3-pip python3-setuptools python3-defusedxml python3-dev ros-kinetic-rosbridge-library ros-kinetic-rosbridge-server ros-kinetic-rosbridge-suite\n#   update gazebo7 to gazebo9\nRUN echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu xenial main\" > /etc/apt/sources.list.d/gazebo-latest.list \\\n && curl http://packages.osrfoundation.org/gazebo.key | apt-key add - \\\n && aptitude update -y -q \\\n && aptitude remove -y -q gazebo7 ; aptitude install -y -q -R gazebo9\nRUN aptitude install -y -q -R ros-kinetic-gazebo9-ros-control ros-kinetic-gazebo9-ros-pkgs ros-kinetic-tf2-geometry-msgs ros-kinetic-tf2-sensor-msgs\n#   install ros python3 support\nRUN pip3 install --upgrade pip \\\n && pip3 install --no-cache-dir catkin-tools rospkg ws4py transforms3d trollius\n#   install dependecies for ros genmsg\nRUN pip install empy\n#   install additional system packages and ros packages\n#   install additional build tool\nRUN aptitude install -y -q -R build-essential gdb \\\n && aptitude install -y -q -R mesa-common-dev libglu1-mesa-dev libfontconfig1 qt5-default qtcreator qtdeclarative5-qtquick2-plugin \\\n && aptitude install -y -q -R libgl1-mesa-glx libgl1-mesa-dri \\\n && aptitude install -y -q -R mesa-vdpau-drivers xserver-xorg-video-ati mesa-utils module-init-tools\n#   install RoboWare\nRUN aptitude install -y -q -R wget python-pip pylint clang libxss1 libnss3 libnotify4 libxtst6 ~nlibgconf-2 \\\n && export ROBOWAREVERSION=\"1.1.0-1514335284\" \\\n && wget https://github.com/tonyrobotics/RoboWare/raw/master/Studio/roboware-studio_${ROBOWAREVERSION}_amd64.deb -O roboware_amd64.deb \\\n && chmod a+x roboware_amd64.deb \\\n && dpkg -i roboware_amd64.deb \\\n && apt-get install --no-install-recommends -y -f \\\n && rm -f roboware_amd64.deb\n#   install essential tools, ssh sever, sudo\nRUN aptitude update -y -q \\\n && aptitude install -y -q -R bash-completion wget vim git iputils-ping iproute2 netcat tmux terminator xauth openssh-server sudo pcmanfm\n#   install ros related components\nRUN aptitude install -y -q -R ros-kinetic-ros-controllers ros-kinetic-rqt-controller-manager ros-kinetic-moveit ros-kinetic-orocos-kdl ros-kinetic-orocos-kinematics-dynamics ros-kinetic-pid \\\n && aptitude install -y -q -R libignition-math2-dev ros-kinetic-barrett-hand \\\n && aptitude install -y -q -R libusb-1.0-0 libusb-1.0-0-dev freeglut3 freeglut3-dev \\\n && aptitude install -y -q -R ros-kinetic-calibration-estimation ros-kinetic-kdl-parser-py \\\n && aptitude install -y -q -R ros-kinetic-katana-moveit-ikfast-plugin ros-kinetic-trac-ik-lib ros-kinetic-trac-ik-kinematics-plugin \\\n && aptitude install -y -q -R ros-kinetic-video-stream-opencv ros-kinetic-find-object-2d libcgal-dev libcgal-qt5-dev\nRUN mkdir -p /opt/scripts/container/\nCOPY ./scripts/* /opt/scripts/container/\n#   copy entrypoint file\nRUN chmod -R a+rx /opt/scripts/ \\\n && cp /opt/scripts/container/containerinit.sh /etc/my_init.d/ \\\n && chmod u+x /etc/my_init.d/containerinit.sh\nRUN /opt/scripts/container/quick-fix.sh\n#   aptitude clean\nRUN apt-get autoclean \\\n && apt-get clean all \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* /var/tmp/*\n#   config sshd\nRUN mkdir -p /var/run/sshd \\\n && echo \"X11UseLocalhost no\" >> /etc/ssh/sshd_config \\\n && rm -f /etc/service/sshd/down \\\n && /etc/my_init.d/00_regen_ssh_host_keys.sh\n#   set user ros and sudo\nRUN adduser --gecos \"ROS User\" --home /home/ros --disabled-password ros \\\n && usermod -a -G dialout ros \\\n && echo \"ros ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/99_aptget\n#   switch to user ros, but the HOME is still /, not /home/ros\nUSER ros\n#   setup ros env\nRUN sudo rosdep init \\\n && rosdep update \\\n && echo \"source \"/opt/ros/$ROS_DISTRO/setup.bash\"\" >> /home/ros/.bashrc\n#   configure Qt\nRUN mkdir -p /home/ros/.config/QtProject\nUSER root\nCOPY ./config/QtCreator.ini /home/ros/.config/QtProject/\nRUN chown -R ros:ros /home/ros/.config/QtProject/\n#   config gazebo volume\nRUN mkdir -p /home/ros/.gazebo/models \\\n && chown -R ros:ros /home/ros/.gazebo\n#   share this volume with other containers from this image\nVOLUME [\"/home/ros/.gazebo/models\"]\n#   cd /home/ros default\nWORKDIR /home/ros\n#   must run /sbin/my_init with root user\nENTRYPOINT [\"/sbin/my_init\", \"--quiet\", \"--\", \"setuser\", \"ros\", \"/opt/scripts/container/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"a1e1fa19bea1d80cc44ba1a128d91894","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d4a4f6546bdb0dee4eb11be16ee98dd5c19099bb.dockerfile"}