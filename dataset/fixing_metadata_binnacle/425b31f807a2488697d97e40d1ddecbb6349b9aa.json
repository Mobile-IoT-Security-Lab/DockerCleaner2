{"seed":1888655001,"processedDockerfileHash":"32a24d6ee906ed1a90917046020ab3e9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM runnable/base:1.0.0\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2-bin apache2.2-common -y \\\n && rm -rf /var/lib/apt/lists/*\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\n#   setup directories and permissions\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" /var/www/html; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done\n#   Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event \\\n && a2enmod mpm_prefork\n#   logs should go to stdout / stderr\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n#   PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo '<FilesMatch \\.php$>' ;echo '\\tSetHandler application/x-httpd-php' ;echo '</FilesMatch>' ;echo ;echo 'DirectoryIndex disabled' ;echo 'DirectoryIndex index.php index.html' ;echo ;echo '<Directory /var/www/>' ;echo '\\tOptions -Indexes' ;echo '\\tAllowOverride All' ;echo '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n && a2enconf docker-php\nENV PHP_EXTRA_BUILD_DEPS=\"apache2-dev\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2\"\nENV GPG_KEYS=\"0B96609E270F565C13292B24C13C70B87267B52D 0BD78B5F97500D450838F95DFE857D9A90D90EC1 F38252826ACD957EF380D39F2F7956BC5DA04B5D\"\nENV PHP_VERSION=\"5.5.37\"\nENV PHP_FILENAME=\"php-5.5.37.tar.xz\"\nENV PHP_SHA256=\"c322444fdf6d3ba26aa67d67ee32d1e815a877f35831351c83763431a80e3612\"\nRUN set -xe \\\n && cd /usr/src/ \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\" -o php.tar.xz \\\n && echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && gpg --batch --verify php.tar.xz.asc php.tar.xz \\\n && rm -r \"$GNUPGHOME\"\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" $PHP_EXTRA_CONFIGURE_ARGS --disable-cgi --enable-mysqlnd --enable-mbstring --with-curl --with-libedit --with-openssl --with-zlib \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps \\\n && docker-php-source delete\nCOPY docker-php-ext-* /usr/local/bin/\nCOPY apache2-foreground /usr/local/bin/\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM runnable/base:1.0.0\n#  persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2-bin apache2.2-common -y \\\n && rm -rf /var/lib/apt/lists/*\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\n#  setup directories and permissions\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" /var/www/html; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done\n#  Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event \\\n && a2enmod mpm_prefork\n#  logs should go to stdout / stderr\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n#  PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo '<FilesMatch \\.php$>' ;echo '\\tSetHandler application/x-httpd-php' ;echo '</FilesMatch>' ;echo ;echo 'DirectoryIndex disabled' ;echo 'DirectoryIndex index.php index.html' ;echo ;echo '<Directory /var/www/>' ;echo '\\tOptions -Indexes' ;echo '\\tAllowOverride All' ;echo '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n && a2enconf docker-php\nENV PHP_EXTRA_BUILD_DEPS=\"apache2-dev\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2\"\nENV GPG_KEYS=\"0B96609E270F565C13292B24C13C70B87267B52D 0BD78B5F97500D450838F95DFE857D9A90D90EC1 F38252826ACD957EF380D39F2F7956BC5DA04B5D\"\nENV PHP_VERSION=\"5.5.37\"\nENV PHP_FILENAME=\"php-5.5.37.tar.xz\"\nENV PHP_SHA256=\"c322444fdf6d3ba26aa67d67ee32d1e815a877f35831351c83763431a80e3612\"\nRUN set -xe \\\n && cd /usr/src/ \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\" -o php.tar.xz \\\n && echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && gpg --batch --verify php.tar.xz.asc php.tar.xz \\\n && rm -r \"$GNUPGHOME\"\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" $PHP_EXTRA_CONFIGURE_ARGS --disable-cgi --enable-mysqlnd --enable-mbstring --with-curl --with-libedit --with-openssl --with-zlib \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps \\\n && docker-php-source delete\nCOPY docker-php-ext-* /usr/local/bin/\nCOPY apache2-foreground /usr/local/bin/\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n","injectedSmells":[],"originalDockerfileHash":"dc4c57c1587b28e74c07e02770929699","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM runnable/base:1.0.0\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2-bin apache2.2-common -y \\\n && rm -rf /var/lib/apt/lists/*\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\n#   setup directories and permissions\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" /var/www/html; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done\n#   Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event \\\n && a2enmod mpm_prefork\n#   logs should go to stdout / stderr\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n#   PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo '<FilesMatch \\.php$>' ;echo '\\tSetHandler application/x-httpd-php' ;echo '</FilesMatch>' ;echo ;echo 'DirectoryIndex disabled' ;echo 'DirectoryIndex index.php index.html' ;echo ;echo '<Directory /var/www/>' ;echo '\\tOptions -Indexes' ;echo '\\tAllowOverride All' ;echo '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n && a2enconf docker-php\nENV PHP_EXTRA_BUILD_DEPS=\"apache2-dev\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2\"\nENV GPG_KEYS=\"0B96609E270F565C13292B24C13C70B87267B52D 0BD78B5F97500D450838F95DFE857D9A90D90EC1 F38252826ACD957EF380D39F2F7956BC5DA04B5D\"\nENV PHP_VERSION=\"5.5.37\"\nENV PHP_FILENAME=\"php-5.5.37.tar.xz\"\nENV PHP_SHA256=\"c322444fdf6d3ba26aa67d67ee32d1e815a877f35831351c83763431a80e3612\"\nRUN set -xe \\\n && cd /usr/src/ \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\" -o php.tar.xz \\\n && echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && gpg --batch --verify php.tar.xz.asc php.tar.xz \\\n && rm -r \"$GNUPGHOME\"\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" $PHP_EXTRA_CONFIGURE_ARGS --disable-cgi --enable-mysqlnd --enable-mbstring --with-curl --with-libedit --with-openssl --with-zlib \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps \\\n && docker-php-source delete\nCOPY docker-php-ext-* /usr/local/bin/\nCOPY apache2-foreground /usr/local/bin/\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n","originalDockerfileUglifiedHash":"9a373114a53fe5184de75e21739b35db","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/425b31f807a2488697d97e40d1ddecbb6349b9aa.dockerfile"}