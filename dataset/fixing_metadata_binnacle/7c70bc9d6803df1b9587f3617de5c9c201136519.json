{"seed":962244239,"processedDockerfileHash":"f9f76b2e6e01ef3571b0553df2080932","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  BUILD_PUSH=hub,quay\nFROM bigm/base-deb-tools\n#   VCS\nRUN /xt/tools/_apt_install git-flow subversion\n#   interact with S3 bucket\nRUN /xt/tools/_apt_install python-magic s3cmd\n#   Amazon CLI\nRUN /xt/tools/_apt_install python-pip jq\nRUN pip install awscli==1.27.114\n#   nodej stuff\nRUN /xt/tools/_apt_install nodejs nodejs-legacy npm\nRUN npm install gulp@4.0.2 bower@1.8.14 yo@4.3.1 --global\n#   php stuff\nRUN /xt/tools/_apt_install php5-cli php-pear pear-channels php5-dev build-essential php5-curl\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   ruby stuff\nRUN /xt/tools/_apt_install ruby-full rubygems-integration\nRUN gem install sass --version 3.7.4\n#   for better ssh tunnel creation\nRUN /xt/tools/_apt_install autossh\n#  = oracle_jdk7\n#   install Oracle Java\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo oracle-java7-installer shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && /xt/tools/_ppa_install ppa:webupd8team/java ca-certificates oracle-java7-installer \\\n && rm -rf /var/cache/oracle-jdk7-installer\n#   set JAVA_HOME\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-oracle\"\n#  = .oracle_jdk7\n#  = liquibase\nRUN /xt/tools/_apt_install mysql-client libmysql-java\nENV VERSION_LIQUIBASE=\"3.4.2\"\nRUN /xt/tools/_download /tmp/liquibase.zip https://github.com/liquibase/liquibase/releases/download/liquibase-parent-${VERSION_LIQUIBASE}/liquibase-${VERSION_LIQUIBASE}-bin.zip \\\n && unzip -q -d /opt/liquibase /tmp/liquibase.zip \\\n && rm /tmp/liquibase.zip \\\n && ln -s /usr/share/java/mysql-connector-java.jar /opt/liquibase/lib/mysql-connector-java.jar\n#  = .liquibase\n#   fix problems with composer cache\nENV COMPOSER_CACHE_DIR=\"/dev/null\"\n#   final settings\nENV PATH=\"$PATH:/xt/dev/bin\"\nRUN echo \"set-option -g default-shell /bin/zsh\" > /root/.tmux.conf\nRUN echo \"export TERM=xterm-color\" >> /root/.bashrc\nWORKDIR /prj\nCMD [\"zsh\"]\n#   some more php modules\nRUN /xt/tools/_apt_install php5-apcu php5-mcrypt php5-gd php5-mysql \\\n && php5enmod mcrypt\nRUN /xt/tools/_apt_install translate-toolkit\nRUN pear install SQL_Parser-0.6.0\nRUN /xt/tools/_apt_install libyaml-dev \\\n && yes \"\" | pecl install yaml \\\n && echo \"extension=yaml.so\" > /etc/php5/mods-available/yaml.ini \\\n && php5enmod yaml\n#   fix sass-globbing version\nRUN gem install sass-globbing --version 1.1.0 \\\n && gem uninstall sass-globbing -v 1.1.1\n#   rsync client needed for deployment\nRUN /xt/tools/_apt_install rsync\nCOPY ci.sh /xt/ci.sh\nENV DOWNLOAD_URL=\"\\\"\nENV DOWNLOAD_RSYNC=\"\\\"\nENV UPLOAD_RSYNC=\"\\\"\n#  ## email management tools\nRUN /xt/tools/_apt_install fetchmail procmail \\\n && PERL_MM_USE_DEFAULT=1 cpan -if Mail::DeliveryStatus::BounceParser\n#  ## enable sending emails from inside of this docker\nRUN /xt/tools/_enable_ssmtp \\\n && /xt/tools/_apt_install heirloom-mailx\n#  ## the new mongodb extension\nRUN /xt/tools/_apt_install libcurl4-openssl-dev libpcre3-dev \\\n && yes \"\" | pecl install mongodb \\\n && echo \"extension=mongodb.so\" > /etc/php5/mods-available/mongo.ini \\\n && php5enmod mongo\n#  ## fix https://github.com/npm/npm/issues/12196\n#  RUN npm install -g npm@latest-2\n#  ## library upgrade checking tools\nRUN npm install bower-update@0.2.0 npm-check-updates@16.10.8 salita@0.12.3 -g\n#  ## latest composer \nRUN composer self-update\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# BUILD_PUSH=hub,quay\nFROM bigm/base-deb-tools\n#  VCS\nRUN /xt/tools/_apt_install git-flow subversion\n#  interact with S3 bucket\nRUN /xt/tools/_apt_install python-magic s3cmd\n#  Amazon CLI\nRUN /xt/tools/_apt_install python-pip jq\nRUN pip install awscli\n#  nodej stuff\nRUN /xt/tools/_apt_install nodejs nodejs-legacy npm\nRUN npm install gulp bower yo --global\n#  php stuff\nRUN /xt/tools/_apt_install php5-cli php-pear pear-channels php5-dev build-essential php5-curl\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#  ruby stuff\nRUN /xt/tools/_apt_install ruby-full rubygems-integration\nRUN gem install sass\n#  for better ssh tunnel creation\nRUN /xt/tools/_apt_install autossh\n# = oracle_jdk7\n#  install Oracle Java\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo oracle-java7-installer shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && /xt/tools/_ppa_install ppa:webupd8team/java ca-certificates oracle-java7-installer \\\n && rm -rf /var/cache/oracle-jdk7-installer\n#  set JAVA_HOME\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-oracle\"\n# = .oracle_jdk7\n# = liquibase\nRUN /xt/tools/_apt_install mysql-client libmysql-java\nENV VERSION_LIQUIBASE=\"3.4.2\"\nRUN /xt/tools/_download /tmp/liquibase.zip https://github.com/liquibase/liquibase/releases/download/liquibase-parent-${VERSION_LIQUIBASE}/liquibase-${VERSION_LIQUIBASE}-bin.zip \\\n && unzip -q -d /opt/liquibase /tmp/liquibase.zip \\\n && rm /tmp/liquibase.zip \\\n && ln -s /usr/share/java/mysql-connector-java.jar /opt/liquibase/lib/mysql-connector-java.jar\n# = .liquibase\n#  fix problems with composer cache\nENV COMPOSER_CACHE_DIR=\"/dev/null\"\n#  final settings\nENV PATH=\"$PATH:/xt/dev/bin\"\nRUN echo \"set-option -g default-shell /bin/zsh\" > /root/.tmux.conf\nRUN echo \"export TERM=xterm-color\" >> /root/.bashrc\nWORKDIR /prj\nCMD [\"zsh\"]\n#  some more php modules\nRUN /xt/tools/_apt_install php5-apcu php5-mcrypt php5-gd php5-mysql \\\n && php5enmod mcrypt\nRUN /xt/tools/_apt_install translate-toolkit\nRUN pear install SQL_Parser-0.6.0\nRUN /xt/tools/_apt_install libyaml-dev \\\n && yes \"\" | pecl install yaml \\\n && echo \"extension=yaml.so\" > /etc/php5/mods-available/yaml.ini \\\n && php5enmod yaml\n#  fix sass-globbing version\nRUN gem install sass-globbing --version 1.1.0 \\\n && gem uninstall sass-globbing -v 1.1.1\n#  rsync client needed for deployment\nRUN /xt/tools/_apt_install rsync\nADD ci.sh /xt/ci.sh\nENV DOWNLOAD_URL=\"\"\\\"\"\nENV DOWNLOAD_RSYNC=\"\"\\\"\"\nENV UPLOAD_RSYNC=\"\"\\\"\"\n# ## email management tools\nRUN /xt/tools/_apt_install fetchmail procmail \\\n && PERL_MM_USE_DEFAULT=1 cpan -if Mail::DeliveryStatus::BounceParser\n# ## enable sending emails from inside of this docker\nRUN /xt/tools/_enable_ssmtp \\\n && /xt/tools/_apt_install heirloom-mailx\n# ## the new mongodb extension\nRUN /xt/tools/_apt_install libcurl4-openssl-dev libpcre3-dev \\\n && yes \"\" | pecl install mongodb \\\n && echo \"extension=mongodb.so\" > /etc/php5/mods-available/mongo.ini \\\n && php5enmod mongo\n# ## fix https://github.com/npm/npm/issues/12196\n# RUN npm install -g npm@latest-2\n# ## library upgrade checking tools\nRUN npm install bower-update npm-check-updates salita -g\n# ## latest composer \nRUN composer self-update\n","injectedSmells":[],"originalDockerfileHash":"818fb75f5d77ec0d5fb5e019395aae8f","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  BUILD_PUSH=hub,quay\nFROM bigm/base-deb-tools\n#   VCS\nRUN /xt/tools/_apt_install git-flow subversion\n#   interact with S3 bucket\nRUN /xt/tools/_apt_install python-magic s3cmd\n#   Amazon CLI\nRUN /xt/tools/_apt_install python-pip jq\nRUN pip install awscli\n#   nodej stuff\nRUN /xt/tools/_apt_install nodejs nodejs-legacy npm\nRUN npm install gulp bower yo --global\n#   php stuff\nRUN /xt/tools/_apt_install php5-cli php-pear pear-channels php5-dev build-essential php5-curl\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   ruby stuff\nRUN /xt/tools/_apt_install ruby-full rubygems-integration\nRUN gem install sass\n#   for better ssh tunnel creation\nRUN /xt/tools/_apt_install autossh\n#  = oracle_jdk7\n#   install Oracle Java\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo oracle-java7-installer shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && /xt/tools/_ppa_install ppa:webupd8team/java ca-certificates oracle-java7-installer \\\n && rm -rf /var/cache/oracle-jdk7-installer\n#   set JAVA_HOME\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-oracle\"\n#  = .oracle_jdk7\n#  = liquibase\nRUN /xt/tools/_apt_install mysql-client libmysql-java\nENV VERSION_LIQUIBASE=\"3.4.2\"\nRUN /xt/tools/_download /tmp/liquibase.zip https://github.com/liquibase/liquibase/releases/download/liquibase-parent-${VERSION_LIQUIBASE}/liquibase-${VERSION_LIQUIBASE}-bin.zip \\\n && unzip -q -d /opt/liquibase /tmp/liquibase.zip \\\n && rm /tmp/liquibase.zip \\\n && ln -s /usr/share/java/mysql-connector-java.jar /opt/liquibase/lib/mysql-connector-java.jar\n#  = .liquibase\n#   fix problems with composer cache\nENV COMPOSER_CACHE_DIR=\"/dev/null\"\n#   final settings\nENV PATH=\"$PATH:/xt/dev/bin\"\nRUN echo \"set-option -g default-shell /bin/zsh\" > /root/.tmux.conf\nRUN echo \"export TERM=xterm-color\" >> /root/.bashrc\nWORKDIR /prj\nCMD [\"zsh\"]\n#   some more php modules\nRUN /xt/tools/_apt_install php5-apcu php5-mcrypt php5-gd php5-mysql \\\n && php5enmod mcrypt\nRUN /xt/tools/_apt_install translate-toolkit\nRUN pear install SQL_Parser-0.6.0\nRUN /xt/tools/_apt_install libyaml-dev \\\n && yes \"\" | pecl install yaml \\\n && echo \"extension=yaml.so\" > /etc/php5/mods-available/yaml.ini \\\n && php5enmod yaml\n#   fix sass-globbing version\nRUN gem install sass-globbing --version 1.1.0 \\\n && gem uninstall sass-globbing -v 1.1.1\n#   rsync client needed for deployment\nRUN /xt/tools/_apt_install rsync\nADD ci.sh /xt/ci.sh\nENV DOWNLOAD_URL=\"\\\"\nENV DOWNLOAD_RSYNC=\"\\\"\nENV UPLOAD_RSYNC=\"\\\"\n#  ## email management tools\nRUN /xt/tools/_apt_install fetchmail procmail \\\n && PERL_MM_USE_DEFAULT=1 cpan -if Mail::DeliveryStatus::BounceParser\n#  ## enable sending emails from inside of this docker\nRUN /xt/tools/_enable_ssmtp \\\n && /xt/tools/_apt_install heirloom-mailx\n#  ## the new mongodb extension\nRUN /xt/tools/_apt_install libcurl4-openssl-dev libpcre3-dev \\\n && yes \"\" | pecl install mongodb \\\n && echo \"extension=mongodb.so\" > /etc/php5/mods-available/mongo.ini \\\n && php5enmod mongo\n#  ## fix https://github.com/npm/npm/issues/12196\n#  RUN npm install -g npm@latest-2\n#  ## library upgrade checking tools\nRUN npm install bower-update npm-check-updates salita -g\n#  ## latest composer \nRUN composer self-update\n","originalDockerfileUglifiedHash":"e33b7a49b53b2d5e6084dfc946db1edf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7c70bc9d6803df1b9587f3617de5c9c201136519.dockerfile"}