{"seed":2453349659,"processedDockerfileHash":"b2954499879e3ed338b1391d4db20c49","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ########################################################################\n#   ktlint\n#  ########################################################################\nFROM openjdk:8-alpine AS ktlint\n#   install ktlint\nRUN apk add curl gnupg --no-cache\nRUN curl -sSLO https://github.com/shyiko/ktlint/releases/download/0.29.0/ktlint \\\n && curl -sSLO https://github.com/shyiko/ktlint/releases/download/0.29.0/ktlint.asc \\\n && curl -sS https://keybase.io/shyiko/pgp_keys.asc | gpg --import \\\n && gpg --verify ktlint.asc \\\n && chmod a+x ktlint \\\n && rm ktlint.asc \\\n && mv ktlint /usr/local/bin/\n#   mount point\nRUN mkdir /src\nVOLUME [\"/src\"]\nCMD [\"--color\", \"--android\", \"-F\", \"/src/**/*.kt\"]\nENTRYPOINT [\"/usr/local/bin/ktlint\"]\n#  ########################################################################\n#   google-java-format\n#  ########################################################################\nFROM openjdk:8-alpine AS javaformatter\n#   install google-java-format\nRUN apk add curl --no-cache\nRUN mkdir -p /usr/google-java-format \\\n && curl -sSL https://github.com/google/google-java-format/releases/download/google-java-format-1.7/google-java-format-1.7-all-deps.jar > /usr/google-java-format/formatter.jar\n#   mount point\nRUN mkdir /src\nVOLUME [\"/src\"]\nENTRYPOINT exec java -jar /usr/google-java-format/formatter.jar --replace $( find /src -type f -name \"*.java\" ;)\n#  ########################################################################\n#   generator\n#  ########################################################################\nFROM openjdk:8 AS generator\n#   copy formatters\nCOPY --from=ktlint /usr/local/bin/ktlint /usr/local/bin/ktlint\nCOPY --from=javaformatter /usr/google-java-format/formatter.jar /usr/google-java-format/formatter.jar\nRUN apt-get update \\\n && apt-get install --no-install-recommends tree -y \\\n && rm -rf /var/lib/apt/lists/*\n#   copy distribution\nRUN mkdir -p /usr/local/kgax/repository/com/google/api\nCOPY build/kgax-core /usr/local/kgax/repository/com/google/api/kgax-core\nCOPY build/kgax-grpc /usr/local/kgax/repository/com/google/api/kgax-grpc\nCOPY build/kgax-grpc-android /usr/local/kgax/repository/com/google/api/kgax-grpc-android\nCOPY build/kgax-grpc-base /usr/local/kgax/repository/com/google/api/kgax-grpc-base\nCOPY build/gapic-generator-kotlin/*/gapic-generator-kotlin-*.tar /tmp/generator/\nRUN mkdir -p /usr/generator \\\n && tar xvf /tmp/generator/gapic-generator-kotlin-*.tar --strip-components=1 -C /usr/generator \\\n && rm -rf /tmp/generator\n#   move into the gradle project used to run generator\nCOPY generator-docker-runner /usr/src/generator/runner\nWORKDIR /usr/src/generator/runner\n#   disable gradle daemon\nRUN mkdir -p /root/.gradle \\\n && echo \"org.gradle.daemon=false\" > /root/.gradle/gradle.properties \\\n && echo \"org.gradle.jvmargs=-Xmx4096m -XX:MaxPermSize=4096m\" >> /root/.gradle/gradle.properties\n#   update gax version in build scripts\nRUN GAX_VERSION=$( basename /usr/local/kgax/repository/com/google/api/kgax-grpc/*/*.jar ;) \\\n && GAX_VERSION=${GAX_VERSION#\"kgax-grpc-\"} \\\n && GAX_VERSION=${GAX_VERSION%\".jar\"} \\\n && sed -i \"s/__KGAX__VERSION/${GAX_VERSION}/g\" build.server.gradle\nRUN GAX_ANDROID_VERSION=$( basename /usr/local/kgax/repository/com/google/api/kgax-grpc-android/*/*.jar ;) \\\n && GAX_ANDROID_VERSION=${GAX_ANDROID_VERSION#\"kgax-grpc-android-\"} \\\n && GAX_ANDROID_VERSION=${GAX_ANDROID_VERSION%\".jar\"} \\\n && sed -i \"s/__KGAX__VERSION/${GAX_ANDROID_VERSION}/g\" build.android.gradle\n#   run a build to cache the build artifacts\nRUN cp build.android.gradle build.gradle \\\n && ./gradlew build clean\nRUN cp build.server.gradle build.gradle \\\n && ./gradlew build clean\nRUN rm build.gradle\n#   create input directories\nRUN rm -rf src/main/proto \\\n && mkdir /proto \\\n && ln -s /proto src/main/proto\n#   create output directories\nRUN mkdir -p /generated\n#   generator script\nENTRYPOINT [\"./generate.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ########################################################################\n#  ktlint\n# ########################################################################\nFROM openjdk:8-alpine AS ktlint\n#  install ktlint\nRUN apk add --no-cache curl gnupg\nRUN curl -sSLO https://github.com/shyiko/ktlint/releases/download/0.29.0/ktlint \\\n && curl -sSLO https://github.com/shyiko/ktlint/releases/download/0.29.0/ktlint.asc \\\n && curl -sS https://keybase.io/shyiko/pgp_keys.asc | gpg --import \\\n && gpg --verify ktlint.asc \\\n && chmod a+x ktlint \\\n && rm ktlint.asc \\\n && mv ktlint /usr/local/bin/\n#  mount point\nRUN mkdir /src\nVOLUME [\"/src\"]\nCMD [\"--color\", \"--android\", \"-F\", \"/src/**/*.kt\"]\nENTRYPOINT [\"/usr/local/bin/ktlint\"]\n# ########################################################################\n#  google-java-format\n# ########################################################################\nFROM openjdk:8-alpine AS javaformatter\n#  install google-java-format\nRUN apk add --no-cache curl\nRUN mkdir -p /usr/google-java-format \\\n && curl -sSL https://github.com/google/google-java-format/releases/download/google-java-format-1.7/google-java-format-1.7-all-deps.jar > /usr/google-java-format/formatter.jar\n#  mount point\nRUN mkdir /src\nVOLUME [\"/src\"]\nENTRYPOINT exec java -jar /usr/google-java-format/formatter.jar --replace $( find /src -type f -name \"*.java\" ;)\n# ########################################################################\n#  generator\n# ########################################################################\nFROM openjdk:8 AS generator\n#  copy formatters\nCOPY --from=ktlint /usr/local/bin/ktlint /usr/local/bin/ktlint\nCOPY --from=javaformatter /usr/google-java-format/formatter.jar /usr/google-java-format/formatter.jar\nRUN apt-get update \\\n && apt-get install tree -y \\\n && rm -rf /var/lib/apt/lists/*\n#  copy distribution\nRUN mkdir -p /usr/local/kgax/repository/com/google/api\nCOPY build/kgax-core /usr/local/kgax/repository/com/google/api/kgax-core\nCOPY build/kgax-grpc /usr/local/kgax/repository/com/google/api/kgax-grpc\nCOPY build/kgax-grpc-android /usr/local/kgax/repository/com/google/api/kgax-grpc-android\nCOPY build/kgax-grpc-base /usr/local/kgax/repository/com/google/api/kgax-grpc-base\nCOPY build/gapic-generator-kotlin/*/gapic-generator-kotlin-*.tar /tmp/generator/\nRUN mkdir -p /usr/generator \\\n && tar xvf /tmp/generator/gapic-generator-kotlin-*.tar --strip-components=1 -C /usr/generator \\\n && rm -rf /tmp/generator\n#  move into the gradle project used to run generator\nCOPY generator-docker-runner /usr/src/generator/runner\nWORKDIR /usr/src/generator/runner\n#  disable gradle daemon\nRUN mkdir -p /root/.gradle \\\n && echo \"org.gradle.daemon=false\" > /root/.gradle/gradle.properties \\\n && echo \"org.gradle.jvmargs=-Xmx4096m -XX:MaxPermSize=4096m\" >> /root/.gradle/gradle.properties\n#  update gax version in build scripts\nRUN GAX_VERSION=$( basename /usr/local/kgax/repository/com/google/api/kgax-grpc/*/*.jar ;) \\\n && GAX_VERSION=${GAX_VERSION#\"kgax-grpc-\"} \\\n && GAX_VERSION=${GAX_VERSION%\".jar\"} \\\n && sed -i \"s/__KGAX__VERSION/${GAX_VERSION}/g\" build.server.gradle\nRUN GAX_ANDROID_VERSION=$( basename /usr/local/kgax/repository/com/google/api/kgax-grpc-android/*/*.jar ;) \\\n && GAX_ANDROID_VERSION=${GAX_ANDROID_VERSION#\"kgax-grpc-android-\"} \\\n && GAX_ANDROID_VERSION=${GAX_ANDROID_VERSION%\".jar\"} \\\n && sed -i \"s/__KGAX__VERSION/${GAX_ANDROID_VERSION}/g\" build.android.gradle\n#  run a build to cache the build artifacts\nRUN cp build.android.gradle build.gradle \\\n && ./gradlew build clean\nRUN cp build.server.gradle build.gradle \\\n && ./gradlew build clean\nRUN rm build.gradle\n#  create input directories\nRUN rm -rf src/main/proto \\\n && mkdir /proto \\\n && ln -s /proto src/main/proto\n#  create output directories\nRUN mkdir -p /generated\n#  generator script\nENTRYPOINT [\"./generate.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"fd38d3609d5566a14da7a950923b251b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ########################################################################\n#   ktlint\n#  ########################################################################\nFROM openjdk:8-alpine AS ktlint\n#   install ktlint\nRUN apk add --no-cache curl gnupg\nRUN curl -sSLO https://github.com/shyiko/ktlint/releases/download/0.29.0/ktlint \\\n && curl -sSLO https://github.com/shyiko/ktlint/releases/download/0.29.0/ktlint.asc \\\n && curl -sS https://keybase.io/shyiko/pgp_keys.asc | gpg --import \\\n && gpg --verify ktlint.asc \\\n && chmod a+x ktlint \\\n && rm ktlint.asc \\\n && mv ktlint /usr/local/bin/\n#   mount point\nRUN mkdir /src\nVOLUME [\"/src\"]\nCMD [\"--color\", \"--android\", \"-F\", \"/src/**/*.kt\"]\nENTRYPOINT [\"/usr/local/bin/ktlint\"]\n#  ########################################################################\n#   google-java-format\n#  ########################################################################\nFROM openjdk:8-alpine AS javaformatter\n#   install google-java-format\nRUN apk add --no-cache curl\nRUN mkdir -p /usr/google-java-format \\\n && curl -sSL https://github.com/google/google-java-format/releases/download/google-java-format-1.7/google-java-format-1.7-all-deps.jar > /usr/google-java-format/formatter.jar\n#   mount point\nRUN mkdir /src\nVOLUME [\"/src\"]\nENTRYPOINT exec java -jar /usr/google-java-format/formatter.jar --replace $( find /src -type f -name \"*.java\" ;)\n#  ########################################################################\n#   generator\n#  ########################################################################\nFROM openjdk:8 AS generator\n#   copy formatters\nCOPY --from=ktlint /usr/local/bin/ktlint /usr/local/bin/ktlint\nCOPY --from=javaformatter /usr/google-java-format/formatter.jar /usr/google-java-format/formatter.jar\nRUN apt-get update \\\n && apt-get install tree -y \\\n && rm -rf /var/lib/apt/lists/*\n#   copy distribution\nRUN mkdir -p /usr/local/kgax/repository/com/google/api\nCOPY build/kgax-core /usr/local/kgax/repository/com/google/api/kgax-core\nCOPY build/kgax-grpc /usr/local/kgax/repository/com/google/api/kgax-grpc\nCOPY build/kgax-grpc-android /usr/local/kgax/repository/com/google/api/kgax-grpc-android\nCOPY build/kgax-grpc-base /usr/local/kgax/repository/com/google/api/kgax-grpc-base\nCOPY build/gapic-generator-kotlin/*/gapic-generator-kotlin-*.tar /tmp/generator/\nRUN mkdir -p /usr/generator \\\n && tar xvf /tmp/generator/gapic-generator-kotlin-*.tar --strip-components=1 -C /usr/generator \\\n && rm -rf /tmp/generator\n#   move into the gradle project used to run generator\nCOPY generator-docker-runner /usr/src/generator/runner\nWORKDIR /usr/src/generator/runner\n#   disable gradle daemon\nRUN mkdir -p /root/.gradle \\\n && echo \"org.gradle.daemon=false\" > /root/.gradle/gradle.properties \\\n && echo \"org.gradle.jvmargs=-Xmx4096m -XX:MaxPermSize=4096m\" >> /root/.gradle/gradle.properties\n#   update gax version in build scripts\nRUN GAX_VERSION=$( basename /usr/local/kgax/repository/com/google/api/kgax-grpc/*/*.jar ;) \\\n && GAX_VERSION=${GAX_VERSION#\"kgax-grpc-\"} \\\n && GAX_VERSION=${GAX_VERSION%\".jar\"} \\\n && sed -i \"s/__KGAX__VERSION/${GAX_VERSION}/g\" build.server.gradle\nRUN GAX_ANDROID_VERSION=$( basename /usr/local/kgax/repository/com/google/api/kgax-grpc-android/*/*.jar ;) \\\n && GAX_ANDROID_VERSION=${GAX_ANDROID_VERSION#\"kgax-grpc-android-\"} \\\n && GAX_ANDROID_VERSION=${GAX_ANDROID_VERSION%\".jar\"} \\\n && sed -i \"s/__KGAX__VERSION/${GAX_ANDROID_VERSION}/g\" build.android.gradle\n#   run a build to cache the build artifacts\nRUN cp build.android.gradle build.gradle \\\n && ./gradlew build clean\nRUN cp build.server.gradle build.gradle \\\n && ./gradlew build clean\nRUN rm build.gradle\n#   create input directories\nRUN rm -rf src/main/proto \\\n && mkdir /proto \\\n && ln -s /proto src/main/proto\n#   create output directories\nRUN mkdir -p /generated\n#   generator script\nENTRYPOINT [\"./generate.sh\"]\n","originalDockerfileUglifiedHash":"15b2f30e3b57f9df0daef06a932beb11","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/234e521d99c9583a4a7216ca23e3e1efecfc25cc.dockerfile"}