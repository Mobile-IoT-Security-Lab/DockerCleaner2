{"seed":1973348387,"processedDockerfileHash":"edc260d9ce43c3e0201ea979a4a4733c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ampervue/python34\n#   https://github.com/ampervue/docker-python34-opencv3\nMAINTAINER David Karchmer <dkarchmer@ampervue.com>\n#  ####################################################################\n#\n#   Image based on Ubuntu:14.04\n#\n#     with\n#       - Python 3.4\n#       - OpenCV 3 (built)\n#       - FFMPEG (built)\n#     plus a bunch of build/web essentials via wheezy\n#     including MySQL and Postgres clients:\n#        https://github.com/docker-library/docs/tree/master/buildpack-deps\n#\n#  ####################################################################\nENV NUM_CORES=\"4\"\nWORKDIR /usr/local/src\nRUN git clone --depth 1 https://github.com/l-smash/l-smash \\\n && git clone --depth 1 git://git.videolan.org/x264.git \\\n && hg clone https://bitbucket.org/multicoreware/x265 \\\n && git clone --depth 1 git://source.ffmpeg.org/ffmpeg \\\n && git clone https://github.com/Itseez/opencv.git \\\n && git clone https://github.com/Itseez/opencv_contrib.git \\\n && git clone --depth 1 git://github.com/mstorsjo/fdk-aac.git \\\n && git clone --depth 1 https://chromium.googlesource.com/webm/libvpx \\\n && git clone https://git.xiph.org/opus.git \\\n && git clone --depth 1 https://github.com/mulx/aacgain.git\n#   Build L-SMASH\n#   =================================\nWORKDIR /usr/local/src/l-smash\nRUN ./configure \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libx264\n#   =================================\nWORKDIR /usr/local/src/x264\nRUN ./configure --enable-static \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libx265\n#   =================================\nWORKDIR /usr/local/src/x265/build/linux\nRUN cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../../source \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libfdk-aac\n#   =================================\nWORKDIR /usr/local/src/fdk-aac\nRUN autoreconf -fiv \\\n && ./configure --disable-shared \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libvpx\n#   =================================\nWORKDIR /usr/local/src/libvpx\nRUN ./configure --disable-examples \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libopus\n#   =================================\nWORKDIR /usr/local/src/opus\nRUN ./autogen.sh \\\n && ./configure --disable-shared \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build OpenCV 3.x\n#   =================================\n#  RUN apt-get update -qq && apt-get install -y --force-yes libopencv-dev\nRUN pip3 install --no-cache-dir --upgrade numpy\nWORKDIR /usr/local/src\nRUN mkdir -p opencv/release\nWORKDIR /usr/local/src/opencv/release\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules ..\nRUN make -j ${NUM_CORES} \\\n && make install \\\n && sh -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' \\\n && ldconfig\n#   =================================\n#   Build ffmpeg.\n#   =================================\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libass-dev=1:0.17.0-2 -y --force-yes\n#              --enable-libx265 - Does not work on recent builds\nWORKDIR /usr/local/src/ffmpeg\nRUN ./configure --extra-libs=\"-ldl\" --enable-gpl --enable-libass --enable-libfdk-aac --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-nonfree \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Remove all tmpfile\n#   =================================\nWORKDIR /usr/local/\nRUN rm -rf /usr/local/src\n#   =================================\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ampervue/python34\n#  https://github.com/ampervue/docker-python34-opencv3\nMAINTAINER David Karchmer <dkarchmer@ampervue.com>\n# ####################################################################\n#\n#  Image based on Ubuntu:14.04\n#\n#    with\n#      - Python 3.4\n#      - OpenCV 3 (built)\n#      - FFMPEG (built)\n#    plus a bunch of build/web essentials via wheezy\n#    including MySQL and Postgres clients:\n#       https://github.com/docker-library/docs/tree/master/buildpack-deps\n#\n# ####################################################################\nENV NUM_CORES=\"4\"\nWORKDIR /usr/local/src\nRUN git clone --depth 1 https://github.com/l-smash/l-smash \\\n && git clone --depth 1 git://git.videolan.org/x264.git \\\n && hg clone https://bitbucket.org/multicoreware/x265 \\\n && git clone --depth 1 git://source.ffmpeg.org/ffmpeg \\\n && git clone https://github.com/Itseez/opencv.git \\\n && git clone https://github.com/Itseez/opencv_contrib.git \\\n && git clone --depth 1 git://github.com/mstorsjo/fdk-aac.git \\\n && git clone --depth 1 https://chromium.googlesource.com/webm/libvpx \\\n && git clone https://git.xiph.org/opus.git \\\n && git clone --depth 1 https://github.com/mulx/aacgain.git\n#  Build L-SMASH\n#  =================================\nWORKDIR /usr/local/src/l-smash\nRUN ./configure \\\n && make -j ${NUM_CORES} \\\n && make install\n#  =================================\n#  Build libx264\n#  =================================\nWORKDIR /usr/local/src/x264\nRUN ./configure --enable-static \\\n && make -j ${NUM_CORES} \\\n && make install\n#  =================================\n#  Build libx265\n#  =================================\nWORKDIR /usr/local/src/x265/build/linux\nRUN cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../../source \\\n && make -j ${NUM_CORES} \\\n && make install\n#  =================================\n#  Build libfdk-aac\n#  =================================\nWORKDIR /usr/local/src/fdk-aac\nRUN autoreconf -fiv \\\n && ./configure --disable-shared \\\n && make -j ${NUM_CORES} \\\n && make install\n#  =================================\n#  Build libvpx\n#  =================================\nWORKDIR /usr/local/src/libvpx\nRUN ./configure --disable-examples \\\n && make -j ${NUM_CORES} \\\n && make install\n#  =================================\n#  Build libopus\n#  =================================\nWORKDIR /usr/local/src/opus\nRUN ./autogen.sh \\\n && ./configure --disable-shared \\\n && make -j ${NUM_CORES} \\\n && make install\n#  =================================\n#  Build OpenCV 3.x\n#  =================================\n# RUN apt-get update -qq && apt-get install -y --force-yes libopencv-dev\nRUN pip3 install --no-cache-dir --upgrade numpy\nWORKDIR /usr/local/src\nRUN mkdir -p opencv/release\nWORKDIR /usr/local/src/opencv/release\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules ..\nRUN make -j ${NUM_CORES} \\\n && make install \\\n && sh -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' \\\n && ldconfig\n#  =================================\n#  Build ffmpeg.\n#  =================================\nRUN apt-get update -qq \\\n && apt-get install libass-dev -y --force-yes\n#             --enable-libx265 - Does not work on recent builds\nWORKDIR /usr/local/src/ffmpeg\nRUN ./configure --extra-libs=\"-ldl\" --enable-gpl --enable-libass --enable-libfdk-aac --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-nonfree \\\n && make -j ${NUM_CORES} \\\n && make install\n#  =================================\n#  Remove all tmpfile\n#  =================================\nWORKDIR /usr/local/\nRUN rm -rf /usr/local/src\n#  =================================\n","injectedSmells":[],"originalDockerfileHash":"88585436dd91ee360022ffe0759ee823","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ampervue/python34\n#   https://github.com/ampervue/docker-python34-opencv3\nMAINTAINER David Karchmer <dkarchmer@ampervue.com>\n#  ####################################################################\n#\n#   Image based on Ubuntu:14.04\n#\n#     with\n#       - Python 3.4\n#       - OpenCV 3 (built)\n#       - FFMPEG (built)\n#     plus a bunch of build/web essentials via wheezy\n#     including MySQL and Postgres clients:\n#        https://github.com/docker-library/docs/tree/master/buildpack-deps\n#\n#  ####################################################################\nENV NUM_CORES=\"4\"\nWORKDIR /usr/local/src\nRUN git clone --depth 1 https://github.com/l-smash/l-smash \\\n && git clone --depth 1 git://git.videolan.org/x264.git \\\n && hg clone https://bitbucket.org/multicoreware/x265 \\\n && git clone --depth 1 git://source.ffmpeg.org/ffmpeg \\\n && git clone https://github.com/Itseez/opencv.git \\\n && git clone https://github.com/Itseez/opencv_contrib.git \\\n && git clone --depth 1 git://github.com/mstorsjo/fdk-aac.git \\\n && git clone --depth 1 https://chromium.googlesource.com/webm/libvpx \\\n && git clone https://git.xiph.org/opus.git \\\n && git clone --depth 1 https://github.com/mulx/aacgain.git\n#   Build L-SMASH\n#   =================================\nWORKDIR /usr/local/src/l-smash\nRUN ./configure \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libx264\n#   =================================\nWORKDIR /usr/local/src/x264\nRUN ./configure --enable-static \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libx265\n#   =================================\nWORKDIR /usr/local/src/x265/build/linux\nRUN cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../../source \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libfdk-aac\n#   =================================\nWORKDIR /usr/local/src/fdk-aac\nRUN autoreconf -fiv \\\n && ./configure --disable-shared \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libvpx\n#   =================================\nWORKDIR /usr/local/src/libvpx\nRUN ./configure --disable-examples \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build libopus\n#   =================================\nWORKDIR /usr/local/src/opus\nRUN ./autogen.sh \\\n && ./configure --disable-shared \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Build OpenCV 3.x\n#   =================================\n#  RUN apt-get update -qq && apt-get install -y --force-yes libopencv-dev\nRUN pip3 install --no-cache-dir --upgrade numpy\nWORKDIR /usr/local/src\nRUN mkdir -p opencv/release\nWORKDIR /usr/local/src/opencv/release\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules ..\nRUN make -j ${NUM_CORES} \\\n && make install \\\n && sh -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' \\\n && ldconfig\n#   =================================\n#   Build ffmpeg.\n#   =================================\nRUN apt-get update -qq \\\n && apt-get install libass-dev -y --force-yes\n#              --enable-libx265 - Does not work on recent builds\nWORKDIR /usr/local/src/ffmpeg\nRUN ./configure --extra-libs=\"-ldl\" --enable-gpl --enable-libass --enable-libfdk-aac --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-nonfree \\\n && make -j ${NUM_CORES} \\\n && make install\n#   =================================\n#   Remove all tmpfile\n#   =================================\nWORKDIR /usr/local/\nRUN rm -rf /usr/local/src\n#   =================================\n","originalDockerfileUglifiedHash":"37c792c8fcd80bd84e6be91e5391547c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5c93d005d164848edfccfac957f3e8cec00f6bac.dockerfile"}