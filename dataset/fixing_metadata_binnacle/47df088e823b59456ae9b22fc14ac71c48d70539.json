{"seed":2932555892,"processedDockerfileHash":"b705d89934b0b1bb51124528882f13cf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Generated by Porcupine\n#   Modelled after Neurodocker v0.2.0-dev. https://github.com/kaczmarj/neurodocker\nFROM timvanmourik/porcupine\n#  ----------------------------------------------------------\n#   Install common dependencies and create default entrypoint\n#  ----------------------------------------------------------\nARG DEBIAN_FRONTEND=noninteractive\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\" \\\n    ND_ENTRYPOINT=\"/porcupine/startup.sh\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bzip2=1.0.8-5build1 ca-certificates=20230311 curl=7.88.1-7ubuntu1 unzip=6.0-27ubuntu1 -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && chmod 777 /opt \\\n && chmod a+s /opt \\\n && mkdir /porcupine \\\n && echo '#!/usr/bin/env bash' >> $ND_ENTRYPOINT \\\n && echo 'set +x' >> $ND_ENTRYPOINT \\\n && echo 'if [ -z \"$*\" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT \\\n && chmod -R 777 /porcupine \\\n && chmod a+s /porcupine\nENTRYPOINT [\"/porcupine/startup.sh\"]\n#  ---------------\n#   Install Nipype\n#  ---------------\nRUN curl -sSLO https://repo.continuum.io/miniconda/Miniconda3-4.3.11-Linux-x86_64.sh \\\n && bash Miniconda3-4.3.11-Linux-x86_64.sh -b -p /usr/local/miniconda \\\n && rm Miniconda3-4.3.11-Linux-x86_64.sh\nENV PATH=\"/usr/local/miniconda/bin:$PATH\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\n#   Installing precomputed python packages\nRUN conda install -y mkl=2017.0.1 mkl-service \\\n && conda install -y numpy=1.12.0 scipy=0.18.1 scikit-learn=0.18.1 matplotlib=2.0.0 pandas=0.19.2 libxml2=2.9.4 libxslt=1.1.29 traits=4.6.0 boto\nRUN chmod +x /usr/local/miniconda/bin/* \\\n && conda clean --all -y\nRUN echo 'export PATH=/usr/local/miniconda/bin:$PATH' >> /etc/profile\nRUN pip install nipype==1.8.6\nRUN apt-get update \\\n && apt-get install --no-install-recommends graphviz=2.42.2-7build3 -y\n#  -------------------\n#   Install ANTs 2.2.0\n#  -------------------\nRUN echo \"Downloading ANTs ...\" \\\n && curl -sSL --retry 5 https://dl.dropbox.com/s/2f4sui1z6lcgyek/ANTs-Linux-centos5_x86_64-v2.2.0-0740f91.tar.gz | tar zx -C /opt\nENV ANTSPATH=\"/opt/ants\" \\\n    PATH=\"/opt/ants:$PATH\"\n#  --------------------\n#   Install AFNI latest\n#  --------------------\nENV PATH=\"/opt/afni:$PATH\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ed=1.19-1 gsl-bin=2.7.1+dfsg-3 libglu1-mesa-dev=9.0.2-1.1 libglib2.0-0=2.76.0-1ubuntu1 libglw1-mesa=8.0.0-1.1build1 libgomp1=13-20230320-1ubuntu1 libjpeg62=1:6b2-3.1 libxm4=2.3.8-3 netpbm=2:11.01.00-2build1 tcsh=6.24.07-1 xfonts-base=1:1.0.5+nmu1 xvfb=2:21.1.7-1ubuntu2 -yq \\\n && libs_path=/usr/lib/x86_64-linux-gnu \\\n && if [ -f $libs_path/libgsl.so.19 ] ; then ln $libs_path/libgsl.so.19 $libs_path/libgsl.so.0 ; fi \\\n && apt-get install --no-install-recommends libxp6 -yq || /bin/bash -c \" curl --retry 5 -o /tmp/libxp6.deb -sSL http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \\\n && dpkg -i /tmp/libxp6.deb \\\n && rm -f /tmp/libxp6.deb\" \\\n && apt-get install --no-install-recommends libpng12-0 -yq || /bin/bash -c \" curl -o /tmp/libpng12.deb -sSL http://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb \\\n && dpkg -i /tmp/libpng12.deb \\\n && rm -f /tmp/libpng12.deb\" \\\n && apt-get install --no-install-recommends r-base-dev=4.2.2.20221110-2build1 r-cran-rmpi=0.6-9.2-2 -yq || /bin/bash -c \" curl -o /tmp/install_R.sh -sSL https://gist.githubusercontent.com/kaczmarj/8e3792ae1af70b03788163c44f453b43/raw/0577c62e4771236adf0191c826a25249eb69a130/R_installer_debian_ubuntu.sh \\\n && /bin/bash /tmp/install_R.sh\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && echo \"Downloading AFNI ...\" \\\n && mkdir -p /opt/afni \\\n && curl -sSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz | tar zx -C /opt/afni --strip-components=1 \\\n && /opt/afni/rPkgsInstall -pkgs ALL \\\n && rm -rf /tmp/*\n#  -----------------------------------------------------------\n#   Install FSL v5.0.10\n#   FSL is non-free. If you are considering commerical use\n#   of this Docker image, please consult the relevant license:\n#   https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence\n#  -----------------------------------------------------------\nRUN echo \"Downloading FSL ...\" \\\n && curl -sSL https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz | tar zx -C /opt \\\n && /bin/bash /opt/fsl/etc/fslconf/fslpython_install.sh -q -f /opt/fsl \\\n && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \\\n && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \\\n && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \\\n && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT\nENV FSLDIR=\"/opt/fsl\" \\\n    PATH=\"/opt/fsl/bin:$PATH\"\n#  --------------------------------\n#   Add custom analysis file as CMD\n#  --------------------------------\nCOPY ./porcupine_generated_pipeline.py /run.py\nCMD [\"python\", \"/run.py\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Generated by Porcupine\n#  Modelled after Neurodocker v0.2.0-dev. https://github.com/kaczmarj/neurodocker\nFROM timvanmourik/porcupine\n# ----------------------------------------------------------\n#  Install common dependencies and create default entrypoint\n# ----------------------------------------------------------\nARG DEBIAN_FRONTEND=noninteractive\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\" \\\n    ND_ENTRYPOINT=\"/porcupine/startup.sh\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bzip2 ca-certificates curl unzip -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && chmod 777 /opt \\\n && chmod a+s /opt \\\n && mkdir /porcupine \\\n && echo '#!/usr/bin/env bash' >> $ND_ENTRYPOINT \\\n && echo 'set +x' >> $ND_ENTRYPOINT \\\n && echo 'if [ -z \"$*\" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT \\\n && chmod -R 777 /porcupine \\\n && chmod a+s /porcupine\nENTRYPOINT [\"/porcupine/startup.sh\"]\n# ---------------\n#  Install Nipype\n# ---------------\nRUN curl -sSLO https://repo.continuum.io/miniconda/Miniconda3-4.3.11-Linux-x86_64.sh \\\n && bash Miniconda3-4.3.11-Linux-x86_64.sh -b -p /usr/local/miniconda \\\n && rm Miniconda3-4.3.11-Linux-x86_64.sh\nENV PATH=\"/usr/local/miniconda/bin:$PATH\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\n#  Installing precomputed python packages\nRUN conda install -y mkl=2017.0.1 mkl-service \\\n && conda install -y numpy=1.12.0 scipy=0.18.1 scikit-learn=0.18.1 matplotlib=2.0.0 pandas=0.19.2 libxml2=2.9.4 libxslt=1.1.29 traits=4.6.0 boto\nRUN chmod +x /usr/local/miniconda/bin/* \\\n && conda clean --all -y\nRUN echo 'export PATH=/usr/local/miniconda/bin:$PATH' >> /etc/profile\nRUN pip install nipype\nRUN apt-get update \\\n && apt-get install graphviz -y\n# -------------------\n#  Install ANTs 2.2.0\n# -------------------\nRUN echo \"Downloading ANTs ...\" \\\n && curl -sSL --retry 5 https://dl.dropbox.com/s/2f4sui1z6lcgyek/ANTs-Linux-centos5_x86_64-v2.2.0-0740f91.tar.gz | tar zx -C /opt\nENV ANTSPATH=\"/opt/ants\" \\\n    PATH=\"/opt/ants:$PATH\"\n# --------------------\n#  Install AFNI latest\n# --------------------\nENV PATH=\"/opt/afni:$PATH\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ed gsl-bin libglu1-mesa-dev libglib2.0-0 libglw1-mesa libgomp1 libjpeg62 libxm4 netpbm tcsh xfonts-base xvfb -yq \\\n && libs_path=/usr/lib/x86_64-linux-gnu \\\n && if [ -f $libs_path/libgsl.so.19 ] ; then ln $libs_path/libgsl.so.19 $libs_path/libgsl.so.0 ; fi \\\n && apt-get install --no-install-recommends libxp6 -yq || /bin/bash -c \" curl --retry 5 -o /tmp/libxp6.deb -sSL http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \\\n && dpkg -i /tmp/libxp6.deb \\\n && rm -f /tmp/libxp6.deb\" \\\n && apt-get install --no-install-recommends libpng12-0 -yq || /bin/bash -c \" curl -o /tmp/libpng12.deb -sSL http://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb \\\n && dpkg -i /tmp/libpng12.deb \\\n && rm -f /tmp/libpng12.deb\" \\\n && apt-get install --no-install-recommends r-base-dev r-cran-rmpi -yq || /bin/bash -c \" curl -o /tmp/install_R.sh -sSL https://gist.githubusercontent.com/kaczmarj/8e3792ae1af70b03788163c44f453b43/raw/0577c62e4771236adf0191c826a25249eb69a130/R_installer_debian_ubuntu.sh \\\n && /bin/bash /tmp/install_R.sh\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && echo \"Downloading AFNI ...\" \\\n && mkdir -p /opt/afni \\\n && curl -sSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz | tar zx -C /opt/afni --strip-components=1 \\\n && /opt/afni/rPkgsInstall -pkgs ALL \\\n && rm -rf /tmp/*\n# -----------------------------------------------------------\n#  Install FSL v5.0.10\n#  FSL is non-free. If you are considering commerical use\n#  of this Docker image, please consult the relevant license:\n#  https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence\n# -----------------------------------------------------------\nRUN echo \"Downloading FSL ...\" \\\n && curl -sSL https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz | tar zx -C /opt \\\n && /bin/bash /opt/fsl/etc/fslconf/fslpython_install.sh -q -f /opt/fsl \\\n && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \\\n && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \\\n && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \\\n && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT\nENV FSLDIR=\"/opt/fsl\" \\\n    PATH=\"/opt/fsl/bin:$PATH\"\n# --------------------------------\n#  Add custom analysis file as CMD\n# --------------------------------\nADD ./porcupine_generated_pipeline.py /run.py\nCMD [\"python\", \"/run.py\"]\n","injectedSmells":[],"originalDockerfileHash":"932918ecc675862a2823d358aecb4074","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Generated by Porcupine\n#   Modelled after Neurodocker v0.2.0-dev. https://github.com/kaczmarj/neurodocker\nFROM timvanmourik/porcupine\n#  ----------------------------------------------------------\n#   Install common dependencies and create default entrypoint\n#  ----------------------------------------------------------\nARG DEBIAN_FRONTEND=noninteractive\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\" \\\n    ND_ENTRYPOINT=\"/porcupine/startup.sh\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bzip2 ca-certificates curl unzip -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && chmod 777 /opt \\\n && chmod a+s /opt \\\n && mkdir /porcupine \\\n && echo '#!/usr/bin/env bash' >> $ND_ENTRYPOINT \\\n && echo 'set +x' >> $ND_ENTRYPOINT \\\n && echo 'if [ -z \"$*\" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT \\\n && chmod -R 777 /porcupine \\\n && chmod a+s /porcupine\nENTRYPOINT [\"/porcupine/startup.sh\"]\n#  ---------------\n#   Install Nipype\n#  ---------------\nRUN curl -sSLO https://repo.continuum.io/miniconda/Miniconda3-4.3.11-Linux-x86_64.sh \\\n && bash Miniconda3-4.3.11-Linux-x86_64.sh -b -p /usr/local/miniconda \\\n && rm Miniconda3-4.3.11-Linux-x86_64.sh\nENV PATH=\"/usr/local/miniconda/bin:$PATH\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\n#   Installing precomputed python packages\nRUN conda install -y mkl=2017.0.1 mkl-service \\\n && conda install -y numpy=1.12.0 scipy=0.18.1 scikit-learn=0.18.1 matplotlib=2.0.0 pandas=0.19.2 libxml2=2.9.4 libxslt=1.1.29 traits=4.6.0 boto\nRUN chmod +x /usr/local/miniconda/bin/* \\\n && conda clean --all -y\nRUN echo 'export PATH=/usr/local/miniconda/bin:$PATH' >> /etc/profile\nRUN pip install nipype\nRUN apt-get update \\\n && apt-get install graphviz -y\n#  -------------------\n#   Install ANTs 2.2.0\n#  -------------------\nRUN echo \"Downloading ANTs ...\" \\\n && curl -sSL --retry 5 https://dl.dropbox.com/s/2f4sui1z6lcgyek/ANTs-Linux-centos5_x86_64-v2.2.0-0740f91.tar.gz | tar zx -C /opt\nENV ANTSPATH=\"/opt/ants\" \\\n    PATH=\"/opt/ants:$PATH\"\n#  --------------------\n#   Install AFNI latest\n#  --------------------\nENV PATH=\"/opt/afni:$PATH\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends ed gsl-bin libglu1-mesa-dev libglib2.0-0 libglw1-mesa libgomp1 libjpeg62 libxm4 netpbm tcsh xfonts-base xvfb -yq \\\n && libs_path=/usr/lib/x86_64-linux-gnu \\\n && if [ -f $libs_path/libgsl.so.19 ] ; then ln $libs_path/libgsl.so.19 $libs_path/libgsl.so.0 ; fi \\\n && apt-get install --no-install-recommends libxp6 -yq || /bin/bash -c \" curl --retry 5 -o /tmp/libxp6.deb -sSL http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \\\n && dpkg -i /tmp/libxp6.deb \\\n && rm -f /tmp/libxp6.deb\" \\\n && apt-get install --no-install-recommends libpng12-0 -yq || /bin/bash -c \" curl -o /tmp/libpng12.deb -sSL http://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb \\\n && dpkg -i /tmp/libpng12.deb \\\n && rm -f /tmp/libpng12.deb\" \\\n && apt-get install --no-install-recommends r-base-dev r-cran-rmpi -yq || /bin/bash -c \" curl -o /tmp/install_R.sh -sSL https://gist.githubusercontent.com/kaczmarj/8e3792ae1af70b03788163c44f453b43/raw/0577c62e4771236adf0191c826a25249eb69a130/R_installer_debian_ubuntu.sh \\\n && /bin/bash /tmp/install_R.sh\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && echo \"Downloading AFNI ...\" \\\n && mkdir -p /opt/afni \\\n && curl -sSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz | tar zx -C /opt/afni --strip-components=1 \\\n && /opt/afni/rPkgsInstall -pkgs ALL \\\n && rm -rf /tmp/*\n#  -----------------------------------------------------------\n#   Install FSL v5.0.10\n#   FSL is non-free. If you are considering commerical use\n#   of this Docker image, please consult the relevant license:\n#   https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence\n#  -----------------------------------------------------------\nRUN echo \"Downloading FSL ...\" \\\n && curl -sSL https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz | tar zx -C /opt \\\n && /bin/bash /opt/fsl/etc/fslconf/fslpython_install.sh -q -f /opt/fsl \\\n && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \\\n && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \\\n && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \\\n && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT\nENV FSLDIR=\"/opt/fsl\" \\\n    PATH=\"/opt/fsl/bin:$PATH\"\n#  --------------------------------\n#   Add custom analysis file as CMD\n#  --------------------------------\nADD ./porcupine_generated_pipeline.py /run.py\nCMD [\"python\", \"/run.py\"]\n","originalDockerfileUglifiedHash":"2e9597eb6546134175d43304b4cab364","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/47df088e823b59456ae9b22fc14ac71c48d70539.dockerfile"}