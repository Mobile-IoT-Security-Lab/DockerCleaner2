{"seed":786262980,"processedDockerfileHash":"6312f9edfbc1a00e224903349495d56c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:7.6.1810 AS build\nWORKDIR /home\n#   COMMON BUILD TOOLS\nRUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel\n#   Install cmake\nARG CMAKE_VER=3.13.1\nARG CMAKE_REPO=https://cmake.org/files\nRUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz \\\n && cd cmake-${CMAKE_VER} \\\n && ./bootstrap --prefix=\"/usr\" --system-curl \\\n && make -j8 \\\n && make install\n#   Install automake, use version 1.14 on CentOS\nARG AUTOMAKE_VER=1.14\nARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz\nRUN wget -O - ${AUTOMAKE_REPO} | tar xJ \\\n && cd automake-${AUTOMAKE_VER} \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-doc \\\n && make -j8 \\\n && make install\n#   Build NASM\nARG NASM_VER=2.13.03\nARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2\nRUN wget ${NASM_REPO} \\\n && tar -xaf nasm* \\\n && cd nasm-${NASM_VER} \\\n && ./autogen.sh \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#   Build YASM\nARG YASM_VER=1.3.0\nARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz\nRUN wget -O - ${YASM_REPO} | tar xz \\\n && cd yasm-${YASM_VER} \\\n && sed -i \"s/) ytasm.*/)/\" Makefile.in \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#  build ISPC\nARG ISPC_VER=1.9.1\nARG ISPC_REPO=https://downloads.sourceforge.net/project/ispcmirror/v${ISPC_VER}/ispc-v${ISPC_VER}-linux.tar.gz\nRUN wget -O - ${ISPC_REPO} | tar xz\nENV ISPC_EXECUTABLE=\"/home/ispc-v${ISPC_VER}-linux/ispc\"\n#  build embree\nRUN yum install -y -q tbb-devel mesa-libGL-devel\nARG EMBREE_REPO=https://github.com/embree/embree.git\nARG EMBREE_VER=df0b324\nRUN git clone ${EMBREE_REPO} \\\n && mkdir embree/build \\\n && cd embree/build \\\n && git checkout ${EMBREE_VER} \\\n && cmake .. -Wno-dev -DEMBREE_TUTORIALS=OFF \\\n && make -j 8 \\\n && make install\n#  build ospray\nRUN yum install -y -q libtiff-devel zlib-devel libpng-devel libjpeg-devel python-devel boost-devel\nARG OpenEXR_VER=0ac2ea3\nARG OpenEXR_REPO=https://github.com/openexr/openexr.git\nRUN git clone ${OpenEXR_REPO} ; mkdir openexr/build ; cd openexr/build ; git checkout ${OpenEXR_VER} ; cmake .. ; make -j 8 ; make install\nARG OpenImageIO_VER=5daa9a1\nARG OpenImageIO_REPO=https://github.com/OpenImageIO/oiio.git\nRUN git clone ${OpenImageIO_REPO} ; mkdir oiio/build ; cd oiio/build ; git checkout ${OpenImageIO_VER} ; cmake .. ; make -j 8 ; make install\n#  build ospray\nRUN yum install -y -q glfw-devel mesa-dri-drivers mpich-devel openssh-server openssh-clients\nENV PATH=\"$PATH:/usr/lib64/mpich/bin\"\nARG OSPRAY_VER=c42a885\nARG OSPRAY_REPO=https://github.com/ospray/ospray.git\nRUN git clone ${OSPRAY_REPO} ; mkdir ospray/build ; cd ospray/build ; git checkout ${OSPRAY_VER} ; cmake .. -DOSPRAY_MODULE_MPI=ON -DOSPRAY_SG_OPENIMAGEIO=ON ; make -j 8\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/home/ospray/build\"\nRUN mkdir -p /var/run/sshd ; sed -i 's/^#Port/Port/g' /etc/ssh/sshd_config ; sed -i 's/^Port 22/Port 2222/g' /etc/ssh/sshd_config ; sed -i 's/^#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config ; sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config ; sed -i 's/# Port 22/Port 2222/g' /etc/ssh/ssh_config ; echo 'root:ospray' | chpasswd ; /usr/sbin/sshd-keygen ; sed -i 's/# StrictHostKeyChecking ask/ StrictHostKeyChecking no/g' /etc/ssh/ssh_config ; /usr/bin/ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa ; cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  include(ospray-example_san-miguel.m4)\n#  include(ospray-example_xfrog.m4)\nFROM build\nLABEL Description=\"This is the base image for ospray-oiio-mpi CentOS 7.6\"\nLABEL Vendor=\"Intel Corporation\"\nWORKDIR /home\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:7.6.1810 AS build\nWORKDIR /home\n#  COMMON BUILD TOOLS\nRUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel\n#  Install cmake\nARG CMAKE_VER=3.13.1\nARG CMAKE_REPO=https://cmake.org/files\nRUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz \\\n && cd cmake-${CMAKE_VER} \\\n && ./bootstrap --prefix=\"/usr\" --system-curl \\\n && make -j8 \\\n && make install\n#  Install automake, use version 1.14 on CentOS\nARG AUTOMAKE_VER=1.14\nARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz\nRUN wget -O - ${AUTOMAKE_REPO} | tar xJ \\\n && cd automake-${AUTOMAKE_VER} \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-doc \\\n && make -j8 \\\n && make install\n#  Build NASM\nARG NASM_VER=2.13.03\nARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2\nRUN wget ${NASM_REPO} \\\n && tar -xaf nasm* \\\n && cd nasm-${NASM_VER} \\\n && ./autogen.sh \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#  Build YASM\nARG YASM_VER=1.3.0\nARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz\nRUN wget -O - ${YASM_REPO} | tar xz \\\n && cd yasm-${YASM_VER} \\\n && sed -i \"s/) ytasm.*/)/\" Makefile.in \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n# build ISPC\nARG ISPC_VER=1.9.1\nARG ISPC_REPO=https://downloads.sourceforge.net/project/ispcmirror/v${ISPC_VER}/ispc-v${ISPC_VER}-linux.tar.gz\nRUN wget -O - ${ISPC_REPO} | tar xz\nENV ISPC_EXECUTABLE=\"/home/ispc-v${ISPC_VER}-linux/ispc\"\n# build embree\nRUN yum install -y -q tbb-devel mesa-libGL-devel\nARG EMBREE_REPO=https://github.com/embree/embree.git\nARG EMBREE_VER=df0b324\nRUN git clone ${EMBREE_REPO} \\\n && mkdir embree/build \\\n && cd embree/build \\\n && git checkout ${EMBREE_VER} \\\n && cmake .. -Wno-dev -DEMBREE_TUTORIALS=OFF \\\n && make -j 8 \\\n && make install\n# build ospray\nRUN yum install -y -q libtiff-devel zlib-devel libpng-devel libjpeg-devel python-devel boost-devel\nARG OpenEXR_VER=0ac2ea3\nARG OpenEXR_REPO=https://github.com/openexr/openexr.git\nRUN git clone ${OpenEXR_REPO} ; mkdir openexr/build ; cd openexr/build ; git checkout ${OpenEXR_VER} ; cmake .. ; make -j 8 ; make install\nARG OpenImageIO_VER=5daa9a1\nARG OpenImageIO_REPO=https://github.com/OpenImageIO/oiio.git\nRUN git clone ${OpenImageIO_REPO} ; mkdir oiio/build ; cd oiio/build ; git checkout ${OpenImageIO_VER} ; cmake .. ; make -j 8 ; make install\n# build ospray\nRUN yum install -y -q glfw-devel mesa-dri-drivers mpich-devel openssh-server openssh-clients\nENV PATH=\"$PATH:/usr/lib64/mpich/bin\"\nARG OSPRAY_VER=c42a885\nARG OSPRAY_REPO=https://github.com/ospray/ospray.git\nRUN git clone ${OSPRAY_REPO} ; mkdir ospray/build ; cd ospray/build ; git checkout ${OSPRAY_VER} ; cmake .. -DOSPRAY_MODULE_MPI=ON -DOSPRAY_SG_OPENIMAGEIO=ON ; make -j 8\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/home/ospray/build\"\nRUN mkdir -p /var/run/sshd ; sed -i 's/^#Port/Port/g' /etc/ssh/sshd_config ; sed -i 's/^Port 22/Port 2222/g' /etc/ssh/sshd_config ; sed -i 's/^#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config ; sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config ; sed -i 's/# Port 22/Port 2222/g' /etc/ssh/ssh_config ; echo 'root:ospray' | chpasswd ; /usr/sbin/sshd-keygen ; sed -i 's/# StrictHostKeyChecking ask/ StrictHostKeyChecking no/g' /etc/ssh/ssh_config ; /usr/bin/ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa ; cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n# include(ospray-example_san-miguel.m4)\n# include(ospray-example_xfrog.m4)\nFROM build\nLABEL Description=\"This is the base image for ospray-oiio-mpi CentOS 7.6\"\nLABEL Vendor=\"Intel Corporation\"\nWORKDIR /home\n","injectedSmells":[],"originalDockerfileHash":"30bf1b413ebb8ac8c26362d22edd6bc4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7.6.1810 AS build\nWORKDIR /home\n#   COMMON BUILD TOOLS\nRUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel\n#   Install cmake\nARG CMAKE_VER=3.13.1\nARG CMAKE_REPO=https://cmake.org/files\nRUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz \\\n && cd cmake-${CMAKE_VER} \\\n && ./bootstrap --prefix=\"/usr\" --system-curl \\\n && make -j8 \\\n && make install\n#   Install automake, use version 1.14 on CentOS\nARG AUTOMAKE_VER=1.14\nARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz\nRUN wget -O - ${AUTOMAKE_REPO} | tar xJ \\\n && cd automake-${AUTOMAKE_VER} \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-doc \\\n && make -j8 \\\n && make install\n#   Build NASM\nARG NASM_VER=2.13.03\nARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2\nRUN wget ${NASM_REPO} \\\n && tar -xaf nasm* \\\n && cd nasm-${NASM_VER} \\\n && ./autogen.sh \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#   Build YASM\nARG YASM_VER=1.3.0\nARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz\nRUN wget -O - ${YASM_REPO} | tar xz \\\n && cd yasm-${YASM_VER} \\\n && sed -i \"s/) ytasm.*/)/\" Makefile.in \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#  build ISPC\nARG ISPC_VER=1.9.1\nARG ISPC_REPO=https://downloads.sourceforge.net/project/ispcmirror/v${ISPC_VER}/ispc-v${ISPC_VER}-linux.tar.gz\nRUN wget -O - ${ISPC_REPO} | tar xz\nENV ISPC_EXECUTABLE=\"/home/ispc-v${ISPC_VER}-linux/ispc\"\n#  build embree\nRUN yum install -y -q tbb-devel mesa-libGL-devel\nARG EMBREE_REPO=https://github.com/embree/embree.git\nARG EMBREE_VER=df0b324\nRUN git clone ${EMBREE_REPO} \\\n && mkdir embree/build \\\n && cd embree/build \\\n && git checkout ${EMBREE_VER} \\\n && cmake .. -Wno-dev -DEMBREE_TUTORIALS=OFF \\\n && make -j 8 \\\n && make install\n#  build ospray\nRUN yum install -y -q libtiff-devel zlib-devel libpng-devel libjpeg-devel python-devel boost-devel\nARG OpenEXR_VER=0ac2ea3\nARG OpenEXR_REPO=https://github.com/openexr/openexr.git\nRUN git clone ${OpenEXR_REPO} ; mkdir openexr/build ; cd openexr/build ; git checkout ${OpenEXR_VER} ; cmake .. ; make -j 8 ; make install\nARG OpenImageIO_VER=5daa9a1\nARG OpenImageIO_REPO=https://github.com/OpenImageIO/oiio.git\nRUN git clone ${OpenImageIO_REPO} ; mkdir oiio/build ; cd oiio/build ; git checkout ${OpenImageIO_VER} ; cmake .. ; make -j 8 ; make install\n#  build ospray\nRUN yum install -y -q glfw-devel mesa-dri-drivers mpich-devel openssh-server openssh-clients\nENV PATH=\"$PATH:/usr/lib64/mpich/bin\"\nARG OSPRAY_VER=c42a885\nARG OSPRAY_REPO=https://github.com/ospray/ospray.git\nRUN git clone ${OSPRAY_REPO} ; mkdir ospray/build ; cd ospray/build ; git checkout ${OSPRAY_VER} ; cmake .. -DOSPRAY_MODULE_MPI=ON -DOSPRAY_SG_OPENIMAGEIO=ON ; make -j 8\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/home/ospray/build\"\nRUN mkdir -p /var/run/sshd ; sed -i 's/^#Port/Port/g' /etc/ssh/sshd_config ; sed -i 's/^Port 22/Port 2222/g' /etc/ssh/sshd_config ; sed -i 's/^#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config ; sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config ; sed -i 's/# Port 22/Port 2222/g' /etc/ssh/ssh_config ; echo 'root:ospray' | chpasswd ; /usr/sbin/sshd-keygen ; sed -i 's/# StrictHostKeyChecking ask/ StrictHostKeyChecking no/g' /etc/ssh/ssh_config ; /usr/bin/ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa ; cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  include(ospray-example_san-miguel.m4)\n#  include(ospray-example_xfrog.m4)\nFROM build\nLABEL Description=\"This is the base image for ospray-oiio-mpi CentOS 7.6\"\nLABEL Vendor=\"Intel Corporation\"\nWORKDIR /home\n","originalDockerfileUglifiedHash":"0c156b7ccff15d125e67b0327e79e516","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6739b5b3b009de7fec6d5f63c0d38324aee4289a.dockerfile"}