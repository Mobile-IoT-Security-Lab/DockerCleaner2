{"seed":2360800178,"processedDockerfileHash":"31be5d1d43697f73c458c5e004f75ba3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04 AS dependencies\nCOPY depends /Bulwark/depends\nENV SDK_PATH=\"/Bulwark/depends/SDKs/\"\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.7 -y \\\n && add-apt-repository -y ppa:bitcoin/bitcoin \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-9 automake=1:1.15-4ubuntu1 autotools-dev=20150820.1 binutils-mingw-w64-i686=2.26-3ubuntu1+6.6 binutils-mingw-w64-x86-64=2.26-3ubuntu1+6.6 bsdmainutils=9.0.6ubuntu3 build-essential=12.1ubuntu2 ca-certificates=20170717~16.04.1 cmake=3.5.1-1ubuntu3 curl=7.47.0-1ubuntu2.9 faketime=0.9.6-4 g++-5-multilib-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 g++-5-multilib=5.4.0-6ubuntu1~16.04.10 g++-arm-linux-gnueabihf=4:5.3.1-1ubuntu1 g++-mingw-w64-i686=5.3.1-8ubuntu3+17 g++-mingw-w64-x86-64=5.3.1-8ubuntu3+17 gcc-5-multilib-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 gcc-5-multilib=5.4.0-6ubuntu1~16.04.10 git-core=1:2.7.4-0ubuntu1.5 imagemagick=8:6.8.9.9-7ubuntu5.13 libboost-all-dev=1.58.0.1ubuntu1 libbz2-dev=1.0.6-8 libbz2-dev=1.0.6-8 libc6-dev:i386=2.23-0ubuntu10 libc6-dev=2.23-0ubuntu10 libcap-dev=1:2.24-12 libdb4.8-dev=4.8.30-xenial4 libdb4.8++-dev=4.8.30-xenial4 libevent-dev=2.0.21-stable-2ubuntu0.16.04.1 libjpeg-dev=8c-2ubuntu8 libminiupnpc-dev=1.9.20140610-2ubuntu2.16.04.2 libprotobuf-dev=2.6.1-1.3 libqrencode-dev=3.4.4-1 libqt5core5a=5.5.1+dfsg-16ubuntu7.5 libqt5dbus5=5.5.1+dfsg-16ubuntu7.5 libqt5gui5=5.5.1+dfsg-16ubuntu7.5 librsvg2-bin=2.40.13-3 libssl-dev=1.0.2g-1ubuntu4.13 libtiff-tools=4.0.6-1ubuntu0.4 libtool=2.4.6-0.1 libz-mingw-w64-dev=1.2.8+dfsg-2 libzmq-dev=2.2.0+dfsg-7 libzmq5=4.1.4-7 linux-libc-dev:i386=4.4.0-138.164 linux-libc-dev=4.4.0-138.164 mingw-w64-i686-dev=4.0.4-2 mingw-w64-x86-64-dev=4.0.4-2 openssl=1.0.2g-1ubuntu4.13 pkg-config=0.29.1-0ubuntu1 protobuf-compiler=2.6.1-1.3 python-dev=2.7.12-1~16.04 python-setuptools=20.7.0-1 qttools5-dev-tools=5.5.1-3ubuntu0.1 qttools5-dev=5.5.1-3ubuntu0.1 unzip=6.0-20ubuntu1 wget=1.17.1-1ubuntu1.4 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix \\\n && update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix \\\n && wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.11.sdk.tar.xz -P /Bulwark/depends/SDKs/ \\\n && tar xJf /Bulwark/depends/SDKs/MacOSX10.11.sdk.tar.xz -C /Bulwark/depends/SDKs/ \\\n && rm /Bulwark/depends/SDKs/MacOSX10.11.sdk.tar.xz \\\n && wget https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py \\\n && pip install ez_setup==0.9 \\\n && make -C /Bulwark/depends HOST=arm-linux-gnueabihf \\\n && make -C /Bulwark/depends HOST=i686-pc-linux-gnu \\\n && make -C /Bulwark/depends HOST=i686-w64-mingw32 \\\n && make -C /Bulwark/depends HOST=x86_64-unknown-linux-gnu \\\n && make -C /Bulwark/depends HOST=x86_64-w64-mingw32\nFROM dependencies AS base\nCOPY autogen.sh /Bulwark/\nCOPY build-aux /Bulwark//build-aux\nCOPY configure.ac /Bulwark/\nCOPY contrib /Bulwark//contrib\nCOPY Makefile.am /Bulwark/\nCOPY pkg.m4 /Bulwark/\nCOPY qa /Bulwark/qa\nCOPY share /Bulwark/share\nCOPY src /Bulwark/src\nWORKDIR /Bulwark\nFROM base AS arm32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nCOPY --from=dependencies /Bulwark/depends/arm-linux-gnueabihf $(pwd)/depends/arm-linux-gnueabihf\nRUN ./autogen.sh \\\n && ./configure --enable-zmq --enable-glibc-back-compat --enable-reduce-exports --disable-shared --enable-hardening --disable-tests --with-miniupnpc --enable-upnp-default --prefix=\"$( pwd ;)/depends/arm-linux-gnueabihf\" --build=x86_64-unknown-linux-gnu --host=arm-linux-gnueabihf \\\n && make \\\n && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n && make clean\nWORKDIR /\nRUN arm-linux-gnueabihf-strip ./bulwark-cli ./bulwark-qt ./bulwarkd \\\n && tar czf arm32.tar.gz ./bulwark* \\\n && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\nFROM base AS linux32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nCOPY --from=dependencies /Bulwark/depends/i686-pc-linux-gnu $(pwd)/depends/i686-pc-linux-gnu\nRUN ./autogen.sh \\\n && ./configure --enable-zmq --with-pic --enable-glibc-back-compat --enable-reduce-exports --disable-shared --enable-hardening --disable-tests --with-miniupnpc --enable-upnp-default --prefix=\"$( pwd ;)/depends/i686-pc-linux-gnu\" --build=x86_64-unknown-linux-gnu --host=i686-pc-linux-gnu \\\n && make \\\n && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli ./bulwark-qt ./bulwarkd \\\n && tar czf linux32.tar.gz ./bulwark* \\\n && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\nFROM base AS linux64\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"x86_64-unknown-linux-gnu\"\nCOPY --from=dependencies /Bulwark/depends/x86_64-unknown-linux-gnu $(pwd)/depends/x86_64-unknown-linux-gnu\nRUN ./autogen.sh \\\n && ./configure --enable-zmq --with-pic --enable-glibc-back-compat --enable-reduce-exports --disable-shared --enable-hardening --disable-tests --with-miniupnpc --enable-upnp-default --prefix=\"$( pwd ;)/depends/x86_64-unknown-linux-gnu\" --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu \\\n && make \\\n && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli ./bulwark-qt ./bulwarkd \\\n && tar czf linux64.tar.gz ./bulwark* \\\n && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\nFROM base AS windows32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"i686-w64-mingw32\"\nCOPY --from=dependencies /Bulwark/depends/i686-w64-mingw32 $(pwd)/depends/i686-w64-mingw32\nCOPY autogen.sh .\nCOPY build-aux ./build-aux\nCOPY configure.ac .\nCOPY contrib ./contrib\nCOPY Makefile.am .\nCOPY pkg.m4 .\nCOPY qa ./qa\nCOPY share ./share\nCOPY src ./src\nRUN ./autogen.sh \\\n && ./configure --enable-gui --enable-reduce-exports --disable-shared --with-pic --disable-tests --enable-upnp-default --prefix=\"$( pwd ;)/depends/i686-w64-mingw32\" --build=x86_64-unknown-linux-gnu --host=i686-w64-mingw32 \\\n && make \\\n && cp ./src/bulwark-cli.exe ./src/bulwarkd.exe ./src/qt/bulwark-qt.exe / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe \\\n && tar czf windows32.tar.gz ./bulwark* \\\n && rm ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe\nFROM base AS windows64\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"x86_64-w64-mingw32\"\nCOPY --from=dependencies /Bulwark/depends/x86_64-w64-mingw32 $(pwd)/depends/x86_64-w64-mingw32\nCOPY autogen.sh .\nCOPY build-aux ./build-aux\nCOPY configure.ac .\nCOPY contrib ./contrib\nCOPY Makefile.am .\nCOPY pkg.m4 .\nCOPY qa ./qa\nCOPY share ./share\nCOPY src ./src\nRUN ./autogen.sh \\\n && ./configure --enable-gui --enable-reduce-exports --disable-shared --with-pic --disable-tests --enable-upnp-default --prefix=\"$( pwd ;)/depends/x86_64-w64-mingw32\" --build=x86_64-unknown-linux-gnu --host=x86_64-w64-mingw32 \\\n && make \\\n && cp ./src/bulwark-cli.exe ./src/bulwarkd.exe ./src/qt/bulwark-qt.exe / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe \\\n && tar czf windows64.tar.gz ./bulwark* \\\n && rm ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe\nFROM alpine:3.8\nLABEL maintainer=\"kewagi\"\nLABEL version=\"2.0.0.0\"\nLABEL name=\"Bulwark Docker Builds\"\nRUN mkdir /release\nCOPY --from=arm32 /arm32.* /release\nCOPY --from=linux32 /linux32.* /release\nCOPY --from=linux64 /linux64.* /release\nCOPY --from=windows32 /windows32.* /release\nCOPY --from=windows64 /windows64.* /release\nENTRYPOINT [\"ash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04 AS dependencies\nCOPY depends /Bulwark/depends\nENV SDK_PATH=\"/Bulwark/depends/SDKs/\"\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.7 -y \\\n && add-apt-repository -y ppa:bitcoin/bitcoin \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-9 automake=1:1.15-4ubuntu1 autotools-dev=20150820.1 binutils-mingw-w64-i686=2.26-3ubuntu1+6.6 binutils-mingw-w64-x86-64=2.26-3ubuntu1+6.6 bsdmainutils=9.0.6ubuntu3 build-essential=12.1ubuntu2 ca-certificates=20170717~16.04.1 cmake=3.5.1-1ubuntu3 curl=7.47.0-1ubuntu2.9 faketime=0.9.6-4 g++-5-multilib-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 g++-5-multilib=5.4.0-6ubuntu1~16.04.10 g++-arm-linux-gnueabihf=4:5.3.1-1ubuntu1 g++-mingw-w64-i686=5.3.1-8ubuntu3+17 g++-mingw-w64-x86-64=5.3.1-8ubuntu3+17 gcc-5-multilib-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 gcc-5-multilib=5.4.0-6ubuntu1~16.04.10 git-core=1:2.7.4-0ubuntu1.5 imagemagick=8:6.8.9.9-7ubuntu5.13 libboost-all-dev=1.58.0.1ubuntu1 libbz2-dev=1.0.6-8 libbz2-dev=1.0.6-8 libc6-dev:i386=2.23-0ubuntu10 libc6-dev=2.23-0ubuntu10 libcap-dev=1:2.24-12 libdb4.8-dev=4.8.30-xenial4 libdb4.8++-dev=4.8.30-xenial4 libevent-dev=2.0.21-stable-2ubuntu0.16.04.1 libjpeg-dev=8c-2ubuntu8 libminiupnpc-dev=1.9.20140610-2ubuntu2.16.04.2 libprotobuf-dev=2.6.1-1.3 libqrencode-dev=3.4.4-1 libqt5core5a=5.5.1+dfsg-16ubuntu7.5 libqt5dbus5=5.5.1+dfsg-16ubuntu7.5 libqt5gui5=5.5.1+dfsg-16ubuntu7.5 librsvg2-bin=2.40.13-3 libssl-dev=1.0.2g-1ubuntu4.13 libtiff-tools=4.0.6-1ubuntu0.4 libtool=2.4.6-0.1 libz-mingw-w64-dev=1.2.8+dfsg-2 libzmq-dev=2.2.0+dfsg-7 libzmq5=4.1.4-7 linux-libc-dev:i386=4.4.0-138.164 linux-libc-dev=4.4.0-138.164 mingw-w64-i686-dev=4.0.4-2 mingw-w64-x86-64-dev=4.0.4-2 openssl=1.0.2g-1ubuntu4.13 pkg-config=0.29.1-0ubuntu1 protobuf-compiler=2.6.1-1.3 python-dev=2.7.12-1~16.04 python-setuptools=20.7.0-1 qttools5-dev-tools=5.5.1-3ubuntu0.1 qttools5-dev=5.5.1-3ubuntu0.1 unzip=6.0-20ubuntu1 wget=1.17.1-1ubuntu1.4 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix \\\n && update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix \\\n && wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.11.sdk.tar.xz -P /Bulwark/depends/SDKs/ \\\n && tar xJf /Bulwark/depends/SDKs/MacOSX10.11.sdk.tar.xz -C /Bulwark/depends/SDKs/ \\\n && rm /Bulwark/depends/SDKs/MacOSX10.11.sdk.tar.xz \\\n && wget https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py \\\n && pip install ez_setup==0.9 \\\n && make -C /Bulwark/depends HOST=arm-linux-gnueabihf \\\n && make -C /Bulwark/depends HOST=i686-pc-linux-gnu \\\n && make -C /Bulwark/depends HOST=i686-w64-mingw32 \\\n && make -C /Bulwark/depends HOST=x86_64-unknown-linux-gnu \\\n && make -C /Bulwark/depends HOST=x86_64-w64-mingw32\nFROM dependencies AS base\nCOPY autogen.sh /Bulwark/\nCOPY build-aux /Bulwark//build-aux\nCOPY configure.ac /Bulwark/\nCOPY contrib /Bulwark//contrib\nCOPY Makefile.am /Bulwark/\nCOPY pkg.m4 /Bulwark/\nCOPY qa /Bulwark/qa\nCOPY share /Bulwark/share\nCOPY src /Bulwark/src\nWORKDIR /Bulwark\nFROM base AS arm32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nCOPY --from=dependencies /Bulwark/depends/arm-linux-gnueabihf $(pwd)/depends/arm-linux-gnueabihf\nRUN ./autogen.sh \\\n && ./configure --enable-zmq --enable-glibc-back-compat --enable-reduce-exports --disable-shared --enable-hardening --disable-tests --with-miniupnpc --enable-upnp-default --prefix=\"$( pwd ;)/depends/arm-linux-gnueabihf\" --build=x86_64-unknown-linux-gnu --host=arm-linux-gnueabihf \\\n && make \\\n && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n && make clean\nWORKDIR /\nRUN arm-linux-gnueabihf-strip ./bulwark-cli ./bulwark-qt ./bulwarkd \\\n && tar czf arm32.tar.gz ./bulwark* \\\n && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\nFROM base AS linux32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nCOPY --from=dependencies /Bulwark/depends/i686-pc-linux-gnu $(pwd)/depends/i686-pc-linux-gnu\nRUN ./autogen.sh \\\n && ./configure --enable-zmq --with-pic --enable-glibc-back-compat --enable-reduce-exports --disable-shared --enable-hardening --disable-tests --with-miniupnpc --enable-upnp-default --prefix=\"$( pwd ;)/depends/i686-pc-linux-gnu\" --build=x86_64-unknown-linux-gnu --host=i686-pc-linux-gnu \\\n && make \\\n && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli ./bulwark-qt ./bulwarkd \\\n && tar czf linux32.tar.gz ./bulwark* \\\n && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\nFROM base AS linux64\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"x86_64-unknown-linux-gnu\"\nCOPY --from=dependencies /Bulwark/depends/x86_64-unknown-linux-gnu $(pwd)/depends/x86_64-unknown-linux-gnu\nRUN ./autogen.sh \\\n && ./configure --enable-zmq --with-pic --enable-glibc-back-compat --enable-reduce-exports --disable-shared --enable-hardening --disable-tests --with-miniupnpc --enable-upnp-default --prefix=\"$( pwd ;)/depends/x86_64-unknown-linux-gnu\" --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu \\\n && make \\\n && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli ./bulwark-qt ./bulwarkd \\\n && tar czf linux64.tar.gz ./bulwark* \\\n && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\nFROM base AS windows32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"i686-w64-mingw32\"\nCOPY --from=dependencies /Bulwark/depends/i686-w64-mingw32 $(pwd)/depends/i686-w64-mingw32\nCOPY autogen.sh .\nCOPY build-aux ./build-aux\nCOPY configure.ac .\nCOPY contrib ./contrib\nCOPY Makefile.am .\nCOPY pkg.m4 .\nCOPY qa ./qa\nCOPY share ./share\nCOPY src ./src\nRUN ./autogen.sh \\\n && ./configure --enable-gui --enable-reduce-exports --disable-shared --with-pic --disable-tests --enable-upnp-default --prefix=\"$( pwd ;)/depends/i686-w64-mingw32\" --build=x86_64-unknown-linux-gnu --host=i686-w64-mingw32 \\\n && make \\\n && cp ./src/bulwark-cli.exe ./src/bulwarkd.exe ./src/qt/bulwark-qt.exe / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe \\\n && tar czf windows32.tar.gz ./bulwark* \\\n && rm ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe\nFROM base AS windows64\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"x86_64-w64-mingw32\"\nCOPY --from=dependencies /Bulwark/depends/x86_64-w64-mingw32 $(pwd)/depends/x86_64-w64-mingw32\nCOPY autogen.sh .\nCOPY build-aux ./build-aux\nCOPY configure.ac .\nCOPY contrib ./contrib\nCOPY Makefile.am .\nCOPY pkg.m4 .\nCOPY qa ./qa\nCOPY share ./share\nCOPY src ./src\nRUN ./autogen.sh \\\n && ./configure --enable-gui --enable-reduce-exports --disable-shared --with-pic --disable-tests --enable-upnp-default --prefix=\"$( pwd ;)/depends/x86_64-w64-mingw32\" --build=x86_64-unknown-linux-gnu --host=x86_64-w64-mingw32 \\\n && make \\\n && cp ./src/bulwark-cli.exe ./src/bulwarkd.exe ./src/qt/bulwark-qt.exe / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe \\\n && tar czf windows64.tar.gz ./bulwark* \\\n && rm ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe\nFROM alpine:3.8\nLABEL maintainer=\"kewagi\"\nLABEL version=\"2.0.0.0\"\nLABEL name=\"Bulwark Docker Builds\"\nRUN mkdir /release\nCOPY --from=arm32 /arm32.* /release\nCOPY --from=linux32 /linux32.* /release\nCOPY --from=linux64 /linux64.* /release\nCOPY --from=windows32 /windows32.* /release\nCOPY --from=windows64 /windows64.* /release\nENTRYPOINT [\"ash\"]\n","injectedSmells":[],"originalDockerfileHash":"d7249ad97032468878cbb1888cb6f3b2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04 AS dependencies\nCOPY depends /Bulwark/depends\nENV SDK_PATH=\"/Bulwark/depends/SDKs/\"\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.7 -y \\\n && add-apt-repository -y ppa:bitcoin/bitcoin \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-9 automake=1:1.15-4ubuntu1 autotools-dev=20150820.1 binutils-mingw-w64-i686=2.26-3ubuntu1+6.6 binutils-mingw-w64-x86-64=2.26-3ubuntu1+6.6 bsdmainutils=9.0.6ubuntu3 build-essential=12.1ubuntu2 ca-certificates=20170717~16.04.1 cmake=3.5.1-1ubuntu3 curl=7.47.0-1ubuntu2.9 faketime=0.9.6-4 g++-5-multilib-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 g++-5-multilib=5.4.0-6ubuntu1~16.04.10 g++-arm-linux-gnueabihf=4:5.3.1-1ubuntu1 g++-mingw-w64-i686=5.3.1-8ubuntu3+17 g++-mingw-w64-x86-64=5.3.1-8ubuntu3+17 gcc-5-multilib-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 gcc-5-multilib=5.4.0-6ubuntu1~16.04.10 git-core=1:2.7.4-0ubuntu1.5 imagemagick=8:6.8.9.9-7ubuntu5.13 libboost-all-dev=1.58.0.1ubuntu1 libbz2-dev=1.0.6-8 libbz2-dev=1.0.6-8 libc6-dev:i386=2.23-0ubuntu10 libc6-dev=2.23-0ubuntu10 libcap-dev=1:2.24-12 libdb4.8-dev=4.8.30-xenial4 libdb4.8++-dev=4.8.30-xenial4 libevent-dev=2.0.21-stable-2ubuntu0.16.04.1 libjpeg-dev=8c-2ubuntu8 libminiupnpc-dev=1.9.20140610-2ubuntu2.16.04.2 libprotobuf-dev=2.6.1-1.3 libqrencode-dev=3.4.4-1 libqt5core5a=5.5.1+dfsg-16ubuntu7.5 libqt5dbus5=5.5.1+dfsg-16ubuntu7.5 libqt5gui5=5.5.1+dfsg-16ubuntu7.5 librsvg2-bin=2.40.13-3 libssl-dev=1.0.2g-1ubuntu4.13 libtiff-tools=4.0.6-1ubuntu0.4 libtool=2.4.6-0.1 libz-mingw-w64-dev=1.2.8+dfsg-2 libzmq-dev=2.2.0+dfsg-7 libzmq5=4.1.4-7 linux-libc-dev:i386=4.4.0-138.164 linux-libc-dev=4.4.0-138.164 mingw-w64-i686-dev=4.0.4-2 mingw-w64-x86-64-dev=4.0.4-2 openssl=1.0.2g-1ubuntu4.13 pkg-config=0.29.1-0ubuntu1 protobuf-compiler=2.6.1-1.3 python-dev=2.7.12-1~16.04 python-setuptools=20.7.0-1 qttools5-dev-tools=5.5.1-3ubuntu0.1 qttools5-dev=5.5.1-3ubuntu0.1 unzip=6.0-20ubuntu1 wget=1.17.1-1ubuntu1.4 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix \\\n && update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix \\\n && wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.11.sdk.tar.xz -P /Bulwark/depends/SDKs/ \\\n && tar xJf /Bulwark/depends/SDKs/MacOSX10.11.sdk.tar.xz -C /Bulwark/depends/SDKs/ \\\n && rm /Bulwark/depends/SDKs/MacOSX10.11.sdk.tar.xz \\\n && wget https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py \\\n && pip install ez_setup==0.9 \\\n && make -C /Bulwark/depends HOST=arm-linux-gnueabihf \\\n && make -C /Bulwark/depends HOST=i686-pc-linux-gnu \\\n && make -C /Bulwark/depends HOST=i686-w64-mingw32 \\\n && make -C /Bulwark/depends HOST=x86_64-unknown-linux-gnu \\\n && make -C /Bulwark/depends HOST=x86_64-w64-mingw32\nFROM dependencies AS base\nCOPY autogen.sh /Bulwark/\nCOPY build-aux /Bulwark//build-aux\nCOPY configure.ac /Bulwark/\nCOPY contrib /Bulwark//contrib\nCOPY Makefile.am /Bulwark/\nCOPY pkg.m4 /Bulwark/\nCOPY qa /Bulwark/qa\nCOPY share /Bulwark/share\nCOPY src /Bulwark/src\nWORKDIR /Bulwark\nFROM base AS arm32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nCOPY --from=dependencies /Bulwark/depends/arm-linux-gnueabihf $(pwd)/depends/arm-linux-gnueabihf\nRUN ./autogen.sh \\\n && ./configure --enable-zmq --enable-glibc-back-compat --enable-reduce-exports --disable-shared --enable-hardening --disable-tests --with-miniupnpc --enable-upnp-default --prefix=\"$( pwd ;)/depends/arm-linux-gnueabihf\" --build=x86_64-unknown-linux-gnu --host=arm-linux-gnueabihf \\\n && make \\\n && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n && make clean\nWORKDIR /\nRUN arm-linux-gnueabihf-strip ./bulwark-cli ./bulwark-qt ./bulwarkd \\\n && tar czf arm32.tar.gz ./bulwark* \\\n && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\nFROM base AS linux32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nCOPY --from=dependencies /Bulwark/depends/i686-pc-linux-gnu $(pwd)/depends/i686-pc-linux-gnu\nRUN ./autogen.sh \\\n && ./configure --enable-zmq --with-pic --enable-glibc-back-compat --enable-reduce-exports --disable-shared --enable-hardening --disable-tests --with-miniupnpc --enable-upnp-default --prefix=\"$( pwd ;)/depends/i686-pc-linux-gnu\" --build=x86_64-unknown-linux-gnu --host=i686-pc-linux-gnu \\\n && make \\\n && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli ./bulwark-qt ./bulwarkd \\\n && tar czf linux32.tar.gz ./bulwark* \\\n && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\nFROM base AS linux64\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"x86_64-unknown-linux-gnu\"\nCOPY --from=dependencies /Bulwark/depends/x86_64-unknown-linux-gnu $(pwd)/depends/x86_64-unknown-linux-gnu\nRUN ./autogen.sh \\\n && ./configure --enable-zmq --with-pic --enable-glibc-back-compat --enable-reduce-exports --disable-shared --enable-hardening --disable-tests --with-miniupnpc --enable-upnp-default --prefix=\"$( pwd ;)/depends/x86_64-unknown-linux-gnu\" --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu \\\n && make \\\n && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli ./bulwark-qt ./bulwarkd \\\n && tar czf linux64.tar.gz ./bulwark* \\\n && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\nFROM base AS windows32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"i686-w64-mingw32\"\nCOPY --from=dependencies /Bulwark/depends/i686-w64-mingw32 $(pwd)/depends/i686-w64-mingw32\nCOPY autogen.sh .\nCOPY build-aux ./build-aux\nCOPY configure.ac .\nCOPY contrib ./contrib\nCOPY Makefile.am .\nCOPY pkg.m4 .\nCOPY qa ./qa\nCOPY share ./share\nCOPY src ./src\nRUN ./autogen.sh \\\n && ./configure --enable-gui --enable-reduce-exports --disable-shared --with-pic --disable-tests --enable-upnp-default --prefix=\"$( pwd ;)/depends/i686-w64-mingw32\" --build=x86_64-unknown-linux-gnu --host=i686-w64-mingw32 \\\n && make \\\n && cp ./src/bulwark-cli.exe ./src/bulwarkd.exe ./src/qt/bulwark-qt.exe / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe \\\n && tar czf windows32.tar.gz ./bulwark* \\\n && rm ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe\nFROM base AS windows64\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"x86_64-w64-mingw32\"\nCOPY --from=dependencies /Bulwark/depends/x86_64-w64-mingw32 $(pwd)/depends/x86_64-w64-mingw32\nCOPY autogen.sh .\nCOPY build-aux ./build-aux\nCOPY configure.ac .\nCOPY contrib ./contrib\nCOPY Makefile.am .\nCOPY pkg.m4 .\nCOPY qa ./qa\nCOPY share ./share\nCOPY src ./src\nRUN ./autogen.sh \\\n && ./configure --enable-gui --enable-reduce-exports --disable-shared --with-pic --disable-tests --enable-upnp-default --prefix=\"$( pwd ;)/depends/x86_64-w64-mingw32\" --build=x86_64-unknown-linux-gnu --host=x86_64-w64-mingw32 \\\n && make \\\n && cp ./src/bulwark-cli.exe ./src/bulwarkd.exe ./src/qt/bulwark-qt.exe / \\\n && make clean\nWORKDIR /\nRUN strip ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe \\\n && tar czf windows64.tar.gz ./bulwark* \\\n && rm ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe\nFROM alpine:3.8\nLABEL maintainer=\"kewagi\"\nLABEL version=\"2.0.0.0\"\nLABEL name=\"Bulwark Docker Builds\"\nRUN mkdir /release\nCOPY --from=arm32 /arm32.* /release\nCOPY --from=linux32 /linux32.* /release\nCOPY --from=linux64 /linux64.* /release\nCOPY --from=windows32 /windows32.* /release\nCOPY --from=windows64 /windows64.* /release\nENTRYPOINT [\"ash\"]\n","originalDockerfileUglifiedHash":"d7249ad97032468878cbb1888cb6f3b2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2d44dc65c2aaed85853f3258a4e3933a12dab8d7.dockerfile"}