{"seed":102052930,"processedDockerfileHash":"9b18da1f91d949eb4375258a7c4af333","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This Dockerfile specifies the recipe for creating an image for the tests\n#   to run in.\n#\n#   We install as many test dependencies here as we can, because these setup\n#   steps can be cached.  They do *not* run every time we run the build.\n#   The Docker image is only rebuilt when the Dockerfile (ie. this file)\n#   changes.\n#   Base Dockerfile for gRPC dev images\nFROM 32bit/debian:latest\n#   Apt source for php\nRUN echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu trusty main\" | tee /etc/apt/sources.list.d/various-php.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F4FCBB07\n#   Install dependencies.  We start with the basic ones require to build protoc\n#   and the C++ build\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.71-3 autotools-dev=20220109.1 build-essential=12.9ubuntu3 bzip2=1.0.8-5build1 ccache=4.7.4-1 curl=7.88.1-7ubuntu1 gcc=4:12.2.0-3ubuntu1 git=1:2.39.2-1ubuntu1 libc6=2.37-0ubuntu2 libc6-dbg=2.37-0ubuntu2 libc6-dev=2.37-0ubuntu2 libgtest-dev=1.12.1-0.2 libtool=2.4.7-5 make=4.3-4.1build1 parallel=20221122+ds-2 time=1.9-0.2 wget=1.21.3-1ubuntu1 unzip=6.0-27ubuntu1 python-setuptools python-pip python-dev cmake=3.25.1-1 php5.5 php5.5-dev php5.5-xml php5.6 php5.6-dev php5.6-xml php7.0 php7.0-dev php7.0-xml phpunit=9.6.3-1 valgrind=1:3.19.0-1ubuntu1 libxml2-dev=2.9.14+dfsg-1.1build2 -y --force-yes \\\n && apt-get clean\n#  #################\n#   PHP dependencies.\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nRUN php composer-setup.php\nRUN mv composer.phar /usr/bin/composer\nRUN php -r \"unlink('composer-setup.php');\"\nRUN cd /tmp \\\n && git clone https://github.com/google/protobuf.git \\\n && cd protobuf/php \\\n && git reset --hard 6b27c1f981a9a93918e4039f236ead27165a8e91 \\\n && ln -sfn /usr/bin/php5.5 /usr/bin/php \\\n && ln -sfn /usr/bin/php-config5.5 /usr/bin/php-config \\\n && ln -sfn /usr/bin/phpize5.5 /usr/bin/phpize \\\n && composer install \\\n && mv vendor /usr/local/vendor-5.5 \\\n && ln -sfn /usr/bin/php5.6 /usr/bin/php \\\n && ln -sfn /usr/bin/php-config5.6 /usr/bin/php-config \\\n && ln -sfn /usr/bin/phpize5.6 /usr/bin/phpize \\\n && composer install \\\n && mv vendor /usr/local/vendor-5.6 \\\n && ln -sfn /usr/bin/php7.0 /usr/bin/php \\\n && ln -sfn /usr/bin/php-config7.0 /usr/bin/php-config \\\n && ln -sfn /usr/bin/phpize7.0 /usr/bin/phpize \\\n && composer install \\\n && mv vendor /usr/local/vendor-7.0\nRUN wget http://am1.php.net/get/php-5.5.38.tar.bz2/from/this/mirror\nRUN mv mirror php-5.5.38.tar.bz2\nRUN tar -xvf php-5.5.38.tar.bz2\nRUN cd php-5.5.38 \\\n && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.5-zts \\\n && make \\\n && make install \\\n && make clean \\\n && cd ..\nRUN cd php-5.5.38 \\\n && make clean \\\n && ./configure --enable-bcmath --prefix=/usr/local/php-5.5 \\\n && make \\\n && make install \\\n && make clean \\\n && cd ..\nRUN wget http://am1.php.net/get/php-5.6.30.tar.bz2/from/this/mirror\nRUN mv mirror php-5.6.30.tar.bz2\nRUN tar -xvf php-5.6.30.tar.bz2\nRUN cd php-5.6.30 \\\n && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.6-zts \\\n && make \\\n && make install \\\n && cd ..\nRUN cd php-5.6.30 \\\n && make clean \\\n && ./configure --enable-bcmath --prefix=/usr/local/php-5.6 \\\n && make \\\n && make install \\\n && cd ..\nRUN wget http://am1.php.net/get/php-7.0.18.tar.bz2/from/this/mirror\nRUN mv mirror php-7.0.18.tar.bz2\nRUN tar -xvf php-7.0.18.tar.bz2\nRUN cd php-7.0.18 \\\n && ./configure --enable-maintainer-zts --prefix=/usr/local/php-7.0-zts \\\n && make \\\n && make install \\\n && cd ..\nRUN cd php-7.0.18 \\\n && make clean \\\n && ./configure --enable-bcmath --prefix=/usr/local/php-7.0 \\\n && make \\\n && make install \\\n && cd ..\n#  #################\n#   Python dependencies\n#   These packages exist in apt-get, but their versions are too old, so we have\n#   to get updates from pip.\nRUN pip install pip==23.1 --upgrade\nRUN pip install virtualenv==20.21.0 tox==4.4.12 yattag==1.15.1\n#  #################\n#   Prepare ccache\nRUN ln -s /usr/bin/ccache /usr/local/bin/gcc\nRUN ln -s /usr/bin/ccache /usr/local/bin/g++\nRUN ln -s /usr/bin/ccache /usr/local/bin/cc\nRUN ln -s /usr/bin/ccache /usr/local/bin/c++\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang++\n#   Define the default command.\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This Dockerfile specifies the recipe for creating an image for the tests\n#  to run in.\n#\n#  We install as many test dependencies here as we can, because these setup\n#  steps can be cached.  They do *not* run every time we run the build.\n#  The Docker image is only rebuilt when the Dockerfile (ie. this file)\n#  changes.\n#  Base Dockerfile for gRPC dev images\nFROM 32bit/debian:latest\n#  Apt source for php\nRUN echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu trusty main\" | tee /etc/apt/sources.list.d/various-php.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F4FCBB07\n#  Install dependencies.  We start with the basic ones require to build protoc\n#  and the C++ build\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl gcc git libc6 libc6-dbg libc6-dev libgtest-dev libtool make parallel time wget unzip python-setuptools python-pip python-dev cmake php5.5 php5.5-dev php5.5-xml php5.6 php5.6-dev php5.6-xml php7.0 php7.0-dev php7.0-xml phpunit valgrind libxml2-dev -y --force-yes \\\n && apt-get clean\n# #################\n#  PHP dependencies.\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nRUN php composer-setup.php\nRUN mv composer.phar /usr/bin/composer\nRUN php -r \"unlink('composer-setup.php');\"\nRUN cd /tmp \\\n && git clone https://github.com/google/protobuf.git \\\n && cd protobuf/php \\\n && git reset --hard 6b27c1f981a9a93918e4039f236ead27165a8e91 \\\n && ln -sfn /usr/bin/php5.5 /usr/bin/php \\\n && ln -sfn /usr/bin/php-config5.5 /usr/bin/php-config \\\n && ln -sfn /usr/bin/phpize5.5 /usr/bin/phpize \\\n && composer install \\\n && mv vendor /usr/local/vendor-5.5 \\\n && ln -sfn /usr/bin/php5.6 /usr/bin/php \\\n && ln -sfn /usr/bin/php-config5.6 /usr/bin/php-config \\\n && ln -sfn /usr/bin/phpize5.6 /usr/bin/phpize \\\n && composer install \\\n && mv vendor /usr/local/vendor-5.6 \\\n && ln -sfn /usr/bin/php7.0 /usr/bin/php \\\n && ln -sfn /usr/bin/php-config7.0 /usr/bin/php-config \\\n && ln -sfn /usr/bin/phpize7.0 /usr/bin/phpize \\\n && composer install \\\n && mv vendor /usr/local/vendor-7.0\nRUN wget http://am1.php.net/get/php-5.5.38.tar.bz2/from/this/mirror\nRUN mv mirror php-5.5.38.tar.bz2\nRUN tar -xvf php-5.5.38.tar.bz2\nRUN cd php-5.5.38 \\\n && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.5-zts \\\n && make \\\n && make install \\\n && make clean \\\n && cd ..\nRUN cd php-5.5.38 \\\n && make clean \\\n && ./configure --enable-bcmath --prefix=/usr/local/php-5.5 \\\n && make \\\n && make install \\\n && make clean \\\n && cd ..\nRUN wget http://am1.php.net/get/php-5.6.30.tar.bz2/from/this/mirror\nRUN mv mirror php-5.6.30.tar.bz2\nRUN tar -xvf php-5.6.30.tar.bz2\nRUN cd php-5.6.30 \\\n && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.6-zts \\\n && make \\\n && make install \\\n && cd ..\nRUN cd php-5.6.30 \\\n && make clean \\\n && ./configure --enable-bcmath --prefix=/usr/local/php-5.6 \\\n && make \\\n && make install \\\n && cd ..\nRUN wget http://am1.php.net/get/php-7.0.18.tar.bz2/from/this/mirror\nRUN mv mirror php-7.0.18.tar.bz2\nRUN tar -xvf php-7.0.18.tar.bz2\nRUN cd php-7.0.18 \\\n && ./configure --enable-maintainer-zts --prefix=/usr/local/php-7.0-zts \\\n && make \\\n && make install \\\n && cd ..\nRUN cd php-7.0.18 \\\n && make clean \\\n && ./configure --enable-bcmath --prefix=/usr/local/php-7.0 \\\n && make \\\n && make install \\\n && cd ..\n# #################\n#  Python dependencies\n#  These packages exist in apt-get, but their versions are too old, so we have\n#  to get updates from pip.\nRUN pip install pip --upgrade\nRUN pip install virtualenv tox yattag\n# #################\n#  Prepare ccache\nRUN ln -s /usr/bin/ccache /usr/local/bin/gcc\nRUN ln -s /usr/bin/ccache /usr/local/bin/g++\nRUN ln -s /usr/bin/ccache /usr/local/bin/cc\nRUN ln -s /usr/bin/ccache /usr/local/bin/c++\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang++\n#  Define the default command.\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"e35178d68a63fe1f6cd7a77706153442","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This Dockerfile specifies the recipe for creating an image for the tests\n#   to run in.\n#\n#   We install as many test dependencies here as we can, because these setup\n#   steps can be cached.  They do *not* run every time we run the build.\n#   The Docker image is only rebuilt when the Dockerfile (ie. this file)\n#   changes.\n#   Base Dockerfile for gRPC dev images\nFROM 32bit/debian:latest\n#   Apt source for php\nRUN echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu trusty main\" | tee /etc/apt/sources.list.d/various-php.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F4FCBB07\n#   Install dependencies.  We start with the basic ones require to build protoc\n#   and the C++ build\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl gcc git libc6 libc6-dbg libc6-dev libgtest-dev libtool make parallel time wget unzip python-setuptools python-pip python-dev cmake php5.5 php5.5-dev php5.5-xml php5.6 php5.6-dev php5.6-xml php7.0 php7.0-dev php7.0-xml phpunit valgrind libxml2-dev -y --force-yes \\\n && apt-get clean\n#  #################\n#   PHP dependencies.\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nRUN php composer-setup.php\nRUN mv composer.phar /usr/bin/composer\nRUN php -r \"unlink('composer-setup.php');\"\nRUN cd /tmp \\\n && git clone https://github.com/google/protobuf.git \\\n && cd protobuf/php \\\n && git reset --hard 6b27c1f981a9a93918e4039f236ead27165a8e91 \\\n && ln -sfn /usr/bin/php5.5 /usr/bin/php \\\n && ln -sfn /usr/bin/php-config5.5 /usr/bin/php-config \\\n && ln -sfn /usr/bin/phpize5.5 /usr/bin/phpize \\\n && composer install \\\n && mv vendor /usr/local/vendor-5.5 \\\n && ln -sfn /usr/bin/php5.6 /usr/bin/php \\\n && ln -sfn /usr/bin/php-config5.6 /usr/bin/php-config \\\n && ln -sfn /usr/bin/phpize5.6 /usr/bin/phpize \\\n && composer install \\\n && mv vendor /usr/local/vendor-5.6 \\\n && ln -sfn /usr/bin/php7.0 /usr/bin/php \\\n && ln -sfn /usr/bin/php-config7.0 /usr/bin/php-config \\\n && ln -sfn /usr/bin/phpize7.0 /usr/bin/phpize \\\n && composer install \\\n && mv vendor /usr/local/vendor-7.0\nRUN wget http://am1.php.net/get/php-5.5.38.tar.bz2/from/this/mirror\nRUN mv mirror php-5.5.38.tar.bz2\nRUN tar -xvf php-5.5.38.tar.bz2\nRUN cd php-5.5.38 \\\n && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.5-zts \\\n && make \\\n && make install \\\n && make clean \\\n && cd ..\nRUN cd php-5.5.38 \\\n && make clean \\\n && ./configure --enable-bcmath --prefix=/usr/local/php-5.5 \\\n && make \\\n && make install \\\n && make clean \\\n && cd ..\nRUN wget http://am1.php.net/get/php-5.6.30.tar.bz2/from/this/mirror\nRUN mv mirror php-5.6.30.tar.bz2\nRUN tar -xvf php-5.6.30.tar.bz2\nRUN cd php-5.6.30 \\\n && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.6-zts \\\n && make \\\n && make install \\\n && cd ..\nRUN cd php-5.6.30 \\\n && make clean \\\n && ./configure --enable-bcmath --prefix=/usr/local/php-5.6 \\\n && make \\\n && make install \\\n && cd ..\nRUN wget http://am1.php.net/get/php-7.0.18.tar.bz2/from/this/mirror\nRUN mv mirror php-7.0.18.tar.bz2\nRUN tar -xvf php-7.0.18.tar.bz2\nRUN cd php-7.0.18 \\\n && ./configure --enable-maintainer-zts --prefix=/usr/local/php-7.0-zts \\\n && make \\\n && make install \\\n && cd ..\nRUN cd php-7.0.18 \\\n && make clean \\\n && ./configure --enable-bcmath --prefix=/usr/local/php-7.0 \\\n && make \\\n && make install \\\n && cd ..\n#  #################\n#   Python dependencies\n#   These packages exist in apt-get, but their versions are too old, so we have\n#   to get updates from pip.\nRUN pip install pip --upgrade\nRUN pip install virtualenv tox yattag\n#  #################\n#   Prepare ccache\nRUN ln -s /usr/bin/ccache /usr/local/bin/gcc\nRUN ln -s /usr/bin/ccache /usr/local/bin/g++\nRUN ln -s /usr/bin/ccache /usr/local/bin/cc\nRUN ln -s /usr/bin/ccache /usr/local/bin/c++\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang\nRUN ln -s /usr/bin/ccache /usr/local/bin/clang++\n#   Define the default command.\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"b67a1c293d6dc5b20ae72841aabbac6f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ab3fd9578be890675356fc97be05ac4f4c445c0d.dockerfile"}