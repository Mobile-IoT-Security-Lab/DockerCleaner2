{"seed":451007771,"processedDockerfileHash":"bb88c8dab0aa7aaca29270440636749a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04\nMAINTAINER Fernando Andreotti <fernando.andreotti@eng.ox.ac.uk>\n#   Versions used for some packages\nARG CONDA_VERSION=4.3.1\nARG CONDA_ENV\nARG TENSORFLOW_VERSION=1.4*\nARG KERAS_VERSION=2.0.9\nARG PYTHON_VERSION=3.5\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nUSER root\nRUN echo -e \"\\n**********************\\nNVIDIA Driver Version\\n**********************\\n\" \\\n && cat /proc/driver/nvidia/version \\\n && echo -e \"\\n**********************\\nCUDA Version\\n**********************\\n\" \\\n && nvcc -V \\\n && echo -e \"\\n\\nBuilding your Deep Learning Docker Image...\\n\"\n#   Install some dependencies\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV CONDA_ENV_PATH=\"/opt/miniconda\"\nENV MYCONDA_ENV=\"\\\"deeplearn\\\"\"\nENV CONDA_ACTIVATE=\"\\\"source $CONDA_ENV_PATH/bin/activate $MYCONDA_ENV\\\"\"\n#   install essentials\nRUN apt-get update --fix-missing -qq \\\n && apt-get install --no-install-recommends autoconf automake bc build-essential bzip2 cmake curl g++ gfortran git language-pack-en libatlas-dev libatlas3gf-base libcurl4-openssl-dev libffi-dev libfreetype6-dev libglib2.0-0 libhdf5-dev liblcms2-dev libopenblas-dev libssl-dev libtiff5-dev libtool libwebp-dev libzmq3-dev make nano pkg-config software-properties-common unzip wget zlib1g-dev qt5-default libvtk6-dev zlib1g-dev -y\n#   Install miniconda to /opt/miniconda\nRUN curl -LO http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\nRUN /bin/bash Miniconda-latest-Linux-x86_64.sh -p $CONDA_ENV_PATH -b\nRUN rm Miniconda-latest-Linux-x86_64.sh\nENV PATH=\"$CONDA_ENV_PATH/bin:${PATH}\"\nRUN conda update --quiet --yes conda\nENV PATH=\"${CONDA_ENV_PATH}/bin:$PATH\"\n#   Creating Anaconda environment\nRUN conda create -y --name $MYCONDA_ENV python=${PYTHON_VERSION}\n#   Install Python 3 packages\nRUN conda install -c conda-forge -y -n $MYCONDA_ENV 'beautifulsoup4=4.5*' 'graphviz=2.38.0' 'hdf5=1.8.17' 'h5py=2.7*' 'ipython=5.1*' 'ipykernel=4.5*' 'ipywidgets=5.2*' 'jupyter=1.0*' 'lxml=3.8*' 'matplotlib=2.0*' 'notebook=4.3*' 'numpy=1.13*' 'pandas=0.20*' 'pillow=4.2*' 'pip=9.0*' 'pydotplus=2.0.2' 'python=3.5*' 'scipy=0.19*' 'scikit-learn=0.19*' 'scikit-image=0.13*' 'setuptools=36.3*' 'six=1.10*' 'sphinx=1.5*' 'spyder=3.2*' \\\n && conda clean -tipsy\n#   Some further python libraries\n#  RUN conda install -c conda-forge -n $MYCONDA_ENV r-r.utils r-lme4 r-nlme\nRUN conda install -c glemaitre -n $MYCONDA_ENV imbalanced-learn\n#   Install TensorFlow\n#  RUN conda install -c conda-forge -n $MYCONDA_ENV tensorflow=${TENSORFLOW_VERSION}\nRUN conda install -c conda-forge -n $MYCONDA_ENV tensorflow-gpu=${TENSORFLOW_VERSION}\n#   Install Keras\nENV KERAS_BACKEND=\"tensorflow\"\nRUN conda install -c conda-forge -n $MYCONDA_ENV keras=${KERAS_VERSION}\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nRUN conda info --envs\nRUN sed -i 's/theano/tensorflow/g' ${CONDA_ENV_PATH}/envs/${MYCONDA_ENV}/etc/conda/activate.d/keras_activate.sh\nRUN $CONDA_ACTIVATE \\\n && pip install pip==23.1 --upgrade \\\n && pip install git+git://github.com/stared/keras-sequential-ascii.git pydot3==1.0.9\n#  ##########################\n#  # Finishing up details ###\n#  ##########################\nENV HOME=\"/sharedfolder\"\nWORKDIR /sharedfolder\n#   Add a notebook profile.\nRUN mkdir -p -m 700 /sharedfolder/.jupyter/ \\\n && echo \"c.NotebookApp.ip = '*'\" echo \"c.NotebookApp.port = 8888\" echo \"c.NotebookApp.open_browser = False\" echo \"c.MultiKernelManager.default_kernel_name = 'python3'\" echo \"c.NotebookApp.allow_root = True\" echo \"c.NotebookApp.password_required = False\" echo \"c.NotebookApp.token = ''\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py\n#   Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006/tcp 8888/tcp\nCMD [\"source\", \"activate\", \"deeplearn\", \"&&\", \"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04\nMAINTAINER Fernando Andreotti <fernando.andreotti@eng.ox.ac.uk>\n#  Versions used for some packages\nARG CONDA_VERSION=4.3.1\nARG CONDA_ENV\nARG TENSORFLOW_VERSION=1.4*\nARG KERAS_VERSION=2.0.9\nARG PYTHON_VERSION=3.5\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nUSER root\nRUN echo -e \"\\n**********************\\nNVIDIA Driver Version\\n**********************\\n\" \\\n && cat /proc/driver/nvidia/version \\\n && echo -e \"\\n**********************\\nCUDA Version\\n**********************\\n\" \\\n && nvcc -V \\\n && echo -e \"\\n\\nBuilding your Deep Learning Docker Image...\\n\"\n#  Install some dependencies\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV CONDA_ENV_PATH=\"/opt/miniconda\"\nENV MYCONDA_ENV=\"\\\"deeplearn\\\"\"\nENV CONDA_ACTIVATE=\"\\\"source $CONDA_ENV_PATH/bin/activate $MYCONDA_ENV\\\"\"\n#  install essentials\nRUN apt-get update --fix-missing -qq \\\n && apt-get install --no-install-recommends autoconf automake bc build-essential bzip2 cmake curl g++ gfortran git language-pack-en libatlas-dev libatlas3gf-base libcurl4-openssl-dev libffi-dev libfreetype6-dev libglib2.0-0 libhdf5-dev liblcms2-dev libopenblas-dev libssl-dev libtiff5-dev libtool libwebp-dev libzmq3-dev make nano pkg-config software-properties-common unzip wget zlib1g-dev qt5-default libvtk6-dev zlib1g-dev -y\n#  Install miniconda to /opt/miniconda\nRUN curl -LO http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\nRUN /bin/bash Miniconda-latest-Linux-x86_64.sh -p $CONDA_ENV_PATH -b\nRUN rm Miniconda-latest-Linux-x86_64.sh\nENV PATH=\"$CONDA_ENV_PATH/bin:${PATH}\"\nRUN conda update --quiet --yes conda\nENV PATH=\"${CONDA_ENV_PATH}/bin:$PATH\"\n#  Creating Anaconda environment\nRUN conda create -y --name $MYCONDA_ENV python=${PYTHON_VERSION}\n#  Install Python 3 packages\nRUN conda install -c conda-forge -y -n $MYCONDA_ENV 'beautifulsoup4=4.5*' 'graphviz=2.38.0' 'hdf5=1.8.17' 'h5py=2.7*' 'ipython=5.1*' 'ipykernel=4.5*' 'ipywidgets=5.2*' 'jupyter=1.0*' 'lxml=3.8*' 'matplotlib=2.0*' 'notebook=4.3*' 'numpy=1.13*' 'pandas=0.20*' 'pillow=4.2*' 'pip=9.0*' 'pydotplus=2.0.2' 'python=3.5*' 'scipy=0.19*' 'scikit-learn=0.19*' 'scikit-image=0.13*' 'setuptools=36.3*' 'six=1.10*' 'sphinx=1.5*' 'spyder=3.2*' \\\n && conda clean -tipsy\n#  Some further python libraries\n# RUN conda install -c conda-forge -n $MYCONDA_ENV r-r.utils r-lme4 r-nlme\nRUN conda install -c glemaitre -n $MYCONDA_ENV imbalanced-learn\n#  Install TensorFlow\n# RUN conda install -c conda-forge -n $MYCONDA_ENV tensorflow=${TENSORFLOW_VERSION}\nRUN conda install -c conda-forge -n $MYCONDA_ENV tensorflow-gpu=${TENSORFLOW_VERSION}\n#  Install Keras\nENV KERAS_BACKEND=\"tensorflow\"\nRUN conda install -c conda-forge -n $MYCONDA_ENV keras=${KERAS_VERSION}\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nRUN conda info --envs\nRUN sed -i 's/theano/tensorflow/g' ${CONDA_ENV_PATH}/envs/${MYCONDA_ENV}/etc/conda/activate.d/keras_activate.sh\nRUN $CONDA_ACTIVATE \\\n && pip install pip --upgrade \\\n && pip install git+git://github.com/stared/keras-sequential-ascii.git pydot3\n# ##########################\n# # Finishing up details ###\n# ##########################\nENV HOME=\"/sharedfolder\"\nWORKDIR /sharedfolder\n#  Add a notebook profile.\nRUN mkdir -p -m 700 /sharedfolder/.jupyter/ \\\n && echo \"c.NotebookApp.ip = '*'\" echo \"c.NotebookApp.port = 8888\" echo \"c.NotebookApp.open_browser = False\" echo \"c.MultiKernelManager.default_kernel_name = 'python3'\" echo \"c.NotebookApp.allow_root = True\" echo \"c.NotebookApp.password_required = False\" echo \"c.NotebookApp.token = ''\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py\n#  Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006/tcp 8888/tcp\nCMD [\"source\", \"activate\", \"deeplearn\", \"&&\", \"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"f2300d1662ca044aa2acd0cd1ae1d51b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04\nMAINTAINER Fernando Andreotti <fernando.andreotti@eng.ox.ac.uk>\n#   Versions used for some packages\nARG CONDA_VERSION=4.3.1\nARG CONDA_ENV\nARG TENSORFLOW_VERSION=1.4*\nARG KERAS_VERSION=2.0.9\nARG PYTHON_VERSION=3.5\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nUSER root\nRUN echo -e \"\\n**********************\\nNVIDIA Driver Version\\n**********************\\n\" \\\n && cat /proc/driver/nvidia/version \\\n && echo -e \"\\n**********************\\nCUDA Version\\n**********************\\n\" \\\n && nvcc -V \\\n && echo -e \"\\n\\nBuilding your Deep Learning Docker Image...\\n\"\n#   Install some dependencies\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV CONDA_ENV_PATH=\"/opt/miniconda\"\nENV MYCONDA_ENV=\"\\\"deeplearn\\\"\"\nENV CONDA_ACTIVATE=\"\\\"source $CONDA_ENV_PATH/bin/activate $MYCONDA_ENV\\\"\"\n#   install essentials\nRUN apt-get update --fix-missing -qq \\\n && apt-get install --no-install-recommends autoconf automake bc build-essential bzip2 cmake curl g++ gfortran git language-pack-en libatlas-dev libatlas3gf-base libcurl4-openssl-dev libffi-dev libfreetype6-dev libglib2.0-0 libhdf5-dev liblcms2-dev libopenblas-dev libssl-dev libtiff5-dev libtool libwebp-dev libzmq3-dev make nano pkg-config software-properties-common unzip wget zlib1g-dev qt5-default libvtk6-dev zlib1g-dev -y\n#   Install miniconda to /opt/miniconda\nRUN curl -LO http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\nRUN /bin/bash Miniconda-latest-Linux-x86_64.sh -p $CONDA_ENV_PATH -b\nRUN rm Miniconda-latest-Linux-x86_64.sh\nENV PATH=\"$CONDA_ENV_PATH/bin:${PATH}\"\nRUN conda update --quiet --yes conda\nENV PATH=\"${CONDA_ENV_PATH}/bin:$PATH\"\n#   Creating Anaconda environment\nRUN conda create -y --name $MYCONDA_ENV python=${PYTHON_VERSION}\n#   Install Python 3 packages\nRUN conda install -c conda-forge -y -n $MYCONDA_ENV 'beautifulsoup4=4.5*' 'graphviz=2.38.0' 'hdf5=1.8.17' 'h5py=2.7*' 'ipython=5.1*' 'ipykernel=4.5*' 'ipywidgets=5.2*' 'jupyter=1.0*' 'lxml=3.8*' 'matplotlib=2.0*' 'notebook=4.3*' 'numpy=1.13*' 'pandas=0.20*' 'pillow=4.2*' 'pip=9.0*' 'pydotplus=2.0.2' 'python=3.5*' 'scipy=0.19*' 'scikit-learn=0.19*' 'scikit-image=0.13*' 'setuptools=36.3*' 'six=1.10*' 'sphinx=1.5*' 'spyder=3.2*' \\\n && conda clean -tipsy\n#   Some further python libraries\n#  RUN conda install -c conda-forge -n $MYCONDA_ENV r-r.utils r-lme4 r-nlme\nRUN conda install -c glemaitre -n $MYCONDA_ENV imbalanced-learn\n#   Install TensorFlow\n#  RUN conda install -c conda-forge -n $MYCONDA_ENV tensorflow=${TENSORFLOW_VERSION}\nRUN conda install -c conda-forge -n $MYCONDA_ENV tensorflow-gpu=${TENSORFLOW_VERSION}\n#   Install Keras\nENV KERAS_BACKEND=\"tensorflow\"\nRUN conda install -c conda-forge -n $MYCONDA_ENV keras=${KERAS_VERSION}\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nRUN conda info --envs\nRUN sed -i 's/theano/tensorflow/g' ${CONDA_ENV_PATH}/envs/${MYCONDA_ENV}/etc/conda/activate.d/keras_activate.sh\nRUN $CONDA_ACTIVATE \\\n && pip install pip --upgrade \\\n && pip install git+git://github.com/stared/keras-sequential-ascii.git pydot3\n#  ##########################\n#  # Finishing up details ###\n#  ##########################\nENV HOME=\"/sharedfolder\"\nWORKDIR /sharedfolder\n#   Add a notebook profile.\nRUN mkdir -p -m 700 /sharedfolder/.jupyter/ \\\n && echo \"c.NotebookApp.ip = '*'\" echo \"c.NotebookApp.port = 8888\" echo \"c.NotebookApp.open_browser = False\" echo \"c.MultiKernelManager.default_kernel_name = 'python3'\" echo \"c.NotebookApp.allow_root = True\" echo \"c.NotebookApp.password_required = False\" echo \"c.NotebookApp.token = ''\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py >> /sharedfolder/.jupyter/jupyter_notebook_config.py\n#   Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006/tcp 8888/tcp\nCMD [\"source\", \"activate\", \"deeplearn\", \"&&\", \"/bin/bash\"]\n","originalDockerfileUglifiedHash":"5729c7ac5fbe31d93436d9b2837cc211","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/52cb61e2bd912b1161bef0300940ae437d4972d5.dockerfile"}