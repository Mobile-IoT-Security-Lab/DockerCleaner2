{"seed":797610686,"processedDockerfileHash":"a8d821228638fac4cc481913c3305dfe","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   the different stages of this Dockerfile are meant to be built into separate images\n#   https://docs.docker.com/compose/compose-file/#target\nARG PHP_VERSION=7.3\nARG NODE_VERSION=10\nARG NGINX_VERSION=1.16\nFROM php:${PHP_VERSION}-fpm-alpine AS sylius_php\n#   persistent / runtime deps\nRUN apk add acl file gettext git mariadb-client --no-cache\nARG APCU_VERSION=5.1.17\nRUN set -eux ; apk add coreutils freetype-dev icu-dev libjpeg-turbo-dev libpng-dev libtool libwebp-dev libzip-dev mariadb-dev zlib-dev $PHPIZE_DEPS --no-cache --virtual .build-deps ; docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include --with-webp-dir=/usr/include --with-freetype-dir=/usr/include/ ; docker-php-ext-configure zip --with-libzip ; docker-php-ext-install -j$( nproc ;) exif gd intl pdo_mysql zip ; pecl install apcu-${APCU_VERSION} ; pecl clear-cache ; docker-php-ext-enable apcu opcache ; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add $runDeps --no-cache --virtual .sylius-phpexts-rundeps ; apk del .build-deps\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\nCOPY docker/php/php.ini /usr/local/etc/php/php.ini\nCOPY docker/php/php-cli.ini /usr/local/etc/php/php-cli.ini\n#   https://getcomposer.org/doc/03-cli.md#composer-allow-superuser\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nRUN set -eux ; composer global require \"hirak/prestissimo:^0.3\" --prefer-dist --no-progress --no-suggest --classmap-authoritative ; composer clear-cache\nENV PATH=\"${PATH}:/root/.composer/vendor/bin\"\nWORKDIR /srv/sylius\n#   build for production\nARG APP_ENV=prod\n#   prevent the reinstallation of vendors at every changes in the source code\nCOPY composer.json composer.lock symfony.lock ./\nRUN set -eux ; composer install --prefer-dist --no-autoloader --no-scripts --no-progress --no-suggest ; composer clear-cache\n#   copy only specifically what we need\nCOPY .env .env.prod .env.test .env.test_cached ./\nCOPY bin bin/\nCOPY config config/\nCOPY public public/\nCOPY src src/\nCOPY templates templates/\nCOPY translations translations/\nRUN set -eux ; mkdir -p var/cache var/log ; composer dump-autoload --classmap-authoritative ; APP_SECRET='' composer run-script post-install-cmd ; chmod +x bin/console ; sync ; bin/console sylius:install:assets ; bin/console sylius:theme:assets:install public\nVOLUME /srv/sylius/var\nVOLUME /srv/sylius/public/media\nCOPY docker/php/docker-entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/docker-entrypoint\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"php-fpm\"]\nFROM node:${NODE_VERSION}-alpine AS sylius_nodejs\nWORKDIR /srv/sylius\nRUN set -eux ; apk add g++ gcc git make python --no-cache --virtual .build-deps\n#   prevent the reinstallation of vendors at every changes in the source code\nCOPY package.json yarn.lock ./\nRUN set -eux ; yarn install ; yarn cache clean\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/private vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/private/\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/private vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/private/\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/private vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/private/\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/gulpfile.babel.js vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/gulpfile.babel.js\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/gulpfile.babel.js vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/gulpfile.babel.js\nCOPY gulpfile.babel.js .babelrc ./\nRUN set -eux ; GULP_ENV=prod yarn build\nCOPY docker/nodejs/docker-entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/docker-entrypoint\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"yarn\", \"watch\"]\nFROM nginx:${NGINX_VERSION}-alpine AS sylius_nginx\nCOPY docker/nginx/conf.d/default.conf /etc/nginx/conf.d/\nWORKDIR /srv/sylius\nCOPY --from=sylius_php /srv/sylius/public public/\nCOPY --from=sylius_nodejs /srv/sylius/public public/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  the different stages of this Dockerfile are meant to be built into separate images\n#  https://docs.docker.com/compose/compose-file/#target\nARG PHP_VERSION=7.3\nARG NODE_VERSION=10\nARG NGINX_VERSION=1.16\nFROM php:${PHP_VERSION}-fpm-alpine AS sylius_php\n#  persistent / runtime deps\nRUN apk add --no-cache acl file gettext git mariadb-client\nARG APCU_VERSION=5.1.17\nRUN set -eux ; apk add --no-cache --virtual .build-deps $PHPIZE_DEPS coreutils freetype-dev icu-dev libjpeg-turbo-dev libpng-dev libtool libwebp-dev libzip-dev mariadb-dev zlib-dev ; docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include --with-webp-dir=/usr/include --with-freetype-dir=/usr/include/ ; docker-php-ext-configure zip --with-libzip ; docker-php-ext-install -j$( nproc ;) exif gd intl pdo_mysql zip ; pecl install apcu-${APCU_VERSION} ; pecl clear-cache ; docker-php-ext-enable apcu opcache ; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add --no-cache --virtual .sylius-phpexts-rundeps $runDeps ; apk del .build-deps\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\nCOPY docker/php/php.ini /usr/local/etc/php/php.ini\nCOPY docker/php/php-cli.ini /usr/local/etc/php/php-cli.ini\n#  https://getcomposer.org/doc/03-cli.md#composer-allow-superuser\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nRUN set -eux ; composer global require \"hirak/prestissimo:^0.3\" --prefer-dist --no-progress --no-suggest --classmap-authoritative ; composer clear-cache\nENV PATH=\"${PATH}:/root/.composer/vendor/bin\"\nWORKDIR /srv/sylius\n#  build for production\nARG APP_ENV=prod\n#  prevent the reinstallation of vendors at every changes in the source code\nCOPY composer.json composer.lock symfony.lock ./\nRUN set -eux ; composer install --prefer-dist --no-autoloader --no-scripts --no-progress --no-suggest ; composer clear-cache\n#  copy only specifically what we need\nCOPY .env .env.prod .env.test .env.test_cached ./\nCOPY bin bin/\nCOPY config config/\nCOPY public public/\nCOPY src src/\nCOPY templates templates/\nCOPY translations translations/\nRUN set -eux ; mkdir -p var/cache var/log ; composer dump-autoload --classmap-authoritative ; APP_SECRET='' composer run-script post-install-cmd ; chmod +x bin/console ; sync ; bin/console sylius:install:assets ; bin/console sylius:theme:assets:install public\nVOLUME /srv/sylius/var\nVOLUME /srv/sylius/public/media\nCOPY docker/php/docker-entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/docker-entrypoint\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"php-fpm\"]\nFROM node:${NODE_VERSION}-alpine AS sylius_nodejs\nWORKDIR /srv/sylius\nRUN set -eux ; apk add --no-cache --virtual .build-deps g++ gcc git make python\n#  prevent the reinstallation of vendors at every changes in the source code\nCOPY package.json yarn.lock ./\nRUN set -eux ; yarn install ; yarn cache clean\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/private vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/private/\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/private vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/private/\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/private vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/private/\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/gulpfile.babel.js vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/gulpfile.babel.js\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/gulpfile.babel.js vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/gulpfile.babel.js\nCOPY gulpfile.babel.js .babelrc ./\nRUN set -eux ; GULP_ENV=prod yarn build\nCOPY docker/nodejs/docker-entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/docker-entrypoint\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"yarn\", \"watch\"]\nFROM nginx:${NGINX_VERSION}-alpine AS sylius_nginx\nCOPY docker/nginx/conf.d/default.conf /etc/nginx/conf.d/\nWORKDIR /srv/sylius\nCOPY --from=sylius_php /srv/sylius/public public/\nCOPY --from=sylius_nodejs /srv/sylius/public public/\n","injectedSmells":[],"originalDockerfileHash":"29865f7b5aaa84de24e4162e2f8a92be","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   the different stages of this Dockerfile are meant to be built into separate images\n#   https://docs.docker.com/compose/compose-file/#target\nARG PHP_VERSION=7.3\nARG NODE_VERSION=10\nARG NGINX_VERSION=1.16\nFROM php:${PHP_VERSION}-fpm-alpine AS sylius_php\n#   persistent / runtime deps\nRUN apk add --no-cache acl file gettext git mariadb-client\nARG APCU_VERSION=5.1.17\nRUN set -eux ; apk add --no-cache --virtual .build-deps $PHPIZE_DEPS coreutils freetype-dev icu-dev libjpeg-turbo-dev libpng-dev libtool libwebp-dev libzip-dev mariadb-dev zlib-dev ; docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include --with-webp-dir=/usr/include --with-freetype-dir=/usr/include/ ; docker-php-ext-configure zip --with-libzip ; docker-php-ext-install -j$( nproc ;) exif gd intl pdo_mysql zip ; pecl install apcu-${APCU_VERSION} ; pecl clear-cache ; docker-php-ext-enable apcu opcache ; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add --no-cache --virtual .sylius-phpexts-rundeps $runDeps ; apk del .build-deps\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\nCOPY docker/php/php.ini /usr/local/etc/php/php.ini\nCOPY docker/php/php-cli.ini /usr/local/etc/php/php-cli.ini\n#   https://getcomposer.org/doc/03-cli.md#composer-allow-superuser\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nRUN set -eux ; composer global require \"hirak/prestissimo:^0.3\" --prefer-dist --no-progress --no-suggest --classmap-authoritative ; composer clear-cache\nENV PATH=\"${PATH}:/root/.composer/vendor/bin\"\nWORKDIR /srv/sylius\n#   build for production\nARG APP_ENV=prod\n#   prevent the reinstallation of vendors at every changes in the source code\nCOPY composer.json composer.lock symfony.lock ./\nRUN set -eux ; composer install --prefer-dist --no-autoloader --no-scripts --no-progress --no-suggest ; composer clear-cache\n#   copy only specifically what we need\nCOPY .env .env.prod .env.test .env.test_cached ./\nCOPY bin bin/\nCOPY config config/\nCOPY public public/\nCOPY src src/\nCOPY templates templates/\nCOPY translations translations/\nRUN set -eux ; mkdir -p var/cache var/log ; composer dump-autoload --classmap-authoritative ; APP_SECRET='' composer run-script post-install-cmd ; chmod +x bin/console ; sync ; bin/console sylius:install:assets ; bin/console sylius:theme:assets:install public\nVOLUME /srv/sylius/var\nVOLUME /srv/sylius/public/media\nCOPY docker/php/docker-entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/docker-entrypoint\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"php-fpm\"]\nFROM node:${NODE_VERSION}-alpine AS sylius_nodejs\nWORKDIR /srv/sylius\nRUN set -eux ; apk add --no-cache --virtual .build-deps g++ gcc git make python\n#   prevent the reinstallation of vendors at every changes in the source code\nCOPY package.json yarn.lock ./\nRUN set -eux ; yarn install ; yarn cache clean\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/private vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/private/\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/private vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/private/\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/private vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/private/\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/gulpfile.babel.js vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/gulpfile.babel.js\nCOPY --from=sylius_php /srv/sylius/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/gulpfile.babel.js vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/gulpfile.babel.js\nCOPY gulpfile.babel.js .babelrc ./\nRUN set -eux ; GULP_ENV=prod yarn build\nCOPY docker/nodejs/docker-entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/docker-entrypoint\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"yarn\", \"watch\"]\nFROM nginx:${NGINX_VERSION}-alpine AS sylius_nginx\nCOPY docker/nginx/conf.d/default.conf /etc/nginx/conf.d/\nWORKDIR /srv/sylius\nCOPY --from=sylius_php /srv/sylius/public public/\nCOPY --from=sylius_nodejs /srv/sylius/public public/\n","originalDockerfileUglifiedHash":"6ddcea4fb97500f33c68c0cb61f8b1b1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0eb6a74e4c7544dfce06a064a1df5052ebdd6c99.dockerfile"}