{"seed":2383078213,"processedDockerfileHash":"339a61cabecc2602eb049ab8e718527e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ------------------------------------------------------------------------------\n#   We have 2 ways to deploy RNAcentral in production:\n#   bare-metal managed (no root permissions) CentOS 6 VMs and Kubernetes.\n#\n#   This dockerfile is meant to mimic the environment of\n#   bare-metal CentOS VMs in order to reate a reproducible\n#   installation of the RNAcentral website.\n#\n#   All local dependencies are installed manually to mirror the\n#   bare-metal production setup on EBI VMs, where Docker or yum\n#   are not available.\n#\n#  -------------------------------------------------------------------------------\nFROM centos:6.10\nRUN yum install -y curl gcc git httpd httpd-devel libaio \"nc.x86_64\" openssl openssl-devel tar unzip wget zlib-devel gcc-c++ make\nRUN mkdir /rnacentral\nRUN mkdir /rnacentral/local\nRUN mkdir /rnacentral/static\nENV LOC=\"/rnacentral/local\"\n#   Install Python\n#   NOTE: Python-2.7.11 and python-2.7.11 are DIFFERENT folders, the former contains the sources, the later - binaries\nRUN cd $LOC \\\n && curl -OL http://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz \\\n && tar -zxvf Python-2.7.11.tgz \\\n && cd Python-2.7.11 \\\n && PREFIX=$LOC/python-2.7.11/ \\\n && export LD_RUN_PATH=$PREFIX/lib \\\n && ./configure --prefix=$PREFIX --enable-shared \\\n && make \\\n && make install \\\n && cd $LOC \\\n && rm -Rf Python-2.7.11 \\\n && rm Python-2.7.11.tgz\n#   Install virtualenv\nRUN cd $LOC \\\n && curl -OL https://pypi.python.org/packages/source/v/virtualenv/virtualenv-15.0.0.tar.gz \\\n && tar -zxvf virtualenv-15.0.0.tar.gz \\\n && cd virtualenv-15.0.0 \\\n && $LOC/python-2.7.11/bin/python setup.py install \\\n && cd $LOC \\\n && rm -Rf virtualenv-15.0.0.tar.gz \\\n && rm -Rf virtualenv-15.0.0\n#   Create RNAcentral virtual environment\nRUN cd $LOC \\\n && mkdir virtualenvs \\\n && cd virtualenvs \\\n && $LOC/python-2.7.11/bin/virtualenv RNAcentral --python=$LOC/python-2.7.11/bin/python\n#   Install Redis\nRUN cd $LOC \\\n && curl -OL http://download.redis.io/redis-stable.tar.gz \\\n && tar -xvzf redis-stable.tar.gz \\\n && cd redis-stable \\\n && make \\\n && cd $LOC \\\n && rm redis-stable.tar.gz \\\n && mv redis-stable redis\n#   Install libevent (memcached requirement)\nRUN cd $LOC \\\n && curl --tlsv1 -OL https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz \\\n && tar -zxvf libevent-2.0.21-stable.tar.gz \\\n && cd libevent-2.0.21-stable \\\n && ./configure --prefix=$LOC/libevent \\\n && make \\\n && make install \\\n && cd $LOC \\\n && rm -Rf libevent-2.0.21-stable \\\n && rm libevent-2.0.21-stable.tar.gz\n#   Install memcached (requires libevent)\nRUN cd $LOC \\\n && curl -OL http://www.memcached.org/files/memcached-1.4.17.tar.gz \\\n && tar -zxvf memcached-1.4.17.tar.gz \\\n && cd memcached-1.4.17 \\\n && ./configure --prefix=$LOC/memcached --with-libevent=$LOC/libevent/ \\\n && make \\\n && make install \\\n && cd $LOC \\\n && rm -Rf memcached-1.4.17 \\\n && rm memcached-1.4.17.tar.gz\n#   Create a user for memcached\nRUN adduser -g root xfm_adm\n#   Install Infernal\nRUN cd $LOC \\\n && curl -OL http://eddylab.org/infernal/infernal-1.1.1.tar.gz \\\n && tar -xvzf infernal-1.1.1.tar.gz \\\n && cd infernal-1.1.1 \\\n && ./configure --prefix=$LOC/infernal-1.1.1 \\\n && make \\\n && make install \\\n && cd easel \\\n && make install \\\n && cd $LOC \\\n && rm infernal-1.1.1.tar.gz\n#   Install mod_wsgi\nRUN cd $LOC \\\n && mkdir httpd \\\n && mkdir httpd/modules \\\n && curl --tlsv1 -L -o mod_wsgi-3.4.tar.gz https://github.com/GrahamDumpleton/mod_wsgi/archive/3.4.tar.gz \\\n && tar -zxvf mod_wsgi-3.4.tar.gz \\\n && cd mod_wsgi-3.4 \\\n && export LD_RUN_PATH=$LOC/python-2.7.11/lib \\\n && export LD_LIBRARY_PATH=$LOC/python-2.7.11/lib/:$LD_LIBRARY_PATH \\\n && ./configure --with-python=$LOC/python-2.7.11/bin/python \\\n && make \\\n && mv .libs/mod_wsgi.so $LOC/httpd/modules \\\n && cd $LOC \\\n && rm -Rf mod_wsgi-3.4 \\\n && rm mod_wsgi-3.4.tar.gz\n#   Install UCSC utilities\nRUN cd $LOC \\\n && mkdir ucsc \\\n && cd ucsc \\\n && wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/fetchChromSizes \\\n && wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedToBigBed \\\n && chmod o+x fetchChromSizes \\\n && chmod o+x bedToBigBed\n#   Define container environment variables\nENV RNACENTRAL_HOME=\"/rnacentral/rnacentral-webcode\"\nENV RNACENTRAL_LOCAL=\"/rnacentral/local\"\n#   Install Django requirements\nCOPY rnacentral/requirements.txt $RNACENTRAL_HOME/rnacentral/\nRUN source $LOC/virtualenvs/RNAcentral/bin/activate \\\n && pip install -r $RNACENTRAL_HOME/rnacentral/requirements.txt\n#   Install Node.js\nRUN curl -sL https://rpm.nodesource.com/setup_6.x | bash -\nRUN yum install -y nodejs\n#   Install NPM dependencies\nCOPY rnacentral/portal/static/package.json $RNACENTRAL_HOME/rnacentral/portal/static/\nRUN cd $RNACENTRAL_HOME/rnacentral/portal/static \\\n && npm install --only=production\n#   Expose a container port where the website is served\nEXPOSE 8000/tcp\n#   Start up the app\nENTRYPOINT source $LOC/virtualenvs/RNAcentral/bin/activate \\\n && supervisord -c $RNACENTRAL_HOME/supervisor/supervisor.conf \\\n && python $RNACENTRAL_HOME/rnacentral/manage.py runserver 0.0.0.0:8000\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ------------------------------------------------------------------------------\n#  We have 2 ways to deploy RNAcentral in production:\n#  bare-metal managed (no root permissions) CentOS 6 VMs and Kubernetes.\n#\n#  This dockerfile is meant to mimic the environment of\n#  bare-metal CentOS VMs in order to reate a reproducible\n#  installation of the RNAcentral website.\n#\n#  All local dependencies are installed manually to mirror the\n#  bare-metal production setup on EBI VMs, where Docker or yum\n#  are not available.\n#\n# -------------------------------------------------------------------------------\nFROM centos:6.10\nRUN yum install -y curl gcc git httpd httpd-devel libaio \"nc.x86_64\" openssl openssl-devel tar unzip wget zlib-devel gcc-c++ make\nRUN mkdir /rnacentral\nRUN mkdir /rnacentral/local\nRUN mkdir /rnacentral/static\nENV LOC=\"/rnacentral/local\"\n#  Install Python\n#  NOTE: Python-2.7.11 and python-2.7.11 are DIFFERENT folders, the former contains the sources, the later - binaries\nRUN cd $LOC \\\n && curl -OL http://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz \\\n && tar -zxvf Python-2.7.11.tgz \\\n && cd Python-2.7.11 \\\n && PREFIX=$LOC/python-2.7.11/ \\\n && export LD_RUN_PATH=$PREFIX/lib \\\n && ./configure --prefix=$PREFIX --enable-shared \\\n && make \\\n && make install \\\n && cd $LOC \\\n && rm -Rf Python-2.7.11 \\\n && rm Python-2.7.11.tgz\n#  Install virtualenv\nRUN cd $LOC \\\n && curl -OL https://pypi.python.org/packages/source/v/virtualenv/virtualenv-15.0.0.tar.gz \\\n && tar -zxvf virtualenv-15.0.0.tar.gz \\\n && cd virtualenv-15.0.0 \\\n && $LOC/python-2.7.11/bin/python setup.py install \\\n && cd $LOC \\\n && rm -Rf virtualenv-15.0.0.tar.gz \\\n && rm -Rf virtualenv-15.0.0\n#  Create RNAcentral virtual environment\nRUN cd $LOC \\\n && mkdir virtualenvs \\\n && cd virtualenvs \\\n && $LOC/python-2.7.11/bin/virtualenv RNAcentral --python=$LOC/python-2.7.11/bin/python\n#  Install Redis\nRUN cd $LOC \\\n && curl -OL http://download.redis.io/redis-stable.tar.gz \\\n && tar -xvzf redis-stable.tar.gz \\\n && cd redis-stable \\\n && make \\\n && cd $LOC \\\n && rm redis-stable.tar.gz \\\n && mv redis-stable redis\n#  Install libevent (memcached requirement)\nRUN cd $LOC \\\n && curl --tlsv1 -OL https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz \\\n && tar -zxvf libevent-2.0.21-stable.tar.gz \\\n && cd libevent-2.0.21-stable \\\n && ./configure --prefix=$LOC/libevent \\\n && make \\\n && make install \\\n && cd $LOC \\\n && rm -Rf libevent-2.0.21-stable \\\n && rm libevent-2.0.21-stable.tar.gz\n#  Install memcached (requires libevent)\nRUN cd $LOC \\\n && curl -OL http://www.memcached.org/files/memcached-1.4.17.tar.gz \\\n && tar -zxvf memcached-1.4.17.tar.gz \\\n && cd memcached-1.4.17 \\\n && ./configure --prefix=$LOC/memcached --with-libevent=$LOC/libevent/ \\\n && make \\\n && make install \\\n && cd $LOC \\\n && rm -Rf memcached-1.4.17 \\\n && rm memcached-1.4.17.tar.gz\n#  Create a user for memcached\nRUN adduser -g root xfm_adm\n#  Install Infernal\nRUN cd $LOC \\\n && curl -OL http://eddylab.org/infernal/infernal-1.1.1.tar.gz \\\n && tar -xvzf infernal-1.1.1.tar.gz \\\n && cd infernal-1.1.1 \\\n && ./configure --prefix=$LOC/infernal-1.1.1 \\\n && make \\\n && make install \\\n && cd easel \\\n && make install \\\n && cd $LOC \\\n && rm infernal-1.1.1.tar.gz\n#  Install mod_wsgi\nRUN cd $LOC \\\n && mkdir httpd \\\n && mkdir httpd/modules \\\n && curl --tlsv1 -L -o mod_wsgi-3.4.tar.gz https://github.com/GrahamDumpleton/mod_wsgi/archive/3.4.tar.gz \\\n && tar -zxvf mod_wsgi-3.4.tar.gz \\\n && cd mod_wsgi-3.4 \\\n && export LD_RUN_PATH=$LOC/python-2.7.11/lib \\\n && export LD_LIBRARY_PATH=$LOC/python-2.7.11/lib/:$LD_LIBRARY_PATH \\\n && ./configure --with-python=$LOC/python-2.7.11/bin/python \\\n && make \\\n && mv .libs/mod_wsgi.so $LOC/httpd/modules \\\n && cd $LOC \\\n && rm -Rf mod_wsgi-3.4 \\\n && rm mod_wsgi-3.4.tar.gz\n#  Install UCSC utilities\nRUN cd $LOC \\\n && mkdir ucsc \\\n && cd ucsc \\\n && wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/fetchChromSizes \\\n && wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedToBigBed \\\n && chmod o+x fetchChromSizes \\\n && chmod o+x bedToBigBed\n#  Define container environment variables\nENV RNACENTRAL_HOME=\"/rnacentral/rnacentral-webcode\"\nENV RNACENTRAL_LOCAL=\"/rnacentral/local\"\n#  Install Django requirements\nADD rnacentral/requirements.txt $RNACENTRAL_HOME/rnacentral/\nRUN source $LOC/virtualenvs/RNAcentral/bin/activate \\\n && pip install -r $RNACENTRAL_HOME/rnacentral/requirements.txt\n#  Install Node.js\nRUN curl -sL https://rpm.nodesource.com/setup_6.x | bash -\nRUN yum install -y nodejs\n#  Install NPM dependencies\nADD rnacentral/portal/static/package.json $RNACENTRAL_HOME/rnacentral/portal/static/\nRUN cd $RNACENTRAL_HOME/rnacentral/portal/static \\\n && npm install --only=production\n#  Expose a container port where the website is served\nEXPOSE 8000/tcp\n#  Start up the app\nENTRYPOINT source $LOC/virtualenvs/RNAcentral/bin/activate \\\n && supervisord -c $RNACENTRAL_HOME/supervisor/supervisor.conf \\\n && python $RNACENTRAL_HOME/rnacentral/manage.py runserver 0.0.0.0:8000\n","injectedSmells":[],"originalDockerfileHash":"0908e836c196228f48e9a8d38e0ae345","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ------------------------------------------------------------------------------\n#   We have 2 ways to deploy RNAcentral in production:\n#   bare-metal managed (no root permissions) CentOS 6 VMs and Kubernetes.\n#\n#   This dockerfile is meant to mimic the environment of\n#   bare-metal CentOS VMs in order to reate a reproducible\n#   installation of the RNAcentral website.\n#\n#   All local dependencies are installed manually to mirror the\n#   bare-metal production setup on EBI VMs, where Docker or yum\n#   are not available.\n#\n#  -------------------------------------------------------------------------------\nFROM centos:6.10\nRUN yum install -y curl gcc git httpd httpd-devel libaio \"nc.x86_64\" openssl openssl-devel tar unzip wget zlib-devel gcc-c++ make\nRUN mkdir /rnacentral\nRUN mkdir /rnacentral/local\nRUN mkdir /rnacentral/static\nENV LOC=\"/rnacentral/local\"\n#   Install Python\n#   NOTE: Python-2.7.11 and python-2.7.11 are DIFFERENT folders, the former contains the sources, the later - binaries\nRUN cd $LOC \\\n && curl -OL http://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz \\\n && tar -zxvf Python-2.7.11.tgz \\\n && cd Python-2.7.11 \\\n && PREFIX=$LOC/python-2.7.11/ \\\n && export LD_RUN_PATH=$PREFIX/lib \\\n && ./configure --prefix=$PREFIX --enable-shared \\\n && make \\\n && make install \\\n && cd $LOC \\\n && rm -Rf Python-2.7.11 \\\n && rm Python-2.7.11.tgz\n#   Install virtualenv\nRUN cd $LOC \\\n && curl -OL https://pypi.python.org/packages/source/v/virtualenv/virtualenv-15.0.0.tar.gz \\\n && tar -zxvf virtualenv-15.0.0.tar.gz \\\n && cd virtualenv-15.0.0 \\\n && $LOC/python-2.7.11/bin/python setup.py install \\\n && cd $LOC \\\n && rm -Rf virtualenv-15.0.0.tar.gz \\\n && rm -Rf virtualenv-15.0.0\n#   Create RNAcentral virtual environment\nRUN cd $LOC \\\n && mkdir virtualenvs \\\n && cd virtualenvs \\\n && $LOC/python-2.7.11/bin/virtualenv RNAcentral --python=$LOC/python-2.7.11/bin/python\n#   Install Redis\nRUN cd $LOC \\\n && curl -OL http://download.redis.io/redis-stable.tar.gz \\\n && tar -xvzf redis-stable.tar.gz \\\n && cd redis-stable \\\n && make \\\n && cd $LOC \\\n && rm redis-stable.tar.gz \\\n && mv redis-stable redis\n#   Install libevent (memcached requirement)\nRUN cd $LOC \\\n && curl --tlsv1 -OL https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz \\\n && tar -zxvf libevent-2.0.21-stable.tar.gz \\\n && cd libevent-2.0.21-stable \\\n && ./configure --prefix=$LOC/libevent \\\n && make \\\n && make install \\\n && cd $LOC \\\n && rm -Rf libevent-2.0.21-stable \\\n && rm libevent-2.0.21-stable.tar.gz\n#   Install memcached (requires libevent)\nRUN cd $LOC \\\n && curl -OL http://www.memcached.org/files/memcached-1.4.17.tar.gz \\\n && tar -zxvf memcached-1.4.17.tar.gz \\\n && cd memcached-1.4.17 \\\n && ./configure --prefix=$LOC/memcached --with-libevent=$LOC/libevent/ \\\n && make \\\n && make install \\\n && cd $LOC \\\n && rm -Rf memcached-1.4.17 \\\n && rm memcached-1.4.17.tar.gz\n#   Create a user for memcached\nRUN adduser -g root xfm_adm\n#   Install Infernal\nRUN cd $LOC \\\n && curl -OL http://eddylab.org/infernal/infernal-1.1.1.tar.gz \\\n && tar -xvzf infernal-1.1.1.tar.gz \\\n && cd infernal-1.1.1 \\\n && ./configure --prefix=$LOC/infernal-1.1.1 \\\n && make \\\n && make install \\\n && cd easel \\\n && make install \\\n && cd $LOC \\\n && rm infernal-1.1.1.tar.gz\n#   Install mod_wsgi\nRUN cd $LOC \\\n && mkdir httpd \\\n && mkdir httpd/modules \\\n && curl --tlsv1 -L -o mod_wsgi-3.4.tar.gz https://github.com/GrahamDumpleton/mod_wsgi/archive/3.4.tar.gz \\\n && tar -zxvf mod_wsgi-3.4.tar.gz \\\n && cd mod_wsgi-3.4 \\\n && export LD_RUN_PATH=$LOC/python-2.7.11/lib \\\n && export LD_LIBRARY_PATH=$LOC/python-2.7.11/lib/:$LD_LIBRARY_PATH \\\n && ./configure --with-python=$LOC/python-2.7.11/bin/python \\\n && make \\\n && mv .libs/mod_wsgi.so $LOC/httpd/modules \\\n && cd $LOC \\\n && rm -Rf mod_wsgi-3.4 \\\n && rm mod_wsgi-3.4.tar.gz\n#   Install UCSC utilities\nRUN cd $LOC \\\n && mkdir ucsc \\\n && cd ucsc \\\n && wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/fetchChromSizes \\\n && wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedToBigBed \\\n && chmod o+x fetchChromSizes \\\n && chmod o+x bedToBigBed\n#   Define container environment variables\nENV RNACENTRAL_HOME=\"/rnacentral/rnacentral-webcode\"\nENV RNACENTRAL_LOCAL=\"/rnacentral/local\"\n#   Install Django requirements\nADD rnacentral/requirements.txt $RNACENTRAL_HOME/rnacentral/\nRUN source $LOC/virtualenvs/RNAcentral/bin/activate \\\n && pip install -r $RNACENTRAL_HOME/rnacentral/requirements.txt\n#   Install Node.js\nRUN curl -sL https://rpm.nodesource.com/setup_6.x | bash -\nRUN yum install -y nodejs\n#   Install NPM dependencies\nADD rnacentral/portal/static/package.json $RNACENTRAL_HOME/rnacentral/portal/static/\nRUN cd $RNACENTRAL_HOME/rnacentral/portal/static \\\n && npm install --only=production\n#   Expose a container port where the website is served\nEXPOSE 8000/tcp\n#   Start up the app\nENTRYPOINT source $LOC/virtualenvs/RNAcentral/bin/activate \\\n && supervisord -c $RNACENTRAL_HOME/supervisor/supervisor.conf \\\n && python $RNACENTRAL_HOME/rnacentral/manage.py runserver 0.0.0.0:8000\n","originalDockerfileUglifiedHash":"5a591e1eb5fcf76d54e6f0c8c0644c55","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b91495bf4f3113f692e42f75a0fc522eb314bd0b.dockerfile"}