{"seed":1455788299,"processedDockerfileHash":"a5deb8ebfcc0118c29db5d57f1ecb3d8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  Required environment variables\n#  eums.environment => name corresponding with the different settings files e.g. qa, snap, staging, test\n#    Base OS\nFROM ubuntu:14.04\nMAINTAINER eums <eums@thoughtworks.com>\n#  #############################################################################\n#  # Change policy\n#  #############################################################################\nRUN echo exit 0 > /usr/sbin/policy-rc.d\nRUN chmod +x /usr/sbin/policy-rc.d\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 curl=7.35.0-1ubuntu2.20 build-essential=11.6ubuntu6 libpq-dev=9.3.24-0ubuntu0.14.04 -y\n#  #############################################################################\n#  # Python 2.7.9 Pre-requisites\n#  #############################################################################\n#   remove several traces of debian python\nRUN apt-get purge -y python.*\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"en_US\"\n#  The properties below are not used as parameters to facilitate docker caching and faster builds\n#  They have been left here more as doc so be sure to update them if you change the version\nENV PYTHON_VERSION=\"2.7.9\"\n#   gpg: key 18ADD4FF: public key \"Benjamin Peterson <benjamin@python.org>\" imported\nRUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\nRUN set -x \\\n && mkdir -p /usr/src/python \\\n && curl -SLO \"https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz\" \\\n && curl -SLO \"https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz.asc\"\nRUN gpg --verify Python-2.7.9.tar.xz.asc \\\n && tar -xJC /usr/src/python --strip-components=1 -f Python-2.7.9.tar.xz \\\n && rm Python-2.7.9.tar.xz* \\\n && cd /usr/src/python \\\n && ./configure --enable-shared --enable-unicode=ucs4 \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig\nRUN curl -SL 'https://bootstrap.pypa.io/get-pip.py' | python2 \\\n && find /usr/local\nRUN pip install virtualenv==20.21.0\nRUN apt-get update \\\n && apt-get install --no-install-recommends supervisor=3.0b2-1ubuntu0.1 openssh-server=1:6.6p1-2ubuntu2.13 postgresql=9.3+154ubuntu1.1 postgresql-contrib=9.3+154ubuntu1.1 nodejs=0.10.25~dfsg2-2ubuntu1.2 nginx=1.4.6-1ubuntu3.9 redis-server=2:2.8.4-2ubuntu0.2 git=1:1.9.1-1ubuntu0.10 -y\nRUN mkdir -p /var/lock/apache2 /var/run/apache2 /var/run/sshd /var/log/supervisor\nRUN echo \"root:password\" | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#  #############################################################################\n#  # install NodeJS\n#  #############################################################################\n#   verify gpg and sha256: http://nodejs.org/dist/v0.10.30/SHASUMS256.txt.asc\nRUN gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D 114F43EE0176B71C7BC219DD50A3051F888C628D\nRUN curl -SLO \"http://nodejs.org/dist/v0.10.21/node-v0.10.21-linux-x64.tar.gz\"\nRUN curl -SLO \"http://nodejs.org/dist/v0.10.21/SHASUMS256.txt.asc\"\nRUN gpg --verify SHASUMS256.txt.asc\nRUN grep \" node-v0.10.21-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c -\nRUN tar -xzf \"node-v0.10.21-linux-x64.tar.gz\" -C /usr/local --strip-components=1\nRUN curl -SLO \"http://nodejs.org/dist/v0.10.21/SHASUMS256.txt.asc\"\nRUN rm \"node-v0.10.21-linux-x64.tar.gz\" SHASUMS256.txt.asc\nRUN npm install npm@1.4.28 -g\nRUN npm install npm@\"1.3.11\" -g\nRUN npm install grunt-cli@0.1.13 -g\nRUN npm cache clear\n#  #############################################################################\n#  # install MongoDB\n#  #############################################################################\nRUN sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\nRUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list\nRUN sudo apt-get update\nRUN apt-get install --no-install-recommends mongodb-org=2.6.5 mongodb-org-server=2.6.5 mongodb-org-shell=2.6.5 mongodb-org-mongos=2.6.5 mongodb-org-tools=2.6.5 -y\nENV LC_ALL=\"C\"\n#  #############################################################################\n#  # install Elasticsearch\n#  #############################################################################\n#   Install Java\nRUN sudo rm -fr /var/lib/apt/lists\nRUN sudo apt-get update\nRUN sudo apt-get install -y software-properties-common\nRUN sudo apt-add-repository ppa:webupd8team/java\nRUN sudo apt-get update\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections\nRUN echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\nRUN sudo apt-get install -y oracle-java8-installer\n#   Add elasticsearch repository to apt-get repositories\nRUN mkdir -p /opt/downloads\nRUN cd /opt/downloads \\\n && curl -SsfLO \"https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.7.3.deb\"\n#   Install Elasticsearch\nRUN dpkg -i /opt/downloads/elasticsearch-1.7.3.deb\n#   Enable Cross-site Origin Requests to Elasticsearch\nRUN sudo echo 'http.cors.enabled : true' >> /etc/elasticsearch/elasticsearch.yml\n#   Set MAX_MAP_COUNT configuration off. When on, an error is returned because docker is a readonly OS\nRUN sed -i '/sysctl -q -w vm.max_map_count/ s/^#*/true\\n#/' /etc/init.d/elasticsearch\n#   Set elasticsearch to run with root user\nRUN sed -i '/^ES_USER=el/ s/^#*/true\\nES_USER=root\\n#/' /etc/init.d/elasticsearch\nRUN sed -i '/^ES_GROUP=el/ s/^#*/true\\nES_GROUP=root\\n#/' /etc/init.d/elasticsearch\n#   Enable Elasticsearch service to start on boot\nRUN sudo update-rc.d elasticsearch defaults 95 10\n#  #############################################################################\n#   Install UWSGI and config\n#  #############################################################################\nRUN apt-get install --no-install-recommends python-dev=2.7.5-5ubuntu3 -y\nRUN pip install uwsgi==2.0.21\nCOPY ./eums/scripts/packaging/eums.uwsgi.ini /etc/uwsgi/sites/eums.uwsgi.ini\nCOPY ./eums/scripts/packaging/nginx.config /etc/nginx/nginx.conf\nCOPY ./eums/scripts/packaging/eums.nginx.config /etc/nginx/sites-available/eums\nRUN ln -sf /etc/nginx/sites-available/eums /etc/nginx/sites-enabled/eums\nRUN rm /etc/nginx/sites-enabled/default\n#  #############################################################################\n#  # Install dependenices\n#  #############################################################################\nCOPY ./eums/requirements.txt /opt/app/eums/requirements.txt\nRUN virtualenv ~/.virtualenvs/eums\nRUN /bin/bash -c \"source ~/.virtualenvs/eums/bin/activate \\\n && cd /opt/app/eums \\\n && pip install -r requirements.txt\"\nCOPY ./contacts/package.json /opt/app/contacts/package.json\nRUN cd /opt/app/contacts/ \\\n && npm install fibers@1.0.15 \\\n && npm install\nCOPY ./eums/eums/client/package.json /opt/app/eums/eums/client/package.json\nRUN cd /opt/app/eums/eums/client \\\n && npm install\n#  RUN cd /opt/app/eums/eums/client && npm install -g bower\n#  COPY ./eums/eums/client/bower.json /opt/app/eums/eums/client/bower.json\n#  RUN cd /opt/app/eums/eums/client && bower install --allow-root\nCOPY ./eums/eums/client/bower_components /opt/app/eums/eums/client/bower_components/\nRUN cd /opt/app/eums/eums/client \\\n && npm install grunt-cli@1.4.3 -g\n#  #############################################################################\n#  # Add the codebase to the image\n#  #############################################################################\nCOPY ./eums /opt/app/eums\nCOPY ./contacts /opt/app/contacts\nCOPY ./contacts/scripts/startContacts.sh /opt/scripts/startContacts.sh\nCOPY ./eums/scripts/deployment/startPostgres.sh /opt/scripts/startPostgres.sh\nCOPY ./eums/scripts/deployment/buildConfigs.sh /opt/scripts/buildConfigs.sh\nCOPY ./eums/scripts/deployment/celery.sh /opt/scripts/celery.sh\nCOPY ./eums/scripts/deployment/startProcessListener.sh /opt/scripts/startProcessListener.sh\nCOPY ./eums/scripts/setupmap /opt/scripts/setupmap\nRUN chmod a+x -R /opt/scripts\nRUN chmod a+x -R /opt/app/eums/scripts\nCOPY ./eums/scripts/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY ./eums/scripts/supervisor/celeryd.conf /etc/supervisor/conf.d/celeryd.conf\nRUN mkdir /var/log/celery\nRUN touch /var/log/celery/workers.log\nVOLUME /var/lib/postgresql\nVOLUME /data\nEXPOSE 22/tcp 80/tcp\n#  #############################################################################\n#  # Entrypoint and command parameters\n#  #############################################################################\nCMD [\"/usr/bin/supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# Required environment variables\n# eums.environment => name corresponding with the different settings files e.g. qa, snap, staging, test\n#   Base OS\nFROM ubuntu:14.04\nMAINTAINER eums <eums@thoughtworks.com>\n# #############################################################################\n# # Change policy\n# #############################################################################\nRUN echo exit 0 > /usr/sbin/policy-rc.d\nRUN chmod +x /usr/sbin/policy-rc.d\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install wget curl build-essential libpq-dev -y\n# #############################################################################\n# # Python 2.7.9 Pre-requisites\n# #############################################################################\n#  remove several traces of debian python\nRUN apt-get purge -y python.*\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"en_US\"\n# The properties below are not used as parameters to facilitate docker caching and faster builds\n# They have been left here more as doc so be sure to update them if you change the version\nENV PYTHON_VERSION=\"2.7.9\"\n#  gpg: key 18ADD4FF: public key \"Benjamin Peterson <benjamin@python.org>\" imported\nRUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\nRUN set -x \\\n && mkdir -p /usr/src/python \\\n && curl -SLO \"https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz\" \\\n && curl -SLO \"https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz.asc\"\nRUN gpg --verify Python-2.7.9.tar.xz.asc \\\n && tar -xJC /usr/src/python --strip-components=1 -f Python-2.7.9.tar.xz \\\n && rm Python-2.7.9.tar.xz* \\\n && cd /usr/src/python \\\n && ./configure --enable-shared --enable-unicode=ucs4 \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig\nRUN curl -SL 'https://bootstrap.pypa.io/get-pip.py' | python2 \\\n && find /usr/local ( -type d -a -name test -o -name tests ) -o ( -type f -a -name '*.pyc' -o -name '*.pyo' ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python\nRUN pip install virtualenv\nRUN apt-get update \\\n && apt-get install supervisor openssh-server postgresql postgresql-contrib nodejs nginx redis-server git -y\nRUN mkdir -p /var/lock/apache2 /var/run/apache2 /var/run/sshd /var/log/supervisor\nRUN echo \"root:password\" | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n#  SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n# #############################################################################\n# # install NodeJS\n# #############################################################################\n#  verify gpg and sha256: http://nodejs.org/dist/v0.10.30/SHASUMS256.txt.asc\nRUN gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D 114F43EE0176B71C7BC219DD50A3051F888C628D\nRUN curl -SLO \"http://nodejs.org/dist/v0.10.21/node-v0.10.21-linux-x64.tar.gz\"\nRUN curl -SLO \"http://nodejs.org/dist/v0.10.21/SHASUMS256.txt.asc\"\nRUN gpg --verify SHASUMS256.txt.asc\nRUN grep \" node-v0.10.21-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c -\nRUN tar -xzf \"node-v0.10.21-linux-x64.tar.gz\" -C /usr/local --strip-components=1\nRUN curl -SLO \"http://nodejs.org/dist/v0.10.21/SHASUMS256.txt.asc\"\nRUN rm \"node-v0.10.21-linux-x64.tar.gz\" SHASUMS256.txt.asc\nRUN npm install npm@1.4.28 -g\nRUN npm install npm@\"1.3.11\" -g\nRUN npm install grunt-cli@0.1.13 -g\nRUN npm cache clear\n# #############################################################################\n# # install MongoDB\n# #############################################################################\nRUN sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\nRUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list\nRUN sudo apt-get update\nRUN apt-get install mongodb-org=2.6.5 mongodb-org-server=2.6.5 mongodb-org-shell=2.6.5 mongodb-org-mongos=2.6.5 mongodb-org-tools=2.6.5 -y\nENV LC_ALL=\"C\"\n# #############################################################################\n# # install Elasticsearch\n# #############################################################################\n#  Install Java\nRUN sudo rm -fr /var/lib/apt/lists\nRUN sudo apt-get update\nRUN sudo apt-get install -y software-properties-common\nRUN sudo apt-add-repository ppa:webupd8team/java\nRUN sudo apt-get update\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections\nRUN echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\nRUN sudo apt-get install -y oracle-java8-installer\n#  Add elasticsearch repository to apt-get repositories\nRUN mkdir -p /opt/downloads\nRUN cd /opt/downloads \\\n && curl -SsfLO \"https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.7.3.deb\"\n#  Install Elasticsearch\nRUN dpkg -i /opt/downloads/elasticsearch-1.7.3.deb\n#  Enable Cross-site Origin Requests to Elasticsearch\nRUN sudo echo 'http.cors.enabled : true' >> /etc/elasticsearch/elasticsearch.yml\n#  Set MAX_MAP_COUNT configuration off. When on, an error is returned because docker is a readonly OS\nRUN sed -i '/sysctl -q -w vm.max_map_count/ s/^#*/true\\n#/' /etc/init.d/elasticsearch\n#  Set elasticsearch to run with root user\nRUN sed -i '/^ES_USER=el/ s/^#*/true\\nES_USER=root\\n#/' /etc/init.d/elasticsearch\nRUN sed -i '/^ES_GROUP=el/ s/^#*/true\\nES_GROUP=root\\n#/' /etc/init.d/elasticsearch\n#  Enable Elasticsearch service to start on boot\nRUN sudo update-rc.d elasticsearch defaults 95 10\n# #############################################################################\n#  Install UWSGI and config\n# #############################################################################\nRUN apt-get install python-dev -y\nRUN pip install uwsgi\nCOPY ./eums/scripts/packaging/eums.uwsgi.ini /etc/uwsgi/sites/eums.uwsgi.ini\nCOPY ./eums/scripts/packaging/nginx.config /etc/nginx/nginx.conf\nCOPY ./eums/scripts/packaging/eums.nginx.config /etc/nginx/sites-available/eums\nRUN ln -sf /etc/nginx/sites-available/eums /etc/nginx/sites-enabled/eums\nRUN rm /etc/nginx/sites-enabled/default\n# #############################################################################\n# # Install dependenices\n# #############################################################################\nCOPY ./eums/requirements.txt /opt/app/eums/requirements.txt\nRUN virtualenv ~/.virtualenvs/eums\nRUN /bin/bash -c \"source ~/.virtualenvs/eums/bin/activate \\\n && cd /opt/app/eums \\\n && pip install -r requirements.txt\"\nCOPY ./contacts/package.json /opt/app/contacts/package.json\nRUN cd /opt/app/contacts/ \\\n && npm install fibers@1.0.15 \\\n && npm install\nCOPY ./eums/eums/client/package.json /opt/app/eums/eums/client/package.json\nRUN cd /opt/app/eums/eums/client \\\n && npm install\n# RUN cd /opt/app/eums/eums/client && npm install -g bower\n# COPY ./eums/eums/client/bower.json /opt/app/eums/eums/client/bower.json\n# RUN cd /opt/app/eums/eums/client && bower install --allow-root\nADD ./eums/eums/client/bower_components /opt/app/eums/eums/client/bower_components/\nRUN cd /opt/app/eums/eums/client \\\n && npm install grunt-cli -g\n# #############################################################################\n# # Add the codebase to the image\n# #############################################################################\nCOPY ./eums /opt/app/eums\nCOPY ./contacts /opt/app/contacts\nCOPY ./contacts/scripts/startContacts.sh /opt/scripts/startContacts.sh\nCOPY ./eums/scripts/deployment/startPostgres.sh /opt/scripts/startPostgres.sh\nCOPY ./eums/scripts/deployment/buildConfigs.sh /opt/scripts/buildConfigs.sh\nCOPY ./eums/scripts/deployment/celery.sh /opt/scripts/celery.sh\nCOPY ./eums/scripts/deployment/startProcessListener.sh /opt/scripts/startProcessListener.sh\nCOPY ./eums/scripts/setupmap /opt/scripts/setupmap\nRUN chmod a+x -R /opt/scripts\nRUN chmod a+x -R /opt/app/eums/scripts\nCOPY ./eums/scripts/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY ./eums/scripts/supervisor/celeryd.conf /etc/supervisor/conf.d/celeryd.conf\nRUN mkdir /var/log/celery\nRUN touch /var/log/celery/workers.log\nVOLUME /var/lib/postgresql\nVOLUME /data\nEXPOSE 22/tcp 80/tcp\n# #############################################################################\n# # Entrypoint and command parameters\n# #############################################################################\nCMD [\"/usr/bin/supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"526fb9041b41365580481b1356c5910b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  Required environment variables\n#  eums.environment => name corresponding with the different settings files e.g. qa, snap, staging, test\n#    Base OS\nFROM ubuntu:14.04\nMAINTAINER eums <eums@thoughtworks.com>\n#  #############################################################################\n#  # Change policy\n#  #############################################################################\nRUN echo exit 0 > /usr/sbin/policy-rc.d\nRUN chmod +x /usr/sbin/policy-rc.d\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install wget curl build-essential libpq-dev -y\n#  #############################################################################\n#  # Python 2.7.9 Pre-requisites\n#  #############################################################################\n#   remove several traces of debian python\nRUN apt-get purge -y python.*\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"en_US\"\n#  The properties below are not used as parameters to facilitate docker caching and faster builds\n#  They have been left here more as doc so be sure to update them if you change the version\nENV PYTHON_VERSION=\"2.7.9\"\n#   gpg: key 18ADD4FF: public key \"Benjamin Peterson <benjamin@python.org>\" imported\nRUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\nRUN set -x \\\n && mkdir -p /usr/src/python \\\n && curl -SLO \"https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz\" \\\n && curl -SLO \"https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz.asc\"\nRUN gpg --verify Python-2.7.9.tar.xz.asc \\\n && tar -xJC /usr/src/python --strip-components=1 -f Python-2.7.9.tar.xz \\\n && rm Python-2.7.9.tar.xz* \\\n && cd /usr/src/python \\\n && ./configure --enable-shared --enable-unicode=ucs4 \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig\nRUN curl -SL 'https://bootstrap.pypa.io/get-pip.py' | python2 \\\n && find /usr/local\nRUN pip install virtualenv\nRUN apt-get update \\\n && apt-get install supervisor openssh-server postgresql postgresql-contrib nodejs nginx redis-server git -y\nRUN mkdir -p /var/lock/apache2 /var/run/apache2 /var/run/sshd /var/log/supervisor\nRUN echo \"root:password\" | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#  #############################################################################\n#  # install NodeJS\n#  #############################################################################\n#   verify gpg and sha256: http://nodejs.org/dist/v0.10.30/SHASUMS256.txt.asc\nRUN gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D 114F43EE0176B71C7BC219DD50A3051F888C628D\nRUN curl -SLO \"http://nodejs.org/dist/v0.10.21/node-v0.10.21-linux-x64.tar.gz\"\nRUN curl -SLO \"http://nodejs.org/dist/v0.10.21/SHASUMS256.txt.asc\"\nRUN gpg --verify SHASUMS256.txt.asc\nRUN grep \" node-v0.10.21-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c -\nRUN tar -xzf \"node-v0.10.21-linux-x64.tar.gz\" -C /usr/local --strip-components=1\nRUN curl -SLO \"http://nodejs.org/dist/v0.10.21/SHASUMS256.txt.asc\"\nRUN rm \"node-v0.10.21-linux-x64.tar.gz\" SHASUMS256.txt.asc\nRUN npm install npm@1.4.28 -g\nRUN npm install npm@\"1.3.11\" -g\nRUN npm install grunt-cli@0.1.13 -g\nRUN npm cache clear\n#  #############################################################################\n#  # install MongoDB\n#  #############################################################################\nRUN sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\nRUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list\nRUN sudo apt-get update\nRUN apt-get install mongodb-org=2.6.5 mongodb-org-server=2.6.5 mongodb-org-shell=2.6.5 mongodb-org-mongos=2.6.5 mongodb-org-tools=2.6.5 -y\nENV LC_ALL=\"C\"\n#  #############################################################################\n#  # install Elasticsearch\n#  #############################################################################\n#   Install Java\nRUN sudo rm -fr /var/lib/apt/lists\nRUN sudo apt-get update\nRUN sudo apt-get install -y software-properties-common\nRUN sudo apt-add-repository ppa:webupd8team/java\nRUN sudo apt-get update\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections\nRUN echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\nRUN sudo apt-get install -y oracle-java8-installer\n#   Add elasticsearch repository to apt-get repositories\nRUN mkdir -p /opt/downloads\nRUN cd /opt/downloads \\\n && curl -SsfLO \"https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.7.3.deb\"\n#   Install Elasticsearch\nRUN dpkg -i /opt/downloads/elasticsearch-1.7.3.deb\n#   Enable Cross-site Origin Requests to Elasticsearch\nRUN sudo echo 'http.cors.enabled : true' >> /etc/elasticsearch/elasticsearch.yml\n#   Set MAX_MAP_COUNT configuration off. When on, an error is returned because docker is a readonly OS\nRUN sed -i '/sysctl -q -w vm.max_map_count/ s/^#*/true\\n#/' /etc/init.d/elasticsearch\n#   Set elasticsearch to run with root user\nRUN sed -i '/^ES_USER=el/ s/^#*/true\\nES_USER=root\\n#/' /etc/init.d/elasticsearch\nRUN sed -i '/^ES_GROUP=el/ s/^#*/true\\nES_GROUP=root\\n#/' /etc/init.d/elasticsearch\n#   Enable Elasticsearch service to start on boot\nRUN sudo update-rc.d elasticsearch defaults 95 10\n#  #############################################################################\n#   Install UWSGI and config\n#  #############################################################################\nRUN apt-get install python-dev -y\nRUN pip install uwsgi\nCOPY ./eums/scripts/packaging/eums.uwsgi.ini /etc/uwsgi/sites/eums.uwsgi.ini\nCOPY ./eums/scripts/packaging/nginx.config /etc/nginx/nginx.conf\nCOPY ./eums/scripts/packaging/eums.nginx.config /etc/nginx/sites-available/eums\nRUN ln -sf /etc/nginx/sites-available/eums /etc/nginx/sites-enabled/eums\nRUN rm /etc/nginx/sites-enabled/default\n#  #############################################################################\n#  # Install dependenices\n#  #############################################################################\nCOPY ./eums/requirements.txt /opt/app/eums/requirements.txt\nRUN virtualenv ~/.virtualenvs/eums\nRUN /bin/bash -c \"source ~/.virtualenvs/eums/bin/activate \\\n && cd /opt/app/eums \\\n && pip install -r requirements.txt\"\nCOPY ./contacts/package.json /opt/app/contacts/package.json\nRUN cd /opt/app/contacts/ \\\n && npm install fibers@1.0.15 \\\n && npm install\nCOPY ./eums/eums/client/package.json /opt/app/eums/eums/client/package.json\nRUN cd /opt/app/eums/eums/client \\\n && npm install\n#  RUN cd /opt/app/eums/eums/client && npm install -g bower\n#  COPY ./eums/eums/client/bower.json /opt/app/eums/eums/client/bower.json\n#  RUN cd /opt/app/eums/eums/client && bower install --allow-root\nADD ./eums/eums/client/bower_components /opt/app/eums/eums/client/bower_components/\nRUN cd /opt/app/eums/eums/client \\\n && npm install grunt-cli -g\n#  #############################################################################\n#  # Add the codebase to the image\n#  #############################################################################\nCOPY ./eums /opt/app/eums\nCOPY ./contacts /opt/app/contacts\nCOPY ./contacts/scripts/startContacts.sh /opt/scripts/startContacts.sh\nCOPY ./eums/scripts/deployment/startPostgres.sh /opt/scripts/startPostgres.sh\nCOPY ./eums/scripts/deployment/buildConfigs.sh /opt/scripts/buildConfigs.sh\nCOPY ./eums/scripts/deployment/celery.sh /opt/scripts/celery.sh\nCOPY ./eums/scripts/deployment/startProcessListener.sh /opt/scripts/startProcessListener.sh\nCOPY ./eums/scripts/setupmap /opt/scripts/setupmap\nRUN chmod a+x -R /opt/scripts\nRUN chmod a+x -R /opt/app/eums/scripts\nCOPY ./eums/scripts/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY ./eums/scripts/supervisor/celeryd.conf /etc/supervisor/conf.d/celeryd.conf\nRUN mkdir /var/log/celery\nRUN touch /var/log/celery/workers.log\nVOLUME /var/lib/postgresql\nVOLUME /data\nEXPOSE 22/tcp 80/tcp\n#  #############################################################################\n#  # Entrypoint and command parameters\n#  #############################################################################\nCMD [\"/usr/bin/supervisord\"]\n","originalDockerfileUglifiedHash":"e1e097cd3dee4bb7c433c71c61ac7f6f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/eb948bb240e12ef21fa2d4e237befbe6cbb42c76.dockerfile"}