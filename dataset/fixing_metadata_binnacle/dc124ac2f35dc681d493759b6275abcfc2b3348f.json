{"seed":4104102508,"processedDockerfileHash":"a55d07db438f57540a9ca75419f0f493","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for Kong testing, and development.\n#\n#   This image is based on:\n#\n#     Dockerfile - alpine-fat\n#     https://github.com/openresty/docker-openresty\n#\n#     This is an alpine-based build that keeps some build-related\n#     packages, has perl installed for opm, and includes luarocks.\nFROM alpine:latest\n#   Evan maintains openresty/openresty\n#   Ian maintains mrsaints/docker-kong-dev\nLABEL maintainer=\"\\\"Evan Wies <evan@neomantra.net>, Ian L. <os@fyianlai.com>\\\"\"\n#   Docker Build Arguments\nARG SERF_VERSION=\"0.7.0\"\n#   `--without-luajit-lua52` compilation flag is required\n#   for Kong to work with OpenResty 1.11.2.4\nARG RESTY_VERSION=\"1.11.2.4\"\nARG RESTY_LUAROCKS_VERSION=\"2.4.2\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2j\"\nARG RESTY_PCRE_VERSION=\"8.39\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\" --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_geoip_module=dynamic  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_slice_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-mail  --with-mail_ssl_module  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-stream  --with-stream_ssl_module  --with-threads  --without-luajit-lua52  \"\n#   These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n#   1) Install apk dependencies\n#   2) Download and untar OpenSSL, PCRE, and OpenResty\n#   3) Build OpenResty\n#   4) Cleanup\nRUN apk add curl=7.88.1-r1 gd-dev=2.3.3-r3 geoip-dev=1.6.12-r3 libxslt-dev=1.1.37-r1 perl-dev=5.36.0-r0 readline-dev=8.2.0-r0 zlib-dev=1.2.13-r0 --no-cache --virtual .build-deps \\\n && apk add bash=5.2.15-r0 build-base=0.5-r3 curl=7.88.1-r1 gd=2.3.3-r3 geoip=1.6.12-r3 git=2.38.4-r1 libgcc=12.2.1_git20220924-r4 libxslt=1.1.37-r1 linux-headers=5.19.5-r0 make=4.3-r1 nano=7.0-r0 openssl=3.0.8-r3 openssl-dev=3.0.8-r3 perl=5.36.0-r0 unzip=6.0-r13 zlib=1.2.13-r0 --no-cache \\\n && cd /tmp \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /tmp/openresty-${RESTY_VERSION} \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /tmp \\\n && rm -rf openssl-${RESTY_OPENSSL_VERSION} openssl-${RESTY_OPENSSL_VERSION}.tar.gz openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && curl -fSL http://luarocks.org/releases/luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && cd luarocks-${RESTY_LUAROCKS_VERSION} \\\n && ./configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit --lua-suffix=jit --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n && make build \\\n && make install \\\n && cd /tmp \\\n && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\n#   Add additional binaries into PATH for convenience\n#   Also, include path to Kong 'binary'\nENV PATH=\"$PATH:/usr/local/openresty/luajit/bin/:/usr/local/openresty/nginx/sbin/:/usr/local/openresty/bin/:/kong/bin/\"\n#   Install Serf\nRUN cd /tmp/ \\\n && wget https://releases.hashicorp.com/serf/${SERF_VERSION}/serf_${SERF_VERSION}_linux_amd64.zip \\\n && unzip serf_${SERF_VERSION}_linux_amd64.zip \\\n && mv serf /usr/local/bin/serf \\\n && rm -rf serf_${SERF_VERSION}_linux_amd64.zip\n#   Fix path to OpenSSL directory for luarocks to work\nENV OPENSSL_DIR=\"/usr/\"\n#   Disable code caching so local changes can be tested without restarting Kong\nENV KONG_LUA_CODE_CACHE=\"false\"\n#   Enable detailed logging\nENV KONG_LOG_LEVEL=\"debug\"\n#   Set Kong version\nENV KONG_VERSION=\"c7b4b48e6fd26c2789e38458d0a099ef08e631bb\"\n#   Install Kong from source\nRUN mkdir /kong/ \\\n && cd /kong/ \\\n && git clone https://github.com/Mashape/kong.git . \\\n && git checkout $KONG_VERSION \\\n && make install \\\n && make dev \\\n && apk del .build-deps\nWORKDIR /kong/\nRUN nginx -V \\\n && resty -V \\\n && luarocks --version \\\n && serf version\n#   Ports for proxy, admin API, and clustering\nEXPOSE 7946/tcp 8000/tcp 8001/tcp 8443/tcp\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for Kong testing, and development.\n#\n#  This image is based on:\n#\n#    Dockerfile - alpine-fat\n#    https://github.com/openresty/docker-openresty\n#\n#    This is an alpine-based build that keeps some build-related\n#    packages, has perl installed for opm, and includes luarocks.\nFROM alpine:latest\n#  Evan maintains openresty/openresty\n#  Ian maintains mrsaints/docker-kong-dev\nLABEL maintainer=\"\\\"Evan Wies <evan@neomantra.net>, Ian L. <os@fyianlai.com>\\\"\"\n#  Docker Build Arguments\nARG SERF_VERSION=\"0.7.0\"\n#  `--without-luajit-lua52` compilation flag is required\n#  for Kong to work with OpenResty 1.11.2.4\nARG RESTY_VERSION=\"1.11.2.4\"\nARG RESTY_LUAROCKS_VERSION=\"2.4.2\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2j\"\nARG RESTY_PCRE_VERSION=\"8.39\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\" --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_geoip_module=dynamic  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_slice_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-mail  --with-mail_ssl_module  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-stream  --with-stream_ssl_module  --with-threads  --without-luajit-lua52  \"\n#  These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n#  1) Install apk dependencies\n#  2) Download and untar OpenSSL, PCRE, and OpenResty\n#  3) Build OpenResty\n#  4) Cleanup\nRUN apk add --no-cache --virtual .build-deps curl gd-dev geoip-dev libxslt-dev perl-dev readline-dev zlib-dev \\\n && apk add --no-cache bash build-base curl gd geoip git libgcc libxslt linux-headers make nano openssl openssl-dev perl unzip zlib \\\n && cd /tmp \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /tmp/openresty-${RESTY_VERSION} \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /tmp \\\n && rm -rf openssl-${RESTY_OPENSSL_VERSION} openssl-${RESTY_OPENSSL_VERSION}.tar.gz openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && curl -fSL http://luarocks.org/releases/luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && cd luarocks-${RESTY_LUAROCKS_VERSION} \\\n && ./configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit --lua-suffix=jit --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n && make build \\\n && make install \\\n && cd /tmp \\\n && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\n#  Add additional binaries into PATH for convenience\n#  Also, include path to Kong 'binary'\nENV PATH=\"$PATH:/usr/local/openresty/luajit/bin/:/usr/local/openresty/nginx/sbin/:/usr/local/openresty/bin/:/kong/bin/\"\n#  Install Serf\nRUN cd /tmp/ \\\n && wget https://releases.hashicorp.com/serf/${SERF_VERSION}/serf_${SERF_VERSION}_linux_amd64.zip \\\n && unzip serf_${SERF_VERSION}_linux_amd64.zip \\\n && mv serf /usr/local/bin/serf \\\n && rm -rf serf_${SERF_VERSION}_linux_amd64.zip\n#  Fix path to OpenSSL directory for luarocks to work\nENV OPENSSL_DIR=\"/usr/\"\n#  Disable code caching so local changes can be tested without restarting Kong\nENV KONG_LUA_CODE_CACHE=\"false\"\n#  Enable detailed logging\nENV KONG_LOG_LEVEL=\"debug\"\n#  Set Kong version\nENV KONG_VERSION=\"c7b4b48e6fd26c2789e38458d0a099ef08e631bb\"\n#  Install Kong from source\nRUN mkdir /kong/ \\\n && cd /kong/ \\\n && git clone https://github.com/Mashape/kong.git . \\\n && git checkout $KONG_VERSION \\\n && make install \\\n && make dev \\\n && apk del .build-deps\nWORKDIR /kong/\nRUN nginx -V \\\n && resty -V \\\n && luarocks --version \\\n && serf version\n#  Ports for proxy, admin API, and clustering\nEXPOSE 7946/tcp 8000/tcp 8001/tcp 8443/tcp\n","injectedSmells":[],"originalDockerfileHash":"ba16001f6f4002356c71fd55f49fa26c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for Kong testing, and development.\n#\n#   This image is based on:\n#\n#     Dockerfile - alpine-fat\n#     https://github.com/openresty/docker-openresty\n#\n#     This is an alpine-based build that keeps some build-related\n#     packages, has perl installed for opm, and includes luarocks.\nFROM alpine:latest\n#   Evan maintains openresty/openresty\n#   Ian maintains mrsaints/docker-kong-dev\nLABEL maintainer=\"\\\"Evan Wies <evan@neomantra.net>, Ian L. <os@fyianlai.com>\\\"\"\n#   Docker Build Arguments\nARG SERF_VERSION=\"0.7.0\"\n#   `--without-luajit-lua52` compilation flag is required\n#   for Kong to work with OpenResty 1.11.2.4\nARG RESTY_VERSION=\"1.11.2.4\"\nARG RESTY_LUAROCKS_VERSION=\"2.4.2\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2j\"\nARG RESTY_PCRE_VERSION=\"8.39\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\" --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_geoip_module=dynamic  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_slice_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-mail  --with-mail_ssl_module  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-stream  --with-stream_ssl_module  --with-threads  --without-luajit-lua52  \"\n#   These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n#   1) Install apk dependencies\n#   2) Download and untar OpenSSL, PCRE, and OpenResty\n#   3) Build OpenResty\n#   4) Cleanup\nRUN apk add --no-cache --virtual .build-deps curl gd-dev geoip-dev libxslt-dev perl-dev readline-dev zlib-dev \\\n && apk add --no-cache bash build-base curl gd geoip git libgcc libxslt linux-headers make nano openssl openssl-dev perl unzip zlib \\\n && cd /tmp \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /tmp/openresty-${RESTY_VERSION} \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /tmp \\\n && rm -rf openssl-${RESTY_OPENSSL_VERSION} openssl-${RESTY_OPENSSL_VERSION}.tar.gz openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && curl -fSL http://luarocks.org/releases/luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && cd luarocks-${RESTY_LUAROCKS_VERSION} \\\n && ./configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit --lua-suffix=jit --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n && make build \\\n && make install \\\n && cd /tmp \\\n && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\n#   Add additional binaries into PATH for convenience\n#   Also, include path to Kong 'binary'\nENV PATH=\"$PATH:/usr/local/openresty/luajit/bin/:/usr/local/openresty/nginx/sbin/:/usr/local/openresty/bin/:/kong/bin/\"\n#   Install Serf\nRUN cd /tmp/ \\\n && wget https://releases.hashicorp.com/serf/${SERF_VERSION}/serf_${SERF_VERSION}_linux_amd64.zip \\\n && unzip serf_${SERF_VERSION}_linux_amd64.zip \\\n && mv serf /usr/local/bin/serf \\\n && rm -rf serf_${SERF_VERSION}_linux_amd64.zip\n#   Fix path to OpenSSL directory for luarocks to work\nENV OPENSSL_DIR=\"/usr/\"\n#   Disable code caching so local changes can be tested without restarting Kong\nENV KONG_LUA_CODE_CACHE=\"false\"\n#   Enable detailed logging\nENV KONG_LOG_LEVEL=\"debug\"\n#   Set Kong version\nENV KONG_VERSION=\"c7b4b48e6fd26c2789e38458d0a099ef08e631bb\"\n#   Install Kong from source\nRUN mkdir /kong/ \\\n && cd /kong/ \\\n && git clone https://github.com/Mashape/kong.git . \\\n && git checkout $KONG_VERSION \\\n && make install \\\n && make dev \\\n && apk del .build-deps\nWORKDIR /kong/\nRUN nginx -V \\\n && resty -V \\\n && luarocks --version \\\n && serf version\n#   Ports for proxy, admin API, and clustering\nEXPOSE 7946/tcp 8000/tcp 8001/tcp 8443/tcp\n","originalDockerfileUglifiedHash":"0f957879df87def0b02354ac41949060","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dc124ac2f35dc681d493759b6275abcfc2b3348f.dockerfile"}