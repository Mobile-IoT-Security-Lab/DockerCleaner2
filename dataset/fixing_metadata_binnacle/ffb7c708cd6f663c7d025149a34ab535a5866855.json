{"seed":787543357,"processedDockerfileHash":"97d90c8334f497d46cb4da3c68890744","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#   This dockerfile is not meant to be used directly by docker.  The\n#   {{}} variables are replaced with values by the makefile.  Please generate\n#   the docker image for this file by running:\n#\n#     make coreboot-sdk\n#\n#   Variables can be updated on the make command line or left blank to use\n#   the default values set by the makefile.\n#\n#    SDK_VERSION is used to name the version of the coreboot sdk to use.\n#                Typically, this corresponds to the toolchain version.  This\n#                is used to identify this docker image.\n#    DOCKER_COMMIT is the coreboot Commit-ID to build the toolchain from.\nFROM debian:sid\nMAINTAINER Martin Roth <martin@coreboot.org>\nRUN useradd -p locked -m coreboot \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends bc bison bzip2 ccache cmake curl device-tree-compiler dh-autoreconf diffutils doxygen flex g++ gawk gcc git gnat graphviz libcrypto++-dev libfreetype6-dev libftdi-dev libftdi1-dev libglib2.0-dev libgmp-dev libjaylink-dev liblzma-dev libncurses5-dev libpci-dev libreadline-dev libssl-dev libusb-1.0-0-dev libusb-dev libxml2-dev libyaml-dev m4 make msitools nasm openssl patch pkg-config python qemu rsync shellcheck subversion unifont uuid-dev vim-common wget xz-utils zlib1g-dev -qqy \\\n && apt-get clean \\\n && ln -s /usr/bin/automake /usr/bin/automake-1.15 \\\n && ln -s /usr/bin/aclocal /usr/bin/aclocal-1.15\nRUN cd /root \\\n && git clone https://review.coreboot.org/coreboot \\\n && cd coreboot \\\n && git checkout {{DOCKER_COMMIT}}\nRUN if echo {{CROSSGCC_PARAM}} | grep -q ^all ; then make -C/root/coreboot/util/crossgcc/ build_clang BUILD_LANGUAGES=c,ada CPUS=$( nproc ;) DEST=/opt/xgcc ; fi\nRUN make -C/root/coreboot/util/crossgcc/ {{CROSSGCC_PARAM}} BUILD_LANGUAGES=c,ada CPUS=$( nproc ;) DEST=/opt/xgcc \\\n && rm -rf /root/coreboot\nRUN mkdir /home/coreboot/.ccache \\\n && chown coreboot:coreboot /home/coreboot/.ccache \\\n && mkdir /home/coreboot/cb_build \\\n && chown coreboot:coreboot /home/coreboot/cb_build \\\n && echo \"export PATH=$PATH:/opt/xgcc/bin\" >> /home/coreboot/.bashrc \\\n && echo \"export SDK_VERSION={{SDK_VERSION}}\" >> /home/coreboot/.bashrc \\\n && echo \"export SDK_COMMIT={{DOCKER_COMMIT}}\" >> /home/coreboot/.bashrc\nVOLUME /home/coreboot/.ccache\nENV PATH=\"$PATH:/opt/xgcc/bin\"\nENV SDK_VERSION=\"{{SDK_VERSION}}\"\nENV SDK_COMMIT=\"{{DOCKER_COMMIT}}\"\nUSER coreboot\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This dockerfile is not meant to be used directly by docker.  The\n#  {{}} variables are replaced with values by the makefile.  Please generate\n#  the docker image for this file by running:\n#\n#    make coreboot-sdk\n#\n#  Variables can be updated on the make command line or left blank to use\n#  the default values set by the makefile.\n#\n#   SDK_VERSION is used to name the version of the coreboot sdk to use.\n#               Typically, this corresponds to the toolchain version.  This\n#               is used to identify this docker image.\n#   DOCKER_COMMIT is the coreboot Commit-ID to build the toolchain from.\nFROM debian:sid\nMAINTAINER Martin Roth <martin@coreboot.org>\nRUN useradd -p locked -m coreboot \\\n && apt-get update -qq \\\n && apt-get install bc bison bzip2 ccache cmake curl device-tree-compiler dh-autoreconf diffutils doxygen flex g++ gawk gcc git gnat graphviz libcrypto++-dev libfreetype6-dev libftdi-dev libftdi1-dev libglib2.0-dev libgmp-dev libjaylink-dev liblzma-dev libncurses5-dev libpci-dev libreadline-dev libssl-dev libusb-1.0-0-dev libusb-dev libxml2-dev libyaml-dev m4 make msitools nasm openssl patch pkg-config python qemu rsync shellcheck subversion unifont uuid-dev vim-common wget xz-utils zlib1g-dev -qqy \\\n && apt-get clean \\\n && ln -s /usr/bin/automake /usr/bin/automake-1.15 \\\n && ln -s /usr/bin/aclocal /usr/bin/aclocal-1.15\nRUN cd /root \\\n && git clone https://review.coreboot.org/coreboot \\\n && cd coreboot \\\n && git checkout {{DOCKER_COMMIT}}\nRUN if echo {{CROSSGCC_PARAM}} | grep -q ^all ; then make -C/root/coreboot/util/crossgcc/ build_clang BUILD_LANGUAGES=c,ada CPUS=$( nproc ;) DEST=/opt/xgcc ; fi\nRUN make -C/root/coreboot/util/crossgcc/ {{CROSSGCC_PARAM}} BUILD_LANGUAGES=c,ada CPUS=$( nproc ;) DEST=/opt/xgcc \\\n && rm -rf /root/coreboot\nRUN mkdir /home/coreboot/.ccache \\\n && chown coreboot:coreboot /home/coreboot/.ccache \\\n && mkdir /home/coreboot/cb_build \\\n && chown coreboot:coreboot /home/coreboot/cb_build \\\n && echo \"export PATH=$PATH:/opt/xgcc/bin\" >> /home/coreboot/.bashrc \\\n && echo \"export SDK_VERSION={{SDK_VERSION}}\" >> /home/coreboot/.bashrc \\\n && echo \"export SDK_COMMIT={{DOCKER_COMMIT}}\" >> /home/coreboot/.bashrc\nVOLUME /home/coreboot/.ccache\nENV PATH=\"$PATH:/opt/xgcc/bin\"\nENV SDK_VERSION=\"{{SDK_VERSION}}\"\nENV SDK_COMMIT=\"{{DOCKER_COMMIT}}\"\nUSER coreboot\n","injectedSmells":[],"originalDockerfileHash":"22b0bf1f9ac530bc78e1881b2ef0f53d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This dockerfile is not meant to be used directly by docker.  The\n#   {{}} variables are replaced with values by the makefile.  Please generate\n#   the docker image for this file by running:\n#\n#     make coreboot-sdk\n#\n#   Variables can be updated on the make command line or left blank to use\n#   the default values set by the makefile.\n#\n#    SDK_VERSION is used to name the version of the coreboot sdk to use.\n#                Typically, this corresponds to the toolchain version.  This\n#                is used to identify this docker image.\n#    DOCKER_COMMIT is the coreboot Commit-ID to build the toolchain from.\nFROM debian:sid\nMAINTAINER Martin Roth <martin@coreboot.org>\nRUN useradd -p locked -m coreboot \\\n && apt-get update -qq \\\n && apt-get install bc bison bzip2 ccache cmake curl device-tree-compiler dh-autoreconf diffutils doxygen flex g++ gawk gcc git gnat graphviz libcrypto++-dev libfreetype6-dev libftdi-dev libftdi1-dev libglib2.0-dev libgmp-dev libjaylink-dev liblzma-dev libncurses5-dev libpci-dev libreadline-dev libssl-dev libusb-1.0-0-dev libusb-dev libxml2-dev libyaml-dev m4 make msitools nasm openssl patch pkg-config python qemu rsync shellcheck subversion unifont uuid-dev vim-common wget xz-utils zlib1g-dev -qqy \\\n && apt-get clean \\\n && ln -s /usr/bin/automake /usr/bin/automake-1.15 \\\n && ln -s /usr/bin/aclocal /usr/bin/aclocal-1.15\nRUN cd /root \\\n && git clone https://review.coreboot.org/coreboot \\\n && cd coreboot \\\n && git checkout {{DOCKER_COMMIT}}\nRUN if echo {{CROSSGCC_PARAM}} | grep -q ^all ; then make -C/root/coreboot/util/crossgcc/ build_clang BUILD_LANGUAGES=c,ada CPUS=$( nproc ;) DEST=/opt/xgcc ; fi\nRUN make -C/root/coreboot/util/crossgcc/ {{CROSSGCC_PARAM}} BUILD_LANGUAGES=c,ada CPUS=$( nproc ;) DEST=/opt/xgcc \\\n && rm -rf /root/coreboot\nRUN mkdir /home/coreboot/.ccache \\\n && chown coreboot:coreboot /home/coreboot/.ccache \\\n && mkdir /home/coreboot/cb_build \\\n && chown coreboot:coreboot /home/coreboot/cb_build \\\n && echo \"export PATH=$PATH:/opt/xgcc/bin\" >> /home/coreboot/.bashrc \\\n && echo \"export SDK_VERSION={{SDK_VERSION}}\" >> /home/coreboot/.bashrc \\\n && echo \"export SDK_COMMIT={{DOCKER_COMMIT}}\" >> /home/coreboot/.bashrc\nVOLUME /home/coreboot/.ccache\nENV PATH=\"$PATH:/opt/xgcc/bin\"\nENV SDK_VERSION=\"{{SDK_VERSION}}\"\nENV SDK_COMMIT=\"{{DOCKER_COMMIT}}\"\nUSER coreboot\n","originalDockerfileUglifiedHash":"66952d9d934e2d9d053770f34248f558","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ffb7c708cd6f663c7d025149a34ab535a5866855.dockerfile"}