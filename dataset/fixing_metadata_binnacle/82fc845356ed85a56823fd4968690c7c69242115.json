{"seed":1724495026,"processedDockerfileHash":"78ddbf75215526d164f05e861d54ddbf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed to the Apache Software Foundation (ASF) under one or more\n#   contributor license agreements.  See the NOTICE file distributed with\n#   this work for additional information regarding copyright ownership.\n#   The ASF licenses this file to You under the Apache License, Version 2.0\n#   (the \"License\"); you may not use this file except in compliance with\n#   the License.  You may obtain a copy of the License at\n#   \n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Supervisor\n#\nFROM phusion/baseimage:latest\nMAINTAINER Big Data Open Source Security LLC <info@stealth.ly>\n#   Setting correct environment variables\nENV HOME=\"/root\"\n#   Regenerating SSH host keys\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n#   Using baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n#   Installing AWS-related stuff\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends git-core python-boto python-pip curl=7.88.1-7ubuntu1 dnsutils=1:9.18.12-1ubuntu1 -y )\nRUN pip install awscli==1.27.114\nRUN pip install six==1.8.0\nRUN curl https://stedolan.github.io/jq/download/linux64/jq -o /usr/local/bin/jq\nRUN chmod +x /usr/local/bin/jq\n#   Configuring aws-cli\nRUN mkdir -p /root/.aws\nCOPY config/aws_config /root/.aws/config\nCOPY config/aws_config /root/.boto\nRUN sed -i 's/default/Credentials/' /root/.boto\n#   Checking config\nRUN AWS_ACCESS_KEY=$( grep aws_access_key_id /root/.aws/config | awk -F= '{print $2}' ;) \\\n && if [ -z \"$AWS_ACCESS_KEY\" ] ; then exit 1 ; fi\nRUN AWS_SECRET_KEY=$( grep aws_secret_access_key /root/.aws/config | awk -F= '{print $2}' ;) \\\n && if [ -z \"$AWS_SECRET_KEY\" ] ; then exit 1 ; fi\n#   Creating ssh config\n#  RUN touch /root/.ssh/config\nCOPY config/*.key /root/.ssh/\n#  RUN chmod 600 /root/.ssh/config\nRUN chmod 600 /root/.ssh/*.key\n#   Installing etcd and skydns\nRUN aws s3 cp s3://bdoss-deploy/utils/skydns/skydns /root/bin/skydns\nRUN aws s3 cp s3://bdoss-deploy/utils/etcd/etcd /root/bin/etcd\nRUN aws s3 cp s3://bdoss-deploy/utils/etcd/etcdctl /root/bin/etcdctl\nRUN chmod 744 /root/bin/skydns\nRUN chmod 744 /root/bin/etcd\nRUN chmod 744 /root/bin/etcdctl\nRUN ln -s /root/bin/skydns /usr/local/bin/skydns\nRUN ln -s /root/bin/etcd /usr/local/bin/etcd\nRUN ln -s /root/bin/etcdctl /usr/local/bin/etcdctl\n#   Preparing daemon scripts\nRUN mkdir /etc/service/etcd\nRUN mkdir /etc/service/skydns\nRUN mkdir /usr/local/bin/default.etcd\nRUN echo \"#!/bin/sh\\nexec /usr/local/bin/etcd -data-dir /usr/local/bin/default.etcd >>/var/log/etcd.log 2>&1\" > /etc/service/etcd/run\nRUN echo \"#!/bin/sh\\nif ps aux | grep /etcd | grep -v grep > /dev/null\\n then\\n sleep 10\\n exec /usr/local/bin/skydns -verbose -addr=\"127.0.0.1:53\" -nameservers=\"8.8.8.8:53,8.8.4.4:53\" -machines=\"http://127.0.0.1:4001\" -domain=\"aws.\" >>/var/log/skydns.log 2>&1\\nfi\" > /etc/service/skydns/run\nRUN chmod 744 /etc/service/etcd/run\nRUN chmod 744 /etc/service/skydns/run\n#   Setting crontab\nRUN echo \"* * * * * root python /deploy/supervisor/scripts/cgnaws/update_dns.py >> /var/log/cron.log 2>&1\" >> /etc/crontab\nRUN touch /var/log/cron.log\n#   Copying info script and configuring it\nRUN mkdir -p /root/.ssh\nCOPY . /root/\nRUN ln -s /root/scripts/cgnaws/awsinfo.py /usr/local/bin/awsinfo\nRUN ln -s /root/scripts/cgnaws/template_ssh.py /usr/local/bin/templatessh\n#   RUN chmod +x /usr/local/bin/awsinfo\n#   Link master script to bin directory\nRUN ln -s /deploy/minotaur.py /usr/local/bin/minotaur\n#   Pre-creating deploy volume path\nVOLUME [\"/deploy\"]\n#   Cleaning up APT when done\n#   RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Setting up ntp\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends ntp=1:4.2.8p15+dfsg-2~1.2.2+dfsg1-1 -y )\nRUN /usr/sbin/ntpdate 0.ubuntu.pool.ntp.org \\\n && service ntp start\n#   Turn off syslog-to-docker-logs forwarder\nRUN touch /etc/service/syslog-forwarder/down\nWORKDIR /deploy\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed to the Apache Software Foundation (ASF) under one or more\n#  contributor license agreements.  See the NOTICE file distributed with\n#  this work for additional information regarding copyright ownership.\n#  The ASF licenses this file to You under the Apache License, Version 2.0\n#  (the \"License\"); you may not use this file except in compliance with\n#  the License.  You may obtain a copy of the License at\n#  \n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Supervisor\n#\nFROM phusion/baseimage:latest\nMAINTAINER Big Data Open Source Security LLC <info@stealth.ly>\n#  Setting correct environment variables\nENV HOME=\"/root\"\n#  Regenerating SSH host keys\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n#  Using baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n#  Installing AWS-related stuff\nRUN apt-get update\nRUN apt-get install git-core python-boto python-pip curl dnsutils -y\nRUN pip install awscli\nRUN pip install six==1.8.0\nRUN curl https://stedolan.github.io/jq/download/linux64/jq -o /usr/local/bin/jq\nRUN chmod +x /usr/local/bin/jq\n#  Configuring aws-cli\nRUN mkdir -p /root/.aws\nCOPY config/aws_config /root/.aws/config\nCOPY config/aws_config /root/.boto\nRUN sed -i 's/default/Credentials/' /root/.boto\n#  Checking config\nRUN AWS_ACCESS_KEY=$( grep aws_access_key_id /root/.aws/config | awk -F= '{print $2}' ;) \\\n && if [ -z \"$AWS_ACCESS_KEY\" ] ; then exit 1 ; fi\nRUN AWS_SECRET_KEY=$( grep aws_secret_access_key /root/.aws/config | awk -F= '{print $2}' ;) \\\n && if [ -z \"$AWS_SECRET_KEY\" ] ; then exit 1 ; fi\n#  Creating ssh config\n# RUN touch /root/.ssh/config\nCOPY config/*.key /root/.ssh/\n# RUN chmod 600 /root/.ssh/config\nRUN chmod 600 /root/.ssh/*.key\n#  Installing etcd and skydns\nRUN aws s3 cp s3://bdoss-deploy/utils/skydns/skydns /root/bin/skydns\nRUN aws s3 cp s3://bdoss-deploy/utils/etcd/etcd /root/bin/etcd\nRUN aws s3 cp s3://bdoss-deploy/utils/etcd/etcdctl /root/bin/etcdctl\nRUN chmod 744 /root/bin/skydns\nRUN chmod 744 /root/bin/etcd\nRUN chmod 744 /root/bin/etcdctl\nRUN ln -s /root/bin/skydns /usr/local/bin/skydns\nRUN ln -s /root/bin/etcd /usr/local/bin/etcd\nRUN ln -s /root/bin/etcdctl /usr/local/bin/etcdctl\n#  Preparing daemon scripts\nRUN mkdir /etc/service/etcd\nRUN mkdir /etc/service/skydns\nRUN mkdir /usr/local/bin/default.etcd\nRUN echo \"#!/bin/sh\\nexec /usr/local/bin/etcd -data-dir /usr/local/bin/default.etcd >>/var/log/etcd.log 2>&1\" > /etc/service/etcd/run\nRUN echo \"#!/bin/sh\\nif ps aux | grep /etcd | grep -v grep > /dev/null\\n then\\n sleep 10\\n exec /usr/local/bin/skydns -verbose -addr=\"127.0.0.1:53\" -nameservers=\"8.8.8.8:53,8.8.4.4:53\" -machines=\"http://127.0.0.1:4001\" -domain=\"aws.\" >>/var/log/skydns.log 2>&1\\nfi\" > /etc/service/skydns/run\nRUN chmod 744 /etc/service/etcd/run\nRUN chmod 744 /etc/service/skydns/run\n#  Setting crontab\nRUN echo \"* * * * * root python /deploy/supervisor/scripts/cgnaws/update_dns.py >> /var/log/cron.log 2>&1\" >> /etc/crontab\nRUN touch /var/log/cron.log\n#  Copying info script and configuring it\nRUN mkdir -p /root/.ssh\nCOPY . /root/\nRUN ln -s /root/scripts/cgnaws/awsinfo.py /usr/local/bin/awsinfo\nRUN ln -s /root/scripts/cgnaws/template_ssh.py /usr/local/bin/templatessh\n#  RUN chmod +x /usr/local/bin/awsinfo\n#  Link master script to bin directory\nRUN ln -s /deploy/minotaur.py /usr/local/bin/minotaur\n#  Pre-creating deploy volume path\nVOLUME [\"/deploy\"]\n#  Cleaning up APT when done\n#  RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Setting up ntp\nRUN apt-get update\nRUN apt-get install ntp -y\nRUN /usr/sbin/ntpdate 0.ubuntu.pool.ntp.org \\\n && service ntp start\n#  Turn off syslog-to-docker-logs forwarder\nRUN touch /etc/service/syslog-forwarder/down\nWORKDIR /deploy\n","injectedSmells":[],"originalDockerfileHash":"7319361ab4be1e8e9a6e5ada66c9b4b2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed to the Apache Software Foundation (ASF) under one or more\n#   contributor license agreements.  See the NOTICE file distributed with\n#   this work for additional information regarding copyright ownership.\n#   The ASF licenses this file to You under the Apache License, Version 2.0\n#   (the \"License\"); you may not use this file except in compliance with\n#   the License.  You may obtain a copy of the License at\n#   \n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Supervisor\n#\nFROM phusion/baseimage:latest\nMAINTAINER Big Data Open Source Security LLC <info@stealth.ly>\n#   Setting correct environment variables\nENV HOME=\"/root\"\n#   Regenerating SSH host keys\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n#   Using baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n#   Installing AWS-related stuff\nRUN apt-get update\nRUN apt-get install git-core python-boto python-pip curl dnsutils -y\nRUN pip install awscli\nRUN pip install six==1.8.0\nRUN curl https://stedolan.github.io/jq/download/linux64/jq -o /usr/local/bin/jq\nRUN chmod +x /usr/local/bin/jq\n#   Configuring aws-cli\nRUN mkdir -p /root/.aws\nCOPY config/aws_config /root/.aws/config\nCOPY config/aws_config /root/.boto\nRUN sed -i 's/default/Credentials/' /root/.boto\n#   Checking config\nRUN AWS_ACCESS_KEY=$( grep aws_access_key_id /root/.aws/config | awk -F= '{print $2}' ;) \\\n && if [ -z \"$AWS_ACCESS_KEY\" ] ; then exit 1 ; fi\nRUN AWS_SECRET_KEY=$( grep aws_secret_access_key /root/.aws/config | awk -F= '{print $2}' ;) \\\n && if [ -z \"$AWS_SECRET_KEY\" ] ; then exit 1 ; fi\n#   Creating ssh config\n#  RUN touch /root/.ssh/config\nCOPY config/*.key /root/.ssh/\n#  RUN chmod 600 /root/.ssh/config\nRUN chmod 600 /root/.ssh/*.key\n#   Installing etcd and skydns\nRUN aws s3 cp s3://bdoss-deploy/utils/skydns/skydns /root/bin/skydns\nRUN aws s3 cp s3://bdoss-deploy/utils/etcd/etcd /root/bin/etcd\nRUN aws s3 cp s3://bdoss-deploy/utils/etcd/etcdctl /root/bin/etcdctl\nRUN chmod 744 /root/bin/skydns\nRUN chmod 744 /root/bin/etcd\nRUN chmod 744 /root/bin/etcdctl\nRUN ln -s /root/bin/skydns /usr/local/bin/skydns\nRUN ln -s /root/bin/etcd /usr/local/bin/etcd\nRUN ln -s /root/bin/etcdctl /usr/local/bin/etcdctl\n#   Preparing daemon scripts\nRUN mkdir /etc/service/etcd\nRUN mkdir /etc/service/skydns\nRUN mkdir /usr/local/bin/default.etcd\nRUN echo \"#!/bin/sh\\nexec /usr/local/bin/etcd -data-dir /usr/local/bin/default.etcd >>/var/log/etcd.log 2>&1\" > /etc/service/etcd/run\nRUN echo \"#!/bin/sh\\nif ps aux | grep /etcd | grep -v grep > /dev/null\\n then\\n sleep 10\\n exec /usr/local/bin/skydns -verbose -addr=\"127.0.0.1:53\" -nameservers=\"8.8.8.8:53,8.8.4.4:53\" -machines=\"http://127.0.0.1:4001\" -domain=\"aws.\" >>/var/log/skydns.log 2>&1\\nfi\" > /etc/service/skydns/run\nRUN chmod 744 /etc/service/etcd/run\nRUN chmod 744 /etc/service/skydns/run\n#   Setting crontab\nRUN echo \"* * * * * root python /deploy/supervisor/scripts/cgnaws/update_dns.py >> /var/log/cron.log 2>&1\" >> /etc/crontab\nRUN touch /var/log/cron.log\n#   Copying info script and configuring it\nRUN mkdir -p /root/.ssh\nCOPY . /root/\nRUN ln -s /root/scripts/cgnaws/awsinfo.py /usr/local/bin/awsinfo\nRUN ln -s /root/scripts/cgnaws/template_ssh.py /usr/local/bin/templatessh\n#   RUN chmod +x /usr/local/bin/awsinfo\n#   Link master script to bin directory\nRUN ln -s /deploy/minotaur.py /usr/local/bin/minotaur\n#   Pre-creating deploy volume path\nVOLUME [\"/deploy\"]\n#   Cleaning up APT when done\n#   RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Setting up ntp\nRUN apt-get update\nRUN apt-get install ntp -y\nRUN /usr/sbin/ntpdate 0.ubuntu.pool.ntp.org \\\n && service ntp start\n#   Turn off syslog-to-docker-logs forwarder\nRUN touch /etc/service/syslog-forwarder/down\nWORKDIR /deploy\n","originalDockerfileUglifiedHash":"96205bfa2119819b879fd04127f807ec","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/82fc845356ed85a56823fd4968690c7c69242115.dockerfile"}