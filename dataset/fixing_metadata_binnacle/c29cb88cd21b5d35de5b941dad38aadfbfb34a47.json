{"seed":3561533141,"processedDockerfileHash":"f6f00ff4991c9a79b49eaa5f57f4dca3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\nFROM ubuntu:16.04\nMAINTAINER Maju Ansari <majjansari@gmail.com>\nRUN DEBIAN_FRONTEND=noninteractive\nRUN locale-gen en_US.UTF-8\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV TERM=\"xterm\"\n#   Add the \"PHP 7\" ppa\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y \\\n && add-apt-repository -y ppa:ondrej/php\n#\n#  --------------------------------------------------------------------------\n#   Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Install \"PHP Extentions\", \"libraries\", \"Software's\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends php7.0-cli=7.0.33-0ubuntu0.16.04.16 php7.0-curl=7.0.33-0ubuntu0.16.04.16 php7.0-mysql=7.0.33-0ubuntu0.16.04.16 php7.0-pgsql=7.0.33-0ubuntu0.16.04.16 php7.0-sqlite php7.0-sqlite3=7.0.33-0ubuntu0.16.04.16 git=1:2.7.4-0ubuntu1.10 curl=7.47.0-1ubuntu2.19 vim=2:7.4.1689-3ubuntu1.5 nano=2.5.3-2ubuntu2 npm=3.5.2-0ubuntu4 wget=1.17.1-1ubuntu1.5 zip=3.0-11 unzip=6.0-20ubuntu1.1 -y\n#  ####################################\n#   Composer:\n#  ####################################\n#   Install composer and add its bin to the PATH.\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#   Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nARG PGID=1000\nRUN groupadd -g $PGID dev \\\n && useradd -u $PUID -g dev -m dev\n#  ####################################\n#   Drush:\n#  ####################################\nUSER root\nENV DRUSH_VERSION=\"8.1.2\"\nARG INSTALL_DRUSH=FALSE\nENV INSTALL_DRUSH=\"${INSTALL_DRUSH}\"\nRUN if [ ${INSTALL_DRUSH} = true ] ; then curl -fsSL -o /usr/local/bin/drush https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar | bash \\\n && chmod +x /usr/local/bin/drush \\\n && drush core-status ; fi\n#\n#  --------------------------------------------------------------------------\n#   Install sonar runner\n#  --------------------------------------------------------------------------\n#\nWORKDIR /usr/local\nENV PATH=\"/usr/local/sonar-runner-2.4/bin:$PATH\"\nARG INSTALL_RUNNER=FALSE\nRUN if [ ${INSTALL_RUNNER} = true ] ; then wget http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/2.4/sonar-runner-dist-2.4.zip \\\n && unzip sonar-runner-dist-2.4.zip \\\n && rm sonar-runner-dist-2.4.zip \\\n && apt-get install --no-install-recommends default-jdk=2:1.8-56ubuntu2 default-jre=2:1.8-56ubuntu2 -y ; fi\n#   Clean up\nUSER root\n#   Set default work directory\nWORKDIR /var/www/\n#   cleanup\nUSER root\nRUN apt-get clean \\\n && rm -rfv /tmp/* /var/lib/apt/lists/* /var/tmp/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n# --------------------------------------------------------------------------\n#  Image Setup\n# --------------------------------------------------------------------------\n#\nFROM ubuntu:16.04\nMAINTAINER Maju Ansari <majjansari@gmail.com>\nRUN DEBIAN_FRONTEND=noninteractive\nRUN locale-gen en_US.UTF-8\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV TERM=\"xterm\"\n#  Add the \"PHP 7\" ppa\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:ondrej/php\n#\n# --------------------------------------------------------------------------\n#  Software's Installation\n# --------------------------------------------------------------------------\n#\n#  Install \"PHP Extentions\", \"libraries\", \"Software's\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends php7.0-cli php7.0-curl php7.0-mysql php7.0-pgsql php7.0-sqlite php7.0-sqlite3 git curl vim nano npm wget zip unzip -y\n# ####################################\n#  Composer:\n# ####################################\n#  Install composer and add its bin to the PATH.\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#  Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nARG PGID=1000\nRUN groupadd -g $PGID dev \\\n && useradd -u $PUID -g dev -m dev\n# ####################################\n#  Drush:\n# ####################################\nUSER root\nENV DRUSH_VERSION=\"8.1.2\"\nARG INSTALL_DRUSH=FALSE\nENV INSTALL_DRUSH=\"${INSTALL_DRUSH}\"\nRUN if [ ${INSTALL_DRUSH} = true ] ; then curl -fsSL -o /usr/local/bin/drush https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar | bash \\\n && chmod +x /usr/local/bin/drush \\\n && drush core-status ; fi\n#\n# --------------------------------------------------------------------------\n#  Install sonar runner\n# --------------------------------------------------------------------------\n#\nWORKDIR /usr/local\nENV PATH=\"/usr/local/sonar-runner-2.4/bin:$PATH\"\nARG INSTALL_RUNNER=FALSE\nRUN if [ ${INSTALL_RUNNER} = true ] ; then wget http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/2.4/sonar-runner-dist-2.4.zip \\\n && unzip sonar-runner-dist-2.4.zip \\\n && rm sonar-runner-dist-2.4.zip \\\n && apt-get install --no-install-recommends default-jdk default-jre -y ; fi\n#  Clean up\nUSER root\n#  Set default work directory\nWORKDIR /var/www/\n#  cleanup\nUSER root\nRUN apt-get clean \\\n && rm -rfv /tmp/* /var/lib/apt/lists/* /var/tmp/*\n","injectedSmells":[],"originalDockerfileHash":"d92bd2a959d7fb83eafbb7a7d448aed5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\nFROM ubuntu:16.04\nMAINTAINER Maju Ansari <majjansari@gmail.com>\nRUN DEBIAN_FRONTEND=noninteractive\nRUN locale-gen en_US.UTF-8\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV TERM=\"xterm\"\n#   Add the \"PHP 7\" ppa\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:ondrej/php\n#\n#  --------------------------------------------------------------------------\n#   Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   Install \"PHP Extentions\", \"libraries\", \"Software's\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends php7.0-cli php7.0-curl php7.0-mysql php7.0-pgsql php7.0-sqlite php7.0-sqlite3 git curl vim nano npm wget zip unzip -y\n#  ####################################\n#   Composer:\n#  ####################################\n#   Install composer and add its bin to the PATH.\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#   Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nARG PGID=1000\nRUN groupadd -g $PGID dev \\\n && useradd -u $PUID -g dev -m dev\n#  ####################################\n#   Drush:\n#  ####################################\nUSER root\nENV DRUSH_VERSION=\"8.1.2\"\nARG INSTALL_DRUSH=FALSE\nENV INSTALL_DRUSH=\"${INSTALL_DRUSH}\"\nRUN if [ ${INSTALL_DRUSH} = true ] ; then curl -fsSL -o /usr/local/bin/drush https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar | bash \\\n && chmod +x /usr/local/bin/drush \\\n && drush core-status ; fi\n#\n#  --------------------------------------------------------------------------\n#   Install sonar runner\n#  --------------------------------------------------------------------------\n#\nWORKDIR /usr/local\nENV PATH=\"/usr/local/sonar-runner-2.4/bin:$PATH\"\nARG INSTALL_RUNNER=FALSE\nRUN if [ ${INSTALL_RUNNER} = true ] ; then wget http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/2.4/sonar-runner-dist-2.4.zip \\\n && unzip sonar-runner-dist-2.4.zip \\\n && rm sonar-runner-dist-2.4.zip \\\n && apt-get install --no-install-recommends default-jdk default-jre -y ; fi\n#   Clean up\nUSER root\n#   Set default work directory\nWORKDIR /var/www/\n#   cleanup\nUSER root\nRUN apt-get clean \\\n && rm -rfv /tmp/* /var/lib/apt/lists/* /var/tmp/*\n","originalDockerfileUglifiedHash":"946e5b9128b7474d1c37e6f2229957b6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c29cb88cd21b5d35de5b941dad38aadfbfb34a47.dockerfile"}