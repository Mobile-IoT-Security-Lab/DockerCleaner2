{"seed":3588004551,"processedDockerfileHash":"fb06d5abd8a3f5e48a4b703596680c5a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Grab a snapshot of the `alpine` docker image from September 19, 2016.\nFROM alpine@sha256:02eb5cfe4b721495135728ab4aea87418fd4edbfbf83612130a81191f0b2aae3\n#   Add a partial local mirror of the alpine latest repository, signed\n#   by the alpine developers.\nCOPY apks /apks\nRUN echo \"/apks/\" > /etc/apk/repositories\n#   Install some utilities that we need.\nRUN apk update\nRUN apk add alpine-sdk=1.0-r1\nRUN apk add nano=7.0-r0\nRUN apk add xorriso=1.5.4-r2\nRUN apk add syslinux=6.04_pre1-r11\n#   Add the 'builder' user (to the 'abuild' group)\nRUN echo \"builder:x:1000:100::/home/builder:/bin/bash\" >> /etc/passwd\nRUN mkdir /home/builder\nRUN chown builder:abuild /home/builder\nRUN sed -i.bak '/abuild/d' /etc/group\nRUN echo \"abuild:x:300:builder\" >> /etc/group\n#   Add the APK keys to satisfy alpine's tooling. We do not\n#   rely on these keys for authentication or a source of trust;\n#   they are public.\nRUN mkdir /home/builder/.abuild/\nCOPY iso.rsa /home/builder/.abuild/iso.rsa\nRUN chmod 550 /home/builder/.abuild/iso.rsa\nCOPY iso.rsa.pub /home/builder/.abuild/iso.rsa.pub\nRUN echo 'PACKAGER_PRIVKEY=\"/home/builder/.abuild/iso.rsa\"' > /home/builder/.abuild/abuild.conf\nRUN chown -R builder:abuild /home/builder/.abuild\nRUN mkdir /root/.abuild/\nCOPY iso.rsa /root/.abuild/iso.rsa\nRUN chmod 550 /root/.abuild/iso.rsa\nCOPY iso.rsa.pub /root/.abuild/iso.rsa.pub\nRUN echo 'PACKAGER_PRIVKEY=\"/root/.abuild/iso.rsa\"' > /root/.abuild/abuild.conf\nRUN chown -R builder:abuild /root/.abuild\nCOPY iso.rsa.pub /etc/apk/keys/iso.rsa.pub\n#   Add the `mpc_compute` package.\nCOPY mpc_compute /home/builder/mpc_compute/\nRUN chown -R builder:abuild /home/builder/mpc_compute/\n#   Add the `mpc_network` package\nCOPY mpc_network /home/builder/mpc_network/\nRUN chown -R builder:abuild /home/builder/mpc_network/\n#   Add the `gradm-improved` package\nCOPY gradm-improved /home/builder/gradm-improved/\nRUN chown -R builder:abuild /home/builder/gradm-improved/\n#   Run some setup as `builder`\nUSER builder\n#   Build the \"gradm-improved\" package.\nWORKDIR /home/builder/gradm-improved/\nRUN abuild checksum\nRUN abuild -r\nRUN cp -r /home/builder/packages/builder /home/builder/apks_custom_gradm/\nRUN rm -rf /home/builder/packages\nUSER root\nRUN echo \"/home/builder/apks_custom_gradm/\" >> /etc/apk/repositories\nRUN apk update\nUSER builder\n#   Build the MPC \"compute\" package that runs at boot.\nWORKDIR /home/builder/mpc_compute/\nRUN abuild checksum\nRUN abuild -r\n#   Build the MPC \"network\" package that runs at boot.\nRUN rm /home/builder/packages/builder/x86_64/APKINDEX.tar.gz\nWORKDIR /home/builder/mpc_network/\nRUN abuild checksum\nRUN abuild -r\n#   Move built packages into apks_custom.\nRUN cp -r /home/builder/packages/builder /home/builder/apks_custom/\n#   Add the custom apks repository\nUSER root\nRUN echo \"/home/builder/apks_custom/\" >> /etc/apk/repositories\nRUN apk update\nUSER builder\n#   Grab the `alpine-iso` package.\nWORKDIR /home/builder/\nCOPY alpine-iso /home/builder/alpine-iso/\nWORKDIR /home/builder/alpine-iso/\n#   Grab the configurations for the ISOs\nCOPY alpine-compute.conf.mk /home/builder/alpine-iso/alpine-compute.conf.mk\nCOPY alpine-compute.packages /home/builder/alpine-iso/alpine-compute.packages\nCOPY alpine-network.conf.mk /home/builder/alpine-iso/alpine-network.conf.mk\nCOPY alpine-network.packages /home/builder/alpine-iso/alpine-network.packages\n#   Build the ISOs\nUSER root\nRUN make PROFILE=alpine-compute iso\nRUN make PROFILE=alpine-network iso\nRUN mkdir -p /home/builder/target/\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Grab a snapshot of the `alpine` docker image from September 19, 2016.\nFROM alpine@sha256:02eb5cfe4b721495135728ab4aea87418fd4edbfbf83612130a81191f0b2aae3\n#  Add a partial local mirror of the alpine latest repository, signed\n#  by the alpine developers.\nADD apks /apks\nRUN echo \"/apks/\" > /etc/apk/repositories\n#  Install some utilities that we need.\nRUN apk update\nRUN apk add alpine-sdk\nRUN apk add nano\nRUN apk add xorriso\nRUN apk add syslinux\n#  Add the 'builder' user (to the 'abuild' group)\nRUN echo \"builder:x:1000:100::/home/builder:/bin/bash\" >> /etc/passwd\nRUN mkdir /home/builder\nRUN chown builder:abuild /home/builder\nRUN sed -i.bak '/abuild/d' /etc/group\nRUN echo \"abuild:x:300:builder\" >> /etc/group\n#  Add the APK keys to satisfy alpine's tooling. We do not\n#  rely on these keys for authentication or a source of trust;\n#  they are public.\nRUN mkdir /home/builder/.abuild/\nADD iso.rsa /home/builder/.abuild/iso.rsa\nRUN chmod 550 /home/builder/.abuild/iso.rsa\nADD iso.rsa.pub /home/builder/.abuild/iso.rsa.pub\nRUN echo 'PACKAGER_PRIVKEY=\"/home/builder/.abuild/iso.rsa\"' > /home/builder/.abuild/abuild.conf\nRUN chown -R builder:abuild /home/builder/.abuild\nRUN mkdir /root/.abuild/\nADD iso.rsa /root/.abuild/iso.rsa\nRUN chmod 550 /root/.abuild/iso.rsa\nADD iso.rsa.pub /root/.abuild/iso.rsa.pub\nRUN echo 'PACKAGER_PRIVKEY=\"/root/.abuild/iso.rsa\"' > /root/.abuild/abuild.conf\nRUN chown -R builder:abuild /root/.abuild\nADD iso.rsa.pub /etc/apk/keys/iso.rsa.pub\n#  Add the `mpc_compute` package.\nADD mpc_compute /home/builder/mpc_compute/\nRUN chown -R builder:abuild /home/builder/mpc_compute/\n#  Add the `mpc_network` package\nADD mpc_network /home/builder/mpc_network/\nRUN chown -R builder:abuild /home/builder/mpc_network/\n#  Add the `gradm-improved` package\nADD gradm-improved /home/builder/gradm-improved/\nRUN chown -R builder:abuild /home/builder/gradm-improved/\n#  Run some setup as `builder`\nUSER builder\n#  Build the \"gradm-improved\" package.\nWORKDIR /home/builder/gradm-improved/\nRUN abuild checksum\nRUN abuild -r\nRUN cp -r /home/builder/packages/builder /home/builder/apks_custom_gradm/\nRUN rm -rf /home/builder/packages\nUSER root\nRUN echo \"/home/builder/apks_custom_gradm/\" >> /etc/apk/repositories\nRUN apk update\nUSER builder\n#  Build the MPC \"compute\" package that runs at boot.\nWORKDIR /home/builder/mpc_compute/\nRUN abuild checksum\nRUN abuild -r\n#  Build the MPC \"network\" package that runs at boot.\nRUN rm /home/builder/packages/builder/x86_64/APKINDEX.tar.gz\nWORKDIR /home/builder/mpc_network/\nRUN abuild checksum\nRUN abuild -r\n#  Move built packages into apks_custom.\nRUN cp -r /home/builder/packages/builder /home/builder/apks_custom/\n#  Add the custom apks repository\nUSER root\nRUN echo \"/home/builder/apks_custom/\" >> /etc/apk/repositories\nRUN apk update\nUSER builder\n#  Grab the `alpine-iso` package.\nWORKDIR /home/builder/\nADD alpine-iso /home/builder/alpine-iso/\nWORKDIR /home/builder/alpine-iso/\n#  Grab the configurations for the ISOs\nADD alpine-compute.conf.mk /home/builder/alpine-iso/alpine-compute.conf.mk\nADD alpine-compute.packages /home/builder/alpine-iso/alpine-compute.packages\nADD alpine-network.conf.mk /home/builder/alpine-iso/alpine-network.conf.mk\nADD alpine-network.packages /home/builder/alpine-iso/alpine-network.packages\n#  Build the ISOs\nUSER root\nRUN make PROFILE=alpine-compute iso\nRUN make PROFILE=alpine-network iso\nRUN mkdir -p /home/builder/target/\n","injectedSmells":[],"originalDockerfileHash":"471e8a83ddc7819990042c4dd5dc9ac7","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Grab a snapshot of the `alpine` docker image from September 19, 2016.\nFROM alpine@sha256:02eb5cfe4b721495135728ab4aea87418fd4edbfbf83612130a81191f0b2aae3\n#   Add a partial local mirror of the alpine latest repository, signed\n#   by the alpine developers.\nADD apks /apks\nRUN echo \"/apks/\" > /etc/apk/repositories\n#   Install some utilities that we need.\nRUN apk update\nRUN apk add alpine-sdk\nRUN apk add nano\nRUN apk add xorriso\nRUN apk add syslinux\n#   Add the 'builder' user (to the 'abuild' group)\nRUN echo \"builder:x:1000:100::/home/builder:/bin/bash\" >> /etc/passwd\nRUN mkdir /home/builder\nRUN chown builder:abuild /home/builder\nRUN sed -i.bak '/abuild/d' /etc/group\nRUN echo \"abuild:x:300:builder\" >> /etc/group\n#   Add the APK keys to satisfy alpine's tooling. We do not\n#   rely on these keys for authentication or a source of trust;\n#   they are public.\nRUN mkdir /home/builder/.abuild/\nADD iso.rsa /home/builder/.abuild/iso.rsa\nRUN chmod 550 /home/builder/.abuild/iso.rsa\nADD iso.rsa.pub /home/builder/.abuild/iso.rsa.pub\nRUN echo 'PACKAGER_PRIVKEY=\"/home/builder/.abuild/iso.rsa\"' > /home/builder/.abuild/abuild.conf\nRUN chown -R builder:abuild /home/builder/.abuild\nRUN mkdir /root/.abuild/\nADD iso.rsa /root/.abuild/iso.rsa\nRUN chmod 550 /root/.abuild/iso.rsa\nADD iso.rsa.pub /root/.abuild/iso.rsa.pub\nRUN echo 'PACKAGER_PRIVKEY=\"/root/.abuild/iso.rsa\"' > /root/.abuild/abuild.conf\nRUN chown -R builder:abuild /root/.abuild\nADD iso.rsa.pub /etc/apk/keys/iso.rsa.pub\n#   Add the `mpc_compute` package.\nADD mpc_compute /home/builder/mpc_compute/\nRUN chown -R builder:abuild /home/builder/mpc_compute/\n#   Add the `mpc_network` package\nADD mpc_network /home/builder/mpc_network/\nRUN chown -R builder:abuild /home/builder/mpc_network/\n#   Add the `gradm-improved` package\nADD gradm-improved /home/builder/gradm-improved/\nRUN chown -R builder:abuild /home/builder/gradm-improved/\n#   Run some setup as `builder`\nUSER builder\n#   Build the \"gradm-improved\" package.\nWORKDIR /home/builder/gradm-improved/\nRUN abuild checksum\nRUN abuild -r\nRUN cp -r /home/builder/packages/builder /home/builder/apks_custom_gradm/\nRUN rm -rf /home/builder/packages\nUSER root\nRUN echo \"/home/builder/apks_custom_gradm/\" >> /etc/apk/repositories\nRUN apk update\nUSER builder\n#   Build the MPC \"compute\" package that runs at boot.\nWORKDIR /home/builder/mpc_compute/\nRUN abuild checksum\nRUN abuild -r\n#   Build the MPC \"network\" package that runs at boot.\nRUN rm /home/builder/packages/builder/x86_64/APKINDEX.tar.gz\nWORKDIR /home/builder/mpc_network/\nRUN abuild checksum\nRUN abuild -r\n#   Move built packages into apks_custom.\nRUN cp -r /home/builder/packages/builder /home/builder/apks_custom/\n#   Add the custom apks repository\nUSER root\nRUN echo \"/home/builder/apks_custom/\" >> /etc/apk/repositories\nRUN apk update\nUSER builder\n#   Grab the `alpine-iso` package.\nWORKDIR /home/builder/\nADD alpine-iso /home/builder/alpine-iso/\nWORKDIR /home/builder/alpine-iso/\n#   Grab the configurations for the ISOs\nADD alpine-compute.conf.mk /home/builder/alpine-iso/alpine-compute.conf.mk\nADD alpine-compute.packages /home/builder/alpine-iso/alpine-compute.packages\nADD alpine-network.conf.mk /home/builder/alpine-iso/alpine-network.conf.mk\nADD alpine-network.packages /home/builder/alpine-iso/alpine-network.packages\n#   Build the ISOs\nUSER root\nRUN make PROFILE=alpine-compute iso\nRUN make PROFILE=alpine-network iso\nRUN mkdir -p /home/builder/target/\n","originalDockerfileUglifiedHash":"6ab6809f3fc7fde485bce49ed56c1fcd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c22925ff0f06a416cf88b830671959139e765d58.dockerfile"}