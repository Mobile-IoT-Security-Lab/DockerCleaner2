{"seed":2789643544,"processedDockerfileHash":"66f5f518ae489b0e1a66416618249f5b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM openjdk:8-jdk\n#  FROM https://github.com/docker-library/rabbitmq/blob/29121864d4892b2481706df023a53e31fececd02/Dockerfile\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r rabbitmq \\\n && useradd -r -d /var/lib/rabbitmq -m -g rabbitmq rabbitmq\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20210119 wget=1.21-1+deb11u1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove wget\n#   Add the officially endorsed Erlang debian repository:\n#   See:\n#    - http://www.erlang.org/download.html\n#    - https://www.erlang-solutions.com/resources/download.html\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 434975BD900CCBE4F7EE1B1ED208507CA14F4FCA\nRUN echo 'deb http://packages.erlang-solutions.com/debian jessie contrib' > /etc/apt/sources.list.d/erlang.list\n#   install Erlang\nRUN apt-get update \\\n && apt-get install --no-install-recommends erlang-asn1=1:23.2.6+dfsg-1 erlang-base-hipe=1:23.2.6+dfsg-1 erlang-crypto=1:23.2.6+dfsg-1 erlang-eldap=1:23.2.6+dfsg-1 erlang-inets=1:23.2.6+dfsg-1 erlang-mnesia=1:23.2.6+dfsg-1 erlang-nox=1:23.2.6+dfsg-1 erlang-os-mon=1:23.2.6+dfsg-1 erlang-public-key=1:23.2.6+dfsg-1 erlang-ssl=1:23.2.6+dfsg-1 erlang-xmerl=1:23.2.6+dfsg-1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=\"-\" \\\n    RABBITMQ_SASL_LOGS=\"-\"\n#   https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\n#   http://www.rabbitmq.com/install-debian.html\n#   \"Please note that the word testing in this line refers to the state of our release of RabbitMQ, not any particular Debian distribution.\"\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 0A9AF2115F4687BD29803A206B73A36E6026DFCA\nRUN echo 'deb http://www.rabbitmq.com/debian testing main' > /etc/apt/sources.list.d/rabbitmq.list\nENV RABBITMQ_VERSION=\"3.6.6\"\nENV RABBITMQ_DEBIAN_VERSION=\"3.6.6-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends rabbitmq-server=$RABBITMQ_DEBIAN_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#   /usr/sbin/rabbitmq-server has some irritating behavior, and only exists to \"su - rabbitmq /usr/lib/rabbitmq/bin/rabbitmq-server ...\"\nENV PATH=\"/usr/lib/rabbitmq/bin:$PATH\"\nRUN echo '[ { rabbit, [ { loopback_users, [ ] } ] } ].' > /etc/rabbitmq/rabbitmq.config\n#   set home so that any `--user` knows where to put the erlang cookie\nENV HOME=\"/var/lib/rabbitmq\"\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq \\\n && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq \\\n && chmod 777 /var/lib/rabbitmq /etc/rabbitmq\nVOLUME /var/lib/rabbitmq\n#   add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\nRUN ln -sf /usr/lib/rabbitmq/lib/rabbitmq_server-$RABBITMQ_VERSION/plugins /plugins\nCOPY docker-entrypoint-rabbit.sh /\nEXPOSE 4369/tcp 5671/tcp 5672/tcp 25672/tcp\n#   FROM https://github.com/docker-library/postgres/blob/e4942cb0f79b61024963dc0ac196375b26fa60dd/9.6/Dockerfile\n#   explicitly set user/group IDs\nRUN groupadd -r postgres \\\n && useradd -r -g postgres postgres\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales=2.31-13+deb11u5 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\nENV PG_MAJOR=\"9.6\"\nENV PG_VERSION=\"9.6.3-1.pgdg80+1\"\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql-common=225 -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n && apt-get install --no-install-recommends postgresql-$PG_MAJOR=$PG_VERSION postgresql-contrib-$PG_MAJOR=$PG_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nVOLUME /var/lib/postgresql/data\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install --no-install-recommends nodejs=12.22.12~dfsg-1~deb11u3 -y\nCOPY docker-entrypoint-postgres.sh /\nEXPOSE 5432/tcp\nCOPY csync.sh /\nENTRYPOINT [\"/csync.sh\"]\nCMD []\nUSER root\nEXPOSE 6005/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openjdk:8-jdk\n# FROM https://github.com/docker-library/rabbitmq/blob/29121864d4892b2481706df023a53e31fececd02/Dockerfile\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r rabbitmq \\\n && useradd -r -d /var/lib/rabbitmq -m -g rabbitmq rabbitmq\n#  grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove wget\n#  Add the officially endorsed Erlang debian repository:\n#  See:\n#   - http://www.erlang.org/download.html\n#   - https://www.erlang-solutions.com/resources/download.html\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 434975BD900CCBE4F7EE1B1ED208507CA14F4FCA\nRUN echo 'deb http://packages.erlang-solutions.com/debian jessie contrib' > /etc/apt/sources.list.d/erlang.list\n#  install Erlang\nRUN apt-get update \\\n && apt-get install --no-install-recommends erlang-asn1 erlang-base-hipe erlang-crypto erlang-eldap erlang-inets erlang-mnesia erlang-nox erlang-os-mon erlang-public-key erlang-ssl erlang-xmerl -y \\\n && rm -rf /var/lib/apt/lists/*\n#  get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=\"-\" \\\n    RABBITMQ_SASL_LOGS=\"-\"\n#  https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\n#  http://www.rabbitmq.com/install-debian.html\n#  \"Please note that the word testing in this line refers to the state of our release of RabbitMQ, not any particular Debian distribution.\"\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 0A9AF2115F4687BD29803A206B73A36E6026DFCA\nRUN echo 'deb http://www.rabbitmq.com/debian testing main' > /etc/apt/sources.list.d/rabbitmq.list\nENV RABBITMQ_VERSION=\"3.6.6\"\nENV RABBITMQ_DEBIAN_VERSION=\"3.6.6-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends rabbitmq-server=$RABBITMQ_DEBIAN_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#  /usr/sbin/rabbitmq-server has some irritating behavior, and only exists to \"su - rabbitmq /usr/lib/rabbitmq/bin/rabbitmq-server ...\"\nENV PATH=\"/usr/lib/rabbitmq/bin:$PATH\"\nRUN echo '[ { rabbit, [ { loopback_users, [ ] } ] } ].' > /etc/rabbitmq/rabbitmq.config\n#  set home so that any `--user` knows where to put the erlang cookie\nENV HOME=\"/var/lib/rabbitmq\"\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq \\\n && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq \\\n && chmod 777 /var/lib/rabbitmq /etc/rabbitmq\nVOLUME /var/lib/rabbitmq\n#  add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\nRUN ln -sf /usr/lib/rabbitmq/lib/rabbitmq_server-$RABBITMQ_VERSION/plugins /plugins\nCOPY docker-entrypoint-rabbit.sh /\nEXPOSE 4369/tcp 5671/tcp 5672/tcp 25672/tcp\n#  FROM https://github.com/docker-library/postgres/blob/e4942cb0f79b61024963dc0ac196375b26fa60dd/9.6/Dockerfile\n#  explicitly set user/group IDs\nRUN groupadd -r postgres \\\n && useradd -r -g postgres postgres\n#  make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\nENV PG_MAJOR=\"9.6\"\nENV PG_VERSION=\"9.6.3-1.pgdg80+1\"\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n && apt-get install postgresql-common -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n && apt-get install postgresql-$PG_MAJOR=$PG_VERSION postgresql-contrib-$PG_MAJOR=$PG_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#  make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nVOLUME /var/lib/postgresql/data\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs -y\nCOPY docker-entrypoint-postgres.sh /\nEXPOSE 5432/tcp\nCOPY csync.sh /\nENTRYPOINT [\"/csync.sh\"]\nCMD []\nUSER root\nEXPOSE 6005/tcp\n","injectedSmells":[],"originalDockerfileHash":"3aca13596734174f986b956ca6469518","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openjdk:8-jdk\n#  FROM https://github.com/docker-library/rabbitmq/blob/29121864d4892b2481706df023a53e31fececd02/Dockerfile\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r rabbitmq \\\n && useradd -r -d /var/lib/rabbitmq -m -g rabbitmq rabbitmq\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove wget\n#   Add the officially endorsed Erlang debian repository:\n#   See:\n#    - http://www.erlang.org/download.html\n#    - https://www.erlang-solutions.com/resources/download.html\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 434975BD900CCBE4F7EE1B1ED208507CA14F4FCA\nRUN echo 'deb http://packages.erlang-solutions.com/debian jessie contrib' > /etc/apt/sources.list.d/erlang.list\n#   install Erlang\nRUN apt-get update \\\n && apt-get install --no-install-recommends erlang-asn1 erlang-base-hipe erlang-crypto erlang-eldap erlang-inets erlang-mnesia erlang-nox erlang-os-mon erlang-public-key erlang-ssl erlang-xmerl -y \\\n && rm -rf /var/lib/apt/lists/*\n#   get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=\"-\" \\\n    RABBITMQ_SASL_LOGS=\"-\"\n#   https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\n#   http://www.rabbitmq.com/install-debian.html\n#   \"Please note that the word testing in this line refers to the state of our release of RabbitMQ, not any particular Debian distribution.\"\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 0A9AF2115F4687BD29803A206B73A36E6026DFCA\nRUN echo 'deb http://www.rabbitmq.com/debian testing main' > /etc/apt/sources.list.d/rabbitmq.list\nENV RABBITMQ_VERSION=\"3.6.6\"\nENV RABBITMQ_DEBIAN_VERSION=\"3.6.6-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends rabbitmq-server=$RABBITMQ_DEBIAN_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#   /usr/sbin/rabbitmq-server has some irritating behavior, and only exists to \"su - rabbitmq /usr/lib/rabbitmq/bin/rabbitmq-server ...\"\nENV PATH=\"/usr/lib/rabbitmq/bin:$PATH\"\nRUN echo '[ { rabbit, [ { loopback_users, [ ] } ] } ].' > /etc/rabbitmq/rabbitmq.config\n#   set home so that any `--user` knows where to put the erlang cookie\nENV HOME=\"/var/lib/rabbitmq\"\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq \\\n && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq \\\n && chmod 777 /var/lib/rabbitmq /etc/rabbitmq\nVOLUME /var/lib/rabbitmq\n#   add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\nRUN ln -sf /usr/lib/rabbitmq/lib/rabbitmq_server-$RABBITMQ_VERSION/plugins /plugins\nCOPY docker-entrypoint-rabbit.sh /\nEXPOSE 4369/tcp 5671/tcp 5672/tcp 25672/tcp\n#   FROM https://github.com/docker-library/postgres/blob/e4942cb0f79b61024963dc0ac196375b26fa60dd/9.6/Dockerfile\n#   explicitly set user/group IDs\nRUN groupadd -r postgres \\\n && useradd -r -g postgres postgres\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\nENV PG_MAJOR=\"9.6\"\nENV PG_VERSION=\"9.6.3-1.pgdg80+1\"\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n && apt-get install postgresql-common -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n && apt-get install postgresql-$PG_MAJOR=$PG_VERSION postgresql-contrib-$PG_MAJOR=$PG_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nVOLUME /var/lib/postgresql/data\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs -y\nCOPY docker-entrypoint-postgres.sh /\nEXPOSE 5432/tcp\nCOPY csync.sh /\nENTRYPOINT [\"/csync.sh\"]\nCMD []\nUSER root\nEXPOSE 6005/tcp\n","originalDockerfileUglifiedHash":"5002fc38353e9292a7fec3d7098f2db4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/75b70c8e1303858038d36cdd179c0397de5e7a86.dockerfile"}