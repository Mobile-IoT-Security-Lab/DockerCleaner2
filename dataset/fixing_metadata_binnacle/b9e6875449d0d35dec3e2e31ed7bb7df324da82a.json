{"seed":1956818950,"processedDockerfileHash":"73ebf34cfa0751e31c00f97cc9a4494c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM openjdk:8-jre-alpine\nMAINTAINER Andre Rocha <andre@konkerlabs.com>\n#  ENV TZ=America/Sao_Paulo\n#  RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n#  RUN echo America/Sao_Paulo | tee /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata\n#  ENV TERM=xterm \\\n#  ENV TZ=America/Sao_Paulo\n#  RUN apk --update add tzdata && cp /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n#  apk del tzdata\n#  Jetty\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -S jetty \\\n && adduser -D -S -H -G jetty jetty \\\n && rm -rf /etc/group- /etc/passwd- /etc/shadow-\nRUN addgroup -S nginx \\\n && adduser -D -S -H -G nginx nginx \\\n && rm -rf /etc/group- /etc/passwd- /etc/shadow-\nENV JETTY_HOME=\"/usr/local/jetty\"\nENV PATH=\"$JETTY_HOME/bin:$PATH\"\nRUN mkdir -p \"$JETTY_HOME\"\nWORKDIR $JETTY_HOME\nENV JETTY_BASE=\"/var/lib/jetty\"\nRUN mkdir -p \"$JETTY_BASE\"\nENV JETTY_VERSION=\"9.3.12.v20160915\"\nENV JETTY_TGZ_URL=\"https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/$JETTY_VERSION/jetty-distribution-$JETTY_VERSION.tar.gz\"\n#   GPG Keys are personal keys of Jetty committers (see https://dev.eclipse.org/mhonarc/lists/jetty-users/msg05220.html)\nENV JETTY_GPG_KEYS=\"B59B67FD7904984367F931800818D9D68FB67BAC  5DE533CB43DAF8BC3E372283E7AE839CD7C58886\"\nRUN set -xe \\\n && apk add gnupg coreutils curl --no-cache --virtual .build-deps \\\n && curl -SL \"$JETTY_TGZ_URL\" -o jetty.tar.gz \\\n && curl -SL \"$JETTY_TGZ_URL.asc\" -o jetty.tar.gz.asc \\\n && tar -xvzf jetty.tar.gz \\\n && mv jetty-distribution-$JETTY_VERSION/* ./ \\\n && sed -i '/jetty-logging/d' etc/jetty.conf \\\n && rm -fr demo-base javadoc \\\n && rm jetty.tar.gz* \\\n && rm -fr jetty-distribution-$JETTY_VERSION/ \\\n && cd $JETTY_BASE \\\n && modules=\"$( grep -- ^--module= \"$JETTY_HOME/start.ini\" | cut -d= -f2 | paste -d, -s ;)\" \\\n && java -jar \"$JETTY_HOME/start.jar\" --add-to-startd=\"$modules,setuid\" \\\n && apk del .build-deps \\\n && rm -fr .build-deps \\\n && rm -rf /tmp/hsperfdata_root\nWORKDIR $JETTY_BASE\nENV TMPDIR=\"/tmp/jetty\"\nRUN set -xe \\\n && mkdir -p \"$TMPDIR\" \\\n && chown -R jetty:jetty \"$TMPDIR\" \"$JETTY_BASE\"\nCOPY docker-resources/docker-entrypoint.sh /\nRUN chmod 777 /docker-entrypoint.sh\nCOPY docker-resources/dist/registry.war /var/lib/jetty/webapps/\nCOPY docker-resources/dist/application.conf.example /var/lib/jetty/resources/application.conf\nCOPY docker-resources/dist/logback.xml /var/lib/jetty/webapps/resources/\nCOPY docker-resources/dist/logback.xml /var/lib/jetty/resources/\nCOPY docker-resources/dist/mail /var/lib/jetty/webapps/resources/mail/\nCOPY docker-resources/dist/mail /var/lib/jetty/resources/mail/\n#  nginx\nENV NGINX_VERSION=\"nginx-1.15.8\"\nRUN apk add openssl-dev pcre-dev zlib-dev wget build-base --update \\\n && mkdir -p /tmp/src \\\n && cd /tmp/src \\\n && wget http://nginx.org/download/${NGINX_VERSION}.tar.gz \\\n && tar -zxvf ${NGINX_VERSION}.tar.gz \\\n && cd /tmp/src/${NGINX_VERSION} \\\n && ./configure --with-http_ssl_module --with-http_gzip_static_module --prefix=/etc/nginx --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --sbin-path=/usr/local/sbin/nginx \\\n && make \\\n && make install \\\n && apk del build-base \\\n && rm -rf /tmp/src \\\n && rm -rf /var/cache/apk/*\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n#  VOLUME [\"/var/log/nginx\"]\n#  WORKDIR /etc/nginx\nRUN chmod 755 /usr/local/sbin/nginx &; mkdir -p /var/log/konker-platform\nRUN chmod 777 /var/log/konker-platform\nCOPY docker-resources/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY docker-resources/nginx/nginx.conf /etc/nginx/conf/nginx.conf\nCOPY docker-resources/nginx/mime.types /etc/nginx/mime.types\n#  COPY build/sites /var/www/\nCOPY docker-resources/nginx/conf.d /etc/nginx/conf.d\n#  start\nEXPOSE 80/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openjdk:8-jre-alpine\nMAINTAINER Andre Rocha <andre@konkerlabs.com>\n# ENV TZ=America/Sao_Paulo\n# RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n# RUN echo America/Sao_Paulo | tee /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata\n# ENV TERM=xterm \\\n# ENV TZ=America/Sao_Paulo\n# RUN apk --update add tzdata && cp /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n# apk del tzdata\n# Jetty\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -S jetty \\\n && adduser -D -S -H -G jetty jetty \\\n && rm -rf /etc/group- /etc/passwd- /etc/shadow-\nRUN addgroup -S nginx \\\n && adduser -D -S -H -G nginx nginx \\\n && rm -rf /etc/group- /etc/passwd- /etc/shadow-\nENV JETTY_HOME=\"/usr/local/jetty\"\nENV PATH=\"$JETTY_HOME/bin:$PATH\"\nRUN mkdir -p \"$JETTY_HOME\"\nWORKDIR $JETTY_HOME\nENV JETTY_BASE=\"/var/lib/jetty\"\nRUN mkdir -p \"$JETTY_BASE\"\nENV JETTY_VERSION=\"9.3.12.v20160915\"\nENV JETTY_TGZ_URL=\"https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/$JETTY_VERSION/jetty-distribution-$JETTY_VERSION.tar.gz\"\n#  GPG Keys are personal keys of Jetty committers (see https://dev.eclipse.org/mhonarc/lists/jetty-users/msg05220.html)\nENV JETTY_GPG_KEYS=\"B59B67FD7904984367F931800818D9D68FB67BAC  5DE533CB43DAF8BC3E372283E7AE839CD7C58886\"\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps gnupg coreutils curl \\\n && curl -SL \"$JETTY_TGZ_URL\" -o jetty.tar.gz \\\n && curl -SL \"$JETTY_TGZ_URL.asc\" -o jetty.tar.gz.asc \\\n && tar -xvzf jetty.tar.gz \\\n && mv jetty-distribution-$JETTY_VERSION/* ./ \\\n && sed -i '/jetty-logging/d' etc/jetty.conf \\\n && rm -fr demo-base javadoc \\\n && rm jetty.tar.gz* \\\n && rm -fr jetty-distribution-$JETTY_VERSION/ \\\n && cd $JETTY_BASE \\\n && modules=\"$( grep -- ^--module= \"$JETTY_HOME/start.ini\" | cut -d= -f2 | paste -d, -s ;)\" \\\n && java -jar \"$JETTY_HOME/start.jar\" --add-to-startd=\"$modules,setuid\" \\\n && apk del .build-deps \\\n && rm -fr .build-deps \\\n && rm -rf /tmp/hsperfdata_root\nWORKDIR $JETTY_BASE\nENV TMPDIR=\"/tmp/jetty\"\nRUN set -xe \\\n && mkdir -p \"$TMPDIR\" \\\n && chown -R jetty:jetty \"$TMPDIR\" \"$JETTY_BASE\"\nCOPY docker-resources/docker-entrypoint.sh /\nRUN chmod 777 /docker-entrypoint.sh\nCOPY docker-resources/dist/registry.war /var/lib/jetty/webapps/\nCOPY docker-resources/dist/application.conf.example /var/lib/jetty/resources/application.conf\nCOPY docker-resources/dist/logback.xml /var/lib/jetty/webapps/resources/\nCOPY docker-resources/dist/logback.xml /var/lib/jetty/resources/\nCOPY docker-resources/dist/mail /var/lib/jetty/webapps/resources/mail/\nCOPY docker-resources/dist/mail /var/lib/jetty/resources/mail/\n# nginx\nENV NGINX_VERSION=\"nginx-1.15.8\"\nRUN apk --update add openssl-dev pcre-dev zlib-dev wget build-base \\\n && mkdir -p /tmp/src \\\n && cd /tmp/src \\\n && wget http://nginx.org/download/${NGINX_VERSION}.tar.gz \\\n && tar -zxvf ${NGINX_VERSION}.tar.gz \\\n && cd /tmp/src/${NGINX_VERSION} \\\n && ./configure --with-http_ssl_module --with-http_gzip_static_module --prefix=/etc/nginx --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --sbin-path=/usr/local/sbin/nginx \\\n && make \\\n && make install \\\n && apk del build-base \\\n && rm -rf /tmp/src \\\n && rm -rf /var/cache/apk/*\n#  forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n# VOLUME [\"/var/log/nginx\"]\n# WORKDIR /etc/nginx\nRUN chmod 755 /usr/local/sbin/nginx &; mkdir -p /var/log/konker-platform\nRUN chmod 777 /var/log/konker-platform\nCOPY docker-resources/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY docker-resources/nginx/nginx.conf /etc/nginx/conf/nginx.conf\nCOPY docker-resources/nginx/mime.types /etc/nginx/mime.types\n# COPY build/sites /var/www/\nCOPY docker-resources/nginx/conf.d /etc/nginx/conf.d\n# start\nEXPOSE 80/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"c234c8e7e4cf34d2e10b82a074a2b006","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openjdk:8-jre-alpine\nMAINTAINER Andre Rocha <andre@konkerlabs.com>\n#  ENV TZ=America/Sao_Paulo\n#  RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n#  RUN echo America/Sao_Paulo | tee /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata\n#  ENV TERM=xterm \\\n#  ENV TZ=America/Sao_Paulo\n#  RUN apk --update add tzdata && cp /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n#  apk del tzdata\n#  Jetty\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -S jetty \\\n && adduser -D -S -H -G jetty jetty \\\n && rm -rf /etc/group- /etc/passwd- /etc/shadow-\nRUN addgroup -S nginx \\\n && adduser -D -S -H -G nginx nginx \\\n && rm -rf /etc/group- /etc/passwd- /etc/shadow-\nENV JETTY_HOME=\"/usr/local/jetty\"\nENV PATH=\"$JETTY_HOME/bin:$PATH\"\nRUN mkdir -p \"$JETTY_HOME\"\nWORKDIR $JETTY_HOME\nENV JETTY_BASE=\"/var/lib/jetty\"\nRUN mkdir -p \"$JETTY_BASE\"\nENV JETTY_VERSION=\"9.3.12.v20160915\"\nENV JETTY_TGZ_URL=\"https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/$JETTY_VERSION/jetty-distribution-$JETTY_VERSION.tar.gz\"\n#   GPG Keys are personal keys of Jetty committers (see https://dev.eclipse.org/mhonarc/lists/jetty-users/msg05220.html)\nENV JETTY_GPG_KEYS=\"B59B67FD7904984367F931800818D9D68FB67BAC  5DE533CB43DAF8BC3E372283E7AE839CD7C58886\"\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps gnupg coreutils curl \\\n && curl -SL \"$JETTY_TGZ_URL\" -o jetty.tar.gz \\\n && curl -SL \"$JETTY_TGZ_URL.asc\" -o jetty.tar.gz.asc \\\n && tar -xvzf jetty.tar.gz \\\n && mv jetty-distribution-$JETTY_VERSION/* ./ \\\n && sed -i '/jetty-logging/d' etc/jetty.conf \\\n && rm -fr demo-base javadoc \\\n && rm jetty.tar.gz* \\\n && rm -fr jetty-distribution-$JETTY_VERSION/ \\\n && cd $JETTY_BASE \\\n && modules=\"$( grep -- ^--module= \"$JETTY_HOME/start.ini\" | cut -d= -f2 | paste -d, -s ;)\" \\\n && java -jar \"$JETTY_HOME/start.jar\" --add-to-startd=\"$modules,setuid\" \\\n && apk del .build-deps \\\n && rm -fr .build-deps \\\n && rm -rf /tmp/hsperfdata_root\nWORKDIR $JETTY_BASE\nENV TMPDIR=\"/tmp/jetty\"\nRUN set -xe \\\n && mkdir -p \"$TMPDIR\" \\\n && chown -R jetty:jetty \"$TMPDIR\" \"$JETTY_BASE\"\nCOPY docker-resources/docker-entrypoint.sh /\nRUN chmod 777 /docker-entrypoint.sh\nCOPY docker-resources/dist/registry.war /var/lib/jetty/webapps/\nCOPY docker-resources/dist/application.conf.example /var/lib/jetty/resources/application.conf\nCOPY docker-resources/dist/logback.xml /var/lib/jetty/webapps/resources/\nCOPY docker-resources/dist/logback.xml /var/lib/jetty/resources/\nCOPY docker-resources/dist/mail /var/lib/jetty/webapps/resources/mail/\nCOPY docker-resources/dist/mail /var/lib/jetty/resources/mail/\n#  nginx\nENV NGINX_VERSION=\"nginx-1.15.8\"\nRUN apk --update add openssl-dev pcre-dev zlib-dev wget build-base \\\n && mkdir -p /tmp/src \\\n && cd /tmp/src \\\n && wget http://nginx.org/download/${NGINX_VERSION}.tar.gz \\\n && tar -zxvf ${NGINX_VERSION}.tar.gz \\\n && cd /tmp/src/${NGINX_VERSION} \\\n && ./configure --with-http_ssl_module --with-http_gzip_static_module --prefix=/etc/nginx --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --sbin-path=/usr/local/sbin/nginx \\\n && make \\\n && make install \\\n && apk del build-base \\\n && rm -rf /tmp/src \\\n && rm -rf /var/cache/apk/*\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n#  VOLUME [\"/var/log/nginx\"]\n#  WORKDIR /etc/nginx\nRUN chmod 755 /usr/local/sbin/nginx &; mkdir -p /var/log/konker-platform\nRUN chmod 777 /var/log/konker-platform\nCOPY docker-resources/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY docker-resources/nginx/nginx.conf /etc/nginx/conf/nginx.conf\nCOPY docker-resources/nginx/mime.types /etc/nginx/mime.types\n#  COPY build/sites /var/www/\nCOPY docker-resources/nginx/conf.d /etc/nginx/conf.d\n#  start\nEXPOSE 80/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"a9cccb2b5ee7e5795d93ec06e1892e39","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b9e6875449d0d35dec3e2e31ed7bb7df324da82a.dockerfile"}