{"seed":461059965,"processedDockerfileHash":"75b2011ce8b28fa1363f086ac462ecfc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  #\n#   Use Java base image and setup required RPMS as cacheable image.\n#  #\nARG BASE_IMAGE=\"opennms/openjdk\"\nARG BASE_IMAGE_VERSION=\"11\"\nFROM ${BASE_IMAGE}:${BASE_IMAGE_VERSION} AS sentinel-base\nARG REQUIRED_RPMS=\"wget gettext\"\nARG REPO_KEY_URL=\"https://yum.opennms.org/OPENNMS-GPG-KEY\"\nARG REPO_RPM=\"https://yum.opennms.org/repofiles/opennms-repo-stable-rhel7.noarch.rpm\"\nSHELL [\"/bin/bash\", \"-c\"]\n#   Collect generic steps in a layer for caching\nRUN rpm --import \"${REPO_KEY_URL}\" \\\n && yum install -y epel-release \\\n && yum -y install \"${REPO_RPM}\" \\\n && yum -y install ${REQUIRED_RPMS} \\\n && yum clean all -y \\\n && rm -rf /var/cache/yum\n#  #\n#   Install and setup OpenNMS Sentinel RPMS\n#  #\nFROM sentinel-base\n#   A default which installs the minimum required Minion packages\nARG SENTINEL_PACKAGES=\"opennms-sentinel\"\n#   Allow to install optional packages via YUM\nARG ADD_YUM_PACKAGES\nCOPY ./rpms /tmp/rpms\nSHELL [\"/bin/bash\", \"-c\"]\n#   Install repositories, system and OpenNMS packages and do some cleanup\nRUN if [[ \"$( ls -1 /tmp/rpms/*.rpm 2> /dev/null | wc -l ;)\" != 0 ]] ; then yum -y localinstall /tmp/rpms/*.rpm ; else yum install -y ${SENTINEL_PACKAGES} ; fi \\\n && if [[ -n ${ADD_YUM_PACKAGES} ]] ; then yum -y install ${ADD_YUM_PACKAGES} ; fi \\\n && rm -rf /tmp/rpms \\\n && yum clean all \\\n && rm -rf /var/cache/yum\nCOPY ./assets/entrypoint.sh /\nVOLUME [ \"/opt/sentinel/deploy\", \"/opt/sentinel/etc\", \"/opt/sentinel/data\" ]\nWORKDIR /opt/sentinel\nENTRYPOINT [\"/entrypoint.sh\"]\nSTOPSIGNAL SIGTERM\nCMD [\"-f\"]\nARG BUILD_DATE=\"1970-01-01T00:00:00+0000\"\nARG VERSION\nARG BUILD_NUMBER\nARG BUILD_URL\nARG BUILD_BRANCH\nARG BUILD_SHA1\nLABEL maintainer=\"The OpenNMS Group\" \\\n      license=\"AGPLv3\" \\\n      name=\"Sentinel\" \\\n      version=\"${VERSION}\" \\\n      vendor=\"OpenNMS Community\" \\\n      cicd.build.date=\"${BUILD_DATE}\" \\\n      cicd.build.number=\"${BUILD_NUMBER}\" \\\n      cicd.build.url=\"${BUILD_URL}\" \\\n      cicd.build.branch=\"${BUILD_BRANCH}\" \\\n      cicd.build.sha1=\"${CIRCLE_SHA1}\"\n#  ## Runtime information and not relevant at build time\n#   TODO MVR SENTINEL_LOCATION is not used at the moment\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV SENTINEL_HOME=\"/opt/sentinel\" \\\n    SENTINEL_ID=\"\" \\\n    SENTINEL_LOCATION=\"SENTINEL\" \\\n    OPENNMS_BROKER_URL=\"tcp://127.0.0.1:61616\" \\\n    OPENNMS_HTTP_URL=\"http://127.0.0.1:8980/opennms\" \\\n    OPENNMS_HTTP_USER=\"minion\" \\\n    OPENNMS_HTTP_PASS=\"minion\" \\\n    OPENNMS_BROKER_USER=\"minion\" \\\n    OPENNMS_BROKER_PASS=\"minion\" \\\n    POSTGRES_HOST=\"localhost\" \\\n    POSTGRES_PORT=\"5432\" \\\n    POSTGRES_USER=\"postgres\" \\\n    POSTGRES_DB=\"opennms\"\n#  #------------------------------------------------------------------------------\n#  # EXPOSED PORTS\n#  #------------------------------------------------------------------------------\n#  # -- Sentinel Karaf Debug 5005/TCP\n#  # -- Sentinel KARAF SSH   8301/TCP\nEXPOSE 8301/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# #\n#  Use Java base image and setup required RPMS as cacheable image.\n# #\nARG BASE_IMAGE=\"opennms/openjdk\"\nARG BASE_IMAGE_VERSION=\"11\"\nFROM ${BASE_IMAGE}:${BASE_IMAGE_VERSION} AS sentinel-base\nARG REQUIRED_RPMS=\"wget gettext\"\nARG REPO_KEY_URL=\"https://yum.opennms.org/OPENNMS-GPG-KEY\"\nARG REPO_RPM=\"https://yum.opennms.org/repofiles/opennms-repo-stable-rhel7.noarch.rpm\"\nSHELL [\"/bin/bash\", \"-c\"]\n#  Collect generic steps in a layer for caching\nRUN rpm --import \"${REPO_KEY_URL}\" \\\n && yum install -y epel-release \\\n && yum -y install \"${REPO_RPM}\" \\\n && yum -y install ${REQUIRED_RPMS} \\\n && yum clean all -y \\\n && rm -rf /var/cache/yum\n# #\n#  Install and setup OpenNMS Sentinel RPMS\n# #\nFROM sentinel-base\n#  A default which installs the minimum required Minion packages\nARG SENTINEL_PACKAGES=\"opennms-sentinel\"\n#  Allow to install optional packages via YUM\nARG ADD_YUM_PACKAGES\nCOPY ./rpms /tmp/rpms\nSHELL [\"/bin/bash\", \"-c\"]\n#  Install repositories, system and OpenNMS packages and do some cleanup\nRUN if [[ \"$( ls -1 /tmp/rpms/*.rpm 2> /dev/null | wc -l ;)\" != 0 ]] ; then yum -y localinstall /tmp/rpms/*.rpm ; else yum install -y ${SENTINEL_PACKAGES} ; fi \\\n && if [[ -n ${ADD_YUM_PACKAGES} ]] ; then yum -y install ${ADD_YUM_PACKAGES} ; fi \\\n && rm -rf /tmp/rpms \\\n && yum clean all \\\n && rm -rf /var/cache/yum\nCOPY ./assets/entrypoint.sh /\nVOLUME [ \"/opt/sentinel/deploy\", \"/opt/sentinel/etc\", \"/opt/sentinel/data\" ]\nWORKDIR /opt/sentinel\nENTRYPOINT [\"/entrypoint.sh\"]\nSTOPSIGNAL SIGTERM\nCMD [\"-f\"]\nARG BUILD_DATE=\"1970-01-01T00:00:00+0000\"\nARG VERSION\nARG BUILD_NUMBER\nARG BUILD_URL\nARG BUILD_BRANCH\nARG BUILD_SHA1\nLABEL maintainer=\"The OpenNMS Group\" \\\n      license=\"AGPLv3\" \\\n      name=\"Sentinel\" \\\n      version=\"${VERSION}\" \\\n      vendor=\"OpenNMS Community\" \\\n      cicd.build.date=\"${BUILD_DATE}\" \\\n      cicd.build.number=\"${BUILD_NUMBER}\" \\\n      cicd.build.url=\"${BUILD_URL}\" \\\n      cicd.build.branch=\"${BUILD_BRANCH}\" \\\n      cicd.build.sha1=\"${CIRCLE_SHA1}\"\n# ## Runtime information and not relevant at build time\n#  TODO MVR SENTINEL_LOCATION is not used at the moment\nENV SENTINEL_HOME=\"/opt/sentinel\" \\\n    SENTINEL_ID=\"\" \\\n    SENTINEL_LOCATION=\"SENTINEL\" \\\n    OPENNMS_BROKER_URL=\"tcp://127.0.0.1:61616\" \\\n    OPENNMS_HTTP_URL=\"http://127.0.0.1:8980/opennms\" \\\n    OPENNMS_HTTP_USER=\"minion\" \\\n    OPENNMS_HTTP_PASS=\"minion\" \\\n    OPENNMS_BROKER_USER=\"minion\" \\\n    OPENNMS_BROKER_PASS=\"minion\" \\\n    POSTGRES_HOST=\"localhost\" \\\n    POSTGRES_PORT=\"5432\" \\\n    POSTGRES_USER=\"postgres\" \\\n    POSTGRES_PASSWORD=\"\" \\\n    POSTGRES_DB=\"opennms\"\n# #------------------------------------------------------------------------------\n# # EXPOSED PORTS\n# #------------------------------------------------------------------------------\n# # -- Sentinel Karaf Debug 5005/TCP\n# # -- Sentinel KARAF SSH   8301/TCP\nEXPOSE 8301/tcp\n","injectedSmells":[],"originalDockerfileHash":"c37b8fcbfcb0ce05ab3305d21b7b377d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  #\n#   Use Java base image and setup required RPMS as cacheable image.\n#  #\nARG BASE_IMAGE=\"opennms/openjdk\"\nARG BASE_IMAGE_VERSION=\"11\"\nFROM ${BASE_IMAGE}:${BASE_IMAGE_VERSION} AS sentinel-base\nARG REQUIRED_RPMS=\"wget gettext\"\nARG REPO_KEY_URL=\"https://yum.opennms.org/OPENNMS-GPG-KEY\"\nARG REPO_RPM=\"https://yum.opennms.org/repofiles/opennms-repo-stable-rhel7.noarch.rpm\"\nSHELL [\"/bin/bash\", \"-c\"]\n#   Collect generic steps in a layer for caching\nRUN rpm --import \"${REPO_KEY_URL}\" \\\n && yum install -y epel-release \\\n && yum -y install \"${REPO_RPM}\" \\\n && yum -y install ${REQUIRED_RPMS} \\\n && yum clean all -y \\\n && rm -rf /var/cache/yum\n#  #\n#   Install and setup OpenNMS Sentinel RPMS\n#  #\nFROM sentinel-base\n#   A default which installs the minimum required Minion packages\nARG SENTINEL_PACKAGES=\"opennms-sentinel\"\n#   Allow to install optional packages via YUM\nARG ADD_YUM_PACKAGES\nCOPY ./rpms /tmp/rpms\nSHELL [\"/bin/bash\", \"-c\"]\n#   Install repositories, system and OpenNMS packages and do some cleanup\nRUN if [[ \"$( ls -1 /tmp/rpms/*.rpm 2> /dev/null | wc -l ;)\" != 0 ]] ; then yum -y localinstall /tmp/rpms/*.rpm ; else yum install -y ${SENTINEL_PACKAGES} ; fi \\\n && if [[ -n ${ADD_YUM_PACKAGES} ]] ; then yum -y install ${ADD_YUM_PACKAGES} ; fi \\\n && rm -rf /tmp/rpms \\\n && yum clean all \\\n && rm -rf /var/cache/yum\nCOPY ./assets/entrypoint.sh /\nVOLUME [ \"/opt/sentinel/deploy\", \"/opt/sentinel/etc\", \"/opt/sentinel/data\" ]\nWORKDIR /opt/sentinel\nENTRYPOINT [\"/entrypoint.sh\"]\nSTOPSIGNAL SIGTERM\nCMD [\"-f\"]\nARG BUILD_DATE=\"1970-01-01T00:00:00+0000\"\nARG VERSION\nARG BUILD_NUMBER\nARG BUILD_URL\nARG BUILD_BRANCH\nARG BUILD_SHA1\nLABEL maintainer=\"The OpenNMS Group\" \\\n      license=\"AGPLv3\" \\\n      name=\"Sentinel\" \\\n      version=\"${VERSION}\" \\\n      vendor=\"OpenNMS Community\" \\\n      cicd.build.date=\"${BUILD_DATE}\" \\\n      cicd.build.number=\"${BUILD_NUMBER}\" \\\n      cicd.build.url=\"${BUILD_URL}\" \\\n      cicd.build.branch=\"${BUILD_BRANCH}\" \\\n      cicd.build.sha1=\"${CIRCLE_SHA1}\"\n#  ## Runtime information and not relevant at build time\n#   TODO MVR SENTINEL_LOCATION is not used at the moment\nENV SENTINEL_HOME=\"/opt/sentinel\" \\\n    SENTINEL_ID=\"\" \\\n    SENTINEL_LOCATION=\"SENTINEL\" \\\n    OPENNMS_BROKER_URL=\"tcp://127.0.0.1:61616\" \\\n    OPENNMS_HTTP_URL=\"http://127.0.0.1:8980/opennms\" \\\n    OPENNMS_HTTP_USER=\"minion\" \\\n    OPENNMS_HTTP_PASS=\"minion\" \\\n    OPENNMS_BROKER_USER=\"minion\" \\\n    OPENNMS_BROKER_PASS=\"minion\" \\\n    POSTGRES_HOST=\"localhost\" \\\n    POSTGRES_PORT=\"5432\" \\\n    POSTGRES_USER=\"postgres\" \\\n    POSTGRES_PASSWORD=\"\" \\\n    POSTGRES_DB=\"opennms\"\n#  #------------------------------------------------------------------------------\n#  # EXPOSED PORTS\n#  #------------------------------------------------------------------------------\n#  # -- Sentinel Karaf Debug 5005/TCP\n#  # -- Sentinel KARAF SSH   8301/TCP\nEXPOSE 8301/tcp\n","originalDockerfileUglifiedHash":"647e37621e5daac77cdcf057165cc2e5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dcf3a43191e8e417f6e449a04802acd03d585e36.dockerfile"}