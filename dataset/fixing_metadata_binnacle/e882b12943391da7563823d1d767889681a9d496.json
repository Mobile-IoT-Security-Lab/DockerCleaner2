{"seed":3057374711,"processedDockerfileHash":"46d4867efaccebe03a6381ef677c086c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   OpenVAS 8\n#\n#   VERSION       1.0.0\nFROM debian:7.8\nMAINTAINER Serge Katzmann serge.katzmann@gmail.com\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"C.UTF-8  \"\nENV LANGUAGE=\"en  \"\nENV LC_ALL=\"C.UTF-8\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends locales debconf -y \\\n && dpkg-reconfigure locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && apt-get install --no-install-recommends build-essential bison flex cmake pkg-config libssh-dev libgnutls-dev libglib2.0-dev libpcap-dev libgpgme11-dev uuid-dev libksba-dev libhiredis-dev libldap2-dev autoconf libsqlite3-dev libxml2-dev libmicrohttpd-dev xsltproc tcl rpm alien nsis gcc-mingw32 perl-base perl-base heimdal-dev heimdal-multidev libpopt-dev libxslt-dev libsnmp-dev doxygen xmltoman sqlfairy sqlite3 unzip rsync wget python2.7 python-setuptools python-pip libidn11-dev libssl-dev libpcre3-dev less net-tools openssh-client texlive-latex-base texlive-latex-recommended texlive-latex-extra htmldoc haveged -y --fix-missing \\\n && mkdir /openvas-src \\\n && cd /openvas-src \\\n && wget -nv http://wald.intevation.org/frs/download.php/2191/openvas-libraries-8.0.5.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2129/openvas-scanner-5.0.4.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2195/openvas-manager-6.0.6.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2200/greenbone-security-assistant-6.0.6.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2209/openvas-cli-1.4.3.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/1975/openvas-smb-1.0.1.tar.gz \\\n && tar zxvf openvas-libraries-8.0.5.tar.gz \\\n && tar zxvf openvas-scanner-5.0.4.tar.gz \\\n && tar zxvf openvas-manager-6.0.6.tar.gz \\\n && tar zxvf greenbone-security-assistant-6.0.6.tar.gz \\\n && tar zxvf openvas-cli-1.4.3.tar.gz \\\n && tar zxvf openvas-smb-1.0.1.tar.gz \\\n && cd /openvas-src/openvas-smb-1.0.1 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-libraries-8.0.5 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-scanner-5.0.4 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-manager-6.0.6 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/greenbone-security-assistant-6.0.6 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-cli-1.4.3 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && rm -rf /openvas-src \\\n && mkdir /redis \\\n && cd /redis \\\n && wget http://download.redis.io/releases/redis-2.8.19.tar.gz \\\n && tar zxvf redis-2.8.19.tar.gz \\\n && cd redis-2.8.19 \\\n && make -j $( nproc ;) \\\n && make install \\\n && rm -fr /redis \\\n && apt-get remove heimdal-dev -y \\\n && apt-get install --no-install-recommends curl libcurl4-gnutls-dev libkrb5-dev -y \\\n && mkdir /dirb \\\n && cd /dirb \\\n && wget -nv http://downloads.sourceforge.net/project/dirb/dirb/2.22/dirb222.tar.gz \\\n && tar -zxvf dirb222.tar.gz \\\n && cd dirb222 \\\n && chmod 700 -R * \\\n && ./configure \\\n && make -j $( nproc ;) \\\n && make install \\\n && cd /tmp \\\n && wget -nv http://github.com/Arachni/arachni/releases/download/v1.3.2/arachni-1.3.2-0.5.9-linux-x86_64.tar.gz \\\n && tar -zxvf arachni-1.3.2-0.5.9-linux-x86_64.tar.gz \\\n && rm -f arachni-1.3.2-0.5.9-linux-x86_64.tar.gz \\\n && mv arachni-1.3.2-0.5.9 /opt/arachni \\\n && ln -s /opt/arachni/bin/* /usr/local/bin/ \\\n && cd ~ \\\n && wget -nv https://github.com/sullo/nikto/archive/master.zip \\\n && unzip master.zip -d /tmp \\\n && mv /tmp/nikto-master/program /opt/nikto \\\n && rm -rf /tmp/nikto-master \\\n && rm -f ~/master.zip \\\n && echo \"EXECDIR=/opt/nikto\\nPLUGINDIR=/opt/nikto/plugins\\nDBDIR=/opt/nikto/databases\\nTEMPLATEDIR=/opt/nikto/templates\\nDOCDIR=/opt/nikto/docs\" >> /opt/nikto/nikto.conf \\\n && ln -s /opt/nikto/nikto.pl /usr/local/bin/nikto.pl \\\n && ln -s /opt/nikto/nikto.conf /etc/nikto.conf \\\n && cd /tmp \\\n && wget -nv https://nmap.org/dist/nmap-5.51-1.x86_64.rpm \\\n && alien -i nmap-5.51-1.x86_64.rpm \\\n && rm -f nmap-5.51-1.x86_64.rpm \\\n && cd /tmp \\\n && pip install pip==23.1 --upgrade \\\n && wget -nv -O wapiti-2.3.0.tar.gz \"http://downloads.sourceforge.net/project/wapiti/wapiti/wapiti-2.3.0/wapiti-2.3.0.tar.gz?r=http://sourceforge.net/projects/wapiti/files/wapiti/wapiti-2.3.0/&amp;ts=1391931386&amp;use_mirror=heanet\" \\\n && tar zxvf wapiti-2.3.0.tar.gz \\\n && cd wapiti-2.3.0 \\\n && python setup.py install \\\n && ln -s /usr/local/bin/wapiti /usr/bin/wapiti \\\n && rm -f /tmp/wapiti-2.3.0.tar.gz \\\n && apt-get clean -yq \\\n && apt-get autoremove -yq \\\n && apt-get purge -y --auto-remove build-essential cmake \\\n && cd / \\\n && wget -nv https://svn.wald.intevation.org/svn/openvas/trunk/tools/openvas-check-setup --no-check-certificate\nCOPY ./redis.conf /etc/redis.conf\nCOPY ./open-vas-8-start.sh /open-vas-8-start.sh\nCOPY ./setup.sh /setup.sh\nRUN chmod 700 /open-vas-8-start.sh \\\n && chmod 700 /openvas-check-setup \\\n && chmod 700 /setup.sh \\\n && /setup.sh\n#  OpenVAS 443 9390 9391 Arachni Web 9292\nEXPOSE 443/tcp 9390/tcp 9391/tcp 9292/tcp\nCMD [\"./open-vas-8-start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  OpenVAS 8\n#\n#  VERSION       1.0.0\nFROM debian:7.8\nMAINTAINER Serge Katzmann serge.katzmann@gmail.com\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"C.UTF-8  \"\nENV LANGUAGE=\"en  \"\nENV LC_ALL=\"C.UTF-8\"\nRUN apt-get update -y \\\n && apt-get install locales debconf -y \\\n && dpkg-reconfigure locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && apt-get install --no-install-recommends build-essential bison flex cmake pkg-config libssh-dev libgnutls-dev libglib2.0-dev libpcap-dev libgpgme11-dev uuid-dev libksba-dev libhiredis-dev libldap2-dev autoconf libsqlite3-dev libxml2-dev libmicrohttpd-dev xsltproc tcl rpm alien nsis gcc-mingw32 perl-base perl-base heimdal-dev heimdal-multidev libpopt-dev libxslt-dev libsnmp-dev doxygen xmltoman sqlfairy sqlite3 unzip rsync wget python2.7 python-setuptools python-pip libidn11-dev libssl-dev libpcre3-dev less net-tools openssh-client texlive-latex-base texlive-latex-recommended texlive-latex-extra htmldoc haveged -y --fix-missing \\\n && mkdir /openvas-src \\\n && cd /openvas-src \\\n && wget -nv http://wald.intevation.org/frs/download.php/2191/openvas-libraries-8.0.5.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2129/openvas-scanner-5.0.4.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2195/openvas-manager-6.0.6.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2200/greenbone-security-assistant-6.0.6.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2209/openvas-cli-1.4.3.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/1975/openvas-smb-1.0.1.tar.gz \\\n && tar zxvf openvas-libraries-8.0.5.tar.gz \\\n && tar zxvf openvas-scanner-5.0.4.tar.gz \\\n && tar zxvf openvas-manager-6.0.6.tar.gz \\\n && tar zxvf greenbone-security-assistant-6.0.6.tar.gz \\\n && tar zxvf openvas-cli-1.4.3.tar.gz \\\n && tar zxvf openvas-smb-1.0.1.tar.gz \\\n && cd /openvas-src/openvas-smb-1.0.1 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-libraries-8.0.5 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-scanner-5.0.4 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-manager-6.0.6 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/greenbone-security-assistant-6.0.6 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-cli-1.4.3 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && rm -rf /openvas-src \\\n && mkdir /redis \\\n && cd /redis \\\n && wget http://download.redis.io/releases/redis-2.8.19.tar.gz \\\n && tar zxvf redis-2.8.19.tar.gz \\\n && cd redis-2.8.19 \\\n && make -j $( nproc ;) \\\n && make install \\\n && rm -fr /redis \\\n && apt-get remove heimdal-dev -y \\\n && apt-get install curl libcurl4-gnutls-dev libkrb5-dev -y \\\n && mkdir /dirb \\\n && cd /dirb \\\n && wget -nv http://downloads.sourceforge.net/project/dirb/dirb/2.22/dirb222.tar.gz \\\n && tar -zxvf dirb222.tar.gz \\\n && cd dirb222 \\\n && chmod 700 -R * \\\n && ./configure \\\n && make -j $( nproc ;) \\\n && make install \\\n && cd /tmp \\\n && wget -nv http://github.com/Arachni/arachni/releases/download/v1.3.2/arachni-1.3.2-0.5.9-linux-x86_64.tar.gz \\\n && tar -zxvf arachni-1.3.2-0.5.9-linux-x86_64.tar.gz \\\n && rm -f arachni-1.3.2-0.5.9-linux-x86_64.tar.gz \\\n && mv arachni-1.3.2-0.5.9 /opt/arachni \\\n && ln -s /opt/arachni/bin/* /usr/local/bin/ \\\n && cd ~ \\\n && wget -nv https://github.com/sullo/nikto/archive/master.zip \\\n && unzip master.zip -d /tmp \\\n && mv /tmp/nikto-master/program /opt/nikto \\\n && rm -rf /tmp/nikto-master \\\n && rm -f ~/master.zip \\\n && echo \"EXECDIR=/opt/nikto\\nPLUGINDIR=/opt/nikto/plugins\\nDBDIR=/opt/nikto/databases\\nTEMPLATEDIR=/opt/nikto/templates\\nDOCDIR=/opt/nikto/docs\" >> /opt/nikto/nikto.conf \\\n && ln -s /opt/nikto/nikto.pl /usr/local/bin/nikto.pl \\\n && ln -s /opt/nikto/nikto.conf /etc/nikto.conf \\\n && cd /tmp \\\n && wget -nv https://nmap.org/dist/nmap-5.51-1.x86_64.rpm \\\n && alien -i nmap-5.51-1.x86_64.rpm \\\n && rm -f nmap-5.51-1.x86_64.rpm \\\n && cd /tmp \\\n && pip install pip --upgrade \\\n && wget -nv -O wapiti-2.3.0.tar.gz \"http://downloads.sourceforge.net/project/wapiti/wapiti/wapiti-2.3.0/wapiti-2.3.0.tar.gz?r=http://sourceforge.net/projects/wapiti/files/wapiti/wapiti-2.3.0/&amp;ts=1391931386&amp;use_mirror=heanet\" \\\n && tar zxvf wapiti-2.3.0.tar.gz \\\n && cd wapiti-2.3.0 \\\n && python setup.py install \\\n && ln -s /usr/local/bin/wapiti /usr/bin/wapiti \\\n && rm -f /tmp/wapiti-2.3.0.tar.gz \\\n && apt-get clean -yq \\\n && apt-get autoremove -yq \\\n && apt-get purge -y --auto-remove build-essential cmake \\\n && cd / \\\n && wget -nv https://svn.wald.intevation.org/svn/openvas/trunk/tools/openvas-check-setup --no-check-certificate\nADD ./redis.conf /etc/redis.conf\nADD ./open-vas-8-start.sh /open-vas-8-start.sh\nADD ./setup.sh /setup.sh\nRUN chmod 700 /open-vas-8-start.sh \\\n && chmod 700 /openvas-check-setup \\\n && chmod 700 /setup.sh \\\n && /setup.sh\n# OpenVAS 443 9390 9391 Arachni Web 9292\nEXPOSE 443/tcp 9390/tcp 9391/tcp 9292/tcp\nCMD [\"./open-vas-8-start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"a99e986a4bf033bae6cc7d22b63bd5f7","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   OpenVAS 8\n#\n#   VERSION       1.0.0\nFROM debian:7.8\nMAINTAINER Serge Katzmann serge.katzmann@gmail.com\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"C.UTF-8  \"\nENV LANGUAGE=\"en  \"\nENV LC_ALL=\"C.UTF-8\"\nRUN apt-get update -y \\\n && apt-get install locales debconf -y \\\n && dpkg-reconfigure locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && apt-get install --no-install-recommends build-essential bison flex cmake pkg-config libssh-dev libgnutls-dev libglib2.0-dev libpcap-dev libgpgme11-dev uuid-dev libksba-dev libhiredis-dev libldap2-dev autoconf libsqlite3-dev libxml2-dev libmicrohttpd-dev xsltproc tcl rpm alien nsis gcc-mingw32 perl-base perl-base heimdal-dev heimdal-multidev libpopt-dev libxslt-dev libsnmp-dev doxygen xmltoman sqlfairy sqlite3 unzip rsync wget python2.7 python-setuptools python-pip libidn11-dev libssl-dev libpcre3-dev less net-tools openssh-client texlive-latex-base texlive-latex-recommended texlive-latex-extra htmldoc haveged -y --fix-missing \\\n && mkdir /openvas-src \\\n && cd /openvas-src \\\n && wget -nv http://wald.intevation.org/frs/download.php/2191/openvas-libraries-8.0.5.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2129/openvas-scanner-5.0.4.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2195/openvas-manager-6.0.6.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2200/greenbone-security-assistant-6.0.6.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/2209/openvas-cli-1.4.3.tar.gz \\\n && wget -nv http://wald.intevation.org/frs/download.php/1975/openvas-smb-1.0.1.tar.gz \\\n && tar zxvf openvas-libraries-8.0.5.tar.gz \\\n && tar zxvf openvas-scanner-5.0.4.tar.gz \\\n && tar zxvf openvas-manager-6.0.6.tar.gz \\\n && tar zxvf greenbone-security-assistant-6.0.6.tar.gz \\\n && tar zxvf openvas-cli-1.4.3.tar.gz \\\n && tar zxvf openvas-smb-1.0.1.tar.gz \\\n && cd /openvas-src/openvas-smb-1.0.1 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-libraries-8.0.5 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-scanner-5.0.4 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-manager-6.0.6 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/greenbone-security-assistant-6.0.6 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && cd /openvas-src/openvas-cli-1.4.3 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j $( nproc ;) \\\n && make install \\\n && make rebuild_cache \\\n && rm -rf /openvas-src \\\n && mkdir /redis \\\n && cd /redis \\\n && wget http://download.redis.io/releases/redis-2.8.19.tar.gz \\\n && tar zxvf redis-2.8.19.tar.gz \\\n && cd redis-2.8.19 \\\n && make -j $( nproc ;) \\\n && make install \\\n && rm -fr /redis \\\n && apt-get remove heimdal-dev -y \\\n && apt-get install curl libcurl4-gnutls-dev libkrb5-dev -y \\\n && mkdir /dirb \\\n && cd /dirb \\\n && wget -nv http://downloads.sourceforge.net/project/dirb/dirb/2.22/dirb222.tar.gz \\\n && tar -zxvf dirb222.tar.gz \\\n && cd dirb222 \\\n && chmod 700 -R * \\\n && ./configure \\\n && make -j $( nproc ;) \\\n && make install \\\n && cd /tmp \\\n && wget -nv http://github.com/Arachni/arachni/releases/download/v1.3.2/arachni-1.3.2-0.5.9-linux-x86_64.tar.gz \\\n && tar -zxvf arachni-1.3.2-0.5.9-linux-x86_64.tar.gz \\\n && rm -f arachni-1.3.2-0.5.9-linux-x86_64.tar.gz \\\n && mv arachni-1.3.2-0.5.9 /opt/arachni \\\n && ln -s /opt/arachni/bin/* /usr/local/bin/ \\\n && cd ~ \\\n && wget -nv https://github.com/sullo/nikto/archive/master.zip \\\n && unzip master.zip -d /tmp \\\n && mv /tmp/nikto-master/program /opt/nikto \\\n && rm -rf /tmp/nikto-master \\\n && rm -f ~/master.zip \\\n && echo \"EXECDIR=/opt/nikto\\nPLUGINDIR=/opt/nikto/plugins\\nDBDIR=/opt/nikto/databases\\nTEMPLATEDIR=/opt/nikto/templates\\nDOCDIR=/opt/nikto/docs\" >> /opt/nikto/nikto.conf \\\n && ln -s /opt/nikto/nikto.pl /usr/local/bin/nikto.pl \\\n && ln -s /opt/nikto/nikto.conf /etc/nikto.conf \\\n && cd /tmp \\\n && wget -nv https://nmap.org/dist/nmap-5.51-1.x86_64.rpm \\\n && alien -i nmap-5.51-1.x86_64.rpm \\\n && rm -f nmap-5.51-1.x86_64.rpm \\\n && cd /tmp \\\n && pip install pip --upgrade \\\n && wget -nv -O wapiti-2.3.0.tar.gz \"http://downloads.sourceforge.net/project/wapiti/wapiti/wapiti-2.3.0/wapiti-2.3.0.tar.gz?r=http://sourceforge.net/projects/wapiti/files/wapiti/wapiti-2.3.0/&amp;ts=1391931386&amp;use_mirror=heanet\" \\\n && tar zxvf wapiti-2.3.0.tar.gz \\\n && cd wapiti-2.3.0 \\\n && python setup.py install \\\n && ln -s /usr/local/bin/wapiti /usr/bin/wapiti \\\n && rm -f /tmp/wapiti-2.3.0.tar.gz \\\n && apt-get clean -yq \\\n && apt-get autoremove -yq \\\n && apt-get purge -y --auto-remove build-essential cmake \\\n && cd / \\\n && wget -nv https://svn.wald.intevation.org/svn/openvas/trunk/tools/openvas-check-setup --no-check-certificate\nADD ./redis.conf /etc/redis.conf\nADD ./open-vas-8-start.sh /open-vas-8-start.sh\nADD ./setup.sh /setup.sh\nRUN chmod 700 /open-vas-8-start.sh \\\n && chmod 700 /openvas-check-setup \\\n && chmod 700 /setup.sh \\\n && /setup.sh\n#  OpenVAS 443 9390 9391 Arachni Web 9292\nEXPOSE 443/tcp 9390/tcp 9391/tcp 9292/tcp\nCMD [\"./open-vas-8-start.sh\"]\n","originalDockerfileUglifiedHash":"24cb9e885eaf0b8e9329570100f3828c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e882b12943391da7563823d1d767889681a9d496.dockerfile"}