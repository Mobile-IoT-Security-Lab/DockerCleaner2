{"seed":2810665772,"processedDockerfileHash":"d6ae5ec68de9cc4271983f7ef9bb0124","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nLABEL maintainer=\"Cyrille Le Clerc <cleclerc@cloudbees.com>\"\n#\n#   Licensed to the Apache Software Foundation (ASF) under one or more\n#   contributor license agreements.  See the NOTICE file distributed with\n#   this work for additional information regarding copyright ownership.\n#   The ASF licenses this file to You under the Apache License, Version 2.0\n#   (the \"License\"); you may not use this file except in compliance with\n#   the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#  ################################################\n#   Inspired by\n#   https://github.com/SeleniumHQ/docker-selenium/blob/master/Base/Dockerfile\n#  ################################################\n#  ================================================\n#   Customize sources for apt-get\n#  ================================================\nRUN DISTRIB_CODENAME=$( cat /etc/*release* | grep DISTRIB_CODENAME | cut -f2 -d'=' ;) \\\n && echo \"deb http://archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME} main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME}-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu ${DISTRIB_CODENAME}-security main universe\\n\" >> /etc/apt/sources.list\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.10 -qqy \\\n && add-apt-repository -y ppa:git-core/ppa\n#  ========================\n#   Miscellaneous packages\n#   iproute which is surprisingly not available in ubuntu:15.04 but is available in ubuntu:latest\n#   OpenJDK8\n#   rlwrap is for azure-cli\n#   groff is for aws-cli\n#   tree is convenient for troubleshooting builds\n#  ========================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends iproute=1:4.3.0-1ubuntu3.16.04.5 openssh-client=1:7.2p2-4ubuntu2.10 ssh-askpass=1:1.2.4.1-9 ca-certificates=20210119~16.04.1 openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 tar=1.28-2.1ubuntu0.2 zip=3.0-11 unzip=6.0-20ubuntu1.1 wget=1.17.1-1ubuntu1.5 curl=7.47.0-1ubuntu2.19 git=1:2.7.4-0ubuntu1.10 build-essential=12.1ubuntu2 less=481-2.1ubuntu0.2 nano=2.5.3-2ubuntu2 tree=1.7.0-3 jq=1.5+dfsg-1ubuntu0.1 python=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 groff=1.22.3-7 rlwrap=0.41-1build1 rsync=3.1.1-3ubuntu1.3 -qqy \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security\n#   workaround https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=775775\nRUN [ -f \"/etc/ssl/certs/java/cacerts\" ] || /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#   workaround \"You are using pip version 8.1.1, however version 9.0.1 is available.\"\nRUN pip install pip==23.1 setuptools==67.6.1 --upgrade\nRUN pip install yq==3.2.1\n#  ==========\n#   Maven\n#  ==========\nENV MAVEN_VERSION=\"3.6.0\"\nRUN curl -fsSL http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar xzf - -C /usr/share \\\n && mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\n#  ==========\n#   Ant\n#  ==========\nENV ANT_VERSION=\"1.10.5\"\nRUN curl -fsSL https://www.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz | tar xzf - -C /usr/share \\\n && mv /usr/share/apache-ant-$ANT_VERSION /usr/share/ant \\\n && ln -s /usr/share/ant/bin/ant /usr/bin/ant\nENV ANT_HOME=\"/usr/share/ant\"\n#  ==========\n#   Selenium\n#  ==========\nENV SELENIUM_MAJOR_VERSION=\"3.141\"\nENV SELENIUM_VERSION=\"3.141.59\"\nRUN mkdir -p /opt/selenium \\\n && wget --no-verbose http://selenium-release.storage.googleapis.com/$SELENIUM_MAJOR_VERSION/selenium-server-standalone-$SELENIUM_VERSION.jar -O /opt/selenium/selenium-server-standalone.jar\nRUN pip install selenium==4.8.3 -U\n#   https://github.com/SeleniumHQ/docker-selenium/blob/master/StandaloneFirefox/Dockerfile\nENV SCREEN_WIDTH=\"1360\"\nENV SCREEN_HEIGHT=\"1020\"\nENV SCREEN_DEPTH=\"24\"\nENV DISPLAY=\":99.0\"\nCOPY entry_point.sh /opt/bin/entry_point.sh\nCOPY functions.sh /opt/bin/functions.sh\nRUN chmod +x /opt/bin/entry_point.sh \\\n && chmod +x /opt/bin/functions.sh\n#  ========================================\n#   Add normal user with passwordless sudo\n#  ========================================\nRUN useradd jenkins --shell /bin/bash --create-home \\\n && usermod -a -G sudo jenkins \\\n && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n && echo 'jenkins:secret' | chpasswd\n#  =====\n#   XVFB\n#  =====\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends xvfb=2:1.18.4-0ubuntu0.12 -qqy \\\n && rm -rf /var/lib/apt/lists/*\n#  =========\n#   Firefox\n#  =========\nARG FIREFOX_VERSION=60.4.0esr\n#   don't install firefox with apt-get because there are some problems,\n#   install the binaries downloaded from mozilla\n#   see https://github.com/SeleniumHQ/docker-selenium/blob/3.0.1-fermium/NodeFirefox/Dockerfile#L13\n#   workaround \"D-Bus library appears to be incorrectly set up; failed to read machine uuid\"\n#   run \"dbus-uuidgen > /var/lib/dbus/machine-id\"\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends firefox=88.0+build2-0ubuntu0.16.04.1 dbus=1.10.6-1ubuntu3.6 -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n && wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2 \\\n && apt-get -y purge firefox \\\n && rm -rf /opt/firefox \\\n && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n && rm /tmp/firefox.tar.bz2 \\\n && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\nRUN dbus-uuidgen > /var/lib/dbus/machine-id\n#  ======================\n#   Firefox GECKO DRIVER\n#  ======================\nARG GECKO_DRIVER_VERSION=v0.23.0\nRUN wget -O - \"https://github.com/mozilla/geckodriver/releases/download/$GECKO_DRIVER_VERSION/geckodriver-$GECKO_DRIVER_VERSION-linux64.tar.gz\" | tar -xz -C /usr/bin\n#  ====================================\n#   Cloud Foundry CLI\n#   https://github.com/cloudfoundry/cli\n#  ====================================\nRUN wget -O - \"http://cli.run.pivotal.io/stable?release=linux64-binary&source=github\" | tar -C /usr/local/bin -zxf -\n#  ====================================\n#   AWS CLI\n#  ====================================\nRUN pip install awscli==1.27.114\n#   compatibility with CloudBees AWS CLI Plugin which expects pip to be installed as user\nRUN mkdir -p /home/jenkins/.local/bin/ \\\n && ln -s /usr/bin/pip /home/jenkins/.local/bin/pip \\\n && chown -R jenkins:jenkins /home/jenkins/.local\n#  ====================================\n#   NODE JS\n#   See https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\n#  ====================================\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash \\\n && apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 -y\n#  ====================================\n#   AZURE CLI\n#   https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-apt?view=azure-cli-latest\n#  ====================================\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ xenial main\" | tee /etc/apt/sources.list.d/azure-cli.list\nRUN curl -L https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN apt-key adv --keyserver packages.microsoft.com --recv-keys 52E16F86FEE04B979B07E28DB02C46DF417A0893\nRUN apt-get install --no-install-recommends apt-transport-https=1.2.35 -qqy \\\n && apt-get update -qqy \\\n && apt-get install --no-install-recommends azure-cli -qqy\n#  ====================================\n#   BOWER, GRUNT, GULP\n#  ====================================\nRUN npm install grunt-cli@1.3.1 bower@1.8.4 gulp@4.0.0 --global\n#  ====================================\n#   Kubernetes CLI\n#   See http://kubernetes.io/v1.0/docs/getting-started-guides/aws/kubectl.html\n#  ====================================\nRUN curl https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#  ====================================\n#   OPENSHIFT V3 CLI\n#   Only install \"oc\" executable, don't install \"openshift\", \"oadmin\"...\n#   See https://github.com/openshift/origin/releases\n#  ====================================\nRUN mkdir /var/tmp/openshift \\\n && wget -O - \"https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz\" | tar -C /var/tmp/openshift --strip-components=1 -zxf - \\\n && mv /var/tmp/openshift/oc /usr/local/bin \\\n && rm -rf /var/tmp/openshift\n#  ====================================\n#   JMETER\n#  ====================================\nRUN mkdir /opt/jmeter \\\n && wget -O - \"https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.0.tgz\" | tar -xz --strip=1 -C /opt/jmeter\n#  ====================================\n#   MYSQL CLIENT\n#  ====================================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends mysql-client=5.7.33-0ubuntu0.16.04.1 -qqy \\\n && rm -rf /var/lib/apt/lists/*\nUSER jenkins\n#   for dev purpose\n#   USER root\nENTRYPOINT [\"/opt/bin/entry_point.sh\"]\nEXPOSE 4444/tcp\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nLABEL maintainer=\"Cyrille Le Clerc <cleclerc@cloudbees.com>\"\n#\n#  Licensed to the Apache Software Foundation (ASF) under one or more\n#  contributor license agreements.  See the NOTICE file distributed with\n#  this work for additional information regarding copyright ownership.\n#  The ASF licenses this file to You under the Apache License, Version 2.0\n#  (the \"License\"); you may not use this file except in compliance with\n#  the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\n# ################################################\n#  Inspired by\n#  https://github.com/SeleniumHQ/docker-selenium/blob/master/Base/Dockerfile\n# ################################################\n# ================================================\n#  Customize sources for apt-get\n# ================================================\nRUN DISTRIB_CODENAME=$( cat /etc/*release* | grep DISTRIB_CODENAME | cut -f2 -d'=' ;) \\\n && echo \"deb http://archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME} main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME}-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu ${DISTRIB_CODENAME}-security main universe\\n\" >> /etc/apt/sources.list\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends software-properties-common -qqy \\\n && add-apt-repository -y ppa:git-core/ppa\n# ========================\n#  Miscellaneous packages\n#  iproute which is surprisingly not available in ubuntu:15.04 but is available in ubuntu:latest\n#  OpenJDK8\n#  rlwrap is for azure-cli\n#  groff is for aws-cli\n#  tree is convenient for troubleshooting builds\n# ========================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends iproute openssh-client ssh-askpass ca-certificates openjdk-8-jdk tar zip unzip wget curl git build-essential less nano tree jq python python-pip groff rlwrap rsync -qqy \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security\n#  workaround https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=775775\nRUN [ -f \"/etc/ssl/certs/java/cacerts\" ] || /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#  workaround \"You are using pip version 8.1.1, however version 9.0.1 is available.\"\nRUN pip install pip setuptools --upgrade\nRUN pip install yq\n# ==========\n#  Maven\n# ==========\nENV MAVEN_VERSION=\"3.6.0\"\nRUN curl -fsSL http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar xzf - -C /usr/share \\\n && mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\n# ==========\n#  Ant\n# ==========\nENV ANT_VERSION=\"1.10.5\"\nRUN curl -fsSL https://www.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz | tar xzf - -C /usr/share \\\n && mv /usr/share/apache-ant-$ANT_VERSION /usr/share/ant \\\n && ln -s /usr/share/ant/bin/ant /usr/bin/ant\nENV ANT_HOME=\"/usr/share/ant\"\n# ==========\n#  Selenium\n# ==========\nENV SELENIUM_MAJOR_VERSION=\"3.141\"\nENV SELENIUM_VERSION=\"3.141.59\"\nRUN mkdir -p /opt/selenium \\\n && wget --no-verbose http://selenium-release.storage.googleapis.com/$SELENIUM_MAJOR_VERSION/selenium-server-standalone-$SELENIUM_VERSION.jar -O /opt/selenium/selenium-server-standalone.jar\nRUN pip install selenium -U\n#  https://github.com/SeleniumHQ/docker-selenium/blob/master/StandaloneFirefox/Dockerfile\nENV SCREEN_WIDTH=\"1360\"\nENV SCREEN_HEIGHT=\"1020\"\nENV SCREEN_DEPTH=\"24\"\nENV DISPLAY=\":99.0\"\nCOPY entry_point.sh /opt/bin/entry_point.sh\nCOPY functions.sh /opt/bin/functions.sh\nRUN chmod +x /opt/bin/entry_point.sh \\\n && chmod +x /opt/bin/functions.sh\n# ========================================\n#  Add normal user with passwordless sudo\n# ========================================\nRUN useradd jenkins --shell /bin/bash --create-home \\\n && usermod -a -G sudo jenkins \\\n && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n && echo 'jenkins:secret' | chpasswd\n# =====\n#  XVFB\n# =====\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends xvfb -qqy \\\n && rm -rf /var/lib/apt/lists/*\n# =========\n#  Firefox\n# =========\nARG FIREFOX_VERSION=60.4.0esr\n#  don't install firefox with apt-get because there are some problems,\n#  install the binaries downloaded from mozilla\n#  see https://github.com/SeleniumHQ/docker-selenium/blob/3.0.1-fermium/NodeFirefox/Dockerfile#L13\n#  workaround \"D-Bus library appears to be incorrectly set up; failed to read machine uuid\"\n#  run \"dbus-uuidgen > /var/lib/dbus/machine-id\"\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends firefox dbus -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n && wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2 \\\n && apt-get -y purge firefox \\\n && rm -rf /opt/firefox \\\n && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n && rm /tmp/firefox.tar.bz2 \\\n && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\nRUN dbus-uuidgen > /var/lib/dbus/machine-id\n# ======================\n#  Firefox GECKO DRIVER\n# ======================\nARG GECKO_DRIVER_VERSION=v0.23.0\nRUN wget -O - \"https://github.com/mozilla/geckodriver/releases/download/$GECKO_DRIVER_VERSION/geckodriver-$GECKO_DRIVER_VERSION-linux64.tar.gz\" | tar -xz -C /usr/bin\n# ====================================\n#  Cloud Foundry CLI\n#  https://github.com/cloudfoundry/cli\n# ====================================\nRUN wget -O - \"http://cli.run.pivotal.io/stable?release=linux64-binary&source=github\" | tar -C /usr/local/bin -zxf -\n# ====================================\n#  AWS CLI\n# ====================================\nRUN pip install awscli\n#  compatibility with CloudBees AWS CLI Plugin which expects pip to be installed as user\nRUN mkdir -p /home/jenkins/.local/bin/ \\\n && ln -s /usr/bin/pip /home/jenkins/.local/bin/pip \\\n && chown -R jenkins:jenkins /home/jenkins/.local\n# ====================================\n#  NODE JS\n#  See https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\n# ====================================\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash \\\n && apt-get install nodejs -y\n# ====================================\n#  AZURE CLI\n#  https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-apt?view=azure-cli-latest\n# ====================================\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ xenial main\" | tee /etc/apt/sources.list.d/azure-cli.list\nRUN curl -L https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN apt-key adv --keyserver packages.microsoft.com --recv-keys 52E16F86FEE04B979B07E28DB02C46DF417A0893\nRUN apt-get install --no-install-recommends apt-transport-https -qqy \\\n && apt-get update -qqy \\\n && apt-get install --no-install-recommends azure-cli -qqy\n# ====================================\n#  BOWER, GRUNT, GULP\n# ====================================\nRUN npm install grunt-cli@1.3.1 bower@1.8.4 gulp@4.0.0 --global\n# ====================================\n#  Kubernetes CLI\n#  See http://kubernetes.io/v1.0/docs/getting-started-guides/aws/kubectl.html\n# ====================================\nRUN curl https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n# ====================================\n#  OPENSHIFT V3 CLI\n#  Only install \"oc\" executable, don't install \"openshift\", \"oadmin\"...\n#  See https://github.com/openshift/origin/releases\n# ====================================\nRUN mkdir /var/tmp/openshift \\\n && wget -O - \"https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz\" | tar -C /var/tmp/openshift --strip-components=1 -zxf - \\\n && mv /var/tmp/openshift/oc /usr/local/bin \\\n && rm -rf /var/tmp/openshift\n# ====================================\n#  JMETER\n# ====================================\nRUN mkdir /opt/jmeter \\\n && wget -O - \"https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.0.tgz\" | tar -xz --strip=1 -C /opt/jmeter\n# ====================================\n#  MYSQL CLIENT\n# ====================================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends mysql-client -qqy \\\n && rm -rf /var/lib/apt/lists/*\nUSER jenkins\n#  for dev purpose\n#  USER root\nENTRYPOINT [\"/opt/bin/entry_point.sh\"]\nEXPOSE 4444/tcp\n","injectedSmells":[],"originalDockerfileHash":"70b6ffdbe44132a45e159587a7875b2c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nLABEL maintainer=\"Cyrille Le Clerc <cleclerc@cloudbees.com>\"\n#\n#   Licensed to the Apache Software Foundation (ASF) under one or more\n#   contributor license agreements.  See the NOTICE file distributed with\n#   this work for additional information regarding copyright ownership.\n#   The ASF licenses this file to You under the Apache License, Version 2.0\n#   (the \"License\"); you may not use this file except in compliance with\n#   the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n#  ################################################\n#   Inspired by\n#   https://github.com/SeleniumHQ/docker-selenium/blob/master/Base/Dockerfile\n#  ################################################\n#  ================================================\n#   Customize sources for apt-get\n#  ================================================\nRUN DISTRIB_CODENAME=$( cat /etc/*release* | grep DISTRIB_CODENAME | cut -f2 -d'=' ;) \\\n && echo \"deb http://archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME} main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu ${DISTRIB_CODENAME}-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu ${DISTRIB_CODENAME}-security main universe\\n\" >> /etc/apt/sources.list\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends software-properties-common -qqy \\\n && add-apt-repository -y ppa:git-core/ppa\n#  ========================\n#   Miscellaneous packages\n#   iproute which is surprisingly not available in ubuntu:15.04 but is available in ubuntu:latest\n#   OpenJDK8\n#   rlwrap is for azure-cli\n#   groff is for aws-cli\n#   tree is convenient for troubleshooting builds\n#  ========================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends iproute openssh-client ssh-askpass ca-certificates openjdk-8-jdk tar zip unzip wget curl git build-essential less nano tree jq python python-pip groff rlwrap rsync -qqy \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security\n#   workaround https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=775775\nRUN [ -f \"/etc/ssl/certs/java/cacerts\" ] || /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#   workaround \"You are using pip version 8.1.1, however version 9.0.1 is available.\"\nRUN pip install pip setuptools --upgrade\nRUN pip install yq\n#  ==========\n#   Maven\n#  ==========\nENV MAVEN_VERSION=\"3.6.0\"\nRUN curl -fsSL http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar xzf - -C /usr/share \\\n && mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\n#  ==========\n#   Ant\n#  ==========\nENV ANT_VERSION=\"1.10.5\"\nRUN curl -fsSL https://www.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz | tar xzf - -C /usr/share \\\n && mv /usr/share/apache-ant-$ANT_VERSION /usr/share/ant \\\n && ln -s /usr/share/ant/bin/ant /usr/bin/ant\nENV ANT_HOME=\"/usr/share/ant\"\n#  ==========\n#   Selenium\n#  ==========\nENV SELENIUM_MAJOR_VERSION=\"3.141\"\nENV SELENIUM_VERSION=\"3.141.59\"\nRUN mkdir -p /opt/selenium \\\n && wget --no-verbose http://selenium-release.storage.googleapis.com/$SELENIUM_MAJOR_VERSION/selenium-server-standalone-$SELENIUM_VERSION.jar -O /opt/selenium/selenium-server-standalone.jar\nRUN pip install selenium -U\n#   https://github.com/SeleniumHQ/docker-selenium/blob/master/StandaloneFirefox/Dockerfile\nENV SCREEN_WIDTH=\"1360\"\nENV SCREEN_HEIGHT=\"1020\"\nENV SCREEN_DEPTH=\"24\"\nENV DISPLAY=\":99.0\"\nCOPY entry_point.sh /opt/bin/entry_point.sh\nCOPY functions.sh /opt/bin/functions.sh\nRUN chmod +x /opt/bin/entry_point.sh \\\n && chmod +x /opt/bin/functions.sh\n#  ========================================\n#   Add normal user with passwordless sudo\n#  ========================================\nRUN useradd jenkins --shell /bin/bash --create-home \\\n && usermod -a -G sudo jenkins \\\n && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n && echo 'jenkins:secret' | chpasswd\n#  =====\n#   XVFB\n#  =====\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends xvfb -qqy \\\n && rm -rf /var/lib/apt/lists/*\n#  =========\n#   Firefox\n#  =========\nARG FIREFOX_VERSION=60.4.0esr\n#   don't install firefox with apt-get because there are some problems,\n#   install the binaries downloaded from mozilla\n#   see https://github.com/SeleniumHQ/docker-selenium/blob/3.0.1-fermium/NodeFirefox/Dockerfile#L13\n#   workaround \"D-Bus library appears to be incorrectly set up; failed to read machine uuid\"\n#   run \"dbus-uuidgen > /var/lib/dbus/machine-id\"\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends firefox dbus -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n && wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2 \\\n && apt-get -y purge firefox \\\n && rm -rf /opt/firefox \\\n && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n && rm /tmp/firefox.tar.bz2 \\\n && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\nRUN dbus-uuidgen > /var/lib/dbus/machine-id\n#  ======================\n#   Firefox GECKO DRIVER\n#  ======================\nARG GECKO_DRIVER_VERSION=v0.23.0\nRUN wget -O - \"https://github.com/mozilla/geckodriver/releases/download/$GECKO_DRIVER_VERSION/geckodriver-$GECKO_DRIVER_VERSION-linux64.tar.gz\" | tar -xz -C /usr/bin\n#  ====================================\n#   Cloud Foundry CLI\n#   https://github.com/cloudfoundry/cli\n#  ====================================\nRUN wget -O - \"http://cli.run.pivotal.io/stable?release=linux64-binary&source=github\" | tar -C /usr/local/bin -zxf -\n#  ====================================\n#   AWS CLI\n#  ====================================\nRUN pip install awscli\n#   compatibility with CloudBees AWS CLI Plugin which expects pip to be installed as user\nRUN mkdir -p /home/jenkins/.local/bin/ \\\n && ln -s /usr/bin/pip /home/jenkins/.local/bin/pip \\\n && chown -R jenkins:jenkins /home/jenkins/.local\n#  ====================================\n#   NODE JS\n#   See https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\n#  ====================================\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash \\\n && apt-get install nodejs -y\n#  ====================================\n#   AZURE CLI\n#   https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-apt?view=azure-cli-latest\n#  ====================================\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ xenial main\" | tee /etc/apt/sources.list.d/azure-cli.list\nRUN curl -L https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN apt-key adv --keyserver packages.microsoft.com --recv-keys 52E16F86FEE04B979B07E28DB02C46DF417A0893\nRUN apt-get install --no-install-recommends apt-transport-https -qqy \\\n && apt-get update -qqy \\\n && apt-get install --no-install-recommends azure-cli -qqy\n#  ====================================\n#   BOWER, GRUNT, GULP\n#  ====================================\nRUN npm install grunt-cli@1.3.1 bower@1.8.4 gulp@4.0.0 --global\n#  ====================================\n#   Kubernetes CLI\n#   See http://kubernetes.io/v1.0/docs/getting-started-guides/aws/kubectl.html\n#  ====================================\nRUN curl https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#  ====================================\n#   OPENSHIFT V3 CLI\n#   Only install \"oc\" executable, don't install \"openshift\", \"oadmin\"...\n#   See https://github.com/openshift/origin/releases\n#  ====================================\nRUN mkdir /var/tmp/openshift \\\n && wget -O - \"https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz\" | tar -C /var/tmp/openshift --strip-components=1 -zxf - \\\n && mv /var/tmp/openshift/oc /usr/local/bin \\\n && rm -rf /var/tmp/openshift\n#  ====================================\n#   JMETER\n#  ====================================\nRUN mkdir /opt/jmeter \\\n && wget -O - \"https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.0.tgz\" | tar -xz --strip=1 -C /opt/jmeter\n#  ====================================\n#   MYSQL CLIENT\n#  ====================================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends mysql-client -qqy \\\n && rm -rf /var/lib/apt/lists/*\nUSER jenkins\n#   for dev purpose\n#   USER root\nENTRYPOINT [\"/opt/bin/entry_point.sh\"]\nEXPOSE 4444/tcp\n","originalDockerfileUglifiedHash":"edc7f4f01aa3d201d665b0606cf8103b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9e1523946c8a0ea3196d81f110afa3140acd8633.dockerfile"}