{"seed":1868704839,"processedDockerfileHash":"68e9ac61764f08bb4bc700f2f8f31fb0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:8\nARG TERM=linux\nARG DEBIAN_FRONTEND=noninteractive\nARG SCIDB_NAME=scidb\nENV SCIDB_VER=\"15.7\" \\\n    SCIDB_NAME=\"$SCIDB_NAME\"\nENV SCIDB_INSTALL_PATH=\"/opt/scidb/$SCIDB_VER\" \\\n    SCIDB_SHIM=\"ubuntu_14.04_shim_${SCIDB_VER}_amd64.deb\"\nENV PATH=\"$PATH:$SCIDB_INSTALL_PATH/bin\"\n#  # Install dependencies\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-transport-https ca-certificates libscalapack-openmpi1 openssh-server pkg-config wget --assume-yes ) \\\n && rm -rf /var/lib/apt/lists/*\n#  # Build and install libpqxx3 from wheezy\nRUN echo \"deb-src http://http.debian.net/debian wheezy main\" > /etc/apt/sources.list.d/wheezy.list \\\n && : \\\n && apt-get build-dep --assume-yes --no-install-recommends libpqxx3 \\\n && mkdir /usr/local/src/libpqxx3 \\\n && cd /usr/local/src/libpqxx3 \\\n && apt-get source --build libpqxx3 \\\n && apt-get purge --assume-yes autotools-dev bsdmainutils build-essential bzip2 chrpath debhelper dpkg-dev file gettext gettext-base groff-base intltool-debian libasprintf0c2 libcroco3 libdpkg-perl libgdbm3 libmagic1 libpipeline1 libtimedate-perl libtool libunistring0 man-db perl perl-modules po-debconf xz-utils \\\n && dpkg --install libpqxx-3.1_3.1-1.1_amd64.deb libpqxx3-dev_3.1-1.1_amd64.deb \\\n && rm -rf /etc/apt/sources.list.d/wheezy.list /usr/local/src/libpqxx3 /var/lib/apt/lists/*\n#  # Add Paradigm4 and Bintray repositories and install SciDB packages\nRUN wget --no-verbose --output-document - https://downloads.paradigm4.com/key | apt-key add - \\\n && echo \"deb https://downloads.paradigm4.com/ ubuntu14.04/3rdparty/\" > /etc/apt/sources.list.d/scidb.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv 46BD98A354BA5235 \\\n && echo \"deb https://dl.bintray.com/rvernica/deb jessie main\" > /etc/apt/sources.list.d/bintray.list \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends scidb-$SCIDB_VER-all-coord --assume-yes ) \\\n && rm -rf /var/lib/apt/lists/*\n#  # Setup SSH\nRUN echo 'StrictHostKeyChecking no' >> /etc/ssh/ssh_config \\\n && ssh-keygen -f /root/.ssh/id_rsa -q -N \"\" \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  # Setup SciDB \"config.ini\"\nCOPY config.deb.ini $SCIDB_INSTALL_PATH/etc/config.ini\n#  # Setup PostgreSQL and SciDB\nRUN echo \"127.0.0.1:5432:$SCIDB_NAME:$SCIDB_NAME:`date +%s | sha256sum | base64 | head -c 32 `\" > /root/.pgpass \\\n && chmod go-r /root/.pgpass \\\n && service ssh start \\\n && service postgresql start \\\n && su --command=\" $SCIDB_INSTALL_PATH/bin/scidb.py init-syscat $SCIDB_NAME --db-password `cut --delimiter : --fields 5 /root/.pgpass `\" postgres \\\n && $SCIDB_INSTALL_PATH/bin/scidb.py init-all --force $SCIDB_NAME \\\n && service postgresql stop\n#  # Install Shim\nRUN wget --no-verbose --output-document /tmp/$SCIDB_SHIM http://paradigm4.github.io/shim/$SCIDB_SHIM \\\n && dpkg --install /tmp/$SCIDB_SHIM\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#  # Port | App\n#  # -----+-----\n#  # 1239 | SciDB iquery\n#  # 8080 | SciDB Shim (HTTP)\n#  # 8083 | SciDB Shim (HTTPS)\nEXPOSE 1239/tcp 8080/tcp 8083/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:8\nARG TERM=linux\nARG DEBIAN_FRONTEND=noninteractive\nARG SCIDB_NAME=scidb\nENV SCIDB_VER=\"15.7\" \\\n    SCIDB_NAME=\"$SCIDB_NAME\"\nENV SCIDB_INSTALL_PATH=\"/opt/scidb/$SCIDB_VER\" \\\n    SCIDB_SHIM=\"ubuntu_14.04_shim_${SCIDB_VER}_amd64.deb\"\nENV PATH=\"$PATH:$SCIDB_INSTALL_PATH/bin\"\n# # Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates libscalapack-openmpi1 openssh-server pkg-config wget --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n# # Build and install libpqxx3 from wheezy\nRUN echo \"deb-src http://http.debian.net/debian wheezy main\" > /etc/apt/sources.list.d/wheezy.list \\\n && apt-get update \\\n && apt-get build-dep --assume-yes --no-install-recommends libpqxx3 \\\n && mkdir /usr/local/src/libpqxx3 \\\n && cd /usr/local/src/libpqxx3 \\\n && apt-get source --build libpqxx3 \\\n && apt-get purge --assume-yes autotools-dev bsdmainutils build-essential bzip2 chrpath debhelper dpkg-dev file gettext gettext-base groff-base intltool-debian libasprintf0c2 libcroco3 libdpkg-perl libgdbm3 libmagic1 libpipeline1 libtimedate-perl libtool libunistring0 man-db perl perl-modules po-debconf xz-utils \\\n && dpkg --install libpqxx-3.1_3.1-1.1_amd64.deb libpqxx3-dev_3.1-1.1_amd64.deb \\\n && rm -rf /etc/apt/sources.list.d/wheezy.list /usr/local/src/libpqxx3 /var/lib/apt/lists/*\n# # Add Paradigm4 and Bintray repositories and install SciDB packages\nRUN wget --no-verbose --output-document - https://downloads.paradigm4.com/key | apt-key add - \\\n && echo \"deb https://downloads.paradigm4.com/ ubuntu14.04/3rdparty/\" > /etc/apt/sources.list.d/scidb.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv 46BD98A354BA5235 \\\n && echo \"deb https://dl.bintray.com/rvernica/deb jessie main\" > /etc/apt/sources.list.d/bintray.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends scidb-$SCIDB_VER-all-coord --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n# # Setup SSH\nRUN echo 'StrictHostKeyChecking no' >> /etc/ssh/ssh_config \\\n && ssh-keygen -f /root/.ssh/id_rsa -q -N \"\" \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n# # Setup SciDB \"config.ini\"\nCOPY config.deb.ini $SCIDB_INSTALL_PATH/etc/config.ini\n# # Setup PostgreSQL and SciDB\nRUN echo \"127.0.0.1:5432:$SCIDB_NAME:$SCIDB_NAME:`date +%s | sha256sum | base64 | head -c 32 `\" > /root/.pgpass \\\n && chmod go-r /root/.pgpass \\\n && service ssh start \\\n && service postgresql start \\\n && su --command=\" $SCIDB_INSTALL_PATH/bin/scidb.py init-syscat $SCIDB_NAME --db-password `cut --delimiter : --fields 5 /root/.pgpass `\" postgres \\\n && $SCIDB_INSTALL_PATH/bin/scidb.py init-all --force $SCIDB_NAME \\\n && service postgresql stop\n# # Install Shim\nRUN wget --no-verbose --output-document /tmp/$SCIDB_SHIM http://paradigm4.github.io/shim/$SCIDB_SHIM \\\n && dpkg --install /tmp/$SCIDB_SHIM\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n# # Port | App\n# # -----+-----\n# # 1239 | SciDB iquery\n# # 8080 | SciDB Shim (HTTP)\n# # 8083 | SciDB Shim (HTTPS)\nEXPOSE 1239/tcp 8080/tcp 8083/tcp\n","injectedSmells":[],"originalDockerfileHash":"3ecbb5bd491fafa8ec9e3bd86f622c47","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:8\nARG TERM=linux\nARG DEBIAN_FRONTEND=noninteractive\nARG SCIDB_NAME=scidb\nENV SCIDB_VER=\"15.7\" \\\n    SCIDB_NAME=\"$SCIDB_NAME\"\nENV SCIDB_INSTALL_PATH=\"/opt/scidb/$SCIDB_VER\" \\\n    SCIDB_SHIM=\"ubuntu_14.04_shim_${SCIDB_VER}_amd64.deb\"\nENV PATH=\"$PATH:$SCIDB_INSTALL_PATH/bin\"\n#  # Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates libscalapack-openmpi1 openssh-server pkg-config wget --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n#  # Build and install libpqxx3 from wheezy\nRUN echo \"deb-src http://http.debian.net/debian wheezy main\" > /etc/apt/sources.list.d/wheezy.list \\\n && apt-get update \\\n && apt-get build-dep --assume-yes --no-install-recommends libpqxx3 \\\n && mkdir /usr/local/src/libpqxx3 \\\n && cd /usr/local/src/libpqxx3 \\\n && apt-get source --build libpqxx3 \\\n && apt-get purge --assume-yes autotools-dev bsdmainutils build-essential bzip2 chrpath debhelper dpkg-dev file gettext gettext-base groff-base intltool-debian libasprintf0c2 libcroco3 libdpkg-perl libgdbm3 libmagic1 libpipeline1 libtimedate-perl libtool libunistring0 man-db perl perl-modules po-debconf xz-utils \\\n && dpkg --install libpqxx-3.1_3.1-1.1_amd64.deb libpqxx3-dev_3.1-1.1_amd64.deb \\\n && rm -rf /etc/apt/sources.list.d/wheezy.list /usr/local/src/libpqxx3 /var/lib/apt/lists/*\n#  # Add Paradigm4 and Bintray repositories and install SciDB packages\nRUN wget --no-verbose --output-document - https://downloads.paradigm4.com/key | apt-key add - \\\n && echo \"deb https://downloads.paradigm4.com/ ubuntu14.04/3rdparty/\" > /etc/apt/sources.list.d/scidb.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv 46BD98A354BA5235 \\\n && echo \"deb https://dl.bintray.com/rvernica/deb jessie main\" > /etc/apt/sources.list.d/bintray.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends scidb-$SCIDB_VER-all-coord --assume-yes \\\n && rm -rf /var/lib/apt/lists/*\n#  # Setup SSH\nRUN echo 'StrictHostKeyChecking no' >> /etc/ssh/ssh_config \\\n && ssh-keygen -f /root/.ssh/id_rsa -q -N \"\" \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  # Setup SciDB \"config.ini\"\nCOPY config.deb.ini $SCIDB_INSTALL_PATH/etc/config.ini\n#  # Setup PostgreSQL and SciDB\nRUN echo \"127.0.0.1:5432:$SCIDB_NAME:$SCIDB_NAME:`date +%s | sha256sum | base64 | head -c 32 `\" > /root/.pgpass \\\n && chmod go-r /root/.pgpass \\\n && service ssh start \\\n && service postgresql start \\\n && su --command=\" $SCIDB_INSTALL_PATH/bin/scidb.py init-syscat $SCIDB_NAME --db-password `cut --delimiter : --fields 5 /root/.pgpass `\" postgres \\\n && $SCIDB_INSTALL_PATH/bin/scidb.py init-all --force $SCIDB_NAME \\\n && service postgresql stop\n#  # Install Shim\nRUN wget --no-verbose --output-document /tmp/$SCIDB_SHIM http://paradigm4.github.io/shim/$SCIDB_SHIM \\\n && dpkg --install /tmp/$SCIDB_SHIM\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#  # Port | App\n#  # -----+-----\n#  # 1239 | SciDB iquery\n#  # 8080 | SciDB Shim (HTTP)\n#  # 8083 | SciDB Shim (HTTPS)\nEXPOSE 1239/tcp 8080/tcp 8083/tcp\n","originalDockerfileUglifiedHash":"a5608d05c674487dfa414a3f3d5a8734","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6ad51214232854175bf15bba1fecfc3a1b256c89.dockerfile"}