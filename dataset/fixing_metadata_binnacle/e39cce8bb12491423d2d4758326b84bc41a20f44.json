{"seed":3336505757,"processedDockerfileHash":"ce037dbc57faab548f73d45ee01bd1ae","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  # Emacs, make this -*- mode: sh; -*-\n#  # start with the Docker 'base R' Debian-based image\nFROM r-base:latest\n#  # This handle reaches Carl and Dirk\nMAINTAINER \"Carl Boettiger and Dirk Eddelbuettel\" rocker-maintainers@eddelbuettel.com\n#  # Remain current\nRUN : \\\n && apt-get dist-upgrade -y\n#  # From the Build-Depends of the Debian R package, plus subversion, and clang-3.8\n#  # Compiler flags from https://www.stats.ox.ac.uk/pub/bdr/memtests/README.txt\n#  #\n#  # Also add   git autotools-dev automake  so that we can build littler from source\n#  #\nRUN apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends unstable automake autotools-dev bash-completion bison clang libc++-dev libc++abi-dev debhelper default-jdk gfortran git groff-base libblas-dev libbz2-dev libcairo2-dev libcurl4-openssl-dev libjpeg-dev liblapack-dev liblzma-dev libncurses5-dev libpango1.0-dev libpcre3-dev libpng-dev libreadline-dev libssl-dev libtiff5-dev libx11-dev libxml2-dev libxt-dev llvm-7 mpack subversion tcl8.6-dev texinfo texlive-base texlive-extra-utils texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra texlive-latex-recommended tk8.6-dev valgrind x11proto-core-dev xauth xdg-utils xfonts-base xvfb zlib1g-dev -t -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#  # Add symlink and check out R-devel\nRUN ln -s $( which llvm-symbolizer-7 ;) /usr/local/bin/llvm-symbolizer \\\n && cd /tmp \\\n && svn co https://svn.r-project.org/R/trunk R-devel\n#  # Build and install according extending the standard 'recipe' I emailed/posted years ago\n#  # Leak detection does not work at build time, see https://github.com/google/sanitizers/issues/764 and the fact that we cannot add privileges during build (e.g. https://unix.stackexchange.com/q/329816/19205)\nRUN cd /tmp/R-devel \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CC=\"clang -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CXX=\"clang++ -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" FFLAGS=\"-g -O2 -mtune=native\" FCFLAGS=\"-g -O2 -mtune=native\" CXXFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" MAIN_LD=\"clang++ -stdlib=libc++ -fsanitize=undefined,address\" FC=\"gfortran\" F77=\"gfortran\" ASAN_OPTIONS=detect_leaks=0 ./configure --enable-R-shlib --without-blas --without-lapack --with-readline --without-recommended-packages --program-suffix=dev --disable-openmp \\\n && ASAN_OPTIONS=detect_leaks=0 make \\\n && ASAN_OPTIONS=detect_leaks=0 make install \\\n && ASAN_OPTIONS=detect_leaks=0 make clean\n#  # Set Renviron to get libs from base R install\nRUN echo \"R_LIBS=${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron\n#  # Set default CRAN repo\nRUN echo 'options(\"repos\"=\"http://cran.rstudio.com\")' >> /usr/local/lib/R/etc/Rprofile.site\n#  # to also build littler against RD\n#  #   1)\t apt-get install git autotools-dev automake\n#  #   2)\t use CC from RD CMD config CC, ie same as R\n#  #   3)\t use PATH to include RD's bin, ie\n#  # ie\n#  #   CC=\"clang-3.5 -fsanitize=undefined -fno-sanitize=float-divide-by-zero,vptr,function -fno-sanitize-recover\" \\\n#  #   PATH=\"/usr/local/lib/R/bin/:$PATH\" \\\n#  #   ./bootstrap\n#  # Create R-devel symlinks\nRUN cd /usr/local/bin \\\n && mv R Rdevel \\\n && mv Rscript Rscriptdevel \\\n && ln -s Rdevel RD \\\n && ln -s Rscriptdevel RDscript\n#  # Install littler\nRUN ASAN_OPTIONS=detect_leaks=0 R --slave -e \"install.packages('littler')\" \\\n && ASAN_OPTIONS=detect_leaks=0 RD --slave -e \"install.packages('littler')\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# # Emacs, make this -*- mode: sh; -*-\n# # start with the Docker 'base R' Debian-based image\nFROM r-base:latest\n# # This handle reaches Carl and Dirk\nMAINTAINER \"Carl Boettiger and Dirk Eddelbuettel\" rocker-maintainers@eddelbuettel.com\n# # Remain current\nRUN apt-get update -qq \\\n && apt-get dist-upgrade -y\n# # From the Build-Depends of the Debian R package, plus subversion, and clang-3.8\n# # Compiler flags from https://www.stats.ox.ac.uk/pub/bdr/memtests/README.txt\n# #\n# # Also add   git autotools-dev automake  so that we can build littler from source\n# #\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends unstable automake autotools-dev bash-completion bison clang libc++-dev libc++abi-dev debhelper default-jdk gfortran git groff-base libblas-dev libbz2-dev libcairo2-dev libcurl4-openssl-dev libjpeg-dev liblapack-dev liblzma-dev libncurses5-dev libpango1.0-dev libpcre3-dev libpng-dev libreadline-dev libssl-dev libtiff5-dev libx11-dev libxml2-dev libxt-dev llvm-7 mpack subversion tcl8.6-dev texinfo texlive-base texlive-extra-utils texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra texlive-latex-recommended tk8.6-dev valgrind x11proto-core-dev xauth xdg-utils xfonts-base xvfb zlib1g-dev -t -y \\\n && rm -rf /var/lib/apt/lists/*\n# # Add symlink and check out R-devel\nRUN ln -s $( which llvm-symbolizer-7 ;) /usr/local/bin/llvm-symbolizer \\\n && cd /tmp \\\n && svn co https://svn.r-project.org/R/trunk R-devel\n# # Build and install according extending the standard 'recipe' I emailed/posted years ago\n# # Leak detection does not work at build time, see https://github.com/google/sanitizers/issues/764 and the fact that we cannot add privileges during build (e.g. https://unix.stackexchange.com/q/329816/19205)\nRUN cd /tmp/R-devel \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CC=\"clang -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CXX=\"clang++ -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" FFLAGS=\"-g -O2 -mtune=native\" FCFLAGS=\"-g -O2 -mtune=native\" CXXFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" MAIN_LD=\"clang++ -stdlib=libc++ -fsanitize=undefined,address\" FC=\"gfortran\" F77=\"gfortran\" ASAN_OPTIONS=detect_leaks=0 ./configure --enable-R-shlib --without-blas --without-lapack --with-readline --without-recommended-packages --program-suffix=dev --disable-openmp \\\n && ASAN_OPTIONS=detect_leaks=0 make \\\n && ASAN_OPTIONS=detect_leaks=0 make install \\\n && ASAN_OPTIONS=detect_leaks=0 make clean\n# # Set Renviron to get libs from base R install\nRUN echo \"R_LIBS=${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron\n# # Set default CRAN repo\nRUN echo 'options(\"repos\"=\"http://cran.rstudio.com\")' >> /usr/local/lib/R/etc/Rprofile.site\n# # to also build littler against RD\n# #   1)\t apt-get install git autotools-dev automake\n# #   2)\t use CC from RD CMD config CC, ie same as R\n# #   3)\t use PATH to include RD's bin, ie\n# # ie\n# #   CC=\"clang-3.5 -fsanitize=undefined -fno-sanitize=float-divide-by-zero,vptr,function -fno-sanitize-recover\" \\\n# #   PATH=\"/usr/local/lib/R/bin/:$PATH\" \\\n# #   ./bootstrap\n# # Create R-devel symlinks\nRUN cd /usr/local/bin \\\n && mv R Rdevel \\\n && mv Rscript Rscriptdevel \\\n && ln -s Rdevel RD \\\n && ln -s Rscriptdevel RDscript\n# # Install littler\nRUN ASAN_OPTIONS=detect_leaks=0 R --slave -e \"install.packages('littler')\" \\\n && ASAN_OPTIONS=detect_leaks=0 RD --slave -e \"install.packages('littler')\"\n","injectedSmells":[],"originalDockerfileHash":"ccfc9d9d6681c9a1e8e3672ec6df099d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  # Emacs, make this -*- mode: sh; -*-\n#  # start with the Docker 'base R' Debian-based image\nFROM r-base:latest\n#  # This handle reaches Carl and Dirk\nMAINTAINER \"Carl Boettiger and Dirk Eddelbuettel\" rocker-maintainers@eddelbuettel.com\n#  # Remain current\nRUN apt-get update -qq \\\n && apt-get dist-upgrade -y\n#  # From the Build-Depends of the Debian R package, plus subversion, and clang-3.8\n#  # Compiler flags from https://www.stats.ox.ac.uk/pub/bdr/memtests/README.txt\n#  #\n#  # Also add   git autotools-dev automake  so that we can build littler from source\n#  #\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends unstable automake autotools-dev bash-completion bison clang libc++-dev libc++abi-dev debhelper default-jdk gfortran git groff-base libblas-dev libbz2-dev libcairo2-dev libcurl4-openssl-dev libjpeg-dev liblapack-dev liblzma-dev libncurses5-dev libpango1.0-dev libpcre3-dev libpng-dev libreadline-dev libssl-dev libtiff5-dev libx11-dev libxml2-dev libxt-dev llvm-7 mpack subversion tcl8.6-dev texinfo texlive-base texlive-extra-utils texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra texlive-latex-recommended tk8.6-dev valgrind x11proto-core-dev xauth xdg-utils xfonts-base xvfb zlib1g-dev -t -y \\\n && rm -rf /var/lib/apt/lists/*\n#  # Add symlink and check out R-devel\nRUN ln -s $( which llvm-symbolizer-7 ;) /usr/local/bin/llvm-symbolizer \\\n && cd /tmp \\\n && svn co https://svn.r-project.org/R/trunk R-devel\n#  # Build and install according extending the standard 'recipe' I emailed/posted years ago\n#  # Leak detection does not work at build time, see https://github.com/google/sanitizers/issues/764 and the fact that we cannot add privileges during build (e.g. https://unix.stackexchange.com/q/329816/19205)\nRUN cd /tmp/R-devel \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CC=\"clang -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CXX=\"clang++ -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope\" CFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" FFLAGS=\"-g -O2 -mtune=native\" FCFLAGS=\"-g -O2 -mtune=native\" CXXFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" MAIN_LD=\"clang++ -stdlib=libc++ -fsanitize=undefined,address\" FC=\"gfortran\" F77=\"gfortran\" ASAN_OPTIONS=detect_leaks=0 ./configure --enable-R-shlib --without-blas --without-lapack --with-readline --without-recommended-packages --program-suffix=dev --disable-openmp \\\n && ASAN_OPTIONS=detect_leaks=0 make \\\n && ASAN_OPTIONS=detect_leaks=0 make install \\\n && ASAN_OPTIONS=detect_leaks=0 make clean\n#  # Set Renviron to get libs from base R install\nRUN echo \"R_LIBS=${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron\n#  # Set default CRAN repo\nRUN echo 'options(\"repos\"=\"http://cran.rstudio.com\")' >> /usr/local/lib/R/etc/Rprofile.site\n#  # to also build littler against RD\n#  #   1)\t apt-get install git autotools-dev automake\n#  #   2)\t use CC from RD CMD config CC, ie same as R\n#  #   3)\t use PATH to include RD's bin, ie\n#  # ie\n#  #   CC=\"clang-3.5 -fsanitize=undefined -fno-sanitize=float-divide-by-zero,vptr,function -fno-sanitize-recover\" \\\n#  #   PATH=\"/usr/local/lib/R/bin/:$PATH\" \\\n#  #   ./bootstrap\n#  # Create R-devel symlinks\nRUN cd /usr/local/bin \\\n && mv R Rdevel \\\n && mv Rscript Rscriptdevel \\\n && ln -s Rdevel RD \\\n && ln -s Rscriptdevel RDscript\n#  # Install littler\nRUN ASAN_OPTIONS=detect_leaks=0 R --slave -e \"install.packages('littler')\" \\\n && ASAN_OPTIONS=detect_leaks=0 RD --slave -e \"install.packages('littler')\"\n","originalDockerfileUglifiedHash":"8f57ab04d2be50c2fc5a7e1c0e0e2ffb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e39cce8bb12491423d2d4758326b84bc41a20f44.dockerfile"}