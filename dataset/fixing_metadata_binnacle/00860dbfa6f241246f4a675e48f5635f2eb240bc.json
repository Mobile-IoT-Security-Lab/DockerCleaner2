{"seed":1515017749,"processedDockerfileHash":"6aca8f241f67e70cad9f2be26fbc5ad9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This is a Dockerfile for osrf/sros:kinetic with SROS\nFROM ubuntu:xenial\n#   install packages\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends dirmngr=2.1.11-6ubuntu2.1 gnupg2=2.1.11-6ubuntu2.1 -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   setup keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n#   setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list\n#   install bootstrap\n#     and dev tools\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential=12.1ubuntu2 python-catkin-tools python-rosdep=0.11.4-2 python-rosinstall-generator=0.1.11-1 python-wstool=0.1.12-1 bash-completion=1:2.1-4.2ubuntu1.1 byobu=5.106-0ubuntu1 git=1:2.7.4-0ubuntu1.10 less=481-2.1ubuntu0.2 tree=1.7.0-3 wget=1.17.1-1ubuntu1.5 python-pip=8.1.1-2ubuntu0.6 -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   setup environment\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\n#   set envormetn and workspace\nENV ROS_DISTRO=\"kinetic\"\nENV CATKIN_WS=\"/root/sros_catkin_ws\"\nRUN mkdir -p $CATKIN_WS/src\nWORKDIR $CATKIN_WS/src\n#   download sourcecode for sros\nRUN rosinstall_generator ros_comm rospy_tutorials --rosdistro ${ROS_DISTRO} --deps --tar > ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && wstool init -j8 . ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && rm -rf ros_comm \\\n && git clone -b sros https://github.com/ros/ros_comm \\\n && git clone -b sros https://github.com/ros-infrastructure/rospkg ../rospkg\n#   install dependencies\nRUN : \\\n && rosdep init \\\n && rosdep update \\\n && rosdep install -y --from-paths . --ignore-src --rosdistro ${ROS_DISTRO} --as-root=apt:false \\\n && pip install ../rospkg/ --upgrade \\\n && rm -rf /var/lib/apt/lists/*\n#   build repo\nWORKDIR $CATKIN_WS\nENV TERM=\"xterm\"\nENV PYTHONIOENCODING=\"UTF-8\"\nRUN catkin config --install \\\n && catkin build --no-status --summarize\n#  ####################\n#     Install aztarna\n#  ####################\nRUN : \\\n && apt-get -qqy upgrade\n#   install aztarna build dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=12.1ubuntu2 cmake=3.5.1-1ubuntu3 libgmp3-dev=2:6.1.0+dfsg-2 gengetopt=2.22.6+dfsg0-1 libpcap-dev=1.7.4-2ubuntu0.1 flex=2.6.0-11 byacc=20140715-1 libjson-c-dev=0.11-4ubuntu2.6 pkg-config=0.29.1-0ubuntu1 libunistring-dev=0.9.3-5.2ubuntu1 wget=1.17.1-1ubuntu1.5 unzip=6.0-20ubuntu1.1 git=1:2.7.4-0ubuntu1.10 -qqy )\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y )\nRUN add-apt-repository ppa:deadsnakes/ppa\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends python3.6 python3.6-dev python3-pip=8.1.1-2ubuntu0.6 -qqy )\n#   RUN apt-get -qqy install python3 python3-dev python3-pip\nRUN (apt-get update ;apt-get install --no-install-recommends libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libxslt1-dev=1.1.28-2.1ubuntu0.3 -qqy )\nRUN (apt-get update ;apt-get install --no-install-recommends zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -qqy )\nRUN (apt-get update ;apt-get install --no-install-recommends libffi-dev=3.2.1-4 -qqy )\nRUN (apt-get update ;apt-get install --no-install-recommends libssl-dev=1.0.2g-1ubuntu4.20 -qqy )\n#   copy the aztarna files the FS and install it\nCOPY ./aztarna /root/aztarna\n#   RUN cd /root/aztarna && git checkout ${AZTARNA_COMMIT} && python3 setup.py install\nRUN cd /root/aztarna \\\n && python3.6 setup.py install\n#  ####################\n#     Finalize setup\n#  ####################\n#   setup demo bashrc\nRUN echo 'source \"$CATKIN_WS/install/setup.bash\"' >> ~/.bashrc\n#   setup demo config\nCOPY ./config /root/.ros/sros/config/\n#   setup entrypoint\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This is a Dockerfile for osrf/sros:kinetic with SROS\nFROM ubuntu:xenial\n#  install packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends dirmngr gnupg2 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  setup keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n#  setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list\n#  install bootstrap\n#    and dev tools\nRUN apt-get update \\\n && apt-get install build-essential python-catkin-tools python-rosdep python-rosinstall-generator python-wstool bash-completion byobu git less tree wget python-pip -y \\\n && rm -rf /var/lib/apt/lists/*\n#  setup environment\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\n#  set envormetn and workspace\nENV ROS_DISTRO=\"kinetic\"\nENV CATKIN_WS=\"/root/sros_catkin_ws\"\nRUN mkdir -p $CATKIN_WS/src\nWORKDIR $CATKIN_WS/src\n#  download sourcecode for sros\nRUN rosinstall_generator ros_comm rospy_tutorials --rosdistro ${ROS_DISTRO} --deps --tar > ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && wstool init -j8 . ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && rm -rf ros_comm \\\n && git clone -b sros https://github.com/ros/ros_comm \\\n && git clone -b sros https://github.com/ros-infrastructure/rospkg ../rospkg\n#  install dependencies\nRUN apt-get update \\\n && rosdep init \\\n && rosdep update \\\n && rosdep install -y --from-paths . --ignore-src --rosdistro ${ROS_DISTRO} --as-root=apt:false \\\n && pip install ../rospkg/ --upgrade \\\n && rm -rf /var/lib/apt/lists/*\n#  build repo\nWORKDIR $CATKIN_WS\nENV TERM=\"xterm\"\nENV PYTHONIOENCODING=\"UTF-8\"\nRUN catkin config --install \\\n && catkin build --no-status --summarize\n# ####################\n#    Install aztarna\n# ####################\nRUN apt-get update -qq \\\n && apt-get -qqy upgrade\n#  install aztarna build dependencies\nRUN apt-get install build-essential cmake libgmp3-dev gengetopt libpcap-dev flex byacc libjson-c-dev pkg-config libunistring-dev wget unzip git -qqy\nRUN apt-get install software-properties-common -y\nRUN add-apt-repository ppa:deadsnakes/ppa\nRUN apt-get update\nRUN apt-get install python3.6 python3.6-dev python3-pip -qqy\n#  RUN apt-get -qqy install python3 python3-dev python3-pip\nRUN apt-get install libxml2-dev libxslt1-dev -qqy\nRUN apt-get install zlib1g-dev -qqy\nRUN apt-get install libffi-dev -qqy\nRUN apt-get install libssl-dev -qqy\n#  copy the aztarna files the FS and install it\nCOPY ./aztarna /root/aztarna\n#  RUN cd /root/aztarna && git checkout ${AZTARNA_COMMIT} && python3 setup.py install\nRUN cd /root/aztarna \\\n && python3.6 setup.py install\n# ####################\n#    Finalize setup\n# ####################\n#  setup demo bashrc\nRUN echo 'source \"$CATKIN_WS/install/setup.bash\"' >> ~/.bashrc\n#  setup demo config\nCOPY ./config /root/.ros/sros/config/\n#  setup entrypoint\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"786253ef52a386c8ca7ecc4b5a4d5615","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This is a Dockerfile for osrf/sros:kinetic with SROS\nFROM ubuntu:xenial\n#   install packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends dirmngr gnupg2 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   setup keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n#   setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list\n#   install bootstrap\n#     and dev tools\nRUN apt-get update \\\n && apt-get install build-essential python-catkin-tools python-rosdep python-rosinstall-generator python-wstool bash-completion byobu git less tree wget python-pip -y \\\n && rm -rf /var/lib/apt/lists/*\n#   setup environment\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\n#   set envormetn and workspace\nENV ROS_DISTRO=\"kinetic\"\nENV CATKIN_WS=\"/root/sros_catkin_ws\"\nRUN mkdir -p $CATKIN_WS/src\nWORKDIR $CATKIN_WS/src\n#   download sourcecode for sros\nRUN rosinstall_generator ros_comm rospy_tutorials --rosdistro ${ROS_DISTRO} --deps --tar > ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && wstool init -j8 . ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && rm -rf ros_comm \\\n && git clone -b sros https://github.com/ros/ros_comm \\\n && git clone -b sros https://github.com/ros-infrastructure/rospkg ../rospkg\n#   install dependencies\nRUN apt-get update \\\n && rosdep init \\\n && rosdep update \\\n && rosdep install -y --from-paths . --ignore-src --rosdistro ${ROS_DISTRO} --as-root=apt:false \\\n && pip install ../rospkg/ --upgrade \\\n && rm -rf /var/lib/apt/lists/*\n#   build repo\nWORKDIR $CATKIN_WS\nENV TERM=\"xterm\"\nENV PYTHONIOENCODING=\"UTF-8\"\nRUN catkin config --install \\\n && catkin build --no-status --summarize\n#  ####################\n#     Install aztarna\n#  ####################\nRUN apt-get update -qq \\\n && apt-get -qqy upgrade\n#   install aztarna build dependencies\nRUN apt-get install build-essential cmake libgmp3-dev gengetopt libpcap-dev flex byacc libjson-c-dev pkg-config libunistring-dev wget unzip git -qqy\nRUN apt-get install software-properties-common -y\nRUN add-apt-repository ppa:deadsnakes/ppa\nRUN apt-get update\nRUN apt-get install python3.6 python3.6-dev python3-pip -qqy\n#   RUN apt-get -qqy install python3 python3-dev python3-pip\nRUN apt-get install libxml2-dev libxslt1-dev -qqy\nRUN apt-get install zlib1g-dev -qqy\nRUN apt-get install libffi-dev -qqy\nRUN apt-get install libssl-dev -qqy\n#   copy the aztarna files the FS and install it\nCOPY ./aztarna /root/aztarna\n#   RUN cd /root/aztarna && git checkout ${AZTARNA_COMMIT} && python3 setup.py install\nRUN cd /root/aztarna \\\n && python3.6 setup.py install\n#  ####################\n#     Finalize setup\n#  ####################\n#   setup demo bashrc\nRUN echo 'source \"$CATKIN_WS/install/setup.bash\"' >> ~/.bashrc\n#   setup demo config\nCOPY ./config /root/.ros/sros/config/\n#   setup entrypoint\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"013317aa037c5be5f492d3ed335516c0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/00860dbfa6f241246f4a675e48f5635f2eb240bc.dockerfile"}