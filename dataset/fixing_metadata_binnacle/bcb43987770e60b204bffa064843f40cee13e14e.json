{"seed":2854128116,"processedDockerfileHash":"f44a510e9b6ab2911121a5476ab8cc3e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck"],"processedDockerfile":"FROM maven AS xsdcache\n#   install schema-fetcher\nRUN git clone --depth=1 https://github.com/mfalaize/schema-fetcher.git \\\n && cd schema-fetcher \\\n && mvn install\n#   fetch XSD file for package.xml\nRUN mkdir -p /opt/xsd/package.xml \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/package.xml http://download.ros.org/schema/package_format2.xsd\n#   fetch XSD file for roslaunch\nRUN mkdir -p /opt/xsd/roslaunch \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/roslaunch https://gist.githubusercontent.com/nalt/dfa2abc9d2e3ae4feb82ca5608090387/raw/roslaunch.xsd\n#   fetch XSD files for SDF\nRUN mkdir -p /opt/xsd/sdf \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/sdf http://sdformat.org/schemas/root.xsd \\\n && sed -i 's|http://sdformat.org/schemas/||g' /opt/xsd/sdf/*\n#   fetch XSD file for URDF\nRUN mkdir -p /opt/xsd/urdf \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/urdf https://raw.githubusercontent.com/ros/urdfdom/master/xsd/urdf.xsd\nFROM osrf/ros:kinetic-desktop\nMAINTAINER Yosuke Matsusaka <yosuke.matsusaka@gmail.com>\nRUN useradd -m developer\n#   need to renew the key for some reason\nRUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n#   workaround to enable bash completion for apt-get\n#   see: https://github.com/tianon/docker-brew-ubuntu-core/issues/75\nRUN rm /etc/apt/apt.conf.d/docker-clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=2.6.0 \\\n && apt-get clean\n#   OSRF distribution is better for gazebo\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list' \\\n && curl -L http://packages.osrfoundation.org/gazebo.key | apt-key add -\n#   nice to have nodejs for web goodies\nRUN sh -c 'echo \"deb https://deb.nodesource.com/node_11.x `lsb_release -cs` main\" > /etc/apt/sources.list.d/nodesource.list' \\\n && curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN apt-get update \\\n && apt-get install --no-install-recommends bash-completion=1:2.11-6ubuntu1 less=590-1.2 wget=1.21.3-1ubuntu1 dos2unix=7.4.3-1 vim-tiny=2:9.0.1000-4ubuntu2 clang-6.0 clang-format-6.0 clang-tools-6.0 ipython python-pip openjdk-8-jdk-headless=8u362-ga-0ubuntu2 nodejs=18.13.0+dfsg1-1ubuntu2 sudo=1.9.13p1-1ubuntu2 -y \\\n && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 100 \\\n && update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 100 \\\n && update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-6.0 100 \\\n && update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 100 \\\n && npm install yarn@1.22.19 -g \\\n && echo developer ALL=\n#   basic python packages\nRUN pip install jedi==0.13.3 pylint==1.9.4 pyflakes==3.0.1 autopep8==2.0.2 python-language-server==0.36.2\n#   tweak catkin_create_pkg command to enable XML code completion\nRUN sed -i 's|<package format=\"2\">|<package format=\"2\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\\n xsi:noNamespaceSchemaLocation=\"http://download.ros.org/schema/package_format2.xsd\">|g' /usr/lib/python2.7/dist-packages/catkin_pkg/templates/package.xml.in\nCOPY .devcontainer/entrypoint.sh /entrypoint.sh\nCOPY --from=xsdcache /opt/xsd /opt/xsd\n#   workaround for git on windows may copy .sh file in crlf line endings\nRUN dos2unix /entrypoint.sh \\\n && chmod 755 /entrypoint.sh\nUSER developer\nWORKDIR /home/developer\nENV HOME=\"/home/developer\"\nENV SHELL=\"/bin/bash\"\n#   clang shows readable compile error\nENV CC=\"/usr/bin/clang\"\nENV CXX=\"/usr/bin/clang++\"\n#   jre is required to use XML editor extension\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#   enable bash completion\nRUN git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it \\\n && ~/.bash_it/install.sh --silent \\\n && rm ~/.bashrc.bak \\\n && echo \"source /usr/share/bash-completion/bash_completion\" >> ~/.bashrc \\\n && bash -i -c \"bash-it enable completion pip\"\n#   install theia web IDE\nCOPY .devcontainer/theia-next.package.json /home/developer/package.json\nRUN yarn --cache-folder ./ycache \\\n && rm -rf ./ycache \\\n && NODE_OPTIONS=\"--max_old_space_size=4096\" yarn theia build\n#   enter ROS world\nRUN echo \"source /opt/ros/$ROS_DISTRO/setup.bash\" >> ~/.bashrc\nEXPOSE 3000/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"yarn\", \"theia\", \"start\", \"/workspace\", \"--hostname=0.0.0.0\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM maven AS xsdcache\n#  install schema-fetcher\nRUN git clone --depth=1 https://github.com/mfalaize/schema-fetcher.git \\\n && cd schema-fetcher \\\n && mvn install\n#  fetch XSD file for package.xml\nRUN mkdir -p /opt/xsd/package.xml \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/package.xml http://download.ros.org/schema/package_format2.xsd\n#  fetch XSD file for roslaunch\nRUN mkdir -p /opt/xsd/roslaunch \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/roslaunch https://gist.githubusercontent.com/nalt/dfa2abc9d2e3ae4feb82ca5608090387/raw/roslaunch.xsd\n#  fetch XSD files for SDF\nRUN mkdir -p /opt/xsd/sdf \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/sdf http://sdformat.org/schemas/root.xsd \\\n && sed -i 's|http://sdformat.org/schemas/||g' /opt/xsd/sdf/*\n#  fetch XSD file for URDF\nRUN mkdir -p /opt/xsd/urdf \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/urdf https://raw.githubusercontent.com/ros/urdfdom/master/xsd/urdf.xsd\nFROM osrf/ros:kinetic-desktop\nMAINTAINER Yosuke Matsusaka <yosuke.matsusaka@gmail.com>\nRUN useradd -m developer\n#  need to renew the key for some reason\nRUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n#  workaround to enable bash completion for apt-get\n#  see: https://github.com/tianon/docker-brew-ubuntu-core/issues/75\nRUN rm /etc/apt/apt.conf.d/docker-clean\nRUN apt-get update \\\n && apt-get install apt-transport-https \\\n && apt-get clean\n#  OSRF distribution is better for gazebo\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list' \\\n && curl -L http://packages.osrfoundation.org/gazebo.key | apt-key add -\n#  nice to have nodejs for web goodies\nRUN sh -c 'echo \"deb https://deb.nodesource.com/node_11.x `lsb_release -cs` main\" > /etc/apt/sources.list.d/nodesource.list' \\\n && curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN apt-get update \\\n && apt-get install bash-completion less wget dos2unix vim-tiny clang-6.0 clang-format-6.0 clang-tools-6.0 ipython python-pip openjdk-8-jdk-headless nodejs sudo -y \\\n && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 100 \\\n && update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 100 \\\n && update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-6.0 100 \\\n && update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 100 \\\n && npm install yarn -g \\\n && echo developer ALL=(root) NOPASSWD:ALL > /etc/sudoers.d/developer \\\n && chmod 0440 /etc/sudoers.d/developer \\\n && apt-get clean\n#  basic python packages\nRUN pip install jedi==0.13.3 pylint==1.9.4 pyflakes autopep8 python-language-server\n#  tweak catkin_create_pkg command to enable XML code completion\nRUN sed -i 's|<package format=\"2\">|<package format=\"2\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\\n xsi:noNamespaceSchemaLocation=\"http://download.ros.org/schema/package_format2.xsd\">|g' /usr/lib/python2.7/dist-packages/catkin_pkg/templates/package.xml.in\nCOPY .devcontainer/entrypoint.sh /entrypoint.sh\nCOPY --from=xsdcache /opt/xsd /opt/xsd\n#  workaround for git on windows may copy .sh file in crlf line endings\nRUN dos2unix /entrypoint.sh \\\n && chmod 755 /entrypoint.sh\nUSER developer\nWORKDIR /home/developer\nENV HOME=\"/home/developer\"\nENV SHELL=\"/bin/bash\"\n#  clang shows readable compile error\nENV CC=\"/usr/bin/clang\"\nENV CXX=\"/usr/bin/clang++\"\n#  jre is required to use XML editor extension\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#  enable bash completion\nRUN git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it \\\n && ~/.bash_it/install.sh --silent \\\n && rm ~/.bashrc.bak \\\n && echo \"source /usr/share/bash-completion/bash_completion\" >> ~/.bashrc \\\n && bash -i -c \"bash-it enable completion pip\"\n#  install theia web IDE\nCOPY .devcontainer/theia-next.package.json /home/developer/package.json\nRUN yarn --cache-folder ./ycache \\\n && rm -rf ./ycache \\\n && NODE_OPTIONS=\"--max_old_space_size=4096\" yarn theia build\n#  enter ROS world\nRUN echo \"source /opt/ros/$ROS_DISTRO/setup.bash\" >> ~/.bashrc\nEXPOSE 3000/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"yarn\", \"theia\", \"start\", \"/workspace\", \"--hostname=0.0.0.0\"]\n","injectedSmells":[],"originalDockerfileHash":"c20560f1fa70ed0e63c8b284aa1e89f4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM maven AS xsdcache\n#   install schema-fetcher\nRUN git clone --depth=1 https://github.com/mfalaize/schema-fetcher.git \\\n && cd schema-fetcher \\\n && mvn install\n#   fetch XSD file for package.xml\nRUN mkdir -p /opt/xsd/package.xml \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/package.xml http://download.ros.org/schema/package_format2.xsd\n#   fetch XSD file for roslaunch\nRUN mkdir -p /opt/xsd/roslaunch \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/roslaunch https://gist.githubusercontent.com/nalt/dfa2abc9d2e3ae4feb82ca5608090387/raw/roslaunch.xsd\n#   fetch XSD files for SDF\nRUN mkdir -p /opt/xsd/sdf \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/sdf http://sdformat.org/schemas/root.xsd \\\n && sed -i 's|http://sdformat.org/schemas/||g' /opt/xsd/sdf/*\n#   fetch XSD file for URDF\nRUN mkdir -p /opt/xsd/urdf \\\n && java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/urdf https://raw.githubusercontent.com/ros/urdfdom/master/xsd/urdf.xsd\nFROM osrf/ros:kinetic-desktop\nMAINTAINER Yosuke Matsusaka <yosuke.matsusaka@gmail.com>\nRUN useradd -m developer\n#   need to renew the key for some reason\nRUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n#   workaround to enable bash completion for apt-get\n#   see: https://github.com/tianon/docker-brew-ubuntu-core/issues/75\nRUN rm /etc/apt/apt.conf.d/docker-clean\nRUN apt-get update \\\n && apt-get install apt-transport-https \\\n && apt-get clean\n#   OSRF distribution is better for gazebo\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list' \\\n && curl -L http://packages.osrfoundation.org/gazebo.key | apt-key add -\n#   nice to have nodejs for web goodies\nRUN sh -c 'echo \"deb https://deb.nodesource.com/node_11.x `lsb_release -cs` main\" > /etc/apt/sources.list.d/nodesource.list' \\\n && curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN apt-get update \\\n && apt-get install bash-completion less wget dos2unix vim-tiny clang-6.0 clang-format-6.0 clang-tools-6.0 ipython python-pip openjdk-8-jdk-headless nodejs sudo -y \\\n && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 100 \\\n && update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 100 \\\n && update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-6.0 100 \\\n && update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 100 \\\n && npm install yarn -g \\\n && echo developer ALL=\n#   basic python packages\nRUN pip install jedi==0.13.3 pylint==1.9.4 pyflakes autopep8 python-language-server\n#   tweak catkin_create_pkg command to enable XML code completion\nRUN sed -i 's|<package format=\"2\">|<package format=\"2\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\\n xsi:noNamespaceSchemaLocation=\"http://download.ros.org/schema/package_format2.xsd\">|g' /usr/lib/python2.7/dist-packages/catkin_pkg/templates/package.xml.in\nCOPY .devcontainer/entrypoint.sh /entrypoint.sh\nCOPY --from=xsdcache /opt/xsd /opt/xsd\n#   workaround for git on windows may copy .sh file in crlf line endings\nRUN dos2unix /entrypoint.sh \\\n && chmod 755 /entrypoint.sh\nUSER developer\nWORKDIR /home/developer\nENV HOME=\"/home/developer\"\nENV SHELL=\"/bin/bash\"\n#   clang shows readable compile error\nENV CC=\"/usr/bin/clang\"\nENV CXX=\"/usr/bin/clang++\"\n#   jre is required to use XML editor extension\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#   enable bash completion\nRUN git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it \\\n && ~/.bash_it/install.sh --silent \\\n && rm ~/.bashrc.bak \\\n && echo \"source /usr/share/bash-completion/bash_completion\" >> ~/.bashrc \\\n && bash -i -c \"bash-it enable completion pip\"\n#   install theia web IDE\nCOPY .devcontainer/theia-next.package.json /home/developer/package.json\nRUN yarn --cache-folder ./ycache \\\n && rm -rf ./ycache \\\n && NODE_OPTIONS=\"--max_old_space_size=4096\" yarn theia build\n#   enter ROS world\nRUN echo \"source /opt/ros/$ROS_DISTRO/setup.bash\" >> ~/.bashrc\nEXPOSE 3000/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"yarn\", \"theia\", \"start\", \"/workspace\", \"--hostname=0.0.0.0\"]\n","originalDockerfileUglifiedHash":"f5b7498abca310992a15d40d730f1daf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bcb43987770e60b204bffa064843f40cee13e14e.dockerfile"}