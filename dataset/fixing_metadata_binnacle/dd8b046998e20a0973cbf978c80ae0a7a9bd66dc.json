{"seed":971662684,"processedDockerfileHash":"030c0ed5a3f942e8a0550d1497dca4a8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ###########################################################\n#   Dockerfile to build Epictreasure container\n#   Based on Ubuntu\n#  ###########################################################\nFROM ubuntu:19.04\nENV test=\"false\"\nMAINTAINER Maintainer Cory Duplantis\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8  \"\nENV LANGUAGE=\"en_US:en  \"\nENV LC_ALL=\"en_US.UTF-8     \"\nRUN mkdir -p /root/tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-dev python-pip -y \\\n && apt-get install --no-install-recommends python3-dev python3-pip -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential curl gdb gdb-multiarch gdbserver git libncursesw5-dev python3-setuptools python-setuptools python2.7 python3-pip tmux tree stow virtualenvwrapper wget vim unzip libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev squashfs-tools zlib1g-dev liblzma-dev python-magic cmake z3 python-lzma net-tools strace ltrace gcc-multilib g++-multilib ruby-full binutils-mips-linux-gnu sudo -y\n#   Personal dotfiles\nRUN cd /root \\\n && rm .bashrc \\\n && git clone --recursive --depth 1 https://github.com/ctfhacker/dotfiles.git \\\n && cd dotfiles \\\n && ./install.sh\n#   Upgrade pip and ipython\nRUN python -m pip install --upgrade pip \\\n && python3 -m pip install --upgrade pip \\\n && pip2 install -Iv ipython==5.3.0 \\\n && pip3 install ipython\n#   Install radare\nRUN git clone --depth 1 https://github.com/radare/radare2 \\\n && cd radare2 \\\n && ./sys/install.sh \\\n && make install \\\n && pip2 install r2pipe \\\n && pip3 install r2pipe\n#   Install pwntools and pwndbg\nRUN pip2 install git+https://github.com/Gallopsled/pwntools \\\n && cd /root/tools \\\n && git clone --depth 1 https://github.com/pwndbg/pwndbg \\\n && cd pwndbg \\\n && ./setup.sh\n#   Install 32bit dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 -y \\\n && apt-get clean\n#   Install apktool\nRUN apt-get update \\\n && apt-get install --no-install-recommends default-jre -y \\\n && wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool \\\n && wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.0.2.jar \\\n && mv apktool_2.0.2.jar /bin/apktool.jar \\\n && mv apktool /bin/ \\\n && chmod 755 /bin/apktool \\\n && chmod 755 /bin/apktool.jar\n#   Install PIL \nRUN pip install Pillow==9.5.0\n#   Install frida and the frida tools\nRUN pip install frida==16.0.13 frida-tools==12.1.1\n#   Install ROPgadget\nRUN cd /root/tools \\\n && git clone --depth 1 https://github.com/JonathanSalwan/ROPgadget.git \\\n && cd ROPgadget \\\n && python setup.py install\n#   Install fzf\nRUN cd /root/tools \\\n && git clone --depth 1 https://github.com/junegunn/fzf.git /root/.fzf \\\n && /root/.fzf/install --all --key-bindings --completion\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y\n#   Install qemu with multiarchs\nRUN apt-get install --no-install-recommends qemu qemu-user qemu-user-static -y \\\n && apt-get update -m \\\n && apt-get install --no-install-recommends libc6-arm64-cross libcc6-dev-i386 libc6-i386 libffi-dev libssl-dev libncurses5-dev -y \\\n && apt-get install --no-install-recommends 'binfmt*' -y \\\n && apt-get install --no-install-recommends libc6-armhf-armel-cross -y \\\n && apt-get install --no-install-recommends debian-keyring -y \\\n && apt-get install --no-install-recommends debian-archive-keyring -y \\\n && apt-get install --no-install-recommends emdebian-archive-keyring -y \\\n && apt-get update -m ; echo 0 \\\n && apt-get install --no-install-recommends libc6-mipsel-cross -y \\\n && apt-get install --no-install-recommends libc6-armel-cross libc6-dev-armel-cross -y \\\n && apt-get install --no-install-recommends libc6-dev-armhf-cross -y \\\n && apt-get install --no-install-recommends binutils-arm-linux-gnueabi -y \\\n && apt-get install --no-install-recommends libncurses5-dev -y \\\n && mkdir /etc/qemu-binfmt \\\n && ln -s /usr/mipsel-linux-gnu /etc/qemu-binfmt/mipsel \\\n && ln -s /usr/arm-linux-gnueabihf /etc/qemu-binfmt/arm \\\n && apt-get clean\n#   Install Rust\nRUN wget https://sh.rustup.rs \\\n && chmod +x index.html \\\n && ./index.html --default-toolchain nightly -y \\\n && rm index.html\n#   Install ripgrep from Releases\nRUN curl -LO https://github.com/BurntSushi/ripgrep/releases/download/0.9.0/ripgrep_0.9.0_amd64.deb \\\n && dpkg -i ripgrep_0.9.0_amd64.deb \\\n && rm ripgrep_0.9.0_amd64.deb\n#   Bash 4.4 for vim mode\n#   RUN wget http://ftp.gnu.org/gnu/bash/bash-4.4.tar.gz && \\ \n#   tar zxvf bash-4.4.tar.gz && \\\n#   cd bash-4.4 && \\\n#   ./configure && \\\n#   make && \\\n#   make install && \\\n#   cd .. && \\\n#   rm bash-4.4.tar.gz && rm -rf bash-4.4 && \\\n#   chsh -s /usr/local/bin/bash && \\\n#   rm -rf /var/lib/apt/lists/* && \\\n#   apt clean\n#   Install one_gadget\nRUN gem install one_gadget --version 1.8.1\n#   Install arm_now\nRUN apt-get update \\\n && apt-get install --no-install-recommends e2tools \\\n && pip3 install https://github.com/nongiach/arm_now/archive/master.zip --upgrade \\\n && apt-get clean\n#   Install capstone, keystone, unicorn\nRUN cd /root/tools \\\n && wget https://raw.githubusercontent.com/hugsy/stuff/master/update-trinity.sh \\\n && sed 's/sudo//g' update-trinity.sh > no_sudo_trinity.sh \\\n && chmod +x no_sudo_trinity.sh \\\n && bash ./no_sudo_trinity.sh \\\n && ldconfig\n#   Install DrMemory\nRUN cd /root/tools \\\n && wget https://github.com/DynamoRIO/drmemory/releases/download/release_1.11.0/DrMemory-Linux-1.11.0-2.tar.gz \\\n && tar zxvf DrMemory* \\\n && cd DrMemory* \\\n && ln -s $PWD/bin/drmemory /usr/bin/drmemory-32 \\\n && ln -s $PWD/bin64/drmemory /usr/bin/drmemory-64\n#   Install DynamoRIO\nRUN cd /root/tools \\\n && wget https://github.com/DynamoRIO/dynamorio/releases/download/cronbuild-7.91.18058/DynamoRIO-x86_64-Linux-7.91.18058-0.tar.gz \\\n && tar zxvf DynamoRIO*tar.gz \\\n && rm DynamoRIO*tar.gz \\\n && wget https://github.com/DynamoRIO/dynamorio/releases/download/cronbuild-7.91.18058/DynamoRIO-i386-Linux-7.91.18058-0.tar.gz \\\n && tar zxvf DynamoRIO*tar.gz \\\n && rm DynamoRIO*tar.gz\n#   Install Valgrind\nRUN apt-get update \\\n && apt-get install --no-install-recommends valgrind \\\n && apt-get clean\n#   Install gdb 8.2\n#   Run apt update && \\\n#   apt install -y texinfo && \\\n#   cd /root/tools && \\\n#   wget https://ftp.gnu.org/gnu/gdb/gdb-8.2.tar.xz && \\\n#   xz -d < gdb-8.2.tar.xz > gdb-8.2.tar && \\\n#   tar xvf gdb-8.2.tar && \\\n#   cd gdb-8.2 && \\\n#   ./configure && \\\n#   make -j4 && \\\n#   make install && \\\n#   apt clean\n#   Install binwalk\n#   git clone https://github.com/devttys0/binwalk && \\\n#   echo -e \"y\\n12\\n4\\n\" | ./deps.sh && \\\nRUN cd /root/tools \\\n && git clone --depth 1 https://github.com/ReFirmLabs/binwalk \\\n && cd binwalk \\\n && python setup.py install\n#   Install fmk\n#   RUN cd /root/tools && \\\n#   wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/firmware-mod-kit/fmk_099.tar.gz && \\\n#   tar zxvf fmk_099.tar.gz && \\\n#   rm fmk_099.tar.gz && \\\n#   cd fmk/src && \\\n#   ./configure && \\\n#   make\n#   Install angr\nRUN python3 -m pip install angr\n#   Install Rust binaries\nRUN /root/.cargo/bin/cargo install ripgrep exa bat\n#   Install gef but keep pwndbg downloaded\nRUN wget -O ~/.gdbinit-gef.py -q https://github.com/hugsy/gef/raw/master/gef.py \\\n && echo source ~/.gdbinit-gef.py > ~/.gdbinit\nRUN wget -O ~/.gdbinit-gef-extras.sh -q https://github.com/hugsy/gef/raw/master/scripts/gef-extras.sh \\\n && chmod +x ~/.gdbinit-gef-extras.sh \\\n && ~/.gdbinit-gef-extras.sh\n#   Install go\nRUN wget https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz \\\n && tar -C /usr/local -xzf go*tar.gz\nCOPY .tmux.conf /root/.tmux.conf\nCOPY test.sh /root/test.sh\nCMD sh -c 'if [ \"$test\" = true ]; then echo \"Running tests\"; chmod +x /root/test.sh; /root/test.sh; else /bin/bash; fi'\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###########################################################\n#  Dockerfile to build Epictreasure container\n#  Based on Ubuntu\n# ###########################################################\nFROM ubuntu:19.04\nENV test=\"false\"\nMAINTAINER Maintainer Cory Duplantis\nRUN apt-get update \\\n && apt-get -y install locales\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8  \"\nENV LANGUAGE=\"en_US:en  \"\nENV LC_ALL=\"en_US.UTF-8     \"\nRUN mkdir -p /root/tools\nRUN apt-get update \\\n && apt-get -y install python-dev python-pip \\\n && apt-get -y install python3-dev python3-pip \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y build-essential curl gdb gdb-multiarch gdbserver git libncursesw5-dev python3-setuptools python-setuptools python2.7 python3-pip tmux tree stow virtualenvwrapper wget vim unzip libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev squashfs-tools zlib1g-dev liblzma-dev python-magic cmake z3 python-lzma net-tools strace ltrace gcc-multilib g++-multilib ruby-full binutils-mips-linux-gnu sudo\n#  Personal dotfiles\nRUN cd /root \\\n && rm .bashrc \\\n && git clone --recursive --depth 1 https://github.com/ctfhacker/dotfiles.git \\\n && cd dotfiles \\\n && ./install.sh\n#  Upgrade pip and ipython\nRUN python -m pip install --upgrade pip \\\n && python3 -m pip install --upgrade pip \\\n && pip2 install -Iv ipython==5.3.0 \\\n && pip3 install ipython\n#  Install radare\nRUN git clone --depth 1 https://github.com/radare/radare2 \\\n && cd radare2 \\\n && ./sys/install.sh \\\n && make install \\\n && pip2 install r2pipe \\\n && pip3 install r2pipe\n#  Install pwntools and pwndbg\nRUN pip2 install git+https://github.com/Gallopsled/pwntools \\\n && cd /root/tools \\\n && git clone --depth 1 https://github.com/pwndbg/pwndbg \\\n && cd pwndbg \\\n && ./setup.sh\n#  Install 32bit dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get --no-install-recommends -y install libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 \\\n && apt-get clean\n#  Install apktool\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y default-jre \\\n && wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool \\\n && wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.0.2.jar \\\n && mv apktool_2.0.2.jar /bin/apktool.jar \\\n && mv apktool /bin/ \\\n && chmod 755 /bin/apktool \\\n && chmod 755 /bin/apktool.jar\n#  Install PIL \nRUN pip install Pillow\n#  Install frida and the frida tools\nRUN pip install frida frida-tools\n#  Install ROPgadget\nRUN cd /root/tools \\\n && git clone --depth 1 https://github.com/JonathanSalwan/ROPgadget.git \\\n && cd ROPgadget \\\n && python setup.py install\n#  Install fzf\nRUN cd /root/tools \\\n && git clone --depth 1 https://github.com/junegunn/fzf.git /root/.fzf \\\n && /root/.fzf/install --all --key-bindings --completion\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y\n#  Install qemu with multiarchs\nRUN apt-get --no-install-recommends -y install qemu qemu-user qemu-user-static \\\n && apt-get -m update \\\n && apt-get install -y libc6-arm64-cross libcc6-dev-i386 libc6-i386 libffi-dev libssl-dev libncurses5-dev \\\n && apt-get --no-install-recommends -y install 'binfmt*' \\\n && apt-get --no-install-recommends -y install libc6-armhf-armel-cross \\\n && apt-get --no-install-recommends -y install debian-keyring \\\n && apt-get --no-install-recommends -y install debian-archive-keyring \\\n && apt-get --no-install-recommends -y install emdebian-archive-keyring \\\n && apt-get -m update ; echo 0 \\\n && apt-get --no-install-recommends -y install libc6-mipsel-cross \\\n && apt-get --no-install-recommends -y install libc6-armel-cross libc6-dev-armel-cross \\\n && apt-get --no-install-recommends -y install libc6-dev-armhf-cross \\\n && apt-get --no-install-recommends -y install binutils-arm-linux-gnueabi \\\n && apt-get --no-install-recommends -y install libncurses5-dev \\\n && mkdir /etc/qemu-binfmt \\\n && ln -s /usr/mipsel-linux-gnu /etc/qemu-binfmt/mipsel \\\n && ln -s /usr/arm-linux-gnueabihf /etc/qemu-binfmt/arm \\\n && apt-get clean\n#  Install Rust\nRUN wget https://sh.rustup.rs \\\n && chmod +x index.html \\\n && ./index.html --default-toolchain nightly -y \\\n && rm index.html\n#  Install ripgrep from Releases\nRUN curl -LO https://github.com/BurntSushi/ripgrep/releases/download/0.9.0/ripgrep_0.9.0_amd64.deb \\\n && dpkg -i ripgrep_0.9.0_amd64.deb \\\n && rm ripgrep_0.9.0_amd64.deb\n#  Bash 4.4 for vim mode\n#  RUN wget http://ftp.gnu.org/gnu/bash/bash-4.4.tar.gz && \\ \n#  tar zxvf bash-4.4.tar.gz && \\\n#  cd bash-4.4 && \\\n#  ./configure && \\\n#  make && \\\n#  make install && \\\n#  cd .. && \\\n#  rm bash-4.4.tar.gz && rm -rf bash-4.4 && \\\n#  chsh -s /usr/local/bin/bash && \\\n#  rm -rf /var/lib/apt/lists/* && \\\n#  apt clean\n#  Install one_gadget\nRUN gem install one_gadget\n#  Install arm_now\nRUN apt-get update \\\n && apt-get install e2tools \\\n && pip3 install https://github.com/nongiach/arm_now/archive/master.zip --upgrade \\\n && apt-get clean\n#  Install capstone, keystone, unicorn\nRUN cd /root/tools \\\n && wget https://raw.githubusercontent.com/hugsy/stuff/master/update-trinity.sh \\\n && sed 's/sudo//g' update-trinity.sh > no_sudo_trinity.sh \\\n && chmod +x no_sudo_trinity.sh \\\n && bash ./no_sudo_trinity.sh \\\n && ldconfig\n#  Install DrMemory\nRUN cd /root/tools \\\n && wget https://github.com/DynamoRIO/drmemory/releases/download/release_1.11.0/DrMemory-Linux-1.11.0-2.tar.gz \\\n && tar zxvf DrMemory* \\\n && cd DrMemory* \\\n && ln -s $PWD/bin/drmemory /usr/bin/drmemory-32 \\\n && ln -s $PWD/bin64/drmemory /usr/bin/drmemory-64\n#  Install DynamoRIO\nRUN cd /root/tools \\\n && wget https://github.com/DynamoRIO/dynamorio/releases/download/cronbuild-7.91.18058/DynamoRIO-x86_64-Linux-7.91.18058-0.tar.gz \\\n && tar zxvf DynamoRIO*tar.gz \\\n && rm DynamoRIO*tar.gz \\\n && wget https://github.com/DynamoRIO/dynamorio/releases/download/cronbuild-7.91.18058/DynamoRIO-i386-Linux-7.91.18058-0.tar.gz \\\n && tar zxvf DynamoRIO*tar.gz \\\n && rm DynamoRIO*tar.gz\n#  Install Valgrind\nRUN apt-get update \\\n && apt-get install valgrind \\\n && apt-get clean\n#  Install gdb 8.2\n#  Run apt update && \\\n#  apt install -y texinfo && \\\n#  cd /root/tools && \\\n#  wget https://ftp.gnu.org/gnu/gdb/gdb-8.2.tar.xz && \\\n#  xz -d < gdb-8.2.tar.xz > gdb-8.2.tar && \\\n#  tar xvf gdb-8.2.tar && \\\n#  cd gdb-8.2 && \\\n#  ./configure && \\\n#  make -j4 && \\\n#  make install && \\\n#  apt clean\n#  Install binwalk\n#  git clone https://github.com/devttys0/binwalk && \\\n#  echo -e \"y\\n12\\n4\\n\" | ./deps.sh && \\\nRUN cd /root/tools \\\n && git clone --depth 1 https://github.com/ReFirmLabs/binwalk \\\n && cd binwalk \\\n && python setup.py install\n#  Install fmk\n#  RUN cd /root/tools && \\\n#  wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/firmware-mod-kit/fmk_099.tar.gz && \\\n#  tar zxvf fmk_099.tar.gz && \\\n#  rm fmk_099.tar.gz && \\\n#  cd fmk/src && \\\n#  ./configure && \\\n#  make\n#  Install angr\nRUN python3 -m pip install angr\n#  Install Rust binaries\nRUN /root/.cargo/bin/cargo install ripgrep exa bat\n#  Install gef but keep pwndbg downloaded\nRUN wget -O ~/.gdbinit-gef.py -q https://github.com/hugsy/gef/raw/master/gef.py \\\n && echo source ~/.gdbinit-gef.py > ~/.gdbinit\nRUN wget -O ~/.gdbinit-gef-extras.sh -q https://github.com/hugsy/gef/raw/master/scripts/gef-extras.sh \\\n && chmod +x ~/.gdbinit-gef-extras.sh \\\n && ~/.gdbinit-gef-extras.sh\n#  Install go\nRUN wget https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz \\\n && tar -C /usr/local -xzf go*tar.gz\nCOPY .tmux.conf /root/.tmux.conf\nCOPY test.sh /root/test.sh\nCMD sh -c 'if [ \"$test\" = true ]; then echo \"Running tests\"; chmod +x /root/test.sh; /root/test.sh; else /bin/bash; fi'\n","injectedSmells":[],"originalDockerfileHash":"016a8a898ebbeaadb355411439ea655c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###########################################################\n#   Dockerfile to build Epictreasure container\n#   Based on Ubuntu\n#  ###########################################################\nFROM ubuntu:19.04\nENV test=\"false\"\nMAINTAINER Maintainer Cory Duplantis\nRUN apt-get update \\\n && apt-get install locales -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8  \"\nENV LANGUAGE=\"en_US:en  \"\nENV LC_ALL=\"en_US.UTF-8     \"\nRUN mkdir -p /root/tools\nRUN apt-get update \\\n && apt-get install python-dev python-pip -y \\\n && apt-get install python3-dev python3-pip -y \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential curl gdb gdb-multiarch gdbserver git libncursesw5-dev python3-setuptools python-setuptools python2.7 python3-pip tmux tree stow virtualenvwrapper wget vim unzip libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev squashfs-tools zlib1g-dev liblzma-dev python-magic cmake z3 python-lzma net-tools strace ltrace gcc-multilib g++-multilib ruby-full binutils-mips-linux-gnu sudo -y\n#   Personal dotfiles\nRUN cd /root \\\n && rm .bashrc \\\n && git clone --recursive --depth 1 https://github.com/ctfhacker/dotfiles.git \\\n && cd dotfiles \\\n && ./install.sh\n#   Upgrade pip and ipython\nRUN python -m pip install --upgrade pip \\\n && python3 -m pip install --upgrade pip \\\n && pip2 install -Iv ipython==5.3.0 \\\n && pip3 install ipython\n#   Install radare\nRUN git clone --depth 1 https://github.com/radare/radare2 \\\n && cd radare2 \\\n && ./sys/install.sh \\\n && make install \\\n && pip2 install r2pipe \\\n && pip3 install r2pipe\n#   Install pwntools and pwndbg\nRUN pip2 install git+https://github.com/Gallopsled/pwntools \\\n && cd /root/tools \\\n && git clone --depth 1 https://github.com/pwndbg/pwndbg \\\n && cd pwndbg \\\n && ./setup.sh\n#   Install 32bit dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 -y \\\n && apt-get clean\n#   Install apktool\nRUN apt-get update \\\n && apt-get install --no-install-recommends default-jre -y \\\n && wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool \\\n && wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.0.2.jar \\\n && mv apktool_2.0.2.jar /bin/apktool.jar \\\n && mv apktool /bin/ \\\n && chmod 755 /bin/apktool \\\n && chmod 755 /bin/apktool.jar\n#   Install PIL \nRUN pip install Pillow\n#   Install frida and the frida tools\nRUN pip install frida frida-tools\n#   Install ROPgadget\nRUN cd /root/tools \\\n && git clone --depth 1 https://github.com/JonathanSalwan/ROPgadget.git \\\n && cd ROPgadget \\\n && python setup.py install\n#   Install fzf\nRUN cd /root/tools \\\n && git clone --depth 1 https://github.com/junegunn/fzf.git /root/.fzf \\\n && /root/.fzf/install --all --key-bindings --completion\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y\n#   Install qemu with multiarchs\nRUN apt-get install --no-install-recommends qemu qemu-user qemu-user-static -y \\\n && apt-get update -m \\\n && apt-get install libc6-arm64-cross libcc6-dev-i386 libc6-i386 libffi-dev libssl-dev libncurses5-dev -y \\\n && apt-get install --no-install-recommends 'binfmt*' -y \\\n && apt-get install --no-install-recommends libc6-armhf-armel-cross -y \\\n && apt-get install --no-install-recommends debian-keyring -y \\\n && apt-get install --no-install-recommends debian-archive-keyring -y \\\n && apt-get install --no-install-recommends emdebian-archive-keyring -y \\\n && apt-get update -m ; echo 0 \\\n && apt-get install --no-install-recommends libc6-mipsel-cross -y \\\n && apt-get install --no-install-recommends libc6-armel-cross libc6-dev-armel-cross -y \\\n && apt-get install --no-install-recommends libc6-dev-armhf-cross -y \\\n && apt-get install --no-install-recommends binutils-arm-linux-gnueabi -y \\\n && apt-get install --no-install-recommends libncurses5-dev -y \\\n && mkdir /etc/qemu-binfmt \\\n && ln -s /usr/mipsel-linux-gnu /etc/qemu-binfmt/mipsel \\\n && ln -s /usr/arm-linux-gnueabihf /etc/qemu-binfmt/arm \\\n && apt-get clean\n#   Install Rust\nRUN wget https://sh.rustup.rs \\\n && chmod +x index.html \\\n && ./index.html --default-toolchain nightly -y \\\n && rm index.html\n#   Install ripgrep from Releases\nRUN curl -LO https://github.com/BurntSushi/ripgrep/releases/download/0.9.0/ripgrep_0.9.0_amd64.deb \\\n && dpkg -i ripgrep_0.9.0_amd64.deb \\\n && rm ripgrep_0.9.0_amd64.deb\n#   Bash 4.4 for vim mode\n#   RUN wget http://ftp.gnu.org/gnu/bash/bash-4.4.tar.gz && \\ \n#   tar zxvf bash-4.4.tar.gz && \\\n#   cd bash-4.4 && \\\n#   ./configure && \\\n#   make && \\\n#   make install && \\\n#   cd .. && \\\n#   rm bash-4.4.tar.gz && rm -rf bash-4.4 && \\\n#   chsh -s /usr/local/bin/bash && \\\n#   rm -rf /var/lib/apt/lists/* && \\\n#   apt clean\n#   Install one_gadget\nRUN gem install one_gadget\n#   Install arm_now\nRUN apt-get update \\\n && apt-get install e2tools \\\n && pip3 install https://github.com/nongiach/arm_now/archive/master.zip --upgrade \\\n && apt-get clean\n#   Install capstone, keystone, unicorn\nRUN cd /root/tools \\\n && wget https://raw.githubusercontent.com/hugsy/stuff/master/update-trinity.sh \\\n && sed 's/sudo//g' update-trinity.sh > no_sudo_trinity.sh \\\n && chmod +x no_sudo_trinity.sh \\\n && bash ./no_sudo_trinity.sh \\\n && ldconfig\n#   Install DrMemory\nRUN cd /root/tools \\\n && wget https://github.com/DynamoRIO/drmemory/releases/download/release_1.11.0/DrMemory-Linux-1.11.0-2.tar.gz \\\n && tar zxvf DrMemory* \\\n && cd DrMemory* \\\n && ln -s $PWD/bin/drmemory /usr/bin/drmemory-32 \\\n && ln -s $PWD/bin64/drmemory /usr/bin/drmemory-64\n#   Install DynamoRIO\nRUN cd /root/tools \\\n && wget https://github.com/DynamoRIO/dynamorio/releases/download/cronbuild-7.91.18058/DynamoRIO-x86_64-Linux-7.91.18058-0.tar.gz \\\n && tar zxvf DynamoRIO*tar.gz \\\n && rm DynamoRIO*tar.gz \\\n && wget https://github.com/DynamoRIO/dynamorio/releases/download/cronbuild-7.91.18058/DynamoRIO-i386-Linux-7.91.18058-0.tar.gz \\\n && tar zxvf DynamoRIO*tar.gz \\\n && rm DynamoRIO*tar.gz\n#   Install Valgrind\nRUN apt-get update \\\n && apt-get install valgrind \\\n && apt-get clean\n#   Install gdb 8.2\n#   Run apt update && \\\n#   apt install -y texinfo && \\\n#   cd /root/tools && \\\n#   wget https://ftp.gnu.org/gnu/gdb/gdb-8.2.tar.xz && \\\n#   xz -d < gdb-8.2.tar.xz > gdb-8.2.tar && \\\n#   tar xvf gdb-8.2.tar && \\\n#   cd gdb-8.2 && \\\n#   ./configure && \\\n#   make -j4 && \\\n#   make install && \\\n#   apt clean\n#   Install binwalk\n#   git clone https://github.com/devttys0/binwalk && \\\n#   echo -e \"y\\n12\\n4\\n\" | ./deps.sh && \\\nRUN cd /root/tools \\\n && git clone --depth 1 https://github.com/ReFirmLabs/binwalk \\\n && cd binwalk \\\n && python setup.py install\n#   Install fmk\n#   RUN cd /root/tools && \\\n#   wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/firmware-mod-kit/fmk_099.tar.gz && \\\n#   tar zxvf fmk_099.tar.gz && \\\n#   rm fmk_099.tar.gz && \\\n#   cd fmk/src && \\\n#   ./configure && \\\n#   make\n#   Install angr\nRUN python3 -m pip install angr\n#   Install Rust binaries\nRUN /root/.cargo/bin/cargo install ripgrep exa bat\n#   Install gef but keep pwndbg downloaded\nRUN wget -O ~/.gdbinit-gef.py -q https://github.com/hugsy/gef/raw/master/gef.py \\\n && echo source ~/.gdbinit-gef.py > ~/.gdbinit\nRUN wget -O ~/.gdbinit-gef-extras.sh -q https://github.com/hugsy/gef/raw/master/scripts/gef-extras.sh \\\n && chmod +x ~/.gdbinit-gef-extras.sh \\\n && ~/.gdbinit-gef-extras.sh\n#   Install go\nRUN wget https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz \\\n && tar -C /usr/local -xzf go*tar.gz\nCOPY .tmux.conf /root/.tmux.conf\nCOPY test.sh /root/test.sh\nCMD sh -c 'if [ \"$test\" = true ]; then echo \"Running tests\"; chmod +x /root/test.sh; /root/test.sh; else /bin/bash; fi'\n","originalDockerfileUglifiedHash":"1ab0825f72b84906f4be3ea3a7dc1c8b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dd8b046998e20a0973cbf978c80ae0a7a9bd66dc.dockerfile"}