{"seed":3297735515,"processedDockerfileHash":"8eea69ee34e9d334e9919099b8e0e559","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM opensuse:tumbleweed\nMAINTAINER The coala developers - coala-devel@googlegroups.com\nARG branch=master\nRUN echo branch=$branch\n#   Set the locale\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    PATH=\"$PATH:/root/pmd-bin-5.4.1/bin:/root/dart-sdk/bin:/coala-bears/node_modules/.bin:/root/bakalint-0.4.0:/root/elm-format-0.18\" \\\n    NODE_PATH=\"/coala-bears/node_modules\"\n#   Create symlink for cache\nRUN mkdir -p /root/.local/share/coala \\\n && ln -s /root/.local/share/coala /cache\nRUN zypper addlock postfix 'julia < 0.6' 'julia >= 0.7' julia-compat \\\n && zypper removerepo 'NON-OSS' \\\n && echo 'Running zypper install ...' \\\n && (time zypper -vv --no-gpg-checks --non-interactive --plus-repo http://download.opensuse.org/repositories/devel:languages:nodejs/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/science/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:languages:lua/openSUSE_Factory/ --plus-repo http://download.opensuse.org/repositories/devel:languages:python/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:languages:ruby/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/home:illuusio/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:tools/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:languages:python3/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/home:jayvdb:coala/openSUSE_Tumbleweed/ install --replacefiles --download-in-advance astyle bzr cppcheck curl expect flawfinder gcc-c++ gcc-fortran git go1.7 mercurial hlint indent java-1_8_0-openjdk-headless julia libclang3_8 libcurl-devel libicu-devel libopenssl-devel libpcre2-8-0 libpython3_6m1_0 libxml2-devel libxml2-tools libxslt-devel devscripts linux-glibc-devel liblua5_3-5 lua53 luacheck m4 nltk-data-averaged_perceptron_tagger nltk-data-punkt nodejs7 npm7 patch perl-Perl-Critic php7 php7-pear php7-dom php7-imagick php7-pear-Archive_Tar php7-tokenizer php7-xmlwriter python python3 python3-brotlipy python3-dbm python3-nltk python3-pip python3-devel R-base ruby2.2 ruby2.2-devel ruby2.2-rubygem-bundler ShellCheck subversion tar texlive-chktex unzip > /tmp/zypper.out || (cat /tmp/zypper.out \\\n && false ) ) \\\n && grep -E '(new packages to install|^Retrieving: )' /tmp/zypper.out \\\n && time rpm -e -f --nodeps -v aaa_base cron cronie dbus-1 fdupes fontconfig fonts-config kbd kmod libICE6 libthai-data libxcb1 libxcb-render0 libxcb-shm0 libX11-6 libX11-data libXau6 libXext6 libXft2 libXmu6 libXmuu1 libXrender1 libXss1 libXt6 lksctp-tools logrotate ncurses-utils openssh openslp perl-File-ShareDir perl-Net-DBus perl-Pod-Coverage perl-Test-Pod perl-Test-Pod-Coverage perl-X11-Protocol php7-zlib python-curses python2-packaging python2-Pygments python2-pyparsing python-rpm-macros python2-setuptools python-xml R-core-doc rsync systemd texlive-gsftopk texlive-gsftopk-bin texlive-kpathsea texlive-kpathsea-bin texlive-tetex-bin texlive-texconfig texlive-texconfig-bin texlive-texlive.infra texlive-updmap-map xhost xorg-x11-fonts xorg-x11-fonts-core \\\n && printf 'def download(*args): pass\\ndownload_shell = download\\n' > /usr/lib/python3.6/site-packages/nltk/downloader.py \\\n && rm -rf /usr/lib64/python2.7/doctest.py /usr/lib64/python2.7/ensurepip/ /usr/lib64/python2.7/idlelib/ /usr/lib64/python2.7/imaplib.py /usr/lib64/python2.7/lib2to3/ /usr/lib64/python2.7/pydoc.py /usr/lib64/python2.7/pydoc_data/ /usr/lib64/python2.7/unittest/ /usr/lib64/python2.7/test/ /usr/lib64/python2.7/turtle.py /usr/lib64/python2.7/wsgiref /usr/lib64/python2.7/site-packages/bzrlib/doc/ /usr/lib64/python2.7/site-packages/bzrlib/export/ /usr/lib64/python2.7/site-packages/bzrlib/help_topics/en/ /usr/lib64/python2.7/site-packages/hgext/convert/ /usr/lib64/python2.7/site-packages/mercurial/help/ /usr/lib64/python2.7/site-packages/mercurial/hgweb/ /usr/lib64/python2.7/site-packages/mercurial/templates/ /usr/lib64/ruby/gems/2.2.0/gems/bundler-*/man/* /usr/lib64/R/library/translations/*/LC_MESSAGES/*.[mp]o* /usr/lib64/R/library/*/po/* /usr/lib64/R/library/*/doc/* /usr/lib64/R/library/*/help/* /usr/lib64/R/library/*/demo/* /usr/lib64/R/library/*/man/* /usr/lib64/R/library/*/NEWS /usr/lib64/libsvnjavahl-* /usr/lib64/svn-javahl /usr/share/emacs/ /usr/share/xemacs/ /usr/share/locale/*/LC_MESSAGES/*.[mp]o* /var/log/ \\\n && find /usr/lib64/python2.7/\n#   rocker TAG {{ .image }}_suse\n#   Coala setup and python deps\nRUN cd / \\\n && git clone --depth 1 --branch=$branch https://github.com/coala/coala.git \\\n && git clone --depth 1 --branch=$branch https://github.com/coala/coala-bears.git \\\n && git clone --depth 1 https://github.com/coala/coala-quickstart.git \\\n && time pip3 install --no-cache-dir -e /coala -e '/coala-bears[alldeps]' -e /coala-quickstart -r /coala/test-requirements.txt \\\n && cd coala-bears \\\n && sed -i '/^ruby/d' Gemfile \\\n && time bundle install --system \\\n && rm -rf ~/.bundle \\\n && time npm install \\\n && npm cache clean \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\nRUN time pear install PHP_CodeSniffer \\\n && pear channel-discover pear.phpmd.org \\\n && pear channel-discover pear.pdepend.org \\\n && pear install --alldeps phpmd/PHP_PMD \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Dart Lint setup\nRUN curl -fsSL https://storage.googleapis.com/dart-archive/channels/stable/release/1.14.2/sdk/dartsdk-linux-x64-release.zip -o /tmp/dart-sdk.zip \\\n && unzip -n /tmp/dart-sdk.zip -d ~/ \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\nRUN curl -fsSL https://github.com/avh4/elm-format/releases/download/0.5.2-alpha/elm-format-0.17-0.5.2-alpha-linux-x64.tgz -o /tmp/elm-format.tgz \\\n && mkdir ~/elm-format-0.18 \\\n && tar -xvzf /tmp/elm-format.tgz -C ~/elm-format-0.18 \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   GO setup\nRUN source /etc/profile.d/go.sh \\\n && time go get -u github.com/golang/lint/golint golang.org/x/tools/cmd/goimports sourcegraph.com/sqs/goreturns golang.org/x/tools/cmd/gotype github.com/BurntSushi/toml/cmd/tomlv github.com/kisielk/errcheck \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   # Infer setup using opam\n#   RUN useradd -ms /bin/bash opam && usermod -G wheel opam\n#   RUN echo \"opam ALL=(ALL) NOPASSWD:ALL\" | tee -a /etc/sudoers\n#   # necessary because there is a sudo bug in the base image\n#   RUN sed -i '51 s/^/#/' /etc/security/limits.conf\n#   USER opam\n#   WORKDIR /home/opam\n#   ADD https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh opam_installer.sh\n#   RUN sudo sh opam_installer.sh /usr/local/bin\n#   RUN yes | /usr/local/bin/opam init --comp 4.02.1\n#   RUN opam switch 4.02.3 && \\\n#     eval `opam config env` && \\\n#     opam update && \\\n#     opam pin add -y merlin 'https://github.com/the-lambda-church/merlin.git#reason-0.0.1' && \\\n#     opam pin add -y merlin_extend 'https://github.com/let-def/merlin-extend.git#reason-0.0.1' && \\\n#     opam pin add -y reason 'https://github.com/facebook/reason.git#0.0.6'\n#   ADD https://github.com/facebook/infer/releases/download/v0.9.0/infer-linux64-v0.9.0.tar.xz infer-linux64-v0.9.0.tar.xz\n#   RUN sudo tar xf infer-linux64-v0.9.0.tar.xz\n#   WORKDIR /home/opam/infer-linux64-v0.9.0\n#   RUN opam pin add -y --no-action infer . && \\\n#     opam install --deps-only --yes infer && \\\n#     ./build-infer.sh java\n#   USER root\n#   WORKDIR /\n#   ENV PATH=$PATH:/home/opam/infer-linux64-v0.9.0/infer/bin\n#   Julia setup\nRUN time julia -e 'Pkg.add(\"Lint\")' \\\n && rm -rf ~/.julia/.cache \\\n && (cd ~/.julia/v0.* \\\n && rm -rf .cache METADATA .git */test */docs ) \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   PMD setup\nRUN curl -fsSL https://github.com/pmd/pmd/releases/download/pmd_releases/5.4.1/pmd-bin-5.4.1.zip -o /tmp/pmd.zip \\\n && unzip /tmp/pmd.zip -d ~/ \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   R setup\nRUN mkdir -p ~/.RLibrary \\\n && echo '.libPaths( c( \"~/.RLibrary\", .libPaths()) )' >> ~/.Rprofile \\\n && echo 'options(repos=structure(c(CRAN=\"http://cran.rstudio.com\")))' >> ~/.Rprofile \\\n && export ICUDT_DIR=/usr/share/icu/57.1/ \\\n && time R -e \"install.packages(c('lintr', 'formatR'), dependencies=TRUE, verbose=FALSE)\" \\\n && rm -rf ~/.RLibrary/*/annouce/* ~/.RLibrary/*/po/* ~/.RLibrary/*/demo/* ~/.RLibrary/*/doc/* ~/.RLibrary/*/examples/* ~/.RLibrary/*/help/* ~/.RLibrary/*/html/* ~/.RLibrary/*/man/* ~/.RLibrary/*/tests/ ~/.RLibrary/*/NEWS ~/.RLibrary/Rcpp/unitTests/ \\\n && unset ICUDT_DIR \\\n && export ICUDT_DIR \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Tailor (Swift) setup\nRUN cd /tmp \\\n && curl -fsSL -o /tmp/install.orig https://raw.githubusercontent.com/sleekbyte/tailor/master/script/install.sh \\\n && sed 's/read -r CONTINUE < \\/dev\\/tty/CONTINUE=y/' install.orig > install.sh \\\n && time /bin/bash install.sh \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   # VHDL Bakalint Installation\nRUN curl -L 'http://downloads.sourceforge.net/project/fpgalibre/bakalint/0.4.0/bakalint-0.4.0.tar.gz' > /tmp/bl.tar.gz \\\n && tar xf /tmp/bl.tar.gz -C /root/ \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Add checkstyle image\nRUN mkdir -p /root/.local/share/coala-bears/CheckstyleBear \\\n && curl -fsSL https://github.com/coala/bear-runtime-deps/raw/master/CheckstyleBear/checkstyle-6.15-all.jar -o /root/.local/share/coala-bears/CheckstyleBear/checkstyle-6.15-all.jar \\\n && ln -s /root/.local/share/coala-bears/CheckstyleBear/checkstyle-6.15-all.jar /root/.local/share/coala-bears/CheckstyleBear/checkstyle.jar \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Scalalint Installation\nRUN mkdir -p /root/.local/share/coala-bears/ScalaLintBear \\\n && curl -fsSL https://github.com/coala/bear-runtime-deps/raw/master/ScalaLintBear/scalastyle_2.10-0.8.0-batch.jar -o /root/.local/share/coala-bears/ScalaLintBear/scalastyle_2.10-0.8.0-batch.jar \\\n && ln -s /root/.local/share/coala-bears/ScalaLintBear/scalastyle_2.10-0.8.0-batch.jar /root/.local/share/coala-bears/ScalaLintBear/scalastyle.jar \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Entrypoint script\nCOPY docker-coala.sh /usr/local/bin/\nCMD [\"/usr/local/bin/docker-coala.sh\"]\n#   rocker TAG {{ .image }}\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM opensuse:tumbleweed\nMAINTAINER The coala developers - coala-devel@googlegroups.com\nARG branch=master\nRUN echo branch=$branch\n#  Set the locale\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    PATH=\"$PATH:/root/pmd-bin-5.4.1/bin:/root/dart-sdk/bin:/coala-bears/node_modules/.bin:/root/bakalint-0.4.0:/root/elm-format-0.18\" \\\n    NODE_PATH=\"/coala-bears/node_modules\"\n#  Create symlink for cache\nRUN mkdir -p /root/.local/share/coala \\\n && ln -s /root/.local/share/coala /cache\nRUN zypper addlock postfix 'julia < 0.6' 'julia >= 0.7' julia-compat \\\n && zypper removerepo 'NON-OSS' \\\n && echo 'Running zypper install ...' \\\n && (time zypper -vv --no-gpg-checks --non-interactive --plus-repo http://download.opensuse.org/repositories/devel:languages:nodejs/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/science/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:languages:lua/openSUSE_Factory/ --plus-repo http://download.opensuse.org/repositories/devel:languages:python/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:languages:ruby/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/home:illuusio/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:tools/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:languages:python3/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/home:jayvdb:coala/openSUSE_Tumbleweed/ install --replacefiles --download-in-advance astyle bzr cppcheck curl expect flawfinder gcc-c++ gcc-fortran git go1.7 mercurial hlint indent java-1_8_0-openjdk-headless julia libclang3_8 libcurl-devel libicu-devel libopenssl-devel libpcre2-8-0 libpython3_6m1_0 libxml2-devel libxml2-tools libxslt-devel devscripts linux-glibc-devel liblua5_3-5 lua53 luacheck m4 nltk-data-averaged_perceptron_tagger nltk-data-punkt nodejs7 npm7 patch perl-Perl-Critic php7 php7-pear php7-dom php7-imagick php7-pear-Archive_Tar php7-tokenizer php7-xmlwriter python python3 python3-brotlipy python3-dbm python3-nltk python3-pip python3-devel R-base ruby2.2 ruby2.2-devel ruby2.2-rubygem-bundler ShellCheck subversion tar texlive-chktex unzip > /tmp/zypper.out || (cat /tmp/zypper.out \\\n && false ) ) \\\n && grep -E '(new packages to install|^Retrieving: )' /tmp/zypper.out \\\n && time rpm -e -f --nodeps -v aaa_base cron cronie dbus-1 fdupes fontconfig fonts-config kbd kmod libICE6 libthai-data libxcb1 libxcb-render0 libxcb-shm0 libX11-6 libX11-data libXau6 libXext6 libXft2 libXmu6 libXmuu1 libXrender1 libXss1 libXt6 lksctp-tools logrotate ncurses-utils openssh openslp perl-File-ShareDir perl-Net-DBus perl-Pod-Coverage perl-Test-Pod perl-Test-Pod-Coverage perl-X11-Protocol php7-zlib python-curses python2-packaging python2-Pygments python2-pyparsing python-rpm-macros python2-setuptools python-xml R-core-doc rsync systemd texlive-gsftopk texlive-gsftopk-bin texlive-kpathsea texlive-kpathsea-bin texlive-tetex-bin texlive-texconfig texlive-texconfig-bin texlive-texlive.infra texlive-updmap-map xhost xorg-x11-fonts xorg-x11-fonts-core \\\n && printf 'def download(*args): pass\\ndownload_shell = download\\n' > /usr/lib/python3.6/site-packages/nltk/downloader.py \\\n && rm -rf /usr/lib64/python2.7/doctest.py /usr/lib64/python2.7/ensurepip/ /usr/lib64/python2.7/idlelib/ /usr/lib64/python2.7/imaplib.py /usr/lib64/python2.7/lib2to3/ /usr/lib64/python2.7/pydoc.py /usr/lib64/python2.7/pydoc_data/ /usr/lib64/python2.7/unittest/ /usr/lib64/python2.7/test/ /usr/lib64/python2.7/turtle.py /usr/lib64/python2.7/wsgiref /usr/lib64/python2.7/site-packages/bzrlib/doc/ /usr/lib64/python2.7/site-packages/bzrlib/export/ /usr/lib64/python2.7/site-packages/bzrlib/help_topics/en/ /usr/lib64/python2.7/site-packages/hgext/convert/ /usr/lib64/python2.7/site-packages/mercurial/help/ /usr/lib64/python2.7/site-packages/mercurial/hgweb/ /usr/lib64/python2.7/site-packages/mercurial/templates/ /usr/lib64/ruby/gems/2.2.0/gems/bundler-*/man/* /usr/lib64/R/library/translations/*/LC_MESSAGES/*.[mp]o* /usr/lib64/R/library/*/po/* /usr/lib64/R/library/*/doc/* /usr/lib64/R/library/*/help/* /usr/lib64/R/library/*/demo/* /usr/lib64/R/library/*/man/* /usr/lib64/R/library/*/NEWS /usr/lib64/libsvnjavahl-* /usr/lib64/svn-javahl /usr/share/emacs/ /usr/share/xemacs/ /usr/share/locale/*/LC_MESSAGES/*.[mp]o* /var/log/ \\\n && find /usr/lib64/python2.7/ ( -name 'test' -o -name 'tests' -o -name 'test_*' -o -name '*.pyc' -o -name '*.pyo' ) -prune -exec rm -rf '{}' '+' \\\n && time zypper clean -a \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  rocker TAG {{ .image }}_suse\n#  Coala setup and python deps\nRUN cd / \\\n && git clone --depth 1 --branch=$branch https://github.com/coala/coala.git \\\n && git clone --depth 1 --branch=$branch https://github.com/coala/coala-bears.git \\\n && git clone --depth 1 https://github.com/coala/coala-quickstart.git \\\n && time pip3 install --no-cache-dir -e /coala -e '/coala-bears[alldeps]' -e /coala-quickstart -r /coala/test-requirements.txt \\\n && cd coala-bears \\\n && sed -i '/^ruby/d' Gemfile \\\n && time bundle install --system \\\n && rm -rf ~/.bundle \\\n && time npm install \\\n && npm cache clean \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\nRUN time pear install PHP_CodeSniffer \\\n && pear channel-discover pear.phpmd.org \\\n && pear channel-discover pear.pdepend.org \\\n && pear install --alldeps phpmd/PHP_PMD \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  Dart Lint setup\nRUN curl -fsSL https://storage.googleapis.com/dart-archive/channels/stable/release/1.14.2/sdk/dartsdk-linux-x64-release.zip -o /tmp/dart-sdk.zip \\\n && unzip -n /tmp/dart-sdk.zip -d ~/ \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\nRUN curl -fsSL https://github.com/avh4/elm-format/releases/download/0.5.2-alpha/elm-format-0.17-0.5.2-alpha-linux-x64.tgz -o /tmp/elm-format.tgz \\\n && mkdir ~/elm-format-0.18 \\\n && tar -xvzf /tmp/elm-format.tgz -C ~/elm-format-0.18 \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  GO setup\nRUN source /etc/profile.d/go.sh \\\n && time go get -u github.com/golang/lint/golint golang.org/x/tools/cmd/goimports sourcegraph.com/sqs/goreturns golang.org/x/tools/cmd/gotype github.com/BurntSushi/toml/cmd/tomlv github.com/kisielk/errcheck \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  # Infer setup using opam\n#  RUN useradd -ms /bin/bash opam && usermod -G wheel opam\n#  RUN echo \"opam ALL=(ALL) NOPASSWD:ALL\" | tee -a /etc/sudoers\n#  # necessary because there is a sudo bug in the base image\n#  RUN sed -i '51 s/^/#/' /etc/security/limits.conf\n#  USER opam\n#  WORKDIR /home/opam\n#  ADD https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh opam_installer.sh\n#  RUN sudo sh opam_installer.sh /usr/local/bin\n#  RUN yes | /usr/local/bin/opam init --comp 4.02.1\n#  RUN opam switch 4.02.3 && \\\n#    eval `opam config env` && \\\n#    opam update && \\\n#    opam pin add -y merlin 'https://github.com/the-lambda-church/merlin.git#reason-0.0.1' && \\\n#    opam pin add -y merlin_extend 'https://github.com/let-def/merlin-extend.git#reason-0.0.1' && \\\n#    opam pin add -y reason 'https://github.com/facebook/reason.git#0.0.6'\n#  ADD https://github.com/facebook/infer/releases/download/v0.9.0/infer-linux64-v0.9.0.tar.xz infer-linux64-v0.9.0.tar.xz\n#  RUN sudo tar xf infer-linux64-v0.9.0.tar.xz\n#  WORKDIR /home/opam/infer-linux64-v0.9.0\n#  RUN opam pin add -y --no-action infer . && \\\n#    opam install --deps-only --yes infer && \\\n#    ./build-infer.sh java\n#  USER root\n#  WORKDIR /\n#  ENV PATH=$PATH:/home/opam/infer-linux64-v0.9.0/infer/bin\n#  Julia setup\nRUN time julia -e 'Pkg.add(\"Lint\")' \\\n && rm -rf ~/.julia/.cache \\\n && (cd ~/.julia/v0.* \\\n && rm -rf .cache METADATA .git */test */docs ) \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  PMD setup\nRUN curl -fsSL https://github.com/pmd/pmd/releases/download/pmd_releases/5.4.1/pmd-bin-5.4.1.zip -o /tmp/pmd.zip \\\n && unzip /tmp/pmd.zip -d ~/ \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  R setup\nRUN mkdir -p ~/.RLibrary \\\n && echo '.libPaths( c( \"~/.RLibrary\", .libPaths()) )' >> ~/.Rprofile \\\n && echo 'options(repos=structure(c(CRAN=\"http://cran.rstudio.com\")))' >> ~/.Rprofile \\\n && export ICUDT_DIR=/usr/share/icu/57.1/ \\\n && time R -e \"install.packages(c('lintr', 'formatR'), dependencies=TRUE, verbose=FALSE)\" \\\n && rm -rf ~/.RLibrary/*/annouce/* ~/.RLibrary/*/po/* ~/.RLibrary/*/demo/* ~/.RLibrary/*/doc/* ~/.RLibrary/*/examples/* ~/.RLibrary/*/help/* ~/.RLibrary/*/html/* ~/.RLibrary/*/man/* ~/.RLibrary/*/tests/ ~/.RLibrary/*/NEWS ~/.RLibrary/Rcpp/unitTests/ \\\n && unset ICUDT_DIR \\\n && export ICUDT_DIR \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  Tailor (Swift) setup\nRUN cd /tmp \\\n && curl -fsSL -o /tmp/install.orig https://raw.githubusercontent.com/sleekbyte/tailor/master/script/install.sh \\\n && sed 's/read -r CONTINUE < \\/dev\\/tty/CONTINUE=y/' install.orig > install.sh \\\n && time /bin/bash install.sh \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  # VHDL Bakalint Installation\nRUN curl -L 'http://downloads.sourceforge.net/project/fpgalibre/bakalint/0.4.0/bakalint-0.4.0.tar.gz' > /tmp/bl.tar.gz \\\n && tar xf /tmp/bl.tar.gz -C /root/ \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  Add checkstyle image\nRUN mkdir -p /root/.local/share/coala-bears/CheckstyleBear \\\n && curl -fsSL https://github.com/coala/bear-runtime-deps/raw/master/CheckstyleBear/checkstyle-6.15-all.jar -o /root/.local/share/coala-bears/CheckstyleBear/checkstyle-6.15-all.jar \\\n && ln -s /root/.local/share/coala-bears/CheckstyleBear/checkstyle-6.15-all.jar /root/.local/share/coala-bears/CheckstyleBear/checkstyle.jar \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  Scalalint Installation\nRUN mkdir -p /root/.local/share/coala-bears/ScalaLintBear \\\n && curl -fsSL https://github.com/coala/bear-runtime-deps/raw/master/ScalaLintBear/scalastyle_2.10-0.8.0-batch.jar -o /root/.local/share/coala-bears/ScalaLintBear/scalastyle_2.10-0.8.0-batch.jar \\\n && ln -s /root/.local/share/coala-bears/ScalaLintBear/scalastyle_2.10-0.8.0-batch.jar /root/.local/share/coala-bears/ScalaLintBear/scalastyle.jar \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#  Entrypoint script\nADD docker-coala.sh /usr/local/bin/\nCMD [\"/usr/local/bin/docker-coala.sh\"]\n#  rocker TAG {{ .image }}\n","injectedSmells":[],"originalDockerfileHash":"30630554e35cb660c187e649c48f735b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM opensuse:tumbleweed\nMAINTAINER The coala developers - coala-devel@googlegroups.com\nARG branch=master\nRUN echo branch=$branch\n#   Set the locale\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    PATH=\"$PATH:/root/pmd-bin-5.4.1/bin:/root/dart-sdk/bin:/coala-bears/node_modules/.bin:/root/bakalint-0.4.0:/root/elm-format-0.18\" \\\n    NODE_PATH=\"/coala-bears/node_modules\"\n#   Create symlink for cache\nRUN mkdir -p /root/.local/share/coala \\\n && ln -s /root/.local/share/coala /cache\nRUN zypper addlock postfix 'julia < 0.6' 'julia >= 0.7' julia-compat \\\n && zypper removerepo 'NON-OSS' \\\n && echo 'Running zypper install ...' \\\n && (time zypper -vv --no-gpg-checks --non-interactive --plus-repo http://download.opensuse.org/repositories/devel:languages:nodejs/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/science/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:languages:lua/openSUSE_Factory/ --plus-repo http://download.opensuse.org/repositories/devel:languages:python/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:languages:ruby/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/home:illuusio/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:tools/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/devel:languages:python3/openSUSE_Tumbleweed/ --plus-repo http://download.opensuse.org/repositories/home:jayvdb:coala/openSUSE_Tumbleweed/ install --replacefiles --download-in-advance astyle bzr cppcheck curl expect flawfinder gcc-c++ gcc-fortran git go1.7 mercurial hlint indent java-1_8_0-openjdk-headless julia libclang3_8 libcurl-devel libicu-devel libopenssl-devel libpcre2-8-0 libpython3_6m1_0 libxml2-devel libxml2-tools libxslt-devel devscripts linux-glibc-devel liblua5_3-5 lua53 luacheck m4 nltk-data-averaged_perceptron_tagger nltk-data-punkt nodejs7 npm7 patch perl-Perl-Critic php7 php7-pear php7-dom php7-imagick php7-pear-Archive_Tar php7-tokenizer php7-xmlwriter python python3 python3-brotlipy python3-dbm python3-nltk python3-pip python3-devel R-base ruby2.2 ruby2.2-devel ruby2.2-rubygem-bundler ShellCheck subversion tar texlive-chktex unzip > /tmp/zypper.out || (cat /tmp/zypper.out \\\n && false ) ) \\\n && grep -E '(new packages to install|^Retrieving: )' /tmp/zypper.out \\\n && time rpm -e -f --nodeps -v aaa_base cron cronie dbus-1 fdupes fontconfig fonts-config kbd kmod libICE6 libthai-data libxcb1 libxcb-render0 libxcb-shm0 libX11-6 libX11-data libXau6 libXext6 libXft2 libXmu6 libXmuu1 libXrender1 libXss1 libXt6 lksctp-tools logrotate ncurses-utils openssh openslp perl-File-ShareDir perl-Net-DBus perl-Pod-Coverage perl-Test-Pod perl-Test-Pod-Coverage perl-X11-Protocol php7-zlib python-curses python2-packaging python2-Pygments python2-pyparsing python-rpm-macros python2-setuptools python-xml R-core-doc rsync systemd texlive-gsftopk texlive-gsftopk-bin texlive-kpathsea texlive-kpathsea-bin texlive-tetex-bin texlive-texconfig texlive-texconfig-bin texlive-texlive.infra texlive-updmap-map xhost xorg-x11-fonts xorg-x11-fonts-core \\\n && printf 'def download(*args): pass\\ndownload_shell = download\\n' > /usr/lib/python3.6/site-packages/nltk/downloader.py \\\n && rm -rf /usr/lib64/python2.7/doctest.py /usr/lib64/python2.7/ensurepip/ /usr/lib64/python2.7/idlelib/ /usr/lib64/python2.7/imaplib.py /usr/lib64/python2.7/lib2to3/ /usr/lib64/python2.7/pydoc.py /usr/lib64/python2.7/pydoc_data/ /usr/lib64/python2.7/unittest/ /usr/lib64/python2.7/test/ /usr/lib64/python2.7/turtle.py /usr/lib64/python2.7/wsgiref /usr/lib64/python2.7/site-packages/bzrlib/doc/ /usr/lib64/python2.7/site-packages/bzrlib/export/ /usr/lib64/python2.7/site-packages/bzrlib/help_topics/en/ /usr/lib64/python2.7/site-packages/hgext/convert/ /usr/lib64/python2.7/site-packages/mercurial/help/ /usr/lib64/python2.7/site-packages/mercurial/hgweb/ /usr/lib64/python2.7/site-packages/mercurial/templates/ /usr/lib64/ruby/gems/2.2.0/gems/bundler-*/man/* /usr/lib64/R/library/translations/*/LC_MESSAGES/*.[mp]o* /usr/lib64/R/library/*/po/* /usr/lib64/R/library/*/doc/* /usr/lib64/R/library/*/help/* /usr/lib64/R/library/*/demo/* /usr/lib64/R/library/*/man/* /usr/lib64/R/library/*/NEWS /usr/lib64/libsvnjavahl-* /usr/lib64/svn-javahl /usr/share/emacs/ /usr/share/xemacs/ /usr/share/locale/*/LC_MESSAGES/*.[mp]o* /var/log/ \\\n && find /usr/lib64/python2.7/\n#   rocker TAG {{ .image }}_suse\n#   Coala setup and python deps\nRUN cd / \\\n && git clone --depth 1 --branch=$branch https://github.com/coala/coala.git \\\n && git clone --depth 1 --branch=$branch https://github.com/coala/coala-bears.git \\\n && git clone --depth 1 https://github.com/coala/coala-quickstart.git \\\n && time pip3 install --no-cache-dir -e /coala -e '/coala-bears[alldeps]' -e /coala-quickstart -r /coala/test-requirements.txt \\\n && cd coala-bears \\\n && sed -i '/^ruby/d' Gemfile \\\n && time bundle install --system \\\n && rm -rf ~/.bundle \\\n && time npm install \\\n && npm cache clean \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\nRUN time pear install PHP_CodeSniffer \\\n && pear channel-discover pear.phpmd.org \\\n && pear channel-discover pear.pdepend.org \\\n && pear install --alldeps phpmd/PHP_PMD \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Dart Lint setup\nRUN curl -fsSL https://storage.googleapis.com/dart-archive/channels/stable/release/1.14.2/sdk/dartsdk-linux-x64-release.zip -o /tmp/dart-sdk.zip \\\n && unzip -n /tmp/dart-sdk.zip -d ~/ \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\nRUN curl -fsSL https://github.com/avh4/elm-format/releases/download/0.5.2-alpha/elm-format-0.17-0.5.2-alpha-linux-x64.tgz -o /tmp/elm-format.tgz \\\n && mkdir ~/elm-format-0.18 \\\n && tar -xvzf /tmp/elm-format.tgz -C ~/elm-format-0.18 \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   GO setup\nRUN source /etc/profile.d/go.sh \\\n && time go get -u github.com/golang/lint/golint golang.org/x/tools/cmd/goimports sourcegraph.com/sqs/goreturns golang.org/x/tools/cmd/gotype github.com/BurntSushi/toml/cmd/tomlv github.com/kisielk/errcheck \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   # Infer setup using opam\n#   RUN useradd -ms /bin/bash opam && usermod -G wheel opam\n#   RUN echo \"opam ALL=(ALL) NOPASSWD:ALL\" | tee -a /etc/sudoers\n#   # necessary because there is a sudo bug in the base image\n#   RUN sed -i '51 s/^/#/' /etc/security/limits.conf\n#   USER opam\n#   WORKDIR /home/opam\n#   ADD https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh opam_installer.sh\n#   RUN sudo sh opam_installer.sh /usr/local/bin\n#   RUN yes | /usr/local/bin/opam init --comp 4.02.1\n#   RUN opam switch 4.02.3 && \\\n#     eval `opam config env` && \\\n#     opam update && \\\n#     opam pin add -y merlin 'https://github.com/the-lambda-church/merlin.git#reason-0.0.1' && \\\n#     opam pin add -y merlin_extend 'https://github.com/let-def/merlin-extend.git#reason-0.0.1' && \\\n#     opam pin add -y reason 'https://github.com/facebook/reason.git#0.0.6'\n#   ADD https://github.com/facebook/infer/releases/download/v0.9.0/infer-linux64-v0.9.0.tar.xz infer-linux64-v0.9.0.tar.xz\n#   RUN sudo tar xf infer-linux64-v0.9.0.tar.xz\n#   WORKDIR /home/opam/infer-linux64-v0.9.0\n#   RUN opam pin add -y --no-action infer . && \\\n#     opam install --deps-only --yes infer && \\\n#     ./build-infer.sh java\n#   USER root\n#   WORKDIR /\n#   ENV PATH=$PATH:/home/opam/infer-linux64-v0.9.0/infer/bin\n#   Julia setup\nRUN time julia -e 'Pkg.add(\"Lint\")' \\\n && rm -rf ~/.julia/.cache \\\n && (cd ~/.julia/v0.* \\\n && rm -rf .cache METADATA .git */test */docs ) \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   PMD setup\nRUN curl -fsSL https://github.com/pmd/pmd/releases/download/pmd_releases/5.4.1/pmd-bin-5.4.1.zip -o /tmp/pmd.zip \\\n && unzip /tmp/pmd.zip -d ~/ \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   R setup\nRUN mkdir -p ~/.RLibrary \\\n && echo '.libPaths( c( \"~/.RLibrary\", .libPaths()) )' >> ~/.Rprofile \\\n && echo 'options(repos=structure(c(CRAN=\"http://cran.rstudio.com\")))' >> ~/.Rprofile \\\n && export ICUDT_DIR=/usr/share/icu/57.1/ \\\n && time R -e \"install.packages(c('lintr', 'formatR'), dependencies=TRUE, verbose=FALSE)\" \\\n && rm -rf ~/.RLibrary/*/annouce/* ~/.RLibrary/*/po/* ~/.RLibrary/*/demo/* ~/.RLibrary/*/doc/* ~/.RLibrary/*/examples/* ~/.RLibrary/*/help/* ~/.RLibrary/*/html/* ~/.RLibrary/*/man/* ~/.RLibrary/*/tests/ ~/.RLibrary/*/NEWS ~/.RLibrary/Rcpp/unitTests/ \\\n && unset ICUDT_DIR \\\n && export ICUDT_DIR \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Tailor (Swift) setup\nRUN cd /tmp \\\n && curl -fsSL -o /tmp/install.orig https://raw.githubusercontent.com/sleekbyte/tailor/master/script/install.sh \\\n && sed 's/read -r CONTINUE < \\/dev\\/tty/CONTINUE=y/' install.orig > install.sh \\\n && time /bin/bash install.sh \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   # VHDL Bakalint Installation\nRUN curl -L 'http://downloads.sourceforge.net/project/fpgalibre/bakalint/0.4.0/bakalint-0.4.0.tar.gz' > /tmp/bl.tar.gz \\\n && tar xf /tmp/bl.tar.gz -C /root/ \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Add checkstyle image\nRUN mkdir -p /root/.local/share/coala-bears/CheckstyleBear \\\n && curl -fsSL https://github.com/coala/bear-runtime-deps/raw/master/CheckstyleBear/checkstyle-6.15-all.jar -o /root/.local/share/coala-bears/CheckstyleBear/checkstyle-6.15-all.jar \\\n && ln -s /root/.local/share/coala-bears/CheckstyleBear/checkstyle-6.15-all.jar /root/.local/share/coala-bears/CheckstyleBear/checkstyle.jar \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Scalalint Installation\nRUN mkdir -p /root/.local/share/coala-bears/ScalaLintBear \\\n && curl -fsSL https://github.com/coala/bear-runtime-deps/raw/master/ScalaLintBear/scalastyle_2.10-0.8.0-batch.jar -o /root/.local/share/coala-bears/ScalaLintBear/scalastyle_2.10-0.8.0-batch.jar \\\n && ln -s /root/.local/share/coala-bears/ScalaLintBear/scalastyle_2.10-0.8.0-batch.jar /root/.local/share/coala-bears/ScalaLintBear/scalastyle.jar \\\n && find /tmp -mindepth 1 -prune -exec rm -rf '{}' '+'\n#   Entrypoint script\nADD docker-coala.sh /usr/local/bin/\nCMD [\"/usr/local/bin/docker-coala.sh\"]\n#   rocker TAG {{ .image }}\n","originalDockerfileUglifiedHash":"e58dc633e3a3d41cf4e5dfefaccb4968","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1b050075aec846045014caf465e2fed5863fb011.dockerfile"}