{"seed":2891672836,"processedDockerfileHash":"8d8a1417a42fa09c07fcf167e0a56b2d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Copyright 2015 Google Inc. All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\nFROM google/dind\n#   Install common development packages.\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=2.6.0 bash-completion=1:2.11-6ubuntu1 build-essential=12.9ubuntu3 ca-certificates=20230311 clang=1:15.0-56~exp2 cron=3.0pl1-151ubuntu1 curl=7.88.1-7ubuntu1 emacs-nox=1:28.2+1-13ubuntu3 gcc=4:12.2.0-3ubuntu1 git=1:2.39.2-1ubuntu1 git-core golang=2:1.20~0ubuntu1 jq=1.6-2.1ubuntu3 less=590-1.2 locales=2.37-0ubuntu2 lsb-release=12.0-1ubuntu1 make=4.3-4.1build1 man-db=2.11.2-1 manpages=6.03-1 maven=3.8.7-1 mercurial=6.3.2-1 mysql-client=8.0.32-0ubuntu4 nano=7.2-1 nginx=1.22.0-1ubuntu3 openjdk-8-jdk=8u362-ga-0ubuntu2 openjdk-8-jre-headless=8u362-ga-0ubuntu2 openssh-server=1:9.0p1-1ubuntu8 php5-cli php5-common php5-dev php5-fpm php5-gd php-pear=1:1.10.13+submodules+notgz+2022032202-2 python python-dev python-setuptools rlwrap=0.46.1-1 screen=4.9.0-4 sudo=1.9.13p1-1ubuntu2 supervisor=4.2.1-1ubuntu1 tmux=3.3a-3 unzip=6.0-27ubuntu1 vim=2:9.0.1000-4ubuntu2 wget=1.21.3-1ubuntu1 zip=3.0-13 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN easy_install -U pip\nRUN pip install crcmod==1.7 -U\n#   Installing node:\nRUN wget https://nodejs.org/dist/v4.2.1/node-v4.2.1-linux-x64.tar.gz \\\n && tar xvfz node-v4.2.1-linux-x64.tar.gz \\\n && cp -R node-v4.2.1-linux-x64/* /usr/ \\\n && ln -f -s /usr/bin/node /usr/bin/nodejs \\\n && rm node-v4.2.1-linux-x64.tar.gz\nRUN npm install js-beautify@1.14.7 uglify-js@3.17.4 uglifycss@0.0.29 firebase@9.19.1 firebase-token-generator@2.0.0 webdriverio@8.8.2 mocha@10.2.0 expect.js@0.3.1 -g\n#   Adding git-appraise\nENV GOPATH=\"/usr/local/\"\nRUN go get github.com/google/git-appraise/git-appraise\n#   Adding Kythe\nENV KYTHE_VERSION=\"v0.0.15\"\nRUN wget -P /tmp https://github.com/google/kythe/releases/download/${KYTHE_VERSION}/kythe-${KYTHE_VERSION}.tar.gz \\\n && tar xvfz /tmp/kythe-${KYTHE_VERSION}.tar.gz -C /tmp/ \\\n && mkdir -p /opt/kythe \\\n && cp -R /tmp/kythe-${KYTHE_VERSION}/* /opt/kythe \\\n && rm -rf /tmp/*\n#   Install a UTF-8 locale by default.\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen \\\n && update-locale LANG=en_US.UTF-8\n#   Install the Google Cloud SDK.\nRUN wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n && unzip google-cloud-sdk.zip -d /google/ \\\n && rm google-cloud-sdk.zip\nENV CLOUD_SDK=\"/google/google-cloud-sdk\"\nRUN $CLOUD_SDK/install.sh --usage-reporting=true --rc-path=/etc/bash.bashrc --bash-completion=true --path-update=true --disable-installation-options\nENV PATH=\"$CLOUD_SDK/bin:$PATH\"\n#   Disable the automatic update checks by Cloud SDK since the container\n#   environment is assumed to be auto-managed, and we don't want to advertise\n#   the manual update process too much.\nRUN gcloud config set --installation component_manager/disable_update_check True\n#   Install the gcloud preview app support and Managed VMs.\nRUN yes | CLOUDSDK_COMPONENT_MANAGER_FIXED_SDK_VERSION=0.9.79 gcloud components update -q alpha app app-engine-java app-engine-python beta kubectl preview\n#   Unpin the fixed_sdk_version so that users can upgrade later if they want to.\nRUN gcloud config unset --installation component_manager/fixed_sdk_version\n#   Git credential helpers for source.developers.google.com and Gerrit.\nCOPY gitconfig /etc/gitconfig\nRUN chmod -R 644 /etc/gitconfig\n#   Make it so the user does not need to type in their password for sudo\nRUN echo \"%sudo ALL=NOPASSWD: ALL\" >> /etc/sudoers\n#   Start the cron daemon.\nENV ONRUN=\"$ONRUN \\\"cron\\\"\"\n#   Add cron job to run \"gcloud docker --authorize_only\" every 5 minutes.\nCOPY gcloud_docker_auth.sh /google/scripts/gcloud_docker_auth.sh\nRUN chmod -R a+rx /google/scripts/gcloud_docker_auth.sh\nRUN (crontab -l 2> /dev/null;echo '*/5 * * * * /google/scripts/gcloud_docker_auth.sh' ) | crontab\n#   Eagerly run this authorization script upon startup.\nENV ONRUN=\"$ONRUN \\\"/google/scripts/gcloud_docker_auth.sh\\\"\"\n#   Set an environment variable to configure which container server to use.\n#   We use the Google Container Registry:\n#       https://cloud.google.com/tools/container-registry/.\nENV GCLOUD_CONTAINER_SERVER=\"gcr.io\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Copyright 2015 Google Inc. All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\nFROM google/dind\n#  Install common development packages.\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https bash-completion build-essential ca-certificates clang cron curl emacs-nox gcc git git-core golang jq less locales lsb-release make man-db manpages maven mercurial mysql-client nano nginx openjdk-8-jdk openjdk-8-jre-headless openssh-server php5-cli php5-common php5-dev php5-fpm php5-gd php-pear python python-dev python-setuptools rlwrap screen sudo supervisor tmux unzip vim wget zip -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN easy_install -U pip\nRUN pip install crcmod -U\n#  Installing node:\nRUN wget https://nodejs.org/dist/v4.2.1/node-v4.2.1-linux-x64.tar.gz \\\n && tar xvfz node-v4.2.1-linux-x64.tar.gz \\\n && cp -R node-v4.2.1-linux-x64/* /usr/ \\\n && ln -f -s /usr/bin/node /usr/bin/nodejs \\\n && rm node-v4.2.1-linux-x64.tar.gz\nRUN npm install js-beautify uglify-js uglifycss firebase firebase-token-generator webdriverio mocha expect.js -g\n#  Adding git-appraise\nENV GOPATH=\"/usr/local/\"\nRUN go get github.com/google/git-appraise/git-appraise\n#  Adding Kythe\nENV KYTHE_VERSION=\"v0.0.15\"\nRUN wget -P /tmp https://github.com/google/kythe/releases/download/${KYTHE_VERSION}/kythe-${KYTHE_VERSION}.tar.gz \\\n && tar xvfz /tmp/kythe-${KYTHE_VERSION}.tar.gz -C /tmp/ \\\n && mkdir -p /opt/kythe \\\n && cp -R /tmp/kythe-${KYTHE_VERSION}/* /opt/kythe \\\n && rm -rf /tmp/*\n#  Install a UTF-8 locale by default.\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen \\\n && update-locale LANG=en_US.UTF-8\n#  Install the Google Cloud SDK.\nRUN wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n && unzip google-cloud-sdk.zip -d /google/ \\\n && rm google-cloud-sdk.zip\nENV CLOUD_SDK=\"/google/google-cloud-sdk\"\nRUN $CLOUD_SDK/install.sh --usage-reporting=true --rc-path=/etc/bash.bashrc --bash-completion=true --path-update=true --disable-installation-options\nENV PATH=\"$CLOUD_SDK/bin:$PATH\"\n#  Disable the automatic update checks by Cloud SDK since the container\n#  environment is assumed to be auto-managed, and we don't want to advertise\n#  the manual update process too much.\nRUN gcloud config set --installation component_manager/disable_update_check True\n#  Install the gcloud preview app support and Managed VMs.\nRUN yes | CLOUDSDK_COMPONENT_MANAGER_FIXED_SDK_VERSION=0.9.79 gcloud components update -q alpha app app-engine-java app-engine-python beta kubectl preview\n#  Unpin the fixed_sdk_version so that users can upgrade later if they want to.\nRUN gcloud config unset --installation component_manager/fixed_sdk_version\n#  Git credential helpers for source.developers.google.com and Gerrit.\nADD gitconfig /etc/gitconfig\nRUN chmod -R 644 /etc/gitconfig\n#  Make it so the user does not need to type in their password for sudo\nRUN echo \"%sudo ALL=NOPASSWD: ALL\" >> /etc/sudoers\n#  Start the cron daemon.\nENV ONRUN=\"$ONRUN \\\"cron\\\"\"\n#  Add cron job to run \"gcloud docker --authorize_only\" every 5 minutes.\nADD gcloud_docker_auth.sh /google/scripts/gcloud_docker_auth.sh\nRUN chmod -R a+rx /google/scripts/gcloud_docker_auth.sh\nRUN (crontab -l 2> /dev/null;echo '*/5 * * * * /google/scripts/gcloud_docker_auth.sh' ) | crontab\n#  Eagerly run this authorization script upon startup.\nENV ONRUN=\"$ONRUN \\\"/google/scripts/gcloud_docker_auth.sh\\\"\"\n#  Set an environment variable to configure which container server to use.\n#  We use the Google Container Registry:\n#      https://cloud.google.com/tools/container-registry/.\nENV GCLOUD_CONTAINER_SERVER=\"gcr.io\"\n","injectedSmells":[],"originalDockerfileHash":"9d9e19acaa82ad93e0a12fefac5b6d04","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Copyright 2015 Google Inc. All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\nFROM google/dind\n#   Install common development packages.\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https bash-completion build-essential ca-certificates clang cron curl emacs-nox gcc git git-core golang jq less locales lsb-release make man-db manpages maven mercurial mysql-client nano nginx openjdk-8-jdk openjdk-8-jre-headless openssh-server php5-cli php5-common php5-dev php5-fpm php5-gd php-pear python python-dev python-setuptools rlwrap screen sudo supervisor tmux unzip vim wget zip -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN easy_install -U pip\nRUN pip install crcmod -U\n#   Installing node:\nRUN wget https://nodejs.org/dist/v4.2.1/node-v4.2.1-linux-x64.tar.gz \\\n && tar xvfz node-v4.2.1-linux-x64.tar.gz \\\n && cp -R node-v4.2.1-linux-x64/* /usr/ \\\n && ln -f -s /usr/bin/node /usr/bin/nodejs \\\n && rm node-v4.2.1-linux-x64.tar.gz\nRUN npm install js-beautify uglify-js uglifycss firebase firebase-token-generator webdriverio mocha expect.js -g\n#   Adding git-appraise\nENV GOPATH=\"/usr/local/\"\nRUN go get github.com/google/git-appraise/git-appraise\n#   Adding Kythe\nENV KYTHE_VERSION=\"v0.0.15\"\nRUN wget -P /tmp https://github.com/google/kythe/releases/download/${KYTHE_VERSION}/kythe-${KYTHE_VERSION}.tar.gz \\\n && tar xvfz /tmp/kythe-${KYTHE_VERSION}.tar.gz -C /tmp/ \\\n && mkdir -p /opt/kythe \\\n && cp -R /tmp/kythe-${KYTHE_VERSION}/* /opt/kythe \\\n && rm -rf /tmp/*\n#   Install a UTF-8 locale by default.\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen \\\n && update-locale LANG=en_US.UTF-8\n#   Install the Google Cloud SDK.\nRUN wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n && unzip google-cloud-sdk.zip -d /google/ \\\n && rm google-cloud-sdk.zip\nENV CLOUD_SDK=\"/google/google-cloud-sdk\"\nRUN $CLOUD_SDK/install.sh --usage-reporting=true --rc-path=/etc/bash.bashrc --bash-completion=true --path-update=true --disable-installation-options\nENV PATH=\"$CLOUD_SDK/bin:$PATH\"\n#   Disable the automatic update checks by Cloud SDK since the container\n#   environment is assumed to be auto-managed, and we don't want to advertise\n#   the manual update process too much.\nRUN gcloud config set --installation component_manager/disable_update_check True\n#   Install the gcloud preview app support and Managed VMs.\nRUN yes | CLOUDSDK_COMPONENT_MANAGER_FIXED_SDK_VERSION=0.9.79 gcloud components update -q alpha app app-engine-java app-engine-python beta kubectl preview\n#   Unpin the fixed_sdk_version so that users can upgrade later if they want to.\nRUN gcloud config unset --installation component_manager/fixed_sdk_version\n#   Git credential helpers for source.developers.google.com and Gerrit.\nADD gitconfig /etc/gitconfig\nRUN chmod -R 644 /etc/gitconfig\n#   Make it so the user does not need to type in their password for sudo\nRUN echo \"%sudo ALL=NOPASSWD: ALL\" >> /etc/sudoers\n#   Start the cron daemon.\nENV ONRUN=\"$ONRUN \\\"cron\\\"\"\n#   Add cron job to run \"gcloud docker --authorize_only\" every 5 minutes.\nADD gcloud_docker_auth.sh /google/scripts/gcloud_docker_auth.sh\nRUN chmod -R a+rx /google/scripts/gcloud_docker_auth.sh\nRUN (crontab -l 2> /dev/null;echo '*/5 * * * * /google/scripts/gcloud_docker_auth.sh' ) | crontab\n#   Eagerly run this authorization script upon startup.\nENV ONRUN=\"$ONRUN \\\"/google/scripts/gcloud_docker_auth.sh\\\"\"\n#   Set an environment variable to configure which container server to use.\n#   We use the Google Container Registry:\n#       https://cloud.google.com/tools/container-registry/.\nENV GCLOUD_CONTAINER_SERVER=\"gcr.io\"\n","originalDockerfileUglifiedHash":"1a12a58357f5154b5f6fa42b05395ab0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c140666e2bc7fdc465c2b30b0eddafb28a61685c.dockerfile"}