{"seed":1322799444,"processedDockerfileHash":"33eb25c866c2712a94369bb9e6dbeef8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   PHP Docker image for Yii 2.0 Framework runtime\n#   ==============================================\nFROM php:7.1.9-fpm-alpine\n#   Install system packages & PHP extensions required for Yii 2.0 Framework\n#   virtual pkg names and ENV $PHPIZE_DEPS are definied in base image\n#   C* and LDFlAGS are also definied in base image, so we use these for our custom pecl builds\n#   we install (newer) imagick from edge repo due to SEGFAULT bugs\n#   hopefully this won't break other things...\nRUN apk add $PHPIZE_DEPS --no-cache --virtual .phpize-deps \\\n && apk add imagemagick=6.9.5.9-r1 imagemagick-dev=6.9.5.9-r1 --no-cache --virtual .imagemagick-edge --repository http://dl-3.alpinelinux.org/alpine/v3.6/main/ --allow-untrusted \\\n && apk add icu-dev=57.1-r3 curl-dev=7.60.0-r1 freetype-dev=2.6.3-r1 pcre-dev=8.38-r1 postgresql-dev=9.5.13-r0 libtool=2.4.6-r0 libmcrypt-dev=2.5.8-r7 libjpeg-turbo-dev=1.4.2-r0 libpng-dev=1.6.21-r0 libxml2-dev=2.9.5-r0 --update --virtual .pecl-build-deps \\\n && apk add zlib-dev=1.2.11-r0 cyrus-sasl-dev=2.1.26-r7 g++=5.3.0-r0 libtool=2.4.6-r0 make=4.1-r1 pcre-dev=8.38-r1 $PHPIZE_DEPS --no-cache --virtual .build-dependencies \\\n && apk add git=2.8.6-r0 curl=7.60.0-r1 bash=4.3.42-r5 bash-completion=2.1-r2 icu=57.1-r3 pcre=8.38-r1 freetype=2.6.3-r1 libmcrypt=2.5.8-r7 libintl=0.19.7-r3 libjpeg-turbo=1.4.2-r0 imagemagick=6.9.5.9-r1 libpng=1.6.21-r0 libltdl=2.4.6-r0 libxml2=2.9.5-r0 mysql-client=10.1.32-r0 nodejs=6.7.0-r1 postgresql-client=9.5.13-r0 libmemcached-dev=1.0.18-r1 \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && pecl install apcu imagick-3.4.3 xdebug memcached \\\n && docker-php-ext-enable imagick \\\n && docker-php-ext-enable apcu \\\n && docker-php-ext-enable memcached \\\n && docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure bcmath \\\n && docker-php-ext-install soap mcrypt zip curl bcmath exif gd iconv intl mbstring opcache pdo_mysql pdo_pgsql \\\n && apk del .pecl-build-deps .phpize-deps\n#   Configure version constraints\nENV VERSION_COMPOSER_ASSET_PLUGIN=\"^1.4.2\" \\\n    VERSION_PRESTISSIMO_PLUGIN=\"^0.3.7\" \\\n    PATH=\"/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\" \\\n    TERM=\"linux\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Add configuration files\nCOPY image-files/ /\n#   Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 /usr/local/bin/docker-entrypoint.sh /usr/local/bin/composer\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --filename=composer.phar --install-dir=/usr/local/bin \\\n && composer global require --optimize-autoloader \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" \\\n && composer global dumpautoload --optimize \\\n && composer clear-cache\n#   Install nginx\nRUN apk add nginx=1.10.3-r0 --update\nWORKDIR /srv\nCOPY composer.* /srv/\nRUN /usr/local/bin/composer install --prefer-dist\nENV PATH=\"/srv/vendor/bin:${PATH}\"\nCOPY . /srv/\nRUN chown -R www-data:www-data /srv/ \\\n && chmod 777 -R /srv/runtime\nEXPOSE 80/tcp\nCMD [\"docker-entrypoint.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  PHP Docker image for Yii 2.0 Framework runtime\n#  ==============================================\nFROM php:7.1.9-fpm-alpine\n#  Install system packages & PHP extensions required for Yii 2.0 Framework\n#  virtual pkg names and ENV $PHPIZE_DEPS are definied in base image\n#  C* and LDFlAGS are also definied in base image, so we use these for our custom pecl builds\n#  we install (newer) imagick from edge repo due to SEGFAULT bugs\n#  hopefully this won't break other things...\nRUN apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \\\n && apk add --no-cache --virtual .imagemagick-edge --repository http://dl-3.alpinelinux.org/alpine/v3.6/main/ --allow-untrusted imagemagick imagemagick-dev \\\n && apk add --update --virtual .pecl-build-deps icu-dev curl-dev freetype-dev pcre-dev postgresql-dev libtool libmcrypt-dev libjpeg-turbo-dev libpng-dev libxml2-dev \\\n && apk add --no-cache --virtual .build-dependencies $PHPIZE_DEPS zlib-dev cyrus-sasl-dev g++ libtool make pcre-dev \\\n && apk add git curl bash bash-completion icu pcre freetype libmcrypt libintl libjpeg-turbo imagemagick libpng libltdl libxml2 mysql-client nodejs postgresql-client libmemcached-dev \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && pecl install apcu imagick-3.4.3 xdebug memcached \\\n && docker-php-ext-enable imagick \\\n && docker-php-ext-enable apcu \\\n && docker-php-ext-enable memcached \\\n && docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure bcmath \\\n && docker-php-ext-install soap mcrypt zip curl bcmath exif gd iconv intl mbstring opcache pdo_mysql pdo_pgsql \\\n && apk del .pecl-build-deps .phpize-deps\n#  Configure version constraints\nENV VERSION_COMPOSER_ASSET_PLUGIN=\"^1.4.2\" \\\n    VERSION_PRESTISSIMO_PLUGIN=\"^0.3.7\" \\\n    PATH=\"/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\" \\\n    TERM=\"linux\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\"\n#  Add configuration files\nCOPY image-files/ /\n#  Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 /usr/local/bin/docker-entrypoint.sh /usr/local/bin/composer\n#  Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --filename=composer.phar --install-dir=/usr/local/bin \\\n && composer global require --optimize-autoloader \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" \\\n && composer global dumpautoload --optimize \\\n && composer clear-cache\n#  Install nginx\nRUN apk --update add nginx\nWORKDIR /srv\nCOPY composer.* /srv/\nRUN /usr/local/bin/composer install --prefer-dist\nENV PATH=\"/srv/vendor/bin:${PATH}\"\nCOPY . /srv/\nRUN chown -R www-data:www-data /srv/ \\\n && chmod 777 -R /srv/runtime\nEXPOSE 80/tcp\nCMD [\"docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"e2844b6294d8892ab229002a4ed85154","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   PHP Docker image for Yii 2.0 Framework runtime\n#   ==============================================\nFROM php:7.1.9-fpm-alpine\n#   Install system packages & PHP extensions required for Yii 2.0 Framework\n#   virtual pkg names and ENV $PHPIZE_DEPS are definied in base image\n#   C* and LDFlAGS are also definied in base image, so we use these for our custom pecl builds\n#   we install (newer) imagick from edge repo due to SEGFAULT bugs\n#   hopefully this won't break other things...\nRUN apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \\\n && apk add --no-cache --virtual .imagemagick-edge --repository http://dl-3.alpinelinux.org/alpine/v3.6/main/ --allow-untrusted imagemagick imagemagick-dev \\\n && apk add --update --virtual .pecl-build-deps icu-dev curl-dev freetype-dev pcre-dev postgresql-dev libtool libmcrypt-dev libjpeg-turbo-dev libpng-dev libxml2-dev \\\n && apk add --no-cache --virtual .build-dependencies $PHPIZE_DEPS zlib-dev cyrus-sasl-dev g++ libtool make pcre-dev \\\n && apk add git curl bash bash-completion icu pcre freetype libmcrypt libintl libjpeg-turbo imagemagick libpng libltdl libxml2 mysql-client nodejs postgresql-client libmemcached-dev \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && pecl install apcu imagick-3.4.3 xdebug memcached \\\n && docker-php-ext-enable imagick \\\n && docker-php-ext-enable apcu \\\n && docker-php-ext-enable memcached \\\n && docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure bcmath \\\n && docker-php-ext-install soap mcrypt zip curl bcmath exif gd iconv intl mbstring opcache pdo_mysql pdo_pgsql \\\n && apk del .pecl-build-deps .phpize-deps\n#   Configure version constraints\nENV VERSION_COMPOSER_ASSET_PLUGIN=\"^1.4.2\" \\\n    VERSION_PRESTISSIMO_PLUGIN=\"^0.3.7\" \\\n    PATH=\"/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\" \\\n    TERM=\"linux\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Add configuration files\nCOPY image-files/ /\n#   Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 /usr/local/bin/docker-entrypoint.sh /usr/local/bin/composer\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --filename=composer.phar --install-dir=/usr/local/bin \\\n && composer global require --optimize-autoloader \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" \\\n && composer global dumpautoload --optimize \\\n && composer clear-cache\n#   Install nginx\nRUN apk --update add nginx\nWORKDIR /srv\nCOPY composer.* /srv/\nRUN /usr/local/bin/composer install --prefer-dist\nENV PATH=\"/srv/vendor/bin:${PATH}\"\nCOPY . /srv/\nRUN chown -R www-data:www-data /srv/ \\\n && chmod 777 -R /srv/runtime\nEXPOSE 80/tcp\nCMD [\"docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"4017b7f5450e6ddfb94fc127175cfbc4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/96c98cfb7dc9dcc32a39b44e480cc7b12340a242.dockerfile"}