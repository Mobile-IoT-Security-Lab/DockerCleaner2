{"seed":3128129778,"processedDockerfileHash":"75decd6452beb74065ac3a04f8db0a69","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Image includes:\n#   - nginx (with few common modules)\n#   - nginx_upstream_module (for tarantool)\n#   - nginx_lua_module (required by luajit)\n#   - nginx_devel_kit (required by luajit)\n#   - luajit\n#   - luarocks\n#   - lua rock \"lua-cjson\" (is necessary to work with tarantool response, can be extended with env variable)\nFROM alpine:3.5\nMAINTAINER Konstantin Nazarov \"mail@racktear.com\"\nRUN addgroup -S nginx \\\n && adduser -S -G nginx nginx \\\n && apk add 'su-exec>=0.2' --no-cache\nENV NGINX_VERSION=\"1.11.1\" \\\n    NGINX_UPSTREAM_MODULE_URL=\"https://github.com/tarantool/nginx_upstream_module.git\" \\\n    NGINX_UPSTREAM_MODULE_COMMIT=\"3736239b51cc48776ee49088d7d674ff37791544\" \\\n    NGINX_GPG_KEYS=\"B0F4253373F8F6F510D42178520A9993A1C052F8\"\nENV NGINX_LUA_MODULE_URL=\"https://github.com/openresty/lua-nginx-module\" \\\n    NGINX_LUA_MODULE_PATH=\"/usr/src/lua-nginx-module\"\nENV NGINX_DEVEL_KIT_URL=\"https://github.com/simpl/ngx_devel_kit\" \\\n    NGINX_DEVEL_KIT_PATH=\"/usr/src/nginx-devel-kit\"\nENV LUAJIT_VERSION=\"2.0.5\" \\\n    LUAJIT_URL=\"http://luajit.org/git/luajit-2.0.git\" \\\n    LUAJIT_PATH=\"/usr/src/luajit\" \\\n    LUAJIT_LIB=\"/usr/local/lib\" \\\n    LUAJIT_INC=\"/usr/local/include/luajit-2.0\"\nENV LUAROCKS_VERSION=\"2.4.2\" \\\n    LUAROCKS_URL=\"https://github.com/luarocks/luarocks\" \\\n    LUAROCKS_PATH=\"/usr/src/luarocks\"\nENV LUAROCKS_ROCKS=\"lua-cjson\"\nRUN set -x \\\n && apk add build-base=0.4-r1 cmake=3.6.3-r0 linux-headers=4.4.6-r1 libressl-dev=2.4.4-r0 pcre-dev=8.39-r0 zlib-dev=1.2.11-r0 libxslt-dev=1.1.29-r1 gd-dev=2.2.5-r1 geoip-dev=1.6.9-r0 git=2.11.3-r2 tar=1.29-r1 gnupg=2.1.15-r1 curl=7.61.1-r1 perl-dev=5.24.4-r1 unzip=6.0-r3 gcc=6.2.1-r1 perl=5.24.4-r1 --no-cache --virtual .build-deps \\\n && apk add ca-certificates=20161130-r1 libressl=2.4.4-r0 pcre=8.39-r0 zlib=1.2.11-r0 libxslt=1.1.29-r1 gd=2.2.5-r1 geoip=1.6.9-r0 gettext=0.19.8.1-r0 libgcc=6.2.1-r1 --no-cache --virtual .run-deps \\\n && git config --global http.postBuffer 524288000 \\\n && : \"---------- download nginx-devel-kit ----------\" \\\n && git clone \"$NGINX_DEVEL_KIT_URL\" $NGINX_DEVEL_KIT_PATH \\\n && : \"---------- download nginx-lua-module ----------\" \\\n && git clone \"$NGINX_LUA_MODULE_URL\" $NGINX_LUA_MODULE_PATH \\\n && : \"---------- download luajit ----------\" \\\n && git clone \"$LUAJIT_URL\" $LUAJIT_PATH \\\n && git -C $LUAJIT_PATH checkout tags/v$LUAJIT_VERSION \\\n && make -C $LUAJIT_PATH \\\n && make -C $LUAJIT_PATH install \\\n && : \"---------- download and install luarocks (depends on luajit) ----------\" \\\n && git clone $LUAROCKS_URL $LUAROCKS_PATH \\\n && git -C $LUAROCKS_PATH checkout tags/v$LUAROCKS_VERSION \\\n && ln -s /usr/local/bin/luajit-$LUAJIT_VERSION /usr/local/bin/lua \\\n && cd $LUAROCKS_PATH \\\n && ./configure --with-lua-bin=/usr/local/bin --with-lua-include=/usr/src/luajit/src/ \\\n && make build \\\n && make install \\\n && cd \\\n && : \"---------- download nginx-upstream-module ----------\" \\\n && git clone \"$NGINX_UPSTREAM_MODULE_URL\" /usr/src/nginx_upstream_module \\\n && git -C /usr/src/nginx_upstream_module checkout \"${NGINX_UPSTREAM_MODULE_COMMIT}\" \\\n && git -C /usr/src/nginx_upstream_module submodule init \\\n && git -C /usr/src/nginx_upstream_module submodule update \\\n && make -C /usr/src/nginx_upstream_module yajl \\\n && make -C /usr/src/nginx_upstream_module msgpack \\\n && : \"---------- download nginx ----------\" \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && : \"---------- verify signatures ----------\" \\\n && mkdir -p /usr/src/nginx \\\n && tar -xzf nginx.tar.gz -C /usr/src/nginx --strip-components=1 \\\n && cd /usr/src/nginx \\\n && : \"---------- build nginx ----------\" \\\n && ./configure --with-cc-opt='-I/usr/src/nginx_upstream_module/third_party/third_party/msgpuck -I /usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/include' --with-ld-opt='/usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/lib/libyajl_s.a -L /usr/src/nginx_upstream_module/third_party/third_party/msgpuck' --add-module=/usr/src/nginx_upstream_module --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_perl_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-file-aio --with-http_v2_module --with-ipv6 --with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\" --add-module=$NGINX_DEVEL_KIT_PATH --add-module=$NGINX_LUA_MODULE_PATH \\\n && make \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && : \"---------- install module deps ----------\" \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --virtual .run-deps \\\n && : \"---------- install lua rocks ----------\" \\\n && for rock in $LUAROCKS_ROCKS; do luarocks install $rock ; done \\\n && : \"---------- remove build deps ----------\" \\\n && rm -rf /usr/src/nginx \\\n && rm -rf /usr/src/nginx_upstream_module \\\n && apk del .build-deps \\\n && : \"---------- redirect logs to default collector ----------\" \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nVOLUME [\"/var/cache/nginx\"]\nEXPOSE 80/tcp 443/tcp\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Image includes:\n#  - nginx (with few common modules)\n#  - nginx_upstream_module (for tarantool)\n#  - nginx_lua_module (required by luajit)\n#  - nginx_devel_kit (required by luajit)\n#  - luajit\n#  - luarocks\n#  - lua rock \"lua-cjson\" (is necessary to work with tarantool response, can be extended with env variable)\nFROM alpine:3.5\nMAINTAINER Konstantin Nazarov \"mail@racktear.com\"\nRUN addgroup -S nginx \\\n && adduser -S -G nginx nginx \\\n && apk add --no-cache 'su-exec>=0.2'\nENV NGINX_VERSION=\"1.11.1\" \\\n    NGINX_UPSTREAM_MODULE_URL=\"https://github.com/tarantool/nginx_upstream_module.git\" \\\n    NGINX_UPSTREAM_MODULE_COMMIT=\"3736239b51cc48776ee49088d7d674ff37791544\" \\\n    NGINX_GPG_KEYS=\"B0F4253373F8F6F510D42178520A9993A1C052F8\"\nENV NGINX_LUA_MODULE_URL=\"https://github.com/openresty/lua-nginx-module\" \\\n    NGINX_LUA_MODULE_PATH=\"/usr/src/lua-nginx-module\"\nENV NGINX_DEVEL_KIT_URL=\"https://github.com/simpl/ngx_devel_kit\" \\\n    NGINX_DEVEL_KIT_PATH=\"/usr/src/nginx-devel-kit\"\nENV LUAJIT_VERSION=\"2.0.5\" \\\n    LUAJIT_URL=\"http://luajit.org/git/luajit-2.0.git\" \\\n    LUAJIT_PATH=\"/usr/src/luajit\" \\\n    LUAJIT_LIB=\"/usr/local/lib\" \\\n    LUAJIT_INC=\"/usr/local/include/luajit-2.0\"\nENV LUAROCKS_VERSION=\"2.4.2\" \\\n    LUAROCKS_URL=\"https://github.com/luarocks/luarocks\" \\\n    LUAROCKS_PATH=\"/usr/src/luarocks\"\nENV LUAROCKS_ROCKS=\"lua-cjson\"\nRUN set -x \\\n && apk add --no-cache --virtual .build-deps build-base cmake linux-headers libressl-dev pcre-dev zlib-dev libxslt-dev gd-dev geoip-dev git tar gnupg curl perl-dev unzip gcc perl \\\n && apk add --no-cache --virtual .run-deps ca-certificates libressl pcre zlib libxslt gd geoip gettext libgcc \\\n && git config --global http.postBuffer 524288000 \\\n && : \"---------- download nginx-devel-kit ----------\" \\\n && git clone \"$NGINX_DEVEL_KIT_URL\" $NGINX_DEVEL_KIT_PATH \\\n && : \"---------- download nginx-lua-module ----------\" \\\n && git clone \"$NGINX_LUA_MODULE_URL\" $NGINX_LUA_MODULE_PATH \\\n && : \"---------- download luajit ----------\" \\\n && git clone \"$LUAJIT_URL\" $LUAJIT_PATH \\\n && git -C $LUAJIT_PATH checkout tags/v$LUAJIT_VERSION \\\n && make -C $LUAJIT_PATH \\\n && make -C $LUAJIT_PATH install \\\n && : \"---------- download and install luarocks (depends on luajit) ----------\" \\\n && git clone $LUAROCKS_URL $LUAROCKS_PATH \\\n && git -C $LUAROCKS_PATH checkout tags/v$LUAROCKS_VERSION \\\n && ln -s /usr/local/bin/luajit-$LUAJIT_VERSION /usr/local/bin/lua \\\n && cd $LUAROCKS_PATH \\\n && ./configure --with-lua-bin=/usr/local/bin --with-lua-include=/usr/src/luajit/src/ \\\n && make build \\\n && make install \\\n && cd \\\n && : \"---------- download nginx-upstream-module ----------\" \\\n && git clone \"$NGINX_UPSTREAM_MODULE_URL\" /usr/src/nginx_upstream_module \\\n && git -C /usr/src/nginx_upstream_module checkout \"${NGINX_UPSTREAM_MODULE_COMMIT}\" \\\n && git -C /usr/src/nginx_upstream_module submodule init \\\n && git -C /usr/src/nginx_upstream_module submodule update \\\n && make -C /usr/src/nginx_upstream_module yajl \\\n && make -C /usr/src/nginx_upstream_module msgpack \\\n && : \"---------- download nginx ----------\" \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && : \"---------- verify signatures ----------\" \\\n && mkdir -p /usr/src/nginx \\\n && tar -xzf nginx.tar.gz -C /usr/src/nginx --strip-components=1 \\\n && cd /usr/src/nginx \\\n && : \"---------- build nginx ----------\" \\\n && ./configure --with-cc-opt='-I/usr/src/nginx_upstream_module/third_party/third_party/msgpuck -I /usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/include' --with-ld-opt='/usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/lib/libyajl_s.a -L /usr/src/nginx_upstream_module/third_party/third_party/msgpuck' --add-module=/usr/src/nginx_upstream_module --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_perl_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-file-aio --with-http_v2_module --with-ipv6 --with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\" --add-module=$NGINX_DEVEL_KIT_PATH --add-module=$NGINX_LUA_MODULE_PATH \\\n && make \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && : \"---------- install module deps ----------\" \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .run-deps $runDeps \\\n && : \"---------- install lua rocks ----------\" \\\n && for rock in $LUAROCKS_ROCKS; do luarocks install $rock ; done \\\n && : \"---------- remove build deps ----------\" \\\n && rm -rf /usr/src/nginx \\\n && rm -rf /usr/src/nginx_upstream_module \\\n && apk del .build-deps \\\n && : \"---------- redirect logs to default collector ----------\" \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nVOLUME [\"/var/cache/nginx\"]\nEXPOSE 80/tcp 443/tcp\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"245655d5959c655d065d940dba7378f2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Image includes:\n#   - nginx (with few common modules)\n#   - nginx_upstream_module (for tarantool)\n#   - nginx_lua_module (required by luajit)\n#   - nginx_devel_kit (required by luajit)\n#   - luajit\n#   - luarocks\n#   - lua rock \"lua-cjson\" (is necessary to work with tarantool response, can be extended with env variable)\nFROM alpine:3.5\nMAINTAINER Konstantin Nazarov \"mail@racktear.com\"\nRUN addgroup -S nginx \\\n && adduser -S -G nginx nginx \\\n && apk add --no-cache 'su-exec>=0.2'\nENV NGINX_VERSION=\"1.11.1\" \\\n    NGINX_UPSTREAM_MODULE_URL=\"https://github.com/tarantool/nginx_upstream_module.git\" \\\n    NGINX_UPSTREAM_MODULE_COMMIT=\"3736239b51cc48776ee49088d7d674ff37791544\" \\\n    NGINX_GPG_KEYS=\"B0F4253373F8F6F510D42178520A9993A1C052F8\"\nENV NGINX_LUA_MODULE_URL=\"https://github.com/openresty/lua-nginx-module\" \\\n    NGINX_LUA_MODULE_PATH=\"/usr/src/lua-nginx-module\"\nENV NGINX_DEVEL_KIT_URL=\"https://github.com/simpl/ngx_devel_kit\" \\\n    NGINX_DEVEL_KIT_PATH=\"/usr/src/nginx-devel-kit\"\nENV LUAJIT_VERSION=\"2.0.5\" \\\n    LUAJIT_URL=\"http://luajit.org/git/luajit-2.0.git\" \\\n    LUAJIT_PATH=\"/usr/src/luajit\" \\\n    LUAJIT_LIB=\"/usr/local/lib\" \\\n    LUAJIT_INC=\"/usr/local/include/luajit-2.0\"\nENV LUAROCKS_VERSION=\"2.4.2\" \\\n    LUAROCKS_URL=\"https://github.com/luarocks/luarocks\" \\\n    LUAROCKS_PATH=\"/usr/src/luarocks\"\nENV LUAROCKS_ROCKS=\"lua-cjson\"\nRUN set -x \\\n && apk add --no-cache --virtual .build-deps build-base cmake linux-headers libressl-dev pcre-dev zlib-dev libxslt-dev gd-dev geoip-dev git tar gnupg curl perl-dev unzip gcc perl \\\n && apk add --no-cache --virtual .run-deps ca-certificates libressl pcre zlib libxslt gd geoip gettext libgcc \\\n && git config --global http.postBuffer 524288000 \\\n && : \"---------- download nginx-devel-kit ----------\" \\\n && git clone \"$NGINX_DEVEL_KIT_URL\" $NGINX_DEVEL_KIT_PATH \\\n && : \"---------- download nginx-lua-module ----------\" \\\n && git clone \"$NGINX_LUA_MODULE_URL\" $NGINX_LUA_MODULE_PATH \\\n && : \"---------- download luajit ----------\" \\\n && git clone \"$LUAJIT_URL\" $LUAJIT_PATH \\\n && git -C $LUAJIT_PATH checkout tags/v$LUAJIT_VERSION \\\n && make -C $LUAJIT_PATH \\\n && make -C $LUAJIT_PATH install \\\n && : \"---------- download and install luarocks (depends on luajit) ----------\" \\\n && git clone $LUAROCKS_URL $LUAROCKS_PATH \\\n && git -C $LUAROCKS_PATH checkout tags/v$LUAROCKS_VERSION \\\n && ln -s /usr/local/bin/luajit-$LUAJIT_VERSION /usr/local/bin/lua \\\n && cd $LUAROCKS_PATH \\\n && ./configure --with-lua-bin=/usr/local/bin --with-lua-include=/usr/src/luajit/src/ \\\n && make build \\\n && make install \\\n && cd \\\n && : \"---------- download nginx-upstream-module ----------\" \\\n && git clone \"$NGINX_UPSTREAM_MODULE_URL\" /usr/src/nginx_upstream_module \\\n && git -C /usr/src/nginx_upstream_module checkout \"${NGINX_UPSTREAM_MODULE_COMMIT}\" \\\n && git -C /usr/src/nginx_upstream_module submodule init \\\n && git -C /usr/src/nginx_upstream_module submodule update \\\n && make -C /usr/src/nginx_upstream_module yajl \\\n && make -C /usr/src/nginx_upstream_module msgpack \\\n && : \"---------- download nginx ----------\" \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && : \"---------- verify signatures ----------\" \\\n && mkdir -p /usr/src/nginx \\\n && tar -xzf nginx.tar.gz -C /usr/src/nginx --strip-components=1 \\\n && cd /usr/src/nginx \\\n && : \"---------- build nginx ----------\" \\\n && ./configure --with-cc-opt='-I/usr/src/nginx_upstream_module/third_party/third_party/msgpuck -I /usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/include' --with-ld-opt='/usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/lib/libyajl_s.a -L /usr/src/nginx_upstream_module/third_party/third_party/msgpuck' --add-module=/usr/src/nginx_upstream_module --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_perl_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-file-aio --with-http_v2_module --with-ipv6 --with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\" --add-module=$NGINX_DEVEL_KIT_PATH --add-module=$NGINX_LUA_MODULE_PATH \\\n && make \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && : \"---------- install module deps ----------\" \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .run-deps $runDeps \\\n && : \"---------- install lua rocks ----------\" \\\n && for rock in $LUAROCKS_ROCKS; do luarocks install $rock ; done \\\n && : \"---------- remove build deps ----------\" \\\n && rm -rf /usr/src/nginx \\\n && rm -rf /usr/src/nginx_upstream_module \\\n && apk del .build-deps \\\n && : \"---------- redirect logs to default collector ----------\" \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nVOLUME [\"/var/cache/nginx\"]\nEXPOSE 80/tcp 443/tcp\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"75ec877599cab53076bac2f6c4bca62a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2e01dcde5ebcd5dcdcdc9ccdf78799cc4878f1ab.dockerfile"}