{"seed":2886624835,"processedDockerfileHash":"b4b3aaff1769bba1d23ba287bebdfc14","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM my-ubuntu:14.04\n#  此images的tags为my-nginx\n#  安装在/usr/src/nginx \n#   see：https://github.com/docker-library/nginx/blob/master/1.7/Dockerfile\n#   原nginx的www：/usr/src/nginx/html\n#   docker run --name nginx -p 80:80 --volumes-from share_volume -v /Users/github/docker_lnmp/nginx/conf/:/usr/src/nginx/conf/ --link php-5.5:php -d  my-nginx\nMAINTAINER aogg\n#   -y为如果提示yes/no，默认yes\nRUN apt-get update \\\n && apt-get install --no-install-recommends libgpg-error0 perl perl-modules xml-core libssl1.0.0 libpcre3 libpcre3-dev libxslt-dev libgd2-dev libgeoip-dev geoip-database libperl-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nARG NGINX_VERSION\nARG NGINX_DIR\nARG NGINX_ARGS\nENV NGINX_VERSION=\"${NGINX_VERSION:-'1.10.1'}\"\n#   注意最后不要有斜线/\nENV NGINX_DIR=\"${NGINX_DIR:-'/usr/src/nginx'}\"\nENV NGINX_ARGS=\"${NGINX_ARGS:-''}\"\nENV NGINX_CONF_DIR=\"$NGINX_DIR/conf\"\n#   see http://nginx.org/en/pgp_keys.html\n#   WARNING: options in `/root/.gnupg/gpg.conf' are not yet active during this run\n#   RUN gpg --keyserver pgp.mit.edu --recv-key \\\n#   \tA09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D \\\n#   \t4C2C85E705DC730833990C38A9376139A524C53E \\\n#   \tB0F4253373F8F6F510D42178520A9993A1C052F8 \\\n#   \t65506C02EFC250F1B7A3D694ECF0E90B2C172083 \\\n#   \t7338973069ED3F443F4D37DFA64FD5B17ADB39A8 \\\n#   \t6E067260B83DCF2CA93C566F518509686C7E5E82 \\\n#   \t573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62\n#   All our runtime and build dependencies, in alphabetical order (to ease maintenance)  原：\n#   分开，上面可使用缓存\nRUN set -x \\\n && nginx_configure_dir='/usr/local/nginx' \\\n && curl -SL \"http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz\" -o nginx.tar.gz \\\n && mkdir -p $NGINX_DIR $nginx_configure_dir \\\n && tar -xvf nginx.tar.gz -C /usr/local/nginx/ --strip-components=1 \\\n && rm nginx.tar.gz* \\\n && cd $nginx_configure_dir \\\n && ./configure --prefix=$NGINX_DIR --conf-path=$NGINX_CONF_DIR/nginx.conf --http-log-path=/proc/self/fd/1 --error-log-path=/proc/self/fd/2 ${NGINX_ARGS} \\\n && make -j\"$( nproc ;)\" \\\n && make install\nENV PATH=\"$NGINX_DIR/sbin:$PATH\"\nWORKDIR $NGINX_DIR\n#   TODO USER www-data\nEXPOSE 80/tcp 443/tcp\n#   保证nginx运行在共享目录后\nVOLUME [\"${NGINX_CONF_DIR}\"]\n#   让nginx在前台运行\nENTRYPOINT [\"nginx\", \"-g\", \"daemon\", \"off\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM my-ubuntu:14.04\n# 此images的tags为my-nginx\n# 安装在/usr/src/nginx \n#  see：https://github.com/docker-library/nginx/blob/master/1.7/Dockerfile\n#  原nginx的www：/usr/src/nginx/html\n#  docker run --name nginx -p 80:80 --volumes-from share_volume -v /Users/github/docker_lnmp/nginx/conf/:/usr/src/nginx/conf/ --link php-5.5:php -d  my-nginx\nMAINTAINER aogg\n#  -y为如果提示yes/no，默认yes\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends libgpg-error0 perl perl-modules xml-core libssl1.0.0 libpcre3 libpcre3-dev libxslt-dev libgd2-dev libgeoip-dev geoip-database libperl-dev \\\n && rm -rf /var/lib/apt/lists/*\nARG NGINX_VERSION\nARG NGINX_DIR\nARG NGINX_ARGS\nENV NGINX_VERSION=\"${NGINX_VERSION:-'1.10.1'}\"\n#  注意最后不要有斜线/\nENV NGINX_DIR=\"${NGINX_DIR:-'/usr/src/nginx'}\"\nENV NGINX_ARGS=\"${NGINX_ARGS:-''}\"\nENV NGINX_CONF_DIR=\"$NGINX_DIR/conf\"\n#  see http://nginx.org/en/pgp_keys.html\n#  WARNING: options in `/root/.gnupg/gpg.conf' are not yet active during this run\n#  RUN gpg --keyserver pgp.mit.edu --recv-key \\\n#  \tA09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D \\\n#  \t4C2C85E705DC730833990C38A9376139A524C53E \\\n#  \tB0F4253373F8F6F510D42178520A9993A1C052F8 \\\n#  \t65506C02EFC250F1B7A3D694ECF0E90B2C172083 \\\n#  \t7338973069ED3F443F4D37DFA64FD5B17ADB39A8 \\\n#  \t6E067260B83DCF2CA93C566F518509686C7E5E82 \\\n#  \t573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62\n#  All our runtime and build dependencies, in alphabetical order (to ease maintenance)  原：\n#  分开，上面可使用缓存\nRUN set -x \\\n && nginx_configure_dir='/usr/local/nginx' \\\n && curl -SL \"http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz\" -o nginx.tar.gz \\\n && mkdir -p $NGINX_DIR $nginx_configure_dir \\\n && tar -xvf nginx.tar.gz -C /usr/local/nginx/ --strip-components=1 \\\n && rm nginx.tar.gz* \\\n && cd $nginx_configure_dir \\\n && ./configure --prefix=$NGINX_DIR --conf-path=$NGINX_CONF_DIR/nginx.conf --http-log-path=/proc/self/fd/1 --error-log-path=/proc/self/fd/2 ${NGINX_ARGS} \\\n && make -j\"$( nproc ;)\" \\\n && make install\nENV PATH=\"$NGINX_DIR/sbin:$PATH\"\nWORKDIR $NGINX_DIR\n#  TODO USER www-data\nEXPOSE 80/tcp 443/tcp\n#  保证nginx运行在共享目录后\nVOLUME [\"${NGINX_CONF_DIR}\"]\n#  让nginx在前台运行\nENTRYPOINT [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"57aa9f0122f77eb663a85013ac0e6643","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM my-ubuntu:14.04\n#  此images的tags为my-nginx\n#  安装在/usr/src/nginx \n#   see：https://github.com/docker-library/nginx/blob/master/1.7/Dockerfile\n#   原nginx的www：/usr/src/nginx/html\n#   docker run --name nginx -p 80:80 --volumes-from share_volume -v /Users/github/docker_lnmp/nginx/conf/:/usr/src/nginx/conf/ --link php-5.5:php -d  my-nginx\nMAINTAINER aogg\n#   -y为如果提示yes/no，默认yes\nRUN apt-get update \\\n && apt-get install --no-install-recommends libgpg-error0 perl perl-modules xml-core libssl1.0.0 libpcre3 libpcre3-dev libxslt-dev libgd2-dev libgeoip-dev geoip-database libperl-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nARG NGINX_VERSION\nARG NGINX_DIR\nARG NGINX_ARGS\nENV NGINX_VERSION=\"${NGINX_VERSION:-'1.10.1'}\"\n#   注意最后不要有斜线/\nENV NGINX_DIR=\"${NGINX_DIR:-'/usr/src/nginx'}\"\nENV NGINX_ARGS=\"${NGINX_ARGS:-''}\"\nENV NGINX_CONF_DIR=\"$NGINX_DIR/conf\"\n#   see http://nginx.org/en/pgp_keys.html\n#   WARNING: options in `/root/.gnupg/gpg.conf' are not yet active during this run\n#   RUN gpg --keyserver pgp.mit.edu --recv-key \\\n#   \tA09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D \\\n#   \t4C2C85E705DC730833990C38A9376139A524C53E \\\n#   \tB0F4253373F8F6F510D42178520A9993A1C052F8 \\\n#   \t65506C02EFC250F1B7A3D694ECF0E90B2C172083 \\\n#   \t7338973069ED3F443F4D37DFA64FD5B17ADB39A8 \\\n#   \t6E067260B83DCF2CA93C566F518509686C7E5E82 \\\n#   \t573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62\n#   All our runtime and build dependencies, in alphabetical order (to ease maintenance)  原：\n#   分开，上面可使用缓存\nRUN set -x \\\n && nginx_configure_dir='/usr/local/nginx' \\\n && curl -SL \"http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz\" -o nginx.tar.gz \\\n && mkdir -p $NGINX_DIR $nginx_configure_dir \\\n && tar -xvf nginx.tar.gz -C /usr/local/nginx/ --strip-components=1 \\\n && rm nginx.tar.gz* \\\n && cd $nginx_configure_dir \\\n && ./configure --prefix=$NGINX_DIR --conf-path=$NGINX_CONF_DIR/nginx.conf --http-log-path=/proc/self/fd/1 --error-log-path=/proc/self/fd/2 ${NGINX_ARGS} \\\n && make -j\"$( nproc ;)\" \\\n && make install\nENV PATH=\"$NGINX_DIR/sbin:$PATH\"\nWORKDIR $NGINX_DIR\n#   TODO USER www-data\nEXPOSE 80/tcp 443/tcp\n#   保证nginx运行在共享目录后\nVOLUME [\"${NGINX_CONF_DIR}\"]\n#   让nginx在前台运行\nENTRYPOINT [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"4f4588ead91501305940fab005156f90","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/133893abef7a8345d995fdf48148fb9c0a9cbc19.dockerfile"}