{"seed":227700798,"processedDockerfileHash":"831572c20df79ffed5d2ce4abc36e07b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM counterparty/base\nMAINTAINER Counterparty Developers <dev@counterparty.io>\n#   install additional deps\nRUN : \\\n && apt-get upgrade -y \\\n && :\nRUN (apt-get update ;apt-get install --no-install-recommends ssl-cert=1.1.2 make=4.3-4.1build1 libpcre3-dev=2:8.39-15 libxslt1-dev=1.1.35-1 libgeoip-dev=1.6.12-10 unzip=6.0-27ubuntu1 zip=3.0-13 build-essential=12.9ubuntu3 libssl-dev=3.0.8-1ubuntu1 libxslt1.1=1.1.35-1 libgeoip1=1.6.12-10 geoip-database=20230203-1 libpcre3=2:8.39-15 libgd2-xpm-dev -y )\n#   install nginx\nENV OPENRESTY_VER=\"1.9.7.4\"\nRUN wget -O /tmp/nginx-openresty.tar.gz http://openresty.org/download/openresty-${OPENRESTY_VER}.tar.gz\nRUN mkdir -p /tmp/ngx_openresty-${OPENRESTY_VER} \\\n && tar xfzv /tmp/nginx-openresty.tar.gz -C /tmp/ngx_openresty-${OPENRESTY_VER} --strip-components 1\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VER} \\\n && ./configure --with-luajit --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --lock-path=/var/lock/nginx.lock --pid-path=/var/run/nginx.pid --with-http_geoip_module --with-http_gzip_static_module --with-http_realip_module --with-http_ssl_module --with-http_sub_module --with-http_xslt_module --with-ipv6 --with-sha1=/usr/include/openssl --with-md5=/usr/include/openssl --with-http_stub_status_module --with-http_secure_link_module --with-http_sub_module \\\n && make -j2\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VER} \\\n && make install\nRUN mkdir -p /var/lib/nginx/{body,fastcgi,proxy,scgi,uwsgi}\n#   copy over nginx config\nRUN mkdir -p /etc/nginx/sites-enabled\nCOPY docker/nginx/nginx.conf /etc/nginx/nginx.conf\n#   dont copy over docker/nginx/counterwallet.conf.template -- that is moved over at runtime in docker/start.sh\nCOPY docker/nginx/counterblock_api.inc /etc/nginx/sites-enabled/counterblock_api.inc\nCOPY docker/nginx/counterblock_api_cache.inc /etc/nginx/sites-enabled/counterblock_api_cache.inc\nCOPY docker/nginx/counterblock_socketio.inc /etc/nginx/sites-enabled/counterblock_socketio.inc\nCOPY docker/nginx/upgrade_root /var/www_upgrade_root\nRUN chmod -R 0755 /etc/nginx/nginx.conf /etc/nginx/sites-enabled /var/www_upgrade_root\nCOPY docker/start.sh /usr/local/bin/start.sh\nRUN chmod a+x /usr/local/bin/start.sh\n#   set up default SSL certs to be self-signed (can be replaced later)\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ssl-cert=1.1.2 -y )\nRUN mkdir /ssl_config\nRUN cp -a /etc/ssl/certs/ssl-cert-snakeoil.pem /ssl_config/counterwallet.pem\nRUN cp -a /etc/ssl/private/ssl-cert-snakeoil.key /ssl_config/counterwallet.key\n#   add bare counterblock share dir (which should be mounted over)\nRUN mkdir -p /counterblock_data/asset_img /counterblock_data/asset_img.testnet\n#   Install newest stable nodejs\n#   (the `nodejs` package includes `npm`)\nRUN : \\\n && apt-get -y remove nodejs npm gyp\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends nodejs=18.13.0+dfsg1-1ubuntu2 -y )\n#   Add transifex auth data if available\nARG TRANSIFEX_USER=\"\"\nENV TRANSIFEX_USER=\"${TRANSIFEX_USER}\"\nARG TRANSIFEX_PASSWORD=\"\"\nENV TRANSIFEX_PASSWORD=\"${TRANSIFEX_PASSWORD}\"\nRUN if [ -n \"$TRANSIFEX_USER\" ] \\\n && [ -n \"$TRANSIFEX_PASSWORD\" ] ; then echo \"$TRANSIFEX_USER:$TRANSIFEX_PASSWORD\" > /root/.transifex; fi\n#   Global stuff moved here to speed up build times just for code changes\nRUN npm config set strict-ssl false\nENV PHANTOMJS_CDNURL=\"http://cnpmjs.org/downloads\"\nRUN npm install bower@1.8.14 grunt@1.6.1 browserify@17.0.0 uglify-es@3.3.9 -g\nRUN npm install mocha-phantomjs@4.1.0 --unsafe-perm -g\n#   Install project\nCOPY . /counterwallet\nRUN rm -rf /counterwallet/build\nWORKDIR /counterwallet\nRUN git rev-parse HEAD\nRUN cd src ; bower --allow-root --config.interactive=false update ; cd ..\nRUN cd src/vendors/bitcoinjs-lib ; npm install ; browserify --standalone bitcoinjs src/index.js | uglifyjs -c --mangle reserved=['BigInteger','ECPair','Point'] -o bitcoinjs.min.js ; cd ../../../\nRUN npm install\nRUN npm update\nRUN grunt build --dontcheckdeps --dontminify\n#   We gotta grunt build 2 times, bitcoinjs-lib gets mangled horribly if not --dontminify above\nRUN grunt build\nRUN rm -f /root/.transifex\nEXPOSE 80/tcp 443/tcp\n#   forward nginx request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#   REMOVE THIS LINE LATER\n#  RUN apt-get update && apt-get -y install gettext-base\n#   Copy configuration at last to speed up config changes\nRUN cp -a /counterwallet/counterwallet.conf.json.example /counterwallet/counterwallet.conf.json\nCMD [\"start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM counterparty/base\nMAINTAINER Counterparty Developers <dev@counterparty.io>\n#  install additional deps\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get update\nRUN apt-get install ssl-cert make libpcre3-dev libxslt1-dev libgeoip-dev unzip zip build-essential libssl-dev libxslt1.1 libgeoip1 geoip-database libpcre3 libgd2-xpm-dev -y\n#  install nginx\nENV OPENRESTY_VER=\"1.9.7.4\"\nRUN wget -O /tmp/nginx-openresty.tar.gz http://openresty.org/download/openresty-${OPENRESTY_VER}.tar.gz\nRUN mkdir -p /tmp/ngx_openresty-${OPENRESTY_VER} \\\n && tar xfzv /tmp/nginx-openresty.tar.gz -C /tmp/ngx_openresty-${OPENRESTY_VER} --strip-components 1\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VER} \\\n && ./configure --with-luajit --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --lock-path=/var/lock/nginx.lock --pid-path=/var/run/nginx.pid --with-http_geoip_module --with-http_gzip_static_module --with-http_realip_module --with-http_ssl_module --with-http_sub_module --with-http_xslt_module --with-ipv6 --with-sha1=/usr/include/openssl --with-md5=/usr/include/openssl --with-http_stub_status_module --with-http_secure_link_module --with-http_sub_module \\\n && make -j2\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VER} \\\n && make install\nRUN mkdir -p /var/lib/nginx/{body,fastcgi,proxy,scgi,uwsgi}\n#  copy over nginx config\nRUN mkdir -p /etc/nginx/sites-enabled\nCOPY docker/nginx/nginx.conf /etc/nginx/nginx.conf\n#  dont copy over docker/nginx/counterwallet.conf.template -- that is moved over at runtime in docker/start.sh\nCOPY docker/nginx/counterblock_api.inc /etc/nginx/sites-enabled/counterblock_api.inc\nCOPY docker/nginx/counterblock_api_cache.inc /etc/nginx/sites-enabled/counterblock_api_cache.inc\nCOPY docker/nginx/counterblock_socketio.inc /etc/nginx/sites-enabled/counterblock_socketio.inc\nCOPY docker/nginx/upgrade_root /var/www_upgrade_root\nRUN chmod -R 0755 /etc/nginx/nginx.conf /etc/nginx/sites-enabled /var/www_upgrade_root\nCOPY docker/start.sh /usr/local/bin/start.sh\nRUN chmod a+x /usr/local/bin/start.sh\n#  set up default SSL certs to be self-signed (can be replaced later)\nRUN apt-get update \\\n && apt-get install ssl-cert -y\nRUN mkdir /ssl_config\nRUN cp -a /etc/ssl/certs/ssl-cert-snakeoil.pem /ssl_config/counterwallet.pem\nRUN cp -a /etc/ssl/private/ssl-cert-snakeoil.key /ssl_config/counterwallet.key\n#  add bare counterblock share dir (which should be mounted over)\nRUN mkdir -p /counterblock_data/asset_img /counterblock_data/asset_img.testnet\n#  Install newest stable nodejs\n#  (the `nodejs` package includes `npm`)\nRUN apt-get update \\\n && apt-get -y remove nodejs npm gyp\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\nRUN apt-get update \\\n && apt-get install nodejs -y\n#  Add transifex auth data if available\nARG TRANSIFEX_USER=\"\"\nENV TRANSIFEX_USER=\"${TRANSIFEX_USER}\"\nARG TRANSIFEX_PASSWORD=\"\"\nENV TRANSIFEX_PASSWORD=\"${TRANSIFEX_PASSWORD}\"\nRUN if [ -n \"$TRANSIFEX_USER\" ] \\\n && [ -n \"$TRANSIFEX_PASSWORD\" ] ; then echo \"$TRANSIFEX_USER:$TRANSIFEX_PASSWORD\" > /root/.transifex; fi\n#  Global stuff moved here to speed up build times just for code changes\nRUN npm config set strict-ssl false\nENV PHANTOMJS_CDNURL=\"http://cnpmjs.org/downloads\"\nRUN npm install bower grunt browserify uglify-es -g\nRUN npm install mocha-phantomjs --unsafe-perm -g\n#  Install project\nCOPY . /counterwallet\nRUN rm -rf /counterwallet/build\nWORKDIR /counterwallet\nRUN git rev-parse HEAD\nRUN cd src ; bower --allow-root --config.interactive=false update ; cd ..\nRUN cd src/vendors/bitcoinjs-lib ; npm install ; browserify --standalone bitcoinjs src/index.js | uglifyjs -c --mangle reserved=['BigInteger','ECPair','Point'] -o bitcoinjs.min.js ; cd ../../../\nRUN npm install\nRUN npm update\nRUN grunt build --dontcheckdeps --dontminify\n#  We gotta grunt build 2 times, bitcoinjs-lib gets mangled horribly if not --dontminify above\nRUN grunt build\nRUN rm -f /root/.transifex\nEXPOSE 80/tcp 443/tcp\n#  forward nginx request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#  REMOVE THIS LINE LATER\n# RUN apt-get update && apt-get -y install gettext-base\n#  Copy configuration at last to speed up config changes\nRUN cp -a /counterwallet/counterwallet.conf.json.example /counterwallet/counterwallet.conf.json\nCMD [\"start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"c12ee89ac6e71a401d00ebc70d92703e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM counterparty/base\nMAINTAINER Counterparty Developers <dev@counterparty.io>\n#   install additional deps\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get update\nRUN apt-get install ssl-cert make libpcre3-dev libxslt1-dev libgeoip-dev unzip zip build-essential libssl-dev libxslt1.1 libgeoip1 geoip-database libpcre3 libgd2-xpm-dev -y\n#   install nginx\nENV OPENRESTY_VER=\"1.9.7.4\"\nRUN wget -O /tmp/nginx-openresty.tar.gz http://openresty.org/download/openresty-${OPENRESTY_VER}.tar.gz\nRUN mkdir -p /tmp/ngx_openresty-${OPENRESTY_VER} \\\n && tar xfzv /tmp/nginx-openresty.tar.gz -C /tmp/ngx_openresty-${OPENRESTY_VER} --strip-components 1\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VER} \\\n && ./configure --with-luajit --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --lock-path=/var/lock/nginx.lock --pid-path=/var/run/nginx.pid --with-http_geoip_module --with-http_gzip_static_module --with-http_realip_module --with-http_ssl_module --with-http_sub_module --with-http_xslt_module --with-ipv6 --with-sha1=/usr/include/openssl --with-md5=/usr/include/openssl --with-http_stub_status_module --with-http_secure_link_module --with-http_sub_module \\\n && make -j2\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VER} \\\n && make install\nRUN mkdir -p /var/lib/nginx/{body,fastcgi,proxy,scgi,uwsgi}\n#   copy over nginx config\nRUN mkdir -p /etc/nginx/sites-enabled\nCOPY docker/nginx/nginx.conf /etc/nginx/nginx.conf\n#   dont copy over docker/nginx/counterwallet.conf.template -- that is moved over at runtime in docker/start.sh\nCOPY docker/nginx/counterblock_api.inc /etc/nginx/sites-enabled/counterblock_api.inc\nCOPY docker/nginx/counterblock_api_cache.inc /etc/nginx/sites-enabled/counterblock_api_cache.inc\nCOPY docker/nginx/counterblock_socketio.inc /etc/nginx/sites-enabled/counterblock_socketio.inc\nCOPY docker/nginx/upgrade_root /var/www_upgrade_root\nRUN chmod -R 0755 /etc/nginx/nginx.conf /etc/nginx/sites-enabled /var/www_upgrade_root\nCOPY docker/start.sh /usr/local/bin/start.sh\nRUN chmod a+x /usr/local/bin/start.sh\n#   set up default SSL certs to be self-signed (can be replaced later)\nRUN apt-get update \\\n && apt-get install ssl-cert -y\nRUN mkdir /ssl_config\nRUN cp -a /etc/ssl/certs/ssl-cert-snakeoil.pem /ssl_config/counterwallet.pem\nRUN cp -a /etc/ssl/private/ssl-cert-snakeoil.key /ssl_config/counterwallet.key\n#   add bare counterblock share dir (which should be mounted over)\nRUN mkdir -p /counterblock_data/asset_img /counterblock_data/asset_img.testnet\n#   Install newest stable nodejs\n#   (the `nodejs` package includes `npm`)\nRUN apt-get update \\\n && apt-get -y remove nodejs npm gyp\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\nRUN apt-get update \\\n && apt-get install nodejs -y\n#   Add transifex auth data if available\nARG TRANSIFEX_USER=\"\"\nENV TRANSIFEX_USER=\"${TRANSIFEX_USER}\"\nARG TRANSIFEX_PASSWORD=\"\"\nENV TRANSIFEX_PASSWORD=\"${TRANSIFEX_PASSWORD}\"\nRUN if [ -n \"$TRANSIFEX_USER\" ] \\\n && [ -n \"$TRANSIFEX_PASSWORD\" ] ; then echo \"$TRANSIFEX_USER:$TRANSIFEX_PASSWORD\" > /root/.transifex; fi\n#   Global stuff moved here to speed up build times just for code changes\nRUN npm config set strict-ssl false\nENV PHANTOMJS_CDNURL=\"http://cnpmjs.org/downloads\"\nRUN npm install bower grunt browserify uglify-es -g\nRUN npm install mocha-phantomjs --unsafe-perm -g\n#   Install project\nCOPY . /counterwallet\nRUN rm -rf /counterwallet/build\nWORKDIR /counterwallet\nRUN git rev-parse HEAD\nRUN cd src ; bower --allow-root --config.interactive=false update ; cd ..\nRUN cd src/vendors/bitcoinjs-lib ; npm install ; browserify --standalone bitcoinjs src/index.js | uglifyjs -c --mangle reserved=['BigInteger','ECPair','Point'] -o bitcoinjs.min.js ; cd ../../../\nRUN npm install\nRUN npm update\nRUN grunt build --dontcheckdeps --dontminify\n#   We gotta grunt build 2 times, bitcoinjs-lib gets mangled horribly if not --dontminify above\nRUN grunt build\nRUN rm -f /root/.transifex\nEXPOSE 80/tcp 443/tcp\n#   forward nginx request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#   REMOVE THIS LINE LATER\n#  RUN apt-get update && apt-get -y install gettext-base\n#   Copy configuration at last to speed up config changes\nRUN cp -a /counterwallet/counterwallet.conf.json.example /counterwallet/counterwallet.conf.json\nCMD [\"start.sh\"]\n","originalDockerfileUglifiedHash":"ce9c5e4f9db7efb58165a4b76cd4fa4d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1a7edb62e9f55ccd7c2c67a0b2e0d175f5810814.dockerfile"}