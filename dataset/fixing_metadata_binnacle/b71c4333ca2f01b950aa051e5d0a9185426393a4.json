{"seed":2982754260,"processedDockerfileHash":"3282e8c084ce5971dae46b8704f0b066","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   Set the base image to Ubuntu\nFROM ubuntu:trusty\n#   File Author / Maintainer\nMAINTAINER bitponics\n#  ################# UPDATE apt-GET ######################\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN echo \"deb http://archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list\nRUN sudo apt-get update\nRUN sudo apt-get upgrade -y\n#  ################# INSTALL SSH AND SUPERVISOR AND CREATE DIRS ######################\nRUN apt-get install --no-install-recommends openssh-server=1:6.6p1-2ubuntu2.13 supervisor=3.0b2-1ubuntu0.1 -y\nRUN mkdir -p /var/run/sshd\nRUN mkdir -p /var/log/supervisor\n#  #################### SUPERVISOR - ADD CONFIG #####################\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  ################# MONGO - BEGIN INSTALLATION ######################\n#   Install MongoDB Following the Instructions at MongoDB Docs\n#   Ref: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/\n#   Add the package verification key\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\n#   Add MongoDB to the repository sources list\nRUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list\n#   update packages\nRUN sudo apt-get update\n#   Install MongoDB package (.deb)\nRUN sudo apt-get install -y mongodb-10gen\n#   Create the default data directory\nRUN mkdir -p /data/db\n#   Expose the default port\nEXPOSE 27017/tcp\n#   Default port to execute the entrypoint (MongoDB)\n#  CMD [\"--port 27017\"]\n#   Set default container command\n#   ENTRYPOINT usr/bin/mongod\n#  #################### MONGO - INSTALLATION END #####################\n#  #################### REDIS - INSTALLATION START #####################\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis \\\n && useradd -r -g redis redis\nRUN sudo apt-get install -y redis-server\n#   update packages\n#  RUN apt-get update\n#\n#  RUN apt-get install -y build-essential tcl valgrind\n#\n#  ADD . /usr/src/redis\n#\n#  RUN make -C /usr/src/redis\n#\n#  # in initial testing, \"make test\" was failing for reasons that were very hard to track down (so for now, we run them, but don't worry about them #failing)\n#  RUN make -C /usr/src/redis test || true\n#\n#  RUN make -C /usr/src/redis install\n#\nUSER redis\nEXPOSE 6379/tcp\n#   CMD [ \"redis-server\", \"--bind\", \"0.0.0.0\" ]\n#  #################### REDIS - INSTALLATION END #####################\n#  #################### NODE #####################\nFROM dockerfile/python\nRUN cd /tmp \\\n && wget http://nodejs.org/dist/node-latest.tar.gz \\\n && tar xvzf node-latest.tar.gz \\\n && rm -f node-latest.tar.gz \\\n && cd node-v* \\\n && ./configure \\\n && CXX=\"g++ -Wno-unused-local-typedefs\" make \\\n && CXX=\"g++ -Wno-unused-local-typedefs\" make install \\\n && cd /tmp \\\n && rm -rf /tmp/node-v* \\\n && echo '\\n# Node.js\\nexport PATH=\"node_modules/.bin:$PATH\"' >> /root/.bash_profile\nRUN sudo apt-get install -y npm\nCOPY . /usr/src/app\nWORKDIR /usr/src/app\n#   install your application's dependencies\nRUN npm install\n#   replace this with your application's default port\nEXPOSE 80/tcp\n#  ##################### END NODE #####################\n#  #################### RUN COMMANDS VIA SUPERVISOR #####################\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n#  ##\n#  # NodeJS MongoDB Redis\n#  #\n#  # This creates an image which contains an environment for NodeJS app ecosystem\n#  # - Node.js 0.10.23\n#  # - MongoDB 2.4.8\n#  # - Redis 2.4.15\n#  ##\n#\n#  FROM truongsinh/nodejs\n#\n#  MAINTAINER TruongSinh Tran-Nguyen <i@truongsinh.pro>\n#\n#  # Fix upstart under a virtual host https://github.com/dotcloud/docker/issues/1024\n#  RUN dpkg-divert --local --rename --add /sbin/initctl \\\n#   && ln -s /bin/true /sbin/initctl\n#\n#  # Configure Package Management System (APT) & install MongoDB\n#  RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n#   && echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list \\\n#   && apt-get update \\\n#   && apt-get install -y mongodb-10gen\n#\n#  # Redis server\n#  RUN apt-get install -y redis-server\n#\n#  # Start MongoDB\n#  CMD mongod --fork -f /etc/mongodb.conf \\\n#   && redis-server /etc/redis/redis.conf \\\n#   && bash\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Set the base image to Ubuntu\nFROM ubuntu:trusty\n#  File Author / Maintainer\nMAINTAINER bitponics\n# ################# UPDATE apt-GET ######################\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN echo \"deb http://archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list\nRUN sudo apt-get update\nRUN sudo apt-get upgrade -y\n# ################# INSTALL SSH AND SUPERVISOR AND CREATE DIRS ######################\nRUN apt-get install openssh-server supervisor -y\nRUN mkdir -p /var/run/sshd\nRUN mkdir -p /var/log/supervisor\n# #################### SUPERVISOR - ADD CONFIG #####################\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n# ################# MONGO - BEGIN INSTALLATION ######################\n#  Install MongoDB Following the Instructions at MongoDB Docs\n#  Ref: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/\n#  Add the package verification key\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\n#  Add MongoDB to the repository sources list\nRUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list\n#  update packages\nRUN sudo apt-get update\n#  Install MongoDB package (.deb)\nRUN sudo apt-get install -y mongodb-10gen\n#  Create the default data directory\nRUN mkdir -p /data/db\n#  Expose the default port\nEXPOSE 27017/tcp\n#  Default port to execute the entrypoint (MongoDB)\n# CMD [\"--port 27017\"]\n#  Set default container command\n#  ENTRYPOINT usr/bin/mongod\n# #################### MONGO - INSTALLATION END #####################\n# #################### REDIS - INSTALLATION START #####################\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis \\\n && useradd -r -g redis redis\nRUN sudo apt-get install -y redis-server\n#  update packages\n# RUN apt-get update\n#\n# RUN apt-get install -y build-essential tcl valgrind\n#\n# ADD . /usr/src/redis\n#\n# RUN make -C /usr/src/redis\n#\n# # in initial testing, \"make test\" was failing for reasons that were very hard to track down (so for now, we run them, but don't worry about them #failing)\n# RUN make -C /usr/src/redis test || true\n#\n# RUN make -C /usr/src/redis install\n#\nUSER redis\nEXPOSE 6379/tcp\n#  CMD [ \"redis-server\", \"--bind\", \"0.0.0.0\" ]\n# #################### REDIS - INSTALLATION END #####################\n# #################### NODE #####################\nFROM dockerfile/python\nRUN cd /tmp \\\n && wget http://nodejs.org/dist/node-latest.tar.gz \\\n && tar xvzf node-latest.tar.gz \\\n && rm -f node-latest.tar.gz \\\n && cd node-v* \\\n && ./configure \\\n && CXX=\"g++ -Wno-unused-local-typedefs\" make \\\n && CXX=\"g++ -Wno-unused-local-typedefs\" make install \\\n && cd /tmp \\\n && rm -rf /tmp/node-v* \\\n && echo '\\n# Node.js\\nexport PATH=\"node_modules/.bin:$PATH\"' >> /root/.bash_profile\nRUN sudo apt-get install -y npm\nADD . /usr/src/app\nWORKDIR /usr/src/app\n#  install your application's dependencies\nRUN npm install\n#  replace this with your application's default port\nEXPOSE 80/tcp\n# ##################### END NODE #####################\n# #################### RUN COMMANDS VIA SUPERVISOR #####################\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n# ##\n# # NodeJS MongoDB Redis\n# #\n# # This creates an image which contains an environment for NodeJS app ecosystem\n# # - Node.js 0.10.23\n# # - MongoDB 2.4.8\n# # - Redis 2.4.15\n# ##\n#\n# FROM truongsinh/nodejs\n#\n# MAINTAINER TruongSinh Tran-Nguyen <i@truongsinh.pro>\n#\n# # Fix upstart under a virtual host https://github.com/dotcloud/docker/issues/1024\n# RUN dpkg-divert --local --rename --add /sbin/initctl \\\n#  && ln -s /bin/true /sbin/initctl\n#\n# # Configure Package Management System (APT) & install MongoDB\n# RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n#  && echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list \\\n#  && apt-get update \\\n#  && apt-get install -y mongodb-10gen\n#\n# # Redis server\n# RUN apt-get install -y redis-server\n#\n# # Start MongoDB\n# CMD mongod --fork -f /etc/mongodb.conf \\\n#  && redis-server /etc/redis/redis.conf \\\n#  && bash\n","injectedSmells":[],"originalDockerfileHash":"0ff6fa85f4d31131b915657db1c937d4","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Set the base image to Ubuntu\nFROM ubuntu:trusty\n#   File Author / Maintainer\nMAINTAINER bitponics\n#  ################# UPDATE apt-GET ######################\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN echo \"deb http://archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list\nRUN sudo apt-get update\nRUN sudo apt-get upgrade -y\n#  ################# INSTALL SSH AND SUPERVISOR AND CREATE DIRS ######################\nRUN apt-get install openssh-server supervisor -y\nRUN mkdir -p /var/run/sshd\nRUN mkdir -p /var/log/supervisor\n#  #################### SUPERVISOR - ADD CONFIG #####################\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  ################# MONGO - BEGIN INSTALLATION ######################\n#   Install MongoDB Following the Instructions at MongoDB Docs\n#   Ref: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/\n#   Add the package verification key\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\n#   Add MongoDB to the repository sources list\nRUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list\n#   update packages\nRUN sudo apt-get update\n#   Install MongoDB package (.deb)\nRUN sudo apt-get install -y mongodb-10gen\n#   Create the default data directory\nRUN mkdir -p /data/db\n#   Expose the default port\nEXPOSE 27017/tcp\n#   Default port to execute the entrypoint (MongoDB)\n#  CMD [\"--port 27017\"]\n#   Set default container command\n#   ENTRYPOINT usr/bin/mongod\n#  #################### MONGO - INSTALLATION END #####################\n#  #################### REDIS - INSTALLATION START #####################\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis \\\n && useradd -r -g redis redis\nRUN sudo apt-get install -y redis-server\n#   update packages\n#  RUN apt-get update\n#\n#  RUN apt-get install -y build-essential tcl valgrind\n#\n#  ADD . /usr/src/redis\n#\n#  RUN make -C /usr/src/redis\n#\n#  # in initial testing, \"make test\" was failing for reasons that were very hard to track down (so for now, we run them, but don't worry about them #failing)\n#  RUN make -C /usr/src/redis test || true\n#\n#  RUN make -C /usr/src/redis install\n#\nUSER redis\nEXPOSE 6379/tcp\n#   CMD [ \"redis-server\", \"--bind\", \"0.0.0.0\" ]\n#  #################### REDIS - INSTALLATION END #####################\n#  #################### NODE #####################\nFROM dockerfile/python\nRUN cd /tmp \\\n && wget http://nodejs.org/dist/node-latest.tar.gz \\\n && tar xvzf node-latest.tar.gz \\\n && rm -f node-latest.tar.gz \\\n && cd node-v* \\\n && ./configure \\\n && CXX=\"g++ -Wno-unused-local-typedefs\" make \\\n && CXX=\"g++ -Wno-unused-local-typedefs\" make install \\\n && cd /tmp \\\n && rm -rf /tmp/node-v* \\\n && echo '\\n# Node.js\\nexport PATH=\"node_modules/.bin:$PATH\"' >> /root/.bash_profile\nRUN sudo apt-get install -y npm\nADD . /usr/src/app\nWORKDIR /usr/src/app\n#   install your application's dependencies\nRUN npm install\n#   replace this with your application's default port\nEXPOSE 80/tcp\n#  ##################### END NODE #####################\n#  #################### RUN COMMANDS VIA SUPERVISOR #####################\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n#  ##\n#  # NodeJS MongoDB Redis\n#  #\n#  # This creates an image which contains an environment for NodeJS app ecosystem\n#  # - Node.js 0.10.23\n#  # - MongoDB 2.4.8\n#  # - Redis 2.4.15\n#  ##\n#\n#  FROM truongsinh/nodejs\n#\n#  MAINTAINER TruongSinh Tran-Nguyen <i@truongsinh.pro>\n#\n#  # Fix upstart under a virtual host https://github.com/dotcloud/docker/issues/1024\n#  RUN dpkg-divert --local --rename --add /sbin/initctl \\\n#   && ln -s /bin/true /sbin/initctl\n#\n#  # Configure Package Management System (APT) & install MongoDB\n#  RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n#   && echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list \\\n#   && apt-get update \\\n#   && apt-get install -y mongodb-10gen\n#\n#  # Redis server\n#  RUN apt-get install -y redis-server\n#\n#  # Start MongoDB\n#  CMD mongod --fork -f /etc/mongodb.conf \\\n#   && redis-server /etc/redis/redis.conf \\\n#   && bash\n","originalDockerfileUglifiedHash":"641885dd1746fe93fe95829992910a12","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b71c4333ca2f01b950aa051e5d0a9185426393a4.dockerfile"}