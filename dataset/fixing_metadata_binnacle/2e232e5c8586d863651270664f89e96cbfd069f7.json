{"seed":2025096014,"processedDockerfileHash":"f70d10e17d170ec669aecd8cd79d1ecb","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   NGSeasy Base Image\n#   base image\nFROM ubuntu:14.04.1\n#   Maintainer \nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n#   Set correct environment variables.\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Remain current\nRUN : \\\n && apt-get dist-upgrade -y\n#   Basic dependencies\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-utils=1.0.1ubuntu2.24 automake=1:1.14.1-2ubuntu1 ant=1.9.3-2ubuntu0.1 bash=4.3-7ubuntu1.7 binutils=2.24-5ubuntu14.2 perl=5.18.2-2ubuntu1.7 bioperl=1.6.923-1 build-essential=11.6ubuntu6 bzip2=1.0.6-5 c++11 cdbs=0.4.122ubuntu2 cmake=2.8.12.2-0ubuntu3 cron=3.0pl1-124ubuntu2 curl=7.35.0-1ubuntu2.20 dkms=2.2.0.3-1.1ubuntu5.14.04.10 dpkg-dev=1.17.5ubuntu5.8 g++=4:4.8.2-1ubuntu6 gpp=2.24-3 gcc=4:4.8.2-1ubuntu6 gfortran=4:4.8.2-1ubuntu6 git=1:1.9.1-1ubuntu0.10 git-core=1:1.9.1-1ubuntu0.10 libblas-dev=1.2.20110419-7 libatlas-dev=3.10.1-4 libbz2-dev=1.0.6-5 liblzma-dev=5.1.1alpha+20120614-2ubuntu2 libpcre3-dev=1:8.31-2ubuntu2.3 libreadline-dev=6.3-4ubuntu2 make=3.81-8.2ubuntu3 mercurial=2.8.2-1ubuntu1.4 php5-curl=5.5.9+dfsg-1ubuntu4.29 python=2.7.5-5ubuntu3 python-dev=2.7.5-5ubuntu3 python-yaml=3.10-4ubuntu0.1 ncurses-dev zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 python-numpy=1:1.8.2-0ubuntu0.1 python-pip=1.5.4-1ubuntu4 sudo=1.8.9p5-1ubuntu1.4 subversion=1.8.8-1ubuntu3.3 tabix=0.2.6-2 tree=1.6.0-1 unzip=6.0-9ubuntu1.5 vim=2:7.4.052-1ubuntu3.1 wget=1.15-1ubuntu1.14.04.5 python-software-properties=0.92.37.8 libc-bin=2.19-0ubuntu6.15 llvm=1:3.4-0ubuntu1 libconfig-dev=1.4.9-2 ncurses-dev zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 yum=3.4.3-2ubuntu1 libX11-dev libXpm-dev libXft-dev libXext-dev asciidoc=8.6.9-2ubuntu1 -y )\n#  ---------------------------------JAVA-------------------------------------------------------------------------------------#  \n#   upgrade java\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-7-jdk=7u211-2.6.17-0ubuntu0.1 openjdk-7-doc=7u211-2.6.17-0ubuntu0.1 openjdk-7-jre-lib=7u211-2.6.17-0ubuntu0.1 -y )\n#  set java\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java\"\nRUN sed -i 'aPATH=$PATH:/usr/lib/jvm/java-7-openjdk-amd64/jre/bin' /root/.bashrc\n#  -------------------------------Add user----------------------------------------------------------------------------------#\n#   Create a pipeline user:pipeman and group:ngsgroup\nRUN useradd -m -s /bin/bash pipeman \\\n && cd /home/pipeman \\\n && echo \"#bash config file for user pipeman\" >> /home/pipeman/.bashrc\nRUN groupadd ngsgroup \\\n && usermod -aG ngsgroup pipeman \\\n && usermod -aG sudo pipeman\n#  -----------------------------NGS TOOLS DIRECTORY------------------------------------------------------------------------#  \n#  make pipeline install dirs\nRUN mkdir /usr/local/pipeline \\\n && chown pipeman:ngsgroup /usr/local/pipeline \\\n && chmod 775 /usr/local/pipeline\n#  -------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n#  ---------------------------------------------------------------------\n#  Cleanup the temp dir\nRUN rm -rvf /tmp/*\n#  open ports private only\nEXPOSE 8080/tcp\n#   Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get autoclean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  NGSeasy Base Image\n#  base image\nFROM ubuntu:14.04.1\n#  Maintainer \nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n#  Set correct environment variables.\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Remain current\nRUN apt-get update \\\n && apt-get dist-upgrade -y\n#  Basic dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils automake ant bash binutils perl bioperl build-essential bzip2 c++11 cdbs cmake cron curl dkms dpkg-dev g++ gpp gcc gfortran git git-core libblas-dev libatlas-dev libbz2-dev liblzma-dev libpcre3-dev libreadline-dev make mercurial php5-curl python python-dev python-yaml ncurses-dev zlib1g-dev python-numpy python-pip sudo subversion tabix tree unzip vim wget python-software-properties libc-bin llvm libconfig-dev ncurses-dev zlib1g-dev yum libX11-dev libXpm-dev libXft-dev libXext-dev asciidoc -y\n# ---------------------------------JAVA-------------------------------------------------------------------------------------#  \n#  upgrade java\nRUN apt-get install openjdk-7-jdk openjdk-7-doc openjdk-7-jre-lib -y\n# set java\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java\"\nRUN sed -i 'aPATH=$PATH:/usr/lib/jvm/java-7-openjdk-amd64/jre/bin' /root/.bashrc\n# -------------------------------Add user----------------------------------------------------------------------------------#\n#  Create a pipeline user:pipeman and group:ngsgroup\nRUN useradd -m -s /bin/bash pipeman \\\n && cd /home/pipeman \\\n && echo \"#bash config file for user pipeman\" >> /home/pipeman/.bashrc\nRUN groupadd ngsgroup \\\n && usermod -aG ngsgroup pipeman \\\n && usermod -aG sudo pipeman\n# -----------------------------NGS TOOLS DIRECTORY------------------------------------------------------------------------#  \n# make pipeline install dirs\nRUN mkdir /usr/local/pipeline \\\n && chown pipeman:ngsgroup /usr/local/pipeline \\\n && chmod 775 /usr/local/pipeline\n# -------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n# ---------------------------------------------------------------------\n# Cleanup the temp dir\nRUN rm -rvf /tmp/*\n# open ports private only\nEXPOSE 8080/tcp\n#  Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n# Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get autoclean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\n","injectedSmells":[],"originalDockerfileHash":"4609ba3ca4cb7674d0c42a4778b4834e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   NGSeasy Base Image\n#   base image\nFROM ubuntu:14.04.1\n#   Maintainer \nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n#   Set correct environment variables.\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Remain current\nRUN apt-get update \\\n && apt-get dist-upgrade -y\n#   Basic dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils automake ant bash binutils perl bioperl build-essential bzip2 c++11 cdbs cmake cron curl dkms dpkg-dev g++ gpp gcc gfortran git git-core libblas-dev libatlas-dev libbz2-dev liblzma-dev libpcre3-dev libreadline-dev make mercurial php5-curl python python-dev python-yaml ncurses-dev zlib1g-dev python-numpy python-pip sudo subversion tabix tree unzip vim wget python-software-properties libc-bin llvm libconfig-dev ncurses-dev zlib1g-dev yum libX11-dev libXpm-dev libXft-dev libXext-dev asciidoc -y\n#  ---------------------------------JAVA-------------------------------------------------------------------------------------#  \n#   upgrade java\nRUN apt-get install openjdk-7-jdk openjdk-7-doc openjdk-7-jre-lib -y\n#  set java\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java\"\nRUN sed -i 'aPATH=$PATH:/usr/lib/jvm/java-7-openjdk-amd64/jre/bin' /root/.bashrc\n#  -------------------------------Add user----------------------------------------------------------------------------------#\n#   Create a pipeline user:pipeman and group:ngsgroup\nRUN useradd -m -s /bin/bash pipeman \\\n && cd /home/pipeman \\\n && echo \"#bash config file for user pipeman\" >> /home/pipeman/.bashrc\nRUN groupadd ngsgroup \\\n && usermod -aG ngsgroup pipeman \\\n && usermod -aG sudo pipeman\n#  -----------------------------NGS TOOLS DIRECTORY------------------------------------------------------------------------#  \n#  make pipeline install dirs\nRUN mkdir /usr/local/pipeline \\\n && chown pipeman:ngsgroup /usr/local/pipeline \\\n && chmod 775 /usr/local/pipeline\n#  -------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n#  ---------------------------------------------------------------------\n#  Cleanup the temp dir\nRUN rm -rvf /tmp/*\n#  open ports private only\nEXPOSE 8080/tcp\n#   Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get autoclean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\n","originalDockerfileUglifiedHash":"148a62a70803eee8b5f96bb615f4f60f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2e232e5c8586d863651270664f89e96cbfd069f7.dockerfile"}