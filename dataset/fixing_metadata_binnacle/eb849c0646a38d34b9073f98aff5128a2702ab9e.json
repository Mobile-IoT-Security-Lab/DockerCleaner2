{"seed":3747194452,"processedDockerfileHash":"75bf25d0f387e367bec8a7893d83ffe0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:6\nMAINTAINER http://github.com/radiomics\nRUN yum update -y \\\n && yum groupinstall -y \"Development Tools\" \\\n && yum install -y curl curl-devel coreutils freetype-devel gcc gcc-c++ gettext libpng-devel openssl-devel perl perl-CPAN perl-ExtUtils-MakeMaker wget zlib-devel\nWORKDIR /etc/yum.repos.d\nRUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo\nRUN yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-gfortran devtoolset-2-gcc-c++\nENV CC=\"/opt/rh/devtoolset-2/root/usr/bin/gcc\"\nENV CXX=\"/opt/rh/devtoolset-2/root/usr/bin/g++\"\nENV FC=\"/opt/rh/devtoolset-2/root/usr/bin/gfortran\"\n#   Build and install git from source.\n#  WORKDIR /usr/src\n#  ENV GIT_VERSION 2.11.0\n#  RUN wget https://github.com/git/git/archive/v${GIT_VERSION}.tar.gz -O git-${GIT_VERSION}.tar.gz && \\\n#    tar xvzf git-${GIT_VERSION}.tar.gz && \\\n#    cd git-${GIT_VERSION} && \\\n#    make prefix=/usr all && \\\n#    make prefix=/usr install && \\\n#    cd .. && rm -rf git-${GIT_VERSION}*\n#   Build and install git from source.\nWORKDIR /usr/src\nENV GIT_VERSION=\"2.5.0\"\nRUN wget --no-check-certificate https://www.kernel.org/pub/software/scm/git/git-${GIT_VERSION}.tar.gz \\\n && tar xvzf git-${GIT_VERSION}.tar.gz \\\n && cd git-${GIT_VERSION} \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf git-${GIT_VERSION}*\n#   Build and install CMake from source.\nWORKDIR /usr/src\nRUN git clone git://cmake.org/cmake.git CMake \\\n && cd CMake \\\n && git checkout v3.7.2 \\\n && mkdir /usr/src/CMake-build \\\n && cd /usr/src/CMake-build \\\n && /usr/src/CMake/bootstrap --parallel=$( grep -c processor /proc/cpuinfo ;) --prefix=/usr \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && ./bin/cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_USE_OPENSSL:BOOL=ON . \\\n && make install \\\n && cd .. \\\n && rm -rf CMake*\n#   Build and install Python from source.\nWORKDIR /usr/src\nENV PYTHON_VERSION=\"2.7.10\"\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xvzf Python-${PYTHON_VERSION}.tgz \\\n && cd Python-${PYTHON_VERSION} \\\n && ./configure \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf Python-${PYTHON_VERSION}*\n#   Build and install ninja from source.\nWORKDIR /usr/src\nRUN git clone https://github.com/martine/ninja.git \\\n && cd ninja \\\n && git checkout v1.6.0 \\\n && ./configure.py --bootstrap \\\n && mv ninja /usr/bin/ \\\n && cd .. \\\n && rm -rf ninja\n#   Setup necessary python packages\nWORKDIR /usr/src\nRUN python --version \\\n && wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && pip install wheel==0.40.0 > =0.29.0 \\\n && pip install setuptools==67.6.1 > =28.0.0 \\\n && pip install scipy==1.10.1 \\\n && pip install trimesh==3.21.5 \\\n && pip install scikit-image==0.20.0 \\\n && pip install www.itk.org==null SimpleITK==2.2.1 --trusted-host -f https://itk.org/SimpleITKDoxygen/html/PyDownloadPage.html > =0.9.1 \\\n && python -c \"import SimpleITK; print('SimpleITK Version:' + SimpleITK.Version_VersionString())\"\n#   Install PyRadiomics\nWORKDIR /usr/src\nRUN git clone https://github.com/radiomics/pyradiomics.git \\\n && cd pyradiomics \\\n && pip install -r requirements.txt \\\n && python setup.py install\nWORKDIR /usr/src\nENTRYPOINT [\"pyradiomics\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:6\nMAINTAINER http://github.com/radiomics\nRUN yum update -y \\\n && yum groupinstall -y \"Development Tools\" \\\n && yum install -y curl curl-devel coreutils freetype-devel gcc gcc-c++ gettext libpng-devel openssl-devel perl perl-CPAN perl-ExtUtils-MakeMaker wget zlib-devel\nWORKDIR /etc/yum.repos.d\nRUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo\nRUN yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-gfortran devtoolset-2-gcc-c++\nENV CC=\"/opt/rh/devtoolset-2/root/usr/bin/gcc\"\nENV CXX=\"/opt/rh/devtoolset-2/root/usr/bin/g++\"\nENV FC=\"/opt/rh/devtoolset-2/root/usr/bin/gfortran\"\n#  Build and install git from source.\n# WORKDIR /usr/src\n# ENV GIT_VERSION 2.11.0\n# RUN wget https://github.com/git/git/archive/v${GIT_VERSION}.tar.gz -O git-${GIT_VERSION}.tar.gz && \\\n#   tar xvzf git-${GIT_VERSION}.tar.gz && \\\n#   cd git-${GIT_VERSION} && \\\n#   make prefix=/usr all && \\\n#   make prefix=/usr install && \\\n#   cd .. && rm -rf git-${GIT_VERSION}*\n#  Build and install git from source.\nWORKDIR /usr/src\nENV GIT_VERSION=\"2.5.0\"\nRUN wget --no-check-certificate https://www.kernel.org/pub/software/scm/git/git-${GIT_VERSION}.tar.gz \\\n && tar xvzf git-${GIT_VERSION}.tar.gz \\\n && cd git-${GIT_VERSION} \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf git-${GIT_VERSION}*\n#  Build and install CMake from source.\nWORKDIR /usr/src\nRUN git clone git://cmake.org/cmake.git CMake \\\n && cd CMake \\\n && git checkout v3.7.2 \\\n && mkdir /usr/src/CMake-build \\\n && cd /usr/src/CMake-build \\\n && /usr/src/CMake/bootstrap --parallel=$( grep -c processor /proc/cpuinfo ;) --prefix=/usr \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && ./bin/cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_USE_OPENSSL:BOOL=ON . \\\n && make install \\\n && cd .. \\\n && rm -rf CMake*\n#  Build and install Python from source.\nWORKDIR /usr/src\nENV PYTHON_VERSION=\"2.7.10\"\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xvzf Python-${PYTHON_VERSION}.tgz \\\n && cd Python-${PYTHON_VERSION} \\\n && ./configure \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf Python-${PYTHON_VERSION}*\n#  Build and install ninja from source.\nWORKDIR /usr/src\nRUN git clone https://github.com/martine/ninja.git \\\n && cd ninja \\\n && git checkout v1.6.0 \\\n && ./configure.py --bootstrap \\\n && mv ninja /usr/bin/ \\\n && cd .. \\\n && rm -rf ninja\n#  Setup necessary python packages\nWORKDIR /usr/src\nRUN python --version \\\n && wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && pip install wheel > =0.29.0 \\\n && pip install setuptools > =28.0.0 \\\n && pip install scipy \\\n && pip install trimesh \\\n && pip install scikit-image \\\n && pip install www.itk.org SimpleITK --trusted-host -f https://itk.org/SimpleITKDoxygen/html/PyDownloadPage.html > =0.9.1 \\\n && python -c \"import SimpleITK; print('SimpleITK Version:' + SimpleITK.Version_VersionString())\"\n#  Install PyRadiomics\nWORKDIR /usr/src\nRUN git clone https://github.com/radiomics/pyradiomics.git \\\n && cd pyradiomics \\\n && pip install -r requirements.txt \\\n && python setup.py install\nWORKDIR /usr/src\nENTRYPOINT [\"pyradiomics\"]\n","injectedSmells":[],"originalDockerfileHash":"4b6cca5feced49611b261b0fdf59a654","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:6\nMAINTAINER http://github.com/radiomics\nRUN yum update -y \\\n && yum groupinstall -y \"Development Tools\" \\\n && yum install -y curl curl-devel coreutils freetype-devel gcc gcc-c++ gettext libpng-devel openssl-devel perl perl-CPAN perl-ExtUtils-MakeMaker wget zlib-devel\nWORKDIR /etc/yum.repos.d\nRUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo\nRUN yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-gfortran devtoolset-2-gcc-c++\nENV CC=\"/opt/rh/devtoolset-2/root/usr/bin/gcc\"\nENV CXX=\"/opt/rh/devtoolset-2/root/usr/bin/g++\"\nENV FC=\"/opt/rh/devtoolset-2/root/usr/bin/gfortran\"\n#   Build and install git from source.\n#  WORKDIR /usr/src\n#  ENV GIT_VERSION 2.11.0\n#  RUN wget https://github.com/git/git/archive/v${GIT_VERSION}.tar.gz -O git-${GIT_VERSION}.tar.gz && \\\n#    tar xvzf git-${GIT_VERSION}.tar.gz && \\\n#    cd git-${GIT_VERSION} && \\\n#    make prefix=/usr all && \\\n#    make prefix=/usr install && \\\n#    cd .. && rm -rf git-${GIT_VERSION}*\n#   Build and install git from source.\nWORKDIR /usr/src\nENV GIT_VERSION=\"2.5.0\"\nRUN wget --no-check-certificate https://www.kernel.org/pub/software/scm/git/git-${GIT_VERSION}.tar.gz \\\n && tar xvzf git-${GIT_VERSION}.tar.gz \\\n && cd git-${GIT_VERSION} \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf git-${GIT_VERSION}*\n#   Build and install CMake from source.\nWORKDIR /usr/src\nRUN git clone git://cmake.org/cmake.git CMake \\\n && cd CMake \\\n && git checkout v3.7.2 \\\n && mkdir /usr/src/CMake-build \\\n && cd /usr/src/CMake-build \\\n && /usr/src/CMake/bootstrap --parallel=$( grep -c processor /proc/cpuinfo ;) --prefix=/usr \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && ./bin/cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_USE_OPENSSL:BOOL=ON . \\\n && make install \\\n && cd .. \\\n && rm -rf CMake*\n#   Build and install Python from source.\nWORKDIR /usr/src\nENV PYTHON_VERSION=\"2.7.10\"\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xvzf Python-${PYTHON_VERSION}.tgz \\\n && cd Python-${PYTHON_VERSION} \\\n && ./configure \\\n && make -j$( grep -c processor /proc/cpuinfo ;) \\\n && make install \\\n && cd .. \\\n && rm -rf Python-${PYTHON_VERSION}*\n#   Build and install ninja from source.\nWORKDIR /usr/src\nRUN git clone https://github.com/martine/ninja.git \\\n && cd ninja \\\n && git checkout v1.6.0 \\\n && ./configure.py --bootstrap \\\n && mv ninja /usr/bin/ \\\n && cd .. \\\n && rm -rf ninja\n#   Setup necessary python packages\nWORKDIR /usr/src\nRUN python --version \\\n && wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && pip install wheel > =0.29.0 \\\n && pip install setuptools > =28.0.0 \\\n && pip install scipy \\\n && pip install trimesh \\\n && pip install scikit-image \\\n && pip install www.itk.org SimpleITK --trusted-host -f https://itk.org/SimpleITKDoxygen/html/PyDownloadPage.html > =0.9.1 \\\n && python -c \"import SimpleITK; print('SimpleITK Version:' + SimpleITK.Version_VersionString())\"\n#   Install PyRadiomics\nWORKDIR /usr/src\nRUN git clone https://github.com/radiomics/pyradiomics.git \\\n && cd pyradiomics \\\n && pip install -r requirements.txt \\\n && python setup.py install\nWORKDIR /usr/src\nENTRYPOINT [\"pyradiomics\"]\n","originalDockerfileUglifiedHash":"a5d318920e73f3e724a34d4adaf54de7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/eb849c0646a38d34b9073f98aff5128a2702ab9e.dockerfile"}