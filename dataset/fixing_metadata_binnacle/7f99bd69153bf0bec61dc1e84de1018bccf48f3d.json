{"seed":4217102392,"processedDockerfileHash":"3bfa0cefeb739704d03650cb6397a632","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Build this image with the command\n#     docker build -f docker/build -t dyne/clojure:latest\n#\n#   Then run with the command\n#     docker run -p 3000:3000 -it dyne/clojure:latest\n#\nFROM dyne/devuan:beowulf\nENV debian=\"buster\"\nLABEL maintainer=\"Denis Roio <jaromil@dyne.org>\" \\\n      homepage=\"https://github.com/decodeproject/decode-os\"\nENV LC_ALL=\"C\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   CLI arguments\nARG foreground=true\nENV DYNESDK=\"https://sdk.dyne.org:4443/job\" \\\n    NETDATA_VERSION=\"1.10.0\" \\\n    STEM_VERSION=\"1.6.0\" \\\n    STEM_GIT=\"https://git.torproject.org/stem.git\"\nENV BUILD_DEPS=\"build-essential zlib1g-dev gcc make autoconf automake pkg-config uuid-dev golang\"\nWORKDIR /root\n#   # debugging travis (finds gpg in local builds)\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg1 ca-certificates --yes --force-yes \\\n && echo \"ENVIRONMENT VARIABLES:\" \\\n && export\n#   Tor repository\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document tor.pub.asc https://raw.githubusercontent.com/DECODEproject/decode-os/master/docker-sdk/tor.pub.asc\nRUN apt-key add tor.pub.asc\nRUN echo \"deb https://deb.torproject.org/torproject.org $debian main\" >> /etc/apt/sources.list\n#   Nodejs repository\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document nodesource.gpg.key https://deb.nodesource.com/gpgkey/nodesource.gpg.key\nRUN apt-key add nodesource.gpg.key\nRUN echo \"deb https://deb.nodesource.com/node_8.x $debian main\" >> /etc/apt/sources.list\n#   && apt-get -yy update && apt-get -yy upgrade \\\nRUN mkdir -p /usr/share/man/man1/ \\\n && apt-get update \\\n && apt-get install --no-install-recommends tor deb.torproject.org-keyring supervisor daemontools tmux curl redis-tools redis-server net-tools python3 python3-stem nodejs --yes --force-yes\nRUN apt-get install --no-install-recommends $BUILD_DEPS --yes --force-yes\n#   Latest Zenroom built static for x86-amd64 taken from our own builds at Dyne.org\nCOPY $DYNESDK/zenroom-static-amd64/lastSuccessfulBuild/artifact/src/zenroom-static /usr/bin/zenroom\nRUN chmod +x /usr/bin/zenroom\n#   Compile some software from the source\nWORKDIR /usr/src\n#   Stem built from source\n#   RUN git clone $STEM_GIT && cd stem && git checkout -b $STEM_VERSION $STEM_VERSION && python3 setup.py install\n#   Configure Tor Controlport auth\nENV TORDAM_GIT=\"github.com/decodeproject/tor-dam\"\nRUN torpass=`echo \"print(RNG.new():octet(16):base58())\" | zenroom ` \\\n && go get -v -u $TORDAM_GIT/... \\\n && cd ~/go/src/github.com/decodeproject/tor-dam \\\n && sed -i python/damhs.py -e \"s/topkek/$torpass/\" \\\n && sed -i python/damauth.py -e \"s/topkek/$torpass/\" \\\n && make install \\\n && make -C contrib install-init \\\n && torpasshash=`HOME=/var/lib/tor setuidgid debian-tor tor --hash-password \"$torpass\" ` \\\n && sed -e 's/User tor/User debian-tor/' < contrib/torrc > /etc/tor/torrc \\\n && sed -e 's/HashedControlPassword .*//' -i /etc/tor/torrc \\\n && echo \"HashedControlPassword $torpasshash\" >> /etc/tor/torrc\nRUN chmod -R go-rwx /etc/tor \\\n && chown -R debian-tor /etc/tor \\\n && rm -rf /var/lib/tor/data \\\n && chown -R debian-tor /var/lib/tor \\\n && mkdir -p /var/run/tor \\\n && chown -R debian-tor /var/run/tor\nRUN cp /root/go/bin/dam* /usr/bin\n#   fix npm - not the latest version installed by apt-get\nRUN npm install npm@9.6.4 -g\nRUN npm install redis-commander@0.8.0 -g\nENV REDIS_HOSTS=\"localhost\"\n#   Netdata\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document netdata.tgz https://github.com/firehol/netdata/releases/download/v$NETDATA_VERSION/netdata-${NETDATA_VERSION}.tar.gz\nRUN tar xf netdata.tgz \\\n && cd netdata-$NETDATA_VERSION \\\n && ./netdata-installer.sh --dont-wait --dont-start-it \\\n && cd - \\\n && rm -rf netdata.tgz netdata-$NETDATA_VERSION\n#   Openresty\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document openresty.gpg https://openresty.org/package/pubkey.gpg\nRUN apt-key add openresty.gpg\nRUN echo \"deb http://openresty.org/package/debian stretch openresty\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends openresty --yes --force-yes\n#   cleanup\nRUN apt-get --yes --force-yes purge $BUILD_DEPS \\\n && apt-get --yes --force-yes --purge autoremove \\\n && apt-get clean \\\n && npm cache clean --force \\\n && npm uninstall -g npm\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /etc/supervisor/supervisord.conf https://raw.githubusercontent.com/DECODEproject/decode-os/master/docker-sdk/supervisord.conf\nRUN sed -i \"s/nodaemon=true/nodaemon=$foreground/\" /etc/supervisor/supervisord.conf\nRUN groupadd -g 6000 app \\\n && useradd -r -u 6000 -g app -d /home/app app\nWORKDIR /home/app\nRUN chown -R app:app /home/app\n#   Tor's socks5\nEXPOSE 9150/tcp\n#   supervisor\nEXPOSE 9001/tcp 9001/tcp\n#   redis-commander\nEXPOSE 8081/tcp 8081/tcp\n#   netdata\nEXPOSE 19999/tcp 19999/tcp\nCMD bash -c '/etc/init.d/supervisor start'\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Build this image with the command\n#    docker build -f docker/build -t dyne/clojure:latest\n#\n#  Then run with the command\n#    docker run -p 3000:3000 -it dyne/clojure:latest\n#\nFROM dyne/devuan:beowulf\nENV debian=\"buster\"\nLABEL maintainer=\"Denis Roio <jaromil@dyne.org>\" \\\n      homepage=\"https://github.com/decodeproject/decode-os\"\nENV LC_ALL=\"C\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  CLI arguments\nARG foreground=true\nENV DYNESDK=\"https://sdk.dyne.org:4443/job\" \\\n    NETDATA_VERSION=\"1.10.0\" \\\n    STEM_VERSION=\"1.6.0\" \\\n    STEM_GIT=\"https://git.torproject.org/stem.git\"\nENV BUILD_DEPS=\"build-essential zlib1g-dev gcc make autoconf automake pkg-config uuid-dev golang\"\nWORKDIR /root\n#  # debugging travis (finds gpg in local builds)\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg1 ca-certificates --yes --force-yes \\\n && echo \"ENVIRONMENT VARIABLES:\" \\\n && export\n#  Tor repository\nADD https://raw.githubusercontent.com/DECODEproject/decode-os/master/docker-sdk/tor.pub.asc tor.pub.asc\nRUN apt-key add tor.pub.asc\nRUN echo \"deb https://deb.torproject.org/torproject.org $debian main\" >> /etc/apt/sources.list\n#  Nodejs repository\nADD https://deb.nodesource.com/gpgkey/nodesource.gpg.key nodesource.gpg.key\nRUN apt-key add nodesource.gpg.key\nRUN echo \"deb https://deb.nodesource.com/node_8.x $debian main\" >> /etc/apt/sources.list\n#  && apt-get -yy update && apt-get -yy upgrade \\\nRUN mkdir -p /usr/share/man/man1/ \\\n && apt-get update \\\n && apt-get install tor deb.torproject.org-keyring supervisor daemontools tmux curl redis-tools redis-server net-tools python3 python3-stem nodejs --yes --force-yes\nRUN apt-get install $BUILD_DEPS --yes --force-yes\n#  Latest Zenroom built static for x86-amd64 taken from our own builds at Dyne.org\nADD $DYNESDK/zenroom-static-amd64/lastSuccessfulBuild/artifact/src/zenroom-static /usr/bin/zenroom\nRUN chmod +x /usr/bin/zenroom\n#  Compile some software from the source\nWORKDIR /usr/src\n#  Stem built from source\n#  RUN git clone $STEM_GIT && cd stem && git checkout -b $STEM_VERSION $STEM_VERSION && python3 setup.py install\n#  Configure Tor Controlport auth\nENV TORDAM_GIT=\"github.com/decodeproject/tor-dam\"\nRUN torpass=`echo \"print(RNG.new():octet(16):base58())\" | zenroom ` \\\n && go get -v -u $TORDAM_GIT/... \\\n && cd ~/go/src/github.com/decodeproject/tor-dam \\\n && sed -i python/damhs.py -e \"s/topkek/$torpass/\" \\\n && sed -i python/damauth.py -e \"s/topkek/$torpass/\" \\\n && make install \\\n && make -C contrib install-init \\\n && torpasshash=`HOME=/var/lib/tor setuidgid debian-tor tor --hash-password \"$torpass\" ` \\\n && sed -e 's/User tor/User debian-tor/' < contrib/torrc > /etc/tor/torrc \\\n && sed -e 's/HashedControlPassword .*//' -i /etc/tor/torrc \\\n && echo \"HashedControlPassword $torpasshash\" >> /etc/tor/torrc\nRUN chmod -R go-rwx /etc/tor \\\n && chown -R debian-tor /etc/tor \\\n && rm -rf /var/lib/tor/data \\\n && chown -R debian-tor /var/lib/tor \\\n && mkdir -p /var/run/tor \\\n && chown -R debian-tor /var/run/tor\nRUN cp /root/go/bin/dam* /usr/bin\n#  fix npm - not the latest version installed by apt-get\nRUN npm install npm -g\nRUN npm install redis-commander -g\nENV REDIS_HOSTS=\"localhost\"\n#  Netdata\nADD https://github.com/firehol/netdata/releases/download/v$NETDATA_VERSION/netdata-${NETDATA_VERSION}.tar.gz netdata.tgz\nRUN tar xf netdata.tgz \\\n && cd netdata-$NETDATA_VERSION \\\n && ./netdata-installer.sh --dont-wait --dont-start-it \\\n && cd - \\\n && rm -rf netdata.tgz netdata-$NETDATA_VERSION\n#  Openresty\nADD https://openresty.org/package/pubkey.gpg openresty.gpg\nRUN apt-key add openresty.gpg\nRUN echo \"deb http://openresty.org/package/debian stretch openresty\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends openresty --yes --force-yes\n#  cleanup\nRUN apt-get --yes --force-yes purge $BUILD_DEPS \\\n && apt-get --yes --force-yes --purge autoremove \\\n && apt-get clean \\\n && npm cache clean --force \\\n && npm uninstall -g npm\nADD https://raw.githubusercontent.com/DECODEproject/decode-os/master/docker-sdk/supervisord.conf /etc/supervisor/supervisord.conf\nRUN sed -i \"s/nodaemon=true/nodaemon=$foreground/\" /etc/supervisor/supervisord.conf\nRUN groupadd -g 6000 app \\\n && useradd -r -u 6000 -g app -d /home/app app\nWORKDIR /home/app\nRUN chown -R app:app /home/app\n#  Tor's socks5\nEXPOSE 9150/tcp\n#  supervisor\nEXPOSE 9001/tcp 9001/tcp\n#  redis-commander\nEXPOSE 8081/tcp 8081/tcp\n#  netdata\nEXPOSE 19999/tcp 19999/tcp\nCMD bash -c '/etc/init.d/supervisor start'\n","injectedSmells":[],"originalDockerfileHash":"b8d148bdc9091d7ac40c8e98fb5be038","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Build this image with the command\n#     docker build -f docker/build -t dyne/clojure:latest\n#\n#   Then run with the command\n#     docker run -p 3000:3000 -it dyne/clojure:latest\n#\nFROM dyne/devuan:beowulf\nENV debian=\"buster\"\nLABEL maintainer=\"Denis Roio <jaromil@dyne.org>\" \\\n      homepage=\"https://github.com/decodeproject/decode-os\"\nENV LC_ALL=\"C\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   CLI arguments\nARG foreground=true\nENV DYNESDK=\"https://sdk.dyne.org:4443/job\" \\\n    NETDATA_VERSION=\"1.10.0\" \\\n    STEM_VERSION=\"1.6.0\" \\\n    STEM_GIT=\"https://git.torproject.org/stem.git\"\nENV BUILD_DEPS=\"build-essential zlib1g-dev gcc make autoconf automake pkg-config uuid-dev golang\"\nWORKDIR /root\n#   # debugging travis (finds gpg in local builds)\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg1 ca-certificates --yes --force-yes \\\n && echo \"ENVIRONMENT VARIABLES:\" \\\n && export\n#   Tor repository\nADD https://raw.githubusercontent.com/DECODEproject/decode-os/master/docker-sdk/tor.pub.asc tor.pub.asc\nRUN apt-key add tor.pub.asc\nRUN echo \"deb https://deb.torproject.org/torproject.org $debian main\" >> /etc/apt/sources.list\n#   Nodejs repository\nADD https://deb.nodesource.com/gpgkey/nodesource.gpg.key nodesource.gpg.key\nRUN apt-key add nodesource.gpg.key\nRUN echo \"deb https://deb.nodesource.com/node_8.x $debian main\" >> /etc/apt/sources.list\n#   && apt-get -yy update && apt-get -yy upgrade \\\nRUN mkdir -p /usr/share/man/man1/ \\\n && apt-get update \\\n && apt-get install tor deb.torproject.org-keyring supervisor daemontools tmux curl redis-tools redis-server net-tools python3 python3-stem nodejs --yes --force-yes\nRUN apt-get install $BUILD_DEPS --yes --force-yes\n#   Latest Zenroom built static for x86-amd64 taken from our own builds at Dyne.org\nADD $DYNESDK/zenroom-static-amd64/lastSuccessfulBuild/artifact/src/zenroom-static /usr/bin/zenroom\nRUN chmod +x /usr/bin/zenroom\n#   Compile some software from the source\nWORKDIR /usr/src\n#   Stem built from source\n#   RUN git clone $STEM_GIT && cd stem && git checkout -b $STEM_VERSION $STEM_VERSION && python3 setup.py install\n#   Configure Tor Controlport auth\nENV TORDAM_GIT=\"github.com/decodeproject/tor-dam\"\nRUN torpass=`echo \"print(RNG.new():octet(16):base58())\" | zenroom ` \\\n && go get -v -u $TORDAM_GIT/... \\\n && cd ~/go/src/github.com/decodeproject/tor-dam \\\n && sed -i python/damhs.py -e \"s/topkek/$torpass/\" \\\n && sed -i python/damauth.py -e \"s/topkek/$torpass/\" \\\n && make install \\\n && make -C contrib install-init \\\n && torpasshash=`HOME=/var/lib/tor setuidgid debian-tor tor --hash-password \"$torpass\" ` \\\n && sed -e 's/User tor/User debian-tor/' < contrib/torrc > /etc/tor/torrc \\\n && sed -e 's/HashedControlPassword .*//' -i /etc/tor/torrc \\\n && echo \"HashedControlPassword $torpasshash\" >> /etc/tor/torrc\nRUN chmod -R go-rwx /etc/tor \\\n && chown -R debian-tor /etc/tor \\\n && rm -rf /var/lib/tor/data \\\n && chown -R debian-tor /var/lib/tor \\\n && mkdir -p /var/run/tor \\\n && chown -R debian-tor /var/run/tor\nRUN cp /root/go/bin/dam* /usr/bin\n#   fix npm - not the latest version installed by apt-get\nRUN npm install npm -g\nRUN npm install redis-commander -g\nENV REDIS_HOSTS=\"localhost\"\n#   Netdata\nADD https://github.com/firehol/netdata/releases/download/v$NETDATA_VERSION/netdata-${NETDATA_VERSION}.tar.gz netdata.tgz\nRUN tar xf netdata.tgz \\\n && cd netdata-$NETDATA_VERSION \\\n && ./netdata-installer.sh --dont-wait --dont-start-it \\\n && cd - \\\n && rm -rf netdata.tgz netdata-$NETDATA_VERSION\n#   Openresty\nADD https://openresty.org/package/pubkey.gpg openresty.gpg\nRUN apt-key add openresty.gpg\nRUN echo \"deb http://openresty.org/package/debian stretch openresty\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends openresty --yes --force-yes\n#   cleanup\nRUN apt-get --yes --force-yes purge $BUILD_DEPS \\\n && apt-get --yes --force-yes --purge autoremove \\\n && apt-get clean \\\n && npm cache clean --force \\\n && npm uninstall -g npm\nADD https://raw.githubusercontent.com/DECODEproject/decode-os/master/docker-sdk/supervisord.conf /etc/supervisor/supervisord.conf\nRUN sed -i \"s/nodaemon=true/nodaemon=$foreground/\" /etc/supervisor/supervisord.conf\nRUN groupadd -g 6000 app \\\n && useradd -r -u 6000 -g app -d /home/app app\nWORKDIR /home/app\nRUN chown -R app:app /home/app\n#   Tor's socks5\nEXPOSE 9150/tcp\n#   supervisor\nEXPOSE 9001/tcp 9001/tcp\n#   redis-commander\nEXPOSE 8081/tcp 8081/tcp\n#   netdata\nEXPOSE 19999/tcp 19999/tcp\nCMD bash -c '/etc/init.d/supervisor start'\n","originalDockerfileUglifiedHash":"9aae227ef86d1638c517b86f6d8ac069","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7f99bd69153bf0bec61dc1e84de1018bccf48f3d.dockerfile"}