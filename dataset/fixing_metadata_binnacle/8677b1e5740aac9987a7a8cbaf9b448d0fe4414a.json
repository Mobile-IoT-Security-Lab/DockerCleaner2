{"seed":3187038371,"processedDockerfileHash":"0fa0aa914a3524260111a77577ac8d5c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck"],"processedDockerfile":"FROM debian:jessie\nMAINTAINER <maintainer@email.com>\n#   Setting up Docker image to replicate \"hello-scaloid-sbt\" project\n#   https://github.com/pocorall/hello-scaloid-sbt\n#  ###################################\n#   Install important packages\n#  ###################################\nRUN echo \"Acquire::Retries 20;\" >> /etc/apt/apt.conf\nRUN apt-get update \\\n && apt-get install --no-install-recommends aptitude -y\nRUN aptitude update \\\n && aptitude -y --without-recommends install wget curl mc sudo git usbutils unzip openjdk-7-jdk lib32z1 lib32ncurses5 g++-multilib\n#  ###################################\n#   Install SBT\n#  ###################################\nRUN curl -# -L https://dl.bintray.com/sbt/debian/sbt-0.13.8.deb > /tmp/sbt-0.13.8.deb \\\n && dpkg -i /tmp/sbt-0.13.8.deb\n#  ###################################\n#   Create new user \"scaloid\"\n#  ###################################\nENV NEW_USER=\"scaloid\"\nRUN adduser --disabled-password --gecos '' ${NEW_USER}\n#   Make him a sudoer\nRUN echo \"${NEW_USER} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/${NEW_USER} \\\n && chmod 0440 /etc/sudoers.d/${NEW_USER}\n#  ###################################\n#   Switching to user-level\n#  ###################################\nUSER ${NEW_USER}\nWORKDIR /home/${NEW_USER}/\n#  ###################################\n#   Set up Android SDK\n#  ###################################\n#   Download and install Android SDK\nENV ANDROID_SDK_URL=\"http://dl.google.com/android/android-sdk_r24.3.3-linux.tgz\"\nRUN wget --progress=bar:force --tries=99 ${ANDROID_SDK_URL} -O /tmp/android_sdk.tgz \\\n && tar xzf /tmp/android_sdk.tgz -C /home/${NEW_USER}/\n#   Install Android SDK components\n#   do `android list sdk --all -e` to see all available sdk packages\nENV ANDROID_HOME=\"/home/${NEW_USER}/android-sdk-linux\"\nENV ANDROID_SDK_COMPONENTS=\"platform-tools,build-tools-21.1.2,android-21,android-16,extra-android-support,addon-google_apis-google-21,sys-img-x86_64-addon-google_apis-google-21\"\nRUN echo y | ${ANDROID_HOME}/tools/android update sdk --no-ui --all --filter \"${ANDROID_SDK_COMPONENTS}\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\nRUN echo \"export ANDROID_HOME=${ANDROID_HOME}\" >> /home/${NEW_USER}/.bashrc\nRUN echo \"export JAVA_HOME=${JAVA_HOME}\" >> /home/${NEW_USER}/.bashrc\nRUN echo \"export DISPLAY=:0\" >> /home/${NEW_USER}/.bashrc\n#  ###################################\n#   Set up the project itself\n#  ###################################\n#   Git clone the project\nRUN git clone https://github.com/pocorall/hello-scaloid-sbt\n#   Let sbt download what it needs\nRUN cd /home/${NEW_USER}/hello-scaloid-sbt \\\n && sbt android:package \\\n && ${ANDROID_HOME}/tools/android update project -p .\n#  ###################################\n#   Add IDEA + Plugins\n#  ###################################\n#   Download and install IntelliJ IDEA\nRUN wget --progress=bar:force --tries=99 https://download.jetbrains.com/idea/ideaIC-14.1.4.tar.gz -O /tmp/idea.tar.gz \\\n && tar xzf /tmp/idea.tar.gz -C /home/${NEW_USER}/ \\\n && mv /home/${NEW_USER}/idea-IC-141.1532.4 /home/${NEW_USER}/idea\n#   Make a runnable script for launching IDEA w/o terminal\nRUN echo '#!/bin/bash' > /home/${NEW_USER}/idea/bin/idea-run\nRUN echo \"nohup /home/${NEW_USER}/idea/bin/idea.sh 2>/dev/null &\" >> /home/${NEW_USER}/idea/bin/idea-run\nRUN chmod 755 /home/${NEW_USER}/idea/bin/idea-run\nRUN echo \"export PATH=${PATH}:${ANDROID_HOME}/tools/:${ANDROID_HOME}/platform-tools/:/home/${NEW_USER}/idea/bin/\" >> /home/${NEW_USER}/.bashrc\n#   Install plugins\nRUN mkdir -p /home/${NEW_USER}/.IdeaIC14/config/plugins\nRUN cd /home/${NEW_USER}/.IdeaIC14/config/plugins \\\n && wget --progress=bar:force --tries=99 http://plugins.jetbrains.com/files/1347/20041/scala-intellij-bin-1.5.2.zip -O scala-plugin.zip \\\n && unzip scala-plugin.zip \\\n && wget --progress=bar:force --tries=99 http://plugins.jetbrains.com/files/5007/19457/idea-sbt-plugin-1.7.0.zip -O sbt-plugin.zip \\\n && unzip sbt-plugin.zip \\\n && rm -f *.zip\nENV DISPLAY=\":0\"\n#   DONE!\n#  ###################################\n#   Use of Dockerfile\n#  ###################################\n#   Build the docker image ON THE HOST:\n#   $ docker build -t scaloid .\n#   \n#  # Since USB access is required to deploy the app\n#  # do the following ON THE HOST:\n#   $ adb kill-server\n#   $ export XSOCK=/tmp/.X11-unix/X0\n#   $ xhost +localhost\n#   $ docker run --privileged -v $XSOCK:$XSOCK -v /dev/bus/usb:/dev/bus/usb -it <image>\n#   This allows one to connect to USB devices and thus, deploy the app on the phone directly from Docker\n#  # For very secure way (using XAuthority) see:\n#  # https://stackoverflow.com/questions/16296753/can-you-run-gui-apps-in-a-docker-container/25280523#25280523\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nMAINTAINER <maintainer@email.com>\n#  Setting up Docker image to replicate \"hello-scaloid-sbt\" project\n#  https://github.com/pocorall/hello-scaloid-sbt\n# ###################################\n#  Install important packages\n# ###################################\nRUN echo \"Acquire::Retries 20;\" >> /etc/apt/apt.conf\nRUN apt-get update \\\n && apt-get install aptitude -y\nRUN aptitude update \\\n && aptitude -y --without-recommends install wget curl mc sudo git usbutils unzip openjdk-7-jdk lib32z1 lib32ncurses5 g++-multilib\n# ###################################\n#  Install SBT\n# ###################################\nRUN curl -# -L https://dl.bintray.com/sbt/debian/sbt-0.13.8.deb > /tmp/sbt-0.13.8.deb \\\n && dpkg -i /tmp/sbt-0.13.8.deb\n# ###################################\n#  Create new user \"scaloid\"\n# ###################################\nENV NEW_USER=\"scaloid\"\nRUN adduser --disabled-password --gecos '' ${NEW_USER}\n#  Make him a sudoer\nRUN echo \"${NEW_USER} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/${NEW_USER} \\\n && chmod 0440 /etc/sudoers.d/${NEW_USER}\n# ###################################\n#  Switching to user-level\n# ###################################\nUSER ${NEW_USER}\nWORKDIR /home/${NEW_USER}/\n# ###################################\n#  Set up Android SDK\n# ###################################\n#  Download and install Android SDK\nENV ANDROID_SDK_URL=\"http://dl.google.com/android/android-sdk_r24.3.3-linux.tgz\"\nRUN wget --progress=bar:force --tries=99 ${ANDROID_SDK_URL} -O /tmp/android_sdk.tgz \\\n && tar xzf /tmp/android_sdk.tgz -C /home/${NEW_USER}/\n#  Install Android SDK components\n#  do `android list sdk --all -e` to see all available sdk packages\nENV ANDROID_HOME=\"/home/${NEW_USER}/android-sdk-linux\"\nENV ANDROID_SDK_COMPONENTS=\"platform-tools,build-tools-21.1.2,android-21,android-16,extra-android-support,addon-google_apis-google-21,sys-img-x86_64-addon-google_apis-google-21\"\nRUN echo y | ${ANDROID_HOME}/tools/android update sdk --no-ui --all --filter \"${ANDROID_SDK_COMPONENTS}\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\nRUN echo \"export ANDROID_HOME=${ANDROID_HOME}\" >> /home/${NEW_USER}/.bashrc\nRUN echo \"export JAVA_HOME=${JAVA_HOME}\" >> /home/${NEW_USER}/.bashrc\nRUN echo \"export DISPLAY=:0\" >> /home/${NEW_USER}/.bashrc\n# ###################################\n#  Set up the project itself\n# ###################################\n#  Git clone the project\nRUN git clone https://github.com/pocorall/hello-scaloid-sbt\n#  Let sbt download what it needs\nRUN cd /home/${NEW_USER}/hello-scaloid-sbt \\\n && sbt android:package \\\n && ${ANDROID_HOME}/tools/android update project -p .\n# ###################################\n#  Add IDEA + Plugins\n# ###################################\n#  Download and install IntelliJ IDEA\nRUN wget --progress=bar:force --tries=99 https://download.jetbrains.com/idea/ideaIC-14.1.4.tar.gz -O /tmp/idea.tar.gz \\\n && tar xzf /tmp/idea.tar.gz -C /home/${NEW_USER}/ \\\n && mv /home/${NEW_USER}/idea-IC-141.1532.4 /home/${NEW_USER}/idea\n#  Make a runnable script for launching IDEA w/o terminal\nRUN echo '#!/bin/bash' > /home/${NEW_USER}/idea/bin/idea-run\nRUN echo \"nohup /home/${NEW_USER}/idea/bin/idea.sh 2>/dev/null &\" >> /home/${NEW_USER}/idea/bin/idea-run\nRUN chmod 755 /home/${NEW_USER}/idea/bin/idea-run\nRUN echo \"export PATH=${PATH}:${ANDROID_HOME}/tools/:${ANDROID_HOME}/platform-tools/:/home/${NEW_USER}/idea/bin/\" >> /home/${NEW_USER}/.bashrc\n#  Install plugins\nRUN mkdir -p /home/${NEW_USER}/.IdeaIC14/config/plugins\nRUN cd /home/${NEW_USER}/.IdeaIC14/config/plugins \\\n && wget --progress=bar:force --tries=99 http://plugins.jetbrains.com/files/1347/20041/scala-intellij-bin-1.5.2.zip -O scala-plugin.zip \\\n && unzip scala-plugin.zip \\\n && wget --progress=bar:force --tries=99 http://plugins.jetbrains.com/files/5007/19457/idea-sbt-plugin-1.7.0.zip -O sbt-plugin.zip \\\n && unzip sbt-plugin.zip \\\n && rm -f *.zip\nENV DISPLAY=\":0\"\n#  DONE!\n# ###################################\n#  Use of Dockerfile\n# ###################################\n#  Build the docker image ON THE HOST:\n#  $ docker build -t scaloid .\n#  \n# # Since USB access is required to deploy the app\n# # do the following ON THE HOST:\n#  $ adb kill-server\n#  $ export XSOCK=/tmp/.X11-unix/X0\n#  $ xhost +localhost\n#  $ docker run --privileged -v $XSOCK:$XSOCK -v /dev/bus/usb:/dev/bus/usb -it <image>\n#  This allows one to connect to USB devices and thus, deploy the app on the phone directly from Docker\n# # For very secure way (using XAuthority) see:\n# # https://stackoverflow.com/questions/16296753/can-you-run-gui-apps-in-a-docker-container/25280523#25280523\n","injectedSmells":[],"originalDockerfileHash":"6072b95f64252a0a5557073dbdf658a3","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nMAINTAINER <maintainer@email.com>\n#   Setting up Docker image to replicate \"hello-scaloid-sbt\" project\n#   https://github.com/pocorall/hello-scaloid-sbt\n#  ###################################\n#   Install important packages\n#  ###################################\nRUN echo \"Acquire::Retries 20;\" >> /etc/apt/apt.conf\nRUN apt-get update \\\n && apt-get install aptitude -y\nRUN aptitude update \\\n && aptitude -y --without-recommends install wget curl mc sudo git usbutils unzip openjdk-7-jdk lib32z1 lib32ncurses5 g++-multilib\n#  ###################################\n#   Install SBT\n#  ###################################\nRUN curl -# -L https://dl.bintray.com/sbt/debian/sbt-0.13.8.deb > /tmp/sbt-0.13.8.deb \\\n && dpkg -i /tmp/sbt-0.13.8.deb\n#  ###################################\n#   Create new user \"scaloid\"\n#  ###################################\nENV NEW_USER=\"scaloid\"\nRUN adduser --disabled-password --gecos '' ${NEW_USER}\n#   Make him a sudoer\nRUN echo \"${NEW_USER} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/${NEW_USER} \\\n && chmod 0440 /etc/sudoers.d/${NEW_USER}\n#  ###################################\n#   Switching to user-level\n#  ###################################\nUSER ${NEW_USER}\nWORKDIR /home/${NEW_USER}/\n#  ###################################\n#   Set up Android SDK\n#  ###################################\n#   Download and install Android SDK\nENV ANDROID_SDK_URL=\"http://dl.google.com/android/android-sdk_r24.3.3-linux.tgz\"\nRUN wget --progress=bar:force --tries=99 ${ANDROID_SDK_URL} -O /tmp/android_sdk.tgz \\\n && tar xzf /tmp/android_sdk.tgz -C /home/${NEW_USER}/\n#   Install Android SDK components\n#   do `android list sdk --all -e` to see all available sdk packages\nENV ANDROID_HOME=\"/home/${NEW_USER}/android-sdk-linux\"\nENV ANDROID_SDK_COMPONENTS=\"platform-tools,build-tools-21.1.2,android-21,android-16,extra-android-support,addon-google_apis-google-21,sys-img-x86_64-addon-google_apis-google-21\"\nRUN echo y | ${ANDROID_HOME}/tools/android update sdk --no-ui --all --filter \"${ANDROID_SDK_COMPONENTS}\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\nRUN echo \"export ANDROID_HOME=${ANDROID_HOME}\" >> /home/${NEW_USER}/.bashrc\nRUN echo \"export JAVA_HOME=${JAVA_HOME}\" >> /home/${NEW_USER}/.bashrc\nRUN echo \"export DISPLAY=:0\" >> /home/${NEW_USER}/.bashrc\n#  ###################################\n#   Set up the project itself\n#  ###################################\n#   Git clone the project\nRUN git clone https://github.com/pocorall/hello-scaloid-sbt\n#   Let sbt download what it needs\nRUN cd /home/${NEW_USER}/hello-scaloid-sbt \\\n && sbt android:package \\\n && ${ANDROID_HOME}/tools/android update project -p .\n#  ###################################\n#   Add IDEA + Plugins\n#  ###################################\n#   Download and install IntelliJ IDEA\nRUN wget --progress=bar:force --tries=99 https://download.jetbrains.com/idea/ideaIC-14.1.4.tar.gz -O /tmp/idea.tar.gz \\\n && tar xzf /tmp/idea.tar.gz -C /home/${NEW_USER}/ \\\n && mv /home/${NEW_USER}/idea-IC-141.1532.4 /home/${NEW_USER}/idea\n#   Make a runnable script for launching IDEA w/o terminal\nRUN echo '#!/bin/bash' > /home/${NEW_USER}/idea/bin/idea-run\nRUN echo \"nohup /home/${NEW_USER}/idea/bin/idea.sh 2>/dev/null &\" >> /home/${NEW_USER}/idea/bin/idea-run\nRUN chmod 755 /home/${NEW_USER}/idea/bin/idea-run\nRUN echo \"export PATH=${PATH}:${ANDROID_HOME}/tools/:${ANDROID_HOME}/platform-tools/:/home/${NEW_USER}/idea/bin/\" >> /home/${NEW_USER}/.bashrc\n#   Install plugins\nRUN mkdir -p /home/${NEW_USER}/.IdeaIC14/config/plugins\nRUN cd /home/${NEW_USER}/.IdeaIC14/config/plugins \\\n && wget --progress=bar:force --tries=99 http://plugins.jetbrains.com/files/1347/20041/scala-intellij-bin-1.5.2.zip -O scala-plugin.zip \\\n && unzip scala-plugin.zip \\\n && wget --progress=bar:force --tries=99 http://plugins.jetbrains.com/files/5007/19457/idea-sbt-plugin-1.7.0.zip -O sbt-plugin.zip \\\n && unzip sbt-plugin.zip \\\n && rm -f *.zip\nENV DISPLAY=\":0\"\n#   DONE!\n#  ###################################\n#   Use of Dockerfile\n#  ###################################\n#   Build the docker image ON THE HOST:\n#   $ docker build -t scaloid .\n#   \n#  # Since USB access is required to deploy the app\n#  # do the following ON THE HOST:\n#   $ adb kill-server\n#   $ export XSOCK=/tmp/.X11-unix/X0\n#   $ xhost +localhost\n#   $ docker run --privileged -v $XSOCK:$XSOCK -v /dev/bus/usb:/dev/bus/usb -it <image>\n#   This allows one to connect to USB devices and thus, deploy the app on the phone directly from Docker\n#  # For very secure way (using XAuthority) see:\n#  # https://stackoverflow.com/questions/16296753/can-you-run-gui-apps-in-a-docker-container/25280523#25280523\n","originalDockerfileUglifiedHash":"ba6c014823d3cd02c7b1e7ab12b48de3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8677b1e5740aac9987a7a8cbaf9b448d0fe4414a.dockerfile"}