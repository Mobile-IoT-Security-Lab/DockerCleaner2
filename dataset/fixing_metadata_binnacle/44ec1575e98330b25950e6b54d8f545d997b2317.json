{"seed":2549774639,"processedDockerfileHash":"93f75ea7f4d77244ceaa6b2233f15e1c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.4\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   the other runtime dependencies for Python are installed later\nRUN apk add ca-certificates=20161130-r0 --no-cache\nENV GPG_KEY=\"C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\"\nENV PYTHON_VERSION=\"2.7.12\"\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN set -ex \\\n && buildDeps=' tcl-dev tk-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-shared --enable-unicode=ucs4 \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python2 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py \\\n && pip install \"pip==$PYTHON_PIP_VERSION\" --no-cache-dir --upgrade --force-reinstall \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth\n#   install gosu\nENV GOSU_VERSION=\"1.9\"\nRUN set -x \\\n && apk add dpkg=1.18.7-r0 gnupg=2.1.12-r1 openssl=1.0.2n-r0 --no-cache --virtual .gosu-deps \\\n && dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apk del .gosu-deps\nRUN apk add nginx=1.10.3-r0 uwsgi=2.0.17-r0 uwsgi-python=2.0.17-r0 python-dev=2.7.14-r0 build-base=0.4-r1 dumb-init --no-cache\nRUN pip install flask==2.2.3 connexion==2.14.2 uwsgi==2.0.21\nRUN useradd uwsgi -s /bin/false\nRUN mkdir /var/log/uwsgi\nRUN chown -R uwsgi:uwsgi /var/log/uwsgi\nONBUILD ADD . /\nONBUILD RUN if [ -f /requirements.txt ] ; then pip install -r /requirements.txt ; fi\nENV UWSGI_NUM_PROCESSES=\"1\"\nENV UWSGI_NUM_THREADS=\"15\"\nENV UWSGI_UID=\"uwsgi\"\nENV UWSGI_GID=\"uwsgi\"\nENV UWSGI_LOG_FILE=\"/var/log/uwsgi/uwsgi.log\"\nEXPOSE 8080/tcp\nCOPY uwsgi-start.sh /\n#  CMD        []\n#  ENTRYPOINT [\"/uwsgi-start.sh\"]\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/uwsgi-start.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.4\n#  ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  install ca-certificates so that HTTPS works consistently\n#  the other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\"\nENV PYTHON_VERSION=\"2.7.12\"\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN set -ex \\\n && buildDeps=' tcl-dev tk-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-shared --enable-unicode=ucs4 \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python2 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py \\\n && pip install \"pip==$PYTHON_PIP_VERSION\" --no-cache-dir --upgrade --force-reinstall \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth ( ( -type d -a -name test -o -name tests ) -o ( -type f -a -name '*.pyc' -o -name '*.pyo' ) ) -exec rm -rf '{}' + \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/python ~/.cache\n#  install gosu\nENV GOSU_VERSION=\"1.9\"\nRUN set -x \\\n && apk add --no-cache --virtual .gosu-deps dpkg gnupg openssl \\\n && dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apk del .gosu-deps\nRUN apk add --no-cache nginx uwsgi uwsgi-python python-dev build-base dumb-init\nRUN pip install flask connexion uwsgi\nRUN useradd uwsgi -s /bin/false\nRUN mkdir /var/log/uwsgi\nRUN chown -R uwsgi:uwsgi /var/log/uwsgi\nONBUILD ADD . /\nONBUILD RUN if [ -f /requirements.txt ] ; then pip install -r /requirements.txt ; fi\nENV UWSGI_NUM_PROCESSES=\"1\"\nENV UWSGI_NUM_THREADS=\"15\"\nENV UWSGI_UID=\"uwsgi\"\nENV UWSGI_GID=\"uwsgi\"\nENV UWSGI_LOG_FILE=\"/var/log/uwsgi/uwsgi.log\"\nEXPOSE 8080/tcp\nADD uwsgi-start.sh /\n# CMD        []\n# ENTRYPOINT [\"/uwsgi-start.sh\"]\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/uwsgi-start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"18a20f6d0a84aaaf482e297797fa792f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.4\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   the other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\"\nENV PYTHON_VERSION=\"2.7.12\"\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN set -ex \\\n && buildDeps=' tcl-dev tk-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-shared --enable-unicode=ucs4 \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python2 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py \\\n && pip install \"pip==$PYTHON_PIP_VERSION\" --no-cache-dir --upgrade --force-reinstall \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth\n#   install gosu\nENV GOSU_VERSION=\"1.9\"\nRUN set -x \\\n && apk add --no-cache --virtual .gosu-deps dpkg gnupg openssl \\\n && dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apk del .gosu-deps\nRUN apk add --no-cache nginx uwsgi uwsgi-python python-dev build-base dumb-init\nRUN pip install flask connexion uwsgi\nRUN useradd uwsgi -s /bin/false\nRUN mkdir /var/log/uwsgi\nRUN chown -R uwsgi:uwsgi /var/log/uwsgi\nONBUILD ADD . /\nONBUILD RUN if [ -f /requirements.txt ] ; then pip install -r /requirements.txt ; fi\nENV UWSGI_NUM_PROCESSES=\"1\"\nENV UWSGI_NUM_THREADS=\"15\"\nENV UWSGI_UID=\"uwsgi\"\nENV UWSGI_GID=\"uwsgi\"\nENV UWSGI_LOG_FILE=\"/var/log/uwsgi/uwsgi.log\"\nEXPOSE 8080/tcp\nADD uwsgi-start.sh /\n#  CMD        []\n#  ENTRYPOINT [\"/uwsgi-start.sh\"]\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/uwsgi-start.sh\"]\n","originalDockerfileUglifiedHash":"2605eff1a05ebe65675173bcaf162006","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/44ec1575e98330b25950e6b54d8f545d997b2317.dockerfile"}