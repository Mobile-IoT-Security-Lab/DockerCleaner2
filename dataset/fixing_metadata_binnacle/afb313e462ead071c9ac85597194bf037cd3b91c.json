{"seed":2488506167,"processedDockerfileHash":"ae86922f2475154bf7c48f8128bc1f26","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:latest\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG COMMIT\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"MonicaHQ, the Personal Relationship Manager\" \\\n      org.label-schema.description=\"This is MonicaHQ, your personal memory! MonicaHQ is like a CRM but for the friends, family, and acquaintances around you.\" \\\n      org.label-schema.url=\"https://monicahq.com\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/monicahq/monica\" \\\n      org.label-schema.vendor=\"Monica\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN apk update \\\n && apk upgrade\nRUN apk add curl=7.88.1-r1 openssl=3.0.8-r3 bash=5.2.15-r0 --virtual .build-deps\nRUN apk add netcat-openbsd=1.130-r4 php7 php7-intl php7-openssl php7-ctype php7-zip php7-zlib php7-redis php7-session php7-tokenizer php7-dom php7-fileinfo php7-gd php7-phar php7-json php7-iconv php7-mbstring php7-simplexml php7-xml php7-xmlreader php7-xmlwriter php7-mysqli php7-pdo_mysql php7-pgsql php7-pdo_pgsql php7-bcmath php7-curl php7-gmp apache2=2.4.57-r0 php7-apache2\n#   Create a user to own all the code and assets and give them a working\n#   directory\nRUN mkdir -p /var/www/monica ; grep -q apache /etc/group || addgroup -S apache ; adduser -D monica apache -h /var/www/monica\nWORKDIR /var/www/monica\n#   Copy the local (outside Docker) source into the working directory,\n#   copy system files into their proper homes, and set file ownership\n#   correctly\nCOPY readme.md CONTRIBUTING.md CHANGELOG CONTRIBUTORS LICENSE artisan composer.json composer.lock ./\nCOPY app ./app\nCOPY bootstrap ./bootstrap\nCOPY config ./config\nCOPY database ./database\nCOPY public ./public\nCOPY resources ./resources\nCOPY routes ./routes\nRUN mkdir -p bootstrap/cache ; mkdir -p storage ; chown -R monica:monica . ; chgrp -R apache bootstrap/cache storage ; chmod -R g+w bootstrap/cache storage\nCOPY .env.example .env\n#   Sentry\nRUN echo $VCS_REF > .sentry-release; echo $COMMIT > .sentry-commit; mkdir -p /root/.local/bin \\\n && curl -sL https://sentry.io/get-cli/ | INSTALL_DIR=/root/.local/bin bash\n#   Composer installation\nCOPY scripts/docker/install-composer.sh /usr/local/sbin/\nRUN install-composer.sh\n#   Install composer dependencies\nUSER monica\nRUN composer global require hirak/prestissimo ; composer install --no-interaction --no-suggest --no-progress --no-dev ; composer global remove hirak/prestissimo ; composer clear-cache\nUSER root\n#   Set crontab for schedules\nRUN set -ex \\\n && cd /etc/periodic/hourly/ \\\n && { echo '#!/bin/sh' ;echo '/usr/bin/php /var/www/monica/artisan schedule:run -v' ; } | tee monica \\\n && chmod a+x monica\n#   Cleanup\nRUN apk del .build-deps \\\n && rm -rf /var/cache/apk/*\nCOPY scripts/docker/entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"entrypoint.sh\"]\n#   Apache2\nCOPY scripts/docker/apache2-foreground /usr/local/sbin/\nCOPY scripts/docker/000-default.conf /etc/apache2/conf.d/\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:latest\n#  Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG COMMIT\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"MonicaHQ, the Personal Relationship Manager\" \\\n      org.label-schema.description=\"This is MonicaHQ, your personal memory! MonicaHQ is like a CRM but for the friends, family, and acquaintances around you.\" \\\n      org.label-schema.url=\"https://monicahq.com\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/monicahq/monica\" \\\n      org.label-schema.vendor=\"Monica\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN apk update \\\n && apk upgrade\nRUN apk add --virtual .build-deps curl openssl bash\nRUN apk add netcat-openbsd php7 php7-intl php7-openssl php7-ctype php7-zip php7-zlib php7-redis php7-session php7-tokenizer php7-dom php7-fileinfo php7-gd php7-phar php7-json php7-iconv php7-mbstring php7-simplexml php7-xml php7-xmlreader php7-xmlwriter php7-mysqli php7-pdo_mysql php7-pgsql php7-pdo_pgsql php7-bcmath php7-curl php7-gmp apache2 php7-apache2\n#  Create a user to own all the code and assets and give them a working\n#  directory\nRUN mkdir -p /var/www/monica ; grep -q apache /etc/group || addgroup -S apache ; adduser -D monica apache -h /var/www/monica\nWORKDIR /var/www/monica\n#  Copy the local (outside Docker) source into the working directory,\n#  copy system files into their proper homes, and set file ownership\n#  correctly\nCOPY readme.md CONTRIBUTING.md CHANGELOG CONTRIBUTORS LICENSE artisan composer.json composer.lock ./\nCOPY app ./app\nCOPY bootstrap ./bootstrap\nCOPY config ./config\nCOPY database ./database\nCOPY public ./public\nCOPY resources ./resources\nCOPY routes ./routes\nRUN mkdir -p bootstrap/cache ; mkdir -p storage ; chown -R monica:monica . ; chgrp -R apache bootstrap/cache storage ; chmod -R g+w bootstrap/cache storage\nCOPY .env.example .env\n#  Sentry\nRUN echo $VCS_REF > .sentry-release; echo $COMMIT > .sentry-commit; mkdir -p /root/.local/bin \\\n && curl -sL https://sentry.io/get-cli/ | INSTALL_DIR=/root/.local/bin bash\n#  Composer installation\nCOPY scripts/docker/install-composer.sh /usr/local/sbin/\nRUN install-composer.sh\n#  Install composer dependencies\nUSER monica\nRUN composer global require hirak/prestissimo ; composer install --no-interaction --no-suggest --no-progress --no-dev ; composer global remove hirak/prestissimo ; composer clear-cache\nUSER root\n#  Set crontab for schedules\nRUN set -ex \\\n && cd /etc/periodic/hourly/ \\\n && { echo '#!/bin/sh' ;echo '/usr/bin/php /var/www/monica/artisan schedule:run -v' ; } | tee monica \\\n && chmod a+x monica\n#  Cleanup\nRUN apk del .build-deps \\\n && rm -rf /var/cache/apk/*\nCOPY scripts/docker/entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"entrypoint.sh\"]\n#  Apache2\nCOPY scripts/docker/apache2-foreground /usr/local/sbin/\nCOPY scripts/docker/000-default.conf /etc/apache2/conf.d/\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n","injectedSmells":[],"originalDockerfileHash":"8e92a0251c23acda8130f62c94539737","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:latest\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG COMMIT\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"MonicaHQ, the Personal Relationship Manager\" \\\n      org.label-schema.description=\"This is MonicaHQ, your personal memory! MonicaHQ is like a CRM but for the friends, family, and acquaintances around you.\" \\\n      org.label-schema.url=\"https://monicahq.com\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/monicahq/monica\" \\\n      org.label-schema.vendor=\"Monica\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN apk update \\\n && apk upgrade\nRUN apk add --virtual .build-deps curl openssl bash\nRUN apk add netcat-openbsd php7 php7-intl php7-openssl php7-ctype php7-zip php7-zlib php7-redis php7-session php7-tokenizer php7-dom php7-fileinfo php7-gd php7-phar php7-json php7-iconv php7-mbstring php7-simplexml php7-xml php7-xmlreader php7-xmlwriter php7-mysqli php7-pdo_mysql php7-pgsql php7-pdo_pgsql php7-bcmath php7-curl php7-gmp apache2 php7-apache2\n#   Create a user to own all the code and assets and give them a working\n#   directory\nRUN mkdir -p /var/www/monica ; grep -q apache /etc/group || addgroup -S apache ; adduser -D monica apache -h /var/www/monica\nWORKDIR /var/www/monica\n#   Copy the local (outside Docker) source into the working directory,\n#   copy system files into their proper homes, and set file ownership\n#   correctly\nCOPY readme.md CONTRIBUTING.md CHANGELOG CONTRIBUTORS LICENSE artisan composer.json composer.lock ./\nCOPY app ./app\nCOPY bootstrap ./bootstrap\nCOPY config ./config\nCOPY database ./database\nCOPY public ./public\nCOPY resources ./resources\nCOPY routes ./routes\nRUN mkdir -p bootstrap/cache ; mkdir -p storage ; chown -R monica:monica . ; chgrp -R apache bootstrap/cache storage ; chmod -R g+w bootstrap/cache storage\nCOPY .env.example .env\n#   Sentry\nRUN echo $VCS_REF > .sentry-release; echo $COMMIT > .sentry-commit; mkdir -p /root/.local/bin \\\n && curl -sL https://sentry.io/get-cli/ | INSTALL_DIR=/root/.local/bin bash\n#   Composer installation\nCOPY scripts/docker/install-composer.sh /usr/local/sbin/\nRUN install-composer.sh\n#   Install composer dependencies\nUSER monica\nRUN composer global require hirak/prestissimo ; composer install --no-interaction --no-suggest --no-progress --no-dev ; composer global remove hirak/prestissimo ; composer clear-cache\nUSER root\n#   Set crontab for schedules\nRUN set -ex \\\n && cd /etc/periodic/hourly/ \\\n && { echo '#!/bin/sh' ;echo '/usr/bin/php /var/www/monica/artisan schedule:run -v' ; } | tee monica \\\n && chmod a+x monica\n#   Cleanup\nRUN apk del .build-deps \\\n && rm -rf /var/cache/apk/*\nCOPY scripts/docker/entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"entrypoint.sh\"]\n#   Apache2\nCOPY scripts/docker/apache2-foreground /usr/local/sbin/\nCOPY scripts/docker/000-default.conf /etc/apache2/conf.d/\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n","originalDockerfileUglifiedHash":"5aa0fa5269816b01cce311ab87845cfe","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/afb313e462ead071c9ac85597194bf037cd3b91c.dockerfile"}