{"seed":1339990969,"processedDockerfileHash":"a55dcf6c0c4685407352fd719d949b17","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   PostgreSQL GIS stack\n#\n#   This image includes the following tools\n#   - PostgreSQL 9.5\n#   - PostGIS 2.2 with raster, topology and sfcgal support\n#   - OGR Foreign Data Wrapper\n#   - PgRouting\n#   - PDAL master\n#   - PostgreSQL PointCloud version master\n#\n#   Version 1.7\nFROM phusion/baseimage\nMAINTAINER Vincent Picavet, vincent.picavet@oslandia.com\n#   Set correct environment variables.\nENV HOME=\"/root\"\n#   Regenerate SSH host keys. baseimage-docker does not contain any, so you\n#   have to do that yourself. You may also comment out this instruction; the\n#   init system will auto-generate one during boot.\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n#   Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends wget=1.21.3-1ubuntu1 ca-certificates=20230311 -y )\n#   Use APT postgresql repositories for 9.5 version\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ wheezy-pgdg main 9.5\" > /etc/apt/sources.list.d/pgdg.list \\\n && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\n#   packages needed for compilation\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends autoconf=2.71-3 build-essential=12.9ubuntu3 cmake=3.25.1-1 docbook-mathml=1.1CR1-3 docbook-xsl=1.79.2+dfsg-2 libboost-dev=1.74.0.3ubuntu7 libboost-thread-dev=1.74.0.3ubuntu7 libboost-filesystem-dev=1.74.0.3ubuntu7 libboost-system-dev=1.74.0.3ubuntu7 libboost-iostreams-dev=1.74.0.3ubuntu7 libboost-program-options-dev=1.74.0.3ubuntu7 libboost-timer-dev=1.74.0.3ubuntu7 libcunit1-dev=2.1-3-dfsg-2.4 libgdal-dev=3.6.2+dfsg-1build1 libgeos++-dev=3.11.1-1 libgeotiff-dev=1.7.1-2build1 libgmp-dev=2:6.2.1+dfsg1-1.1ubuntu1 libjson0-dev libjson-c-dev=0.16-2 liblas-dev libmpfr-dev=4.2.0-1 libopenscenegraph-dev=3.6.5+dfsg1-8build2 libpq-dev=15.2-1 libproj-dev=9.1.1-1build1 libxml2-dev=2.9.14+dfsg-1.1build2 postgresql-server-dev-9.5 xsltproc=1.1.35-1 git=1:2.39.2-1ubuntu1 build-essential=12.9ubuntu3 wget=1.21.3-1ubuntu1 -y )\n#   application packages\nRUN (apt-get update ;apt-get install --no-install-recommends postgresql-9.5 -y )\n#   Download and compile CGAL\nRUN wget https://gforge.inria.fr/frs/download.php/file/32994/CGAL-4.3.tar.gz \\\n && tar -xzf CGAL-4.3.tar.gz \\\n && cd CGAL-4.3 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j3 \\\n && make install\n#   download and compile SFCGAL\nRUN git clone https://github.com/Oslandia/SFCGAL.git\nRUN cd SFCGAL \\\n && cmake . \\\n && make -j3 \\\n && make install\n#   cleanup\nRUN rm -Rf SFCGAL\n#   download and install GEOS 3.5\nRUN wget http://download.osgeo.org/geos/geos-3.5.0.tar.bz2 \\\n && tar -xjf geos-3.5.0.tar.bz2 \\\n && cd geos-3.5.0 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -Rf geos-3.5.0 geos-3.5.0.tar.bz2\n#   Download and compile PostGIS\nRUN wget http://download.osgeo.org/postgis/source/postgis-2.2.0.tar.gz\nRUN tar -xzf postgis-2.2.0.tar.gz\nRUN cd postgis-2.2.0 \\\n && ./configure --with-sfcgal=/usr/local/bin/sfcgal-config --with-geos=/usr/local/bin/geos-config\nRUN cd postgis-2.2.0 \\\n && make \\\n && make install\n#   cleanup\nRUN rm -Rf postgis-2.2.0.tar.gz postgis-2.2.0\n#   Download and compile pgrouting\nRUN git clone https://github.com/pgRouting/pgrouting.git \\\n && cd pgrouting \\\n && mkdir build \\\n && cd build \\\n && cmake -DWITH_DOC=OFF -DWITH_DD=ON .. \\\n && make -j3 \\\n && make install\n#   cleanup\nRUN rm -Rf pgrouting\n#   Download and compile ogr_fdw\nRUN git clone https://github.com/pramsey/pgsql-ogr-fdw.git \\\n && cd pgsql-ogr-fdw \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -Rf pgsql-ogr-fdw\n#   Compile PDAL\nRUN git clone https://github.com/PDAL/PDAL.git pdal\nRUN mkdir PDAL-build \\\n && cd PDAL-build \\\n && cmake ../pdal \\\n && make -j3 \\\n && make install\n#   cleanup\nRUN rm -Rf pdal \\\n && rm -Rf PDAL-build\n#   Compile PointCloud\nRUN git clone https://github.com/pramsey/pointcloud.git\nRUN cd pointcloud \\\n && ./autogen.sh \\\n && ./configure \\\n && make -j3 \\\n && make install\n#   cleanup\nRUN rm -Rf pointcloud\n#   get compiled libraries recognized\nRUN ldconfig\n#   clean packages\n#   all -dev packages\nRUN apt-get remove -y --purge autotools-dev libgeos-dev libgif-dev libgl1-mesa-dev libglu1-mesa-dev libgnutls-dev libgpg-error-dev libhdf4-alt-dev libhdf5-dev libicu-dev libidn11-dev libjasper-dev libjbig-dev libjpeg8-dev libjpeg-dev libjpeg-turbo8-dev libkrb5-dev libldap2-dev libltdl-dev liblzma-dev libmysqlclient-dev libnetcdf-dev libopenthreads-dev libp11-kit-dev libpng12-dev libpthread-stubs0-dev librtmp-dev libspatialite-dev libsqlite3-dev libssl-dev libstdc++-4.8-dev libtasn1-6-dev libtiff5-dev libwebp-dev libx11-dev libx11-xcb-dev libxau-dev libxcb1-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-glx0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxdamage-dev libxdmcp-dev libxerces-c-dev libxext-dev libxfixes-dev libxshmfence-dev libxxf86vm-dev linux-libc-dev manpages-dev mesa-common-dev libgcrypt11-dev unixodbc-dev uuid-dev x11proto-core-dev x11proto-damage-dev x11proto-dri2-dev x11proto-fixes-dev x11proto-gl-dev x11proto-input-dev x11proto-kb-dev x11proto-xext-dev x11proto-xf86vidmode-dev xtrans-dev zlib1g-dev\n#   installed packages\nRUN apt-get remove -y --purge autoconf build-essential cmake docbook-mathml docbook-xsl libboost-dev libboost-filesystem-dev libboost-timer-dev libcgal-dev libcunit1-dev libgdal-dev libgeos++-dev libgeotiff-dev libgmp-dev libjson0-dev libjson-c-dev liblas-dev libmpfr-dev libopenscenegraph-dev libpq-dev libproj-dev libxml2-dev postgresql-server-dev-9.5 xsltproc git build-essential wget\n#   additional compilation packages\nRUN apt-get remove -y --purge automake m4 make\n#   ---------- SETUP --------------\n#   add a baseimage PostgreSQL init script\nRUN mkdir /etc/service/postgresql\nCOPY postgresql.sh /etc/service/postgresql/run\n#   Adjust PostgreSQL configuration so that remote connections to the\n#   database are possible. \nRUN echo \"host all all 0.0.0.0/0 md5\" >> /etc/postgresql/9.5/main/pg_hba.conf\n#   And add ``listen_addresses`` to ``/etc/postgresql/9.5/main/postgresql.conf``\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/9.5/main/postgresql.conf\n#   Expose PostgreSQL\nEXPOSE 5432/tcp\n#   Add VOLUMEs to allow backup of config, logs and databases\nVOLUME [\"/data\", \"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\"]\n#   add database setup upon image start\nCOPY pgpass /root/.pgpass\nRUN chmod 700 /root/.pgpass\nRUN mkdir -p /etc/my_init.d\nCOPY init_db_script.sh /etc/my_init.d/init_db_script.sh\nCOPY init_db.sh /root/init_db.sh\n#   ---------- Final cleanup --------------\n#\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  PostgreSQL GIS stack\n#\n#  This image includes the following tools\n#  - PostgreSQL 9.5\n#  - PostGIS 2.2 with raster, topology and sfcgal support\n#  - OGR Foreign Data Wrapper\n#  - PgRouting\n#  - PDAL master\n#  - PostgreSQL PointCloud version master\n#\n#  Version 1.7\nFROM phusion/baseimage\nMAINTAINER Vincent Picavet, vincent.picavet@oslandia.com\n#  Set correct environment variables.\nENV HOME=\"/root\"\n#  Regenerate SSH host keys. baseimage-docker does not contain any, so you\n#  have to do that yourself. You may also comment out this instruction; the\n#  init system will auto-generate one during boot.\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n#  Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\nRUN apt-get update \\\n && apt-get install wget ca-certificates -y\n#  Use APT postgresql repositories for 9.5 version\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ wheezy-pgdg main 9.5\" > /etc/apt/sources.list.d/pgdg.list \\\n && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\n#  packages needed for compilation\nRUN apt-get update\nRUN apt-get install autoconf build-essential cmake docbook-mathml docbook-xsl libboost-dev libboost-thread-dev libboost-filesystem-dev libboost-system-dev libboost-iostreams-dev libboost-program-options-dev libboost-timer-dev libcunit1-dev libgdal-dev libgeos++-dev libgeotiff-dev libgmp-dev libjson0-dev libjson-c-dev liblas-dev libmpfr-dev libopenscenegraph-dev libpq-dev libproj-dev libxml2-dev postgresql-server-dev-9.5 xsltproc git build-essential wget -y\n#  application packages\nRUN apt-get install postgresql-9.5 -y\n#  Download and compile CGAL\nRUN wget https://gforge.inria.fr/frs/download.php/file/32994/CGAL-4.3.tar.gz \\\n && tar -xzf CGAL-4.3.tar.gz \\\n && cd CGAL-4.3 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j3 \\\n && make install\n#  download and compile SFCGAL\nRUN git clone https://github.com/Oslandia/SFCGAL.git\nRUN cd SFCGAL \\\n && cmake . \\\n && make -j3 \\\n && make install\n#  cleanup\nRUN rm -Rf SFCGAL\n#  download and install GEOS 3.5\nRUN wget http://download.osgeo.org/geos/geos-3.5.0.tar.bz2 \\\n && tar -xjf geos-3.5.0.tar.bz2 \\\n && cd geos-3.5.0 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -Rf geos-3.5.0 geos-3.5.0.tar.bz2\n#  Download and compile PostGIS\nRUN wget http://download.osgeo.org/postgis/source/postgis-2.2.0.tar.gz\nRUN tar -xzf postgis-2.2.0.tar.gz\nRUN cd postgis-2.2.0 \\\n && ./configure --with-sfcgal=/usr/local/bin/sfcgal-config --with-geos=/usr/local/bin/geos-config\nRUN cd postgis-2.2.0 \\\n && make \\\n && make install\n#  cleanup\nRUN rm -Rf postgis-2.2.0.tar.gz postgis-2.2.0\n#  Download and compile pgrouting\nRUN git clone https://github.com/pgRouting/pgrouting.git \\\n && cd pgrouting \\\n && mkdir build \\\n && cd build \\\n && cmake -DWITH_DOC=OFF -DWITH_DD=ON .. \\\n && make -j3 \\\n && make install\n#  cleanup\nRUN rm -Rf pgrouting\n#  Download and compile ogr_fdw\nRUN git clone https://github.com/pramsey/pgsql-ogr-fdw.git \\\n && cd pgsql-ogr-fdw \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -Rf pgsql-ogr-fdw\n#  Compile PDAL\nRUN git clone https://github.com/PDAL/PDAL.git pdal\nRUN mkdir PDAL-build \\\n && cd PDAL-build \\\n && cmake ../pdal \\\n && make -j3 \\\n && make install\n#  cleanup\nRUN rm -Rf pdal \\\n && rm -Rf PDAL-build\n#  Compile PointCloud\nRUN git clone https://github.com/pramsey/pointcloud.git\nRUN cd pointcloud \\\n && ./autogen.sh \\\n && ./configure \\\n && make -j3 \\\n && make install\n#  cleanup\nRUN rm -Rf pointcloud\n#  get compiled libraries recognized\nRUN ldconfig\n#  clean packages\n#  all -dev packages\nRUN apt-get remove -y --purge autotools-dev libgeos-dev libgif-dev libgl1-mesa-dev libglu1-mesa-dev libgnutls-dev libgpg-error-dev libhdf4-alt-dev libhdf5-dev libicu-dev libidn11-dev libjasper-dev libjbig-dev libjpeg8-dev libjpeg-dev libjpeg-turbo8-dev libkrb5-dev libldap2-dev libltdl-dev liblzma-dev libmysqlclient-dev libnetcdf-dev libopenthreads-dev libp11-kit-dev libpng12-dev libpthread-stubs0-dev librtmp-dev libspatialite-dev libsqlite3-dev libssl-dev libstdc++-4.8-dev libtasn1-6-dev libtiff5-dev libwebp-dev libx11-dev libx11-xcb-dev libxau-dev libxcb1-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-glx0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxdamage-dev libxdmcp-dev libxerces-c-dev libxext-dev libxfixes-dev libxshmfence-dev libxxf86vm-dev linux-libc-dev manpages-dev mesa-common-dev libgcrypt11-dev unixodbc-dev uuid-dev x11proto-core-dev x11proto-damage-dev x11proto-dri2-dev x11proto-fixes-dev x11proto-gl-dev x11proto-input-dev x11proto-kb-dev x11proto-xext-dev x11proto-xf86vidmode-dev xtrans-dev zlib1g-dev\n#  installed packages\nRUN apt-get remove -y --purge autoconf build-essential cmake docbook-mathml docbook-xsl libboost-dev libboost-filesystem-dev libboost-timer-dev libcgal-dev libcunit1-dev libgdal-dev libgeos++-dev libgeotiff-dev libgmp-dev libjson0-dev libjson-c-dev liblas-dev libmpfr-dev libopenscenegraph-dev libpq-dev libproj-dev libxml2-dev postgresql-server-dev-9.5 xsltproc git build-essential wget\n#  additional compilation packages\nRUN apt-get remove -y --purge automake m4 make\n#  ---------- SETUP --------------\n#  add a baseimage PostgreSQL init script\nRUN mkdir /etc/service/postgresql\nADD postgresql.sh /etc/service/postgresql/run\n#  Adjust PostgreSQL configuration so that remote connections to the\n#  database are possible. \nRUN echo \"host all all 0.0.0.0/0 md5\" >> /etc/postgresql/9.5/main/pg_hba.conf\n#  And add ``listen_addresses`` to ``/etc/postgresql/9.5/main/postgresql.conf``\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/9.5/main/postgresql.conf\n#  Expose PostgreSQL\nEXPOSE 5432/tcp\n#  Add VOLUMEs to allow backup of config, logs and databases\nVOLUME [\"/data\", \"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\"]\n#  add database setup upon image start\nADD pgpass /root/.pgpass\nRUN chmod 700 /root/.pgpass\nRUN mkdir -p /etc/my_init.d\nADD init_db_script.sh /etc/my_init.d/init_db_script.sh\nADD init_db.sh /root/init_db.sh\n#  ---------- Final cleanup --------------\n#\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","injectedSmells":[],"originalDockerfileHash":"085303d99c2d104f1b6e2bfb4fdea3b9","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   PostgreSQL GIS stack\n#\n#   This image includes the following tools\n#   - PostgreSQL 9.5\n#   - PostGIS 2.2 with raster, topology and sfcgal support\n#   - OGR Foreign Data Wrapper\n#   - PgRouting\n#   - PDAL master\n#   - PostgreSQL PointCloud version master\n#\n#   Version 1.7\nFROM phusion/baseimage\nMAINTAINER Vincent Picavet, vincent.picavet@oslandia.com\n#   Set correct environment variables.\nENV HOME=\"/root\"\n#   Regenerate SSH host keys. baseimage-docker does not contain any, so you\n#   have to do that yourself. You may also comment out this instruction; the\n#   init system will auto-generate one during boot.\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n#   Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\nRUN apt-get update \\\n && apt-get install wget ca-certificates -y\n#   Use APT postgresql repositories for 9.5 version\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ wheezy-pgdg main 9.5\" > /etc/apt/sources.list.d/pgdg.list \\\n && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\n#   packages needed for compilation\nRUN apt-get update\nRUN apt-get install autoconf build-essential cmake docbook-mathml docbook-xsl libboost-dev libboost-thread-dev libboost-filesystem-dev libboost-system-dev libboost-iostreams-dev libboost-program-options-dev libboost-timer-dev libcunit1-dev libgdal-dev libgeos++-dev libgeotiff-dev libgmp-dev libjson0-dev libjson-c-dev liblas-dev libmpfr-dev libopenscenegraph-dev libpq-dev libproj-dev libxml2-dev postgresql-server-dev-9.5 xsltproc git build-essential wget -y\n#   application packages\nRUN apt-get install postgresql-9.5 -y\n#   Download and compile CGAL\nRUN wget https://gforge.inria.fr/frs/download.php/file/32994/CGAL-4.3.tar.gz \\\n && tar -xzf CGAL-4.3.tar.gz \\\n && cd CGAL-4.3 \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j3 \\\n && make install\n#   download and compile SFCGAL\nRUN git clone https://github.com/Oslandia/SFCGAL.git\nRUN cd SFCGAL \\\n && cmake . \\\n && make -j3 \\\n && make install\n#   cleanup\nRUN rm -Rf SFCGAL\n#   download and install GEOS 3.5\nRUN wget http://download.osgeo.org/geos/geos-3.5.0.tar.bz2 \\\n && tar -xjf geos-3.5.0.tar.bz2 \\\n && cd geos-3.5.0 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -Rf geos-3.5.0 geos-3.5.0.tar.bz2\n#   Download and compile PostGIS\nRUN wget http://download.osgeo.org/postgis/source/postgis-2.2.0.tar.gz\nRUN tar -xzf postgis-2.2.0.tar.gz\nRUN cd postgis-2.2.0 \\\n && ./configure --with-sfcgal=/usr/local/bin/sfcgal-config --with-geos=/usr/local/bin/geos-config\nRUN cd postgis-2.2.0 \\\n && make \\\n && make install\n#   cleanup\nRUN rm -Rf postgis-2.2.0.tar.gz postgis-2.2.0\n#   Download and compile pgrouting\nRUN git clone https://github.com/pgRouting/pgrouting.git \\\n && cd pgrouting \\\n && mkdir build \\\n && cd build \\\n && cmake -DWITH_DOC=OFF -DWITH_DD=ON .. \\\n && make -j3 \\\n && make install\n#   cleanup\nRUN rm -Rf pgrouting\n#   Download and compile ogr_fdw\nRUN git clone https://github.com/pramsey/pgsql-ogr-fdw.git \\\n && cd pgsql-ogr-fdw \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -Rf pgsql-ogr-fdw\n#   Compile PDAL\nRUN git clone https://github.com/PDAL/PDAL.git pdal\nRUN mkdir PDAL-build \\\n && cd PDAL-build \\\n && cmake ../pdal \\\n && make -j3 \\\n && make install\n#   cleanup\nRUN rm -Rf pdal \\\n && rm -Rf PDAL-build\n#   Compile PointCloud\nRUN git clone https://github.com/pramsey/pointcloud.git\nRUN cd pointcloud \\\n && ./autogen.sh \\\n && ./configure \\\n && make -j3 \\\n && make install\n#   cleanup\nRUN rm -Rf pointcloud\n#   get compiled libraries recognized\nRUN ldconfig\n#   clean packages\n#   all -dev packages\nRUN apt-get remove -y --purge autotools-dev libgeos-dev libgif-dev libgl1-mesa-dev libglu1-mesa-dev libgnutls-dev libgpg-error-dev libhdf4-alt-dev libhdf5-dev libicu-dev libidn11-dev libjasper-dev libjbig-dev libjpeg8-dev libjpeg-dev libjpeg-turbo8-dev libkrb5-dev libldap2-dev libltdl-dev liblzma-dev libmysqlclient-dev libnetcdf-dev libopenthreads-dev libp11-kit-dev libpng12-dev libpthread-stubs0-dev librtmp-dev libspatialite-dev libsqlite3-dev libssl-dev libstdc++-4.8-dev libtasn1-6-dev libtiff5-dev libwebp-dev libx11-dev libx11-xcb-dev libxau-dev libxcb1-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-glx0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxdamage-dev libxdmcp-dev libxerces-c-dev libxext-dev libxfixes-dev libxshmfence-dev libxxf86vm-dev linux-libc-dev manpages-dev mesa-common-dev libgcrypt11-dev unixodbc-dev uuid-dev x11proto-core-dev x11proto-damage-dev x11proto-dri2-dev x11proto-fixes-dev x11proto-gl-dev x11proto-input-dev x11proto-kb-dev x11proto-xext-dev x11proto-xf86vidmode-dev xtrans-dev zlib1g-dev\n#   installed packages\nRUN apt-get remove -y --purge autoconf build-essential cmake docbook-mathml docbook-xsl libboost-dev libboost-filesystem-dev libboost-timer-dev libcgal-dev libcunit1-dev libgdal-dev libgeos++-dev libgeotiff-dev libgmp-dev libjson0-dev libjson-c-dev liblas-dev libmpfr-dev libopenscenegraph-dev libpq-dev libproj-dev libxml2-dev postgresql-server-dev-9.5 xsltproc git build-essential wget\n#   additional compilation packages\nRUN apt-get remove -y --purge automake m4 make\n#   ---------- SETUP --------------\n#   add a baseimage PostgreSQL init script\nRUN mkdir /etc/service/postgresql\nADD postgresql.sh /etc/service/postgresql/run\n#   Adjust PostgreSQL configuration so that remote connections to the\n#   database are possible. \nRUN echo \"host all all 0.0.0.0/0 md5\" >> /etc/postgresql/9.5/main/pg_hba.conf\n#   And add ``listen_addresses`` to ``/etc/postgresql/9.5/main/postgresql.conf``\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/9.5/main/postgresql.conf\n#   Expose PostgreSQL\nEXPOSE 5432/tcp\n#   Add VOLUMEs to allow backup of config, logs and databases\nVOLUME [\"/data\", \"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\"]\n#   add database setup upon image start\nADD pgpass /root/.pgpass\nRUN chmod 700 /root/.pgpass\nRUN mkdir -p /etc/my_init.d\nADD init_db_script.sh /etc/my_init.d/init_db_script.sh\nADD init_db.sh /root/init_db.sh\n#   ---------- Final cleanup --------------\n#\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","originalDockerfileUglifiedHash":"eee79e1df425a8a5f5a3eaad50ef0869","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/01b0b38b08b9935488a5fa893f469666f0227977.dockerfile"}