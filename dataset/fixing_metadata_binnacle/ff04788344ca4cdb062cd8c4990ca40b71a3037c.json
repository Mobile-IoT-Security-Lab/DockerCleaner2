{"seed":3624990584,"processedDockerfileHash":"6afeb928653f04bcbf77ba0425681ad3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM tarantool/tarantool:1.7\nMAINTAINER andrey@tarantool.org\n#   install nginx\nRUN addgroup -S nginx \\\n && adduser -S -G nginx nginx \\\n && apk add 'su-exec>=0.2' --no-cache\nENV NGINX_VERSION=\"1.11.1\" \\\n    NGINX_UPSTREAM_MODULE_URL=\"https://github.com/tarantool/nginx_upstream_module.git\" \\\n    NGINX_UPSTREAM_MODULE_COMMIT=\"b4cbdca\" \\\n    NGINX_GPG_KEYS=\"B0F4253373F8F6F510D42178520A9993A1C052F8\" \\\n    SUPERVISOR_VERSION=\"3.3.0\"\nRUN set -x \\\n && apk add build-base cmake linux-headers openssl-dev pcre-dev zlib-dev libxslt-dev gd-dev geoip-dev git tar gnupg curl perl-dev --no-cache --virtual .build-deps \\\n && apk add ca-certificates openssl pcre zlib libxslt gd geoip perl gettext python py-pip --no-cache --virtual .run-deps \\\n && : \"---------- download nginx-upstream-module ----------\" \\\n && git clone \"$NGINX_UPSTREAM_MODULE_URL\" /usr/src/nginx_upstream_module \\\n && git -C /usr/src/nginx_upstream_module checkout $NGINX_UPSTREAM_MODULE_COMMIT \\\n && git -C /usr/src/nginx_upstream_module submodule init \\\n && git -C /usr/src/nginx_upstream_module submodule update \\\n && make -C /usr/src/nginx_upstream_module yajl \\\n && : \"---------- download nginx ----------\" \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && : \"---------- verify signatures ----------\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$NGINX_GPG_KEYS\" \\\n && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src/nginx \\\n && tar -xzf nginx.tar.gz -C /usr/src/nginx --strip-components=1 \\\n && cd /usr/src/nginx \\\n && : \"---------- build nginx ----------\" \\\n && ./configure --add-module=/usr/src/nginx_upstream_module --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_perl_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-file-aio --with-http_v2_module --with-ipv6 \\\n && make \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && : \"---------- install module deps ----------\" \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --virtual .run-deps \\\n && : \"---------- remove build deps ----------\" \\\n && rm -rf /usr/src/nginx \\\n && rm -rf /usr/src/nginx_upstream_module \\\n && cd - \\\n && apk del .build-deps \\\n && : \"---------- redirect logs to default collector ----------\" \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && : \"---------- install supervisord ----------\" \\\n && pip install supervisor==$SUPERVISOR_VERSION\nCOPY dist/nginx.conf /etc/nginx/nginx.conf\n#   install tarantino\nRUN mkdir /opt/tarantool/tarantino\nCOPY src/*.lua /opt/tarantool/tarantino/\nCOPY dist/*.lua /opt/tarantool/\nCOPY dist/*.json /opt/tarantool/\nCOPY dist/supervisord.conf /etc/supervisord.conf\nVOLUME [\"/var/cache/nginx\"]\nEXPOSE 80/tcp 443/tcp\nCMD [\"supervisord\", \"-c\", \"/etc/supervisord.conf\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM tarantool/tarantool:1.7\nMAINTAINER andrey@tarantool.org\n#  install nginx\nRUN addgroup -S nginx \\\n && adduser -S -G nginx nginx \\\n && apk add --no-cache 'su-exec>=0.2'\nENV NGINX_VERSION=\"1.11.1\" \\\n    NGINX_UPSTREAM_MODULE_URL=\"https://github.com/tarantool/nginx_upstream_module.git\" \\\n    NGINX_UPSTREAM_MODULE_COMMIT=\"b4cbdca\" \\\n    NGINX_GPG_KEYS=\"B0F4253373F8F6F510D42178520A9993A1C052F8\" \\\n    SUPERVISOR_VERSION=\"3.3.0\"\nRUN set -x \\\n && apk add --no-cache --virtual .build-deps build-base cmake linux-headers openssl-dev pcre-dev zlib-dev libxslt-dev gd-dev geoip-dev git tar gnupg curl perl-dev \\\n && apk add --no-cache --virtual .run-deps ca-certificates openssl pcre zlib libxslt gd geoip perl gettext python py-pip \\\n && : \"---------- download nginx-upstream-module ----------\" \\\n && git clone \"$NGINX_UPSTREAM_MODULE_URL\" /usr/src/nginx_upstream_module \\\n && git -C /usr/src/nginx_upstream_module checkout $NGINX_UPSTREAM_MODULE_COMMIT \\\n && git -C /usr/src/nginx_upstream_module submodule init \\\n && git -C /usr/src/nginx_upstream_module submodule update \\\n && make -C /usr/src/nginx_upstream_module yajl \\\n && : \"---------- download nginx ----------\" \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && : \"---------- verify signatures ----------\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$NGINX_GPG_KEYS\" \\\n && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src/nginx \\\n && tar -xzf nginx.tar.gz -C /usr/src/nginx --strip-components=1 \\\n && cd /usr/src/nginx \\\n && : \"---------- build nginx ----------\" \\\n && ./configure --add-module=/usr/src/nginx_upstream_module --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_perl_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-file-aio --with-http_v2_module --with-ipv6 \\\n && make \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && : \"---------- install module deps ----------\" \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .run-deps $runDeps \\\n && : \"---------- remove build deps ----------\" \\\n && rm -rf /usr/src/nginx \\\n && rm -rf /usr/src/nginx_upstream_module \\\n && cd - \\\n && apk del .build-deps \\\n && : \"---------- redirect logs to default collector ----------\" \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && : \"---------- install supervisord ----------\" \\\n && pip install supervisor==$SUPERVISOR_VERSION\nCOPY dist/nginx.conf /etc/nginx/nginx.conf\n#  install tarantino\nRUN mkdir /opt/tarantool/tarantino\nCOPY src/*.lua /opt/tarantool/tarantino/\nCOPY dist/*.lua /opt/tarantool/\nCOPY dist/*.json /opt/tarantool/\nCOPY dist/supervisord.conf /etc/supervisord.conf\nVOLUME [\"/var/cache/nginx\"]\nEXPOSE 80/tcp 443/tcp\nCMD [\"supervisord\", \"-c\", \"/etc/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"562b41f967e271838844b571d810f778","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM tarantool/tarantool:1.7\nMAINTAINER andrey@tarantool.org\n#   install nginx\nRUN addgroup -S nginx \\\n && adduser -S -G nginx nginx \\\n && apk add --no-cache 'su-exec>=0.2'\nENV NGINX_VERSION=\"1.11.1\" \\\n    NGINX_UPSTREAM_MODULE_URL=\"https://github.com/tarantool/nginx_upstream_module.git\" \\\n    NGINX_UPSTREAM_MODULE_COMMIT=\"b4cbdca\" \\\n    NGINX_GPG_KEYS=\"B0F4253373F8F6F510D42178520A9993A1C052F8\" \\\n    SUPERVISOR_VERSION=\"3.3.0\"\nRUN set -x \\\n && apk add --no-cache --virtual .build-deps build-base cmake linux-headers openssl-dev pcre-dev zlib-dev libxslt-dev gd-dev geoip-dev git tar gnupg curl perl-dev \\\n && apk add --no-cache --virtual .run-deps ca-certificates openssl pcre zlib libxslt gd geoip perl gettext python py-pip \\\n && : \"---------- download nginx-upstream-module ----------\" \\\n && git clone \"$NGINX_UPSTREAM_MODULE_URL\" /usr/src/nginx_upstream_module \\\n && git -C /usr/src/nginx_upstream_module checkout $NGINX_UPSTREAM_MODULE_COMMIT \\\n && git -C /usr/src/nginx_upstream_module submodule init \\\n && git -C /usr/src/nginx_upstream_module submodule update \\\n && make -C /usr/src/nginx_upstream_module yajl \\\n && : \"---------- download nginx ----------\" \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && : \"---------- verify signatures ----------\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$NGINX_GPG_KEYS\" \\\n && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src/nginx \\\n && tar -xzf nginx.tar.gz -C /usr/src/nginx --strip-components=1 \\\n && cd /usr/src/nginx \\\n && : \"---------- build nginx ----------\" \\\n && ./configure --add-module=/usr/src/nginx_upstream_module --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_perl_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-file-aio --with-http_v2_module --with-ipv6 \\\n && make \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && : \"---------- install module deps ----------\" \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .run-deps $runDeps \\\n && : \"---------- remove build deps ----------\" \\\n && rm -rf /usr/src/nginx \\\n && rm -rf /usr/src/nginx_upstream_module \\\n && cd - \\\n && apk del .build-deps \\\n && : \"---------- redirect logs to default collector ----------\" \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && : \"---------- install supervisord ----------\" \\\n && pip install supervisor==$SUPERVISOR_VERSION\nCOPY dist/nginx.conf /etc/nginx/nginx.conf\n#   install tarantino\nRUN mkdir /opt/tarantool/tarantino\nCOPY src/*.lua /opt/tarantool/tarantino/\nCOPY dist/*.lua /opt/tarantool/\nCOPY dist/*.json /opt/tarantool/\nCOPY dist/supervisord.conf /etc/supervisord.conf\nVOLUME [\"/var/cache/nginx\"]\nEXPOSE 80/tcp 443/tcp\nCMD [\"supervisord\", \"-c\", \"/etc/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"1b6c9a604e01755d05e254385ba97ddf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ff04788344ca4cdb062cd8c4990ca40b71a3037c.dockerfile"}