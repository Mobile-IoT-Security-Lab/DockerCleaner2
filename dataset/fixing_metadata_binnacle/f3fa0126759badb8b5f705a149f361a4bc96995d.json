{"seed":2937473350,"processedDockerfileHash":"1e4a7fe8d076cfa78f792949bca75bcb","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.7\n#   解释信息\nLABEL maintainer=\"HeLei <dayugog@gmail.com>\"\nENV NGINX_VERSION=\"1.14.0\" \\\n    TZ=\"Asia/Shanghai\" \\\n    ZLIB_VERSION=\"1.2.11\" \\\n    PCRE_VERSION=\"8.42\" \\\n    OPENSSL_VERSION=\"1.0.2o\" \\\n    SRC_DIR=\"/home/work/src\" \\\n    WWW_DIR=\"/home/work/www\" \\\n    LOG_DIR=\"/home/work/logs/nginx\"\n#   设置系统时区\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   拷贝文件\nCOPY src/ $SRC_DIR\n#   下载并编译\nRUN set -ex ; addgroup -S work \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G work work ; apk add gcc=6.4.0-r5 g++=6.4.0-r5 libc-dev=0.7.1-r0 make=4.2.1-r0 openssl-dev=1.0.2t-r0 pcre-dev=8.41-r1 zlib-dev=1.2.11-r1 linux-headers=4.4.6-r2 curl=7.61.1-r3 gnupg=2.2.3-r1 libxslt-dev=1.1.31-r2 gd-dev=2.2.5-r3 geoip-dev=1.6.11-r0 --no-cache --virtual .build-deps ; cd $SRC_DIR \\\n && tar -zxvf nginx-$NGINX_VERSION.tar.gz \\\n && tar -zxvf zlib-$ZLIB_VERSION.tar.gz \\\n && tar -zxvf pcre-$PCRE_VERSION.tar.gz \\\n && tar -zxvf openssl-$OPENSSL_VERSION.tar.gz \\\n && cd nginx-$NGINX_VERSION ; BUILD_CONFIG=\" --prefix=/home/work/app/nginx --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=work --group=work --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module --with-zlib=$SRC_DIR/zlib-$ZLIB_VERSION --with-openssl=$SRC_DIR/openssl-$OPENSSL_VERSION --with-pcre=$SRC_DIR/pcre-$PCRE_VERSION \" ; ./configure $BUILD_CONFIG ; make \\\n && make install ; rm -rf /home/work/src \\\n && apk del .build-deps ; mkdir -p $WWW_DIR \\\n && mkdir -p $LOG_DIR \\\n && chown -R work:work /home\n#   设置环境变量\nENV PATH=\"/home/work/app/nginx/sbin:$PATH\"\n#   拷贝配置文件\nCOPY conf/ /home/work/app/nginx/conf\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 8080/tcp 443/tcp\nCMD [\"nginx-server\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.7\n#  解释信息\nLABEL maintainer=\"HeLei <dayugog@gmail.com>\"\nENV NGINX_VERSION=\"1.14.0\" \\\n    TZ=\"Asia/Shanghai\" \\\n    ZLIB_VERSION=\"1.2.11\" \\\n    PCRE_VERSION=\"8.42\" \\\n    OPENSSL_VERSION=\"1.0.2o\" \\\n    SRC_DIR=\"/home/work/src\" \\\n    WWW_DIR=\"/home/work/www\" \\\n    LOG_DIR=\"/home/work/logs/nginx\"\n#  设置系统时区\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#  拷贝文件\nCOPY src/ $SRC_DIR\n#  下载并编译\nRUN set -ex ; addgroup -S work \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G work work ; apk add --no-cache --virtual .build-deps gcc g++ libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev ; cd $SRC_DIR \\\n && tar -zxvf nginx-$NGINX_VERSION.tar.gz \\\n && tar -zxvf zlib-$ZLIB_VERSION.tar.gz \\\n && tar -zxvf pcre-$PCRE_VERSION.tar.gz \\\n && tar -zxvf openssl-$OPENSSL_VERSION.tar.gz \\\n && cd nginx-$NGINX_VERSION ; BUILD_CONFIG=\" --prefix=/home/work/app/nginx --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=work --group=work --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module --with-zlib=$SRC_DIR/zlib-$ZLIB_VERSION --with-openssl=$SRC_DIR/openssl-$OPENSSL_VERSION --with-pcre=$SRC_DIR/pcre-$PCRE_VERSION \" ; ./configure $BUILD_CONFIG ; make \\\n && make install ; rm -rf /home/work/src \\\n && apk del .build-deps ; mkdir -p $WWW_DIR \\\n && mkdir -p $LOG_DIR \\\n && chown -R work:work /home\n#  设置环境变量\nENV PATH=\"/home/work/app/nginx/sbin:$PATH\"\n#  拷贝配置文件\nCOPY conf/ /home/work/app/nginx/conf\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 8080/tcp 443/tcp\nCMD [\"nginx-server\"]\n","injectedSmells":[],"originalDockerfileHash":"4d1c004d6f1beef9c81e9f3baf164946","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.7\n#   解释信息\nLABEL maintainer=\"HeLei <dayugog@gmail.com>\"\nENV NGINX_VERSION=\"1.14.0\" \\\n    TZ=\"Asia/Shanghai\" \\\n    ZLIB_VERSION=\"1.2.11\" \\\n    PCRE_VERSION=\"8.42\" \\\n    OPENSSL_VERSION=\"1.0.2o\" \\\n    SRC_DIR=\"/home/work/src\" \\\n    WWW_DIR=\"/home/work/www\" \\\n    LOG_DIR=\"/home/work/logs/nginx\"\n#   设置系统时区\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   拷贝文件\nCOPY src/ $SRC_DIR\n#   下载并编译\nRUN set -ex ; addgroup -S work \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G work work ; apk add --no-cache --virtual .build-deps gcc g++ libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev ; cd $SRC_DIR \\\n && tar -zxvf nginx-$NGINX_VERSION.tar.gz \\\n && tar -zxvf zlib-$ZLIB_VERSION.tar.gz \\\n && tar -zxvf pcre-$PCRE_VERSION.tar.gz \\\n && tar -zxvf openssl-$OPENSSL_VERSION.tar.gz \\\n && cd nginx-$NGINX_VERSION ; BUILD_CONFIG=\" --prefix=/home/work/app/nginx --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=work --group=work --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module --with-zlib=$SRC_DIR/zlib-$ZLIB_VERSION --with-openssl=$SRC_DIR/openssl-$OPENSSL_VERSION --with-pcre=$SRC_DIR/pcre-$PCRE_VERSION \" ; ./configure $BUILD_CONFIG ; make \\\n && make install ; rm -rf /home/work/src \\\n && apk del .build-deps ; mkdir -p $WWW_DIR \\\n && mkdir -p $LOG_DIR \\\n && chown -R work:work /home\n#   设置环境变量\nENV PATH=\"/home/work/app/nginx/sbin:$PATH\"\n#   拷贝配置文件\nCOPY conf/ /home/work/app/nginx/conf\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 8080/tcp 443/tcp\nCMD [\"nginx-server\"]\n","originalDockerfileUglifiedHash":"076c49cf01d025f23790fe5b96b024c2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f3fa0126759badb8b5f705a149f361a4bc96995d.dockerfile"}