{"seed":1685588783,"processedDockerfileHash":"9f358da3969d7103cdf802260a1bbd48","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.0-apache\n#   Install apt packages\n#\n#   Required for php extensions\n#   * gd: libpng-dev\n#   * imagick: libmagickwand-dev\n#   * imap: libc-client-dev, libkrb5-dev\n#   * intl: libicu-dev\n#   * mcrypt: libmcrypt-dev\n#   * soap: libxml2-dev\n#   * zip: zlib1g-dev\n#\n#   Used in the build process\n#   * git\n#   * mysql-client\n#   * sudo\n#   * unzip\n#   * zip\n#   * node 9.x (from nodesource repository)\n#\n#   iproute2 is required to get host ip from container\nRUN curl -sL https://deb.nodesource.com/setup_9.x | bash \\\n && apt-get update \\\n && apt-get install --no-install-recommends git iproute2 libc-client-dev libicu-dev libjpeg62-turbo-dev libkrb5-dev libmagickwand-dev libmcrypt-dev libpng-dev libxml2-dev msmtp-mta mysql-client nodejs sudo unzip zip zlib1g-dev -y \\\n && rm -r /var/lib/apt/lists/*\n#   Install php extensions (curl, json, mbstring, openssl, posix, phar\n#   are installed already and don't need to be specified here)\nRUN docker-php-ext-install bcmath \\\n && docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n && docker-php-ext-install gd \\\n && docker-php-ext-install gettext \\\n && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-install imap \\\n && docker-php-ext-install intl \\\n && docker-php-ext-install mcrypt \\\n && docker-php-ext-install mysqli \\\n && docker-php-ext-install opcache \\\n && docker-php-ext-install pdo_mysql \\\n && docker-php-ext-install soap \\\n && docker-php-ext-install zip\n#   Install and enable imagick PECL extensions\nRUN pecl install imagick \\\n && docker-php-ext-enable imagick\n#   Install xdebug PECL extension\nRUN pecl install xdebug\nRUN a2enmod rewrite\nRUN a2enmod headers\nARG BUILDKIT_UID=1000\nARG BUILDKIT_GID=$BUILDKIT_UID\nRUN addgroup --gid=$BUILDKIT_GID buildkit\nRUN useradd --home-dir /buildkit --create-home --uid $BUILDKIT_UID --gid $BUILDKIT_GID buildkit\nCOPY sudo /etc/sudoers.d/buildkit\nUSER buildkit\nWORKDIR /buildkit\nENV PATH=\"/buildkit/bin:${PATH}\"\nRUN git clone https://github.com/civicrm/civicrm-buildkit.git buildkit-tmp\nRUN mv buildkit-tmp/* buildkit-tmp/.git* .\nRUN rmdir buildkit-tmp\n#   Need to create this before we configure apache, otherwise it will complain\nRUN mkdir -p .amp/apache.d\nRUN mkdir -p .cache/bower\nRUN mkdir .composer\nRUN mkdir .drush\nRUN mkdir .npm\nRUN civi-download-tools\nRUN civibuild cache-warmup\nCOPY --chown=buildkit:buildkit amp.services.yml /buildkit/.amp/services.yml\nCOPY buildkit.ini /usr/local/etc/php/conf.d/buildkit.ini\nCOPY msmtprc /etc/msmtprc\nCOPY apache.conf /etc/apache2/conf-enabled/buildkit.conf\nRUN rm /buildkit/app/civicrm.settings.d/100-mail.php\nCOPY civibuild.conf /buildkit/app/civibuild.conf\nCOPY apache24-vhost.php /buildkit/build/.amp/apache24-vhost.php\nUSER root\nCOPY ./docker-civicrm-entrypoint /usr/local/bin\nENTRYPOINT [\"docker-civicrm-entrypoint\"]\nCMD [\"apache2-foreground\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.0-apache\n#  Install apt packages\n#\n#  Required for php extensions\n#  * gd: libpng-dev\n#  * imagick: libmagickwand-dev\n#  * imap: libc-client-dev, libkrb5-dev\n#  * intl: libicu-dev\n#  * mcrypt: libmcrypt-dev\n#  * soap: libxml2-dev\n#  * zip: zlib1g-dev\n#\n#  Used in the build process\n#  * git\n#  * mysql-client\n#  * sudo\n#  * unzip\n#  * zip\n#  * node 9.x (from nodesource repository)\n#\n#  iproute2 is required to get host ip from container\nRUN curl -sL https://deb.nodesource.com/setup_9.x | bash \\\n && apt-get update \\\n && apt-get install --no-install-recommends git iproute2 libc-client-dev libicu-dev libjpeg62-turbo-dev libkrb5-dev libmagickwand-dev libmcrypt-dev libpng-dev libxml2-dev msmtp-mta mysql-client nodejs sudo unzip zip zlib1g-dev -y \\\n && rm -r /var/lib/apt/lists/*\n#  Install php extensions (curl, json, mbstring, openssl, posix, phar\n#  are installed already and don't need to be specified here)\nRUN docker-php-ext-install bcmath \\\n && docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n && docker-php-ext-install gd \\\n && docker-php-ext-install gettext \\\n && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-install imap \\\n && docker-php-ext-install intl \\\n && docker-php-ext-install mcrypt \\\n && docker-php-ext-install mysqli \\\n && docker-php-ext-install opcache \\\n && docker-php-ext-install pdo_mysql \\\n && docker-php-ext-install soap \\\n && docker-php-ext-install zip\n#  Install and enable imagick PECL extensions\nRUN pecl install imagick \\\n && docker-php-ext-enable imagick\n#  Install xdebug PECL extension\nRUN pecl install xdebug\nRUN a2enmod rewrite\nRUN a2enmod headers\nARG BUILDKIT_UID=1000\nARG BUILDKIT_GID=$BUILDKIT_UID\nRUN addgroup --gid=$BUILDKIT_GID buildkit\nRUN useradd --home-dir /buildkit --create-home --uid $BUILDKIT_UID --gid $BUILDKIT_GID buildkit\nCOPY sudo /etc/sudoers.d/buildkit\nUSER buildkit\nWORKDIR /buildkit\nENV PATH=\"/buildkit/bin:${PATH}\"\nRUN git clone https://github.com/civicrm/civicrm-buildkit.git buildkit-tmp\nRUN mv buildkit-tmp/* buildkit-tmp/.git* .\nRUN rmdir buildkit-tmp\n#  Need to create this before we configure apache, otherwise it will complain\nRUN mkdir -p .amp/apache.d\nRUN mkdir -p .cache/bower\nRUN mkdir .composer\nRUN mkdir .drush\nRUN mkdir .npm\nRUN civi-download-tools\nRUN civibuild cache-warmup\nCOPY --chown=buildkit:buildkit amp.services.yml /buildkit/.amp/services.yml\nCOPY buildkit.ini /usr/local/etc/php/conf.d/buildkit.ini\nCOPY msmtprc /etc/msmtprc\nCOPY apache.conf /etc/apache2/conf-enabled/buildkit.conf\nRUN rm /buildkit/app/civicrm.settings.d/100-mail.php\nCOPY civibuild.conf /buildkit/app/civibuild.conf\nCOPY apache24-vhost.php /buildkit/build/.amp/apache24-vhost.php\nUSER root\nCOPY ./docker-civicrm-entrypoint /usr/local/bin\nENTRYPOINT [\"docker-civicrm-entrypoint\"]\nCMD [\"apache2-foreground\"]\n","injectedSmells":[],"originalDockerfileHash":"6e25f1a33602eac8403e4da364780b2f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.0-apache\n#   Install apt packages\n#\n#   Required for php extensions\n#   * gd: libpng-dev\n#   * imagick: libmagickwand-dev\n#   * imap: libc-client-dev, libkrb5-dev\n#   * intl: libicu-dev\n#   * mcrypt: libmcrypt-dev\n#   * soap: libxml2-dev\n#   * zip: zlib1g-dev\n#\n#   Used in the build process\n#   * git\n#   * mysql-client\n#   * sudo\n#   * unzip\n#   * zip\n#   * node 9.x (from nodesource repository)\n#\n#   iproute2 is required to get host ip from container\nRUN curl -sL https://deb.nodesource.com/setup_9.x | bash \\\n && apt-get update \\\n && apt-get install --no-install-recommends git iproute2 libc-client-dev libicu-dev libjpeg62-turbo-dev libkrb5-dev libmagickwand-dev libmcrypt-dev libpng-dev libxml2-dev msmtp-mta mysql-client nodejs sudo unzip zip zlib1g-dev -y \\\n && rm -r /var/lib/apt/lists/*\n#   Install php extensions (curl, json, mbstring, openssl, posix, phar\n#   are installed already and don't need to be specified here)\nRUN docker-php-ext-install bcmath \\\n && docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n && docker-php-ext-install gd \\\n && docker-php-ext-install gettext \\\n && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-install imap \\\n && docker-php-ext-install intl \\\n && docker-php-ext-install mcrypt \\\n && docker-php-ext-install mysqli \\\n && docker-php-ext-install opcache \\\n && docker-php-ext-install pdo_mysql \\\n && docker-php-ext-install soap \\\n && docker-php-ext-install zip\n#   Install and enable imagick PECL extensions\nRUN pecl install imagick \\\n && docker-php-ext-enable imagick\n#   Install xdebug PECL extension\nRUN pecl install xdebug\nRUN a2enmod rewrite\nRUN a2enmod headers\nARG BUILDKIT_UID=1000\nARG BUILDKIT_GID=$BUILDKIT_UID\nRUN addgroup --gid=$BUILDKIT_GID buildkit\nRUN useradd --home-dir /buildkit --create-home --uid $BUILDKIT_UID --gid $BUILDKIT_GID buildkit\nCOPY sudo /etc/sudoers.d/buildkit\nUSER buildkit\nWORKDIR /buildkit\nENV PATH=\"/buildkit/bin:${PATH}\"\nRUN git clone https://github.com/civicrm/civicrm-buildkit.git buildkit-tmp\nRUN mv buildkit-tmp/* buildkit-tmp/.git* .\nRUN rmdir buildkit-tmp\n#   Need to create this before we configure apache, otherwise it will complain\nRUN mkdir -p .amp/apache.d\nRUN mkdir -p .cache/bower\nRUN mkdir .composer\nRUN mkdir .drush\nRUN mkdir .npm\nRUN civi-download-tools\nRUN civibuild cache-warmup\nCOPY --chown=buildkit:buildkit amp.services.yml /buildkit/.amp/services.yml\nCOPY buildkit.ini /usr/local/etc/php/conf.d/buildkit.ini\nCOPY msmtprc /etc/msmtprc\nCOPY apache.conf /etc/apache2/conf-enabled/buildkit.conf\nRUN rm /buildkit/app/civicrm.settings.d/100-mail.php\nCOPY civibuild.conf /buildkit/app/civibuild.conf\nCOPY apache24-vhost.php /buildkit/build/.amp/apache24-vhost.php\nUSER root\nCOPY ./docker-civicrm-entrypoint /usr/local/bin\nENTRYPOINT [\"docker-civicrm-entrypoint\"]\nCMD [\"apache2-foreground\"]\n","originalDockerfileUglifiedHash":"d184a4054029a392ebcef1c11688b722","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1d790fe2903888d1bdc2f1013a9a740fd5becb5b.dockerfile"}