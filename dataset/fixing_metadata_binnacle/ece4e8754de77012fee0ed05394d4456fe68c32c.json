{"seed":1960599526,"processedDockerfileHash":"9aa298502d0ab2ef1be4475776a70aac","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:7.5.1804 AS build\nWORKDIR /home\n#   COMMON BUILD TOOLS\nRUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel\n#   Install cmake\nARG CMAKE_VER=3.13.1\nARG CMAKE_REPO=https://cmake.org/files\nRUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz \\\n && cd cmake-${CMAKE_VER} \\\n && ./bootstrap --prefix=\"/usr\" --system-curl \\\n && make -j8 \\\n && make install\n#   Install automake, use version 1.14 on CentOS\nARG AUTOMAKE_VER=1.14\nARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz\nRUN wget -O - ${AUTOMAKE_REPO} | tar xJ \\\n && cd automake-${AUTOMAKE_VER} \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-doc \\\n && make -j8 \\\n && make install\n#   Build NASM\nARG NASM_VER=2.13.03\nARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2\nRUN wget ${NASM_REPO} \\\n && tar -xaf nasm* \\\n && cd nasm-${NASM_VER} \\\n && ./autogen.sh \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#   Build YASM\nARG YASM_VER=1.3.0\nARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz\nRUN wget -O - ${YASM_REPO} | tar xz \\\n && cd yasm-${YASM_VER} \\\n && sed -i \"s/) ytasm.*/)/\" Makefile.in \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#   Build ogg\nARG OGG_VER=1.3.3\nARG OGG_REPO=https://downloads.xiph.org/releases/ogg/libogg-${OGG_VER}.tar.xz\nRUN wget -O - ${OGG_REPO} | tar xJ \\\n && cd libogg-${OGG_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build vorbis\nARG VORBIS_VER=1.3.6\nARG VORBIS_REPO=https://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VER}.tar.xz\nRUN wget -O - ${VORBIS_REPO} | tar xJ \\\n && cd libvorbis-${VORBIS_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build mp3lame\nARG MP3LAME_VER=3.100\nARG MP3LAME_REPO=https://sourceforge.net/projects/lame/files/lame/${MP3LAME_VER}/lame-${MP3LAME_VER}.tar.gz\nRUN wget -O - ${MP3LAME_REPO} | tar xz \\\n && cd lame-${MP3LAME_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared --enable-nasm \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build fdk-aac\nARG FDK_AAC_VER=v0.1.6\nARG FDK_AAC_REPO=https://github.com/mstorsjo/fdk-aac/archive/${FDK_AAC_VER}.tar.gz\nRUN wget -O - ${FDK_AAC_REPO} | tar xz \\\n && mv fdk-aac-${FDK_AAC_VER#v} fdk-aac \\\n && cd fdk-aac \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build opus\nARG OPUS_VER=1.2.1\nARG OPUS_REPO=https://archive.mozilla.org/pub/opus/opus-${OPUS_VER}.tar.gz\nRUN wget -O - ${OPUS_REPO} | tar xz \\\n && cd opus-${OPUS_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build vpx\nARG VPX_VER=tags/v1.7.0\nARG VPX_REPO=https://chromium.googlesource.com/webm/libvpx.git\nRUN git clone ${VPX_REPO} \\\n && cd libvpx \\\n && git checkout ${VPX_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=nasm \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build AOM\nARG AOM_VER=b6f1767eedbaddeb1ff5aa409a710ef61078640e\nARG AOM_REPO=https://aomedia.googlesource.com/aom\nRUN git clone ${AOM_REPO} \\\n && mkdir aom/aom_build \\\n && cd aom/aom_build \\\n && git checkout ${AOM_VER} \\\n && cmake -DBUILD_SHARED_LIBS=ON -DENABLE_NASM=ON -DENABLE_TESTS=OFF -DENABLE_DOCS=OFF -DCMAKE_INSTALL_PREFIX=\"/usr\" -DLIB_INSTALL_DIR=/usr/lib64 .. \\\n && make -j8 \\\n && make install DESTDIR=\"/home/build\" \\\n && make install\n#   Build x264\nARG X264_VER=stable\nARG X264_REPO=https://github.com/mirror/x264\nRUN git clone ${X264_REPO} \\\n && cd x264 \\\n && git checkout ${X264_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=\"/home/build\" \\\n && make install\n#   Build x265\nARG X265_VER=2.9\nARG X265_REPO=https://github.com/videolan/x265/archive/${X265_VER}.tar.gz\nRUN yum install -y -q numactl-devel libpciaccess-devel\nRUN wget -O - ${X265_REPO} | tar xz \\\n && mv x265-${X265_VER} x265 \\\n && cd x265/build/linux \\\n && cmake -DBUILD_SHARED_LIBS=ON -DENABLE_TESTS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DLIB_INSTALL_DIR=/usr/lib64 ../../source \\\n && make -j8 \\\n && make install DESTDIR=\"/home/build\" \\\n && make install\n#   Fetch SVT-HEVC\nARG SVT_HEVC_VER=20a47b0d904e9d99e089d93d7c33af92788cbfdb\nARG SVT_HEVC_REPO=https://github.com/intel/SVT-HEVC\nRUN yum install -y -q patch centos-release-scl \\\n && yum install -y -q devtoolset-7\nRUN git clone ${SVT_HEVC_REPO} \\\n && cd SVT-HEVC/Build/linux \\\n && git checkout ${SVT_HEVC_VER} \\\n && mkdir -p ../../Bin/Release \\\n && (source /opt/rh/devtoolset-7/enable \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 -DCMAKE_ASM_NASM_COMPILER=yasm ../.. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install )\n#   Fetch SVT-AV1\nARG SVT_AV1_VER=v0.5.0\nARG SVT_AV1_REPO=https://github.com/OpenVisualCloud/SVT-AV1\nRUN git clone ${SVT_AV1_REPO} \\\n && cd SVT-AV1/Build/linux \\\n && git checkout ${SVT_AV1_VER} \\\n && mkdir -p ../../Bin/Release \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 -DCMAKE_ASM_NASM_COMPILER=yasm ../.. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Remove build residue from SVT-AV1 build -- temp fix for bug\nRUN if [ -d \"build/home/\" ] ; then rm -rf build/home/ ; fi\n#   Fetch SVT-VP9\nARG SVT_VP9_VER=d18b4acf9139be2e83150e318ffd3dba1c432e74\nARG SVT_VP9_REPO=https://github.com/OpenVisualCloud/SVT-VP9\nRUN git clone ${SVT_VP9_REPO} \\\n && cd SVT-VP9/Build/linux \\\n && git checkout ${SVT_VP9_VER} \\\n && mkdir -p ../../Bin/Release \\\n && (source /opt/rh/devtoolset-7/enable \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 -DCMAKE_ASM_NASM_COMPILER=yasm ../.. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install )\n#   Fetch gmmlib\nARG GMMLIB_VER=intel-gmmlib-18.3.0\nARG GMMLIB_REPO=https://github.com/intel/gmmlib/archive/${GMMLIB_VER}.tar.gz\nRUN wget -O - ${GMMLIB_REPO} | tar xz \\\n && mv gmmlib-${GMMLIB_VER} gmmlib\n#  include(libdrm.m4)\n#   Build libva\nARG LIBVA_VER=2.4.0\nARG LIBVA_REPO=https://github.com/intel/libva/archive/${LIBVA_VER}.tar.gz\nRUN yum install -y -q libX11-devel mesa-libGL-devel which libdrm-devel\nRUN wget -O - ${LIBVA_REPO} | tar xz \\\n && cd libva-${LIBVA_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build media driver\nARG MEDIA_DRIVER_VER=intel-media-kbl-19.1.0\nARG MEDIA_DRIVER_REPO=https://github.com/VCDP/media-driver/archive/${MEDIA_DRIVER_VER}.tar.gz\nRUN yum install -y -q libX11-devel mesa-libGL-devel libpciaccess-devel libXext-devel\nRUN wget -O - ${MEDIA_DRIVER_REPO} | tar xz \\\n && mv media-driver-${MEDIA_DRIVER_VER} media-driver \\\n && mkdir -p media-driver/build \\\n && cd media-driver/build \\\n && cmake -DBUILD_TYPE=release -DBUILD_ALONG_WITH_CMRTLIB=1 -DMEDIA_VERSION=\"2.0.0\" -DBS_DIR_GMMLIB=/home/gmmlib/Source/GmmLib -DBS_DIR_COMMON=/home/gmmlib/Source/Common -DBS_DIR_INC=/home/gmmlib/Source/inc -DBS_DIR_MEDIA=/home/media-driver -Wno-dev -DCMAKE_INSTALL_PREFIX=/usr .. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer core\nARG GST_VER=1.16.0\nARG GST_REPO=https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-${GST_VER}.tar.xz\nRUN yum install -y -q glib2-devel-2.56.1 gettext-devel gobject-introspection gobject-introspection-devel python-gobject-base\nRUN wget -O - ${GST_REPO} | tar xJ \\\n && cd gstreamer-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --enable-introspection --disable-examples --disable-debug --disable-benchmarks --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer plugin base\nARG GST_PLUGIN_BASE_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-${GST_VER}.tar.xz\nRUN yum install -y -q libXv-devel libvisual-devel libtheora-devel glib2-devel alsa-lib-devel cdparanoia-devel mesa-libGL-devel pango-devel\nRUN yum install -y -q libXrandr-devel\nRUN wget -O - ${GST_PLUGIN_BASE_REPO} | tar xJ \\\n && cd gst-plugins-base-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-introspection --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer plugin good set\nARG GST_PLUGIN_GOOD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-${GST_VER}.tar.xz\nRUN yum install -y -q libsoup-devel libjpeg-devel\nRUN wget -O - ${GST_PLUGIN_GOOD_REPO} | tar xJ \\\n && cd gst-plugins-good-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer plugin bad set\nARG GST_PLUGIN_BAD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-${GST_VER}.tar.xz\nRUN yum install -y -q openssl-devel\nRUN wget -O - ${GST_PLUGIN_BAD_REPO} | tar xJ \\\n && cd gst-plugins-bad-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer plugin ugly set\nARG GST_PLUGIN_UGLY_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-ugly/gst-plugins-ugly-${GST_VER}.tar.xz\nRUN wget -O - ${GST_PLUGIN_UGLY_REPO} | tar xJ ; cd gst-plugins-ugly-${GST_VER} ; ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build gst-libav\nARG GST_PLUGIN_LIBAV_REPO=https://gstreamer.freedesktop.org/src/gst-libav/gst-libav-${GST_VER}.tar.xz\nRUN yum install -y -q zlib-devel openssl-devel\nRUN wget -O - ${GST_PLUGIN_LIBAV_REPO} | tar xJ \\\n && cd gst-libav-${GST_VER} \\\n && ./autogen.sh --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared --enable-gpl --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build gstremaer plugin for svt\nRUN cd SVT-HEVC/gstreamer-plugin \\\n && cmake . \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\nRUN cd SVT-VP9/gstreamer-plugin \\\n && cmake . \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\nRUN cd SVT-AV1/gstreamer-plugin \\\n && cmake . \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build gstremaer plugin vaapi\nARG GST_PLUGIN_VAAPI_REPO=https://gstreamer.freedesktop.org/src/gstreamer-vaapi/gstreamer-vaapi-${GST_VER}.tar.xz\n#   https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi/merge_requests/45\nARG GST_PLUGIN_VAAPI_REPO_DISPLAY_LOCK_PATCH_HASH=b219f6095f3014041896714dd88e7d90ee3d72dd\nARG GST_PLUGIN_VAAPI_REPO_GIT=https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi.git\nRUN yum install -y -q libXrandr-devel\n#  RUN  git clone https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi.git -b 1.14 --depth 10 && \\\n#       cd gstreamer-vaapi && git reset --hard ${GST_PLUGIN_VAAPI_REPO_DISPLAY_LOCK_PATCH_HASH} && \\\nRUN wget -O - ${GST_PLUGIN_VAAPI_REPO} | tar xJ \\\n && cd gstreamer-vaapi-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-gtk-doc --disable-debug \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Clean up after build\nRUN rm -rf /home/build/usr/include \\\n && rm -rf /home/build/usr/share/doc \\\n && rm -rf /home/build/usr/share/gtk-doc \\\n && rm -rf /home/build/usr/share/man \\\n && find /home/build -name \"*.a\" -exec rm -f {}\nFROM centos:7.5.1804\nLABEL Description=\"This is the base image for GStreamer CentOS 7.5\"\nLABEL Vendor=\"Intel Corporation\"\nWORKDIR /home\n#   Prerequisites\nRUN yum install -y epel-release ; yum install -y -q numactl openssl glib2-2.56.1 pango gobject-introspection libxcb mesa-libGL libXrandr libpng12 libXv libvisual mesa-libGL pango glib2 alsa-lib libpciaccess libX11 mesa-dri-drivers mesa-libGL libdrm libsoup libjpeg-turbo ; yum remove -y -q epel-release ; rm -rf /var/cache/yum/*\n#   Install\nCOPY --from=build /home/build /\nENV LIBVA_DRIVERS_PATH=\"/usr/lib64/dri\"\nENV LIBVA_DRIVER_NAME=\"iHD\"\nENV GST_VAAPI_ALL_DRIVERS=\"1\"\nENV DISPLAY=\":0.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:7.5.1804 AS build\nWORKDIR /home\n#  COMMON BUILD TOOLS\nRUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel\n#  Install cmake\nARG CMAKE_VER=3.13.1\nARG CMAKE_REPO=https://cmake.org/files\nRUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz \\\n && cd cmake-${CMAKE_VER} \\\n && ./bootstrap --prefix=\"/usr\" --system-curl \\\n && make -j8 \\\n && make install\n#  Install automake, use version 1.14 on CentOS\nARG AUTOMAKE_VER=1.14\nARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz\nRUN wget -O - ${AUTOMAKE_REPO} | tar xJ \\\n && cd automake-${AUTOMAKE_VER} \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-doc \\\n && make -j8 \\\n && make install\n#  Build NASM\nARG NASM_VER=2.13.03\nARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2\nRUN wget ${NASM_REPO} \\\n && tar -xaf nasm* \\\n && cd nasm-${NASM_VER} \\\n && ./autogen.sh \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#  Build YASM\nARG YASM_VER=1.3.0\nARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz\nRUN wget -O - ${YASM_REPO} | tar xz \\\n && cd yasm-${YASM_VER} \\\n && sed -i \"s/) ytasm.*/)/\" Makefile.in \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#  Build ogg\nARG OGG_VER=1.3.3\nARG OGG_REPO=https://downloads.xiph.org/releases/ogg/libogg-${OGG_VER}.tar.xz\nRUN wget -O - ${OGG_REPO} | tar xJ \\\n && cd libogg-${OGG_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build vorbis\nARG VORBIS_VER=1.3.6\nARG VORBIS_REPO=https://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VER}.tar.xz\nRUN wget -O - ${VORBIS_REPO} | tar xJ \\\n && cd libvorbis-${VORBIS_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build mp3lame\nARG MP3LAME_VER=3.100\nARG MP3LAME_REPO=https://sourceforge.net/projects/lame/files/lame/${MP3LAME_VER}/lame-${MP3LAME_VER}.tar.gz\nRUN wget -O - ${MP3LAME_REPO} | tar xz \\\n && cd lame-${MP3LAME_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared --enable-nasm \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build fdk-aac\nARG FDK_AAC_VER=v0.1.6\nARG FDK_AAC_REPO=https://github.com/mstorsjo/fdk-aac/archive/${FDK_AAC_VER}.tar.gz\nRUN wget -O - ${FDK_AAC_REPO} | tar xz \\\n && mv fdk-aac-${FDK_AAC_VER#v} fdk-aac \\\n && cd fdk-aac \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build opus\nARG OPUS_VER=1.2.1\nARG OPUS_REPO=https://archive.mozilla.org/pub/opus/opus-${OPUS_VER}.tar.gz\nRUN wget -O - ${OPUS_REPO} | tar xz \\\n && cd opus-${OPUS_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build vpx\nARG VPX_VER=tags/v1.7.0\nARG VPX_REPO=https://chromium.googlesource.com/webm/libvpx.git\nRUN git clone ${VPX_REPO} \\\n && cd libvpx \\\n && git checkout ${VPX_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=nasm \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build AOM\nARG AOM_VER=b6f1767eedbaddeb1ff5aa409a710ef61078640e\nARG AOM_REPO=https://aomedia.googlesource.com/aom\nRUN git clone ${AOM_REPO} \\\n && mkdir aom/aom_build \\\n && cd aom/aom_build \\\n && git checkout ${AOM_VER} \\\n && cmake -DBUILD_SHARED_LIBS=ON -DENABLE_NASM=ON -DENABLE_TESTS=OFF -DENABLE_DOCS=OFF -DCMAKE_INSTALL_PREFIX=\"/usr\" -DLIB_INSTALL_DIR=/usr/lib64 .. \\\n && make -j8 \\\n && make install DESTDIR=\"/home/build\" \\\n && make install\n#  Build x264\nARG X264_VER=stable\nARG X264_REPO=https://github.com/mirror/x264\nRUN git clone ${X264_REPO} \\\n && cd x264 \\\n && git checkout ${X264_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=\"/home/build\" \\\n && make install\n#  Build x265\nARG X265_VER=2.9\nARG X265_REPO=https://github.com/videolan/x265/archive/${X265_VER}.tar.gz\nRUN yum install -y -q numactl-devel libpciaccess-devel\nRUN wget -O - ${X265_REPO} | tar xz \\\n && mv x265-${X265_VER} x265 \\\n && cd x265/build/linux \\\n && cmake -DBUILD_SHARED_LIBS=ON -DENABLE_TESTS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DLIB_INSTALL_DIR=/usr/lib64 ../../source \\\n && make -j8 \\\n && make install DESTDIR=\"/home/build\" \\\n && make install\n#  Fetch SVT-HEVC\nARG SVT_HEVC_VER=20a47b0d904e9d99e089d93d7c33af92788cbfdb\nARG SVT_HEVC_REPO=https://github.com/intel/SVT-HEVC\nRUN yum install -y -q patch centos-release-scl \\\n && yum install -y -q devtoolset-7\nRUN git clone ${SVT_HEVC_REPO} \\\n && cd SVT-HEVC/Build/linux \\\n && git checkout ${SVT_HEVC_VER} \\\n && mkdir -p ../../Bin/Release \\\n && (source /opt/rh/devtoolset-7/enable \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 -DCMAKE_ASM_NASM_COMPILER=yasm ../.. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install )\n#  Fetch SVT-AV1\nARG SVT_AV1_VER=v0.5.0\nARG SVT_AV1_REPO=https://github.com/OpenVisualCloud/SVT-AV1\nRUN git clone ${SVT_AV1_REPO} \\\n && cd SVT-AV1/Build/linux \\\n && git checkout ${SVT_AV1_VER} \\\n && mkdir -p ../../Bin/Release \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 -DCMAKE_ASM_NASM_COMPILER=yasm ../.. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n# Remove build residue from SVT-AV1 build -- temp fix for bug\nRUN if [ -d \"build/home/\" ] ; then rm -rf build/home/ ; fi\n#  Fetch SVT-VP9\nARG SVT_VP9_VER=d18b4acf9139be2e83150e318ffd3dba1c432e74\nARG SVT_VP9_REPO=https://github.com/OpenVisualCloud/SVT-VP9\nRUN git clone ${SVT_VP9_REPO} \\\n && cd SVT-VP9/Build/linux \\\n && git checkout ${SVT_VP9_VER} \\\n && mkdir -p ../../Bin/Release \\\n && (source /opt/rh/devtoolset-7/enable \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 -DCMAKE_ASM_NASM_COMPILER=yasm ../.. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install )\n#  Fetch gmmlib\nARG GMMLIB_VER=intel-gmmlib-18.3.0\nARG GMMLIB_REPO=https://github.com/intel/gmmlib/archive/${GMMLIB_VER}.tar.gz\nRUN wget -O - ${GMMLIB_REPO} | tar xz \\\n && mv gmmlib-${GMMLIB_VER} gmmlib\n# include(libdrm.m4)\n#  Build libva\nARG LIBVA_VER=2.4.0\nARG LIBVA_REPO=https://github.com/intel/libva/archive/${LIBVA_VER}.tar.gz\nRUN yum install -y -q libX11-devel mesa-libGL-devel which libdrm-devel\nRUN wget -O - ${LIBVA_REPO} | tar xz \\\n && cd libva-${LIBVA_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build media driver\nARG MEDIA_DRIVER_VER=intel-media-kbl-19.1.0\nARG MEDIA_DRIVER_REPO=https://github.com/VCDP/media-driver/archive/${MEDIA_DRIVER_VER}.tar.gz\nRUN yum install -y -q libX11-devel mesa-libGL-devel libpciaccess-devel libXext-devel\nRUN wget -O - ${MEDIA_DRIVER_REPO} | tar xz \\\n && mv media-driver-${MEDIA_DRIVER_VER} media-driver \\\n && mkdir -p media-driver/build \\\n && cd media-driver/build \\\n && cmake -DBUILD_TYPE=release -DBUILD_ALONG_WITH_CMRTLIB=1 -DMEDIA_VERSION=\"2.0.0\" -DBS_DIR_GMMLIB=/home/gmmlib/Source/GmmLib -DBS_DIR_COMMON=/home/gmmlib/Source/Common -DBS_DIR_INC=/home/gmmlib/Source/inc -DBS_DIR_MEDIA=/home/media-driver -Wno-dev -DCMAKE_INSTALL_PREFIX=/usr .. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build the gstremaer core\nARG GST_VER=1.16.0\nARG GST_REPO=https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-${GST_VER}.tar.xz\nRUN yum install -y -q glib2-devel-2.56.1 gettext-devel gobject-introspection gobject-introspection-devel python-gobject-base\nRUN wget -O - ${GST_REPO} | tar xJ \\\n && cd gstreamer-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --enable-introspection --disable-examples --disable-debug --disable-benchmarks --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build the gstremaer plugin base\nARG GST_PLUGIN_BASE_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-${GST_VER}.tar.xz\nRUN yum install -y -q libXv-devel libvisual-devel libtheora-devel glib2-devel alsa-lib-devel cdparanoia-devel mesa-libGL-devel pango-devel\nRUN yum install -y -q libXrandr-devel\nRUN wget -O - ${GST_PLUGIN_BASE_REPO} | tar xJ \\\n && cd gst-plugins-base-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-introspection --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build the gstremaer plugin good set\nARG GST_PLUGIN_GOOD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-${GST_VER}.tar.xz\nRUN yum install -y -q libsoup-devel libjpeg-devel\nRUN wget -O - ${GST_PLUGIN_GOOD_REPO} | tar xJ \\\n && cd gst-plugins-good-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build the gstremaer plugin bad set\nARG GST_PLUGIN_BAD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-${GST_VER}.tar.xz\nRUN yum install -y -q openssl-devel\nRUN wget -O - ${GST_PLUGIN_BAD_REPO} | tar xJ \\\n && cd gst-plugins-bad-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build the gstremaer plugin ugly set\nARG GST_PLUGIN_UGLY_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-ugly/gst-plugins-ugly-${GST_VER}.tar.xz\nRUN wget -O - ${GST_PLUGIN_UGLY_REPO} | tar xJ ; cd gst-plugins-ugly-${GST_VER} ; ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build gst-libav\nARG GST_PLUGIN_LIBAV_REPO=https://gstreamer.freedesktop.org/src/gst-libav/gst-libav-${GST_VER}.tar.xz\nRUN yum install -y -q zlib-devel openssl-devel\nRUN wget -O - ${GST_PLUGIN_LIBAV_REPO} | tar xJ \\\n && cd gst-libav-${GST_VER} \\\n && ./autogen.sh --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared --enable-gpl --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build gstremaer plugin for svt\nRUN cd SVT-HEVC/gstreamer-plugin \\\n && cmake . \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\nRUN cd SVT-VP9/gstreamer-plugin \\\n && cmake . \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\nRUN cd SVT-AV1/gstreamer-plugin \\\n && cmake . \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Build gstremaer plugin vaapi\nARG GST_PLUGIN_VAAPI_REPO=https://gstreamer.freedesktop.org/src/gstreamer-vaapi/gstreamer-vaapi-${GST_VER}.tar.xz\n#  https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi/merge_requests/45\nARG GST_PLUGIN_VAAPI_REPO_DISPLAY_LOCK_PATCH_HASH=b219f6095f3014041896714dd88e7d90ee3d72dd\nARG GST_PLUGIN_VAAPI_REPO_GIT=https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi.git\nRUN yum install -y -q libXrandr-devel\n# RUN  git clone https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi.git -b 1.14 --depth 10 && \\\n#      cd gstreamer-vaapi && git reset --hard ${GST_PLUGIN_VAAPI_REPO_DISPLAY_LOCK_PATCH_HASH} && \\\nRUN wget -O - ${GST_PLUGIN_VAAPI_REPO} | tar xJ \\\n && cd gstreamer-vaapi-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-gtk-doc --disable-debug \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Clean up after build\nRUN rm -rf /home/build/usr/include \\\n && rm -rf /home/build/usr/share/doc \\\n && rm -rf /home/build/usr/share/gtk-doc \\\n && rm -rf /home/build/usr/share/man \\\n && find /home/build -name \"*.a\" -exec rm -f {} ;\nFROM centos:7.5.1804\nLABEL Description=\"This is the base image for GStreamer CentOS 7.5\"\nLABEL Vendor=\"Intel Corporation\"\nWORKDIR /home\n#  Prerequisites\nRUN yum install -y epel-release ; yum install -y -q numactl openssl glib2-2.56.1 pango gobject-introspection libxcb mesa-libGL libXrandr libpng12 libXv libvisual mesa-libGL pango glib2 alsa-lib libpciaccess libX11 mesa-dri-drivers mesa-libGL libdrm libsoup libjpeg-turbo ; yum remove -y -q epel-release ; rm -rf /var/cache/yum/*\n#  Install\nCOPY --from=build /home/build /\nENV LIBVA_DRIVERS_PATH=\"/usr/lib64/dri\"\nENV LIBVA_DRIVER_NAME=\"iHD\"\nENV GST_VAAPI_ALL_DRIVERS=\"1\"\nENV DISPLAY=\":0.0\"\n","injectedSmells":[],"originalDockerfileHash":"bfbd37ae51bed808bde88d3d74dc5fe6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7.5.1804 AS build\nWORKDIR /home\n#   COMMON BUILD TOOLS\nRUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel\n#   Install cmake\nARG CMAKE_VER=3.13.1\nARG CMAKE_REPO=https://cmake.org/files\nRUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz \\\n && cd cmake-${CMAKE_VER} \\\n && ./bootstrap --prefix=\"/usr\" --system-curl \\\n && make -j8 \\\n && make install\n#   Install automake, use version 1.14 on CentOS\nARG AUTOMAKE_VER=1.14\nARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz\nRUN wget -O - ${AUTOMAKE_REPO} | tar xJ \\\n && cd automake-${AUTOMAKE_VER} \\\n && ./configure --prefix=/usr --libdir=/usr/lib64 --disable-doc \\\n && make -j8 \\\n && make install\n#   Build NASM\nARG NASM_VER=2.13.03\nARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2\nRUN wget ${NASM_REPO} \\\n && tar -xaf nasm* \\\n && cd nasm-${NASM_VER} \\\n && ./autogen.sh \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#   Build YASM\nARG YASM_VER=1.3.0\nARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz\nRUN wget -O - ${YASM_REPO} | tar xz \\\n && cd yasm-${YASM_VER} \\\n && sed -i \"s/) ytasm.*/)/\" Makefile.in \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install\n#   Build ogg\nARG OGG_VER=1.3.3\nARG OGG_REPO=https://downloads.xiph.org/releases/ogg/libogg-${OGG_VER}.tar.xz\nRUN wget -O - ${OGG_REPO} | tar xJ \\\n && cd libogg-${OGG_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build vorbis\nARG VORBIS_VER=1.3.6\nARG VORBIS_REPO=https://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VER}.tar.xz\nRUN wget -O - ${VORBIS_REPO} | tar xJ \\\n && cd libvorbis-${VORBIS_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build mp3lame\nARG MP3LAME_VER=3.100\nARG MP3LAME_REPO=https://sourceforge.net/projects/lame/files/lame/${MP3LAME_VER}/lame-${MP3LAME_VER}.tar.gz\nRUN wget -O - ${MP3LAME_REPO} | tar xz \\\n && cd lame-${MP3LAME_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared --enable-nasm \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build fdk-aac\nARG FDK_AAC_VER=v0.1.6\nARG FDK_AAC_REPO=https://github.com/mstorsjo/fdk-aac/archive/${FDK_AAC_VER}.tar.gz\nRUN wget -O - ${FDK_AAC_REPO} | tar xz \\\n && mv fdk-aac-${FDK_AAC_VER#v} fdk-aac \\\n && cd fdk-aac \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build opus\nARG OPUS_VER=1.2.1\nARG OPUS_REPO=https://archive.mozilla.org/pub/opus/opus-${OPUS_VER}.tar.gz\nRUN wget -O - ${OPUS_REPO} | tar xz \\\n && cd opus-${OPUS_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build vpx\nARG VPX_VER=tags/v1.7.0\nARG VPX_REPO=https://chromium.googlesource.com/webm/libvpx.git\nRUN git clone ${VPX_REPO} \\\n && cd libvpx \\\n && git checkout ${VPX_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=nasm \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build AOM\nARG AOM_VER=b6f1767eedbaddeb1ff5aa409a710ef61078640e\nARG AOM_REPO=https://aomedia.googlesource.com/aom\nRUN git clone ${AOM_REPO} \\\n && mkdir aom/aom_build \\\n && cd aom/aom_build \\\n && git checkout ${AOM_VER} \\\n && cmake -DBUILD_SHARED_LIBS=ON -DENABLE_NASM=ON -DENABLE_TESTS=OFF -DENABLE_DOCS=OFF -DCMAKE_INSTALL_PREFIX=\"/usr\" -DLIB_INSTALL_DIR=/usr/lib64 .. \\\n && make -j8 \\\n && make install DESTDIR=\"/home/build\" \\\n && make install\n#   Build x264\nARG X264_VER=stable\nARG X264_REPO=https://github.com/mirror/x264\nRUN git clone ${X264_REPO} \\\n && cd x264 \\\n && git checkout ${X264_VER} \\\n && ./configure --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared \\\n && make -j8 \\\n && make install DESTDIR=\"/home/build\" \\\n && make install\n#   Build x265\nARG X265_VER=2.9\nARG X265_REPO=https://github.com/videolan/x265/archive/${X265_VER}.tar.gz\nRUN yum install -y -q numactl-devel libpciaccess-devel\nRUN wget -O - ${X265_REPO} | tar xz \\\n && mv x265-${X265_VER} x265 \\\n && cd x265/build/linux \\\n && cmake -DBUILD_SHARED_LIBS=ON -DENABLE_TESTS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DLIB_INSTALL_DIR=/usr/lib64 ../../source \\\n && make -j8 \\\n && make install DESTDIR=\"/home/build\" \\\n && make install\n#   Fetch SVT-HEVC\nARG SVT_HEVC_VER=20a47b0d904e9d99e089d93d7c33af92788cbfdb\nARG SVT_HEVC_REPO=https://github.com/intel/SVT-HEVC\nRUN yum install -y -q patch centos-release-scl \\\n && yum install -y -q devtoolset-7\nRUN git clone ${SVT_HEVC_REPO} \\\n && cd SVT-HEVC/Build/linux \\\n && git checkout ${SVT_HEVC_VER} \\\n && mkdir -p ../../Bin/Release \\\n && (source /opt/rh/devtoolset-7/enable \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 -DCMAKE_ASM_NASM_COMPILER=yasm ../.. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install )\n#   Fetch SVT-AV1\nARG SVT_AV1_VER=v0.5.0\nARG SVT_AV1_REPO=https://github.com/OpenVisualCloud/SVT-AV1\nRUN git clone ${SVT_AV1_REPO} \\\n && cd SVT-AV1/Build/linux \\\n && git checkout ${SVT_AV1_VER} \\\n && mkdir -p ../../Bin/Release \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 -DCMAKE_ASM_NASM_COMPILER=yasm ../.. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#  Remove build residue from SVT-AV1 build -- temp fix for bug\nRUN if [ -d \"build/home/\" ] ; then rm -rf build/home/ ; fi\n#   Fetch SVT-VP9\nARG SVT_VP9_VER=d18b4acf9139be2e83150e318ffd3dba1c432e74\nARG SVT_VP9_REPO=https://github.com/OpenVisualCloud/SVT-VP9\nRUN git clone ${SVT_VP9_REPO} \\\n && cd SVT-VP9/Build/linux \\\n && git checkout ${SVT_VP9_VER} \\\n && mkdir -p ../../Bin/Release \\\n && (source /opt/rh/devtoolset-7/enable \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 -DCMAKE_ASM_NASM_COMPILER=yasm ../.. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install )\n#   Fetch gmmlib\nARG GMMLIB_VER=intel-gmmlib-18.3.0\nARG GMMLIB_REPO=https://github.com/intel/gmmlib/archive/${GMMLIB_VER}.tar.gz\nRUN wget -O - ${GMMLIB_REPO} | tar xz \\\n && mv gmmlib-${GMMLIB_VER} gmmlib\n#  include(libdrm.m4)\n#   Build libva\nARG LIBVA_VER=2.4.0\nARG LIBVA_REPO=https://github.com/intel/libva/archive/${LIBVA_VER}.tar.gz\nRUN yum install -y -q libX11-devel mesa-libGL-devel which libdrm-devel\nRUN wget -O - ${LIBVA_REPO} | tar xz \\\n && cd libva-${LIBVA_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build media driver\nARG MEDIA_DRIVER_VER=intel-media-kbl-19.1.0\nARG MEDIA_DRIVER_REPO=https://github.com/VCDP/media-driver/archive/${MEDIA_DRIVER_VER}.tar.gz\nRUN yum install -y -q libX11-devel mesa-libGL-devel libpciaccess-devel libXext-devel\nRUN wget -O - ${MEDIA_DRIVER_REPO} | tar xz \\\n && mv media-driver-${MEDIA_DRIVER_VER} media-driver \\\n && mkdir -p media-driver/build \\\n && cd media-driver/build \\\n && cmake -DBUILD_TYPE=release -DBUILD_ALONG_WITH_CMRTLIB=1 -DMEDIA_VERSION=\"2.0.0\" -DBS_DIR_GMMLIB=/home/gmmlib/Source/GmmLib -DBS_DIR_COMMON=/home/gmmlib/Source/Common -DBS_DIR_INC=/home/gmmlib/Source/inc -DBS_DIR_MEDIA=/home/media-driver -Wno-dev -DCMAKE_INSTALL_PREFIX=/usr .. \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer core\nARG GST_VER=1.16.0\nARG GST_REPO=https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-${GST_VER}.tar.xz\nRUN yum install -y -q glib2-devel-2.56.1 gettext-devel gobject-introspection gobject-introspection-devel python-gobject-base\nRUN wget -O - ${GST_REPO} | tar xJ \\\n && cd gstreamer-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --enable-introspection --disable-examples --disable-debug --disable-benchmarks --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer plugin base\nARG GST_PLUGIN_BASE_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-${GST_VER}.tar.xz\nRUN yum install -y -q libXv-devel libvisual-devel libtheora-devel glib2-devel alsa-lib-devel cdparanoia-devel mesa-libGL-devel pango-devel\nRUN yum install -y -q libXrandr-devel\nRUN wget -O - ${GST_PLUGIN_BASE_REPO} | tar xJ \\\n && cd gst-plugins-base-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-introspection --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer plugin good set\nARG GST_PLUGIN_GOOD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-${GST_VER}.tar.xz\nRUN yum install -y -q libsoup-devel libjpeg-devel\nRUN wget -O - ${GST_PLUGIN_GOOD_REPO} | tar xJ \\\n && cd gst-plugins-good-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer plugin bad set\nARG GST_PLUGIN_BAD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-${GST_VER}.tar.xz\nRUN yum install -y -q openssl-devel\nRUN wget -O - ${GST_PLUGIN_BAD_REPO} | tar xJ \\\n && cd gst-plugins-bad-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build the gstremaer plugin ugly set\nARG GST_PLUGIN_UGLY_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-ugly/gst-plugins-ugly-${GST_VER}.tar.xz\nRUN wget -O - ${GST_PLUGIN_UGLY_REPO} | tar xJ ; cd gst-plugins-ugly-${GST_VER} ; ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-debug --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build gst-libav\nARG GST_PLUGIN_LIBAV_REPO=https://gstreamer.freedesktop.org/src/gst-libav/gst-libav-${GST_VER}.tar.xz\nRUN yum install -y -q zlib-devel openssl-devel\nRUN wget -O - ${GST_PLUGIN_LIBAV_REPO} | tar xJ \\\n && cd gst-libav-${GST_VER} \\\n && ./autogen.sh --prefix=\"/usr\" --libdir=/usr/lib64 --enable-shared --enable-gpl --disable-gtk-doc \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build gstremaer plugin for svt\nRUN cd SVT-HEVC/gstreamer-plugin \\\n && cmake . \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\nRUN cd SVT-VP9/gstreamer-plugin \\\n && cmake . \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\nRUN cd SVT-AV1/gstreamer-plugin \\\n && cmake . \\\n && make -j8 \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Build gstremaer plugin vaapi\nARG GST_PLUGIN_VAAPI_REPO=https://gstreamer.freedesktop.org/src/gstreamer-vaapi/gstreamer-vaapi-${GST_VER}.tar.xz\n#   https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi/merge_requests/45\nARG GST_PLUGIN_VAAPI_REPO_DISPLAY_LOCK_PATCH_HASH=b219f6095f3014041896714dd88e7d90ee3d72dd\nARG GST_PLUGIN_VAAPI_REPO_GIT=https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi.git\nRUN yum install -y -q libXrandr-devel\n#  RUN  git clone https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi.git -b 1.14 --depth 10 && \\\n#       cd gstreamer-vaapi && git reset --hard ${GST_PLUGIN_VAAPI_REPO_DISPLAY_LOCK_PATCH_HASH} && \\\nRUN wget -O - ${GST_PLUGIN_VAAPI_REPO} | tar xJ \\\n && cd gstreamer-vaapi-${GST_VER} \\\n && ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-shared --disable-examples --disable-gtk-doc --disable-debug \\\n && make -j $( nproc ;) \\\n && make install DESTDIR=/home/build \\\n && make install\n#   Clean up after build\nRUN rm -rf /home/build/usr/include \\\n && rm -rf /home/build/usr/share/doc \\\n && rm -rf /home/build/usr/share/gtk-doc \\\n && rm -rf /home/build/usr/share/man \\\n && find /home/build -name \"*.a\" -exec rm -f {}\nFROM centos:7.5.1804\nLABEL Description=\"This is the base image for GStreamer CentOS 7.5\"\nLABEL Vendor=\"Intel Corporation\"\nWORKDIR /home\n#   Prerequisites\nRUN yum install -y epel-release ; yum install -y -q numactl openssl glib2-2.56.1 pango gobject-introspection libxcb mesa-libGL libXrandr libpng12 libXv libvisual mesa-libGL pango glib2 alsa-lib libpciaccess libX11 mesa-dri-drivers mesa-libGL libdrm libsoup libjpeg-turbo ; yum remove -y -q epel-release ; rm -rf /var/cache/yum/*\n#   Install\nCOPY --from=build /home/build /\nENV LIBVA_DRIVERS_PATH=\"/usr/lib64/dri\"\nENV LIBVA_DRIVER_NAME=\"iHD\"\nENV GST_VAAPI_ALL_DRIVERS=\"1\"\nENV DISPLAY=\":0.0\"\n","originalDockerfileUglifiedHash":"a97e87dcbac4021d2d3807c92fa03e41","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ece4e8754de77012fee0ed05394d4456fe68c32c.dockerfile"}