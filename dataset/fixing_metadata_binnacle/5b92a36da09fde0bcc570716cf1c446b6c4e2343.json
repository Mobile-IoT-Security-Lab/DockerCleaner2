{"seed":958951450,"processedDockerfileHash":"fe52aeaecde36c7d2fd0c7b95644b951","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck"],"processedDockerfile":"FROM nvidia/cuda:8.0-devel-ubuntu16.04\n#   Develop\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common wget curl git cmake cmake-curses-gui libboost-all-dev libflann-dev libgsl0-dev libgoogle-perftools-dev libeigen3-dev ca-certificates make autoconf libtool pkg-config python libxext-dev x11proto-gl-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-multilib libxext-dev:i386 libx11-dev:i386 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Intall some basic GUI and sound libs\nRUN apt-get update \\\n && apt-get install --no-install-recommends xz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme fonts-dejavu fonts-liberation hicolor-icon-theme libcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module libasound2 libgtk2.0-0 libdbus-glib-1-2 libxt6 libexif12 libgl1-mesa-glx libgl1-mesa-dri language-pack-en -y \\\n && update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX\n#   Intall some basic GUI tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends cmake-qt-gui gnome-terminal -y\n#   Intall ROS\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116\nRUN apt-get update \\\n && apt-get install --no-install-recommends ros-kinetic-desktop-full ros-kinetic-nmea-msgs ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play ros-kinetic-jsk-visualization ros-kinetic-grid-map ros-kinetic-gps-common -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends ros-kinetic-controller-manager ros-kinetic-ros-control ros-kinetic-ros-controllers ros-kinetic-gazebo-ros-control ros-kinetic-joystick-drivers ros-kinetic-rosbridge-server -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev python-wxgtk3.0 software-properties-common libmosquitto-dev libyaml-cpp-dev python-flask python-requests -y\n#   Add basic user\nENV USERNAME=\"autoware\"\nENV PULSE_SERVER=\"/run/pulse/native\"\nRUN useradd -m $USERNAME \\\n && echo \"$USERNAME:$USERNAME\" | chpasswd \\\n && usermod --shell /bin/bash $USERNAME \\\n && usermod -aG sudo $USERNAME \\\n && echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/$USERNAME \\\n && chmod 0440 /etc/sudoers.d/$USERNAME \\\n && usermod --uid 1000 $USERNAME \\\n && groupmod --gid 1000 $USERNAME\n#   Setup .bashrc for ROS\nRUN echo \"source /opt/ros/kinetic/setup.bash\" >> /home/$USERNAME/.bashrc \\\n && echo \"export QT_X11_NO_MITSHM=1\" >> /home/$USERNAME/.bashrc \\\n && echo \"cd\" >> /home/$USERNAME/.bashrc\n#   ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},graphics\nRUN apt-get update \\\n && apt-get install --no-install-recommends pkg-config libxau-dev libxdmcp-dev libxcb1-dev libxext-dev libx11-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 /usr/local/lib/x86_64-linux-gnu /usr/local/lib/x86_64-linux-gnu\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json\nRUN echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf \\\n && ldconfig \\\n && echo '/usr/local/$LIB/libGL.so.1' >> /etc/ld.so.preload \\\n && echo '/usr/local/$LIB/libEGL.so.1' >> /etc/ld.so.preload\n#   nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES=\"${NVIDIA_VISIBLE_DEVICES:-all}\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\"\n#   Change user\nUSER autoware\nRUN sudo rosdep init \\\n && rosdep update \\\n && echo \"source /opt/ros/kinetic/setup.bash\" >> ~/.bashrc\n#   YOLO_V2 and YOLO_V3\nRUN cd ~ \\\n && git clone https://github.com/pjreddie/darknet.git darknet \\\n && cd ~/darknet \\\n && git checkout 56d69e73aba37283ea7b9726b81afd2f79cd1134\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov2/yolo.cfg /home/$USERNAME/darknet/cfg/yolo.cfg\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov2/yolo.weights /home/$USERNAME/darknet/data/yolo.weights\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov3/yolov3.cfg /home/$USERNAME/darknet/cfg/yolov3.cfg\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov3/yolov3.weights /home/$USERNAME/darknet/data/yolov3.weights\n#   SSD dependencies\nRUN sudo apt-get update \\\n && sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler\nRUN sudo apt-get update \\\n && sudo apt-get install --no-install-recommends -y libboost-all-dev\nRUN sudo apt-get update \\\n && sudo apt-get install -y libatlas-base-dev libgoogle-glog-dev libgflags-dev liblmdb-dev\nRUN sudo apt-get update \\\n && sudo apt-get install -y libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11\n#   SSD setup\nRUN cd ~ \\\n && git clone https://github.com/weiliu89/caffe.git ssdcaffe \\\n && cd ~/ssdcaffe \\\n && git checkout 4817bf8b4200b35ada8ed0dc378dceaf38c539e4\nCOPY --chown=autoware:autoware ./docker/generic/data/ssd/Makefile.config /home/$USERNAME/ssdcaffe/Makefile.config\nCOPY --chown=autoware:autoware ./docker/generic/data/ssd/models/ /home/$USERNAME/ssdcaffe/models/\nRUN cd ~/ssdcaffe \\\n && make \\\n && make distribute\n#   Install Autoware\nCOPY . /home/$USERNAME/autoware\nRUN sudo chown -R autoware /home/$USERNAME/autoware\nRUN /bin/bash -c 'source /opt/ros/kinetic/setup.bash; cd /home/$USERNAME/autoware/ros/src; git submodule update --init --recursive; catkin_init_workspace; cd ../; ./catkin_make_release'\nRUN echo \"source /home/$USERNAME/autoware/ros/devel/setup.bash\" >> /home/$USERNAME/.bashrc\n#   Setting\nENV LANG=\"en_US.UTF-8\"\nRUN echo \"export LANG=\\\"en_US.UTF-8\\\"\" >> /home/$USERNAME/.bashrc\n#   Install dev tools\nRUN sudo apt-get -y install vim tmux\n#   Change Terminal Color\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/use_theme_background\" --type bool false\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/use_theme_colors\" --type bool false\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/background_color\" --type string \"#000000\"\n#   Default CMD\nCMD [\"/bin/bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:8.0-devel-ubuntu16.04\n#  Develop\nRUN apt-get update \\\n && apt-get install software-properties-common wget curl git cmake cmake-curses-gui libboost-all-dev libflann-dev libgsl0-dev libgoogle-perftools-dev libeigen3-dev ca-certificates make autoconf libtool pkg-config python libxext-dev x11proto-gl-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-multilib libxext-dev:i386 libx11-dev:i386 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Intall some basic GUI and sound libs\nRUN apt-get update \\\n && apt-get install xz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme fonts-dejavu fonts-liberation hicolor-icon-theme libcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module libasound2 libgtk2.0-0 libdbus-glib-1-2 libxt6 libexif12 libgl1-mesa-glx libgl1-mesa-dri language-pack-en -y \\\n && update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX\n#  Intall some basic GUI tools\nRUN apt-get update \\\n && apt-get install cmake-qt-gui gnome-terminal -y\n#  Intall ROS\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116\nRUN apt-get update \\\n && apt-get install ros-kinetic-desktop-full ros-kinetic-nmea-msgs ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play ros-kinetic-jsk-visualization ros-kinetic-grid-map ros-kinetic-gps-common -y\nRUN apt-get update \\\n && apt-get install ros-kinetic-controller-manager ros-kinetic-ros-control ros-kinetic-ros-controllers ros-kinetic-gazebo-ros-control ros-kinetic-joystick-drivers ros-kinetic-rosbridge-server -y\nRUN apt-get update \\\n && apt-get install libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev python-wxgtk3.0 software-properties-common libmosquitto-dev libyaml-cpp-dev python-flask python-requests -y\n#  Add basic user\nENV USERNAME=\"autoware\"\nENV PULSE_SERVER=\"/run/pulse/native\"\nRUN useradd -m $USERNAME \\\n && echo \"$USERNAME:$USERNAME\" | chpasswd \\\n && usermod --shell /bin/bash $USERNAME \\\n && usermod -aG sudo $USERNAME \\\n && echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/$USERNAME \\\n && chmod 0440 /etc/sudoers.d/$USERNAME \\\n && usermod --uid 1000 $USERNAME \\\n && groupmod --gid 1000 $USERNAME\n#  Setup .bashrc for ROS\nRUN echo \"source /opt/ros/kinetic/setup.bash\" >> /home/$USERNAME/.bashrc \\\n && echo \"export QT_X11_NO_MITSHM=1\" >> /home/$USERNAME/.bashrc \\\n && echo \"cd\" >> /home/$USERNAME/.bashrc\n#  ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},graphics\nRUN apt-get update \\\n && apt-get install --no-install-recommends pkg-config libxau-dev libxdmcp-dev libxcb1-dev libxext-dev libx11-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 /usr/local/lib/x86_64-linux-gnu /usr/local/lib/x86_64-linux-gnu\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json\nRUN echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf \\\n && ldconfig \\\n && echo '/usr/local/$LIB/libGL.so.1' >> /etc/ld.so.preload \\\n && echo '/usr/local/$LIB/libEGL.so.1' >> /etc/ld.so.preload\n#  nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES=\"${NVIDIA_VISIBLE_DEVICES:-all}\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\"\n#  Change user\nUSER autoware\nRUN sudo rosdep init \\\n && rosdep update \\\n && echo \"source /opt/ros/kinetic/setup.bash\" >> ~/.bashrc\n#  YOLO_V2 and YOLO_V3\nRUN cd ~ \\\n && git clone https://github.com/pjreddie/darknet.git darknet \\\n && cd ~/darknet \\\n && git checkout 56d69e73aba37283ea7b9726b81afd2f79cd1134\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov2/yolo.cfg /home/$USERNAME/darknet/cfg/yolo.cfg\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov2/yolo.weights /home/$USERNAME/darknet/data/yolo.weights\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov3/yolov3.cfg /home/$USERNAME/darknet/cfg/yolov3.cfg\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov3/yolov3.weights /home/$USERNAME/darknet/data/yolov3.weights\n#  SSD dependencies\nRUN sudo apt-get update \\\n && sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler\nRUN sudo apt-get update \\\n && sudo apt-get install --no-install-recommends -y libboost-all-dev\nRUN sudo apt-get update \\\n && sudo apt-get install -y libatlas-base-dev libgoogle-glog-dev libgflags-dev liblmdb-dev\nRUN sudo apt-get update \\\n && sudo apt-get install -y libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11\n#  SSD setup\nRUN cd ~ \\\n && git clone https://github.com/weiliu89/caffe.git ssdcaffe \\\n && cd ~/ssdcaffe \\\n && git checkout 4817bf8b4200b35ada8ed0dc378dceaf38c539e4\nCOPY --chown=autoware:autoware ./docker/generic/data/ssd/Makefile.config /home/$USERNAME/ssdcaffe/Makefile.config\nCOPY --chown=autoware:autoware ./docker/generic/data/ssd/models/ /home/$USERNAME/ssdcaffe/models/\nRUN cd ~/ssdcaffe \\\n && make \\\n && make distribute\n#  Install Autoware\nCOPY . /home/$USERNAME/autoware\nRUN sudo chown -R autoware /home/$USERNAME/autoware\nRUN /bin/bash -c 'source /opt/ros/kinetic/setup.bash; cd /home/$USERNAME/autoware/ros/src; git submodule update --init --recursive; catkin_init_workspace; cd ../; ./catkin_make_release'\nRUN echo \"source /home/$USERNAME/autoware/ros/devel/setup.bash\" >> /home/$USERNAME/.bashrc\n#  Setting\nENV LANG=\"en_US.UTF-8\"\nRUN echo \"export LANG=\\\"en_US.UTF-8\\\"\" >> /home/$USERNAME/.bashrc\n#  Install dev tools\nRUN sudo apt-get -y install vim tmux\n#  Change Terminal Color\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/use_theme_background\" --type bool false\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/use_theme_colors\" --type bool false\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/background_color\" --type string \"#000000\"\n#  Default CMD\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"9f5de4af0e120f38784b59c03928701a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:8.0-devel-ubuntu16.04\n#   Develop\nRUN apt-get update \\\n && apt-get install software-properties-common wget curl git cmake cmake-curses-gui libboost-all-dev libflann-dev libgsl0-dev libgoogle-perftools-dev libeigen3-dev ca-certificates make autoconf libtool pkg-config python libxext-dev x11proto-gl-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-multilib libxext-dev:i386 libx11-dev:i386 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Intall some basic GUI and sound libs\nRUN apt-get update \\\n && apt-get install xz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme fonts-dejavu fonts-liberation hicolor-icon-theme libcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module libasound2 libgtk2.0-0 libdbus-glib-1-2 libxt6 libexif12 libgl1-mesa-glx libgl1-mesa-dri language-pack-en -y \\\n && update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX\n#   Intall some basic GUI tools\nRUN apt-get update \\\n && apt-get install cmake-qt-gui gnome-terminal -y\n#   Intall ROS\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116\nRUN apt-get update \\\n && apt-get install ros-kinetic-desktop-full ros-kinetic-nmea-msgs ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play ros-kinetic-jsk-visualization ros-kinetic-grid-map ros-kinetic-gps-common -y\nRUN apt-get update \\\n && apt-get install ros-kinetic-controller-manager ros-kinetic-ros-control ros-kinetic-ros-controllers ros-kinetic-gazebo-ros-control ros-kinetic-joystick-drivers ros-kinetic-rosbridge-server -y\nRUN apt-get update \\\n && apt-get install libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev python-wxgtk3.0 software-properties-common libmosquitto-dev libyaml-cpp-dev python-flask python-requests -y\n#   Add basic user\nENV USERNAME=\"autoware\"\nENV PULSE_SERVER=\"/run/pulse/native\"\nRUN useradd -m $USERNAME \\\n && echo \"$USERNAME:$USERNAME\" | chpasswd \\\n && usermod --shell /bin/bash $USERNAME \\\n && usermod -aG sudo $USERNAME \\\n && echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/$USERNAME \\\n && chmod 0440 /etc/sudoers.d/$USERNAME \\\n && usermod --uid 1000 $USERNAME \\\n && groupmod --gid 1000 $USERNAME\n#   Setup .bashrc for ROS\nRUN echo \"source /opt/ros/kinetic/setup.bash\" >> /home/$USERNAME/.bashrc \\\n && echo \"export QT_X11_NO_MITSHM=1\" >> /home/$USERNAME/.bashrc \\\n && echo \"cd\" >> /home/$USERNAME/.bashrc\n#   ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},graphics\nRUN apt-get update \\\n && apt-get install --no-install-recommends pkg-config libxau-dev libxdmcp-dev libxcb1-dev libxext-dev libx11-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 /usr/local/lib/x86_64-linux-gnu /usr/local/lib/x86_64-linux-gnu\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json\nRUN echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf \\\n && ldconfig \\\n && echo '/usr/local/$LIB/libGL.so.1' >> /etc/ld.so.preload \\\n && echo '/usr/local/$LIB/libEGL.so.1' >> /etc/ld.so.preload\n#   nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES=\"${NVIDIA_VISIBLE_DEVICES:-all}\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\"\n#   Change user\nUSER autoware\nRUN sudo rosdep init \\\n && rosdep update \\\n && echo \"source /opt/ros/kinetic/setup.bash\" >> ~/.bashrc\n#   YOLO_V2 and YOLO_V3\nRUN cd ~ \\\n && git clone https://github.com/pjreddie/darknet.git darknet \\\n && cd ~/darknet \\\n && git checkout 56d69e73aba37283ea7b9726b81afd2f79cd1134\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov2/yolo.cfg /home/$USERNAME/darknet/cfg/yolo.cfg\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov2/yolo.weights /home/$USERNAME/darknet/data/yolo.weights\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov3/yolov3.cfg /home/$USERNAME/darknet/cfg/yolov3.cfg\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov3/yolov3.weights /home/$USERNAME/darknet/data/yolov3.weights\n#   SSD dependencies\nRUN sudo apt-get update \\\n && sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler\nRUN sudo apt-get update \\\n && sudo apt-get install --no-install-recommends -y libboost-all-dev\nRUN sudo apt-get update \\\n && sudo apt-get install -y libatlas-base-dev libgoogle-glog-dev libgflags-dev liblmdb-dev\nRUN sudo apt-get update \\\n && sudo apt-get install -y libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11\n#   SSD setup\nRUN cd ~ \\\n && git clone https://github.com/weiliu89/caffe.git ssdcaffe \\\n && cd ~/ssdcaffe \\\n && git checkout 4817bf8b4200b35ada8ed0dc378dceaf38c539e4\nCOPY --chown=autoware:autoware ./docker/generic/data/ssd/Makefile.config /home/$USERNAME/ssdcaffe/Makefile.config\nCOPY --chown=autoware:autoware ./docker/generic/data/ssd/models/ /home/$USERNAME/ssdcaffe/models/\nRUN cd ~/ssdcaffe \\\n && make \\\n && make distribute\n#   Install Autoware\nCOPY . /home/$USERNAME/autoware\nRUN sudo chown -R autoware /home/$USERNAME/autoware\nRUN /bin/bash -c 'source /opt/ros/kinetic/setup.bash; cd /home/$USERNAME/autoware/ros/src; git submodule update --init --recursive; catkin_init_workspace; cd ../; ./catkin_make_release'\nRUN echo \"source /home/$USERNAME/autoware/ros/devel/setup.bash\" >> /home/$USERNAME/.bashrc\n#   Setting\nENV LANG=\"en_US.UTF-8\"\nRUN echo \"export LANG=\\\"en_US.UTF-8\\\"\" >> /home/$USERNAME/.bashrc\n#   Install dev tools\nRUN sudo apt-get -y install vim tmux\n#   Change Terminal Color\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/use_theme_background\" --type bool false\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/use_theme_colors\" --type bool false\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/background_color\" --type string \"#000000\"\n#   Default CMD\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"df2e2f6d02fc07f8137af135992a8103","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5b92a36da09fde0bcc570716cf1c446b6c4e2343.dockerfile"}