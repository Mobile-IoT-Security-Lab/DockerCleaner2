{"seed":3399545698,"processedDockerfileHash":"84e2f3da59ae0988ac6df46f8345b05d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   WARNING: This file is deprecated. Each implementation now has its\n#   own Dockerfile.\nFROM ubuntu:utopic\nMAINTAINER Joel Martin <github@martintribe.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"deb http://dl.bintray.com/sbt/debian /\" > /etc/apt/sources.list.d/sbt.list\nRUN :\n#\n#   General dependencies\n#\nVOLUME /mal\nRUN (apt-get update ;apt-get install --no-install-recommends make wget curl git -y )\n#   Deps for compiled languages (C, Go, Rust, Nim, etc)\nRUN (apt-get update ;apt-get install --no-install-recommends gcc pkg-config -y )\n#   Deps for Java-based languages (Clojure, Scala, Java)\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-7-jdk -y )\nENV MAVEN_OPTS=\"-Duser.home=/mal\"\n#   Deps for Mono-based languages (C#, VB.Net)\nRUN (apt-get update ;apt-get install --no-install-recommends mono-runtime mono-mcs mono-vbnc -y )\n#   Deps for node.js languages (JavaScript, CoffeeScript, miniMAL, etc)\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs npm -y )\nRUN ln -sf nodejs /usr/bin/node\n#\n#   Implementation specific installs\n#\n#   GNU awk\nRUN (apt-get update ;apt-get install --no-install-recommends gawk -y )\n#   Bash\nRUN (apt-get update ;apt-get install --no-install-recommends bash -y )\n#   C\nRUN (apt-get update ;apt-get install --no-install-recommends libglib2.0 libglib2.0-dev -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libffi-dev libreadline-dev libedit2 libedit-dev -y )\n#   C++\nRUN (apt-get update ;apt-get install --no-install-recommends g++-4.9 libreadline-dev -y )\n#   Clojure\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /usr/local/bin/lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein\nRUN sudo chmod 0755 /usr/local/bin/lein\nENV LEIN_HOME=\"/mal/.lein\"\nENV LEIN_JVM_OPTS=\"-Duser.home=/mal\"\n#   CoffeeScript\nRUN npm install coffee-script@1.12.7 -g\nRUN touch /.coffee_history \\\n && chmod go+w /.coffee_history\n#   C#\nRUN (apt-get update ;apt-get install --no-install-recommends mono-mcs -y )\n#   Elixir\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb \\\n && dpkg -i erlang-solutions_1.0_all.deb\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends elixir -y )\n#   Erlang R17 (so I can use maps)\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential libncurses5-dev libssl-dev -y )\nRUN cd /tmp \\\n && wget http://www.erlang.org/download/otp_src_17.5.tar.gz \\\n && tar -C /tmp -zxf /tmp/otp_src_17.5.tar.gz \\\n && cd /tmp/otp_src_17.5 \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/otp_src_17.5 /tmp/otp_src_17.5.tar.gz\n#   Rebar for building the Erlang implementation\nRUN cd /tmp/ \\\n && git clone -q https://github.com/rebar/rebar.git \\\n && cd /tmp/rebar \\\n && ./bootstrap \\\n && cp rebar /usr/local/bin \\\n && rm -rf /tmp/rebar\n#   Forth\nRUN (apt-get update ;apt-get install --no-install-recommends gforth -y )\n#   Go\nRUN (apt-get update ;apt-get install --no-install-recommends golang -y )\n#   Guile\nRUN (apt-get update ;apt-get install --no-install-recommends libunistring-dev libgc-dev autoconf libtool flex gettext texinfo libgmp-dev -y )\nRUN git clone git://git.sv.gnu.org/guile.git /tmp/guile \\\n && cd /tmp/guile \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   Haskell\nRUN (apt-get update ;apt-get install --no-install-recommends ghc haskell-platform libghc-readline-dev libghc-editline-dev -y )\n#   Java\nRUN (apt-get update ;apt-get install --no-install-recommends maven2 -y )\n#   JavaScript\n#   Already satisfied above\n#   Julia\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common -y )\nRUN apt-add-repository -y ppa:staticfloat/juliareleases\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends julia -y )\n#   Lua\nRUN (apt-get update ;apt-get install --no-install-recommends lua5.1 lua-rex-pcre luarocks -y )\nRUN luarocks install linenoise\n#   Mal\n#   N/A: self-hosted on other language implementations\n#   GNU Make\n#   Already satisfied as a based dependency for testing\n#   miniMAL\nRUN npm install minimal-lisp@1.0.3 -g\n#   Nim\nRUN cd /tmp \\\n && wget http://nim-lang.org/download/nim-0.17.0.tar.xz \\\n && tar xvJf /tmp/nim-0.17.0.tar.xz \\\n && cd nim-0.17.0 \\\n && make \\\n && sh install.sh /usr/local/bin \\\n && rm -r /tmp/nim-0.17.0\n#   OCaml\nRUN (apt-get update ;apt-get install --no-install-recommends ocaml-batteries-included -y )\n#   perl\nRUN (apt-get update ;apt-get install --no-install-recommends perl -y )\n#   PHP\nRUN (apt-get update ;apt-get install --no-install-recommends php5-cli -y )\n#   PostScript/ghostscript\nRUN (apt-get update ;apt-get install --no-install-recommends ghostscript -y )\n#   python\nRUN (apt-get update ;apt-get install --no-install-recommends python -y )\n#   R\nRUN (apt-get update ;apt-get install --no-install-recommends r-base-core -y )\n#   Racket\nRUN (apt-get update ;apt-get install --no-install-recommends racket -y )\n#   Ruby\nRUN (apt-get update ;apt-get install --no-install-recommends ruby -y )\n#   Rust\nRUN curl -sf https://raw.githubusercontent.com/brson/multirust/master/blastoff.sh | sh\n#   Scala\nRUN (apt-get update ;apt-get install --no-install-recommends sbt -y --force-yes )\nRUN (apt-get update ;apt-get install --no-install-recommends scala -y )\nENV SBT_OPTS=\"-Duser.home=/mal\"\n#   VB.Net\nRUN (apt-get update ;apt-get install --no-install-recommends mono-vbnc -y )\n#   TODO: move up\n#   Factor\nRUN (apt-get update ;apt-get install --no-install-recommends libgtkglext1 -y )\nRUN cd /usr/lib/x86_64-linux-gnu/ \\\n && wget http://downloads.factorcode.org/releases/0.97/factor-linux-x86-64-0.97.tar.gz \\\n && tar xvzf factor-linux-x86-64-0.97.tar.gz \\\n && ln -sf /usr/lib/x86_64-linux-gnu/factor/factor /usr/bin/factor \\\n && rm factor-linux-x86-64-0.97.tar.gz\n#   MATLAB is proprietary/licensed. Maybe someday with Octave.\n#   Swift is XCode/OS X only\nENV SKIP_IMPLS=\"matlab swift\"\nENV DEBIAN_FRONTEND=\"newt\"\nENV HOME=\"/\"\nWORKDIR /mal\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  WARNING: This file is deprecated. Each implementation now has its\n#  own Dockerfile.\nFROM ubuntu:utopic\nMAINTAINER Joel Martin <github@martintribe.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"deb http://dl.bintray.com/sbt/debian /\" > /etc/apt/sources.list.d/sbt.list\nRUN apt-get update -y\n#\n#  General dependencies\n#\nVOLUME /mal\nRUN apt-get install make wget curl git -y\n#  Deps for compiled languages (C, Go, Rust, Nim, etc)\nRUN apt-get install gcc pkg-config -y\n#  Deps for Java-based languages (Clojure, Scala, Java)\nRUN apt-get install openjdk-7-jdk -y\nENV MAVEN_OPTS=\"-Duser.home=/mal\"\n#  Deps for Mono-based languages (C#, VB.Net)\nRUN apt-get install mono-runtime mono-mcs mono-vbnc -y\n#  Deps for node.js languages (JavaScript, CoffeeScript, miniMAL, etc)\nRUN apt-get install nodejs npm -y\nRUN ln -sf nodejs /usr/bin/node\n#\n#  Implementation specific installs\n#\n#  GNU awk\nRUN apt-get install gawk -y\n#  Bash\nRUN apt-get install bash -y\n#  C\nRUN apt-get install libglib2.0 libglib2.0-dev -y\nRUN apt-get install libffi-dev libreadline-dev libedit2 libedit-dev -y\n#  C++\nRUN apt-get install g++-4.9 libreadline-dev -y\n#  Clojure\nADD https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein /usr/local/bin/lein\nRUN sudo chmod 0755 /usr/local/bin/lein\nENV LEIN_HOME=\"/mal/.lein\"\nENV LEIN_JVM_OPTS=\"-Duser.home=/mal\"\n#  CoffeeScript\nRUN npm install coffee-script -g\nRUN touch /.coffee_history \\\n && chmod go+w /.coffee_history\n#  C#\nRUN apt-get install mono-mcs -y\n#  Elixir\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb \\\n && dpkg -i erlang-solutions_1.0_all.deb\nRUN apt-get update\nRUN apt-get install elixir -y\n#  Erlang R17 (so I can use maps)\nRUN apt-get install build-essential libncurses5-dev libssl-dev -y\nRUN cd /tmp \\\n && wget http://www.erlang.org/download/otp_src_17.5.tar.gz \\\n && tar -C /tmp -zxf /tmp/otp_src_17.5.tar.gz \\\n && cd /tmp/otp_src_17.5 \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/otp_src_17.5 /tmp/otp_src_17.5.tar.gz\n#  Rebar for building the Erlang implementation\nRUN cd /tmp/ \\\n && git clone -q https://github.com/rebar/rebar.git \\\n && cd /tmp/rebar \\\n && ./bootstrap \\\n && cp rebar /usr/local/bin \\\n && rm -rf /tmp/rebar\n#  Forth\nRUN apt-get install gforth -y\n#  Go\nRUN apt-get install golang -y\n#  Guile\nRUN apt-get install libunistring-dev libgc-dev autoconf libtool flex gettext texinfo libgmp-dev -y\nRUN git clone git://git.sv.gnu.org/guile.git /tmp/guile \\\n && cd /tmp/guile \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#  Haskell\nRUN apt-get install ghc haskell-platform libghc-readline-dev libghc-editline-dev -y\n#  Java\nRUN apt-get install maven2 -y\n#  JavaScript\n#  Already satisfied above\n#  Julia\nRUN apt-get install software-properties-common -y\nRUN apt-add-repository -y ppa:staticfloat/juliareleases\nRUN apt-get update -y\nRUN apt-get install julia -y\n#  Lua\nRUN apt-get install lua5.1 lua-rex-pcre luarocks -y\nRUN luarocks install linenoise\n#  Mal\n#  N/A: self-hosted on other language implementations\n#  GNU Make\n#  Already satisfied as a based dependency for testing\n#  miniMAL\nRUN npm install minimal-lisp -g\n#  Nim\nRUN cd /tmp \\\n && wget http://nim-lang.org/download/nim-0.17.0.tar.xz \\\n && tar xvJf /tmp/nim-0.17.0.tar.xz \\\n && cd nim-0.17.0 \\\n && make \\\n && sh install.sh /usr/local/bin \\\n && rm -r /tmp/nim-0.17.0\n#  OCaml\nRUN apt-get install ocaml-batteries-included -y\n#  perl\nRUN apt-get install perl -y\n#  PHP\nRUN apt-get install php5-cli -y\n#  PostScript/ghostscript\nRUN apt-get install ghostscript -y\n#  python\nRUN apt-get install python -y\n#  R\nRUN apt-get install r-base-core -y\n#  Racket\nRUN apt-get install racket -y\n#  Ruby\nRUN apt-get install ruby -y\n#  Rust\nRUN curl -sf https://raw.githubusercontent.com/brson/multirust/master/blastoff.sh | sh\n#  Scala\nRUN apt-get install sbt -y --force-yes\nRUN apt-get install scala -y\nENV SBT_OPTS=\"-Duser.home=/mal\"\n#  VB.Net\nRUN apt-get install mono-vbnc -y\n#  TODO: move up\n#  Factor\nRUN apt-get install libgtkglext1 -y\nRUN cd /usr/lib/x86_64-linux-gnu/ \\\n && wget http://downloads.factorcode.org/releases/0.97/factor-linux-x86-64-0.97.tar.gz \\\n && tar xvzf factor-linux-x86-64-0.97.tar.gz \\\n && ln -sf /usr/lib/x86_64-linux-gnu/factor/factor /usr/bin/factor \\\n && rm factor-linux-x86-64-0.97.tar.gz\n#  MATLAB is proprietary/licensed. Maybe someday with Octave.\n#  Swift is XCode/OS X only\nENV SKIP_IMPLS=\"matlab swift\"\nENV DEBIAN_FRONTEND=\"newt\"\nENV HOME=\"/\"\nWORKDIR /mal\n","injectedSmells":[],"originalDockerfileHash":"ee4cfe982ab9faf62af8e86bcaa0f362","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   WARNING: This file is deprecated. Each implementation now has its\n#   own Dockerfile.\nFROM ubuntu:utopic\nMAINTAINER Joel Martin <github@martintribe.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"deb http://dl.bintray.com/sbt/debian /\" > /etc/apt/sources.list.d/sbt.list\nRUN apt-get update -y\n#\n#   General dependencies\n#\nVOLUME /mal\nRUN apt-get install make wget curl git -y\n#   Deps for compiled languages (C, Go, Rust, Nim, etc)\nRUN apt-get install gcc pkg-config -y\n#   Deps for Java-based languages (Clojure, Scala, Java)\nRUN apt-get install openjdk-7-jdk -y\nENV MAVEN_OPTS=\"-Duser.home=/mal\"\n#   Deps for Mono-based languages (C#, VB.Net)\nRUN apt-get install mono-runtime mono-mcs mono-vbnc -y\n#   Deps for node.js languages (JavaScript, CoffeeScript, miniMAL, etc)\nRUN apt-get install nodejs npm -y\nRUN ln -sf nodejs /usr/bin/node\n#\n#   Implementation specific installs\n#\n#   GNU awk\nRUN apt-get install gawk -y\n#   Bash\nRUN apt-get install bash -y\n#   C\nRUN apt-get install libglib2.0 libglib2.0-dev -y\nRUN apt-get install libffi-dev libreadline-dev libedit2 libedit-dev -y\n#   C++\nRUN apt-get install g++-4.9 libreadline-dev -y\n#   Clojure\nADD https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein /usr/local/bin/lein\nRUN sudo chmod 0755 /usr/local/bin/lein\nENV LEIN_HOME=\"/mal/.lein\"\nENV LEIN_JVM_OPTS=\"-Duser.home=/mal\"\n#   CoffeeScript\nRUN npm install coffee-script -g\nRUN touch /.coffee_history \\\n && chmod go+w /.coffee_history\n#   C#\nRUN apt-get install mono-mcs -y\n#   Elixir\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb \\\n && dpkg -i erlang-solutions_1.0_all.deb\nRUN apt-get update\nRUN apt-get install elixir -y\n#   Erlang R17 (so I can use maps)\nRUN apt-get install build-essential libncurses5-dev libssl-dev -y\nRUN cd /tmp \\\n && wget http://www.erlang.org/download/otp_src_17.5.tar.gz \\\n && tar -C /tmp -zxf /tmp/otp_src_17.5.tar.gz \\\n && cd /tmp/otp_src_17.5 \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/otp_src_17.5 /tmp/otp_src_17.5.tar.gz\n#   Rebar for building the Erlang implementation\nRUN cd /tmp/ \\\n && git clone -q https://github.com/rebar/rebar.git \\\n && cd /tmp/rebar \\\n && ./bootstrap \\\n && cp rebar /usr/local/bin \\\n && rm -rf /tmp/rebar\n#   Forth\nRUN apt-get install gforth -y\n#   Go\nRUN apt-get install golang -y\n#   Guile\nRUN apt-get install libunistring-dev libgc-dev autoconf libtool flex gettext texinfo libgmp-dev -y\nRUN git clone git://git.sv.gnu.org/guile.git /tmp/guile \\\n && cd /tmp/guile \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   Haskell\nRUN apt-get install ghc haskell-platform libghc-readline-dev libghc-editline-dev -y\n#   Java\nRUN apt-get install maven2 -y\n#   JavaScript\n#   Already satisfied above\n#   Julia\nRUN apt-get install software-properties-common -y\nRUN apt-add-repository -y ppa:staticfloat/juliareleases\nRUN apt-get update -y\nRUN apt-get install julia -y\n#   Lua\nRUN apt-get install lua5.1 lua-rex-pcre luarocks -y\nRUN luarocks install linenoise\n#   Mal\n#   N/A: self-hosted on other language implementations\n#   GNU Make\n#   Already satisfied as a based dependency for testing\n#   miniMAL\nRUN npm install minimal-lisp -g\n#   Nim\nRUN cd /tmp \\\n && wget http://nim-lang.org/download/nim-0.17.0.tar.xz \\\n && tar xvJf /tmp/nim-0.17.0.tar.xz \\\n && cd nim-0.17.0 \\\n && make \\\n && sh install.sh /usr/local/bin \\\n && rm -r /tmp/nim-0.17.0\n#   OCaml\nRUN apt-get install ocaml-batteries-included -y\n#   perl\nRUN apt-get install perl -y\n#   PHP\nRUN apt-get install php5-cli -y\n#   PostScript/ghostscript\nRUN apt-get install ghostscript -y\n#   python\nRUN apt-get install python -y\n#   R\nRUN apt-get install r-base-core -y\n#   Racket\nRUN apt-get install racket -y\n#   Ruby\nRUN apt-get install ruby -y\n#   Rust\nRUN curl -sf https://raw.githubusercontent.com/brson/multirust/master/blastoff.sh | sh\n#   Scala\nRUN apt-get install sbt -y --force-yes\nRUN apt-get install scala -y\nENV SBT_OPTS=\"-Duser.home=/mal\"\n#   VB.Net\nRUN apt-get install mono-vbnc -y\n#   TODO: move up\n#   Factor\nRUN apt-get install libgtkglext1 -y\nRUN cd /usr/lib/x86_64-linux-gnu/ \\\n && wget http://downloads.factorcode.org/releases/0.97/factor-linux-x86-64-0.97.tar.gz \\\n && tar xvzf factor-linux-x86-64-0.97.tar.gz \\\n && ln -sf /usr/lib/x86_64-linux-gnu/factor/factor /usr/bin/factor \\\n && rm factor-linux-x86-64-0.97.tar.gz\n#   MATLAB is proprietary/licensed. Maybe someday with Octave.\n#   Swift is XCode/OS X only\nENV SKIP_IMPLS=\"matlab swift\"\nENV DEBIAN_FRONTEND=\"newt\"\nENV HOME=\"/\"\nWORKDIR /mal\n","originalDockerfileUglifiedHash":"812f14a670965ae5f4df91855ffe88b0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/71b7ed0a3ef090a299a207b722b2814ae3db2e54.dockerfile"}