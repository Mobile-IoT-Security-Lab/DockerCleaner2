{"seed":4073193586,"processedDockerfileHash":"2553ac42a0d1b25c2b7d1ad2070cbad4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This is a Dockerfile to create a container running Python 3.7\n#   and to install the openVulnQuery client (client for the Cisco openVuln API)\n#   Author: Omar Santos os@cisco.com\nFROM alpine:latest\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3.x;\n#   that is a bug documented at: http://bugs.python.org/issue19846\nENV LANG=\"C.UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   other runtime dependencies for Python are installed later\nRUN apk add ca-certificates=20220614-r4 --no-cache\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.7.0\"\nRUN set -ex \\\n && apk add gnupg=2.2.40-r0 tar=1.34-r2 xz=5.2.9-r0 --no-cache --virtual .fetch-deps \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add bzip2-dev=1.0.8-r4 coreutils=9.1-r0 dpkg-dev=1.21.9-r0 dpkg=1.21.9-r0 expat-dev=2.5.0-r0 findutils=4.9.0-r3 gcc=12.2.1_git20220924-r4 gdbm-dev=1.23-r0 libc-dev=0.7.2-r3 libffi-dev=3.4.4-r0 libnsl-dev=2.0.0-r0 libressl-dev=3.6.2-r0 libtirpc-dev=1.3.3-r0 linux-headers=5.19.5-r0 make=4.3-r1 ncurses-dev=6.3_p20221119-r0 pax-utils=1.3.5-r1 readline-dev=8.2.0-r0 sqlite-dev=3.40.1-r0 tcl-dev=8.6.12-r1 tk=8.6.12-r1 tk-dev=8.6.12-r1 util-linux-dev=2.38.1-r1 xz-dev=5.2.9-r0 zlib-dev=1.2.13-r0 git=2.38.4-r1 gnupg=2.2.40-r0 openssh-client openssh-keygen=9.1_p1-r2 --no-cache --virtual .build-deps \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\n#   Finally installing the openVulnQuery client.\nRUN set -ex ; python3 -m pip install openVulnQuery==1.30\nCMD [\"python3\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This is a Dockerfile to create a container running Python 3.7\n#  and to install the openVulnQuery client (client for the Cisco openVuln API)\n#  Author: Omar Santos os@cisco.com\nFROM alpine:latest\n#  ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#  At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3.x;\n#  that is a bug documented at: http://bugs.python.org/issue19846\nENV LANG=\"C.UTF-8\"\n#  install ca-certificates so that HTTPS works consistently\n#  other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.7.0\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg expat-dev findutils gcc gdbm-dev libc-dev libffi-dev libnsl-dev libressl-dev libtirpc-dev linux-headers make ncurses-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev util-linux-dev xz-dev zlib-dev git gnupg openssh-client openssh-keygen \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not ( -name '*tkinter*' ) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' | xargs -rt apk add --no-cache --virtual .python-rundeps \\\n && apk del .build-deps \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python \\\n && python3 --version\n#  make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\n#  Finally installing the openVulnQuery client.\nRUN set -ex ; python3 -m pip install openVulnQuery==1.30\nCMD [\"python3\"]\n","injectedSmells":[],"originalDockerfileHash":"759895cf29779978af4f1e2df2c80072","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This is a Dockerfile to create a container running Python 3.7\n#   and to install the openVulnQuery client (client for the Cisco openVuln API)\n#   Author: Omar Santos os@cisco.com\nFROM alpine:latest\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3.x;\n#   that is a bug documented at: http://bugs.python.org/issue19846\nENV LANG=\"C.UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.7.0\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg expat-dev findutils gcc gdbm-dev libc-dev libffi-dev libnsl-dev libressl-dev libtirpc-dev linux-headers make ncurses-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev util-linux-dev xz-dev zlib-dev git gnupg openssh-client openssh-keygen \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\n#   Finally installing the openVulnQuery client.\nRUN set -ex ; python3 -m pip install openVulnQuery==1.30\nCMD [\"python3\"]\n","originalDockerfileUglifiedHash":"33a753bf36cc0658ca91efb6ed2ba584","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7752517a9e402bbe188ef24a76380d641389de21.dockerfile"}