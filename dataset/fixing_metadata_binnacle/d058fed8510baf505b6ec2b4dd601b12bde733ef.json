{"seed":4006677261,"processedDockerfileHash":"e334695cc832c7821cf1bf0ce332ae84","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM appsvcorg/nginx-fpm:php7.3.4\nLABEL maintainer=\"=\\\"Azure App Service Container Images <appsvc-images@microsoft.com>\\\"\"\n#   ========\n#   ENV vars\n#   ========\n#\nENV DOCKER_BUILD_HOME=\"\\\"/dockerbuild\\\"\"\n#   drupal \nENV DRUPAL_HOME=\"\\\"/home/site/wwwroot\\\"\"\nENV DRUPAL_PRJ=\"\\\"/home/drupal_prj\\\"\"\n#   mariadb\nENV MARIADB_DATA_DIR=\"\\\"/home/data/mysql\\\"\"\nENV MARIADB_LOG_DIR=\"\\\"/home/LogFiles/mysql\\\"\"\n#   phpmyadmin\nENV PHPMYADMIN_SOURCE=\"\\\"/usr/src/phpmyadmin\\\"\"\nENV PHPMYADMIN_HOME=\"\\\"/home/phpmyadmin\\\"\"\n#   drupal\nENV DRUPAL_SOURCE=\"\\\"/usr/src/drupal\\\"\"\n#  nginx\nENV NGINX_LOG_DIR=\"\\\"/home/LogFiles/nginx\\\"\"\n#  varnish\nENV VARNISH_LOG_DIR=\"\\\"/home/LogFiles/varnish\\\"\"\n#  php\nENV PHP_CONF_FILE=\"\\\"/usr/local/etc/php/php.ini\\\"\"\n#   Composer\n#   Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL=\"\\\"https://getcomposer.org/installer\\\"\"\n#   ====================\n#   Download and Install\n#   ~. essentials\n#   1. Drupal\n#   ====================\nRUN mkdir -p $DOCKER_BUILD_HOME\nWORKDIR $DOCKER_BUILD_HOME\nRUN set -ex \\\n && docker-php-source extract \\\n && apk add libjpeg-turbo-dev libpng-dev libzip-dev freetype-dev --no-cache --virtual .build-deps \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n && docker-php-ext-install -j \"$( nproc ;)\" gd zip \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add $runDeps --virtual .drupal-phpexts-rundeps \\\n && apk del .build-deps \\\n && docker-php-source delete \\\n && mkdir -p /usr/local/php/tmp \\\n && chmod 777 /usr/local/php/tmp \\\n && mkdir -p ${DRUPAL_SOURCE} \\\n && curl -sS $COMPOSER_DOWNLOAD_URL | php -- --install-dir=/usr/bin --filename=composer \\\n && composer self-update \\\n && rm -rf /home/.composer \\\n && export COMPOSER_HOME='/root/.composer/' \\\n && composer global require consolidation/cgr \\\n && composer_home=$( find / -name .composer ;) \\\n && ln -s $composer_home/vendor/bin/cgr /usr/local/bin/cgr \\\n && cgr drush/drush \\\n && ln -s $composer_home/vendor/bin/drush /usr/local/bin/drush \\\n && apk update \\\n && apk add varnish --no-cache \\\n && rm -rf /var/log/varnish \\\n && ln -s $VARNISH_LOG_DIR /var/log/varnish \\\n && apk upgrade \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf $DOCKER_BUILD_HOME \\\n && rm -rf /etc/nginx/conf.d/default.conf\n#   =========\n#   Configure\n#   =========\nWORKDIR $DRUPAL_HOME\n#   mariadb\nCOPY my.cnf /etc/mysql/\n#   nginx\nCOPY spec-settings.conf /etc/nginx/conf.d/\nCOPY nginx.conf /etc/nginx/\n#   php\nCOPY php.ini $PHP_CONF_FILE\n#   drupal\nCOPY drupal-database-install-tasks.php ${DRUPAL_SOURCE}\n#   phpmyadmin\nCOPY phpmyadmin_src/. $PHPMYADMIN_SOURCE/\n#   Varinish\nCOPY default.vcl /etc/varnish/default.vcl\n#   =====\n#   final\n#   =====\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM appsvcorg/nginx-fpm:php7.3.4\nLABEL maintainer=\"=\\\"Azure App Service Container Images <appsvc-images@microsoft.com>\\\"\"\n#  ========\n#  ENV vars\n#  ========\n#\nENV DOCKER_BUILD_HOME=\"\\\"/dockerbuild\\\"\"\n#  drupal \nENV DRUPAL_HOME=\"\\\"/home/site/wwwroot\\\"\"\nENV DRUPAL_PRJ=\"\\\"/home/drupal_prj\\\"\"\n#  mariadb\nENV MARIADB_DATA_DIR=\"\\\"/home/data/mysql\\\"\"\nENV MARIADB_LOG_DIR=\"\\\"/home/LogFiles/mysql\\\"\"\n#  phpmyadmin\nENV PHPMYADMIN_SOURCE=\"\\\"/usr/src/phpmyadmin\\\"\"\nENV PHPMYADMIN_HOME=\"\\\"/home/phpmyadmin\\\"\"\n#  drupal\nENV DRUPAL_SOURCE=\"\\\"/usr/src/drupal\\\"\"\n# nginx\nENV NGINX_LOG_DIR=\"\\\"/home/LogFiles/nginx\\\"\"\n# varnish\nENV VARNISH_LOG_DIR=\"\\\"/home/LogFiles/varnish\\\"\"\n# php\nENV PHP_CONF_FILE=\"\\\"/usr/local/etc/php/php.ini\\\"\"\n#  Composer\n#  Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL=\"\\\"https://getcomposer.org/installer\\\"\"\n#  ====================\n#  Download and Install\n#  ~. essentials\n#  1. Drupal\n#  ====================\nRUN mkdir -p $DOCKER_BUILD_HOME\nWORKDIR $DOCKER_BUILD_HOME\nRUN set -ex \\\n && docker-php-source extract \\\n && apk add --no-cache --virtual .build-deps libjpeg-turbo-dev libpng-dev libzip-dev freetype-dev \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n && docker-php-ext-install -j \"$( nproc ;)\" gd zip \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --virtual .drupal-phpexts-rundeps $runDeps \\\n && apk del .build-deps \\\n && docker-php-source delete \\\n && mkdir -p /usr/local/php/tmp \\\n && chmod 777 /usr/local/php/tmp \\\n && mkdir -p ${DRUPAL_SOURCE} \\\n && curl -sS $COMPOSER_DOWNLOAD_URL | php -- --install-dir=/usr/bin --filename=composer \\\n && composer self-update \\\n && rm -rf /home/.composer \\\n && export COMPOSER_HOME='/root/.composer/' \\\n && composer global require consolidation/cgr \\\n && composer_home=$( find / -name .composer ;) \\\n && ln -s $composer_home/vendor/bin/cgr /usr/local/bin/cgr \\\n && cgr drush/drush \\\n && ln -s $composer_home/vendor/bin/drush /usr/local/bin/drush \\\n && apk update \\\n && apk add --no-cache varnish \\\n && rm -rf /var/log/varnish \\\n && ln -s $VARNISH_LOG_DIR /var/log/varnish \\\n && apk upgrade \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf $DOCKER_BUILD_HOME \\\n && rm -rf /etc/nginx/conf.d/default.conf\n#  =========\n#  Configure\n#  =========\nWORKDIR $DRUPAL_HOME\n#  mariadb\nCOPY my.cnf /etc/mysql/\n#  nginx\nCOPY spec-settings.conf /etc/nginx/conf.d/\nCOPY nginx.conf /etc/nginx/\n#  php\nCOPY php.ini $PHP_CONF_FILE\n#  drupal\nCOPY drupal-database-install-tasks.php ${DRUPAL_SOURCE}\n#  phpmyadmin\nCOPY phpmyadmin_src/. $PHPMYADMIN_SOURCE/\n#  Varinish\nCOPY default.vcl /etc/varnish/default.vcl\n#  =====\n#  final\n#  =====\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"ca08f6e4917afa75a081f503eed10b0d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM appsvcorg/nginx-fpm:php7.3.4\nLABEL maintainer=\"=\\\"Azure App Service Container Images <appsvc-images@microsoft.com>\\\"\"\n#   ========\n#   ENV vars\n#   ========\n#\nENV DOCKER_BUILD_HOME=\"\\\"/dockerbuild\\\"\"\n#   drupal \nENV DRUPAL_HOME=\"\\\"/home/site/wwwroot\\\"\"\nENV DRUPAL_PRJ=\"\\\"/home/drupal_prj\\\"\"\n#   mariadb\nENV MARIADB_DATA_DIR=\"\\\"/home/data/mysql\\\"\"\nENV MARIADB_LOG_DIR=\"\\\"/home/LogFiles/mysql\\\"\"\n#   phpmyadmin\nENV PHPMYADMIN_SOURCE=\"\\\"/usr/src/phpmyadmin\\\"\"\nENV PHPMYADMIN_HOME=\"\\\"/home/phpmyadmin\\\"\"\n#   drupal\nENV DRUPAL_SOURCE=\"\\\"/usr/src/drupal\\\"\"\n#  nginx\nENV NGINX_LOG_DIR=\"\\\"/home/LogFiles/nginx\\\"\"\n#  varnish\nENV VARNISH_LOG_DIR=\"\\\"/home/LogFiles/varnish\\\"\"\n#  php\nENV PHP_CONF_FILE=\"\\\"/usr/local/etc/php/php.ini\\\"\"\n#   Composer\n#   Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL=\"\\\"https://getcomposer.org/installer\\\"\"\n#   ====================\n#   Download and Install\n#   ~. essentials\n#   1. Drupal\n#   ====================\nRUN mkdir -p $DOCKER_BUILD_HOME\nWORKDIR $DOCKER_BUILD_HOME\nRUN set -ex \\\n && docker-php-source extract \\\n && apk add --no-cache --virtual .build-deps libjpeg-turbo-dev libpng-dev libzip-dev freetype-dev \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n && docker-php-ext-install -j \"$( nproc ;)\" gd zip \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --virtual .drupal-phpexts-rundeps $runDeps \\\n && apk del .build-deps \\\n && docker-php-source delete \\\n && mkdir -p /usr/local/php/tmp \\\n && chmod 777 /usr/local/php/tmp \\\n && mkdir -p ${DRUPAL_SOURCE} \\\n && curl -sS $COMPOSER_DOWNLOAD_URL | php -- --install-dir=/usr/bin --filename=composer \\\n && composer self-update \\\n && rm -rf /home/.composer \\\n && export COMPOSER_HOME='/root/.composer/' \\\n && composer global require consolidation/cgr \\\n && composer_home=$( find / -name .composer ;) \\\n && ln -s $composer_home/vendor/bin/cgr /usr/local/bin/cgr \\\n && cgr drush/drush \\\n && ln -s $composer_home/vendor/bin/drush /usr/local/bin/drush \\\n && apk update \\\n && apk add --no-cache varnish \\\n && rm -rf /var/log/varnish \\\n && ln -s $VARNISH_LOG_DIR /var/log/varnish \\\n && apk upgrade \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf $DOCKER_BUILD_HOME \\\n && rm -rf /etc/nginx/conf.d/default.conf\n#   =========\n#   Configure\n#   =========\nWORKDIR $DRUPAL_HOME\n#   mariadb\nCOPY my.cnf /etc/mysql/\n#   nginx\nCOPY spec-settings.conf /etc/nginx/conf.d/\nCOPY nginx.conf /etc/nginx/\n#   php\nCOPY php.ini $PHP_CONF_FILE\n#   drupal\nCOPY drupal-database-install-tasks.php ${DRUPAL_SOURCE}\n#   phpmyadmin\nCOPY phpmyadmin_src/. $PHPMYADMIN_SOURCE/\n#   Varinish\nCOPY default.vcl /etc/varnish/default.vcl\n#   =====\n#   final\n#   =====\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"fb725356b11a1312351b37558bad72eb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d058fed8510baf505b6ec2b4dd601b12bde733ef.dockerfile"}