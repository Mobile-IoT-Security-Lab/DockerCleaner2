{"seed":309922330,"processedDockerfileHash":"bc5af13700d9bca05b8e81711a8a9652","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   CMU OpenPose\n#   OpenPose: A Real-Time Multi-Person Keypoint Detection And Multi-Threading C++ Library\n#\n#   @see https://github.com/CMU-Perceptual-Computing-Lab/openpose\n#\n#   Copyright (c) 2017 Loreto Parisi - https://github.com/loretoparisi/docker\n#\nFROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nMAINTAINER Loreto Parisi <loretoparisi@gmail.com>\nRUN apt-get update \\\n && apt-get install --no-install-recommends git curl wget unzip ffmpeg build-essential cmake git pkg-config libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev python3-numpy python3-pip -y\nRUN mkdir OpenCV \\\n && cd OpenCV\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential checkinstall cmake pkg-config yasm libtiff5-dev libjpeg-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev python-dev python-numpy python-pip libtbb-dev libeigen3-dev libqt4-dev libgtk2.0-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils libgtk2.0-dev unzip libhdf5-dev wget sudo -y\n#   OpenCV contrib (needed for OpenPose)\nRUN git clone https://github.com/opencv/opencv_contrib.git\n#   install OpenCV\nRUN cd /opt \\\n && wget https://github.com/daveselinger/opencv/archive/3.1.0-with-cuda8.zip -O opencv-3.1.0.zip -nv \\\n && unzip opencv-3.1.0.zip \\\n && mv opencv-3.1.0-with-cuda8 opencv-3.1.0 \\\n && cd opencv-3.1.0 \\\n && rm -rf build \\\n && mkdir build \\\n && cd build \\\n && cmake -D CUDA_ARCH_BIN=3.2 -D CUDA_ARCH_PTX=3.2 -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D BUILD_TIFF=ON -D WITH_QT=ON -D ENABLE_PRECOMPILED_HEADERS=OFF -D WITH_OPENGL=ON .. -D OPENCV_EXTRA_MODULES_PATH=opencv_contrib/modules .. \\\n && make -j4 \\\n && make install \\\n && echo \"/usr/local/lib\" | sudo tee -a /etc/ld.so.conf.d/opencv.conf \\\n && ldconfig\nRUN cp /opt/opencv-3.1.0/build/lib/cv2.so /usr/lib/python2.7/dist-packages/cv2.so\n#   install ATLAS\n#   optionally need OpenBLAS or IntelMKL\nRUN apt-get update \\\n && apt-get install --no-install-recommends libopenblas-dev libatlas-base-dev -y\n#   see https://ahmedibrahimvt.wordpress.com/2017/02/19/fatal-error-hdf5-h-no-such-file-or-directory/\nRUN apt-get update \\\n && apt-get install --no-install-recommends libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11 hdf5-helpers -y\n#   this stands for export ...\n#   /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_hl.so\n#   /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_hl.so\nENV CPATH=\"/usr/include/hdf5/serial/\"\nRUN cd /usr/lib/x86_64-linux-gnu/hdf5/serial \\\n && sudo ln -s libhdf5_hl.so /usr/lib/libhdf5_hl.so \\\n && sudo ln -s libhdf5.so /usr/lib/libhdf5.so \\\n && sudo ln -s libhdf5_hl.so /usr/local/lib/libhdf5_hl.so \\\n && sudo ln -s libhdf5.so /usr/local/lib/libhdf5.so \\\n && sudo ldconfig\nWORKDIR /root/\n#   get OpenPose and patch caffe makefiles\nRUN git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git\nCOPY caffe/Makefile.config openpose/3rdparty/caffe/\nCOPY caffe/Makefile openpose/3rdparty/caffe/\n#  COPY ubuntu/install_caffe_and_openpose_if_cuda8.sh openpose/ubuntu/\n#   move me above!\nRUN sudo apt-get install -y lsb-release\n#   install openpose and caffe\nRUN cd openpose \\\n && bash ./ubuntu/install_caffe_and_openpose_if_cuda8.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  CMU OpenPose\n#  OpenPose: A Real-Time Multi-Person Keypoint Detection And Multi-Threading C++ Library\n#\n#  @see https://github.com/CMU-Perceptual-Computing-Lab/openpose\n#\n#  Copyright (c) 2017 Loreto Parisi - https://github.com/loretoparisi/docker\n#\nFROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nMAINTAINER Loreto Parisi <loretoparisi@gmail.com>\nRUN apt-get update \\\n && apt-get install git curl wget unzip ffmpeg build-essential cmake git pkg-config libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev python3-numpy python3-pip -y\nRUN mkdir OpenCV \\\n && cd OpenCV\nRUN apt-get update \\\n && apt-get install build-essential checkinstall cmake pkg-config yasm libtiff5-dev libjpeg-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev python-dev python-numpy python-pip libtbb-dev libeigen3-dev libqt4-dev libgtk2.0-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils libgtk2.0-dev unzip libhdf5-dev wget sudo -y\n#  OpenCV contrib (needed for OpenPose)\nRUN git clone https://github.com/opencv/opencv_contrib.git\n#  install OpenCV\nRUN cd /opt \\\n && wget https://github.com/daveselinger/opencv/archive/3.1.0-with-cuda8.zip -O opencv-3.1.0.zip -nv \\\n && unzip opencv-3.1.0.zip \\\n && mv opencv-3.1.0-with-cuda8 opencv-3.1.0 \\\n && cd opencv-3.1.0 \\\n && rm -rf build \\\n && mkdir build \\\n && cd build \\\n && cmake -D CUDA_ARCH_BIN=3.2 -D CUDA_ARCH_PTX=3.2 -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D BUILD_TIFF=ON -D WITH_QT=ON -D ENABLE_PRECOMPILED_HEADERS=OFF -D WITH_OPENGL=ON .. -D OPENCV_EXTRA_MODULES_PATH=opencv_contrib/modules .. \\\n && make -j4 \\\n && make install \\\n && echo \"/usr/local/lib\" | sudo tee -a /etc/ld.so.conf.d/opencv.conf \\\n && ldconfig\nRUN cp /opt/opencv-3.1.0/build/lib/cv2.so /usr/lib/python2.7/dist-packages/cv2.so\n#  install ATLAS\n#  optionally need OpenBLAS or IntelMKL\nRUN apt-get update \\\n && apt-get install libopenblas-dev libatlas-base-dev -y\n#  see https://ahmedibrahimvt.wordpress.com/2017/02/19/fatal-error-hdf5-h-no-such-file-or-directory/\nRUN apt-get update \\\n && apt-get install libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11 hdf5-helpers -y\n#  this stands for export ...\n#  /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_hl.so\n#  /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_hl.so\nENV CPATH=\"/usr/include/hdf5/serial/\"\nRUN cd /usr/lib/x86_64-linux-gnu/hdf5/serial \\\n && sudo ln -s libhdf5_hl.so /usr/lib/libhdf5_hl.so \\\n && sudo ln -s libhdf5.so /usr/lib/libhdf5.so \\\n && sudo ln -s libhdf5_hl.so /usr/local/lib/libhdf5_hl.so \\\n && sudo ln -s libhdf5.so /usr/local/lib/libhdf5.so \\\n && sudo ldconfig\nWORKDIR /root/\n#  get OpenPose and patch caffe makefiles\nRUN git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git\nCOPY caffe/Makefile.config openpose/3rdparty/caffe/\nCOPY caffe/Makefile openpose/3rdparty/caffe/\n# COPY ubuntu/install_caffe_and_openpose_if_cuda8.sh openpose/ubuntu/\n#  move me above!\nRUN sudo apt-get install -y lsb-release\n#  install openpose and caffe\nRUN cd openpose \\\n && bash ./ubuntu/install_caffe_and_openpose_if_cuda8.sh\n","injectedSmells":[],"originalDockerfileHash":"b8988d8409cf43892f9f0e1912790a1a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   CMU OpenPose\n#   OpenPose: A Real-Time Multi-Person Keypoint Detection And Multi-Threading C++ Library\n#\n#   @see https://github.com/CMU-Perceptual-Computing-Lab/openpose\n#\n#   Copyright (c) 2017 Loreto Parisi - https://github.com/loretoparisi/docker\n#\nFROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nMAINTAINER Loreto Parisi <loretoparisi@gmail.com>\nRUN apt-get update \\\n && apt-get install git curl wget unzip ffmpeg build-essential cmake git pkg-config libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev python3-numpy python3-pip -y\nRUN mkdir OpenCV \\\n && cd OpenCV\nRUN apt-get update \\\n && apt-get install build-essential checkinstall cmake pkg-config yasm libtiff5-dev libjpeg-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev python-dev python-numpy python-pip libtbb-dev libeigen3-dev libqt4-dev libgtk2.0-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils libgtk2.0-dev unzip libhdf5-dev wget sudo -y\n#   OpenCV contrib (needed for OpenPose)\nRUN git clone https://github.com/opencv/opencv_contrib.git\n#   install OpenCV\nRUN cd /opt \\\n && wget https://github.com/daveselinger/opencv/archive/3.1.0-with-cuda8.zip -O opencv-3.1.0.zip -nv \\\n && unzip opencv-3.1.0.zip \\\n && mv opencv-3.1.0-with-cuda8 opencv-3.1.0 \\\n && cd opencv-3.1.0 \\\n && rm -rf build \\\n && mkdir build \\\n && cd build \\\n && cmake -D CUDA_ARCH_BIN=3.2 -D CUDA_ARCH_PTX=3.2 -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D BUILD_TIFF=ON -D WITH_QT=ON -D ENABLE_PRECOMPILED_HEADERS=OFF -D WITH_OPENGL=ON .. -D OPENCV_EXTRA_MODULES_PATH=opencv_contrib/modules .. \\\n && make -j4 \\\n && make install \\\n && echo \"/usr/local/lib\" | sudo tee -a /etc/ld.so.conf.d/opencv.conf \\\n && ldconfig\nRUN cp /opt/opencv-3.1.0/build/lib/cv2.so /usr/lib/python2.7/dist-packages/cv2.so\n#   install ATLAS\n#   optionally need OpenBLAS or IntelMKL\nRUN apt-get update \\\n && apt-get install libopenblas-dev libatlas-base-dev -y\n#   see https://ahmedibrahimvt.wordpress.com/2017/02/19/fatal-error-hdf5-h-no-such-file-or-directory/\nRUN apt-get update \\\n && apt-get install libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11 hdf5-helpers -y\n#   this stands for export ...\n#   /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_hl.so\n#   /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_hl.so\nENV CPATH=\"/usr/include/hdf5/serial/\"\nRUN cd /usr/lib/x86_64-linux-gnu/hdf5/serial \\\n && sudo ln -s libhdf5_hl.so /usr/lib/libhdf5_hl.so \\\n && sudo ln -s libhdf5.so /usr/lib/libhdf5.so \\\n && sudo ln -s libhdf5_hl.so /usr/local/lib/libhdf5_hl.so \\\n && sudo ln -s libhdf5.so /usr/local/lib/libhdf5.so \\\n && sudo ldconfig\nWORKDIR /root/\n#   get OpenPose and patch caffe makefiles\nRUN git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git\nCOPY caffe/Makefile.config openpose/3rdparty/caffe/\nCOPY caffe/Makefile openpose/3rdparty/caffe/\n#  COPY ubuntu/install_caffe_and_openpose_if_cuda8.sh openpose/ubuntu/\n#   move me above!\nRUN sudo apt-get install -y lsb-release\n#   install openpose and caffe\nRUN cd openpose \\\n && bash ./ubuntu/install_caffe_and_openpose_if_cuda8.sh\n","originalDockerfileUglifiedHash":"0f0a7db9c2a572d3e5f3a19bb32c55d7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/998d9480c1f03bc1a663b0f02eba8a8eb9895f33.dockerfile"}