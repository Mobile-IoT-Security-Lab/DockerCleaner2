{"seed":153003880,"processedDockerfileHash":"90d9a74a1fc944145525d37dc1a67cf8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM continuumio/anaconda:4.1.1\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN conda install -f numpy\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential automake autoconf libxmu-dev g++ gcc libpthread-stubs0-dev libtool libboost-program-options-dev libboost-python-dev zlib1g-dev libc6 libgcc1 libstdc++6 libblas-dev liblapack-dev git telnet procps memcached libmemcached-dev mysql-client-5.5 mysql-common libmysqlclient-dev unzip -y -q\n#   opne issues mean we can't use latest xgboost with the sparse matrices we sometime create in python pipelines\n#  https://github.com/dmlc/xgboost/issues/1238\n#  https://github.com/dmlc/xgboost/issues/1583\nRUN pip install xgboost==0.4a30\nRUN cd /tmp/ \\\n && TF_WHL_FILE=tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl \\\n && wget https://storage.googleapis.com/tensorflow/linux/cpu/${TF_WHL_FILE} \\\n && pip install ${TF_WHL_FILE} \\\n && rm ${TF_WHL_FILE}\n#  RUN cd /usr/local/src && mkdir xgboost && cd xgboost && \\\n#      git clone https://github.com/dmlc/xgboost.git && cd xgboost && \\\n#      git checkout tags/v0.40 && \\\n#      ./build.sh && \\\n#      cd python-package  && python setup.py install && \\\n#      cp -R /usr/local/src/xgboost/xgboost/wrapper/ /opt/conda/lib/python2.7/site-packages/xgboost-0.4-py2.7.egg/xgboost\n#   Install and make vw (Vowpal Wabbit)\nRUN cd /usr/local/src ; git clone https://github.com/JohnLangford/vowpal_wabbit.git ; cd vowpal_wabbit ; git checkout 8.1 ; ./autogen.sh ; ./configure ; make ; make test ; make install\nRUN cd /usr/local/src ; git clone https://github.com/seldonio/wabbit_wappa.git ; cd wabbit_wappa ; python setup.py install\n#   perf\nRUN cd /usr/local/src ; wget http://osmot.cs.cornell.edu/kddcup/perf/perf.src.tar.gz ; tar xvf perf.src.tar.gz ; rm perf.src.tar.gz ; mv perf.src perf ; cd perf ; make -B perf ; make install\nRUN pip install kazoo==2.9.0 filechunkio==1.8 Flask==2.2.3 gunicorn==20.1.0 pylibmc==1.6.3 gensim==4.3.1 annoy==1.17.2 smart_open==6.3.0\n#   keras\nRUN cd /usr/local/src \\\n && mkdir keras \\\n && cd keras \\\n && git clone https://github.com/fchollet/keras.git \\\n && cd keras \\\n && git checkout tags/0.2.0 \\\n && python setup.py install\n#   bayes_opt\nRUN cd /ur/local/src ; git clone https://github.com/fmfn/BayesianOptimization ; cd BayesianOptimization ; python setup.py install\n#   ensure latest sklearn\nRUN pip install sklearn==0.0.post4 --upgrade\n#   ensure latest pandas\nRUN pip install pandas==2.0.0 --upgrade\n#   seldon shell requisites\nRUN pip install cmd2==2.4.3 MySQL-python==1.2.5\n#   for ngram prediction\nRUN pip install DAWG==0.8.0\nRUN pip install -e git+git://github.com/SeldonIO/wabbit_wappa#egg=wabbit-wappa-3.0.2\nRUN pip install -e git+git://github.com/fmfn/BayesianOptimization#egg=bayes_opt\n#  ##RUN pip install seldon==1.5.1\nARG SELDON_PYTHON_PACKAGE_VERSION\nRUN echo \"using SELDON_PYTHON_PACKAGE_VERSION[${SELDON_PYTHON_PACKAGE_VERSION}]\"\nCOPY seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz /tmp/\nRUN mkdir -p /tmp/install \\\n && cd /tmp/install \\\n && mv /tmp/seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz . \\\n && tar xfz seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz \\\n && cd seldon-${SELDON_PYTHON_PACKAGE_VERSION} \\\n && pip install python-daemon==3.0.1 \\\n && python setup.py install \\\n && rm -rf /tmp/install\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\"\nENV SELDON_HOME=\"/home/seldon\"\nCOPY ./scripts $SELDON_HOME/scripts\n#   install proto buf\nRUN mkdir -p /tmp/protoc \\\n && curl -L https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip > /tmp/protoc/protoc.zip \\\n && cd /tmp/protoc \\\n && unzip protoc.zip \\\n && cp /tmp/protoc/bin/protoc /usr/local/bin \\\n && chmod go+rx /usr/local/bin/protoc \\\n && cd /tmp \\\n && rm -r /tmp/protoc\nENV GRPC_PYTHON_VERSION=\"1.0.0\"\nRUN pip install grpcio==${GRPC_PYTHON_VERSION} grpcio-tools==${GRPC_PYTHON_VERSION}\n#   Define default command.\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM continuumio/anaconda:4.1.1\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN conda install -f numpy\nRUN apt-get update \\\n && apt-get install build-essential automake autoconf libxmu-dev g++ gcc libpthread-stubs0-dev libtool libboost-program-options-dev libboost-python-dev zlib1g-dev libc6 libgcc1 libstdc++6 libblas-dev liblapack-dev git telnet procps memcached libmemcached-dev mysql-client-5.5 mysql-common libmysqlclient-dev unzip -y -q\n#  opne issues mean we can't use latest xgboost with the sparse matrices we sometime create in python pipelines\n# https://github.com/dmlc/xgboost/issues/1238\n# https://github.com/dmlc/xgboost/issues/1583\nRUN pip install xgboost==0.4a30\nRUN cd /tmp/ \\\n && TF_WHL_FILE=tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl \\\n && wget https://storage.googleapis.com/tensorflow/linux/cpu/${TF_WHL_FILE} \\\n && pip install ${TF_WHL_FILE} \\\n && rm ${TF_WHL_FILE}\n# RUN cd /usr/local/src && mkdir xgboost && cd xgboost && \\\n#     git clone https://github.com/dmlc/xgboost.git && cd xgboost && \\\n#     git checkout tags/v0.40 && \\\n#     ./build.sh && \\\n#     cd python-package  && python setup.py install && \\\n#     cp -R /usr/local/src/xgboost/xgboost/wrapper/ /opt/conda/lib/python2.7/site-packages/xgboost-0.4-py2.7.egg/xgboost\n#  Install and make vw (Vowpal Wabbit)\nRUN cd /usr/local/src ; git clone https://github.com/JohnLangford/vowpal_wabbit.git ; cd vowpal_wabbit ; git checkout 8.1 ; ./autogen.sh ; ./configure ; make ; make test ; make install\nRUN cd /usr/local/src ; git clone https://github.com/seldonio/wabbit_wappa.git ; cd wabbit_wappa ; python setup.py install\n#  perf\nRUN cd /usr/local/src ; wget http://osmot.cs.cornell.edu/kddcup/perf/perf.src.tar.gz ; tar xvf perf.src.tar.gz ; rm perf.src.tar.gz ; mv perf.src perf ; cd perf ; make -B perf ; make install\nRUN pip install kazoo filechunkio Flask gunicorn pylibmc gensim annoy smart_open\n#  keras\nRUN cd /usr/local/src \\\n && mkdir keras \\\n && cd keras \\\n && git clone https://github.com/fchollet/keras.git \\\n && cd keras \\\n && git checkout tags/0.2.0 \\\n && python setup.py install\n#  bayes_opt\nRUN cd /ur/local/src ; git clone https://github.com/fmfn/BayesianOptimization ; cd BayesianOptimization ; python setup.py install\n#  ensure latest sklearn\nRUN pip install sklearn --upgrade\n#  ensure latest pandas\nRUN pip install pandas --upgrade\n#  seldon shell requisites\nRUN pip install cmd2 MySQL-python\n#  for ngram prediction\nRUN pip install DAWG\nRUN pip install -e git+git://github.com/SeldonIO/wabbit_wappa#egg=wabbit-wappa-3.0.2\nRUN pip install -e git+git://github.com/fmfn/BayesianOptimization#egg=bayes_opt\n# ##RUN pip install seldon==1.5.1\nARG SELDON_PYTHON_PACKAGE_VERSION\nRUN echo \"using SELDON_PYTHON_PACKAGE_VERSION[${SELDON_PYTHON_PACKAGE_VERSION}]\"\nCOPY seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz /tmp/\nRUN mkdir -p /tmp/install \\\n && cd /tmp/install \\\n && mv /tmp/seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz . \\\n && tar xfz seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz \\\n && cd seldon-${SELDON_PYTHON_PACKAGE_VERSION} \\\n && pip install python-daemon \\\n && python setup.py install \\\n && rm -rf /tmp/install\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\"\nENV SELDON_HOME=\"/home/seldon\"\nADD ./scripts $SELDON_HOME/scripts\n#  install proto buf\nRUN mkdir -p /tmp/protoc \\\n && curl -L https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip > /tmp/protoc/protoc.zip \\\n && cd /tmp/protoc \\\n && unzip protoc.zip \\\n && cp /tmp/protoc/bin/protoc /usr/local/bin \\\n && chmod go+rx /usr/local/bin/protoc \\\n && cd /tmp \\\n && rm -r /tmp/protoc\nENV GRPC_PYTHON_VERSION=\"1.0.0\"\nRUN pip install grpcio==${GRPC_PYTHON_VERSION} grpcio-tools==${GRPC_PYTHON_VERSION}\n#  Define default command.\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"d2fb54fc8acc84d1952e6c1f091ea768","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM continuumio/anaconda:4.1.1\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN conda install -f numpy\nRUN apt-get update \\\n && apt-get install build-essential automake autoconf libxmu-dev g++ gcc libpthread-stubs0-dev libtool libboost-program-options-dev libboost-python-dev zlib1g-dev libc6 libgcc1 libstdc++6 libblas-dev liblapack-dev git telnet procps memcached libmemcached-dev mysql-client-5.5 mysql-common libmysqlclient-dev unzip -y -q\n#   opne issues mean we can't use latest xgboost with the sparse matrices we sometime create in python pipelines\n#  https://github.com/dmlc/xgboost/issues/1238\n#  https://github.com/dmlc/xgboost/issues/1583\nRUN pip install xgboost==0.4a30\nRUN cd /tmp/ \\\n && TF_WHL_FILE=tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl \\\n && wget https://storage.googleapis.com/tensorflow/linux/cpu/${TF_WHL_FILE} \\\n && pip install ${TF_WHL_FILE} \\\n && rm ${TF_WHL_FILE}\n#  RUN cd /usr/local/src && mkdir xgboost && cd xgboost && \\\n#      git clone https://github.com/dmlc/xgboost.git && cd xgboost && \\\n#      git checkout tags/v0.40 && \\\n#      ./build.sh && \\\n#      cd python-package  && python setup.py install && \\\n#      cp -R /usr/local/src/xgboost/xgboost/wrapper/ /opt/conda/lib/python2.7/site-packages/xgboost-0.4-py2.7.egg/xgboost\n#   Install and make vw (Vowpal Wabbit)\nRUN cd /usr/local/src ; git clone https://github.com/JohnLangford/vowpal_wabbit.git ; cd vowpal_wabbit ; git checkout 8.1 ; ./autogen.sh ; ./configure ; make ; make test ; make install\nRUN cd /usr/local/src ; git clone https://github.com/seldonio/wabbit_wappa.git ; cd wabbit_wappa ; python setup.py install\n#   perf\nRUN cd /usr/local/src ; wget http://osmot.cs.cornell.edu/kddcup/perf/perf.src.tar.gz ; tar xvf perf.src.tar.gz ; rm perf.src.tar.gz ; mv perf.src perf ; cd perf ; make -B perf ; make install\nRUN pip install kazoo filechunkio Flask gunicorn pylibmc gensim annoy smart_open\n#   keras\nRUN cd /usr/local/src \\\n && mkdir keras \\\n && cd keras \\\n && git clone https://github.com/fchollet/keras.git \\\n && cd keras \\\n && git checkout tags/0.2.0 \\\n && python setup.py install\n#   bayes_opt\nRUN cd /ur/local/src ; git clone https://github.com/fmfn/BayesianOptimization ; cd BayesianOptimization ; python setup.py install\n#   ensure latest sklearn\nRUN pip install sklearn --upgrade\n#   ensure latest pandas\nRUN pip install pandas --upgrade\n#   seldon shell requisites\nRUN pip install cmd2 MySQL-python\n#   for ngram prediction\nRUN pip install DAWG\nRUN pip install -e git+git://github.com/SeldonIO/wabbit_wappa#egg=wabbit-wappa-3.0.2\nRUN pip install -e git+git://github.com/fmfn/BayesianOptimization#egg=bayes_opt\n#  ##RUN pip install seldon==1.5.1\nARG SELDON_PYTHON_PACKAGE_VERSION\nRUN echo \"using SELDON_PYTHON_PACKAGE_VERSION[${SELDON_PYTHON_PACKAGE_VERSION}]\"\nCOPY seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz /tmp/\nRUN mkdir -p /tmp/install \\\n && cd /tmp/install \\\n && mv /tmp/seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz . \\\n && tar xfz seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz \\\n && cd seldon-${SELDON_PYTHON_PACKAGE_VERSION} \\\n && pip install python-daemon \\\n && python setup.py install \\\n && rm -rf /tmp/install\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\"\nENV SELDON_HOME=\"/home/seldon\"\nADD ./scripts $SELDON_HOME/scripts\n#   install proto buf\nRUN mkdir -p /tmp/protoc \\\n && curl -L https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip > /tmp/protoc/protoc.zip \\\n && cd /tmp/protoc \\\n && unzip protoc.zip \\\n && cp /tmp/protoc/bin/protoc /usr/local/bin \\\n && chmod go+rx /usr/local/bin/protoc \\\n && cd /tmp \\\n && rm -r /tmp/protoc\nENV GRPC_PYTHON_VERSION=\"1.0.0\"\nRUN pip install grpcio==${GRPC_PYTHON_VERSION} grpcio-tools==${GRPC_PYTHON_VERSION}\n#   Define default command.\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"3411ca74f67f459fe4a206a8dc334d05","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/06a04369f8de12c58d2f61b116cefe2e14f17a16.dockerfile"}