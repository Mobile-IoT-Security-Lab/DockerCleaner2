{"seed":4076365969,"processedDockerfileHash":"004e15dab7da48d1b1089b1f4a63f457","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.7\nRUN apk add bash=4.4.19-r1 supervisor=3.3.3-r1 curl=7.61.1-r3 --no-cache\n#   Install nginx\nENV NGINX_VERSION=\"1.17.0\"\n#   Add PHP public keys \nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /etc/apk/keys/php-alpine.rsa.pub https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub\nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && CONFIG=\" --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module --add-module=/usr/src/ngx_http_redis-0.3.9 --add-module=/usr/src/ngx_devel_kit-0.3.0 --add-module=/usr/src/set-misc-nginx-module-0.32 --add-module=/usr/src/ngx_http_substitutions_filter_module-0.6.4 \" \\\n && addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && apk add gcc=6.4.0-r5 libc-dev=0.7.1-r0 make=4.2.1-r0 openssl-dev=1.0.2t-r0 pcre-dev=8.41-r1 zlib-dev=1.2.11-r1 linux-headers=4.4.6-r2 curl=7.61.1-r3 gnupg1=1.4.23-r0 libxslt-dev=1.1.31-r2 gd-dev=2.2.5-r3 geoip-dev=1.6.11-r0 --no-cache --virtual .build-deps \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && curl -fSL https://people.freebsd.org/~osa/ngx_http_redis-0.3.9.tar.gz -o http-redis.tar.gz \\\n && curl -fSL https://github.com/openresty/set-misc-nginx-module/archive/v0.32.tar.gz -o set-misc.tar.gz \\\n && curl -fSL https://github.com/simplresty/ngx_devel_kit/archive/v0.3.0.tar.gz -o ngx_devel_kit.tar.gz \\\n && curl -fSL https://github.com/yaoweibin/ngx_http_substitutions_filter_module/archive/v0.6.4.tar.gz -o ngx_http_substitutions_filter_module.tar.gz \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && tar -zxC /usr/src -f http-redis.tar.gz \\\n && rm http-redis.tar.gz \\\n && tar -zxC /usr/src -f set-misc.tar.gz \\\n && rm set-misc.tar.gz \\\n && tar -zxC /usr/src -f ngx_http_substitutions_filter_module.tar.gz \\\n && rm ngx_http_substitutions_filter_module.tar.gz \\\n && tar -zxC /usr/src -f ngx_devel_kit.tar.gz \\\n && rm ngx_devel_kit.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n && apk add gettext=0.19.8.1-r1 --no-cache --virtual .gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add $runDeps --no-cache --virtual .nginx-rundeps \\\n && apk del .build-deps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && apk add tzdata=2019c-r0 --no-cache \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#   Nginx temp upload dir\nRUN mkdir -p /var/nginx-uploads \\\n && chown nobody:nobody /var/nginx-uploads\nRUN mkdir -p /var/cache/nginx/client_temp \\\n && mkdir -p /var/cache/nginx/proxy_temp \\\n && mkdir -p /var/cache/nginx/fastcgi_temp \\\n && mkdir -p /var/cache/nginx/uwsgi_temp \\\n && mkdir -p /var/cache/nginx/scgi_temp\nRUN chown -R nobody:nobody /var/cache/nginx/client_temp \\\n && chown -R nobody:nobody /var/cache/nginx/proxy_temp \\\n && chown -R nobody:nobody /var/cache/nginx/fastcgi_temp \\\n && chown -R nobody:nobody /var/cache/nginx/uwsgi_temp \\\n && chown -R nobody:nobody /var/cache/nginx/scgi_temp\nRUN apk add php5=5.6.40-r0 php5-common=5.6.40-r0 php5-curl=5.6.40-r0 php5-dom=5.6.40-r0 php5-exif=5.6.40-r0 php5-ftp=5.6.40-r0 php5-gd=5.6.40-r0 php5-iconv=5.6.40-r0 php5-mysqli=5.6.40-r0 php5-openssl=5.6.40-r0 php5-pdo=5.6.40-r0 php5-posix=5.6.40-r0 php5-soap=5.6.40-r0 php5-zip=5.6.40-r0 php5-ldap=5.6.40-r0 php5-bcmath=5.6.40-r0 php5-calendar=5.6.40-r0 php5-gettext=5.6.40-r0 php5-json=5.6.40-r0 php5-pcntl=5.6.40-r0 php5-apcu=4.0.11-r1 php5-phar=5.6.40-r0 php5-sockets=5.6.40-r0 php5-wddx=5.6.40-r0 php5-xmlreader=5.6.40-r0 php5-zip=5.6.40-r0 php5-zlib=5.6.40-r0 php5-xsl=5.6.40-r0 php5-opcache=5.6.40-r0 php5-ctype=5.6.40-r0 php5-pdo_mysql=5.6.40-r0 php5-pdo_sqlite=5.6.40-r0 php5-sqlite3=5.6.40-r0 php5-intl=5.6.40-r0 php5-fpm=5.6.40-r0 --no-cache\n#   Memcached\nRUN apk add libmemcached=1.0.18-r2 --no-cache\nRUN apk add ca-certificates=20190108-r0 --no-cache \\\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-php5-memcached/master/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-php5-memcached/releases/download/2.2.0-r0/php5-memcached-2.2.0-r0.apk \\\n && apk add php5-memcached-2.2.0-r0.apk \\\n && rm -f php5-memcached-2.2.0-r0.apk\n#   These only exist in versions prior to 7.2\nRUN apk add php5-mcrypt=5.6.40-r0 php5-xmlrpc=5.6.40-r0 php5-mysqli=5.6.40-r0 php5-mysql=5.6.40-r0 --no-cache\n#   Missing: php5-imagick, php5-redis\n#  Â Imagick\nRUN apk add ca-certificates=20190108-r0 wget=1.20.3-r0 --no-cache \\\n && apk add imagemagick-dev=7.0.7.11-r1 --no-cache \\\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-php5-imagick/master/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-php5-imagick/releases/download/3.4.3-r0/php5-imagick-3.4.3-r0.apk \\\n && apk add php5-imagick-3.4.3-r0.apk \\\n && apk del imagemagick-dev \\\n && rm -f php5-imagick-3.4.3-r0.apk\n#   Imagick support file types\nRUN apk add imagemagick=7.0.7.11-r1 --no-cache\n#   Add php5-redis\nRUN apk add ca-certificates=20190108-r0 wget=1.20.3-r0 --no-cache \\\n && wget --quiet --output-document=/etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-php5-redis/releases/download/3.1.6-r0/php5-redis-3.1.6-r0.apk \\\n && apk add php5-redis-3.1.6-r0.apk \\\n && rm -f php5-redis-3.1.6-r0.apk\nRUN mkdir -p /src \\\n && ln -s /etc/php5 /etc/php \\\n && ln -s /usr/bin/php5 /usr/bin/php \\\n && ln -s /usr/bin/php-fpm5 /usr/bin/php-fpm\n#   Add Composer\nRUN curl https://getcomposer.org/installer -o /tmp/composer-installer \\\n && php /tmp/composer-installer --install-dir=/usr/local/bin --filename=composer \\\n && rm -f /tmp/composer-installer\n#   Atatus\nRUN wget https://s3.amazonaws.com/atatus-artifacts/atatus-php/downloads/atatus-php-1.7.0-x64-musl.tar.gz \\\n && tar -xzvf atatus-php-1.7.0-x64-musl.tar.gz \\\n && cd atatus-php-1.7.0-x64-musl \\\n && ./install.sh\n#   Atatus configurations\nRUN sed -i -e 's#atatus.trace.response_time = 2000#atatus.trace.response_time = 1500#g' /etc/php/conf.d/atatus.ini \\\n && sed -i -e 's#atatus.collector.pidfile = \"/var/run/atatus-php-collector.pid\"#atatus.collector.pidfile = \"/run/atatus-php-collector.pid\"#g' /etc/php/conf.d/atatus.ini \\\n && sed -i -e 's#atatus.collector.connection = \"/tmp/.atatus.sock\"#atatus.collector.connection = \"/run/atatus.sock\"#g' /etc/php/conf.d/atatus.ini\n#   Supervisor\nCOPY conf/supervisord.conf /etc/supervisord.conf\nCOPY conf/supervisor.d /etc/supervisor.d\nRUN mkdir -p /etc/supervisord-enabled \\\n && mkdir -p /etc/supervisord-worker\n#   Scripts\nCOPY scripts/start-web.sh /start-web.sh\nRUN chmod 755 /start-web.sh\nCOPY scripts/start-worker.sh /start-worker.sh\nRUN chmod 755 /start-worker.sh\nCOPY conf/nginx.conf /etc/nginx/nginx.conf\nCOPY conf/nginx-site.conf /etc/nginx/sites-enabled/site.conf\nCOPY dependencies/nginx-custom.php /usr/local/bin/nginx-custom\n#   Test Nginx\nRUN nginx -c /etc/nginx/nginx.conf -t\n#  # PHP\nCOPY conf/php-fpm.conf /etc/php/php-fpm.conf\nCOPY conf/php.ini /etc/php/php.ini\nCOPY conf/php-www.conf /etc/php/php-fpm.d/www.conf\n#   Test PHP-FPM\nRUN /usr/bin/php-fpm --fpm-config /etc/php/php-fpm.conf -t\n#   Cron\nRUN mkdir -p /etc/cron.d\nCMD [\"/start-web.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.7\nRUN apk add --no-cache bash supervisor curl\n#  Install nginx\nENV NGINX_VERSION=\"1.17.0\"\n#  Add PHP public keys \nADD https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub /etc/apk/keys/php-alpine.rsa.pub\nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && CONFIG=\" --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module --add-module=/usr/src/ngx_http_redis-0.3.9 --add-module=/usr/src/ngx_devel_kit-0.3.0 --add-module=/usr/src/set-misc-nginx-module-0.32 --add-module=/usr/src/ngx_http_substitutions_filter_module-0.6.4 \" \\\n && addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg1 libxslt-dev gd-dev geoip-dev \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && curl -fSL https://people.freebsd.org/~osa/ngx_http_redis-0.3.9.tar.gz -o http-redis.tar.gz \\\n && curl -fSL https://github.com/openresty/set-misc-nginx-module/archive/v0.32.tar.gz -o set-misc.tar.gz \\\n && curl -fSL https://github.com/simplresty/ngx_devel_kit/archive/v0.3.0.tar.gz -o ngx_devel_kit.tar.gz \\\n && curl -fSL https://github.com/yaoweibin/ngx_http_substitutions_filter_module/archive/v0.6.4.tar.gz -o ngx_http_substitutions_filter_module.tar.gz \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && tar -zxC /usr/src -f http-redis.tar.gz \\\n && rm http-redis.tar.gz \\\n && tar -zxC /usr/src -f set-misc.tar.gz \\\n && rm set-misc.tar.gz \\\n && tar -zxC /usr/src -f ngx_http_substitutions_filter_module.tar.gz \\\n && rm ngx_http_substitutions_filter_module.tar.gz \\\n && tar -zxC /usr/src -f ngx_devel_kit.tar.gz \\\n && rm ngx_devel_kit.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && apk add --no-cache tzdata \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#  Nginx temp upload dir\nRUN mkdir -p /var/nginx-uploads \\\n && chown nobody:nobody /var/nginx-uploads\nRUN mkdir -p /var/cache/nginx/client_temp \\\n && mkdir -p /var/cache/nginx/proxy_temp \\\n && mkdir -p /var/cache/nginx/fastcgi_temp \\\n && mkdir -p /var/cache/nginx/uwsgi_temp \\\n && mkdir -p /var/cache/nginx/scgi_temp\nRUN chown -R nobody:nobody /var/cache/nginx/client_temp \\\n && chown -R nobody:nobody /var/cache/nginx/proxy_temp \\\n && chown -R nobody:nobody /var/cache/nginx/fastcgi_temp \\\n && chown -R nobody:nobody /var/cache/nginx/uwsgi_temp \\\n && chown -R nobody:nobody /var/cache/nginx/scgi_temp\nRUN apk add --no-cache php5 php5-common php5-curl php5-dom php5-exif php5-ftp php5-gd php5-iconv php5-mysqli php5-openssl php5-pdo php5-posix php5-soap php5-zip php5-ldap php5-bcmath php5-calendar php5-gettext php5-json php5-pcntl php5-apcu php5-phar php5-sockets php5-wddx php5-xmlreader php5-zip php5-zlib php5-xsl php5-opcache php5-ctype php5-pdo_mysql php5-pdo_sqlite php5-sqlite3 php5-intl php5-fpm\n#  Memcached\nRUN apk add --no-cache libmemcached\nRUN apk --no-cache add ca-certificates \\\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-php5-memcached/master/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-php5-memcached/releases/download/2.2.0-r0/php5-memcached-2.2.0-r0.apk \\\n && apk add php5-memcached-2.2.0-r0.apk \\\n && rm -f php5-memcached-2.2.0-r0.apk\n#  These only exist in versions prior to 7.2\nRUN apk add --no-cache php5-mcrypt php5-xmlrpc php5-mysqli php5-mysql\n#  Missing: php5-imagick, php5-redis\n# Â Imagick\nRUN apk --no-cache add ca-certificates wget \\\n && apk add --no-cache imagemagick-dev \\\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-php5-imagick/master/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-php5-imagick/releases/download/3.4.3-r0/php5-imagick-3.4.3-r0.apk \\\n && apk add php5-imagick-3.4.3-r0.apk \\\n && apk del imagemagick-dev \\\n && rm -f php5-imagick-3.4.3-r0.apk\n#  Imagick support file types\nRUN apk add --no-cache imagemagick\n#  Add php5-redis\nRUN apk --no-cache add ca-certificates wget \\\n && wget --quiet --output-document=/etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-php5-redis/releases/download/3.1.6-r0/php5-redis-3.1.6-r0.apk \\\n && apk add php5-redis-3.1.6-r0.apk \\\n && rm -f php5-redis-3.1.6-r0.apk\nRUN mkdir -p /src \\\n && ln -s /etc/php5 /etc/php \\\n && ln -s /usr/bin/php5 /usr/bin/php \\\n && ln -s /usr/bin/php-fpm5 /usr/bin/php-fpm\n#  Add Composer\nRUN curl https://getcomposer.org/installer -o /tmp/composer-installer \\\n && php /tmp/composer-installer --install-dir=/usr/local/bin --filename=composer \\\n && rm -f /tmp/composer-installer\n#  Atatus\nRUN wget https://s3.amazonaws.com/atatus-artifacts/atatus-php/downloads/atatus-php-1.7.0-x64-musl.tar.gz \\\n && tar -xzvf atatus-php-1.7.0-x64-musl.tar.gz \\\n && cd atatus-php-1.7.0-x64-musl \\\n && ./install.sh\n#  Atatus configurations\nRUN sed -i -e 's#atatus.trace.response_time = 2000#atatus.trace.response_time = 1500#g' /etc/php/conf.d/atatus.ini \\\n && sed -i -e 's#atatus.collector.pidfile = \"/var/run/atatus-php-collector.pid\"#atatus.collector.pidfile = \"/run/atatus-php-collector.pid\"#g' /etc/php/conf.d/atatus.ini \\\n && sed -i -e 's#atatus.collector.connection = \"/tmp/.atatus.sock\"#atatus.collector.connection = \"/run/atatus.sock\"#g' /etc/php/conf.d/atatus.ini\n#  Supervisor\nADD conf/supervisord.conf /etc/supervisord.conf\nADD conf/supervisor.d /etc/supervisor.d\nRUN mkdir -p /etc/supervisord-enabled \\\n && mkdir -p /etc/supervisord-worker\n#  Scripts\nADD scripts/start-web.sh /start-web.sh\nRUN chmod 755 /start-web.sh\nADD scripts/start-worker.sh /start-worker.sh\nRUN chmod 755 /start-worker.sh\nADD conf/nginx.conf /etc/nginx/nginx.conf\nADD conf/nginx-site.conf /etc/nginx/sites-enabled/site.conf\nADD dependencies/nginx-custom.php /usr/local/bin/nginx-custom\n#  Test Nginx\nRUN nginx -c /etc/nginx/nginx.conf -t\n# # PHP\nADD conf/php-fpm.conf /etc/php/php-fpm.conf\nADD conf/php.ini /etc/php/php.ini\nADD conf/php-www.conf /etc/php/php-fpm.d/www.conf\n#  Test PHP-FPM\nRUN /usr/bin/php-fpm --fpm-config /etc/php/php-fpm.conf -t\n#  Cron\nRUN mkdir -p /etc/cron.d\nCMD [\"/start-web.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"1fad5a0897586b7d1521b3fff2f86891","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.7\nRUN apk add --no-cache bash supervisor curl\n#   Install nginx\nENV NGINX_VERSION=\"1.17.0\"\n#   Add PHP public keys \nADD https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub /etc/apk/keys/php-alpine.rsa.pub\nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && CONFIG=\" --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module --add-module=/usr/src/ngx_http_redis-0.3.9 --add-module=/usr/src/ngx_devel_kit-0.3.0 --add-module=/usr/src/set-misc-nginx-module-0.32 --add-module=/usr/src/ngx_http_substitutions_filter_module-0.6.4 \" \\\n && addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg1 libxslt-dev gd-dev geoip-dev \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && curl -fSL https://people.freebsd.org/~osa/ngx_http_redis-0.3.9.tar.gz -o http-redis.tar.gz \\\n && curl -fSL https://github.com/openresty/set-misc-nginx-module/archive/v0.32.tar.gz -o set-misc.tar.gz \\\n && curl -fSL https://github.com/simplresty/ngx_devel_kit/archive/v0.3.0.tar.gz -o ngx_devel_kit.tar.gz \\\n && curl -fSL https://github.com/yaoweibin/ngx_http_substitutions_filter_module/archive/v0.6.4.tar.gz -o ngx_http_substitutions_filter_module.tar.gz \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && tar -zxC /usr/src -f http-redis.tar.gz \\\n && rm http-redis.tar.gz \\\n && tar -zxC /usr/src -f set-misc.tar.gz \\\n && rm set-misc.tar.gz \\\n && tar -zxC /usr/src -f ngx_http_substitutions_filter_module.tar.gz \\\n && rm ngx_http_substitutions_filter_module.tar.gz \\\n && tar -zxC /usr/src -f ngx_devel_kit.tar.gz \\\n && rm ngx_devel_kit.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && apk add --no-cache tzdata \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#   Nginx temp upload dir\nRUN mkdir -p /var/nginx-uploads \\\n && chown nobody:nobody /var/nginx-uploads\nRUN mkdir -p /var/cache/nginx/client_temp \\\n && mkdir -p /var/cache/nginx/proxy_temp \\\n && mkdir -p /var/cache/nginx/fastcgi_temp \\\n && mkdir -p /var/cache/nginx/uwsgi_temp \\\n && mkdir -p /var/cache/nginx/scgi_temp\nRUN chown -R nobody:nobody /var/cache/nginx/client_temp \\\n && chown -R nobody:nobody /var/cache/nginx/proxy_temp \\\n && chown -R nobody:nobody /var/cache/nginx/fastcgi_temp \\\n && chown -R nobody:nobody /var/cache/nginx/uwsgi_temp \\\n && chown -R nobody:nobody /var/cache/nginx/scgi_temp\nRUN apk add --no-cache php5 php5-common php5-curl php5-dom php5-exif php5-ftp php5-gd php5-iconv php5-mysqli php5-openssl php5-pdo php5-posix php5-soap php5-zip php5-ldap php5-bcmath php5-calendar php5-gettext php5-json php5-pcntl php5-apcu php5-phar php5-sockets php5-wddx php5-xmlreader php5-zip php5-zlib php5-xsl php5-opcache php5-ctype php5-pdo_mysql php5-pdo_sqlite php5-sqlite3 php5-intl php5-fpm\n#   Memcached\nRUN apk add --no-cache libmemcached\nRUN apk --no-cache add ca-certificates \\\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-php5-memcached/master/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-php5-memcached/releases/download/2.2.0-r0/php5-memcached-2.2.0-r0.apk \\\n && apk add php5-memcached-2.2.0-r0.apk \\\n && rm -f php5-memcached-2.2.0-r0.apk\n#   These only exist in versions prior to 7.2\nRUN apk add --no-cache php5-mcrypt php5-xmlrpc php5-mysqli php5-mysql\n#   Missing: php5-imagick, php5-redis\n#  Â Imagick\nRUN apk --no-cache add ca-certificates wget \\\n && apk add --no-cache imagemagick-dev \\\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-php5-imagick/master/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-php5-imagick/releases/download/3.4.3-r0/php5-imagick-3.4.3-r0.apk \\\n && apk add php5-imagick-3.4.3-r0.apk \\\n && apk del imagemagick-dev \\\n && rm -f php5-imagick-3.4.3-r0.apk\n#   Imagick support file types\nRUN apk add --no-cache imagemagick\n#   Add php5-redis\nRUN apk --no-cache add ca-certificates wget \\\n && wget --quiet --output-document=/etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-php5-redis/releases/download/3.1.6-r0/php5-redis-3.1.6-r0.apk \\\n && apk add php5-redis-3.1.6-r0.apk \\\n && rm -f php5-redis-3.1.6-r0.apk\nRUN mkdir -p /src \\\n && ln -s /etc/php5 /etc/php \\\n && ln -s /usr/bin/php5 /usr/bin/php \\\n && ln -s /usr/bin/php-fpm5 /usr/bin/php-fpm\n#   Add Composer\nRUN curl https://getcomposer.org/installer -o /tmp/composer-installer \\\n && php /tmp/composer-installer --install-dir=/usr/local/bin --filename=composer \\\n && rm -f /tmp/composer-installer\n#   Atatus\nRUN wget https://s3.amazonaws.com/atatus-artifacts/atatus-php/downloads/atatus-php-1.7.0-x64-musl.tar.gz \\\n && tar -xzvf atatus-php-1.7.0-x64-musl.tar.gz \\\n && cd atatus-php-1.7.0-x64-musl \\\n && ./install.sh\n#   Atatus configurations\nRUN sed -i -e 's#atatus.trace.response_time = 2000#atatus.trace.response_time = 1500#g' /etc/php/conf.d/atatus.ini \\\n && sed -i -e 's#atatus.collector.pidfile = \"/var/run/atatus-php-collector.pid\"#atatus.collector.pidfile = \"/run/atatus-php-collector.pid\"#g' /etc/php/conf.d/atatus.ini \\\n && sed -i -e 's#atatus.collector.connection = \"/tmp/.atatus.sock\"#atatus.collector.connection = \"/run/atatus.sock\"#g' /etc/php/conf.d/atatus.ini\n#   Supervisor\nADD conf/supervisord.conf /etc/supervisord.conf\nADD conf/supervisor.d /etc/supervisor.d\nRUN mkdir -p /etc/supervisord-enabled \\\n && mkdir -p /etc/supervisord-worker\n#   Scripts\nADD scripts/start-web.sh /start-web.sh\nRUN chmod 755 /start-web.sh\nADD scripts/start-worker.sh /start-worker.sh\nRUN chmod 755 /start-worker.sh\nADD conf/nginx.conf /etc/nginx/nginx.conf\nADD conf/nginx-site.conf /etc/nginx/sites-enabled/site.conf\nADD dependencies/nginx-custom.php /usr/local/bin/nginx-custom\n#   Test Nginx\nRUN nginx -c /etc/nginx/nginx.conf -t\n#  # PHP\nADD conf/php-fpm.conf /etc/php/php-fpm.conf\nADD conf/php.ini /etc/php/php.ini\nADD conf/php-www.conf /etc/php/php-fpm.d/www.conf\n#   Test PHP-FPM\nRUN /usr/bin/php-fpm --fpm-config /etc/php/php-fpm.conf -t\n#   Cron\nRUN mkdir -p /etc/cron.d\nCMD [\"/start-web.sh\"]\n","originalDockerfileUglifiedHash":"5dded6dc83835085499ec00394550948","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ecb149cd4fb1f2660cab7e77498ab343c817a213.dockerfile"}