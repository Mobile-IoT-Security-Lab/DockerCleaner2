{"seed":3671641578,"processedDockerfileHash":"c7e263c7f386148d8b9781883ede5627","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM openshifttools/oso-centos7-ops-base:latest\n#       ___ ___ _  _ ___ ___    _ _____ ___ ___         \n#      / __| __| \\| | __| _ \\  /_\\_   _| __|   \\        \n#     | (_ | _|| .` | _||   / / _ \\| | | _|| |) |       \n#      \\___|___|_|\\_|___|_|_\\/_/_\\_\\_|_|___|___/_ _____ \n#     |   \\ / _ \\  | \\| |/ _ \\_   _| | __|   \\_ _|_   _|\n#     | |) | (_) | | .` | (_) || |   | _|| |) | |  | |  \n#     |___/ \\___/  |_|\\_|\\___/ |_|   |___|___/___| |_|  \n#   \n#   Pause indefinitely if asked to do so.\nARG OO_PAUSE_ON_BUILD\nRUN test \"$OO_PAUSE_ON_BUILD\" = \"true\" \\\n && while sleep 10 ; do true ; done || :\n#   PCP\n#  #################\n#   install pcp-collector and it's dependencies, clean the cache.\nRUN yum-install-check.sh -y pcp pcp-conf pcp-collector xz \\\n && yum clean all\n#   Run in the container as root - avoids PCP_USER mismatches\nRUN sed -i -e 's/PCP_USER=.*$/PCP_USER=root/' -e 's/PCP_GROUP=.*$/PCP_GROUP=root/' /etc/pcp.conf\n#   Disable service advertising - no avahi daemon in the container\n#   (dodges warnings from pmcd attempting to connect during startup)\nRUN . /etc/pcp.conf \\\n && echo \"-A\" >> $PCP_PMCDOPTIONS_PATH\n#   denote this as a container environment, for rc scripts\nENV PCP_CONTAINER_IMAGE=\"pcp-collector\"\nENV NAME=\"pcp-collector\"\nENV IMAGE=\"pcp-collector\"\nENV PATH=\"/usr/share/pcp/lib:/usr/libexec/pcp/bin:$PATH\"\n#   script to watch health of pmcd\nCOPY check-pmcd-status.sh /usr/local/bin/check-pmcd-status.sh\n#  #################\n#   Add google-cloud-sdk repo\nCOPY google-cloud-sdk.repo /etc/yum.repos.d/\n#   Add copr repo for python-hawkular-client rpm\nRUN cd /etc/yum.repos.d \\\n && curl -O https://copr.fedorainfracloud.org/coprs/g/Hawkular/python-hawkular-client/repo/epel-7/group_Hawkular-python-hawkular-client-epel-7.repo\nRUN yum clean metadata \\\n && yum-install-check.sh -y python2-pip pcp pcp-conf pcp-testsuite python-requests pyOpenSSL python-openshift-tools python-openshift-tools-monitoring-pcp python-openshift-tools-monitoring-docker python-openshift-tools-monitoring-zagg python-openshift-tools-monitoring-openshift python-openshift-tools-ansible python-openshift-tools-web openshift-tools-scripts-cloud-aws openshift-tools-scripts-cloud-gcp openshift-tools-scripts-monitoring-pcp openshift-tools-scripts-monitoring-docker openshift-tools-scripts-monitoring-aws openshift-tools-scripts-monitoring-gcp openshift-tools-scripts-monitoring-openshift openshift-tools-scripts-monitoring-autoheal pcp-manager pcp-webapi python-pcp python-httplib2 python2-pyasn1 python2-pyasn1-modules python2-rsa python-configobj python2-psutil pylint tito python-devel libyaml-devel oso-simplesamlphp python2-ruamel-yaml rpm-sign createrepo python2-boto3 python-lxml rkhunter python-hawkular-client python-docker \\\n && yum clean all\nCOPY urllib3-connectionpool-patch /root/\nRUN yum-install-check.sh -y patch \\\n && yum clean all \\\n && cd /usr/lib/python2.7/site-packages/ \\\n && patch -p1 < /root/urllib3-connectionpool-patch\n#   make mount points for security update count check, and make a circular symlink because yum is dumb about its root\nRUN mkdir -p /host /var/local/hostpkg/etc/rhsm/ca /var/local/hostpkg/etc/rpm /var/local/hostpkg/etc/pki/entitlement /var/local/hostpkg/etc/pki/rpm-gpg /var/local/hostpkg/var/local /var/local/hostpkg/var/cache/yum /var/local/hostpkg/var/lib/yum \\\n && ln -s /var/local/hostpkg /var/local/hostpkg/var/local/hostpkg\n#   Make mount points for rkhunter files, and configure rkhunter to work with this structure\nRUN mkdir -p /var/local/rkhunter_chroot /var/local/rkhunter_tmp /var/local/rkhunter_tmp/rkhunter /var/local/rkhunter_tmp/rkhunter/bin /var/local/rkhunter_tmp/rkhunter/db /var/local/rkhunter_tmp/rkhunter/etc /var/local/rkhunter_tmp/rkhunter/scripts \\\n && sed -i 's/\\/var\\/log\\/rkhunter\\/rkhunter.log/\\/var\\/local\\/rkhunter_tmp\\/rkhunter\\/rkhunter.log/' /etc/logrotate.d/rkhunter \\\n && sed -r -e 's%^(SCRIPTDIR)=.*%\\1=/tmp/rkhunter/scripts%; s%^(LOGFILE)=.*%\\1=/tmp/rkhunter/rkhunter.log%' /etc/rkhunter.conf > /var/local/rkhunter_tmp/rkhunter/etc/rkhunter.conf\n#   Ansible startup configuration playbook\nCOPY root /root\nRUN cat bash_aliases >> /root/.bashrc\n#   FIXME: These are vendor libs that need to be packaged and installed via RPM.\nCOPY vendor/prometheus_client /usr/lib/python2.7/site-packages/prometheus_client/\n#   Create ops-runner.log file with proper permissions\nRUN touch /var/log/ops-runner.log \\\n && chmod 664 /var/log/ops-runner.log\n#   Setup the AWS credentials file so that we can populate it on startup.\nRUN mkdir -p /root/.aws \\\n && touch /root/.aws/credentials \\\n && chmod g+rw /root/.aws/credentials\n#   Add container-build-env-fingerprint\nCOPY container-build-env-fingerprint.output /etc/oso-container-build-env-fingerprint\n#   Add the start script and tell the container to run it by default\nCOPY start.sh /usr/local/bin/\nCMD /usr/local/bin/start.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openshifttools/oso-centos7-ops-base:latest\n#      ___ ___ _  _ ___ ___    _ _____ ___ ___         \n#     / __| __| \\| | __| _ \\  /_\\_   _| __|   \\        \n#    | (_ | _|| .` | _||   / / _ \\| | | _|| |) |       \n#     \\___|___|_|\\_|___|_|_\\/_/_\\_\\_|_|___|___/_ _____ \n#    |   \\ / _ \\  | \\| |/ _ \\_   _| | __|   \\_ _|_   _|\n#    | |) | (_) | | .` | (_) || |   | _|| |) | |  | |  \n#    |___/ \\___/  |_|\\_|\\___/ |_|   |___|___/___| |_|  \n#  \n#  Pause indefinitely if asked to do so.\nARG OO_PAUSE_ON_BUILD\nRUN test \"$OO_PAUSE_ON_BUILD\" = \"true\" \\\n && while sleep 10 ; do true ; done || :\n#  PCP\n# #################\n#  install pcp-collector and it's dependencies, clean the cache.\nRUN yum-install-check.sh -y pcp pcp-conf pcp-collector xz \\\n && yum clean all\n#  Run in the container as root - avoids PCP_USER mismatches\nRUN sed -i -e 's/PCP_USER=.*$/PCP_USER=root/' -e 's/PCP_GROUP=.*$/PCP_GROUP=root/' /etc/pcp.conf\n#  Disable service advertising - no avahi daemon in the container\n#  (dodges warnings from pmcd attempting to connect during startup)\nRUN . /etc/pcp.conf \\\n && echo \"-A\" >> $PCP_PMCDOPTIONS_PATH\n#  denote this as a container environment, for rc scripts\nENV PCP_CONTAINER_IMAGE=\"pcp-collector\"\nENV NAME=\"pcp-collector\"\nENV IMAGE=\"pcp-collector\"\nENV PATH=\"/usr/share/pcp/lib:/usr/libexec/pcp/bin:$PATH\"\n#  script to watch health of pmcd\nCOPY check-pmcd-status.sh /usr/local/bin/check-pmcd-status.sh\n# #################\n#  Add google-cloud-sdk repo\nCOPY google-cloud-sdk.repo /etc/yum.repos.d/\n#  Add copr repo for python-hawkular-client rpm\nRUN cd /etc/yum.repos.d \\\n && curl -O https://copr.fedorainfracloud.org/coprs/g/Hawkular/python-hawkular-client/repo/epel-7/group_Hawkular-python-hawkular-client-epel-7.repo\nRUN yum clean metadata \\\n && yum-install-check.sh -y python2-pip pcp pcp-conf pcp-testsuite python-requests pyOpenSSL python-openshift-tools python-openshift-tools-monitoring-pcp python-openshift-tools-monitoring-docker python-openshift-tools-monitoring-zagg python-openshift-tools-monitoring-openshift python-openshift-tools-ansible python-openshift-tools-web openshift-tools-scripts-cloud-aws openshift-tools-scripts-cloud-gcp openshift-tools-scripts-monitoring-pcp openshift-tools-scripts-monitoring-docker openshift-tools-scripts-monitoring-aws openshift-tools-scripts-monitoring-gcp openshift-tools-scripts-monitoring-openshift openshift-tools-scripts-monitoring-autoheal pcp-manager pcp-webapi python-pcp python-httplib2 python2-pyasn1 python2-pyasn1-modules python2-rsa python-configobj python2-psutil pylint tito python-devel libyaml-devel oso-simplesamlphp python2-ruamel-yaml rpm-sign createrepo python2-boto3 python-lxml rkhunter python-hawkular-client python-docker \\\n && yum clean all\nCOPY urllib3-connectionpool-patch /root/\nRUN yum-install-check.sh -y patch \\\n && yum clean all \\\n && cd /usr/lib/python2.7/site-packages/ \\\n && patch -p1 < /root/urllib3-connectionpool-patch\n#  make mount points for security update count check, and make a circular symlink because yum is dumb about its root\nRUN mkdir -p /host /var/local/hostpkg/etc/rhsm/ca /var/local/hostpkg/etc/rpm /var/local/hostpkg/etc/pki/entitlement /var/local/hostpkg/etc/pki/rpm-gpg /var/local/hostpkg/var/local /var/local/hostpkg/var/cache/yum /var/local/hostpkg/var/lib/yum \\\n && ln -s /var/local/hostpkg /var/local/hostpkg/var/local/hostpkg\n#  Make mount points for rkhunter files, and configure rkhunter to work with this structure\nRUN mkdir -p /var/local/rkhunter_chroot /var/local/rkhunter_tmp /var/local/rkhunter_tmp/rkhunter /var/local/rkhunter_tmp/rkhunter/bin /var/local/rkhunter_tmp/rkhunter/db /var/local/rkhunter_tmp/rkhunter/etc /var/local/rkhunter_tmp/rkhunter/scripts \\\n && sed -i 's/\\/var\\/log\\/rkhunter\\/rkhunter.log/\\/var\\/local\\/rkhunter_tmp\\/rkhunter\\/rkhunter.log/' /etc/logrotate.d/rkhunter \\\n && sed -r -e 's%^(SCRIPTDIR)=.*%\\1=/tmp/rkhunter/scripts%; s%^(LOGFILE)=.*%\\1=/tmp/rkhunter/rkhunter.log%' /etc/rkhunter.conf > /var/local/rkhunter_tmp/rkhunter/etc/rkhunter.conf\n#  Ansible startup configuration playbook\nCOPY root /root\nRUN cat bash_aliases >> /root/.bashrc\n#  FIXME: These are vendor libs that need to be packaged and installed via RPM.\nCOPY vendor/prometheus_client /usr/lib/python2.7/site-packages/prometheus_client/\n#  Create ops-runner.log file with proper permissions\nRUN touch /var/log/ops-runner.log \\\n && chmod 664 /var/log/ops-runner.log\n#  Setup the AWS credentials file so that we can populate it on startup.\nRUN mkdir -p /root/.aws \\\n && touch /root/.aws/credentials \\\n && chmod g+rw /root/.aws/credentials\n#  Add container-build-env-fingerprint\nCOPY container-build-env-fingerprint.output /etc/oso-container-build-env-fingerprint\n#  Add the start script and tell the container to run it by default\nCOPY start.sh /usr/local/bin/\nCMD /usr/local/bin/start.sh\n","injectedSmells":[],"originalDockerfileHash":"d9d832e213b21db981646d5edad8cdea","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openshifttools/oso-centos7-ops-base:latest\n#       ___ ___ _  _ ___ ___    _ _____ ___ ___         \n#      / __| __| \\| | __| _ \\  /_\\_   _| __|   \\        \n#     | (_ | _|| .` | _||   / / _ \\| | | _|| |) |       \n#      \\___|___|_|\\_|___|_|_\\/_/_\\_\\_|_|___|___/_ _____ \n#     |   \\ / _ \\  | \\| |/ _ \\_   _| | __|   \\_ _|_   _|\n#     | |) | (_) | | .` | (_) || |   | _|| |) | |  | |  \n#     |___/ \\___/  |_|\\_|\\___/ |_|   |___|___/___| |_|  \n#   \n#   Pause indefinitely if asked to do so.\nARG OO_PAUSE_ON_BUILD\nRUN test \"$OO_PAUSE_ON_BUILD\" = \"true\" \\\n && while sleep 10 ; do true ; done || :\n#   PCP\n#  #################\n#   install pcp-collector and it's dependencies, clean the cache.\nRUN yum-install-check.sh -y pcp pcp-conf pcp-collector xz \\\n && yum clean all\n#   Run in the container as root - avoids PCP_USER mismatches\nRUN sed -i -e 's/PCP_USER=.*$/PCP_USER=root/' -e 's/PCP_GROUP=.*$/PCP_GROUP=root/' /etc/pcp.conf\n#   Disable service advertising - no avahi daemon in the container\n#   (dodges warnings from pmcd attempting to connect during startup)\nRUN . /etc/pcp.conf \\\n && echo \"-A\" >> $PCP_PMCDOPTIONS_PATH\n#   denote this as a container environment, for rc scripts\nENV PCP_CONTAINER_IMAGE=\"pcp-collector\"\nENV NAME=\"pcp-collector\"\nENV IMAGE=\"pcp-collector\"\nENV PATH=\"/usr/share/pcp/lib:/usr/libexec/pcp/bin:$PATH\"\n#   script to watch health of pmcd\nCOPY check-pmcd-status.sh /usr/local/bin/check-pmcd-status.sh\n#  #################\n#   Add google-cloud-sdk repo\nCOPY google-cloud-sdk.repo /etc/yum.repos.d/\n#   Add copr repo for python-hawkular-client rpm\nRUN cd /etc/yum.repos.d \\\n && curl -O https://copr.fedorainfracloud.org/coprs/g/Hawkular/python-hawkular-client/repo/epel-7/group_Hawkular-python-hawkular-client-epel-7.repo\nRUN yum clean metadata \\\n && yum-install-check.sh -y python2-pip pcp pcp-conf pcp-testsuite python-requests pyOpenSSL python-openshift-tools python-openshift-tools-monitoring-pcp python-openshift-tools-monitoring-docker python-openshift-tools-monitoring-zagg python-openshift-tools-monitoring-openshift python-openshift-tools-ansible python-openshift-tools-web openshift-tools-scripts-cloud-aws openshift-tools-scripts-cloud-gcp openshift-tools-scripts-monitoring-pcp openshift-tools-scripts-monitoring-docker openshift-tools-scripts-monitoring-aws openshift-tools-scripts-monitoring-gcp openshift-tools-scripts-monitoring-openshift openshift-tools-scripts-monitoring-autoheal pcp-manager pcp-webapi python-pcp python-httplib2 python2-pyasn1 python2-pyasn1-modules python2-rsa python-configobj python2-psutil pylint tito python-devel libyaml-devel oso-simplesamlphp python2-ruamel-yaml rpm-sign createrepo python2-boto3 python-lxml rkhunter python-hawkular-client python-docker \\\n && yum clean all\nCOPY urllib3-connectionpool-patch /root/\nRUN yum-install-check.sh -y patch \\\n && yum clean all \\\n && cd /usr/lib/python2.7/site-packages/ \\\n && patch -p1 < /root/urllib3-connectionpool-patch\n#   make mount points for security update count check, and make a circular symlink because yum is dumb about its root\nRUN mkdir -p /host /var/local/hostpkg/etc/rhsm/ca /var/local/hostpkg/etc/rpm /var/local/hostpkg/etc/pki/entitlement /var/local/hostpkg/etc/pki/rpm-gpg /var/local/hostpkg/var/local /var/local/hostpkg/var/cache/yum /var/local/hostpkg/var/lib/yum \\\n && ln -s /var/local/hostpkg /var/local/hostpkg/var/local/hostpkg\n#   Make mount points for rkhunter files, and configure rkhunter to work with this structure\nRUN mkdir -p /var/local/rkhunter_chroot /var/local/rkhunter_tmp /var/local/rkhunter_tmp/rkhunter /var/local/rkhunter_tmp/rkhunter/bin /var/local/rkhunter_tmp/rkhunter/db /var/local/rkhunter_tmp/rkhunter/etc /var/local/rkhunter_tmp/rkhunter/scripts \\\n && sed -i 's/\\/var\\/log\\/rkhunter\\/rkhunter.log/\\/var\\/local\\/rkhunter_tmp\\/rkhunter\\/rkhunter.log/' /etc/logrotate.d/rkhunter \\\n && sed -r -e 's%^(SCRIPTDIR)=.*%\\1=/tmp/rkhunter/scripts%; s%^(LOGFILE)=.*%\\1=/tmp/rkhunter/rkhunter.log%' /etc/rkhunter.conf > /var/local/rkhunter_tmp/rkhunter/etc/rkhunter.conf\n#   Ansible startup configuration playbook\nCOPY root /root\nRUN cat bash_aliases >> /root/.bashrc\n#   FIXME: These are vendor libs that need to be packaged and installed via RPM.\nCOPY vendor/prometheus_client /usr/lib/python2.7/site-packages/prometheus_client/\n#   Create ops-runner.log file with proper permissions\nRUN touch /var/log/ops-runner.log \\\n && chmod 664 /var/log/ops-runner.log\n#   Setup the AWS credentials file so that we can populate it on startup.\nRUN mkdir -p /root/.aws \\\n && touch /root/.aws/credentials \\\n && chmod g+rw /root/.aws/credentials\n#   Add container-build-env-fingerprint\nCOPY container-build-env-fingerprint.output /etc/oso-container-build-env-fingerprint\n#   Add the start script and tell the container to run it by default\nCOPY start.sh /usr/local/bin/\nCMD /usr/local/bin/start.sh\n","originalDockerfileUglifiedHash":"18c2fc0739bbd65b4f6792224581d2cd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5c1375a53dd63475a2ed896b206d8d133ae5a7b4.dockerfile"}