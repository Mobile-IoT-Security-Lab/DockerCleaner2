{"seed":809238959,"processedDockerfileHash":"0b3491359e76a08eea2706f553a1871b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial\n#   Versioning\nENV PIP_INSTALL_VERSION=\"19.0.2\"\nENV GO_LANG_VERSION=\"1.11.5\"\nENV MAVEN_VERSION=\"3.6.0\"\nENV SBT_VERSION=\"1.1.1\"\nENV GRADLE_VERSION=\"4.10.3\"\nENV RUBY_VERSION=\"2.6.3\"\nENV MIX_VERSION=\"1.0\"\nENV JDK_VERISON=\"8u211\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   programs needed for building\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 curl=7.47.0-1ubuntu2.19 git-core=1:2.7.4-0ubuntu1.10 sudo=1.8.16-0ubuntu1.10 unzip=6.0-20ubuntu1.1 wget=1.17.1-1ubuntu1.5 gnupg2=2.1.11-6ubuntu2.1 software-properties-common=0.96.20.10 -y\n#   nodejs seems to be required for the one of the gems\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 -y\n#   install yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends yarn\n#   install bower\nRUN npm install bower@1.8.14 -g \\\n && echo '{ \"allow_root\": true }' > /root/.bowerrc\n#  install java 8\n#  http://askubuntu.com/questions/521145/how-to-install-oracle-java-on-ubuntu-14-04\nRUN apt-get install --no-install-recommends openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 -y\nRUN JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nENV J2SDKDIR=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nENV J2REDIR=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\"\nENV PATH=\"$PATH:/usr/lib/jvm/java-8-openjdk-amd64/bin:/usr/lib/jvm/java-8-openjdk-amd64/jre/bin\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nRUN java -version\n#   install python and rebar\nRUN apt-get install --no-install-recommends python=2.7.12-1~16.04 rebar=2.6.0-2 -y\n#   install and update python-pip\nRUN apt-get install --no-install-recommends python-pip=8.1.1-2ubuntu0.6 -y \\\n && pip install pip==$PIP_INSTALL_VERSION --upgrade\n#   install maven\nRUN curl -O https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n && tar -xf apache-maven-$MAVEN_VERSION-bin.tar.gz ; rm -rf apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n && mv apache-maven-$MAVEN_VERSION /usr/local/lib/maven \\\n && ln -s /usr/local/lib/maven/bin/mvn /usr/local/bin/mvn\n#   install sbt\nRUN mkdir -p /usr/local/share/sbt-launcher-packaging \\\n && curl --progress --retry 3 --retry-delay 15 --location \"https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz\" --output \"/tmp/sbt-${SBT_VERSION}.tgz\" \\\n && tar -xzf \"/tmp/sbt-${SBT_VERSION}.tgz\" -C /usr/local/share/sbt-launcher-packaging --strip-components=1 \\\n && ln -s /usr/local/share/sbt-launcher-packaging/bin/sbt /usr/local/bin/sbt \\\n && rm -f \"/tmp/sbt-${SBT_VERSION}.tgz\"\n#   install gradle\nWORKDIR /tmp\nRUN curl -L -o gradle.zip http://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip \\\n && unzip -q gradle.zip \\\n && rm gradle.zip \\\n && mv gradle-$GRADLE_VERSION /root/gradle\nENV PATH=\"/root/gradle/bin:$PATH\"\n#  install go\nWORKDIR /go\nRUN wget https://storage.googleapis.com/golang/go$GO_LANG_VERSION.linux-amd64.tar.gz -O go.tar.gz \\\n && tar --strip-components=1 -xf go.tar.gz \\\n && rm -f go.tar.gz\nENV GOROOT=\"/go\"\nENV PATH=\"$PATH:/go/bin\"\n#   godep is now required for license_finder to work for project that are still managed with GoDep\nENV GOROOT=\"/go\"\nENV GOPATH=\"/gopath\"\nENV PATH=\"$PATH:$GOPATH/bin\"\nRUN mkdir /gopath \\\n && go get github.com/tools/godep \\\n && go get github.com/FiloSottile/gvt \\\n && go get github.com/Masterminds/glide \\\n && go get github.com/kardianos/govendor \\\n && go get github.com/golang/dep/cmd/dep \\\n && go get -u github.com/rancher/trash\n#   Fix the locale\nRUN apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#  install rvm\nRUN apt-add-repository -y ppa:rael-gc/rvm \\\n && apt-get update \\\n && apt-get install --no-install-recommends rvm -y \\\n && /usr/share/rvm/bin/rvm install --default $RUBY_VERSION\nENV PATH=\"/usr/share/rvm/bin:$PATH\"\n#  install mix\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_${MIX_VERSION}_all.deb \\\n && sudo dpkg -i erlang-solutions_${MIX_VERSION}_all.deb \\\n && sudo rm -f erlang-solutions_${MIX_VERSION}_all.deb \\\n && sudo apt-get update \\\n && sudo apt-get install -y esl-erlang \\\n && sudo apt-get install -y elixir\n#   install bundler\nRUN bash -lc \"gem update --system \\\n && gem install bundler\"\n#   install conan\nRUN apt-get install --no-install-recommends python-dev=2.7.12-1~16.04 -y \\\n && pip install six==1.16.0 colorama==0.4.6 requests==2.28.2 chardet==5.1.0 urllib3==1.26.15 setuptools==67.6.1 --ignore-installed --ignore-installed --ignore-installed --ignore-installed --ignore-installed --upgrade \\\n && pip install conan==1.11.2 -Iv\n#   install Cargo\nRUN curl https://sh.rustup.rs -sSf | bash -s -- -y\n#   install NuGet (w. mono)\n#   https://docs.microsoft.com/en-us/nuget/install-nuget-client-tools#macoslinux\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-xenial main\" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends mono-complete=4.2.1.102+dfsg2-7ubuntu4 -y \\\n && curl -o /usr/local/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe \\\n && echo \"alias nuget=\\\"mono /usr/local/bin/nuget.exe\\\"\" >> ~/.bash_aliases\n#   install dotnet core\nRUN wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb \\\n && sudo dpkg -i packages-microsoft-prod.deb \\\n && sudo apt-get update \\\n && sudo apt-get install -y dotnet-runtime-2.1 dotnet-sdk-2.1\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 4F4EA0AAE5267A6C \\\n && echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu xenial main\" | sudo tee /etc/apt/sources.list.d/php.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends php7.1-cli -y \\\n && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n && php composer-setup.php \\\n && php -r \"unlink('composer-setup.php');\" \\\n && mv composer.phar /usr/bin/composer\n#   install license_finder\nCOPY . /LicenseFinder\nRUN bash -lc \"cd /LicenseFinder \\\n && bundle install -j4 \\\n && rake install\"\nWORKDIR /\nCMD cd /scan \\\n && /bin/bash -l\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial\n#  Versioning\nENV PIP_INSTALL_VERSION=\"19.0.2\"\nENV GO_LANG_VERSION=\"1.11.5\"\nENV MAVEN_VERSION=\"3.6.0\"\nENV SBT_VERSION=\"1.1.1\"\nENV GRADLE_VERSION=\"4.10.3\"\nENV RUBY_VERSION=\"2.6.3\"\nENV MIX_VERSION=\"1.0\"\nENV JDK_VERISON=\"8u211\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\n#  programs needed for building\nRUN apt-get update \\\n && apt-get install build-essential curl git-core sudo unzip wget gnupg2 software-properties-common -y\n#  nodejs seems to be required for the one of the gems\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install nodejs -y\n#  install yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install yarn\n#  install bower\nRUN npm install bower -g \\\n && echo '{ \"allow_root\": true }' > /root/.bowerrc\n# install java 8\n# http://askubuntu.com/questions/521145/how-to-install-oracle-java-on-ubuntu-14-04\nRUN apt-get install openjdk-8-jdk -y\nRUN JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nENV J2SDKDIR=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nENV J2REDIR=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\"\nENV PATH=\"$PATH:/usr/lib/jvm/java-8-openjdk-amd64/bin:/usr/lib/jvm/java-8-openjdk-amd64/jre/bin\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nRUN java -version\n#  install python and rebar\nRUN apt-get install python rebar -y\n#  install and update python-pip\nRUN apt-get install python-pip -y \\\n && pip install pip==$PIP_INSTALL_VERSION --upgrade\n#  install maven\nRUN curl -O https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n && tar -xf apache-maven-$MAVEN_VERSION-bin.tar.gz ; rm -rf apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n && mv apache-maven-$MAVEN_VERSION /usr/local/lib/maven \\\n && ln -s /usr/local/lib/maven/bin/mvn /usr/local/bin/mvn\n#  install sbt\nRUN mkdir -p /usr/local/share/sbt-launcher-packaging \\\n && curl --progress --retry 3 --retry-delay 15 --location \"https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz\" --output \"/tmp/sbt-${SBT_VERSION}.tgz\" \\\n && tar -xzf \"/tmp/sbt-${SBT_VERSION}.tgz\" -C /usr/local/share/sbt-launcher-packaging --strip-components=1 \\\n && ln -s /usr/local/share/sbt-launcher-packaging/bin/sbt /usr/local/bin/sbt \\\n && rm -f \"/tmp/sbt-${SBT_VERSION}.tgz\"\n#  install gradle\nWORKDIR /tmp\nRUN curl -L -o gradle.zip http://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip \\\n && unzip -q gradle.zip \\\n && rm gradle.zip \\\n && mv gradle-$GRADLE_VERSION /root/gradle\nENV PATH=\"/root/gradle/bin:$PATH\"\n# install go\nWORKDIR /go\nRUN wget https://storage.googleapis.com/golang/go$GO_LANG_VERSION.linux-amd64.tar.gz -O go.tar.gz \\\n && tar --strip-components=1 -xf go.tar.gz \\\n && rm -f go.tar.gz\nENV GOROOT=\"/go\"\nENV PATH=\"$PATH:/go/bin\"\n#  godep is now required for license_finder to work for project that are still managed with GoDep\nENV GOROOT=\"/go\"\nENV GOPATH=\"/gopath\"\nENV PATH=\"$PATH:$GOPATH/bin\"\nRUN mkdir /gopath \\\n && go get github.com/tools/godep \\\n && go get github.com/FiloSottile/gvt \\\n && go get github.com/Masterminds/glide \\\n && go get github.com/kardianos/govendor \\\n && go get github.com/golang/dep/cmd/dep \\\n && go get -u github.com/rancher/trash\n#  Fix the locale\nRUN apt-get install locales -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n# install rvm\nRUN apt-add-repository -y ppa:rael-gc/rvm \\\n && apt-get update \\\n && apt-get install -y rvm \\\n && /usr/share/rvm/bin/rvm install --default $RUBY_VERSION\nENV PATH=\"/usr/share/rvm/bin:$PATH\"\n# install mix\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_${MIX_VERSION}_all.deb \\\n && sudo dpkg -i erlang-solutions_${MIX_VERSION}_all.deb \\\n && sudo rm -f erlang-solutions_${MIX_VERSION}_all.deb \\\n && sudo apt-get update \\\n && sudo apt-get install -y esl-erlang \\\n && sudo apt-get install -y elixir\n#  install bundler\nRUN bash -lc \"gem update --system \\\n && gem install bundler\"\n#  install conan\nRUN apt-get install python-dev -y \\\n && pip install six colorama requests chardet urllib3 setuptools --ignore-installed --ignore-installed --ignore-installed --ignore-installed --ignore-installed --upgrade \\\n && pip install conan==1.11.2 -Iv\n#  install Cargo\nRUN curl https://sh.rustup.rs -sSf | bash -s -- -y\n#  install NuGet (w. mono)\n#  https://docs.microsoft.com/en-us/nuget/install-nuget-client-tools#macoslinux\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-xenial main\" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install mono-complete -y \\\n && curl -o /usr/local/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe \\\n && echo \"alias nuget=\\\"mono /usr/local/bin/nuget.exe\\\"\" >> ~/.bash_aliases\n#  install dotnet core\nRUN wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb \\\n && sudo dpkg -i packages-microsoft-prod.deb \\\n && sudo apt-get update \\\n && sudo apt-get install -y dotnet-runtime-2.1 dotnet-sdk-2.1\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 4F4EA0AAE5267A6C \\\n && echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu xenial main\" | sudo tee /etc/apt/sources.list.d/php.list \\\n && apt-get update \\\n && apt-get install php7.1-cli -y \\\n && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n && php composer-setup.php \\\n && php -r \"unlink('composer-setup.php');\" \\\n && mv composer.phar /usr/bin/composer\n#  install license_finder\nCOPY . /LicenseFinder\nRUN bash -lc \"cd /LicenseFinder \\\n && bundle install -j4 \\\n && rake install\"\nWORKDIR /\nCMD cd /scan \\\n && /bin/bash -l\n","injectedSmells":[],"originalDockerfileHash":"529870ce7afcefc70fe2abcf303c01af","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial\n#   Versioning\nENV PIP_INSTALL_VERSION=\"19.0.2\"\nENV GO_LANG_VERSION=\"1.11.5\"\nENV MAVEN_VERSION=\"3.6.0\"\nENV SBT_VERSION=\"1.1.1\"\nENV GRADLE_VERSION=\"4.10.3\"\nENV RUBY_VERSION=\"2.6.3\"\nENV MIX_VERSION=\"1.0\"\nENV JDK_VERISON=\"8u211\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   programs needed for building\nRUN apt-get update \\\n && apt-get install build-essential curl git-core sudo unzip wget gnupg2 software-properties-common -y\n#   nodejs seems to be required for the one of the gems\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install nodejs -y\n#   install yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install yarn\n#   install bower\nRUN npm install bower -g \\\n && echo '{ \"allow_root\": true }' > /root/.bowerrc\n#  install java 8\n#  http://askubuntu.com/questions/521145/how-to-install-oracle-java-on-ubuntu-14-04\nRUN apt-get install openjdk-8-jdk -y\nRUN JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nENV J2SDKDIR=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nENV J2REDIR=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\"\nENV PATH=\"$PATH:/usr/lib/jvm/java-8-openjdk-amd64/bin:/usr/lib/jvm/java-8-openjdk-amd64/jre/bin\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nRUN java -version\n#   install python and rebar\nRUN apt-get install python rebar -y\n#   install and update python-pip\nRUN apt-get install python-pip -y \\\n && pip install pip==$PIP_INSTALL_VERSION --upgrade\n#   install maven\nRUN curl -O https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n && tar -xf apache-maven-$MAVEN_VERSION-bin.tar.gz ; rm -rf apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n && mv apache-maven-$MAVEN_VERSION /usr/local/lib/maven \\\n && ln -s /usr/local/lib/maven/bin/mvn /usr/local/bin/mvn\n#   install sbt\nRUN mkdir -p /usr/local/share/sbt-launcher-packaging \\\n && curl --progress --retry 3 --retry-delay 15 --location \"https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz\" --output \"/tmp/sbt-${SBT_VERSION}.tgz\" \\\n && tar -xzf \"/tmp/sbt-${SBT_VERSION}.tgz\" -C /usr/local/share/sbt-launcher-packaging --strip-components=1 \\\n && ln -s /usr/local/share/sbt-launcher-packaging/bin/sbt /usr/local/bin/sbt \\\n && rm -f \"/tmp/sbt-${SBT_VERSION}.tgz\"\n#   install gradle\nWORKDIR /tmp\nRUN curl -L -o gradle.zip http://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip \\\n && unzip -q gradle.zip \\\n && rm gradle.zip \\\n && mv gradle-$GRADLE_VERSION /root/gradle\nENV PATH=\"/root/gradle/bin:$PATH\"\n#  install go\nWORKDIR /go\nRUN wget https://storage.googleapis.com/golang/go$GO_LANG_VERSION.linux-amd64.tar.gz -O go.tar.gz \\\n && tar --strip-components=1 -xf go.tar.gz \\\n && rm -f go.tar.gz\nENV GOROOT=\"/go\"\nENV PATH=\"$PATH:/go/bin\"\n#   godep is now required for license_finder to work for project that are still managed with GoDep\nENV GOROOT=\"/go\"\nENV GOPATH=\"/gopath\"\nENV PATH=\"$PATH:$GOPATH/bin\"\nRUN mkdir /gopath \\\n && go get github.com/tools/godep \\\n && go get github.com/FiloSottile/gvt \\\n && go get github.com/Masterminds/glide \\\n && go get github.com/kardianos/govendor \\\n && go get github.com/golang/dep/cmd/dep \\\n && go get -u github.com/rancher/trash\n#   Fix the locale\nRUN apt-get install locales -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#  install rvm\nRUN apt-add-repository -y ppa:rael-gc/rvm \\\n && apt-get update \\\n && apt-get install rvm -y \\\n && /usr/share/rvm/bin/rvm install --default $RUBY_VERSION\nENV PATH=\"/usr/share/rvm/bin:$PATH\"\n#  install mix\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_${MIX_VERSION}_all.deb \\\n && sudo dpkg -i erlang-solutions_${MIX_VERSION}_all.deb \\\n && sudo rm -f erlang-solutions_${MIX_VERSION}_all.deb \\\n && sudo apt-get update \\\n && sudo apt-get install -y esl-erlang \\\n && sudo apt-get install -y elixir\n#   install bundler\nRUN bash -lc \"gem update --system \\\n && gem install bundler\"\n#   install conan\nRUN apt-get install python-dev -y \\\n && pip install six colorama requests chardet urllib3 setuptools --ignore-installed --ignore-installed --ignore-installed --ignore-installed --ignore-installed --upgrade \\\n && pip install conan==1.11.2 -Iv\n#   install Cargo\nRUN curl https://sh.rustup.rs -sSf | bash -s -- -y\n#   install NuGet (w. mono)\n#   https://docs.microsoft.com/en-us/nuget/install-nuget-client-tools#macoslinux\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-xenial main\" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install mono-complete -y \\\n && curl -o /usr/local/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe \\\n && echo \"alias nuget=\\\"mono /usr/local/bin/nuget.exe\\\"\" >> ~/.bash_aliases\n#   install dotnet core\nRUN wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb \\\n && sudo dpkg -i packages-microsoft-prod.deb \\\n && sudo apt-get update \\\n && sudo apt-get install -y dotnet-runtime-2.1 dotnet-sdk-2.1\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 4F4EA0AAE5267A6C \\\n && echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu xenial main\" | sudo tee /etc/apt/sources.list.d/php.list \\\n && apt-get update \\\n && apt-get install php7.1-cli -y \\\n && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n && php composer-setup.php \\\n && php -r \"unlink('composer-setup.php');\" \\\n && mv composer.phar /usr/bin/composer\n#   install license_finder\nCOPY . /LicenseFinder\nRUN bash -lc \"cd /LicenseFinder \\\n && bundle install -j4 \\\n && rake install\"\nWORKDIR /\nCMD cd /scan \\\n && /bin/bash -l\n","originalDockerfileUglifiedHash":"f7cc791f313ebcd52df4113420109cf3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a8a5f62725760e330bcbd26038350b62895dc308.dockerfile"}