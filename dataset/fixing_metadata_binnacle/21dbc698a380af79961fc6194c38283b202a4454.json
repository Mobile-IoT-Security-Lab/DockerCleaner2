{"seed":901556075,"processedDockerfileHash":"011733cfbbf5328ecf6c1ca9070a5aad","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   upstream https://github.com/docker-library/mysql\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \\\n && apt-get dist-upgrade -y\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ca-certificates wget -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\n#   FATAL ERROR: please install the following Perl modules before executing /usr/local/mysql/scripts/mysql_install_db:\n#   File::Basename\n#   File::Copy\n#   Sys::Hostname\n#   Data::Dumper\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends perl -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   mysqld: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends libaio1 pwgen -y ) \\\n && rm -rf /var/lib/apt/lists/*\nENV MYSQL_MAJOR=\"5.5\"\nENV MYSQL_VERSION=\"5.5.58\"\n#   gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ca-certificates wget -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION-linux-glibc2.12-x86_64.tar.gz\" -O mysql.tar.gz \\\n && wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION-linux-glibc2.12-x86_64.tar.gz.asc\" -O mysql.tar.gz.asc \\\n && apt-get purge -y --auto-remove ca-certificates wget \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5 \\\n && gpg --batch --verify mysql.tar.gz.asc mysql.tar.gz \\\n && rm -r \"$GNUPGHOME\" mysql.tar.gz.asc \\\n && mkdir /usr/local/mysql \\\n && tar -xzf mysql.tar.gz -C /usr/local/mysql --strip-components=1 \\\n && rm mysql.tar.gz \\\n && rm -rf /usr/local/mysql/mysql-test /usr/local/mysql/sql-bench \\\n && rm -rf /usr/local/mysql/bin/*-debug /usr/local/mysql/bin/*_embedded \\\n && find /usr/local/mysql -type f -name \"*.a\" -delete \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends binutils -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && { find /usr/local/mysql -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && apt-get purge -y --auto-remove binutils\nENV PATH=\"$PATH:/usr/local/mysql/bin:/usr/local/mysql/scripts\"\n#   replicate some of the way the APT package configuration works\n#   this is only for 5.5 since it doesn't have an APT repo, and will go away when 5.5 does\nRUN mkdir -p /etc/mysql/conf.d \\\n && { echo '[mysqld]' ;echo 'skip-host-cache' ;echo 'skip-name-resolve' ;echo 'datadir = /var/lib/mysql' ;echo '!includedir /etc/mysql/conf.d/' ; } > /etc/mysql/my.cnf\n#   ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\nRUN mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  upstream https://github.com/docker-library/mysql\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#  Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \\\n && apt-get dist-upgrade -y\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#  add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\n#  FATAL ERROR: please install the following Perl modules before executing /usr/local/mysql/scripts/mysql_install_db:\n#  File::Basename\n#  File::Copy\n#  Sys::Hostname\n#  Data::Dumper\nRUN apt-get update \\\n && apt-get install --no-install-recommends perl -y \\\n && rm -rf /var/lib/apt/lists/*\n#  mysqld: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory\nRUN apt-get update \\\n && apt-get install libaio1 pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\nENV MYSQL_MAJOR=\"5.5\"\nENV MYSQL_VERSION=\"5.5.58\"\n#  gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION-linux-glibc2.12-x86_64.tar.gz\" -O mysql.tar.gz \\\n && wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION-linux-glibc2.12-x86_64.tar.gz.asc\" -O mysql.tar.gz.asc \\\n && apt-get purge -y --auto-remove ca-certificates wget \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5 \\\n && gpg --batch --verify mysql.tar.gz.asc mysql.tar.gz \\\n && rm -r \"$GNUPGHOME\" mysql.tar.gz.asc \\\n && mkdir /usr/local/mysql \\\n && tar -xzf mysql.tar.gz -C /usr/local/mysql --strip-components=1 \\\n && rm mysql.tar.gz \\\n && rm -rf /usr/local/mysql/mysql-test /usr/local/mysql/sql-bench \\\n && rm -rf /usr/local/mysql/bin/*-debug /usr/local/mysql/bin/*_embedded \\\n && find /usr/local/mysql -type f -name \"*.a\" -delete \\\n && apt-get update \\\n && apt-get install binutils -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && { find /usr/local/mysql -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && apt-get purge -y --auto-remove binutils\nENV PATH=\"$PATH:/usr/local/mysql/bin:/usr/local/mysql/scripts\"\n#  replicate some of the way the APT package configuration works\n#  this is only for 5.5 since it doesn't have an APT repo, and will go away when 5.5 does\nRUN mkdir -p /etc/mysql/conf.d \\\n && { echo '[mysqld]' ;echo 'skip-host-cache' ;echo 'skip-name-resolve' ;echo 'datadir = /var/lib/mysql' ;echo '!includedir /etc/mysql/conf.d/' ; } > /etc/mysql/my.cnf\n#  ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\nRUN mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","injectedSmells":[],"originalDockerfileHash":"4511392826211deaf32205de35bca76b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   upstream https://github.com/docker-library/mysql\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \\\n && apt-get dist-upgrade -y\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\n#   FATAL ERROR: please install the following Perl modules before executing /usr/local/mysql/scripts/mysql_install_db:\n#   File::Basename\n#   File::Copy\n#   Sys::Hostname\n#   Data::Dumper\nRUN apt-get update \\\n && apt-get install --no-install-recommends perl -y \\\n && rm -rf /var/lib/apt/lists/*\n#   mysqld: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory\nRUN apt-get update \\\n && apt-get install libaio1 pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\nENV MYSQL_MAJOR=\"5.5\"\nENV MYSQL_VERSION=\"5.5.58\"\n#   gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION-linux-glibc2.12-x86_64.tar.gz\" -O mysql.tar.gz \\\n && wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION-linux-glibc2.12-x86_64.tar.gz.asc\" -O mysql.tar.gz.asc \\\n && apt-get purge -y --auto-remove ca-certificates wget \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5 \\\n && gpg --batch --verify mysql.tar.gz.asc mysql.tar.gz \\\n && rm -r \"$GNUPGHOME\" mysql.tar.gz.asc \\\n && mkdir /usr/local/mysql \\\n && tar -xzf mysql.tar.gz -C /usr/local/mysql --strip-components=1 \\\n && rm mysql.tar.gz \\\n && rm -rf /usr/local/mysql/mysql-test /usr/local/mysql/sql-bench \\\n && rm -rf /usr/local/mysql/bin/*-debug /usr/local/mysql/bin/*_embedded \\\n && find /usr/local/mysql -type f -name \"*.a\" -delete \\\n && apt-get update \\\n && apt-get install binutils -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && { find /usr/local/mysql -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && apt-get purge -y --auto-remove binutils\nENV PATH=\"$PATH:/usr/local/mysql/bin:/usr/local/mysql/scripts\"\n#   replicate some of the way the APT package configuration works\n#   this is only for 5.5 since it doesn't have an APT repo, and will go away when 5.5 does\nRUN mkdir -p /etc/mysql/conf.d \\\n && { echo '[mysqld]' ;echo 'skip-host-cache' ;echo 'skip-name-resolve' ;echo 'datadir = /var/lib/mysql' ;echo '!includedir /etc/mysql/conf.d/' ; } > /etc/mysql/my.cnf\n#   ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\nRUN mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","originalDockerfileUglifiedHash":"f164d1c83b7578d81a3ce4341763c2e6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/21dbc698a380af79961fc6194c38283b202a4454.dockerfile"}