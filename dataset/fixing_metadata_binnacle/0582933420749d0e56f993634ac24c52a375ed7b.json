{"seed":2310892652,"processedDockerfileHash":"813f0932e28f7174a308aa0f3b3f01d2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   python:2.7-alpine with GEOS, GDAL, and Proj installed (built as a separate image\n#   because it takes a long time to build)\nFROM rapidpro/rapidpro-base:v4\nARG RAPIDPRO_VERSION\nENV PIP_RETRIES=\"120\" \\\n    PIP_TIMEOUT=\"400\" \\\n    PIP_DEFAULT_TIMEOUT=\"400\" \\\n    C_FORCE_ROOT=\"1\" \\\n    PIP_EXTRA_INDEX_URL=\"https://alpine-3.wheelhouse.praekelt.org/simple\"\n#   TODO determine if a more recent version of Node is needed\n#   TODO extract openssl and tar to their own upgrade/install line\nRUN set -ex \\\n && apk add nodejs-lts nodejs-npm openssl tar --no-cache \\\n && npm install coffee-script@1.12.7 less@4.1.3 bower@1.8.14 -g\nWORKDIR /rapidpro\nRUN set -ex \\\n && apk add bash patch git gcc g++ make libc-dev musl-dev linux-headers postgresql-dev libjpeg-turbo-dev libpng-dev freetype-dev libxslt-dev libxml2-dev zlib-dev libffi-dev pcre-dev readline readline-dev ncurses ncurses-dev libzmq --no-cache --virtual .build-deps \\\n && pip install virtualenv==20.21.0 -U \\\n && virtualenv /venv\nARG RAPIDPRO_VERSION\nARG RAPIDPRO_REPO\nENV RAPIDPRO_VERSION=\"${RAPIDPRO_VERSION:-master}\"\nENV RAPIDPRO_REPO=\"${RAPIDPRO_REPO:-rapidpro/rapidpro}\"\nRUN echo \"Downloading RapidPro ${RAPIDPRO_VERSION} from https://github.com/$RAPIDPRO_REPO/archive/${RAPIDPRO_VERSION}.tar.gz\" \\\n && wget -O rapidpro.tar.gz \"https://github.com/$RAPIDPRO_REPO/archive/${RAPIDPRO_VERSION}.tar.gz\" \\\n && tar -xf rapidpro.tar.gz --strip-components=1 \\\n && rm rapidpro.tar.gz\n#   Build Python virtualenv\nCOPY requirements.txt /app/requirements.txt\nRUN LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install setuptools==33.1.1\" \\\n && LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install -r /app/requirements.txt\" \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /venv | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --no-cache --virtual .python-rundeps \\\n && apk del .build-deps \\\n && rm -rf /var/cache/apk/*\n#   TODO should this be in startup.sh?\nRUN cd /rapidpro \\\n && npm install npm@latest \\\n && npm install \\\n && bower install --allow-root\n#   Install `psql` command (needed for `manage.py dbshell` in stack/init_db.sql)\n#   Install `libmagic` (needed since rapidpro v3.0.64)\nRUN apk add postgresql-client libmagic --no-cache\nENV UWSGI_VIRTUALENV=\"/venv\" \\\n    UWSGI_WSGI_FILE=\"temba/wsgi.py\" \\\n    UWSGI_HTTP=\":8000\" \\\n    UWSGI_MASTER=\"1\" \\\n    UWSGI_WORKERS=\"8\" \\\n    UWSGI_HARAKIRI=\"20\"\n#   Enable HTTP 1.1 Keep Alive options for uWSGI (http-auto-chunked needed when ConditionalGetMiddleware not installed)\n#   These options don't appear to be configurable via environment variables, so pass them in here instead\nENV STARTUP_CMD=\"/venv/bin/uwsgi --http-auto-chunked --http-keepalive\"\nENV CELERY_CMD=\"/venv/bin/celery --beat --app=temba worker --loglevel=INFO --queues=celery,msgs,flows,handler\"\nCOPY settings.py /rapidpro/temba/\n#   500.html needed to keep the missing template from causing an exception during error handling\nCOPY stack/500.html /rapidpro/templates/\nCOPY stack/init_db.sql /rapidpro/\nCOPY stack/clear-compressor-cache.py /rapidpro/\nCOPY Procfile /rapidpro/\nCOPY Procfile /\nEXPOSE 8000/tcp\nCOPY stack/startup.sh /\nLABEL org.label-schema.name=\"RapidPro\" \\\n      org.label-schema.description=\"RapidPro allows organizations to visually build scalable interactive messaging applications.\" \\\n      org.label-schema.url=\"https://www.rapidpro.io/\" \\\n      org.label-schema.vcs-url=\"https://github.com/$RAPIDPRO_REPO\" \\\n      org.label-schema.vendor=\"Nyaruka, UNICEF, and individual contributors.\" \\\n      org.label-schema.version=\"$RAPIDPRO_VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\nCMD [\"/startup.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  python:2.7-alpine with GEOS, GDAL, and Proj installed (built as a separate image\n#  because it takes a long time to build)\nFROM rapidpro/rapidpro-base:v4\nARG RAPIDPRO_VERSION\nENV PIP_RETRIES=\"120\" \\\n    PIP_TIMEOUT=\"400\" \\\n    PIP_DEFAULT_TIMEOUT=\"400\" \\\n    C_FORCE_ROOT=\"1\" \\\n    PIP_EXTRA_INDEX_URL=\"https://alpine-3.wheelhouse.praekelt.org/simple\"\n#  TODO determine if a more recent version of Node is needed\n#  TODO extract openssl and tar to their own upgrade/install line\nRUN set -ex \\\n && apk add --no-cache nodejs-lts nodejs-npm openssl tar \\\n && npm install coffee-script less bower -g\nWORKDIR /rapidpro\nRUN set -ex \\\n && apk add --no-cache --virtual .build-deps bash patch git gcc g++ make libc-dev musl-dev linux-headers postgresql-dev libjpeg-turbo-dev libpng-dev freetype-dev libxslt-dev libxml2-dev zlib-dev libffi-dev pcre-dev readline readline-dev ncurses ncurses-dev libzmq \\\n && pip install virtualenv -U \\\n && virtualenv /venv\nARG RAPIDPRO_VERSION\nARG RAPIDPRO_REPO\nENV RAPIDPRO_VERSION=\"${RAPIDPRO_VERSION:-master}\"\nENV RAPIDPRO_REPO=\"${RAPIDPRO_REPO:-rapidpro/rapidpro}\"\nRUN echo \"Downloading RapidPro ${RAPIDPRO_VERSION} from https://github.com/$RAPIDPRO_REPO/archive/${RAPIDPRO_VERSION}.tar.gz\" \\\n && wget -O rapidpro.tar.gz \"https://github.com/$RAPIDPRO_REPO/archive/${RAPIDPRO_VERSION}.tar.gz\" \\\n && tar -xf rapidpro.tar.gz --strip-components=1 \\\n && rm rapidpro.tar.gz\n#  Build Python virtualenv\nCOPY requirements.txt /app/requirements.txt\nRUN LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install setuptools==33.1.1\" \\\n && LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install -r /app/requirements.txt\" \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /venv | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk --no-cache add --virtual .python-rundeps $runDeps \\\n && apk del .build-deps \\\n && rm -rf /var/cache/apk/*\n#  TODO should this be in startup.sh?\nRUN cd /rapidpro \\\n && npm install npm@latest \\\n && npm install \\\n && bower install --allow-root\n#  Install `psql` command (needed for `manage.py dbshell` in stack/init_db.sql)\n#  Install `libmagic` (needed since rapidpro v3.0.64)\nRUN apk add --no-cache postgresql-client libmagic\nENV UWSGI_VIRTUALENV=\"/venv\" \\\n    UWSGI_WSGI_FILE=\"temba/wsgi.py\" \\\n    UWSGI_HTTP=\":8000\" \\\n    UWSGI_MASTER=\"1\" \\\n    UWSGI_WORKERS=\"8\" \\\n    UWSGI_HARAKIRI=\"20\"\n#  Enable HTTP 1.1 Keep Alive options for uWSGI (http-auto-chunked needed when ConditionalGetMiddleware not installed)\n#  These options don't appear to be configurable via environment variables, so pass them in here instead\nENV STARTUP_CMD=\"/venv/bin/uwsgi --http-auto-chunked --http-keepalive\"\nENV CELERY_CMD=\"/venv/bin/celery --beat --app=temba worker --loglevel=INFO --queues=celery,msgs,flows,handler\"\nCOPY settings.py /rapidpro/temba/\n#  500.html needed to keep the missing template from causing an exception during error handling\nCOPY stack/500.html /rapidpro/templates/\nCOPY stack/init_db.sql /rapidpro/\nCOPY stack/clear-compressor-cache.py /rapidpro/\nCOPY Procfile /rapidpro/\nCOPY Procfile /\nEXPOSE 8000/tcp\nCOPY stack/startup.sh /\nLABEL org.label-schema.name=\"RapidPro\" \\\n      org.label-schema.description=\"RapidPro allows organizations to visually build scalable interactive messaging applications.\" \\\n      org.label-schema.url=\"https://www.rapidpro.io/\" \\\n      org.label-schema.vcs-url=\"https://github.com/$RAPIDPRO_REPO\" \\\n      org.label-schema.vendor=\"Nyaruka, UNICEF, and individual contributors.\" \\\n      org.label-schema.version=\"$RAPIDPRO_VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\nCMD [\"/startup.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"d4c9f1881053b90f6a1f9fcf89bd6c6c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   python:2.7-alpine with GEOS, GDAL, and Proj installed (built as a separate image\n#   because it takes a long time to build)\nFROM rapidpro/rapidpro-base:v4\nARG RAPIDPRO_VERSION\nENV PIP_RETRIES=\"120\" \\\n    PIP_TIMEOUT=\"400\" \\\n    PIP_DEFAULT_TIMEOUT=\"400\" \\\n    C_FORCE_ROOT=\"1\" \\\n    PIP_EXTRA_INDEX_URL=\"https://alpine-3.wheelhouse.praekelt.org/simple\"\n#   TODO determine if a more recent version of Node is needed\n#   TODO extract openssl and tar to their own upgrade/install line\nRUN set -ex \\\n && apk add --no-cache nodejs-lts nodejs-npm openssl tar \\\n && npm install coffee-script less bower -g\nWORKDIR /rapidpro\nRUN set -ex \\\n && apk add --no-cache --virtual .build-deps bash patch git gcc g++ make libc-dev musl-dev linux-headers postgresql-dev libjpeg-turbo-dev libpng-dev freetype-dev libxslt-dev libxml2-dev zlib-dev libffi-dev pcre-dev readline readline-dev ncurses ncurses-dev libzmq \\\n && pip install virtualenv -U \\\n && virtualenv /venv\nARG RAPIDPRO_VERSION\nARG RAPIDPRO_REPO\nENV RAPIDPRO_VERSION=\"${RAPIDPRO_VERSION:-master}\"\nENV RAPIDPRO_REPO=\"${RAPIDPRO_REPO:-rapidpro/rapidpro}\"\nRUN echo \"Downloading RapidPro ${RAPIDPRO_VERSION} from https://github.com/$RAPIDPRO_REPO/archive/${RAPIDPRO_VERSION}.tar.gz\" \\\n && wget -O rapidpro.tar.gz \"https://github.com/$RAPIDPRO_REPO/archive/${RAPIDPRO_VERSION}.tar.gz\" \\\n && tar -xf rapidpro.tar.gz --strip-components=1 \\\n && rm rapidpro.tar.gz\n#   Build Python virtualenv\nCOPY requirements.txt /app/requirements.txt\nRUN LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install setuptools==33.1.1\" \\\n && LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install -r /app/requirements.txt\" \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /venv | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk --no-cache add --virtual .python-rundeps $runDeps \\\n && apk del .build-deps \\\n && rm -rf /var/cache/apk/*\n#   TODO should this be in startup.sh?\nRUN cd /rapidpro \\\n && npm install npm@latest \\\n && npm install \\\n && bower install --allow-root\n#   Install `psql` command (needed for `manage.py dbshell` in stack/init_db.sql)\n#   Install `libmagic` (needed since rapidpro v3.0.64)\nRUN apk add --no-cache postgresql-client libmagic\nENV UWSGI_VIRTUALENV=\"/venv\" \\\n    UWSGI_WSGI_FILE=\"temba/wsgi.py\" \\\n    UWSGI_HTTP=\":8000\" \\\n    UWSGI_MASTER=\"1\" \\\n    UWSGI_WORKERS=\"8\" \\\n    UWSGI_HARAKIRI=\"20\"\n#   Enable HTTP 1.1 Keep Alive options for uWSGI (http-auto-chunked needed when ConditionalGetMiddleware not installed)\n#   These options don't appear to be configurable via environment variables, so pass them in here instead\nENV STARTUP_CMD=\"/venv/bin/uwsgi --http-auto-chunked --http-keepalive\"\nENV CELERY_CMD=\"/venv/bin/celery --beat --app=temba worker --loglevel=INFO --queues=celery,msgs,flows,handler\"\nCOPY settings.py /rapidpro/temba/\n#   500.html needed to keep the missing template from causing an exception during error handling\nCOPY stack/500.html /rapidpro/templates/\nCOPY stack/init_db.sql /rapidpro/\nCOPY stack/clear-compressor-cache.py /rapidpro/\nCOPY Procfile /rapidpro/\nCOPY Procfile /\nEXPOSE 8000/tcp\nCOPY stack/startup.sh /\nLABEL org.label-schema.name=\"RapidPro\" \\\n      org.label-schema.description=\"RapidPro allows organizations to visually build scalable interactive messaging applications.\" \\\n      org.label-schema.url=\"https://www.rapidpro.io/\" \\\n      org.label-schema.vcs-url=\"https://github.com/$RAPIDPRO_REPO\" \\\n      org.label-schema.vendor=\"Nyaruka, UNICEF, and individual contributors.\" \\\n      org.label-schema.version=\"$RAPIDPRO_VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\nCMD [\"/startup.sh\"]\n","originalDockerfileUglifiedHash":"72315db53753573fe4782dc75a75d1ef","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0582933420749d0e56f993634ac24c52a375ed7b.dockerfile"}