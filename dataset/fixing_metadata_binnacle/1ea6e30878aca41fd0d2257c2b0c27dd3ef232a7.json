{"seed":2048096748,"processedDockerfileHash":"06f702c39471272ba34be748fe70dab0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   © Copyright IBM Corporation 2019.\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  ######### Dockerfile for ScyllaDB version 2.3.1 #########\n#\n#   This Dockerfile builds a basic installation of ScyllaDB.\n#\n#   ScyllaDB is a high performance distributed NoSQL database.\n#\n#   To build this image, from the directory containing this Dockerfile\n#   (assuming that the file is named Dockerfile):\n#   docker build --build-arg TARGET=<target_value> -t <image_name> .\n#\n#   To start ScyllaDB run the below command:\n#   docker run -it --name <container_name>  <image> bash\n#\n#   Reference :\n#   http://www.scylladb.com\n#\n#  #################################################################################\n#   Base Image\nFROM s390x/ubuntu:16.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/tmp/source\" \\\n    PATH=\"/opt/gcc-7.4.0/bin:/usr/local/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/opt/gcc-7.4.0/lib64:$LD_LIBRARY_PATH\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig/\"\nARG TARGET\nWORKDIR $SOURCE_DIR\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ant openjdk-8-jdk python libgnutls-dev systemtap-sdt-dev lksctp-tools xfsprogs snappy libyaml-dev maven cmake openssl perl libc-ares-dev libevent-dev libmpfr-dev libmpcdec-dev xz-utils automake gcc git make texinfo wget unzip libtool libssl-dev curl libsystemd-dev libhwloc-dev libaio-dev libsctp-dev libsnappy-dev libpciaccess-dev libxml2-dev xfslibs-dev libgnutls28-dev libiconv-hook-dev mpi-default-dev libbz2-dev python-dev libxslt-dev libjsoncpp-dev cmake ragel python3 python3-pyparsing libprotobuf-dev protobuf-compiler liblz4-dev ninja-build libcrypto++-dev -y \\\n && cd $SOURCE_DIR \\\n && mkdir gcc \\\n && cd gcc \\\n && wget https://ftpmirror.gnu.org/gcc/gcc-7.4.0/gcc-7.4.0.tar.xz \\\n && tar -xf gcc-7.4.0.tar.xz \\\n && cd gcc-7.4.0 \\\n && ./contrib/download_prerequisites \\\n && mkdir objdir \\\n && cd objdir \\\n && ../configure --prefix=/opt/gcc-7.4.0 --enable-languages=c,c++ --with-arch=zEC12 --with-long-double-128 --build=s390x-linux-gnu --host=s390x-linux-gnu --target=s390x-linux-gnu --enable-threads=posix --with-system-zlib --disable-multilib \\\n && make -j 8 \\\n && make install \\\n && ln -sf /opt/gcc-7.4.0/bin/gcc /usr/bin/gcc \\\n && ln -sf /opt/gcc-7.4.0/bin/g++ /usr/bin/g++ \\\n && cd $SOURCE_DIR \\\n && mkdir antlr3 \\\n && cd antlr3 \\\n && wget https://github.com/antlr/antlr3/archive/3.5.2.tar.gz \\\n && tar -xzf 3.5.2.tar.gz \\\n && cd antlr3-3.5.2 \\\n && cp runtime/Cpp/include/antlr3* /usr/local/include/ \\\n && cd antlr-complete \\\n && MAVEN_OPTS=\"-Xmx4G\" mvn \\\n && echo 'java -cp '\"$( pwd ;)\"'/target/antlr-complete-3.5.2.jar org.antlr.Tool $@' | tee /usr/local/bin/antlr3 \\\n && chmod +x /usr/local/bin/antlr3 \\\n && cd $SOURCE_DIR \\\n && mkdir boost \\\n && cd boost \\\n && wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz \\\n && tar -xf boost_1_68_0.tar.gz \\\n && cd boost_1_68_0 \\\n && sed -i 's/array\\.hpp/array_wrapper.hpp/g' boost/numeric/ublas/matrix.hpp \\\n && sed -i 's/array\\.hpp/array_wrapper.hpp/g' boost/numeric/ublas/storage.hpp \\\n && ./bootstrap.sh \\\n && ./b2 toolset=gcc variant=release link=static runtime-link=static threading=multi cxxstd=14 --prefix=/usr/local/ --without-python install \\\n && cd $SOURCE_DIR \\\n && mkdir thrift \\\n && cd thrift \\\n && wget http://archive.apache.org/dist/thrift/0.9.3/thrift-0.9.3.tar.gz \\\n && tar -xzf thrift-0.9.3.tar.gz \\\n && cd thrift-0.9.3 \\\n && ./configure --without-lua --without-go \\\n && make -j 8 \\\n && make install \\\n && cd $SOURCE_DIR \\\n && mkdir yaml-cpp \\\n && cd yaml-cpp \\\n && wget https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-0.6.2.tar.gz \\\n && tar -xzf yaml-cpp-0.6.2.tar.gz \\\n && mkdir yaml-cpp-yaml-cpp-0.6.2/build \\\n && cd yaml-cpp-yaml-cpp-0.6.2/build \\\n && cmake .. \\\n && make \\\n && make install\n#   Build ScyllaDB\nRUN cd $SOURCE_DIR \\\n && git clone -b branch-2.3-s390x https://github.com/linux-on-ibm-z/scylla \\\n && cd scylla \\\n && git submodule update --init --recursive \\\n && ./configure.py --mode=release --target=$TARGET --debuginfo 1 --static --static-boost --static-thrift \\\n && ninja -j 8\nENV PATH=\"$SOURCE_DIR/scylla/build/release:$PATH\"\nEXPOSE 10000/tcp 9042/tcp 9160/tcp 7000/tcp 7001/tcp\nCMD scylla\n#   End of Dockerfile\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  © Copyright IBM Corporation 2019.\n#  LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n# ######### Dockerfile for ScyllaDB version 2.3.1 #########\n#\n#  This Dockerfile builds a basic installation of ScyllaDB.\n#\n#  ScyllaDB is a high performance distributed NoSQL database.\n#\n#  To build this image, from the directory containing this Dockerfile\n#  (assuming that the file is named Dockerfile):\n#  docker build --build-arg TARGET=<target_value> -t <image_name> .\n#\n#  To start ScyllaDB run the below command:\n#  docker run -it --name <container_name>  <image> bash\n#\n#  Reference :\n#  http://www.scylladb.com\n#\n# #################################################################################\n#  Base Image\nFROM s390x/ubuntu:16.04\n#  The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/tmp/source\" \\\n    PATH=\"/opt/gcc-7.4.0/bin:/usr/local/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/opt/gcc-7.4.0/lib64:$LD_LIBRARY_PATH\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig/\"\nARG TARGET\nWORKDIR $SOURCE_DIR\n#  Install dependencies\nRUN apt-get update \\\n && apt-get install ant openjdk-8-jdk python libgnutls-dev systemtap-sdt-dev lksctp-tools xfsprogs snappy libyaml-dev maven cmake openssl perl libc-ares-dev libevent-dev libmpfr-dev libmpcdec-dev xz-utils automake gcc git make texinfo wget unzip libtool libssl-dev curl libsystemd-dev libhwloc-dev libaio-dev libsctp-dev libsnappy-dev libpciaccess-dev libxml2-dev xfslibs-dev libgnutls28-dev libiconv-hook-dev mpi-default-dev libbz2-dev python-dev libxslt-dev libjsoncpp-dev cmake ragel python3 python3-pyparsing libprotobuf-dev protobuf-compiler liblz4-dev ninja-build libcrypto++-dev -y \\\n && cd $SOURCE_DIR \\\n && mkdir gcc \\\n && cd gcc \\\n && wget https://ftpmirror.gnu.org/gcc/gcc-7.4.0/gcc-7.4.0.tar.xz \\\n && tar -xf gcc-7.4.0.tar.xz \\\n && cd gcc-7.4.0 \\\n && ./contrib/download_prerequisites \\\n && mkdir objdir \\\n && cd objdir \\\n && ../configure --prefix=/opt/gcc-7.4.0 --enable-languages=c,c++ --with-arch=zEC12 --with-long-double-128 --build=s390x-linux-gnu --host=s390x-linux-gnu --target=s390x-linux-gnu --enable-threads=posix --with-system-zlib --disable-multilib \\\n && make -j 8 \\\n && make install \\\n && ln -sf /opt/gcc-7.4.0/bin/gcc /usr/bin/gcc \\\n && ln -sf /opt/gcc-7.4.0/bin/g++ /usr/bin/g++ \\\n && cd $SOURCE_DIR \\\n && mkdir antlr3 \\\n && cd antlr3 \\\n && wget https://github.com/antlr/antlr3/archive/3.5.2.tar.gz \\\n && tar -xzf 3.5.2.tar.gz \\\n && cd antlr3-3.5.2 \\\n && cp runtime/Cpp/include/antlr3* /usr/local/include/ \\\n && cd antlr-complete \\\n && MAVEN_OPTS=\"-Xmx4G\" mvn \\\n && echo 'java -cp '\"$( pwd ;)\"'/target/antlr-complete-3.5.2.jar org.antlr.Tool $@' | tee /usr/local/bin/antlr3 \\\n && chmod +x /usr/local/bin/antlr3 \\\n && cd $SOURCE_DIR \\\n && mkdir boost \\\n && cd boost \\\n && wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz \\\n && tar -xf boost_1_68_0.tar.gz \\\n && cd boost_1_68_0 \\\n && sed -i 's/array\\.hpp/array_wrapper.hpp/g' boost/numeric/ublas/matrix.hpp \\\n && sed -i 's/array\\.hpp/array_wrapper.hpp/g' boost/numeric/ublas/storage.hpp \\\n && ./bootstrap.sh \\\n && ./b2 toolset=gcc variant=release link=static runtime-link=static threading=multi cxxstd=14 --prefix=/usr/local/ --without-python install \\\n && cd $SOURCE_DIR \\\n && mkdir thrift \\\n && cd thrift \\\n && wget http://archive.apache.org/dist/thrift/0.9.3/thrift-0.9.3.tar.gz \\\n && tar -xzf thrift-0.9.3.tar.gz \\\n && cd thrift-0.9.3 \\\n && ./configure --without-lua --without-go \\\n && make -j 8 \\\n && make install \\\n && cd $SOURCE_DIR \\\n && mkdir yaml-cpp \\\n && cd yaml-cpp \\\n && wget https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-0.6.2.tar.gz \\\n && tar -xzf yaml-cpp-0.6.2.tar.gz \\\n && mkdir yaml-cpp-yaml-cpp-0.6.2/build \\\n && cd yaml-cpp-yaml-cpp-0.6.2/build \\\n && cmake .. \\\n && make \\\n && make install\n#  Build ScyllaDB\nRUN cd $SOURCE_DIR \\\n && git clone -b branch-2.3-s390x https://github.com/linux-on-ibm-z/scylla \\\n && cd scylla \\\n && git submodule update --init --recursive \\\n && ./configure.py --mode=release --target=$TARGET --debuginfo 1 --static --static-boost --static-thrift \\\n && ninja -j 8\nENV PATH=\"$SOURCE_DIR/scylla/build/release:$PATH\"\nEXPOSE 10000/tcp 9042/tcp 9160/tcp 7000/tcp 7001/tcp\nCMD scylla\n#  End of Dockerfile\n","injectedSmells":[],"originalDockerfileHash":"1e83a61cee2a57df1fa05d6f7a1379ec","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   © Copyright IBM Corporation 2019.\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  ######### Dockerfile for ScyllaDB version 2.3.1 #########\n#\n#   This Dockerfile builds a basic installation of ScyllaDB.\n#\n#   ScyllaDB is a high performance distributed NoSQL database.\n#\n#   To build this image, from the directory containing this Dockerfile\n#   (assuming that the file is named Dockerfile):\n#   docker build --build-arg TARGET=<target_value> -t <image_name> .\n#\n#   To start ScyllaDB run the below command:\n#   docker run -it --name <container_name>  <image> bash\n#\n#   Reference :\n#   http://www.scylladb.com\n#\n#  #################################################################################\n#   Base Image\nFROM s390x/ubuntu:16.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/tmp/source\" \\\n    PATH=\"/opt/gcc-7.4.0/bin:/usr/local/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/opt/gcc-7.4.0/lib64:$LD_LIBRARY_PATH\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig/\"\nARG TARGET\nWORKDIR $SOURCE_DIR\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install ant openjdk-8-jdk python libgnutls-dev systemtap-sdt-dev lksctp-tools xfsprogs snappy libyaml-dev maven cmake openssl perl libc-ares-dev libevent-dev libmpfr-dev libmpcdec-dev xz-utils automake gcc git make texinfo wget unzip libtool libssl-dev curl libsystemd-dev libhwloc-dev libaio-dev libsctp-dev libsnappy-dev libpciaccess-dev libxml2-dev xfslibs-dev libgnutls28-dev libiconv-hook-dev mpi-default-dev libbz2-dev python-dev libxslt-dev libjsoncpp-dev cmake ragel python3 python3-pyparsing libprotobuf-dev protobuf-compiler liblz4-dev ninja-build libcrypto++-dev -y \\\n && cd $SOURCE_DIR \\\n && mkdir gcc \\\n && cd gcc \\\n && wget https://ftpmirror.gnu.org/gcc/gcc-7.4.0/gcc-7.4.0.tar.xz \\\n && tar -xf gcc-7.4.0.tar.xz \\\n && cd gcc-7.4.0 \\\n && ./contrib/download_prerequisites \\\n && mkdir objdir \\\n && cd objdir \\\n && ../configure --prefix=/opt/gcc-7.4.0 --enable-languages=c,c++ --with-arch=zEC12 --with-long-double-128 --build=s390x-linux-gnu --host=s390x-linux-gnu --target=s390x-linux-gnu --enable-threads=posix --with-system-zlib --disable-multilib \\\n && make -j 8 \\\n && make install \\\n && ln -sf /opt/gcc-7.4.0/bin/gcc /usr/bin/gcc \\\n && ln -sf /opt/gcc-7.4.0/bin/g++ /usr/bin/g++ \\\n && cd $SOURCE_DIR \\\n && mkdir antlr3 \\\n && cd antlr3 \\\n && wget https://github.com/antlr/antlr3/archive/3.5.2.tar.gz \\\n && tar -xzf 3.5.2.tar.gz \\\n && cd antlr3-3.5.2 \\\n && cp runtime/Cpp/include/antlr3* /usr/local/include/ \\\n && cd antlr-complete \\\n && MAVEN_OPTS=\"-Xmx4G\" mvn \\\n && echo 'java -cp '\"$( pwd ;)\"'/target/antlr-complete-3.5.2.jar org.antlr.Tool $@' | tee /usr/local/bin/antlr3 \\\n && chmod +x /usr/local/bin/antlr3 \\\n && cd $SOURCE_DIR \\\n && mkdir boost \\\n && cd boost \\\n && wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz \\\n && tar -xf boost_1_68_0.tar.gz \\\n && cd boost_1_68_0 \\\n && sed -i 's/array\\.hpp/array_wrapper.hpp/g' boost/numeric/ublas/matrix.hpp \\\n && sed -i 's/array\\.hpp/array_wrapper.hpp/g' boost/numeric/ublas/storage.hpp \\\n && ./bootstrap.sh \\\n && ./b2 toolset=gcc variant=release link=static runtime-link=static threading=multi cxxstd=14 --prefix=/usr/local/ --without-python install \\\n && cd $SOURCE_DIR \\\n && mkdir thrift \\\n && cd thrift \\\n && wget http://archive.apache.org/dist/thrift/0.9.3/thrift-0.9.3.tar.gz \\\n && tar -xzf thrift-0.9.3.tar.gz \\\n && cd thrift-0.9.3 \\\n && ./configure --without-lua --without-go \\\n && make -j 8 \\\n && make install \\\n && cd $SOURCE_DIR \\\n && mkdir yaml-cpp \\\n && cd yaml-cpp \\\n && wget https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-0.6.2.tar.gz \\\n && tar -xzf yaml-cpp-0.6.2.tar.gz \\\n && mkdir yaml-cpp-yaml-cpp-0.6.2/build \\\n && cd yaml-cpp-yaml-cpp-0.6.2/build \\\n && cmake .. \\\n && make \\\n && make install\n#   Build ScyllaDB\nRUN cd $SOURCE_DIR \\\n && git clone -b branch-2.3-s390x https://github.com/linux-on-ibm-z/scylla \\\n && cd scylla \\\n && git submodule update --init --recursive \\\n && ./configure.py --mode=release --target=$TARGET --debuginfo 1 --static --static-boost --static-thrift \\\n && ninja -j 8\nENV PATH=\"$SOURCE_DIR/scylla/build/release:$PATH\"\nEXPOSE 10000/tcp 9042/tcp 9160/tcp 7000/tcp 7001/tcp\nCMD scylla\n#   End of Dockerfile\n","originalDockerfileUglifiedHash":"78622e504cb1ea21e2c1e9ce407aaf46","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1ea6e30878aca41fd0d2257c2b0c27dd3ef232a7.dockerfile"}