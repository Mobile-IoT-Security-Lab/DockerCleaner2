{"seed":860605073,"processedDockerfileHash":"646dd778fe7107925cac2c41599e4d04","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Yoshiyuki Ieyama <44uk@github.com>\nWORKDIR /tmp\nRUN sed -i.bak -e \"s%http://[^ ]\\+%http://linux.yz.yamagata-u.ac.jp/ubuntu/%g\" /etc/apt/sources.list\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get clean \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 curl=7.47.0-1ubuntu2.19 wget=1.17.1-1ubuntu1.5 vim=2:7.4.1689-3ubuntu1.5 autoconf=2.69-9 automake=1:1.15-4ubuntu1 apt-file=2.5.5ubuntu1 build-essential=12.1ubuntu2 software-properties-common=0.96.20.10 pkg-config=0.29.1-0ubuntu1 python3=3.5.1-3 libc6-dev=2.23-0ubuntu11.3 libssl-dev=1.0.2g-1ubuntu4.20 libsasl2-dev=2.1.26.dfsg1-14ubuntu0.2 libtool=2.4.6-0.1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   gcc,g++ 7\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-7 g++-7 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm /usr/bin/gcc /usr/bin/g++ \\\n && ln -s /usr/bin/gcc-7 /usr/bin/gcc \\\n && ln -s /usr/bin/g++-7 /usr/bin/g++\n#   cmake\nRUN git clone https://gitlab.kitware.com/cmake/cmake.git -b v3.11.1 --depth 1 \\\n && cd cmake \\\n && ./bootstrap --prefix=/usr/local \\\n && make -j4 \\\n && make install \\\n && cd -\n#   boost\nRUN wget https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz \\\n && tar xzf boost_1_65_1.tar.gz \\\n && cd boost_1_65_1 \\\n && ./bootstrap.sh \\\n && ./b2 toolset=gcc install --prefix=/usr/local -j4 \\\n && cd -\n#   gtest\nRUN git clone https://github.com/google/googletest.git -b release-1.8.0 --depth 1 \\\n && mkdir -p googletest/_build \\\n && cd googletest/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   rocksdb\nRUN git clone https://github.com/facebook/rocksdb.git -b v5.12.4 --depth 1 \\\n && mkdir -p rocksdb/_build \\\n && cd rocksdb/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   zmqlib\nRUN git clone https://github.com/zeromq/libzmq.git -b v4.2.3 --depth 1 \\\n && mkdir -p libzmq/_build \\\n && cd libzmq/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   cppzmq\nRUN git clone https://github.com/zeromq/cppzmq.git -b v4.2.3 --depth 1 \\\n && mkdir -p cppzmq/_build \\\n && cd cppzmq/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   mongo-c\nRUN git clone https://github.com/mongodb/mongo-c-driver.git -b 1.4.3 --depth 1 \\\n && cd mongo-c-driver \\\n && ./autogen.sh \\\n && ./configure --disable-automatic-init-and-cleanup --prefix=/usr/local \\\n && make -j4 \\\n && make install \\\n && cd -\n#  RUN wget https://github.com/mongodb/mongo-c-driver/releases/download/1.4.2/mongo-c-driver-1.4.2.tar.gz \\\n#    && tar xzf mongo-c-driver-1.4.2.tar.gz && cd mongo-c-driver-1.4.2 \\\n#    && ./configure --disable-automatic-init-and-cleanup --prefix=/usr/local \\\n#    && make -j4 && make install \\\n#    && cd -\n#   mongo-cxx\nRUN git clone https://github.com/mongodb/mongo-cxx-driver.git -b r3.0.2 --depth 1 \\\n && cd mongo-cxx-driver/build \\\n && cmake -DBSONCXX_POLY_USE_BOOST=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   catapult\nRUN git clone https://github.com/nemtech/catapult-server.git -b master --depth 1 \\\n && cd catapult-server \\\n && mkdir _build \\\n && cd _build \\\n && cmake -DCMAKE_BUILD_TYPE=RelWithDebugInfo -DCMAKE_CXX_FLAGS=\"-pthread\" -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBSONCXX_LIB=/usr/local/lib/libbsoncxx.so -DMONGOCXX_LIB=/usr/local/lib/libmongocxx.so .. \\\n && make publish \\\n && make -j4\n#   ------------------------------------\n#   ここから先は作業用に都合よくやっている\n#   行儀が良いとは思ってないよ\nCOPY patch/config-user.patch .\nRUN cd catapult-server \\\n && patch -p1 < /tmp/config-user.patch \\\n && mkdir -p seed/mijin-test \\\n && mkdir data \\\n && cd _build \\\n && mv resources resources.bk \\\n && cp -r ../resources .\n#   generate nemesis block\n#   && ./bin/catapult.tools.nemgen ../tools/nemgen/resources/mijin-test.properties \\\n#   && cp -r ../seed/mijin-test/00000 ../data/\nWORKDIR catapult-server/_build\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Yoshiyuki Ieyama <44uk@github.com>\nWORKDIR /tmp\nRUN sed -i.bak -e \"s%http://[^ ]\\+%http://linux.yz.yamagata-u.ac.jp/ubuntu/%g\" /etc/apt/sources.list\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get clean \\\n && apt-get install --no-install-recommends git curl wget vim autoconf automake apt-file build-essential software-properties-common pkg-config python3 libc6-dev libssl-dev libsasl2-dev libtool -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  gcc,g++ 7\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-7 g++-7 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm /usr/bin/gcc /usr/bin/g++ \\\n && ln -s /usr/bin/gcc-7 /usr/bin/gcc \\\n && ln -s /usr/bin/g++-7 /usr/bin/g++\n#  cmake\nRUN git clone https://gitlab.kitware.com/cmake/cmake.git -b v3.11.1 --depth 1 \\\n && cd cmake \\\n && ./bootstrap --prefix=/usr/local \\\n && make -j4 \\\n && make install \\\n && cd -\n#  boost\nRUN wget https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz \\\n && tar xzf boost_1_65_1.tar.gz \\\n && cd boost_1_65_1 \\\n && ./bootstrap.sh \\\n && ./b2 toolset=gcc install --prefix=/usr/local -j4 \\\n && cd -\n#  gtest\nRUN git clone https://github.com/google/googletest.git -b release-1.8.0 --depth 1 \\\n && mkdir -p googletest/_build \\\n && cd googletest/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#  rocksdb\nRUN git clone https://github.com/facebook/rocksdb.git -b v5.12.4 --depth 1 \\\n && mkdir -p rocksdb/_build \\\n && cd rocksdb/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#  zmqlib\nRUN git clone https://github.com/zeromq/libzmq.git -b v4.2.3 --depth 1 \\\n && mkdir -p libzmq/_build \\\n && cd libzmq/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#  cppzmq\nRUN git clone https://github.com/zeromq/cppzmq.git -b v4.2.3 --depth 1 \\\n && mkdir -p cppzmq/_build \\\n && cd cppzmq/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#  mongo-c\nRUN git clone https://github.com/mongodb/mongo-c-driver.git -b 1.4.3 --depth 1 \\\n && cd mongo-c-driver \\\n && ./autogen.sh \\\n && ./configure --disable-automatic-init-and-cleanup --prefix=/usr/local \\\n && make -j4 \\\n && make install \\\n && cd -\n# RUN wget https://github.com/mongodb/mongo-c-driver/releases/download/1.4.2/mongo-c-driver-1.4.2.tar.gz \\\n#   && tar xzf mongo-c-driver-1.4.2.tar.gz && cd mongo-c-driver-1.4.2 \\\n#   && ./configure --disable-automatic-init-and-cleanup --prefix=/usr/local \\\n#   && make -j4 && make install \\\n#   && cd -\n#  mongo-cxx\nRUN git clone https://github.com/mongodb/mongo-cxx-driver.git -b r3.0.2 --depth 1 \\\n && cd mongo-cxx-driver/build \\\n && cmake -DBSONCXX_POLY_USE_BOOST=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#  catapult\nRUN git clone https://github.com/nemtech/catapult-server.git -b master --depth 1 \\\n && cd catapult-server \\\n && mkdir _build \\\n && cd _build \\\n && cmake -DCMAKE_BUILD_TYPE=RelWithDebugInfo -DCMAKE_CXX_FLAGS=\"-pthread\" -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBSONCXX_LIB=/usr/local/lib/libbsoncxx.so -DMONGOCXX_LIB=/usr/local/lib/libmongocxx.so .. \\\n && make publish \\\n && make -j4\n#  ------------------------------------\n#  ここから先は作業用に都合よくやっている\n#  行儀が良いとは思ってないよ\nCOPY patch/config-user.patch .\nRUN cd catapult-server \\\n && patch -p1 < /tmp/config-user.patch \\\n && mkdir -p seed/mijin-test \\\n && mkdir data \\\n && cd _build \\\n && mv resources resources.bk \\\n && cp -r ../resources .\n#  generate nemesis block\n#  && ./bin/catapult.tools.nemgen ../tools/nemgen/resources/mijin-test.properties \\\n#  && cp -r ../seed/mijin-test/00000 ../data/\nWORKDIR catapult-server/_build\n","injectedSmells":[],"originalDockerfileHash":"13f8c36c7c2a7d8c71bba6c1334bca91","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Yoshiyuki Ieyama <44uk@github.com>\nWORKDIR /tmp\nRUN sed -i.bak -e \"s%http://[^ ]\\+%http://linux.yz.yamagata-u.ac.jp/ubuntu/%g\" /etc/apt/sources.list\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get clean \\\n && apt-get install --no-install-recommends git curl wget vim autoconf automake apt-file build-essential software-properties-common pkg-config python3 libc6-dev libssl-dev libsasl2-dev libtool -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   gcc,g++ 7\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-7 g++-7 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm /usr/bin/gcc /usr/bin/g++ \\\n && ln -s /usr/bin/gcc-7 /usr/bin/gcc \\\n && ln -s /usr/bin/g++-7 /usr/bin/g++\n#   cmake\nRUN git clone https://gitlab.kitware.com/cmake/cmake.git -b v3.11.1 --depth 1 \\\n && cd cmake \\\n && ./bootstrap --prefix=/usr/local \\\n && make -j4 \\\n && make install \\\n && cd -\n#   boost\nRUN wget https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz \\\n && tar xzf boost_1_65_1.tar.gz \\\n && cd boost_1_65_1 \\\n && ./bootstrap.sh \\\n && ./b2 toolset=gcc install --prefix=/usr/local -j4 \\\n && cd -\n#   gtest\nRUN git clone https://github.com/google/googletest.git -b release-1.8.0 --depth 1 \\\n && mkdir -p googletest/_build \\\n && cd googletest/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   rocksdb\nRUN git clone https://github.com/facebook/rocksdb.git -b v5.12.4 --depth 1 \\\n && mkdir -p rocksdb/_build \\\n && cd rocksdb/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   zmqlib\nRUN git clone https://github.com/zeromq/libzmq.git -b v4.2.3 --depth 1 \\\n && mkdir -p libzmq/_build \\\n && cd libzmq/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   cppzmq\nRUN git clone https://github.com/zeromq/cppzmq.git -b v4.2.3 --depth 1 \\\n && mkdir -p cppzmq/_build \\\n && cd cppzmq/_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   mongo-c\nRUN git clone https://github.com/mongodb/mongo-c-driver.git -b 1.4.3 --depth 1 \\\n && cd mongo-c-driver \\\n && ./autogen.sh \\\n && ./configure --disable-automatic-init-and-cleanup --prefix=/usr/local \\\n && make -j4 \\\n && make install \\\n && cd -\n#  RUN wget https://github.com/mongodb/mongo-c-driver/releases/download/1.4.2/mongo-c-driver-1.4.2.tar.gz \\\n#    && tar xzf mongo-c-driver-1.4.2.tar.gz && cd mongo-c-driver-1.4.2 \\\n#    && ./configure --disable-automatic-init-and-cleanup --prefix=/usr/local \\\n#    && make -j4 && make install \\\n#    && cd -\n#   mongo-cxx\nRUN git clone https://github.com/mongodb/mongo-cxx-driver.git -b r3.0.2 --depth 1 \\\n && cd mongo-cxx-driver/build \\\n && cmake -DBSONCXX_POLY_USE_BOOST=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j4 \\\n && make install \\\n && cd -\n#   catapult\nRUN git clone https://github.com/nemtech/catapult-server.git -b master --depth 1 \\\n && cd catapult-server \\\n && mkdir _build \\\n && cd _build \\\n && cmake -DCMAKE_BUILD_TYPE=RelWithDebugInfo -DCMAKE_CXX_FLAGS=\"-pthread\" -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBSONCXX_LIB=/usr/local/lib/libbsoncxx.so -DMONGOCXX_LIB=/usr/local/lib/libmongocxx.so .. \\\n && make publish \\\n && make -j4\n#   ------------------------------------\n#   ここから先は作業用に都合よくやっている\n#   行儀が良いとは思ってないよ\nCOPY patch/config-user.patch .\nRUN cd catapult-server \\\n && patch -p1 < /tmp/config-user.patch \\\n && mkdir -p seed/mijin-test \\\n && mkdir data \\\n && cd _build \\\n && mv resources resources.bk \\\n && cp -r ../resources .\n#   generate nemesis block\n#   && ./bin/catapult.tools.nemgen ../tools/nemgen/resources/mijin-test.properties \\\n#   && cp -r ../seed/mijin-test/00000 ../data/\nWORKDIR catapult-server/_build\n","originalDockerfileUglifiedHash":"8124833c019808509f7b409ef1246e54","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/adf15b759ab69f0144f12fc740c956d9e1dcabd1.dockerfile"}