{"seed":4126904625,"processedDockerfileHash":"a0b76ccba16b4f357f32767f6a62bd62","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:0.10.2\nVOLUME /srv/rukzuk/htdocs/cms\n#   proposed breaks some php packages (e.g. php-intl)\nRUN rm -rf /etc/apt/sources.list.d/proposed.list\n#   phusion/baseimage is not always up to date. :-(\nRUN : \\\n && apt-get dist-upgrade -y --no-install-recommends\n#   Set Timezone\nRUN echo \"Europe/Berlin\" > /etc/timezone\n#   Install Depencies\nRUN (apt-get update ;apt-get install --no-install-recommends tzdata sudo -y )\nRUN dpkg-reconfigure --frontend noninteractive tzdata\n#   Make Debian/Ubuntu and Docker friends\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   install phantomjs\nRUN (apt-get update ;apt-get install --no-install-recommends phantomjs -y )\n#   install php 5 source list\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common -y ) \\\n && add-apt-repository ppa:ondrej/php \\\n && apt-get update\n#   Install Apache httpd\nRUN (apt-get update ;apt-get install --no-install-recommends sqlite3 apache2 libapache2-mod-php5.6 libv8-3.14.5 msmtp msmtp-mta php5.6 php5.6-sqlite php5.6-cli php5.6-curl php5.6-gd php5.6-intl php5.6-mcrypt -y )\n#   Activate Apache mods\nRUN a2enmod ssl \\\n && a2enmod rewrite\n#   Activate PHP mods\nRUN phpenmod mcrypt\n#   Install php5-v8js\nCOPY v8js_0.1.3-1_amd64.deb /tmp/php5-v8js.deb\nRUN dpkg -i /tmp/php5-v8js.deb\nRUN echo \"extension=v8js.so\" >> /etc/php/5.6/apache2/conf.d/v8js.ini\nRUN echo \"extension=v8js.so\" >> /etc/php/5.6/cli/conf.d/v8js.ini\n#   Activate apache2 in runit\nRUN mkdir -p /etc/service/apache2\nCOPY apache2.runit /etc/service/apache2/run\nRUN chmod +x /etc/service/apache2/run\n#   Create folder\nENV CMS_PATH=\"/opt/rukzuk/htdocs\"\nENV INSTANCE_PATH=\"/srv/rukzuk\"\nRUN mkdir -p ${CMS_PATH}\nRUN mkdir -p ${INSTANCE_PATH}/htdocs/cms\nRUN chown -R www-data:www-data ${INSTANCE_PATH}/htdocs\n#   Install the release/cmsrelase.tar.gz (a version from our Jenkins)\nCOPY release/ /tmp/rukzuk_release/\nRUN if [ -e /tmp/rukzuk_release/cmsrelease.tar.gz ] ; then tar -xf /tmp/rukzuk_release/cmsrelease.tar.gz -C ${CMS_PATH}/.. --strip 1 ; fi\nRUN if [ -e /tmp/rukzuk_release/ ] ; then rm -Rf /tmp/rukzuk_release/ ; fi\nRUN ln -s ${CMS_PATH}/app/server/environment ${INSTANCE_PATH}/environment\nRUN ln -s ${CMS_PATH} ${INSTANCE_PATH}/application\n#   Initial\nENV APPLICATION_ENV=\"standalone\"\nENV CMS_SQLITE_DB=\"${INSTANCE_PATH}/htdocs/cms/db.sqlite3\"\nCOPY config.php ${INSTANCE_PATH}/config.php\nCOPY cms.apache /etc/apache2/sites-available/000-default.conf\nRUN mkdir -p /etc/my_init.d\nCOPY init.sh /etc/my_init.d/rukzuk_init.sh\nRUN chmod +x /etc/my_init.d/rukzuk_init.sh\nCOPY msmtprc.tpl /etc/msmtprc.tpl\nEXPOSE 80/tcp\n#   >>DEVVM>> do not remove this marker (used at jenkins)\n#\n#   Stuff for development\n#\nRUN (apt-get update ;apt-get install --no-install-recommends php5-dev -y )\n#\n#   Stuff for vagrant below\n#\n#   Create user\nENV USERNAME=\"vagrant\"\nRUN useradd --create-home -s /bin/bash $USERNAME\nRUN gpasswd -a vagrant www-data\n#   Configure user - SSH access\nRUN rm -f /etc/service/sshd/down\nRUN mkdir -p /home/$USERNAME/.ssh \\\n && echo \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== $USERNAME insecure public key\" > /home/$USERNAME/.ssh/authorized_keys \\\n && chmod 700 /home/$USERNAME/.ssh \\\n && echo -n \"$USERNAME:$USERNAME\" | chpasswd \\\n && touch /home/$USERNAME/.hushlogin \\\n && chown -R $USERNAME:$USERNAME /home/$USERNAME/ \\\n && mkdir -p /etc/sudoers.d \\\n && echo \"$USERNAME ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$USERNAME \\\n && chmod 0440 /etc/sudoers.d/$USERNAME\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:0.10.2\nVOLUME /srv/rukzuk/htdocs/cms\n#  proposed breaks some php packages (e.g. php-intl)\nRUN rm -rf /etc/apt/sources.list.d/proposed.list\n#  phusion/baseimage is not always up to date. :-(\nRUN apt-get update \\\n && apt-get dist-upgrade -y --no-install-recommends\n#  Set Timezone\nRUN echo \"Europe/Berlin\" > /etc/timezone\n#  Install Depencies\nRUN apt-get install --no-install-recommends tzdata sudo -y\nRUN dpkg-reconfigure --frontend noninteractive tzdata\n#  Make Debian/Ubuntu and Docker friends\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  install phantomjs\nRUN apt-get install --no-install-recommends phantomjs -y\n#  install php 5 source list\nRUN apt-get install --no-install-recommends software-properties-common -y \\\n && add-apt-repository ppa:ondrej/php \\\n && apt-get update\n#  Install Apache httpd\nRUN apt-get install --no-install-recommends sqlite3 apache2 libapache2-mod-php5.6 libv8-3.14.5 msmtp msmtp-mta php5.6 php5.6-sqlite php5.6-cli php5.6-curl php5.6-gd php5.6-intl php5.6-mcrypt -y\n#  Activate Apache mods\nRUN a2enmod ssl \\\n && a2enmod rewrite\n#  Activate PHP mods\nRUN phpenmod mcrypt\n#  Install php5-v8js\nCOPY v8js_0.1.3-1_amd64.deb /tmp/php5-v8js.deb\nRUN dpkg -i /tmp/php5-v8js.deb\nRUN echo \"extension=v8js.so\" >> /etc/php/5.6/apache2/conf.d/v8js.ini\nRUN echo \"extension=v8js.so\" >> /etc/php/5.6/cli/conf.d/v8js.ini\n#  Activate apache2 in runit\nRUN mkdir -p /etc/service/apache2\nCOPY apache2.runit /etc/service/apache2/run\nRUN chmod +x /etc/service/apache2/run\n#  Create folder\nENV CMS_PATH=\"/opt/rukzuk/htdocs\"\nENV INSTANCE_PATH=\"/srv/rukzuk\"\nRUN mkdir -p ${CMS_PATH}\nRUN mkdir -p ${INSTANCE_PATH}/htdocs/cms\nRUN chown -R www-data:www-data ${INSTANCE_PATH}/htdocs\n#  Install the release/cmsrelase.tar.gz (a version from our Jenkins)\nCOPY release/ /tmp/rukzuk_release/\nRUN if [ -e /tmp/rukzuk_release/cmsrelease.tar.gz ] ; then tar -xf /tmp/rukzuk_release/cmsrelease.tar.gz -C ${CMS_PATH}/.. --strip 1 ; fi\nRUN if [ -e /tmp/rukzuk_release/ ] ; then rm -Rf /tmp/rukzuk_release/ ; fi\nRUN ln -s ${CMS_PATH}/app/server/environment ${INSTANCE_PATH}/environment\nRUN ln -s ${CMS_PATH} ${INSTANCE_PATH}/application\n#  Initial\nENV APPLICATION_ENV=\"standalone\"\nENV CMS_SQLITE_DB=\"${INSTANCE_PATH}/htdocs/cms/db.sqlite3\"\nCOPY config.php ${INSTANCE_PATH}/config.php\nCOPY cms.apache /etc/apache2/sites-available/000-default.conf\nRUN mkdir -p /etc/my_init.d\nCOPY init.sh /etc/my_init.d/rukzuk_init.sh\nRUN chmod +x /etc/my_init.d/rukzuk_init.sh\nCOPY msmtprc.tpl /etc/msmtprc.tpl\nEXPOSE 80/tcp\n#  >>DEVVM>> do not remove this marker (used at jenkins)\n#\n#  Stuff for development\n#\nRUN apt-get install --no-install-recommends php5-dev -y\n#\n#  Stuff for vagrant below\n#\n#  Create user\nENV USERNAME=\"vagrant\"\nRUN useradd --create-home -s /bin/bash $USERNAME\nRUN gpasswd -a vagrant www-data\n#  Configure user - SSH access\nRUN rm -f /etc/service/sshd/down\nRUN mkdir -p /home/$USERNAME/.ssh \\\n && echo \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== $USERNAME insecure public key\" > /home/$USERNAME/.ssh/authorized_keys \\\n && chmod 700 /home/$USERNAME/.ssh \\\n && echo -n \"$USERNAME:$USERNAME\" | chpasswd \\\n && touch /home/$USERNAME/.hushlogin \\\n && chown -R $USERNAME:$USERNAME /home/$USERNAME/ \\\n && mkdir -p /etc/sudoers.d \\\n && echo \"$USERNAME ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$USERNAME \\\n && chmod 0440 /etc/sudoers.d/$USERNAME\n","injectedSmells":[],"originalDockerfileHash":"18839ecd5c89f298f5b84690f5fb9131","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:0.10.2\nVOLUME /srv/rukzuk/htdocs/cms\n#   proposed breaks some php packages (e.g. php-intl)\nRUN rm -rf /etc/apt/sources.list.d/proposed.list\n#   phusion/baseimage is not always up to date. :-(\nRUN apt-get update \\\n && apt-get dist-upgrade -y --no-install-recommends\n#   Set Timezone\nRUN echo \"Europe/Berlin\" > /etc/timezone\n#   Install Depencies\nRUN apt-get install --no-install-recommends tzdata sudo -y\nRUN dpkg-reconfigure --frontend noninteractive tzdata\n#   Make Debian/Ubuntu and Docker friends\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   install phantomjs\nRUN apt-get install --no-install-recommends phantomjs -y\n#   install php 5 source list\nRUN apt-get install --no-install-recommends software-properties-common -y \\\n && add-apt-repository ppa:ondrej/php \\\n && apt-get update\n#   Install Apache httpd\nRUN apt-get install --no-install-recommends sqlite3 apache2 libapache2-mod-php5.6 libv8-3.14.5 msmtp msmtp-mta php5.6 php5.6-sqlite php5.6-cli php5.6-curl php5.6-gd php5.6-intl php5.6-mcrypt -y\n#   Activate Apache mods\nRUN a2enmod ssl \\\n && a2enmod rewrite\n#   Activate PHP mods\nRUN phpenmod mcrypt\n#   Install php5-v8js\nCOPY v8js_0.1.3-1_amd64.deb /tmp/php5-v8js.deb\nRUN dpkg -i /tmp/php5-v8js.deb\nRUN echo \"extension=v8js.so\" >> /etc/php/5.6/apache2/conf.d/v8js.ini\nRUN echo \"extension=v8js.so\" >> /etc/php/5.6/cli/conf.d/v8js.ini\n#   Activate apache2 in runit\nRUN mkdir -p /etc/service/apache2\nCOPY apache2.runit /etc/service/apache2/run\nRUN chmod +x /etc/service/apache2/run\n#   Create folder\nENV CMS_PATH=\"/opt/rukzuk/htdocs\"\nENV INSTANCE_PATH=\"/srv/rukzuk\"\nRUN mkdir -p ${CMS_PATH}\nRUN mkdir -p ${INSTANCE_PATH}/htdocs/cms\nRUN chown -R www-data:www-data ${INSTANCE_PATH}/htdocs\n#   Install the release/cmsrelase.tar.gz (a version from our Jenkins)\nCOPY release/ /tmp/rukzuk_release/\nRUN if [ -e /tmp/rukzuk_release/cmsrelease.tar.gz ] ; then tar -xf /tmp/rukzuk_release/cmsrelease.tar.gz -C ${CMS_PATH}/.. --strip 1 ; fi\nRUN if [ -e /tmp/rukzuk_release/ ] ; then rm -Rf /tmp/rukzuk_release/ ; fi\nRUN ln -s ${CMS_PATH}/app/server/environment ${INSTANCE_PATH}/environment\nRUN ln -s ${CMS_PATH} ${INSTANCE_PATH}/application\n#   Initial\nENV APPLICATION_ENV=\"standalone\"\nENV CMS_SQLITE_DB=\"${INSTANCE_PATH}/htdocs/cms/db.sqlite3\"\nCOPY config.php ${INSTANCE_PATH}/config.php\nCOPY cms.apache /etc/apache2/sites-available/000-default.conf\nRUN mkdir -p /etc/my_init.d\nCOPY init.sh /etc/my_init.d/rukzuk_init.sh\nRUN chmod +x /etc/my_init.d/rukzuk_init.sh\nCOPY msmtprc.tpl /etc/msmtprc.tpl\nEXPOSE 80/tcp\n#   >>DEVVM>> do not remove this marker (used at jenkins)\n#\n#   Stuff for development\n#\nRUN apt-get install --no-install-recommends php5-dev -y\n#\n#   Stuff for vagrant below\n#\n#   Create user\nENV USERNAME=\"vagrant\"\nRUN useradd --create-home -s /bin/bash $USERNAME\nRUN gpasswd -a vagrant www-data\n#   Configure user - SSH access\nRUN rm -f /etc/service/sshd/down\nRUN mkdir -p /home/$USERNAME/.ssh \\\n && echo \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== $USERNAME insecure public key\" > /home/$USERNAME/.ssh/authorized_keys \\\n && chmod 700 /home/$USERNAME/.ssh \\\n && echo -n \"$USERNAME:$USERNAME\" | chpasswd \\\n && touch /home/$USERNAME/.hushlogin \\\n && chown -R $USERNAME:$USERNAME /home/$USERNAME/ \\\n && mkdir -p /etc/sudoers.d \\\n && echo \"$USERNAME ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$USERNAME \\\n && chmod 0440 /etc/sudoers.d/$USERNAME\n","originalDockerfileUglifiedHash":"307419e5f95f3c9cf61dde5802308642","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/53da195f4f55534da78bdfda679a3cd2c72a3c7a.dockerfile"}