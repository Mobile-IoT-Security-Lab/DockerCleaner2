{"seed":776977646,"processedDockerfileHash":"cf564ca08e36388e728f36e91810a2fc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nEXPOSE 80/tcp 5000/tcp 8773/tcp 8774/tcp 8775/tcp 8776/tcp 9292/tcp\n#   Suppress unwanted debconf messages and questions during build\nARG DEBIAN_FRONTEND=noninteractive\n#  ####################################################################\n#   Systemd workaround from solita/ubuntu-systemd and moby/moby#28614 #\n#  ####################################################################\nENV container=\"docker\"\n#   No need for graphical.target\nRUN systemctl set-default multi-user.target\n#   Gracefully stop systemd\nSTOPSIGNAL SIGRTMIN+3\n#   Cleanup unneeded services\nRUN find /etc/systemd/system /lib/systemd/system -path '*.wants/*' -not -name '*journald*' -not -name '*systemd-tmpfiles*' -not -name '*systemd-user-sessions*' -exec rm {}\n#   Workaround for console output error moby/moby#27202, based on moby/moby#9212\nCMD [\"/bin/bash\", \"-c\", \"exec\", \"/sbin/init\", \"--log-target=journal\", \"3>&1\"]\n#  ###################\n#   DevStack Preload #\n#  ###################\n#   Get Missing External System Dependencies for DevStack Setup\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20210119~16.04.1 git=1:2.7.4-0ubuntu1.10 iproute2=4.3.0-1ubuntu3.16.04.5 liberasurecode-dev=1.1.0-3 libnss3-dev=2:3.28.4-0ubuntu0.16.04.14 libsystemd-dev=229-4ubuntu21.31 libvirt-dev=1.3.1-1ubuntu10.31 lsb=9.20160110ubuntu0.2 net-tools=1.60-26ubuntu1 python-virtualenv=15.0.1+ds-3ubuntu1.1 software-properties-common=0.96.20.10 --assume-yes \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nARG DEVSTACK_BRANCH=\"master\"\nARG PROJECTS_BRANCH=\"master\"\n#   This OpenStack project repositories will be downloaded\nARG PROJECTS=\"  keystone  nova  neutron  glance  horizon  zun  zun-ui  kuryr-libnetwork  \"\n#   Clone DevStack, Requirements and OpenStack (Core) Projects\n#    - To properly detect a container environment,\n#      we need at least openstack-dev/devstack/commit/63666a2\nRUN git clone git://git.openstack.org/openstack-dev/devstack --branch $DEVSTACK_BRANCH \\\n && git clone git://git.openstack.org/openstack/requirements --branch $DEVSTACK_BRANCH /opt/stack/requirements \\\n && for PROJECT in $PROJECTS; do git clone git://git.openstack.org/openstack/$PROJECT.git /opt/stack/$PROJECT --branch $PROJECTS_BRANCH --depth 1 --single-branch ; done\n#   Pre-Install DevStack System Dependencies to Speedup Docker Run\nRUN /devstack/tools/install_prereqs.sh \\\n && echo 'mysql-server mysql-server/root_password password secret' | debconf-set-selections \\\n && echo 'mysql-server mysql-server/root_password_again password secret' | debconf-set-selections \\\n && apt-get update \\\n && apt-get install --no-install-recommends mysql-server=5.7.33-0ubuntu0.16.04.1 rabbitmq-server=3.5.7-1ubuntu0.16.04.4 --assume-yes \\\n && service mysql start \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install external pip, resolving missing python-setuptools and wheel errors\nRUN curl --silent --show-error https://bootstrap.pypa.io/get-pip.py | python\n#   Solve dependency conflict for urllib3 with pre-installed requests\nRUN pip install requests==2.28.2 --upgrade --force-reinstall\n#   Install known working Python packages\nRUN pip install /opt/stack/requirements/upper-constraints.txt --no-cache-dir --constraint --requirement /opt/stack/requirements/global-requirements.txt --requirement /opt/stack/requirements/test-requirements.txt\n#   Setup non-Root user \"stack\", as required by stack.sh\nRUN useradd --shell /bin/bash --home-dir /opt/stack/ stack \\\n && echo \"stack ALL=(ALL) NOPASSWD: ALL\" | tee /etc/sudoers.d/stack \\\n && sudo chown --recursive stack /devstack/\n#   Copy DevStack configuration, if file has changed\nCOPY local.conf /devstack/\n#   This container starts systemd, so do not add an additional Docker CMD!\n#   Place any post-start calls in the Makefile.\n#   Actual DevStack setup has to happen in a running container,\n#   because of missing privileges during Docker build.\n#   Thats's right, we add ARGs and dependent labels at the end, because they will change on every build\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"DockStack\" \\\n      org.label-schema.description=\"Docker on DevStack on Docker\" \\\n      org.label-schema.version=\"$VERSION-$BUILD_DATE-git-$VCS_REF\" \\\n      org.label-schema.vendor=\"Jan Mattfeld\" \\\n      org.label-schema.vcs-url=\"https://github.com/janmattfeld/DockStack\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.docker.cmd=\"docker run --privileged --detach devstack \" \\\n      org.label-schema.docker.params=\"DEVSTACK_BRANCH, PROJECTS_BRANCH, PROJECTS\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nEXPOSE 80/tcp 5000/tcp 8773/tcp 8774/tcp 8775/tcp 8776/tcp 9292/tcp\n#  Suppress unwanted debconf messages and questions during build\nARG DEBIAN_FRONTEND=noninteractive\n# ####################################################################\n#  Systemd workaround from solita/ubuntu-systemd and moby/moby#28614 #\n# ####################################################################\nENV container=\"docker\"\n#  No need for graphical.target\nRUN systemctl set-default multi-user.target\n#  Gracefully stop systemd\nSTOPSIGNAL SIGRTMIN+3\n#  Cleanup unneeded services\nRUN find /etc/systemd/system /lib/systemd/system -path '*.wants/*' -not -name '*journald*' -not -name '*systemd-tmpfiles*' -not -name '*systemd-user-sessions*' -exec rm {} ;\n#  Workaround for console output error moby/moby#27202, based on moby/moby#9212\nCMD [\"/bin/bash\", \"-c\", \"exec\", \"/sbin/init\", \"--log-target=journal\", \"3>&1\"]\n# ###################\n#  DevStack Preload #\n# ###################\n#  Get Missing External System Dependencies for DevStack Setup\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates git iproute2 liberasurecode-dev libnss3-dev libsystemd-dev libvirt-dev lsb net-tools python-virtualenv software-properties-common --assume-yes \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nARG DEVSTACK_BRANCH=\"master\"\nARG PROJECTS_BRANCH=\"master\"\n#  This OpenStack project repositories will be downloaded\nARG PROJECTS=\"  keystone  nova  neutron  glance  horizon  zun  zun-ui  kuryr-libnetwork  \"\n#  Clone DevStack, Requirements and OpenStack (Core) Projects\n#   - To properly detect a container environment,\n#     we need at least openstack-dev/devstack/commit/63666a2\nRUN git clone git://git.openstack.org/openstack-dev/devstack --branch $DEVSTACK_BRANCH \\\n && git clone git://git.openstack.org/openstack/requirements --branch $DEVSTACK_BRANCH /opt/stack/requirements \\\n && for PROJECT in $PROJECTS; do git clone git://git.openstack.org/openstack/$PROJECT.git /opt/stack/$PROJECT --branch $PROJECTS_BRANCH --depth 1 --single-branch ; done\n#  Pre-Install DevStack System Dependencies to Speedup Docker Run\nRUN /devstack/tools/install_prereqs.sh \\\n && echo 'mysql-server mysql-server/root_password password secret' | debconf-set-selections \\\n && echo 'mysql-server mysql-server/root_password_again password secret' | debconf-set-selections \\\n && apt-get update \\\n && apt-get install --no-install-recommends mysql-server rabbitmq-server --assume-yes \\\n && service mysql start \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Install external pip, resolving missing python-setuptools and wheel errors\nRUN curl --silent --show-error https://bootstrap.pypa.io/get-pip.py | python\n#  Solve dependency conflict for urllib3 with pre-installed requests\nRUN pip install requests --upgrade --force-reinstall\n#  Install known working Python packages\nRUN pip install /opt/stack/requirements/upper-constraints.txt --no-cache-dir --constraint --requirement /opt/stack/requirements/global-requirements.txt --requirement /opt/stack/requirements/test-requirements.txt\n#  Setup non-Root user \"stack\", as required by stack.sh\nRUN useradd --shell /bin/bash --home-dir /opt/stack/ stack \\\n && echo \"stack ALL=(ALL) NOPASSWD: ALL\" | tee /etc/sudoers.d/stack \\\n && sudo chown --recursive stack /devstack/\n#  Copy DevStack configuration, if file has changed\nCOPY local.conf /devstack/\n#  This container starts systemd, so do not add an additional Docker CMD!\n#  Place any post-start calls in the Makefile.\n#  Actual DevStack setup has to happen in a running container,\n#  because of missing privileges during Docker build.\n#  Thats's right, we add ARGs and dependent labels at the end, because they will change on every build\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"DockStack\" \\\n      org.label-schema.description=\"Docker on DevStack on Docker\" \\\n      org.label-schema.version=\"$VERSION-$BUILD_DATE-git-$VCS_REF\" \\\n      org.label-schema.vendor=\"Jan Mattfeld\" \\\n      org.label-schema.vcs-url=\"https://github.com/janmattfeld/DockStack\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.docker.cmd=\"docker run --privileged --detach devstack \" \\\n      org.label-schema.docker.params=\"DEVSTACK_BRANCH, PROJECTS_BRANCH, PROJECTS\" \\\n      org.label-schema.schema-version=\"1.0\"\n","injectedSmells":[],"originalDockerfileHash":"084a59c9321d3679a9cbc8602e4fbcee","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nEXPOSE 80/tcp 5000/tcp 8773/tcp 8774/tcp 8775/tcp 8776/tcp 9292/tcp\n#   Suppress unwanted debconf messages and questions during build\nARG DEBIAN_FRONTEND=noninteractive\n#  ####################################################################\n#   Systemd workaround from solita/ubuntu-systemd and moby/moby#28614 #\n#  ####################################################################\nENV container=\"docker\"\n#   No need for graphical.target\nRUN systemctl set-default multi-user.target\n#   Gracefully stop systemd\nSTOPSIGNAL SIGRTMIN+3\n#   Cleanup unneeded services\nRUN find /etc/systemd/system /lib/systemd/system -path '*.wants/*' -not -name '*journald*' -not -name '*systemd-tmpfiles*' -not -name '*systemd-user-sessions*' -exec rm {}\n#   Workaround for console output error moby/moby#27202, based on moby/moby#9212\nCMD [\"/bin/bash\", \"-c\", \"exec\", \"/sbin/init\", \"--log-target=journal\", \"3>&1\"]\n#  ###################\n#   DevStack Preload #\n#  ###################\n#   Get Missing External System Dependencies for DevStack Setup\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates git iproute2 liberasurecode-dev libnss3-dev libsystemd-dev libvirt-dev lsb net-tools python-virtualenv software-properties-common --assume-yes \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nARG DEVSTACK_BRANCH=\"master\"\nARG PROJECTS_BRANCH=\"master\"\n#   This OpenStack project repositories will be downloaded\nARG PROJECTS=\"  keystone  nova  neutron  glance  horizon  zun  zun-ui  kuryr-libnetwork  \"\n#   Clone DevStack, Requirements and OpenStack (Core) Projects\n#    - To properly detect a container environment,\n#      we need at least openstack-dev/devstack/commit/63666a2\nRUN git clone git://git.openstack.org/openstack-dev/devstack --branch $DEVSTACK_BRANCH \\\n && git clone git://git.openstack.org/openstack/requirements --branch $DEVSTACK_BRANCH /opt/stack/requirements \\\n && for PROJECT in $PROJECTS; do git clone git://git.openstack.org/openstack/$PROJECT.git /opt/stack/$PROJECT --branch $PROJECTS_BRANCH --depth 1 --single-branch ; done\n#   Pre-Install DevStack System Dependencies to Speedup Docker Run\nRUN /devstack/tools/install_prereqs.sh \\\n && echo 'mysql-server mysql-server/root_password password secret' | debconf-set-selections \\\n && echo 'mysql-server mysql-server/root_password_again password secret' | debconf-set-selections \\\n && apt-get update \\\n && apt-get install --no-install-recommends mysql-server rabbitmq-server --assume-yes \\\n && service mysql start \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install external pip, resolving missing python-setuptools and wheel errors\nRUN curl --silent --show-error https://bootstrap.pypa.io/get-pip.py | python\n#   Solve dependency conflict for urllib3 with pre-installed requests\nRUN pip install requests --upgrade --force-reinstall\n#   Install known working Python packages\nRUN pip install /opt/stack/requirements/upper-constraints.txt --no-cache-dir --constraint --requirement /opt/stack/requirements/global-requirements.txt --requirement /opt/stack/requirements/test-requirements.txt\n#   Setup non-Root user \"stack\", as required by stack.sh\nRUN useradd --shell /bin/bash --home-dir /opt/stack/ stack \\\n && echo \"stack ALL=(ALL) NOPASSWD: ALL\" | tee /etc/sudoers.d/stack \\\n && sudo chown --recursive stack /devstack/\n#   Copy DevStack configuration, if file has changed\nCOPY local.conf /devstack/\n#   This container starts systemd, so do not add an additional Docker CMD!\n#   Place any post-start calls in the Makefile.\n#   Actual DevStack setup has to happen in a running container,\n#   because of missing privileges during Docker build.\n#   Thats's right, we add ARGs and dependent labels at the end, because they will change on every build\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"DockStack\" \\\n      org.label-schema.description=\"Docker on DevStack on Docker\" \\\n      org.label-schema.version=\"$VERSION-$BUILD_DATE-git-$VCS_REF\" \\\n      org.label-schema.vendor=\"Jan Mattfeld\" \\\n      org.label-schema.vcs-url=\"https://github.com/janmattfeld/DockStack\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.docker.cmd=\"docker run --privileged --detach devstack \" \\\n      org.label-schema.docker.params=\"DEVSTACK_BRANCH, PROJECTS_BRANCH, PROJECTS\" \\\n      org.label-schema.schema-version=\"1.0\"\n","originalDockerfileUglifiedHash":"33e8acc961e0cd2135030e6d62996af5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3b5621824600895a46101a16e9ee8b93a02a2628.dockerfile"}