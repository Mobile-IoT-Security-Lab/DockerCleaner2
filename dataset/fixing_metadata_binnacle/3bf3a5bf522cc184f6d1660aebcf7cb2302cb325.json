{"seed":488341376,"processedDockerfileHash":"a80f18afe1ce67f060d374e78ef2c30d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  upstream https://github.com/kwk/docker-registry-frontend\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\nUSER root\n#  ###########################################################\n#   Setup environment variables\n#  ###########################################################\nENV WWW_DIR=\"/var/www/html\"\nENV SOURCE_DIR=\"/tmp/source\"\nENV START_SCRIPT=\"/root/start-apache.sh\"\nRUN mkdir -pv $WWW_DIR\n#  ###########################################################\n#   Speedup DPKG and don't use cache for packages\n#  ###########################################################\n#   Taken from here: https://gist.github.com/kwk/55bb5b6a4b7457bef38d\n#\n#   this forces dpkg not to call sync() after package extraction and speeds up\n#   install\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup\n#   # we don't need and apt cache in a container\nRUN echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache\n#  ###########################################################\n#   Create dirs\nRUN mkdir -p $SOURCE_DIR/dist $SOURCE_DIR/app $SOURCE_DIR/test $SOURCE_DIR/.git\n#   Add dirs\nCOPY app $SOURCE_DIR/app\nCOPY test $SOURCE_DIR/test\n#   Dot files\nCOPY .jshintrc $SOURCE_DIR/\nCOPY .bowerrc $SOURCE_DIR/\nCOPY .editorconfig $SOURCE_DIR/\nCOPY .travis.yml $SOURCE_DIR/\n#   Other files\nCOPY bower.json $SOURCE_DIR/\nCOPY Gruntfile.js $SOURCE_DIR/\nCOPY LICENSE $SOURCE_DIR/\nCOPY package.json $SOURCE_DIR/\nCOPY README.md $SOURCE_DIR/\n#   Add some git files for versioning\nCOPY .git/HEAD $SOURCE_DIR/.git/HEAD\nCOPY .git/refs $SOURCE_DIR/.git/refs\n#  ###########################################################\n#   Install and configure webserver software\n#  ###########################################################\nRUN apt-get update -y \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && (apt-get update ;apt-get install --no-install-recommends apache2 bzip2 libapache2-mod-auth-kerb libapache2-mod-proxy-html git nodejs nodejs-legacy npm -y ) \\\n && a2enmod proxy \\\n && a2enmod proxy_http \\\n && cd $SOURCE_DIR \\\n && export GITREF=$( cat .git/HEAD | cut -d\" \" -f2 ;) \\\n && export GITSHA1=$( cat .git/$GITREF ;) \\\n && echo \"{\\\"git\\\": {\\\"sha1\\\": \\\"$GITSHA1\\\", \\\"ref\\\": \\\"$GITREF\\\"}}\" > $WWW_DIR/app-version.json \\\n && cd $SOURCE_DIR \\\n && rm -rf $SOURCE_DIR/.git \\\n && git config --global url.\"https://\".insteadOf git:// \\\n && cd $SOURCE_DIR \\\n && npm install \\\n && node_modules/bower/bin/bower install --allow-root \\\n && node_modules/grunt-cli/bin/grunt build --allow-root \\\n && cp -rf $SOURCE_DIR/dist/* $WWW_DIR \\\n && rm -rf $SOURCE_DIR \\\n && apt-get -y --auto-remove purge git nodejs nodejs-legacy npm bzip2 \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\n#  ###########################################################\n#   Add and enable the apache site and disable all other sites\n#  ###########################################################\nRUN a2dissite 000*\nCOPY apache-site.conf /etc/apache2/sites-available/docker-site.conf\nRUN a2ensite docker-site.conf\nCOPY start-apache.sh $START_SCRIPT\nRUN chmod +x $START_SCRIPT\nENV APACHE_RUN_USER=\"www-data\"\nENV APACHE_RUN_GROUP=\"www-data\"\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\n#   Let people know how this was built\nCOPY Dockerfile /root/Dockerfile\n#   Exposed ports\nEXPOSE 80/tcp 443/tcp\nVOLUME [\"/etc/apache2/server.crt\", \"/etc/apache2/server.key\"]\nCMD $START_SCRIPT\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/kwk/docker-registry-frontend\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#  Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  Install required packages\nRUN apt-get dist-upgrade -y\nUSER root\n# ###########################################################\n#  Setup environment variables\n# ###########################################################\nENV WWW_DIR=\"/var/www/html\"\nENV SOURCE_DIR=\"/tmp/source\"\nENV START_SCRIPT=\"/root/start-apache.sh\"\nRUN mkdir -pv $WWW_DIR\n# ###########################################################\n#  Speedup DPKG and don't use cache for packages\n# ###########################################################\n#  Taken from here: https://gist.github.com/kwk/55bb5b6a4b7457bef38d\n#\n#  this forces dpkg not to call sync() after package extraction and speeds up\n#  install\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup\n#  # we don't need and apt cache in a container\nRUN echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache\n# ###########################################################\n#  Create dirs\nRUN mkdir -p $SOURCE_DIR/dist $SOURCE_DIR/app $SOURCE_DIR/test $SOURCE_DIR/.git\n#  Add dirs\nADD app $SOURCE_DIR/app\nADD test $SOURCE_DIR/test\n#  Dot files\nADD .jshintrc $SOURCE_DIR/\nADD .bowerrc $SOURCE_DIR/\nADD .editorconfig $SOURCE_DIR/\nADD .travis.yml $SOURCE_DIR/\n#  Other files\nADD bower.json $SOURCE_DIR/\nADD Gruntfile.js $SOURCE_DIR/\nADD LICENSE $SOURCE_DIR/\nADD package.json $SOURCE_DIR/\nADD README.md $SOURCE_DIR/\n#  Add some git files for versioning\nADD .git/HEAD $SOURCE_DIR/.git/HEAD\nADD .git/refs $SOURCE_DIR/.git/refs\n# ###########################################################\n#  Install and configure webserver software\n# ###########################################################\nRUN apt-get update -y \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get install --no-install-recommends apache2 bzip2 libapache2-mod-auth-kerb libapache2-mod-proxy-html git nodejs nodejs-legacy npm -y \\\n && a2enmod proxy \\\n && a2enmod proxy_http \\\n && cd $SOURCE_DIR \\\n && export GITREF=$( cat .git/HEAD | cut -d\" \" -f2 ;) \\\n && export GITSHA1=$( cat .git/$GITREF ;) \\\n && echo \"{\\\"git\\\": {\\\"sha1\\\": \\\"$GITSHA1\\\", \\\"ref\\\": \\\"$GITREF\\\"}}\" > $WWW_DIR/app-version.json \\\n && cd $SOURCE_DIR \\\n && rm -rf $SOURCE_DIR/.git \\\n && git config --global url.\"https://\".insteadOf git:// \\\n && cd $SOURCE_DIR \\\n && npm install \\\n && node_modules/bower/bin/bower install --allow-root \\\n && node_modules/grunt-cli/bin/grunt build --allow-root \\\n && cp -rf $SOURCE_DIR/dist/* $WWW_DIR \\\n && rm -rf $SOURCE_DIR \\\n && apt-get -y --auto-remove purge git nodejs nodejs-legacy npm bzip2 \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\n# ###########################################################\n#  Add and enable the apache site and disable all other sites\n# ###########################################################\nRUN a2dissite 000*\nADD apache-site.conf /etc/apache2/sites-available/docker-site.conf\nRUN a2ensite docker-site.conf\nADD start-apache.sh $START_SCRIPT\nRUN chmod +x $START_SCRIPT\nENV APACHE_RUN_USER=\"www-data\"\nENV APACHE_RUN_GROUP=\"www-data\"\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\n#  Let people know how this was built\nADD Dockerfile /root/Dockerfile\n#  Exposed ports\nEXPOSE 80/tcp 443/tcp\nVOLUME [\"/etc/apache2/server.crt\", \"/etc/apache2/server.key\"]\nCMD $START_SCRIPT\n","injectedSmells":[],"originalDockerfileHash":"d05331b114b8b6d949753f691d1b7f80","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/kwk/docker-registry-frontend\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\nUSER root\n#  ###########################################################\n#   Setup environment variables\n#  ###########################################################\nENV WWW_DIR=\"/var/www/html\"\nENV SOURCE_DIR=\"/tmp/source\"\nENV START_SCRIPT=\"/root/start-apache.sh\"\nRUN mkdir -pv $WWW_DIR\n#  ###########################################################\n#   Speedup DPKG and don't use cache for packages\n#  ###########################################################\n#   Taken from here: https://gist.github.com/kwk/55bb5b6a4b7457bef38d\n#\n#   this forces dpkg not to call sync() after package extraction and speeds up\n#   install\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup\n#   # we don't need and apt cache in a container\nRUN echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache\n#  ###########################################################\n#   Create dirs\nRUN mkdir -p $SOURCE_DIR/dist $SOURCE_DIR/app $SOURCE_DIR/test $SOURCE_DIR/.git\n#   Add dirs\nADD app $SOURCE_DIR/app\nADD test $SOURCE_DIR/test\n#   Dot files\nADD .jshintrc $SOURCE_DIR/\nADD .bowerrc $SOURCE_DIR/\nADD .editorconfig $SOURCE_DIR/\nADD .travis.yml $SOURCE_DIR/\n#   Other files\nADD bower.json $SOURCE_DIR/\nADD Gruntfile.js $SOURCE_DIR/\nADD LICENSE $SOURCE_DIR/\nADD package.json $SOURCE_DIR/\nADD README.md $SOURCE_DIR/\n#   Add some git files for versioning\nADD .git/HEAD $SOURCE_DIR/.git/HEAD\nADD .git/refs $SOURCE_DIR/.git/refs\n#  ###########################################################\n#   Install and configure webserver software\n#  ###########################################################\nRUN apt-get update -y \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get install --no-install-recommends apache2 bzip2 libapache2-mod-auth-kerb libapache2-mod-proxy-html git nodejs nodejs-legacy npm -y \\\n && a2enmod proxy \\\n && a2enmod proxy_http \\\n && cd $SOURCE_DIR \\\n && export GITREF=$( cat .git/HEAD | cut -d\" \" -f2 ;) \\\n && export GITSHA1=$( cat .git/$GITREF ;) \\\n && echo \"{\\\"git\\\": {\\\"sha1\\\": \\\"$GITSHA1\\\", \\\"ref\\\": \\\"$GITREF\\\"}}\" > $WWW_DIR/app-version.json \\\n && cd $SOURCE_DIR \\\n && rm -rf $SOURCE_DIR/.git \\\n && git config --global url.\"https://\".insteadOf git:// \\\n && cd $SOURCE_DIR \\\n && npm install \\\n && node_modules/bower/bin/bower install --allow-root \\\n && node_modules/grunt-cli/bin/grunt build --allow-root \\\n && cp -rf $SOURCE_DIR/dist/* $WWW_DIR \\\n && rm -rf $SOURCE_DIR \\\n && apt-get -y --auto-remove purge git nodejs nodejs-legacy npm bzip2 \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\n#  ###########################################################\n#   Add and enable the apache site and disable all other sites\n#  ###########################################################\nRUN a2dissite 000*\nADD apache-site.conf /etc/apache2/sites-available/docker-site.conf\nRUN a2ensite docker-site.conf\nADD start-apache.sh $START_SCRIPT\nRUN chmod +x $START_SCRIPT\nENV APACHE_RUN_USER=\"www-data\"\nENV APACHE_RUN_GROUP=\"www-data\"\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\n#   Let people know how this was built\nADD Dockerfile /root/Dockerfile\n#   Exposed ports\nEXPOSE 80/tcp 443/tcp\nVOLUME [\"/etc/apache2/server.crt\", \"/etc/apache2/server.key\"]\nCMD $START_SCRIPT\n","originalDockerfileUglifiedHash":"e47453682f1d8d48e23093099b19af3a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3bf3a5bf522cc184f6d1660aebcf7cb2302cb325.dockerfile"}