{"seed":3894608935,"processedDockerfileHash":"92b87d779d85a069e0c7944c04ec465f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM kelvinguu/pytorch:1.3\n#   Add the PostgreSQL PGP key to verify their Debian packages.\n#   It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\n#   Add PostgreSQL's repository. It contains the most recent stable release of PostgreSQL, ``9.3``.\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n#   Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3\n#   There are some warnings (in red) that show up during the build. You can hide\n#   them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends python-software-properties software-properties-common postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 -y )\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends libffi6 libffi-dev libssl-dev libpq-dev git --yes --force-yes )\nRUN pip install pip==23.1 --upgrade\nRUN pip install jupyter==1.0.0\nRUN jupyter nbextension enable --py --sys-prefix widgetsnbextension\nRUN pip install fabric==3.0.0\nRUN pip install pyOpenSSL==16.2.0\nRUN pip install psycopg2==2.6.1\nRUN pip install SQLAlchemy==1.1.0b3\nRUN pip install cherrypy==8.1.2\nRUN pip install bottle==0.12.10\nRUN pip install boto==2.43.0\nRUN pip install requests==2.28.2\nRUN pip install nltk==3.2.3\nRUN python -m nltk.downloader punkt\nRUN pip install keras==1.1.0\nRUN pip install pyhocon==0.3.60 line_profiler==4.0.3 pytest==7.3.1 tqdm==4.65.0 faulthandler==null python-Levenshtein==0.20.9 gitpython==3.1.31 futures==3.4.0 jsonpickle==3.0.1 prettytable==3.7.0 tensorboard_logger==0.1.0\nRUN pip install Pillow==4.1\nRUN pip install selenium==3.4.3\nRUN (apt-get update ;apt-get install --no-install-recommends vim less tmux nmap wget unzip -y )\nCOPY .tmux.conf /root\n#   vim bindings for Jupyter\n#   https://github.com/lambdalisue/jupyter-vim-binding\nRUN mkdir -p $( jupyter --data-dir ;)/nbextensions\nRUN git clone https://github.com/lambdalisue/jupyter-vim-binding $( jupyter --data-dir ;)/nbextensions/vim_binding\nRUN jupyter nbextension enable vim_binding/vim_binding\n#   autoreload for Jupyter\nRUN ipython profile create\nRUN echo 'c.InteractiveShellApp.exec_lines = []' >> ~/.ipython/profile_default/ipython_config.py\nRUN echo 'c.InteractiveShellApp.exec_lines.append(\"%load_ext autoreload\")' >> ~/.ipython/profile_default/ipython_config.py\nRUN echo 'c.InteractiveShellApp.exec_lines.append(\"%autoreload 2\")' >> ~/.ipython/profile_default/ipython_config.py\n#  ===========================================================================================================\n#   COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/Base/Dockerfile\n#  ===========================================================================================================\n#  ================================================\n#   Customize sources for apt-get\n#  ================================================\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\n#   No interactive frontend during docker build\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    DEBCONF_NONINTERACTIVE_SEEN=\"true\"\n#  ========================\n#   Miscellaneous packages\n#   Includes minimal runtime used for executing non GUI Java programs\n#  ========================\nRUN apt-get update -qqy \\\n && (apt-get update ;apt-get install --no-install-recommends bzip2 ca-certificates openjdk-8-jre-headless tzdata sudo unzip wget -qqy ) \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n#  ===================\n#   Timezone settings\n#   Possible alternative: https://github.com/docker/docker/issues/3359#issuecomment-32150214\n#  ===================\nENV TZ=\"\\\"UTC\\\"\"\nRUN echo \"${TZ}\" > /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n#  ==========\n#   Selenium\n#  ==========\nRUN sudo mkdir -p /opt/selenium \\\n && wget --no-verbose https://selenium-release.storage.googleapis.com/3.4/selenium-server-standalone-3.4.0.jar -O /opt/selenium/selenium-server-standalone.jar\n#  ===========================================================================================================\n#   COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/NodeBase/Dockerfile\n#  ===========================================================================================================\n#  ==============\n#   VNC and Xvfb\n#  ==============\nRUN apt-get update -qqy \\\n && (apt-get update ;apt-get install --no-install-recommends locales xvfb -qqy ) \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n#  ============================\n#   Some configuration options\n#  ============================\nENV SCREEN_WIDTH=\"1360\"\nENV SCREEN_HEIGHT=\"1020\"\nENV SCREEN_DEPTH=\"24\"\nENV DISPLAY=\":99.0\"\n#  ========================\n#   Selenium Configuration\n#  ========================\n#   As integer, maps to \"maxInstances\"\nENV NODE_MAX_INSTANCES=\"1\"\n#   As integer, maps to \"maxSession\"\nENV NODE_MAX_SESSION=\"1\"\n#   As integer, maps to \"port\"\nENV NODE_PORT=\"5555\"\n#   In milliseconds, maps to \"registerCycle\"\nENV NODE_REGISTER_CYCLE=\"5000\"\n#   In milliseconds, maps to \"nodePolling\"\nENV NODE_POLLING=\"5000\"\n#   In milliseconds, maps to \"unregisterIfStillDownAfter\"\nENV NODE_UNREGISTER_IF_STILL_DOWN_AFTER=\"60000\"\n#   As integer, maps to \"downPollingLimit\"\nENV NODE_DOWN_POLLING_LIMIT=\"2\"\n#   As string, maps to \"applicationName\"\nENV NODE_APPLICATION_NAME=\"\\\"\n#   Following line fixes https://github.com/SeleniumHQ/docker-selenium/issues/87\nENV DBUS_SESSION_BUS_ADDRESS=\"/dev/null\"\n#  ===========================================================================================================\n#   COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/NodeChrome/Dockerfile\n#  ===========================================================================================================\n#  ============================================\n#   Google Chrome\n#  ============================================\n#   can specify versions by CHROME_VERSION;\n#    e.g. google-chrome-stable=53.0.2785.101-1\n#         google-chrome-beta=53.0.2785.92-1\n#         google-chrome-unstable=54.0.2840.14-1\n#         latest (equivalent to google-chrome-stable)\n#         google-chrome-beta  (pull latest beta)\n#  ============================================\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update -qqy \\\n && (apt-get update ;apt-get install --no-install-recommends ${CHROME_VERSION:-google-chrome-stable} -qqy ) \\\n && rm /etc/apt/sources.list.d/google-chrome.list \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n#  ==================\n#   Chrome webdriver\n#  ==================\nARG CHROME_DRIVER_VERSION=2.30\nRUN wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip \\\n && rm -rf /opt/selenium/chromedriver \\\n && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \\\n && rm /tmp/chromedriver_linux64.zip \\\n && mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n && chmod 755 /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n && sudo ln -fs /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION /usr/bin/chromedriver\n#  =================================\n#   Chrome Launch Script Modification\n#  =================================\nCOPY chrome_launcher.sh /opt/google/chrome/google-chrome\n#   just installing so we can get tensorboard\nRUN pip install tensorflow==2.12.0\n#   add missing tokenizer package\nRUN python -m nltk.downloader perluniprops\nRUN pip install regex==2023.3.23 Twisted==22.10.0 service_identity==21.1.0\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM kelvinguu/pytorch:1.3\n#  Add the PostgreSQL PGP key to verify their Debian packages.\n#  It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\n#  Add PostgreSQL's repository. It contains the most recent stable release of PostgreSQL, ``9.3``.\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n#  Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3\n#  There are some warnings (in red) that show up during the build. You can hide\n#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install python-software-properties software-properties-common postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 -y\nRUN apt-get update\nRUN apt-get install libffi6 libffi-dev libssl-dev libpq-dev git --yes --force-yes\nRUN pip install pip --upgrade\nRUN pip install jupyter\nRUN jupyter nbextension enable --py --sys-prefix widgetsnbextension\nRUN pip install fabric\nRUN pip install pyOpenSSL==16.2.0\nRUN pip install psycopg2==2.6.1\nRUN pip install SQLAlchemy==1.1.0b3\nRUN pip install cherrypy==8.1.2\nRUN pip install bottle==0.12.10\nRUN pip install boto==2.43.0\nRUN pip install requests\nRUN pip install nltk==3.2.3\nRUN python -m nltk.downloader punkt\nRUN pip install keras==1.1.0\nRUN pip install pyhocon line_profiler pytest tqdm faulthandler python-Levenshtein gitpython futures jsonpickle prettytable tensorboard_logger\nRUN pip install Pillow==4.1\nRUN pip install selenium==3.4.3\nRUN apt-get install vim less tmux nmap wget unzip -y\nCOPY .tmux.conf /root\n#  vim bindings for Jupyter\n#  https://github.com/lambdalisue/jupyter-vim-binding\nRUN mkdir -p $( jupyter --data-dir ;)/nbextensions\nRUN git clone https://github.com/lambdalisue/jupyter-vim-binding $( jupyter --data-dir ;)/nbextensions/vim_binding\nRUN jupyter nbextension enable vim_binding/vim_binding\n#  autoreload for Jupyter\nRUN ipython profile create\nRUN echo 'c.InteractiveShellApp.exec_lines = []' >> ~/.ipython/profile_default/ipython_config.py\nRUN echo 'c.InteractiveShellApp.exec_lines.append(\"%load_ext autoreload\")' >> ~/.ipython/profile_default/ipython_config.py\nRUN echo 'c.InteractiveShellApp.exec_lines.append(\"%autoreload 2\")' >> ~/.ipython/profile_default/ipython_config.py\n# ===========================================================================================================\n#  COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/Base/Dockerfile\n# ===========================================================================================================\n# ================================================\n#  Customize sources for apt-get\n# ================================================\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\n#  No interactive frontend during docker build\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    DEBCONF_NONINTERACTIVE_SEEN=\"true\"\n# ========================\n#  Miscellaneous packages\n#  Includes minimal runtime used for executing non GUI Java programs\n# ========================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends bzip2 ca-certificates openjdk-8-jre-headless tzdata sudo unzip wget -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n# ===================\n#  Timezone settings\n#  Possible alternative: https://github.com/docker/docker/issues/3359#issuecomment-32150214\n# ===================\nENV TZ=\"\\\"UTC\\\"\"\nRUN echo \"${TZ}\" > /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n# ==========\n#  Selenium\n# ==========\nRUN sudo mkdir -p /opt/selenium \\\n && wget --no-verbose https://selenium-release.storage.googleapis.com/3.4/selenium-server-standalone-3.4.0.jar -O /opt/selenium/selenium-server-standalone.jar\n# ===========================================================================================================\n#  COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/NodeBase/Dockerfile\n# ===========================================================================================================\n# ==============\n#  VNC and Xvfb\n# ==============\nRUN apt-get update -qqy \\\n && apt-get install locales xvfb -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n# ============================\n#  Some configuration options\n# ============================\nENV SCREEN_WIDTH=\"1360\"\nENV SCREEN_HEIGHT=\"1020\"\nENV SCREEN_DEPTH=\"24\"\nENV DISPLAY=\":99.0\"\n# ========================\n#  Selenium Configuration\n# ========================\n#  As integer, maps to \"maxInstances\"\nENV NODE_MAX_INSTANCES=\"1\"\n#  As integer, maps to \"maxSession\"\nENV NODE_MAX_SESSION=\"1\"\n#  As integer, maps to \"port\"\nENV NODE_PORT=\"5555\"\n#  In milliseconds, maps to \"registerCycle\"\nENV NODE_REGISTER_CYCLE=\"5000\"\n#  In milliseconds, maps to \"nodePolling\"\nENV NODE_POLLING=\"5000\"\n#  In milliseconds, maps to \"unregisterIfStillDownAfter\"\nENV NODE_UNREGISTER_IF_STILL_DOWN_AFTER=\"60000\"\n#  As integer, maps to \"downPollingLimit\"\nENV NODE_DOWN_POLLING_LIMIT=\"2\"\n#  As string, maps to \"applicationName\"\nENV NODE_APPLICATION_NAME=\"\"\\\"\"\n#  Following line fixes https://github.com/SeleniumHQ/docker-selenium/issues/87\nENV DBUS_SESSION_BUS_ADDRESS=\"/dev/null\"\n# ===========================================================================================================\n#  COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/NodeChrome/Dockerfile\n# ===========================================================================================================\n# ============================================\n#  Google Chrome\n# ============================================\n#  can specify versions by CHROME_VERSION;\n#   e.g. google-chrome-stable=53.0.2785.101-1\n#        google-chrome-beta=53.0.2785.92-1\n#        google-chrome-unstable=54.0.2840.14-1\n#        latest (equivalent to google-chrome-stable)\n#        google-chrome-beta  (pull latest beta)\n# ============================================\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update -qqy \\\n && apt-get install ${CHROME_VERSION:-google-chrome-stable} -qqy \\\n && rm /etc/apt/sources.list.d/google-chrome.list \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n# ==================\n#  Chrome webdriver\n# ==================\nARG CHROME_DRIVER_VERSION=2.30\nRUN wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip \\\n && rm -rf /opt/selenium/chromedriver \\\n && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \\\n && rm /tmp/chromedriver_linux64.zip \\\n && mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n && chmod 755 /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n && sudo ln -fs /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION /usr/bin/chromedriver\n# =================================\n#  Chrome Launch Script Modification\n# =================================\nCOPY chrome_launcher.sh /opt/google/chrome/google-chrome\n#  just installing so we can get tensorboard\nRUN pip install tensorflow\n#  add missing tokenizer package\nRUN python -m nltk.downloader perluniprops\nRUN pip install regex Twisted service_identity\n","injectedSmells":[],"originalDockerfileHash":"c24d6f2bf5bd30c2e6d35406e8230427","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM kelvinguu/pytorch:1.3\n#   Add the PostgreSQL PGP key to verify their Debian packages.\n#   It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\n#   Add PostgreSQL's repository. It contains the most recent stable release of PostgreSQL, ``9.3``.\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n#   Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3\n#   There are some warnings (in red) that show up during the build. You can hide\n#   them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install python-software-properties software-properties-common postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 -y\nRUN apt-get update\nRUN apt-get install libffi6 libffi-dev libssl-dev libpq-dev git --yes --force-yes\nRUN pip install pip --upgrade\nRUN pip install jupyter\nRUN jupyter nbextension enable --py --sys-prefix widgetsnbextension\nRUN pip install fabric\nRUN pip install pyOpenSSL==16.2.0\nRUN pip install psycopg2==2.6.1\nRUN pip install SQLAlchemy==1.1.0b3\nRUN pip install cherrypy==8.1.2\nRUN pip install bottle==0.12.10\nRUN pip install boto==2.43.0\nRUN pip install requests\nRUN pip install nltk==3.2.3\nRUN python -m nltk.downloader punkt\nRUN pip install keras==1.1.0\nRUN pip install pyhocon line_profiler pytest tqdm faulthandler python-Levenshtein gitpython futures jsonpickle prettytable tensorboard_logger\nRUN pip install Pillow==4.1\nRUN pip install selenium==3.4.3\nRUN apt-get install vim less tmux nmap wget unzip -y\nCOPY .tmux.conf /root\n#   vim bindings for Jupyter\n#   https://github.com/lambdalisue/jupyter-vim-binding\nRUN mkdir -p $( jupyter --data-dir ;)/nbextensions\nRUN git clone https://github.com/lambdalisue/jupyter-vim-binding $( jupyter --data-dir ;)/nbextensions/vim_binding\nRUN jupyter nbextension enable vim_binding/vim_binding\n#   autoreload for Jupyter\nRUN ipython profile create\nRUN echo 'c.InteractiveShellApp.exec_lines = []' >> ~/.ipython/profile_default/ipython_config.py\nRUN echo 'c.InteractiveShellApp.exec_lines.append(\"%load_ext autoreload\")' >> ~/.ipython/profile_default/ipython_config.py\nRUN echo 'c.InteractiveShellApp.exec_lines.append(\"%autoreload 2\")' >> ~/.ipython/profile_default/ipython_config.py\n#  ===========================================================================================================\n#   COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/Base/Dockerfile\n#  ===========================================================================================================\n#  ================================================\n#   Customize sources for apt-get\n#  ================================================\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\n#   No interactive frontend during docker build\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    DEBCONF_NONINTERACTIVE_SEEN=\"true\"\n#  ========================\n#   Miscellaneous packages\n#   Includes minimal runtime used for executing non GUI Java programs\n#  ========================\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends bzip2 ca-certificates openjdk-8-jre-headless tzdata sudo unzip wget -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n#  ===================\n#   Timezone settings\n#   Possible alternative: https://github.com/docker/docker/issues/3359#issuecomment-32150214\n#  ===================\nENV TZ=\"\\\"UTC\\\"\"\nRUN echo \"${TZ}\" > /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\n#  ==========\n#   Selenium\n#  ==========\nRUN sudo mkdir -p /opt/selenium \\\n && wget --no-verbose https://selenium-release.storage.googleapis.com/3.4/selenium-server-standalone-3.4.0.jar -O /opt/selenium/selenium-server-standalone.jar\n#  ===========================================================================================================\n#   COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/NodeBase/Dockerfile\n#  ===========================================================================================================\n#  ==============\n#   VNC and Xvfb\n#  ==============\nRUN apt-get update -qqy \\\n && apt-get install locales xvfb -qqy \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n#  ============================\n#   Some configuration options\n#  ============================\nENV SCREEN_WIDTH=\"1360\"\nENV SCREEN_HEIGHT=\"1020\"\nENV SCREEN_DEPTH=\"24\"\nENV DISPLAY=\":99.0\"\n#  ========================\n#   Selenium Configuration\n#  ========================\n#   As integer, maps to \"maxInstances\"\nENV NODE_MAX_INSTANCES=\"1\"\n#   As integer, maps to \"maxSession\"\nENV NODE_MAX_SESSION=\"1\"\n#   As integer, maps to \"port\"\nENV NODE_PORT=\"5555\"\n#   In milliseconds, maps to \"registerCycle\"\nENV NODE_REGISTER_CYCLE=\"5000\"\n#   In milliseconds, maps to \"nodePolling\"\nENV NODE_POLLING=\"5000\"\n#   In milliseconds, maps to \"unregisterIfStillDownAfter\"\nENV NODE_UNREGISTER_IF_STILL_DOWN_AFTER=\"60000\"\n#   As integer, maps to \"downPollingLimit\"\nENV NODE_DOWN_POLLING_LIMIT=\"2\"\n#   As string, maps to \"applicationName\"\nENV NODE_APPLICATION_NAME=\"\\\"\n#   Following line fixes https://github.com/SeleniumHQ/docker-selenium/issues/87\nENV DBUS_SESSION_BUS_ADDRESS=\"/dev/null\"\n#  ===========================================================================================================\n#   COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/NodeChrome/Dockerfile\n#  ===========================================================================================================\n#  ============================================\n#   Google Chrome\n#  ============================================\n#   can specify versions by CHROME_VERSION;\n#    e.g. google-chrome-stable=53.0.2785.101-1\n#         google-chrome-beta=53.0.2785.92-1\n#         google-chrome-unstable=54.0.2840.14-1\n#         latest (equivalent to google-chrome-stable)\n#         google-chrome-beta  (pull latest beta)\n#  ============================================\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update -qqy \\\n && apt-get install ${CHROME_VERSION:-google-chrome-stable} -qqy \\\n && rm /etc/apt/sources.list.d/google-chrome.list \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n#  ==================\n#   Chrome webdriver\n#  ==================\nARG CHROME_DRIVER_VERSION=2.30\nRUN wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip \\\n && rm -rf /opt/selenium/chromedriver \\\n && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \\\n && rm /tmp/chromedriver_linux64.zip \\\n && mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n && chmod 755 /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n && sudo ln -fs /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION /usr/bin/chromedriver\n#  =================================\n#   Chrome Launch Script Modification\n#  =================================\nCOPY chrome_launcher.sh /opt/google/chrome/google-chrome\n#   just installing so we can get tensorboard\nRUN pip install tensorflow\n#   add missing tokenizer package\nRUN python -m nltk.downloader perluniprops\nRUN pip install regex Twisted service_identity\n","originalDockerfileUglifiedHash":"ee66895df56ae98f85cfcc0c9535ef54","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4d351a7d7743cfedfff84add6533c37de9ca0d54.dockerfile"}