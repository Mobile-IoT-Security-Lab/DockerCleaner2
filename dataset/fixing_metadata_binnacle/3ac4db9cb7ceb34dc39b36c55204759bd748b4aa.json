{"seed":4083407023,"processedDockerfileHash":"2b493f48729f132d5109b0e1a7e27a68","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nRUN : \\\n && apt-get dist-upgrade -y\nRUN (apt-get update ;apt-get install --no-install-recommends gcc=4:4.8.2-1ubuntu6 g++=4:4.8.2-1ubuntu6 git=1:1.9.1-1ubuntu0.10 make=3.81-8.2ubuntu3 flex=2.5.35-10.1ubuntu2 bison=2:3.0.2.dfsg-2 gperf=3.0.4-1 ruby=1:1.9.3.4 perl=5.18.2-2ubuntu1.7 python=2.7.5-5ubuntu3 -y )\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ trusty multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ trusty multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ trusty-updates multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ trusty-updates multiverse\" >> /etc/apt/sources.list\nRUN echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | debconf-set-selections\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends ttf-dejavu-core=2.34-1ubuntu1 ttf-indic-fonts=1:0.5.14ubuntu1 ttf-kochi-gothic=20030809-15 ttf-kochi-mincho=20030809-15 ttf-mscorefonts-installer=3.4+nmu1ubuntu1 xfonts-mathml=6ubuntu1 -y )\n#   For Ubuntu shared libs\nRUN (apt-get update ;apt-get install --no-install-recommends make=3.81-8.2ubuntu3 gcc=4:4.8.2-1ubuntu6 g++=4:4.8.2-1ubuntu6 nasm=2.10.09-1ubuntu0.1 curl=7.35.0-1ubuntu2.20 tar=1.27.1-1ubuntu0.1 bzip2=1.0.6-5 -y )\n#  RUN apt-get install -y libsqlite3-dev libfontconfig1-dev \\\n#                         libicu-dev libfreetype6 libssl-dev libpng-dev \\\n#                         libjpeg-dev zlib1g-dev\n#   Extra deps pointed out by WebKit config\n#  RUN apt-get install -y libxslt1-dev libxml2-dev libwebp-dev libxcomposite-dev \\\n#                         libxrender-dev\nRUN mkdir -p /src\nWORKDIR /src\nENV NUM_CORES=\"8\"\n#   zlib\nENV ZLIB_VER=\"1.2.8\"\nRUN curl -sL http://zlib.net/zlib-${ZLIB_VER}.tar.gz | tar -xz\nRUN cd zlib-${ZLIB_VER} \\\n && ./configure --prefix=/usr --static \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libpng\nENV LIBPNG_VER=\"1.6.17\"\nRUN curl -sL http://download.sourceforge.net/libpng/libpng-${LIBPNG_VER}.tar.gz | tar -xz\nRUN cd libpng-${LIBPNG_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libjpeg\n#  ENV LIBJPEG_VER=6b\n#  RUN curl -sL http://download.sourceforge.net/libjpeg/${LIBJPEG_VER}/libjpeg-v${LIBJPEG_VER}.tar.gz | tar -xz\n#  RUN cd libjpeg && ./configure --prefix=/usr && make all -j${NUM_CORES} && make install\n#   libjpeg-turbo\nENV LIBJPEG_TURBO_VER=\"1.4.0\"\nRUN curl -sL http://sourceforge.net/projects/libjpeg-turbo/files/${LIBJPEG_TURBO_VER}/libjpeg-turbo-${LIBJPEG_TURBO_VER}.tar.gz/download | tar -xz\nRUN cd libjpeg-turbo-${LIBJPEG_TURBO_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libwebp\nENV LIBWEBP_VER=\"0.4.3\"\nRUN curl -sL http://downloads.webmproject.org/releases/webp/libwebp-${LIBWEBP_VER}.tar.gz | tar -xz\nRUN cd libwebp-${LIBWEBP_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   OpenSSL\nENV OPENSSL_VER=\"1.0.2a\"\nRUN curl -sL http://openssl.org/source/openssl-${OPENSSL_VER}.tar.gz | tar -xz\nRUN cd openssl-${OPENSSL_VER} \\\n && ./config --prefix=/usr --openssldir=/etc/ssl --libdir=lib \\\n && make all \\\n && make install\nRUN (apt-get update ;apt-get install --no-install-recommends pkg-config=0.26-1ubuntu4 -y )\n#   libxml2\nENV LIBXML2_VER=\"2.9.2\"\nRUN curl -sL ftp://xmlsoft.org/libxml2/libxml2-sources-${LIBXML2_VER}.tar.gz | tar -xz\nRUN cd libxml2-${LIBXML2_VER} \\\n && ./configure --help \\\n && ./configure --prefix=/usr --enable-static --disable-shared --with-python=no \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libxslt\nENV LIBXSLT_VER=\"1.1.28\"\nRUN curl -sL ftp://xmlsoft.org/libxml2/libxslt-${LIBXSLT_VER}.tar.gz | tar -xz\nRUN cd libxslt-${LIBXSLT_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   Freetype\nENV FREETYPE_VER=\"2.5.5\"\nRUN curl -sL http://sourceforge.net/projects/freetype/files/freetype2/${FREETYPE_VER}/freetype-${FREETYPE_VER}.tar.bz2/download | tar -xj\nRUN cd freetype-${FREETYPE_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   expat\n#  ENV EXPAT_VER=2.1.0\n#  RUN curl -sL http://sourceforge.net/projects/expat/files/expat/${EXPAT_VER}/expat-${EXPAT_VER}.tar.gz/download | tar -xz\n#  RUN cd expat-${EXPAT_VER} && ./configure --prefix=/usr --enable-static --disable-shared && make all -j${NUM_CORES} && make install\n#   Fontconfig\nENV FONTCONFIG_VER=\"2.11.1\"\nRUN curl -sL http://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VER}.tar.gz | tar -xz\nRUN cd fontconfig-${FONTCONFIG_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared --enable-libxml2 \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libicu\nENV ICU_VER=\"55.1\"\nENV ICU_FILE_VER=\"55_1\"\nRUN curl -sL http://download.icu-project.org/files/icu4c/${ICU_VER}/icu4c-${ICU_FILE_VER}-src.tgz | tar -xz\nRUN cd icu/source \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\nENV PHANTOMJS_TAG=\"master\"\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:1.9.1-1ubuntu0.10 -y )\n#  RUN git clone https://github.com/ariya/phantomjs.git\nRUN git clone https://github.com/bprodoehl/phantomjs.git\nCMD cd phantomjs \\\n && git checkout ${PHANTOMJS_TAG} \\\n && ./build.sh --confirm \\\n && cp bin/phantomjs /output/.\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nRUN apt-get update \\\n && apt-get dist-upgrade -y\nRUN apt-get install gcc g++ git make flex bison gperf ruby perl python -y\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ trusty multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ trusty multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ trusty-updates multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ trusty-updates multiverse\" >> /etc/apt/sources.list\nRUN echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | debconf-set-selections\nRUN apt-get update\nRUN apt-get install ttf-dejavu-core ttf-indic-fonts ttf-kochi-gothic ttf-kochi-mincho ttf-mscorefonts-installer xfonts-mathml -y\n#  For Ubuntu shared libs\nRUN apt-get install make gcc g++ nasm curl tar bzip2 -y\n# RUN apt-get install -y libsqlite3-dev libfontconfig1-dev \\\n#                        libicu-dev libfreetype6 libssl-dev libpng-dev \\\n#                        libjpeg-dev zlib1g-dev\n#  Extra deps pointed out by WebKit config\n# RUN apt-get install -y libxslt1-dev libxml2-dev libwebp-dev libxcomposite-dev \\\n#                        libxrender-dev\nRUN mkdir -p /src\nWORKDIR /src\nENV NUM_CORES=\"8\"\n#  zlib\nENV ZLIB_VER=\"1.2.8\"\nRUN curl -sL http://zlib.net/zlib-${ZLIB_VER}.tar.gz | tar -xz\nRUN cd zlib-${ZLIB_VER} \\\n && ./configure --prefix=/usr --static \\\n && make all -j${NUM_CORES} \\\n && make install\n#  libpng\nENV LIBPNG_VER=\"1.6.17\"\nRUN curl -sL http://download.sourceforge.net/libpng/libpng-${LIBPNG_VER}.tar.gz | tar -xz\nRUN cd libpng-${LIBPNG_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#  libjpeg\n# ENV LIBJPEG_VER=6b\n# RUN curl -sL http://download.sourceforge.net/libjpeg/${LIBJPEG_VER}/libjpeg-v${LIBJPEG_VER}.tar.gz | tar -xz\n# RUN cd libjpeg && ./configure --prefix=/usr && make all -j${NUM_CORES} && make install\n#  libjpeg-turbo\nENV LIBJPEG_TURBO_VER=\"1.4.0\"\nRUN curl -sL http://sourceforge.net/projects/libjpeg-turbo/files/${LIBJPEG_TURBO_VER}/libjpeg-turbo-${LIBJPEG_TURBO_VER}.tar.gz/download | tar -xz\nRUN cd libjpeg-turbo-${LIBJPEG_TURBO_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#  libwebp\nENV LIBWEBP_VER=\"0.4.3\"\nRUN curl -sL http://downloads.webmproject.org/releases/webp/libwebp-${LIBWEBP_VER}.tar.gz | tar -xz\nRUN cd libwebp-${LIBWEBP_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#  OpenSSL\nENV OPENSSL_VER=\"1.0.2a\"\nRUN curl -sL http://openssl.org/source/openssl-${OPENSSL_VER}.tar.gz | tar -xz\nRUN cd openssl-${OPENSSL_VER} \\\n && ./config --prefix=/usr --openssldir=/etc/ssl --libdir=lib \\\n && make all \\\n && make install\nRUN apt-get install pkg-config -y\n#  libxml2\nENV LIBXML2_VER=\"2.9.2\"\nRUN curl -sL ftp://xmlsoft.org/libxml2/libxml2-sources-${LIBXML2_VER}.tar.gz | tar -xz\nRUN cd libxml2-${LIBXML2_VER} \\\n && ./configure --help \\\n && ./configure --prefix=/usr --enable-static --disable-shared --with-python=no \\\n && make all -j${NUM_CORES} \\\n && make install\n#  libxslt\nENV LIBXSLT_VER=\"1.1.28\"\nRUN curl -sL ftp://xmlsoft.org/libxml2/libxslt-${LIBXSLT_VER}.tar.gz | tar -xz\nRUN cd libxslt-${LIBXSLT_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#  Freetype\nENV FREETYPE_VER=\"2.5.5\"\nRUN curl -sL http://sourceforge.net/projects/freetype/files/freetype2/${FREETYPE_VER}/freetype-${FREETYPE_VER}.tar.bz2/download | tar -xj\nRUN cd freetype-${FREETYPE_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#  expat\n# ENV EXPAT_VER=2.1.0\n# RUN curl -sL http://sourceforge.net/projects/expat/files/expat/${EXPAT_VER}/expat-${EXPAT_VER}.tar.gz/download | tar -xz\n# RUN cd expat-${EXPAT_VER} && ./configure --prefix=/usr --enable-static --disable-shared && make all -j${NUM_CORES} && make install\n#  Fontconfig\nENV FONTCONFIG_VER=\"2.11.1\"\nRUN curl -sL http://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VER}.tar.gz | tar -xz\nRUN cd fontconfig-${FONTCONFIG_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared --enable-libxml2 \\\n && make all -j${NUM_CORES} \\\n && make install\n#  libicu\nENV ICU_VER=\"55.1\"\nENV ICU_FILE_VER=\"55_1\"\nRUN curl -sL http://download.icu-project.org/files/icu4c/${ICU_VER}/icu4c-${ICU_FILE_VER}-src.tgz | tar -xz\nRUN cd icu/source \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\nENV PHANTOMJS_TAG=\"master\"\nRUN apt-get install git -y\n# RUN git clone https://github.com/ariya/phantomjs.git\nRUN git clone https://github.com/bprodoehl/phantomjs.git\nCMD cd phantomjs \\\n && git checkout ${PHANTOMJS_TAG} \\\n && ./build.sh --confirm \\\n && cp bin/phantomjs /output/.\n","injectedSmells":[],"originalDockerfileHash":"dfdc43cda2d5c0cbdb877163f363d8af","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nRUN apt-get update \\\n && apt-get dist-upgrade -y\nRUN apt-get install gcc g++ git make flex bison gperf ruby perl python -y\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ trusty multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ trusty multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ trusty-updates multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ trusty-updates multiverse\" >> /etc/apt/sources.list\nRUN echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | debconf-set-selections\nRUN apt-get update\nRUN apt-get install ttf-dejavu-core ttf-indic-fonts ttf-kochi-gothic ttf-kochi-mincho ttf-mscorefonts-installer xfonts-mathml -y\n#   For Ubuntu shared libs\nRUN apt-get install make gcc g++ nasm curl tar bzip2 -y\n#  RUN apt-get install -y libsqlite3-dev libfontconfig1-dev \\\n#                         libicu-dev libfreetype6 libssl-dev libpng-dev \\\n#                         libjpeg-dev zlib1g-dev\n#   Extra deps pointed out by WebKit config\n#  RUN apt-get install -y libxslt1-dev libxml2-dev libwebp-dev libxcomposite-dev \\\n#                         libxrender-dev\nRUN mkdir -p /src\nWORKDIR /src\nENV NUM_CORES=\"8\"\n#   zlib\nENV ZLIB_VER=\"1.2.8\"\nRUN curl -sL http://zlib.net/zlib-${ZLIB_VER}.tar.gz | tar -xz\nRUN cd zlib-${ZLIB_VER} \\\n && ./configure --prefix=/usr --static \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libpng\nENV LIBPNG_VER=\"1.6.17\"\nRUN curl -sL http://download.sourceforge.net/libpng/libpng-${LIBPNG_VER}.tar.gz | tar -xz\nRUN cd libpng-${LIBPNG_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libjpeg\n#  ENV LIBJPEG_VER=6b\n#  RUN curl -sL http://download.sourceforge.net/libjpeg/${LIBJPEG_VER}/libjpeg-v${LIBJPEG_VER}.tar.gz | tar -xz\n#  RUN cd libjpeg && ./configure --prefix=/usr && make all -j${NUM_CORES} && make install\n#   libjpeg-turbo\nENV LIBJPEG_TURBO_VER=\"1.4.0\"\nRUN curl -sL http://sourceforge.net/projects/libjpeg-turbo/files/${LIBJPEG_TURBO_VER}/libjpeg-turbo-${LIBJPEG_TURBO_VER}.tar.gz/download | tar -xz\nRUN cd libjpeg-turbo-${LIBJPEG_TURBO_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libwebp\nENV LIBWEBP_VER=\"0.4.3\"\nRUN curl -sL http://downloads.webmproject.org/releases/webp/libwebp-${LIBWEBP_VER}.tar.gz | tar -xz\nRUN cd libwebp-${LIBWEBP_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   OpenSSL\nENV OPENSSL_VER=\"1.0.2a\"\nRUN curl -sL http://openssl.org/source/openssl-${OPENSSL_VER}.tar.gz | tar -xz\nRUN cd openssl-${OPENSSL_VER} \\\n && ./config --prefix=/usr --openssldir=/etc/ssl --libdir=lib \\\n && make all \\\n && make install\nRUN apt-get install pkg-config -y\n#   libxml2\nENV LIBXML2_VER=\"2.9.2\"\nRUN curl -sL ftp://xmlsoft.org/libxml2/libxml2-sources-${LIBXML2_VER}.tar.gz | tar -xz\nRUN cd libxml2-${LIBXML2_VER} \\\n && ./configure --help \\\n && ./configure --prefix=/usr --enable-static --disable-shared --with-python=no \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libxslt\nENV LIBXSLT_VER=\"1.1.28\"\nRUN curl -sL ftp://xmlsoft.org/libxml2/libxslt-${LIBXSLT_VER}.tar.gz | tar -xz\nRUN cd libxslt-${LIBXSLT_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   Freetype\nENV FREETYPE_VER=\"2.5.5\"\nRUN curl -sL http://sourceforge.net/projects/freetype/files/freetype2/${FREETYPE_VER}/freetype-${FREETYPE_VER}.tar.bz2/download | tar -xj\nRUN cd freetype-${FREETYPE_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\n#   expat\n#  ENV EXPAT_VER=2.1.0\n#  RUN curl -sL http://sourceforge.net/projects/expat/files/expat/${EXPAT_VER}/expat-${EXPAT_VER}.tar.gz/download | tar -xz\n#  RUN cd expat-${EXPAT_VER} && ./configure --prefix=/usr --enable-static --disable-shared && make all -j${NUM_CORES} && make install\n#   Fontconfig\nENV FONTCONFIG_VER=\"2.11.1\"\nRUN curl -sL http://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VER}.tar.gz | tar -xz\nRUN cd fontconfig-${FONTCONFIG_VER} \\\n && ./configure --prefix=/usr --enable-static --disable-shared --enable-libxml2 \\\n && make all -j${NUM_CORES} \\\n && make install\n#   libicu\nENV ICU_VER=\"55.1\"\nENV ICU_FILE_VER=\"55_1\"\nRUN curl -sL http://download.icu-project.org/files/icu4c/${ICU_VER}/icu4c-${ICU_FILE_VER}-src.tgz | tar -xz\nRUN cd icu/source \\\n && ./configure --prefix=/usr --enable-static --disable-shared \\\n && make all -j${NUM_CORES} \\\n && make install\nENV PHANTOMJS_TAG=\"master\"\nRUN apt-get install git -y\n#  RUN git clone https://github.com/ariya/phantomjs.git\nRUN git clone https://github.com/bprodoehl/phantomjs.git\nCMD cd phantomjs \\\n && git checkout ${PHANTOMJS_TAG} \\\n && ./build.sh --confirm \\\n && cp bin/phantomjs /output/.\n","originalDockerfileUglifiedHash":"d3da5b83b074ac46b0f91dcd04d247a8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3ac4db9cb7ceb34dc39b36c55204759bd748b4aa.dockerfile"}