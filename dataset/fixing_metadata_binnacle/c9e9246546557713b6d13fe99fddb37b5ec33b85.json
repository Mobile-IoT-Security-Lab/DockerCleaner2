{"seed":2709429264,"processedDockerfileHash":"60cb15ea9981f3e53db62e13dc8a89c7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   ==================================================================\n#   module list\n#   ------------------------------------------------------------------\n#   python        3.6    (apt)\n#   opencv        4.0.1  (git)\n#   cntk          latest (pip)\n#   ==================================================================\nFROM ubuntu:18.04\nENV LANG=\"C.UTF-8\"\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential apt-utils ca-certificates wget git vim \\\n && $GIT_CLONE https://github.com/Kitware/CMake ~/cmake \\\n && cd ~/cmake \\\n && ./bootstrap \\\n && make -j\"$( nproc ;)\" install \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python3.6 python3.6-dev python3-distutils-extra \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools \\\n && $PIP_INSTALL numpy scipy pandas cloudpickle scikit-learn matplotlib Cython \\\n && wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz \\\n && tar -zxf ~/boost.tar.gz -C ~ \\\n && cd ~/boost_* \\\n && ./bootstrap.sh --with-python=python3.6 \\\n && ./b2 install -j\"$( nproc ;)\" --prefix=/usr/local \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL libatlas-base-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libprotobuf-dev libsnappy-dev protobuf-compiler \\\n && $GIT_CLONE --branch 4.0.1 https://github.com/opencv/opencv ~/opencv \\\n && mkdir -p ~/opencv/build \\\n && cd ~/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_IPP=OFF -D WITH_CUDA=OFF -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF .. \\\n && make -j\"$( nproc ;)\" install \\\n && ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL openmpi-bin libpng-dev libjpeg-dev libtiff-dev \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 \\\n && wget --no-verbose -O - https://github.com/01org/mkl-dnn/releases/download/v0.14/mklml_lnx_2018.0.3.20180406.tgz | tar -xzf - \\\n && cp mklml*/* /usr/local -r \\\n && wget --no-verbose -O - https://github.com/01org/mkl-dnn/archive/v0.14.tar.gz | tar -xzf - \\\n && cd mkl-dnn-0.14 \\\n && mkdir build \\\n && cd build \\\n && ln -s /usr/local external \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j\"$( nproc ;)\" install \\\n && $PIP_INSTALL cntk \\\n && ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  ==================================================================\n#  module list\n#  ------------------------------------------------------------------\n#  python        3.6    (apt)\n#  opencv        4.0.1  (git)\n#  cntk          latest (pip)\n#  ==================================================================\nFROM ubuntu:18.04\nENV LANG=\"C.UTF-8\"\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential apt-utils ca-certificates wget git vim \\\n && $GIT_CLONE https://github.com/Kitware/CMake ~/cmake \\\n && cd ~/cmake \\\n && ./bootstrap \\\n && make -j\"$( nproc ;)\" install \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python3.6 python3.6-dev python3-distutils-extra \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools \\\n && $PIP_INSTALL numpy scipy pandas cloudpickle scikit-learn matplotlib Cython \\\n && wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz \\\n && tar -zxf ~/boost.tar.gz -C ~ \\\n && cd ~/boost_* \\\n && ./bootstrap.sh --with-python=python3.6 \\\n && ./b2 install -j\"$( nproc ;)\" --prefix=/usr/local \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL libatlas-base-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libprotobuf-dev libsnappy-dev protobuf-compiler \\\n && $GIT_CLONE --branch 4.0.1 https://github.com/opencv/opencv ~/opencv \\\n && mkdir -p ~/opencv/build \\\n && cd ~/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_IPP=OFF -D WITH_CUDA=OFF -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF .. \\\n && make -j\"$( nproc ;)\" install \\\n && ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL openmpi-bin libpng-dev libjpeg-dev libtiff-dev \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 \\\n && wget --no-verbose -O - https://github.com/01org/mkl-dnn/releases/download/v0.14/mklml_lnx_2018.0.3.20180406.tgz | tar -xzf - \\\n && cp mklml*/* /usr/local -r \\\n && wget --no-verbose -O - https://github.com/01org/mkl-dnn/archive/v0.14.tar.gz | tar -xzf - \\\n && cd mkl-dnn-0.14 \\\n && mkdir build \\\n && cd build \\\n && ln -s /usr/local external \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j\"$( nproc ;)\" install \\\n && $PIP_INSTALL cntk \\\n && ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\n","injectedSmells":[],"originalDockerfileHash":"24d7ee0b9f9bfef373f8ba3ea17e9c10","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ==================================================================\n#   module list\n#   ------------------------------------------------------------------\n#   python        3.6    (apt)\n#   opencv        4.0.1  (git)\n#   cntk          latest (pip)\n#   ==================================================================\nFROM ubuntu:18.04\nENV LANG=\"C.UTF-8\"\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential apt-utils ca-certificates wget git vim \\\n && $GIT_CLONE https://github.com/Kitware/CMake ~/cmake \\\n && cd ~/cmake \\\n && ./bootstrap \\\n && make -j\"$( nproc ;)\" install \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python3.6 python3.6-dev python3-distutils-extra \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools \\\n && $PIP_INSTALL numpy scipy pandas cloudpickle scikit-learn matplotlib Cython \\\n && wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz \\\n && tar -zxf ~/boost.tar.gz -C ~ \\\n && cd ~/boost_* \\\n && ./bootstrap.sh --with-python=python3.6 \\\n && ./b2 install -j\"$( nproc ;)\" --prefix=/usr/local \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL libatlas-base-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libprotobuf-dev libsnappy-dev protobuf-compiler \\\n && $GIT_CLONE --branch 4.0.1 https://github.com/opencv/opencv ~/opencv \\\n && mkdir -p ~/opencv/build \\\n && cd ~/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_IPP=OFF -D WITH_CUDA=OFF -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF .. \\\n && make -j\"$( nproc ;)\" install \\\n && ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL openmpi-bin libpng-dev libjpeg-dev libtiff-dev \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 \\\n && wget --no-verbose -O - https://github.com/01org/mkl-dnn/releases/download/v0.14/mklml_lnx_2018.0.3.20180406.tgz | tar -xzf - \\\n && cp mklml*/* /usr/local -r \\\n && wget --no-verbose -O - https://github.com/01org/mkl-dnn/archive/v0.14.tar.gz | tar -xzf - \\\n && cd mkl-dnn-0.14 \\\n && mkdir build \\\n && cd build \\\n && ln -s /usr/local external \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j\"$( nproc ;)\" install \\\n && $PIP_INSTALL cntk \\\n && ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\n","originalDockerfileUglifiedHash":"1a217c1d3ea803847858778ae0df5a57","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c9e9246546557713b6d13fe99fddb37b5ec33b85.dockerfile"}