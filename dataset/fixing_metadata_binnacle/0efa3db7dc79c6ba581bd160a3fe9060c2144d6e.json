{"seed":807324757,"processedDockerfileHash":"029bc71ec45dbed86a4422be8326a20e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\nMAINTAINER Olivier Grisel <olivier.grisel@ensta.org>\nRUN apt-get update -yqq \\\n && apt-get install --no-install-recommends wget bzip2 git libglib2.0-0 -yqq \\\n && rm -rf /var/lib/apt/lists/*\n#   Configure environment\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\n#   Folder to install non-system tools and serve as workspace for the notebook\n#   user\nRUN mkdir -p /work/bin\n#   Create a non-priviledge user that will run the services\n#  ENV BASICUSER basicuser\n#  ENV BASICUSER_UID 1000\n#  RUN useradd -m -d /work -s /bin/bash -N -u $BASICUSER_UID $BASICUSER\n#  RUN chown $BASICUSER /work\n#  USER $BASICUSER\n#   Deactivate basic user to make it easier to deal with volume permissions\n#   for now\nENV BASICUSER=\"root\"\nWORKDIR /work\n#   Install Python 3 from miniconda\nRUN wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && bash miniconda.sh -b -p /work/miniconda \\\n && rm miniconda.sh\nENV PATH=\"/work/bin:/work/miniconda/bin:$PATH\"\n#   Install matplotlib and scikit-image without Qt\nRUN conda update -y python conda \\\n && conda install -y --no-deps matplotlib cycler freetype libpng pyparsing pytz python-dateutil scikit-image networkx pillow six \\\n && conda clean -tipsy\nRUN conda install -y pip setuptools notebook ipywidgets terminado psutil numpy scipy pandas bokeh scikit-learn statsmodels \\\n && conda clean -tipsy\n#   Install the master branch of distributed and dask\nCOPY requirements.txt .\nRUN pip install -r requirements.txt \\\n && rm -rf ~/.cache/pip/\n#   Add local files at the end of the Dockerfule to limit cache busting\nCOPY start-notebook.sh ./bin/\nCOPY start-dworker.sh ./bin/\nCOPY start-dscheduler.sh ./bin/\nCOPY examples examples\n#   Configure matplotlib to avoid using QT\nCOPY matplotlibrc /work/.config/matplotlib/matplotlibrc\n#   Trigger creation of the matplotlib font cache\nENV MATPLOTLIBRC=\"/work/.config/matplotlib\"\nRUN python -c \"import matplotlib.pyplot\"\n#   Switch back to root to make it possible to do interactive admin/debug as\n#   root tasks with docker exec\nUSER root\n#   Files added via COPY need a manual chown\nRUN chown $BASICUSER:users -R /work/.config /work/examples /work/bin /work/requirements.txt\n#   Install Tini that necessary to properly run the notebook service in a docker\n#   container:\n#   http://jupyter-notebook.readthedocs.org/en/latest/public_server.html#docker-cmd\nENV TINI_VERSION=\"v0.9.0\"\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/bin/tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini\nRUN chmod +x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nMAINTAINER Olivier Grisel <olivier.grisel@ensta.org>\nRUN apt-get update -yqq \\\n && apt-get install wget bzip2 git libglib2.0-0 -yqq \\\n && rm -rf /var/lib/apt/lists/*\n#  Configure environment\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\n#  Folder to install non-system tools and serve as workspace for the notebook\n#  user\nRUN mkdir -p /work/bin\n#  Create a non-priviledge user that will run the services\n# ENV BASICUSER basicuser\n# ENV BASICUSER_UID 1000\n# RUN useradd -m -d /work -s /bin/bash -N -u $BASICUSER_UID $BASICUSER\n# RUN chown $BASICUSER /work\n# USER $BASICUSER\n#  Deactivate basic user to make it easier to deal with volume permissions\n#  for now\nENV BASICUSER=\"root\"\nWORKDIR /work\n#  Install Python 3 from miniconda\nRUN wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && bash miniconda.sh -b -p /work/miniconda \\\n && rm miniconda.sh\nENV PATH=\"/work/bin:/work/miniconda/bin:$PATH\"\n#  Install matplotlib and scikit-image without Qt\nRUN conda update -y python conda \\\n && conda install -y --no-deps matplotlib cycler freetype libpng pyparsing pytz python-dateutil scikit-image networkx pillow six \\\n && conda clean -tipsy\nRUN conda install -y pip setuptools notebook ipywidgets terminado psutil numpy scipy pandas bokeh scikit-learn statsmodels \\\n && conda clean -tipsy\n#  Install the master branch of distributed and dask\nCOPY requirements.txt .\nRUN pip install -r requirements.txt \\\n && rm -rf ~/.cache/pip/\n#  Add local files at the end of the Dockerfule to limit cache busting\nCOPY start-notebook.sh ./bin/\nCOPY start-dworker.sh ./bin/\nCOPY start-dscheduler.sh ./bin/\nCOPY examples examples\n#  Configure matplotlib to avoid using QT\nCOPY matplotlibrc /work/.config/matplotlib/matplotlibrc\n#  Trigger creation of the matplotlib font cache\nENV MATPLOTLIBRC=\"/work/.config/matplotlib\"\nRUN python -c \"import matplotlib.pyplot\"\n#  Switch back to root to make it possible to do interactive admin/debug as\n#  root tasks with docker exec\nUSER root\n#  Files added via COPY need a manual chown\nRUN chown $BASICUSER:users -R /work/.config /work/examples /work/bin /work/requirements.txt\n#  Install Tini that necessary to properly run the notebook service in a docker\n#  container:\n#  http://jupyter-notebook.readthedocs.org/en/latest/public_server.html#docker-cmd\nENV TINI_VERSION=\"v0.9.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n","injectedSmells":[],"originalDockerfileHash":"28ce9402ebc7aaf5b33d0ad7301ecc55","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nMAINTAINER Olivier Grisel <olivier.grisel@ensta.org>\nRUN apt-get update -yqq \\\n && apt-get install wget bzip2 git libglib2.0-0 -yqq \\\n && rm -rf /var/lib/apt/lists/*\n#   Configure environment\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\n#   Folder to install non-system tools and serve as workspace for the notebook\n#   user\nRUN mkdir -p /work/bin\n#   Create a non-priviledge user that will run the services\n#  ENV BASICUSER basicuser\n#  ENV BASICUSER_UID 1000\n#  RUN useradd -m -d /work -s /bin/bash -N -u $BASICUSER_UID $BASICUSER\n#  RUN chown $BASICUSER /work\n#  USER $BASICUSER\n#   Deactivate basic user to make it easier to deal with volume permissions\n#   for now\nENV BASICUSER=\"root\"\nWORKDIR /work\n#   Install Python 3 from miniconda\nRUN wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && bash miniconda.sh -b -p /work/miniconda \\\n && rm miniconda.sh\nENV PATH=\"/work/bin:/work/miniconda/bin:$PATH\"\n#   Install matplotlib and scikit-image without Qt\nRUN conda update -y python conda \\\n && conda install -y --no-deps matplotlib cycler freetype libpng pyparsing pytz python-dateutil scikit-image networkx pillow six \\\n && conda clean -tipsy\nRUN conda install -y pip setuptools notebook ipywidgets terminado psutil numpy scipy pandas bokeh scikit-learn statsmodels \\\n && conda clean -tipsy\n#   Install the master branch of distributed and dask\nCOPY requirements.txt .\nRUN pip install -r requirements.txt \\\n && rm -rf ~/.cache/pip/\n#   Add local files at the end of the Dockerfule to limit cache busting\nCOPY start-notebook.sh ./bin/\nCOPY start-dworker.sh ./bin/\nCOPY start-dscheduler.sh ./bin/\nCOPY examples examples\n#   Configure matplotlib to avoid using QT\nCOPY matplotlibrc /work/.config/matplotlib/matplotlibrc\n#   Trigger creation of the matplotlib font cache\nENV MATPLOTLIBRC=\"/work/.config/matplotlib\"\nRUN python -c \"import matplotlib.pyplot\"\n#   Switch back to root to make it possible to do interactive admin/debug as\n#   root tasks with docker exec\nUSER root\n#   Files added via COPY need a manual chown\nRUN chown $BASICUSER:users -R /work/.config /work/examples /work/bin /work/requirements.txt\n#   Install Tini that necessary to properly run the notebook service in a docker\n#   container:\n#   http://jupyter-notebook.readthedocs.org/en/latest/public_server.html#docker-cmd\nENV TINI_VERSION=\"v0.9.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n","originalDockerfileUglifiedHash":"c37e5cea5a5d272f519df248668feeef","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0efa3db7dc79c6ba581bd160a3fe9060c2144d6e.dockerfile"}