{"seed":1824234802,"processedDockerfileHash":"78504412ace0f9695fcd56ef9a548e51","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\n#   Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\nENV R_BASE_VERSION=\"3.3.2\"\nENV VER=\"master\"\nENV DL_TOOL=\"wget\"\nENV DL_PATH=\"/opt/shiny/download/master\"\nENV INS_PATH=\"/opt/shiny\"\n#   Install Java.\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-software-properties=0.96.20.10 software-properties-common=0.96.20.10 -y \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install --no-install-recommends oracle-java8-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk8-installer\nRUN apt-get update \\\n && apt-get install --no-install-recommends ed=1.10-2 less=481-2.1ubuntu0.2 locales=2.23-0ubuntu11.3 nano=2.5.3-2ubuntu2 wget=1.17.1-1ubuntu1.5 ca-certificates=20210119~16.04.1 apt-transport-https=1.2.35 fonts-texgyre=20150923-1 -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nRUN echo \"deb https://cran.rstudio.org/bin/linux/ubuntu xenial/\" > /etc/apt/sources.list.d/rstudio.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && apt-get update \\\n && apt-get install --no-install-recommends sudo=1.8.16-0ubuntu1.10 gdebi-core=0.9.5.7ubuntu1 pandoc=1.16.0.2~dfsg-1 pandoc-citeproc=0.9-1 libcurl4-gnutls-dev=7.47.0-1ubuntu2.19 libcairo2-dev=1.14.6-1 libxt-dev=1:1.1.5-0ubuntu1 r-base=${R_BASE_VERSION}* r-base-dev=${R_BASE_VERSION}* r-recommended=${R_BASE_VERSION}* -y \\\n && echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site \\\n && rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n && rm -rf /var/lib/apt/lists/*\n#   Download and install shiny server\nRUN R -e \"install.packages(c('shiny', 'rmarkdown'), repos='https://cran.rstudio.com/')\"\nRUN mkdir -p ${DL_PATH} \\\n && mkdir -p ${INS_PATH} \\\n && wget -nv -O ${DL_PATH}/${VER}.tar.gz https://github.com/statsplot/jshinyserver/archive/${VER}.tar.gz \\\n && tar zxf ${DL_PATH}/${VER}.tar.gz -C ${DL_PATH} \\\n && ln -s ${DL_PATH}/jshinyserver-*/source/Objects ${INS_PATH}/server \\\n && mkdir -p ${INS_PATH}/server/logs ${INS_PATH}/server/pid \\\n && echo \"[Done] jShiny server ${VER} installed to ${INS_PATH}/server\"\nRUN rm -f ${DL_PATH}/${VER}.tar.gz\nRUN touch ${INS_PATH}/server/config/applist.update\n#  # in case you need to mount folders to /opt/shiny as non-root user\nRUN chmod -R 777 ${INS_PATH}\n#  # https://hub.docker.com/r/rocker/r-apt/~/dockerfile/\n#  # ---- change user 'docker' to 'ruser'. \n#  # ---- docker.docker in the host has access to docker daemon \n#  # Set a default user. Available via runtime flag `--user ruser` \n#  # Add user to 'staff' group, granting them write privileges to /usr/local/lib/R/site.library\n#  # User should also have & own a home directory (for rstudio or linked volumes to work properly). \nRUN useradd ruser \\\n && mkdir /home/ruser \\\n && chown ruser:ruser /home/ruser \\\n && addgroup ruser staff\n#  # By default, docker daemon starts container with root(superuser)\n#  # Superuser inside a container don't get all the Linux capabilities\n#  # Most of the time, it's safe to run with superuser\n#  # Run as non-root 'ruser' with  'docker run -u ruser:ruser ...'\n#  # In the host the user 'ruser'(in 'ruser' group) should exist.\n#  # Run as 'ruser' inside container, when you mount host folders/files,\n#  # if you need to execute/access/read/write/create/delete to a folder/file, \n#  # 'ruser' in the host should has corresponding privileges to it\n#  # and access to its parent folders. \n#  # Remember that inside the container, non-root user can't access to all\n#  # the files/folders or execute commands which need root privileges.\nEXPOSE 8888/tcp\nWORKDIR ${INS_PATH}/server\nCMD [\"java\", \"-jar\", \"server.jar\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\n#  Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\nENV R_BASE_VERSION=\"3.3.2\"\nENV VER=\"master\"\nENV DL_TOOL=\"wget\"\nENV DL_PATH=\"/opt/shiny/download/master\"\nENV INS_PATH=\"/opt/shiny\"\n#  Install Java.\nRUN apt-get update \\\n && apt-get install python-software-properties software-properties-common -y \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java8-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk8-installer\nRUN apt-get update \\\n && apt-get install --no-install-recommends ed less locales nano wget ca-certificates apt-transport-https fonts-texgyre -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nRUN echo \"deb https://cran.rstudio.org/bin/linux/ubuntu xenial/\" > /etc/apt/sources.list.d/rstudio.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && apt-get update \\\n && apt-get install --no-install-recommends sudo gdebi-core pandoc pandoc-citeproc libcurl4-gnutls-dev libcairo2-dev libxt-dev r-base=${R_BASE_VERSION}* r-base-dev=${R_BASE_VERSION}* r-recommended=${R_BASE_VERSION}* -y \\\n && echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site \\\n && rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n && rm -rf /var/lib/apt/lists/*\n#  Download and install shiny server\nRUN R -e \"install.packages(c('shiny', 'rmarkdown'), repos='https://cran.rstudio.com/')\"\nRUN mkdir -p ${DL_PATH} \\\n && mkdir -p ${INS_PATH} \\\n && wget -nv -O ${DL_PATH}/${VER}.tar.gz https://github.com/statsplot/jshinyserver/archive/${VER}.tar.gz \\\n && tar zxf ${DL_PATH}/${VER}.tar.gz -C ${DL_PATH} \\\n && ln -s ${DL_PATH}/jshinyserver-*/source/Objects ${INS_PATH}/server \\\n && mkdir -p ${INS_PATH}/server/logs ${INS_PATH}/server/pid \\\n && echo \"[Done] jShiny server ${VER} installed to ${INS_PATH}/server\"\nRUN rm -f ${DL_PATH}/${VER}.tar.gz\nRUN touch ${INS_PATH}/server/config/applist.update\n# # in case you need to mount folders to /opt/shiny as non-root user\nRUN chmod -R 777 ${INS_PATH}\n# # https://hub.docker.com/r/rocker/r-apt/~/dockerfile/\n# # ---- change user 'docker' to 'ruser'. \n# # ---- docker.docker in the host has access to docker daemon \n# # Set a default user. Available via runtime flag `--user ruser` \n# # Add user to 'staff' group, granting them write privileges to /usr/local/lib/R/site.library\n# # User should also have & own a home directory (for rstudio or linked volumes to work properly). \nRUN useradd ruser \\\n && mkdir /home/ruser \\\n && chown ruser:ruser /home/ruser \\\n && addgroup ruser staff\n# # By default, docker daemon starts container with root(superuser)\n# # Superuser inside a container don't get all the Linux capabilities\n# # Most of the time, it's safe to run with superuser\n# # Run as non-root 'ruser' with  'docker run -u ruser:ruser ...'\n# # In the host the user 'ruser'(in 'ruser' group) should exist.\n# # Run as 'ruser' inside container, when you mount host folders/files,\n# # if you need to execute/access/read/write/create/delete to a folder/file, \n# # 'ruser' in the host should has corresponding privileges to it\n# # and access to its parent folders. \n# # Remember that inside the container, non-root user can't access to all\n# # the files/folders or execute commands which need root privileges.\nEXPOSE 8888/tcp\nWORKDIR ${INS_PATH}/server\nCMD [\"java\", \"-jar\", \"server.jar\"]\n","injectedSmells":[],"originalDockerfileHash":"aca262de41159178c8483bc46cbb9d32","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\n#   Define commonly used JAVA_HOME variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\nENV R_BASE_VERSION=\"3.3.2\"\nENV VER=\"master\"\nENV DL_TOOL=\"wget\"\nENV DL_PATH=\"/opt/shiny/download/master\"\nENV INS_PATH=\"/opt/shiny\"\n#   Install Java.\nRUN apt-get update \\\n && apt-get install python-software-properties software-properties-common -y \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java8-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk8-installer\nRUN apt-get update \\\n && apt-get install --no-install-recommends ed less locales nano wget ca-certificates apt-transport-https fonts-texgyre -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nRUN echo \"deb https://cran.rstudio.org/bin/linux/ubuntu xenial/\" > /etc/apt/sources.list.d/rstudio.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 \\\n && apt-get update \\\n && apt-get install --no-install-recommends sudo gdebi-core pandoc pandoc-citeproc libcurl4-gnutls-dev libcairo2-dev libxt-dev r-base=${R_BASE_VERSION}* r-base-dev=${R_BASE_VERSION}* r-recommended=${R_BASE_VERSION}* -y \\\n && echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site \\\n && rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n && rm -rf /var/lib/apt/lists/*\n#   Download and install shiny server\nRUN R -e \"install.packages(c('shiny', 'rmarkdown'), repos='https://cran.rstudio.com/')\"\nRUN mkdir -p ${DL_PATH} \\\n && mkdir -p ${INS_PATH} \\\n && wget -nv -O ${DL_PATH}/${VER}.tar.gz https://github.com/statsplot/jshinyserver/archive/${VER}.tar.gz \\\n && tar zxf ${DL_PATH}/${VER}.tar.gz -C ${DL_PATH} \\\n && ln -s ${DL_PATH}/jshinyserver-*/source/Objects ${INS_PATH}/server \\\n && mkdir -p ${INS_PATH}/server/logs ${INS_PATH}/server/pid \\\n && echo \"[Done] jShiny server ${VER} installed to ${INS_PATH}/server\"\nRUN rm -f ${DL_PATH}/${VER}.tar.gz\nRUN touch ${INS_PATH}/server/config/applist.update\n#  # in case you need to mount folders to /opt/shiny as non-root user\nRUN chmod -R 777 ${INS_PATH}\n#  # https://hub.docker.com/r/rocker/r-apt/~/dockerfile/\n#  # ---- change user 'docker' to 'ruser'. \n#  # ---- docker.docker in the host has access to docker daemon \n#  # Set a default user. Available via runtime flag `--user ruser` \n#  # Add user to 'staff' group, granting them write privileges to /usr/local/lib/R/site.library\n#  # User should also have & own a home directory (for rstudio or linked volumes to work properly). \nRUN useradd ruser \\\n && mkdir /home/ruser \\\n && chown ruser:ruser /home/ruser \\\n && addgroup ruser staff\n#  # By default, docker daemon starts container with root(superuser)\n#  # Superuser inside a container don't get all the Linux capabilities\n#  # Most of the time, it's safe to run with superuser\n#  # Run as non-root 'ruser' with  'docker run -u ruser:ruser ...'\n#  # In the host the user 'ruser'(in 'ruser' group) should exist.\n#  # Run as 'ruser' inside container, when you mount host folders/files,\n#  # if you need to execute/access/read/write/create/delete to a folder/file, \n#  # 'ruser' in the host should has corresponding privileges to it\n#  # and access to its parent folders. \n#  # Remember that inside the container, non-root user can't access to all\n#  # the files/folders or execute commands which need root privileges.\nEXPOSE 8888/tcp\nWORKDIR ${INS_PATH}/server\nCMD [\"java\", \"-jar\", \"server.jar\"]\n","originalDockerfileUglifiedHash":"ac977aee60b7586dcbad6299e0a776a5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e7072042d46881d776a05776ac1184e53918c98c.dockerfile"}