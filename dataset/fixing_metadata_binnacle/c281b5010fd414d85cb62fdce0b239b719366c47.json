{"seed":156926935,"processedDockerfileHash":"3e893aec69ace743b8ac0087897df285","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM centos:7\nUSER root\nCOPY ansible.repo /etc/yum.repos.d/ansible.repo\nCOPY RPM-GPG-KEY-ansible-release /etc/pki/rpm-gpg/RPM-GPG-KEY-ansible-release\nRUN yum -y update \\\n && yum -y install epel-release\n#   sync with tools/docker-compose/Dockerfile\nRUN yum -y install acl ansible bubblewrap curl cyrus-sasl cyrus-sasl-devel gcc gcc-c++ git krb5-devel krb5-libs krb5-workstation libcurl-devel libffi-devel libselinux-python libstdc++.so.6 libtool-ltdl-devel libxml2-devel libxslt-devel make mercurial mg nginx nodejs openldap-devel openssh-server postgresql-devel python-devel python-pip python-psutil python-psycopg2 python-setuptools python36-devel python36-setuptools rsync setools-libs subversion sudo swig tmux unzip vim xmlsec1 xmlsec1-devel xmlsec1-openssl xmlsec1-openssl-devel yum-utils\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /tini https://github.com/krallin/tini/releases/download/v0.14.0/tini\nRUN chmod +x /tini\nRUN python3 -m ensurepip \\\n && pip3 install virtualenv\nRUN pip install supervisor==4.2.5\nCOPY Makefile /tmp/Makefile\nRUN mkdir /tmp/requirements\nCOPY requirements/requirements_ansible.txt requirements/requirements_ansible_uninstall.txt requirements/requirements_ansible_git.txt requirements/requirements.txt requirements/requirements_tower_uninstall.txt requirements/requirements_git.txt /tmp/requirements/\nRUN cd /tmp \\\n && VENV_BASE=\"/var/lib/awx/venv\" make requirements\nRUN yum -y remove cyrus-sasl-devel gcc gcc-c++ krb5-devel libtool-ltdl-devel libxml2-devel libxslt-devel openldap-devel postgresql-devel python-devel python36-devel nodejs xmlsec1-devel xmlsec1-openssl-devel\nRUN yum -y clean all\nRUN rm -rf /root/.cache\nRUN localedef -c -i en_US -f UTF-8 en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN ln -s /var/lib/awx/venv/awx/bin/awx-manage /usr/bin/awx-manage\nRUN rm -rf /tmp/*\nRUN echo \"{{ awx_version }}\" > /var/lib/awx/.tower_version\nCOPY {{ awx_sdist_file }} /tmp/{{ awx_sdist_file }}/\nRUN OFFICIAL=yes /var/lib/awx/venv/awx/bin/pip install /tmp/{{ awx_sdist_file }}\nCOPY settings.py /etc/tower/settings.py\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY supervisor.conf /supervisor.conf\nCOPY supervisor_task.conf /supervisor_task.conf\nCOPY launch_awx.sh /usr/bin/launch_awx.sh\nCOPY launch_awx_task.sh /usr/bin/launch_awx_task.sh\nCOPY config-watcher /usr/bin/config-watcher\nRUN chmod +rx /usr/bin/launch_awx.sh \\\n && chmod +rx /usr/bin/launch_awx_task.sh \\\n && chmod +rx /usr/bin/config-watcher\nRUN find /var/lib/awx -not -path '/var/lib/awx/venv*' | xargs chgrp root\nRUN find /var/lib/awx -not -path '/var/lib/awx/venv*' | xargs chmod g+w\n#   Pre-create things that we need to write to\nRUN for dir in /home/awx /var/log/tower /var/log/nginx /var/lib/nginx; do mkdir -p $dir ;chmod -R g+rwx $dir ;chgrp -R root $dir ; done\nRUN for file in /etc/passwd /var/run/nginx.pid; do touch $file ;chmod -R g+rwx $file ;chgrp -R root $file ; done\nVOLUME /var/lib/nginx\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nENV HOME=\"/home/awx\"\nWORKDIR ${HOME}\nUSER 1000\nEXPOSE 8052/tcp\nENTRYPOINT [\"/tini\", \"--\"]\nCMD /usr/bin/launch_awx.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:7\nUSER root\nADD ansible.repo /etc/yum.repos.d/ansible.repo\nADD RPM-GPG-KEY-ansible-release /etc/pki/rpm-gpg/RPM-GPG-KEY-ansible-release\nRUN yum -y update \\\n && yum -y install epel-release\n#  sync with tools/docker-compose/Dockerfile\nRUN yum -y install acl ansible bubblewrap curl cyrus-sasl cyrus-sasl-devel gcc gcc-c++ git krb5-devel krb5-libs krb5-workstation libcurl-devel libffi-devel libselinux-python libstdc++.so.6 libtool-ltdl-devel libxml2-devel libxslt-devel make mercurial mg nginx nodejs openldap-devel openssh-server postgresql-devel python-devel python-pip python-psutil python-psycopg2 python-setuptools python36-devel python36-setuptools rsync setools-libs subversion sudo swig tmux unzip vim xmlsec1 xmlsec1-devel xmlsec1-openssl xmlsec1-openssl-devel yum-utils\nADD https://github.com/krallin/tini/releases/download/v0.14.0/tini /tini\nRUN chmod +x /tini\nRUN python3 -m ensurepip \\\n && pip3 install virtualenv\nRUN pip install supervisor\nADD Makefile /tmp/Makefile\nRUN mkdir /tmp/requirements\nADD requirements/requirements_ansible.txt requirements/requirements_ansible_uninstall.txt requirements/requirements_ansible_git.txt requirements/requirements.txt requirements/requirements_tower_uninstall.txt requirements/requirements_git.txt /tmp/requirements/\nRUN cd /tmp \\\n && VENV_BASE=\"/var/lib/awx/venv\" make requirements\nRUN yum -y remove cyrus-sasl-devel gcc gcc-c++ krb5-devel libtool-ltdl-devel libxml2-devel libxslt-devel openldap-devel postgresql-devel python-devel python36-devel nodejs xmlsec1-devel xmlsec1-openssl-devel\nRUN yum -y clean all\nRUN rm -rf /root/.cache\nRUN localedef -c -i en_US -f UTF-8 en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN ln -s /var/lib/awx/venv/awx/bin/awx-manage /usr/bin/awx-manage\nRUN rm -rf /tmp/*\nRUN echo \"{{ awx_version }}\" > /var/lib/awx/.tower_version\nCOPY {{ awx_sdist_file }} /tmp/{{ awx_sdist_file }}/\nRUN OFFICIAL=yes /var/lib/awx/venv/awx/bin/pip install /tmp/{{ awx_sdist_file }}\nADD settings.py /etc/tower/settings.py\nADD nginx.conf /etc/nginx/nginx.conf\nADD supervisor.conf /supervisor.conf\nADD supervisor_task.conf /supervisor_task.conf\nADD launch_awx.sh /usr/bin/launch_awx.sh\nADD launch_awx_task.sh /usr/bin/launch_awx_task.sh\nADD config-watcher /usr/bin/config-watcher\nRUN chmod +rx /usr/bin/launch_awx.sh \\\n && chmod +rx /usr/bin/launch_awx_task.sh \\\n && chmod +rx /usr/bin/config-watcher\nRUN find /var/lib/awx -not -path '/var/lib/awx/venv*' | xargs chgrp root\nRUN find /var/lib/awx -not -path '/var/lib/awx/venv*' | xargs chmod g+w\n#  Pre-create things that we need to write to\nRUN for dir in /home/awx /var/log/tower /var/log/nginx /var/lib/nginx; do mkdir -p $dir ;chmod -R g+rwx $dir ;chgrp -R root $dir ; done\nRUN for file in /etc/passwd /var/run/nginx.pid; do touch $file ;chmod -R g+rwx $file ;chgrp -R root $file ; done\nVOLUME /var/lib/nginx\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nENV HOME=\"/home/awx\"\nWORKDIR ${HOME}\nUSER 1000\nEXPOSE 8052/tcp\nENTRYPOINT [\"/tini\", \"--\"]\nCMD /usr/bin/launch_awx.sh\n","injectedSmells":[],"originalDockerfileHash":"ec0c3999cb0c5eb5302a5047095a83d7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7\nUSER root\nADD ansible.repo /etc/yum.repos.d/ansible.repo\nADD RPM-GPG-KEY-ansible-release /etc/pki/rpm-gpg/RPM-GPG-KEY-ansible-release\nRUN yum -y update \\\n && yum -y install epel-release\n#   sync with tools/docker-compose/Dockerfile\nRUN yum -y install acl ansible bubblewrap curl cyrus-sasl cyrus-sasl-devel gcc gcc-c++ git krb5-devel krb5-libs krb5-workstation libcurl-devel libffi-devel libselinux-python libstdc++.so.6 libtool-ltdl-devel libxml2-devel libxslt-devel make mercurial mg nginx nodejs openldap-devel openssh-server postgresql-devel python-devel python-pip python-psutil python-psycopg2 python-setuptools python36-devel python36-setuptools rsync setools-libs subversion sudo swig tmux unzip vim xmlsec1 xmlsec1-devel xmlsec1-openssl xmlsec1-openssl-devel yum-utils\nADD https://github.com/krallin/tini/releases/download/v0.14.0/tini /tini\nRUN chmod +x /tini\nRUN python3 -m ensurepip \\\n && pip3 install virtualenv\nRUN pip install supervisor\nADD Makefile /tmp/Makefile\nRUN mkdir /tmp/requirements\nADD requirements/requirements_ansible.txt requirements/requirements_ansible_uninstall.txt requirements/requirements_ansible_git.txt requirements/requirements.txt requirements/requirements_tower_uninstall.txt requirements/requirements_git.txt /tmp/requirements/\nRUN cd /tmp \\\n && VENV_BASE=\"/var/lib/awx/venv\" make requirements\nRUN yum -y remove cyrus-sasl-devel gcc gcc-c++ krb5-devel libtool-ltdl-devel libxml2-devel libxslt-devel openldap-devel postgresql-devel python-devel python36-devel nodejs xmlsec1-devel xmlsec1-openssl-devel\nRUN yum -y clean all\nRUN rm -rf /root/.cache\nRUN localedef -c -i en_US -f UTF-8 en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN ln -s /var/lib/awx/venv/awx/bin/awx-manage /usr/bin/awx-manage\nRUN rm -rf /tmp/*\nRUN echo \"{{ awx_version }}\" > /var/lib/awx/.tower_version\nCOPY {{ awx_sdist_file }} /tmp/{{ awx_sdist_file }}/\nRUN OFFICIAL=yes /var/lib/awx/venv/awx/bin/pip install /tmp/{{ awx_sdist_file }}\nADD settings.py /etc/tower/settings.py\nADD nginx.conf /etc/nginx/nginx.conf\nADD supervisor.conf /supervisor.conf\nADD supervisor_task.conf /supervisor_task.conf\nADD launch_awx.sh /usr/bin/launch_awx.sh\nADD launch_awx_task.sh /usr/bin/launch_awx_task.sh\nADD config-watcher /usr/bin/config-watcher\nRUN chmod +rx /usr/bin/launch_awx.sh \\\n && chmod +rx /usr/bin/launch_awx_task.sh \\\n && chmod +rx /usr/bin/config-watcher\nRUN find /var/lib/awx -not -path '/var/lib/awx/venv*' | xargs chgrp root\nRUN find /var/lib/awx -not -path '/var/lib/awx/venv*' | xargs chmod g+w\n#   Pre-create things that we need to write to\nRUN for dir in /home/awx /var/log/tower /var/log/nginx /var/lib/nginx; do mkdir -p $dir ;chmod -R g+rwx $dir ;chgrp -R root $dir ; done\nRUN for file in /etc/passwd /var/run/nginx.pid; do touch $file ;chmod -R g+rwx $file ;chgrp -R root $file ; done\nVOLUME /var/lib/nginx\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nENV HOME=\"/home/awx\"\nWORKDIR ${HOME}\nUSER 1000\nEXPOSE 8052/tcp\nENTRYPOINT [\"/tini\", \"--\"]\nCMD /usr/bin/launch_awx.sh\n","originalDockerfileUglifiedHash":"c203d1d21647fba450ec145d492d9b5a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c281b5010fd414d85cb62fdce0b239b719366c47.dockerfile"}