{"seed":4007351489,"processedDockerfileHash":"fd4f96bcc047454e902ab1dc8113adfd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:0.9.16\nMAINTAINER sparklyballs <sparkly@madeupemail.com>\n#   Set correct environment variables\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    HOME=\"/root\" \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#   set ports\nEXPOSE 9777/udp 8080/tcp 3306/tcp\n#   Use baseimage-docker's init system\nCMD [\"/sbin/my_init\"]\n#   Add required files that are local\nCOPY src/ /root/\n#   set config volume\nVOLUME /config\n#   Set the locale\nRUN locale-gen en_US.UTF-8 \\\n && usermod -u 99 nobody \\\n && usermod -g 100 nobody \\\n && kodiCheckout=15.1-Isengard \\\n && mkdir /etc/service/kodi \\\n && mkdir /etc/service/mariadb \\\n && mkdir -p /config/databases \\\n && mv /root/kodi.sh /etc/service/kodi/run \\\n && mv /root/001-fix-the-time.sh /etc/my_init.d/001-fix-the-time.sh \\\n && mv /root/media-firstrun.sh /etc/my_init.d/media-firstrun.sh \\\n && mv /root/mariadb.sh /etc/service/mariadb/run \\\n && mv /root/createuser /usr/bin/createuser \\\n && mv /root/createdatabase /usr/bin/createdatabase \\\n && chown -R nobody:users /config \\\n && chmod +x /etc/service/kodi/run \\\n && chmod +x /etc/my_init.d/media-firstrun.sh \\\n && chmod +x /etc/my_init.d/001-fix-the-time.sh \\\n && chmod +x /etc/service/mariadb/run \\\n && chmod +x /usr/bin/createuser \\\n && chmod +x /usr/bin/createdatabase \\\n && buildDeps=\"build-essential zip unzip yasm gawk cmake wget git-core autoconf libtool automake autopoint swig doxygen openjdk-7-jre-headless gperf libsqlite3-dev libpcre3-dev libtag1-dev libbluray-dev libjasper-dev libmicrohttpd-dev libavahi-client-dev libxrandr-dev libssh-dev libsmbclient-dev libnfs-dev libboost1.54-dev python-dev libmysqlclient-dev libgle3-dev libglew-dev libass-dev libmpeg2-4-dev libjpeg-dev libflac-dev libvorbis-dev libgnutls-dev libbz2-ocaml-dev libtiff5-dev libyajl-dev libssl-dev libxml2-dev libxslt-dev libiso9660-dev libtinyxml-dev liblzo2-dev\" \\\n && runtimeDeps=\"zip libpcrecpp0 libtag1-vanilla libtag1c2a libaacs0 libbluray1 libjasper1 libjpeg-turbo8 libjpeg8 libmicrohttpd10 libavahi-client3 libavahi-common-dev libdbus-1-dev libssh-4 libsmbclient libnfs1 libmysqlclient18 libgle3 libglew1.10 libass4 libmpeg2-4 libjpeg-turbo8 libflac8 libogg0 libvorbis0a libvorbisenc2 libvorbisfile3 libbz2-ocaml libtiff5 libtiffxx5 libyajl2 libxslt1.1 libiso9660-8 libtinyxml2.6.2 liblzo2-2 libxrandr2 unzip\" \\\n && mv /root/excludes /etc/dpkg/dpkg.cfg.d/excludes \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends $buildDeps -qy \\\n && cd /tmp/ \\\n && git clone https://github.com/xbmc/xbmc.git \\\n && wget http://curl.haxx.se/download/curl-7.43.0.tar.gz \\\n && cd /tmp \\\n && tar xvf curl-* \\\n && cd curl-* \\\n && ./configure --prefix=/usr --with-ssl --with-zlib \\\n && make \\\n && make install \\\n && cd /tmp/xbmc \\\n && mv /root/headless.patch . \\\n && git checkout $kodiCheckout \\\n && git apply headless.patch \\\n && ./bootstrap \\\n && ./configure --enable-nfs --enable-upnp --enable-ssh --enable-libbluray --disable-debug --disable-vdpau --disable-vaapi --disable-crystalhd --disable-vdadecoder --disable-vtbdecoder --disable-openmax --disable-joystick --disable-rsxs --disable-projectm --disable-rtmp --disable-airplay --disable-airtunes --disable-dvdcss --disable-optical-drive --disable-libusb --disable-libcec --disable-libmp3lame --disable-libcap --disable-udev --disable-libvorbisenc --disable-asap-codec --disable-afpclient --disable-goom --disable-fishbmc --disable-spectrum --disable-waveform --disable-avahi --disable-non-free --disable-texturepacker --disable-pulse --disable-dbus --disable-alsa --disable-hal --prefix=/opt/kodi-server \\\n && make \\\n && make install \\\n && chown -R nobody:users /opt/kodi-server \\\n && apt-get purge -y --remove $buildDeps \\\n && apt-get -y autoremove \\\n && apt-get install --no-install-recommends mariadb-server $runtimeDeps -qy \\\n && sed -i -e 's#\\(bind-address.*=\\).*#\\1 0.0.0.0#g' /etc/mysql/my.cnf \\\n && sed -i -e 's#\\(log_error.*=\\).*#\\1 /config/databases/mysql_safe.log#g' /etc/mysql/my.cnf \\\n && sed -i -e 's/\\(user.*=\\).*/\\1 nobody/g' /etc/mysql/my.cnf \\\n && echo '[mysqld]' > /etc/mysql/conf.d/innodb_file_per_table.cnf \\\n && echo 'innodb_file_per_table' >> /etc/mysql/conf.d/innodb_file_per_table.cnf \\\n && add-apt-repository ppa:team-xbmc/ppa \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends kodi-eventclients-xbmc-send -qy \\\n && add-apt-repository --remove ppa:team-xbmc/ppa \\\n && cd / \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/groff /usr/share/info /usr/share/lintian /usr/share/linda /var/cache/man \\\n && ((find /usr/share/doc -depth -type f ! -name copyright | xargs rm || true ) ) \\\n && ((find /usr/share/doc -empty | xargs rmdir || true ) )\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:0.9.16\nMAINTAINER sparklyballs <sparkly@madeupemail.com>\n#  Set correct environment variables\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    HOME=\"/root\" \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#  set ports\nEXPOSE 9777/udp 8080/tcp 3306/tcp\n#  Use baseimage-docker's init system\nCMD [\"/sbin/my_init\"]\n#  Add required files that are local\nADD src/ /root/\n#  set config volume\nVOLUME /config\n#  Set the locale\nRUN locale-gen en_US.UTF-8 \\\n && usermod -u 99 nobody \\\n && usermod -g 100 nobody \\\n && kodiCheckout=15.1-Isengard \\\n && mkdir /etc/service/kodi \\\n && mkdir /etc/service/mariadb \\\n && mkdir -p /config/databases \\\n && mv /root/kodi.sh /etc/service/kodi/run \\\n && mv /root/001-fix-the-time.sh /etc/my_init.d/001-fix-the-time.sh \\\n && mv /root/media-firstrun.sh /etc/my_init.d/media-firstrun.sh \\\n && mv /root/mariadb.sh /etc/service/mariadb/run \\\n && mv /root/createuser /usr/bin/createuser \\\n && mv /root/createdatabase /usr/bin/createdatabase \\\n && chown -R nobody:users /config \\\n && chmod +x /etc/service/kodi/run \\\n && chmod +x /etc/my_init.d/media-firstrun.sh \\\n && chmod +x /etc/my_init.d/001-fix-the-time.sh \\\n && chmod +x /etc/service/mariadb/run \\\n && chmod +x /usr/bin/createuser \\\n && chmod +x /usr/bin/createdatabase \\\n && buildDeps=\"build-essential zip unzip yasm gawk cmake wget git-core autoconf libtool automake autopoint swig doxygen openjdk-7-jre-headless gperf libsqlite3-dev libpcre3-dev libtag1-dev libbluray-dev libjasper-dev libmicrohttpd-dev libavahi-client-dev libxrandr-dev libssh-dev libsmbclient-dev libnfs-dev libboost1.54-dev python-dev libmysqlclient-dev libgle3-dev libglew-dev libass-dev libmpeg2-4-dev libjpeg-dev libflac-dev libvorbis-dev libgnutls-dev libbz2-ocaml-dev libtiff5-dev libyajl-dev libssl-dev libxml2-dev libxslt-dev libiso9660-dev libtinyxml-dev liblzo2-dev\" \\\n && runtimeDeps=\"zip libpcrecpp0 libtag1-vanilla libtag1c2a libaacs0 libbluray1 libjasper1 libjpeg-turbo8 libjpeg8 libmicrohttpd10 libavahi-client3 libavahi-common-dev libdbus-1-dev libssh-4 libsmbclient libnfs1 libmysqlclient18 libgle3 libglew1.10 libass4 libmpeg2-4 libjpeg-turbo8 libflac8 libogg0 libvorbis0a libvorbisenc2 libvorbisfile3 libbz2-ocaml libtiff5 libtiffxx5 libyajl2 libxslt1.1 libiso9660-8 libtinyxml2.6.2 liblzo2-2 libxrandr2 unzip\" \\\n && mv /root/excludes /etc/dpkg/dpkg.cfg.d/excludes \\\n && apt-get update -qq \\\n && apt-get install $buildDeps -qy \\\n && cd /tmp/ \\\n && git clone https://github.com/xbmc/xbmc.git \\\n && wget http://curl.haxx.se/download/curl-7.43.0.tar.gz \\\n && cd /tmp \\\n && tar xvf curl-* \\\n && cd curl-* \\\n && ./configure --prefix=/usr --with-ssl --with-zlib \\\n && make \\\n && make install \\\n && cd /tmp/xbmc \\\n && mv /root/headless.patch . \\\n && git checkout $kodiCheckout \\\n && git apply headless.patch \\\n && ./bootstrap \\\n && ./configure --enable-nfs --enable-upnp --enable-ssh --enable-libbluray --disable-debug --disable-vdpau --disable-vaapi --disable-crystalhd --disable-vdadecoder --disable-vtbdecoder --disable-openmax --disable-joystick --disable-rsxs --disable-projectm --disable-rtmp --disable-airplay --disable-airtunes --disable-dvdcss --disable-optical-drive --disable-libusb --disable-libcec --disable-libmp3lame --disable-libcap --disable-udev --disable-libvorbisenc --disable-asap-codec --disable-afpclient --disable-goom --disable-fishbmc --disable-spectrum --disable-waveform --disable-avahi --disable-non-free --disable-texturepacker --disable-pulse --disable-dbus --disable-alsa --disable-hal --prefix=/opt/kodi-server \\\n && make \\\n && make install \\\n && chown -R nobody:users /opt/kodi-server \\\n && apt-get purge -y --remove $buildDeps \\\n && apt-get -y autoremove \\\n && apt-get install mariadb-server $runtimeDeps -qy \\\n && sed -i -e 's#\\(bind-address.*=\\).*#\\1 0.0.0.0#g' /etc/mysql/my.cnf \\\n && sed -i -e 's#\\(log_error.*=\\).*#\\1 /config/databases/mysql_safe.log#g' /etc/mysql/my.cnf \\\n && sed -i -e 's/\\(user.*=\\).*/\\1 nobody/g' /etc/mysql/my.cnf \\\n && echo '[mysqld]' > /etc/mysql/conf.d/innodb_file_per_table.cnf \\\n && echo 'innodb_file_per_table' >> /etc/mysql/conf.d/innodb_file_per_table.cnf \\\n && add-apt-repository ppa:team-xbmc/ppa \\\n && apt-get update -qq \\\n && apt-get install kodi-eventclients-xbmc-send -qy \\\n && add-apt-repository --remove ppa:team-xbmc/ppa \\\n && cd / \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/groff /usr/share/info /usr/share/lintian /usr/share/linda /var/cache/man \\\n && ((find /usr/share/doc -depth -type f ! -name copyright | xargs rm || true ) ) \\\n && ((find /usr/share/doc -empty | xargs rmdir || true ) )\n","injectedSmells":[],"originalDockerfileHash":"c1146a3f6d068e3ffaba0462eedb54c1","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:0.9.16\nMAINTAINER sparklyballs <sparkly@madeupemail.com>\n#   Set correct environment variables\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    HOME=\"/root\" \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#   set ports\nEXPOSE 9777/udp 8080/tcp 3306/tcp\n#   Use baseimage-docker's init system\nCMD [\"/sbin/my_init\"]\n#   Add required files that are local\nADD src/ /root/\n#   set config volume\nVOLUME /config\n#   Set the locale\nRUN locale-gen en_US.UTF-8 \\\n && usermod -u 99 nobody \\\n && usermod -g 100 nobody \\\n && kodiCheckout=15.1-Isengard \\\n && mkdir /etc/service/kodi \\\n && mkdir /etc/service/mariadb \\\n && mkdir -p /config/databases \\\n && mv /root/kodi.sh /etc/service/kodi/run \\\n && mv /root/001-fix-the-time.sh /etc/my_init.d/001-fix-the-time.sh \\\n && mv /root/media-firstrun.sh /etc/my_init.d/media-firstrun.sh \\\n && mv /root/mariadb.sh /etc/service/mariadb/run \\\n && mv /root/createuser /usr/bin/createuser \\\n && mv /root/createdatabase /usr/bin/createdatabase \\\n && chown -R nobody:users /config \\\n && chmod +x /etc/service/kodi/run \\\n && chmod +x /etc/my_init.d/media-firstrun.sh \\\n && chmod +x /etc/my_init.d/001-fix-the-time.sh \\\n && chmod +x /etc/service/mariadb/run \\\n && chmod +x /usr/bin/createuser \\\n && chmod +x /usr/bin/createdatabase \\\n && buildDeps=\"build-essential zip unzip yasm gawk cmake wget git-core autoconf libtool automake autopoint swig doxygen openjdk-7-jre-headless gperf libsqlite3-dev libpcre3-dev libtag1-dev libbluray-dev libjasper-dev libmicrohttpd-dev libavahi-client-dev libxrandr-dev libssh-dev libsmbclient-dev libnfs-dev libboost1.54-dev python-dev libmysqlclient-dev libgle3-dev libglew-dev libass-dev libmpeg2-4-dev libjpeg-dev libflac-dev libvorbis-dev libgnutls-dev libbz2-ocaml-dev libtiff5-dev libyajl-dev libssl-dev libxml2-dev libxslt-dev libiso9660-dev libtinyxml-dev liblzo2-dev\" \\\n && runtimeDeps=\"zip libpcrecpp0 libtag1-vanilla libtag1c2a libaacs0 libbluray1 libjasper1 libjpeg-turbo8 libjpeg8 libmicrohttpd10 libavahi-client3 libavahi-common-dev libdbus-1-dev libssh-4 libsmbclient libnfs1 libmysqlclient18 libgle3 libglew1.10 libass4 libmpeg2-4 libjpeg-turbo8 libflac8 libogg0 libvorbis0a libvorbisenc2 libvorbisfile3 libbz2-ocaml libtiff5 libtiffxx5 libyajl2 libxslt1.1 libiso9660-8 libtinyxml2.6.2 liblzo2-2 libxrandr2 unzip\" \\\n && mv /root/excludes /etc/dpkg/dpkg.cfg.d/excludes \\\n && apt-get update -qq \\\n && apt-get install $buildDeps -qy \\\n && cd /tmp/ \\\n && git clone https://github.com/xbmc/xbmc.git \\\n && wget http://curl.haxx.se/download/curl-7.43.0.tar.gz \\\n && cd /tmp \\\n && tar xvf curl-* \\\n && cd curl-* \\\n && ./configure --prefix=/usr --with-ssl --with-zlib \\\n && make \\\n && make install \\\n && cd /tmp/xbmc \\\n && mv /root/headless.patch . \\\n && git checkout $kodiCheckout \\\n && git apply headless.patch \\\n && ./bootstrap \\\n && ./configure --enable-nfs --enable-upnp --enable-ssh --enable-libbluray --disable-debug --disable-vdpau --disable-vaapi --disable-crystalhd --disable-vdadecoder --disable-vtbdecoder --disable-openmax --disable-joystick --disable-rsxs --disable-projectm --disable-rtmp --disable-airplay --disable-airtunes --disable-dvdcss --disable-optical-drive --disable-libusb --disable-libcec --disable-libmp3lame --disable-libcap --disable-udev --disable-libvorbisenc --disable-asap-codec --disable-afpclient --disable-goom --disable-fishbmc --disable-spectrum --disable-waveform --disable-avahi --disable-non-free --disable-texturepacker --disable-pulse --disable-dbus --disable-alsa --disable-hal --prefix=/opt/kodi-server \\\n && make \\\n && make install \\\n && chown -R nobody:users /opt/kodi-server \\\n && apt-get purge -y --remove $buildDeps \\\n && apt-get -y autoremove \\\n && apt-get install mariadb-server $runtimeDeps -qy \\\n && sed -i -e 's#\\(bind-address.*=\\).*#\\1 0.0.0.0#g' /etc/mysql/my.cnf \\\n && sed -i -e 's#\\(log_error.*=\\).*#\\1 /config/databases/mysql_safe.log#g' /etc/mysql/my.cnf \\\n && sed -i -e 's/\\(user.*=\\).*/\\1 nobody/g' /etc/mysql/my.cnf \\\n && echo '[mysqld]' > /etc/mysql/conf.d/innodb_file_per_table.cnf \\\n && echo 'innodb_file_per_table' >> /etc/mysql/conf.d/innodb_file_per_table.cnf \\\n && add-apt-repository ppa:team-xbmc/ppa \\\n && apt-get update -qq \\\n && apt-get install kodi-eventclients-xbmc-send -qy \\\n && add-apt-repository --remove ppa:team-xbmc/ppa \\\n && cd / \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/groff /usr/share/info /usr/share/lintian /usr/share/linda /var/cache/man \\\n && ((find /usr/share/doc -depth -type f ! -name copyright | xargs rm || true ) ) \\\n && ((find /usr/share/doc -empty | xargs rmdir || true ) )\n","originalDockerfileUglifiedHash":"b233dc58d27e69f1c595262b414a0206","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/24cf3b3f215836fa564af8b563ee59d24aa0de0c.dockerfile"}