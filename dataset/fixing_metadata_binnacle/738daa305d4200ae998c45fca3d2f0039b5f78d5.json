{"seed":3250598507,"processedDockerfileHash":"3b171ca2332764937d78224bc1d822d4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:7\nARG UID=0\nRUN yum -y update \\\n && yum -y install epel-release\n#   sync with installer/roles/image_build/templates/Dockerfile.j2\nRUN yum -y install acl alsa-lib ansible atk bubblewrap cups-libs curl cyrus-sasl cyrus-sasl-devel gcc gcc-c++ GConf2 git gtk3 ipa-gothic-fonts krb5-devel krb5-libs krb5-workstation libcurl-devel libffi-devel libselinux-python libstdc++.so.6 libtool-ltdl-devel libXcomposite libXcursor libXdamage libXext libXi libxml2-devel libXrandr libXScrnSaver libxslt-devel libXtst make mercurial mg nginx nodejs openldap-devel openssh-server postgresql-devel python-devel python-pip python-psutil python-psycopg2 python-setuptools python36-devel python36-setuptools rsync setools-libs subversion sudo swig tmux unzip vim xmlsec1 xmlsec1-devel xmlsec1-openssl xmlsec1-openssl-devel xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-fonts-cyrillic xorg-x11-fonts-misc xorg-x11-fonts-Type1 xorg-x11-utils yum-utils\nRUN yum install -y https://github.com/krallin/tini/releases/download/v0.18.0/tini_0.18.0.rpm\nRUN /usr/bin/ssh-keygen -q -t rsa -N \"\" -f /root/.ssh/id_rsa\nRUN mkdir -p /data/db\nCOPY tools/docker-compose/awx.egg-link /tmp/awx.egg-link\nCOPY tools/docker-compose/awx-manage /usr/local/bin/awx-manage\nCOPY tools/docker-compose/awx.egg-info /tmp/awx.egg-info\nRUN openssl req -nodes -newkey rsa:2048 -keyout /etc/nginx/nginx.key -out /etc/nginx/nginx.csr -subj \"/C=US/ST=North Carolina/L=Durham/O=Ansible/OU=AWX Development/CN=awx.localhost\"\nRUN openssl x509 -req -days 365 -in /etc/nginx/nginx.csr -signkey /etc/nginx/nginx.key -out /etc/nginx/nginx.crt\nRUN python3 -m ensurepip \\\n && pip3 install virtualenv flake8\nRUN pip install supervisor==4.2.5\nCOPY Makefile /tmp/Makefile\nRUN mkdir /tmp/requirements\nCOPY requirements/requirements.txt requirements/requirements_git.txt requirements/requirements_ansible.txt requirements/requirements_ansible_git.txt requirements/requirements_dev.txt requirements/requirements_ansible_uninstall.txt requirements/requirements_tower_uninstall.txt /tmp/requirements/\nRUN mkdir -p /venv \\\n && chmod g+w /venv\nRUN cd /tmp \\\n && VENV_BASE=\"/venv\" make requirements_dev\n#   Use the distro provided npm to bootstrap our required version of node\nRUN npm install n@9.1.0 -g\nRUN n 10.15.0\nRUN yum -y remove cyrus-sasl-devel gcc gcc-c++ krb5-devel libtool-ltdl-devel libxml2-devel libxslt-devel openldap-devel postgresql-devel python-devel python36-devel nodejs xmlsec1-devel xmlsec1-openssl-devel\nRUN yum -y clean all\nRUN rm -rf /root/.cache\nRUN localedef -c -i en_US -f UTF-8 en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nCOPY tools/docker-compose/nginx.conf /etc/nginx/nginx.conf\nCOPY tools/docker-compose/nginx.vh.default.conf /etc/nginx/conf.d/nginx.vh.default.conf\nCOPY tools/docker-compose/start_development.sh /start_development.sh\nCOPY tools/docker-compose/start_tests.sh /start_tests.sh\nCOPY tools/docker-compose/bootstrap_development.sh /bootstrap_development.sh\nEXPOSE 8043/tcp 8013/tcp 8080/tcp 22/tcp\nCOPY tools/docker-compose/entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/bin/bash\"]\n#   Pre-create things that we need to write to\nRUN for dir in /var/lib/awx/ /var/log/tower/ /projects /.ansible /var/log/nginx /var/lib/nginx /.local; do mkdir -p $dir ;chmod -R g+rwx $dir ;chgrp -R root $dir ; done\nRUN for file in /etc/passwd /etc/supervisord.conf /venv/awx/lib/python3.6/site-packages/awx.egg-link /var/run/nginx.pid; do touch $file ;chmod -R g+rwx $file ;chgrp -R root $file ; done\nENV PATH=\"/usr/local/n/versions/node/10.15.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:7\nARG UID=0\nRUN yum -y update \\\n && yum -y install epel-release\n#  sync with installer/roles/image_build/templates/Dockerfile.j2\nRUN yum -y install acl alsa-lib ansible atk bubblewrap cups-libs curl cyrus-sasl cyrus-sasl-devel gcc gcc-c++ GConf2 git gtk3 ipa-gothic-fonts krb5-devel krb5-libs krb5-workstation libcurl-devel libffi-devel libselinux-python libstdc++.so.6 libtool-ltdl-devel libXcomposite libXcursor libXdamage libXext libXi libxml2-devel libXrandr libXScrnSaver libxslt-devel libXtst make mercurial mg nginx nodejs openldap-devel openssh-server postgresql-devel python-devel python-pip python-psutil python-psycopg2 python-setuptools python36-devel python36-setuptools rsync setools-libs subversion sudo swig tmux unzip vim xmlsec1 xmlsec1-devel xmlsec1-openssl xmlsec1-openssl-devel xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-fonts-cyrillic xorg-x11-fonts-misc xorg-x11-fonts-Type1 xorg-x11-utils yum-utils\nRUN yum install -y https://github.com/krallin/tini/releases/download/v0.18.0/tini_0.18.0.rpm\nRUN /usr/bin/ssh-keygen -q -t rsa -N \"\" -f /root/.ssh/id_rsa\nRUN mkdir -p /data/db\nADD tools/docker-compose/awx.egg-link /tmp/awx.egg-link\nADD tools/docker-compose/awx-manage /usr/local/bin/awx-manage\nADD tools/docker-compose/awx.egg-info /tmp/awx.egg-info\nRUN openssl req -nodes -newkey rsa:2048 -keyout /etc/nginx/nginx.key -out /etc/nginx/nginx.csr -subj \"/C=US/ST=North Carolina/L=Durham/O=Ansible/OU=AWX Development/CN=awx.localhost\"\nRUN openssl x509 -req -days 365 -in /etc/nginx/nginx.csr -signkey /etc/nginx/nginx.key -out /etc/nginx/nginx.crt\nRUN python3 -m ensurepip \\\n && pip3 install virtualenv flake8\nRUN pip install supervisor\nADD Makefile /tmp/Makefile\nRUN mkdir /tmp/requirements\nADD requirements/requirements.txt requirements/requirements_git.txt requirements/requirements_ansible.txt requirements/requirements_ansible_git.txt requirements/requirements_dev.txt requirements/requirements_ansible_uninstall.txt requirements/requirements_tower_uninstall.txt /tmp/requirements/\nRUN mkdir -p /venv \\\n && chmod g+w /venv\nRUN cd /tmp \\\n && VENV_BASE=\"/venv\" make requirements_dev\n#  Use the distro provided npm to bootstrap our required version of node\nRUN npm install n -g\nRUN n 10.15.0\nRUN yum -y remove cyrus-sasl-devel gcc gcc-c++ krb5-devel libtool-ltdl-devel libxml2-devel libxslt-devel openldap-devel postgresql-devel python-devel python36-devel nodejs xmlsec1-devel xmlsec1-openssl-devel\nRUN yum -y clean all\nRUN rm -rf /root/.cache\nRUN localedef -c -i en_US -f UTF-8 en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nADD tools/docker-compose/nginx.conf /etc/nginx/nginx.conf\nADD tools/docker-compose/nginx.vh.default.conf /etc/nginx/conf.d/nginx.vh.default.conf\nADD tools/docker-compose/start_development.sh /start_development.sh\nADD tools/docker-compose/start_tests.sh /start_tests.sh\nADD tools/docker-compose/bootstrap_development.sh /bootstrap_development.sh\nEXPOSE 8043/tcp 8013/tcp 8080/tcp 22/tcp\nADD tools/docker-compose/entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/bin/bash\"]\n#  Pre-create things that we need to write to\nRUN for dir in /var/lib/awx/ /var/log/tower/ /projects /.ansible /var/log/nginx /var/lib/nginx /.local; do mkdir -p $dir ;chmod -R g+rwx $dir ;chgrp -R root $dir ; done\nRUN for file in /etc/passwd /etc/supervisord.conf /venv/awx/lib/python3.6/site-packages/awx.egg-link /var/run/nginx.pid; do touch $file ;chmod -R g+rwx $file ;chgrp -R root $file ; done\nENV PATH=\"/usr/local/n/versions/node/10.15.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n","injectedSmells":[],"originalDockerfileHash":"42b4d6111393e8f761a7aff7c1c0326b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7\nARG UID=0\nRUN yum -y update \\\n && yum -y install epel-release\n#   sync with installer/roles/image_build/templates/Dockerfile.j2\nRUN yum -y install acl alsa-lib ansible atk bubblewrap cups-libs curl cyrus-sasl cyrus-sasl-devel gcc gcc-c++ GConf2 git gtk3 ipa-gothic-fonts krb5-devel krb5-libs krb5-workstation libcurl-devel libffi-devel libselinux-python libstdc++.so.6 libtool-ltdl-devel libXcomposite libXcursor libXdamage libXext libXi libxml2-devel libXrandr libXScrnSaver libxslt-devel libXtst make mercurial mg nginx nodejs openldap-devel openssh-server postgresql-devel python-devel python-pip python-psutil python-psycopg2 python-setuptools python36-devel python36-setuptools rsync setools-libs subversion sudo swig tmux unzip vim xmlsec1 xmlsec1-devel xmlsec1-openssl xmlsec1-openssl-devel xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-fonts-cyrillic xorg-x11-fonts-misc xorg-x11-fonts-Type1 xorg-x11-utils yum-utils\nRUN yum install -y https://github.com/krallin/tini/releases/download/v0.18.0/tini_0.18.0.rpm\nRUN /usr/bin/ssh-keygen -q -t rsa -N \"\" -f /root/.ssh/id_rsa\nRUN mkdir -p /data/db\nADD tools/docker-compose/awx.egg-link /tmp/awx.egg-link\nADD tools/docker-compose/awx-manage /usr/local/bin/awx-manage\nADD tools/docker-compose/awx.egg-info /tmp/awx.egg-info\nRUN openssl req -nodes -newkey rsa:2048 -keyout /etc/nginx/nginx.key -out /etc/nginx/nginx.csr -subj \"/C=US/ST=North Carolina/L=Durham/O=Ansible/OU=AWX Development/CN=awx.localhost\"\nRUN openssl x509 -req -days 365 -in /etc/nginx/nginx.csr -signkey /etc/nginx/nginx.key -out /etc/nginx/nginx.crt\nRUN python3 -m ensurepip \\\n && pip3 install virtualenv flake8\nRUN pip install supervisor\nADD Makefile /tmp/Makefile\nRUN mkdir /tmp/requirements\nADD requirements/requirements.txt requirements/requirements_git.txt requirements/requirements_ansible.txt requirements/requirements_ansible_git.txt requirements/requirements_dev.txt requirements/requirements_ansible_uninstall.txt requirements/requirements_tower_uninstall.txt /tmp/requirements/\nRUN mkdir -p /venv \\\n && chmod g+w /venv\nRUN cd /tmp \\\n && VENV_BASE=\"/venv\" make requirements_dev\n#   Use the distro provided npm to bootstrap our required version of node\nRUN npm install n -g\nRUN n 10.15.0\nRUN yum -y remove cyrus-sasl-devel gcc gcc-c++ krb5-devel libtool-ltdl-devel libxml2-devel libxslt-devel openldap-devel postgresql-devel python-devel python36-devel nodejs xmlsec1-devel xmlsec1-openssl-devel\nRUN yum -y clean all\nRUN rm -rf /root/.cache\nRUN localedef -c -i en_US -f UTF-8 en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nADD tools/docker-compose/nginx.conf /etc/nginx/nginx.conf\nADD tools/docker-compose/nginx.vh.default.conf /etc/nginx/conf.d/nginx.vh.default.conf\nADD tools/docker-compose/start_development.sh /start_development.sh\nADD tools/docker-compose/start_tests.sh /start_tests.sh\nADD tools/docker-compose/bootstrap_development.sh /bootstrap_development.sh\nEXPOSE 8043/tcp 8013/tcp 8080/tcp 22/tcp\nADD tools/docker-compose/entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/bin/bash\"]\n#   Pre-create things that we need to write to\nRUN for dir in /var/lib/awx/ /var/log/tower/ /projects /.ansible /var/log/nginx /var/lib/nginx /.local; do mkdir -p $dir ;chmod -R g+rwx $dir ;chgrp -R root $dir ; done\nRUN for file in /etc/passwd /etc/supervisord.conf /venv/awx/lib/python3.6/site-packages/awx.egg-link /var/run/nginx.pid; do touch $file ;chmod -R g+rwx $file ;chgrp -R root $file ; done\nENV PATH=\"/usr/local/n/versions/node/10.15.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n","originalDockerfileUglifiedHash":"83317dd5cf3c2becd4c9e52b8c913d06","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/738daa305d4200ae998c45fca3d2f0039b5f78d5.dockerfile"}