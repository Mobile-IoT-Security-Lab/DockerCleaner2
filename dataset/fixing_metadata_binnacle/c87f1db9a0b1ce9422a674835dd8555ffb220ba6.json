{"seed":758196872,"processedDockerfileHash":"2d86106aa313c72a68849f930be88b90","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (c) Microsoft Corporation. All rights reserved.\n#   Licensed under the MIT License.\n#\n#   Docker image file that describes an Kali Rolling image with PowerShell\n#   installed from Debian9 PowerShell package\n#   Define arg(s) needed for the From statement\nARG fromTag=kali-rolling\nARG imageRepo=kalilinux/kali-linux-docker\nFROM ${imageRepo}:${fromTag} AS installer-env\n#   Define Args for the needed to add the package\nARG PS_VERSION=6.1.0\nARG PS_PACKAGE=powershell_${PS_VERSION}-1.debian.9_amd64.deb\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n#   Download the Debian9 PowerShell Core package and save it\nCOPY ${PS_PACKAGE_URL} /tmp/powershell.deb\n#   Define Args for the needed to add the package\nARG KALI_REPO_KEY_PACKAGE_URL=https://http.kali.org/kali/pool/main/k/kali-archive-keyring/kali-archive-keyring_2018.1_all.deb\n#   Download the Kali repository package and save it\nCOPY ${KALI_REPO_KEY_PACKAGE_URL} /tmp/kali-archive-keyring_2018.1_all.deb\n#   Define Args for the needed to add the package\nARG DEBIAN_PACKAGE_URL=http://ftp.us.debian.org/debian/pool/main/i/icu/libicu57_57.1-6+deb9u2_amd64.deb\n#   Download the libicu57 Debian package and save it\nCOPY ${DEBIAN_PACKAGE_URL} /tmp/libicu57_57.1-6+deb9u2_amd64.deb\n#   Define Args and Env needed to create links\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\" \\\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=\"false\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    PSModuleAnalysisCachePath=\"/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\" \\\n    DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=\"0\"\n#   Installation\nRUN apt-get install --no-install-recommends /tmp/kali-archive-keyring_2018.1_all.deb \\\n && rm -f /tmp/kali-archive-keyring_2018.1_all.deb \\\n && dpkg -i /tmp/libicu57_57.1-6+deb9u2_amd64.deb \\\n && rm -f /tmp/libicu57_57.1-6+deb9u2_amd64.deb \\\n && apt-get update \\\n && apt-get install --no-install-recommends libcurl4 ca-certificates less locales gss-ntlmssp -y \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && update-locale \\\n && apt-get install --no-install-recommends /tmp/powershell.deb -y \\\n && rm -f /tmp/powershell.deb \\\n && pwsh -NoLogo -NoProfile -Command \" $ErrorActionPreference = 'Stop' ; $ProgressPreference = 'SilentlyContinue' ; while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) { Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; Start-Sleep -Seconds 6 ; }\" \\\n && apt-get dist-upgrade -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Define args needed only for the labels\nARG IMAGE_NAME=pshorg/powershellcommunity:kali-kali-rolling\nARG VCS_REF=\"none\"\n#   Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.version=\"${PS_VERSION}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\nCMD [\"pwsh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) Microsoft Corporation. All rights reserved.\n#  Licensed under the MIT License.\n#\n#  Docker image file that describes an Kali Rolling image with PowerShell\n#  installed from Debian9 PowerShell package\n#  Define arg(s) needed for the From statement\nARG fromTag=kali-rolling\nARG imageRepo=kalilinux/kali-linux-docker\nFROM ${imageRepo}:${fromTag} AS installer-env\n#  Define Args for the needed to add the package\nARG PS_VERSION=6.1.0\nARG PS_PACKAGE=powershell_${PS_VERSION}-1.debian.9_amd64.deb\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n#  Download the Debian9 PowerShell Core package and save it\nADD ${PS_PACKAGE_URL} /tmp/powershell.deb\n#  Define Args for the needed to add the package\nARG KALI_REPO_KEY_PACKAGE_URL=https://http.kali.org/kali/pool/main/k/kali-archive-keyring/kali-archive-keyring_2018.1_all.deb\n#  Download the Kali repository package and save it\nADD ${KALI_REPO_KEY_PACKAGE_URL} /tmp/kali-archive-keyring_2018.1_all.deb\n#  Define Args for the needed to add the package\nARG DEBIAN_PACKAGE_URL=http://ftp.us.debian.org/debian/pool/main/i/icu/libicu57_57.1-6+deb9u2_amd64.deb\n#  Download the libicu57 Debian package and save it\nADD ${DEBIAN_PACKAGE_URL} /tmp/libicu57_57.1-6+deb9u2_amd64.deb\n#  Define Args and Env needed to create links\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\" \\\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=\"false\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    PSModuleAnalysisCachePath=\"/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\" \\\n    DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=\"0\"\n#  Installation\nRUN apt-get install /tmp/kali-archive-keyring_2018.1_all.deb \\\n && rm -f /tmp/kali-archive-keyring_2018.1_all.deb \\\n && dpkg -i /tmp/libicu57_57.1-6+deb9u2_amd64.deb \\\n && rm -f /tmp/libicu57_57.1-6+deb9u2_amd64.deb \\\n && apt-get update \\\n && apt-get install libcurl4 ca-certificates less locales gss-ntlmssp -y \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && update-locale \\\n && apt-get install /tmp/powershell.deb -y \\\n && rm -f /tmp/powershell.deb \\\n && pwsh -NoLogo -NoProfile -Command \" $ErrorActionPreference = 'Stop' ; $ProgressPreference = 'SilentlyContinue' ; while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) { Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; Start-Sleep -Seconds 6 ; }\" \\\n && apt-get dist-upgrade -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Define args needed only for the labels\nARG IMAGE_NAME=pshorg/powershellcommunity:kali-kali-rolling\nARG VCS_REF=\"none\"\n#  Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.version=\"${PS_VERSION}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\nCMD [\"pwsh\"]\n","injectedSmells":[],"originalDockerfileHash":"5ea16518674b7fbe9513e0232d312a88","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) Microsoft Corporation. All rights reserved.\n#   Licensed under the MIT License.\n#\n#   Docker image file that describes an Kali Rolling image with PowerShell\n#   installed from Debian9 PowerShell package\n#   Define arg(s) needed for the From statement\nARG fromTag=kali-rolling\nARG imageRepo=kalilinux/kali-linux-docker\nFROM ${imageRepo}:${fromTag} AS installer-env\n#   Define Args for the needed to add the package\nARG PS_VERSION=6.1.0\nARG PS_PACKAGE=powershell_${PS_VERSION}-1.debian.9_amd64.deb\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n#   Download the Debian9 PowerShell Core package and save it\nADD ${PS_PACKAGE_URL} /tmp/powershell.deb\n#   Define Args for the needed to add the package\nARG KALI_REPO_KEY_PACKAGE_URL=https://http.kali.org/kali/pool/main/k/kali-archive-keyring/kali-archive-keyring_2018.1_all.deb\n#   Download the Kali repository package and save it\nADD ${KALI_REPO_KEY_PACKAGE_URL} /tmp/kali-archive-keyring_2018.1_all.deb\n#   Define Args for the needed to add the package\nARG DEBIAN_PACKAGE_URL=http://ftp.us.debian.org/debian/pool/main/i/icu/libicu57_57.1-6+deb9u2_amd64.deb\n#   Download the libicu57 Debian package and save it\nADD ${DEBIAN_PACKAGE_URL} /tmp/libicu57_57.1-6+deb9u2_amd64.deb\n#   Define Args and Env needed to create links\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\" \\\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=\"false\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    PSModuleAnalysisCachePath=\"/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\" \\\n    DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=\"0\"\n#   Installation\nRUN apt-get install /tmp/kali-archive-keyring_2018.1_all.deb \\\n && rm -f /tmp/kali-archive-keyring_2018.1_all.deb \\\n && dpkg -i /tmp/libicu57_57.1-6+deb9u2_amd64.deb \\\n && rm -f /tmp/libicu57_57.1-6+deb9u2_amd64.deb \\\n && apt-get update \\\n && apt-get install libcurl4 ca-certificates less locales gss-ntlmssp -y \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && update-locale \\\n && apt-get install /tmp/powershell.deb -y \\\n && rm -f /tmp/powershell.deb \\\n && pwsh -NoLogo -NoProfile -Command \" $ErrorActionPreference = 'Stop' ; $ProgressPreference = 'SilentlyContinue' ; while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) { Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; Start-Sleep -Seconds 6 ; }\" \\\n && apt-get dist-upgrade -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Define args needed only for the labels\nARG IMAGE_NAME=pshorg/powershellcommunity:kali-kali-rolling\nARG VCS_REF=\"none\"\n#   Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.version=\"${PS_VERSION}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\nCMD [\"pwsh\"]\n","originalDockerfileUglifiedHash":"f53fe06280d0fa85844c829024ec7836","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c87f1db9a0b1ce9422a674835dd8555ffb220ba6.dockerfile"}