{"seed":2890987021,"processedDockerfileHash":"08967ef8317c631670e87f2afac190b9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   AUTHOR:           Nicholas Long\n#   DESCRIPTION:      OpenStudio Server Docker Container\n#   TO_BUILD_AND_RUN: docker-compose up\n#   NOTES:            Currently this is one big dockerfile and non-optimal.\nFROM nrel/openstudio:2.5.2\nMAINTAINER Nicholas Long nicholas.long@nrel.gov\nARG rails_env=docker-dev\n#   Install required libaries\nRUN sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n && echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https autoconf bison build-essential bzip2 ca-certificates curl default-jdk dos2unix imagemagick gdebi-core git libbz2-dev libcurl4-openssl-dev libdbus-glib-1-2 libgdbm3 libgdbm-dev libglib2.0-dev libglu1 libgsl0ldbl libgsl0-dev libncurses-dev libreadline-dev libxml2-dev libxslt-dev libffi-dev libssl-dev libyaml-dev libice-dev libsm-dev mongodb-org-tools procps tar unzip wget zip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install passenger (this also installs nginx)\nENV PASSENGER_VERSION=\"5.0.25\"\n#   Install Rack. Silly workaround for not having ruby 2.2.2. Rack 1.6.4 is the\n#   latest for Ruby <= 2.0\nRUN gem install rack --version 3.0.7 -v=1.6.4\nRUN gem install passenger --version 6.0.17\nRUN passenger-install-nginx-module\n#   Configure the nginx server\nRUN mkdir /var/log/nginx\nCOPY /docker/server/nginx.conf /opt/nginx/conf/nginx.conf\n#   Radiance env vars. RUBYLIB is set in the base openstudio container\nENV OPENSTUDIO_SERVER=\"'true'\"\nENV OS_RAYPATH=\"/usr/Radiance\"\nENV PERL_EXE_PATH=\"/usr/bin\"\n#   Set the rails env var\nENV RAILS_ENV=\"$rails_env\"\nENV GECKODRIVER_VERSION=\"v0.15.0\"\n#   Configure IPVS keepalive\nCOPY /docker/server/ipvs-keepalive.conf /etc/sysctl.d/ipvs-keepalive.conf\nRUN sudo sysctl --system\n#  ## ADD Gemfile to cache the installation of Gems. If you change the Gemfile, then you will need to rebuild\n#  ## your docker containers\nCOPY /bin /opt/openstudio/bin\nCOPY /server/Gemfile /opt/openstudio/server/Gemfile\nWORKDIR /opt/openstudio/server\nRUN bundle install --jobs=3 --retry=3\n#  ### OpenStudio Server Code\nVOLUME [\"/opt/openstudio\"]\n#   Define working directory\nWORKDIR /opt/openstudio/server\nCOPY /docker/server/start-server-dev.sh /usr/local/bin/start-server-dev\nCOPY /docker/server/run-server-tests.sh /usr/local/bin/run-server-tests\nRUN chmod +x /usr/local/bin/start-server-dev\nRUN chmod +x /usr/local/bin/run-server-tests\nCOPY /docker/server/rails-entrypoint.sh /usr/local/bin/rails-entrypoint\nRUN chmod 755 /usr/local/bin/rails-entrypoint\nENTRYPOINT [\"rails-entrypoint\"]\nCMD [\"/usr/local/bin/start-server-dev\"]\n#   Expose ports.\nEXPOSE 8080/tcp 9090/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  AUTHOR:           Nicholas Long\n#  DESCRIPTION:      OpenStudio Server Docker Container\n#  TO_BUILD_AND_RUN: docker-compose up\n#  NOTES:            Currently this is one big dockerfile and non-optimal.\nFROM nrel/openstudio:2.5.2\nMAINTAINER Nicholas Long nicholas.long@nrel.gov\nARG rails_env=docker-dev\n#  Install required libaries\nRUN sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n && echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https autoconf bison build-essential bzip2 ca-certificates curl default-jdk dos2unix imagemagick gdebi-core git libbz2-dev libcurl4-openssl-dev libdbus-glib-1-2 libgdbm3 libgdbm-dev libglib2.0-dev libglu1 libgsl0ldbl libgsl0-dev libncurses-dev libreadline-dev libxml2-dev libxslt-dev libffi-dev libssl-dev libyaml-dev libice-dev libsm-dev mongodb-org-tools procps tar unzip wget zip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install passenger (this also installs nginx)\nENV PASSENGER_VERSION=\"5.0.25\"\n#  Install Rack. Silly workaround for not having ruby 2.2.2. Rack 1.6.4 is the\n#  latest for Ruby <= 2.0\nRUN gem install rack -v=1.6.4\nRUN gem install passenger\nRUN passenger-install-nginx-module\n#  Configure the nginx server\nRUN mkdir /var/log/nginx\nADD /docker/server/nginx.conf /opt/nginx/conf/nginx.conf\n#  Radiance env vars. RUBYLIB is set in the base openstudio container\nENV OPENSTUDIO_SERVER=\"'true'\"\nENV OS_RAYPATH=\"/usr/Radiance\"\nENV PERL_EXE_PATH=\"/usr/bin\"\n#  Set the rails env var\nENV RAILS_ENV=\"$rails_env\"\nENV GECKODRIVER_VERSION=\"v0.15.0\"\n#  Configure IPVS keepalive\nADD /docker/server/ipvs-keepalive.conf /etc/sysctl.d/ipvs-keepalive.conf\nRUN sudo sysctl --system\n# ## ADD Gemfile to cache the installation of Gems. If you change the Gemfile, then you will need to rebuild\n# ## your docker containers\nADD /bin /opt/openstudio/bin\nADD /server/Gemfile /opt/openstudio/server/Gemfile\nWORKDIR /opt/openstudio/server\nRUN bundle install --jobs=3 --retry=3\n# ### OpenStudio Server Code\nVOLUME [\"/opt/openstudio\"]\n#  Define working directory\nWORKDIR /opt/openstudio/server\nCOPY /docker/server/start-server-dev.sh /usr/local/bin/start-server-dev\nCOPY /docker/server/run-server-tests.sh /usr/local/bin/run-server-tests\nRUN chmod +x /usr/local/bin/start-server-dev\nRUN chmod +x /usr/local/bin/run-server-tests\nCOPY /docker/server/rails-entrypoint.sh /usr/local/bin/rails-entrypoint\nRUN chmod 755 /usr/local/bin/rails-entrypoint\nENTRYPOINT [\"rails-entrypoint\"]\nCMD [\"/usr/local/bin/start-server-dev\"]\n#  Expose ports.\nEXPOSE 8080/tcp 9090/tcp\n","injectedSmells":[],"originalDockerfileHash":"bb79ac130d4cdc1a6cdffc3cac50f60d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   AUTHOR:           Nicholas Long\n#   DESCRIPTION:      OpenStudio Server Docker Container\n#   TO_BUILD_AND_RUN: docker-compose up\n#   NOTES:            Currently this is one big dockerfile and non-optimal.\nFROM nrel/openstudio:2.5.2\nMAINTAINER Nicholas Long nicholas.long@nrel.gov\nARG rails_env=docker-dev\n#   Install required libaries\nRUN sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n && echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https autoconf bison build-essential bzip2 ca-certificates curl default-jdk dos2unix imagemagick gdebi-core git libbz2-dev libcurl4-openssl-dev libdbus-glib-1-2 libgdbm3 libgdbm-dev libglib2.0-dev libglu1 libgsl0ldbl libgsl0-dev libncurses-dev libreadline-dev libxml2-dev libxslt-dev libffi-dev libssl-dev libyaml-dev libice-dev libsm-dev mongodb-org-tools procps tar unzip wget zip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install passenger (this also installs nginx)\nENV PASSENGER_VERSION=\"5.0.25\"\n#   Install Rack. Silly workaround for not having ruby 2.2.2. Rack 1.6.4 is the\n#   latest for Ruby <= 2.0\nRUN gem install rack -v=1.6.4\nRUN gem install passenger\nRUN passenger-install-nginx-module\n#   Configure the nginx server\nRUN mkdir /var/log/nginx\nADD /docker/server/nginx.conf /opt/nginx/conf/nginx.conf\n#   Radiance env vars. RUBYLIB is set in the base openstudio container\nENV OPENSTUDIO_SERVER=\"'true'\"\nENV OS_RAYPATH=\"/usr/Radiance\"\nENV PERL_EXE_PATH=\"/usr/bin\"\n#   Set the rails env var\nENV RAILS_ENV=\"$rails_env\"\nENV GECKODRIVER_VERSION=\"v0.15.0\"\n#   Configure IPVS keepalive\nADD /docker/server/ipvs-keepalive.conf /etc/sysctl.d/ipvs-keepalive.conf\nRUN sudo sysctl --system\n#  ## ADD Gemfile to cache the installation of Gems. If you change the Gemfile, then you will need to rebuild\n#  ## your docker containers\nADD /bin /opt/openstudio/bin\nADD /server/Gemfile /opt/openstudio/server/Gemfile\nWORKDIR /opt/openstudio/server\nRUN bundle install --jobs=3 --retry=3\n#  ### OpenStudio Server Code\nVOLUME [\"/opt/openstudio\"]\n#   Define working directory\nWORKDIR /opt/openstudio/server\nCOPY /docker/server/start-server-dev.sh /usr/local/bin/start-server-dev\nCOPY /docker/server/run-server-tests.sh /usr/local/bin/run-server-tests\nRUN chmod +x /usr/local/bin/start-server-dev\nRUN chmod +x /usr/local/bin/run-server-tests\nCOPY /docker/server/rails-entrypoint.sh /usr/local/bin/rails-entrypoint\nRUN chmod 755 /usr/local/bin/rails-entrypoint\nENTRYPOINT [\"rails-entrypoint\"]\nCMD [\"/usr/local/bin/start-server-dev\"]\n#   Expose ports.\nEXPOSE 8080/tcp 9090/tcp\n","originalDockerfileUglifiedHash":"baad19441e0bb7215835915827d9d57a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ca03fcbde09c079eea79ab570d427042c2b5ab71.dockerfile"}