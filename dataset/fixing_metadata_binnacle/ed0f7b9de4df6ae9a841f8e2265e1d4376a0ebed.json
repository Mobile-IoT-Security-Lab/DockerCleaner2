{"seed":3182456959,"processedDockerfileHash":"9a471437513516fafb8409942c7b1f79","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM openjdk:8-jdk-alpine\nRUN apk update \\\n && apk add curl bind-tools bash unzip git ca-certificates dpkg gnupg openssl openssh-client ttf-dejavu coreutils libstdc++ --no-cache \\\n && update-ca-certificates \\\n && rm -rf /var/cache/apk/* \\\n && mkdir -p /usr/share/jenkins/ref\nENV GOSU_VERSION=\"1.9\"\nRUN set -x \\\n && dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && true\nRUN TINI_VERSION=0.10.0 \\\n && TINI_SHA=7d00da20acc5c3eb21d959733917f6672b57dabb \\\n && wget https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -O /bin/tini \\\n && chmod +x /bin/tini \\\n && echo \"$TINI_SHA /bin/tini\" | sha1sum -c -\nARG JENKINS_VERSION\nARG JENKINS_SHA\nARG JENKINS_SLAVE_AGENT_PORT\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\nENV JENKINS_HOME=\"/jenkins\"\nENV JENKINS_SLAVE_AGENT_PORT=\"${JENKINS_SLAVE_AGENT_PORT:-50000}\"\nENV COPY_REFERENCE_FILE_LOG=\"$JENKINS_HOME/copy_reference_file.log\"\nVOLUME /jenkins\nWORKDIR /jenkins\nRUN addgroup -g ${gid} ${group} \\\n && adduser -h \"$JENKINS_HOME\" -u ${uid} -G ${group} -s /bin/sh -D ${user}\nRUN JENKINS_VERSION=${JENKINS_VERSION:-2.9} \\\n && JENKINS_SHA=${JENKINS_SHA:-1fd02a942cca991577ee9727dd3d67470e45c031} \\\n && wget https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war -O /usr/share/jenkins/jenkins.war \\\n && echo \"$JENKINS_SHA /usr/share/jenkins/jenkins.war\" | sha1sum -c -\nEXPOSE 8080/tcp\nEXPOSE ${JENKINS_SLAVE_AGENT_PORT:-50000}\nCOPY jenkins/jenkins-support /usr/local/bin/jenkins-support\nCOPY jenkins/install-plugins.sh /usr/local/bin/install-plugins.sh\nENV JENKINS_UC=\"https://updates.jenkins.io\"\nRUN install-plugins.sh cas-plugin cloudbees-folder credentials cvs email-ext git github gradle grails groovy groovy-postbuild job-dsl ldap mailer matrix-auth maven-plugin metrics rebuild sonar ssh-credentials startup-trigger-plugin swarm workflow-aggregator \\\n && true\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nCOPY init.groovy.d /usr/share/jenkins/ref/init.groovy.d\nCOPY init.groovy.mixins /usr/share/jenkins/ref/init.groovy.mixins\nCOPY init.dsl.d /usr/share/jenkins/ref/init.dsl.d\nENTRYPOINT [\"/bin/tini\", \"--\", \"/docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openjdk:8-jdk-alpine\nRUN apk update \\\n && apk add --no-cache curl bind-tools bash unzip git ca-certificates dpkg gnupg openssl openssh-client ttf-dejavu coreutils libstdc++ \\\n && update-ca-certificates \\\n && rm -rf /var/cache/apk/* \\\n && mkdir -p /usr/share/jenkins/ref\nENV GOSU_VERSION=\"1.9\"\nRUN set -x \\\n && dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && true\nRUN TINI_VERSION=0.10.0 \\\n && TINI_SHA=7d00da20acc5c3eb21d959733917f6672b57dabb \\\n && wget https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -O /bin/tini \\\n && chmod +x /bin/tini \\\n && echo \"$TINI_SHA /bin/tini\" | sha1sum -c -\nARG JENKINS_VERSION\nARG JENKINS_SHA\nARG JENKINS_SLAVE_AGENT_PORT\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\nENV JENKINS_HOME=\"/jenkins\"\nENV JENKINS_SLAVE_AGENT_PORT=\"${JENKINS_SLAVE_AGENT_PORT:-50000}\"\nENV COPY_REFERENCE_FILE_LOG=\"$JENKINS_HOME/copy_reference_file.log\"\nVOLUME /jenkins\nWORKDIR /jenkins\nRUN addgroup -g ${gid} ${group} \\\n && adduser -h \"$JENKINS_HOME\" -u ${uid} -G ${group} -s /bin/sh -D ${user}\nRUN JENKINS_VERSION=${JENKINS_VERSION:-2.9} \\\n && JENKINS_SHA=${JENKINS_SHA:-1fd02a942cca991577ee9727dd3d67470e45c031} \\\n && wget https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war -O /usr/share/jenkins/jenkins.war \\\n && echo \"$JENKINS_SHA /usr/share/jenkins/jenkins.war\" | sha1sum -c -\nEXPOSE 8080/tcp\nEXPOSE ${JENKINS_SLAVE_AGENT_PORT:-50000}\nCOPY jenkins/jenkins-support /usr/local/bin/jenkins-support\nCOPY jenkins/install-plugins.sh /usr/local/bin/install-plugins.sh\nENV JENKINS_UC=\"https://updates.jenkins.io\"\nRUN install-plugins.sh cas-plugin cloudbees-folder credentials cvs email-ext git github gradle grails groovy groovy-postbuild job-dsl ldap mailer matrix-auth maven-plugin metrics rebuild sonar ssh-credentials startup-trigger-plugin swarm workflow-aggregator \\\n && true\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nCOPY init.groovy.d /usr/share/jenkins/ref/init.groovy.d\nCOPY init.groovy.mixins /usr/share/jenkins/ref/init.groovy.mixins\nCOPY init.dsl.d /usr/share/jenkins/ref/init.dsl.d\nENTRYPOINT [\"/bin/tini\", \"--\", \"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"3264d4361f1c8d8b84a25b56bdb0707f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openjdk:8-jdk-alpine\nRUN apk update \\\n && apk add --no-cache curl bind-tools bash unzip git ca-certificates dpkg gnupg openssl openssh-client ttf-dejavu coreutils libstdc++ \\\n && update-ca-certificates \\\n && rm -rf /var/cache/apk/* \\\n && mkdir -p /usr/share/jenkins/ref\nENV GOSU_VERSION=\"1.9\"\nRUN set -x \\\n && dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && true\nRUN TINI_VERSION=0.10.0 \\\n && TINI_SHA=7d00da20acc5c3eb21d959733917f6672b57dabb \\\n && wget https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -O /bin/tini \\\n && chmod +x /bin/tini \\\n && echo \"$TINI_SHA /bin/tini\" | sha1sum -c -\nARG JENKINS_VERSION\nARG JENKINS_SHA\nARG JENKINS_SLAVE_AGENT_PORT\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\nENV JENKINS_HOME=\"/jenkins\"\nENV JENKINS_SLAVE_AGENT_PORT=\"${JENKINS_SLAVE_AGENT_PORT:-50000}\"\nENV COPY_REFERENCE_FILE_LOG=\"$JENKINS_HOME/copy_reference_file.log\"\nVOLUME /jenkins\nWORKDIR /jenkins\nRUN addgroup -g ${gid} ${group} \\\n && adduser -h \"$JENKINS_HOME\" -u ${uid} -G ${group} -s /bin/sh -D ${user}\nRUN JENKINS_VERSION=${JENKINS_VERSION:-2.9} \\\n && JENKINS_SHA=${JENKINS_SHA:-1fd02a942cca991577ee9727dd3d67470e45c031} \\\n && wget https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war -O /usr/share/jenkins/jenkins.war \\\n && echo \"$JENKINS_SHA /usr/share/jenkins/jenkins.war\" | sha1sum -c -\nEXPOSE 8080/tcp\nEXPOSE ${JENKINS_SLAVE_AGENT_PORT:-50000}\nCOPY jenkins/jenkins-support /usr/local/bin/jenkins-support\nCOPY jenkins/install-plugins.sh /usr/local/bin/install-plugins.sh\nENV JENKINS_UC=\"https://updates.jenkins.io\"\nRUN install-plugins.sh cas-plugin cloudbees-folder credentials cvs email-ext git github gradle grails groovy groovy-postbuild job-dsl ldap mailer matrix-auth maven-plugin metrics rebuild sonar ssh-credentials startup-trigger-plugin swarm workflow-aggregator \\\n && true\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nCOPY init.groovy.d /usr/share/jenkins/ref/init.groovy.d\nCOPY init.groovy.mixins /usr/share/jenkins/ref/init.groovy.mixins\nCOPY init.dsl.d /usr/share/jenkins/ref/init.dsl.d\nENTRYPOINT [\"/bin/tini\", \"--\", \"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"3264d4361f1c8d8b84a25b56bdb0707f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ed0f7b9de4df6ae9a841f8e2265e1d4376a0ebed.dockerfile"}