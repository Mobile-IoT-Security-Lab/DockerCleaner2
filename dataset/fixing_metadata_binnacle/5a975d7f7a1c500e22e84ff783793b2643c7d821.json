{"seed":668817984,"processedDockerfileHash":"01e5e334bea04610340ced29dd4c9a78","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.1-fpm\nMAINTAINER Stepanov Nikolai <nstepanovdev@gmail.com>\nRUN :\nENV COMPOSER_HOME=\"/home/composer/.composer\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV ZSH=\"/home/.oh-my-zsh\"\n#   Install locale\nARG TZ=UTC\nENV TZ=\"${TZ}\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone \\\n && (apt-get update ;apt-get install --no-install-recommends locales=2.28-10+deb10u2 -f -y --reinstall ) \\\n && locale-gen en_US.UTF-8\n#   INSTALL EXTENSIONS\n#   apcu\nRUN pecl install apcu\nRUN echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/apcu.ini\n#   bz2\nRUN (apt-get update ;apt-get install --no-install-recommends libbz2-dev=1.0.6-9.2~deb10u2 -y )\nRUN docker-php-ext-install bz2\n#   gd\nRUN (apt-get update ;apt-get install --no-install-recommends libfreetype6-dev=2.9.1-3+deb10u3 libjpeg62-turbo-dev=1:1.5.2-2+deb10u1 libpng-dev=1.6.36-6 -y )\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/\nRUN docker-php-ext-install gd\n#   mcrypt\nRUN (apt-get update ;apt-get install --no-install-recommends libmcrypt-dev=2.5.8-3.4 -y )\nRUN docker-php-ext-install mcrypt\n#   pdo\nRUN docker-php-ext-install pdo_mysql \\\n && (apt-get update ;apt-get install --no-install-recommends libpq-dev=11.19-0+deb10u1 -y ) \\\n && docker-php-ext-install pdo_pgsql \\\n && (apt-get update ;apt-get install --no-install-recommends libsqlite3-dev=3.27.2-3+deb10u2 -y ) \\\n && docker-php-ext-install pdo_sqlite\n#   phpredis\nRUN pecl install -o -f redis \\\n && rm -rf /tmp/pear \\\n && echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini\n#   xsl\nRUN (apt-get update ;apt-get install --no-install-recommends libxslt-dev -y )\nRUN docker-php-ext-install xsl\n#   intl\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends zlib1g-dev=1:1.2.11.dfsg-1+deb10u2 libicu-dev=63.1-6+deb10u3 g++=4:8.3.0-1 -y )\nRUN docker-php-ext-configure intl\nRUN docker-php-ext-install intl\n#  RUN pecl install intl\n#  RUN docker-php-ext-install intl\n#   zip\nRUN (apt-get update ;apt-get install --no-install-recommends zlib1g-dev=1:1.2.11.dfsg-1+deb10u2 -y ) \\\n && docker-php-ext-install zip\n#   common\nRUN (apt-get update ;apt-get install --no-install-recommends libssl-dev=1.1.1n-0+deb10u4 -y )\nRUN docker-php-ext-install opcache calendar dba pcntl bcmath mbstring xmlrpc ftp shmop\n#   preconf enviroment\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data\"\nRUN usermod -u 1000 -d /data www-data -s /bin/bash\nRUN groupadd -r node \\\n && useradd -r -g node node \\\n && usermod -G www-data -a node\nRUN mkdir /data \\\n && chmod -R 644 /data \\\n && find /data -type d -exec chmod 755 {}\nRUN (apt-get update ;apt-get install --no-install-recommends libfreetype6-dev=2.9.1-3+deb10u3 libjpeg62-turbo-dev=1:1.5.2-2+deb10u1 libmcrypt-dev=2.5.8-3.4 libpng-dev=1.6.36-6 msmtp=1.8.3-1 imagemagick=8:6.9.10.23+dfsg-2.1+deb10u4 libssl-dev=1.1.1n-0+deb10u4 libxml2-dev=2.9.4+dfsg1-7+deb10u5 libicu-dev=63.1-6+deb10u3 libxslt-dev wget=1.20.1-1.1 git=1:2.20.1-2+deb10u8 vim=2:8.1.0875-5+deb10u4 ruby=1:2.5.1 ruby-dev=1:2.5.1 libcurl4-openssl-dev=7.64.0-4+deb10u5 mc=3:4.8.22-1 -y )\n#  Install nodejs\nRUN (apt-get update ;apt-get install --no-install-recommends gnupg=2.2.12-1+deb10u2 -y )\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=10.24.0~dfsg-1~deb10u3 build-essential=12.6 -y )\n#   Install OH-MY-ZSH to see pretty terminal and ditch the bash\nRUN (apt-get update ;apt-get install --no-install-recommends zsh=5.7.1-1+deb10u1 -y )\nRUN curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | bash\n#   Clean apt\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install Bower & Grunt\nRUN npm install bower@1.8.14 gulp@4.0.2 uglify-js@3.17.4 uglifycss@0.0.29 webpack@2.2.* -g \\\n && echo '{ \"allow_root\": true }' > /root/.bowerrc\n#   Install gem dependencies\nRUN gem install bundler --version 2.4.12\n#  COMPOSER\nRUN curl https://getcomposer.org/installer | php -- \\\n && mv composer.phar /usr/local/bin/composer \\\n && chmod +x /usr/local/bin/composer\nENV PATH=\"/home/composer/.composer/vendor/bin:$PATH\"\n#  PHPUNIT\nRUN composer global require \"phpunit/phpunit\" \\\n && ln -s /home/composer/.composer/vendor/bin/phpunit /usr/local/bin/phpunit\n#  Laravel\nRUN composer global require \"laravel/installer\"\nRUN ln -s /home/composer/.composer/vendor/bin/laravel /usr/local/bin/laravel\n#  Symfony installer\nRUN curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony\nRUN chmod a+x /usr/local/bin/symfony\n#  Symfony2 autocomplete\nRUN composer global require \"bamarni/symfony-console-autocomplete\"\nRUN ln -s /home/composer/.composer/vendor/bin/symfony-autocomplete /usr/local/bin/symfony-autocomplete\n#  DEPLOYER.ORG\nRUN curl -LO https://deployer.org/deployer.phar \\\n && mv deployer.phar /usr/local/bin/dep \\\n && chmod +x /usr/local/bin/dep\nCOPY etc/php-fpm.conf /usr/local/etc/\nCOPY etc/php.ini /usr/local/etc/php/\nCOPY etc/.bashrc /etc/bash.bashrc\nCOPY etc/.zshrc /etc/zsh/newuser.zshrc.recommended\nCOPY etc/.zshrc /etc/zsh/zshrc\nRUN chmod ugo+rX -R /usr/local/etc/php\nRUN chmod -R 777 /home/composer \\\n && find /home/composer -type d -exec chmod 777 {}\nWORKDIR /data\nCMD [\"php-fpm\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.1-fpm\nMAINTAINER Stepanov Nikolai <nstepanovdev@gmail.com>\nRUN apt-get update\nENV COMPOSER_HOME=\"/home/composer/.composer\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV ZSH=\"/home/.oh-my-zsh\"\n#  Install locale\nARG TZ=UTC\nENV TZ=\"${TZ}\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone \\\n && apt-get install locales -f -y --reinstall \\\n && locale-gen en_US.UTF-8\n#  INSTALL EXTENSIONS\n#  apcu\nRUN pecl install apcu\nRUN echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/apcu.ini\n#  bz2\nRUN apt-get install libbz2-dev -y\nRUN docker-php-ext-install bz2\n#  gd\nRUN apt-get install libfreetype6-dev libjpeg62-turbo-dev libpng-dev -y\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/\nRUN docker-php-ext-install gd\n#  mcrypt\nRUN apt-get install libmcrypt-dev -y\nRUN docker-php-ext-install mcrypt\n#  pdo\nRUN docker-php-ext-install pdo_mysql \\\n && apt-get install libpq-dev -y \\\n && docker-php-ext-install pdo_pgsql \\\n && apt-get install libsqlite3-dev -y \\\n && docker-php-ext-install pdo_sqlite\n#  phpredis\nRUN pecl install -o -f redis \\\n && rm -rf /tmp/pear \\\n && echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini\n#  xsl\nRUN apt-get install libxslt-dev -y\nRUN docker-php-ext-install xsl\n#  intl\nRUN apt-get update \\\n && apt-get install zlib1g-dev libicu-dev g++ -y\nRUN docker-php-ext-configure intl\nRUN docker-php-ext-install intl\n# RUN pecl install intl\n# RUN docker-php-ext-install intl\n#  zip\nRUN apt-get install zlib1g-dev -y \\\n && docker-php-ext-install zip\n#  common\nRUN apt-get install libssl-dev -y\nRUN docker-php-ext-install opcache calendar dba pcntl bcmath mbstring xmlrpc ftp shmop\n#  preconf enviroment\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data\"\nRUN usermod -u 1000 -d /data www-data -s /bin/bash\nRUN groupadd -r node \\\n && useradd -r -g node node \\\n && usermod -G www-data -a node\nRUN mkdir /data \\\n && chmod -R 644 /data \\\n && find /data -type d -exec chmod 755 {} ;\nRUN apt-get install libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev msmtp imagemagick libssl-dev libxml2-dev libicu-dev libxslt-dev wget git vim ruby ruby-dev libcurl4-openssl-dev mc -y\n# Install nodejs\nRUN apt-get install gnupg -y\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get install nodejs build-essential -y\n#  Install OH-MY-ZSH to see pretty terminal and ditch the bash\nRUN apt-get install zsh -y\nRUN curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | bash\n#  Clean apt\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Install Bower & Grunt\nRUN npm install bower gulp uglify-js uglifycss webpack@2.2.* -g \\\n && echo '{ \"allow_root\": true }' > /root/.bowerrc\n#  Install gem dependencies\nRUN gem install bundler\n# COMPOSER\nRUN curl https://getcomposer.org/installer | php -- \\\n && mv composer.phar /usr/local/bin/composer \\\n && chmod +x /usr/local/bin/composer\nENV PATH=\"/home/composer/.composer/vendor/bin:$PATH\"\n# PHPUNIT\nRUN composer global require \"phpunit/phpunit\" \\\n && ln -s /home/composer/.composer/vendor/bin/phpunit /usr/local/bin/phpunit\n# Laravel\nRUN composer global require \"laravel/installer\"\nRUN ln -s /home/composer/.composer/vendor/bin/laravel /usr/local/bin/laravel\n# Symfony installer\nRUN curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony\nRUN chmod a+x /usr/local/bin/symfony\n# Symfony2 autocomplete\nRUN composer global require \"bamarni/symfony-console-autocomplete\"\nRUN ln -s /home/composer/.composer/vendor/bin/symfony-autocomplete /usr/local/bin/symfony-autocomplete\n# DEPLOYER.ORG\nRUN curl -LO https://deployer.org/deployer.phar \\\n && mv deployer.phar /usr/local/bin/dep \\\n && chmod +x /usr/local/bin/dep\nCOPY etc/php-fpm.conf /usr/local/etc/\nCOPY etc/php.ini /usr/local/etc/php/\nCOPY etc/.bashrc /etc/bash.bashrc\nCOPY etc/.zshrc /etc/zsh/newuser.zshrc.recommended\nCOPY etc/.zshrc /etc/zsh/zshrc\nRUN chmod ugo+rX -R /usr/local/etc/php\nRUN chmod -R 777 /home/composer \\\n && find /home/composer -type d -exec chmod 777 {} ;\nWORKDIR /data\nCMD [\"php-fpm\"]\n","injectedSmells":[],"originalDockerfileHash":"f59658f1c8cefd38c8a30a9927dd5a40","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.1-fpm\nMAINTAINER Stepanov Nikolai <nstepanovdev@gmail.com>\nRUN apt-get update\nENV COMPOSER_HOME=\"/home/composer/.composer\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV ZSH=\"/home/.oh-my-zsh\"\n#   Install locale\nARG TZ=UTC\nENV TZ=\"${TZ}\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone \\\n && apt-get install locales -f -y --reinstall \\\n && locale-gen en_US.UTF-8\n#   INSTALL EXTENSIONS\n#   apcu\nRUN pecl install apcu\nRUN echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/apcu.ini\n#   bz2\nRUN apt-get install libbz2-dev -y\nRUN docker-php-ext-install bz2\n#   gd\nRUN apt-get install libfreetype6-dev libjpeg62-turbo-dev libpng-dev -y\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/\nRUN docker-php-ext-install gd\n#   mcrypt\nRUN apt-get install libmcrypt-dev -y\nRUN docker-php-ext-install mcrypt\n#   pdo\nRUN docker-php-ext-install pdo_mysql \\\n && apt-get install libpq-dev -y \\\n && docker-php-ext-install pdo_pgsql \\\n && apt-get install libsqlite3-dev -y \\\n && docker-php-ext-install pdo_sqlite\n#   phpredis\nRUN pecl install -o -f redis \\\n && rm -rf /tmp/pear \\\n && echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini\n#   xsl\nRUN apt-get install libxslt-dev -y\nRUN docker-php-ext-install xsl\n#   intl\nRUN apt-get update \\\n && apt-get install zlib1g-dev libicu-dev g++ -y\nRUN docker-php-ext-configure intl\nRUN docker-php-ext-install intl\n#  RUN pecl install intl\n#  RUN docker-php-ext-install intl\n#   zip\nRUN apt-get install zlib1g-dev -y \\\n && docker-php-ext-install zip\n#   common\nRUN apt-get install libssl-dev -y\nRUN docker-php-ext-install opcache calendar dba pcntl bcmath mbstring xmlrpc ftp shmop\n#   preconf enviroment\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data\"\nRUN usermod -u 1000 -d /data www-data -s /bin/bash\nRUN groupadd -r node \\\n && useradd -r -g node node \\\n && usermod -G www-data -a node\nRUN mkdir /data \\\n && chmod -R 644 /data \\\n && find /data -type d -exec chmod 755 {}\nRUN apt-get install libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev msmtp imagemagick libssl-dev libxml2-dev libicu-dev libxslt-dev wget git vim ruby ruby-dev libcurl4-openssl-dev mc -y\n#  Install nodejs\nRUN apt-get install gnupg -y\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get install nodejs build-essential -y\n#   Install OH-MY-ZSH to see pretty terminal and ditch the bash\nRUN apt-get install zsh -y\nRUN curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | bash\n#   Clean apt\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install Bower & Grunt\nRUN npm install bower gulp uglify-js uglifycss webpack@2.2.* -g \\\n && echo '{ \"allow_root\": true }' > /root/.bowerrc\n#   Install gem dependencies\nRUN gem install bundler\n#  COMPOSER\nRUN curl https://getcomposer.org/installer | php -- \\\n && mv composer.phar /usr/local/bin/composer \\\n && chmod +x /usr/local/bin/composer\nENV PATH=\"/home/composer/.composer/vendor/bin:$PATH\"\n#  PHPUNIT\nRUN composer global require \"phpunit/phpunit\" \\\n && ln -s /home/composer/.composer/vendor/bin/phpunit /usr/local/bin/phpunit\n#  Laravel\nRUN composer global require \"laravel/installer\"\nRUN ln -s /home/composer/.composer/vendor/bin/laravel /usr/local/bin/laravel\n#  Symfony installer\nRUN curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony\nRUN chmod a+x /usr/local/bin/symfony\n#  Symfony2 autocomplete\nRUN composer global require \"bamarni/symfony-console-autocomplete\"\nRUN ln -s /home/composer/.composer/vendor/bin/symfony-autocomplete /usr/local/bin/symfony-autocomplete\n#  DEPLOYER.ORG\nRUN curl -LO https://deployer.org/deployer.phar \\\n && mv deployer.phar /usr/local/bin/dep \\\n && chmod +x /usr/local/bin/dep\nCOPY etc/php-fpm.conf /usr/local/etc/\nCOPY etc/php.ini /usr/local/etc/php/\nCOPY etc/.bashrc /etc/bash.bashrc\nCOPY etc/.zshrc /etc/zsh/newuser.zshrc.recommended\nCOPY etc/.zshrc /etc/zsh/zshrc\nRUN chmod ugo+rX -R /usr/local/etc/php\nRUN chmod -R 777 /home/composer \\\n && find /home/composer -type d -exec chmod 777 {}\nWORKDIR /data\nCMD [\"php-fpm\"]\n","originalDockerfileUglifiedHash":"10c2da68cbd0f0f8dd790fac2cd73ed5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5a975d7f7a1c500e22e84ff783793b2643c7d821.dockerfile"}