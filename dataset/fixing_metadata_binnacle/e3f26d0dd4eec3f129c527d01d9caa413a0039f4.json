{"seed":3997192916,"processedDockerfileHash":"9193433fa5f71a101ae4250d18342427","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM bitnami/minideb:latest\nENV RAILS_ENV=\"production\"\nENV BUILD_RUBY_VERSION=\"2.4.2\"\n#   Install build dependencies\nRUN set -x \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y sudo wget curl build-essential libcurl4-openssl-dev python-dev python-setuptools software-properties-common python-pip git libjemalloc-dev brotli \\\n && pip install python-magic==0.4.27 \\\n && curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get clean \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs \\\n && cd /tmp \\\n && wget -O ruby-install-0.6.1.tar.gz https://github.com/postmodern/ruby-install/archive/v0.6.1.tar.gz \\\n && tar -xzvf ruby-install-0.6.1.tar.gz \\\n && cd ruby-install-0.6.1/ \\\n && make install \\\n && ruby-install ruby $BUILD_RUBY_VERSION -- --with-jemalloc \\\n && PATH=/opt/rubies/ruby-$BUILD_RUBY_VERSION/bin:$PATH gem install bundler \\\n && cd /tmp \\\n && wget -O su-exec-0.2.tar.gz https://github.com/ncopa/su-exec/archive/v0.2.tar.gz \\\n && tar -xzvf su-exec-0.2.tar.gz \\\n && cd su-exec-0.2/ \\\n && make \\\n && cp -a su-exec /usr/bin/ \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y yarn libpq-dev postgresql-client-9.6 libreadline-dev zlib1g-dev flex bison libxml2-dev libxslt1-dev libssl-dev imagemagick ca-certificates rsync \\\n && apt-get clean \\\n && DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y wget curl \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Add 'web' user which will run the application\nRUN adduser web --home /home/web --shell /bin/bash --disabled-password --gecos \"\"\nCOPY Gemfile* /var/www/\nRUN mkdir -p /var/www/docker \\\n && echo \"export PATH=\\\"$PATH:/opt/rubies/ruby-$BUILD_RUBY_VERSION/bin\\\"\" > /var/www/docker/ruby-path.sh \\\n && chmod +x /var/www/docker/ruby-path.sh \\\n && mkdir -p /var/bundle \\\n && chown -R web:web /var/bundle \\\n && chown -R web:web /var/www \\\n && mkdir -p /data/public \\\n && chown -R web:web /data\nUSER web\nRUN cd /var/www \\\n && . /var/www/docker/ruby-path.sh \\\n && bundle install --path /var/bundle --deployment --without development test deploy\n#   Add application source\nUSER root\nCOPY . /var/www\nRUN cd /var/www/ \\\n && find /var/www/docker -type f -name \"*.sh\" -print0 | xargs -0 chmod +x \\\n && chown -R web:web /var/www\n#   Precompile assets and cleanup\nUSER web\nRUN cd /var/www \\\n && . /var/www/docker/ruby-path.sh \\\n && . /var/www/.env.docker-build \\\n && bundle exec rake assets:precompile \\\n && python /var/www/docker/brotli_compress.py /var/www/public/assets \\\n && python /var/www/docker/brotli_compress.py /var/www/public/packs \\\n && rm -rf /var/www/tmp/* /var/www/log/*\nUSER root\nENTRYPOINT [\"/var/www/docker/docker-entrypoint.sh\"]\nVOLUME /var/www\nWORKDIR /var/www\nCMD [\"bundle\", \"exec\", \"puma\", \"-C\", \"config/puma.rb\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM bitnami/minideb:latest\nENV RAILS_ENV=\"production\"\nENV BUILD_RUBY_VERSION=\"2.4.2\"\n#  Install build dependencies\nRUN set -x \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y sudo wget curl build-essential libcurl4-openssl-dev python-dev python-setuptools software-properties-common python-pip git libjemalloc-dev brotli \\\n && pip install python-magic \\\n && curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get clean \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs \\\n && cd /tmp \\\n && wget -O ruby-install-0.6.1.tar.gz https://github.com/postmodern/ruby-install/archive/v0.6.1.tar.gz \\\n && tar -xzvf ruby-install-0.6.1.tar.gz \\\n && cd ruby-install-0.6.1/ \\\n && make install \\\n && ruby-install ruby $BUILD_RUBY_VERSION -- --with-jemalloc \\\n && PATH=/opt/rubies/ruby-$BUILD_RUBY_VERSION/bin:$PATH gem install bundler \\\n && cd /tmp \\\n && wget -O su-exec-0.2.tar.gz https://github.com/ncopa/su-exec/archive/v0.2.tar.gz \\\n && tar -xzvf su-exec-0.2.tar.gz \\\n && cd su-exec-0.2/ \\\n && make \\\n && cp -a su-exec /usr/bin/ \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y yarn libpq-dev postgresql-client-9.6 libreadline-dev zlib1g-dev flex bison libxml2-dev libxslt1-dev libssl-dev imagemagick ca-certificates rsync \\\n && apt-get clean \\\n && DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y wget curl \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Add 'web' user which will run the application\nRUN adduser web --home /home/web --shell /bin/bash --disabled-password --gecos \"\"\nCOPY Gemfile* /var/www/\nRUN mkdir -p /var/www/docker \\\n && echo \"export PATH=\\\"$PATH:/opt/rubies/ruby-$BUILD_RUBY_VERSION/bin\\\"\" > /var/www/docker/ruby-path.sh \\\n && chmod +x /var/www/docker/ruby-path.sh \\\n && mkdir -p /var/bundle \\\n && chown -R web:web /var/bundle \\\n && chown -R web:web /var/www \\\n && mkdir -p /data/public \\\n && chown -R web:web /data\nUSER web\nRUN cd /var/www \\\n && . /var/www/docker/ruby-path.sh \\\n && bundle install --path /var/bundle --deployment --without development test deploy\n#  Add application source\nUSER root\nCOPY . /var/www\nRUN cd /var/www/ \\\n && find /var/www/docker -type f -name \"*.sh\" -print0 | xargs -0 chmod +x \\\n && chown -R web:web /var/www\n#  Precompile assets and cleanup\nUSER web\nRUN cd /var/www \\\n && . /var/www/docker/ruby-path.sh \\\n && . /var/www/.env.docker-build \\\n && bundle exec rake assets:precompile \\\n && python /var/www/docker/brotli_compress.py /var/www/public/assets \\\n && python /var/www/docker/brotli_compress.py /var/www/public/packs \\\n && rm -rf /var/www/tmp/* /var/www/log/*\nUSER root\nENTRYPOINT [\"/var/www/docker/docker-entrypoint.sh\"]\nVOLUME /var/www\nWORKDIR /var/www\nCMD [\"bundle\", \"exec\", \"puma\", \"-C\", \"config/puma.rb\"]\n","injectedSmells":[],"originalDockerfileHash":"a4aba8a143108c48e5fe1c66ee4052d4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM bitnami/minideb:latest\nENV RAILS_ENV=\"production\"\nENV BUILD_RUBY_VERSION=\"2.4.2\"\n#   Install build dependencies\nRUN set -x \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y sudo wget curl build-essential libcurl4-openssl-dev python-dev python-setuptools software-properties-common python-pip git libjemalloc-dev brotli \\\n && pip install python-magic \\\n && curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get clean \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs \\\n && cd /tmp \\\n && wget -O ruby-install-0.6.1.tar.gz https://github.com/postmodern/ruby-install/archive/v0.6.1.tar.gz \\\n && tar -xzvf ruby-install-0.6.1.tar.gz \\\n && cd ruby-install-0.6.1/ \\\n && make install \\\n && ruby-install ruby $BUILD_RUBY_VERSION -- --with-jemalloc \\\n && PATH=/opt/rubies/ruby-$BUILD_RUBY_VERSION/bin:$PATH gem install bundler \\\n && cd /tmp \\\n && wget -O su-exec-0.2.tar.gz https://github.com/ncopa/su-exec/archive/v0.2.tar.gz \\\n && tar -xzvf su-exec-0.2.tar.gz \\\n && cd su-exec-0.2/ \\\n && make \\\n && cp -a su-exec /usr/bin/ \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y yarn libpq-dev postgresql-client-9.6 libreadline-dev zlib1g-dev flex bison libxml2-dev libxslt1-dev libssl-dev imagemagick ca-certificates rsync \\\n && apt-get clean \\\n && DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y wget curl \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Add 'web' user which will run the application\nRUN adduser web --home /home/web --shell /bin/bash --disabled-password --gecos \"\"\nCOPY Gemfile* /var/www/\nRUN mkdir -p /var/www/docker \\\n && echo \"export PATH=\\\"$PATH:/opt/rubies/ruby-$BUILD_RUBY_VERSION/bin\\\"\" > /var/www/docker/ruby-path.sh \\\n && chmod +x /var/www/docker/ruby-path.sh \\\n && mkdir -p /var/bundle \\\n && chown -R web:web /var/bundle \\\n && chown -R web:web /var/www \\\n && mkdir -p /data/public \\\n && chown -R web:web /data\nUSER web\nRUN cd /var/www \\\n && . /var/www/docker/ruby-path.sh \\\n && bundle install --path /var/bundle --deployment --without development test deploy\n#   Add application source\nUSER root\nCOPY . /var/www\nRUN cd /var/www/ \\\n && find /var/www/docker -type f -name \"*.sh\" -print0 | xargs -0 chmod +x \\\n && chown -R web:web /var/www\n#   Precompile assets and cleanup\nUSER web\nRUN cd /var/www \\\n && . /var/www/docker/ruby-path.sh \\\n && . /var/www/.env.docker-build \\\n && bundle exec rake assets:precompile \\\n && python /var/www/docker/brotli_compress.py /var/www/public/assets \\\n && python /var/www/docker/brotli_compress.py /var/www/public/packs \\\n && rm -rf /var/www/tmp/* /var/www/log/*\nUSER root\nENTRYPOINT [\"/var/www/docker/docker-entrypoint.sh\"]\nVOLUME /var/www\nWORKDIR /var/www\nCMD [\"bundle\", \"exec\", \"puma\", \"-C\", \"config/puma.rb\"]\n","originalDockerfileUglifiedHash":"6789edd88d4d126b1289ea4d1094876f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e3f26d0dd4eec3f129c527d01d9caa413a0039f4.dockerfile"}