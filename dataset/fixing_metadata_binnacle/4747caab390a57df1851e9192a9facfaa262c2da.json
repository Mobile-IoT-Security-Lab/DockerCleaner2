{"seed":1325248944,"processedDockerfileHash":"7cf139715727f202de21638fdd2637c4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM nvidia/cudagl:9.0-devel-ubuntu16.04\nARG UID=1000\nARG GID=1000\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl gcc libc6-dev libglu1 libglu1:i386 libsm6 libxv1 libxv1:i386 make python python-numpy x11-xkb-utils xauth xfonts-base xkb-data -y \\\n && apt-get install --no-install-recommends build-essential --reinstall -y \\\n && apt-get install --no-install-recommends sudo nano wget bzip2 gcc g++ git tmux -y \\\n && rm -rf /var/lib/apt/lists/*\nENV DISPLAY=\":0\"\nRUN groupadd -g $GID gcg-user\nRUN useradd -m -u $UID -g $GID gcg-user \\\n && echo \"gcg-user:gcg\" | chpasswd \\\n && adduser gcg-user sudo\nUSER gcg-user\nENV HOME=\"/home/gcg-user\"\nWORKDIR $HOME\nENV SOURCEDIR=\"$HOME/source\"\nRUN mkdir $SOURCEDIR\n#   install miniconda\nRUN cd $SOURCEDIR \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh \\\n && bash Miniconda3-4.5.4-Linux-x86_64.sh -b -p $SOURCEDIR/miniconda \\\n && rm Miniconda3-4.5.4-Linux-x86_64.sh \\\n && cd\nENV PATH=\"$SOURCEDIR/miniconda/envs/gcg/bin:$SOURCEDIR/miniconda/bin:$PATH\"\n#   setup gcg miniconda env\nRUN conda create -y -n gcg python=3.5 \\\n && echo 'source activate gcg' >> ~/.bashrc\n#   install to gcg env\nRUN conda install -n gcg -y cudnn\nRUN pip install tensorflow-gpu==1.8.0\nRUN pip install panda3d==1.10.0.dev1182\nRUN pip install colorlog==3.1.0\nRUN pip install pandas==0.21.0\nRUN conda install -n gcg -y pillow=5.0.0\nRUN conda install -n gcg -y matplotlib=2.2.2\nRUN pip install ipython==6.4.0\n#   setup gcg\nRUN echo 'export PYTHONPATH=$PYTHONPATH:$HOME/gcg/src' >> ~/.bashrc\n#   setup tmux\nRUN echo 'set-option -g default-shell /bin/bash' >> ~/.tmux.conf\n#   setup gibson\nRUN pip install http://download.pytorch.org/whl/cu90/torch-0.3.1-cp35-cp35m-linux_x86_64.whl\nRUN pip install torchvision==0.2.0\nRUN echo 'gcg' | sudo -S apt-get update\nRUN echo 'gcg' | sudo -S apt-get install -y git build-essential cmake libopenmpi-dev\nRUN echo 'gcg' | sudo -S apt-get install -y zlib1g-dev tmux\nRUN echo 'gcg' | sudo -S apt-get install -y libglew-dev libglm-dev libassimp-dev xorg-dev libglu1-mesa-dev libboost-dev mesa-common-dev freeglut3-dev libopenmpi-dev cmake golang libjpeg-turbo8-dev wmctrl xdotool\nRUN echo 'gcg' | sudo -S apt-get install -y vim wget unzip\nRUN echo 'gcg' | sudo -S apt-get install -y libzmq3-dev\nRUN echo 'gcg' | sudo -S apt-get clean \\\n && echo 'gcg' | sudo -S apt-get autoremove \\\n && echo 'gcg' | sudo -S rm -rf /var/lib/apt/lists/* \\\n && echo 'gcg' | sudo -S rm -rf /var/cache/apk/*\nRUN cd $SOURCEDIR \\\n && wget https://people.eecs.berkeley.edu/~gregoryk/downloads/GibsonEnvGtS.tar.gz\nRUN cd $SOURCEDIR \\\n && rm -rf GibsonEnv \\\n && tar -xvf GibsonEnvGtS.tar.gz \\\n && rm GibsonEnvGtS.tar.gz \\\n && cd GibsonEnv \\\n && bash build.sh build_local \\\n && pip install -e . \\\n && cd\nRUN pip install scipy==1.1.0\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cudagl:9.0-devel-ubuntu16.04\nARG UID=1000\nARG GID=1000\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl gcc libc6-dev libglu1 libglu1:i386 libsm6 libxv1 libxv1:i386 make python python-numpy x11-xkb-utils xauth xfonts-base xkb-data -y \\\n && apt-get install build-essential --reinstall -y \\\n && apt-get install sudo nano wget bzip2 gcc g++ git tmux -y \\\n && rm -rf /var/lib/apt/lists/*\nENV DISPLAY=\":0\"\nRUN groupadd -g $GID gcg-user\nRUN useradd -m -u $UID -g $GID gcg-user \\\n && echo \"gcg-user:gcg\" | chpasswd \\\n && adduser gcg-user sudo\nUSER gcg-user\nENV HOME=\"/home/gcg-user\"\nWORKDIR $HOME\nENV SOURCEDIR=\"$HOME/source\"\nRUN mkdir $SOURCEDIR\n#  install miniconda\nRUN cd $SOURCEDIR \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh \\\n && bash Miniconda3-4.5.4-Linux-x86_64.sh -b -p $SOURCEDIR/miniconda \\\n && rm Miniconda3-4.5.4-Linux-x86_64.sh \\\n && cd\nENV PATH=\"$SOURCEDIR/miniconda/envs/gcg/bin:$SOURCEDIR/miniconda/bin:$PATH\"\n#  setup gcg miniconda env\nRUN conda create -y -n gcg python=3.5 \\\n && echo 'source activate gcg' >> ~/.bashrc\n#  install to gcg env\nRUN conda install -n gcg -y cudnn\nRUN pip install tensorflow-gpu==1.8.0\nRUN pip install panda3d==1.10.0.dev1182\nRUN pip install colorlog==3.1.0\nRUN pip install pandas==0.21.0\nRUN conda install -n gcg -y pillow=5.0.0\nRUN conda install -n gcg -y matplotlib=2.2.2\nRUN pip install ipython==6.4.0\n#  setup gcg\nRUN echo 'export PYTHONPATH=$PYTHONPATH:$HOME/gcg/src' >> ~/.bashrc\n#  setup tmux\nRUN echo 'set-option -g default-shell /bin/bash' >> ~/.tmux.conf\n#  setup gibson\nRUN pip install http://download.pytorch.org/whl/cu90/torch-0.3.1-cp35-cp35m-linux_x86_64.whl\nRUN pip install torchvision==0.2.0\nRUN echo 'gcg' | sudo -S apt-get update\nRUN echo 'gcg' | sudo -S apt-get install -y git build-essential cmake libopenmpi-dev\nRUN echo 'gcg' | sudo -S apt-get install -y zlib1g-dev tmux\nRUN echo 'gcg' | sudo -S apt-get install -y libglew-dev libglm-dev libassimp-dev xorg-dev libglu1-mesa-dev libboost-dev mesa-common-dev freeglut3-dev libopenmpi-dev cmake golang libjpeg-turbo8-dev wmctrl xdotool\nRUN echo 'gcg' | sudo -S apt-get install -y vim wget unzip\nRUN echo 'gcg' | sudo -S apt-get install -y libzmq3-dev\nRUN echo 'gcg' | sudo -S apt-get clean \\\n && echo 'gcg' | sudo -S apt-get autoremove \\\n && echo 'gcg' | sudo -S rm -rf /var/lib/apt/lists/* \\\n && echo 'gcg' | sudo -S rm -rf /var/cache/apk/*\nRUN cd $SOURCEDIR \\\n && wget https://people.eecs.berkeley.edu/~gregoryk/downloads/GibsonEnvGtS.tar.gz\nRUN cd $SOURCEDIR \\\n && rm -rf GibsonEnv \\\n && tar -xvf GibsonEnvGtS.tar.gz \\\n && rm GibsonEnvGtS.tar.gz \\\n && cd GibsonEnv \\\n && bash build.sh build_local \\\n && pip install -e . \\\n && cd\nRUN pip install scipy==1.1.0\n","injectedSmells":[],"originalDockerfileHash":"e3738010b72699461a7dc7644efdb1b0","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cudagl:9.0-devel-ubuntu16.04\nARG UID=1000\nARG GID=1000\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl gcc libc6-dev libglu1 libglu1:i386 libsm6 libxv1 libxv1:i386 make python python-numpy x11-xkb-utils xauth xfonts-base xkb-data -y \\\n && apt-get install build-essential --reinstall -y \\\n && apt-get install sudo nano wget bzip2 gcc g++ git tmux -y \\\n && rm -rf /var/lib/apt/lists/*\nENV DISPLAY=\":0\"\nRUN groupadd -g $GID gcg-user\nRUN useradd -m -u $UID -g $GID gcg-user \\\n && echo \"gcg-user:gcg\" | chpasswd \\\n && adduser gcg-user sudo\nUSER gcg-user\nENV HOME=\"/home/gcg-user\"\nWORKDIR $HOME\nENV SOURCEDIR=\"$HOME/source\"\nRUN mkdir $SOURCEDIR\n#   install miniconda\nRUN cd $SOURCEDIR \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh \\\n && bash Miniconda3-4.5.4-Linux-x86_64.sh -b -p $SOURCEDIR/miniconda \\\n && rm Miniconda3-4.5.4-Linux-x86_64.sh \\\n && cd\nENV PATH=\"$SOURCEDIR/miniconda/envs/gcg/bin:$SOURCEDIR/miniconda/bin:$PATH\"\n#   setup gcg miniconda env\nRUN conda create -y -n gcg python=3.5 \\\n && echo 'source activate gcg' >> ~/.bashrc\n#   install to gcg env\nRUN conda install -n gcg -y cudnn\nRUN pip install tensorflow-gpu==1.8.0\nRUN pip install panda3d==1.10.0.dev1182\nRUN pip install colorlog==3.1.0\nRUN pip install pandas==0.21.0\nRUN conda install -n gcg -y pillow=5.0.0\nRUN conda install -n gcg -y matplotlib=2.2.2\nRUN pip install ipython==6.4.0\n#   setup gcg\nRUN echo 'export PYTHONPATH=$PYTHONPATH:$HOME/gcg/src' >> ~/.bashrc\n#   setup tmux\nRUN echo 'set-option -g default-shell /bin/bash' >> ~/.tmux.conf\n#   setup gibson\nRUN pip install http://download.pytorch.org/whl/cu90/torch-0.3.1-cp35-cp35m-linux_x86_64.whl\nRUN pip install torchvision==0.2.0\nRUN echo 'gcg' | sudo -S apt-get update\nRUN echo 'gcg' | sudo -S apt-get install -y git build-essential cmake libopenmpi-dev\nRUN echo 'gcg' | sudo -S apt-get install -y zlib1g-dev tmux\nRUN echo 'gcg' | sudo -S apt-get install -y libglew-dev libglm-dev libassimp-dev xorg-dev libglu1-mesa-dev libboost-dev mesa-common-dev freeglut3-dev libopenmpi-dev cmake golang libjpeg-turbo8-dev wmctrl xdotool\nRUN echo 'gcg' | sudo -S apt-get install -y vim wget unzip\nRUN echo 'gcg' | sudo -S apt-get install -y libzmq3-dev\nRUN echo 'gcg' | sudo -S apt-get clean \\\n && echo 'gcg' | sudo -S apt-get autoremove \\\n && echo 'gcg' | sudo -S rm -rf /var/lib/apt/lists/* \\\n && echo 'gcg' | sudo -S rm -rf /var/cache/apk/*\nRUN cd $SOURCEDIR \\\n && wget https://people.eecs.berkeley.edu/~gregoryk/downloads/GibsonEnvGtS.tar.gz\nRUN cd $SOURCEDIR \\\n && rm -rf GibsonEnv \\\n && tar -xvf GibsonEnvGtS.tar.gz \\\n && rm GibsonEnvGtS.tar.gz \\\n && cd GibsonEnv \\\n && bash build.sh build_local \\\n && pip install -e . \\\n && cd\nRUN pip install scipy==1.1.0\n","originalDockerfileUglifiedHash":"0aba196f5c0a3330a850fa1f02fd330f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4747caab390a57df1851e9192a9facfaa262c2da.dockerfile"}