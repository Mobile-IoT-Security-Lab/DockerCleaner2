{"seed":4216260462,"processedDockerfileHash":"8bb49aecf6c9094cf49fadb9986814c7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM rocker/tidyverse:3.6.0\n#  ### cuda base ##########\n#  # Adapted from nvidia/cuda:9.0-base (A ubuntu16.04-based image)\n#  # Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/Dockerfile\n#  # Commit f7625b4242bb8206fc1f76a321efae930a7f3554\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates apt-transport-https gnupg2 curl dirmngr -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub \\\n && echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list \\\n && echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDA_VERSION=\"9.0.176\"\nENV CUDA_PKG_VERSION=\"9-0=$CUDA_VERSION-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-cudart-$CUDA_PKG_VERSION -y \\\n && ln -s cuda-9.0 /usr/local/cuda \\\n && rm -rf /var/lib/apt/lists/*\n#   nvidia-docker 1.0\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nLABEL com.nvidia.cuda.version=\"${CUDA_VERSION}\"\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf \\\n && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\n#   nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES=\"all\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"compute,utility\"\nENV NVIDIA_REQUIRE_CUDA=\"\\\"cuda>=9.0\\\"\"\n#  ######## runtime ########\n#  # Adapted from nvidia/cuda:9.0-runtime\n#  # Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/Dockerfile\nENV NCCL_VERSION=\"2.4.2\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-cublas-9-0=9.0.176.4-1 cuda-libraries-$CUDA_PKG_VERSION libnccl2=$NCCL_VERSION-1+cuda9.0 -y \\\n && apt-mark hold libnccl2 \\\n && rm -rf /var/lib/apt/lists/*\n#  ###### cudnn7 ##########\n#  # Adapted from nvidia/cuda:9.0-cudnn7\n#  # Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/cudnn7/Dockerfile\nENV CUDNN_VERSION=\"7.4.2.24\"\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn7=$CUDNN_VERSION-1+cuda9.0 -y \\\n && apt-mark hold libcudnn7 \\\n && rm -rf /var/lib/apt/lists/*\n#  ###### Set up env variables in R #######\nENV CUDA_HOME=\"/usr/local/cuda\"\nENV CUDA_PATH=\"/usr/local/cuda\"\nENV PATH=\"$CUDA_HOME/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"$CUDA_HOME/lib64:$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nRUN echo \"rsession-ld-library-path=$LD_LIBRARY_PATH\" | tee -a /etc/rstudio/rserver.conf \\\n && echo \"\\n \\nCUDA_HOME=$CUDA_HOME \\nCUDA_PATH=$CUDA_PATH \\nPATH=$PATH\" >> /usr/local/lib/R/etc/Renviron\n#  ######## Set up Python3 Virtual Environment to play nice with R ###\nENV WORKON_HOME=\"/opt/virtualenvs\"\nENV PYTHON_VENV_PATH=\"$WORKON_HOME/r-tensorflow\"\n#  # Set up a user modifyable python3 environment\nRUN apt-get update \\\n && apt-get install --no-install-recommends libpython3-dev python3-venv -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN python3 -m venv ${PYTHON_VENV_PATH}\nRUN chown -R rstudio:rstudio ${WORKON_HOME}\nENV PATH=\"${PYTHON_VENV_PATH}/bin:${PATH}\"\n#  # And set ENV for R! It doesn't read from the environment...\nRUN echo \"PATH=${PATH}\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"WORKON_HOME=${WORKON_HOME}\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"RETICULATE_PYTHON_ENV=${PYTHON_VENV_PATH}\" >> /usr/local/lib/R/etc/Renviron\n#  # reticulate will want virtualenv lib installed as well\nUSER rstudio\nRUN pip3 install virtualenv==16.5.0 --no-cache-dir\nUSER root\n#  # Because reticulate hardwires these PATHs...\nRUN ln -s ${PYTHON_VENV_PATH}/bin/pip /usr/local/bin/pip \\\n && ln -s ${PYTHON_VENV_PATH}/bin/virtualenv /usr/local/bin/virtualenv\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM rocker/tidyverse:3.6.0\n# ### cuda base ##########\n# # Adapted from nvidia/cuda:9.0-base (A ubuntu16.04-based image)\n# # Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/Dockerfile\n# # Commit f7625b4242bb8206fc1f76a321efae930a7f3554\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates apt-transport-https gnupg2 curl dirmngr -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub \\\n && echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list \\\n && echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDA_VERSION=\"9.0.176\"\nENV CUDA_PKG_VERSION=\"9-0=$CUDA_VERSION-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-cudart-$CUDA_PKG_VERSION -y \\\n && ln -s cuda-9.0 /usr/local/cuda \\\n && rm -rf /var/lib/apt/lists/*\n#  nvidia-docker 1.0\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nLABEL com.nvidia.cuda.version=\"${CUDA_VERSION}\"\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf \\\n && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\n#  nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES=\"all\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"compute,utility\"\nENV NVIDIA_REQUIRE_CUDA=\"\\\"cuda>=9.0\\\"\"\n# ######## runtime ########\n# # Adapted from nvidia/cuda:9.0-runtime\n# # Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/Dockerfile\nENV NCCL_VERSION=\"2.4.2\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-cublas-9-0=9.0.176.4-1 cuda-libraries-$CUDA_PKG_VERSION libnccl2=$NCCL_VERSION-1+cuda9.0 -y \\\n && apt-mark hold libnccl2 \\\n && rm -rf /var/lib/apt/lists/*\n# ###### cudnn7 ##########\n# # Adapted from nvidia/cuda:9.0-cudnn7\n# # Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/cudnn7/Dockerfile\nENV CUDNN_VERSION=\"7.4.2.24\"\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn7=$CUDNN_VERSION-1+cuda9.0 -y \\\n && apt-mark hold libcudnn7 \\\n && rm -rf /var/lib/apt/lists/*\n# ###### Set up env variables in R #######\nENV CUDA_HOME=\"/usr/local/cuda\"\nENV CUDA_PATH=\"/usr/local/cuda\"\nENV PATH=\"$CUDA_HOME/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"$CUDA_HOME/lib64:$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nRUN echo \"rsession-ld-library-path=$LD_LIBRARY_PATH\" | tee -a /etc/rstudio/rserver.conf \\\n && echo \"\\n \\nCUDA_HOME=$CUDA_HOME \\nCUDA_PATH=$CUDA_PATH \\nPATH=$PATH\" >> /usr/local/lib/R/etc/Renviron\n# ######## Set up Python3 Virtual Environment to play nice with R ###\nENV WORKON_HOME=\"/opt/virtualenvs\"\nENV PYTHON_VENV_PATH=\"$WORKON_HOME/r-tensorflow\"\n# # Set up a user modifyable python3 environment\nRUN apt-get update \\\n && apt-get install --no-install-recommends libpython3-dev python3-venv -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN python3 -m venv ${PYTHON_VENV_PATH}\nRUN chown -R rstudio:rstudio ${WORKON_HOME}\nENV PATH=\"${PYTHON_VENV_PATH}/bin:${PATH}\"\n# # And set ENV for R! It doesn't read from the environment...\nRUN echo \"PATH=${PATH}\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"WORKON_HOME=${WORKON_HOME}\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"RETICULATE_PYTHON_ENV=${PYTHON_VENV_PATH}\" >> /usr/local/lib/R/etc/Renviron\n# # reticulate will want virtualenv lib installed as well\nUSER rstudio\nRUN pip3 install virtualenv==16.5.0 --no-cache-dir\nUSER root\n# # Because reticulate hardwires these PATHs...\nRUN ln -s ${PYTHON_VENV_PATH}/bin/pip /usr/local/bin/pip \\\n && ln -s ${PYTHON_VENV_PATH}/bin/virtualenv /usr/local/bin/virtualenv\n","injectedSmells":[],"originalDockerfileHash":"ad47a4af4f5078fa8f804eeafb4f076e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM rocker/tidyverse:3.6.0\n#  ### cuda base ##########\n#  # Adapted from nvidia/cuda:9.0-base (A ubuntu16.04-based image)\n#  # Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/Dockerfile\n#  # Commit f7625b4242bb8206fc1f76a321efae930a7f3554\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates apt-transport-https gnupg2 curl dirmngr -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub \\\n && echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list \\\n && echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDA_VERSION=\"9.0.176\"\nENV CUDA_PKG_VERSION=\"9-0=$CUDA_VERSION-1\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-cudart-$CUDA_PKG_VERSION -y \\\n && ln -s cuda-9.0 /usr/local/cuda \\\n && rm -rf /var/lib/apt/lists/*\n#   nvidia-docker 1.0\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nLABEL com.nvidia.cuda.version=\"${CUDA_VERSION}\"\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf \\\n && echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\n#   nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES=\"all\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"compute,utility\"\nENV NVIDIA_REQUIRE_CUDA=\"\\\"cuda>=9.0\\\"\"\n#  ######## runtime ########\n#  # Adapted from nvidia/cuda:9.0-runtime\n#  # Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/Dockerfile\nENV NCCL_VERSION=\"2.4.2\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-cublas-9-0=9.0.176.4-1 cuda-libraries-$CUDA_PKG_VERSION libnccl2=$NCCL_VERSION-1+cuda9.0 -y \\\n && apt-mark hold libnccl2 \\\n && rm -rf /var/lib/apt/lists/*\n#  ###### cudnn7 ##########\n#  # Adapted from nvidia/cuda:9.0-cudnn7\n#  # Sources at https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.0/runtime/cudnn7/Dockerfile\nENV CUDNN_VERSION=\"7.4.2.24\"\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn7=$CUDNN_VERSION-1+cuda9.0 -y \\\n && apt-mark hold libcudnn7 \\\n && rm -rf /var/lib/apt/lists/*\n#  ###### Set up env variables in R #######\nENV CUDA_HOME=\"/usr/local/cuda\"\nENV CUDA_PATH=\"/usr/local/cuda\"\nENV PATH=\"$CUDA_HOME/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"$CUDA_HOME/lib64:$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nRUN echo \"rsession-ld-library-path=$LD_LIBRARY_PATH\" | tee -a /etc/rstudio/rserver.conf \\\n && echo \"\\n \\nCUDA_HOME=$CUDA_HOME \\nCUDA_PATH=$CUDA_PATH \\nPATH=$PATH\" >> /usr/local/lib/R/etc/Renviron\n#  ######## Set up Python3 Virtual Environment to play nice with R ###\nENV WORKON_HOME=\"/opt/virtualenvs\"\nENV PYTHON_VENV_PATH=\"$WORKON_HOME/r-tensorflow\"\n#  # Set up a user modifyable python3 environment\nRUN apt-get update \\\n && apt-get install --no-install-recommends libpython3-dev python3-venv -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN python3 -m venv ${PYTHON_VENV_PATH}\nRUN chown -R rstudio:rstudio ${WORKON_HOME}\nENV PATH=\"${PYTHON_VENV_PATH}/bin:${PATH}\"\n#  # And set ENV for R! It doesn't read from the environment...\nRUN echo \"PATH=${PATH}\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"WORKON_HOME=${WORKON_HOME}\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"RETICULATE_PYTHON_ENV=${PYTHON_VENV_PATH}\" >> /usr/local/lib/R/etc/Renviron\n#  # reticulate will want virtualenv lib installed as well\nUSER rstudio\nRUN pip3 install virtualenv==16.5.0 --no-cache-dir\nUSER root\n#  # Because reticulate hardwires these PATHs...\nRUN ln -s ${PYTHON_VENV_PATH}/bin/pip /usr/local/bin/pip \\\n && ln -s ${PYTHON_VENV_PATH}/bin/virtualenv /usr/local/bin/virtualenv\n","originalDockerfileUglifiedHash":"4914ff21eab2518d780d65b0bcaf916d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/586122d61a0ad084674e26a96db389dc2ab704cc.dockerfile"}