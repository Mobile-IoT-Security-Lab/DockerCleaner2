{"seed":506481175,"processedDockerfileHash":"cd62282ed9b2a71435813545bcc3cda9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (C) 2019 Zilliqa\n#\n#   This program is free software: you can redistribute it and/or modify\n#   it under the terms of the GNU General Public License as published by\n#   the Free Software Foundation, either version 3 of the License, or\n#   (at your option) any later version.\n#\n#   This program is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#   GNU General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n#\nFROM zilliqa/scilla:v0.3.0\n#   Format guideline: one package per line and keep them alphabetically sorted\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && add-apt-repository ppa:tah83/secp256k1 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf build-essential ca-certificates cmake curl git golang libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libcurl4-openssl-dev libevent-dev libjsoncpp-dev libjsonrpccpp-dev libleveldb-dev libmicrohttpd-dev libminiupnpc-dev libprotobuf-dev libsnappy-dev libssl-dev libtool ocl-icd-opencl-dev pkg-config protobuf-compiler python python-pip libsecp256k1-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install setuptools==67.6.1 \\\n && pip install request==null requests==2.28.2 clint==0.5.1 futures==3.4.0\n#  ############################## CUDA Installation ##############################\n#   taken from https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.0/base/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates apt-transport-https gnupg-curl -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 \\\n && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub \\\n && echo \"$NVIDIA_GPGKEY_SUM cudasign.pub\" | sha256sum -c --strict - \\\n && rm cudasign.pub \\\n && echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list \\\n && echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDA_VERSION=\"10.0.130\"\nENV CUDA_PKG_VERSION=\"10-0=$CUDA_VERSION-1\"\n#   For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-compat-10-0=410.48-1 cuda-cudart-$CUDA_PKG_VERSION -y \\\n && ln -s cuda-10.0 /usr/local/cuda \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/usr/local/cuda/bin:${PATH}\"\n#   nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES=\"all\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"compute,utility\"\nENV NVIDIA_REQUIRE_CUDA=\"\\\"cuda>=10.0 brand=tesla,driver>=384,driver<385\\\"\"\n#   taken from https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.0/runtime/Dockerfile\nENV NCCL_VERSION=\"2.3.7\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-libraries-$CUDA_PKG_VERSION cuda-nvtx-$CUDA_PKG_VERSION libnccl2=$NCCL_VERSION-1+cuda10.0 -y \\\n && apt-mark hold libnccl2 \\\n && rm -rf /var/lib/apt/lists/*\n#   taken from https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.0/devel/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-libraries-dev-$CUDA_PKG_VERSION cuda-nvml-dev-$CUDA_PKG_VERSION cuda-minimal-build-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION libnccl-dev=$NCCL_VERSION-1+cuda10.0 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs\"\n#  ###################### End of CUDA Installation ###############################\nARG ZILLIQA_VERSION=v4.6.1\nARG REPO=https://github.com/Zilliqa/Zilliqa.git\nARG SOURCE_DIR=/zilliqa\nARG BUILD_DIR=/build\nARG INSTALL_DIR=/usr/local\nARG BUILD_TYPE=RelWithDebInfo\nARG EXTRA_CMAKE_ARGS=\"-DCUDA_MINE=1\"\nRUN git clone -b ${ZILLIQA_VERSION} --depth 1 ${REPO} ${SOURCE_DIR} \\\n && cmake -H${SOURCE_DIR} -B${BUILD_DIR} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} ${EXTRA_CMAKE_ARGS} \\\n && cmake --build ${BUILD_DIR} -- -j$( nproc ;) \\\n && cmake --build ${BUILD_DIR} --target install \\\n && rm -rf ${BUILD_DIR}\nENV LD_LIBRARY_PATH=\"${INSTALL_DIR}/lib\"\nENTRYPOINT [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (C) 2019 Zilliqa\n#\n#  This program is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#  You should have received a copy of the GNU General Public License\n#  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n#\nFROM zilliqa/scilla:v0.3.0\n#  Format guideline: one package per line and keep them alphabetically sorted\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:tah83/secp256k1 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf build-essential ca-certificates cmake curl git golang libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libcurl4-openssl-dev libevent-dev libjsoncpp-dev libjsonrpccpp-dev libleveldb-dev libmicrohttpd-dev libminiupnpc-dev libprotobuf-dev libsnappy-dev libssl-dev libtool ocl-icd-opencl-dev pkg-config protobuf-compiler python python-pip libsecp256k1-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install setuptools \\\n && pip install request requests clint futures\n# ############################## CUDA Installation ##############################\n#  taken from https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.0/base/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates apt-transport-https gnupg-curl -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 \\\n && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub \\\n && echo \"$NVIDIA_GPGKEY_SUM cudasign.pub\" | sha256sum -c --strict - \\\n && rm cudasign.pub \\\n && echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list \\\n && echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDA_VERSION=\"10.0.130\"\nENV CUDA_PKG_VERSION=\"10-0=$CUDA_VERSION-1\"\n#  For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-compat-10-0=410.48-1 cuda-cudart-$CUDA_PKG_VERSION -y \\\n && ln -s cuda-10.0 /usr/local/cuda \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/usr/local/cuda/bin:${PATH}\"\n#  nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES=\"all\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"compute,utility\"\nENV NVIDIA_REQUIRE_CUDA=\"\\\"cuda>=10.0 brand=tesla,driver>=384,driver<385\\\"\"\n#  taken from https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.0/runtime/Dockerfile\nENV NCCL_VERSION=\"2.3.7\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-libraries-$CUDA_PKG_VERSION cuda-nvtx-$CUDA_PKG_VERSION libnccl2=$NCCL_VERSION-1+cuda10.0 -y \\\n && apt-mark hold libnccl2 \\\n && rm -rf /var/lib/apt/lists/*\n#  taken from https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.0/devel/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-libraries-dev-$CUDA_PKG_VERSION cuda-nvml-dev-$CUDA_PKG_VERSION cuda-minimal-build-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION libnccl-dev=$NCCL_VERSION-1+cuda10.0 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs\"\n# ###################### End of CUDA Installation ###############################\nARG ZILLIQA_VERSION=v4.6.1\nARG REPO=https://github.com/Zilliqa/Zilliqa.git\nARG SOURCE_DIR=/zilliqa\nARG BUILD_DIR=/build\nARG INSTALL_DIR=/usr/local\nARG BUILD_TYPE=RelWithDebInfo\nARG EXTRA_CMAKE_ARGS=\"-DCUDA_MINE=1\"\nRUN git clone -b ${ZILLIQA_VERSION} --depth 1 ${REPO} ${SOURCE_DIR} \\\n && cmake -H${SOURCE_DIR} -B${BUILD_DIR} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} ${EXTRA_CMAKE_ARGS} \\\n && cmake --build ${BUILD_DIR} -- -j$( nproc ;) \\\n && cmake --build ${BUILD_DIR} --target install \\\n && rm -rf ${BUILD_DIR}\nENV LD_LIBRARY_PATH=\"${INSTALL_DIR}/lib\"\nENTRYPOINT [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"6bac13c34aa3595067fc95211e304a17","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (C) 2019 Zilliqa\n#\n#   This program is free software: you can redistribute it and/or modify\n#   it under the terms of the GNU General Public License as published by\n#   the Free Software Foundation, either version 3 of the License, or\n#   (at your option) any later version.\n#\n#   This program is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#   GNU General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n#\nFROM zilliqa/scilla:v0.3.0\n#   Format guideline: one package per line and keep them alphabetically sorted\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:tah83/secp256k1 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf build-essential ca-certificates cmake curl git golang libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libcurl4-openssl-dev libevent-dev libjsoncpp-dev libjsonrpccpp-dev libleveldb-dev libmicrohttpd-dev libminiupnpc-dev libprotobuf-dev libsnappy-dev libssl-dev libtool ocl-icd-opencl-dev pkg-config protobuf-compiler python python-pip libsecp256k1-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install setuptools \\\n && pip install request requests clint futures\n#  ############################## CUDA Installation ##############################\n#   taken from https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.0/base/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates apt-transport-https gnupg-curl -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 \\\n && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub \\\n && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub \\\n && echo \"$NVIDIA_GPGKEY_SUM cudasign.pub\" | sha256sum -c --strict - \\\n && rm cudasign.pub \\\n && echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list \\\n && echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDA_VERSION=\"10.0.130\"\nENV CUDA_PKG_VERSION=\"10-0=$CUDA_VERSION-1\"\n#   For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-compat-10-0=410.48-1 cuda-cudart-$CUDA_PKG_VERSION -y \\\n && ln -s cuda-10.0 /usr/local/cuda \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/usr/local/cuda/bin:${PATH}\"\n#   nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES=\"all\"\nENV NVIDIA_DRIVER_CAPABILITIES=\"compute,utility\"\nENV NVIDIA_REQUIRE_CUDA=\"\\\"cuda>=10.0 brand=tesla,driver>=384,driver<385\\\"\"\n#   taken from https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.0/runtime/Dockerfile\nENV NCCL_VERSION=\"2.3.7\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-libraries-$CUDA_PKG_VERSION cuda-nvtx-$CUDA_PKG_VERSION libnccl2=$NCCL_VERSION-1+cuda10.0 -y \\\n && apt-mark hold libnccl2 \\\n && rm -rf /var/lib/apt/lists/*\n#   taken from https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.0/devel/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends cuda-libraries-dev-$CUDA_PKG_VERSION cuda-nvml-dev-$CUDA_PKG_VERSION cuda-minimal-build-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION libnccl-dev=$NCCL_VERSION-1+cuda10.0 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs\"\n#  ###################### End of CUDA Installation ###############################\nARG ZILLIQA_VERSION=v4.6.1\nARG REPO=https://github.com/Zilliqa/Zilliqa.git\nARG SOURCE_DIR=/zilliqa\nARG BUILD_DIR=/build\nARG INSTALL_DIR=/usr/local\nARG BUILD_TYPE=RelWithDebInfo\nARG EXTRA_CMAKE_ARGS=\"-DCUDA_MINE=1\"\nRUN git clone -b ${ZILLIQA_VERSION} --depth 1 ${REPO} ${SOURCE_DIR} \\\n && cmake -H${SOURCE_DIR} -B${BUILD_DIR} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} ${EXTRA_CMAKE_ARGS} \\\n && cmake --build ${BUILD_DIR} -- -j$( nproc ;) \\\n && cmake --build ${BUILD_DIR} --target install \\\n && rm -rf ${BUILD_DIR}\nENV LD_LIBRARY_PATH=\"${INSTALL_DIR}/lib\"\nENTRYPOINT [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"00472c556ce68900bc58696233e1b104","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f5d51d669a40b37b0eb39b0437d6c2333220567b.dockerfile"}