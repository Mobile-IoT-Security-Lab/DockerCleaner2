{"seed":3934442934,"processedDockerfileHash":"6902e15df11b4b1b4b4c1b92f4b75da4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\n#   minimal docker file to get sp and sf running on ubunty 16.04 image,\n#   using gdal/geos/proj from ppa:ubuntugis/ubuntugis-unstable\nMAINTAINER \"edzerpebesma\" edzer.pebesma@uni-muenster.de\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.24.32.20 -y )\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable\nRUN echo \"deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/ \" >> /etc/apt/sources.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nRUN :\nRUN apt-get upgrade -y\nRUN export DEBIAN_FRONTEND=noninteractive ; apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends gdb=8.1.1-0ubuntu1 git=1:2.17.1-1ubuntu0.17 libcairo2-dev=1.15.10-2ubuntu0.1 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 libexpat1-dev=2.2.5-3ubuntu0.9 libpq-dev=10.23-0ubuntu0.18.04.1 libsqlite3-dev=3.22.0-1ubuntu0.7 libudunits2-dev=2.2.26-1 make=4.1-9.1ubuntu1 pandoc=1.19.2.4~dfsg-1build4 qpdf=8.0.2-3ubuntu0.1 r-base-dev=3.4.4-1ubuntu1 sqlite3=3.22.0-1ubuntu0.7 subversion=1.9.7-4ubuntu1.1 valgrind=1:3.13.0-2ubuntu2.3 vim=2:8.0.1453-1ubuntu1.11 wget=1.19.4-1ubuntu2.2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libv8-3.14-dev=3.14.5.8-11ubuntu1 libjq-dev=1.5+dfsg-2 libprotobuf-dev=3.0.0-9.1ubuntu1.1 libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 libprotobuf-dev=3.0.0-9.1ubuntu1.1 protobuf-compiler=3.0.0-9.1ubuntu1.1 unixodbc-dev=2.3.4-1.1ubuntu3 libssh2-1-dev=1.8.0-1 libgit2-dev=0.26.0+dfsg.1-1.1ubuntu0.2 libnetcdf-dev=1:4.6.0-2build1 locales=2.27-3ubuntu1.6 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 -y )\nRUN locale-gen en_US.UTF-8\nENV PROJ_VERSION=\"6.1.1RC1\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib:$LD_LIBRARY_PATH\"\nRUN wget http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n && tar zxf proj-*tar.gz \\\n && cd proj* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && ldconfig\n#   install proj-datumgrid:\nRUN cd /usr/local/share/proj \\\n && wget http://download.osgeo.org/proj/proj-datumgrid-latest.zip \\\n && unzip -o proj-datumgrid*zip \\\n && rm proj-datumgrid*zip \\\n && wget https://download.osgeo.org/proj/proj-datumgrid-europe-latest.zip \\\n && unzip -o proj-datumgrid*zip \\\n && rm proj-datumgrid*zip \\\n && cd -\n#   GDAL:\nENV GDAL_VERSION=\"3.0.0\"\nENV GDAL_VERSION_NAME=\"3.0.0\"\nRUN wget http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION_NAME}.tar.gz \\\n && tar -xf gdal-${GDAL_VERSION_NAME}.tar.gz \\\n && cd gdal* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && ldconfig\n#  RUN git clone --depth 1 https://github.com/OSGeo/gdal.git\n#  RUN cd gdal/gdal \\\n#    && ls -l \\\n#    && ./configure \\\n#    && make \\\n#    && make install \\\n#    && cd .. \\\n#    && ldconfig\n#   GEOS:\n#  ENV GEOS_VERSION 3.6.2\nENV GEOS_VERSION=\"3.7.2\"\n#\nRUN wget http://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 \\\n && bzip2 -d geos-*bz2 \\\n && tar xf geos*tar \\\n && cd geos* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && ldconfig\n#   RUN svn  checkout svn://scm.r-forge.r-project.org/svnroot/rgdal/\n#   RUN R CMD build rgdal/pkg --no-build-vignettes\n#   RUN R CMD INSTALL rgdal_*.tar.gz \nRUN Rscript -e 'install.packages(c(\"sp\", \"rgeos\", \"rgdal\", \"RPostgreSQL\", \"RSQLite\", \"testthat\", \"knitr\", \"tidyr\", \"geosphere\", \"maptools\", \"maps\", \"microbenchmark\", \"raster\", \"dplyr\", \"tibble\", \"units\", \"DBI\", \"covr\", \"protolite\", \"tmap\", \"mapview\", \"odbc\", \"pool\", \"rmarkdown\", \"RPostgres\",\"spatstat\", \"stars\"))'\nRUN git clone --depth 10 https://github.com/r-spatial/sf.git\nRUN git clone --depth 10 https://github.com/r-spatial/lwgeom.git\nRUN git clone --depth 10 https://github.com/r-spatial/stars.git\n#  RUN git config --global user.email \"edzer.pebesma@uni-muenster.de\"\nRUN R CMD build --no-build-vignettes --no-manual lwgeom\nRUN R CMD INSTALL lwgeom\nRUN R CMD build --no-build-vignettes --no-manual sf\nRUN R CMD INSTALL sf\nRUN R CMD build --no-build-vignettes --no-manual stars\nRUN R CMD INSTALL stars\n#   RUN rm ./usr/lib/x86_64-linux-gnu/libgeos*\n#  RUN svn  checkout svn://scm.r-forge.r-project.org/svnroot/rgdal/\n#   or:\n#   svn checkout svn+ssh://edzer@scm.r-forge.r-project.org/svnroot/rgdal/\n#  RUN R CMD build rgdal/pkg --no-build-vignettes\n#  RUN R CMD INSTALL rgdal_*.tar.gz \n#  RUN R CMD check --no-vignettes --no-manual rgdal_*.tar.gz \n#  RUN Rscript -e 'install.packages(c(\"stars\", \"tmap\"), repos = \"https://cloud.r-project.org\")'\nRUN Rscript -e 'install.packages(\"rgdal\", repos=\"http://R-Forge.R-project.org\")'\n#   after rgdal:\nRUN Rscript -e 'install.packages(c(\"tmaptools\", \"tmap\"))'\nRUN R CMD check --no-build-vignettes --no-manual --as-cran sf_*.tar.gz\nRUN R CMD check --no-build-vignettes --no-manual --as-cran lwgeom_*.tar.gz\nRUN Rscript -e 'install.packages(\"starsdata\", repos=\"http://gis-bigdata.uni-muenster.de/pebesma/\")'\nRUN Rscript -e 'install.packages(c(\"PCICt\", \"RNetCDF\", \"future.apply\", \"ggforce\", \"ggthemes\", \"gstat\", \"ncmeta\", \"pbapply\", \"plm\", \"spacetime\", \"xts\", \"zoo\"))'\nRUN (cd stars ;git pull )\nRUN R CMD build --no-build-vignettes --no-manual stars\nRUN R CMD check --no-build-vignettes --no-manual --as-cran stars_*.tar.gz\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\n#  minimal docker file to get sp and sf running on ubunty 16.04 image,\n#  using gdal/geos/proj from ppa:ubuntugis/ubuntugis-unstable\nMAINTAINER \"edzerpebesma\" edzer.pebesma@uni-muenster.de\nRUN apt-get update \\\n && apt-get install software-properties-common -y\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable\nRUN echo \"deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/ \" >> /etc/apt/sources.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN export DEBIAN_FRONTEND=noninteractive ; apt-get update -y \\\n && apt-get install gdb git libcairo2-dev libcurl4-openssl-dev libexpat1-dev libpq-dev libsqlite3-dev libudunits2-dev make pandoc qpdf r-base-dev sqlite3 subversion valgrind vim wget -y\nRUN apt-get install libv8-3.14-dev libjq-dev libprotobuf-dev libxml2-dev libprotobuf-dev protobuf-compiler unixodbc-dev libssh2-1-dev libgit2-dev libnetcdf-dev locales libssl-dev -y\nRUN locale-gen en_US.UTF-8\nENV PROJ_VERSION=\"6.1.1RC1\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib:$LD_LIBRARY_PATH\"\nRUN wget http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n && tar zxf proj-*tar.gz \\\n && cd proj* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && ldconfig\n#  install proj-datumgrid:\nRUN cd /usr/local/share/proj \\\n && wget http://download.osgeo.org/proj/proj-datumgrid-latest.zip \\\n && unzip -o proj-datumgrid*zip \\\n && rm proj-datumgrid*zip \\\n && wget https://download.osgeo.org/proj/proj-datumgrid-europe-latest.zip \\\n && unzip -o proj-datumgrid*zip \\\n && rm proj-datumgrid*zip \\\n && cd -\n#  GDAL:\nENV GDAL_VERSION=\"3.0.0\"\nENV GDAL_VERSION_NAME=\"3.0.0\"\nRUN wget http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION_NAME}.tar.gz \\\n && tar -xf gdal-${GDAL_VERSION_NAME}.tar.gz \\\n && cd gdal* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && ldconfig\n# RUN git clone --depth 1 https://github.com/OSGeo/gdal.git\n# RUN cd gdal/gdal \\\n#   && ls -l \\\n#   && ./configure \\\n#   && make \\\n#   && make install \\\n#   && cd .. \\\n#   && ldconfig\n#  GEOS:\n# ENV GEOS_VERSION 3.6.2\nENV GEOS_VERSION=\"3.7.2\"\n#\nRUN wget http://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 \\\n && bzip2 -d geos-*bz2 \\\n && tar xf geos*tar \\\n && cd geos* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && ldconfig\n#  RUN svn  checkout svn://scm.r-forge.r-project.org/svnroot/rgdal/\n#  RUN R CMD build rgdal/pkg --no-build-vignettes\n#  RUN R CMD INSTALL rgdal_*.tar.gz \nRUN Rscript -e 'install.packages(c(\"sp\", \"rgeos\", \"rgdal\", \"RPostgreSQL\", \"RSQLite\", \"testthat\", \"knitr\", \"tidyr\", \"geosphere\", \"maptools\", \"maps\", \"microbenchmark\", \"raster\", \"dplyr\", \"tibble\", \"units\", \"DBI\", \"covr\", \"protolite\", \"tmap\", \"mapview\", \"odbc\", \"pool\", \"rmarkdown\", \"RPostgres\",\"spatstat\", \"stars\"))'\nRUN git clone --depth 10 https://github.com/r-spatial/sf.git\nRUN git clone --depth 10 https://github.com/r-spatial/lwgeom.git\nRUN git clone --depth 10 https://github.com/r-spatial/stars.git\n# RUN git config --global user.email \"edzer.pebesma@uni-muenster.de\"\nRUN R CMD build --no-build-vignettes --no-manual lwgeom\nRUN R CMD INSTALL lwgeom\nRUN R CMD build --no-build-vignettes --no-manual sf\nRUN R CMD INSTALL sf\nRUN R CMD build --no-build-vignettes --no-manual stars\nRUN R CMD INSTALL stars\n#  RUN rm ./usr/lib/x86_64-linux-gnu/libgeos*\n# RUN svn  checkout svn://scm.r-forge.r-project.org/svnroot/rgdal/\n#  or:\n#  svn checkout svn+ssh://edzer@scm.r-forge.r-project.org/svnroot/rgdal/\n# RUN R CMD build rgdal/pkg --no-build-vignettes\n# RUN R CMD INSTALL rgdal_*.tar.gz \n# RUN R CMD check --no-vignettes --no-manual rgdal_*.tar.gz \n# RUN Rscript -e 'install.packages(c(\"stars\", \"tmap\"), repos = \"https://cloud.r-project.org\")'\nRUN Rscript -e 'install.packages(\"rgdal\", repos=\"http://R-Forge.R-project.org\")'\n#  after rgdal:\nRUN Rscript -e 'install.packages(c(\"tmaptools\", \"tmap\"))'\nRUN R CMD check --no-build-vignettes --no-manual --as-cran sf_*.tar.gz\nRUN R CMD check --no-build-vignettes --no-manual --as-cran lwgeom_*.tar.gz\nRUN Rscript -e 'install.packages(\"starsdata\", repos=\"http://gis-bigdata.uni-muenster.de/pebesma/\")'\nRUN Rscript -e 'install.packages(c(\"PCICt\", \"RNetCDF\", \"future.apply\", \"ggforce\", \"ggthemes\", \"gstat\", \"ncmeta\", \"pbapply\", \"plm\", \"spacetime\", \"xts\", \"zoo\"))'\nRUN (cd stars ;git pull )\nRUN R CMD build --no-build-vignettes --no-manual stars\nRUN R CMD check --no-build-vignettes --no-manual --as-cran stars_*.tar.gz\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"64768d83af7194ca8c0146c7ea82d5b6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\n#   minimal docker file to get sp and sf running on ubunty 16.04 image,\n#   using gdal/geos/proj from ppa:ubuntugis/ubuntugis-unstable\nMAINTAINER \"edzerpebesma\" edzer.pebesma@uni-muenster.de\nRUN apt-get update \\\n && apt-get install software-properties-common -y\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable\nRUN echo \"deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/ \" >> /etc/apt/sources.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN export DEBIAN_FRONTEND=noninteractive ; apt-get update -y \\\n && apt-get install gdb git libcairo2-dev libcurl4-openssl-dev libexpat1-dev libpq-dev libsqlite3-dev libudunits2-dev make pandoc qpdf r-base-dev sqlite3 subversion valgrind vim wget -y\nRUN apt-get install libv8-3.14-dev libjq-dev libprotobuf-dev libxml2-dev libprotobuf-dev protobuf-compiler unixodbc-dev libssh2-1-dev libgit2-dev libnetcdf-dev locales libssl-dev -y\nRUN locale-gen en_US.UTF-8\nENV PROJ_VERSION=\"6.1.1RC1\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib:$LD_LIBRARY_PATH\"\nRUN wget http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n && tar zxf proj-*tar.gz \\\n && cd proj* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && ldconfig\n#   install proj-datumgrid:\nRUN cd /usr/local/share/proj \\\n && wget http://download.osgeo.org/proj/proj-datumgrid-latest.zip \\\n && unzip -o proj-datumgrid*zip \\\n && rm proj-datumgrid*zip \\\n && wget https://download.osgeo.org/proj/proj-datumgrid-europe-latest.zip \\\n && unzip -o proj-datumgrid*zip \\\n && rm proj-datumgrid*zip \\\n && cd -\n#   GDAL:\nENV GDAL_VERSION=\"3.0.0\"\nENV GDAL_VERSION_NAME=\"3.0.0\"\nRUN wget http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION_NAME}.tar.gz \\\n && tar -xf gdal-${GDAL_VERSION_NAME}.tar.gz \\\n && cd gdal* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && ldconfig\n#  RUN git clone --depth 1 https://github.com/OSGeo/gdal.git\n#  RUN cd gdal/gdal \\\n#    && ls -l \\\n#    && ./configure \\\n#    && make \\\n#    && make install \\\n#    && cd .. \\\n#    && ldconfig\n#   GEOS:\n#  ENV GEOS_VERSION 3.6.2\nENV GEOS_VERSION=\"3.7.2\"\n#\nRUN wget http://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 \\\n && bzip2 -d geos-*bz2 \\\n && tar xf geos*tar \\\n && cd geos* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && ldconfig\n#   RUN svn  checkout svn://scm.r-forge.r-project.org/svnroot/rgdal/\n#   RUN R CMD build rgdal/pkg --no-build-vignettes\n#   RUN R CMD INSTALL rgdal_*.tar.gz \nRUN Rscript -e 'install.packages(c(\"sp\", \"rgeos\", \"rgdal\", \"RPostgreSQL\", \"RSQLite\", \"testthat\", \"knitr\", \"tidyr\", \"geosphere\", \"maptools\", \"maps\", \"microbenchmark\", \"raster\", \"dplyr\", \"tibble\", \"units\", \"DBI\", \"covr\", \"protolite\", \"tmap\", \"mapview\", \"odbc\", \"pool\", \"rmarkdown\", \"RPostgres\",\"spatstat\", \"stars\"))'\nRUN git clone --depth 10 https://github.com/r-spatial/sf.git\nRUN git clone --depth 10 https://github.com/r-spatial/lwgeom.git\nRUN git clone --depth 10 https://github.com/r-spatial/stars.git\n#  RUN git config --global user.email \"edzer.pebesma@uni-muenster.de\"\nRUN R CMD build --no-build-vignettes --no-manual lwgeom\nRUN R CMD INSTALL lwgeom\nRUN R CMD build --no-build-vignettes --no-manual sf\nRUN R CMD INSTALL sf\nRUN R CMD build --no-build-vignettes --no-manual stars\nRUN R CMD INSTALL stars\n#   RUN rm ./usr/lib/x86_64-linux-gnu/libgeos*\n#  RUN svn  checkout svn://scm.r-forge.r-project.org/svnroot/rgdal/\n#   or:\n#   svn checkout svn+ssh://edzer@scm.r-forge.r-project.org/svnroot/rgdal/\n#  RUN R CMD build rgdal/pkg --no-build-vignettes\n#  RUN R CMD INSTALL rgdal_*.tar.gz \n#  RUN R CMD check --no-vignettes --no-manual rgdal_*.tar.gz \n#  RUN Rscript -e 'install.packages(c(\"stars\", \"tmap\"), repos = \"https://cloud.r-project.org\")'\nRUN Rscript -e 'install.packages(\"rgdal\", repos=\"http://R-Forge.R-project.org\")'\n#   after rgdal:\nRUN Rscript -e 'install.packages(c(\"tmaptools\", \"tmap\"))'\nRUN R CMD check --no-build-vignettes --no-manual --as-cran sf_*.tar.gz\nRUN R CMD check --no-build-vignettes --no-manual --as-cran lwgeom_*.tar.gz\nRUN Rscript -e 'install.packages(\"starsdata\", repos=\"http://gis-bigdata.uni-muenster.de/pebesma/\")'\nRUN Rscript -e 'install.packages(c(\"PCICt\", \"RNetCDF\", \"future.apply\", \"ggforce\", \"ggthemes\", \"gstat\", \"ncmeta\", \"pbapply\", \"plm\", \"spacetime\", \"xts\", \"zoo\"))'\nRUN (cd stars ;git pull )\nRUN R CMD build --no-build-vignettes --no-manual stars\nRUN R CMD check --no-build-vignettes --no-manual --as-cran stars_*.tar.gz\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"7e149caf3cf0674b2500e9defd0e7c3a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e92c7053fd08d6add1acf11ad14fac7189f10c5c.dockerfile"}