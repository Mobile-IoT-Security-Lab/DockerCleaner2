{"seed":3490376803,"processedDockerfileHash":"4f5033b8dc49e49b9b8e9776b25bef53","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER Howard Butler <howard@hobu.co>\nENV CC=\"gcc\"\nENV CXX=\"g++\"\nRUN apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends gnupg2=2.2.4-1ubuntu1.6 -y )\nRUN apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 16126D3A3E5C1192\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends build-essential ca-certificates cmake curl gfortran git libarmadillo-dev libarpack2-dev libflann-dev libhdf5-serial-dev libhdf5-dev libhdf5-cpp-100 liblapack-dev libtiff5-dev libgeotiff-epsg openssh-client python-dev python-numpy software-properties-common wget automake libtool libspatialite-dev libsqlite3-mod-spatialite subversion libboost-filesystem1.65-dev libboost-iostreams1.65-dev libboost-program-options1.65-dev libboost-system1.65-dev libboost-thread1.65-dev subversion clang clang-6.0 libproj-dev libc6-dev libnetcdf-dev libopenjp2-7-dev libpng-dev libjpeg-dev libgif-dev libwebp-dev libhdf4-alt-dev libhdf5-dev libpq-dev libxerces-c-dev unixodbc-dev libsqlite3-dev libmysqlclient-dev libltdl-dev libcurl4-openssl-dev libspatialite-dev libdap-dev cython python-pip libpcl-dev time libhpdf-dev python-setuptools libhpdf-dev unzip libopenscenegraph-dev libzstd-dev liblzma-dev libgdal-dev libeigen3-dev proj-data ninja-build \\\n && rm -rf /var/lib/apt/lists/*\nRUN git clone https://github.com/hobu/nitro \\\n && cd nitro \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr .. \\\n && make \\\n && make install \\\n && rm -rf /nitro\nRUN git clone https://github.com/LASzip/LASzip.git laszip \\\n && cd laszip \\\n && git checkout 3.1.1 \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" . \\\n && make \\\n && make install \\\n && rm -rf /laszip\nRUN git clone https://github.com/hobu/hexer.git \\\n && cd hexer \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" .. \\\n && make \\\n && make install \\\n && rm -rf /hexer\nRUN git clone https://github.com/hobu/laz-perf.git \\\n && cd laz-perf \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" .. \\\n && make \\\n && make install \\\n && rm -rf /laz-perf\nRUN git clone --depth 1 --branch v0.4.6 https://github.com/gadomski/fgt.git \\\n && cd fgt \\\n && cmake . -DWITH_TESTS=OFF -DBUILD_SHARED_LIBS=ON -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \\\n && make \\\n && make install \\\n && rm -rf /fgt\nRUN git clone --depth 1 --branch v0.5.1 https://github.com/gadomski/cpd.git \\\n && cd cpd \\\n && cmake . -DWITH_TESTS=OFF -DWITH_FGT=ON -DWITH_STRICT_WARNINGS=OFF -DWITH_DOCS=OFF -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \\\n && make \\\n && make install \\\n && rm -rf /cpd\n#   Install Java.\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends oracle-java8-installer -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk8-installer\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\n#   fixup for PCL 1.7\nRUN ln -s /usr/lib/x86_64-linux-gnu/libvtkCommonCore-6.3.so /usr/lib/libvtkproj4.so\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER Howard Butler <howard@hobu.co>\nENV CC=\"gcc\"\nENV CXX=\"g++\"\nRUN apt-get update -qq \\\n && apt-get install gnupg2 -y\nRUN apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 16126D3A3E5C1192\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends build-essential ca-certificates cmake curl gfortran git libarmadillo-dev libarpack2-dev libflann-dev libhdf5-serial-dev libhdf5-dev libhdf5-cpp-100 liblapack-dev libtiff5-dev libgeotiff-epsg openssh-client python-dev python-numpy software-properties-common wget automake libtool libspatialite-dev libsqlite3-mod-spatialite subversion libboost-filesystem1.65-dev libboost-iostreams1.65-dev libboost-program-options1.65-dev libboost-system1.65-dev libboost-thread1.65-dev subversion clang clang-6.0 libproj-dev libc6-dev libnetcdf-dev libopenjp2-7-dev libpng-dev libjpeg-dev libgif-dev libwebp-dev libhdf4-alt-dev libhdf5-dev libpq-dev libxerces-c-dev unixodbc-dev libsqlite3-dev libmysqlclient-dev libltdl-dev libcurl4-openssl-dev libspatialite-dev libdap-dev cython python-pip libpcl-dev time libhpdf-dev python-setuptools libhpdf-dev unzip libopenscenegraph-dev libzstd-dev liblzma-dev libgdal-dev libeigen3-dev proj-data ninja-build \\\n && rm -rf /var/lib/apt/lists/*\nRUN git clone https://github.com/hobu/nitro \\\n && cd nitro \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr .. \\\n && make \\\n && make install \\\n && rm -rf /nitro\nRUN git clone https://github.com/LASzip/LASzip.git laszip \\\n && cd laszip \\\n && git checkout 3.1.1 \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" . \\\n && make \\\n && make install \\\n && rm -rf /laszip\nRUN git clone https://github.com/hobu/hexer.git \\\n && cd hexer \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" .. \\\n && make \\\n && make install \\\n && rm -rf /hexer\nRUN git clone https://github.com/hobu/laz-perf.git \\\n && cd laz-perf \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" .. \\\n && make \\\n && make install \\\n && rm -rf /laz-perf\nRUN git clone --depth 1 --branch v0.4.6 https://github.com/gadomski/fgt.git \\\n && cd fgt \\\n && cmake . -DWITH_TESTS=OFF -DBUILD_SHARED_LIBS=ON -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \\\n && make \\\n && make install \\\n && rm -rf /fgt\nRUN git clone --depth 1 --branch v0.5.1 https://github.com/gadomski/cpd.git \\\n && cd cpd \\\n && cmake . -DWITH_TESTS=OFF -DWITH_FGT=ON -DWITH_STRICT_WARNINGS=OFF -DWITH_DOCS=OFF -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \\\n && make \\\n && make install \\\n && rm -rf /cpd\n#  Install Java.\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java8-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk8-installer\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\n#  fixup for PCL 1.7\nRUN ln -s /usr/lib/x86_64-linux-gnu/libvtkCommonCore-6.3.so /usr/lib/libvtkproj4.so\n","injectedSmells":[],"originalDockerfileHash":"1ce06e08efa824952a39e573d00aec63","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER Howard Butler <howard@hobu.co>\nENV CC=\"gcc\"\nENV CXX=\"g++\"\nRUN apt-get update -qq \\\n && apt-get install gnupg2 -y\nRUN apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 16126D3A3E5C1192\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends build-essential ca-certificates cmake curl gfortran git libarmadillo-dev libarpack2-dev libflann-dev libhdf5-serial-dev libhdf5-dev libhdf5-cpp-100 liblapack-dev libtiff5-dev libgeotiff-epsg openssh-client python-dev python-numpy software-properties-common wget automake libtool libspatialite-dev libsqlite3-mod-spatialite subversion libboost-filesystem1.65-dev libboost-iostreams1.65-dev libboost-program-options1.65-dev libboost-system1.65-dev libboost-thread1.65-dev subversion clang clang-6.0 libproj-dev libc6-dev libnetcdf-dev libopenjp2-7-dev libpng-dev libjpeg-dev libgif-dev libwebp-dev libhdf4-alt-dev libhdf5-dev libpq-dev libxerces-c-dev unixodbc-dev libsqlite3-dev libmysqlclient-dev libltdl-dev libcurl4-openssl-dev libspatialite-dev libdap-dev cython python-pip libpcl-dev time libhpdf-dev python-setuptools libhpdf-dev unzip libopenscenegraph-dev libzstd-dev liblzma-dev libgdal-dev libeigen3-dev proj-data ninja-build \\\n && rm -rf /var/lib/apt/lists/*\nRUN git clone https://github.com/hobu/nitro \\\n && cd nitro \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr .. \\\n && make \\\n && make install \\\n && rm -rf /nitro\nRUN git clone https://github.com/LASzip/LASzip.git laszip \\\n && cd laszip \\\n && git checkout 3.1.1 \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" . \\\n && make \\\n && make install \\\n && rm -rf /laszip\nRUN git clone https://github.com/hobu/hexer.git \\\n && cd hexer \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" .. \\\n && make \\\n && make install \\\n && rm -rf /hexer\nRUN git clone https://github.com/hobu/laz-perf.git \\\n && cd laz-perf \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" .. \\\n && make \\\n && make install \\\n && rm -rf /laz-perf\nRUN git clone --depth 1 --branch v0.4.6 https://github.com/gadomski/fgt.git \\\n && cd fgt \\\n && cmake . -DWITH_TESTS=OFF -DBUILD_SHARED_LIBS=ON -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \\\n && make \\\n && make install \\\n && rm -rf /fgt\nRUN git clone --depth 1 --branch v0.5.1 https://github.com/gadomski/cpd.git \\\n && cd cpd \\\n && cmake . -DWITH_TESTS=OFF -DWITH_FGT=ON -DWITH_STRICT_WARNINGS=OFF -DWITH_DOCS=OFF -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \\\n && make \\\n && make install \\\n && rm -rf /cpd\n#   Install Java.\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java8-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk8-installer\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\n#   fixup for PCL 1.7\nRUN ln -s /usr/lib/x86_64-linux-gnu/libvtkCommonCore-6.3.so /usr/lib/libvtkproj4.so\n","originalDockerfileUglifiedHash":"42415470e07f7772392f1946ecfffa9a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/10e681e20b58953e316fdfc279838b9d369d76fc.dockerfile"}