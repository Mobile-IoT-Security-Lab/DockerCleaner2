{"seed":2001289832,"processedDockerfileHash":"8de96c528b0848a18c1a3d3e70f391a1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM fedora:29\nARG EXPOSE_PORT=8080\nEXPOSE ${EXPOSE_PORT}\nENV JOLOKIA_VERSION=\"1.6.0\" \\\n    PROMETHEUS_JMX_EXPORTER_VERSION=\"0.3.1\" \\\n    PATH=\"$PATH:/usr/local/s2i\" \\\n    AB_JOLOKIA_PASSWORD_RANDOM=\"true\" \\\n    AB_JOLOKIA_AUTH_OPENSHIFT=\"true\" \\\n    JAVA_MAJOR_VERSION=\"11\" \\\n    JAVA_DATA_DIR=\"/deployments/data\"\n#   Some version information\nLABEL io.fabric8.s2i.version.maven=\"3.6.1\" \\\n      io.fabric8.s2i.version.jolokia=\"1.6.0\" \\\n      io.fabric8.s2i.version.prometheus.jmx_exporter=\"0.3.1\" \\\n      io.k8s.description=\"Platform for building and running plain Java applications (fat-jar and flat classpath)\" \\\n      io.k8s.display-name=\"Java Applications\" \\\n      io.openshift.tags=\"builder,java\" \\\n      io.openshift.s2i.scripts-url=\"image:///usr/local/s2i\" \\\n      io.openshift.s2i.destination=\"/tmp\" \\\n      org.jboss.deployments-dir=\"/deployments\" \\\n      com.redhat.deployments-dir=\"/deployments\" \\\n      com.redhat.dev-mode=\"JAVA_DEBUG:false\" \\\n      com.redhat.dev-mode.port=\"JAVA_DEBUG_PORT:5005\"\n#   Temporary switch to root\nUSER root\n#   Install Java package & download Maven from Apache\nRUN yum -y update \\\n && yum install -y --setopt=skip_missing_names_on_install=False unzip rsync java-11-openjdk java-11-openjdk-devel \\\n && yum clean all \\\n && curl https://archive.apache.org/dist/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz | tar -xzf - -C /opt \\\n && ln -s /opt/apache-maven-3.6.1 /opt/maven \\\n && ln -s /opt/maven/bin/mvn /usr/bin/mvn \\\n && groupadd -r jboss -g 1000 \\\n && useradd -u 1000 -r -g jboss -m -d /opt/jboss -s /sbin/nologin -c \"JBoss user\" jboss \\\n && chmod 755 /opt/jboss\nENV JAVA_HOME=\"/etc/alternatives/jre\"\n#   Use /dev/urandom to speed up startups & Add jboss user to the root group\nRUN echo securerandom.source=file:/dev/urandom >> /usr/lib/jvm/java/conf/security/java.security \\\n && usermod -g root -G jboss jboss\n#   Prometheus JMX exporter agent\nRUN mkdir -p /opt/prometheus/etc \\\n && curl http://central.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar -o /opt/prometheus/jmx_prometheus_javaagent.jar\nCOPY prometheus-opts /opt/prometheus/prometheus-opts\nCOPY prometheus-config.yml /opt/prometheus/prometheus-config.yml\nRUN chmod 444 /opt/prometheus/jmx_prometheus_javaagent.jar \\\n && chmod 444 /opt/prometheus/prometheus-config.yml \\\n && chmod 755 /opt/prometheus/prometheus-opts \\\n && chmod 775 /opt/prometheus/etc \\\n && chgrp root /opt/prometheus/etc\nEXPOSE 9779/tcp\n#   Jolokia agent\nRUN mkdir -p /opt/jolokia/etc \\\n && curl http://central.maven.org/maven2/org/jolokia/jolokia-jvm/1.6.0/jolokia-jvm-1.6.0-agent.jar -o /opt/jolokia/jolokia.jar\nCOPY jolokia-opts /opt/jolokia/jolokia-opts\nRUN chmod 444 /opt/jolokia/jolokia.jar \\\n && chmod 755 /opt/jolokia/jolokia-opts \\\n && chmod 775 /opt/jolokia/etc \\\n && chgrp root /opt/jolokia/etc\nEXPOSE 8778/tcp\n#   S2I scripts + README\nCOPY s2i /usr/local/s2i\nRUN chmod 755 /usr/local/s2i/*\nCOPY README.md /usr/local/s2i/usage.txt\n#   Add run script as /opt/run-java/run-java.sh and make it executable\nCOPY run-java.sh /opt/run-java/\nRUN chmod 755 /opt/run-java/run-java.sh\n#   Adding run-env.sh to set app dir\nCOPY run-env.sh /opt/run-java/run-env.sh\nRUN chmod 755 /opt/run-java/run-env.sh\n#   Copy licenses\nRUN mkdir -p /opt/fuse/licenses\nCOPY licenses.css /opt/fuse/licenses\nCOPY licenses.xml /opt/fuse/licenses\nCOPY licenses.html /opt/fuse/licenses\nCOPY apache_software_license_version_2.0-apache-2.0.txt /opt/fuse/licenses\n#   Necessary to permit running with a randomised UID\nRUN mkdir -p /deployments/data \\\n && chmod -R \"g+rwX\" /deployments \\\n && chown -R jboss:root /deployments \\\n && chmod -R \"g+rwX\" /opt/jboss \\\n && chown -R jboss:root /opt/jboss \\\n && chmod 664 /etc/passwd\n#   S2I scripts rely on /opt/jboss as working directory\nWORKDIR /opt/jboss\n#   S2I requires a numeric, non-0 UID. This is the UID for the jboss user in the base image\nUSER 1000\nRUN mkdir -p /opt/jboss/.m2\nCOPY settings.xml /opt/jboss/.m2/settings.xml\n#   Use the run script as default since we are working as an hybrid image which can be\n#   used directly to. (If we were a plain s2i image we would print the usage info here)\nCMD [\"/usr/local/s2i/run\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM fedora:29\nARG EXPOSE_PORT=8080\nEXPOSE ${EXPOSE_PORT}\nENV JOLOKIA_VERSION=\"1.6.0\" \\\n    PROMETHEUS_JMX_EXPORTER_VERSION=\"0.3.1\" \\\n    PATH=\"$PATH:/usr/local/s2i\" \\\n    AB_JOLOKIA_PASSWORD_RANDOM=\"true\" \\\n    AB_JOLOKIA_AUTH_OPENSHIFT=\"true\" \\\n    JAVA_MAJOR_VERSION=\"11\" \\\n    JAVA_DATA_DIR=\"/deployments/data\"\n#  Some version information\nLABEL io.fabric8.s2i.version.maven=\"3.6.1\" \\\n      io.fabric8.s2i.version.jolokia=\"1.6.0\" \\\n      io.fabric8.s2i.version.prometheus.jmx_exporter=\"0.3.1\" \\\n      io.k8s.description=\"Platform for building and running plain Java applications (fat-jar and flat classpath)\" \\\n      io.k8s.display-name=\"Java Applications\" \\\n      io.openshift.tags=\"builder,java\" \\\n      io.openshift.s2i.scripts-url=\"image:///usr/local/s2i\" \\\n      io.openshift.s2i.destination=\"/tmp\" \\\n      org.jboss.deployments-dir=\"/deployments\" \\\n      com.redhat.deployments-dir=\"/deployments\" \\\n      com.redhat.dev-mode=\"JAVA_DEBUG:false\" \\\n      com.redhat.dev-mode.port=\"JAVA_DEBUG_PORT:5005\"\n#  Temporary switch to root\nUSER root\n#  Install Java package & download Maven from Apache\nRUN yum -y update \\\n && yum install -y --setopt=skip_missing_names_on_install=False unzip rsync java-11-openjdk java-11-openjdk-devel \\\n && yum clean all \\\n && curl https://archive.apache.org/dist/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz | tar -xzf - -C /opt \\\n && ln -s /opt/apache-maven-3.6.1 /opt/maven \\\n && ln -s /opt/maven/bin/mvn /usr/bin/mvn \\\n && groupadd -r jboss -g 1000 \\\n && useradd -u 1000 -r -g jboss -m -d /opt/jboss -s /sbin/nologin -c \"JBoss user\" jboss \\\n && chmod 755 /opt/jboss\nENV JAVA_HOME=\"/etc/alternatives/jre\"\n#  Use /dev/urandom to speed up startups & Add jboss user to the root group\nRUN echo securerandom.source=file:/dev/urandom >> /usr/lib/jvm/java/conf/security/java.security \\\n && usermod -g root -G jboss jboss\n#  Prometheus JMX exporter agent\nRUN mkdir -p /opt/prometheus/etc \\\n && curl http://central.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar -o /opt/prometheus/jmx_prometheus_javaagent.jar\nADD prometheus-opts /opt/prometheus/prometheus-opts\nADD prometheus-config.yml /opt/prometheus/prometheus-config.yml\nRUN chmod 444 /opt/prometheus/jmx_prometheus_javaagent.jar \\\n && chmod 444 /opt/prometheus/prometheus-config.yml \\\n && chmod 755 /opt/prometheus/prometheus-opts \\\n && chmod 775 /opt/prometheus/etc \\\n && chgrp root /opt/prometheus/etc\nEXPOSE 9779/tcp\n#  Jolokia agent\nRUN mkdir -p /opt/jolokia/etc \\\n && curl http://central.maven.org/maven2/org/jolokia/jolokia-jvm/1.6.0/jolokia-jvm-1.6.0-agent.jar -o /opt/jolokia/jolokia.jar\nADD jolokia-opts /opt/jolokia/jolokia-opts\nRUN chmod 444 /opt/jolokia/jolokia.jar \\\n && chmod 755 /opt/jolokia/jolokia-opts \\\n && chmod 775 /opt/jolokia/etc \\\n && chgrp root /opt/jolokia/etc\nEXPOSE 8778/tcp\n#  S2I scripts + README\nCOPY s2i /usr/local/s2i\nRUN chmod 755 /usr/local/s2i/*\nADD README.md /usr/local/s2i/usage.txt\n#  Add run script as /opt/run-java/run-java.sh and make it executable\nCOPY run-java.sh /opt/run-java/\nRUN chmod 755 /opt/run-java/run-java.sh\n#  Adding run-env.sh to set app dir\nCOPY run-env.sh /opt/run-java/run-env.sh\nRUN chmod 755 /opt/run-java/run-env.sh\n#  Copy licenses\nRUN mkdir -p /opt/fuse/licenses\nCOPY licenses.css /opt/fuse/licenses\nCOPY licenses.xml /opt/fuse/licenses\nCOPY licenses.html /opt/fuse/licenses\nCOPY apache_software_license_version_2.0-apache-2.0.txt /opt/fuse/licenses\n#  Necessary to permit running with a randomised UID\nRUN mkdir -p /deployments/data \\\n && chmod -R \"g+rwX\" /deployments \\\n && chown -R jboss:root /deployments \\\n && chmod -R \"g+rwX\" /opt/jboss \\\n && chown -R jboss:root /opt/jboss \\\n && chmod 664 /etc/passwd\n#  S2I scripts rely on /opt/jboss as working directory\nWORKDIR /opt/jboss\n#  S2I requires a numeric, non-0 UID. This is the UID for the jboss user in the base image\nUSER 1000\nRUN mkdir -p /opt/jboss/.m2\nCOPY settings.xml /opt/jboss/.m2/settings.xml\n#  Use the run script as default since we are working as an hybrid image which can be\n#  used directly to. (If we were a plain s2i image we would print the usage info here)\nCMD [\"/usr/local/s2i/run\"]\n","injectedSmells":[],"originalDockerfileHash":"6a0af5cf9a19beef6bd723f777494268","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM fedora:29\nARG EXPOSE_PORT=8080\nEXPOSE ${EXPOSE_PORT}\nENV JOLOKIA_VERSION=\"1.6.0\" \\\n    PROMETHEUS_JMX_EXPORTER_VERSION=\"0.3.1\" \\\n    PATH=\"$PATH:/usr/local/s2i\" \\\n    AB_JOLOKIA_PASSWORD_RANDOM=\"true\" \\\n    AB_JOLOKIA_AUTH_OPENSHIFT=\"true\" \\\n    JAVA_MAJOR_VERSION=\"11\" \\\n    JAVA_DATA_DIR=\"/deployments/data\"\n#   Some version information\nLABEL io.fabric8.s2i.version.maven=\"3.6.1\" \\\n      io.fabric8.s2i.version.jolokia=\"1.6.0\" \\\n      io.fabric8.s2i.version.prometheus.jmx_exporter=\"0.3.1\" \\\n      io.k8s.description=\"Platform for building and running plain Java applications (fat-jar and flat classpath)\" \\\n      io.k8s.display-name=\"Java Applications\" \\\n      io.openshift.tags=\"builder,java\" \\\n      io.openshift.s2i.scripts-url=\"image:///usr/local/s2i\" \\\n      io.openshift.s2i.destination=\"/tmp\" \\\n      org.jboss.deployments-dir=\"/deployments\" \\\n      com.redhat.deployments-dir=\"/deployments\" \\\n      com.redhat.dev-mode=\"JAVA_DEBUG:false\" \\\n      com.redhat.dev-mode.port=\"JAVA_DEBUG_PORT:5005\"\n#   Temporary switch to root\nUSER root\n#   Install Java package & download Maven from Apache\nRUN yum -y update \\\n && yum install -y --setopt=skip_missing_names_on_install=False unzip rsync java-11-openjdk java-11-openjdk-devel \\\n && yum clean all \\\n && curl https://archive.apache.org/dist/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz | tar -xzf - -C /opt \\\n && ln -s /opt/apache-maven-3.6.1 /opt/maven \\\n && ln -s /opt/maven/bin/mvn /usr/bin/mvn \\\n && groupadd -r jboss -g 1000 \\\n && useradd -u 1000 -r -g jboss -m -d /opt/jboss -s /sbin/nologin -c \"JBoss user\" jboss \\\n && chmod 755 /opt/jboss\nENV JAVA_HOME=\"/etc/alternatives/jre\"\n#   Use /dev/urandom to speed up startups & Add jboss user to the root group\nRUN echo securerandom.source=file:/dev/urandom >> /usr/lib/jvm/java/conf/security/java.security \\\n && usermod -g root -G jboss jboss\n#   Prometheus JMX exporter agent\nRUN mkdir -p /opt/prometheus/etc \\\n && curl http://central.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar -o /opt/prometheus/jmx_prometheus_javaagent.jar\nADD prometheus-opts /opt/prometheus/prometheus-opts\nADD prometheus-config.yml /opt/prometheus/prometheus-config.yml\nRUN chmod 444 /opt/prometheus/jmx_prometheus_javaagent.jar \\\n && chmod 444 /opt/prometheus/prometheus-config.yml \\\n && chmod 755 /opt/prometheus/prometheus-opts \\\n && chmod 775 /opt/prometheus/etc \\\n && chgrp root /opt/prometheus/etc\nEXPOSE 9779/tcp\n#   Jolokia agent\nRUN mkdir -p /opt/jolokia/etc \\\n && curl http://central.maven.org/maven2/org/jolokia/jolokia-jvm/1.6.0/jolokia-jvm-1.6.0-agent.jar -o /opt/jolokia/jolokia.jar\nADD jolokia-opts /opt/jolokia/jolokia-opts\nRUN chmod 444 /opt/jolokia/jolokia.jar \\\n && chmod 755 /opt/jolokia/jolokia-opts \\\n && chmod 775 /opt/jolokia/etc \\\n && chgrp root /opt/jolokia/etc\nEXPOSE 8778/tcp\n#   S2I scripts + README\nCOPY s2i /usr/local/s2i\nRUN chmod 755 /usr/local/s2i/*\nADD README.md /usr/local/s2i/usage.txt\n#   Add run script as /opt/run-java/run-java.sh and make it executable\nCOPY run-java.sh /opt/run-java/\nRUN chmod 755 /opt/run-java/run-java.sh\n#   Adding run-env.sh to set app dir\nCOPY run-env.sh /opt/run-java/run-env.sh\nRUN chmod 755 /opt/run-java/run-env.sh\n#   Copy licenses\nRUN mkdir -p /opt/fuse/licenses\nCOPY licenses.css /opt/fuse/licenses\nCOPY licenses.xml /opt/fuse/licenses\nCOPY licenses.html /opt/fuse/licenses\nCOPY apache_software_license_version_2.0-apache-2.0.txt /opt/fuse/licenses\n#   Necessary to permit running with a randomised UID\nRUN mkdir -p /deployments/data \\\n && chmod -R \"g+rwX\" /deployments \\\n && chown -R jboss:root /deployments \\\n && chmod -R \"g+rwX\" /opt/jboss \\\n && chown -R jboss:root /opt/jboss \\\n && chmod 664 /etc/passwd\n#   S2I scripts rely on /opt/jboss as working directory\nWORKDIR /opt/jboss\n#   S2I requires a numeric, non-0 UID. This is the UID for the jboss user in the base image\nUSER 1000\nRUN mkdir -p /opt/jboss/.m2\nCOPY settings.xml /opt/jboss/.m2/settings.xml\n#   Use the run script as default since we are working as an hybrid image which can be\n#   used directly to. (If we were a plain s2i image we would print the usage info here)\nCMD [\"/usr/local/s2i/run\"]\n","originalDockerfileUglifiedHash":"6e93d62ab060a2dd4bc7c6b0ba298992","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d5ab789a49fbf80716472896cd6bdc243a4b1c0a.dockerfile"}