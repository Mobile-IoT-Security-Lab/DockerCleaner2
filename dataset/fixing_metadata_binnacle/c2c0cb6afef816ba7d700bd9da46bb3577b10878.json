{"seed":2228328493,"processedDockerfileHash":"d125d7f7cd2b34d2babdfae2c12b77f2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Docker container for openSUSE 11.2\n#   See https://github.com/ceejatec/naked-docker/ for details about the\n#   construction of the base image.\nFROM ceejatec/naked-opensuse:11.2\nMAINTAINER ceej@couchbase.com\nUSER root\nRUN zypper install -y openssh sudo \\\n && zypper clean\n#   Set up for SSH daemon\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config \\\n && sed -ri 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config \\\n && ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa \\\n && ssh-keygen -f /etc/ssh/ssh_host_dsa_key -N '' -t dsa\n#   Create buildbot user with password-less sudo privs, and give\n#   ownership of /opt/buildbot\nRUN groupadd -g1000 buildbot \\\n && useradd buildbot -g buildbot -u1000 -G wheel -m -s /bin/bash \\\n && mkdir /opt/buildbot \\\n && chown -R buildbot:buildbot /opt/buildbot \\\n && echo 'buildbot:buildbot' | chpasswd \\\n && sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\nCOPY .ssh /home/buildbot/.ssh\nRUN chown -R buildbot:buildbot /home/buildbot/.ssh \\\n && chmod 700 /home/buildbot/.ssh \\\n && chmod 600 /home/buildbot/.ssh/*\n#  ## Install Couchbase build dependencies ######################################\n#   * Packages from the base CentOS repository\nRUN zypper install -y binutils curl ed make man ncurses-devel libopenssl-devel python-devel lsb-release ruby rubygems rubygem-rake tar unzip \\\n && zypper clean\n#   * golang\nRUN mkdir /tmp/deploy \\\n && curl https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/go.tar.gz \\\n && cd bin \\\n && for file in /usr/local/go/bin/*; do ln -s $file ; done \\\n && rm -fr /tmp/deploy\n#   * repo\nRUN curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo \\\n && zypper install -y python-xml \\\n && zypper clean\n#   GCC (from ceejatec/opensuse-gcc-build)\nCOPY build/local /usr/local\nRUN (echo \"/usr/local/lib64\" ;cat /etc/ld.so.conf ) > /tmp/ld.so.conf \\\n && mv /tmp/ld.so.conf /etc \\\n && ldconfig \\\n && ln -s gcc /usr/local/bin/cc\n#   * CMake (from cmake.org)\nRUN mkdir /tmp/deploy \\\n && cd /tmp/deploy \\\n && curl -O http://www.cmake.org/files/v3.1/cmake-3.1.3.tar.gz \\\n && tar xzf cmake-3.1.3.tar.gz \\\n && cd cmake-3.1.3 \\\n && ./configure --prefix=/usr/local --no-system-libs \\\n && make -j8 all \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\n#   * git\nRUN mkdir /tmp/deploy \\\n && zypper install -y curl-devel gettext-tools \\\n && curl https://www.kernel.org/pub/software/scm/git/git-1.9.4.tar.gz -o /tmp/deploy/git.tar.gz \\\n && cd /tmp/deploy \\\n && tar xzf git.tar.gz \\\n && cd git-1.9.4 \\\n && ./configure \\\n && make -j8 NO_PERL=YesPlease \\\n && make NO_PERL=YesPlease install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && zypper remove -y cvs gettext-runtime curl-devel gettext-devel gettext-tools libcurl-devel libgomp44 tcsh \\\n && zypper clean \\\n && cd /usr/local/libexec/git-core \\\n && find . -samefile git -name 'git-*' -exec ln -sf git {}\n#   Install autoconf and friends - necessary for building some third-party deps\n#   from source, not for Couchbase. (The \"full\" version of perl is also required\n#   for some third-party builds, so don't remove that after building libtool.)\nRUN zypper install -y perl \\\n && mkdir /tmp/deploy \\\n && curl -L http://ftp.gnu.org/gnu/m4/m4-1.4.17.tar.bz2 -o /tmp/deploy/m4-1.4.17.tar.bz2 \\\n && cd /tmp/deploy \\\n && tar -xjf m4-1.4.17.tar.bz2 \\\n && cd m4-1.4.17 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf autoconf-2.69.tar.gz \\\n && cd autoconf-2.69 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf automake-1.14.tar.gz \\\n && cd automake-1.14 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf libtool-2.4.2.tar.gz \\\n && cd libtool-2.4.2 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && zypper clean\n#   * ccache (from source)\nRUN mkdir /tmp/deploy \\\n && curl -L https://www.samba.org/ftp/ccache/ccache-3.1.9.tar.bz2 -o /tmp/deploy/ccache.tar.bz2 \\\n && cd /tmp/deploy \\\n && tar -xjf ccache.tar.bz2 \\\n && cd ccache-3.1.9 \\\n && ./configure --prefix=/home/buildbot \\\n && make -j8 \\\n && make install \\\n && rm -rf /home/buildbot/share \\\n && ln -s ccache /home/buildbot/bin/gcc \\\n && ln -s ccache /home/buildbot/bin/g++ \\\n && ln -s ccache /home/buildbot/bin/cc \\\n && ln -s ccache /home/buildbot/bin/c++ \\\n && rm -fr /tmp/deploy\n#   Install requirements for buildbot and buildbot tasks\nRUN zypper install -y python-setuptools python-dateutil perl-libwww-perl perl-XML-Simple \\\n && easy_install buildbot_slave \\\n && mkdir /home/buildbot/buildbot_slave \\\n && buildslave create-slave /home/buildbot/buildbot_slave 10.1.1.210:9999 suse-11-builddocker-01 suse-11-builddocker-01 \\\n && echo \"Couchbase Build Team <build-team@couchbase.com>\" > /home/buildbot/buildbot_slave/info/admin \\\n && echo \"SUSE 11 x86_64 Couchbase Build Slave running in Docker\" > /home/buildbot/buildbot_slave/info/host \\\n && chown -R buildbot:buildbot /home/buildbot/buildbot_slave \\\n && zypper clean\nRUN mkdir /tmp/deploy \\\n && curl -L 'http://downloads.sourceforge.net/project/s3tools/s3cmd/1.5.0-rc1/s3cmd-1.5.0-rc1.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fs3tools%2Ffiles%2Fs3cmd%2F1.5.0-rc1%2F&ts=1406252479&use_mirror=superb-dca2' -o /tmp/deploy/s3cmd.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xvf s3cmd.tar.gz \\\n && cd s3cmd-1.5.0-rc1 \\\n && python setup.py build \\\n && python setup.py install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\nCOPY .s3cfg /home/buildbot/.s3cfg\nRUN chown buildbot:buildbot /home/buildbot/.s3cfg\n#   Expose SSH daemon and run our builder startup script\nEXPOSE 22/tcp\n#   Override default command for buildbot purposes\nCMD su - buildbot -c \"buildslave start /home/buildbot/buildbot_slave\" ; /usr/sbin/sshd -D\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Docker container for openSUSE 11.2\n#  See https://github.com/ceejatec/naked-docker/ for details about the\n#  construction of the base image.\nFROM ceejatec/naked-opensuse:11.2\nMAINTAINER ceej@couchbase.com\nUSER root\nRUN zypper install -y openssh sudo \\\n && zypper clean\n#  Set up for SSH daemon\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config \\\n && sed -ri 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config \\\n && ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa \\\n && ssh-keygen -f /etc/ssh/ssh_host_dsa_key -N '' -t dsa\n#  Create buildbot user with password-less sudo privs, and give\n#  ownership of /opt/buildbot\nRUN groupadd -g1000 buildbot \\\n && useradd buildbot -g buildbot -u1000 -G wheel -m -s /bin/bash \\\n && mkdir /opt/buildbot \\\n && chown -R buildbot:buildbot /opt/buildbot \\\n && echo 'buildbot:buildbot' | chpasswd \\\n && sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\nADD .ssh /home/buildbot/.ssh\nRUN chown -R buildbot:buildbot /home/buildbot/.ssh \\\n && chmod 700 /home/buildbot/.ssh \\\n && chmod 600 /home/buildbot/.ssh/*\n# ## Install Couchbase build dependencies ######################################\n#  * Packages from the base CentOS repository\nRUN zypper install -y binutils curl ed make man ncurses-devel libopenssl-devel python-devel lsb-release ruby rubygems rubygem-rake tar unzip \\\n && zypper clean\n#  * golang\nRUN mkdir /tmp/deploy \\\n && curl https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/go.tar.gz \\\n && cd bin \\\n && for file in /usr/local/go/bin/*; do ln -s $file ; done \\\n && rm -fr /tmp/deploy\n#  * repo\nRUN curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo \\\n && zypper install -y python-xml \\\n && zypper clean\n#  GCC (from ceejatec/opensuse-gcc-build)\nCOPY build/local /usr/local\nRUN (echo \"/usr/local/lib64\" ;cat /etc/ld.so.conf ) > /tmp/ld.so.conf \\\n && mv /tmp/ld.so.conf /etc \\\n && ldconfig \\\n && ln -s gcc /usr/local/bin/cc\n#  * CMake (from cmake.org)\nRUN mkdir /tmp/deploy \\\n && cd /tmp/deploy \\\n && curl -O http://www.cmake.org/files/v3.1/cmake-3.1.3.tar.gz \\\n && tar xzf cmake-3.1.3.tar.gz \\\n && cd cmake-3.1.3 \\\n && ./configure --prefix=/usr/local --no-system-libs \\\n && make -j8 all \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\n#  * git\nRUN mkdir /tmp/deploy \\\n && zypper install -y curl-devel gettext-tools \\\n && curl https://www.kernel.org/pub/software/scm/git/git-1.9.4.tar.gz -o /tmp/deploy/git.tar.gz \\\n && cd /tmp/deploy \\\n && tar xzf git.tar.gz \\\n && cd git-1.9.4 \\\n && ./configure \\\n && make -j8 NO_PERL=YesPlease \\\n && make NO_PERL=YesPlease install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && zypper remove -y cvs gettext-runtime curl-devel gettext-devel gettext-tools libcurl-devel libgomp44 tcsh \\\n && zypper clean \\\n && cd /usr/local/libexec/git-core \\\n && find . -samefile git -name 'git-*' -exec ln -sf git {} ; \\\n && find . -samefile git-remote-ftp -name 'git-*' -exec ln -sf git-remote-ftp {} ; \\\n && (strip * || true ) \\\n && ln -s /usr/local/bin/git /usr/bin/git\n#  Install autoconf and friends - necessary for building some third-party deps\n#  from source, not for Couchbase. (The \"full\" version of perl is also required\n#  for some third-party builds, so don't remove that after building libtool.)\nRUN zypper install -y perl \\\n && mkdir /tmp/deploy \\\n && curl -L http://ftp.gnu.org/gnu/m4/m4-1.4.17.tar.bz2 -o /tmp/deploy/m4-1.4.17.tar.bz2 \\\n && cd /tmp/deploy \\\n && tar -xjf m4-1.4.17.tar.bz2 \\\n && cd m4-1.4.17 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf autoconf-2.69.tar.gz \\\n && cd autoconf-2.69 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf automake-1.14.tar.gz \\\n && cd automake-1.14 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf libtool-2.4.2.tar.gz \\\n && cd libtool-2.4.2 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && zypper clean\n#  * ccache (from source)\nRUN mkdir /tmp/deploy \\\n && curl -L https://www.samba.org/ftp/ccache/ccache-3.1.9.tar.bz2 -o /tmp/deploy/ccache.tar.bz2 \\\n && cd /tmp/deploy \\\n && tar -xjf ccache.tar.bz2 \\\n && cd ccache-3.1.9 \\\n && ./configure --prefix=/home/buildbot \\\n && make -j8 \\\n && make install \\\n && rm -rf /home/buildbot/share \\\n && ln -s ccache /home/buildbot/bin/gcc \\\n && ln -s ccache /home/buildbot/bin/g++ \\\n && ln -s ccache /home/buildbot/bin/cc \\\n && ln -s ccache /home/buildbot/bin/c++ \\\n && rm -fr /tmp/deploy\n#  Install requirements for buildbot and buildbot tasks\nRUN zypper install -y python-setuptools python-dateutil perl-libwww-perl perl-XML-Simple \\\n && easy_install buildbot_slave \\\n && mkdir /home/buildbot/buildbot_slave \\\n && buildslave create-slave /home/buildbot/buildbot_slave 10.1.1.210:9999 suse-11-builddocker-01 suse-11-builddocker-01 \\\n && echo \"Couchbase Build Team <build-team@couchbase.com>\" > /home/buildbot/buildbot_slave/info/admin \\\n && echo \"SUSE 11 x86_64 Couchbase Build Slave running in Docker\" > /home/buildbot/buildbot_slave/info/host \\\n && chown -R buildbot:buildbot /home/buildbot/buildbot_slave \\\n && zypper clean\nRUN mkdir /tmp/deploy \\\n && curl -L 'http://downloads.sourceforge.net/project/s3tools/s3cmd/1.5.0-rc1/s3cmd-1.5.0-rc1.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fs3tools%2Ffiles%2Fs3cmd%2F1.5.0-rc1%2F&ts=1406252479&use_mirror=superb-dca2' -o /tmp/deploy/s3cmd.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xvf s3cmd.tar.gz \\\n && cd s3cmd-1.5.0-rc1 \\\n && python setup.py build \\\n && python setup.py install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\nADD .s3cfg /home/buildbot/.s3cfg\nRUN chown buildbot:buildbot /home/buildbot/.s3cfg\n#  Expose SSH daemon and run our builder startup script\nEXPOSE 22/tcp\n#  Override default command for buildbot purposes\nCMD su - buildbot -c \"buildslave start /home/buildbot/buildbot_slave\" ; /usr/sbin/sshd -D\n","injectedSmells":[],"originalDockerfileHash":"5f0b70da3263dc218266756684d1982d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Docker container for openSUSE 11.2\n#   See https://github.com/ceejatec/naked-docker/ for details about the\n#   construction of the base image.\nFROM ceejatec/naked-opensuse:11.2\nMAINTAINER ceej@couchbase.com\nUSER root\nRUN zypper install -y openssh sudo \\\n && zypper clean\n#   Set up for SSH daemon\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n && sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config \\\n && sed -ri 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config \\\n && ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa \\\n && ssh-keygen -f /etc/ssh/ssh_host_dsa_key -N '' -t dsa\n#   Create buildbot user with password-less sudo privs, and give\n#   ownership of /opt/buildbot\nRUN groupadd -g1000 buildbot \\\n && useradd buildbot -g buildbot -u1000 -G wheel -m -s /bin/bash \\\n && mkdir /opt/buildbot \\\n && chown -R buildbot:buildbot /opt/buildbot \\\n && echo 'buildbot:buildbot' | chpasswd \\\n && sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\nADD .ssh /home/buildbot/.ssh\nRUN chown -R buildbot:buildbot /home/buildbot/.ssh \\\n && chmod 700 /home/buildbot/.ssh \\\n && chmod 600 /home/buildbot/.ssh/*\n#  ## Install Couchbase build dependencies ######################################\n#   * Packages from the base CentOS repository\nRUN zypper install -y binutils curl ed make man ncurses-devel libopenssl-devel python-devel lsb-release ruby rubygems rubygem-rake tar unzip \\\n && zypper clean\n#   * golang\nRUN mkdir /tmp/deploy \\\n && curl https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz \\\n && cd /usr/local \\\n && tar xzf /tmp/deploy/go.tar.gz \\\n && cd bin \\\n && for file in /usr/local/go/bin/*; do ln -s $file ; done \\\n && rm -fr /tmp/deploy\n#   * repo\nRUN curl https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo \\\n && chmod a+x /usr/local/bin/repo \\\n && zypper install -y python-xml \\\n && zypper clean\n#   GCC (from ceejatec/opensuse-gcc-build)\nCOPY build/local /usr/local\nRUN (echo \"/usr/local/lib64\" ;cat /etc/ld.so.conf ) > /tmp/ld.so.conf \\\n && mv /tmp/ld.so.conf /etc \\\n && ldconfig \\\n && ln -s gcc /usr/local/bin/cc\n#   * CMake (from cmake.org)\nRUN mkdir /tmp/deploy \\\n && cd /tmp/deploy \\\n && curl -O http://www.cmake.org/files/v3.1/cmake-3.1.3.tar.gz \\\n && tar xzf cmake-3.1.3.tar.gz \\\n && cd cmake-3.1.3 \\\n && ./configure --prefix=/usr/local --no-system-libs \\\n && make -j8 all \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\n#   * git\nRUN mkdir /tmp/deploy \\\n && zypper install -y curl-devel gettext-tools \\\n && curl https://www.kernel.org/pub/software/scm/git/git-1.9.4.tar.gz -o /tmp/deploy/git.tar.gz \\\n && cd /tmp/deploy \\\n && tar xzf git.tar.gz \\\n && cd git-1.9.4 \\\n && ./configure \\\n && make -j8 NO_PERL=YesPlease \\\n && make NO_PERL=YesPlease install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && zypper remove -y cvs gettext-runtime curl-devel gettext-devel gettext-tools libcurl-devel libgomp44 tcsh \\\n && zypper clean \\\n && cd /usr/local/libexec/git-core \\\n && find . -samefile git -name 'git-*' -exec ln -sf git {}\n#   Install autoconf and friends - necessary for building some third-party deps\n#   from source, not for Couchbase. (The \"full\" version of perl is also required\n#   for some third-party builds, so don't remove that after building libtool.)\nRUN zypper install -y perl \\\n && mkdir /tmp/deploy \\\n && curl -L http://ftp.gnu.org/gnu/m4/m4-1.4.17.tar.bz2 -o /tmp/deploy/m4-1.4.17.tar.bz2 \\\n && cd /tmp/deploy \\\n && tar -xjf m4-1.4.17.tar.bz2 \\\n && cd m4-1.4.17 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf autoconf-2.69.tar.gz \\\n && cd autoconf-2.69 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf automake-1.14.tar.gz \\\n && cd automake-1.14 \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && curl -L http://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xzf libtool-2.4.2.tar.gz \\\n && cd libtool-2.4.2 \\\n && ./configure --prefix=/usr/local \\\n && make -j8 \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy \\\n && zypper clean\n#   * ccache (from source)\nRUN mkdir /tmp/deploy \\\n && curl -L https://www.samba.org/ftp/ccache/ccache-3.1.9.tar.bz2 -o /tmp/deploy/ccache.tar.bz2 \\\n && cd /tmp/deploy \\\n && tar -xjf ccache.tar.bz2 \\\n && cd ccache-3.1.9 \\\n && ./configure --prefix=/home/buildbot \\\n && make -j8 \\\n && make install \\\n && rm -rf /home/buildbot/share \\\n && ln -s ccache /home/buildbot/bin/gcc \\\n && ln -s ccache /home/buildbot/bin/g++ \\\n && ln -s ccache /home/buildbot/bin/cc \\\n && ln -s ccache /home/buildbot/bin/c++ \\\n && rm -fr /tmp/deploy\n#   Install requirements for buildbot and buildbot tasks\nRUN zypper install -y python-setuptools python-dateutil perl-libwww-perl perl-XML-Simple \\\n && easy_install buildbot_slave \\\n && mkdir /home/buildbot/buildbot_slave \\\n && buildslave create-slave /home/buildbot/buildbot_slave 10.1.1.210:9999 suse-11-builddocker-01 suse-11-builddocker-01 \\\n && echo \"Couchbase Build Team <build-team@couchbase.com>\" > /home/buildbot/buildbot_slave/info/admin \\\n && echo \"SUSE 11 x86_64 Couchbase Build Slave running in Docker\" > /home/buildbot/buildbot_slave/info/host \\\n && chown -R buildbot:buildbot /home/buildbot/buildbot_slave \\\n && zypper clean\nRUN mkdir /tmp/deploy \\\n && curl -L 'http://downloads.sourceforge.net/project/s3tools/s3cmd/1.5.0-rc1/s3cmd-1.5.0-rc1.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fs3tools%2Ffiles%2Fs3cmd%2F1.5.0-rc1%2F&ts=1406252479&use_mirror=superb-dca2' -o /tmp/deploy/s3cmd.tar.gz \\\n && cd /tmp/deploy \\\n && tar -xvf s3cmd.tar.gz \\\n && cd s3cmd-1.5.0-rc1 \\\n && python setup.py build \\\n && python setup.py install \\\n && cd /tmp \\\n && rm -rf /tmp/deploy\nADD .s3cfg /home/buildbot/.s3cfg\nRUN chown buildbot:buildbot /home/buildbot/.s3cfg\n#   Expose SSH daemon and run our builder startup script\nEXPOSE 22/tcp\n#   Override default command for buildbot purposes\nCMD su - buildbot -c \"buildslave start /home/buildbot/buildbot_slave\" ; /usr/sbin/sshd -D\n","originalDockerfileUglifiedHash":"a1d3efa17c8d279be6e91dbb32552343","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c2c0cb6afef816ba7d700bd9da46bb3577b10878.dockerfile"}