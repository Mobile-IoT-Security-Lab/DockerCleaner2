{"seed":4212396246,"processedDockerfileHash":"e90deec17e886fdff4c4f5adb7ae88b5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM i386/debian:wheezy\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"deb http://archive.debian.org/debian wheezy main\" > /etc/apt/sources.list\nRUN echo \"deb http://security.debian.org/debian-security wheezy/updates main\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends git make autoconf python curl wget bzip2 gcc g++ texlive texinfo valgrind libgl1-mesa-dev libxi-dev libxmu-dev libxft-dev libxinerama-dev libxcursor-dev libxfixes-dev mesa-common-dev libglu1-mesa-dev zlib1g-dev emacs23-nox -y \\\n && apt-get clean\nENV CFLAGS=\"-fPIC\"\nENV CXXFLAGS=\"-fPIC\"\nENV FFLAGS=\"-fPIC\"\n#   -----------------------\n#   GCC with PIC\n#   -----------------------\nRUN curl -L -O https://ftpmirror.gnu.org/gcc/gcc-5.5.0/gcc-5.5.0.tar.gz \\\n && tar xf gcc-5.5.0.tar.gz \\\n && cd gcc-5.5.0 \\\n && ./contrib/download_prerequisites \\\n && cd .. \\\n && mkdir gccbuild \\\n && cd gccbuild \\\n && ../gcc-5.5.0/configure -v --build=i386-linux-gnu --host=i386-linux-gnu --target=i386-linux-gnu --prefix=/usr/local --enable-checking=release --enable-languages=c,c++,fortran --disable-multilib --with-pic \\\n && make -j 4 \\\n && make install \\\n && cd .. \\\n && rm -rf gcc-5.5.0.tar.gz gcc-5.5.0 gccbuild\nENV PATH=\"/usr/local/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib:${LD_LIBRARY_PATH}\"\nENV CC=\"/usr/local/bin/gcc\"\nENV CXX=\"/usr/local/bin/g++\"\nENV FC=\"/usr/local/bin/gfortran\"\n#   -----------------------\n#   OpenBLAS\n#   -----------------------\nRUN git clone https://github.com/xianyi/OpenBLAS.git \\\n && cd OpenBLAS \\\n && git checkout v0.2.20 \\\n && make NUM_THREADS=8 TARGET=CORE2 \\\n && cp libopenblas_core2p-r0.2.20.a /usr/local/lib/libopenblas.a \\\n && cd .. \\\n && rm -rf OpenBLAS\n#   -----------------------\n#   Freetype\n#   -----------------------\nRUN curl -L -O http://download.savannah.gnu.org/releases/freetype/freetype-2.9.tar.gz \\\n && tar zxf freetype-2.9.tar.gz \\\n && cd freetype-2.9 \\\n && ./configure --disable-shared \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf freetype-2.9.tar.gz freetype-2.9\n#   -----------------------\n#   CMake\n#   -----------------------\nRUN curl -L -O https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4.tar.gz \\\n && tar zxf cmake-3.13.4.tar.gz \\\n && cd cmake-3.13.4 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf cmake-3.13.4.tar.gz cmake-3.13.4\n#   -----------------------\n#   OpenCASCADE\n#   -----------------------\nRUN curl -L -o occt73.tgz \"http://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=refs/tags/V7_3_0;sf=tgz\" \\\n && tar xf occt73.tgz \\\n && cd occt-V7_3_0 \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_LIBRARY_TYPE=Static -DBUILD_MODULE_Draw=0 -DBUILD_MODULE_Visualization=0 -DBUILD_MODULE_ApplicationFramework=0 .. \\\n && make -j 4 \\\n && make install \\\n && cd ../.. \\\n && rm -rf occt73.tgz occt-V7_3_0\n#   -----------------------\n#   HDF5\n#   -----------------------\nRUN curl -O https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.10.5.tar.gz \\\n && tar zxvf hdf5-1.10.5.tar.gz \\\n && cd hdf5-1.10.5 \\\n && ./configure --disable-shared --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf hdf5-1.10.5.tar.gz hdf5-1.10.5\n#   -----------------------\n#   MED\n#   -----------------------\nRUN curl -L -O http://files.salome-platform.org/Salome/other/med-4.0.0.tar.gz \\\n && tar zxf med-4.0.0.tar.gz \\\n && cd med-4.0.0 \\\n && LIBS=-ldl ./configure --with-hdf5=/usr/local --enable-build-static --disable-shared --disable-python --disable-tests \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf med-4.0.0.tar.gz med-4.0.0\n#   -----------------------\n#   CGNS\n#   -----------------------\nRUN git clone https://github.com/CGNS/CGNS.git \\\n && cd CGNS \\\n && git checkout v3.4.0 \\\n && mkdir build \\\n && cd build \\\n && cmake -DCGNS_BUILD_SHARED=0 -DCGNS_ENABLE_HDF5=1 -DHDF5_VERSION=1.10.5 .. \\\n && make \\\n && make install \\\n && cd ../.. \\\n && rm -rf CGNS\n#   -----------------------\n#   PETSc\n#   -----------------------\nRUN curl -O http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-3.10.2.tar.gz\nRUN tar zxf petsc-3.10.2.tar.gz\nENV PETSC_DIR=\"${PWD}/petsc-3.10.2\"\nENV PETSC_ARCH=\"real_mumps_seq\"\nRUN cd ${PETSC_DIR} \\\n && ./configure CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=real --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread\" \\\n && make\nENV PETSC_ARCH=\"complex_mumps_seq\"\nRUN cd ${PETSC_DIR} \\\n && ./configure CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=complex --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread\" \\\n && make\nRUN sed -i 's|-lgfortran -lquadmath -lpthread -lstdc++ -ldl -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl|/usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread -lstdc++ -static-libstdc++ -ldl -lm -lgcc_s|' /petsc-3.10.2/complex_mumps_seq/lib/petsc/conf/petscvariables\nRUN sed -i 's|-lgfortran -lquadmath -lpthread -lstdc++ -ldl -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl|/usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread -lstdc++ -static-libstdc++ -ldl -lm -lgcc_s|' /petsc-3.10.2/real_mumps_seq/lib/petsc/conf/petscvariables\n#   -----------------------\n#   SLEPc\n#   -----------------------\nRUN curl -O http://slepc.upv.es/download/distrib/slepc-3.10.1.tar.gz\nRUN tar zxf slepc-3.10.1.tar.gz\nENV SLEPC_DIR=\"${PWD}/slepc-3.10.1\"\nENV PETSC_ARCH=\"real_mumps_seq\"\nRUN cd ${SLEPC_DIR} \\\n && ./configure \\\n && make\nENV PETSC_ARCH=\"complex_mumps_seq\"\nRUN cd ${SLEPC_DIR} \\\n && ./configure \\\n && make\n#   -----------------------\n#   FLTK\n#   -----------------------\nRUN git clone https://github.com/fltk/fltk.git \\\n && cd fltk \\\n && make -j 4 \\\n && make install \\\n && cd ../.. \\\n && rm -rf fltk\n#   -----------------------\n#   Minimal Gmsh library\n#   -----------------------\n#   \"docker build --build-arg REBUILD_GMSH=yes\"\nARG REBUILD_GMSH\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git \\\n && cd gmsh \\\n && mkdir build \\\n && cd build \\\n && cmake -DDEFAULT=0 -DENABLE_PARSER=1 -DENABLE_POST=1 -DENABLE_PLUGINS=1 -DENABLE_ANN=1 -DENABLE_BLAS_LAPACK=1 -DENABLE_BUILD_LIB=1 -DENABLE_PRIVATE_API=1 .. \\\n && make -j 4 lib \\\n && make install/fast \\\n && cd ../.. \\\n && rm -rf gmsh\nVOLUME [\"/etc/gitlab-runner\"]\nRUN useradd -ms /bin/bash geuzaine\nUSER geuzaine\nWORKDIR /home/geuzaine\nRUN mkdir -p ~/.ssh\nRUN chmod 700 ~/.ssh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM i386/debian:wheezy\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"deb http://archive.debian.org/debian wheezy main\" > /etc/apt/sources.list\nRUN echo \"deb http://security.debian.org/debian-security wheezy/updates main\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install git make autoconf python curl wget bzip2 gcc g++ texlive texinfo valgrind libgl1-mesa-dev libxi-dev libxmu-dev libxft-dev libxinerama-dev libxcursor-dev libxfixes-dev mesa-common-dev libglu1-mesa-dev zlib1g-dev emacs23-nox -y \\\n && apt-get clean\nENV CFLAGS=\"-fPIC\"\nENV CXXFLAGS=\"-fPIC\"\nENV FFLAGS=\"-fPIC\"\n#  -----------------------\n#  GCC with PIC\n#  -----------------------\nRUN curl -L -O https://ftpmirror.gnu.org/gcc/gcc-5.5.0/gcc-5.5.0.tar.gz \\\n && tar xf gcc-5.5.0.tar.gz \\\n && cd gcc-5.5.0 \\\n && ./contrib/download_prerequisites \\\n && cd .. \\\n && mkdir gccbuild \\\n && cd gccbuild \\\n && ../gcc-5.5.0/configure -v --build=i386-linux-gnu --host=i386-linux-gnu --target=i386-linux-gnu --prefix=/usr/local --enable-checking=release --enable-languages=c,c++,fortran --disable-multilib --with-pic \\\n && make -j 4 \\\n && make install \\\n && cd .. \\\n && rm -rf gcc-5.5.0.tar.gz gcc-5.5.0 gccbuild\nENV PATH=\"/usr/local/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib:${LD_LIBRARY_PATH}\"\nENV CC=\"/usr/local/bin/gcc\"\nENV CXX=\"/usr/local/bin/g++\"\nENV FC=\"/usr/local/bin/gfortran\"\n#  -----------------------\n#  OpenBLAS\n#  -----------------------\nRUN git clone https://github.com/xianyi/OpenBLAS.git \\\n && cd OpenBLAS \\\n && git checkout v0.2.20 \\\n && make NUM_THREADS=8 TARGET=CORE2 \\\n && cp libopenblas_core2p-r0.2.20.a /usr/local/lib/libopenblas.a \\\n && cd .. \\\n && rm -rf OpenBLAS\n#  -----------------------\n#  Freetype\n#  -----------------------\nRUN curl -L -O http://download.savannah.gnu.org/releases/freetype/freetype-2.9.tar.gz \\\n && tar zxf freetype-2.9.tar.gz \\\n && cd freetype-2.9 \\\n && ./configure --disable-shared \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf freetype-2.9.tar.gz freetype-2.9\n#  -----------------------\n#  CMake\n#  -----------------------\nRUN curl -L -O https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4.tar.gz \\\n && tar zxf cmake-3.13.4.tar.gz \\\n && cd cmake-3.13.4 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf cmake-3.13.4.tar.gz cmake-3.13.4\n#  -----------------------\n#  OpenCASCADE\n#  -----------------------\nRUN curl -L -o occt73.tgz \"http://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=refs/tags/V7_3_0;sf=tgz\" \\\n && tar xf occt73.tgz \\\n && cd occt-V7_3_0 \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_LIBRARY_TYPE=Static -DBUILD_MODULE_Draw=0 -DBUILD_MODULE_Visualization=0 -DBUILD_MODULE_ApplicationFramework=0 .. \\\n && make -j 4 \\\n && make install \\\n && cd ../.. \\\n && rm -rf occt73.tgz occt-V7_3_0\n#  -----------------------\n#  HDF5\n#  -----------------------\nRUN curl -O https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.10.5.tar.gz \\\n && tar zxvf hdf5-1.10.5.tar.gz \\\n && cd hdf5-1.10.5 \\\n && ./configure --disable-shared --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf hdf5-1.10.5.tar.gz hdf5-1.10.5\n#  -----------------------\n#  MED\n#  -----------------------\nRUN curl -L -O http://files.salome-platform.org/Salome/other/med-4.0.0.tar.gz \\\n && tar zxf med-4.0.0.tar.gz \\\n && cd med-4.0.0 \\\n && LIBS=-ldl ./configure --with-hdf5=/usr/local --enable-build-static --disable-shared --disable-python --disable-tests \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf med-4.0.0.tar.gz med-4.0.0\n#  -----------------------\n#  CGNS\n#  -----------------------\nRUN git clone https://github.com/CGNS/CGNS.git \\\n && cd CGNS \\\n && git checkout v3.4.0 \\\n && mkdir build \\\n && cd build \\\n && cmake -DCGNS_BUILD_SHARED=0 -DCGNS_ENABLE_HDF5=1 -DHDF5_VERSION=1.10.5 .. \\\n && make \\\n && make install \\\n && cd ../.. \\\n && rm -rf CGNS\n#  -----------------------\n#  PETSc\n#  -----------------------\nRUN curl -O http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-3.10.2.tar.gz\nRUN tar zxf petsc-3.10.2.tar.gz\nENV PETSC_DIR=\"${PWD}/petsc-3.10.2\"\nENV PETSC_ARCH=\"real_mumps_seq\"\nRUN cd ${PETSC_DIR} \\\n && ./configure CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=real --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread\" \\\n && make\nENV PETSC_ARCH=\"complex_mumps_seq\"\nRUN cd ${PETSC_DIR} \\\n && ./configure CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=complex --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread\" \\\n && make\nRUN sed -i 's|-lgfortran -lquadmath -lpthread -lstdc++ -ldl -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl|/usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread -lstdc++ -static-libstdc++ -ldl -lm -lgcc_s|' /petsc-3.10.2/complex_mumps_seq/lib/petsc/conf/petscvariables\nRUN sed -i 's|-lgfortran -lquadmath -lpthread -lstdc++ -ldl -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl|/usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread -lstdc++ -static-libstdc++ -ldl -lm -lgcc_s|' /petsc-3.10.2/real_mumps_seq/lib/petsc/conf/petscvariables\n#  -----------------------\n#  SLEPc\n#  -----------------------\nRUN curl -O http://slepc.upv.es/download/distrib/slepc-3.10.1.tar.gz\nRUN tar zxf slepc-3.10.1.tar.gz\nENV SLEPC_DIR=\"${PWD}/slepc-3.10.1\"\nENV PETSC_ARCH=\"real_mumps_seq\"\nRUN cd ${SLEPC_DIR} \\\n && ./configure \\\n && make\nENV PETSC_ARCH=\"complex_mumps_seq\"\nRUN cd ${SLEPC_DIR} \\\n && ./configure \\\n && make\n#  -----------------------\n#  FLTK\n#  -----------------------\nRUN git clone https://github.com/fltk/fltk.git \\\n && cd fltk \\\n && make -j 4 \\\n && make install \\\n && cd ../.. \\\n && rm -rf fltk\n#  -----------------------\n#  Minimal Gmsh library\n#  -----------------------\n#  \"docker build --build-arg REBUILD_GMSH=yes\"\nARG REBUILD_GMSH\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git \\\n && cd gmsh \\\n && mkdir build \\\n && cd build \\\n && cmake -DDEFAULT=0 -DENABLE_PARSER=1 -DENABLE_POST=1 -DENABLE_PLUGINS=1 -DENABLE_ANN=1 -DENABLE_BLAS_LAPACK=1 -DENABLE_BUILD_LIB=1 -DENABLE_PRIVATE_API=1 .. \\\n && make -j 4 lib \\\n && make install/fast \\\n && cd ../.. \\\n && rm -rf gmsh\nVOLUME [\"/etc/gitlab-runner\"]\nRUN useradd -ms /bin/bash geuzaine\nUSER geuzaine\nWORKDIR /home/geuzaine\nRUN mkdir -p ~/.ssh\nRUN chmod 700 ~/.ssh\n","injectedSmells":[],"originalDockerfileHash":"fcbec09eae65a2c06ac51a77fb1410d6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM i386/debian:wheezy\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo \"deb http://archive.debian.org/debian wheezy main\" > /etc/apt/sources.list\nRUN echo \"deb http://security.debian.org/debian-security wheezy/updates main\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install git make autoconf python curl wget bzip2 gcc g++ texlive texinfo valgrind libgl1-mesa-dev libxi-dev libxmu-dev libxft-dev libxinerama-dev libxcursor-dev libxfixes-dev mesa-common-dev libglu1-mesa-dev zlib1g-dev emacs23-nox -y \\\n && apt-get clean\nENV CFLAGS=\"-fPIC\"\nENV CXXFLAGS=\"-fPIC\"\nENV FFLAGS=\"-fPIC\"\n#   -----------------------\n#   GCC with PIC\n#   -----------------------\nRUN curl -L -O https://ftpmirror.gnu.org/gcc/gcc-5.5.0/gcc-5.5.0.tar.gz \\\n && tar xf gcc-5.5.0.tar.gz \\\n && cd gcc-5.5.0 \\\n && ./contrib/download_prerequisites \\\n && cd .. \\\n && mkdir gccbuild \\\n && cd gccbuild \\\n && ../gcc-5.5.0/configure -v --build=i386-linux-gnu --host=i386-linux-gnu --target=i386-linux-gnu --prefix=/usr/local --enable-checking=release --enable-languages=c,c++,fortran --disable-multilib --with-pic \\\n && make -j 4 \\\n && make install \\\n && cd .. \\\n && rm -rf gcc-5.5.0.tar.gz gcc-5.5.0 gccbuild\nENV PATH=\"/usr/local/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib:${LD_LIBRARY_PATH}\"\nENV CC=\"/usr/local/bin/gcc\"\nENV CXX=\"/usr/local/bin/g++\"\nENV FC=\"/usr/local/bin/gfortran\"\n#   -----------------------\n#   OpenBLAS\n#   -----------------------\nRUN git clone https://github.com/xianyi/OpenBLAS.git \\\n && cd OpenBLAS \\\n && git checkout v0.2.20 \\\n && make NUM_THREADS=8 TARGET=CORE2 \\\n && cp libopenblas_core2p-r0.2.20.a /usr/local/lib/libopenblas.a \\\n && cd .. \\\n && rm -rf OpenBLAS\n#   -----------------------\n#   Freetype\n#   -----------------------\nRUN curl -L -O http://download.savannah.gnu.org/releases/freetype/freetype-2.9.tar.gz \\\n && tar zxf freetype-2.9.tar.gz \\\n && cd freetype-2.9 \\\n && ./configure --disable-shared \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf freetype-2.9.tar.gz freetype-2.9\n#   -----------------------\n#   CMake\n#   -----------------------\nRUN curl -L -O https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4.tar.gz \\\n && tar zxf cmake-3.13.4.tar.gz \\\n && cd cmake-3.13.4 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf cmake-3.13.4.tar.gz cmake-3.13.4\n#   -----------------------\n#   OpenCASCADE\n#   -----------------------\nRUN curl -L -o occt73.tgz \"http://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=refs/tags/V7_3_0;sf=tgz\" \\\n && tar xf occt73.tgz \\\n && cd occt-V7_3_0 \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_LIBRARY_TYPE=Static -DBUILD_MODULE_Draw=0 -DBUILD_MODULE_Visualization=0 -DBUILD_MODULE_ApplicationFramework=0 .. \\\n && make -j 4 \\\n && make install \\\n && cd ../.. \\\n && rm -rf occt73.tgz occt-V7_3_0\n#   -----------------------\n#   HDF5\n#   -----------------------\nRUN curl -O https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.10.5.tar.gz \\\n && tar zxvf hdf5-1.10.5.tar.gz \\\n && cd hdf5-1.10.5 \\\n && ./configure --disable-shared --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf hdf5-1.10.5.tar.gz hdf5-1.10.5\n#   -----------------------\n#   MED\n#   -----------------------\nRUN curl -L -O http://files.salome-platform.org/Salome/other/med-4.0.0.tar.gz \\\n && tar zxf med-4.0.0.tar.gz \\\n && cd med-4.0.0 \\\n && LIBS=-ldl ./configure --with-hdf5=/usr/local --enable-build-static --disable-shared --disable-python --disable-tests \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf med-4.0.0.tar.gz med-4.0.0\n#   -----------------------\n#   CGNS\n#   -----------------------\nRUN git clone https://github.com/CGNS/CGNS.git \\\n && cd CGNS \\\n && git checkout v3.4.0 \\\n && mkdir build \\\n && cd build \\\n && cmake -DCGNS_BUILD_SHARED=0 -DCGNS_ENABLE_HDF5=1 -DHDF5_VERSION=1.10.5 .. \\\n && make \\\n && make install \\\n && cd ../.. \\\n && rm -rf CGNS\n#   -----------------------\n#   PETSc\n#   -----------------------\nRUN curl -O http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-3.10.2.tar.gz\nRUN tar zxf petsc-3.10.2.tar.gz\nENV PETSC_DIR=\"${PWD}/petsc-3.10.2\"\nENV PETSC_ARCH=\"real_mumps_seq\"\nRUN cd ${PETSC_DIR} \\\n && ./configure CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=real --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread\" \\\n && make\nENV PETSC_ARCH=\"complex_mumps_seq\"\nRUN cd ${PETSC_DIR} \\\n && ./configure CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=complex --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread\" \\\n && make\nRUN sed -i 's|-lgfortran -lquadmath -lpthread -lstdc++ -ldl -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl|/usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread -lstdc++ -static-libstdc++ -ldl -lm -lgcc_s|' /petsc-3.10.2/complex_mumps_seq/lib/petsc/conf/petscvariables\nRUN sed -i 's|-lgfortran -lquadmath -lpthread -lstdc++ -ldl -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl|/usr/local/lib/libgfortran.a /usr/local/lib/libquadmath.a -lpthread -lstdc++ -static-libstdc++ -ldl -lm -lgcc_s|' /petsc-3.10.2/real_mumps_seq/lib/petsc/conf/petscvariables\n#   -----------------------\n#   SLEPc\n#   -----------------------\nRUN curl -O http://slepc.upv.es/download/distrib/slepc-3.10.1.tar.gz\nRUN tar zxf slepc-3.10.1.tar.gz\nENV SLEPC_DIR=\"${PWD}/slepc-3.10.1\"\nENV PETSC_ARCH=\"real_mumps_seq\"\nRUN cd ${SLEPC_DIR} \\\n && ./configure \\\n && make\nENV PETSC_ARCH=\"complex_mumps_seq\"\nRUN cd ${SLEPC_DIR} \\\n && ./configure \\\n && make\n#   -----------------------\n#   FLTK\n#   -----------------------\nRUN git clone https://github.com/fltk/fltk.git \\\n && cd fltk \\\n && make -j 4 \\\n && make install \\\n && cd ../.. \\\n && rm -rf fltk\n#   -----------------------\n#   Minimal Gmsh library\n#   -----------------------\n#   \"docker build --build-arg REBUILD_GMSH=yes\"\nARG REBUILD_GMSH\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git \\\n && cd gmsh \\\n && mkdir build \\\n && cd build \\\n && cmake -DDEFAULT=0 -DENABLE_PARSER=1 -DENABLE_POST=1 -DENABLE_PLUGINS=1 -DENABLE_ANN=1 -DENABLE_BLAS_LAPACK=1 -DENABLE_BUILD_LIB=1 -DENABLE_PRIVATE_API=1 .. \\\n && make -j 4 lib \\\n && make install/fast \\\n && cd ../.. \\\n && rm -rf gmsh\nVOLUME [\"/etc/gitlab-runner\"]\nRUN useradd -ms /bin/bash geuzaine\nUSER geuzaine\nWORKDIR /home/geuzaine\nRUN mkdir -p ~/.ssh\nRUN chmod 700 ~/.ssh\n","originalDockerfileUglifiedHash":"c1421df1df03ca2861776a4aa634c03e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b70f43a53fd0a4c17a6fdb05e638a54e206e3d3f.dockerfile"}