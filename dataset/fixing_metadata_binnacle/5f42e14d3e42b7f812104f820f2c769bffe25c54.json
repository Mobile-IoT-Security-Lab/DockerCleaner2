{"seed":3924511799,"processedDockerfileHash":"f8f225c32ddd9fb260ca9a2a21a56388","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM jupyter/minimal-notebook:4cdbc9cdb7d1\nMAINTAINER Izaak Beekman <izaak@izaakbeekman.com>\nUSER root\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/${NB_USER}\"\nARG OPENCOARRAYS_VERSION=2.6.2\nENV GCC_VERSION=\"8.2.0\"\nRUN DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"file\" \\\n && set -v \\\n && cat /etc/issue \\\n && uname -a \\\n && echo \"${DEBIAN_FRONTEND}\" \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends build-essential gcc-8 gfortran-8 g++-8 mpich ${transientBuildDeps} -y \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-8 \\\n && update-alternatives --set gcc \"/usr/bin/gcc-8\" \\\n && gcc --version \\\n && gfortran --version \\\n && mpiexec --version \\\n && mpifort --version \\\n && mpicc --version \\\n && apt-get clean \\\n && apt-get purge -y --auto-remove ${transientBuildDeps} \\\n && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/*\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VCS_URL\nARG VCS_VERSION=latest\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.name=\"jupyter-CAF-kernel\" \\\n      org.label-schema.description=\"Fortran Jupyter kernel with OpenCoarrays and MPICH backend\" \\\n      org.label-schema.url=\"https://github.com/sourceryinstitute/jupyter-CAF-kernel/\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.vcs-url=\"${VCS_URL}\" \\\n      org.label-schema.version=\"${VCS_VERSION}\" \\\n      org.label-schema.vendor=\"SourceryInstitute\" \\\n      org.label-schema.license=\"MIT\" \\\n      org.label-schema.docker.cmd=\"docker run -i -t -p 8888:8888 sourceryinstitute/jupyter-CAF-kernel\"\nCOPY ./jupyter-caf-kernel /jupyter/jupyter-caf-kernel\nARG RUN_TESTS=false\nARG RUN_AS_NB_USER=\"sudo -H -u ${NB_USER} bash -c\"\nRUN DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"cmake git\" \\\n && set -v \\\n && echo \"${DEBIAN_FRONTEND}\" \\\n && adduser --disabled-password --gecos \"Default user\" --uid ${NB_UID} ${NB_USER} || true \\\n && apt-get update \\\n && apt-get install --no-install-recommends ${transientBuildDeps} -y \\\n && cmake --version \\\n && wget -nv -t 3 https://github.com/sourceryinstitute/opencoarrays/releases/download/${OPENCOARRAYS_VERSION}/OpenCoarrays-${OPENCOARRAYS_VERSION}.tar.gz \\\n && wget -nv -t 3 https://github.com/sourceryinstitute/opencoarrays/releases/download/${OPENCOARRAYS_VERSION}/opencoarrays-${OPENCOARRAYS_VERSION}-SHA256.txt \\\n && sha256sum -c opencoarrays-${OPENCOARRAYS_VERSION}-SHA256.txt \\\n && tar xzf OpenCoarrays-${OPENCOARRAYS_VERSION}.tar.gz \\\n && cd OpenCoarrays-${OPENCOARRAYS_VERSION} \\\n && echo \"Installing OpenCoarrays using CMake in $( pwd ;)\" \\\n && mkdir build \\\n && cd build \\\n && gcc --version \\\n && gfortran --version \\\n && FC=\"`which gfortran `\" CC=\"`which gcc `\" cmake .. \\\n && make -j \"$( nproc ;)\" install \\\n && if [ \"${RUN_TESTS}\" = \"true\" ] ; then ctest --output-on-failure ; fi \\\n && cd \\\n && rm -rf OpenCoarrays* opencoarrays* \\\n && caf --version \\\n && pip install notebook==5.* --no-cache-dir \\\n && pip install -e /jupyter/jupyter-caf-kernel \\\n && jupyter-kernelspec install /jupyter/jupyter-caf-kernel/Coarray-Fortran/ \\\n && jupyter-kernelspec list \\\n && rm -rf jupyter-caf-kernel \\\n && apt-get clean \\\n && apt-get purge -y --auto-remove ${transientBuildDeps} \\\n && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/* \\\n && chown -R ${NB_USER} /home/${NB_USER}\nWORKDIR /home/${NB_USER}/\nENV NUM_IMAGES=\"4\"\nUSER ${NB_USER}\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM jupyter/minimal-notebook:4cdbc9cdb7d1\nMAINTAINER Izaak Beekman <izaak@izaakbeekman.com>\nUSER root\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/${NB_USER}\"\nARG OPENCOARRAYS_VERSION=2.6.2\nENV GCC_VERSION=\"8.2.0\"\nRUN DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"file\" \\\n && set -v \\\n && cat /etc/issue \\\n && uname -a \\\n && echo \"${DEBIAN_FRONTEND}\" \\\n && apt-get update -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n && apt-get update -y \\\n && apt-get install build-essential gcc-8 gfortran-8 g++-8 mpich ${transientBuildDeps} -y \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-8 \\\n && update-alternatives --set gcc \"/usr/bin/gcc-8\" \\\n && gcc --version \\\n && gfortran --version \\\n && mpiexec --version \\\n && mpifort --version \\\n && mpicc --version \\\n && apt-get clean \\\n && apt-get purge -y --auto-remove ${transientBuildDeps} \\\n && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/*\n#  Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VCS_URL\nARG VCS_VERSION=latest\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.name=\"jupyter-CAF-kernel\" \\\n      org.label-schema.description=\"Fortran Jupyter kernel with OpenCoarrays and MPICH backend\" \\\n      org.label-schema.url=\"https://github.com/sourceryinstitute/jupyter-CAF-kernel/\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.vcs-url=\"${VCS_URL}\" \\\n      org.label-schema.version=\"${VCS_VERSION}\" \\\n      org.label-schema.vendor=\"SourceryInstitute\" \\\n      org.label-schema.license=\"MIT\" \\\n      org.label-schema.docker.cmd=\"docker run -i -t -p 8888:8888 sourceryinstitute/jupyter-CAF-kernel\"\nCOPY ./jupyter-caf-kernel /jupyter/jupyter-caf-kernel\nARG RUN_TESTS=false\nARG RUN_AS_NB_USER=\"sudo -H -u ${NB_USER} bash -c\"\nRUN DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"cmake git\" \\\n && set -v \\\n && echo \"${DEBIAN_FRONTEND}\" \\\n && adduser --disabled-password --gecos \"Default user\" --uid ${NB_UID} ${NB_USER} || true \\\n && apt-get update \\\n && apt-get install ${transientBuildDeps} -y \\\n && cmake --version \\\n && wget -nv -t 3 https://github.com/sourceryinstitute/opencoarrays/releases/download/${OPENCOARRAYS_VERSION}/OpenCoarrays-${OPENCOARRAYS_VERSION}.tar.gz \\\n && wget -nv -t 3 https://github.com/sourceryinstitute/opencoarrays/releases/download/${OPENCOARRAYS_VERSION}/opencoarrays-${OPENCOARRAYS_VERSION}-SHA256.txt \\\n && sha256sum -c opencoarrays-${OPENCOARRAYS_VERSION}-SHA256.txt \\\n && tar xzf OpenCoarrays-${OPENCOARRAYS_VERSION}.tar.gz \\\n && cd OpenCoarrays-${OPENCOARRAYS_VERSION} \\\n && echo \"Installing OpenCoarrays using CMake in $( pwd ;)\" \\\n && mkdir build \\\n && cd build \\\n && gcc --version \\\n && gfortran --version \\\n && FC=\"`which gfortran `\" CC=\"`which gcc `\" cmake .. \\\n && make -j \"$( nproc ;)\" install \\\n && if [ \"${RUN_TESTS}\" = \"true\" ] ; then ctest --output-on-failure ; fi \\\n && cd \\\n && rm -rf OpenCoarrays* opencoarrays* \\\n && caf --version \\\n && pip install notebook==5.* --no-cache-dir \\\n && pip install -e /jupyter/jupyter-caf-kernel \\\n && jupyter-kernelspec install /jupyter/jupyter-caf-kernel/Coarray-Fortran/ \\\n && jupyter-kernelspec list \\\n && rm -rf jupyter-caf-kernel \\\n && apt-get clean \\\n && apt-get purge -y --auto-remove ${transientBuildDeps} \\\n && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/* \\\n && chown -R ${NB_USER} /home/${NB_USER}\nWORKDIR /home/${NB_USER}/\nENV NUM_IMAGES=\"4\"\nUSER ${NB_USER}\n","injectedSmells":[],"originalDockerfileHash":"0c230067077609fcdce3ccd8e9eb4c37","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM jupyter/minimal-notebook:4cdbc9cdb7d1\nMAINTAINER Izaak Beekman <izaak@izaakbeekman.com>\nUSER root\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/${NB_USER}\"\nARG OPENCOARRAYS_VERSION=2.6.2\nENV GCC_VERSION=\"8.2.0\"\nRUN DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"file\" \\\n && set -v \\\n && cat /etc/issue \\\n && uname -a \\\n && echo \"${DEBIAN_FRONTEND}\" \\\n && apt-get update -y \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n && apt-get update -y \\\n && apt-get install build-essential gcc-8 gfortran-8 g++-8 mpich ${transientBuildDeps} -y \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-8 \\\n && update-alternatives --set gcc \"/usr/bin/gcc-8\" \\\n && gcc --version \\\n && gfortran --version \\\n && mpiexec --version \\\n && mpifort --version \\\n && mpicc --version \\\n && apt-get clean \\\n && apt-get purge -y --auto-remove ${transientBuildDeps} \\\n && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/*\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VCS_URL\nARG VCS_VERSION=latest\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.name=\"jupyter-CAF-kernel\" \\\n      org.label-schema.description=\"Fortran Jupyter kernel with OpenCoarrays and MPICH backend\" \\\n      org.label-schema.url=\"https://github.com/sourceryinstitute/jupyter-CAF-kernel/\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.vcs-url=\"${VCS_URL}\" \\\n      org.label-schema.version=\"${VCS_VERSION}\" \\\n      org.label-schema.vendor=\"SourceryInstitute\" \\\n      org.label-schema.license=\"MIT\" \\\n      org.label-schema.docker.cmd=\"docker run -i -t -p 8888:8888 sourceryinstitute/jupyter-CAF-kernel\"\nCOPY ./jupyter-caf-kernel /jupyter/jupyter-caf-kernel\nARG RUN_TESTS=false\nARG RUN_AS_NB_USER=\"sudo -H -u ${NB_USER} bash -c\"\nRUN DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"cmake git\" \\\n && set -v \\\n && echo \"${DEBIAN_FRONTEND}\" \\\n && adduser --disabled-password --gecos \"Default user\" --uid ${NB_UID} ${NB_USER} || true \\\n && apt-get update \\\n && apt-get install ${transientBuildDeps} -y \\\n && cmake --version \\\n && wget -nv -t 3 https://github.com/sourceryinstitute/opencoarrays/releases/download/${OPENCOARRAYS_VERSION}/OpenCoarrays-${OPENCOARRAYS_VERSION}.tar.gz \\\n && wget -nv -t 3 https://github.com/sourceryinstitute/opencoarrays/releases/download/${OPENCOARRAYS_VERSION}/opencoarrays-${OPENCOARRAYS_VERSION}-SHA256.txt \\\n && sha256sum -c opencoarrays-${OPENCOARRAYS_VERSION}-SHA256.txt \\\n && tar xzf OpenCoarrays-${OPENCOARRAYS_VERSION}.tar.gz \\\n && cd OpenCoarrays-${OPENCOARRAYS_VERSION} \\\n && echo \"Installing OpenCoarrays using CMake in $( pwd ;)\" \\\n && mkdir build \\\n && cd build \\\n && gcc --version \\\n && gfortran --version \\\n && FC=\"`which gfortran `\" CC=\"`which gcc `\" cmake .. \\\n && make -j \"$( nproc ;)\" install \\\n && if [ \"${RUN_TESTS}\" = \"true\" ] ; then ctest --output-on-failure ; fi \\\n && cd \\\n && rm -rf OpenCoarrays* opencoarrays* \\\n && caf --version \\\n && pip install notebook==5.* --no-cache-dir \\\n && pip install -e /jupyter/jupyter-caf-kernel \\\n && jupyter-kernelspec install /jupyter/jupyter-caf-kernel/Coarray-Fortran/ \\\n && jupyter-kernelspec list \\\n && rm -rf jupyter-caf-kernel \\\n && apt-get clean \\\n && apt-get purge -y --auto-remove ${transientBuildDeps} \\\n && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/* \\\n && chown -R ${NB_USER} /home/${NB_USER}\nWORKDIR /home/${NB_USER}/\nENV NUM_IMAGES=\"4\"\nUSER ${NB_USER}\n","originalDockerfileUglifiedHash":"50900f4a9d5a02e087c406c0631e3351","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5f42e14d3e42b7f812104f820f2c769bffe25c54.dockerfile"}