{"seed":3860007491,"processedDockerfileHash":"b732be1e0f9260a7296c8e2a12c2ceac","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for Tor Relay Server with obfs4proxy (Multi-Stage build)\nFROM golang:alpine AS go-build\n#   Build /go/bin/obfs4proxy & /go/bin/meek-server\nRUN apk add git=2.38.4-r1 --no-cache --update \\\n && go get -v git.torproject.org/pluggable-transports/obfs4.git/obfs4proxy \\\n && go get -v git.torproject.org/pluggable-transports/meek.git/meek-server \\\n && cp -rv /go/bin /usr/local/\nFROM alpine:latest AS tor-build\nARG TOR_GPG_KEY=0x6AFEE6D49E92B601\n#   Install prerequisites\nRUN apk add gnupg=2.2.40-r0 build-base=0.5-r3 libevent=2.1.12-r5 libevent-dev=2.1.12-r5 libressl=3.6.2-r0 libressl-dev=3.6.2-r0 xz-libs=5.2.9-r0 xz-dev=5.2.9-r0 zlib=1.2.13-r0 zlib-dev=1.2.13-r0 zstd=1.5.5-r0 zstd-dev=1.5.5-r0 --no-cache --update \\\n && TOR_VERSION=$( wget -q https://gitweb.torproject.org/tor.git/plain/ReleaseNotes -O - | grep -m1 \"Changes in version\" | sed 's/^.*[^0-9]\\([0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\\).*$/\\1/' ;) \\\n && TOR_TARBALL_NAME=\"tor-${TOR_VERSION}.tar.gz\" \\\n && TOR_TARBALL_LINK=\"https://dist.torproject.org/${TOR_TARBALL_NAME}\" \\\n && wget -q $TOR_TARBALL_LINK \\\n && wget $TOR_TARBALL_LINK.asc \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 ipv4.pool.sks-keyservers.net keys.gnupg.net pgp.mit.edu; do echo \"Fetching GPG key $TOR_GPG_KEY from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$TOR_GPG_KEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $TOR_GPG_KEY\" >&2 \\\n && exit 1 ; gpg --verify $TOR_TARBALL_NAME.asc \\\n && tar xf $TOR_TARBALL_NAME \\\n && cd tor-$TOR_VERSION \\\n && ./configure \\\n && make install \\\n && ls -R /usr/local/\n#   Main files created (plus docs):\n#   /usr/local/bin/tor\n#   /usr/local/bin/tor-gencert\n#   /usr/local/bin/tor-resolve\n#   /usr/local/bin/torify\n#   /usr/local/share/tor/geoip\n#   /usr/local/share/tor/geoip6\n#   /usr/local/etc/tor/torrc.sample\nFROM alpine:latest\nMAINTAINER Christian chriswayg@gmail.com\n#   If no Nickname is set, a random string will be added to 'Tor4'\nENV TOR_USER=\"tord\" \\\n    TOR_NICKNAME=\"Tor4\"\n#   Installing dependencies of Tor and pwgen\nRUN apk add libevent=2.1.12-r5 libressl=3.6.2-r0 xz-libs=5.2.9-r0 zlib=1.2.13-r0 zstd=1.5.5-r0 pwgen=2.08-r2 --no-cache --update\n#   Copy obfs4proxy & meek-server\nCOPY --from=go-build /usr/local/bin/ /usr/local/bin/\n#   Copy Tor\nCOPY --from=tor-build /usr/local/ /usr/local/\n#   Create an unprivileged tor user\nRUN addgroup -g 19001 -S $TOR_USER \\\n && adduser -u 19001 -G $TOR_USER -S $TOR_USER\n#   Copy Tor configuration file\nCOPY ./torrc /etc/tor/torrc\n#   Copy docker-entrypoint\nCOPY ./scripts/ /usr/local/bin/\n#   Persist data\nVOLUME /etc/tor /var/lib/tor\n#   ORPort, DirPort, SocksPort, ObfsproxyPort, MeekPort\nEXPOSE 9001/tcp 9030/tcp 9050/tcp 54444/tcp 7002/tcp\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"tor\", \"-f\", \"/etc/tor/torrc\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for Tor Relay Server with obfs4proxy (Multi-Stage build)\nFROM golang:alpine AS go-build\n#  Build /go/bin/obfs4proxy & /go/bin/meek-server\nRUN apk --no-cache add --update git \\\n && go get -v git.torproject.org/pluggable-transports/obfs4.git/obfs4proxy \\\n && go get -v git.torproject.org/pluggable-transports/meek.git/meek-server \\\n && cp -rv /go/bin /usr/local/\nFROM alpine:latest AS tor-build\nARG TOR_GPG_KEY=0x6AFEE6D49E92B601\n#  Install prerequisites\nRUN apk --no-cache add --update gnupg build-base libevent libevent-dev libressl libressl-dev xz-libs xz-dev zlib zlib-dev zstd zstd-dev \\\n && TOR_VERSION=$( wget -q https://gitweb.torproject.org/tor.git/plain/ReleaseNotes -O - | grep -m1 \"Changes in version\" | sed 's/^.*[^0-9]\\([0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\\).*$/\\1/' ;) \\\n && TOR_TARBALL_NAME=\"tor-${TOR_VERSION}.tar.gz\" \\\n && TOR_TARBALL_LINK=\"https://dist.torproject.org/${TOR_TARBALL_NAME}\" \\\n && wget -q $TOR_TARBALL_LINK \\\n && wget $TOR_TARBALL_LINK.asc \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 ipv4.pool.sks-keyservers.net keys.gnupg.net pgp.mit.edu; do echo \"Fetching GPG key $TOR_GPG_KEY from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$TOR_GPG_KEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $TOR_GPG_KEY\" >&2 \\\n && exit 1 ; gpg --verify $TOR_TARBALL_NAME.asc \\\n && tar xf $TOR_TARBALL_NAME \\\n && cd tor-$TOR_VERSION \\\n && ./configure \\\n && make install \\\n && ls -R /usr/local/\n#  Main files created (plus docs):\n#  /usr/local/bin/tor\n#  /usr/local/bin/tor-gencert\n#  /usr/local/bin/tor-resolve\n#  /usr/local/bin/torify\n#  /usr/local/share/tor/geoip\n#  /usr/local/share/tor/geoip6\n#  /usr/local/etc/tor/torrc.sample\nFROM alpine:latest\nMAINTAINER Christian chriswayg@gmail.com\n#  If no Nickname is set, a random string will be added to 'Tor4'\nENV TOR_USER=\"tord\" \\\n    TOR_NICKNAME=\"Tor4\"\n#  Installing dependencies of Tor and pwgen\nRUN apk --no-cache add --update libevent libressl xz-libs zlib zstd pwgen\n#  Copy obfs4proxy & meek-server\nCOPY --from=go-build /usr/local/bin/ /usr/local/bin/\n#  Copy Tor\nCOPY --from=tor-build /usr/local/ /usr/local/\n#  Create an unprivileged tor user\nRUN addgroup -g 19001 -S $TOR_USER \\\n && adduser -u 19001 -G $TOR_USER -S $TOR_USER\n#  Copy Tor configuration file\nCOPY ./torrc /etc/tor/torrc\n#  Copy docker-entrypoint\nCOPY ./scripts/ /usr/local/bin/\n#  Persist data\nVOLUME /etc/tor /var/lib/tor\n#  ORPort, DirPort, SocksPort, ObfsproxyPort, MeekPort\nEXPOSE 9001/tcp 9030/tcp 9050/tcp 54444/tcp 7002/tcp\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"tor\", \"-f\", \"/etc/tor/torrc\"]\n","injectedSmells":[],"originalDockerfileHash":"54f0b2bc6688e7cb6c0a2c4ee6130a43","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for Tor Relay Server with obfs4proxy (Multi-Stage build)\nFROM golang:alpine AS go-build\n#   Build /go/bin/obfs4proxy & /go/bin/meek-server\nRUN apk --no-cache add --update git \\\n && go get -v git.torproject.org/pluggable-transports/obfs4.git/obfs4proxy \\\n && go get -v git.torproject.org/pluggable-transports/meek.git/meek-server \\\n && cp -rv /go/bin /usr/local/\nFROM alpine:latest AS tor-build\nARG TOR_GPG_KEY=0x6AFEE6D49E92B601\n#   Install prerequisites\nRUN apk --no-cache add --update gnupg build-base libevent libevent-dev libressl libressl-dev xz-libs xz-dev zlib zlib-dev zstd zstd-dev \\\n && TOR_VERSION=$( wget -q https://gitweb.torproject.org/tor.git/plain/ReleaseNotes -O - | grep -m1 \"Changes in version\" | sed 's/^.*[^0-9]\\([0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\\).*$/\\1/' ;) \\\n && TOR_TARBALL_NAME=\"tor-${TOR_VERSION}.tar.gz\" \\\n && TOR_TARBALL_LINK=\"https://dist.torproject.org/${TOR_TARBALL_NAME}\" \\\n && wget -q $TOR_TARBALL_LINK \\\n && wget $TOR_TARBALL_LINK.asc \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 ipv4.pool.sks-keyservers.net keys.gnupg.net pgp.mit.edu; do echo \"Fetching GPG key $TOR_GPG_KEY from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$TOR_GPG_KEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $TOR_GPG_KEY\" >&2 \\\n && exit 1 ; gpg --verify $TOR_TARBALL_NAME.asc \\\n && tar xf $TOR_TARBALL_NAME \\\n && cd tor-$TOR_VERSION \\\n && ./configure \\\n && make install \\\n && ls -R /usr/local/\n#   Main files created (plus docs):\n#   /usr/local/bin/tor\n#   /usr/local/bin/tor-gencert\n#   /usr/local/bin/tor-resolve\n#   /usr/local/bin/torify\n#   /usr/local/share/tor/geoip\n#   /usr/local/share/tor/geoip6\n#   /usr/local/etc/tor/torrc.sample\nFROM alpine:latest\nMAINTAINER Christian chriswayg@gmail.com\n#   If no Nickname is set, a random string will be added to 'Tor4'\nENV TOR_USER=\"tord\" \\\n    TOR_NICKNAME=\"Tor4\"\n#   Installing dependencies of Tor and pwgen\nRUN apk --no-cache add --update libevent libressl xz-libs zlib zstd pwgen\n#   Copy obfs4proxy & meek-server\nCOPY --from=go-build /usr/local/bin/ /usr/local/bin/\n#   Copy Tor\nCOPY --from=tor-build /usr/local/ /usr/local/\n#   Create an unprivileged tor user\nRUN addgroup -g 19001 -S $TOR_USER \\\n && adduser -u 19001 -G $TOR_USER -S $TOR_USER\n#   Copy Tor configuration file\nCOPY ./torrc /etc/tor/torrc\n#   Copy docker-entrypoint\nCOPY ./scripts/ /usr/local/bin/\n#   Persist data\nVOLUME /etc/tor /var/lib/tor\n#   ORPort, DirPort, SocksPort, ObfsproxyPort, MeekPort\nEXPOSE 9001/tcp 9030/tcp 9050/tcp 54444/tcp 7002/tcp\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"tor\", \"-f\", \"/etc/tor/torrc\"]\n","originalDockerfileUglifiedHash":"8dce8d5f99aa2f21adfcc1d9a71df95b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/21410d4305d2fabbb689896b5002c9a918099b59.dockerfile"}