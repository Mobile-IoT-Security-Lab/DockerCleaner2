{"seed":1118684373,"processedDockerfileHash":"ab2ad1b671f4d611b71e7b0a3f2fd20f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Louis BAYLE, 2018-10-11\n#   Version 0.4\n#   2018-10-11: update apache 2.4.25 fur security updates\nFROM centos:centos7\nMAINTAINER Louis BAYLE <lbayle.work@gmail.com>\n#   ====================================================\n#   Container with Apache, PHP7, Mantis, CodevTT\n#   ====================================================\n#   https://hub.docker.com/r/lbayle/codevtt/\n#  note: You'll need one more container : centos/mariadb\n#   ====================================================\n#   build & run\n#   ====================================================\n#   docker build --rm -t codevtt:latest .\n#   docker run --name codevtt -h codevtt -d -p 80:80 --link mariadb lbayle/codevtt:latest\n#   docker run --name codevtt -h codevtt -d -p 80:80 -p 443:443 -v /etc/ssl/certs:/etc/ssl/certs --link mariadb lbayle/codevtt:latest\n#   docker exec -it codevtt bash\n#   docker run --name mariadb -h mariadb -d -e MYSQL_ROOT_PASSWORD=my_password -e MYSQL_DATABASE=bugtracker centos/mariadb:latest\n#   docker exec -i  mariadb mysql -uroot -pmy_password --force bugtracker < mantis_codevtt_freshInstall.sql\n#   ====================================================\n#   Set ATOS proxy\n#  ENV http_proxy=http://193.56.47.8:8080\n#  ENV https_proxy=http://193.56.47.8:8080\n#  RUN sed -i '2iproxy=http:\\/\\/193.56.47.8:8080' /etc/yum.conf\n#   ------------------\n#   Add Epel & Remi repositories\nRUN yum -y update \\\n && yum -y install --setopt=tsflags=nodocs epel-release \\\n && rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm \\\n && yum clean all\n#   ------------------\n#   Add CodeIT repositories (apache 2.4.25)\n#   https://crosp.net/blog/administration/install-latest-apache-server-centos-7/\n#   https://codeit.guru/en_US/\n#  RUN cd /etc/yum.repos.d \\\n#      && wget https://repo.codeit.guru/codeit.el`rpm -q --qf \"%{VERSION}\" $(rpm -q --whatprovides redhat-release)`.repo\n#   ------------------\nRUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7 /etc/pki/rpm-gpg/RPM-GPG-KEY-remi /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n#   ------------------\n#   install tools\nRUN yum -y install vim-enhanced wget git git-gui unzip p7zip \\\n && yum clean all\n#   ------------------\n#   install MySQL command-line client (for debug purpose)\n#  RUN yum -y --setopt=tsflags=nodocs install mariadb && yum clean all\n#   ------------------\n#   install Apache\nRUN yum -y --setopt=tsflags=nodocs install httpd mod_ssl openssl \\\n && yum clean all\n#   Installing PHP 7.0\nRUN yum -y --enablerepo=remi-php70 install php-cli php php-fpm php-common php-mysqlnd php-xml php-adodb php-curl php-gd php-mcrypt php-ldap php-imap php-soap php-mbstring php-pecl-memcache php-pecl-memcached php-pecl-zip php-pecl-xdebug php-pear php-pdo php-bcmath php-process php-tidy php-intl phpmyadmin \\\n && yum clean all\n#   ------------------\n#   set system timezone\nENV TZ=\"Europe/Paris\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   set PHP timezone\nRUN echo 'date.timezone=Europe/Paris' > /etc/php.d/00-docker-php-date-timezone.ini\n#  RUN sed -i \"s/^;date.timezone =.*$/date.timezone = \\\"Europe\\/Paris\\\"/\" /etc/php.ini\n#   configure phpMyAdmin (assuming DB container name is 'mariadb', see --link option)\nRUN ln -s /usr/share/phpMyAdmin/ /var/www/phpmyadmin \\\n && sed -i \"s/localhost/mariadb/\" /etc/phpMyAdmin/config.inc.php\n#   allow to connect to phpMyAdmin from any container/host\nRUN sed -i \"s/Require ip 127.0.0.1/Require ip 172.17/\" /etc/httpd/conf.d/phpMyAdmin.conf \\\n && sed -i \"s/Allow from 127.0.0.1/Allow from 172.17/\" /etc/httpd/conf.d/phpMyAdmin.conf\n#   ------------------\n#   install MantisBT\nENV MANTIS_VER=\"2.21.0\"\nENV MANTIS_URL=\"https://downloads.sourceforge.net/project/mantisbt/mantis-stable/${MANTIS_VER}/mantisbt-${MANTIS_VER}.tar.gz\"\nENV MANTIS_FILE=\"mantisbt-${MANTIS_VER}.tar.gz\"\nRUN set -xe \\\n && cd /var/www/html \\\n && wget ${MANTIS_URL} \\\n && tar -xvf ${MANTIS_FILE} \\\n && rm ${MANTIS_FILE} \\\n && mv mantisbt-${MANTIS_VER} mantis \\\n && chown -R apache:apache mantis \\\n && chmod -R g+w mantis\n#   ------------------\n#   install CodevTT\nENV CODEVTT_VER=\"1.4.0\"\nENV CODEVTT_FILE=\"codevtt_v${CODEVTT_VER}.zip\"\nENV CODEVTT_URL=\"http://codevtt.org/site/index.php?sdmon=files/${CODEVTT_FILE}\"\nRUN set -xe \\\n && cd /var/www/html \\\n && wget ${CODEVTT_URL} -O ${CODEVTT_FILE} \\\n && unzip ${CODEVTT_FILE} \\\n && rm ${CODEVTT_FILE} \\\n && mv codevtt_v${CODEVTT_VER} codevtt \\\n && chown -R apache:apache codevtt \\\n && chmod -R g+w codevtt\nRUN set -xe \\\n && cd /var/www/html/mantis/plugins \\\n && ln -s /var/www/html/codevtt/mantis_plugin/mantis_2_0/CodevTT \\\n && mkdir -p /tmp/codevtt/logs \\\n && chown -R apache:apache /tmp/codevtt\n#   ------------------\n#   Adding config files (bugtracker)\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /etc/httpd/conf.d/ssl.conf httpd_config/ssl.conf\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /etc httpd_config/php.ini\nCOPY mantis_config/config_inc.php /var/www/html/mantis/config\nCOPY mantis_config/custom_constants_inc.php /var/www/html/mantis/config\nCOPY mantis_config/custom_relationships_inc.php /var/www/html/mantis/config\nCOPY mantis_config/custom_strings_inc.php /var/www/html/mantis/config\nCOPY codevtt_config/config.ini /var/www/html/codevtt\nCOPY codevtt_config/log4php.xml /var/www/html/codevtt\nCOPY index.html /var/www/html/index.html\n#   ------------------\nEXPOSE 80/tcp\nENTRYPOINT [\"/usr/sbin/httpd\"]\nCMD [\"-D\", \"FOREGROUND\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Louis BAYLE, 2018-10-11\n#  Version 0.4\n#  2018-10-11: update apache 2.4.25 fur security updates\nFROM centos:centos7\nMAINTAINER Louis BAYLE <lbayle.work@gmail.com>\n#  ====================================================\n#  Container with Apache, PHP7, Mantis, CodevTT\n#  ====================================================\n#  https://hub.docker.com/r/lbayle/codevtt/\n# note: You'll need one more container : centos/mariadb\n#  ====================================================\n#  build & run\n#  ====================================================\n#  docker build --rm -t codevtt:latest .\n#  docker run --name codevtt -h codevtt -d -p 80:80 --link mariadb lbayle/codevtt:latest\n#  docker run --name codevtt -h codevtt -d -p 80:80 -p 443:443 -v /etc/ssl/certs:/etc/ssl/certs --link mariadb lbayle/codevtt:latest\n#  docker exec -it codevtt bash\n#  docker run --name mariadb -h mariadb -d -e MYSQL_ROOT_PASSWORD=my_password -e MYSQL_DATABASE=bugtracker centos/mariadb:latest\n#  docker exec -i  mariadb mysql -uroot -pmy_password --force bugtracker < mantis_codevtt_freshInstall.sql\n#  ====================================================\n#  Set ATOS proxy\n# ENV http_proxy=http://193.56.47.8:8080\n# ENV https_proxy=http://193.56.47.8:8080\n# RUN sed -i '2iproxy=http:\\/\\/193.56.47.8:8080' /etc/yum.conf\n#  ------------------\n#  Add Epel & Remi repositories\nRUN yum -y update \\\n && yum -y install --setopt=tsflags=nodocs epel-release \\\n && rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm \\\n && yum clean all\n#  ------------------\n#  Add CodeIT repositories (apache 2.4.25)\n#  https://crosp.net/blog/administration/install-latest-apache-server-centos-7/\n#  https://codeit.guru/en_US/\n# RUN cd /etc/yum.repos.d \\\n#     && wget https://repo.codeit.guru/codeit.el`rpm -q --qf \"%{VERSION}\" $(rpm -q --whatprovides redhat-release)`.repo\n#  ------------------\nRUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7 /etc/pki/rpm-gpg/RPM-GPG-KEY-remi /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n#  ------------------\n#  install tools\nRUN yum -y install vim-enhanced wget git git-gui unzip p7zip \\\n && yum clean all\n#  ------------------\n#  install MySQL command-line client (for debug purpose)\n# RUN yum -y --setopt=tsflags=nodocs install mariadb && yum clean all\n#  ------------------\n#  install Apache\nRUN yum -y --setopt=tsflags=nodocs install httpd mod_ssl openssl \\\n && yum clean all\n#  Installing PHP 7.0\nRUN yum -y --enablerepo=remi-php70 install php-cli php php-fpm php-common php-mysqlnd php-xml php-adodb php-curl php-gd php-mcrypt php-ldap php-imap php-soap php-mbstring php-pecl-memcache php-pecl-memcached php-pecl-zip php-pecl-xdebug php-pear php-pdo php-bcmath php-process php-tidy php-intl phpmyadmin \\\n && yum clean all\n#  ------------------\n#  set system timezone\nENV TZ=\"Europe/Paris\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#  set PHP timezone\nRUN echo 'date.timezone=Europe/Paris' > /etc/php.d/00-docker-php-date-timezone.ini\n# RUN sed -i \"s/^;date.timezone =.*$/date.timezone = \\\"Europe\\/Paris\\\"/\" /etc/php.ini\n#  configure phpMyAdmin (assuming DB container name is 'mariadb', see --link option)\nRUN ln -s /usr/share/phpMyAdmin/ /var/www/phpmyadmin \\\n && sed -i \"s/localhost/mariadb/\" /etc/phpMyAdmin/config.inc.php\n#  allow to connect to phpMyAdmin from any container/host\nRUN sed -i \"s/Require ip 127.0.0.1/Require ip 172.17/\" /etc/httpd/conf.d/phpMyAdmin.conf \\\n && sed -i \"s/Allow from 127.0.0.1/Allow from 172.17/\" /etc/httpd/conf.d/phpMyAdmin.conf\n#  ------------------\n#  install MantisBT\nENV MANTIS_VER=\"2.21.0\"\nENV MANTIS_URL=\"https://downloads.sourceforge.net/project/mantisbt/mantis-stable/${MANTIS_VER}/mantisbt-${MANTIS_VER}.tar.gz\"\nENV MANTIS_FILE=\"mantisbt-${MANTIS_VER}.tar.gz\"\nRUN set -xe \\\n && cd /var/www/html \\\n && wget ${MANTIS_URL} \\\n && tar -xvf ${MANTIS_FILE} \\\n && rm ${MANTIS_FILE} \\\n && mv mantisbt-${MANTIS_VER} mantis \\\n && chown -R apache:apache mantis \\\n && chmod -R g+w mantis\n#  ------------------\n#  install CodevTT\nENV CODEVTT_VER=\"1.4.0\"\nENV CODEVTT_FILE=\"codevtt_v${CODEVTT_VER}.zip\"\nENV CODEVTT_URL=\"http://codevtt.org/site/index.php?sdmon=files/${CODEVTT_FILE}\"\nRUN set -xe \\\n && cd /var/www/html \\\n && wget ${CODEVTT_URL} -O ${CODEVTT_FILE} \\\n && unzip ${CODEVTT_FILE} \\\n && rm ${CODEVTT_FILE} \\\n && mv codevtt_v${CODEVTT_VER} codevtt \\\n && chown -R apache:apache codevtt \\\n && chmod -R g+w codevtt\nRUN set -xe \\\n && cd /var/www/html/mantis/plugins \\\n && ln -s /var/www/html/codevtt/mantis_plugin/mantis_2_0/CodevTT \\\n && mkdir -p /tmp/codevtt/logs \\\n && chown -R apache:apache /tmp/codevtt\n#  ------------------\n#  Adding config files (bugtracker)\nADD httpd_config/ssl.conf /etc/httpd/conf.d/ssl.conf\nADD httpd_config/php.ini /etc\nADD mantis_config/config_inc.php /var/www/html/mantis/config\nADD mantis_config/custom_constants_inc.php /var/www/html/mantis/config\nADD mantis_config/custom_relationships_inc.php /var/www/html/mantis/config\nADD mantis_config/custom_strings_inc.php /var/www/html/mantis/config\nADD codevtt_config/config.ini /var/www/html/codevtt\nADD codevtt_config/log4php.xml /var/www/html/codevtt\nADD index.html /var/www/html/index.html\n#  ------------------\nEXPOSE 80/tcp\nENTRYPOINT [\"/usr/sbin/httpd\"]\nCMD [\"-D\", \"FOREGROUND\"]\n","injectedSmells":[],"originalDockerfileHash":"22d50ff53f2e955fe83d51cf42adc4d5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Louis BAYLE, 2018-10-11\n#   Version 0.4\n#   2018-10-11: update apache 2.4.25 fur security updates\nFROM centos:centos7\nMAINTAINER Louis BAYLE <lbayle.work@gmail.com>\n#   ====================================================\n#   Container with Apache, PHP7, Mantis, CodevTT\n#   ====================================================\n#   https://hub.docker.com/r/lbayle/codevtt/\n#  note: You'll need one more container : centos/mariadb\n#   ====================================================\n#   build & run\n#   ====================================================\n#   docker build --rm -t codevtt:latest .\n#   docker run --name codevtt -h codevtt -d -p 80:80 --link mariadb lbayle/codevtt:latest\n#   docker run --name codevtt -h codevtt -d -p 80:80 -p 443:443 -v /etc/ssl/certs:/etc/ssl/certs --link mariadb lbayle/codevtt:latest\n#   docker exec -it codevtt bash\n#   docker run --name mariadb -h mariadb -d -e MYSQL_ROOT_PASSWORD=my_password -e MYSQL_DATABASE=bugtracker centos/mariadb:latest\n#   docker exec -i  mariadb mysql -uroot -pmy_password --force bugtracker < mantis_codevtt_freshInstall.sql\n#   ====================================================\n#   Set ATOS proxy\n#  ENV http_proxy=http://193.56.47.8:8080\n#  ENV https_proxy=http://193.56.47.8:8080\n#  RUN sed -i '2iproxy=http:\\/\\/193.56.47.8:8080' /etc/yum.conf\n#   ------------------\n#   Add Epel & Remi repositories\nRUN yum -y update \\\n && yum -y install --setopt=tsflags=nodocs epel-release \\\n && rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm \\\n && yum clean all\n#   ------------------\n#   Add CodeIT repositories (apache 2.4.25)\n#   https://crosp.net/blog/administration/install-latest-apache-server-centos-7/\n#   https://codeit.guru/en_US/\n#  RUN cd /etc/yum.repos.d \\\n#      && wget https://repo.codeit.guru/codeit.el`rpm -q --qf \"%{VERSION}\" $(rpm -q --whatprovides redhat-release)`.repo\n#   ------------------\nRUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7 /etc/pki/rpm-gpg/RPM-GPG-KEY-remi /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n#   ------------------\n#   install tools\nRUN yum -y install vim-enhanced wget git git-gui unzip p7zip \\\n && yum clean all\n#   ------------------\n#   install MySQL command-line client (for debug purpose)\n#  RUN yum -y --setopt=tsflags=nodocs install mariadb && yum clean all\n#   ------------------\n#   install Apache\nRUN yum -y --setopt=tsflags=nodocs install httpd mod_ssl openssl \\\n && yum clean all\n#   Installing PHP 7.0\nRUN yum -y --enablerepo=remi-php70 install php-cli php php-fpm php-common php-mysqlnd php-xml php-adodb php-curl php-gd php-mcrypt php-ldap php-imap php-soap php-mbstring php-pecl-memcache php-pecl-memcached php-pecl-zip php-pecl-xdebug php-pear php-pdo php-bcmath php-process php-tidy php-intl phpmyadmin \\\n && yum clean all\n#   ------------------\n#   set system timezone\nENV TZ=\"Europe/Paris\"\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   set PHP timezone\nRUN echo 'date.timezone=Europe/Paris' > /etc/php.d/00-docker-php-date-timezone.ini\n#  RUN sed -i \"s/^;date.timezone =.*$/date.timezone = \\\"Europe\\/Paris\\\"/\" /etc/php.ini\n#   configure phpMyAdmin (assuming DB container name is 'mariadb', see --link option)\nRUN ln -s /usr/share/phpMyAdmin/ /var/www/phpmyadmin \\\n && sed -i \"s/localhost/mariadb/\" /etc/phpMyAdmin/config.inc.php\n#   allow to connect to phpMyAdmin from any container/host\nRUN sed -i \"s/Require ip 127.0.0.1/Require ip 172.17/\" /etc/httpd/conf.d/phpMyAdmin.conf \\\n && sed -i \"s/Allow from 127.0.0.1/Allow from 172.17/\" /etc/httpd/conf.d/phpMyAdmin.conf\n#   ------------------\n#   install MantisBT\nENV MANTIS_VER=\"2.21.0\"\nENV MANTIS_URL=\"https://downloads.sourceforge.net/project/mantisbt/mantis-stable/${MANTIS_VER}/mantisbt-${MANTIS_VER}.tar.gz\"\nENV MANTIS_FILE=\"mantisbt-${MANTIS_VER}.tar.gz\"\nRUN set -xe \\\n && cd /var/www/html \\\n && wget ${MANTIS_URL} \\\n && tar -xvf ${MANTIS_FILE} \\\n && rm ${MANTIS_FILE} \\\n && mv mantisbt-${MANTIS_VER} mantis \\\n && chown -R apache:apache mantis \\\n && chmod -R g+w mantis\n#   ------------------\n#   install CodevTT\nENV CODEVTT_VER=\"1.4.0\"\nENV CODEVTT_FILE=\"codevtt_v${CODEVTT_VER}.zip\"\nENV CODEVTT_URL=\"http://codevtt.org/site/index.php?sdmon=files/${CODEVTT_FILE}\"\nRUN set -xe \\\n && cd /var/www/html \\\n && wget ${CODEVTT_URL} -O ${CODEVTT_FILE} \\\n && unzip ${CODEVTT_FILE} \\\n && rm ${CODEVTT_FILE} \\\n && mv codevtt_v${CODEVTT_VER} codevtt \\\n && chown -R apache:apache codevtt \\\n && chmod -R g+w codevtt\nRUN set -xe \\\n && cd /var/www/html/mantis/plugins \\\n && ln -s /var/www/html/codevtt/mantis_plugin/mantis_2_0/CodevTT \\\n && mkdir -p /tmp/codevtt/logs \\\n && chown -R apache:apache /tmp/codevtt\n#   ------------------\n#   Adding config files (bugtracker)\nADD httpd_config/ssl.conf /etc/httpd/conf.d/ssl.conf\nADD httpd_config/php.ini /etc\nADD mantis_config/config_inc.php /var/www/html/mantis/config\nADD mantis_config/custom_constants_inc.php /var/www/html/mantis/config\nADD mantis_config/custom_relationships_inc.php /var/www/html/mantis/config\nADD mantis_config/custom_strings_inc.php /var/www/html/mantis/config\nADD codevtt_config/config.ini /var/www/html/codevtt\nADD codevtt_config/log4php.xml /var/www/html/codevtt\nADD index.html /var/www/html/index.html\n#   ------------------\nEXPOSE 80/tcp\nENTRYPOINT [\"/usr/sbin/httpd\"]\nCMD [\"-D\", \"FOREGROUND\"]\n","originalDockerfileUglifiedHash":"d9a112cda164eb898df98625780bea20","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/da39d1b41486f419420064ca74a9961eb1de9bd3.dockerfile"}