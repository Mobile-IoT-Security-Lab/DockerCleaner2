{"seed":2903756757,"processedDockerfileHash":"74fbed32786c7a44dfc8017fcd5e9894","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   ------------------------------------------------------------------------------\n#   Based on a work at https://github.com/docker/docker & https://github/kdelfour/supervisor-docker\n#   ------------------------------------------------------------------------------\n#   Pull base image.\nFROM ubuntu\n#   Last base packages update\nLABEL BASE_PACKAGES_UPDATE=\"2015-07-11\"\n#   ------------------------------------------------------------------------------\n#   Install base\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.9ubuntu3 g++=4:12.2.0-3ubuntu1 curl=7.88.1-7ubuntu1 libssl-dev=3.0.8-1ubuntu1 apache2-utils=2.4.55-1ubuntu2 git=1:2.39.2-1ubuntu1 libxml2-dev=2.9.14+dfsg-1.1build2 sshfs=3.7.3-1.1build1 make=4.3-4.1build1 autoconf=2.71-3 automake=1:1.16.5-1.3 libtool=2.4.7-5 gcc=4:12.2.0-3ubuntu1 g++=4:12.2.0-3ubuntu1 gperf=3.1-1build1 flex=2.6.4-8.1 bison=2:3.8.2+dfsg-1build1 texinfo=6.8-6build2 gawk=1:5.2.1-2 ncurses-dev libexpat-dev python sed=4.9-1 python-serial srecord=1.64-3 bc=1.07.1-3build1 wget=1.21.3-1ubuntu1 llvm-3.4 libclang1=1:15.0-56~exp2 libclang-dev=1:15.0-56~exp2 mc=3:4.8.29-2 vim=2:9.0.1000-4ubuntu2 screen=4.9.0-4 -y\nRUN apt-get install --no-install-recommends openjdk-7-jre -y\n#   ------------------------------------------------------------------------------\n#   Install Supervisor.\nRUN apt-get install --no-install-recommends supervisor=4.2.1-1ubuntu1 -y\nRUN sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/' /etc/supervisor/supervisord.conf\n#   ------------------------------------------------------------------------------\n#   Install sshd\nRUN apt-get install --no-install-recommends openssh-server=1:9.0p1-1ubuntu8 -y\nRUN mkdir /var/run/sshd\nRUN echo 'root:root' | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n#   ------------------------------------------------------------------------------\n#   Install Node.js\nRUN curl -sL https://deb.nodesource.com/setup | bash -\nRUN apt-get install --no-install-recommends nodejs=18.13.0+dfsg1-1ubuntu2 -y\n#   ------------------------------------------------------------------------------\n#   Versions\nENV VERSION=\"0.6\"\nENV SDK_VERSION=\"\\\"1.2\\\"\"\nENV SPIFFY_VERSION=\"\\\"1.0.4\\\"\"\nLABEL description=\"version: ${VERSION}\\nsdk: ${SDK_VERSION}\\nspiffy: ${SPIFFY_VERSION}\"\nLABEL release_notes=\"Update for Sming PR#148\"\n#   ------------------------------------------------------------------------------\n#   Install yuicompressor\nWORKDIR /tmp\nRUN wget https://github.com/yui/yuicompressor/releases/download/v2.4.8/yuicompressor-2.4.8.jar\nRUN mv /tmp/yuicompressor-2.4.8.jar /usr/local/share/\nRUN echo \"java -jar /usr/local/share/yuicompressor-2.4.8.jar \\\"$@\\\"\" > /usr/local/bin/yuicompressor\nRUN chmod 755 /usr/local/bin/yuicompressor\n#   ------------------------------------------------------------------------------\n#   Install spiffy\nWORKDIR /tmp/\nRUN wget https://bintray.com/artifact/download/kireevco/generic/spiffy-${SPIFFY_VERSION}-linux-x86_64.tar.gz \\\n && tar -zxf spiffy-${SPIFFY_VERSION}-linux-x86_64.tar.gz \\\n && mv spiffy /usr/local/bin/ \\\n && chmod +rx /usr/local/bin/spiffy\n#   ------------------------------------------------------------------------------\n#   Install esp-open-sdk\nWORKDIR /tmp/\nRUN mkdir -p /opt/esp-open-sdk\nRUN wget https://bintray.com/artifact/download/kireevco/generic/esp-open-sdk-${SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar -zxf esp-open-sdk-${SDK_VERSION}-linux-x86_64.tar.gz -C /opt/esp-open-sdk\nRUN chmod +rx /opt/esp-open-sdk/sdk/tools/gen_appbin.py\n#   ------------------------------------------------------------------------------\n#   Install patched esptool\nWORKDIR /opt/esp-open-sdk/esptool\nRUN mv esptool.py esptool.py_orig\nRUN wget https://raw.githubusercontent.com/nodemcu/nodemcu-firmware/master/tools/esptool.py\nRUN chmod +rx esptool.py\n#   ------------------------------------------------------------------------------\n#   Install Cloud9\nRUN git clone https://github.com/c9/core.git /opt/cloud9\nWORKDIR /opt/cloud9\nRUN scripts/install-sdk.sh\nRUN npm install\n#   Tweak standlone.js conf\nRUN sed -i -e 's_127.0.0.1_0.0.0.0_g' /opt/cloud9/configs/standalone.js\n#   ------------------------------------------------------------------------------\n#   Add supervisord configs\nCOPY conf/* /etc/supervisor/conf.d/\n#   ------------------------------------------------------------------------------\n#   Create workdir\nRUN mkdir -p /root/workspace\n#   ------------------------------------------------------------------------------\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   ------------------------------------------------------------------------------\n#   Clone Sming Core\nRUN git clone https://github.com/kireevco/Sming.git /opt/sming\nRUN ln -s /opt/sming /root/sming-examples\n#   ------------------------------------------------------------------------------\n#   Enviromnent settings\nENV ESP_HOME=\"/opt/esp-open-sdk\"\nENV SMING_HOME=\"/opt/sming/Sming\"\nENV CXX=\"/opt/esp-open-sdk/xtensa-lx106-elf/bin/xtensa-lx106-elf-g++\"\nENV CC=\"/opt/esp-open-sdk/xtensa-lx106-elf/bin/xtensa-lx106-elf-gcc\"\nENV PATH=\"/opt/esp-open-sdk/xtensa-lx106-elf/bin:${PATH}\"\nENV CPATH=\"${ESP_HOME}/sdk/include:${SMING_HOME}:${SMING_HOME}/include:${SMING_HOME}/SmingCore:${SMING_HOME}/system/include:${SMING_HOME}/Libraries:${SMING_HOME}/Services:${SMING_HOME}/Wiring:/opt/sming:./include\"\nENV LIBRARY_PATH=\"${SMING_HOME}/compiler/lib:\"\nENV COM_SPEED_ESPTOOL=\"230400\"\nRUN env > /etc/environment\n#   ------------------------------------------------------------------------------\n#   Expose ports.\nEXPOSE 22/tcp\nEXPOSE 80/tcp\nEXPOSE 10000/tcp\n#   ------------------------------------------------------------------------------\n#   Start supervisor, define default command.\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  ------------------------------------------------------------------------------\n#  Based on a work at https://github.com/docker/docker & https://github/kdelfour/supervisor-docker\n#  ------------------------------------------------------------------------------\n#  Pull base image.\nFROM ubuntu\n#  Last base packages update\nLABEL BASE_PACKAGES_UPDATE=\"2015-07-11\"\n#  ------------------------------------------------------------------------------\n#  Install base\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install build-essential g++ curl libssl-dev apache2-utils git libxml2-dev sshfs make autoconf automake libtool gcc g++ gperf flex bison texinfo gawk ncurses-dev libexpat-dev python sed python-serial srecord bc wget llvm-3.4 libclang1 libclang-dev mc vim screen -y\nRUN apt-get install openjdk-7-jre -y\n#  ------------------------------------------------------------------------------\n#  Install Supervisor.\nRUN apt-get install supervisor -y\nRUN sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/' /etc/supervisor/supervisord.conf\n#  ------------------------------------------------------------------------------\n#  Install sshd\nRUN apt-get install openssh-server -y\nRUN mkdir /var/run/sshd\nRUN echo 'root:root' | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n#  ------------------------------------------------------------------------------\n#  Install Node.js\nRUN curl -sL https://deb.nodesource.com/setup | bash -\nRUN apt-get install nodejs -y\n#  ------------------------------------------------------------------------------\n#  Versions\nENV VERSION=\"0.6\"\nENV SDK_VERSION=\"\\\"1.2\\\"\"\nENV SPIFFY_VERSION=\"\\\"1.0.4\\\"\"\nLABEL description=\"version: ${VERSION}\\nsdk: ${SDK_VERSION}\\nspiffy: ${SPIFFY_VERSION}\"\nLABEL release_notes=\"Update for Sming PR#148\"\n#  ------------------------------------------------------------------------------\n#  Install yuicompressor\nWORKDIR /tmp\nRUN wget https://github.com/yui/yuicompressor/releases/download/v2.4.8/yuicompressor-2.4.8.jar\nRUN mv /tmp/yuicompressor-2.4.8.jar /usr/local/share/\nRUN echo \"java -jar /usr/local/share/yuicompressor-2.4.8.jar \\\"$@\\\"\" > /usr/local/bin/yuicompressor\nRUN chmod 755 /usr/local/bin/yuicompressor\n#  ------------------------------------------------------------------------------\n#  Install spiffy\nWORKDIR /tmp/\nRUN wget https://bintray.com/artifact/download/kireevco/generic/spiffy-${SPIFFY_VERSION}-linux-x86_64.tar.gz \\\n && tar -zxf spiffy-${SPIFFY_VERSION}-linux-x86_64.tar.gz \\\n && mv spiffy /usr/local/bin/ \\\n && chmod +rx /usr/local/bin/spiffy\n#  ------------------------------------------------------------------------------\n#  Install esp-open-sdk\nWORKDIR /tmp/\nRUN mkdir -p /opt/esp-open-sdk\nRUN wget https://bintray.com/artifact/download/kireevco/generic/esp-open-sdk-${SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar -zxf esp-open-sdk-${SDK_VERSION}-linux-x86_64.tar.gz -C /opt/esp-open-sdk\nRUN chmod +rx /opt/esp-open-sdk/sdk/tools/gen_appbin.py\n#  ------------------------------------------------------------------------------\n#  Install patched esptool\nWORKDIR /opt/esp-open-sdk/esptool\nRUN mv esptool.py esptool.py_orig\nRUN wget https://raw.githubusercontent.com/nodemcu/nodemcu-firmware/master/tools/esptool.py\nRUN chmod +rx esptool.py\n#  ------------------------------------------------------------------------------\n#  Install Cloud9\nRUN git clone https://github.com/c9/core.git /opt/cloud9\nWORKDIR /opt/cloud9\nRUN scripts/install-sdk.sh\nRUN npm install\n#  Tweak standlone.js conf\nRUN sed -i -e 's_127.0.0.1_0.0.0.0_g' /opt/cloud9/configs/standalone.js\n#  ------------------------------------------------------------------------------\n#  Add supervisord configs\nADD conf/* /etc/supervisor/conf.d/\n#  ------------------------------------------------------------------------------\n#  Create workdir\nRUN mkdir -p /root/workspace\n#  ------------------------------------------------------------------------------\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  ------------------------------------------------------------------------------\n#  Clone Sming Core\nRUN git clone https://github.com/kireevco/Sming.git /opt/sming\nRUN ln -s /opt/sming /root/sming-examples\n#  ------------------------------------------------------------------------------\n#  Enviromnent settings\nENV ESP_HOME=\"/opt/esp-open-sdk\"\nENV SMING_HOME=\"/opt/sming/Sming\"\nENV CXX=\"/opt/esp-open-sdk/xtensa-lx106-elf/bin/xtensa-lx106-elf-g++\"\nENV CC=\"/opt/esp-open-sdk/xtensa-lx106-elf/bin/xtensa-lx106-elf-gcc\"\nENV PATH=\"/opt/esp-open-sdk/xtensa-lx106-elf/bin:${PATH}\"\nENV CPATH=\"${ESP_HOME}/sdk/include:${SMING_HOME}:${SMING_HOME}/include:${SMING_HOME}/SmingCore:${SMING_HOME}/system/include:${SMING_HOME}/Libraries:${SMING_HOME}/Services:${SMING_HOME}/Wiring:/opt/sming:./include\"\nENV LIBRARY_PATH=\"${SMING_HOME}/compiler/lib:\"\nENV COM_SPEED_ESPTOOL=\"230400\"\nRUN env > /etc/environment\n#  ------------------------------------------------------------------------------\n#  Expose ports.\nEXPOSE 22/tcp\nEXPOSE 80/tcp\nEXPOSE 10000/tcp\n#  ------------------------------------------------------------------------------\n#  Start supervisor, define default command.\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"cd0ebb581e7cde70617de615ad13cfd5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ------------------------------------------------------------------------------\n#   Based on a work at https://github.com/docker/docker & https://github/kdelfour/supervisor-docker\n#   ------------------------------------------------------------------------------\n#   Pull base image.\nFROM ubuntu\n#   Last base packages update\nLABEL BASE_PACKAGES_UPDATE=\"2015-07-11\"\n#   ------------------------------------------------------------------------------\n#   Install base\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install build-essential g++ curl libssl-dev apache2-utils git libxml2-dev sshfs make autoconf automake libtool gcc g++ gperf flex bison texinfo gawk ncurses-dev libexpat-dev python sed python-serial srecord bc wget llvm-3.4 libclang1 libclang-dev mc vim screen -y\nRUN apt-get install openjdk-7-jre -y\n#   ------------------------------------------------------------------------------\n#   Install Supervisor.\nRUN apt-get install supervisor -y\nRUN sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/' /etc/supervisor/supervisord.conf\n#   ------------------------------------------------------------------------------\n#   Install sshd\nRUN apt-get install openssh-server -y\nRUN mkdir /var/run/sshd\nRUN echo 'root:root' | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n#   ------------------------------------------------------------------------------\n#   Install Node.js\nRUN curl -sL https://deb.nodesource.com/setup | bash -\nRUN apt-get install nodejs -y\n#   ------------------------------------------------------------------------------\n#   Versions\nENV VERSION=\"0.6\"\nENV SDK_VERSION=\"\\\"1.2\\\"\"\nENV SPIFFY_VERSION=\"\\\"1.0.4\\\"\"\nLABEL description=\"version: ${VERSION}\\nsdk: ${SDK_VERSION}\\nspiffy: ${SPIFFY_VERSION}\"\nLABEL release_notes=\"Update for Sming PR#148\"\n#   ------------------------------------------------------------------------------\n#   Install yuicompressor\nWORKDIR /tmp\nRUN wget https://github.com/yui/yuicompressor/releases/download/v2.4.8/yuicompressor-2.4.8.jar\nRUN mv /tmp/yuicompressor-2.4.8.jar /usr/local/share/\nRUN echo \"java -jar /usr/local/share/yuicompressor-2.4.8.jar \\\"$@\\\"\" > /usr/local/bin/yuicompressor\nRUN chmod 755 /usr/local/bin/yuicompressor\n#   ------------------------------------------------------------------------------\n#   Install spiffy\nWORKDIR /tmp/\nRUN wget https://bintray.com/artifact/download/kireevco/generic/spiffy-${SPIFFY_VERSION}-linux-x86_64.tar.gz \\\n && tar -zxf spiffy-${SPIFFY_VERSION}-linux-x86_64.tar.gz \\\n && mv spiffy /usr/local/bin/ \\\n && chmod +rx /usr/local/bin/spiffy\n#   ------------------------------------------------------------------------------\n#   Install esp-open-sdk\nWORKDIR /tmp/\nRUN mkdir -p /opt/esp-open-sdk\nRUN wget https://bintray.com/artifact/download/kireevco/generic/esp-open-sdk-${SDK_VERSION}-linux-x86_64.tar.gz \\\n && tar -zxf esp-open-sdk-${SDK_VERSION}-linux-x86_64.tar.gz -C /opt/esp-open-sdk\nRUN chmod +rx /opt/esp-open-sdk/sdk/tools/gen_appbin.py\n#   ------------------------------------------------------------------------------\n#   Install patched esptool\nWORKDIR /opt/esp-open-sdk/esptool\nRUN mv esptool.py esptool.py_orig\nRUN wget https://raw.githubusercontent.com/nodemcu/nodemcu-firmware/master/tools/esptool.py\nRUN chmod +rx esptool.py\n#   ------------------------------------------------------------------------------\n#   Install Cloud9\nRUN git clone https://github.com/c9/core.git /opt/cloud9\nWORKDIR /opt/cloud9\nRUN scripts/install-sdk.sh\nRUN npm install\n#   Tweak standlone.js conf\nRUN sed -i -e 's_127.0.0.1_0.0.0.0_g' /opt/cloud9/configs/standalone.js\n#   ------------------------------------------------------------------------------\n#   Add supervisord configs\nADD conf/* /etc/supervisor/conf.d/\n#   ------------------------------------------------------------------------------\n#   Create workdir\nRUN mkdir -p /root/workspace\n#   ------------------------------------------------------------------------------\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   ------------------------------------------------------------------------------\n#   Clone Sming Core\nRUN git clone https://github.com/kireevco/Sming.git /opt/sming\nRUN ln -s /opt/sming /root/sming-examples\n#   ------------------------------------------------------------------------------\n#   Enviromnent settings\nENV ESP_HOME=\"/opt/esp-open-sdk\"\nENV SMING_HOME=\"/opt/sming/Sming\"\nENV CXX=\"/opt/esp-open-sdk/xtensa-lx106-elf/bin/xtensa-lx106-elf-g++\"\nENV CC=\"/opt/esp-open-sdk/xtensa-lx106-elf/bin/xtensa-lx106-elf-gcc\"\nENV PATH=\"/opt/esp-open-sdk/xtensa-lx106-elf/bin:${PATH}\"\nENV CPATH=\"${ESP_HOME}/sdk/include:${SMING_HOME}:${SMING_HOME}/include:${SMING_HOME}/SmingCore:${SMING_HOME}/system/include:${SMING_HOME}/Libraries:${SMING_HOME}/Services:${SMING_HOME}/Wiring:/opt/sming:./include\"\nENV LIBRARY_PATH=\"${SMING_HOME}/compiler/lib:\"\nENV COM_SPEED_ESPTOOL=\"230400\"\nRUN env > /etc/environment\n#   ------------------------------------------------------------------------------\n#   Expose ports.\nEXPOSE 22/tcp\nEXPOSE 80/tcp\nEXPOSE 10000/tcp\n#   ------------------------------------------------------------------------------\n#   Start supervisor, define default command.\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"c66f1790962445c8066ad8960dfd79d2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3c660444ad4bcad6ee8f04f9bba9ce6e60a09726.dockerfile"}