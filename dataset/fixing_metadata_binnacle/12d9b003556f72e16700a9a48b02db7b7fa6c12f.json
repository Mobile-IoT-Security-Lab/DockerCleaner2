{"seed":1353013122,"processedDockerfileHash":"1079c397d5f591897caea317f23dc6dc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"#   Author: Marco Bonvini\n#   email: bonvini.m@gmail.com\n#\nFROM ubuntu:16.04\nMAINTAINER MarcoBonvini bonvini.m@gmail.com\n#   Avoid interaction\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   =========== Basic Configuration ======================================================\n#   Update the system\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends sudo=1.8.16-0ubuntu1.10 build-essential=12.1ubuntu2 git=1:2.7.4-0ubuntu1.10 python=2.7.12-1~16.04 python-dev=2.7.12-1~16.04 python-setuptools=20.7.0-1 make=4.1-6 g++=4:5.3.1-1ubuntu1 cmake=3.5.1-1ubuntu3 gfortran=4:5.3.1-1ubuntu1 ipython=2.4.1-1 swig=3.0.8-0ubuntu3 ant=1.9.6-1ubuntu1.1 python-numpy=1:1.11.0-1ubuntu1 python-scipy=0.17.0-1 python-matplotlib=1.5.1-1ubuntu1 cython=0.23.4-0ubuntu5 python-lxml=3.5.0-1ubuntu0.4 python-nose=1.3.7-1 python-jpype=0.5.4.2-3 libboost-dev=1.58.0.1ubuntu1 jcc=2.21-1.1 git=1:2.7.4-0ubuntu1.10 subversion=1.9.3-2ubuntu1.3 wget=1.17.1-1ubuntu1.5 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 pkg-config=0.29.1-0ubuntu1 clang=1:3.8-33ubuntu3.1 -y\n#   ========== Install pip for managing python packages ==================================\nRUN apt-get install --no-install-recommends python-pip=8.1.1-2ubuntu0.6 python-lxml=3.5.0-1ubuntu0.4 -y \\\n && pip install cython==0.29.34\n#   ========== Create an user and environmental variables associated to it ===============\nRUN adduser --disabled-password --gecos '' docker\nRUN adduser docker sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   ========= Add folders that will contains code before and after installation ==========\nRUN mkdir -p /home/docker/to_install \\\n && mkdir -p /home/docker/installed/Ipopt\n#   ========= Install JAVA ===============================================================\nRUN apt-get install --no-install-recommends openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Define JAVA_HOME envirponmental variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> /root/.bashrc \\\n && echo \"export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> /home/docker/.bashrc\n#   ======== Install BLAS and LAPACK =====================================================\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-utils=1.2.35 -y \\\n && apt-get install --no-install-recommends libblas-dev=3.6.0-2ubuntu2 liblapack-dev=3.6.0-2ubuntu2 -y\n#   ======== Install numpy, scipy, Matplotlib ============================================\nRUN apt-get install --no-install-recommends pkgconf=0.9.12-1 libpng-dev libfreetype6-dev=2.6.1-0.1ubuntu2.5 -y \\\n && pip install numpy==1.24.2 \\\n && apt-get install --no-install-recommends python-matplotlib=1.5.1-1ubuntu1 -y \\\n && pip install scipy==1.10.1\n#   ======== Start IPOPT installation ====================================================\n#   Retrieve and copy all the dependencies needed by Ipopt\nWORKDIR /home/docker/to_install/Ipopt\nRUN wget http://www.coin-or.org/download/source/Ipopt/Ipopt-3.12.4.tgz\nRUN tar xvf ./Ipopt-3.12.4.tgz\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Blas\nRUN ./get.Blas\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Lapack\nRUN ./get.Lapack\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Mumps\nRUN ./get.Mumps\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Metis\nRUN ./get.Metis\n#   Configure and compile Ipopt\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/\nRUN mkdir build\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/build\nRUN ../configure --prefix=/home/docker/installed/Ipopt \\\n && make \\\n && make install\n#   ======== Start JModelica.org installation ===========================================0\n#   Intall autoconf which is called by the casADi installation\nRUN apt-get install --no-install-recommends autoconf=2.69-9 -y\n#   Checkout the JModelica.org source code\nRUN mkdir -p /home/docker/installed/JModelica\nWORKDIR /home/docker/to_install\nRUN svn co https://svn.jmodelica.org/trunk JModelica.org\nWORKDIR /home/docker/to_install/JModelica.org\nRUN mkdir build\nWORKDIR /home/docker/to_install/JModelica.org/build\nRUN ../configure --prefix=/home/docker/installed/JModelica --with-ipopt=/home/docker/installed/Ipopt\nRUN make \\\n && make install \\\n && make install_casadi \\\n && make casadi_interface\n#   Define the environmental variables needed by JModelica\n#   JModelica.org supports the following environment variables:\n#\n#   - JMODELICA_HOME containing the path to the JModelica.org installation\n#     directory (again, without spaces or ~ in the path).\n#   - PYTHONPATH containing the path to the directory $JMODELICA_HOME/Python.\n#   - JAVA_HOME containing the path to a Java JRE or SDK installation.\n#   - IPOPT_HOME containing the path to an Ipopt installation directory.\n#   - LD_LIBRARY_PATH containing the path to the $IPOPT_HOME/lib directory\n#     (Linux only.)\n#   - MODELICAPATH containing a sequence of paths representing directories\n#     where Modelica libraries are located, separated by colons.\nENV JMODELICA_HOME=\"/home/docker/installed/JModelica\"\nENV IPOPT_HOME=\"/home/docker/installed/Ipopt\"\nENV CPPAD_HOME=\"/home/docker/installed/JModelica/ThirdParty/CppAD/\"\nENV SUNDIALS_HOME=\"/home/docker/installed/JModelica/ThirdParty/Sundials\"\nENV PYTHONPATH=\"/home/docker/installed/JModelica/Python/:\"\nENV LD_LIBRARY_PATH=\"/home/docker/installed/Ipopt/lib/:/home/docker/installed/JModelica/ThirdParty/Sundials/lib:/home/docker/installed/JModelica/ThirdParty/CasADi/lib\"\nENV SEPARATE_PROCESS_JVM=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\nENV MODELICAPATH=\"/home/docker/installed/JModelica/ThirdParty/MSL:/home/docker/modelica\"\n#   ============ Expose ports ============================================================\nEXPOSE 8888/tcp\n#   ============ Install IPython notebook ================================================\nRUN apt-get install --no-install-recommends ipython=2.4.1-1 ipython-notebook=2.4.1-1 -y\n#   ============ Set some environmental vars and change user =============================\nUSER docker\nRUN mkdir /home/docker/modelica \\\n && mkdir /home/docker/ipynotebooks\nENV USER=\"docker\"\nENV DISPLAY=\":0.0\"\nWORKDIR /home/docker/\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Author: Marco Bonvini\n#  email: bonvini.m@gmail.com\n#\nFROM ubuntu:16.04\nMAINTAINER MarcoBonvini bonvini.m@gmail.com\n#  Avoid interaction\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  =========== Basic Configuration ======================================================\n#  Update the system\nRUN apt-get update -y \\\n && apt-get install sudo build-essential git python python-dev python-setuptools make g++ cmake gfortran ipython swig ant python-numpy python-scipy python-matplotlib cython python-lxml python-nose python-jpype libboost-dev jcc git subversion wget zlib1g-dev pkg-config clang -y\n#  ========== Install pip for managing python packages ==================================\nRUN apt-get install python-pip python-lxml -y \\\n && pip install cython\n#  ========== Create an user and environmental variables associated to it ===============\nRUN adduser --disabled-password --gecos '' docker\nRUN adduser docker sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#  ========= Add folders that will contains code before and after installation ==========\nRUN mkdir -p /home/docker/to_install \\\n && mkdir -p /home/docker/installed/Ipopt\n#  ========= Install JAVA ===============================================================\nRUN apt-get install openjdk-8-jdk -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Define JAVA_HOME envirponmental variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> /root/.bashrc \\\n && echo \"export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> /home/docker/.bashrc\n#  ======== Install BLAS and LAPACK =====================================================\nRUN apt-get update -y \\\n && apt-get install apt-utils -y \\\n && apt-get install libblas-dev liblapack-dev -y\n#  ======== Install numpy, scipy, Matplotlib ============================================\nRUN apt-get install pkgconf libpng-dev libfreetype6-dev -y \\\n && pip install numpy \\\n && apt-get install python-matplotlib -y \\\n && pip install scipy\n#  ======== Start IPOPT installation ====================================================\n#  Retrieve and copy all the dependencies needed by Ipopt\nWORKDIR /home/docker/to_install/Ipopt\nRUN wget http://www.coin-or.org/download/source/Ipopt/Ipopt-3.12.4.tgz\nRUN tar xvf ./Ipopt-3.12.4.tgz\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Blas\nRUN ./get.Blas\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Lapack\nRUN ./get.Lapack\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Mumps\nRUN ./get.Mumps\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Metis\nRUN ./get.Metis\n#  Configure and compile Ipopt\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/\nRUN mkdir build\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/build\nRUN ../configure --prefix=/home/docker/installed/Ipopt \\\n && make \\\n && make install\n#  ======== Start JModelica.org installation ===========================================0\n#  Intall autoconf which is called by the casADi installation\nRUN apt-get install autoconf -y\n#  Checkout the JModelica.org source code\nRUN mkdir -p /home/docker/installed/JModelica\nWORKDIR /home/docker/to_install\nRUN svn co https://svn.jmodelica.org/trunk JModelica.org\nWORKDIR /home/docker/to_install/JModelica.org\nRUN mkdir build\nWORKDIR /home/docker/to_install/JModelica.org/build\nRUN ../configure --prefix=/home/docker/installed/JModelica --with-ipopt=/home/docker/installed/Ipopt\nRUN make \\\n && make install \\\n && make install_casadi \\\n && make casadi_interface\n#  Define the environmental variables needed by JModelica\n#  JModelica.org supports the following environment variables:\n#\n#  - JMODELICA_HOME containing the path to the JModelica.org installation\n#    directory (again, without spaces or ~ in the path).\n#  - PYTHONPATH containing the path to the directory $JMODELICA_HOME/Python.\n#  - JAVA_HOME containing the path to a Java JRE or SDK installation.\n#  - IPOPT_HOME containing the path to an Ipopt installation directory.\n#  - LD_LIBRARY_PATH containing the path to the $IPOPT_HOME/lib directory\n#    (Linux only.)\n#  - MODELICAPATH containing a sequence of paths representing directories\n#    where Modelica libraries are located, separated by colons.\nENV JMODELICA_HOME=\"/home/docker/installed/JModelica\"\nENV IPOPT_HOME=\"/home/docker/installed/Ipopt\"\nENV CPPAD_HOME=\"/home/docker/installed/JModelica/ThirdParty/CppAD/\"\nENV SUNDIALS_HOME=\"/home/docker/installed/JModelica/ThirdParty/Sundials\"\nENV PYTHONPATH=\"/home/docker/installed/JModelica/Python/:\"\nENV LD_LIBRARY_PATH=\"/home/docker/installed/Ipopt/lib/:/home/docker/installed/JModelica/ThirdParty/Sundials/lib:/home/docker/installed/JModelica/ThirdParty/CasADi/lib\"\nENV SEPARATE_PROCESS_JVM=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\nENV MODELICAPATH=\"/home/docker/installed/JModelica/ThirdParty/MSL:/home/docker/modelica\"\n#  ============ Expose ports ============================================================\nEXPOSE 8888/tcp\n#  ============ Install IPython notebook ================================================\nRUN apt-get install ipython ipython-notebook -y\n#  ============ Set some environmental vars and change user =============================\nUSER docker\nRUN mkdir /home/docker/modelica \\\n && mkdir /home/docker/ipynotebooks\nENV USER=\"docker\"\nENV DISPLAY=\":0.0\"\nWORKDIR /home/docker/\n","injectedSmells":[],"originalDockerfileHash":"9fe0d7cbce915a4653bebbcc50a55782","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Author: Marco Bonvini\n#   email: bonvini.m@gmail.com\n#\nFROM ubuntu:16.04\nMAINTAINER MarcoBonvini bonvini.m@gmail.com\n#   Avoid interaction\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   =========== Basic Configuration ======================================================\n#   Update the system\nRUN apt-get update -y \\\n && apt-get install sudo build-essential git python python-dev python-setuptools make g++ cmake gfortran ipython swig ant python-numpy python-scipy python-matplotlib cython python-lxml python-nose python-jpype libboost-dev jcc git subversion wget zlib1g-dev pkg-config clang -y\n#   ========== Install pip for managing python packages ==================================\nRUN apt-get install python-pip python-lxml -y \\\n && pip install cython\n#   ========== Create an user and environmental variables associated to it ===============\nRUN adduser --disabled-password --gecos '' docker\nRUN adduser docker sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   ========= Add folders that will contains code before and after installation ==========\nRUN mkdir -p /home/docker/to_install \\\n && mkdir -p /home/docker/installed/Ipopt\n#   ========= Install JAVA ===============================================================\nRUN apt-get install openjdk-8-jdk -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Define JAVA_HOME envirponmental variable\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> /root/.bashrc \\\n && echo \"export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> /home/docker/.bashrc\n#   ======== Install BLAS and LAPACK =====================================================\nRUN apt-get update -y \\\n && apt-get install apt-utils -y \\\n && apt-get install libblas-dev liblapack-dev -y\n#   ======== Install numpy, scipy, Matplotlib ============================================\nRUN apt-get install pkgconf libpng-dev libfreetype6-dev -y \\\n && pip install numpy \\\n && apt-get install python-matplotlib -y \\\n && pip install scipy\n#   ======== Start IPOPT installation ====================================================\n#   Retrieve and copy all the dependencies needed by Ipopt\nWORKDIR /home/docker/to_install/Ipopt\nRUN wget http://www.coin-or.org/download/source/Ipopt/Ipopt-3.12.4.tgz\nRUN tar xvf ./Ipopt-3.12.4.tgz\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Blas\nRUN ./get.Blas\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Lapack\nRUN ./get.Lapack\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Mumps\nRUN ./get.Mumps\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/ThirdParty/Metis\nRUN ./get.Metis\n#   Configure and compile Ipopt\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/\nRUN mkdir build\nWORKDIR /home/docker/to_install/Ipopt/Ipopt-3.12.4/build\nRUN ../configure --prefix=/home/docker/installed/Ipopt \\\n && make \\\n && make install\n#   ======== Start JModelica.org installation ===========================================0\n#   Intall autoconf which is called by the casADi installation\nRUN apt-get install autoconf -y\n#   Checkout the JModelica.org source code\nRUN mkdir -p /home/docker/installed/JModelica\nWORKDIR /home/docker/to_install\nRUN svn co https://svn.jmodelica.org/trunk JModelica.org\nWORKDIR /home/docker/to_install/JModelica.org\nRUN mkdir build\nWORKDIR /home/docker/to_install/JModelica.org/build\nRUN ../configure --prefix=/home/docker/installed/JModelica --with-ipopt=/home/docker/installed/Ipopt\nRUN make \\\n && make install \\\n && make install_casadi \\\n && make casadi_interface\n#   Define the environmental variables needed by JModelica\n#   JModelica.org supports the following environment variables:\n#\n#   - JMODELICA_HOME containing the path to the JModelica.org installation\n#     directory (again, without spaces or ~ in the path).\n#   - PYTHONPATH containing the path to the directory $JMODELICA_HOME/Python.\n#   - JAVA_HOME containing the path to a Java JRE or SDK installation.\n#   - IPOPT_HOME containing the path to an Ipopt installation directory.\n#   - LD_LIBRARY_PATH containing the path to the $IPOPT_HOME/lib directory\n#     (Linux only.)\n#   - MODELICAPATH containing a sequence of paths representing directories\n#     where Modelica libraries are located, separated by colons.\nENV JMODELICA_HOME=\"/home/docker/installed/JModelica\"\nENV IPOPT_HOME=\"/home/docker/installed/Ipopt\"\nENV CPPAD_HOME=\"/home/docker/installed/JModelica/ThirdParty/CppAD/\"\nENV SUNDIALS_HOME=\"/home/docker/installed/JModelica/ThirdParty/Sundials\"\nENV PYTHONPATH=\"/home/docker/installed/JModelica/Python/:\"\nENV LD_LIBRARY_PATH=\"/home/docker/installed/Ipopt/lib/:/home/docker/installed/JModelica/ThirdParty/Sundials/lib:/home/docker/installed/JModelica/ThirdParty/CasADi/lib\"\nENV SEPARATE_PROCESS_JVM=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\nENV MODELICAPATH=\"/home/docker/installed/JModelica/ThirdParty/MSL:/home/docker/modelica\"\n#   ============ Expose ports ============================================================\nEXPOSE 8888/tcp\n#   ============ Install IPython notebook ================================================\nRUN apt-get install ipython ipython-notebook -y\n#   ============ Set some environmental vars and change user =============================\nUSER docker\nRUN mkdir /home/docker/modelica \\\n && mkdir /home/docker/ipynotebooks\nENV USER=\"docker\"\nENV DISPLAY=\":0.0\"\nWORKDIR /home/docker/\n","originalDockerfileUglifiedHash":"cdc4b12e6c8fa592cedf32400cfa83fa","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/12d9b003556f72e16700a9a48b02db7b7fa6c12f.dockerfile"}