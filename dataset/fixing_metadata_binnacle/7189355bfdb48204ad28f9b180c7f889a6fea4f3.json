{"seed":2454071577,"processedDockerfileHash":"1ad95e4c5cfe35e68cd422677ba3c8b3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   声明变量\nARG INSTALL_XDEBUG\nFROM php:7.1.9-fpm\nRUN echo \"deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib\" > /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb http://mirrors.aliyun.com/debian-security stretch/updates main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian-security stretch/updates main\" >> /etc/apt/sources.list \\\n && echo \"deb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\" >> /etc/apt/sources.list\n#   安装基础\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl sudo iputils-ping libicu-dev libmemcached-dev libz-dev libpq-dev libjpeg-dev libpng-dev libfreetype6-dev libssl-dev libmcrypt-dev libxml2-dev libbz2-dev libjpeg62-turbo-dev git vim openssh-server openssh-client subversion -y \\\n && rm -rf /var/lib/apt/lists/*\n#   安装PHP插件\nRUN docker-php-ext-configure bcmath --enable-bcmath \\\n && docker-php-ext-configure pcntl --enable-pcntl \\\n && docker-php-ext-configure pdo_mysql --with-pdo-mysql \\\n && docker-php-ext-configure pdo_pgsql --with-pgsql \\\n && docker-php-ext-configure mbstring --enable-mbstring \\\n && docker-php-ext-configure soap --enable-soap \\\n && docker-php-ext-install bcmath intl mbstring mysqli pcntl pdo_mysql pdo_pgsql soap sockets zip \\\n && docker-php-ext-configure gd --enable-gd-native-ttf --with-jpeg-dir=/usr/lib --with-freetype-dir=/usr/include/freetype2 \\\n && docker-php-ext-install gd \\\n && docker-php-ext-install opcache \\\n && docker-php-ext-enable opcache\n#  # AST\n#  RUN git clone https://github.com/nikic/php-ast /usr/src/php/ext/ast/ && \\\n#      docker-php-ext-configure ast && \\\n#      docker-php-ext-install ast\n#   ICU - intl requirements for Symfony\n#   Debian is out of date, and Symfony expects the latest - so build from source, unless a better alternative exists(?)\n#  RUN curl -sS -o /tmp/icu.tar.gz -L http://download.icu-project.org/files/icu4c/58.2/icu4c-58_2-src.tgz \\\n#      && tar -zxf /tmp/icu.tar.gz -C /tmp \\\n#      && cd /tmp/icu/source \\\n#      && ./configure --prefix=/usr/local \\\n#      && make \\\n#      && make install\n#  RUN docker-php-ext-configure intl --with-icu-dir=/usr/local \\\n#      && docker-php-ext-install intl\n#   安装 Redis 扩展\nCOPY ./redis-3.1.3.tgz /home/redis.tgz\nRUN pecl install /home/redis.tgz \\\n && echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini\n#   安装 PHP Memcached 扩展\nRUN curl -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\" \\\n && mkdir -p memcached \\\n && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n && (cd memcached \\\n && phpize \\\n && ./configure \\\n && make -j$( nproc ;) \\\n && make install ) \\\n && rm -r memcached \\\n && rm /tmp/memcached.tar.gz \\\n && docker-php-ext-enable memcached\n#   安装 PHP MongoDB 扩展\n#  RUN pecl install mongodb && \\\n#      docker-php-ext-enable mongodb\n#   复制 opcache 配置\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n#   安装xDebug,如果启用\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install xdebug \\\n && docker-php-ext-enable xdebug ; fi\n#   复制xdebug信任用于远程调试\n#   COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n#   复制时区配置\nCOPY ./timezone.ini /usr/local/etc/php/conf.d/timezone.ini\n#   设置时区\nRUN rm /etc/localtime\nRUN ln -s /usr/share/zoneinfo/Europe/London /etc/localtime\nRUN \"date\"\n#   Short open tags fix - another Symfony requirements\nCOPY ./custom-php.ini /usr/local/etc/php/conf.d/custom-php.ini\n#   Composer\nENV COMPOSER_HOME=\"/var/www/.composer\"\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer\nRUN composer config -g repo.packagist composer https://packagist.laravel-china.org\nRUN chown -R www-data:www-data /var/www/\n#   用户公钥\nRUN mkdir /root/.ssh \\\n && chown -R www-data:www-data /root/.ssh\n#   RUN sudo ssh-keygen -t rsa -C \"kfkdock\"  -f ~/.ssh/id_dsa\n#  RUN ssh-keygen -t rsa -C \"kfkdock\" -f /root/.ssh/id_rsa\n#   部署公钥\nRUN mkdir /var/www/.ssh \\\n && chown -R www-data:www-data /var/www/.ssh\n#  RUN sudo -Hu www-data ssh-keygen -t rsa  -f /var/www/.ssh/id_rsa\n#   coding webhook 日志\nRUN mkdir /var/log/webhook \\\n && chown -R www-data:www-data /var/log/webhook \\\n && sudo -Hu www-data touch /var/log/webhook/coding_webhook.log\nRUN mkdir -p $COMPOSER_HOME/cache\nVOLUME $COMPOSER_HOME\nWORKDIR /var/www\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  声明变量\nARG INSTALL_XDEBUG\nFROM php:7.1.9-fpm\nRUN echo \"deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib\" > /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb http://mirrors.aliyun.com/debian-security stretch/updates main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian-security stretch/updates main\" >> /etc/apt/sources.list \\\n && echo \"deb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\" >> /etc/apt/sources.list\n#  安装基础\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl sudo iputils-ping libicu-dev libmemcached-dev libz-dev libpq-dev libjpeg-dev libpng-dev libfreetype6-dev libssl-dev libmcrypt-dev libxml2-dev libbz2-dev libjpeg62-turbo-dev git vim openssh-server openssh-client subversion -y \\\n && rm -rf /var/lib/apt/lists/*\n#  安装PHP插件\nRUN docker-php-ext-configure bcmath --enable-bcmath \\\n && docker-php-ext-configure pcntl --enable-pcntl \\\n && docker-php-ext-configure pdo_mysql --with-pdo-mysql \\\n && docker-php-ext-configure pdo_pgsql --with-pgsql \\\n && docker-php-ext-configure mbstring --enable-mbstring \\\n && docker-php-ext-configure soap --enable-soap \\\n && docker-php-ext-install bcmath intl mbstring mysqli pcntl pdo_mysql pdo_pgsql soap sockets zip \\\n && docker-php-ext-configure gd --enable-gd-native-ttf --with-jpeg-dir=/usr/lib --with-freetype-dir=/usr/include/freetype2 \\\n && docker-php-ext-install gd \\\n && docker-php-ext-install opcache \\\n && docker-php-ext-enable opcache\n# # AST\n# RUN git clone https://github.com/nikic/php-ast /usr/src/php/ext/ast/ && \\\n#     docker-php-ext-configure ast && \\\n#     docker-php-ext-install ast\n#  ICU - intl requirements for Symfony\n#  Debian is out of date, and Symfony expects the latest - so build from source, unless a better alternative exists(?)\n# RUN curl -sS -o /tmp/icu.tar.gz -L http://download.icu-project.org/files/icu4c/58.2/icu4c-58_2-src.tgz \\\n#     && tar -zxf /tmp/icu.tar.gz -C /tmp \\\n#     && cd /tmp/icu/source \\\n#     && ./configure --prefix=/usr/local \\\n#     && make \\\n#     && make install\n# RUN docker-php-ext-configure intl --with-icu-dir=/usr/local \\\n#     && docker-php-ext-install intl\n#  安装 Redis 扩展\nCOPY ./redis-3.1.3.tgz /home/redis.tgz\nRUN pecl install /home/redis.tgz \\\n && echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini\n#  安装 PHP Memcached 扩展\nRUN curl -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\" \\\n && mkdir -p memcached \\\n && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n && (cd memcached \\\n && phpize \\\n && ./configure \\\n && make -j$( nproc ;) \\\n && make install ) \\\n && rm -r memcached \\\n && rm /tmp/memcached.tar.gz \\\n && docker-php-ext-enable memcached\n#  安装 PHP MongoDB 扩展\n# RUN pecl install mongodb && \\\n#     docker-php-ext-enable mongodb\n#  复制 opcache 配置\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n#  安装xDebug,如果启用\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install xdebug \\\n && docker-php-ext-enable xdebug ; fi\n#  复制xdebug信任用于远程调试\n#  COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n#  复制时区配置\nCOPY ./timezone.ini /usr/local/etc/php/conf.d/timezone.ini\n#  设置时区\nRUN rm /etc/localtime\nRUN ln -s /usr/share/zoneinfo/Europe/London /etc/localtime\nRUN \"date\"\n#  Short open tags fix - another Symfony requirements\nCOPY ./custom-php.ini /usr/local/etc/php/conf.d/custom-php.ini\n#  Composer\nENV COMPOSER_HOME=\"/var/www/.composer\"\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer\nRUN composer config -g repo.packagist composer https://packagist.laravel-china.org\nRUN chown -R www-data:www-data /var/www/\n#  用户公钥\nRUN mkdir /root/.ssh \\\n && chown -R www-data:www-data /root/.ssh\n#  RUN sudo ssh-keygen -t rsa -C \"kfkdock\"  -f ~/.ssh/id_dsa\n# RUN ssh-keygen -t rsa -C \"kfkdock\" -f /root/.ssh/id_rsa\n#  部署公钥\nRUN mkdir /var/www/.ssh \\\n && chown -R www-data:www-data /var/www/.ssh\n# RUN sudo -Hu www-data ssh-keygen -t rsa  -f /var/www/.ssh/id_rsa\n#  coding webhook 日志\nRUN mkdir /var/log/webhook \\\n && chown -R www-data:www-data /var/log/webhook \\\n && sudo -Hu www-data touch /var/log/webhook/coding_webhook.log\nRUN mkdir -p $COMPOSER_HOME/cache\nVOLUME $COMPOSER_HOME\nWORKDIR /var/www\n","injectedSmells":[],"originalDockerfileHash":"679393550c1c141f7f7288cb92462919","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   声明变量\nARG INSTALL_XDEBUG\nFROM php:7.1.9-fpm\nRUN echo \"deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib\" > /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb http://mirrors.aliyun.com/debian-security stretch/updates main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian-security stretch/updates main\" >> /etc/apt/sources.list \\\n && echo \"deb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\" >> /etc/apt/sources.list\n#   安装基础\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl sudo iputils-ping libicu-dev libmemcached-dev libz-dev libpq-dev libjpeg-dev libpng-dev libfreetype6-dev libssl-dev libmcrypt-dev libxml2-dev libbz2-dev libjpeg62-turbo-dev git vim openssh-server openssh-client subversion -y \\\n && rm -rf /var/lib/apt/lists/*\n#   安装PHP插件\nRUN docker-php-ext-configure bcmath --enable-bcmath \\\n && docker-php-ext-configure pcntl --enable-pcntl \\\n && docker-php-ext-configure pdo_mysql --with-pdo-mysql \\\n && docker-php-ext-configure pdo_pgsql --with-pgsql \\\n && docker-php-ext-configure mbstring --enable-mbstring \\\n && docker-php-ext-configure soap --enable-soap \\\n && docker-php-ext-install bcmath intl mbstring mysqli pcntl pdo_mysql pdo_pgsql soap sockets zip \\\n && docker-php-ext-configure gd --enable-gd-native-ttf --with-jpeg-dir=/usr/lib --with-freetype-dir=/usr/include/freetype2 \\\n && docker-php-ext-install gd \\\n && docker-php-ext-install opcache \\\n && docker-php-ext-enable opcache\n#  # AST\n#  RUN git clone https://github.com/nikic/php-ast /usr/src/php/ext/ast/ && \\\n#      docker-php-ext-configure ast && \\\n#      docker-php-ext-install ast\n#   ICU - intl requirements for Symfony\n#   Debian is out of date, and Symfony expects the latest - so build from source, unless a better alternative exists(?)\n#  RUN curl -sS -o /tmp/icu.tar.gz -L http://download.icu-project.org/files/icu4c/58.2/icu4c-58_2-src.tgz \\\n#      && tar -zxf /tmp/icu.tar.gz -C /tmp \\\n#      && cd /tmp/icu/source \\\n#      && ./configure --prefix=/usr/local \\\n#      && make \\\n#      && make install\n#  RUN docker-php-ext-configure intl --with-icu-dir=/usr/local \\\n#      && docker-php-ext-install intl\n#   安装 Redis 扩展\nCOPY ./redis-3.1.3.tgz /home/redis.tgz\nRUN pecl install /home/redis.tgz \\\n && echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini\n#   安装 PHP Memcached 扩展\nRUN curl -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\" \\\n && mkdir -p memcached \\\n && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n && (cd memcached \\\n && phpize \\\n && ./configure \\\n && make -j$( nproc ;) \\\n && make install ) \\\n && rm -r memcached \\\n && rm /tmp/memcached.tar.gz \\\n && docker-php-ext-enable memcached\n#   安装 PHP MongoDB 扩展\n#  RUN pecl install mongodb && \\\n#      docker-php-ext-enable mongodb\n#   复制 opcache 配置\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n#   安装xDebug,如果启用\nRUN if [ ${INSTALL_XDEBUG} = true ] ; then pecl install xdebug \\\n && docker-php-ext-enable xdebug ; fi\n#   复制xdebug信任用于远程调试\n#   COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n#   复制时区配置\nCOPY ./timezone.ini /usr/local/etc/php/conf.d/timezone.ini\n#   设置时区\nRUN rm /etc/localtime\nRUN ln -s /usr/share/zoneinfo/Europe/London /etc/localtime\nRUN \"date\"\n#   Short open tags fix - another Symfony requirements\nCOPY ./custom-php.ini /usr/local/etc/php/conf.d/custom-php.ini\n#   Composer\nENV COMPOSER_HOME=\"/var/www/.composer\"\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer\nRUN composer config -g repo.packagist composer https://packagist.laravel-china.org\nRUN chown -R www-data:www-data /var/www/\n#   用户公钥\nRUN mkdir /root/.ssh \\\n && chown -R www-data:www-data /root/.ssh\n#   RUN sudo ssh-keygen -t rsa -C \"kfkdock\"  -f ~/.ssh/id_dsa\n#  RUN ssh-keygen -t rsa -C \"kfkdock\" -f /root/.ssh/id_rsa\n#   部署公钥\nRUN mkdir /var/www/.ssh \\\n && chown -R www-data:www-data /var/www/.ssh\n#  RUN sudo -Hu www-data ssh-keygen -t rsa  -f /var/www/.ssh/id_rsa\n#   coding webhook 日志\nRUN mkdir /var/log/webhook \\\n && chown -R www-data:www-data /var/log/webhook \\\n && sudo -Hu www-data touch /var/log/webhook/coding_webhook.log\nRUN mkdir -p $COMPOSER_HOME/cache\nVOLUME $COMPOSER_HOME\nWORKDIR /var/www\n","originalDockerfileUglifiedHash":"d46e8635449266e3c7d60c0937c144f3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7189355bfdb48204ad28f9b180c7f889a6fea4f3.dockerfile"}