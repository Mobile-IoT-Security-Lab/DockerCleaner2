{"seed":3959134844,"processedDockerfileHash":"90c4e69f7d2041be05808abfc4f89ba8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Python 3.6.6 base kernel based alpine 3.8\n#   base source from official repository at https://hub.docker.com/python/\nFROM alpine:3.8\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n#   /usr/local in this image only has its own built Python.\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   other runtime dependencies for Python are installed later\nRUN apk add ca-certificates=20191127-r2 --no-cache\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.6\"\nRUN set -ex \\\n && apk add gnupg=2.2.19-r0 tar=1.32-r0 xz=5.2.4-r0 --no-cache --virtual .fetch-deps \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add bzip2-dev=1.0.6-r7 coreutils=8.29-r2 dpkg-dev=1.18.24-r0 dpkg=1.18.24-r0 expat-dev=2.2.8-r0 findutils=4.6.0-r1 gcc=6.4.0-r9 gdbm-dev=1.13-r1 libc-dev=0.7.1-r0 libffi-dev=3.2.1-r4 libnsl-dev=1.0.5-r2 libressl-dev=2.7.5-r0 libtirpc-dev=1.0.3-r0 linux-headers=4.4.6-r2 make=4.2.1-r2 ncurses-dev=6.1_p20180818-r1 pax-utils=1.2.3-r0 readline-dev=7.0.003-r0 sqlite-dev=3.25.3-r4 tcl-dev=8.6.7-r0 tk=8.6.6-r2 tk-dev=8.6.6-r2 xz-dev=5.2.4-r0 zlib-dev=1.2.11-r1 --no-cache --virtual .build-deps \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN cd / ; tar czpf python.tar.gz /usr/local/bin /usr/local/lib/libpython* /usr/local/lib/python3.6* /usr/local/include\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Python 3.6.6 base kernel based alpine 3.8\n#  base source from official repository at https://hub.docker.com/python/\nFROM alpine:3.8\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n#  /usr/local in this image only has its own built Python.\n#  ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  install ca-certificates so that HTTPS works consistently\n#  other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.6\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg expat-dev findutils gcc gdbm-dev libc-dev libffi-dev libnsl-dev libressl-dev libtirpc-dev linux-headers make ncurses-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev xz-dev zlib-dev \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not ( -name '*tkinter*' ) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' | xargs -rt apk add --no-cache --virtual .python-rundeps \\\n && apk del .build-deps \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python \\\n && python3 --version\n#  make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\nRUN cd / ; tar czpf python.tar.gz /usr/local/bin /usr/local/lib/libpython* /usr/local/lib/python3.6* /usr/local/include\n","injectedSmells":[],"originalDockerfileHash":"d82e2ad46507c75067556132ebfb9a7c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Python 3.6.6 base kernel based alpine 3.8\n#   base source from official repository at https://hub.docker.com/python/\nFROM alpine:3.8\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n#   /usr/local in this image only has its own built Python.\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.6\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg expat-dev findutils gcc gdbm-dev libc-dev libffi-dev libnsl-dev libressl-dev libtirpc-dev linux-headers make ncurses-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev xz-dev zlib-dev \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN cd / ; tar czpf python.tar.gz /usr/local/bin /usr/local/lib/libpython* /usr/local/lib/python3.6* /usr/local/include\n","originalDockerfileUglifiedHash":"c64af71268a716de885579be7f8d86eb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e8f886dd282c4a5674b096d1d3adee7bb663045f.dockerfile"}