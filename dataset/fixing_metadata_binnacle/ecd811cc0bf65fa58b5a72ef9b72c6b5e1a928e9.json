{"seed":3386340437,"processedDockerfileHash":"914f0b71971777d65de5fa92fc356e12","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:bionic\nMAINTAINER RStudio Docker <docker@rstudio.com>\n#   update apt & install packages\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential curl git gnupg libboost-all-dev libcurl4-openssl-dev locales lsb-release moreutils openssh-client protobuf-compiler sudo \\\n && rm -rf /var/lib/apt/lists/*\n#   add R apt repository\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9 \\\n && echo \"deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/\" >> /etc/apt/sources.list.d/cran-rstudio.list\n#   Ensure FreeTDS is added to unixodbc upon installation\nRUN echo tdsodbc freetds/addtoodbc boolean true | debconf-set-selections\n#   Install libraries & database related packages separately to break up the layers\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y jags libatlas3-base libcairo2 libcairo2-dev libfftw3-dev libgdal-dev libgraphviz-dev libgsl0-dev libmysqlclient-dev libnetcdf-dev libprocps-dev libproj-dev libprotoc-dev libquantlib0-dev libsasl2-dev libsqliteodbc libxml2-dev libxt-dev libxt6 odbc-postgresql tdsodbc unixodbc unixodbc-dev wget \\\n && rm -rf /var/lib/apt/lists/*\n#   Note: myodbc is not available for bionic: https://launchpad.net/myodbc\nRUN cd /tmp \\\n && wget -q https://dev.mysql.com/get/Downloads/Connector-ODBC/8.0/mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz \\\n && tar zxf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz \\\n && cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/bin/* /usr/local/bin \\\n && cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/lib/* /usr/local/lib \\\n && myodbc-installer -a -d -n \"MySQL\" -t \"Driver=/usr/local/lib/libmyodbc8w.so\" \\\n && myodbc-installer -a -d -n \"MySQL ODBC 8.0 Driver\" -t \"Driver=/usr/local/lib/libmyodbc8w.so\" \\\n && rm -rf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit*\n#   Install JDK and Cargo separately to avoid the recommended packages\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends openjdk-8-jdk cargo \\\n && rm -rf /var/lib/apt/lists/*\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y python-dev python-pip python-virtualenv\n#   Install Julia\nRUN wget -q https://julialang-s3.julialang.org/bin/linux/x64/1.0/julia-1.0.2-linux-x86_64.tar.gz \\\n && tar -C /usr/local -zxf julia-1.0.2-linux-x86_64.tar.gz \\\n && ln -s /usr/local/julia-1.0.2/bin/julia /usr/local/bin/julia \\\n && rm julia-1.0.2-linux-x86_64.tar.gz\n#   Install texlive separately, in three parts, because it is so large.\n#   First install some non-texlive packages which are recommended but will be skipped when we install texlive\n#   in order to not install the documentation.\n#\n#   biber depends on libwww-perl which has a tree of recommended packages\n#   texlive-base depends on xdg-utils which has a tree of recommended packages\n#   texinfo depends upon libxml-libxml-perl which has a tree of recommended packages\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y libfile-homedir-perl libwww-perl libxml-libxml-perl libyaml-tiny-perl ruby tcl tex-gyre tk xdg-utils xzdec \\\n && rm -rf /var/lib/apt/lists/*\n#   First part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends texlive texlive-fonts-extra texlive-generic-recommended \\\n && rm -rf /var/lib/apt/lists/*\n#   Second part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends biber lmodern prosper ps2eps texinfo texlive-bibtex-extra texlive-extra-utils texlive-font-utils texlive-generic-extra texlive-lang-arabic texlive-latex-extra texlive-luatex texlive-pstricks texlive-xetex \\\n && rm -rf /var/lib/apt/lists/*\n#   Set default locale\nRUN update-locale --reset LANG=C.UTF-8\nARG R_VERSION=3.5.3\n#   Install R\nRUN wget https://cdn.rstudio.com/r/ubuntu-1804/R-${R_VERSION}-ubuntu-1804.tar.gz -O /tmp/R-${R_VERSION}.tar.gz \\\n && mkdir -p /opt/R \\\n && tar zx -C /opt/R -f /tmp/R-${R_VERSION}.tar.gz \\\n && ln -s /opt/R/${R_VERSION}/bin/R /usr/bin/R \\\n && ln -s /opt/R/${R_VERSION}/bin/Rscript /usr/bin/Rscript \\\n && ln -s /opt/R/${R_VERSION}/lib/R /usr/lib/R \\\n && rm /tmp/R-${R_VERSION}.tar.gz\n#   set UTF-8\nRUN echo \"LANG=C.UTF-8\" >> /usr/lib/R/etc/Renviron.site\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:bionic\nMAINTAINER RStudio Docker <docker@rstudio.com>\n#  update apt & install packages\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential curl git gnupg libboost-all-dev libcurl4-openssl-dev locales lsb-release moreutils openssh-client protobuf-compiler sudo \\\n && rm -rf /var/lib/apt/lists/*\n#  add R apt repository\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9 \\\n && echo \"deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/\" >> /etc/apt/sources.list.d/cran-rstudio.list\n#  Ensure FreeTDS is added to unixodbc upon installation\nRUN echo tdsodbc freetds/addtoodbc boolean true | debconf-set-selections\n#  Install libraries & database related packages separately to break up the layers\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y jags libatlas3-base libcairo2 libcairo2-dev libfftw3-dev libgdal-dev libgraphviz-dev libgsl0-dev libmysqlclient-dev libnetcdf-dev libprocps-dev libproj-dev libprotoc-dev libquantlib0-dev libsasl2-dev libsqliteodbc libxml2-dev libxt-dev libxt6 odbc-postgresql tdsodbc unixodbc unixodbc-dev wget \\\n && rm -rf /var/lib/apt/lists/*\n#  Note: myodbc is not available for bionic: https://launchpad.net/myodbc\nRUN cd /tmp \\\n && wget -q https://dev.mysql.com/get/Downloads/Connector-ODBC/8.0/mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz \\\n && tar zxf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz \\\n && cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/bin/* /usr/local/bin \\\n && cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/lib/* /usr/local/lib \\\n && myodbc-installer -a -d -n \"MySQL\" -t \"Driver=/usr/local/lib/libmyodbc8w.so\" \\\n && myodbc-installer -a -d -n \"MySQL ODBC 8.0 Driver\" -t \"Driver=/usr/local/lib/libmyodbc8w.so\" \\\n && rm -rf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit*\n#  Install JDK and Cargo separately to avoid the recommended packages\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends openjdk-8-jdk cargo \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y python-dev python-pip python-virtualenv\n#  Install Julia\nRUN wget -q https://julialang-s3.julialang.org/bin/linux/x64/1.0/julia-1.0.2-linux-x86_64.tar.gz \\\n && tar -C /usr/local -zxf julia-1.0.2-linux-x86_64.tar.gz \\\n && ln -s /usr/local/julia-1.0.2/bin/julia /usr/local/bin/julia \\\n && rm julia-1.0.2-linux-x86_64.tar.gz\n#  Install texlive separately, in three parts, because it is so large.\n#  First install some non-texlive packages which are recommended but will be skipped when we install texlive\n#  in order to not install the documentation.\n#\n#  biber depends on libwww-perl which has a tree of recommended packages\n#  texlive-base depends on xdg-utils which has a tree of recommended packages\n#  texinfo depends upon libxml-libxml-perl which has a tree of recommended packages\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y libfile-homedir-perl libwww-perl libxml-libxml-perl libyaml-tiny-perl ruby tcl tex-gyre tk xdg-utils xzdec \\\n && rm -rf /var/lib/apt/lists/*\n#  First part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends texlive texlive-fonts-extra texlive-generic-recommended \\\n && rm -rf /var/lib/apt/lists/*\n#  Second part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends biber lmodern prosper ps2eps texinfo texlive-bibtex-extra texlive-extra-utils texlive-font-utils texlive-generic-extra texlive-lang-arabic texlive-latex-extra texlive-luatex texlive-pstricks texlive-xetex \\\n && rm -rf /var/lib/apt/lists/*\n#  Set default locale\nRUN update-locale --reset LANG=C.UTF-8\nARG R_VERSION=3.5.3\n#  Install R\nRUN wget https://cdn.rstudio.com/r/ubuntu-1804/R-${R_VERSION}-ubuntu-1804.tar.gz -O /tmp/R-${R_VERSION}.tar.gz \\\n && mkdir -p /opt/R \\\n && tar zx -C /opt/R -f /tmp/R-${R_VERSION}.tar.gz \\\n && ln -s /opt/R/${R_VERSION}/bin/R /usr/bin/R \\\n && ln -s /opt/R/${R_VERSION}/bin/Rscript /usr/bin/Rscript \\\n && ln -s /opt/R/${R_VERSION}/lib/R /usr/lib/R \\\n && rm /tmp/R-${R_VERSION}.tar.gz\n#  set UTF-8\nRUN echo \"LANG=C.UTF-8\" >> /usr/lib/R/etc/Renviron.site\n","injectedSmells":[],"originalDockerfileHash":"dbc526823c77eb334b64361dc9d77455","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:bionic\nMAINTAINER RStudio Docker <docker@rstudio.com>\n#   update apt & install packages\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential curl git gnupg libboost-all-dev libcurl4-openssl-dev locales lsb-release moreutils openssh-client protobuf-compiler sudo \\\n && rm -rf /var/lib/apt/lists/*\n#   add R apt repository\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9 \\\n && echo \"deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/\" >> /etc/apt/sources.list.d/cran-rstudio.list\n#   Ensure FreeTDS is added to unixodbc upon installation\nRUN echo tdsodbc freetds/addtoodbc boolean true | debconf-set-selections\n#   Install libraries & database related packages separately to break up the layers\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y jags libatlas3-base libcairo2 libcairo2-dev libfftw3-dev libgdal-dev libgraphviz-dev libgsl0-dev libmysqlclient-dev libnetcdf-dev libprocps-dev libproj-dev libprotoc-dev libquantlib0-dev libsasl2-dev libsqliteodbc libxml2-dev libxt-dev libxt6 odbc-postgresql tdsodbc unixodbc unixodbc-dev wget \\\n && rm -rf /var/lib/apt/lists/*\n#   Note: myodbc is not available for bionic: https://launchpad.net/myodbc\nRUN cd /tmp \\\n && wget -q https://dev.mysql.com/get/Downloads/Connector-ODBC/8.0/mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz \\\n && tar zxf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz \\\n && cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/bin/* /usr/local/bin \\\n && cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/lib/* /usr/local/lib \\\n && myodbc-installer -a -d -n \"MySQL\" -t \"Driver=/usr/local/lib/libmyodbc8w.so\" \\\n && myodbc-installer -a -d -n \"MySQL ODBC 8.0 Driver\" -t \"Driver=/usr/local/lib/libmyodbc8w.so\" \\\n && rm -rf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit*\n#   Install JDK and Cargo separately to avoid the recommended packages\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends openjdk-8-jdk cargo \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y python-dev python-pip python-virtualenv\n#   Install Julia\nRUN wget -q https://julialang-s3.julialang.org/bin/linux/x64/1.0/julia-1.0.2-linux-x86_64.tar.gz \\\n && tar -C /usr/local -zxf julia-1.0.2-linux-x86_64.tar.gz \\\n && ln -s /usr/local/julia-1.0.2/bin/julia /usr/local/bin/julia \\\n && rm julia-1.0.2-linux-x86_64.tar.gz\n#   Install texlive separately, in three parts, because it is so large.\n#   First install some non-texlive packages which are recommended but will be skipped when we install texlive\n#   in order to not install the documentation.\n#\n#   biber depends on libwww-perl which has a tree of recommended packages\n#   texlive-base depends on xdg-utils which has a tree of recommended packages\n#   texinfo depends upon libxml-libxml-perl which has a tree of recommended packages\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y libfile-homedir-perl libwww-perl libxml-libxml-perl libyaml-tiny-perl ruby tcl tex-gyre tk xdg-utils xzdec \\\n && rm -rf /var/lib/apt/lists/*\n#   First part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends texlive texlive-fonts-extra texlive-generic-recommended \\\n && rm -rf /var/lib/apt/lists/*\n#   Second part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends biber lmodern prosper ps2eps texinfo texlive-bibtex-extra texlive-extra-utils texlive-font-utils texlive-generic-extra texlive-lang-arabic texlive-latex-extra texlive-luatex texlive-pstricks texlive-xetex \\\n && rm -rf /var/lib/apt/lists/*\n#   Set default locale\nRUN update-locale --reset LANG=C.UTF-8\nARG R_VERSION=3.5.3\n#   Install R\nRUN wget https://cdn.rstudio.com/r/ubuntu-1804/R-${R_VERSION}-ubuntu-1804.tar.gz -O /tmp/R-${R_VERSION}.tar.gz \\\n && mkdir -p /opt/R \\\n && tar zx -C /opt/R -f /tmp/R-${R_VERSION}.tar.gz \\\n && ln -s /opt/R/${R_VERSION}/bin/R /usr/bin/R \\\n && ln -s /opt/R/${R_VERSION}/bin/Rscript /usr/bin/Rscript \\\n && ln -s /opt/R/${R_VERSION}/lib/R /usr/lib/R \\\n && rm /tmp/R-${R_VERSION}.tar.gz\n#   set UTF-8\nRUN echo \"LANG=C.UTF-8\" >> /usr/lib/R/etc/Renviron.site\n","originalDockerfileUglifiedHash":"7616743330d72bc1050e00b606dc6ae7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ecd811cc0bf65fa58b5a72ef9b72c6b5e1a928e9.dockerfile"}