{"seed":1860362824,"processedDockerfileHash":"192cbfec221fe66177396c3b3edbf42c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.2-fpm\nRUN DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends wget=1.20.1-1.1 gnupg=2.2.12-1+deb10u2 -my )\n#   Install dotdeb repo\nRUN echo \"deb http://packages.dotdeb.org jessie all\" > /etc/apt/sources.list.d/dotdeb.list \\\n && curl -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \\\n && :\n#   Install required libs\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends git=1:2.20.1-2+deb10u8 unzip=6.0-23+deb10u3 libcurl4-openssl-dev=7.64.0-4+deb10u5 libedit-dev=3.1-20181209-1 libssl-dev=1.1.1n-0+deb10u4 libxml2-dev=2.9.4+dfsg1-7+deb10u5 libsqlite3-dev=3.27.2-3+deb10u2 sqlite3=3.27.2-3+deb10u2 libz-dev libpq-dev=11.19-0+deb10u1 libjpeg-dev=1:1.5.2-2+deb10u1 libpng-dev=1.6.36-6 libfreetype6-dev=2.9.1-3+deb10u3 libssl-dev=1.1.1n-0+deb10u4 libmcrypt-dev=2.5.8-3.4 libjudydebian1=1.0.5-5 libjudy-dev=1.0.5-5 nano=3.2-3 procps=2:3.3.15-2 -y ) \\\n && apt-get clean\n#\n#   Configure\n#\nRUN docker-php-ext-configure gd --enable-gd-native-ttf --with-jpeg-dir=/usr/lib --with-freetype-dir=/usr/include/freetype2\n#\n#   Install extensions\n#\nRUN docker-php-ext-install pdo_mysql pcntl sockets bcmath opcache exif tokenizer gd pcntl\nRUN pecl install ev \\\n && docker-php-ext-enable ev\nRUN pecl install swoole \\\n && docker-php-ext-enable swoole\n#  ####################################\n#           XDEBUG EXTENSION:\n#  ####################################\nARG ENABLE_XDEBUG=false\nRUN if [ ${ENABLE_XDEBUG} = true ] ; then git clone https://github.com/xdebug/xdebug.git /tmp/xdebug \\\n && cd /tmp/xdebug \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/xdebug ; fi\n#   Copy xdebug configration for remote debugging\nENV XDEBUGINI_PATH=\"/usr/local/etc/php/conf.d/xdebug.ini\"\nCOPY ./xdebug.ini $XDEBUGINI_PATH\nRUN echo \"xdebug.remote_host=\"`/sbin/ip route | awk '/default/ { print $3 }' ` >> $XDEBUGINI_PATH\n#  ####################################\n#          OPCACHE EXTENSION:\n#  ####################################\nARG INSTALL_OPCACHE=false\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache ; fi\n#   Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n#  ####################################\n#             INTL EXTENSION:\n#  ####################################\nARG INSTALL_INTL=false\nRUN if [ ${INSTALL_INTL} = true ] ; then apt-get update -yqq \\\n && (apt-get update ;apt-get install --no-install-recommends zlib1g-dev=1:1.2.11.dfsg-1+deb10u2 libicu-dev=63.1-6+deb10u3 g++=4:8.3.0-1 -y ) \\\n && docker-php-ext-configure intl \\\n && docker-php-ext-install intl ; fi\n#  ####################################\n#         ImageMagick EXTENSION:\n#  ####################################\nUSER root\nARG INSTALL_IMAGEMAGICK=false\nENV INSTALL_IMAGEMAGICK=\"${INSTALL_IMAGEMAGICK}\"\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ] ; then apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends libmagickwand-dev=8:6.9.10.23+dfsg-2.1+deb10u4 imagemagick=8:6.9.10.23+dfsg-2.1+deb10u4 -y ) \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick ; fi\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\nCOPY ./laravel.ini /usr/local/etc/php/conf.d\nCOPY ./php-fpm.conf /usr/local/etc/php-fpm.d\nRUN rm -r /var/lib/apt/lists/*\nRUN rm -rf /tmp/pear\n#  ####################################\n#   Composer:\n#  ####################################\n#   Install composer and add its bin to the PATH.\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN echo \"\" >> ~/.bashrc \\\n && echo 'export PATH=\"/var/www/railt.org/vendor/bin:$PATH\"' >> ~/.bashrc\nCOPY ./bootstrap.sh /bootstrap.sh\nRUN chmod 0755 /bootstrap.sh\nRUN chmod -R 0777 /var/www\nWORKDIR /var/www/railt.org\nRUN usermod -u 1000 www-data\nEXPOSE 9000/tcp\nCMD [\"/bootstrap.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.2-fpm\nRUN DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install wget gnupg -my\n#  Install dotdeb repo\nRUN echo \"deb http://packages.dotdeb.org jessie all\" > /etc/apt/sources.list.d/dotdeb.list \\\n && curl -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \\\n && apt-get update\n#  Install required libs\nRUN apt-get update \\\n && apt-get install git unzip libcurl4-openssl-dev libedit-dev libssl-dev libxml2-dev libsqlite3-dev sqlite3 libz-dev libpq-dev libjpeg-dev libpng-dev libfreetype6-dev libssl-dev libmcrypt-dev libjudydebian1 libjudy-dev nano procps -y \\\n && apt-get clean\n#\n#  Configure\n#\nRUN docker-php-ext-configure gd --enable-gd-native-ttf --with-jpeg-dir=/usr/lib --with-freetype-dir=/usr/include/freetype2\n#\n#  Install extensions\n#\nRUN docker-php-ext-install pdo_mysql pcntl sockets bcmath opcache exif tokenizer gd pcntl\nRUN pecl install ev \\\n && docker-php-ext-enable ev\nRUN pecl install swoole \\\n && docker-php-ext-enable swoole\n# ####################################\n#          XDEBUG EXTENSION:\n# ####################################\nARG ENABLE_XDEBUG=false\nRUN if [ ${ENABLE_XDEBUG} = true ] ; then git clone https://github.com/xdebug/xdebug.git /tmp/xdebug \\\n && cd /tmp/xdebug \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/xdebug ; fi\n#  Copy xdebug configration for remote debugging\nENV XDEBUGINI_PATH=\"/usr/local/etc/php/conf.d/xdebug.ini\"\nCOPY ./xdebug.ini $XDEBUGINI_PATH\nRUN echo \"xdebug.remote_host=\"`/sbin/ip route | awk '/default/ { print $3 }' ` >> $XDEBUGINI_PATH\n# ####################################\n#         OPCACHE EXTENSION:\n# ####################################\nARG INSTALL_OPCACHE=false\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache ; fi\n#  Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n# ####################################\n#            INTL EXTENSION:\n# ####################################\nARG INSTALL_INTL=false\nRUN if [ ${INSTALL_INTL} = true ] ; then apt-get update -yqq \\\n && apt-get install zlib1g-dev libicu-dev g++ -y \\\n && docker-php-ext-configure intl \\\n && docker-php-ext-install intl ; fi\n# ####################################\n#        ImageMagick EXTENSION:\n# ####################################\nUSER root\nARG INSTALL_IMAGEMAGICK=false\nENV INSTALL_IMAGEMAGICK=\"${INSTALL_IMAGEMAGICK}\"\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ] ; then apt-get update -y \\\n && apt-get install libmagickwand-dev imagemagick -y \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick ; fi\n#\n# --------------------------------------------------------------------------\n#  Final Touch\n# --------------------------------------------------------------------------\n#\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./php-fpm.conf /usr/local/etc/php-fpm.d\nRUN rm -r /var/lib/apt/lists/*\nRUN rm -rf /tmp/pear\n# ####################################\n#  Composer:\n# ####################################\n#  Install composer and add its bin to the PATH.\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN echo \"\" >> ~/.bashrc \\\n && echo 'export PATH=\"/var/www/railt.org/vendor/bin:$PATH\"' >> ~/.bashrc\nADD ./bootstrap.sh /bootstrap.sh\nRUN chmod 0755 /bootstrap.sh\nRUN chmod -R 0777 /var/www\nWORKDIR /var/www/railt.org\nRUN usermod -u 1000 www-data\nEXPOSE 9000/tcp\nCMD [\"/bootstrap.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"782dc14aec6075ca2f16060c6ee2e248","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.2-fpm\nRUN DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install wget gnupg -my\n#   Install dotdeb repo\nRUN echo \"deb http://packages.dotdeb.org jessie all\" > /etc/apt/sources.list.d/dotdeb.list \\\n && curl -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \\\n && apt-get update\n#   Install required libs\nRUN apt-get update \\\n && apt-get install git unzip libcurl4-openssl-dev libedit-dev libssl-dev libxml2-dev libsqlite3-dev sqlite3 libz-dev libpq-dev libjpeg-dev libpng-dev libfreetype6-dev libssl-dev libmcrypt-dev libjudydebian1 libjudy-dev nano procps -y \\\n && apt-get clean\n#\n#   Configure\n#\nRUN docker-php-ext-configure gd --enable-gd-native-ttf --with-jpeg-dir=/usr/lib --with-freetype-dir=/usr/include/freetype2\n#\n#   Install extensions\n#\nRUN docker-php-ext-install pdo_mysql pcntl sockets bcmath opcache exif tokenizer gd pcntl\nRUN pecl install ev \\\n && docker-php-ext-enable ev\nRUN pecl install swoole \\\n && docker-php-ext-enable swoole\n#  ####################################\n#           XDEBUG EXTENSION:\n#  ####################################\nARG ENABLE_XDEBUG=false\nRUN if [ ${ENABLE_XDEBUG} = true ] ; then git clone https://github.com/xdebug/xdebug.git /tmp/xdebug \\\n && cd /tmp/xdebug \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/xdebug ; fi\n#   Copy xdebug configration for remote debugging\nENV XDEBUGINI_PATH=\"/usr/local/etc/php/conf.d/xdebug.ini\"\nCOPY ./xdebug.ini $XDEBUGINI_PATH\nRUN echo \"xdebug.remote_host=\"`/sbin/ip route | awk '/default/ { print $3 }' ` >> $XDEBUGINI_PATH\n#  ####################################\n#          OPCACHE EXTENSION:\n#  ####################################\nARG INSTALL_OPCACHE=false\nRUN if [ ${INSTALL_OPCACHE} = true ] ; then docker-php-ext-install opcache ; fi\n#   Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n#  ####################################\n#             INTL EXTENSION:\n#  ####################################\nARG INSTALL_INTL=false\nRUN if [ ${INSTALL_INTL} = true ] ; then apt-get update -yqq \\\n && apt-get install zlib1g-dev libicu-dev g++ -y \\\n && docker-php-ext-configure intl \\\n && docker-php-ext-install intl ; fi\n#  ####################################\n#         ImageMagick EXTENSION:\n#  ####################################\nUSER root\nARG INSTALL_IMAGEMAGICK=false\nENV INSTALL_IMAGEMAGICK=\"${INSTALL_IMAGEMAGICK}\"\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ] ; then apt-get update -y \\\n && apt-get install libmagickwand-dev imagemagick -y \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick ; fi\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./php-fpm.conf /usr/local/etc/php-fpm.d\nRUN rm -r /var/lib/apt/lists/*\nRUN rm -rf /tmp/pear\n#  ####################################\n#   Composer:\n#  ####################################\n#   Install composer and add its bin to the PATH.\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN echo \"\" >> ~/.bashrc \\\n && echo 'export PATH=\"/var/www/railt.org/vendor/bin:$PATH\"' >> ~/.bashrc\nADD ./bootstrap.sh /bootstrap.sh\nRUN chmod 0755 /bootstrap.sh\nRUN chmod -R 0777 /var/www\nWORKDIR /var/www/railt.org\nRUN usermod -u 1000 www-data\nEXPOSE 9000/tcp\nCMD [\"/bootstrap.sh\"]\n","originalDockerfileUglifiedHash":"e4cb18539114b463c382e783bf8d9cb6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f14e18e81c1e017d919e1cabcfcc7539ab34756a.dockerfile"}