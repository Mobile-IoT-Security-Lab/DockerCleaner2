{"seed":3151773479,"processedDockerfileHash":"be9238c4dd998123392db678e6e67a5f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.0.33-apache\nLABEL maintainer=\"Azure App Services Container Images <appsvc-images@microsoft.com>\"\nENV PHP_VERSION=\"7.0.33\"\nCOPY apache2.conf /bin/\nCOPY init_container.sh /bin/\nCOPY hostingstart.html /home/site/wwwroot/hostingstart.html\nRUN a2enmod rewrite expires include deflate\n#   install the PHP extensions we need\nRUN apt-get update \\\n && apt-get install --no-install-recommends libpng-dev libjpeg-dev libpq-dev libmcrypt-dev libldap2-dev libldb-dev libicu-dev libgmp-dev libmagickwand-dev libc-client-dev libtidy-dev libkrb5-dev libxslt-dev unixodbc-dev openssh-server vim curl wget tcptraceroute -y \\\n && chmod 755 /bin/init_container.sh \\\n && echo \"root:Docker!\" | chpasswd \\\n && echo \"cd /home\" >> /etc/bash.bashrc \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \\\n && ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \\\n && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n && rm -rf /var/lib/apt/lists/* \\\n && pecl install imagick-beta \\\n && pecl install sqlsrv-5.3.0 pdo_sqlsrv-5.3.0 \\\n && echo extension=pdo_sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/30-pdo_sqlsrv.ini \\\n && echo extension=sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/20-sqlsrv.ini \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr \\\n && docker-php-ext-install gd mysqli opcache pdo pdo_mysql pdo_pgsql pgsql ldap intl mcrypt gmp zip bcmath mbstring pcntl calendar exif gettext imap tidy shmop soap sockets sysvmsg sysvsem sysvshm pdo_odbc wddx xmlrpc xsl \\\n && docker-php-ext-enable imagick\n#   install odbc php ext\nRUN apt-get update \\\n && apt-get install --no-install-recommends unixodbc-dev\nRUN set -x \\\n && docker-php-source extract \\\n && cd /usr/src/php/ext/odbc \\\n && phpize \\\n && sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *&& *PHP_.*=yes *$@#&@g' configure \\\n && ./configure --with-unixODBC=shared,/usr \\\n && docker-php-ext-install odbc\nRUN rm -f /var/log/apache2/* \\\n && rmdir /var/lock/apache2 \\\n && rmdir /var/run/apache2 \\\n && rmdir /var/log/apache2 \\\n && chmod 777 /var/log \\\n && chmod 777 /var/run \\\n && chmod 777 /var/lock \\\n && chmod 777 /bin/init_container.sh \\\n && cp /bin/apache2.conf /etc/apache2/apache2.conf \\\n && rm -rf /var/www/html \\\n && rm -rf /var/log/apache2 \\\n && mkdir -p /home/LogFiles \\\n && ln -s /home/site/wwwroot /var/www/html \\\n && ln -s /home/LogFiles /var/log/apache2\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN { echo 'error_log=/var/log/apache2/php-error.log' ;echo 'display_errors=Off' ;echo 'log_errors=On' ;echo 'display_startup_errors=Off' ;echo 'date.timezone=UTC' ; } > /usr/local/etc/php/conf.d/php.ini\nENV PORT=\"8080\"\nENV SSH_PORT=\"2222\"\nEXPOSE 2222/tcp 8080/tcp\nCOPY sshd_config /etc/ssh/\nENV APACHE_RUN_USER=\"www-data\"\n#   setup default site\nRUN mkdir -p /opt/startup\nCOPY generateStartupCommand.sh /opt/startup/generateStartupCommand.sh\nRUN chmod 755 /opt/startup/generateStartupCommand.sh\nENV WEBSITE_ROLE_INSTANCE_ID=\"localRoleInstance\"\nENV WEBSITE_INSTANCE_ID=\"localInstance\"\nENV PATH=\"${PATH}:/home/site/wwwroot\"\nWORKDIR /var/www/html\nENTRYPOINT [\"/bin/init_container.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.0.33-apache\nLABEL maintainer=\"Azure App Services Container Images <appsvc-images@microsoft.com>\"\nENV PHP_VERSION=\"7.0.33\"\nCOPY apache2.conf /bin/\nCOPY init_container.sh /bin/\nCOPY hostingstart.html /home/site/wwwroot/hostingstart.html\nRUN a2enmod rewrite expires include deflate\n#  install the PHP extensions we need\nRUN apt-get update \\\n && apt-get install --no-install-recommends libpng-dev libjpeg-dev libpq-dev libmcrypt-dev libldap2-dev libldb-dev libicu-dev libgmp-dev libmagickwand-dev libc-client-dev libtidy-dev libkrb5-dev libxslt-dev unixodbc-dev openssh-server vim curl wget tcptraceroute -y \\\n && chmod 755 /bin/init_container.sh \\\n && echo \"root:Docker!\" | chpasswd \\\n && echo \"cd /home\" >> /etc/bash.bashrc \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \\\n && ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \\\n && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n && rm -rf /var/lib/apt/lists/* \\\n && pecl install imagick-beta \\\n && pecl install sqlsrv-5.3.0 pdo_sqlsrv-5.3.0 \\\n && echo extension=pdo_sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/30-pdo_sqlsrv.ini \\\n && echo extension=sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/20-sqlsrv.ini \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr \\\n && docker-php-ext-install gd mysqli opcache pdo pdo_mysql pdo_pgsql pgsql ldap intl mcrypt gmp zip bcmath mbstring pcntl calendar exif gettext imap tidy shmop soap sockets sysvmsg sysvsem sysvshm pdo_odbc wddx xmlrpc xsl \\\n && docker-php-ext-enable imagick\n#  install odbc php ext\nRUN apt-get update \\\n && apt-get install unixodbc-dev\nRUN set -x \\\n && docker-php-source extract \\\n && cd /usr/src/php/ext/odbc \\\n && phpize \\\n && sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *&& *PHP_.*=yes *$@#&@g' configure \\\n && ./configure --with-unixODBC=shared,/usr \\\n && docker-php-ext-install odbc\nRUN rm -f /var/log/apache2/* \\\n && rmdir /var/lock/apache2 \\\n && rmdir /var/run/apache2 \\\n && rmdir /var/log/apache2 \\\n && chmod 777 /var/log \\\n && chmod 777 /var/run \\\n && chmod 777 /var/lock \\\n && chmod 777 /bin/init_container.sh \\\n && cp /bin/apache2.conf /etc/apache2/apache2.conf \\\n && rm -rf /var/www/html \\\n && rm -rf /var/log/apache2 \\\n && mkdir -p /home/LogFiles \\\n && ln -s /home/site/wwwroot /var/www/html \\\n && ln -s /home/LogFiles /var/log/apache2\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN { echo 'error_log=/var/log/apache2/php-error.log' ;echo 'display_errors=Off' ;echo 'log_errors=On' ;echo 'display_startup_errors=Off' ;echo 'date.timezone=UTC' ; } > /usr/local/etc/php/conf.d/php.ini\nENV PORT=\"8080\"\nENV SSH_PORT=\"2222\"\nEXPOSE 2222/tcp 8080/tcp\nCOPY sshd_config /etc/ssh/\nENV APACHE_RUN_USER=\"www-data\"\n#  setup default site\nRUN mkdir -p /opt/startup\nCOPY generateStartupCommand.sh /opt/startup/generateStartupCommand.sh\nRUN chmod 755 /opt/startup/generateStartupCommand.sh\nENV WEBSITE_ROLE_INSTANCE_ID=\"localRoleInstance\"\nENV WEBSITE_INSTANCE_ID=\"localInstance\"\nENV PATH=\"${PATH}:/home/site/wwwroot\"\nWORKDIR /var/www/html\nENTRYPOINT [\"/bin/init_container.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"d9166040f8121f08a044ced4bbdc3f27","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.0.33-apache\nLABEL maintainer=\"Azure App Services Container Images <appsvc-images@microsoft.com>\"\nENV PHP_VERSION=\"7.0.33\"\nCOPY apache2.conf /bin/\nCOPY init_container.sh /bin/\nCOPY hostingstart.html /home/site/wwwroot/hostingstart.html\nRUN a2enmod rewrite expires include deflate\n#   install the PHP extensions we need\nRUN apt-get update \\\n && apt-get install --no-install-recommends libpng-dev libjpeg-dev libpq-dev libmcrypt-dev libldap2-dev libldb-dev libicu-dev libgmp-dev libmagickwand-dev libc-client-dev libtidy-dev libkrb5-dev libxslt-dev unixodbc-dev openssh-server vim curl wget tcptraceroute -y \\\n && chmod 755 /bin/init_container.sh \\\n && echo \"root:Docker!\" | chpasswd \\\n && echo \"cd /home\" >> /etc/bash.bashrc \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \\\n && ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \\\n && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n && rm -rf /var/lib/apt/lists/* \\\n && pecl install imagick-beta \\\n && pecl install sqlsrv-5.3.0 pdo_sqlsrv-5.3.0 \\\n && echo extension=pdo_sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/30-pdo_sqlsrv.ini \\\n && echo extension=sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/20-sqlsrv.ini \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr \\\n && docker-php-ext-install gd mysqli opcache pdo pdo_mysql pdo_pgsql pgsql ldap intl mcrypt gmp zip bcmath mbstring pcntl calendar exif gettext imap tidy shmop soap sockets sysvmsg sysvsem sysvshm pdo_odbc wddx xmlrpc xsl \\\n && docker-php-ext-enable imagick\n#   install odbc php ext\nRUN apt-get update \\\n && apt-get install unixodbc-dev\nRUN set -x \\\n && docker-php-source extract \\\n && cd /usr/src/php/ext/odbc \\\n && phpize \\\n && sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *&& *PHP_.*=yes *$@#&@g' configure \\\n && ./configure --with-unixODBC=shared,/usr \\\n && docker-php-ext-install odbc\nRUN rm -f /var/log/apache2/* \\\n && rmdir /var/lock/apache2 \\\n && rmdir /var/run/apache2 \\\n && rmdir /var/log/apache2 \\\n && chmod 777 /var/log \\\n && chmod 777 /var/run \\\n && chmod 777 /var/lock \\\n && chmod 777 /bin/init_container.sh \\\n && cp /bin/apache2.conf /etc/apache2/apache2.conf \\\n && rm -rf /var/www/html \\\n && rm -rf /var/log/apache2 \\\n && mkdir -p /home/LogFiles \\\n && ln -s /home/site/wwwroot /var/www/html \\\n && ln -s /home/LogFiles /var/log/apache2\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN { echo 'error_log=/var/log/apache2/php-error.log' ;echo 'display_errors=Off' ;echo 'log_errors=On' ;echo 'display_startup_errors=Off' ;echo 'date.timezone=UTC' ; } > /usr/local/etc/php/conf.d/php.ini\nENV PORT=\"8080\"\nENV SSH_PORT=\"2222\"\nEXPOSE 2222/tcp 8080/tcp\nCOPY sshd_config /etc/ssh/\nENV APACHE_RUN_USER=\"www-data\"\n#   setup default site\nRUN mkdir -p /opt/startup\nCOPY generateStartupCommand.sh /opt/startup/generateStartupCommand.sh\nRUN chmod 755 /opt/startup/generateStartupCommand.sh\nENV WEBSITE_ROLE_INSTANCE_ID=\"localRoleInstance\"\nENV WEBSITE_INSTANCE_ID=\"localInstance\"\nENV PATH=\"${PATH}:/home/site/wwwroot\"\nWORKDIR /var/www/html\nENTRYPOINT [\"/bin/init_container.sh\"]\n","originalDockerfileUglifiedHash":"83c09672ff46f2454f7c1878a3cedf2e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6e308872fd3354ec1202d27733d4b4eaae365e23.dockerfile"}