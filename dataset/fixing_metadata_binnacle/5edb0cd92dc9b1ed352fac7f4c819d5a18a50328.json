{"seed":2156533715,"processedDockerfileHash":"4004f5d567ea621983a0cd43932b6405","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##############################################################################\n#   Dockerfile to build Percona Server 5.x container images\n#   Based on Ubuntu 18.04\n#  ##############################################################################\n#   Set the base image to Ubuntu 18.04\nFROM ubuntu:18.04\n#   File Author / Maintainer\nMAINTAINER Swapbyt3s\nLABEL vendor=\"Swapbyt3s\" \\\n      description=\"Percona Server 5.x on Ubuntu 18.04\" \\\n      version=\"5.x\"\n#   Update the repository sources list\nRUN : \\\n && apt-get -y upgrade\nENV PERCONA_VERSION=\"5.5\"\n#  ##############################################################################\n#   BEGIN INSTALLATION\n#  ##############################################################################\n#   -----------------------------------------------------------------------------\n#   Install additional packages\n#   -----------------------------------------------------------------------------\nRUN (apt-get update ;apt-get install --no-install-recommends vim=2:8.0.1453-1ubuntu1.11 wget=1.19.4-1ubuntu2.2 htop=2.1.0-3 stress=1.0.4-2 curl=7.58.0-2ubuntu3.24 lsb=9.20170808ubuntu1 -y )\n#   -----------------------------------------------------------------------------\n#   Install Zenit\n#   -----------------------------------------------------------------------------\nCOPY zenit.yaml /etc/zenit/zenit.yaml\nRUN mkdir -p /etc/zenit/\nRUN sed -i 's/localhost/${HOSTNAME}/' /etc/zenit/zenit.yaml\nRUN sed -i 's/debug: false/debug: true/' /etc/zenit/zenit.yaml\nRUN sed -i 's/root@tcp/admin:admin@tcp/' /etc/zenit/zenit.yaml\nRUN sed -i 's/127.0.0.1:8123/172.20.1.2:8123/' /etc/zenit/zenit.yaml\nRUN sed -i 's/radminuser:radminpass@tcp\\(127.0.0.1:6032\\)/proxysql:admin@tcp\\(172.20.1.4:6032\\)/' /etc/zenit/zenit.yaml\nRUN sed -i 's/interval: 10/interval: 5/' /etc/zenit/zenit.yaml\nRUN sed -i 's/duration: 30/duration: 10/' /etc/zenit/zenit.yaml\nRUN sed -i 's/token: xxx\\/yyy\\/zzz/token: ${ZENIT_SLACK_TOKEN}/' /etc/zenit/zenit.yaml\n#   -----------------------------------------------------------------------------\n#   Test scripts\n#   -----------------------------------------------------------------------------\nCOPY assets/tests/slow.log /root/slow.log\nCOPY assets/tests/audit.log /root/audit.log\nCOPY docker/percona-server/loop_log_audit.sh /root/loop_log_audit.sh\nCOPY docker/percona-server/loop_log_slow.sh /root/loop_log_slow.sh\n#   -----------------------------------------------------------------------------\n#   Install MySQL packages\n#   -----------------------------------------------------------------------------\nRUN (apt-get update ;apt-get install --no-install-recommends apt-transport-https=1.6.14 dirmngr=2.2.4-1ubuntu1.6 apt-utils=1.6.14 apt-transport-https=1.6.14 ca-certificates=20211016ubuntu0.18.04.1 libpwquality-tools=1.4.0-2 cracklib-runtime=2.9.2-5build1 gnupg=2.2.4-1ubuntu1.6 libdbi-perl=1.640-1ubuntu0.3 libdbd-mysql-perl=4.046-1 libterm-readkey-perl=2.37-1build1 libio-socket-ssl-perl=2.060-3~ubuntu18.04.1 -y )\nRUN wget https://repo.percona.com/apt/percona-release_latest.$( lsb_release -sc ;)_all.deb > /dev/null 2>&1 \\\n && dpkg -i percona-release_latest.$( lsb_release -sc ;)_all.deb \\\n && :\nRUN wget https://www.percona.com/downloads/percona-toolkit/3.0.3/binary/debian/zesty/x86_64/percona-toolkit_3.0.3-1.zesty_amd64.deb > /dev/null 2>&1 \\\n && dpkg -i percona-toolkit_3.0.3-1.zesty_amd64.deb\nRUN env DEBIAN_FRONTEND=noninteractive apt-get install -y percona-server-server-$PERCONA_VERSION \\\n && chown -R mysql:0 /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\nCOPY docker/percona-server/my.cnf /etc/mysql/my.cnf\n#   -----------------------------------------------------------------------------\n#   Copy script utility\n#   -----------------------------------------------------------------------------\nCOPY docker/percona-server/entrypoint.sh /root/entrypoint.sh\nCOPY docker/percona-server/configure.sh /root/configure.sh\nRUN chmod a+x /root/entrypoint.sh\nRUN chmod a+x /root/configure.sh\n#   -----------------------------------------------------------------------------\n#   Clear\n#   -----------------------------------------------------------------------------\nRUN rm -rf /var/lib/apt/lists/* /var/cache/debconf \\\n && apt-get clean\n#   -----------------------------------------------------------------------------\n#   Clear\n#   -----------------------------------------------------------------------------\nRUN rm -rf /var/lib/apt/lists/* /var/cache/debconf \\\n && apt-get clean\n#  ############################# INSTALLATION END ###############################\n#   Expose the default MySQL port\nEXPOSE 3306/tcp\n#   Set the working directory to /root\nWORKDIR /root\n#   Start service on run container\nENTRYPOINT [\"/root/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##############################################################################\n#  Dockerfile to build Percona Server 5.x container images\n#  Based on Ubuntu 18.04\n# ##############################################################################\n#  Set the base image to Ubuntu 18.04\nFROM ubuntu:18.04\n#  File Author / Maintainer\nMAINTAINER Swapbyt3s\nLABEL vendor=\"Swapbyt3s\" \\\n      description=\"Percona Server 5.x on Ubuntu 18.04\" \\\n      version=\"5.x\"\n#  Update the repository sources list\nRUN apt-get update \\\n && apt-get -y upgrade\nENV PERCONA_VERSION=\"5.5\"\n# ##############################################################################\n#  BEGIN INSTALLATION\n# ##############################################################################\n#  -----------------------------------------------------------------------------\n#  Install additional packages\n#  -----------------------------------------------------------------------------\nRUN apt-get install vim wget htop stress curl lsb -y\n#  -----------------------------------------------------------------------------\n#  Install Zenit\n#  -----------------------------------------------------------------------------\nCOPY zenit.yaml /etc/zenit/zenit.yaml\nRUN mkdir -p /etc/zenit/\nRUN sed -i 's/localhost/${HOSTNAME}/' /etc/zenit/zenit.yaml\nRUN sed -i 's/debug: false/debug: true/' /etc/zenit/zenit.yaml\nRUN sed -i 's/root@tcp/admin:admin@tcp/' /etc/zenit/zenit.yaml\nRUN sed -i 's/127.0.0.1:8123/172.20.1.2:8123/' /etc/zenit/zenit.yaml\nRUN sed -i 's/radminuser:radminpass@tcp\\(127.0.0.1:6032\\)/proxysql:admin@tcp\\(172.20.1.4:6032\\)/' /etc/zenit/zenit.yaml\nRUN sed -i 's/interval: 10/interval: 5/' /etc/zenit/zenit.yaml\nRUN sed -i 's/duration: 30/duration: 10/' /etc/zenit/zenit.yaml\nRUN sed -i 's/token: xxx\\/yyy\\/zzz/token: ${ZENIT_SLACK_TOKEN}/' /etc/zenit/zenit.yaml\n#  -----------------------------------------------------------------------------\n#  Test scripts\n#  -----------------------------------------------------------------------------\nCOPY assets/tests/slow.log /root/slow.log\nCOPY assets/tests/audit.log /root/audit.log\nCOPY docker/percona-server/loop_log_audit.sh /root/loop_log_audit.sh\nCOPY docker/percona-server/loop_log_slow.sh /root/loop_log_slow.sh\n#  -----------------------------------------------------------------------------\n#  Install MySQL packages\n#  -----------------------------------------------------------------------------\nRUN apt-get install --no-install-recommends apt-transport-https dirmngr apt-utils apt-transport-https ca-certificates libpwquality-tools cracklib-runtime gnupg libdbi-perl libdbd-mysql-perl libterm-readkey-perl libio-socket-ssl-perl -y\nRUN wget https://repo.percona.com/apt/percona-release_latest.$( lsb_release -sc ;)_all.deb > /dev/null 2>&1 \\\n && dpkg -i percona-release_latest.$( lsb_release -sc ;)_all.deb \\\n && apt-get update\nRUN wget https://www.percona.com/downloads/percona-toolkit/3.0.3/binary/debian/zesty/x86_64/percona-toolkit_3.0.3-1.zesty_amd64.deb > /dev/null 2>&1 \\\n && dpkg -i percona-toolkit_3.0.3-1.zesty_amd64.deb\nRUN env DEBIAN_FRONTEND=noninteractive apt-get install -y percona-server-server-$PERCONA_VERSION \\\n && chown -R mysql:0 /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\nCOPY docker/percona-server/my.cnf /etc/mysql/my.cnf\n#  -----------------------------------------------------------------------------\n#  Copy script utility\n#  -----------------------------------------------------------------------------\nCOPY docker/percona-server/entrypoint.sh /root/entrypoint.sh\nCOPY docker/percona-server/configure.sh /root/configure.sh\nRUN chmod a+x /root/entrypoint.sh\nRUN chmod a+x /root/configure.sh\n#  -----------------------------------------------------------------------------\n#  Clear\n#  -----------------------------------------------------------------------------\nRUN rm -rf /var/lib/apt/lists/* /var/cache/debconf \\\n && apt-get clean\n#  -----------------------------------------------------------------------------\n#  Clear\n#  -----------------------------------------------------------------------------\nRUN rm -rf /var/lib/apt/lists/* /var/cache/debconf \\\n && apt-get clean\n# ############################# INSTALLATION END ###############################\n#  Expose the default MySQL port\nEXPOSE 3306/tcp\n#  Set the working directory to /root\nWORKDIR /root\n#  Start service on run container\nENTRYPOINT [\"/root/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"5e61f973328bcfa75232aeff808a17d3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##############################################################################\n#   Dockerfile to build Percona Server 5.x container images\n#   Based on Ubuntu 18.04\n#  ##############################################################################\n#   Set the base image to Ubuntu 18.04\nFROM ubuntu:18.04\n#   File Author / Maintainer\nMAINTAINER Swapbyt3s\nLABEL vendor=\"Swapbyt3s\" \\\n      description=\"Percona Server 5.x on Ubuntu 18.04\" \\\n      version=\"5.x\"\n#   Update the repository sources list\nRUN apt-get update \\\n && apt-get -y upgrade\nENV PERCONA_VERSION=\"5.5\"\n#  ##############################################################################\n#   BEGIN INSTALLATION\n#  ##############################################################################\n#   -----------------------------------------------------------------------------\n#   Install additional packages\n#   -----------------------------------------------------------------------------\nRUN apt-get install vim wget htop stress curl lsb -y\n#   -----------------------------------------------------------------------------\n#   Install Zenit\n#   -----------------------------------------------------------------------------\nCOPY zenit.yaml /etc/zenit/zenit.yaml\nRUN mkdir -p /etc/zenit/\nRUN sed -i 's/localhost/${HOSTNAME}/' /etc/zenit/zenit.yaml\nRUN sed -i 's/debug: false/debug: true/' /etc/zenit/zenit.yaml\nRUN sed -i 's/root@tcp/admin:admin@tcp/' /etc/zenit/zenit.yaml\nRUN sed -i 's/127.0.0.1:8123/172.20.1.2:8123/' /etc/zenit/zenit.yaml\nRUN sed -i 's/radminuser:radminpass@tcp\\(127.0.0.1:6032\\)/proxysql:admin@tcp\\(172.20.1.4:6032\\)/' /etc/zenit/zenit.yaml\nRUN sed -i 's/interval: 10/interval: 5/' /etc/zenit/zenit.yaml\nRUN sed -i 's/duration: 30/duration: 10/' /etc/zenit/zenit.yaml\nRUN sed -i 's/token: xxx\\/yyy\\/zzz/token: ${ZENIT_SLACK_TOKEN}/' /etc/zenit/zenit.yaml\n#   -----------------------------------------------------------------------------\n#   Test scripts\n#   -----------------------------------------------------------------------------\nCOPY assets/tests/slow.log /root/slow.log\nCOPY assets/tests/audit.log /root/audit.log\nCOPY docker/percona-server/loop_log_audit.sh /root/loop_log_audit.sh\nCOPY docker/percona-server/loop_log_slow.sh /root/loop_log_slow.sh\n#   -----------------------------------------------------------------------------\n#   Install MySQL packages\n#   -----------------------------------------------------------------------------\nRUN apt-get install --no-install-recommends apt-transport-https dirmngr apt-utils apt-transport-https ca-certificates libpwquality-tools cracklib-runtime gnupg libdbi-perl libdbd-mysql-perl libterm-readkey-perl libio-socket-ssl-perl -y\nRUN wget https://repo.percona.com/apt/percona-release_latest.$( lsb_release -sc ;)_all.deb > /dev/null 2>&1 \\\n && dpkg -i percona-release_latest.$( lsb_release -sc ;)_all.deb \\\n && apt-get update\nRUN wget https://www.percona.com/downloads/percona-toolkit/3.0.3/binary/debian/zesty/x86_64/percona-toolkit_3.0.3-1.zesty_amd64.deb > /dev/null 2>&1 \\\n && dpkg -i percona-toolkit_3.0.3-1.zesty_amd64.deb\nRUN env DEBIAN_FRONTEND=noninteractive apt-get install -y percona-server-server-$PERCONA_VERSION \\\n && chown -R mysql:0 /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\nCOPY docker/percona-server/my.cnf /etc/mysql/my.cnf\n#   -----------------------------------------------------------------------------\n#   Copy script utility\n#   -----------------------------------------------------------------------------\nCOPY docker/percona-server/entrypoint.sh /root/entrypoint.sh\nCOPY docker/percona-server/configure.sh /root/configure.sh\nRUN chmod a+x /root/entrypoint.sh\nRUN chmod a+x /root/configure.sh\n#   -----------------------------------------------------------------------------\n#   Clear\n#   -----------------------------------------------------------------------------\nRUN rm -rf /var/lib/apt/lists/* /var/cache/debconf \\\n && apt-get clean\n#   -----------------------------------------------------------------------------\n#   Clear\n#   -----------------------------------------------------------------------------\nRUN rm -rf /var/lib/apt/lists/* /var/cache/debconf \\\n && apt-get clean\n#  ############################# INSTALLATION END ###############################\n#   Expose the default MySQL port\nEXPOSE 3306/tcp\n#   Set the working directory to /root\nWORKDIR /root\n#   Start service on run container\nENTRYPOINT [\"/root/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"ad22214bb167ccb7201adf063782fa9c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5edb0cd92dc9b1ed352fac7f4c819d5a18a50328.dockerfile"}