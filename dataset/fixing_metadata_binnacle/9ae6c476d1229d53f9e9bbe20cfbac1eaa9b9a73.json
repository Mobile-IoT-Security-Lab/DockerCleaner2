{"seed":3522346245,"processedDockerfileHash":"757685eea86450f90b1b8211cb58ea85","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for Pega 8 Platform\n#   Base image to extend from\nFROM tomcat:9-jre11\nLABEL vendor=\"Pegasystems Inc.\" \\\n      name=\"Pega Tomcat Node\" \\\n      version=\"2.0.0\"\nENV PEGA_DOCKER_VERSION=\"2.0\"\n#   Create directory for storing heapdump\nRUN mkdir -p /heapdumps \\\n && chmod 770 /heapdumps\n#   Create common directory for mounting configuration and libraries\nRUN mkdir -p /opt/pega \\\n && chgrp -R 0 /opt/pega \\\n && chmod -R g+rw /opt/pega\n#   Create directory for filesystem repository\nRUN mkdir -p /opt/pega/filerepo \\\n && chgrp -R 0 /opt/pega/filerepo \\\n && chmod -R g+rw /opt/pega/filerepo\n#   Create directory for mounting configuration files\nRUN mkdir -p /opt/pega/config \\\n && chgrp -R 0 /opt/pega/config \\\n && chmod -R g+rw /opt/pega/config\n#   Create directory for mounting libraries\nRUN mkdir -p /opt/pega/lib \\\n && chgrp -R 0 /opt/pega/lib \\\n && chmod -R g+rw /opt/pega/lib\n#   Create directory for mounting secrets\nRUN mkdir -p /opt/pega/secrets \\\n && chgrp -R 0 /opt/pega \\\n && chmod -R g+rw /opt/pega/secrets\n#   Create directory for extra stream volume\nRUN mkdir -p /opt/pega/streamvol \\\n && chgrp -R 0 /opt/pega/streamvol \\\n && chmod -R g+rw /opt/pega/streamvol\n#   Set up an empty JDBC URL which will, if set to a non-empty value, be used in preference\n#   to the \"constructed\" JDBC URL\nENV JDBC_URL=\"\" \\\n    DB_USERNAME=\"\" \\\n    DB_PASSWORD=\"\" \\\n    JDBC_CLASS=\"\"\n#   Load a default PostgreSQL driver on startup\nENV JDBC_DRIVER_URI=\"\"\n#   Provide variables for the JDBC connection string\nENV JDBC_MIN_ACTIVE=\"50\" \\\n    JDBC_MAX_ACTIVE=\"250\" \\\n    JDBC_MIN_IDLE=\"10\" \\\n    JDBC_MAX_IDLE=\"50\" \\\n    JDBC_MAX_WAIT=\"30000\" \\\n    JDBC_INITIAL_SIZE=\"50\" \\\n    JDBC_CONNECTION_PROPERTIES=\"socketTimeout=90\"\n#   Provide variables for the name of the rules, data, and customerdata schemas\nENV RULES_SCHEMA=\"rules\" \\\n    DATA_SCHEMA=\"data\" \\\n    CUSTOMERDATA_SCHEMA=\"\"\n#  Tomcat user environment variables for pega diagnostic user\nENV PEGA_DIAGNOSTIC_USER=\"\" \\\n    PEGA_DIAGNOSTIC_PASSWORD=\"\"\n#   Parameterize variables to customize the tomcat runtime\nENV MAX_THREADS=\"300\" \\\n    JAVA_OPTS=\"\" \\\n    MAX_HEAP=\"4096m\" \\\n    INITIAL_HEAP=\"2048m\" \\\n    INDEX_DIRECTORY=\"NONE\" \\\n    HEAP_DUMP_PATH=\"/heapdumps\" \\\n    NODE_TYPE=\"\" \\\n    NODE_SETTINGS=\"\"\n#   Configure Remote JMX support and bind to port 9001\nENV JMX_PORT=\"9001\" \\\n    JMX_SERVER_HOSTNAME=\"127.0.0.1\"\n#   Configure Cassandra.\nENV CASSANDRA_CLUSTER=\"false\" \\\n    CASSANDRA_NODES=\"\" \\\n    CASSANDRA_PORT=\"9042\" \\\n    CASSANDRA_USERNAME=\"\" \\\n    CASSANDRA_PASSWORD=\"\"\n#   Configure search nodes. Empty string falls back to search being done on the nodes themselves.\nENV PEGA_SEARCH_URL=\"\"\n#  Set up volume for persistent Kafka data storage\nRUN mkdir -p /opt/pega/kafkadata \\\n && chgrp -R 0 /opt/pega/kafkadata \\\n && chmod -R g+rw /opt/pega/kafkadata\n#   Remove existing webapps\nRUN rm -rf ${CATALINA_HOME}/webapps/*\n#   Copy in tomcat configuration and application files\nCOPY tomcat-webapps ${CATALINA_HOME}/webapps/\nCOPY tomcat-bin ${CATALINA_HOME}/bin/\nCOPY tomcat-conf ${CATALINA_HOME}/conf/\nCOPY scripts /scripts\n#  Installing dockerize for generating config files using templates\nRUN curl -sL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar zxf - -C /bin/\n#   Update access of required directories to allow not running in root for openshift\nRUN chmod -R g+rw ${CATALINA_HOME}/logs \\\n && chmod -R g+rw ${CATALINA_HOME}/lib \\\n && chmod -R g+rw ${CATALINA_HOME}/work \\\n && chmod -R g+rw ${CATALINA_HOME}/conf \\\n && chmod -R g+x /scripts \\\n && chmod g+r ${CATALINA_HOME}/conf/web.xml \\\n && mkdir /search_index \\\n && chmod -R g+w /search_index\nENTRYPOINT [\"/scripts/docker-entrypoint.sh\"]\nCMD [\"run\"]\n#   Expose required ports\n#   HTTP is 8080, JMX is 9001, Hazelcast is 5701-5710, Ignite is 47100, REST for Kafka is 7003\nEXPOSE 8080/tcp 9001/tcp 5701-5710 47100/tcp 7003/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8080 || exit 1\n","originalDockerfile":"#  Dockerfile for Pega 8 Platform\n#  Base image to extend from\nFROM tomcat:9-jre11\nLABEL vendor=\"Pegasystems Inc.\" \\\n      name=\"Pega Tomcat Node\" \\\n      version=\"2.0.0\"\nENV PEGA_DOCKER_VERSION=\"2.0\"\n#  Create directory for storing heapdump\nRUN mkdir -p /heapdumps \\\n && chmod 770 /heapdumps\n#  Create common directory for mounting configuration and libraries\nRUN mkdir -p /opt/pega \\\n && chgrp -R 0 /opt/pega \\\n && chmod -R g+rw /opt/pega\n#  Create directory for filesystem repository\nRUN mkdir -p /opt/pega/filerepo \\\n && chgrp -R 0 /opt/pega/filerepo \\\n && chmod -R g+rw /opt/pega/filerepo\n#  Create directory for mounting configuration files\nRUN mkdir -p /opt/pega/config \\\n && chgrp -R 0 /opt/pega/config \\\n && chmod -R g+rw /opt/pega/config\n#  Create directory for mounting libraries\nRUN mkdir -p /opt/pega/lib \\\n && chgrp -R 0 /opt/pega/lib \\\n && chmod -R g+rw /opt/pega/lib\n#  Create directory for mounting secrets\nRUN mkdir -p /opt/pega/secrets \\\n && chgrp -R 0 /opt/pega \\\n && chmod -R g+rw /opt/pega/secrets\n#  Create directory for extra stream volume\nRUN mkdir -p /opt/pega/streamvol \\\n && chgrp -R 0 /opt/pega/streamvol \\\n && chmod -R g+rw /opt/pega/streamvol\n#  Set up an empty JDBC URL which will, if set to a non-empty value, be used in preference\n#  to the \"constructed\" JDBC URL\nENV JDBC_URL=\"\" \\\n    DB_USERNAME=\"\" \\\n    DB_PASSWORD=\"\" \\\n    JDBC_CLASS=\"\"\n#  Load a default PostgreSQL driver on startup\nENV JDBC_DRIVER_URI=\"\"\n#  Provide variables for the JDBC connection string\nENV JDBC_MIN_ACTIVE=\"50\" \\\n    JDBC_MAX_ACTIVE=\"250\" \\\n    JDBC_MIN_IDLE=\"10\" \\\n    JDBC_MAX_IDLE=\"50\" \\\n    JDBC_MAX_WAIT=\"30000\" \\\n    JDBC_INITIAL_SIZE=\"50\" \\\n    JDBC_CONNECTION_PROPERTIES=\"socketTimeout=90\"\n#  Provide variables for the name of the rules, data, and customerdata schemas\nENV RULES_SCHEMA=\"rules\" \\\n    DATA_SCHEMA=\"data\" \\\n    CUSTOMERDATA_SCHEMA=\"\"\n# Tomcat user environment variables for pega diagnostic user\nENV PEGA_DIAGNOSTIC_USER=\"\" \\\n    PEGA_DIAGNOSTIC_PASSWORD=\"\"\n#  Parameterize variables to customize the tomcat runtime\nENV MAX_THREADS=\"300\" \\\n    JAVA_OPTS=\"\" \\\n    MAX_HEAP=\"4096m\" \\\n    INITIAL_HEAP=\"2048m\" \\\n    INDEX_DIRECTORY=\"NONE\" \\\n    HEAP_DUMP_PATH=\"/heapdumps\" \\\n    NODE_TYPE=\"\" \\\n    NODE_SETTINGS=\"\"\n#  Configure Remote JMX support and bind to port 9001\nENV JMX_PORT=\"9001\" \\\n    JMX_SERVER_HOSTNAME=\"127.0.0.1\"\n#  Configure Cassandra.\nENV CASSANDRA_CLUSTER=\"false\" \\\n    CASSANDRA_NODES=\"\" \\\n    CASSANDRA_PORT=\"9042\" \\\n    CASSANDRA_USERNAME=\"\" \\\n    CASSANDRA_PASSWORD=\"\"\n#  Configure search nodes. Empty string falls back to search being done on the nodes themselves.\nENV PEGA_SEARCH_URL=\"\"\n# Set up volume for persistent Kafka data storage\nRUN mkdir -p /opt/pega/kafkadata \\\n && chgrp -R 0 /opt/pega/kafkadata \\\n && chmod -R g+rw /opt/pega/kafkadata\n#  Remove existing webapps\nRUN rm -rf ${CATALINA_HOME}/webapps/*\n#  Copy in tomcat configuration and application files\nCOPY tomcat-webapps ${CATALINA_HOME}/webapps/\nCOPY tomcat-bin ${CATALINA_HOME}/bin/\nCOPY tomcat-conf ${CATALINA_HOME}/conf/\nCOPY scripts /scripts\n# Installing dockerize for generating config files using templates\nRUN curl -sL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar zxf - -C /bin/\n#  Update access of required directories to allow not running in root for openshift\nRUN chmod -R g+rw ${CATALINA_HOME}/logs \\\n && chmod -R g+rw ${CATALINA_HOME}/lib \\\n && chmod -R g+rw ${CATALINA_HOME}/work \\\n && chmod -R g+rw ${CATALINA_HOME}/conf \\\n && chmod -R g+x /scripts \\\n && chmod g+r ${CATALINA_HOME}/conf/web.xml \\\n && mkdir /search_index \\\n && chmod -R g+w /search_index\nENTRYPOINT [\"/scripts/docker-entrypoint.sh\"]\nCMD [\"run\"]\n#  Expose required ports\n#  HTTP is 8080, JMX is 9001, Hazelcast is 5701-5710, Ignite is 47100, REST for Kafka is 7003\nEXPOSE 8080/tcp 9001/tcp 5701-5710 47100/tcp 7003/tcp\n","injectedSmells":[],"originalDockerfileHash":"5c0aa4826611c130e6e1296ed1f2bd05","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for Pega 8 Platform\n#   Base image to extend from\nFROM tomcat:9-jre11\nLABEL vendor=\"Pegasystems Inc.\" \\\n      name=\"Pega Tomcat Node\" \\\n      version=\"2.0.0\"\nENV PEGA_DOCKER_VERSION=\"2.0\"\n#   Create directory for storing heapdump\nRUN mkdir -p /heapdumps \\\n && chmod 770 /heapdumps\n#   Create common directory for mounting configuration and libraries\nRUN mkdir -p /opt/pega \\\n && chgrp -R 0 /opt/pega \\\n && chmod -R g+rw /opt/pega\n#   Create directory for filesystem repository\nRUN mkdir -p /opt/pega/filerepo \\\n && chgrp -R 0 /opt/pega/filerepo \\\n && chmod -R g+rw /opt/pega/filerepo\n#   Create directory for mounting configuration files\nRUN mkdir -p /opt/pega/config \\\n && chgrp -R 0 /opt/pega/config \\\n && chmod -R g+rw /opt/pega/config\n#   Create directory for mounting libraries\nRUN mkdir -p /opt/pega/lib \\\n && chgrp -R 0 /opt/pega/lib \\\n && chmod -R g+rw /opt/pega/lib\n#   Create directory for mounting secrets\nRUN mkdir -p /opt/pega/secrets \\\n && chgrp -R 0 /opt/pega \\\n && chmod -R g+rw /opt/pega/secrets\n#   Create directory for extra stream volume\nRUN mkdir -p /opt/pega/streamvol \\\n && chgrp -R 0 /opt/pega/streamvol \\\n && chmod -R g+rw /opt/pega/streamvol\n#   Set up an empty JDBC URL which will, if set to a non-empty value, be used in preference\n#   to the \"constructed\" JDBC URL\nENV JDBC_URL=\"\" \\\n    DB_USERNAME=\"\" \\\n    DB_PASSWORD=\"\" \\\n    JDBC_CLASS=\"\"\n#   Load a default PostgreSQL driver on startup\nENV JDBC_DRIVER_URI=\"\"\n#   Provide variables for the JDBC connection string\nENV JDBC_MIN_ACTIVE=\"50\" \\\n    JDBC_MAX_ACTIVE=\"250\" \\\n    JDBC_MIN_IDLE=\"10\" \\\n    JDBC_MAX_IDLE=\"50\" \\\n    JDBC_MAX_WAIT=\"30000\" \\\n    JDBC_INITIAL_SIZE=\"50\" \\\n    JDBC_CONNECTION_PROPERTIES=\"socketTimeout=90\"\n#   Provide variables for the name of the rules, data, and customerdata schemas\nENV RULES_SCHEMA=\"rules\" \\\n    DATA_SCHEMA=\"data\" \\\n    CUSTOMERDATA_SCHEMA=\"\"\n#  Tomcat user environment variables for pega diagnostic user\nENV PEGA_DIAGNOSTIC_USER=\"\" \\\n    PEGA_DIAGNOSTIC_PASSWORD=\"\"\n#   Parameterize variables to customize the tomcat runtime\nENV MAX_THREADS=\"300\" \\\n    JAVA_OPTS=\"\" \\\n    MAX_HEAP=\"4096m\" \\\n    INITIAL_HEAP=\"2048m\" \\\n    INDEX_DIRECTORY=\"NONE\" \\\n    HEAP_DUMP_PATH=\"/heapdumps\" \\\n    NODE_TYPE=\"\" \\\n    NODE_SETTINGS=\"\"\n#   Configure Remote JMX support and bind to port 9001\nENV JMX_PORT=\"9001\" \\\n    JMX_SERVER_HOSTNAME=\"127.0.0.1\"\n#   Configure Cassandra.\nENV CASSANDRA_CLUSTER=\"false\" \\\n    CASSANDRA_NODES=\"\" \\\n    CASSANDRA_PORT=\"9042\" \\\n    CASSANDRA_USERNAME=\"\" \\\n    CASSANDRA_PASSWORD=\"\"\n#   Configure search nodes. Empty string falls back to search being done on the nodes themselves.\nENV PEGA_SEARCH_URL=\"\"\n#  Set up volume for persistent Kafka data storage\nRUN mkdir -p /opt/pega/kafkadata \\\n && chgrp -R 0 /opt/pega/kafkadata \\\n && chmod -R g+rw /opt/pega/kafkadata\n#   Remove existing webapps\nRUN rm -rf ${CATALINA_HOME}/webapps/*\n#   Copy in tomcat configuration and application files\nCOPY tomcat-webapps ${CATALINA_HOME}/webapps/\nCOPY tomcat-bin ${CATALINA_HOME}/bin/\nCOPY tomcat-conf ${CATALINA_HOME}/conf/\nCOPY scripts /scripts\n#  Installing dockerize for generating config files using templates\nRUN curl -sL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar zxf - -C /bin/\n#   Update access of required directories to allow not running in root for openshift\nRUN chmod -R g+rw ${CATALINA_HOME}/logs \\\n && chmod -R g+rw ${CATALINA_HOME}/lib \\\n && chmod -R g+rw ${CATALINA_HOME}/work \\\n && chmod -R g+rw ${CATALINA_HOME}/conf \\\n && chmod -R g+x /scripts \\\n && chmod g+r ${CATALINA_HOME}/conf/web.xml \\\n && mkdir /search_index \\\n && chmod -R g+w /search_index\nENTRYPOINT [\"/scripts/docker-entrypoint.sh\"]\nCMD [\"run\"]\n#   Expose required ports\n#   HTTP is 8080, JMX is 9001, Hazelcast is 5701-5710, Ignite is 47100, REST for Kafka is 7003\nEXPOSE 8080/tcp 9001/tcp 5701-5710 47100/tcp 7003/tcp\n","originalDockerfileUglifiedHash":"cba319d4e9390a06015431c738f62db9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9ae6c476d1229d53f9e9bbe20cfbac1eaa9b9a73.dockerfile"}