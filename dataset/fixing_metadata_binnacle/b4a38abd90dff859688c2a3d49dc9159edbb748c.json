{"seed":4165151890,"processedDockerfileHash":"e0b7e7e134ff374c86e19a01efebee9f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  upstream https://github.com/Comcast/kube-yarn/raw/master/image/Dockerfile\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash=4.4.19-r1 bzip2=1.0.6-r7 gnupg=2.2.19-r0 tzdata=2020a-r0 vim=8.1.1365-r0 snappy=1.1.4-r4 tini=0.18.0-r0 su-exec=0.2-r0 gzip=1.9-r0 tar=1.32-r0 wget=1.20.3-r0 which=2.21-r1 curl=7.61.1-r3 \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n#   Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.28-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add wget=1.20.3-r0 ca-certificates=20191127-r2 --no-cache --virtual=.build-dependencies \\\n && wget \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" -O \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" --no-cache \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nENV JAVA_VERSION=\"8\" \\\n    JAVA_UPDATE=\"181\" \\\n    JAVA_BUILD=\"13\" \\\n    JAVA_PATH=\"96a7b8442fe848ef90c96a2fad6ed6d1\" \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nRUN apk add wget=1.20.3-r0 ca-certificates=20191127-r2 unzip=6.0-r6 --no-cache --virtual=build-dependencies \\\n && cd \"/tmp\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && mkdir -p \"/usr/lib/jvm\" \\\n && mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \\\n && ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" \\\n && ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" \\\n && rm -rf \"$JAVA_HOME/\"*src.zip \\\n && rm -rf \"$JAVA_HOME/lib/missioncontrol\" \"$JAVA_HOME/lib/visualvm\" \"$JAVA_HOME/lib/\"*javafx* \"$JAVA_HOME/jre/lib/plugin.jar\" \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \"$JAVA_HOME/jre/bin/javaws\" \"$JAVA_HOME/jre/lib/javaws.jar\" \"$JAVA_HOME/jre/lib/desktop\" \"$JAVA_HOME/jre/plugin\" \"$JAVA_HOME/jre/lib/\"deploy* \"$JAVA_HOME/jre/lib/\"*javafx* \"$JAVA_HOME/jre/lib/\"*jfx* \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so \\\n && rm -rf \"$JAVA_HOME/jre/bin/jjs\" \"$JAVA_HOME/jre/bin/keytool\" \"$JAVA_HOME/jre/bin/orbd\" \"$JAVA_HOME/jre/bin/pack200\" \"$JAVA_HOME/jre/bin/policytool\" \"$JAVA_HOME/jre/bin/rmid\" \"$JAVA_HOME/jre/bin/rmiregistry\" \"$JAVA_HOME/jre/bin/servertool\" \"$JAVA_HOME/jre/bin/tnameserv\" \"$JAVA_HOME/jre/bin/unpack200\" \"$JAVA_HOME/jre/lib/ext/nashorn.jar\" \"$JAVA_HOME/jre/lib/jfr.jar\" \"$JAVA_HOME/jre/lib/jfr\" \"$JAVA_HOME/jre/lib/oblique-fonts\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" \\\n && unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" \\\n && rm \"${JAVA_HOME}/jre/lib/security/README.txt\" \\\n && apk del build-dependencies \\\n && rm \"/tmp/\"*\nRUN gpg --keyserver keyserver.ubuntu.com --recv-keys 07617D4968B34D8F13D56E20BE5AAA0BA210C095 2CAC83124870D88586166115220F69801F27E622 4B96409A098DBD511DF2BC18DBAF69BEA7239D59 9DD955653083EFED6171256408458C39E964B5FF B6B3F7EDA5BA7D1E827DE5180DFF492D8EE2F25C 6A67379BEFC1AE4D5595770A34005598B8F47547 47660BC98BC433F01E5C90581209E7F13D0C92B9 CE83449FDC6DACF9D24174DCD1F99F6EE3CD2163 A11DF05DEA40DA19CE4B43C01214CF3F852ADB85 686E5EDF04A4830554160910DF0F5BBC30CD0996 5BAE7CB144D05AD1BB1C47C75C6CC6EFABE49180 AF7610D2E378B33AB026D7574FB955854318F669 6AE70A2A38F466A5D683F939255ADF56C36C5F0F 70F7AB3B62257ABFBD0618D79FDB12767CC7352A 842AAB2D0BC5415B4E19D429A342433A56D8D31A 1B5D384B734F368052862EB55E43CAB9AEC77EAF 785436A782586B71829C67A04169AA27ECB31663 5E49DA09E2EC9950733A4FF48F1895E97869A2FB A13B3869454536F1852C17D0477E02D33DD51430 A6220FFCC86FE81CE5AAC880E3814B59E4E11856 EFE2E7C571309FE00BEBA78D5E314EEF7340E1CB EB34498A9261F343F09F60E0A9510905F0B000F0 3442A6594268AC7B88F5C1D25104A731B021B57F 6E83C32562C909D289E6C3D98B25B9B71EFF7770 E9216532BF11728C86A11E3132CF4BF4E72E74D3 E8966520DA24E9642E119A5F13971DA39475BD5D 1D369094D4CFAC140E0EF05E992230B1EB8C6EFA A312CE6A1FA98892CB2C44EBA79AB712DE5868E6 0445B7BFC4515847C157ECD16BA72FF1C99785DE B74F188889D159F3D7E64A7F348C6D7A0DCED714 4A6AC5C675B6155682729C9E08D51A0A7501105C 8B44A05C308955D191956559A5CEE20A90348D47\nRUN gpg --keyserver keyserver.ubuntu.com --recv-key C36C5F0F\n#   Add native libs\nENV HADOOP_VERSION=\"2.7.3\"\nENV HADOOP_NATIVE_LIBDIR=\"/usr/local/hadoop-${HADOOP_VERSION}/lib/native\"\nENV HADOOP_URL=\"https://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$HADOOP_NATIVE_LIBDIR\"\nRUN set -x \\\n && curl -fSL \"$HADOOP_URL\" -o /tmp/hadoop.tar.gz \\\n && curl -fSL \"$HADOOP_URL.asc\" -o /tmp/hadoop.tar.gz.asc \\\n && gpg --verify /tmp/hadoop.tar.gz.asc \\\n && tar -xvf /tmp/hadoop.tar.gz -C /usr/local/ \\\n && rm /tmp/hadoop.tar.gz*\nENV HADOOP_PREFIX=\"/usr/local/hadoop\" \\\n    HADOOP_COMMON_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_HDFS_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_MAPRED_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_YARN_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\" \\\n    YARN_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\" \\\n    PATH=\"${PATH}:/usr/local/hadoop/bin\"\nRUN cd /usr/local \\\n && ln -s ./hadoop-${HADOOP_VERSION} hadoop \\\n && mkdir ${HADOOP_PREFIX}/logs\nWORKDIR $HADOOP_PREFIX\n#   Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#   Mapred ports\nEXPOSE 19888/tcp\n#  Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n#  Other ports\nEXPOSE 49707/tcp 2122/tcp\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/Comcast/kube-yarn/raw/master/image/Dockerfile\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#  Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash bzip2 gnupg tzdata vim snappy tini su-exec gzip tar wget which curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n#  Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.28-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add --no-cache --virtual=.build-dependencies wget ca-certificates \\\n && wget \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" -O \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add --no-cache \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nENV JAVA_VERSION=\"8\" \\\n    JAVA_UPDATE=\"181\" \\\n    JAVA_BUILD=\"13\" \\\n    JAVA_PATH=\"96a7b8442fe848ef90c96a2fad6ed6d1\" \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nRUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip \\\n && cd \"/tmp\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && mkdir -p \"/usr/lib/jvm\" \\\n && mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \\\n && ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" \\\n && ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" \\\n && rm -rf \"$JAVA_HOME/\"*src.zip \\\n && rm -rf \"$JAVA_HOME/lib/missioncontrol\" \"$JAVA_HOME/lib/visualvm\" \"$JAVA_HOME/lib/\"*javafx* \"$JAVA_HOME/jre/lib/plugin.jar\" \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \"$JAVA_HOME/jre/bin/javaws\" \"$JAVA_HOME/jre/lib/javaws.jar\" \"$JAVA_HOME/jre/lib/desktop\" \"$JAVA_HOME/jre/plugin\" \"$JAVA_HOME/jre/lib/\"deploy* \"$JAVA_HOME/jre/lib/\"*javafx* \"$JAVA_HOME/jre/lib/\"*jfx* \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so \\\n && rm -rf \"$JAVA_HOME/jre/bin/jjs\" \"$JAVA_HOME/jre/bin/keytool\" \"$JAVA_HOME/jre/bin/orbd\" \"$JAVA_HOME/jre/bin/pack200\" \"$JAVA_HOME/jre/bin/policytool\" \"$JAVA_HOME/jre/bin/rmid\" \"$JAVA_HOME/jre/bin/rmiregistry\" \"$JAVA_HOME/jre/bin/servertool\" \"$JAVA_HOME/jre/bin/tnameserv\" \"$JAVA_HOME/jre/bin/unpack200\" \"$JAVA_HOME/jre/lib/ext/nashorn.jar\" \"$JAVA_HOME/jre/lib/jfr.jar\" \"$JAVA_HOME/jre/lib/jfr\" \"$JAVA_HOME/jre/lib/oblique-fonts\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" \\\n && unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" \\\n && rm \"${JAVA_HOME}/jre/lib/security/README.txt\" \\\n && apk del build-dependencies \\\n && rm \"/tmp/\"*\nRUN gpg --keyserver keyserver.ubuntu.com --recv-keysnRUN gpg --keyserver keyserver.ubuntu.com --recv-key C36C5F0F\n#  Add native libs\nENV HADOOP_VERSION=\"2.7.3\"\nENV HADOOP_NATIVE_LIBDIR=\"/usr/local/hadoop-${HADOOP_VERSION}/lib/native\"\nENV HADOOP_URL=\"https://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$HADOOP_NATIVE_LIBDIR\"\nRUN set -x \\\n && curl -fSL \"$HADOOP_URL\" -o /tmp/hadoop.tar.gz \\\n && curl -fSL \"$HADOOP_URL.asc\" -o /tmp/hadoop.tar.gz.asc \\\n && gpg --verify /tmp/hadoop.tar.gz.asc \\\n && tar -xvf /tmp/hadoop.tar.gz -C /usr/local/ \\\n && rm /tmp/hadoop.tar.gz*\nENV HADOOP_PREFIX=\"/usr/local/hadoop\" \\\n    HADOOP_COMMON_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_HDFS_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_MAPRED_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_YARN_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\" \\\n    YARN_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\" \\\n    PATH=\"${PATH}:/usr/local/hadoop/bin\"\nRUN cd /usr/local \\\n && ln -s ./hadoop-${HADOOP_VERSION} hadoop \\\n && mkdir ${HADOOP_PREFIX}/logs\nWORKDIR $HADOOP_PREFIX\n#  Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#  Mapred ports\nEXPOSE 19888/tcp\n# Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n# Other ports\nEXPOSE 49707/tcp 2122/tcp\n","injectedSmells":[],"originalDockerfileHash":"f400e04c4fa979d3cfa885daf8432c92","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/Comcast/kube-yarn/raw/master/image/Dockerfile\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash bzip2 gnupg tzdata vim snappy tini su-exec gzip tar wget which curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n#   Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n && ALPINE_GLIBC_PACKAGE_VERSION=\"2.28-r0\" \\\n && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n && apk add --no-cache --virtual=.build-dependencies wget ca-certificates \\\n && wget \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" -O \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && apk add --no-cache \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n && /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \\\n && echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh \\\n && apk del glibc-i18n \\\n && rm \"/root/.wget-hsts\" \\\n && apk del .build-dependencies \\\n && rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\nENV JAVA_VERSION=\"8\" \\\n    JAVA_UPDATE=\"181\" \\\n    JAVA_BUILD=\"13\" \\\n    JAVA_PATH=\"96a7b8442fe848ef90c96a2fad6ed6d1\" \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nRUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip \\\n && cd \"/tmp\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \\\n && mkdir -p \"/usr/lib/jvm\" \\\n && mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" \\\n && ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" \\\n && ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" \\\n && rm -rf \"$JAVA_HOME/\"*src.zip \\\n && rm -rf \"$JAVA_HOME/lib/missioncontrol\" \"$JAVA_HOME/lib/visualvm\" \"$JAVA_HOME/lib/\"*javafx* \"$JAVA_HOME/jre/lib/plugin.jar\" \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \"$JAVA_HOME/jre/bin/javaws\" \"$JAVA_HOME/jre/lib/javaws.jar\" \"$JAVA_HOME/jre/lib/desktop\" \"$JAVA_HOME/jre/plugin\" \"$JAVA_HOME/jre/lib/\"deploy* \"$JAVA_HOME/jre/lib/\"*javafx* \"$JAVA_HOME/jre/lib/\"*jfx* \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so \\\n && rm -rf \"$JAVA_HOME/jre/bin/jjs\" \"$JAVA_HOME/jre/bin/keytool\" \"$JAVA_HOME/jre/bin/orbd\" \"$JAVA_HOME/jre/bin/pack200\" \"$JAVA_HOME/jre/bin/policytool\" \"$JAVA_HOME/jre/bin/rmid\" \"$JAVA_HOME/jre/bin/rmiregistry\" \"$JAVA_HOME/jre/bin/servertool\" \"$JAVA_HOME/jre/bin/tnameserv\" \"$JAVA_HOME/jre/bin/unpack200\" \"$JAVA_HOME/jre/lib/ext/nashorn.jar\" \"$JAVA_HOME/jre/lib/jfr.jar\" \"$JAVA_HOME/jre/lib/jfr\" \"$JAVA_HOME/jre/lib/oblique-fonts\" \\\n && wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" \\\n && unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" \\\n && rm \"${JAVA_HOME}/jre/lib/security/README.txt\" \\\n && apk del build-dependencies \\\n && rm \"/tmp/\"*\nRUN gpg --keyserver keyserver.ubuntu.com --recv-keysnRUN gpg --keyserver keyserver.ubuntu.com --recv-key C36C5F0F\n#   Add native libs\nENV HADOOP_VERSION=\"2.7.3\"\nENV HADOOP_NATIVE_LIBDIR=\"/usr/local/hadoop-${HADOOP_VERSION}/lib/native\"\nENV HADOOP_URL=\"https://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$HADOOP_NATIVE_LIBDIR\"\nRUN set -x \\\n && curl -fSL \"$HADOOP_URL\" -o /tmp/hadoop.tar.gz \\\n && curl -fSL \"$HADOOP_URL.asc\" -o /tmp/hadoop.tar.gz.asc \\\n && gpg --verify /tmp/hadoop.tar.gz.asc \\\n && tar -xvf /tmp/hadoop.tar.gz -C /usr/local/ \\\n && rm /tmp/hadoop.tar.gz*\nENV HADOOP_PREFIX=\"/usr/local/hadoop\" \\\n    HADOOP_COMMON_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_HDFS_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_MAPRED_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_YARN_HOME=\"/usr/local/hadoop\" \\\n    HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\" \\\n    YARN_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\" \\\n    PATH=\"${PATH}:/usr/local/hadoop/bin\"\nRUN cd /usr/local \\\n && ln -s ./hadoop-${HADOOP_VERSION} hadoop \\\n && mkdir ${HADOOP_PREFIX}/logs\nWORKDIR $HADOOP_PREFIX\n#   Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#   Mapred ports\nEXPOSE 19888/tcp\n#  Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n#  Other ports\nEXPOSE 49707/tcp 2122/tcp\n","originalDockerfileUglifiedHash":"6706cb51620433851f3de24c5c6d4c61","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b4a38abd90dff859688c2a3d49dc9159edbb748c.dockerfile"}