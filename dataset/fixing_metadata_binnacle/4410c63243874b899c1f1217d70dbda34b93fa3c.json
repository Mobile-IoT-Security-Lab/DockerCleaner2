{"seed":3562786294,"processedDockerfileHash":"5145c9f55ab3c66b3c9e50636e3e5178","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Build an image with all the required compiler infrastructure\n#   to cross-compile Leosac for Raspberry Pi.\n#   We recommend you use leosaccli to use this container.\nFROM debian:stretch\nRUN echo 'deb-src http://deb.debian.org/debian stretch main' >> /etc/apt/sources.list\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends emacs24-nox=24.5+1-11+deb9u1 wget=1.18-5+deb9u3 git=1:2.11.0-3+deb9u7 cmake=3.7.2-1 build-essential=12.3 -y )\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends g++-arm-linux-gnueabihf=4:6.3.0-4 libtool-bin=2.4.6-2 -y )\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends autoconf=2.69-10 automake=1:1.15-6 pkg-config=0.29-4+b1 python3=3.5.3-1 -y )\nCOPY cross-compile-resources /cross-compile-resources\n#   Boost libraries.\n#   Create custom configuration to be able to use the cross compiling toolchain\nRUN echo 'using gcc : arm : arm-linux-gnueabihf-g++ ;' > /root/user-config.jam\n#   Extract configure build and install\nRUN (cd tmp \\\n && cp /cross-compile-resources/boost_1_63_0.tar.gz . \\\n && tar xvfz boost_1_63_0.tar.gz \\\n && cd boost_1_63_0 \\\n && ./bootstrap.sh \\\n && ./b2 --without-coroutine --without-coroutine2 --without-fiber --without-context --reconfigure toolset=gcc-arm cxxflags='-std=c++14' -j6 ./b2 --prefix=/opt/rpi_fakeroot install )\n#   ZeroMQ\nRUN (cd /opt/rpi_fakeroot \\\n && git clone https://github.com/zeromq/libzmq.git \\\n && cd libzmq \\\n && git checkout v4.2.1 \\\n && ./autogen.sh \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   TClap\nRUN (cd /tmp \\\n && : \\\n && apt-get source libtclap-dev \\\n && cd tclap-1.2.1 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  PostgreSQL native library\nRUN (cd /tmp \\\n && cp /cross-compile-resources/postgresql-9.4.10.tar.gz . \\\n && tar xvfz postgresql-9.4.10.tar.gz \\\n && cd postgresql-9.4.10 \\\n && ./configure --without-readline --without-zlib --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  SQLite native library\nRUN (cd /tmp \\\n && cp /cross-compile-resources/sqlite-autoconf-3190300.tar.gz . \\\n && tar xvfz sqlite-autoconf-3190300.tar.gz \\\n && cd sqlite-autoconf-3190300 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  #####################################################\n#       ODB - Database Object Relational Mapper        #\n#  #####################################################\n#   ODB compiler (amd64 version as code generation is run using a native\n#   odb binary).\nRUN (cd /tmp \\\n && cp /cross-compile-resources/odb_2.4.0-1_amd64.deb . \\\n && dpkg -i odb_2.4.0-1_amd64.deb )\n#   ODB common runtime\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-2.4.0.tar.gz . \\\n && tar xvf libodb-2.4.0.tar.gz \\\n && cd libodb-2.4.0 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   ODB Boost Profile\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-boost-2.4.0.tar.gz . \\\n && tar xvf libodb-boost-2.4.0.tar.gz \\\n && cd libodb-boost-2.4.0 \\\n && ./configure CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   ODB PGSQL runtime\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-pgsql-2.4.0.tar.gz . \\\n && tar xvf libodb-pgsql-2.4.0.tar.gz \\\n && cd libodb-pgsql-2.4.0 \\\n && ./configure CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   ODB SQLITE runtime\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-sqlite-2.4.0.tar.gz . \\\n && tar xvf libodb-sqlite-2.4.0.tar.gz \\\n && cd libodb-sqlite-2.4.0 \\\n && ./configure CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   LibScrypt\nRUN (cd /tmp \\\n && git clone https://github.com/technion/libscrypt.git \\\n && cd libscrypt \\\n && CC=arm-linux-gnueabihf-gcc make \\\n && cp libscrypt.h /opt/rpi_fakeroot/include \\\n && cp libscrypt.so.0 /opt/rpi_fakeroot/lib \\\n && ln -s /opt/rpi_fakeroot/lib/libscrypt.so.0 /opt/rpi_fakeroot/lib/libscrypt.so )\n#   CURL\nRUN (cd /tmp \\\n && cp /cross-compile-resources/curl-7.52.1.tar.gz . \\\n && tar xvfz curl-7.52.1.tar.gz \\\n && cd curl-7.52.1 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   OpenSSL\nRUN (cd /tmp \\\n && cp /cross-compile-resources/openssl-1.1.0d.tar.gz . \\\n && tar xvfz openssl-1.1.0d.tar.gz \\\n && cd openssl-1.1.0d \\\n && export cross=arm-linux-gnueabihf- \\\n && ./Configure linux-generic32 shared --prefix=/opt/rpi_fakeroot \\\n && make CC=\"${cross}gcc\" AR=\"${cross}ar r\" RANLIB=\"${cross}ranlib\" -j6 \\\n && make install )\n#   PCSC Lite package with headers and libraries.\nRUN (cd /tmp \\\n && cp /cross-compile-resources/pcsclite.tar . \\\n && tar xvf pcsclite.tar --strip 1 -C /opt/rpi_fakeroot )\n#   LibLogicalAccess\nRUN (cd /tmp \\\n && cp /cross-compile-resources/lla.tar . \\\n && tar xvf lla.tar \\\n && cd liblogicalaccess \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/opt/rpi_fakeroot -DCMAKE_TOOLCHAIN_FILE=/cross-compile-resources/rpi-cross.cmake -DPCSCLITE_INCLUDE_DIR=/opt/rpi_fakeroot/include/PCSC .. \\\n && make -j6 \\\n && make install )\nCOPY docker_scripts /docker_scripts\n#   Volume where the root of the Leosac repository lives.\nVOLUME /leosac\n#   Optional volume that serves as build directory. Configuration\n#   this volume allows for incremental compilation.\nVOLUME /leosac_arm_build\n#   A volume that can be mounted to specify a private key to use\n#   when using `leosaccli dev cc dev-push` to push development build\n#   to raspberry pi\nVOLUME /ssh_deploy_key\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Build an image with all the required compiler infrastructure\n#  to cross-compile Leosac for Raspberry Pi.\n#  We recommend you use leosaccli to use this container.\nFROM debian:stretch\nRUN echo 'deb-src http://deb.debian.org/debian stretch main' >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install emacs24-nox wget git cmake build-essential -y\nRUN apt-get update \\\n && apt-get install g++-arm-linux-gnueabihf libtool-bin -y\nRUN apt-get update \\\n && apt-get install autoconf automake pkg-config python3 -y\nADD cross-compile-resources /cross-compile-resources\n#  Boost libraries.\n#  Create custom configuration to be able to use the cross compiling toolchain\nRUN echo 'using gcc : arm : arm-linux-gnueabihf-g++ ;' > /root/user-config.jam\n#  Extract configure build and install\nRUN (cd tmp \\\n && cp /cross-compile-resources/boost_1_63_0.tar.gz . \\\n && tar xvfz boost_1_63_0.tar.gz \\\n && cd boost_1_63_0 \\\n && ./bootstrap.sh \\\n && ./b2 --without-coroutine --without-coroutine2 --without-fiber --without-context --reconfigure toolset=gcc-arm cxxflags='-std=c++14' -j6 ./b2 --prefix=/opt/rpi_fakeroot install )\n#  ZeroMQ\nRUN (cd /opt/rpi_fakeroot \\\n && git clone https://github.com/zeromq/libzmq.git \\\n && cd libzmq \\\n && git checkout v4.2.1 \\\n && ./autogen.sh \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  TClap\nRUN (cd /tmp \\\n && apt-get update \\\n && apt-get source libtclap-dev \\\n && cd tclap-1.2.1 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n# PostgreSQL native library\nRUN (cd /tmp \\\n && cp /cross-compile-resources/postgresql-9.4.10.tar.gz . \\\n && tar xvfz postgresql-9.4.10.tar.gz \\\n && cd postgresql-9.4.10 \\\n && ./configure --without-readline --without-zlib --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n# SQLite native library\nRUN (cd /tmp \\\n && cp /cross-compile-resources/sqlite-autoconf-3190300.tar.gz . \\\n && tar xvfz sqlite-autoconf-3190300.tar.gz \\\n && cd sqlite-autoconf-3190300 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n# #####################################################\n#      ODB - Database Object Relational Mapper        #\n# #####################################################\n#  ODB compiler (amd64 version as code generation is run using a native\n#  odb binary).\nRUN (cd /tmp \\\n && cp /cross-compile-resources/odb_2.4.0-1_amd64.deb . \\\n && dpkg -i odb_2.4.0-1_amd64.deb )\n#  ODB common runtime\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-2.4.0.tar.gz . \\\n && tar xvf libodb-2.4.0.tar.gz \\\n && cd libodb-2.4.0 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  ODB Boost Profile\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-boost-2.4.0.tar.gz . \\\n && tar xvf libodb-boost-2.4.0.tar.gz \\\n && cd libodb-boost-2.4.0 \\\n && ./configure CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  ODB PGSQL runtime\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-pgsql-2.4.0.tar.gz . \\\n && tar xvf libodb-pgsql-2.4.0.tar.gz \\\n && cd libodb-pgsql-2.4.0 \\\n && ./configure CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  ODB SQLITE runtime\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-sqlite-2.4.0.tar.gz . \\\n && tar xvf libodb-sqlite-2.4.0.tar.gz \\\n && cd libodb-sqlite-2.4.0 \\\n && ./configure CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  LibScrypt\nRUN (cd /tmp \\\n && git clone https://github.com/technion/libscrypt.git \\\n && cd libscrypt \\\n && CC=arm-linux-gnueabihf-gcc make \\\n && cp libscrypt.h /opt/rpi_fakeroot/include \\\n && cp libscrypt.so.0 /opt/rpi_fakeroot/lib \\\n && ln -s /opt/rpi_fakeroot/lib/libscrypt.so.0 /opt/rpi_fakeroot/lib/libscrypt.so )\n#  CURL\nRUN (cd /tmp \\\n && cp /cross-compile-resources/curl-7.52.1.tar.gz . \\\n && tar xvfz curl-7.52.1.tar.gz \\\n && cd curl-7.52.1 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  OpenSSL\nRUN (cd /tmp \\\n && cp /cross-compile-resources/openssl-1.1.0d.tar.gz . \\\n && tar xvfz openssl-1.1.0d.tar.gz \\\n && cd openssl-1.1.0d \\\n && export cross=arm-linux-gnueabihf- \\\n && ./Configure linux-generic32 shared --prefix=/opt/rpi_fakeroot \\\n && make CC=\"${cross}gcc\" AR=\"${cross}ar r\" RANLIB=\"${cross}ranlib\" -j6 \\\n && make install )\n#  PCSC Lite package with headers and libraries.\nRUN (cd /tmp \\\n && cp /cross-compile-resources/pcsclite.tar . \\\n && tar xvf pcsclite.tar --strip 1 -C /opt/rpi_fakeroot )\n#  LibLogicalAccess\nRUN (cd /tmp \\\n && cp /cross-compile-resources/lla.tar . \\\n && tar xvf lla.tar \\\n && cd liblogicalaccess \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/opt/rpi_fakeroot -DCMAKE_TOOLCHAIN_FILE=/cross-compile-resources/rpi-cross.cmake -DPCSCLITE_INCLUDE_DIR=/opt/rpi_fakeroot/include/PCSC .. \\\n && make -j6 \\\n && make install )\nADD docker_scripts /docker_scripts\n#  Volume where the root of the Leosac repository lives.\nVOLUME /leosac\n#  Optional volume that serves as build directory. Configuration\n#  this volume allows for incremental compilation.\nVOLUME /leosac_arm_build\n#  A volume that can be mounted to specify a private key to use\n#  when using `leosaccli dev cc dev-push` to push development build\n#  to raspberry pi\nVOLUME /ssh_deploy_key\n","injectedSmells":[],"originalDockerfileHash":"85499b479c0842e0d151f148d45bcdf6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build an image with all the required compiler infrastructure\n#   to cross-compile Leosac for Raspberry Pi.\n#   We recommend you use leosaccli to use this container.\nFROM debian:stretch\nRUN echo 'deb-src http://deb.debian.org/debian stretch main' >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install emacs24-nox wget git cmake build-essential -y\nRUN apt-get update \\\n && apt-get install g++-arm-linux-gnueabihf libtool-bin -y\nRUN apt-get update \\\n && apt-get install autoconf automake pkg-config python3 -y\nADD cross-compile-resources /cross-compile-resources\n#   Boost libraries.\n#   Create custom configuration to be able to use the cross compiling toolchain\nRUN echo 'using gcc : arm : arm-linux-gnueabihf-g++ ;' > /root/user-config.jam\n#   Extract configure build and install\nRUN (cd tmp \\\n && cp /cross-compile-resources/boost_1_63_0.tar.gz . \\\n && tar xvfz boost_1_63_0.tar.gz \\\n && cd boost_1_63_0 \\\n && ./bootstrap.sh \\\n && ./b2 --without-coroutine --without-coroutine2 --without-fiber --without-context --reconfigure toolset=gcc-arm cxxflags='-std=c++14' -j6 ./b2 --prefix=/opt/rpi_fakeroot install )\n#   ZeroMQ\nRUN (cd /opt/rpi_fakeroot \\\n && git clone https://github.com/zeromq/libzmq.git \\\n && cd libzmq \\\n && git checkout v4.2.1 \\\n && ./autogen.sh \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   TClap\nRUN (cd /tmp \\\n && apt-get update \\\n && apt-get source libtclap-dev \\\n && cd tclap-1.2.1 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  PostgreSQL native library\nRUN (cd /tmp \\\n && cp /cross-compile-resources/postgresql-9.4.10.tar.gz . \\\n && tar xvfz postgresql-9.4.10.tar.gz \\\n && cd postgresql-9.4.10 \\\n && ./configure --without-readline --without-zlib --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  SQLite native library\nRUN (cd /tmp \\\n && cp /cross-compile-resources/sqlite-autoconf-3190300.tar.gz . \\\n && tar xvfz sqlite-autoconf-3190300.tar.gz \\\n && cd sqlite-autoconf-3190300 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#  #####################################################\n#       ODB - Database Object Relational Mapper        #\n#  #####################################################\n#   ODB compiler (amd64 version as code generation is run using a native\n#   odb binary).\nRUN (cd /tmp \\\n && cp /cross-compile-resources/odb_2.4.0-1_amd64.deb . \\\n && dpkg -i odb_2.4.0-1_amd64.deb )\n#   ODB common runtime\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-2.4.0.tar.gz . \\\n && tar xvf libodb-2.4.0.tar.gz \\\n && cd libodb-2.4.0 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   ODB Boost Profile\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-boost-2.4.0.tar.gz . \\\n && tar xvf libodb-boost-2.4.0.tar.gz \\\n && cd libodb-boost-2.4.0 \\\n && ./configure CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   ODB PGSQL runtime\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-pgsql-2.4.0.tar.gz . \\\n && tar xvf libodb-pgsql-2.4.0.tar.gz \\\n && cd libodb-pgsql-2.4.0 \\\n && ./configure CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   ODB SQLITE runtime\nRUN (cd /tmp \\\n && cp /cross-compile-resources/libodb-sqlite-2.4.0.tar.gz . \\\n && tar xvf libodb-sqlite-2.4.0.tar.gz \\\n && cd libodb-sqlite-2.4.0 \\\n && ./configure CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   LibScrypt\nRUN (cd /tmp \\\n && git clone https://github.com/technion/libscrypt.git \\\n && cd libscrypt \\\n && CC=arm-linux-gnueabihf-gcc make \\\n && cp libscrypt.h /opt/rpi_fakeroot/include \\\n && cp libscrypt.so.0 /opt/rpi_fakeroot/lib \\\n && ln -s /opt/rpi_fakeroot/lib/libscrypt.so.0 /opt/rpi_fakeroot/lib/libscrypt.so )\n#   CURL\nRUN (cd /tmp \\\n && cp /cross-compile-resources/curl-7.52.1.tar.gz . \\\n && tar xvfz curl-7.52.1.tar.gz \\\n && cd curl-7.52.1 \\\n && ./configure --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf \\\n && make -j6 \\\n && make install )\n#   OpenSSL\nRUN (cd /tmp \\\n && cp /cross-compile-resources/openssl-1.1.0d.tar.gz . \\\n && tar xvfz openssl-1.1.0d.tar.gz \\\n && cd openssl-1.1.0d \\\n && export cross=arm-linux-gnueabihf- \\\n && ./Configure linux-generic32 shared --prefix=/opt/rpi_fakeroot \\\n && make CC=\"${cross}gcc\" AR=\"${cross}ar r\" RANLIB=\"${cross}ranlib\" -j6 \\\n && make install )\n#   PCSC Lite package with headers and libraries.\nRUN (cd /tmp \\\n && cp /cross-compile-resources/pcsclite.tar . \\\n && tar xvf pcsclite.tar --strip 1 -C /opt/rpi_fakeroot )\n#   LibLogicalAccess\nRUN (cd /tmp \\\n && cp /cross-compile-resources/lla.tar . \\\n && tar xvf lla.tar \\\n && cd liblogicalaccess \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/opt/rpi_fakeroot -DCMAKE_TOOLCHAIN_FILE=/cross-compile-resources/rpi-cross.cmake -DPCSCLITE_INCLUDE_DIR=/opt/rpi_fakeroot/include/PCSC .. \\\n && make -j6 \\\n && make install )\nADD docker_scripts /docker_scripts\n#   Volume where the root of the Leosac repository lives.\nVOLUME /leosac\n#   Optional volume that serves as build directory. Configuration\n#   this volume allows for incremental compilation.\nVOLUME /leosac_arm_build\n#   A volume that can be mounted to specify a private key to use\n#   when using `leosaccli dev cc dev-push` to push development build\n#   to raspberry pi\nVOLUME /ssh_deploy_key\n","originalDockerfileUglifiedHash":"d7ab7b092aeacae775348487794cafa9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4410c63243874b899c1f1217d70dbda34b93fa3c.dockerfile"}