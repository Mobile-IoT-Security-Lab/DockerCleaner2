{"seed":3508778034,"processedDockerfileHash":"60cfc2e286643e1945f213951d2e6fd9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   # Build command\n#   # \tdocker build -t arm-tool-base:latest --build-arg license_path=/path/to/license .\n#\n#   # Run command\n#   # \tdocker run -it arm-tool-base:latest\nFROM ubuntu:16.04\nMAINTAINER Zach\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN :\n#  ## \tSystem Functionality \t###\nRUN (apt-get update ;apt-get install --no-install-recommends apt-utils=1.2.35 iputils-ping=3:20121221-5ubuntu2 python2.7=2.7.12-1ubuntu0~16.04.18 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python-pip=8.1.1-2ubuntu0.6 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends lsb-core=9.20160110ubuntu0.2 libxext6=2:1.3.3-1 libsm6=2:1.2.2-1 libxcursor1=1:1.1.14-1ubuntu0.16.04.2 libxft2=2.3.2-1 libxrandr2=2:1.5.0-1 libxt6=1:1.1.5-0ubuntu1 libxinerama1=2:1.1.3-1 libasound2=1.1.0-0ubuntu1 libatk1.0-0=2.18.0-1 libcairo2=1.14.6-1 libgl1 libglu1 libgtk2.0-0=2.24.30-1ubuntu1.16.04.2 libxi6=2:1.7.6-1 libxtst6=2:1.2.2-1 gcc-multilib=4:5.3.1-1ubuntu1 libstdc++6=5.4.0-6ubuntu1~16.04.12 libwebkitgtk-1.0-0=2.4.11-0ubuntu0.1 -y --fix-missing )\n#   # set the license path from command line argument\nARG license_path\nENV ARMLMD_LICENSE_FILE=\"$license_path\"\n#   # create /arm-tools/ dirctory to install all tools into\nRUN mkdir /arm-tools/ \\\n && chmod 755 /arm-tools/\n#  ## \tTool Version Select \t###\nARG FM_INSTALL=FastModels_11-5-033_Linux64\nARG FM_DIR=FastModelsTools_11.5\nARG ArmDS_INSTALL=DS000-BN-00001-r18p0-00rel0\nARG ArmDS_VERSION=2018.0\nARG ArmDS_DIR=ArmDS\n#  ARG DS5_INSTALL=DS500-BN-00019-r5p0-28rel1\n#  ARG DS5_DIR=DS-5v5.28.0\n#  ## \tInstall Fast Models \t###\n#   # copy file from same directory as this Dockerfile\nCOPY $FM_INSTALL.tgz /home/\n#   # install program and delete artifacts\nRUN tar xvzf /home/$FM_INSTALL.tgz \\\n && cd $FM_INSTALL \\\n && ./setup.sh --i-accept-the-license-agreement --basepath /arm-tools/ \\\n && rm /home/$FM_INSTALL.tgz \\\n && rm -r /$FM_INSTALL/\n#   # add setup to /init.sh \nRUN echo \"set +e; . /arm-tools/$FM_DIR/source_all.sh\" >> /init.sh\n#  ## \tInstall ArmDS\t###\n#   # copy file from same directory as this Dockerfile\nCOPY $ArmDS_INSTALL.tgz /home/\n#   # install program and delete artifacts\nRUN mkdir /$ArmDS_INSTALL/ \\\n && tar xvzf /home/$ArmDS_INSTALL.tgz --directory /$ArmDS_INSTALL/ \\\n && cd $ArmDS_INSTALL/ \\\n && ./armds-$ArmDS_VERSION.sh --i-agree-to-the-contained-eula --no-interactive -d /arm-tools/$ArmDS_DIR/ \\\n && rm /home/$ArmDS_INSTALL.tgz \\\n && rm -r /$ArmDS_INSTALL/\n#   # add setup to /init.sh \nRUN echo \"export PATH=$PATH:/arm-tools/$ArmDS_DIR/sw/ARMCompiler6.9/bin:/arm-tools/$ArmDS_DIR/bin:/arm-tools/$ArmDS_DIR/sw/java/bin\" >> /init.sh \\\n && echo \"export ARMDS_CDB_PATH=/arm-tools/$ArmDS_DIR/sw/debugger/configdb\" >> /init.sh \\\n && echo \"export DBGHWCONFIG_PLATFORMFILES=/arm-tools/$ArmDS_DIR/sw/debughw/PlatformFiles\" >> /init.sh \\\n && echo \"export ARM_PRODUCT_PATH=/arm-tools/$ArmDS_DIR/sw/mappings\" >> /init.sh \\\n && echo \"export ARMDS_HOME=/arm-tools/$ArmDS_DIR\" >> /init.sh\n#  ## \tInstall DS5 \t###\n#   # copy file from same directory as this Dockerfile\n#   COPY $DS5_INSTALL.tgz /home/\n#   # install program and delete artifacts\n#   # DS5 installer doesn't work with the default tar binary, change to bsdtar then change back.\n#   RUN \tmkdir /$DS5_INSTALL/ \t\t\t\t\t&&\\\n#  \t\ttar xvzf /home/$DS5_INSTALL.tgz --directory /$DS5_INSTALL/ &&\\\n#  \t\tcd $DS5_INSTALL/ \t\t\t\t\t\t&&\\\n#  \t\tapt-get install -y bsdtar \t\t\t\t&&\\\n#  \t\tcp $(which tar) $(which tar)~ \t\t\t&&\\\n#  \t\tln -sf $(which bsdtar) $(which tar) \t&&\\\n#  \t\t./install.sh --i-agree-to-the-contained-eula --no-interactive -d /arm-tools/$DS5_DIR/ &&\\\n#  \t\tmv $(which tar)~ $(which tar) \t\t\t&&\\\n#  \t\trm /home/$DS5_INSTALL.tgz \t\t\t\t&&\\\n#  \t\trm -r /$DS5_INSTALL/\n#   # add setup to /init.sh \n#   RUN\techo \t\"export PATH=$PATH:/arm-tools/$DS5_DIR/sw/ARMCompiler6.9/bin:/arm-tools/$DS5_DIR/bin:/arm-tools/$DS5_DIR/sw/java/bin\"    >> /init.sh &&\\\n#  \techo \t\"export DS5_CDB_PATH=/arm-tools/$DS5_DIR/sw/debugger/configdb\"   >> /init.sh \t\t\t&&\\\n#  \techo \t\"export DBGHWCONFIG_PLATFORMFILES=/arm-tools/$DS5_DIR/sw/debughw/PlatformFiles\"   >> /init.sh \t&&\\\n#  \techo \t\"export ARM_PRODUCT_PATH=/arm-tools/$DS5_DIR/sw/mappings\"   >> /init.sh \t\t\t&&\\\n#  \techo \t\"export DS5_HOME=/arm-tools/$DS5_DIR\" >> /init.sh \nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  # Build command\n#  # \tdocker build -t arm-tool-base:latest --build-arg license_path=/path/to/license .\n#\n#  # Run command\n#  # \tdocker run -it arm-tool-base:latest\nFROM ubuntu:16.04\nMAINTAINER Zach\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -y\n# ## \tSystem Functionality \t###\nRUN apt-get install apt-utils iputils-ping python2.7 -y\nRUN apt-get install python-pip -y\nRUN apt-get install lsb-core libxext6 libsm6 libxcursor1 libxft2 libxrandr2 libxt6 libxinerama1 libasound2 libatk1.0-0 libcairo2 libgl1 libglu1 libgtk2.0-0 libxi6 libxtst6 gcc-multilib libstdc++6 libwebkitgtk-1.0-0 -y --fix-missing\n#  # set the license path from command line argument\nARG license_path\nENV ARMLMD_LICENSE_FILE=\"$license_path\"\n#  # create /arm-tools/ dirctory to install all tools into\nRUN mkdir /arm-tools/ \\\n && chmod 755 /arm-tools/\n# ## \tTool Version Select \t###\nARG FM_INSTALL=FastModels_11-5-033_Linux64\nARG FM_DIR=FastModelsTools_11.5\nARG ArmDS_INSTALL=DS000-BN-00001-r18p0-00rel0\nARG ArmDS_VERSION=2018.0\nARG ArmDS_DIR=ArmDS\n# ARG DS5_INSTALL=DS500-BN-00019-r5p0-28rel1\n# ARG DS5_DIR=DS-5v5.28.0\n# ## \tInstall Fast Models \t###\n#  # copy file from same directory as this Dockerfile\nCOPY $FM_INSTALL.tgz /home/\n#  # install program and delete artifacts\nRUN tar xvzf /home/$FM_INSTALL.tgz \\\n && cd $FM_INSTALL \\\n && ./setup.sh --i-accept-the-license-agreement --basepath /arm-tools/ \\\n && rm /home/$FM_INSTALL.tgz \\\n && rm -r /$FM_INSTALL/\n#  # add setup to /init.sh \nRUN echo \"set +e; . /arm-tools/$FM_DIR/source_all.sh\" >> /init.sh\n# ## \tInstall ArmDS\t###\n#  # copy file from same directory as this Dockerfile\nCOPY $ArmDS_INSTALL.tgz /home/\n#  # install program and delete artifacts\nRUN mkdir /$ArmDS_INSTALL/ \\\n && tar xvzf /home/$ArmDS_INSTALL.tgz --directory /$ArmDS_INSTALL/ \\\n && cd $ArmDS_INSTALL/ \\\n && ./armds-$ArmDS_VERSION.sh --i-agree-to-the-contained-eula --no-interactive -d /arm-tools/$ArmDS_DIR/ \\\n && rm /home/$ArmDS_INSTALL.tgz \\\n && rm -r /$ArmDS_INSTALL/\n#  # add setup to /init.sh \nRUN echo \"export PATH=$PATH:/arm-tools/$ArmDS_DIR/sw/ARMCompiler6.9/bin:/arm-tools/$ArmDS_DIR/bin:/arm-tools/$ArmDS_DIR/sw/java/bin\" >> /init.sh \\\n && echo \"export ARMDS_CDB_PATH=/arm-tools/$ArmDS_DIR/sw/debugger/configdb\" >> /init.sh \\\n && echo \"export DBGHWCONFIG_PLATFORMFILES=/arm-tools/$ArmDS_DIR/sw/debughw/PlatformFiles\" >> /init.sh \\\n && echo \"export ARM_PRODUCT_PATH=/arm-tools/$ArmDS_DIR/sw/mappings\" >> /init.sh \\\n && echo \"export ARMDS_HOME=/arm-tools/$ArmDS_DIR\" >> /init.sh\n# ## \tInstall DS5 \t###\n#  # copy file from same directory as this Dockerfile\n#  COPY $DS5_INSTALL.tgz /home/\n#  # install program and delete artifacts\n#  # DS5 installer doesn't work with the default tar binary, change to bsdtar then change back.\n#  RUN \tmkdir /$DS5_INSTALL/ \t\t\t\t\t&&\\\n# \t\ttar xvzf /home/$DS5_INSTALL.tgz --directory /$DS5_INSTALL/ &&\\\n# \t\tcd $DS5_INSTALL/ \t\t\t\t\t\t&&\\\n# \t\tapt-get install -y bsdtar \t\t\t\t&&\\\n# \t\tcp $(which tar) $(which tar)~ \t\t\t&&\\\n# \t\tln -sf $(which bsdtar) $(which tar) \t&&\\\n# \t\t./install.sh --i-agree-to-the-contained-eula --no-interactive -d /arm-tools/$DS5_DIR/ &&\\\n# \t\tmv $(which tar)~ $(which tar) \t\t\t&&\\\n# \t\trm /home/$DS5_INSTALL.tgz \t\t\t\t&&\\\n# \t\trm -r /$DS5_INSTALL/\n#  # add setup to /init.sh \n#  RUN\techo \t\"export PATH=$PATH:/arm-tools/$DS5_DIR/sw/ARMCompiler6.9/bin:/arm-tools/$DS5_DIR/bin:/arm-tools/$DS5_DIR/sw/java/bin\"    >> /init.sh &&\\\n# \techo \t\"export DS5_CDB_PATH=/arm-tools/$DS5_DIR/sw/debugger/configdb\"   >> /init.sh \t\t\t&&\\\n# \techo \t\"export DBGHWCONFIG_PLATFORMFILES=/arm-tools/$DS5_DIR/sw/debughw/PlatformFiles\"   >> /init.sh \t&&\\\n# \techo \t\"export ARM_PRODUCT_PATH=/arm-tools/$DS5_DIR/sw/mappings\"   >> /init.sh \t\t\t&&\\\n# \techo \t\"export DS5_HOME=/arm-tools/$DS5_DIR\" >> /init.sh \n","injectedSmells":[],"originalDockerfileHash":"47f753ab386c5403f6c9f0b6d123b432","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   # Build command\n#   # \tdocker build -t arm-tool-base:latest --build-arg license_path=/path/to/license .\n#\n#   # Run command\n#   # \tdocker run -it arm-tool-base:latest\nFROM ubuntu:16.04\nMAINTAINER Zach\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -y\n#  ## \tSystem Functionality \t###\nRUN apt-get install apt-utils iputils-ping python2.7 -y\nRUN apt-get install python-pip -y\nRUN apt-get install lsb-core libxext6 libsm6 libxcursor1 libxft2 libxrandr2 libxt6 libxinerama1 libasound2 libatk1.0-0 libcairo2 libgl1 libglu1 libgtk2.0-0 libxi6 libxtst6 gcc-multilib libstdc++6 libwebkitgtk-1.0-0 -y --fix-missing\n#   # set the license path from command line argument\nARG license_path\nENV ARMLMD_LICENSE_FILE=\"$license_path\"\n#   # create /arm-tools/ dirctory to install all tools into\nRUN mkdir /arm-tools/ \\\n && chmod 755 /arm-tools/\n#  ## \tTool Version Select \t###\nARG FM_INSTALL=FastModels_11-5-033_Linux64\nARG FM_DIR=FastModelsTools_11.5\nARG ArmDS_INSTALL=DS000-BN-00001-r18p0-00rel0\nARG ArmDS_VERSION=2018.0\nARG ArmDS_DIR=ArmDS\n#  ARG DS5_INSTALL=DS500-BN-00019-r5p0-28rel1\n#  ARG DS5_DIR=DS-5v5.28.0\n#  ## \tInstall Fast Models \t###\n#   # copy file from same directory as this Dockerfile\nCOPY $FM_INSTALL.tgz /home/\n#   # install program and delete artifacts\nRUN tar xvzf /home/$FM_INSTALL.tgz \\\n && cd $FM_INSTALL \\\n && ./setup.sh --i-accept-the-license-agreement --basepath /arm-tools/ \\\n && rm /home/$FM_INSTALL.tgz \\\n && rm -r /$FM_INSTALL/\n#   # add setup to /init.sh \nRUN echo \"set +e; . /arm-tools/$FM_DIR/source_all.sh\" >> /init.sh\n#  ## \tInstall ArmDS\t###\n#   # copy file from same directory as this Dockerfile\nCOPY $ArmDS_INSTALL.tgz /home/\n#   # install program and delete artifacts\nRUN mkdir /$ArmDS_INSTALL/ \\\n && tar xvzf /home/$ArmDS_INSTALL.tgz --directory /$ArmDS_INSTALL/ \\\n && cd $ArmDS_INSTALL/ \\\n && ./armds-$ArmDS_VERSION.sh --i-agree-to-the-contained-eula --no-interactive -d /arm-tools/$ArmDS_DIR/ \\\n && rm /home/$ArmDS_INSTALL.tgz \\\n && rm -r /$ArmDS_INSTALL/\n#   # add setup to /init.sh \nRUN echo \"export PATH=$PATH:/arm-tools/$ArmDS_DIR/sw/ARMCompiler6.9/bin:/arm-tools/$ArmDS_DIR/bin:/arm-tools/$ArmDS_DIR/sw/java/bin\" >> /init.sh \\\n && echo \"export ARMDS_CDB_PATH=/arm-tools/$ArmDS_DIR/sw/debugger/configdb\" >> /init.sh \\\n && echo \"export DBGHWCONFIG_PLATFORMFILES=/arm-tools/$ArmDS_DIR/sw/debughw/PlatformFiles\" >> /init.sh \\\n && echo \"export ARM_PRODUCT_PATH=/arm-tools/$ArmDS_DIR/sw/mappings\" >> /init.sh \\\n && echo \"export ARMDS_HOME=/arm-tools/$ArmDS_DIR\" >> /init.sh\n#  ## \tInstall DS5 \t###\n#   # copy file from same directory as this Dockerfile\n#   COPY $DS5_INSTALL.tgz /home/\n#   # install program and delete artifacts\n#   # DS5 installer doesn't work with the default tar binary, change to bsdtar then change back.\n#   RUN \tmkdir /$DS5_INSTALL/ \t\t\t\t\t&&\\\n#  \t\ttar xvzf /home/$DS5_INSTALL.tgz --directory /$DS5_INSTALL/ &&\\\n#  \t\tcd $DS5_INSTALL/ \t\t\t\t\t\t&&\\\n#  \t\tapt-get install -y bsdtar \t\t\t\t&&\\\n#  \t\tcp $(which tar) $(which tar)~ \t\t\t&&\\\n#  \t\tln -sf $(which bsdtar) $(which tar) \t&&\\\n#  \t\t./install.sh --i-agree-to-the-contained-eula --no-interactive -d /arm-tools/$DS5_DIR/ &&\\\n#  \t\tmv $(which tar)~ $(which tar) \t\t\t&&\\\n#  \t\trm /home/$DS5_INSTALL.tgz \t\t\t\t&&\\\n#  \t\trm -r /$DS5_INSTALL/\n#   # add setup to /init.sh \n#   RUN\techo \t\"export PATH=$PATH:/arm-tools/$DS5_DIR/sw/ARMCompiler6.9/bin:/arm-tools/$DS5_DIR/bin:/arm-tools/$DS5_DIR/sw/java/bin\"    >> /init.sh &&\\\n#  \techo \t\"export DS5_CDB_PATH=/arm-tools/$DS5_DIR/sw/debugger/configdb\"   >> /init.sh \t\t\t&&\\\n#  \techo \t\"export DBGHWCONFIG_PLATFORMFILES=/arm-tools/$DS5_DIR/sw/debughw/PlatformFiles\"   >> /init.sh \t&&\\\n#  \techo \t\"export ARM_PRODUCT_PATH=/arm-tools/$DS5_DIR/sw/mappings\"   >> /init.sh \t\t\t&&\\\n#  \techo \t\"export DS5_HOME=/arm-tools/$DS5_DIR\" >> /init.sh \n","originalDockerfileUglifiedHash":"405d7ee08e2dc72db60f29e1a67d55e8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8516fb5c21ed0e50b552b98723e893336cd13ab2.dockerfile"}