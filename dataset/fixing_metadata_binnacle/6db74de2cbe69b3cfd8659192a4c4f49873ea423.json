{"seed":3213467016,"processedDockerfileHash":"80274c7c998eddf719159f2ab343de2a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-gem","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck"],"processedDockerfile":"#   Jupyter container used for Galaxy IPython (+other kernels) Integration\nFROM jupyter/datascience-notebook:628fbcb24afd\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Install system libraries first as root\nUSER root\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libcurl4-openssl-dev libxml2-dev apt-transport-https python-dev libc-dev pandoc pkg-config liblzma-dev libbz2-dev libpcre3-dev build-essential libblas-dev liblapack-dev gfortran libzmq3-dev libyaml-dev libxrender1 fonts-dejavu libfreetype6-dev libpng-dev net-tools procps libreadline-dev wget software-properties-common octave zlib1g-dev libtinfo-dev libcairo2-dev libpango1.0-dev -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Glasgow Haskell Compiler\n#  RUN add-apt-repository -y ppa:hvr/ghc && \\\n#      sed -i s/jessie/trusty/g /etc/apt/sources.list.d/hvr-ghc-jessie.list && \\\n#      apt-get update && apt-get install -y cabal-install-1.22 ghc-7.8.4 happy-1.19.4 alex-3.1.3 && \\\n#      apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Ruby dependencies\nRUN add-apt-repository -y ppa:brightbox/ruby-ng \\\n && sed -i s/jessie/trusty/g /etc/apt/sources.list.d/brightbox-ruby-ng-jessie.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends ruby2.2 ruby2.2-dev libtool autoconf automake gnuplot-nox libsqlite3-dev libatlas-base-dev libgsl0-dev libmagick++-dev imagemagick -y \\\n && ln -s /usr/bin/libtoolize /usr/bin/libtool \\\n && apt-get purge -y software-properties-common \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN gem install rbczmq --version 1.7.9 --no-rdoc --no-ri\nENV PATH=\"/home/$NB_USER/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:$PATH\"\nUSER jovyan\n#   Python packages\nRUN conda config --add channels r \\\n && conda install --yes --quiet biopython rpy2 cython patsy statsmodels cloudpickle dill tensorflow=1.1* r-xml \\\n && conda clean -yt \\\n && pip install bioblend==1.1.1 galaxy-ie-helpers==0.2.7 --no-cache-dir\n#   Now for a python2 environment\nRUN /bin/bash -c \"source activate python2 \\\n && conda install --quiet --yes biopython rpy2 cython patsy statsmodels cloudpickle dill tensorflow=1.1* \\\n && conda clean -yt \\\n && pip install --no-cache-dir bioblend galaxy-ie-helpers\"\n#   IRuby\nRUN iruby register\n#   IHaskell + IHaskell-Widgets + Dependencies for examples\n#  RUN cabal update && \\\n#      CURL_CA_BUNDLE='/etc/ssl/certs/ca-certificates.crt' curl 'https://www.stackage.org/lts-2.22/cabal.config?global=true' >> ~/.cabal/config && \\\n#      cabal install cpphs && \\\n#      cabal install gtk2hs-buildtools && \\\n#      cabal install ihaskell-0.8.0.0 --reorder-goals && \\\n#      cabal install ihaskell-widgets-0.2.2.1 HTTP Chart Chart-cairo && \\\n#       ~/.cabal/bin/ihaskell install && \\\n#      rm -fr $(echo ~/.cabal/bin/* | grep -iv ihaskell) ~/.cabal/packages ~/.cabal/share/doc ~/.cabal/setup-exe-cache ~/.cabal/logs\n#   Extra Kernels\nRUN pip install pip==23.1 --upgrade \\\n && pip install bash_kernel==0.9.0 bioblend==1.1.1 octave_kernel==0.35.1 galaxy-ie-helpers==0.2.7 --user --no-cache-dir \\\n && python -m bash_kernel.install \\\n && echo 'export PATH=/home/jovyan/.local/bin:$PATH' >> /home/jovyan/.bashrc\nCOPY ./startup.sh /startup.sh\nCOPY ./monitor_traffic.sh /monitor_traffic.sh\nCOPY ./get_notebook.py /get_notebook.py\nUSER root\n#   /import will be the universal mount-point for Jupyter\n#   The Galaxy instance can copy in data that needs to be present to the Jupyter webserver\nRUN mkdir /import\n#   We can get away with just creating this single file and Jupyter will create the rest of the\n#   profile for us.\nRUN mkdir -p /home/$NB_USER/.ipython/profile_default/startup/\nRUN mkdir -p /home/$NB_USER/.jupyter/custom/\nCOPY ./ipython-profile.py /home/$NB_USER/.ipython/profile_default/startup/00-load.py\n#  ADD ./ipython_notebook_config.py /home/$NB_USER/.jupyter/jupyter_notebook_config.py\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nCOPY ./custom.js /home/$NB_USER/.jupyter/custom/custom.js\nCOPY ./custom.css /home/$NB_USER/.jupyter/custom/custom.css\nCOPY ./default_notebook.ipynb /home/$NB_USER/notebook.ipynb\n#   ENV variables to replace conf file\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV DEBUG=\"false\" \\\n    GALAXY_WEB_PORT=\"10000\" \\\n    CORS_ORIGIN=\"none\" \\\n    DOCKER_PORT=\"none\" \\\n    API_KEY=\"none\" \\\n    HISTORY_ID=\"none\" \\\n    REMOTE_HOST=\"none\" \\\n    GALAXY_URL=\"none\"\nRUN chown -R $NB_USER:users /home/$NB_USER/ /import\nUSER jovyan\nWORKDIR /import\n#   Jupyter will run on port 8888, export this port to the host system\n#   Start Jupyter Notebook\nCMD /startup.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Jupyter container used for Galaxy IPython (+other kernels) Integration\nFROM jupyter/datascience-notebook:628fbcb24afd\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Install system libraries first as root\nUSER root\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libcurl4-openssl-dev libxml2-dev apt-transport-https python-dev libc-dev pandoc pkg-config liblzma-dev libbz2-dev libpcre3-dev build-essential libblas-dev liblapack-dev gfortran libzmq3-dev libyaml-dev libxrender1 fonts-dejavu libfreetype6-dev libpng-dev net-tools procps libreadline-dev wget software-properties-common octave zlib1g-dev libtinfo-dev libcairo2-dev libpango1.0-dev -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Glasgow Haskell Compiler\n# RUN add-apt-repository -y ppa:hvr/ghc && \\\n#     sed -i s/jessie/trusty/g /etc/apt/sources.list.d/hvr-ghc-jessie.list && \\\n#     apt-get update && apt-get install -y cabal-install-1.22 ghc-7.8.4 happy-1.19.4 alex-3.1.3 && \\\n#     apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Ruby dependencies\nRUN add-apt-repository -y ppa:brightbox/ruby-ng \\\n && sed -i s/jessie/trusty/g /etc/apt/sources.list.d/brightbox-ruby-ng-jessie.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends ruby2.2 ruby2.2-dev libtool autoconf automake gnuplot-nox libsqlite3-dev libatlas-base-dev libgsl0-dev libmagick++-dev imagemagick -y \\\n && ln -s /usr/bin/libtoolize /usr/bin/libtool \\\n && apt-get purge -y software-properties-common \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN gem install rbczmq --no-rdoc --no-ri\nENV PATH=\"/home/$NB_USER/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:$PATH\"\nUSER jovyan\n#  Python packages\nRUN conda config --add channels r \\\n && conda install --yes --quiet biopython rpy2 cython patsy statsmodels cloudpickle dill tensorflow=1.1* r-xml \\\n && conda clean -yt \\\n && pip install bioblend galaxy-ie-helpers --no-cache-dir\n#  Now for a python2 environment\nRUN /bin/bash -c \"source activate python2 \\\n && conda install --quiet --yes biopython rpy2 cython patsy statsmodels cloudpickle dill tensorflow=1.1* \\\n && conda clean -yt \\\n && pip install --no-cache-dir bioblend galaxy-ie-helpers\"\n#  IRuby\nRUN iruby register\n#  IHaskell + IHaskell-Widgets + Dependencies for examples\n# RUN cabal update && \\\n#     CURL_CA_BUNDLE='/etc/ssl/certs/ca-certificates.crt' curl 'https://www.stackage.org/lts-2.22/cabal.config?global=true' >> ~/.cabal/config && \\\n#     cabal install cpphs && \\\n#     cabal install gtk2hs-buildtools && \\\n#     cabal install ihaskell-0.8.0.0 --reorder-goals && \\\n#     cabal install ihaskell-widgets-0.2.2.1 HTTP Chart Chart-cairo && \\\n#      ~/.cabal/bin/ihaskell install && \\\n#     rm -fr $(echo ~/.cabal/bin/* | grep -iv ihaskell) ~/.cabal/packages ~/.cabal/share/doc ~/.cabal/setup-exe-cache ~/.cabal/logs\n#  Extra Kernels\nRUN pip install pip --upgrade \\\n && pip install bash_kernel bioblend octave_kernel galaxy-ie-helpers --user --no-cache-dir \\\n && python -m bash_kernel.install \\\n && echo 'export PATH=/home/jovyan/.local/bin:$PATH' >> /home/jovyan/.bashrc\nADD ./startup.sh /startup.sh\nADD ./monitor_traffic.sh /monitor_traffic.sh\nADD ./get_notebook.py /get_notebook.py\nUSER root\n#  /import will be the universal mount-point for Jupyter\n#  The Galaxy instance can copy in data that needs to be present to the Jupyter webserver\nRUN mkdir /import\n#  We can get away with just creating this single file and Jupyter will create the rest of the\n#  profile for us.\nRUN mkdir -p /home/$NB_USER/.ipython/profile_default/startup/\nRUN mkdir -p /home/$NB_USER/.jupyter/custom/\nCOPY ./ipython-profile.py /home/$NB_USER/.ipython/profile_default/startup/00-load.py\n# ADD ./ipython_notebook_config.py /home/$NB_USER/.jupyter/jupyter_notebook_config.py\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nADD ./custom.js /home/$NB_USER/.jupyter/custom/custom.js\nADD ./custom.css /home/$NB_USER/.jupyter/custom/custom.css\nADD ./default_notebook.ipynb /home/$NB_USER/notebook.ipynb\n#  ENV variables to replace conf file\nENV DEBUG=\"false\" \\\n    GALAXY_WEB_PORT=\"10000\" \\\n    NOTEBOOK_PASSWORD=\"none\" \\\n    CORS_ORIGIN=\"none\" \\\n    DOCKER_PORT=\"none\" \\\n    API_KEY=\"none\" \\\n    HISTORY_ID=\"none\" \\\n    REMOTE_HOST=\"none\" \\\n    GALAXY_URL=\"none\"\nRUN chown -R $NB_USER:users /home/$NB_USER/ /import\nUSER jovyan\nWORKDIR /import\n#  Jupyter will run on port 8888, export this port to the host system\n#  Start Jupyter Notebook\nCMD /startup.sh\n","injectedSmells":[],"originalDockerfileHash":"8d520f7c5ca444824263abc3bf899d88","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Jupyter container used for Galaxy IPython (+other kernels) Integration\nFROM jupyter/datascience-notebook:628fbcb24afd\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Install system libraries first as root\nUSER root\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libcurl4-openssl-dev libxml2-dev apt-transport-https python-dev libc-dev pandoc pkg-config liblzma-dev libbz2-dev libpcre3-dev build-essential libblas-dev liblapack-dev gfortran libzmq3-dev libyaml-dev libxrender1 fonts-dejavu libfreetype6-dev libpng-dev net-tools procps libreadline-dev wget software-properties-common octave zlib1g-dev libtinfo-dev libcairo2-dev libpango1.0-dev -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Glasgow Haskell Compiler\n#  RUN add-apt-repository -y ppa:hvr/ghc && \\\n#      sed -i s/jessie/trusty/g /etc/apt/sources.list.d/hvr-ghc-jessie.list && \\\n#      apt-get update && apt-get install -y cabal-install-1.22 ghc-7.8.4 happy-1.19.4 alex-3.1.3 && \\\n#      apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Ruby dependencies\nRUN add-apt-repository -y ppa:brightbox/ruby-ng \\\n && sed -i s/jessie/trusty/g /etc/apt/sources.list.d/brightbox-ruby-ng-jessie.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends ruby2.2 ruby2.2-dev libtool autoconf automake gnuplot-nox libsqlite3-dev libatlas-base-dev libgsl0-dev libmagick++-dev imagemagick -y \\\n && ln -s /usr/bin/libtoolize /usr/bin/libtool \\\n && apt-get purge -y software-properties-common \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN gem install rbczmq --no-rdoc --no-ri\nENV PATH=\"/home/$NB_USER/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:$PATH\"\nUSER jovyan\n#   Python packages\nRUN conda config --add channels r \\\n && conda install --yes --quiet biopython rpy2 cython patsy statsmodels cloudpickle dill tensorflow=1.1* r-xml \\\n && conda clean -yt \\\n && pip install bioblend galaxy-ie-helpers --no-cache-dir\n#   Now for a python2 environment\nRUN /bin/bash -c \"source activate python2 \\\n && conda install --quiet --yes biopython rpy2 cython patsy statsmodels cloudpickle dill tensorflow=1.1* \\\n && conda clean -yt \\\n && pip install --no-cache-dir bioblend galaxy-ie-helpers\"\n#   IRuby\nRUN iruby register\n#   IHaskell + IHaskell-Widgets + Dependencies for examples\n#  RUN cabal update && \\\n#      CURL_CA_BUNDLE='/etc/ssl/certs/ca-certificates.crt' curl 'https://www.stackage.org/lts-2.22/cabal.config?global=true' >> ~/.cabal/config && \\\n#      cabal install cpphs && \\\n#      cabal install gtk2hs-buildtools && \\\n#      cabal install ihaskell-0.8.0.0 --reorder-goals && \\\n#      cabal install ihaskell-widgets-0.2.2.1 HTTP Chart Chart-cairo && \\\n#       ~/.cabal/bin/ihaskell install && \\\n#      rm -fr $(echo ~/.cabal/bin/* | grep -iv ihaskell) ~/.cabal/packages ~/.cabal/share/doc ~/.cabal/setup-exe-cache ~/.cabal/logs\n#   Extra Kernels\nRUN pip install pip --upgrade \\\n && pip install bash_kernel bioblend octave_kernel galaxy-ie-helpers --user --no-cache-dir \\\n && python -m bash_kernel.install \\\n && echo 'export PATH=/home/jovyan/.local/bin:$PATH' >> /home/jovyan/.bashrc\nADD ./startup.sh /startup.sh\nADD ./monitor_traffic.sh /monitor_traffic.sh\nADD ./get_notebook.py /get_notebook.py\nUSER root\n#   /import will be the universal mount-point for Jupyter\n#   The Galaxy instance can copy in data that needs to be present to the Jupyter webserver\nRUN mkdir /import\n#   We can get away with just creating this single file and Jupyter will create the rest of the\n#   profile for us.\nRUN mkdir -p /home/$NB_USER/.ipython/profile_default/startup/\nRUN mkdir -p /home/$NB_USER/.jupyter/custom/\nCOPY ./ipython-profile.py /home/$NB_USER/.ipython/profile_default/startup/00-load.py\n#  ADD ./ipython_notebook_config.py /home/$NB_USER/.jupyter/jupyter_notebook_config.py\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nADD ./custom.js /home/$NB_USER/.jupyter/custom/custom.js\nADD ./custom.css /home/$NB_USER/.jupyter/custom/custom.css\nADD ./default_notebook.ipynb /home/$NB_USER/notebook.ipynb\n#   ENV variables to replace conf file\nENV DEBUG=\"false\" \\\n    GALAXY_WEB_PORT=\"10000\" \\\n    NOTEBOOK_PASSWORD=\"none\" \\\n    CORS_ORIGIN=\"none\" \\\n    DOCKER_PORT=\"none\" \\\n    API_KEY=\"none\" \\\n    HISTORY_ID=\"none\" \\\n    REMOTE_HOST=\"none\" \\\n    GALAXY_URL=\"none\"\nRUN chown -R $NB_USER:users /home/$NB_USER/ /import\nUSER jovyan\nWORKDIR /import\n#   Jupyter will run on port 8888, export this port to the host system\n#   Start Jupyter Notebook\nCMD /startup.sh\n","originalDockerfileUglifiedHash":"d2ab8c5995780901179af1ca860545d7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6db74de2cbe69b3cfd8659192a4c4f49873ea423.dockerfile"}