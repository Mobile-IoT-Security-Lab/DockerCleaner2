{"seed":1712467596,"processedDockerfileHash":"90b0f83b2291e4dab01b315c5c037849","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck"],"processedDockerfile":"#   Copyright (c) 2018 Red Hat, Inc.\n#   Copyright (c) 2016 The Gitea Authors\n#   Copyright (c) 2015 The Gogs Authors\n#\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n#   of this software and associated documentation files (the \"Software\"), to deal\n#   in the Software without restriction, including without limitation the rights\n#   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the Software is\n#   furnished to do so, subject to the following conditions:\n#\n#   The above copyright notice and this permission notice shall be included in\n#   all copies or substantial portions of the Software.\n#\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n#   THE SOFTWARE.\n#  ##################################\n#  Build stage\nFROM golang:1.11-stretch AS build-env\nLABEL maintainer=\"infra-root@openstack.org\"\nARG GITEA_VERSION=v1.7.4\nENV TAGS=\"\\\"bindata $TAGS\\\"\"\n#  Build deps\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential git -y ) \\\n && mkdir -p ${GOPATH}/src/code.gitea.io/gitea\n#  Setup repo\nRUN git clone https://github.com/go-gitea/gitea ${GOPATH}/src/code.gitea.io/gitea\nWORKDIR ${GOPATH}/src/code.gitea.io/gitea\n#  Checkout version if set\nRUN if [ -n \"${GITEA_VERSION}\" ] ; then git checkout \"${GITEA_VERSION}\" ; fi \\\n && make clean generate build\n#  ##################################\n#   Basic system setup common to all containers in our pod\nFROM debian:testing AS base\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends bash ca-certificates curl gettext git openssh-client tzdata -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN addgroup --system --gid 1000 git \\\n && adduser --system --no-create-home --disabled-login --home /data/git --shell /bin/bash --uid 1000 --gid 1000 git \\\n && echo \"git:$( dd if=/dev/urandom bs=24 count=1 status=none | base64 ;)\" | chpasswd \\\n && mkdir /custom\n#   Copy the /etc config files and entrypoint script\nCOPY --from=build-env /go/src/code.gitea.io/gitea/docker /\n#   Copy our custom sshd_config\nCOPY sshd_config /etc/ssh/sshd_config\n#   Copy the app\nCOPY --from=build-env /go/src/code.gitea.io/gitea/gitea /app/gitea/gitea\nRUN ln -s /app/gitea/gitea /usr/local/bin/gitea\n#   Copy our custom templates\nCOPY custom/ /custom/\nENV GITEA_CUSTOM=\"/custom\"\n#  ##################################\n#   The gitea image\nFROM base AS gitea\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends pandoc -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nEXPOSE 3000/tcp\nENV USER=\"git\"\nVOLUME [\"/data\"]\nENTRYPOINT [\"/usr/bin/entrypoint\"]\nCMD [\"/app/gitea/gitea\", \"web\"]\nUSER 1000:1000\n#  ##################################\n#   The openssh server image\nFROM base AS gitea-openssh\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::=\"--force-confold\" install openssh-server \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir /run/sshd\nCOPY sshd-entrypoint.sh /usr/bin/entrypoint\nEXPOSE 22/tcp\nVOLUME [\"/data\"]\nENTRYPOINT [\"/usr/bin/entrypoint\"]\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) 2018 Red Hat, Inc.\n#  Copyright (c) 2016 The Gitea Authors\n#  Copyright (c) 2015 The Gogs Authors\n#\n#  Permission is hereby granted, free of charge, to any person obtaining a copy\n#  of this software and associated documentation files (the \"Software\"), to deal\n#  in the Software without restriction, including without limitation the rights\n#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#  copies of the Software, and to permit persons to whom the Software is\n#  furnished to do so, subject to the following conditions:\n#\n#  The above copyright notice and this permission notice shall be included in\n#  all copies or substantial portions of the Software.\n#\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n#  THE SOFTWARE.\n# ##################################\n# Build stage\nFROM golang:1.11-stretch AS build-env\nLABEL maintainer=\"infra-root@openstack.org\"\nARG GITEA_VERSION=v1.7.4\nENV TAGS=\"\\\"bindata $TAGS\\\"\"\n# Build deps\nRUN apt-get update \\\n && apt-get install build-essential git -y \\\n && mkdir -p ${GOPATH}/src/code.gitea.io/gitea\n# Setup repo\nRUN git clone https://github.com/go-gitea/gitea ${GOPATH}/src/code.gitea.io/gitea\nWORKDIR ${GOPATH}/src/code.gitea.io/gitea\n# Checkout version if set\nRUN if [ -n \"${GITEA_VERSION}\" ] ; then git checkout \"${GITEA_VERSION}\" ; fi \\\n && make clean generate build\n# ##################################\n#  Basic system setup common to all containers in our pod\nFROM debian:testing AS base\nRUN apt-get update \\\n && apt-get install bash ca-certificates curl gettext git openssh-client tzdata -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN addgroup --system --gid 1000 git \\\n && adduser --system --no-create-home --disabled-login --home /data/git --shell /bin/bash --uid 1000 --gid 1000 git \\\n && echo \"git:$( dd if=/dev/urandom bs=24 count=1 status=none | base64 ;)\" | chpasswd \\\n && mkdir /custom\n#  Copy the /etc config files and entrypoint script\nCOPY --from=build-env /go/src/code.gitea.io/gitea/docker /\n#  Copy our custom sshd_config\nCOPY sshd_config /etc/ssh/sshd_config\n#  Copy the app\nCOPY --from=build-env /go/src/code.gitea.io/gitea/gitea /app/gitea/gitea\nRUN ln -s /app/gitea/gitea /usr/local/bin/gitea\n#  Copy our custom templates\nCOPY custom/ /custom/\nENV GITEA_CUSTOM=\"/custom\"\n# ##################################\n#  The gitea image\nFROM base AS gitea\nRUN apt-get update \\\n && apt-get install pandoc -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nEXPOSE 3000/tcp\nENV USER=\"git\"\nVOLUME [\"/data\"]\nENTRYPOINT [\"/usr/bin/entrypoint\"]\nCMD [\"/app/gitea/gitea\", \"web\"]\nUSER 1000:1000\n# ##################################\n#  The openssh server image\nFROM base AS gitea-openssh\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::=\"--force-confold\" install openssh-server \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir /run/sshd\nCOPY sshd-entrypoint.sh /usr/bin/entrypoint\nEXPOSE 22/tcp\nVOLUME [\"/data\"]\nENTRYPOINT [\"/usr/bin/entrypoint\"]\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n","injectedSmells":[],"originalDockerfileHash":"24c18a137fbb1597ff4b66fe66122e8c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) 2018 Red Hat, Inc.\n#   Copyright (c) 2016 The Gitea Authors\n#   Copyright (c) 2015 The Gogs Authors\n#\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n#   of this software and associated documentation files (the \"Software\"), to deal\n#   in the Software without restriction, including without limitation the rights\n#   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the Software is\n#   furnished to do so, subject to the following conditions:\n#\n#   The above copyright notice and this permission notice shall be included in\n#   all copies or substantial portions of the Software.\n#\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n#   THE SOFTWARE.\n#  ##################################\n#  Build stage\nFROM golang:1.11-stretch AS build-env\nLABEL maintainer=\"infra-root@openstack.org\"\nARG GITEA_VERSION=v1.7.4\nENV TAGS=\"\\\"bindata $TAGS\\\"\"\n#  Build deps\nRUN apt-get update \\\n && apt-get install build-essential git -y \\\n && mkdir -p ${GOPATH}/src/code.gitea.io/gitea\n#  Setup repo\nRUN git clone https://github.com/go-gitea/gitea ${GOPATH}/src/code.gitea.io/gitea\nWORKDIR ${GOPATH}/src/code.gitea.io/gitea\n#  Checkout version if set\nRUN if [ -n \"${GITEA_VERSION}\" ] ; then git checkout \"${GITEA_VERSION}\" ; fi \\\n && make clean generate build\n#  ##################################\n#   Basic system setup common to all containers in our pod\nFROM debian:testing AS base\nRUN apt-get update \\\n && apt-get install bash ca-certificates curl gettext git openssh-client tzdata -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN addgroup --system --gid 1000 git \\\n && adduser --system --no-create-home --disabled-login --home /data/git --shell /bin/bash --uid 1000 --gid 1000 git \\\n && echo \"git:$( dd if=/dev/urandom bs=24 count=1 status=none | base64 ;)\" | chpasswd \\\n && mkdir /custom\n#   Copy the /etc config files and entrypoint script\nCOPY --from=build-env /go/src/code.gitea.io/gitea/docker /\n#   Copy our custom sshd_config\nCOPY sshd_config /etc/ssh/sshd_config\n#   Copy the app\nCOPY --from=build-env /go/src/code.gitea.io/gitea/gitea /app/gitea/gitea\nRUN ln -s /app/gitea/gitea /usr/local/bin/gitea\n#   Copy our custom templates\nCOPY custom/ /custom/\nENV GITEA_CUSTOM=\"/custom\"\n#  ##################################\n#   The gitea image\nFROM base AS gitea\nRUN apt-get update \\\n && apt-get install pandoc -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nEXPOSE 3000/tcp\nENV USER=\"git\"\nVOLUME [\"/data\"]\nENTRYPOINT [\"/usr/bin/entrypoint\"]\nCMD [\"/app/gitea/gitea\", \"web\"]\nUSER 1000:1000\n#  ##################################\n#   The openssh server image\nFROM base AS gitea-openssh\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::=\"--force-confold\" install openssh-server \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir /run/sshd\nCOPY sshd-entrypoint.sh /usr/bin/entrypoint\nEXPOSE 22/tcp\nVOLUME [\"/data\"]\nENTRYPOINT [\"/usr/bin/entrypoint\"]\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n","originalDockerfileUglifiedHash":"4b96442e66125ce1a03eb3625bbd96bb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/40701ea1af22a3c7b2c0968e16503efdcd85e7dd.dockerfile"}