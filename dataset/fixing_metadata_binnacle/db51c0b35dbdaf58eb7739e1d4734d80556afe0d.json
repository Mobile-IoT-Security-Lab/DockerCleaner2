{"seed":2588235331,"processedDockerfileHash":"0e1c744f809e5e8817af19c027dbbfbf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG BASE_TAG=5.3.0\nFROM gcr.io/kaggle-images/python-tensorflow-whl:1.13.1-py36-2 AS tensorflow_whl\nFROM continuumio/anaconda3:${BASE_TAG}\nCOPY clean-layer.sh /tmp/clean-layer.sh\nCOPY patches/nbconvert-extensions.tpl /opt/kaggle/nbconvert-extensions.tpl\n#   This is necessary for apt to access HTTPS sources\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https \\\n && /tmp/clean-layer.sh\n#   Use a fixed apt-get repo to stop intermittent failures due to flaky httpredir connections,\n#   as described by Lionel Chan at http://stackoverflow.com/a/37426929/5881346\nRUN sed -i \"s/httpredir.debian.org/debian.uchicago.edu/\" /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential unzip cmake -y \\\n && conda install -y python=3.6.6 \\\n && pip install pip==23.1 --upgrade \\\n && /tmp/clean-layer.sh\n#   The anaconda base image includes outdated versions of these packages. Update them to include the latest version.\nRUN pip install seaborn==0.12.2 python-dateutil==2.8.2 dask==2023.4.0 \\\n && pip install pyyaml==6.0 joblib==1.2.0 pytagcloud==0.3.5 husl==4.0.3 geopy==2.3.0 ml_metrics==0.1.4 mne==1.3.1 pyshp==2.3.1 \\\n && pip install spacy==3.5.2 \\\n && python -m spacy download en \\\n && python -m spacy download en_core_web_lg \\\n && apt-get install --no-install-recommends dbus fontconfig fontconfig-config fonts-dejavu-core fonts-droid-fallback ghostscript gsfonts hicolor-icon-theme libavahi-client3 libavahi-common-data libavahi-common3 libcairo2 libcap-ng0 libcroco3 libcups2 libcupsfilters1 libcupsimage2 libdatrie1 libdbus-1-3 libdjvulibre-text libdjvulibre21 libfftw3-double3 libfontconfig1 libfreetype6 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-common libgomp1 libgraphite2-3 libgs9 libgs9-common libharfbuzz0b libijs-0.35 libilmbase12 libjbig0 libjbig2dec0 libjpeg62-turbo liblcms2-2 liblqr-1-0 libltdl7 libmagickcore-6.q16-3 libmagickcore-6.q16-3-extra libmagickwand-6.q16-3 libnetpbm10 libopenexr22 libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libpaper-utils libpaper1 libpixman-1-0 libpng16-16 librsvg2-2 librsvg2-common libthai-data libthai0 libtiff5 libwmf0.2-7 libxcb-render0 libxcb-shm0 netpbm poppler-data p7zip-full -y \\\n && cd /usr/local/src \\\n && wget --no-verbose https://imagemagick.org/download/ImageMagick.tar.gz \\\n && tar xzf ImageMagick.tar.gz \\\n && cd `ls -d ImageMagick-* ` \\\n && pwd \\\n && ls -al \\\n && ./configure \\\n && make -j $( nproc ;) \\\n && make install \\\n && /tmp/clean-layer.sh\n#   Install tensorflow from a pre-built wheel\nCOPY --from=tensorflow_whl /tmp/tensorflow_cpu/*.whl /tmp/tensorflow_cpu/\nRUN pip install /tmp/tensorflow_cpu/tensorflow*.whl \\\n && rm -rf /tmp/tensorflow_cpu \\\n && /tmp/clean-layer.sh\nRUN apt-get install --no-install-recommends libfreetype6-dev -y \\\n && apt-get install --no-install-recommends libglib2.0-0 libxext6 libsm6 libxrender1 libfontconfig1 -y --fix-missing \\\n && pip install gensim==4.3.1 \\\n && pip install textblob==0.17.1 \\\n && pip install wordcloud==1.8.2.2 \\\n && conda install -y -c conda-forge python-igraph \\\n && pip install xgboost==1.7.5 \\\n && pip install lightgbm==3.3.5 \\\n && pip install git+git://github.com/Lasagne/Lasagne.git \\\n && pip install keras==2.12.0 \\\n && pip install keras-rl==0.4.2 \\\n && pip install git+https://github.com/broadinstitute/keras-rcnn \\\n && pip install flake8==3.6.0 \\\n && cd /usr/local/src \\\n && git clone --depth 1 https://github.com/NervanaSystems/neon.git \\\n && cd neon \\\n && pip install . \\\n && cd /usr/local/src \\\n && mkdir nolearn \\\n && cd nolearn \\\n && git clone --depth 1 https://github.com/dnouri/nolearn.git \\\n && cd nolearn \\\n && echo \"x\" > README.rst \\\n && echo \"x\" > CHANGES.rst \\\n && python setup.py install \\\n && pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps \\\n && printf \"[global]\\nbase_compiledir = /tmp/.theano\\n\" > /.theanorc \\\n && cd /usr/local/src \\\n && git clone --depth 1 https://github.com/pybrain/pybrain \\\n && cd pybrain \\\n && python setup.py install \\\n && apt-get install --no-install-recommends libatlas-base-dev -y \\\n && cd /usr/local/src \\\n && git clone --depth 1 https://github.com/ztane/python-Levenshtein \\\n && cd python-Levenshtein \\\n && python setup.py install \\\n && pip install hep_ml==0.7.2 \\\n && pip install chainer==7.8.1 \\\n && mkdir -p /usr/share/nltk_data \\\n && yes | python -m nltk.downloader -d /usr/share/nltk_data abc alpino averaged_perceptron_tagger basque_grammars biocreative_ppi bllip_wsj_no_aux book_grammars brown brown_tei cess_cat cess_esp chat80 city_database cmudict comtrans conll2000 conll2002 conll2007 crubadan dependency_treebank europarl_raw floresta gazetteers genesis gutenberg ieer inaugural indian jeita kimmo knbc large_grammars lin_thesaurus mac_morpho machado masc_tagged maxent_ne_chunker maxent_treebank_pos_tagger moses_sample movie_reviews mte_teip5 names nps_chat omw opinion_lexicon paradigms pil pl196x porter_test ppattach problem_reports product_reviews_1 product_reviews_2 propbank pros_cons ptb punkt qc reuters rslp rte sample_grammars semcor senseval sentence_polarity sentiwordnet shakespeare sinica_treebank smultron snowball_data spanish_grammars state_union stopwords subjectivity swadesh switchboard tagsets timit toolbox treebank twitter_samples udhr2 udhr unicode_samples universal_tagset universal_treebanks_v20 vader_lexicon verbnet webtext word2vec_sample wordnet wordnet_ic words ycoe \\\n && pip install stop-words==2018.7.23 \\\n && pip install scikit-image==0.20.0 --upgrade \\\n && /tmp/clean-layer.sh\n#   Make sure the dynamic linker finds the right libstdc++\nENV LD_LIBRARY_PATH=\"/opt/conda/lib\"\nRUN apt-get install --no-install-recommends zlib1g-dev liblcms2-dev libwebp-dev libgeos-dev -y \\\n && pip install matplotlib==3.7.1 \\\n && pip install pyshp==2.3.1 \\\n && pip install pyproj==3.5.0 \\\n && conda install basemap \\\n && apt-get install --no-install-recommends libsasl2-dev -y \\\n && apt-get install --no-install-recommends libpq-dev -y \\\n && pip install ibis-framework==5.1.0 \\\n && yes | conda install proj4 \\\n && pip install packaging==23.1 \\\n && pip install shapely==2.0.1 \\\n && pip install cartopy==0.21.1 \\\n && pip install mxnet==1.9.1 \\\n && pip install numpy==1.24.2 --upgrade \\\n && pip install gluonnlp==0.10.0 \\\n && pip install gluoncv==0.10.5.post0 \\\n && apt-get install --no-install-recommends default-jdk -y \\\n && cd /usr/local/src \\\n && mkdir h2o \\\n && cd h2o \\\n && wget --no-verbose http://h2o-release.s3.amazonaws.com/h2o/latest_stable -O latest \\\n && wget --no-verbose --no-check-certificate -i latest -O h2o.zip \\\n && rm latest \\\n && unzip h2o.zip \\\n && rm h2o.zip \\\n && cp h2o-*/h2o.jar . \\\n && pip install `find . -name \"*whl\" ` \\\n && python -c \"from keras.models import Sequential\" \\\n && sed -i 's/theano/tensorflow/' /root/.keras/keras.json \\\n && python -c \"from keras.models import Sequential; from keras import backend; print(backend._BACKEND)\" \\\n && mkdir -p /tmp/.keras \\\n && cp /root/.keras/keras.json /tmp/.keras \\\n && /tmp/clean-layer.sh\n#   b/128333086: Set PROJ_LIB to points to the proj4 cartographic library.\nENV PROJ_LIB=\"/opt/conda/share/proj\"\n#   scikit-learn dependencies\nRUN pip install scipy==1.10.1 \\\n && pip install scikit-learn==1.2.2 \\\n && pip install h5py==3.8.0 \\\n && pip install biopython==1.81 \\\n && pip install pudb==2022.1.3 \\\n && pip install imbalanced-learn==0.10.1 \\\n && pip install line_profiler==4.0.3 \\\n && pip install orderedmultidict==1.0.1 \\\n && pip install smhasher==0.150.1 \\\n && pip install bokeh==3.1.0 \\\n && pip install numba==0.38.0 \\\n && pip install datashader==0.14.4 \\\n && pip install Boruta==0.3 \\\n && cd /usr/local/src \\\n && git clone git://github.com/nicolashennetier/pyeconometrics.git \\\n && cd pyeconometrics \\\n && python setup.py install \\\n && apt-get install --no-install-recommends graphviz -y \\\n && pip install graphviz==0.20.1 \\\n && apt-get install --no-install-recommends pandoc -y \\\n && pip install git+git://github.com/scikit-learn-contrib/py-earth.git@issue191 \\\n && pip install essentia==2.1b6.dev871 \\\n && export CXXFLAGS=\"-std=c++11\" \\\n && export CFLAGS=\"-std=c99\" \\\n && conda install -y pytorch-cpu torchvision-cpu -c pytorch \\\n && apt-get install --no-install-recommends sox libsox-dev libsox-fmt-all -y \\\n && pip install cffi==1.15.1 \\\n && pip install git+git://github.com/pytorch/audio.git \\\n && /tmp/clean-layer.sh\n#   vtk with dependencies\nRUN apt-get install --no-install-recommends libgl1-mesa-glx -y \\\n && pip install vtk==9.2.6 \\\n && apt-get install --no-install-recommends xvfb -y \\\n && pip install xvfbwrapper==0.2.9 \\\n && /tmp/clean-layer.sh\nRUN pip install mpld3==0.5.9 \\\n && pip install mplleaflet==0.0.5 \\\n && pip install gpxpy==1.5.0 \\\n && pip install arrow==1.2.3 \\\n && pip install nilearn==0.10.0 \\\n && pip install nibabel==5.1.0 \\\n && pip install pronouncing==0.2.0 \\\n && pip install markovify==0.9.4 \\\n && pip install rf_perm_feat_import==0.1 \\\n && pip install imgaug==0.4.0 \\\n && pip install preprocessing==0.1.13 \\\n && pip install Baker==1.3 \\\n && pip install path.py==12.5.0 \\\n && pip install Geohash==1.0 \\\n && sed -i -- 's/geohash/.geohash/g' /opt/conda/lib/python3.6/site-packages/Geohash/__init__.py \\\n && pip install deap==1.3.3 \\\n && pip install tpot==0.11.7 \\\n && pip install scikit-optimize==0.9.0 \\\n && pip install haversine==2.8.0 \\\n && pip install toolz==0.12.0 cytoolz==0.12.1 \\\n && pip install sacred==0.8.4 \\\n && pip install plotly==5.14.1 \\\n && pip install git+https://github.com/nicta/dora.git \\\n && pip install git+https://github.com/hyperopt/hyperopt.git \\\n && pip install git+https://github.com/tflearn/tflearn.git \\\n && pip install fitter==1.5.2 \\\n && pip install langid==1.1.6 \\\n && pip install delorean==1.0.0 \\\n && pip install trueskill==0.4.5 \\\n && pip install heamy==0.0.7 \\\n && pip install vida==0.3 \\\n && pip install missingno==0.5.2 \\\n && pip install pandas-profiling==3.6.6 \\\n && pip install s2sphere==0.2.5 \\\n && pip install git+https://github.com/fmfn/BayesianOptimization.git \\\n && pip install matplotlib-venn==0.11.9 \\\n && pip install pyldavis==3.4.0 \\\n && pip install mlxtend==0.22.0 \\\n && pip install altair==4.2.2 \\\n && pip install pystan==3.6.0 \\\n && pip install ImageHash==4.3.1 \\\n && pip install ecos==2.0.12 \\\n && pip install CVXcanon==0.1.2 \\\n && pip install fancyimpute==0.7.0 \\\n && pip install git+https://github.com/pymc-devs/pymc3 \\\n && pip install tifffile==2023.4.12 \\\n && pip install spectral==0.23.1 \\\n && pip install descartes==1.1.0 \\\n && pip install geojson==3.0.1 \\\n && pip install pysal==23.1 \\\n && pip install pyflux==0.4.15 \\\n && pip install terminalplot==0.3.0 \\\n && pip install raccoon==3.0.0 \\\n && pip install pydicom==2.3.1 \\\n && pip install wavio==0.0.7 \\\n && pip install SimpleITK==2.2.1 \\\n && pip install hmmlearn==0.2.8 \\\n && pip install bayespy==0.5.25 \\\n && pip install gplearn==0.4.2 \\\n && pip install PyAstronomy==0.19.0 \\\n && pip install squarify==0.4.3 \\\n && pip install fuzzywuzzy==0.18.0 \\\n && pip install python-louvain==0.16 \\\n && pip install pyexcel-ods==0.6.0 \\\n && pip install sklearn-pandas==2.2.0 \\\n && pip install stemming==1.0.1 \\\n && pip install fbprophet==0.7.1 \\\n && pip install holoviews==1.15.4 \\\n && pip install geoviews==1.6.1 \\\n && pip install hypertools==0.8.0 \\\n && pip install py_stringsimjoin==0.3.3 \\\n && pip install speedml==0.9.3 \\\n && pip install nibabel==5.1.0 \\\n && pip install mlens==0.2.3 \\\n && pip install scikit-multilearn==0.2.0 \\\n && pip install cleverhans==4.0.0 \\\n && pip install leven==1.0.4 \\\n && pip install catboost==1.1.1 \\\n && pip install fastFM==0.2.11 \\\n && pip install lightfm==1.17 \\\n && pip install paramnb==2.0.4 \\\n && pip install folium==0.14.0 \\\n && pip install scikit-plot==0.3.7 \\\n && pip install fury==0.9.0 dipy==1.6.0 \\\n && pip install plotnine==0.4.0 \\\n && pip install git+https://github.com/dvaida/hallucinate.git \\\n && pip install scikit-surprise==1.1.3 \\\n && pip install pymongo==4.3.3 \\\n && pip install edward==1.3.5 \\\n && pip install geoplot==0.5.1 \\\n && pip install eli5==0.13.0 \\\n && pip install implicit==0.6.2 \\\n && pip install dask-ml[xgboost] \\\n && /tmp/clean-layer.sh\nRUN pip install kmeans-smote==0.1.2 --no-dependencies \\\n && cd /opt/ \\\n && git clone https://github.com/PAIR-code/facets \\\n && cd facets/ \\\n && jupyter nbextension install facets-dist/ --user \\\n && export PYTHONPATH=$PYTHONPATH:/opt/facets/facets_overview/python/ \\\n && pip install ethnicolr==0.9.3 --no-dependencies \\\n && pip install tensorpack==0.11 \\\n && pip install pycountry==22.3.5 \\\n && pip install iso3166==2.1.1 \\\n && pip install pydash==7.0.1 \\\n && pip install kmodes==0.12.2 --no-dependencies \\\n && pip install librosa==0.10.0.post2 \\\n && pip install polyglot==16.7.4 \\\n && pip install mmh3==3.1.0 \\\n && pip install fbpca==1.0 \\\n && pip install sentencepiece==0.1.98 \\\n && pip install cufflinks==0.17.3 \\\n && pip install glmnet_py==0.1.0b2 \\\n && pip install lime==0.2.0.1 \\\n && pip install memory_profiler==0.61.0 \\\n && /tmp/clean-layer.sh\n#   install cython & cysignals before pyfasttext\nRUN pip install cython==0.29.34 --upgrade \\\n && pip install cysignals==1.11.2 --upgrade \\\n && pip install pyfasttext==0.4.6 \\\n && pip install ktext==0.40 \\\n && pip install git+git://github.com/facebookresearch/fastText.git \\\n && apt-get install --no-install-recommends libhunspell-dev -y \\\n && pip install hunspell==0.5.5 \\\n && pip install annoy==1.17.2 \\\n && pip install category_encoders==2.6.0 \\\n && pip install google-cloud-bigquery==1.12.1 \\\n && pip install google-cloud-storage==2.8.0 \\\n && pip install ortools==9.6.2534 \\\n && pip install scattertext==0.1.18 \\\n && pip install pandas-datareader==0.10.0 \\\n && pip install pykoko==0.1.8 \\\n && pip install wordsegment==1.3.1 \\\n && pip install pyahocorasick==2.0.0 \\\n && pip install wordbatch==1.4.9 \\\n && pip install emoji==2.2.0 \\\n && pip install janome==0.4.2 \\\n && pip install wfdb==4.1.0 \\\n && pip install vecstack==0.4.0 \\\n && pip install sklearn-contrib-lightning==0.6.2.post0 \\\n && pip install yellowbrick==1.5 \\\n && pip install mlcrate==0.2.0 \\\n && pip install vega3==0.13.0 \\\n && jupyter nbextension install --sys-prefix --py vega3 \\\n && /tmp/clean-layer.sh\n#   Fast.ai and dependencies\nRUN pip install bcolz==1.2.1 \\\n && pip install bleach==6.0.0 \\\n && pip install certifi==2022.12.7 \\\n && pip install cycler==0.11.0 \\\n && pip install decorator==5.1.1 \\\n && pip install entrypoints==0.4 \\\n && pip install html5lib==1.1 \\\n && pip install ipykernel==6.22.0 \\\n && pip install ipython==8.12.0 \\\n && pip install ipython-genutils==0.2.0 \\\n && pip install ipywidgets==8.0.6 \\\n && pip install isoweek==1.3.3 \\\n && pip install jedi==0.18.2 \\\n && pip install Jinja2==3.1.2 \\\n && pip install jsonschema==4.17.3 \\\n && pip install jupyter==1.0.0 \\\n && pip install jupyter-client==8.2.0 \\\n && pip install jupyter-console==6.6.3 \\\n && pip install jupyter-core==5.3.0 \\\n && pip install MarkupSafe==2.1.2 \\\n && pip install mistune==2.0.5 \\\n && pip install nbconvert==7.3.1 \\\n && pip install nbformat==5.8.0 \\\n && pip install notebook==5.5.0 \\\n && pip install olefile==0.46 \\\n && pip install opencv-python==4.7.0.72 \\\n && pip install pandas==0.23.4 \\\n && pip install pandas_summary==0.2.0 \\\n && pip install pandocfilters==1.5.0 \\\n && pip install pexpect==4.8.0 \\\n && pip install pickleshare==0.7.5 \\\n && pip install Pillow==9.5.0 \\\n && pip install ptyprocess==0.7.0 \\\n && pip install Pygments==2.15.0 \\\n && pip install pyparsing==3.0.9 \\\n && pip install pytz==2023.3 \\\n && pip install PyYAML==6.0 \\\n && pip install pyzmq==25.0.2 \\\n && pip install qtconsole==5.4.2 \\\n && pip install simplegeneric==0.8.1 \\\n && pip install six==1.16.0 \\\n && pip install terminado==0.17.1 \\\n && pip install testpath==0.6.0 \\\n && pip install tornado==5.0.2 \\\n && pip install tqdm==4.65.0 \\\n && pip install traitlets==5.9.0 \\\n && pip install wcwidth==0.2.6 \\\n && pip install webencodings==0.5.1 \\\n && pip install widgetsnbextension==4.0.7 \\\n && pip install pyarrow==0.10.0 \\\n && pip install feather-format==0.4.1 \\\n && pip install fastai==2.7.12 \\\n && pip install torchtext==0.15.1 \\\n && /tmp/clean-layer.sh\n#   allennlp and dependencies\n#   TODO: install deps when underlying dependency is fixed. https://github.com/Kaggle/docker-python/issues/548\nRUN pip install jsonnet==0.19.1 overrides==7.3.1 tensorboardX==2.6 \\\n && pip install flask==2.2.3 flask-cors==3.0.10 gevent==22.10.2 > =1.0.2 > =3.0.7 > =1.3.6 \\\n && pip install unidecode==1.3.6 parsimonious==0.10.0 sqlparse==0.4.3 word2number==1.1 > =0.8.0 > =0.2.4 > =1.1 \\\n && pip install pytorch-pretrained-bert==0.6.2 jsonpickle==3.0.1 > =0.6.0 \\\n && pip install requests==2.28.2 editdistance==0.6.2 conllu==0.11 > =2.18 \\\n && pip install allennlp==2.10.1 --no-dependencies \\\n && /tmp/clean-layer.sh\n#  ##########\n#\n#        NEW CONTRIBUTORS:\n#   Please add new pip/apt installs in this block. Don't forget a \"&& \\\" at the end\n#   of all non-final lines. Thanks!\n#\n#  ##########\nRUN pip install flashtext==2.7 \\\n && pip install marisa-trie==0.8.0 \\\n && pip install pyemd==1.0.0 \\\n && pip install pyupset==0.1.1.post7 \\\n && pip install pympler==1.0.1 \\\n && pip install s3fs==2023.4.0 \\\n && pip install featuretools==1.25.0 \\\n && pip install -e git+https://github.com/SohierDane/BigQuery_Helper#egg=bq_helper \\\n && pip install hpsklearn==0.1.0 \\\n && pip install keras-tqdm==2.0.1 \\\n && pip install git+https://github.com/Kaggle/learntools \\\n && pip install kmapper==2.0.1 \\\n && pip install shap==0.41.0 \\\n && pip install ray==2.3.1 \\\n && pip install gym==0.26.2 \\\n && pip install tensorforce==0.6.5 \\\n && pip install pyarabic==0.6.15 \\\n && pip install conx==3.7.10 \\\n && pip install pandasql==0.7.3 \\\n && pip install trackml==0.1.12 \\\n && pip install tensorflow_hub==0.13.0 \\\n && pip install jieba==0.42.1 \\\n && pip install git+https://github.com/SauceCat/PDPbox \\\n && pip install ggplot==0.11.5 \\\n && pip install cesium==0.11.1 \\\n && pip install rgf_python==3.12.0 \\\n && pip install pytext-nlp==0.1.2 \\\n && pip install tsfresh==0.20.0 \\\n && pip install pymagnitude==0.1.143 \\\n && pip install pykalman==0.9.5 \\\n && pip install optuna==3.1.1 \\\n && pip install chainercv==0.13.1 \\\n && pip install plotly_express==0.4.1 \\\n && pip install albumentations==1.3.0 \\\n && pip install pytorch-ignite==0.4.11 \\\n && /tmp/clean-layer.sh\n#   Tesseract and some associated utility packages\nRUN apt-get install --no-install-recommends tesseract-ocr -y \\\n && pip install pytesseract==0.3.10 \\\n && pip install wand==0.5.3 \\\n && pip install pdf2image==1.16.3 \\\n && pip install PyPDF==3.7.1 \\\n && pip install pyocr==0.8.3 \\\n && /tmp/clean-layer.sh\nENV TESSERACT_PATH=\"/usr/bin/tesseract\"\n#   Pin Vowpal Wabbit v8.6.0 because 8.6.1 does not build or install successfully\nRUN cd /usr/local/src \\\n && git clone -b 8.6.0 https://github.com/JohnLangford/vowpal_wabbit.git \\\n && ./vowpal_wabbit/python/conda_install.sh \\\n && pip install vowpal_wabbit/python \\\n && /tmp/clean-layer.sh\n#   For Facets\nENV PYTHONPATH=\"$PYTHONPATH:/opt/facets/facets_overview/python/\"\n#   For Theano with MKL\nENV MKL_THREADING_LAYER=\"GNU\"\n#   Temporary fixes and patches\n#   Temporary patch for Dask getting downgraded, which breaks Keras\nRUN pip install dask==2023.4.0 --upgrade \\\n && mkdir -p /root/.jupyter \\\n && touch /root/.jupyter/jupyter_nbconvert_config.py \\\n && touch /root/.jupyter/migrated \\\n && mkdir -p /.jupyter \\\n && touch /.jupyter/jupyter_nbconvert_config.py \\\n && touch /.jupyter/migrated \\\n && sed -i \"s/^.*Matplotlib is building the font cache using fc-list.*$/# Warning removed by Kaggle/g\" /opt/conda/lib/python3.6/site-packages/matplotlib/font_manager.py \\\n && mkdir -p /etc/ipython/ \\\n && echo \"c = get_config(); c.IPKernelApp.matplotlib = 'inline'\" > /etc/ipython/ipython_config.py \\\n && /tmp/clean-layer.sh\n#   Add BigQuery client proxy settings\nENV PYTHONUSERBASE=\"\\\"/root/.local\\\"\"\nCOPY patches/kaggle_gcp.py /root/.local/lib/python3.6/site-packages/kaggle_gcp.py\nCOPY patches/kaggle_secrets.py /root/.local/lib/python3.6/site-packages/kaggle_secrets.py\nCOPY patches/log.py /root/.local/lib/python3.6/site-packages/log.py\nCOPY patches/sitecustomize.py /root/.local/lib/python3.6/site-packages/sitecustomize.py\n#   TensorBoard Jupyter extension. Should be replaced with TensorBoard's provided magic once we have\n#   worker tunneling support in place.\nENV JUPYTER_CONFIG_DIR=\"\\\"/root/.jupyter/\\\"\"\nRUN pip install jupyter_tensorboard==0.2.0 \\\n && jupyter serverextension enable jupyter_tensorboard \\\n && jupyter tensorboard enable\nCOPY patches/tensorboard/notebook.py /opt/conda/lib/python3.6/site-packages/tensorboard/notebook.py\n#   Set backend for matplotlib\nENV MPLBACKEND=\"\\\"agg\\\"\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG BASE_TAG=5.3.0\nFROM gcr.io/kaggle-images/python-tensorflow-whl:1.13.1-py36-2 AS tensorflow_whl\nFROM continuumio/anaconda3:${BASE_TAG}\nADD clean-layer.sh /tmp/clean-layer.sh\nADD patches/nbconvert-extensions.tpl /opt/kaggle/nbconvert-extensions.tpl\n#  This is necessary for apt to access HTTPS sources\nRUN apt-get update \\\n && apt-get install apt-transport-https \\\n && /tmp/clean-layer.sh\n#  Use a fixed apt-get repo to stop intermittent failures due to flaky httpredir connections,\n#  as described by Lionel Chan at http://stackoverflow.com/a/37426929/5881346\nRUN sed -i \"s/httpredir.debian.org/debian.uchicago.edu/\" /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install build-essential unzip cmake -y \\\n && conda install -y python=3.6.6 \\\n && pip install pip --upgrade \\\n && /tmp/clean-layer.sh\n#  The anaconda base image includes outdated versions of these packages. Update them to include the latest version.\nRUN pip install seaborn python-dateutil dask \\\n && pip install pyyaml joblib pytagcloud husl geopy ml_metrics mne pyshp \\\n && pip install spacy \\\n && python -m spacy download en \\\n && python -m spacy download en_core_web_lg \\\n && apt-get install dbus fontconfig fontconfig-config fonts-dejavu-core fonts-droid-fallback ghostscript gsfonts hicolor-icon-theme libavahi-client3 libavahi-common-data libavahi-common3 libcairo2 libcap-ng0 libcroco3 libcups2 libcupsfilters1 libcupsimage2 libdatrie1 libdbus-1-3 libdjvulibre-text libdjvulibre21 libfftw3-double3 libfontconfig1 libfreetype6 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-common libgomp1 libgraphite2-3 libgs9 libgs9-common libharfbuzz0b libijs-0.35 libilmbase12 libjbig0 libjbig2dec0 libjpeg62-turbo liblcms2-2 liblqr-1-0 libltdl7 libmagickcore-6.q16-3 libmagickcore-6.q16-3-extra libmagickwand-6.q16-3 libnetpbm10 libopenexr22 libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libpaper-utils libpaper1 libpixman-1-0 libpng16-16 librsvg2-2 librsvg2-common libthai-data libthai0 libtiff5 libwmf0.2-7 libxcb-render0 libxcb-shm0 netpbm poppler-data p7zip-full -y \\\n && cd /usr/local/src \\\n && wget --no-verbose https://imagemagick.org/download/ImageMagick.tar.gz \\\n && tar xzf ImageMagick.tar.gz \\\n && cd `ls -d ImageMagick-* ` \\\n && pwd \\\n && ls -al \\\n && ./configure \\\n && make -j $( nproc ;) \\\n && make install \\\n && /tmp/clean-layer.sh\n#  Install tensorflow from a pre-built wheel\nCOPY --from=tensorflow_whl /tmp/tensorflow_cpu/*.whl /tmp/tensorflow_cpu/\nRUN pip install /tmp/tensorflow_cpu/tensorflow*.whl \\\n && rm -rf /tmp/tensorflow_cpu \\\n && /tmp/clean-layer.sh\nRUN apt-get install libfreetype6-dev -y \\\n && apt-get install libglib2.0-0 libxext6 libsm6 libxrender1 libfontconfig1 -y --fix-missing \\\n && pip install gensim \\\n && pip install textblob \\\n && pip install wordcloud \\\n && conda install -y -c conda-forge python-igraph \\\n && pip install xgboost \\\n && pip install lightgbm \\\n && pip install git+git://github.com/Lasagne/Lasagne.git \\\n && pip install keras \\\n && pip install keras-rl \\\n && pip install git+https://github.com/broadinstitute/keras-rcnn \\\n && pip install flake8==3.6.0 \\\n && cd /usr/local/src \\\n && git clone --depth 1 https://github.com/NervanaSystems/neon.git \\\n && cd neon \\\n && pip install . \\\n && cd /usr/local/src \\\n && mkdir nolearn \\\n && cd nolearn \\\n && git clone --depth 1 https://github.com/dnouri/nolearn.git \\\n && cd nolearn \\\n && echo \"x\" > README.rst \\\n && echo \"x\" > CHANGES.rst \\\n && python setup.py install \\\n && pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps \\\n && printf \"[global]\\nbase_compiledir = /tmp/.theano\\n\" > /.theanorc \\\n && cd /usr/local/src \\\n && git clone --depth 1 https://github.com/pybrain/pybrain \\\n && cd pybrain \\\n && python setup.py install \\\n && apt-get install libatlas-base-dev -y \\\n && cd /usr/local/src \\\n && git clone --depth 1 https://github.com/ztane/python-Levenshtein \\\n && cd python-Levenshtein \\\n && python setup.py install \\\n && pip install hep_ml \\\n && pip install chainer \\\n && mkdir -p /usr/share/nltk_data \\\n && yes | python -m nltk.downloader -d /usr/share/nltk_data abc alpino averaged_perceptron_tagger basque_grammars biocreative_ppi bllip_wsj_no_aux book_grammars brown brown_tei cess_cat cess_esp chat80 city_database cmudict comtrans conll2000 conll2002 conll2007 crubadan dependency_treebank europarl_raw floresta gazetteers genesis gutenberg ieer inaugural indian jeita kimmo knbc large_grammars lin_thesaurus mac_morpho machado masc_tagged maxent_ne_chunker maxent_treebank_pos_tagger moses_sample movie_reviews mte_teip5 names nps_chat omw opinion_lexicon paradigms pil pl196x porter_test ppattach problem_reports product_reviews_1 product_reviews_2 propbank pros_cons ptb punkt qc reuters rslp rte sample_grammars semcor senseval sentence_polarity sentiwordnet shakespeare sinica_treebank smultron snowball_data spanish_grammars state_union stopwords subjectivity swadesh switchboard tagsets timit toolbox treebank twitter_samples udhr2 udhr unicode_samples universal_tagset universal_treebanks_v20 vader_lexicon verbnet webtext word2vec_sample wordnet wordnet_ic words ycoe \\\n && pip install stop-words \\\n && pip install scikit-image --upgrade \\\n && /tmp/clean-layer.sh\n#  Make sure the dynamic linker finds the right libstdc++\nENV LD_LIBRARY_PATH=\"/opt/conda/lib\"\nRUN apt-get install zlib1g-dev liblcms2-dev libwebp-dev libgeos-dev -y \\\n && pip install matplotlib \\\n && pip install pyshp \\\n && pip install pyproj \\\n && conda install basemap \\\n && apt-get install libsasl2-dev -y \\\n && apt-get install libpq-dev -y \\\n && pip install ibis-framework \\\n && yes | conda install proj4 \\\n && pip install packaging \\\n && pip install shapely \\\n && pip install cartopy \\\n && pip install mxnet \\\n && pip install numpy --upgrade \\\n && pip install gluonnlp \\\n && pip install gluoncv \\\n && apt-get install default-jdk -y \\\n && cd /usr/local/src \\\n && mkdir h2o \\\n && cd h2o \\\n && wget --no-verbose http://h2o-release.s3.amazonaws.com/h2o/latest_stable -O latest \\\n && wget --no-verbose --no-check-certificate -i latest -O h2o.zip \\\n && rm latest \\\n && unzip h2o.zip \\\n && rm h2o.zip \\\n && cp h2o-*/h2o.jar . \\\n && pip install `find . -name \"*whl\" ` \\\n && python -c \"from keras.models import Sequential\" \\\n && sed -i 's/theano/tensorflow/' /root/.keras/keras.json \\\n && python -c \"from keras.models import Sequential; from keras import backend; print(backend._BACKEND)\" \\\n && mkdir -p /tmp/.keras \\\n && cp /root/.keras/keras.json /tmp/.keras \\\n && /tmp/clean-layer.sh\n#  b/128333086: Set PROJ_LIB to points to the proj4 cartographic library.\nENV PROJ_LIB=\"/opt/conda/share/proj\"\n#  scikit-learn dependencies\nRUN pip install scipy \\\n && pip install scikit-learn \\\n && pip install h5py \\\n && pip install biopython \\\n && pip install pudb \\\n && pip install imbalanced-learn \\\n && pip install line_profiler \\\n && pip install orderedmultidict \\\n && pip install smhasher \\\n && pip install bokeh \\\n && pip install numba==0.38.0 \\\n && pip install datashader \\\n && pip install Boruta \\\n && cd /usr/local/src \\\n && git clone git://github.com/nicolashennetier/pyeconometrics.git \\\n && cd pyeconometrics \\\n && python setup.py install \\\n && apt-get install graphviz -y \\\n && pip install graphviz \\\n && apt-get install pandoc -y \\\n && pip install git+git://github.com/scikit-learn-contrib/py-earth.git@issue191 \\\n && pip install essentia \\\n && export CXXFLAGS=\"-std=c++11\" \\\n && export CFLAGS=\"-std=c99\" \\\n && conda install -y pytorch-cpu torchvision-cpu -c pytorch \\\n && apt-get install sox libsox-dev libsox-fmt-all -y \\\n && pip install cffi \\\n && pip install git+git://github.com/pytorch/audio.git \\\n && /tmp/clean-layer.sh\n#  vtk with dependencies\nRUN apt-get install libgl1-mesa-glx -y \\\n && pip install vtk \\\n && apt-get install xvfb -y \\\n && pip install xvfbwrapper \\\n && /tmp/clean-layer.sh\nRUN pip install mpld3 \\\n && pip install mplleaflet \\\n && pip install gpxpy \\\n && pip install arrow \\\n && pip install nilearn \\\n && pip install nibabel \\\n && pip install pronouncing \\\n && pip install markovify \\\n && pip install rf_perm_feat_import \\\n && pip install imgaug \\\n && pip install preprocessing \\\n && pip install Baker \\\n && pip install path.py \\\n && pip install Geohash \\\n && sed -i -- 's/geohash/.geohash/g' /opt/conda/lib/python3.6/site-packages/Geohash/__init__.py \\\n && pip install deap \\\n && pip install tpot \\\n && pip install scikit-optimize \\\n && pip install haversine \\\n && pip install toolz cytoolz \\\n && pip install sacred \\\n && pip install plotly \\\n && pip install git+https://github.com/nicta/dora.git \\\n && pip install git+https://github.com/hyperopt/hyperopt.git \\\n && pip install git+https://github.com/tflearn/tflearn.git \\\n && pip install fitter \\\n && pip install langid \\\n && pip install delorean \\\n && pip install trueskill \\\n && pip install heamy \\\n && pip install vida \\\n && pip install missingno \\\n && pip install pandas-profiling \\\n && pip install s2sphere \\\n && pip install git+https://github.com/fmfn/BayesianOptimization.git \\\n && pip install matplotlib-venn \\\n && pip install pyldavis \\\n && pip install mlxtend \\\n && pip install altair \\\n && pip install pystan \\\n && pip install ImageHash \\\n && pip install ecos \\\n && pip install CVXcanon \\\n && pip install fancyimpute \\\n && pip install git+https://github.com/pymc-devs/pymc3 \\\n && pip install tifffile \\\n && pip install spectral \\\n && pip install descartes \\\n && pip install geojson \\\n && pip install pysal \\\n && pip install pyflux \\\n && pip install terminalplot \\\n && pip install raccoon \\\n && pip install pydicom \\\n && pip install wavio \\\n && pip install SimpleITK \\\n && pip install hmmlearn \\\n && pip install bayespy \\\n && pip install gplearn \\\n && pip install PyAstronomy \\\n && pip install squarify \\\n && pip install fuzzywuzzy \\\n && pip install python-louvain \\\n && pip install pyexcel-ods \\\n && pip install sklearn-pandas \\\n && pip install stemming \\\n && pip install fbprophet \\\n && pip install holoviews \\\n && pip install geoviews==1.6.1 \\\n && pip install hypertools \\\n && pip install py_stringsimjoin \\\n && pip install speedml \\\n && pip install nibabel \\\n && pip install mlens \\\n && pip install scikit-multilearn \\\n && pip install cleverhans \\\n && pip install leven \\\n && pip install catboost \\\n && pip install fastFM \\\n && pip install lightfm \\\n && pip install paramnb \\\n && pip install folium \\\n && pip install scikit-plot \\\n && pip install fury dipy \\\n && pip install plotnine==0.4.0 \\\n && pip install git+https://github.com/dvaida/hallucinate.git \\\n && pip install scikit-surprise \\\n && pip install pymongo \\\n && pip install edward \\\n && pip install geoplot \\\n && pip install eli5 \\\n && pip install implicit \\\n && pip install dask-ml[xgboost] \\\n && /tmp/clean-layer.sh\nRUN pip install kmeans-smote --no-dependencies \\\n && cd /opt/ \\\n && git clone https://github.com/PAIR-code/facets \\\n && cd facets/ \\\n && jupyter nbextension install facets-dist/ --user \\\n && export PYTHONPATH=$PYTHONPATH:/opt/facets/facets_overview/python/ \\\n && pip install ethnicolr --no-dependencies \\\n && pip install tensorpack \\\n && pip install pycountry \\\n && pip install iso3166 \\\n && pip install pydash \\\n && pip install kmodes --no-dependencies \\\n && pip install librosa \\\n && pip install polyglot \\\n && pip install mmh3 \\\n && pip install fbpca \\\n && pip install sentencepiece \\\n && pip install cufflinks \\\n && pip install glmnet_py \\\n && pip install lime \\\n && pip install memory_profiler \\\n && /tmp/clean-layer.sh\n#  install cython & cysignals before pyfasttext\nRUN pip install cython --upgrade \\\n && pip install cysignals --upgrade \\\n && pip install pyfasttext \\\n && pip install ktext \\\n && pip install git+git://github.com/facebookresearch/fastText.git \\\n && apt-get install libhunspell-dev -y \\\n && pip install hunspell \\\n && pip install annoy \\\n && pip install category_encoders \\\n && pip install google-cloud-bigquery==1.12.1 \\\n && pip install google-cloud-storage \\\n && pip install ortools \\\n && pip install scattertext \\\n && pip install pandas-datareader \\\n && pip install pykoko \\\n && pip install wordsegment \\\n && pip install pyahocorasick \\\n && pip install wordbatch \\\n && pip install emoji \\\n && pip install janome \\\n && pip install wfdb \\\n && pip install vecstack \\\n && pip install sklearn-contrib-lightning \\\n && pip install yellowbrick \\\n && pip install mlcrate \\\n && pip install vega3 \\\n && jupyter nbextension install --sys-prefix --py vega3 \\\n && /tmp/clean-layer.sh\n#  Fast.ai and dependencies\nRUN pip install bcolz \\\n && pip install bleach \\\n && pip install certifi \\\n && pip install cycler \\\n && pip install decorator \\\n && pip install entrypoints \\\n && pip install html5lib \\\n && pip install ipykernel \\\n && pip install ipython \\\n && pip install ipython-genutils \\\n && pip install ipywidgets \\\n && pip install isoweek \\\n && pip install jedi \\\n && pip install Jinja2 \\\n && pip install jsonschema \\\n && pip install jupyter \\\n && pip install jupyter-client \\\n && pip install jupyter-console \\\n && pip install jupyter-core \\\n && pip install MarkupSafe \\\n && pip install mistune \\\n && pip install nbconvert \\\n && pip install nbformat \\\n && pip install notebook==5.5.0 \\\n && pip install olefile \\\n && pip install opencv-python \\\n && pip install pandas==0.23.4 \\\n && pip install pandas_summary \\\n && pip install pandocfilters \\\n && pip install pexpect \\\n && pip install pickleshare \\\n && pip install Pillow \\\n && pip install ptyprocess \\\n && pip install Pygments \\\n && pip install pyparsing \\\n && pip install pytz \\\n && pip install PyYAML \\\n && pip install pyzmq \\\n && pip install qtconsole \\\n && pip install simplegeneric \\\n && pip install six \\\n && pip install terminado \\\n && pip install testpath \\\n && pip install tornado==5.0.2 \\\n && pip install tqdm \\\n && pip install traitlets \\\n && pip install wcwidth \\\n && pip install webencodings \\\n && pip install widgetsnbextension \\\n && pip install pyarrow==0.10.0 \\\n && pip install feather-format \\\n && pip install fastai \\\n && pip install torchtext \\\n && /tmp/clean-layer.sh\n#  allennlp and dependencies\n#  TODO: install deps when underlying dependency is fixed. https://github.com/Kaggle/docker-python/issues/548\nRUN pip install jsonnet overrides tensorboardX \\\n && pip install flask flask-cors gevent > =1.0.2 > =3.0.7 > =1.3.6 \\\n && pip install unidecode parsimonious sqlparse word2number > =0.8.0 > =0.2.4 > =1.1 \\\n && pip install pytorch-pretrained-bert jsonpickle > =0.6.0 \\\n && pip install requests editdistance conllu==0.11 > =2.18 \\\n && pip install allennlp --no-dependencies \\\n && /tmp/clean-layer.sh\n# ##########\n#\n#       NEW CONTRIBUTORS:\n#  Please add new pip/apt installs in this block. Don't forget a \"&& \\\" at the end\n#  of all non-final lines. Thanks!\n#\n# ##########\nRUN pip install flashtext \\\n && pip install marisa-trie \\\n && pip install pyemd \\\n && pip install pyupset \\\n && pip install pympler \\\n && pip install s3fs \\\n && pip install featuretools \\\n && pip install -e git+https://github.com/SohierDane/BigQuery_Helper#egg=bq_helper \\\n && pip install hpsklearn \\\n && pip install keras-tqdm \\\n && pip install git+https://github.com/Kaggle/learntools \\\n && pip install kmapper \\\n && pip install shap \\\n && pip install ray \\\n && pip install gym \\\n && pip install tensorforce \\\n && pip install pyarabic \\\n && pip install conx \\\n && pip install pandasql \\\n && pip install trackml \\\n && pip install tensorflow_hub \\\n && pip install jieba \\\n && pip install git+https://github.com/SauceCat/PDPbox \\\n && pip install ggplot \\\n && pip install cesium \\\n && pip install rgf_python \\\n && pip install pytext-nlp==0.1.2 \\\n && pip install tsfresh \\\n && pip install pymagnitude \\\n && pip install pykalman \\\n && pip install optuna \\\n && pip install chainercv \\\n && pip install plotly_express \\\n && pip install albumentations \\\n && pip install pytorch-ignite \\\n && /tmp/clean-layer.sh\n#  Tesseract and some associated utility packages\nRUN apt-get install tesseract-ocr -y \\\n && pip install pytesseract \\\n && pip install wand==0.5.3 \\\n && pip install pdf2image \\\n && pip install PyPDF \\\n && pip install pyocr \\\n && /tmp/clean-layer.sh\nENV TESSERACT_PATH=\"/usr/bin/tesseract\"\n#  Pin Vowpal Wabbit v8.6.0 because 8.6.1 does not build or install successfully\nRUN cd /usr/local/src \\\n && git clone -b 8.6.0 https://github.com/JohnLangford/vowpal_wabbit.git \\\n && ./vowpal_wabbit/python/conda_install.sh \\\n && pip install vowpal_wabbit/python \\\n && /tmp/clean-layer.sh\n#  For Facets\nENV PYTHONPATH=\"$PYTHONPATH:/opt/facets/facets_overview/python/\"\n#  For Theano with MKL\nENV MKL_THREADING_LAYER=\"GNU\"\n#  Temporary fixes and patches\n#  Temporary patch for Dask getting downgraded, which breaks Keras\nRUN pip install dask --upgrade \\\n && mkdir -p /root/.jupyter \\\n && touch /root/.jupyter/jupyter_nbconvert_config.py \\\n && touch /root/.jupyter/migrated \\\n && mkdir -p /.jupyter \\\n && touch /.jupyter/jupyter_nbconvert_config.py \\\n && touch /.jupyter/migrated \\\n && sed -i \"s/^.*Matplotlib is building the font cache using fc-list.*$/# Warning removed by Kaggle/g\" /opt/conda/lib/python3.6/site-packages/matplotlib/font_manager.py \\\n && mkdir -p /etc/ipython/ \\\n && echo \"c = get_config(); c.IPKernelApp.matplotlib = 'inline'\" > /etc/ipython/ipython_config.py \\\n && /tmp/clean-layer.sh\n#  Add BigQuery client proxy settings\nENV PYTHONUSERBASE=\"\\\"/root/.local\\\"\"\nADD patches/kaggle_gcp.py /root/.local/lib/python3.6/site-packages/kaggle_gcp.py\nADD patches/kaggle_secrets.py /root/.local/lib/python3.6/site-packages/kaggle_secrets.py\nADD patches/log.py /root/.local/lib/python3.6/site-packages/log.py\nADD patches/sitecustomize.py /root/.local/lib/python3.6/site-packages/sitecustomize.py\n#  TensorBoard Jupyter extension. Should be replaced with TensorBoard's provided magic once we have\n#  worker tunneling support in place.\nENV JUPYTER_CONFIG_DIR=\"\\\"/root/.jupyter/\\\"\"\nRUN pip install jupyter_tensorboard \\\n && jupyter serverextension enable jupyter_tensorboard \\\n && jupyter tensorboard enable\nADD patches/tensorboard/notebook.py /opt/conda/lib/python3.6/site-packages/tensorboard/notebook.py\n#  Set backend for matplotlib\nENV MPLBACKEND=\"\\\"agg\\\"\"\n","injectedSmells":[],"originalDockerfileHash":"51991dbf50294aecf1eb5a859a455643","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG BASE_TAG=5.3.0\nFROM gcr.io/kaggle-images/python-tensorflow-whl:1.13.1-py36-2 AS tensorflow_whl\nFROM continuumio/anaconda3:${BASE_TAG}\nADD clean-layer.sh /tmp/clean-layer.sh\nADD patches/nbconvert-extensions.tpl /opt/kaggle/nbconvert-extensions.tpl\n#   This is necessary for apt to access HTTPS sources\nRUN apt-get update \\\n && apt-get install apt-transport-https \\\n && /tmp/clean-layer.sh\n#   Use a fixed apt-get repo to stop intermittent failures due to flaky httpredir connections,\n#   as described by Lionel Chan at http://stackoverflow.com/a/37426929/5881346\nRUN sed -i \"s/httpredir.debian.org/debian.uchicago.edu/\" /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install build-essential unzip cmake -y \\\n && conda install -y python=3.6.6 \\\n && pip install pip --upgrade \\\n && /tmp/clean-layer.sh\n#   The anaconda base image includes outdated versions of these packages. Update them to include the latest version.\nRUN pip install seaborn python-dateutil dask \\\n && pip install pyyaml joblib pytagcloud husl geopy ml_metrics mne pyshp \\\n && pip install spacy \\\n && python -m spacy download en \\\n && python -m spacy download en_core_web_lg \\\n && apt-get install dbus fontconfig fontconfig-config fonts-dejavu-core fonts-droid-fallback ghostscript gsfonts hicolor-icon-theme libavahi-client3 libavahi-common-data libavahi-common3 libcairo2 libcap-ng0 libcroco3 libcups2 libcupsfilters1 libcupsimage2 libdatrie1 libdbus-1-3 libdjvulibre-text libdjvulibre21 libfftw3-double3 libfontconfig1 libfreetype6 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-common libgomp1 libgraphite2-3 libgs9 libgs9-common libharfbuzz0b libijs-0.35 libilmbase12 libjbig0 libjbig2dec0 libjpeg62-turbo liblcms2-2 liblqr-1-0 libltdl7 libmagickcore-6.q16-3 libmagickcore-6.q16-3-extra libmagickwand-6.q16-3 libnetpbm10 libopenexr22 libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libpaper-utils libpaper1 libpixman-1-0 libpng16-16 librsvg2-2 librsvg2-common libthai-data libthai0 libtiff5 libwmf0.2-7 libxcb-render0 libxcb-shm0 netpbm poppler-data p7zip-full -y \\\n && cd /usr/local/src \\\n && wget --no-verbose https://imagemagick.org/download/ImageMagick.tar.gz \\\n && tar xzf ImageMagick.tar.gz \\\n && cd `ls -d ImageMagick-* ` \\\n && pwd \\\n && ls -al \\\n && ./configure \\\n && make -j $( nproc ;) \\\n && make install \\\n && /tmp/clean-layer.sh\n#   Install tensorflow from a pre-built wheel\nCOPY --from=tensorflow_whl /tmp/tensorflow_cpu/*.whl /tmp/tensorflow_cpu/\nRUN pip install /tmp/tensorflow_cpu/tensorflow*.whl \\\n && rm -rf /tmp/tensorflow_cpu \\\n && /tmp/clean-layer.sh\nRUN apt-get install libfreetype6-dev -y \\\n && apt-get install libglib2.0-0 libxext6 libsm6 libxrender1 libfontconfig1 -y --fix-missing \\\n && pip install gensim \\\n && pip install textblob \\\n && pip install wordcloud \\\n && conda install -y -c conda-forge python-igraph \\\n && pip install xgboost \\\n && pip install lightgbm \\\n && pip install git+git://github.com/Lasagne/Lasagne.git \\\n && pip install keras \\\n && pip install keras-rl \\\n && pip install git+https://github.com/broadinstitute/keras-rcnn \\\n && pip install flake8==3.6.0 \\\n && cd /usr/local/src \\\n && git clone --depth 1 https://github.com/NervanaSystems/neon.git \\\n && cd neon \\\n && pip install . \\\n && cd /usr/local/src \\\n && mkdir nolearn \\\n && cd nolearn \\\n && git clone --depth 1 https://github.com/dnouri/nolearn.git \\\n && cd nolearn \\\n && echo \"x\" > README.rst \\\n && echo \"x\" > CHANGES.rst \\\n && python setup.py install \\\n && pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps \\\n && printf \"[global]\\nbase_compiledir = /tmp/.theano\\n\" > /.theanorc \\\n && cd /usr/local/src \\\n && git clone --depth 1 https://github.com/pybrain/pybrain \\\n && cd pybrain \\\n && python setup.py install \\\n && apt-get install libatlas-base-dev -y \\\n && cd /usr/local/src \\\n && git clone --depth 1 https://github.com/ztane/python-Levenshtein \\\n && cd python-Levenshtein \\\n && python setup.py install \\\n && pip install hep_ml \\\n && pip install chainer \\\n && mkdir -p /usr/share/nltk_data \\\n && yes | python -m nltk.downloader -d /usr/share/nltk_data abc alpino averaged_perceptron_tagger basque_grammars biocreative_ppi bllip_wsj_no_aux book_grammars brown brown_tei cess_cat cess_esp chat80 city_database cmudict comtrans conll2000 conll2002 conll2007 crubadan dependency_treebank europarl_raw floresta gazetteers genesis gutenberg ieer inaugural indian jeita kimmo knbc large_grammars lin_thesaurus mac_morpho machado masc_tagged maxent_ne_chunker maxent_treebank_pos_tagger moses_sample movie_reviews mte_teip5 names nps_chat omw opinion_lexicon paradigms pil pl196x porter_test ppattach problem_reports product_reviews_1 product_reviews_2 propbank pros_cons ptb punkt qc reuters rslp rte sample_grammars semcor senseval sentence_polarity sentiwordnet shakespeare sinica_treebank smultron snowball_data spanish_grammars state_union stopwords subjectivity swadesh switchboard tagsets timit toolbox treebank twitter_samples udhr2 udhr unicode_samples universal_tagset universal_treebanks_v20 vader_lexicon verbnet webtext word2vec_sample wordnet wordnet_ic words ycoe \\\n && pip install stop-words \\\n && pip install scikit-image --upgrade \\\n && /tmp/clean-layer.sh\n#   Make sure the dynamic linker finds the right libstdc++\nENV LD_LIBRARY_PATH=\"/opt/conda/lib\"\nRUN apt-get install zlib1g-dev liblcms2-dev libwebp-dev libgeos-dev -y \\\n && pip install matplotlib \\\n && pip install pyshp \\\n && pip install pyproj \\\n && conda install basemap \\\n && apt-get install libsasl2-dev -y \\\n && apt-get install libpq-dev -y \\\n && pip install ibis-framework \\\n && yes | conda install proj4 \\\n && pip install packaging \\\n && pip install shapely \\\n && pip install cartopy \\\n && pip install mxnet \\\n && pip install numpy --upgrade \\\n && pip install gluonnlp \\\n && pip install gluoncv \\\n && apt-get install default-jdk -y \\\n && cd /usr/local/src \\\n && mkdir h2o \\\n && cd h2o \\\n && wget --no-verbose http://h2o-release.s3.amazonaws.com/h2o/latest_stable -O latest \\\n && wget --no-verbose --no-check-certificate -i latest -O h2o.zip \\\n && rm latest \\\n && unzip h2o.zip \\\n && rm h2o.zip \\\n && cp h2o-*/h2o.jar . \\\n && pip install `find . -name \"*whl\" ` \\\n && python -c \"from keras.models import Sequential\" \\\n && sed -i 's/theano/tensorflow/' /root/.keras/keras.json \\\n && python -c \"from keras.models import Sequential; from keras import backend; print(backend._BACKEND)\" \\\n && mkdir -p /tmp/.keras \\\n && cp /root/.keras/keras.json /tmp/.keras \\\n && /tmp/clean-layer.sh\n#   b/128333086: Set PROJ_LIB to points to the proj4 cartographic library.\nENV PROJ_LIB=\"/opt/conda/share/proj\"\n#   scikit-learn dependencies\nRUN pip install scipy \\\n && pip install scikit-learn \\\n && pip install h5py \\\n && pip install biopython \\\n && pip install pudb \\\n && pip install imbalanced-learn \\\n && pip install line_profiler \\\n && pip install orderedmultidict \\\n && pip install smhasher \\\n && pip install bokeh \\\n && pip install numba==0.38.0 \\\n && pip install datashader \\\n && pip install Boruta \\\n && cd /usr/local/src \\\n && git clone git://github.com/nicolashennetier/pyeconometrics.git \\\n && cd pyeconometrics \\\n && python setup.py install \\\n && apt-get install graphviz -y \\\n && pip install graphviz \\\n && apt-get install pandoc -y \\\n && pip install git+git://github.com/scikit-learn-contrib/py-earth.git@issue191 \\\n && pip install essentia \\\n && export CXXFLAGS=\"-std=c++11\" \\\n && export CFLAGS=\"-std=c99\" \\\n && conda install -y pytorch-cpu torchvision-cpu -c pytorch \\\n && apt-get install sox libsox-dev libsox-fmt-all -y \\\n && pip install cffi \\\n && pip install git+git://github.com/pytorch/audio.git \\\n && /tmp/clean-layer.sh\n#   vtk with dependencies\nRUN apt-get install libgl1-mesa-glx -y \\\n && pip install vtk \\\n && apt-get install xvfb -y \\\n && pip install xvfbwrapper \\\n && /tmp/clean-layer.sh\nRUN pip install mpld3 \\\n && pip install mplleaflet \\\n && pip install gpxpy \\\n && pip install arrow \\\n && pip install nilearn \\\n && pip install nibabel \\\n && pip install pronouncing \\\n && pip install markovify \\\n && pip install rf_perm_feat_import \\\n && pip install imgaug \\\n && pip install preprocessing \\\n && pip install Baker \\\n && pip install path.py \\\n && pip install Geohash \\\n && sed -i -- 's/geohash/.geohash/g' /opt/conda/lib/python3.6/site-packages/Geohash/__init__.py \\\n && pip install deap \\\n && pip install tpot \\\n && pip install scikit-optimize \\\n && pip install haversine \\\n && pip install toolz cytoolz \\\n && pip install sacred \\\n && pip install plotly \\\n && pip install git+https://github.com/nicta/dora.git \\\n && pip install git+https://github.com/hyperopt/hyperopt.git \\\n && pip install git+https://github.com/tflearn/tflearn.git \\\n && pip install fitter \\\n && pip install langid \\\n && pip install delorean \\\n && pip install trueskill \\\n && pip install heamy \\\n && pip install vida \\\n && pip install missingno \\\n && pip install pandas-profiling \\\n && pip install s2sphere \\\n && pip install git+https://github.com/fmfn/BayesianOptimization.git \\\n && pip install matplotlib-venn \\\n && pip install pyldavis \\\n && pip install mlxtend \\\n && pip install altair \\\n && pip install pystan \\\n && pip install ImageHash \\\n && pip install ecos \\\n && pip install CVXcanon \\\n && pip install fancyimpute \\\n && pip install git+https://github.com/pymc-devs/pymc3 \\\n && pip install tifffile \\\n && pip install spectral \\\n && pip install descartes \\\n && pip install geojson \\\n && pip install pysal \\\n && pip install pyflux \\\n && pip install terminalplot \\\n && pip install raccoon \\\n && pip install pydicom \\\n && pip install wavio \\\n && pip install SimpleITK \\\n && pip install hmmlearn \\\n && pip install bayespy \\\n && pip install gplearn \\\n && pip install PyAstronomy \\\n && pip install squarify \\\n && pip install fuzzywuzzy \\\n && pip install python-louvain \\\n && pip install pyexcel-ods \\\n && pip install sklearn-pandas \\\n && pip install stemming \\\n && pip install fbprophet \\\n && pip install holoviews \\\n && pip install geoviews==1.6.1 \\\n && pip install hypertools \\\n && pip install py_stringsimjoin \\\n && pip install speedml \\\n && pip install nibabel \\\n && pip install mlens \\\n && pip install scikit-multilearn \\\n && pip install cleverhans \\\n && pip install leven \\\n && pip install catboost \\\n && pip install fastFM \\\n && pip install lightfm \\\n && pip install paramnb \\\n && pip install folium \\\n && pip install scikit-plot \\\n && pip install fury dipy \\\n && pip install plotnine==0.4.0 \\\n && pip install git+https://github.com/dvaida/hallucinate.git \\\n && pip install scikit-surprise \\\n && pip install pymongo \\\n && pip install edward \\\n && pip install geoplot \\\n && pip install eli5 \\\n && pip install implicit \\\n && pip install dask-ml[xgboost] \\\n && /tmp/clean-layer.sh\nRUN pip install kmeans-smote --no-dependencies \\\n && cd /opt/ \\\n && git clone https://github.com/PAIR-code/facets \\\n && cd facets/ \\\n && jupyter nbextension install facets-dist/ --user \\\n && export PYTHONPATH=$PYTHONPATH:/opt/facets/facets_overview/python/ \\\n && pip install ethnicolr --no-dependencies \\\n && pip install tensorpack \\\n && pip install pycountry \\\n && pip install iso3166 \\\n && pip install pydash \\\n && pip install kmodes --no-dependencies \\\n && pip install librosa \\\n && pip install polyglot \\\n && pip install mmh3 \\\n && pip install fbpca \\\n && pip install sentencepiece \\\n && pip install cufflinks \\\n && pip install glmnet_py \\\n && pip install lime \\\n && pip install memory_profiler \\\n && /tmp/clean-layer.sh\n#   install cython & cysignals before pyfasttext\nRUN pip install cython --upgrade \\\n && pip install cysignals --upgrade \\\n && pip install pyfasttext \\\n && pip install ktext \\\n && pip install git+git://github.com/facebookresearch/fastText.git \\\n && apt-get install libhunspell-dev -y \\\n && pip install hunspell \\\n && pip install annoy \\\n && pip install category_encoders \\\n && pip install google-cloud-bigquery==1.12.1 \\\n && pip install google-cloud-storage \\\n && pip install ortools \\\n && pip install scattertext \\\n && pip install pandas-datareader \\\n && pip install pykoko \\\n && pip install wordsegment \\\n && pip install pyahocorasick \\\n && pip install wordbatch \\\n && pip install emoji \\\n && pip install janome \\\n && pip install wfdb \\\n && pip install vecstack \\\n && pip install sklearn-contrib-lightning \\\n && pip install yellowbrick \\\n && pip install mlcrate \\\n && pip install vega3 \\\n && jupyter nbextension install --sys-prefix --py vega3 \\\n && /tmp/clean-layer.sh\n#   Fast.ai and dependencies\nRUN pip install bcolz \\\n && pip install bleach \\\n && pip install certifi \\\n && pip install cycler \\\n && pip install decorator \\\n && pip install entrypoints \\\n && pip install html5lib \\\n && pip install ipykernel \\\n && pip install ipython \\\n && pip install ipython-genutils \\\n && pip install ipywidgets \\\n && pip install isoweek \\\n && pip install jedi \\\n && pip install Jinja2 \\\n && pip install jsonschema \\\n && pip install jupyter \\\n && pip install jupyter-client \\\n && pip install jupyter-console \\\n && pip install jupyter-core \\\n && pip install MarkupSafe \\\n && pip install mistune \\\n && pip install nbconvert \\\n && pip install nbformat \\\n && pip install notebook==5.5.0 \\\n && pip install olefile \\\n && pip install opencv-python \\\n && pip install pandas==0.23.4 \\\n && pip install pandas_summary \\\n && pip install pandocfilters \\\n && pip install pexpect \\\n && pip install pickleshare \\\n && pip install Pillow \\\n && pip install ptyprocess \\\n && pip install Pygments \\\n && pip install pyparsing \\\n && pip install pytz \\\n && pip install PyYAML \\\n && pip install pyzmq \\\n && pip install qtconsole \\\n && pip install simplegeneric \\\n && pip install six \\\n && pip install terminado \\\n && pip install testpath \\\n && pip install tornado==5.0.2 \\\n && pip install tqdm \\\n && pip install traitlets \\\n && pip install wcwidth \\\n && pip install webencodings \\\n && pip install widgetsnbextension \\\n && pip install pyarrow==0.10.0 \\\n && pip install feather-format \\\n && pip install fastai \\\n && pip install torchtext \\\n && /tmp/clean-layer.sh\n#   allennlp and dependencies\n#   TODO: install deps when underlying dependency is fixed. https://github.com/Kaggle/docker-python/issues/548\nRUN pip install jsonnet overrides tensorboardX \\\n && pip install flask flask-cors gevent > =1.0.2 > =3.0.7 > =1.3.6 \\\n && pip install unidecode parsimonious sqlparse word2number > =0.8.0 > =0.2.4 > =1.1 \\\n && pip install pytorch-pretrained-bert jsonpickle > =0.6.0 \\\n && pip install requests editdistance conllu==0.11 > =2.18 \\\n && pip install allennlp --no-dependencies \\\n && /tmp/clean-layer.sh\n#  ##########\n#\n#        NEW CONTRIBUTORS:\n#   Please add new pip/apt installs in this block. Don't forget a \"&& \\\" at the end\n#   of all non-final lines. Thanks!\n#\n#  ##########\nRUN pip install flashtext \\\n && pip install marisa-trie \\\n && pip install pyemd \\\n && pip install pyupset \\\n && pip install pympler \\\n && pip install s3fs \\\n && pip install featuretools \\\n && pip install -e git+https://github.com/SohierDane/BigQuery_Helper#egg=bq_helper \\\n && pip install hpsklearn \\\n && pip install keras-tqdm \\\n && pip install git+https://github.com/Kaggle/learntools \\\n && pip install kmapper \\\n && pip install shap \\\n && pip install ray \\\n && pip install gym \\\n && pip install tensorforce \\\n && pip install pyarabic \\\n && pip install conx \\\n && pip install pandasql \\\n && pip install trackml \\\n && pip install tensorflow_hub \\\n && pip install jieba \\\n && pip install git+https://github.com/SauceCat/PDPbox \\\n && pip install ggplot \\\n && pip install cesium \\\n && pip install rgf_python \\\n && pip install pytext-nlp==0.1.2 \\\n && pip install tsfresh \\\n && pip install pymagnitude \\\n && pip install pykalman \\\n && pip install optuna \\\n && pip install chainercv \\\n && pip install plotly_express \\\n && pip install albumentations \\\n && pip install pytorch-ignite \\\n && /tmp/clean-layer.sh\n#   Tesseract and some associated utility packages\nRUN apt-get install tesseract-ocr -y \\\n && pip install pytesseract \\\n && pip install wand==0.5.3 \\\n && pip install pdf2image \\\n && pip install PyPDF \\\n && pip install pyocr \\\n && /tmp/clean-layer.sh\nENV TESSERACT_PATH=\"/usr/bin/tesseract\"\n#   Pin Vowpal Wabbit v8.6.0 because 8.6.1 does not build or install successfully\nRUN cd /usr/local/src \\\n && git clone -b 8.6.0 https://github.com/JohnLangford/vowpal_wabbit.git \\\n && ./vowpal_wabbit/python/conda_install.sh \\\n && pip install vowpal_wabbit/python \\\n && /tmp/clean-layer.sh\n#   For Facets\nENV PYTHONPATH=\"$PYTHONPATH:/opt/facets/facets_overview/python/\"\n#   For Theano with MKL\nENV MKL_THREADING_LAYER=\"GNU\"\n#   Temporary fixes and patches\n#   Temporary patch for Dask getting downgraded, which breaks Keras\nRUN pip install dask --upgrade \\\n && mkdir -p /root/.jupyter \\\n && touch /root/.jupyter/jupyter_nbconvert_config.py \\\n && touch /root/.jupyter/migrated \\\n && mkdir -p /.jupyter \\\n && touch /.jupyter/jupyter_nbconvert_config.py \\\n && touch /.jupyter/migrated \\\n && sed -i \"s/^.*Matplotlib is building the font cache using fc-list.*$/# Warning removed by Kaggle/g\" /opt/conda/lib/python3.6/site-packages/matplotlib/font_manager.py \\\n && mkdir -p /etc/ipython/ \\\n && echo \"c = get_config(); c.IPKernelApp.matplotlib = 'inline'\" > /etc/ipython/ipython_config.py \\\n && /tmp/clean-layer.sh\n#   Add BigQuery client proxy settings\nENV PYTHONUSERBASE=\"\\\"/root/.local\\\"\"\nADD patches/kaggle_gcp.py /root/.local/lib/python3.6/site-packages/kaggle_gcp.py\nADD patches/kaggle_secrets.py /root/.local/lib/python3.6/site-packages/kaggle_secrets.py\nADD patches/log.py /root/.local/lib/python3.6/site-packages/log.py\nADD patches/sitecustomize.py /root/.local/lib/python3.6/site-packages/sitecustomize.py\n#   TensorBoard Jupyter extension. Should be replaced with TensorBoard's provided magic once we have\n#   worker tunneling support in place.\nENV JUPYTER_CONFIG_DIR=\"\\\"/root/.jupyter/\\\"\"\nRUN pip install jupyter_tensorboard \\\n && jupyter serverextension enable jupyter_tensorboard \\\n && jupyter tensorboard enable\nADD patches/tensorboard/notebook.py /opt/conda/lib/python3.6/site-packages/tensorboard/notebook.py\n#   Set backend for matplotlib\nENV MPLBACKEND=\"\\\"agg\\\"\"\n","originalDockerfileUglifiedHash":"e6df211ae4e6bbfc529b2246ad5fe9b4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/db51c0b35dbdaf58eb7739e1d4734d80556afe0d.dockerfile"}