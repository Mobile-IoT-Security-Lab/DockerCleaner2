{"seed":2211653494,"processedDockerfileHash":"5f370121567737255bf7261a17bb5738","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   https://hub.docker.com/_/alpine\nFROM alpine:edge\nMAINTAINER Instrumentisto Team <developer@instrumentisto.com>\n#   Build and install Coturn\nRUN apk update \\\n && apk upgrade \\\n && apk add ca-certificates=20230106-r0 curl=8.0.1-r1 --no-cache \\\n && update-ca-certificates \\\n && apk add libevent=2.1.12-r5 libcrypto1.1=1.1.1t-r2 libssl1.1=1.1.1t-r2 libpq=15.2-r1 mariadb-connector-c=3.3.4-r0 sqlite-libs=3.41.2-r1 hiredis=1.1.0-r1 snappy=1.1.10-r0 zlib=1.2.13-r0 --no-cache \\\n && apk add coreutils=9.2-r2 autoconf=2.71-r2 g++=12.2.1_git20220924-r9 libtool=2.4.7-r1 make=4.4.1-r0 cmake=3.26.3-r0 --no-cache --virtual .tool-deps \\\n && apk add linux-headers=6.2-r0 libevent-dev=2.1.12-r5 openssl-dev=3.1.0-r2 postgresql-dev mariadb-connector-c-dev=3.3.4-r0 sqlite-dev=3.41.2-r1 hiredis-dev=1.1.0-r1 snappy-dev=1.1.10-r0 zlib-dev=1.2.13-r0 --no-cache --virtual .build-deps \\\n && curl -fL -o /tmp/mongo-c-driver.tar.gz https://github.com/mongodb/mongo-c-driver/archive/1.14.0.tar.gz \\\n && tar -xzf /tmp/mongo-c-driver.tar.gz -C /tmp/ \\\n && cd /tmp/mongo-c-driver-* \\\n && mkdir -p /tmp/build/mongo-c-driver/ \\\n && cd /tmp/build/mongo-c-driver/ \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DENABLE_BSON:STRING=ON -DENABLE_MONGOC:BOOL=ON -DENABLE_SSL:STRING=OPENSSL -DENABLE_AUTOMATIC_INIT_AND_CLEANUP:BOOL=OFF -DENABLE_MAN_PAGES:BOOL=OFF -DENABLE_TESTS:BOOL=ON -DENABLE_EXAMPLES:BOOL=OFF -DCMAKE_SKIP_RPATH=ON /tmp/mongo-c-driver-* \\\n && make \\\n && MONGOC_TEST_SKIP_MOCK=on MONGOC_TEST_SKIP_SLOW=on MONGOC_TEST_SKIP_LIVE=on make check \\\n && make install \\\n && curl -fL -o /tmp/coturn.tar.gz https://github.com/coturn/coturn/archive/4.5.1.1.tar.gz \\\n && tar -xzf /tmp/coturn.tar.gz -C /tmp/ \\\n && cd /tmp/coturn-* \\\n && ./configure --prefix=/usr --turndbdir=/var/lib/coturn --disable-rpath --sysconfdir=/etc/coturn --mandir=/tmp/coturn/man --docsdir=/tmp/coturn/docs --examplesdir=/tmp/coturn/examples \\\n && make \\\n && make install \\\n && mkdir -p /usr/share/licenses/coturn/ \\\n && cp /tmp/coturn/docs/LICENSE /usr/share/licenses/coturn/ \\\n && rm -f /etc/coturn/turnserver.conf.default \\\n && apk del .tool-deps .build-deps \\\n && rm -rf /var/cache/apk/* /tmp/*\nCOPY rootfs /\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh /usr/local/bin/detect-external-ip.sh \\\n && ln -s /usr/local/bin/detect-external-ip.sh /usr/local/bin/detect-external-ip\nEXPOSE 3478/tcp 3478/udp\nVOLUME [\"/var/lib/coturn\"]\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"-n\", \"--log-file=stdout\", \"--external-ip=$(\", \"detect-external-ip\", \";)\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  https://hub.docker.com/_/alpine\nFROM alpine:edge\nMAINTAINER Instrumentisto Team <developer@instrumentisto.com>\n#  Build and install Coturn\nRUN apk update \\\n && apk upgrade \\\n && apk add --no-cache ca-certificates curl \\\n && update-ca-certificates \\\n && apk add --no-cache libevent libcrypto1.1 libssl1.1 libpq mariadb-connector-c sqlite-libs hiredis snappy zlib \\\n && apk add --no-cache --virtual .tool-deps coreutils autoconf g++ libtool make cmake \\\n && apk add --no-cache --virtual .build-deps linux-headers libevent-dev openssl-dev postgresql-dev mariadb-connector-c-dev sqlite-dev hiredis-dev snappy-dev zlib-dev \\\n && curl -fL -o /tmp/mongo-c-driver.tar.gz https://github.com/mongodb/mongo-c-driver/archive/1.14.0.tar.gz \\\n && tar -xzf /tmp/mongo-c-driver.tar.gz -C /tmp/ \\\n && cd /tmp/mongo-c-driver-* \\\n && mkdir -p /tmp/build/mongo-c-driver/ \\\n && cd /tmp/build/mongo-c-driver/ \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DENABLE_BSON:STRING=ON -DENABLE_MONGOC:BOOL=ON -DENABLE_SSL:STRING=OPENSSL -DENABLE_AUTOMATIC_INIT_AND_CLEANUP:BOOL=OFF -DENABLE_MAN_PAGES:BOOL=OFF -DENABLE_TESTS:BOOL=ON -DENABLE_EXAMPLES:BOOL=OFF -DCMAKE_SKIP_RPATH=ON /tmp/mongo-c-driver-* \\\n && make \\\n && MONGOC_TEST_SKIP_MOCK=on MONGOC_TEST_SKIP_SLOW=on MONGOC_TEST_SKIP_LIVE=on make check \\\n && make install \\\n && curl -fL -o /tmp/coturn.tar.gz https://github.com/coturn/coturn/archive/4.5.1.1.tar.gz \\\n && tar -xzf /tmp/coturn.tar.gz -C /tmp/ \\\n && cd /tmp/coturn-* \\\n && ./configure --prefix=/usr --turndbdir=/var/lib/coturn --disable-rpath --sysconfdir=/etc/coturn --mandir=/tmp/coturn/man --docsdir=/tmp/coturn/docs --examplesdir=/tmp/coturn/examples \\\n && make \\\n && make install \\\n && mkdir -p /usr/share/licenses/coturn/ \\\n && cp /tmp/coturn/docs/LICENSE /usr/share/licenses/coturn/ \\\n && rm -f /etc/coturn/turnserver.conf.default \\\n && apk del .tool-deps .build-deps \\\n && rm -rf /var/cache/apk/* /tmp/*\nCOPY rootfs /\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh /usr/local/bin/detect-external-ip.sh \\\n && ln -s /usr/local/bin/detect-external-ip.sh /usr/local/bin/detect-external-ip\nEXPOSE 3478/tcp 3478/udp\nVOLUME [\"/var/lib/coturn\"]\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"-n\", \"--log-file=stdout\", \"--external-ip=$(\", \"detect-external-ip\", \";)\"]\n","injectedSmells":[],"originalDockerfileHash":"a31f67c57b88aac4ef81a37d83d32776","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   https://hub.docker.com/_/alpine\nFROM alpine:edge\nMAINTAINER Instrumentisto Team <developer@instrumentisto.com>\n#   Build and install Coturn\nRUN apk update \\\n && apk upgrade \\\n && apk add --no-cache ca-certificates curl \\\n && update-ca-certificates \\\n && apk add --no-cache libevent libcrypto1.1 libssl1.1 libpq mariadb-connector-c sqlite-libs hiredis snappy zlib \\\n && apk add --no-cache --virtual .tool-deps coreutils autoconf g++ libtool make cmake \\\n && apk add --no-cache --virtual .build-deps linux-headers libevent-dev openssl-dev postgresql-dev mariadb-connector-c-dev sqlite-dev hiredis-dev snappy-dev zlib-dev \\\n && curl -fL -o /tmp/mongo-c-driver.tar.gz https://github.com/mongodb/mongo-c-driver/archive/1.14.0.tar.gz \\\n && tar -xzf /tmp/mongo-c-driver.tar.gz -C /tmp/ \\\n && cd /tmp/mongo-c-driver-* \\\n && mkdir -p /tmp/build/mongo-c-driver/ \\\n && cd /tmp/build/mongo-c-driver/ \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DENABLE_BSON:STRING=ON -DENABLE_MONGOC:BOOL=ON -DENABLE_SSL:STRING=OPENSSL -DENABLE_AUTOMATIC_INIT_AND_CLEANUP:BOOL=OFF -DENABLE_MAN_PAGES:BOOL=OFF -DENABLE_TESTS:BOOL=ON -DENABLE_EXAMPLES:BOOL=OFF -DCMAKE_SKIP_RPATH=ON /tmp/mongo-c-driver-* \\\n && make \\\n && MONGOC_TEST_SKIP_MOCK=on MONGOC_TEST_SKIP_SLOW=on MONGOC_TEST_SKIP_LIVE=on make check \\\n && make install \\\n && curl -fL -o /tmp/coturn.tar.gz https://github.com/coturn/coturn/archive/4.5.1.1.tar.gz \\\n && tar -xzf /tmp/coturn.tar.gz -C /tmp/ \\\n && cd /tmp/coturn-* \\\n && ./configure --prefix=/usr --turndbdir=/var/lib/coturn --disable-rpath --sysconfdir=/etc/coturn --mandir=/tmp/coturn/man --docsdir=/tmp/coturn/docs --examplesdir=/tmp/coturn/examples \\\n && make \\\n && make install \\\n && mkdir -p /usr/share/licenses/coturn/ \\\n && cp /tmp/coturn/docs/LICENSE /usr/share/licenses/coturn/ \\\n && rm -f /etc/coturn/turnserver.conf.default \\\n && apk del .tool-deps .build-deps \\\n && rm -rf /var/cache/apk/* /tmp/*\nCOPY rootfs /\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh /usr/local/bin/detect-external-ip.sh \\\n && ln -s /usr/local/bin/detect-external-ip.sh /usr/local/bin/detect-external-ip\nEXPOSE 3478/tcp 3478/udp\nVOLUME [\"/var/lib/coturn\"]\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"-n\", \"--log-file=stdout\", \"--external-ip=$(\", \"detect-external-ip\", \";)\"]\n","originalDockerfileUglifiedHash":"e7bdff45bbe8c0a532734ce590c98224","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2ce2b1f183fa9d95ed6402f23e00c1c226ed8f5f.dockerfile"}