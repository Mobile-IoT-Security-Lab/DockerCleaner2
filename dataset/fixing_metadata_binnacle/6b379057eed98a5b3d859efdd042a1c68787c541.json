{"seed":3095028800,"processedDockerfileHash":"00f3cb31489294a125afaf21a4b40fa9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:%PHP_BASE_IMAGE%\nSHELL [\"/bin/bash\", \"-c\"]\nENV PHP_VERSION=\"%PHP_VERSION%\"\nRUN a2enmod rewrite expires include deflate remoteip headers\nENV APACHE_RUN_USER=\"www-data\"\n#   Edit the default DocumentRoot setting\nENV APACHE_DOCUMENT_ROOT=\"/home/site/wwwroot\"\nRUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\n#   Edit the default port setting\nENV APACHE_PORT=\"8080\"\nRUN sed -ri -e 's!<VirtualHost \\*:80>!<VirtualHost *:${APACHE_PORT}>!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!<VirtualHost _default_:443>!<VirtualHost _default_:${APACHE_PORT}>!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!Listen 80!Listen ${APACHE_PORT}!g' /etc/apache2/ports.conf\n#   Install common PHP extensions\nRUN apt-get update \\\n && apt-get install --no-install-recommends libzip-dev libpng-dev libjpeg-dev libpq-dev libldap2-dev libldb-dev libicu-dev libgmp-dev libmagickwand-dev libc-client-dev libtidy-dev libkrb5-dev libxslt-dev unixodbc-dev openssh-server vim curl wget tcptraceroute mysql-client -y \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \\\n && ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \\\n && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr \\\n && docker-php-ext-install gd mysqli opcache pdo pdo_mysql pdo_pgsql pgsql ldap intl gmp zip bcmath mbstring pcntl calendar exif gettext imap tidy shmop soap sockets sysvmsg sysvsem sysvshm pdo_odbc wddx xmlrpc xsl \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick\n#   Install the Microsoft SQL Server PDO driver on supported versions only.\n#    - https://docs.microsoft.com/en-us/sql/connect/php/installation-tutorial-linux-mac\n#    - https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server\nRUN set -eux ; if [[ $PHP_VERSION == 7.1.* || $PHP_VERSION == 7.2.* || $PHP_VERSION == 7.3.* ]] ; then apt-get update \\\n && apt-get install --no-install-recommends gnupg2 apt-transport-https -y \\\n && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - ;curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list;apt-get update \\\n && ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev ;pecl install sqlsrv pdo_sqlsrv \\\n && echo extension=pdo_sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/30-pdo_sqlsrv.ini \\\n && echo extension=sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/20-sqlsrv.ini; fi\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN { echo 'error_log=/var/log/apache2/php-error.log' ;echo 'display_errors=Off' ;echo 'log_errors=On' ;echo 'display_startup_errors=Off' ;echo 'date.timezone=UTC' ;echo 'zend_extension=opcache' ; } > /usr/local/etc/php/conf.d/php.ini\nRUN set -x \\\n && docker-php-source extract \\\n && cd /usr/src/php/ext/odbc \\\n && phpize \\\n && sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *&& *PHP_.*=yes *$@#&@g' configure \\\n && ./configure --with-unixODBC=shared,/usr \\\n && docker-php-ext-install odbc\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:%PHP_BASE_IMAGE%\nSHELL [\"/bin/bash\", \"-c\"]\nENV PHP_VERSION=\"%PHP_VERSION%\"\nRUN a2enmod rewrite expires include deflate remoteip headers\nENV APACHE_RUN_USER=\"www-data\"\n#  Edit the default DocumentRoot setting\nENV APACHE_DOCUMENT_ROOT=\"/home/site/wwwroot\"\nRUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\n#  Edit the default port setting\nENV APACHE_PORT=\"8080\"\nRUN sed -ri -e 's!<VirtualHost \\*:80>!<VirtualHost *:${APACHE_PORT}>!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!<VirtualHost _default_:443>!<VirtualHost _default_:${APACHE_PORT}>!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!Listen 80!Listen ${APACHE_PORT}!g' /etc/apache2/ports.conf\n#  Install common PHP extensions\nRUN apt-get update \\\n && apt-get install --no-install-recommends libzip-dev libpng-dev libjpeg-dev libpq-dev libldap2-dev libldb-dev libicu-dev libgmp-dev libmagickwand-dev libc-client-dev libtidy-dev libkrb5-dev libxslt-dev unixodbc-dev openssh-server vim curl wget tcptraceroute mysql-client -y \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \\\n && ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \\\n && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr \\\n && docker-php-ext-install gd mysqli opcache pdo pdo_mysql pdo_pgsql pgsql ldap intl gmp zip bcmath mbstring pcntl calendar exif gettext imap tidy shmop soap sockets sysvmsg sysvsem sysvshm pdo_odbc wddx xmlrpc xsl \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick\n#  Install the Microsoft SQL Server PDO driver on supported versions only.\n#   - https://docs.microsoft.com/en-us/sql/connect/php/installation-tutorial-linux-mac\n#   - https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server\nRUN set -eux ; if [[ $PHP_VERSION == 7.1.* || $PHP_VERSION == 7.2.* || $PHP_VERSION == 7.3.* ]] ; then apt-get update \\\n && apt-get install gnupg2 apt-transport-https -y \\\n && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - ;curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list;apt-get update \\\n && ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev ;pecl install sqlsrv pdo_sqlsrv \\\n && echo extension=pdo_sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/30-pdo_sqlsrv.ini \\\n && echo extension=sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/20-sqlsrv.ini; fi\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN { echo 'error_log=/var/log/apache2/php-error.log' ;echo 'display_errors=Off' ;echo 'log_errors=On' ;echo 'display_startup_errors=Off' ;echo 'date.timezone=UTC' ;echo 'zend_extension=opcache' ; } > /usr/local/etc/php/conf.d/php.ini\nRUN set -x \\\n && docker-php-source extract \\\n && cd /usr/src/php/ext/odbc \\\n && phpize \\\n && sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *&& *PHP_.*=yes *$@#&@g' configure \\\n && ./configure --with-unixODBC=shared,/usr \\\n && docker-php-ext-install odbc\n","injectedSmells":[],"originalDockerfileHash":"3cf7ad3fd8ac3534c3155db2b87a6440","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:%PHP_BASE_IMAGE%\nSHELL [\"/bin/bash\", \"-c\"]\nENV PHP_VERSION=\"%PHP_VERSION%\"\nRUN a2enmod rewrite expires include deflate remoteip headers\nENV APACHE_RUN_USER=\"www-data\"\n#   Edit the default DocumentRoot setting\nENV APACHE_DOCUMENT_ROOT=\"/home/site/wwwroot\"\nRUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\n#   Edit the default port setting\nENV APACHE_PORT=\"8080\"\nRUN sed -ri -e 's!<VirtualHost \\*:80>!<VirtualHost *:${APACHE_PORT}>!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!<VirtualHost _default_:443>!<VirtualHost _default_:${APACHE_PORT}>!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!Listen 80!Listen ${APACHE_PORT}!g' /etc/apache2/ports.conf\n#   Install common PHP extensions\nRUN apt-get update \\\n && apt-get install --no-install-recommends libzip-dev libpng-dev libjpeg-dev libpq-dev libldap2-dev libldb-dev libicu-dev libgmp-dev libmagickwand-dev libc-client-dev libtidy-dev libkrb5-dev libxslt-dev unixodbc-dev openssh-server vim curl wget tcptraceroute mysql-client -y \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \\\n && ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \\\n && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr \\\n && docker-php-ext-install gd mysqli opcache pdo pdo_mysql pdo_pgsql pgsql ldap intl gmp zip bcmath mbstring pcntl calendar exif gettext imap tidy shmop soap sockets sysvmsg sysvsem sysvshm pdo_odbc wddx xmlrpc xsl \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick\n#   Install the Microsoft SQL Server PDO driver on supported versions only.\n#    - https://docs.microsoft.com/en-us/sql/connect/php/installation-tutorial-linux-mac\n#    - https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server\nRUN set -eux ; if [[ $PHP_VERSION == 7.1.* || $PHP_VERSION == 7.2.* || $PHP_VERSION == 7.3.* ]] ; then apt-get update \\\n && apt-get install gnupg2 apt-transport-https -y \\\n && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - ;curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list;apt-get update \\\n && ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev ;pecl install sqlsrv pdo_sqlsrv \\\n && echo extension=pdo_sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/30-pdo_sqlsrv.ini \\\n && echo extension=sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\\\s*||\" `/20-sqlsrv.ini; fi\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN { echo 'error_log=/var/log/apache2/php-error.log' ;echo 'display_errors=Off' ;echo 'log_errors=On' ;echo 'display_startup_errors=Off' ;echo 'date.timezone=UTC' ;echo 'zend_extension=opcache' ; } > /usr/local/etc/php/conf.d/php.ini\nRUN set -x \\\n && docker-php-source extract \\\n && cd /usr/src/php/ext/odbc \\\n && phpize \\\n && sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *&& *PHP_.*=yes *$@#&@g' configure \\\n && ./configure --with-unixODBC=shared,/usr \\\n && docker-php-ext-install odbc\n","originalDockerfileUglifiedHash":"47f73caf9fdcde2c3ce351bacba6758a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6b379057eed98a5b3d859efdd042a1c68787c541.dockerfile"}