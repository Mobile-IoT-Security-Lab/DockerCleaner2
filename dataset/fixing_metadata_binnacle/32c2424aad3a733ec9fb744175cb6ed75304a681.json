{"seed":570667008,"processedDockerfileHash":"e5ce6f3f764dc08debd21bf6fa856c5b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:18.04\n#   update apt and sudo\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends sudo=1.8.21p2-3ubuntu1.5 )\n#   add unprivileged user\nRUN adduser --disabled-password --gecos '' singnet\nRUN adduser singnet sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER singnet\nRUN umask 0000\nRUN echo 'umask 0000' >> ${HOME}/.bashrc\n#   setup environment variables\nENV ROOT=\"/home/singnet\"\nENV GOPATH=\"${ROOT}\"\nENV BIN=\"${GOPATH}/bin\"\nENV PATH=\"${BIN}:${PATH}\"\nENV LOG=\"${ROOT}/log\"\nENV IPFS=\"${ROOT}/ipfs\"\nENV SINGNET=\"${GOPATH}/src/github.com/singnet\"\n#   setup folders needed\nRUN mkdir -p ${BIN}\nRUN mkdir -p ${LOG}\nRUN mkdir -p ${IPFS}\nRUN mkdir -p ${SINGNET}\n#   install git\nRUN sudo apt-get install -y git\n#   install NodeJS dev environment\nRUN sudo apt-get install -y nodejs npm\nRUN sudo npm install -g ganache-cli@6.2.4 truffle@4.1.14\n#   install Python dev environment\nRUN sudo apt-get install -y python3 python3-pip\n#   install other libraries\nRUN sudo apt-get install -y libudev-dev libusb-1.0-0-dev\n#   additional tools\nRUN sudo apt-get install -y net-tools screen vim wget nano jq\n#   install IPFS\nENV IPFS_PATH=\"${IPFS}\"\nRUN sudo apt-get install -y curl\nCOPY ./install_ipfs.sh ${GOPATH}/bin/\nRUN install_ipfs.sh\n#   setup IPFS\nRUN ipfs init\nRUN ipfs bootstrap rm --all\nRUN ipfs config Addresses.API /ip4/127.0.0.1/tcp/5002\nRUN ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8081\n#   token-contracts\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/token-contracts\nWORKDIR ${SINGNET}/token-contracts\nRUN git checkout -b demo v1.0.0\n#   plaform-contracts\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/platform-contracts\nWORKDIR ${SINGNET}/platform-contracts\nRUN git checkout -b demo v0.2.5\nRUN npm install\n#   snet-cli\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/snet-cli\nWORKDIR ${SINGNET}/snet-cli\nRUN git checkout -b demo v0.1.9\nRUN ./scripts/blockchain install\nRUN sudo pip3 install -e .\n#   snet-daemon\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/snet-daemon\nWORKDIR ${SINGNET}/snet-daemon\nRUN git checkout -b demo v0.1.4\nWORKDIR /tmp\nRUN wget https://github.com/singnet/snet-daemon/releases/download/v0.1.4/snetd-0.1.4.tar.gz \\\n && tar -xvf snetd-0.1.4.tar.gz \\\n && mv ./snetd-0.1.4/snetd-linux-amd64 ${BIN}/snetd-linux-amd64\n#   wiki\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/wiki\n#   publish Ethereum related environment variables\nENV NETWORK_ID=\"12345\"\nENV DEPLOYER_ADDR=\"0x592E3C0f3B038A0D673F19a18a773F993d4b2610\"\nENV DEPLOYER_KEY=\"0xc71478a6d0fe44e763649de0a0deb5a080b788eefbbcf9c6f7aef0dd5dbd67e0\"\nENV CALLER_ADDR=\"0x3b2b3C2e2E7C93db335E69D827F3CC4bC2A2A2cB\"\nENV CALLER_KEY=\"0x04899d5fd471ce68f84a5ec64e2e4b6b045d8b850599a57f5b307024be01f262\"\nENV PUBLISHER_ADDR=\"0x0067b427E299Eb2A4CBafc0B04C723F77c6d8a18\"\nENV PUBLISHER_KEY=\"0xba398df3130586b0d5e6ef3f757bf7fe8a1299d4b7268fdaae415952ed30ba87\"\nENV TOKEN_ADDR=\"0x6e5f20669177f5bdf3703ec5ea9c4d4fe3aabd14\"\nENV REGISTRY_ADDR=\"0x4e74fefa82e83e0964f0d9f53c68e03f7298a8b2\"\nENV MULTIPARTYESCROW_ADDR=\"0x5c7a4290f6f8ff64c69eeffdfafc8644a4ec3a4e\"\n#   setup snet-cli\n#  RUN snet network create --force local http://127.0.0.1:8545\nRUN snet || true\nCOPY ./add_local_network.sh ${GOPATH}/bin\nRUN add_local_network.sh\nRUN snet identity create deployer key --private-key ${DEPLOYER_KEY}\nRUN snet identity create caller key --private-key ${CALLER_KEY}\nRUN snet identity deployer\nRUN snet network local\nRUN snet set default_ipfs_endpoint http://localhost:5002\nRUN snet set current_singularitynettoken_at ${TOKEN_ADDR}\nRUN snet set current_registry_at ${REGISTRY_ADDR}\nRUN snet set current_multipartyescrow_at ${MULTIPARTYESCROW_ADDR}\n#   prepare environment for examples\nCOPY ./start_environment.sh ${GOPATH}/bin/\nCOPY ./stop_service.sh ${GOPATH}/bin\nRUN mkdir -p ${SINGNET}/examples/\nCOPY --chown=singnet:singnet ./examples ${SINGNET}/examples/\nCMD start_environment.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\n#  update apt and sudo\nRUN apt-get update\nRUN apt-get install sudo\n#  add unprivileged user\nRUN adduser --disabled-password --gecos '' singnet\nRUN adduser singnet sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER singnet\nRUN umask 0000\nRUN echo 'umask 0000' >> ${HOME}/.bashrc\n#  setup environment variables\nENV ROOT=\"/home/singnet\"\nENV GOPATH=\"${ROOT}\"\nENV BIN=\"${GOPATH}/bin\"\nENV PATH=\"${BIN}:${PATH}\"\nENV LOG=\"${ROOT}/log\"\nENV IPFS=\"${ROOT}/ipfs\"\nENV SINGNET=\"${GOPATH}/src/github.com/singnet\"\n#  setup folders needed\nRUN mkdir -p ${BIN}\nRUN mkdir -p ${LOG}\nRUN mkdir -p ${IPFS}\nRUN mkdir -p ${SINGNET}\n#  install git\nRUN sudo apt-get install -y git\n#  install NodeJS dev environment\nRUN sudo apt-get install -y nodejs npm\nRUN sudo npm install -g ganache-cli@6.2.4 truffle@4.1.14\n#  install Python dev environment\nRUN sudo apt-get install -y python3 python3-pip\n#  install other libraries\nRUN sudo apt-get install -y libudev-dev libusb-1.0-0-dev\n#  additional tools\nRUN sudo apt-get install -y net-tools screen vim wget nano jq\n#  install IPFS\nENV IPFS_PATH=\"${IPFS}\"\nRUN sudo apt-get install -y curl\nCOPY ./install_ipfs.sh ${GOPATH}/bin/\nRUN install_ipfs.sh\n#  setup IPFS\nRUN ipfs init\nRUN ipfs bootstrap rm --all\nRUN ipfs config Addresses.API /ip4/127.0.0.1/tcp/5002\nRUN ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8081\n#  token-contracts\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/token-contracts\nWORKDIR ${SINGNET}/token-contracts\nRUN git checkout -b demo v1.0.0\n#  plaform-contracts\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/platform-contracts\nWORKDIR ${SINGNET}/platform-contracts\nRUN git checkout -b demo v0.2.5\nRUN npm install\n#  snet-cli\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/snet-cli\nWORKDIR ${SINGNET}/snet-cli\nRUN git checkout -b demo v0.1.9\nRUN ./scripts/blockchain install\nRUN sudo pip3 install -e .\n#  snet-daemon\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/snet-daemon\nWORKDIR ${SINGNET}/snet-daemon\nRUN git checkout -b demo v0.1.4\nWORKDIR /tmp\nRUN wget https://github.com/singnet/snet-daemon/releases/download/v0.1.4/snetd-0.1.4.tar.gz \\\n && tar -xvf snetd-0.1.4.tar.gz \\\n && mv ./snetd-0.1.4/snetd-linux-amd64 ${BIN}/snetd-linux-amd64\n#  wiki\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/wiki\n#  publish Ethereum related environment variables\nENV NETWORK_ID=\"12345\"\nENV DEPLOYER_ADDR=\"0x592E3C0f3B038A0D673F19a18a773F993d4b2610\"\nENV DEPLOYER_KEY=\"0xc71478a6d0fe44e763649de0a0deb5a080b788eefbbcf9c6f7aef0dd5dbd67e0\"\nENV CALLER_ADDR=\"0x3b2b3C2e2E7C93db335E69D827F3CC4bC2A2A2cB\"\nENV CALLER_KEY=\"0x04899d5fd471ce68f84a5ec64e2e4b6b045d8b850599a57f5b307024be01f262\"\nENV PUBLISHER_ADDR=\"0x0067b427E299Eb2A4CBafc0B04C723F77c6d8a18\"\nENV PUBLISHER_KEY=\"0xba398df3130586b0d5e6ef3f757bf7fe8a1299d4b7268fdaae415952ed30ba87\"\nENV TOKEN_ADDR=\"0x6e5f20669177f5bdf3703ec5ea9c4d4fe3aabd14\"\nENV REGISTRY_ADDR=\"0x4e74fefa82e83e0964f0d9f53c68e03f7298a8b2\"\nENV MULTIPARTYESCROW_ADDR=\"0x5c7a4290f6f8ff64c69eeffdfafc8644a4ec3a4e\"\n#  setup snet-cli\n# RUN snet network create --force local http://127.0.0.1:8545\nRUN snet || true\nCOPY ./add_local_network.sh ${GOPATH}/bin\nRUN add_local_network.sh\nRUN snet identity create deployer key --private-key ${DEPLOYER_KEY}\nRUN snet identity create caller key --private-key ${CALLER_KEY}\nRUN snet identity deployer\nRUN snet network local\nRUN snet set default_ipfs_endpoint http://localhost:5002\nRUN snet set current_singularitynettoken_at ${TOKEN_ADDR}\nRUN snet set current_registry_at ${REGISTRY_ADDR}\nRUN snet set current_multipartyescrow_at ${MULTIPARTYESCROW_ADDR}\n#  prepare environment for examples\nCOPY ./start_environment.sh ${GOPATH}/bin/\nCOPY ./stop_service.sh ${GOPATH}/bin\nRUN mkdir -p ${SINGNET}/examples/\nCOPY --chown=singnet:singnet ./examples ${SINGNET}/examples/\nCMD start_environment.sh\n","injectedSmells":[],"originalDockerfileHash":"8cf8fdea0897e418d1e93a892203b000","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\n#   update apt and sudo\nRUN apt-get update\nRUN apt-get install sudo\n#   add unprivileged user\nRUN adduser --disabled-password --gecos '' singnet\nRUN adduser singnet sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER singnet\nRUN umask 0000\nRUN echo 'umask 0000' >> ${HOME}/.bashrc\n#   setup environment variables\nENV ROOT=\"/home/singnet\"\nENV GOPATH=\"${ROOT}\"\nENV BIN=\"${GOPATH}/bin\"\nENV PATH=\"${BIN}:${PATH}\"\nENV LOG=\"${ROOT}/log\"\nENV IPFS=\"${ROOT}/ipfs\"\nENV SINGNET=\"${GOPATH}/src/github.com/singnet\"\n#   setup folders needed\nRUN mkdir -p ${BIN}\nRUN mkdir -p ${LOG}\nRUN mkdir -p ${IPFS}\nRUN mkdir -p ${SINGNET}\n#   install git\nRUN sudo apt-get install -y git\n#   install NodeJS dev environment\nRUN sudo apt-get install -y nodejs npm\nRUN sudo npm install -g ganache-cli@6.2.4 truffle@4.1.14\n#   install Python dev environment\nRUN sudo apt-get install -y python3 python3-pip\n#   install other libraries\nRUN sudo apt-get install -y libudev-dev libusb-1.0-0-dev\n#   additional tools\nRUN sudo apt-get install -y net-tools screen vim wget nano jq\n#   install IPFS\nENV IPFS_PATH=\"${IPFS}\"\nRUN sudo apt-get install -y curl\nCOPY ./install_ipfs.sh ${GOPATH}/bin/\nRUN install_ipfs.sh\n#   setup IPFS\nRUN ipfs init\nRUN ipfs bootstrap rm --all\nRUN ipfs config Addresses.API /ip4/127.0.0.1/tcp/5002\nRUN ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8081\n#   token-contracts\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/token-contracts\nWORKDIR ${SINGNET}/token-contracts\nRUN git checkout -b demo v1.0.0\n#   plaform-contracts\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/platform-contracts\nWORKDIR ${SINGNET}/platform-contracts\nRUN git checkout -b demo v0.2.5\nRUN npm install\n#   snet-cli\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/snet-cli\nWORKDIR ${SINGNET}/snet-cli\nRUN git checkout -b demo v0.1.9\nRUN ./scripts/blockchain install\nRUN sudo pip3 install -e .\n#   snet-daemon\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/snet-daemon\nWORKDIR ${SINGNET}/snet-daemon\nRUN git checkout -b demo v0.1.4\nWORKDIR /tmp\nRUN wget https://github.com/singnet/snet-daemon/releases/download/v0.1.4/snetd-0.1.4.tar.gz \\\n && tar -xvf snetd-0.1.4.tar.gz \\\n && mv ./snetd-0.1.4/snetd-linux-amd64 ${BIN}/snetd-linux-amd64\n#   wiki\nWORKDIR ${SINGNET}\nRUN git clone https://github.com/singnet/wiki\n#   publish Ethereum related environment variables\nENV NETWORK_ID=\"12345\"\nENV DEPLOYER_ADDR=\"0x592E3C0f3B038A0D673F19a18a773F993d4b2610\"\nENV DEPLOYER_KEY=\"0xc71478a6d0fe44e763649de0a0deb5a080b788eefbbcf9c6f7aef0dd5dbd67e0\"\nENV CALLER_ADDR=\"0x3b2b3C2e2E7C93db335E69D827F3CC4bC2A2A2cB\"\nENV CALLER_KEY=\"0x04899d5fd471ce68f84a5ec64e2e4b6b045d8b850599a57f5b307024be01f262\"\nENV PUBLISHER_ADDR=\"0x0067b427E299Eb2A4CBafc0B04C723F77c6d8a18\"\nENV PUBLISHER_KEY=\"0xba398df3130586b0d5e6ef3f757bf7fe8a1299d4b7268fdaae415952ed30ba87\"\nENV TOKEN_ADDR=\"0x6e5f20669177f5bdf3703ec5ea9c4d4fe3aabd14\"\nENV REGISTRY_ADDR=\"0x4e74fefa82e83e0964f0d9f53c68e03f7298a8b2\"\nENV MULTIPARTYESCROW_ADDR=\"0x5c7a4290f6f8ff64c69eeffdfafc8644a4ec3a4e\"\n#   setup snet-cli\n#  RUN snet network create --force local http://127.0.0.1:8545\nRUN snet || true\nCOPY ./add_local_network.sh ${GOPATH}/bin\nRUN add_local_network.sh\nRUN snet identity create deployer key --private-key ${DEPLOYER_KEY}\nRUN snet identity create caller key --private-key ${CALLER_KEY}\nRUN snet identity deployer\nRUN snet network local\nRUN snet set default_ipfs_endpoint http://localhost:5002\nRUN snet set current_singularitynettoken_at ${TOKEN_ADDR}\nRUN snet set current_registry_at ${REGISTRY_ADDR}\nRUN snet set current_multipartyescrow_at ${MULTIPARTYESCROW_ADDR}\n#   prepare environment for examples\nCOPY ./start_environment.sh ${GOPATH}/bin/\nCOPY ./stop_service.sh ${GOPATH}/bin\nRUN mkdir -p ${SINGNET}/examples/\nCOPY --chown=singnet:singnet ./examples ${SINGNET}/examples/\nCMD start_environment.sh\n","originalDockerfileUglifiedHash":"e539f869307081de6ab777c2c0febea4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/32c2424aad3a733ec9fb744175cb6ed75304a681.dockerfile"}