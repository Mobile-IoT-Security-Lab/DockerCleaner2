{"seed":3054604014,"processedDockerfileHash":"1c834b79b8e4a2d2a91a4ebb214ca290","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-npm","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM quay.io/bitriseio/bitrise-base:alpha\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\n#   ------------------------------------------------------\n#   --- Install required tools\nRUN :\n#   Base (non android specific) tools\n#   -> should be added to bitriseio/docker-bitrise-base\n#   Dependencies to execute Android builds\nRUN dpkg --add-architecture i386\nRUN :\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-8-jdk libc6:i386 libstdc++6:i386 libgcc1:i386 libncurses5:i386 libz1:i386\n#   ------------------------------------------------------\n#   --- Download Android SDK tools into $ANDROID_HOME\nRUN cd /opt \\\n && wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O android-sdk-tools.zip \\\n && unzip -q android-sdk-tools.zip -d ${ANDROID_HOME} \\\n && rm android-sdk-tools.zip\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\n#   ------------------------------------------------------\n#   --- Install Android SDKs and other build packages\n#   Other tools and resources of Android SDK\n#    you should only install the packages you need!\n#   To get a full list of available options you can use:\n#    sdkmanager --list\n#   Accept licenses before installing components, no need to echo y for each component\n#   License is valid for all the standard components in versions installed from this file\n#   Non-standard components: MIPS system images, preview versions, GDK (Google Glass) and Android Google TV require separate licenses, not accepted there\nRUN yes | sdkmanager --licenses\n#   Platform tools\nRUN sdkmanager \"emulator\" \"tools\" \"platform-tools\"\n#   SDKs\n#   Please keep these in descending order!\n#   The `yes` is for accepting all non-standard tool licenses.\n#   Please keep all sections in descending order!\nRUN yes | sdkmanager \"platforms;android-28\" \"platforms;android-27\" \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-23\" \"platforms;android-22\" \"platforms;android-21\" \"platforms;android-19\" \"platforms;android-17\" \"platforms;android-15\" \"build-tools;28.0.3\" \"build-tools;28.0.2\" \"build-tools;28.0.1\" \"build-tools;28.0.0\" \"build-tools;27.0.3\" \"build-tools;27.0.2\" \"build-tools;27.0.1\" \"build-tools;27.0.0\" \"build-tools;26.0.2\" \"build-tools;26.0.1\" \"build-tools;25.0.3\" \"build-tools;24.0.3\" \"build-tools;23.0.3\" \"build-tools;22.0.1\" \"build-tools;21.1.2\" \"build-tools;19.1.0\" \"build-tools;17.0.0\" \"system-images;android-28;google_apis;x86\" \"system-images;android-26;google_apis;x86\" \"system-images;android-25;google_apis;armeabi-v7a\" \"system-images;android-24;default;armeabi-v7a\" \"system-images;android-22;default;armeabi-v7a\" \"system-images;android-19;default;armeabi-v7a\" \"extras;android;m2repository\" \"extras;google;m2repository\" \"extras;google;google_play_services\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.1\" \"add-ons;addon-google_apis-google-23\" \"add-ons;addon-google_apis-google-22\" \"add-ons;addon-google_apis-google-21\"\n#   ------------------------------------------------------\n#   --- Install Gradle from PPA\n#   Gradle PPA\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends gradle -y ) \\\n && gradle -v\n#   ------------------------------------------------------\n#   --- Install Maven 3 from PPA\nRUN apt-get purge maven maven2 \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends maven -y ) \\\n && mvn --version\n#   ------------------------------------------------------\n#   --- Pre-install Ionic and Cordova CLIs\nRUN npm install ionic@5.4.16 cordova@11.1.0 -g\n#   ------------------------------------------------------\n#   --- Install Fastlane\nRUN gem install fastlane --version 2.212.1 --no-document \\\n && fastlane --version\n#   ------------------------------------------------------\n#   --- Install Google Cloud SDK\n#   https://cloud.google.com/sdk/downloads\n#    Section: apt-get (Debian and Ubuntu only)\n#\n#   E.g. for \"Using Firebase Test Lab for Android from the gcloud Command Line\":\n#    https://firebase.google.com/docs/test-lab/command-line\n#\nRUN echo \"deb https://packages.cloud.google.com/apt cloud-sdk-`lsb_release -c -s ` main\" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\nRUN sudo apt-get update -qq \\\n && sudo apt-get install -y -qq google-cloud-sdk\nENV GCLOUD_SDK_CONFIG=\"/usr/lib/google-cloud-sdk/lib/googlecloudsdk/core/config.json\"\n#   gcloud config doesn't update config.json. See the official Dockerfile for details:\n#    https://github.com/GoogleCloudPlatform/cloud-sdk-docker/blob/master/Dockerfile\nRUN /usr/bin/gcloud config set --installation component_manager/disable_update_check true \\\n && sed -i -- 's/\\\"disable_updater\\\": false/\\\"disable_updater\\\": true/g' $GCLOUD_SDK_CONFIG \\\n && /usr/bin/gcloud config set --installation core/disable_usage_reporting true \\\n && sed -i -- 's/\\\"disable_usage_reporting\\\": false/\\\"disable_usage_reporting\\\": true/g' $GCLOUD_SDK_CONFIG\n#   ------------------------------------------------------\n#   --- Install additional packages\n#   Required for Android ARM Emulator\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y libqt5widgets5\nENV QT_QPA_PLATFORM=\"offscreen\"\nENV LD_LIBRARY_PATH=\"${ANDROID_HOME}/tools/lib64:${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib\"\n#   ------------------------------------------------------\n#   --- Cleanup and rev num\n#   Cleaning\nRUN apt-get clean\nENV BITRISE_DOCKER_REV_NUMBER_ANDROID=\"v2018_10_05_1\"\nCMD bitrise -version\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM quay.io/bitriseio/bitrise-base:alpha\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\n#  ------------------------------------------------------\n#  --- Install required tools\nRUN apt-get update -qq\n#  Base (non android specific) tools\n#  -> should be added to bitriseio/docker-bitrise-base\n#  Dependencies to execute Android builds\nRUN dpkg --add-architecture i386\nRUN apt-get update -qq\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-8-jdk libc6:i386 libstdc++6:i386 libgcc1:i386 libncurses5:i386 libz1:i386\n#  ------------------------------------------------------\n#  --- Download Android SDK tools into $ANDROID_HOME\nRUN cd /opt \\\n && wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O android-sdk-tools.zip \\\n && unzip -q android-sdk-tools.zip -d ${ANDROID_HOME} \\\n && rm android-sdk-tools.zip\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\n#  ------------------------------------------------------\n#  --- Install Android SDKs and other build packages\n#  Other tools and resources of Android SDK\n#   you should only install the packages you need!\n#  To get a full list of available options you can use:\n#   sdkmanager --list\n#  Accept licenses before installing components, no need to echo y for each component\n#  License is valid for all the standard components in versions installed from this file\n#  Non-standard components: MIPS system images, preview versions, GDK (Google Glass) and Android Google TV require separate licenses, not accepted there\nRUN yes | sdkmanager --licenses\n#  Platform tools\nRUN sdkmanager \"emulator\" \"tools\" \"platform-tools\"\n#  SDKs\n#  Please keep these in descending order!\n#  The `yes` is for accepting all non-standard tool licenses.\n#  Please keep all sections in descending order!\nRUN yes | sdkmanager \"platforms;android-28\" \"platforms;android-27\" \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-23\" \"platforms;android-22\" \"platforms;android-21\" \"platforms;android-19\" \"platforms;android-17\" \"platforms;android-15\" \"build-tools;28.0.3\" \"build-tools;28.0.2\" \"build-tools;28.0.1\" \"build-tools;28.0.0\" \"build-tools;27.0.3\" \"build-tools;27.0.2\" \"build-tools;27.0.1\" \"build-tools;27.0.0\" \"build-tools;26.0.2\" \"build-tools;26.0.1\" \"build-tools;25.0.3\" \"build-tools;24.0.3\" \"build-tools;23.0.3\" \"build-tools;22.0.1\" \"build-tools;21.1.2\" \"build-tools;19.1.0\" \"build-tools;17.0.0\" \"system-images;android-28;google_apis;x86\" \"system-images;android-26;google_apis;x86\" \"system-images;android-25;google_apis;armeabi-v7a\" \"system-images;android-24;default;armeabi-v7a\" \"system-images;android-22;default;armeabi-v7a\" \"system-images;android-19;default;armeabi-v7a\" \"extras;android;m2repository\" \"extras;google;m2repository\" \"extras;google;google_play_services\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.1\" \"add-ons;addon-google_apis-google-23\" \"add-ons;addon-google_apis-google-22\" \"add-ons;addon-google_apis-google-21\"\n#  ------------------------------------------------------\n#  --- Install Gradle from PPA\n#  Gradle PPA\nRUN apt-get update \\\n && apt-get install gradle -y \\\n && gradle -v\n#  ------------------------------------------------------\n#  --- Install Maven 3 from PPA\nRUN apt-get purge maven maven2 \\\n && apt-get update \\\n && apt-get install maven -y \\\n && mvn --version\n#  ------------------------------------------------------\n#  --- Pre-install Ionic and Cordova CLIs\nRUN npm install ionic cordova -g\n#  ------------------------------------------------------\n#  --- Install Fastlane\nRUN gem install fastlane --no-document \\\n && fastlane --version\n#  ------------------------------------------------------\n#  --- Install Google Cloud SDK\n#  https://cloud.google.com/sdk/downloads\n#   Section: apt-get (Debian and Ubuntu only)\n#\n#  E.g. for \"Using Firebase Test Lab for Android from the gcloud Command Line\":\n#   https://firebase.google.com/docs/test-lab/command-line\n#\nRUN echo \"deb https://packages.cloud.google.com/apt cloud-sdk-`lsb_release -c -s ` main\" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\nRUN sudo apt-get update -qq \\\n && sudo apt-get install -y -qq google-cloud-sdk\nENV GCLOUD_SDK_CONFIG=\"/usr/lib/google-cloud-sdk/lib/googlecloudsdk/core/config.json\"\n#  gcloud config doesn't update config.json. See the official Dockerfile for details:\n#   https://github.com/GoogleCloudPlatform/cloud-sdk-docker/blob/master/Dockerfile\nRUN /usr/bin/gcloud config set --installation component_manager/disable_update_check true \\\n && sed -i -- 's/\\\"disable_updater\\\": false/\\\"disable_updater\\\": true/g' $GCLOUD_SDK_CONFIG \\\n && /usr/bin/gcloud config set --installation core/disable_usage_reporting true \\\n && sed -i -- 's/\\\"disable_usage_reporting\\\": false/\\\"disable_usage_reporting\\\": true/g' $GCLOUD_SDK_CONFIG\n#  ------------------------------------------------------\n#  --- Install additional packages\n#  Required for Android ARM Emulator\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y libqt5widgets5\nENV QT_QPA_PLATFORM=\"offscreen\"\nENV LD_LIBRARY_PATH=\"${ANDROID_HOME}/tools/lib64:${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib\"\n#  ------------------------------------------------------\n#  --- Cleanup and rev num\n#  Cleaning\nRUN apt-get clean\nENV BITRISE_DOCKER_REV_NUMBER_ANDROID=\"v2018_10_05_1\"\nCMD bitrise -version\n","injectedSmells":[],"originalDockerfileHash":"d5982ff83063c48b70de7031b6118eee","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM quay.io/bitriseio/bitrise-base:alpha\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\n#   ------------------------------------------------------\n#   --- Install required tools\nRUN apt-get update -qq\n#   Base (non android specific) tools\n#   -> should be added to bitriseio/docker-bitrise-base\n#   Dependencies to execute Android builds\nRUN dpkg --add-architecture i386\nRUN apt-get update -qq\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-8-jdk libc6:i386 libstdc++6:i386 libgcc1:i386 libncurses5:i386 libz1:i386\n#   ------------------------------------------------------\n#   --- Download Android SDK tools into $ANDROID_HOME\nRUN cd /opt \\\n && wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O android-sdk-tools.zip \\\n && unzip -q android-sdk-tools.zip -d ${ANDROID_HOME} \\\n && rm android-sdk-tools.zip\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\n#   ------------------------------------------------------\n#   --- Install Android SDKs and other build packages\n#   Other tools and resources of Android SDK\n#    you should only install the packages you need!\n#   To get a full list of available options you can use:\n#    sdkmanager --list\n#   Accept licenses before installing components, no need to echo y for each component\n#   License is valid for all the standard components in versions installed from this file\n#   Non-standard components: MIPS system images, preview versions, GDK (Google Glass) and Android Google TV require separate licenses, not accepted there\nRUN yes | sdkmanager --licenses\n#   Platform tools\nRUN sdkmanager \"emulator\" \"tools\" \"platform-tools\"\n#   SDKs\n#   Please keep these in descending order!\n#   The `yes` is for accepting all non-standard tool licenses.\n#   Please keep all sections in descending order!\nRUN yes | sdkmanager \"platforms;android-28\" \"platforms;android-27\" \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-23\" \"platforms;android-22\" \"platforms;android-21\" \"platforms;android-19\" \"platforms;android-17\" \"platforms;android-15\" \"build-tools;28.0.3\" \"build-tools;28.0.2\" \"build-tools;28.0.1\" \"build-tools;28.0.0\" \"build-tools;27.0.3\" \"build-tools;27.0.2\" \"build-tools;27.0.1\" \"build-tools;27.0.0\" \"build-tools;26.0.2\" \"build-tools;26.0.1\" \"build-tools;25.0.3\" \"build-tools;24.0.3\" \"build-tools;23.0.3\" \"build-tools;22.0.1\" \"build-tools;21.1.2\" \"build-tools;19.1.0\" \"build-tools;17.0.0\" \"system-images;android-28;google_apis;x86\" \"system-images;android-26;google_apis;x86\" \"system-images;android-25;google_apis;armeabi-v7a\" \"system-images;android-24;default;armeabi-v7a\" \"system-images;android-22;default;armeabi-v7a\" \"system-images;android-19;default;armeabi-v7a\" \"extras;android;m2repository\" \"extras;google;m2repository\" \"extras;google;google_play_services\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.1\" \"add-ons;addon-google_apis-google-23\" \"add-ons;addon-google_apis-google-22\" \"add-ons;addon-google_apis-google-21\"\n#   ------------------------------------------------------\n#   --- Install Gradle from PPA\n#   Gradle PPA\nRUN apt-get update \\\n && apt-get install gradle -y \\\n && gradle -v\n#   ------------------------------------------------------\n#   --- Install Maven 3 from PPA\nRUN apt-get purge maven maven2 \\\n && apt-get update \\\n && apt-get install maven -y \\\n && mvn --version\n#   ------------------------------------------------------\n#   --- Pre-install Ionic and Cordova CLIs\nRUN npm install ionic cordova -g\n#   ------------------------------------------------------\n#   --- Install Fastlane\nRUN gem install fastlane --no-document \\\n && fastlane --version\n#   ------------------------------------------------------\n#   --- Install Google Cloud SDK\n#   https://cloud.google.com/sdk/downloads\n#    Section: apt-get (Debian and Ubuntu only)\n#\n#   E.g. for \"Using Firebase Test Lab for Android from the gcloud Command Line\":\n#    https://firebase.google.com/docs/test-lab/command-line\n#\nRUN echo \"deb https://packages.cloud.google.com/apt cloud-sdk-`lsb_release -c -s ` main\" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\nRUN sudo apt-get update -qq \\\n && sudo apt-get install -y -qq google-cloud-sdk\nENV GCLOUD_SDK_CONFIG=\"/usr/lib/google-cloud-sdk/lib/googlecloudsdk/core/config.json\"\n#   gcloud config doesn't update config.json. See the official Dockerfile for details:\n#    https://github.com/GoogleCloudPlatform/cloud-sdk-docker/blob/master/Dockerfile\nRUN /usr/bin/gcloud config set --installation component_manager/disable_update_check true \\\n && sed -i -- 's/\\\"disable_updater\\\": false/\\\"disable_updater\\\": true/g' $GCLOUD_SDK_CONFIG \\\n && /usr/bin/gcloud config set --installation core/disable_usage_reporting true \\\n && sed -i -- 's/\\\"disable_usage_reporting\\\": false/\\\"disable_usage_reporting\\\": true/g' $GCLOUD_SDK_CONFIG\n#   ------------------------------------------------------\n#   --- Install additional packages\n#   Required for Android ARM Emulator\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y libqt5widgets5\nENV QT_QPA_PLATFORM=\"offscreen\"\nENV LD_LIBRARY_PATH=\"${ANDROID_HOME}/tools/lib64:${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib\"\n#   ------------------------------------------------------\n#   --- Cleanup and rev num\n#   Cleaning\nRUN apt-get clean\nENV BITRISE_DOCKER_REV_NUMBER_ANDROID=\"v2018_10_05_1\"\nCMD bitrise -version\n","originalDockerfileUglifiedHash":"a8d6db0cd9bad4a403bc4b84f290da64","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c632e5464e4ba988724ba73823dcbc73f739db1a.dockerfile"}