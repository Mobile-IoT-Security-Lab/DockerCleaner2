{"seed":1549461293,"processedDockerfileHash":"f2894d2cb0893c0181a79d02e0540d1f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck"],"processedDockerfile":"#  # This Dockerfile is meant to aid in the building and debugging patroni whilst developing on your local machine\n#  # It has all the necessary components to play/debug with a single node appliance, running etcd\nARG PG_MAJOR=10\nARG COMPRESS=false\nARG PGHOME=/home/postgres\nARG PGDATA=$PGHOME/data\nARG LC_ALL=C.UTF-8\nARG LANG=C.UTF-8\nFROM postgres:$PG_MAJOR AS builder\nARG PGHOME\nARG PGDATA\nARG LC_ALL\nARG LANG\nENV ETCDVERSION=\"2.3.8\" \\\n    CONFDVERSION=\"0.16.0\"\nRUN set -ex \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && echo 'APT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/01norecommend \\\n && : \\\n && apt-cache depends patroni | sed -n -e 's/.*Depends: \\(python3-.\\+\\)$/\\1/p' | grep -Ev '^python3-(sphinx|etcd|consul|kazoo|kubernetes)' | xargs apt-get install -y vim curl less jq locales haproxy sudo python3-etcd python3-kazoo python3-pip busybox \\\n && pip3 install dumb-init \\\n && find /usr/share/i18n/charmaps/ -type f ! -name UTF-8.gz -delete \\\n && find /usr/share/i18n/locales/ -type f ! -name en_US ! -name en_GB ! -name i18n ! -name iso14651_t1 ! -name iso14651_t1_common ! -name 'translit_*' -delete \\\n && echo 'en_US.UTF-8 UTF-8' > /usr/share/i18n/SUPPORTED \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && echo 'global\\n stats socket /run/haproxy/admin.sock mode 660 level admin' > /etc/haproxy/haproxy.cfg \\\n && echo 'syntax on\\nfiletype plugin indent on\\nset mouse-=a\\nautocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab' > /etc/vim/vimrc.local \\\n && mkdir -p $PGHOME/.config/patroni /patroni /run/haproxy \\\n && ln -s ../../postgres0.yml $PGHOME/.config/patroni/patronictl.yaml \\\n && ln -s /patronictl.py /usr/local/bin/patronictl \\\n && sed -i \"s|/var/lib/postgresql.*|$PGHOME:/bin/bash|\" /etc/passwd \\\n && chown -R postgres:postgres /var/log \\\n && curl -sL https://github.com/coreos/etcd/releases/download/v${ETCDVERSION}/etcd-v${ETCDVERSION}-linux-amd64.tar.gz | tar xz -C /usr/local/bin --strip=1 --wildcards --no-anchored etcd etcdctl \\\n && curl -sL https://github.com/kelseyhightower/confd/releases/download/v${CONFDVERSION}/confd-${CONFDVERSION}-linux-amd64 > /usr/local/bin/confd \\\n && chmod +x /usr/local/bin/confd \\\n && apt-get purge -y --allow-remove-essential python3-pip gzip bzip2 util-linux e2fsprogs libmagic1 bsdmainutils login ncurses-bin libmagic-mgc e2fslibs bsdutils exim4-config gnupg-agent dirmngr libpython2.7-stdlib libpython2.7-minimal \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/* /root/.cache /var/cache/debconf/* /etc/rc?.d /etc/systemd /docker-entrypoint* /sbin/pam* /sbin/swap* /sbin/unix* /usr/local/bin/gosu /usr/sbin/[acgipr]* /usr/sbin/*user* /usr/share/doc* /usr/share/man /usr/share/info /usr/share/i18n/locales/translit_hangul /usr/share/locale/?? /usr/share/locale/??_?? /usr/share/postgresql/*/man /usr/share/postgresql-common/pg_wrapper /usr/share/vim/vim80/doc /usr/share/vim/vim80/lang /usr/share/vim/vim80/tutor \\\n && find /usr/bin -xtype l -delete \\\n && find /var/log -type f -exec truncate --size 0 {}\n#   perform compression if it is necessary\nARG COMPRESS\nRUN if [ \"$COMPRESS\" = \"true\" ] ; then set -ex \\\n && echo 'postgres ALL=(ALL) NOPASSWD: /bin/tar xpJf /a.tar.xz -C /, /bin/rm /a.tar.xz, /bin/ln -snf dash /bin/sh' >> /etc/sudoers \\\n && ln -snf busybox /bin/sh \\\n && files=\"/bin/sh /usr/bin/sudo /usr/lib/sudo/sudoers.so /lib/x86_64-linux-gnu/security/pam_*.so\" \\\n && libs=\"$( ldd $files | awk '{print $3;}' | grep '^/' | sort -u ;) /lib/x86_64-linux-gnu/ld-linux-x86-64.so.* /lib/x86_64-linux-gnu/libnsl.so.* /lib/x86_64-linux-gnu/libnss_compat.so.*\" \\\n && (echo /var/run $files $libs | tr ' ' '\\n' \\\n && realpath $files $libs ) | sort -u | sed 's/^\\///' > /exclude \\\n && find /etc/alternatives -xtype l -delete \\\n && save_dirs=\"usr lib var bin sbin etc/ssl etc/init.d etc/alternatives etc/apt\" \\\n && XZ_OPT=-e9v tar -X /exclude -cpJf a.tar.xz $save_dirs \\\n && /bin/busybox sh -c \"(find $save_dirs -not -type d \\\n && cat /exclude /exclude \\\n && echo exclude) | sort | uniq -u | xargs /bin/busybox rm\" \\\n && /bin/busybox --install -s \\\n && /bin/busybox sh -c \"find $save_dirs -type d -depth -exec rmdir -p {} \\; 2> /dev/null\" ; fi\nFROM scratch\nCOPY --from=builder / /\nLABEL maintainer=\"Alexander Kukushkin <alexander.kukushkin@zalando.de>\"\nARG PG_MAJOR\nARG COMPRESS\nARG PGHOME\nARG PGDATA\nARG LC_ALL\nARG LANG\nARG PGBIN=/usr/lib/postgresql/$PG_MAJOR/bin\nENV LC_ALL=\"$LC_ALL\" \\\n    LANG=\"$LANG\" \\\n    EDITOR=\"/usr/bin/editor\"\nENV PGDATA=\"$PGDATA\" \\\n    PATH=\"$PATH:$PGBIN\"\nCOPY patroni /patroni/\nCOPY extras/confd/conf.d/haproxy.toml /etc/confd/conf.d/\nCOPY extras/confd/templates/haproxy.tmpl /etc/confd/templates/\nCOPY patroni*.py docker/entrypoint.sh /\nCOPY postgres?.yml $PGHOME/\nWORKDIR $PGHOME\nRUN sed -i 's/env python/&3/' /patroni*.py \\\n && sed -i 's/^\\( connect_address:\\| - host\\)/#&/' postgres?.yml \\\n && sed -i 's/^ listen: 127.0.0.1/ listen: 0.0.0.0/' postgres?.yml \\\n && sed -i \"s|^\\( data_dir: \\).*|\\1$PGDATA|\" postgres?.yml \\\n && sed -i \"s|^#\\( bin_dir: \\).*|\\1$PGBIN|\" postgres?.yml \\\n && sed -i 's/^ - encoding: UTF8/ - locale: en_US.UTF-8\\n&/' postgres?.yml \\\n && sed -i 's/^\\(scope\\|name\\|etcd\\| host\\| authentication\\| pg_hba\\| parameters\\):/#&/' postgres?.yml \\\n && sed -i 's/^ \\(replication\\|superuser\\|rewind\\|unix_socket_directories\\|\\(\\( \\)\\{0,1\\}\\(username\\|password\\)\\)\\):/#&/' postgres?.yml \\\n && sed -i 's/^ parameters:/ pg_hba:\\n - local all all trust\\n - host replication all all md5\\n - host all all all md5\\n&\\n max_connections: 100/' postgres?.yml \\\n && if [ \"$COMPRESS\" = \"true\" ] ; then chmod u+s /usr/bin/sudo ; fi \\\n && chown -R postgres:postgres $PGHOME /run /etc/haproxy\nUSER postgres\nENTRYPOINT [\"/bin/sh\", \"/entrypoint.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# # This Dockerfile is meant to aid in the building and debugging patroni whilst developing on your local machine\n# # It has all the necessary components to play/debug with a single node appliance, running etcd\nARG PG_MAJOR=10\nARG COMPRESS=false\nARG PGHOME=/home/postgres\nARG PGDATA=$PGHOME/data\nARG LC_ALL=C.UTF-8\nARG LANG=C.UTF-8\nFROM postgres:$PG_MAJOR AS builder\nARG PGHOME\nARG PGDATA\nARG LC_ALL\nARG LANG\nENV ETCDVERSION=\"2.3.8\" \\\n    CONFDVERSION=\"0.16.0\"\nRUN set -ex \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && echo 'APT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/01norecommend \\\n && apt-get update -y \\\n && apt-cache depends patroni | sed -n -e 's/.*Depends: \\(python3-.\\+\\)$/\\1/p' | grep -Ev '^python3-(sphinx|etcd|consul|kazoo|kubernetes)' | xargs apt-get install -y vim curl less jq locales haproxy sudo python3-etcd python3-kazoo python3-pip busybox \\\n && pip3 install dumb-init \\\n && find /usr/share/i18n/charmaps/ -type f ! -name UTF-8.gz -delete \\\n && find /usr/share/i18n/locales/ -type f ! -name en_US ! -name en_GB ! -name i18n ! -name iso14651_t1 ! -name iso14651_t1_common ! -name 'translit_*' -delete \\\n && echo 'en_US.UTF-8 UTF-8' > /usr/share/i18n/SUPPORTED \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && echo 'global\\n stats socket /run/haproxy/admin.sock mode 660 level admin' > /etc/haproxy/haproxy.cfg \\\n && echo 'syntax on\\nfiletype plugin indent on\\nset mouse-=a\\nautocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab' > /etc/vim/vimrc.local \\\n && mkdir -p $PGHOME/.config/patroni /patroni /run/haproxy \\\n && ln -s ../../postgres0.yml $PGHOME/.config/patroni/patronictl.yaml \\\n && ln -s /patronictl.py /usr/local/bin/patronictl \\\n && sed -i \"s|/var/lib/postgresql.*|$PGHOME:/bin/bash|\" /etc/passwd \\\n && chown -R postgres:postgres /var/log \\\n && curl -sL https://github.com/coreos/etcd/releases/download/v${ETCDVERSION}/etcd-v${ETCDVERSION}-linux-amd64.tar.gz | tar xz -C /usr/local/bin --strip=1 --wildcards --no-anchored etcd etcdctl \\\n && curl -sL https://github.com/kelseyhightower/confd/releases/download/v${CONFDVERSION}/confd-${CONFDVERSION}-linux-amd64 > /usr/local/bin/confd \\\n && chmod +x /usr/local/bin/confd \\\n && apt-get purge -y --allow-remove-essential python3-pip gzip bzip2 util-linux e2fsprogs libmagic1 bsdmainutils login ncurses-bin libmagic-mgc e2fslibs bsdutils exim4-config gnupg-agent dirmngr libpython2.7-stdlib libpython2.7-minimal \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/* /root/.cache /var/cache/debconf/* /etc/rc?.d /etc/systemd /docker-entrypoint* /sbin/pam* /sbin/swap* /sbin/unix* /usr/local/bin/gosu /usr/sbin/[acgipr]* /usr/sbin/*user* /usr/share/doc* /usr/share/man /usr/share/info /usr/share/i18n/locales/translit_hangul /usr/share/locale/?? /usr/share/locale/??_?? /usr/share/postgresql/*/man /usr/share/postgresql-common/pg_wrapper /usr/share/vim/vim80/doc /usr/share/vim/vim80/lang /usr/share/vim/vim80/tutor \\\n && find /usr/bin -xtype l -delete \\\n && find /var/log -type f -exec truncate --size 0 {} ; \\\n && find /usr/lib/python3/dist-packages -name '*test*' | xargs rm -fr \\\n && find /lib/x86_64-linux-gnu/security -type f ! -name pam_env.so ! -name pam_permit.so ! -name pam_unix.so -delete\n#  perform compression if it is necessary\nARG COMPRESS\nRUN if [ \"$COMPRESS\" = \"true\" ] ; then set -ex \\\n && echo 'postgres ALL=(ALL) NOPASSWD: /bin/tar xpJf /a.tar.xz -C /, /bin/rm /a.tar.xz, /bin/ln -snf dash /bin/sh' >> /etc/sudoers \\\n && ln -snf busybox /bin/sh \\\n && files=\"/bin/sh /usr/bin/sudo /usr/lib/sudo/sudoers.so /lib/x86_64-linux-gnu/security/pam_*.so\" \\\n && libs=\"$( ldd $files | awk '{print $3;}' | grep '^/' | sort -u ;) /lib/x86_64-linux-gnu/ld-linux-x86-64.so.* /lib/x86_64-linux-gnu/libnsl.so.* /lib/x86_64-linux-gnu/libnss_compat.so.*\" \\\n && (echo /var/run $files $libs | tr ' ' '\\n' \\\n && realpath $files $libs ) | sort -u | sed 's/^\\///' > /exclude \\\n && find /etc/alternatives -xtype l -delete \\\n && save_dirs=\"usr lib var bin sbin etc/ssl etc/init.d etc/alternatives etc/apt\" \\\n && XZ_OPT=-e9v tar -X /exclude -cpJf a.tar.xz $save_dirs \\\n && /bin/busybox sh -c \"(find $save_dirs -not -type d \\\n && cat /exclude /exclude \\\n && echo exclude) | sort | uniq -u | xargs /bin/busybox rm\" \\\n && /bin/busybox --install -s \\\n && /bin/busybox sh -c \"find $save_dirs -type d -depth -exec rmdir -p {} \\; 2> /dev/null\" ; fi\nFROM scratch\nCOPY --from=builder / /\nLABEL maintainer=\"Alexander Kukushkin <alexander.kukushkin@zalando.de>\"\nARG PG_MAJOR\nARG COMPRESS\nARG PGHOME\nARG PGDATA\nARG LC_ALL\nARG LANG\nARG PGBIN=/usr/lib/postgresql/$PG_MAJOR/bin\nENV LC_ALL=\"$LC_ALL\" \\\n    LANG=\"$LANG\" \\\n    EDITOR=\"/usr/bin/editor\"\nENV PGDATA=\"$PGDATA\" \\\n    PATH=\"$PATH:$PGBIN\"\nCOPY patroni /patroni/\nCOPY extras/confd/conf.d/haproxy.toml /etc/confd/conf.d/\nCOPY extras/confd/templates/haproxy.tmpl /etc/confd/templates/\nCOPY patroni*.py docker/entrypoint.sh /\nCOPY postgres?.yml $PGHOME/\nWORKDIR $PGHOME\nRUN sed -i 's/env python/&3/' /patroni*.py \\\n && sed -i 's/^\\( connect_address:\\| - host\\)/#&/' postgres?.yml \\\n && sed -i 's/^ listen: 127.0.0.1/ listen: 0.0.0.0/' postgres?.yml \\\n && sed -i \"s|^\\( data_dir: \\).*|\\1$PGDATA|\" postgres?.yml \\\n && sed -i \"s|^#\\( bin_dir: \\).*|\\1$PGBIN|\" postgres?.yml \\\n && sed -i 's/^ - encoding: UTF8/ - locale: en_US.UTF-8\\n&/' postgres?.yml \\\n && sed -i 's/^\\(scope\\|name\\|etcd\\| host\\| authentication\\| pg_hba\\| parameters\\):/#&/' postgres?.yml \\\n && sed -i 's/^ \\(replication\\|superuser\\|rewind\\|unix_socket_directories\\|\\(\\( \\)\\{0,1\\}\\(username\\|password\\)\\)\\):/#&/' postgres?.yml \\\n && sed -i 's/^ parameters:/ pg_hba:\\n - local all all trust\\n - host replication all all md5\\n - host all all all md5\\n&\\n max_connections: 100/' postgres?.yml \\\n && if [ \"$COMPRESS\" = \"true\" ] ; then chmod u+s /usr/bin/sudo ; fi \\\n && chown -R postgres:postgres $PGHOME /run /etc/haproxy\nUSER postgres\nENTRYPOINT [\"/bin/sh\", \"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"8f4d6a4eb2b11e26d3bf5b715c5ae72d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  # This Dockerfile is meant to aid in the building and debugging patroni whilst developing on your local machine\n#  # It has all the necessary components to play/debug with a single node appliance, running etcd\nARG PG_MAJOR=10\nARG COMPRESS=false\nARG PGHOME=/home/postgres\nARG PGDATA=$PGHOME/data\nARG LC_ALL=C.UTF-8\nARG LANG=C.UTF-8\nFROM postgres:$PG_MAJOR AS builder\nARG PGHOME\nARG PGDATA\nARG LC_ALL\nARG LANG\nENV ETCDVERSION=\"2.3.8\" \\\n    CONFDVERSION=\"0.16.0\"\nRUN set -ex \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && echo 'APT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/01norecommend \\\n && apt-get update -y \\\n && apt-cache depends patroni | sed -n -e 's/.*Depends: \\(python3-.\\+\\)$/\\1/p' | grep -Ev '^python3-(sphinx|etcd|consul|kazoo|kubernetes)' | xargs apt-get install -y vim curl less jq locales haproxy sudo python3-etcd python3-kazoo python3-pip busybox \\\n && pip3 install dumb-init \\\n && find /usr/share/i18n/charmaps/ -type f ! -name UTF-8.gz -delete \\\n && find /usr/share/i18n/locales/ -type f ! -name en_US ! -name en_GB ! -name i18n ! -name iso14651_t1 ! -name iso14651_t1_common ! -name 'translit_*' -delete \\\n && echo 'en_US.UTF-8 UTF-8' > /usr/share/i18n/SUPPORTED \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && echo 'global\\n stats socket /run/haproxy/admin.sock mode 660 level admin' > /etc/haproxy/haproxy.cfg \\\n && echo 'syntax on\\nfiletype plugin indent on\\nset mouse-=a\\nautocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab' > /etc/vim/vimrc.local \\\n && mkdir -p $PGHOME/.config/patroni /patroni /run/haproxy \\\n && ln -s ../../postgres0.yml $PGHOME/.config/patroni/patronictl.yaml \\\n && ln -s /patronictl.py /usr/local/bin/patronictl \\\n && sed -i \"s|/var/lib/postgresql.*|$PGHOME:/bin/bash|\" /etc/passwd \\\n && chown -R postgres:postgres /var/log \\\n && curl -sL https://github.com/coreos/etcd/releases/download/v${ETCDVERSION}/etcd-v${ETCDVERSION}-linux-amd64.tar.gz | tar xz -C /usr/local/bin --strip=1 --wildcards --no-anchored etcd etcdctl \\\n && curl -sL https://github.com/kelseyhightower/confd/releases/download/v${CONFDVERSION}/confd-${CONFDVERSION}-linux-amd64 > /usr/local/bin/confd \\\n && chmod +x /usr/local/bin/confd \\\n && apt-get purge -y --allow-remove-essential python3-pip gzip bzip2 util-linux e2fsprogs libmagic1 bsdmainutils login ncurses-bin libmagic-mgc e2fslibs bsdutils exim4-config gnupg-agent dirmngr libpython2.7-stdlib libpython2.7-minimal \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/* /root/.cache /var/cache/debconf/* /etc/rc?.d /etc/systemd /docker-entrypoint* /sbin/pam* /sbin/swap* /sbin/unix* /usr/local/bin/gosu /usr/sbin/[acgipr]* /usr/sbin/*user* /usr/share/doc* /usr/share/man /usr/share/info /usr/share/i18n/locales/translit_hangul /usr/share/locale/?? /usr/share/locale/??_?? /usr/share/postgresql/*/man /usr/share/postgresql-common/pg_wrapper /usr/share/vim/vim80/doc /usr/share/vim/vim80/lang /usr/share/vim/vim80/tutor \\\n && find /usr/bin -xtype l -delete \\\n && find /var/log -type f -exec truncate --size 0 {}\n#   perform compression if it is necessary\nARG COMPRESS\nRUN if [ \"$COMPRESS\" = \"true\" ] ; then set -ex \\\n && echo 'postgres ALL=(ALL) NOPASSWD: /bin/tar xpJf /a.tar.xz -C /, /bin/rm /a.tar.xz, /bin/ln -snf dash /bin/sh' >> /etc/sudoers \\\n && ln -snf busybox /bin/sh \\\n && files=\"/bin/sh /usr/bin/sudo /usr/lib/sudo/sudoers.so /lib/x86_64-linux-gnu/security/pam_*.so\" \\\n && libs=\"$( ldd $files | awk '{print $3;}' | grep '^/' | sort -u ;) /lib/x86_64-linux-gnu/ld-linux-x86-64.so.* /lib/x86_64-linux-gnu/libnsl.so.* /lib/x86_64-linux-gnu/libnss_compat.so.*\" \\\n && (echo /var/run $files $libs | tr ' ' '\\n' \\\n && realpath $files $libs ) | sort -u | sed 's/^\\///' > /exclude \\\n && find /etc/alternatives -xtype l -delete \\\n && save_dirs=\"usr lib var bin sbin etc/ssl etc/init.d etc/alternatives etc/apt\" \\\n && XZ_OPT=-e9v tar -X /exclude -cpJf a.tar.xz $save_dirs \\\n && /bin/busybox sh -c \"(find $save_dirs -not -type d \\\n && cat /exclude /exclude \\\n && echo exclude) | sort | uniq -u | xargs /bin/busybox rm\" \\\n && /bin/busybox --install -s \\\n && /bin/busybox sh -c \"find $save_dirs -type d -depth -exec rmdir -p {} \\; 2> /dev/null\" ; fi\nFROM scratch\nCOPY --from=builder / /\nLABEL maintainer=\"Alexander Kukushkin <alexander.kukushkin@zalando.de>\"\nARG PG_MAJOR\nARG COMPRESS\nARG PGHOME\nARG PGDATA\nARG LC_ALL\nARG LANG\nARG PGBIN=/usr/lib/postgresql/$PG_MAJOR/bin\nENV LC_ALL=\"$LC_ALL\" \\\n    LANG=\"$LANG\" \\\n    EDITOR=\"/usr/bin/editor\"\nENV PGDATA=\"$PGDATA\" \\\n    PATH=\"$PATH:$PGBIN\"\nCOPY patroni /patroni/\nCOPY extras/confd/conf.d/haproxy.toml /etc/confd/conf.d/\nCOPY extras/confd/templates/haproxy.tmpl /etc/confd/templates/\nCOPY patroni*.py docker/entrypoint.sh /\nCOPY postgres?.yml $PGHOME/\nWORKDIR $PGHOME\nRUN sed -i 's/env python/&3/' /patroni*.py \\\n && sed -i 's/^\\( connect_address:\\| - host\\)/#&/' postgres?.yml \\\n && sed -i 's/^ listen: 127.0.0.1/ listen: 0.0.0.0/' postgres?.yml \\\n && sed -i \"s|^\\( data_dir: \\).*|\\1$PGDATA|\" postgres?.yml \\\n && sed -i \"s|^#\\( bin_dir: \\).*|\\1$PGBIN|\" postgres?.yml \\\n && sed -i 's/^ - encoding: UTF8/ - locale: en_US.UTF-8\\n&/' postgres?.yml \\\n && sed -i 's/^\\(scope\\|name\\|etcd\\| host\\| authentication\\| pg_hba\\| parameters\\):/#&/' postgres?.yml \\\n && sed -i 's/^ \\(replication\\|superuser\\|rewind\\|unix_socket_directories\\|\\(\\( \\)\\{0,1\\}\\(username\\|password\\)\\)\\):/#&/' postgres?.yml \\\n && sed -i 's/^ parameters:/ pg_hba:\\n - local all all trust\\n - host replication all all md5\\n - host all all all md5\\n&\\n max_connections: 100/' postgres?.yml \\\n && if [ \"$COMPRESS\" = \"true\" ] ; then chmod u+s /usr/bin/sudo ; fi \\\n && chown -R postgres:postgres $PGHOME /run /etc/haproxy\nUSER postgres\nENTRYPOINT [\"/bin/sh\", \"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"2807737188ea4f66891ebac83c84467f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/30878f2478cf645f771273fb323c0bced3814ef5.dockerfile"}