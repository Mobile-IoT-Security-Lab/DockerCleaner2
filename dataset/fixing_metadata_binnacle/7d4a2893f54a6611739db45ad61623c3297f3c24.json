{"seed":1131225073,"processedDockerfileHash":"4f4b16c07be97355b613931165cce47d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  # --------------------------------------------------------------------------------------------\n#  # ############################################################################################\n#  # --------------------------------------------------------------------------------------------\nFROM ubuntu:trusty\nMAINTAINER Hasan Karahan <hasan.karahan@blackhan.com>\n#  # --------------------------------------------------------------------------------------------\n#  # Part (a): `notex:nil` ######################################################################\n#  # --------------------------------------------------------------------------------------------\n#   ubuntu: updates & upgrades\nRUN :\nRUN apt-get -y upgrade\n#   locale: `en_US.UTF-8`\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   basic tools\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:1.9.1-1ubuntu0.10 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends zip=3.0-8 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends unzip=6.0-9ubuntu1.5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends zlibc=0.9k-4.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends nano=2.2.6-1ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends sudo=1.8.9p5-1ubuntu1.4 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends tree=1.6.0-1 -y )\nRUN git config --global user.name \"NoTex.ch\"\nRUN git config --global user.email \"contact@blackhan.com\"\n#   java: 7u55\nRUN wget -O jdk-7u55-linux-x64.tar.gz https://db.tt/d8AltmDK\nRUN tar -xvf *-linux-x64.tar.gz \\\n && mkdir -p /usr/lib/jvm\nRUN mv ./jdk1.7.0_55 /usr/lib/jvm/jdk1.7.0 \\\n && mv *.tar.gz /root/\nRUN update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk1.7.0/bin/java\" 1\nRUN update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/jdk1.7.0/bin/javac\" 1\nRUN update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/lib/jvm/jdk1.7.0/bin/javaws\" 1\nRUN chmod a+x /usr/bin/java /usr/bin/javac /usr/bin/javaws\nRUN chown -R root:root /usr/lib/jvm/jdk1.7.0\n#   ruby: 1.9.1\nRUN (apt-get update ;apt-get install --no-install-recommends ruby=1:1.9.3.4 -y )\n#   sencha command: 3.0.2.288\nENV SENCHA_CMD_x32=\"http://cdn.sencha.com/cmd/3.0.2.288/SenchaCmd-3.0.2.288-linux.run.zip\"\nENV SENCHA_CMD_x64=\"http://cdn.sencha.com/cmd/3.0.2.288/SenchaCmd-3.0.2.288-linux-x64.run.zip\"\nRUN wget -O 3.0.2.288-linux-x64.run.zip $SENCHA_CMD_x64\nRUN unzip *.run.zip \\\n && rm *.run.zip \\\n && chmod +x *.run\nRUN mkdir -p /opt/Sencha/Cmd \\\n && mv *.run /opt/Sencha/Cmd\nRUN /opt/Sencha/Cmd/SenchaCmd-3.0.2.288-linux-x64.run --prefix /opt --mode unattended\nENV PATH=\"/opt/Sencha/Cmd/3.0.2.288:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n#   memcached: 1.4.14 & 1.0.8\nRUN (apt-get update ;apt-get install --no-install-recommends memcached=1.4.14-0ubuntu9.3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libmemcached-dev=1.0.8-1ubuntu2 -y )\n#   redis: 2.8.4\nRUN (apt-get update ;apt-get install --no-install-recommends redis-server=2:2.8.4-2ubuntu0.2 -y )\n#   postgresql: 9.3\nRUN (apt-get update ;apt-get install --no-install-recommends postgresql=9.3+154ubuntu1.1 postgresql-server-dev-9.3=9.3.24-0ubuntu0.14.04 -y )\n#   python: 2.7.6, pip: 1.5.6, virtualenv: 1.11, sphinx: 1.2.2\nRUN (apt-get update ;apt-get install --no-install-recommends python2.7=2.7.6-8ubuntu0.5 python2.7-dev=2.7.6-8ubuntu0.5 python-sphinx=1.2.2+dfsg-1ubuntu1.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python-pip=1.5.4-1ubuntu4 -y ) \\\n && pip install virtualenv==20.21.0\nRUN ln -s /usr/bin/sphinx-build /usr/bin/sphinx-build2\n#   clean & remove\nRUN apt-get -y clean\nRUN apt-get -y autoclean\nRUN apt-get -y autoremove\n#  # --------------------------------------------------------------------------------------------\n#  # Part (b): `notex:tex` ######################################################################\n#  # --------------------------------------------------------------------------------------------\nRUN (apt-get update ;apt-get install --no-install-recommends texlive-full=2013.20140215-1ubuntu0.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends ttf-* -y )\n#  # --------------------------------------------------------------------------------------------\n#  # Part (c): `notex:dev` ######################################################################\n#  # --------------------------------------------------------------------------------------------\n#   notex: fetch latest tag\nRUN git clone https://github.com/hsk81/notex /srv/notex.git \\\n && cd /srv/notex.git \\\n && git checkout master \\\n && git submodule update --init --recursive \\\n && git checkout $( git tag | tail -n1 ;) \\\n && git checkout -b tag-$( git tag | tail -n1 ;)\n#   notex: setup postgres\nRUN /etc/init.d/postgresql start ; cd /srv/notex.git \\\n && sudo -u postgres -g postgres psql -f webed/config/pg.sql \\\n && sudo -u postgres -g postgres psql -f webed/config/test.sql \\\n && sudo -u postgres -g postgres psql -f webed/config/production.sql\n#   notex: setup sencha & python env\nRUN cd /srv/notex.git \\\n && /bin/bash -c './setup.sh \\\n && source bin/activate \\\n && ./setup.py install' \\\n && /bin/bash -c 'mkdir -p .python-eggs'\n#   notex: setup dirs & owners\nRUN mkdir -p /var/www/webed\nRUN chown www-data:www-data /var/www/webed -R\nRUN chown www-data:www-data /srv/notex.git -R\n#   notex: execute `reset`\nRUN /etc/init.d/memcached restart \\\n && /etc/init.d/redis-server restart \\\n && /etc/init.d/postgresql restart \\\n && cd /srv/notex.git \\\n && /bin/bash -c 'source bin/activate \\\n && /usr/bin/sudo -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py ./webed.py reset'\n#  # --------------------------------------------------------------------------------------------\n#  # Part (d): `notex:pro` ######################################################################\n#  # --------------------------------------------------------------------------------------------\n#   lighttpd: 1.4.33, highlight: 3.9\nRUN (apt-get update ;apt-get install --no-install-recommends lighttpd=1.4.33-1+nmu2ubuntu2.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends highlight=3.9-1build1 -y )\n#   nginx: 1.4.6\nRUN (apt-get update ;apt-get install --no-install-recommends nginx=1.4.6-1ubuntu3.9 -y )\nRUN rm -rf /etc/nginx/sites-enabled/*\nRUN rm -rf /etc/nginx/conf.d/*\n#   notex: execute `assets build`\nRUN cd /srv/notex.git \\\n && /bin/bash -c 'source bin/activate \\\n && /usr/bin/sudo -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py ./webed.py assets build'\n#   notex: execute `assets-gzip`\nRUN cd /srv/notex.git \\\n && /bin/bash -c 'source bin/activate \\\n && /usr/bin/sudo -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py ./webed.py assets-gzip'\n#  # --------------------------------------------------------------------------------------------\n#  # Part (e): `notex:run` ######################################################################\n#  # --------------------------------------------------------------------------------------------\n#   notex: `webed.run`\nRUN cd /srv/notex.git \\\n && echo '#!/bin/bash\\nif [[ $@ =~ NGINX=(1|true) ]] ; then /etc/init.d/nginx restart 2> /dev/null ; fi\\nif [[ $@ =~ LIGHTTPD=(1|true) ]] ; then /etc/init.d/lighttpd restart 2> /dev/null ; fi\\nif [[ $@ =~ REDIS=(1|true) ]] ; then /etc/init.d/redis-server restart 2> /dev/null ; fi\\nif [[ $@ =~ MEMCACHED=(1|true) ]] ; then /etc/init.d/memcached restart 2> /dev/null ; fi\\nif [[ $@ =~ POSTGRESQL=(1|true) ]] ; then /etc/init.d/postgresql restart 2> /dev/null ; fi\\nif [[ $@ =~ GITDAEMON=(1|true) ]] ; then /bin/sh -e /etc/rc.local 2> /dev/null ; fi\\n\\ncd /srv/notex.git \\\n && CMD=$@ \\\n && /usr/bin/sudo -u www-data -g www-data /bin/bash -c \"source bin/activate \\\n && PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py $CMD\"\\n' > webed.run \\\n && chmod +x webed.run\n#   notex: execute `webed.run`\nENTRYPOINT [\"/srv/notex.git/webed.run\"]\n#  # --------------------------------------------------------------------------------------------\n#  # Part (f): `notex:cfg` ######################################################################\n#  # --------------------------------------------------------------------------------------------\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY webed.conf /etc/nginx/conf.d/webed.conf\nCOPY robots.txt /etc/nginx/conf.d/robots.txt\nCOPY lighttpd.conf /etc/lighttpd/lighttpd.conf\nCOPY gitweb.conf /etc/gitweb.conf\nCOPY rc.local /etc/rc.local\nCOPY webed/config/default.py /srv/notex.git/webed/config/default.py\nCOPY webed/config/production.py /srv/notex.git/webed/config/production.py\nCOPY webed/config/sphinx.py /srv/notex.git/webed/config/sphinx.py\nCOPY webed/config/test.py /srv/notex.git/webed/config/test.py\n#  # --------------------------------------------------------------------------------------------\n#  # ############################################################################################\n#  # --------------------------------------------------------------------------------------------\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# # --------------------------------------------------------------------------------------------\n# # ############################################################################################\n# # --------------------------------------------------------------------------------------------\nFROM ubuntu:trusty\nMAINTAINER Hasan Karahan <hasan.karahan@blackhan.com>\n# # --------------------------------------------------------------------------------------------\n# # Part (a): `notex:nil` ######################################################################\n# # --------------------------------------------------------------------------------------------\n#  ubuntu: updates & upgrades\nRUN apt-get update -y\nRUN apt-get -y upgrade\n#  locale: `en_US.UTF-8`\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\n#  basic tools\nRUN apt-get install build-essential -y\nRUN apt-get install git -y\nRUN apt-get install zip -y\nRUN apt-get install unzip -y\nRUN apt-get install zlibc -y\nRUN apt-get install wget -y\nRUN apt-get install curl -y\nRUN apt-get install nano -y\nRUN apt-get install sudo -y\nRUN apt-get install tree -y\nRUN git config --global user.name \"NoTex.ch\"\nRUN git config --global user.email \"contact@blackhan.com\"\n#  java: 7u55\nRUN wget -O jdk-7u55-linux-x64.tar.gz https://db.tt/d8AltmDK\nRUN tar -xvf *-linux-x64.tar.gz \\\n && mkdir -p /usr/lib/jvm\nRUN mv ./jdk1.7.0_55 /usr/lib/jvm/jdk1.7.0 \\\n && mv *.tar.gz /root/\nRUN update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk1.7.0/bin/java\" 1\nRUN update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/jdk1.7.0/bin/javac\" 1\nRUN update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/lib/jvm/jdk1.7.0/bin/javaws\" 1\nRUN chmod a+x /usr/bin/java /usr/bin/javac /usr/bin/javaws\nRUN chown -R root:root /usr/lib/jvm/jdk1.7.0\n#  ruby: 1.9.1\nRUN apt-get install ruby -y\n#  sencha command: 3.0.2.288\nENV SENCHA_CMD_x32=\"http://cdn.sencha.com/cmd/3.0.2.288/SenchaCmd-3.0.2.288-linux.run.zip\"\nENV SENCHA_CMD_x64=\"http://cdn.sencha.com/cmd/3.0.2.288/SenchaCmd-3.0.2.288-linux-x64.run.zip\"\nRUN wget -O 3.0.2.288-linux-x64.run.zip $SENCHA_CMD_x64\nRUN unzip *.run.zip \\\n && rm *.run.zip \\\n && chmod +x *.run\nRUN mkdir -p /opt/Sencha/Cmd \\\n && mv *.run /opt/Sencha/Cmd\nRUN /opt/Sencha/Cmd/SenchaCmd-3.0.2.288-linux-x64.run --prefix /opt --mode unattended\nENV PATH=\"/opt/Sencha/Cmd/3.0.2.288:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n#  memcached: 1.4.14 & 1.0.8\nRUN apt-get install memcached -y\nRUN apt-get install libmemcached-dev -y\n#  redis: 2.8.4\nRUN apt-get install redis-server -y\n#  postgresql: 9.3\nRUN apt-get install postgresql postgresql-server-dev-9.3 -y\n#  python: 2.7.6, pip: 1.5.6, virtualenv: 1.11, sphinx: 1.2.2\nRUN apt-get install python2.7 python2.7-dev python-sphinx -y\nRUN apt-get install python-pip -y \\\n && pip install virtualenv\nRUN ln -s /usr/bin/sphinx-build /usr/bin/sphinx-build2\n#  clean & remove\nRUN apt-get -y clean\nRUN apt-get -y autoclean\nRUN apt-get -y autoremove\n# # --------------------------------------------------------------------------------------------\n# # Part (b): `notex:tex` ######################################################################\n# # --------------------------------------------------------------------------------------------\nRUN apt-get install texlive-full -y\nRUN apt-get install ttf-* -y\n# # --------------------------------------------------------------------------------------------\n# # Part (c): `notex:dev` ######################################################################\n# # --------------------------------------------------------------------------------------------\n#  notex: fetch latest tag\nRUN git clone https://github.com/hsk81/notex /srv/notex.git \\\n && cd /srv/notex.git \\\n && git checkout master \\\n && git submodule update --init --recursive \\\n && git checkout $( git tag | tail -n1 ;) \\\n && git checkout -b tag-$( git tag | tail -n1 ;)\n#  notex: setup postgres\nRUN /etc/init.d/postgresql start ; cd /srv/notex.git \\\n && sudo -u postgres -g postgres psql -f webed/config/pg.sql \\\n && sudo -u postgres -g postgres psql -f webed/config/test.sql \\\n && sudo -u postgres -g postgres psql -f webed/config/production.sql\n#  notex: setup sencha & python env\nRUN cd /srv/notex.git \\\n && /bin/bash -c './setup.sh \\\n && source bin/activate \\\n && ./setup.py install' \\\n && /bin/bash -c 'mkdir -p .python-eggs'\n#  notex: setup dirs & owners\nRUN mkdir -p /var/www/webed\nRUN chown www-data:www-data /var/www/webed -R\nRUN chown www-data:www-data /srv/notex.git -R\n#  notex: execute `reset`\nRUN /etc/init.d/memcached restart \\\n && /etc/init.d/redis-server restart \\\n && /etc/init.d/postgresql restart \\\n && cd /srv/notex.git \\\n && /bin/bash -c 'source bin/activate \\\n && /usr/bin/sudo -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py ./webed.py reset'\n# # --------------------------------------------------------------------------------------------\n# # Part (d): `notex:pro` ######################################################################\n# # --------------------------------------------------------------------------------------------\n#  lighttpd: 1.4.33, highlight: 3.9\nRUN apt-get install lighttpd -y\nRUN apt-get install highlight -y\n#  nginx: 1.4.6\nRUN apt-get install nginx -y\nRUN rm -rf /etc/nginx/sites-enabled/*\nRUN rm -rf /etc/nginx/conf.d/*\n#  notex: execute `assets build`\nRUN cd /srv/notex.git \\\n && /bin/bash -c 'source bin/activate \\\n && /usr/bin/sudo -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py ./webed.py assets build'\n#  notex: execute `assets-gzip`\nRUN cd /srv/notex.git \\\n && /bin/bash -c 'source bin/activate \\\n && /usr/bin/sudo -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py ./webed.py assets-gzip'\n# # --------------------------------------------------------------------------------------------\n# # Part (e): `notex:run` ######################################################################\n# # --------------------------------------------------------------------------------------------\n#  notex: `webed.run`\nRUN cd /srv/notex.git \\\n && echo '#!/bin/bash\\nif [[ $@ =~ NGINX=(1|true) ]] ; then /etc/init.d/nginx restart 2> /dev/null ; fi\\nif [[ $@ =~ LIGHTTPD=(1|true) ]] ; then /etc/init.d/lighttpd restart 2> /dev/null ; fi\\nif [[ $@ =~ REDIS=(1|true) ]] ; then /etc/init.d/redis-server restart 2> /dev/null ; fi\\nif [[ $@ =~ MEMCACHED=(1|true) ]] ; then /etc/init.d/memcached restart 2> /dev/null ; fi\\nif [[ $@ =~ POSTGRESQL=(1|true) ]] ; then /etc/init.d/postgresql restart 2> /dev/null ; fi\\nif [[ $@ =~ GITDAEMON=(1|true) ]] ; then /bin/sh -e /etc/rc.local 2> /dev/null ; fi\\n\\ncd /srv/notex.git \\\n && CMD=$@ \\\n && /usr/bin/sudo -u www-data -g www-data /bin/bash -c \"source bin/activate \\\n && PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py $CMD\"\\n' > webed.run \\\n && chmod +x webed.run\n#  notex: execute `webed.run`\nENTRYPOINT [\"/srv/notex.git/webed.run\"]\n# # --------------------------------------------------------------------------------------------\n# # Part (f): `notex:cfg` ######################################################################\n# # --------------------------------------------------------------------------------------------\nADD nginx.conf /etc/nginx/nginx.conf\nADD webed.conf /etc/nginx/conf.d/webed.conf\nADD robots.txt /etc/nginx/conf.d/robots.txt\nADD lighttpd.conf /etc/lighttpd/lighttpd.conf\nADD gitweb.conf /etc/gitweb.conf\nADD rc.local /etc/rc.local\nADD webed/config/default.py /srv/notex.git/webed/config/default.py\nADD webed/config/production.py /srv/notex.git/webed/config/production.py\nADD webed/config/sphinx.py /srv/notex.git/webed/config/sphinx.py\nADD webed/config/test.py /srv/notex.git/webed/config/test.py\n# # --------------------------------------------------------------------------------------------\n# # ############################################################################################\n# # --------------------------------------------------------------------------------------------\n","injectedSmells":[],"originalDockerfileHash":"489fa67400a5c57f4486f72f436d1ff1","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  # --------------------------------------------------------------------------------------------\n#  # ############################################################################################\n#  # --------------------------------------------------------------------------------------------\nFROM ubuntu:trusty\nMAINTAINER Hasan Karahan <hasan.karahan@blackhan.com>\n#  # --------------------------------------------------------------------------------------------\n#  # Part (a): `notex:nil` ######################################################################\n#  # --------------------------------------------------------------------------------------------\n#   ubuntu: updates & upgrades\nRUN apt-get update -y\nRUN apt-get -y upgrade\n#   locale: `en_US.UTF-8`\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   basic tools\nRUN apt-get install build-essential -y\nRUN apt-get install git -y\nRUN apt-get install zip -y\nRUN apt-get install unzip -y\nRUN apt-get install zlibc -y\nRUN apt-get install wget -y\nRUN apt-get install curl -y\nRUN apt-get install nano -y\nRUN apt-get install sudo -y\nRUN apt-get install tree -y\nRUN git config --global user.name \"NoTex.ch\"\nRUN git config --global user.email \"contact@blackhan.com\"\n#   java: 7u55\nRUN wget -O jdk-7u55-linux-x64.tar.gz https://db.tt/d8AltmDK\nRUN tar -xvf *-linux-x64.tar.gz \\\n && mkdir -p /usr/lib/jvm\nRUN mv ./jdk1.7.0_55 /usr/lib/jvm/jdk1.7.0 \\\n && mv *.tar.gz /root/\nRUN update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk1.7.0/bin/java\" 1\nRUN update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/jdk1.7.0/bin/javac\" 1\nRUN update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/lib/jvm/jdk1.7.0/bin/javaws\" 1\nRUN chmod a+x /usr/bin/java /usr/bin/javac /usr/bin/javaws\nRUN chown -R root:root /usr/lib/jvm/jdk1.7.0\n#   ruby: 1.9.1\nRUN apt-get install ruby -y\n#   sencha command: 3.0.2.288\nENV SENCHA_CMD_x32=\"http://cdn.sencha.com/cmd/3.0.2.288/SenchaCmd-3.0.2.288-linux.run.zip\"\nENV SENCHA_CMD_x64=\"http://cdn.sencha.com/cmd/3.0.2.288/SenchaCmd-3.0.2.288-linux-x64.run.zip\"\nRUN wget -O 3.0.2.288-linux-x64.run.zip $SENCHA_CMD_x64\nRUN unzip *.run.zip \\\n && rm *.run.zip \\\n && chmod +x *.run\nRUN mkdir -p /opt/Sencha/Cmd \\\n && mv *.run /opt/Sencha/Cmd\nRUN /opt/Sencha/Cmd/SenchaCmd-3.0.2.288-linux-x64.run --prefix /opt --mode unattended\nENV PATH=\"/opt/Sencha/Cmd/3.0.2.288:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n#   memcached: 1.4.14 & 1.0.8\nRUN apt-get install memcached -y\nRUN apt-get install libmemcached-dev -y\n#   redis: 2.8.4\nRUN apt-get install redis-server -y\n#   postgresql: 9.3\nRUN apt-get install postgresql postgresql-server-dev-9.3 -y\n#   python: 2.7.6, pip: 1.5.6, virtualenv: 1.11, sphinx: 1.2.2\nRUN apt-get install python2.7 python2.7-dev python-sphinx -y\nRUN apt-get install python-pip -y \\\n && pip install virtualenv\nRUN ln -s /usr/bin/sphinx-build /usr/bin/sphinx-build2\n#   clean & remove\nRUN apt-get -y clean\nRUN apt-get -y autoclean\nRUN apt-get -y autoremove\n#  # --------------------------------------------------------------------------------------------\n#  # Part (b): `notex:tex` ######################################################################\n#  # --------------------------------------------------------------------------------------------\nRUN apt-get install texlive-full -y\nRUN apt-get install ttf-* -y\n#  # --------------------------------------------------------------------------------------------\n#  # Part (c): `notex:dev` ######################################################################\n#  # --------------------------------------------------------------------------------------------\n#   notex: fetch latest tag\nRUN git clone https://github.com/hsk81/notex /srv/notex.git \\\n && cd /srv/notex.git \\\n && git checkout master \\\n && git submodule update --init --recursive \\\n && git checkout $( git tag | tail -n1 ;) \\\n && git checkout -b tag-$( git tag | tail -n1 ;)\n#   notex: setup postgres\nRUN /etc/init.d/postgresql start ; cd /srv/notex.git \\\n && sudo -u postgres -g postgres psql -f webed/config/pg.sql \\\n && sudo -u postgres -g postgres psql -f webed/config/test.sql \\\n && sudo -u postgres -g postgres psql -f webed/config/production.sql\n#   notex: setup sencha & python env\nRUN cd /srv/notex.git \\\n && /bin/bash -c './setup.sh \\\n && source bin/activate \\\n && ./setup.py install' \\\n && /bin/bash -c 'mkdir -p .python-eggs'\n#   notex: setup dirs & owners\nRUN mkdir -p /var/www/webed\nRUN chown www-data:www-data /var/www/webed -R\nRUN chown www-data:www-data /srv/notex.git -R\n#   notex: execute `reset`\nRUN /etc/init.d/memcached restart \\\n && /etc/init.d/redis-server restart \\\n && /etc/init.d/postgresql restart \\\n && cd /srv/notex.git \\\n && /bin/bash -c 'source bin/activate \\\n && /usr/bin/sudo -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py ./webed.py reset'\n#  # --------------------------------------------------------------------------------------------\n#  # Part (d): `notex:pro` ######################################################################\n#  # --------------------------------------------------------------------------------------------\n#   lighttpd: 1.4.33, highlight: 3.9\nRUN apt-get install lighttpd -y\nRUN apt-get install highlight -y\n#   nginx: 1.4.6\nRUN apt-get install nginx -y\nRUN rm -rf /etc/nginx/sites-enabled/*\nRUN rm -rf /etc/nginx/conf.d/*\n#   notex: execute `assets build`\nRUN cd /srv/notex.git \\\n && /bin/bash -c 'source bin/activate \\\n && /usr/bin/sudo -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py ./webed.py assets build'\n#   notex: execute `assets-gzip`\nRUN cd /srv/notex.git \\\n && /bin/bash -c 'source bin/activate \\\n && /usr/bin/sudo -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py ./webed.py assets-gzip'\n#  # --------------------------------------------------------------------------------------------\n#  # Part (e): `notex:run` ######################################################################\n#  # --------------------------------------------------------------------------------------------\n#   notex: `webed.run`\nRUN cd /srv/notex.git \\\n && echo '#!/bin/bash\\nif [[ $@ =~ NGINX=(1|true) ]] ; then /etc/init.d/nginx restart 2> /dev/null ; fi\\nif [[ $@ =~ LIGHTTPD=(1|true) ]] ; then /etc/init.d/lighttpd restart 2> /dev/null ; fi\\nif [[ $@ =~ REDIS=(1|true) ]] ; then /etc/init.d/redis-server restart 2> /dev/null ; fi\\nif [[ $@ =~ MEMCACHED=(1|true) ]] ; then /etc/init.d/memcached restart 2> /dev/null ; fi\\nif [[ $@ =~ POSTGRESQL=(1|true) ]] ; then /etc/init.d/postgresql restart 2> /dev/null ; fi\\nif [[ $@ =~ GITDAEMON=(1|true) ]] ; then /bin/sh -e /etc/rc.local 2> /dev/null ; fi\\n\\ncd /srv/notex.git \\\n && CMD=$@ \\\n && /usr/bin/sudo -u www-data -g www-data /bin/bash -c \"source bin/activate \\\n && PYTHON_EGG_CACHE=.python-eggs WEBED_SETTINGS=/srv/notex.git/webed/config/production.py $CMD\"\\n' > webed.run \\\n && chmod +x webed.run\n#   notex: execute `webed.run`\nENTRYPOINT [\"/srv/notex.git/webed.run\"]\n#  # --------------------------------------------------------------------------------------------\n#  # Part (f): `notex:cfg` ######################################################################\n#  # --------------------------------------------------------------------------------------------\nADD nginx.conf /etc/nginx/nginx.conf\nADD webed.conf /etc/nginx/conf.d/webed.conf\nADD robots.txt /etc/nginx/conf.d/robots.txt\nADD lighttpd.conf /etc/lighttpd/lighttpd.conf\nADD gitweb.conf /etc/gitweb.conf\nADD rc.local /etc/rc.local\nADD webed/config/default.py /srv/notex.git/webed/config/default.py\nADD webed/config/production.py /srv/notex.git/webed/config/production.py\nADD webed/config/sphinx.py /srv/notex.git/webed/config/sphinx.py\nADD webed/config/test.py /srv/notex.git/webed/config/test.py\n#  # --------------------------------------------------------------------------------------------\n#  # ############################################################################################\n#  # --------------------------------------------------------------------------------------------\n","originalDockerfileUglifiedHash":"e607dca6f1b2c1b1c4c9e647e5b02fe8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7d4a2893f54a6611739db45ad61623c3297f3c24.dockerfile"}