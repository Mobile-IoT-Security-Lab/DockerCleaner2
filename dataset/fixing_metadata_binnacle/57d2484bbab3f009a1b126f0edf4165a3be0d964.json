{"seed":1278755370,"processedDockerfileHash":"9cdfe1cae1515d4e22da02afd0c9492e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#  Docker Static File Analysis (SFA)\nFROM debian:buster\nMAINTAINER Lionel PRAT <lionel.prat9@gmail.com>\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.64.0-4+deb10u5 hexedit=1.4.2-5 build-essential=12.6 git=1:2.20.1-2+deb10u8 python-pip=18.1-5 libjson-c-dev=0.12.1+ds-2+deb10u1 libxml2-dev=2.9.4+dfsg1-7+deb10u5 libssl-dev=1.1.1n-0+deb10u4 libbz2-dev=1.0.6-9.2~deb10u2 python-dev=2.7.16-1 python-virtualenv=15.1.0+ds-2+deb10u1 xdot=1.0-1 openssl=1.1.1n-0+deb10u4 vim=2:8.1.0875-5+deb10u4 zlib1g-dbg=1:1.2.11.dfsg-1+deb10u2 zlib1g=1:1.2.11.dfsg-1+deb10u2 zlib1g-dev=1:1.2.11.dfsg-1+deb10u2 cron=3.0pl1-134+deb10u1 devscripts=2.19.5+deb10u1 libtesseract-dev=4.0.0-2 tesseract-ocr-all=4.0.0-2 procyon-decompiler=0.5.32-5 python-setuptools=40.8.0-1 libboost-python-dev=1.67.0.1 libboost-all-dev=1.67.0.1 libxslt-dev libtool=2.4.6-9 graphviz-dev automake=1:1.16.1-4 libffi-dev=3.2.1-9 graphviz=2.40.1-6+deb10u1 libfuzzy-dev=2.14.1+git20180629.57fcfff-1 libjpeg-dev=1:1.5.2-2+deb10u1 pkg-config=0.29-6 autoconf=2.69-11 python-setuptools=40.8.0-1 clang=1:7.0-47 python-backports.functools-lru-cache=1.5-3 nano=3.2-3 python-m2crypto=0.31.0-4+deb10u2 python-lzma=0.5.3-4 strace=4.26-0.2 ltrace=0.7.3-6.1 wget=1.20.1-1.1 bsdmainutils=11.1.2+b1 unzip=6.0-23+deb10u3 -y\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash -\nRUN apt-get install --no-install-recommends nodejs=10.24.0~dfsg-1~deb10u3 -y\nRUN rm -rf /var/lib/apt/lists/*\nRUN cd /opt/ \\\n && git clone https://github.com/lprat/static_file_analysis\nRUN cd /opt/static_file_analysis \\\n && git clone https://github.com/vrtadmin/clamav-devel\nRUN cd /opt/static_file_analysis/clamav-devel \\\n && CC=gcc CXX=c++ CFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2\" CPPFLAGS=\"-Wdate-time -D_FORTIFY_SOURCE=2\" CXXFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2\" FCFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -D_FORTIFY_SOURCE=2\" FFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -D_FORTIFY_SOURCE=2\" GCJFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong\" LDFLAGS=\"-Wl,-z,relro -Wl,-z,now\" OBJCFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security\" OBJCXXFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security\" ./configure --enable-static --with-libjson \\\n && make\n#  bug to install hashlib\nRUN rm -f /usr/lib/python2.7/lib-dynload/_hashlib.x86_64-linux-gnu.so\nWORKDIR /opt/\n#  install pygrah & pyv8 for thug (compile with clang because gcc >6 make error segmentation fault\n#  RUN easy_install -U setuptools pygraphviz==1.3.1\nENV CXX=\"clang++\"\nRUN python /usr/lib/python2.7/dist-packages/easy_install.py -U setuptools pygraphviz==1.3.1\n#  ref: https://github.com/ibmdb/node-ibm_db/issues/276\nRUN git clone https://github.com/buffer/pyv8.git\nCOPY v8.patch /tmp\nRUN cd pyv8 \\\n && python setup.py build || cd build/v8_r19632/ \\\n && patch include/v8.h /tmp/v8.patch \\\n && cd ../.. \\\n && python setup.py build\nRUN cd pyv8 \\\n && python setup.py install \\\n && cd .. \\\n && rm -rf pyv8\nCOPY libemu.conf /etc/ld.so.conf.d/libemu.conf\nRUN ldconfig\n#  install hashlib pydot yara flask\nRUN pip install wheel==0.40.0 -U \\\n && pip install setuptools==67.6.1 --upgrade\nRUN pip install pydot==1.4.2 yara-python==4.3.0 hashlib==20081119 flask==2.2.3 gunicorn==20.1.0 soupsieve==2.4 thug==4.9 virustotal-api==1.1.11 -U\n#  RUN cp -R /usr/local/lib/python2.7/dist-packages/etc/thug /etc/thug && mkdir /etc/thug/plugins/ && mkdir /etc/thug/hooks/\n#  install vmonkey\nRUN pip install https://github.com/decalage2/ViperMonkey/archive/master.zip -U\n#  install emulator js\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash -\nRUN curl -0 -L https://npmjs.org/install.sh | sh\nRUN npm install box-js@1.9.22 --global\n#  install foss - https://github.com/fireeye/flare-floss\nRUN wget https://s3.amazonaws.com/build-artifacts.floss.flare.fireeye.com/travis/linux/dist/floss -O /usr/local/bin/foss \\\n && chmod +x /usr/local/bin/foss\n#  install peepdf\nRUN cd /opt \\\n && git clone https://github.com/jesparza/peepdf\n#  install binwalk\nRUN cd /opt \\\n && git clone https://github.com/ReFirmLabs/binwalk \\\n && cd binwalk \\\n && python setup.py install\n#  install frida\nRUN pip install frida-tools==12.1.1 -U\n#  install apktool (https://github.com/iBotPeaches/Apktool) + (https://bitbucket.org/iBotPeaches/apktool/downloads/)\nRUN wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool -O /usr/local/bin/apktool \\\n && wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.4.0.jar -O /usr/local/bin/apktool.jar \\\n && chmod +x /usr/local/bin/apktool*\n#  install mbox (https://github.com/tsgates/mbox)\nRUN cd /opt \\\n && git clone https://github.com/tsgates/mbox \\\n && cd mbox/src \\\n && cp .configsbox.h configsbox.h \\\n && ./configure \\\n && make \\\n && make install\n#  install pyinstaller extractor https://sourceforge.net/projects/pyinstallerextractor/\nRUN wget https://freefr.dl.sourceforge.net/project/pyinstallerextractor/dist/pyinstxtractor.py -O /usr/local/bin/pyinstxtractor.py \\\n && chmod +x /usr/local/bin/pyinstxtractor.py\n#  install unpy2exe - https://github.com/matiasb/unpy2exe & uncompyle6 https://github.com/rocky/python-uncompyle6\nRUN pip install unpy2exe==0.4 uncompyle6==3.9.0 -U\n#  make auto signed cert\nRUN cd /opt/static_file_analysis/api \\\n && openssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days 365 -subj '/CN=localdomain/O=SFA/C=FR'\n#  make install wine & decompiler vb decompiler & decompiler delphi idr https://github.com/crypto2011/IDR/releases\nRUN sed -i 's/ main/ main contrib/g' /etc/apt/sources.list\nRUN sed -i 's/ main contrib/ main contrib non-free/' /etc/apt/sources.list\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends wine=4.0-2 wine32 winetricks unrar -y \\\n && wine wineboot --init\nRUN apt-get install --no-install-recommends default-jre=2:1.11-71 -y\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir /opt/decompiler\nCOPY tools/vb_decompiler_lite.exe /opt/decompiler/\nCOPY tools/Exe2Aut.exe /opt/decompiler/\nRUN wget https://github.com/crypto2011/IDR/releases/download/27_01_2019/Idr.exe -O /opt/decompiler/Idr.exe\n#  #idr error message: cannot initialize diasm\n#  install ffdec - https://github.com/jindrapetrik/jpexs-decompiler/releases -- installed by apt\nRUN wget https://github.com/jindrapetrik/jpexs-decompiler/releases/download/nightly1715/ffdec_11.2.0_nightly1715.deb -O /tmp/ffdec_11.2.0_nightly1715.deb \\\n && dpkg -i /tmp/ffdec_11.2.0_nightly1715.deb \\\n && rm /tmp/ffdec_11.2.0_nightly1715.deb\n#  add script to update git\nCOPY git_update.sh /opt/git_update.sh\nRUN chmod 0755 /opt/git_update.sh\n#   Add crontab file in the cron directory\nCOPY crontab_update /etc/cron.d/git-update-cron\n#   Give execution rights on the cron job\nRUN chmod 0644 /etc/cron.d/git-update-cron\n#  add entrypoint\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod 0755 /docker-entrypoint.sh\nRUN useradd -ms /bin/bash user \\\n && chown -R user:user /opt/static_file_analysis/\nWORKDIR /opt/static_file_analysis/\nUSER user\nRUN wine wineboot --init\nEXPOSE 8000/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#  CMD [\"git pull;/bin/bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# Docker Static File Analysis (SFA)\nFROM debian:buster\nMAINTAINER Lionel PRAT <lionel.prat9@gmail.com>\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl hexedit build-essential git python-pip libjson-c-dev libxml2-dev libssl-dev libbz2-dev python-dev python-virtualenv xdot openssl vim zlib1g-dbg zlib1g zlib1g-dev cron devscripts libtesseract-dev tesseract-ocr-all procyon-decompiler python-setuptools libboost-python-dev libboost-all-dev libxslt-dev libtool graphviz-dev automake libffi-dev graphviz libfuzzy-dev libjpeg-dev pkg-config autoconf python-setuptools clang python-backports.functools-lru-cache nano python-m2crypto python-lzma strace ltrace wget bsdmainutils unzip -y\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash -\nRUN apt-get install --no-install-recommends nodejs -y\nRUN rm -rf /var/lib/apt/lists/*\nRUN cd /opt/ \\\n && git clone https://github.com/lprat/static_file_analysis\nRUN cd /opt/static_file_analysis \\\n && git clone https://github.com/vrtadmin/clamav-devel\nRUN cd /opt/static_file_analysis/clamav-devel \\\n && CC=gcc CXX=c++ CFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2\" CPPFLAGS=\"-Wdate-time -D_FORTIFY_SOURCE=2\" CXXFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2\" FCFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -D_FORTIFY_SOURCE=2\" FFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -D_FORTIFY_SOURCE=2\" GCJFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong\" LDFLAGS=\"-Wl,-z,relro -Wl,-z,now\" OBJCFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security\" OBJCXXFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security\" ./configure --enable-static --with-libjson \\\n && make\n# bug to install hashlib\nRUN rm -f /usr/lib/python2.7/lib-dynload/_hashlib.x86_64-linux-gnu.so\nWORKDIR /opt/\n# install pygrah & pyv8 for thug (compile with clang because gcc >6 make error segmentation fault\n# RUN easy_install -U setuptools pygraphviz==1.3.1\nENV CXX=\"clang++\"\nRUN python /usr/lib/python2.7/dist-packages/easy_install.py -U setuptools pygraphviz==1.3.1\n# ref: https://github.com/ibmdb/node-ibm_db/issues/276\nRUN git clone https://github.com/buffer/pyv8.git\nCOPY v8.patch /tmp\nRUN cd pyv8 \\\n && python setup.py build || cd build/v8_r19632/ \\\n && patch include/v8.h /tmp/v8.patch \\\n && cd ../.. \\\n && python setup.py build\nRUN cd pyv8 \\\n && python setup.py install \\\n && cd .. \\\n && rm -rf pyv8\nCOPY libemu.conf /etc/ld.so.conf.d/libemu.conf\nRUN ldconfig\n# install hashlib pydot yara flask\nRUN pip install wheel -U \\\n && pip install setuptools --upgrade\nRUN pip install pydot yara-python hashlib flask gunicorn soupsieve thug virustotal-api -U\n# RUN cp -R /usr/local/lib/python2.7/dist-packages/etc/thug /etc/thug && mkdir /etc/thug/plugins/ && mkdir /etc/thug/hooks/\n# install vmonkey\nRUN pip install https://github.com/decalage2/ViperMonkey/archive/master.zip -U\n# install emulator js\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash -\nRUN curl -0 -L https://npmjs.org/install.sh | sh\nRUN npm install box-js --global\n# install foss - https://github.com/fireeye/flare-floss\nRUN wget https://s3.amazonaws.com/build-artifacts.floss.flare.fireeye.com/travis/linux/dist/floss -O /usr/local/bin/foss \\\n && chmod +x /usr/local/bin/foss\n# install peepdf\nRUN cd /opt \\\n && git clone https://github.com/jesparza/peepdf\n# install binwalk\nRUN cd /opt \\\n && git clone https://github.com/ReFirmLabs/binwalk \\\n && cd binwalk \\\n && python setup.py install\n# install frida\nRUN pip install frida-tools -U\n# install apktool (https://github.com/iBotPeaches/Apktool) + (https://bitbucket.org/iBotPeaches/apktool/downloads/)\nRUN wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool -O /usr/local/bin/apktool \\\n && wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.4.0.jar -O /usr/local/bin/apktool.jar \\\n && chmod +x /usr/local/bin/apktool*\n# install mbox (https://github.com/tsgates/mbox)\nRUN cd /opt \\\n && git clone https://github.com/tsgates/mbox \\\n && cd mbox/src \\\n && cp .configsbox.h configsbox.h \\\n && ./configure \\\n && make \\\n && make install\n# install pyinstaller extractor https://sourceforge.net/projects/pyinstallerextractor/\nRUN wget https://freefr.dl.sourceforge.net/project/pyinstallerextractor/dist/pyinstxtractor.py -O /usr/local/bin/pyinstxtractor.py \\\n && chmod +x /usr/local/bin/pyinstxtractor.py\n# install unpy2exe - https://github.com/matiasb/unpy2exe & uncompyle6 https://github.com/rocky/python-uncompyle6\nRUN pip install unpy2exe uncompyle6 -U\n# make auto signed cert\nRUN cd /opt/static_file_analysis/api \\\n && openssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days 365 -subj '/CN=localdomain/O=SFA/C=FR'\n# make install wine & decompiler vb decompiler & decompiler delphi idr https://github.com/crypto2011/IDR/releases\nRUN sed -i 's/ main/ main contrib/g' /etc/apt/sources.list\nRUN sed -i 's/ main contrib/ main contrib non-free/' /etc/apt/sources.list\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends wine wine32 winetricks unrar -y \\\n && wine wineboot --init\nRUN apt-get install --no-install-recommends default-jre -y\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir /opt/decompiler\nCOPY tools/vb_decompiler_lite.exe /opt/decompiler/\nCOPY tools/Exe2Aut.exe /opt/decompiler/\nRUN wget https://github.com/crypto2011/IDR/releases/download/27_01_2019/Idr.exe -O /opt/decompiler/Idr.exe\n# #idr error message: cannot initialize diasm\n# install ffdec - https://github.com/jindrapetrik/jpexs-decompiler/releases -- installed by apt\nRUN wget https://github.com/jindrapetrik/jpexs-decompiler/releases/download/nightly1715/ffdec_11.2.0_nightly1715.deb -O /tmp/ffdec_11.2.0_nightly1715.deb \\\n && dpkg -i /tmp/ffdec_11.2.0_nightly1715.deb \\\n && rm /tmp/ffdec_11.2.0_nightly1715.deb\n# add script to update git\nADD git_update.sh /opt/git_update.sh\nRUN chmod 0755 /opt/git_update.sh\n#  Add crontab file in the cron directory\nADD crontab_update /etc/cron.d/git-update-cron\n#  Give execution rights on the cron job\nRUN chmod 0644 /etc/cron.d/git-update-cron\n# add entrypoint\nADD docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod 0755 /docker-entrypoint.sh\nRUN useradd -ms /bin/bash user \\\n && chown -R user:user /opt/static_file_analysis/\nWORKDIR /opt/static_file_analysis/\nUSER user\nRUN wine wineboot --init\nEXPOSE 8000/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n# CMD [\"git pull;/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"fac46f2115c96574a4be0eb34c38422a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  Docker Static File Analysis (SFA)\nFROM debian:buster\nMAINTAINER Lionel PRAT <lionel.prat9@gmail.com>\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl hexedit build-essential git python-pip libjson-c-dev libxml2-dev libssl-dev libbz2-dev python-dev python-virtualenv xdot openssl vim zlib1g-dbg zlib1g zlib1g-dev cron devscripts libtesseract-dev tesseract-ocr-all procyon-decompiler python-setuptools libboost-python-dev libboost-all-dev libxslt-dev libtool graphviz-dev automake libffi-dev graphviz libfuzzy-dev libjpeg-dev pkg-config autoconf python-setuptools clang python-backports.functools-lru-cache nano python-m2crypto python-lzma strace ltrace wget bsdmainutils unzip -y\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash -\nRUN apt-get install --no-install-recommends nodejs -y\nRUN rm -rf /var/lib/apt/lists/*\nRUN cd /opt/ \\\n && git clone https://github.com/lprat/static_file_analysis\nRUN cd /opt/static_file_analysis \\\n && git clone https://github.com/vrtadmin/clamav-devel\nRUN cd /opt/static_file_analysis/clamav-devel \\\n && CC=gcc CXX=c++ CFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2\" CPPFLAGS=\"-Wdate-time -D_FORTIFY_SOURCE=2\" CXXFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2\" FCFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -D_FORTIFY_SOURCE=2\" FFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -D_FORTIFY_SOURCE=2\" GCJFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong\" LDFLAGS=\"-Wl,-z,relro -Wl,-z,now\" OBJCFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security\" OBJCXXFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security\" ./configure --enable-static --with-libjson \\\n && make\n#  bug to install hashlib\nRUN rm -f /usr/lib/python2.7/lib-dynload/_hashlib.x86_64-linux-gnu.so\nWORKDIR /opt/\n#  install pygrah & pyv8 for thug (compile with clang because gcc >6 make error segmentation fault\n#  RUN easy_install -U setuptools pygraphviz==1.3.1\nENV CXX=\"clang++\"\nRUN python /usr/lib/python2.7/dist-packages/easy_install.py -U setuptools pygraphviz==1.3.1\n#  ref: https://github.com/ibmdb/node-ibm_db/issues/276\nRUN git clone https://github.com/buffer/pyv8.git\nCOPY v8.patch /tmp\nRUN cd pyv8 \\\n && python setup.py build || cd build/v8_r19632/ \\\n && patch include/v8.h /tmp/v8.patch \\\n && cd ../.. \\\n && python setup.py build\nRUN cd pyv8 \\\n && python setup.py install \\\n && cd .. \\\n && rm -rf pyv8\nCOPY libemu.conf /etc/ld.so.conf.d/libemu.conf\nRUN ldconfig\n#  install hashlib pydot yara flask\nRUN pip install wheel -U \\\n && pip install setuptools --upgrade\nRUN pip install pydot yara-python hashlib flask gunicorn soupsieve thug virustotal-api -U\n#  RUN cp -R /usr/local/lib/python2.7/dist-packages/etc/thug /etc/thug && mkdir /etc/thug/plugins/ && mkdir /etc/thug/hooks/\n#  install vmonkey\nRUN pip install https://github.com/decalage2/ViperMonkey/archive/master.zip -U\n#  install emulator js\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash -\nRUN curl -0 -L https://npmjs.org/install.sh | sh\nRUN npm install box-js --global\n#  install foss - https://github.com/fireeye/flare-floss\nRUN wget https://s3.amazonaws.com/build-artifacts.floss.flare.fireeye.com/travis/linux/dist/floss -O /usr/local/bin/foss \\\n && chmod +x /usr/local/bin/foss\n#  install peepdf\nRUN cd /opt \\\n && git clone https://github.com/jesparza/peepdf\n#  install binwalk\nRUN cd /opt \\\n && git clone https://github.com/ReFirmLabs/binwalk \\\n && cd binwalk \\\n && python setup.py install\n#  install frida\nRUN pip install frida-tools -U\n#  install apktool (https://github.com/iBotPeaches/Apktool) + (https://bitbucket.org/iBotPeaches/apktool/downloads/)\nRUN wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool -O /usr/local/bin/apktool \\\n && wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.4.0.jar -O /usr/local/bin/apktool.jar \\\n && chmod +x /usr/local/bin/apktool*\n#  install mbox (https://github.com/tsgates/mbox)\nRUN cd /opt \\\n && git clone https://github.com/tsgates/mbox \\\n && cd mbox/src \\\n && cp .configsbox.h configsbox.h \\\n && ./configure \\\n && make \\\n && make install\n#  install pyinstaller extractor https://sourceforge.net/projects/pyinstallerextractor/\nRUN wget https://freefr.dl.sourceforge.net/project/pyinstallerextractor/dist/pyinstxtractor.py -O /usr/local/bin/pyinstxtractor.py \\\n && chmod +x /usr/local/bin/pyinstxtractor.py\n#  install unpy2exe - https://github.com/matiasb/unpy2exe & uncompyle6 https://github.com/rocky/python-uncompyle6\nRUN pip install unpy2exe uncompyle6 -U\n#  make auto signed cert\nRUN cd /opt/static_file_analysis/api \\\n && openssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days 365 -subj '/CN=localdomain/O=SFA/C=FR'\n#  make install wine & decompiler vb decompiler & decompiler delphi idr https://github.com/crypto2011/IDR/releases\nRUN sed -i 's/ main/ main contrib/g' /etc/apt/sources.list\nRUN sed -i 's/ main contrib/ main contrib non-free/' /etc/apt/sources.list\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends wine wine32 winetricks unrar -y \\\n && wine wineboot --init\nRUN apt-get install --no-install-recommends default-jre -y\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir /opt/decompiler\nCOPY tools/vb_decompiler_lite.exe /opt/decompiler/\nCOPY tools/Exe2Aut.exe /opt/decompiler/\nRUN wget https://github.com/crypto2011/IDR/releases/download/27_01_2019/Idr.exe -O /opt/decompiler/Idr.exe\n#  #idr error message: cannot initialize diasm\n#  install ffdec - https://github.com/jindrapetrik/jpexs-decompiler/releases -- installed by apt\nRUN wget https://github.com/jindrapetrik/jpexs-decompiler/releases/download/nightly1715/ffdec_11.2.0_nightly1715.deb -O /tmp/ffdec_11.2.0_nightly1715.deb \\\n && dpkg -i /tmp/ffdec_11.2.0_nightly1715.deb \\\n && rm /tmp/ffdec_11.2.0_nightly1715.deb\n#  add script to update git\nADD git_update.sh /opt/git_update.sh\nRUN chmod 0755 /opt/git_update.sh\n#   Add crontab file in the cron directory\nADD crontab_update /etc/cron.d/git-update-cron\n#   Give execution rights on the cron job\nRUN chmod 0644 /etc/cron.d/git-update-cron\n#  add entrypoint\nADD docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod 0755 /docker-entrypoint.sh\nRUN useradd -ms /bin/bash user \\\n && chown -R user:user /opt/static_file_analysis/\nWORKDIR /opt/static_file_analysis/\nUSER user\nRUN wine wineboot --init\nEXPOSE 8000/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#  CMD [\"git pull;/bin/bash\"]\n","originalDockerfileUglifiedHash":"72386e8b971cb918efdb522958981d2f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/57d2484bbab3f009a1b126f0edf4165a3be0d964.dockerfile"}