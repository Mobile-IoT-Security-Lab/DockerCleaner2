{"seed":3284715292,"processedDockerfileHash":"6c0ad316f3fd60f81710362977605241","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   To build, cd to this directory, then:\n#     docker build -t ss-shiny-devel .\n#\n#   If you are not on the master branch and would like to build with\n#   shiny-examples from your branch, run:\n#    docker build --build-arg SHINY_EXAMPLES_BRANCH=$(git symbolic-ref --short -q HEAD) -t ss-shiny-devel .\n#\n#   To run with the built-in shiny-examples:\n#     docker run --rm -p 3838:3838 --name ss ss-shiny-devel\nFROM ubuntu:18.04\nMAINTAINER Winston Chang \"winston@rstudio.com\"\n#   =====================================================================\n#   R\n#   =====================================================================\n#   Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTEND=noninteractive\n#   Need this to add R repo\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.24.32.20 -y\n#   Add R apt repository\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nRUN add-apt-repository \"deb http://cran.r-project.org/bin/linux/ubuntu $( lsb_release -cs ;)-cran35/\"\n#   Install basic stuff and R\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo=1.8.21p2-3ubuntu1.5 locales=2.27-3ubuntu1.6 git=1:2.17.1-1ubuntu0.17 vim-tiny=2:8.0.1453-1ubuntu1.11 less=487-0.1 wget=1.19.4-1ubuntu2.2 r-base=3.4.4-1ubuntu1 r-base-dev=3.4.4-1ubuntu1 r-recommended=3.4.4-1ubuntu1 fonts-texgyre=20160520-1 texinfo=6.5.0.dfsg.1-2 locales=2.27-3ubuntu1.6 libudunits2-dev=2.2.26-1 libgdal-dev=2.2.3+dfsg-2 libgeos-dev=3.6.2-1build2 libproj-dev=4.9.3-2 -y\nRUN locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nRUN echo 'options(\\n repos = c(CRAN = \"https://cloud.r-project.org/\"),\\n download.file.method = \"libcurl\",\\n Ncpus = parallel::detectCores(logical=FALSE)\\n)' >> /etc/R/Rprofile.site\n#   Install TinyTeX (subset of TeXLive)\n#   From FAQ 5 and 6 here: https://yihui.name/tinytex/faq/\n#   Also install ae, parskip, and listings packages to build R vignettes\nRUN wget -qO- \"https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh\" | sh -s - --admin --no-path \\\n && ~/.TinyTeX/bin/*/tlmgr path add \\\n && tlmgr install metafont mfware inconsolata tex ae parskip listings \\\n && tlmgr path add \\\n && Rscript -e \"source('https://install-github.me/yihui/tinytex'); tinytex::r_texmf()\"\n#   This is necessary for non-root users to follow symlinks to /root/.TinyTeX\nRUN chmod 755 /root\n#   Create docker user with empty password (will have uid and gid 1000)\nRUN useradd --create-home --shell /bin/bash docker \\\n && passwd docker -d \\\n && adduser docker sudo\n#   =====================================================================\n#   Shiny Server\n#   =====================================================================\nRUN apt-get install --no-install-recommends gdebi-core=0.9.5.7+nmu2 pandoc=1.19.2.4~dfsg-1build4 pandoc-citeproc=0.10.5.1-1build4 libcurl4-gnutls-dev=7.58.0-2ubuntu3.24 libcairo2-dev=1.15.10-2ubuntu0.1 libxt-dev=1:1.1.5-1 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 -y\n#   Download and install shiny server\nRUN wget --no-verbose https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-14.04/x86_64/VERSION -O \"version.txt\" \\\n && VERSION=$( cat version.txt ;) \\\n && wget --no-verbose \"https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-14.04/x86_64/shiny-server-$VERSION-amd64.deb\" -O ss-latest.deb \\\n && gdebi -n ss-latest.deb \\\n && rm -f version.txt ss-latest.deb \\\n && R -e \"install.packages(c('shiny', 'rmarkdown'))\" \\\n && cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/\nEXPOSE 3838/tcp\nCOPY shiny-server.sh /usr/bin/shiny-server.sh\nCMD [\"/usr/bin/shiny-server.sh\"]\n#   =====================================================================\n#   Shiny Examples\n#   =====================================================================\nRUN apt-get update \\\n && apt-get install --no-install-recommends libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 -y\nRUN R -e \"install.packages(c('devtools', 'packrat'))\"\n#   For deploying apps from a container\nRUN R -e \"devtools::install_github('rstudio/rsconnect')\"\n#   Install shiny-examples, and fix permissions for apps that require write\n#   access.\nARG SHINY_EXAMPLES_BRANCH=master\nENV SHINY_EXAMPLES_BRANCH=\"$SHINY_EXAMPLES_BRANCH\"\nRUN cd /srv \\\n && mv shiny-server shiny-server-orig \\\n && wget -nv https://github.com/rstudio/shiny-examples/archive/${SHINY_EXAMPLES_BRANCH}.zip \\\n && unzip -x ${SHINY_EXAMPLES_BRANCH}.zip \\\n && mv shiny-examples-${SHINY_EXAMPLES_BRANCH} shiny-server \\\n && rm ${SHINY_EXAMPLES_BRANCH}.zip \\\n && cd shiny-server \\\n && chmod 777 022-unicode-chinese 055-observer-demo 059-reactive-poll-and-file-reader\n#   Packages that need to be installed from GitHub\nRUN R -e 'source(\"/srv/shiny-server/install_deps.R\", echo = TRUE)'\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  To build, cd to this directory, then:\n#    docker build -t ss-shiny-devel .\n#\n#  If you are not on the master branch and would like to build with\n#  shiny-examples from your branch, run:\n#   docker build --build-arg SHINY_EXAMPLES_BRANCH=$(git symbolic-ref --short -q HEAD) -t ss-shiny-devel .\n#\n#  To run with the built-in shiny-examples:\n#    docker run --rm -p 3838:3838 --name ss ss-shiny-devel\nFROM ubuntu:18.04\nMAINTAINER Winston Chang \"winston@rstudio.com\"\n#  =====================================================================\n#  R\n#  =====================================================================\n#  Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTEND=noninteractive\n#  Need this to add R repo\nRUN apt-get update \\\n && apt-get install software-properties-common -y\n#  Add R apt repository\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nRUN add-apt-repository \"deb http://cran.r-project.org/bin/linux/ubuntu $( lsb_release -cs ;)-cran35/\"\n#  Install basic stuff and R\nRUN apt-get update \\\n && apt-get install sudo locales git vim-tiny less wget r-base r-base-dev r-recommended fonts-texgyre texinfo locales libudunits2-dev libgdal-dev libgeos-dev libproj-dev -y\nRUN locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nRUN echo 'options(\\n repos = c(CRAN = \"https://cloud.r-project.org/\"),\\n download.file.method = \"libcurl\",\\n Ncpus = parallel::detectCores(logical=FALSE)\\n)' >> /etc/R/Rprofile.site\n#  Install TinyTeX (subset of TeXLive)\n#  From FAQ 5 and 6 here: https://yihui.name/tinytex/faq/\n#  Also install ae, parskip, and listings packages to build R vignettes\nRUN wget -qO- \"https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh\" | sh -s - --admin --no-path \\\n && ~/.TinyTeX/bin/*/tlmgr path add \\\n && tlmgr install metafont mfware inconsolata tex ae parskip listings \\\n && tlmgr path add \\\n && Rscript -e \"source('https://install-github.me/yihui/tinytex'); tinytex::r_texmf()\"\n#  This is necessary for non-root users to follow symlinks to /root/.TinyTeX\nRUN chmod 755 /root\n#  Create docker user with empty password (will have uid and gid 1000)\nRUN useradd --create-home --shell /bin/bash docker \\\n && passwd docker -d \\\n && adduser docker sudo\n#  =====================================================================\n#  Shiny Server\n#  =====================================================================\nRUN apt-get install gdebi-core pandoc pandoc-citeproc libcurl4-gnutls-dev libcairo2-dev libxt-dev libssl-dev -y\n#  Download and install shiny server\nRUN wget --no-verbose https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-14.04/x86_64/VERSION -O \"version.txt\" \\\n && VERSION=$( cat version.txt ;) \\\n && wget --no-verbose \"https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-14.04/x86_64/shiny-server-$VERSION-amd64.deb\" -O ss-latest.deb \\\n && gdebi -n ss-latest.deb \\\n && rm -f version.txt ss-latest.deb \\\n && R -e \"install.packages(c('shiny', 'rmarkdown'))\" \\\n && cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/\nEXPOSE 3838/tcp\nCOPY shiny-server.sh /usr/bin/shiny-server.sh\nCMD [\"/usr/bin/shiny-server.sh\"]\n#  =====================================================================\n#  Shiny Examples\n#  =====================================================================\nRUN apt-get update \\\n && apt-get install libxml2-dev -y\nRUN R -e \"install.packages(c('devtools', 'packrat'))\"\n#  For deploying apps from a container\nRUN R -e \"devtools::install_github('rstudio/rsconnect')\"\n#  Install shiny-examples, and fix permissions for apps that require write\n#  access.\nARG SHINY_EXAMPLES_BRANCH=master\nENV SHINY_EXAMPLES_BRANCH=\"$SHINY_EXAMPLES_BRANCH\"\nRUN cd /srv \\\n && mv shiny-server shiny-server-orig \\\n && wget -nv https://github.com/rstudio/shiny-examples/archive/${SHINY_EXAMPLES_BRANCH}.zip \\\n && unzip -x ${SHINY_EXAMPLES_BRANCH}.zip \\\n && mv shiny-examples-${SHINY_EXAMPLES_BRANCH} shiny-server \\\n && rm ${SHINY_EXAMPLES_BRANCH}.zip \\\n && cd shiny-server \\\n && chmod 777 022-unicode-chinese 055-observer-demo 059-reactive-poll-and-file-reader\n#  Packages that need to be installed from GitHub\nRUN R -e 'source(\"/srv/shiny-server/install_deps.R\", echo = TRUE)'\n","injectedSmells":[],"originalDockerfileHash":"82e4a4c9a0a890540ca950b0c3c8c71c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   To build, cd to this directory, then:\n#     docker build -t ss-shiny-devel .\n#\n#   If you are not on the master branch and would like to build with\n#   shiny-examples from your branch, run:\n#    docker build --build-arg SHINY_EXAMPLES_BRANCH=$(git symbolic-ref --short -q HEAD) -t ss-shiny-devel .\n#\n#   To run with the built-in shiny-examples:\n#     docker run --rm -p 3838:3838 --name ss ss-shiny-devel\nFROM ubuntu:18.04\nMAINTAINER Winston Chang \"winston@rstudio.com\"\n#   =====================================================================\n#   R\n#   =====================================================================\n#   Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTEND=noninteractive\n#   Need this to add R repo\nRUN apt-get update \\\n && apt-get install software-properties-common -y\n#   Add R apt repository\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nRUN add-apt-repository \"deb http://cran.r-project.org/bin/linux/ubuntu $( lsb_release -cs ;)-cran35/\"\n#   Install basic stuff and R\nRUN apt-get update \\\n && apt-get install sudo locales git vim-tiny less wget r-base r-base-dev r-recommended fonts-texgyre texinfo locales libudunits2-dev libgdal-dev libgeos-dev libproj-dev -y\nRUN locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nRUN echo 'options(\\n repos = c(CRAN = \"https://cloud.r-project.org/\"),\\n download.file.method = \"libcurl\",\\n Ncpus = parallel::detectCores(logical=FALSE)\\n)' >> /etc/R/Rprofile.site\n#   Install TinyTeX (subset of TeXLive)\n#   From FAQ 5 and 6 here: https://yihui.name/tinytex/faq/\n#   Also install ae, parskip, and listings packages to build R vignettes\nRUN wget -qO- \"https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh\" | sh -s - --admin --no-path \\\n && ~/.TinyTeX/bin/*/tlmgr path add \\\n && tlmgr install metafont mfware inconsolata tex ae parskip listings \\\n && tlmgr path add \\\n && Rscript -e \"source('https://install-github.me/yihui/tinytex'); tinytex::r_texmf()\"\n#   This is necessary for non-root users to follow symlinks to /root/.TinyTeX\nRUN chmod 755 /root\n#   Create docker user with empty password (will have uid and gid 1000)\nRUN useradd --create-home --shell /bin/bash docker \\\n && passwd docker -d \\\n && adduser docker sudo\n#   =====================================================================\n#   Shiny Server\n#   =====================================================================\nRUN apt-get install gdebi-core pandoc pandoc-citeproc libcurl4-gnutls-dev libcairo2-dev libxt-dev libssl-dev -y\n#   Download and install shiny server\nRUN wget --no-verbose https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-14.04/x86_64/VERSION -O \"version.txt\" \\\n && VERSION=$( cat version.txt ;) \\\n && wget --no-verbose \"https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-14.04/x86_64/shiny-server-$VERSION-amd64.deb\" -O ss-latest.deb \\\n && gdebi -n ss-latest.deb \\\n && rm -f version.txt ss-latest.deb \\\n && R -e \"install.packages(c('shiny', 'rmarkdown'))\" \\\n && cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/\nEXPOSE 3838/tcp\nCOPY shiny-server.sh /usr/bin/shiny-server.sh\nCMD [\"/usr/bin/shiny-server.sh\"]\n#   =====================================================================\n#   Shiny Examples\n#   =====================================================================\nRUN apt-get update \\\n && apt-get install libxml2-dev -y\nRUN R -e \"install.packages(c('devtools', 'packrat'))\"\n#   For deploying apps from a container\nRUN R -e \"devtools::install_github('rstudio/rsconnect')\"\n#   Install shiny-examples, and fix permissions for apps that require write\n#   access.\nARG SHINY_EXAMPLES_BRANCH=master\nENV SHINY_EXAMPLES_BRANCH=\"$SHINY_EXAMPLES_BRANCH\"\nRUN cd /srv \\\n && mv shiny-server shiny-server-orig \\\n && wget -nv https://github.com/rstudio/shiny-examples/archive/${SHINY_EXAMPLES_BRANCH}.zip \\\n && unzip -x ${SHINY_EXAMPLES_BRANCH}.zip \\\n && mv shiny-examples-${SHINY_EXAMPLES_BRANCH} shiny-server \\\n && rm ${SHINY_EXAMPLES_BRANCH}.zip \\\n && cd shiny-server \\\n && chmod 777 022-unicode-chinese 055-observer-demo 059-reactive-poll-and-file-reader\n#   Packages that need to be installed from GitHub\nRUN R -e 'source(\"/srv/shiny-server/install_deps.R\", echo = TRUE)'\n","originalDockerfileUglifiedHash":"fd6fe09548721cf9daa3aaac708bdc14","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e523e5f841a8d40b23e2f84b3a541923ff4f4044.dockerfile"}