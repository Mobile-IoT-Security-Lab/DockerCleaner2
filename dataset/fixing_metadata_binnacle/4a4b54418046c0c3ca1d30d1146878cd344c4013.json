{"seed":2465964009,"processedDockerfileHash":"03f56a1af12603c2d1d4ea1590b15199","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nARG NDK_VER=r15c\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ANDROID_NDK_HOME=\"/opt/android-ndk\" \\\n    ANDROID_HOME=\"/opt/android-sdk-linux\" \\\n    ANDROID_NDK_VERSION=\"${NDK_VER}\" \\\n    CMAKE_VERSION=\"3.14.0\" \\\n    DOCKER_VERSION=\"18.03.1\" \\\n    DOCKER_COMPOSE_VERSION=\"1.21.2\"\n#  ##############################################################################\n#   Update apt\n#  ##############################################################################\nRUN :\n#  ##############################################################################\n#   Basics\n#  ##############################################################################\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y locales \\\n && locale-gen en_US.UTF-8\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install git curl rsync sudo expect python python-dev python-pip build-essential zip unzip tree clang awscli software-properties-common\n#  ##############################################################################\n#   Docker & Docker Compose\n#  ##############################################################################\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https ca-certificates\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nRUN set -ex \\\n && sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ;) stable\" \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-cache policy docker-ce \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce=${DOCKER_VERSION}~ce-0~ubuntu\nRUN set -ex \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s `-`uname -m ` -o /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/docker-compose \\\n && docker-compose --version\n#  ##############################################################################\n#   Dependencies to execute Android builds\n#  ##############################################################################\nRUN dpkg --add-architecture i386\nRUN :\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-8-jdk libc6:i386 libstdc++6:i386 libgcc1:i386 libncurses5:i386 libz1:i386\n#  ##############################################################################\n#   Android SDK Manager\n#  ##############################################################################\nRUN cd /opt \\\n && curl -L https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -o android-sdk-tools.zip \\\n && unzip -q android-sdk-tools.zip -d ${ANDROID_HOME} \\\n && rm android-sdk-tools.zip\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\n#  ##############################################################################\n#   Install SDK packages\n#  ##############################################################################\n#   Accept licenses before installing components\nRUN yes | sdkmanager --licenses\n#   Platform tools\nRUN sdkmanager \"tools\" \"platform-tools\"\n#   SDKs\n#   Please keep these in descending order!\n#   The `yes` is for accepting all non-standard tool licenses.\n#   You can get a list of available packages by booting the container and running\n#   sdkmanager --list\n#   Please keep all sections in descending order!\nRUN yes | sdkmanager \"platforms;android-21\" \"build-tools;28.0.3\" \"extras;android;m2repository\" \"extras;google;m2repository\" \"cmake;3.6.4111459\"\n#  ##############################################################################\n#   Gradle\n#  ##############################################################################\nRUN (apt-get update ;apt-get install --no-install-recommends gradle=2.10-1 -y ) \\\n && gradle -v\n#  ##############################################################################\n#   Maven\n#  ##############################################################################\nRUN apt-get purge maven maven2 \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends maven=3.3.9-3 -y ) \\\n && mvn --version\n#  ##############################################################################\n#   Android NDK\n#  ##############################################################################\nRUN set -ex \\\n && mkdir -p /tmp/android-ndk-tmp \\\n && cd /tmp/android-ndk-tmp \\\n && curl -LO https://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip \\\n && unzip -q android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip \\\n && mv ./android-ndk-${ANDROID_NDK_VERSION} ${ANDROID_NDK_HOME}\n#   add to PATH\nENV PATH=\"${PATH}:${ANDROID_NDK_HOME}\"\n#  ##############################################################################\n#   CMake\n#  ##############################################################################\nRUN set -ex \\\n && mkdir -p /tmp/cmake-tmp \\\n && cd /tmp/cmake-tmp \\\n && curl -LO https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz \\\n && tar xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz --strip-components 1 -C /usr \\\n && cmake --version\n#  ##############################################################################\n#   Cleanup\n#  ##############################################################################\nRUN set -ex \\\n && cd \\\n && : \\\n && apt-get clean \\\n && rm -rf /tmp/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nARG NDK_VER=r15c\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ANDROID_NDK_HOME=\"/opt/android-ndk\" \\\n    ANDROID_HOME=\"/opt/android-sdk-linux\" \\\n    ANDROID_NDK_VERSION=\"${NDK_VER}\" \\\n    CMAKE_VERSION=\"3.14.0\" \\\n    DOCKER_VERSION=\"18.03.1\" \\\n    DOCKER_COMPOSE_VERSION=\"1.21.2\"\n# ##############################################################################\n#  Update apt\n# ##############################################################################\nRUN apt-get update -qq\n# ##############################################################################\n#  Basics\n# ##############################################################################\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y locales \\\n && locale-gen en_US.UTF-8\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install git curl rsync sudo expect python python-dev python-pip build-essential zip unzip tree clang awscli software-properties-common\n# ##############################################################################\n#  Docker & Docker Compose\n# ##############################################################################\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https ca-certificates\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nRUN set -ex \\\n && sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ;) stable\" \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-cache policy docker-ce \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce=${DOCKER_VERSION}~ce-0~ubuntu\nRUN set -ex \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s `-`uname -m ` -o /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/docker-compose \\\n && docker-compose --version\n# ##############################################################################\n#  Dependencies to execute Android builds\n# ##############################################################################\nRUN dpkg --add-architecture i386\nRUN apt-get update -qq\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-8-jdk libc6:i386 libstdc++6:i386 libgcc1:i386 libncurses5:i386 libz1:i386\n# ##############################################################################\n#  Android SDK Manager\n# ##############################################################################\nRUN cd /opt \\\n && curl -L https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -o android-sdk-tools.zip \\\n && unzip -q android-sdk-tools.zip -d ${ANDROID_HOME} \\\n && rm android-sdk-tools.zip\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\n# ##############################################################################\n#  Install SDK packages\n# ##############################################################################\n#  Accept licenses before installing components\nRUN yes | sdkmanager --licenses\n#  Platform tools\nRUN sdkmanager \"tools\" \"platform-tools\"\n#  SDKs\n#  Please keep these in descending order!\n#  The `yes` is for accepting all non-standard tool licenses.\n#  You can get a list of available packages by booting the container and running\n#  sdkmanager --list\n#  Please keep all sections in descending order!\nRUN yes | sdkmanager \"platforms;android-21\" \"build-tools;28.0.3\" \"extras;android;m2repository\" \"extras;google;m2repository\" \"cmake;3.6.4111459\"\n# ##############################################################################\n#  Gradle\n# ##############################################################################\nRUN apt-get install gradle -y \\\n && gradle -v\n# ##############################################################################\n#  Maven\n# ##############################################################################\nRUN apt-get purge maven maven2 \\\n && apt-get update \\\n && apt-get install maven -y \\\n && mvn --version\n# ##############################################################################\n#  Android NDK\n# ##############################################################################\nRUN set -ex \\\n && mkdir -p /tmp/android-ndk-tmp \\\n && cd /tmp/android-ndk-tmp \\\n && curl -LO https://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip \\\n && unzip -q android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip \\\n && mv ./android-ndk-${ANDROID_NDK_VERSION} ${ANDROID_NDK_HOME}\n#  add to PATH\nENV PATH=\"${PATH}:${ANDROID_NDK_HOME}\"\n# ##############################################################################\n#  CMake\n# ##############################################################################\nRUN set -ex \\\n && mkdir -p /tmp/cmake-tmp \\\n && cd /tmp/cmake-tmp \\\n && curl -LO https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz \\\n && tar xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz --strip-components 1 -C /usr \\\n && cmake --version\n# ##############################################################################\n#  Cleanup\n# ##############################################################################\nRUN set -ex \\\n && cd \\\n && apt-get update -qq \\\n && apt-get clean \\\n && rm -rf /tmp/*\n","injectedSmells":[],"originalDockerfileHash":"20771f943c19a7077c0f3ffe92fb9fe9","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nARG NDK_VER=r15c\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ANDROID_NDK_HOME=\"/opt/android-ndk\" \\\n    ANDROID_HOME=\"/opt/android-sdk-linux\" \\\n    ANDROID_NDK_VERSION=\"${NDK_VER}\" \\\n    CMAKE_VERSION=\"3.14.0\" \\\n    DOCKER_VERSION=\"18.03.1\" \\\n    DOCKER_COMPOSE_VERSION=\"1.21.2\"\n#  ##############################################################################\n#   Update apt\n#  ##############################################################################\nRUN apt-get update -qq\n#  ##############################################################################\n#   Basics\n#  ##############################################################################\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y locales \\\n && locale-gen en_US.UTF-8\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install git curl rsync sudo expect python python-dev python-pip build-essential zip unzip tree clang awscli software-properties-common\n#  ##############################################################################\n#   Docker & Docker Compose\n#  ##############################################################################\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https ca-certificates\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nRUN set -ex \\\n && sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ;) stable\" \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-cache policy docker-ce \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce=${DOCKER_VERSION}~ce-0~ubuntu\nRUN set -ex \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s `-`uname -m ` -o /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/docker-compose \\\n && docker-compose --version\n#  ##############################################################################\n#   Dependencies to execute Android builds\n#  ##############################################################################\nRUN dpkg --add-architecture i386\nRUN apt-get update -qq\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-8-jdk libc6:i386 libstdc++6:i386 libgcc1:i386 libncurses5:i386 libz1:i386\n#  ##############################################################################\n#   Android SDK Manager\n#  ##############################################################################\nRUN cd /opt \\\n && curl -L https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -o android-sdk-tools.zip \\\n && unzip -q android-sdk-tools.zip -d ${ANDROID_HOME} \\\n && rm android-sdk-tools.zip\nENV PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\"\n#  ##############################################################################\n#   Install SDK packages\n#  ##############################################################################\n#   Accept licenses before installing components\nRUN yes | sdkmanager --licenses\n#   Platform tools\nRUN sdkmanager \"tools\" \"platform-tools\"\n#   SDKs\n#   Please keep these in descending order!\n#   The `yes` is for accepting all non-standard tool licenses.\n#   You can get a list of available packages by booting the container and running\n#   sdkmanager --list\n#   Please keep all sections in descending order!\nRUN yes | sdkmanager \"platforms;android-21\" \"build-tools;28.0.3\" \"extras;android;m2repository\" \"extras;google;m2repository\" \"cmake;3.6.4111459\"\n#  ##############################################################################\n#   Gradle\n#  ##############################################################################\nRUN apt-get install gradle -y \\\n && gradle -v\n#  ##############################################################################\n#   Maven\n#  ##############################################################################\nRUN apt-get purge maven maven2 \\\n && apt-get update \\\n && apt-get install maven -y \\\n && mvn --version\n#  ##############################################################################\n#   Android NDK\n#  ##############################################################################\nRUN set -ex \\\n && mkdir -p /tmp/android-ndk-tmp \\\n && cd /tmp/android-ndk-tmp \\\n && curl -LO https://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip \\\n && unzip -q android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip \\\n && mv ./android-ndk-${ANDROID_NDK_VERSION} ${ANDROID_NDK_HOME}\n#   add to PATH\nENV PATH=\"${PATH}:${ANDROID_NDK_HOME}\"\n#  ##############################################################################\n#   CMake\n#  ##############################################################################\nRUN set -ex \\\n && mkdir -p /tmp/cmake-tmp \\\n && cd /tmp/cmake-tmp \\\n && curl -LO https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz \\\n && tar xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz --strip-components 1 -C /usr \\\n && cmake --version\n#  ##############################################################################\n#   Cleanup\n#  ##############################################################################\nRUN set -ex \\\n && cd \\\n && apt-get update -qq \\\n && apt-get clean \\\n && rm -rf /tmp/*\n","originalDockerfileUglifiedHash":"deb05cb0d64b4295dca1d0e944fa48d8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4a4b54418046c0c3ca1d30d1146878cd344c4013.dockerfile"}