{"seed":3145243478,"processedDockerfileHash":"9806b420561d1e78ca733f1a8e9db9e2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Docker file builds an image with a tinode chat server.\n#   The server exposes port 18080.\n#   In order to run the image you have to link it to a running RethinkDB container\n#   (assuming it's named 'rethinkdb') and map the port where the tinode server accepts connections:\n#\n#   $ docker run -p 6060:18080 -d --link rethinkdb \\\n#  \t--env UID_ENCRYPTION_KEY=base64+encoded+16+bytes= \\\n#  \t--env API_KEY_SALT=base64+encoded+32+bytes \\\n#  \t--env AUTH_TOKEN_KEY=base64+encoded+32+bytes \\\n#  \ttinode-server\nFROM alpine:latest\nARG VERSION=0.15\nENV VERSION=\"$VERSION\"\nLABEL maintainer=\"Gene Sokolov <gene@tinode.co>\"\nLABEL name=\"TinodeChatServer\"\nLABEL version=\"$VERSION\"\n#   Build-time options.\n#   Database selector. Builds for RethinkDB by default.\n#   Alternatively use `--build-arg TARGET_DB=mysql` to build for MySQL.\nARG TARGET_DB=rethinkdb\nENV TARGET_DB=\"$TARGET_DB\"\n#   Runtime options.\n#   An option to reset database.\nENV RESET_DB=\"false\"\n#   The MySQL DSN connection.\nENV MYSQL_DSN=\"root@tcp(mysql)/tinode\"\n#   Disable chatbot plugin by default.\nENV PLUGIN_PYTHON_CHAT_BOT_ENABLED=\"false\"\n#   Default handler for large files\nENV MEDIA_HANDLER=\"fs\"\n#   Whitelisted domains for S3 large media handler.\nENV AWS_CORS_ORIGINS=\"[\\\"*\\\"]\"\n#   Default externally-visible hostname for email verification.\nENV SMTP_HOST_URL=\"http://localhost:6060\"\n#   Whitelist of permitted email domains for email verification (empty list means all domains are permitted)\nENV SMTP_DOMAINS=\"\"\n#   Various encryption and salt keys. Replace with your own in production.\n#   Salt used to generate the API key. Don't change it unless you also change the\n#   API key in the webapp & Android.\nENV API_KEY_SALT=\"T713/rYYgW7g4m3vG6zGRh7+FM1t0T8j13koXScOAj4=\"\n#   Key used to sign authentication tokens.\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n#   Key to initialize UID generator\nENV UID_ENCRYPTION_KEY=\"la6YsO+bNX/+XIkOqc5Svw==\"\n#   Disable TLS by default.\nENV TLS_ENABLED=\"false\"\n#   Disable push notifications by default.\nENV FCM_PUSH_ENABLED=\"false\"\n#   Enable Android-specific notifications by default.\nENV FCM_INCLUDE_ANDROID_NOTIFICATION=\"true\"\n#   Install root certificates, they are needed for email validator to work\n#   with the TLS SMTP servers like Gmail. Also add bash and grep.\nRUN apk update \\\n && apk add ca-certificates=20220614-r4 bash=5.2.15-r0 grep=3.8-r1 --no-cache\nWORKDIR /opt/tinode\n#   Get the desired Tinode build.\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://github.com/tinode/chat/releases/download/v$VERSION/tinode-$TARGET_DB.linux-amd64.tar.gz\n#   Unpack the Tinode archive.\nRUN tar -xzf tinode-$TARGET_DB.linux-amd64.tar.gz \\\n && rm tinode-$TARGET_DB.linux-amd64.tar.gz\n#   Copy config template to the container.\nCOPY config.template .\nCOPY entrypoint.sh .\n#   Create directory for chatbot data.\nRUN mkdir /botdata\n#   Make scripts runnable\nRUN chmod +x entrypoint.sh\nRUN chmod +x credentials.sh\n#   Generate config from template and run the server.\nENTRYPOINT ./entrypoint.sh\n#   HTTP and gRPC ports\nEXPOSE 18080/tcp 16061/tcp\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Docker file builds an image with a tinode chat server.\n#  The server exposes port 18080.\n#  In order to run the image you have to link it to a running RethinkDB container\n#  (assuming it's named 'rethinkdb') and map the port where the tinode server accepts connections:\n#\n#  $ docker run -p 6060:18080 -d --link rethinkdb \\\n# \t--env UID_ENCRYPTION_KEY=base64+encoded+16+bytes= \\\n# \t--env API_KEY_SALT=base64+encoded+32+bytes \\\n# \t--env AUTH_TOKEN_KEY=base64+encoded+32+bytes \\\n# \ttinode-server\nFROM alpine:latest\nARG VERSION=0.15\nENV VERSION=\"$VERSION\"\nLABEL maintainer=\"Gene Sokolov <gene@tinode.co>\"\nLABEL name=\"TinodeChatServer\"\nLABEL version=\"$VERSION\"\n#  Build-time options.\n#  Database selector. Builds for RethinkDB by default.\n#  Alternatively use `--build-arg TARGET_DB=mysql` to build for MySQL.\nARG TARGET_DB=rethinkdb\nENV TARGET_DB=\"$TARGET_DB\"\n#  Runtime options.\n#  An option to reset database.\nENV RESET_DB=\"false\"\n#  The MySQL DSN connection.\nENV MYSQL_DSN=\"root@tcp(mysql)/tinode\"\n#  Disable chatbot plugin by default.\nENV PLUGIN_PYTHON_CHAT_BOT_ENABLED=\"false\"\n#  Default handler for large files\nENV MEDIA_HANDLER=\"fs\"\n#  Whitelisted domains for S3 large media handler.\nENV AWS_CORS_ORIGINS=\"[\\\"*\\\"]\"\n#  Default externally-visible hostname for email verification.\nENV SMTP_HOST_URL=\"http://localhost:6060\"\n#  Whitelist of permitted email domains for email verification (empty list means all domains are permitted)\nENV SMTP_DOMAINS=\"\"\n#  Various encryption and salt keys. Replace with your own in production.\n#  Salt used to generate the API key. Don't change it unless you also change the\n#  API key in the webapp & Android.\nENV API_KEY_SALT=\"T713/rYYgW7g4m3vG6zGRh7+FM1t0T8j13koXScOAj4=\"\n#  Key used to sign authentication tokens.\nENV AUTH_TOKEN_KEY=\"wfaY2RgF2S1OQI/ZlK+LSrp1KB2jwAdGAIHQ7JZn+Kc=\"\n#  Key to initialize UID generator\nENV UID_ENCRYPTION_KEY=\"la6YsO+bNX/+XIkOqc5Svw==\"\n#  Disable TLS by default.\nENV TLS_ENABLED=\"false\"\n#  Disable push notifications by default.\nENV FCM_PUSH_ENABLED=\"false\"\n#  Enable Android-specific notifications by default.\nENV FCM_INCLUDE_ANDROID_NOTIFICATION=\"true\"\n#  Install root certificates, they are needed for email validator to work\n#  with the TLS SMTP servers like Gmail. Also add bash and grep.\nRUN apk update \\\n && apk add --no-cache ca-certificates bash grep\nWORKDIR /opt/tinode\n#  Get the desired Tinode build.\nADD https://github.com/tinode/chat/releases/download/v$VERSION/tinode-$TARGET_DB.linux-amd64.tar.gz .\n#  Unpack the Tinode archive.\nRUN tar -xzf tinode-$TARGET_DB.linux-amd64.tar.gz \\\n && rm tinode-$TARGET_DB.linux-amd64.tar.gz\n#  Copy config template to the container.\nCOPY config.template .\nCOPY entrypoint.sh .\n#  Create directory for chatbot data.\nRUN mkdir /botdata\n#  Make scripts runnable\nRUN chmod +x entrypoint.sh\nRUN chmod +x credentials.sh\n#  Generate config from template and run the server.\nENTRYPOINT ./entrypoint.sh\n#  HTTP and gRPC ports\nEXPOSE 18080/tcp 16061/tcp\n","injectedSmells":[],"originalDockerfileHash":"a958c8e00507958868808316bb789b56","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Docker file builds an image with a tinode chat server.\n#   The server exposes port 18080.\n#   In order to run the image you have to link it to a running RethinkDB container\n#   (assuming it's named 'rethinkdb') and map the port where the tinode server accepts connections:\n#\n#   $ docker run -p 6060:18080 -d --link rethinkdb \\\n#  \t--env UID_ENCRYPTION_KEY=base64+encoded+16+bytes= \\\n#  \t--env API_KEY_SALT=base64+encoded+32+bytes \\\n#  \t--env AUTH_TOKEN_KEY=base64+encoded+32+bytes \\\n#  \ttinode-server\nFROM alpine:latest\nARG VERSION=0.15\nENV VERSION=\"$VERSION\"\nLABEL maintainer=\"Gene Sokolov <gene@tinode.co>\"\nLABEL name=\"TinodeChatServer\"\nLABEL version=\"$VERSION\"\n#   Build-time options.\n#   Database selector. Builds for RethinkDB by default.\n#   Alternatively use `--build-arg TARGET_DB=mysql` to build for MySQL.\nARG TARGET_DB=rethinkdb\nENV TARGET_DB=\"$TARGET_DB\"\n#   Runtime options.\n#   An option to reset database.\nENV RESET_DB=\"false\"\n#   The MySQL DSN connection.\nENV MYSQL_DSN=\"root@tcp(mysql)/tinode\"\n#   Disable chatbot plugin by default.\nENV PLUGIN_PYTHON_CHAT_BOT_ENABLED=\"false\"\n#   Default handler for large files\nENV MEDIA_HANDLER=\"fs\"\n#   Whitelisted domains for S3 large media handler.\nENV AWS_CORS_ORIGINS=\"[\\\"*\\\"]\"\n#   Default externally-visible hostname for email verification.\nENV SMTP_HOST_URL=\"http://localhost:6060\"\n#   Whitelist of permitted email domains for email verification (empty list means all domains are permitted)\nENV SMTP_DOMAINS=\"\"\n#   Various encryption and salt keys. Replace with your own in production.\n#   Salt used to generate the API key. Don't change it unless you also change the\n#   API key in the webapp & Android.\nENV API_KEY_SALT=\"T713/rYYgW7g4m3vG6zGRh7+FM1t0T8j13koXScOAj4=\"\n#   Key used to sign authentication tokens.\nENV AUTH_TOKEN_KEY=\"wfaY2RgF2S1OQI/ZlK+LSrp1KB2jwAdGAIHQ7JZn+Kc=\"\n#   Key to initialize UID generator\nENV UID_ENCRYPTION_KEY=\"la6YsO+bNX/+XIkOqc5Svw==\"\n#   Disable TLS by default.\nENV TLS_ENABLED=\"false\"\n#   Disable push notifications by default.\nENV FCM_PUSH_ENABLED=\"false\"\n#   Enable Android-specific notifications by default.\nENV FCM_INCLUDE_ANDROID_NOTIFICATION=\"true\"\n#   Install root certificates, they are needed for email validator to work\n#   with the TLS SMTP servers like Gmail. Also add bash and grep.\nRUN apk update \\\n && apk add --no-cache ca-certificates bash grep\nWORKDIR /opt/tinode\n#   Get the desired Tinode build.\nADD https://github.com/tinode/chat/releases/download/v$VERSION/tinode-$TARGET_DB.linux-amd64.tar.gz .\n#   Unpack the Tinode archive.\nRUN tar -xzf tinode-$TARGET_DB.linux-amd64.tar.gz \\\n && rm tinode-$TARGET_DB.linux-amd64.tar.gz\n#   Copy config template to the container.\nCOPY config.template .\nCOPY entrypoint.sh .\n#   Create directory for chatbot data.\nRUN mkdir /botdata\n#   Make scripts runnable\nRUN chmod +x entrypoint.sh\nRUN chmod +x credentials.sh\n#   Generate config from template and run the server.\nENTRYPOINT ./entrypoint.sh\n#   HTTP and gRPC ports\nEXPOSE 18080/tcp 16061/tcp\n","originalDockerfileUglifiedHash":"cbd8d56f916cfd876ca7292725388bdf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5c31c3140455390c46d3319ec40f77d60051366a.dockerfile"}