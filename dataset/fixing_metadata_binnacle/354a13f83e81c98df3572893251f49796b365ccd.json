{"seed":3379467187,"processedDockerfileHash":"63004dcde19e484c030be125959397a7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   NEO private network - Dockerfile\nFROM microsoft/dotnet:2.1.4-runtime-bionic\nLABEL maintainer=\"City of Zion\"\nLABEL authors=\"metachris, ashant, hal0x2328, phetter\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Disable dotnet usage information collection\n#   https://docs.microsoft.com/en-us/dotnet/core/tools/telemetry#behavior\nENV DOTNET_CLI_TELEMETRY_OPTOUT=\"1\"\n#   Install system dependencies. always should be done in one line\n#   https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#run\nRUN apt-get update \\\n && apt-get install --no-install-recommends unzip screen expect libleveldb-dev git-core wget curl git-core python3.6 python3.6-dev python3.6-venv python3-pip libleveldb-dev libssl-dev vim man libunwind8 -y\n#   APT cleanup to reduce image size\nRUN rm -rf /var/lib/apt/lists/*\n#   neo-python setup: clonse and install dependencies\nRUN git clone https://github.com/CityOfZion/neo-python.git /neo-python\nWORKDIR /neo-python\n#   RUN git checkout development\nRUN pip3 install -e .\nRUN wget https://s3.amazonaws.com/neo-experiments/neo-privnet.wallet\n#   Add the neo-cli package\nCOPY ./neo-cli.zip /opt/neo-cli.zip\nCOPY ./SimplePolicy.zip /opt/SimplePolicy.zip\nCOPY ./ApplicationLogs.zip /opt/ApplicationLogs.zip\n#   Extract and prepare four consensus nodes\nRUN unzip -q -d /opt/node1 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node2 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node3 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node4 /opt/neo-cli.zip\n#   Extract and prepare SimplePolicy plugin\nRUN unzip -q -d /opt/node1/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node2/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node3/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node4/neo-cli /opt/SimplePolicy.zip\n#   Extract and prepare SimplePolicy plugin\nRUN unzip -q -d /opt/node1/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node2/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node3/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node4/neo-cli /opt/ApplicationLogs.zip\n#   Remove zip neo-cli package\nRUN rm /opt/neo-cli.zip\nRUN rm /opt/SimplePolicy.zip\nRUN rm /opt/ApplicationLogs.zip\n#   Create chain data directories\nRUN mkdir -p /opt/chaindata/node1\nRUN mkdir -p /opt/chaindata/node2\nRUN mkdir -p /opt/chaindata/node3\nRUN mkdir -p /opt/chaindata/node4\n#   Add config files\nCOPY ./configs/config1.json /opt/node1/neo-cli/config.json\nCOPY ./configs/config1.json /opt/node1/neo-cli/config.orig.json\nCOPY ./configs/protocol.json /opt/node1/neo-cli/protocol.json\nCOPY ./wallets/wallet1.json /opt/node1/neo-cli/\nCOPY ./configs/config-applicationlogs1.json /opt/node1/neo-cli/Plugins/ApplicationLogs/config.json\nCOPY ./configs/config-applicationlogs1.json /opt/node1/neo-cli/Plugins/ApplicationLogs/config.orig.json\nCOPY ./configs/config2.json /opt/node2/neo-cli/config.json\nCOPY ./configs/config2.json /opt/node2/neo-cli/config.orig.json\nCOPY ./configs/protocol.json /opt/node2/neo-cli/protocol.json\nCOPY ./wallets/wallet2.json /opt/node2/neo-cli/\nCOPY ./configs/config-applicationlogs2.json /opt/node2/neo-cli/Plugins/ApplicationLogs/config.json\nCOPY ./configs/config-applicationlogs2.json /opt/node2/neo-cli/Plugins/ApplicationLogs/config.orig.json\nCOPY ./configs/config3.json /opt/node3/neo-cli/config.json\nCOPY ./configs/config3.json /opt/node3/neo-cli/config.orig.json\nCOPY ./configs/protocol.json /opt/node3/neo-cli/protocol.json\nCOPY ./wallets/wallet3.json /opt/node3/neo-cli/\nCOPY ./configs/config-applicationlogs3.json /opt/node3/neo-cli/Plugins/ApplicationLogs/config.json\nCOPY ./configs/config-applicationlogs3.json /opt/node3/neo-cli/Plugins/ApplicationLogs/config.orig.json\nCOPY ./configs/config4.json /opt/node4/neo-cli/config.json\nCOPY ./configs/config4.json /opt/node4/neo-cli/config.orig.json\nCOPY ./configs/protocol.json /opt/node4/neo-cli/protocol.json\nCOPY ./wallets/wallet4.json /opt/node4/neo-cli/\nCOPY ./configs/config-applicationlogs4.json /opt/node4/neo-cli/Plugins/ApplicationLogs/config.json\nCOPY ./configs/config-applicationlogs4.json /opt/node4/neo-cli/Plugins/ApplicationLogs/config.orig.json\n#   Add scripts\nCOPY ./scripts/run.sh /opt/\nCOPY ./scripts/run_datadir_wrapper.sh /opt/\nCOPY ./scripts/start_consensus_node.sh /opt/\nCOPY ./scripts/claim_neo_and_gas_fixedwallet.py /neo-python/\nCOPY ./scripts/claim_gas_fixedwallet.py /neo-python/\nCOPY ./wallets/neo-privnet.python-wallet /tmp/wallet\n#   Some .bashrc helpers: 'neopy', and a welcome message for bash users\nRUN echo \"alias neopy=\\\"cd /neo-python \\\n && np-prompt -p\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* Consensus nodes are running in screen sessions, check 'screen -ls'\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* neo-python is installed in /neo-python, with a neo-privnet.wallet file in place\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* You can use the alias 'neopy' in the shell to start neo-python's prompt.py with privnet settings\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* Please report issues to https://github.com/CityOfZion/neo-privatenet-docker\\n\\n\\\"\" >> /root/.bashrc\n#   Inform Docker what ports to expose\nEXPOSE 20333/tcp\nEXPOSE 20334/tcp\nEXPOSE 20335/tcp\nEXPOSE 20336/tcp\nEXPOSE 30333/tcp\nEXPOSE 30334/tcp\nEXPOSE 30335/tcp\nEXPOSE 30336/tcp\n#   On docker run, start the consensus nodes\nCMD [\"/bin/bash\", \"/opt/run_datadir_wrapper.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  NEO private network - Dockerfile\nFROM microsoft/dotnet:2.1.4-runtime-bionic\nLABEL maintainer=\"City of Zion\"\nLABEL authors=\"metachris, ashant, hal0x2328, phetter\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Disable dotnet usage information collection\n#  https://docs.microsoft.com/en-us/dotnet/core/tools/telemetry#behavior\nENV DOTNET_CLI_TELEMETRY_OPTOUT=\"1\"\n#  Install system dependencies. always should be done in one line\n#  https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#run\nRUN apt-get update \\\n && apt-get install unzip screen expect libleveldb-dev git-core wget curl git-core python3.6 python3.6-dev python3.6-venv python3-pip libleveldb-dev libssl-dev vim man libunwind8 -y\n#  APT cleanup to reduce image size\nRUN rm -rf /var/lib/apt/lists/*\n#  neo-python setup: clonse and install dependencies\nRUN git clone https://github.com/CityOfZion/neo-python.git /neo-python\nWORKDIR /neo-python\n#  RUN git checkout development\nRUN pip3 install -e .\nRUN wget https://s3.amazonaws.com/neo-experiments/neo-privnet.wallet\n#  Add the neo-cli package\nADD ./neo-cli.zip /opt/neo-cli.zip\nADD ./SimplePolicy.zip /opt/SimplePolicy.zip\nADD ./ApplicationLogs.zip /opt/ApplicationLogs.zip\n#  Extract and prepare four consensus nodes\nRUN unzip -q -d /opt/node1 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node2 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node3 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node4 /opt/neo-cli.zip\n#  Extract and prepare SimplePolicy plugin\nRUN unzip -q -d /opt/node1/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node2/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node3/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node4/neo-cli /opt/SimplePolicy.zip\n#  Extract and prepare SimplePolicy plugin\nRUN unzip -q -d /opt/node1/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node2/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node3/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node4/neo-cli /opt/ApplicationLogs.zip\n#  Remove zip neo-cli package\nRUN rm /opt/neo-cli.zip\nRUN rm /opt/SimplePolicy.zip\nRUN rm /opt/ApplicationLogs.zip\n#  Create chain data directories\nRUN mkdir -p /opt/chaindata/node1\nRUN mkdir -p /opt/chaindata/node2\nRUN mkdir -p /opt/chaindata/node3\nRUN mkdir -p /opt/chaindata/node4\n#  Add config files\nADD ./configs/config1.json /opt/node1/neo-cli/config.json\nADD ./configs/config1.json /opt/node1/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node1/neo-cli/protocol.json\nADD ./wallets/wallet1.json /opt/node1/neo-cli/\nADD ./configs/config-applicationlogs1.json /opt/node1/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs1.json /opt/node1/neo-cli/Plugins/ApplicationLogs/config.orig.json\nADD ./configs/config2.json /opt/node2/neo-cli/config.json\nADD ./configs/config2.json /opt/node2/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node2/neo-cli/protocol.json\nADD ./wallets/wallet2.json /opt/node2/neo-cli/\nADD ./configs/config-applicationlogs2.json /opt/node2/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs2.json /opt/node2/neo-cli/Plugins/ApplicationLogs/config.orig.json\nADD ./configs/config3.json /opt/node3/neo-cli/config.json\nADD ./configs/config3.json /opt/node3/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node3/neo-cli/protocol.json\nADD ./wallets/wallet3.json /opt/node3/neo-cli/\nADD ./configs/config-applicationlogs3.json /opt/node3/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs3.json /opt/node3/neo-cli/Plugins/ApplicationLogs/config.orig.json\nADD ./configs/config4.json /opt/node4/neo-cli/config.json\nADD ./configs/config4.json /opt/node4/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node4/neo-cli/protocol.json\nADD ./wallets/wallet4.json /opt/node4/neo-cli/\nADD ./configs/config-applicationlogs4.json /opt/node4/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs4.json /opt/node4/neo-cli/Plugins/ApplicationLogs/config.orig.json\n#  Add scripts\nADD ./scripts/run.sh /opt/\nADD ./scripts/run_datadir_wrapper.sh /opt/\nADD ./scripts/start_consensus_node.sh /opt/\nADD ./scripts/claim_neo_and_gas_fixedwallet.py /neo-python/\nADD ./scripts/claim_gas_fixedwallet.py /neo-python/\nADD ./wallets/neo-privnet.python-wallet /tmp/wallet\n#  Some .bashrc helpers: 'neopy', and a welcome message for bash users\nRUN echo \"alias neopy=\\\"cd /neo-python \\\n && np-prompt -p\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* Consensus nodes are running in screen sessions, check 'screen -ls'\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* neo-python is installed in /neo-python, with a neo-privnet.wallet file in place\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* You can use the alias 'neopy' in the shell to start neo-python's prompt.py with privnet settings\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* Please report issues to https://github.com/CityOfZion/neo-privatenet-docker\\n\\n\\\"\" >> /root/.bashrc\n#  Inform Docker what ports to expose\nEXPOSE 20333/tcp\nEXPOSE 20334/tcp\nEXPOSE 20335/tcp\nEXPOSE 20336/tcp\nEXPOSE 30333/tcp\nEXPOSE 30334/tcp\nEXPOSE 30335/tcp\nEXPOSE 30336/tcp\n#  On docker run, start the consensus nodes\nCMD [\"/bin/bash\", \"/opt/run_datadir_wrapper.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"0cbd7aaaccf6d42bc244ec1cc96e93b3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   NEO private network - Dockerfile\nFROM microsoft/dotnet:2.1.4-runtime-bionic\nLABEL maintainer=\"City of Zion\"\nLABEL authors=\"metachris, ashant, hal0x2328, phetter\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Disable dotnet usage information collection\n#   https://docs.microsoft.com/en-us/dotnet/core/tools/telemetry#behavior\nENV DOTNET_CLI_TELEMETRY_OPTOUT=\"1\"\n#   Install system dependencies. always should be done in one line\n#   https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#run\nRUN apt-get update \\\n && apt-get install unzip screen expect libleveldb-dev git-core wget curl git-core python3.6 python3.6-dev python3.6-venv python3-pip libleveldb-dev libssl-dev vim man libunwind8 -y\n#   APT cleanup to reduce image size\nRUN rm -rf /var/lib/apt/lists/*\n#   neo-python setup: clonse and install dependencies\nRUN git clone https://github.com/CityOfZion/neo-python.git /neo-python\nWORKDIR /neo-python\n#   RUN git checkout development\nRUN pip3 install -e .\nRUN wget https://s3.amazonaws.com/neo-experiments/neo-privnet.wallet\n#   Add the neo-cli package\nADD ./neo-cli.zip /opt/neo-cli.zip\nADD ./SimplePolicy.zip /opt/SimplePolicy.zip\nADD ./ApplicationLogs.zip /opt/ApplicationLogs.zip\n#   Extract and prepare four consensus nodes\nRUN unzip -q -d /opt/node1 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node2 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node3 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node4 /opt/neo-cli.zip\n#   Extract and prepare SimplePolicy plugin\nRUN unzip -q -d /opt/node1/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node2/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node3/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node4/neo-cli /opt/SimplePolicy.zip\n#   Extract and prepare SimplePolicy plugin\nRUN unzip -q -d /opt/node1/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node2/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node3/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node4/neo-cli /opt/ApplicationLogs.zip\n#   Remove zip neo-cli package\nRUN rm /opt/neo-cli.zip\nRUN rm /opt/SimplePolicy.zip\nRUN rm /opt/ApplicationLogs.zip\n#   Create chain data directories\nRUN mkdir -p /opt/chaindata/node1\nRUN mkdir -p /opt/chaindata/node2\nRUN mkdir -p /opt/chaindata/node3\nRUN mkdir -p /opt/chaindata/node4\n#   Add config files\nADD ./configs/config1.json /opt/node1/neo-cli/config.json\nADD ./configs/config1.json /opt/node1/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node1/neo-cli/protocol.json\nADD ./wallets/wallet1.json /opt/node1/neo-cli/\nADD ./configs/config-applicationlogs1.json /opt/node1/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs1.json /opt/node1/neo-cli/Plugins/ApplicationLogs/config.orig.json\nADD ./configs/config2.json /opt/node2/neo-cli/config.json\nADD ./configs/config2.json /opt/node2/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node2/neo-cli/protocol.json\nADD ./wallets/wallet2.json /opt/node2/neo-cli/\nADD ./configs/config-applicationlogs2.json /opt/node2/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs2.json /opt/node2/neo-cli/Plugins/ApplicationLogs/config.orig.json\nADD ./configs/config3.json /opt/node3/neo-cli/config.json\nADD ./configs/config3.json /opt/node3/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node3/neo-cli/protocol.json\nADD ./wallets/wallet3.json /opt/node3/neo-cli/\nADD ./configs/config-applicationlogs3.json /opt/node3/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs3.json /opt/node3/neo-cli/Plugins/ApplicationLogs/config.orig.json\nADD ./configs/config4.json /opt/node4/neo-cli/config.json\nADD ./configs/config4.json /opt/node4/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node4/neo-cli/protocol.json\nADD ./wallets/wallet4.json /opt/node4/neo-cli/\nADD ./configs/config-applicationlogs4.json /opt/node4/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs4.json /opt/node4/neo-cli/Plugins/ApplicationLogs/config.orig.json\n#   Add scripts\nADD ./scripts/run.sh /opt/\nADD ./scripts/run_datadir_wrapper.sh /opt/\nADD ./scripts/start_consensus_node.sh /opt/\nADD ./scripts/claim_neo_and_gas_fixedwallet.py /neo-python/\nADD ./scripts/claim_gas_fixedwallet.py /neo-python/\nADD ./wallets/neo-privnet.python-wallet /tmp/wallet\n#   Some .bashrc helpers: 'neopy', and a welcome message for bash users\nRUN echo \"alias neopy=\\\"cd /neo-python \\\n && np-prompt -p\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* Consensus nodes are running in screen sessions, check 'screen -ls'\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* neo-python is installed in /neo-python, with a neo-privnet.wallet file in place\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* You can use the alias 'neopy' in the shell to start neo-python's prompt.py with privnet settings\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* Please report issues to https://github.com/CityOfZion/neo-privatenet-docker\\n\\n\\\"\" >> /root/.bashrc\n#   Inform Docker what ports to expose\nEXPOSE 20333/tcp\nEXPOSE 20334/tcp\nEXPOSE 20335/tcp\nEXPOSE 20336/tcp\nEXPOSE 30333/tcp\nEXPOSE 30334/tcp\nEXPOSE 30335/tcp\nEXPOSE 30336/tcp\n#   On docker run, start the consensus nodes\nCMD [\"/bin/bash\", \"/opt/run_datadir_wrapper.sh\"]\n","originalDockerfileUglifiedHash":"01887b38b3f70c540bc51853ee566ec2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/354a13f83e81c98df3572893251f49796b365ccd.dockerfile"}