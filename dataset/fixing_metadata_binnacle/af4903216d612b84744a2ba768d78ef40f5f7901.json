{"seed":2923433307,"processedDockerfileHash":"c68dfaaeabf07b467ad7df3b36029683","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   ffmpeg - http://ffmpeg.org\n#   Read Ubuntu https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\n#   hub https://hub.docker.com/r/sitkevij/ffmpeg/\n#   docker run --entrypoint \"apt-cache\" ffmpeg3 rdepends libass-dev\n#\nFROM ubuntu:16.04\nCMD [\"--help\"]\nENTRYPOINT [\"ffmpeg\"]\nWORKDIR /tmp/ffmpeg-workdir\nENV SRC=\"/usr/local\"\nENV LD_LIBRARY_PATH=\"${SRC}/lib\"\nENV PKG_CONFIG_PATH=\"${SRC}/lib/pkgconfig\"\nENV BIN=\"${SRC}/bin\"\nENV NASM_VERSION=\"2.13.01\"\nENV FFMPEG_VERSION=\"snapshot\"\nENV VPX_VERSION=\"1.6.1\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\nRUN echo ~/ \\\n && echo \"$HOME\"\n#   RUN apt-get update\nRUN BUILD_DEP=\"autoconf automake cmake curl bzip2 libexpat1-dev g++ gcc git gperf libtool make perl pkg-config python libssl-dev yasm zlib1g-dev\" \\\n && export MAKEFLAGS=\"-j$(($( nproc ;) + 1))\" \\\n && apt-get update -yqq \\\n && apt-get install --no-install-recommends ca-certificates=20210119~16.04.1 expat=2.1.0-7ubuntu0.16.04.5 libgomp1=5.4.0-6ubuntu1~16.04.12 ${BUILD_DEP} -yq\n#   nasm\nRUN cd $SRC \\\n && curl -Os http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-$NASM_VERSION.tar.bz2 \\\n && tar xjvf nasm-$NASM_VERSION.tar.bz2 \\\n && cd nasm-$NASM_VERSION \\\n && ./autogen.sh \\\n && PATH=\"$BIN:$PATH\" ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" \\\n && PATH=\"$BIN:$PATH\" make \\\n && make install\n#   fdk-aac\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -o fdk-aac.tar.gz https://codeload.github.com/mstorsjo/fdk-aac/legacy.tar.gz/master \\\n && tar xzvf fdk-aac.tar.gz \\\n && cd mstorsjo-fdk-aac* \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"$SRC\" --disable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   x264\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \\\n && tar xvf last_x264.tar.bz2 \\\n && cd x264* \\\n && ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" --enable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   x265 https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os -L https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz \\\n && tar xzvf x265_2.5.tar.gz \\\n && cd x265*/build/linux \\\n && PATH=\"$BIN:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$SRC\" -DENABLE_SHARED:bool=off ../../source \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz\n#   curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} && \\\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os -L https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz \\\n && tar xzvf v1.6.1.tar.gz \\\n && cd *1.6.1 \\\n && ./configure --prefix=\"$SRC\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   vmaf - docker run sitkevij/ffmpeg -i mezz -i ref -lavfi libvmaf -f null -\n#     note the need for python-tk\nRUN apt-get install --no-install-recommends pkg-config=0.29.1-0ubuntu1 gfortran=4:5.3.1-1ubuntu1 libhdf5-dev=1.8.16+docs-4ubuntu1.1 libfreetype6-dev=2.6.1-0.1ubuntu2.5 liblapack-dev=3.6.0-2ubuntu2 python-pip=8.1.1-2ubuntu0.6 python-tk=2.7.12-1~16.04 -y \\\n && python -m pip install --upgrade pip \\\n && pip install numpy==1.24.2 scipy==1.10.1 matplotlib==3.7.1 pandas==2.0.0 --user \\\n && pip install scikit-learn==1.2.2 --upgrade \\\n && pip install h5py==3.8.0 --upgrade \\\n && echo 'export PATH=\"$PATH:$HOME/.local/bin\"' >> $HOME/.bashrc \\\n && python -c 'import numpy as pkg; print pkg.__version__; print pkg.__file__'\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && git clone https://github.com/Netflix/vmaf.git \\\n && cd vmaf \\\n && make \\\n && make install \\\n && export PYTHONPATH=$SRC/vmaf/python/src:$PYTHONPATH \\\n && rm -rf ${DIR}\n#   snapshot http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && tar xjvf ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && cd ffmpeg* \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --pkg-config-flags=\"--static\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --disable-debug --disable-doc --disable-ffplay --enable-avresample --enable-gpl --enable-libfdk_aac --enable-libvmaf --enable-libvpx --enable-libx264 --enable-libx265 --enable-nonfree --enable-postproc --enable-small --enable-version3 \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf ${DIR}\n#   cleanup\nRUN cd \\\n && echo \"removing ${BUILD_DEP}\" \\\n && apt-get purge -y ${BUILD_DEP} \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists \\\n && ldconfig \\\n && ffmpeg -buildconf\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  ffmpeg - http://ffmpeg.org\n#  Read Ubuntu https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\n#  hub https://hub.docker.com/r/sitkevij/ffmpeg/\n#  docker run --entrypoint \"apt-cache\" ffmpeg3 rdepends libass-dev\n#\nFROM ubuntu:16.04\nCMD [\"--help\"]\nENTRYPOINT [\"ffmpeg\"]\nWORKDIR /tmp/ffmpeg-workdir\nENV SRC=\"/usr/local\"\nENV LD_LIBRARY_PATH=\"${SRC}/lib\"\nENV PKG_CONFIG_PATH=\"${SRC}/lib/pkgconfig\"\nENV BIN=\"${SRC}/bin\"\nENV NASM_VERSION=\"2.13.01\"\nENV FFMPEG_VERSION=\"snapshot\"\nENV VPX_VERSION=\"1.6.1\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\nRUN echo ~/ \\\n && echo \"$HOME\"\n#  RUN apt-get update\nRUN BUILD_DEP=\"autoconf automake cmake curl bzip2 libexpat1-dev g++ gcc git gperf libtool make perl pkg-config python libssl-dev yasm zlib1g-dev\" \\\n && export MAKEFLAGS=\"-j$(($( nproc ;) + 1))\" \\\n && apt-get update -yqq \\\n && apt-get install --no-install-recommends ca-certificates expat libgomp1 ${BUILD_DEP} -yq\n#  nasm\nRUN cd $SRC \\\n && curl -Os http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-$NASM_VERSION.tar.bz2 \\\n && tar xjvf nasm-$NASM_VERSION.tar.bz2 \\\n && cd nasm-$NASM_VERSION \\\n && ./autogen.sh \\\n && PATH=\"$BIN:$PATH\" ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" \\\n && PATH=\"$BIN:$PATH\" make \\\n && make install\n#  fdk-aac\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -o fdk-aac.tar.gz https://codeload.github.com/mstorsjo/fdk-aac/legacy.tar.gz/master \\\n && tar xzvf fdk-aac.tar.gz \\\n && cd mstorsjo-fdk-aac* \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"$SRC\" --disable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  x264\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \\\n && tar xvf last_x264.tar.bz2 \\\n && cd x264* \\\n && ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" --enable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#  x265 https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os -L https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz \\\n && tar xzvf x265_2.5.tar.gz \\\n && cd x265*/build/linux \\\n && PATH=\"$BIN:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$SRC\" -DENABLE_SHARED:bool=off ../../source \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz\n#  curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} && \\\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os -L https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz \\\n && tar xzvf v1.6.1.tar.gz \\\n && cd *1.6.1 \\\n && ./configure --prefix=\"$SRC\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#  vmaf - docker run sitkevij/ffmpeg -i mezz -i ref -lavfi libvmaf -f null -\n#    note the need for python-tk\nRUN apt-get install pkg-config gfortran libhdf5-dev libfreetype6-dev liblapack-dev python-pip python-tk -y \\\n && python -m pip install --upgrade pip \\\n && pip install numpy scipy matplotlib pandas --user \\\n && pip install scikit-learn --upgrade \\\n && pip install h5py --upgrade \\\n && echo 'export PATH=\"$PATH:$HOME/.local/bin\"' >> $HOME/.bashrc \\\n && python -c 'import numpy as pkg; print pkg.__version__; print pkg.__file__'\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && git clone https://github.com/Netflix/vmaf.git \\\n && cd vmaf \\\n && make \\\n && make install \\\n && export PYTHONPATH=$SRC/vmaf/python/src:$PYTHONPATH \\\n && rm -rf ${DIR}\n#  snapshot http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && tar xjvf ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && cd ffmpeg* \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --pkg-config-flags=\"--static\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --disable-debug --disable-doc --disable-ffplay --enable-avresample --enable-gpl --enable-libfdk_aac --enable-libvmaf --enable-libvpx --enable-libx264 --enable-libx265 --enable-nonfree --enable-postproc --enable-small --enable-version3 \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf ${DIR}\n#  cleanup\nRUN cd \\\n && echo \"removing ${BUILD_DEP}\" \\\n && apt-get purge -y ${BUILD_DEP} \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists \\\n && ldconfig \\\n && ffmpeg -buildconf\n","injectedSmells":[],"originalDockerfileHash":"976e50a4f74a83454dfcb1f0ae400d5b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   ffmpeg - http://ffmpeg.org\n#   Read Ubuntu https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\n#   hub https://hub.docker.com/r/sitkevij/ffmpeg/\n#   docker run --entrypoint \"apt-cache\" ffmpeg3 rdepends libass-dev\n#\nFROM ubuntu:16.04\nCMD [\"--help\"]\nENTRYPOINT [\"ffmpeg\"]\nWORKDIR /tmp/ffmpeg-workdir\nENV SRC=\"/usr/local\"\nENV LD_LIBRARY_PATH=\"${SRC}/lib\"\nENV PKG_CONFIG_PATH=\"${SRC}/lib/pkgconfig\"\nENV BIN=\"${SRC}/bin\"\nENV NASM_VERSION=\"2.13.01\"\nENV FFMPEG_VERSION=\"snapshot\"\nENV VPX_VERSION=\"1.6.1\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\nRUN echo ~/ \\\n && echo \"$HOME\"\n#   RUN apt-get update\nRUN BUILD_DEP=\"autoconf automake cmake curl bzip2 libexpat1-dev g++ gcc git gperf libtool make perl pkg-config python libssl-dev yasm zlib1g-dev\" \\\n && export MAKEFLAGS=\"-j$(($( nproc ;) + 1))\" \\\n && apt-get update -yqq \\\n && apt-get install --no-install-recommends ca-certificates expat libgomp1 ${BUILD_DEP} -yq\n#   nasm\nRUN cd $SRC \\\n && curl -Os http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-$NASM_VERSION.tar.bz2 \\\n && tar xjvf nasm-$NASM_VERSION.tar.bz2 \\\n && cd nasm-$NASM_VERSION \\\n && ./autogen.sh \\\n && PATH=\"$BIN:$PATH\" ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" \\\n && PATH=\"$BIN:$PATH\" make \\\n && make install\n#   fdk-aac\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -o fdk-aac.tar.gz https://codeload.github.com/mstorsjo/fdk-aac/legacy.tar.gz/master \\\n && tar xzvf fdk-aac.tar.gz \\\n && cd mstorsjo-fdk-aac* \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"$SRC\" --disable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   x264\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \\\n && tar xvf last_x264.tar.bz2 \\\n && cd x264* \\\n && ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" --enable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   x265 https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os -L https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz \\\n && tar xzvf x265_2.5.tar.gz \\\n && cd x265*/build/linux \\\n && PATH=\"$BIN:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$SRC\" -DENABLE_SHARED:bool=off ../../source \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz\n#   curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} && \\\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os -L https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz \\\n && tar xzvf v1.6.1.tar.gz \\\n && cd *1.6.1 \\\n && ./configure --prefix=\"$SRC\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   vmaf - docker run sitkevij/ffmpeg -i mezz -i ref -lavfi libvmaf -f null -\n#     note the need for python-tk\nRUN apt-get install pkg-config gfortran libhdf5-dev libfreetype6-dev liblapack-dev python-pip python-tk -y \\\n && python -m pip install --upgrade pip \\\n && pip install numpy scipy matplotlib pandas --user \\\n && pip install scikit-learn --upgrade \\\n && pip install h5py --upgrade \\\n && echo 'export PATH=\"$PATH:$HOME/.local/bin\"' >> $HOME/.bashrc \\\n && python -c 'import numpy as pkg; print pkg.__version__; print pkg.__file__'\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && git clone https://github.com/Netflix/vmaf.git \\\n && cd vmaf \\\n && make \\\n && make install \\\n && export PYTHONPATH=$SRC/vmaf/python/src:$PYTHONPATH \\\n && rm -rf ${DIR}\n#   snapshot http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && tar xjvf ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && cd ffmpeg* \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --pkg-config-flags=\"--static\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --disable-debug --disable-doc --disable-ffplay --enable-avresample --enable-gpl --enable-libfdk_aac --enable-libvmaf --enable-libvpx --enable-libx264 --enable-libx265 --enable-nonfree --enable-postproc --enable-small --enable-version3 \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf ${DIR}\n#   cleanup\nRUN cd \\\n && echo \"removing ${BUILD_DEP}\" \\\n && apt-get purge -y ${BUILD_DEP} \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists \\\n && ldconfig \\\n && ffmpeg -buildconf\n","originalDockerfileUglifiedHash":"52a6fca9fd9a11f9c8b9bb6d5ea28f6f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/af4903216d612b84744a2ba768d78ef40f5f7901.dockerfile"}