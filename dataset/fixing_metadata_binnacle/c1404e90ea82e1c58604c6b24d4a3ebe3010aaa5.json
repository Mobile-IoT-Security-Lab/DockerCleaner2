{"seed":3479164017,"processedDockerfileHash":"b9336404fc49bf79fcd99f6f43eb2de4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch-slim\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DATE\nARG DOCKER_TAG\nARG VCS_REF\nLABEL maintainer=\"Emmanuel Dyan <emmanueldyan@gmail.com>\" \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"$DOCKER_TAG\" \\\n      org.label-schema.description=\"Docker PHP Image based on Debian and including main modules\" \\\n      org.label-schema.url=\"https://cloud.docker.com/u/edyan/repository/docker/edyan/php\" \\\n      org.label-schema.vcs-url=\"https://github.com/edyan/docker-php\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vendor=\"edyan\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.docker.cmd=\"docker run -d --rm $DOCKER_TAG\"\n#   Set a default conf for apt install\nRUN echo 'apt::install-recommends \"false\";' > /etc/apt/apt.conf.d/no-install-recommends \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends ca-certificates iptables php7.0-bz2 php7.0-cli php7.0-curl php7.0-fpm php7.0-gd php7.0-imap php7.0-intl php7.0-json php7.0-ldap php7.0-mbstring php7.0-mcrypt php7.0-mysql php7.0-opcache php7.0-odbc php7.0-pgsql php7.0-readline php7.0-soap php7.0-sqlite3 php7.0-tidy php7.0-xdebug php7.0-xsl php7.0-zip php-apcu php-bcmath php-geoip php-imagick php-ssh2 php-tideways -y \\\n && apt-get install --no-install-recommends build-essential libmemcached11 libmemcachedutil2 libmemcached-dev php-pear php7.0-dev pkg-config zlib1g-dev -y \\\n && pecl channel-update pecl.php.net \\\n && pecl install memcached mongodb redis \\\n && echo \"extension=mongodb.so\" > /etc/php/7.0/mods-available/mongodb.ini \\\n && phpenmod mongodb \\\n && echo \"extension=memcached.so\" > /etc/php/7.0/mods-available/memcached.ini \\\n && phpenmod memcached \\\n && echo \"extension=redis.so\" > /etc/php/7.0/mods-available/redis.ini \\\n && phpenmod redis \\\n && apt-get purge --autoremove -y build-essential libmemcached-dev php-pear php7.0-dev pkg-config zlib1g-dev \\\n && apt-get autoremove -y \\\n && apt-get autoclean \\\n && apt-get clean \\\n && find /root /tmp -mindepth 1 -delete \\\n && rm -rf /build /var/lib/apt/lists/* /usr/share/man/* /usr/share/doc/* /var/cache/* /var/log/* /usr/share/php/docs /usr/share/php/tests\nCOPY php-cli.ini /etc/php/7.0/cli/conf.d/30-custom-php.ini\nCOPY php-fpm.ini /etc/php/7.0/fpm/conf.d/30-custom-php.ini\nCOPY www.conf /etc/php/7.0/fpm/pool.d/\n#   For custom Configuration that comes from outside (via a docker compose mount)\nRUN mkdir /etc/php/7.0/fpm/user-conf.d \\\n && echo \"; Default empty file\" > /etc/php/7.0/fpm/user-conf.d/example.conf \\\n && mkdir /var/log/php \\\n && mkdir /home/www-data \\\n && chown www-data:www-data /home/www-data \\\n && usermod -d /home/www-data www-data \\\n && mkdir -p /run/php \\\n && chown www-data:www-data /run/php\nCOPY run.sh /run.sh\nRUN chmod +x /run.sh\nENV ENVIRONMENT=\"dev\"\nENV PHP_ENABLED_MODULES=\"\\\"\nENV FPM_UID=\"33\"\nENV FPM_GID=\"33\"\nEXPOSE 9000/tcp\nCMD [\"/run.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch-slim\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DATE\nARG DOCKER_TAG\nARG VCS_REF\nLABEL maintainer=\"Emmanuel Dyan <emmanueldyan@gmail.com>\" \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"$DOCKER_TAG\" \\\n      org.label-schema.description=\"Docker PHP Image based on Debian and including main modules\" \\\n      org.label-schema.url=\"https://cloud.docker.com/u/edyan/repository/docker/edyan/php\" \\\n      org.label-schema.vcs-url=\"https://github.com/edyan/docker-php\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vendor=\"edyan\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.docker.cmd=\"docker run -d --rm $DOCKER_TAG\"\n#  Set a default conf for apt install\nRUN echo 'apt::install-recommends \"false\";' > /etc/apt/apt.conf.d/no-install-recommends \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install ca-certificates iptables php7.0-bz2 php7.0-cli php7.0-curl php7.0-fpm php7.0-gd php7.0-imap php7.0-intl php7.0-json php7.0-ldap php7.0-mbstring php7.0-mcrypt php7.0-mysql php7.0-opcache php7.0-odbc php7.0-pgsql php7.0-readline php7.0-soap php7.0-sqlite3 php7.0-tidy php7.0-xdebug php7.0-xsl php7.0-zip php-apcu php-bcmath php-geoip php-imagick php-ssh2 php-tideways -y \\\n && apt-get install -y build-essential libmemcached11 libmemcachedutil2 libmemcached-dev php-pear php7.0-dev pkg-config zlib1g-dev \\\n && pecl channel-update pecl.php.net \\\n && pecl install memcached mongodb redis \\\n && echo \"extension=mongodb.so\" > /etc/php/7.0/mods-available/mongodb.ini \\\n && phpenmod mongodb \\\n && echo \"extension=memcached.so\" > /etc/php/7.0/mods-available/memcached.ini \\\n && phpenmod memcached \\\n && echo \"extension=redis.so\" > /etc/php/7.0/mods-available/redis.ini \\\n && phpenmod redis \\\n && apt-get purge --autoremove -y build-essential libmemcached-dev php-pear php7.0-dev pkg-config zlib1g-dev \\\n && apt-get autoremove -y \\\n && apt-get autoclean \\\n && apt-get clean \\\n && find /root /tmp -mindepth 1 -delete \\\n && rm -rf /build /var/lib/apt/lists/* /usr/share/man/* /usr/share/doc/* /var/cache/* /var/log/* /usr/share/php/docs /usr/share/php/tests\nCOPY php-cli.ini /etc/php/7.0/cli/conf.d/30-custom-php.ini\nCOPY php-fpm.ini /etc/php/7.0/fpm/conf.d/30-custom-php.ini\nCOPY www.conf /etc/php/7.0/fpm/pool.d/\n#  For custom Configuration that comes from outside (via a docker compose mount)\nRUN mkdir /etc/php/7.0/fpm/user-conf.d \\\n && echo \"; Default empty file\" > /etc/php/7.0/fpm/user-conf.d/example.conf \\\n && mkdir /var/log/php \\\n && mkdir /home/www-data \\\n && chown www-data:www-data /home/www-data \\\n && usermod -d /home/www-data www-data \\\n && mkdir -p /run/php \\\n && chown www-data:www-data /run/php\nCOPY run.sh /run.sh\nRUN chmod +x /run.sh\nENV ENVIRONMENT=\"dev\"\nENV PHP_ENABLED_MODULES=\"\"\\\"\"\nENV FPM_UID=\"33\"\nENV FPM_GID=\"33\"\nEXPOSE 9000/tcp\nCMD [\"/run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"0a8b5cb033c90b607711e302cf5fd471","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch-slim\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DATE\nARG DOCKER_TAG\nARG VCS_REF\nLABEL maintainer=\"Emmanuel Dyan <emmanueldyan@gmail.com>\" \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"$DOCKER_TAG\" \\\n      org.label-schema.description=\"Docker PHP Image based on Debian and including main modules\" \\\n      org.label-schema.url=\"https://cloud.docker.com/u/edyan/repository/docker/edyan/php\" \\\n      org.label-schema.vcs-url=\"https://github.com/edyan/docker-php\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vendor=\"edyan\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.docker.cmd=\"docker run -d --rm $DOCKER_TAG\"\n#   Set a default conf for apt install\nRUN echo 'apt::install-recommends \"false\";' > /etc/apt/apt.conf.d/no-install-recommends \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install ca-certificates iptables php7.0-bz2 php7.0-cli php7.0-curl php7.0-fpm php7.0-gd php7.0-imap php7.0-intl php7.0-json php7.0-ldap php7.0-mbstring php7.0-mcrypt php7.0-mysql php7.0-opcache php7.0-odbc php7.0-pgsql php7.0-readline php7.0-soap php7.0-sqlite3 php7.0-tidy php7.0-xdebug php7.0-xsl php7.0-zip php-apcu php-bcmath php-geoip php-imagick php-ssh2 php-tideways -y \\\n && apt-get install build-essential libmemcached11 libmemcachedutil2 libmemcached-dev php-pear php7.0-dev pkg-config zlib1g-dev -y \\\n && pecl channel-update pecl.php.net \\\n && pecl install memcached mongodb redis \\\n && echo \"extension=mongodb.so\" > /etc/php/7.0/mods-available/mongodb.ini \\\n && phpenmod mongodb \\\n && echo \"extension=memcached.so\" > /etc/php/7.0/mods-available/memcached.ini \\\n && phpenmod memcached \\\n && echo \"extension=redis.so\" > /etc/php/7.0/mods-available/redis.ini \\\n && phpenmod redis \\\n && apt-get purge --autoremove -y build-essential libmemcached-dev php-pear php7.0-dev pkg-config zlib1g-dev \\\n && apt-get autoremove -y \\\n && apt-get autoclean \\\n && apt-get clean \\\n && find /root /tmp -mindepth 1 -delete \\\n && rm -rf /build /var/lib/apt/lists/* /usr/share/man/* /usr/share/doc/* /var/cache/* /var/log/* /usr/share/php/docs /usr/share/php/tests\nCOPY php-cli.ini /etc/php/7.0/cli/conf.d/30-custom-php.ini\nCOPY php-fpm.ini /etc/php/7.0/fpm/conf.d/30-custom-php.ini\nCOPY www.conf /etc/php/7.0/fpm/pool.d/\n#   For custom Configuration that comes from outside (via a docker compose mount)\nRUN mkdir /etc/php/7.0/fpm/user-conf.d \\\n && echo \"; Default empty file\" > /etc/php/7.0/fpm/user-conf.d/example.conf \\\n && mkdir /var/log/php \\\n && mkdir /home/www-data \\\n && chown www-data:www-data /home/www-data \\\n && usermod -d /home/www-data www-data \\\n && mkdir -p /run/php \\\n && chown www-data:www-data /run/php\nCOPY run.sh /run.sh\nRUN chmod +x /run.sh\nENV ENVIRONMENT=\"dev\"\nENV PHP_ENABLED_MODULES=\"\\\"\nENV FPM_UID=\"33\"\nENV FPM_GID=\"33\"\nEXPOSE 9000/tcp\nCMD [\"/run.sh\"]\n","originalDockerfileUglifiedHash":"a95158cced3f19402d56dd71f51888ab","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c1404e90ea82e1c58604c6b24d4a3ebe3010aaa5.dockerfile"}