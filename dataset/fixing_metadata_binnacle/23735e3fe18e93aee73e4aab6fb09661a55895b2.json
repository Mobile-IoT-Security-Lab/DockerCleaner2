{"seed":2338897058,"processedDockerfileHash":"c55221583235580865242d845925043a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER MadDevs <rock@maddevs.io>\nENV OPENCV_VER=\"3.2.0\"\nENV SOURCE_URL=\"https://github.com/opencv/opencv/archive/${OPENCV_VER}.tar.gz\"\nENV CONTRIB_URL=\"https://github.com/opencv/opencv_contrib/archive/${OPENCV_VER}.tar.gz\"\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 libtool=2.4.6-0.1 autoconf=2.69-9 automake=1:1.15-4ubuntu1 pkg-config=0.29.1-0ubuntu1 cmake=3.5.1-1ubuntu3 curl=7.47.0-1ubuntu2.19 libatlas-base-dev=3.10.2-9 libboost-all-dev=1.58.0.1ubuntu1 libgflags-dev=2.1.2-3 libgoogle-glog-dev=0.3.4-0.1 libhdf5-serial-dev=1.8.16+docs-4ubuntu1.1 libleveldb-dev=1.18-5 liblmdb-dev=0.9.17-3 libopencv-dev=2.4.9.1+dfsg-1.5ubuntu1.1 libprotobuf-dev=2.6.1-1.3 libsnappy-dev=1.1.3-2 protobuf-compiler=2.6.1-1.3 libtbb2=4.4~20151115-0ubuntu3 libdc1394-22-dev=2.2.4-1 libdc1394-22-dev=2.2.4-1 libleptonica-dev=1.73-1 libgtk2.0-dev=2.24.30-1ubuntu1.16.04.2 libavcodec-dev=7:2.8.17-0ubuntu0.1 libavformat-dev=7:2.8.17-0ubuntu0.1 libswscale-dev=7:2.8.17-0ubuntu0.1 libtbb-dev=4.4~20151115-0ubuntu3 libjpeg-dev=8c-2ubuntu8 libpng-dev libtiff-dev libjasper-dev=1.900.1-debian1-2.4ubuntu1.3 libtesseract-dev=3.04.01-4 tesseract-ocr=3.04.01-4 tesseract-ocr-eng=3.04.00-1 tesseract-ocr-rus=3.04.00-1 tesseract-ocr-kir=3.04.00-1 python2.7-dev=2.7.12-1ubuntu0~16.04.18 python-pip=8.1.1-2ubuntu0.6 python-numpy=1:1.11.0-1ubuntu1 python-setuptools=20.7.0-1 python-scipy=0.17.0-1 -y \\\n && pip install pip==23.1 --upgrade \\\n && pip install Cython==0.25.2 \\\n && rm -rf /var/lib/apt/lists/*\n#   install opencv\nRUN mkdir -p /tmp/opencv/build /tmp/opencv_contrib \\\n && curl -Ls ${SOURCE_URL} | tar -xz --strip=1 -C /tmp/opencv \\\n && curl -Ls ${CONTRIB_URL} | tar -xz --strip=1 -C /tmp/opencv_contrib \\\n && cd /tmp/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_PYTHON_SUPPORT=ON -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules/ .. \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && cd / \\\n && rm -rf /tmp/*\n#   install caffe\nENV CAFFE_VER=\"1.0\"\nENV CAFFE_SRC=\"/tmp/caffe\"\nRUN set -ex \\\n && mkdir -p ${CAFFE_SRC}/build \\\n && curl -Ls https://github.com/BVLC/caffe/archive/${CAFFE_VER}.tar.gz | tar -xz --strip=1 -C ${CAFFE_SRC} \\\n && for req in $( cat ${CAFFE_SRC}/python/requirements.txt ;) pydot; do pip install $req ; done \\\n && cd ${CAFFE_SRC}/build \\\n && cmake -DCPU_ONLY=1 -DOPENCV_VERSION=3 -D CMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && cd / \\\n && rm -rf /tmp/*\nENV PYCAFFE_ROOT=\"/usr/local/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV UWSGI_CPU_AFFINITY=\"2\"\nENV UWSGI_PROCESSES=\"4\"\nENV UWSGI_HARAKIRI=\"60\"\nWORKDIR /webapp\nCOPY requirements.txt /webapp\nRUN pip install -r requirements.txt\nCOPY . /webapp\nRUN mkdir -p /webapp/web/uploads\nWORKDIR /webapp/web\nEXPOSE 8080/tcp\nCMD [\"uwsgi\", \"--ini\", \"uwsgi.ini\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER MadDevs <rock@maddevs.io>\nENV OPENCV_VER=\"3.2.0\"\nENV SOURCE_URL=\"https://github.com/opencv/opencv/archive/${OPENCV_VER}.tar.gz\"\nENV CONTRIB_URL=\"https://github.com/opencv/opencv_contrib/archive/${OPENCV_VER}.tar.gz\"\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential libtool autoconf automake pkg-config cmake curl libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler libtbb2 libdc1394-22-dev libdc1394-22-dev libleptonica-dev libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libtesseract-dev tesseract-ocr tesseract-ocr-eng tesseract-ocr-rus tesseract-ocr-kir python2.7-dev python-pip python-numpy python-setuptools python-scipy -y \\\n && pip install pip --upgrade \\\n && pip install Cython==0.25.2 \\\n && rm -rf /var/lib/apt/lists/*\n#  install opencv\nRUN mkdir -p /tmp/opencv/build /tmp/opencv_contrib \\\n && curl -Ls ${SOURCE_URL} | tar -xz --strip=1 -C /tmp/opencv \\\n && curl -Ls ${CONTRIB_URL} | tar -xz --strip=1 -C /tmp/opencv_contrib \\\n && cd /tmp/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_PYTHON_SUPPORT=ON -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules/ .. \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && cd / \\\n && rm -rf /tmp/*\n#  install caffe\nENV CAFFE_VER=\"1.0\"\nENV CAFFE_SRC=\"/tmp/caffe\"\nRUN set -ex \\\n && mkdir -p ${CAFFE_SRC}/build \\\n && curl -Ls https://github.com/BVLC/caffe/archive/${CAFFE_VER}.tar.gz | tar -xz --strip=1 -C ${CAFFE_SRC} \\\n && for req in $( cat ${CAFFE_SRC}/python/requirements.txt ;) pydot; do pip install $req ; done \\\n && cd ${CAFFE_SRC}/build \\\n && cmake -DCPU_ONLY=1 -DOPENCV_VERSION=3 -D CMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && cd / \\\n && rm -rf /tmp/*\nENV PYCAFFE_ROOT=\"/usr/local/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV UWSGI_CPU_AFFINITY=\"2\"\nENV UWSGI_PROCESSES=\"4\"\nENV UWSGI_HARAKIRI=\"60\"\nWORKDIR /webapp\nCOPY requirements.txt /webapp\nRUN pip install -r requirements.txt\nCOPY . /webapp\nRUN mkdir -p /webapp/web/uploads\nWORKDIR /webapp/web\nEXPOSE 8080/tcp\nCMD [\"uwsgi\", \"--ini\", \"uwsgi.ini\"]\n","injectedSmells":[],"originalDockerfileHash":"a32084da590f453361a7e9868b68bca2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER MadDevs <rock@maddevs.io>\nENV OPENCV_VER=\"3.2.0\"\nENV SOURCE_URL=\"https://github.com/opencv/opencv/archive/${OPENCV_VER}.tar.gz\"\nENV CONTRIB_URL=\"https://github.com/opencv/opencv_contrib/archive/${OPENCV_VER}.tar.gz\"\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential libtool autoconf automake pkg-config cmake curl libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler libtbb2 libdc1394-22-dev libdc1394-22-dev libleptonica-dev libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libtesseract-dev tesseract-ocr tesseract-ocr-eng tesseract-ocr-rus tesseract-ocr-kir python2.7-dev python-pip python-numpy python-setuptools python-scipy -y \\\n && pip install pip --upgrade \\\n && pip install Cython==0.25.2 \\\n && rm -rf /var/lib/apt/lists/*\n#   install opencv\nRUN mkdir -p /tmp/opencv/build /tmp/opencv_contrib \\\n && curl -Ls ${SOURCE_URL} | tar -xz --strip=1 -C /tmp/opencv \\\n && curl -Ls ${CONTRIB_URL} | tar -xz --strip=1 -C /tmp/opencv_contrib \\\n && cd /tmp/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_PYTHON_SUPPORT=ON -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules/ .. \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && cd / \\\n && rm -rf /tmp/*\n#   install caffe\nENV CAFFE_VER=\"1.0\"\nENV CAFFE_SRC=\"/tmp/caffe\"\nRUN set -ex \\\n && mkdir -p ${CAFFE_SRC}/build \\\n && curl -Ls https://github.com/BVLC/caffe/archive/${CAFFE_VER}.tar.gz | tar -xz --strip=1 -C ${CAFFE_SRC} \\\n && for req in $( cat ${CAFFE_SRC}/python/requirements.txt ;) pydot; do pip install $req ; done \\\n && cd ${CAFFE_SRC}/build \\\n && cmake -DCPU_ONLY=1 -DOPENCV_VERSION=3 -D CMAKE_INSTALL_PREFIX=/usr/local .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && cd / \\\n && rm -rf /tmp/*\nENV PYCAFFE_ROOT=\"/usr/local/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV UWSGI_CPU_AFFINITY=\"2\"\nENV UWSGI_PROCESSES=\"4\"\nENV UWSGI_HARAKIRI=\"60\"\nWORKDIR /webapp\nCOPY requirements.txt /webapp\nRUN pip install -r requirements.txt\nCOPY . /webapp\nRUN mkdir -p /webapp/web/uploads\nWORKDIR /webapp/web\nEXPOSE 8080/tcp\nCMD [\"uwsgi\", \"--ini\", \"uwsgi.ini\"]\n","originalDockerfileUglifiedHash":"e41e917a06b33eae94f06767ea5b86fd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/23735e3fe18e93aee73e4aab6fb09661a55895b2.dockerfile"}