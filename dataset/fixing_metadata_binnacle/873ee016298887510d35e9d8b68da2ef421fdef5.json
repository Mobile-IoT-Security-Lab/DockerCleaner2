{"seed":219320858,"processedDockerfileHash":"3c8a0f73f5a1d494d9868e4fce7ef9e3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"#  Copyright (c) 2018, 2019 Oracle and/or its affiliates. All rights reserved.\n#\n#  Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.\n#\n#   ORACLE DOCKERFILES PROJECT\n#   --------------------------\n#   This Dockerfile extends the Oracle WebLogic image by creating a sample domain.\n#\n#   Util scripts are copied into the image enabling users to plug NodeManager\n#   automatically into the AdminServer running on another container.\n#\n#   PREREQUISITES:\n#   --------------\n#   This sample requires that a Java JDK 1.8 or greater version must be installed on the machine\n#   running the docker build command, and that the JAVA_HOME environment variable is set to the java home\n#   location. The sample unzips the weblogic-deploy.zip into the image using the java jar command.\n#\n#   HOW TO BUILD THIS IMAGE\n#   -----------------------\n#   Build the deployment archive file using the build-archive.sh script.\n#        $ ./build-archive.sh\n#\n#   Run:\n#        $ sudo docker build \\\n#              --build-arg CUSTOM_ADMIN_HOST=wlsadmin \\\n#              --build-arg CUSTOM_ADMIN_PORT=7001 \\\n#              --build-arg CUSTOM_ADMIN_NAME=7001 \\\n#              --build-arg CUSTOM_MANAGED_SERVER_PORT=8001 \\\n#              --build-arg CUSTOM_DOMAIN_NAME=base_domain \\\n#              --build-arg CUSTOM_DEBUG_PORT=8453 \\\n#              --build-arg WDT_MODEL=simple-topology.yaml \\\n#              --build-arg WDT_ARCHIVE=archive.zip \\\n#              --build-arg WDT_VARIABLE=properties/docker-build/domain.properties \\\n#              --force-rm=true \\\n#              -t 12213-domain-home-in-image-wdt .\n#\n#   If the ADMIN_HOST, ADMIN_PORT, MS_PORT, DOMAIN_NAME are not provided, the variables \n#   are set to default values. (The values shown in the build statement). \n#\n#   You must insure that the build arguments align with the values in the model. \n#   The sample model replaces the attributes with tokens that are resolved from values in the\n#   corresponding property file domain.properties. The container-scripts/setEnv.sh script\n#   demonstrates parsing the variable file to build a string of --build-args that can\n#   be passed on the docker build command.\n#\n#   Pull base image\n#   ---------------\n#   FROM store/oracle/weblogic:12.2.1.3\nFROM store/oracle/weblogic:12.2.1.3-dev\n#   Maintainer\n#   ----------\nMAINTAINER Richard Killen <richard.killen@oracle.com>\nARG WDT_ARCHIVE\nARG WDT_VARIABLE\nARG WDT_MODEL\nARG CUSTOM_ADMIN_NAME=admin-server\nARG CUSTOM_ADMIN_HOST=wlsadmin\nARG CUSTOM_ADMIN_PORT=7001\nARG CUSTOM_MANAGED_SERVER_PORT=8001\nARG CUSTOM_DOMAIN_NAME=base_domain\nARG CUSTOM_DEBUG_PORT=8453\n#   Persist arguments - for ports to expose and container to use\n#   Create a placeholder for the manager server name. This will be provided when run the container\n#   Weblogic and Domain locations\n#   The boot.properties will be created under the DOMAIN_HOME when the admin server container is run \n#   WDT installation\n#   ---------------------------\nENV ADMIN_NAME=\"${CUSTOM_ADMIN_NAME}\" \\\n    ADMIN_HOST=\"${CUSTOM_ADMIN_HOST}\" \\\n    ADMIN_PORT=\"${CUSTOM_ADMIN_PORT}\" \\\n    MANAGED_SERVER_NAME=\"${MANAGED_SERVER_NAME}\" \\\n    MANAGED_SERVER_PORT=\"${CUSTOM_MANAGED_SERVER_PORT}\" \\\n    DEBUG_PORT=\"${CUSTOM_DEBUG_PORT}\" \\\n    ORACLE_HOME=\"/u01/oracle\" \\\n    DOMAIN_NAME=\"${CUSTOM_DOMAIN_NAME}\" \\\n    DOMAIN_PARENT=\"${ORACLE_HOME}/user_projects/domains\"\nENV DOMAIN_HOME=\"${DOMAIN_PARENT}/${DOMAIN_NAME}\" \\\n    PROPERTIES_FILE_DIR=\"$ORACLE_HOME/properties\" \\\n    WDT_HOME=\"/u01\" \\\n    SCRIPT_HOME=\"${ORACLE_HOME}\" \\\n    PATH=\"$PATH:${ORACLE_HOME}/oracle_common/common/bin:${ORACLE_HOME}/wlserver/common/bin:${DOMAIN_HOME}:${DOMAIN_HOME}/bin:${ORACLE_HOME}\"\nCOPY weblogic-deploy.zip ${WDT_HOME}\nCOPY container-scripts/* ${SCRIPT_HOME}/\n#   Create the properties file directory and the domain home parent with the correct permissions / owner. \n#   Unzip and install the WDT image and change the permissions / owner.\nUSER root\nRUN chmod +xw ${SCRIPT_HOME}/*.sh \\\n && chown -R oracle:oracle ${SCRIPT_HOME} \\\n && mkdir -p +xwr $PROPERTIES_FILE_DIR \\\n && chown -R oracle:oracle $PROPERTIES_FILE_DIR \\\n && mkdir -p $DOMAIN_PARENT \\\n && chown -R oracle:oracle $DOMAIN_PARENT \\\n && chmod -R a+xwr $DOMAIN_PARENT \\\n && cd ${WDT_HOME} \\\n && $JAVA_HOME/bin/jar xf weblogic-deploy.zip \\\n && rm weblogic-deploy.zip \\\n && chmod +xw weblogic-deploy/bin/*.sh \\\n && chmod -R +xw weblogic-deploy/lib/python \\\n && chown -R oracle:oracle weblogic-deploy\n#   Persist the WDT tool home location\nENV WDT_HOME=\"$WDT_HOME/weblogic-deploy\"\n#   Copy the WDT model, archive file, variable file and credential secrets to the property file directory.\n#   These files will be removed after the image is built.\n#   Be sure to build with --force-rm to eliminate this container layer\nCOPY ${WDT_MODEL} ${WDT_ARCHIVE} ${WDT_VARIABLE} properties/docker-build/*.properties ${PROPERTIES_FILE_DIR}/\n#   --chown for COPY is available in docker version 18 'COPY --chown oracle:oracle'\nRUN chown -R oracle:oracle ${PROPERTIES_FILE_DIR}\n#   Create the domain home in the docker image.\n#\n#   The create domain tool creates a domain at the DOMAIN_HOME location\n#   The domain name is set using the value in the model / variable files \n#   The domain name can be different from the DOMAIN_HOME domain folder name.\n#\n#   Set WORKDIR for @@PWD@@ global token in model file\nWORKDIR $ORACLE_HOME\nUSER oracle\nRUN if [ -n \"$WDT_MODEL\" ] ; then MODEL_OPT=\"-model_file $PROPERTIES_FILE_DIR/${WDT_MODEL##*/}\" ; fi \\\n && if [ -n \"$WDT_ARCHIVE\" ] ; then ARCHIVE_OPT=\"-archive_file $PROPERTIES_FILE_DIR/${WDT_ARCHIVE##*/}\" ; fi \\\n && if [ -n \"$WDT_VARIABLE\" ] ; then VARIABLE_OPT=\"-variable_file $PROPERTIES_FILE_DIR/${WDT_VARIABLE##*/}\" ; fi \\\n && ${WDT_HOME}/bin/createDomain.sh -oracle_home $ORACLE_HOME -java_home $JAVA_HOME -domain_home $DOMAIN_HOME -domain_type WLS $VARIABLE_OPT $MODEL_OPT $ARCHIVE_OPT \\\n && echo \". $DOMAIN_HOME/bin/setDomainEnv.sh\" >> /u01/oracle/.bashrc \\\n && rm -rf $PROPERTIES_FILE_DIR\n#   Mount the domain home and the WDT home for easy access.\nVOLUME $DOMAIN_HOME\nVOLUME $WDT_HOME\n#   Expose admin server, managed server port and domain debug port\nEXPOSE $ADMIN_PORT $MANAGED_SERVER_PORT $DEBUG_PORT\nWORKDIR $DOMAIN_HOME\n#   Define default command to start Admin Server in a container.\nCMD [\"/u01/oracle/startAdminServer.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# Copyright (c) 2018, 2019 Oracle and/or its affiliates. All rights reserved.\n#\n# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.\n#\n#  ORACLE DOCKERFILES PROJECT\n#  --------------------------\n#  This Dockerfile extends the Oracle WebLogic image by creating a sample domain.\n#\n#  Util scripts are copied into the image enabling users to plug NodeManager\n#  automatically into the AdminServer running on another container.\n#\n#  PREREQUISITES:\n#  --------------\n#  This sample requires that a Java JDK 1.8 or greater version must be installed on the machine\n#  running the docker build command, and that the JAVA_HOME environment variable is set to the java home\n#  location. The sample unzips the weblogic-deploy.zip into the image using the java jar command.\n#\n#  HOW TO BUILD THIS IMAGE\n#  -----------------------\n#  Build the deployment archive file using the build-archive.sh script.\n#       $ ./build-archive.sh\n#\n#  Run:\n#       $ sudo docker build \\\n#             --build-arg CUSTOM_ADMIN_HOST=wlsadmin \\\n#             --build-arg CUSTOM_ADMIN_PORT=7001 \\\n#             --build-arg CUSTOM_ADMIN_NAME=7001 \\\n#             --build-arg CUSTOM_MANAGED_SERVER_PORT=8001 \\\n#             --build-arg CUSTOM_DOMAIN_NAME=base_domain \\\n#             --build-arg CUSTOM_DEBUG_PORT=8453 \\\n#             --build-arg WDT_MODEL=simple-topology.yaml \\\n#             --build-arg WDT_ARCHIVE=archive.zip \\\n#             --build-arg WDT_VARIABLE=properties/docker-build/domain.properties \\\n#             --force-rm=true \\\n#             -t 12213-domain-home-in-image-wdt .\n#\n#  If the ADMIN_HOST, ADMIN_PORT, MS_PORT, DOMAIN_NAME are not provided, the variables \n#  are set to default values. (The values shown in the build statement). \n#\n#  You must insure that the build arguments align with the values in the model. \n#  The sample model replaces the attributes with tokens that are resolved from values in the\n#  corresponding property file domain.properties. The container-scripts/setEnv.sh script\n#  demonstrates parsing the variable file to build a string of --build-args that can\n#  be passed on the docker build command.\n#\n#  Pull base image\n#  ---------------\n#  FROM store/oracle/weblogic:12.2.1.3\nFROM store/oracle/weblogic:12.2.1.3-dev\n#  Maintainer\n#  ----------\nMAINTAINER Richard Killen <richard.killen@oracle.com>\nARG WDT_ARCHIVE\nARG WDT_VARIABLE\nARG WDT_MODEL\nARG CUSTOM_ADMIN_NAME=admin-server\nARG CUSTOM_ADMIN_HOST=wlsadmin\nARG CUSTOM_ADMIN_PORT=7001\nARG CUSTOM_MANAGED_SERVER_PORT=8001\nARG CUSTOM_DOMAIN_NAME=base_domain\nARG CUSTOM_DEBUG_PORT=8453\n#  Persist arguments - for ports to expose and container to use\n#  Create a placeholder for the manager server name. This will be provided when run the container\n#  Weblogic and Domain locations\n#  The boot.properties will be created under the DOMAIN_HOME when the admin server container is run \n#  WDT installation\n#  ---------------------------\nENV ADMIN_NAME=\"${CUSTOM_ADMIN_NAME}\" \\\n    ADMIN_HOST=\"${CUSTOM_ADMIN_HOST}\" \\\n    ADMIN_PORT=\"${CUSTOM_ADMIN_PORT}\" \\\n    MANAGED_SERVER_NAME=\"${MANAGED_SERVER_NAME}\" \\\n    MANAGED_SERVER_PORT=\"${CUSTOM_MANAGED_SERVER_PORT}\" \\\n    DEBUG_PORT=\"${CUSTOM_DEBUG_PORT}\" \\\n    ORACLE_HOME=\"/u01/oracle\" \\\n    DOMAIN_NAME=\"${CUSTOM_DOMAIN_NAME}\" \\\n    DOMAIN_PARENT=\"${ORACLE_HOME}/user_projects/domains\"\nENV DOMAIN_HOME=\"${DOMAIN_PARENT}/${DOMAIN_NAME}\" \\\n    PROPERTIES_FILE_DIR=\"$ORACLE_HOME/properties\" \\\n    WDT_HOME=\"/u01\" \\\n    SCRIPT_HOME=\"${ORACLE_HOME}\" \\\n    PATH=\"$PATH:${ORACLE_HOME}/oracle_common/common/bin:${ORACLE_HOME}/wlserver/common/bin:${DOMAIN_HOME}:${DOMAIN_HOME}/bin:${ORACLE_HOME}\"\nCOPY weblogic-deploy.zip ${WDT_HOME}\nCOPY container-scripts/* ${SCRIPT_HOME}/\n#  Create the properties file directory and the domain home parent with the correct permissions / owner. \n#  Unzip and install the WDT image and change the permissions / owner.\nUSER root\nRUN chmod +xw ${SCRIPT_HOME}/*.sh \\\n && chown -R oracle:oracle ${SCRIPT_HOME} \\\n && mkdir -p +xwr $PROPERTIES_FILE_DIR \\\n && chown -R oracle:oracle $PROPERTIES_FILE_DIR \\\n && mkdir -p $DOMAIN_PARENT \\\n && chown -R oracle:oracle $DOMAIN_PARENT \\\n && chmod -R a+xwr $DOMAIN_PARENT \\\n && cd ${WDT_HOME} \\\n && $JAVA_HOME/bin/jar xf weblogic-deploy.zip \\\n && rm weblogic-deploy.zip \\\n && chmod +xw weblogic-deploy/bin/*.sh \\\n && chmod -R +xw weblogic-deploy/lib/python \\\n && chown -R oracle:oracle weblogic-deploy\n#  Persist the WDT tool home location\nENV WDT_HOME=\"$WDT_HOME/weblogic-deploy\"\n#  Copy the WDT model, archive file, variable file and credential secrets to the property file directory.\n#  These files will be removed after the image is built.\n#  Be sure to build with --force-rm to eliminate this container layer\nCOPY ${WDT_MODEL} ${WDT_ARCHIVE} ${WDT_VARIABLE} properties/docker-build/*.properties ${PROPERTIES_FILE_DIR}/\n#  --chown for COPY is available in docker version 18 'COPY --chown oracle:oracle'\nRUN chown -R oracle:oracle ${PROPERTIES_FILE_DIR}\n#  Create the domain home in the docker image.\n#\n#  The create domain tool creates a domain at the DOMAIN_HOME location\n#  The domain name is set using the value in the model / variable files \n#  The domain name can be different from the DOMAIN_HOME domain folder name.\n#\n#  Set WORKDIR for @@PWD@@ global token in model file\nWORKDIR $ORACLE_HOME\nUSER oracle\nRUN if [ -n \"$WDT_MODEL\" ] ; then MODEL_OPT=\"-model_file $PROPERTIES_FILE_DIR/${WDT_MODEL##*/}\" ; fi \\\n && if [ -n \"$WDT_ARCHIVE\" ] ; then ARCHIVE_OPT=\"-archive_file $PROPERTIES_FILE_DIR/${WDT_ARCHIVE##*/}\" ; fi \\\n && if [ -n \"$WDT_VARIABLE\" ] ; then VARIABLE_OPT=\"-variable_file $PROPERTIES_FILE_DIR/${WDT_VARIABLE##*/}\" ; fi \\\n && ${WDT_HOME}/bin/createDomain.sh -oracle_home $ORACLE_HOME -java_home $JAVA_HOME -domain_home $DOMAIN_HOME -domain_type WLS $VARIABLE_OPT $MODEL_OPT $ARCHIVE_OPT \\\n && echo \". $DOMAIN_HOME/bin/setDomainEnv.sh\" >> /u01/oracle/.bashrc \\\n && rm -rf $PROPERTIES_FILE_DIR\n#  Mount the domain home and the WDT home for easy access.\nVOLUME $DOMAIN_HOME\nVOLUME $WDT_HOME\n#  Expose admin server, managed server port and domain debug port\nEXPOSE $ADMIN_PORT $MANAGED_SERVER_PORT $DEBUG_PORT\nWORKDIR $DOMAIN_HOME\n#  Define default command to start Admin Server in a container.\nCMD [\"/u01/oracle/startAdminServer.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"226d27b94d33c0e903a66c980d12921a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  Copyright (c) 2018, 2019 Oracle and/or its affiliates. All rights reserved.\n#\n#  Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.\n#\n#   ORACLE DOCKERFILES PROJECT\n#   --------------------------\n#   This Dockerfile extends the Oracle WebLogic image by creating a sample domain.\n#\n#   Util scripts are copied into the image enabling users to plug NodeManager\n#   automatically into the AdminServer running on another container.\n#\n#   PREREQUISITES:\n#   --------------\n#   This sample requires that a Java JDK 1.8 or greater version must be installed on the machine\n#   running the docker build command, and that the JAVA_HOME environment variable is set to the java home\n#   location. The sample unzips the weblogic-deploy.zip into the image using the java jar command.\n#\n#   HOW TO BUILD THIS IMAGE\n#   -----------------------\n#   Build the deployment archive file using the build-archive.sh script.\n#        $ ./build-archive.sh\n#\n#   Run:\n#        $ sudo docker build \\\n#              --build-arg CUSTOM_ADMIN_HOST=wlsadmin \\\n#              --build-arg CUSTOM_ADMIN_PORT=7001 \\\n#              --build-arg CUSTOM_ADMIN_NAME=7001 \\\n#              --build-arg CUSTOM_MANAGED_SERVER_PORT=8001 \\\n#              --build-arg CUSTOM_DOMAIN_NAME=base_domain \\\n#              --build-arg CUSTOM_DEBUG_PORT=8453 \\\n#              --build-arg WDT_MODEL=simple-topology.yaml \\\n#              --build-arg WDT_ARCHIVE=archive.zip \\\n#              --build-arg WDT_VARIABLE=properties/docker-build/domain.properties \\\n#              --force-rm=true \\\n#              -t 12213-domain-home-in-image-wdt .\n#\n#   If the ADMIN_HOST, ADMIN_PORT, MS_PORT, DOMAIN_NAME are not provided, the variables \n#   are set to default values. (The values shown in the build statement). \n#\n#   You must insure that the build arguments align with the values in the model. \n#   The sample model replaces the attributes with tokens that are resolved from values in the\n#   corresponding property file domain.properties. The container-scripts/setEnv.sh script\n#   demonstrates parsing the variable file to build a string of --build-args that can\n#   be passed on the docker build command.\n#\n#   Pull base image\n#   ---------------\n#   FROM store/oracle/weblogic:12.2.1.3\nFROM store/oracle/weblogic:12.2.1.3-dev\n#   Maintainer\n#   ----------\nMAINTAINER Richard Killen <richard.killen@oracle.com>\nARG WDT_ARCHIVE\nARG WDT_VARIABLE\nARG WDT_MODEL\nARG CUSTOM_ADMIN_NAME=admin-server\nARG CUSTOM_ADMIN_HOST=wlsadmin\nARG CUSTOM_ADMIN_PORT=7001\nARG CUSTOM_MANAGED_SERVER_PORT=8001\nARG CUSTOM_DOMAIN_NAME=base_domain\nARG CUSTOM_DEBUG_PORT=8453\n#   Persist arguments - for ports to expose and container to use\n#   Create a placeholder for the manager server name. This will be provided when run the container\n#   Weblogic and Domain locations\n#   The boot.properties will be created under the DOMAIN_HOME when the admin server container is run \n#   WDT installation\n#   ---------------------------\nENV ADMIN_NAME=\"${CUSTOM_ADMIN_NAME}\" \\\n    ADMIN_HOST=\"${CUSTOM_ADMIN_HOST}\" \\\n    ADMIN_PORT=\"${CUSTOM_ADMIN_PORT}\" \\\n    MANAGED_SERVER_NAME=\"${MANAGED_SERVER_NAME}\" \\\n    MANAGED_SERVER_PORT=\"${CUSTOM_MANAGED_SERVER_PORT}\" \\\n    DEBUG_PORT=\"${CUSTOM_DEBUG_PORT}\" \\\n    ORACLE_HOME=\"/u01/oracle\" \\\n    DOMAIN_NAME=\"${CUSTOM_DOMAIN_NAME}\" \\\n    DOMAIN_PARENT=\"${ORACLE_HOME}/user_projects/domains\"\nENV DOMAIN_HOME=\"${DOMAIN_PARENT}/${DOMAIN_NAME}\" \\\n    PROPERTIES_FILE_DIR=\"$ORACLE_HOME/properties\" \\\n    WDT_HOME=\"/u01\" \\\n    SCRIPT_HOME=\"${ORACLE_HOME}\" \\\n    PATH=\"$PATH:${ORACLE_HOME}/oracle_common/common/bin:${ORACLE_HOME}/wlserver/common/bin:${DOMAIN_HOME}:${DOMAIN_HOME}/bin:${ORACLE_HOME}\"\nCOPY weblogic-deploy.zip ${WDT_HOME}\nCOPY container-scripts/* ${SCRIPT_HOME}/\n#   Create the properties file directory and the domain home parent with the correct permissions / owner. \n#   Unzip and install the WDT image and change the permissions / owner.\nUSER root\nRUN chmod +xw ${SCRIPT_HOME}/*.sh \\\n && chown -R oracle:oracle ${SCRIPT_HOME} \\\n && mkdir -p +xwr $PROPERTIES_FILE_DIR \\\n && chown -R oracle:oracle $PROPERTIES_FILE_DIR \\\n && mkdir -p $DOMAIN_PARENT \\\n && chown -R oracle:oracle $DOMAIN_PARENT \\\n && chmod -R a+xwr $DOMAIN_PARENT \\\n && cd ${WDT_HOME} \\\n && $JAVA_HOME/bin/jar xf weblogic-deploy.zip \\\n && rm weblogic-deploy.zip \\\n && chmod +xw weblogic-deploy/bin/*.sh \\\n && chmod -R +xw weblogic-deploy/lib/python \\\n && chown -R oracle:oracle weblogic-deploy\n#   Persist the WDT tool home location\nENV WDT_HOME=\"$WDT_HOME/weblogic-deploy\"\n#   Copy the WDT model, archive file, variable file and credential secrets to the property file directory.\n#   These files will be removed after the image is built.\n#   Be sure to build with --force-rm to eliminate this container layer\nCOPY ${WDT_MODEL} ${WDT_ARCHIVE} ${WDT_VARIABLE} properties/docker-build/*.properties ${PROPERTIES_FILE_DIR}/\n#   --chown for COPY is available in docker version 18 'COPY --chown oracle:oracle'\nRUN chown -R oracle:oracle ${PROPERTIES_FILE_DIR}\n#   Create the domain home in the docker image.\n#\n#   The create domain tool creates a domain at the DOMAIN_HOME location\n#   The domain name is set using the value in the model / variable files \n#   The domain name can be different from the DOMAIN_HOME domain folder name.\n#\n#   Set WORKDIR for @@PWD@@ global token in model file\nWORKDIR $ORACLE_HOME\nUSER oracle\nRUN if [ -n \"$WDT_MODEL\" ] ; then MODEL_OPT=\"-model_file $PROPERTIES_FILE_DIR/${WDT_MODEL##*/}\" ; fi \\\n && if [ -n \"$WDT_ARCHIVE\" ] ; then ARCHIVE_OPT=\"-archive_file $PROPERTIES_FILE_DIR/${WDT_ARCHIVE##*/}\" ; fi \\\n && if [ -n \"$WDT_VARIABLE\" ] ; then VARIABLE_OPT=\"-variable_file $PROPERTIES_FILE_DIR/${WDT_VARIABLE##*/}\" ; fi \\\n && ${WDT_HOME}/bin/createDomain.sh -oracle_home $ORACLE_HOME -java_home $JAVA_HOME -domain_home $DOMAIN_HOME -domain_type WLS $VARIABLE_OPT $MODEL_OPT $ARCHIVE_OPT \\\n && echo \". $DOMAIN_HOME/bin/setDomainEnv.sh\" >> /u01/oracle/.bashrc \\\n && rm -rf $PROPERTIES_FILE_DIR\n#   Mount the domain home and the WDT home for easy access.\nVOLUME $DOMAIN_HOME\nVOLUME $WDT_HOME\n#   Expose admin server, managed server port and domain debug port\nEXPOSE $ADMIN_PORT $MANAGED_SERVER_PORT $DEBUG_PORT\nWORKDIR $DOMAIN_HOME\n#   Define default command to start Admin Server in a container.\nCMD [\"/u01/oracle/startAdminServer.sh\"]\n","originalDockerfileUglifiedHash":"122f259b116b04328ea1be9bee5618d1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/873ee016298887510d35e9d8b68da2ef421fdef5.dockerfile"}