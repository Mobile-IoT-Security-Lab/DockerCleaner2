{"seed":2942559198,"processedDockerfileHash":"8e4cd0de782b812ca160c3d87897eec3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:7\nMAINTAINER Dataverse (support@dataverse.org)\nCOPY glassfish-4.1.zip /tmp\nCOPY weld-osgi-bundle-2.2.10.Final-glassfish4.jar /tmp\nCOPY default.config /tmp\n#   Install dependencies\n#  RUN yum install -y unzip\nRUN yum install -y cronie git java-1.8.0-openjdk-devel nc perl postgresql sha1sum unzip wget\nENV GLASSFISH_DOWNLOAD_SHA1=\"d1a103d06682eb08722fbc9a93089211befaa080\"\nENV GLASSFISH_DIRECTORY=\"\\\"/usr/local/glassfish4\\\"\"\nENV HOST_DNS_ADDRESS=\"\\\"localhost\\\"\"\nENV POSTGRES_DB=\"\\\"dvndb\\\"\"\nENV POSTGRES_USER=\"\\\"dvnapp\\\"\"\nENV RSERVE_USER=\"\\\"rserve\\\"\"\nENV RSERVE_PASSWORD=\"\\\"rserve\\\"\"\n#  RUN exitEarlyBeforeJq\nRUN yum -y install epel-release jq\nCOPY dvinstall.zip /tmp\n#  RUN ls /tmp\n#\nRUN find /tmp\n#\n#  RUN exitEarly\n#   Install Glassfish 4.1\nRUN cd /tmp \\\n && unzip glassfish-4.1.zip \\\n && mv glassfish4 /usr/local \\\n && cd /usr/local/glassfish4/glassfish/modules \\\n && rm weld-osgi-bundle.jar \\\n && cp /tmp/weld-osgi-bundle-2.2.10.Final-glassfish4.jar . \\\n && cd /tmp \\\n && unzip /tmp/dvinstall.zip \\\n && chmod 777 -R /tmp/dvinstall/ \\\n && echo \"Done installing and patching Glassfish\"\nRUN chmod g=u /etc/passwd\nRUN mkdir -p /home/glassfish\nRUN chgrp -R 0 /home/glassfish \\\n && chmod -R g=u /home/glassfish\nRUN mkdir -p /usr/local/glassfish4\nRUN chgrp -R 0 /usr/local/glassfish4 \\\n && chmod -R g=u /usr/local/glassfish4\n#  JHOVE\nRUN cp /tmp/dvinstall/jhove* /usr/local/glassfish4/glassfish/domains/domain1/config\n#  SETUP JVM OPTIONS \nARG DOCKER_BUILD=\"true\" \nRUN echo $DOCKER_BUILD\nRUN /tmp/dvinstall/glassfish-setup.sh\n#  ##glassfish-setup will handle everything in Dockerbuild\n#  #install jdbc driver \nRUN cp /tmp/dvinstall/pgdriver/postgresql-42.2.2.jar /usr/local/glassfish4/glassfish/domains/domain1/lib\n#   Customized persistence xml to avoid database recreation\n#  RUN mkdir -p /tmp/WEB-INF/classes/META-INF/ \n#  COPY WEB-INF/classes/META-INF/persistence.xml /tmp/WEB-INF/classes/META-INF/\n#   Install iRods iCommands\n#  RUN  cd /tmp \\\n#     && yum -y install epel-release \\\n#     && yum -y install ftp://ftp.renci.org/pub/irods/releases/4.1.6/centos7/irods-icommands-4.1.6-centos7-x86_64.rpm \n#  COPY config-glassfish /root/dvinstall\n#  COPY restart-glassfish /root/dvinstall\n#  COPY config-dataverse /root/dvinstall\n#  RUN cd /root/dvinstall && ./config-dataverse\nCOPY ./entrypoint.sh /\n#  COPY ./ddl /root/dvinstall\n#  COPY ./init-postgres /root/dvinstall\n#  COPY ./init-glassfish /root/dvinstall\n#  COPY ./init-dataverse /root/dvinstall\n#  COPY ./setup-all.sh /root/dvinstall\n#  COPY ./setup-irods.sh /root/dvinstall\nCOPY ./Dockerfile /\nEXPOSE 8080/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"dataverse\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:7\nMAINTAINER Dataverse (support@dataverse.org)\nCOPY glassfish-4.1.zip /tmp\nCOPY weld-osgi-bundle-2.2.10.Final-glassfish4.jar /tmp\nCOPY default.config /tmp\n#  Install dependencies\n# RUN yum install -y unzip\nRUN yum install -y cronie git java-1.8.0-openjdk-devel nc perl postgresql sha1sum unzip wget\nENV GLASSFISH_DOWNLOAD_SHA1=\"d1a103d06682eb08722fbc9a93089211befaa080\"\nENV GLASSFISH_DIRECTORY=\"\\\"/usr/local/glassfish4\\\"\"\nENV HOST_DNS_ADDRESS=\"\\\"localhost\\\"\"\nENV POSTGRES_DB=\"\\\"dvndb\\\"\"\nENV POSTGRES_USER=\"\\\"dvnapp\\\"\"\nENV RSERVE_USER=\"\\\"rserve\\\"\"\nENV RSERVE_PASSWORD=\"\\\"rserve\\\"\"\n# RUN exitEarlyBeforeJq\nRUN yum -y install epel-release jq\nCOPY dvinstall.zip /tmp\n# RUN ls /tmp\n#\nRUN find /tmp\n#\n# RUN exitEarly\n#  Install Glassfish 4.1\nRUN cd /tmp \\\n && unzip glassfish-4.1.zip \\\n && mv glassfish4 /usr/local \\\n && cd /usr/local/glassfish4/glassfish/modules \\\n && rm weld-osgi-bundle.jar \\\n && cp /tmp/weld-osgi-bundle-2.2.10.Final-glassfish4.jar . \\\n && cd /tmp \\\n && unzip /tmp/dvinstall.zip \\\n && chmod 777 -R /tmp/dvinstall/ \\\n && echo \"Done installing and patching Glassfish\"\nRUN chmod g=u /etc/passwd\nRUN mkdir -p /home/glassfish\nRUN chgrp -R 0 /home/glassfish \\\n && chmod -R g=u /home/glassfish\nRUN mkdir -p /usr/local/glassfish4\nRUN chgrp -R 0 /usr/local/glassfish4 \\\n && chmod -R g=u /usr/local/glassfish4\n# JHOVE\nRUN cp /tmp/dvinstall/jhove* /usr/local/glassfish4/glassfish/domains/domain1/config\n# SETUP JVM OPTIONS \nARG DOCKER_BUILD=\"true\" \nRUN echo $DOCKER_BUILD\nRUN /tmp/dvinstall/glassfish-setup.sh\n# ##glassfish-setup will handle everything in Dockerbuild\n# #install jdbc driver \nRUN cp /tmp/dvinstall/pgdriver/postgresql-42.2.2.jar /usr/local/glassfish4/glassfish/domains/domain1/lib\n#  Customized persistence xml to avoid database recreation\n# RUN mkdir -p /tmp/WEB-INF/classes/META-INF/ \n# COPY WEB-INF/classes/META-INF/persistence.xml /tmp/WEB-INF/classes/META-INF/\n#  Install iRods iCommands\n# RUN  cd /tmp \\\n#    && yum -y install epel-release \\\n#    && yum -y install ftp://ftp.renci.org/pub/irods/releases/4.1.6/centos7/irods-icommands-4.1.6-centos7-x86_64.rpm \n# COPY config-glassfish /root/dvinstall\n# COPY restart-glassfish /root/dvinstall\n# COPY config-dataverse /root/dvinstall\n# RUN cd /root/dvinstall && ./config-dataverse\nCOPY ./entrypoint.sh /\n# COPY ./ddl /root/dvinstall\n# COPY ./init-postgres /root/dvinstall\n# COPY ./init-glassfish /root/dvinstall\n# COPY ./init-dataverse /root/dvinstall\n# COPY ./setup-all.sh /root/dvinstall\n# COPY ./setup-irods.sh /root/dvinstall\nCOPY ./Dockerfile /\nEXPOSE 8080/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"dataverse\"]\n","injectedSmells":[],"originalDockerfileHash":"2ceb2465f4c9bad3809fa21aaf63e3de","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7\nMAINTAINER Dataverse (support@dataverse.org)\nCOPY glassfish-4.1.zip /tmp\nCOPY weld-osgi-bundle-2.2.10.Final-glassfish4.jar /tmp\nCOPY default.config /tmp\n#   Install dependencies\n#  RUN yum install -y unzip\nRUN yum install -y cronie git java-1.8.0-openjdk-devel nc perl postgresql sha1sum unzip wget\nENV GLASSFISH_DOWNLOAD_SHA1=\"d1a103d06682eb08722fbc9a93089211befaa080\"\nENV GLASSFISH_DIRECTORY=\"\\\"/usr/local/glassfish4\\\"\"\nENV HOST_DNS_ADDRESS=\"\\\"localhost\\\"\"\nENV POSTGRES_DB=\"\\\"dvndb\\\"\"\nENV POSTGRES_USER=\"\\\"dvnapp\\\"\"\nENV RSERVE_USER=\"\\\"rserve\\\"\"\nENV RSERVE_PASSWORD=\"\\\"rserve\\\"\"\n#  RUN exitEarlyBeforeJq\nRUN yum -y install epel-release jq\nCOPY dvinstall.zip /tmp\n#  RUN ls /tmp\n#\nRUN find /tmp\n#\n#  RUN exitEarly\n#   Install Glassfish 4.1\nRUN cd /tmp \\\n && unzip glassfish-4.1.zip \\\n && mv glassfish4 /usr/local \\\n && cd /usr/local/glassfish4/glassfish/modules \\\n && rm weld-osgi-bundle.jar \\\n && cp /tmp/weld-osgi-bundle-2.2.10.Final-glassfish4.jar . \\\n && cd /tmp \\\n && unzip /tmp/dvinstall.zip \\\n && chmod 777 -R /tmp/dvinstall/ \\\n && echo \"Done installing and patching Glassfish\"\nRUN chmod g=u /etc/passwd\nRUN mkdir -p /home/glassfish\nRUN chgrp -R 0 /home/glassfish \\\n && chmod -R g=u /home/glassfish\nRUN mkdir -p /usr/local/glassfish4\nRUN chgrp -R 0 /usr/local/glassfish4 \\\n && chmod -R g=u /usr/local/glassfish4\n#  JHOVE\nRUN cp /tmp/dvinstall/jhove* /usr/local/glassfish4/glassfish/domains/domain1/config\n#  SETUP JVM OPTIONS \nARG DOCKER_BUILD=\"true\" \nRUN echo $DOCKER_BUILD\nRUN /tmp/dvinstall/glassfish-setup.sh\n#  ##glassfish-setup will handle everything in Dockerbuild\n#  #install jdbc driver \nRUN cp /tmp/dvinstall/pgdriver/postgresql-42.2.2.jar /usr/local/glassfish4/glassfish/domains/domain1/lib\n#   Customized persistence xml to avoid database recreation\n#  RUN mkdir -p /tmp/WEB-INF/classes/META-INF/ \n#  COPY WEB-INF/classes/META-INF/persistence.xml /tmp/WEB-INF/classes/META-INF/\n#   Install iRods iCommands\n#  RUN  cd /tmp \\\n#     && yum -y install epel-release \\\n#     && yum -y install ftp://ftp.renci.org/pub/irods/releases/4.1.6/centos7/irods-icommands-4.1.6-centos7-x86_64.rpm \n#  COPY config-glassfish /root/dvinstall\n#  COPY restart-glassfish /root/dvinstall\n#  COPY config-dataverse /root/dvinstall\n#  RUN cd /root/dvinstall && ./config-dataverse\nCOPY ./entrypoint.sh /\n#  COPY ./ddl /root/dvinstall\n#  COPY ./init-postgres /root/dvinstall\n#  COPY ./init-glassfish /root/dvinstall\n#  COPY ./init-dataverse /root/dvinstall\n#  COPY ./setup-all.sh /root/dvinstall\n#  COPY ./setup-irods.sh /root/dvinstall\nCOPY ./Dockerfile /\nEXPOSE 8080/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"dataverse\"]\n","originalDockerfileUglifiedHash":"35626b947154324016f325d93ec44370","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/367a9ca127c476b01a27f9cc432358c11ea4b771.dockerfile"}