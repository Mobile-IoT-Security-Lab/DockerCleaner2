{"seed":1732168629,"processedDockerfileHash":"8607a826c35a311029dba53360afc689","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM floydhub/python-base:v1-gpu-py2\nMAINTAINER Floyd Labs \"support@floydhub.com\"\nENV BAZEL_VERSION=\"0.16.1\"\n#   Add Bazel distribution URI as a package source\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list \\\n && curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -\n#   install older version of bazel because it breaks TF build on every releasae :(\nRUN apt-get update \\\n && apt-get install --no-install-recommends default-jdk-headless bash-completion g++ zlib1g-dev -y \\\n && curl -LO \"https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb\" \\\n && dpkg -i bazel_*.deb \\\n && rm bazel_*.deb \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/*\n#   Install some dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends tcl tk ant apt-utils bc build-essential cmake default-jdk doxygen gfortran golang iptables libav-tools libboost-all-dev libeigen3-dev libfreetype6-dev libhdf5-dev libjpeg-turbo8-dev liblcms2-dev libopenblas-dev liblapack-dev libpng12-dev libprotobuf-dev libsdl2-dev libtiff-dev libtiff5-dev libvncserver-dev libzmq3-dev nano net-tools openmpi-bin pkg-config protobuf-compiler rsync software-properties-common swig unzip vim webp xorg-dev xvfb -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install Git LFS\nRUN apt-get update \\\n && add-apt-repository ppa:git-core/ppa \\\n && curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \\\n && apt-get install --no-install-recommends git-lfs -y \\\n && git lfs install \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/cache/apt/archives/* \\\n && rm -rf /var/lib/apt/lists/*\n#   Install opencv\nARG OPENCV_VERSION\nRUN apt-get update \\\n && apt-get install --no-install-recommends libavcodec-dev libavformat-dev libav-tools libavresample-dev libdc1394-22-dev libgdal-dev libgphoto2-dev libgtk2.0-dev libjasper-dev liblapacke-dev libopencore-amrnb-dev libopencore-amrwb-dev libopenexr-dev libswscale-dev libtbb2 libtbb-dev libtheora-dev libv4l-dev libvorbis-dev libvtk6-dev libx264-dev libxine2-dev libxvidcore-dev qt5-default -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/*\nRUN cd ~/ \\\n && git clone https://github.com/Itseez/opencv.git --branch ${OPENCV_VERSION} --single-branch \\\n && git clone https://github.com/Itseez/opencv_contrib.git --branch ${OPENCV_VERSION} --single-branch \\\n && cd opencv \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -DWITH_QT=ON -DWITH_OPENGL=ON -D WITH_CUDA=ON -D CUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && rm -rf ~/opencv*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM floydhub/python-base:v1-gpu-py2\nMAINTAINER Floyd Labs \"support@floydhub.com\"\nENV BAZEL_VERSION=\"0.16.1\"\n#  Add Bazel distribution URI as a package source\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list \\\n && curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -\n#  install older version of bazel because it breaks TF build on every releasae :(\nRUN apt-get update \\\n && apt-get install --no-install-recommends default-jdk-headless bash-completion g++ zlib1g-dev -y \\\n && curl -LO \"https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb\" \\\n && dpkg -i bazel_*.deb \\\n && rm bazel_*.deb \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/*\n#  Install some dependencies\nRUN apt-get update \\\n && apt-get install tcl tk ant apt-utils bc build-essential cmake default-jdk doxygen gfortran golang iptables libav-tools libboost-all-dev libeigen3-dev libfreetype6-dev libhdf5-dev libjpeg-turbo8-dev liblcms2-dev libopenblas-dev liblapack-dev libpng12-dev libprotobuf-dev libsdl2-dev libtiff-dev libtiff5-dev libvncserver-dev libzmq3-dev nano net-tools openmpi-bin pkg-config protobuf-compiler rsync software-properties-common swig unzip vim webp xorg-dev xvfb -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#  Install Git LFS\nRUN apt-get update \\\n && add-apt-repository ppa:git-core/ppa \\\n && curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \\\n && apt-get install git-lfs -y \\\n && git lfs install \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/cache/apt/archives/* \\\n && rm -rf /var/lib/apt/lists/*\n#  Install opencv\nARG OPENCV_VERSION\nRUN apt-get update \\\n && apt-get install libavcodec-dev libavformat-dev libav-tools libavresample-dev libdc1394-22-dev libgdal-dev libgphoto2-dev libgtk2.0-dev libjasper-dev liblapacke-dev libopencore-amrnb-dev libopencore-amrwb-dev libopenexr-dev libswscale-dev libtbb2 libtbb-dev libtheora-dev libv4l-dev libvorbis-dev libvtk6-dev libx264-dev libxine2-dev libxvidcore-dev qt5-default -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/*\nRUN cd ~/ \\\n && git clone https://github.com/Itseez/opencv.git --branch ${OPENCV_VERSION} --single-branch \\\n && git clone https://github.com/Itseez/opencv_contrib.git --branch ${OPENCV_VERSION} --single-branch \\\n && cd opencv \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -DWITH_QT=ON -DWITH_OPENGL=ON -D WITH_CUDA=ON -D CUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && rm -rf ~/opencv*\n","injectedSmells":[],"originalDockerfileHash":"dabe5a3f746fdc3cc096bf02673ecbb5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM floydhub/python-base:v1-gpu-py2\nMAINTAINER Floyd Labs \"support@floydhub.com\"\nENV BAZEL_VERSION=\"0.16.1\"\n#   Add Bazel distribution URI as a package source\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list \\\n && curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -\n#   install older version of bazel because it breaks TF build on every releasae :(\nRUN apt-get update \\\n && apt-get install --no-install-recommends default-jdk-headless bash-completion g++ zlib1g-dev -y \\\n && curl -LO \"https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb\" \\\n && dpkg -i bazel_*.deb \\\n && rm bazel_*.deb \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/*\n#   Install some dependencies\nRUN apt-get update \\\n && apt-get install tcl tk ant apt-utils bc build-essential cmake default-jdk doxygen gfortran golang iptables libav-tools libboost-all-dev libeigen3-dev libfreetype6-dev libhdf5-dev libjpeg-turbo8-dev liblcms2-dev libopenblas-dev liblapack-dev libpng12-dev libprotobuf-dev libsdl2-dev libtiff-dev libtiff5-dev libvncserver-dev libzmq3-dev nano net-tools openmpi-bin pkg-config protobuf-compiler rsync software-properties-common swig unzip vim webp xorg-dev xvfb -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install Git LFS\nRUN apt-get update \\\n && add-apt-repository ppa:git-core/ppa \\\n && curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \\\n && apt-get install git-lfs -y \\\n && git lfs install \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/cache/apt/archives/* \\\n && rm -rf /var/lib/apt/lists/*\n#   Install opencv\nARG OPENCV_VERSION\nRUN apt-get update \\\n && apt-get install libavcodec-dev libavformat-dev libav-tools libavresample-dev libdc1394-22-dev libgdal-dev libgphoto2-dev libgtk2.0-dev libjasper-dev liblapacke-dev libopencore-amrnb-dev libopencore-amrwb-dev libopenexr-dev libswscale-dev libtbb2 libtbb-dev libtheora-dev libv4l-dev libvorbis-dev libvtk6-dev libx264-dev libxine2-dev libxvidcore-dev qt5-default -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/apt/archives/*\nRUN cd ~/ \\\n && git clone https://github.com/Itseez/opencv.git --branch ${OPENCV_VERSION} --single-branch \\\n && git clone https://github.com/Itseez/opencv_contrib.git --branch ${OPENCV_VERSION} --single-branch \\\n && cd opencv \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -DWITH_QT=ON -DWITH_OPENGL=ON -D WITH_CUDA=ON -D CUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && rm -rf ~/opencv*\n","originalDockerfileUglifiedHash":"d54c382ab7f7e4c6f11ce764c8b11731","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2bb94274dafe71fa69d16542580f3ebfa64abf21.dockerfile"}