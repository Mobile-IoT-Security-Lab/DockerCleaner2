{"seed":95703762,"processedDockerfileHash":"9362f758232ca4bde66a3940b46e9316","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nARG NPROC=4\nARG BUILD_TYPE=Release\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 gfortran=4:5.3.1-1ubuntu1 wget=1.17.1-1ubuntu1.5 git=1:2.7.4-0ubuntu1.10 cmake=3.5.1-1ubuntu3 lcov=1.12-2 valgrind=1:3.11.0-1ubuntu4.2 cppcheck=1.72-1 clang-format-3.7=1:3.7.1-2ubuntu2 libssl-dev=1.0.2g-1ubuntu4.20 libpng-dev libfreetype6-dev=2.6.1-0.1ubuntu2.5 libxft-dev=2.3.2-1 libsqlite3-dev=3.11.0-1ubuntu1.5 libbz2-dev=1.0.6-8ubuntu0.2 libatlas-base-dev=3.10.2-9 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 libopenmpi-dev=1.10.2-8ubuntu1 libhdf5-dev=1.8.16+docs-4ubuntu1.1 python3.5-dev=3.5.2-2ubuntu0~16.04.13 python3-tk=3.5.1-1 pandoc=1.16.0.2~dfsg-1 npm=3.5.2-0ubuntu4 nodejs=4.2.6~dfsg-1ubuntu4.2 nodejs-legacy=4.2.6~dfsg-1ubuntu4.2 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Set up time zone\nRUN echo \"America/New_York\" > /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\nENV PREFIX=\"/scratch\"\nRUN mkdir -p ${PREFIX} \\\n && cd ${PREFIX} \\\n && mkdir archive \\\n && mkdir source \\\n && mkdir build \\\n && mkdir install\n#   install boost\nRUN export BOOST_URL=http://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.bz2 \\\n && export BOOST_SHA256=beae2529f759f6b3bf3f4969a19c2e9d6f0c503edcb2de4a61d1428519fcb3b0 \\\n && export BOOST_ARCHIVE=${PREFIX}/archive/boost_1_63_0.tar.bz2 \\\n && export BOOST_SOURCE_DIR=${PREFIX}/source/boost/1.63.0 \\\n && export BOOST_BUILD_DIR=${PREFIX}/build/boost/1.63.0 \\\n && export BOOST_INSTALL_DIR=/opt/boost/1.63.0 \\\n && wget --quiet ${BOOST_URL} --output-document=${BOOST_ARCHIVE} \\\n && echo \"${BOOST_SHA256} ${BOOST_ARCHIVE}\" | sha256sum -c \\\n && mkdir -p ${BOOST_SOURCE_DIR} \\\n && tar -xf ${BOOST_ARCHIVE} -C ${BOOST_SOURCE_DIR} --strip-components=1 \\\n && cd ${BOOST_SOURCE_DIR} \\\n && ./bootstrap.sh --prefix=${BOOST_INSTALL_DIR} --with-python=python3.5 \\\n && echo \"using mpi ;\" >> project-config.jam \\\n && ./b2 install -j${NPROC} link=shared variant=release --build-dir=${BOOST_BUILD_DIR} \\\n && rm -rf ${BOOST_ARCHIVE} \\\n && rm -rf ${BOOST_BUILD_DIR} \\\n && rm -rf ${BOOST_SOURCE_DIR}\nENV BOOST_DIR=\"/opt/boost/1.63.0\"\n#  ENV LD_LIBRARY_PATH=${BOOST_DIR}/lib:${LD_LIBRARY_PATH}\n#   install TRILINOS\nRUN export TRILINOS_VERSION=12.10.1 \\\n && export TRILINOS_URL=https://github.com/trilinos/Trilinos/archive/trilinos-release-12-10-1.tar.gz \\\n && export TRILINOS_ARCHIVE=${PREFIX}/archive/trilinos-${TRILINOS_VERSION}.tar.xz \\\n && export TRILINOS_SOURCE_DIR=${PREFIX}/source/trilinos/${TRILINOS_VERSION} \\\n && export TRILINOS_BUILD_DIR=${PREFIX}/build/trilinos/${TRILINOS_VERSION} \\\n && export TRILINOS_INSTALL_DIR=/opt/trilinos/${TRILINOS_VERSION} \\\n && wget --quiet ${TRILINOS_URL} --output-document=${TRILINOS_ARCHIVE} \\\n && mkdir -p ${TRILINOS_SOURCE_DIR} \\\n && tar -xf ${TRILINOS_ARCHIVE} -C ${TRILINOS_SOURCE_DIR} --strip-components=1 \\\n && mkdir -p ${TRILINOS_BUILD_DIR} \\\n && cd ${TRILINOS_BUILD_DIR} \\\n && cmake -D CMAKE_INSTALL_PREFIX:PATH=${TRILINOS_INSTALL_DIR} -D CMAKE_BUILD_TYPE:SRTING=RELEASE -D BUILD_SHARED_LIBS:BOOL=ON -D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF -D TPL_ENABLE_MPI:BOOL=ON -D MPI_BASE_DIR:PATH=${MPI_DIR} -D TPL_ENABLE_BLAS:BOOL=ON -D TPL_ENABLE_LAPACK:BOOL=ON -D Trilinos_ASSERT_MISSING_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_Amesos:BOOL=ON -D Trilinos_ENABLE_AztecOO:BOOL=ON -D Trilinos_ENABLE_Epetra:BOOL=ON -D Trilinos_ENABLE_EpetraExt:BOOL=ON -D Trilinos_ENABLE_Ifpack:BOOL=ON -D Trilinos_ENABLE_ML:BOOL=ON -D Trilinos_ENABLE_MueLu:BOOL=ON -D Trilinos_ENABLE_Sacado:BOOL=ON -D Trilinos_ENABLE_Teuchos:BOOL=ON ${TRILINOS_SOURCE_DIR} \\\n && make -j${NPROC} install \\\n && rm -rf ${TRILINOS_ARCHIVE} \\\n && rm -rf ${TRILINOS_BUILD_DIR} \\\n && rm -rf ${TRILINOS_SOURCE_DIR}\nENV TRILINOS_DIR=\"/opt/trilinos/12.10.1\"\n#   install p4est\nRUN export P4EST_VERSION=1.1 \\\n && export P4EST_URL=http://p4est.github.io/release/p4est-${P4EST_VERSION}.tar.gz \\\n && export P4EST_ARCHIVE=${PREFIX}/archive/p4est-${P4EST_VERSION}.tar.gz \\\n && export P4EST_SOURCE_DIR=${PREFIX}/source/p4est/${P4EST_VERSION} \\\n && export P4EST_BUILD_DIR=${PREFIX}/build/p4est/${P4EST_VERSION} \\\n && export P4EST_INSTALL_DIR=/opt/p4est/${P4EST_VERSION} \\\n && mkdir -p ${P4EST_SOURCE_DIR} \\\n && wget --quiet ${P4EST_URL} --output-document=${P4EST_ARCHIVE} \\\n && tar -xf ${P4EST_ARCHIVE} -C ${P4EST_SOURCE_DIR} --strip-components=1 \\\n && mkdir -p ${P4EST_BUILD_DIR} \\\n && cd ${P4EST_BUILD_DIR} \\\n && ${P4EST_SOURCE_DIR}/configure --prefix=${P4EST_INSTALL_DIR} --enable-mpi --enable-shared --disable-static --without-blas CC=mpicc CFLAGS=\"-O2 -fPIC\" CXX=mpicxx F77=mpif77 FC=mpifort \\\n && make -j${NPROC} install \\\n && rm -rf ${P4EST_ARCHIVE} \\\n && rm -rf ${P4EST_BUILD_DIR} \\\n && rm -rf ${P4EST_SOURCE_DIR}\nENV P4EST_DIR=\"/opt/p4est/1.1\"\n#   install dealii\nRUN export DEAL_II_VERSION=8.5.1 \\\n && export DEAL_II_URL=https://github.com/dealii/dealii/releases/download/v${DEAL_II_VERSION}/dealii-${DEAL_II_VERSION}.tar.gz \\\n && export DEAL_II_SHA1=fe8e4748c1d9650487fb5145429a58e8509de276 \\\n && export DEAL_II_ARCHIVE=${PREFIX}/archive/dealii-${DEAL_II_VERSION}.tar.gz \\\n && export DEAL_II_SOURCE_DIR=${PREFIX}/source/dealii/${DEAL_II_VERSION} \\\n && export DEAL_II_BUILD_DIR=${PREFIX}/build/dealii/${DEAL_II_VERSION} \\\n && export DEAL_II_INSTALL_DIR=/opt/dealii/${DEAL_II_VERSION} \\\n && wget --quiet ${DEAL_II_URL} --output-document=${DEAL_II_ARCHIVE} \\\n && echo \"${DEAL_II_SHA1} ${DEAL_II_ARCHIVE}\" | sha1sum -c \\\n && mkdir -p ${DEAL_II_SOURCE_DIR} \\\n && tar -xf ${DEAL_II_ARCHIVE} -C ${DEAL_II_SOURCE_DIR} --strip-components=1 \\\n && mkdir -p ${DEAL_II_BUILD_DIR} \\\n && cd ${DEAL_II_BUILD_DIR} \\\n && cmake -D CMAKE_INSTALL_PREFIX=${DEAL_II_INSTALL_DIR} -D CMAKE_BUILD_TYPE=${BUILD_TYPE} -D DEAL_II_WITH_MPI=ON -D DEAL_II_WITH_CXX11=ON -D CMAKE_Fortran_COMPILER=mpifort -D CMAKE_CXX_COMPILER=mpicxx -D CMAKE_C_COMPILER=mpicc -D BOOST_DIR=${BOOST_DIR} -D P4EST_DIR=${P4EST_DIR} -D TRILINOS_DIR=${TRILINOS_DIR} ${DEAL_II_SOURCE_DIR} \\\n && make -j${NPROC} install \\\n && rm -rf ${DEAL_II_ARCHIVE} \\\n && rm -rf ${DEAL_II_BUILD_DIR} \\\n && rm -rf ${DEAL_II_SOURCE_DIR}\nENV DEAL_II_DIR=\"/opt/dealii/8.5.1\"\nENV LD_LIBRARY_PATH=\"${LAPACK_DIR}/lib:${LD_LIBRARY_PATH}\"\n#   install python requirements using pip\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python3.5 get-pip.py \\\n && rm get-pip.py \\\n && pip3.5 install -U pip --no-cache-dir \\\n && pip3.5 install --no-cache-dir numpy scipy matplotlib cython pypandoc jupyter ipyparallel ipywidgets mpi4py h5py sympy coverage autopep8 docopt jupyterhub \\\n && npm install configurable-http-proxy@4.5.5 -g \\\n && rm -rf ~/.npm\n#   install tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nARG NPROC=4\nARG BUILD_TYPE=Release\nRUN apt-get update \\\n && apt-get install build-essential gfortran wget git cmake lcov valgrind cppcheck clang-format-3.7 libssl-dev libpng-dev libfreetype6-dev libxft-dev libsqlite3-dev libbz2-dev libatlas-base-dev zlib1g-dev libopenmpi-dev libhdf5-dev python3.5-dev python3-tk pandoc npm nodejs nodejs-legacy -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Set up time zone\nRUN echo \"America/New_York\" > /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\nENV PREFIX=\"/scratch\"\nRUN mkdir -p ${PREFIX} \\\n && cd ${PREFIX} \\\n && mkdir archive \\\n && mkdir source \\\n && mkdir build \\\n && mkdir install\n#  install boost\nRUN export BOOST_URL=http://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.bz2 \\\n && export BOOST_SHA256=beae2529f759f6b3bf3f4969a19c2e9d6f0c503edcb2de4a61d1428519fcb3b0 \\\n && export BOOST_ARCHIVE=${PREFIX}/archive/boost_1_63_0.tar.bz2 \\\n && export BOOST_SOURCE_DIR=${PREFIX}/source/boost/1.63.0 \\\n && export BOOST_BUILD_DIR=${PREFIX}/build/boost/1.63.0 \\\n && export BOOST_INSTALL_DIR=/opt/boost/1.63.0 \\\n && wget --quiet ${BOOST_URL} --output-document=${BOOST_ARCHIVE} \\\n && echo \"${BOOST_SHA256} ${BOOST_ARCHIVE}\" | sha256sum -c \\\n && mkdir -p ${BOOST_SOURCE_DIR} \\\n && tar -xf ${BOOST_ARCHIVE} -C ${BOOST_SOURCE_DIR} --strip-components=1 \\\n && cd ${BOOST_SOURCE_DIR} \\\n && ./bootstrap.sh --prefix=${BOOST_INSTALL_DIR} --with-python=python3.5 \\\n && echo \"using mpi ;\" >> project-config.jam \\\n && ./b2 install -j${NPROC} link=shared variant=release --build-dir=${BOOST_BUILD_DIR} \\\n && rm -rf ${BOOST_ARCHIVE} \\\n && rm -rf ${BOOST_BUILD_DIR} \\\n && rm -rf ${BOOST_SOURCE_DIR}\nENV BOOST_DIR=\"/opt/boost/1.63.0\"\n# ENV LD_LIBRARY_PATH=${BOOST_DIR}/lib:${LD_LIBRARY_PATH}\n#  install TRILINOS\nRUN export TRILINOS_VERSION=12.10.1 \\\n && export TRILINOS_URL=https://github.com/trilinos/Trilinos/archive/trilinos-release-12-10-1.tar.gz \\\n && export TRILINOS_ARCHIVE=${PREFIX}/archive/trilinos-${TRILINOS_VERSION}.tar.xz \\\n && export TRILINOS_SOURCE_DIR=${PREFIX}/source/trilinos/${TRILINOS_VERSION} \\\n && export TRILINOS_BUILD_DIR=${PREFIX}/build/trilinos/${TRILINOS_VERSION} \\\n && export TRILINOS_INSTALL_DIR=/opt/trilinos/${TRILINOS_VERSION} \\\n && wget --quiet ${TRILINOS_URL} --output-document=${TRILINOS_ARCHIVE} \\\n && mkdir -p ${TRILINOS_SOURCE_DIR} \\\n && tar -xf ${TRILINOS_ARCHIVE} -C ${TRILINOS_SOURCE_DIR} --strip-components=1 \\\n && mkdir -p ${TRILINOS_BUILD_DIR} \\\n && cd ${TRILINOS_BUILD_DIR} \\\n && cmake -D CMAKE_INSTALL_PREFIX:PATH=${TRILINOS_INSTALL_DIR} -D CMAKE_BUILD_TYPE:SRTING=RELEASE -D BUILD_SHARED_LIBS:BOOL=ON -D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF -D TPL_ENABLE_MPI:BOOL=ON -D MPI_BASE_DIR:PATH=${MPI_DIR} -D TPL_ENABLE_BLAS:BOOL=ON -D TPL_ENABLE_LAPACK:BOOL=ON -D Trilinos_ASSERT_MISSING_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_Amesos:BOOL=ON -D Trilinos_ENABLE_AztecOO:BOOL=ON -D Trilinos_ENABLE_Epetra:BOOL=ON -D Trilinos_ENABLE_EpetraExt:BOOL=ON -D Trilinos_ENABLE_Ifpack:BOOL=ON -D Trilinos_ENABLE_ML:BOOL=ON -D Trilinos_ENABLE_MueLu:BOOL=ON -D Trilinos_ENABLE_Sacado:BOOL=ON -D Trilinos_ENABLE_Teuchos:BOOL=ON ${TRILINOS_SOURCE_DIR} \\\n && make -j${NPROC} install \\\n && rm -rf ${TRILINOS_ARCHIVE} \\\n && rm -rf ${TRILINOS_BUILD_DIR} \\\n && rm -rf ${TRILINOS_SOURCE_DIR}\nENV TRILINOS_DIR=\"/opt/trilinos/12.10.1\"\n#  install p4est\nRUN export P4EST_VERSION=1.1 \\\n && export P4EST_URL=http://p4est.github.io/release/p4est-${P4EST_VERSION}.tar.gz \\\n && export P4EST_ARCHIVE=${PREFIX}/archive/p4est-${P4EST_VERSION}.tar.gz \\\n && export P4EST_SOURCE_DIR=${PREFIX}/source/p4est/${P4EST_VERSION} \\\n && export P4EST_BUILD_DIR=${PREFIX}/build/p4est/${P4EST_VERSION} \\\n && export P4EST_INSTALL_DIR=/opt/p4est/${P4EST_VERSION} \\\n && mkdir -p ${P4EST_SOURCE_DIR} \\\n && wget --quiet ${P4EST_URL} --output-document=${P4EST_ARCHIVE} \\\n && tar -xf ${P4EST_ARCHIVE} -C ${P4EST_SOURCE_DIR} --strip-components=1 \\\n && mkdir -p ${P4EST_BUILD_DIR} \\\n && cd ${P4EST_BUILD_DIR} \\\n && ${P4EST_SOURCE_DIR}/configure --prefix=${P4EST_INSTALL_DIR} --enable-mpi --enable-shared --disable-static --without-blas CC=mpicc CFLAGS=\"-O2 -fPIC\" CXX=mpicxx F77=mpif77 FC=mpifort \\\n && make -j${NPROC} install \\\n && rm -rf ${P4EST_ARCHIVE} \\\n && rm -rf ${P4EST_BUILD_DIR} \\\n && rm -rf ${P4EST_SOURCE_DIR}\nENV P4EST_DIR=\"/opt/p4est/1.1\"\n#  install dealii\nRUN export DEAL_II_VERSION=8.5.1 \\\n && export DEAL_II_URL=https://github.com/dealii/dealii/releases/download/v${DEAL_II_VERSION}/dealii-${DEAL_II_VERSION}.tar.gz \\\n && export DEAL_II_SHA1=fe8e4748c1d9650487fb5145429a58e8509de276 \\\n && export DEAL_II_ARCHIVE=${PREFIX}/archive/dealii-${DEAL_II_VERSION}.tar.gz \\\n && export DEAL_II_SOURCE_DIR=${PREFIX}/source/dealii/${DEAL_II_VERSION} \\\n && export DEAL_II_BUILD_DIR=${PREFIX}/build/dealii/${DEAL_II_VERSION} \\\n && export DEAL_II_INSTALL_DIR=/opt/dealii/${DEAL_II_VERSION} \\\n && wget --quiet ${DEAL_II_URL} --output-document=${DEAL_II_ARCHIVE} \\\n && echo \"${DEAL_II_SHA1} ${DEAL_II_ARCHIVE}\" | sha1sum -c \\\n && mkdir -p ${DEAL_II_SOURCE_DIR} \\\n && tar -xf ${DEAL_II_ARCHIVE} -C ${DEAL_II_SOURCE_DIR} --strip-components=1 \\\n && mkdir -p ${DEAL_II_BUILD_DIR} \\\n && cd ${DEAL_II_BUILD_DIR} \\\n && cmake -D CMAKE_INSTALL_PREFIX=${DEAL_II_INSTALL_DIR} -D CMAKE_BUILD_TYPE=${BUILD_TYPE} -D DEAL_II_WITH_MPI=ON -D DEAL_II_WITH_CXX11=ON -D CMAKE_Fortran_COMPILER=mpifort -D CMAKE_CXX_COMPILER=mpicxx -D CMAKE_C_COMPILER=mpicc -D BOOST_DIR=${BOOST_DIR} -D P4EST_DIR=${P4EST_DIR} -D TRILINOS_DIR=${TRILINOS_DIR} ${DEAL_II_SOURCE_DIR} \\\n && make -j${NPROC} install \\\n && rm -rf ${DEAL_II_ARCHIVE} \\\n && rm -rf ${DEAL_II_BUILD_DIR} \\\n && rm -rf ${DEAL_II_SOURCE_DIR}\nENV DEAL_II_DIR=\"/opt/dealii/8.5.1\"\nENV LD_LIBRARY_PATH=\"${LAPACK_DIR}/lib:${LD_LIBRARY_PATH}\"\n#  install python requirements using pip\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python3.5 get-pip.py \\\n && rm get-pip.py \\\n && pip3.5 install -U pip --no-cache-dir \\\n && pip3.5 install --no-cache-dir numpy scipy matplotlib cython pypandoc jupyter ipyparallel ipywidgets mpi4py h5py sympy coverage autopep8 docopt jupyterhub \\\n && npm install configurable-http-proxy -g \\\n && rm -rf ~/.npm\n#  install tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n","injectedSmells":[],"originalDockerfileHash":"718e19b695936c6cac1f95bc05b452d2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nARG NPROC=4\nARG BUILD_TYPE=Release\nRUN apt-get update \\\n && apt-get install build-essential gfortran wget git cmake lcov valgrind cppcheck clang-format-3.7 libssl-dev libpng-dev libfreetype6-dev libxft-dev libsqlite3-dev libbz2-dev libatlas-base-dev zlib1g-dev libopenmpi-dev libhdf5-dev python3.5-dev python3-tk pandoc npm nodejs nodejs-legacy -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Set up time zone\nRUN echo \"America/New_York\" > /etc/timezone \\\n && dpkg-reconfigure --frontend noninteractive tzdata\nENV PREFIX=\"/scratch\"\nRUN mkdir -p ${PREFIX} \\\n && cd ${PREFIX} \\\n && mkdir archive \\\n && mkdir source \\\n && mkdir build \\\n && mkdir install\n#   install boost\nRUN export BOOST_URL=http://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.bz2 \\\n && export BOOST_SHA256=beae2529f759f6b3bf3f4969a19c2e9d6f0c503edcb2de4a61d1428519fcb3b0 \\\n && export BOOST_ARCHIVE=${PREFIX}/archive/boost_1_63_0.tar.bz2 \\\n && export BOOST_SOURCE_DIR=${PREFIX}/source/boost/1.63.0 \\\n && export BOOST_BUILD_DIR=${PREFIX}/build/boost/1.63.0 \\\n && export BOOST_INSTALL_DIR=/opt/boost/1.63.0 \\\n && wget --quiet ${BOOST_URL} --output-document=${BOOST_ARCHIVE} \\\n && echo \"${BOOST_SHA256} ${BOOST_ARCHIVE}\" | sha256sum -c \\\n && mkdir -p ${BOOST_SOURCE_DIR} \\\n && tar -xf ${BOOST_ARCHIVE} -C ${BOOST_SOURCE_DIR} --strip-components=1 \\\n && cd ${BOOST_SOURCE_DIR} \\\n && ./bootstrap.sh --prefix=${BOOST_INSTALL_DIR} --with-python=python3.5 \\\n && echo \"using mpi ;\" >> project-config.jam \\\n && ./b2 install -j${NPROC} link=shared variant=release --build-dir=${BOOST_BUILD_DIR} \\\n && rm -rf ${BOOST_ARCHIVE} \\\n && rm -rf ${BOOST_BUILD_DIR} \\\n && rm -rf ${BOOST_SOURCE_DIR}\nENV BOOST_DIR=\"/opt/boost/1.63.0\"\n#  ENV LD_LIBRARY_PATH=${BOOST_DIR}/lib:${LD_LIBRARY_PATH}\n#   install TRILINOS\nRUN export TRILINOS_VERSION=12.10.1 \\\n && export TRILINOS_URL=https://github.com/trilinos/Trilinos/archive/trilinos-release-12-10-1.tar.gz \\\n && export TRILINOS_ARCHIVE=${PREFIX}/archive/trilinos-${TRILINOS_VERSION}.tar.xz \\\n && export TRILINOS_SOURCE_DIR=${PREFIX}/source/trilinos/${TRILINOS_VERSION} \\\n && export TRILINOS_BUILD_DIR=${PREFIX}/build/trilinos/${TRILINOS_VERSION} \\\n && export TRILINOS_INSTALL_DIR=/opt/trilinos/${TRILINOS_VERSION} \\\n && wget --quiet ${TRILINOS_URL} --output-document=${TRILINOS_ARCHIVE} \\\n && mkdir -p ${TRILINOS_SOURCE_DIR} \\\n && tar -xf ${TRILINOS_ARCHIVE} -C ${TRILINOS_SOURCE_DIR} --strip-components=1 \\\n && mkdir -p ${TRILINOS_BUILD_DIR} \\\n && cd ${TRILINOS_BUILD_DIR} \\\n && cmake -D CMAKE_INSTALL_PREFIX:PATH=${TRILINOS_INSTALL_DIR} -D CMAKE_BUILD_TYPE:SRTING=RELEASE -D BUILD_SHARED_LIBS:BOOL=ON -D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF -D TPL_ENABLE_MPI:BOOL=ON -D MPI_BASE_DIR:PATH=${MPI_DIR} -D TPL_ENABLE_BLAS:BOOL=ON -D TPL_ENABLE_LAPACK:BOOL=ON -D Trilinos_ASSERT_MISSING_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_Amesos:BOOL=ON -D Trilinos_ENABLE_AztecOO:BOOL=ON -D Trilinos_ENABLE_Epetra:BOOL=ON -D Trilinos_ENABLE_EpetraExt:BOOL=ON -D Trilinos_ENABLE_Ifpack:BOOL=ON -D Trilinos_ENABLE_ML:BOOL=ON -D Trilinos_ENABLE_MueLu:BOOL=ON -D Trilinos_ENABLE_Sacado:BOOL=ON -D Trilinos_ENABLE_Teuchos:BOOL=ON ${TRILINOS_SOURCE_DIR} \\\n && make -j${NPROC} install \\\n && rm -rf ${TRILINOS_ARCHIVE} \\\n && rm -rf ${TRILINOS_BUILD_DIR} \\\n && rm -rf ${TRILINOS_SOURCE_DIR}\nENV TRILINOS_DIR=\"/opt/trilinos/12.10.1\"\n#   install p4est\nRUN export P4EST_VERSION=1.1 \\\n && export P4EST_URL=http://p4est.github.io/release/p4est-${P4EST_VERSION}.tar.gz \\\n && export P4EST_ARCHIVE=${PREFIX}/archive/p4est-${P4EST_VERSION}.tar.gz \\\n && export P4EST_SOURCE_DIR=${PREFIX}/source/p4est/${P4EST_VERSION} \\\n && export P4EST_BUILD_DIR=${PREFIX}/build/p4est/${P4EST_VERSION} \\\n && export P4EST_INSTALL_DIR=/opt/p4est/${P4EST_VERSION} \\\n && mkdir -p ${P4EST_SOURCE_DIR} \\\n && wget --quiet ${P4EST_URL} --output-document=${P4EST_ARCHIVE} \\\n && tar -xf ${P4EST_ARCHIVE} -C ${P4EST_SOURCE_DIR} --strip-components=1 \\\n && mkdir -p ${P4EST_BUILD_DIR} \\\n && cd ${P4EST_BUILD_DIR} \\\n && ${P4EST_SOURCE_DIR}/configure --prefix=${P4EST_INSTALL_DIR} --enable-mpi --enable-shared --disable-static --without-blas CC=mpicc CFLAGS=\"-O2 -fPIC\" CXX=mpicxx F77=mpif77 FC=mpifort \\\n && make -j${NPROC} install \\\n && rm -rf ${P4EST_ARCHIVE} \\\n && rm -rf ${P4EST_BUILD_DIR} \\\n && rm -rf ${P4EST_SOURCE_DIR}\nENV P4EST_DIR=\"/opt/p4est/1.1\"\n#   install dealii\nRUN export DEAL_II_VERSION=8.5.1 \\\n && export DEAL_II_URL=https://github.com/dealii/dealii/releases/download/v${DEAL_II_VERSION}/dealii-${DEAL_II_VERSION}.tar.gz \\\n && export DEAL_II_SHA1=fe8e4748c1d9650487fb5145429a58e8509de276 \\\n && export DEAL_II_ARCHIVE=${PREFIX}/archive/dealii-${DEAL_II_VERSION}.tar.gz \\\n && export DEAL_II_SOURCE_DIR=${PREFIX}/source/dealii/${DEAL_II_VERSION} \\\n && export DEAL_II_BUILD_DIR=${PREFIX}/build/dealii/${DEAL_II_VERSION} \\\n && export DEAL_II_INSTALL_DIR=/opt/dealii/${DEAL_II_VERSION} \\\n && wget --quiet ${DEAL_II_URL} --output-document=${DEAL_II_ARCHIVE} \\\n && echo \"${DEAL_II_SHA1} ${DEAL_II_ARCHIVE}\" | sha1sum -c \\\n && mkdir -p ${DEAL_II_SOURCE_DIR} \\\n && tar -xf ${DEAL_II_ARCHIVE} -C ${DEAL_II_SOURCE_DIR} --strip-components=1 \\\n && mkdir -p ${DEAL_II_BUILD_DIR} \\\n && cd ${DEAL_II_BUILD_DIR} \\\n && cmake -D CMAKE_INSTALL_PREFIX=${DEAL_II_INSTALL_DIR} -D CMAKE_BUILD_TYPE=${BUILD_TYPE} -D DEAL_II_WITH_MPI=ON -D DEAL_II_WITH_CXX11=ON -D CMAKE_Fortran_COMPILER=mpifort -D CMAKE_CXX_COMPILER=mpicxx -D CMAKE_C_COMPILER=mpicc -D BOOST_DIR=${BOOST_DIR} -D P4EST_DIR=${P4EST_DIR} -D TRILINOS_DIR=${TRILINOS_DIR} ${DEAL_II_SOURCE_DIR} \\\n && make -j${NPROC} install \\\n && rm -rf ${DEAL_II_ARCHIVE} \\\n && rm -rf ${DEAL_II_BUILD_DIR} \\\n && rm -rf ${DEAL_II_SOURCE_DIR}\nENV DEAL_II_DIR=\"/opt/dealii/8.5.1\"\nENV LD_LIBRARY_PATH=\"${LAPACK_DIR}/lib:${LD_LIBRARY_PATH}\"\n#   install python requirements using pip\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python3.5 get-pip.py \\\n && rm get-pip.py \\\n && pip3.5 install -U pip --no-cache-dir \\\n && pip3.5 install --no-cache-dir numpy scipy matplotlib cython pypandoc jupyter ipyparallel ipywidgets mpi4py h5py sympy coverage autopep8 docopt jupyterhub \\\n && npm install configurable-http-proxy -g \\\n && rm -rf ~/.npm\n#   install tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n","originalDockerfileUglifiedHash":"7c584b1368502cac246794d161e7718c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/80113527bdd0d46e9afb50d7f3a677c161262c40.dockerfile"}