{"seed":1974274960,"processedDockerfileHash":"c907d9ab2b1a28deda02285a706e72c1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nENV AGENT_DIR=\"/opt/buildAgent\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends lxc=1.0.10-0ubuntu1.1 iptables=1.4.21-1ubuntu1 aufs-tools=1:3.2+20130722-1.1 ca-certificates=20170717~14.04.2 curl=7.35.0-1ubuntu2.20 wget=1.15-1ubuntu1.14.04.5 software-properties-common=0.92.37.8 language-pack-en=1:14.04+20160720 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Fix locale.\nENV LANG=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nRUN locale-gen en_US \\\n && update-locale LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   Install java-8-oracle\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install --no-install-recommends oracle-java8-installer ca-certificates-java=20130815ubuntu1 -y \\\n && rm -rf /var/lib/apt/lists/* /var/cache/oracle-jdk8-installer/*.tar.gz /usr/lib/jvm/java-8-oracle/src.zip /usr/lib/jvm/java-8-oracle/javafx-src.zip /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts \\\n && ln -s /etc/ssl/certs/java/cacerts /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts \\\n && update-ca-certificates\n#   Install docker\nENV DOCKER_BUCKET=\"get.docker.com\"\nENV DOCKER_VERSION=\"1.11.1\"\nENV DOCKER_SHA256=\"893e3c6e89c0cd2c5f1e51ea41bc2dd97f5e791fcfa3cee28445df277836339d\"\nRUN set -x \\\n && curl -fSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-$DOCKER_VERSION.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar -xzvf docker.tgz \\\n && mv docker/* /usr/local/bin/ \\\n && rmdir docker \\\n && rm docker.tgz \\\n && docker -v\nRUN groupadd docker \\\n && adduser --disabled-password --gecos \"\" teamcity \\\n && sed -i -e \"s/%sudo.*$/%sudo ALL=(ALL:ALL) NOPASSWD:ALL/\" /etc/sudoers \\\n && usermod -a -G docker,sudo teamcity\n#   Install jq (from github, repo contains ancient version)\nRUN curl -o /usr/local/bin/jq -SL https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n && chmod +x /usr/local/bin/jq\n#   Install nodejs (from official node dockerfile)\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NODE_VERSION=\"4.2.6\"\nENV NPM_VERSION=\"3.5.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --verify SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n && npm install \"npm@$NPM_VERSION\" -g \\\n && npm cache clear\n#   Install ruby build repositories\nRUN apt-add-repository ppa:brightbox/ruby-ng \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends ruby2.1 ruby2.1-dev ruby=1:1.9.3.4 ruby-switch unzip=6.0-9ubuntu1.5 iptables=1.4.21-1ubuntu1 lxc=1.0.10-0ubuntu1.1 fontconfig=2.11.0-0ubuntu4.2 libffi-dev=3.1~rc1+r3.0.13-12ubuntu0.2 build-essential=11.6ubuntu6 git=1:1.9.1-1ubuntu0.10 python-dev=2.7.5-5ubuntu3 libssl-dev=1.0.1f-1ubuntu2.27 python-pip=1.5.4-1ubuntu4 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install httpie (with SNI), awscli, docker-compose\nRUN pip install pyopenssl==23.1.1 pyasn1==0.4.8 ndg-httpsclient==0.5.1 httpie==3.2.1 awscli==1.27.114 docker-compose==1.6.0 --upgrade\nRUN ruby-switch --set ruby2.1\nRUN npm install bower@1.8.14 grunt-cli@1.4.3 -g\nRUN gem install rake --version 13.0.6 --no-ri --no-rdoc\n#   Install the magic wrapper.\nCOPY wrapdocker /usr/local/bin/wrapdocker\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nVOLUME /var/lib/docker\nVOLUME /opt/buildAgent\nEXPOSE 9090/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nENV AGENT_DIR=\"/opt/buildAgent\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends lxc iptables aufs-tools ca-certificates curl wget software-properties-common language-pack-en -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Fix locale.\nENV LANG=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nRUN locale-gen en_US \\\n && update-locale LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8\n#  grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#  Install java-8-oracle\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install --no-install-recommends oracle-java8-installer ca-certificates-java -y \\\n && rm -rf /var/lib/apt/lists/* /var/cache/oracle-jdk8-installer/*.tar.gz /usr/lib/jvm/java-8-oracle/src.zip /usr/lib/jvm/java-8-oracle/javafx-src.zip /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts \\\n && ln -s /etc/ssl/certs/java/cacerts /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts \\\n && update-ca-certificates\n#  Install docker\nENV DOCKER_BUCKET=\"get.docker.com\"\nENV DOCKER_VERSION=\"1.11.1\"\nENV DOCKER_SHA256=\"893e3c6e89c0cd2c5f1e51ea41bc2dd97f5e791fcfa3cee28445df277836339d\"\nRUN set -x \\\n && curl -fSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-$DOCKER_VERSION.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar -xzvf docker.tgz \\\n && mv docker/* /usr/local/bin/ \\\n && rmdir docker \\\n && rm docker.tgz \\\n && docker -v\nRUN groupadd docker \\\n && adduser --disabled-password --gecos \"\" teamcity \\\n && sed -i -e \"s/%sudo.*$/%sudo ALL=(ALL:ALL) NOPASSWD:ALL/\" /etc/sudoers \\\n && usermod -a -G docker,sudo teamcity\n#  Install jq (from github, repo contains ancient version)\nRUN curl -o /usr/local/bin/jq -SL https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n && chmod +x /usr/local/bin/jq\n#  Install nodejs (from official node dockerfile)\n#  gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NODE_VERSION=\"4.2.6\"\nENV NPM_VERSION=\"3.5.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --verify SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n && npm install \"npm@$NPM_VERSION\" -g \\\n && npm cache clear\n#  Install ruby build repositories\nRUN apt-add-repository ppa:brightbox/ruby-ng \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install ruby2.1 ruby2.1-dev ruby ruby-switch unzip iptables lxc fontconfig libffi-dev build-essential git python-dev libssl-dev python-pip -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install httpie (with SNI), awscli, docker-compose\nRUN pip install pyopenssl pyasn1 ndg-httpsclient httpie awscli docker-compose==1.6.0 --upgrade\nRUN ruby-switch --set ruby2.1\nRUN npm install bower grunt-cli -g\nRUN gem install rake --no-ri --no-rdoc\n#  Install the magic wrapper.\nADD wrapdocker /usr/local/bin/wrapdocker\nADD docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nVOLUME /var/lib/docker\nVOLUME /opt/buildAgent\nEXPOSE 9090/tcp\n","injectedSmells":[],"originalDockerfileHash":"f806b42092ecb24210699fbd75ad0b90","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nENV AGENT_DIR=\"/opt/buildAgent\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends lxc iptables aufs-tools ca-certificates curl wget software-properties-common language-pack-en -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Fix locale.\nENV LANG=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nRUN locale-gen en_US \\\n && update-locale LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   Install java-8-oracle\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install --no-install-recommends oracle-java8-installer ca-certificates-java -y \\\n && rm -rf /var/lib/apt/lists/* /var/cache/oracle-jdk8-installer/*.tar.gz /usr/lib/jvm/java-8-oracle/src.zip /usr/lib/jvm/java-8-oracle/javafx-src.zip /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts \\\n && ln -s /etc/ssl/certs/java/cacerts /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts \\\n && update-ca-certificates\n#   Install docker\nENV DOCKER_BUCKET=\"get.docker.com\"\nENV DOCKER_VERSION=\"1.11.1\"\nENV DOCKER_SHA256=\"893e3c6e89c0cd2c5f1e51ea41bc2dd97f5e791fcfa3cee28445df277836339d\"\nRUN set -x \\\n && curl -fSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-$DOCKER_VERSION.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar -xzvf docker.tgz \\\n && mv docker/* /usr/local/bin/ \\\n && rmdir docker \\\n && rm docker.tgz \\\n && docker -v\nRUN groupadd docker \\\n && adduser --disabled-password --gecos \"\" teamcity \\\n && sed -i -e \"s/%sudo.*$/%sudo ALL=(ALL:ALL) NOPASSWD:ALL/\" /etc/sudoers \\\n && usermod -a -G docker,sudo teamcity\n#   Install jq (from github, repo contains ancient version)\nRUN curl -o /usr/local/bin/jq -SL https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n && chmod +x /usr/local/bin/jq\n#   Install nodejs (from official node dockerfile)\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NODE_VERSION=\"4.2.6\"\nENV NPM_VERSION=\"3.5.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --verify SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.gz$\" SHASUMS256.txt.asc | sha256sum -c - \\\n && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n && npm install \"npm@$NPM_VERSION\" -g \\\n && npm cache clear\n#   Install ruby build repositories\nRUN apt-add-repository ppa:brightbox/ruby-ng \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install ruby2.1 ruby2.1-dev ruby ruby-switch unzip iptables lxc fontconfig libffi-dev build-essential git python-dev libssl-dev python-pip -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install httpie (with SNI), awscli, docker-compose\nRUN pip install pyopenssl pyasn1 ndg-httpsclient httpie awscli docker-compose==1.6.0 --upgrade\nRUN ruby-switch --set ruby2.1\nRUN npm install bower grunt-cli -g\nRUN gem install rake --no-ri --no-rdoc\n#   Install the magic wrapper.\nADD wrapdocker /usr/local/bin/wrapdocker\nADD docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nVOLUME /var/lib/docker\nVOLUME /opt/buildAgent\nEXPOSE 9090/tcp\n","originalDockerfileUglifiedHash":"f11b725e098ca2bfb2edc83a692ee11b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3dba0e0c5b15a0179a5bbf97372528999e1ed117.dockerfile"}