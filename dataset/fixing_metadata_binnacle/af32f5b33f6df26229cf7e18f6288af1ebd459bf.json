{"seed":4090132980,"processedDockerfileHash":"ca576d1b268904d77f91f42f86dde012","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER xenron <xenron@hotmail.com>\n#   install software package\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends vim=2:7.4.052-1ubuntu3.1 tar=1.27.1-1ubuntu0.1 unzip=6.0-9ubuntu1.5 dnsmasq=2.68-1ubuntu0.2 wget=1.15-1ubuntu1.14.04.5 net-tools=1.60-25ubuntu2.1 curl=7.35.0-1ubuntu2.20 openssh-server=1:6.6p1-2ubuntu2.13 nano=2.2.6-1ubuntu1 g++=4:4.8.2-1ubuntu6 autoconf=2.69-6 automake=1:1.14.1-2ubuntu1 libtool=2.4.2-1.7ubuntu1 cmake=2.8.12.2-0ubuntu3 zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 pkg-config=0.26-1ubuntu4 libssl-dev=1.0.1f-1ubuntu2.27 -y\nRUN mkdir -p /opt\n#   Protocol buffers\nRUN wget -q -o out.log -P /tmp https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz \\\n && tar xzf /tmp/protobuf-2.5.0.tar.gz -C /opt \\\n && cd /opt/protobuf-2.5.0 \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make \\\n && make check \\\n && make install \\\n && protoc --version\n#   Clean\nRUN apt-get clean -y \\\n && apt-get autoclean -y \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/ \\\n && rm -rf /tmp\n#   Java Version\nENV JAVA_VERSION_MAJOR=\"8\"\nENV JAVA_VERSION_MINOR=\"111\"\nENV JAVA_VERSION_BUILD=\"14\"\nENV JAVA_PACKAGE=\"jdk\"\n#   Download and unarchive Java\nRUN mkdir -p /opt \\\n && curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz | gunzip -c - | tar -xf - -C /opt \\\n && ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk \\\n && rm -rf /opt/jdk/*src.zip /opt/jdk/lib/missioncontrol /opt/jdk/lib/visualvm /opt/jdk/lib/*javafx* /opt/jdk/jre/lib/plugin.jar /opt/jdk/jre/lib/ext/jfxrt.jar /opt/jdk/jre/bin/javaws /opt/jdk/jre/lib/javaws.jar /opt/jdk/jre/lib/desktop /opt/jdk/jre/plugin /opt/jdk/jre/lib/deploy* /opt/jdk/jre/lib/*javafx* /opt/jdk/jre/lib/*jfx* /opt/jdk/jre/lib/amd64/libdecora_sse.so /opt/jdk/jre/lib/amd64/libprism_*.so /opt/jdk/jre/lib/amd64/libfxplugins.so /opt/jdk/jre/lib/amd64/libglass.so /opt/jdk/jre/lib/amd64/libgstreamer-lite.so /opt/jdk/jre/lib/amd64/libjavafx*.so /opt/jdk/jre/lib/amd64/libjfx*.so\n#   move all configuration files into container\nCOPY files/* /usr/local/\n#   set environment variable \nENV JAVA_HOME=\"/opt/jdk \"\nENV PATH=\"${PATH}:${JAVA_HOME}/bin\"\n#   configure ssh free key access\nRUN mkdir /var/run/sshd \\\n && ssh-keygen -t rsa -f ~/.ssh/id_rsa -P '' \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && mv /usr/local/ssh_config ~/.ssh/config \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   Hadoop\nRUN wget -q -o out.log -P /tmp https://archive.apache.org/dist/hadoop/common/hadoop-2.7.3/hadoop-2.7.3-src.tar.gz \\\n && tar xzf /tmp/hadoop-2.7.3-src.tar.gz -C /opt \\\n && rm /tmp/hadoop-2.7.3-src.tar.gz \\\n && mv /opt/hadoop-2.7.3-src /opt/hadoop\n#   Scala\nRUN wget -q -o out.log -P /tmp http://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz \\\n && tar xzf /tmp/scala-2.11.8.tgz -C /opt \\\n && rm /tmp/scala-2.11.8.tgz \\\n && mv /opt/scala-2.11.8 /opt/scala\n#   Sbt\nRUN wget -q -o out.log -P /tmp https://dl.bintray.com/sbt/native-packages/sbt/0.13.13/sbt-0.13.13.tgz \\\n && tar xzf /tmp/sbt-0.13.13.tgz -C /opt \\\n && rm /tmp/sbt-0.13.13.tgz \\\n && mv /opt/sbt-launcher-packaging-0.13.13 /opt/sbt\n#   Spark\nRUN wget -q -o out.log -P /tmp https://archive.apache.org/dist/spark/spark-1.6.3/spark-1.6.3.tgz \\\n && tar xzf /tmp/spark-1.6.3.tgz -C /opt \\\n && rm /tmp/spark-1.6.3.tgz \\\n && mv /opt/spark-1.6.3 /opt/spark\nRUN mv /usr/local/bashrc ~/.bashrc\nRUN . ~/.bashrc \\\n && cd /opt/spark \\\n && sbt assembly -Pyarn -Phadoop-2.7 -Pspark-ganglia-lgpl -Pkinesis-asl -Phive\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER xenron <xenron@hotmail.com>\n#  install software package\nRUN apt-get update -y \\\n && apt-get install vim tar unzip dnsmasq wget net-tools curl openssh-server nano g++ autoconf automake libtool cmake zlib1g-dev pkg-config libssl-dev -y\nRUN mkdir -p /opt\n#  Protocol buffers\nRUN wget -q -o out.log -P /tmp https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz \\\n && tar xzf /tmp/protobuf-2.5.0.tar.gz -C /opt \\\n && cd /opt/protobuf-2.5.0 \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make \\\n && make check \\\n && make install \\\n && protoc --version\n#  Clean\nRUN apt-get clean -y \\\n && apt-get autoclean -y \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/ \\\n && rm -rf /tmp\n#  Java Version\nENV JAVA_VERSION_MAJOR=\"8\"\nENV JAVA_VERSION_MINOR=\"111\"\nENV JAVA_VERSION_BUILD=\"14\"\nENV JAVA_PACKAGE=\"jdk\"\n#  Download and unarchive Java\nRUN mkdir -p /opt \\\n && curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz | gunzip -c - | tar -xf - -C /opt \\\n && ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk \\\n && rm -rf /opt/jdk/*src.zip /opt/jdk/lib/missioncontrol /opt/jdk/lib/visualvm /opt/jdk/lib/*javafx* /opt/jdk/jre/lib/plugin.jar /opt/jdk/jre/lib/ext/jfxrt.jar /opt/jdk/jre/bin/javaws /opt/jdk/jre/lib/javaws.jar /opt/jdk/jre/lib/desktop /opt/jdk/jre/plugin /opt/jdk/jre/lib/deploy* /opt/jdk/jre/lib/*javafx* /opt/jdk/jre/lib/*jfx* /opt/jdk/jre/lib/amd64/libdecora_sse.so /opt/jdk/jre/lib/amd64/libprism_*.so /opt/jdk/jre/lib/amd64/libfxplugins.so /opt/jdk/jre/lib/amd64/libglass.so /opt/jdk/jre/lib/amd64/libgstreamer-lite.so /opt/jdk/jre/lib/amd64/libjavafx*.so /opt/jdk/jre/lib/amd64/libjfx*.so\n#  move all configuration files into container\nADD files/* /usr/local/\n#  set environment variable \nENV JAVA_HOME=\"/opt/jdk \"\nENV PATH=\"${PATH}:${JAVA_HOME}/bin\"\n#  configure ssh free key access\nRUN mkdir /var/run/sshd \\\n && ssh-keygen -t rsa -f ~/.ssh/id_rsa -P '' \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && mv /usr/local/ssh_config ~/.ssh/config \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#  Hadoop\nRUN wget -q -o out.log -P /tmp https://archive.apache.org/dist/hadoop/common/hadoop-2.7.3/hadoop-2.7.3-src.tar.gz \\\n && tar xzf /tmp/hadoop-2.7.3-src.tar.gz -C /opt \\\n && rm /tmp/hadoop-2.7.3-src.tar.gz \\\n && mv /opt/hadoop-2.7.3-src /opt/hadoop\n#  Scala\nRUN wget -q -o out.log -P /tmp http://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz \\\n && tar xzf /tmp/scala-2.11.8.tgz -C /opt \\\n && rm /tmp/scala-2.11.8.tgz \\\n && mv /opt/scala-2.11.8 /opt/scala\n#  Sbt\nRUN wget -q -o out.log -P /tmp https://dl.bintray.com/sbt/native-packages/sbt/0.13.13/sbt-0.13.13.tgz \\\n && tar xzf /tmp/sbt-0.13.13.tgz -C /opt \\\n && rm /tmp/sbt-0.13.13.tgz \\\n && mv /opt/sbt-launcher-packaging-0.13.13 /opt/sbt\n#  Spark\nRUN wget -q -o out.log -P /tmp https://archive.apache.org/dist/spark/spark-1.6.3/spark-1.6.3.tgz \\\n && tar xzf /tmp/spark-1.6.3.tgz -C /opt \\\n && rm /tmp/spark-1.6.3.tgz \\\n && mv /opt/spark-1.6.3 /opt/spark\nRUN mv /usr/local/bashrc ~/.bashrc\nRUN . ~/.bashrc \\\n && cd /opt/spark \\\n && sbt assembly -Pyarn -Phadoop-2.7 -Pspark-ganglia-lgpl -Pkinesis-asl -Phive\n","injectedSmells":[],"originalDockerfileHash":"1e19e5d86503c6403c222fc1f3ca79f4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER xenron <xenron@hotmail.com>\n#   install software package\nRUN apt-get update -y \\\n && apt-get install vim tar unzip dnsmasq wget net-tools curl openssh-server nano g++ autoconf automake libtool cmake zlib1g-dev pkg-config libssl-dev -y\nRUN mkdir -p /opt\n#   Protocol buffers\nRUN wget -q -o out.log -P /tmp https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz \\\n && tar xzf /tmp/protobuf-2.5.0.tar.gz -C /opt \\\n && cd /opt/protobuf-2.5.0 \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make \\\n && make check \\\n && make install \\\n && protoc --version\n#   Clean\nRUN apt-get clean -y \\\n && apt-get autoclean -y \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/ \\\n && rm -rf /tmp\n#   Java Version\nENV JAVA_VERSION_MAJOR=\"8\"\nENV JAVA_VERSION_MINOR=\"111\"\nENV JAVA_VERSION_BUILD=\"14\"\nENV JAVA_PACKAGE=\"jdk\"\n#   Download and unarchive Java\nRUN mkdir -p /opt \\\n && curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz | gunzip -c - | tar -xf - -C /opt \\\n && ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk \\\n && rm -rf /opt/jdk/*src.zip /opt/jdk/lib/missioncontrol /opt/jdk/lib/visualvm /opt/jdk/lib/*javafx* /opt/jdk/jre/lib/plugin.jar /opt/jdk/jre/lib/ext/jfxrt.jar /opt/jdk/jre/bin/javaws /opt/jdk/jre/lib/javaws.jar /opt/jdk/jre/lib/desktop /opt/jdk/jre/plugin /opt/jdk/jre/lib/deploy* /opt/jdk/jre/lib/*javafx* /opt/jdk/jre/lib/*jfx* /opt/jdk/jre/lib/amd64/libdecora_sse.so /opt/jdk/jre/lib/amd64/libprism_*.so /opt/jdk/jre/lib/amd64/libfxplugins.so /opt/jdk/jre/lib/amd64/libglass.so /opt/jdk/jre/lib/amd64/libgstreamer-lite.so /opt/jdk/jre/lib/amd64/libjavafx*.so /opt/jdk/jre/lib/amd64/libjfx*.so\n#   move all configuration files into container\nADD files/* /usr/local/\n#   set environment variable \nENV JAVA_HOME=\"/opt/jdk \"\nENV PATH=\"${PATH}:${JAVA_HOME}/bin\"\n#   configure ssh free key access\nRUN mkdir /var/run/sshd \\\n && ssh-keygen -t rsa -f ~/.ssh/id_rsa -P '' \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && mv /usr/local/ssh_config ~/.ssh/config \\\n && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   Hadoop\nRUN wget -q -o out.log -P /tmp https://archive.apache.org/dist/hadoop/common/hadoop-2.7.3/hadoop-2.7.3-src.tar.gz \\\n && tar xzf /tmp/hadoop-2.7.3-src.tar.gz -C /opt \\\n && rm /tmp/hadoop-2.7.3-src.tar.gz \\\n && mv /opt/hadoop-2.7.3-src /opt/hadoop\n#   Scala\nRUN wget -q -o out.log -P /tmp http://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz \\\n && tar xzf /tmp/scala-2.11.8.tgz -C /opt \\\n && rm /tmp/scala-2.11.8.tgz \\\n && mv /opt/scala-2.11.8 /opt/scala\n#   Sbt\nRUN wget -q -o out.log -P /tmp https://dl.bintray.com/sbt/native-packages/sbt/0.13.13/sbt-0.13.13.tgz \\\n && tar xzf /tmp/sbt-0.13.13.tgz -C /opt \\\n && rm /tmp/sbt-0.13.13.tgz \\\n && mv /opt/sbt-launcher-packaging-0.13.13 /opt/sbt\n#   Spark\nRUN wget -q -o out.log -P /tmp https://archive.apache.org/dist/spark/spark-1.6.3/spark-1.6.3.tgz \\\n && tar xzf /tmp/spark-1.6.3.tgz -C /opt \\\n && rm /tmp/spark-1.6.3.tgz \\\n && mv /opt/spark-1.6.3 /opt/spark\nRUN mv /usr/local/bashrc ~/.bashrc\nRUN . ~/.bashrc \\\n && cd /opt/spark \\\n && sbt assembly -Pyarn -Phadoop-2.7 -Pspark-ganglia-lgpl -Pkinesis-asl -Phive\n","originalDockerfileUglifiedHash":"dbd76732cac9aeaae05890059f7c69f5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/af32f5b33f6df26229cf7e18f6288af1ebd459bf.dockerfile"}