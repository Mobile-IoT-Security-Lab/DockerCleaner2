{"seed":707068796,"processedDockerfileHash":"7b16cf19f0ba54dce8e93287d26b7632","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   GGCOM - Docker - OpenZWave v201509141444\n#   Louis T. Getterman IV (@LTGIV)\n#   www.GotGetLLC.com | www.opensour.cc/ggcom/docker/openzwave\n#\n#   Example usage:\n#\n#   Build\n#   $] docker build --tag=openzwave .\n#\n#   Run\n#   $] docker run --rm --interactive --tty --device=\"/dev/ttyACM0:/dev/ttyUSB0\" --entrypoint=/bin/bash --user=root openzwave\n#   $] docker run --rm --interactive --tty --device=\"/dev/ttyACM0:/dev/ttyUSB0\" --entrypoint=/usr/local/bin/MinOZW --user=root openzwave\n#   $] docker run --rm --device=\"/dev/ttyACM0:/dev/ttyUSB0\" --volume=\"$HOME/src/python-openzwave:/opt/pozw\" openzwave \"/opt/pozw/examples/hello_world.py\"\n#\n#   Thanks:\n#\n#   Z-Wave Controller Setup on My Raspberry Pi\n#   http://thomasloughlin.com/z-wave-controller-setup-on-my-raspberry-pi/\n#\n#   Z-Wave support - Home Assistant\n#   https://home-assistant.io/components/zwave.html\n#\n#   Start Small: Calculating sunrise and sunset in Python\n#   http://michelanders.blogspot.com/2010/12/calulating-sunrise-and-sunset-in-python.html\n#\n#   YAML parsing and Python? - Stack Overflow\n#   https://stackoverflow.com/questions/6866600/yaml-parsing-and-python\n#\n#  ###############################################################################\nFROM debian:latest\nMAINTAINER GotGet, LLC <contact+docker@gotgetllc.com>\n#   Initial prerequisites\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-transport-https=2.6.0 build-essential=12.9ubuntu3 curl=7.88.1-7ubuntu1 g++=4:12.2.0-3ubuntu1 gcc=4:12.2.0-3ubuntu1 git-core libbz2-dev=1.0.8-5build1 libmariadb-client-lgpl-dev libmysqlclient-dev=8.0.32-0ubuntu4 libreadline-dev=8.2-1.3 libsqlite3-dev=3.40.1-1 libssl-dev=3.0.8-1ubuntu1 libudev-dev=252.5-2ubuntu3 libyaml-dev=0.2.5-1 make=4.3-4.1build1 nano=7.2-1 sudo=1.9.13p1-1ubuntu2 zlib1g-dev=1:1.2.13.dfsg-1ubuntu4 pkg-config=1.8.1-1ubuntu2 -y\n#   Create a user and reciprocal environment variables\nRUN adduser --disabled-password --gecos \"\" python_user\nRUN usermod -a -G dialout python_user\n#   Set environment variables\nUSER python_user\nENV HOME=\"/home/python_user\"\nENV PYENV_ROOT=\"$HOME/.pyenv\"\nENV PATH=\"$PYENV_ROOT/shims:$PYENV_ROOT/bin:$HOME/config:$PATH\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib64:$PATH\"\nWORKDIR $HOME\n#   Install Python\nRUN curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash\nRUN curl -L https://raw.githubusercontent.com/gotget/ggcom-docker-pyenv/master/pycompiler.bash | bash -s 2\nRUN pip install pip==23.1 --upgrade\n#  ###############################################################################\nUSER python_user\nWORKDIR $HOME\nRUN pip install Cython==0.29.34\nRUN pip install 'Louie>=1.1'\nRUN pip install 'urwid>=1.1.1'\nRUN pip install gevent==22.10.2\nRUN pip install flask-socketio==5.3.3\n#  ###############################################################################\nUSER python_user\nWORKDIR $HOME\n#  --------------------------------------- Supporting Modules: Databases\n#   Redis key-value store\nRUN pip install redis==4.5.4\n#   SQL ORM\nRUN pip install MySQL-python==1.2.5\nRUN pip install sqlalchemy==2.0.9\nRUN pip install sqlacodegen==2.3.0.post1\n#   Mongo DB\nRUN pip install pymongo==4.3.3\n#  ---------------------------------------/Supporting Modules: Databases\n#  --------------------------------------- Supporting Modules: Communications\n#   MQTT\nRUN pip install paho-mqtt==1.6.1\n#   ZeroMQ\nRUN pip install pyzmq==25.0.2\n#   Distribute execution across many Python interpreters\nRUN pip install execnet==1.9.0\n#  ---------------------------------------/Supporting Modules: Communications\n#  --------------------------------------- Supporting Modules: Calculations\n#   Date calculations utility\nRUN pip install python-dateutil==2.8.2\n#   Geocoding toolbox\nRUN pip install geopy==2.3.0\n#   Astronomical computations (e.g. sunrise and sunset)\nRUN pip install pyephem==9.99\n#   tzinfo object for the local timezone\nRUN pip install tzlocal==4.3\n#  ---------------------------------------/Supporting Modules: Calculations\n#  --------------------------------------- Supporting Modules: Utilities\n#   ConfigObj\nRUN pip install configobj==5.0.8\n#   YAML\nRUN pip install PyYAML==6.0\n#   Universal encoding detector for python 2 and 3\nRUN pip install charade==1.0.3\n#   Platform-independent file locking module\nRUN pip install lockfile==0.12.2\n#  ---------------------------------------/Supporting Modules: Utilities\n#  ###############################################################################\nUSER python_user\nWORKDIR $HOME\n#   Create source directory to work out of\nRUN mkdir -pv $HOME/src/\n#   Clone OpenZWave\nRUN mkdir -p $HOME/src/open-zwave/\n#  RUN\t\t\tgit clone https://github.com/OpenZWave/open-zwave.git --branch \"$( \\\n#  \t\t\t\tgit ls-remote --tags https://github.com/OpenZWave/open-zwave.git | \\\n#  \t\t\t\tsed -e 's/^[[:space:]]*//' | \\\n#  \t\t\t\tgrep --perl-regexp --ignore-case --only-matching '(?<=refs/tags/)v[0-9][\\.0-9]*$' | \\\n#  \t\t\t\tsort --version-sort | \\\n#  \t\t\t\ttail -n 1 \\\n#  \t\t\t\t)\" --single-branch $HOME/src/open-zwave/\n#   As of right now, Python-OpenZWave can't use the most recent tag, and instead needs the most recent repository.\n#   This is fixed in python_openzwave 0.4.x. Feel free to update\nRUN git clone https://github.com/OpenZWave/open-zwave.git $HOME/src/open-zwave/\n#   Compile OpenZWave\nWORKDIR $HOME/src/open-zwave/\nRUN make\n#   Install OpenZWave\nUSER root\nWORKDIR $HOME/src/open-zwave/\nRUN make install \\\n && ldconfig /usr/local/lib64\n#   Install OpenZWave Device Database (https://github.com/OpenZWave/open-zwave/wiki/Adding-Devices)\nUSER python_user\nWORKDIR $HOME\nRUN ln -s /usr/local/etc/openzwave $HOME/config\n#  ###############################################################################\nUSER python_user\nWORKDIR $HOME\n#   Install python_openzwave\nRUN pip install python_openzwave==0.4.19 --install-option=\"--flavor=shared\"\n#  ###############################################################################\nUSER root\nWORKDIR $HOME\n#   Clean-up after ourselves\nRUN apt-get -y purge build-essential gcc git make pkg-config\nRUN apt-get -y autoremove\n#   Delete specific targets\nRUN rm -rf $HOME/src/ $HOME/.cache/pip/ /tmp/*\n#  ###############################################################################\nUSER root\nWORKDIR $HOME\nCOPY init.bash /root/init.bash\nENTRYPOINT [\"/bin/bash\", \"/root/init.bash\"]\n#  ###############################################################################\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  GGCOM - Docker - OpenZWave v201509141444\n#  Louis T. Getterman IV (@LTGIV)\n#  www.GotGetLLC.com | www.opensour.cc/ggcom/docker/openzwave\n#\n#  Example usage:\n#\n#  Build\n#  $] docker build --tag=openzwave .\n#\n#  Run\n#  $] docker run --rm --interactive --tty --device=\"/dev/ttyACM0:/dev/ttyUSB0\" --entrypoint=/bin/bash --user=root openzwave\n#  $] docker run --rm --interactive --tty --device=\"/dev/ttyACM0:/dev/ttyUSB0\" --entrypoint=/usr/local/bin/MinOZW --user=root openzwave\n#  $] docker run --rm --device=\"/dev/ttyACM0:/dev/ttyUSB0\" --volume=\"$HOME/src/python-openzwave:/opt/pozw\" openzwave \"/opt/pozw/examples/hello_world.py\"\n#\n#  Thanks:\n#\n#  Z-Wave Controller Setup on My Raspberry Pi\n#  http://thomasloughlin.com/z-wave-controller-setup-on-my-raspberry-pi/\n#\n#  Z-Wave support - Home Assistant\n#  https://home-assistant.io/components/zwave.html\n#\n#  Start Small: Calculating sunrise and sunset in Python\n#  http://michelanders.blogspot.com/2010/12/calulating-sunrise-and-sunset-in-python.html\n#\n#  YAML parsing and Python? - Stack Overflow\n#  https://stackoverflow.com/questions/6866600/yaml-parsing-and-python\n#\n# ###############################################################################\nFROM debian:latest\nMAINTAINER GotGet, LLC <contact+docker@gotgetllc.com>\n#  Initial prerequisites\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -y \\\n && apt-get install apt-transport-https build-essential curl g++ gcc git-core libbz2-dev libmariadb-client-lgpl-dev libmysqlclient-dev libreadline-dev libsqlite3-dev libssl-dev libudev-dev libyaml-dev make nano sudo zlib1g-dev pkg-config -y\n#  Create a user and reciprocal environment variables\nRUN adduser --disabled-password --gecos \"\" python_user\nRUN usermod -a -G dialout python_user\n#  Set environment variables\nUSER python_user\nENV HOME=\"/home/python_user\"\nENV PYENV_ROOT=\"$HOME/.pyenv\"\nENV PATH=\"$PYENV_ROOT/shims:$PYENV_ROOT/bin:$HOME/config:$PATH\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib64:$PATH\"\nWORKDIR $HOME\n#  Install Python\nRUN curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash\nRUN curl -L https://raw.githubusercontent.com/gotget/ggcom-docker-pyenv/master/pycompiler.bash | bash -s 2\nRUN pip install pip --upgrade\n# ###############################################################################\nUSER python_user\nWORKDIR $HOME\nRUN pip install Cython\nRUN pip install 'Louie>=1.1'\nRUN pip install 'urwid>=1.1.1'\nRUN pip install gevent\nRUN pip install flask-socketio\n# ###############################################################################\nUSER python_user\nWORKDIR $HOME\n# --------------------------------------- Supporting Modules: Databases\n#  Redis key-value store\nRUN pip install redis\n#  SQL ORM\nRUN pip install MySQL-python\nRUN pip install sqlalchemy\nRUN pip install sqlacodegen\n#  Mongo DB\nRUN pip install pymongo\n# ---------------------------------------/Supporting Modules: Databases\n# --------------------------------------- Supporting Modules: Communications\n#  MQTT\nRUN pip install paho-mqtt\n#  ZeroMQ\nRUN pip install pyzmq\n#  Distribute execution across many Python interpreters\nRUN pip install execnet\n# ---------------------------------------/Supporting Modules: Communications\n# --------------------------------------- Supporting Modules: Calculations\n#  Date calculations utility\nRUN pip install python-dateutil\n#  Geocoding toolbox\nRUN pip install geopy\n#  Astronomical computations (e.g. sunrise and sunset)\nRUN pip install pyephem\n#  tzinfo object for the local timezone\nRUN pip install tzlocal\n# ---------------------------------------/Supporting Modules: Calculations\n# --------------------------------------- Supporting Modules: Utilities\n#  ConfigObj\nRUN pip install configobj\n#  YAML\nRUN pip install PyYAML\n#  Universal encoding detector for python 2 and 3\nRUN pip install charade\n#  Platform-independent file locking module\nRUN pip install lockfile\n# ---------------------------------------/Supporting Modules: Utilities\n# ###############################################################################\nUSER python_user\nWORKDIR $HOME\n#  Create source directory to work out of\nRUN mkdir -pv $HOME/src/\n#  Clone OpenZWave\nRUN mkdir -p $HOME/src/open-zwave/\n# RUN\t\t\tgit clone https://github.com/OpenZWave/open-zwave.git --branch \"$( \\\n# \t\t\t\tgit ls-remote --tags https://github.com/OpenZWave/open-zwave.git | \\\n# \t\t\t\tsed -e 's/^[[:space:]]*//' | \\\n# \t\t\t\tgrep --perl-regexp --ignore-case --only-matching '(?<=refs/tags/)v[0-9][\\.0-9]*$' | \\\n# \t\t\t\tsort --version-sort | \\\n# \t\t\t\ttail -n 1 \\\n# \t\t\t\t)\" --single-branch $HOME/src/open-zwave/\n#  As of right now, Python-OpenZWave can't use the most recent tag, and instead needs the most recent repository.\n#  This is fixed in python_openzwave 0.4.x. Feel free to update\nRUN git clone https://github.com/OpenZWave/open-zwave.git $HOME/src/open-zwave/\n#  Compile OpenZWave\nWORKDIR $HOME/src/open-zwave/\nRUN make\n#  Install OpenZWave\nUSER root\nWORKDIR $HOME/src/open-zwave/\nRUN make install \\\n && ldconfig /usr/local/lib64\n#  Install OpenZWave Device Database (https://github.com/OpenZWave/open-zwave/wiki/Adding-Devices)\nUSER python_user\nWORKDIR $HOME\nRUN ln -s /usr/local/etc/openzwave $HOME/config\n# ###############################################################################\nUSER python_user\nWORKDIR $HOME\n#  Install python_openzwave\nRUN pip install python_openzwave --install-option=\"--flavor=shared\"\n# ###############################################################################\nUSER root\nWORKDIR $HOME\n#  Clean-up after ourselves\nRUN apt-get -y purge build-essential gcc git make pkg-config\nRUN apt-get -y autoremove\n#  Delete specific targets\nRUN rm -rf $HOME/src/ $HOME/.cache/pip/ /tmp/*\n# ###############################################################################\nUSER root\nWORKDIR $HOME\nADD init.bash /root/init.bash\nENTRYPOINT [\"/bin/bash\", \"/root/init.bash\"]\n# ###############################################################################\n","injectedSmells":[],"originalDockerfileHash":"4d36c9f055c415789acf12732a25037c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   GGCOM - Docker - OpenZWave v201509141444\n#   Louis T. Getterman IV (@LTGIV)\n#   www.GotGetLLC.com | www.opensour.cc/ggcom/docker/openzwave\n#\n#   Example usage:\n#\n#   Build\n#   $] docker build --tag=openzwave .\n#\n#   Run\n#   $] docker run --rm --interactive --tty --device=\"/dev/ttyACM0:/dev/ttyUSB0\" --entrypoint=/bin/bash --user=root openzwave\n#   $] docker run --rm --interactive --tty --device=\"/dev/ttyACM0:/dev/ttyUSB0\" --entrypoint=/usr/local/bin/MinOZW --user=root openzwave\n#   $] docker run --rm --device=\"/dev/ttyACM0:/dev/ttyUSB0\" --volume=\"$HOME/src/python-openzwave:/opt/pozw\" openzwave \"/opt/pozw/examples/hello_world.py\"\n#\n#   Thanks:\n#\n#   Z-Wave Controller Setup on My Raspberry Pi\n#   http://thomasloughlin.com/z-wave-controller-setup-on-my-raspberry-pi/\n#\n#   Z-Wave support - Home Assistant\n#   https://home-assistant.io/components/zwave.html\n#\n#   Start Small: Calculating sunrise and sunset in Python\n#   http://michelanders.blogspot.com/2010/12/calulating-sunrise-and-sunset-in-python.html\n#\n#   YAML parsing and Python? - Stack Overflow\n#   https://stackoverflow.com/questions/6866600/yaml-parsing-and-python\n#\n#  ###############################################################################\nFROM debian:latest\nMAINTAINER GotGet, LLC <contact+docker@gotgetllc.com>\n#   Initial prerequisites\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -y \\\n && apt-get install apt-transport-https build-essential curl g++ gcc git-core libbz2-dev libmariadb-client-lgpl-dev libmysqlclient-dev libreadline-dev libsqlite3-dev libssl-dev libudev-dev libyaml-dev make nano sudo zlib1g-dev pkg-config -y\n#   Create a user and reciprocal environment variables\nRUN adduser --disabled-password --gecos \"\" python_user\nRUN usermod -a -G dialout python_user\n#   Set environment variables\nUSER python_user\nENV HOME=\"/home/python_user\"\nENV PYENV_ROOT=\"$HOME/.pyenv\"\nENV PATH=\"$PYENV_ROOT/shims:$PYENV_ROOT/bin:$HOME/config:$PATH\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib64:$PATH\"\nWORKDIR $HOME\n#   Install Python\nRUN curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash\nRUN curl -L https://raw.githubusercontent.com/gotget/ggcom-docker-pyenv/master/pycompiler.bash | bash -s 2\nRUN pip install pip --upgrade\n#  ###############################################################################\nUSER python_user\nWORKDIR $HOME\nRUN pip install Cython\nRUN pip install 'Louie>=1.1'\nRUN pip install 'urwid>=1.1.1'\nRUN pip install gevent\nRUN pip install flask-socketio\n#  ###############################################################################\nUSER python_user\nWORKDIR $HOME\n#  --------------------------------------- Supporting Modules: Databases\n#   Redis key-value store\nRUN pip install redis\n#   SQL ORM\nRUN pip install MySQL-python\nRUN pip install sqlalchemy\nRUN pip install sqlacodegen\n#   Mongo DB\nRUN pip install pymongo\n#  ---------------------------------------/Supporting Modules: Databases\n#  --------------------------------------- Supporting Modules: Communications\n#   MQTT\nRUN pip install paho-mqtt\n#   ZeroMQ\nRUN pip install pyzmq\n#   Distribute execution across many Python interpreters\nRUN pip install execnet\n#  ---------------------------------------/Supporting Modules: Communications\n#  --------------------------------------- Supporting Modules: Calculations\n#   Date calculations utility\nRUN pip install python-dateutil\n#   Geocoding toolbox\nRUN pip install geopy\n#   Astronomical computations (e.g. sunrise and sunset)\nRUN pip install pyephem\n#   tzinfo object for the local timezone\nRUN pip install tzlocal\n#  ---------------------------------------/Supporting Modules: Calculations\n#  --------------------------------------- Supporting Modules: Utilities\n#   ConfigObj\nRUN pip install configobj\n#   YAML\nRUN pip install PyYAML\n#   Universal encoding detector for python 2 and 3\nRUN pip install charade\n#   Platform-independent file locking module\nRUN pip install lockfile\n#  ---------------------------------------/Supporting Modules: Utilities\n#  ###############################################################################\nUSER python_user\nWORKDIR $HOME\n#   Create source directory to work out of\nRUN mkdir -pv $HOME/src/\n#   Clone OpenZWave\nRUN mkdir -p $HOME/src/open-zwave/\n#  RUN\t\t\tgit clone https://github.com/OpenZWave/open-zwave.git --branch \"$( \\\n#  \t\t\t\tgit ls-remote --tags https://github.com/OpenZWave/open-zwave.git | \\\n#  \t\t\t\tsed -e 's/^[[:space:]]*//' | \\\n#  \t\t\t\tgrep --perl-regexp --ignore-case --only-matching '(?<=refs/tags/)v[0-9][\\.0-9]*$' | \\\n#  \t\t\t\tsort --version-sort | \\\n#  \t\t\t\ttail -n 1 \\\n#  \t\t\t\t)\" --single-branch $HOME/src/open-zwave/\n#   As of right now, Python-OpenZWave can't use the most recent tag, and instead needs the most recent repository.\n#   This is fixed in python_openzwave 0.4.x. Feel free to update\nRUN git clone https://github.com/OpenZWave/open-zwave.git $HOME/src/open-zwave/\n#   Compile OpenZWave\nWORKDIR $HOME/src/open-zwave/\nRUN make\n#   Install OpenZWave\nUSER root\nWORKDIR $HOME/src/open-zwave/\nRUN make install \\\n && ldconfig /usr/local/lib64\n#   Install OpenZWave Device Database (https://github.com/OpenZWave/open-zwave/wiki/Adding-Devices)\nUSER python_user\nWORKDIR $HOME\nRUN ln -s /usr/local/etc/openzwave $HOME/config\n#  ###############################################################################\nUSER python_user\nWORKDIR $HOME\n#   Install python_openzwave\nRUN pip install python_openzwave --install-option=\"--flavor=shared\"\n#  ###############################################################################\nUSER root\nWORKDIR $HOME\n#   Clean-up after ourselves\nRUN apt-get -y purge build-essential gcc git make pkg-config\nRUN apt-get -y autoremove\n#   Delete specific targets\nRUN rm -rf $HOME/src/ $HOME/.cache/pip/ /tmp/*\n#  ###############################################################################\nUSER root\nWORKDIR $HOME\nADD init.bash /root/init.bash\nENTRYPOINT [\"/bin/bash\", \"/root/init.bash\"]\n#  ###############################################################################\n","originalDockerfileUglifiedHash":"73c746e595a524a90a75817992c72ea6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0faedee4f15e828fc546fe00322bcb5262b26b33.dockerfile"}