{"seed":506363499,"processedDockerfileHash":"9befebd8f3a658459e1fc0f58097c1d4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM lsiobase/alpine:3.8\nMAINTAINER romancin\n#   set version label\nARG BUILD_DATE\nARG VERSION\nARG BUILD_CORES\nLABEL build_version=\"Romancin version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\n#   package version\nARG MEDIAINF_VER=\"19.04\"\nARG RTORRENT_VER=\"v0.9.7\"\nARG LIBTORRENT_VER=\"v0.13.7\"\nARG CURL_VER=\"7.64.1\"\nARG GEOIP_VER=\"1.1.1\"\n#   set env\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV CONTEXT_PATH=\"/\"\nENV CREATE_SUBDIR_BY_TRACKERS=\"no\"\nRUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF `} \\\n && apk add bash-completion ca-certificates fcgi ffmpeg geoip geoip-dev gzip logrotate nginx dtach tar unrar unzip sox wget irssi irssi-perl zlib zlib-dev libxml2-dev perl-archive-zip perl-net-ssleay perl-digest-sha1 git libressl binutils findutils zip php7 php7-cgi php7-fpm php7-json php7-mbstring php7-sockets php7-pear php7-opcache php7-apcu php7-ctype php7-dev php7-phar php7-zip python python3 --no-cache \\\n && apk add autoconf automake cppunit-dev perl-dev file g++ gcc libtool make ncurses-dev build-base libtool subversion linux-headers curl-dev libressl-dev --no-cache --virtual=build-dependencies \\\n && cd /tmp \\\n && mkdir curl \\\n && cd curl \\\n && wget -qO- https://curl.haxx.se/download/curl-${CURL_VER}.tar.gz | tar xz --strip 1 \\\n && ./configure --with-ssl \\\n && make -j ${NB_CORES} \\\n && make install \\\n && ldconfig /usr/bin \\\n && ldconfig /usr/lib \\\n && mkdir -p /usr/share/webapps/rutorrent /defaults/rutorrent-conf \\\n && git clone https://github.com/Novik/ruTorrent.git /usr/share/webapps/rutorrent/ \\\n && mv /usr/share/webapps/rutorrent/conf/* /defaults/rutorrent-conf/ \\\n && rm -rf /defaults/rutorrent-conf/users \\\n && pip3 install CfScrape \\\n && git clone https://github.com/QuickBox/club-QuickBox /usr/share/webapps/rutorrent/plugins/theme/themes/club-QuickBox \\\n && git clone https://github.com/Phlooo/ruTorrent-MaterialDesign /usr/share/webapps/rutorrent/plugins/theme/themes/MaterialDesign \\\n && cd /usr/share/webapps/rutorrent/plugins/ \\\n && git clone https://github.com/orobardet/rutorrent-force_save_session force_save_session \\\n && git clone https://github.com/AceP1983/ruTorrent-plugins \\\n && mv ruTorrent-plugins/* . \\\n && rm -rf ruTorrent-plugins \\\n && apk add cksfv --no-cache \\\n && git clone https://github.com/nelu/rutorrent-thirdparty-plugins.git \\\n && mv rutorrent-thirdparty-plugins/* . \\\n && rm -rf rutorrent-thirdparty-plugins \\\n && cd /usr/share/webapps/rutorrent/ \\\n && chmod 755 plugins/filemanager/scripts/* \\\n && rm -rf plugins/fileupload \\\n && cd /tmp \\\n && git clone https://github.com/mcrapet/plowshare.git \\\n && cd plowshare/ \\\n && make install \\\n && cd .. \\\n && rm -rf plowshare* \\\n && apk add unzip bzip2 --no-cache \\\n && cd /usr/share/webapps/rutorrent/plugins/ \\\n && git clone https://github.com/Gyran/rutorrent-pausewebui pausewebui \\\n && git clone https://github.com/Gyran/rutorrent-ratiocolor ratiocolor \\\n && sed -i 's/changeWhat = \"cell-background\";/changeWhat = \"font\";/g' /usr/share/webapps/rutorrent/plugins/ratiocolor/init.js \\\n && git clone https://github.com/Gyran/rutorrent-instantsearch instantsearch \\\n && git clone https://github.com/xombiemp/rutorrentMobile \\\n && git clone https://github.com/dioltas/AddZip \\\n && git clone https://github.com/Micdu70/geoip2-rutorrent geoip2 \\\n && rm -rf geoip \\\n && mkdir -p /usr/share/GeoIP \\\n && cd /usr/share/GeoIP \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n && tar xzf GeoLite2-City.tar.gz \\\n && tar xzf GeoLite2-Country.tar.gz \\\n && rm -f *.tar.gz \\\n && mv GeoLite2-*/*.mmdb . \\\n && cp *.mmdb /usr/share/webapps/rutorrent/plugins/geoip2/database/ \\\n && pecl install geoip-${GEOIP_VER} \\\n && chmod +x /usr/lib/php7/modules/geoip.so \\\n && echo \";extension=geoip.so\" >> /etc/php7/php.ini \\\n && perl -MCPAN -e 'my $c = \"CPAN::HandleConfig\"; $c->load(doit => 1, autoconfig => 1); $c->edit(prerequisites_policy => \"follow\"); $c->edit(build_requires_install_policy => \"yes\"); $c->commit' \\\n && curl -L http://cpanmin.us | perl - App::cpanminus \\\n && cpanm HTML::Entities XML::LibXML JSON JSON::XS \\\n && cd /tmp \\\n && svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/stable xmlrpc-c \\\n && cd /tmp/xmlrpc-c \\\n && ./configure --with-libwww-ssl --disable-wininet-client --disable-curl-client --disable-libwww-client --disable-abyss-server --disable-cgi-server \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp \\\n && mkdir libtorrent \\\n && cd libtorrent \\\n && wget -qO- https://github.com/rakshasa/libtorrent/archive/${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && ./autogen.sh \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp \\\n && mkdir rtorrent \\\n && cd rtorrent \\\n && wget -qO- https://github.com/rakshasa/rtorrent/archive/${RTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && ./autogen.sh \\\n && ./configure --with-xmlrpc-c \\\n && make -j ${NB_CORES} \\\n && make install \\\n && curl -o /tmp/libmediainfo.tar.gz -L \"http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINF_VER}/MediaInfo_DLL_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \\\n && curl -o /tmp/mediainfo.tar.gz -L \"http://mediaarea.net/download/binary/mediainfo/${MEDIAINF_VER}/MediaInfo_CLI_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \\\n && mkdir -p /tmp/libmediainfo /tmp/mediainfo \\\n && tar xf /tmp/libmediainfo.tar.gz -C /tmp/libmediainfo --strip-components=1 \\\n && tar xf /tmp/mediainfo.tar.gz -C /tmp/mediainfo --strip-components=1 \\\n && cd /tmp/libmediainfo \\\n && ./SO_Compile.sh \\\n && cd /tmp/libmediainfo/ZenLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/libmediainfo/MediaInfoLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/mediainfo \\\n && ./CLI_Compile.sh \\\n && cd /tmp/mediainfo/MediaInfo/Project/GNU/CLI \\\n && make install \\\n && apk del --purge build-dependencies \\\n && rm -rf /tmp/*\n#   install flood webui\nRUN apk add python nodejs nodejs-npm --no-cache \\\n && apk add build-base --no-cache --virtual=build-dependencies \\\n && mkdir /usr/flood \\\n && cd /usr/flood \\\n && git clone https://github.com/jfurrow/flood . \\\n && cp config.template.js config.js \\\n && npm install \\\n && npm cache clean --force \\\n && npm run build \\\n && npm prune --production \\\n && rm config.js \\\n && apk del --purge build-dependencies \\\n && ln -s /usr/local/bin/mediainfo /usr/bin/mediainfo\n#   add local files\nCOPY root/ /\nCOPY VERSION /\n#   ports and volumes\nEXPOSE 443/tcp 51415/tcp 3000/tcp\nVOLUME /config /downloads\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM lsiobase/alpine:3.8\nMAINTAINER romancin\n#  set version label\nARG BUILD_DATE\nARG VERSION\nARG BUILD_CORES\nLABEL build_version=\"Romancin version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\n#  package version\nARG MEDIAINF_VER=\"19.04\"\nARG RTORRENT_VER=\"v0.9.7\"\nARG LIBTORRENT_VER=\"v0.13.7\"\nARG CURL_VER=\"7.64.1\"\nARG GEOIP_VER=\"1.1.1\"\n#  set env\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV CONTEXT_PATH=\"/\"\nENV CREATE_SUBDIR_BY_TRACKERS=\"no\"\nRUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF `} \\\n && apk add --no-cache bash-completion ca-certificates fcgi ffmpeg geoip geoip-dev gzip logrotate nginx dtach tar unrar unzip sox wget irssi irssi-perl zlib zlib-dev libxml2-dev perl-archive-zip perl-net-ssleay perl-digest-sha1 git libressl binutils findutils zip php7 php7-cgi php7-fpm php7-json php7-mbstring php7-sockets php7-pear php7-opcache php7-apcu php7-ctype php7-dev php7-phar php7-zip python python3 \\\n && apk add --no-cache --virtual=build-dependencies autoconf automake cppunit-dev perl-dev file g++ gcc libtool make ncurses-dev build-base libtool subversion linux-headers curl-dev libressl-dev \\\n && cd /tmp \\\n && mkdir curl \\\n && cd curl \\\n && wget -qO- https://curl.haxx.se/download/curl-${CURL_VER}.tar.gz | tar xz --strip 1 \\\n && ./configure --with-ssl \\\n && make -j ${NB_CORES} \\\n && make install \\\n && ldconfig /usr/bin \\\n && ldconfig /usr/lib \\\n && mkdir -p /usr/share/webapps/rutorrent /defaults/rutorrent-conf \\\n && git clone https://github.com/Novik/ruTorrent.git /usr/share/webapps/rutorrent/ \\\n && mv /usr/share/webapps/rutorrent/conf/* /defaults/rutorrent-conf/ \\\n && rm -rf /defaults/rutorrent-conf/users \\\n && pip3 install CfScrape \\\n && git clone https://github.com/QuickBox/club-QuickBox /usr/share/webapps/rutorrent/plugins/theme/themes/club-QuickBox \\\n && git clone https://github.com/Phlooo/ruTorrent-MaterialDesign /usr/share/webapps/rutorrent/plugins/theme/themes/MaterialDesign \\\n && cd /usr/share/webapps/rutorrent/plugins/ \\\n && git clone https://github.com/orobardet/rutorrent-force_save_session force_save_session \\\n && git clone https://github.com/AceP1983/ruTorrent-plugins \\\n && mv ruTorrent-plugins/* . \\\n && rm -rf ruTorrent-plugins \\\n && apk add --no-cache cksfv \\\n && git clone https://github.com/nelu/rutorrent-thirdparty-plugins.git \\\n && mv rutorrent-thirdparty-plugins/* . \\\n && rm -rf rutorrent-thirdparty-plugins \\\n && cd /usr/share/webapps/rutorrent/ \\\n && chmod 755 plugins/filemanager/scripts/* \\\n && rm -rf plugins/fileupload \\\n && cd /tmp \\\n && git clone https://github.com/mcrapet/plowshare.git \\\n && cd plowshare/ \\\n && make install \\\n && cd .. \\\n && rm -rf plowshare* \\\n && apk add --no-cache unzip bzip2 \\\n && cd /usr/share/webapps/rutorrent/plugins/ \\\n && git clone https://github.com/Gyran/rutorrent-pausewebui pausewebui \\\n && git clone https://github.com/Gyran/rutorrent-ratiocolor ratiocolor \\\n && sed -i 's/changeWhat = \"cell-background\";/changeWhat = \"font\";/g' /usr/share/webapps/rutorrent/plugins/ratiocolor/init.js \\\n && git clone https://github.com/Gyran/rutorrent-instantsearch instantsearch \\\n && git clone https://github.com/xombiemp/rutorrentMobile \\\n && git clone https://github.com/dioltas/AddZip \\\n && git clone https://github.com/Micdu70/geoip2-rutorrent geoip2 \\\n && rm -rf geoip \\\n && mkdir -p /usr/share/GeoIP \\\n && cd /usr/share/GeoIP \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n && tar xzf GeoLite2-City.tar.gz \\\n && tar xzf GeoLite2-Country.tar.gz \\\n && rm -f *.tar.gz \\\n && mv GeoLite2-*/*.mmdb . \\\n && cp *.mmdb /usr/share/webapps/rutorrent/plugins/geoip2/database/ \\\n && pecl install geoip-${GEOIP_VER} \\\n && chmod +x /usr/lib/php7/modules/geoip.so \\\n && echo \";extension=geoip.so\" >> /etc/php7/php.ini \\\n && perl -MCPAN -e 'my $c = \"CPAN::HandleConfig\"; $c->load(doit => 1, autoconfig => 1); $c->edit(prerequisites_policy => \"follow\"); $c->edit(build_requires_install_policy => \"yes\"); $c->commit' \\\n && curl -L http://cpanmin.us | perl - App::cpanminus \\\n && cpanm HTML::Entities XML::LibXML JSON JSON::XS \\\n && cd /tmp \\\n && svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/stable xmlrpc-c \\\n && cd /tmp/xmlrpc-c \\\n && ./configure --with-libwww-ssl --disable-wininet-client --disable-curl-client --disable-libwww-client --disable-abyss-server --disable-cgi-server \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp \\\n && mkdir libtorrent \\\n && cd libtorrent \\\n && wget -qO- https://github.com/rakshasa/libtorrent/archive/${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && ./autogen.sh \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp \\\n && mkdir rtorrent \\\n && cd rtorrent \\\n && wget -qO- https://github.com/rakshasa/rtorrent/archive/${RTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && ./autogen.sh \\\n && ./configure --with-xmlrpc-c \\\n && make -j ${NB_CORES} \\\n && make install \\\n && curl -o /tmp/libmediainfo.tar.gz -L \"http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINF_VER}/MediaInfo_DLL_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \\\n && curl -o /tmp/mediainfo.tar.gz -L \"http://mediaarea.net/download/binary/mediainfo/${MEDIAINF_VER}/MediaInfo_CLI_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \\\n && mkdir -p /tmp/libmediainfo /tmp/mediainfo \\\n && tar xf /tmp/libmediainfo.tar.gz -C /tmp/libmediainfo --strip-components=1 \\\n && tar xf /tmp/mediainfo.tar.gz -C /tmp/mediainfo --strip-components=1 \\\n && cd /tmp/libmediainfo \\\n && ./SO_Compile.sh \\\n && cd /tmp/libmediainfo/ZenLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/libmediainfo/MediaInfoLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/mediainfo \\\n && ./CLI_Compile.sh \\\n && cd /tmp/mediainfo/MediaInfo/Project/GNU/CLI \\\n && make install \\\n && apk del --purge build-dependencies \\\n && rm -rf /tmp/*\n#  install flood webui\nRUN apk add --no-cache python nodejs nodejs-npm \\\n && apk add --no-cache --virtual=build-dependencies build-base \\\n && mkdir /usr/flood \\\n && cd /usr/flood \\\n && git clone https://github.com/jfurrow/flood . \\\n && cp config.template.js config.js \\\n && npm install \\\n && npm cache clean --force \\\n && npm run build \\\n && npm prune --production \\\n && rm config.js \\\n && apk del --purge build-dependencies \\\n && ln -s /usr/local/bin/mediainfo /usr/bin/mediainfo\n#  add local files\nCOPY root/ /\nCOPY VERSION /\n#  ports and volumes\nEXPOSE 443/tcp 51415/tcp 3000/tcp\nVOLUME /config /downloads\n","injectedSmells":[],"originalDockerfileHash":"e9427d0db8b517e82aa562751e2e7e6b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM lsiobase/alpine:3.8\nMAINTAINER romancin\n#   set version label\nARG BUILD_DATE\nARG VERSION\nARG BUILD_CORES\nLABEL build_version=\"Romancin version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\n#   package version\nARG MEDIAINF_VER=\"19.04\"\nARG RTORRENT_VER=\"v0.9.7\"\nARG LIBTORRENT_VER=\"v0.13.7\"\nARG CURL_VER=\"7.64.1\"\nARG GEOIP_VER=\"1.1.1\"\n#   set env\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV CONTEXT_PATH=\"/\"\nENV CREATE_SUBDIR_BY_TRACKERS=\"no\"\nRUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF `} \\\n && apk add --no-cache bash-completion ca-certificates fcgi ffmpeg geoip geoip-dev gzip logrotate nginx dtach tar unrar unzip sox wget irssi irssi-perl zlib zlib-dev libxml2-dev perl-archive-zip perl-net-ssleay perl-digest-sha1 git libressl binutils findutils zip php7 php7-cgi php7-fpm php7-json php7-mbstring php7-sockets php7-pear php7-opcache php7-apcu php7-ctype php7-dev php7-phar php7-zip python python3 \\\n && apk add --no-cache --virtual=build-dependencies autoconf automake cppunit-dev perl-dev file g++ gcc libtool make ncurses-dev build-base libtool subversion linux-headers curl-dev libressl-dev \\\n && cd /tmp \\\n && mkdir curl \\\n && cd curl \\\n && wget -qO- https://curl.haxx.se/download/curl-${CURL_VER}.tar.gz | tar xz --strip 1 \\\n && ./configure --with-ssl \\\n && make -j ${NB_CORES} \\\n && make install \\\n && ldconfig /usr/bin \\\n && ldconfig /usr/lib \\\n && mkdir -p /usr/share/webapps/rutorrent /defaults/rutorrent-conf \\\n && git clone https://github.com/Novik/ruTorrent.git /usr/share/webapps/rutorrent/ \\\n && mv /usr/share/webapps/rutorrent/conf/* /defaults/rutorrent-conf/ \\\n && rm -rf /defaults/rutorrent-conf/users \\\n && pip3 install CfScrape \\\n && git clone https://github.com/QuickBox/club-QuickBox /usr/share/webapps/rutorrent/plugins/theme/themes/club-QuickBox \\\n && git clone https://github.com/Phlooo/ruTorrent-MaterialDesign /usr/share/webapps/rutorrent/plugins/theme/themes/MaterialDesign \\\n && cd /usr/share/webapps/rutorrent/plugins/ \\\n && git clone https://github.com/orobardet/rutorrent-force_save_session force_save_session \\\n && git clone https://github.com/AceP1983/ruTorrent-plugins \\\n && mv ruTorrent-plugins/* . \\\n && rm -rf ruTorrent-plugins \\\n && apk add --no-cache cksfv \\\n && git clone https://github.com/nelu/rutorrent-thirdparty-plugins.git \\\n && mv rutorrent-thirdparty-plugins/* . \\\n && rm -rf rutorrent-thirdparty-plugins \\\n && cd /usr/share/webapps/rutorrent/ \\\n && chmod 755 plugins/filemanager/scripts/* \\\n && rm -rf plugins/fileupload \\\n && cd /tmp \\\n && git clone https://github.com/mcrapet/plowshare.git \\\n && cd plowshare/ \\\n && make install \\\n && cd .. \\\n && rm -rf plowshare* \\\n && apk add --no-cache unzip bzip2 \\\n && cd /usr/share/webapps/rutorrent/plugins/ \\\n && git clone https://github.com/Gyran/rutorrent-pausewebui pausewebui \\\n && git clone https://github.com/Gyran/rutorrent-ratiocolor ratiocolor \\\n && sed -i 's/changeWhat = \"cell-background\";/changeWhat = \"font\";/g' /usr/share/webapps/rutorrent/plugins/ratiocolor/init.js \\\n && git clone https://github.com/Gyran/rutorrent-instantsearch instantsearch \\\n && git clone https://github.com/xombiemp/rutorrentMobile \\\n && git clone https://github.com/dioltas/AddZip \\\n && git clone https://github.com/Micdu70/geoip2-rutorrent geoip2 \\\n && rm -rf geoip \\\n && mkdir -p /usr/share/GeoIP \\\n && cd /usr/share/GeoIP \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n && tar xzf GeoLite2-City.tar.gz \\\n && tar xzf GeoLite2-Country.tar.gz \\\n && rm -f *.tar.gz \\\n && mv GeoLite2-*/*.mmdb . \\\n && cp *.mmdb /usr/share/webapps/rutorrent/plugins/geoip2/database/ \\\n && pecl install geoip-${GEOIP_VER} \\\n && chmod +x /usr/lib/php7/modules/geoip.so \\\n && echo \";extension=geoip.so\" >> /etc/php7/php.ini \\\n && perl -MCPAN -e 'my $c = \"CPAN::HandleConfig\"; $c->load(doit => 1, autoconfig => 1); $c->edit(prerequisites_policy => \"follow\"); $c->edit(build_requires_install_policy => \"yes\"); $c->commit' \\\n && curl -L http://cpanmin.us | perl - App::cpanminus \\\n && cpanm HTML::Entities XML::LibXML JSON JSON::XS \\\n && cd /tmp \\\n && svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/stable xmlrpc-c \\\n && cd /tmp/xmlrpc-c \\\n && ./configure --with-libwww-ssl --disable-wininet-client --disable-curl-client --disable-libwww-client --disable-abyss-server --disable-cgi-server \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp \\\n && mkdir libtorrent \\\n && cd libtorrent \\\n && wget -qO- https://github.com/rakshasa/libtorrent/archive/${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && ./autogen.sh \\\n && ./configure \\\n && make -j ${NB_CORES} \\\n && make install \\\n && cd /tmp \\\n && mkdir rtorrent \\\n && cd rtorrent \\\n && wget -qO- https://github.com/rakshasa/rtorrent/archive/${RTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && ./autogen.sh \\\n && ./configure --with-xmlrpc-c \\\n && make -j ${NB_CORES} \\\n && make install \\\n && curl -o /tmp/libmediainfo.tar.gz -L \"http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINF_VER}/MediaInfo_DLL_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \\\n && curl -o /tmp/mediainfo.tar.gz -L \"http://mediaarea.net/download/binary/mediainfo/${MEDIAINF_VER}/MediaInfo_CLI_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \\\n && mkdir -p /tmp/libmediainfo /tmp/mediainfo \\\n && tar xf /tmp/libmediainfo.tar.gz -C /tmp/libmediainfo --strip-components=1 \\\n && tar xf /tmp/mediainfo.tar.gz -C /tmp/mediainfo --strip-components=1 \\\n && cd /tmp/libmediainfo \\\n && ./SO_Compile.sh \\\n && cd /tmp/libmediainfo/ZenLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/libmediainfo/MediaInfoLib/Project/GNU/Library \\\n && make install \\\n && cd /tmp/mediainfo \\\n && ./CLI_Compile.sh \\\n && cd /tmp/mediainfo/MediaInfo/Project/GNU/CLI \\\n && make install \\\n && apk del --purge build-dependencies \\\n && rm -rf /tmp/*\n#   install flood webui\nRUN apk add --no-cache python nodejs nodejs-npm \\\n && apk add --no-cache --virtual=build-dependencies build-base \\\n && mkdir /usr/flood \\\n && cd /usr/flood \\\n && git clone https://github.com/jfurrow/flood . \\\n && cp config.template.js config.js \\\n && npm install \\\n && npm cache clean --force \\\n && npm run build \\\n && npm prune --production \\\n && rm config.js \\\n && apk del --purge build-dependencies \\\n && ln -s /usr/local/bin/mediainfo /usr/bin/mediainfo\n#   add local files\nCOPY root/ /\nCOPY VERSION /\n#   ports and volumes\nEXPOSE 443/tcp 51415/tcp 3000/tcp\nVOLUME /config /downloads\n","originalDockerfileUglifiedHash":"9ec7353ff94032118d21fa1a5488846a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0e916124f45ebdf6a0c4b10c3c853c29ff7e2787.dockerfile"}