{"seed":731884789,"processedDockerfileHash":"a44ef9a803b81617e30b0706b4099d17","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM appsvcorg/nginx-fpm:php7.2.11\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n#   ========\n#   ENV vars\n#   ========\n#\nENV DOCKER_BUILD_HOME=\"\\\"/dockerbuild\\\"\"\n#   drupal \nENV DRUPAL_HOME=\"\\\"/home/site/wwwroot\\\"\"\n#   mariadb\nENV MARIADB_DATA_DIR=\"\\\"/home/data/mysql\\\"\"\nENV MARIADB_LOG_DIR=\"\\\"/home/LogFiles/mysql\\\"\"\n#   phpmyadmin\nENV PHPMYADMIN_SOURCE=\"\\\"/usr/src/phpmyadmin\\\"\"\nENV PHPMYADMIN_HOME=\"\\\"/home/phpmyadmin\\\"\"\n#  nginx\nENV NGINX_LOG_DIR=\"\\\"/home/LogFiles/nginx\\\"\"\n#  php\nENV PHP_HOME=\"\\\"/usr/local/etc/php\\\"\"\nENV PHP_CONF_DIR=\"$PHP_HOME\"\nENV PHP_CONF_FILE=\"$PHP_CONF_DIR\\\"/php.ini\\\"\"\n#   Composer\n#   Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL=\"\\\"https://getcomposer.org/installer\\\"\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_HOME=\"/home/.composer\"\nENV COMPOSER_VERSION=\"\\\"1.6.1\\\"\"\n#   SHA384SUM https://composer.github.io/installer.sha384sum\nENV COMPOSER_SETUP_SHA=\"544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061\"\n#   ====================\n#   Download and Install\n#   ~. essentials\n#   1. Drupal\n#   ====================\nRUN mkdir -p $DOCKER_BUILD_HOME\nWORKDIR $DOCKER_BUILD_HOME\n#   --------\n#   ~. essentials\n#   --------\nRUN set -ex \\\n && apk update \\\n && apk add --no-cache \\\n && docker-php-source extract \\\n && apk add zlib-dev cyrus-sasl-dev git autoconf g++ libtool make pcre-dev tini libintl icu icu-dev libxml2-dev postgresql-dev freetype-dev libjpeg-turbo-dev libpng-dev gmp gmp-dev libmemcached-dev imagemagick-dev libssh2 libssh2-dev libxslt-dev $PHPIZE_DEPS --no-cache --virtual .build-dependencies \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n && docker-php-ext-install -j \"$( nproc ;)\" gd opcache pdo_mysql pdo_pgsql zip \\\n && pecl install apcu \\\n && docker-php-ext-enable apcu \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add $runDeps --virtual .drupal-phpexts-rundeps \\\n && apk del .build-dependencies \\\n && docker-php-source delete RUN set -ex \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \\\n && composer self-update \\\n && rm -rf /home/.composer \\\n && export COMPOSER_HOME='/root/.composer/' \\\n && composer global require consolidation/cgr \\\n && composer_home=$( find / -name .composer ;) \\\n && ln -s $composer_home/vendor/bin/cgr /usr/local/bin/cgr \\\n && cgr drush/drush \\\n && ln -s $composer_home/vendor/bin/drush /usr/local/bin/drush \\\n && apk update \\\n && apk upgrade \\\n && rm -rf /var/cache/apk/*\n#   =========\n#   Configure\n#   =========\nWORKDIR $DRUPAL_HOME\nRUN rm -rf $DOCKER_BUILD_HOME\n#   nginx\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY default.conf /etc/nginx/conf.d/default.conf\n#   php\nCOPY php.ini /usr/local/etc/php/php.ini\nCOPY opcache-recommended.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY www.conf /usr/local/etc/php/conf.d/www.conf\nCOPY zz-docker.conf /usr/local/etc/php-fpm.d/zz-docker.conf\n#   phpmyadmin\nCOPY phpmyadmin-default.conf $PHPMYADMIN_SOURCE/phpmyadmin-default.conf\n#   =====\n#   final\n#   =====\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM appsvcorg/nginx-fpm:php7.2.11\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n#  ========\n#  ENV vars\n#  ========\n#\nENV DOCKER_BUILD_HOME=\"\\\"/dockerbuild\\\"\"\n#  drupal \nENV DRUPAL_HOME=\"\\\"/home/site/wwwroot\\\"\"\n#  mariadb\nENV MARIADB_DATA_DIR=\"\\\"/home/data/mysql\\\"\"\nENV MARIADB_LOG_DIR=\"\\\"/home/LogFiles/mysql\\\"\"\n#  phpmyadmin\nENV PHPMYADMIN_SOURCE=\"\\\"/usr/src/phpmyadmin\\\"\"\nENV PHPMYADMIN_HOME=\"\\\"/home/phpmyadmin\\\"\"\n# nginx\nENV NGINX_LOG_DIR=\"\\\"/home/LogFiles/nginx\\\"\"\n# php\nENV PHP_HOME=\"\\\"/usr/local/etc/php\\\"\"\nENV PHP_CONF_DIR=\"$PHP_HOME\"\nENV PHP_CONF_FILE=\"$PHP_CONF_DIR\\\"/php.ini\\\"\"\n#  Composer\n#  Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL=\"\\\"https://getcomposer.org/installer\\\"\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_HOME=\"/home/.composer\"\nENV COMPOSER_VERSION=\"\\\"1.6.1\\\"\"\n#  SHA384SUM https://composer.github.io/installer.sha384sum\nENV COMPOSER_SETUP_SHA=\"544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061\"\n#  ====================\n#  Download and Install\n#  ~. essentials\n#  1. Drupal\n#  ====================\nRUN mkdir -p $DOCKER_BUILD_HOME\nWORKDIR $DOCKER_BUILD_HOME\n#  --------\n#  ~. essentials\n#  --------\nRUN set -ex \\\n && apk update \\\n && apk add --no-cache \\\n && docker-php-source extract \\\n && apk add --no-cache --virtual .build-dependencies $PHPIZE_DEPS zlib-dev cyrus-sasl-dev git autoconf g++ libtool make pcre-dev tini libintl icu icu-dev libxml2-dev postgresql-dev freetype-dev libjpeg-turbo-dev libpng-dev gmp gmp-dev libmemcached-dev imagemagick-dev libssh2 libssh2-dev libxslt-dev \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n && docker-php-ext-install -j \"$( nproc ;)\" gd opcache pdo_mysql pdo_pgsql zip \\\n && pecl install apcu \\\n && docker-php-ext-enable apcu \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --virtual .drupal-phpexts-rundeps $runDeps \\\n && apk del .build-dependencies \\\n && docker-php-source delete RUN set -ex \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \\\n && composer self-update \\\n && rm -rf /home/.composer \\\n && export COMPOSER_HOME='/root/.composer/' \\\n && composer global require consolidation/cgr \\\n && composer_home=$( find / -name .composer ;) \\\n && ln -s $composer_home/vendor/bin/cgr /usr/local/bin/cgr \\\n && cgr drush/drush \\\n && ln -s $composer_home/vendor/bin/drush /usr/local/bin/drush \\\n && apk update \\\n && apk upgrade \\\n && rm -rf /var/cache/apk/*\n#  =========\n#  Configure\n#  =========\nWORKDIR $DRUPAL_HOME\nRUN rm -rf $DOCKER_BUILD_HOME\n#  nginx\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY default.conf /etc/nginx/conf.d/default.conf\n#  php\nCOPY php.ini /usr/local/etc/php/php.ini\nCOPY opcache-recommended.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY www.conf /usr/local/etc/php/conf.d/www.conf\nCOPY zz-docker.conf /usr/local/etc/php-fpm.d/zz-docker.conf\n#  phpmyadmin\nCOPY phpmyadmin-default.conf $PHPMYADMIN_SOURCE/phpmyadmin-default.conf\n#  =====\n#  final\n#  =====\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"9a33916096ecc430d2572fad2b9facf5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM appsvcorg/nginx-fpm:php7.2.11\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n#   ========\n#   ENV vars\n#   ========\n#\nENV DOCKER_BUILD_HOME=\"\\\"/dockerbuild\\\"\"\n#   drupal \nENV DRUPAL_HOME=\"\\\"/home/site/wwwroot\\\"\"\n#   mariadb\nENV MARIADB_DATA_DIR=\"\\\"/home/data/mysql\\\"\"\nENV MARIADB_LOG_DIR=\"\\\"/home/LogFiles/mysql\\\"\"\n#   phpmyadmin\nENV PHPMYADMIN_SOURCE=\"\\\"/usr/src/phpmyadmin\\\"\"\nENV PHPMYADMIN_HOME=\"\\\"/home/phpmyadmin\\\"\"\n#  nginx\nENV NGINX_LOG_DIR=\"\\\"/home/LogFiles/nginx\\\"\"\n#  php\nENV PHP_HOME=\"\\\"/usr/local/etc/php\\\"\"\nENV PHP_CONF_DIR=\"$PHP_HOME\"\nENV PHP_CONF_FILE=\"$PHP_CONF_DIR\\\"/php.ini\\\"\"\n#   Composer\n#   Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL=\"\\\"https://getcomposer.org/installer\\\"\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_HOME=\"/home/.composer\"\nENV COMPOSER_VERSION=\"\\\"1.6.1\\\"\"\n#   SHA384SUM https://composer.github.io/installer.sha384sum\nENV COMPOSER_SETUP_SHA=\"544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061\"\n#   ====================\n#   Download and Install\n#   ~. essentials\n#   1. Drupal\n#   ====================\nRUN mkdir -p $DOCKER_BUILD_HOME\nWORKDIR $DOCKER_BUILD_HOME\n#   --------\n#   ~. essentials\n#   --------\nRUN set -ex \\\n && apk update \\\n && apk add --no-cache \\\n && docker-php-source extract \\\n && apk add --no-cache --virtual .build-dependencies $PHPIZE_DEPS zlib-dev cyrus-sasl-dev git autoconf g++ libtool make pcre-dev tini libintl icu icu-dev libxml2-dev postgresql-dev freetype-dev libjpeg-turbo-dev libpng-dev gmp gmp-dev libmemcached-dev imagemagick-dev libssh2 libssh2-dev libxslt-dev \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n && docker-php-ext-install -j \"$( nproc ;)\" gd opcache pdo_mysql pdo_pgsql zip \\\n && pecl install apcu \\\n && docker-php-ext-enable apcu \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --virtual .drupal-phpexts-rundeps $runDeps \\\n && apk del .build-dependencies \\\n && docker-php-source delete RUN set -ex \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \\\n && composer self-update \\\n && rm -rf /home/.composer \\\n && export COMPOSER_HOME='/root/.composer/' \\\n && composer global require consolidation/cgr \\\n && composer_home=$( find / -name .composer ;) \\\n && ln -s $composer_home/vendor/bin/cgr /usr/local/bin/cgr \\\n && cgr drush/drush \\\n && ln -s $composer_home/vendor/bin/drush /usr/local/bin/drush \\\n && apk update \\\n && apk upgrade \\\n && rm -rf /var/cache/apk/*\n#   =========\n#   Configure\n#   =========\nWORKDIR $DRUPAL_HOME\nRUN rm -rf $DOCKER_BUILD_HOME\n#   nginx\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY default.conf /etc/nginx/conf.d/default.conf\n#   php\nCOPY php.ini /usr/local/etc/php/php.ini\nCOPY opcache-recommended.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY www.conf /usr/local/etc/php/conf.d/www.conf\nCOPY zz-docker.conf /usr/local/etc/php-fpm.d/zz-docker.conf\n#   phpmyadmin\nCOPY phpmyadmin-default.conf $PHPMYADMIN_SOURCE/phpmyadmin-default.conf\n#   =====\n#   final\n#   =====\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"ddb4d2eb559e31ae2473c4c5f87e974c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5846fc33ab39a46c3258004c9cec65d65858b2c7.dockerfile"}