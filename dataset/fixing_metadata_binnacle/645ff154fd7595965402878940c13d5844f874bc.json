{"seed":2265171573,"processedDockerfileHash":"92ee66bb8fbd0b5aead2155397c315a9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:trusty\nMAINTAINER Docker Hub\nCMD [\"sh\", \"adduser\", \"jenkins\", \"sudo\"]\n#   Set some variables\t\nARG MAVEN_VERSION=3.3.9\nARG USER_HOME_DIR=\"/root\"\nARG JAVA_VERSION=8\nARG PG_MAJOR=9.3\n#   Add locales after locale-gen as needed\n#   Upgrade packages on image\n#   Preparations for sshd\nRUN locale-gen en_US.UTF-8 \\\n && : \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get -q upgrade -y -o Dpkg::Options::=\"--force-confnew\" --no-install-recommends \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get -q install -y -o Dpkg::Options::=\"--force-confnew\" --no-install-recommends openssh-server \\\n && apt-get -q autoremove \\\n && apt-get -q clean -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -f /var/cache/apt/*.bin \\\n && sed -i 's|session required pam_loginuid.so|session optional pam_loginuid.so|g' /etc/pam.d/sshd \\\n && mkdir -p /var/run/sshd\n#   Sets language to UTF8 : this works in pretty much all cases\t\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   Install JDK\n#   Install the python script required for \"add-apt-repository\"\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y )\n#   Setup the OpenJDK repo\nRUN add-apt-repository ppa:openjdk-r/ppa\n#   Installing ...\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends openjdk-$JAVA_VERSION-jdk -y )\n#   Setup JAVA_HOME, this is useful for docker commandline\nENV JAVA_HOME=\"/usr/lib/jvm/java-$JAVA_VERSION-openjdk-amd64/\"\nRUN export JAVA_HOME\n#   Set user jenkins to the image\nRUN useradd -m -d /home/jenkins -s /bin/sh jenkins \\\n && echo \"jenkins:jenkins\" | chpasswd\nRUN adduser jenkins sudo\n#   Install curl\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 git=1:1.9.1-1ubuntu0.10 -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists\n#   Install Maven\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar -xzC /usr/share/maven --strip-components=1 \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\nVOLUME \"$USER_HOME_DIR/.m2\"\n#   SSH port\nEXPOSE 22/tcp\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends libpostgresql-jdbc-java=9.2-1002-1 )\nRUN groupadd -r postgres --gid=999 \\\n && useradd -r -g postgres --uid=999 postgres\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends locales=2.13+git20120306-12.1 -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#   Install postgresql\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes postgresql-$PG_MAJOR postgresql-client-$PG_MAJOR postgresql-contrib-$PG_MAJOR \\\n && /etc/init.d/postgresql stop\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod g+s /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\nRUN sudo /etc/init.d/postgresql start \\\n && sudo -u postgres psql -c \"ALTER USER postgres PASSWORD 'postgres';\" \\\n && sudo -u postgres psql -c \"CREATE USER oak WITH SUPERUSER PASSWORD 'oakpwd';\" \\\n && sudo -u postgres createdb -O oak oakdb\nENV PAYARA_PKG=\"https://s3-eu-west-1.amazonaws.com/payara.fish/Payara+Downloads/Payara+4.1.1.164/payara-4.1.1.164.zip\"\nENV PAYARA_VERSION=\"164\"\nENV PKG_FILE_NAME=\"payara-full-$PAYARA_VERSION.zip\"\nENV PAYARA_PATH=\"/opt/payara41\"\nENV ADMIN_USER=\"admin\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 -y ) \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends unzip=6.0-9ubuntu1.5 -y )\nRUN wget --quiet -O /opt/$PKG_FILE_NAME $PAYARA_PKG\nRUN unzip -qq /opt/$PKG_FILE_NAME -d /opt\nRUN mkdir -p $PAYARA_PATH/deployments\nRUN useradd -b /opt -m -s /bin/bash -d $PAYARA_PATH payara \\\n && echo payara:payara | chpasswd\nRUN chown -R payara:payara /opt\n#   Default payara ports to expose\nEXPOSE 4848/tcp 8009/tcp 8080/tcp 8181/tcp\nRUN : \\\n && apt-get upgrade -y \\\n && cd /opt \\\n && wget -c http://apache.mirror.anlx.net//jmeter/binaries/apache-jmeter-3.1.tgz \\\n && tar xzf apache-jmeter-3.1.tgz \\\n && rm apache-jmeter-3.1.tgz \\\n && mv apache-jmeter-3.1 jmeter \\\n && ln -s /opt/jmeter/bin/jmeter /usr/bin/jmeter \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:trusty\nMAINTAINER Docker Hub\nCMD [\"sh\", \"adduser\", \"jenkins\", \"sudo\"]\n#  Set some variables\t\nARG MAVEN_VERSION=3.3.9\nARG USER_HOME_DIR=\"/root\"\nARG JAVA_VERSION=8\nARG PG_MAJOR=9.3\n#  Add locales after locale-gen as needed\n#  Upgrade packages on image\n#  Preparations for sshd\nRUN locale-gen en_US.UTF-8 \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get -q upgrade -y -o Dpkg::Options::=\"--force-confnew\" --no-install-recommends \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get -q install -y -o Dpkg::Options::=\"--force-confnew\" --no-install-recommends openssh-server \\\n && apt-get -q autoremove \\\n && apt-get -q clean -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -f /var/cache/apt/*.bin \\\n && sed -i 's|session required pam_loginuid.so|session optional pam_loginuid.so|g' /etc/pam.d/sshd \\\n && mkdir -p /var/run/sshd\n#  Sets language to UTF8 : this works in pretty much all cases\t\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#  Install JDK\n#  Install the python script required for \"add-apt-repository\"\nRUN apt-get update \\\n && apt-get install software-properties-common -y\n#  Setup the OpenJDK repo\nRUN add-apt-repository ppa:openjdk-r/ppa\n#  Installing ...\nRUN apt-get update \\\n && apt-get install openjdk-$JAVA_VERSION-jdk -y\n#  Setup JAVA_HOME, this is useful for docker commandline\nENV JAVA_HOME=\"/usr/lib/jvm/java-$JAVA_VERSION-openjdk-amd64/\"\nRUN export JAVA_HOME\n#  Set user jenkins to the image\nRUN useradd -m -d /home/jenkins -s /bin/sh jenkins \\\n && echo \"jenkins:jenkins\" | chpasswd\nRUN adduser jenkins sudo\n#  Install curl\nRUN apt-get update \\\n && apt-get install curl git -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists\n#  Install Maven\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar -xzC /usr/share/maven --strip-components=1 \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\nVOLUME \"$USER_HOME_DIR/.m2\"\n#  SSH port\nEXPOSE 22/tcp\nRUN apt-get update \\\n && apt-get install libpostgresql-jdbc-java\nRUN groupadd -r postgres --gid=999 \\\n && useradd -r -g postgres --uid=999 postgres\n#  make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#  Install postgresql\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes postgresql-$PG_MAJOR postgresql-client-$PG_MAJOR postgresql-contrib-$PG_MAJOR \\\n && /etc/init.d/postgresql stop\n#  make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod g+s /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\nRUN sudo /etc/init.d/postgresql start \\\n && sudo -u postgres psql -c \"ALTER USER postgres PASSWORD 'postgres';\" \\\n && sudo -u postgres psql -c \"CREATE USER oak WITH SUPERUSER PASSWORD 'oakpwd';\" \\\n && sudo -u postgres createdb -O oak oakdb\nENV PAYARA_PKG=\"https://s3-eu-west-1.amazonaws.com/payara.fish/Payara+Downloads/Payara+4.1.1.164/payara-4.1.1.164.zip\"\nENV PAYARA_VERSION=\"164\"\nENV PKG_FILE_NAME=\"payara-full-$PAYARA_VERSION.zip\"\nENV PAYARA_PATH=\"/opt/payara41\"\nENV ADMIN_USER=\"admin\"\nENV ADMIN_PASSWORD=\"admin\"\nRUN apt-get update \\\n && apt-get install wget -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install unzip -y\nRUN wget --quiet -O /opt/$PKG_FILE_NAME $PAYARA_PKG\nRUN unzip -qq /opt/$PKG_FILE_NAME -d /opt\nRUN mkdir -p $PAYARA_PATH/deployments\nRUN useradd -b /opt -m -s /bin/bash -d $PAYARA_PATH payara \\\n && echo payara:payara | chpasswd\nRUN chown -R payara:payara /opt\n#  Default payara ports to expose\nEXPOSE 4848/tcp 8009/tcp 8080/tcp 8181/tcp\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && cd /opt \\\n && wget -c http://apache.mirror.anlx.net//jmeter/binaries/apache-jmeter-3.1.tgz \\\n && tar xzf apache-jmeter-3.1.tgz \\\n && rm apache-jmeter-3.1.tgz \\\n && mv apache-jmeter-3.1 jmeter \\\n && ln -s /opt/jmeter/bin/jmeter /usr/bin/jmeter \\\n && rm -rf /var/lib/apt/lists/*\n","injectedSmells":[],"originalDockerfileHash":"71c6289054512095e41a7b398703c675","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:trusty\nMAINTAINER Docker Hub\nCMD [\"sh\", \"adduser\", \"jenkins\", \"sudo\"]\n#   Set some variables\t\nARG MAVEN_VERSION=3.3.9\nARG USER_HOME_DIR=\"/root\"\nARG JAVA_VERSION=8\nARG PG_MAJOR=9.3\n#   Add locales after locale-gen as needed\n#   Upgrade packages on image\n#   Preparations for sshd\nRUN locale-gen en_US.UTF-8 \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get -q upgrade -y -o Dpkg::Options::=\"--force-confnew\" --no-install-recommends \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get -q install -y -o Dpkg::Options::=\"--force-confnew\" --no-install-recommends openssh-server \\\n && apt-get -q autoremove \\\n && apt-get -q clean -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -f /var/cache/apt/*.bin \\\n && sed -i 's|session required pam_loginuid.so|session optional pam_loginuid.so|g' /etc/pam.d/sshd \\\n && mkdir -p /var/run/sshd\n#   Sets language to UTF8 : this works in pretty much all cases\t\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   Install JDK\n#   Install the python script required for \"add-apt-repository\"\nRUN apt-get update \\\n && apt-get install software-properties-common -y\n#   Setup the OpenJDK repo\nRUN add-apt-repository ppa:openjdk-r/ppa\n#   Installing ...\nRUN apt-get update \\\n && apt-get install openjdk-$JAVA_VERSION-jdk -y\n#   Setup JAVA_HOME, this is useful for docker commandline\nENV JAVA_HOME=\"/usr/lib/jvm/java-$JAVA_VERSION-openjdk-amd64/\"\nRUN export JAVA_HOME\n#   Set user jenkins to the image\nRUN useradd -m -d /home/jenkins -s /bin/sh jenkins \\\n && echo \"jenkins:jenkins\" | chpasswd\nRUN adduser jenkins sudo\n#   Install curl\nRUN apt-get update \\\n && apt-get install curl git -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists\n#   Install Maven\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar -xzC /usr/share/maven --strip-components=1 \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\nVOLUME \"$USER_HOME_DIR/.m2\"\n#   SSH port\nEXPOSE 22/tcp\nRUN apt-get update \\\n && apt-get install libpostgresql-jdbc-java\nRUN groupadd -r postgres --gid=999 \\\n && useradd -r -g postgres --uid=999 postgres\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#   Install postgresql\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes postgresql-$PG_MAJOR postgresql-client-$PG_MAJOR postgresql-contrib-$PG_MAJOR \\\n && /etc/init.d/postgresql stop\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod g+s /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\nRUN sudo /etc/init.d/postgresql start \\\n && sudo -u postgres psql -c \"ALTER USER postgres PASSWORD 'postgres';\" \\\n && sudo -u postgres psql -c \"CREATE USER oak WITH SUPERUSER PASSWORD 'oakpwd';\" \\\n && sudo -u postgres createdb -O oak oakdb\nENV PAYARA_PKG=\"https://s3-eu-west-1.amazonaws.com/payara.fish/Payara+Downloads/Payara+4.1.1.164/payara-4.1.1.164.zip\"\nENV PAYARA_VERSION=\"164\"\nENV PKG_FILE_NAME=\"payara-full-$PAYARA_VERSION.zip\"\nENV PAYARA_PATH=\"/opt/payara41\"\nENV ADMIN_USER=\"admin\"\nENV ADMIN_PASSWORD=\"admin\"\nRUN apt-get update \\\n && apt-get install wget -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install unzip -y\nRUN wget --quiet -O /opt/$PKG_FILE_NAME $PAYARA_PKG\nRUN unzip -qq /opt/$PKG_FILE_NAME -d /opt\nRUN mkdir -p $PAYARA_PATH/deployments\nRUN useradd -b /opt -m -s /bin/bash -d $PAYARA_PATH payara \\\n && echo payara:payara | chpasswd\nRUN chown -R payara:payara /opt\n#   Default payara ports to expose\nEXPOSE 4848/tcp 8009/tcp 8080/tcp 8181/tcp\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && cd /opt \\\n && wget -c http://apache.mirror.anlx.net//jmeter/binaries/apache-jmeter-3.1.tgz \\\n && tar xzf apache-jmeter-3.1.tgz \\\n && rm apache-jmeter-3.1.tgz \\\n && mv apache-jmeter-3.1 jmeter \\\n && ln -s /opt/jmeter/bin/jmeter /usr/bin/jmeter \\\n && rm -rf /var/lib/apt/lists/*\n","originalDockerfileUglifiedHash":"3b14b4c0c51b6bf784bca80c34aab131","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/645ff154fd7595965402878940c13d5844f874bc.dockerfile"}