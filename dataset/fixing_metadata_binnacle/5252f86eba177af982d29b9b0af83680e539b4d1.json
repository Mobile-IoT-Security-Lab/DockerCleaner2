{"seed":2585010961,"processedDockerfileHash":"2bb207d6f717fc7227a2406e0462f110","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##\n#   Heroku Phalcon Docker\n#  #\nFROM heroku/cedar:14\nRUN useradd -d /app -m app\nUSER app\nRUN mkdir /app/build\nRUN mkdir /app/src\nWORKDIR /app/src\n#   Path\nENV HOME=\"/app\"\nENV BUILD_HOME=\"/app/build\"\nENV APACHE_ROOT=\"${HOME}/apache\"\nENV PHP_ROOT=\"${HOME}/php\"\nENV MCRYPT_ROOT=\"${HOME}/libs/libmcrypt\"\nENV PCRE_ROOT=\"${HOME}/libs/pcre\"\nENV MEMCACHED_ROOT=\"${HOME}/libs/libmemcached\"\n#   Version\nENV APACHE_VERSION=\"2.4.12\"\nENV PHP_VERSION=\"5.6.9\"\nENV LIBMCRYPT_VERSION=\"2.5.8\"\nENV APR_VERSION=\"1.5.2\"\nENV APR_UTIL_VERSION=\"1.5.4\"\nENV LIBPCRE_VERSION=\"8.37\"\n#   Download Url\nENV APACHE_URL=\"http://www.us.apache.org/dist/httpd/httpd-${APACHE_VERSION}.tar.gz\"\nENV PHP_URL=\"http://us.php.net/distributions/php-${PHP_VERSION}.tar.gz\"\nENV MCRYPT_URL=\"http://downloads.sourceforge.net/project/mcrypt/Libmcrypt/${LIBMCRYPT_VERSION}/libmcrypt-${LIBMCRYPT_VERSION}.tar.gz\"\nENV APR_URL=\"http://www.us.apache.org/dist/apr/apr-${APR_VERSION}.tar.gz\"\nENV APR_UTIL_URL=\"http://www.us.apache.org/dist/apr/apr-util-${APR_UTIL_VERSION}.tar.gz\"\nENV PCRE_URL=\"ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${LIBPCRE_VERSION}.tar.gz\"\nENV COMPOSER_URL=\"http://getcomposer.org/composer.phar\"\nENV PHALCON_REPO=\"git://github.com/phalcon/cphalcon.git\"\n#   Dir\nENV APACHE_DIR=\"httpd-${APACHE_VERSION}\"\nENV PHP_DIR=\"php-${PHP_VERSION}\"\nENV MCRYPT_DIR=\"libmcrypt-${LIBMCRYPT_VERSION}\"\nENV APR_DIR=\"apr-${APR_VERSION}\"\nENV APR_UTIL_DIR=\"apr-util-${APR_UTIL_VERSION}\"\nENV PCRE_DIR=\"pcre-${LIBPCRE_VERSION}\"\nENV PHALCON_DIR=\"cphalcon\"\nENV CURL_FLAGS=\"--location --silent\"\nENV PATH=\"$PATH:$PHP_ROOT/bin:$APACHE_ROOT/bin\"\nENV PORT=\"3000\"\n#   ========\n#   Building\n#   ========\nRUN cd $BUILD_HOME \\\n && curl $CURL_FLAGS \"$APACHE_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$APR_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$APR_UTIL_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$PCRE_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$PHP_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$MCRYPT_URL\" | tar zx \\\n && git clone -q --depth=1 $PHALCON_REPO \\\n && cd $PCRE_DIR \\\n && ./configure --prefix=$PCRE_ROOT \\\n && make \\\n && make install \\\n && cd $BUILD_HOME \\\n && mv $APR_DIR $APACHE_DIR/srclib/apr \\\n && mv $APR_UTIL_DIR $APACHE_DIR/srclib/apr-util \\\n && cd $APACHE_DIR \\\n && ./configure --prefix=$APACHE_ROOT --with-pcre=$PCRE_ROOT --enable-rewrite \\\n && make \\\n && make install \\\n && cd $BUILD_HOME \\\n && cd $MCRYPT_DIR \\\n && ./configure --prefix=$MCRYPT_ROOT \\\n && make \\\n && make install \\\n && cd $BUILD_HOME \\\n && cd $PHP_DIR \\\n && ./configure --prefix=$PHP_ROOT --with-config-file-path=$PHP_ROOT --with-apxs2=$APACHE_ROOT/bin/apxs --enable-opcache --with-mysql --with-pdo-mysql --with-pgsql --with-pdo-pgsql --with-iconv --with-gd --with-curl --enable-soap=shared --with-openssl --enable-mbstring --with-curl --with-mcrypt=$MCRYPT_ROOT --with-jpeg-dir=/usr \\\n && make \\\n && make install \\\n && cp php.ini-production $PHP_ROOT/php.ini \\\n && cd $BUILD_HOME \\\n && $PHP_ROOT/bin/pecl channel-update pecl.php.net \\\n && printf \"\\n\" | pecl install mongo \\\n && printf \"\\n\" | pecl install redis \\\n && cd $PHALCON_DIR/build \\\n && ./install \\\n && rm -rf $BUILD_HOME\n#   Configure\nRUN sed -ire 's/^Listen.*$/Listen \\${PORT}/g' $APACHE_ROOT/conf/httpd.conf \\\n && sed -ire 's/^DocumentRoot.*$/DocumentRoot\\ \"\\/app\\/src\"/g' $APACHE_ROOT/conf/httpd.conf \\\n && sed -ire 's/<Directory \"\\/app\\/apache\\/htdocs\">/<Directory \"\\/app\\/src\">/g' $APACHE_ROOT/conf/httpd.conf \\\n && sed -ire 's/AllowOverride\\ None/AllowOverride\\ All/g' $APACHE_ROOT/conf/httpd.conf\nRUN echo \"<IfModule dir_module>\\nDirectoryIndex index.html index.php\\n</IfModule>\" >> $APACHE_ROOT/conf/httpd.conf \\\n && echo \"<FilesMatch \\.php$>\\nSetHandler application/x-httpd-php\\n</FilesMatch>\" >> $APACHE_ROOT/conf/httpd.conf\nRUN echo \"zend_extension=opcache.so\" >> $PHP_ROOT/php.ini \\\n && echo \"extension=phalcon.so\" >> $PHP_ROOT/php.ini \\\n && echo \"extension=mongo.so\" >> $PHP_ROOT/php.ini \\\n && echo \"extension=redis.so\" >> $PHP_ROOT/php.ini\nUSER root\nCOPY ./ext/package.sh /app/package.sh\nRUN chmod +x /app/package.sh\n#   Copy SourceCode\nONBUILD COPY . /app/src\nONBUILD USER root\nONBUILD RUN chown -R app /app\nONBUILD USER app\n#   Setup Dependency\nONBUILD RUN if [ -f /app/src/composer.json ] ; then curl --silent --max-time 60 --location \"$COMPOSER_URL\" > $HOME/src/composer.phar;php $HOME/src/composer.phar install --prefer-dist ;rm $HOME/src/composer.phar ; fi\n#   Configure Profile\nONBUILD USER app\nONBUILD RUN mkdir -p /app/.profile.d\nONBUILD RUN echo \"export PATH=\\\"$PATH:$PHP_ROOT/bin:$APACHE_ROOT/bin\\\"\" > /app/.profile.d/php.sh\nONBUILD RUN echo \"cd /app/src\" >> /app/.profile.d/php.sh\nONBUILD EXPOSE 3000/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##\n#  Heroku Phalcon Docker\n# #\nFROM heroku/cedar:14\nRUN useradd -d /app -m app\nUSER app\nRUN mkdir /app/build\nRUN mkdir /app/src\nWORKDIR /app/src\n#  Path\nENV HOME=\"/app\"\nENV BUILD_HOME=\"/app/build\"\nENV APACHE_ROOT=\"${HOME}/apache\"\nENV PHP_ROOT=\"${HOME}/php\"\nENV MCRYPT_ROOT=\"${HOME}/libs/libmcrypt\"\nENV PCRE_ROOT=\"${HOME}/libs/pcre\"\nENV MEMCACHED_ROOT=\"${HOME}/libs/libmemcached\"\n#  Version\nENV APACHE_VERSION=\"2.4.12\"\nENV PHP_VERSION=\"5.6.9\"\nENV LIBMCRYPT_VERSION=\"2.5.8\"\nENV APR_VERSION=\"1.5.2\"\nENV APR_UTIL_VERSION=\"1.5.4\"\nENV LIBPCRE_VERSION=\"8.37\"\n#  Download Url\nENV APACHE_URL=\"http://www.us.apache.org/dist/httpd/httpd-${APACHE_VERSION}.tar.gz\"\nENV PHP_URL=\"http://us.php.net/distributions/php-${PHP_VERSION}.tar.gz\"\nENV MCRYPT_URL=\"http://downloads.sourceforge.net/project/mcrypt/Libmcrypt/${LIBMCRYPT_VERSION}/libmcrypt-${LIBMCRYPT_VERSION}.tar.gz\"\nENV APR_URL=\"http://www.us.apache.org/dist/apr/apr-${APR_VERSION}.tar.gz\"\nENV APR_UTIL_URL=\"http://www.us.apache.org/dist/apr/apr-util-${APR_UTIL_VERSION}.tar.gz\"\nENV PCRE_URL=\"ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${LIBPCRE_VERSION}.tar.gz\"\nENV COMPOSER_URL=\"http://getcomposer.org/composer.phar\"\nENV PHALCON_REPO=\"git://github.com/phalcon/cphalcon.git\"\n#  Dir\nENV APACHE_DIR=\"httpd-${APACHE_VERSION}\"\nENV PHP_DIR=\"php-${PHP_VERSION}\"\nENV MCRYPT_DIR=\"libmcrypt-${LIBMCRYPT_VERSION}\"\nENV APR_DIR=\"apr-${APR_VERSION}\"\nENV APR_UTIL_DIR=\"apr-util-${APR_UTIL_VERSION}\"\nENV PCRE_DIR=\"pcre-${LIBPCRE_VERSION}\"\nENV PHALCON_DIR=\"cphalcon\"\nENV CURL_FLAGS=\"--location --silent\"\nENV PATH=\"$PATH:$PHP_ROOT/bin:$APACHE_ROOT/bin\"\nENV PORT=\"3000\"\n#  ========\n#  Building\n#  ========\nRUN cd $BUILD_HOME \\\n && curl $CURL_FLAGS \"$APACHE_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$APR_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$APR_UTIL_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$PCRE_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$PHP_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$MCRYPT_URL\" | tar zx \\\n && git clone -q --depth=1 $PHALCON_REPO \\\n && cd $PCRE_DIR \\\n && ./configure --prefix=$PCRE_ROOT \\\n && make \\\n && make install \\\n && cd $BUILD_HOME \\\n && mv $APR_DIR $APACHE_DIR/srclib/apr \\\n && mv $APR_UTIL_DIR $APACHE_DIR/srclib/apr-util \\\n && cd $APACHE_DIR \\\n && ./configure --prefix=$APACHE_ROOT --with-pcre=$PCRE_ROOT --enable-rewrite \\\n && make \\\n && make install \\\n && cd $BUILD_HOME \\\n && cd $MCRYPT_DIR \\\n && ./configure --prefix=$MCRYPT_ROOT \\\n && make \\\n && make install \\\n && cd $BUILD_HOME \\\n && cd $PHP_DIR \\\n && ./configure --prefix=$PHP_ROOT --with-config-file-path=$PHP_ROOT --with-apxs2=$APACHE_ROOT/bin/apxs --enable-opcache --with-mysql --with-pdo-mysql --with-pgsql --with-pdo-pgsql --with-iconv --with-gd --with-curl --enable-soap=shared --with-openssl --enable-mbstring --with-curl --with-mcrypt=$MCRYPT_ROOT --with-jpeg-dir=/usr \\\n && make \\\n && make install \\\n && cp php.ini-production $PHP_ROOT/php.ini \\\n && cd $BUILD_HOME \\\n && $PHP_ROOT/bin/pecl channel-update pecl.php.net \\\n && printf \"\\n\" | pecl install mongo \\\n && printf \"\\n\" | pecl install redis \\\n && cd $PHALCON_DIR/build \\\n && ./install \\\n && rm -rf $BUILD_HOME\n#  Configure\nRUN sed -ire 's/^Listen.*$/Listen \\${PORT}/g' $APACHE_ROOT/conf/httpd.conf \\\n && sed -ire 's/^DocumentRoot.*$/DocumentRoot\\ \"\\/app\\/src\"/g' $APACHE_ROOT/conf/httpd.conf \\\n && sed -ire 's/<Directory \"\\/app\\/apache\\/htdocs\">/<Directory \"\\/app\\/src\">/g' $APACHE_ROOT/conf/httpd.conf \\\n && sed -ire 's/AllowOverride\\ None/AllowOverride\\ All/g' $APACHE_ROOT/conf/httpd.conf\nRUN echo \"<IfModule dir_module>\\nDirectoryIndex index.html index.php\\n</IfModule>\" >> $APACHE_ROOT/conf/httpd.conf \\\n && echo \"<FilesMatch \\.php$>\\nSetHandler application/x-httpd-php\\n</FilesMatch>\" >> $APACHE_ROOT/conf/httpd.conf\nRUN echo \"zend_extension=opcache.so\" >> $PHP_ROOT/php.ini \\\n && echo \"extension=phalcon.so\" >> $PHP_ROOT/php.ini \\\n && echo \"extension=mongo.so\" >> $PHP_ROOT/php.ini \\\n && echo \"extension=redis.so\" >> $PHP_ROOT/php.ini\nUSER root\nCOPY ./ext/package.sh /app/package.sh\nRUN chmod +x /app/package.sh\n#  Copy SourceCode\nONBUILD COPY . /app/src\nONBUILD USER root\nONBUILD RUN chown -R app /app\nONBUILD USER app\n#  Setup Dependency\nONBUILD RUN if [ -f /app/src/composer.json ] ; then curl --silent --max-time 60 --location \"$COMPOSER_URL\" > $HOME/src/composer.phar;php $HOME/src/composer.phar install --prefer-dist ;rm $HOME/src/composer.phar ; fi\n#  Configure Profile\nONBUILD USER app\nONBUILD RUN mkdir -p /app/.profile.d\nONBUILD RUN echo \"export PATH=\\\"$PATH:$PHP_ROOT/bin:$APACHE_ROOT/bin\\\"\" > /app/.profile.d/php.sh\nONBUILD RUN echo \"cd /app/src\" >> /app/.profile.d/php.sh\nONBUILD EXPOSE 3000/tcp\n","injectedSmells":[],"originalDockerfileHash":"956e2d97523a0684581a8fe39a142311","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##\n#   Heroku Phalcon Docker\n#  #\nFROM heroku/cedar:14\nRUN useradd -d /app -m app\nUSER app\nRUN mkdir /app/build\nRUN mkdir /app/src\nWORKDIR /app/src\n#   Path\nENV HOME=\"/app\"\nENV BUILD_HOME=\"/app/build\"\nENV APACHE_ROOT=\"${HOME}/apache\"\nENV PHP_ROOT=\"${HOME}/php\"\nENV MCRYPT_ROOT=\"${HOME}/libs/libmcrypt\"\nENV PCRE_ROOT=\"${HOME}/libs/pcre\"\nENV MEMCACHED_ROOT=\"${HOME}/libs/libmemcached\"\n#   Version\nENV APACHE_VERSION=\"2.4.12\"\nENV PHP_VERSION=\"5.6.9\"\nENV LIBMCRYPT_VERSION=\"2.5.8\"\nENV APR_VERSION=\"1.5.2\"\nENV APR_UTIL_VERSION=\"1.5.4\"\nENV LIBPCRE_VERSION=\"8.37\"\n#   Download Url\nENV APACHE_URL=\"http://www.us.apache.org/dist/httpd/httpd-${APACHE_VERSION}.tar.gz\"\nENV PHP_URL=\"http://us.php.net/distributions/php-${PHP_VERSION}.tar.gz\"\nENV MCRYPT_URL=\"http://downloads.sourceforge.net/project/mcrypt/Libmcrypt/${LIBMCRYPT_VERSION}/libmcrypt-${LIBMCRYPT_VERSION}.tar.gz\"\nENV APR_URL=\"http://www.us.apache.org/dist/apr/apr-${APR_VERSION}.tar.gz\"\nENV APR_UTIL_URL=\"http://www.us.apache.org/dist/apr/apr-util-${APR_UTIL_VERSION}.tar.gz\"\nENV PCRE_URL=\"ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${LIBPCRE_VERSION}.tar.gz\"\nENV COMPOSER_URL=\"http://getcomposer.org/composer.phar\"\nENV PHALCON_REPO=\"git://github.com/phalcon/cphalcon.git\"\n#   Dir\nENV APACHE_DIR=\"httpd-${APACHE_VERSION}\"\nENV PHP_DIR=\"php-${PHP_VERSION}\"\nENV MCRYPT_DIR=\"libmcrypt-${LIBMCRYPT_VERSION}\"\nENV APR_DIR=\"apr-${APR_VERSION}\"\nENV APR_UTIL_DIR=\"apr-util-${APR_UTIL_VERSION}\"\nENV PCRE_DIR=\"pcre-${LIBPCRE_VERSION}\"\nENV PHALCON_DIR=\"cphalcon\"\nENV CURL_FLAGS=\"--location --silent\"\nENV PATH=\"$PATH:$PHP_ROOT/bin:$APACHE_ROOT/bin\"\nENV PORT=\"3000\"\n#   ========\n#   Building\n#   ========\nRUN cd $BUILD_HOME \\\n && curl $CURL_FLAGS \"$APACHE_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$APR_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$APR_UTIL_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$PCRE_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$PHP_URL\" | tar zx \\\n && curl $CURL_FLAGS \"$MCRYPT_URL\" | tar zx \\\n && git clone -q --depth=1 $PHALCON_REPO \\\n && cd $PCRE_DIR \\\n && ./configure --prefix=$PCRE_ROOT \\\n && make \\\n && make install \\\n && cd $BUILD_HOME \\\n && mv $APR_DIR $APACHE_DIR/srclib/apr \\\n && mv $APR_UTIL_DIR $APACHE_DIR/srclib/apr-util \\\n && cd $APACHE_DIR \\\n && ./configure --prefix=$APACHE_ROOT --with-pcre=$PCRE_ROOT --enable-rewrite \\\n && make \\\n && make install \\\n && cd $BUILD_HOME \\\n && cd $MCRYPT_DIR \\\n && ./configure --prefix=$MCRYPT_ROOT \\\n && make \\\n && make install \\\n && cd $BUILD_HOME \\\n && cd $PHP_DIR \\\n && ./configure --prefix=$PHP_ROOT --with-config-file-path=$PHP_ROOT --with-apxs2=$APACHE_ROOT/bin/apxs --enable-opcache --with-mysql --with-pdo-mysql --with-pgsql --with-pdo-pgsql --with-iconv --with-gd --with-curl --enable-soap=shared --with-openssl --enable-mbstring --with-curl --with-mcrypt=$MCRYPT_ROOT --with-jpeg-dir=/usr \\\n && make \\\n && make install \\\n && cp php.ini-production $PHP_ROOT/php.ini \\\n && cd $BUILD_HOME \\\n && $PHP_ROOT/bin/pecl channel-update pecl.php.net \\\n && printf \"\\n\" | pecl install mongo \\\n && printf \"\\n\" | pecl install redis \\\n && cd $PHALCON_DIR/build \\\n && ./install \\\n && rm -rf $BUILD_HOME\n#   Configure\nRUN sed -ire 's/^Listen.*$/Listen \\${PORT}/g' $APACHE_ROOT/conf/httpd.conf \\\n && sed -ire 's/^DocumentRoot.*$/DocumentRoot\\ \"\\/app\\/src\"/g' $APACHE_ROOT/conf/httpd.conf \\\n && sed -ire 's/<Directory \"\\/app\\/apache\\/htdocs\">/<Directory \"\\/app\\/src\">/g' $APACHE_ROOT/conf/httpd.conf \\\n && sed -ire 's/AllowOverride\\ None/AllowOverride\\ All/g' $APACHE_ROOT/conf/httpd.conf\nRUN echo \"<IfModule dir_module>\\nDirectoryIndex index.html index.php\\n</IfModule>\" >> $APACHE_ROOT/conf/httpd.conf \\\n && echo \"<FilesMatch \\.php$>\\nSetHandler application/x-httpd-php\\n</FilesMatch>\" >> $APACHE_ROOT/conf/httpd.conf\nRUN echo \"zend_extension=opcache.so\" >> $PHP_ROOT/php.ini \\\n && echo \"extension=phalcon.so\" >> $PHP_ROOT/php.ini \\\n && echo \"extension=mongo.so\" >> $PHP_ROOT/php.ini \\\n && echo \"extension=redis.so\" >> $PHP_ROOT/php.ini\nUSER root\nCOPY ./ext/package.sh /app/package.sh\nRUN chmod +x /app/package.sh\n#   Copy SourceCode\nONBUILD COPY . /app/src\nONBUILD USER root\nONBUILD RUN chown -R app /app\nONBUILD USER app\n#   Setup Dependency\nONBUILD RUN if [ -f /app/src/composer.json ] ; then curl --silent --max-time 60 --location \"$COMPOSER_URL\" > $HOME/src/composer.phar;php $HOME/src/composer.phar install --prefer-dist ;rm $HOME/src/composer.phar ; fi\n#   Configure Profile\nONBUILD USER app\nONBUILD RUN mkdir -p /app/.profile.d\nONBUILD RUN echo \"export PATH=\\\"$PATH:$PHP_ROOT/bin:$APACHE_ROOT/bin\\\"\" > /app/.profile.d/php.sh\nONBUILD RUN echo \"cd /app/src\" >> /app/.profile.d/php.sh\nONBUILD EXPOSE 3000/tcp\n","originalDockerfileUglifiedHash":"94236c93331639a605cbc1e81506986f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5252f86eba177af982d29b9b0af83680e539b4d1.dockerfile"}