{"seed":3822591850,"processedDockerfileHash":"f28f04cb23483023237d9b0182cfa74b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ros:melodic-ros-core-bionic\n#   FROM ros:kinetic-ros-base-xenial\nMAINTAINER Víctor Mayoral Vilches<victor@aliasrobotics.com>\n#   install ros packages\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ros-melodic-ros-base=1.4.1-0* -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   RUN apt-get update && apt-get install -y \\\n#       ros-kinetic-robot=1.3.2-0* \\\n#       && rm -rf /var/lib/apt/lists/*\nRUN : \\\n && apt-get -qqy upgrade\n#   install aztarna build dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential cmake libgmp3-dev gengetopt libpcap-dev flex byacc libjson-c-dev pkg-config libunistring-dev wget unzip git -qqy )\n#   RUN apt-get install software-properties-common -y\n#   RUN add-apt-repository ppa:deadsnakes/ppa\n#   RUN apt-get update\n#   RUN apt-get -qqy install python3.6 python3-dev python3-pip\nRUN (apt-get update ;apt-get install --no-install-recommends python3 python3-dev python3-pip -qqy )\nRUN (apt-get update ;apt-get install --no-install-recommends libxml2-dev libxslt1-dev -qqy )\nRUN (apt-get update ;apt-get install --no-install-recommends zlib1g-dev -qqy )\nRUN (apt-get update ;apt-get install --no-install-recommends libffi-dev -qqy )\nRUN (apt-get update ;apt-get install --no-install-recommends libssl-dev -qqy )\n#  #####################\n#   Install SROS\n#  #####################\n#   setup environment\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\n#   set environment and workspace\nENV ROS_DISTRO=\"melodic\"\nENV CATKIN_WS=\"/root/sros_catkin_ws\"\nRUN mkdir -p $CATKIN_WS/src\nWORKDIR $CATKIN_WS/src\nRUN pip3 install rosinstall-generator\nRUN (apt-get update ;apt-get install --no-install-recommends python-openssl apparmor-utils python-apparmor python-pip -y )\n#   download sourcecode for sros\nRUN rosinstall_generator ros_comm rospy_tutorials --rosdistro ${ROS_DISTRO} --deps --tar > ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && wstool init -j8 . ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && rm -rf ros_comm \\\n && git clone -b sros https://github.com/ros/ros_comm \\\n && git clone -b sros https://github.com/ros-infrastructure/rospkg ../rospkg \\\n && pip install ../rospkg/ --upgrade\n#   # install dependencies\n#   RUN apt-get update && \\\n#       rosdep init && \\\n#       rosdep update && \\\n#       rosdep install -y \\\n#         --from-paths . \\\n#         --ignore-src \\\n#         --rosdistro ${ROS_DISTRO} \\\n#         --as-root=apt:false && \\\n#       pip install --upgrade ../rospkg/ && \\\n#       rm -rf /var/lib/apt/lists/*\n#   build repo\nWORKDIR $CATKIN_WS\nENV TERM=\"xterm\"\nENV PYTHONIOENCODING=\"UTF-8\"\nRUN touch src/rosconsole/CATKIN_IGNORE\nRUN touch src/ros_comm/tools/rosbag/CATKIN_IGNORE\nRUN touch src/ros_comm/tools/rosbag_storage/CATKIN_IGNORE\n#   RUN touch src/ros_comm/test/CAKTIN_IGNORE\nCOPY ./patch1.txt $CATKIN_WS\nRUN patch /root/sros_catkin_ws/src/ros_comm/clients/roscpp/src/libros/transport/transport_udp.cpp < patch1.txt\nRUN . /opt/ros/melodic/setup.sh \\\n && catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release\n#   catkin build --no-status --summarize\n#   setup demo bashrc\n#   RUN echo 'source \"$CATKIN_WS/install/setup.bash\"' >> ~/.bashrc\n#   setup demo config\nCOPY ./config /root/.ros/sros/config/\n#  #####################\n#   Install `aztarna`\n#  #####################\n#   copy the aztarna files the FS and install it\nCOPY ./aztarna /root/aztarna\n#   RUN cd /root/aztarna && git checkout ${AZTARNA_COMMIT} && python3 setup.py install\nRUN cd /root/aztarna \\\n && python3 setup.py install\n#   setup entrypoint\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ros:melodic-ros-core-bionic\n#  FROM ros:kinetic-ros-base-xenial\nMAINTAINER Víctor Mayoral Vilches<victor@aliasrobotics.com>\n#  install ros packages\nRUN apt-get update \\\n && apt-get install ros-melodic-ros-base=1.4.1-0* -y \\\n && rm -rf /var/lib/apt/lists/*\n#  RUN apt-get update && apt-get install -y \\\n#      ros-kinetic-robot=1.3.2-0* \\\n#      && rm -rf /var/lib/apt/lists/*\nRUN apt-get update -qq \\\n && apt-get -qqy upgrade\n#  install aztarna build dependencies\nRUN apt-get install build-essential cmake libgmp3-dev gengetopt libpcap-dev flex byacc libjson-c-dev pkg-config libunistring-dev wget unzip git -qqy\n#  RUN apt-get install software-properties-common -y\n#  RUN add-apt-repository ppa:deadsnakes/ppa\n#  RUN apt-get update\n#  RUN apt-get -qqy install python3.6 python3-dev python3-pip\nRUN apt-get install python3 python3-dev python3-pip -qqy\nRUN apt-get install libxml2-dev libxslt1-dev -qqy\nRUN apt-get install zlib1g-dev -qqy\nRUN apt-get install libffi-dev -qqy\nRUN apt-get install libssl-dev -qqy\n# #####################\n#  Install SROS\n# #####################\n#  setup environment\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\n#  set environment and workspace\nENV ROS_DISTRO=\"melodic\"\nENV CATKIN_WS=\"/root/sros_catkin_ws\"\nRUN mkdir -p $CATKIN_WS/src\nWORKDIR $CATKIN_WS/src\nRUN pip3 install rosinstall-generator\nRUN apt-get install python-openssl apparmor-utils python-apparmor python-pip -y\n#  download sourcecode for sros\nRUN rosinstall_generator ros_comm rospy_tutorials --rosdistro ${ROS_DISTRO} --deps --tar > ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && wstool init -j8 . ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && rm -rf ros_comm \\\n && git clone -b sros https://github.com/ros/ros_comm \\\n && git clone -b sros https://github.com/ros-infrastructure/rospkg ../rospkg \\\n && pip install ../rospkg/ --upgrade\n#  # install dependencies\n#  RUN apt-get update && \\\n#      rosdep init && \\\n#      rosdep update && \\\n#      rosdep install -y \\\n#        --from-paths . \\\n#        --ignore-src \\\n#        --rosdistro ${ROS_DISTRO} \\\n#        --as-root=apt:false && \\\n#      pip install --upgrade ../rospkg/ && \\\n#      rm -rf /var/lib/apt/lists/*\n#  build repo\nWORKDIR $CATKIN_WS\nENV TERM=\"xterm\"\nENV PYTHONIOENCODING=\"UTF-8\"\nRUN touch src/rosconsole/CATKIN_IGNORE\nRUN touch src/ros_comm/tools/rosbag/CATKIN_IGNORE\nRUN touch src/ros_comm/tools/rosbag_storage/CATKIN_IGNORE\n#  RUN touch src/ros_comm/test/CAKTIN_IGNORE\nCOPY ./patch1.txt $CATKIN_WS\nRUN patch /root/sros_catkin_ws/src/ros_comm/clients/roscpp/src/libros/transport/transport_udp.cpp < patch1.txt\nRUN . /opt/ros/melodic/setup.sh \\\n && catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release\n#  catkin build --no-status --summarize\n#  setup demo bashrc\n#  RUN echo 'source \"$CATKIN_WS/install/setup.bash\"' >> ~/.bashrc\n#  setup demo config\nCOPY ./config /root/.ros/sros/config/\n# #####################\n#  Install `aztarna`\n# #####################\n#  copy the aztarna files the FS and install it\nCOPY ./aztarna /root/aztarna\n#  RUN cd /root/aztarna && git checkout ${AZTARNA_COMMIT} && python3 setup.py install\nRUN cd /root/aztarna \\\n && python3 setup.py install\n#  setup entrypoint\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"5590094ea3e05ac2aed3878ce3d81f6a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ros:melodic-ros-core-bionic\n#   FROM ros:kinetic-ros-base-xenial\nMAINTAINER Víctor Mayoral Vilches<victor@aliasrobotics.com>\n#   install ros packages\nRUN apt-get update \\\n && apt-get install ros-melodic-ros-base=1.4.1-0* -y \\\n && rm -rf /var/lib/apt/lists/*\n#   RUN apt-get update && apt-get install -y \\\n#       ros-kinetic-robot=1.3.2-0* \\\n#       && rm -rf /var/lib/apt/lists/*\nRUN apt-get update -qq \\\n && apt-get -qqy upgrade\n#   install aztarna build dependencies\nRUN apt-get install build-essential cmake libgmp3-dev gengetopt libpcap-dev flex byacc libjson-c-dev pkg-config libunistring-dev wget unzip git -qqy\n#   RUN apt-get install software-properties-common -y\n#   RUN add-apt-repository ppa:deadsnakes/ppa\n#   RUN apt-get update\n#   RUN apt-get -qqy install python3.6 python3-dev python3-pip\nRUN apt-get install python3 python3-dev python3-pip -qqy\nRUN apt-get install libxml2-dev libxslt1-dev -qqy\nRUN apt-get install zlib1g-dev -qqy\nRUN apt-get install libffi-dev -qqy\nRUN apt-get install libssl-dev -qqy\n#  #####################\n#   Install SROS\n#  #####################\n#   setup environment\nENV LANG=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\n#   set environment and workspace\nENV ROS_DISTRO=\"melodic\"\nENV CATKIN_WS=\"/root/sros_catkin_ws\"\nRUN mkdir -p $CATKIN_WS/src\nWORKDIR $CATKIN_WS/src\nRUN pip3 install rosinstall-generator\nRUN apt-get install python-openssl apparmor-utils python-apparmor python-pip -y\n#   download sourcecode for sros\nRUN rosinstall_generator ros_comm rospy_tutorials --rosdistro ${ROS_DISTRO} --deps --tar > ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && wstool init -j8 . ${ROS_DISTRO}-ros_comm-wet.rosinstall \\\n && rm -rf ros_comm \\\n && git clone -b sros https://github.com/ros/ros_comm \\\n && git clone -b sros https://github.com/ros-infrastructure/rospkg ../rospkg \\\n && pip install ../rospkg/ --upgrade\n#   # install dependencies\n#   RUN apt-get update && \\\n#       rosdep init && \\\n#       rosdep update && \\\n#       rosdep install -y \\\n#         --from-paths . \\\n#         --ignore-src \\\n#         --rosdistro ${ROS_DISTRO} \\\n#         --as-root=apt:false && \\\n#       pip install --upgrade ../rospkg/ && \\\n#       rm -rf /var/lib/apt/lists/*\n#   build repo\nWORKDIR $CATKIN_WS\nENV TERM=\"xterm\"\nENV PYTHONIOENCODING=\"UTF-8\"\nRUN touch src/rosconsole/CATKIN_IGNORE\nRUN touch src/ros_comm/tools/rosbag/CATKIN_IGNORE\nRUN touch src/ros_comm/tools/rosbag_storage/CATKIN_IGNORE\n#   RUN touch src/ros_comm/test/CAKTIN_IGNORE\nCOPY ./patch1.txt $CATKIN_WS\nRUN patch /root/sros_catkin_ws/src/ros_comm/clients/roscpp/src/libros/transport/transport_udp.cpp < patch1.txt\nRUN . /opt/ros/melodic/setup.sh \\\n && catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release\n#   catkin build --no-status --summarize\n#   setup demo bashrc\n#   RUN echo 'source \"$CATKIN_WS/install/setup.bash\"' >> ~/.bashrc\n#   setup demo config\nCOPY ./config /root/.ros/sros/config/\n#  #####################\n#   Install `aztarna`\n#  #####################\n#   copy the aztarna files the FS and install it\nCOPY ./aztarna /root/aztarna\n#   RUN cd /root/aztarna && git checkout ${AZTARNA_COMMIT} && python3 setup.py install\nRUN cd /root/aztarna \\\n && python3 setup.py install\n#   setup entrypoint\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"9711a4d4482d71e3d8b1eb1e8e67aa14","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0f1ca8ff556a84e2d3e386814af102c9474d2211.dockerfile"}