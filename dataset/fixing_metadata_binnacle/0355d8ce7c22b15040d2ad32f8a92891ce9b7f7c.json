{"seed":970845504,"processedDockerfileHash":"fec6c8f631d8d3b1ed98d531ae37361a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Build stage for BerkeleyDB\nFROM alpine AS berkeleydb\nRUN apk add autoconf=2.71-r1 --no-cache\nRUN apk add automake=1.16.5-r1 --no-cache\nRUN apk add build-base=0.5-r3 --no-cache\nRUN apk add libressl=3.6.2-r0 --no-cache\nENV BERKELEYDB_VERSION=\"db-4.8.30.NC\"\nENV BERKELEYDB_PREFIX=\"/opt/${BERKELEYDB_VERSION}\"\nRUN wget https://download.oracle.com/berkeley-db/${BERKELEYDB_VERSION}.tar.gz\nRUN tar -xzf *.tar.gz\nRUN sed s/__atomic_compare_exchange/__atomic_compare_exchange_db/g -i ${BERKELEYDB_VERSION}/dbinc/atomic.h\nRUN mkdir -p ${BERKELEYDB_PREFIX}\nWORKDIR /${BERKELEYDB_VERSION}/build_unix\nRUN ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${BERKELEYDB_PREFIX}\nRUN make -j4\nRUN make install\nRUN rm -rf ${BERKELEYDB_PREFIX}/docs\n#   Build stage for Dash\nFROM alpine AS dash\nCOPY --from=berkeleydb /opt /opt\nRUN apk add autoconf=2.71-r1 --no-cache\nRUN apk add automake=1.16.5-r1 --no-cache\nRUN apk add boost-dev=1.80.0-r3 --no-cache\nRUN apk add build-base=0.5-r3 --no-cache\nRUN apk add chrpath=0.16-r3 --no-cache\nRUN apk add file=5.43-r0 --no-cache\nRUN apk add gnupg=2.2.40-r0 --no-cache\nRUN apk add libevent-dev=2.1.12-r5 --no-cache\nRUN apk add libressl=3.6.2-r0 --no-cache\nRUN apk add libressl-dev=3.6.2-r0 --no-cache\nRUN apk add libsodium-dev=1.0.18-r2 --no-cache\nRUN apk add libtool=2.4.7-r1 --no-cache\nRUN apk add linux-headers=5.19.5-r0 --no-cache\nRUN apk add protobuf-dev=3.21.9-r0 --no-cache\nRUN apk add zeromq-dev=4.3.4-r1 --no-cache\nRUN set -ex \\\n && for key in 38EE12EB597B4FC0; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ; done\nENV DASH_VERSION=\"0.12.2.3\"\nENV DASH_PREFIX=\"/opt/dash-${DASH_VERSION}\"\nENV DASH_SHASUM=\"5347351483ce39d1dd0be4d93ee19aba1a6b02bc7f90948b4eea4466ad79d1c3  v${DASH_VERSION}.tar.gz\"\nRUN wget https://github.com/dashpay/dash/archive/v${DASH_VERSION}.tar.gz\nRUN echo \"${DASH_SHASUM}\" | sha256sum -c\nRUN tar -xzf *.tar.gz\nRUN ls -la\nWORKDIR /dash-${DASH_VERSION}\nRUN sed -i '/AC_PREREQ/a\\AR_FLAGS=cr' src/univalue/configure.ac\nRUN sed -i '/AX_PROG_CC_FOR_BUILD/a\\AR_FLAGS=cr' src/secp256k1/configure.ac\nRUN sed -i s:sys/fcntl.h:fcntl.h: src/compat.h\nRUN ./autogen.sh\nRUN ./configure LDFLAGS=-L`ls -d /opt/db* `/lib/ CPPFLAGS=-I`ls -d /opt/db* `/include/ --prefix=${DASH_PREFIX} --mandir=/usr/share/man --disable-tests --disable-bench --disable-ccache --with-gui=no --with-utils --with-libs --with-daemon\nRUN make -j4\nRUN make install\nRUN strip ${DASH_PREFIX}/bin/dash-cli\nRUN strip ${DASH_PREFIX}/bin/dash-tx\nRUN strip ${DASH_PREFIX}/bin/dashd\nRUN strip ${DASH_PREFIX}/lib/libdashconsensus.a\nRUN strip ${DASH_PREFIX}/lib/libdashconsensus.so.0.0.0\n#   Build stage for compiled artifacts\nFROM alpine\nLABEL maintainer.0=\"João Fonseca (@joaopaulofonseca)\" \\\n      maintainer.1=\"Pedro Branco (@pedrobranco)\" \\\n      maintainer.2=\"Rui Marinho (@ruimarinho)\"\nRUN adduser -S dash\nRUN apk add boost boost-program_options curl=7.88.1-r1 libevent=2.1.12-r5 libressl=3.6.2-r0 libzmq=4.3.4-r1 su-exec=0.2-r2 --no-cache\nENV DASH_DATA=\"/home/dash/.dashcore\"\nENV DASH_VERSION=\"0.12.2.3\"\nENV DASH_PREFIX=\"/opt/dash-${DASH_VERSION}\"\nENV PATH=\"${DASH_PREFIX}/bin:$PATH\"\nCOPY --from=dash /opt /opt\nCOPY docker-entrypoint.sh /entrypoint.sh\nVOLUME [\"/home/dash/.dashcore\"]\nEXPOSE 9998/tcp 9999/tcp 18332/tcp 19998/tcp 19999/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"dashd\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Build stage for BerkeleyDB\nFROM alpine AS berkeleydb\nRUN apk --no-cache add autoconf\nRUN apk --no-cache add automake\nRUN apk --no-cache add build-base\nRUN apk --no-cache add libressl\nENV BERKELEYDB_VERSION=\"db-4.8.30.NC\"\nENV BERKELEYDB_PREFIX=\"/opt/${BERKELEYDB_VERSION}\"\nRUN wget https://download.oracle.com/berkeley-db/${BERKELEYDB_VERSION}.tar.gz\nRUN tar -xzf *.tar.gz\nRUN sed s/__atomic_compare_exchange/__atomic_compare_exchange_db/g -i ${BERKELEYDB_VERSION}/dbinc/atomic.h\nRUN mkdir -p ${BERKELEYDB_PREFIX}\nWORKDIR /${BERKELEYDB_VERSION}/build_unix\nRUN ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${BERKELEYDB_PREFIX}\nRUN make -j4\nRUN make install\nRUN rm -rf ${BERKELEYDB_PREFIX}/docs\n#  Build stage for Dash\nFROM alpine AS dash\nCOPY --from=berkeleydb /opt /opt\nRUN apk --no-cache add autoconf\nRUN apk --no-cache add automake\nRUN apk --no-cache add boost-dev\nRUN apk --no-cache add build-base\nRUN apk --no-cache add chrpath\nRUN apk --no-cache add file\nRUN apk --no-cache add gnupg\nRUN apk --no-cache add libevent-dev\nRUN apk --no-cache add libressl\nRUN apk --no-cache add libressl-dev\nRUN apk --no-cache add libsodium-dev\nRUN apk --no-cache add libtool\nRUN apk --no-cache add linux-headers\nRUN apk --no-cache add protobuf-dev\nRUN apk --no-cache add zeromq-dev\nRUN set -ex \\\n && for key in 38EE12EB597B4FC0; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ; done\nENV DASH_VERSION=\"0.12.2.3\"\nENV DASH_PREFIX=\"/opt/dash-${DASH_VERSION}\"\nENV DASH_SHASUM=\"5347351483ce39d1dd0be4d93ee19aba1a6b02bc7f90948b4eea4466ad79d1c3  v${DASH_VERSION}.tar.gz\"\nRUN wget https://github.com/dashpay/dash/archive/v${DASH_VERSION}.tar.gz\nRUN echo \"${DASH_SHASUM}\" | sha256sum -c\nRUN tar -xzf *.tar.gz\nRUN ls -la\nWORKDIR /dash-${DASH_VERSION}\nRUN sed -i '/AC_PREREQ/a\\AR_FLAGS=cr' src/univalue/configure.ac\nRUN sed -i '/AX_PROG_CC_FOR_BUILD/a\\AR_FLAGS=cr' src/secp256k1/configure.ac\nRUN sed -i s:sys/fcntl.h:fcntl.h: src/compat.h\nRUN ./autogen.sh\nRUN ./configure LDFLAGS=-L`ls -d /opt/db* `/lib/ CPPFLAGS=-I`ls -d /opt/db* `/include/ --prefix=${DASH_PREFIX} --mandir=/usr/share/man --disable-tests --disable-bench --disable-ccache --with-gui=no --with-utils --with-libs --with-daemon\nRUN make -j4\nRUN make install\nRUN strip ${DASH_PREFIX}/bin/dash-cli\nRUN strip ${DASH_PREFIX}/bin/dash-tx\nRUN strip ${DASH_PREFIX}/bin/dashd\nRUN strip ${DASH_PREFIX}/lib/libdashconsensus.a\nRUN strip ${DASH_PREFIX}/lib/libdashconsensus.so.0.0.0\n#  Build stage for compiled artifacts\nFROM alpine\nLABEL maintainer.0=\"João Fonseca (@joaopaulofonseca)\" \\\n      maintainer.1=\"Pedro Branco (@pedrobranco)\" \\\n      maintainer.2=\"Rui Marinho (@ruimarinho)\"\nRUN adduser -S dash\nRUN apk --no-cache add boost boost-program_options curl libevent libressl libzmq su-exec\nENV DASH_DATA=\"/home/dash/.dashcore\"\nENV DASH_VERSION=\"0.12.2.3\"\nENV DASH_PREFIX=\"/opt/dash-${DASH_VERSION}\"\nENV PATH=\"${DASH_PREFIX}/bin:$PATH\"\nCOPY --from=dash /opt /opt\nCOPY docker-entrypoint.sh /entrypoint.sh\nVOLUME [\"/home/dash/.dashcore\"]\nEXPOSE 9998/tcp 9999/tcp 18332/tcp 19998/tcp 19999/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"dashd\"]\n","injectedSmells":[],"originalDockerfileHash":"3946d824f1c875dde4ddedb439dded40","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build stage for BerkeleyDB\nFROM alpine AS berkeleydb\nRUN apk --no-cache add autoconf\nRUN apk --no-cache add automake\nRUN apk --no-cache add build-base\nRUN apk --no-cache add libressl\nENV BERKELEYDB_VERSION=\"db-4.8.30.NC\"\nENV BERKELEYDB_PREFIX=\"/opt/${BERKELEYDB_VERSION}\"\nRUN wget https://download.oracle.com/berkeley-db/${BERKELEYDB_VERSION}.tar.gz\nRUN tar -xzf *.tar.gz\nRUN sed s/__atomic_compare_exchange/__atomic_compare_exchange_db/g -i ${BERKELEYDB_VERSION}/dbinc/atomic.h\nRUN mkdir -p ${BERKELEYDB_PREFIX}\nWORKDIR /${BERKELEYDB_VERSION}/build_unix\nRUN ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${BERKELEYDB_PREFIX}\nRUN make -j4\nRUN make install\nRUN rm -rf ${BERKELEYDB_PREFIX}/docs\n#   Build stage for Dash\nFROM alpine AS dash\nCOPY --from=berkeleydb /opt /opt\nRUN apk --no-cache add autoconf\nRUN apk --no-cache add automake\nRUN apk --no-cache add boost-dev\nRUN apk --no-cache add build-base\nRUN apk --no-cache add chrpath\nRUN apk --no-cache add file\nRUN apk --no-cache add gnupg\nRUN apk --no-cache add libevent-dev\nRUN apk --no-cache add libressl\nRUN apk --no-cache add libressl-dev\nRUN apk --no-cache add libsodium-dev\nRUN apk --no-cache add libtool\nRUN apk --no-cache add linux-headers\nRUN apk --no-cache add protobuf-dev\nRUN apk --no-cache add zeromq-dev\nRUN set -ex \\\n && for key in 38EE12EB597B4FC0; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ; done\nENV DASH_VERSION=\"0.12.2.3\"\nENV DASH_PREFIX=\"/opt/dash-${DASH_VERSION}\"\nENV DASH_SHASUM=\"5347351483ce39d1dd0be4d93ee19aba1a6b02bc7f90948b4eea4466ad79d1c3  v${DASH_VERSION}.tar.gz\"\nRUN wget https://github.com/dashpay/dash/archive/v${DASH_VERSION}.tar.gz\nRUN echo \"${DASH_SHASUM}\" | sha256sum -c\nRUN tar -xzf *.tar.gz\nRUN ls -la\nWORKDIR /dash-${DASH_VERSION}\nRUN sed -i '/AC_PREREQ/a\\AR_FLAGS=cr' src/univalue/configure.ac\nRUN sed -i '/AX_PROG_CC_FOR_BUILD/a\\AR_FLAGS=cr' src/secp256k1/configure.ac\nRUN sed -i s:sys/fcntl.h:fcntl.h: src/compat.h\nRUN ./autogen.sh\nRUN ./configure LDFLAGS=-L`ls -d /opt/db* `/lib/ CPPFLAGS=-I`ls -d /opt/db* `/include/ --prefix=${DASH_PREFIX} --mandir=/usr/share/man --disable-tests --disable-bench --disable-ccache --with-gui=no --with-utils --with-libs --with-daemon\nRUN make -j4\nRUN make install\nRUN strip ${DASH_PREFIX}/bin/dash-cli\nRUN strip ${DASH_PREFIX}/bin/dash-tx\nRUN strip ${DASH_PREFIX}/bin/dashd\nRUN strip ${DASH_PREFIX}/lib/libdashconsensus.a\nRUN strip ${DASH_PREFIX}/lib/libdashconsensus.so.0.0.0\n#   Build stage for compiled artifacts\nFROM alpine\nLABEL maintainer.0=\"João Fonseca (@joaopaulofonseca)\" \\\n      maintainer.1=\"Pedro Branco (@pedrobranco)\" \\\n      maintainer.2=\"Rui Marinho (@ruimarinho)\"\nRUN adduser -S dash\nRUN apk --no-cache add boost boost-program_options curl libevent libressl libzmq su-exec\nENV DASH_DATA=\"/home/dash/.dashcore\"\nENV DASH_VERSION=\"0.12.2.3\"\nENV DASH_PREFIX=\"/opt/dash-${DASH_VERSION}\"\nENV PATH=\"${DASH_PREFIX}/bin:$PATH\"\nCOPY --from=dash /opt /opt\nCOPY docker-entrypoint.sh /entrypoint.sh\nVOLUME [\"/home/dash/.dashcore\"]\nEXPOSE 9998/tcp 9999/tcp 18332/tcp 19998/tcp 19999/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"dashd\"]\n","originalDockerfileUglifiedHash":"fa54a01ad9507049f0c22054fc55e29d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0355d8ce7c22b15040d2ad32f8a92891ce9b7f7c.dockerfile"}