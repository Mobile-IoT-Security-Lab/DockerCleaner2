{"seed":804834753,"processedDockerfileHash":"9632a1befb88b7962387d7e42b271c5f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.10\nMAINTAINER Paul Schoenfelder <paulschoenfelder@gmail.com>\n#   Important!  Update this no-op ENV variable when this Dockerfile\n#   is updated with the current date. It will force refresh of all\n#   of the base images and things like `apt-get update` won't be using\n#   old cached versions when the Dockerfile is built.\nENV REFRESHED_AT=\"2019-06-21\" \\\n    LANG=\"en_US.UTF-8\" \\\n    HOME=\"/opt/app/\" \\\n    TERM=\"xterm\" \\\n    ERLANG_VERSION=\"22.0.4\"\nWORKDIR /tmp/erlang-build\n#   Install Erlang\nRUN mkdir -p \"${HOME}\" \\\n && adduser -s /bin/sh -u 1001 -G root -h \"${HOME}\" -S -D default \\\n && chown -R 1001:0 \"${HOME}\" \\\n && echo \"@main http://dl-cdn.alpinelinux.org/alpine/v3.10/main\" >> /etc/apk/repositories \\\n && echo \"@community http://dl-cdn.alpinelinux.org/alpine/v3.10/community\" >> /etc/apk/repositories \\\n && echo \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories \\\n && apk --no-cache --update --available upgrade \\\n && apk add pcre@edge --no-cache --update \\\n && apk add bash=5.0.0-r0 ca-certificates=20191127-r2 openssl-dev=1.1.1k-r0 ncurses-dev=6.1_p20190518-r2 unixodbc-dev=2.3.7-r1 zlib-dev=1.2.11-r1 --no-cache --update \\\n && apk add dpkg-dev=1.19.7-r0 dpkg=1.19.7-r0 binutils=2.32-r1 git=2.22.5-r0 autoconf=2.69-r2 build-base=0.5-r1 perl-dev=5.28.3-r0 --no-cache --virtual .erlang-build \\\n && git clone -b OTP-$ERLANG_VERSION --single-branch --depth 1 https://github.com/erlang/otp.git . \\\n && export ERL_TOP=/tmp/erlang-build \\\n && export PATH=$ERL_TOP/bin:$PATH \\\n && export CPPFlAGS=\"-D_BSD_SOURCE $CPPFLAGS\" \\\n && ./otp_build autoconf \\\n && ./configure --prefix=/usr --build=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info --without-javac --without-wx --without-debugger --without-observer --without-jinterface --without-cosEvent --without-cosEventDomain --without-cosFileTransfer --without-cosNotification --without-cosProperty --without-cosTime --without-cosTransactions --without-et --without-gs --without-ic --without-megaco --without-orber --without-percept --without-typer --enable-threads --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-hipe \\\n && make -j4 \\\n && make install \\\n && cd $HOME \\\n && rm -rf /tmp/erlang-build \\\n && update-ca-certificates --fresh \\\n && /usr/bin/erl -eval \"beam_lib:strip_release('/usr/lib/erlang/lib')\" -s init stop > /dev/null \\\n && (/usr/bin/strip /usr/lib/erlang/erts-*/bin/* || true ) \\\n && rm -rf /usr/lib/erlang/usr/ \\\n && rm -rf /usr/lib/erlang/misc/ \\\n && for DIR in /usr/lib/erlang/erts* /usr/lib/erlang/lib/*; do rm -rf ${DIR}/src/*.erl ;rm -rf ${DIR}/doc ;rm -rf ${DIR}/man ;rm -rf ${DIR}/examples ;rm -rf ${DIR}/emacs ;rm -rf ${DIR}/c_src ; done \\\n && rm -rf /usr/lib/erlang/erts-*/lib/ \\\n && rm /usr/lib/erlang/erts-*/bin/dialyzer \\\n && rm /usr/lib/erlang/erts-*/bin/erlc \\\n && rm /usr/lib/erlang/erts-*/bin/typer \\\n && rm /usr/lib/erlang/erts-*/bin/ct_run \\\n && apk del --force .erlang-build\nWORKDIR ${HOME}\nCMD [\"/bin/sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.10\nMAINTAINER Paul Schoenfelder <paulschoenfelder@gmail.com>\n#  Important!  Update this no-op ENV variable when this Dockerfile\n#  is updated with the current date. It will force refresh of all\n#  of the base images and things like `apt-get update` won't be using\n#  old cached versions when the Dockerfile is built.\nENV REFRESHED_AT=\"2019-06-21\" \\\n    LANG=\"en_US.UTF-8\" \\\n    HOME=\"/opt/app/\" \\\n    TERM=\"xterm\" \\\n    ERLANG_VERSION=\"22.0.4\"\nWORKDIR /tmp/erlang-build\n#  Install Erlang\nRUN mkdir -p \"${HOME}\" \\\n && adduser -s /bin/sh -u 1001 -G root -h \"${HOME}\" -S -D default \\\n && chown -R 1001:0 \"${HOME}\" \\\n && echo \"@main http://dl-cdn.alpinelinux.org/alpine/v3.10/main\" >> /etc/apk/repositories \\\n && echo \"@community http://dl-cdn.alpinelinux.org/alpine/v3.10/community\" >> /etc/apk/repositories \\\n && echo \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories \\\n && apk --no-cache --update --available upgrade \\\n && apk add --no-cache --update pcre@edge \\\n && apk add --no-cache --update bash ca-certificates openssl-dev ncurses-dev unixodbc-dev zlib-dev \\\n && apk add --no-cache --virtual .erlang-build dpkg-dev dpkg binutils git autoconf build-base perl-dev \\\n && git clone -b OTP-$ERLANG_VERSION --single-branch --depth 1 https://github.com/erlang/otp.git . \\\n && export ERL_TOP=/tmp/erlang-build \\\n && export PATH=$ERL_TOP/bin:$PATH \\\n && export CPPFlAGS=\"-D_BSD_SOURCE $CPPFLAGS\" \\\n && ./otp_build autoconf \\\n && ./configure --prefix=/usr --build=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info --without-javac --without-wx --without-debugger --without-observer --without-jinterface --without-cosEvent --without-cosEventDomain --without-cosFileTransfer --without-cosNotification --without-cosProperty --without-cosTime --without-cosTransactions --without-et --without-gs --without-ic --without-megaco --without-orber --without-percept --without-typer --enable-threads --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-hipe \\\n && make -j4 \\\n && make install \\\n && cd $HOME \\\n && rm -rf /tmp/erlang-build \\\n && update-ca-certificates --fresh \\\n && /usr/bin/erl -eval \"beam_lib:strip_release('/usr/lib/erlang/lib')\" -s init stop > /dev/null \\\n && (/usr/bin/strip /usr/lib/erlang/erts-*/bin/* || true ) \\\n && rm -rf /usr/lib/erlang/usr/ \\\n && rm -rf /usr/lib/erlang/misc/ \\\n && for DIR in /usr/lib/erlang/erts* /usr/lib/erlang/lib/*; do rm -rf ${DIR}/src/*.erl ;rm -rf ${DIR}/doc ;rm -rf ${DIR}/man ;rm -rf ${DIR}/examples ;rm -rf ${DIR}/emacs ;rm -rf ${DIR}/c_src ; done \\\n && rm -rf /usr/lib/erlang/erts-*/lib/ \\\n && rm /usr/lib/erlang/erts-*/bin/dialyzer \\\n && rm /usr/lib/erlang/erts-*/bin/erlc \\\n && rm /usr/lib/erlang/erts-*/bin/typer \\\n && rm /usr/lib/erlang/erts-*/bin/ct_run \\\n && apk del --force .erlang-build\nWORKDIR ${HOME}\nCMD [\"/bin/sh\"]\n","injectedSmells":[],"originalDockerfileHash":"851fd5aa361eaf981f76b73d2ff8cdc1","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.10\nMAINTAINER Paul Schoenfelder <paulschoenfelder@gmail.com>\n#   Important!  Update this no-op ENV variable when this Dockerfile\n#   is updated with the current date. It will force refresh of all\n#   of the base images and things like `apt-get update` won't be using\n#   old cached versions when the Dockerfile is built.\nENV REFRESHED_AT=\"2019-06-21\" \\\n    LANG=\"en_US.UTF-8\" \\\n    HOME=\"/opt/app/\" \\\n    TERM=\"xterm\" \\\n    ERLANG_VERSION=\"22.0.4\"\nWORKDIR /tmp/erlang-build\n#   Install Erlang\nRUN mkdir -p \"${HOME}\" \\\n && adduser -s /bin/sh -u 1001 -G root -h \"${HOME}\" -S -D default \\\n && chown -R 1001:0 \"${HOME}\" \\\n && echo \"@main http://dl-cdn.alpinelinux.org/alpine/v3.10/main\" >> /etc/apk/repositories \\\n && echo \"@community http://dl-cdn.alpinelinux.org/alpine/v3.10/community\" >> /etc/apk/repositories \\\n && echo \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories \\\n && apk --no-cache --update --available upgrade \\\n && apk add --no-cache --update pcre@edge \\\n && apk add --no-cache --update bash ca-certificates openssl-dev ncurses-dev unixodbc-dev zlib-dev \\\n && apk add --no-cache --virtual .erlang-build dpkg-dev dpkg binutils git autoconf build-base perl-dev \\\n && git clone -b OTP-$ERLANG_VERSION --single-branch --depth 1 https://github.com/erlang/otp.git . \\\n && export ERL_TOP=/tmp/erlang-build \\\n && export PATH=$ERL_TOP/bin:$PATH \\\n && export CPPFlAGS=\"-D_BSD_SOURCE $CPPFLAGS\" \\\n && ./otp_build autoconf \\\n && ./configure --prefix=/usr --build=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info --without-javac --without-wx --without-debugger --without-observer --without-jinterface --without-cosEvent --without-cosEventDomain --without-cosFileTransfer --without-cosNotification --without-cosProperty --without-cosTime --without-cosTransactions --without-et --without-gs --without-ic --without-megaco --without-orber --without-percept --without-typer --enable-threads --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-hipe \\\n && make -j4 \\\n && make install \\\n && cd $HOME \\\n && rm -rf /tmp/erlang-build \\\n && update-ca-certificates --fresh \\\n && /usr/bin/erl -eval \"beam_lib:strip_release('/usr/lib/erlang/lib')\" -s init stop > /dev/null \\\n && (/usr/bin/strip /usr/lib/erlang/erts-*/bin/* || true ) \\\n && rm -rf /usr/lib/erlang/usr/ \\\n && rm -rf /usr/lib/erlang/misc/ \\\n && for DIR in /usr/lib/erlang/erts* /usr/lib/erlang/lib/*; do rm -rf ${DIR}/src/*.erl ;rm -rf ${DIR}/doc ;rm -rf ${DIR}/man ;rm -rf ${DIR}/examples ;rm -rf ${DIR}/emacs ;rm -rf ${DIR}/c_src ; done \\\n && rm -rf /usr/lib/erlang/erts-*/lib/ \\\n && rm /usr/lib/erlang/erts-*/bin/dialyzer \\\n && rm /usr/lib/erlang/erts-*/bin/erlc \\\n && rm /usr/lib/erlang/erts-*/bin/typer \\\n && rm /usr/lib/erlang/erts-*/bin/ct_run \\\n && apk del --force .erlang-build\nWORKDIR ${HOME}\nCMD [\"/bin/sh\"]\n","originalDockerfileUglifiedHash":"10dd94358949f2806d28597d6c84bbd7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8bad1fe89efdd2e3db82ef82777278dd80d8a684.dockerfile"}