{"seed":2659622944,"processedDockerfileHash":"1e355fac0b2ce08a6d7d60d0a2dfd6be","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.2.12-fpm-alpine3.8\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n#   ========\n#   ENV vars\n#   ========\n#   ssh\nENV SSH_PASSWD=\"\\\"root:Docker!\\\"\"\n#  nginx\nENV NGINX_VERSION=\"1.14.0\"\nENV NGINX_LOG_DIR=\"\\\"/home/LogFiles/nginx\\\"\"\n#  php\nENV PHP_HOME=\"\\\"/usr/local/etc/php\\\"\"\nENV PHP_CONF_DIR=\"$PHP_HOME\"\nENV PHP_CONF_FILE=\"$PHP_CONF_DIR\\\"/php.ini\\\"\"\n#   mariadb\nENV MARIADB_DATA_DIR=\"\\\"/home/data/mysql\\\"\"\nENV MARIADB_LOG_DIR=\"\\\"/home/LogFiles/mysql\\\"\"\nENV MARIADB_VER=\"10.1.26\"\nENV JUDY_VER=\"1.0.5\"\n#   phpmyadmin\nENV PHPMYADMIN_SOURCE=\"\\\"/usr/src/phpmyadmin\\\"\"\nENV PHPMYADMIN_HOME=\"\\\"/home/phpmyadmin\\\"\"\n#  Web Site Home\nENV HOME_SITE=\"\\\"/home/site/wwwroot\\\"\"\n#   supervisor\nENV SUPERVISOR_LOG_DIR=\"\\\"/home/LogFiles/supervisor\\\"\"\n#\n#   --------\n#   ~. tools\n#   --------\nRUN set -ex \\\n && apk update \\\n && apk add openssl=3.0.8-r3 git=2.38.4-r1 net-tools=2.10-r0 tcpdump=4.99.4-r0 tcptraceroute=1.5b7-r4 vim=9.0.0999-r0 curl=7.88.1-r1 wget=1.21.3-r2 bash=5.2.15-r0 --no-cache \\\n && cd /usr/bin \\\n && wget http://www.vdberg.org/~richard/tcpping \\\n && chmod 777 tcpping \\\n && apk add zlib-dev=1.2.13-r0 cyrus-sasl-dev=2.1.28-r3 git=2.38.4-r1 autoconf=2.71-r1 g++=12.2.1_git20220924-r4 libtool=2.4.7-r1 make=4.3-r1 pcre-dev=8.45-r2 tini=0.19.0-r1 libintl=0.21.1-r1 icu=72.1-r1 icu-dev=72.1-r1 libxml2-dev=2.10.4-r0 postgresql-dev freetype-dev=2.12.1-r0 libjpeg-turbo-dev=2.1.4-r0 libpng-dev=1.6.38-r0 gmp=6.2.1-r2 gmp-dev=6.2.1-r2 libmemcached-dev=1.0.18-r5 imagemagick-dev=7.1.0.62-r0 libssh2=1.10.0-r3 libssh2-dev=1.10.0-r3 libxslt-dev=1.1.37-r1 $PHPIZE_DEPS --no-cache --virtual .build-dependencies \\\n && docker-php-source extract \\\n && pecl install xdebug-beta apcu \\\n && docker-php-ext-install -j \"$( nproc ;)\" mysqli opcache pdo_mysql pdo_pgsql \\\n && docker-php-ext-enable apcu \\\n && docker-php-source delete \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add $runDeps --virtual .drupal-phpexts-rundeps \\\n && apk del .build-dependencies \\\n && docker-php-source delete \\\n && mkdir -p /usr/local/php/tmp \\\n && chmod 777 /usr/local/php/tmp \\\n && apk add openssh-server=9.1_p1-r2 --no-cache \\\n && echo \"$SSH_PASSWD\" | chpasswd \\\n && apk add openrc=0.45.2-r7 --no-cache \\\n && sed -i 's/\"cgroup_add_service/\" # cgroup_add_service/g' /lib/rc/sh/openrc-run.sh\n#   ----------\n#   Nginx\n#   ----------   \nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && CONFIG=\" --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module \" \\\n && addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && apk add gcc=12.2.1_git20220924-r4 libc-dev=0.7.2-r3 make=4.3-r1 openssl-dev=3.0.8-r3 pcre-dev=8.45-r2 zlib-dev=1.2.13-r0 linux-headers=5.19.5-r0 curl=7.88.1-r1 gnupg=2.2.40-r0 libxslt-dev=1.1.37-r1 gd-dev=2.3.3-r3 geoip-dev=1.6.12-r3 --no-cache --virtual .build-deps \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n && apk add gettext=0.21.1-r1 --no-cache --virtual .gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add $runDeps --no-cache --virtual .nginx-rundeps \\\n && apk del .build-deps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && apk add tzdata=2023c-r0 --no-cache \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && mkdir -p /etc/nginx/conf.d \\\n && mkdir -p ${HOME_SITE} \\\n && chown -R www-data:www-data $HOME_SITE \\\n && echo \"<?php phpinfo();\" > $HOME_SITE/index.php \\\n && echo http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \\\n && apk add pwgen=2.08-r2 openssl=3.0.8-r3 ca-certificates=20220614-r4 libstdc++=12.2.1_git20220924-r4 libaio=0.3.113-r0 gnutls=3.7.8-r3 ncurses-libs=6.3_p20221119-r0 libcurl=7.88.1-r1 libxml2=2.10.4-r0 boost proj4 geos=3.11.1-r0 alpine-sdk=1.0-r1 cmake=3.24.4-r0 ncurses-dev=6.3_p20221119-r0 gnutls-dev=3.7.8-r3 curl-dev=7.88.1-r1 libxml2-dev=2.10.4-r0 libaio-dev=0.3.113-r0 linux-headers=5.19.5-r0 bison=3.8.2-r0 boost-dev=1.80.0-r3 --no-cache \\\n && update-ca-certificates \\\n && addgroup -S -g 500 mysql \\\n && adduser -S -D -H -u 500 -G mysql -g \"MySQL\" mysql \\\n && mkdir -p /opt/src \\\n && wget -O /opt/src/mdb.tar.gz http://ftp.hosteurope.de/mirror/archive.mariadb.org//mariadb-$MARIADB_VER/source/mariadb-$MARIADB_VER.tar.gz \\\n && mkdir -p /etc/mysql \\\n && cd /opt/src \\\n && tar -xf mdb.tar.gz \\\n && rm mdb.tar.gz \\\n && wget -O /opt/src/judy.tar.gz http://downloads.sourceforge.net/project/judy/judy/Judy-${JUDY_VER}/Judy-${JUDY_VER}.tar.gz \\\n && cd /opt/src \\\n && tar -xf judy.tar.gz \\\n && rm judy.tar.gz \\\n && cd /opt/src/judy-${JUDY_VER} \\\n && CFLAGS=\"-O2 -s\" CXXFLAGS=\"-O2 -s\" ./configure \\\n && make \\\n && make install \\\n && mkdir -p /tmp/_ \\\n && cd /opt/src/mariadb-${MARIADB_VER} \\\n && cmake . -DCMAKE_BUILD_TYPE=MinSizeRel -DCOMMON_C_FLAGS=\"-O3 -s -fno-omit-frame-pointer -pipe\" -DCOMMON_CXX_FLAGS=\"-O3 -s -fno-omit-frame-pointer -pipe\" -DCMAKE_INSTALL_PREFIX=/usr -DSYSCONFDIR=/etc/mysql -DMYSQL_DATADIR=/var/lib/mysql -DMYSQL_UNIX_ADDR=/run/mysqld/mysqld.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DENABLED_LOCAL_INFILE=ON -DINSTALL_INFODIR=share/mysql/docs -DINSTALL_MANDIR=/tmp/_/share/man -DINSTALL_PLUGINDIR=lib/mysql/plugin -DINSTALL_SCRIPTDIR=bin -DINSTALL_DOCREADMEDIR=/tmp/_/share/mysql -DINSTALL_SUPPORTFILESDIR=share/mysql -DINSTALL_MYSQLSHAREDIR=share/mysql -DINSTALL_DOCDIR=/tmp/_/share/mysql/docs -DINSTALL_SHAREDIR=share/mysql -DWITH_READLINE=ON -DWITH_ZLIB=system -DWITH_SSL=system -DWITH_LIBWRAP=OFF -DWITH_JEMALLOC=no -DWITH_EXTRA_CHARSETS=complex -DPLUGIN_ARCHIVE=STATIC -DPLUGIN_BLACKHOLE=DYNAMIC -DPLUGIN_INNOBASE=STATIC -DPLUGIN_PARTITION=AUTO -DPLUGIN_CONNECT=NO -DPLUGIN_TOKUDB=NO -DPLUGIN_FEEDBACK=NO -DPLUGIN_OQGRAPH=YES -DPLUGIN_FEDERATED=NO -DPLUGIN_FEDERATEDX=NO -DWITHOUT_FEDERATED_STORAGE_ENGINE=1 -DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 -DWITHOUT_PBXT_STORAGE_ENGINE=1 -DWITHOUT_ROCKSDB_STORAGE_ENGINE=1 -DWITH_EMBEDDED_SERVER=OFF -DWITH_UNIT_TESTS=OFF -DENABLED_PROFILING=OFF -DENABLE_DEBUG_SYNC=OFF \\\n && make -j \"$( nproc ;)\" \\\n && make -j \"$( nproc ;)\" install \\\n && cp /usr/share/mysql/my-large.cnf /etc/mysql/my.cnf \\\n && echo \"!includedir /etc/mysql/conf.d/\" >> /etc/mysql/my.cnf \\\n && sed -i '/# Try number of CPU/d' /etc/mysql/my.cnf \\\n && sed -i '/thread_concurrency = 8/d' /etc/mysql/my.cnf \\\n && sed -i '/innodb_additional_mem_pool_size/d' /etc/mysql/my.cnf \\\n && sed -i 's/log-bin=/#log-bin=/' /etc/mysql/my.cnf \\\n && sed -i 's/binlog_format=/#binlog_format=/' /etc/mysql/my.cnf \\\n && sed -i 's/#innodb_/innodb_/' /etc/mysql/my.cnf \\\n && rm -rf /opt/src \\\n && rm -rf /tmp/_ \\\n && rm -rf /usr/sql-bench \\\n && rm -rf /usr/mysql-test \\\n && rm -rf /usr/data \\\n && rm -rf /usr/lib/python2.7 \\\n && rm -rf /usr/bin/mysql_client_test \\\n && rm -rf /usr/bin/mysqltest \\\n && apk del ca-certificates alpine-sdk cmake ncurses-dev gnutls-dev curl-dev libxml2-dev libaio-dev linux-headers bison boost-dev \\\n && mkdir -p /var/lib/mysql \\\n && mkdir -p /run/mysqld \\\n && mkdir /etc/mysql/conf.d \\\n && mkdir -p /opt/mariadb/pre-init.d \\\n && mkdir -p /opt/mariadb/post-init.d \\\n && mkdir -p /opt/mariadb/pre-exec.d \\\n && chown -R mysql:mysql /var/lib/mysql \\\n && chown -R mysql:mysql /run/mysqld \\\n && chmod -R 755 /opt/mariadb \\\n && apk update \\\n && apk add logrotate=3.20.1-r3 supervisor=4.2.4-r0 \\\n && rm -f /etc/supervisord.conf \\\n && mkdir -p $PHPMYADMIN_SOURCE \\\n && apk upgrade \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/*\n#   =========\n#   Configure\n#   =========\nRUN set -ex \\\n && rm -rf /var/log/mysql \\\n && ln -s $MARIADB_LOG_DIR /var/log/mysql \\\n && rm -rf /var/log/nginx \\\n && ln -s $NGINX_LOG_DIR /var/log/nginx \\\n && rm -rf /var/log/supervisor \\\n && ln -s $SUPERVISOR_LOG_DIR /var/log/supervisor\n#   ssh\nCOPY sshd_config /etc/ssh/\n#   php\nCOPY php.ini /usr/local/etc/php/php.ini\nCOPY opcache-recommended.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\nCOPY www.conf /usr/local/etc/php/conf.d/www.conf\nCOPY zz-docker.conf /usr/local/etc/php-fpm.d/zz-docker.conf\n#   nginx\nCOPY spec-settings.conf /etc/nginx/conf.d/spec-settings.conf\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY default.conf /etc/nginx/conf.d/default.conf\n#   mariadb\nCOPY mariadb.cnf /etc/mysql/my.cnf\n#   phpmyadmin\nCOPY phpMyAdmin.tar.gz $PHPMYADMIN_SOURCE/phpMyAdmin.tar.gz\nCOPY phpmyadmin-config.inc.php $PHPMYADMIN_SOURCE/\nCOPY phpmyadmin-default.conf $PHPMYADMIN_SOURCE/phpmyadmin-default.conf\n#   log rotater\nCOPY logrotate.conf /etc/logrotate.conf\nCOPY nginx /etc/logrotate.d/nginx\n#   supervisor\nCOPY supervisord.conf /etc/\nCOPY super_nginx.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/super_nginx.sh\n#\n#   =====\n#   final\n#   =====\nCOPY init_container.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/init_container.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"init_container.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.2.12-fpm-alpine3.8\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n#  ========\n#  ENV vars\n#  ========\n#  ssh\nENV SSH_PASSWD=\"\\\"root:Docker!\\\"\"\n# nginx\nENV NGINX_VERSION=\"1.14.0\"\nENV NGINX_LOG_DIR=\"\\\"/home/LogFiles/nginx\\\"\"\n# php\nENV PHP_HOME=\"\\\"/usr/local/etc/php\\\"\"\nENV PHP_CONF_DIR=\"$PHP_HOME\"\nENV PHP_CONF_FILE=\"$PHP_CONF_DIR\\\"/php.ini\\\"\"\n#  mariadb\nENV MARIADB_DATA_DIR=\"\\\"/home/data/mysql\\\"\"\nENV MARIADB_LOG_DIR=\"\\\"/home/LogFiles/mysql\\\"\"\nENV MARIADB_VER=\"10.1.26\"\nENV JUDY_VER=\"1.0.5\"\n#  phpmyadmin\nENV PHPMYADMIN_SOURCE=\"\\\"/usr/src/phpmyadmin\\\"\"\nENV PHPMYADMIN_HOME=\"\\\"/home/phpmyadmin\\\"\"\n# Web Site Home\nENV HOME_SITE=\"\\\"/home/site/wwwroot\\\"\"\n#  supervisor\nENV SUPERVISOR_LOG_DIR=\"\\\"/home/LogFiles/supervisor\\\"\"\n#\n#  --------\n#  ~. tools\n#  --------\nRUN set -ex \\\n && apk update \\\n && apk add --no-cache openssl git net-tools tcpdump tcptraceroute vim curl wget bash \\\n && cd /usr/bin \\\n && wget http://www.vdberg.org/~richard/tcpping \\\n && chmod 777 tcpping \\\n && apk add --no-cache --virtual .build-dependencies $PHPIZE_DEPS zlib-dev cyrus-sasl-dev git autoconf g++ libtool make pcre-dev tini libintl icu icu-dev libxml2-dev postgresql-dev freetype-dev libjpeg-turbo-dev libpng-dev gmp gmp-dev libmemcached-dev imagemagick-dev libssh2 libssh2-dev libxslt-dev \\\n && docker-php-source extract \\\n && pecl install xdebug-beta apcu \\\n && docker-php-ext-install -j \"$( nproc ;)\" mysqli opcache pdo_mysql pdo_pgsql \\\n && docker-php-ext-enable apcu \\\n && docker-php-source delete \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --virtual .drupal-phpexts-rundeps $runDeps \\\n && apk del .build-dependencies \\\n && docker-php-source delete \\\n && mkdir -p /usr/local/php/tmp \\\n && chmod 777 /usr/local/php/tmp \\\n && apk add --no-cache openssh-server \\\n && echo \"$SSH_PASSWD\" | chpasswd \\\n && apk add --no-cache openrc \\\n && sed -i 's/\"cgroup_add_service/\" # cgroup_add_service/g' /lib/rc/sh/openrc-run.sh\n#  ----------\n#  Nginx\n#  ----------   \nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && CONFIG=\" --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module \" \\\n && addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && apk add --no-cache tzdata \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && mkdir -p /etc/nginx/conf.d \\\n && mkdir -p ${HOME_SITE} \\\n && chown -R www-data:www-data $HOME_SITE \\\n && echo \"<?php phpinfo();\" > $HOME_SITE/index.php \\\n && echo http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \\\n && apk add --no-cache pwgen openssl ca-certificates libstdc++ libaio gnutls ncurses-libs libcurl libxml2 boost proj4 geos alpine-sdk cmake ncurses-dev gnutls-dev curl-dev libxml2-dev libaio-dev linux-headers bison boost-dev \\\n && update-ca-certificates \\\n && addgroup -S -g 500 mysql \\\n && adduser -S -D -H -u 500 -G mysql -g \"MySQL\" mysql \\\n && mkdir -p /opt/src \\\n && wget -O /opt/src/mdb.tar.gz http://ftp.hosteurope.de/mirror/archive.mariadb.org//mariadb-$MARIADB_VER/source/mariadb-$MARIADB_VER.tar.gz \\\n && mkdir -p /etc/mysql \\\n && cd /opt/src \\\n && tar -xf mdb.tar.gz \\\n && rm mdb.tar.gz \\\n && wget -O /opt/src/judy.tar.gz http://downloads.sourceforge.net/project/judy/judy/Judy-${JUDY_VER}/Judy-${JUDY_VER}.tar.gz \\\n && cd /opt/src \\\n && tar -xf judy.tar.gz \\\n && rm judy.tar.gz \\\n && cd /opt/src/judy-${JUDY_VER} \\\n && CFLAGS=\"-O2 -s\" CXXFLAGS=\"-O2 -s\" ./configure \\\n && make \\\n && make install \\\n && mkdir -p /tmp/_ \\\n && cd /opt/src/mariadb-${MARIADB_VER} \\\n && cmake . -DCMAKE_BUILD_TYPE=MinSizeRel -DCOMMON_C_FLAGS=\"-O3 -s -fno-omit-frame-pointer -pipe\" -DCOMMON_CXX_FLAGS=\"-O3 -s -fno-omit-frame-pointer -pipe\" -DCMAKE_INSTALL_PREFIX=/usr -DSYSCONFDIR=/etc/mysql -DMYSQL_DATADIR=/var/lib/mysql -DMYSQL_UNIX_ADDR=/run/mysqld/mysqld.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DENABLED_LOCAL_INFILE=ON -DINSTALL_INFODIR=share/mysql/docs -DINSTALL_MANDIR=/tmp/_/share/man -DINSTALL_PLUGINDIR=lib/mysql/plugin -DINSTALL_SCRIPTDIR=bin -DINSTALL_DOCREADMEDIR=/tmp/_/share/mysql -DINSTALL_SUPPORTFILESDIR=share/mysql -DINSTALL_MYSQLSHAREDIR=share/mysql -DINSTALL_DOCDIR=/tmp/_/share/mysql/docs -DINSTALL_SHAREDIR=share/mysql -DWITH_READLINE=ON -DWITH_ZLIB=system -DWITH_SSL=system -DWITH_LIBWRAP=OFF -DWITH_JEMALLOC=no -DWITH_EXTRA_CHARSETS=complex -DPLUGIN_ARCHIVE=STATIC -DPLUGIN_BLACKHOLE=DYNAMIC -DPLUGIN_INNOBASE=STATIC -DPLUGIN_PARTITION=AUTO -DPLUGIN_CONNECT=NO -DPLUGIN_TOKUDB=NO -DPLUGIN_FEEDBACK=NO -DPLUGIN_OQGRAPH=YES -DPLUGIN_FEDERATED=NO -DPLUGIN_FEDERATEDX=NO -DWITHOUT_FEDERATED_STORAGE_ENGINE=1 -DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 -DWITHOUT_PBXT_STORAGE_ENGINE=1 -DWITHOUT_ROCKSDB_STORAGE_ENGINE=1 -DWITH_EMBEDDED_SERVER=OFF -DWITH_UNIT_TESTS=OFF -DENABLED_PROFILING=OFF -DENABLE_DEBUG_SYNC=OFF \\\n && make -j \"$( nproc ;)\" \\\n && make -j \"$( nproc ;)\" install \\\n && cp /usr/share/mysql/my-large.cnf /etc/mysql/my.cnf \\\n && echo \"!includedir /etc/mysql/conf.d/\" >> /etc/mysql/my.cnf \\\n && sed -i '/# Try number of CPU/d' /etc/mysql/my.cnf \\\n && sed -i '/thread_concurrency = 8/d' /etc/mysql/my.cnf \\\n && sed -i '/innodb_additional_mem_pool_size/d' /etc/mysql/my.cnf \\\n && sed -i 's/log-bin=/#log-bin=/' /etc/mysql/my.cnf \\\n && sed -i 's/binlog_format=/#binlog_format=/' /etc/mysql/my.cnf \\\n && sed -i 's/#innodb_/innodb_/' /etc/mysql/my.cnf \\\n && rm -rf /opt/src \\\n && rm -rf /tmp/_ \\\n && rm -rf /usr/sql-bench \\\n && rm -rf /usr/mysql-test \\\n && rm -rf /usr/data \\\n && rm -rf /usr/lib/python2.7 \\\n && rm -rf /usr/bin/mysql_client_test \\\n && rm -rf /usr/bin/mysqltest \\\n && apk del ca-certificates alpine-sdk cmake ncurses-dev gnutls-dev curl-dev libxml2-dev libaio-dev linux-headers bison boost-dev \\\n && mkdir -p /var/lib/mysql \\\n && mkdir -p /run/mysqld \\\n && mkdir /etc/mysql/conf.d \\\n && mkdir -p /opt/mariadb/pre-init.d \\\n && mkdir -p /opt/mariadb/post-init.d \\\n && mkdir -p /opt/mariadb/pre-exec.d \\\n && chown -R mysql:mysql /var/lib/mysql \\\n && chown -R mysql:mysql /run/mysqld \\\n && chmod -R 755 /opt/mariadb \\\n && apk update \\\n && apk add logrotate supervisor \\\n && rm -f /etc/supervisord.conf \\\n && mkdir -p $PHPMYADMIN_SOURCE \\\n && apk upgrade \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/*\n#  =========\n#  Configure\n#  =========\nRUN set -ex \\\n && rm -rf /var/log/mysql \\\n && ln -s $MARIADB_LOG_DIR /var/log/mysql \\\n && rm -rf /var/log/nginx \\\n && ln -s $NGINX_LOG_DIR /var/log/nginx \\\n && rm -rf /var/log/supervisor \\\n && ln -s $SUPERVISOR_LOG_DIR /var/log/supervisor\n#  ssh\nCOPY sshd_config /etc/ssh/\n#  php\nCOPY php.ini /usr/local/etc/php/php.ini\nCOPY opcache-recommended.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\nCOPY www.conf /usr/local/etc/php/conf.d/www.conf\nCOPY zz-docker.conf /usr/local/etc/php-fpm.d/zz-docker.conf\n#  nginx\nCOPY spec-settings.conf /etc/nginx/conf.d/spec-settings.conf\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY default.conf /etc/nginx/conf.d/default.conf\n#  mariadb\nCOPY mariadb.cnf /etc/mysql/my.cnf\n#  phpmyadmin\nCOPY phpMyAdmin.tar.gz $PHPMYADMIN_SOURCE/phpMyAdmin.tar.gz\nCOPY phpmyadmin-config.inc.php $PHPMYADMIN_SOURCE/\nCOPY phpmyadmin-default.conf $PHPMYADMIN_SOURCE/phpmyadmin-default.conf\n#  log rotater\nCOPY logrotate.conf /etc/logrotate.conf\nCOPY nginx /etc/logrotate.d/nginx\n#  supervisor\nCOPY supervisord.conf /etc/\nCOPY super_nginx.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/super_nginx.sh\n#\n#  =====\n#  final\n#  =====\nCOPY init_container.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/init_container.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"init_container.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"5bbf11c8ef626b8d5e7d65759e86a020","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.2.12-fpm-alpine3.8\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n#   ========\n#   ENV vars\n#   ========\n#   ssh\nENV SSH_PASSWD=\"\\\"root:Docker!\\\"\"\n#  nginx\nENV NGINX_VERSION=\"1.14.0\"\nENV NGINX_LOG_DIR=\"\\\"/home/LogFiles/nginx\\\"\"\n#  php\nENV PHP_HOME=\"\\\"/usr/local/etc/php\\\"\"\nENV PHP_CONF_DIR=\"$PHP_HOME\"\nENV PHP_CONF_FILE=\"$PHP_CONF_DIR\\\"/php.ini\\\"\"\n#   mariadb\nENV MARIADB_DATA_DIR=\"\\\"/home/data/mysql\\\"\"\nENV MARIADB_LOG_DIR=\"\\\"/home/LogFiles/mysql\\\"\"\nENV MARIADB_VER=\"10.1.26\"\nENV JUDY_VER=\"1.0.5\"\n#   phpmyadmin\nENV PHPMYADMIN_SOURCE=\"\\\"/usr/src/phpmyadmin\\\"\"\nENV PHPMYADMIN_HOME=\"\\\"/home/phpmyadmin\\\"\"\n#  Web Site Home\nENV HOME_SITE=\"\\\"/home/site/wwwroot\\\"\"\n#   supervisor\nENV SUPERVISOR_LOG_DIR=\"\\\"/home/LogFiles/supervisor\\\"\"\n#\n#   --------\n#   ~. tools\n#   --------\nRUN set -ex \\\n && apk update \\\n && apk add --no-cache openssl git net-tools tcpdump tcptraceroute vim curl wget bash \\\n && cd /usr/bin \\\n && wget http://www.vdberg.org/~richard/tcpping \\\n && chmod 777 tcpping \\\n && apk add --no-cache --virtual .build-dependencies $PHPIZE_DEPS zlib-dev cyrus-sasl-dev git autoconf g++ libtool make pcre-dev tini libintl icu icu-dev libxml2-dev postgresql-dev freetype-dev libjpeg-turbo-dev libpng-dev gmp gmp-dev libmemcached-dev imagemagick-dev libssh2 libssh2-dev libxslt-dev \\\n && docker-php-source extract \\\n && pecl install xdebug-beta apcu \\\n && docker-php-ext-install -j \"$( nproc ;)\" mysqli opcache pdo_mysql pdo_pgsql \\\n && docker-php-ext-enable apcu \\\n && docker-php-source delete \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --virtual .drupal-phpexts-rundeps $runDeps \\\n && apk del .build-dependencies \\\n && docker-php-source delete \\\n && mkdir -p /usr/local/php/tmp \\\n && chmod 777 /usr/local/php/tmp \\\n && apk add --no-cache openssh-server \\\n && echo \"$SSH_PASSWD\" | chpasswd \\\n && apk add --no-cache openrc \\\n && sed -i 's/\"cgroup_add_service/\" # cgroup_add_service/g' /lib/rc/sh/openrc-run.sh\n#   ----------\n#   Nginx\n#   ----------   \nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && CONFIG=\" --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module \" \\\n && addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n && rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && apk del .gettext \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && apk add --no-cache tzdata \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && mkdir -p /etc/nginx/conf.d \\\n && mkdir -p ${HOME_SITE} \\\n && chown -R www-data:www-data $HOME_SITE \\\n && echo \"<?php phpinfo();\" > $HOME_SITE/index.php \\\n && echo http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \\\n && apk add --no-cache pwgen openssl ca-certificates libstdc++ libaio gnutls ncurses-libs libcurl libxml2 boost proj4 geos alpine-sdk cmake ncurses-dev gnutls-dev curl-dev libxml2-dev libaio-dev linux-headers bison boost-dev \\\n && update-ca-certificates \\\n && addgroup -S -g 500 mysql \\\n && adduser -S -D -H -u 500 -G mysql -g \"MySQL\" mysql \\\n && mkdir -p /opt/src \\\n && wget -O /opt/src/mdb.tar.gz http://ftp.hosteurope.de/mirror/archive.mariadb.org//mariadb-$MARIADB_VER/source/mariadb-$MARIADB_VER.tar.gz \\\n && mkdir -p /etc/mysql \\\n && cd /opt/src \\\n && tar -xf mdb.tar.gz \\\n && rm mdb.tar.gz \\\n && wget -O /opt/src/judy.tar.gz http://downloads.sourceforge.net/project/judy/judy/Judy-${JUDY_VER}/Judy-${JUDY_VER}.tar.gz \\\n && cd /opt/src \\\n && tar -xf judy.tar.gz \\\n && rm judy.tar.gz \\\n && cd /opt/src/judy-${JUDY_VER} \\\n && CFLAGS=\"-O2 -s\" CXXFLAGS=\"-O2 -s\" ./configure \\\n && make \\\n && make install \\\n && mkdir -p /tmp/_ \\\n && cd /opt/src/mariadb-${MARIADB_VER} \\\n && cmake . -DCMAKE_BUILD_TYPE=MinSizeRel -DCOMMON_C_FLAGS=\"-O3 -s -fno-omit-frame-pointer -pipe\" -DCOMMON_CXX_FLAGS=\"-O3 -s -fno-omit-frame-pointer -pipe\" -DCMAKE_INSTALL_PREFIX=/usr -DSYSCONFDIR=/etc/mysql -DMYSQL_DATADIR=/var/lib/mysql -DMYSQL_UNIX_ADDR=/run/mysqld/mysqld.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DENABLED_LOCAL_INFILE=ON -DINSTALL_INFODIR=share/mysql/docs -DINSTALL_MANDIR=/tmp/_/share/man -DINSTALL_PLUGINDIR=lib/mysql/plugin -DINSTALL_SCRIPTDIR=bin -DINSTALL_DOCREADMEDIR=/tmp/_/share/mysql -DINSTALL_SUPPORTFILESDIR=share/mysql -DINSTALL_MYSQLSHAREDIR=share/mysql -DINSTALL_DOCDIR=/tmp/_/share/mysql/docs -DINSTALL_SHAREDIR=share/mysql -DWITH_READLINE=ON -DWITH_ZLIB=system -DWITH_SSL=system -DWITH_LIBWRAP=OFF -DWITH_JEMALLOC=no -DWITH_EXTRA_CHARSETS=complex -DPLUGIN_ARCHIVE=STATIC -DPLUGIN_BLACKHOLE=DYNAMIC -DPLUGIN_INNOBASE=STATIC -DPLUGIN_PARTITION=AUTO -DPLUGIN_CONNECT=NO -DPLUGIN_TOKUDB=NO -DPLUGIN_FEEDBACK=NO -DPLUGIN_OQGRAPH=YES -DPLUGIN_FEDERATED=NO -DPLUGIN_FEDERATEDX=NO -DWITHOUT_FEDERATED_STORAGE_ENGINE=1 -DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 -DWITHOUT_PBXT_STORAGE_ENGINE=1 -DWITHOUT_ROCKSDB_STORAGE_ENGINE=1 -DWITH_EMBEDDED_SERVER=OFF -DWITH_UNIT_TESTS=OFF -DENABLED_PROFILING=OFF -DENABLE_DEBUG_SYNC=OFF \\\n && make -j \"$( nproc ;)\" \\\n && make -j \"$( nproc ;)\" install \\\n && cp /usr/share/mysql/my-large.cnf /etc/mysql/my.cnf \\\n && echo \"!includedir /etc/mysql/conf.d/\" >> /etc/mysql/my.cnf \\\n && sed -i '/# Try number of CPU/d' /etc/mysql/my.cnf \\\n && sed -i '/thread_concurrency = 8/d' /etc/mysql/my.cnf \\\n && sed -i '/innodb_additional_mem_pool_size/d' /etc/mysql/my.cnf \\\n && sed -i 's/log-bin=/#log-bin=/' /etc/mysql/my.cnf \\\n && sed -i 's/binlog_format=/#binlog_format=/' /etc/mysql/my.cnf \\\n && sed -i 's/#innodb_/innodb_/' /etc/mysql/my.cnf \\\n && rm -rf /opt/src \\\n && rm -rf /tmp/_ \\\n && rm -rf /usr/sql-bench \\\n && rm -rf /usr/mysql-test \\\n && rm -rf /usr/data \\\n && rm -rf /usr/lib/python2.7 \\\n && rm -rf /usr/bin/mysql_client_test \\\n && rm -rf /usr/bin/mysqltest \\\n && apk del ca-certificates alpine-sdk cmake ncurses-dev gnutls-dev curl-dev libxml2-dev libaio-dev linux-headers bison boost-dev \\\n && mkdir -p /var/lib/mysql \\\n && mkdir -p /run/mysqld \\\n && mkdir /etc/mysql/conf.d \\\n && mkdir -p /opt/mariadb/pre-init.d \\\n && mkdir -p /opt/mariadb/post-init.d \\\n && mkdir -p /opt/mariadb/pre-exec.d \\\n && chown -R mysql:mysql /var/lib/mysql \\\n && chown -R mysql:mysql /run/mysqld \\\n && chmod -R 755 /opt/mariadb \\\n && apk update \\\n && apk add logrotate supervisor \\\n && rm -f /etc/supervisord.conf \\\n && mkdir -p $PHPMYADMIN_SOURCE \\\n && apk upgrade \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/*\n#   =========\n#   Configure\n#   =========\nRUN set -ex \\\n && rm -rf /var/log/mysql \\\n && ln -s $MARIADB_LOG_DIR /var/log/mysql \\\n && rm -rf /var/log/nginx \\\n && ln -s $NGINX_LOG_DIR /var/log/nginx \\\n && rm -rf /var/log/supervisor \\\n && ln -s $SUPERVISOR_LOG_DIR /var/log/supervisor\n#   ssh\nCOPY sshd_config /etc/ssh/\n#   php\nCOPY php.ini /usr/local/etc/php/php.ini\nCOPY opcache-recommended.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\nCOPY www.conf /usr/local/etc/php/conf.d/www.conf\nCOPY zz-docker.conf /usr/local/etc/php-fpm.d/zz-docker.conf\n#   nginx\nCOPY spec-settings.conf /etc/nginx/conf.d/spec-settings.conf\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY default.conf /etc/nginx/conf.d/default.conf\n#   mariadb\nCOPY mariadb.cnf /etc/mysql/my.cnf\n#   phpmyadmin\nCOPY phpMyAdmin.tar.gz $PHPMYADMIN_SOURCE/phpMyAdmin.tar.gz\nCOPY phpmyadmin-config.inc.php $PHPMYADMIN_SOURCE/\nCOPY phpmyadmin-default.conf $PHPMYADMIN_SOURCE/phpmyadmin-default.conf\n#   log rotater\nCOPY logrotate.conf /etc/logrotate.conf\nCOPY nginx /etc/logrotate.d/nginx\n#   supervisor\nCOPY supervisord.conf /etc/\nCOPY super_nginx.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/super_nginx.sh\n#\n#   =====\n#   final\n#   =====\nCOPY init_container.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/init_container.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"init_container.sh\"]\n","originalDockerfileUglifiedHash":"c9213e6601eac07be19c089d7b431244","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dcda7f2cc46f4423fbb997b8525edd545da3c2c0.dockerfile"}