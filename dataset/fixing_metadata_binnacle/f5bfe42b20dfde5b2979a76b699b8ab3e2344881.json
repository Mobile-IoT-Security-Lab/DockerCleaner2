{"seed":3419215837,"processedDockerfileHash":"17a108df5750639b1e422b6d11e12309","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nARG LIB_MONGOC_VERSION=1.14.0\nARG LIB_THRIFT_VERSION=0.12.0\nARG LIB_JSON_VERSION=3.6.1\nARG LIB_JAEGER_VERSION=0.4.2\nARG LIB_YAML_VERSION=0.6.2\nARG LIB_OPENTRACING_VERSION=1.5.1\nARG LIB_CPP_JWT_VERSION=1.1.1\nARG LIB_CPP_REDIS_VERSION=4.3.1\nARG LIB_AMQP_CPP_VERSION=4.1.4\nARG LIB_SIMPLEAMQPCLIENT_VERSION=2.4.0\nARG NUM_CPUS=40\nARG BUILD_DEPS=\"ca-certificates g++ cmake wget git libmemcached-dev automake bison flex libboost-all-dev libevent-dev libssl-dev libtool make pkg-config librabbitmq-dev\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ${BUILD_DEPS} -y \\\n && cd /tmp \\\n && wget https://github.com/mongodb/mongo-c-driver/releases/download/${LIB_MONGOC_VERSION}/mongo-c-driver-${LIB_MONGOC_VERSION}.tar.gz \\\n && tar -zxf mongo-c-driver-${LIB_MONGOC_VERSION}.tar.gz \\\n && cd mongo-c-driver-${LIB_MONGOC_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTS=0 -DENABLE_EXAMPLES=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O thrift-${LIB_THRIFT_VERSION}.tar.gz https://github.com/apache/thrift/archive/v${LIB_THRIFT_VERSION}.tar.gz \\\n && tar -zxf thrift-${LIB_THRIFT_VERSION}.tar.gz \\\n && cd thrift-${LIB_THRIFT_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O json-${LIB_JSON_VERSION}.tar.gz https://github.com/nlohmann/json/archive/v${LIB_JSON_VERSION}.tar.gz \\\n && tar -zxf json-${LIB_JSON_VERSION}.tar.gz \\\n && cd json-${LIB_JSON_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O yaml-cpp-${LIB_YAML_VERSION}.tar.gz https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-${LIB_YAML_VERSION}.tar.gz \\\n && tar -zxf yaml-cpp-${LIB_YAML_VERSION}.tar.gz \\\n && cd yaml-cpp-yaml-cpp-${LIB_YAML_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-fPIC\" -DYAML_CPP_BUILD_TESTS=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O opentracing-cpp-${LIB_OPENTRACING_VERSION}.tar.gz https://github.com/opentracing/opentracing-cpp/archive/v${LIB_OPENTRACING_VERSION}.tar.gz \\\n && tar -zxf opentracing-cpp-${LIB_OPENTRACING_VERSION}.tar.gz \\\n && cd opentracing-cpp-${LIB_OPENTRACING_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-fPIC\" -DBUILD_TESTING=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O jaeger-client-cpp-${LIB_JAEGER_VERSION}.tar.gz https://github.com/jaegertracing/jaeger-client-cpp/archive/v${LIB_JAEGER_VERSION}.tar.gz \\\n && tar -zxf jaeger-client-cpp-${LIB_JAEGER_VERSION}.tar.gz \\\n && cd jaeger-client-cpp-${LIB_JAEGER_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-fPIC\" -DHUNTER_ENABLED=0 -DBUILD_TESTING=0 -DJAEGERTRACING_WITH_YAML_CPP=1 -DJAEGERTRACING_BUILD_EXAMPLES=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O cpp-jwt-${LIB_CPP_JWT_VERSION}.tar.gz https://github.com/arun11299/cpp-jwt/archive/v${LIB_CPP_JWT_VERSION}.tar.gz \\\n && tar -zxf cpp-jwt-${LIB_CPP_JWT_VERSION}.tar.gz \\\n && cd cpp-jwt-${LIB_CPP_JWT_VERSION} \\\n && cp -R include/jwt /usr/local/include \\\n && rm -rf /usr/local/include/jwt/json \\\n && sed -i 's/\\#include \\\"jwt\\/json\\/json.hpp\\\"/\\#include \\<nlohmann\\/json\\.hpp\\>/g' /usr/local/include/jwt/jwt.hpp \\\n && cd /tmp \\\n && git clone https://github.com/cpp-redis/cpp_redis.git \\\n && cd cpp_redis \\\n && git checkout ${LIB_CPP_REDIS_VERSION} \\\n && git submodule init \\\n && git submodule update \\\n && mkdir cmake-build \\\n && cd cmake-build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && git clone https://github.com/CopernicaMarketingSoftware/AMQP-CPP.git \\\n && cd AMQP-CPP \\\n && git checkout v${LIB_AMQP_CPP_VERSION} \\\n && mkdir cmake-build \\\n && cd cmake-build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release -DAMQP-CPP_BUILD_SHARED=on -DAMQP-CPP_LINUX_TCP=on \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && git clone https://github.com/alanxz/SimpleAmqpClient.git \\\n && cd SimpleAmqpClient \\\n && git checkout v${LIB_SIMPLEAMQPCLIENT_VERSION} \\\n && mkdir cmake-build \\\n && cd cmake-build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && rm -rf mongo-c-driver-${LIB_MONGOC_VERSION}.tar.gz mongo-c-driver-${LIB_MONGOC_VERSION} thrift-${LIB_THRIFT_VERSION}.tar.gz thrift-${LIB_THRIFT_VERSION} json-${LIB_JSON_VERSION}.tar.gz json-${LIB_JSON_VERSION} jaeger-client-cpp-${LIB_JAEGER_VERSION}.tar.gz jaeger-client-cpp-${LIB_JAEGER_VERSION} yaml-cpp-${LIB_YAML_VERSION}.tar.gz yaml-cpp-yaml-cpp-${LIB_YAML_VERSION} opentracing-cpp-${LIB_OPENTRACING_VERSION}.tar.gz opentracing-cpp-${LIB_OPENTRACING_VERSION} cpp-jwt-${LIB_CPP_JWT_VERSION}.tar.gz cpp-jwt-${LIB_CPP_JWT_VERSION} cpp_redis AMQP-CPP SimpleAmqpClient ENV LD_LIBRARY_PATH /usr/local/lib:${LD_LIBRARY_PATH}\nRUN ldconfig\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nARG LIB_MONGOC_VERSION=1.14.0\nARG LIB_THRIFT_VERSION=0.12.0\nARG LIB_JSON_VERSION=3.6.1\nARG LIB_JAEGER_VERSION=0.4.2\nARG LIB_YAML_VERSION=0.6.2\nARG LIB_OPENTRACING_VERSION=1.5.1\nARG LIB_CPP_JWT_VERSION=1.1.1\nARG LIB_CPP_REDIS_VERSION=4.3.1\nARG LIB_AMQP_CPP_VERSION=4.1.4\nARG LIB_SIMPLEAMQPCLIENT_VERSION=2.4.0\nARG NUM_CPUS=40\nARG BUILD_DEPS=\"ca-certificates g++ cmake wget git libmemcached-dev automake bison flex libboost-all-dev libevent-dev libssl-dev libtool make pkg-config librabbitmq-dev\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ${BUILD_DEPS} -y \\\n && cd /tmp \\\n && wget https://github.com/mongodb/mongo-c-driver/releases/download/${LIB_MONGOC_VERSION}/mongo-c-driver-${LIB_MONGOC_VERSION}.tar.gz \\\n && tar -zxf mongo-c-driver-${LIB_MONGOC_VERSION}.tar.gz \\\n && cd mongo-c-driver-${LIB_MONGOC_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTS=0 -DENABLE_EXAMPLES=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O thrift-${LIB_THRIFT_VERSION}.tar.gz https://github.com/apache/thrift/archive/v${LIB_THRIFT_VERSION}.tar.gz \\\n && tar -zxf thrift-${LIB_THRIFT_VERSION}.tar.gz \\\n && cd thrift-${LIB_THRIFT_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O json-${LIB_JSON_VERSION}.tar.gz https://github.com/nlohmann/json/archive/v${LIB_JSON_VERSION}.tar.gz \\\n && tar -zxf json-${LIB_JSON_VERSION}.tar.gz \\\n && cd json-${LIB_JSON_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O yaml-cpp-${LIB_YAML_VERSION}.tar.gz https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-${LIB_YAML_VERSION}.tar.gz \\\n && tar -zxf yaml-cpp-${LIB_YAML_VERSION}.tar.gz \\\n && cd yaml-cpp-yaml-cpp-${LIB_YAML_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-fPIC\" -DYAML_CPP_BUILD_TESTS=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O opentracing-cpp-${LIB_OPENTRACING_VERSION}.tar.gz https://github.com/opentracing/opentracing-cpp/archive/v${LIB_OPENTRACING_VERSION}.tar.gz \\\n && tar -zxf opentracing-cpp-${LIB_OPENTRACING_VERSION}.tar.gz \\\n && cd opentracing-cpp-${LIB_OPENTRACING_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-fPIC\" -DBUILD_TESTING=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O jaeger-client-cpp-${LIB_JAEGER_VERSION}.tar.gz https://github.com/jaegertracing/jaeger-client-cpp/archive/v${LIB_JAEGER_VERSION}.tar.gz \\\n && tar -zxf jaeger-client-cpp-${LIB_JAEGER_VERSION}.tar.gz \\\n && cd jaeger-client-cpp-${LIB_JAEGER_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-fPIC\" -DHUNTER_ENABLED=0 -DBUILD_TESTING=0 -DJAEGERTRACING_WITH_YAML_CPP=1 -DJAEGERTRACING_BUILD_EXAMPLES=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O cpp-jwt-${LIB_CPP_JWT_VERSION}.tar.gz https://github.com/arun11299/cpp-jwt/archive/v${LIB_CPP_JWT_VERSION}.tar.gz \\\n && tar -zxf cpp-jwt-${LIB_CPP_JWT_VERSION}.tar.gz \\\n && cd cpp-jwt-${LIB_CPP_JWT_VERSION} \\\n && cp -R include/jwt /usr/local/include \\\n && rm -rf /usr/local/include/jwt/json \\\n && sed -i 's/\\#include \\\"jwt\\/json\\/json.hpp\\\"/\\#include \\<nlohmann\\/json\\.hpp\\>/g' /usr/local/include/jwt/jwt.hpp \\\n && cd /tmp \\\n && git clone https://github.com/cpp-redis/cpp_redis.git \\\n && cd cpp_redis \\\n && git checkout ${LIB_CPP_REDIS_VERSION} \\\n && git submodule init \\\n && git submodule update \\\n && mkdir cmake-build \\\n && cd cmake-build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && git clone https://github.com/CopernicaMarketingSoftware/AMQP-CPP.git \\\n && cd AMQP-CPP \\\n && git checkout v${LIB_AMQP_CPP_VERSION} \\\n && mkdir cmake-build \\\n && cd cmake-build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release -DAMQP-CPP_BUILD_SHARED=on -DAMQP-CPP_LINUX_TCP=on \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && git clone https://github.com/alanxz/SimpleAmqpClient.git \\\n && cd SimpleAmqpClient \\\n && git checkout v${LIB_SIMPLEAMQPCLIENT_VERSION} \\\n && mkdir cmake-build \\\n && cd cmake-build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && rm -rf mongo-c-driver-${LIB_MONGOC_VERSION}.tar.gz mongo-c-driver-${LIB_MONGOC_VERSION} thrift-${LIB_THRIFT_VERSION}.tar.gz thrift-${LIB_THRIFT_VERSION} json-${LIB_JSON_VERSION}.tar.gz json-${LIB_JSON_VERSION} jaeger-client-cpp-${LIB_JAEGER_VERSION}.tar.gz jaeger-client-cpp-${LIB_JAEGER_VERSION} yaml-cpp-${LIB_YAML_VERSION}.tar.gz yaml-cpp-yaml-cpp-${LIB_YAML_VERSION} opentracing-cpp-${LIB_OPENTRACING_VERSION}.tar.gz opentracing-cpp-${LIB_OPENTRACING_VERSION} cpp-jwt-${LIB_CPP_JWT_VERSION}.tar.gz cpp-jwt-${LIB_CPP_JWT_VERSION} cpp_redis AMQP-CPP SimpleAmqpClient ENV LD_LIBRARY_PATH /usr/local/lib:${LD_LIBRARY_PATH}\nRUN ldconfig\n","injectedSmells":[],"originalDockerfileHash":"248c5afe042e6625de42be63cbcd17dd","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nARG LIB_MONGOC_VERSION=1.14.0\nARG LIB_THRIFT_VERSION=0.12.0\nARG LIB_JSON_VERSION=3.6.1\nARG LIB_JAEGER_VERSION=0.4.2\nARG LIB_YAML_VERSION=0.6.2\nARG LIB_OPENTRACING_VERSION=1.5.1\nARG LIB_CPP_JWT_VERSION=1.1.1\nARG LIB_CPP_REDIS_VERSION=4.3.1\nARG LIB_AMQP_CPP_VERSION=4.1.4\nARG LIB_SIMPLEAMQPCLIENT_VERSION=2.4.0\nARG NUM_CPUS=40\nARG BUILD_DEPS=\"ca-certificates g++ cmake wget git libmemcached-dev automake bison flex libboost-all-dev libevent-dev libssl-dev libtool make pkg-config librabbitmq-dev\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ${BUILD_DEPS} -y \\\n && cd /tmp \\\n && wget https://github.com/mongodb/mongo-c-driver/releases/download/${LIB_MONGOC_VERSION}/mongo-c-driver-${LIB_MONGOC_VERSION}.tar.gz \\\n && tar -zxf mongo-c-driver-${LIB_MONGOC_VERSION}.tar.gz \\\n && cd mongo-c-driver-${LIB_MONGOC_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTS=0 -DENABLE_EXAMPLES=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O thrift-${LIB_THRIFT_VERSION}.tar.gz https://github.com/apache/thrift/archive/v${LIB_THRIFT_VERSION}.tar.gz \\\n && tar -zxf thrift-${LIB_THRIFT_VERSION}.tar.gz \\\n && cd thrift-${LIB_THRIFT_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O json-${LIB_JSON_VERSION}.tar.gz https://github.com/nlohmann/json/archive/v${LIB_JSON_VERSION}.tar.gz \\\n && tar -zxf json-${LIB_JSON_VERSION}.tar.gz \\\n && cd json-${LIB_JSON_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O yaml-cpp-${LIB_YAML_VERSION}.tar.gz https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-${LIB_YAML_VERSION}.tar.gz \\\n && tar -zxf yaml-cpp-${LIB_YAML_VERSION}.tar.gz \\\n && cd yaml-cpp-yaml-cpp-${LIB_YAML_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-fPIC\" -DYAML_CPP_BUILD_TESTS=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O opentracing-cpp-${LIB_OPENTRACING_VERSION}.tar.gz https://github.com/opentracing/opentracing-cpp/archive/v${LIB_OPENTRACING_VERSION}.tar.gz \\\n && tar -zxf opentracing-cpp-${LIB_OPENTRACING_VERSION}.tar.gz \\\n && cd opentracing-cpp-${LIB_OPENTRACING_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-fPIC\" -DBUILD_TESTING=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O jaeger-client-cpp-${LIB_JAEGER_VERSION}.tar.gz https://github.com/jaegertracing/jaeger-client-cpp/archive/v${LIB_JAEGER_VERSION}.tar.gz \\\n && tar -zxf jaeger-client-cpp-${LIB_JAEGER_VERSION}.tar.gz \\\n && cd jaeger-client-cpp-${LIB_JAEGER_VERSION} \\\n && mkdir -p cmake-build \\\n && cd cmake-build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-fPIC\" -DHUNTER_ENABLED=0 -DBUILD_TESTING=0 -DJAEGERTRACING_WITH_YAML_CPP=1 -DJAEGERTRACING_BUILD_EXAMPLES=0 .. \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && wget -O cpp-jwt-${LIB_CPP_JWT_VERSION}.tar.gz https://github.com/arun11299/cpp-jwt/archive/v${LIB_CPP_JWT_VERSION}.tar.gz \\\n && tar -zxf cpp-jwt-${LIB_CPP_JWT_VERSION}.tar.gz \\\n && cd cpp-jwt-${LIB_CPP_JWT_VERSION} \\\n && cp -R include/jwt /usr/local/include \\\n && rm -rf /usr/local/include/jwt/json \\\n && sed -i 's/\\#include \\\"jwt\\/json\\/json.hpp\\\"/\\#include \\<nlohmann\\/json\\.hpp\\>/g' /usr/local/include/jwt/jwt.hpp \\\n && cd /tmp \\\n && git clone https://github.com/cpp-redis/cpp_redis.git \\\n && cd cpp_redis \\\n && git checkout ${LIB_CPP_REDIS_VERSION} \\\n && git submodule init \\\n && git submodule update \\\n && mkdir cmake-build \\\n && cd cmake-build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && git clone https://github.com/CopernicaMarketingSoftware/AMQP-CPP.git \\\n && cd AMQP-CPP \\\n && git checkout v${LIB_AMQP_CPP_VERSION} \\\n && mkdir cmake-build \\\n && cd cmake-build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release -DAMQP-CPP_BUILD_SHARED=on -DAMQP-CPP_LINUX_TCP=on \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && git clone https://github.com/alanxz/SimpleAmqpClient.git \\\n && cd SimpleAmqpClient \\\n && git checkout v${LIB_SIMPLEAMQPCLIENT_VERSION} \\\n && mkdir cmake-build \\\n && cd cmake-build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release \\\n && make -j${NUM_CPUS} \\\n && make install \\\n && cd /tmp \\\n && rm -rf mongo-c-driver-${LIB_MONGOC_VERSION}.tar.gz mongo-c-driver-${LIB_MONGOC_VERSION} thrift-${LIB_THRIFT_VERSION}.tar.gz thrift-${LIB_THRIFT_VERSION} json-${LIB_JSON_VERSION}.tar.gz json-${LIB_JSON_VERSION} jaeger-client-cpp-${LIB_JAEGER_VERSION}.tar.gz jaeger-client-cpp-${LIB_JAEGER_VERSION} yaml-cpp-${LIB_YAML_VERSION}.tar.gz yaml-cpp-yaml-cpp-${LIB_YAML_VERSION} opentracing-cpp-${LIB_OPENTRACING_VERSION}.tar.gz opentracing-cpp-${LIB_OPENTRACING_VERSION} cpp-jwt-${LIB_CPP_JWT_VERSION}.tar.gz cpp-jwt-${LIB_CPP_JWT_VERSION} cpp_redis AMQP-CPP SimpleAmqpClient ENV LD_LIBRARY_PATH /usr/local/lib:${LD_LIBRARY_PATH}\nRUN ldconfig\n","originalDockerfileUglifiedHash":"248c5afe042e6625de42be63cbcd17dd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f5bfe42b20dfde5b2979a76b699b8ab3e2344881.dockerfile"}