{"seed":447626009,"processedDockerfileHash":"e54e9ac38c474a05e6d5477e0bd5a0ef","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Install 1password\nFROM ubuntu:19.04 AS onepassword_builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl ca-certificates unzip -y\nRUN curl -sS -o 1password.zip https://cache.agilebits.com/dist/1P/op/pkg/v0.5.5/op_linux_amd64_v0.5.5.zip \\\n && unzip 1password.zip op -d /usr/local/bin \\\n && rm 1password.zip\n#   Install doctl\nFROM ubuntu:19.04 AS doctl_builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget ca-certificates -y\nRUN wget https://github.com/digitalocean/doctl/releases/download/v1.14.0/doctl-1.14.0-linux-amd64.tar.gz \\\n && tar xf doctl-1.14.0-linux-amd64.tar.gz \\\n && chmod +x doctl \\\n && mv doctl /usr/local/bin \\\n && rm doctl-1.14.0-linux-amd64.tar.gz\n#   Install terraform\nFROM ubuntu:19.04 AS terraform_builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget ca-certificates unzip -y\nRUN wget https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip \\\n && unzip terraform_0.11.13_linux_amd64.zip \\\n && chmod +x terraform \\\n && mv terraform /usr/local/bin \\\n && rm terraform_0.11.13_linux_amd64.zip\n#   Install rust\nFROM ubuntu:19.04 AS rust_builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl ca-certificates -y\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\n#   base OS\nFROM ubuntu:19.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends build-essential ca-certificates curl docker.io git jq less man mosh openssh-server postgresql-contrib ripgrep silversearcher-ag software-properties-common sudo tig tmate tmux tree unzip wget zip zlib1g-dev -qq -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Fish\nRUN apt-add-repository ppa:fish-shell/release-3 \\\n && apt-get update \\\n && apt-get install --no-install-recommends fish -y\n#   Set up SSH for port 3222\nRUN mkdir /run/sshd\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nRUN sed 's/#Port 22/Port 3222/' -i /etc/ssh/sshd_config\n#   Install vim\nRUN add-apt-repository ppa:jonathonf/vim -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends vim-gtk3 -y\n#   Install rbenv\nRUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv \\\n && eval \"$( ~/.rbenv/bin/rbenv init - ;)\"\n#   Install ruby-install\nRUN wget -O ruby-install-0.7.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.7.0.tar.gz \\\n && tar -xzvf ruby-install-0.7.0.tar.gz \\\n && cd ruby-install-0.7.0/ \\\n && make install \\\n && cd \\\n && rm -rf ruby-install-0.7.0*\n#   Install the latest version of Ruby\nRUN wget https://raw.githubusercontent.com/davidcelis/dotfiles/master/ruby-version \\\n && ruby-install ruby $( cat ruby-version ;) -c -i ~/.rbenv/versions/$( cat ruby-version ;) \\\n && rm ruby-version\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen --purge $LANG \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=$LANG LC_ALL=$LC_ALL LANGUAGE=$LANGUAGE\n#   For correct colors in tmux\nENV TERM=\"screen-256color\"\n#   1p\nCOPY --from=onepassword_builder /usr/local/bin/op /usr/local/bin/\n#   doctl tools\nCOPY --from=doctl_builder /usr/local/bin/doctl /usr/local/bin/\n#   Terraform tools\nCOPY --from=terraform_builder /usr/local/bin/terraform /usr/local/bin/\n#   Rust tools\nCOPY --from=rust_builder /root/.cargo ~/.cargo\nRUN cargo install exa\n#   Authorize my SSH keys\nRUN mkdir ~/.ssh \\\n && curl -fsL https://github.com/davidcelis.keys > ~/.ssh/authorized_keys \\\n && chmod 700 ~/.ssh \\\n && chmod 600 ~/.ssh/authorized_keys\n#   tmux plugins\nRUN git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm\nRUN git clone https://github.com/tmux-plugins/tmux-open.git ~/.tmux/plugins/tmux-open\nRUN git clone https://github.com/tmux-plugins/tmux-yank.git ~/.tmux/plugins/tmux-yank\nRUN git clone https://github.com/tmux-plugins/tmux-prefix-highlight.git ~/.tmux/plugins/tmux-prefix-highlight\nRUN chsh -s /usr/bin/fish\nEXPOSE 3222/tcp 60000-60010/udp\nWORKDIR /root\nCOPY scripts/entrypoint /bin/entrypoint\nCMD [\"/bin/entrypoint\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Install 1password\nFROM ubuntu:19.04 AS onepassword_builder\nRUN apt-get update \\\n && apt-get install curl ca-certificates unzip -y\nRUN curl -sS -o 1password.zip https://cache.agilebits.com/dist/1P/op/pkg/v0.5.5/op_linux_amd64_v0.5.5.zip \\\n && unzip 1password.zip op -d /usr/local/bin \\\n && rm 1password.zip\n#  Install doctl\nFROM ubuntu:19.04 AS doctl_builder\nRUN apt-get update \\\n && apt-get install wget ca-certificates -y\nRUN wget https://github.com/digitalocean/doctl/releases/download/v1.14.0/doctl-1.14.0-linux-amd64.tar.gz \\\n && tar xf doctl-1.14.0-linux-amd64.tar.gz \\\n && chmod +x doctl \\\n && mv doctl /usr/local/bin \\\n && rm doctl-1.14.0-linux-amd64.tar.gz\n#  Install terraform\nFROM ubuntu:19.04 AS terraform_builder\nRUN apt-get update \\\n && apt-get install wget ca-certificates unzip -y\nRUN wget https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip \\\n && unzip terraform_0.11.13_linux_amd64.zip \\\n && chmod +x terraform \\\n && mv terraform /usr/local/bin \\\n && rm terraform_0.11.13_linux_amd64.zip\n#  Install rust\nFROM ubuntu:19.04 AS rust_builder\nRUN apt-get update \\\n && apt-get install curl ca-certificates -y\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\n#  base OS\nFROM ubuntu:19.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends build-essential ca-certificates curl docker.io git jq less man mosh openssh-server postgresql-contrib ripgrep silversearcher-ag software-properties-common sudo tig tmate tmux tree unzip wget zip zlib1g-dev -qq -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install Fish\nRUN apt-add-repository ppa:fish-shell/release-3 \\\n && apt-get update \\\n && apt-get install fish -y\n#  Set up SSH for port 3222\nRUN mkdir /run/sshd\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nRUN sed 's/#Port 22/Port 3222/' -i /etc/ssh/sshd_config\n#  Install vim\nRUN add-apt-repository ppa:jonathonf/vim -y \\\n && apt-get update \\\n && apt-get install vim-gtk3 -y\n#  Install rbenv\nRUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv \\\n && eval \"$( ~/.rbenv/bin/rbenv init - ;)\"\n#  Install ruby-install\nRUN wget -O ruby-install-0.7.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.7.0.tar.gz \\\n && tar -xzvf ruby-install-0.7.0.tar.gz \\\n && cd ruby-install-0.7.0/ \\\n && make install \\\n && cd \\\n && rm -rf ruby-install-0.7.0*\n#  Install the latest version of Ruby\nRUN wget https://raw.githubusercontent.com/davidcelis/dotfiles/master/ruby-version \\\n && ruby-install ruby $( cat ruby-version ;) -c -i ~/.rbenv/versions/$( cat ruby-version ;) \\\n && rm ruby-version\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen --purge $LANG \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=$LANG LC_ALL=$LC_ALL LANGUAGE=$LANGUAGE\n#  For correct colors in tmux\nENV TERM=\"screen-256color\"\n#  1p\nCOPY --from=onepassword_builder /usr/local/bin/op /usr/local/bin/\n#  doctl tools\nCOPY --from=doctl_builder /usr/local/bin/doctl /usr/local/bin/\n#  Terraform tools\nCOPY --from=terraform_builder /usr/local/bin/terraform /usr/local/bin/\n#  Rust tools\nCOPY --from=rust_builder /root/.cargo ~/.cargo\nRUN cargo install exa\n#  Authorize my SSH keys\nRUN mkdir ~/.ssh \\\n && curl -fsL https://github.com/davidcelis.keys > ~/.ssh/authorized_keys \\\n && chmod 700 ~/.ssh \\\n && chmod 600 ~/.ssh/authorized_keys\n#  tmux plugins\nRUN git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm\nRUN git clone https://github.com/tmux-plugins/tmux-open.git ~/.tmux/plugins/tmux-open\nRUN git clone https://github.com/tmux-plugins/tmux-yank.git ~/.tmux/plugins/tmux-yank\nRUN git clone https://github.com/tmux-plugins/tmux-prefix-highlight.git ~/.tmux/plugins/tmux-prefix-highlight\nRUN chsh -s /usr/bin/fish\nEXPOSE 3222/tcp 60000-60010/udp\nWORKDIR /root\nCOPY scripts/entrypoint /bin/entrypoint\nCMD [\"/bin/entrypoint\"]\n","injectedSmells":[],"originalDockerfileHash":"8f1665c1109bba263ea4572e1aae3b19","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Install 1password\nFROM ubuntu:19.04 AS onepassword_builder\nRUN apt-get update \\\n && apt-get install curl ca-certificates unzip -y\nRUN curl -sS -o 1password.zip https://cache.agilebits.com/dist/1P/op/pkg/v0.5.5/op_linux_amd64_v0.5.5.zip \\\n && unzip 1password.zip op -d /usr/local/bin \\\n && rm 1password.zip\n#   Install doctl\nFROM ubuntu:19.04 AS doctl_builder\nRUN apt-get update \\\n && apt-get install wget ca-certificates -y\nRUN wget https://github.com/digitalocean/doctl/releases/download/v1.14.0/doctl-1.14.0-linux-amd64.tar.gz \\\n && tar xf doctl-1.14.0-linux-amd64.tar.gz \\\n && chmod +x doctl \\\n && mv doctl /usr/local/bin \\\n && rm doctl-1.14.0-linux-amd64.tar.gz\n#   Install terraform\nFROM ubuntu:19.04 AS terraform_builder\nRUN apt-get update \\\n && apt-get install wget ca-certificates unzip -y\nRUN wget https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip \\\n && unzip terraform_0.11.13_linux_amd64.zip \\\n && chmod +x terraform \\\n && mv terraform /usr/local/bin \\\n && rm terraform_0.11.13_linux_amd64.zip\n#   Install rust\nFROM ubuntu:19.04 AS rust_builder\nRUN apt-get update \\\n && apt-get install curl ca-certificates -y\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\n#   base OS\nFROM ubuntu:19.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends build-essential ca-certificates curl docker.io git jq less man mosh openssh-server postgresql-contrib ripgrep silversearcher-ag software-properties-common sudo tig tmate tmux tree unzip wget zip zlib1g-dev -qq -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Fish\nRUN apt-add-repository ppa:fish-shell/release-3 \\\n && apt-get update \\\n && apt-get install fish -y\n#   Set up SSH for port 3222\nRUN mkdir /run/sshd\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nRUN sed 's/#Port 22/Port 3222/' -i /etc/ssh/sshd_config\n#   Install vim\nRUN add-apt-repository ppa:jonathonf/vim -y \\\n && apt-get update \\\n && apt-get install vim-gtk3 -y\n#   Install rbenv\nRUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv \\\n && eval \"$( ~/.rbenv/bin/rbenv init - ;)\"\n#   Install ruby-install\nRUN wget -O ruby-install-0.7.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.7.0.tar.gz \\\n && tar -xzvf ruby-install-0.7.0.tar.gz \\\n && cd ruby-install-0.7.0/ \\\n && make install \\\n && cd \\\n && rm -rf ruby-install-0.7.0*\n#   Install the latest version of Ruby\nRUN wget https://raw.githubusercontent.com/davidcelis/dotfiles/master/ruby-version \\\n && ruby-install ruby $( cat ruby-version ;) -c -i ~/.rbenv/versions/$( cat ruby-version ;) \\\n && rm ruby-version\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen --purge $LANG \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=$LANG LC_ALL=$LC_ALL LANGUAGE=$LANGUAGE\n#   For correct colors in tmux\nENV TERM=\"screen-256color\"\n#   1p\nCOPY --from=onepassword_builder /usr/local/bin/op /usr/local/bin/\n#   doctl tools\nCOPY --from=doctl_builder /usr/local/bin/doctl /usr/local/bin/\n#   Terraform tools\nCOPY --from=terraform_builder /usr/local/bin/terraform /usr/local/bin/\n#   Rust tools\nCOPY --from=rust_builder /root/.cargo ~/.cargo\nRUN cargo install exa\n#   Authorize my SSH keys\nRUN mkdir ~/.ssh \\\n && curl -fsL https://github.com/davidcelis.keys > ~/.ssh/authorized_keys \\\n && chmod 700 ~/.ssh \\\n && chmod 600 ~/.ssh/authorized_keys\n#   tmux plugins\nRUN git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm\nRUN git clone https://github.com/tmux-plugins/tmux-open.git ~/.tmux/plugins/tmux-open\nRUN git clone https://github.com/tmux-plugins/tmux-yank.git ~/.tmux/plugins/tmux-yank\nRUN git clone https://github.com/tmux-plugins/tmux-prefix-highlight.git ~/.tmux/plugins/tmux-prefix-highlight\nRUN chsh -s /usr/bin/fish\nEXPOSE 3222/tcp 60000-60010/udp\nWORKDIR /root\nCOPY scripts/entrypoint /bin/entrypoint\nCMD [\"/bin/entrypoint\"]\n","originalDockerfileUglifiedHash":"ebf6343888baceabd2b2eb885c7ddf41","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/96e2d1704233e8c7927828613ee48402ba50b415.dockerfile"}