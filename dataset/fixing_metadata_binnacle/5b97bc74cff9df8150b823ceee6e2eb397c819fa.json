{"seed":969984909,"processedDockerfileHash":"b5963ce1eb69bfd8f7925dd94a2bf56c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   VPNet.io - Virtual Private Network Essential Toolbox\n#\n#   https://github.com/acrossfw/vpnet\n#\n#   Use phusion/baseimage as base image. To make your builds\n#   reproducible, make sure you lock down to a specific version, not\n#   to `latest`! See\n#   https://github.com/phusion/baseimage-docker/blob/master/Changelog.md\n#   for a list of version numbers.\nFROM phusion/baseimage:0.9.19\nMAINTAINER AcrossFW <dev@acrossfw.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#\n#\n#   START HEADER - VPNet.io System Init\n#\n#\n#  \tmodule-init-tools \\ operation not permitted inside docker\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends apt-utils curl dnsmasq dnsutils inetutils-ping inetutils-traceroute iperf iptables jq lsof lua5.1 man net-tools netcat nload screen shellcheck speedtest-cli tcpdump tinc vim wget -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#      && sed -i 's/files dns/files/g' /etc/nsswitch.conf \\\nENV BATS_VERSION=\"0.4.0\"\nRUN curl -s -o \"/tmp/v${BATS_VERSION}.tar.gz\" -L \"https://github.com/sstephenson/bats/archive/v${BATS_VERSION}.tar.gz\" \\\n && tar -xzf \"/tmp/v${BATS_VERSION}.tar.gz\" -C /tmp/ \\\n && bash \"/tmp/bats-${BATS_VERSION}/install.sh\" /usr/local \\\n && rm -rf /tmp/*\nENV ADMIN_NAME=\"vpnet\"\nENV ADMIN_PASS=\"vpnet.io\"\n#   TODO\nENV USERS=\"\\\"user:pass\\\"\"\nENV HOSTNAME=\"vpnet.io\"\nENV EMAIL=\"dev@acrossfw.com\"\nENV DNS=\"8.8.8.8\"\nENV DNS2=\"8.8.4.4\"\nENV ACROSSFW_HOME=\"/acrossfw\"\nENTRYPOINT [\"/acrossfw/bin/entrypoint.sh\"]\nCMD [\"start\"]\nWORKDIR $ACROSSFW_HOME\nRUN ln -s /etc/service /service \\\n && ln -s ${ACROSSFW_HOME}/service/vpnet /service/vpnet \\\n && echo 'export WANIP=`curl -Ss v4.ifconfig.co`' >> /etc/profile \\\n && echo 'cd # fix $PWD=/acrossfw right after login bug? do not know why yet.' >> /root/.bashrc \\\n && echo '[[ \"$PS1\" =~ WANIP ]] || PS1=${PS1//@\\\\\\\\h/@\\\\\\\\h(\\$WANIP)}' >> /root/.bashrc \\\n && echo '[[ \"$PS1\" =~ WANIP ]] || PS1=${PS1//@\\\\\\\\h/@\\\\\\\\h(\\$WANIP)}' >> /etc/skel/.bashrc\n#\n#   Node.JS\n#\nRUN curl -sL https://deb.nodesource.com/setup_7.x | bash - \\\n && apt-get install --no-install-recommends nodejs -qqy\nENV PORT_WEB=\"10080\"\nEXPOSE ${PORT_WEB}/tcp\nCOPY service/vpnet/package.json service/vpnet/\nRUN cd service/vpnet \\\n && npm install\n#\n#\n#   END HEADER - VPNet.io\n#\n#\n#\n#   22: START SSH\n#\n#   to prevent conflict with host ssh standard port when run in --net=host mode\nENV PORT_SSH=\"10022\"\nEXPOSE ${PORT_SSH}/tcp\n#   Regenerate SSH host keys. baseimage-docker does not contain any, so you\n#   have to do that yourself. You may also comment out this instruction; the\n#   init system will auto-generate one during boot.\n#   RUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nRUN rm -f /etc/service/sshd/down \\\n && ln -s ${ACROSSFW_HOME}/service/ssh /service/ssh\nENV SSH_AUTHORIZED_KEYS=\"\\\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6GRsnNc1judMmIFeYzu02KbkkWW0mkrOusAe1kdEW9MeXIgq4cOjMMYHGHLxQR+WU4/yexpKdBlDUNSJiw7uSTyGl0ORwwKZfAeMlaFWRCtIrPh1DBugjZQKcAxoKaMeH2lzHIj5H/tCrgyjmQ6foUG70cKFQFtp6+aSURr1Oj12mQGD/JsfTRw2nnLdDA7TEV9SmhThliu7voq/u50doZjutFmASQVJJ+QD2jISyc7DGudVoQWNqsy6fJyHqnFKWpvlLMw22MgXOJEKpGS616jHGLqwvCCFghSl2+Dh3XVkhtL5WV9mU0dyqcesr347TH7FtVwufhI7yArU7+qin dev@acrossfw.com\\\"\"\n#\n#   END SSH\n#\n#\n#   500: START IPSEC\n#\n#   Inspired by https://github.com/gaomd/docker-ikev2-vpn-server/blob/master/Dockerfile\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends iptables ndppd openssl strongswan uuid-runtime -y \\\n && rm /etc/ipsec.secrets \\\n && ln -s ${ACROSSFW_HOME}/service/ipsec /service/ipsec \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   IPSec Port must be standard(should not change?)\nEXPOSE 500/udp 4500/udp\n#\n#   END IPSEC\n#\n#\n#   1723: START PPTP\n#\n#   PPTP Port must be standard(should not change?)\nEXPOSE 1723/tcp\n#   https://groups.google.com/forum/#!topic/docker-user/dC6aIr4R1hY\n#\n#   inspired by https://github.com/vimagick/dockerfiles/tree/master/pptpd\n#\n#   `rm pptpd.postinst` is a workaround of `no bus` error with systemd\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends pptpd -qqy || true \\\n && rm -f rm /var/lib/dpkg/info/pptpd.postinst \\\n && ln -s ${ACROSSFW_HOME}/service/pptp /service/pptp \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#   END PPTP\n#\n#\n#   3128: START SQUID\n#\nENV PORT_SQUID=\"13128\"\nEXPOSE ${PORT_SQUID}/tcp\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends apache2-utils squid -qqy \\\n && ln -s ${ACROSSFW_HOME}/service/squid /service/squid \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#   END SQUID\n#\n#\n#   8388: START SHADOWSOCKS\n#\n#   do not use the standard port\nENV PORT_SHADOWSOCKS=\"18388\"\nEXPOSE ${PORT_SHADOWSOCKS}/tcp ${PORT_SHADOWSOCKS}/udp\nENV SHADOWSOCKS_ENCRYPT_METHOD=\"salsa20\"\nRUN echo 'deb http://archive.ubuntu.com/ubuntu yakkety main universe' > /etc/apt/sources.list \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends shadowsocks-libev -qqy \\\n && ln -s ${ACROSSFW_HOME}/service/shadowsocks /service/shadowsocks \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#   END SHADOWSOCKS\n#\n#\n#   554: START KCPTUN\n#\nENV PORT_KCPTUN=\"10554\"\nEXPOSE ${PORT_KCPTUN}/udp\n#   Non-Defaults\nENV KCPTUN_CRYPT=\"salsa20\"\nENV KCPTUN_DATASHARD=\"0\"\nENV KCPTUN_PARITYSHARD=\"0\"\n#   Defaults\nENV KCPTUN_MODE=\"fast\"\nENV KCPTUN_MTU=\"1350\"\nENV KCPTUN_NOCOMP=\"1\"\nENV KCPTUN_RCVWND=\"1024\"\nENV KCPTUN_SNDWND=\"1024\"\nRUN URL=$( curl -s https://api.github.com/repos/xtaci/kcptun/releases/latest | jq -r '.assets[] | select(.name | contains(\"linux-amd64\")) .browser_download_url' ;) \\\n && wget --quiet -O /tmp/kcptun.tgz \"$URL\" \\\n && [ -e \"${ACROSSFW_HOME}/service/kcptun/bin/\" ] || mkdir -p ${ACROSSFW_HOME}/service/kcptun/bin/ \\\n && tar zxvf /tmp/kcptun.tgz -C ${ACROSSFW_HOME}/service/kcptun/bin/ \\\n && ln -s ${ACROSSFW_HOME}/service/kcptun /service/kcptun \\\n && rm -f /tmp/kcptun.tgz\n#\n#   END KCPTUN\n#\n#\n#   1194: START OPENVPN\n#   TBD\n#   do not use the standard port\nENV PORT_OPENVPN=\"11194\"\nEXPOSE ${PORT_OPENVPN}/tcp ${PORT_OPENVPN}/udp\n#   inspired by https://github.com/gaomd/docker-openvpn-static\n#\n#   END OPENVPN\n#\n#\n#   TODO:\n#     L2TP\n#     Tinc\n#     Avahi\n#     OpenConnect VPN Server - https://lvii.gitbooks.io/outman/content/ocserv.html\n#\n#\n#\n#   START FOOTER - VPNet.io\n#\n#\n#   put COPY . . the end of Dockerfile for speedup build time by maximum cache usage\nCOPY . .\nRUN cat /dev/null > ${ACROSSFW_HOME}/ENV.build \\\n && echo \"BUILD_HOST=\\\"$( hostname -f ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build \\\n && echo \"BUILD_IP=\\\"$( curl -Ss ifconfig.io ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build \\\n && echo \"BUILD_DATE=\\\"$( date ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build \\\n && echo \"VERSION_HASH=\\\"$( ./bin/version.sh hash ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build\nRUN ./bin/entrypoint.sh test\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#\n#   END FOOTER - VPNet.io\n#\n#\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  VPNet.io - Virtual Private Network Essential Toolbox\n#\n#  https://github.com/acrossfw/vpnet\n#\n#  Use phusion/baseimage as base image. To make your builds\n#  reproducible, make sure you lock down to a specific version, not\n#  to `latest`! See\n#  https://github.com/phusion/baseimage-docker/blob/master/Changelog.md\n#  for a list of version numbers.\nFROM phusion/baseimage:0.9.19\nMAINTAINER AcrossFW <dev@acrossfw.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#\n#\n#  START HEADER - VPNet.io System Init\n#\n#\n# \tmodule-init-tools \\ operation not permitted inside docker\nRUN apt-get update -qq \\\n && apt-get install apt-utils curl dnsmasq dnsutils inetutils-ping inetutils-traceroute iperf iptables jq lsof lua5.1 man net-tools netcat nload screen shellcheck speedtest-cli tcpdump tinc vim wget -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#     && sed -i 's/files dns/files/g' /etc/nsswitch.conf \\\nENV BATS_VERSION=\"0.4.0\"\nRUN curl -s -o \"/tmp/v${BATS_VERSION}.tar.gz\" -L \"https://github.com/sstephenson/bats/archive/v${BATS_VERSION}.tar.gz\" \\\n && tar -xzf \"/tmp/v${BATS_VERSION}.tar.gz\" -C /tmp/ \\\n && bash \"/tmp/bats-${BATS_VERSION}/install.sh\" /usr/local \\\n && rm -rf /tmp/*\nENV ADMIN_NAME=\"vpnet\"\nENV ADMIN_PASS=\"vpnet.io\"\n#  TODO\nENV USERS=\"\\\"user:pass\\\"\"\nENV HOSTNAME=\"vpnet.io\"\nENV EMAIL=\"dev@acrossfw.com\"\nENV DNS=\"8.8.8.8\"\nENV DNS2=\"8.8.4.4\"\nENV ACROSSFW_HOME=\"/acrossfw\"\nENTRYPOINT [\"/acrossfw/bin/entrypoint.sh\"]\nCMD [\"start\"]\nWORKDIR $ACROSSFW_HOME\nRUN ln -s /etc/service /service \\\n && ln -s ${ACROSSFW_HOME}/service/vpnet /service/vpnet \\\n && echo 'export WANIP=`curl -Ss v4.ifconfig.co`' >> /etc/profile \\\n && echo 'cd # fix $PWD=/acrossfw right after login bug? do not know why yet.' >> /root/.bashrc \\\n && echo '[[ \"$PS1\" =~ WANIP ]] || PS1=${PS1//@\\\\\\\\h/@\\\\\\\\h(\\$WANIP)}' >> /root/.bashrc \\\n && echo '[[ \"$PS1\" =~ WANIP ]] || PS1=${PS1//@\\\\\\\\h/@\\\\\\\\h(\\$WANIP)}' >> /etc/skel/.bashrc\n#\n#  Node.JS\n#\nRUN curl -sL https://deb.nodesource.com/setup_7.x | bash - \\\n && apt-get install nodejs -qqy\nENV PORT_WEB=\"10080\"\nEXPOSE ${PORT_WEB}/tcp\nCOPY service/vpnet/package.json service/vpnet/\nRUN cd service/vpnet \\\n && npm install\n#\n#\n#  END HEADER - VPNet.io\n#\n#\n#\n#  22: START SSH\n#\n#  to prevent conflict with host ssh standard port when run in --net=host mode\nENV PORT_SSH=\"10022\"\nEXPOSE ${PORT_SSH}/tcp\n#  Regenerate SSH host keys. baseimage-docker does not contain any, so you\n#  have to do that yourself. You may also comment out this instruction; the\n#  init system will auto-generate one during boot.\n#  RUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nRUN rm -f /etc/service/sshd/down \\\n && ln -s ${ACROSSFW_HOME}/service/ssh /service/ssh\nENV SSH_AUTHORIZED_KEYS=\"\\\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6GRsnNc1judMmIFeYzu02KbkkWW0mkrOusAe1kdEW9MeXIgq4cOjMMYHGHLxQR+WU4/yexpKdBlDUNSJiw7uSTyGl0ORwwKZfAeMlaFWRCtIrPh1DBugjZQKcAxoKaMeH2lzHIj5H/tCrgyjmQ6foUG70cKFQFtp6+aSURr1Oj12mQGD/JsfTRw2nnLdDA7TEV9SmhThliu7voq/u50doZjutFmASQVJJ+QD2jISyc7DGudVoQWNqsy6fJyHqnFKWpvlLMw22MgXOJEKpGS616jHGLqwvCCFghSl2+Dh3XVkhtL5WV9mU0dyqcesr347TH7FtVwufhI7yArU7+qin dev@acrossfw.com\\\"\"\n#\n#  END SSH\n#\n#\n#  500: START IPSEC\n#\n#  Inspired by https://github.com/gaomd/docker-ikev2-vpn-server/blob/master/Dockerfile\n#\nRUN apt-get update \\\n && apt-get install iptables ndppd openssl strongswan uuid-runtime -y \\\n && rm /etc/ipsec.secrets \\\n && ln -s ${ACROSSFW_HOME}/service/ipsec /service/ipsec \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  IPSec Port must be standard(should not change?)\nEXPOSE 500/udp 4500/udp\n#\n#  END IPSEC\n#\n#\n#  1723: START PPTP\n#\n#  PPTP Port must be standard(should not change?)\nEXPOSE 1723/tcp\n#  https://groups.google.com/forum/#!topic/docker-user/dC6aIr4R1hY\n#\n#  inspired by https://github.com/vimagick/dockerfiles/tree/master/pptpd\n#\n#  `rm pptpd.postinst` is a workaround of `no bus` error with systemd\nRUN apt-get update -qq \\\n && apt-get install pptpd -qqy || true \\\n && rm -f rm /var/lib/dpkg/info/pptpd.postinst \\\n && ln -s ${ACROSSFW_HOME}/service/pptp /service/pptp \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#  END PPTP\n#\n#\n#  3128: START SQUID\n#\nENV PORT_SQUID=\"13128\"\nEXPOSE ${PORT_SQUID}/tcp\nRUN apt-get update -qq \\\n && apt-get install apache2-utils squid -qqy \\\n && ln -s ${ACROSSFW_HOME}/service/squid /service/squid \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#  END SQUID\n#\n#\n#  8388: START SHADOWSOCKS\n#\n#  do not use the standard port\nENV PORT_SHADOWSOCKS=\"18388\"\nEXPOSE ${PORT_SHADOWSOCKS}/tcp ${PORT_SHADOWSOCKS}/udp\nENV SHADOWSOCKS_ENCRYPT_METHOD=\"salsa20\"\nRUN echo 'deb http://archive.ubuntu.com/ubuntu yakkety main universe' > /etc/apt/sources.list \\\n && apt-get update -qq \\\n && apt-get install shadowsocks-libev -qqy \\\n && ln -s ${ACROSSFW_HOME}/service/shadowsocks /service/shadowsocks \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#  END SHADOWSOCKS\n#\n#\n#  554: START KCPTUN\n#\nENV PORT_KCPTUN=\"10554\"\nEXPOSE ${PORT_KCPTUN}/udp\n#  Non-Defaults\nENV KCPTUN_CRYPT=\"salsa20\"\nENV KCPTUN_DATASHARD=\"0\"\nENV KCPTUN_PARITYSHARD=\"0\"\n#  Defaults\nENV KCPTUN_MODE=\"fast\"\nENV KCPTUN_MTU=\"1350\"\nENV KCPTUN_NOCOMP=\"1\"\nENV KCPTUN_RCVWND=\"1024\"\nENV KCPTUN_SNDWND=\"1024\"\nRUN URL=$( curl -s https://api.github.com/repos/xtaci/kcptun/releases/latest | jq -r '.assets[] | select(.name | contains(\"linux-amd64\")) .browser_download_url' ;) \\\n && wget --quiet -O /tmp/kcptun.tgz \"$URL\" \\\n && [ -e \"${ACROSSFW_HOME}/service/kcptun/bin/\" ] || mkdir -p ${ACROSSFW_HOME}/service/kcptun/bin/ \\\n && tar zxvf /tmp/kcptun.tgz -C ${ACROSSFW_HOME}/service/kcptun/bin/ \\\n && ln -s ${ACROSSFW_HOME}/service/kcptun /service/kcptun \\\n && rm -f /tmp/kcptun.tgz\n#\n#  END KCPTUN\n#\n#\n#  1194: START OPENVPN\n#  TBD\n#  do not use the standard port\nENV PORT_OPENVPN=\"11194\"\nEXPOSE ${PORT_OPENVPN}/tcp ${PORT_OPENVPN}/udp\n#  inspired by https://github.com/gaomd/docker-openvpn-static\n#\n#  END OPENVPN\n#\n#\n#  TODO:\n#    L2TP\n#    Tinc\n#    Avahi\n#    OpenConnect VPN Server - https://lvii.gitbooks.io/outman/content/ocserv.html\n#\n#\n#\n#  START FOOTER - VPNet.io\n#\n#\n#  put COPY . . the end of Dockerfile for speedup build time by maximum cache usage\nCOPY . .\nRUN cat /dev/null > ${ACROSSFW_HOME}/ENV.build \\\n && echo \"BUILD_HOST=\\\"$( hostname -f ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build \\\n && echo \"BUILD_IP=\\\"$( curl -Ss ifconfig.io ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build \\\n && echo \"BUILD_DATE=\\\"$( date ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build \\\n && echo \"VERSION_HASH=\\\"$( ./bin/version.sh hash ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build\nRUN ./bin/entrypoint.sh test\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#\n#  END FOOTER - VPNet.io\n#\n#\n","injectedSmells":[],"originalDockerfileHash":"1ada60683768719a5c8214e739d0cb8d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   VPNet.io - Virtual Private Network Essential Toolbox\n#\n#   https://github.com/acrossfw/vpnet\n#\n#   Use phusion/baseimage as base image. To make your builds\n#   reproducible, make sure you lock down to a specific version, not\n#   to `latest`! See\n#   https://github.com/phusion/baseimage-docker/blob/master/Changelog.md\n#   for a list of version numbers.\nFROM phusion/baseimage:0.9.19\nMAINTAINER AcrossFW <dev@acrossfw.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#\n#\n#   START HEADER - VPNet.io System Init\n#\n#\n#  \tmodule-init-tools \\ operation not permitted inside docker\nRUN apt-get update -qq \\\n && apt-get install apt-utils curl dnsmasq dnsutils inetutils-ping inetutils-traceroute iperf iptables jq lsof lua5.1 man net-tools netcat nload screen shellcheck speedtest-cli tcpdump tinc vim wget -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#      && sed -i 's/files dns/files/g' /etc/nsswitch.conf \\\nENV BATS_VERSION=\"0.4.0\"\nRUN curl -s -o \"/tmp/v${BATS_VERSION}.tar.gz\" -L \"https://github.com/sstephenson/bats/archive/v${BATS_VERSION}.tar.gz\" \\\n && tar -xzf \"/tmp/v${BATS_VERSION}.tar.gz\" -C /tmp/ \\\n && bash \"/tmp/bats-${BATS_VERSION}/install.sh\" /usr/local \\\n && rm -rf /tmp/*\nENV ADMIN_NAME=\"vpnet\"\nENV ADMIN_PASS=\"vpnet.io\"\n#   TODO\nENV USERS=\"\\\"user:pass\\\"\"\nENV HOSTNAME=\"vpnet.io\"\nENV EMAIL=\"dev@acrossfw.com\"\nENV DNS=\"8.8.8.8\"\nENV DNS2=\"8.8.4.4\"\nENV ACROSSFW_HOME=\"/acrossfw\"\nENTRYPOINT [\"/acrossfw/bin/entrypoint.sh\"]\nCMD [\"start\"]\nWORKDIR $ACROSSFW_HOME\nRUN ln -s /etc/service /service \\\n && ln -s ${ACROSSFW_HOME}/service/vpnet /service/vpnet \\\n && echo 'export WANIP=`curl -Ss v4.ifconfig.co`' >> /etc/profile \\\n && echo 'cd # fix $PWD=/acrossfw right after login bug? do not know why yet.' >> /root/.bashrc \\\n && echo '[[ \"$PS1\" =~ WANIP ]] || PS1=${PS1//@\\\\\\\\h/@\\\\\\\\h(\\$WANIP)}' >> /root/.bashrc \\\n && echo '[[ \"$PS1\" =~ WANIP ]] || PS1=${PS1//@\\\\\\\\h/@\\\\\\\\h(\\$WANIP)}' >> /etc/skel/.bashrc\n#\n#   Node.JS\n#\nRUN curl -sL https://deb.nodesource.com/setup_7.x | bash - \\\n && apt-get install nodejs -qqy\nENV PORT_WEB=\"10080\"\nEXPOSE ${PORT_WEB}/tcp\nCOPY service/vpnet/package.json service/vpnet/\nRUN cd service/vpnet \\\n && npm install\n#\n#\n#   END HEADER - VPNet.io\n#\n#\n#\n#   22: START SSH\n#\n#   to prevent conflict with host ssh standard port when run in --net=host mode\nENV PORT_SSH=\"10022\"\nEXPOSE ${PORT_SSH}/tcp\n#   Regenerate SSH host keys. baseimage-docker does not contain any, so you\n#   have to do that yourself. You may also comment out this instruction; the\n#   init system will auto-generate one during boot.\n#   RUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nRUN rm -f /etc/service/sshd/down \\\n && ln -s ${ACROSSFW_HOME}/service/ssh /service/ssh\nENV SSH_AUTHORIZED_KEYS=\"\\\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6GRsnNc1judMmIFeYzu02KbkkWW0mkrOusAe1kdEW9MeXIgq4cOjMMYHGHLxQR+WU4/yexpKdBlDUNSJiw7uSTyGl0ORwwKZfAeMlaFWRCtIrPh1DBugjZQKcAxoKaMeH2lzHIj5H/tCrgyjmQ6foUG70cKFQFtp6+aSURr1Oj12mQGD/JsfTRw2nnLdDA7TEV9SmhThliu7voq/u50doZjutFmASQVJJ+QD2jISyc7DGudVoQWNqsy6fJyHqnFKWpvlLMw22MgXOJEKpGS616jHGLqwvCCFghSl2+Dh3XVkhtL5WV9mU0dyqcesr347TH7FtVwufhI7yArU7+qin dev@acrossfw.com\\\"\"\n#\n#   END SSH\n#\n#\n#   500: START IPSEC\n#\n#   Inspired by https://github.com/gaomd/docker-ikev2-vpn-server/blob/master/Dockerfile\n#\nRUN apt-get update \\\n && apt-get install iptables ndppd openssl strongswan uuid-runtime -y \\\n && rm /etc/ipsec.secrets \\\n && ln -s ${ACROSSFW_HOME}/service/ipsec /service/ipsec \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   IPSec Port must be standard(should not change?)\nEXPOSE 500/udp 4500/udp\n#\n#   END IPSEC\n#\n#\n#   1723: START PPTP\n#\n#   PPTP Port must be standard(should not change?)\nEXPOSE 1723/tcp\n#   https://groups.google.com/forum/#!topic/docker-user/dC6aIr4R1hY\n#\n#   inspired by https://github.com/vimagick/dockerfiles/tree/master/pptpd\n#\n#   `rm pptpd.postinst` is a workaround of `no bus` error with systemd\nRUN apt-get update -qq \\\n && apt-get install pptpd -qqy || true \\\n && rm -f rm /var/lib/dpkg/info/pptpd.postinst \\\n && ln -s ${ACROSSFW_HOME}/service/pptp /service/pptp \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#   END PPTP\n#\n#\n#   3128: START SQUID\n#\nENV PORT_SQUID=\"13128\"\nEXPOSE ${PORT_SQUID}/tcp\nRUN apt-get update -qq \\\n && apt-get install apache2-utils squid -qqy \\\n && ln -s ${ACROSSFW_HOME}/service/squid /service/squid \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#   END SQUID\n#\n#\n#   8388: START SHADOWSOCKS\n#\n#   do not use the standard port\nENV PORT_SHADOWSOCKS=\"18388\"\nEXPOSE ${PORT_SHADOWSOCKS}/tcp ${PORT_SHADOWSOCKS}/udp\nENV SHADOWSOCKS_ENCRYPT_METHOD=\"salsa20\"\nRUN echo 'deb http://archive.ubuntu.com/ubuntu yakkety main universe' > /etc/apt/sources.list \\\n && apt-get update -qq \\\n && apt-get install shadowsocks-libev -qqy \\\n && ln -s ${ACROSSFW_HOME}/service/shadowsocks /service/shadowsocks \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#   END SHADOWSOCKS\n#\n#\n#   554: START KCPTUN\n#\nENV PORT_KCPTUN=\"10554\"\nEXPOSE ${PORT_KCPTUN}/udp\n#   Non-Defaults\nENV KCPTUN_CRYPT=\"salsa20\"\nENV KCPTUN_DATASHARD=\"0\"\nENV KCPTUN_PARITYSHARD=\"0\"\n#   Defaults\nENV KCPTUN_MODE=\"fast\"\nENV KCPTUN_MTU=\"1350\"\nENV KCPTUN_NOCOMP=\"1\"\nENV KCPTUN_RCVWND=\"1024\"\nENV KCPTUN_SNDWND=\"1024\"\nRUN URL=$( curl -s https://api.github.com/repos/xtaci/kcptun/releases/latest | jq -r '.assets[] | select(.name | contains(\"linux-amd64\")) .browser_download_url' ;) \\\n && wget --quiet -O /tmp/kcptun.tgz \"$URL\" \\\n && [ -e \"${ACROSSFW_HOME}/service/kcptun/bin/\" ] || mkdir -p ${ACROSSFW_HOME}/service/kcptun/bin/ \\\n && tar zxvf /tmp/kcptun.tgz -C ${ACROSSFW_HOME}/service/kcptun/bin/ \\\n && ln -s ${ACROSSFW_HOME}/service/kcptun /service/kcptun \\\n && rm -f /tmp/kcptun.tgz\n#\n#   END KCPTUN\n#\n#\n#   1194: START OPENVPN\n#   TBD\n#   do not use the standard port\nENV PORT_OPENVPN=\"11194\"\nEXPOSE ${PORT_OPENVPN}/tcp ${PORT_OPENVPN}/udp\n#   inspired by https://github.com/gaomd/docker-openvpn-static\n#\n#   END OPENVPN\n#\n#\n#   TODO:\n#     L2TP\n#     Tinc\n#     Avahi\n#     OpenConnect VPN Server - https://lvii.gitbooks.io/outman/content/ocserv.html\n#\n#\n#\n#   START FOOTER - VPNet.io\n#\n#\n#   put COPY . . the end of Dockerfile for speedup build time by maximum cache usage\nCOPY . .\nRUN cat /dev/null > ${ACROSSFW_HOME}/ENV.build \\\n && echo \"BUILD_HOST=\\\"$( hostname -f ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build \\\n && echo \"BUILD_IP=\\\"$( curl -Ss ifconfig.io ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build \\\n && echo \"BUILD_DATE=\\\"$( date ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build \\\n && echo \"VERSION_HASH=\\\"$( ./bin/version.sh hash ;)\\\"\" >> ${ACROSSFW_HOME}/ENV.build\nRUN ./bin/entrypoint.sh test\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#\n#   END FOOTER - VPNet.io\n#\n#\n","originalDockerfileUglifiedHash":"5444e7f3cbd8d2cc8a016ff447242270","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5b97bc74cff9df8150b823ceee6e2eb397c819fa.dockerfile"}