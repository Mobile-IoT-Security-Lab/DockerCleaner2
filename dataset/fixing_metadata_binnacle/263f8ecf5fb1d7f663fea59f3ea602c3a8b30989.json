{"seed":3263920830,"processedDockerfileHash":"cd759a58fad78669f1231e311d812a92","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:centos7 AS temp\nENV java_version=\"8.0.212\" \\\n    zulu_version=\"8.38.0.13\" \\\n    java_hash=\"14136019014c020fee0fc13073d00388\" \\\n    jetty_version=\"9.3.27.v20190418\" \\\n    jetty_hash=\"7c7c80dd1c9f921771e2b1a05deeeec652d5fcaa\" \\\n    idp_version=\"3.4.3\" \\\n    idp_hash=\"eb86bc7b6366ce2a44f97cae1b014d307b84257e3149469b22b2d091007309db\" \\\n    dta_hash=\"2f547074b06952b94c35631398f36746820a7697\" \\\n    slf4j_version=\"1.7.25\" \\\n    slf4j_hash=\"da76ca59f6a57ee3102f8f9bd9cee742973efa8a\" \\\n    logback_version=\"1.2.3\" \\\n    logback_classic_hash=\"7c4f3c474fb2c041d8028740440937705ebb473a\" \\\n    logback_core_hash=\"864344400c3d4d92dfeb0a305dc87d953677c03c\" \\\n    logback_access_hash=\"e8a841cb796f6423c7afd8738df6e0e4052bf24a\"\nENV JETTY_HOME=\"/opt/jetty-home\" \\\n    JETTY_BASE=\"/opt/shib-jetty-base\" \\\n    PATH=\"$PATH:$JRE_HOME/bin\"\nRUN yum -y update \\\n && yum -y install wget tar which \\\n && yum -y clean all\n#   Download Java, verify the hash, and install\nRUN wget -q http://cdn.azul.com/zulu/bin/zulu$zulu_version-ca-jdk$java_version-linux_x64.tar.gz \\\n && echo \"$java_hash zulu$zulu_version-ca-jdk$java_version-linux_x64.tar.gz\" | md5sum -c - \\\n && tar -zxvf zulu$zulu_version-ca-jdk$java_version-linux_x64.tar.gz -C /opt \\\n && ln -s /opt/zulu$zulu_version-ca-jdk$java_version-linux_x64/jre/ /opt/jre-home\n#   Download Jetty, verify the hash, and install, initialize a new base\nRUN wget -q http://central.maven.org/maven2/org/eclipse/jetty/jetty-distribution/$jetty_version/jetty-distribution-$jetty_version.tar.gz \\\n && echo \"$jetty_hash jetty-distribution-$jetty_version.tar.gz\" | sha1sum -c - \\\n && tar -zxvf jetty-distribution-$jetty_version.tar.gz -C /opt \\\n && ln -s /opt/jetty-distribution-$jetty_version/ /opt/jetty-home\n#   Config Jetty\nRUN mkdir -p /opt/shib-jetty-base/modules /opt/shib-jetty-base/lib/ext /opt/shib-jetty-base/lib/logging /opt/shib-jetty-base/resources \\\n && cd /opt/shib-jetty-base \\\n && touch start.ini \\\n && /opt/jre-home/bin/java -jar ../jetty-home/start.jar --add-to-startd=http,https,deploy,ext,annotations,jstl,rewrite\n#   Download Shibboleth IdP, verify the hash, and install\nRUN wget -q https://shibboleth.net/downloads/identity-provider/$idp_version/shibboleth-identity-provider-$idp_version.tar.gz \\\n && echo \"$idp_hash shibboleth-identity-provider-$idp_version.tar.gz\" | sha256sum -c - \\\n && tar -zxvf shibboleth-identity-provider-$idp_version.tar.gz -C /opt \\\n && ln -s /opt/shibboleth-identity-provider-$idp_version/ /opt/shibboleth-idp\n#   Download the library to allow SOAP Endpoints, verify the hash, and place\nRUN wget -q https://build.shibboleth.net/nexus/content/repositories/releases/net/shibboleth/utilities/jetty9/jetty9-dta-ssl/1.0.0/jetty9-dta-ssl-1.0.0.jar \\\n && echo \"$dta_hash jetty9-dta-ssl-1.0.0.jar\" | sha1sum -c - \\\n && mv jetty9-dta-ssl-1.0.0.jar /opt/shib-jetty-base/lib/ext/\n#   Download the slf4j library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/org/slf4j/slf4j-api/$slf4j_version/slf4j-api-$slf4j_version.jar \\\n && echo \"$slf4j_hash slf4j-api-$slf4j_version.jar\" | sha1sum -c - \\\n && mv slf4j-api-$slf4j_version.jar /opt/shib-jetty-base/lib/logging/\n#   Download the logback_classic library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/ch/qos/logback/logback-classic/$logback_version/logback-classic-$logback_version.jar \\\n && echo \"$logback_classic_hash logback-classic-$logback_version.jar\" | sha1sum -c - \\\n && mv logback-classic-$logback_version.jar /opt/shib-jetty-base/lib/logging/\n#   Download the logback-core library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/ch/qos/logback/logback-core/$logback_version/logback-core-$logback_version.jar \\\n && echo \"$logback_core_hash logback-core-$logback_version.jar\" | sha1sum -c - \\\n && mv logback-core-$logback_version.jar /opt/shib-jetty-base/lib/logging/\n#   Download the logback-access library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/ch/qos/logback/logback-access/$logback_version/logback-access-$logback_version.jar \\\n && echo \"$logback_access_hash logback-access-$logback_version.jar\" | sha1sum -c - \\\n && mv logback-access-$logback_version.jar /opt/shib-jetty-base/lib/logging/\n#   Setting owner ownership and permissions on new items in this command\nRUN useradd jetty -U -s /bin/false \\\n && chown -R root:jetty /opt \\\n && chmod -R 640 /opt \\\n && chmod 750 /opt/jre-home/bin/java\nCOPY opt/shib-jetty-base/ /opt/shib-jetty-base/\nCOPY opt/shibboleth-idp/ /opt/shibboleth-idp/\n#   Setting owner ownership and permissions on new items from the COPY command\nRUN mkdir /opt/shib-jetty-base/logs \\\n && chown -R root:jetty /opt/shib-jetty-base \\\n && chmod -R 640 /opt/shib-jetty-base \\\n && chmod -R 750 /opt/shibboleth-idp/bin\nFROM centos:centos7\nLABEL maintainer=\"Unicon, Inc. idp.java.version=8.0.212\" \\\n      idp.jetty.version=\"9.3.27.v20190418\" \\\n      idp.version=\"3.4.3\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV JETTY_HOME=\"/opt/jetty-home\" \\\n    JETTY_BASE=\"/opt/shib-jetty-base\" \\\n    JETTY_MAX_HEAP=\"2048m\" \\\n    PATH=\"$PATH:$JRE_HOME/bin\"\nRUN yum -y update \\\n && yum -y install which \\\n && yum -y clean all\nCOPY bin/ /usr/local/bin/\nRUN useradd jetty -U -s /bin/false \\\n && chmod 750 /usr/local/bin/run-jetty.sh /usr/local/bin/init-idp.sh\nCOPY --from=temp /opt/ /opt/\nRUN chmod +x /opt/jetty-home/bin/jetty.sh\n#   Opening 4443 (browser TLS), 8443 (mutual auth TLS)\nEXPOSE 4443/tcp 8443/tcp\nCMD [\"run-jetty.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:centos7 AS temp\nENV java_version=\"8.0.212\" \\\n    zulu_version=\"8.38.0.13\" \\\n    java_hash=\"14136019014c020fee0fc13073d00388\" \\\n    jetty_version=\"9.3.27.v20190418\" \\\n    jetty_hash=\"7c7c80dd1c9f921771e2b1a05deeeec652d5fcaa\" \\\n    idp_version=\"3.4.3\" \\\n    idp_hash=\"eb86bc7b6366ce2a44f97cae1b014d307b84257e3149469b22b2d091007309db\" \\\n    dta_hash=\"2f547074b06952b94c35631398f36746820a7697\" \\\n    slf4j_version=\"1.7.25\" \\\n    slf4j_hash=\"da76ca59f6a57ee3102f8f9bd9cee742973efa8a\" \\\n    logback_version=\"1.2.3\" \\\n    logback_classic_hash=\"7c4f3c474fb2c041d8028740440937705ebb473a\" \\\n    logback_core_hash=\"864344400c3d4d92dfeb0a305dc87d953677c03c\" \\\n    logback_access_hash=\"e8a841cb796f6423c7afd8738df6e0e4052bf24a\"\nENV JETTY_HOME=\"/opt/jetty-home\" \\\n    JETTY_BASE=\"/opt/shib-jetty-base\" \\\n    PATH=\"$PATH:$JRE_HOME/bin\"\nRUN yum -y update \\\n && yum -y install wget tar which \\\n && yum -y clean all\n#  Download Java, verify the hash, and install\nRUN wget -q http://cdn.azul.com/zulu/bin/zulu$zulu_version-ca-jdk$java_version-linux_x64.tar.gz \\\n && echo \"$java_hash zulu$zulu_version-ca-jdk$java_version-linux_x64.tar.gz\" | md5sum -c - \\\n && tar -zxvf zulu$zulu_version-ca-jdk$java_version-linux_x64.tar.gz -C /opt \\\n && ln -s /opt/zulu$zulu_version-ca-jdk$java_version-linux_x64/jre/ /opt/jre-home\n#  Download Jetty, verify the hash, and install, initialize a new base\nRUN wget -q http://central.maven.org/maven2/org/eclipse/jetty/jetty-distribution/$jetty_version/jetty-distribution-$jetty_version.tar.gz \\\n && echo \"$jetty_hash jetty-distribution-$jetty_version.tar.gz\" | sha1sum -c - \\\n && tar -zxvf jetty-distribution-$jetty_version.tar.gz -C /opt \\\n && ln -s /opt/jetty-distribution-$jetty_version/ /opt/jetty-home\n#  Config Jetty\nRUN mkdir -p /opt/shib-jetty-base/modules /opt/shib-jetty-base/lib/ext /opt/shib-jetty-base/lib/logging /opt/shib-jetty-base/resources \\\n && cd /opt/shib-jetty-base \\\n && touch start.ini \\\n && /opt/jre-home/bin/java -jar ../jetty-home/start.jar --add-to-startd=http,https,deploy,ext,annotations,jstl,rewrite\n#  Download Shibboleth IdP, verify the hash, and install\nRUN wget -q https://shibboleth.net/downloads/identity-provider/$idp_version/shibboleth-identity-provider-$idp_version.tar.gz \\\n && echo \"$idp_hash shibboleth-identity-provider-$idp_version.tar.gz\" | sha256sum -c - \\\n && tar -zxvf shibboleth-identity-provider-$idp_version.tar.gz -C /opt \\\n && ln -s /opt/shibboleth-identity-provider-$idp_version/ /opt/shibboleth-idp\n#  Download the library to allow SOAP Endpoints, verify the hash, and place\nRUN wget -q https://build.shibboleth.net/nexus/content/repositories/releases/net/shibboleth/utilities/jetty9/jetty9-dta-ssl/1.0.0/jetty9-dta-ssl-1.0.0.jar \\\n && echo \"$dta_hash jetty9-dta-ssl-1.0.0.jar\" | sha1sum -c - \\\n && mv jetty9-dta-ssl-1.0.0.jar /opt/shib-jetty-base/lib/ext/\n#  Download the slf4j library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/org/slf4j/slf4j-api/$slf4j_version/slf4j-api-$slf4j_version.jar \\\n && echo \"$slf4j_hash slf4j-api-$slf4j_version.jar\" | sha1sum -c - \\\n && mv slf4j-api-$slf4j_version.jar /opt/shib-jetty-base/lib/logging/\n#  Download the logback_classic library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/ch/qos/logback/logback-classic/$logback_version/logback-classic-$logback_version.jar \\\n && echo \"$logback_classic_hash logback-classic-$logback_version.jar\" | sha1sum -c - \\\n && mv logback-classic-$logback_version.jar /opt/shib-jetty-base/lib/logging/\n#  Download the logback-core library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/ch/qos/logback/logback-core/$logback_version/logback-core-$logback_version.jar \\\n && echo \"$logback_core_hash logback-core-$logback_version.jar\" | sha1sum -c - \\\n && mv logback-core-$logback_version.jar /opt/shib-jetty-base/lib/logging/\n#  Download the logback-access library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/ch/qos/logback/logback-access/$logback_version/logback-access-$logback_version.jar \\\n && echo \"$logback_access_hash logback-access-$logback_version.jar\" | sha1sum -c - \\\n && mv logback-access-$logback_version.jar /opt/shib-jetty-base/lib/logging/\n#  Setting owner ownership and permissions on new items in this command\nRUN useradd jetty -U -s /bin/false \\\n && chown -R root:jetty /opt \\\n && chmod -R 640 /opt \\\n && chmod 750 /opt/jre-home/bin/java\nCOPY opt/shib-jetty-base/ /opt/shib-jetty-base/\nCOPY opt/shibboleth-idp/ /opt/shibboleth-idp/\n#  Setting owner ownership and permissions on new items from the COPY command\nRUN mkdir /opt/shib-jetty-base/logs \\\n && chown -R root:jetty /opt/shib-jetty-base \\\n && chmod -R 640 /opt/shib-jetty-base \\\n && chmod -R 750 /opt/shibboleth-idp/bin\nFROM centos:centos7\nLABEL maintainer=\"Unicon, Inc. idp.java.version=8.0.212\" \\\n      idp.jetty.version=\"9.3.27.v20190418\" \\\n      idp.version=\"3.4.3\"\nENV JETTY_HOME=\"/opt/jetty-home\" \\\n    JETTY_BASE=\"/opt/shib-jetty-base\" \\\n    JETTY_MAX_HEAP=\"2048m\" \\\n    JETTY_BROWSER_SSL_KEYSTORE_PASSWORD=\"changeme\" \\\n    JETTY_BACKCHANNEL_SSL_KEYSTORE_PASSWORD=\"changeme\" \\\n    PATH=\"$PATH:$JRE_HOME/bin\"\nRUN yum -y update \\\n && yum -y install which \\\n && yum -y clean all\nCOPY bin/ /usr/local/bin/\nRUN useradd jetty -U -s /bin/false \\\n && chmod 750 /usr/local/bin/run-jetty.sh /usr/local/bin/init-idp.sh\nCOPY --from=temp /opt/ /opt/\nRUN chmod +x /opt/jetty-home/bin/jetty.sh\n#  Opening 4443 (browser TLS), 8443 (mutual auth TLS)\nEXPOSE 4443/tcp 8443/tcp\nCMD [\"run-jetty.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"7a6a710bc97af901611d9603c28b7abe","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:centos7 AS temp\nENV java_version=\"8.0.212\" \\\n    zulu_version=\"8.38.0.13\" \\\n    java_hash=\"14136019014c020fee0fc13073d00388\" \\\n    jetty_version=\"9.3.27.v20190418\" \\\n    jetty_hash=\"7c7c80dd1c9f921771e2b1a05deeeec652d5fcaa\" \\\n    idp_version=\"3.4.3\" \\\n    idp_hash=\"eb86bc7b6366ce2a44f97cae1b014d307b84257e3149469b22b2d091007309db\" \\\n    dta_hash=\"2f547074b06952b94c35631398f36746820a7697\" \\\n    slf4j_version=\"1.7.25\" \\\n    slf4j_hash=\"da76ca59f6a57ee3102f8f9bd9cee742973efa8a\" \\\n    logback_version=\"1.2.3\" \\\n    logback_classic_hash=\"7c4f3c474fb2c041d8028740440937705ebb473a\" \\\n    logback_core_hash=\"864344400c3d4d92dfeb0a305dc87d953677c03c\" \\\n    logback_access_hash=\"e8a841cb796f6423c7afd8738df6e0e4052bf24a\"\nENV JETTY_HOME=\"/opt/jetty-home\" \\\n    JETTY_BASE=\"/opt/shib-jetty-base\" \\\n    PATH=\"$PATH:$JRE_HOME/bin\"\nRUN yum -y update \\\n && yum -y install wget tar which \\\n && yum -y clean all\n#   Download Java, verify the hash, and install\nRUN wget -q http://cdn.azul.com/zulu/bin/zulu$zulu_version-ca-jdk$java_version-linux_x64.tar.gz \\\n && echo \"$java_hash zulu$zulu_version-ca-jdk$java_version-linux_x64.tar.gz\" | md5sum -c - \\\n && tar -zxvf zulu$zulu_version-ca-jdk$java_version-linux_x64.tar.gz -C /opt \\\n && ln -s /opt/zulu$zulu_version-ca-jdk$java_version-linux_x64/jre/ /opt/jre-home\n#   Download Jetty, verify the hash, and install, initialize a new base\nRUN wget -q http://central.maven.org/maven2/org/eclipse/jetty/jetty-distribution/$jetty_version/jetty-distribution-$jetty_version.tar.gz \\\n && echo \"$jetty_hash jetty-distribution-$jetty_version.tar.gz\" | sha1sum -c - \\\n && tar -zxvf jetty-distribution-$jetty_version.tar.gz -C /opt \\\n && ln -s /opt/jetty-distribution-$jetty_version/ /opt/jetty-home\n#   Config Jetty\nRUN mkdir -p /opt/shib-jetty-base/modules /opt/shib-jetty-base/lib/ext /opt/shib-jetty-base/lib/logging /opt/shib-jetty-base/resources \\\n && cd /opt/shib-jetty-base \\\n && touch start.ini \\\n && /opt/jre-home/bin/java -jar ../jetty-home/start.jar --add-to-startd=http,https,deploy,ext,annotations,jstl,rewrite\n#   Download Shibboleth IdP, verify the hash, and install\nRUN wget -q https://shibboleth.net/downloads/identity-provider/$idp_version/shibboleth-identity-provider-$idp_version.tar.gz \\\n && echo \"$idp_hash shibboleth-identity-provider-$idp_version.tar.gz\" | sha256sum -c - \\\n && tar -zxvf shibboleth-identity-provider-$idp_version.tar.gz -C /opt \\\n && ln -s /opt/shibboleth-identity-provider-$idp_version/ /opt/shibboleth-idp\n#   Download the library to allow SOAP Endpoints, verify the hash, and place\nRUN wget -q https://build.shibboleth.net/nexus/content/repositories/releases/net/shibboleth/utilities/jetty9/jetty9-dta-ssl/1.0.0/jetty9-dta-ssl-1.0.0.jar \\\n && echo \"$dta_hash jetty9-dta-ssl-1.0.0.jar\" | sha1sum -c - \\\n && mv jetty9-dta-ssl-1.0.0.jar /opt/shib-jetty-base/lib/ext/\n#   Download the slf4j library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/org/slf4j/slf4j-api/$slf4j_version/slf4j-api-$slf4j_version.jar \\\n && echo \"$slf4j_hash slf4j-api-$slf4j_version.jar\" | sha1sum -c - \\\n && mv slf4j-api-$slf4j_version.jar /opt/shib-jetty-base/lib/logging/\n#   Download the logback_classic library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/ch/qos/logback/logback-classic/$logback_version/logback-classic-$logback_version.jar \\\n && echo \"$logback_classic_hash logback-classic-$logback_version.jar\" | sha1sum -c - \\\n && mv logback-classic-$logback_version.jar /opt/shib-jetty-base/lib/logging/\n#   Download the logback-core library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/ch/qos/logback/logback-core/$logback_version/logback-core-$logback_version.jar \\\n && echo \"$logback_core_hash logback-core-$logback_version.jar\" | sha1sum -c - \\\n && mv logback-core-$logback_version.jar /opt/shib-jetty-base/lib/logging/\n#   Download the logback-access library for Jetty logging, verify the hash, and place\nRUN wget -q http://central.maven.org/maven2/ch/qos/logback/logback-access/$logback_version/logback-access-$logback_version.jar \\\n && echo \"$logback_access_hash logback-access-$logback_version.jar\" | sha1sum -c - \\\n && mv logback-access-$logback_version.jar /opt/shib-jetty-base/lib/logging/\n#   Setting owner ownership and permissions on new items in this command\nRUN useradd jetty -U -s /bin/false \\\n && chown -R root:jetty /opt \\\n && chmod -R 640 /opt \\\n && chmod 750 /opt/jre-home/bin/java\nCOPY opt/shib-jetty-base/ /opt/shib-jetty-base/\nCOPY opt/shibboleth-idp/ /opt/shibboleth-idp/\n#   Setting owner ownership and permissions on new items from the COPY command\nRUN mkdir /opt/shib-jetty-base/logs \\\n && chown -R root:jetty /opt/shib-jetty-base \\\n && chmod -R 640 /opt/shib-jetty-base \\\n && chmod -R 750 /opt/shibboleth-idp/bin\nFROM centos:centos7\nLABEL maintainer=\"Unicon, Inc. idp.java.version=8.0.212\" \\\n      idp.jetty.version=\"9.3.27.v20190418\" \\\n      idp.version=\"3.4.3\"\nENV JETTY_HOME=\"/opt/jetty-home\" \\\n    JETTY_BASE=\"/opt/shib-jetty-base\" \\\n    JETTY_MAX_HEAP=\"2048m\" \\\n    JETTY_BROWSER_SSL_KEYSTORE_PASSWORD=\"changeme\" \\\n    JETTY_BACKCHANNEL_SSL_KEYSTORE_PASSWORD=\"changeme\" \\\n    PATH=\"$PATH:$JRE_HOME/bin\"\nRUN yum -y update \\\n && yum -y install which \\\n && yum -y clean all\nCOPY bin/ /usr/local/bin/\nRUN useradd jetty -U -s /bin/false \\\n && chmod 750 /usr/local/bin/run-jetty.sh /usr/local/bin/init-idp.sh\nCOPY --from=temp /opt/ /opt/\nRUN chmod +x /opt/jetty-home/bin/jetty.sh\n#   Opening 4443 (browser TLS), 8443 (mutual auth TLS)\nEXPOSE 4443/tcp 8443/tcp\nCMD [\"run-jetty.sh\"]\n","originalDockerfileUglifiedHash":"8ec351235e4fee61db42ca3e86592518","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/263f8ecf5fb1d7f663fea59f3ea602c3a8b30989.dockerfile"}