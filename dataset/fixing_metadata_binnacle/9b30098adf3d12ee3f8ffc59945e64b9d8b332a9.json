{"seed":3305454988,"processedDockerfileHash":"239841b56a563a02ad660435c4cbed9c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-user"],"processedDockerfile":"ARG PLEX_VER=1.16.0.1226-7eb2c8f6f\nARG PLEX_SHA=edc394304a7f40575b16320ee35b6490eaa6b1b1\nARG LIBGCC1_VER=6.3.0-18+deb9u1\nARG XMLSTAR_VER=1.6.1\nARG CURL_VER=curl-7_65_1\nARG ZLIB_VER=1.2.11\nFROM spritsail/debian-builder:stretch-slim AS builder\nARG PLEX_VER\nARG PLEX_SHA\nARG LIBGCC1_VER\nARG LIBXML2_VER=v2.9.8\nARG LIBXSLT_VER=v1.1.32\nARG XMLSTAR_VER\nARG LIBRE_VER=2.8.2\nARG CURL_VER\nARG ZLIB_VER\nARG MAKEFLAGS=-j2\n#   Download and build zlib\nWORKDIR /tmp/zlib\nRUN curl -sSf https://www.zlib.net/zlib-$ZLIB_VER.tar.xz | tar xJ --strip-components=1 \\\n && ./configure --prefix=/usr --shared \\\n && make DESTDIR=/prefix install\n#   Download and build libxml2\nWORKDIR /tmp/libxml2\nRUN git clone https://gitlab.gnome.org/GNOME/libxml2.git --branch $LIBXML2_VER --depth 1 . \\\n && ./autogen.sh --prefix=/usr --with-zlib=/prefix/usr --without-catalog --without-docbook --without-ftp --without-http --without-iconv --without-iso8859x --without-legacy --without-modules --without-python \\\n && make DESTDIR=/prefix install\n#   Download and build libxslt\nWORKDIR /tmp/libxslt\nRUN git clone https://gitlab.gnome.org/GNOME/libxslt.git --branch $LIBXSLT_VER --depth 1 . \\\n && ./autogen.sh --prefix=/usr --with-zlib=/prefix/usr --with-libxml-src=\"../libxml2\" --without-crypto --without-plugins --without-python \\\n && make DESTDIR=/prefix install\n#   Download and build xmlstarlet\nCOPY xmlstarlet-*.patch /tmp\nWORKDIR /tmp/xmlstarlet\nRUN git clone git://git.code.sf.net/p/xmlstar/code --branch $XMLSTAR_VER --depth 1 . \\\n && git apply /tmp/xmlstarlet*.patch \\\n && autoreconf -sif \\\n && ./configure --prefix=/usr --disable-build-docs --with-libxml-prefix=/prefix/usr --with-libxslt-prefix=/prefix/usr \\\n && make DESTDIR=/prefix install\n#   Download and build LibreSSL as a cURL dependency\nWORKDIR /tmp/libressl\nRUN curl -sSL https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRE_VER}.tar.gz | tar xz --strip-components=1 \\\n && ./configure --prefix=/usr \\\n && make install\n#   Download and build curl\nWORKDIR /tmp/curl\nRUN git clone https://github.com/curl/curl.git --branch $CURL_VER --depth 1 . \\\n && autoreconf -sif \\\n && ./configure --prefix=/usr --enable-ipv6 --enable-optimize --enable-symbol-hiding --enable-versioned-symbols --enable-threaded-resolver --with-ssl --with-zlib=/prefix/usr --disable-crypto-auth --disable-curldebug --disable-dependency-tracking --disable-dict --disable-gopher --disable-imap --disable-libcurl-option --disable-ldap --disable-ldaps --disable-manual --disable-ntlm-wb --disable-pop3 --disable-rtsp --disable-smb --disable-smtp --disable-sspi --disable-telnet --disable-tftp --disable-tls-srp --disable-verbose --without-axtls --without-libmetalink --without-libpsl --without-librtmp --without-winidn \\\n && make DESTDIR=/prefix install\nWORKDIR /prefix\n#   Fetch Plex and required libraries\nRUN curl -fsSL http://ftp.de.debian.org/debian/pool/main/g/gcc-${LIBGCC1_VER:0:1}/libgcc1_${LIBGCC1_VER}_amd64.deb | dpkg-deb -x - . \\\n && curl -fsSL -o plexmediaserver.deb https://downloads.plex.tv/plex-media-server-new/${PLEX_VER}/debian/plexmediaserver_${PLEX_VER}_amd64.deb \\\n && echo \"$PLEX_SHA plexmediaserver.deb\" | sha1sum -c - \\\n && dpkg-deb -x plexmediaserver.deb . \\\n && cd usr/lib/plexmediaserver \\\n && rm -f \"Plex Media Server Tests\" MigratePlexServerConfig.sh lib/libcrypto.so* lib/libcurl.so* lib/libssl.so* lib/libxml2.so* lib/libxslt.so* lib/libz.so* Resources/start.sh \\\n && mv lib/* ../\n#   Strip all unneeded symbols for optimum size\nRUN find -exec sh -c 'file \"{}\" | grep -q ELF \\\n && strip --strip-debug \"{}\"'\nCOPY entrypoint /output/usr/local/bin/\nCOPY *.sh /output/usr/local/bin/\nRUN chmod +x /output/usr/local/bin/*\n#  =========================\nFROM spritsail/libressl\nARG PLEX_VER\nARG LIBSTDCPP_VER\nARG LIBGCC1_VER\nARG CURL_VER\nARG XMLSTAR_VER\nLABEL maintainer=\"Spritsail <plex@spritsail.io>\" \\\n      org.label-schema.vendor=\"Spritsail\" \\\n      org.label-schema.name=\"Plex Media Server\" \\\n      org.label-schema.url=\"https://www.plex.tv/downloads/\" \\\n      org.label-schema.description=\"Tiny Docker image for Plex Media Server, built on busybox\" \\\n      org.label-schema.version=\"${PLEX_VER}\" \\\n      io.spritsail.version.plex=\"${PLEX_VER}\" \\\n      io.spritsail.version.curl=\"${CURL_VER}\" \\\n      io.spritsail.version.libgcc1=\"${LIBGCC1_VER}\" \\\n      io.spritsail.version.libstdcpp=\"${LIBSTDCPP_VER}\" \\\n      io.spritsail.version.xmlstarlet=\"${XMLSTAR_VER}\"\nWORKDIR /usr/lib/plexmediaserver\nCOPY --from=builder /output/ /\nENV SUID=\"900\" \\\n    SGID=\"900\" \\\n    PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=\"6\" \\\n    PLEX_MEDIA_SERVER_MAX_STACK_SIZE=\"3000\" \\\n    PLEX_MEDIA_SERVER_TMPDIR=\"/tmp\" \\\n    PLEX_MEDIA_SERVER_HOME=\"/usr/lib/plexmediaserver\" \\\n    PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=\"/var/lib/plexmediaserver\"\nHEALTHCHECK --interval=10s --timeout=5s CMD [\"wget\", \"-O\", \"/dev/null\", \"-T\", \"10\", \"-q\", \"localhost:32400/identity\"]\nEXPOSE 32400/tcp\nVOLUME [\"/config\", \"/transcode\"]\nRUN mkdir -p \"$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR\" \\\n && ln -sfv /config \"$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR/Plex Media Server\"\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"/usr/local/bin/entrypoint\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n","originalDockerfile":"ARG PLEX_VER=1.16.0.1226-7eb2c8f6f\nARG PLEX_SHA=edc394304a7f40575b16320ee35b6490eaa6b1b1\nARG LIBGCC1_VER=6.3.0-18+deb9u1\nARG XMLSTAR_VER=1.6.1\nARG CURL_VER=curl-7_65_1\nARG ZLIB_VER=1.2.11\nFROM spritsail/debian-builder:stretch-slim AS builder\nARG PLEX_VER\nARG PLEX_SHA\nARG LIBGCC1_VER\nARG LIBXML2_VER=v2.9.8\nARG LIBXSLT_VER=v1.1.32\nARG XMLSTAR_VER\nARG LIBRE_VER=2.8.2\nARG CURL_VER\nARG ZLIB_VER\nARG MAKEFLAGS=-j2\n#  Download and build zlib\nWORKDIR /tmp/zlib\nRUN curl -sSf https://www.zlib.net/zlib-$ZLIB_VER.tar.xz | tar xJ --strip-components=1 \\\n && ./configure --prefix=/usr --shared \\\n && make DESTDIR=/prefix install\n#  Download and build libxml2\nWORKDIR /tmp/libxml2\nRUN git clone https://gitlab.gnome.org/GNOME/libxml2.git --branch $LIBXML2_VER --depth 1 . \\\n && ./autogen.sh --prefix=/usr --with-zlib=/prefix/usr --without-catalog --without-docbook --without-ftp --without-http --without-iconv --without-iso8859x --without-legacy --without-modules --without-python \\\n && make DESTDIR=/prefix install\n#  Download and build libxslt\nWORKDIR /tmp/libxslt\nRUN git clone https://gitlab.gnome.org/GNOME/libxslt.git --branch $LIBXSLT_VER --depth 1 . \\\n && ./autogen.sh --prefix=/usr --with-zlib=/prefix/usr --with-libxml-src=\"../libxml2\" --without-crypto --without-plugins --without-python \\\n && make DESTDIR=/prefix install\n#  Download and build xmlstarlet\nADD xmlstarlet-*.patch /tmp\nWORKDIR /tmp/xmlstarlet\nRUN git clone git://git.code.sf.net/p/xmlstar/code --branch $XMLSTAR_VER --depth 1 . \\\n && git apply /tmp/xmlstarlet*.patch \\\n && autoreconf -sif \\\n && ./configure --prefix=/usr --disable-build-docs --with-libxml-prefix=/prefix/usr --with-libxslt-prefix=/prefix/usr \\\n && make DESTDIR=/prefix install\n#  Download and build LibreSSL as a cURL dependency\nWORKDIR /tmp/libressl\nRUN curl -sSL https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRE_VER}.tar.gz | tar xz --strip-components=1 \\\n && ./configure --prefix=/usr \\\n && make install\n#  Download and build curl\nWORKDIR /tmp/curl\nRUN git clone https://github.com/curl/curl.git --branch $CURL_VER --depth 1 . \\\n && autoreconf -sif \\\n && ./configure --prefix=/usr --enable-ipv6 --enable-optimize --enable-symbol-hiding --enable-versioned-symbols --enable-threaded-resolver --with-ssl --with-zlib=/prefix/usr --disable-crypto-auth --disable-curldebug --disable-dependency-tracking --disable-dict --disable-gopher --disable-imap --disable-libcurl-option --disable-ldap --disable-ldaps --disable-manual --disable-ntlm-wb --disable-pop3 --disable-rtsp --disable-smb --disable-smtp --disable-sspi --disable-telnet --disable-tftp --disable-tls-srp --disable-verbose --without-axtls --without-libmetalink --without-libpsl --without-librtmp --without-winidn \\\n && make DESTDIR=/prefix install\nWORKDIR /prefix\n#  Fetch Plex and required libraries\nRUN curl -fsSL http://ftp.de.debian.org/debian/pool/main/g/gcc-${LIBGCC1_VER:0:1}/libgcc1_${LIBGCC1_VER}_amd64.deb | dpkg-deb -x - . \\\n && curl -fsSL -o plexmediaserver.deb https://downloads.plex.tv/plex-media-server-new/${PLEX_VER}/debian/plexmediaserver_${PLEX_VER}_amd64.deb \\\n && echo \"$PLEX_SHA plexmediaserver.deb\" | sha1sum -c - \\\n && dpkg-deb -x plexmediaserver.deb . \\\n && cd usr/lib/plexmediaserver \\\n && rm -f \"Plex Media Server Tests\" MigratePlexServerConfig.sh lib/libcrypto.so* lib/libcurl.so* lib/libssl.so* lib/libxml2.so* lib/libxslt.so* lib/libz.so* Resources/start.sh \\\n && mv lib/* ../\n#  Strip all unneeded symbols for optimum size\nRUN find -exec sh -c 'file \"{}\" | grep -q ELF \\\n && strip --strip-debug \"{}\"' ; \\\n && apt-get install execstack -y \\\n && execstack -c usr/lib/*.so* \\\n && mkdir -p /output/usr/lib /output/usr/bin \\\n && mv lib/x86_64-linux-gnu/*.so* usr/lib/plexmediaserver usr/lib/*.so* /output/usr/lib \\\n && mv usr/bin/curl /output/usr/bin \\\n && mv usr/bin/xml /output/usr/bin/xmlstarlet\nADD entrypoint /output/usr/local/bin/\nADD *.sh /output/usr/local/bin/\nRUN chmod +x /output/usr/local/bin/*\n# =========================\nFROM spritsail/libressl\nARG PLEX_VER\nARG LIBSTDCPP_VER\nARG LIBGCC1_VER\nARG CURL_VER\nARG XMLSTAR_VER\nLABEL maintainer=\"Spritsail <plex@spritsail.io>\" \\\n      org.label-schema.vendor=\"Spritsail\" \\\n      org.label-schema.name=\"Plex Media Server\" \\\n      org.label-schema.url=\"https://www.plex.tv/downloads/\" \\\n      org.label-schema.description=\"Tiny Docker image for Plex Media Server, built on busybox\" \\\n      org.label-schema.version=\"${PLEX_VER}\" \\\n      io.spritsail.version.plex=\"${PLEX_VER}\" \\\n      io.spritsail.version.curl=\"${CURL_VER}\" \\\n      io.spritsail.version.libgcc1=\"${LIBGCC1_VER}\" \\\n      io.spritsail.version.libstdcpp=\"${LIBSTDCPP_VER}\" \\\n      io.spritsail.version.xmlstarlet=\"${XMLSTAR_VER}\"\nWORKDIR /usr/lib/plexmediaserver\nCOPY --from=builder /output/ /\nENV SUID=\"900\" \\\n    SGID=\"900\" \\\n    PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=\"6\" \\\n    PLEX_MEDIA_SERVER_MAX_STACK_SIZE=\"3000\" \\\n    PLEX_MEDIA_SERVER_TMPDIR=\"/tmp\" \\\n    PLEX_MEDIA_SERVER_HOME=\"/usr/lib/plexmediaserver\" \\\n    PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=\"/var/lib/plexmediaserver\"\nHEALTHCHECK --interval=10s --timeout=5s CMD [\"wget\", \"-O\", \"/dev/null\", \"-T\", \"10\", \"-q\", \"localhost:32400/identity\"]\nEXPOSE 32400/tcp\nVOLUME [\"/config\", \"/transcode\"]\nRUN mkdir -p \"$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR\" \\\n && ln -sfv /config \"$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR/Plex Media Server\"\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"/usr/local/bin/entrypoint\"]\n","injectedSmells":[],"originalDockerfileHash":"649716d30adb2497a34f9cb3c5053d8c","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG PLEX_VER=1.16.0.1226-7eb2c8f6f\nARG PLEX_SHA=edc394304a7f40575b16320ee35b6490eaa6b1b1\nARG LIBGCC1_VER=6.3.0-18+deb9u1\nARG XMLSTAR_VER=1.6.1\nARG CURL_VER=curl-7_65_1\nARG ZLIB_VER=1.2.11\nFROM spritsail/debian-builder:stretch-slim AS builder\nARG PLEX_VER\nARG PLEX_SHA\nARG LIBGCC1_VER\nARG LIBXML2_VER=v2.9.8\nARG LIBXSLT_VER=v1.1.32\nARG XMLSTAR_VER\nARG LIBRE_VER=2.8.2\nARG CURL_VER\nARG ZLIB_VER\nARG MAKEFLAGS=-j2\n#   Download and build zlib\nWORKDIR /tmp/zlib\nRUN curl -sSf https://www.zlib.net/zlib-$ZLIB_VER.tar.xz | tar xJ --strip-components=1 \\\n && ./configure --prefix=/usr --shared \\\n && make DESTDIR=/prefix install\n#   Download and build libxml2\nWORKDIR /tmp/libxml2\nRUN git clone https://gitlab.gnome.org/GNOME/libxml2.git --branch $LIBXML2_VER --depth 1 . \\\n && ./autogen.sh --prefix=/usr --with-zlib=/prefix/usr --without-catalog --without-docbook --without-ftp --without-http --without-iconv --without-iso8859x --without-legacy --without-modules --without-python \\\n && make DESTDIR=/prefix install\n#   Download and build libxslt\nWORKDIR /tmp/libxslt\nRUN git clone https://gitlab.gnome.org/GNOME/libxslt.git --branch $LIBXSLT_VER --depth 1 . \\\n && ./autogen.sh --prefix=/usr --with-zlib=/prefix/usr --with-libxml-src=\"../libxml2\" --without-crypto --without-plugins --without-python \\\n && make DESTDIR=/prefix install\n#   Download and build xmlstarlet\nADD xmlstarlet-*.patch /tmp\nWORKDIR /tmp/xmlstarlet\nRUN git clone git://git.code.sf.net/p/xmlstar/code --branch $XMLSTAR_VER --depth 1 . \\\n && git apply /tmp/xmlstarlet*.patch \\\n && autoreconf -sif \\\n && ./configure --prefix=/usr --disable-build-docs --with-libxml-prefix=/prefix/usr --with-libxslt-prefix=/prefix/usr \\\n && make DESTDIR=/prefix install\n#   Download and build LibreSSL as a cURL dependency\nWORKDIR /tmp/libressl\nRUN curl -sSL https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRE_VER}.tar.gz | tar xz --strip-components=1 \\\n && ./configure --prefix=/usr \\\n && make install\n#   Download and build curl\nWORKDIR /tmp/curl\nRUN git clone https://github.com/curl/curl.git --branch $CURL_VER --depth 1 . \\\n && autoreconf -sif \\\n && ./configure --prefix=/usr --enable-ipv6 --enable-optimize --enable-symbol-hiding --enable-versioned-symbols --enable-threaded-resolver --with-ssl --with-zlib=/prefix/usr --disable-crypto-auth --disable-curldebug --disable-dependency-tracking --disable-dict --disable-gopher --disable-imap --disable-libcurl-option --disable-ldap --disable-ldaps --disable-manual --disable-ntlm-wb --disable-pop3 --disable-rtsp --disable-smb --disable-smtp --disable-sspi --disable-telnet --disable-tftp --disable-tls-srp --disable-verbose --without-axtls --without-libmetalink --without-libpsl --without-librtmp --without-winidn \\\n && make DESTDIR=/prefix install\nWORKDIR /prefix\n#   Fetch Plex and required libraries\nRUN curl -fsSL http://ftp.de.debian.org/debian/pool/main/g/gcc-${LIBGCC1_VER:0:1}/libgcc1_${LIBGCC1_VER}_amd64.deb | dpkg-deb -x - . \\\n && curl -fsSL -o plexmediaserver.deb https://downloads.plex.tv/plex-media-server-new/${PLEX_VER}/debian/plexmediaserver_${PLEX_VER}_amd64.deb \\\n && echo \"$PLEX_SHA plexmediaserver.deb\" | sha1sum -c - \\\n && dpkg-deb -x plexmediaserver.deb . \\\n && cd usr/lib/plexmediaserver \\\n && rm -f \"Plex Media Server Tests\" MigratePlexServerConfig.sh lib/libcrypto.so* lib/libcurl.so* lib/libssl.so* lib/libxml2.so* lib/libxslt.so* lib/libz.so* Resources/start.sh \\\n && mv lib/* ../\n#   Strip all unneeded symbols for optimum size\nRUN find -exec sh -c 'file \"{}\" | grep -q ELF \\\n && strip --strip-debug \"{}\"'\nADD entrypoint /output/usr/local/bin/\nADD *.sh /output/usr/local/bin/\nRUN chmod +x /output/usr/local/bin/*\n#  =========================\nFROM spritsail/libressl\nARG PLEX_VER\nARG LIBSTDCPP_VER\nARG LIBGCC1_VER\nARG CURL_VER\nARG XMLSTAR_VER\nLABEL maintainer=\"Spritsail <plex@spritsail.io>\" \\\n      org.label-schema.vendor=\"Spritsail\" \\\n      org.label-schema.name=\"Plex Media Server\" \\\n      org.label-schema.url=\"https://www.plex.tv/downloads/\" \\\n      org.label-schema.description=\"Tiny Docker image for Plex Media Server, built on busybox\" \\\n      org.label-schema.version=\"${PLEX_VER}\" \\\n      io.spritsail.version.plex=\"${PLEX_VER}\" \\\n      io.spritsail.version.curl=\"${CURL_VER}\" \\\n      io.spritsail.version.libgcc1=\"${LIBGCC1_VER}\" \\\n      io.spritsail.version.libstdcpp=\"${LIBSTDCPP_VER}\" \\\n      io.spritsail.version.xmlstarlet=\"${XMLSTAR_VER}\"\nWORKDIR /usr/lib/plexmediaserver\nCOPY --from=builder /output/ /\nENV SUID=\"900\" \\\n    SGID=\"900\" \\\n    PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=\"6\" \\\n    PLEX_MEDIA_SERVER_MAX_STACK_SIZE=\"3000\" \\\n    PLEX_MEDIA_SERVER_TMPDIR=\"/tmp\" \\\n    PLEX_MEDIA_SERVER_HOME=\"/usr/lib/plexmediaserver\" \\\n    PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=\"/var/lib/plexmediaserver\"\nHEALTHCHECK --interval=10s --timeout=5s CMD [\"wget\", \"-O\", \"/dev/null\", \"-T\", \"10\", \"-q\", \"localhost:32400/identity\"]\nEXPOSE 32400/tcp\nVOLUME [\"/config\", \"/transcode\"]\nRUN mkdir -p \"$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR\" \\\n && ln -sfv /config \"$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR/Plex Media Server\"\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"/usr/local/bin/entrypoint\"]\n","originalDockerfileUglifiedHash":"6e2f62c1d792fd6c899f727e4170e17f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9b30098adf3d12ee3f8ffc59945e64b9d8b332a9.dockerfile"}