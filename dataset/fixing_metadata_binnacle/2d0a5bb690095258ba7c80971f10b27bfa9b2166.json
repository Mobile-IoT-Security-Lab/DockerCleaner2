{"seed":4069248134,"processedDockerfileHash":"48752ce93e7206d333b1978017330f5f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   FROM ehayes/manageiq_org_base:latest\nFROM manageiq/ruby:latest\nMAINTAINER Eric Hayes <eric@erichayes.net>\nRUN yum -y install epel-release\nRUN yum -y install bison bzip2 curl-devel gcc gcc-c++ git libffi libffi-devel libxml2-devel libxslt-devel libyaml-devel make openssl-devel readline-devel tar vim-enhanced wget zlib-devel\n#   Install Nginx & setup\n#   ----------------------------------------\nRUN yum -y install nginx\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#   Install Certbot for SSL renewal\n#   ----------------------------------------\nRUN yum -y install certbot\n#   Install Bundler\n#   ----------------------------------------\nRUN gem install bundler --version 2.4.12\n#   ENV vars\n#   ----------------------------------------\n#   Believe it or not, for Sass processing:\nENV LC_LANG=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\n#   Effects things like whether Google Analytics is included\nENV JEKYLL_ENV=\"production\"\n#   Effects Ruby libs loaded\nENV MIQ_ENV=\"production\"\n#   Shell commands are logged, not run\n#   MIQ_DEBUG=1\n#   Change logging destination\n#   MIQ_LOG_DEST\n#   Absolute path for Bundler\nENV MIQ_BUNDLER=\"/usr/local/bin/bundler\"\nENV MIQ_BASE_DIR=\"/srv/build\"\nENV MIQ_DOCS_DIR=\"/srv/build/site/docs\"\nENV MIQ_GUIDES_REPO=\"https://github.com/manageiq/guides\"\nENV MIQ_GUIDES_BRANCH=\"master\"\nENV MIQ_SITE_DEST=\"/srv/manageiq_org\"\nENV MIQ_SITE_SOURCE=\"${MIQ_BASE_DIR}/site\"\nENV MIQ_SITE_BRANCH=\"master\"\nENV MIQ_REF_REPO=\"https://github.com/manageiq/manageiq_docs\"\nENV MIQ_REF_BRANCH=\"master\"\n#   ENV MIQ_REF_TMP=/tmp/manageiq_docs\n#   ENV MIQ_REF_SRC=_preview/manageiq/${MIQ_REF_BRANCH}\n#   ENV MIQ_REF_DIR=${MIQ_DOCS_DIR}/reference/latest\n#   Prime the pump bundler gems (hopefully this is cached)\n#   ----------------------------------------\nRUN mkdir -p /srv/base\nCOPY /Gemfile /srv/base\nWORKDIR /srv/base\nRUN ${MIQ_BUNDLER} install\nRUN gem install ascii_binder --version 1.2\n#   Nginx configs\nRUN mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.dist\nCOPY config/nginx.conf /etc/nginx/nginx.conf\nCOPY config/manageiq_org.conf /etc/nginx/conf.d/\n#   Site\nRUN mkdir -p ${MIQ_SITE_DEST} ${MIQ_BASE_DIR}\nCOPY / ${MIQ_BASE_DIR}\nWORKDIR ${MIQ_BASE_DIR}\nRUN ${MIQ_BUNDLER} install --without development test\n#   Build site (working dir == /srv/build)\nRUN /bin/bash -l -c \"exe/miq build all\"\nRUN chown -R nginx: ${MIQ_SITE_DEST}\n#   Run webserver\nVOLUME \"/etc/letsencrypt\"\nEXPOSE 80/tcp 443/tcp\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  FROM ehayes/manageiq_org_base:latest\nFROM manageiq/ruby:latest\nMAINTAINER Eric Hayes <eric@erichayes.net>\nRUN yum -y install epel-release\nRUN yum -y install bison bzip2 curl-devel gcc gcc-c++ git libffi libffi-devel libxml2-devel libxslt-devel libyaml-devel make openssl-devel readline-devel tar vim-enhanced wget zlib-devel\n#  Install Nginx & setup\n#  ----------------------------------------\nRUN yum -y install nginx\n#  forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#  Install Certbot for SSL renewal\n#  ----------------------------------------\nRUN yum -y install certbot\n#  Install Bundler\n#  ----------------------------------------\nRUN gem install bundler\n#  ENV vars\n#  ----------------------------------------\n#  Believe it or not, for Sass processing:\nENV LC_LANG=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\n#  Effects things like whether Google Analytics is included\nENV JEKYLL_ENV=\"production\"\n#  Effects Ruby libs loaded\nENV MIQ_ENV=\"production\"\n#  Shell commands are logged, not run\n#  MIQ_DEBUG=1\n#  Change logging destination\n#  MIQ_LOG_DEST\n#  Absolute path for Bundler\nENV MIQ_BUNDLER=\"/usr/local/bin/bundler\"\nENV MIQ_BASE_DIR=\"/srv/build\"\nENV MIQ_DOCS_DIR=\"/srv/build/site/docs\"\nENV MIQ_GUIDES_REPO=\"https://github.com/manageiq/guides\"\nENV MIQ_GUIDES_BRANCH=\"master\"\nENV MIQ_SITE_DEST=\"/srv/manageiq_org\"\nENV MIQ_SITE_SOURCE=\"${MIQ_BASE_DIR}/site\"\nENV MIQ_SITE_BRANCH=\"master\"\nENV MIQ_REF_REPO=\"https://github.com/manageiq/manageiq_docs\"\nENV MIQ_REF_BRANCH=\"master\"\n#  ENV MIQ_REF_TMP=/tmp/manageiq_docs\n#  ENV MIQ_REF_SRC=_preview/manageiq/${MIQ_REF_BRANCH}\n#  ENV MIQ_REF_DIR=${MIQ_DOCS_DIR}/reference/latest\n#  Prime the pump bundler gems (hopefully this is cached)\n#  ----------------------------------------\nRUN mkdir -p /srv/base\nCOPY /Gemfile /srv/base\nWORKDIR /srv/base\nRUN ${MIQ_BUNDLER} install\nRUN gem install ascii_binder\n#  Nginx configs\nRUN mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.dist\nCOPY config/nginx.conf /etc/nginx/nginx.conf\nCOPY config/manageiq_org.conf /etc/nginx/conf.d/\n#  Site\nRUN mkdir -p ${MIQ_SITE_DEST} ${MIQ_BASE_DIR}\nCOPY / ${MIQ_BASE_DIR}\nWORKDIR ${MIQ_BASE_DIR}\nRUN ${MIQ_BUNDLER} install --without development test\n#  Build site (working dir == /srv/build)\nRUN /bin/bash -l -c \"exe/miq build all\"\nRUN chown -R nginx: ${MIQ_SITE_DEST}\n#  Run webserver\nVOLUME \"/etc/letsencrypt\"\nEXPOSE 80/tcp 443/tcp\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"6ecbecfa8904e54fcebd7970f28bcc86","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   FROM ehayes/manageiq_org_base:latest\nFROM manageiq/ruby:latest\nMAINTAINER Eric Hayes <eric@erichayes.net>\nRUN yum -y install epel-release\nRUN yum -y install bison bzip2 curl-devel gcc gcc-c++ git libffi libffi-devel libxml2-devel libxslt-devel libyaml-devel make openssl-devel readline-devel tar vim-enhanced wget zlib-devel\n#   Install Nginx & setup\n#   ----------------------------------------\nRUN yum -y install nginx\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\n#   Install Certbot for SSL renewal\n#   ----------------------------------------\nRUN yum -y install certbot\n#   Install Bundler\n#   ----------------------------------------\nRUN gem install bundler\n#   ENV vars\n#   ----------------------------------------\n#   Believe it or not, for Sass processing:\nENV LC_LANG=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\n#   Effects things like whether Google Analytics is included\nENV JEKYLL_ENV=\"production\"\n#   Effects Ruby libs loaded\nENV MIQ_ENV=\"production\"\n#   Shell commands are logged, not run\n#   MIQ_DEBUG=1\n#   Change logging destination\n#   MIQ_LOG_DEST\n#   Absolute path for Bundler\nENV MIQ_BUNDLER=\"/usr/local/bin/bundler\"\nENV MIQ_BASE_DIR=\"/srv/build\"\nENV MIQ_DOCS_DIR=\"/srv/build/site/docs\"\nENV MIQ_GUIDES_REPO=\"https://github.com/manageiq/guides\"\nENV MIQ_GUIDES_BRANCH=\"master\"\nENV MIQ_SITE_DEST=\"/srv/manageiq_org\"\nENV MIQ_SITE_SOURCE=\"${MIQ_BASE_DIR}/site\"\nENV MIQ_SITE_BRANCH=\"master\"\nENV MIQ_REF_REPO=\"https://github.com/manageiq/manageiq_docs\"\nENV MIQ_REF_BRANCH=\"master\"\n#   ENV MIQ_REF_TMP=/tmp/manageiq_docs\n#   ENV MIQ_REF_SRC=_preview/manageiq/${MIQ_REF_BRANCH}\n#   ENV MIQ_REF_DIR=${MIQ_DOCS_DIR}/reference/latest\n#   Prime the pump bundler gems (hopefully this is cached)\n#   ----------------------------------------\nRUN mkdir -p /srv/base\nCOPY /Gemfile /srv/base\nWORKDIR /srv/base\nRUN ${MIQ_BUNDLER} install\nRUN gem install ascii_binder\n#   Nginx configs\nRUN mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.dist\nCOPY config/nginx.conf /etc/nginx/nginx.conf\nCOPY config/manageiq_org.conf /etc/nginx/conf.d/\n#   Site\nRUN mkdir -p ${MIQ_SITE_DEST} ${MIQ_BASE_DIR}\nCOPY / ${MIQ_BASE_DIR}\nWORKDIR ${MIQ_BASE_DIR}\nRUN ${MIQ_BUNDLER} install --without development test\n#   Build site (working dir == /srv/build)\nRUN /bin/bash -l -c \"exe/miq build all\"\nRUN chown -R nginx: ${MIQ_SITE_DEST}\n#   Run webserver\nVOLUME \"/etc/letsencrypt\"\nEXPOSE 80/tcp 443/tcp\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"aee2943b334017a5285f45f8a851c9c1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2d0a5bb690095258ba7c80971f10b27bfa9b2166.dockerfile"}