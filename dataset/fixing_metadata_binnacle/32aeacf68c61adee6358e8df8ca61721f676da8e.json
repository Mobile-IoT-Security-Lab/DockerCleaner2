{"seed":1236259949,"processedDockerfileHash":"46e16d7856ed66ba1101c205890cbe2c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.1-cli-alpine\nMAINTAINER Simon Forsman <simon@urb-it.com>\nENV RABBITMQ_VERSION=\"v0.8.0\"\nENV PHP_AMQP_VERSION=\"v1.9.3\"\nENV PHP_REDIS_VERSION=\"3.1.4\"\nENV PHP_ZEROMQ_VERSION=\"master\"\nENV PHP_MONGO_VERSION=\"1.2.5\"\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  cmake  file  g++  gcc  libc-dev  pcre-dev  make  git  pkgconf  re2c\"\nRUN apk add icu-dev=64.2-r1 libmcrypt-dev=2.5.8-r7 libssl1.0 libsodium-dev=1.0.18-r0 postgresql-dev=11.12-r0 libxml2-dev=2.9.9-r5 zeromq=4.3.3-r0 --no-cache --virtual .persistent-deps\nRUN set -xe \\\n && apk add openssl-dev=1.1.1k-r0 zeromq-dev=4.3.3-r0 $PHPIZE_DEPS --no-cache --virtual .build-deps \\\n && docker-php-ext-configure bcmath --enable-bcmath \\\n && docker-php-ext-configure intl --enable-intl \\\n && docker-php-ext-configure pcntl --enable-pcntl \\\n && docker-php-ext-configure pdo_mysql --with-pdo-mysql \\\n && docker-php-ext-configure pdo_pgsql --with-pgsql \\\n && docker-php-ext-configure mbstring --enable-mbstring \\\n && docker-php-ext-configure soap --enable-soap \\\n && docker-php-ext-install bcmath intl mcrypt pcntl pdo_mysql pdo_pgsql mbstring soap \\\n && git clone --branch ${RABBITMQ_VERSION} https://github.com/alanxz/rabbitmq-c.git /tmp/rabbitmq \\\n && cd /tmp/rabbitmq \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && cmake --build . --target install \\\n && cp -r /usr/local/lib64/* /usr/lib/ \\\n && git clone --branch ${PHP_AMQP_VERSION} https://github.com/pdezwart/php-amqp.git /tmp/php-amqp \\\n && cd /tmp/php-amqp \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && git clone --branch ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis /tmp/phpredis \\\n && cd /tmp/phpredis \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && git clone --branch ${PHP_ZEROMQ_VERSION} https://github.com/mkoppanen/php-zmq /tmp/php-zmq \\\n && cd /tmp/php-zmq \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && git clone --branch ${PHP_MONGO_VERSION} https://github.com/mongodb/mongo-php-driver /tmp/php-mongo \\\n && cd /tmp/php-mongo \\\n && git submodule sync \\\n && git submodule update --init \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && apk del .build-deps \\\n && rm -rf /tmp/* \\\n && rm -rf /app \\\n && mkdir /app\n#   Copy configuration\nCOPY config/php-cli.ini /usr/local/etc/php/php.ini\nCOPY config/php7.ini /usr/local/etc/php/conf.d/\nCOPY config/amqp.ini /usr/local/etc/php/conf.d/\nCOPY config/zmq.ini /usr/local/etc/php/conf.d/\nCOPY config/redis.ini /usr/local/etc/php/conf.d/\nCOPY config/mongodb.ini /usr/local/etc/php/conf.d/\n#   Install dependencies\nRUN apk --no-cache --update --repository http://dl-3.alpinelinux.org/alpine/edge/community/ add git curl nodejs \\\n && apk --no-cache del wget\nWORKDIR /app\n#   Install Composer & dependencies\nRUN curl -sSL http://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && chmod +x /usr/local/bin/composer \\\n && composer global require \"hirak/prestissimo:^0.3\"\n#   Set up the application directory\nVOLUME [\"/app\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.1-cli-alpine\nMAINTAINER Simon Forsman <simon@urb-it.com>\nENV RABBITMQ_VERSION=\"v0.8.0\"\nENV PHP_AMQP_VERSION=\"v1.9.3\"\nENV PHP_REDIS_VERSION=\"3.1.4\"\nENV PHP_ZEROMQ_VERSION=\"master\"\nENV PHP_MONGO_VERSION=\"1.2.5\"\n#  persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  cmake  file  g++  gcc  libc-dev  pcre-dev  make  git  pkgconf  re2c\"\nRUN apk add --no-cache --virtual .persistent-deps icu-dev libmcrypt-dev libssl1.0 libsodium-dev postgresql-dev libxml2-dev zeromq\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS openssl-dev zeromq-dev \\\n && docker-php-ext-configure bcmath --enable-bcmath \\\n && docker-php-ext-configure intl --enable-intl \\\n && docker-php-ext-configure pcntl --enable-pcntl \\\n && docker-php-ext-configure pdo_mysql --with-pdo-mysql \\\n && docker-php-ext-configure pdo_pgsql --with-pgsql \\\n && docker-php-ext-configure mbstring --enable-mbstring \\\n && docker-php-ext-configure soap --enable-soap \\\n && docker-php-ext-install bcmath intl mcrypt pcntl pdo_mysql pdo_pgsql mbstring soap \\\n && git clone --branch ${RABBITMQ_VERSION} https://github.com/alanxz/rabbitmq-c.git /tmp/rabbitmq \\\n && cd /tmp/rabbitmq \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && cmake --build . --target install \\\n && cp -r /usr/local/lib64/* /usr/lib/ \\\n && git clone --branch ${PHP_AMQP_VERSION} https://github.com/pdezwart/php-amqp.git /tmp/php-amqp \\\n && cd /tmp/php-amqp \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && git clone --branch ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis /tmp/phpredis \\\n && cd /tmp/phpredis \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && git clone --branch ${PHP_ZEROMQ_VERSION} https://github.com/mkoppanen/php-zmq /tmp/php-zmq \\\n && cd /tmp/php-zmq \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && git clone --branch ${PHP_MONGO_VERSION} https://github.com/mongodb/mongo-php-driver /tmp/php-mongo \\\n && cd /tmp/php-mongo \\\n && git submodule sync \\\n && git submodule update --init \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && apk del .build-deps \\\n && rm -rf /tmp/* \\\n && rm -rf /app \\\n && mkdir /app\n#  Copy configuration\nCOPY config/php-cli.ini /usr/local/etc/php/php.ini\nCOPY config/php7.ini /usr/local/etc/php/conf.d/\nCOPY config/amqp.ini /usr/local/etc/php/conf.d/\nCOPY config/zmq.ini /usr/local/etc/php/conf.d/\nCOPY config/redis.ini /usr/local/etc/php/conf.d/\nCOPY config/mongodb.ini /usr/local/etc/php/conf.d/\n#  Install dependencies\nRUN apk --no-cache --update --repository http://dl-3.alpinelinux.org/alpine/edge/community/ add git curl nodejs \\\n && apk --no-cache del wget\nWORKDIR /app\n#  Install Composer & dependencies\nRUN curl -sSL http://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && chmod +x /usr/local/bin/composer \\\n && composer global require \"hirak/prestissimo:^0.3\"\n#  Set up the application directory\nVOLUME [\"/app\"]\n","injectedSmells":[],"originalDockerfileHash":"ca4a00d53550bce9b39d4d6049afd46d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.1-cli-alpine\nMAINTAINER Simon Forsman <simon@urb-it.com>\nENV RABBITMQ_VERSION=\"v0.8.0\"\nENV PHP_AMQP_VERSION=\"v1.9.3\"\nENV PHP_REDIS_VERSION=\"3.1.4\"\nENV PHP_ZEROMQ_VERSION=\"master\"\nENV PHP_MONGO_VERSION=\"1.2.5\"\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  cmake  file  g++  gcc  libc-dev  pcre-dev  make  git  pkgconf  re2c\"\nRUN apk add --no-cache --virtual .persistent-deps icu-dev libmcrypt-dev libssl1.0 libsodium-dev postgresql-dev libxml2-dev zeromq\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS openssl-dev zeromq-dev \\\n && docker-php-ext-configure bcmath --enable-bcmath \\\n && docker-php-ext-configure intl --enable-intl \\\n && docker-php-ext-configure pcntl --enable-pcntl \\\n && docker-php-ext-configure pdo_mysql --with-pdo-mysql \\\n && docker-php-ext-configure pdo_pgsql --with-pgsql \\\n && docker-php-ext-configure mbstring --enable-mbstring \\\n && docker-php-ext-configure soap --enable-soap \\\n && docker-php-ext-install bcmath intl mcrypt pcntl pdo_mysql pdo_pgsql mbstring soap \\\n && git clone --branch ${RABBITMQ_VERSION} https://github.com/alanxz/rabbitmq-c.git /tmp/rabbitmq \\\n && cd /tmp/rabbitmq \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && cmake --build . --target install \\\n && cp -r /usr/local/lib64/* /usr/lib/ \\\n && git clone --branch ${PHP_AMQP_VERSION} https://github.com/pdezwart/php-amqp.git /tmp/php-amqp \\\n && cd /tmp/php-amqp \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && git clone --branch ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis /tmp/phpredis \\\n && cd /tmp/phpredis \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && git clone --branch ${PHP_ZEROMQ_VERSION} https://github.com/mkoppanen/php-zmq /tmp/php-zmq \\\n && cd /tmp/php-zmq \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && git clone --branch ${PHP_MONGO_VERSION} https://github.com/mongodb/mongo-php-driver /tmp/php-mongo \\\n && cd /tmp/php-mongo \\\n && git submodule sync \\\n && git submodule update --init \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && make test \\\n && apk del .build-deps \\\n && rm -rf /tmp/* \\\n && rm -rf /app \\\n && mkdir /app\n#   Copy configuration\nCOPY config/php-cli.ini /usr/local/etc/php/php.ini\nCOPY config/php7.ini /usr/local/etc/php/conf.d/\nCOPY config/amqp.ini /usr/local/etc/php/conf.d/\nCOPY config/zmq.ini /usr/local/etc/php/conf.d/\nCOPY config/redis.ini /usr/local/etc/php/conf.d/\nCOPY config/mongodb.ini /usr/local/etc/php/conf.d/\n#   Install dependencies\nRUN apk --no-cache --update --repository http://dl-3.alpinelinux.org/alpine/edge/community/ add git curl nodejs \\\n && apk --no-cache del wget\nWORKDIR /app\n#   Install Composer & dependencies\nRUN curl -sSL http://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && chmod +x /usr/local/bin/composer \\\n && composer global require \"hirak/prestissimo:^0.3\"\n#   Set up the application directory\nVOLUME [\"/app\"]\n","originalDockerfileUglifiedHash":"7eedeec90d042a6c61ccc01659ed8962","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/32aeacf68c61adee6358e8df8ca61721f676da8e.dockerfile"}