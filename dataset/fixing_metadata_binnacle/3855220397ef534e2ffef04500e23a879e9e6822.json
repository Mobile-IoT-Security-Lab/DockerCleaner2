{"seed":991841773,"processedDockerfileHash":"55f4cb50a15ee2eec279d5b8b03ee931","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   credits:\n#   https://github.com/sensu/sensu-build\n#   https://github.com/upfluence/sensu-coreos\n#   https://github.com/docker-library/python/blob/master/2.7/alpine/Dockerfile\nFROM ruby:2.3-alpine\nMAINTAINER Ory Band @ Rounds <ory@rounds.com>\n#   configuration environment variables\n#   see official sensu docs for further info\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV SENSU_API_BIND=\"0.0.0.0\" \\\n    SENSU_API_HOST=\"api\" \\\n    SENSU_API_PORT=\"4567\" \\\n    SENSU_TRANSPORT_NAME=\"rabbitmq\" \\\n    SENSU_TRANSPORT_RECONNECT_ON_ERROR=\"true\" \\\n    SENSU_CLIENT_NAME=\"sensu-client\" \\\n    SENSU_CLIENT_ADDRESS=\"\" \\\n    SENSU_CLIENT_SAFE_MODE=\"false\" \\\n    SENSU_CLIENT_REDACT=\"\\\"password\\\",\\\"passwd\\\",\\\"pass\\\",\\\"api_key\\\",\\\"api_token\\\",\\\"access_key\\\",\\\"secret_key\\\",\\\"private_key\\\",\\\"secret\\\"\" \\\n    SENSU_CLIENT_SUBSCRIPTIONS=\"\" \\\n    SENSU_CLIENT_KEEPALIVE_HANDLERS=\"\\\"default\\\"\" \\\n    SENSU_CLIENT_KEEPALIVE_THRESHOLDS_WARNING=\"180\" \\\n    SENSU_CLIENT_KEEPALIVE_THRESHOLDS_CRITICAL=\"300\" \\\n    SENSU_CLIENT_SOCKET_BIND=\"0.0.0.0\" \\\n    SENSU_CLIENT_SOCKET_PORT=\"3031\" \\\n    SENSU_RABBITMQ_HOST=\"rabbitmq\" \\\n    SENSU_RABBITMQ_PORT=\"5672\" \\\n    SENSU_RABBITMQ_VHOST=\"/sensu\" \\\n    SENSU_RABBITMQ_USER=\"guest\" \\\n    SENSU_RABBITMQ_PREFETCH=\"1\" \\\n    SENSU_RABBITMQ_SSL_PRIVATE_KEY_FILE=\"\" \\\n    SENSU_RABBITMQ_SSL_CERT_CHAIN_FILE=\"\" \\\n    SENSU_REDIS_HOST=\"redis\" \\\n    SENSU_REDIS_PORT=\"6379\" \\\n    SENSU_REDIS_DB=\"0\" \\\n    SENSU_REDIS_AUTO_RECONNECT=\"true\" \\\n    SENSU_REDIS_RECONNECT_ON_ERROR=\"false\" \\\n    SENSU_LOG_FILE=\"/dev/stdout\" \\\n    SENSU_LOG_LEVEL=\"warn\"\n#   dockerize for configuration templates\nENV DOCKERIZE_VERSION=\"v0.0.3\"\nENV DOCKERIZE_FILE=\"dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\"\nENV DOCKERIZE_URL=\"https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/$DOCKERIZE_FILE\"\nRUN cd /tmp \\\n && wget -q $DOCKERIZE_URL \\\n && tar -zxf $DOCKERIZE_FILE -C /usr/local/bin \\\n && rm $DOCKERIZE_FILE \\\n && cd -\n#   sensu-core and plugin dependencies\nRUN apk add build-base curl-dev libffi-dev ruby-bundler ruby-dev ruby-io-console libxml2-dev libxslt-dev -qU --no-cache\n#   sensu dirs\nRUN mkdir -p /opt/sensu /etc/sensu/conf.d /etc/sensu/ssl /var/log/sensu/client /var/log/sensu/server /var/log/sensu/api\nWORKDIR /opt/sensu\n#   install sensu-core and ruby plugins\n#\n#   NOTE that when updating Gemfile, you should also add the updated\n#   Gemfile.lock into the image.\n#\n#   The easiest way to do this is:\n#    - build manually\n#    - run image with a mount volume\n#    - copy the generated Gemfile.lock to your host machine via the volume\n#    - git commit Gemfile.lock\n#\n#   this will result in dockerhub building using updated Gemfile.lock,\n#   instead of having to regenerate it (error prone, slow)\nCOPY /opt/sensu/Gemfile* /opt/sensu/\n#   nokogiri is an aws dependency\nRUN apk add git -qU --no-cache -t .fetch-deps \\\n && bundle config build.nokogiri --use-system-libraries \\\n && bundle install --jobs 10 --quiet --without development test \\\n && apk del -q .fetch-deps\n#   configuration template using environment variables\nCOPY etc/sensu/conf.d/config.json.tmpl /etc/sensu/conf.d/\n#   api port\nEXPOSE 4567/tcp\n#   logs\nVOLUME [\"/var/log/sensu/client\", \"/var/log/sensu/server\", \"/var/log/sensu/api\"]\n#   execute\nCOPY tmp/entrypoint.sh /tmp/\nENTRYPOINT [\"/tmp/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  credits:\n#  https://github.com/sensu/sensu-build\n#  https://github.com/upfluence/sensu-coreos\n#  https://github.com/docker-library/python/blob/master/2.7/alpine/Dockerfile\nFROM ruby:2.3-alpine\nMAINTAINER Ory Band @ Rounds <ory@rounds.com>\n#  configuration environment variables\n#  see official sensu docs for further info\nENV SENSU_API_BIND=\"0.0.0.0\" \\\n    SENSU_API_HOST=\"api\" \\\n    SENSU_API_PORT=\"4567\" \\\n    SENSU_TRANSPORT_NAME=\"rabbitmq\" \\\n    SENSU_TRANSPORT_RECONNECT_ON_ERROR=\"true\" \\\n    SENSU_CLIENT_NAME=\"sensu-client\" \\\n    SENSU_CLIENT_ADDRESS=\"\" \\\n    SENSU_CLIENT_SAFE_MODE=\"false\" \\\n    SENSU_CLIENT_REDACT=\"\\\"password\\\",\\\"passwd\\\",\\\"pass\\\",\\\"api_key\\\",\\\"api_token\\\",\\\"access_key\\\",\\\"secret_key\\\",\\\"private_key\\\",\\\"secret\\\"\" \\\n    SENSU_CLIENT_SUBSCRIPTIONS=\"\" \\\n    SENSU_CLIENT_KEEPALIVE_HANDLERS=\"\\\"default\\\"\" \\\n    SENSU_CLIENT_KEEPALIVE_THRESHOLDS_WARNING=\"180\" \\\n    SENSU_CLIENT_KEEPALIVE_THRESHOLDS_CRITICAL=\"300\" \\\n    SENSU_CLIENT_SOCKET_BIND=\"0.0.0.0\" \\\n    SENSU_CLIENT_SOCKET_PORT=\"3031\" \\\n    SENSU_RABBITMQ_HOST=\"rabbitmq\" \\\n    SENSU_RABBITMQ_PORT=\"5672\" \\\n    SENSU_RABBITMQ_VHOST=\"/sensu\" \\\n    SENSU_RABBITMQ_USER=\"guest\" \\\n    SENSU_RABBITMQ_PASSWORD=\"guest\" \\\n    SENSU_RABBITMQ_PREFETCH=\"1\" \\\n    SENSU_RABBITMQ_SSL_PRIVATE_KEY_FILE=\"\" \\\n    SENSU_RABBITMQ_SSL_CERT_CHAIN_FILE=\"\" \\\n    SENSU_REDIS_HOST=\"redis\" \\\n    SENSU_REDIS_PORT=\"6379\" \\\n    SENSU_REDIS_PASSWORD=\"guest\" \\\n    SENSU_REDIS_DB=\"0\" \\\n    SENSU_REDIS_AUTO_RECONNECT=\"true\" \\\n    SENSU_REDIS_RECONNECT_ON_ERROR=\"false\" \\\n    SENSU_LOG_FILE=\"/dev/stdout\" \\\n    SENSU_LOG_LEVEL=\"warn\"\n#  dockerize for configuration templates\nENV DOCKERIZE_VERSION=\"v0.0.3\"\nENV DOCKERIZE_FILE=\"dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\"\nENV DOCKERIZE_URL=\"https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/$DOCKERIZE_FILE\"\nRUN cd /tmp \\\n && wget -q $DOCKERIZE_URL \\\n && tar -zxf $DOCKERIZE_FILE -C /usr/local/bin \\\n && rm $DOCKERIZE_FILE \\\n && cd -\n#  sensu-core and plugin dependencies\nRUN apk add -qU --no-cache build-base curl-dev libffi-dev ruby-bundler ruby-dev ruby-io-console libxml2-dev libxslt-dev\n#  sensu dirs\nRUN mkdir -p /opt/sensu /etc/sensu/conf.d /etc/sensu/ssl /var/log/sensu/client /var/log/sensu/server /var/log/sensu/api\nWORKDIR /opt/sensu\n#  install sensu-core and ruby plugins\n#\n#  NOTE that when updating Gemfile, you should also add the updated\n#  Gemfile.lock into the image.\n#\n#  The easiest way to do this is:\n#   - build manually\n#   - run image with a mount volume\n#   - copy the generated Gemfile.lock to your host machine via the volume\n#   - git commit Gemfile.lock\n#\n#  this will result in dockerhub building using updated Gemfile.lock,\n#  instead of having to regenerate it (error prone, slow)\nCOPY /opt/sensu/Gemfile* /opt/sensu/\n#  nokogiri is an aws dependency\nRUN apk add -qU --no-cache -t .fetch-deps git \\\n && bundle config build.nokogiri --use-system-libraries \\\n && bundle install --jobs 10 --quiet --without development test \\\n && apk del -q .fetch-deps\n#  configuration template using environment variables\nCOPY etc/sensu/conf.d/config.json.tmpl /etc/sensu/conf.d/\n#  api port\nEXPOSE 4567/tcp\n#  logs\nVOLUME [\"/var/log/sensu/client\", \"/var/log/sensu/server\", \"/var/log/sensu/api\"]\n#  execute\nCOPY tmp/entrypoint.sh /tmp/\nENTRYPOINT [\"/tmp/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"969c2fd0565290da15eecaaa3b1e4ded","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   credits:\n#   https://github.com/sensu/sensu-build\n#   https://github.com/upfluence/sensu-coreos\n#   https://github.com/docker-library/python/blob/master/2.7/alpine/Dockerfile\nFROM ruby:2.3-alpine\nMAINTAINER Ory Band @ Rounds <ory@rounds.com>\n#   configuration environment variables\n#   see official sensu docs for further info\nENV SENSU_API_BIND=\"0.0.0.0\" \\\n    SENSU_API_HOST=\"api\" \\\n    SENSU_API_PORT=\"4567\" \\\n    SENSU_TRANSPORT_NAME=\"rabbitmq\" \\\n    SENSU_TRANSPORT_RECONNECT_ON_ERROR=\"true\" \\\n    SENSU_CLIENT_NAME=\"sensu-client\" \\\n    SENSU_CLIENT_ADDRESS=\"\" \\\n    SENSU_CLIENT_SAFE_MODE=\"false\" \\\n    SENSU_CLIENT_REDACT=\"\\\"password\\\",\\\"passwd\\\",\\\"pass\\\",\\\"api_key\\\",\\\"api_token\\\",\\\"access_key\\\",\\\"secret_key\\\",\\\"private_key\\\",\\\"secret\\\"\" \\\n    SENSU_CLIENT_SUBSCRIPTIONS=\"\" \\\n    SENSU_CLIENT_KEEPALIVE_HANDLERS=\"\\\"default\\\"\" \\\n    SENSU_CLIENT_KEEPALIVE_THRESHOLDS_WARNING=\"180\" \\\n    SENSU_CLIENT_KEEPALIVE_THRESHOLDS_CRITICAL=\"300\" \\\n    SENSU_CLIENT_SOCKET_BIND=\"0.0.0.0\" \\\n    SENSU_CLIENT_SOCKET_PORT=\"3031\" \\\n    SENSU_RABBITMQ_HOST=\"rabbitmq\" \\\n    SENSU_RABBITMQ_PORT=\"5672\" \\\n    SENSU_RABBITMQ_VHOST=\"/sensu\" \\\n    SENSU_RABBITMQ_USER=\"guest\" \\\n    SENSU_RABBITMQ_PASSWORD=\"guest\" \\\n    SENSU_RABBITMQ_PREFETCH=\"1\" \\\n    SENSU_RABBITMQ_SSL_PRIVATE_KEY_FILE=\"\" \\\n    SENSU_RABBITMQ_SSL_CERT_CHAIN_FILE=\"\" \\\n    SENSU_REDIS_HOST=\"redis\" \\\n    SENSU_REDIS_PORT=\"6379\" \\\n    SENSU_REDIS_PASSWORD=\"guest\" \\\n    SENSU_REDIS_DB=\"0\" \\\n    SENSU_REDIS_AUTO_RECONNECT=\"true\" \\\n    SENSU_REDIS_RECONNECT_ON_ERROR=\"false\" \\\n    SENSU_LOG_FILE=\"/dev/stdout\" \\\n    SENSU_LOG_LEVEL=\"warn\"\n#   dockerize for configuration templates\nENV DOCKERIZE_VERSION=\"v0.0.3\"\nENV DOCKERIZE_FILE=\"dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\"\nENV DOCKERIZE_URL=\"https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/$DOCKERIZE_FILE\"\nRUN cd /tmp \\\n && wget -q $DOCKERIZE_URL \\\n && tar -zxf $DOCKERIZE_FILE -C /usr/local/bin \\\n && rm $DOCKERIZE_FILE \\\n && cd -\n#   sensu-core and plugin dependencies\nRUN apk add -qU --no-cache build-base curl-dev libffi-dev ruby-bundler ruby-dev ruby-io-console libxml2-dev libxslt-dev\n#   sensu dirs\nRUN mkdir -p /opt/sensu /etc/sensu/conf.d /etc/sensu/ssl /var/log/sensu/client /var/log/sensu/server /var/log/sensu/api\nWORKDIR /opt/sensu\n#   install sensu-core and ruby plugins\n#\n#   NOTE that when updating Gemfile, you should also add the updated\n#   Gemfile.lock into the image.\n#\n#   The easiest way to do this is:\n#    - build manually\n#    - run image with a mount volume\n#    - copy the generated Gemfile.lock to your host machine via the volume\n#    - git commit Gemfile.lock\n#\n#   this will result in dockerhub building using updated Gemfile.lock,\n#   instead of having to regenerate it (error prone, slow)\nCOPY /opt/sensu/Gemfile* /opt/sensu/\n#   nokogiri is an aws dependency\nRUN apk add -qU --no-cache -t .fetch-deps git \\\n && bundle config build.nokogiri --use-system-libraries \\\n && bundle install --jobs 10 --quiet --without development test \\\n && apk del -q .fetch-deps\n#   configuration template using environment variables\nCOPY etc/sensu/conf.d/config.json.tmpl /etc/sensu/conf.d/\n#   api port\nEXPOSE 4567/tcp\n#   logs\nVOLUME [\"/var/log/sensu/client\", \"/var/log/sensu/server\", \"/var/log/sensu/api\"]\n#   execute\nCOPY tmp/entrypoint.sh /tmp/\nENTRYPOINT [\"/tmp/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"8c13583d59ac3bd1fb39f28d9019dbf5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3855220397ef534e2ffef04500e23a879e9e6822.dockerfile"}