{"seed":931200820,"processedDockerfileHash":"c315129f0de0f1db421cd7eeec3aef45","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nENV LC_ALL=\"C\"\nENV PG_VERSION=\"9.6\"\nENV KEYCLOAK_VERSION=\"3.4.3.Final\"\nENV KONG_VERSION=\"0.10.1\"\nENV MKT_VERSION_TAG=\"acc\"\nENV PUB_VERSION_TAG=\"acc\"\nUSER root\nWORKDIR /tmp\nCOPY db-creation.sql /tmp\nCOPY t1g-inserts.sql /tmp\nCOPY t1g-schema.sql /tmp\nCOPY postgres.zip /tmp\nCOPY standalone.xml /tmp\nCOPY kong.conf /tmp\nCOPY start.sh /tmp\nCOPY application.conf /tmp\nCOPY wildfly_install.sh /tmp\nCOPY t1g-ear.ear /tmp\nCOPY kc-db-export.json /tmp\nCOPY wildfly-kc-import-service.sh /tmp\nCOPY wildfly-kc-no-import-service.sh /tmp\nCOPY key-auth-handler.lua /tmp\nCOPY fixtures.lua /tmp\nCOPY bower-mkt.json /tmp\nCOPY bower-pub.json /tmp\nCOPY config-mkt.yml /tmp\nCOPY config-pub.yml /tmp\nCOPY keycloak.json /tmp\nRUN :\nRUN apt-get -y upgrade\nRUN ln -fs /usr/share/zoneinfo/Europe/Brussels /etc/localtime \\\n && dpkg-reconfigure -f noninteractive tzdata\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 software-properties-common=0.92.37.8 nano=2.2.6-1ubuntu1 curl=7.35.0-1ubuntu2.20 git=1:1.9.1-1ubuntu0.10 unzip=6.0-9ubuntu1.5 wget=1.15-1ubuntu1.14.04.5 sudo=1.8.9p5-1ubuntu1.4 netcat=1.10-40 openssl=1.0.1f-1ubuntu2.27 libpcre3=1:8.31-2ubuntu2.3 dnsmasq=2.68-1ubuntu0.2 procps=1:3.3.9-1ubuntu2.3 perl=5.18.2-2ubuntu1.7 -y )\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" | sudo tee -a /etc/apt/sources.list.d/pgdg.list\nRUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -\nRUN curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections\nRUN echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=0.10.25~dfsg2-2ubuntu1.2 oracle-java8-installer postgresql-$PG_VERSION postgresql-client-$PG_VERSION postgresql-contrib-$PG_VERSION -y -q )\nRUN npm install pm2@5.3.0 -g\n#   Configure PostgreSQL\nRUN echo \"host all all 0.0.0.0/0 md5\" >> /etc/postgresql/$PG_VERSION/main/pg_hba.conf\nRUN echo \"host all all ::0/0 md5\" >> /etc/postgresql/$PG_VERSION/main/pg_hba.conf\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/$PG_VERSION/main/postgresql.conf\nUSER postgres\nRUN /etc/init.d/postgresql start \\\n && psql -f db-creation.sql \\\n && psql t1gengine -f t1g-schema.sql \\\n && psql t1gengine -f t1g-inserts.sql\nUSER root\n#   Install Wildfly & Keycloak overlay\nRUN chmod u+x /tmp/wildfly_install.sh \\\n && /tmp/wildfly_install.sh \\\n && service wildfly stop \\\n && rm -rf /var/run/wildfly\nRUN wget https://downloads.jboss.org/keycloak/$KEYCLOAK_VERSION/keycloak-overlay-$KEYCLOAK_VERSION.zip \\\n && mv /tmp/keycloak-overlay-$KEYCLOAK_VERSION.zip /opt \\\n && unzip -o /opt/keycloak-overlay-$KEYCLOAK_VERSION.zip -d /opt/wildfly\nRUN /opt/wildfly/bin/jboss-cli.sh --file=/opt/wildfly/bin/keycloak-install.cli\nRUN mv /tmp/postgres.zip /opt/wildfly/modules/system/layers/base/org \\\n && unzip /opt/wildfly/modules/system/layers/base/org/postgres.zip -d /opt/wildfly/modules/system/layers/base/org \\\n && rm /opt/wildfly/modules/system/layers/base/org/postgres.zip \\\n && mv /tmp/standalone.xml /opt/wildfly/standalone/configuration/standalone.xml \\\n && /etc/init.d/postgresql start \\\n && mv /tmp/wildfly-kc-import-service.sh /etc/init.d/wildfly \\\n && service wildfly start \\\n && service wildfly stop \\\n && rm -rf /var/run/wildfly \\\n && mv /tmp/wildfly-kc-no-import-service.sh /etc/init.d/wildfly\nRUN mv /tmp/application.conf /opt/wildfly/standalone/configuration \\\n && mv /tmp/t1g-ear.ear /opt/wildfly/standalone/deployments\nRUN /etc/init.d/postgresql start \\\n && wget https://github.com/Kong/kong/releases/download/$KONG_VERSION/kong-$KONG_VERSION.trusty_all.deb \\\n && sudo dpkg -i kong-$KONG_VERSION.trusty_all.deb \\\n && mv /tmp/kong.conf /etc/kong/kong.conf \\\n && luarocks install kong-plugin-jwt-up \\\n && mv /tmp/fixtures.lua /usr/local/share/lua/5.1/kong/plugins/jwt-up \\\n && mv /tmp/key-auth-handler.lua /usr/local/share/lua/5.1/kong/plugins/key-auth/handler.lua \\\n && kong start --vv\n#   Install Marketplace + overwrite bower.json to correct Keycloak version\nRUN wget https://github.com/Trust1Team/api-market/archive/$MKT_VERSION_TAG.zip \\\n && unzip /tmp/$MKT_VERSION_TAG.zip -d /opt/ \\\n && mv /opt/api-market-$MKT_VERSION_TAG /opt/api-market \\\n && mv /tmp/bower-mkt.json /opt/api-market/bower.json \\\n && cp /tmp/keycloak.json /opt/api-market/config \\\n && mv /tmp/config-mkt.yml /opt/api-market/config/config.yml \\\n && rm -rf /tmp/$MKT_VERSION_TAG.zip \\\n && cd /opt/api-market \\\n && npm run deploy\n#   Install Publisher  + overwrite bower.json to correct Keycloak version\nRUN wget https://github.com/Trust1Team/api-publisher/archive/$PUB_VERSION_TAG.zip \\\n && unzip /tmp/$PUB_VERSION_TAG.zip -d /opt/ \\\n && mv /opt/api-publisher-$PUB_VERSION_TAG /opt/api-publisher \\\n && mv /tmp/bower-pub.json /opt/api-publisher/bower.json \\\n && cp /tmp/keycloak.json /opt/api-publisher/config \\\n && mv /tmp/config-pub.yml /opt/api-publisher/config/config.yml \\\n && rm -rf /tmp/$PUB_VERSION_TAG.zip \\\n && cd /opt/api-publisher \\\n && npm run deploy\n#  Cleanup\nRUN rm -rf /opt/keycloak-overlay-$KEYCLOAK_VERSION.zip \\\n && rm -rf /tmp/hsperf* \\\n && rm -rf /tmp/kong-$KONG_VERSION.trusty_all.deb \\\n && rm -rf /tmp/npm* \\\n && rm -rf /tmp/phantomjs \\\n && rm -rf /tmp/*.sql \\\n && rm -rf /tmp/wildfly* \\\n && rm -rf /tmp/v8-* \\\n && rm -rf /opt/wildfly/bin/kc-db-export.json\nRUN [\"chmod\", \"+x\", \"/tmp/start.sh\"]\nEXPOSE 5432/tcp 28080/tcp 28443/tcp 29990/tcp 29993/tcp 3000/tcp 3003/tcp 8000/tcp 8001/tcp\nCMD /tmp/start.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nENV LC_ALL=\"C\"\nENV PG_VERSION=\"9.6\"\nENV KEYCLOAK_VERSION=\"3.4.3.Final\"\nENV KONG_VERSION=\"0.10.1\"\nENV MKT_VERSION_TAG=\"acc\"\nENV PUB_VERSION_TAG=\"acc\"\nUSER root\nWORKDIR /tmp\nADD db-creation.sql /tmp\nADD t1g-inserts.sql /tmp\nADD t1g-schema.sql /tmp\nADD postgres.zip /tmp\nADD standalone.xml /tmp\nADD kong.conf /tmp\nADD start.sh /tmp\nADD application.conf /tmp\nADD wildfly_install.sh /tmp\nADD t1g-ear.ear /tmp\nADD kc-db-export.json /tmp\nADD wildfly-kc-import-service.sh /tmp\nADD wildfly-kc-no-import-service.sh /tmp\nADD key-auth-handler.lua /tmp\nADD fixtures.lua /tmp\nADD bower-mkt.json /tmp\nADD bower-pub.json /tmp\nADD config-mkt.yml /tmp\nADD config-pub.yml /tmp\nADD keycloak.json /tmp\nRUN apt-get update -y\nRUN apt-get -y upgrade\nRUN ln -fs /usr/share/zoneinfo/Europe/Brussels /etc/localtime \\\n && dpkg-reconfigure -f noninteractive tzdata\nRUN apt-get install build-essential software-properties-common nano curl git unzip wget sudo netcat openssl libpcre3 dnsmasq procps perl -y\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" | sudo tee -a /etc/apt/sources.list.d/pgdg.list\nRUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -\nRUN curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections\nRUN echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\nRUN apt-get install --no-install-recommends nodejs oracle-java8-installer postgresql-$PG_VERSION postgresql-client-$PG_VERSION postgresql-contrib-$PG_VERSION -y -q\nRUN npm install pm2 -g\n#  Configure PostgreSQL\nRUN echo \"host all all 0.0.0.0/0 md5\" >> /etc/postgresql/$PG_VERSION/main/pg_hba.conf\nRUN echo \"host all all ::0/0 md5\" >> /etc/postgresql/$PG_VERSION/main/pg_hba.conf\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/$PG_VERSION/main/postgresql.conf\nUSER postgres\nRUN /etc/init.d/postgresql start \\\n && psql -f db-creation.sql \\\n && psql t1gengine -f t1g-schema.sql \\\n && psql t1gengine -f t1g-inserts.sql\nUSER root\n#  Install Wildfly & Keycloak overlay\nRUN chmod u+x /tmp/wildfly_install.sh \\\n && /tmp/wildfly_install.sh \\\n && service wildfly stop \\\n && rm -rf /var/run/wildfly\nRUN wget https://downloads.jboss.org/keycloak/$KEYCLOAK_VERSION/keycloak-overlay-$KEYCLOAK_VERSION.zip \\\n && mv /tmp/keycloak-overlay-$KEYCLOAK_VERSION.zip /opt \\\n && unzip -o /opt/keycloak-overlay-$KEYCLOAK_VERSION.zip -d /opt/wildfly\nRUN /opt/wildfly/bin/jboss-cli.sh --file=/opt/wildfly/bin/keycloak-install.cli\nRUN mv /tmp/postgres.zip /opt/wildfly/modules/system/layers/base/org \\\n && unzip /opt/wildfly/modules/system/layers/base/org/postgres.zip -d /opt/wildfly/modules/system/layers/base/org \\\n && rm /opt/wildfly/modules/system/layers/base/org/postgres.zip \\\n && mv /tmp/standalone.xml /opt/wildfly/standalone/configuration/standalone.xml \\\n && /etc/init.d/postgresql start \\\n && mv /tmp/wildfly-kc-import-service.sh /etc/init.d/wildfly \\\n && service wildfly start \\\n && service wildfly stop \\\n && rm -rf /var/run/wildfly \\\n && mv /tmp/wildfly-kc-no-import-service.sh /etc/init.d/wildfly\nRUN mv /tmp/application.conf /opt/wildfly/standalone/configuration \\\n && mv /tmp/t1g-ear.ear /opt/wildfly/standalone/deployments\nRUN /etc/init.d/postgresql start \\\n && wget https://github.com/Kong/kong/releases/download/$KONG_VERSION/kong-$KONG_VERSION.trusty_all.deb \\\n && sudo dpkg -i kong-$KONG_VERSION.trusty_all.deb \\\n && mv /tmp/kong.conf /etc/kong/kong.conf \\\n && luarocks install kong-plugin-jwt-up \\\n && mv /tmp/fixtures.lua /usr/local/share/lua/5.1/kong/plugins/jwt-up \\\n && mv /tmp/key-auth-handler.lua /usr/local/share/lua/5.1/kong/plugins/key-auth/handler.lua \\\n && kong start --vv\n#  Install Marketplace + overwrite bower.json to correct Keycloak version\nRUN wget https://github.com/Trust1Team/api-market/archive/$MKT_VERSION_TAG.zip \\\n && unzip /tmp/$MKT_VERSION_TAG.zip -d /opt/ \\\n && mv /opt/api-market-$MKT_VERSION_TAG /opt/api-market \\\n && mv /tmp/bower-mkt.json /opt/api-market/bower.json \\\n && cp /tmp/keycloak.json /opt/api-market/config \\\n && mv /tmp/config-mkt.yml /opt/api-market/config/config.yml \\\n && rm -rf /tmp/$MKT_VERSION_TAG.zip \\\n && cd /opt/api-market \\\n && npm run deploy\n#  Install Publisher  + overwrite bower.json to correct Keycloak version\nRUN wget https://github.com/Trust1Team/api-publisher/archive/$PUB_VERSION_TAG.zip \\\n && unzip /tmp/$PUB_VERSION_TAG.zip -d /opt/ \\\n && mv /opt/api-publisher-$PUB_VERSION_TAG /opt/api-publisher \\\n && mv /tmp/bower-pub.json /opt/api-publisher/bower.json \\\n && cp /tmp/keycloak.json /opt/api-publisher/config \\\n && mv /tmp/config-pub.yml /opt/api-publisher/config/config.yml \\\n && rm -rf /tmp/$PUB_VERSION_TAG.zip \\\n && cd /opt/api-publisher \\\n && npm run deploy\n# Cleanup\nRUN rm -rf /opt/keycloak-overlay-$KEYCLOAK_VERSION.zip \\\n && rm -rf /tmp/hsperf* \\\n && rm -rf /tmp/kong-$KONG_VERSION.trusty_all.deb \\\n && rm -rf /tmp/npm* \\\n && rm -rf /tmp/phantomjs \\\n && rm -rf /tmp/*.sql \\\n && rm -rf /tmp/wildfly* \\\n && rm -rf /tmp/v8-* \\\n && rm -rf /opt/wildfly/bin/kc-db-export.json\nRUN [\"chmod\", \"+x\", \"/tmp/start.sh\"]\nEXPOSE 5432/tcp 28080/tcp 28443/tcp 29990/tcp 29993/tcp 3000/tcp 3003/tcp 8000/tcp 8001/tcp\nCMD /tmp/start.sh\n","injectedSmells":[],"originalDockerfileHash":"1b9407bd70cfe681dd6999903780ff34","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nENV LC_ALL=\"C\"\nENV PG_VERSION=\"9.6\"\nENV KEYCLOAK_VERSION=\"3.4.3.Final\"\nENV KONG_VERSION=\"0.10.1\"\nENV MKT_VERSION_TAG=\"acc\"\nENV PUB_VERSION_TAG=\"acc\"\nUSER root\nWORKDIR /tmp\nADD db-creation.sql /tmp\nADD t1g-inserts.sql /tmp\nADD t1g-schema.sql /tmp\nADD postgres.zip /tmp\nADD standalone.xml /tmp\nADD kong.conf /tmp\nADD start.sh /tmp\nADD application.conf /tmp\nADD wildfly_install.sh /tmp\nADD t1g-ear.ear /tmp\nADD kc-db-export.json /tmp\nADD wildfly-kc-import-service.sh /tmp\nADD wildfly-kc-no-import-service.sh /tmp\nADD key-auth-handler.lua /tmp\nADD fixtures.lua /tmp\nADD bower-mkt.json /tmp\nADD bower-pub.json /tmp\nADD config-mkt.yml /tmp\nADD config-pub.yml /tmp\nADD keycloak.json /tmp\nRUN apt-get update -y\nRUN apt-get -y upgrade\nRUN ln -fs /usr/share/zoneinfo/Europe/Brussels /etc/localtime \\\n && dpkg-reconfigure -f noninteractive tzdata\nRUN apt-get install build-essential software-properties-common nano curl git unzip wget sudo netcat openssl libpcre3 dnsmasq procps perl -y\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" | sudo tee -a /etc/apt/sources.list.d/pgdg.list\nRUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -\nRUN curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections\nRUN echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\nRUN apt-get install --no-install-recommends nodejs oracle-java8-installer postgresql-$PG_VERSION postgresql-client-$PG_VERSION postgresql-contrib-$PG_VERSION -y -q\nRUN npm install pm2 -g\n#   Configure PostgreSQL\nRUN echo \"host all all 0.0.0.0/0 md5\" >> /etc/postgresql/$PG_VERSION/main/pg_hba.conf\nRUN echo \"host all all ::0/0 md5\" >> /etc/postgresql/$PG_VERSION/main/pg_hba.conf\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/$PG_VERSION/main/postgresql.conf\nUSER postgres\nRUN /etc/init.d/postgresql start \\\n && psql -f db-creation.sql \\\n && psql t1gengine -f t1g-schema.sql \\\n && psql t1gengine -f t1g-inserts.sql\nUSER root\n#   Install Wildfly & Keycloak overlay\nRUN chmod u+x /tmp/wildfly_install.sh \\\n && /tmp/wildfly_install.sh \\\n && service wildfly stop \\\n && rm -rf /var/run/wildfly\nRUN wget https://downloads.jboss.org/keycloak/$KEYCLOAK_VERSION/keycloak-overlay-$KEYCLOAK_VERSION.zip \\\n && mv /tmp/keycloak-overlay-$KEYCLOAK_VERSION.zip /opt \\\n && unzip -o /opt/keycloak-overlay-$KEYCLOAK_VERSION.zip -d /opt/wildfly\nRUN /opt/wildfly/bin/jboss-cli.sh --file=/opt/wildfly/bin/keycloak-install.cli\nRUN mv /tmp/postgres.zip /opt/wildfly/modules/system/layers/base/org \\\n && unzip /opt/wildfly/modules/system/layers/base/org/postgres.zip -d /opt/wildfly/modules/system/layers/base/org \\\n && rm /opt/wildfly/modules/system/layers/base/org/postgres.zip \\\n && mv /tmp/standalone.xml /opt/wildfly/standalone/configuration/standalone.xml \\\n && /etc/init.d/postgresql start \\\n && mv /tmp/wildfly-kc-import-service.sh /etc/init.d/wildfly \\\n && service wildfly start \\\n && service wildfly stop \\\n && rm -rf /var/run/wildfly \\\n && mv /tmp/wildfly-kc-no-import-service.sh /etc/init.d/wildfly\nRUN mv /tmp/application.conf /opt/wildfly/standalone/configuration \\\n && mv /tmp/t1g-ear.ear /opt/wildfly/standalone/deployments\nRUN /etc/init.d/postgresql start \\\n && wget https://github.com/Kong/kong/releases/download/$KONG_VERSION/kong-$KONG_VERSION.trusty_all.deb \\\n && sudo dpkg -i kong-$KONG_VERSION.trusty_all.deb \\\n && mv /tmp/kong.conf /etc/kong/kong.conf \\\n && luarocks install kong-plugin-jwt-up \\\n && mv /tmp/fixtures.lua /usr/local/share/lua/5.1/kong/plugins/jwt-up \\\n && mv /tmp/key-auth-handler.lua /usr/local/share/lua/5.1/kong/plugins/key-auth/handler.lua \\\n && kong start --vv\n#   Install Marketplace + overwrite bower.json to correct Keycloak version\nRUN wget https://github.com/Trust1Team/api-market/archive/$MKT_VERSION_TAG.zip \\\n && unzip /tmp/$MKT_VERSION_TAG.zip -d /opt/ \\\n && mv /opt/api-market-$MKT_VERSION_TAG /opt/api-market \\\n && mv /tmp/bower-mkt.json /opt/api-market/bower.json \\\n && cp /tmp/keycloak.json /opt/api-market/config \\\n && mv /tmp/config-mkt.yml /opt/api-market/config/config.yml \\\n && rm -rf /tmp/$MKT_VERSION_TAG.zip \\\n && cd /opt/api-market \\\n && npm run deploy\n#   Install Publisher  + overwrite bower.json to correct Keycloak version\nRUN wget https://github.com/Trust1Team/api-publisher/archive/$PUB_VERSION_TAG.zip \\\n && unzip /tmp/$PUB_VERSION_TAG.zip -d /opt/ \\\n && mv /opt/api-publisher-$PUB_VERSION_TAG /opt/api-publisher \\\n && mv /tmp/bower-pub.json /opt/api-publisher/bower.json \\\n && cp /tmp/keycloak.json /opt/api-publisher/config \\\n && mv /tmp/config-pub.yml /opt/api-publisher/config/config.yml \\\n && rm -rf /tmp/$PUB_VERSION_TAG.zip \\\n && cd /opt/api-publisher \\\n && npm run deploy\n#  Cleanup\nRUN rm -rf /opt/keycloak-overlay-$KEYCLOAK_VERSION.zip \\\n && rm -rf /tmp/hsperf* \\\n && rm -rf /tmp/kong-$KONG_VERSION.trusty_all.deb \\\n && rm -rf /tmp/npm* \\\n && rm -rf /tmp/phantomjs \\\n && rm -rf /tmp/*.sql \\\n && rm -rf /tmp/wildfly* \\\n && rm -rf /tmp/v8-* \\\n && rm -rf /opt/wildfly/bin/kc-db-export.json\nRUN [\"chmod\", \"+x\", \"/tmp/start.sh\"]\nEXPOSE 5432/tcp 28080/tcp 28443/tcp 29990/tcp 29993/tcp 3000/tcp 3003/tcp 8000/tcp 8001/tcp\nCMD /tmp/start.sh\n","originalDockerfileUglifiedHash":"5253137a578ba029aaca14a5a3088d80","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/34c1ba469588e22d2a5a4f329779c8b18682019e.dockerfile"}