{"seed":4239435501,"processedDockerfileHash":"559efea418a50cbcd7787a6a84a17e6e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM golang:1.12\nRUN apt-get update \\\n && apt-get install --no-install-recommends apparmor autoconf automake bison build-essential curl e2fslibs-dev gawk gettext go-md2man iptables pkg-config libaio-dev libcap-dev libfuse-dev libnet-dev libnl-3-dev libostree-dev libprotobuf-dev libprotobuf-c0-dev libseccomp2 libseccomp-dev libtool libudev-dev protobuf-c-compiler protobuf-compiler libglib2.0-dev libapparmor-dev btrfs-tools libdevmapper1.02.1 libdevmapper-dev libgpgme11-dev liblzma-dev netcat socat lsof xz-utils unzip python3-yaml -y \\\n && apt-get clean\n#   Install runc\nENV RUNC_COMMIT=\"029124da7af7360afa781a0234d1b083550f797c\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/opencontainers/runc.git \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && cd \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && git fetch origin --tags \\\n && git checkout -q \"$RUNC_COMMIT\" \\\n && make static BUILDTAGS=\"seccomp selinux\" \\\n && cp runc /usr/bin/runc \\\n && rm -rf \"$GOPATH\"\n#   Install conmon\nENV CONMON_COMMIT=\"3e47d8dd45cdd973dbe256292d5e9c0bff195e56\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/containers/conmon.git \"$GOPATH/src/github.com/containers/conmon.git\" \\\n && cd \"$GOPATH/src/github.com/containers/conmon.git\" \\\n && git fetch origin --tags \\\n && git checkout -q \"$CONMON_COMMIT\" \\\n && make \\\n && install -D -m 755 bin/conmon /usr/libexec/podman/conmon \\\n && rm -rf \"$GOPATH\"\n#   Install CNI plugins\nENV CNI_COMMIT=\"7480240de9749f9a0a5c8614b17f1f03e0c06ab9\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/containernetworking/plugins.git \"$GOPATH/src/github.com/containernetworking/plugins\" \\\n && cd \"$GOPATH/src/github.com/containernetworking/plugins\" \\\n && git checkout -q \"$CNI_COMMIT\" \\\n && ./build.sh \\\n && mkdir -p /usr/libexec/cni \\\n && cp bin/* /usr/libexec/cni \\\n && rm -rf \"$GOPATH\"\n#   Install ginkgo\nRUN set -x \\\n && export GOPATH=/go \\\n && go get -u github.com/onsi/ginkgo/ginkgo \\\n && install -D -m 755 \"$GOPATH\"/bin/ginkgo /usr/bin/\n#   Install gomega\nRUN set -x \\\n && export GOPATH=/go \\\n && go get github.com/onsi/gomega/...\n#   Install latest stable criu version\nRUN set -x \\\n && cd /tmp \\\n && git clone https://github.com/checkpoint-restore/criu.git \\\n && cd criu \\\n && make \\\n && install -D -m 755 criu/criu /usr/sbin/ \\\n && rm -rf /tmp/criu\n#   Install cni config\n#  RUN make install.cni\nRUN mkdir -p /etc/cni/net.d/\nCOPY cni/87-podman-bridge.conflist /etc/cni/net.d/87-podman-bridge.conflist\n#   Make sure we have some policy for pulling images\nRUN mkdir -p /etc/containers \\\n && curl https://raw.githubusercontent.com/projectatomic/registries/master/registries.fedora -o /etc/containers/registries.conf\nCOPY test/policy.json /etc/containers/policy.json\nCOPY test/redhat_sigstore.yaml /etc/containers/registries.d/registry.access.redhat.com.yaml\nCOPY . /go/src/github.com/containers/libpod\nRUN set -x \\\n && cd /go/src/github.com/containers/libpod\nWORKDIR /go/src/github.com/containers/libpod\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM golang:1.12\nRUN apt-get update \\\n && apt-get install --no-install-recommends apparmor autoconf automake bison build-essential curl e2fslibs-dev gawk gettext go-md2man iptables pkg-config libaio-dev libcap-dev libfuse-dev libnet-dev libnl-3-dev libostree-dev libprotobuf-dev libprotobuf-c0-dev libseccomp2 libseccomp-dev libtool libudev-dev protobuf-c-compiler protobuf-compiler libglib2.0-dev libapparmor-dev btrfs-tools libdevmapper1.02.1 libdevmapper-dev libgpgme11-dev liblzma-dev netcat socat lsof xz-utils unzip python3-yaml -y \\\n && apt-get clean\n#  Install runc\nENV RUNC_COMMIT=\"029124da7af7360afa781a0234d1b083550f797c\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/opencontainers/runc.git \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && cd \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && git fetch origin --tags \\\n && git checkout -q \"$RUNC_COMMIT\" \\\n && make static BUILDTAGS=\"seccomp selinux\" \\\n && cp runc /usr/bin/runc \\\n && rm -rf \"$GOPATH\"\n#  Install conmon\nENV CONMON_COMMIT=\"3e47d8dd45cdd973dbe256292d5e9c0bff195e56\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/containers/conmon.git \"$GOPATH/src/github.com/containers/conmon.git\" \\\n && cd \"$GOPATH/src/github.com/containers/conmon.git\" \\\n && git fetch origin --tags \\\n && git checkout -q \"$CONMON_COMMIT\" \\\n && make \\\n && install -D -m 755 bin/conmon /usr/libexec/podman/conmon \\\n && rm -rf \"$GOPATH\"\n#  Install CNI plugins\nENV CNI_COMMIT=\"7480240de9749f9a0a5c8614b17f1f03e0c06ab9\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/containernetworking/plugins.git \"$GOPATH/src/github.com/containernetworking/plugins\" \\\n && cd \"$GOPATH/src/github.com/containernetworking/plugins\" \\\n && git checkout -q \"$CNI_COMMIT\" \\\n && ./build.sh \\\n && mkdir -p /usr/libexec/cni \\\n && cp bin/* /usr/libexec/cni \\\n && rm -rf \"$GOPATH\"\n#  Install ginkgo\nRUN set -x \\\n && export GOPATH=/go \\\n && go get -u github.com/onsi/ginkgo/ginkgo \\\n && install -D -m 755 \"$GOPATH\"/bin/ginkgo /usr/bin/\n#  Install gomega\nRUN set -x \\\n && export GOPATH=/go \\\n && go get github.com/onsi/gomega/...\n#  Install latest stable criu version\nRUN set -x \\\n && cd /tmp \\\n && git clone https://github.com/checkpoint-restore/criu.git \\\n && cd criu \\\n && make \\\n && install -D -m 755 criu/criu /usr/sbin/ \\\n && rm -rf /tmp/criu\n#  Install cni config\n# RUN make install.cni\nRUN mkdir -p /etc/cni/net.d/\nCOPY cni/87-podman-bridge.conflist /etc/cni/net.d/87-podman-bridge.conflist\n#  Make sure we have some policy for pulling images\nRUN mkdir -p /etc/containers \\\n && curl https://raw.githubusercontent.com/projectatomic/registries/master/registries.fedora -o /etc/containers/registries.conf\nCOPY test/policy.json /etc/containers/policy.json\nCOPY test/redhat_sigstore.yaml /etc/containers/registries.d/registry.access.redhat.com.yaml\nADD . /go/src/github.com/containers/libpod\nRUN set -x \\\n && cd /go/src/github.com/containers/libpod\nWORKDIR /go/src/github.com/containers/libpod\n","injectedSmells":[],"originalDockerfileHash":"3114b4217e95f0b37344eefafcb0a6ed","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM golang:1.12\nRUN apt-get update \\\n && apt-get install --no-install-recommends apparmor autoconf automake bison build-essential curl e2fslibs-dev gawk gettext go-md2man iptables pkg-config libaio-dev libcap-dev libfuse-dev libnet-dev libnl-3-dev libostree-dev libprotobuf-dev libprotobuf-c0-dev libseccomp2 libseccomp-dev libtool libudev-dev protobuf-c-compiler protobuf-compiler libglib2.0-dev libapparmor-dev btrfs-tools libdevmapper1.02.1 libdevmapper-dev libgpgme11-dev liblzma-dev netcat socat lsof xz-utils unzip python3-yaml -y \\\n && apt-get clean\n#   Install runc\nENV RUNC_COMMIT=\"029124da7af7360afa781a0234d1b083550f797c\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/opencontainers/runc.git \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && cd \"$GOPATH/src/github.com/opencontainers/runc\" \\\n && git fetch origin --tags \\\n && git checkout -q \"$RUNC_COMMIT\" \\\n && make static BUILDTAGS=\"seccomp selinux\" \\\n && cp runc /usr/bin/runc \\\n && rm -rf \"$GOPATH\"\n#   Install conmon\nENV CONMON_COMMIT=\"3e47d8dd45cdd973dbe256292d5e9c0bff195e56\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/containers/conmon.git \"$GOPATH/src/github.com/containers/conmon.git\" \\\n && cd \"$GOPATH/src/github.com/containers/conmon.git\" \\\n && git fetch origin --tags \\\n && git checkout -q \"$CONMON_COMMIT\" \\\n && make \\\n && install -D -m 755 bin/conmon /usr/libexec/podman/conmon \\\n && rm -rf \"$GOPATH\"\n#   Install CNI plugins\nENV CNI_COMMIT=\"7480240de9749f9a0a5c8614b17f1f03e0c06ab9\"\nRUN set -x \\\n && export GOPATH=\"$( mktemp -d ;)\" \\\n && git clone https://github.com/containernetworking/plugins.git \"$GOPATH/src/github.com/containernetworking/plugins\" \\\n && cd \"$GOPATH/src/github.com/containernetworking/plugins\" \\\n && git checkout -q \"$CNI_COMMIT\" \\\n && ./build.sh \\\n && mkdir -p /usr/libexec/cni \\\n && cp bin/* /usr/libexec/cni \\\n && rm -rf \"$GOPATH\"\n#   Install ginkgo\nRUN set -x \\\n && export GOPATH=/go \\\n && go get -u github.com/onsi/ginkgo/ginkgo \\\n && install -D -m 755 \"$GOPATH\"/bin/ginkgo /usr/bin/\n#   Install gomega\nRUN set -x \\\n && export GOPATH=/go \\\n && go get github.com/onsi/gomega/...\n#   Install latest stable criu version\nRUN set -x \\\n && cd /tmp \\\n && git clone https://github.com/checkpoint-restore/criu.git \\\n && cd criu \\\n && make \\\n && install -D -m 755 criu/criu /usr/sbin/ \\\n && rm -rf /tmp/criu\n#   Install cni config\n#  RUN make install.cni\nRUN mkdir -p /etc/cni/net.d/\nCOPY cni/87-podman-bridge.conflist /etc/cni/net.d/87-podman-bridge.conflist\n#   Make sure we have some policy for pulling images\nRUN mkdir -p /etc/containers \\\n && curl https://raw.githubusercontent.com/projectatomic/registries/master/registries.fedora -o /etc/containers/registries.conf\nCOPY test/policy.json /etc/containers/policy.json\nCOPY test/redhat_sigstore.yaml /etc/containers/registries.d/registry.access.redhat.com.yaml\nADD . /go/src/github.com/containers/libpod\nRUN set -x \\\n && cd /go/src/github.com/containers/libpod\nWORKDIR /go/src/github.com/containers/libpod\n","originalDockerfileUglifiedHash":"9676d5253f48ababcde30d2358539983","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/214fbeb344e9894822bf7fa1a782bb4e1c289c31.dockerfile"}