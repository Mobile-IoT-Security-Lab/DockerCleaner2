{"seed":3802022659,"processedDockerfileHash":"7e69b9ab7854753468c89b327d66a505","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM behance/docker-nginx:8.5-alpine\nMAINTAINER Bryan Latten <latten@adobe.com>\n#   Set TERM to suppress warning messages.\nENV CONF_PHPFPM=\"/etc/php7/php-fpm.conf\" \\\n    CONF_PHPMODS=\"/etc/php7/conf.d\" \\\n    CONF_FPMPOOL=\"/etc/php7/php-fpm.d/www.conf\" \\\n    CONF_FPMOVERRIDES=\"/etc/php/7.0/fpm/conf.d/overrides.user.ini\" \\\n    APP_ROOT=\"/app\" \\\n    SERVER_WORKER_CONNECTIONS=\"3072\" \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=\"128k\" \\\n    SERVER_CLIENT_HEADER_BUFFER_SIZE=\"1k\" \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=\"128k\" \\\n    SERVER_LARGE_CLIENT_HEADER_BUFFERS=\"4 256k\" \\\n    PHP_FPM_MAX_CHILDREN=\"4096\" \\\n    PHP_FPM_START_SERVERS=\"20\" \\\n    PHP_FPM_MAX_REQUESTS=\"1024\" \\\n    PHP_FPM_MIN_SPARE_SERVERS=\"5\" \\\n    PHP_FPM_MAX_SPARE_SERVERS=\"128\" \\\n    PHP_FPM_MEMORY_LIMIT=\"256M\" \\\n    PHP_FPM_MAX_EXECUTION_TIME=\"60\" \\\n    PHP_FPM_UPLOAD_MAX_FILESIZE=\"1M\" \\\n    PHP_OPCACHE_MEMORY_CONSUMPTION=\"128\" \\\n    PHP_OPCACHE_INTERNED_STRINGS_BUFFER=\"16\" \\\n    PHP_OPCACHE_MAX_WASTED_PERCENTAGE=\"5\" \\\n    CFG_APP_DEBUG=\"1\"\nRUN apk update \\\n && apk add git curl wget php7 php7-bcmath php7-bz2 php7-fpm php7-apcu php7-calendar php7-common php7-ctype php7-curl php7-dom php7-exif php7-ftp php7-gd php7-gettext php7-iconv php7-intl php7-json php7-mcrypt php7-mbstring php7-mysqli php7-mysqlnd php7-opcache php7-openssl php7-pdo_pgsql php7-pgsql php7-pcntl php7-pdo php7-pdo_mysql php7-phar php7-posix php7-session php7-simplexml php7-sockets php7-sysvmsg php7-sysvsem php7-sysvshm php7-shmop php7-tokenizer php7-xdebug php7-xml php7-xmlreader php7-xmlwriter php7-xsl php7-zip php7-zlib --no-cache \\\n && sed -i 's/zend_extension\\s\\?=/;zend_extension =/' $CONF_PHPMODS/xdebug.ini \\\n && sed -i 's/extension/;extension/' $CONF_PHPMODS/01_pdo_pgsql.ini \\\n && sed -i 's/extension/;extension/' $CONF_PHPMODS/00_pgsql.ini \\\n && /bin/bash -e /clean.sh\n#   Locate and install latest Alpine-compatible NewRelic, seed with variables to be replaced\n#   Requires PHP to already be installed\nRUN NEWRELIC_MUSL_PATH=$( curl -s https://download.newrelic.com/php_agent/release/ | grep 'linux-musl.tar.gz' | cut -d '\"' -f2 ;) \\\n && NEWRELIC_PATH=\"https://download.newrelic.com${NEWRELIC_MUSL_PATH}\" \\\n && curl -L ${NEWRELIC_PATH} -o ./root/newrelic-musl.tar.gz \\\n && cd /root \\\n && gzip -dc newrelic-musl.tar.gz | tar xf - \\\n && rm newrelic-musl.tar.gz \\\n && NEWRELIC_DIRECTORY=/root/$( basename $( find . -maxdepth 1 -type d -name newrelic* ;) ;) \\\n && cd $NEWRELIC_DIRECTORY \\\n && echo \"\\n\" | ./newrelic-install install \\\n && chown root:root $NEWRELIC_DIRECTORY/agent/x64/newrelic-20160303.so \\\n && mv $NEWRELIC_DIRECTORY/agent/x64/newrelic-20160303.so /usr/lib/php7/modules/newrelic.so \\\n && rm -rf $NEWRELIC_DIRECTORY/agent/x64 \\\n && chown -R $NOT_ROOT_USER:$NOT_ROOT_USER * \\\n && /bin/bash -e /clean.sh\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\nRUN apk update \\\n && apk add yaml-dev zlib-dev libmemcached-dev cyrus-sasl-dev --no-cache \\\n && apk add autoconf file g++ gcc libc-dev make pkgconf re2c php7-dev php7-pear --no-cache --virtual .phpize_deps \\\n && sed -i 's/^exec $PHP -C -n/exec $PHP -C/g' $( which pecl ;) \\\n && pecl install igbinary-3.0.1 \\\n && echo \"extension=igbinary.so\" > $CONF_PHPMODS/igbinary.ini \\\n && pecl install yaml-2.0.4 \\\n && echo \";extension=yaml.so\" > $CONF_PHPMODS/yaml.ini \\\n && pecl install redis-4.2.0 \\\n && echo \";extension=redis.so\" > $CONF_PHPMODS/redis.ini \\\n && pecl install msgpack-2.0.3 \\\n && echo \"extension=msgpack.so\" > $CONF_PHPMODS/msgpack.ini \\\n && pecl install memcached-3.1.3 \\\n && echo \"extension=memcached.so\" > $CONF_PHPMODS/memcached.ini \\\n && rm -rf /usr/share/php7 \\\n && apk del .phpize_deps \\\n && /bin/bash -e /clean.sh\n#   Overlay the root filesystem from this repo\nCOPY ./container/root /\n#   - Make additional hacks to migrate files from Ubuntu to Alpine folder structure\nRUN cp /etc/php/7.0/mods-available/* $CONF_PHPMODS \\\n && rm $CONF_PHPMODS/00_opcache.ini \\\n && touch /var/run/lock \\\n && chown $NOT_ROOT_USER:$NOT_ROOT_USER /var/log/php7 \\\n && ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm \\\n && /bin/bash -e prep-php.sh\nRUN goss -g /tests/php-fpm/7.2-alpine.goss.yaml validate \\\n && /aufs_hack.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM behance/docker-nginx:8.5-alpine\nMAINTAINER Bryan Latten <latten@adobe.com>\n#  Set TERM to suppress warning messages.\nENV CONF_PHPFPM=\"/etc/php7/php-fpm.conf\" \\\n    CONF_PHPMODS=\"/etc/php7/conf.d\" \\\n    CONF_FPMPOOL=\"/etc/php7/php-fpm.d/www.conf\" \\\n    CONF_FPMOVERRIDES=\"/etc/php/7.0/fpm/conf.d/overrides.user.ini\" \\\n    APP_ROOT=\"/app\" \\\n    SERVER_WORKER_CONNECTIONS=\"3072\" \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=\"128k\" \\\n    SERVER_CLIENT_HEADER_BUFFER_SIZE=\"1k\" \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=\"128k\" \\\n    SERVER_LARGE_CLIENT_HEADER_BUFFERS=\"4 256k\" \\\n    PHP_FPM_MAX_CHILDREN=\"4096\" \\\n    PHP_FPM_START_SERVERS=\"20\" \\\n    PHP_FPM_MAX_REQUESTS=\"1024\" \\\n    PHP_FPM_MIN_SPARE_SERVERS=\"5\" \\\n    PHP_FPM_MAX_SPARE_SERVERS=\"128\" \\\n    PHP_FPM_MEMORY_LIMIT=\"256M\" \\\n    PHP_FPM_MAX_EXECUTION_TIME=\"60\" \\\n    PHP_FPM_UPLOAD_MAX_FILESIZE=\"1M\" \\\n    PHP_OPCACHE_MEMORY_CONSUMPTION=\"128\" \\\n    PHP_OPCACHE_INTERNED_STRINGS_BUFFER=\"16\" \\\n    PHP_OPCACHE_MAX_WASTED_PERCENTAGE=\"5\" \\\n    CFG_APP_DEBUG=\"1\"\nRUN apk update \\\n && apk add --no-cache git curl wget php7 php7-bcmath php7-bz2 php7-fpm php7-apcu php7-calendar php7-common php7-ctype php7-curl php7-dom php7-exif php7-ftp php7-gd php7-gettext php7-iconv php7-intl php7-json php7-mcrypt php7-mbstring php7-mysqli php7-mysqlnd php7-opcache php7-openssl php7-pdo_pgsql php7-pgsql php7-pcntl php7-pdo php7-pdo_mysql php7-phar php7-posix php7-session php7-simplexml php7-sockets php7-sysvmsg php7-sysvsem php7-sysvshm php7-shmop php7-tokenizer php7-xdebug php7-xml php7-xmlreader php7-xmlwriter php7-xsl php7-zip php7-zlib \\\n && sed -i 's/zend_extension\\s\\?=/;zend_extension =/' $CONF_PHPMODS/xdebug.ini \\\n && sed -i 's/extension/;extension/' $CONF_PHPMODS/01_pdo_pgsql.ini \\\n && sed -i 's/extension/;extension/' $CONF_PHPMODS/00_pgsql.ini \\\n && /bin/bash -e /clean.sh\n#  Locate and install latest Alpine-compatible NewRelic, seed with variables to be replaced\n#  Requires PHP to already be installed\nRUN NEWRELIC_MUSL_PATH=$( curl -s https://download.newrelic.com/php_agent/release/ | grep 'linux-musl.tar.gz' | cut -d '\"' -f2 ;) \\\n && NEWRELIC_PATH=\"https://download.newrelic.com${NEWRELIC_MUSL_PATH}\" \\\n && curl -L ${NEWRELIC_PATH} -o ./root/newrelic-musl.tar.gz \\\n && cd /root \\\n && gzip -dc newrelic-musl.tar.gz | tar xf - \\\n && rm newrelic-musl.tar.gz \\\n && NEWRELIC_DIRECTORY=/root/$( basename $( find . -maxdepth 1 -type d -name newrelic* ;) ;) \\\n && cd $NEWRELIC_DIRECTORY \\\n && echo \"\\n\" | ./newrelic-install install \\\n && chown root:root $NEWRELIC_DIRECTORY/agent/x64/newrelic-20160303.so \\\n && mv $NEWRELIC_DIRECTORY/agent/x64/newrelic-20160303.so /usr/lib/php7/modules/newrelic.so \\\n && rm -rf $NEWRELIC_DIRECTORY/agent/x64 \\\n && chown -R $NOT_ROOT_USER:$NOT_ROOT_USER * \\\n && /bin/bash -e /clean.sh\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\nRUN apk update \\\n && apk add --no-cache yaml-dev zlib-dev libmemcached-dev cyrus-sasl-dev \\\n && apk add --no-cache --virtual .phpize_deps autoconf file g++ gcc libc-dev make pkgconf re2c php7-dev php7-pear \\\n && sed -i 's/^exec $PHP -C -n/exec $PHP -C/g' $( which pecl ;) \\\n && pecl install igbinary-3.0.1 \\\n && echo \"extension=igbinary.so\" > $CONF_PHPMODS/igbinary.ini \\\n && pecl install yaml-2.0.4 \\\n && echo \";extension=yaml.so\" > $CONF_PHPMODS/yaml.ini \\\n && pecl install redis-4.2.0 \\\n && echo \";extension=redis.so\" > $CONF_PHPMODS/redis.ini \\\n && pecl install msgpack-2.0.3 \\\n && echo \"extension=msgpack.so\" > $CONF_PHPMODS/msgpack.ini \\\n && pecl install memcached-3.1.3 \\\n && echo \"extension=memcached.so\" > $CONF_PHPMODS/memcached.ini \\\n && rm -rf /usr/share/php7 \\\n && apk del .phpize_deps \\\n && /bin/bash -e /clean.sh\n#  Overlay the root filesystem from this repo\nCOPY ./container/root /\n#  - Make additional hacks to migrate files from Ubuntu to Alpine folder structure\nRUN cp /etc/php/7.0/mods-available/* $CONF_PHPMODS \\\n && rm $CONF_PHPMODS/00_opcache.ini \\\n && touch /var/run/lock \\\n && chown $NOT_ROOT_USER:$NOT_ROOT_USER /var/log/php7 \\\n && ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm \\\n && /bin/bash -e prep-php.sh\nRUN goss -g /tests/php-fpm/7.2-alpine.goss.yaml validate \\\n && /aufs_hack.sh\n","injectedSmells":[],"originalDockerfileHash":"f651447fce100f67df1897d1e29e4303","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM behance/docker-nginx:8.5-alpine\nMAINTAINER Bryan Latten <latten@adobe.com>\n#   Set TERM to suppress warning messages.\nENV CONF_PHPFPM=\"/etc/php7/php-fpm.conf\" \\\n    CONF_PHPMODS=\"/etc/php7/conf.d\" \\\n    CONF_FPMPOOL=\"/etc/php7/php-fpm.d/www.conf\" \\\n    CONF_FPMOVERRIDES=\"/etc/php/7.0/fpm/conf.d/overrides.user.ini\" \\\n    APP_ROOT=\"/app\" \\\n    SERVER_WORKER_CONNECTIONS=\"3072\" \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=\"128k\" \\\n    SERVER_CLIENT_HEADER_BUFFER_SIZE=\"1k\" \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=\"128k\" \\\n    SERVER_LARGE_CLIENT_HEADER_BUFFERS=\"4 256k\" \\\n    PHP_FPM_MAX_CHILDREN=\"4096\" \\\n    PHP_FPM_START_SERVERS=\"20\" \\\n    PHP_FPM_MAX_REQUESTS=\"1024\" \\\n    PHP_FPM_MIN_SPARE_SERVERS=\"5\" \\\n    PHP_FPM_MAX_SPARE_SERVERS=\"128\" \\\n    PHP_FPM_MEMORY_LIMIT=\"256M\" \\\n    PHP_FPM_MAX_EXECUTION_TIME=\"60\" \\\n    PHP_FPM_UPLOAD_MAX_FILESIZE=\"1M\" \\\n    PHP_OPCACHE_MEMORY_CONSUMPTION=\"128\" \\\n    PHP_OPCACHE_INTERNED_STRINGS_BUFFER=\"16\" \\\n    PHP_OPCACHE_MAX_WASTED_PERCENTAGE=\"5\" \\\n    CFG_APP_DEBUG=\"1\"\nRUN apk update \\\n && apk add --no-cache git curl wget php7 php7-bcmath php7-bz2 php7-fpm php7-apcu php7-calendar php7-common php7-ctype php7-curl php7-dom php7-exif php7-ftp php7-gd php7-gettext php7-iconv php7-intl php7-json php7-mcrypt php7-mbstring php7-mysqli php7-mysqlnd php7-opcache php7-openssl php7-pdo_pgsql php7-pgsql php7-pcntl php7-pdo php7-pdo_mysql php7-phar php7-posix php7-session php7-simplexml php7-sockets php7-sysvmsg php7-sysvsem php7-sysvshm php7-shmop php7-tokenizer php7-xdebug php7-xml php7-xmlreader php7-xmlwriter php7-xsl php7-zip php7-zlib \\\n && sed -i 's/zend_extension\\s\\?=/;zend_extension =/' $CONF_PHPMODS/xdebug.ini \\\n && sed -i 's/extension/;extension/' $CONF_PHPMODS/01_pdo_pgsql.ini \\\n && sed -i 's/extension/;extension/' $CONF_PHPMODS/00_pgsql.ini \\\n && /bin/bash -e /clean.sh\n#   Locate and install latest Alpine-compatible NewRelic, seed with variables to be replaced\n#   Requires PHP to already be installed\nRUN NEWRELIC_MUSL_PATH=$( curl -s https://download.newrelic.com/php_agent/release/ | grep 'linux-musl.tar.gz' | cut -d '\"' -f2 ;) \\\n && NEWRELIC_PATH=\"https://download.newrelic.com${NEWRELIC_MUSL_PATH}\" \\\n && curl -L ${NEWRELIC_PATH} -o ./root/newrelic-musl.tar.gz \\\n && cd /root \\\n && gzip -dc newrelic-musl.tar.gz | tar xf - \\\n && rm newrelic-musl.tar.gz \\\n && NEWRELIC_DIRECTORY=/root/$( basename $( find . -maxdepth 1 -type d -name newrelic* ;) ;) \\\n && cd $NEWRELIC_DIRECTORY \\\n && echo \"\\n\" | ./newrelic-install install \\\n && chown root:root $NEWRELIC_DIRECTORY/agent/x64/newrelic-20160303.so \\\n && mv $NEWRELIC_DIRECTORY/agent/x64/newrelic-20160303.so /usr/lib/php7/modules/newrelic.so \\\n && rm -rf $NEWRELIC_DIRECTORY/agent/x64 \\\n && chown -R $NOT_ROOT_USER:$NOT_ROOT_USER * \\\n && /bin/bash -e /clean.sh\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\nRUN apk update \\\n && apk add --no-cache yaml-dev zlib-dev libmemcached-dev cyrus-sasl-dev \\\n && apk add --no-cache --virtual .phpize_deps autoconf file g++ gcc libc-dev make pkgconf re2c php7-dev php7-pear \\\n && sed -i 's/^exec $PHP -C -n/exec $PHP -C/g' $( which pecl ;) \\\n && pecl install igbinary-3.0.1 \\\n && echo \"extension=igbinary.so\" > $CONF_PHPMODS/igbinary.ini \\\n && pecl install yaml-2.0.4 \\\n && echo \";extension=yaml.so\" > $CONF_PHPMODS/yaml.ini \\\n && pecl install redis-4.2.0 \\\n && echo \";extension=redis.so\" > $CONF_PHPMODS/redis.ini \\\n && pecl install msgpack-2.0.3 \\\n && echo \"extension=msgpack.so\" > $CONF_PHPMODS/msgpack.ini \\\n && pecl install memcached-3.1.3 \\\n && echo \"extension=memcached.so\" > $CONF_PHPMODS/memcached.ini \\\n && rm -rf /usr/share/php7 \\\n && apk del .phpize_deps \\\n && /bin/bash -e /clean.sh\n#   Overlay the root filesystem from this repo\nCOPY ./container/root /\n#   - Make additional hacks to migrate files from Ubuntu to Alpine folder structure\nRUN cp /etc/php/7.0/mods-available/* $CONF_PHPMODS \\\n && rm $CONF_PHPMODS/00_opcache.ini \\\n && touch /var/run/lock \\\n && chown $NOT_ROOT_USER:$NOT_ROOT_USER /var/log/php7 \\\n && ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm \\\n && /bin/bash -e prep-php.sh\nRUN goss -g /tests/php-fpm/7.2-alpine.goss.yaml validate \\\n && /aufs_hack.sh\n","originalDockerfileUglifiedHash":"655206dd58ebcc5dc40783c24c2b2fb0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a588a189f34ef74ebe1caa4e6dd9212d3abbc11e.dockerfile"}