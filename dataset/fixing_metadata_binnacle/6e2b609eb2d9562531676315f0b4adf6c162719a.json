{"seed":4206290898,"processedDockerfileHash":"33d79513599846c8b3ffc5ee55a0a12f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER K-Lab Authors <service@kesci.com>\nUSER root\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nENV SHELL=\"/bin/bash\"\nENV NB_USER=\"kesci\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/$NB_USER\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Install prerequisites\nRUN apt-get update \\\n && apt-get -yqq dist-upgrade \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 cmake=3.5.1-1ubuntu3 bzip2=1.0.6-8ubuntu0.2 ca-certificates=20210119~16.04.1 iptables=1.6.0-2ubuntu3 locales=2.23-0ubuntu11.3 sudo=1.8.16-0ubuntu1.10 wget=1.17.1-1ubuntu1.5 strace=4.11-1ubuntu3 build-essential=12.1ubuntu2 emacs=46.1 git=1:2.7.4-0ubuntu1.10 inkscape=0.91-7ubuntu2 jed=1:0.99.19-4 libsm6=2:1.2.2-1 libxrender1=1:0.9.9-0ubuntu1 pandoc=1.16.0.2~dfsg-1 python-dev=2.7.12-1~16.04 texlive-fonts-extra=2015.20160320-1 texlive-fonts-recommended=2015.20160320-1ubuntu0.1 texlive-generic-recommended=2015.20160320-1ubuntu0.1 texlive-latex-base=2015.20160320-1ubuntu0.1 texlive-latex-extra=2015.20160320-1 unzip=6.0-20ubuntu1.1 vim=2:7.4.1689-3ubuntu1.5 -yqq \\\n && echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen \\\n && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER $CONDA_DIR \\\n && apt-get install --no-install-recommends libfontconfig1=2.11.94-0ubuntu1.1 libfreetype6-dev=2.6.1-0.1ubuntu2.5 libglib2.0-0=2.48.2-0ubuntu4.8 libsm6=2:1.2.2-1 libxext6=2:1.3.3-1 libxrender1=1:0.9.9-0ubuntu1 liblcms2-dev=2.6-3ubuntu2.1 libwebp-dev=0.4.4-1 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 ca-certificates=20210119~16.04.1 fonts-dejavu=2.35-1 gcc=4:5.3.1-1ubuntu1 gfortran=4:5.3.1-1ubuntu1 graphviz=2.38.0-12ubuntu2.1 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 xz-utils=5.1.1alpha+20120614-2ubuntu2 libudunits2-dev=2.2.20-1 default-jdk=2:1.8-56ubuntu2 -yqq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\\n\" > /etc/apt/source.list\n#   Setup kesci home directory and install conda\nRUN su -m -l $NB_USER -c ' mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/input \\\n && mkdir /home/$NB_USER/.jupyter \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc \\\n && cd /tmp \\\n && mkdir -p $CONDA_DIR \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh -O Miniconda3-latest-Linux-x86_64.sh \\\n && sha256sum Miniconda3-latest-Linux-x86_64.sh \\\n && /bin/bash Miniconda3-latest-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-latest-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda --version \\\n && $CONDA_DIR/bin/conda config --set show_channel_urls yes \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda clean -tipsy ' \\\n && echo \"jpeg 9*\" >> /opt/conda/conda-meta/pinned\nUSER root\nRUN cd /tmp \\\n && wget https://bootstrap.pypa.io/get-pip.py \\\n && python2 get-pip.py \\\n && rm get-pip.py \\\n && python2 -m pip install ipykernel \\\n && python2 -m ipykernel install \\\n && chown $NB_USER /usr/local/bin \\\n && chown $NB_USER /usr/local/share \\\n && chown -R $NB_USER /usr/local/lib/python2.7\n#   Julia dependencies\n#   install Julia packages in /opt/julia instead of $HOME\nENV JULIA_DEPOT_PATH=\"/opt/julia\"\nENV JULIA_PKGDIR=\"/opt/julia\"\nENV JULIA_VERSION=\"1.0.0\"\nRUN mkdir /opt/julia-${JULIA_VERSION} \\\n && cd /tmp \\\n && wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo ${JULIA_VERSION} | cut -d. -f 1,2 `/julia-${JULIA_VERSION}-linux-x86_64.tar.gz \\\n && echo \"bea4570d7358016d8ed29d2c15787dbefaea3e746c570763e7ad6040f17831f3 *julia-${JULIA_VERSION}-linux-x86_64.tar.gz\" | sha256sum -c - \\\n && tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1 \\\n && rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz\nRUN ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia\n#   Show Julia where conda libraries are \\\nRUN mkdir /etc/julia \\\n && echo \"push!(Libdl.DL_LOAD_PATH, \\\"$CONDA_DIR/lib\\\")\" >> /etc/julia/juliarc.jl \\\n && mkdir $JULIA_PKGDIR \\\n && chown $NB_USER $JULIA_PKGDIR\nUSER $NB_USER\nRUN echo \"Install R and R basic packages\" \\\n && conda config --add channels conda-forge \\\n && conda install -y 'r-essentials=3.5.1' \\\n && conda config --add channels ataenzer \\\n && conda config --add channels jsignell \\\n && conda config --add channels pjones \\\n && conda config --add channels omgarcia \\\n && conda config --add channels cgat \\\n && conda config --add channels sebp \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ \\\n && conda install -y 'r-tm' 'r-rcolorbrewer' 'r-nnet' 'r-nlp' 'r-ggmap' 'r-chron' 'r-rocr' 'r-arules' \\\n && echo 'options(\"repos\" = c(CRAN=\"http://cran.us.r-project.org\"))' > ~/.Rprofile \\\n && R -e \" install.packages('choroplethr'); install.packages('choroplethrMaps'); install.packages('Metrics'); install.packages('DescTools'); install.packages('tools'); install.packages('grid'); install.packages('WDI'); install.packages('wordcloud'); install.packages('wordcloud2'); install.packages('xgboost'); install.packages('plotly');\" \\\n && echo 'options(\"repos\" = c(CRAN=\"https://mirrors.tuna.tsinghua.edu.cn/CRAN/\"))' > ~/.Rprofile \\\n && conda clean -tipsy\n#   Add Julia packages. Only add HDF5 if this is not a test-only build since\n#   it takes roughly half the entire build time of all of the images on Travis\n#   to add this one package and often causes Travis to timeout.\n#\n#   Install IJulia as jovyan and then move the kernelspec out\n#   to the system share location. Avoids problems with runtime UID change not\n#   taking effect properly on the .local folder in the jovyan home dir.\nRUN julia -e 'import Pkg; Pkg.update()' \\\n && (test $TEST_ONLY_BUILD || julia -e 'import Pkg; Pkg.add(\"HDF5\")' ) \\\n && julia -e 'import Pkg; Pkg.add(\"Gadfly\")' \\\n && julia -e 'import Pkg; Pkg.add(\"RDatasets\")' \\\n && julia -e 'import Pkg; Pkg.add(\"IJulia\")' \\\n && julia -e 'using IJulia' \\\n && mkdir -p $CONDA_DIR/share/jupyter/kernels/ \\\n && mv $HOME/.local/share/jupyter/kernels/julia* $CONDA_DIR/share/jupyter/kernels/ \\\n && chmod -R go+rx $CONDA_DIR/share/jupyter \\\n && rm -rf $HOME/.local\nUSER root\n#   Make sure /usr/local/ and conda directories belong to user, and install fonts.\nRUN chown $NB_USER /usr/local/bin \\\n && chown $NB_USER /usr/local/share \\\n && chown -R $NB_USER /usr/local/lib \\\n && chown -R $NB_USER /opt/conda/lib/python3.6/site-packages/ \\\n && chown -R $NB_USER /usr/local/lib/python2.7/dist-packages/ \\\n && mkdir -p /home/$NB_USER/.cache \\\n && chown $NB_USER -R /home/$NB_USER/.cache \\\n && rm -rf /root/.cache/pip/* \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && rm -rf /home/$NB_USER/.cache/matplotlib/ \\\n && echo \"kesci ALL=NOPASSWD: /usr/bin/apt-get\" > /etc/sudoers.d/kesci \\\n && chmod 0400 /etc/sudoers.d/kesci\nWORKDIR /home/$NB_USER/work\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER K-Lab Authors <service@kesci.com>\nUSER root\n#  Configure environment\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nENV SHELL=\"/bin/bash\"\nENV NB_USER=\"kesci\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/$NB_USER\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#  Install prerequisites\nRUN apt-get update \\\n && apt-get -yqq dist-upgrade \\\n && apt-get install --no-install-recommends build-essential cmake bzip2 ca-certificates iptables locales sudo wget strace build-essential emacs git inkscape jed libsm6 libxrender1 pandoc python-dev texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra unzip vim -yqq \\\n && echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen \\\n && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER $CONDA_DIR \\\n && apt-get install libfontconfig1 libfreetype6-dev libglib2.0-0 libsm6 libxext6 libxrender1 liblcms2-dev libwebp-dev zlib1g-dev ca-certificates fonts-dejavu gcc gfortran graphviz libxml2-dev xz-utils libudunits2-dev default-jdk -yqq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\\n\" > /etc/apt/source.list\n#  Setup kesci home directory and install conda\nRUN su -m -l $NB_USER -c ' mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/input \\\n && mkdir /home/$NB_USER/.jupyter \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc \\\n && cd /tmp \\\n && mkdir -p $CONDA_DIR \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh -O Miniconda3-latest-Linux-x86_64.sh \\\n && sha256sum Miniconda3-latest-Linux-x86_64.sh \\\n && /bin/bash Miniconda3-latest-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-latest-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda --version \\\n && $CONDA_DIR/bin/conda config --set show_channel_urls yes \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda clean -tipsy ' \\\n && echo \"jpeg 9*\" >> /opt/conda/conda-meta/pinned\nUSER root\nRUN cd /tmp \\\n && wget https://bootstrap.pypa.io/get-pip.py \\\n && python2 get-pip.py \\\n && rm get-pip.py \\\n && python2 -m pip install ipykernel \\\n && python2 -m ipykernel install \\\n && chown $NB_USER /usr/local/bin \\\n && chown $NB_USER /usr/local/share \\\n && chown -R $NB_USER /usr/local/lib/python2.7\n#  Julia dependencies\n#  install Julia packages in /opt/julia instead of $HOME\nENV JULIA_DEPOT_PATH=\"/opt/julia\"\nENV JULIA_PKGDIR=\"/opt/julia\"\nENV JULIA_VERSION=\"1.0.0\"\nRUN mkdir /opt/julia-${JULIA_VERSION} \\\n && cd /tmp \\\n && wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo ${JULIA_VERSION} | cut -d. -f 1,2 `/julia-${JULIA_VERSION}-linux-x86_64.tar.gz \\\n && echo \"bea4570d7358016d8ed29d2c15787dbefaea3e746c570763e7ad6040f17831f3 *julia-${JULIA_VERSION}-linux-x86_64.tar.gz\" | sha256sum -c - \\\n && tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1 \\\n && rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz\nRUN ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia\n#  Show Julia where conda libraries are \\\nRUN mkdir /etc/julia \\\n && echo \"push!(Libdl.DL_LOAD_PATH, \\\"$CONDA_DIR/lib\\\")\" >> /etc/julia/juliarc.jl \\\n && mkdir $JULIA_PKGDIR \\\n && chown $NB_USER $JULIA_PKGDIR\nUSER $NB_USER\nRUN echo \"Install R and R basic packages\" \\\n && conda config --add channels conda-forge \\\n && conda install -y 'r-essentials=3.5.1' \\\n && conda config --add channels ataenzer \\\n && conda config --add channels jsignell \\\n && conda config --add channels pjones \\\n && conda config --add channels omgarcia \\\n && conda config --add channels cgat \\\n && conda config --add channels sebp \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ \\\n && conda install -y 'r-tm' 'r-rcolorbrewer' 'r-nnet' 'r-nlp' 'r-ggmap' 'r-chron' 'r-rocr' 'r-arules' \\\n && echo 'options(\"repos\" = c(CRAN=\"http://cran.us.r-project.org\"))' > ~/.Rprofile \\\n && R -e \" install.packages('choroplethr'); install.packages('choroplethrMaps'); install.packages('Metrics'); install.packages('DescTools'); install.packages('tools'); install.packages('grid'); install.packages('WDI'); install.packages('wordcloud'); install.packages('wordcloud2'); install.packages('xgboost'); install.packages('plotly');\" \\\n && echo 'options(\"repos\" = c(CRAN=\"https://mirrors.tuna.tsinghua.edu.cn/CRAN/\"))' > ~/.Rprofile \\\n && conda clean -tipsy\n#  Add Julia packages. Only add HDF5 if this is not a test-only build since\n#  it takes roughly half the entire build time of all of the images on Travis\n#  to add this one package and often causes Travis to timeout.\n#\n#  Install IJulia as jovyan and then move the kernelspec out\n#  to the system share location. Avoids problems with runtime UID change not\n#  taking effect properly on the .local folder in the jovyan home dir.\nRUN julia -e 'import Pkg; Pkg.update()' \\\n && (test $TEST_ONLY_BUILD || julia -e 'import Pkg; Pkg.add(\"HDF5\")' ) \\\n && julia -e 'import Pkg; Pkg.add(\"Gadfly\")' \\\n && julia -e 'import Pkg; Pkg.add(\"RDatasets\")' \\\n && julia -e 'import Pkg; Pkg.add(\"IJulia\")' \\\n && julia -e 'using IJulia' \\\n && mkdir -p $CONDA_DIR/share/jupyter/kernels/ \\\n && mv $HOME/.local/share/jupyter/kernels/julia* $CONDA_DIR/share/jupyter/kernels/ \\\n && chmod -R go+rx $CONDA_DIR/share/jupyter \\\n && rm -rf $HOME/.local\nUSER root\n#  Make sure /usr/local/ and conda directories belong to user, and install fonts.\nRUN chown $NB_USER /usr/local/bin \\\n && chown $NB_USER /usr/local/share \\\n && chown -R $NB_USER /usr/local/lib \\\n && chown -R $NB_USER /opt/conda/lib/python3.6/site-packages/ \\\n && chown -R $NB_USER /usr/local/lib/python2.7/dist-packages/ \\\n && mkdir -p /home/$NB_USER/.cache \\\n && chown $NB_USER -R /home/$NB_USER/.cache \\\n && rm -rf /root/.cache/pip/* \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && rm -rf /home/$NB_USER/.cache/matplotlib/ \\\n && echo \"kesci ALL=NOPASSWD: /usr/bin/apt-get\" > /etc/sudoers.d/kesci \\\n && chmod 0400 /etc/sudoers.d/kesci\nWORKDIR /home/$NB_USER/work\n","injectedSmells":[],"originalDockerfileHash":"29259c43be316f3c1f95eb9cfab6e7d2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER K-Lab Authors <service@kesci.com>\nUSER root\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nENV SHELL=\"/bin/bash\"\nENV NB_USER=\"kesci\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/$NB_USER\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Install prerequisites\nRUN apt-get update \\\n && apt-get -yqq dist-upgrade \\\n && apt-get install --no-install-recommends build-essential cmake bzip2 ca-certificates iptables locales sudo wget strace build-essential emacs git inkscape jed libsm6 libxrender1 pandoc python-dev texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra unzip vim -yqq \\\n && echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen \\\n && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER $CONDA_DIR \\\n && apt-get install libfontconfig1 libfreetype6-dev libglib2.0-0 libsm6 libxext6 libxrender1 liblcms2-dev libwebp-dev zlib1g-dev ca-certificates fonts-dejavu gcc gfortran graphviz libxml2-dev xz-utils libudunits2-dev default-jdk -yqq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\\n\" > /etc/apt/source.list\n#   Setup kesci home directory and install conda\nRUN su -m -l $NB_USER -c ' mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/input \\\n && mkdir /home/$NB_USER/.jupyter \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc \\\n && cd /tmp \\\n && mkdir -p $CONDA_DIR \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh -O Miniconda3-latest-Linux-x86_64.sh \\\n && sha256sum Miniconda3-latest-Linux-x86_64.sh \\\n && /bin/bash Miniconda3-latest-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-latest-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda --version \\\n && $CONDA_DIR/bin/conda config --set show_channel_urls yes \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda clean -tipsy ' \\\n && echo \"jpeg 9*\" >> /opt/conda/conda-meta/pinned\nUSER root\nRUN cd /tmp \\\n && wget https://bootstrap.pypa.io/get-pip.py \\\n && python2 get-pip.py \\\n && rm get-pip.py \\\n && python2 -m pip install ipykernel \\\n && python2 -m ipykernel install \\\n && chown $NB_USER /usr/local/bin \\\n && chown $NB_USER /usr/local/share \\\n && chown -R $NB_USER /usr/local/lib/python2.7\n#   Julia dependencies\n#   install Julia packages in /opt/julia instead of $HOME\nENV JULIA_DEPOT_PATH=\"/opt/julia\"\nENV JULIA_PKGDIR=\"/opt/julia\"\nENV JULIA_VERSION=\"1.0.0\"\nRUN mkdir /opt/julia-${JULIA_VERSION} \\\n && cd /tmp \\\n && wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo ${JULIA_VERSION} | cut -d. -f 1,2 `/julia-${JULIA_VERSION}-linux-x86_64.tar.gz \\\n && echo \"bea4570d7358016d8ed29d2c15787dbefaea3e746c570763e7ad6040f17831f3 *julia-${JULIA_VERSION}-linux-x86_64.tar.gz\" | sha256sum -c - \\\n && tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1 \\\n && rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz\nRUN ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia\n#   Show Julia where conda libraries are \\\nRUN mkdir /etc/julia \\\n && echo \"push!(Libdl.DL_LOAD_PATH, \\\"$CONDA_DIR/lib\\\")\" >> /etc/julia/juliarc.jl \\\n && mkdir $JULIA_PKGDIR \\\n && chown $NB_USER $JULIA_PKGDIR\nUSER $NB_USER\nRUN echo \"Install R and R basic packages\" \\\n && conda config --add channels conda-forge \\\n && conda install -y 'r-essentials=3.5.1' \\\n && conda config --add channels ataenzer \\\n && conda config --add channels jsignell \\\n && conda config --add channels pjones \\\n && conda config --add channels omgarcia \\\n && conda config --add channels cgat \\\n && conda config --add channels sebp \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/ \\\n && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ \\\n && conda install -y 'r-tm' 'r-rcolorbrewer' 'r-nnet' 'r-nlp' 'r-ggmap' 'r-chron' 'r-rocr' 'r-arules' \\\n && echo 'options(\"repos\" = c(CRAN=\"http://cran.us.r-project.org\"))' > ~/.Rprofile \\\n && R -e \" install.packages('choroplethr'); install.packages('choroplethrMaps'); install.packages('Metrics'); install.packages('DescTools'); install.packages('tools'); install.packages('grid'); install.packages('WDI'); install.packages('wordcloud'); install.packages('wordcloud2'); install.packages('xgboost'); install.packages('plotly');\" \\\n && echo 'options(\"repos\" = c(CRAN=\"https://mirrors.tuna.tsinghua.edu.cn/CRAN/\"))' > ~/.Rprofile \\\n && conda clean -tipsy\n#   Add Julia packages. Only add HDF5 if this is not a test-only build since\n#   it takes roughly half the entire build time of all of the images on Travis\n#   to add this one package and often causes Travis to timeout.\n#\n#   Install IJulia as jovyan and then move the kernelspec out\n#   to the system share location. Avoids problems with runtime UID change not\n#   taking effect properly on the .local folder in the jovyan home dir.\nRUN julia -e 'import Pkg; Pkg.update()' \\\n && (test $TEST_ONLY_BUILD || julia -e 'import Pkg; Pkg.add(\"HDF5\")' ) \\\n && julia -e 'import Pkg; Pkg.add(\"Gadfly\")' \\\n && julia -e 'import Pkg; Pkg.add(\"RDatasets\")' \\\n && julia -e 'import Pkg; Pkg.add(\"IJulia\")' \\\n && julia -e 'using IJulia' \\\n && mkdir -p $CONDA_DIR/share/jupyter/kernels/ \\\n && mv $HOME/.local/share/jupyter/kernels/julia* $CONDA_DIR/share/jupyter/kernels/ \\\n && chmod -R go+rx $CONDA_DIR/share/jupyter \\\n && rm -rf $HOME/.local\nUSER root\n#   Make sure /usr/local/ and conda directories belong to user, and install fonts.\nRUN chown $NB_USER /usr/local/bin \\\n && chown $NB_USER /usr/local/share \\\n && chown -R $NB_USER /usr/local/lib \\\n && chown -R $NB_USER /opt/conda/lib/python3.6/site-packages/ \\\n && chown -R $NB_USER /usr/local/lib/python2.7/dist-packages/ \\\n && mkdir -p /home/$NB_USER/.cache \\\n && chown $NB_USER -R /home/$NB_USER/.cache \\\n && rm -rf /root/.cache/pip/* \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && rm -rf /home/$NB_USER/.cache/matplotlib/ \\\n && echo \"kesci ALL=NOPASSWD: /usr/bin/apt-get\" > /etc/sudoers.d/kesci \\\n && chmod 0400 /etc/sudoers.d/kesci\nWORKDIR /home/$NB_USER/work\n","originalDockerfileUglifiedHash":"3843ed487902f84e7cdc6ed86e3707ea","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6e2b609eb2d9562531676315f0b4adf6c162719a.dockerfile"}