{"seed":1264670850,"processedDockerfileHash":"100011eb5ece4ddba60e98e29ac93773","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ###############################################################################\n#   Set up environment variables, OS packages, and scripts that are common to the\n#   build and distribution layers in this Dockerfile\nFROM alpine:3.9 AS base\n#   Must be one of 'gmp' or 'simple'; used to build GHC with support for either\n#   'integer-gmp' (with 'libgmp') or 'integer-simple'\n#\n#   Default to building with 'integer-gmp' and 'libgmp' support\nARG GHC_BUILD_TYPE\n#   Must be a valid GHC version number, only tested with 8.4.4, 8.6.4, and 8.6.5\n#\n#   Default to GHC version 8.6.5 (latest at the time of writing)\nARG GHC_VERSION=8.6.5\n#   Add ghcup's bin directory to the PATH so that the versions of GHC it builds\n#   are available in the build layers\nENV GHCUP_INSTALL_BASE_PREFIX=\"/\"\nENV PATH=\"/.ghcup/bin:$PATH\"\n#   Use the latest version of ghcup (at the time of writing)\nENV GHCUP_VERSION=\"0.0.7\"\nENV GHCUP_SHA256=\"b4b200d896eb45b56c89d0cfadfcf544a24759a6ffac029982821cc96b2faedb  ghcup\"\n#   Install the basic required dependencies to run 'ghcup' and 'stack'\nRUN apk upgrade --no-cache \\\n && apk add curl=7.64.0-r5 gcc=8.3.0-r0 git=2.20.4-r0 libc-dev=0.7.1-r0 xz=5.2.4-r0 --no-cache \\\n && if [ \"${GHC_BUILD_TYPE}\" = \"gmp\" ] ; then echo \"Installing 'libgmp'\" \\\n && apk add gmp-dev=6.1.2-r1 --no-cache ; fi\n#   Download, verify, and install ghcup\nRUN echo \"Downloading and installing ghcup\" \\\n && cd /tmp \\\n && wget -P /tmp/ \"https://gitlab.haskell.org/haskell/ghcup/raw/${GHCUP_VERSION}/ghcup\" \\\n && if ! echo -n \"${GHCUP_SHA256}\" | sha256sum -c - ; then echo \"ghcup-${GHCUP_VERSION} checksum failed\" >&2 \\\n && exit 1 ; fi ; mv /tmp/ghcup /usr/bin/ghcup \\\n && chmod +x /usr/bin/ghcup\n#  ###############################################################################\n#   Intermediate layer that builds GHC\nFROM base AS build-ghc\n#   Carry build args through to this stage\nARG GHC_BUILD_TYPE=gmp\nARG GHC_VERSION=8.6.5\nRUN echo \"Install OS packages necessary to build GHC\" \\\n && apk add autoconf=2.69-r2 automake=1.16.1-r0 binutils-gold=2.31.1-r2 build-base=0.5-r1 coreutils=8.30-r0 cpio=2.12-r3 ghc=8.4.3-r0 linux-headers=4.18.13-r1 libffi-dev=3.2.1-r6 llvm5=5.0.2-r0 musl-dev=1.1.20-r6 ncurses-dev=6.1_p20190105-r0 perl=5.26.3-r1 python3=3.6.9-r3 py3-sphinx=1.8.3-r0 zlib-dev=1.2.11-r1 --no-cache\nCOPY docker/build-gmp.mk /tmp/build-gmp.mk\nCOPY docker/build-simple.mk /tmp/build-simple.mk\nRUN if [ \"${GHC_BUILD_TYPE}\" = \"gmp\" ] ; then echo \"Using 'integer-gmp' build config\" \\\n && apk add gmp-dev=6.1.2-r1 --no-cache \\\n && mv /tmp/build-gmp.mk /tmp/build.mk \\\n && rm /tmp/build-simple.mk ; elif [ \"${GHC_BUILD_TYPE}\" = \"simple\" ] ; then echo \"Using 'integer-simple' build config\" \\\n && mv /tmp/build-simple.mk /tmp/build.mk \\\n && rm tmp/build-gmp.mk ; else echo \"Invalid argument \\[ GHC_BUILD_TYPE=${GHC_BUILD_TYPE} \\]\" \\\n && exit 1 ; fi\nRUN echo \"Compiling and installing GHC\" \\\n && LD=ld.gold SPHINXBUILD=/usr/bin/sphinx-build-3 ghcup -v compile -j $( nproc ;) -c /tmp/build.mk ${GHC_VERSION} ghc-8.4.3 \\\n && rm /tmp/build.mk \\\n && echo \"Uninstalling GHC bootstrapping compiler\" \\\n && apk del ghc \\\n && ghcup set ${GHC_VERSION}\n#  ###############################################################################\n#   Intermediate layer that assembles 'stack' tooling\nFROM base AS build-tooling\nENV STACK_VERSION=\"1.9.3\"\nENV STACK_SHA256=\"c9bf6d371b51de74f4bfd5b50965966ac57f75b0544aebb59ade22195d0b7543  stack-${STACK_VERSION}-linux-x86_64-static.tar.gz\"\n#   Download, verify, and install stack\nRUN echo \"Downloading and installing stack\" \\\n && cd /tmp \\\n && wget -P /tmp/ \"https://github.com/commercialhaskell/stack/releases/download/v${STACK_VERSION}/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz\" \\\n && if ! echo -n \"${STACK_SHA256}\" | sha256sum -c - ; then echo \"stack-${STACK_VERSION} checksum failed\" >&2 \\\n && exit 1 ; fi ; tar -xvzf /tmp/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz \\\n && cp -L /tmp/stack-${STACK_VERSION}-linux-x86_64-static/stack /usr/bin/stack \\\n && rm /tmp/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz \\\n && rm -rf /tmp/stack-${STACK_VERSION}-linux-x86_64-static\n#  ###############################################################################\n#   Assemble the final image\nFROM base\n#   Carry build args through to this stage\nARG GHC_BUILD_TYPE=gmp\nARG GHC_VERSION=8.6.5\nCOPY --from=build-ghc /.ghcup /.ghcup\nCOPY --from=build-tooling /usr/bin/stack /usr/bin/stack\n#   NOTE: 'stack --docker' needs bash + usermod/groupmod (from shadow)\nRUN apk add bash=4.4.19-r1 shadow=4.5-r2 --no-cache\nRUN ghcup set ${GHC_VERSION} \\\n && stack config set system-ghc --global true\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###############################################################################\n#  Set up environment variables, OS packages, and scripts that are common to the\n#  build and distribution layers in this Dockerfile\nFROM alpine:3.9 AS base\n#  Must be one of 'gmp' or 'simple'; used to build GHC with support for either\n#  'integer-gmp' (with 'libgmp') or 'integer-simple'\n#\n#  Default to building with 'integer-gmp' and 'libgmp' support\nARG GHC_BUILD_TYPE\n#  Must be a valid GHC version number, only tested with 8.4.4, 8.6.4, and 8.6.5\n#\n#  Default to GHC version 8.6.5 (latest at the time of writing)\nARG GHC_VERSION=8.6.5\n#  Add ghcup's bin directory to the PATH so that the versions of GHC it builds\n#  are available in the build layers\nENV GHCUP_INSTALL_BASE_PREFIX=\"/\"\nENV PATH=\"/.ghcup/bin:$PATH\"\n#  Use the latest version of ghcup (at the time of writing)\nENV GHCUP_VERSION=\"0.0.7\"\nENV GHCUP_SHA256=\"b4b200d896eb45b56c89d0cfadfcf544a24759a6ffac029982821cc96b2faedb  ghcup\"\n#  Install the basic required dependencies to run 'ghcup' and 'stack'\nRUN apk upgrade --no-cache \\\n && apk add --no-cache curl gcc git libc-dev xz \\\n && if [ \"${GHC_BUILD_TYPE}\" = \"gmp\" ] ; then echo \"Installing 'libgmp'\" \\\n && apk add --no-cache gmp-dev ; fi\n#  Download, verify, and install ghcup\nRUN echo \"Downloading and installing ghcup\" \\\n && cd /tmp \\\n && wget -P /tmp/ \"https://gitlab.haskell.org/haskell/ghcup/raw/${GHCUP_VERSION}/ghcup\" \\\n && if ! echo -n \"${GHCUP_SHA256}\" | sha256sum -c - ; then echo \"ghcup-${GHCUP_VERSION} checksum failed\" >&2 \\\n && exit 1 ; fi ; mv /tmp/ghcup /usr/bin/ghcup \\\n && chmod +x /usr/bin/ghcup\n# ###############################################################################\n#  Intermediate layer that builds GHC\nFROM base AS build-ghc\n#  Carry build args through to this stage\nARG GHC_BUILD_TYPE=gmp\nARG GHC_VERSION=8.6.5\nRUN echo \"Install OS packages necessary to build GHC\" \\\n && apk add --no-cache autoconf automake binutils-gold build-base coreutils cpio ghc linux-headers libffi-dev llvm5 musl-dev ncurses-dev perl python3 py3-sphinx zlib-dev\nCOPY docker/build-gmp.mk /tmp/build-gmp.mk\nCOPY docker/build-simple.mk /tmp/build-simple.mk\nRUN if [ \"${GHC_BUILD_TYPE}\" = \"gmp\" ] ; then echo \"Using 'integer-gmp' build config\" \\\n && apk add --no-cache gmp-dev \\\n && mv /tmp/build-gmp.mk /tmp/build.mk \\\n && rm /tmp/build-simple.mk ; elif [ \"${GHC_BUILD_TYPE}\" = \"simple\" ] ; then echo \"Using 'integer-simple' build config\" \\\n && mv /tmp/build-simple.mk /tmp/build.mk \\\n && rm tmp/build-gmp.mk ; else echo \"Invalid argument \\[ GHC_BUILD_TYPE=${GHC_BUILD_TYPE} \\]\" \\\n && exit 1 ; fi\nRUN echo \"Compiling and installing GHC\" \\\n && LD=ld.gold SPHINXBUILD=/usr/bin/sphinx-build-3 ghcup -v compile -j $( nproc ;) -c /tmp/build.mk ${GHC_VERSION} ghc-8.4.3 \\\n && rm /tmp/build.mk \\\n && echo \"Uninstalling GHC bootstrapping compiler\" \\\n && apk del ghc \\\n && ghcup set ${GHC_VERSION}\n# ###############################################################################\n#  Intermediate layer that assembles 'stack' tooling\nFROM base AS build-tooling\nENV STACK_VERSION=\"1.9.3\"\nENV STACK_SHA256=\"c9bf6d371b51de74f4bfd5b50965966ac57f75b0544aebb59ade22195d0b7543  stack-${STACK_VERSION}-linux-x86_64-static.tar.gz\"\n#  Download, verify, and install stack\nRUN echo \"Downloading and installing stack\" \\\n && cd /tmp \\\n && wget -P /tmp/ \"https://github.com/commercialhaskell/stack/releases/download/v${STACK_VERSION}/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz\" \\\n && if ! echo -n \"${STACK_SHA256}\" | sha256sum -c - ; then echo \"stack-${STACK_VERSION} checksum failed\" >&2 \\\n && exit 1 ; fi ; tar -xvzf /tmp/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz \\\n && cp -L /tmp/stack-${STACK_VERSION}-linux-x86_64-static/stack /usr/bin/stack \\\n && rm /tmp/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz \\\n && rm -rf /tmp/stack-${STACK_VERSION}-linux-x86_64-static\n# ###############################################################################\n#  Assemble the final image\nFROM base\n#  Carry build args through to this stage\nARG GHC_BUILD_TYPE=gmp\nARG GHC_VERSION=8.6.5\nCOPY --from=build-ghc /.ghcup /.ghcup\nCOPY --from=build-tooling /usr/bin/stack /usr/bin/stack\n#  NOTE: 'stack --docker' needs bash + usermod/groupmod (from shadow)\nRUN apk add --no-cache bash shadow\nRUN ghcup set ${GHC_VERSION} \\\n && stack config set system-ghc --global true\n","injectedSmells":[],"originalDockerfileHash":"7a2f45f87e39d0597834df684b615882","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###############################################################################\n#   Set up environment variables, OS packages, and scripts that are common to the\n#   build and distribution layers in this Dockerfile\nFROM alpine:3.9 AS base\n#   Must be one of 'gmp' or 'simple'; used to build GHC with support for either\n#   'integer-gmp' (with 'libgmp') or 'integer-simple'\n#\n#   Default to building with 'integer-gmp' and 'libgmp' support\nARG GHC_BUILD_TYPE\n#   Must be a valid GHC version number, only tested with 8.4.4, 8.6.4, and 8.6.5\n#\n#   Default to GHC version 8.6.5 (latest at the time of writing)\nARG GHC_VERSION=8.6.5\n#   Add ghcup's bin directory to the PATH so that the versions of GHC it builds\n#   are available in the build layers\nENV GHCUP_INSTALL_BASE_PREFIX=\"/\"\nENV PATH=\"/.ghcup/bin:$PATH\"\n#   Use the latest version of ghcup (at the time of writing)\nENV GHCUP_VERSION=\"0.0.7\"\nENV GHCUP_SHA256=\"b4b200d896eb45b56c89d0cfadfcf544a24759a6ffac029982821cc96b2faedb  ghcup\"\n#   Install the basic required dependencies to run 'ghcup' and 'stack'\nRUN apk upgrade --no-cache \\\n && apk add --no-cache curl gcc git libc-dev xz \\\n && if [ \"${GHC_BUILD_TYPE}\" = \"gmp\" ] ; then echo \"Installing 'libgmp'\" \\\n && apk add --no-cache gmp-dev ; fi\n#   Download, verify, and install ghcup\nRUN echo \"Downloading and installing ghcup\" \\\n && cd /tmp \\\n && wget -P /tmp/ \"https://gitlab.haskell.org/haskell/ghcup/raw/${GHCUP_VERSION}/ghcup\" \\\n && if ! echo -n \"${GHCUP_SHA256}\" | sha256sum -c - ; then echo \"ghcup-${GHCUP_VERSION} checksum failed\" >&2 \\\n && exit 1 ; fi ; mv /tmp/ghcup /usr/bin/ghcup \\\n && chmod +x /usr/bin/ghcup\n#  ###############################################################################\n#   Intermediate layer that builds GHC\nFROM base AS build-ghc\n#   Carry build args through to this stage\nARG GHC_BUILD_TYPE=gmp\nARG GHC_VERSION=8.6.5\nRUN echo \"Install OS packages necessary to build GHC\" \\\n && apk add --no-cache autoconf automake binutils-gold build-base coreutils cpio ghc linux-headers libffi-dev llvm5 musl-dev ncurses-dev perl python3 py3-sphinx zlib-dev\nCOPY docker/build-gmp.mk /tmp/build-gmp.mk\nCOPY docker/build-simple.mk /tmp/build-simple.mk\nRUN if [ \"${GHC_BUILD_TYPE}\" = \"gmp\" ] ; then echo \"Using 'integer-gmp' build config\" \\\n && apk add --no-cache gmp-dev \\\n && mv /tmp/build-gmp.mk /tmp/build.mk \\\n && rm /tmp/build-simple.mk ; elif [ \"${GHC_BUILD_TYPE}\" = \"simple\" ] ; then echo \"Using 'integer-simple' build config\" \\\n && mv /tmp/build-simple.mk /tmp/build.mk \\\n && rm tmp/build-gmp.mk ; else echo \"Invalid argument \\[ GHC_BUILD_TYPE=${GHC_BUILD_TYPE} \\]\" \\\n && exit 1 ; fi\nRUN echo \"Compiling and installing GHC\" \\\n && LD=ld.gold SPHINXBUILD=/usr/bin/sphinx-build-3 ghcup -v compile -j $( nproc ;) -c /tmp/build.mk ${GHC_VERSION} ghc-8.4.3 \\\n && rm /tmp/build.mk \\\n && echo \"Uninstalling GHC bootstrapping compiler\" \\\n && apk del ghc \\\n && ghcup set ${GHC_VERSION}\n#  ###############################################################################\n#   Intermediate layer that assembles 'stack' tooling\nFROM base AS build-tooling\nENV STACK_VERSION=\"1.9.3\"\nENV STACK_SHA256=\"c9bf6d371b51de74f4bfd5b50965966ac57f75b0544aebb59ade22195d0b7543  stack-${STACK_VERSION}-linux-x86_64-static.tar.gz\"\n#   Download, verify, and install stack\nRUN echo \"Downloading and installing stack\" \\\n && cd /tmp \\\n && wget -P /tmp/ \"https://github.com/commercialhaskell/stack/releases/download/v${STACK_VERSION}/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz\" \\\n && if ! echo -n \"${STACK_SHA256}\" | sha256sum -c - ; then echo \"stack-${STACK_VERSION} checksum failed\" >&2 \\\n && exit 1 ; fi ; tar -xvzf /tmp/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz \\\n && cp -L /tmp/stack-${STACK_VERSION}-linux-x86_64-static/stack /usr/bin/stack \\\n && rm /tmp/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz \\\n && rm -rf /tmp/stack-${STACK_VERSION}-linux-x86_64-static\n#  ###############################################################################\n#   Assemble the final image\nFROM base\n#   Carry build args through to this stage\nARG GHC_BUILD_TYPE=gmp\nARG GHC_VERSION=8.6.5\nCOPY --from=build-ghc /.ghcup /.ghcup\nCOPY --from=build-tooling /usr/bin/stack /usr/bin/stack\n#   NOTE: 'stack --docker' needs bash + usermod/groupmod (from shadow)\nRUN apk add --no-cache bash shadow\nRUN ghcup set ${GHC_VERSION} \\\n && stack config set system-ghc --global true\n","originalDockerfileUglifiedHash":"cde0ef2b183821fc083aa3b50dd66fe7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/52d3be6595e7c45cfe5a9389747d39a741c7e264.dockerfile"}