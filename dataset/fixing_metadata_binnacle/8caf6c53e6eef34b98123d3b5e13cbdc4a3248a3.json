{"seed":404644222,"processedDockerfileHash":"983cf89114c171622c01255c5aa1e417","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Creates an image for skycoin development with Python tools installed\nARG IMAGE_FROM=skycoin/skycoindev-cli:develop\nFROM $IMAGE_FROM\nARG BDATE\nARG SCOMMIT\nARG PIP_PACKAGES=\"setuptools wheel\"\n#   Image labels (see ./hooks/build for ARGS)\nLABEL org.label-schema.name=\"skycoindev-python\" \\\n      org.label-schema.description=\"Docker image with go, node, python and dev tools for Skycoin developers\" \\\n      org.label-schema.vendor=\"Skycoin project\" \\\n      org.label-schema.url=\"skycoin.net\" \\\n      org.label-schema.version=\"0.24.4\" \\\n      org.label-schema.build-date=\"$BDATE\" \\\n      org.label-schema.vcs-url=\"https://github.com/skycoin/pyskycoin.git\" \\\n      org.label-schema.vcs-ref=\"$SCOMMIT\" \\\n      org.label-schema.usage=\"https://github.com/skycoin/pyskycoin/blob/$SCOMMIT/docker/images/dev/README.md\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"mkdir src; docker run --rm -v ${PWD}/src:/usr/local/src skycoin/skycoindev-python:develop git clone https://github.com/simelo/pyskycoin.git\"\n#   Install Python 2.7/3.5 runtime and development tools\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends python2.7-dev=2.7.18-13ubuntu2 python3.5 python3.5-dev python-dev python3-dev=3.11.2-1 ca-certificates=20230311 libexpat1=2.5.0-1 libffi6 libgdbm3 libreadline7 libsqlite3-0=3.40.1-1 libssl1.1 netbase=6.4 wget=1.21.3-1ubuntu1 python-pip python3-pip=23.0.1+dfsg-1 -y \\\n && pip install pip==23.1 --upgrade \\\n && pip3 install --upgrade pip\n#   Install Python 3.7\n#   runtime dependencies\nENV PYTHON_VERSION=\"3.7.1\"\nRUN set -ex \\\n && buildDeps=\" libexpat1-dev tcl-dev tk-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) \" \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80; do gpg --keyserver \"$server\" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D ; done \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make altinstall \\\n && ldconfig \\\n && find /usr/local -depth\n#   Install Python 3.6\n#   runtime dependencies\nENV PYTHON_VERSION=\"3.6.7\"\nRUN set -ex \\\n && buildDeps=\" libexpat1-dev tcl-dev tk-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) \" \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80; do gpg --keyserver \"$server\" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D ; done \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make altinstall \\\n && ldconfig \\\n && find /usr/local -depth\n#   Install Python 3.4\n#   runtime dependencies\nENV PYTHON_VERSION=\"3.4.9\"\nRUN set -ex \\\n && buildDeps=\" $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) \" \\\n && apt-get install --no-install-recommends libssl1.0-dev $buildDeps -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80; do gpg --keyserver \"$server\" --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D ; done \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make altinstall \\\n && ldconfig \\\n && apt-get install --no-install-recommends libssl-dev=3.0.8-1ubuntu1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && find /usr/local -depth\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python3.7 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; python3.6 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; python3.5 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; python3.4 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; find /usr/local -depth\n#   Install packages in PIP_PACKAGES\nRUN pip install $PIP_PACKAGES --upgrade \\\n && pip3 install --upgrade $PIP_PACKAGES \\\n && python3.4 -m pip install --upgrade $PIP_PACKAGES \\\n && python3.6 -m pip install --upgrade $PIP_PACKAGES \\\n && python3.7 -m pip install --upgrade $PIP_PACKAGES\nWORKDIR $GOPATH/src/github.com/skycoin\nVOLUME $GOPATH/src/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Creates an image for skycoin development with Python tools installed\nARG IMAGE_FROM=skycoin/skycoindev-cli:develop\nFROM $IMAGE_FROM\nARG BDATE\nARG SCOMMIT\nARG PIP_PACKAGES=\"setuptools wheel\"\n#  Image labels (see ./hooks/build for ARGS)\nLABEL org.label-schema.name=\"skycoindev-python\" \\\n      org.label-schema.description=\"Docker image with go, node, python and dev tools for Skycoin developers\" \\\n      org.label-schema.vendor=\"Skycoin project\" \\\n      org.label-schema.url=\"skycoin.net\" \\\n      org.label-schema.version=\"0.24.4\" \\\n      org.label-schema.build-date=\"$BDATE\" \\\n      org.label-schema.vcs-url=\"https://github.com/skycoin/pyskycoin.git\" \\\n      org.label-schema.vcs-ref=\"$SCOMMIT\" \\\n      org.label-schema.usage=\"https://github.com/skycoin/pyskycoin/blob/$SCOMMIT/docker/images/dev/README.md\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"mkdir src; docker run --rm -v ${PWD}/src:/usr/local/src skycoin/skycoindev-python:develop git clone https://github.com/simelo/pyskycoin.git\"\n#  Install Python 2.7/3.5 runtime and development tools\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends python2.7-dev python3.5 python3.5-dev python-dev python3-dev ca-certificates libexpat1 libffi6 libgdbm3 libreadline7 libsqlite3-0 libssl1.1 netbase wget python-pip python3-pip -y \\\n && pip install pip --upgrade \\\n && pip3 install --upgrade pip\n#  Install Python 3.7\n#  runtime dependencies\nENV PYTHON_VERSION=\"3.7.1\"\nRUN set -ex \\\n && buildDeps=\" libexpat1-dev tcl-dev tk-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) \" \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80; do gpg --keyserver \"$server\" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D ; done \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make altinstall \\\n && ldconfig \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python\n#  Install Python 3.6\n#  runtime dependencies\nENV PYTHON_VERSION=\"3.6.7\"\nRUN set -ex \\\n && buildDeps=\" libexpat1-dev tcl-dev tk-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) \" \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80; do gpg --keyserver \"$server\" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D ; done \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make altinstall \\\n && ldconfig \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python\n#  Install Python 3.4\n#  runtime dependencies\nENV PYTHON_VERSION=\"3.4.9\"\nRUN set -ex \\\n && buildDeps=\" $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) \" \\\n && apt-get install --no-install-recommends libssl1.0-dev $buildDeps -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80; do gpg --keyserver \"$server\" --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D ; done \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make altinstall \\\n && ldconfig \\\n && apt-get install libssl-dev -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python3.7 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; python3.6 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; python3.5 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; python3.4 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\n#  Install packages in PIP_PACKAGES\nRUN pip install $PIP_PACKAGES --upgrade \\\n && pip3 install --upgrade $PIP_PACKAGES \\\n && python3.4 -m pip install --upgrade $PIP_PACKAGES \\\n && python3.6 -m pip install --upgrade $PIP_PACKAGES \\\n && python3.7 -m pip install --upgrade $PIP_PACKAGES\nWORKDIR $GOPATH/src/github.com/skycoin\nVOLUME $GOPATH/src/\n","injectedSmells":[],"originalDockerfileHash":"023eaa6aaab8b14d958fcc3c181e617e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Creates an image for skycoin development with Python tools installed\nARG IMAGE_FROM=skycoin/skycoindev-cli:develop\nFROM $IMAGE_FROM\nARG BDATE\nARG SCOMMIT\nARG PIP_PACKAGES=\"setuptools wheel\"\n#   Image labels (see ./hooks/build for ARGS)\nLABEL org.label-schema.name=\"skycoindev-python\" \\\n      org.label-schema.description=\"Docker image with go, node, python and dev tools for Skycoin developers\" \\\n      org.label-schema.vendor=\"Skycoin project\" \\\n      org.label-schema.url=\"skycoin.net\" \\\n      org.label-schema.version=\"0.24.4\" \\\n      org.label-schema.build-date=\"$BDATE\" \\\n      org.label-schema.vcs-url=\"https://github.com/skycoin/pyskycoin.git\" \\\n      org.label-schema.vcs-ref=\"$SCOMMIT\" \\\n      org.label-schema.usage=\"https://github.com/skycoin/pyskycoin/blob/$SCOMMIT/docker/images/dev/README.md\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"mkdir src; docker run --rm -v ${PWD}/src:/usr/local/src skycoin/skycoindev-python:develop git clone https://github.com/simelo/pyskycoin.git\"\n#   Install Python 2.7/3.5 runtime and development tools\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends python2.7-dev python3.5 python3.5-dev python-dev python3-dev ca-certificates libexpat1 libffi6 libgdbm3 libreadline7 libsqlite3-0 libssl1.1 netbase wget python-pip python3-pip -y \\\n && pip install pip --upgrade \\\n && pip3 install --upgrade pip\n#   Install Python 3.7\n#   runtime dependencies\nENV PYTHON_VERSION=\"3.7.1\"\nRUN set -ex \\\n && buildDeps=\" libexpat1-dev tcl-dev tk-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) \" \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80; do gpg --keyserver \"$server\" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D ; done \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make altinstall \\\n && ldconfig \\\n && find /usr/local -depth\n#   Install Python 3.6\n#   runtime dependencies\nENV PYTHON_VERSION=\"3.6.7\"\nRUN set -ex \\\n && buildDeps=\" libexpat1-dev tcl-dev tk-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) \" \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80; do gpg --keyserver \"$server\" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D ; done \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make altinstall \\\n && ldconfig \\\n && find /usr/local -depth\n#   Install Python 3.4\n#   runtime dependencies\nENV PYTHON_VERSION=\"3.4.9\"\nRUN set -ex \\\n && buildDeps=\" $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) \" \\\n && apt-get install --no-install-recommends libssl1.0-dev $buildDeps -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80; do gpg --keyserver \"$server\" --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D ; done \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make altinstall \\\n && ldconfig \\\n && apt-get install libssl-dev -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && find /usr/local -depth\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python3.7 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; python3.6 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; python3.5 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; python3.4 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; find /usr/local -depth\n#   Install packages in PIP_PACKAGES\nRUN pip install $PIP_PACKAGES --upgrade \\\n && pip3 install --upgrade $PIP_PACKAGES \\\n && python3.4 -m pip install --upgrade $PIP_PACKAGES \\\n && python3.6 -m pip install --upgrade $PIP_PACKAGES \\\n && python3.7 -m pip install --upgrade $PIP_PACKAGES\nWORKDIR $GOPATH/src/github.com/skycoin\nVOLUME $GOPATH/src/\n","originalDockerfileUglifiedHash":"cef7b1ba2cc52cb119ffe3b623793d0f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8caf6c53e6eef34b98123d3b5e13cbdc4a3248a3.dockerfile"}