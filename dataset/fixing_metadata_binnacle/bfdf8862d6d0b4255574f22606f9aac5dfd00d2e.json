{"seed":299343060,"processedDockerfileHash":"911da00ae31c6e900ab5070adf8a528e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Authors:\n#   Guilherme Caminha <gpkc@cin.ufpe.br>\nFROM phusion/baseimage\nMAINTAINER Guilherme Caminha <gpkc@cin.ufpe.br>\nENV HOME=\"/home/scientific\"\nENV MOAB_DIR=\"/usr\"\nENV VISIT_DIR=\"/opt/visit\"\nENV MPI_HOME=\"/usr\"\nENV PYTHONPATH=\"/usr/lib/python3.6/site-packages\"\nENV PATH=\"/usr/local/bin:$PATH\"\nENV LANG=\"C.UTF-8\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends wget=1.21.3-1ubuntu1 pkg-config=1.8.1-1ubuntu2 git=1:2.39.2-1ubuntu1 libopenblas-dev=0.3.21+ds-4 liblapack-dev=3.11.0-2 make=4.3-4.1build1 cmake=3.25.1-1 autoconf=2.71-3 automake=1:1.16.5-1.3 libtool=2.4.7-5 clang=1:15.0-56~exp2 gcc=4:12.2.0-3ubuntu1 g++=4:12.2.0-3ubuntu1 gfortran=4:12.2.0-3ubuntu1 libhdf5-mpich-dev=1.10.8+repack1-1ubuntu1 libnetcdf-c++4=4.2-13 libeigen3-dev=3.4.0-4 libmetis-dev=5.1.0.dfsg-7build2 doxygen=1.9.4-4 liboce-foundation-dev=0.18.3-2 liboce-modeling-dev=0.18.3-2 liboce-ocaf-dev=0.18.3-2 liboce-visualization-dev=0.18.3-2 oce-draw=0.18.3-2 netgen=6.2.2006+really6.2.1905+dfsg-5.1build1 libnglib-dev=6.2.2006+really6.2.1905+dfsg-5.1build1 build-essential=12.9ubuntu3 bzip2=1.0.8-5build1 tar=1.34+dfsg-1.1 m4=1.4.19-3 file=1:5.44-3 swig=4.1.0-0.2 tcl=8.6.13 tk=8.6.13 libssl-dev=3.0.8-1ubuntu1 -qy \\\n && apt-get clean\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.3\"\n#   Install Python3\nRUN set -ex \\\n && buildDeps=' dpkg-dev tcl-dev tk-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && find /usr/local -depth\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nCMD [\"/sbin/my_init\"]\nRUN pip install cython==0.29.34 numpy==1.24.2 pytest==7.3.1 colorlog==6.7.0 configobj==5.0.8 pytest-runner==6.0.0\n#   Install mpi4py\nWORKDIR $HOME\nRUN cd $HOME \\\n && git clone https://bitbucket.org/mpi4py/mpi4py \\\n && cd $HOME/mpi4py \\\n && python setup.py build \\\n && python setup.py install \\\n && cd $HOME \\\n && rm -rf mpi4py\n#   Install MOAB\nWORKDIR $HOME\nRUN cd $HOME \\\n && git clone https://bitbucket.org/fathomteam/moab.git \\\n && cd $HOME/moab \\\n && autoreconf -fi \\\n && mkdir build \\\n && cd $HOME/moab/build \\\n && ../configure --prefix=$MOAB_DIR --with-mpi=/usr --with-hdf5=/usr/lib/x86_64-linux-gnu/hdf5/mpich --with-netcdf=/usr --with-metis=/usr --enable-optimize --enable-debug --enable-tools --enable-pymoab --enable-shared CFLAGS='-O2 -fPIC -DPIC' CXXFLAGS='-O2 -fPIC -DPIC' FCFLAGS='-O2 -fPIC' FFLAGS='-O2 -fPIC' \\\n && make -j24 \\\n && make install \\\n && cd $HOME/moab/build/pymoab \\\n && python setup.py build \\\n && python setup.py install \\\n && cd $HOME \\\n && rm -rf moab \\\n && echo \"export MOAB_DIR=$MOAB_DIR\" >> $HOME/.bashrc \\\n && echo \"export PATH=$PATH:$MOAB_DIR/bin\" >> $HOME/.bashrc \\\n && echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MOAB_DIR/lib\" >> $HOME/.bashrc\n#   Install Trilinos\nENV TRILINOS_VER=\"12.12.1\"\nENV CPATH=\"/usr/local/include/python3.6m:$CPATH\"\nRUN cd $HOME \\\n && wget http://www.cmake.org/files/v3.2/cmake-3.2.2.tar.gz \\\n && tar xzvf cmake-3.2.2.tar.gz \\\n && cd $HOME/cmake-3.2.2 \\\n && ./configure --prefix=/usr/local/cmake \\\n && make -j24 \\\n && make install \\\n && cd $HOME \\\n && rm -rf cmake-3.2.2 \\\n && rm -f cmake-3.2.2.tar.gz \\\n && wget http://trilinos.csbsju.edu/download/files/trilinos-$TRILINOS_VER-Source.tar.bz2 \\\n && tar xjvf trilinos-$TRILINOS_VER-Source.tar.bz2 \\\n && mkdir trilinos-$TRILINOS_VER-Source/build \\\n && cd $HOME/trilinos-$TRILINOS_VER-Source/build/ \\\n && /usr/local/cmake/bin/cmake -D CMAKE_INSTALL_PREFIX:PATH=/usr -D MPI_BASE_DIR:PATH=/usr -D CMAKE_BUILD_TYPE:STRING=Release -D CMAKE_Fortran_COMPILER:FILEPATH=/usr/bin/mpif90 -D BUILD_SHARED_LIBS:BOOL=ON -D Trilinos_WARNINGS_AS_ERRORS_FLAGS:STRING=\"\" -D Trilinos_ENABLE_ALL_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_ALL_FORWARD_DEP_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_Teuchos:BOOL=ON -D Trilinos_ENABLE_Epetra:BOOL=ON -D Trilinos_ENABLE_AztecOO:BOOL=ON -D Trilinos_ENABLE_Amesos:BOOL=ON -D Trilinos_ENABLE_PyTrilinos:BOOL=ON -D PyTrilinos_DISABLE_STRONG_WARN:BOOL=OFF -D PyTrilinos_DOCSTRINGS:BOOL=OFF -D PyTrilinos_ENABLE_EXAMPLES:BOOL=OFF -D PyTrilinos_ENABLE_TESTS:BOOL=OFF -D Trilinos_ENABLE_EXAMPLES:BOOL=OFF -D Trilinos_ENABLE_TESTS:BOOL=OFF -D TPL_ENABLE_MATLAB:BOOL=OFF -D TPL_ENABLE_Matio:BOOL=OFF -D TPL_ENABLE_MPI:BOOL=ON -D TPL_ENABLE_BLAS:BOOL=ON -D TPL_ENABLE_LAPACK:BOOL=ON -D TPL_ENABLE_QT:BOOL=OFF -D TPL_ENABLE_X11:BOOL=OFF -D TPL_ENABLE_MPI4PY:BOOL=ON -D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF -D Trilinos_VERBOSE_CONFIGURE:BOOL=OFF .. \\\n && make -j24 \\\n && cd $HOME/trilinos-$TRILINOS_VER-Source/build/packages/PyTrilinos/src/PyTrilinos \\\n && python -m compileall -b -l -f . \\\n && cd $HOME/trilinos-$TRILINOS_VER-Source/build \\\n && make install \\\n && cd $HOME \\\n && rm -rf trilinos-$TRILINOS_VER-Source trilinos-$TRILINOS_VER-Source.tar.bz2\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Authors:\n#  Guilherme Caminha <gpkc@cin.ufpe.br>\nFROM phusion/baseimage\nMAINTAINER Guilherme Caminha <gpkc@cin.ufpe.br>\nENV HOME=\"/home/scientific\"\nENV MOAB_DIR=\"/usr\"\nENV VISIT_DIR=\"/opt/visit\"\nENV MPI_HOME=\"/usr\"\nENV PYTHONPATH=\"/usr/lib/python3.6/site-packages\"\nENV PATH=\"/usr/local/bin:$PATH\"\nENV LANG=\"C.UTF-8\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install wget pkg-config git libopenblas-dev liblapack-dev make cmake autoconf automake libtool clang gcc g++ gfortran libhdf5-mpich-dev libnetcdf-c++4 libeigen3-dev libmetis-dev doxygen liboce-foundation-dev liboce-modeling-dev liboce-ocaf-dev liboce-visualization-dev oce-draw netgen libnglib-dev build-essential bzip2 tar m4 file swig tcl tk libssl-dev -qy \\\n && apt-get clean\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.3\"\n#  Install Python3\nRUN set -ex \\\n && buildDeps=' dpkg-dev tcl-dev tk-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python\n#  make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\nCMD [\"/sbin/my_init\"]\nRUN pip install cython numpy pytest colorlog configobj pytest-runner\n#  Install mpi4py\nWORKDIR $HOME\nRUN cd $HOME \\\n && git clone https://bitbucket.org/mpi4py/mpi4py \\\n && cd $HOME/mpi4py \\\n && python setup.py build \\\n && python setup.py install \\\n && cd $HOME \\\n && rm -rf mpi4py\n#  Install MOAB\nWORKDIR $HOME\nRUN cd $HOME \\\n && git clone https://bitbucket.org/fathomteam/moab.git \\\n && cd $HOME/moab \\\n && autoreconf -fi \\\n && mkdir build \\\n && cd $HOME/moab/build \\\n && ../configure --prefix=$MOAB_DIR --with-mpi=/usr --with-hdf5=/usr/lib/x86_64-linux-gnu/hdf5/mpich --with-netcdf=/usr --with-metis=/usr --enable-optimize --enable-debug --enable-tools --enable-pymoab --enable-shared CFLAGS='-O2 -fPIC -DPIC' CXXFLAGS='-O2 -fPIC -DPIC' FCFLAGS='-O2 -fPIC' FFLAGS='-O2 -fPIC' \\\n && make -j24 \\\n && make install \\\n && cd $HOME/moab/build/pymoab \\\n && python setup.py build \\\n && python setup.py install \\\n && cd $HOME \\\n && rm -rf moab \\\n && echo \"export MOAB_DIR=$MOAB_DIR\" >> $HOME/.bashrc \\\n && echo \"export PATH=$PATH:$MOAB_DIR/bin\" >> $HOME/.bashrc \\\n && echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MOAB_DIR/lib\" >> $HOME/.bashrc\n#  Install Trilinos\nENV TRILINOS_VER=\"12.12.1\"\nENV CPATH=\"/usr/local/include/python3.6m:$CPATH\"\nRUN cd $HOME \\\n && wget http://www.cmake.org/files/v3.2/cmake-3.2.2.tar.gz \\\n && tar xzvf cmake-3.2.2.tar.gz \\\n && cd $HOME/cmake-3.2.2 \\\n && ./configure --prefix=/usr/local/cmake \\\n && make -j24 \\\n && make install \\\n && cd $HOME \\\n && rm -rf cmake-3.2.2 \\\n && rm -f cmake-3.2.2.tar.gz \\\n && wget http://trilinos.csbsju.edu/download/files/trilinos-$TRILINOS_VER-Source.tar.bz2 \\\n && tar xjvf trilinos-$TRILINOS_VER-Source.tar.bz2 \\\n && mkdir trilinos-$TRILINOS_VER-Source/build \\\n && cd $HOME/trilinos-$TRILINOS_VER-Source/build/ \\\n && /usr/local/cmake/bin/cmake -D CMAKE_INSTALL_PREFIX:PATH=/usr -D MPI_BASE_DIR:PATH=/usr -D CMAKE_BUILD_TYPE:STRING=Release -D CMAKE_Fortran_COMPILER:FILEPATH=/usr/bin/mpif90 -D BUILD_SHARED_LIBS:BOOL=ON -D Trilinos_WARNINGS_AS_ERRORS_FLAGS:STRING=\"\" -D Trilinos_ENABLE_ALL_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_ALL_FORWARD_DEP_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_Teuchos:BOOL=ON -D Trilinos_ENABLE_Epetra:BOOL=ON -D Trilinos_ENABLE_AztecOO:BOOL=ON -D Trilinos_ENABLE_Amesos:BOOL=ON -D Trilinos_ENABLE_PyTrilinos:BOOL=ON -D PyTrilinos_DISABLE_STRONG_WARN:BOOL=OFF -D PyTrilinos_DOCSTRINGS:BOOL=OFF -D PyTrilinos_ENABLE_EXAMPLES:BOOL=OFF -D PyTrilinos_ENABLE_TESTS:BOOL=OFF -D Trilinos_ENABLE_EXAMPLES:BOOL=OFF -D Trilinos_ENABLE_TESTS:BOOL=OFF -D TPL_ENABLE_MATLAB:BOOL=OFF -D TPL_ENABLE_Matio:BOOL=OFF -D TPL_ENABLE_MPI:BOOL=ON -D TPL_ENABLE_BLAS:BOOL=ON -D TPL_ENABLE_LAPACK:BOOL=ON -D TPL_ENABLE_QT:BOOL=OFF -D TPL_ENABLE_X11:BOOL=OFF -D TPL_ENABLE_MPI4PY:BOOL=ON -D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF -D Trilinos_VERBOSE_CONFIGURE:BOOL=OFF .. \\\n && make -j24 \\\n && cd $HOME/trilinos-$TRILINOS_VER-Source/build/packages/PyTrilinos/src/PyTrilinos \\\n && python -m compileall -b -l -f . \\\n && cd $HOME/trilinos-$TRILINOS_VER-Source/build \\\n && make install \\\n && cd $HOME \\\n && rm -rf trilinos-$TRILINOS_VER-Source trilinos-$TRILINOS_VER-Source.tar.bz2\n","injectedSmells":[],"originalDockerfileHash":"3d3ffc244ead01ce065f040c11d79cd4","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Authors:\n#   Guilherme Caminha <gpkc@cin.ufpe.br>\nFROM phusion/baseimage\nMAINTAINER Guilherme Caminha <gpkc@cin.ufpe.br>\nENV HOME=\"/home/scientific\"\nENV MOAB_DIR=\"/usr\"\nENV VISIT_DIR=\"/opt/visit\"\nENV MPI_HOME=\"/usr\"\nENV PYTHONPATH=\"/usr/lib/python3.6/site-packages\"\nENV PATH=\"/usr/local/bin:$PATH\"\nENV LANG=\"C.UTF-8\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install wget pkg-config git libopenblas-dev liblapack-dev make cmake autoconf automake libtool clang gcc g++ gfortran libhdf5-mpich-dev libnetcdf-c++4 libeigen3-dev libmetis-dev doxygen liboce-foundation-dev liboce-modeling-dev liboce-ocaf-dev liboce-visualization-dev oce-draw netgen libnglib-dev build-essential bzip2 tar m4 file swig tcl tk libssl-dev -qy \\\n && apt-get clean\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.3\"\n#   Install Python3\nRUN set -ex \\\n && buildDeps=' dpkg-dev tcl-dev tk-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && find /usr/local -depth\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nCMD [\"/sbin/my_init\"]\nRUN pip install cython numpy pytest colorlog configobj pytest-runner\n#   Install mpi4py\nWORKDIR $HOME\nRUN cd $HOME \\\n && git clone https://bitbucket.org/mpi4py/mpi4py \\\n && cd $HOME/mpi4py \\\n && python setup.py build \\\n && python setup.py install \\\n && cd $HOME \\\n && rm -rf mpi4py\n#   Install MOAB\nWORKDIR $HOME\nRUN cd $HOME \\\n && git clone https://bitbucket.org/fathomteam/moab.git \\\n && cd $HOME/moab \\\n && autoreconf -fi \\\n && mkdir build \\\n && cd $HOME/moab/build \\\n && ../configure --prefix=$MOAB_DIR --with-mpi=/usr --with-hdf5=/usr/lib/x86_64-linux-gnu/hdf5/mpich --with-netcdf=/usr --with-metis=/usr --enable-optimize --enable-debug --enable-tools --enable-pymoab --enable-shared CFLAGS='-O2 -fPIC -DPIC' CXXFLAGS='-O2 -fPIC -DPIC' FCFLAGS='-O2 -fPIC' FFLAGS='-O2 -fPIC' \\\n && make -j24 \\\n && make install \\\n && cd $HOME/moab/build/pymoab \\\n && python setup.py build \\\n && python setup.py install \\\n && cd $HOME \\\n && rm -rf moab \\\n && echo \"export MOAB_DIR=$MOAB_DIR\" >> $HOME/.bashrc \\\n && echo \"export PATH=$PATH:$MOAB_DIR/bin\" >> $HOME/.bashrc \\\n && echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MOAB_DIR/lib\" >> $HOME/.bashrc\n#   Install Trilinos\nENV TRILINOS_VER=\"12.12.1\"\nENV CPATH=\"/usr/local/include/python3.6m:$CPATH\"\nRUN cd $HOME \\\n && wget http://www.cmake.org/files/v3.2/cmake-3.2.2.tar.gz \\\n && tar xzvf cmake-3.2.2.tar.gz \\\n && cd $HOME/cmake-3.2.2 \\\n && ./configure --prefix=/usr/local/cmake \\\n && make -j24 \\\n && make install \\\n && cd $HOME \\\n && rm -rf cmake-3.2.2 \\\n && rm -f cmake-3.2.2.tar.gz \\\n && wget http://trilinos.csbsju.edu/download/files/trilinos-$TRILINOS_VER-Source.tar.bz2 \\\n && tar xjvf trilinos-$TRILINOS_VER-Source.tar.bz2 \\\n && mkdir trilinos-$TRILINOS_VER-Source/build \\\n && cd $HOME/trilinos-$TRILINOS_VER-Source/build/ \\\n && /usr/local/cmake/bin/cmake -D CMAKE_INSTALL_PREFIX:PATH=/usr -D MPI_BASE_DIR:PATH=/usr -D CMAKE_BUILD_TYPE:STRING=Release -D CMAKE_Fortran_COMPILER:FILEPATH=/usr/bin/mpif90 -D BUILD_SHARED_LIBS:BOOL=ON -D Trilinos_WARNINGS_AS_ERRORS_FLAGS:STRING=\"\" -D Trilinos_ENABLE_ALL_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_ALL_FORWARD_DEP_PACKAGES:BOOL=OFF -D Trilinos_ENABLE_Teuchos:BOOL=ON -D Trilinos_ENABLE_Epetra:BOOL=ON -D Trilinos_ENABLE_AztecOO:BOOL=ON -D Trilinos_ENABLE_Amesos:BOOL=ON -D Trilinos_ENABLE_PyTrilinos:BOOL=ON -D PyTrilinos_DISABLE_STRONG_WARN:BOOL=OFF -D PyTrilinos_DOCSTRINGS:BOOL=OFF -D PyTrilinos_ENABLE_EXAMPLES:BOOL=OFF -D PyTrilinos_ENABLE_TESTS:BOOL=OFF -D Trilinos_ENABLE_EXAMPLES:BOOL=OFF -D Trilinos_ENABLE_TESTS:BOOL=OFF -D TPL_ENABLE_MATLAB:BOOL=OFF -D TPL_ENABLE_Matio:BOOL=OFF -D TPL_ENABLE_MPI:BOOL=ON -D TPL_ENABLE_BLAS:BOOL=ON -D TPL_ENABLE_LAPACK:BOOL=ON -D TPL_ENABLE_QT:BOOL=OFF -D TPL_ENABLE_X11:BOOL=OFF -D TPL_ENABLE_MPI4PY:BOOL=ON -D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF -D Trilinos_VERBOSE_CONFIGURE:BOOL=OFF .. \\\n && make -j24 \\\n && cd $HOME/trilinos-$TRILINOS_VER-Source/build/packages/PyTrilinos/src/PyTrilinos \\\n && python -m compileall -b -l -f . \\\n && cd $HOME/trilinos-$TRILINOS_VER-Source/build \\\n && make install \\\n && cd $HOME \\\n && rm -rf trilinos-$TRILINOS_VER-Source trilinos-$TRILINOS_VER-Source.tar.bz2\n","originalDockerfileUglifiedHash":"3ad039223bfb0919725d9d61c03c8911","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bfdf8862d6d0b4255574f22606f9aac5dfd00d2e.dockerfile"}