{"seed":3852118765,"processedDockerfileHash":"48773ea0f39349d680c6fa913f023f8f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\n#   Ubuntu 16.04 (xenial)\n#   https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.1/devel/cudnn7/Dockerfile\nFROM nvidia/cuda:9.2-cudnn7-runtime-ubuntu16.04\nMAINTAINER Samir Jabari <samir.jabari@fau.de>\nUSER root\nRUN :\nRUN apt-get dist-upgrade -y\nRUN :\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install python-software-properties --fix-missing\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install software-properties-common --fix-missing\nRUN add-apt-repository ppa:deadsnakes/ppa \\\n && :\n#   Install all OS dependencies for notebook server that starts but lacks all\n#   features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && (apt-get update ;apt-get install --no-install-recommends wget bzip2 ca-certificates sudo locales fonts-liberation python3.6 -yq ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends curl )\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3.6\nRUN ln -sf /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -sf /usr/local/bin/pip /usr/local/bin/pip3\n#   Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"Deep_Learner\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"100\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\nCOPY fix-permissions /usr/local/bin/fix-permissions\n#   Create Deep_Learner user with UID=1000 and in the 'users' group\n#   and make sure these dirs are writable by the `users` group.\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && fix-permissions $HOME \\\n && fix-permissions $CONDA_DIR\nUSER $NB_USER\n#   Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\nRUN mkdir /home/$NB_USER/work/local \\\n && fix-permissions /home/$NB_USER\n#   Install conda as Deep_Learner and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"latest\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#   Install Python, Jupyter Notebook and Hub\nRUN conda install -y 'python=3.6' 'notebook=5.7.2' 'jupyterhub=0.9.4' 'jupyterlab=0.35.4' \\\n && fix-permissions $CONDA_DIR\nRUN conda create -n deep_learning_python3 'python=3.6' 'notebook=5.7.2' 'jupyterlab=0.35.4' \\\n && fix-permissions $CONDA_DIR\nRUN /opt/conda/envs/deep_learning_python3/bin/python -m ipykernel install --user --name deep_learning_python3 --display-name 'Deep Learning Python 3'\nRUN conda create -n deep_learning_python2 'python=2.7' 'notebook' 'jupyterlab' \\\n && fix-permissions $CONDA_DIR\nRUN /opt/conda/envs/deep_learning_python2/bin/python -m ipykernel install --user --name deep_learning_python2 --display-name 'Deep Learning Python 2'\nUSER root\nEXPOSE 8888/tcp\nWORKDIR $HOME\n#   Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\n#  COPY ~/juypterhub/jupyter_notebook_config.py /etc/jupyter/\n#  RUN fix-permissions /etc/jupyter/\n#   Switch back to Deep_Learner to avoid accidental container runs as root\nUSER $NB_USER\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) Jupyter Development Team.\n#  Distributed under the terms of the Modified BSD License.\n#  Ubuntu 16.04 (xenial)\n#  https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.1/devel/cudnn7/Dockerfile\nFROM nvidia/cuda:9.2-cudnn7-runtime-ubuntu16.04\nMAINTAINER Samir Jabari <samir.jabari@fau.de>\nUSER root\nRUN apt-get update\nRUN apt-get dist-upgrade -y\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install python-software-properties --fix-missing\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install software-properties-common --fix-missing\nRUN add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update\n#  Install all OS dependencies for notebook server that starts but lacks all\n#  features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends wget bzip2 ca-certificates sudo locales fonts-liberation python3.6 -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nRUN apt-get update\nRUN apt-get install curl\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3.6\nRUN ln -sf /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -sf /usr/local/bin/pip /usr/local/bin/pip3\n#  Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#  Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"Deep_Learner\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"100\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\nADD fix-permissions /usr/local/bin/fix-permissions\n#  Create Deep_Learner user with UID=1000 and in the 'users' group\n#  and make sure these dirs are writable by the `users` group.\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && fix-permissions $HOME \\\n && fix-permissions $CONDA_DIR\nUSER $NB_USER\n#  Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\nRUN mkdir /home/$NB_USER/work/local \\\n && fix-permissions /home/$NB_USER\n#  Install conda as Deep_Learner and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"latest\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#  Install Python, Jupyter Notebook and Hub\nRUN conda install -y 'python=3.6' 'notebook=5.7.2' 'jupyterhub=0.9.4' 'jupyterlab=0.35.4' \\\n && fix-permissions $CONDA_DIR\nRUN conda create -n deep_learning_python3 'python=3.6' 'notebook=5.7.2' 'jupyterlab=0.35.4' \\\n && fix-permissions $CONDA_DIR\nRUN /opt/conda/envs/deep_learning_python3/bin/python -m ipykernel install --user --name deep_learning_python3 --display-name 'Deep Learning Python 3'\nRUN conda create -n deep_learning_python2 'python=2.7' 'notebook' 'jupyterlab' \\\n && fix-permissions $CONDA_DIR\nRUN /opt/conda/envs/deep_learning_python2/bin/python -m ipykernel install --user --name deep_learning_python2 --display-name 'Deep Learning Python 2'\nUSER root\nEXPOSE 8888/tcp\nWORKDIR $HOME\n#  Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#  Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\n# COPY ~/juypterhub/jupyter_notebook_config.py /etc/jupyter/\n# RUN fix-permissions /etc/jupyter/\n#  Switch back to Deep_Learner to avoid accidental container runs as root\nUSER $NB_USER\n","injectedSmells":[],"originalDockerfileHash":"2a248a4994878aa2f637d5e8e59aaaed","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\n#   Ubuntu 16.04 (xenial)\n#   https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/9.1/devel/cudnn7/Dockerfile\nFROM nvidia/cuda:9.2-cudnn7-runtime-ubuntu16.04\nMAINTAINER Samir Jabari <samir.jabari@fau.de>\nUSER root\nRUN apt-get update\nRUN apt-get dist-upgrade -y\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install python-software-properties --fix-missing\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install software-properties-common --fix-missing\nRUN add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update\n#   Install all OS dependencies for notebook server that starts but lacks all\n#   features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends wget bzip2 ca-certificates sudo locales fonts-liberation python3.6 -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nRUN apt-get update\nRUN apt-get install curl\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3.6\nRUN ln -sf /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -sf /usr/local/bin/pip /usr/local/bin/pip3\n#   Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini \\\n && echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"Deep_Learner\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"100\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\nADD fix-permissions /usr/local/bin/fix-permissions\n#   Create Deep_Learner user with UID=1000 and in the 'users' group\n#   and make sure these dirs are writable by the `users` group.\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && fix-permissions $HOME \\\n && fix-permissions $CONDA_DIR\nUSER $NB_USER\n#   Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\nRUN mkdir /home/$NB_USER/work/local \\\n && fix-permissions /home/$NB_USER\n#   Install conda as Deep_Learner and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"latest\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#   Install Python, Jupyter Notebook and Hub\nRUN conda install -y 'python=3.6' 'notebook=5.7.2' 'jupyterhub=0.9.4' 'jupyterlab=0.35.4' \\\n && fix-permissions $CONDA_DIR\nRUN conda create -n deep_learning_python3 'python=3.6' 'notebook=5.7.2' 'jupyterlab=0.35.4' \\\n && fix-permissions $CONDA_DIR\nRUN /opt/conda/envs/deep_learning_python3/bin/python -m ipykernel install --user --name deep_learning_python3 --display-name 'Deep Learning Python 3'\nRUN conda create -n deep_learning_python2 'python=2.7' 'notebook' 'jupyterlab' \\\n && fix-permissions $CONDA_DIR\nRUN /opt/conda/envs/deep_learning_python2/bin/python -m ipykernel install --user --name deep_learning_python2 --display-name 'Deep Learning Python 2'\nUSER root\nEXPOSE 8888/tcp\nWORKDIR $HOME\n#   Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\n#  COPY ~/juypterhub/jupyter_notebook_config.py /etc/jupyter/\n#  RUN fix-permissions /etc/jupyter/\n#   Switch back to Deep_Learner to avoid accidental container runs as root\nUSER $NB_USER\n","originalDockerfileUglifiedHash":"859a84878d17d7dd481d503600420288","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0b62aa4d421b03eadf60fac80271dd8a7f7a474c.dockerfile"}