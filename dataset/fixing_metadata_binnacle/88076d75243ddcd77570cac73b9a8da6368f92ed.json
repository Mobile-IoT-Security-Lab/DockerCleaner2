{"seed":1565292797,"processedDockerfileHash":"6ffd65734b38ad6eca141eb519a6fabe","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   © Copyright IBM Corporation 2017, 2019\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  ############################# Dockerfile for Magento version 2.3.1 ###################################\n#\n#   Magento is an open-source e-commerce platform written in PHP.\n#\n#   To build Magento image from the directory containing this Dockerfile\n#   \n#   docker build -t <image_name> .\n#\n#   To start Magento server run the below command\n#   docker run --name <container_name> -p <port_number>:80 -p <port_number_mysql>:3306 -d <image_name>\n#\n#   We can view the Magento UI at http://<Magento_host_IP>:<Port_number>/magento2/setup\n#\n#  ##############################################################################################\n#   Base Image\nFROM s390x/ubuntu:18.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG MAGENTO_VER=2.3.1\nARG MYSQL_PASSWD=temp_pass\n#   Install dependencies\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apache2 composer git gzip libapache2-mod-php libssl-dev lsof mysql-server php7.2 php7.2-bcmath php7.2-curl php7.2-gd php7.2-intl php7.2-mbstring php7.2-mysql php7.2-soap php7.2-xml php7.2-xsl php7.2-zip sed tar unzip -y \\\n && chmod 766 /etc/apache2/apache2.conf \\\n && echo \"ServerName localhost\" >> /etc/apache2/apache2.conf \\\n && echo '<Directory \"/var/www/html\">' >> /etc/apache2/apache2.conf \\\n && echo \"AllowOverride All\" >> /etc/apache2/apache2.conf \\\n && echo \"</Directory>\" >> /etc/apache2/apache2.conf \\\n && a2enmod rewrite \\\n && a2enmod php7.2 \\\n && cd /var/www/html/ \\\n && chmod -R a+w /var/www/html/ \\\n && git clone https://github.com/magento/magento2.git \\\n && cd magento2 \\\n && git checkout $MAGENTO_VER \\\n && composer install --no-plugins --no-scripts \\\n && cd /var/www/html/magento2 \\\n && find var vendor pub/static pub/media app/etc -type f -exec chmod g+w {}\n#   Create volume\nVOLUME /var/www/html /var/lib/mysql\n#   Expose port for mysql and apache2\nEXPOSE 80/tcp 3306/tcp\n#   Start mysql and apache2 server\nENTRYPOINT service mysql start \\\n && apache2ctl -D FOREGROUND\n#   End of Dockerfile\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  © Copyright IBM Corporation 2017, 2019\n#  LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n# ############################# Dockerfile for Magento version 2.3.1 ###################################\n#\n#  Magento is an open-source e-commerce platform written in PHP.\n#\n#  To build Magento image from the directory containing this Dockerfile\n#  \n#  docker build -t <image_name> .\n#\n#  To start Magento server run the below command\n#  docker run --name <container_name> -p <port_number>:80 -p <port_number_mysql>:3306 -d <image_name>\n#\n#  We can view the Magento UI at http://<Magento_host_IP>:<Port_number>/magento2/setup\n#\n# ##############################################################################################\n#  Base Image\nFROM s390x/ubuntu:18.04\n#  The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG MAGENTO_VER=2.3.1\nARG MYSQL_PASSWD=temp_pass\n#  Install dependencies\nRUN apt-get update -y \\\n && apt-get install apache2 composer git gzip libapache2-mod-php libssl-dev lsof mysql-server php7.2 php7.2-bcmath php7.2-curl php7.2-gd php7.2-intl php7.2-mbstring php7.2-mysql php7.2-soap php7.2-xml php7.2-xsl php7.2-zip sed tar unzip -y \\\n && chmod 766 /etc/apache2/apache2.conf \\\n && echo \"ServerName localhost\" >> /etc/apache2/apache2.conf \\\n && echo '<Directory \"/var/www/html\">' >> /etc/apache2/apache2.conf \\\n && echo \"AllowOverride All\" >> /etc/apache2/apache2.conf \\\n && echo \"</Directory>\" >> /etc/apache2/apache2.conf \\\n && a2enmod rewrite \\\n && a2enmod php7.2 \\\n && cd /var/www/html/ \\\n && chmod -R a+w /var/www/html/ \\\n && git clone https://github.com/magento/magento2.git \\\n && cd magento2 \\\n && git checkout $MAGENTO_VER \\\n && composer install --no-plugins --no-scripts \\\n && cd /var/www/html/magento2 \\\n && find var vendor pub/static pub/media app/etc -type f -exec chmod g+w {} ; \\\n && find var vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} ; \\\n && chown -R :www-data . \\\n && chmod u+x bin/magento \\\n && chmod g+wsx generated/ \\\n && chmod g+wsx generated/.htaccess \\\n && service mysql start \\\n && mysql -e \"CREATE USER magento IDENTIFIED BY 'magento';\" \\\n && mysql -e \"CREATE DATABASE magento;\" \\\n && mysql -e \"GRANT ALL ON magento.* TO 'magento';\" \\\n && mysql -e \"FLUSH PRIVILEGES;\" \\\n && mysql -e \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '$MYSQL_PASSWD';\" \\\n && apt-get remove -y git unzip wget \\\n && apt-get autoremove -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Create volume\nVOLUME /var/www/html /var/lib/mysql\n#  Expose port for mysql and apache2\nEXPOSE 80/tcp 3306/tcp\n#  Start mysql and apache2 server\nENTRYPOINT service mysql start \\\n && apache2ctl -D FOREGROUND\n#  End of Dockerfile\n","injectedSmells":[],"originalDockerfileHash":"ab9bb9cfc9da7d39c490190f5d4c78fd","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   © Copyright IBM Corporation 2017, 2019\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  ############################# Dockerfile for Magento version 2.3.1 ###################################\n#\n#   Magento is an open-source e-commerce platform written in PHP.\n#\n#   To build Magento image from the directory containing this Dockerfile\n#   \n#   docker build -t <image_name> .\n#\n#   To start Magento server run the below command\n#   docker run --name <container_name> -p <port_number>:80 -p <port_number_mysql>:3306 -d <image_name>\n#\n#   We can view the Magento UI at http://<Magento_host_IP>:<Port_number>/magento2/setup\n#\n#  ##############################################################################################\n#   Base Image\nFROM s390x/ubuntu:18.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG MAGENTO_VER=2.3.1\nARG MYSQL_PASSWD=temp_pass\n#   Install dependencies\nRUN apt-get update -y \\\n && apt-get install apache2 composer git gzip libapache2-mod-php libssl-dev lsof mysql-server php7.2 php7.2-bcmath php7.2-curl php7.2-gd php7.2-intl php7.2-mbstring php7.2-mysql php7.2-soap php7.2-xml php7.2-xsl php7.2-zip sed tar unzip -y \\\n && chmod 766 /etc/apache2/apache2.conf \\\n && echo \"ServerName localhost\" >> /etc/apache2/apache2.conf \\\n && echo '<Directory \"/var/www/html\">' >> /etc/apache2/apache2.conf \\\n && echo \"AllowOverride All\" >> /etc/apache2/apache2.conf \\\n && echo \"</Directory>\" >> /etc/apache2/apache2.conf \\\n && a2enmod rewrite \\\n && a2enmod php7.2 \\\n && cd /var/www/html/ \\\n && chmod -R a+w /var/www/html/ \\\n && git clone https://github.com/magento/magento2.git \\\n && cd magento2 \\\n && git checkout $MAGENTO_VER \\\n && composer install --no-plugins --no-scripts \\\n && cd /var/www/html/magento2 \\\n && find var vendor pub/static pub/media app/etc -type f -exec chmod g+w {}\n#   Create volume\nVOLUME /var/www/html /var/lib/mysql\n#   Expose port for mysql and apache2\nEXPOSE 80/tcp 3306/tcp\n#   Start mysql and apache2 server\nENTRYPOINT service mysql start \\\n && apache2ctl -D FOREGROUND\n#   End of Dockerfile\n","originalDockerfileUglifiedHash":"9e4bfa8981aebd87748dfc8cf333b1d8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/88076d75243ddcd77570cac73b9a8da6368f92ed.dockerfile"}