{"seed":1670137024,"processedDockerfileHash":"7d874726725e4ca1fe7f79c3a3fbdd3a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"FROM amd64/node:10.16.0-alpine@sha256:f59303fb3248e5d992586c76cc83e1d3700f641cbcd7c0067bc7ad5bb2e5b489 AS tsbuild\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install\nCOPY lib lib\nCOPY tsconfig.json tsconfig.json\nCOPY tsconfig.app.json tsconfig.app.json\nRUN yarn build\nFROM amd64/ubuntu:18.04@sha256:eb70667a801686f914408558660da753cde27192cd036148e58258819b927395\nLABEL maintainer=\"Rhys Arkins <rhys@arkins.net>\"\nLABEL name=\"renovate\"\nLABEL org.opencontainers.image.source=\"https://github.com/renovatebot/renovate\"\nWORKDIR /usr/src/app/\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends gpg curl wget unzip xz-utils git openssh-client bsdtar -y \\\n && apt-get clean -y\n#  # Gradle\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk gradle -y \\\n && apt-get clean -y\n#  # Node.js\n#   START copy Node.js from https://github.com/nodejs/docker-node/blob/master/10/jessie/Dockerfile\nENV NODE_VERSION=\"10.16.0\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && bsdtar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#  # END copy Node.js\n#   PHP Composer\nRUN apt-get update \\\n && apt-get install --no-install-recommends php-cli php-mbstring -y \\\n && apt-get clean\nENV COMPOSER_VERSION=\"1.8.6\"\nRUN php -r \"copy('https://github.com/composer/composer/releases/download/$COMPOSER_VERSION/composer.phar', '/usr/local/bin/composer');\"\nRUN chmod +x /usr/local/bin/composer\n#   Go Modules\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzr -y \\\n && apt-get clean\nENV GOLANG_VERSION=\"1.12\"\nRUN wget -q -O go.tgz \"https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz\" \\\n && tar -C /usr/local -xzf go.tgz \\\n && rm go.tgz \\\n && export PATH=\"/usr/local/go/bin:$PATH\"\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$PATH\"\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \\\n && chmod -R 777 \"$GOPATH\"\nENV CGO_ENABLED=\"0\"\n#   Python\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3.7-dev python3-distutils -y \\\n && apt-get clean\nRUN rm -fr /usr/bin/python3 \\\n && ln /usr/bin/python3.7 /usr/bin/python3\nRUN rm -rf /usr/bin/python \\\n && ln /usr/bin/python3.7 /usr/bin/python\n#   Pip\nRUN curl --silent https://bootstrap.pypa.io/get-pip.py | python\n#   Set up ubuntu user\nRUN groupadd --gid 1000 ubuntu \\\n && useradd --uid 1000 --gid ubuntu --shell /bin/bash --create-home ubuntu\nRUN chmod -R a+rw /usr\n#   Docker client and group\nRUN groupadd -g 999 docker\nRUN usermod -aG docker ubuntu\nENV DOCKER_VERSION=\"18.09.2\"\nRUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n && tar xzvf docker-${DOCKER_VERSION}.tgz --strip 1 -C /usr/local/bin docker/docker \\\n && rm docker-${DOCKER_VERSION}.tgz\nUSER ubuntu\n#   Pipenv\nENV PATH=\"/home/ubuntu/.local/bin:$PATH\"\nRUN pip install pipenv==2023.3.20 --user\n#   Poetry\nRUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\nENV PATH=\"/home/ubuntu/.poetry/bin:$PATH\"\nRUN poetry config settings.virtualenvs.create false\n#   npm\nENV NPM_VERSION=\"6.9.0\"\nRUN npm install npm@$NPM_VERSION -g\n#   Yarn\nENV YARN_VERSION=\"1.16.0\"\nRUN curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}\nENV PATH=\"/home/ubuntu/.yarn/bin:/home/ubuntu/.config/yarn/global/node_modules/.bin:$PATH\"\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install --production \\\n && yarn cache clean\nCOPY --from=tsbuild dist dist\nCOPY bin bin\nCOPY data data\nENTRYPOINT [\"node\", \"/usr/src/app/dist/renovate.js\"]\nCMD []\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM amd64/node:10.16.0-alpine@sha256:f59303fb3248e5d992586c76cc83e1d3700f641cbcd7c0067bc7ad5bb2e5b489 AS tsbuild\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install\nCOPY lib lib\nCOPY tsconfig.json tsconfig.json\nCOPY tsconfig.app.json tsconfig.app.json\nRUN yarn build\nFROM amd64/ubuntu:18.04@sha256:eb70667a801686f914408558660da753cde27192cd036148e58258819b927395\nLABEL maintainer=\"Rhys Arkins <rhys@arkins.net>\"\nLABEL name=\"renovate\"\nLABEL org.opencontainers.image.source=\"https://github.com/renovatebot/renovate\"\nWORKDIR /usr/src/app/\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install gpg curl wget unzip xz-utils git openssh-client bsdtar -y \\\n && apt-get clean -y\n# # Gradle\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk gradle -y \\\n && apt-get clean -y\n# # Node.js\n#  START copy Node.js from https://github.com/nodejs/docker-node/blob/master/10/jessie/Dockerfile\nENV NODE_VERSION=\"10.16.0\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && bsdtar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n# # END copy Node.js\n#  PHP Composer\nRUN apt-get update \\\n && apt-get install php-cli php-mbstring -y \\\n && apt-get clean\nENV COMPOSER_VERSION=\"1.8.6\"\nRUN php -r \"copy('https://github.com/composer/composer/releases/download/$COMPOSER_VERSION/composer.phar', '/usr/local/bin/composer');\"\nRUN chmod +x /usr/local/bin/composer\n#  Go Modules\nRUN apt-get update \\\n && apt-get install bzr -y \\\n && apt-get clean\nENV GOLANG_VERSION=\"1.12\"\nRUN wget -q -O go.tgz \"https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz\" \\\n && tar -C /usr/local -xzf go.tgz \\\n && rm go.tgz \\\n && export PATH=\"/usr/local/go/bin:$PATH\"\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$PATH\"\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \\\n && chmod -R 777 \"$GOPATH\"\nENV CGO_ENABLED=\"0\"\n#  Python\nRUN apt-get update \\\n && apt-get install python3.7-dev python3-distutils -y \\\n && apt-get clean\nRUN rm -fr /usr/bin/python3 \\\n && ln /usr/bin/python3.7 /usr/bin/python3\nRUN rm -rf /usr/bin/python \\\n && ln /usr/bin/python3.7 /usr/bin/python\n#  Pip\nRUN curl --silent https://bootstrap.pypa.io/get-pip.py | python\n#  Set up ubuntu user\nRUN groupadd --gid 1000 ubuntu \\\n && useradd --uid 1000 --gid ubuntu --shell /bin/bash --create-home ubuntu\nRUN chmod -R a+rw /usr\n#  Docker client and group\nRUN groupadd -g 999 docker\nRUN usermod -aG docker ubuntu\nENV DOCKER_VERSION=\"18.09.2\"\nRUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n && tar xzvf docker-${DOCKER_VERSION}.tgz --strip 1 -C /usr/local/bin docker/docker \\\n && rm docker-${DOCKER_VERSION}.tgz\nUSER ubuntu\n#  Pipenv\nENV PATH=\"/home/ubuntu/.local/bin:$PATH\"\nRUN pip install pipenv --user\n#  Poetry\nRUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\nENV PATH=\"/home/ubuntu/.poetry/bin:$PATH\"\nRUN poetry config settings.virtualenvs.create false\n#  npm\nENV NPM_VERSION=\"6.9.0\"\nRUN npm install npm@$NPM_VERSION -g\n#  Yarn\nENV YARN_VERSION=\"1.16.0\"\nRUN curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}\nENV PATH=\"/home/ubuntu/.yarn/bin:/home/ubuntu/.config/yarn/global/node_modules/.bin:$PATH\"\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install --production \\\n && yarn cache clean\nCOPY --from=tsbuild dist dist\nCOPY bin bin\nCOPY data data\nENTRYPOINT [\"node\", \"/usr/src/app/dist/renovate.js\"]\nCMD []\n","injectedSmells":[],"originalDockerfileHash":"ddb5cefb6d15e4534b60e51f638c44c0","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM amd64/node:10.16.0-alpine@sha256:f59303fb3248e5d992586c76cc83e1d3700f641cbcd7c0067bc7ad5bb2e5b489 AS tsbuild\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install\nCOPY lib lib\nCOPY tsconfig.json tsconfig.json\nCOPY tsconfig.app.json tsconfig.app.json\nRUN yarn build\nFROM amd64/ubuntu:18.04@sha256:eb70667a801686f914408558660da753cde27192cd036148e58258819b927395\nLABEL maintainer=\"Rhys Arkins <rhys@arkins.net>\"\nLABEL name=\"renovate\"\nLABEL org.opencontainers.image.source=\"https://github.com/renovatebot/renovate\"\nWORKDIR /usr/src/app/\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install gpg curl wget unzip xz-utils git openssh-client bsdtar -y \\\n && apt-get clean -y\n#  # Gradle\nRUN apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jdk gradle -y \\\n && apt-get clean -y\n#  # Node.js\n#   START copy Node.js from https://github.com/nodejs/docker-node/blob/master/10/jessie/Dockerfile\nENV NODE_VERSION=\"10.16.0\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && bsdtar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#  # END copy Node.js\n#   PHP Composer\nRUN apt-get update \\\n && apt-get install php-cli php-mbstring -y \\\n && apt-get clean\nENV COMPOSER_VERSION=\"1.8.6\"\nRUN php -r \"copy('https://github.com/composer/composer/releases/download/$COMPOSER_VERSION/composer.phar', '/usr/local/bin/composer');\"\nRUN chmod +x /usr/local/bin/composer\n#   Go Modules\nRUN apt-get update \\\n && apt-get install bzr -y \\\n && apt-get clean\nENV GOLANG_VERSION=\"1.12\"\nRUN wget -q -O go.tgz \"https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz\" \\\n && tar -C /usr/local -xzf go.tgz \\\n && rm go.tgz \\\n && export PATH=\"/usr/local/go/bin:$PATH\"\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$PATH\"\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \\\n && chmod -R 777 \"$GOPATH\"\nENV CGO_ENABLED=\"0\"\n#   Python\nRUN apt-get update \\\n && apt-get install python3.7-dev python3-distutils -y \\\n && apt-get clean\nRUN rm -fr /usr/bin/python3 \\\n && ln /usr/bin/python3.7 /usr/bin/python3\nRUN rm -rf /usr/bin/python \\\n && ln /usr/bin/python3.7 /usr/bin/python\n#   Pip\nRUN curl --silent https://bootstrap.pypa.io/get-pip.py | python\n#   Set up ubuntu user\nRUN groupadd --gid 1000 ubuntu \\\n && useradd --uid 1000 --gid ubuntu --shell /bin/bash --create-home ubuntu\nRUN chmod -R a+rw /usr\n#   Docker client and group\nRUN groupadd -g 999 docker\nRUN usermod -aG docker ubuntu\nENV DOCKER_VERSION=\"18.09.2\"\nRUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n && tar xzvf docker-${DOCKER_VERSION}.tgz --strip 1 -C /usr/local/bin docker/docker \\\n && rm docker-${DOCKER_VERSION}.tgz\nUSER ubuntu\n#   Pipenv\nENV PATH=\"/home/ubuntu/.local/bin:$PATH\"\nRUN pip install pipenv --user\n#   Poetry\nRUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\nENV PATH=\"/home/ubuntu/.poetry/bin:$PATH\"\nRUN poetry config settings.virtualenvs.create false\n#   npm\nENV NPM_VERSION=\"6.9.0\"\nRUN npm install npm@$NPM_VERSION -g\n#   Yarn\nENV YARN_VERSION=\"1.16.0\"\nRUN curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}\nENV PATH=\"/home/ubuntu/.yarn/bin:/home/ubuntu/.config/yarn/global/node_modules/.bin:$PATH\"\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install --production \\\n && yarn cache clean\nCOPY --from=tsbuild dist dist\nCOPY bin bin\nCOPY data data\nENTRYPOINT [\"node\", \"/usr/src/app/dist/renovate.js\"]\nCMD []\n","originalDockerfileUglifiedHash":"ca3a143c6d6c36691de41faf37d3cc7e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/64cb8f1a49ba97c3eb82b8500abd97bd793cc890.dockerfile"}