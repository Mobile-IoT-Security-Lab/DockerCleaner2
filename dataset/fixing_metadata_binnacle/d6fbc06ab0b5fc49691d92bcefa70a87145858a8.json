{"seed":2742707012,"processedDockerfileHash":"57a34fa381f56d43ac4738dc133f1bec","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Leandro Barbosa <leandrobar93@gmail.com>\nWORKDIR /build\n#   Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && (apt-get update ;apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 mercurial=3.7.3-1ubuntu1.2 xvfb=2:1.18.4-0ubuntu0.12 locales=2.23-0ubuntu11.3 sudo=1.8.16-0ubuntu1.10 openssh-client=1:7.2p2-4ubuntu2.10 ca-certificates=20210119~16.04.1 tar=1.28-2.1ubuntu0.2 gzip=1.6-4ubuntu1 parallel=20161222-1~ubuntu0.16.04.1 net-tools=1.60-26ubuntu1 netcat=1.10-41 unzip=6.0-20ubuntu1.1 zip=3.0-11 bzip2=1.0.6-8ubuntu0.2 gnupg=1.4.20-1ubuntu3.3 curl=7.47.0-1ubuntu2.19 wget=1.17.1-1ubuntu1.5 -y )\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=12.1ubuntu2 chrpath=0.16-1 libssl-dev=1.0.2g-1ubuntu4.20 libxft-dev=2.3.2-1 -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends libfreetype6=2.6.1-0.1ubuntu2.5 libfreetype6-dev=2.6.1-0.1ubuntu2.5 apt-transport-https=1.2.35 git=1:2.7.4-0ubuntu1.10 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libfontconfig1=2.11.94-0ubuntu1.1 libfontconfig1-dev=2.11.94-0ubuntu1.1 -y )\n#   openssl 1.1.0\nRUN wget https://www.openssl.org/source/openssl-1.1.0.tar.gz \\\n && tar xvzf openssl-1.1.0.tar.gz \\\n && cd openssl-1.1.0 \\\n && ./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' \\\n && make \\\n && make install \\\n && ln -s /usr/local/lib/libcrypto.so.1.1 /usr/lib/ \\\n && rm /usr/bin/openssl \\\n && ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl\n#   parity 1.9.0\nRUN wget -q https://parity-downloads-mirror.parity.io/v1.9.0/x86_64-unknown-linux-gnu/parity_1.9.0_amd64.deb \\\n && dpkg -i parity_1.9.0_amd64.deb\n#   nodejs\nRUN apt-get autoremove -y nodejs\nRUN curl -sL https://deb.nodesource.com/setup_9.x | bash -\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 -y )\n#   yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends yarn )\n#   install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   install java 8\n#\nRUN if grep -q Debian /etc/os-release \\\n && grep -q jessie /etc/os-release ; then echo \"deb http://http.us.debian.org/debian/ jessie-backports main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb-src http://http.us.debian.org/debian/ jessie-backports main\" | tee -a /etc/apt/sources.list \\\n && : ;apt install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless ; elif grep -q Ubuntu /etc/os-release \\\n && grep -q Trusty /etc/os-release ; then echo \"deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb-src http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n && : ;apt install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless ; else apt update ;apt install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless ; fi\n#  # install phantomjs\n#\nRUN PHANTOMJS_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/phantomjs-latest.tar.bz2\" \\\n && (apt-get update ;apt-get install --no-install-recommends libfontconfig ) \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n && tar -x -C /tmp -f /tmp/phantomjs.tar.bz2 \\\n && mv /tmp/phantomjs-*-linux-x86_64/bin/phantomjs /usr/local/bin \\\n && rm -rf /tmp/phantomjs.tar.bz2 /tmp/phantomjs-* \\\n && phantomjs --version\n#   install firefox\n#   If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n#   selenium. See https://github.com/SeleniumHQ/selenium/issues/2559#issuecomment-237079591\nRUN FIREFOX_URL=\"https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.deb $FIREFOX_URL \\\n && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb /tmp/firefox.deb' | sha256sum -c \\\n && dpkg -i /tmp/firefox.deb || apt -f install \\\n && (apt-get update ;apt-get install --no-install-recommends libgtk3.0-cil-dev=2.99.3-2 libasound2=1.1.0-0ubuntu1 libasound2=1.1.0-0ubuntu1 libdbus-glib-1-2=0.106-1 libdbus-1-3=1.10.6-1ubuntu3.6 -y ) \\\n && rm -rf /tmp/firefox.deb \\\n && firefox --version\n#   install geckodriver\nRUN export GECKODRIVER_LATEST_RELEASE_URL=$( curl https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\" ;) \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n && cd /tmp \\\n && tar xf geckodriver_linux64.tar.gz \\\n && rm -rf geckodriver_linux64.tar.gz \\\n && mv geckodriver /usr/local/bin/geckodriver \\\n && chmod +x /usr/local/bin/geckodriver \\\n && geckodriver --version\n#   install chrome\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n && (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt -fy install ) \\\n && rm -rf /tmp/google-chrome-stable_current_amd64.deb \\\n && sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \"/opt/google/chrome/google-chrome\" \\\n && google-chrome --version\nRUN export CHROMEDRIVER_RELEASE=$( curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE ;) \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip\" \\\n && cd /tmp \\\n && unzip chromedriver_linux64.zip \\\n && rm -rf chromedriver_linux64.zip \\\n && mv chromedriver /usr/local/bin/chromedriver \\\n && chmod +x /usr/local/bin/chromedriver \\\n && chromedriver --version\n#   start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY=\":99\"\nRUN printf '#!/bin/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > /tmp/entrypoint \\\n && chmod +x /tmp/entrypoint\n#   install paratii-db\nRUN mkdir /root/.ssh/\nCOPY id_rsa /root/.ssh/id_rsa\nRUN touch /root/.ssh/known_hosts\nRUN ssh-keyscan github.com >> /root/.ssh/known_hosts\nWORKDIR /paratii-db\nRUN git clone git@github.com:Paratii-Video/paratii-db.git\nRUN cd paratii-db \\\n && npm install\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Leandro Barbosa <leandrobar93@gmail.com>\nWORKDIR /build\n#  Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#  Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install git mercurial xvfb locales sudo openssh-client ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget -y\nRUN apt-get update\nRUN apt-get install build-essential chrpath libssl-dev libxft-dev -y \\\n && apt-get install libfreetype6 libfreetype6-dev apt-transport-https git -y\nRUN apt-get install libfontconfig1 libfontconfig1-dev -y\n#  openssl 1.1.0\nRUN wget https://www.openssl.org/source/openssl-1.1.0.tar.gz \\\n && tar xvzf openssl-1.1.0.tar.gz \\\n && cd openssl-1.1.0 \\\n && ./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' \\\n && make \\\n && make install \\\n && ln -s /usr/local/lib/libcrypto.so.1.1 /usr/lib/ \\\n && rm /usr/bin/openssl \\\n && ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl\n#  parity 1.9.0\nRUN wget -q https://parity-downloads-mirror.parity.io/v1.9.0/x86_64-unknown-linux-gnu/parity_1.9.0_amd64.deb \\\n && dpkg -i parity_1.9.0_amd64.deb\n#  nodejs\nRUN apt-get autoremove -y nodejs\nRUN curl -sL https://deb.nodesource.com/setup_9.x | bash -\nRUN apt-get install nodejs -y\n#  yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update\nRUN apt-get install yarn\n#  install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#  install java 8\n#\nRUN if grep -q Debian /etc/os-release \\\n && grep -q jessie /etc/os-release ; then echo \"deb http://http.us.debian.org/debian/ jessie-backports main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb-src http://http.us.debian.org/debian/ jessie-backports main\" | tee -a /etc/apt/sources.list \\\n && apt-get update ;apt install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless ; elif grep -q Ubuntu /etc/os-release \\\n && grep -q Trusty /etc/os-release ; then echo \"deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb-src http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n && apt-get update ;apt install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless ; else apt update ;apt install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless ; fi\n# # install phantomjs\n#\nRUN PHANTOMJS_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/phantomjs-latest.tar.bz2\" \\\n && apt-get install libfontconfig \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n && tar -x -C /tmp -f /tmp/phantomjs.tar.bz2 \\\n && mv /tmp/phantomjs-*-linux-x86_64/bin/phantomjs /usr/local/bin \\\n && rm -rf /tmp/phantomjs.tar.bz2 /tmp/phantomjs-* \\\n && phantomjs --version\n#  install firefox\n#  If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n#  selenium. See https://github.com/SeleniumHQ/selenium/issues/2559#issuecomment-237079591\nRUN FIREFOX_URL=\"https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.deb $FIREFOX_URL \\\n && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb /tmp/firefox.deb' | sha256sum -c \\\n && dpkg -i /tmp/firefox.deb || apt -f install \\\n && apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n && rm -rf /tmp/firefox.deb \\\n && firefox --version\n#  install geckodriver\nRUN export GECKODRIVER_LATEST_RELEASE_URL=$( curl https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\" ;) \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n && cd /tmp \\\n && tar xf geckodriver_linux64.tar.gz \\\n && rm -rf geckodriver_linux64.tar.gz \\\n && mv geckodriver /usr/local/bin/geckodriver \\\n && chmod +x /usr/local/bin/geckodriver \\\n && geckodriver --version\n#  install chrome\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n && (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt -fy install ) \\\n && rm -rf /tmp/google-chrome-stable_current_amd64.deb \\\n && sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \"/opt/google/chrome/google-chrome\" \\\n && google-chrome --version\nRUN export CHROMEDRIVER_RELEASE=$( curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE ;) \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip\" \\\n && cd /tmp \\\n && unzip chromedriver_linux64.zip \\\n && rm -rf chromedriver_linux64.zip \\\n && mv chromedriver /usr/local/bin/chromedriver \\\n && chmod +x /usr/local/bin/chromedriver \\\n && chromedriver --version\n#  start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY=\":99\"\nRUN printf '#!/bin/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > /tmp/entrypoint \\\n && chmod +x /tmp/entrypoint\n#  install paratii-db\nRUN mkdir /root/.ssh/\nADD id_rsa /root/.ssh/id_rsa\nRUN touch /root/.ssh/known_hosts\nRUN ssh-keyscan github.com >> /root/.ssh/known_hosts\nWORKDIR /paratii-db\nRUN git clone git@github.com:Paratii-Video/paratii-db.git\nRUN cd paratii-db \\\n && npm install\n","injectedSmells":[],"originalDockerfileHash":"5598b31079414bbf8a24471fa37a6344","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Leandro Barbosa <leandrobar93@gmail.com>\nWORKDIR /build\n#   Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install git mercurial xvfb locales sudo openssh-client ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget -y\nRUN apt-get update\nRUN apt-get install build-essential chrpath libssl-dev libxft-dev -y \\\n && apt-get install libfreetype6 libfreetype6-dev apt-transport-https git -y\nRUN apt-get install libfontconfig1 libfontconfig1-dev -y\n#   openssl 1.1.0\nRUN wget https://www.openssl.org/source/openssl-1.1.0.tar.gz \\\n && tar xvzf openssl-1.1.0.tar.gz \\\n && cd openssl-1.1.0 \\\n && ./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' \\\n && make \\\n && make install \\\n && ln -s /usr/local/lib/libcrypto.so.1.1 /usr/lib/ \\\n && rm /usr/bin/openssl \\\n && ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl\n#   parity 1.9.0\nRUN wget -q https://parity-downloads-mirror.parity.io/v1.9.0/x86_64-unknown-linux-gnu/parity_1.9.0_amd64.deb \\\n && dpkg -i parity_1.9.0_amd64.deb\n#   nodejs\nRUN apt-get autoremove -y nodejs\nRUN curl -sL https://deb.nodesource.com/setup_9.x | bash -\nRUN apt-get install nodejs -y\n#   yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update\nRUN apt-get install yarn\n#   install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   install java 8\n#\nRUN if grep -q Debian /etc/os-release \\\n && grep -q jessie /etc/os-release ; then echo \"deb http://http.us.debian.org/debian/ jessie-backports main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb-src http://http.us.debian.org/debian/ jessie-backports main\" | tee -a /etc/apt/sources.list \\\n && apt-get update ;apt install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless ; elif grep -q Ubuntu /etc/os-release \\\n && grep -q Trusty /etc/os-release ; then echo \"deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb-src http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n && apt-get update ;apt install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless ; else apt update ;apt install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless ; fi\n#  # install phantomjs\n#\nRUN PHANTOMJS_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/phantomjs-latest.tar.bz2\" \\\n && apt-get install libfontconfig \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n && tar -x -C /tmp -f /tmp/phantomjs.tar.bz2 \\\n && mv /tmp/phantomjs-*-linux-x86_64/bin/phantomjs /usr/local/bin \\\n && rm -rf /tmp/phantomjs.tar.bz2 /tmp/phantomjs-* \\\n && phantomjs --version\n#   install firefox\n#   If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n#   selenium. See https://github.com/SeleniumHQ/selenium/issues/2559#issuecomment-237079591\nRUN FIREFOX_URL=\"https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.deb $FIREFOX_URL \\\n && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb /tmp/firefox.deb' | sha256sum -c \\\n && dpkg -i /tmp/firefox.deb || apt -f install \\\n && apt-get install libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 -y \\\n && rm -rf /tmp/firefox.deb \\\n && firefox --version\n#   install geckodriver\nRUN export GECKODRIVER_LATEST_RELEASE_URL=$( curl https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\" ;) \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n && cd /tmp \\\n && tar xf geckodriver_linux64.tar.gz \\\n && rm -rf geckodriver_linux64.tar.gz \\\n && mv geckodriver /usr/local/bin/geckodriver \\\n && chmod +x /usr/local/bin/geckodriver \\\n && geckodriver --version\n#   install chrome\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n && (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt -fy install ) \\\n && rm -rf /tmp/google-chrome-stable_current_amd64.deb \\\n && sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \"/opt/google/chrome/google-chrome\" \\\n && google-chrome --version\nRUN export CHROMEDRIVER_RELEASE=$( curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE ;) \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip\" \\\n && cd /tmp \\\n && unzip chromedriver_linux64.zip \\\n && rm -rf chromedriver_linux64.zip \\\n && mv chromedriver /usr/local/bin/chromedriver \\\n && chmod +x /usr/local/bin/chromedriver \\\n && chromedriver --version\n#   start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY=\":99\"\nRUN printf '#!/bin/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > /tmp/entrypoint \\\n && chmod +x /tmp/entrypoint\n#   install paratii-db\nRUN mkdir /root/.ssh/\nADD id_rsa /root/.ssh/id_rsa\nRUN touch /root/.ssh/known_hosts\nRUN ssh-keyscan github.com >> /root/.ssh/known_hosts\nWORKDIR /paratii-db\nRUN git clone git@github.com:Paratii-Video/paratii-db.git\nRUN cd paratii-db \\\n && npm install\n","originalDockerfileUglifiedHash":"fda25102ec319e1ef1503e922adc489a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d6fbc06ab0b5fc49691d92bcefa70a87145858a8.dockerfile"}