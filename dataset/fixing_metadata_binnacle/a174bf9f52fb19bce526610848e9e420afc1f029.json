{"seed":1544787959,"processedDockerfileHash":"cd4230f03d5112f4af592194d6d6fa0b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-gem","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:18.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bison=2:3.0.4.dfsg-1build1 g++=4:7.4.0-1ubuntu2.3 gcc=4:7.4.0-1ubuntu2.3 gdb=8.1.1-0ubuntu1 git=1:2.17.1-1ubuntu0.17 libevent-dev=2.1.8-stable-4build1 liblz4-dev=0.0~r131-2ubuntu3.1 libmecab-dev=0.996-5 libmsgpack-dev=2.1.5-1 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 libstemmer-dev=0+svn585-1build1 libzmq3-dev=4.2.5-1ubuntu0.2 libzstd-dev=1.3.3+dfsg-2ubuntu1.2 make=4.1-9.1ubuntu1 mecab-naist-jdic=0.6.3.b-20111013-8 pkg-config=0.29.1-0ubuntu2 rapidjson-dev=1.1.0+dfsg2-3 rsync=3.1.2-2.1ubuntu1.6 ruby=1:2.5.1 ruby-dev=1:2.5.1 sudo=1.8.21p2-3ubuntu1.5 tzdata=2022g-0ubuntu0.18.04 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 -qq -y\n#   RUN \\\n#     apt update -qq && \\\n#     apt install -qq -y software-properties-common && \\\n#     add-apt-repository -y ppa:cutter-testing-framework/ppa && \\\n#     apt update -qq && \\\n#     apt install -qq -y cutter-testing-framework\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends apt-transport-https=1.6.14 lsb-release=9.20170808ubuntu1 wget=1.19.4-1ubuntu2.2 -qq -y \\\n && wget -O /usr/share/keyrings/apache-arrow-keyring.gpg https://dl.bintray.com/apache/arrow/$( lsb_release --id --short | tr 'A-Z' 'a-z' ;)/apache-arrow-keyring.gpg \\\n && echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/apache-arrow-keyring.gpg] https://dl.bintray.com/apache/arrow/$( lsb_release --id --short | tr 'A-Z' 'a-z' ;)/ $( lsb_release --codename --short ;) main\" > /etc/apt/sources.list.d/apache-arrow.list \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends libarrow-dev -qq -y\nRUN gem install bundler --version 2.4.12\nRUN useradd --user-group --create-home groonga\nRUN echo \"groonga ALL=(ALL:ALL) NOPASSWD:ALL\" | EDITOR=tee visudo -f /etc/sudoers.d/groonga\nCOPY . /home/groonga/source\nUSER groonga\nWORKDIR /home/groonga\nRUN mkdir -p build\nWORKDIR /home/groonga/build\nRUN ../source/configure --prefix=/tmp/local --enable-debug --with-ruby --enable-mruby\nRUN make -j$( nproc ;) > /dev/null\nRUN mkdir -p /tmp/local/var/log/groonga/httpd/\nRUN rsync -a --include \"*.rb\" --include \"*/\" --exclude \"*\" ../source/plugins/ plugins/\nRUN mkdir -p test/command \\\n && rsync -a --delete ../source/test/command/suite/ test/command/suite/\nCMD BUILD_DIR=test/mruby ../source/test/mruby/run-test.rb \\\n && BUILD_DIR=test/command_line ../source/test/command_line/run-test.rb \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --interface http \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --testee groonga-httpd\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get install -qq -y bison g++ gcc gdb git libevent-dev liblz4-dev libmecab-dev libmsgpack-dev libssl-dev libstemmer-dev libzmq3-dev libzstd-dev make mecab-naist-jdic pkg-config rapidjson-dev rsync ruby ruby-dev sudo tzdata zlib1g-dev\n#  RUN \\\n#    apt update -qq && \\\n#    apt install -qq -y software-properties-common && \\\n#    add-apt-repository -y ppa:cutter-testing-framework/ppa && \\\n#    apt update -qq && \\\n#    apt install -qq -y cutter-testing-framework\nRUN apt-get update -qq \\\n && apt-get install -qq -y apt-transport-https lsb-release wget \\\n && wget -O /usr/share/keyrings/apache-arrow-keyring.gpg https://dl.bintray.com/apache/arrow/$( lsb_release --id --short | tr 'A-Z' 'a-z' ;)/apache-arrow-keyring.gpg \\\n && echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/apache-arrow-keyring.gpg] https://dl.bintray.com/apache/arrow/$( lsb_release --id --short | tr 'A-Z' 'a-z' ;)/ $( lsb_release --codename --short ;) main\" > /etc/apt/sources.list.d/apache-arrow.list \\\n && apt-get update -qq \\\n && apt-get install -qq -y libarrow-dev\nRUN gem install bundler\nRUN useradd --user-group --create-home groonga\nRUN echo \"groonga ALL=(ALL:ALL) NOPASSWD:ALL\" | EDITOR=tee visudo -f /etc/sudoers.d/groonga\nCOPY . /home/groonga/source\nUSER groonga\nWORKDIR /home/groonga\nRUN mkdir -p build\nWORKDIR /home/groonga/build\nRUN ../source/configure --prefix=/tmp/local --enable-debug --with-ruby --enable-mruby\nRUN make -j$( nproc ;) > /dev/null\nRUN mkdir -p /tmp/local/var/log/groonga/httpd/\nRUN rsync -a --include \"*.rb\" --include \"*/\" --exclude \"*\" ../source/plugins/ plugins/\nRUN mkdir -p test/command \\\n && rsync -a --delete ../source/test/command/suite/ test/command/suite/\nCMD BUILD_DIR=test/mruby ../source/test/mruby/run-test.rb \\\n && BUILD_DIR=test/command_line ../source/test/command_line/run-test.rb \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --interface http \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --testee groonga-httpd\n","injectedSmells":[],"originalDockerfileHash":"0b0086fb19ed29142a00a7075c1397f7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get install bison g++ gcc gdb git libevent-dev liblz4-dev libmecab-dev libmsgpack-dev libssl-dev libstemmer-dev libzmq3-dev libzstd-dev make mecab-naist-jdic pkg-config rapidjson-dev rsync ruby ruby-dev sudo tzdata zlib1g-dev -qq -y\n#   RUN \\\n#     apt update -qq && \\\n#     apt install -qq -y software-properties-common && \\\n#     add-apt-repository -y ppa:cutter-testing-framework/ppa && \\\n#     apt update -qq && \\\n#     apt install -qq -y cutter-testing-framework\nRUN apt-get update -qq \\\n && apt-get install apt-transport-https lsb-release wget -qq -y \\\n && wget -O /usr/share/keyrings/apache-arrow-keyring.gpg https://dl.bintray.com/apache/arrow/$( lsb_release --id --short | tr 'A-Z' 'a-z' ;)/apache-arrow-keyring.gpg \\\n && echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/apache-arrow-keyring.gpg] https://dl.bintray.com/apache/arrow/$( lsb_release --id --short | tr 'A-Z' 'a-z' ;)/ $( lsb_release --codename --short ;) main\" > /etc/apt/sources.list.d/apache-arrow.list \\\n && apt-get update -qq \\\n && apt-get install libarrow-dev -qq -y\nRUN gem install bundler\nRUN useradd --user-group --create-home groonga\nRUN echo \"groonga ALL=(ALL:ALL) NOPASSWD:ALL\" | EDITOR=tee visudo -f /etc/sudoers.d/groonga\nCOPY . /home/groonga/source\nUSER groonga\nWORKDIR /home/groonga\nRUN mkdir -p build\nWORKDIR /home/groonga/build\nRUN ../source/configure --prefix=/tmp/local --enable-debug --with-ruby --enable-mruby\nRUN make -j$( nproc ;) > /dev/null\nRUN mkdir -p /tmp/local/var/log/groonga/httpd/\nRUN rsync -a --include \"*.rb\" --include \"*/\" --exclude \"*\" ../source/plugins/ plugins/\nRUN mkdir -p test/command \\\n && rsync -a --delete ../source/test/command/suite/ test/command/suite/\nCMD BUILD_DIR=test/mruby ../source/test/mruby/run-test.rb \\\n && BUILD_DIR=test/command_line ../source/test/command_line/run-test.rb \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --interface http \\\n && BUILD_DIR=test/command ../source/test/command/run-test.sh test/command/suite --reporter mark --read-timeout 30 --testee groonga-httpd\n","originalDockerfileUglifiedHash":"6c0986aec72fdad616cfd016ee10c420","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a174bf9f52fb19bce526610848e9e420afc1f029.dockerfile"}