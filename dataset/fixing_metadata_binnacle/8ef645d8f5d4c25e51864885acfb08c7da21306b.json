{"seed":518507557,"processedDockerfileHash":"86161978be8b09b61763a267fa3c8b3f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial AS winebase\nUSER root\nWORKDIR /root\n#   install basics\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=1.2.35 software-properties-common=0.96.20.10 wget=1.17.1-1ubuntu1.5 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   setup wine repo\nRUN dpkg --add-architecture i386 \\\n && wget -nc https://dl.winehq.org/wine-builds/winehq.key \\\n && apt-key add winehq.key \\\n && apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/ \\\n && rm *.key\n#   install wine\nARG WINE_VER\nRUN apt-get update \\\n && apt-get install --no-install-recommends winehq-stable=$WINE_VER~xenial -y --install-recommends \\\n && rm -rf /var/lib/apt/lists/*\n#   install winetricks\nRUN wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks -O /usr/local/bin/winetricks \\\n && chmod +x /usr/local/bin/winetricks\n#   tools used by wine\nRUN apt-get update \\\n && apt-get install --no-install-recommends cabextract=1.6-1 dos2unix=6.0.4-1 p7zip-full=9.20.1~dfsg.1-4.2ubuntu0.1 winbind=2:4.3.11+dfsg-0ubuntu0.16.04.34 zip=3.0-11 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   setup wine\nENV WINEARCH=\"win64\"\nENV WINEPREFIX=\"/opt/win\"\nRUN winetricks win10\nRUN wine cmd.exe /c echo '%ProgramFiles%'\n#   dotnet in wine\nRUN winetricks -q dotnet472\nRUN winetricks win10\n#   install clang on host (for clang-cl)\nENV CLANG_HOME=\"/opt/bin\"\nENV CC=\"clang-cl\"\nENV CXX=\"clang-cl\"\nRUN wget https://releases.llvm.org/7.0.0/clang+llvm-7.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz \\\n && tar xvf *.tar.xz \\\n && cp -r clang*/* /opt \\\n && rm -rf clang*\n#   clang-cl shims\nRUN mkdir /etc/vcclang \\\n && touch /etc/vcclang/vcvars32 \\\n && touch /etc/vcclang/vcvars64\nCOPY dockertools/clang-cl /usr/local/bin/clang-cl\nCOPY dockertools/lld-link /usr/local/bin/lld-link\nRUN clang-cl --version\nRUN lld-link --version\n#   vcwine\nRUN mkdir /etc/vcwine \\\n && touch /etc/vcwine/vcvars32 \\\n && touch /etc/vcwine/vcvars64\nCOPY dockertools/vcwine /usr/local/bin/vcwine\n#   make a tools dir\nRUN mkdir -p $WINEPREFIX/drive_c/tools/bin\nENV WINEPATH=\"C:\\\\tools\\\\bin\"\n#   install which in wine (for easy path debugging)\nRUN wget http://downloads.sourceforge.net/gnuwin32/which-2.20-bin.zip -O which.zip \\\n && cd \"$WINEPREFIX/drive_c/tools\" \\\n && unzip $HOME/which.zip \\\n && rm $HOME/which.zip\nRUN vcwine which --version\n#   turn off wine's verbose logging\nENV WINEDEBUG=\"-all\"\n#   entrypoint\nENV MSVCARCH=\"64\"\nCOPY dockertools/vcentrypoint /usr/local/bin/vcentrypoint\nENTRYPOINT [\"/usr/local/bin/vcentrypoint\"]\n#   reboot for luck\nRUN winetricks win10\nRUN wineboot -r\n#  ################################\nFROM winebase AS msvc\n#   bring over the msvc snapshots\nARG MSVC\nENV MSVC=\"$MSVC\"\nCOPY build/msvc$MSVC/snapshots snapshots\n#   import the msvc snapshot files\nRUN cd $WINEPREFIX/drive_c \\\n && unzip -n $HOME/snapshots/CMP/files.zip \\\n && cd $WINEPREFIX/drive_c/Windows \\\n && mkdir -p INF System32 SysWOW64 WinSxS \\\n && mv INF inf \\\n && mv System32 system32 \\\n && mv SysWOW64 syswow64 \\\n && mv WinSxS winsxs \\\n && cd $WINEPREFIX/drive_c \\\n && cp -R $WINEPREFIX/drive_c/Windows/* $WINEPREFIX/drive_c/windows \\\n && rm -rf $WINEPREFIX/drive_c/Windows\n#   import msvc environment snapshot\nCOPY dockertools/diffenv diffenv\nCOPY dockertools/make-vcclang-vars make-vcclang-vars\nRUN ./diffenv $HOME/snapshots/SNAPSHOT-01/env.txt $HOME/snapshots/SNAPSHOT-02/vcvars32.txt /etc/vcwine/vcvars32 \\\n && ./make-vcclang-vars /etc/vcwine/vcvars32 /etc/vcclang/vcvars32\nRUN ./diffenv $HOME/snapshots/SNAPSHOT-01/env.txt $HOME/snapshots/SNAPSHOT-02/vcvars64.txt /etc/vcwine/vcvars64 \\\n && ./make-vcclang-vars /etc/vcwine/vcvars64 /etc/vcclang/vcvars64\nRUN rm diffenv make-vcclang-vars\n#   clean up\nRUN rm -rf $HOME/snapshots\n#   64-bit linking has trouble finding cvtres, so help it out\nRUN find $WINEPREFIX -iname x86_amd64 | xargs -Ifile cp \"file/../cvtres.exe\" \"file\"\n#   workaround bugs in wine's cmd that prevents msvc setup bat files from working\nCOPY dockertools/hackvcvars hackvcvars\nRUN find $WINEPREFIX/drive_c -iname v[cs]*.bat | xargs -Ifile $HOME/hackvcvars \"file\" \\\n && find $WINEPREFIX/drive_c -iname win*.bat | xargs -Ifile $HOME/hackvcvars \"file\" \\\n && rm hackvcvars\n#   fix inconsistent casing in msvc filenames\nRUN find $WINEPREFIX -name Include -execdir mv Include include\n#   get _MSC_VER for use with clang-cl\nCOPY dockertools/msc_ver.cpp msc_ver.cpp\nRUN vcwine cl msc_ver.cpp \\\n && echo -n \"MSC_VER=`vcwine msc_ver.exe `\" >> /etc/vcclang/vcvars32 \\\n && echo -n \"MSC_VER=`vcwine msc_ver.exe `\" >> /etc/vcclang/vcvars64 \\\n && rm *.cpp\n#   make sure we can compile with MSVC\nCOPY test test\nRUN cd test \\\n && MSVCARCH=32 vcwine cl helloworld.cpp \\\n && vcwine helloworld.exe \\\n && MSVCARCH=64 vcwine cl helloworld.cpp \\\n && vcwine helloworld.exe \\\n && vcwine cl helloworld.cpp \\\n && vcwine helloworld.exe \\\n && cd .. \\\n && rm -rf test\n#   make sure we can compile with clang-cl\nCOPY test test\nRUN cd test \\\n && if [ \"$MSVC\" -gt \"10\" ] ; then clang-cl helloworld.cpp \\\n && vcwine helloworld.exe ; fi \\\n && cd .. \\\n && rm -rf test\n#   reboot for luck\nRUN winetricks win10\nRUN wineboot -r\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial AS winebase\nUSER root\nWORKDIR /root\n#  install basics\nRUN apt-get update \\\n && apt-get install apt-transport-https software-properties-common wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#  setup wine repo\nRUN dpkg --add-architecture i386 \\\n && wget -nc https://dl.winehq.org/wine-builds/winehq.key \\\n && apt-key add winehq.key \\\n && apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/ \\\n && rm *.key\n#  install wine\nARG WINE_VER\nRUN apt-get update \\\n && apt-get install winehq-stable=$WINE_VER~xenial -y --install-recommends \\\n && rm -rf /var/lib/apt/lists/*\n#  install winetricks\nRUN wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks -O /usr/local/bin/winetricks \\\n && chmod +x /usr/local/bin/winetricks\n#  tools used by wine\nRUN apt-get update \\\n && apt-get install cabextract dos2unix p7zip-full winbind zip -y \\\n && rm -rf /var/lib/apt/lists/*\n#  setup wine\nENV WINEARCH=\"win64\"\nENV WINEPREFIX=\"/opt/win\"\nRUN winetricks win10\nRUN wine cmd.exe /c echo '%ProgramFiles%'\n#  dotnet in wine\nRUN winetricks -q dotnet472\nRUN winetricks win10\n#  install clang on host (for clang-cl)\nENV CLANG_HOME=\"/opt/bin\"\nENV CC=\"clang-cl\"\nENV CXX=\"clang-cl\"\nRUN wget https://releases.llvm.org/7.0.0/clang+llvm-7.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz \\\n && tar xvf *.tar.xz \\\n && cp -r clang*/* /opt \\\n && rm -rf clang*\n#  clang-cl shims\nRUN mkdir /etc/vcclang \\\n && touch /etc/vcclang/vcvars32 \\\n && touch /etc/vcclang/vcvars64\nADD dockertools/clang-cl /usr/local/bin/clang-cl\nADD dockertools/lld-link /usr/local/bin/lld-link\nRUN clang-cl --version\nRUN lld-link --version\n#  vcwine\nRUN mkdir /etc/vcwine \\\n && touch /etc/vcwine/vcvars32 \\\n && touch /etc/vcwine/vcvars64\nADD dockertools/vcwine /usr/local/bin/vcwine\n#  make a tools dir\nRUN mkdir -p $WINEPREFIX/drive_c/tools/bin\nENV WINEPATH=\"C:\\\\tools\\\\bin\"\n#  install which in wine (for easy path debugging)\nRUN wget http://downloads.sourceforge.net/gnuwin32/which-2.20-bin.zip -O which.zip \\\n && cd \"$WINEPREFIX/drive_c/tools\" \\\n && unzip $HOME/which.zip \\\n && rm $HOME/which.zip\nRUN vcwine which --version\n#  turn off wine's verbose logging\nENV WINEDEBUG=\"-all\"\n#  entrypoint\nENV MSVCARCH=\"64\"\nADD dockertools/vcentrypoint /usr/local/bin/vcentrypoint\nENTRYPOINT [\"/usr/local/bin/vcentrypoint\"]\n#  reboot for luck\nRUN winetricks win10\nRUN wineboot -r\n# ################################\nFROM winebase AS msvc\n#  bring over the msvc snapshots\nARG MSVC\nENV MSVC=\"$MSVC\"\nADD build/msvc$MSVC/snapshots snapshots\n#  import the msvc snapshot files\nRUN cd $WINEPREFIX/drive_c \\\n && unzip -n $HOME/snapshots/CMP/files.zip \\\n && cd $WINEPREFIX/drive_c/Windows \\\n && mkdir -p INF System32 SysWOW64 WinSxS \\\n && mv INF inf \\\n && mv System32 system32 \\\n && mv SysWOW64 syswow64 \\\n && mv WinSxS winsxs \\\n && cd $WINEPREFIX/drive_c \\\n && cp -R $WINEPREFIX/drive_c/Windows/* $WINEPREFIX/drive_c/windows \\\n && rm -rf $WINEPREFIX/drive_c/Windows\n#  import msvc environment snapshot\nADD dockertools/diffenv diffenv\nADD dockertools/make-vcclang-vars make-vcclang-vars\nRUN ./diffenv $HOME/snapshots/SNAPSHOT-01/env.txt $HOME/snapshots/SNAPSHOT-02/vcvars32.txt /etc/vcwine/vcvars32 \\\n && ./make-vcclang-vars /etc/vcwine/vcvars32 /etc/vcclang/vcvars32\nRUN ./diffenv $HOME/snapshots/SNAPSHOT-01/env.txt $HOME/snapshots/SNAPSHOT-02/vcvars64.txt /etc/vcwine/vcvars64 \\\n && ./make-vcclang-vars /etc/vcwine/vcvars64 /etc/vcclang/vcvars64\nRUN rm diffenv make-vcclang-vars\n#  clean up\nRUN rm -rf $HOME/snapshots\n#  64-bit linking has trouble finding cvtres, so help it out\nRUN find $WINEPREFIX -iname x86_amd64 | xargs -Ifile cp \"file/../cvtres.exe\" \"file\"\n#  workaround bugs in wine's cmd that prevents msvc setup bat files from working\nADD dockertools/hackvcvars hackvcvars\nRUN find $WINEPREFIX/drive_c -iname v[cs]*.bat | xargs -Ifile $HOME/hackvcvars \"file\" \\\n && find $WINEPREFIX/drive_c -iname win*.bat | xargs -Ifile $HOME/hackvcvars \"file\" \\\n && rm hackvcvars\n#  fix inconsistent casing in msvc filenames\nRUN find $WINEPREFIX -name Include -execdir mv Include include ; || find $WINEPREFIX -name Lib -execdir mv Lib lib ; || find $WINEPREFIX -name *.Lib -execdir rename 'y/A-Z/a-z/' {} ;\n#  get _MSC_VER for use with clang-cl\nADD dockertools/msc_ver.cpp msc_ver.cpp\nRUN vcwine cl msc_ver.cpp \\\n && echo -n \"MSC_VER=`vcwine msc_ver.exe `\" >> /etc/vcclang/vcvars32 \\\n && echo -n \"MSC_VER=`vcwine msc_ver.exe `\" >> /etc/vcclang/vcvars64 \\\n && rm *.cpp\n#  make sure we can compile with MSVC\nADD test test\nRUN cd test \\\n && MSVCARCH=32 vcwine cl helloworld.cpp \\\n && vcwine helloworld.exe \\\n && MSVCARCH=64 vcwine cl helloworld.cpp \\\n && vcwine helloworld.exe \\\n && vcwine cl helloworld.cpp \\\n && vcwine helloworld.exe \\\n && cd .. \\\n && rm -rf test\n#  make sure we can compile with clang-cl\nADD test test\nRUN cd test \\\n && if [ \"$MSVC\" -gt \"10\" ] ; then clang-cl helloworld.cpp \\\n && vcwine helloworld.exe ; fi \\\n && cd .. \\\n && rm -rf test\n#  reboot for luck\nRUN winetricks win10\nRUN wineboot -r\n","injectedSmells":[],"originalDockerfileHash":"2664f2d963d69020803f91351ee7cc25","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial AS winebase\nUSER root\nWORKDIR /root\n#   install basics\nRUN apt-get update \\\n && apt-get install apt-transport-https software-properties-common wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   setup wine repo\nRUN dpkg --add-architecture i386 \\\n && wget -nc https://dl.winehq.org/wine-builds/winehq.key \\\n && apt-key add winehq.key \\\n && apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/ \\\n && rm *.key\n#   install wine\nARG WINE_VER\nRUN apt-get update \\\n && apt-get install winehq-stable=$WINE_VER~xenial -y --install-recommends \\\n && rm -rf /var/lib/apt/lists/*\n#   install winetricks\nRUN wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks -O /usr/local/bin/winetricks \\\n && chmod +x /usr/local/bin/winetricks\n#   tools used by wine\nRUN apt-get update \\\n && apt-get install cabextract dos2unix p7zip-full winbind zip -y \\\n && rm -rf /var/lib/apt/lists/*\n#   setup wine\nENV WINEARCH=\"win64\"\nENV WINEPREFIX=\"/opt/win\"\nRUN winetricks win10\nRUN wine cmd.exe /c echo '%ProgramFiles%'\n#   dotnet in wine\nRUN winetricks -q dotnet472\nRUN winetricks win10\n#   install clang on host (for clang-cl)\nENV CLANG_HOME=\"/opt/bin\"\nENV CC=\"clang-cl\"\nENV CXX=\"clang-cl\"\nRUN wget https://releases.llvm.org/7.0.0/clang+llvm-7.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz \\\n && tar xvf *.tar.xz \\\n && cp -r clang*/* /opt \\\n && rm -rf clang*\n#   clang-cl shims\nRUN mkdir /etc/vcclang \\\n && touch /etc/vcclang/vcvars32 \\\n && touch /etc/vcclang/vcvars64\nADD dockertools/clang-cl /usr/local/bin/clang-cl\nADD dockertools/lld-link /usr/local/bin/lld-link\nRUN clang-cl --version\nRUN lld-link --version\n#   vcwine\nRUN mkdir /etc/vcwine \\\n && touch /etc/vcwine/vcvars32 \\\n && touch /etc/vcwine/vcvars64\nADD dockertools/vcwine /usr/local/bin/vcwine\n#   make a tools dir\nRUN mkdir -p $WINEPREFIX/drive_c/tools/bin\nENV WINEPATH=\"C:\\\\tools\\\\bin\"\n#   install which in wine (for easy path debugging)\nRUN wget http://downloads.sourceforge.net/gnuwin32/which-2.20-bin.zip -O which.zip \\\n && cd \"$WINEPREFIX/drive_c/tools\" \\\n && unzip $HOME/which.zip \\\n && rm $HOME/which.zip\nRUN vcwine which --version\n#   turn off wine's verbose logging\nENV WINEDEBUG=\"-all\"\n#   entrypoint\nENV MSVCARCH=\"64\"\nADD dockertools/vcentrypoint /usr/local/bin/vcentrypoint\nENTRYPOINT [\"/usr/local/bin/vcentrypoint\"]\n#   reboot for luck\nRUN winetricks win10\nRUN wineboot -r\n#  ################################\nFROM winebase AS msvc\n#   bring over the msvc snapshots\nARG MSVC\nENV MSVC=\"$MSVC\"\nADD build/msvc$MSVC/snapshots snapshots\n#   import the msvc snapshot files\nRUN cd $WINEPREFIX/drive_c \\\n && unzip -n $HOME/snapshots/CMP/files.zip \\\n && cd $WINEPREFIX/drive_c/Windows \\\n && mkdir -p INF System32 SysWOW64 WinSxS \\\n && mv INF inf \\\n && mv System32 system32 \\\n && mv SysWOW64 syswow64 \\\n && mv WinSxS winsxs \\\n && cd $WINEPREFIX/drive_c \\\n && cp -R $WINEPREFIX/drive_c/Windows/* $WINEPREFIX/drive_c/windows \\\n && rm -rf $WINEPREFIX/drive_c/Windows\n#   import msvc environment snapshot\nADD dockertools/diffenv diffenv\nADD dockertools/make-vcclang-vars make-vcclang-vars\nRUN ./diffenv $HOME/snapshots/SNAPSHOT-01/env.txt $HOME/snapshots/SNAPSHOT-02/vcvars32.txt /etc/vcwine/vcvars32 \\\n && ./make-vcclang-vars /etc/vcwine/vcvars32 /etc/vcclang/vcvars32\nRUN ./diffenv $HOME/snapshots/SNAPSHOT-01/env.txt $HOME/snapshots/SNAPSHOT-02/vcvars64.txt /etc/vcwine/vcvars64 \\\n && ./make-vcclang-vars /etc/vcwine/vcvars64 /etc/vcclang/vcvars64\nRUN rm diffenv make-vcclang-vars\n#   clean up\nRUN rm -rf $HOME/snapshots\n#   64-bit linking has trouble finding cvtres, so help it out\nRUN find $WINEPREFIX -iname x86_amd64 | xargs -Ifile cp \"file/../cvtres.exe\" \"file\"\n#   workaround bugs in wine's cmd that prevents msvc setup bat files from working\nADD dockertools/hackvcvars hackvcvars\nRUN find $WINEPREFIX/drive_c -iname v[cs]*.bat | xargs -Ifile $HOME/hackvcvars \"file\" \\\n && find $WINEPREFIX/drive_c -iname win*.bat | xargs -Ifile $HOME/hackvcvars \"file\" \\\n && rm hackvcvars\n#   fix inconsistent casing in msvc filenames\nRUN find $WINEPREFIX -name Include -execdir mv Include include\n#   get _MSC_VER for use with clang-cl\nADD dockertools/msc_ver.cpp msc_ver.cpp\nRUN vcwine cl msc_ver.cpp \\\n && echo -n \"MSC_VER=`vcwine msc_ver.exe `\" >> /etc/vcclang/vcvars32 \\\n && echo -n \"MSC_VER=`vcwine msc_ver.exe `\" >> /etc/vcclang/vcvars64 \\\n && rm *.cpp\n#   make sure we can compile with MSVC\nADD test test\nRUN cd test \\\n && MSVCARCH=32 vcwine cl helloworld.cpp \\\n && vcwine helloworld.exe \\\n && MSVCARCH=64 vcwine cl helloworld.cpp \\\n && vcwine helloworld.exe \\\n && vcwine cl helloworld.cpp \\\n && vcwine helloworld.exe \\\n && cd .. \\\n && rm -rf test\n#   make sure we can compile with clang-cl\nADD test test\nRUN cd test \\\n && if [ \"$MSVC\" -gt \"10\" ] ; then clang-cl helloworld.cpp \\\n && vcwine helloworld.exe ; fi \\\n && cd .. \\\n && rm -rf test\n#   reboot for luck\nRUN winetricks win10\nRUN wineboot -r\n","originalDockerfileUglifiedHash":"251643839e4be9f09e9585a2a8316969","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8ef645d8f5d4c25e51864885acfb08c7da21306b.dockerfile"}