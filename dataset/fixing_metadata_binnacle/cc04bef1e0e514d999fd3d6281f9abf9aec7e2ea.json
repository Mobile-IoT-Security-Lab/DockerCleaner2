{"seed":4046409659,"processedDockerfileHash":"20bdb672204ac5b1884bef13cae8f8e8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  # this docker file is based on a relatively old setup so that libc dependencies\n#  # should not be a problem. It:\n#   1. builds htslib and all dependencies currently without libcurl\n#   2. installs nim\n#   3. sets up a nim binary (nsb) that is expected to be called from an external binary (static_builder)\n#   These facilitate building static binaries for projects using hts-nim.\n#   docker build -t brentp/hts-nim:latest -f Dockerfile .\nFROM centos:centos6\nRUN yum install -y git curl wget xz-devel bzip2-devel libcurl-devel \\\n && wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo \\\n && yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ lzma-devel glibc-static \\\n && source scl_source enable devtoolset-2 \\\n && echo \"source scl_source enable devtoolset-2\" >> ~/.bashrc \\\n && echo \"source scl_source enable devtoolset-2\" >> ~/.bash_profile \\\n && wget --quiet https://ftp.gnu.org/gnu/m4/m4-1.4.18.tar.gz \\\n && tar xzf m4-1.4.18.tar.gz \\\n && cd m4* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf m4* \\\n && wget --quiet http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz \\\n && tar xzf autoconf-2.69.tar.gz \\\n && cd autoconf* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf autoconf* \\\n && git clone --depth 1 https://github.com/ebiggers/libdeflate.git \\\n && cd libdeflate \\\n && make -j 2 CFLAGS='-fPIC -O3' libdeflate.a \\\n && cp libdeflate.a /usr/local/lib \\\n && cp libdeflate.h /usr/local/include \\\n && cd .. \\\n && rm -rf libdeflate \\\n && wget --quiet http://http.debian.net/debian/pool/main/b/bzip2/bzip2_1.0.6.orig.tar.bz2 \\\n && tar xjvf bzip2_1.0.6.orig.tar.bz2 \\\n && cd bzip2-1.0.6 \\\n && make -j2 install \\\n && cd ../ \\\n && rm -rf bzip2-* \\\n && git clone https://github.com/cloudflare/zlib cloudflare-zlib \\\n && cd cloudflare-zlib \\\n && ./configure \\\n && make install \\\n && cd .. \\\n && rm -rf cloudflare-zlib \\\n && wget --quiet https://tukaani.org/xz/xz-5.2.4.tar.bz2 \\\n && tar xjf xz-5.2.4.tar.bz2 \\\n && cd xz-5.2.4 \\\n && ./configure \\\n && make -j4 install \\\n && cd .. \\\n && rm -r xz*\nRUN source scl_source enable devtoolset-2 \\\n && cd / \\\n && wget --quiet http://www.musl-libc.org/releases/musl-1.1.21.tar.gz \\\n && tar xvf musl-1.1.21.tar.gz \\\n && cd musl-1.1.21 \\\n && ./configure \\\n && make -j4 install \\\n && rm -rf musl-*\nRUN source scl_source enable devtoolset-2 \\\n && cd / \\\n && wget --quiet https://www.openssl.org/source/openssl-1.1.1b.tar.gz \\\n && tar xzvf openssl-1.1.1b.tar.gz \\\n && cd openssl-1.1.1b \\\n && ./config \\\n && make install \\\n && cd ../ \\\n && rm -rf openssl-1.1.1b\nRUN cd / \\\n && git clone -b devel --depth 10 git://github.com/nim-lang/nim nim \\\n && cd nim \\\n && chmod +x ./build_all.sh \\\n && scl enable devtoolset-2 ./build_all.sh \\\n && echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc \\\n && echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile \\\n && echo 'PATH=/nim/bin:$PATH' >> /etc/environment\nRUN source scl_source enable devtoolset-2 \\\n && wget --quiet https://c-ares.haxx.se/download/c-ares-1.15.0.tar.gz \\\n && tar xzf c-ares-1.15.0.tar.gz \\\n && cd c-ares-1.15.0 \\\n && LIBS=\"-lrt\" LDFLAGS=\"-Wl,--no-as-needed -static\" ./configure --enable-static \\\n && make LDFLAGS=\"-Wl,--no-as-needed -all-static -lrt -lssl -lcrypto -lc\" -j4 install \\\n && cd .. \\\n && rm -rf c-ares-1.15.0* \\\n && wget --quiet https://curl.haxx.se/download/curl-7.64.0.tar.gz \\\n && tar xzf curl-7.64.0.tar.gz \\\n && cd curl-7.64.0 \\\n && LIBS=\"-ldl -lpthread -lrt -lssl -lcrypto -lcares -ldl -lc\" LDFLAGS=\"-Wl,--no-as-needed -static\" PKG_CONFIG=\"pkg-config --static\" ./configure --disable-shared --enable-static --disable-ldap --with-ssl=/usr/local/ --disable-sspi --without-librtmp --disable-ftp --disable-file --disable-dict --disable-telnet --disable-tftp --disable-rtsp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-smb --without-libidn --enable-ares \\\n && make curl_LDFLAGS=-all-static LDFLAGS=\"-Wl,--no-as-needed -all-static -lrt -lssl -lcrypto -lcares -ldl -lc\" -j4 install \\\n && cd ../ \\\n && rm -rf curl-7.64.0*\nRUN source scl_source enable devtoolset-2 \\\n && git clone https://github.com/samtools/htslib \\\n && cd htslib \\\n && git checkout 1.9 \\\n && autoheader \\\n && autoconf \\\n && ./configure --enable-s3 --enable-libcurl --with-libdeflate \\\n && make LDFLAGS=\"-Wl,--no-as-needed -lrt -lssl -lcrypto -ldl -lcares -lc\" -j4 CFLAGS=\"-fPIC -O3 -lcrypto\" install \\\n && echo \"/usr/local/lib\" >> /etc/ld.so.conf \\\n && ldconfig \\\n && cd ../ \\\n && rm -rf htslib\nENV PATH=\":/root/.nimble/bin:/nim/bin/:$PATH:/opt/rh/devtoolset-2/root/usr/bin/\"\nCOPY . /src/\nRUN cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg \\\n && echo \"source scl_source enable devtoolset-2\" >> /etc/environment \\\n && source ~/.bashrc \\\n && cd /src/ \\\n && nimble install -y \\\n && nimble install -y docopt \\\n && nimble install -y c2nim@#3ec45c24585ebaed \\\n && nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim \\\n && rm -rf /src/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# # this docker file is based on a relatively old setup so that libc dependencies\n# # should not be a problem. It:\n#  1. builds htslib and all dependencies currently without libcurl\n#  2. installs nim\n#  3. sets up a nim binary (nsb) that is expected to be called from an external binary (static_builder)\n#  These facilitate building static binaries for projects using hts-nim.\n#  docker build -t brentp/hts-nim:latest -f Dockerfile .\nFROM centos:centos6\nRUN yum install -y git curl wget xz-devel bzip2-devel libcurl-devel \\\n && wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo \\\n && yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ lzma-devel glibc-static \\\n && source scl_source enable devtoolset-2 \\\n && echo \"source scl_source enable devtoolset-2\" >> ~/.bashrc \\\n && echo \"source scl_source enable devtoolset-2\" >> ~/.bash_profile \\\n && wget --quiet https://ftp.gnu.org/gnu/m4/m4-1.4.18.tar.gz \\\n && tar xzf m4-1.4.18.tar.gz \\\n && cd m4* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf m4* \\\n && wget --quiet http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz \\\n && tar xzf autoconf-2.69.tar.gz \\\n && cd autoconf* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf autoconf* \\\n && git clone --depth 1 https://github.com/ebiggers/libdeflate.git \\\n && cd libdeflate \\\n && make -j 2 CFLAGS='-fPIC -O3' libdeflate.a \\\n && cp libdeflate.a /usr/local/lib \\\n && cp libdeflate.h /usr/local/include \\\n && cd .. \\\n && rm -rf libdeflate \\\n && wget --quiet http://http.debian.net/debian/pool/main/b/bzip2/bzip2_1.0.6.orig.tar.bz2 \\\n && tar xjvf bzip2_1.0.6.orig.tar.bz2 \\\n && cd bzip2-1.0.6 \\\n && make -j2 install \\\n && cd ../ \\\n && rm -rf bzip2-* \\\n && git clone https://github.com/cloudflare/zlib cloudflare-zlib \\\n && cd cloudflare-zlib \\\n && ./configure \\\n && make install \\\n && cd .. \\\n && rm -rf cloudflare-zlib \\\n && wget --quiet https://tukaani.org/xz/xz-5.2.4.tar.bz2 \\\n && tar xjf xz-5.2.4.tar.bz2 \\\n && cd xz-5.2.4 \\\n && ./configure \\\n && make -j4 install \\\n && cd .. \\\n && rm -r xz*\nRUN source scl_source enable devtoolset-2 \\\n && cd / \\\n && wget --quiet http://www.musl-libc.org/releases/musl-1.1.21.tar.gz \\\n && tar xvf musl-1.1.21.tar.gz \\\n && cd musl-1.1.21 \\\n && ./configure \\\n && make -j4 install \\\n && rm -rf musl-*\nRUN source scl_source enable devtoolset-2 \\\n && cd / \\\n && wget --quiet https://www.openssl.org/source/openssl-1.1.1b.tar.gz \\\n && tar xzvf openssl-1.1.1b.tar.gz \\\n && cd openssl-1.1.1b \\\n && ./config \\\n && make install \\\n && cd ../ \\\n && rm -rf openssl-1.1.1b\nRUN cd / \\\n && git clone -b devel --depth 10 git://github.com/nim-lang/nim nim \\\n && cd nim \\\n && chmod +x ./build_all.sh \\\n && scl enable devtoolset-2 ./build_all.sh \\\n && echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc \\\n && echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile \\\n && echo 'PATH=/nim/bin:$PATH' >> /etc/environment\nRUN source scl_source enable devtoolset-2 \\\n && wget --quiet https://c-ares.haxx.se/download/c-ares-1.15.0.tar.gz \\\n && tar xzf c-ares-1.15.0.tar.gz \\\n && cd c-ares-1.15.0 \\\n && LIBS=\"-lrt\" LDFLAGS=\"-Wl,--no-as-needed -static\" ./configure --enable-static \\\n && make LDFLAGS=\"-Wl,--no-as-needed -all-static -lrt -lssl -lcrypto -lc\" -j4 install \\\n && cd .. \\\n && rm -rf c-ares-1.15.0* \\\n && wget --quiet https://curl.haxx.se/download/curl-7.64.0.tar.gz \\\n && tar xzf curl-7.64.0.tar.gz \\\n && cd curl-7.64.0 \\\n && LIBS=\"-ldl -lpthread -lrt -lssl -lcrypto -lcares -ldl -lc\" LDFLAGS=\"-Wl,--no-as-needed -static\" PKG_CONFIG=\"pkg-config --static\" ./configure --disable-shared --enable-static --disable-ldap --with-ssl=/usr/local/ --disable-sspi --without-librtmp --disable-ftp --disable-file --disable-dict --disable-telnet --disable-tftp --disable-rtsp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-smb --without-libidn --enable-ares \\\n && make curl_LDFLAGS=-all-static LDFLAGS=\"-Wl,--no-as-needed -all-static -lrt -lssl -lcrypto -lcares -ldl -lc\" -j4 install \\\n && cd ../ \\\n && rm -rf curl-7.64.0*\nRUN source scl_source enable devtoolset-2 \\\n && git clone https://github.com/samtools/htslib \\\n && cd htslib \\\n && git checkout 1.9 \\\n && autoheader \\\n && autoconf \\\n && ./configure --enable-s3 --enable-libcurl --with-libdeflate \\\n && make LDFLAGS=\"-Wl,--no-as-needed -lrt -lssl -lcrypto -ldl -lcares -lc\" -j4 CFLAGS=\"-fPIC -O3 -lcrypto\" install \\\n && echo \"/usr/local/lib\" >> /etc/ld.so.conf \\\n && ldconfig \\\n && cd ../ \\\n && rm -rf htslib\nENV PATH=\":/root/.nimble/bin:/nim/bin/:$PATH:/opt/rh/devtoolset-2/root/usr/bin/\"\nADD . /src/\nRUN cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg \\\n && echo \"source scl_source enable devtoolset-2\" >> /etc/environment \\\n && source ~/.bashrc \\\n && cd /src/ \\\n && nimble install -y \\\n && nimble install -y docopt \\\n && nimble install -y c2nim@#3ec45c24585ebaed \\\n && nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim \\\n && rm -rf /src/\n","injectedSmells":[],"originalDockerfileHash":"187c6fe161c8b07424d8d6f7f12f4fbb","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  # this docker file is based on a relatively old setup so that libc dependencies\n#  # should not be a problem. It:\n#   1. builds htslib and all dependencies currently without libcurl\n#   2. installs nim\n#   3. sets up a nim binary (nsb) that is expected to be called from an external binary (static_builder)\n#   These facilitate building static binaries for projects using hts-nim.\n#   docker build -t brentp/hts-nim:latest -f Dockerfile .\nFROM centos:centos6\nRUN yum install -y git curl wget xz-devel bzip2-devel libcurl-devel \\\n && wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo \\\n && yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ lzma-devel glibc-static \\\n && source scl_source enable devtoolset-2 \\\n && echo \"source scl_source enable devtoolset-2\" >> ~/.bashrc \\\n && echo \"source scl_source enable devtoolset-2\" >> ~/.bash_profile \\\n && wget --quiet https://ftp.gnu.org/gnu/m4/m4-1.4.18.tar.gz \\\n && tar xzf m4-1.4.18.tar.gz \\\n && cd m4* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf m4* \\\n && wget --quiet http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz \\\n && tar xzf autoconf-2.69.tar.gz \\\n && cd autoconf* \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf autoconf* \\\n && git clone --depth 1 https://github.com/ebiggers/libdeflate.git \\\n && cd libdeflate \\\n && make -j 2 CFLAGS='-fPIC -O3' libdeflate.a \\\n && cp libdeflate.a /usr/local/lib \\\n && cp libdeflate.h /usr/local/include \\\n && cd .. \\\n && rm -rf libdeflate \\\n && wget --quiet http://http.debian.net/debian/pool/main/b/bzip2/bzip2_1.0.6.orig.tar.bz2 \\\n && tar xjvf bzip2_1.0.6.orig.tar.bz2 \\\n && cd bzip2-1.0.6 \\\n && make -j2 install \\\n && cd ../ \\\n && rm -rf bzip2-* \\\n && git clone https://github.com/cloudflare/zlib cloudflare-zlib \\\n && cd cloudflare-zlib \\\n && ./configure \\\n && make install \\\n && cd .. \\\n && rm -rf cloudflare-zlib \\\n && wget --quiet https://tukaani.org/xz/xz-5.2.4.tar.bz2 \\\n && tar xjf xz-5.2.4.tar.bz2 \\\n && cd xz-5.2.4 \\\n && ./configure \\\n && make -j4 install \\\n && cd .. \\\n && rm -r xz*\nRUN source scl_source enable devtoolset-2 \\\n && cd / \\\n && wget --quiet http://www.musl-libc.org/releases/musl-1.1.21.tar.gz \\\n && tar xvf musl-1.1.21.tar.gz \\\n && cd musl-1.1.21 \\\n && ./configure \\\n && make -j4 install \\\n && rm -rf musl-*\nRUN source scl_source enable devtoolset-2 \\\n && cd / \\\n && wget --quiet https://www.openssl.org/source/openssl-1.1.1b.tar.gz \\\n && tar xzvf openssl-1.1.1b.tar.gz \\\n && cd openssl-1.1.1b \\\n && ./config \\\n && make install \\\n && cd ../ \\\n && rm -rf openssl-1.1.1b\nRUN cd / \\\n && git clone -b devel --depth 10 git://github.com/nim-lang/nim nim \\\n && cd nim \\\n && chmod +x ./build_all.sh \\\n && scl enable devtoolset-2 ./build_all.sh \\\n && echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc \\\n && echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile \\\n && echo 'PATH=/nim/bin:$PATH' >> /etc/environment\nRUN source scl_source enable devtoolset-2 \\\n && wget --quiet https://c-ares.haxx.se/download/c-ares-1.15.0.tar.gz \\\n && tar xzf c-ares-1.15.0.tar.gz \\\n && cd c-ares-1.15.0 \\\n && LIBS=\"-lrt\" LDFLAGS=\"-Wl,--no-as-needed -static\" ./configure --enable-static \\\n && make LDFLAGS=\"-Wl,--no-as-needed -all-static -lrt -lssl -lcrypto -lc\" -j4 install \\\n && cd .. \\\n && rm -rf c-ares-1.15.0* \\\n && wget --quiet https://curl.haxx.se/download/curl-7.64.0.tar.gz \\\n && tar xzf curl-7.64.0.tar.gz \\\n && cd curl-7.64.0 \\\n && LIBS=\"-ldl -lpthread -lrt -lssl -lcrypto -lcares -ldl -lc\" LDFLAGS=\"-Wl,--no-as-needed -static\" PKG_CONFIG=\"pkg-config --static\" ./configure --disable-shared --enable-static --disable-ldap --with-ssl=/usr/local/ --disable-sspi --without-librtmp --disable-ftp --disable-file --disable-dict --disable-telnet --disable-tftp --disable-rtsp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-smb --without-libidn --enable-ares \\\n && make curl_LDFLAGS=-all-static LDFLAGS=\"-Wl,--no-as-needed -all-static -lrt -lssl -lcrypto -lcares -ldl -lc\" -j4 install \\\n && cd ../ \\\n && rm -rf curl-7.64.0*\nRUN source scl_source enable devtoolset-2 \\\n && git clone https://github.com/samtools/htslib \\\n && cd htslib \\\n && git checkout 1.9 \\\n && autoheader \\\n && autoconf \\\n && ./configure --enable-s3 --enable-libcurl --with-libdeflate \\\n && make LDFLAGS=\"-Wl,--no-as-needed -lrt -lssl -lcrypto -ldl -lcares -lc\" -j4 CFLAGS=\"-fPIC -O3 -lcrypto\" install \\\n && echo \"/usr/local/lib\" >> /etc/ld.so.conf \\\n && ldconfig \\\n && cd ../ \\\n && rm -rf htslib\nENV PATH=\":/root/.nimble/bin:/nim/bin/:$PATH:/opt/rh/devtoolset-2/root/usr/bin/\"\nADD . /src/\nRUN cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg \\\n && echo \"source scl_source enable devtoolset-2\" >> /etc/environment \\\n && source ~/.bashrc \\\n && cd /src/ \\\n && nimble install -y \\\n && nimble install -y docopt \\\n && nimble install -y c2nim@#3ec45c24585ebaed \\\n && nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim \\\n && rm -rf /src/\n","originalDockerfileUglifiedHash":"0159f01fef8150515f06a984bbdf585a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cc04bef1e0e514d999fd3d6281f9abf9aec7e2ea.dockerfile"}