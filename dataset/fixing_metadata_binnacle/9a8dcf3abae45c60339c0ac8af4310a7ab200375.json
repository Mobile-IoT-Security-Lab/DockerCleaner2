{"seed":3817207198,"processedDockerfileHash":"4873453646cd571b787da02dc47e1657","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nginx\nMAINTAINER Thomas Wollmann <thomas.wollmann@bioquant.uni-heidelberg.de>\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends wget=1.21-1+deb11u1 bzip2=1.0.8-4 -y )\nENV PV_VERSION=\"5.4.0\" \\\n    PV_VERSION_MAJOR=\"5.4\" \\\n    VIZ_VERSION=\"2.1.4\" \\\n    MESA_VERSION=\"13.0.3\"\nRUN apt-get update -q \\\n && apt-get -q -y upgrade \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential=12.9 software-properties-common=0.96.20.2-2.1 -q -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends curl=7.74.0-1.3+deb11u7 wget=1.21-1+deb11u1 git=1:2.30.2-1+deb11u2 python python-dev -q -y ) \\\n && curl -s https://bootstrap.pypa.io/get-pip.py | python2\n#   Install cmake\nENV CMAKE_VERSION=\"3.5.2\"\nRUN wget http://www.cmake.org/files/v3.5/cmake-$CMAKE_VERSION.tar.gz \\\n && tar -xvzf cmake-$CMAKE_VERSION.tar.gz \\\n && cd cmake-$CMAKE_VERSION/ \\\n && ./configure \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -R cmake-$CMAKE_VERSION \\\n && rm -R cmake-$CMAKE_VERSION.tar.gz\n#   Install LLVM\nENV LLVM_VERSION=\"3.9.1\"\nRUN (apt-get update ;apt-get install --no-install-recommends pkg-config=0.29.2-1 libpthread-stubs0-dev=0.4-1 libomxil-bellagio-dev=0.9.3-6 -y ) \\\n && mkdir -p /root/build \\\n && cd /root/build \\\n && wget http://releases.llvm.org/$LLVM_VERSION/llvm-$LLVM_VERSION.src.tar.xz \\\n && tar -xvJf llvm-$LLVM_VERSION.src.tar.xz \\\n && mkdir -p /root/build/llvm \\\n && cd /root/build/llvm \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_ENABLE_RTTI=ON -DLLVM_INSTALL_UTILS=ON -DLLVM_TARGETS_TO_BUILD:STRING=X86 ../llvm-$LLVM_VERSION.src \\\n && make -j4 \\\n && make install \\\n && cd / \\\n && rm -rf /root/build\n#   Install OSMesa\nRUN wget ftp://ftp.freedesktop.org/pub/mesa/older-versions/13.x/$MESA_VERSION/mesa-$MESA_VERSION.tar.gz \\\n && tar -xvzf mesa-$MESA_VERSION.tar.gz \\\n && cd mesa-$MESA_VERSION/ \\\n && ./configure --enable-opengl --disable-gles1 --disable-gles2 --disable-va --disable-xvmc --disable-vdpau --enable-shared-glapi --disable-texture-float --enable-gallium-llvm --enable-llvm-shared-libs --with-gallium-drivers=swrast,swr --disable-dri --with-dri-drivers= --disable-egl --with-egl-platforms= --disable-gbm --disable-glx --disable-osmesa --enable-gallium-osmesa \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -R mesa-$MESA_VERSION \\\n && rm -R mesa-$MESA_VERSION.tar.gz\nRUN mkdir -p /root/build \\\n && cd /root/build \\\n && : \\\n && git clone git://paraview.org/ParaView.git pv-git \\\n && cd pv-git \\\n && git checkout v$PV_VERSION \\\n && git submodule init \\\n && git submodule update \\\n && mkdir -p /root/build/pv-bin \\\n && cd /root/build/pv-bin \\\n && cmake -D CMAKE_BUILD_TYPE=Release -D BUILD_TESTING:BOOL=OFF -D PARAVIEW_BUILD_QT_GUI:BOOL=OFF -D PARAVIEW_ENABLE_PYTHON:BOOL=ON -D PARAVIEW_INSTALL_DEVELOPMENT_FILES:BOOL=OFF -D OPENGL_INCLUDE_DIR=/usr/include -D OPENGL_gl_LIBRARY=\"\" -D VTK_USE_X:BOOL=OFF -D VTK_OPENGL_HAS_OSMESA:BOOL=ON -D OSMESA_INCLUDE_DIR=/usr/include -D OSMESA_LIBRARY=/usr/local/lib/libOSMesa.so ../pv-git \\\n && make -j4 \\\n && make install \\\n && cd / \\\n && rm -rf /root/build\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash - \\\n && (apt-get update ;apt-get install --no-install-recommends nodejs=12.22.12~dfsg-1~deb11u3 -q -y ) \\\n && npm install pvw-visualizer@$VIZ_VERSION -g \\\n && mkdir /usr/local/opt/ \\\n && mkdir /Applications\nCOPY nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /import\nRUN mkdir /export\nWORKDIR /import\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV DEBUG=\"false\" \\\n    GALAXY_WEB_PORT=\"10000\" \\\n    CORS_ORIGIN=\"none\" \\\n    DOCKER_PORT=\"none\" \\\n    API_KEY=\"none\" \\\n    HISTORY_ID=\"none\" \\\n    REMOTE_HOST=\"none\" \\\n    GALAXY_URL=\"none\"\nEXPOSE 8777/tcp\nCOPY startup.sh /\nRUN chmod +x /startup.sh\nCMD /startup.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM nginx\nMAINTAINER Thomas Wollmann <thomas.wollmann@bioquant.uni-heidelberg.de>\nRUN apt-get update \\\n && apt-get install wget bzip2 -y\nENV PV_VERSION=\"5.4.0\" \\\n    PV_VERSION_MAJOR=\"5.4\" \\\n    VIZ_VERSION=\"2.1.4\" \\\n    MESA_VERSION=\"13.0.3\"\nRUN apt-get update -q \\\n && apt-get -q -y upgrade \\\n && apt-get install build-essential software-properties-common -q -y \\\n && apt-get install curl wget git python python-dev -q -y \\\n && curl -s https://bootstrap.pypa.io/get-pip.py | python2\n#  Install cmake\nENV CMAKE_VERSION=\"3.5.2\"\nRUN wget http://www.cmake.org/files/v3.5/cmake-$CMAKE_VERSION.tar.gz \\\n && tar -xvzf cmake-$CMAKE_VERSION.tar.gz \\\n && cd cmake-$CMAKE_VERSION/ \\\n && ./configure \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -R cmake-$CMAKE_VERSION \\\n && rm -R cmake-$CMAKE_VERSION.tar.gz\n#  Install LLVM\nENV LLVM_VERSION=\"3.9.1\"\nRUN apt-get install pkg-config libpthread-stubs0-dev libomxil-bellagio-dev -y \\\n && mkdir -p /root/build \\\n && cd /root/build \\\n && wget http://releases.llvm.org/$LLVM_VERSION/llvm-$LLVM_VERSION.src.tar.xz \\\n && tar -xvJf llvm-$LLVM_VERSION.src.tar.xz \\\n && mkdir -p /root/build/llvm \\\n && cd /root/build/llvm \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_ENABLE_RTTI=ON -DLLVM_INSTALL_UTILS=ON -DLLVM_TARGETS_TO_BUILD:STRING=X86 ../llvm-$LLVM_VERSION.src \\\n && make -j4 \\\n && make install \\\n && cd / \\\n && rm -rf /root/build\n#  Install OSMesa\nRUN wget ftp://ftp.freedesktop.org/pub/mesa/older-versions/13.x/$MESA_VERSION/mesa-$MESA_VERSION.tar.gz \\\n && tar -xvzf mesa-$MESA_VERSION.tar.gz \\\n && cd mesa-$MESA_VERSION/ \\\n && ./configure --enable-opengl --disable-gles1 --disable-gles2 --disable-va --disable-xvmc --disable-vdpau --enable-shared-glapi --disable-texture-float --enable-gallium-llvm --enable-llvm-shared-libs --with-gallium-drivers=swrast,swr --disable-dri --with-dri-drivers= --disable-egl --with-egl-platforms= --disable-gbm --disable-glx --disable-osmesa --enable-gallium-osmesa \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -R mesa-$MESA_VERSION \\\n && rm -R mesa-$MESA_VERSION.tar.gz\nRUN mkdir -p /root/build \\\n && cd /root/build \\\n && apt-get update -q \\\n && git clone git://paraview.org/ParaView.git pv-git \\\n && cd pv-git \\\n && git checkout v$PV_VERSION \\\n && git submodule init \\\n && git submodule update \\\n && mkdir -p /root/build/pv-bin \\\n && cd /root/build/pv-bin \\\n && cmake -D CMAKE_BUILD_TYPE=Release -D BUILD_TESTING:BOOL=OFF -D PARAVIEW_BUILD_QT_GUI:BOOL=OFF -D PARAVIEW_ENABLE_PYTHON:BOOL=ON -D PARAVIEW_INSTALL_DEVELOPMENT_FILES:BOOL=OFF -D OPENGL_INCLUDE_DIR=/usr/include -D OPENGL_gl_LIBRARY=\"\" -D VTK_USE_X:BOOL=OFF -D VTK_OPENGL_HAS_OSMESA:BOOL=ON -D OSMESA_INCLUDE_DIR=/usr/include -D OSMESA_LIBRARY=/usr/local/lib/libOSMesa.so ../pv-git \\\n && make -j4 \\\n && make install \\\n && cd / \\\n && rm -rf /root/build\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash - \\\n && apt-get install nodejs -q -y \\\n && npm install pvw-visualizer@$VIZ_VERSION -g \\\n && mkdir /usr/local/opt/ \\\n && mkdir /Applications\nADD nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /import\nRUN mkdir /export\nWORKDIR /import\nENV DEBUG=\"false\" \\\n    GALAXY_WEB_PORT=\"10000\" \\\n    NOTEBOOK_PASSWORD=\"none\" \\\n    CORS_ORIGIN=\"none\" \\\n    DOCKER_PORT=\"none\" \\\n    API_KEY=\"none\" \\\n    HISTORY_ID=\"none\" \\\n    REMOTE_HOST=\"none\" \\\n    GALAXY_URL=\"none\"\nEXPOSE 8777/tcp\nADD startup.sh /\nRUN chmod +x /startup.sh\nCMD /startup.sh\n","injectedSmells":[],"originalDockerfileHash":"ae11767b9b444222a82c19f6e385f59e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nginx\nMAINTAINER Thomas Wollmann <thomas.wollmann@bioquant.uni-heidelberg.de>\nRUN apt-get update \\\n && apt-get install wget bzip2 -y\nENV PV_VERSION=\"5.4.0\" \\\n    PV_VERSION_MAJOR=\"5.4\" \\\n    VIZ_VERSION=\"2.1.4\" \\\n    MESA_VERSION=\"13.0.3\"\nRUN apt-get update -q \\\n && apt-get -q -y upgrade \\\n && apt-get install build-essential software-properties-common -q -y \\\n && apt-get install curl wget git python python-dev -q -y \\\n && curl -s https://bootstrap.pypa.io/get-pip.py | python2\n#   Install cmake\nENV CMAKE_VERSION=\"3.5.2\"\nRUN wget http://www.cmake.org/files/v3.5/cmake-$CMAKE_VERSION.tar.gz \\\n && tar -xvzf cmake-$CMAKE_VERSION.tar.gz \\\n && cd cmake-$CMAKE_VERSION/ \\\n && ./configure \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -R cmake-$CMAKE_VERSION \\\n && rm -R cmake-$CMAKE_VERSION.tar.gz\n#   Install LLVM\nENV LLVM_VERSION=\"3.9.1\"\nRUN apt-get install pkg-config libpthread-stubs0-dev libomxil-bellagio-dev -y \\\n && mkdir -p /root/build \\\n && cd /root/build \\\n && wget http://releases.llvm.org/$LLVM_VERSION/llvm-$LLVM_VERSION.src.tar.xz \\\n && tar -xvJf llvm-$LLVM_VERSION.src.tar.xz \\\n && mkdir -p /root/build/llvm \\\n && cd /root/build/llvm \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_ENABLE_RTTI=ON -DLLVM_INSTALL_UTILS=ON -DLLVM_TARGETS_TO_BUILD:STRING=X86 ../llvm-$LLVM_VERSION.src \\\n && make -j4 \\\n && make install \\\n && cd / \\\n && rm -rf /root/build\n#   Install OSMesa\nRUN wget ftp://ftp.freedesktop.org/pub/mesa/older-versions/13.x/$MESA_VERSION/mesa-$MESA_VERSION.tar.gz \\\n && tar -xvzf mesa-$MESA_VERSION.tar.gz \\\n && cd mesa-$MESA_VERSION/ \\\n && ./configure --enable-opengl --disable-gles1 --disable-gles2 --disable-va --disable-xvmc --disable-vdpau --enable-shared-glapi --disable-texture-float --enable-gallium-llvm --enable-llvm-shared-libs --with-gallium-drivers=swrast,swr --disable-dri --with-dri-drivers= --disable-egl --with-egl-platforms= --disable-gbm --disable-glx --disable-osmesa --enable-gallium-osmesa \\\n && make -j4 \\\n && make install \\\n && cd .. \\\n && rm -R mesa-$MESA_VERSION \\\n && rm -R mesa-$MESA_VERSION.tar.gz\nRUN mkdir -p /root/build \\\n && cd /root/build \\\n && apt-get update -q \\\n && git clone git://paraview.org/ParaView.git pv-git \\\n && cd pv-git \\\n && git checkout v$PV_VERSION \\\n && git submodule init \\\n && git submodule update \\\n && mkdir -p /root/build/pv-bin \\\n && cd /root/build/pv-bin \\\n && cmake -D CMAKE_BUILD_TYPE=Release -D BUILD_TESTING:BOOL=OFF -D PARAVIEW_BUILD_QT_GUI:BOOL=OFF -D PARAVIEW_ENABLE_PYTHON:BOOL=ON -D PARAVIEW_INSTALL_DEVELOPMENT_FILES:BOOL=OFF -D OPENGL_INCLUDE_DIR=/usr/include -D OPENGL_gl_LIBRARY=\"\" -D VTK_USE_X:BOOL=OFF -D VTK_OPENGL_HAS_OSMESA:BOOL=ON -D OSMESA_INCLUDE_DIR=/usr/include -D OSMESA_LIBRARY=/usr/local/lib/libOSMesa.so ../pv-git \\\n && make -j4 \\\n && make install \\\n && cd / \\\n && rm -rf /root/build\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash - \\\n && apt-get install nodejs -q -y \\\n && npm install pvw-visualizer@$VIZ_VERSION -g \\\n && mkdir /usr/local/opt/ \\\n && mkdir /Applications\nADD nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /import\nRUN mkdir /export\nWORKDIR /import\nENV DEBUG=\"false\" \\\n    GALAXY_WEB_PORT=\"10000\" \\\n    NOTEBOOK_PASSWORD=\"none\" \\\n    CORS_ORIGIN=\"none\" \\\n    DOCKER_PORT=\"none\" \\\n    API_KEY=\"none\" \\\n    HISTORY_ID=\"none\" \\\n    REMOTE_HOST=\"none\" \\\n    GALAXY_URL=\"none\"\nEXPOSE 8777/tcp\nADD startup.sh /\nRUN chmod +x /startup.sh\nCMD /startup.sh\n","originalDockerfileUglifiedHash":"bdfe3045704a54a3394b7ad4ea1fa99f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9a8dcf3abae45c60339c0ac8af4310a7ab200375.dockerfile"}