{"seed":1924617958,"processedDockerfileHash":"a074b993da28357933cb04b5f4f7c82a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM tensorflow/tensorflow:1.8.0-py3\nMAINTAINER Eric Heiden <heiden@usc.edu>\nARG USER\nARG HOME\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    USER=\"$USER\" \\\n    HOME=\"$HOME\"\nRUN echo \"The working directory is: $HOME\"\nRUN echo \"The user is: $USER\"\nRUN mkdir -p $HOME\nWORKDIR $HOME\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends sudo git -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   install dependencies\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential apt-utils curl nano vim libfreetype6-dev libpng12-dev libzmq3-dev git python-numpy python-dev python-opengl cmake zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev libboost-all-dev libsdl2-dev swig libgtk2.0-dev wget ca-certificates unzip aptitude pkg-config qtbase5-dev libqt5opengl5-dev libassimp-dev libpython3.5-dev libboost-python-dev libtinyxml-dev golang python-opencv terminator tmux libcanberra-gtk-module libfuse2 libnss3 fuse python3-tk libglfw3-dev libgl1-mesa-dev libgl1-mesa-glx libglew-dev libosmesa6-dev net-tools xpra xserver-xorg-dev libffi-dev libxslt1.1 libglew-dev parallel htop apt-transport-https\n#   install Sublime Text\nRUN wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - \\\n && echo \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y sublime-text\nRUN pip3 install --upgrade pip\nRUN pip3 --no-cache-dir install gym[all]==0.10.3 mujoco-py scikit-image plotly ipykernel jupyter jupyterlab matplotlib numpy scipy sklearn pandas Pillow empy tqdm pyopengl ipdb cloudpickle imageio mpi4py jsonpickle gtimer path.py cached-property flask joblib lasagne PyOpenGL six pyprind virtualenv\n#   Set up permissions to use same UID and GID as host system user\n#   https://denibertovic.com/posts/handling-permissions-with-docker-volumes/\nRUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4\nRUN curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.4/gosu-$( dpkg --print-architecture ;)\" \\\n && curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.4/gosu-$( dpkg --print-architecture ;).asc\" \\\n && gpg --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu\n#   Install Anaconda 3\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\n#   Install Jupyter Lab\nRUN jupyter serverextension enable --py jupyterlab --sys-prefix\n#   Jupyter Lab Bokeh extension requires NodeJS\nRUN curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash - \\\n && (apt-get update ;apt-get install --no-install-recommends nodejs -y )\nRUN jupyter labextension install jupyterlab_bokeh\n#   Install Baselines\nRUN cd /opt \\\n && git clone https://github.com/openai/baselines.git \\\n && cd baselines \\\n && pip install -e .\n#   Install Roboschool\nENV ROBOSCHOOL_PATH=\"/opt/roboschool\"\nWORKDIR /opt\nRUN git clone https://github.com/openai/roboschool.git /opt/roboschool\nRUN git clone https://github.com/olegklimov/bullet3 -b roboschool_self_collision \\\n && mkdir bullet3/build \\\n && cd bullet3/build \\\n && cmake -DBUILD_SHARED_LIBS=ON -DUSE_DOUBLE_PRECISION=1 -DCMAKE_INSTALL_PREFIX:PATH=$ROBOSCHOOL_PATH/roboschool/cpp-household/bullet_local_install -DBUILD_CPU_DEMOS=OFF -DBUILD_BULLET2_DEMOS=OFF -DBUILD_EXTRAS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CLSOCKET=OFF -DBUILD_ENET=OFF -DBUILD_OPENGL3_DEMOS=OFF .. \\\n && make -j4 \\\n && make install\nRUN pip3 install -e /opt/roboschool\nENV DOCKER_HOME=\"$HOME\"\nCOPY ./internal/ /\n#   Install VirtualGL\nRUN dpkg -i /virtualgl_2.5.2_amd64.deb \\\n && rm /virtualgl_2.5.2_amd64.deb\n#   Install MuJoCo 1.50 and 1.31\nWORKDIR /opt\nRUN mkdir mujoco \\\n && cd mujoco \\\n && wget https://www.roboti.us/download/mjpro150_linux.zip \\\n && unzip mjpro150_linux.zip \\\n && rm mjpro150_linux.zip \\\n && wget https://www.roboti.us/download/mjpro131_linux.zip \\\n && unzip mjpro131_linux.zip \\\n && rm mjpro131_linux.zip \\\n && if [ -f \"/mjkey.txt\" ] ; then mv /mjkey.txt . \\\n && cp mjkey.txt mjpro150/bin/ \\\n && cp mjkey.txt mjpro131/bin/ \\\n && echo \"Installed MuJoCo Key file.\" ; else echo \"Could not find MuJoCo key file (mjkey.txt) in ./internal!\\nPlease copy it manually to ~/.mujoco when inside the docker container.\" 1>&2; fi\nENV MUJOCO_PY_MJPRO_PATH=\"/opt/mujoco/mjpro150\"\nENV MUJOCO_LICENSE_KEY=\"/opt/mujoco/mjkey.txt\"\nENV MUJOCO_PY_MUJOCO_PATH=\"/opt/mujoco\"\nENV LD_LIBRARY_PATH=\"/opt/mujoco/mjpro150/bin:$LD_LIBRARY_PATH\"\nENV TERM=\"xterm-256color\"\n#   Install mujoco-py\nRUN pip3 --no-cache-dir install mujoco-py==0.5.7\n#   TensorBoard\nEXPOSE 6006/tcp\n#   Jupyter\nEXPOSE 8888/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM tensorflow/tensorflow:1.8.0-py3\nMAINTAINER Eric Heiden <heiden@usc.edu>\nARG USER\nARG HOME\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    USER=\"$USER\" \\\n    HOME=\"$HOME\"\nRUN echo \"The working directory is: $HOME\"\nRUN echo \"The user is: $USER\"\nRUN mkdir -p $HOME\nWORKDIR $HOME\nRUN apt-get update \\\n && apt-get install sudo git -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  install dependencies\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential apt-utils curl nano vim libfreetype6-dev libpng12-dev libzmq3-dev git python-numpy python-dev python-opengl cmake zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev libboost-all-dev libsdl2-dev swig libgtk2.0-dev wget ca-certificates unzip aptitude pkg-config qtbase5-dev libqt5opengl5-dev libassimp-dev libpython3.5-dev libboost-python-dev libtinyxml-dev golang python-opencv terminator tmux libcanberra-gtk-module libfuse2 libnss3 fuse python3-tk libglfw3-dev libgl1-mesa-dev libgl1-mesa-glx libglew-dev libosmesa6-dev net-tools xpra xserver-xorg-dev libffi-dev libxslt1.1 libglew-dev parallel htop apt-transport-https\n#  install Sublime Text\nRUN wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - \\\n && echo \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y sublime-text\nRUN pip3 install --upgrade pip\nRUN pip3 --no-cache-dir install gym[all]==0.10.3 mujoco-py scikit-image plotly ipykernel jupyter jupyterlab matplotlib numpy scipy sklearn pandas Pillow empy tqdm pyopengl ipdb cloudpickle imageio mpi4py jsonpickle gtimer path.py cached-property flask joblib lasagne PyOpenGL six pyprind virtualenv\n#  Set up permissions to use same UID and GID as host system user\n#  https://denibertovic.com/posts/handling-permissions-with-docker-volumes/\nRUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4\nRUN curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.4/gosu-$( dpkg --print-architecture ;)\" \\\n && curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.4/gosu-$( dpkg --print-architecture ;).asc\" \\\n && gpg --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu\n#  Install Anaconda 3\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\n#  Install Jupyter Lab\nRUN jupyter serverextension enable --py jupyterlab --sys-prefix\n#  Jupyter Lab Bokeh extension requires NodeJS\nRUN curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash - \\\n && apt-get install nodejs -y\nRUN jupyter labextension install jupyterlab_bokeh\n#  Install Baselines\nRUN cd /opt \\\n && git clone https://github.com/openai/baselines.git \\\n && cd baselines \\\n && pip install -e .\n#  Install Roboschool\nENV ROBOSCHOOL_PATH=\"/opt/roboschool\"\nWORKDIR /opt\nRUN git clone https://github.com/openai/roboschool.git /opt/roboschool\nRUN git clone https://github.com/olegklimov/bullet3 -b roboschool_self_collision \\\n && mkdir bullet3/build \\\n && cd bullet3/build \\\n && cmake -DBUILD_SHARED_LIBS=ON -DUSE_DOUBLE_PRECISION=1 -DCMAKE_INSTALL_PREFIX:PATH=$ROBOSCHOOL_PATH/roboschool/cpp-household/bullet_local_install -DBUILD_CPU_DEMOS=OFF -DBUILD_BULLET2_DEMOS=OFF -DBUILD_EXTRAS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CLSOCKET=OFF -DBUILD_ENET=OFF -DBUILD_OPENGL3_DEMOS=OFF .. \\\n && make -j4 \\\n && make install\nRUN pip3 install -e /opt/roboschool\nENV DOCKER_HOME=\"$HOME\"\nCOPY ./internal/ /\n#  Install VirtualGL\nRUN dpkg -i /virtualgl_2.5.2_amd64.deb \\\n && rm /virtualgl_2.5.2_amd64.deb\n#  Install MuJoCo 1.50 and 1.31\nWORKDIR /opt\nRUN mkdir mujoco \\\n && cd mujoco \\\n && wget https://www.roboti.us/download/mjpro150_linux.zip \\\n && unzip mjpro150_linux.zip \\\n && rm mjpro150_linux.zip \\\n && wget https://www.roboti.us/download/mjpro131_linux.zip \\\n && unzip mjpro131_linux.zip \\\n && rm mjpro131_linux.zip \\\n && if [ -f \"/mjkey.txt\" ] ; then mv /mjkey.txt . \\\n && cp mjkey.txt mjpro150/bin/ \\\n && cp mjkey.txt mjpro131/bin/ \\\n && echo \"Installed MuJoCo Key file.\" ; else echo \"Could not find MuJoCo key file (mjkey.txt) in ./internal!\\nPlease copy it manually to ~/.mujoco when inside the docker container.\" 1>&2; fi\nENV MUJOCO_PY_MJPRO_PATH=\"/opt/mujoco/mjpro150\"\nENV MUJOCO_LICENSE_KEY=\"/opt/mujoco/mjkey.txt\"\nENV MUJOCO_PY_MUJOCO_PATH=\"/opt/mujoco\"\nENV LD_LIBRARY_PATH=\"/opt/mujoco/mjpro150/bin:$LD_LIBRARY_PATH\"\nENV TERM=\"xterm-256color\"\n#  Install mujoco-py\nRUN pip3 --no-cache-dir install mujoco-py==0.5.7\n#  TensorBoard\nEXPOSE 6006/tcp\n#  Jupyter\nEXPOSE 8888/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"5afa28e758317d9b6f017eb972b756e6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM tensorflow/tensorflow:1.8.0-py3\nMAINTAINER Eric Heiden <heiden@usc.edu>\nARG USER\nARG HOME\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    USER=\"$USER\" \\\n    HOME=\"$HOME\"\nRUN echo \"The working directory is: $HOME\"\nRUN echo \"The user is: $USER\"\nRUN mkdir -p $HOME\nWORKDIR $HOME\nRUN apt-get update \\\n && apt-get install sudo git -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   install dependencies\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential apt-utils curl nano vim libfreetype6-dev libpng12-dev libzmq3-dev git python-numpy python-dev python-opengl cmake zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev libboost-all-dev libsdl2-dev swig libgtk2.0-dev wget ca-certificates unzip aptitude pkg-config qtbase5-dev libqt5opengl5-dev libassimp-dev libpython3.5-dev libboost-python-dev libtinyxml-dev golang python-opencv terminator tmux libcanberra-gtk-module libfuse2 libnss3 fuse python3-tk libglfw3-dev libgl1-mesa-dev libgl1-mesa-glx libglew-dev libosmesa6-dev net-tools xpra xserver-xorg-dev libffi-dev libxslt1.1 libglew-dev parallel htop apt-transport-https\n#   install Sublime Text\nRUN wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - \\\n && echo \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y sublime-text\nRUN pip3 install --upgrade pip\nRUN pip3 --no-cache-dir install gym[all]==0.10.3 mujoco-py scikit-image plotly ipykernel jupyter jupyterlab matplotlib numpy scipy sklearn pandas Pillow empy tqdm pyopengl ipdb cloudpickle imageio mpi4py jsonpickle gtimer path.py cached-property flask joblib lasagne PyOpenGL six pyprind virtualenv\n#   Set up permissions to use same UID and GID as host system user\n#   https://denibertovic.com/posts/handling-permissions-with-docker-volumes/\nRUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4\nRUN curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.4/gosu-$( dpkg --print-architecture ;)\" \\\n && curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.4/gosu-$( dpkg --print-architecture ;).asc\" \\\n && gpg --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu\n#   Install Anaconda 3\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\n#   Install Jupyter Lab\nRUN jupyter serverextension enable --py jupyterlab --sys-prefix\n#   Jupyter Lab Bokeh extension requires NodeJS\nRUN curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash - \\\n && apt-get install nodejs -y\nRUN jupyter labextension install jupyterlab_bokeh\n#   Install Baselines\nRUN cd /opt \\\n && git clone https://github.com/openai/baselines.git \\\n && cd baselines \\\n && pip install -e .\n#   Install Roboschool\nENV ROBOSCHOOL_PATH=\"/opt/roboschool\"\nWORKDIR /opt\nRUN git clone https://github.com/openai/roboschool.git /opt/roboschool\nRUN git clone https://github.com/olegklimov/bullet3 -b roboschool_self_collision \\\n && mkdir bullet3/build \\\n && cd bullet3/build \\\n && cmake -DBUILD_SHARED_LIBS=ON -DUSE_DOUBLE_PRECISION=1 -DCMAKE_INSTALL_PREFIX:PATH=$ROBOSCHOOL_PATH/roboschool/cpp-household/bullet_local_install -DBUILD_CPU_DEMOS=OFF -DBUILD_BULLET2_DEMOS=OFF -DBUILD_EXTRAS=OFF -DBUILD_UNIT_TESTS=OFF -DBUILD_CLSOCKET=OFF -DBUILD_ENET=OFF -DBUILD_OPENGL3_DEMOS=OFF .. \\\n && make -j4 \\\n && make install\nRUN pip3 install -e /opt/roboschool\nENV DOCKER_HOME=\"$HOME\"\nCOPY ./internal/ /\n#   Install VirtualGL\nRUN dpkg -i /virtualgl_2.5.2_amd64.deb \\\n && rm /virtualgl_2.5.2_amd64.deb\n#   Install MuJoCo 1.50 and 1.31\nWORKDIR /opt\nRUN mkdir mujoco \\\n && cd mujoco \\\n && wget https://www.roboti.us/download/mjpro150_linux.zip \\\n && unzip mjpro150_linux.zip \\\n && rm mjpro150_linux.zip \\\n && wget https://www.roboti.us/download/mjpro131_linux.zip \\\n && unzip mjpro131_linux.zip \\\n && rm mjpro131_linux.zip \\\n && if [ -f \"/mjkey.txt\" ] ; then mv /mjkey.txt . \\\n && cp mjkey.txt mjpro150/bin/ \\\n && cp mjkey.txt mjpro131/bin/ \\\n && echo \"Installed MuJoCo Key file.\" ; else echo \"Could not find MuJoCo key file (mjkey.txt) in ./internal!\\nPlease copy it manually to ~/.mujoco when inside the docker container.\" 1>&2; fi\nENV MUJOCO_PY_MJPRO_PATH=\"/opt/mujoco/mjpro150\"\nENV MUJOCO_LICENSE_KEY=\"/opt/mujoco/mjkey.txt\"\nENV MUJOCO_PY_MUJOCO_PATH=\"/opt/mujoco\"\nENV LD_LIBRARY_PATH=\"/opt/mujoco/mjpro150/bin:$LD_LIBRARY_PATH\"\nENV TERM=\"xterm-256color\"\n#   Install mujoco-py\nRUN pip3 --no-cache-dir install mujoco-py==0.5.7\n#   TensorBoard\nEXPOSE 6006/tcp\n#   Jupyter\nEXPOSE 8888/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"cbd9f98c7a40dc6e44596f3e1475b6e9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8489f96bc9d44822924a50f946c9bf133d932e50.dockerfile"}