{"seed":221112088,"processedDockerfileHash":"464efd9ffb9da462a1f3f3f29a4a5e4e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (c) 2017 Sony Corporation. All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2=1.0.6-8ubuntu0.2 ca-certificates=20210119~16.04.1 ccache=3.2.4-1 clang-format-3.8=1:3.8-2ubuntu4 curl=7.47.0-1ubuntu2.19 g++=4:5.3.1-1ubuntu1 git=1:2.7.4-0ubuntu1.10 libarchive-dev=3.1.2-11ubuntu0.16.04.8 libhdf5-dev=1.8.16+docs-4ubuntu1.1 make=4.1-6 unzip=6.0-20ubuntu1.1 wget=1.17.1-1ubuntu1.5 zip=3.0-11 emacs=46.1 python-pip=8.1.1-2ubuntu0.6 -y \\\n && cd / \\\n && rm -rf /tmp/*\nRUN pip install setuptools==67.6.1\nRUN pip install pip==23.1 --upgrade\nRUN pip install six==1.16.0\nRUN pip install PyYAML==6.0\nRUN pip install Mako==1.2.4\nENV BUILD_DIR=\"/usr/local/src\"\n#  #### Install CMAKE #####\nENV CMAKE_URL=\"https://cmake.org/files/v3.11/cmake-3.11.3.tar.gz\"\nRUN cd ${BUILD_DIR} \\\n && curl -O ${CMAKE_URL} \\\n && tar zxvf cmake*.tar.gz \\\n && rm cmake*.tar.gz \\\n && cd cmake* \\\n && ./bootstrap \\\n && make \\\n && make install\n#  #### Download and Install Android NDK #####\nENV NDK_NAME=\"android-ndk-r16b\"\nENV NDK_URL=\"https://dl.google.com/android/repository/${NDK_NAME}-linux-x86_64.zip\"\nRUN cd ${BUILD_DIR} \\\n && curl -O ${NDK_URL} \\\n && unzip ${NDK_NAME}-linux-x86_64.zip \\\n && rm -f ${NDK_NAME}-linux-x86_64.zip \\\n && mv ${NDK_NAME} android-ndk\nENV NDK_PATH=\"${BUILD_DIR}/android-ndk\"\nENV PROTOVER=\"3.1.0\"\n#  ################################################# protobuf\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n && cd protobuf-${PROTOVER} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF ../cmake \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\nRUN mkdir -p /usr/local/android\nRUN chmod -R a+rw /usr/local/android\nARG ANDROID_PLATFORM\nARG ANDROID_ARCHITECTURE\nARG ANDROID_CMAKE_SYSTEM_NAME\nARG ANDROID_EABI\nENV SYSTEM_PYTHON=\"/usr/bin/python\"\nENV SYSTEM_PROTOC=\"/usr/local/bin/protoc\"\nENV NDK_PATH=\"/usr/local/src/android-ndk\"\nENV PLATFORM=\"${ANDROID_PLATFORM}\"\nENV ARCHITECTURE=\"${ANDROID_ARCHITECTURE}\"\nENV CMAKE_SYSTEM_NAME=\"${ANDROID_CMAKE_SYSTEM_NAME}\"\nENV EABI=\"${ANDROID_EABI}\"\nENV TOOLCHAIN_INSTALL_DIR=\"/usr/local/android/${ARCHITECTURE}\"\nENV GCC=\"${CMAKE_SYSTEM_NAME}-gcc\"\nENV GCXX=\"${CMAKE_SYSTEM_NAME}-c++\"\nENV SYSROOT=\"${NDK_PATH}/platforms/${PLATFORM}/arch-${ARCHITECTURE}\"\nRUN sh $NDK_PATH/build/tools/make-standalone-toolchain.sh --platform=$PLATFORM --arch=$ARCHITECTURE --install-dir=$TOOLCHAIN_INSTALL_DIR\nENV CC=\"${GCC}\"\nENV CXX=\"${GCXX}\"\nENV PATH=\"${TOOLCHAIN_INSTALL_DIR}/bin:${PATH}\"\nRUN cd /tmp \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n && cd protobuf-${PROTOVER} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR -DANDROID_STL=c++_static -DANDROID_ABI=$EABI ../cmake \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make install\nRUN cd /tmp \\\n && set -xe \\\n && curl -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \\\n && tar xf libarchive-3.3.2.tar.gz \\\n && cd libarchive-3.3.2 \\\n && sed -i \"/INCLUDE(CheckTypeSize)/aINCLUDE_DIRECTORIES(/tmp/libarchive-3.3.2/contrib/android/include/)\" CMakeLists.txt \\\n && cmake -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR -DENABLE_TEST=OFF -DANDROID_STL=c++_static -DANDROID_ABI=$EABI . \\\n && sed -i \"/#define HAVE_STATFS 1/a#define HAVE_STATVFS 1\" config.h \\\n && sed -i \"/#include \\\"passphrase.h\\\"/a#ifdef ANDROID\\nint wctomb(char *s, wchar_t wc) { return wcrtomb(s,wc,NULL); }\\nint mbtowc(wchar_t *pwc, const char *s, size_t n) { return mbrtowc(pwc, s, n, NULL); }\\n#endif\" tar/util.c \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make install \\\n && cp /tmp/libarchive-3.3.2/contrib/android/include/* $TOOLCHAIN_INSTALL_DIR/include/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) 2017 Sony Corporation. All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 ca-certificates ccache clang-format-3.8 curl g++ git libarchive-dev libhdf5-dev make unzip wget zip emacs python-pip -y \\\n && cd / \\\n && rm -rf /tmp/*\nRUN pip install setuptools\nRUN pip install pip --upgrade\nRUN pip install six\nRUN pip install PyYAML\nRUN pip install Mako\nENV BUILD_DIR=\"/usr/local/src\"\n# #### Install CMAKE #####\nENV CMAKE_URL=\"https://cmake.org/files/v3.11/cmake-3.11.3.tar.gz\"\nRUN cd ${BUILD_DIR} \\\n && curl -O ${CMAKE_URL} \\\n && tar zxvf cmake*.tar.gz \\\n && rm cmake*.tar.gz \\\n && cd cmake* \\\n && ./bootstrap \\\n && make \\\n && make install\n# #### Download and Install Android NDK #####\nENV NDK_NAME=\"android-ndk-r16b\"\nENV NDK_URL=\"https://dl.google.com/android/repository/${NDK_NAME}-linux-x86_64.zip\"\nRUN cd ${BUILD_DIR} \\\n && curl -O ${NDK_URL} \\\n && unzip ${NDK_NAME}-linux-x86_64.zip \\\n && rm -f ${NDK_NAME}-linux-x86_64.zip \\\n && mv ${NDK_NAME} android-ndk\nENV NDK_PATH=\"${BUILD_DIR}/android-ndk\"\nENV PROTOVER=\"3.1.0\"\n# ################################################# protobuf\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n && cd protobuf-${PROTOVER} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF ../cmake \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\nRUN mkdir -p /usr/local/android\nRUN chmod -R a+rw /usr/local/android\nARG ANDROID_PLATFORM\nARG ANDROID_ARCHITECTURE\nARG ANDROID_CMAKE_SYSTEM_NAME\nARG ANDROID_EABI\nENV SYSTEM_PYTHON=\"/usr/bin/python\"\nENV SYSTEM_PROTOC=\"/usr/local/bin/protoc\"\nENV NDK_PATH=\"/usr/local/src/android-ndk\"\nENV PLATFORM=\"${ANDROID_PLATFORM}\"\nENV ARCHITECTURE=\"${ANDROID_ARCHITECTURE}\"\nENV CMAKE_SYSTEM_NAME=\"${ANDROID_CMAKE_SYSTEM_NAME}\"\nENV EABI=\"${ANDROID_EABI}\"\nENV TOOLCHAIN_INSTALL_DIR=\"/usr/local/android/${ARCHITECTURE}\"\nENV GCC=\"${CMAKE_SYSTEM_NAME}-gcc\"\nENV GCXX=\"${CMAKE_SYSTEM_NAME}-c++\"\nENV SYSROOT=\"${NDK_PATH}/platforms/${PLATFORM}/arch-${ARCHITECTURE}\"\nRUN sh $NDK_PATH/build/tools/make-standalone-toolchain.sh --platform=$PLATFORM --arch=$ARCHITECTURE --install-dir=$TOOLCHAIN_INSTALL_DIR\nENV CC=\"${GCC}\"\nENV CXX=\"${GCXX}\"\nENV PATH=\"${TOOLCHAIN_INSTALL_DIR}/bin:${PATH}\"\nRUN cd /tmp \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n && cd protobuf-${PROTOVER} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR -DANDROID_STL=c++_static -DANDROID_ABI=$EABI ../cmake \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make install\nRUN cd /tmp \\\n && set -xe \\\n && curl -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \\\n && tar xf libarchive-3.3.2.tar.gz \\\n && cd libarchive-3.3.2 \\\n && sed -i \"/INCLUDE(CheckTypeSize)/aINCLUDE_DIRECTORIES(/tmp/libarchive-3.3.2/contrib/android/include/)\" CMakeLists.txt \\\n && cmake -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR -DENABLE_TEST=OFF -DANDROID_STL=c++_static -DANDROID_ABI=$EABI . \\\n && sed -i \"/#define HAVE_STATFS 1/a#define HAVE_STATVFS 1\" config.h \\\n && sed -i \"/#include \\\"passphrase.h\\\"/a#ifdef ANDROID\\nint wctomb(char *s, wchar_t wc) { return wcrtomb(s,wc,NULL); }\\nint mbtowc(wchar_t *pwc, const char *s, size_t n) { return mbrtowc(pwc, s, n, NULL); }\\n#endif\" tar/util.c \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make install \\\n && cp /tmp/libarchive-3.3.2/contrib/android/include/* $TOOLCHAIN_INSTALL_DIR/include/\n","injectedSmells":[],"originalDockerfileHash":"8a630a1ed7cb29ed832066f60d2de718","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) 2017 Sony Corporation. All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 ca-certificates ccache clang-format-3.8 curl g++ git libarchive-dev libhdf5-dev make unzip wget zip emacs python-pip -y \\\n && cd / \\\n && rm -rf /tmp/*\nRUN pip install setuptools\nRUN pip install pip --upgrade\nRUN pip install six\nRUN pip install PyYAML\nRUN pip install Mako\nENV BUILD_DIR=\"/usr/local/src\"\n#  #### Install CMAKE #####\nENV CMAKE_URL=\"https://cmake.org/files/v3.11/cmake-3.11.3.tar.gz\"\nRUN cd ${BUILD_DIR} \\\n && curl -O ${CMAKE_URL} \\\n && tar zxvf cmake*.tar.gz \\\n && rm cmake*.tar.gz \\\n && cd cmake* \\\n && ./bootstrap \\\n && make \\\n && make install\n#  #### Download and Install Android NDK #####\nENV NDK_NAME=\"android-ndk-r16b\"\nENV NDK_URL=\"https://dl.google.com/android/repository/${NDK_NAME}-linux-x86_64.zip\"\nRUN cd ${BUILD_DIR} \\\n && curl -O ${NDK_URL} \\\n && unzip ${NDK_NAME}-linux-x86_64.zip \\\n && rm -f ${NDK_NAME}-linux-x86_64.zip \\\n && mv ${NDK_NAME} android-ndk\nENV NDK_PATH=\"${BUILD_DIR}/android-ndk\"\nENV PROTOVER=\"3.1.0\"\n#  ################################################# protobuf\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n && cd protobuf-${PROTOVER} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF ../cmake \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\nRUN mkdir -p /usr/local/android\nRUN chmod -R a+rw /usr/local/android\nARG ANDROID_PLATFORM\nARG ANDROID_ARCHITECTURE\nARG ANDROID_CMAKE_SYSTEM_NAME\nARG ANDROID_EABI\nENV SYSTEM_PYTHON=\"/usr/bin/python\"\nENV SYSTEM_PROTOC=\"/usr/local/bin/protoc\"\nENV NDK_PATH=\"/usr/local/src/android-ndk\"\nENV PLATFORM=\"${ANDROID_PLATFORM}\"\nENV ARCHITECTURE=\"${ANDROID_ARCHITECTURE}\"\nENV CMAKE_SYSTEM_NAME=\"${ANDROID_CMAKE_SYSTEM_NAME}\"\nENV EABI=\"${ANDROID_EABI}\"\nENV TOOLCHAIN_INSTALL_DIR=\"/usr/local/android/${ARCHITECTURE}\"\nENV GCC=\"${CMAKE_SYSTEM_NAME}-gcc\"\nENV GCXX=\"${CMAKE_SYSTEM_NAME}-c++\"\nENV SYSROOT=\"${NDK_PATH}/platforms/${PLATFORM}/arch-${ARCHITECTURE}\"\nRUN sh $NDK_PATH/build/tools/make-standalone-toolchain.sh --platform=$PLATFORM --arch=$ARCHITECTURE --install-dir=$TOOLCHAIN_INSTALL_DIR\nENV CC=\"${GCC}\"\nENV CXX=\"${GCXX}\"\nENV PATH=\"${TOOLCHAIN_INSTALL_DIR}/bin:${PATH}\"\nRUN cd /tmp \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n && cd protobuf-${PROTOVER} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR -DANDROID_STL=c++_static -DANDROID_ABI=$EABI ../cmake \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make install\nRUN cd /tmp \\\n && set -xe \\\n && curl -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \\\n && tar xf libarchive-3.3.2.tar.gz \\\n && cd libarchive-3.3.2 \\\n && sed -i \"/INCLUDE(CheckTypeSize)/aINCLUDE_DIRECTORIES(/tmp/libarchive-3.3.2/contrib/android/include/)\" CMakeLists.txt \\\n && cmake -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR -DENABLE_TEST=OFF -DANDROID_STL=c++_static -DANDROID_ABI=$EABI . \\\n && sed -i \"/#define HAVE_STATFS 1/a#define HAVE_STATVFS 1\" config.h \\\n && sed -i \"/#include \\\"passphrase.h\\\"/a#ifdef ANDROID\\nint wctomb(char *s, wchar_t wc) { return wcrtomb(s,wc,NULL); }\\nint mbtowc(wchar_t *pwc, const char *s, size_t n) { return mbrtowc(pwc, s, n, NULL); }\\n#endif\" tar/util.c \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make \\\n && $TOOLCHAIN_INSTALL_DIR/bin/make install \\\n && cp /tmp/libarchive-3.3.2/contrib/android/include/* $TOOLCHAIN_INSTALL_DIR/include/\n","originalDockerfileUglifiedHash":"4db1d2402eb0833942c30653bf71d08d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/66c9707ce7727acfe1667c98bc03d72a09e491aa.dockerfile"}