{"seed":4219369529,"processedDockerfileHash":"0502f43461f8151d78658f757e4ea8f1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2015 Netflix, Inc.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM netflixoss/tomcat:7\nMAINTAINER Netflix Open Source Development <talent@netflix.com>\n#   Properties to set\nENV CATALINA_OPTS=\"-Dspring.profiles.active=prod -Darchaius.deployment.applicationId=genie -Darchaius.deployment.environment=prod\"\n#   Lots of commands to configure the Genie system grouped together to save on filesystem layers in Docker\n#   (Lines 28-33) Download and extract the Genie WAR file\n#   (34) Create the Genie Jobs directory where job results will be stored and DB connection info\n#   (35-37) Enable listings in Tomcat and configure it with listings.xsl\n#   (38-39) Configure the database connection to use mysql-genie Docker link as hostname and the correct password\n#   (40-48) Modify default properties to map to the Docker image locations and settings\n#   (49-58) Download and configure all the Genie scripts that are used to run jobs\nRUN wget -q -P /tomcat/webapps 'http://jcenter.bintray.com/com/netflix/genie/genie-web/2.2.1/genie-web-2.2.1.war' \\\n && mkdir /tomcat/webapps/ROOT \\\n && cd /tomcat/webapps/ROOT \\\n && jar xf ../genie-web-2.2.1.war \\\n && cd .. \\\n && rm genie-web-2.2.1.war \\\n && mkdir /tomcat/webapps/genie-jobs \\\n && wget -q -P /tomcat/conf 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/tomcat/conf/listings.xsl' \\\n && sed -i '111s/false/true/' /tomcat/conf/web.xml \\\n && sed -i '113i\\ \\ \\ \\ \\ \\ \\ \\ <init-param>\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ <param-name>globalXsltFile<\\/param-name>\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ <param-value>\\/tomcat\\/conf\\/listings.xsl<\\/param-value>\\n\\ \\ \\ \\ \\ \\ \\ \\ <\\/init-param>' /tomcat/conf/web.xml \\\n && sed -i '69s/127.0.0.1/mysql-genie/' /tomcat/webapps/ROOT/WEB-INF/classes/genie-jpa.xml \\\n && sed -i '71s/value=\"\"/value=\"genie\"/' /tomcat/webapps/ROOT/WEB-INF/classes/genie-jpa.xml \\\n && sed -i '23s/\\/usr\\/lib\\/jvm\\/java-1.7.0-sunjdk.x86_64/\\/usr\\/lib\\/jvm\\/java-7-oracle/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '26s/\\/apps\\/hadoop\\/current/\\/apps\\/hadoop\\/2.6.0/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '27s/com.netflix.genie.server.hadoop.2.4.0.home=\\/apps\\/hadoop\\/2.4.0/com.netflix.genie.server.hadoop.2.6.0.home=\\/apps\\/hadoop\\/2.6.0/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '83s/\\/mnt\\/tomcat\\/genie-jobs/\\/tomcat\\/webapps\\/genie-jobs/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '98,105d' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '99icom.netflix.genie.server.job.manager.yarn.command.cp=\\/apps\\/hadoop\\/2.6.0\\/bin\\/hadoop fs -cp -f' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '101,108d' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '101icom.netflix.genie.server.job.manager.yarn.command.mkdir=\\/apps\\/hadoop\\/2.6.0\\/bin\\/hadoop fs -mkdir' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && mkdir -p /apps/genie/bin \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/jobkill.sh' \\\n && chmod 755 /apps/genie/bin/jobkill.sh \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/joblauncher.sh' \\\n && chmod 755 /apps/genie/bin/joblauncher.sh \\\n && sed -i '233s/conf/etc\\/hadoop/' /apps/genie/bin/joblauncher.sh \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/localCleanup.py' \\\n && chmod 755 /apps/genie/bin/localCleanup.py \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/timeout3' \\\n && chmod 755 /apps/genie/bin/timeout3\n#   Below here optional to run Genie and can be different for different deployments\n#   Install some packages that will be used for the example\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y install ant python python-pip vim \\\n && python -m pip install --no-input --upgrade --force pip \\\n && pip install nflx-genie-client==2.2.0\n#   Download and configure hadoop client\nRUN mkdir -p /apps/hadoop/2.6.0 \\\n && cd /apps/hadoop/2.6.0 \\\n && wget -q -P /apps/hadoop/2.6.0 'http://apache.cs.utah.edu/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz' \\\n && tar xf hadoop-2.6.0.tar.gz \\\n && rm hadoop-2.6.0.tar.gz \\\n && chown root:root -R hadoop-2.6.0 \\\n && mv hadoop-2.6.0/* . \\\n && rm -rf hadoop-2.6.0\nENV HADOOP_HOME=\"/apps/hadoop/2.6.0\"\nENV HADOOP_PREFIX=\"$HADOOP_HOME\"\nENV PATH=\"$HADOOP_HOME/bin:$PATH\"\n#   This is not needed to get Genie working as the scripts loaded into conf below can be copied at runtime\n#   I'm just adding them here so that the hadoop and pig commands can connect to the cluster from Genie node by default\n#   in case someone wants to mess around with them as a client\nCOPY hadoop/2.6.0/conf/*.xml $HADOOP_HOME/etc/hadoop/\n#   Download and configure pig client\nRUN mkdir -p /apps/pig/0.14.0 \\\n && cd /apps/pig/0.14.0 \\\n && wget -q -P /apps/pig/0.14.0 'http://apache.cs.utah.edu/pig/pig-0.14.0/pig-0.14.0.tar.gz' \\\n && tar xf pig-0.14.0.tar.gz \\\n && rm pig-0.14.0.tar.gz \\\n && chown root:root -R pig-0.14.0 \\\n && mv pig-0.14.0/* . \\\n && rm -rf pig-0.14.0\n#   Build the Pig examples\nENV PIG_HOME=\"/apps/genie/pig/0.14.0\"\nRUN mkdir -p $PIG_HOME \\\n && cd $PIG_HOME \\\n && wget -q -P $PIG_HOME 'http://apache.cs.utah.edu/pig/pig-0.14.0/pig-0.14.0-src.tar.gz' \\\n && tar xf pig-0.14.0-src.tar.gz \\\n && mv pig-0.14.0-src/* . \\\n && rm -rf pig-0.14.0-src pig-0.14.0-src.tar.gz \\\n && ant \\\n && cd tutorial \\\n && ant \\\n && mv pigtutorial.tar.gz /tmp \\\n && cd .. \\\n && rm -rf * \\\n && mkdir tutorial \\\n && mv /tmp/pigtutorial.tar.gz tutorial/ \\\n && cd tutorial \\\n && tar xf pigtutorial.tar.gz \\\n && mv pigtmp/* . \\\n && rm -rf pigtmp pigtutorial.tar.gz\nENV PIG_HOME=\"/apps/pig/0.14.0\"\nENV PATH=\"$PIG_HOME/bin:$PATH\"\n#   Put the example scripts onto the image if people want to use them\nCOPY hadoop/2.6.0/conf/*.xml /apps/genie/hadoop/2.6.0/conf/\nCOPY example/*.py /apps/genie/example/\nEXPOSE 8080/tcp\nENTRYPOINT [\"/tomcat/bin/catalina.sh\"]\nCMD [\"run\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2015 Netflix, Inc.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM netflixoss/tomcat:7\nMAINTAINER Netflix Open Source Development <talent@netflix.com>\n#  Properties to set\nENV CATALINA_OPTS=\"-Dspring.profiles.active=prod -Darchaius.deployment.applicationId=genie -Darchaius.deployment.environment=prod\"\n#  Lots of commands to configure the Genie system grouped together to save on filesystem layers in Docker\n#  (Lines 28-33) Download and extract the Genie WAR file\n#  (34) Create the Genie Jobs directory where job results will be stored and DB connection info\n#  (35-37) Enable listings in Tomcat and configure it with listings.xsl\n#  (38-39) Configure the database connection to use mysql-genie Docker link as hostname and the correct password\n#  (40-48) Modify default properties to map to the Docker image locations and settings\n#  (49-58) Download and configure all the Genie scripts that are used to run jobs\nRUN wget -q -P /tomcat/webapps 'http://jcenter.bintray.com/com/netflix/genie/genie-web/2.2.1/genie-web-2.2.1.war' \\\n && mkdir /tomcat/webapps/ROOT \\\n && cd /tomcat/webapps/ROOT \\\n && jar xf ../genie-web-2.2.1.war \\\n && cd .. \\\n && rm genie-web-2.2.1.war \\\n && mkdir /tomcat/webapps/genie-jobs \\\n && wget -q -P /tomcat/conf 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/tomcat/conf/listings.xsl' \\\n && sed -i '111s/false/true/' /tomcat/conf/web.xml \\\n && sed -i '113i\\ \\ \\ \\ \\ \\ \\ \\ <init-param>\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ <param-name>globalXsltFile<\\/param-name>\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ <param-value>\\/tomcat\\/conf\\/listings.xsl<\\/param-value>\\n\\ \\ \\ \\ \\ \\ \\ \\ <\\/init-param>' /tomcat/conf/web.xml \\\n && sed -i '69s/127.0.0.1/mysql-genie/' /tomcat/webapps/ROOT/WEB-INF/classes/genie-jpa.xml \\\n && sed -i '71s/value=\"\"/value=\"genie\"/' /tomcat/webapps/ROOT/WEB-INF/classes/genie-jpa.xml \\\n && sed -i '23s/\\/usr\\/lib\\/jvm\\/java-1.7.0-sunjdk.x86_64/\\/usr\\/lib\\/jvm\\/java-7-oracle/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '26s/\\/apps\\/hadoop\\/current/\\/apps\\/hadoop\\/2.6.0/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '27s/com.netflix.genie.server.hadoop.2.4.0.home=\\/apps\\/hadoop\\/2.4.0/com.netflix.genie.server.hadoop.2.6.0.home=\\/apps\\/hadoop\\/2.6.0/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '83s/\\/mnt\\/tomcat\\/genie-jobs/\\/tomcat\\/webapps\\/genie-jobs/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '98,105d' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '99icom.netflix.genie.server.job.manager.yarn.command.cp=\\/apps\\/hadoop\\/2.6.0\\/bin\\/hadoop fs -cp -f' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '101,108d' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '101icom.netflix.genie.server.job.manager.yarn.command.mkdir=\\/apps\\/hadoop\\/2.6.0\\/bin\\/hadoop fs -mkdir' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && mkdir -p /apps/genie/bin \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/jobkill.sh' \\\n && chmod 755 /apps/genie/bin/jobkill.sh \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/joblauncher.sh' \\\n && chmod 755 /apps/genie/bin/joblauncher.sh \\\n && sed -i '233s/conf/etc\\/hadoop/' /apps/genie/bin/joblauncher.sh \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/localCleanup.py' \\\n && chmod 755 /apps/genie/bin/localCleanup.py \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/timeout3' \\\n && chmod 755 /apps/genie/bin/timeout3\n#  Below here optional to run Genie and can be different for different deployments\n#  Install some packages that will be used for the example\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y install ant python python-pip vim \\\n && python -m pip install --no-input --upgrade --force pip \\\n && pip install nflx-genie-client==2.2.0\n#  Download and configure hadoop client\nRUN mkdir -p /apps/hadoop/2.6.0 \\\n && cd /apps/hadoop/2.6.0 \\\n && wget -q -P /apps/hadoop/2.6.0 'http://apache.cs.utah.edu/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz' \\\n && tar xf hadoop-2.6.0.tar.gz \\\n && rm hadoop-2.6.0.tar.gz \\\n && chown root:root -R hadoop-2.6.0 \\\n && mv hadoop-2.6.0/* . \\\n && rm -rf hadoop-2.6.0\nENV HADOOP_HOME=\"/apps/hadoop/2.6.0\"\nENV HADOOP_PREFIX=\"$HADOOP_HOME\"\nENV PATH=\"$HADOOP_HOME/bin:$PATH\"\n#  This is not needed to get Genie working as the scripts loaded into conf below can be copied at runtime\n#  I'm just adding them here so that the hadoop and pig commands can connect to the cluster from Genie node by default\n#  in case someone wants to mess around with them as a client\nADD hadoop/2.6.0/conf/*.xml $HADOOP_HOME/etc/hadoop/\n#  Download and configure pig client\nRUN mkdir -p /apps/pig/0.14.0 \\\n && cd /apps/pig/0.14.0 \\\n && wget -q -P /apps/pig/0.14.0 'http://apache.cs.utah.edu/pig/pig-0.14.0/pig-0.14.0.tar.gz' \\\n && tar xf pig-0.14.0.tar.gz \\\n && rm pig-0.14.0.tar.gz \\\n && chown root:root -R pig-0.14.0 \\\n && mv pig-0.14.0/* . \\\n && rm -rf pig-0.14.0\n#  Build the Pig examples\nENV PIG_HOME=\"/apps/genie/pig/0.14.0\"\nRUN mkdir -p $PIG_HOME \\\n && cd $PIG_HOME \\\n && wget -q -P $PIG_HOME 'http://apache.cs.utah.edu/pig/pig-0.14.0/pig-0.14.0-src.tar.gz' \\\n && tar xf pig-0.14.0-src.tar.gz \\\n && mv pig-0.14.0-src/* . \\\n && rm -rf pig-0.14.0-src pig-0.14.0-src.tar.gz \\\n && ant \\\n && cd tutorial \\\n && ant \\\n && mv pigtutorial.tar.gz /tmp \\\n && cd .. \\\n && rm -rf * \\\n && mkdir tutorial \\\n && mv /tmp/pigtutorial.tar.gz tutorial/ \\\n && cd tutorial \\\n && tar xf pigtutorial.tar.gz \\\n && mv pigtmp/* . \\\n && rm -rf pigtmp pigtutorial.tar.gz\nENV PIG_HOME=\"/apps/pig/0.14.0\"\nENV PATH=\"$PIG_HOME/bin:$PATH\"\n#  Put the example scripts onto the image if people want to use them\nADD hadoop/2.6.0/conf/*.xml /apps/genie/hadoop/2.6.0/conf/\nADD example/*.py /apps/genie/example/\nEXPOSE 8080/tcp\nENTRYPOINT [\"/tomcat/bin/catalina.sh\"]\nCMD [\"run\"]\n","injectedSmells":[],"originalDockerfileHash":"0c4eaf62759fc96f50d27758fb7e7839","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2015 Netflix, Inc.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM netflixoss/tomcat:7\nMAINTAINER Netflix Open Source Development <talent@netflix.com>\n#   Properties to set\nENV CATALINA_OPTS=\"-Dspring.profiles.active=prod -Darchaius.deployment.applicationId=genie -Darchaius.deployment.environment=prod\"\n#   Lots of commands to configure the Genie system grouped together to save on filesystem layers in Docker\n#   (Lines 28-33) Download and extract the Genie WAR file\n#   (34) Create the Genie Jobs directory where job results will be stored and DB connection info\n#   (35-37) Enable listings in Tomcat and configure it with listings.xsl\n#   (38-39) Configure the database connection to use mysql-genie Docker link as hostname and the correct password\n#   (40-48) Modify default properties to map to the Docker image locations and settings\n#   (49-58) Download and configure all the Genie scripts that are used to run jobs\nRUN wget -q -P /tomcat/webapps 'http://jcenter.bintray.com/com/netflix/genie/genie-web/2.2.1/genie-web-2.2.1.war' \\\n && mkdir /tomcat/webapps/ROOT \\\n && cd /tomcat/webapps/ROOT \\\n && jar xf ../genie-web-2.2.1.war \\\n && cd .. \\\n && rm genie-web-2.2.1.war \\\n && mkdir /tomcat/webapps/genie-jobs \\\n && wget -q -P /tomcat/conf 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/tomcat/conf/listings.xsl' \\\n && sed -i '111s/false/true/' /tomcat/conf/web.xml \\\n && sed -i '113i\\ \\ \\ \\ \\ \\ \\ \\ <init-param>\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ <param-name>globalXsltFile<\\/param-name>\\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ <param-value>\\/tomcat\\/conf\\/listings.xsl<\\/param-value>\\n\\ \\ \\ \\ \\ \\ \\ \\ <\\/init-param>' /tomcat/conf/web.xml \\\n && sed -i '69s/127.0.0.1/mysql-genie/' /tomcat/webapps/ROOT/WEB-INF/classes/genie-jpa.xml \\\n && sed -i '71s/value=\"\"/value=\"genie\"/' /tomcat/webapps/ROOT/WEB-INF/classes/genie-jpa.xml \\\n && sed -i '23s/\\/usr\\/lib\\/jvm\\/java-1.7.0-sunjdk.x86_64/\\/usr\\/lib\\/jvm\\/java-7-oracle/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '26s/\\/apps\\/hadoop\\/current/\\/apps\\/hadoop\\/2.6.0/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '27s/com.netflix.genie.server.hadoop.2.4.0.home=\\/apps\\/hadoop\\/2.4.0/com.netflix.genie.server.hadoop.2.6.0.home=\\/apps\\/hadoop\\/2.6.0/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '83s/\\/mnt\\/tomcat\\/genie-jobs/\\/tomcat\\/webapps\\/genie-jobs/' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '98,105d' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '99icom.netflix.genie.server.job.manager.yarn.command.cp=\\/apps\\/hadoop\\/2.6.0\\/bin\\/hadoop fs -cp -f' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '101,108d' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && sed -i '101icom.netflix.genie.server.job.manager.yarn.command.mkdir=\\/apps\\/hadoop\\/2.6.0\\/bin\\/hadoop fs -mkdir' /tomcat/webapps/ROOT/WEB-INF/classes/genie.properties \\\n && mkdir -p /apps/genie/bin \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/jobkill.sh' \\\n && chmod 755 /apps/genie/bin/jobkill.sh \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/joblauncher.sh' \\\n && chmod 755 /apps/genie/bin/joblauncher.sh \\\n && sed -i '233s/conf/etc\\/hadoop/' /apps/genie/bin/joblauncher.sh \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/localCleanup.py' \\\n && chmod 755 /apps/genie/bin/localCleanup.py \\\n && wget -q -P /apps/genie/bin 'https://raw.githubusercontent.com/Netflix/genie/2.2.1/root/apps/genie/bin/timeout3' \\\n && chmod 755 /apps/genie/bin/timeout3\n#   Below here optional to run Genie and can be different for different deployments\n#   Install some packages that will be used for the example\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get -y install ant python python-pip vim \\\n && python -m pip install --no-input --upgrade --force pip \\\n && pip install nflx-genie-client==2.2.0\n#   Download and configure hadoop client\nRUN mkdir -p /apps/hadoop/2.6.0 \\\n && cd /apps/hadoop/2.6.0 \\\n && wget -q -P /apps/hadoop/2.6.0 'http://apache.cs.utah.edu/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz' \\\n && tar xf hadoop-2.6.0.tar.gz \\\n && rm hadoop-2.6.0.tar.gz \\\n && chown root:root -R hadoop-2.6.0 \\\n && mv hadoop-2.6.0/* . \\\n && rm -rf hadoop-2.6.0\nENV HADOOP_HOME=\"/apps/hadoop/2.6.0\"\nENV HADOOP_PREFIX=\"$HADOOP_HOME\"\nENV PATH=\"$HADOOP_HOME/bin:$PATH\"\n#   This is not needed to get Genie working as the scripts loaded into conf below can be copied at runtime\n#   I'm just adding them here so that the hadoop and pig commands can connect to the cluster from Genie node by default\n#   in case someone wants to mess around with them as a client\nADD hadoop/2.6.0/conf/*.xml $HADOOP_HOME/etc/hadoop/\n#   Download and configure pig client\nRUN mkdir -p /apps/pig/0.14.0 \\\n && cd /apps/pig/0.14.0 \\\n && wget -q -P /apps/pig/0.14.0 'http://apache.cs.utah.edu/pig/pig-0.14.0/pig-0.14.0.tar.gz' \\\n && tar xf pig-0.14.0.tar.gz \\\n && rm pig-0.14.0.tar.gz \\\n && chown root:root -R pig-0.14.0 \\\n && mv pig-0.14.0/* . \\\n && rm -rf pig-0.14.0\n#   Build the Pig examples\nENV PIG_HOME=\"/apps/genie/pig/0.14.0\"\nRUN mkdir -p $PIG_HOME \\\n && cd $PIG_HOME \\\n && wget -q -P $PIG_HOME 'http://apache.cs.utah.edu/pig/pig-0.14.0/pig-0.14.0-src.tar.gz' \\\n && tar xf pig-0.14.0-src.tar.gz \\\n && mv pig-0.14.0-src/* . \\\n && rm -rf pig-0.14.0-src pig-0.14.0-src.tar.gz \\\n && ant \\\n && cd tutorial \\\n && ant \\\n && mv pigtutorial.tar.gz /tmp \\\n && cd .. \\\n && rm -rf * \\\n && mkdir tutorial \\\n && mv /tmp/pigtutorial.tar.gz tutorial/ \\\n && cd tutorial \\\n && tar xf pigtutorial.tar.gz \\\n && mv pigtmp/* . \\\n && rm -rf pigtmp pigtutorial.tar.gz\nENV PIG_HOME=\"/apps/pig/0.14.0\"\nENV PATH=\"$PIG_HOME/bin:$PATH\"\n#   Put the example scripts onto the image if people want to use them\nADD hadoop/2.6.0/conf/*.xml /apps/genie/hadoop/2.6.0/conf/\nADD example/*.py /apps/genie/example/\nEXPOSE 8080/tcp\nENTRYPOINT [\"/tomcat/bin/catalina.sh\"]\nCMD [\"run\"]\n","originalDockerfileUglifiedHash":"5b6ac72a9a99e8637de99b6949cbe7ee","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8b07e9197617329663d691a5c4e74ad4d0a7b680.dockerfile"}