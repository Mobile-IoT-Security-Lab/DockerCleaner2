{"seed":1300438407,"processedDockerfileHash":"2627543c599eecc7ac7da4c2f6ae21bd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:12.04\nMAINTAINER Boris Böhne <info@drubb.de>\n#\n#   Step 1: Installation\n#\n#   Set frontend. We'll clean this later on!\nARG DEBIAN_FRONTEND=noninteractive\n#   Expose web root as volume\nVOLUME [\"/var/www\"]\n#   Add additional repostories needed later\nRUN echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\" >> /etc/apt/sources.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E1DF1F24\n#   Update repositories cache and distribution\nRUN : \\\n && apt-get -qqy upgrade\n#   Install some basic tools needed for deployment\nRUN (apt-get update ;apt-get install --no-install-recommends apt-utils sudo build-essential debconf-utils locales curl wget unzip patch dkms supervisor -yqq )\n#   Add the docker user\nENV HOME=\"/home/docker\"\nRUN useradd docker \\\n && passwd -d docker \\\n && adduser docker sudo\nRUN mkdir -p $HOME \\\n && chown -R docker:docker $HOME\n#   Install SSH client\nRUN (apt-get update ;apt-get install --no-install-recommends openssh-client -yqq )\n#   Install ssmtp MTA\nRUN (apt-get update ;apt-get install --no-install-recommends ssmtp -yqq )\n#   Install Apache web server\nRUN (apt-get update ;apt-get install --no-install-recommends apache2-mpm-prefork -yqq )\n#   Install MySQL server and save initial configuration\nRUN echo \"mysql-server mysql-server/root_password password root\" | debconf-set-selections\nRUN echo \"mysql-server mysql-server/root_password_again password root\" | debconf-set-selections\nRUN (apt-get update ;apt-get install --no-install-recommends mysql-server -yqq )\nRUN service mysql start \\\n && sleep 5 \\\n && service mysql stop \\\n && tar cpPzf /mysql.tar.gz /var/lib/mysql\n#   Install PHP5 with Xdebug, APC and other modules\nRUN (apt-get update ;apt-get install --no-install-recommends libapache2-mod-php5 php5-mcrypt php5-dev php5-mysql php5-curl php5-gd php5-intl php5-xdebug php-apc -yqq )\n#   Install PEAR package manager\nRUN (apt-get update ;apt-get install --no-install-recommends php-pear -yqq ) \\\n && pear channel-update pear.php.net \\\n && pear upgrade-all\n#   Install PECL package manager\nRUN (apt-get update ;apt-get install --no-install-recommends libpcre3-dev -yqq )\n#   Install PECL uploadprogress extension\nRUN pecl install uploadprogress\n#   Update APC to latest version\nRUN printf \"\\n\" | pecl update apc\n#   Install memcached service\nRUN (apt-get update ;apt-get install --no-install-recommends memcached php5-memcached -yqq )\n#   Install GIT (latest version)\nRUN (apt-get update ;apt-get install --no-install-recommends git -yqq )\n#   Install composer (latest version)\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   Install drush (latest stable for php 5.3)\nUSER docker\nRUN sudo composer global require \"drush/drush:7.*\"\nUSER root\n#   Install PhpMyAdmin (latest php 5.3 compatible version)\nRUN wget -q -O phpmyadmin.zip https://github.com/phpmyadmin/phpmyadmin/archive/MAINT_4_4_15.zip \\\n && unzip -qq phpmyadmin.zip\nRUN rm phpmyadmin.zip \\\n && mv phpmyadmin-MAINT_4_4_15 /opt/phpmyadmin\n#   Install zsh / OH-MY-ZSH\nRUN (apt-get update ;apt-get install --no-install-recommends zsh -yqq ) \\\n && git clone git://github.com/robbyrussell/oh-my-zsh.git $HOME/.oh-my-zsh\n#   Install PROST drupal deployment script, see https://www.drupal.org/sandbox/axroth/1668300\nRUN git clone --branch master http://git.drupal.org/sandbox/axroth/1668300.git /tmp/prost\nRUN chmod +x /tmp/prost/install.sh\n#   Install some useful cli tools\nRUN (apt-get update ;apt-get install --no-install-recommends mc htop vim nano net-tools mlocate -yqq )\n#   Cleanup some things\nRUN apt-get -yqq autoremove ; apt-get -yqq autoclean ; apt-get clean\n#   Expose some ports to the host system (web server, MySQL, Xdebug)\nEXPOSE 80/tcp 3306/tcp 9000/tcp\n#\n#   Step 2: Configuration\n#\n#   Localization\nRUN dpkg-reconfigure locales \\\n && locale-gen de_DE.UTF-8 \\\n && /usr/sbin/update-locale LANG=de_DE.UTF-8\nENV LC_ALL=\"de_DE.UTF-8\"\n#   Set timezone\nRUN echo \"Europe/Berlin\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#   Add apache web server configuration file\nCOPY config/httpd.conf /etc/apache2/httpd.conf\n#   Configure needed apache modules and disable default site\nRUN a2enmod rewrite headers deflate expires \\\n && a2dismod cgi autoindex status \\\n && a2dissite default\n#   Add additional php configuration file\nCOPY config/php.ini /etc/php5/conf.d/php.ini\n#   Add additional mysql configuration file\nCOPY config/mysql.cnf /etc/mysql/conf.d/mysql.cnf\nRUN chmod 0664 /etc/mysql/conf.d/mysql.cnf\n#   Add memcached configuration file\nCOPY config/memcached.conf /etc/memcached.conf\n#   Add ssmtp configuration file\nCOPY config/ssmtp.conf /etc/ssmtp/ssmtp.conf\n#   Add phpmyadmin configuration file\nCOPY config/config.inc.php /opt/phpmyadmin/config.inc.php\nRUN chmod 0664 /opt/phpmyadmin/config.inc.php\n#   Add git global configuration files\nCOPY config/.gitconfig $HOME/.gitconfig\nCOPY config/.gitignore $HOME/.gitignore\n#   Add drush global configuration file\nCOPY config/drushrc.php $HOME/.drush/drushrc.php\n#   Add apc status script\nRUN mkdir /opt/apc \\\n && gunzip -c /usr/share/doc/php-apc/apc.php.gz > /opt/apc/apc.php\n#   Add zsh configuration\nCOPY config/.zshrc $HOME/.zshrc\n#   Configure PROST drupal deployment script\nRUN chown docker:docker $HOME/.zshrc\nUSER docker\nENV SHELL=\"/bin/zsh\"\nRUN export PATH=\"$HOME/.composer/vendor/bin:$PATH\" \\\n && cd /tmp/prost \\\n && ./install.sh -noupdate $HOME/.prost\nUSER root\nRUN rm -rf /tmp/prost\n#   ADD ssh keys needed for connections to external servers\nCOPY .ssh $HOME/.ssh\nRUN echo \" IdentityFile ~/.ssh/id_rsa\" >> /etc/ssh/ssh_config\n#   Add startup script\nCOPY startup.sh $HOME/startup.sh\n#   Supervisor configuration\nCOPY config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   Entry point for the container\nRUN chown -R docker:docker $HOME \\\n && chmod +x $HOME/startup.sh\nUSER docker\nENV SHELL=\"/bin/zsh\"\nWORKDIR /var/www\nCMD [\"/bin/bash\", \"-c\", \"$HOME/startup.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:12.04\nMAINTAINER Boris Böhne <info@drubb.de>\n#\n#  Step 1: Installation\n#\n#  Set frontend. We'll clean this later on!\nARG DEBIAN_FRONTEND=noninteractive\n#  Expose web root as volume\nVOLUME [\"/var/www\"]\n#  Add additional repostories needed later\nRUN echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\" >> /etc/apt/sources.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E1DF1F24\n#  Update repositories cache and distribution\nRUN apt-get update -qq \\\n && apt-get -qqy upgrade\n#  Install some basic tools needed for deployment\nRUN apt-get install apt-utils sudo build-essential debconf-utils locales curl wget unzip patch dkms supervisor -yqq\n#  Add the docker user\nENV HOME=\"/home/docker\"\nRUN useradd docker \\\n && passwd -d docker \\\n && adduser docker sudo\nRUN mkdir -p $HOME \\\n && chown -R docker:docker $HOME\n#  Install SSH client\nRUN apt-get install openssh-client -yqq\n#  Install ssmtp MTA\nRUN apt-get install ssmtp -yqq\n#  Install Apache web server\nRUN apt-get install apache2-mpm-prefork -yqq\n#  Install MySQL server and save initial configuration\nRUN echo \"mysql-server mysql-server/root_password password root\" | debconf-set-selections\nRUN echo \"mysql-server mysql-server/root_password_again password root\" | debconf-set-selections\nRUN apt-get install mysql-server -yqq\nRUN service mysql start \\\n && sleep 5 \\\n && service mysql stop \\\n && tar cpPzf /mysql.tar.gz /var/lib/mysql\n#  Install PHP5 with Xdebug, APC and other modules\nRUN apt-get install libapache2-mod-php5 php5-mcrypt php5-dev php5-mysql php5-curl php5-gd php5-intl php5-xdebug php-apc -yqq\n#  Install PEAR package manager\nRUN apt-get install php-pear -yqq \\\n && pear channel-update pear.php.net \\\n && pear upgrade-all\n#  Install PECL package manager\nRUN apt-get install libpcre3-dev -yqq\n#  Install PECL uploadprogress extension\nRUN pecl install uploadprogress\n#  Update APC to latest version\nRUN printf \"\\n\" | pecl update apc\n#  Install memcached service\nRUN apt-get install memcached php5-memcached -yqq\n#  Install GIT (latest version)\nRUN apt-get install git -yqq\n#  Install composer (latest version)\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#  Install drush (latest stable for php 5.3)\nUSER docker\nRUN sudo composer global require \"drush/drush:7.*\"\nUSER root\n#  Install PhpMyAdmin (latest php 5.3 compatible version)\nRUN wget -q -O phpmyadmin.zip https://github.com/phpmyadmin/phpmyadmin/archive/MAINT_4_4_15.zip \\\n && unzip -qq phpmyadmin.zip\nRUN rm phpmyadmin.zip \\\n && mv phpmyadmin-MAINT_4_4_15 /opt/phpmyadmin\n#  Install zsh / OH-MY-ZSH\nRUN apt-get install zsh -yqq \\\n && git clone git://github.com/robbyrussell/oh-my-zsh.git $HOME/.oh-my-zsh\n#  Install PROST drupal deployment script, see https://www.drupal.org/sandbox/axroth/1668300\nRUN git clone --branch master http://git.drupal.org/sandbox/axroth/1668300.git /tmp/prost\nRUN chmod +x /tmp/prost/install.sh\n#  Install some useful cli tools\nRUN apt-get install mc htop vim nano net-tools mlocate -yqq\n#  Cleanup some things\nRUN apt-get -yqq autoremove ; apt-get -yqq autoclean ; apt-get clean\n#  Expose some ports to the host system (web server, MySQL, Xdebug)\nEXPOSE 80/tcp 3306/tcp 9000/tcp\n#\n#  Step 2: Configuration\n#\n#  Localization\nRUN dpkg-reconfigure locales \\\n && locale-gen de_DE.UTF-8 \\\n && /usr/sbin/update-locale LANG=de_DE.UTF-8\nENV LC_ALL=\"de_DE.UTF-8\"\n#  Set timezone\nRUN echo \"Europe/Berlin\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#  Add apache web server configuration file\nADD config/httpd.conf /etc/apache2/httpd.conf\n#  Configure needed apache modules and disable default site\nRUN a2enmod rewrite headers deflate expires \\\n && a2dismod cgi autoindex status \\\n && a2dissite default\n#  Add additional php configuration file\nADD config/php.ini /etc/php5/conf.d/php.ini\n#  Add additional mysql configuration file\nADD config/mysql.cnf /etc/mysql/conf.d/mysql.cnf\nRUN chmod 0664 /etc/mysql/conf.d/mysql.cnf\n#  Add memcached configuration file\nADD config/memcached.conf /etc/memcached.conf\n#  Add ssmtp configuration file\nADD config/ssmtp.conf /etc/ssmtp/ssmtp.conf\n#  Add phpmyadmin configuration file\nADD config/config.inc.php /opt/phpmyadmin/config.inc.php\nRUN chmod 0664 /opt/phpmyadmin/config.inc.php\n#  Add git global configuration files\nADD config/.gitconfig $HOME/.gitconfig\nADD config/.gitignore $HOME/.gitignore\n#  Add drush global configuration file\nADD config/drushrc.php $HOME/.drush/drushrc.php\n#  Add apc status script\nRUN mkdir /opt/apc \\\n && gunzip -c /usr/share/doc/php-apc/apc.php.gz > /opt/apc/apc.php\n#  Add zsh configuration\nADD config/.zshrc $HOME/.zshrc\n#  Configure PROST drupal deployment script\nRUN chown docker:docker $HOME/.zshrc\nUSER docker\nENV SHELL=\"/bin/zsh\"\nRUN export PATH=\"$HOME/.composer/vendor/bin:$PATH\" \\\n && cd /tmp/prost \\\n && ./install.sh -noupdate $HOME/.prost\nUSER root\nRUN rm -rf /tmp/prost\n#  ADD ssh keys needed for connections to external servers\nADD .ssh $HOME/.ssh\nRUN echo \" IdentityFile ~/.ssh/id_rsa\" >> /etc/ssh/ssh_config\n#  Add startup script\nADD startup.sh $HOME/startup.sh\n#  Supervisor configuration\nADD config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  Entry point for the container\nRUN chown -R docker:docker $HOME \\\n && chmod +x $HOME/startup.sh\nUSER docker\nENV SHELL=\"/bin/zsh\"\nWORKDIR /var/www\nCMD [\"/bin/bash\", \"-c\", \"$HOME/startup.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"f2f62bf76a9981becb134e054d831d87","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:12.04\nMAINTAINER Boris Böhne <info@drubb.de>\n#\n#   Step 1: Installation\n#\n#   Set frontend. We'll clean this later on!\nARG DEBIAN_FRONTEND=noninteractive\n#   Expose web root as volume\nVOLUME [\"/var/www\"]\n#   Add additional repostories needed later\nRUN echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\" >> /etc/apt/sources.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E1DF1F24\n#   Update repositories cache and distribution\nRUN apt-get update -qq \\\n && apt-get -qqy upgrade\n#   Install some basic tools needed for deployment\nRUN apt-get install apt-utils sudo build-essential debconf-utils locales curl wget unzip patch dkms supervisor -yqq\n#   Add the docker user\nENV HOME=\"/home/docker\"\nRUN useradd docker \\\n && passwd -d docker \\\n && adduser docker sudo\nRUN mkdir -p $HOME \\\n && chown -R docker:docker $HOME\n#   Install SSH client\nRUN apt-get install openssh-client -yqq\n#   Install ssmtp MTA\nRUN apt-get install ssmtp -yqq\n#   Install Apache web server\nRUN apt-get install apache2-mpm-prefork -yqq\n#   Install MySQL server and save initial configuration\nRUN echo \"mysql-server mysql-server/root_password password root\" | debconf-set-selections\nRUN echo \"mysql-server mysql-server/root_password_again password root\" | debconf-set-selections\nRUN apt-get install mysql-server -yqq\nRUN service mysql start \\\n && sleep 5 \\\n && service mysql stop \\\n && tar cpPzf /mysql.tar.gz /var/lib/mysql\n#   Install PHP5 with Xdebug, APC and other modules\nRUN apt-get install libapache2-mod-php5 php5-mcrypt php5-dev php5-mysql php5-curl php5-gd php5-intl php5-xdebug php-apc -yqq\n#   Install PEAR package manager\nRUN apt-get install php-pear -yqq \\\n && pear channel-update pear.php.net \\\n && pear upgrade-all\n#   Install PECL package manager\nRUN apt-get install libpcre3-dev -yqq\n#   Install PECL uploadprogress extension\nRUN pecl install uploadprogress\n#   Update APC to latest version\nRUN printf \"\\n\" | pecl update apc\n#   Install memcached service\nRUN apt-get install memcached php5-memcached -yqq\n#   Install GIT (latest version)\nRUN apt-get install git -yqq\n#   Install composer (latest version)\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   Install drush (latest stable for php 5.3)\nUSER docker\nRUN sudo composer global require \"drush/drush:7.*\"\nUSER root\n#   Install PhpMyAdmin (latest php 5.3 compatible version)\nRUN wget -q -O phpmyadmin.zip https://github.com/phpmyadmin/phpmyadmin/archive/MAINT_4_4_15.zip \\\n && unzip -qq phpmyadmin.zip\nRUN rm phpmyadmin.zip \\\n && mv phpmyadmin-MAINT_4_4_15 /opt/phpmyadmin\n#   Install zsh / OH-MY-ZSH\nRUN apt-get install zsh -yqq \\\n && git clone git://github.com/robbyrussell/oh-my-zsh.git $HOME/.oh-my-zsh\n#   Install PROST drupal deployment script, see https://www.drupal.org/sandbox/axroth/1668300\nRUN git clone --branch master http://git.drupal.org/sandbox/axroth/1668300.git /tmp/prost\nRUN chmod +x /tmp/prost/install.sh\n#   Install some useful cli tools\nRUN apt-get install mc htop vim nano net-tools mlocate -yqq\n#   Cleanup some things\nRUN apt-get -yqq autoremove ; apt-get -yqq autoclean ; apt-get clean\n#   Expose some ports to the host system (web server, MySQL, Xdebug)\nEXPOSE 80/tcp 3306/tcp 9000/tcp\n#\n#   Step 2: Configuration\n#\n#   Localization\nRUN dpkg-reconfigure locales \\\n && locale-gen de_DE.UTF-8 \\\n && /usr/sbin/update-locale LANG=de_DE.UTF-8\nENV LC_ALL=\"de_DE.UTF-8\"\n#   Set timezone\nRUN echo \"Europe/Berlin\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#   Add apache web server configuration file\nADD config/httpd.conf /etc/apache2/httpd.conf\n#   Configure needed apache modules and disable default site\nRUN a2enmod rewrite headers deflate expires \\\n && a2dismod cgi autoindex status \\\n && a2dissite default\n#   Add additional php configuration file\nADD config/php.ini /etc/php5/conf.d/php.ini\n#   Add additional mysql configuration file\nADD config/mysql.cnf /etc/mysql/conf.d/mysql.cnf\nRUN chmod 0664 /etc/mysql/conf.d/mysql.cnf\n#   Add memcached configuration file\nADD config/memcached.conf /etc/memcached.conf\n#   Add ssmtp configuration file\nADD config/ssmtp.conf /etc/ssmtp/ssmtp.conf\n#   Add phpmyadmin configuration file\nADD config/config.inc.php /opt/phpmyadmin/config.inc.php\nRUN chmod 0664 /opt/phpmyadmin/config.inc.php\n#   Add git global configuration files\nADD config/.gitconfig $HOME/.gitconfig\nADD config/.gitignore $HOME/.gitignore\n#   Add drush global configuration file\nADD config/drushrc.php $HOME/.drush/drushrc.php\n#   Add apc status script\nRUN mkdir /opt/apc \\\n && gunzip -c /usr/share/doc/php-apc/apc.php.gz > /opt/apc/apc.php\n#   Add zsh configuration\nADD config/.zshrc $HOME/.zshrc\n#   Configure PROST drupal deployment script\nRUN chown docker:docker $HOME/.zshrc\nUSER docker\nENV SHELL=\"/bin/zsh\"\nRUN export PATH=\"$HOME/.composer/vendor/bin:$PATH\" \\\n && cd /tmp/prost \\\n && ./install.sh -noupdate $HOME/.prost\nUSER root\nRUN rm -rf /tmp/prost\n#   ADD ssh keys needed for connections to external servers\nADD .ssh $HOME/.ssh\nRUN echo \" IdentityFile ~/.ssh/id_rsa\" >> /etc/ssh/ssh_config\n#   Add startup script\nADD startup.sh $HOME/startup.sh\n#   Supervisor configuration\nADD config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   Entry point for the container\nRUN chown -R docker:docker $HOME \\\n && chmod +x $HOME/startup.sh\nUSER docker\nENV SHELL=\"/bin/zsh\"\nWORKDIR /var/www\nCMD [\"/bin/bash\", \"-c\", \"$HOME/startup.sh\"]\n","originalDockerfileUglifiedHash":"09b859087ce2af12b0685c516bd1da47","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f1be33cf8901eea4c1922015435f88a411ac730e.dockerfile"}