{"seed":3489927814,"processedDockerfileHash":"222fa78dd762047e2b356a18510f64ca","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Use phusion/baseimage as base image. To make your builds\n#   reproducible, make sure you lock down to a specific version, not\n#   to `latest`! See\n#   https://github.com/phusion/baseimage-docker/blob/master/Changelog.md\n#   for a list of version numbers.\n#   Note also that we use phusion because, as explained on the \n#   http://phusion.github.io/baseimage-docker/ page, it automatically\n#   contains and starts all needed services (like logging), it\n#   takes care of sending around signals when stopped, etc.\n#  #\n#   Actually, I use passenger-full that already has ngingx and python\n#   https://github.com/phusion/passenger-docker#using\nFROM phusion/passenger-customizable:0.9.19\nMAINTAINER Giovanni Pizzi <giovanni.pizzi@epfl.ch>\nARG SEEKPATH_VERSION=1.2.0\n#   Set correct environment variables.\nENV HOME=\"/root\"\n#   Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n#   If you're using the 'customizable' variant, you need to explicitly opt-in\n#   for features. Uncomment the features you want:\n#\n#     Build system and git.\nRUN /pd_build/utilities.sh \\\n && /pd_build/python.sh \\\n && rm -f /etc/service/nginx/down\n#  #########################################\n#  ########### Installation Setup ##########\n#  #########################################\n#   First, install pip (for python 2)\n#   install required software\n#  # Note: to install instead pip3 for python3, install the package python3-pip\n#  # However, then one has to configure the web server to use wsgi with python3\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean all\n#   install rest of the packages as normal user (app, provided by passenger)\nUSER app\n#   set $HOME\nENV HOME=\"/home/app\"\n#   Download code\nRUN mkdir -p $HOME/code/\nWORKDIR $HOME/code\nRUN git clone https://github.com/giovannipizzi/seekpath \\\n && cd seekpath \\\n && git checkout v$SEEKPATH_VERSION\n#   Install SeeK-path\n#   Note: if you want to deploy with python3, use 'pip3' instead of 'pip'\nWORKDIR /home/app/code/seekpath\nRUN pip install pip==23.1 setuptools==67.6.1 -U --user \\\n && pip install .[bz,webservice] --user -U\n#   Create empty public dir, needed by passenger\nRUN mkdir webservice/public\n#   Create a proper wsgi file file\n#\n#   NOTE! For the time being, I just disable X-Sendfile,\n#   that exists only in apache. For nginx, it is called \n#   X-Accel-Redirect, requires some changes to the code though\n#   Note that this means, however, that serving static files \n#   will be quite slow\n#\nENV SP_WSGI_FILE=\"webservice/passenger_wsgi.py\"\nRUN echo \"import sys\" > $SP_WSGI_FILE \\\n && echo \"sys.path.insert(0, '/home/app/code/seekpath/webservice')\" >> $SP_WSGI_FILE \\\n && echo \"from seekpath_app import app as application\" >> $SP_WSGI_FILE \\\n && echo \"application.use_x_sendfile = False\" >> $SP_WSGI_FILE\n#   Go back to root.\n#   Also, it should remain as user root for startup\nUSER root\n#   Setup nginx\n#   Disable default nginx site\nRUN rm /etc/nginx/sites-enabled/default\nCOPY conf/seekpath-nginx.conf /etc/nginx/sites-enabled/seekpath.conf\n#   Set startup script to create the secret key\nRUN mkdir -p /etc/my_init.d\nCOPY ./conf/create_secret_key.sh /etc/my_init.d/create_secret_key.sh\n#   Web\nEXPOSE 80/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Use phusion/baseimage as base image. To make your builds\n#  reproducible, make sure you lock down to a specific version, not\n#  to `latest`! See\n#  https://github.com/phusion/baseimage-docker/blob/master/Changelog.md\n#  for a list of version numbers.\n#  Note also that we use phusion because, as explained on the \n#  http://phusion.github.io/baseimage-docker/ page, it automatically\n#  contains and starts all needed services (like logging), it\n#  takes care of sending around signals when stopped, etc.\n# #\n#  Actually, I use passenger-full that already has ngingx and python\n#  https://github.com/phusion/passenger-docker#using\nFROM phusion/passenger-customizable:0.9.19\nMAINTAINER Giovanni Pizzi <giovanni.pizzi@epfl.ch>\nARG SEEKPATH_VERSION=1.2.0\n#  Set correct environment variables.\nENV HOME=\"/root\"\n#  Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n#  If you're using the 'customizable' variant, you need to explicitly opt-in\n#  for features. Uncomment the features you want:\n#\n#    Build system and git.\nRUN /pd_build/utilities.sh \\\n && /pd_build/python.sh \\\n && rm -f /etc/service/nginx/down\n# #########################################\n# ########### Installation Setup ##########\n# #########################################\n#  First, install pip (for python 2)\n#  install required software\n# # Note: to install instead pip3 for python3, install the package python3-pip\n# # However, then one has to configure the web server to use wsgi with python3\nRUN apt-get update \\\n && apt-get install python-pip -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean all\n#  install rest of the packages as normal user (app, provided by passenger)\nUSER app\n#  set $HOME\nENV HOME=\"/home/app\"\n#  Download code\nRUN mkdir -p $HOME/code/\nWORKDIR $HOME/code\nRUN git clone https://github.com/giovannipizzi/seekpath \\\n && cd seekpath \\\n && git checkout v$SEEKPATH_VERSION\n#  Install SeeK-path\n#  Note: if you want to deploy with python3, use 'pip3' instead of 'pip'\nWORKDIR /home/app/code/seekpath\nRUN pip install pip setuptools -U --user \\\n && pip install .[bz,webservice] --user -U\n#  Create empty public dir, needed by passenger\nRUN mkdir webservice/public\n#  Create a proper wsgi file file\n#\n#  NOTE! For the time being, I just disable X-Sendfile,\n#  that exists only in apache. For nginx, it is called \n#  X-Accel-Redirect, requires some changes to the code though\n#  Note that this means, however, that serving static files \n#  will be quite slow\n#\nENV SP_WSGI_FILE=\"webservice/passenger_wsgi.py\"\nRUN echo \"import sys\" > $SP_WSGI_FILE \\\n && echo \"sys.path.insert(0, '/home/app/code/seekpath/webservice')\" >> $SP_WSGI_FILE \\\n && echo \"from seekpath_app import app as application\" >> $SP_WSGI_FILE \\\n && echo \"application.use_x_sendfile = False\" >> $SP_WSGI_FILE\n#  Go back to root.\n#  Also, it should remain as user root for startup\nUSER root\n#  Setup nginx\n#  Disable default nginx site\nRUN rm /etc/nginx/sites-enabled/default\nADD conf/seekpath-nginx.conf /etc/nginx/sites-enabled/seekpath.conf\n#  Set startup script to create the secret key\nRUN mkdir -p /etc/my_init.d\nADD ./conf/create_secret_key.sh /etc/my_init.d/create_secret_key.sh\n#  Web\nEXPOSE 80/tcp\n","injectedSmells":[],"originalDockerfileHash":"2ca7d70b6377e3fdad0da5c7d0041286","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Use phusion/baseimage as base image. To make your builds\n#   reproducible, make sure you lock down to a specific version, not\n#   to `latest`! See\n#   https://github.com/phusion/baseimage-docker/blob/master/Changelog.md\n#   for a list of version numbers.\n#   Note also that we use phusion because, as explained on the \n#   http://phusion.github.io/baseimage-docker/ page, it automatically\n#   contains and starts all needed services (like logging), it\n#   takes care of sending around signals when stopped, etc.\n#  #\n#   Actually, I use passenger-full that already has ngingx and python\n#   https://github.com/phusion/passenger-docker#using\nFROM phusion/passenger-customizable:0.9.19\nMAINTAINER Giovanni Pizzi <giovanni.pizzi@epfl.ch>\nARG SEEKPATH_VERSION=1.2.0\n#   Set correct environment variables.\nENV HOME=\"/root\"\n#   Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n#   If you're using the 'customizable' variant, you need to explicitly opt-in\n#   for features. Uncomment the features you want:\n#\n#     Build system and git.\nRUN /pd_build/utilities.sh \\\n && /pd_build/python.sh \\\n && rm -f /etc/service/nginx/down\n#  #########################################\n#  ########### Installation Setup ##########\n#  #########################################\n#   First, install pip (for python 2)\n#   install required software\n#  # Note: to install instead pip3 for python3, install the package python3-pip\n#  # However, then one has to configure the web server to use wsgi with python3\nRUN apt-get update \\\n && apt-get install python-pip -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean all\n#   install rest of the packages as normal user (app, provided by passenger)\nUSER app\n#   set $HOME\nENV HOME=\"/home/app\"\n#   Download code\nRUN mkdir -p $HOME/code/\nWORKDIR $HOME/code\nRUN git clone https://github.com/giovannipizzi/seekpath \\\n && cd seekpath \\\n && git checkout v$SEEKPATH_VERSION\n#   Install SeeK-path\n#   Note: if you want to deploy with python3, use 'pip3' instead of 'pip'\nWORKDIR /home/app/code/seekpath\nRUN pip install pip setuptools -U --user \\\n && pip install .[bz,webservice] --user -U\n#   Create empty public dir, needed by passenger\nRUN mkdir webservice/public\n#   Create a proper wsgi file file\n#\n#   NOTE! For the time being, I just disable X-Sendfile,\n#   that exists only in apache. For nginx, it is called \n#   X-Accel-Redirect, requires some changes to the code though\n#   Note that this means, however, that serving static files \n#   will be quite slow\n#\nENV SP_WSGI_FILE=\"webservice/passenger_wsgi.py\"\nRUN echo \"import sys\" > $SP_WSGI_FILE \\\n && echo \"sys.path.insert(0, '/home/app/code/seekpath/webservice')\" >> $SP_WSGI_FILE \\\n && echo \"from seekpath_app import app as application\" >> $SP_WSGI_FILE \\\n && echo \"application.use_x_sendfile = False\" >> $SP_WSGI_FILE\n#   Go back to root.\n#   Also, it should remain as user root for startup\nUSER root\n#   Setup nginx\n#   Disable default nginx site\nRUN rm /etc/nginx/sites-enabled/default\nADD conf/seekpath-nginx.conf /etc/nginx/sites-enabled/seekpath.conf\n#   Set startup script to create the secret key\nRUN mkdir -p /etc/my_init.d\nADD ./conf/create_secret_key.sh /etc/my_init.d/create_secret_key.sh\n#   Web\nEXPOSE 80/tcp\n","originalDockerfileUglifiedHash":"0119ae90b633951824d2ca3dc3d75df8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/217bfa8094d676daf5ad1e071851fff924d8b296.dockerfile"}