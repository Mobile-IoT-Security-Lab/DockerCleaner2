{"seed":2608045009,"processedDockerfileHash":"99e04fcfd5ed26e34ed0b2edf4df3fa1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  !/bin/echo docker build . -f\n#   Copyright 2017 Samsung Electronics France SAS\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM fedora:24\nMAINTAINER Philippe Coval (philippe.coval@osg.samsung.com)\nENV project=\"iotivity\"\nARG version\nENV version=\"${version:-2.0.1}\"\nENV package=\"${project}-${version}\"\nARG user\nENV user=\"${user:-abuild}\"\nARG release\nENV release=\"${release:-0~${user}0+${DISTTAG}}\"\nENV EMAIL=\"${EMAIL:-nobody@localhost}\"\nENV NAME=\"${NAME:-Nobody}\"\nRUN echo \"#log: ${project}: Preparing system (DISTTAG=${DISTTAG})\" \\\n && dnf update -y \\\n && dnf install -y git make sudo rpm-build autoconf automake boost-devel bzip2 chrpath expat-devel findutils gcc-c++ gettext-devel git glib2-devel libcurl-devel libtool libuuid-devel openssl-devel scons sqlite-devel unzip wget xz \\\n && dnf clean -y all \\\n && sync\nARG workdir\nENV workdir=\"${workdir:-${HOME}/usr/local/src/${project}}\"\nWORKDIR ${workdir}\nCOPY . ${WORKDIR}\nRUN echo \"#log: ${project}: Preparing sources\" \\\n && uname -a \\\n && cat /etc/os-release \\\n && scons --version \\\n && gcc --version \\\n && g++ --version \\\n && [ ! -x prep.sh ] || EXEC_MODE=true ./prep.sh \\\n && tar cvfz ../${package}.tar.gz --transform \"s|^./|${package}/|\" --exclude 'debian' --exclude-vcs . \\\n && sync\nRUN echo \"#log: ${project}: Setup rpm-build (${WORKDIR})\" \\\n && mkdir -p \"/root/rpmbuild/SOURCES/\" \\\n && ln -vfs \"${workdir}/../${package}.tar.gz\" \"/root/rpmbuild/SOURCES/\" \\\n && ln -vfs \"${workdir}/tools/tizen/\"* \"/root/rpmbuild/SOURCES/\" \\\n && sync\nRUN echo \"#log: ${project}: Building RPMs (${project}-${version}.${release})\" \\\n && cd \"/root/rpmbuild/SOURCES/\" \\\n && ls -l \\\n && time rpmbuild -ba \"${project}.spec\" --define \"version ${version}\" --define \"release ${release}\" \\\n && find /root/rpmbuild/ -iname \"*.*rpm\" \\\n && sync\nRUN echo \"#log: ${project}: Installing RPMs (${release})\" \\\n && rpm -v -i /root/rpmbuild/RPMS/*/*.rpm \\\n && rpm -ql ${project} \\\n && rpm -ql ${project}-service \\\n && rpm -ql ${project}-devel \\\n && rpm -ql ${project}-test \\\n && rpm -ql ${project}-debuginfo \\\n && sync\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# !/bin/echo docker build . -f\n#  Copyright 2017 Samsung Electronics France SAS\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM fedora:24\nMAINTAINER Philippe Coval (philippe.coval@osg.samsung.com)\nENV project=\"iotivity\"\nARG version\nENV version=\"${version:-2.0.1}\"\nENV package=\"${project}-${version}\"\nARG user\nENV user=\"${user:-abuild}\"\nARG release\nENV release=\"${release:-0~${user}0+${DISTTAG}}\"\nENV EMAIL=\"${EMAIL:-nobody@localhost}\"\nENV NAME=\"${NAME:-Nobody}\"\nRUN echo \"#log: ${project}: Preparing system (DISTTAG=${DISTTAG})\" \\\n && dnf update -y \\\n && dnf install -y git make sudo rpm-build autoconf automake boost-devel bzip2 chrpath expat-devel findutils gcc-c++ gettext-devel git glib2-devel libcurl-devel libtool libuuid-devel openssl-devel scons sqlite-devel unzip wget xz \\\n && dnf clean -y all \\\n && sync\nARG workdir\nENV workdir=\"${workdir:-${HOME}/usr/local/src/${project}}\"\nWORKDIR ${workdir}\nCOPY . ${WORKDIR}\nRUN echo \"#log: ${project}: Preparing sources\" \\\n && uname -a \\\n && cat /etc/os-release \\\n && scons --version \\\n && gcc --version \\\n && g++ --version \\\n && [ ! -x prep.sh ] || EXEC_MODE=true ./prep.sh \\\n && tar cvfz ../${package}.tar.gz --transform \"s|^./|${package}/|\" --exclude 'debian' --exclude-vcs . \\\n && sync\nRUN echo \"#log: ${project}: Setup rpm-build (${WORKDIR})\" \\\n && mkdir -p \"/root/rpmbuild/SOURCES/\" \\\n && ln -vfs \"${workdir}/../${package}.tar.gz\" \"/root/rpmbuild/SOURCES/\" \\\n && ln -vfs \"${workdir}/tools/tizen/\"* \"/root/rpmbuild/SOURCES/\" \\\n && sync\nRUN echo \"#log: ${project}: Building RPMs (${project}-${version}.${release})\" \\\n && cd \"/root/rpmbuild/SOURCES/\" \\\n && ls -l \\\n && time rpmbuild -ba \"${project}.spec\" --define \"version ${version}\" --define \"release ${release}\" \\\n && find /root/rpmbuild/ -iname \"*.*rpm\" \\\n && sync\nRUN echo \"#log: ${project}: Installing RPMs (${release})\" \\\n && rpm -v -i /root/rpmbuild/RPMS/*/*.rpm \\\n && rpm -ql ${project} \\\n && rpm -ql ${project}-service \\\n && rpm -ql ${project}-devel \\\n && rpm -ql ${project}-test \\\n && rpm -ql ${project}-debuginfo \\\n && sync\n","injectedSmells":[],"originalDockerfileHash":"f6de666c45106357eea9d11c9b739bd1","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  !/bin/echo docker build . -f\n#   Copyright 2017 Samsung Electronics France SAS\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM fedora:24\nMAINTAINER Philippe Coval (philippe.coval@osg.samsung.com)\nENV project=\"iotivity\"\nARG version\nENV version=\"${version:-2.0.1}\"\nENV package=\"${project}-${version}\"\nARG user\nENV user=\"${user:-abuild}\"\nARG release\nENV release=\"${release:-0~${user}0+${DISTTAG}}\"\nENV EMAIL=\"${EMAIL:-nobody@localhost}\"\nENV NAME=\"${NAME:-Nobody}\"\nRUN echo \"#log: ${project}: Preparing system (DISTTAG=${DISTTAG})\" \\\n && dnf update -y \\\n && dnf install -y git make sudo rpm-build autoconf automake boost-devel bzip2 chrpath expat-devel findutils gcc-c++ gettext-devel git glib2-devel libcurl-devel libtool libuuid-devel openssl-devel scons sqlite-devel unzip wget xz \\\n && dnf clean -y all \\\n && sync\nARG workdir\nENV workdir=\"${workdir:-${HOME}/usr/local/src/${project}}\"\nWORKDIR ${workdir}\nCOPY . ${WORKDIR}\nRUN echo \"#log: ${project}: Preparing sources\" \\\n && uname -a \\\n && cat /etc/os-release \\\n && scons --version \\\n && gcc --version \\\n && g++ --version \\\n && [ ! -x prep.sh ] || EXEC_MODE=true ./prep.sh \\\n && tar cvfz ../${package}.tar.gz --transform \"s|^./|${package}/|\" --exclude 'debian' --exclude-vcs . \\\n && sync\nRUN echo \"#log: ${project}: Setup rpm-build (${WORKDIR})\" \\\n && mkdir -p \"/root/rpmbuild/SOURCES/\" \\\n && ln -vfs \"${workdir}/../${package}.tar.gz\" \"/root/rpmbuild/SOURCES/\" \\\n && ln -vfs \"${workdir}/tools/tizen/\"* \"/root/rpmbuild/SOURCES/\" \\\n && sync\nRUN echo \"#log: ${project}: Building RPMs (${project}-${version}.${release})\" \\\n && cd \"/root/rpmbuild/SOURCES/\" \\\n && ls -l \\\n && time rpmbuild -ba \"${project}.spec\" --define \"version ${version}\" --define \"release ${release}\" \\\n && find /root/rpmbuild/ -iname \"*.*rpm\" \\\n && sync\nRUN echo \"#log: ${project}: Installing RPMs (${release})\" \\\n && rpm -v -i /root/rpmbuild/RPMS/*/*.rpm \\\n && rpm -ql ${project} \\\n && rpm -ql ${project}-service \\\n && rpm -ql ${project}-devel \\\n && rpm -ql ${project}-test \\\n && rpm -ql ${project}-debuginfo \\\n && sync\n","originalDockerfileUglifiedHash":"6267f8e211794b6f9a250c30345a6977","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/605697b6711b544bb79a20ef48ca035d47c6e44d.dockerfile"}