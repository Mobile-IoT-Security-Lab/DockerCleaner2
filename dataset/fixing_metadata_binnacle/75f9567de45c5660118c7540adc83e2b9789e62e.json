{"seed":2727217604,"processedDockerfileHash":"c4828f314c4a6547c4e5f8751ed744f9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   the tag this Dockerfile will build, either \"-b2d\" or \"\"\nARG TAG\n#  ===============================\nFROM debian:stretch-slim AS base\n#  ===============================\nLABEL maintainer=\"Marius Millea <mariusmillea@gmail.com>\"\n#   install packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl dh-autoreconf g++ git libcurl4-gnutls-dev default-libmysqlclient-dev libssl-dev m4 make mysql-client php7.0-cli php7.0-mysql php7.0-xml pkg-config python python3 python-mysqldb python3-mysqldb -y \\\n && rm -rf /var/lib/apt/lists\n#   get source and compile server \nCOPY --chown=1000 boinc /usr/local/boinc\nRUN cd /usr/local/boinc \\\n && ./_autosetup \\\n && ./configure --disable-client --disable-manager \\\n && make\n#   project-making scripts\nCOPY makeproject-step1.sh makeproject-step2.sh /usr/local/bin/\n#   some other project files (some of which will be put in the correct place with\n#   ONBUILD instructions later)\nCOPY --chown=1000 db_dump_spec.xml /.project_root/\nCOPY --chown=1000 html /.project_root/html/\nCOPY --chown=1000 secrets.env /run/secrets/\n#  ==============================\nFROM debian:stretch-slim AS b2d\n#  ==============================\n#   do boinc2docker as a separate stage so we don't have to keep re-downloading\n#   things whenever the build cache is invalidated\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates python-yaml wget -y\n#   the version of vboxwrapper/iso/appver installed is specified in\n#   boinc2docker/boinc2docker.yml\nCOPY boinc2docker /root/boinc2docker\nRUN /root/boinc2docker/boinc2docker_create_app --download_only\n#  ====================\nFROM base AS base-b2d\n#  ====================\n#   copy/install extra things needed for the `-b2d` version\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-yaml wget -y \\\n && rm -rf /var/lib/apt/lists\nCOPY --chown=1000 --from=b2d /root/boinc2docker $HOME/boinc2docker\nENV PATH=\"$HOME/boinc2docker:$PATH\"\n#  ===========================\nFROM base$TAG AS makeproject\n#  ===========================\n#   everything which depends on build-args is done as ONBUILD in this stage, so\n#   the user can customize it\nARG TAG\nENV TAG=\"$TAG\"\nONBUILD ARG BOINC_USER\nONBUILD ARG PROJECT_ROOT\nONBUILD ENV BOINC_USER=\"$BOINC_USER\" \\\n            PROJECT_ROOT=\"$PROJECT_ROOT\" \\\n            USER=\"$BOINC_USER\" \\\n            HOME=\"/home/$BOINC_USER\" \\\n            MYSQL_HOST=\"mysql\"\n#   set up the non-root user who compiles the server\nONBUILD RUN adduser $BOINC_USER --disabled-password --gecos \"\"\n#   ensure the project/secrets volumes have the right permissions when mounted\nONBUILD RUN mkdir $PROJECT_ROOT.dst \\\n && chown $BOINC_USER:$BOINC_USER $PROJECT_ROOT.dst\nONBUILD USER $BOINC_USER\n#   build server\nONBUILD RUN makeproject-step1.sh\nONBUILD RUN test -z \"$TAG\" || boinc2docker_create_app --projhome $PROJECT_ROOT\nONBUILD CMD makeproject-step2.sh\nONBUILD WORKDIR $PROJECT_ROOT\n#  ==========================================\nFROM makeproject AS makeproject-defaultargs\n#  ==========================================\n#   this triggers the ONBUILD directives using the default ARGs so we also get a\n#   fully built example image\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  the tag this Dockerfile will build, either \"-b2d\" or \"\"\nARG TAG\n# ===============================\nFROM debian:stretch-slim AS base\n# ===============================\nLABEL maintainer=\"Marius Millea <mariusmillea@gmail.com>\"\n#  install packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl dh-autoreconf g++ git libcurl4-gnutls-dev default-libmysqlclient-dev libssl-dev m4 make mysql-client php7.0-cli php7.0-mysql php7.0-xml pkg-config python python3 python-mysqldb python3-mysqldb -y \\\n && rm -rf /var/lib/apt/lists\n#  get source and compile server \nCOPY --chown=1000 boinc /usr/local/boinc\nRUN cd /usr/local/boinc \\\n && ./_autosetup \\\n && ./configure --disable-client --disable-manager \\\n && make\n#  project-making scripts\nCOPY makeproject-step1.sh makeproject-step2.sh /usr/local/bin/\n#  some other project files (some of which will be put in the correct place with\n#  ONBUILD instructions later)\nCOPY --chown=1000 db_dump_spec.xml /.project_root/\nCOPY --chown=1000 html /.project_root/html/\nCOPY --chown=1000 secrets.env /run/secrets/\n# ==============================\nFROM debian:stretch-slim AS b2d\n# ==============================\n#  do boinc2docker as a separate stage so we don't have to keep re-downloading\n#  things whenever the build cache is invalidated\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates python-yaml wget -y\n#  the version of vboxwrapper/iso/appver installed is specified in\n#  boinc2docker/boinc2docker.yml\nCOPY boinc2docker /root/boinc2docker\nRUN /root/boinc2docker/boinc2docker_create_app --download_only\n# ====================\nFROM base AS base-b2d\n# ====================\n#  copy/install extra things needed for the `-b2d` version\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-yaml wget -y \\\n && rm -rf /var/lib/apt/lists\nCOPY --chown=1000 --from=b2d /root/boinc2docker $HOME/boinc2docker\nENV PATH=\"$HOME/boinc2docker:$PATH\"\n# ===========================\nFROM base$TAG AS makeproject\n# ===========================\n#  everything which depends on build-args is done as ONBUILD in this stage, so\n#  the user can customize it\nARG TAG\nENV TAG=\"$TAG\"\nONBUILD ARG BOINC_USER\nONBUILD ARG PROJECT_ROOT\nONBUILD ENV BOINC_USER=\"$BOINC_USER\" \\\n            PROJECT_ROOT=\"$PROJECT_ROOT\" \\\n            USER=\"$BOINC_USER\" \\\n            HOME=\"/home/$BOINC_USER\" \\\n            MYSQL_HOST=\"mysql\"\n#  set up the non-root user who compiles the server\nONBUILD RUN adduser $BOINC_USER --disabled-password --gecos \"\"\n#  ensure the project/secrets volumes have the right permissions when mounted\nONBUILD RUN mkdir $PROJECT_ROOT.dst \\\n && chown $BOINC_USER:$BOINC_USER $PROJECT_ROOT.dst\nONBUILD USER $BOINC_USER\n#  build server\nONBUILD RUN makeproject-step1.sh\nONBUILD RUN test -z \"$TAG\" || boinc2docker_create_app --projhome $PROJECT_ROOT\nONBUILD CMD makeproject-step2.sh\nONBUILD WORKDIR $PROJECT_ROOT\n# ==========================================\nFROM makeproject AS makeproject-defaultargs\n# ==========================================\n#  this triggers the ONBUILD directives using the default ARGs so we also get a\n#  fully built example image\n","injectedSmells":[],"originalDockerfileHash":"cdd1f22d3583a7db63c2fc16a28e09c4","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   the tag this Dockerfile will build, either \"-b2d\" or \"\"\nARG TAG\n#  ===============================\nFROM debian:stretch-slim AS base\n#  ===============================\nLABEL maintainer=\"Marius Millea <mariusmillea@gmail.com>\"\n#   install packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl dh-autoreconf g++ git libcurl4-gnutls-dev default-libmysqlclient-dev libssl-dev m4 make mysql-client php7.0-cli php7.0-mysql php7.0-xml pkg-config python python3 python-mysqldb python3-mysqldb -y \\\n && rm -rf /var/lib/apt/lists\n#   get source and compile server \nCOPY --chown=1000 boinc /usr/local/boinc\nRUN cd /usr/local/boinc \\\n && ./_autosetup \\\n && ./configure --disable-client --disable-manager \\\n && make\n#   project-making scripts\nCOPY makeproject-step1.sh makeproject-step2.sh /usr/local/bin/\n#   some other project files (some of which will be put in the correct place with\n#   ONBUILD instructions later)\nCOPY --chown=1000 db_dump_spec.xml /.project_root/\nCOPY --chown=1000 html /.project_root/html/\nCOPY --chown=1000 secrets.env /run/secrets/\n#  ==============================\nFROM debian:stretch-slim AS b2d\n#  ==============================\n#   do boinc2docker as a separate stage so we don't have to keep re-downloading\n#   things whenever the build cache is invalidated\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates python-yaml wget -y\n#   the version of vboxwrapper/iso/appver installed is specified in\n#   boinc2docker/boinc2docker.yml\nCOPY boinc2docker /root/boinc2docker\nRUN /root/boinc2docker/boinc2docker_create_app --download_only\n#  ====================\nFROM base AS base-b2d\n#  ====================\n#   copy/install extra things needed for the `-b2d` version\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-yaml wget -y \\\n && rm -rf /var/lib/apt/lists\nCOPY --chown=1000 --from=b2d /root/boinc2docker $HOME/boinc2docker\nENV PATH=\"$HOME/boinc2docker:$PATH\"\n#  ===========================\nFROM base$TAG AS makeproject\n#  ===========================\n#   everything which depends on build-args is done as ONBUILD in this stage, so\n#   the user can customize it\nARG TAG\nENV TAG=\"$TAG\"\nONBUILD ARG BOINC_USER\nONBUILD ARG PROJECT_ROOT\nONBUILD ENV BOINC_USER=\"$BOINC_USER\" \\\n            PROJECT_ROOT=\"$PROJECT_ROOT\" \\\n            USER=\"$BOINC_USER\" \\\n            HOME=\"/home/$BOINC_USER\" \\\n            MYSQL_HOST=\"mysql\"\n#   set up the non-root user who compiles the server\nONBUILD RUN adduser $BOINC_USER --disabled-password --gecos \"\"\n#   ensure the project/secrets volumes have the right permissions when mounted\nONBUILD RUN mkdir $PROJECT_ROOT.dst \\\n && chown $BOINC_USER:$BOINC_USER $PROJECT_ROOT.dst\nONBUILD USER $BOINC_USER\n#   build server\nONBUILD RUN makeproject-step1.sh\nONBUILD RUN test -z \"$TAG\" || boinc2docker_create_app --projhome $PROJECT_ROOT\nONBUILD CMD makeproject-step2.sh\nONBUILD WORKDIR $PROJECT_ROOT\n#  ==========================================\nFROM makeproject AS makeproject-defaultargs\n#  ==========================================\n#   this triggers the ONBUILD directives using the default ARGs so we also get a\n#   fully built example image\n","originalDockerfileUglifiedHash":"9a1ad2a8ebe682bcd39a0c21235fef1a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/75f9567de45c5660118c7540adc83e2b9789e62e.dockerfile"}