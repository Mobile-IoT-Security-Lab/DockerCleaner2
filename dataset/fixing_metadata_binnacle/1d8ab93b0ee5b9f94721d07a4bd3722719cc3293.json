{"seed":4029485660,"processedDockerfileHash":"4407e5215cba585059f6f66f7c62b24b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial\nMAINTAINER Markos Vakondios <mvakondios@gmail.com> Riley Schuit <riley.schuit@gmail.com>\n#   Resynchronize the package index files\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apache2 build-essential cmake dh-autoreconf dpatch git libapache2-mod-php libarchive-zip-perl libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavresample-dev libav-tools libavutil-dev libbz2-dev libcurl4-gnutls-dev libdate-manip-perl libdbd-mysql-perl libdbi-perl libdevice-serialport-perl libgcrypt-dev libgnutls-openssl-dev libjpeg-turbo8 libjpeg-turbo8-dev libmime-lite-perl libmime-perl libmp4v2-dev libmysqlclient-dev libnet-sftp-foreign-perl libnetpbm10-dev libpcre3 libpcre3-dev libpolkit-gobject-1-dev libpostproc-dev libssl-dev libswscale-dev libsys-cpu-perl libsys-meminfo-perl libsys-mmap-perl libtheora-dev libtool libv4l-dev libvlc5 libvlccore8 libvlccore-dev libvlc-dev libvorbis-dev libvpx-dev libwww-perl libjson-any-perl libjson-maybexs-perl libnumber-bytes-human-perl libsoap-wsdl-perl libio-socket-multicast-perl libphp-serialization-perl libimage-info-perl liburi-encode-perl libdata-dump-perl libclass-std-fast-perl libdigest-sha-perl libdata-uuid-perl libfile-slurp-perl libcrypt-eksblowfish-perl libdata-entropy-perl perl-modules libx264-dev mysql-client mysql-server php php-cli php-gd php-mysql ssmtp software-properties-common vlc-data yasm zip \\\n && add-apt-repository -y ppa:iconnor/zoneminder \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends php-apcu-bc \\\n && rm -rf /var/lib/apt/lists/*\n#   Get the latest master branch and submodule(s)\nRUN git clone --recursive https://github.com/ZoneMinder/ZoneMinder\n#   Change into the ZoneMinder directory\nWORKDIR /ZoneMinder\n#   Configure ZoneMinder\nRUN cmake .\n#   Build & install ZoneMinder\nRUN make \\\n && make install\n#   ensure writable folders\nRUN ./zmlinkcontent.sh\n#   Set our volumes before we attempt to configure apache\nVOLUME /var/lib/zoneminder/events /var/lib/mysql /var/log/zm\n#   Stop Apache and Mysql before we configure them\nRUN service mysql stop \\\n && service apache2 stop\n#   Configure Apache\nRUN cp misc/apache.conf /etc/apache2/sites-available/000-default.conf\nRUN echo \"ServerName localhost\" > /etc/apache2/conf-available/servername.conf \\\n && a2enconf -q servername\nRUN a2enmod -q rewrite \\\n && a2enmod -q cgi\n#   Configure mysql\n#   No longer needed for zm >= 1.32.0\n#  RUN echo \"sql_mode=NO_ENGINE_SUBSTITUTION\" >> /etc/mysql/mysql.conf.d/mysqld.cnf\n#   Expose http port\nEXPOSE 80/tcp\n#   Get the entrypoint script and make sure it is executable\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /usr/local/bin/ https://raw.githubusercontent.com/ZoneMinder/zmdockerfiles/master/utils/entrypoint.sh\nRUN chmod 755 /usr/local/bin/entrypoint.sh\n#   This is run each time the container is started\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n#  ###############\n#   RUN EXAMPLES #\n#  ###############\n#   ZoneMinder uses /dev/shm for shared memory and many users will need to increase \n#   the size significantly at runtime like so:\n#\n#   docker run -d -t -p 1080:80 \\\n#      --shm-size=\"512m\" \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   ZoneMinder checks the TZ environment variable at runtime to determine the timezone.\n#   If this variable is not set, then ZoneMinder will default to UTC.\n#   Alternaitvely, the timezone can be set manually like so:\n#\n#   docker run -d -t -p 1080:80 \\\n#      -e TZ='America/Los_Angeles' \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   ZoneMinder can write its data to folders outside the container using volumes.\n#\n#   docker run -d -t -p 1080:80 \\\n#      -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#      -v /disk/zoneminder/mysql:/var/lib/mysql \\\n#      -v /disk/zoneminder/logs:/var/log/zm \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   ZoneMinder can use an external database by setting the appropriate environment variables.\n#\n#   docker run -d -t -p 1080:80 \\\n#      -e ZM_DB_USER='zmuser' \\\n#      -e ZM_DB_PASS='zmpassword' \\\n#      -e ZM_DB_NAME='zoneminder_database' \\\n#      -e ZM_DB_HOST='my_central_db_server' \\\n#      -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#      -v /disk/zoneminder/logs:/var/log/zm \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   Here is an example using the options described above with the internal database:\n#\n#   docker run -d -t -p 1080:80 \\\n#      -e TZ='America/Los_Angeles' \\\n#      -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#      -v /disk/zoneminder/mysql:/var/lib/mysql \\\n#      -v /disk/zoneminder/logs:/var/log/zm \\\n#      --shm-size=\"512m\" \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   Here is an example using the options described above with an external database:\n#\n#   docker run -d -t -p 1080:80 \\\n#      -e TZ='America/Los_Angeles' \\\n#      -e ZM_DB_user='zmuser' \\\n#      -e ZM_DB_PASS='zmpassword' \\\n#      -e ZM_DB_NAME='zoneminder_database' \\\n#      -e ZM_DB_HOST='my_central_db_server' \\\n#      -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#      -v /disk/zoneminder/logs:/var/log/zm \\\n#      --shm-size=\"512m\" \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#  ######################\n#   Email Notifications #\n#  ######################\n#\n#   Zoneminder can notify you via email but for this SSMTP needs to be configured.\n#\n#   1. Copy the ssmtp.conf from your container to your local directory.\n#      $ docker cp zoneminder:/etc/ssmtp/ssmtp.conf .\n#   2. Edit ssmtp.conf to match your SMTP server and email addresses\n#   3. Copy the modified ssmtpt.conf back into the container.\n#      $ docker cp ssmtp.conf zoneminder:/etc/ssmtp/ssmtp.conf\n#   4. In the ZM Console Options, set\n#      - Email->NEW_MAIL_MODULES to enabled\n#      - Email->SSMTP_MAIL to enabled\n#      - Email->SSMTP_PATH to /usr/sbin/ssmtp\n#   5. Create an Email sending event filter as described in the docs \n#      http://zoneminder.readthedocs.io/en/stable/userguide/filterevents.html\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial\nMAINTAINER Markos Vakondios <mvakondios@gmail.com> Riley Schuit <riley.schuit@gmail.com>\n#  Resynchronize the package index files\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apache2 build-essential cmake dh-autoreconf dpatch git libapache2-mod-php libarchive-zip-perl libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavresample-dev libav-tools libavutil-dev libbz2-dev libcurl4-gnutls-dev libdate-manip-perl libdbd-mysql-perl libdbi-perl libdevice-serialport-perl libgcrypt-dev libgnutls-openssl-dev libjpeg-turbo8 libjpeg-turbo8-dev libmime-lite-perl libmime-perl libmp4v2-dev libmysqlclient-dev libnet-sftp-foreign-perl libnetpbm10-dev libpcre3 libpcre3-dev libpolkit-gobject-1-dev libpostproc-dev libssl-dev libswscale-dev libsys-cpu-perl libsys-meminfo-perl libsys-mmap-perl libtheora-dev libtool libv4l-dev libvlc5 libvlccore8 libvlccore-dev libvlc-dev libvorbis-dev libvpx-dev libwww-perl libjson-any-perl libjson-maybexs-perl libnumber-bytes-human-perl libsoap-wsdl-perl libio-socket-multicast-perl libphp-serialization-perl libimage-info-perl liburi-encode-perl libdata-dump-perl libclass-std-fast-perl libdigest-sha-perl libdata-uuid-perl libfile-slurp-perl libcrypt-eksblowfish-perl libdata-entropy-perl perl-modules libx264-dev mysql-client mysql-server php php-cli php-gd php-mysql ssmtp software-properties-common vlc-data yasm zip \\\n && add-apt-repository -y ppa:iconnor/zoneminder \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends php-apcu-bc \\\n && rm -rf /var/lib/apt/lists/*\n#  Get the latest master branch and submodule(s)\nRUN git clone --recursive https://github.com/ZoneMinder/ZoneMinder\n#  Change into the ZoneMinder directory\nWORKDIR /ZoneMinder\n#  Configure ZoneMinder\nRUN cmake .\n#  Build & install ZoneMinder\nRUN make \\\n && make install\n#  ensure writable folders\nRUN ./zmlinkcontent.sh\n#  Set our volumes before we attempt to configure apache\nVOLUME /var/lib/zoneminder/events /var/lib/mysql /var/log/zm\n#  Stop Apache and Mysql before we configure them\nRUN service mysql stop \\\n && service apache2 stop\n#  Configure Apache\nRUN cp misc/apache.conf /etc/apache2/sites-available/000-default.conf\nRUN echo \"ServerName localhost\" > /etc/apache2/conf-available/servername.conf \\\n && a2enconf -q servername\nRUN a2enmod -q rewrite \\\n && a2enmod -q cgi\n#  Configure mysql\n#  No longer needed for zm >= 1.32.0\n# RUN echo \"sql_mode=NO_ENGINE_SUBSTITUTION\" >> /etc/mysql/mysql.conf.d/mysqld.cnf\n#  Expose http port\nEXPOSE 80/tcp\n#  Get the entrypoint script and make sure it is executable\nADD https://raw.githubusercontent.com/ZoneMinder/zmdockerfiles/master/utils/entrypoint.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/entrypoint.sh\n#  This is run each time the container is started\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n# ###############\n#  RUN EXAMPLES #\n# ###############\n#  ZoneMinder uses /dev/shm for shared memory and many users will need to increase \n#  the size significantly at runtime like so:\n#\n#  docker run -d -t -p 1080:80 \\\n#     --shm-size=\"512m\" \\\n#     --name zoneminder \\\n#     zoneminder/zoneminder\n#  ZoneMinder checks the TZ environment variable at runtime to determine the timezone.\n#  If this variable is not set, then ZoneMinder will default to UTC.\n#  Alternaitvely, the timezone can be set manually like so:\n#\n#  docker run -d -t -p 1080:80 \\\n#     -e TZ='America/Los_Angeles' \\\n#     --name zoneminder \\\n#     zoneminder/zoneminder\n#  ZoneMinder can write its data to folders outside the container using volumes.\n#\n#  docker run -d -t -p 1080:80 \\\n#     -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#     -v /disk/zoneminder/mysql:/var/lib/mysql \\\n#     -v /disk/zoneminder/logs:/var/log/zm \\\n#     --name zoneminder \\\n#     zoneminder/zoneminder\n#  ZoneMinder can use an external database by setting the appropriate environment variables.\n#\n#  docker run -d -t -p 1080:80 \\\n#     -e ZM_DB_USER='zmuser' \\\n#     -e ZM_DB_PASS='zmpassword' \\\n#     -e ZM_DB_NAME='zoneminder_database' \\\n#     -e ZM_DB_HOST='my_central_db_server' \\\n#     -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#     -v /disk/zoneminder/logs:/var/log/zm \\\n#     --name zoneminder \\\n#     zoneminder/zoneminder\n#  Here is an example using the options described above with the internal database:\n#\n#  docker run -d -t -p 1080:80 \\\n#     -e TZ='America/Los_Angeles' \\\n#     -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#     -v /disk/zoneminder/mysql:/var/lib/mysql \\\n#     -v /disk/zoneminder/logs:/var/log/zm \\\n#     --shm-size=\"512m\" \\\n#     --name zoneminder \\\n#     zoneminder/zoneminder\n#  Here is an example using the options described above with an external database:\n#\n#  docker run -d -t -p 1080:80 \\\n#     -e TZ='America/Los_Angeles' \\\n#     -e ZM_DB_user='zmuser' \\\n#     -e ZM_DB_PASS='zmpassword' \\\n#     -e ZM_DB_NAME='zoneminder_database' \\\n#     -e ZM_DB_HOST='my_central_db_server' \\\n#     -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#     -v /disk/zoneminder/logs:/var/log/zm \\\n#     --shm-size=\"512m\" \\\n#     --name zoneminder \\\n#     zoneminder/zoneminder\n# ######################\n#  Email Notifications #\n# ######################\n#\n#  Zoneminder can notify you via email but for this SSMTP needs to be configured.\n#\n#  1. Copy the ssmtp.conf from your container to your local directory.\n#     $ docker cp zoneminder:/etc/ssmtp/ssmtp.conf .\n#  2. Edit ssmtp.conf to match your SMTP server and email addresses\n#  3. Copy the modified ssmtpt.conf back into the container.\n#     $ docker cp ssmtp.conf zoneminder:/etc/ssmtp/ssmtp.conf\n#  4. In the ZM Console Options, set\n#     - Email->NEW_MAIL_MODULES to enabled\n#     - Email->SSMTP_MAIL to enabled\n#     - Email->SSMTP_PATH to /usr/sbin/ssmtp\n#  5. Create an Email sending event filter as described in the docs \n#     http://zoneminder.readthedocs.io/en/stable/userguide/filterevents.html\n","injectedSmells":[],"originalDockerfileHash":"40ebd66c9c40e7de810916cff02d125c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial\nMAINTAINER Markos Vakondios <mvakondios@gmail.com> Riley Schuit <riley.schuit@gmail.com>\n#   Resynchronize the package index files\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apache2 build-essential cmake dh-autoreconf dpatch git libapache2-mod-php libarchive-zip-perl libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavresample-dev libav-tools libavutil-dev libbz2-dev libcurl4-gnutls-dev libdate-manip-perl libdbd-mysql-perl libdbi-perl libdevice-serialport-perl libgcrypt-dev libgnutls-openssl-dev libjpeg-turbo8 libjpeg-turbo8-dev libmime-lite-perl libmime-perl libmp4v2-dev libmysqlclient-dev libnet-sftp-foreign-perl libnetpbm10-dev libpcre3 libpcre3-dev libpolkit-gobject-1-dev libpostproc-dev libssl-dev libswscale-dev libsys-cpu-perl libsys-meminfo-perl libsys-mmap-perl libtheora-dev libtool libv4l-dev libvlc5 libvlccore8 libvlccore-dev libvlc-dev libvorbis-dev libvpx-dev libwww-perl libjson-any-perl libjson-maybexs-perl libnumber-bytes-human-perl libsoap-wsdl-perl libio-socket-multicast-perl libphp-serialization-perl libimage-info-perl liburi-encode-perl libdata-dump-perl libclass-std-fast-perl libdigest-sha-perl libdata-uuid-perl libfile-slurp-perl libcrypt-eksblowfish-perl libdata-entropy-perl perl-modules libx264-dev mysql-client mysql-server php php-cli php-gd php-mysql ssmtp software-properties-common vlc-data yasm zip \\\n && add-apt-repository -y ppa:iconnor/zoneminder \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends php-apcu-bc \\\n && rm -rf /var/lib/apt/lists/*\n#   Get the latest master branch and submodule(s)\nRUN git clone --recursive https://github.com/ZoneMinder/ZoneMinder\n#   Change into the ZoneMinder directory\nWORKDIR /ZoneMinder\n#   Configure ZoneMinder\nRUN cmake .\n#   Build & install ZoneMinder\nRUN make \\\n && make install\n#   ensure writable folders\nRUN ./zmlinkcontent.sh\n#   Set our volumes before we attempt to configure apache\nVOLUME /var/lib/zoneminder/events /var/lib/mysql /var/log/zm\n#   Stop Apache and Mysql before we configure them\nRUN service mysql stop \\\n && service apache2 stop\n#   Configure Apache\nRUN cp misc/apache.conf /etc/apache2/sites-available/000-default.conf\nRUN echo \"ServerName localhost\" > /etc/apache2/conf-available/servername.conf \\\n && a2enconf -q servername\nRUN a2enmod -q rewrite \\\n && a2enmod -q cgi\n#   Configure mysql\n#   No longer needed for zm >= 1.32.0\n#  RUN echo \"sql_mode=NO_ENGINE_SUBSTITUTION\" >> /etc/mysql/mysql.conf.d/mysqld.cnf\n#   Expose http port\nEXPOSE 80/tcp\n#   Get the entrypoint script and make sure it is executable\nADD https://raw.githubusercontent.com/ZoneMinder/zmdockerfiles/master/utils/entrypoint.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/entrypoint.sh\n#   This is run each time the container is started\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n#  ###############\n#   RUN EXAMPLES #\n#  ###############\n#   ZoneMinder uses /dev/shm for shared memory and many users will need to increase \n#   the size significantly at runtime like so:\n#\n#   docker run -d -t -p 1080:80 \\\n#      --shm-size=\"512m\" \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   ZoneMinder checks the TZ environment variable at runtime to determine the timezone.\n#   If this variable is not set, then ZoneMinder will default to UTC.\n#   Alternaitvely, the timezone can be set manually like so:\n#\n#   docker run -d -t -p 1080:80 \\\n#      -e TZ='America/Los_Angeles' \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   ZoneMinder can write its data to folders outside the container using volumes.\n#\n#   docker run -d -t -p 1080:80 \\\n#      -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#      -v /disk/zoneminder/mysql:/var/lib/mysql \\\n#      -v /disk/zoneminder/logs:/var/log/zm \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   ZoneMinder can use an external database by setting the appropriate environment variables.\n#\n#   docker run -d -t -p 1080:80 \\\n#      -e ZM_DB_USER='zmuser' \\\n#      -e ZM_DB_PASS='zmpassword' \\\n#      -e ZM_DB_NAME='zoneminder_database' \\\n#      -e ZM_DB_HOST='my_central_db_server' \\\n#      -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#      -v /disk/zoneminder/logs:/var/log/zm \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   Here is an example using the options described above with the internal database:\n#\n#   docker run -d -t -p 1080:80 \\\n#      -e TZ='America/Los_Angeles' \\\n#      -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#      -v /disk/zoneminder/mysql:/var/lib/mysql \\\n#      -v /disk/zoneminder/logs:/var/log/zm \\\n#      --shm-size=\"512m\" \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#   Here is an example using the options described above with an external database:\n#\n#   docker run -d -t -p 1080:80 \\\n#      -e TZ='America/Los_Angeles' \\\n#      -e ZM_DB_user='zmuser' \\\n#      -e ZM_DB_PASS='zmpassword' \\\n#      -e ZM_DB_NAME='zoneminder_database' \\\n#      -e ZM_DB_HOST='my_central_db_server' \\\n#      -v /disk/zoneminder/events:/var/lib/zoneminder/events \\\n#      -v /disk/zoneminder/logs:/var/log/zm \\\n#      --shm-size=\"512m\" \\\n#      --name zoneminder \\\n#      zoneminder/zoneminder\n#  ######################\n#   Email Notifications #\n#  ######################\n#\n#   Zoneminder can notify you via email but for this SSMTP needs to be configured.\n#\n#   1. Copy the ssmtp.conf from your container to your local directory.\n#      $ docker cp zoneminder:/etc/ssmtp/ssmtp.conf .\n#   2. Edit ssmtp.conf to match your SMTP server and email addresses\n#   3. Copy the modified ssmtpt.conf back into the container.\n#      $ docker cp ssmtp.conf zoneminder:/etc/ssmtp/ssmtp.conf\n#   4. In the ZM Console Options, set\n#      - Email->NEW_MAIL_MODULES to enabled\n#      - Email->SSMTP_MAIL to enabled\n#      - Email->SSMTP_PATH to /usr/sbin/ssmtp\n#   5. Create an Email sending event filter as described in the docs \n#      http://zoneminder.readthedocs.io/en/stable/userguide/filterevents.html\n","originalDockerfileUglifiedHash":"e13760f4c612fc8c50ccfb098c8ed828","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1d8ab93b0ee5b9f94721d07a4bd3722719cc3293.dockerfile"}