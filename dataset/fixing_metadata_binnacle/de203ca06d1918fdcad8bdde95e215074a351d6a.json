{"seed":26571198,"processedDockerfileHash":"432131fb6b9cee60d2d409c7a15ba15d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM arm64v8/debian:sid-slim\nLABEL io.balena.architecture=\"aarch64\"\nLABEL io.balena.qemu.version=\"4.0.0+balena-aarch64\"\nCOPY qemu-aarch64-static /usr/bin\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo ca-certificates findutils gnupg dirmngr inetutils-ping netbase curl udev procps $( if apt-cache show 'iproute' 2> /dev/null | grep -q '^Version:' ; then echo 'iproute' ; else echo 'iproute2' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n set +e\\n (\\n apt-get update -qq &&\\n apt-get install -y --no-install-recommends \"$@\"\\n )\\n CODE=$?\\n set -e\\n if [ $CODE -eq 0 ]; then\\n break\\n fi\\n if [ $n -eq $max ]; then\\n exit $CODE\\n fi\\n echo \"apt failed, retrying\"\\n n=$(($n + 1))\\ndone\\nrm -r /var/lib/apt/lists/*' > /usr/sbin/install_packages \\\n && chmod 0755 \"/usr/sbin/install_packages\"\n#   Install packages for build variant\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl wget bzr git mercurial openssh-client subversion autoconf build-essential imagemagick libbz2-dev libcurl4-openssl-dev libevent-dev libffi-dev libglib2.0-dev libjpeg-dev libmagickcore-dev libmagickwand-dev libncurses-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libxml2-dev libxslt-dev libyaml-dev zlib1g-dev $( if apt-cache show 'default-libmysqlclient-dev' 2> /dev/null | grep -q '^Version:' ; then echo 'default-libmysqlclient-dev' ; else echo 'libmysqlclient-dev' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\" \\\n && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437 resin-xbuild1.0.0.tar.gz\" | sha256sum -c - \\\n && tar -xzf \"resin-xbuild1.0.0.tar.gz\" \\\n && rm \"resin-xbuild1.0.0.tar.gz\" \\\n && chmod +x resin-xbuild \\\n && mv resin-xbuild /usr/bin \\\n && ln -s resin-xbuild /usr/bin/cross-build-start \\\n && ln -s resin-xbuild /usr/bin/cross-build-end\nENV LC_ALL=\"C.UTF-8\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV UDEV=\"off\"\n#   01_nodoc\nRUN echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc\n#   01_buildconfig\nRUN echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig\nRUN mkdir -p /usr/share/man/man1\nCOPY entry.sh /usr/bin/entry.sh\nENTRYPOINT [\"/usr/bin/entry.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM arm64v8/debian:sid-slim\nLABEL io.balena.architecture=\"aarch64\"\nLABEL io.balena.qemu.version=\"4.0.0+balena-aarch64\"\nCOPY qemu-aarch64-static /usr/bin\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo ca-certificates findutils gnupg dirmngr inetutils-ping netbase curl udev procps $( if apt-cache show 'iproute' 2> /dev/null | grep -q '^Version:' ; then echo 'iproute' ; else echo 'iproute2' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n set +e\\n (\\n apt-get update -qq &&\\n apt-get install -y --no-install-recommends \"$@\"\\n )\\n CODE=$?\\n set -e\\n if [ $CODE -eq 0 ]; then\\n break\\n fi\\n if [ $n -eq $max ]; then\\n exit $CODE\\n fi\\n echo \"apt failed, retrying\"\\n n=$(($n + 1))\\ndone\\nrm -r /var/lib/apt/lists/*' > /usr/sbin/install_packages \\\n && chmod 0755 \"/usr/sbin/install_packages\"\n#  Install packages for build variant\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl wget bzr git mercurial openssh-client subversion autoconf build-essential imagemagick libbz2-dev libcurl4-openssl-dev libevent-dev libffi-dev libglib2.0-dev libjpeg-dev libmagickcore-dev libmagickwand-dev libncurses-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libxml2-dev libxslt-dev libyaml-dev zlib1g-dev $( if apt-cache show 'default-libmysqlclient-dev' 2> /dev/null | grep -q '^Version:' ; then echo 'default-libmysqlclient-dev' ; else echo 'libmysqlclient-dev' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\" \\\n && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437 resin-xbuild1.0.0.tar.gz\" | sha256sum -c - \\\n && tar -xzf \"resin-xbuild1.0.0.tar.gz\" \\\n && rm \"resin-xbuild1.0.0.tar.gz\" \\\n && chmod +x resin-xbuild \\\n && mv resin-xbuild /usr/bin \\\n && ln -s resin-xbuild /usr/bin/cross-build-start \\\n && ln -s resin-xbuild /usr/bin/cross-build-end\nENV LC_ALL=\"C.UTF-8\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV UDEV=\"off\"\n#  01_nodoc\nRUN echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc\n#  01_buildconfig\nRUN echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig\nRUN mkdir -p /usr/share/man/man1\nCOPY entry.sh /usr/bin/entry.sh\nENTRYPOINT [\"/usr/bin/entry.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"d058af76a12dabc91ca5aee1019571be","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM arm64v8/debian:sid-slim\nLABEL io.balena.architecture=\"aarch64\"\nLABEL io.balena.qemu.version=\"4.0.0+balena-aarch64\"\nCOPY qemu-aarch64-static /usr/bin\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo ca-certificates findutils gnupg dirmngr inetutils-ping netbase curl udev procps $( if apt-cache show 'iproute' 2> /dev/null | grep -q '^Version:' ; then echo 'iproute' ; else echo 'iproute2' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n set +e\\n (\\n apt-get update -qq &&\\n apt-get install -y --no-install-recommends \"$@\"\\n )\\n CODE=$?\\n set -e\\n if [ $CODE -eq 0 ]; then\\n break\\n fi\\n if [ $n -eq $max ]; then\\n exit $CODE\\n fi\\n echo \"apt failed, retrying\"\\n n=$(($n + 1))\\ndone\\nrm -r /var/lib/apt/lists/*' > /usr/sbin/install_packages \\\n && chmod 0755 \"/usr/sbin/install_packages\"\n#   Install packages for build variant\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl wget bzr git mercurial openssh-client subversion autoconf build-essential imagemagick libbz2-dev libcurl4-openssl-dev libevent-dev libffi-dev libglib2.0-dev libjpeg-dev libmagickcore-dev libmagickwand-dev libncurses-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libxml2-dev libxslt-dev libyaml-dev zlib1g-dev $( if apt-cache show 'default-libmysqlclient-dev' 2> /dev/null | grep -q '^Version:' ; then echo 'default-libmysqlclient-dev' ; else echo 'libmysqlclient-dev' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\" \\\n && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437 resin-xbuild1.0.0.tar.gz\" | sha256sum -c - \\\n && tar -xzf \"resin-xbuild1.0.0.tar.gz\" \\\n && rm \"resin-xbuild1.0.0.tar.gz\" \\\n && chmod +x resin-xbuild \\\n && mv resin-xbuild /usr/bin \\\n && ln -s resin-xbuild /usr/bin/cross-build-start \\\n && ln -s resin-xbuild /usr/bin/cross-build-end\nENV LC_ALL=\"C.UTF-8\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV UDEV=\"off\"\n#   01_nodoc\nRUN echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc\n#   01_buildconfig\nRUN echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig\nRUN mkdir -p /usr/share/man/man1\nCOPY entry.sh /usr/bin/entry.sh\nENTRYPOINT [\"/usr/bin/entry.sh\"]\n","originalDockerfileUglifiedHash":"4e9960a190165836aa776d868db9cf83","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/de203ca06d1918fdcad8bdde95e215074a351d6a.dockerfile"}