{"seed":3223629656,"processedDockerfileHash":"65a888758968d2830e9286edcef8c472","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu\nMAINTAINER Eric Fairbanks <ericpfairbanks@gmail.com>\n#   Install dependencies and audio tools\nRUN :\n#   Install jackd by itself first without extras since installing alongside other tools seems to cause problems\nRUN (apt-get update ;apt-get install --no-install-recommends jackd=5+nmu1 -y )\n#   Install pretty much everything we need here\nRUN DEBIAN_FRONTEND='noninteractive' apt-get -y install build-essential xvfb git yasm supervisor libsndfile1-dev libsamplerate0-dev liblo-dev libasound2-dev wget ghc emacs-nox haskell-mode zlib1g-dev xz-utils htop screen openssh-server cabal-install curl sudo\n#   Install jack libs last\nRUN (apt-get update ;apt-get install --no-install-recommends libjack-jackd2-dev=1.9.21~dfsg-2 -y )\n#   Build Dirt synth\nWORKDIR /repos\nRUN git clone --recursive https://github.com/tidalcycles/Dirt.git\nWORKDIR Dirt\nRUN make\n#   Build & Install libmp3lame\nWORKDIR /repos\nRUN git clone https://github.com/rbrito/lame.git\nWORKDIR lame\nRUN ./configure --prefix=/usr\nRUN make install\nWORKDIR /repos\nRUN rm -fr lame\n#   Build & Install ffmpeg, ffserver\nWORKDIR /repos\nRUN git clone https://github.com/efairbanks/FFmpeg.git ffmpeg\nWORKDIR ffmpeg\nRUN ./configure --enable-indev=jack --enable-libmp3lame --enable-nonfree --prefix=/usr\nRUN make install\nWORKDIR /repos\nRUN rm -fr ffmpeg\n#   Initialize and configure sshd\nRUN mkdir /var/run/sshd\nRUN echo 'root:algorave' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   Expose sshd service\nEXPOSE 22/tcp\n#   Expose ffserver streaming service\nEXPOSE 8090/tcp\n#   Pull Tidal Emacs binding\nRUN mkdir /repos/tidal\nWORKDIR /repos\nWORKDIR tidal\nRUN wget https://raw.githubusercontent.com/tidalcycles/Tidal/master/tidal.el\nENV HOME=\"/root\"\nWORKDIR /root\nRUN ln -s /repos /root/repos\nRUN ln -s /work /root/work\n#   Install tidal\nRUN cabal update\nRUN cabal install tidal-0.9.6\n#   build and install supercollider\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends cmake=3.25.1-1 build-essential=12.9ubuntu3 libjack-jackd2-dev=1.9.21~dfsg-2 libsndfile1-dev=1.2.0-1 libasound2-dev=1.2.8-1build1 libavahi-client-dev=0.8-6ubuntu1 libicu-dev=72.1-3ubuntu1 libreadline6-dev libfftw3-dev=3.3.10-1ubuntu1 libxt-dev=1:1.2.1-1 libudev-dev=252.5-2ubuntu3 libcwiid-dev=0.6.91-4build1 pkg-config=1.8.1-1ubuntu2 qt5-default qt5-qmake=5.15.8+dfsg-3 qttools5-dev=5.15.8-2 qttools5-dev-tools=5.15.8-2 qtdeclarative5-dev=5.15.8+dfsg-3 libqt5webkit5-dev=5.212.0~alpha4-30build1 qtpositioning5-dev=5.15.8+dfsg-3 libqt5sensors5-dev=5.15.8-2 libqt5opengl5-dev=5.15.8+dfsg-3 -y )\nWORKDIR /repos\nRUN git clone https://github.com/supercollider/supercollider.git\nWORKDIR /repos/supercollider\nRUN git checkout 3.8\nRUN git submodule init \\\n && git submodule update\nRUN mkdir /repos/supercollider/build\nWORKDIR /repos/supercollider/build\nRUN cmake -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/qt5/ ..\nRUN make\nRUN make install\nRUN ldconfig\n#   Install supercollider plugins\nWORKDIR /usr/share/SuperCollider/Extensions\nRUN git clone https://github.com/musikinformatik/SuperDirt\nRUN git clone https://github.com/tidalcycles/Dirt-Samples\nRUN git clone https://github.com/supercollider-quarks/Vowel\n#   Install default configurations\nCOPY configs/emacsrc /root/.emacs\nCOPY configs/screenrc /root/.screenrc\nCOPY configs/ffserver.conf /root/ffserver.conf\n#   Install default Tidal files\nCOPY tidal/init.tidal /root/init.tidal\nCOPY tidal/hello.tidal /root/hello.tidal\n#   Prepare scratch workspace for version control\nRUN sudo mkdir /work\nWORKDIR /work\nRUN mkdir /root/.ssh\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /root/.ssh/id_rsa https://raw.githubusercontent.com/DoubleDensity/scratchpool/master/id_rsa-scratchpool\nCOPY configs/sshconfig /root/.ssh/config\nRUN ssh-keyscan -H github.com >> ~/.ssh/known_hosts\nRUN git clone https://github.com/DoubleDensity/scratchpool.git\nWORKDIR /work/scratchpool\nRUN git config user.name \"SuperTidebox User\"\nRUN git config user.email \"supertidal@jankycloud.com\"\n#   Install Tidebox supervisord config\nCOPY configs/tidebox.ini /etc/supervisor/conf.d/tidebox.conf\n#   Copy inital supercollider/superdirt startup file\nCOPY configs/firststart.scd /root/.sclang.sc\n#   Make dummy sclang_conf.yaml to force sclang to recompile class library\nRUN touch /root/sclang_conf.yaml\n#   Install Quarks\nWORKDIR /root\nRUN xvfb-run sclang -l sclang_conf.yaml\n#  RUN xvfb-run sclang -l sclang_conf.yaml\n#   Copy permanent supercollider/superdirt startup file\nCOPY configs/startup.scd /root/.sclang.sc\n#   Make dummy sclang_conf.yaml to force sclang to recompile class library\nRUN touch /root/sclang_conf.yaml\n#   set root shell to screen\nRUN echo \"/usr/bin/screen\" >> /etc/shells\nRUN usermod -s /usr/bin/screen root\nCMD [\"/usr/bin/supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu\nMAINTAINER Eric Fairbanks <ericpfairbanks@gmail.com>\n#  Install dependencies and audio tools\nRUN apt-get update\n#  Install jackd by itself first without extras since installing alongside other tools seems to cause problems\nRUN apt-get install jackd -y\n#  Install pretty much everything we need here\nRUN DEBIAN_FRONTEND='noninteractive' apt-get -y install build-essential xvfb git yasm supervisor libsndfile1-dev libsamplerate0-dev liblo-dev libasound2-dev wget ghc emacs-nox haskell-mode zlib1g-dev xz-utils htop screen openssh-server cabal-install curl sudo\n#  Install jack libs last\nRUN apt-get install libjack-jackd2-dev -y\n#  Build Dirt synth\nWORKDIR /repos\nRUN git clone --recursive https://github.com/tidalcycles/Dirt.git\nWORKDIR Dirt\nRUN make\n#  Build & Install libmp3lame\nWORKDIR /repos\nRUN git clone https://github.com/rbrito/lame.git\nWORKDIR lame\nRUN ./configure --prefix=/usr\nRUN make install\nWORKDIR /repos\nRUN rm -fr lame\n#  Build & Install ffmpeg, ffserver\nWORKDIR /repos\nRUN git clone https://github.com/efairbanks/FFmpeg.git ffmpeg\nWORKDIR ffmpeg\nRUN ./configure --enable-indev=jack --enable-libmp3lame --enable-nonfree --prefix=/usr\nRUN make install\nWORKDIR /repos\nRUN rm -fr ffmpeg\n#  Initialize and configure sshd\nRUN mkdir /var/run/sshd\nRUN echo 'root:algorave' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n#  SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#  Expose sshd service\nEXPOSE 22/tcp\n#  Expose ffserver streaming service\nEXPOSE 8090/tcp\n#  Pull Tidal Emacs binding\nRUN mkdir /repos/tidal\nWORKDIR /repos\nWORKDIR tidal\nRUN wget https://raw.githubusercontent.com/tidalcycles/Tidal/master/tidal.el\nENV HOME=\"/root\"\nWORKDIR /root\nRUN ln -s /repos /root/repos\nRUN ln -s /work /root/work\n#  Install tidal\nRUN cabal update\nRUN cabal install tidal-0.9.6\n#  build and install supercollider\nRUN apt-get update\nRUN apt-get install cmake build-essential libjack-jackd2-dev libsndfile1-dev libasound2-dev libavahi-client-dev libicu-dev libreadline6-dev libfftw3-dev libxt-dev libudev-dev libcwiid-dev pkg-config qt5-default qt5-qmake qttools5-dev qttools5-dev-tools qtdeclarative5-dev libqt5webkit5-dev qtpositioning5-dev libqt5sensors5-dev libqt5opengl5-dev -y\nWORKDIR /repos\nRUN git clone https://github.com/supercollider/supercollider.git\nWORKDIR /repos/supercollider\nRUN git checkout 3.8\nRUN git submodule init \\\n && git submodule update\nRUN mkdir /repos/supercollider/build\nWORKDIR /repos/supercollider/build\nRUN cmake -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/qt5/ ..\nRUN make\nRUN make install\nRUN ldconfig\n#  Install supercollider plugins\nWORKDIR /usr/share/SuperCollider/Extensions\nRUN git clone https://github.com/musikinformatik/SuperDirt\nRUN git clone https://github.com/tidalcycles/Dirt-Samples\nRUN git clone https://github.com/supercollider-quarks/Vowel\n#  Install default configurations\nCOPY configs/emacsrc /root/.emacs\nCOPY configs/screenrc /root/.screenrc\nCOPY configs/ffserver.conf /root/ffserver.conf\n#  Install default Tidal files\nCOPY tidal/init.tidal /root/init.tidal\nCOPY tidal/hello.tidal /root/hello.tidal\n#  Prepare scratch workspace for version control\nRUN sudo mkdir /work\nWORKDIR /work\nRUN mkdir /root/.ssh\nADD https://raw.githubusercontent.com/DoubleDensity/scratchpool/master/id_rsa-scratchpool /root/.ssh/id_rsa\nCOPY configs/sshconfig /root/.ssh/config\nRUN ssh-keyscan -H github.com >> ~/.ssh/known_hosts\nRUN git clone https://github.com/DoubleDensity/scratchpool.git\nWORKDIR /work/scratchpool\nRUN git config user.name \"SuperTidebox User\"\nRUN git config user.email \"supertidal@jankycloud.com\"\n#  Install Tidebox supervisord config\nCOPY configs/tidebox.ini /etc/supervisor/conf.d/tidebox.conf\n#  Copy inital supercollider/superdirt startup file\nCOPY configs/firststart.scd /root/.sclang.sc\n#  Make dummy sclang_conf.yaml to force sclang to recompile class library\nRUN touch /root/sclang_conf.yaml\n#  Install Quarks\nWORKDIR /root\nRUN xvfb-run sclang -l sclang_conf.yaml\n# RUN xvfb-run sclang -l sclang_conf.yaml\n#  Copy permanent supercollider/superdirt startup file\nCOPY configs/startup.scd /root/.sclang.sc\n#  Make dummy sclang_conf.yaml to force sclang to recompile class library\nRUN touch /root/sclang_conf.yaml\n#  set root shell to screen\nRUN echo \"/usr/bin/screen\" >> /etc/shells\nRUN usermod -s /usr/bin/screen root\nCMD [\"/usr/bin/supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"18b8f97da6b7f4685713d58cc024af58","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu\nMAINTAINER Eric Fairbanks <ericpfairbanks@gmail.com>\n#   Install dependencies and audio tools\nRUN apt-get update\n#   Install jackd by itself first without extras since installing alongside other tools seems to cause problems\nRUN apt-get install jackd -y\n#   Install pretty much everything we need here\nRUN DEBIAN_FRONTEND='noninteractive' apt-get -y install build-essential xvfb git yasm supervisor libsndfile1-dev libsamplerate0-dev liblo-dev libasound2-dev wget ghc emacs-nox haskell-mode zlib1g-dev xz-utils htop screen openssh-server cabal-install curl sudo\n#   Install jack libs last\nRUN apt-get install libjack-jackd2-dev -y\n#   Build Dirt synth\nWORKDIR /repos\nRUN git clone --recursive https://github.com/tidalcycles/Dirt.git\nWORKDIR Dirt\nRUN make\n#   Build & Install libmp3lame\nWORKDIR /repos\nRUN git clone https://github.com/rbrito/lame.git\nWORKDIR lame\nRUN ./configure --prefix=/usr\nRUN make install\nWORKDIR /repos\nRUN rm -fr lame\n#   Build & Install ffmpeg, ffserver\nWORKDIR /repos\nRUN git clone https://github.com/efairbanks/FFmpeg.git ffmpeg\nWORKDIR ffmpeg\nRUN ./configure --enable-indev=jack --enable-libmp3lame --enable-nonfree --prefix=/usr\nRUN make install\nWORKDIR /repos\nRUN rm -fr ffmpeg\n#   Initialize and configure sshd\nRUN mkdir /var/run/sshd\nRUN echo 'root:algorave' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   Expose sshd service\nEXPOSE 22/tcp\n#   Expose ffserver streaming service\nEXPOSE 8090/tcp\n#   Pull Tidal Emacs binding\nRUN mkdir /repos/tidal\nWORKDIR /repos\nWORKDIR tidal\nRUN wget https://raw.githubusercontent.com/tidalcycles/Tidal/master/tidal.el\nENV HOME=\"/root\"\nWORKDIR /root\nRUN ln -s /repos /root/repos\nRUN ln -s /work /root/work\n#   Install tidal\nRUN cabal update\nRUN cabal install tidal-0.9.6\n#   build and install supercollider\nRUN apt-get update\nRUN apt-get install cmake build-essential libjack-jackd2-dev libsndfile1-dev libasound2-dev libavahi-client-dev libicu-dev libreadline6-dev libfftw3-dev libxt-dev libudev-dev libcwiid-dev pkg-config qt5-default qt5-qmake qttools5-dev qttools5-dev-tools qtdeclarative5-dev libqt5webkit5-dev qtpositioning5-dev libqt5sensors5-dev libqt5opengl5-dev -y\nWORKDIR /repos\nRUN git clone https://github.com/supercollider/supercollider.git\nWORKDIR /repos/supercollider\nRUN git checkout 3.8\nRUN git submodule init \\\n && git submodule update\nRUN mkdir /repos/supercollider/build\nWORKDIR /repos/supercollider/build\nRUN cmake -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/qt5/ ..\nRUN make\nRUN make install\nRUN ldconfig\n#   Install supercollider plugins\nWORKDIR /usr/share/SuperCollider/Extensions\nRUN git clone https://github.com/musikinformatik/SuperDirt\nRUN git clone https://github.com/tidalcycles/Dirt-Samples\nRUN git clone https://github.com/supercollider-quarks/Vowel\n#   Install default configurations\nCOPY configs/emacsrc /root/.emacs\nCOPY configs/screenrc /root/.screenrc\nCOPY configs/ffserver.conf /root/ffserver.conf\n#   Install default Tidal files\nCOPY tidal/init.tidal /root/init.tidal\nCOPY tidal/hello.tidal /root/hello.tidal\n#   Prepare scratch workspace for version control\nRUN sudo mkdir /work\nWORKDIR /work\nRUN mkdir /root/.ssh\nADD https://raw.githubusercontent.com/DoubleDensity/scratchpool/master/id_rsa-scratchpool /root/.ssh/id_rsa\nCOPY configs/sshconfig /root/.ssh/config\nRUN ssh-keyscan -H github.com >> ~/.ssh/known_hosts\nRUN git clone https://github.com/DoubleDensity/scratchpool.git\nWORKDIR /work/scratchpool\nRUN git config user.name \"SuperTidebox User\"\nRUN git config user.email \"supertidal@jankycloud.com\"\n#   Install Tidebox supervisord config\nCOPY configs/tidebox.ini /etc/supervisor/conf.d/tidebox.conf\n#   Copy inital supercollider/superdirt startup file\nCOPY configs/firststart.scd /root/.sclang.sc\n#   Make dummy sclang_conf.yaml to force sclang to recompile class library\nRUN touch /root/sclang_conf.yaml\n#   Install Quarks\nWORKDIR /root\nRUN xvfb-run sclang -l sclang_conf.yaml\n#  RUN xvfb-run sclang -l sclang_conf.yaml\n#   Copy permanent supercollider/superdirt startup file\nCOPY configs/startup.scd /root/.sclang.sc\n#   Make dummy sclang_conf.yaml to force sclang to recompile class library\nRUN touch /root/sclang_conf.yaml\n#   set root shell to screen\nRUN echo \"/usr/bin/screen\" >> /etc/shells\nRUN usermod -s /usr/bin/screen root\nCMD [\"/usr/bin/supervisord\"]\n","originalDockerfileUglifiedHash":"622e5baba2138b793e9354b30488278f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/eca588ddc83ebd821c353046e97e9f4853e4f5c8.dockerfile"}