{"seed":3838103646,"processedDockerfileHash":"38f5ca126db084b7ea4a1cd7ca44c532","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM bitnami/minideb:jessie\nMAINTAINER Rija Menage <rija+dockerfiles@cinecinetique.com>\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nENTRYPOINT [\"/usr/bin/supervisord\"]\nCMD [\"-c\", \"/etc/supervisor/supervisord.conf\"]\n#  Â Enabling https download of packages\nRUN install_packages apt-transport-https ca-certificates \\\n && install_packages procps curl git iproute2 cron supervisor unattended-upgrades fail2ban mysql-client ufw rsyslog logrotate\nENV GOSU_VERSION=\"1.7\"\nENV NGINX_VERSION=\"1.13.0\"\nENV PHP_VERSION=\"7.1\"\n#   php installation\nRUN curl -o /etc/apt/trusted.gpg.d/php.gpg -fsSL https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ $( lsb_release -sc ;) main\" | tee /etc/apt/sources.list.d/php.list \\\n && install_packages php$PHP_VERSION php$PHP_VERSION-fpm php$PHP_VERSION-cli php$PHP_VERSION-mysql php$PHP_VERSION-gd php$PHP_VERSION-intl php$PHP_VERSION-imagick php$PHP_VERSION-imap php$PHP_VERSION-mcrypt php$PHP_VERSION-pspell php$PHP_VERSION-recode php$PHP_VERSION-tidy php$PHP_VERSION-xml php$PHP_VERSION-json php$PHP_VERSION-opcache php$PHP_VERSION-mbstring\n#   Download Nginx and Ngx cache purge source code\nRUN install_packages build-essential zlib1g-dev libpcre3-dev libssl-dev libgeoip-dev nginx-common \\\n && GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && cd /tmp \\\n && curl -O -fsSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \\\n && curl -O -fsSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify nginx-$NGINX_VERSION.tar.gz.asc nginx-$NGINX_VERSION.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx-$NGINX_VERSION.tar.gz.asc \\\n && tar xzvf nginx-$NGINX_VERSION.tar.gz \\\n && curl -o ngx_cache_purge-2.3.tar.gz -fsSL https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.tar.gz \\\n && tar xzvf ngx_cache_purge-2.3.tar.gz \\\n && cd /tmp/nginx-$NGINX_VERSION \\\n && ./configure --prefix=/usr/share/nginx --with-cc-opt='-g -O2 -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now' --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --with-pcre-jit --with-ipv6 --with-http_ssl_module --with-http_realip_module --with-http_auth_request_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_v2_module --with-stream --with-stream_ssl_module --with-threads --add-module=/tmp/ngx_cache_purge-2.3 \\\n && make \\\n && make install \\\n && ln -fs /usr/share/nginx/sbin/nginx /usr/sbin/nginx \\\n && rm -r /tmp/nginx-$NGINX_VERSION \\\n && rm -r /tmp/ngx_cache_purge-2.3 \\\n && adduser --system --no-create-home --shell /bin/false --group --disabled-login www-front \\\n && openssl dhparam -out /etc/nginx/dhparam.pem 2048 \\\n && dpkg --remove build-essential zlib1g-dev libpcre3-dev libssl-dev libgeoip-dev \\\n && echo \"deb http://ftp.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/php.list \\\n && : \\\n && apt-get -t jessie-backports install -y certbot \\\n && mkdir -p /tmp/le \\\n && rm -rf /var/lib/apt/lists/* \\\n && GPG_KEYS=B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -o /usr/local/bin/gosu -fsSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && curl -o /usr/local/bin/gosu.asc -fsSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   copy nginx config\nCOPY nginx-configs/* /etc/nginx/\nCOPY nginx-configs/sites-available/nginx-site.conf /etc/nginx/sites-available/default\n#   copy  configs (supervisord,  ssh config,  wordpress config sample and scheduling configs)\nCOPY misc-configs/* schedulers-configs/* /etc/\n#   copy bootstrapping scripts\nCOPY scripts/* /\n#   copy web site content into the container image\nCOPY website/wordpress /usr/share/nginx/wordpress/\nCOPY website/*.* /usr/share/nginx/\n#   php-fpm config: Opcode cache config\nRUN sed -i -e\"s/^;opcache.enable=0/opcache.enable=1/\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e\"s/^;opcache.max_accelerated_files=2000/opcache.max_accelerated_files=4000/\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/expose_php = On/expose_php = Off/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/;session.cookie_secure\\s*=\\s*/session.cookie_secure = True/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/session.cookie_httponly\\s*=\\s*/session.cookie_httponly = True/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/$PHP_VERSION/fpm/php-fpm.conf \\\n && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && sed -i -e \"s/listen\\s*=\\s*\\/run\\/php\\/php$PHP_VERSION-fpm.sock/listen = 127.0.0.1:9000/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && sed -i -e \"s/;listen.allowed_clients\\s*=\\s*127.0.0.1/listen.allowed_clients = 127.0.0.1/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && sed -i -e \"s/;access.log\\s*=\\s*log\\/$pool.access.log/access.log = \\/var\\/log\\/$pool.access.log/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && mkdir -p /var/run/php \\\n && chown www-data:www-data /var/run/php \\\n && touch /run/php/php$PHP_VERSION-fpm.pid \\\n && chown www-data:www-data /run/php/php$PHP_VERSION-fpm.pid \\\n && touch /var/log/php$PHP_VERSION-fpm.log \\\n && chown www-data:www-data /var/log/php$PHP_VERSION-fpm.log \\\n && mkdir -p /var/log/nginx \\\n && chown -R www-front:www-front /var/log/nginx \\\n && touch /var/log/nginx/error.log \\\n && chown www-front:www-front /var/log/nginx/error.log \\\n && touch /var/log/nginx/access.log \\\n && chown www-front:www-front /var/log/nginx/access.log \\\n && mv /etc/supervisord.conf /etc/supervisor/supervisord.conf \\\n && /usr/bin/easy_install supervisor-stdout \\\n && mkdir -p /var/log/supervisor \\\n && mkdir -p /var/run/supervisor \\\n && chmod 700 /etc/supervisor/supervisord.conf \\\n && mkdir -p /root/.ssh \\\n && mv /etc/ssh_config /root/.ssh/config \\\n && chmod 700 /root/.ssh/config \\\n && crontab /etc/wordpress.cron \\\n && touch /var/log/certs.log \\\n && touch /var/log/db-backup.log \\\n && touch /var/log/wp-cron.log \\\n && mv /etc/02periodic /etc/apt/apt.conf.d/02periodic \\\n && mv /etc/50unattended-upgrades /etc/apt/apt.conf.d/50unattended-upgrades \\\n && mv /etc/apt-preferences /etc/apt/preferences.d/my_preferences \\\n && touch /var/log/auth.log \\\n && cp /etc/wordpress.conf /etc/fail2ban/jail.d/wordpress.conf \\\n && cp /etc/nginx-forbidden.conf /etc/fail2ban/filter.d/nginx-forbidden.conf \\\n && cp /etc/nginx-noproxy.conf /etc/fail2ban/filter.d/nginx-noproxy.conf \\\n && mkdir -p /var/run/fail2ban \\\n && chmod 700 /bootstrap_container \\\n && chmod 700 /install_wordpress \\\n && chmod 700 /setup_web_cert\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"Wordpress (Nginx/php-fpm) Docker Container\" \\\n      org.label-schema.description=\"Wordpress container running PHP $PHP_VERSION served by Nginx/php-fpm with caching, TLS encryption, HTTP/2\" \\\n      org.label-schema.url=\"https://github.com/rija/docker-nginx-fpm-caches-wordpress\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/rija/docker-nginx-fpm-caches-wordpress\" \\\n      org.label-schema.vendor=\"Rija Menage\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM bitnami/minideb:jessie\nMAINTAINER Rija Menage <rija+dockerfiles@cinecinetique.com>\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nENTRYPOINT [\"/usr/bin/supervisord\"]\nCMD [\"-c\", \"/etc/supervisor/supervisord.conf\"]\n# Â Enabling https download of packages\nRUN install_packages apt-transport-https ca-certificates \\\n && install_packages procps curl git iproute2 cron supervisor unattended-upgrades fail2ban mysql-client ufw rsyslog logrotate\nENV GOSU_VERSION=\"1.7\"\nENV NGINX_VERSION=\"1.13.0\"\nENV PHP_VERSION=\"7.1\"\n#  php installation\nRUN curl -o /etc/apt/trusted.gpg.d/php.gpg -fsSL https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ $( lsb_release -sc ;) main\" | tee /etc/apt/sources.list.d/php.list \\\n && install_packages php$PHP_VERSION php$PHP_VERSION-fpm php$PHP_VERSION-cli php$PHP_VERSION-mysql php$PHP_VERSION-gd php$PHP_VERSION-intl php$PHP_VERSION-imagick php$PHP_VERSION-imap php$PHP_VERSION-mcrypt php$PHP_VERSION-pspell php$PHP_VERSION-recode php$PHP_VERSION-tidy php$PHP_VERSION-xml php$PHP_VERSION-json php$PHP_VERSION-opcache php$PHP_VERSION-mbstring\n#  Download Nginx and Ngx cache purge source code\nRUN install_packages build-essential zlib1g-dev libpcre3-dev libssl-dev libgeoip-dev nginx-common \\\n && GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && cd /tmp \\\n && curl -O -fsSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \\\n && curl -O -fsSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify nginx-$NGINX_VERSION.tar.gz.asc nginx-$NGINX_VERSION.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx-$NGINX_VERSION.tar.gz.asc \\\n && tar xzvf nginx-$NGINX_VERSION.tar.gz \\\n && curl -o ngx_cache_purge-2.3.tar.gz -fsSL https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.tar.gz \\\n && tar xzvf ngx_cache_purge-2.3.tar.gz \\\n && cd /tmp/nginx-$NGINX_VERSION \\\n && ./configure --prefix=/usr/share/nginx --with-cc-opt='-g -O2 -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now' --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --with-pcre-jit --with-ipv6 --with-http_ssl_module --with-http_realip_module --with-http_auth_request_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_v2_module --with-stream --with-stream_ssl_module --with-threads --add-module=/tmp/ngx_cache_purge-2.3 \\\n && make \\\n && make install \\\n && ln -fs /usr/share/nginx/sbin/nginx /usr/sbin/nginx \\\n && rm -r /tmp/nginx-$NGINX_VERSION \\\n && rm -r /tmp/ngx_cache_purge-2.3 \\\n && adduser --system --no-create-home --shell /bin/false --group --disabled-login www-front \\\n && openssl dhparam -out /etc/nginx/dhparam.pem 2048 \\\n && dpkg --remove build-essential zlib1g-dev libpcre3-dev libssl-dev libgeoip-dev \\\n && echo \"deb http://ftp.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/php.list \\\n && apt-get update \\\n && apt-get -t jessie-backports install -y certbot \\\n && mkdir -p /tmp/le \\\n && rm -rf /var/lib/apt/lists/* \\\n && GPG_KEYS=B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -o /usr/local/bin/gosu -fsSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && curl -o /usr/local/bin/gosu.asc -fsSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#  copy nginx config\nCOPY nginx-configs/* /etc/nginx/\nCOPY nginx-configs/sites-available/nginx-site.conf /etc/nginx/sites-available/default\n#  copy  configs (supervisord,  ssh config,  wordpress config sample and scheduling configs)\nCOPY misc-configs/* schedulers-configs/* /etc/\n#  copy bootstrapping scripts\nCOPY scripts/* /\n#  copy web site content into the container image\nCOPY website/wordpress /usr/share/nginx/wordpress/\nCOPY website/*.* /usr/share/nginx/\n#  php-fpm config: Opcode cache config\nRUN sed -i -e\"s/^;opcache.enable=0/opcache.enable=1/\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e\"s/^;opcache.max_accelerated_files=2000/opcache.max_accelerated_files=4000/\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/expose_php = On/expose_php = Off/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/;session.cookie_secure\\s*=\\s*/session.cookie_secure = True/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/session.cookie_httponly\\s*=\\s*/session.cookie_httponly = True/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/$PHP_VERSION/fpm/php-fpm.conf \\\n && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && sed -i -e \"s/listen\\s*=\\s*\\/run\\/php\\/php$PHP_VERSION-fpm.sock/listen = 127.0.0.1:9000/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && sed -i -e \"s/;listen.allowed_clients\\s*=\\s*127.0.0.1/listen.allowed_clients = 127.0.0.1/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && sed -i -e \"s/;access.log\\s*=\\s*log\\/$pool.access.log/access.log = \\/var\\/log\\/$pool.access.log/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && mkdir -p /var/run/php \\\n && chown www-data:www-data /var/run/php \\\n && touch /run/php/php$PHP_VERSION-fpm.pid \\\n && chown www-data:www-data /run/php/php$PHP_VERSION-fpm.pid \\\n && touch /var/log/php$PHP_VERSION-fpm.log \\\n && chown www-data:www-data /var/log/php$PHP_VERSION-fpm.log \\\n && mkdir -p /var/log/nginx \\\n && chown -R www-front:www-front /var/log/nginx \\\n && touch /var/log/nginx/error.log \\\n && chown www-front:www-front /var/log/nginx/error.log \\\n && touch /var/log/nginx/access.log \\\n && chown www-front:www-front /var/log/nginx/access.log \\\n && mv /etc/supervisord.conf /etc/supervisor/supervisord.conf \\\n && /usr/bin/easy_install supervisor-stdout \\\n && mkdir -p /var/log/supervisor \\\n && mkdir -p /var/run/supervisor \\\n && chmod 700 /etc/supervisor/supervisord.conf \\\n && mkdir -p /root/.ssh \\\n && mv /etc/ssh_config /root/.ssh/config \\\n && chmod 700 /root/.ssh/config \\\n && crontab /etc/wordpress.cron \\\n && touch /var/log/certs.log \\\n && touch /var/log/db-backup.log \\\n && touch /var/log/wp-cron.log \\\n && mv /etc/02periodic /etc/apt/apt.conf.d/02periodic \\\n && mv /etc/50unattended-upgrades /etc/apt/apt.conf.d/50unattended-upgrades \\\n && mv /etc/apt-preferences /etc/apt/preferences.d/my_preferences \\\n && touch /var/log/auth.log \\\n && cp /etc/wordpress.conf /etc/fail2ban/jail.d/wordpress.conf \\\n && cp /etc/nginx-forbidden.conf /etc/fail2ban/filter.d/nginx-forbidden.conf \\\n && cp /etc/nginx-noproxy.conf /etc/fail2ban/filter.d/nginx-noproxy.conf \\\n && mkdir -p /var/run/fail2ban \\\n && chmod 700 /bootstrap_container \\\n && chmod 700 /install_wordpress \\\n && chmod 700 /setup_web_cert\n#  Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"Wordpress (Nginx/php-fpm) Docker Container\" \\\n      org.label-schema.description=\"Wordpress container running PHP $PHP_VERSION served by Nginx/php-fpm with caching, TLS encryption, HTTP/2\" \\\n      org.label-schema.url=\"https://github.com/rija/docker-nginx-fpm-caches-wordpress\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/rija/docker-nginx-fpm-caches-wordpress\" \\\n      org.label-schema.vendor=\"Rija Menage\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\n","injectedSmells":[],"originalDockerfileHash":"3ff43820201c2beac0266c1fe4c4d05e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM bitnami/minideb:jessie\nMAINTAINER Rija Menage <rija+dockerfiles@cinecinetique.com>\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nENTRYPOINT [\"/usr/bin/supervisord\"]\nCMD [\"-c\", \"/etc/supervisor/supervisord.conf\"]\n#  Â Enabling https download of packages\nRUN install_packages apt-transport-https ca-certificates \\\n && install_packages procps curl git iproute2 cron supervisor unattended-upgrades fail2ban mysql-client ufw rsyslog logrotate\nENV GOSU_VERSION=\"1.7\"\nENV NGINX_VERSION=\"1.13.0\"\nENV PHP_VERSION=\"7.1\"\n#   php installation\nRUN curl -o /etc/apt/trusted.gpg.d/php.gpg -fsSL https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ $( lsb_release -sc ;) main\" | tee /etc/apt/sources.list.d/php.list \\\n && install_packages php$PHP_VERSION php$PHP_VERSION-fpm php$PHP_VERSION-cli php$PHP_VERSION-mysql php$PHP_VERSION-gd php$PHP_VERSION-intl php$PHP_VERSION-imagick php$PHP_VERSION-imap php$PHP_VERSION-mcrypt php$PHP_VERSION-pspell php$PHP_VERSION-recode php$PHP_VERSION-tidy php$PHP_VERSION-xml php$PHP_VERSION-json php$PHP_VERSION-opcache php$PHP_VERSION-mbstring\n#   Download Nginx and Ngx cache purge source code\nRUN install_packages build-essential zlib1g-dev libpcre3-dev libssl-dev libgeoip-dev nginx-common \\\n && GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n && cd /tmp \\\n && curl -O -fsSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \\\n && curl -O -fsSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify nginx-$NGINX_VERSION.tar.gz.asc nginx-$NGINX_VERSION.tar.gz \\\n && rm -r \"$GNUPGHOME\" nginx-$NGINX_VERSION.tar.gz.asc \\\n && tar xzvf nginx-$NGINX_VERSION.tar.gz \\\n && curl -o ngx_cache_purge-2.3.tar.gz -fsSL https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.tar.gz \\\n && tar xzvf ngx_cache_purge-2.3.tar.gz \\\n && cd /tmp/nginx-$NGINX_VERSION \\\n && ./configure --prefix=/usr/share/nginx --with-cc-opt='-g -O2 -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now' --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --with-pcre-jit --with-ipv6 --with-http_ssl_module --with-http_realip_module --with-http_auth_request_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_v2_module --with-stream --with-stream_ssl_module --with-threads --add-module=/tmp/ngx_cache_purge-2.3 \\\n && make \\\n && make install \\\n && ln -fs /usr/share/nginx/sbin/nginx /usr/sbin/nginx \\\n && rm -r /tmp/nginx-$NGINX_VERSION \\\n && rm -r /tmp/ngx_cache_purge-2.3 \\\n && adduser --system --no-create-home --shell /bin/false --group --disabled-login www-front \\\n && openssl dhparam -out /etc/nginx/dhparam.pem 2048 \\\n && dpkg --remove build-essential zlib1g-dev libpcre3-dev libssl-dev libgeoip-dev \\\n && echo \"deb http://ftp.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/php.list \\\n && apt-get update \\\n && apt-get -t jessie-backports install -y certbot \\\n && mkdir -p /tmp/le \\\n && rm -rf /var/lib/apt/lists/* \\\n && GPG_KEYS=B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -o /usr/local/bin/gosu -fsSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && curl -o /usr/local/bin/gosu.asc -fsSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   copy nginx config\nCOPY nginx-configs/* /etc/nginx/\nCOPY nginx-configs/sites-available/nginx-site.conf /etc/nginx/sites-available/default\n#   copy  configs (supervisord,  ssh config,  wordpress config sample and scheduling configs)\nCOPY misc-configs/* schedulers-configs/* /etc/\n#   copy bootstrapping scripts\nCOPY scripts/* /\n#   copy web site content into the container image\nCOPY website/wordpress /usr/share/nginx/wordpress/\nCOPY website/*.* /usr/share/nginx/\n#   php-fpm config: Opcode cache config\nRUN sed -i -e\"s/^;opcache.enable=0/opcache.enable=1/\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e\"s/^;opcache.max_accelerated_files=2000/opcache.max_accelerated_files=4000/\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/expose_php = On/expose_php = Off/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/;session.cookie_secure\\s*=\\s*/session.cookie_secure = True/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/session.cookie_httponly\\s*=\\s*/session.cookie_httponly = True/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php/$PHP_VERSION/fpm/php.ini \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/$PHP_VERSION/fpm/php-fpm.conf \\\n && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && sed -i -e \"s/listen\\s*=\\s*\\/run\\/php\\/php$PHP_VERSION-fpm.sock/listen = 127.0.0.1:9000/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && sed -i -e \"s/;listen.allowed_clients\\s*=\\s*127.0.0.1/listen.allowed_clients = 127.0.0.1/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && sed -i -e \"s/;access.log\\s*=\\s*log\\/$pool.access.log/access.log = \\/var\\/log\\/$pool.access.log/g\" /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n && mkdir -p /var/run/php \\\n && chown www-data:www-data /var/run/php \\\n && touch /run/php/php$PHP_VERSION-fpm.pid \\\n && chown www-data:www-data /run/php/php$PHP_VERSION-fpm.pid \\\n && touch /var/log/php$PHP_VERSION-fpm.log \\\n && chown www-data:www-data /var/log/php$PHP_VERSION-fpm.log \\\n && mkdir -p /var/log/nginx \\\n && chown -R www-front:www-front /var/log/nginx \\\n && touch /var/log/nginx/error.log \\\n && chown www-front:www-front /var/log/nginx/error.log \\\n && touch /var/log/nginx/access.log \\\n && chown www-front:www-front /var/log/nginx/access.log \\\n && mv /etc/supervisord.conf /etc/supervisor/supervisord.conf \\\n && /usr/bin/easy_install supervisor-stdout \\\n && mkdir -p /var/log/supervisor \\\n && mkdir -p /var/run/supervisor \\\n && chmod 700 /etc/supervisor/supervisord.conf \\\n && mkdir -p /root/.ssh \\\n && mv /etc/ssh_config /root/.ssh/config \\\n && chmod 700 /root/.ssh/config \\\n && crontab /etc/wordpress.cron \\\n && touch /var/log/certs.log \\\n && touch /var/log/db-backup.log \\\n && touch /var/log/wp-cron.log \\\n && mv /etc/02periodic /etc/apt/apt.conf.d/02periodic \\\n && mv /etc/50unattended-upgrades /etc/apt/apt.conf.d/50unattended-upgrades \\\n && mv /etc/apt-preferences /etc/apt/preferences.d/my_preferences \\\n && touch /var/log/auth.log \\\n && cp /etc/wordpress.conf /etc/fail2ban/jail.d/wordpress.conf \\\n && cp /etc/nginx-forbidden.conf /etc/fail2ban/filter.d/nginx-forbidden.conf \\\n && cp /etc/nginx-noproxy.conf /etc/fail2ban/filter.d/nginx-noproxy.conf \\\n && mkdir -p /var/run/fail2ban \\\n && chmod 700 /bootstrap_container \\\n && chmod 700 /install_wordpress \\\n && chmod 700 /setup_web_cert\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"Wordpress (Nginx/php-fpm) Docker Container\" \\\n      org.label-schema.description=\"Wordpress container running PHP $PHP_VERSION served by Nginx/php-fpm with caching, TLS encryption, HTTP/2\" \\\n      org.label-schema.url=\"https://github.com/rija/docker-nginx-fpm-caches-wordpress\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/rija/docker-nginx-fpm-caches-wordpress\" \\\n      org.label-schema.vendor=\"Rija Menage\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\n","originalDockerfileUglifiedHash":"62338a9b168f4a874ad1f4ad5c2a7903","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ddd52485610af5119ff9c45cb15fa1f4ad51ed72.dockerfile"}