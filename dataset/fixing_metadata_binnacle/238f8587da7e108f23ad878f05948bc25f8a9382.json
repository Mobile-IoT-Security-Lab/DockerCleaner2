{"seed":3310883806,"processedDockerfileHash":"f520b29c9930031f9e8fe7e9fb8e12b2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   -*-dockerfile-*-\nFROM phusion/baseimage:latest@sha256:29479c37fcb28089eddd6619deed43bcdbcccf2185369e0199cc51a5ec78991b\nLABEL maintainer=\"Natan Sągol <m@merlinnot.com>\"\n#   Use bash\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#   Update image\nRUN : \\\n && apt-get -qq upgrade -y -o Dpkg::Options::=\"--force-confold\"\n#   Update locales\nUSER root\nRUN (apt-get update ;apt-get install --no-install-recommends locales=2.37-0ubuntu2 -y )\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"C.UTF-8\"\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\n#   Add postgresql sources\nUSER root\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.21.3-1ubuntu1 -y )\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt xenial-pgdg main\" >> /etc/apt/sources.list \\\n && wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -\nRUN :\n#   Set build variables\nARG PGSQL_VERSION=9.6\nARG POSTGIS_VERSION=2.4\n#   Install build dependencies\nUSER root\nRUN (apt-get update ;apt-get install --no-install-recommends apache2=2.4.55-1ubuntu2 build-essential=12.9ubuntu3 ca-certificates=20230311 cmake=3.25.1-1 curl=7.88.1-7ubuntu1 g++=4:12.2.0-3ubuntu1 git=1:2.39.2-1ubuntu1 libapache2-mod-php=2:8.1+92ubuntu1 libboost-dev=1.74.0.3ubuntu7 libboost-filesystem-dev=1.74.0.3ubuntu7 libboost-python-dev=1.74.0.3ubuntu7 libboost-system-dev=1.74.0.3ubuntu7 libbz2-dev=1.0.8-5build1 libexpat1-dev=2.5.0-1 libgeos-dev=3.11.1-1 libgeos++-dev=3.11.1-1 libpq-dev=15.2-1 libproj-dev=9.1.1-1build1 libxml2-dev=2.9.14+dfsg-1.1build2 openssl=3.0.8-1ubuntu1 osmosis=0.48.3-2 php=2:8.1+92ubuntu1 php-db=1.11.0-0.2 php-intl=2:8.1+92ubuntu1 php-pear=1:1.10.13+submodules+notgz+2022032202-2 php-pgsql=2:8.1+92ubuntu1 python python-pip python-setuptools sudo=1.9.13p1-1ubuntu2 zlib1g-dev=1:1.2.13.dfsg-1ubuntu4 postgresql-${PGSQL_VERSION}-postgis-${POSTGIS_VERSION} postgresql-${PGSQL_VERSION}-postgis-scripts postgresql-contrib-${PGSQL_VERSION} postgresql-server-dev-${PGSQL_VERSION} -y )\nRUN pip install pip==23.1 --upgrade\nRUN pip install osmium==3.6.0\n#   Create nominatim user account\nUSER root\nRUN useradd -d /srv/nominatim -s /bin/bash -m nominatim\nENV USERNAME=\"nominatim\"\nENV USERHOME=\"/srv/nominatim\"\nRUN chmod a+x ${USERHOME}\n#   Install Nominatim\nUSER nominatim\nARG REPLICATION_URL=https://planet.osm.org/replication/hour/\nWORKDIR /srv/nominatim\nRUN git clone --recursive git://github.com/openstreetmap/Nominatim.git\nRUN echo $'<?php\\n @define('CONST_Postgresql_Version', '${PGSQL_VERSION}'); \\n @define('CONST_Postgis_Version', '${POSTGIS_VERSION}'); \\n @define('CONST_Osm2pgsql_Flatnode_File', '/srv/nominatim/flatnode'); \\n @define('CONST_Pyosmium_Binary', '/usr/local/bin/pyosmium-get-changes'); \\n @define('CONST_Website_BaseURL', '/nominatim/'); \\n @define('CONST_Replication_Url', '${REPLICATION_URL}'); \\n @define('CONST_Replication_MaxInterval', '86400'); \\n @define('CONST_Replication_Update_Interval', '86400'); \\n @define('CONST_Replication_Recheck_Interval', '900'); \\n' > ./Nominatim/settings/local.php\nRUN wget -O Nominatim/data/country_osm_grid.sql.gz http://www.nominatim.org/data/country_grid.sql.gz\nRUN mkdir ${USERHOME}/Nominatim/build \\\n && cd ${USERHOME}/Nominatim/build \\\n && cmake ${USERHOME}/Nominatim \\\n && make\n#   Download data for initial import\nUSER nominatim\nARG PBF_URL=https://planet.osm.org/pbf/planet-latest.osm.pbf\nRUN curl -L ${PBF_URL} --create-dirs -o /srv/nominatim/src/data.osm.pbf\n#   Filter administrative boundaries\nUSER nominatim\nARG BUILD_THREADS=16\nARG IMPORT_ADMINISTRATIVE=false\nCOPY scripts/filter_administrative.sh /srv/nominatim/scripts/filter_administrative.sh\nRUN /srv/nominatim/scripts/filter_administrative.sh\n#   Add postgresql users\nUSER root\nRUN service postgresql start \\\n && sudo -u postgres createuser -s nominatim \\\n && sudo -u postgres createuser www-data \\\n && service postgresql stop\n#   Tune postgresql configuration for import\nUSER root\nARG BUILD_MEMORY=32GB\nENV PGCONFIG_URL=\"https://api.pgconfig.org/v1/tuning/get-config\"\nRUN IMPORT_CONFIG_URL=\"${PGCONFIG_URL}? format=alter_system& pg_version=${PGSQL_VERSION}& total_ram=${BUILD_MEMORY}& max_connections=$((8 * ${BUILD_THREADS} + 32))& environment_name=DW& include_pgbadger=false\" \\\n && IMPORT_CONFIG_URL=${IMPORT_CONFIG_URL// /} \\\n && service postgresql start \\\n && (curl -sSL \"${IMPORT_CONFIG_URL}\" ;echo $'ALTER SYSTEM SET fsync TO \\'off\\';\\n' ;echo $'ALTER SYSTEM SET full_page_writes TO \\'off\\';\\n' ;echo $'ALTER SYSTEM SET logging_collector TO \\'off\\';\\n' ) | sudo -u postgres psql -e \\\n && service postgresql stop\n#   Initial import\nUSER root\nARG OSM2PGSQL_CACHE=24000\nRUN service postgresql start \\\n && sudo -u nominatim ${USERHOME}/Nominatim/build/utils/setup.php --osm-file /srv/nominatim/src/data.osm.pbf --all --threads ${BUILD_THREADS} --osm2pgsql-cache ${OSM2PGSQL_CACHE} \\\n && service postgresql stop\n#   Use safe postgresql configuration\nUSER root\nARG RUNTIME_THREADS=2\nARG RUNTIME_MEMORY=8GB\nRUN IMPORT_CONFIG_URL=\"${PGCONFIG_URL}? format=alter_system& pg_version=${PGSQL_VERSION}& total_ram=${RUNTIME_MEMORY}& max_connections=$((8 * ${RUNTIME_THREADS} + 32))& environment_name=WEB& include_pgbadger=true\" \\\n && IMPORT_CONFIG_URL=${IMPORT_CONFIG_URL// /} \\\n && service postgresql start \\\n && (curl -sSL \"${IMPORT_CONFIG_URL}\" ;echo $'ALTER SYSTEM SET fsync TO \\'on\\';\\n' ;echo $'ALTER SYSTEM SET full_page_writes TO \\'on\\';\\n' ;echo $'ALTER SYSTEM SET logging_collector TO \\'on\\';\\n' ) | sudo -u postgres psql -e \\\n && service postgresql stop\n#   Configure Apache\nUSER root\nCOPY nominatim.conf /etc/apache2/conf-available/nominatim.conf\nRUN a2enconf nominatim\n#   Clean up\nUSER root\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Expose ports\nEXPOSE 8080/tcp\n#   Init scripts\nUSER root\nENV KILL_PROCESS_TIMEOUT=\"300\"\nENV KILL_ALL_PROCESSES_TIMEOUT=\"300\"\nRUN mkdir -p /etc/my_init.d\nCOPY scripts/start_postgresql.sh /etc/my_init.d/00-postgresql.sh\nRUN chmod +x /etc/my_init.d/00-postgresql.sh\nCOPY scripts/start_apache2.sh /etc/my_init.d/00-apache2.sh\nRUN chmod +x /etc/my_init.d/00-apache2.sh\nCMD [\"/sbin/my_init\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  -*-dockerfile-*-\nFROM phusion/baseimage:latest@sha256:29479c37fcb28089eddd6619deed43bcdbcccf2185369e0199cc51a5ec78991b\nLABEL maintainer=\"Natan Sągol <m@merlinnot.com>\"\n#  Use bash\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#  Update image\nRUN apt-get update -qq \\\n && apt-get -qq upgrade -y -o Dpkg::Options::=\"--force-confold\"\n#  Update locales\nUSER root\nRUN apt-get install --no-install-recommends locales -y\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"C.UTF-8\"\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\n#  Add postgresql sources\nUSER root\nRUN apt-get install --no-install-recommends wget -y\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt xenial-pgdg main\" >> /etc/apt/sources.list \\\n && wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -\nRUN apt-get update -qq\n#  Set build variables\nARG PGSQL_VERSION=9.6\nARG POSTGIS_VERSION=2.4\n#  Install build dependencies\nUSER root\nRUN apt-get install --no-install-recommends apache2 build-essential ca-certificates cmake curl g++ git libapache2-mod-php libboost-dev libboost-filesystem-dev libboost-python-dev libboost-system-dev libbz2-dev libexpat1-dev libgeos-dev libgeos++-dev libpq-dev libproj-dev libxml2-dev openssl osmosis php php-db php-intl php-pear php-pgsql python python-pip python-setuptools sudo zlib1g-dev postgresql-${PGSQL_VERSION}-postgis-${POSTGIS_VERSION} postgresql-${PGSQL_VERSION}-postgis-scripts postgresql-contrib-${PGSQL_VERSION} postgresql-server-dev-${PGSQL_VERSION} -y\nRUN pip install pip --upgrade\nRUN pip install osmium\n#  Create nominatim user account\nUSER root\nRUN useradd -d /srv/nominatim -s /bin/bash -m nominatim\nENV USERNAME=\"nominatim\"\nENV USERHOME=\"/srv/nominatim\"\nRUN chmod a+x ${USERHOME}\n#  Install Nominatim\nUSER nominatim\nARG REPLICATION_URL=https://planet.osm.org/replication/hour/\nWORKDIR /srv/nominatim\nRUN git clone --recursive git://github.com/openstreetmap/Nominatim.git\nRUN echo $'<?php\\n @define('CONST_Postgresql_Version', '${PGSQL_VERSION}'); \\n @define('CONST_Postgis_Version', '${POSTGIS_VERSION}'); \\n @define('CONST_Osm2pgsql_Flatnode_File', '/srv/nominatim/flatnode'); \\n @define('CONST_Pyosmium_Binary', '/usr/local/bin/pyosmium-get-changes'); \\n @define('CONST_Website_BaseURL', '/nominatim/'); \\n @define('CONST_Replication_Url', '${REPLICATION_URL}'); \\n @define('CONST_Replication_MaxInterval', '86400'); \\n @define('CONST_Replication_Update_Interval', '86400'); \\n @define('CONST_Replication_Recheck_Interval', '900'); \\n' > ./Nominatim/settings/local.php\nRUN wget -O Nominatim/data/country_osm_grid.sql.gz http://www.nominatim.org/data/country_grid.sql.gz\nRUN mkdir ${USERHOME}/Nominatim/build \\\n && cd ${USERHOME}/Nominatim/build \\\n && cmake ${USERHOME}/Nominatim \\\n && make\n#  Download data for initial import\nUSER nominatim\nARG PBF_URL=https://planet.osm.org/pbf/planet-latest.osm.pbf\nRUN curl -L ${PBF_URL} --create-dirs -o /srv/nominatim/src/data.osm.pbf\n#  Filter administrative boundaries\nUSER nominatim\nARG BUILD_THREADS=16\nARG IMPORT_ADMINISTRATIVE=false\nCOPY scripts/filter_administrative.sh /srv/nominatim/scripts/filter_administrative.sh\nRUN /srv/nominatim/scripts/filter_administrative.sh\n#  Add postgresql users\nUSER root\nRUN service postgresql start \\\n && sudo -u postgres createuser -s nominatim \\\n && sudo -u postgres createuser www-data \\\n && service postgresql stop\n#  Tune postgresql configuration for import\nUSER root\nARG BUILD_MEMORY=32GB\nENV PGCONFIG_URL=\"https://api.pgconfig.org/v1/tuning/get-config\"\nRUN IMPORT_CONFIG_URL=\"${PGCONFIG_URL}? format=alter_system& pg_version=${PGSQL_VERSION}& total_ram=${BUILD_MEMORY}& max_connections=$((8 * ${BUILD_THREADS} + 32))& environment_name=DW& include_pgbadger=false\" \\\n && IMPORT_CONFIG_URL=${IMPORT_CONFIG_URL// /} \\\n && service postgresql start \\\n && (curl -sSL \"${IMPORT_CONFIG_URL}\" ;echo $'ALTER SYSTEM SET fsync TO \\'off\\';\\n' ;echo $'ALTER SYSTEM SET full_page_writes TO \\'off\\';\\n' ;echo $'ALTER SYSTEM SET logging_collector TO \\'off\\';\\n' ) | sudo -u postgres psql -e \\\n && service postgresql stop\n#  Initial import\nUSER root\nARG OSM2PGSQL_CACHE=24000\nRUN service postgresql start \\\n && sudo -u nominatim ${USERHOME}/Nominatim/build/utils/setup.php --osm-file /srv/nominatim/src/data.osm.pbf --all --threads ${BUILD_THREADS} --osm2pgsql-cache ${OSM2PGSQL_CACHE} \\\n && service postgresql stop\n#  Use safe postgresql configuration\nUSER root\nARG RUNTIME_THREADS=2\nARG RUNTIME_MEMORY=8GB\nRUN IMPORT_CONFIG_URL=\"${PGCONFIG_URL}? format=alter_system& pg_version=${PGSQL_VERSION}& total_ram=${RUNTIME_MEMORY}& max_connections=$((8 * ${RUNTIME_THREADS} + 32))& environment_name=WEB& include_pgbadger=true\" \\\n && IMPORT_CONFIG_URL=${IMPORT_CONFIG_URL// /} \\\n && service postgresql start \\\n && (curl -sSL \"${IMPORT_CONFIG_URL}\" ;echo $'ALTER SYSTEM SET fsync TO \\'on\\';\\n' ;echo $'ALTER SYSTEM SET full_page_writes TO \\'on\\';\\n' ;echo $'ALTER SYSTEM SET logging_collector TO \\'on\\';\\n' ) | sudo -u postgres psql -e \\\n && service postgresql stop\n#  Configure Apache\nUSER root\nCOPY nominatim.conf /etc/apache2/conf-available/nominatim.conf\nRUN a2enconf nominatim\n#  Clean up\nUSER root\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Expose ports\nEXPOSE 8080/tcp\n#  Init scripts\nUSER root\nENV KILL_PROCESS_TIMEOUT=\"300\"\nENV KILL_ALL_PROCESSES_TIMEOUT=\"300\"\nRUN mkdir -p /etc/my_init.d\nCOPY scripts/start_postgresql.sh /etc/my_init.d/00-postgresql.sh\nRUN chmod +x /etc/my_init.d/00-postgresql.sh\nCOPY scripts/start_apache2.sh /etc/my_init.d/00-apache2.sh\nRUN chmod +x /etc/my_init.d/00-apache2.sh\nCMD [\"/sbin/my_init\"]\n","injectedSmells":[],"originalDockerfileHash":"61fb7fd0f39ef70e05a70199c55813de","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   -*-dockerfile-*-\nFROM phusion/baseimage:latest@sha256:29479c37fcb28089eddd6619deed43bcdbcccf2185369e0199cc51a5ec78991b\nLABEL maintainer=\"Natan Sągol <m@merlinnot.com>\"\n#   Use bash\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#   Update image\nRUN apt-get update -qq \\\n && apt-get -qq upgrade -y -o Dpkg::Options::=\"--force-confold\"\n#   Update locales\nUSER root\nRUN apt-get install --no-install-recommends locales -y\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"C.UTF-8\"\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\n#   Add postgresql sources\nUSER root\nRUN apt-get install --no-install-recommends wget -y\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt xenial-pgdg main\" >> /etc/apt/sources.list \\\n && wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -\nRUN apt-get update -qq\n#   Set build variables\nARG PGSQL_VERSION=9.6\nARG POSTGIS_VERSION=2.4\n#   Install build dependencies\nUSER root\nRUN apt-get install --no-install-recommends apache2 build-essential ca-certificates cmake curl g++ git libapache2-mod-php libboost-dev libboost-filesystem-dev libboost-python-dev libboost-system-dev libbz2-dev libexpat1-dev libgeos-dev libgeos++-dev libpq-dev libproj-dev libxml2-dev openssl osmosis php php-db php-intl php-pear php-pgsql python python-pip python-setuptools sudo zlib1g-dev postgresql-${PGSQL_VERSION}-postgis-${POSTGIS_VERSION} postgresql-${PGSQL_VERSION}-postgis-scripts postgresql-contrib-${PGSQL_VERSION} postgresql-server-dev-${PGSQL_VERSION} -y\nRUN pip install pip --upgrade\nRUN pip install osmium\n#   Create nominatim user account\nUSER root\nRUN useradd -d /srv/nominatim -s /bin/bash -m nominatim\nENV USERNAME=\"nominatim\"\nENV USERHOME=\"/srv/nominatim\"\nRUN chmod a+x ${USERHOME}\n#   Install Nominatim\nUSER nominatim\nARG REPLICATION_URL=https://planet.osm.org/replication/hour/\nWORKDIR /srv/nominatim\nRUN git clone --recursive git://github.com/openstreetmap/Nominatim.git\nRUN echo $'<?php\\n @define('CONST_Postgresql_Version', '${PGSQL_VERSION}'); \\n @define('CONST_Postgis_Version', '${POSTGIS_VERSION}'); \\n @define('CONST_Osm2pgsql_Flatnode_File', '/srv/nominatim/flatnode'); \\n @define('CONST_Pyosmium_Binary', '/usr/local/bin/pyosmium-get-changes'); \\n @define('CONST_Website_BaseURL', '/nominatim/'); \\n @define('CONST_Replication_Url', '${REPLICATION_URL}'); \\n @define('CONST_Replication_MaxInterval', '86400'); \\n @define('CONST_Replication_Update_Interval', '86400'); \\n @define('CONST_Replication_Recheck_Interval', '900'); \\n' > ./Nominatim/settings/local.php\nRUN wget -O Nominatim/data/country_osm_grid.sql.gz http://www.nominatim.org/data/country_grid.sql.gz\nRUN mkdir ${USERHOME}/Nominatim/build \\\n && cd ${USERHOME}/Nominatim/build \\\n && cmake ${USERHOME}/Nominatim \\\n && make\n#   Download data for initial import\nUSER nominatim\nARG PBF_URL=https://planet.osm.org/pbf/planet-latest.osm.pbf\nRUN curl -L ${PBF_URL} --create-dirs -o /srv/nominatim/src/data.osm.pbf\n#   Filter administrative boundaries\nUSER nominatim\nARG BUILD_THREADS=16\nARG IMPORT_ADMINISTRATIVE=false\nCOPY scripts/filter_administrative.sh /srv/nominatim/scripts/filter_administrative.sh\nRUN /srv/nominatim/scripts/filter_administrative.sh\n#   Add postgresql users\nUSER root\nRUN service postgresql start \\\n && sudo -u postgres createuser -s nominatim \\\n && sudo -u postgres createuser www-data \\\n && service postgresql stop\n#   Tune postgresql configuration for import\nUSER root\nARG BUILD_MEMORY=32GB\nENV PGCONFIG_URL=\"https://api.pgconfig.org/v1/tuning/get-config\"\nRUN IMPORT_CONFIG_URL=\"${PGCONFIG_URL}? format=alter_system& pg_version=${PGSQL_VERSION}& total_ram=${BUILD_MEMORY}& max_connections=$((8 * ${BUILD_THREADS} + 32))& environment_name=DW& include_pgbadger=false\" \\\n && IMPORT_CONFIG_URL=${IMPORT_CONFIG_URL// /} \\\n && service postgresql start \\\n && (curl -sSL \"${IMPORT_CONFIG_URL}\" ;echo $'ALTER SYSTEM SET fsync TO \\'off\\';\\n' ;echo $'ALTER SYSTEM SET full_page_writes TO \\'off\\';\\n' ;echo $'ALTER SYSTEM SET logging_collector TO \\'off\\';\\n' ) | sudo -u postgres psql -e \\\n && service postgresql stop\n#   Initial import\nUSER root\nARG OSM2PGSQL_CACHE=24000\nRUN service postgresql start \\\n && sudo -u nominatim ${USERHOME}/Nominatim/build/utils/setup.php --osm-file /srv/nominatim/src/data.osm.pbf --all --threads ${BUILD_THREADS} --osm2pgsql-cache ${OSM2PGSQL_CACHE} \\\n && service postgresql stop\n#   Use safe postgresql configuration\nUSER root\nARG RUNTIME_THREADS=2\nARG RUNTIME_MEMORY=8GB\nRUN IMPORT_CONFIG_URL=\"${PGCONFIG_URL}? format=alter_system& pg_version=${PGSQL_VERSION}& total_ram=${RUNTIME_MEMORY}& max_connections=$((8 * ${RUNTIME_THREADS} + 32))& environment_name=WEB& include_pgbadger=true\" \\\n && IMPORT_CONFIG_URL=${IMPORT_CONFIG_URL// /} \\\n && service postgresql start \\\n && (curl -sSL \"${IMPORT_CONFIG_URL}\" ;echo $'ALTER SYSTEM SET fsync TO \\'on\\';\\n' ;echo $'ALTER SYSTEM SET full_page_writes TO \\'on\\';\\n' ;echo $'ALTER SYSTEM SET logging_collector TO \\'on\\';\\n' ) | sudo -u postgres psql -e \\\n && service postgresql stop\n#   Configure Apache\nUSER root\nCOPY nominatim.conf /etc/apache2/conf-available/nominatim.conf\nRUN a2enconf nominatim\n#   Clean up\nUSER root\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Expose ports\nEXPOSE 8080/tcp\n#   Init scripts\nUSER root\nENV KILL_PROCESS_TIMEOUT=\"300\"\nENV KILL_ALL_PROCESSES_TIMEOUT=\"300\"\nRUN mkdir -p /etc/my_init.d\nCOPY scripts/start_postgresql.sh /etc/my_init.d/00-postgresql.sh\nRUN chmod +x /etc/my_init.d/00-postgresql.sh\nCOPY scripts/start_apache2.sh /etc/my_init.d/00-apache2.sh\nRUN chmod +x /etc/my_init.d/00-apache2.sh\nCMD [\"/sbin/my_init\"]\n","originalDockerfileUglifiedHash":"dad897e9fcdaebf9c96415adbf69c208","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/238f8587da7e108f23ad878f05948bc25f8a9382.dockerfile"}