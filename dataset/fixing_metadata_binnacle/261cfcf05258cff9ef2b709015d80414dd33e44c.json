{"seed":277203182,"processedDockerfileHash":"03442105c9ff4d3a83e9a8d873ccb9a5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   openhab image\n#\n#   ------------------------------------------------------------------------------\n#                 NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#                         PLEASE DO NOT EDIT IT DIRECTLY.\n#   ------------------------------------------------------------------------------\n#\nFROM multiarch/debian-debootstrap:amd64-stretch\n#   Set download urls\nENV JAVA_URL=\"https://cdn.azul.com/zulu/bin/zulu8.33.0.1-jdk8.0.192-linux_x64.tar.gz\" \\\n    OPENHAB_URL=\"https://bintray.com/artifact/download/openhab/bin/distribution-1.8.3-runtime.zip\" \\\n    OPENHAB_VERSION=\"1.8.3\"\n#   Set variables and locales\nENV APPDIR=\"/openhab\" \\\n    CRYPTO_POLICY=\"limited\" \\\n    EXTRA_JAVA_OPTS=\"\" \\\n    KARAF_EXEC=\"exec\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    OPENHAB_HTTP_PORT=\"8080\" \\\n    OPENHAB_HTTPS_PORT=\"8443\"\n#   Set arguments on build\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\n#   Basic build-time metadata as defined at http://label-schema.org\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"EPL-2.0\" \\\n      org.label-schema.name=\"openHAB\" \\\n      org.label-schema.vendor=\"openHAB Foundation e.V.\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.description=\"An open source, technology agnostic home automation platform\" \\\n      org.label-schema.url=\"https://www.openhab.com/\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-type=\"Git\" \\\n      org.label-schema.vcs-url=\"https://github.com/openhab/openhab-docker.git\" \\\n      maintainer=\"openHAB <info@openhabfoundation.org>\"\n#   Install basepackages\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y arping ca-certificates curl fontconfig gosu libpcap-dev locales locales-all netbase unzip wget zip \\\n && chmod u+s /usr/sbin/arping \\\n && ln -s -f /bin/true /usr/bin/chfn \\\n && sed -i 's#stretch#buster#g' /etc/apt/sources.list \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y tini \\\n && sed -i 's#buster#stretch#g' /etc/apt/sources.list \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Install java\nENV JAVA_HOME=\"/usr/lib/java-8\"\nRUN wget -nv -O /tmp/java.tar.gz \"${JAVA_URL}\" \\\n && mkdir \"${JAVA_HOME}\" \\\n && tar --exclude='demo' --exclude='sample' --exclude='src.zip' -xf /tmp/java.tar.gz --strip-components=1 -C \"${JAVA_HOME}\" \\\n && rm /tmp/java.tar.gz \\\n && update-alternatives --install /usr/bin/java java \"${JAVA_HOME}/bin/java\" 50 \\\n && update-alternatives --install /usr/bin/javac javac \"${JAVA_HOME}/bin/javac\" 50\n#   Install openHAB\nRUN wget -nv -O /tmp/openhab.zip \"${OPENHAB_URL}\" \\\n && unzip -q /tmp/openhab.zip -d \"${APPDIR}\" -x \"*.bat\" \\\n && rm /tmp/openhab.zip \\\n && cp -a \"${APPDIR}/configurations\" \"${APPDIR}/configurations.dist\" \\\n && echo 'export TERM=${TERM:=dumb}' | tee -a ~/.bashrc\n#   Expose volume with configuration and userdata dir\nVOLUME ${APPDIR}/configurations ${APPDIR}/addons\n#   Expose HTTP and HTTPS ports\nEXPOSE 8080/tcp 8443/tcp\n#   Set working directory and entrypoint\nWORKDIR ${APPDIR}\nCOPY entrypoint.sh /\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n#   Execute command\nCMD [\"gosu\", \"openhab\", \"tini\", \"-s\", \"./start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  openhab image\n#\n#  ------------------------------------------------------------------------------\n#                NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#                        PLEASE DO NOT EDIT IT DIRECTLY.\n#  ------------------------------------------------------------------------------\n#\nFROM multiarch/debian-debootstrap:amd64-stretch\n#  Set download urls\nENV JAVA_URL=\"https://cdn.azul.com/zulu/bin/zulu8.33.0.1-jdk8.0.192-linux_x64.tar.gz\" \\\n    OPENHAB_URL=\"https://bintray.com/artifact/download/openhab/bin/distribution-1.8.3-runtime.zip\" \\\n    OPENHAB_VERSION=\"1.8.3\"\n#  Set variables and locales\nENV APPDIR=\"/openhab\" \\\n    CRYPTO_POLICY=\"limited\" \\\n    EXTRA_JAVA_OPTS=\"\" \\\n    KARAF_EXEC=\"exec\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    OPENHAB_HTTP_PORT=\"8080\" \\\n    OPENHAB_HTTPS_PORT=\"8443\"\n#  Set arguments on build\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\n#  Basic build-time metadata as defined at http://label-schema.org\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"EPL-2.0\" \\\n      org.label-schema.name=\"openHAB\" \\\n      org.label-schema.vendor=\"openHAB Foundation e.V.\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.description=\"An open source, technology agnostic home automation platform\" \\\n      org.label-schema.url=\"https://www.openhab.com/\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-type=\"Git\" \\\n      org.label-schema.vcs-url=\"https://github.com/openhab/openhab-docker.git\" \\\n      maintainer=\"openHAB <info@openhabfoundation.org>\"\n#  Install basepackages\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y arping ca-certificates curl fontconfig gosu libpcap-dev locales locales-all netbase unzip wget zip \\\n && chmod u+s /usr/sbin/arping \\\n && ln -s -f /bin/true /usr/bin/chfn \\\n && sed -i 's#stretch#buster#g' /etc/apt/sources.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y tini \\\n && sed -i 's#buster#stretch#g' /etc/apt/sources.list \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Install java\nENV JAVA_HOME=\"/usr/lib/java-8\"\nRUN wget -nv -O /tmp/java.tar.gz \"${JAVA_URL}\" \\\n && mkdir \"${JAVA_HOME}\" \\\n && tar --exclude='demo' --exclude='sample' --exclude='src.zip' -xf /tmp/java.tar.gz --strip-components=1 -C \"${JAVA_HOME}\" \\\n && rm /tmp/java.tar.gz \\\n && update-alternatives --install /usr/bin/java java \"${JAVA_HOME}/bin/java\" 50 \\\n && update-alternatives --install /usr/bin/javac javac \"${JAVA_HOME}/bin/javac\" 50\n#  Install openHAB\nRUN wget -nv -O /tmp/openhab.zip \"${OPENHAB_URL}\" \\\n && unzip -q /tmp/openhab.zip -d \"${APPDIR}\" -x \"*.bat\" \\\n && rm /tmp/openhab.zip \\\n && cp -a \"${APPDIR}/configurations\" \"${APPDIR}/configurations.dist\" \\\n && echo 'export TERM=${TERM:=dumb}' | tee -a ~/.bashrc\n#  Expose volume with configuration and userdata dir\nVOLUME ${APPDIR}/configurations ${APPDIR}/addons\n#  Expose HTTP and HTTPS ports\nEXPOSE 8080/tcp 8443/tcp\n#  Set working directory and entrypoint\nWORKDIR ${APPDIR}\nCOPY entrypoint.sh /\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n#  Execute command\nCMD [\"gosu\", \"openhab\", \"tini\", \"-s\", \"./start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"2b912d20b06122953ac3f8d81085c8ee","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   openhab image\n#\n#   ------------------------------------------------------------------------------\n#                 NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#                         PLEASE DO NOT EDIT IT DIRECTLY.\n#   ------------------------------------------------------------------------------\n#\nFROM multiarch/debian-debootstrap:amd64-stretch\n#   Set download urls\nENV JAVA_URL=\"https://cdn.azul.com/zulu/bin/zulu8.33.0.1-jdk8.0.192-linux_x64.tar.gz\" \\\n    OPENHAB_URL=\"https://bintray.com/artifact/download/openhab/bin/distribution-1.8.3-runtime.zip\" \\\n    OPENHAB_VERSION=\"1.8.3\"\n#   Set variables and locales\nENV APPDIR=\"/openhab\" \\\n    CRYPTO_POLICY=\"limited\" \\\n    EXTRA_JAVA_OPTS=\"\" \\\n    KARAF_EXEC=\"exec\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    OPENHAB_HTTP_PORT=\"8080\" \\\n    OPENHAB_HTTPS_PORT=\"8443\"\n#   Set arguments on build\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\n#   Basic build-time metadata as defined at http://label-schema.org\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"EPL-2.0\" \\\n      org.label-schema.name=\"openHAB\" \\\n      org.label-schema.vendor=\"openHAB Foundation e.V.\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.description=\"An open source, technology agnostic home automation platform\" \\\n      org.label-schema.url=\"https://www.openhab.com/\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-type=\"Git\" \\\n      org.label-schema.vcs-url=\"https://github.com/openhab/openhab-docker.git\" \\\n      maintainer=\"openHAB <info@openhabfoundation.org>\"\n#   Install basepackages\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y arping ca-certificates curl fontconfig gosu libpcap-dev locales locales-all netbase unzip wget zip \\\n && chmod u+s /usr/sbin/arping \\\n && ln -s -f /bin/true /usr/bin/chfn \\\n && sed -i 's#stretch#buster#g' /etc/apt/sources.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y tini \\\n && sed -i 's#buster#stretch#g' /etc/apt/sources.list \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Install java\nENV JAVA_HOME=\"/usr/lib/java-8\"\nRUN wget -nv -O /tmp/java.tar.gz \"${JAVA_URL}\" \\\n && mkdir \"${JAVA_HOME}\" \\\n && tar --exclude='demo' --exclude='sample' --exclude='src.zip' -xf /tmp/java.tar.gz --strip-components=1 -C \"${JAVA_HOME}\" \\\n && rm /tmp/java.tar.gz \\\n && update-alternatives --install /usr/bin/java java \"${JAVA_HOME}/bin/java\" 50 \\\n && update-alternatives --install /usr/bin/javac javac \"${JAVA_HOME}/bin/javac\" 50\n#   Install openHAB\nRUN wget -nv -O /tmp/openhab.zip \"${OPENHAB_URL}\" \\\n && unzip -q /tmp/openhab.zip -d \"${APPDIR}\" -x \"*.bat\" \\\n && rm /tmp/openhab.zip \\\n && cp -a \"${APPDIR}/configurations\" \"${APPDIR}/configurations.dist\" \\\n && echo 'export TERM=${TERM:=dumb}' | tee -a ~/.bashrc\n#   Expose volume with configuration and userdata dir\nVOLUME ${APPDIR}/configurations ${APPDIR}/addons\n#   Expose HTTP and HTTPS ports\nEXPOSE 8080/tcp 8443/tcp\n#   Set working directory and entrypoint\nWORKDIR ${APPDIR}\nCOPY entrypoint.sh /\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n#   Execute command\nCMD [\"gosu\", \"openhab\", \"tini\", \"-s\", \"./start.sh\"]\n","originalDockerfileUglifiedHash":"df4e4e12060e5a681571a322f979b424","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/261cfcf05258cff9ef2b709015d80414dd33e44c.dockerfile"}