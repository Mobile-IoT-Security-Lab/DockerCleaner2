{"seed":2379144776,"processedDockerfileHash":"195f7a4e1d24a7a6466180c7777ad7ec","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM tatsushid/tinycore:7.2-x86_64\n#   Instructions are run with 'tc' user\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\"\nRUN tce-load -wic gnupg curl \\\n && rm -rf /tmp/tce/optional/*\n#   gpg: key 18ADD4FF: public key \"Benjamin Peterson <benjamin@python.org>\" imported\nRUN gpg2 --keyserver pool.sks-keyservers.net --recv-keys C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\nENV PYTHON_VERSION=\"2.7.13\"\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN tce-load -wic bzip2-dev flex file gcc make linux-4.2.1_api_headers glibc_add_lib glibc_base-dev openssl-dev gdbm-dev ncurses-dev readline-dev sqlite3-dev zlib_base-dev tk-dev libX11-dev libXss xorg-proto \\\n && cd /tmp \\\n && curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n && curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n && gpg2 --verify python.tar.xz.asc \\\n && rm python.tar.xz.asc \\\n && tar -xJf python.tar.xz \\\n && rm python.tar.xz \\\n && cd \"/tmp/Python-$PYTHON_VERSION\" \\\n && ./configure --enable-shared --with-ensurepip=install \\\n && make \\\n && mkdir tmp_install \\\n && make install DESTDIR=tmp_install \\\n && for F in `find tmp_install | xargs file | grep \"executable\" | grep ELF | grep \"not stripped\" | cut -f 1 -d : `; do [ -f $F ] \\\n && strip --strip-unneeded $F ; done \\\n && for F in `find tmp_install | xargs file | grep \"shared object\" | grep ELF | grep \"not stripped\" | cut -f 1 -d : `; do [ -f $F ] \\\n && if [ ! -w $F ] ; then chmod u+w $F \\\n && strip -g $F \\\n && chmod u-w $F ; else strip -g $F ; fi ; done \\\n && for F in `find tmp_install | xargs file | grep \"current ar archive\" | cut -f 1 -d : `; do [ -f $F ] \\\n && strip -g $F ; done \\\n && find tmp_install\n#   Instructions after here are run with 'root' user\nUSER root\n#   install \"virtualenv\", since the vast majority of users of this image will want it\nRUN pip install virtualenv==20.21.0 --no-cache-dir\nCMD [\"python2\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM tatsushid/tinycore:7.2-x86_64\n#  Instructions are run with 'tc' user\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\"\nRUN tce-load -wic gnupg curl \\\n && rm -rf /tmp/tce/optional/*\n#  gpg: key 18ADD4FF: public key \"Benjamin Peterson <benjamin@python.org>\" imported\nRUN gpg2 --keyserver pool.sks-keyservers.net --recv-keys C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\nENV PYTHON_VERSION=\"2.7.13\"\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN tce-load -wic bzip2-dev flex file gcc make linux-4.2.1_api_headers glibc_add_lib glibc_base-dev openssl-dev gdbm-dev ncurses-dev readline-dev sqlite3-dev zlib_base-dev tk-dev libX11-dev libXss xorg-proto \\\n && cd /tmp \\\n && curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n && curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n && gpg2 --verify python.tar.xz.asc \\\n && rm python.tar.xz.asc \\\n && tar -xJf python.tar.xz \\\n && rm python.tar.xz \\\n && cd \"/tmp/Python-$PYTHON_VERSION\" \\\n && ./configure --enable-shared --with-ensurepip=install \\\n && make \\\n && mkdir tmp_install \\\n && make install DESTDIR=tmp_install \\\n && for F in `find tmp_install | xargs file | grep \"executable\" | grep ELF | grep \"not stripped\" | cut -f 1 -d : `; do [ -f $F ] \\\n && strip --strip-unneeded $F ; done \\\n && for F in `find tmp_install | xargs file | grep \"shared object\" | grep ELF | grep \"not stripped\" | cut -f 1 -d : `; do [ -f $F ] \\\n && if [ ! -w $F ] ; then chmod u+w $F \\\n && strip -g $F \\\n && chmod u-w $F ; else strip -g $F ; fi ; done \\\n && for F in `find tmp_install | xargs file | grep \"current ar archive\" | cut -f 1 -d : `; do [ -f $F ] \\\n && strip -g $F ; done \\\n && find tmp_install ( -type f -a -name '*.pyc' -o -name '*.pyo' ) -exec rm -rf '{}' + \\\n && find tmp_install ( -type d -a -name test -o -name tests ) | xargs rm -rf \\\n && $( cd tmp_install ;sudo cp -R . / ;) \\\n && rm -rf \"/tmp/Python-$PYTHON_VERSION\" \\\n && cd /tmp/tce/optional \\\n && for PKG in `ls *-dev.tcz `; do echo \"Removing $PKG files\" ;for F in `unsquashfs -l $PKG | grep squashfs-root | sed -e 's/squashfs-root//' `; do [ -f $F -o -L $F ] \\\n && sudo rm -f $F ; done ;INSTALLED=$( echo -n $PKG | sed -e s/.tcz// ;) ;sudo rm -f /usr/local/tce.installed/$INSTALLED ; done \\\n && for PKG in binutils.tcz cloog.tcz file.tcz flex.tcz gcc.tcz gcc_libs.tcz linux-4.2.1_api_headers.tcz make.tcz sqlite3-bin.tcz xorg-proto.tcz; do echo \"Removing $PKG files\" ;for F in `unsquashfs -l $PKG | grep squashfs-root | sed -e 's/squashfs-root//' `; do [ -f $F -o -L $F ] \\\n && sudo rm -f $F ; done ;INSTALLED=$( echo -n $PKG | sed -e s/.tcz// ;) ;sudo rm -f /usr/local/tce.installed/$INSTALLED ; done \\\n && sudo rm -f /usr/bin/file \\\n && sudo /sbin/ldconfig \\\n && rm -rf /tmp/tce/optional/* \\\n && curl -SL 'https://bootstrap.pypa.io/get-pip.py' | sudo python2 \\\n && sudo pip install --no-cache-dir --upgrade pip==$PYTHON_PIP_VERSION \\\n && sudo find /usr/local ( -type f -a -name '*.pyc' -o -name '*.pyo' ) -exec rm -rf '{}' + \\\n && find /usr/local ( -type d -a -name test -o -name tests ) | sudo xargs rm -rf \\\n && sudo rm -rf /usr/src/python\n#  Instructions after here are run with 'root' user\nUSER root\n#  install \"virtualenv\", since the vast majority of users of this image will want it\nRUN pip install virtualenv --no-cache-dir\nCMD [\"python2\"]\n","injectedSmells":[],"originalDockerfileHash":"161a7be2b05f4255bb59e8af8dcede48","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM tatsushid/tinycore:7.2-x86_64\n#   Instructions are run with 'tc' user\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\"\nRUN tce-load -wic gnupg curl \\\n && rm -rf /tmp/tce/optional/*\n#   gpg: key 18ADD4FF: public key \"Benjamin Peterson <benjamin@python.org>\" imported\nRUN gpg2 --keyserver pool.sks-keyservers.net --recv-keys C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\nENV PYTHON_VERSION=\"2.7.13\"\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"9.0.1\"\nRUN tce-load -wic bzip2-dev flex file gcc make linux-4.2.1_api_headers glibc_add_lib glibc_base-dev openssl-dev gdbm-dev ncurses-dev readline-dev sqlite3-dev zlib_base-dev tk-dev libX11-dev libXss xorg-proto \\\n && cd /tmp \\\n && curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n && curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n && gpg2 --verify python.tar.xz.asc \\\n && rm python.tar.xz.asc \\\n && tar -xJf python.tar.xz \\\n && rm python.tar.xz \\\n && cd \"/tmp/Python-$PYTHON_VERSION\" \\\n && ./configure --enable-shared --with-ensurepip=install \\\n && make \\\n && mkdir tmp_install \\\n && make install DESTDIR=tmp_install \\\n && for F in `find tmp_install | xargs file | grep \"executable\" | grep ELF | grep \"not stripped\" | cut -f 1 -d : `; do [ -f $F ] \\\n && strip --strip-unneeded $F ; done \\\n && for F in `find tmp_install | xargs file | grep \"shared object\" | grep ELF | grep \"not stripped\" | cut -f 1 -d : `; do [ -f $F ] \\\n && if [ ! -w $F ] ; then chmod u+w $F \\\n && strip -g $F \\\n && chmod u-w $F ; else strip -g $F ; fi ; done \\\n && for F in `find tmp_install | xargs file | grep \"current ar archive\" | cut -f 1 -d : `; do [ -f $F ] \\\n && strip -g $F ; done \\\n && find tmp_install\n#   Instructions after here are run with 'root' user\nUSER root\n#   install \"virtualenv\", since the vast majority of users of this image will want it\nRUN pip install virtualenv --no-cache-dir\nCMD [\"python2\"]\n","originalDockerfileUglifiedHash":"adef840f5df54746c42e025be89a96dc","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6a8ad2c9c6f9514df22066fdd16b6626126a3159.dockerfile"}