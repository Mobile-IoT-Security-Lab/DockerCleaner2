{"seed":677346503,"processedDockerfileHash":"84feda1f5cda5ca6f1acb60b447350b2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-user"],"processedDockerfile":"FROM bitnami/minideb:stretch\nENV PHP_VERSIONS=\"php5.6 php7.0 php7.1 php7.2 php7.3\"\nENV PHP_DEFAULT_VERSION=\"7.2\"\nENV PHP_INI=\"/etc/php/$PHP_DEFAULT_VERSION/fpm/php.ini\"\nENV DRUSH_VERSION=\"8.2.3\"\nENV DRUSH_LAUNCHER_VERSION=\"0.6.0\"\nENV DRUSH_LAUNCHER_FALLBACK=\"/usr/local/bin/drush8\"\nENV WP_CLI_VERSION=\"2.1.0\"\nENV MAILHOG_VERSION=\"1.0.0\"\nENV BACKDROP_DRUSH_VERSION=\"0.1.0\"\nENV MKCERT_VERSION=\"v1.3.0\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"xterm\"\nENV MH_SMTP_BIND_ADDR=\"127.0.0.1:1025\"\nENV NGINX_SITE_TEMPLATE=\"/etc/nginx/nginx-site.conf\"\nENV APACHE_SITE_TEMPLATE=\"/etc/apache2/apache-site.conf\"\nENV WEBSERVER_DOCROOT=\"/var/www/html\"\n#   For backward compatibility only\nENV NGINX_DOCROOT=\"$WEBSERVER_DOCROOT\"\nENV PATH=\"\\\"$PATH:/home/.composer/vendor/bin\\\"\"\n#   composer normally screams about running as root, we don't need that.\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_CACHE_DIR=\"/mnt/ddev-global-cache/composer\"\n#   Windows, especially Win10 Home/Docker toolbox, can take forever on composer build.\nENV COMPOSER_PROCESS_TIMEOUT=\"2000\"\n#   Defines vars in colon-separated notation to be subsituted with values for NGINX_SITE_TEMPLATE on start\n#   NGINX_DOCROOT is for backward compatibility only, to break less people.\nENV NGINX_SITE_VARS=\"'$WEBSERVER_DOCROOT,$NGINX_DOCROOT'\"\nENV APACHE_SITE_VARS=\"'$WEBSERVER_DOCROOT'\"\nRUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime \\\n && dpkg-reconfigure --frontend noninteractive tzdata\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends procps=2:3.3.12-3+deb9u1 curl=7.52.1-5+deb9u16 ca-certificates=20200601~deb9u2 apt-transport-https=1.4.11 wget=1.18-5+deb9u3 fontconfig=2.11.0-6.7+b1 bzip2=1.0.6-8.1 ghostscript=9.26a~dfsg-0+deb9u9 gnupg=2.1.18-8~deb9u4 locales-all=2.24-11+deb9u4 -qq --no-install-suggests -y \\\n && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ stretch main\" > /etc/apt/sources.list.d/php.list \\\n && wget -q -O - https://packages.blackfire.io/gpg.key | apt-key add - \\\n && echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list \\\n && wget -q -O /tmp/nginx_signing.key http://nginx.org/keys/nginx_signing.key \\\n && apt-key add /tmp/nginx_signing.key \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && echo \"deb http://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends less=481-2.1 git=1:2.11.0-3+deb9u7 mysql-client=5.5.9999+default nginx=1.10.3-1+deb9u7 apache2=2.4.25-3+deb9u13 nodejs=4.8.2~dfsg-1 libcap2-bin=1:2.25-1 supervisor=3.3.1-1+deb9u1 sudo=1.8.19p1-2.1+deb9u3 imagemagick=8:6.9.7.4+dfsg-11+deb9u14 iputils-ping=3:20161105-1 patch=2.7.5-1+deb9u2 telnet=0.17-41 netcat=1.10-41 iproute2=4.9.0-1+deb9u1 vim=2:8.0.0197-4+deb9u7 nano=2.7.4-1 gettext=0.19.8.1-2+deb9u1 ncurses-bin=6.0+20161126-1+deb9u2 yarn zip=3.0-11+b1 unzip=6.0-21+deb9u2 rsync=3.1.2-1+deb9u3 locales-all=2.24-11+deb9u4 libpcre3=2:8.39-3 openssh-client=1:7.4p1-10+deb9u7 php-imagick=3.4.3~rc2-2+deb9u1 php-uploadprogress=1.0.3.1-4-g95d8a0f-4 -qq --no-install-suggests -y \\\n && for v in $PHP_VERSIONS; do apt-get install --no-install-recommends $v-apcu $v-bcmath $v-bz2 $v-curl $v-cgi $v-cli $v-common $v-fpm $v-gd $v-intl $v-json $v-mysql $v-pgsql $v-mbstring $v-memcached $v-opcache $v-redis $v-soap $v-sqlite3 $v-readline $v-xdebug $v-xml $v-xmlrpc $v-zip libapache2-mod-$v -qq --no-install-suggests -y ; done \\\n && for v in php5.6 php7.0 php7.1; do apt-get install --no-install-recommends $v-mcrypt -qq --no-install-suggests -y ; done \\\n && apt-get install --no-install-recommends blackfire-php -y --allow-unauthenticated \\\n && apt-get -qq autoremove -y \\\n && apt-get -qq clean -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Arbitrary user needs to be able to bind to privileged ports (for nginx and apache2)\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/sbin/nginx\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/sbin/apache2\nCOPY files /\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN composer global require hirak/prestissimo\nRUN curl -sSL \"https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar\" -o /usr/local/bin/drush8 \\\n && chmod +x /usr/local/bin/drush8\nRUN curl -sSL \"https://github.com/drush-ops/drush-launcher/releases/download/${DRUSH_LAUNCHER_VERSION}/drush.phar\" -o /usr/local/bin/drush \\\n && chmod +x /usr/local/bin/drush\nRUN curl -sSL \"https://github.com/mailhog/MailHog/releases/download/v${MAILHOG_VERSION}/MailHog_linux_amd64\" -o /usr/local/bin/mailhog\nRUN curl -sSL \"https://github.com/wp-cli/wp-cli/releases/download/v${WP_CLI_VERSION}/wp-cli-${WP_CLI_VERSION}.phar\" -o /usr/local/bin/wp-cli\nRUN curl -sSL \"https://drupalconsole.com/installer\" -L -o /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\nRUN curl -sSL https://github.com/backdrop-contrib/drush/releases/download/${BACKDROP_DRUSH_VERSION}/drush.zip -o /tmp/backdrop_drush.zip \\\n && unzip /tmp/backdrop_drush.zip -d /var/tmp/backdrop_drush_commands\nRUN mkdir -p /etc/nginx/sites-enabled /var/log/apache2 /var/run/apache2 /var/lib/apache2/module/enabled_by_admin /var/lib/apache2/module/disabled_by_admin \\\n && touch /var/log/php-fpm.log \\\n && chmod ugo+rw /var/log/php-fpm.log \\\n && chmod ugo+rwx /var/run \\\n && touch /var/log/nginx/access.log \\\n && touch /var/log/nginx/error.log \\\n && chmod -R ugo+rw /var/log/nginx/ \\\n && chmod ugo+rx /usr/local/bin/* \\\n && update-alternatives --set php /usr/bin/php${PHP_DEFAULT_VERSION} \\\n && ln -s /usr/sbin/php-fpm${PHP_DEFAULT_VERSION} /usr/sbin/php-fpm\nRUN chmod -R 777 /var/log\n#   All users will have their home directory in /home, make it fully writeable\nRUN mkdir -p /home/.composer /home/.drush/commands /home/.drush/aliases /mnt/ddev-global-cache/mkcert \\\n && chmod -R ugo+rw /home /mnt/ddev-global-cache/\nRUN chmod -R ugo+w /usr/sbin /usr/bin /etc/nginx /var/cache/nginx /run /var/www /etc/php/*/*/conf.d/ /var/lib/php/modules /etc/alternatives /usr/lib/node_modules /etc/php /etc/apache2 /var/log/apache2/ /var/run/apache2 /var/lib/apache2 /mnt/ddev-global-cache/*\nRUN curl -sSL https://github.com/FiloSottile/mkcert/releases/download/$MKCERT_VERSION/mkcert-$MKCERT_VERSION-linux-amd64 -o /usr/local/bin/mkcert \\\n && chmod +x /usr/local/bin/mkcert \\\n && mkdir -p /home/.local/share \\\n && ln -s /mnt/ddev-global-cache/mkcert /home/.local/share/mkcert \\\n && mkcert -install\n#   Except that .my.cnf can't be writeable or mysql won't use it.\nRUN chmod 444 /home/.my.cnf\nRUN touch /var/log/nginx/error.log /var/log/nginx/access.log /var/log/php-fpm.log \\\n && chmod 666 /var/log/nginx/error.log /var/log/nginx/access.log /var/log/php-fpm.log\nRUN for v in $PHP_VERSIONS; do a2dismod $v ; done\nRUN a2dismod mpm_event\nRUN a2enmod ssl\n#   ssh is very particular about permissions in ~/.ssh\nRUN chmod -R go-w /home/.ssh\n#   scripts added last because they're most likely place to make changes, speeds up build\nCOPY scripts /\nRUN chmod ugo+x /start.sh /healthcheck.sh\nEXPOSE 80/tcp 8025/tcp\nHEALTHCHECK --interval=3s --retries=6 CMD [\"/healthcheck.sh\"]\nCMD [\"/start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n","originalDockerfile":"FROM bitnami/minideb:stretch\nENV PHP_VERSIONS=\"php5.6 php7.0 php7.1 php7.2 php7.3\"\nENV PHP_DEFAULT_VERSION=\"7.2\"\nENV PHP_INI=\"/etc/php/$PHP_DEFAULT_VERSION/fpm/php.ini\"\nENV DRUSH_VERSION=\"8.2.3\"\nENV DRUSH_LAUNCHER_VERSION=\"0.6.0\"\nENV DRUSH_LAUNCHER_FALLBACK=\"/usr/local/bin/drush8\"\nENV WP_CLI_VERSION=\"2.1.0\"\nENV MAILHOG_VERSION=\"1.0.0\"\nENV BACKDROP_DRUSH_VERSION=\"0.1.0\"\nENV MKCERT_VERSION=\"v1.3.0\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"xterm\"\nENV MH_SMTP_BIND_ADDR=\"127.0.0.1:1025\"\nENV NGINX_SITE_TEMPLATE=\"/etc/nginx/nginx-site.conf\"\nENV APACHE_SITE_TEMPLATE=\"/etc/apache2/apache-site.conf\"\nENV WEBSERVER_DOCROOT=\"/var/www/html\"\n#  For backward compatibility only\nENV NGINX_DOCROOT=\"$WEBSERVER_DOCROOT\"\nENV PATH=\"\\\"$PATH:/home/.composer/vendor/bin\\\"\"\n#  composer normally screams about running as root, we don't need that.\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_CACHE_DIR=\"/mnt/ddev-global-cache/composer\"\n#  Windows, especially Win10 Home/Docker toolbox, can take forever on composer build.\nENV COMPOSER_PROCESS_TIMEOUT=\"2000\"\n#  Defines vars in colon-separated notation to be subsituted with values for NGINX_SITE_TEMPLATE on start\n#  NGINX_DOCROOT is for backward compatibility only, to break less people.\nENV NGINX_SITE_VARS=\"'$WEBSERVER_DOCROOT,$NGINX_DOCROOT'\"\nENV APACHE_SITE_VARS=\"'$WEBSERVER_DOCROOT'\"\nRUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime \\\n && dpkg-reconfigure --frontend noninteractive tzdata\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends procps curl ca-certificates apt-transport-https wget fontconfig bzip2 ghostscript gnupg locales-all -qq --no-install-suggests -y \\\n && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ stretch main\" > /etc/apt/sources.list.d/php.list \\\n && wget -q -O - https://packages.blackfire.io/gpg.key | apt-key add - \\\n && echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list \\\n && wget -q -O /tmp/nginx_signing.key http://nginx.org/keys/nginx_signing.key \\\n && apt-key add /tmp/nginx_signing.key \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && echo \"deb http://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends less git mysql-client nginx apache2 nodejs libcap2-bin supervisor sudo imagemagick iputils-ping patch telnet netcat iproute2 vim nano gettext ncurses-bin yarn zip unzip rsync locales-all libpcre3 openssh-client php-imagick php-uploadprogress -qq --no-install-suggests -y \\\n && for v in $PHP_VERSIONS; do apt-get install --no-install-recommends $v-apcu $v-bcmath $v-bz2 $v-curl $v-cgi $v-cli $v-common $v-fpm $v-gd $v-intl $v-json $v-mysql $v-pgsql $v-mbstring $v-memcached $v-opcache $v-redis $v-soap $v-sqlite3 $v-readline $v-xdebug $v-xml $v-xmlrpc $v-zip libapache2-mod-$v -qq --no-install-suggests -y ; done \\\n && for v in php5.6 php7.0 php7.1; do apt-get install --no-install-recommends $v-mcrypt -qq --no-install-suggests -y ; done \\\n && apt-get install blackfire-php -y --allow-unauthenticated \\\n && apt-get -qq autoremove -y \\\n && apt-get -qq clean -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Arbitrary user needs to be able to bind to privileged ports (for nginx and apache2)\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/sbin/nginx\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/sbin/apache2\nADD files /\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN composer global require hirak/prestissimo\nRUN curl -sSL \"https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar\" -o /usr/local/bin/drush8 \\\n && chmod +x /usr/local/bin/drush8\nRUN curl -sSL \"https://github.com/drush-ops/drush-launcher/releases/download/${DRUSH_LAUNCHER_VERSION}/drush.phar\" -o /usr/local/bin/drush \\\n && chmod +x /usr/local/bin/drush\nRUN curl -sSL \"https://github.com/mailhog/MailHog/releases/download/v${MAILHOG_VERSION}/MailHog_linux_amd64\" -o /usr/local/bin/mailhog\nRUN curl -sSL \"https://github.com/wp-cli/wp-cli/releases/download/v${WP_CLI_VERSION}/wp-cli-${WP_CLI_VERSION}.phar\" -o /usr/local/bin/wp-cli\nRUN curl -sSL \"https://drupalconsole.com/installer\" -L -o /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\nRUN curl -sSL https://github.com/backdrop-contrib/drush/releases/download/${BACKDROP_DRUSH_VERSION}/drush.zip -o /tmp/backdrop_drush.zip \\\n && unzip /tmp/backdrop_drush.zip -d /var/tmp/backdrop_drush_commands\nRUN mkdir -p /etc/nginx/sites-enabled /var/log/apache2 /var/run/apache2 /var/lib/apache2/module/enabled_by_admin /var/lib/apache2/module/disabled_by_admin \\\n && touch /var/log/php-fpm.log \\\n && chmod ugo+rw /var/log/php-fpm.log \\\n && chmod ugo+rwx /var/run \\\n && touch /var/log/nginx/access.log \\\n && touch /var/log/nginx/error.log \\\n && chmod -R ugo+rw /var/log/nginx/ \\\n && chmod ugo+rx /usr/local/bin/* \\\n && update-alternatives --set php /usr/bin/php${PHP_DEFAULT_VERSION} \\\n && ln -s /usr/sbin/php-fpm${PHP_DEFAULT_VERSION} /usr/sbin/php-fpm\nRUN chmod -R 777 /var/log\n#  All users will have their home directory in /home, make it fully writeable\nRUN mkdir -p /home/.composer /home/.drush/commands /home/.drush/aliases /mnt/ddev-global-cache/mkcert \\\n && chmod -R ugo+rw /home /mnt/ddev-global-cache/\nRUN chmod -R ugo+w /usr/sbin /usr/bin /etc/nginx /var/cache/nginx /run /var/www /etc/php/*/*/conf.d/ /var/lib/php/modules /etc/alternatives /usr/lib/node_modules /etc/php /etc/apache2 /var/log/apache2/ /var/run/apache2 /var/lib/apache2 /mnt/ddev-global-cache/*\nRUN curl -sSL https://github.com/FiloSottile/mkcert/releases/download/$MKCERT_VERSION/mkcert-$MKCERT_VERSION-linux-amd64 -o /usr/local/bin/mkcert \\\n && chmod +x /usr/local/bin/mkcert \\\n && mkdir -p /home/.local/share \\\n && ln -s /mnt/ddev-global-cache/mkcert /home/.local/share/mkcert \\\n && mkcert -install\n#  Except that .my.cnf can't be writeable or mysql won't use it.\nRUN chmod 444 /home/.my.cnf\nRUN touch /var/log/nginx/error.log /var/log/nginx/access.log /var/log/php-fpm.log \\\n && chmod 666 /var/log/nginx/error.log /var/log/nginx/access.log /var/log/php-fpm.log\nRUN for v in $PHP_VERSIONS; do a2dismod $v ; done\nRUN a2dismod mpm_event\nRUN a2enmod ssl\n#  ssh is very particular about permissions in ~/.ssh\nRUN chmod -R go-w /home/.ssh\n#  scripts added last because they're most likely place to make changes, speeds up build\nADD scripts /\nRUN chmod ugo+x /start.sh /healthcheck.sh\nEXPOSE 80/tcp 8025/tcp\nHEALTHCHECK --interval=3s --retries=6 CMD [\"/healthcheck.sh\"]\nCMD [\"/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"2604ccd90cfaf1531a1913cc285f7cc7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM bitnami/minideb:stretch\nENV PHP_VERSIONS=\"php5.6 php7.0 php7.1 php7.2 php7.3\"\nENV PHP_DEFAULT_VERSION=\"7.2\"\nENV PHP_INI=\"/etc/php/$PHP_DEFAULT_VERSION/fpm/php.ini\"\nENV DRUSH_VERSION=\"8.2.3\"\nENV DRUSH_LAUNCHER_VERSION=\"0.6.0\"\nENV DRUSH_LAUNCHER_FALLBACK=\"/usr/local/bin/drush8\"\nENV WP_CLI_VERSION=\"2.1.0\"\nENV MAILHOG_VERSION=\"1.0.0\"\nENV BACKDROP_DRUSH_VERSION=\"0.1.0\"\nENV MKCERT_VERSION=\"v1.3.0\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"xterm\"\nENV MH_SMTP_BIND_ADDR=\"127.0.0.1:1025\"\nENV NGINX_SITE_TEMPLATE=\"/etc/nginx/nginx-site.conf\"\nENV APACHE_SITE_TEMPLATE=\"/etc/apache2/apache-site.conf\"\nENV WEBSERVER_DOCROOT=\"/var/www/html\"\n#   For backward compatibility only\nENV NGINX_DOCROOT=\"$WEBSERVER_DOCROOT\"\nENV PATH=\"\\\"$PATH:/home/.composer/vendor/bin\\\"\"\n#   composer normally screams about running as root, we don't need that.\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_CACHE_DIR=\"/mnt/ddev-global-cache/composer\"\n#   Windows, especially Win10 Home/Docker toolbox, can take forever on composer build.\nENV COMPOSER_PROCESS_TIMEOUT=\"2000\"\n#   Defines vars in colon-separated notation to be subsituted with values for NGINX_SITE_TEMPLATE on start\n#   NGINX_DOCROOT is for backward compatibility only, to break less people.\nENV NGINX_SITE_VARS=\"'$WEBSERVER_DOCROOT,$NGINX_DOCROOT'\"\nENV APACHE_SITE_VARS=\"'$WEBSERVER_DOCROOT'\"\nRUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime \\\n && dpkg-reconfigure --frontend noninteractive tzdata\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends procps curl ca-certificates apt-transport-https wget fontconfig bzip2 ghostscript gnupg locales-all -qq --no-install-suggests -y \\\n && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ stretch main\" > /etc/apt/sources.list.d/php.list \\\n && wget -q -O - https://packages.blackfire.io/gpg.key | apt-key add - \\\n && echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list \\\n && wget -q -O /tmp/nginx_signing.key http://nginx.org/keys/nginx_signing.key \\\n && apt-key add /tmp/nginx_signing.key \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && echo \"deb http://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends less git mysql-client nginx apache2 nodejs libcap2-bin supervisor sudo imagemagick iputils-ping patch telnet netcat iproute2 vim nano gettext ncurses-bin yarn zip unzip rsync locales-all libpcre3 openssh-client php-imagick php-uploadprogress -qq --no-install-suggests -y \\\n && for v in $PHP_VERSIONS; do apt-get install --no-install-recommends $v-apcu $v-bcmath $v-bz2 $v-curl $v-cgi $v-cli $v-common $v-fpm $v-gd $v-intl $v-json $v-mysql $v-pgsql $v-mbstring $v-memcached $v-opcache $v-redis $v-soap $v-sqlite3 $v-readline $v-xdebug $v-xml $v-xmlrpc $v-zip libapache2-mod-$v -qq --no-install-suggests -y ; done \\\n && for v in php5.6 php7.0 php7.1; do apt-get install --no-install-recommends $v-mcrypt -qq --no-install-suggests -y ; done \\\n && apt-get install blackfire-php -y --allow-unauthenticated \\\n && apt-get -qq autoremove -y \\\n && apt-get -qq clean -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Arbitrary user needs to be able to bind to privileged ports (for nginx and apache2)\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/sbin/nginx\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/sbin/apache2\nADD files /\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN composer global require hirak/prestissimo\nRUN curl -sSL \"https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar\" -o /usr/local/bin/drush8 \\\n && chmod +x /usr/local/bin/drush8\nRUN curl -sSL \"https://github.com/drush-ops/drush-launcher/releases/download/${DRUSH_LAUNCHER_VERSION}/drush.phar\" -o /usr/local/bin/drush \\\n && chmod +x /usr/local/bin/drush\nRUN curl -sSL \"https://github.com/mailhog/MailHog/releases/download/v${MAILHOG_VERSION}/MailHog_linux_amd64\" -o /usr/local/bin/mailhog\nRUN curl -sSL \"https://github.com/wp-cli/wp-cli/releases/download/v${WP_CLI_VERSION}/wp-cli-${WP_CLI_VERSION}.phar\" -o /usr/local/bin/wp-cli\nRUN curl -sSL \"https://drupalconsole.com/installer\" -L -o /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\nRUN curl -sSL https://github.com/backdrop-contrib/drush/releases/download/${BACKDROP_DRUSH_VERSION}/drush.zip -o /tmp/backdrop_drush.zip \\\n && unzip /tmp/backdrop_drush.zip -d /var/tmp/backdrop_drush_commands\nRUN mkdir -p /etc/nginx/sites-enabled /var/log/apache2 /var/run/apache2 /var/lib/apache2/module/enabled_by_admin /var/lib/apache2/module/disabled_by_admin \\\n && touch /var/log/php-fpm.log \\\n && chmod ugo+rw /var/log/php-fpm.log \\\n && chmod ugo+rwx /var/run \\\n && touch /var/log/nginx/access.log \\\n && touch /var/log/nginx/error.log \\\n && chmod -R ugo+rw /var/log/nginx/ \\\n && chmod ugo+rx /usr/local/bin/* \\\n && update-alternatives --set php /usr/bin/php${PHP_DEFAULT_VERSION} \\\n && ln -s /usr/sbin/php-fpm${PHP_DEFAULT_VERSION} /usr/sbin/php-fpm\nRUN chmod -R 777 /var/log\n#   All users will have their home directory in /home, make it fully writeable\nRUN mkdir -p /home/.composer /home/.drush/commands /home/.drush/aliases /mnt/ddev-global-cache/mkcert \\\n && chmod -R ugo+rw /home /mnt/ddev-global-cache/\nRUN chmod -R ugo+w /usr/sbin /usr/bin /etc/nginx /var/cache/nginx /run /var/www /etc/php/*/*/conf.d/ /var/lib/php/modules /etc/alternatives /usr/lib/node_modules /etc/php /etc/apache2 /var/log/apache2/ /var/run/apache2 /var/lib/apache2 /mnt/ddev-global-cache/*\nRUN curl -sSL https://github.com/FiloSottile/mkcert/releases/download/$MKCERT_VERSION/mkcert-$MKCERT_VERSION-linux-amd64 -o /usr/local/bin/mkcert \\\n && chmod +x /usr/local/bin/mkcert \\\n && mkdir -p /home/.local/share \\\n && ln -s /mnt/ddev-global-cache/mkcert /home/.local/share/mkcert \\\n && mkcert -install\n#   Except that .my.cnf can't be writeable or mysql won't use it.\nRUN chmod 444 /home/.my.cnf\nRUN touch /var/log/nginx/error.log /var/log/nginx/access.log /var/log/php-fpm.log \\\n && chmod 666 /var/log/nginx/error.log /var/log/nginx/access.log /var/log/php-fpm.log\nRUN for v in $PHP_VERSIONS; do a2dismod $v ; done\nRUN a2dismod mpm_event\nRUN a2enmod ssl\n#   ssh is very particular about permissions in ~/.ssh\nRUN chmod -R go-w /home/.ssh\n#   scripts added last because they're most likely place to make changes, speeds up build\nADD scripts /\nRUN chmod ugo+x /start.sh /healthcheck.sh\nEXPOSE 80/tcp 8025/tcp\nHEALTHCHECK --interval=3s --retries=6 CMD [\"/healthcheck.sh\"]\nCMD [\"/start.sh\"]\n","originalDockerfileUglifiedHash":"ed9a8c1a71ffb1606a58d084fde3d788","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e2bb686b5aca8f59eecef30e8eaf2f62e6fcd4d3.dockerfile"}