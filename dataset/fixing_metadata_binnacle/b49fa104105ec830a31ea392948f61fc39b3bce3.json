{"seed":2965466784,"processedDockerfileHash":"4014a0a4286b2ee05a485266ed0125fb","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2015 gRPC authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM debian:stretch\n#   Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-10 autotools-dev=20161112.1 build-essential=12.3 bzip2=1.0.6-8.1 ccache=3.3.4-1 curl=7.52.1-5+deb9u16 dnsutils=1:9.10.3.dfsg.P4-12.3+deb9u12 gcc=4:6.3.0-4 gcc-multilib=4:6.3.0-4 git=1:2.11.0-3+deb9u7 golang=2:1.7~5 gyp=0.1+20150913git1f374df9-1 lcov=1.13-1 libc6=2.24-11+deb9u4 libc6-dbg=2.24-11+deb9u4 libc6-dev=2.24-11+deb9u4 libgtest-dev=1.8.0-6 libtool=2.4.6-2 make=4.1-9.1 perl=5.24.1-3+deb9u7 strace=4.15-2 python-dev=2.7.13-2 python-setuptools=33.1.1-1 python-yaml=3.12-1 telnet=0.17-41 unzip=6.0-21+deb9u2 wget=1.18-5+deb9u3 zip=3.0-11+b1 -y \\\n && apt-get clean\n#  ================\n#   Build profiling\nRUN apt-get update \\\n && apt-get install --no-install-recommends time=1.7-25.1+b1 -y \\\n && apt-get clean\n#  ====================\n#   Python dependencies\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-all-dev=2.7.13-2 python3-all-dev=3.5.3-1 python-pip=9.0.1-2+deb9u2 -y\n#   Install Python packages from PyPI\nRUN pip install pip==10.0.1 --upgrade\nRUN pip install virtualenv==20.21.0\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0\n#  ================\n#   C# dependencies\n#   cmake >=3.6 needed to build grpc_csharp_ext\nRUN apt-get update \\\n && apt-get install --no-install-recommends cmake=3.7.2-1 -y \\\n && apt-get clean\n#   Install mono\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=1.4.11 dirmngr=2.1.18-8~deb9u4 -y \\\n && apt-get clean\nRUN apt-key adv --no-tty --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\nRUN echo \"deb https://download.mono-project.com/repo/debian stable-stretch main\" | tee /etc/apt/sources.list.d/mono-official-stable.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends mono-devel=4.6.2.7+dfsg-1 ca-certificates-mono=4.6.2.7+dfsg-1 nuget=2.8.7+md510+dhx1-1 -y \\\n && apt-get clean\n#   Install dotnet SDK\nENV DOTNET_SDK_VERSION=\"2.1.500\"\nRUN curl -sSL -o dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz \\\n && mkdir -p /usr/share/dotnet \\\n && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n && rm dotnet.tar.gz \\\n && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n#   Install .NET Core 1.1.10 runtime (required to run netcoreapp1.1)\nRUN curl -sSL -o dotnet_old.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Runtime/1.1.10/dotnet-debian.9-x64.1.1.10.tar.gz \\\n && mkdir -p dotnet_old \\\n && tar zxf dotnet_old.tar.gz -C dotnet_old \\\n && cp -r dotnet_old/shared/Microsoft.NETCore.App/1.1.10/ /usr/share/dotnet/shared/Microsoft.NETCore.App/ \\\n && rm -rf dotnet_old/ dotnet_old.tar.gz\nRUN apt-get update \\\n && apt-get install --no-install-recommends libunwind8=1.1-4.1 -y \\\n && apt-get clean\n#   Trigger the population of the local package cache\nENV NUGET_XMLDOC_MODE=\"skip\"\nRUN mkdir warmup \\\n && cd warmup \\\n && dotnet new \\\n && cd .. \\\n && rm -rf warmup\nRUN mkdir /var/local/jenkins\n#   Define the default command.\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2015 gRPC authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM debian:stretch\n#  Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl dnsutils gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n# ================\n#  Build profiling\nRUN apt-get update \\\n && apt-get install time -y \\\n && apt-get clean\n# ====================\n#  Python dependencies\n#  Install dependencies\nRUN apt-get update \\\n && apt-get install python-all-dev python3-all-dev python-pip -y\n#  Install Python packages from PyPI\nRUN pip install pip==10.0.1 --upgrade\nRUN pip install virtualenv\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0\n# ================\n#  C# dependencies\n#  cmake >=3.6 needed to build grpc_csharp_ext\nRUN apt-get update \\\n && apt-get install cmake -y \\\n && apt-get clean\n#  Install mono\nRUN apt-get update \\\n && apt-get install apt-transport-https dirmngr -y \\\n && apt-get clean\nRUN apt-key adv --no-tty --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\nRUN echo \"deb https://download.mono-project.com/repo/debian stable-stretch main\" | tee /etc/apt/sources.list.d/mono-official-stable.list\nRUN apt-get update \\\n && apt-get install mono-devel ca-certificates-mono nuget -y \\\n && apt-get clean\n#  Install dotnet SDK\nENV DOTNET_SDK_VERSION=\"2.1.500\"\nRUN curl -sSL -o dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz \\\n && mkdir -p /usr/share/dotnet \\\n && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n && rm dotnet.tar.gz \\\n && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n#  Install .NET Core 1.1.10 runtime (required to run netcoreapp1.1)\nRUN curl -sSL -o dotnet_old.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Runtime/1.1.10/dotnet-debian.9-x64.1.1.10.tar.gz \\\n && mkdir -p dotnet_old \\\n && tar zxf dotnet_old.tar.gz -C dotnet_old \\\n && cp -r dotnet_old/shared/Microsoft.NETCore.App/1.1.10/ /usr/share/dotnet/shared/Microsoft.NETCore.App/ \\\n && rm -rf dotnet_old/ dotnet_old.tar.gz\nRUN apt-get update \\\n && apt-get install libunwind8 -y \\\n && apt-get clean\n#  Trigger the population of the local package cache\nENV NUGET_XMLDOC_MODE=\"skip\"\nRUN mkdir warmup \\\n && cd warmup \\\n && dotnet new \\\n && cd .. \\\n && rm -rf warmup\nRUN mkdir /var/local/jenkins\n#  Define the default command.\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"1b99b4cf96c99383895ff074b0c16ea0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2015 gRPC authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM debian:stretch\n#   Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl dnsutils gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n#  ================\n#   Build profiling\nRUN apt-get update \\\n && apt-get install time -y \\\n && apt-get clean\n#  ====================\n#   Python dependencies\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install python-all-dev python3-all-dev python-pip -y\n#   Install Python packages from PyPI\nRUN pip install pip==10.0.1 --upgrade\nRUN pip install virtualenv\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0\n#  ================\n#   C# dependencies\n#   cmake >=3.6 needed to build grpc_csharp_ext\nRUN apt-get update \\\n && apt-get install cmake -y \\\n && apt-get clean\n#   Install mono\nRUN apt-get update \\\n && apt-get install apt-transport-https dirmngr -y \\\n && apt-get clean\nRUN apt-key adv --no-tty --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\nRUN echo \"deb https://download.mono-project.com/repo/debian stable-stretch main\" | tee /etc/apt/sources.list.d/mono-official-stable.list\nRUN apt-get update \\\n && apt-get install mono-devel ca-certificates-mono nuget -y \\\n && apt-get clean\n#   Install dotnet SDK\nENV DOTNET_SDK_VERSION=\"2.1.500\"\nRUN curl -sSL -o dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz \\\n && mkdir -p /usr/share/dotnet \\\n && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n && rm dotnet.tar.gz \\\n && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n#   Install .NET Core 1.1.10 runtime (required to run netcoreapp1.1)\nRUN curl -sSL -o dotnet_old.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Runtime/1.1.10/dotnet-debian.9-x64.1.1.10.tar.gz \\\n && mkdir -p dotnet_old \\\n && tar zxf dotnet_old.tar.gz -C dotnet_old \\\n && cp -r dotnet_old/shared/Microsoft.NETCore.App/1.1.10/ /usr/share/dotnet/shared/Microsoft.NETCore.App/ \\\n && rm -rf dotnet_old/ dotnet_old.tar.gz\nRUN apt-get update \\\n && apt-get install libunwind8 -y \\\n && apt-get clean\n#   Trigger the population of the local package cache\nENV NUGET_XMLDOC_MODE=\"skip\"\nRUN mkdir warmup \\\n && cd warmup \\\n && dotnet new \\\n && cd .. \\\n && rm -rf warmup\nRUN mkdir /var/local/jenkins\n#   Define the default command.\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"fcfc075be7c8dbdeab2deb3526afc4e3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b49fa104105ec830a31ea392948f61fc39b3bce3.dockerfile"}