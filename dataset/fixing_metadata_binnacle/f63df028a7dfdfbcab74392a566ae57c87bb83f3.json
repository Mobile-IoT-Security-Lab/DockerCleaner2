{"seed":2005438790,"processedDockerfileHash":"5e6b10002921be2457d3486daa129509","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nENV workdir=\"/var/www\"\n#   Production OSM setup\nENV RAILS_ENV=\"production\"\n#   Postgres dependecies\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 -y )\nRUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -\nRUN sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list'\nRUN :\n#   Install the openstreetmap-website dependencies and passenger dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends ruby2.3=2.3.1-2~ubuntu16.04.16 libruby2.3=2.3.1-2~ubuntu16.04.16 ruby2.3-dev=2.3.1-2~ubuntu16.04.16 libmagickwand-dev=8:6.8.9.9-7ubuntu5.16 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libxslt1-dev=1.1.28-2.1ubuntu0.3 apache2=2.4.18-2ubuntu3.17 apache2-dev=2.4.18-2ubuntu3.17 build-essential=12.1ubuntu2 git=1:2.7.4-0ubuntu1.10 postgresql=9.5+173ubuntu0.3 postgresql-contrib=9.5+173ubuntu0.3 libpq-dev=9.5.25-0ubuntu0.16.04.1 libsasl2-dev=2.1.26.dfsg1-14ubuntu0.2 imagemagick=8:6.8.9.9-7ubuntu5.16 libffi-dev=3.2.1-4 curl=7.47.0-1ubuntu2.19 -y )\nRUN gem2.3 install bundler\n#   Install node for some images process dependencies\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 -y )\n#   Fixing image_optim issues, installing a bush of libraries from : https://github.com/toy/image_optim#pngout-installation-optional\nRUN (apt-get update ;apt-get install --no-install-recommends advancecomp=1.20-1ubuntu0.2 gifsicle=1.88-1 jhead=1:3.00-4+deb9u1build0.16.04.1 jpegoptim=1.4.3-1 optipng=0.7.6-1ubuntu0.16.04.1 -y )\nRUN git clone --recursive https://github.com/kornelski/pngquant.git \\\n && cd pngquant \\\n && ./configure \\\n && make \\\n && make install\nRUN git clone https://github.com/tjko/jpeginfo.git \\\n && cd jpeginfo \\\n && ./configure \\\n && make \\\n && make strip \\\n && make install\nRUN wget http://iweb.dl.sourceforge.net/project/pmt/pngcrush/1.8.12/pngcrush-1.8.12.tar.gz \\\n && tar zxf pngcrush-1.8.12.tar.gz \\\n && cd pngcrush-1.8.12 \\\n && make \\\n && cp -f pngcrush /usr/local/bin\nRUN npm install svgo@3.0.2 -g\n#   Install openstreetmap-cgimap\nRUN (apt-get update ;apt-get install --no-install-recommends libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libpqxx-dev=4.0.1+dfsg-3ubuntu2 libfcgi-dev=2.4.0-8.3 libboost-dev=1.58.0.1ubuntu1 libboost-regex-dev=1.58.0.1ubuntu1 libboost-program-options-dev=1.58.0.1ubuntu1 libboost-date-time-dev=1.58.0.1ubuntu1 libboost-filesystem-dev=1.58.0.1ubuntu1 libboost-system-dev=1.58.0.1ubuntu1 libboost-locale-dev=1.58.0.1ubuntu1 libmemcached-dev=1.0.18-4.1ubuntu2 libcrypto++-dev=5.6.1-9ubuntu0.1 automake=1:1.15-4ubuntu1 autoconf=2.69-9 libtool=2.4.6-0.1 libyajl-dev=2.1.0-2 -y )\nENV cgimap=\"/tmp/openstreetmap-cgimap\"\nRUN git clone git://github.com/zerebubuth/openstreetmap-cgimap.git $cgimap\nRUN cd $cgimap \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   Daemontools provides the `fghack` program required for running the `cgimap`\nRUN (apt-get update ;apt-get install --no-install-recommends daemontools=1:0.76-6ubuntu1 -y )\n#   Install the PGP key and add HTTPS support for APT\nRUN (apt-get update ;apt-get install --no-install-recommends dirmngr=2.1.11-6ubuntu2.1 gnupg=1.4.20-1ubuntu3.3 -y )\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7\nRUN (apt-get update ;apt-get install --no-install-recommends apt-transport-https=1.2.35 ca-certificates=20210119~16.04.1 -y )\n#   Add the APT repository\nRUN sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main > /etc/apt/sources.list.d/passenger.list'\nRUN :\n#   Install Passenger + Apache module\nRUN (apt-get update ;apt-get install --no-install-recommends libapache2-mod-passenger=5.0.27-2 -y )\n#   Enable the Passenger Apache module and restart Apache\nRUN echo \"ServerName $( cat /etc/hostname ;)\" >> /etc/apache2/apache2.conf\nRUN a2enmod passenger\nRUN apache2ctl restart\n#   Check installation\nRUN /usr/bin/passenger-config validate-install\nRUN /usr/sbin/passenger-memory-stats\n#   Clone the openstreetmap-website\nRUN rm -rf $workdir\nRUN git clone https://github.com/openstreetmap/openstreetmap-website.git $workdir\nWORKDIR $workdir\n#   gitsha 39f0b501e8cefea961447de9c8076e20fa3adbb4 at Jul 23, 2018\nRUN git checkout 39f0b501e8cefea961447de9c8076e20fa3adbb4\n#   Install the javascript runtime required by the `execjs` gem in\nRUN (apt-get update ;apt-get install --no-install-recommends libv8-dev=3.14.5.8-5ubuntu2 -y )\nRUN echo \"gem 'therubyracer'\" >> Gemfile\n#   Install app dependencies\nRUN bundle update listen \\\n && bundle install\n#   Configure database.yml, application.yml and secrets.yml\nCOPY config/database.yml $workdir/config/database.yml\nCOPY config/application.yml $workdir/config/application.yml\nRUN echo \"#session key \\nproduction: \\n secret_key_base: $( bundle exec rake secret ;)\" > $workdir/config/secrets.yml\n#   Protect sensitive information\nRUN chmod 600 $workdir/config/database.yml $workdir/config/application.yml $workdir/config/secrets.yml\n#   Configure ActionMailer SMTP settings, Replace config/initializers/action_mailer.rb with out configurations\nCOPY config/action_mailer.rb config/initializers/action_mailer.rb\n#   Precompile the website assets\nRUN bundle exec rake assets:precompile --trace\n#   The rack interface requires a `tmp` directory to use openstreetmap-cgimap\nRUN ln -s /tmp /var/www/tmp\n#   Add Apache configuration file\nCOPY config/production.conf /etc/apache2/sites-available/production.conf\nRUN a2dissite 000-default\nRUN a2ensite production\n#   Enable required apache modules for the cgimap Apache service\nRUN a2enmod proxy proxy_http rewrite\n#   Config the virtual host apache2\nCOPY config/cgimap.conf /tmp/\nRUN sed -e 's/RewriteRule ^(.*)/#RewriteRule ^(.*)/' -e 's/\\/var\\/www/\\/var\\/www\\/public/g' /tmp/cgimap.conf > /etc/apache2/sites-available/cgimap.conf\nRUN chmod 644 /etc/apache2/sites-available/cgimap.conf\nRUN a2ensite cgimap\nRUN apache2ctl configtest\n#   Set Permissions for www-data\nRUN chown -R www-data: /var/www\n#   Script to start the app\nCOPY start.sh $workdir/start.sh\nCMD $workdir/start.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nENV workdir=\"/var/www\"\n#  Production OSM setup\nENV RAILS_ENV=\"production\"\n#  Postgres dependecies\nRUN apt-get update\nRUN apt-get install wget -y\nRUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -\nRUN sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list'\nRUN apt-get update\n#  Install the openstreetmap-website dependencies and passenger dependencies\nRUN apt-get install ruby2.3 libruby2.3 ruby2.3-dev libmagickwand-dev libxml2-dev libxslt1-dev apache2 apache2-dev build-essential git postgresql postgresql-contrib libpq-dev libsasl2-dev imagemagick libffi-dev curl -y\nRUN gem2.3 install bundler\n#  Install node for some images process dependencies\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN apt-get install nodejs -y\n#  Fixing image_optim issues, installing a bush of libraries from : https://github.com/toy/image_optim#pngout-installation-optional\nRUN apt-get install advancecomp gifsicle jhead jpegoptim optipng -y\nRUN git clone --recursive https://github.com/kornelski/pngquant.git \\\n && cd pngquant \\\n && ./configure \\\n && make \\\n && make install\nRUN git clone https://github.com/tjko/jpeginfo.git \\\n && cd jpeginfo \\\n && ./configure \\\n && make \\\n && make strip \\\n && make install\nRUN wget http://iweb.dl.sourceforge.net/project/pmt/pngcrush/1.8.12/pngcrush-1.8.12.tar.gz \\\n && tar zxf pngcrush-1.8.12.tar.gz \\\n && cd pngcrush-1.8.12 \\\n && make \\\n && cp -f pngcrush /usr/local/bin\nRUN npm install svgo -g\n#  Install openstreetmap-cgimap\nRUN apt-get install libxml2-dev libpqxx-dev libfcgi-dev libboost-dev libboost-regex-dev libboost-program-options-dev libboost-date-time-dev libboost-filesystem-dev libboost-system-dev libboost-locale-dev libmemcached-dev libcrypto++-dev automake autoconf libtool libyajl-dev -y\nENV cgimap=\"/tmp/openstreetmap-cgimap\"\nRUN git clone git://github.com/zerebubuth/openstreetmap-cgimap.git $cgimap\nRUN cd $cgimap \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#  Daemontools provides the `fghack` program required for running the `cgimap`\nRUN apt-get install daemontools -y\n#  Install the PGP key and add HTTPS support for APT\nRUN apt-get install dirmngr gnupg -y\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7\nRUN apt-get install apt-transport-https ca-certificates -y\n#  Add the APT repository\nRUN sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main > /etc/apt/sources.list.d/passenger.list'\nRUN apt-get update\n#  Install Passenger + Apache module\nRUN apt-get install libapache2-mod-passenger -y\n#  Enable the Passenger Apache module and restart Apache\nRUN echo \"ServerName $( cat /etc/hostname ;)\" >> /etc/apache2/apache2.conf\nRUN a2enmod passenger\nRUN apache2ctl restart\n#  Check installation\nRUN /usr/bin/passenger-config validate-install\nRUN /usr/sbin/passenger-memory-stats\n#  Clone the openstreetmap-website\nRUN rm -rf $workdir\nRUN git clone https://github.com/openstreetmap/openstreetmap-website.git $workdir\nWORKDIR $workdir\n#  gitsha 39f0b501e8cefea961447de9c8076e20fa3adbb4 at Jul 23, 2018\nRUN git checkout 39f0b501e8cefea961447de9c8076e20fa3adbb4\n#  Install the javascript runtime required by the `execjs` gem in\nRUN apt-get install libv8-dev -y\nRUN echo \"gem 'therubyracer'\" >> Gemfile\n#  Install app dependencies\nRUN bundle update listen \\\n && bundle install\n#  Configure database.yml, application.yml and secrets.yml\nADD config/database.yml $workdir/config/database.yml\nADD config/application.yml $workdir/config/application.yml\nRUN echo \"#session key \\nproduction: \\n secret_key_base: $( bundle exec rake secret ;)\" > $workdir/config/secrets.yml\n#  Protect sensitive information\nRUN chmod 600 $workdir/config/database.yml $workdir/config/application.yml $workdir/config/secrets.yml\n#  Configure ActionMailer SMTP settings, Replace config/initializers/action_mailer.rb with out configurations\nADD config/action_mailer.rb config/initializers/action_mailer.rb\n#  Precompile the website assets\nRUN bundle exec rake assets:precompile --trace\n#  The rack interface requires a `tmp` directory to use openstreetmap-cgimap\nRUN ln -s /tmp /var/www/tmp\n#  Add Apache configuration file\nADD config/production.conf /etc/apache2/sites-available/production.conf\nRUN a2dissite 000-default\nRUN a2ensite production\n#  Enable required apache modules for the cgimap Apache service\nRUN a2enmod proxy proxy_http rewrite\n#  Config the virtual host apache2\nADD config/cgimap.conf /tmp/\nRUN sed -e 's/RewriteRule ^(.*)/#RewriteRule ^(.*)/' -e 's/\\/var\\/www/\\/var\\/www\\/public/g' /tmp/cgimap.conf > /etc/apache2/sites-available/cgimap.conf\nRUN chmod 644 /etc/apache2/sites-available/cgimap.conf\nRUN a2ensite cgimap\nRUN apache2ctl configtest\n#  Set Permissions for www-data\nRUN chown -R www-data: /var/www\n#  Script to start the app\nADD start.sh $workdir/start.sh\nCMD $workdir/start.sh\n","injectedSmells":[],"originalDockerfileHash":"cd56e52b2ed29543ea9aa55b77889146","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nENV workdir=\"/var/www\"\n#   Production OSM setup\nENV RAILS_ENV=\"production\"\n#   Postgres dependecies\nRUN apt-get update\nRUN apt-get install wget -y\nRUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -\nRUN sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list'\nRUN apt-get update\n#   Install the openstreetmap-website dependencies and passenger dependencies\nRUN apt-get install ruby2.3 libruby2.3 ruby2.3-dev libmagickwand-dev libxml2-dev libxslt1-dev apache2 apache2-dev build-essential git postgresql postgresql-contrib libpq-dev libsasl2-dev imagemagick libffi-dev curl -y\nRUN gem2.3 install bundler\n#   Install node for some images process dependencies\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN apt-get install nodejs -y\n#   Fixing image_optim issues, installing a bush of libraries from : https://github.com/toy/image_optim#pngout-installation-optional\nRUN apt-get install advancecomp gifsicle jhead jpegoptim optipng -y\nRUN git clone --recursive https://github.com/kornelski/pngquant.git \\\n && cd pngquant \\\n && ./configure \\\n && make \\\n && make install\nRUN git clone https://github.com/tjko/jpeginfo.git \\\n && cd jpeginfo \\\n && ./configure \\\n && make \\\n && make strip \\\n && make install\nRUN wget http://iweb.dl.sourceforge.net/project/pmt/pngcrush/1.8.12/pngcrush-1.8.12.tar.gz \\\n && tar zxf pngcrush-1.8.12.tar.gz \\\n && cd pngcrush-1.8.12 \\\n && make \\\n && cp -f pngcrush /usr/local/bin\nRUN npm install svgo -g\n#   Install openstreetmap-cgimap\nRUN apt-get install libxml2-dev libpqxx-dev libfcgi-dev libboost-dev libboost-regex-dev libboost-program-options-dev libboost-date-time-dev libboost-filesystem-dev libboost-system-dev libboost-locale-dev libmemcached-dev libcrypto++-dev automake autoconf libtool libyajl-dev -y\nENV cgimap=\"/tmp/openstreetmap-cgimap\"\nRUN git clone git://github.com/zerebubuth/openstreetmap-cgimap.git $cgimap\nRUN cd $cgimap \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   Daemontools provides the `fghack` program required for running the `cgimap`\nRUN apt-get install daemontools -y\n#   Install the PGP key and add HTTPS support for APT\nRUN apt-get install dirmngr gnupg -y\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7\nRUN apt-get install apt-transport-https ca-certificates -y\n#   Add the APT repository\nRUN sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main > /etc/apt/sources.list.d/passenger.list'\nRUN apt-get update\n#   Install Passenger + Apache module\nRUN apt-get install libapache2-mod-passenger -y\n#   Enable the Passenger Apache module and restart Apache\nRUN echo \"ServerName $( cat /etc/hostname ;)\" >> /etc/apache2/apache2.conf\nRUN a2enmod passenger\nRUN apache2ctl restart\n#   Check installation\nRUN /usr/bin/passenger-config validate-install\nRUN /usr/sbin/passenger-memory-stats\n#   Clone the openstreetmap-website\nRUN rm -rf $workdir\nRUN git clone https://github.com/openstreetmap/openstreetmap-website.git $workdir\nWORKDIR $workdir\n#   gitsha 39f0b501e8cefea961447de9c8076e20fa3adbb4 at Jul 23, 2018\nRUN git checkout 39f0b501e8cefea961447de9c8076e20fa3adbb4\n#   Install the javascript runtime required by the `execjs` gem in\nRUN apt-get install libv8-dev -y\nRUN echo \"gem 'therubyracer'\" >> Gemfile\n#   Install app dependencies\nRUN bundle update listen \\\n && bundle install\n#   Configure database.yml, application.yml and secrets.yml\nADD config/database.yml $workdir/config/database.yml\nADD config/application.yml $workdir/config/application.yml\nRUN echo \"#session key \\nproduction: \\n secret_key_base: $( bundle exec rake secret ;)\" > $workdir/config/secrets.yml\n#   Protect sensitive information\nRUN chmod 600 $workdir/config/database.yml $workdir/config/application.yml $workdir/config/secrets.yml\n#   Configure ActionMailer SMTP settings, Replace config/initializers/action_mailer.rb with out configurations\nADD config/action_mailer.rb config/initializers/action_mailer.rb\n#   Precompile the website assets\nRUN bundle exec rake assets:precompile --trace\n#   The rack interface requires a `tmp` directory to use openstreetmap-cgimap\nRUN ln -s /tmp /var/www/tmp\n#   Add Apache configuration file\nADD config/production.conf /etc/apache2/sites-available/production.conf\nRUN a2dissite 000-default\nRUN a2ensite production\n#   Enable required apache modules for the cgimap Apache service\nRUN a2enmod proxy proxy_http rewrite\n#   Config the virtual host apache2\nADD config/cgimap.conf /tmp/\nRUN sed -e 's/RewriteRule ^(.*)/#RewriteRule ^(.*)/' -e 's/\\/var\\/www/\\/var\\/www\\/public/g' /tmp/cgimap.conf > /etc/apache2/sites-available/cgimap.conf\nRUN chmod 644 /etc/apache2/sites-available/cgimap.conf\nRUN a2ensite cgimap\nRUN apache2ctl configtest\n#   Set Permissions for www-data\nRUN chown -R www-data: /var/www\n#   Script to start the app\nADD start.sh $workdir/start.sh\nCMD $workdir/start.sh\n","originalDockerfileUglifiedHash":"21e3e2c6094f52a171df19097046f60f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f63df028a7dfdfbcab74392a566ae57c87bb83f3.dockerfile"}