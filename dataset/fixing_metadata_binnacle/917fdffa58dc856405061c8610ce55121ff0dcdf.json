{"seed":4058706161,"processedDockerfileHash":"180ffb42baee48a7ce8853637ad5ab01","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER Donghyun Seo <egaoneko@naver.com>\n#   Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 git=1:1.9.1-1ubuntu0.10 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python=2.7.5-5ubuntu3 python-dev=2.7.5-5ubuntu3 python3=3.4.0-0ubuntu2 python3-dev=3.4.0-0ubuntu2 python3-pip=1.5.4-1ubuntu4 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends nginx=1.4.6-1ubuntu3.9 supervisor=3.0b2-1ubuntu0.1 -y )\nRUN pip3 install glances\nRUN echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf\nRUN chown -R www-data:www-data /var/lib/nginx\n#   UWSGI\nENV UWSGIVERSION=\"2.0.11.2\"\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 libjansson-dev=2.5-2ubuntu0.2 libpcre3-dev=1:8.31-2ubuntu2.3 libssl-dev=1.0.1f-1ubuntu2.27 libxml2-dev=2.9.1+dfsg1-3ubuntu4.13 wget=1.15-1ubuntu1.14.04.5 zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 -y )\nRUN cd /usr/src \\\n && wget --quiet -O - http://projects.unbit.it/downloads/uwsgi-${UWSGIVERSION}.tar.gz | tar zxvf -\nRUN cd /usr/src/uwsgi-${UWSGIVERSION} \\\n && make\nRUN cp /usr/src/uwsgi-${UWSGIVERSION}/uwsgi /usr/local/bin/uwsgi\nRUN PYTHON=/usr/local/python3.4/bin/python3.4\nRUN cd /usr/src/uwsgi-${UWSGIVERSION} \\\n && ./uwsgi --build-plugin \"plugins/python python34\"\nRUN mkdir -p /usr/local/lib/uwsgi/plugins\nRUN cp /usr/src/uwsgi-${UWSGIVERSION}/*.so /usr/local/lib/uwsgi/plugins\nRUN pip3 install uwsgi\n#   Java\nENV VERSION=\"7\"\nENV UPDATE=\"80\"\nENV BUILD=\"15\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-${VERSION}-oracle\"\nENV JRE_HOME=\"${JAVA_HOME}/jre\"\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ca-certificates=20170717~14.04.2 curl=7.35.0-1ubuntu2.20 -y ) \\\n && curl --silent --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" http://download.oracle.com/otn-pub/java/jdk/\"${VERSION}\"u\"${UPDATE}\"-b\"${BUILD}\"/server-jre-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz | tar xz -C /tmp \\\n && mkdir -p /usr/lib/jvm \\\n && mv /tmp/jdk1.${VERSION}.0_${UPDATE} \"${JAVA_HOME}\" \\\n && apt-get autoclean \\\n && apt-get --purge -y autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN update-alternatives --install \"/usr/bin/java\" \"java\" \"${JRE_HOME}/bin/java\" 1 \\\n && update-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\" 1 \\\n && update-alternatives --set java \"${JRE_HOME}/bin/java\" \\\n && update-alternatives --set javac \"${JAVA_HOME}/bin/javac\"\n#   Node\nRUN apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends ca-certificates=20170717~14.04.2 curl=7.35.0-1ubuntu2.20 nodejs=0.10.25~dfsg2-2ubuntu1.2 git=1:1.9.1-1ubuntu0.10 make=3.81-8.2ubuntu3 g++=4:4.8.2-1ubuntu6 -qq -y ) \\\n && ln -s /usr/bin/nodejs /usr/local/bin/node \\\n && curl -skLN https://npmjs.org/install.sh | /bin/bash \\\n && rm -rf /var/lib/apt/lists/*\nRUN npm install bower@1.8.14 -g\n#   Redis\nRUN apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends python-software-properties=0.92.37.8 sudo=1.8.9p5-1ubuntu1.4 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends redis-server=2:2.8.4-2ubuntu0.2 -y )\nRUN sysctl vm.overcommit_memory=1 > /dev/null\nRUN chown -R redis:redis /var/lib/redis\n#   psycopg2\nRUN (apt-get update ;apt-get install --no-install-recommends python-psycopg2=2.4.5-1build5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libpq-dev=9.3.24-0ubuntu0.14.04 -y )\n#   lxml\nRUN (apt-get update ;apt-get install --no-install-recommends python3-lxml=3.3.3-1ubuntu0.2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libxml2-dev=2.9.1+dfsg1-3ubuntu4.13 libxslt-dev -y )\n#   Pillow\nRUN (apt-get update ;apt-get install --no-install-recommends libjpeg8=8c-2ubuntu8 libjpeg62-dev=6b1-4ubuntu1 libfreetype6=2.5.2-1ubuntu2.8 libfreetype6-dev=2.5.2-1ubuntu2.8 -y )\n#   Memcached\nRUN (apt-get update ;apt-get install --no-install-recommends libmemcached-dev=1.0.8-1ubuntu2 -y )\n#   Mecab\n#   RUN apt-get install curl\n#   RUN bash <(curl -s https://raw.githubusercontent.com/konlpy/konlpy/master/scripts/mecab.sh)\n#   Project\nENV PROJECT_DIR=\"/home/ubuntu/workspace/ward\"\nCOPY . ${PROJECT_DIR}\nRUN chown -R www-data:www-data ${PROJECT_DIR}\nRUN cd ${PROJECT_DIR} \\\n && bower --allow-root install\nRUN cd ${PROJECT_DIR} \\\n && pip3 install -r requirements.txt\nRUN cd ${PROJECT_DIR}/www \\\n && python3 manage.py migrate --noinput\nRUN cd ${PROJECT_DIR}/www \\\n && python3 manage.py collectstatic --noinput\nRUN mkdir -p /var/uwsgi/sites-available\nRUN ln -s ${PROJECT_DIR}/conf/nginx-app.conf /etc/nginx/sites-enabled/\nRUN ln -s ${PROJECT_DIR}/conf/uwsgi.ini /var/uwsgi/sites-available/\nRUN cp ${PROJECT_DIR}/conf/celeryd.conf /etc/default/celeryd\nRUN cp ${PROJECT_DIR}/conf/celerybeat.conf /etc/default/celerybeat\nRUN cp ${PROJECT_DIR}/conf/redis.conf /etc/redis/redis.conf\nRUN ln -s ${PROJECT_DIR}/conf/supervisor-app.conf /etc/supervisor/conf.d/\nRUN cp ${PROJECT_DIR}/conf/celeryd /etc/init.d/\nRUN chmod +x /etc/init.d/celeryd\nRUN update-rc.d celeryd defaults\nRUN update-rc.d celeryd enable\nRUN chown root:root /etc/init.d/celeryd\nRUN chmod 755 /etc/init.d/celeryd\nRUN cp ${PROJECT_DIR}/conf/celerybeat /etc/init.d/\nRUN chmod +x /etc/init.d/celerybeat\nRUN update-rc.d celerybeat defaults\nRUN update-rc.d celerybeat enable\nRUN chown root:root /etc/init.d/celerybeat\nRUN chmod 755 /etc/init.d/celerybeat\nVOLUME [\"/data\", \"/var/log\",  \"/etc/nginx/site-enabled\", \"/var/log/nginx\",  \"/etc/uwsgi/apps-enabled\", \"/var/log/uwsgi\",  \"/var/log/celery\", \"/var/log/supervisor\",  \"/var/lib/redis\", \"/etc/redis\"]\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nCMD [\"supervisord\", \"-n\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER Donghyun Seo <egaoneko@naver.com>\n#  Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update\nRUN apt-get install build-essential git -y\nRUN apt-get install python python-dev python3 python3-dev python3-pip -y\nRUN apt-get install nginx supervisor -y\nRUN pip3 install glances\nRUN echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf\nRUN chown -R www-data:www-data /var/lib/nginx\n#  UWSGI\nENV UWSGIVERSION=\"2.0.11.2\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential libjansson-dev libpcre3-dev libssl-dev libxml2-dev wget zlib1g-dev -y\nRUN cd /usr/src \\\n && wget --quiet -O - http://projects.unbit.it/downloads/uwsgi-${UWSGIVERSION}.tar.gz | tar zxvf -\nRUN cd /usr/src/uwsgi-${UWSGIVERSION} \\\n && make\nRUN cp /usr/src/uwsgi-${UWSGIVERSION}/uwsgi /usr/local/bin/uwsgi\nRUN PYTHON=/usr/local/python3.4/bin/python3.4\nRUN cd /usr/src/uwsgi-${UWSGIVERSION} \\\n && ./uwsgi --build-plugin \"plugins/python python34\"\nRUN mkdir -p /usr/local/lib/uwsgi/plugins\nRUN cp /usr/src/uwsgi-${UWSGIVERSION}/*.so /usr/local/lib/uwsgi/plugins\nRUN pip3 install uwsgi\n#  Java\nENV VERSION=\"7\"\nENV UPDATE=\"80\"\nENV BUILD=\"15\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-${VERSION}-oracle\"\nENV JRE_HOME=\"${JAVA_HOME}/jre\"\nRUN apt-get update \\\n && apt-get install ca-certificates curl -y \\\n && curl --silent --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" http://download.oracle.com/otn-pub/java/jdk/\"${VERSION}\"u\"${UPDATE}\"-b\"${BUILD}\"/server-jre-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz | tar xz -C /tmp \\\n && mkdir -p /usr/lib/jvm \\\n && mv /tmp/jdk1.${VERSION}.0_${UPDATE} \"${JAVA_HOME}\" \\\n && apt-get autoclean \\\n && apt-get --purge -y autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN update-alternatives --install \"/usr/bin/java\" \"java\" \"${JRE_HOME}/bin/java\" 1 \\\n && update-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\" 1 \\\n && update-alternatives --set java \"${JRE_HOME}/bin/java\" \\\n && update-alternatives --set javac \"${JAVA_HOME}/bin/javac\"\n#  Node\nRUN apt-get update -qq \\\n && apt-get install ca-certificates curl nodejs git make g++ -qq -y \\\n && ln -s /usr/bin/nodejs /usr/local/bin/node \\\n && curl -skLN https://npmjs.org/install.sh | /bin/bash \\\n && rm -rf /var/lib/apt/lists/*\nRUN npm install bower -g\n#  Redis\nRUN apt-get update -qq \\\n && apt-get install python-software-properties sudo -y\nRUN apt-get install redis-server -y\nRUN sysctl vm.overcommit_memory=1 > /dev/null\nRUN chown -R redis:redis /var/lib/redis\n#  psycopg2\nRUN apt-get install python-psycopg2 -y\nRUN apt-get install libpq-dev -y\n#  lxml\nRUN apt-get install python3-lxml -y\nRUN apt-get install libxml2-dev libxslt-dev -y\n#  Pillow\nRUN apt-get install libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev -y\n#  Memcached\nRUN apt-get install libmemcached-dev -y\n#  Mecab\n#  RUN apt-get install curl\n#  RUN bash <(curl -s https://raw.githubusercontent.com/konlpy/konlpy/master/scripts/mecab.sh)\n#  Project\nENV PROJECT_DIR=\"/home/ubuntu/workspace/ward\"\nADD . ${PROJECT_DIR}\nRUN chown -R www-data:www-data ${PROJECT_DIR}\nRUN cd ${PROJECT_DIR} \\\n && bower --allow-root install\nRUN cd ${PROJECT_DIR} \\\n && pip3 install -r requirements.txt\nRUN cd ${PROJECT_DIR}/www \\\n && python3 manage.py migrate --noinput\nRUN cd ${PROJECT_DIR}/www \\\n && python3 manage.py collectstatic --noinput\nRUN mkdir -p /var/uwsgi/sites-available\nRUN ln -s ${PROJECT_DIR}/conf/nginx-app.conf /etc/nginx/sites-enabled/\nRUN ln -s ${PROJECT_DIR}/conf/uwsgi.ini /var/uwsgi/sites-available/\nRUN cp ${PROJECT_DIR}/conf/celeryd.conf /etc/default/celeryd\nRUN cp ${PROJECT_DIR}/conf/celerybeat.conf /etc/default/celerybeat\nRUN cp ${PROJECT_DIR}/conf/redis.conf /etc/redis/redis.conf\nRUN ln -s ${PROJECT_DIR}/conf/supervisor-app.conf /etc/supervisor/conf.d/\nRUN cp ${PROJECT_DIR}/conf/celeryd /etc/init.d/\nRUN chmod +x /etc/init.d/celeryd\nRUN update-rc.d celeryd defaults\nRUN update-rc.d celeryd enable\nRUN chown root:root /etc/init.d/celeryd\nRUN chmod 755 /etc/init.d/celeryd\nRUN cp ${PROJECT_DIR}/conf/celerybeat /etc/init.d/\nRUN chmod +x /etc/init.d/celerybeat\nRUN update-rc.d celerybeat defaults\nRUN update-rc.d celerybeat enable\nRUN chown root:root /etc/init.d/celerybeat\nRUN chmod 755 /etc/init.d/celerybeat\nVOLUME [\"/data\", \"/var/log\",  \"/etc/nginx/site-enabled\", \"/var/log/nginx\",  \"/etc/uwsgi/apps-enabled\", \"/var/log/uwsgi\",  \"/var/log/celery\", \"/var/log/supervisor\",  \"/var/lib/redis\", \"/etc/redis\"]\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nCMD [\"supervisord\", \"-n\"]\n","injectedSmells":[],"originalDockerfileHash":"078ddb08692a78118f0d701af1eaf0f1","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER Donghyun Seo <egaoneko@naver.com>\n#   Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update\nRUN apt-get install build-essential git -y\nRUN apt-get install python python-dev python3 python3-dev python3-pip -y\nRUN apt-get install nginx supervisor -y\nRUN pip3 install glances\nRUN echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf\nRUN chown -R www-data:www-data /var/lib/nginx\n#   UWSGI\nENV UWSGIVERSION=\"2.0.11.2\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential libjansson-dev libpcre3-dev libssl-dev libxml2-dev wget zlib1g-dev -y\nRUN cd /usr/src \\\n && wget --quiet -O - http://projects.unbit.it/downloads/uwsgi-${UWSGIVERSION}.tar.gz | tar zxvf -\nRUN cd /usr/src/uwsgi-${UWSGIVERSION} \\\n && make\nRUN cp /usr/src/uwsgi-${UWSGIVERSION}/uwsgi /usr/local/bin/uwsgi\nRUN PYTHON=/usr/local/python3.4/bin/python3.4\nRUN cd /usr/src/uwsgi-${UWSGIVERSION} \\\n && ./uwsgi --build-plugin \"plugins/python python34\"\nRUN mkdir -p /usr/local/lib/uwsgi/plugins\nRUN cp /usr/src/uwsgi-${UWSGIVERSION}/*.so /usr/local/lib/uwsgi/plugins\nRUN pip3 install uwsgi\n#   Java\nENV VERSION=\"7\"\nENV UPDATE=\"80\"\nENV BUILD=\"15\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-${VERSION}-oracle\"\nENV JRE_HOME=\"${JAVA_HOME}/jre\"\nRUN apt-get update \\\n && apt-get install ca-certificates curl -y \\\n && curl --silent --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" http://download.oracle.com/otn-pub/java/jdk/\"${VERSION}\"u\"${UPDATE}\"-b\"${BUILD}\"/server-jre-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz | tar xz -C /tmp \\\n && mkdir -p /usr/lib/jvm \\\n && mv /tmp/jdk1.${VERSION}.0_${UPDATE} \"${JAVA_HOME}\" \\\n && apt-get autoclean \\\n && apt-get --purge -y autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN update-alternatives --install \"/usr/bin/java\" \"java\" \"${JRE_HOME}/bin/java\" 1 \\\n && update-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\" 1 \\\n && update-alternatives --set java \"${JRE_HOME}/bin/java\" \\\n && update-alternatives --set javac \"${JAVA_HOME}/bin/javac\"\n#   Node\nRUN apt-get update -qq \\\n && apt-get install ca-certificates curl nodejs git make g++ -qq -y \\\n && ln -s /usr/bin/nodejs /usr/local/bin/node \\\n && curl -skLN https://npmjs.org/install.sh | /bin/bash \\\n && rm -rf /var/lib/apt/lists/*\nRUN npm install bower -g\n#   Redis\nRUN apt-get update -qq \\\n && apt-get install python-software-properties sudo -y\nRUN apt-get install redis-server -y\nRUN sysctl vm.overcommit_memory=1 > /dev/null\nRUN chown -R redis:redis /var/lib/redis\n#   psycopg2\nRUN apt-get install python-psycopg2 -y\nRUN apt-get install libpq-dev -y\n#   lxml\nRUN apt-get install python3-lxml -y\nRUN apt-get install libxml2-dev libxslt-dev -y\n#   Pillow\nRUN apt-get install libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev -y\n#   Memcached\nRUN apt-get install libmemcached-dev -y\n#   Mecab\n#   RUN apt-get install curl\n#   RUN bash <(curl -s https://raw.githubusercontent.com/konlpy/konlpy/master/scripts/mecab.sh)\n#   Project\nENV PROJECT_DIR=\"/home/ubuntu/workspace/ward\"\nADD . ${PROJECT_DIR}\nRUN chown -R www-data:www-data ${PROJECT_DIR}\nRUN cd ${PROJECT_DIR} \\\n && bower --allow-root install\nRUN cd ${PROJECT_DIR} \\\n && pip3 install -r requirements.txt\nRUN cd ${PROJECT_DIR}/www \\\n && python3 manage.py migrate --noinput\nRUN cd ${PROJECT_DIR}/www \\\n && python3 manage.py collectstatic --noinput\nRUN mkdir -p /var/uwsgi/sites-available\nRUN ln -s ${PROJECT_DIR}/conf/nginx-app.conf /etc/nginx/sites-enabled/\nRUN ln -s ${PROJECT_DIR}/conf/uwsgi.ini /var/uwsgi/sites-available/\nRUN cp ${PROJECT_DIR}/conf/celeryd.conf /etc/default/celeryd\nRUN cp ${PROJECT_DIR}/conf/celerybeat.conf /etc/default/celerybeat\nRUN cp ${PROJECT_DIR}/conf/redis.conf /etc/redis/redis.conf\nRUN ln -s ${PROJECT_DIR}/conf/supervisor-app.conf /etc/supervisor/conf.d/\nRUN cp ${PROJECT_DIR}/conf/celeryd /etc/init.d/\nRUN chmod +x /etc/init.d/celeryd\nRUN update-rc.d celeryd defaults\nRUN update-rc.d celeryd enable\nRUN chown root:root /etc/init.d/celeryd\nRUN chmod 755 /etc/init.d/celeryd\nRUN cp ${PROJECT_DIR}/conf/celerybeat /etc/init.d/\nRUN chmod +x /etc/init.d/celerybeat\nRUN update-rc.d celerybeat defaults\nRUN update-rc.d celerybeat enable\nRUN chown root:root /etc/init.d/celerybeat\nRUN chmod 755 /etc/init.d/celerybeat\nVOLUME [\"/data\", \"/var/log\",  \"/etc/nginx/site-enabled\", \"/var/log/nginx\",  \"/etc/uwsgi/apps-enabled\", \"/var/log/uwsgi\",  \"/var/log/celery\", \"/var/log/supervisor\",  \"/var/lib/redis\", \"/etc/redis\"]\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nCMD [\"supervisord\", \"-n\"]\n","originalDockerfileUglifiedHash":"43f063e05e1ecd35db9ecd1c133db3f0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/917fdffa58dc856405061c8610ce55121ff0dcdf.dockerfile"}