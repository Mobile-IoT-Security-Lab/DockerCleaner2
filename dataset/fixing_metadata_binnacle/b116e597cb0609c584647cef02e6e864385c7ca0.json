{"seed":2268325557,"processedDockerfileHash":"46c6f64512cf622e2f419fe3b89cfd09","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-apk","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.7\nENV TIMEZONE=\"Europe/Moscow\"\nENV PHP_MEMORY_LIMIT=\"512M\"\nENV PHP_LOGFILE=\"/var/log/php-errors.log\"\nENV MAX_UPLOAD=\"50M\"\nENV PHP_MAX_FILE_UPLOAD=\"200\"\nENV PHP_MAX_POST=\"100M\"\nENV LANG=\"en_US.utf8\"\nENV PGDATA=\"/var/lib/postgresql/data\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV YARN_CACHE_FOLDER=\"/home/user/.yarn-cache\"\nENV COMPOSER_CACHE_DIR=\"/home/user/.composer-cache\"\nENV DB_PORT=\"5532\"\nENV MIMIR_URL=\"http://localhost:4001\"\nENV RHEDA_URL=\"http://localhost:4002\"\nENV TYR_URL=\"http://localhost:4003\"\nENV FREY_URL=\"http://localhost:4004\"\nENV IS_DOCKER=\"1\"\n#   these should match auth data in dbinit.sql\nENV PHINX_DB_NAME=\"mimir\"\nENV PHINX_DB_NAME_UNIT=\"mimir_unit\"\nENV PHINX_DB_USER=\"mimir\"\nENV PHINX_DB_PASS=\"pgpass\"\nENV PHINX_DB_PORT=\"$DB_PORT\"\n#   these should match auth data in dbinit_frey.sql\nENV PHINX_DB_FREY_NAME=\"frey\"\nENV PHINX_DB_FREY_NAME_UNIT=\"frey_unit\"\nENV PHINX_DB_FREY_USER=\"frey\"\nENV PHINX_DB_FREY_PASS=\"pgpass\"\nENV PHINX_DB_FREY_PORT=\"$DB_PORT\"\nRUN apk update \\\n && apk upgrade \\\n && apk add tzdata=2019c-r0 --update \\\n && cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo \"${TIMEZONE}\" > /etc/timezone \\\n && apk add curl=7.61.1-r3 make=4.2.1-r0 gettext=0.19.8.1-r1 git=2.15.4-r0 nginx=1.12.2-r4 postgresql=10.10-r0 nodejs=8.9.3-r1 nodejs-npm=8.9.3-r1 php7-mcrypt=7.1.33-r0 php7-soap=7.1.33-r0 php7-gettext=7.1.33-r0 php7-intl=7.1.33-r0 php7-tokenizer=7.1.33-r0 php7-mbstring=7.1.33-r0 php7-simplexml=7.1.33-r0 php7-openssl=7.1.33-r0 php7-gmp=7.1.33-r0 php7-phar=7.1.33-r0 php7-json=7.1.33-r0 php7-pdo=7.1.33-r0 php7-pdo_pgsql=7.1.33-r0 php7-pgsql=7.1.33-r0 php7-gd=7.1.33-r0 php7-gettext=7.1.33-r0 php7-xmlreader=7.1.33-r0 php7-xmlwriter=7.1.33-r0 php7-xmlrpc=7.1.33-r0 php7-phpdbg=7.1.33-r0 php7-iconv=7.1.33-r0 php7-curl=7.1.33-r0 php7-ctype=7.1.33-r0 php7-fpm=7.1.33-r0 php7-apcu=5.1.11-r0 --update\nRUN curl -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64\" \\\n && chmod +x /usr/local/bin/gosu\nRUN npm install xgettext-template@4.1.2 i18n-stex@1.0.12 i18n-po-json@1.1.0 i18n-json-po@1.0.7 yarn@1.22.19 -g\nRUN touch $PHP_LOGFILE\nRUN chown nobody $PHP_LOGFILE\n#   Set environments\nRUN sed -i \"s|;*daemonize\\s*=\\s*yes|daemonize = no|g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*clear_env\\s*=\\s*no|clear_env = no|g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*listen\\s*=\\s*127.0.0.1:9000|listen = 9000|g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*listen\\s*=\\s*/||g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*error_log =.*|error_log = ${PHP_LOGFILE}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo = 0|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.enable=.*|opcache.enable = 1|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.enable_cli=.*|opcache.enable_cli = 1|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.memory_consumption=.*|opcache.memory_consumption = 128|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.interned_strings_buffer=.*|opcache.interned_strings_buffer=8|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.max_accelerated_files=.*|opcache.max_accelerated_files=4000|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.fast_shutdown=.*|opcache.fast_shutdown=1|i\" /etc/php7/php.ini\n#   Cleaning up\nRUN mkdir /www \\\n && apk del tzdata \\\n && rm -rf /var/cache/apk/*\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && ln -sf /dev/stderr /var/log/php7.1-fpm.log\n#   Expose ports\nEXPOSE 4001/tcp 4002/tcp 4003/tcp 4004/tcp $DB_PORT\n#   copy entry point\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod 755 /entrypoint.sh\n#   copy nginx configs\nCOPY Rheda/rheda-docker.nginx.conf /etc/nginx/conf.d/rheda.conf\nCOPY Mimir/mimir-docker.nginx.conf /etc/nginx/conf.d/mimir.conf\nCOPY Frey/frey-docker.nginx.conf /etc/nginx/conf.d/frey.conf\n#   copy db init scripts\nRUN mkdir -p /docker-entrypoint-initdb.d\nCOPY dbinit.sql /docker-entrypoint-initdb.d/dbinit.sql\nCOPY dbinit_frey.sql /docker-entrypoint-initdb.d/dbinit_frey.sql\n#   Folders init\nRUN mkdir -p /run/postgresql \\\n && chown postgres /run/postgresql\nRUN mkdir -p /run/nginx\nRUN mkdir -p /var/www/html/Tyr\nRUN mkdir -p /var/www/html/Mimir\nRUN mkdir -p /var/www/html/Rheda\nRUN mkdir -p /var/www/html/Frey\nRUN mkdir -p /var/www/html/pantheon\n#   Entry point\nCMD [\"/entrypoint.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.7\nENV TIMEZONE=\"Europe/Moscow\"\nENV PHP_MEMORY_LIMIT=\"512M\"\nENV PHP_LOGFILE=\"/var/log/php-errors.log\"\nENV MAX_UPLOAD=\"50M\"\nENV PHP_MAX_FILE_UPLOAD=\"200\"\nENV PHP_MAX_POST=\"100M\"\nENV LANG=\"en_US.utf8\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nENV POSTGRES_PASSWORD=\"pgpass\"\nENV YARN_CACHE_FOLDER=\"/home/user/.yarn-cache\"\nENV COMPOSER_CACHE_DIR=\"/home/user/.composer-cache\"\nENV DB_PORT=\"5532\"\nENV MIMIR_URL=\"http://localhost:4001\"\nENV RHEDA_URL=\"http://localhost:4002\"\nENV TYR_URL=\"http://localhost:4003\"\nENV FREY_URL=\"http://localhost:4004\"\nENV IS_DOCKER=\"1\"\n#  these should match auth data in dbinit.sql\nENV PHINX_DB_NAME=\"mimir\"\nENV PHINX_DB_NAME_UNIT=\"mimir_unit\"\nENV PHINX_DB_USER=\"mimir\"\nENV PHINX_DB_PASS=\"pgpass\"\nENV PHINX_DB_PORT=\"$DB_PORT\"\n#  these should match auth data in dbinit_frey.sql\nENV PHINX_DB_FREY_NAME=\"frey\"\nENV PHINX_DB_FREY_NAME_UNIT=\"frey_unit\"\nENV PHINX_DB_FREY_USER=\"frey\"\nENV PHINX_DB_FREY_PASS=\"pgpass\"\nENV PHINX_DB_FREY_PORT=\"$DB_PORT\"\nRUN apk update \\\n && apk upgrade \\\n && apk add --update tzdata \\\n && cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo \"${TIMEZONE}\" > /etc/timezone \\\n && apk add --update curl make gettext git nginx postgresql nodejs nodejs-npm php7-mcrypt php7-soap php7-gettext php7-intl php7-tokenizer php7-mbstring php7-simplexml php7-openssl php7-gmp php7-phar php7-json php7-pdo php7-pdo_pgsql php7-pgsql php7-gd php7-gettext php7-xmlreader php7-xmlwriter php7-xmlrpc php7-phpdbg php7-iconv php7-curl php7-ctype php7-fpm php7-apcu\nRUN curl -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64\" \\\n && chmod +x /usr/local/bin/gosu\nRUN npm install xgettext-template i18n-stex i18n-po-json i18n-json-po yarn -g\nRUN touch $PHP_LOGFILE\nRUN chown nobody $PHP_LOGFILE\n#  Set environments\nRUN sed -i \"s|;*daemonize\\s*=\\s*yes|daemonize = no|g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*clear_env\\s*=\\s*no|clear_env = no|g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*listen\\s*=\\s*127.0.0.1:9000|listen = 9000|g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*listen\\s*=\\s*/||g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*error_log =.*|error_log = ${PHP_LOGFILE}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo = 0|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.enable=.*|opcache.enable = 1|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.enable_cli=.*|opcache.enable_cli = 1|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.memory_consumption=.*|opcache.memory_consumption = 128|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.interned_strings_buffer=.*|opcache.interned_strings_buffer=8|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.max_accelerated_files=.*|opcache.max_accelerated_files=4000|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.fast_shutdown=.*|opcache.fast_shutdown=1|i\" /etc/php7/php.ini\n#  Cleaning up\nRUN mkdir /www \\\n && apk del tzdata \\\n && rm -rf /var/cache/apk/*\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && ln -sf /dev/stderr /var/log/php7.1-fpm.log\n#  Expose ports\nEXPOSE 4001/tcp 4002/tcp 4003/tcp 4004/tcp $DB_PORT\n#  copy entry point\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod 755 /entrypoint.sh\n#  copy nginx configs\nCOPY Rheda/rheda-docker.nginx.conf /etc/nginx/conf.d/rheda.conf\nCOPY Mimir/mimir-docker.nginx.conf /etc/nginx/conf.d/mimir.conf\nCOPY Frey/frey-docker.nginx.conf /etc/nginx/conf.d/frey.conf\n#  copy db init scripts\nRUN mkdir -p /docker-entrypoint-initdb.d\nCOPY dbinit.sql /docker-entrypoint-initdb.d/dbinit.sql\nCOPY dbinit_frey.sql /docker-entrypoint-initdb.d/dbinit_frey.sql\n#  Folders init\nRUN mkdir -p /run/postgresql \\\n && chown postgres /run/postgresql\nRUN mkdir -p /run/nginx\nRUN mkdir -p /var/www/html/Tyr\nRUN mkdir -p /var/www/html/Mimir\nRUN mkdir -p /var/www/html/Rheda\nRUN mkdir -p /var/www/html/Frey\nRUN mkdir -p /var/www/html/pantheon\n#  Entry point\nCMD [\"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"82bff25974ebbe9494f1fb638733e6b5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.7\nENV TIMEZONE=\"Europe/Moscow\"\nENV PHP_MEMORY_LIMIT=\"512M\"\nENV PHP_LOGFILE=\"/var/log/php-errors.log\"\nENV MAX_UPLOAD=\"50M\"\nENV PHP_MAX_FILE_UPLOAD=\"200\"\nENV PHP_MAX_POST=\"100M\"\nENV LANG=\"en_US.utf8\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nENV POSTGRES_PASSWORD=\"pgpass\"\nENV YARN_CACHE_FOLDER=\"/home/user/.yarn-cache\"\nENV COMPOSER_CACHE_DIR=\"/home/user/.composer-cache\"\nENV DB_PORT=\"5532\"\nENV MIMIR_URL=\"http://localhost:4001\"\nENV RHEDA_URL=\"http://localhost:4002\"\nENV TYR_URL=\"http://localhost:4003\"\nENV FREY_URL=\"http://localhost:4004\"\nENV IS_DOCKER=\"1\"\n#   these should match auth data in dbinit.sql\nENV PHINX_DB_NAME=\"mimir\"\nENV PHINX_DB_NAME_UNIT=\"mimir_unit\"\nENV PHINX_DB_USER=\"mimir\"\nENV PHINX_DB_PASS=\"pgpass\"\nENV PHINX_DB_PORT=\"$DB_PORT\"\n#   these should match auth data in dbinit_frey.sql\nENV PHINX_DB_FREY_NAME=\"frey\"\nENV PHINX_DB_FREY_NAME_UNIT=\"frey_unit\"\nENV PHINX_DB_FREY_USER=\"frey\"\nENV PHINX_DB_FREY_PASS=\"pgpass\"\nENV PHINX_DB_FREY_PORT=\"$DB_PORT\"\nRUN apk update \\\n && apk upgrade \\\n && apk add --update tzdata \\\n && cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && echo \"${TIMEZONE}\" > /etc/timezone \\\n && apk add --update curl make gettext git nginx postgresql nodejs nodejs-npm php7-mcrypt php7-soap php7-gettext php7-intl php7-tokenizer php7-mbstring php7-simplexml php7-openssl php7-gmp php7-phar php7-json php7-pdo php7-pdo_pgsql php7-pgsql php7-gd php7-gettext php7-xmlreader php7-xmlwriter php7-xmlrpc php7-phpdbg php7-iconv php7-curl php7-ctype php7-fpm php7-apcu\nRUN curl -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64\" \\\n && chmod +x /usr/local/bin/gosu\nRUN npm install xgettext-template i18n-stex i18n-po-json i18n-json-po yarn -g\nRUN touch $PHP_LOGFILE\nRUN chown nobody $PHP_LOGFILE\n#   Set environments\nRUN sed -i \"s|;*daemonize\\s*=\\s*yes|daemonize = no|g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*clear_env\\s*=\\s*no|clear_env = no|g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*listen\\s*=\\s*127.0.0.1:9000|listen = 9000|g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*listen\\s*=\\s*/||g\" /etc/php7/php-fpm.d/www.conf \\\n && sed -i \"s|;*date.timezone =.*|date.timezone = ${TIMEZONE}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*error_log =.*|error_log = ${PHP_LOGFILE}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*post_max_size =.*|post_max_size = ${PHP_MAX_POST}|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*cgi.fix_pathinfo=.*|cgi.fix_pathinfo = 0|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.enable=.*|opcache.enable = 1|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.enable_cli=.*|opcache.enable_cli = 1|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.memory_consumption=.*|opcache.memory_consumption = 128|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.interned_strings_buffer=.*|opcache.interned_strings_buffer=8|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.max_accelerated_files=.*|opcache.max_accelerated_files=4000|i\" /etc/php7/php.ini \\\n && sed -i \"s|;*opcache.fast_shutdown=.*|opcache.fast_shutdown=1|i\" /etc/php7/php.ini\n#   Cleaning up\nRUN mkdir /www \\\n && apk del tzdata \\\n && rm -rf /var/cache/apk/*\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && ln -sf /dev/stderr /var/log/php7.1-fpm.log\n#   Expose ports\nEXPOSE 4001/tcp 4002/tcp 4003/tcp 4004/tcp $DB_PORT\n#   copy entry point\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod 755 /entrypoint.sh\n#   copy nginx configs\nCOPY Rheda/rheda-docker.nginx.conf /etc/nginx/conf.d/rheda.conf\nCOPY Mimir/mimir-docker.nginx.conf /etc/nginx/conf.d/mimir.conf\nCOPY Frey/frey-docker.nginx.conf /etc/nginx/conf.d/frey.conf\n#   copy db init scripts\nRUN mkdir -p /docker-entrypoint-initdb.d\nCOPY dbinit.sql /docker-entrypoint-initdb.d/dbinit.sql\nCOPY dbinit_frey.sql /docker-entrypoint-initdb.d/dbinit_frey.sql\n#   Folders init\nRUN mkdir -p /run/postgresql \\\n && chown postgres /run/postgresql\nRUN mkdir -p /run/nginx\nRUN mkdir -p /var/www/html/Tyr\nRUN mkdir -p /var/www/html/Mimir\nRUN mkdir -p /var/www/html/Rheda\nRUN mkdir -p /var/www/html/Frey\nRUN mkdir -p /var/www/html/pantheon\n#   Entry point\nCMD [\"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"c3ab7eab49ea10bf61e57e580f905384","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b116e597cb0609c584647cef02e6e864385c7ca0.dockerfile"}