{"seed":3070875110,"processedDockerfileHash":"d00d5a5234dd02f3047bf2c4f6eb77ee","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","do-not-have-secrets","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER Przemyslaw Lis <przemek@concertoplatform.com>\nARG CRAN_MIRROR=https://cloud.r-project.org\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV DB_HOST=\"localhost\"\nENV DB_PORT=\"3306\"\nENV DB_NAME=\"concerto\"\nENV DB_USER=\"concerto\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV NGINX_PORT=\"80\"\nENV PHP_FPM_PM=\"dynamic\"\nENV PHP_FPM_PM_MAX_CHILDREN=\"30\"\nENV PHP_FPM_PM_START_SERVERS=\"10\"\nENV PHP_FPM_PM_MIN_SPARE_SERVERS=\"5\"\nENV PHP_FPM_PM_MAX_SPARE_SERVERS=\"15\"\nENV PHP_FPM_PM_PROCESS_IDLE_TIMEOUT=\"10s\"\nENV PHP_FPM_PM_MAX_REQUESTS=\"300\"\nENV TZ=\"Europe/London\"\nCOPY . /app/concerto/\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document / https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends ca-certificates=20211016ubuntu0.18.04.1 gnupg=2.2.4-1ubuntu1.6 -y \\\n && echo \"deb $CRAN_MIRROR/bin/linux/ubuntu bionic-cran35/\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --no-tty --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends cron=3.0pl1-128.1ubuntu1.2 curl=7.58.0-2ubuntu3.24 gettext=0.19.8.1-6ubuntu0.3 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 libmariadbclient-dev=1:10.1.48-0ubuntu0.18.04.1 libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 locales=2.27-3ubuntu1.6 nginx=1.14.0-0ubuntu1.11 php7.2-curl=7.2.24-0ubuntu0.18.04.17 php7.2-mbstring=7.2.24-0ubuntu0.18.04.17 php7.2-mysql=7.2.24-0ubuntu0.18.04.17 php7.2-xml=7.2.24-0ubuntu0.18.04.17 php7.2-zip=7.2.24-0ubuntu0.18.04.17 php-fpm=1:7.2+60ubuntu1 procps=2:3.3.12-3ubuntu1.2 r-base=3.4.4-1ubuntu1 r-base-dev=3.4.4-1ubuntu1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n && locale-gen \"en_US.UTF-8\" \\\n && Rscript -e \"install.packages(c('session','RMySQL','jsonlite','catR','digest','rjson','httr'), repos='$CRAN_MIRROR')\" \\\n && R CMD INSTALL /app/concerto/src/Concerto/TestBundle/Resources/R/concerto5 \\\n && chmod +x /wait-for-it.sh \\\n && php /app/concerto/bin/console concerto:r:cache \\\n && crontab -l | { cat ;echo \"* * * * * . /root/env.sh; /usr/bin/php /app/concerto/bin/console concerto:schedule:tick --env=prod >> /var/log/cron.log 2>&1\" ; } | crontab - \\\n && crontab -l | { cat ;echo \"0 0 * * * . /root/env.sh; /usr/bin/php /app/concerto/bin/console concerto:sessions:clear --env=prod >> /var/log/cron.log 2>&1\" ; } | crontab - \\\n && crontab -l | { cat ;echo \"*/5 * * * * . /root/env.sh; /usr/bin/php /app/concerto/bin/console concerto:sessions:log --env=prod >> /var/log/cron.log 2>&1\" ; } | crontab - \\\n && rm -f /etc/nginx/sites-available/default \\\n && rm -f /etc/nginx/sites-enabled/default \\\n && ln -fs /etc/nginx/sites-available/concerto.conf /etc/nginx/sites-enabled/concerto.conf\nCOPY build/docker/php/php.ini /etc/php/7.2/fpm/php.ini\nCOPY build/docker/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY build/docker/nginx/concerto.conf.tpl /etc/nginx/sites-available/concerto.conf.tpl\nCOPY build/docker/php-fpm/php-fpm.conf /etc/php/7.2/fpm/php-fpm.conf\nCOPY build/docker/php-fpm/www.conf /etc/php/7.2/fpm/pool.d/www.conf\nRUN rm -rf /app/concerto/src/Concerto/PanelBundle/Resources/public/files \\\n && rm -rf /app/concerto/src/Concerto/TestBundle/Resources/sessions\nEXPOSE 80/tcp 9000/tcp\nWORKDIR /app/concerto\nHEALTHCHECK --interval=60s --start-period=60s CMD curl -f http://localhost/api/check/health || exit 1\nCMD printenv | sed 's/^\\([a-zA-Z0-9_]*\\)=\\(.*\\)$/export \\1=\"\\2\"/g' > /root/env.sh \\\n && mkdir -p /data/files \\\n && chown -R www-data:www-data /data/files \\\n && mkdir -p /data/sessions \\\n && chown -R www-data:www-data /data/sessions \\\n && ln -sf /data/files /app/concerto/src/Concerto/PanelBundle/Resources/public \\\n && ln -sf /data/sessions /app/concerto/src/Concerto/TestBundle/Resources \\\n && /wait-for-it.sh $DB_HOST:$DB_PORT -t 300 \\\n && php bin/console concerto:setup --env=prod --admin-pass=$CONCERTO_PASSWORD \\\n && php bin/console concerto:content:import --env=prod --convert \\\n && rm -rf var/cache/* \\\n && php bin/console cache:warmup --env=prod \\\n && chown -R www-data:www-data var/cache \\\n && chown -R www-data:www-data var/logs \\\n && chown -R www-data:www-data var/sessions \\\n && chown -R www-data:www-data src/Concerto/PanelBundle/Resources/import \\\n && chown -R www-data:www-data src/Concerto/TestBundle/Resources/R/fifo \\\n && cron \\\n && cat /etc/nginx/sites-available/concerto.conf.tpl | sed \"s/{{nginx_port}}/$NGINX_PORT/g\" > /etc/nginx/sites-available/concerto.conf \\\n && service nginx start \\\n && php bin/console concerto:forker:start --env=prod \\\n && /etc/init.d/php7.2-fpm start \\\n && tail -F var/logs/prod.log -n 0\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER Przemyslaw Lis <przemek@concertoplatform.com>\nARG CRAN_MIRROR=https://cloud.r-project.org\nENV CONCERTO_PASSWORD=\"admin\"\nENV DB_HOST=\"localhost\"\nENV DB_PORT=\"3306\"\nENV DB_NAME=\"concerto\"\nENV DB_USER=\"concerto\"\nENV DB_PASSWORD=\"changeme\"\nENV NGINX_PORT=\"80\"\nENV PHP_FPM_PM=\"dynamic\"\nENV PHP_FPM_PM_MAX_CHILDREN=\"30\"\nENV PHP_FPM_PM_START_SERVERS=\"10\"\nENV PHP_FPM_PM_MIN_SPARE_SERVERS=\"5\"\nENV PHP_FPM_PM_MAX_SPARE_SERVERS=\"15\"\nENV PHP_FPM_PM_PROCESS_IDLE_TIMEOUT=\"10s\"\nENV PHP_FPM_PM_MAX_REQUESTS=\"300\"\nENV TZ=\"Europe/London\"\nCOPY . /app/concerto/\nADD https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh /\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone \\\n && apt-get update -y \\\n && apt-get install ca-certificates gnupg -y \\\n && echo \"deb $CRAN_MIRROR/bin/linux/ubuntu bionic-cran35/\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --no-tty --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && apt-get update -y \\\n && apt-get install cron curl gettext libcurl4-openssl-dev libmariadbclient-dev libxml2-dev libssl-dev locales nginx php7.2-curl php7.2-mbstring php7.2-mysql php7.2-xml php7.2-zip php-fpm procps r-base r-base-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n && locale-gen \"en_US.UTF-8\" \\\n && Rscript -e \"install.packages(c('session','RMySQL','jsonlite','catR','digest','rjson','httr'), repos='$CRAN_MIRROR')\" \\\n && R CMD INSTALL /app/concerto/src/Concerto/TestBundle/Resources/R/concerto5 \\\n && chmod +x /wait-for-it.sh \\\n && php /app/concerto/bin/console concerto:r:cache \\\n && crontab -l | { cat ;echo \"* * * * * . /root/env.sh; /usr/bin/php /app/concerto/bin/console concerto:schedule:tick --env=prod >> /var/log/cron.log 2>&1\" ; } | crontab - \\\n && crontab -l | { cat ;echo \"0 0 * * * . /root/env.sh; /usr/bin/php /app/concerto/bin/console concerto:sessions:clear --env=prod >> /var/log/cron.log 2>&1\" ; } | crontab - \\\n && crontab -l | { cat ;echo \"*/5 * * * * . /root/env.sh; /usr/bin/php /app/concerto/bin/console concerto:sessions:log --env=prod >> /var/log/cron.log 2>&1\" ; } | crontab - \\\n && rm -f /etc/nginx/sites-available/default \\\n && rm -f /etc/nginx/sites-enabled/default \\\n && ln -fs /etc/nginx/sites-available/concerto.conf /etc/nginx/sites-enabled/concerto.conf\nCOPY build/docker/php/php.ini /etc/php/7.2/fpm/php.ini\nCOPY build/docker/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY build/docker/nginx/concerto.conf.tpl /etc/nginx/sites-available/concerto.conf.tpl\nCOPY build/docker/php-fpm/php-fpm.conf /etc/php/7.2/fpm/php-fpm.conf\nCOPY build/docker/php-fpm/www.conf /etc/php/7.2/fpm/pool.d/www.conf\nRUN rm -rf /app/concerto/src/Concerto/PanelBundle/Resources/public/files \\\n && rm -rf /app/concerto/src/Concerto/TestBundle/Resources/sessions\nEXPOSE 80/tcp 9000/tcp\nWORKDIR /app/concerto\nHEALTHCHECK --interval=60s --start-period=60s CMD curl -f http://localhost/api/check/health || exit 1\nCMD printenv | sed 's/^\\([a-zA-Z0-9_]*\\)=\\(.*\\)$/export \\1=\"\\2\"/g' > /root/env.sh \\\n && mkdir -p /data/files \\\n && chown -R www-data:www-data /data/files \\\n && mkdir -p /data/sessions \\\n && chown -R www-data:www-data /data/sessions \\\n && ln -sf /data/files /app/concerto/src/Concerto/PanelBundle/Resources/public \\\n && ln -sf /data/sessions /app/concerto/src/Concerto/TestBundle/Resources \\\n && /wait-for-it.sh $DB_HOST:$DB_PORT -t 300 \\\n && php bin/console concerto:setup --env=prod --admin-pass=$CONCERTO_PASSWORD \\\n && php bin/console concerto:content:import --env=prod --convert \\\n && rm -rf var/cache/* \\\n && php bin/console cache:warmup --env=prod \\\n && chown -R www-data:www-data var/cache \\\n && chown -R www-data:www-data var/logs \\\n && chown -R www-data:www-data var/sessions \\\n && chown -R www-data:www-data src/Concerto/PanelBundle/Resources/import \\\n && chown -R www-data:www-data src/Concerto/TestBundle/Resources/R/fifo \\\n && cron \\\n && cat /etc/nginx/sites-available/concerto.conf.tpl | sed \"s/{{nginx_port}}/$NGINX_PORT/g\" > /etc/nginx/sites-available/concerto.conf \\\n && service nginx start \\\n && php bin/console concerto:forker:start --env=prod \\\n && /etc/init.d/php7.2-fpm start \\\n && tail -F var/logs/prod.log -n 0\n","injectedSmells":[],"originalDockerfileHash":"bfbc846d379355f304bf9adab709d5e6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER Przemyslaw Lis <przemek@concertoplatform.com>\nARG CRAN_MIRROR=https://cloud.r-project.org\nENV CONCERTO_PASSWORD=\"admin\"\nENV DB_HOST=\"localhost\"\nENV DB_PORT=\"3306\"\nENV DB_NAME=\"concerto\"\nENV DB_USER=\"concerto\"\nENV DB_PASSWORD=\"changeme\"\nENV NGINX_PORT=\"80\"\nENV PHP_FPM_PM=\"dynamic\"\nENV PHP_FPM_PM_MAX_CHILDREN=\"30\"\nENV PHP_FPM_PM_START_SERVERS=\"10\"\nENV PHP_FPM_PM_MIN_SPARE_SERVERS=\"5\"\nENV PHP_FPM_PM_MAX_SPARE_SERVERS=\"15\"\nENV PHP_FPM_PM_PROCESS_IDLE_TIMEOUT=\"10s\"\nENV PHP_FPM_PM_MAX_REQUESTS=\"300\"\nENV TZ=\"Europe/London\"\nCOPY . /app/concerto/\nADD https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh /\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone \\\n && apt-get update -y \\\n && apt-get install ca-certificates gnupg -y \\\n && echo \"deb $CRAN_MIRROR/bin/linux/ubuntu bionic-cran35/\" | tee -a /etc/apt/sources.list \\\n && apt-key adv --no-tty --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && apt-get update -y \\\n && apt-get install cron curl gettext libcurl4-openssl-dev libmariadbclient-dev libxml2-dev libssl-dev locales nginx php7.2-curl php7.2-mbstring php7.2-mysql php7.2-xml php7.2-zip php-fpm procps r-base r-base-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n && locale-gen \"en_US.UTF-8\" \\\n && Rscript -e \"install.packages(c('session','RMySQL','jsonlite','catR','digest','rjson','httr'), repos='$CRAN_MIRROR')\" \\\n && R CMD INSTALL /app/concerto/src/Concerto/TestBundle/Resources/R/concerto5 \\\n && chmod +x /wait-for-it.sh \\\n && php /app/concerto/bin/console concerto:r:cache \\\n && crontab -l | { cat ;echo \"* * * * * . /root/env.sh; /usr/bin/php /app/concerto/bin/console concerto:schedule:tick --env=prod >> /var/log/cron.log 2>&1\" ; } | crontab - \\\n && crontab -l | { cat ;echo \"0 0 * * * . /root/env.sh; /usr/bin/php /app/concerto/bin/console concerto:sessions:clear --env=prod >> /var/log/cron.log 2>&1\" ; } | crontab - \\\n && crontab -l | { cat ;echo \"*/5 * * * * . /root/env.sh; /usr/bin/php /app/concerto/bin/console concerto:sessions:log --env=prod >> /var/log/cron.log 2>&1\" ; } | crontab - \\\n && rm -f /etc/nginx/sites-available/default \\\n && rm -f /etc/nginx/sites-enabled/default \\\n && ln -fs /etc/nginx/sites-available/concerto.conf /etc/nginx/sites-enabled/concerto.conf\nCOPY build/docker/php/php.ini /etc/php/7.2/fpm/php.ini\nCOPY build/docker/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY build/docker/nginx/concerto.conf.tpl /etc/nginx/sites-available/concerto.conf.tpl\nCOPY build/docker/php-fpm/php-fpm.conf /etc/php/7.2/fpm/php-fpm.conf\nCOPY build/docker/php-fpm/www.conf /etc/php/7.2/fpm/pool.d/www.conf\nRUN rm -rf /app/concerto/src/Concerto/PanelBundle/Resources/public/files \\\n && rm -rf /app/concerto/src/Concerto/TestBundle/Resources/sessions\nEXPOSE 80/tcp 9000/tcp\nWORKDIR /app/concerto\nHEALTHCHECK --interval=60s --start-period=60s CMD curl -f http://localhost/api/check/health || exit 1\nCMD printenv | sed 's/^\\([a-zA-Z0-9_]*\\)=\\(.*\\)$/export \\1=\"\\2\"/g' > /root/env.sh \\\n && mkdir -p /data/files \\\n && chown -R www-data:www-data /data/files \\\n && mkdir -p /data/sessions \\\n && chown -R www-data:www-data /data/sessions \\\n && ln -sf /data/files /app/concerto/src/Concerto/PanelBundle/Resources/public \\\n && ln -sf /data/sessions /app/concerto/src/Concerto/TestBundle/Resources \\\n && /wait-for-it.sh $DB_HOST:$DB_PORT -t 300 \\\n && php bin/console concerto:setup --env=prod --admin-pass=$CONCERTO_PASSWORD \\\n && php bin/console concerto:content:import --env=prod --convert \\\n && rm -rf var/cache/* \\\n && php bin/console cache:warmup --env=prod \\\n && chown -R www-data:www-data var/cache \\\n && chown -R www-data:www-data var/logs \\\n && chown -R www-data:www-data var/sessions \\\n && chown -R www-data:www-data src/Concerto/PanelBundle/Resources/import \\\n && chown -R www-data:www-data src/Concerto/TestBundle/Resources/R/fifo \\\n && cron \\\n && cat /etc/nginx/sites-available/concerto.conf.tpl | sed \"s/{{nginx_port}}/$NGINX_PORT/g\" > /etc/nginx/sites-available/concerto.conf \\\n && service nginx start \\\n && php bin/console concerto:forker:start --env=prod \\\n && /etc/init.d/php7.2-fpm start \\\n && tail -F var/logs/prod.log -n 0\n","originalDockerfileUglifiedHash":"bfbc846d379355f304bf9adab709d5e6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b27f2b24e73d3201955508a53124514f27889950.dockerfile"}