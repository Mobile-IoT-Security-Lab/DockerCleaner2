{"seed":1905781132,"processedDockerfileHash":"3f1d3b5fca9d2becfe12c397e0a2b394","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for Flarum, based on Flarum's Vagrantfile\n#   (https://github.com/flarum/flarum/blob/master/Vagrantfile)\n#   which uses scripts from Vaprobash\n#   (https://github.com/fideloper/Vaprobash)\n#   Run with:\n#   docker-compose up flarum\n#   docker-compose run --service-ports flarum <custom command, e.g. /bin/bash>\nFROM phusion/baseimage\nMAINTAINER Sebastien Pujadas http://pujadas.net\nENV REFRESHED_AT=\"2015-05-12\"\n#  ##############################################################################\n#                                       PHP\n#  ##############################################################################\n#  ## update repository for PHP 5.6\n#   note: triggers non-fatal error due to non-ASCII characters in repo name\n#         (gpg: key E5267A6C: public key \"Launchpad PPA for Ond\\xc5\\x99ej Surï¿½\" imported)\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n && add-apt-repository -y ppa:ondrej/php5-5.6 \\\n && apt-key update \\\n && :\n#  ## install base packages and PHP\nRUN (apt-get update ;apt-get install --no-install-recommends ack-grep build-essential=12.9ubuntu3 curl=7.88.1-7ubuntu1 git-core php5-cli php5-fpm php5-mysql php5-pgsql php5-sqlite php5-curl php5-gd php5-gmp php5-mcrypt php5-memcached php5-imagick php5-intl php5-xdebug software-properties-common=0.99.35 unzip=6.0-27ubuntu1 -qqy )\n#  ## configure PHP (FPM and CLI)\nCOPY php-fpm.ini.sed /etc/php5/fpm/php.ini.sed\nRUN sed -i.bak -f /etc/php5/fpm/php.ini.sed /etc/php5/fpm/php.ini \\\n && rm /etc/php5/fpm/php.ini.sed\nCOPY php-cli.ini.sed /etc/php5/cli/php.ini.sed\nRUN sed -i.bak -f /etc/php5/cli/php.ini.sed /etc/php5/cli/php.ini \\\n && rm /etc/php5/cli/php.ini.sed\nCOPY php-fpm.conf.sed /etc/php5/fpm/php-fpm.conf.sed\nRUN sed -i.bak -f /etc/php5/fpm/php-fpm.conf.sed /etc/php5/fpm/php-fpm.conf \\\n && rm /etc/php5/fpm/php-fpm.conf.sed\nCOPY www.conf.sed /etc/php5/fpm/pool.d/www.conf.sed\nRUN sed -i.bak -f /etc/php5/fpm/pool.d/www.conf.sed /etc/php5/fpm/pool.d/www.conf \\\n && rm /etc/php5/fpm/pool.d/www.conf.sed\nCOPY xdebug.ini /etc/php5/mods-available/xdebug.ini\n#  ##############################################################################\n#                                    nginx\n#  ##############################################################################\n#  ## install nginx\nRUN add-apt-repository -y ppa:nginx/stable \\\n && apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends nginx=1.22.0-1ubuntu3 -qqy )\n#  ## configure nginx\nCOPY nginx.conf.sed /etc/nginx/nginx.conf.sed\nRUN sed -i.bak -f /etc/nginx/nginx.conf.sed /etc/nginx/nginx.conf \\\n && rm /etc/nginx/nginx.conf.sed\nCOPY nginx-localhost.conf /etc/nginx/sites-available/localhost\nRUN rm -f /etc/nginx/sites-enabled/default \\\n && ln -s /etc/nginx/sites-available/localhost /etc/nginx/sites-enabled/localhost\nCOPY php-fpm-nginx.ini.sed /etc/php5/fpm/php.ini.sed\nRUN sed -i.bak -f /etc/php5/fpm/php.ini.sed /etc/php5/fpm/php.ini \\\n && rm /etc/php5/fpm/php.ini.sed\n#  ##############################################################################\n#                                     MySQL\n#  ##############################################################################\n#  ## install MySQL\nRUN add-apt-repository -y ppa:ondrej/mysql-5.6 \\\n && :\nCOPY mysql-debconf-selections /tmp/mysql-debconf-selections\nRUN debconf-set-selections /tmp/mysql-debconf-selections \\\n && rm /tmp/mysql-debconf-selections\nRUN (apt-get update ;apt-get install --no-install-recommends mysql-server-5.6 -qqy )\n#  ## configure MySQL\n#   As per http://txt.fliglio.com/2013/11/creating-a-mysql-docker-container/#comment-1600036544\nCOPY mysqld_bind_address_all.cnf /etc/mysql/conf.d/mysqld_bind_address_all.cnf\nRUN chmod 644 /etc/mysql/conf.d/mysqld_bind_address_all.cnf\n#   http://txt.fliglio.com/2013/11/creating-a-mysql-docker-container/#comment-1566459566\nRUN service mysql start \\\n && mysqladmin --silent --wait=30 ping \\\n && mysql -uroot -proot -e \"GRANT ALL ON *.* TO 'root'@'%' IDENTIFIED BY 'root' WITH GRANT OPTION;FLUSH PRIVILEGES;\" \\\n && sleep 1 \\\n && service mysql stop\n#  ##############################################################################\n#                                   memcached\n#  ##############################################################################\n#  ## install memcached\nRUN (apt-get update ;apt-get install --no-install-recommends memcached=1.6.18-1 -qqy )\n#  ##############################################################################\n#                                   beanstalkd\n#  ##############################################################################\n#  ## install beanstalkd\nRUN (apt-get update ;apt-get install --no-install-recommends beanstalkd=1.12-2 -qqy )\n#  ##############################################################################\n#                                    NodeJS\n#  ##############################################################################\n#  ## install NVM\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.25.1/install.sh | bash\n#  ## install NodeJS and configure NPM\n#   but first create link from sh to bash (instead of dash) to be able to source files\nRUN ln -sf /bin/bash /bin/sh\nRUN . ~/.nvm/nvm.sh \\\n && nvm install 0.12.2 \\\n && nvm alias default 0.12.2 \\\n && nvm use default \\\n && npm config set prefix /opt/npm \\\n && echo -e \"\\nexport PATH=$PATH:/opt/npm/bin\\nexport NODE_PATH=$NODE_PATH:/opt/npm/lib/node_modules\" >> ~/.bashrc\nENV PATH=\"$PATH:/opt/npm/bin\"\nENV NODE_PATH=\"$NODE_PATH:/opt/npm/lib/node_modules\"\n#  ##############################################################################\n#                                    Composer\n#  ##############################################################################\n#  ## install Composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && sudo mv composer.phar /usr/local/bin/composer\n#  ## provision Composer\nRUN composer global require franzl/studio:dev-master\n#  ##############################################################################\n#                                     Flarum\n#  ##############################################################################\n#   prerequisites\nRUN (apt-get update ;apt-get install --no-install-recommends exuberant-ctags=1:5.9~svn20110310-18 phantomjs zsh=5.9-4 -qqy )\nRUN . ~/.nvm/nvm.sh \\\n && npm install bower@1.8.14 gulp@4.0.2 -g\nENV FLARUM_ROOT=\"/opt/flarum\"\n#   download Flarum\nRUN mkdir -p ${FLARUM_ROOT} \\\n && cd ${FLARUM_ROOT} \\\n && git clone --recursive https://github.com/flarum/flarum . \\\n && git checkout d5229bd3d0c060bb95a93b974538cdb204802739 \\\n && cd ${FLARUM_ROOT}/system/core \\\n && git checkout aae3e989c4940671e73095478d4ab9f2939e28e8\n#  # Note: pinning to specific commits to make the image consistenly rebuildable\n#   install skeleton app dependencies\nRUN cd ${FLARUM_ROOT}/system \\\n && cp ${FLARUM_ROOT}/system/.env.example ${FLARUM_ROOT}/system/.env \\\n && cd ${FLARUM_ROOT}/system/core \\\n && composer install --prefer-dist \\\n && cd ${FLARUM_ROOT}/system \\\n && composer install --prefer-dist \\\n && composer dump-autoload\n#   create database, run installation migrations and seeds, seed database with fake data\nRUN service mysql start \\\n && mysqladmin --silent --wait=30 ping \\\n && mysql -u root -proot -e 'create database flarum' \\\n && cd ${FLARUM_ROOT}/system \\\n && php artisan vendor:publish \\\n && php artisan flarum:install \\\n && mysql -u root -proot flarum -e \"insert into config values ('extensions_enabled','[]')\" \\\n && php artisan flarum:seed \\\n && sleep 1 \\\n && service mysql stop\n#  # Note: the manual insertion of the extensions_enabled key in the config table is a workaround\n#  #   pending the resolution of https://github.com/flarum/core/issues/76\n#   install JS dependencies\nRUN . ~/.nvm/nvm.sh \\\n && cd ${FLARUM_ROOT}/system/core/js \\\n && bower --allow-root install \\\n && cd ${FLARUM_ROOT}/system/core/js/forum \\\n && npm install \\\n && gulp \\\n && cd ${FLARUM_ROOT}/system/core/js/admin \\\n && npm install \\\n && gulp\nRUN chown -R www-data ${FLARUM_ROOT}\nEXPOSE 80/tcp\nWORKDIR ${FLARUM_ROOT}\nCOPY ./start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\nCMD [\"/usr/local/bin/start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for Flarum, based on Flarum's Vagrantfile\n#  (https://github.com/flarum/flarum/blob/master/Vagrantfile)\n#  which uses scripts from Vaprobash\n#  (https://github.com/fideloper/Vaprobash)\n#  Run with:\n#  docker-compose up flarum\n#  docker-compose run --service-ports flarum <custom command, e.g. /bin/bash>\nFROM phusion/baseimage\nMAINTAINER Sebastien Pujadas http://pujadas.net\nENV REFRESHED_AT=\"2015-05-12\"\n# ##############################################################################\n#                                      PHP\n# ##############################################################################\n# ## update repository for PHP 5.6\n#  note: triggers non-fatal error due to non-ASCII characters in repo name\n#        (gpg: key E5267A6C: public key \"Launchpad PPA for Ond\\xc5\\x99ej Surï¿½\" imported)\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n && add-apt-repository -y ppa:ondrej/php5-5.6 \\\n && apt-key update \\\n && apt-get update -qq\n# ## install base packages and PHP\nRUN apt-get install ack-grep build-essential curl git-core php5-cli php5-fpm php5-mysql php5-pgsql php5-sqlite php5-curl php5-gd php5-gmp php5-mcrypt php5-memcached php5-imagick php5-intl php5-xdebug software-properties-common unzip -qqy\n# ## configure PHP (FPM and CLI)\nADD php-fpm.ini.sed /etc/php5/fpm/php.ini.sed\nRUN sed -i.bak -f /etc/php5/fpm/php.ini.sed /etc/php5/fpm/php.ini \\\n && rm /etc/php5/fpm/php.ini.sed\nADD php-cli.ini.sed /etc/php5/cli/php.ini.sed\nRUN sed -i.bak -f /etc/php5/cli/php.ini.sed /etc/php5/cli/php.ini \\\n && rm /etc/php5/cli/php.ini.sed\nADD php-fpm.conf.sed /etc/php5/fpm/php-fpm.conf.sed\nRUN sed -i.bak -f /etc/php5/fpm/php-fpm.conf.sed /etc/php5/fpm/php-fpm.conf \\\n && rm /etc/php5/fpm/php-fpm.conf.sed\nADD www.conf.sed /etc/php5/fpm/pool.d/www.conf.sed\nRUN sed -i.bak -f /etc/php5/fpm/pool.d/www.conf.sed /etc/php5/fpm/pool.d/www.conf \\\n && rm /etc/php5/fpm/pool.d/www.conf.sed\nADD xdebug.ini /etc/php5/mods-available/xdebug.ini\n# ##############################################################################\n#                                   nginx\n# ##############################################################################\n# ## install nginx\nRUN add-apt-repository -y ppa:nginx/stable \\\n && apt-get update -qq \\\n && apt-get install nginx -qqy\n# ## configure nginx\nADD nginx.conf.sed /etc/nginx/nginx.conf.sed\nRUN sed -i.bak -f /etc/nginx/nginx.conf.sed /etc/nginx/nginx.conf \\\n && rm /etc/nginx/nginx.conf.sed\nADD nginx-localhost.conf /etc/nginx/sites-available/localhost\nRUN rm -f /etc/nginx/sites-enabled/default \\\n && ln -s /etc/nginx/sites-available/localhost /etc/nginx/sites-enabled/localhost\nADD php-fpm-nginx.ini.sed /etc/php5/fpm/php.ini.sed\nRUN sed -i.bak -f /etc/php5/fpm/php.ini.sed /etc/php5/fpm/php.ini \\\n && rm /etc/php5/fpm/php.ini.sed\n# ##############################################################################\n#                                    MySQL\n# ##############################################################################\n# ## install MySQL\nRUN add-apt-repository -y ppa:ondrej/mysql-5.6 \\\n && apt-get update -qq\nADD mysql-debconf-selections /tmp/mysql-debconf-selections\nRUN debconf-set-selections /tmp/mysql-debconf-selections \\\n && rm /tmp/mysql-debconf-selections\nRUN apt-get install mysql-server-5.6 -qqy\n# ## configure MySQL\n#  As per http://txt.fliglio.com/2013/11/creating-a-mysql-docker-container/#comment-1600036544\nADD mysqld_bind_address_all.cnf /etc/mysql/conf.d/mysqld_bind_address_all.cnf\nRUN chmod 644 /etc/mysql/conf.d/mysqld_bind_address_all.cnf\n#  http://txt.fliglio.com/2013/11/creating-a-mysql-docker-container/#comment-1566459566\nRUN service mysql start \\\n && mysqladmin --silent --wait=30 ping \\\n && mysql -uroot -proot -e \"GRANT ALL ON *.* TO 'root'@'%' IDENTIFIED BY 'root' WITH GRANT OPTION;FLUSH PRIVILEGES;\" \\\n && sleep 1 \\\n && service mysql stop\n# ##############################################################################\n#                                  memcached\n# ##############################################################################\n# ## install memcached\nRUN apt-get install memcached -qqy\n# ##############################################################################\n#                                  beanstalkd\n# ##############################################################################\n# ## install beanstalkd\nRUN apt-get install beanstalkd -qqy\n# ##############################################################################\n#                                   NodeJS\n# ##############################################################################\n# ## install NVM\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.25.1/install.sh | bash\n# ## install NodeJS and configure NPM\n#  but first create link from sh to bash (instead of dash) to be able to source files\nRUN ln -sf /bin/bash /bin/sh\nRUN . ~/.nvm/nvm.sh \\\n && nvm install 0.12.2 \\\n && nvm alias default 0.12.2 \\\n && nvm use default \\\n && npm config set prefix /opt/npm \\\n && echo -e \"\\nexport PATH=$PATH:/opt/npm/bin\\nexport NODE_PATH=$NODE_PATH:/opt/npm/lib/node_modules\" >> ~/.bashrc\nENV PATH=\"$PATH:/opt/npm/bin\"\nENV NODE_PATH=\"$NODE_PATH:/opt/npm/lib/node_modules\"\n# ##############################################################################\n#                                   Composer\n# ##############################################################################\n# ## install Composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && sudo mv composer.phar /usr/local/bin/composer\n# ## provision Composer\nRUN composer global require franzl/studio:dev-master\n# ##############################################################################\n#                                    Flarum\n# ##############################################################################\n#  prerequisites\nRUN apt-get install exuberant-ctags phantomjs zsh -qqy\nRUN . ~/.nvm/nvm.sh \\\n && npm install bower gulp -g\nENV FLARUM_ROOT=\"/opt/flarum\"\n#  download Flarum\nRUN mkdir -p ${FLARUM_ROOT} \\\n && cd ${FLARUM_ROOT} \\\n && git clone --recursive https://github.com/flarum/flarum . \\\n && git checkout d5229bd3d0c060bb95a93b974538cdb204802739 \\\n && cd ${FLARUM_ROOT}/system/core \\\n && git checkout aae3e989c4940671e73095478d4ab9f2939e28e8\n# # Note: pinning to specific commits to make the image consistenly rebuildable\n#  install skeleton app dependencies\nRUN cd ${FLARUM_ROOT}/system \\\n && cp ${FLARUM_ROOT}/system/.env.example ${FLARUM_ROOT}/system/.env \\\n && cd ${FLARUM_ROOT}/system/core \\\n && composer install --prefer-dist \\\n && cd ${FLARUM_ROOT}/system \\\n && composer install --prefer-dist \\\n && composer dump-autoload\n#  create database, run installation migrations and seeds, seed database with fake data\nRUN service mysql start \\\n && mysqladmin --silent --wait=30 ping \\\n && mysql -u root -proot -e 'create database flarum' \\\n && cd ${FLARUM_ROOT}/system \\\n && php artisan vendor:publish \\\n && php artisan flarum:install \\\n && mysql -u root -proot flarum -e \"insert into config values ('extensions_enabled','[]')\" \\\n && php artisan flarum:seed \\\n && sleep 1 \\\n && service mysql stop\n# # Note: the manual insertion of the extensions_enabled key in the config table is a workaround\n# #   pending the resolution of https://github.com/flarum/core/issues/76\n#  install JS dependencies\nRUN . ~/.nvm/nvm.sh \\\n && cd ${FLARUM_ROOT}/system/core/js \\\n && bower --allow-root install \\\n && cd ${FLARUM_ROOT}/system/core/js/forum \\\n && npm install \\\n && gulp \\\n && cd ${FLARUM_ROOT}/system/core/js/admin \\\n && npm install \\\n && gulp\nRUN chown -R www-data ${FLARUM_ROOT}\nEXPOSE 80/tcp\nWORKDIR ${FLARUM_ROOT}\nADD ./start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\nCMD [\"/usr/local/bin/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"459f5237e86f8f39dd6564037197e98c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for Flarum, based on Flarum's Vagrantfile\n#   (https://github.com/flarum/flarum/blob/master/Vagrantfile)\n#   which uses scripts from Vaprobash\n#   (https://github.com/fideloper/Vaprobash)\n#   Run with:\n#   docker-compose up flarum\n#   docker-compose run --service-ports flarum <custom command, e.g. /bin/bash>\nFROM phusion/baseimage\nMAINTAINER Sebastien Pujadas http://pujadas.net\nENV REFRESHED_AT=\"2015-05-12\"\n#  ##############################################################################\n#                                       PHP\n#  ##############################################################################\n#  ## update repository for PHP 5.6\n#   note: triggers non-fatal error due to non-ASCII characters in repo name\n#         (gpg: key E5267A6C: public key \"Launchpad PPA for Ond\\xc5\\x99ej Surï¿½\" imported)\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n && add-apt-repository -y ppa:ondrej/php5-5.6 \\\n && apt-key update \\\n && apt-get update -qq\n#  ## install base packages and PHP\nRUN apt-get install ack-grep build-essential curl git-core php5-cli php5-fpm php5-mysql php5-pgsql php5-sqlite php5-curl php5-gd php5-gmp php5-mcrypt php5-memcached php5-imagick php5-intl php5-xdebug software-properties-common unzip -qqy\n#  ## configure PHP (FPM and CLI)\nADD php-fpm.ini.sed /etc/php5/fpm/php.ini.sed\nRUN sed -i.bak -f /etc/php5/fpm/php.ini.sed /etc/php5/fpm/php.ini \\\n && rm /etc/php5/fpm/php.ini.sed\nADD php-cli.ini.sed /etc/php5/cli/php.ini.sed\nRUN sed -i.bak -f /etc/php5/cli/php.ini.sed /etc/php5/cli/php.ini \\\n && rm /etc/php5/cli/php.ini.sed\nADD php-fpm.conf.sed /etc/php5/fpm/php-fpm.conf.sed\nRUN sed -i.bak -f /etc/php5/fpm/php-fpm.conf.sed /etc/php5/fpm/php-fpm.conf \\\n && rm /etc/php5/fpm/php-fpm.conf.sed\nADD www.conf.sed /etc/php5/fpm/pool.d/www.conf.sed\nRUN sed -i.bak -f /etc/php5/fpm/pool.d/www.conf.sed /etc/php5/fpm/pool.d/www.conf \\\n && rm /etc/php5/fpm/pool.d/www.conf.sed\nADD xdebug.ini /etc/php5/mods-available/xdebug.ini\n#  ##############################################################################\n#                                    nginx\n#  ##############################################################################\n#  ## install nginx\nRUN add-apt-repository -y ppa:nginx/stable \\\n && apt-get update -qq \\\n && apt-get install nginx -qqy\n#  ## configure nginx\nADD nginx.conf.sed /etc/nginx/nginx.conf.sed\nRUN sed -i.bak -f /etc/nginx/nginx.conf.sed /etc/nginx/nginx.conf \\\n && rm /etc/nginx/nginx.conf.sed\nADD nginx-localhost.conf /etc/nginx/sites-available/localhost\nRUN rm -f /etc/nginx/sites-enabled/default \\\n && ln -s /etc/nginx/sites-available/localhost /etc/nginx/sites-enabled/localhost\nADD php-fpm-nginx.ini.sed /etc/php5/fpm/php.ini.sed\nRUN sed -i.bak -f /etc/php5/fpm/php.ini.sed /etc/php5/fpm/php.ini \\\n && rm /etc/php5/fpm/php.ini.sed\n#  ##############################################################################\n#                                     MySQL\n#  ##############################################################################\n#  ## install MySQL\nRUN add-apt-repository -y ppa:ondrej/mysql-5.6 \\\n && apt-get update -qq\nADD mysql-debconf-selections /tmp/mysql-debconf-selections\nRUN debconf-set-selections /tmp/mysql-debconf-selections \\\n && rm /tmp/mysql-debconf-selections\nRUN apt-get install mysql-server-5.6 -qqy\n#  ## configure MySQL\n#   As per http://txt.fliglio.com/2013/11/creating-a-mysql-docker-container/#comment-1600036544\nADD mysqld_bind_address_all.cnf /etc/mysql/conf.d/mysqld_bind_address_all.cnf\nRUN chmod 644 /etc/mysql/conf.d/mysqld_bind_address_all.cnf\n#   http://txt.fliglio.com/2013/11/creating-a-mysql-docker-container/#comment-1566459566\nRUN service mysql start \\\n && mysqladmin --silent --wait=30 ping \\\n && mysql -uroot -proot -e \"GRANT ALL ON *.* TO 'root'@'%' IDENTIFIED BY 'root' WITH GRANT OPTION;FLUSH PRIVILEGES;\" \\\n && sleep 1 \\\n && service mysql stop\n#  ##############################################################################\n#                                   memcached\n#  ##############################################################################\n#  ## install memcached\nRUN apt-get install memcached -qqy\n#  ##############################################################################\n#                                   beanstalkd\n#  ##############################################################################\n#  ## install beanstalkd\nRUN apt-get install beanstalkd -qqy\n#  ##############################################################################\n#                                    NodeJS\n#  ##############################################################################\n#  ## install NVM\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.25.1/install.sh | bash\n#  ## install NodeJS and configure NPM\n#   but first create link from sh to bash (instead of dash) to be able to source files\nRUN ln -sf /bin/bash /bin/sh\nRUN . ~/.nvm/nvm.sh \\\n && nvm install 0.12.2 \\\n && nvm alias default 0.12.2 \\\n && nvm use default \\\n && npm config set prefix /opt/npm \\\n && echo -e \"\\nexport PATH=$PATH:/opt/npm/bin\\nexport NODE_PATH=$NODE_PATH:/opt/npm/lib/node_modules\" >> ~/.bashrc\nENV PATH=\"$PATH:/opt/npm/bin\"\nENV NODE_PATH=\"$NODE_PATH:/opt/npm/lib/node_modules\"\n#  ##############################################################################\n#                                    Composer\n#  ##############################################################################\n#  ## install Composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && sudo mv composer.phar /usr/local/bin/composer\n#  ## provision Composer\nRUN composer global require franzl/studio:dev-master\n#  ##############################################################################\n#                                     Flarum\n#  ##############################################################################\n#   prerequisites\nRUN apt-get install exuberant-ctags phantomjs zsh -qqy\nRUN . ~/.nvm/nvm.sh \\\n && npm install bower gulp -g\nENV FLARUM_ROOT=\"/opt/flarum\"\n#   download Flarum\nRUN mkdir -p ${FLARUM_ROOT} \\\n && cd ${FLARUM_ROOT} \\\n && git clone --recursive https://github.com/flarum/flarum . \\\n && git checkout d5229bd3d0c060bb95a93b974538cdb204802739 \\\n && cd ${FLARUM_ROOT}/system/core \\\n && git checkout aae3e989c4940671e73095478d4ab9f2939e28e8\n#  # Note: pinning to specific commits to make the image consistenly rebuildable\n#   install skeleton app dependencies\nRUN cd ${FLARUM_ROOT}/system \\\n && cp ${FLARUM_ROOT}/system/.env.example ${FLARUM_ROOT}/system/.env \\\n && cd ${FLARUM_ROOT}/system/core \\\n && composer install --prefer-dist \\\n && cd ${FLARUM_ROOT}/system \\\n && composer install --prefer-dist \\\n && composer dump-autoload\n#   create database, run installation migrations and seeds, seed database with fake data\nRUN service mysql start \\\n && mysqladmin --silent --wait=30 ping \\\n && mysql -u root -proot -e 'create database flarum' \\\n && cd ${FLARUM_ROOT}/system \\\n && php artisan vendor:publish \\\n && php artisan flarum:install \\\n && mysql -u root -proot flarum -e \"insert into config values ('extensions_enabled','[]')\" \\\n && php artisan flarum:seed \\\n && sleep 1 \\\n && service mysql stop\n#  # Note: the manual insertion of the extensions_enabled key in the config table is a workaround\n#  #   pending the resolution of https://github.com/flarum/core/issues/76\n#   install JS dependencies\nRUN . ~/.nvm/nvm.sh \\\n && cd ${FLARUM_ROOT}/system/core/js \\\n && bower --allow-root install \\\n && cd ${FLARUM_ROOT}/system/core/js/forum \\\n && npm install \\\n && gulp \\\n && cd ${FLARUM_ROOT}/system/core/js/admin \\\n && npm install \\\n && gulp\nRUN chown -R www-data ${FLARUM_ROOT}\nEXPOSE 80/tcp\nWORKDIR ${FLARUM_ROOT}\nADD ./start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\nCMD [\"/usr/local/bin/start.sh\"]\n","originalDockerfileUglifiedHash":"dfcfbad278f472c36a742b2cb246598b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c6dd82d6a8b50fecc90f11cc0e0f4bf82416f7ee.dockerfile"}