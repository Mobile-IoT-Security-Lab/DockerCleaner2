{"seed":588860638,"processedDockerfileHash":"abb9824ef955d2eadbf20e25da620547","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM debian:stretch-slim\nMAINTAINER Rafael Römhild <rafael@roemhild.de>\nARG EJABBERD_UID=999\nARG EJABBERD_GID=999\nENV EJABBERD_BRANCH=\"18.12\" \\\n    EJABBERD_USER=\"ejabberd\" \\\n    EJABBERD_HTTPS=\"true\" \\\n    EJABBERD_STARTTLS=\"true\" \\\n    EJABBERD_S2S_SSL=\"true\" \\\n    EJABBERD_HOME=\"/opt/ejabberd\" \\\n    EJABBERD_DEBUG_MODE=\"false\" \\\n    HOME=\"$EJABBERD_HOME\" \\\n    PATH=\"$EJABBERD_HOME/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/sbin\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    XMPP_DOMAIN=\"localhost\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    GOSU_VERSION=\"1.10\"\n#   Add ejabberd user and group\nRUN groupadd --gid $EJABBERD_GID $EJABBERD_USER \\\n && useradd -m -g $EJABBERD_USER -d $EJABBERD_HOME --uid $EJABBERD_UID $EJABBERD_USER\n#   Install packages and perform cleanup\nRUN set -x \\\n && buildDeps=' automake build-essential dirmngr erlang-src erlang-dev git-core gpg libexpat-dev libgd-dev libssl-dev libsqlite3-dev libwebp-dev libyaml-dev wget zlib1g-dev ' \\\n && requiredAptPackages=' ca-certificates erlang-base-hipe erlang-snmp erlang-ssl erlang-ssh erlang-tools erlang-xmerl erlang-corba erlang-diameter erlang-eldap erlang-eunit erlang-ic erlang-odbc erlang-os-mon erlang-parsetools erlang-percept erlang-typer gsfonts imagemagick inotify-tools libgd3 libwebp6 libyaml-0-2 locales ldnsutils openssl python2.7 python-jinja2 python-mysqldb ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps $requiredAptPackages -y \\\n && dpkg-reconfigure locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen \\\n && locale-gen \\\n && cd /tmp \\\n && git clone https://github.com/processone/ejabberd.git --branch $EJABBERD_BRANCH --single-branch --depth=1 \\\n && cd ejabberd \\\n && chmod +x ./autogen.sh \\\n && ./autogen.sh \\\n && ./configure --enable-user=$EJABBERD_USER --enable-all --disable-tools --disable-pam \\\n && make debug=$EJABBERD_DEBUG_MODE \\\n && make install \\\n && mkdir $EJABBERD_HOME/ssl \\\n && mkdir $EJABBERD_HOME/conf \\\n && mkdir $EJABBERD_HOME/backup \\\n && mkdir $EJABBERD_HOME/upload \\\n && mkdir $EJABBERD_HOME/database \\\n && mkdir $EJABBERD_HOME/module_source \\\n && cd $EJABBERD_HOME \\\n && rm -rf /tmp/ejabberd \\\n && rm -rf /etc/ejabberd \\\n && ln -sf $EJABBERD_HOME/conf /etc/ejabberd \\\n && rm -rf /usr/local/etc/ejabberd \\\n && ln -sf $EJABBERD_HOME/conf /usr/local/etc/ejabberd \\\n && chown -R $EJABBERD_USER: $EJABBERD_HOME \\\n && wget -P /usr/local/share/ca-certificates/cacert.org http://www.cacert.org/certs/root.crt http://www.cacert.org/certs/class3.crt \\\n && update-ca-certificates \\\n && set -ex \\\n && dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" \\\n && wget -O /usr/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n && wget -O /usr/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --no-tty --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --no-tty --batch --verify /usr/bin/gosu.asc /usr/bin/gosu \\\n && chmod +sx /usr/bin/gosu \\\n && gosu nobody true \\\n && rm -r /usr/bin/gosu.asc \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove $buildDeps\n#   Create logging directories\nRUN mkdir -p /var/log/ejabberd\nRUN touch /var/log/ejabberd/crash.log /var/log/ejabberd/error.log /var/log/ejabberd/erlang.log\n#   Wrapper for setting config on disk from environment\n#   allows setting things like XMPP domain at runtime\nCOPY ./run.sh /sbin/run\n#   Add run scripts\nCOPY ./scripts $EJABBERD_HOME/scripts\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document $EJABBERD_HOME/scripts/lib/auth_mysql.py https://raw.githubusercontent.com/rankenstein/ejabberd-auth-mysql/master/auth_mysql.py\nRUN chmod a+rx $EJABBERD_HOME/scripts/lib/auth_mysql.py\nRUN chmod +x /usr/local/lib/eimp*/priv/bin/eimp\n#   Add config templates\nCOPY ./conf /opt/ejabberd/conf\n#   Continue as user\nUSER $EJABBERD_USER\n#   Set workdir to ejabberd root\nWORKDIR $EJABBERD_HOME\nVOLUME [\"$EJABBERD_HOME/database\", \"$EJABBERD_HOME/ssl\", \"$EJABBERD_HOME/backup\", \"$EJABBERD_HOME/upload\"]\nEXPOSE 4560/tcp 5222/tcp 5269/tcp 5280/tcp 5443/tcp\nCMD [\"start\"]\nENTRYPOINT [\"run\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch-slim\nMAINTAINER Rafael Römhild <rafael@roemhild.de>\nARG EJABBERD_UID=999\nARG EJABBERD_GID=999\nENV EJABBERD_BRANCH=\"18.12\" \\\n    EJABBERD_USER=\"ejabberd\" \\\n    EJABBERD_HTTPS=\"true\" \\\n    EJABBERD_STARTTLS=\"true\" \\\n    EJABBERD_S2S_SSL=\"true\" \\\n    EJABBERD_HOME=\"/opt/ejabberd\" \\\n    EJABBERD_DEBUG_MODE=\"false\" \\\n    HOME=\"$EJABBERD_HOME\" \\\n    PATH=\"$EJABBERD_HOME/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/sbin\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    XMPP_DOMAIN=\"localhost\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    GOSU_VERSION=\"1.10\"\n#  Add ejabberd user and group\nRUN groupadd --gid $EJABBERD_GID $EJABBERD_USER \\\n && useradd -m -g $EJABBERD_USER -d $EJABBERD_HOME --uid $EJABBERD_UID $EJABBERD_USER\n#  Install packages and perform cleanup\nRUN set -x \\\n && buildDeps=' automake build-essential dirmngr erlang-src erlang-dev git-core gpg libexpat-dev libgd-dev libssl-dev libsqlite3-dev libwebp-dev libyaml-dev wget zlib1g-dev ' \\\n && requiredAptPackages=' ca-certificates erlang-base-hipe erlang-snmp erlang-ssl erlang-ssh erlang-tools erlang-xmerl erlang-corba erlang-diameter erlang-eldap erlang-eunit erlang-ic erlang-odbc erlang-os-mon erlang-parsetools erlang-percept erlang-typer gsfonts imagemagick inotify-tools libgd3 libwebp6 libyaml-0-2 locales ldnsutils openssl python2.7 python-jinja2 python-mysqldb ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps $requiredAptPackages -y \\\n && dpkg-reconfigure locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen \\\n && locale-gen \\\n && cd /tmp \\\n && git clone https://github.com/processone/ejabberd.git --branch $EJABBERD_BRANCH --single-branch --depth=1 \\\n && cd ejabberd \\\n && chmod +x ./autogen.sh \\\n && ./autogen.sh \\\n && ./configure --enable-user=$EJABBERD_USER --enable-all --disable-tools --disable-pam \\\n && make debug=$EJABBERD_DEBUG_MODE \\\n && make install \\\n && mkdir $EJABBERD_HOME/ssl \\\n && mkdir $EJABBERD_HOME/conf \\\n && mkdir $EJABBERD_HOME/backup \\\n && mkdir $EJABBERD_HOME/upload \\\n && mkdir $EJABBERD_HOME/database \\\n && mkdir $EJABBERD_HOME/module_source \\\n && cd $EJABBERD_HOME \\\n && rm -rf /tmp/ejabberd \\\n && rm -rf /etc/ejabberd \\\n && ln -sf $EJABBERD_HOME/conf /etc/ejabberd \\\n && rm -rf /usr/local/etc/ejabberd \\\n && ln -sf $EJABBERD_HOME/conf /usr/local/etc/ejabberd \\\n && chown -R $EJABBERD_USER: $EJABBERD_HOME \\\n && wget -P /usr/local/share/ca-certificates/cacert.org http://www.cacert.org/certs/root.crt http://www.cacert.org/certs/class3.crt \\\n && update-ca-certificates \\\n && set -ex \\\n && dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" \\\n && wget -O /usr/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n && wget -O /usr/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --no-tty --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --no-tty --batch --verify /usr/bin/gosu.asc /usr/bin/gosu \\\n && chmod +sx /usr/bin/gosu \\\n && gosu nobody true \\\n && rm -r /usr/bin/gosu.asc \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove $buildDeps\n#  Create logging directories\nRUN mkdir -p /var/log/ejabberd\nRUN touch /var/log/ejabberd/crash.log /var/log/ejabberd/error.log /var/log/ejabberd/erlang.log\n#  Wrapper for setting config on disk from environment\n#  allows setting things like XMPP domain at runtime\nADD ./run.sh /sbin/run\n#  Add run scripts\nADD ./scripts $EJABBERD_HOME/scripts\nADD https://raw.githubusercontent.com/rankenstein/ejabberd-auth-mysql/master/auth_mysql.py $EJABBERD_HOME/scripts/lib/auth_mysql.py\nRUN chmod a+rx $EJABBERD_HOME/scripts/lib/auth_mysql.py\nRUN chmod +x /usr/local/lib/eimp*/priv/bin/eimp\n#  Add config templates\nADD ./conf /opt/ejabberd/conf\n#  Continue as user\nUSER $EJABBERD_USER\n#  Set workdir to ejabberd root\nWORKDIR $EJABBERD_HOME\nVOLUME [\"$EJABBERD_HOME/database\", \"$EJABBERD_HOME/ssl\", \"$EJABBERD_HOME/backup\", \"$EJABBERD_HOME/upload\"]\nEXPOSE 4560/tcp 5222/tcp 5269/tcp 5280/tcp 5443/tcp\nCMD [\"start\"]\nENTRYPOINT [\"run\"]\n","injectedSmells":[],"originalDockerfileHash":"8d47a5de895824afc7bbf48123194cde","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch-slim\nMAINTAINER Rafael Römhild <rafael@roemhild.de>\nARG EJABBERD_UID=999\nARG EJABBERD_GID=999\nENV EJABBERD_BRANCH=\"18.12\" \\\n    EJABBERD_USER=\"ejabberd\" \\\n    EJABBERD_HTTPS=\"true\" \\\n    EJABBERD_STARTTLS=\"true\" \\\n    EJABBERD_S2S_SSL=\"true\" \\\n    EJABBERD_HOME=\"/opt/ejabberd\" \\\n    EJABBERD_DEBUG_MODE=\"false\" \\\n    HOME=\"$EJABBERD_HOME\" \\\n    PATH=\"$EJABBERD_HOME/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/sbin\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    XMPP_DOMAIN=\"localhost\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    GOSU_VERSION=\"1.10\"\n#   Add ejabberd user and group\nRUN groupadd --gid $EJABBERD_GID $EJABBERD_USER \\\n && useradd -m -g $EJABBERD_USER -d $EJABBERD_HOME --uid $EJABBERD_UID $EJABBERD_USER\n#   Install packages and perform cleanup\nRUN set -x \\\n && buildDeps=' automake build-essential dirmngr erlang-src erlang-dev git-core gpg libexpat-dev libgd-dev libssl-dev libsqlite3-dev libwebp-dev libyaml-dev wget zlib1g-dev ' \\\n && requiredAptPackages=' ca-certificates erlang-base-hipe erlang-snmp erlang-ssl erlang-ssh erlang-tools erlang-xmerl erlang-corba erlang-diameter erlang-eldap erlang-eunit erlang-ic erlang-odbc erlang-os-mon erlang-parsetools erlang-percept erlang-typer gsfonts imagemagick inotify-tools libgd3 libwebp6 libyaml-0-2 locales ldnsutils openssl python2.7 python-jinja2 python-mysqldb ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps $requiredAptPackages -y \\\n && dpkg-reconfigure locales \\\n && locale-gen C.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen \\\n && locale-gen \\\n && cd /tmp \\\n && git clone https://github.com/processone/ejabberd.git --branch $EJABBERD_BRANCH --single-branch --depth=1 \\\n && cd ejabberd \\\n && chmod +x ./autogen.sh \\\n && ./autogen.sh \\\n && ./configure --enable-user=$EJABBERD_USER --enable-all --disable-tools --disable-pam \\\n && make debug=$EJABBERD_DEBUG_MODE \\\n && make install \\\n && mkdir $EJABBERD_HOME/ssl \\\n && mkdir $EJABBERD_HOME/conf \\\n && mkdir $EJABBERD_HOME/backup \\\n && mkdir $EJABBERD_HOME/upload \\\n && mkdir $EJABBERD_HOME/database \\\n && mkdir $EJABBERD_HOME/module_source \\\n && cd $EJABBERD_HOME \\\n && rm -rf /tmp/ejabberd \\\n && rm -rf /etc/ejabberd \\\n && ln -sf $EJABBERD_HOME/conf /etc/ejabberd \\\n && rm -rf /usr/local/etc/ejabberd \\\n && ln -sf $EJABBERD_HOME/conf /usr/local/etc/ejabberd \\\n && chown -R $EJABBERD_USER: $EJABBERD_HOME \\\n && wget -P /usr/local/share/ca-certificates/cacert.org http://www.cacert.org/certs/root.crt http://www.cacert.org/certs/class3.crt \\\n && update-ca-certificates \\\n && set -ex \\\n && dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" \\\n && wget -O /usr/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n && wget -O /usr/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --no-tty --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --no-tty --batch --verify /usr/bin/gosu.asc /usr/bin/gosu \\\n && chmod +sx /usr/bin/gosu \\\n && gosu nobody true \\\n && rm -r /usr/bin/gosu.asc \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove $buildDeps\n#   Create logging directories\nRUN mkdir -p /var/log/ejabberd\nRUN touch /var/log/ejabberd/crash.log /var/log/ejabberd/error.log /var/log/ejabberd/erlang.log\n#   Wrapper for setting config on disk from environment\n#   allows setting things like XMPP domain at runtime\nADD ./run.sh /sbin/run\n#   Add run scripts\nADD ./scripts $EJABBERD_HOME/scripts\nADD https://raw.githubusercontent.com/rankenstein/ejabberd-auth-mysql/master/auth_mysql.py $EJABBERD_HOME/scripts/lib/auth_mysql.py\nRUN chmod a+rx $EJABBERD_HOME/scripts/lib/auth_mysql.py\nRUN chmod +x /usr/local/lib/eimp*/priv/bin/eimp\n#   Add config templates\nADD ./conf /opt/ejabberd/conf\n#   Continue as user\nUSER $EJABBERD_USER\n#   Set workdir to ejabberd root\nWORKDIR $EJABBERD_HOME\nVOLUME [\"$EJABBERD_HOME/database\", \"$EJABBERD_HOME/ssl\", \"$EJABBERD_HOME/backup\", \"$EJABBERD_HOME/upload\"]\nEXPOSE 4560/tcp 5222/tcp 5269/tcp 5280/tcp 5443/tcp\nCMD [\"start\"]\nENTRYPOINT [\"run\"]\n","originalDockerfileUglifiedHash":"7f4b3a6d8c86398938fbdff938e53c20","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5271c635e84d4babc5957dc8a78c2f58deb9f56b.dockerfile"}