{"seed":597568267,"processedDockerfileHash":"4a727a4124a15a1cf97bd7cc2405456a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   © Copyright IBM Corporation 2017, 2019.\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  ################## Dockerfile for Salt version 2019.2.0 ##################################\n#\n#   This Dockerfile builds a basic installation of Salt.\n#\n#   SaltStack makes software for complex systems management at scale. \n#   SaltStack is the company that created and maintains the Salt Open project and develops and sells SaltStack Enterprise software, services and support.\n#   Salt is a new approach to infrastructure management built on a dynamic communication bus. \n#   Salt can be used for data-driven orchestration, remote execution for any infrastructure, configuration management for any app stack, and much more.\n#\n#   To build this image, from the directory containing this Dockerfile\n#   (assuming that the file is named Dockerfile):\n#   docker build -t <image_name> .\n#\n#\n#   To start container from image & start an application in production mode\n#   docker run -v <host_path>:/etc/salt -v <host_dir>:/data -d <image>\n#   \n#   The official website\n#   https://saltstack.com/\n#\n#  #################################################################################\n#   Base Image\nFROM s390x/ubuntu:16.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/\"\nWORKDIR $SOURCE_DIR\nARG SALT_VER=v2019.2.0\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends g++ gcc git libffi-dev libsasl2-dev libssl-dev libxml2-dev libxslt1-dev libzmq3-dev make man python3-dev python3-pip tar wget -y \\\n && pip3 install pyzmq 'PyYAML<5.1' pycrypto msgpack-python jinja2 psutil futures tornado \\\n && git clone git://github.com/saltstack/salt \\\n && cd salt \\\n && git checkout $SALT_VER \\\n && pip3 install -e . \\\n && cd $SOURCE_DIR \\\n && mkdir -p etc/salt/pki/master \\\n && mkdir -p etc/salt/pki/minion \\\n && cp ./salt/conf/master ./salt/conf/minion etc/salt/ \\\n && cd etc/salt/ \\\n && sed -i 's/#user: root/user: root/g' master \\\n && sed -i 's,#root_dir: /,'\"root_dir: $SOURCE_DIR\"',' master \\\n && sed -i 's/#master: salt/master: localhost/g' minion \\\n && sed -i 's/#user: root/user: root/g' minion \\\n && sed -i 's,#root_dir: /,'\"root_dir: $SOURCE_DIR\"',' minion \\\n && apt-get remove -y gcc git g++ make wget \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf salt/ \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /etc/salt\nVOLUME /data\nCMD salt-master -c ./etc/salt &; salt-minion -c ./etc/salt\n#   End of Dockerfile\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  © Copyright IBM Corporation 2017, 2019.\n#  LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n# ################## Dockerfile for Salt version 2019.2.0 ##################################\n#\n#  This Dockerfile builds a basic installation of Salt.\n#\n#  SaltStack makes software for complex systems management at scale. \n#  SaltStack is the company that created and maintains the Salt Open project and develops and sells SaltStack Enterprise software, services and support.\n#  Salt is a new approach to infrastructure management built on a dynamic communication bus. \n#  Salt can be used for data-driven orchestration, remote execution for any infrastructure, configuration management for any app stack, and much more.\n#\n#  To build this image, from the directory containing this Dockerfile\n#  (assuming that the file is named Dockerfile):\n#  docker build -t <image_name> .\n#\n#\n#  To start container from image & start an application in production mode\n#  docker run -v <host_path>:/etc/salt -v <host_dir>:/data -d <image>\n#  \n#  The official website\n#  https://saltstack.com/\n#\n# #################################################################################\n#  Base Image\nFROM s390x/ubuntu:16.04\n#  The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/\"\nWORKDIR $SOURCE_DIR\nARG SALT_VER=v2019.2.0\n#  Install dependencies\nRUN apt-get update \\\n && apt-get install g++ gcc git libffi-dev libsasl2-dev libssl-dev libxml2-dev libxslt1-dev libzmq3-dev make man python3-dev python3-pip tar wget -y \\\n && pip3 install pyzmq 'PyYAML<5.1' pycrypto msgpack-python jinja2 psutil futures tornado \\\n && git clone git://github.com/saltstack/salt \\\n && cd salt \\\n && git checkout $SALT_VER \\\n && pip3 install -e . \\\n && cd $SOURCE_DIR \\\n && mkdir -p etc/salt/pki/master \\\n && mkdir -p etc/salt/pki/minion \\\n && cp ./salt/conf/master ./salt/conf/minion etc/salt/ \\\n && cd etc/salt/ \\\n && sed -i 's/#user: root/user: root/g' master \\\n && sed -i 's,#root_dir: /,'\"root_dir: $SOURCE_DIR\"',' master \\\n && sed -i 's/#master: salt/master: localhost/g' minion \\\n && sed -i 's/#user: root/user: root/g' minion \\\n && sed -i 's,#root_dir: /,'\"root_dir: $SOURCE_DIR\"',' minion \\\n && apt-get remove -y gcc git g++ make wget \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf salt/ \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /etc/salt\nVOLUME /data\nCMD salt-master -c ./etc/salt &; salt-minion -c ./etc/salt\n#  End of Dockerfile\n","injectedSmells":[],"originalDockerfileHash":"fdad67979011b6becc12e50e239e2b0b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   © Copyright IBM Corporation 2017, 2019.\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  ################## Dockerfile for Salt version 2019.2.0 ##################################\n#\n#   This Dockerfile builds a basic installation of Salt.\n#\n#   SaltStack makes software for complex systems management at scale. \n#   SaltStack is the company that created and maintains the Salt Open project and develops and sells SaltStack Enterprise software, services and support.\n#   Salt is a new approach to infrastructure management built on a dynamic communication bus. \n#   Salt can be used for data-driven orchestration, remote execution for any infrastructure, configuration management for any app stack, and much more.\n#\n#   To build this image, from the directory containing this Dockerfile\n#   (assuming that the file is named Dockerfile):\n#   docker build -t <image_name> .\n#\n#\n#   To start container from image & start an application in production mode\n#   docker run -v <host_path>:/etc/salt -v <host_dir>:/data -d <image>\n#   \n#   The official website\n#   https://saltstack.com/\n#\n#  #################################################################################\n#   Base Image\nFROM s390x/ubuntu:16.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/\"\nWORKDIR $SOURCE_DIR\nARG SALT_VER=v2019.2.0\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install g++ gcc git libffi-dev libsasl2-dev libssl-dev libxml2-dev libxslt1-dev libzmq3-dev make man python3-dev python3-pip tar wget -y \\\n && pip3 install pyzmq 'PyYAML<5.1' pycrypto msgpack-python jinja2 psutil futures tornado \\\n && git clone git://github.com/saltstack/salt \\\n && cd salt \\\n && git checkout $SALT_VER \\\n && pip3 install -e . \\\n && cd $SOURCE_DIR \\\n && mkdir -p etc/salt/pki/master \\\n && mkdir -p etc/salt/pki/minion \\\n && cp ./salt/conf/master ./salt/conf/minion etc/salt/ \\\n && cd etc/salt/ \\\n && sed -i 's/#user: root/user: root/g' master \\\n && sed -i 's,#root_dir: /,'\"root_dir: $SOURCE_DIR\"',' master \\\n && sed -i 's/#master: salt/master: localhost/g' minion \\\n && sed -i 's/#user: root/user: root/g' minion \\\n && sed -i 's,#root_dir: /,'\"root_dir: $SOURCE_DIR\"',' minion \\\n && apt-get remove -y gcc git g++ make wget \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf salt/ \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /etc/salt\nVOLUME /data\nCMD salt-master -c ./etc/salt &; salt-minion -c ./etc/salt\n#   End of Dockerfile\n","originalDockerfileUglifiedHash":"109cabddcefa1f08b4a572d3a4db49ec","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4e3fecc364a25bbfd13a633cbea07ea899cb3316.dockerfile"}