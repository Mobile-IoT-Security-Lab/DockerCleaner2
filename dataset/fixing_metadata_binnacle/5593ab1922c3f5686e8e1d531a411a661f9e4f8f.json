{"seed":1397774840,"processedDockerfileHash":"6ab2afdc297f9d42c5977762b4bdad01","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   Use an official Python runtime as a parent image\nFROM drupaldocker/php:7.2-cli\n#  ##########################\n#   Install headless Chrome\n#   Borrowed from https://github.com/GoogleChrome/puppeteer/docs/troubleshooting.md#running-puppeteer-in-docker\n#  ##########################\n#   See https://crbug.com/795759\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends gnupg2 libgconf-2-4 -yq )\n#   Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n#   Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n#   installs, work.\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends wget -y ) \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge --auto-remove -y curl \\\n && rm -rf /src/*.deb\n#   It's a good idea to use dumb-init to help prevent zombie chrome processes.\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64\nRUN chmod +x /usr/local/bin/dumb-init\n#  ##########################\n#   Install build tools things\n#  ##########################\n#   Set the working directory to /build-tools-ci\nWORKDIR /build-tools-ci\n#   Copy the current directory contents into the container at /build-tools-ci\nCOPY . /build-tools-ci\n#   Collect the components we need for this image\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends ruby jq curl -y )\nRUN gem install circle-cli --version 0.1.3\nRUN composer -n global require -n \"hirak/prestissimo:^0.3\"\n#   Create an unpriviliged testuser\nRUN groupadd -g 999 tester \\\n && useradd -r -m -u 999 -g tester tester \\\n && chown -R tester /usr/local \\\n && chown -R tester /build-tools-ci\nUSER tester\nRUN mkdir -p /usr/local/share/terminus\nRUN /usr/bin/env COMPOSER_BIN_DIR=/usr/local/bin composer -n --working-dir=/usr/local/share/terminus require pantheon-systems/terminus:\"^2\"\nRUN mkdir -p /usr/local/share/clu\nRUN /usr/bin/env COMPOSER_BIN_DIR=/usr/local/bin composer -n --working-dir=/usr/local/share/clu require danielbachhuber/composer-lock-updater:^0.4.0\nRUN mkdir -p /usr/local/share/drush\nRUN /usr/bin/env composer -n --working-dir=/usr/local/share/drush require drush/drush \"^8\"\nRUN ln -fs /usr/local/share/drush/vendor/drush/drush/drush /usr/local/bin/drush\nRUN chmod +x /usr/local/bin/drush\n#   Add a collection of useful Terminus plugins\nENV TERMINUS_PLUGINS_DIR=\"/usr/local/share/terminus-plugins\"\nRUN mkdir -p /usr/local/share/terminus-plugins\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-build-tools-plugin:^2.0.0-beta12\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-secrets-plugin:^1.3\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-rsync-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-quicksilver-plugin:^1.3\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-composer-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-drupal-console-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-mass-update:^1.1\nRUN composer -n create-project --no-dev -d /usr/local/share/terminus-plugins pantheon-systems/terminus-aliases-plugin:^1.2\n#   TODO: Re-add the site clone plugin once it has been updated to work with Terminus 2\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-site-clone-plugin:^2\n#   Add hub in case anyone wants to automate GitHub PR creation, etc.\nRUN curl -LO https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz \\\n && tar xzvf hub-linux-amd64-2.11.2.tgz \\\n && ln -s /build-tools-ci/hub-linux-amd64-2.11.2/bin/hub /usr/local/bin/hub\n#   Add lab in case anyone wants to automate GitLab MR creation, etc.\nRUN curl -s https://raw.githubusercontent.com/zaquestion/lab/master/install.sh | bash\n#   Add phpcs for use in checking code style\nRUN mkdir ~/phpcs \\\n && cd ~/phpcs \\\n && COMPOSER_BIN_DIR=/usr/local/bin composer require squizlabs/php_codesniffer:^2.7\n#   Add phpunit for unit testing\nRUN mkdir ~/phpunit \\\n && cd ~/phpunit \\\n && COMPOSER_BIN_DIR=/usr/local/bin composer require phpunit/phpunit:^6\n#   Add bats for functional testing\nRUN git clone https://github.com/sstephenson/bats.git ; bats/install.sh /usr/local\n#   Add behat for more functional testing\nRUN mkdir ~/behat \\\n && cd ~/behat \\\n && COMPOSER_BIN_DIR=/usr/local/bin composer require \"behat/behat:^3.5\" \"behat/mink:*\" \"behat/mink-extension:^2.2\" \"behat/mink-goutte-driver:^1.2\" \"drupal/drupal-extension:*\"\nENTRYPOINT [\"dumb-init\", \"--\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Use an official Python runtime as a parent image\nFROM drupaldocker/php:7.2-cli\n# ##########################\n#  Install headless Chrome\n#  Borrowed from https://github.com/GoogleChrome/puppeteer/docs/troubleshooting.md#running-puppeteer-in-docker\n# ##########################\n#  See https://crbug.com/795759\nRUN apt-get update \\\n && apt-get install gnupg2 libgconf-2-4 -yq\n#  Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n#  Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n#  installs, work.\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget -y \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge --auto-remove -y curl \\\n && rm -rf /src/*.deb\n#  It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n# ##########################\n#  Install build tools things\n# ##########################\n#  Set the working directory to /build-tools-ci\nWORKDIR /build-tools-ci\n#  Copy the current directory contents into the container at /build-tools-ci\nADD . /build-tools-ci\n#  Collect the components we need for this image\nRUN apt-get update\nRUN apt-get install ruby jq curl -y\nRUN gem install circle-cli\nRUN composer -n global require -n \"hirak/prestissimo:^0.3\"\n#  Create an unpriviliged testuser\nRUN groupadd -g 999 tester \\\n && useradd -r -m -u 999 -g tester tester \\\n && chown -R tester /usr/local \\\n && chown -R tester /build-tools-ci\nUSER tester\nRUN mkdir -p /usr/local/share/terminus\nRUN /usr/bin/env COMPOSER_BIN_DIR=/usr/local/bin composer -n --working-dir=/usr/local/share/terminus require pantheon-systems/terminus:\"^2\"\nRUN mkdir -p /usr/local/share/clu\nRUN /usr/bin/env COMPOSER_BIN_DIR=/usr/local/bin composer -n --working-dir=/usr/local/share/clu require danielbachhuber/composer-lock-updater:^0.4.0\nRUN mkdir -p /usr/local/share/drush\nRUN /usr/bin/env composer -n --working-dir=/usr/local/share/drush require drush/drush \"^8\"\nRUN ln -fs /usr/local/share/drush/vendor/drush/drush/drush /usr/local/bin/drush\nRUN chmod +x /usr/local/bin/drush\n#  Add a collection of useful Terminus plugins\nENV TERMINUS_PLUGINS_DIR=\"/usr/local/share/terminus-plugins\"\nRUN mkdir -p /usr/local/share/terminus-plugins\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-build-tools-plugin:^2.0.0-beta12\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-secrets-plugin:^1.3\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-rsync-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-quicksilver-plugin:^1.3\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-composer-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-drupal-console-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-mass-update:^1.1\nRUN composer -n create-project --no-dev -d /usr/local/share/terminus-plugins pantheon-systems/terminus-aliases-plugin:^1.2\n#  TODO: Re-add the site clone plugin once it has been updated to work with Terminus 2\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-site-clone-plugin:^2\n#  Add hub in case anyone wants to automate GitHub PR creation, etc.\nRUN curl -LO https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz \\\n && tar xzvf hub-linux-amd64-2.11.2.tgz \\\n && ln -s /build-tools-ci/hub-linux-amd64-2.11.2/bin/hub /usr/local/bin/hub\n#  Add lab in case anyone wants to automate GitLab MR creation, etc.\nRUN curl -s https://raw.githubusercontent.com/zaquestion/lab/master/install.sh | bash\n#  Add phpcs for use in checking code style\nRUN mkdir ~/phpcs \\\n && cd ~/phpcs \\\n && COMPOSER_BIN_DIR=/usr/local/bin composer require squizlabs/php_codesniffer:^2.7\n#  Add phpunit for unit testing\nRUN mkdir ~/phpunit \\\n && cd ~/phpunit \\\n && COMPOSER_BIN_DIR=/usr/local/bin composer require phpunit/phpunit:^6\n#  Add bats for functional testing\nRUN git clone https://github.com/sstephenson/bats.git ; bats/install.sh /usr/local\n#  Add behat for more functional testing\nRUN mkdir ~/behat \\\n && cd ~/behat \\\n && COMPOSER_BIN_DIR=/usr/local/bin composer require \"behat/behat:^3.5\" \"behat/mink:*\" \"behat/mink-extension:^2.2\" \"behat/mink-goutte-driver:^1.2\" \"drupal/drupal-extension:*\"\nENTRYPOINT [\"dumb-init\", \"--\"]\n","injectedSmells":[],"originalDockerfileHash":"40156b0c573e4d30deb22222535059f8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Use an official Python runtime as a parent image\nFROM drupaldocker/php:7.2-cli\n#  ##########################\n#   Install headless Chrome\n#   Borrowed from https://github.com/GoogleChrome/puppeteer/docs/troubleshooting.md#running-puppeteer-in-docker\n#  ##########################\n#   See https://crbug.com/795759\nRUN apt-get update \\\n && apt-get install gnupg2 libgconf-2-4 -yq\n#   Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n#   Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n#   installs, work.\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget -y \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge --auto-remove -y curl \\\n && rm -rf /src/*.deb\n#   It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n#  ##########################\n#   Install build tools things\n#  ##########################\n#   Set the working directory to /build-tools-ci\nWORKDIR /build-tools-ci\n#   Copy the current directory contents into the container at /build-tools-ci\nADD . /build-tools-ci\n#   Collect the components we need for this image\nRUN apt-get update\nRUN apt-get install ruby jq curl -y\nRUN gem install circle-cli\nRUN composer -n global require -n \"hirak/prestissimo:^0.3\"\n#   Create an unpriviliged testuser\nRUN groupadd -g 999 tester \\\n && useradd -r -m -u 999 -g tester tester \\\n && chown -R tester /usr/local \\\n && chown -R tester /build-tools-ci\nUSER tester\nRUN mkdir -p /usr/local/share/terminus\nRUN /usr/bin/env COMPOSER_BIN_DIR=/usr/local/bin composer -n --working-dir=/usr/local/share/terminus require pantheon-systems/terminus:\"^2\"\nRUN mkdir -p /usr/local/share/clu\nRUN /usr/bin/env COMPOSER_BIN_DIR=/usr/local/bin composer -n --working-dir=/usr/local/share/clu require danielbachhuber/composer-lock-updater:^0.4.0\nRUN mkdir -p /usr/local/share/drush\nRUN /usr/bin/env composer -n --working-dir=/usr/local/share/drush require drush/drush \"^8\"\nRUN ln -fs /usr/local/share/drush/vendor/drush/drush/drush /usr/local/bin/drush\nRUN chmod +x /usr/local/bin/drush\n#   Add a collection of useful Terminus plugins\nENV TERMINUS_PLUGINS_DIR=\"/usr/local/share/terminus-plugins\"\nRUN mkdir -p /usr/local/share/terminus-plugins\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-build-tools-plugin:^2.0.0-beta12\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-secrets-plugin:^1.3\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-rsync-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-quicksilver-plugin:^1.3\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-composer-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-drupal-console-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-mass-update:^1.1\nRUN composer -n create-project --no-dev -d /usr/local/share/terminus-plugins pantheon-systems/terminus-aliases-plugin:^1.2\n#   TODO: Re-add the site clone plugin once it has been updated to work with Terminus 2\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-site-clone-plugin:^2\n#   Add hub in case anyone wants to automate GitHub PR creation, etc.\nRUN curl -LO https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz \\\n && tar xzvf hub-linux-amd64-2.11.2.tgz \\\n && ln -s /build-tools-ci/hub-linux-amd64-2.11.2/bin/hub /usr/local/bin/hub\n#   Add lab in case anyone wants to automate GitLab MR creation, etc.\nRUN curl -s https://raw.githubusercontent.com/zaquestion/lab/master/install.sh | bash\n#   Add phpcs for use in checking code style\nRUN mkdir ~/phpcs \\\n && cd ~/phpcs \\\n && COMPOSER_BIN_DIR=/usr/local/bin composer require squizlabs/php_codesniffer:^2.7\n#   Add phpunit for unit testing\nRUN mkdir ~/phpunit \\\n && cd ~/phpunit \\\n && COMPOSER_BIN_DIR=/usr/local/bin composer require phpunit/phpunit:^6\n#   Add bats for functional testing\nRUN git clone https://github.com/sstephenson/bats.git ; bats/install.sh /usr/local\n#   Add behat for more functional testing\nRUN mkdir ~/behat \\\n && cd ~/behat \\\n && COMPOSER_BIN_DIR=/usr/local/bin composer require \"behat/behat:^3.5\" \"behat/mink:*\" \"behat/mink-extension:^2.2\" \"behat/mink-goutte-driver:^1.2\" \"drupal/drupal-extension:*\"\nENTRYPOINT [\"dumb-init\", \"--\"]\n","originalDockerfileUglifiedHash":"2e7c074eee40428879568a6fad2c6d58","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5593ab1922c3f5686e8e1d531a411a661f9e4f8f.dockerfile"}