{"seed":407986496,"processedDockerfileHash":"408a4181e1de60e019a95ce7bbc11054","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM buildpack-deps:jessie-curl\n#  FROM debian:stretch-slim\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates netbase -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN set -ex \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends dpkg-dev gcc libbz2-dev libc6-dev libexpat1-dev libffi-dev libgdbm-dev liblzma-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev make tk-dev uuid-dev wget xz-utils zlib1g-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) -y\nRUN wget -O openssl.tar.gz \"https://www.openssl.org/source/openssl-1.1.1.tar.gz\" \\\n && mkdir -p /usr/src/openssl \\\n && tar -xvzC /usr/src/openssl --strip-components=1 -f openssl.tar.gz\nRUN cd /usr/src/openssl \\\n && mkdir -p /usr/local/openssl \\\n && ./config --prefix=/usr/local/openssl \\\n && make \\\n && make install\nRUN mkdir -p /usr/local/python/3.7.0/src \\\n && mkdir /usr/local/python/3.7.0/bin \\\n && mkdir -p /usr/local/python/3.7.0/lib\nWORKDIR /usr/local/python/3.7.0/src\nENV PYTHON_VERSION=\"3.7.0\"\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PIP_VERSION=\"18.0\"\nRUN set -ex \\\n && buildDeps=' dpkg-dev tcl-dev tk-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr/local/python/3.7.0 --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip --with-openssl=/usr/local/openssl LDFLAGS=\"-L/usr/local/python/${PYTHON_VERSION}/extlib/lib -Wl,--rpath=/usr/local/python/${PYTHON_VERSION}/lib -Wl,--rpath=/usr/local/python/${PYTHON_VERSION}/extlib/lib -Wl,--rpath=/usr/local/openssl/lib\" \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && find /usr/local -depth\n#          && rm -rf /usr/src/python\nENV PYTHON_PATH=\"/usr/local/python/$PYTHON_VERSION\"\nENV PATH=\"$PYTHON_PATH/bin:$PATH\"\nENV PYTHON_PIP_VERSION=\"18.0\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python3 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN pip3 install virtualenv\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM buildpack-deps:jessie-curl\n# FROM debian:stretch-slim\n#  ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates netbase -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN set -ex \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends dpkg-dev gcc libbz2-dev libc6-dev libexpat1-dev libffi-dev libgdbm-dev liblzma-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev make tk-dev uuid-dev wget xz-utils zlib1g-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) -y\nRUN wget -O openssl.tar.gz \"https://www.openssl.org/source/openssl-1.1.1.tar.gz\" \\\n && mkdir -p /usr/src/openssl \\\n && tar -xvzC /usr/src/openssl --strip-components=1 -f openssl.tar.gz\nRUN cd /usr/src/openssl \\\n && mkdir -p /usr/local/openssl \\\n && ./config --prefix=/usr/local/openssl \\\n && make \\\n && make install\nRUN mkdir -p /usr/local/python/3.7.0/src \\\n && mkdir /usr/local/python/3.7.0/bin \\\n && mkdir -p /usr/local/python/3.7.0/lib\nWORKDIR /usr/local/python/3.7.0/src\nENV PYTHON_VERSION=\"3.7.0\"\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PIP_VERSION=\"18.0\"\nRUN set -ex \\\n && buildDeps=' dpkg-dev tcl-dev tk-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr/local/python/3.7.0 --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip --with-openssl=/usr/local/openssl LDFLAGS=\"-L/usr/local/python/${PYTHON_VERSION}/extlib/lib -Wl,--rpath=/usr/local/python/${PYTHON_VERSION}/lib -Wl,--rpath=/usr/local/python/${PYTHON_VERSION}/extlib/lib -Wl,--rpath=/usr/local/openssl/lib\" \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' +\n#         && rm -rf /usr/src/python\nENV PYTHON_PATH=\"/usr/local/python/$PYTHON_VERSION\"\nENV PATH=\"$PYTHON_PATH/bin:$PATH\"\nENV PYTHON_PIP_VERSION=\"18.0\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python3 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\nRUN pip3 install virtualenv\n","injectedSmells":[],"originalDockerfileHash":"8d1bd88f28f5dc1b660c40d818516140","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM buildpack-deps:jessie-curl\n#  FROM debian:stretch-slim\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates netbase -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN set -ex \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends dpkg-dev gcc libbz2-dev libc6-dev libexpat1-dev libffi-dev libgdbm-dev liblzma-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev make tk-dev uuid-dev wget xz-utils zlib1g-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) -y\nRUN wget -O openssl.tar.gz \"https://www.openssl.org/source/openssl-1.1.1.tar.gz\" \\\n && mkdir -p /usr/src/openssl \\\n && tar -xvzC /usr/src/openssl --strip-components=1 -f openssl.tar.gz\nRUN cd /usr/src/openssl \\\n && mkdir -p /usr/local/openssl \\\n && ./config --prefix=/usr/local/openssl \\\n && make \\\n && make install\nRUN mkdir -p /usr/local/python/3.7.0/src \\\n && mkdir /usr/local/python/3.7.0/bin \\\n && mkdir -p /usr/local/python/3.7.0/lib\nWORKDIR /usr/local/python/3.7.0/src\nENV PYTHON_VERSION=\"3.7.0\"\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PIP_VERSION=\"18.0\"\nRUN set -ex \\\n && buildDeps=' dpkg-dev tcl-dev tk-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --prefix=/usr/local/python/3.7.0 --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip --with-openssl=/usr/local/openssl LDFLAGS=\"-L/usr/local/python/${PYTHON_VERSION}/extlib/lib -Wl,--rpath=/usr/local/python/${PYTHON_VERSION}/lib -Wl,--rpath=/usr/local/python/${PYTHON_VERSION}/extlib/lib -Wl,--rpath=/usr/local/openssl/lib\" \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && find /usr/local -depth\n#          && rm -rf /usr/src/python\nENV PYTHON_PATH=\"/usr/local/python/$PYTHON_VERSION\"\nENV PATH=\"$PYTHON_PATH/bin:$PATH\"\nENV PYTHON_PIP_VERSION=\"18.0\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python3 get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN pip3 install virtualenv\n","originalDockerfileUglifiedHash":"d5e162f6112241b187cd486e93b9d135","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dbfab3c8aafbce3344a0611a23c90d990de57977.dockerfile"}