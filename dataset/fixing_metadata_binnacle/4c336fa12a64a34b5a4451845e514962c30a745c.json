{"seed":3325138908,"processedDockerfileHash":"d69c04e280352a9b83fecdb06cb90463","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons AS commons\nFROM ubuntu:latest\nLABEL maintainer=\"amazee.io\"\n#   Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /home /home\nRUN chmod g+w /etc/passwd \\\n && mkdir -p /home\nENV TMPDIR=\"/tmp\" \\\n    TMP=\"/tmp\" \\\n    HOME=\"/home\" \\\n    ENV=\"/home/.bashrc\" \\\n    BASH_ENV=\"/home/.bashrc\"\nENV LAGOON=\"ssh\" \\\n    OC_VERSION=\"v3.6.0\" \\\n    OC_HASH=\"c4dd4cf\" \\\n    OC_SHA256=\"ecb0f52560ac766331052a0052b1de646011247f637c15063f4d74432e1ce389\"\nCOPY services/ssh/libnss-mysql-1.5.tar.gz /tmp/libnss-mysql-1.5.tar.gz\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl build-essential libmysqlclient-dev ssh curl npm vim jq -y \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmysqlclient.so /usr/lib/libmysqlclient.so \\\n && mkdir /tmp/libnss-mysql \\\n && tar -xzf /tmp/libnss-mysql-1.5.tar.gz -C /tmp/libnss-mysql --strip-components=1 \\\n && cd /tmp/libnss-mysql \\\n && ./configure \\\n && make \\\n && make install \\\n && apt-get remove --purge -y build-essential \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/libnss-mysql-1.5.tar.gz /tmp/libnss-mysql\nRUN mkdir -p /openshift-origin-client-tools \\\n && curl -Lo /tmp/openshift-origin-client-tools.tar https://github.com/openshift/origin/releases/download/${OC_VERSION}/openshift-origin-client-tools-${OC_VERSION}-${OC_HASH}-linux-64bit.tar.gz \\\n && echo \"$OC_SHA256 /tmp/openshift-origin-client-tools.tar\" | sha256sum -c - \\\n && mkdir /tmp/openshift-origin-client-tools \\\n && tar -xzf /tmp/openshift-origin-client-tools.tar -C /tmp/openshift-origin-client-tools --strip-components=1 \\\n && install /tmp/openshift-origin-client-tools/oc /usr/bin/oc \\\n && rm -rf /tmp/openshift-origin-client-tools \\\n && rm -rf /tmp/openshift-origin-client-tools.tar\nRUN curl -L https://github.com/krallin/tini/releases/download/v0.18.0/tini -o /sbin/tini \\\n && chmod a+x /sbin/tini\n#   Reproduce behavior of Alpine: Run Bash as sh\nRUN rm -f /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#   Needed for jwt generation\nRUN npm config set unsafe-perm true \\\n && npm install jwtgen@2.2.0 -g\nCOPY services/ssh/etc/ /etc/\nCOPY services/ssh/home/ /home/\n#   token.sh needs some envplating, so we fix permissions\nRUN fix-permissions /home/token.sh\nRUN fix-permissions /etc/ssh/ \\\n && fix-permissions /run/ \\\n && fix-permissions /etc/libnss-mysql.cfg\nRUN mkdir -p /var/run/sshd \\\n && chmod 700 /var/run/sshd\n#   This is the authorized keys command, which will be defined as AuthorizedKeysCommand\nCOPY services/ssh/authorize.sh /authorize.sh\n#   Files defined in AuthorizedKeysCommand need the specific permissions for\n#   root to own and no write permission by group or others\nRUN chmod 755 /authorize.sh\n#   create_60_sec_jwt to create a JWT Admin Token which is valid for 60 secs\nCOPY services/ssh/create_60_sec_jwt.sh /create_60_sec_jwt.sh\n#   Create /authorize.env file and give api right to write it, it will be filled\n#   within docker-entrypoint with all environment variables and then sourced\n#   by /authorize.sh\nRUN touch /authorize.env \\\n && fix-permissions /authorize.env\n#   Setup folder for oc to save it's credentials\nRUN mkdir -p /home/.kube \\\n && fix-permissions /home/.kube\n#   This will set the username of the random generated user by openshift to 'api' (see 10-passwd.sh)\nENV USER_NAME=\"lagoon\"\n#   Entrypoint file which will replace some environment variables into\n#   hardcoded values every time the container is started\nCOPY services/ssh/docker-entrypoint.sh /lagoon/entrypoints/99-envplate.sh\n#   Global lagoon default environment variables\nCOPY .env.defaults .\nENV AUTH_SERVER=\"http://auth-server:3000\" \\\n    API_HOST=\"http://api:3000\"\nEXPOSE 2020/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\nCMD [\"/usr/sbin/sshd\", \"-e\", \"-D\", \"-f\", \"/etc/ssh/sshd_config\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons AS commons\nFROM ubuntu:latest\nLABEL maintainer=\"amazee.io\"\n#  Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /home /home\nRUN chmod g+w /etc/passwd \\\n && mkdir -p /home\nENV TMPDIR=\"/tmp\" \\\n    TMP=\"/tmp\" \\\n    HOME=\"/home\" \\\n    ENV=\"/home/.bashrc\" \\\n    BASH_ENV=\"/home/.bashrc\"\nENV LAGOON=\"ssh\" \\\n    OC_VERSION=\"v3.6.0\" \\\n    OC_HASH=\"c4dd4cf\" \\\n    OC_SHA256=\"ecb0f52560ac766331052a0052b1de646011247f637c15063f4d74432e1ce389\"\nCOPY services/ssh/libnss-mysql-1.5.tar.gz /tmp/libnss-mysql-1.5.tar.gz\nRUN apt-get update \\\n && apt-get install curl build-essential libmysqlclient-dev ssh curl npm vim jq -y \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmysqlclient.so /usr/lib/libmysqlclient.so \\\n && mkdir /tmp/libnss-mysql \\\n && tar -xzf /tmp/libnss-mysql-1.5.tar.gz -C /tmp/libnss-mysql --strip-components=1 \\\n && cd /tmp/libnss-mysql \\\n && ./configure \\\n && make \\\n && make install \\\n && apt-get remove --purge -y build-essential \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/libnss-mysql-1.5.tar.gz /tmp/libnss-mysql\nRUN mkdir -p /openshift-origin-client-tools \\\n && curl -Lo /tmp/openshift-origin-client-tools.tar https://github.com/openshift/origin/releases/download/${OC_VERSION}/openshift-origin-client-tools-${OC_VERSION}-${OC_HASH}-linux-64bit.tar.gz \\\n && echo \"$OC_SHA256 /tmp/openshift-origin-client-tools.tar\" | sha256sum -c - \\\n && mkdir /tmp/openshift-origin-client-tools \\\n && tar -xzf /tmp/openshift-origin-client-tools.tar -C /tmp/openshift-origin-client-tools --strip-components=1 \\\n && install /tmp/openshift-origin-client-tools/oc /usr/bin/oc \\\n && rm -rf /tmp/openshift-origin-client-tools \\\n && rm -rf /tmp/openshift-origin-client-tools.tar\nRUN curl -L https://github.com/krallin/tini/releases/download/v0.18.0/tini -o /sbin/tini \\\n && chmod a+x /sbin/tini\n#  Reproduce behavior of Alpine: Run Bash as sh\nRUN rm -f /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#  Needed for jwt generation\nRUN npm config set unsafe-perm true \\\n && npm install jwtgen -g\nCOPY services/ssh/etc/ /etc/\nCOPY services/ssh/home/ /home/\n#  token.sh needs some envplating, so we fix permissions\nRUN fix-permissions /home/token.sh\nRUN fix-permissions /etc/ssh/ \\\n && fix-permissions /run/ \\\n && fix-permissions /etc/libnss-mysql.cfg\nRUN mkdir -p /var/run/sshd \\\n && chmod 700 /var/run/sshd\n#  This is the authorized keys command, which will be defined as AuthorizedKeysCommand\nCOPY services/ssh/authorize.sh /authorize.sh\n#  Files defined in AuthorizedKeysCommand need the specific permissions for\n#  root to own and no write permission by group or others\nRUN chmod 755 /authorize.sh\n#  create_60_sec_jwt to create a JWT Admin Token which is valid for 60 secs\nCOPY services/ssh/create_60_sec_jwt.sh /create_60_sec_jwt.sh\n#  Create /authorize.env file and give api right to write it, it will be filled\n#  within docker-entrypoint with all environment variables and then sourced\n#  by /authorize.sh\nRUN touch /authorize.env \\\n && fix-permissions /authorize.env\n#  Setup folder for oc to save it's credentials\nRUN mkdir -p /home/.kube \\\n && fix-permissions /home/.kube\n#  This will set the username of the random generated user by openshift to 'api' (see 10-passwd.sh)\nENV USER_NAME=\"lagoon\"\n#  Entrypoint file which will replace some environment variables into\n#  hardcoded values every time the container is started\nCOPY services/ssh/docker-entrypoint.sh /lagoon/entrypoints/99-envplate.sh\n#  Global lagoon default environment variables\nCOPY .env.defaults .\nENV AUTH_SERVER=\"http://auth-server:3000\" \\\n    API_HOST=\"http://api:3000\"\nEXPOSE 2020/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\nCMD [\"/usr/sbin/sshd\", \"-e\", \"-D\", \"-f\", \"/etc/ssh/sshd_config\"]\n","injectedSmells":[],"originalDockerfileHash":"b4c2b73111c91d53ebca10e1c63197dc","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons AS commons\nFROM ubuntu:latest\nLABEL maintainer=\"amazee.io\"\n#   Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /home /home\nRUN chmod g+w /etc/passwd \\\n && mkdir -p /home\nENV TMPDIR=\"/tmp\" \\\n    TMP=\"/tmp\" \\\n    HOME=\"/home\" \\\n    ENV=\"/home/.bashrc\" \\\n    BASH_ENV=\"/home/.bashrc\"\nENV LAGOON=\"ssh\" \\\n    OC_VERSION=\"v3.6.0\" \\\n    OC_HASH=\"c4dd4cf\" \\\n    OC_SHA256=\"ecb0f52560ac766331052a0052b1de646011247f637c15063f4d74432e1ce389\"\nCOPY services/ssh/libnss-mysql-1.5.tar.gz /tmp/libnss-mysql-1.5.tar.gz\nRUN apt-get update \\\n && apt-get install curl build-essential libmysqlclient-dev ssh curl npm vim jq -y \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmysqlclient.so /usr/lib/libmysqlclient.so \\\n && mkdir /tmp/libnss-mysql \\\n && tar -xzf /tmp/libnss-mysql-1.5.tar.gz -C /tmp/libnss-mysql --strip-components=1 \\\n && cd /tmp/libnss-mysql \\\n && ./configure \\\n && make \\\n && make install \\\n && apt-get remove --purge -y build-essential \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/libnss-mysql-1.5.tar.gz /tmp/libnss-mysql\nRUN mkdir -p /openshift-origin-client-tools \\\n && curl -Lo /tmp/openshift-origin-client-tools.tar https://github.com/openshift/origin/releases/download/${OC_VERSION}/openshift-origin-client-tools-${OC_VERSION}-${OC_HASH}-linux-64bit.tar.gz \\\n && echo \"$OC_SHA256 /tmp/openshift-origin-client-tools.tar\" | sha256sum -c - \\\n && mkdir /tmp/openshift-origin-client-tools \\\n && tar -xzf /tmp/openshift-origin-client-tools.tar -C /tmp/openshift-origin-client-tools --strip-components=1 \\\n && install /tmp/openshift-origin-client-tools/oc /usr/bin/oc \\\n && rm -rf /tmp/openshift-origin-client-tools \\\n && rm -rf /tmp/openshift-origin-client-tools.tar\nRUN curl -L https://github.com/krallin/tini/releases/download/v0.18.0/tini -o /sbin/tini \\\n && chmod a+x /sbin/tini\n#   Reproduce behavior of Alpine: Run Bash as sh\nRUN rm -f /bin/sh \\\n && ln -s /bin/bash /bin/sh\n#   Needed for jwt generation\nRUN npm config set unsafe-perm true \\\n && npm install jwtgen -g\nCOPY services/ssh/etc/ /etc/\nCOPY services/ssh/home/ /home/\n#   token.sh needs some envplating, so we fix permissions\nRUN fix-permissions /home/token.sh\nRUN fix-permissions /etc/ssh/ \\\n && fix-permissions /run/ \\\n && fix-permissions /etc/libnss-mysql.cfg\nRUN mkdir -p /var/run/sshd \\\n && chmod 700 /var/run/sshd\n#   This is the authorized keys command, which will be defined as AuthorizedKeysCommand\nCOPY services/ssh/authorize.sh /authorize.sh\n#   Files defined in AuthorizedKeysCommand need the specific permissions for\n#   root to own and no write permission by group or others\nRUN chmod 755 /authorize.sh\n#   create_60_sec_jwt to create a JWT Admin Token which is valid for 60 secs\nCOPY services/ssh/create_60_sec_jwt.sh /create_60_sec_jwt.sh\n#   Create /authorize.env file and give api right to write it, it will be filled\n#   within docker-entrypoint with all environment variables and then sourced\n#   by /authorize.sh\nRUN touch /authorize.env \\\n && fix-permissions /authorize.env\n#   Setup folder for oc to save it's credentials\nRUN mkdir -p /home/.kube \\\n && fix-permissions /home/.kube\n#   This will set the username of the random generated user by openshift to 'api' (see 10-passwd.sh)\nENV USER_NAME=\"lagoon\"\n#   Entrypoint file which will replace some environment variables into\n#   hardcoded values every time the container is started\nCOPY services/ssh/docker-entrypoint.sh /lagoon/entrypoints/99-envplate.sh\n#   Global lagoon default environment variables\nCOPY .env.defaults .\nENV AUTH_SERVER=\"http://auth-server:3000\" \\\n    API_HOST=\"http://api:3000\"\nEXPOSE 2020/tcp\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\nCMD [\"/usr/sbin/sshd\", \"-e\", \"-D\", \"-f\", \"/etc/ssh/sshd_config\"]\n","originalDockerfileUglifiedHash":"97ce999691f39f1c6b18017ad9a5e87e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4c336fa12a64a34b5a4451845e514962c30a745c.dockerfile"}