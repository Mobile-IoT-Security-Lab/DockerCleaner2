{"seed":2898346118,"processedDockerfileHash":"df89e8df7aaf2f4bb9652fcc66682cc3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nMAINTAINER Benjamin Wild <b.w@fu-berlin.de>\n#   makes sure deb-src in sources.list is not commented out \nRUN sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends python python-dev python3 python3-dev python3-six python3-tz python3-babel python3-roman python3-docutils python3-markupsafe python3-jinja2 python3-numpy python3-pygments checkinstall git build-essential g++-4.9 g++ cmake wget libopenblas-dev libavformat-dev libavcodec-dev libavdevice-dev libavutil-dev libswscale-dev libavresample-dev libavcodec-extra libav-tools qtbase5-dev pkg-config libbz2-dev -y --assume-yes --install-recommends ) \\\n && rm -rf /var/lib/apt/lists\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 20 \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 20 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10 \\\n && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 \\\n && update-alternatives --set cc /usr/bin/gcc \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 \\\n && update-alternatives --set c++ /usr/bin/g++\nRUN : \\\n && apt-get build-dep -y --assume-yes --no-install-recommends libopencv-dev libboost-all-dev \\\n && rm -rf /var/lib/apt/lists\nRUN mkdir -p /tmp/source \\\n && cd /tmp/source \\\n && git clone --branch 3.1.0 --depth 1 https://github.com/Itseez/opencv.git \\\n && mkdir -p /tmp/build/opencv \\\n && cd /tmp/build/opencv \\\n && cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/ -DWITH_CUDA=OFF -DWITH_CUFFT=OFF -DWITH_CUBLAS=OFF -DBUILD_opencv_java=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_EXAMPLES=OFF -DPYTHON_EXECUTABLE=/usr/bin/python3 /tmp/source/opencv \\\n && make -j `nproc `\nRUN cd /tmp/build/opencv \\\n && checkinstall\nRUN cd /tmp/source \\\n && wget https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.bz2/download?use_mirror=netcologne -O boost.tar.bz2 \\\n && tar -xf boost.tar.bz2 \\\n && ls \\\n && cd boost_1_61_0 \\\n && ls \\\n && ./bootstrap.sh --prefix=/usr --with-python=/usr/bin/python3\nRUN cd /tmp/source/boost_1_61_0 \\\n && ./b2 -j `nproc ` install\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends python3-scipy python3-setuptools python3-pip python3-nose python3-pytest python3-sklearn python3-skimage python3-h5py python3-matplotlib python3-seaborn python3-cairocffi tmux gdb capnproto vim vim-nox libgflags-dev libzmqpp-dev libhdf5-dev libhdf5-cpp-11 hdf5-tools libgoogle-glog-dev jq sshfs zsh -y --assume-yes --install-recommends ) \\\n && rm -rf /var/lib/apt/lists\nRUN pip3 install Theano jupyter xgboost pytest-cov pytest-benchmark pytest-flake8 shyaml more_itertools scikit-image click pandas\nRUN pip3 install git+https://github.com/berleon/keras.git@losses#egg=Keras\nRUN pip3 install git+https://github.com/BioroboticsLab/diktya.git@c21788bc0fd51f16f920d1ee0f3ae6c88b183ad1#egg=diktya\nRUN pip3 install git+https://github.com/BioroboticsLab/bb_binary.git@c724a61d440878d6a44a43e1523c1cc8fb7c7de9#egg=bb-binary\nRUN pip3 install git+https://github.com/BioroboticsLab/bb_pipeline.git@fd74cbd8660d30a28f2e8e23fe4c0863b5b531c6#egg=bb-pipeline\nRUN pip3 install git+https://github.com/berleon/cfg.git@9484201fe0f80cb39fd26d7193477e400776d785#egg=cfg\nRUN git clone https://github.com/berleon/pybeesgrid.git /opt/pybeesgrid \\\n && cd /opt/pybeesgrid \\\n && export PIP=pip3 \\\n && ./build_and_install.sh\nRUN ldconfig\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nMAINTAINER Benjamin Wild <b.w@fu-berlin.de>\n#  makes sure deb-src in sources.list is not commented out \nRUN sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install python python-dev python3 python3-dev python3-six python3-tz python3-babel python3-roman python3-docutils python3-markupsafe python3-jinja2 python3-numpy python3-pygments checkinstall git build-essential g++-4.9 g++ cmake wget libopenblas-dev libavformat-dev libavcodec-dev libavdevice-dev libavutil-dev libswscale-dev libavresample-dev libavcodec-extra libav-tools qtbase5-dev pkg-config libbz2-dev -y --assume-yes --install-recommends \\\n && rm -rf /var/lib/apt/lists\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 20 \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 20 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10 \\\n && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 \\\n && update-alternatives --set cc /usr/bin/gcc \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 \\\n && update-alternatives --set c++ /usr/bin/g++\nRUN apt-get update \\\n && apt-get build-dep -y --assume-yes --no-install-recommends libopencv-dev libboost-all-dev \\\n && rm -rf /var/lib/apt/lists\nRUN mkdir -p /tmp/source \\\n && cd /tmp/source \\\n && git clone --branch 3.1.0 --depth 1 https://github.com/Itseez/opencv.git \\\n && mkdir -p /tmp/build/opencv \\\n && cd /tmp/build/opencv \\\n && cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/ -DWITH_CUDA=OFF -DWITH_CUFFT=OFF -DWITH_CUBLAS=OFF -DBUILD_opencv_java=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_EXAMPLES=OFF -DPYTHON_EXECUTABLE=/usr/bin/python3 /tmp/source/opencv \\\n && make -j `nproc `\nRUN cd /tmp/build/opencv \\\n && checkinstall\nRUN cd /tmp/source \\\n && wget https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.bz2/download?use_mirror=netcologne -O boost.tar.bz2 \\\n && tar -xf boost.tar.bz2 \\\n && ls \\\n && cd boost_1_61_0 \\\n && ls \\\n && ./bootstrap.sh --prefix=/usr --with-python=/usr/bin/python3\nRUN cd /tmp/source/boost_1_61_0 \\\n && ./b2 -j `nproc ` install\nRUN apt-get update \\\n && apt-get install python3-scipy python3-setuptools python3-pip python3-nose python3-pytest python3-sklearn python3-skimage python3-h5py python3-matplotlib python3-seaborn python3-cairocffi tmux gdb capnproto vim vim-nox libgflags-dev libzmqpp-dev libhdf5-dev libhdf5-cpp-11 hdf5-tools libgoogle-glog-dev jq sshfs zsh -y --assume-yes --install-recommends \\\n && rm -rf /var/lib/apt/lists\nRUN pip3 install Theano jupyter xgboost pytest-cov pytest-benchmark pytest-flake8 shyaml more_itertools scikit-image click pandas\nRUN pip3 install git+https://github.com/berleon/keras.git@losses#egg=Keras\nRUN pip3 install git+https://github.com/BioroboticsLab/diktya.git@c21788bc0fd51f16f920d1ee0f3ae6c88b183ad1#egg=diktya\nRUN pip3 install git+https://github.com/BioroboticsLab/bb_binary.git@c724a61d440878d6a44a43e1523c1cc8fb7c7de9#egg=bb-binary\nRUN pip3 install git+https://github.com/BioroboticsLab/bb_pipeline.git@fd74cbd8660d30a28f2e8e23fe4c0863b5b531c6#egg=bb-pipeline\nRUN pip3 install git+https://github.com/berleon/cfg.git@9484201fe0f80cb39fd26d7193477e400776d785#egg=cfg\nRUN git clone https://github.com/berleon/pybeesgrid.git /opt/pybeesgrid \\\n && cd /opt/pybeesgrid \\\n && export PIP=pip3 \\\n && ./build_and_install.sh\nRUN ldconfig\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n","injectedSmells":[],"originalDockerfileHash":"8f306f2a5174ae6707af8e93acc14086","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nMAINTAINER Benjamin Wild <b.w@fu-berlin.de>\n#   makes sure deb-src in sources.list is not commented out \nRUN sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install python python-dev python3 python3-dev python3-six python3-tz python3-babel python3-roman python3-docutils python3-markupsafe python3-jinja2 python3-numpy python3-pygments checkinstall git build-essential g++-4.9 g++ cmake wget libopenblas-dev libavformat-dev libavcodec-dev libavdevice-dev libavutil-dev libswscale-dev libavresample-dev libavcodec-extra libav-tools qtbase5-dev pkg-config libbz2-dev -y --assume-yes --install-recommends \\\n && rm -rf /var/lib/apt/lists\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 20 \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 20 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10 \\\n && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 \\\n && update-alternatives --set cc /usr/bin/gcc \\\n && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 \\\n && update-alternatives --set c++ /usr/bin/g++\nRUN apt-get update \\\n && apt-get build-dep -y --assume-yes --no-install-recommends libopencv-dev libboost-all-dev \\\n && rm -rf /var/lib/apt/lists\nRUN mkdir -p /tmp/source \\\n && cd /tmp/source \\\n && git clone --branch 3.1.0 --depth 1 https://github.com/Itseez/opencv.git \\\n && mkdir -p /tmp/build/opencv \\\n && cd /tmp/build/opencv \\\n && cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/ -DWITH_CUDA=OFF -DWITH_CUFFT=OFF -DWITH_CUBLAS=OFF -DBUILD_opencv_java=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_EXAMPLES=OFF -DPYTHON_EXECUTABLE=/usr/bin/python3 /tmp/source/opencv \\\n && make -j `nproc `\nRUN cd /tmp/build/opencv \\\n && checkinstall\nRUN cd /tmp/source \\\n && wget https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.bz2/download?use_mirror=netcologne -O boost.tar.bz2 \\\n && tar -xf boost.tar.bz2 \\\n && ls \\\n && cd boost_1_61_0 \\\n && ls \\\n && ./bootstrap.sh --prefix=/usr --with-python=/usr/bin/python3\nRUN cd /tmp/source/boost_1_61_0 \\\n && ./b2 -j `nproc ` install\nRUN apt-get update \\\n && apt-get install python3-scipy python3-setuptools python3-pip python3-nose python3-pytest python3-sklearn python3-skimage python3-h5py python3-matplotlib python3-seaborn python3-cairocffi tmux gdb capnproto vim vim-nox libgflags-dev libzmqpp-dev libhdf5-dev libhdf5-cpp-11 hdf5-tools libgoogle-glog-dev jq sshfs zsh -y --assume-yes --install-recommends \\\n && rm -rf /var/lib/apt/lists\nRUN pip3 install Theano jupyter xgboost pytest-cov pytest-benchmark pytest-flake8 shyaml more_itertools scikit-image click pandas\nRUN pip3 install git+https://github.com/berleon/keras.git@losses#egg=Keras\nRUN pip3 install git+https://github.com/BioroboticsLab/diktya.git@c21788bc0fd51f16f920d1ee0f3ae6c88b183ad1#egg=diktya\nRUN pip3 install git+https://github.com/BioroboticsLab/bb_binary.git@c724a61d440878d6a44a43e1523c1cc8fb7c7de9#egg=bb-binary\nRUN pip3 install git+https://github.com/BioroboticsLab/bb_pipeline.git@fd74cbd8660d30a28f2e8e23fe4c0863b5b531c6#egg=bb-pipeline\nRUN pip3 install git+https://github.com/berleon/cfg.git@9484201fe0f80cb39fd26d7193477e400776d785#egg=cfg\nRUN git clone https://github.com/berleon/pybeesgrid.git /opt/pybeesgrid \\\n && cd /opt/pybeesgrid \\\n && export PIP=pip3 \\\n && ./build_and_install.sh\nRUN ldconfig\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n","originalDockerfileUglifiedHash":"1c7c274ee5701c7d9a8d55b38457ac27","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3f21c8f9bc610d241acd49113203b9d73ad74c20.dockerfile"}