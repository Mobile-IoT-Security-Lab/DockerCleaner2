{"seed":837932604,"processedDockerfileHash":"54dbbaa2762a74b706a54d942ca1048f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"FROM python:3.5.6\nLABEL vendor=\"NLnet Labs\" \\\n      license=\"Apache License, Version 2.0\"\nARG BRANCH\nENV APP_PATH=\"/app\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV BRANCH=\"${BRANCH:-master}\"\n#   Make port 8080 available to the world outside this container\nEXPOSE 8080/tcp\n#   Install required dependencies\n#   swig is needed to build Unbound with Python bindings \n#   gettext is needed by python manage.py compilemessages\n#   libwww-perl is needed by make update_cert_fingerprints\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends curl gettext git ldnsutils libhiredis-dev libwww-perl postgresql-server-dev-9.6 swig3.0 sudo -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Create a user for the internetnl app to run as\nRUN useradd -ms /bin/bash -G sudo internetnl \\\n && echo \"internetnl ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/internetnl\n#   Install forked pythonwhois\nRUN git clone -b timeout https://github.com/ralphdolmans/python-whois.git /tmp/python-whois\nWORKDIR /tmp/python-whois\nRUN python setup.py install\n#   Build nassl from sources for deprecated protocol support and \"extra features\" compared to the stock package\nRUN git clone -b free_bsd https://github.com/gthess/nassl.git /tmp/nassl_freebsd\nWORKDIR /tmp/nassl_freebsd\nRUN mkdir -p bin/openssl-legacy/freebsd64 \\\n && mkdir -p bin/openssl-modern/freebsd64\nRUN curl https://zlib.net/zlib-1.2.11.tar.gz | tar zx \\\n && git clone -b 1.0.2-chacha https://github.com/PeterMosmans/openssl.git openssl-1.0.2e \\\n && git clone https://github.com/openssl/openssl.git openssl-master \\\n && cd openssl-master \\\n && git checkout 1f5878b8e25a785dde330bf485e6ed5a6ae09a1a \\\n && cd .. \\\n && python build_from_scratch.py \\\n && python setup.py install\n#   Unbound\n#   See: https://github.com/ralphdolmans/unbound/blob/internetnl/README.md\n#   TODO: edit internetnl/internetnl.c to match our deployment of Internet.nl\nRUN git clone -b internetnl https://github.com/ralphdolmans/unbound.git /tmp/unbound\nWORKDIR /tmp/unbound\nRUN patch -p0 -i ./unbound_1.8.0_patch_unsupported_ds.diff \\\n && ln -s /usr/local/bin/python3.5 /usr/local/bin/python3.5.6 \\\n && ln -s /usr/bin/swig3.0 /usr/bin/swig \\\n && ./configure --enable-internetnl --with-pyunbound --with-libevent --with-libhiredis \\\n && make \\\n && make install\n#   Point unbound-anchor and Python at the standard location for the unbound lib\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\n#   Configure Unbound for use by Internet.nl, in particular so that LDNS-DANE can depend on a resolver that is DNSSEC\n#   enabled, which might not be true of the host resolver made available by Docker by default.\nWORKDIR /usr/local/etc/unbound\nRUN useradd unbound \\\n && cp unbound.conf unbound.conf.org \\\n && sed -e 's/# auto-trust-anchor-file:/auto-trust-anchor-file:/' -e 's/# control-enable: no/control-enable: yes/' unbound.conf.org > unbound.conf \\\n && unbound-control-setup \\\n && unbound-anchor || test $? -eq 1 \\\n && chown -R unbound: .\nWORKDIR ${APP_PATH}\n#  RUN chown -R internetnl:internetnl ${APP_PATH}\n#   Fetch the Internet.nl web application files and install Python dependencies\nCOPY --chown=internetnl:internetnl . ${APP_PATH}\nRUN chown -R internetnl: ${APP_PATH}\nRUN pip install pypi.python.org==null --trusted-host -r ./python-pip-requirements.txt\nUSER internetnl\n#   Configure internetnl to know where LDNS-DANE is installed\nRUN sed -i -e \"s|LDNS_DANE = .*|LDNS_DANE = '/usr/bin/ldns-dane'|g\" ${APP_PATH}/internetnl/settings.py-dist\n#   Prepare translations\nRUN make translations\n#   Cleanup\nRUN sudo rm -rf ${APP_PATH}/.git /tmp/unbound /tmp/nassl_freebsd /tmp/python-whois\n#   Setup the entrypoint command which will be executed when a container built from this image is run\nENTRYPOINT ${APP_PATH}/docker/entrypoint.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM python:3.5.6\nLABEL vendor=\"NLnet Labs\" \\\n      license=\"Apache License, Version 2.0\"\nARG BRANCH\nENV APP_PATH=\"/app\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV BRANCH=\"${BRANCH:-master}\"\n#  Make port 8080 available to the world outside this container\nEXPOSE 8080/tcp\n#  Install required dependencies\n#  swig is needed to build Unbound with Python bindings \n#  gettext is needed by python manage.py compilemessages\n#  libwww-perl is needed by make update_cert_fingerprints\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends curl gettext git ldnsutils libhiredis-dev libwww-perl postgresql-server-dev-9.6 swig3.0 sudo -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Create a user for the internetnl app to run as\nRUN useradd -ms /bin/bash -G sudo internetnl \\\n && echo \"internetnl ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/internetnl\n#  Install forked pythonwhois\nRUN git clone -b timeout https://github.com/ralphdolmans/python-whois.git /tmp/python-whois\nWORKDIR /tmp/python-whois\nRUN python setup.py install\n#  Build nassl from sources for deprecated protocol support and \"extra features\" compared to the stock package\nRUN git clone -b free_bsd https://github.com/gthess/nassl.git /tmp/nassl_freebsd\nWORKDIR /tmp/nassl_freebsd\nRUN mkdir -p bin/openssl-legacy/freebsd64 \\\n && mkdir -p bin/openssl-modern/freebsd64\nRUN curl https://zlib.net/zlib-1.2.11.tar.gz | tar zx \\\n && git clone -b 1.0.2-chacha https://github.com/PeterMosmans/openssl.git openssl-1.0.2e \\\n && git clone https://github.com/openssl/openssl.git openssl-master \\\n && cd openssl-master \\\n && git checkout 1f5878b8e25a785dde330bf485e6ed5a6ae09a1a \\\n && cd .. \\\n && python build_from_scratch.py \\\n && python setup.py install\n#  Unbound\n#  See: https://github.com/ralphdolmans/unbound/blob/internetnl/README.md\n#  TODO: edit internetnl/internetnl.c to match our deployment of Internet.nl\nRUN git clone -b internetnl https://github.com/ralphdolmans/unbound.git /tmp/unbound\nWORKDIR /tmp/unbound\nRUN patch -p0 -i ./unbound_1.8.0_patch_unsupported_ds.diff \\\n && ln -s /usr/local/bin/python3.5 /usr/local/bin/python3.5.6 \\\n && ln -s /usr/bin/swig3.0 /usr/bin/swig \\\n && ./configure --enable-internetnl --with-pyunbound --with-libevent --with-libhiredis \\\n && make \\\n && make install\n#  Point unbound-anchor and Python at the standard location for the unbound lib\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\n#  Configure Unbound for use by Internet.nl, in particular so that LDNS-DANE can depend on a resolver that is DNSSEC\n#  enabled, which might not be true of the host resolver made available by Docker by default.\nWORKDIR /usr/local/etc/unbound\nRUN useradd unbound \\\n && cp unbound.conf unbound.conf.org \\\n && sed -e 's/# auto-trust-anchor-file:/auto-trust-anchor-file:/' -e 's/# control-enable: no/control-enable: yes/' unbound.conf.org > unbound.conf \\\n && unbound-control-setup \\\n && unbound-anchor || test $? -eq 1 \\\n && chown -R unbound: .\nWORKDIR ${APP_PATH}\n# RUN chown -R internetnl:internetnl ${APP_PATH}\n#  Fetch the Internet.nl web application files and install Python dependencies\nCOPY --chown=internetnl:internetnl . ${APP_PATH}\nRUN chown -R internetnl: ${APP_PATH}\nRUN pip install pypi.python.org --trusted-host -r ./python-pip-requirements.txt\nUSER internetnl\n#  Configure internetnl to know where LDNS-DANE is installed\nRUN sed -i -e \"s|LDNS_DANE = .*|LDNS_DANE = '/usr/bin/ldns-dane'|g\" ${APP_PATH}/internetnl/settings.py-dist\n#  Prepare translations\nRUN make translations\n#  Cleanup\nRUN sudo rm -rf ${APP_PATH}/.git /tmp/unbound /tmp/nassl_freebsd /tmp/python-whois\n#  Setup the entrypoint command which will be executed when a container built from this image is run\nENTRYPOINT ${APP_PATH}/docker/entrypoint.sh\n","injectedSmells":[],"originalDockerfileHash":"90632f1b3df60cfe1f88ad0a31f1d63c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM python:3.5.6\nLABEL vendor=\"NLnet Labs\" \\\n      license=\"Apache License, Version 2.0\"\nARG BRANCH\nENV APP_PATH=\"/app\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV BRANCH=\"${BRANCH:-master}\"\n#   Make port 8080 available to the world outside this container\nEXPOSE 8080/tcp\n#   Install required dependencies\n#   swig is needed to build Unbound with Python bindings \n#   gettext is needed by python manage.py compilemessages\n#   libwww-perl is needed by make update_cert_fingerprints\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends curl gettext git ldnsutils libhiredis-dev libwww-perl postgresql-server-dev-9.6 swig3.0 sudo -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Create a user for the internetnl app to run as\nRUN useradd -ms /bin/bash -G sudo internetnl \\\n && echo \"internetnl ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/internetnl\n#   Install forked pythonwhois\nRUN git clone -b timeout https://github.com/ralphdolmans/python-whois.git /tmp/python-whois\nWORKDIR /tmp/python-whois\nRUN python setup.py install\n#   Build nassl from sources for deprecated protocol support and \"extra features\" compared to the stock package\nRUN git clone -b free_bsd https://github.com/gthess/nassl.git /tmp/nassl_freebsd\nWORKDIR /tmp/nassl_freebsd\nRUN mkdir -p bin/openssl-legacy/freebsd64 \\\n && mkdir -p bin/openssl-modern/freebsd64\nRUN curl https://zlib.net/zlib-1.2.11.tar.gz | tar zx \\\n && git clone -b 1.0.2-chacha https://github.com/PeterMosmans/openssl.git openssl-1.0.2e \\\n && git clone https://github.com/openssl/openssl.git openssl-master \\\n && cd openssl-master \\\n && git checkout 1f5878b8e25a785dde330bf485e6ed5a6ae09a1a \\\n && cd .. \\\n && python build_from_scratch.py \\\n && python setup.py install\n#   Unbound\n#   See: https://github.com/ralphdolmans/unbound/blob/internetnl/README.md\n#   TODO: edit internetnl/internetnl.c to match our deployment of Internet.nl\nRUN git clone -b internetnl https://github.com/ralphdolmans/unbound.git /tmp/unbound\nWORKDIR /tmp/unbound\nRUN patch -p0 -i ./unbound_1.8.0_patch_unsupported_ds.diff \\\n && ln -s /usr/local/bin/python3.5 /usr/local/bin/python3.5.6 \\\n && ln -s /usr/bin/swig3.0 /usr/bin/swig \\\n && ./configure --enable-internetnl --with-pyunbound --with-libevent --with-libhiredis \\\n && make \\\n && make install\n#   Point unbound-anchor and Python at the standard location for the unbound lib\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\n#   Configure Unbound for use by Internet.nl, in particular so that LDNS-DANE can depend on a resolver that is DNSSEC\n#   enabled, which might not be true of the host resolver made available by Docker by default.\nWORKDIR /usr/local/etc/unbound\nRUN useradd unbound \\\n && cp unbound.conf unbound.conf.org \\\n && sed -e 's/# auto-trust-anchor-file:/auto-trust-anchor-file:/' -e 's/# control-enable: no/control-enable: yes/' unbound.conf.org > unbound.conf \\\n && unbound-control-setup \\\n && unbound-anchor || test $? -eq 1 \\\n && chown -R unbound: .\nWORKDIR ${APP_PATH}\n#  RUN chown -R internetnl:internetnl ${APP_PATH}\n#   Fetch the Internet.nl web application files and install Python dependencies\nCOPY --chown=internetnl:internetnl . ${APP_PATH}\nRUN chown -R internetnl: ${APP_PATH}\nRUN pip install pypi.python.org --trusted-host -r ./python-pip-requirements.txt\nUSER internetnl\n#   Configure internetnl to know where LDNS-DANE is installed\nRUN sed -i -e \"s|LDNS_DANE = .*|LDNS_DANE = '/usr/bin/ldns-dane'|g\" ${APP_PATH}/internetnl/settings.py-dist\n#   Prepare translations\nRUN make translations\n#   Cleanup\nRUN sudo rm -rf ${APP_PATH}/.git /tmp/unbound /tmp/nassl_freebsd /tmp/python-whois\n#   Setup the entrypoint command which will be executed when a container built from this image is run\nENTRYPOINT ${APP_PATH}/docker/entrypoint.sh\n","originalDockerfileUglifiedHash":"0adf8a2d21214370382d0f1b77b23ae6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/339aec7818cbde77b610bfe1cddb0d26dfa1fc73.dockerfile"}