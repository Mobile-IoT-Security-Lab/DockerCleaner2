{"seed":553123037,"processedDockerfileHash":"982d48f1c0fd5eb3d5ab1ac8249ee4b2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch\nMAINTAINER Colin Wilson \"colin@wyveo.com\"\n#   Let the container know that there is no tty\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NGINX_VERSION=\"1.15.12-1~stretch\"\nENV php_conf=\"/etc/php/7.3/fpm/php.ini\"\nENV fpm_conf=\"/etc/php/7.3/fpm/pool.d/www.conf\"\nENV COMPOSER_VERSION=\"1.8.5\"\n#   Install Basic Requirements\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg2=2.1.18-8~deb9u4 dirmngr=2.1.18-8~deb9u4 wget=1.18-5+deb9u3 apt-transport-https=1.4.11 lsb-release=9.20161125 ca-certificates=20200601~deb9u2 --no-install-suggests -q -y \\\n && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 ; found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;apt-key adv --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $NGINX_GPGKEY\" >&2 \\\n && exit 1 ; echo \"deb http://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/php.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-utils=1.4.11 curl=7.52.1-5+deb9u16 nano=2.7.4-1 zip=3.0-11+b1 unzip=6.0-21+deb9u2 python-pip=9.0.1-2+deb9u2 python-setuptools=33.1.1-1 git=1:2.11.0-3+deb9u7 php7.3-fpm php7.3-cli php7.3-bcmath php7.3-dev php7.3-common php7.3-json php7.3-opcache php7.3-readline php7.3-mbstring php7.3-curl php7.3-imagick php7.3-gd php7.3-mysql php7.3-zip php7.3-pgsql php7.3-intl php7.3-xml php7.3-redis nginx=${NGINX_VERSION} --no-install-suggests -q -y \\\n && mkdir -p /run/php \\\n && pip install wheel==0.40.0 \\\n && pip install supervisor==4.2.5 supervisor-stdout==0.1.1 \\\n && echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d \\\n && rm -rf /etc/nginx/conf.d/default.conf \\\n && sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" ${php_conf} \\\n && sed -i -e \"s/memory_limit\\s*=\\s*.*/memory_limit = 256M/g\" ${php_conf} \\\n && sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" ${php_conf} \\\n && sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" ${php_conf} \\\n && sed -i -e \"s/variables_order = \\\"GPCS\\\"/variables_order = \\\"EGPCS\\\"/g\" ${php_conf} \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.3/fpm/php-fpm.conf \\\n && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.max_children = 5/pm.max_children = 4/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" ${fpm_conf} \\\n && sed -i -e \"s/www-data/nginx/g\" ${fpm_conf} \\\n && sed -i -e \"s/^;clear_env = no$/clear_env = no/\" ${fpm_conf} \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n && curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && rm -rf /tmp/composer-setup.php\n#   Supervisor config\nCOPY ./supervisord.conf /etc/supervisord.conf\n#   Override nginx's default config\nCOPY ./default.conf /etc/nginx/conf.d/default.conf\n#   Override default nginx welcome page\nCOPY html /usr/share/nginx/html\n#   Add Scripts\nCOPY ./start.sh /start.sh\nEXPOSE 80/tcp\nCMD [\"/start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch\nMAINTAINER Colin Wilson \"colin@wyveo.com\"\n#  Let the container know that there is no tty\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NGINX_VERSION=\"1.15.12-1~stretch\"\nENV php_conf=\"/etc/php/7.3/fpm/php.ini\"\nENV fpm_conf=\"/etc/php/7.3/fpm/pool.d/www.conf\"\nENV COMPOSER_VERSION=\"1.8.5\"\n#  Install Basic Requirements\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg2 dirmngr wget apt-transport-https lsb-release ca-certificates --no-install-suggests -q -y \\\n && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 ; found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;apt-key adv --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $NGINX_GPGKEY\" >&2 \\\n && exit 1 ; echo \"deb http://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/php.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-utils curl nano zip unzip python-pip python-setuptools git php7.3-fpm php7.3-cli php7.3-bcmath php7.3-dev php7.3-common php7.3-json php7.3-opcache php7.3-readline php7.3-mbstring php7.3-curl php7.3-imagick php7.3-gd php7.3-mysql php7.3-zip php7.3-pgsql php7.3-intl php7.3-xml php7.3-redis nginx=${NGINX_VERSION} --no-install-suggests -q -y \\\n && mkdir -p /run/php \\\n && pip install wheel \\\n && pip install supervisor supervisor-stdout \\\n && echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d \\\n && rm -rf /etc/nginx/conf.d/default.conf \\\n && sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" ${php_conf} \\\n && sed -i -e \"s/memory_limit\\s*=\\s*.*/memory_limit = 256M/g\" ${php_conf} \\\n && sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" ${php_conf} \\\n && sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" ${php_conf} \\\n && sed -i -e \"s/variables_order = \\\"GPCS\\\"/variables_order = \\\"EGPCS\\\"/g\" ${php_conf} \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.3/fpm/php-fpm.conf \\\n && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.max_children = 5/pm.max_children = 4/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" ${fpm_conf} \\\n && sed -i -e \"s/www-data/nginx/g\" ${fpm_conf} \\\n && sed -i -e \"s/^;clear_env = no$/clear_env = no/\" ${fpm_conf} \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n && curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && rm -rf /tmp/composer-setup.php\n#  Supervisor config\nADD ./supervisord.conf /etc/supervisord.conf\n#  Override nginx's default config\nADD ./default.conf /etc/nginx/conf.d/default.conf\n#  Override default nginx welcome page\nCOPY html /usr/share/nginx/html\n#  Add Scripts\nADD ./start.sh /start.sh\nEXPOSE 80/tcp\nCMD [\"/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"0e1a4e48c25b825a3f6b02bb20f7fcdd","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch\nMAINTAINER Colin Wilson \"colin@wyveo.com\"\n#   Let the container know that there is no tty\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NGINX_VERSION=\"1.15.12-1~stretch\"\nENV php_conf=\"/etc/php/7.3/fpm/php.ini\"\nENV fpm_conf=\"/etc/php/7.3/fpm/pool.d/www.conf\"\nENV COMPOSER_VERSION=\"1.8.5\"\n#   Install Basic Requirements\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg2 dirmngr wget apt-transport-https lsb-release ca-certificates --no-install-suggests -q -y \\\n && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 ; found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;apt-key adv --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $NGINX_GPGKEY\" >&2 \\\n && exit 1 ; echo \"deb http://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n && echo \"deb https://packages.sury.org/php/ $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/php.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-utils curl nano zip unzip python-pip python-setuptools git php7.3-fpm php7.3-cli php7.3-bcmath php7.3-dev php7.3-common php7.3-json php7.3-opcache php7.3-readline php7.3-mbstring php7.3-curl php7.3-imagick php7.3-gd php7.3-mysql php7.3-zip php7.3-pgsql php7.3-intl php7.3-xml php7.3-redis nginx=${NGINX_VERSION} --no-install-suggests -q -y \\\n && mkdir -p /run/php \\\n && pip install wheel \\\n && pip install supervisor supervisor-stdout \\\n && echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d \\\n && rm -rf /etc/nginx/conf.d/default.conf \\\n && sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" ${php_conf} \\\n && sed -i -e \"s/memory_limit\\s*=\\s*.*/memory_limit = 256M/g\" ${php_conf} \\\n && sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" ${php_conf} \\\n && sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" ${php_conf} \\\n && sed -i -e \"s/variables_order = \\\"GPCS\\\"/variables_order = \\\"EGPCS\\\"/g\" ${php_conf} \\\n && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.3/fpm/php-fpm.conf \\\n && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.max_children = 5/pm.max_children = 4/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" ${fpm_conf} \\\n && sed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" ${fpm_conf} \\\n && sed -i -e \"s/www-data/nginx/g\" ${fpm_conf} \\\n && sed -i -e \"s/^;clear_env = no$/clear_env = no/\" ${fpm_conf} \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n && curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && rm -rf /tmp/composer-setup.php\n#   Supervisor config\nADD ./supervisord.conf /etc/supervisord.conf\n#   Override nginx's default config\nADD ./default.conf /etc/nginx/conf.d/default.conf\n#   Override default nginx welcome page\nCOPY html /usr/share/nginx/html\n#   Add Scripts\nADD ./start.sh /start.sh\nEXPOSE 80/tcp\nCMD [\"/start.sh\"]\n","originalDockerfileUglifiedHash":"f0575c8548d80c001efae853ba391100","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a461f0a5a69e819c480e74dbdc8ee1d46a421f8f.dockerfile"}