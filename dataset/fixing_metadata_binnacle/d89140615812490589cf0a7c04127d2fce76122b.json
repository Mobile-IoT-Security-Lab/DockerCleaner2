{"seed":585966282,"processedDockerfileHash":"f67923a5d8a3d77bd59ffea27284adbb","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM python:3.7-slim\nLABEL maintainer=\"owen.kaluza@monash.edu\"\nLABEL repo=\"https://github.com/OKaluza/LavaVu\"\n#   install things\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends bash-completion build-essential xorg-dev ssh curl libfreetype6-dev libpng-dev libtiff-dev libxft-dev xvfb freeglut3 freeglut3-dev libgl1-mesa-dri libgl1-mesa-glx mesa-utils libavcodec-dev libavformat-dev libavutil-dev libswscale-dev rsync xauth\n#   Add Tini\nENV TINI_VERSION=\"v0.18.0\"\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini\nRUN chmod +x /tini\n#   install the notebook package\nRUN pip install pip==23.1 --no-cache --upgrade \\\n && pip install notebook==6.5.4 --no-cache\nRUN pip install setuptools==67.6.1\nRUN pip install packaging==23.1 appdirs==1.4.4 numpy==1.24.2 jupyter==1.0.0 notebook==6.5.4 matplotlib==3.7.1 runipy==0.1.5 pillow==9.5.0 scipy==1.10.1 h5py==3.8.0 rise==5.7.1 jupyter-server-proxy==3.2.2 jupyterlab==3.6.3\n#  Setup RISE for notebook slideshows\nRUN jupyter-nbextension install rise --py --sys-prefix\nRUN jupyter nbextension enable rise --py --sys-prefix\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/${NB_USER}\"\n#   create user with a home directory\nARG NB_USER\nARG NB_UID\nENV USER=\"${NB_USER}\"\nENV HOME=\"/home/${NB_USER}\"\nRUN adduser --disabled-password --gecos \"Default user\" --uid ${NB_UID} ${NB_USER}\nWORKDIR ${HOME}\n#   script for xvfb-run.  all docker commands will effectively run under this via the entrypoint\nRUN printf \"#\\041/bin/sh \\n rm -f /tmp/.X99-lock \\\n && xvfb-run -s '-screen 0 1600x1200x16' $@\" >> /usr/local/bin/xvfbrun.sh \\\n && chmod +x /usr/local/bin/xvfbrun.sh\n#   Make sure the contents of our repo are in ${HOME}\nCOPY . ${HOME}\nUSER root\nRUN chown -R ${NB_UID} ${HOME}\nUSER ${NB_USER}\n#  Build LavaVu\n#   setup environment\nENV PYTHONPATH=\"$PYTHONPATH:${HOME}\"\n#   Compile, delete some unnecessary files\nRUN cd ~ \\\n && make LIBPNG=1 TIFF=1 VIDEO=1 -j$( nproc ;) \\\n && rm -fr tmp\n#  Trust included notebooks\nRUN cd ~ \\\n && find notebooks -name *.ipynb -print0 | xargs -0 jupyter trust\n#   Add a notebook profile.\nRUN cd ~ \\\n && mkdir .jupyter \\\n && echo \"c.NotebookApp.ip = '0.0.0.0'\" >> .jupyter/jupyter_notebook_config.py \\\n && echo \"c.NotebookApp.token = ''\" >> .jupyter/jupyter_notebook_config.py\n#   note we use xvfb which to mimic the X display for lavavu\nENTRYPOINT [\"/tini\", \"--\", \"/usr/local/bin/xvfbrun.sh\"]\n#   launch notebook\n#   CMD scripts/run-jupyter.sh\nCMD [\"jupyter\", \"notebook\", \"--ip='0.0.0.0'\", \"--NotebookApp.token=''\", \"--no-browser\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM python:3.7-slim\nLABEL maintainer=\"owen.kaluza@monash.edu\"\nLABEL repo=\"https://github.com/OKaluza/LavaVu\"\n#  install things\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends bash-completion build-essential xorg-dev ssh curl libfreetype6-dev libpng-dev libtiff-dev libxft-dev xvfb freeglut3 freeglut3-dev libgl1-mesa-dri libgl1-mesa-glx mesa-utils libavcodec-dev libavformat-dev libavutil-dev libswscale-dev rsync xauth\n#  Add Tini\nENV TINI_VERSION=\"v0.18.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n#  install the notebook package\nRUN pip install pip --no-cache --upgrade \\\n && pip install notebook --no-cache\nRUN pip install setuptools\nRUN pip install packaging appdirs numpy jupyter notebook matplotlib runipy pillow scipy h5py rise jupyter-server-proxy jupyterlab\n# Setup RISE for notebook slideshows\nRUN jupyter-nbextension install rise --py --sys-prefix\nRUN jupyter nbextension enable rise --py --sys-prefix\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/${NB_USER}\"\n#  create user with a home directory\nARG NB_USER\nARG NB_UID\nENV USER=\"${NB_USER}\"\nENV HOME=\"/home/${NB_USER}\"\nRUN adduser --disabled-password --gecos \"Default user\" --uid ${NB_UID} ${NB_USER}\nWORKDIR ${HOME}\n#  script for xvfb-run.  all docker commands will effectively run under this via the entrypoint\nRUN printf \"#\\041/bin/sh \\n rm -f /tmp/.X99-lock \\\n && xvfb-run -s '-screen 0 1600x1200x16' $@\" >> /usr/local/bin/xvfbrun.sh \\\n && chmod +x /usr/local/bin/xvfbrun.sh\n#  Make sure the contents of our repo are in ${HOME}\nCOPY . ${HOME}\nUSER root\nRUN chown -R ${NB_UID} ${HOME}\nUSER ${NB_USER}\n# Build LavaVu\n#  setup environment\nENV PYTHONPATH=\"$PYTHONPATH:${HOME}\"\n#  Compile, delete some unnecessary files\nRUN cd ~ \\\n && make LIBPNG=1 TIFF=1 VIDEO=1 -j$( nproc ;) \\\n && rm -fr tmp\n# Trust included notebooks\nRUN cd ~ \\\n && find notebooks -name *.ipynb -print0 | xargs -0 jupyter trust\n#  Add a notebook profile.\nRUN cd ~ \\\n && mkdir .jupyter \\\n && echo \"c.NotebookApp.ip = '0.0.0.0'\" >> .jupyter/jupyter_notebook_config.py \\\n && echo \"c.NotebookApp.token = ''\" >> .jupyter/jupyter_notebook_config.py\n#  note we use xvfb which to mimic the X display for lavavu\nENTRYPOINT [\"/tini\", \"--\", \"/usr/local/bin/xvfbrun.sh\"]\n#  launch notebook\n#  CMD scripts/run-jupyter.sh\nCMD [\"jupyter\", \"notebook\", \"--ip='0.0.0.0'\", \"--NotebookApp.token=''\", \"--no-browser\"]\n","injectedSmells":[],"originalDockerfileHash":"e9a7e487f69b17a182acffff22ed22ca","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM python:3.7-slim\nLABEL maintainer=\"owen.kaluza@monash.edu\"\nLABEL repo=\"https://github.com/OKaluza/LavaVu\"\n#   install things\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends bash-completion build-essential xorg-dev ssh curl libfreetype6-dev libpng-dev libtiff-dev libxft-dev xvfb freeglut3 freeglut3-dev libgl1-mesa-dri libgl1-mesa-glx mesa-utils libavcodec-dev libavformat-dev libavutil-dev libswscale-dev rsync xauth\n#   Add Tini\nENV TINI_VERSION=\"v0.18.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n#   install the notebook package\nRUN pip install pip --no-cache --upgrade \\\n && pip install notebook --no-cache\nRUN pip install setuptools\nRUN pip install packaging appdirs numpy jupyter notebook matplotlib runipy pillow scipy h5py rise jupyter-server-proxy jupyterlab\n#  Setup RISE for notebook slideshows\nRUN jupyter-nbextension install rise --py --sys-prefix\nRUN jupyter nbextension enable rise --py --sys-prefix\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/${NB_USER}\"\n#   create user with a home directory\nARG NB_USER\nARG NB_UID\nENV USER=\"${NB_USER}\"\nENV HOME=\"/home/${NB_USER}\"\nRUN adduser --disabled-password --gecos \"Default user\" --uid ${NB_UID} ${NB_USER}\nWORKDIR ${HOME}\n#   script for xvfb-run.  all docker commands will effectively run under this via the entrypoint\nRUN printf \"#\\041/bin/sh \\n rm -f /tmp/.X99-lock \\\n && xvfb-run -s '-screen 0 1600x1200x16' $@\" >> /usr/local/bin/xvfbrun.sh \\\n && chmod +x /usr/local/bin/xvfbrun.sh\n#   Make sure the contents of our repo are in ${HOME}\nCOPY . ${HOME}\nUSER root\nRUN chown -R ${NB_UID} ${HOME}\nUSER ${NB_USER}\n#  Build LavaVu\n#   setup environment\nENV PYTHONPATH=\"$PYTHONPATH:${HOME}\"\n#   Compile, delete some unnecessary files\nRUN cd ~ \\\n && make LIBPNG=1 TIFF=1 VIDEO=1 -j$( nproc ;) \\\n && rm -fr tmp\n#  Trust included notebooks\nRUN cd ~ \\\n && find notebooks -name *.ipynb -print0 | xargs -0 jupyter trust\n#   Add a notebook profile.\nRUN cd ~ \\\n && mkdir .jupyter \\\n && echo \"c.NotebookApp.ip = '0.0.0.0'\" >> .jupyter/jupyter_notebook_config.py \\\n && echo \"c.NotebookApp.token = ''\" >> .jupyter/jupyter_notebook_config.py\n#   note we use xvfb which to mimic the X display for lavavu\nENTRYPOINT [\"/tini\", \"--\", \"/usr/local/bin/xvfbrun.sh\"]\n#   launch notebook\n#   CMD scripts/run-jupyter.sh\nCMD [\"jupyter\", \"notebook\", \"--ip='0.0.0.0'\", \"--NotebookApp.token=''\", \"--no-browser\"]\n","originalDockerfileUglifiedHash":"885158923193d48c790d556e88d5fca1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d89140615812490589cf0a7c04127d2fce76122b.dockerfile"}