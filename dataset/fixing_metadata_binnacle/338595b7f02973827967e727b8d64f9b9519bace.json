{"seed":3490109339,"processedDockerfileHash":"790f0419869ac95088141f3ab31d50cc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"#   apigateway\n#\n#   VERSION               1.9.7.3\n#\n#   From https://hub.docker.com/_/alpine/\n#   alpine:3.4 if go <1.7\nFROM alpine:3.4\n#   install dependencies\nRUN apk update \\\n && apk add gcc=5.3.0-r0 tar=1.29-r1 libtool=2.4.6-r0 zlib=1.2.11-r0 jemalloc=3.6.0-r1 jemalloc-dev=3.6.0-r1 perl=5.22.3-r0 make=4.1-r1 musl-dev=1.1.14-r16 openssl-dev=1.0.2n-r0 pcre-dev=8.38-r1 g++=5.3.0-r0 zlib-dev=1.2.11-r0 curl=7.60.0-r1 python=2.7.14-r0 perl-test-longstring=0.15-r0 perl-list-moreutils=0.415-r0 perl-http-message=6.11-r0 geoip-dev=1.6.7-r1 sudo=1.8.16-r0\nENV ZMQ_VERSION=\"4.0.5\"\nENV CZMQ_VERSION=\"2.2.0\"\n#   Installing throttling dependencies\nRUN echo \" ... adding throttling support with ZMQ and CZMQ\" \\\n && apk add autoconf=2.69-r0 automake=1.15-r0 \\\n && curl -L https://github.com/zeromq/zeromq4-x/archive/v${ZMQ_VERSION}.tar.gz -o /tmp/zeromq.tar.gz \\\n && cd /tmp/ \\\n && tar -xf /tmp/zeromq.tar.gz \\\n && cd /tmp/zeromq*/ \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info \\\n && make \\\n && make install \\\n && curl -L https://github.com/zeromq/czmq/archive/v${CZMQ_VERSION}.tar.gz -o /tmp/czmq.tar.gz \\\n && cd /tmp/ \\\n && tar -xf /tmp/czmq.tar.gz \\\n && cd /tmp/czmq*/ \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info \\\n && make \\\n && make install \\\n && apk del automake autoconf \\\n && rm -rf /tmp/zeromq* \\\n && rm -rf /tmp/czmq* \\\n && rm -rf /var/cache/apk/*\n#   openresty build\nENV OPENRESTY_VERSION=\"1.13.6.1\" \\\n    PCRE_VERSION=\"8.37\" \\\n    TEST_NGINX_VERSION=\"0.24\" \\\n    _prefix=\"/usr/local\" \\\n    _exec_prefix=\"/usr/local\" \\\n    _localstatedir=\"/var\" \\\n    _sysconfdir=\"/etc\" \\\n    _sbindir=\"/usr/local/sbin\"\nRUN echo \" ... adding Openresty, NGINX, and PCRE\" \\\n && mkdir -p /tmp/api-gateway \\\n && readonly NPROC=$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) \\\n && echo \"using up to $NPROC threads\" \\\n && cd /tmp/api-gateway/ \\\n && curl -L https://s3.amazonaws.com/adobe-cloudops-apip-installers-ue1/3rd-party/pcre-${PCRE_VERSION}.tar.gz -o /tmp/api-gateway/pcre-${PCRE_VERSION}.tar.gz \\\n && curl -L https://s3.amazonaws.com/adobe-cloudops-apip-installers-ue1/3rd-party/openresty-${OPENRESTY_VERSION}.tar.gz -o /tmp/api-gateway/openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./pcre-${PCRE_VERSION}.tar.gz \\\n && cd /tmp/api-gateway/openresty-${OPENRESTY_VERSION} \\\n && echo \" - building debugging version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway-debug --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ --with-pcre-jit --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_auth_request_module --with-http_v2_module --with-luajit --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module --with-debug -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - building regular version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ --with-pcre-jit --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_v2_module --with-luajit --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - adding Nginx Test support\" \\\n && curl -L https://github.com/openresty/test-nginx/archive/v${TEST_NGINX_VERSION}.tar.gz -o ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cd ${_prefix} \\\n && tar -xf ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && rm ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cp -r ${_prefix}/test-nginx-0.24/inc/* /usr/local/share/perl5/site_perl/ \\\n && ln -s ${_sbindir}/api-gateway-debug ${_sbindir}/nginx \\\n && cp /tmp/api-gateway/openresty-${OPENRESTY_VERSION}/build/install ${_prefix}/api-gateway/bin/resty-install \\\n && apk del g++ gcc make \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV LUA_RESTY_HTTP_VERSION=\"0.07\"\nRUN echo \" ... installing lua-resty-http...\" \\\n && apk update \\\n && apk add make=4.1-r1 \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/pintsized/lua-resty-http/archive/v${LUA_RESTY_HTTP_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION} \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nENV LUA_RESTY_IPUTILS_VERSION=\"0.2.0\"\nRUN echo \" ... installing lua-resty-iputils...\" \\\n && apk update \\\n && apk add make=4.1-r1 \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/hamishforbes/lua-resty-iputils/archive/v${LUA_RESTY_IPUTILS_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION} \\\n && export LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n && export INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && $INSTALL -d ${LUA_LIB_DIR}/resty \\\n && $INSTALL lib/resty/*.lua ${LUA_LIB_DIR}/resty/ \\\n && rm -rf /tmp/api-gateway\nENV CONFIG_SUPERVISOR_VERSION=\"1.0.3\"\nENV GOPATH=\"/usr/lib/go/bin\"\nENV GOBIN=\"/usr/lib/go/bin\"\nENV PATH=\"$PATH:/usr/lib/go/bin\"\nRUN echo \" ... installing api-gateway-config-supervisor ... \" \\\n && echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n && apk update \\\n && apk add gcc=5.3.0-r0 make=4.1-r1 git=2.8.6-r0 'go' \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-config-supervisor/archive/${CONFIG_SUPERVISOR_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}.tar.gz \\\n && cd /tmp/api-gateway \\\n && tar -xf /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}.tar.gz \\\n && mkdir -p /tmp/go \\\n && mv /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}/* /tmp/go \\\n && cd /tmp/go \\\n && make setup \\\n && mkdir -p /tmp/go/Godeps/_workspace \\\n && ln -s /tmp/go/vendor /tmp/go/Godeps/_workspace/src \\\n && mkdir -p /tmp/go-src/src/github.com/adobe-apiplatform \\\n && ln -s /tmp/go /tmp/go-src/src/github.com/adobe-apiplatform/api-gateway-config-supervisor \\\n && GOPATH=/tmp/go/vendor:/tmp/go-src CGO_ENABLED=0 GOOS=linux /usr/lib/go/bin/godep go build -ldflags \"-s\" -a -installsuffix cgo -o api-gateway-config-supervisor ./ \\\n && mv /tmp/go/api-gateway-config-supervisor /usr/local/sbin/ \\\n && echo \"installing rclone sync ... skipped due to https://github.com/ncw/rclone/issues/663 ... \" \\\n && echo \" cleaning up ... \" \\\n && rm -rf /usr/lib/go/bin/src \\\n && rm -rf /tmp/go \\\n && rm -rf /tmp/go-src \\\n && rm -rf /usr/lib/go/bin/pkg/ \\\n && rm -rf /usr/lib/go/bin/godep \\\n && apk del make git go gcc \\\n && rm -rf /var/cache/apk/*\nRUN echo \" ... installing aws-cli ...\" \\\n && apk update \\\n && apk add python=2.7.14-r0 \\\n && apk add py-pip=8.1.2-r0 \\\n && pip install pip==23.1 --upgrade \\\n && pip install awscli==1.27.114\nENV HMAC_LUA_VERSION=\"1.0.0\"\nRUN echo \" ... installing api-gateway-hmac ...\" \\\n && apk update \\\n && apk add make=4.1-r1 \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-hmac/archive/${HMAC_LUA_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make test \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nENV CACHE_MANAGER_VERSION=\"1.0.1\"\nRUN echo \" ... installing api-gateway-cachemanager...\" \\\n && apk update \\\n && apk add make=4.1-r1 \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-cachemanager/archive/${CACHE_MANAGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && apk del redis \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV AWS_VERSION=\"1.7.1\"\nRUN echo \" ... installing api-gateway-aws ...\" \\\n && apk update \\\n && apk add make=4.1-r1 \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-aws/archive/${AWS_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-aws-${AWS_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV REQUEST_VALIDATION_VERSION=\"1.2.4\"\nRUN echo \" ... installing api-gateway-request-validation ...\" \\\n && apk update \\\n && apk add make=4.1-r1 \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-request-validation/archive/${REQUEST_VALIDATION_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && apk del redis \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV ASYNC_LOGGER_VERSION=\"1.0.1\"\nRUN echo \" ... installing api-gateway-async-logger ...\" \\\n && apk update \\\n && apk add make=4.1-r1 \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-async-logger/archive/${ASYNC_LOGGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV ZMQ_ADAPTOR_VERSION=\"0.2.1\"\nRUN echo \" ... installing api-gateway-zmq-adaptor\" \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-zmq-adaptor/archive/${ZMQ_ADAPTOR_VERSION}.tar.gz -o /tmp/api-gateway-zmq-adaptor-${ZMQ_ADAPTOR_VERSION} \\\n && apk update \\\n && apk add check-dev=0.10.0-r0 g++=5.3.0-r0 gcc=5.3.0-r0 \\\n && cd /tmp/ \\\n && tar -xf /tmp/api-gateway-zmq-adaptor-${ZMQ_ADAPTOR_VERSION} \\\n && cd /tmp/api-gateway-zmq-adaptor-* \\\n && make test \\\n && PREFIX=/usr/local/sbin make install \\\n && rm -rf /tmp/api-gateway-zmq-adaptor-* \\\n && apk del check-dev g++ gcc \\\n && rm -rf /var/cache/apk/*\nENV ZMQ_LOGGER_VERSION=\"1.0.0\"\nRUN echo \" ... installing api-gateway-zmq-logger ...\" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-zmq-logger/archive/${ZMQ_LOGGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make test \\\n && make install LUA_LIB_DIR=/usr/local/api-gateway/lualib INSTALL=/usr/local/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nENV REQUEST_TRACKING_VERSION=\"1.0.1\"\nRUN echo \" ... installing api-gateway-request-tracking ...\" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-request-tracking/archive/${REQUEST_TRACKING_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=/usr/local/api-gateway/lualib INSTALL=/usr/local/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nRUN curl -L -k -s -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n && apk update \\\n && apk add gawk=4.1.3-r0 \\\n && chmod 755 /usr/local/bin/jq \\\n && rm -rf /var/cache/apk/*\nCOPY init.sh /etc/init-container.sh\n#  add the default configuration for the Gateway\nCOPY api-gateway-config /etc/api-gateway\nRUN adduser -S nginx-api-gateway -u 1000 \\\n && addgroup -S nginx-api-gateway -g 1000\nRUN mkdir -p /usr/local/api-gateway \\\n && chown -R nginx-api-gateway /etc/api-gateway /var/log/api-gateway /usr/local \\\n && chmod 755 -R /etc/api-gateway /var/log/api-gateway /usr/local \\\n && chmod 4755 /bin/busybox \\\n && echo \"nginx-api-gateway ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n#   add the default configuration for the Gateway\nUSER nginx-api-gateway\nENTRYPOINT [\"/etc/init-container.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  apigateway\n#\n#  VERSION               1.9.7.3\n#\n#  From https://hub.docker.com/_/alpine/\n#  alpine:3.4 if go <1.7\nFROM alpine:3.4\n#  install dependencies\nRUN apk update \\\n && apk add gcc tar libtool zlib jemalloc jemalloc-dev perl make musl-dev openssl-dev pcre-dev g++ zlib-dev curl python perl-test-longstring perl-list-moreutils perl-http-message geoip-dev sudo\nENV ZMQ_VERSION=\"4.0.5\"\nENV CZMQ_VERSION=\"2.2.0\"\n#  Installing throttling dependencies\nRUN echo \" ... adding throttling support with ZMQ and CZMQ\" \\\n && apk add autoconf automake \\\n && curl -L https://github.com/zeromq/zeromq4-x/archive/v${ZMQ_VERSION}.tar.gz -o /tmp/zeromq.tar.gz \\\n && cd /tmp/ \\\n && tar -xf /tmp/zeromq.tar.gz \\\n && cd /tmp/zeromq*/ \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info \\\n && make \\\n && make install \\\n && curl -L https://github.com/zeromq/czmq/archive/v${CZMQ_VERSION}.tar.gz -o /tmp/czmq.tar.gz \\\n && cd /tmp/ \\\n && tar -xf /tmp/czmq.tar.gz \\\n && cd /tmp/czmq*/ \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info \\\n && make \\\n && make install \\\n && apk del automake autoconf \\\n && rm -rf /tmp/zeromq* \\\n && rm -rf /tmp/czmq* \\\n && rm -rf /var/cache/apk/*\n#  openresty build\nENV OPENRESTY_VERSION=\"1.13.6.1\" \\\n    PCRE_VERSION=\"8.37\" \\\n    TEST_NGINX_VERSION=\"0.24\" \\\n    _prefix=\"/usr/local\" \\\n    _exec_prefix=\"/usr/local\" \\\n    _localstatedir=\"/var\" \\\n    _sysconfdir=\"/etc\" \\\n    _sbindir=\"/usr/local/sbin\"\nRUN echo \" ... adding Openresty, NGINX, and PCRE\" \\\n && mkdir -p /tmp/api-gateway \\\n && readonly NPROC=$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) \\\n && echo \"using up to $NPROC threads\" \\\n && cd /tmp/api-gateway/ \\\n && curl -L https://s3.amazonaws.com/adobe-cloudops-apip-installers-ue1/3rd-party/pcre-${PCRE_VERSION}.tar.gz -o /tmp/api-gateway/pcre-${PCRE_VERSION}.tar.gz \\\n && curl -L https://s3.amazonaws.com/adobe-cloudops-apip-installers-ue1/3rd-party/openresty-${OPENRESTY_VERSION}.tar.gz -o /tmp/api-gateway/openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./pcre-${PCRE_VERSION}.tar.gz \\\n && cd /tmp/api-gateway/openresty-${OPENRESTY_VERSION} \\\n && echo \" - building debugging version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway-debug --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ --with-pcre-jit --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_auth_request_module --with-http_v2_module --with-luajit --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module --with-debug -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - building regular version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ --with-pcre-jit --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_v2_module --with-luajit --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - adding Nginx Test support\" \\\n && curl -L https://github.com/openresty/test-nginx/archive/v${TEST_NGINX_VERSION}.tar.gz -o ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cd ${_prefix} \\\n && tar -xf ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && rm ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cp -r ${_prefix}/test-nginx-0.24/inc/* /usr/local/share/perl5/site_perl/ \\\n && ln -s ${_sbindir}/api-gateway-debug ${_sbindir}/nginx \\\n && cp /tmp/api-gateway/openresty-${OPENRESTY_VERSION}/build/install ${_prefix}/api-gateway/bin/resty-install \\\n && apk del g++ gcc make \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV LUA_RESTY_HTTP_VERSION=\"0.07\"\nRUN echo \" ... installing lua-resty-http...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/pintsized/lua-resty-http/archive/v${LUA_RESTY_HTTP_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION} \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nENV LUA_RESTY_IPUTILS_VERSION=\"0.2.0\"\nRUN echo \" ... installing lua-resty-iputils...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/hamishforbes/lua-resty-iputils/archive/v${LUA_RESTY_IPUTILS_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION} \\\n && export LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n && export INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && $INSTALL -d ${LUA_LIB_DIR}/resty \\\n && $INSTALL lib/resty/*.lua ${LUA_LIB_DIR}/resty/ \\\n && rm -rf /tmp/api-gateway\nENV CONFIG_SUPERVISOR_VERSION=\"1.0.3\"\nENV GOPATH=\"/usr/lib/go/bin\"\nENV GOBIN=\"/usr/lib/go/bin\"\nENV PATH=\"$PATH:/usr/lib/go/bin\"\nRUN echo \" ... installing api-gateway-config-supervisor ... \" \\\n && echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n && apk update \\\n && apk add gcc make git 'go' \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-config-supervisor/archive/${CONFIG_SUPERVISOR_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}.tar.gz \\\n && cd /tmp/api-gateway \\\n && tar -xf /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}.tar.gz \\\n && mkdir -p /tmp/go \\\n && mv /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}/* /tmp/go \\\n && cd /tmp/go \\\n && make setup \\\n && mkdir -p /tmp/go/Godeps/_workspace \\\n && ln -s /tmp/go/vendor /tmp/go/Godeps/_workspace/src \\\n && mkdir -p /tmp/go-src/src/github.com/adobe-apiplatform \\\n && ln -s /tmp/go /tmp/go-src/src/github.com/adobe-apiplatform/api-gateway-config-supervisor \\\n && GOPATH=/tmp/go/vendor:/tmp/go-src CGO_ENABLED=0 GOOS=linux /usr/lib/go/bin/godep go build -ldflags \"-s\" -a -installsuffix cgo -o api-gateway-config-supervisor ./ \\\n && mv /tmp/go/api-gateway-config-supervisor /usr/local/sbin/ \\\n && echo \"installing rclone sync ... skipped due to https://github.com/ncw/rclone/issues/663 ... \" \\\n && echo \" cleaning up ... \" \\\n && rm -rf /usr/lib/go/bin/src \\\n && rm -rf /tmp/go \\\n && rm -rf /tmp/go-src \\\n && rm -rf /usr/lib/go/bin/pkg/ \\\n && rm -rf /usr/lib/go/bin/godep \\\n && apk del make git go gcc \\\n && rm -rf /var/cache/apk/*\nRUN echo \" ... installing aws-cli ...\" \\\n && apk update \\\n && apk add python \\\n && apk add py-pip \\\n && pip install pip --upgrade \\\n && pip install awscli\nENV HMAC_LUA_VERSION=\"1.0.0\"\nRUN echo \" ... installing api-gateway-hmac ...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-hmac/archive/${HMAC_LUA_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make test \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nENV CACHE_MANAGER_VERSION=\"1.0.1\"\nRUN echo \" ... installing api-gateway-cachemanager...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-cachemanager/archive/${CACHE_MANAGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && apk del redis \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV AWS_VERSION=\"1.7.1\"\nRUN echo \" ... installing api-gateway-aws ...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-aws/archive/${AWS_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-aws-${AWS_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV REQUEST_VALIDATION_VERSION=\"1.2.4\"\nRUN echo \" ... installing api-gateway-request-validation ...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-request-validation/archive/${REQUEST_VALIDATION_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && apk del redis \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV ASYNC_LOGGER_VERSION=\"1.0.1\"\nRUN echo \" ... installing api-gateway-async-logger ...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-async-logger/archive/${ASYNC_LOGGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV ZMQ_ADAPTOR_VERSION=\"0.2.1\"\nRUN echo \" ... installing api-gateway-zmq-adaptor\" \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-zmq-adaptor/archive/${ZMQ_ADAPTOR_VERSION}.tar.gz -o /tmp/api-gateway-zmq-adaptor-${ZMQ_ADAPTOR_VERSION} \\\n && apk update \\\n && apk add check-dev g++ gcc \\\n && cd /tmp/ \\\n && tar -xf /tmp/api-gateway-zmq-adaptor-${ZMQ_ADAPTOR_VERSION} \\\n && cd /tmp/api-gateway-zmq-adaptor-* \\\n && make test \\\n && PREFIX=/usr/local/sbin make install \\\n && rm -rf /tmp/api-gateway-zmq-adaptor-* \\\n && apk del check-dev g++ gcc \\\n && rm -rf /var/cache/apk/*\nENV ZMQ_LOGGER_VERSION=\"1.0.0\"\nRUN echo \" ... installing api-gateway-zmq-logger ...\" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-zmq-logger/archive/${ZMQ_LOGGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make test \\\n && make install LUA_LIB_DIR=/usr/local/api-gateway/lualib INSTALL=/usr/local/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nENV REQUEST_TRACKING_VERSION=\"1.0.1\"\nRUN echo \" ... installing api-gateway-request-tracking ...\" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-request-tracking/archive/${REQUEST_TRACKING_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=/usr/local/api-gateway/lualib INSTALL=/usr/local/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nRUN curl -L -k -s -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n && apk update \\\n && apk add gawk \\\n && chmod 755 /usr/local/bin/jq \\\n && rm -rf /var/cache/apk/*\nCOPY init.sh /etc/init-container.sh\n# add the default configuration for the Gateway\nCOPY api-gateway-config /etc/api-gateway\nRUN adduser -S nginx-api-gateway -u 1000 \\\n && addgroup -S nginx-api-gateway -g 1000\nRUN mkdir -p /usr/local/api-gateway \\\n && chown -R nginx-api-gateway /etc/api-gateway /var/log/api-gateway /usr/local \\\n && chmod 755 -R /etc/api-gateway /var/log/api-gateway /usr/local \\\n && chmod 4755 /bin/busybox \\\n && echo \"nginx-api-gateway ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n#  add the default configuration for the Gateway\nUSER nginx-api-gateway\nENTRYPOINT [\"/etc/init-container.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"01aa600e7d874b2ee4375a45d006d79b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   apigateway\n#\n#   VERSION               1.9.7.3\n#\n#   From https://hub.docker.com/_/alpine/\n#   alpine:3.4 if go <1.7\nFROM alpine:3.4\n#   install dependencies\nRUN apk update \\\n && apk add gcc tar libtool zlib jemalloc jemalloc-dev perl make musl-dev openssl-dev pcre-dev g++ zlib-dev curl python perl-test-longstring perl-list-moreutils perl-http-message geoip-dev sudo\nENV ZMQ_VERSION=\"4.0.5\"\nENV CZMQ_VERSION=\"2.2.0\"\n#   Installing throttling dependencies\nRUN echo \" ... adding throttling support with ZMQ and CZMQ\" \\\n && apk add autoconf automake \\\n && curl -L https://github.com/zeromq/zeromq4-x/archive/v${ZMQ_VERSION}.tar.gz -o /tmp/zeromq.tar.gz \\\n && cd /tmp/ \\\n && tar -xf /tmp/zeromq.tar.gz \\\n && cd /tmp/zeromq*/ \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info \\\n && make \\\n && make install \\\n && curl -L https://github.com/zeromq/czmq/archive/v${CZMQ_VERSION}.tar.gz -o /tmp/czmq.tar.gz \\\n && cd /tmp/ \\\n && tar -xf /tmp/czmq.tar.gz \\\n && cd /tmp/czmq*/ \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info \\\n && make \\\n && make install \\\n && apk del automake autoconf \\\n && rm -rf /tmp/zeromq* \\\n && rm -rf /tmp/czmq* \\\n && rm -rf /var/cache/apk/*\n#   openresty build\nENV OPENRESTY_VERSION=\"1.13.6.1\" \\\n    PCRE_VERSION=\"8.37\" \\\n    TEST_NGINX_VERSION=\"0.24\" \\\n    _prefix=\"/usr/local\" \\\n    _exec_prefix=\"/usr/local\" \\\n    _localstatedir=\"/var\" \\\n    _sysconfdir=\"/etc\" \\\n    _sbindir=\"/usr/local/sbin\"\nRUN echo \" ... adding Openresty, NGINX, and PCRE\" \\\n && mkdir -p /tmp/api-gateway \\\n && readonly NPROC=$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) \\\n && echo \"using up to $NPROC threads\" \\\n && cd /tmp/api-gateway/ \\\n && curl -L https://s3.amazonaws.com/adobe-cloudops-apip-installers-ue1/3rd-party/pcre-${PCRE_VERSION}.tar.gz -o /tmp/api-gateway/pcre-${PCRE_VERSION}.tar.gz \\\n && curl -L https://s3.amazonaws.com/adobe-cloudops-apip-installers-ue1/3rd-party/openresty-${OPENRESTY_VERSION}.tar.gz -o /tmp/api-gateway/openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./openresty-${OPENRESTY_VERSION}.tar.gz \\\n && tar -zxf ./pcre-${PCRE_VERSION}.tar.gz \\\n && cd /tmp/api-gateway/openresty-${OPENRESTY_VERSION} \\\n && echo \" - building debugging version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway-debug --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ --with-pcre-jit --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_auth_request_module --with-http_v2_module --with-luajit --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module --with-debug -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - building regular version of the api-gateway ... \" \\\n && ./configure --prefix=${_exec_prefix}/api-gateway --sbin-path=${_sbindir}/api-gateway --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf --error-log-path=${_localstatedir}/log/api-gateway/error.log --http-log-path=${_localstatedir}/log/api-gateway/access.log --pid-path=${_localstatedir}/run/api-gateway.pid --lock-path=${_localstatedir}/run/api-gateway.lock --with-pcre=../pcre-${PCRE_VERSION}/ --with-pcre-jit --with-stream --with-stream_ssl_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_v2_module --with-luajit --without-http_ssi_module --without-http_userid_module --without-http_uwsgi_module --without-http_scgi_module -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && echo \" - adding Nginx Test support\" \\\n && curl -L https://github.com/openresty/test-nginx/archive/v${TEST_NGINX_VERSION}.tar.gz -o ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cd ${_prefix} \\\n && tar -xf ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && rm ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n && cp -r ${_prefix}/test-nginx-0.24/inc/* /usr/local/share/perl5/site_perl/ \\\n && ln -s ${_sbindir}/api-gateway-debug ${_sbindir}/nginx \\\n && cp /tmp/api-gateway/openresty-${OPENRESTY_VERSION}/build/install ${_prefix}/api-gateway/bin/resty-install \\\n && apk del g++ gcc make \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV LUA_RESTY_HTTP_VERSION=\"0.07\"\nRUN echo \" ... installing lua-resty-http...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/pintsized/lua-resty-http/archive/v${LUA_RESTY_HTTP_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION} \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nENV LUA_RESTY_IPUTILS_VERSION=\"0.2.0\"\nRUN echo \" ... installing lua-resty-iputils...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/hamishforbes/lua-resty-iputils/archive/v${LUA_RESTY_IPUTILS_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION} \\\n && export LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n && export INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && $INSTALL -d ${LUA_LIB_DIR}/resty \\\n && $INSTALL lib/resty/*.lua ${LUA_LIB_DIR}/resty/ \\\n && rm -rf /tmp/api-gateway\nENV CONFIG_SUPERVISOR_VERSION=\"1.0.3\"\nENV GOPATH=\"/usr/lib/go/bin\"\nENV GOBIN=\"/usr/lib/go/bin\"\nENV PATH=\"$PATH:/usr/lib/go/bin\"\nRUN echo \" ... installing api-gateway-config-supervisor ... \" \\\n && echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n && apk update \\\n && apk add gcc make git 'go' \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-config-supervisor/archive/${CONFIG_SUPERVISOR_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}.tar.gz \\\n && cd /tmp/api-gateway \\\n && tar -xf /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}.tar.gz \\\n && mkdir -p /tmp/go \\\n && mv /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}/* /tmp/go \\\n && cd /tmp/go \\\n && make setup \\\n && mkdir -p /tmp/go/Godeps/_workspace \\\n && ln -s /tmp/go/vendor /tmp/go/Godeps/_workspace/src \\\n && mkdir -p /tmp/go-src/src/github.com/adobe-apiplatform \\\n && ln -s /tmp/go /tmp/go-src/src/github.com/adobe-apiplatform/api-gateway-config-supervisor \\\n && GOPATH=/tmp/go/vendor:/tmp/go-src CGO_ENABLED=0 GOOS=linux /usr/lib/go/bin/godep go build -ldflags \"-s\" -a -installsuffix cgo -o api-gateway-config-supervisor ./ \\\n && mv /tmp/go/api-gateway-config-supervisor /usr/local/sbin/ \\\n && echo \"installing rclone sync ... skipped due to https://github.com/ncw/rclone/issues/663 ... \" \\\n && echo \" cleaning up ... \" \\\n && rm -rf /usr/lib/go/bin/src \\\n && rm -rf /tmp/go \\\n && rm -rf /tmp/go-src \\\n && rm -rf /usr/lib/go/bin/pkg/ \\\n && rm -rf /usr/lib/go/bin/godep \\\n && apk del make git go gcc \\\n && rm -rf /var/cache/apk/*\nRUN echo \" ... installing aws-cli ...\" \\\n && apk update \\\n && apk add python \\\n && apk add py-pip \\\n && pip install pip --upgrade \\\n && pip install awscli\nENV HMAC_LUA_VERSION=\"1.0.0\"\nRUN echo \" ... installing api-gateway-hmac ...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-hmac/archive/${HMAC_LUA_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make test \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nENV CACHE_MANAGER_VERSION=\"1.0.1\"\nRUN echo \" ... installing api-gateway-cachemanager...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-cachemanager/archive/${CACHE_MANAGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && apk del redis \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV AWS_VERSION=\"1.7.1\"\nRUN echo \" ... installing api-gateway-aws ...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-aws/archive/${AWS_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-aws-${AWS_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV REQUEST_VALIDATION_VERSION=\"1.2.4\"\nRUN echo \" ... installing api-gateway-request-validation ...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-request-validation/archive/${REQUEST_VALIDATION_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && apk del redis \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV ASYNC_LOGGER_VERSION=\"1.0.1\"\nRUN echo \" ... installing api-gateway-async-logger ...\" \\\n && apk update \\\n && apk add make \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-async-logger/archive/${ASYNC_LOGGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=${_prefix}/api-gateway/lualib INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /tmp/api-gateway\nENV ZMQ_ADAPTOR_VERSION=\"0.2.1\"\nRUN echo \" ... installing api-gateway-zmq-adaptor\" \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-zmq-adaptor/archive/${ZMQ_ADAPTOR_VERSION}.tar.gz -o /tmp/api-gateway-zmq-adaptor-${ZMQ_ADAPTOR_VERSION} \\\n && apk update \\\n && apk add check-dev g++ gcc \\\n && cd /tmp/ \\\n && tar -xf /tmp/api-gateway-zmq-adaptor-${ZMQ_ADAPTOR_VERSION} \\\n && cd /tmp/api-gateway-zmq-adaptor-* \\\n && make test \\\n && PREFIX=/usr/local/sbin make install \\\n && rm -rf /tmp/api-gateway-zmq-adaptor-* \\\n && apk del check-dev g++ gcc \\\n && rm -rf /var/cache/apk/*\nENV ZMQ_LOGGER_VERSION=\"1.0.0\"\nRUN echo \" ... installing api-gateway-zmq-logger ...\" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-zmq-logger/archive/${ZMQ_LOGGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make test \\\n && make install LUA_LIB_DIR=/usr/local/api-gateway/lualib INSTALL=/usr/local/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nENV REQUEST_TRACKING_VERSION=\"1.0.1\"\nRUN echo \" ... installing api-gateway-request-tracking ...\" \\\n && mkdir -p /tmp/api-gateway \\\n && curl -L https://github.com/adobe-apiplatform/api-gateway-request-tracking/archive/${REQUEST_TRACKING_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz \\\n && tar -xf /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n && cd /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION} \\\n && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n && make install LUA_LIB_DIR=/usr/local/api-gateway/lualib INSTALL=/usr/local/api-gateway/bin/resty-install \\\n && rm -rf /tmp/api-gateway\nRUN curl -L -k -s -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n && apk update \\\n && apk add gawk \\\n && chmod 755 /usr/local/bin/jq \\\n && rm -rf /var/cache/apk/*\nCOPY init.sh /etc/init-container.sh\n#  add the default configuration for the Gateway\nCOPY api-gateway-config /etc/api-gateway\nRUN adduser -S nginx-api-gateway -u 1000 \\\n && addgroup -S nginx-api-gateway -g 1000\nRUN mkdir -p /usr/local/api-gateway \\\n && chown -R nginx-api-gateway /etc/api-gateway /var/log/api-gateway /usr/local \\\n && chmod 755 -R /etc/api-gateway /var/log/api-gateway /usr/local \\\n && chmod 4755 /bin/busybox \\\n && echo \"nginx-api-gateway ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n#   add the default configuration for the Gateway\nUSER nginx-api-gateway\nENTRYPOINT [\"/etc/init-container.sh\"]\n","originalDockerfileUglifiedHash":"f7c3ef24044b8ac151d08fadd91b6d21","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/338595b7f02973827967e727b8d64f9b9519bace.dockerfile"}