{"seed":1662691230,"processedDockerfileHash":"e21e5f0628f8cd4d00e2a41650f6932d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Based on the SequenceIQ hadoop-docker project hosted at\n#   https://github.com/sequenceiq/hadoop-docker, and modified at\n#   the Apache Software Foundation (ASF).\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Creates pseudo distributed hadoop 2.8.3 with java 8\n#\n#   Modified from the SequenceIQ Dockerfiles at https://github.com/sequenceiq/hadoop-docker\n#\n#   docker build -t druid-hadoop-demo:2.8.3 .\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER SequenceIQ\nUSER root\n#   install dev tools\nRUN yum clean all \\\n && rpm --rebuilddb \\\n && yum install -y curl which tar sudo openssh-server openssh-clients rsync yum-plugin-ovl \\\n && yum clean all \\\n && yum update -y libselinux \\\n && yum clean all\n#   update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\n#   passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#   zulu java 8\nRUN rpm --import http://repos.azulsystems.com/RPM-GPG-KEY-azulsystems\nRUN rpm --rebuilddb\nRUN sudo curl -o /etc/yum.repos.d/zulu.repo http://repos.azulsystems.com/rhel/zulu.repo\nRUN yum install -y zulu-8\nENV JAVA_HOME=\"/usr/lib/jvm/zulu-8\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\n#   hadoop\nRUN curl -s https://archive.apache.org/dist/hadoop/core/hadoop-2.8.3/hadoop-2.8.3.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local \\\n && ln -s ./hadoop-2.8.3 hadoop\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nENV HADOOP_COMMON_HOME=\"/usr/local/hadoop\"\nENV HADOOP_HDFS_HOME=\"/usr/local/hadoop\"\nENV HADOOP_MAPRED_HOME=\"/usr/local/hadoop\"\nENV HADOOP_YARN_HOME=\"/usr/local/hadoop\"\nENV HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV YARN_CONF_DIR=\"$HADOOP_PREFIX/etc/hadoop\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/lib/jvm/zulu-8\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN mkdir $HADOOP_PREFIX/input\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n#   pseudo distributed\nCOPY core-site.xml.template $HADOOP_PREFIX/etc/hadoop/core-site.xml.template\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nCOPY hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\nCOPY mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nCOPY yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\nCOPY ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n#   # installing supervisord\n#   RUN yum install -y python-setuptools\n#   RUN easy_install pip\n#   RUN curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -o - | python\n#   RUN pip install supervisor\n#\n#   ADD supervisord.conf /etc/supervisord.conf\nCOPY bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\nENV BOOTSTRAP=\"/etc/bootstrap.sh\"\n#   workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n#   Copy additional .jars to classpath\nRUN cp /usr/local/hadoop/share/hadoop/tools/lib/*.jar /usr/local/hadoop/share/hadoop/common/lib/\n#   fix the 254 error code\nRUN sed -i \"/^[^#]*UsePAM/ s/.*/#&/\" /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -mkdir -p /user/root\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -put $HADOOP_PREFIX/etc/hadoop/ input\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n#   Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#   Mapred ports\nEXPOSE 10020/tcp 19888/tcp\n#  Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n#  Other ports\nEXPOSE 49707/tcp 2122/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Based on the SequenceIQ hadoop-docker project hosted at\n#  https://github.com/sequenceiq/hadoop-docker, and modified at\n#  the Apache Software Foundation (ASF).\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Creates pseudo distributed hadoop 2.8.3 with java 8\n#\n#  Modified from the SequenceIQ Dockerfiles at https://github.com/sequenceiq/hadoop-docker\n#\n#  docker build -t druid-hadoop-demo:2.8.3 .\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER SequenceIQ\nUSER root\n#  install dev tools\nRUN yum clean all \\\n && rpm --rebuilddb \\\n && yum install -y curl which tar sudo openssh-server openssh-clients rsync yum-plugin-ovl \\\n && yum clean all \\\n && yum update -y libselinux \\\n && yum clean all\n#  update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\n#  passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  zulu java 8\nRUN rpm --import http://repos.azulsystems.com/RPM-GPG-KEY-azulsystems\nRUN rpm --rebuilddb\nRUN sudo curl -o /etc/yum.repos.d/zulu.repo http://repos.azulsystems.com/rhel/zulu.repo\nRUN yum install -y zulu-8\nENV JAVA_HOME=\"/usr/lib/jvm/zulu-8\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\n#  hadoop\nRUN curl -s https://archive.apache.org/dist/hadoop/core/hadoop-2.8.3/hadoop-2.8.3.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local \\\n && ln -s ./hadoop-2.8.3 hadoop\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nENV HADOOP_COMMON_HOME=\"/usr/local/hadoop\"\nENV HADOOP_HDFS_HOME=\"/usr/local/hadoop\"\nENV HADOOP_MAPRED_HOME=\"/usr/local/hadoop\"\nENV HADOOP_YARN_HOME=\"/usr/local/hadoop\"\nENV HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV YARN_CONF_DIR=\"$HADOOP_PREFIX/etc/hadoop\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/lib/jvm/zulu-8\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN mkdir $HADOOP_PREFIX/input\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n#  pseudo distributed\nADD core-site.xml.template $HADOOP_PREFIX/etc/hadoop/core-site.xml.template\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\nADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n#  # installing supervisord\n#  RUN yum install -y python-setuptools\n#  RUN easy_install pip\n#  RUN curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -o - | python\n#  RUN pip install supervisor\n#\n#  ADD supervisord.conf /etc/supervisord.conf\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\nENV BOOTSTRAP=\"/etc/bootstrap.sh\"\n#  workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n#  Copy additional .jars to classpath\nRUN cp /usr/local/hadoop/share/hadoop/tools/lib/*.jar /usr/local/hadoop/share/hadoop/common/lib/\n#  fix the 254 error code\nRUN sed -i \"/^[^#]*UsePAM/ s/.*/#&/\" /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -mkdir -p /user/root\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -put $HADOOP_PREFIX/etc/hadoop/ input\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n#  Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#  Mapred ports\nEXPOSE 10020/tcp 19888/tcp\n# Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n# Other ports\nEXPOSE 49707/tcp 2122/tcp\n","injectedSmells":[],"originalDockerfileHash":"737b2a088c69fdd03e57debf631aa79e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Based on the SequenceIQ hadoop-docker project hosted at\n#   https://github.com/sequenceiq/hadoop-docker, and modified at\n#   the Apache Software Foundation (ASF).\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Creates pseudo distributed hadoop 2.8.3 with java 8\n#\n#   Modified from the SequenceIQ Dockerfiles at https://github.com/sequenceiq/hadoop-docker\n#\n#   docker build -t druid-hadoop-demo:2.8.3 .\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER SequenceIQ\nUSER root\n#   install dev tools\nRUN yum clean all \\\n && rpm --rebuilddb \\\n && yum install -y curl which tar sudo openssh-server openssh-clients rsync yum-plugin-ovl \\\n && yum clean all \\\n && yum update -y libselinux \\\n && yum clean all\n#   update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\n#   passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#   zulu java 8\nRUN rpm --import http://repos.azulsystems.com/RPM-GPG-KEY-azulsystems\nRUN rpm --rebuilddb\nRUN sudo curl -o /etc/yum.repos.d/zulu.repo http://repos.azulsystems.com/rhel/zulu.repo\nRUN yum install -y zulu-8\nENV JAVA_HOME=\"/usr/lib/jvm/zulu-8\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\n#   hadoop\nRUN curl -s https://archive.apache.org/dist/hadoop/core/hadoop-2.8.3/hadoop-2.8.3.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local \\\n && ln -s ./hadoop-2.8.3 hadoop\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nENV HADOOP_COMMON_HOME=\"/usr/local/hadoop\"\nENV HADOOP_HDFS_HOME=\"/usr/local/hadoop\"\nENV HADOOP_MAPRED_HOME=\"/usr/local/hadoop\"\nENV HADOOP_YARN_HOME=\"/usr/local/hadoop\"\nENV HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV YARN_CONF_DIR=\"$HADOOP_PREFIX/etc/hadoop\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/lib/jvm/zulu-8\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN mkdir $HADOOP_PREFIX/input\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n#   pseudo distributed\nADD core-site.xml.template $HADOOP_PREFIX/etc/hadoop/core-site.xml.template\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\nADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n#   # installing supervisord\n#   RUN yum install -y python-setuptools\n#   RUN easy_install pip\n#   RUN curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -o - | python\n#   RUN pip install supervisor\n#\n#   ADD supervisord.conf /etc/supervisord.conf\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\nENV BOOTSTRAP=\"/etc/bootstrap.sh\"\n#   workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n#   Copy additional .jars to classpath\nRUN cp /usr/local/hadoop/share/hadoop/tools/lib/*.jar /usr/local/hadoop/share/hadoop/common/lib/\n#   fix the 254 error code\nRUN sed -i \"/^[^#]*UsePAM/ s/.*/#&/\" /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -mkdir -p /user/root\nRUN service sshd start \\\n && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && $HADOOP_PREFIX/sbin/start-dfs.sh \\\n && $HADOOP_PREFIX/bin/hdfs dfs -put $HADOOP_PREFIX/etc/hadoop/ input\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n#   Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#   Mapred ports\nEXPOSE 10020/tcp 19888/tcp\n#  Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n#  Other ports\nEXPOSE 49707/tcp 2122/tcp\n","originalDockerfileUglifiedHash":"f6ca0433eb6cfdfd6e0551bd56f25162","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1801da2bc11eaf5489e43e766398a91ed79852a2.dockerfile"}