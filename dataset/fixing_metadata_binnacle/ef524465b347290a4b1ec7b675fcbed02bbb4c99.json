{"seed":1653350452,"processedDockerfileHash":"7f21775953d9ca08aa741a399c1c74d1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   To build DigiPal Framework Image with Docker (takes ~7 mins):\n#\n#   docker build -t kingsdigitallab/archetype build --no-cache\n#\n#   Then run the container like this:\n#\n#   docker stop archetype; docker rm archetype; mkdir ~/archetype; docker pull kingsdigitallab/archetype:latest; docker run -d --name archetype -v ~/archetype:/home/digipal/digipal_project:cached -p 9080:80 kingsdigitallab/archetype:latest; echo \"INSTALLED\";\n#\n#   Now you can browse to http://localhost/ from your host machine\n#   Note that this version is for local use only, not for production.\n#   You can use it to try out DigiPal or to start your own research.\n#\n#   To create image from container:\n#   \n#   # make Archetype changes, test and commit to new tag in master\n#   git commit; git push\n#   git push origin :refs/tags/2.2.1; git tag -f 2.2.1 COMMIT; \n#   # re-create :latest container\n#   docker stop newversion; docker rm newversion; docker run -ti --name newversion kingsdigitallab/archetype:latest bash\n#   # upgrade from inside container\n#   git config core.fileMode false; git pull; git checkout 2.2.1\n#   exit\n#   # commit as a new image\n#   docker commit -c 'ENV PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' -c 'ENV SHELL /bin/bash' -c 'VOLUME /home/digipal/digipal_project' -c 'CMD [\"/bin/bash\", \"/home/digipal/build/startup.sh\"]' newversion kingsdigitallab/archetype:VERSION\n#   # Test image\n#   docker stop archetype; docker rm archetype; mkdir ~/archetype; docker run -d --name archetype -v ~/archetype:/home/digipal/digipal_project:cached -p 9080:80 kingsdigitallab/archetype:2.2.1; echo \"INSTALLED\";\n#   # Push image to dockerhub\n#   docker push kingsdigitallab/archetype:2.2.1\n#   # Update the latest and push it\n#   docker tag kingsdigitallab/archetype:2.2.1 kingsdigitallab/archetype:latest\n#   docker push kingsdigitallab/archetype:latest\nFROM ubuntu:latest\nENV DP_WS_PORT=\"80\"\n#   Install Linux Packages in one go (best practice)\n#   Convention: one line per category (e.g. lessc, image server, database, ...)\n#  RUN apt-get update -y && apt-get install -y --no-install-recommends apt-utils \\\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends autoconf=2.71-3 pkg-config=1.8.1-1ubuntu2 libtool=2.4.7-5 git=1:2.39.2-1ubuntu1 nodejs=18.13.0+dfsg1-1ubuntu2 npm=9.2.0~ds1-1 libjpeg-dev=8c-2ubuntu11 libtiff-dev=4.5.0-4ubuntu1 imagemagick=8:6.9.11.60+dfsg-1.6 postgresql=15+248 python python-pip python-dev libxml2-dev=2.9.14+dfsg-1.1build2 libxslt1-dev=1.1.35-1 libpq-dev=15.2-1 nginx=1.22.0-1ubuntu3 uwsgi-plugin-python supervisor=4.2.1-1ubuntu1 wget=1.21.3-1ubuntu1 vim=2:9.0.1000-4ubuntu2 -y \\\n && apt-get remove -y python3.5 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  && apt-get autoremove -y \\\n#  #######################\n#   LESSC & TYPESCRIPT\n#   2.1.5 b/c 2.4.2 displays compilation errors on Text Viewer \nRUN npm install less@4.1.3 typescript@2.1.5 -g ; ln -s /usr/bin/nodejs /usr/bin/node\n#  #######################\n#   IMAGE PROCESSING\n#   download and build image server\n#   see https://github.com/ruven/iipsrv\n#   install dependencies (see above)\nUSER root\nCOPY build-iipsrv.sh /tmp/build-iipsrv.sh\nRUN bash /tmp/build-iipsrv.sh\n#  #######################\n#   DIGIPAL FRAMEWORK\n#   Fetch Digipal\nRUN mkdir /home/digipal\nWORKDIR /home/digipal\n#   (inc. the number in echo to force docker build to fetch new version of the code)\nRUN echo \"15\" \\\n && git clone -b develop https://github.com/kcl-ddh/digipal.git /home/digipal\nCOPY * build/\n#  #######################\n#   DATABASE\n#   see http://docs.docker.com/examples/postgresql_service/\n#   move psql data directory inside digipal_project\nRUN bash build/repair_digipal_project.sh\n#  #######################\n#   PYTHON + PIP\nRUN pip install pip==23.1 --upgrade\n#  #######################\n#   DIGIPAL FRAMEWORK\nRUN echo \"1\" \\\n && pip install -r build/requirements.txt\n#   Create tables, admin and site records, indexes\nRUN /bin/bash build/fix_permissions.sh\nRUN /etc/init.d/postgresql start \\\n && python manage.py migrate \\\n && python manage.py loaddata build/data_init.json build/data_char.json build/data_menu.json build/data_test.json \\\n && python manage.py dpsearch index \\\n && python manage.py dpsearch index_facets\nUSER root\n#  #######################\n#   WEB SERVER\nRUN rm /etc/nginx/sites-enabled/default \\\n && ln -s /home/digipal/build/nginx.conf /etc/nginx/sites-enabled/digipal.conf\n#  #######################\n#   SUPERVISOR\nRUN mkdir -p /var/log/supervisor\n#   Port for web server\nEXPOSE 80/tcp\n#  #######################\n#   START-UP\nENV SHELL=\"/bin/bash\"\nCMD [\"/bin/bash\", \"/home/digipal/build/startup.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  To build DigiPal Framework Image with Docker (takes ~7 mins):\n#\n#  docker build -t kingsdigitallab/archetype build --no-cache\n#\n#  Then run the container like this:\n#\n#  docker stop archetype; docker rm archetype; mkdir ~/archetype; docker pull kingsdigitallab/archetype:latest; docker run -d --name archetype -v ~/archetype:/home/digipal/digipal_project:cached -p 9080:80 kingsdigitallab/archetype:latest; echo \"INSTALLED\";\n#\n#  Now you can browse to http://localhost/ from your host machine\n#  Note that this version is for local use only, not for production.\n#  You can use it to try out DigiPal or to start your own research.\n#\n#  To create image from container:\n#  \n#  # make Archetype changes, test and commit to new tag in master\n#  git commit; git push\n#  git push origin :refs/tags/2.2.1; git tag -f 2.2.1 COMMIT; \n#  # re-create :latest container\n#  docker stop newversion; docker rm newversion; docker run -ti --name newversion kingsdigitallab/archetype:latest bash\n#  # upgrade from inside container\n#  git config core.fileMode false; git pull; git checkout 2.2.1\n#  exit\n#  # commit as a new image\n#  docker commit -c 'ENV PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' -c 'ENV SHELL /bin/bash' -c 'VOLUME /home/digipal/digipal_project' -c 'CMD [\"/bin/bash\", \"/home/digipal/build/startup.sh\"]' newversion kingsdigitallab/archetype:VERSION\n#  # Test image\n#  docker stop archetype; docker rm archetype; mkdir ~/archetype; docker run -d --name archetype -v ~/archetype:/home/digipal/digipal_project:cached -p 9080:80 kingsdigitallab/archetype:2.2.1; echo \"INSTALLED\";\n#  # Push image to dockerhub\n#  docker push kingsdigitallab/archetype:2.2.1\n#  # Update the latest and push it\n#  docker tag kingsdigitallab/archetype:2.2.1 kingsdigitallab/archetype:latest\n#  docker push kingsdigitallab/archetype:latest\nFROM ubuntu:latest\nENV DP_WS_PORT=\"80\"\n#  Install Linux Packages in one go (best practice)\n#  Convention: one line per category (e.g. lessc, image server, database, ...)\n# RUN apt-get update -y && apt-get install -y --no-install-recommends apt-utils \\\nRUN apt-get update -y \\\n && apt-get install autoconf pkg-config libtool git nodejs npm libjpeg-dev libtiff-dev imagemagick postgresql python python-pip python-dev libxml2-dev libxslt1-dev libpq-dev nginx uwsgi-plugin-python supervisor wget vim -y \\\n && apt-get remove -y python3.5 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n# && apt-get autoremove -y \\\n# #######################\n#  LESSC & TYPESCRIPT\n#  2.1.5 b/c 2.4.2 displays compilation errors on Text Viewer \nRUN npm install less typescript@2.1.5 -g ; ln -s /usr/bin/nodejs /usr/bin/node\n# #######################\n#  IMAGE PROCESSING\n#  download and build image server\n#  see https://github.com/ruven/iipsrv\n#  install dependencies (see above)\nUSER root\nCOPY build-iipsrv.sh /tmp/build-iipsrv.sh\nRUN bash /tmp/build-iipsrv.sh\n# #######################\n#  DIGIPAL FRAMEWORK\n#  Fetch Digipal\nRUN mkdir /home/digipal\nWORKDIR /home/digipal\n#  (inc. the number in echo to force docker build to fetch new version of the code)\nRUN echo \"15\" \\\n && git clone -b develop https://github.com/kcl-ddh/digipal.git /home/digipal\nCOPY * build/\n# #######################\n#  DATABASE\n#  see http://docs.docker.com/examples/postgresql_service/\n#  move psql data directory inside digipal_project\nRUN bash build/repair_digipal_project.sh\n# #######################\n#  PYTHON + PIP\nRUN pip install pip --upgrade\n# #######################\n#  DIGIPAL FRAMEWORK\nRUN echo \"1\" \\\n && pip install -r build/requirements.txt\n#  Create tables, admin and site records, indexes\nRUN /bin/bash build/fix_permissions.sh\nRUN /etc/init.d/postgresql start \\\n && python manage.py migrate \\\n && python manage.py loaddata build/data_init.json build/data_char.json build/data_menu.json build/data_test.json \\\n && python manage.py dpsearch index \\\n && python manage.py dpsearch index_facets\nUSER root\n# #######################\n#  WEB SERVER\nRUN rm /etc/nginx/sites-enabled/default \\\n && ln -s /home/digipal/build/nginx.conf /etc/nginx/sites-enabled/digipal.conf\n# #######################\n#  SUPERVISOR\nRUN mkdir -p /var/log/supervisor\n#  Port for web server\nEXPOSE 80/tcp\n# #######################\n#  START-UP\nENV SHELL=\"/bin/bash\"\nCMD [\"/bin/bash\", \"/home/digipal/build/startup.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"7d572ad5bedeb5e22272878d628c2034","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   To build DigiPal Framework Image with Docker (takes ~7 mins):\n#\n#   docker build -t kingsdigitallab/archetype build --no-cache\n#\n#   Then run the container like this:\n#\n#   docker stop archetype; docker rm archetype; mkdir ~/archetype; docker pull kingsdigitallab/archetype:latest; docker run -d --name archetype -v ~/archetype:/home/digipal/digipal_project:cached -p 9080:80 kingsdigitallab/archetype:latest; echo \"INSTALLED\";\n#\n#   Now you can browse to http://localhost/ from your host machine\n#   Note that this version is for local use only, not for production.\n#   You can use it to try out DigiPal or to start your own research.\n#\n#   To create image from container:\n#   \n#   # make Archetype changes, test and commit to new tag in master\n#   git commit; git push\n#   git push origin :refs/tags/2.2.1; git tag -f 2.2.1 COMMIT; \n#   # re-create :latest container\n#   docker stop newversion; docker rm newversion; docker run -ti --name newversion kingsdigitallab/archetype:latest bash\n#   # upgrade from inside container\n#   git config core.fileMode false; git pull; git checkout 2.2.1\n#   exit\n#   # commit as a new image\n#   docker commit -c 'ENV PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' -c 'ENV SHELL /bin/bash' -c 'VOLUME /home/digipal/digipal_project' -c 'CMD [\"/bin/bash\", \"/home/digipal/build/startup.sh\"]' newversion kingsdigitallab/archetype:VERSION\n#   # Test image\n#   docker stop archetype; docker rm archetype; mkdir ~/archetype; docker run -d --name archetype -v ~/archetype:/home/digipal/digipal_project:cached -p 9080:80 kingsdigitallab/archetype:2.2.1; echo \"INSTALLED\";\n#   # Push image to dockerhub\n#   docker push kingsdigitallab/archetype:2.2.1\n#   # Update the latest and push it\n#   docker tag kingsdigitallab/archetype:2.2.1 kingsdigitallab/archetype:latest\n#   docker push kingsdigitallab/archetype:latest\nFROM ubuntu:latest\nENV DP_WS_PORT=\"80\"\n#   Install Linux Packages in one go (best practice)\n#   Convention: one line per category (e.g. lessc, image server, database, ...)\n#  RUN apt-get update -y && apt-get install -y --no-install-recommends apt-utils \\\nRUN apt-get update -y \\\n && apt-get install autoconf pkg-config libtool git nodejs npm libjpeg-dev libtiff-dev imagemagick postgresql python python-pip python-dev libxml2-dev libxslt1-dev libpq-dev nginx uwsgi-plugin-python supervisor wget vim -y \\\n && apt-get remove -y python3.5 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  && apt-get autoremove -y \\\n#  #######################\n#   LESSC & TYPESCRIPT\n#   2.1.5 b/c 2.4.2 displays compilation errors on Text Viewer \nRUN npm install less typescript@2.1.5 -g ; ln -s /usr/bin/nodejs /usr/bin/node\n#  #######################\n#   IMAGE PROCESSING\n#   download and build image server\n#   see https://github.com/ruven/iipsrv\n#   install dependencies (see above)\nUSER root\nCOPY build-iipsrv.sh /tmp/build-iipsrv.sh\nRUN bash /tmp/build-iipsrv.sh\n#  #######################\n#   DIGIPAL FRAMEWORK\n#   Fetch Digipal\nRUN mkdir /home/digipal\nWORKDIR /home/digipal\n#   (inc. the number in echo to force docker build to fetch new version of the code)\nRUN echo \"15\" \\\n && git clone -b develop https://github.com/kcl-ddh/digipal.git /home/digipal\nCOPY * build/\n#  #######################\n#   DATABASE\n#   see http://docs.docker.com/examples/postgresql_service/\n#   move psql data directory inside digipal_project\nRUN bash build/repair_digipal_project.sh\n#  #######################\n#   PYTHON + PIP\nRUN pip install pip --upgrade\n#  #######################\n#   DIGIPAL FRAMEWORK\nRUN echo \"1\" \\\n && pip install -r build/requirements.txt\n#   Create tables, admin and site records, indexes\nRUN /bin/bash build/fix_permissions.sh\nRUN /etc/init.d/postgresql start \\\n && python manage.py migrate \\\n && python manage.py loaddata build/data_init.json build/data_char.json build/data_menu.json build/data_test.json \\\n && python manage.py dpsearch index \\\n && python manage.py dpsearch index_facets\nUSER root\n#  #######################\n#   WEB SERVER\nRUN rm /etc/nginx/sites-enabled/default \\\n && ln -s /home/digipal/build/nginx.conf /etc/nginx/sites-enabled/digipal.conf\n#  #######################\n#   SUPERVISOR\nRUN mkdir -p /var/log/supervisor\n#   Port for web server\nEXPOSE 80/tcp\n#  #######################\n#   START-UP\nENV SHELL=\"/bin/bash\"\nCMD [\"/bin/bash\", \"/home/digipal/build/startup.sh\"]\n","originalDockerfileUglifiedHash":"020a2ac9aeb5f4ceae2385962e680ae8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ef524465b347290a4b1ec7b675fcbed02bbb4c99.dockerfile"}