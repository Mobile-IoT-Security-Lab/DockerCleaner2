{"seed":3566208868,"processedDockerfileHash":"44efaf56fb7be133fc3add1a786f653e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  upstream https://github.com/docker-library/rabbitmq/tree/1a37166704d2ca7c386980387e81615985d5db47/3.7/alpine\nFROM alpine:3.7\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash=4.4.19-r1 tzdata=2019c-r0 vim=8.0.1359-r2 tini=0.16.1-r0 su-exec=0.2-r0 gzip=1.8-r0 tar=1.32-r0 wget=1.20.3-r0 curl=7.61.1-r3 \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -S rabbitmq \\\n && adduser -S -h /var/lib/rabbitmq -G rabbitmq rabbitmq\n#   grab su-exec for easy step-down from root\nRUN apk add 'su-exec>=0.2' --no-cache\nRUN apk add bash=4.4.19-r1 procps=3.3.12-r3 erlang-asn1=20.1.7-r2 erlang-hipe=20.1.7-r2 erlang-crypto=20.1.7-r2 erlang-eldap=20.1.7-r2 erlang-inets=20.1.7-r2 erlang-mnesia=20.1.7-r2 erlang=20.1.7-r2 erlang-os-mon=20.1.7-r2 erlang-public-key=20.1.7-r2 erlang-sasl=20.1.7-r2 erlang-ssl=20.1.7-r2 erlang-syntax-tools=20.1.7-r2 erlang-xmerl=20.1.7-r2 --no-cache\n#   get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=\"-\" \\\n    RABBITMQ_SASL_LOGS=\"-\"\n#   https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\nENV RABBITMQ_HOME=\"/opt/rabbitmq\"\nENV PATH=\"$RABBITMQ_HOME/sbin:$PATH\"\n#   gpg: key 6026DFCA: public key \"RabbitMQ Release Signing Key <info@rabbitmq.com>\" imported\nENV RABBITMQ_GPG_KEY=\"0A9AF2115F4687BD29803A206B73A36E6026DFCA\"\nENV RABBITMQ_VERSION=\"3.7.4\"\nENV RABBITMQ_GITHUB_TAG=\"v3.7.4\"\nRUN set -ex ; apk add ca-certificates=20190108-r0 gnupg=2.2.3-r1 libressl=2.6.5-r0 xz=5.2.3-r1 --no-cache --virtual .build-deps ; wget -O rabbitmq-server.tar.xz.asc \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz.asc\" ; wget -O rabbitmq-server.tar.xz \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$RABBITMQ_GPG_KEY\" ; gpg --batch --verify rabbitmq-server.tar.xz.asc rabbitmq-server.tar.xz ; rm -rf \"$GNUPGHOME\" ; mkdir -p \"$RABBITMQ_HOME\" ; tar --extract --verbose --file rabbitmq-server.tar.xz --directory \"$RABBITMQ_HOME\" --strip-components 1 ; rm -f rabbitmq-server.tar.xz* ; grep -qE '^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\" ; sed -ri 's!^(SYS_PREFIX=).*$!\\1!g' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\" ; grep -qE '^SYS_PREFIX=$' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\" ; apk del .build-deps\n#   set home so that any `--user` knows where to put the erlang cookie\nENV HOME=\"/var/lib/rabbitmq\"\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq \\\n && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq \\\n && chmod -R 777 /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq\nVOLUME /var/lib/rabbitmq\n#   add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\nRUN ln -sf \"$RABBITMQ_HOME/plugins\" /plugins\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 4369/tcp 5671/tcp 5672/tcp 25672/tcp\nCMD [\"rabbitmq-server\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/docker-library/rabbitmq/tree/1a37166704d2ca7c386980387e81615985d5db47/3.7/alpine\nFROM alpine:3.7\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#  Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash tzdata vim tini su-exec gzip tar wget curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -S rabbitmq \\\n && adduser -S -h /var/lib/rabbitmq -G rabbitmq rabbitmq\n#  grab su-exec for easy step-down from root\nRUN apk add --no-cache 'su-exec>=0.2'\nRUN apk add --no-cache bash procps erlang-asn1 erlang-hipe erlang-crypto erlang-eldap erlang-inets erlang-mnesia erlang erlang-os-mon erlang-public-key erlang-sasl erlang-ssl erlang-syntax-tools erlang-xmerl\n#  get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=\"-\" \\\n    RABBITMQ_SASL_LOGS=\"-\"\n#  https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\nENV RABBITMQ_HOME=\"/opt/rabbitmq\"\nENV PATH=\"$RABBITMQ_HOME/sbin:$PATH\"\n#  gpg: key 6026DFCA: public key \"RabbitMQ Release Signing Key <info@rabbitmq.com>\" imported\nENV RABBITMQ_GPG_KEY=\"0A9AF2115F4687BD29803A206B73A36E6026DFCA\"\nENV RABBITMQ_VERSION=\"3.7.4\"\nENV RABBITMQ_GITHUB_TAG=\"v3.7.4\"\nRUN set -ex ; apk add --no-cache --virtual .build-deps ca-certificates gnupg libressl xz ; wget -O rabbitmq-server.tar.xz.asc \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz.asc\" ; wget -O rabbitmq-server.tar.xz \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$RABBITMQ_GPG_KEY\" ; gpg --batch --verify rabbitmq-server.tar.xz.asc rabbitmq-server.tar.xz ; rm -rf \"$GNUPGHOME\" ; mkdir -p \"$RABBITMQ_HOME\" ; tar --extract --verbose --file rabbitmq-server.tar.xz --directory \"$RABBITMQ_HOME\" --strip-components 1 ; rm -f rabbitmq-server.tar.xz* ; grep -qE '^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\" ; sed -ri 's!^(SYS_PREFIX=).*$!\\1!g' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\" ; grep -qE '^SYS_PREFIX=$' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\" ; apk del .build-deps\n#  set home so that any `--user` knows where to put the erlang cookie\nENV HOME=\"/var/lib/rabbitmq\"\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq \\\n && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq \\\n && chmod -R 777 /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq\nVOLUME /var/lib/rabbitmq\n#  add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\nRUN ln -sf \"$RABBITMQ_HOME/plugins\" /plugins\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 4369/tcp 5671/tcp 5672/tcp 25672/tcp\nCMD [\"rabbitmq-server\"]\n","injectedSmells":[],"originalDockerfileHash":"09a7bc690c70465968f95743d4900764","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/docker-library/rabbitmq/tree/1a37166704d2ca7c386980387e81615985d5db47/3.7/alpine\nFROM alpine:3.7\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n#   Set timezone and locales\nRUN set -ex \\\n && apk update \\\n && apk upgrade \\\n && apk add bash tzdata vim tini su-exec gzip tar wget curl \\\n && echo \"${TIMEZONE}\" > /etc/TZ \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -S rabbitmq \\\n && adduser -S -h /var/lib/rabbitmq -G rabbitmq rabbitmq\n#   grab su-exec for easy step-down from root\nRUN apk add --no-cache 'su-exec>=0.2'\nRUN apk add --no-cache bash procps erlang-asn1 erlang-hipe erlang-crypto erlang-eldap erlang-inets erlang-mnesia erlang erlang-os-mon erlang-public-key erlang-sasl erlang-ssl erlang-syntax-tools erlang-xmerl\n#   get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=\"-\" \\\n    RABBITMQ_SASL_LOGS=\"-\"\n#   https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\nENV RABBITMQ_HOME=\"/opt/rabbitmq\"\nENV PATH=\"$RABBITMQ_HOME/sbin:$PATH\"\n#   gpg: key 6026DFCA: public key \"RabbitMQ Release Signing Key <info@rabbitmq.com>\" imported\nENV RABBITMQ_GPG_KEY=\"0A9AF2115F4687BD29803A206B73A36E6026DFCA\"\nENV RABBITMQ_VERSION=\"3.7.4\"\nENV RABBITMQ_GITHUB_TAG=\"v3.7.4\"\nRUN set -ex ; apk add --no-cache --virtual .build-deps ca-certificates gnupg libressl xz ; wget -O rabbitmq-server.tar.xz.asc \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz.asc\" ; wget -O rabbitmq-server.tar.xz \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$RABBITMQ_GPG_KEY\" ; gpg --batch --verify rabbitmq-server.tar.xz.asc rabbitmq-server.tar.xz ; rm -rf \"$GNUPGHOME\" ; mkdir -p \"$RABBITMQ_HOME\" ; tar --extract --verbose --file rabbitmq-server.tar.xz --directory \"$RABBITMQ_HOME\" --strip-components 1 ; rm -f rabbitmq-server.tar.xz* ; grep -qE '^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\" ; sed -ri 's!^(SYS_PREFIX=).*$!\\1!g' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\" ; grep -qE '^SYS_PREFIX=$' \"$RABBITMQ_HOME/sbin/rabbitmq-defaults\" ; apk del .build-deps\n#   set home so that any `--user` knows where to put the erlang cookie\nENV HOME=\"/var/lib/rabbitmq\"\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq \\\n && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq \\\n && chmod -R 777 /var/lib/rabbitmq /etc/rabbitmq /var/log/rabbitmq\nVOLUME /var/lib/rabbitmq\n#   add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\nRUN ln -sf \"$RABBITMQ_HOME/plugins\" /plugins\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 4369/tcp 5671/tcp 5672/tcp 25672/tcp\nCMD [\"rabbitmq-server\"]\n","originalDockerfileUglifiedHash":"c4f140ed3405483258267c947c493a2d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/36a19d19bfe3b9ffd864d0f70edcbbc012cb6f0d.dockerfile"}