{"seed":3211651196,"processedDockerfileHash":"41a2120a0022a0c94a698a2e04f49de4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This dockerfile and configuration is derived by\n#   Jason Martin <jason@greenpx.co.uk>\n#   Many Thanks to the  author in this place!\nFROM j1mr10rd4n/debian-baseimage-docker:8.2.1\nMAINTAINER Michael Mayer <swd@michael-mayer.biz>\n#   Set environment variables\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV ASTERISKUSER=\"asterisk\"\nRUN mkdir -p /var/run/asterisk \\\n && mkdir -p /etc/asterisk \\\n && mkdir -p /var/lib/asterisk \\\n && mkdir -p /var/log/asterisk \\\n && mkdir -p /var/spool/asterisk \\\n && mkdir -p /usr/lib/asterisk \\\n && mkdir -p /var/www/\n#   Add Asterisk user\nRUN useradd -m $ASTERISKUSER \\\n && chown $ASTERISKUSER. /var/run/asterisk \\\n && chown -R $ASTERISKUSER. /etc/asterisk \\\n && chown -R $ASTERISKUSER. /var/lib/asterisk \\\n && chown -R $ASTERISKUSER. /var/log/asterisk \\\n && chown -R $ASTERISKUSER. /var/spool/asterisk \\\n && chown -R $ASTERISKUSER. /usr/lib/asterisk \\\n && chown -R $ASTERISKUSER. /var/www/\n#   Download extra high quality sounds\nWORKDIR /var/lib/asterisk/sounds\nRUN curl -f -o asterisk-core-sounds-en-wav-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-wav-current.tar.gz \\\n && tar -xzf asterisk-core-sounds-en-wav-current.tar.gz \\\n && rm -f asterisk-core-sounds-en-wav-current.tar.gz \\\n && curl -f -o asterisk-extra-sounds-en-wav-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-wav-current.tar.gz \\\n && tar -xzf asterisk-extra-sounds-en-wav-current.tar.gz \\\n && rm -f asterisk-extra-sounds-en-wav-current.tar.gz \\\n && curl -f -o asterisk-core-sounds-en-g722-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-g722-current.tar.gz \\\n && tar -xzf asterisk-core-sounds-en-g722-current.tar.gz \\\n && rm -f asterisk-core-sounds-en-g722-current.tar.gz \\\n && curl -f -o asterisk-extra-sounds-en-g722-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-g722-current.tar.gz \\\n && tar -xzf asterisk-extra-sounds-en-g722-current.tar.gz \\\n && rm -f asterisk-extra-sounds-en-g722-current.tar.gz\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends unzip -y )\n#   Download German sounds\nRUN mkdir /var/lib/asterisk/sounds/de\nWORKDIR /var/lib/asterisk/sounds/de \nRUN curl -f -o core.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-core-de-sln16.zip \\\n && curl -f -o extra.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-extra-de-sln16.zip \\\n && unzip -u core.zip \\\n && unzip -u extra.zip\nRUN rm -f core.zip \\\n && rm -f extra.zip\nRUN chown -R $ASTERISKUSER.$ASTERISKUSER /var/lib/asterisk/sounds/de \\\n && find /var/lib/asterisk/sounds/de -type d -exec chmod 0775 {}\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\n#   Upgrade base system\nRUN : \\\n && apt-get -y upgrade\n#   Run this command on docker start\nCMD [\"/sbin/my_init\"]\n#   *Loosely* Following steps on FreePBX wiki\n#   http://wiki.freepbx.org/display/FOP/Installing+FreePBX+13+on+Ubuntu+Server+14.04.2+LTS\n#   Install Required Dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends apache2 autoconf automake bison build-essential curl flex git libasound2-dev libcurl4-openssl-dev libical-dev libmyodbc libmysqlclient-dev libncurses5-dev libneon27-dev libnewt-dev libodbc1 libogg-dev libspandsp-dev libsqlite3-dev libsrtp0-dev libssl-dev libtool libvorbis-dev libxml2-dev mpg123 mysql-client mysql-server openssh-server php-pear php5 php5-cli php5-curl php5-gd php5-mysql pkg-config sox subversion sqlite3 unixodbc-dev uuid uuid-dev -y )\n#   Replace default conf files to reduce memory usage\nCOPY conf/my-small.cnf /etc/mysql/my.cnf\nCOPY conf/mpm_prefork.conf /etc/apache2/mods-available/mpm_prefork.conf\nRUN chown -R $ASTERISKUSER. /var/www/* \\\n && rm -rf /var/www/html\n#   Install Legacy pear requirements\nRUN pear install Console_Getopt\n#   Compile and install pjproject\nWORKDIR /usr/src\nRUN curl -sf -o pjproject.tar.bz2 -L http://www.pjsip.org/release/2.4/pjproject-2.4.tar.bz2 \\\n && tar -xjvf pjproject.tar.bz2 \\\n && rm -f pjproject.tar.bz2 \\\n && cd pjproject-2.4 \\\n && CFLAGS='-DPJ_HAS_IPV6=1' ./configure --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr \\\n && make dep \\\n && make \\\n && make install \\\n && rm -r /usr/src/pjproject-2.4\n#   Compile and Install jansson\nWORKDIR /usr/src\nRUN curl -sf -o jansson.tar.gz -L http://www.digip.org/jansson/releases/jansson-2.7.tar.gz \\\n && mkdir jansson \\\n && tar -xzf jansson.tar.gz -C jansson --strip-components=1 \\\n && rm jansson.tar.gz \\\n && cd jansson \\\n && autoreconf -i \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -r /usr/src/jansson\n#   Compile and Install Asterisk\nWORKDIR /usr/src\nRUN curl -f -o asterisk.tar.gz -L http://downloads.asterisk.org/pub/telephony/certified-asterisk/asterisk-certified-13.13-current.tar.gz\nRUN mkdir asterisk \\\n && tar -xzf /usr/src/asterisk.tar.gz -C /usr/src/asterisk --strip-components=1 \\\n && rm asterisk.tar.gz\nWORKDIR /usr/src/asterisk\nRUN ./configure\nRUN contrib/scripts/get_mp3_source.sh\nRUN make menuselect.makeopts\n#   RUN ./menuselect/menuselect --list-options  \nRUN ./menuselect/menuselect --enable=chan_sip --enable=format_mp3 --disable=BUILD_NATIVE\nRUN cat menuselect.makeopts\nRUN make\nRUN make install \\\n && make config \\\n && ldconfig \\\n && update-rc.d -f asterisk remove\nRUN rm -r /usr/src/asterisk\nWORKDIR /tmp\n#   2nd dependency download (Placing it here avoids recompiling asterisk&co during docker build)\nRUN (apt-get update ;apt-get install --no-install-recommends sudo net-tools coreutils -y )\n#   Configure apache\nRUN sed -i 's/\\(^upload_max_filesize = \\).*/\\120M/' /etc/php5/apache2/php.ini \\\n && sed -i 's/^\\(User\\|Group\\).*/\\1 asterisk/' /etc/apache2/apache2.conf \\\n && sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf \\\n && sed -i 's/VirtualHost \\*:80/VirtualHost \\*:8082/' /etc/apache2/sites-available/000-default.conf \\\n && sed -i 's/Listen 80/Listen 8082/' /etc/apache2/ports.conf\n#   Setup services\nCOPY start-apache2.sh /etc/service/apache2/run\nRUN chmod +x /etc/service/apache2/run\nCOPY start-mysqld.sh /etc/service/mysqld/run\nRUN chmod +x /etc/service/mysqld/run\nCOPY start-asterisk.sh /etc/service/asterisk/run\nRUN chmod +x /etc/service/asterisk/run\nCOPY start-amportal.sh /etc/my_init.d/start-amportal.sh\n#  Make CDRs work\nCOPY conf/cdr/odbc.ini /etc/odbc.ini\nCOPY conf/cdr/odbcinst.ini /etc/odbcinst.ini\nCOPY conf/cdr/cdr_adaptive_odbc.conf /etc/asterisk/cdr_adaptive_odbc.conf\nRUN chown asterisk:asterisk /etc/asterisk/cdr_adaptive_odbc.conf \\\n && chmod 775 /etc/asterisk/cdr_adaptive_odbc.conf\n#   Download and prepare FreePBX\nWORKDIR /usr/src\n#   Download and unzip \nRUN curl -f -o freepbx.tgz -L http://mirror.freepbx.org/modules/packages/freepbx/freepbx-13.0-latest.tgz\nRUN tar xfz freepbx.tgz\nRUN rm -rf freepbx.tgz\n#   Prepare install\nRUN a2enmod rewrite\nCOPY ./conf/asterisk.conf /etc/asterisk/\n#   install\nCOPY install-freepbx.sh /\nRUN chmod +x /install-freepbx.sh\nRUN /install-freepbx.sh\nRUN rm -rf /usr/src/freepbx\n#  #################\n#   Cleanup\n#  #################\nRUN apt-get remove -y --purge autoconf automake bison build-essential flex git libasound2-dev libcurl4-openssl-dev libical-dev libmysqlclient-dev libncurses5-dev libneon27-dev libnewt-dev libogg-dev libspandsp-dev libsqlite3-dev libsrtp0-dev libssl-dev libvorbis-dev libxml2-dev openssh-server subversion unixodbc-dev uuid-dev\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME [\"/etc/asterisk\",\"/etc/apache2\",\"/var/www/html\",\"/var/lib/mysql\",\"/var/spool/asterisk\",\"/var/lib/asterisk\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This dockerfile and configuration is derived by\n#  Jason Martin <jason@greenpx.co.uk>\n#  Many Thanks to the  author in this place!\nFROM j1mr10rd4n/debian-baseimage-docker:8.2.1\nMAINTAINER Michael Mayer <swd@michael-mayer.biz>\n#  Set environment variables\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV ASTERISKUSER=\"asterisk\"\nRUN mkdir -p /var/run/asterisk \\\n && mkdir -p /etc/asterisk \\\n && mkdir -p /var/lib/asterisk \\\n && mkdir -p /var/log/asterisk \\\n && mkdir -p /var/spool/asterisk \\\n && mkdir -p /usr/lib/asterisk \\\n && mkdir -p /var/www/\n#  Add Asterisk user\nRUN useradd -m $ASTERISKUSER \\\n && chown $ASTERISKUSER. /var/run/asterisk \\\n && chown -R $ASTERISKUSER. /etc/asterisk \\\n && chown -R $ASTERISKUSER. /var/lib/asterisk \\\n && chown -R $ASTERISKUSER. /var/log/asterisk \\\n && chown -R $ASTERISKUSER. /var/spool/asterisk \\\n && chown -R $ASTERISKUSER. /usr/lib/asterisk \\\n && chown -R $ASTERISKUSER. /var/www/\n#  Download extra high quality sounds\nWORKDIR /var/lib/asterisk/sounds\nRUN curl -f -o asterisk-core-sounds-en-wav-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-wav-current.tar.gz \\\n && tar -xzf asterisk-core-sounds-en-wav-current.tar.gz \\\n && rm -f asterisk-core-sounds-en-wav-current.tar.gz \\\n && curl -f -o asterisk-extra-sounds-en-wav-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-wav-current.tar.gz \\\n && tar -xzf asterisk-extra-sounds-en-wav-current.tar.gz \\\n && rm -f asterisk-extra-sounds-en-wav-current.tar.gz \\\n && curl -f -o asterisk-core-sounds-en-g722-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-g722-current.tar.gz \\\n && tar -xzf asterisk-core-sounds-en-g722-current.tar.gz \\\n && rm -f asterisk-core-sounds-en-g722-current.tar.gz \\\n && curl -f -o asterisk-extra-sounds-en-g722-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-g722-current.tar.gz \\\n && tar -xzf asterisk-extra-sounds-en-g722-current.tar.gz \\\n && rm -f asterisk-extra-sounds-en-g722-current.tar.gz\nRUN apt-get update \\\n && apt-get install unzip -y\n#  Download German sounds\nRUN mkdir /var/lib/asterisk/sounds/de\nWORKDIR /var/lib/asterisk/sounds/de \nRUN curl -f -o core.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-core-de-sln16.zip \\\n && curl -f -o extra.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-extra-de-sln16.zip \\\n && unzip -u core.zip \\\n && unzip -u extra.zip\nRUN rm -f core.zip \\\n && rm -f extra.zip\nRUN chown -R $ASTERISKUSER.$ASTERISKUSER /var/lib/asterisk/sounds/de \\\n && find /var/lib/asterisk/sounds/de -type d -exec chmod 0775 {} ;\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\n#  Upgrade base system\nRUN apt-get update \\\n && apt-get -y upgrade\n#  Run this command on docker start\nCMD [\"/sbin/my_init\"]\n#  *Loosely* Following steps on FreePBX wiki\n#  http://wiki.freepbx.org/display/FOP/Installing+FreePBX+13+on+Ubuntu+Server+14.04.2+LTS\n#  Install Required Dependencies\nRUN apt-get install apache2 autoconf automake bison build-essential curl flex git libasound2-dev libcurl4-openssl-dev libical-dev libmyodbc libmysqlclient-dev libncurses5-dev libneon27-dev libnewt-dev libodbc1 libogg-dev libspandsp-dev libsqlite3-dev libsrtp0-dev libssl-dev libtool libvorbis-dev libxml2-dev mpg123 mysql-client mysql-server openssh-server php-pear php5 php5-cli php5-curl php5-gd php5-mysql pkg-config sox subversion sqlite3 unixodbc-dev uuid uuid-dev -y\n#  Replace default conf files to reduce memory usage\nCOPY conf/my-small.cnf /etc/mysql/my.cnf\nCOPY conf/mpm_prefork.conf /etc/apache2/mods-available/mpm_prefork.conf\nRUN chown -R $ASTERISKUSER. /var/www/* \\\n && rm -rf /var/www/html\n#  Install Legacy pear requirements\nRUN pear install Console_Getopt\n#  Compile and install pjproject\nWORKDIR /usr/src\nRUN curl -sf -o pjproject.tar.bz2 -L http://www.pjsip.org/release/2.4/pjproject-2.4.tar.bz2 \\\n && tar -xjvf pjproject.tar.bz2 \\\n && rm -f pjproject.tar.bz2 \\\n && cd pjproject-2.4 \\\n && CFLAGS='-DPJ_HAS_IPV6=1' ./configure --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr \\\n && make dep \\\n && make \\\n && make install \\\n && rm -r /usr/src/pjproject-2.4\n#  Compile and Install jansson\nWORKDIR /usr/src\nRUN curl -sf -o jansson.tar.gz -L http://www.digip.org/jansson/releases/jansson-2.7.tar.gz \\\n && mkdir jansson \\\n && tar -xzf jansson.tar.gz -C jansson --strip-components=1 \\\n && rm jansson.tar.gz \\\n && cd jansson \\\n && autoreconf -i \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -r /usr/src/jansson\n#  Compile and Install Asterisk\nWORKDIR /usr/src\nRUN curl -f -o asterisk.tar.gz -L http://downloads.asterisk.org/pub/telephony/certified-asterisk/asterisk-certified-13.13-current.tar.gz\nRUN mkdir asterisk \\\n && tar -xzf /usr/src/asterisk.tar.gz -C /usr/src/asterisk --strip-components=1 \\\n && rm asterisk.tar.gz\nWORKDIR /usr/src/asterisk\nRUN ./configure\nRUN contrib/scripts/get_mp3_source.sh\nRUN make menuselect.makeopts\n#  RUN ./menuselect/menuselect --list-options  \nRUN ./menuselect/menuselect --enable=chan_sip --enable=format_mp3 --disable=BUILD_NATIVE\nRUN cat menuselect.makeopts\nRUN make\nRUN make install \\\n && make config \\\n && ldconfig \\\n && update-rc.d -f asterisk remove\nRUN rm -r /usr/src/asterisk\nWORKDIR /tmp\n#  2nd dependency download (Placing it here avoids recompiling asterisk&co during docker build)\nRUN apt-get install sudo net-tools coreutils -y\n#  Configure apache\nRUN sed -i 's/\\(^upload_max_filesize = \\).*/\\120M/' /etc/php5/apache2/php.ini \\\n && sed -i 's/^\\(User\\|Group\\).*/\\1 asterisk/' /etc/apache2/apache2.conf \\\n && sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf \\\n && sed -i 's/VirtualHost \\*:80/VirtualHost \\*:8082/' /etc/apache2/sites-available/000-default.conf \\\n && sed -i 's/Listen 80/Listen 8082/' /etc/apache2/ports.conf\n#  Setup services\nCOPY start-apache2.sh /etc/service/apache2/run\nRUN chmod +x /etc/service/apache2/run\nCOPY start-mysqld.sh /etc/service/mysqld/run\nRUN chmod +x /etc/service/mysqld/run\nCOPY start-asterisk.sh /etc/service/asterisk/run\nRUN chmod +x /etc/service/asterisk/run\nCOPY start-amportal.sh /etc/my_init.d/start-amportal.sh\n# Make CDRs work\nCOPY conf/cdr/odbc.ini /etc/odbc.ini\nCOPY conf/cdr/odbcinst.ini /etc/odbcinst.ini\nCOPY conf/cdr/cdr_adaptive_odbc.conf /etc/asterisk/cdr_adaptive_odbc.conf\nRUN chown asterisk:asterisk /etc/asterisk/cdr_adaptive_odbc.conf \\\n && chmod 775 /etc/asterisk/cdr_adaptive_odbc.conf\n#  Download and prepare FreePBX\nWORKDIR /usr/src\n#  Download and unzip \nRUN curl -f -o freepbx.tgz -L http://mirror.freepbx.org/modules/packages/freepbx/freepbx-13.0-latest.tgz\nRUN tar xfz freepbx.tgz\nRUN rm -rf freepbx.tgz\n#  Prepare install\nRUN a2enmod rewrite\nCOPY ./conf/asterisk.conf /etc/asterisk/\n#  install\nCOPY install-freepbx.sh /\nRUN chmod +x /install-freepbx.sh\nRUN /install-freepbx.sh\nRUN rm -rf /usr/src/freepbx\n# #################\n#  Cleanup\n# #################\nRUN apt-get remove -y --purge autoconf automake bison build-essential flex git libasound2-dev libcurl4-openssl-dev libical-dev libmysqlclient-dev libncurses5-dev libneon27-dev libnewt-dev libogg-dev libspandsp-dev libsqlite3-dev libsrtp0-dev libssl-dev libvorbis-dev libxml2-dev openssh-server subversion unixodbc-dev uuid-dev\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME [\"/etc/asterisk\",\"/etc/apache2\",\"/var/www/html\",\"/var/lib/mysql\",\"/var/spool/asterisk\",\"/var/lib/asterisk\"]\n","injectedSmells":[],"originalDockerfileHash":"50ef1a700f0636f7dfda666cbf6de87c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This dockerfile and configuration is derived by\n#   Jason Martin <jason@greenpx.co.uk>\n#   Many Thanks to the  author in this place!\nFROM j1mr10rd4n/debian-baseimage-docker:8.2.1\nMAINTAINER Michael Mayer <swd@michael-mayer.biz>\n#   Set environment variables\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV ASTERISKUSER=\"asterisk\"\nRUN mkdir -p /var/run/asterisk \\\n && mkdir -p /etc/asterisk \\\n && mkdir -p /var/lib/asterisk \\\n && mkdir -p /var/log/asterisk \\\n && mkdir -p /var/spool/asterisk \\\n && mkdir -p /usr/lib/asterisk \\\n && mkdir -p /var/www/\n#   Add Asterisk user\nRUN useradd -m $ASTERISKUSER \\\n && chown $ASTERISKUSER. /var/run/asterisk \\\n && chown -R $ASTERISKUSER. /etc/asterisk \\\n && chown -R $ASTERISKUSER. /var/lib/asterisk \\\n && chown -R $ASTERISKUSER. /var/log/asterisk \\\n && chown -R $ASTERISKUSER. /var/spool/asterisk \\\n && chown -R $ASTERISKUSER. /usr/lib/asterisk \\\n && chown -R $ASTERISKUSER. /var/www/\n#   Download extra high quality sounds\nWORKDIR /var/lib/asterisk/sounds\nRUN curl -f -o asterisk-core-sounds-en-wav-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-wav-current.tar.gz \\\n && tar -xzf asterisk-core-sounds-en-wav-current.tar.gz \\\n && rm -f asterisk-core-sounds-en-wav-current.tar.gz \\\n && curl -f -o asterisk-extra-sounds-en-wav-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-wav-current.tar.gz \\\n && tar -xzf asterisk-extra-sounds-en-wav-current.tar.gz \\\n && rm -f asterisk-extra-sounds-en-wav-current.tar.gz \\\n && curl -f -o asterisk-core-sounds-en-g722-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-g722-current.tar.gz \\\n && tar -xzf asterisk-core-sounds-en-g722-current.tar.gz \\\n && rm -f asterisk-core-sounds-en-g722-current.tar.gz \\\n && curl -f -o asterisk-extra-sounds-en-g722-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-g722-current.tar.gz \\\n && tar -xzf asterisk-extra-sounds-en-g722-current.tar.gz \\\n && rm -f asterisk-extra-sounds-en-g722-current.tar.gz\nRUN apt-get update \\\n && apt-get install unzip -y\n#   Download German sounds\nRUN mkdir /var/lib/asterisk/sounds/de\nWORKDIR /var/lib/asterisk/sounds/de \nRUN curl -f -o core.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-core-de-sln16.zip \\\n && curl -f -o extra.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-extra-de-sln16.zip \\\n && unzip -u core.zip \\\n && unzip -u extra.zip\nRUN rm -f core.zip \\\n && rm -f extra.zip\nRUN chown -R $ASTERISKUSER.$ASTERISKUSER /var/lib/asterisk/sounds/de \\\n && find /var/lib/asterisk/sounds/de -type d -exec chmod 0775 {}\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\n#   Upgrade base system\nRUN apt-get update \\\n && apt-get -y upgrade\n#   Run this command on docker start\nCMD [\"/sbin/my_init\"]\n#   *Loosely* Following steps on FreePBX wiki\n#   http://wiki.freepbx.org/display/FOP/Installing+FreePBX+13+on+Ubuntu+Server+14.04.2+LTS\n#   Install Required Dependencies\nRUN apt-get install apache2 autoconf automake bison build-essential curl flex git libasound2-dev libcurl4-openssl-dev libical-dev libmyodbc libmysqlclient-dev libncurses5-dev libneon27-dev libnewt-dev libodbc1 libogg-dev libspandsp-dev libsqlite3-dev libsrtp0-dev libssl-dev libtool libvorbis-dev libxml2-dev mpg123 mysql-client mysql-server openssh-server php-pear php5 php5-cli php5-curl php5-gd php5-mysql pkg-config sox subversion sqlite3 unixodbc-dev uuid uuid-dev -y\n#   Replace default conf files to reduce memory usage\nCOPY conf/my-small.cnf /etc/mysql/my.cnf\nCOPY conf/mpm_prefork.conf /etc/apache2/mods-available/mpm_prefork.conf\nRUN chown -R $ASTERISKUSER. /var/www/* \\\n && rm -rf /var/www/html\n#   Install Legacy pear requirements\nRUN pear install Console_Getopt\n#   Compile and install pjproject\nWORKDIR /usr/src\nRUN curl -sf -o pjproject.tar.bz2 -L http://www.pjsip.org/release/2.4/pjproject-2.4.tar.bz2 \\\n && tar -xjvf pjproject.tar.bz2 \\\n && rm -f pjproject.tar.bz2 \\\n && cd pjproject-2.4 \\\n && CFLAGS='-DPJ_HAS_IPV6=1' ./configure --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr \\\n && make dep \\\n && make \\\n && make install \\\n && rm -r /usr/src/pjproject-2.4\n#   Compile and Install jansson\nWORKDIR /usr/src\nRUN curl -sf -o jansson.tar.gz -L http://www.digip.org/jansson/releases/jansson-2.7.tar.gz \\\n && mkdir jansson \\\n && tar -xzf jansson.tar.gz -C jansson --strip-components=1 \\\n && rm jansson.tar.gz \\\n && cd jansson \\\n && autoreconf -i \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -r /usr/src/jansson\n#   Compile and Install Asterisk\nWORKDIR /usr/src\nRUN curl -f -o asterisk.tar.gz -L http://downloads.asterisk.org/pub/telephony/certified-asterisk/asterisk-certified-13.13-current.tar.gz\nRUN mkdir asterisk \\\n && tar -xzf /usr/src/asterisk.tar.gz -C /usr/src/asterisk --strip-components=1 \\\n && rm asterisk.tar.gz\nWORKDIR /usr/src/asterisk\nRUN ./configure\nRUN contrib/scripts/get_mp3_source.sh\nRUN make menuselect.makeopts\n#   RUN ./menuselect/menuselect --list-options  \nRUN ./menuselect/menuselect --enable=chan_sip --enable=format_mp3 --disable=BUILD_NATIVE\nRUN cat menuselect.makeopts\nRUN make\nRUN make install \\\n && make config \\\n && ldconfig \\\n && update-rc.d -f asterisk remove\nRUN rm -r /usr/src/asterisk\nWORKDIR /tmp\n#   2nd dependency download (Placing it here avoids recompiling asterisk&co during docker build)\nRUN apt-get install sudo net-tools coreutils -y\n#   Configure apache\nRUN sed -i 's/\\(^upload_max_filesize = \\).*/\\120M/' /etc/php5/apache2/php.ini \\\n && sed -i 's/^\\(User\\|Group\\).*/\\1 asterisk/' /etc/apache2/apache2.conf \\\n && sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf \\\n && sed -i 's/VirtualHost \\*:80/VirtualHost \\*:8082/' /etc/apache2/sites-available/000-default.conf \\\n && sed -i 's/Listen 80/Listen 8082/' /etc/apache2/ports.conf\n#   Setup services\nCOPY start-apache2.sh /etc/service/apache2/run\nRUN chmod +x /etc/service/apache2/run\nCOPY start-mysqld.sh /etc/service/mysqld/run\nRUN chmod +x /etc/service/mysqld/run\nCOPY start-asterisk.sh /etc/service/asterisk/run\nRUN chmod +x /etc/service/asterisk/run\nCOPY start-amportal.sh /etc/my_init.d/start-amportal.sh\n#  Make CDRs work\nCOPY conf/cdr/odbc.ini /etc/odbc.ini\nCOPY conf/cdr/odbcinst.ini /etc/odbcinst.ini\nCOPY conf/cdr/cdr_adaptive_odbc.conf /etc/asterisk/cdr_adaptive_odbc.conf\nRUN chown asterisk:asterisk /etc/asterisk/cdr_adaptive_odbc.conf \\\n && chmod 775 /etc/asterisk/cdr_adaptive_odbc.conf\n#   Download and prepare FreePBX\nWORKDIR /usr/src\n#   Download and unzip \nRUN curl -f -o freepbx.tgz -L http://mirror.freepbx.org/modules/packages/freepbx/freepbx-13.0-latest.tgz\nRUN tar xfz freepbx.tgz\nRUN rm -rf freepbx.tgz\n#   Prepare install\nRUN a2enmod rewrite\nCOPY ./conf/asterisk.conf /etc/asterisk/\n#   install\nCOPY install-freepbx.sh /\nRUN chmod +x /install-freepbx.sh\nRUN /install-freepbx.sh\nRUN rm -rf /usr/src/freepbx\n#  #################\n#   Cleanup\n#  #################\nRUN apt-get remove -y --purge autoconf automake bison build-essential flex git libasound2-dev libcurl4-openssl-dev libical-dev libmysqlclient-dev libncurses5-dev libneon27-dev libnewt-dev libogg-dev libspandsp-dev libsqlite3-dev libsrtp0-dev libssl-dev libvorbis-dev libxml2-dev openssh-server subversion unixodbc-dev uuid-dev\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME [\"/etc/asterisk\",\"/etc/apache2\",\"/var/www/html\",\"/var/lib/mysql\",\"/var/spool/asterisk\",\"/var/lib/asterisk\"]\n","originalDockerfileUglifiedHash":"a35414ef277491147d12e1f12a5713e7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/13cf09f9dc46e6648b6f814e11a6d259377bb9c6.dockerfile"}