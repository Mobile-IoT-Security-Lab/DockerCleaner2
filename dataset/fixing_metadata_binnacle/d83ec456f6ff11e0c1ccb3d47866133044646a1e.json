{"seed":137742410,"processedDockerfileHash":"517076a9b7c3646ff3d207ea3975ea63","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 apt-transport-https=1.2.35 vim=2:7.4.1689-3ubuntu1.5 git=1:2.7.4-0ubuntu1.10 postgresql=9.5+173ubuntu0.3 postgresql-plpython-9.5=9.5.25-0ubuntu0.16.04.1 libfontconfig python3-pip=8.1.1-2ubuntu0.6 libssl-dev=1.0.2g-1ubuntu4.20 libpq-dev=9.5.25-0ubuntu0.16.04.1 -qy \\\n && pip3 install -U pip\nRUN pip3 install supervisor \\\n && locale-gen \"en_US.UTF-8\" \\\n && apt-get autoremove -y \\\n && mkdir -p /var/log/supervisor /etc/supervisor /pgwatch2 \\\n && rm -rf /var/lib/postgresql/9.5/main \\\n && echo \"include = 'pgwatch_postgresql.conf'\" >> /etc/postgresql/9.5/main/postgresql.conf \\\n && chgrp -R 0 /pgwatch2 /var/log/supervisor /etc/supervisor /var/run /var/lib/postgresql /var/log/postgresql /var/run/postgresql /etc/postgresql \\\n && chmod -R g=u /pgwatch2 /var/log/supervisor /etc/supervisor /var/run /var/lib/postgresql /var/log/postgresql /etc/postgresql \\\n && chmod g=u /etc/passwd\n#  ## Download and install external components\n#   Grafana [https://grafana.com/grafana/download]\n#     latest ver.: curl -so- https://api.github.com/repos/grafana/grafana/tags | grep -Eo '\"v[0-9\\.]+\"' | grep -Eo '[0-9\\.]+' | sort -nr | head -1\n#   Influxdb [https://portal.influxdata.com/downloads]\n#     latest ver.: curl -so- https://api.github.com/repos/influxdata/influxdb/tags | grep -Eo '\"v[0-9\\.]+\"' | grep -Eo '[0-9\\.]+' | sort -nr | head -1\nRUN wget -q -O grafana.deb https://dl.grafana.com/oss/release/grafana_6.2.4_amd64.deb \\\n && wget -q -O - https://dl.influxdata.com/influxdb/releases/influxdb_1.7.6_amd64.deb > influxdb_amd64.deb \\\n && dpkg -i grafana.deb \\\n && rm grafana.deb \\\n && mkdir -p /var/run/grafana \\\n && chgrp -R 0 /etc/grafana/ /usr/share/grafana /var/lib/grafana /var/log/grafana /var/run/grafana \\\n && chmod -R g=u /etc/grafana/ /usr/share/grafana /var/lib/grafana /var/log/grafana /var/run/grafana \\\n && dpkg -i influxdb_amd64.deb \\\n && rm influxdb_amd64.deb \\\n && chgrp -R 0 /var/lib/influxdb /var/log/influxdb /usr/lib/influxdb /etc/influxdb \\\n && chmod -R g=u /var/lib/influxdb /var/log/influxdb /usr/lib/influxdb /etc/influxdb \\\n && sed -i 's/\\# query-log-enabled = true/query-log-enabled = false/' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# \\[monitor\\]/\\[monitor\\]/' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# store-enabled = true/store-enabled = false/' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# \\[http\\]/\\[http\\]/' /etc/influxdb/influxdb.conf \\\n && sed -i '0,/\\# log-enabled = true/{s/\\# log-enabled = true/log-enabled = false/}' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# index-version = \\\"inmem\\\"/index-version = \\\"tsi1\\\"/' /etc/influxdb/influxdb.conf\n#   Add pgwatch2 sources\nCOPY pgwatch2 /pgwatch2\nCOPY webpy /pgwatch2/webpy\n#   Go installation [https://golang.org/dl/]\n#   Grafana config customizations, Web UI requirements, compilation of the Go gatherer\nRUN wget -q -O /tmp/go.tar.gz https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz \\\n && tar -C /usr/local -xzf /tmp/go.tar.gz \\\n && export PATH=$PATH:/usr/local/go/bin \\\n && cp /pgwatch2/bootstrap/grafana_custom_config.ini /etc/grafana/grafana.ini \\\n && pip3 install -r /pgwatch2/webpy/requirements.txt \\\n && cd /pgwatch2 \\\n && bash build_gatherer.sh \\\n && rm /tmp/go.tar.gz \\\n && rm -rf /usr/local/go \\\n && mkdir /pgwatch2/persistent-config \\\n && chgrp -R 0 /pgwatch2/webpy /pgwatch2/persistent-config \\\n && chmod -R g=u /pgwatch2/webpy /pgwatch2/persistent-config \\\n && grafana-cli plugins install savantly-heatmap-panel\nCOPY grafana_dashboards /pgwatch2/grafana_dashboards\n#   For showing all component versions via :8080/versions. Assuming project is cloned from Github here\nCOPY .git/refs/heads/master /pgwatch2/build_git_version.txt\n#   Set up supervisord [https://docs.docker.com/engine/admin/using_supervisord/]\nCOPY supervisord-nonroot.conf /etc/supervisor/supervisord.conf\n#   Postgres (ver 9.5) config tuning\n#   NB! When security is a concern one should definitely alter \"pgwatch2\" password in change_pw.sql and maybe modify pg_hba.conf accordingly\nCOPY postgresql.conf /etc/postgresql/9.5/main/pgwatch_postgresql.conf\nCOPY pg_hba.conf /etc/postgresql/9.5/main/pg_hba.conf\nCOPY docker-launcher-nonroot.sh /pgwatch2/\nENV NOTESTDB=\"1\"\n#   Admin UI for configuring servers to be monitored\nEXPOSE 8080/tcp\n#   Gatherer healthcheck port / metric statistics (JSON)\nEXPOSE 8081/tcp\n#   Postgres DB holding the pgwatch2 config DB\nEXPOSE 5432/tcp\n#   Grafana UI\nEXPOSE 3000/tcp\n#   InfluxDB API\nEXPOSE 8086/tcp\n#   InfluxDB backup port\nEXPOSE 8088/tcp\n#   Prometheus scraping port\nEXPOSE 9187/tcp\n#  ## Volumes for easier updating to newer to newer pgwatch2 containers\n#  ## NB! Backwards compatibility is not 100% guaranteed (e.g. InfluxDB has changed index storage format) so a backup\n#  ## using traditional means is still recommended before updating - see \"Updating to a newer Docker version\" from README\nVOLUME /pgwatch2/persistent-config\nVOLUME /var/lib/postgresql\nVOLUME /var/lib/influxdb\nVOLUME /var/lib/grafana\n#  ##\n#  ## OpenShift compatibility - run all using an unprivileged user:\n#  ## https://docs.openshift.org/latest/creating_images/guidelines.html#openshift-specific-guidelines\n#  ##\nUSER 10001\nCMD [\"/pgwatch2/docker-launcher-nonroot.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nRUN apt-get update -q \\\n && apt-get install wget apt-transport-https vim git postgresql postgresql-plpython-9.5 libfontconfig python3-pip libssl-dev libpq-dev -qy \\\n && pip3 install -U pip\nRUN pip3 install supervisor \\\n && locale-gen \"en_US.UTF-8\" \\\n && apt-get autoremove -y \\\n && mkdir -p /var/log/supervisor /etc/supervisor /pgwatch2 \\\n && rm -rf /var/lib/postgresql/9.5/main \\\n && echo \"include = 'pgwatch_postgresql.conf'\" >> /etc/postgresql/9.5/main/postgresql.conf \\\n && chgrp -R 0 /pgwatch2 /var/log/supervisor /etc/supervisor /var/run /var/lib/postgresql /var/log/postgresql /var/run/postgresql /etc/postgresql \\\n && chmod -R g=u /pgwatch2 /var/log/supervisor /etc/supervisor /var/run /var/lib/postgresql /var/log/postgresql /etc/postgresql \\\n && chmod g=u /etc/passwd\n# ## Download and install external components\n#  Grafana [https://grafana.com/grafana/download]\n#    latest ver.: curl -so- https://api.github.com/repos/grafana/grafana/tags | grep -Eo '\"v[0-9\\.]+\"' | grep -Eo '[0-9\\.]+' | sort -nr | head -1\n#  Influxdb [https://portal.influxdata.com/downloads]\n#    latest ver.: curl -so- https://api.github.com/repos/influxdata/influxdb/tags | grep -Eo '\"v[0-9\\.]+\"' | grep -Eo '[0-9\\.]+' | sort -nr | head -1\nRUN wget -q -O grafana.deb https://dl.grafana.com/oss/release/grafana_6.2.4_amd64.deb \\\n && wget -q -O - https://dl.influxdata.com/influxdb/releases/influxdb_1.7.6_amd64.deb > influxdb_amd64.deb \\\n && dpkg -i grafana.deb \\\n && rm grafana.deb \\\n && mkdir -p /var/run/grafana \\\n && chgrp -R 0 /etc/grafana/ /usr/share/grafana /var/lib/grafana /var/log/grafana /var/run/grafana \\\n && chmod -R g=u /etc/grafana/ /usr/share/grafana /var/lib/grafana /var/log/grafana /var/run/grafana \\\n && dpkg -i influxdb_amd64.deb \\\n && rm influxdb_amd64.deb \\\n && chgrp -R 0 /var/lib/influxdb /var/log/influxdb /usr/lib/influxdb /etc/influxdb \\\n && chmod -R g=u /var/lib/influxdb /var/log/influxdb /usr/lib/influxdb /etc/influxdb \\\n && sed -i 's/\\# query-log-enabled = true/query-log-enabled = false/' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# \\[monitor\\]/\\[monitor\\]/' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# store-enabled = true/store-enabled = false/' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# \\[http\\]/\\[http\\]/' /etc/influxdb/influxdb.conf \\\n && sed -i '0,/\\# log-enabled = true/{s/\\# log-enabled = true/log-enabled = false/}' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# index-version = \\\"inmem\\\"/index-version = \\\"tsi1\\\"/' /etc/influxdb/influxdb.conf\n#  Add pgwatch2 sources\nADD pgwatch2 /pgwatch2\nADD webpy /pgwatch2/webpy\n#  Go installation [https://golang.org/dl/]\n#  Grafana config customizations, Web UI requirements, compilation of the Go gatherer\nRUN wget -q -O /tmp/go.tar.gz https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz \\\n && tar -C /usr/local -xzf /tmp/go.tar.gz \\\n && export PATH=$PATH:/usr/local/go/bin \\\n && cp /pgwatch2/bootstrap/grafana_custom_config.ini /etc/grafana/grafana.ini \\\n && pip3 install -r /pgwatch2/webpy/requirements.txt \\\n && cd /pgwatch2 \\\n && bash build_gatherer.sh \\\n && rm /tmp/go.tar.gz \\\n && rm -rf /usr/local/go \\\n && mkdir /pgwatch2/persistent-config \\\n && chgrp -R 0 /pgwatch2/webpy /pgwatch2/persistent-config \\\n && chmod -R g=u /pgwatch2/webpy /pgwatch2/persistent-config \\\n && grafana-cli plugins install savantly-heatmap-panel\nADD grafana_dashboards /pgwatch2/grafana_dashboards\n#  For showing all component versions via :8080/versions. Assuming project is cloned from Github here\nCOPY .git/refs/heads/master /pgwatch2/build_git_version.txt\n#  Set up supervisord [https://docs.docker.com/engine/admin/using_supervisord/]\nCOPY supervisord-nonroot.conf /etc/supervisor/supervisord.conf\n#  Postgres (ver 9.5) config tuning\n#  NB! When security is a concern one should definitely alter \"pgwatch2\" password in change_pw.sql and maybe modify pg_hba.conf accordingly\nCOPY postgresql.conf /etc/postgresql/9.5/main/pgwatch_postgresql.conf\nCOPY pg_hba.conf /etc/postgresql/9.5/main/pg_hba.conf\nCOPY docker-launcher-nonroot.sh /pgwatch2/\nENV NOTESTDB=\"1\"\n#  Admin UI for configuring servers to be monitored\nEXPOSE 8080/tcp\n#  Gatherer healthcheck port / metric statistics (JSON)\nEXPOSE 8081/tcp\n#  Postgres DB holding the pgwatch2 config DB\nEXPOSE 5432/tcp\n#  Grafana UI\nEXPOSE 3000/tcp\n#  InfluxDB API\nEXPOSE 8086/tcp\n#  InfluxDB backup port\nEXPOSE 8088/tcp\n#  Prometheus scraping port\nEXPOSE 9187/tcp\n# ## Volumes for easier updating to newer to newer pgwatch2 containers\n# ## NB! Backwards compatibility is not 100% guaranteed (e.g. InfluxDB has changed index storage format) so a backup\n# ## using traditional means is still recommended before updating - see \"Updating to a newer Docker version\" from README\nVOLUME /pgwatch2/persistent-config\nVOLUME /var/lib/postgresql\nVOLUME /var/lib/influxdb\nVOLUME /var/lib/grafana\n# ##\n# ## OpenShift compatibility - run all using an unprivileged user:\n# ## https://docs.openshift.org/latest/creating_images/guidelines.html#openshift-specific-guidelines\n# ##\nUSER 10001\nCMD [\"/pgwatch2/docker-launcher-nonroot.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"feb484a0cad26e6533fda83f0835c84a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nRUN apt-get update -q \\\n && apt-get install wget apt-transport-https vim git postgresql postgresql-plpython-9.5 libfontconfig python3-pip libssl-dev libpq-dev -qy \\\n && pip3 install -U pip\nRUN pip3 install supervisor \\\n && locale-gen \"en_US.UTF-8\" \\\n && apt-get autoremove -y \\\n && mkdir -p /var/log/supervisor /etc/supervisor /pgwatch2 \\\n && rm -rf /var/lib/postgresql/9.5/main \\\n && echo \"include = 'pgwatch_postgresql.conf'\" >> /etc/postgresql/9.5/main/postgresql.conf \\\n && chgrp -R 0 /pgwatch2 /var/log/supervisor /etc/supervisor /var/run /var/lib/postgresql /var/log/postgresql /var/run/postgresql /etc/postgresql \\\n && chmod -R g=u /pgwatch2 /var/log/supervisor /etc/supervisor /var/run /var/lib/postgresql /var/log/postgresql /etc/postgresql \\\n && chmod g=u /etc/passwd\n#  ## Download and install external components\n#   Grafana [https://grafana.com/grafana/download]\n#     latest ver.: curl -so- https://api.github.com/repos/grafana/grafana/tags | grep -Eo '\"v[0-9\\.]+\"' | grep -Eo '[0-9\\.]+' | sort -nr | head -1\n#   Influxdb [https://portal.influxdata.com/downloads]\n#     latest ver.: curl -so- https://api.github.com/repos/influxdata/influxdb/tags | grep -Eo '\"v[0-9\\.]+\"' | grep -Eo '[0-9\\.]+' | sort -nr | head -1\nRUN wget -q -O grafana.deb https://dl.grafana.com/oss/release/grafana_6.2.4_amd64.deb \\\n && wget -q -O - https://dl.influxdata.com/influxdb/releases/influxdb_1.7.6_amd64.deb > influxdb_amd64.deb \\\n && dpkg -i grafana.deb \\\n && rm grafana.deb \\\n && mkdir -p /var/run/grafana \\\n && chgrp -R 0 /etc/grafana/ /usr/share/grafana /var/lib/grafana /var/log/grafana /var/run/grafana \\\n && chmod -R g=u /etc/grafana/ /usr/share/grafana /var/lib/grafana /var/log/grafana /var/run/grafana \\\n && dpkg -i influxdb_amd64.deb \\\n && rm influxdb_amd64.deb \\\n && chgrp -R 0 /var/lib/influxdb /var/log/influxdb /usr/lib/influxdb /etc/influxdb \\\n && chmod -R g=u /var/lib/influxdb /var/log/influxdb /usr/lib/influxdb /etc/influxdb \\\n && sed -i 's/\\# query-log-enabled = true/query-log-enabled = false/' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# \\[monitor\\]/\\[monitor\\]/' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# store-enabled = true/store-enabled = false/' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# \\[http\\]/\\[http\\]/' /etc/influxdb/influxdb.conf \\\n && sed -i '0,/\\# log-enabled = true/{s/\\# log-enabled = true/log-enabled = false/}' /etc/influxdb/influxdb.conf \\\n && sed -i 's/\\# index-version = \\\"inmem\\\"/index-version = \\\"tsi1\\\"/' /etc/influxdb/influxdb.conf\n#   Add pgwatch2 sources\nADD pgwatch2 /pgwatch2\nADD webpy /pgwatch2/webpy\n#   Go installation [https://golang.org/dl/]\n#   Grafana config customizations, Web UI requirements, compilation of the Go gatherer\nRUN wget -q -O /tmp/go.tar.gz https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz \\\n && tar -C /usr/local -xzf /tmp/go.tar.gz \\\n && export PATH=$PATH:/usr/local/go/bin \\\n && cp /pgwatch2/bootstrap/grafana_custom_config.ini /etc/grafana/grafana.ini \\\n && pip3 install -r /pgwatch2/webpy/requirements.txt \\\n && cd /pgwatch2 \\\n && bash build_gatherer.sh \\\n && rm /tmp/go.tar.gz \\\n && rm -rf /usr/local/go \\\n && mkdir /pgwatch2/persistent-config \\\n && chgrp -R 0 /pgwatch2/webpy /pgwatch2/persistent-config \\\n && chmod -R g=u /pgwatch2/webpy /pgwatch2/persistent-config \\\n && grafana-cli plugins install savantly-heatmap-panel\nADD grafana_dashboards /pgwatch2/grafana_dashboards\n#   For showing all component versions via :8080/versions. Assuming project is cloned from Github here\nCOPY .git/refs/heads/master /pgwatch2/build_git_version.txt\n#   Set up supervisord [https://docs.docker.com/engine/admin/using_supervisord/]\nCOPY supervisord-nonroot.conf /etc/supervisor/supervisord.conf\n#   Postgres (ver 9.5) config tuning\n#   NB! When security is a concern one should definitely alter \"pgwatch2\" password in change_pw.sql and maybe modify pg_hba.conf accordingly\nCOPY postgresql.conf /etc/postgresql/9.5/main/pgwatch_postgresql.conf\nCOPY pg_hba.conf /etc/postgresql/9.5/main/pg_hba.conf\nCOPY docker-launcher-nonroot.sh /pgwatch2/\nENV NOTESTDB=\"1\"\n#   Admin UI for configuring servers to be monitored\nEXPOSE 8080/tcp\n#   Gatherer healthcheck port / metric statistics (JSON)\nEXPOSE 8081/tcp\n#   Postgres DB holding the pgwatch2 config DB\nEXPOSE 5432/tcp\n#   Grafana UI\nEXPOSE 3000/tcp\n#   InfluxDB API\nEXPOSE 8086/tcp\n#   InfluxDB backup port\nEXPOSE 8088/tcp\n#   Prometheus scraping port\nEXPOSE 9187/tcp\n#  ## Volumes for easier updating to newer to newer pgwatch2 containers\n#  ## NB! Backwards compatibility is not 100% guaranteed (e.g. InfluxDB has changed index storage format) so a backup\n#  ## using traditional means is still recommended before updating - see \"Updating to a newer Docker version\" from README\nVOLUME /pgwatch2/persistent-config\nVOLUME /var/lib/postgresql\nVOLUME /var/lib/influxdb\nVOLUME /var/lib/grafana\n#  ##\n#  ## OpenShift compatibility - run all using an unprivileged user:\n#  ## https://docs.openshift.org/latest/creating_images/guidelines.html#openshift-specific-guidelines\n#  ##\nUSER 10001\nCMD [\"/pgwatch2/docker-launcher-nonroot.sh\"]\n","originalDockerfileUglifiedHash":"2fbdc941ac8ab301d9159d3f5b644ceb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d83ec456f6ff11e0c1ccb3d47866133044646a1e.dockerfile"}