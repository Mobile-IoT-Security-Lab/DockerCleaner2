{"seed":4090144453,"processedDockerfileHash":"72b19dc33ffd1e951bb939e5a828b9b4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM debian:stretch-slim\n#   prevent Debian's PHP packages from being installed\n#   https://github.com/docker-library/php/pull/542\nRUN set -eux ; { echo 'Package: php*' ;echo 'Pin: release *' ;echo 'Pin-Priority: -1' ; } > /etc/apt/preferences.d/no-debian-php\n#   dependencies required for running \"phpize\"\n#   (see persistent deps below)\nENV PHPIZE_DEPS=\"autoconf  dpkg-dev  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\n#   persistent / runtime deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl xz-utils $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN set -eux ; mkdir -p \"$PHP_INI_DIR/conf.d\" ; [ ! -d /var/www/html ] ; mkdir -p /var/www/html ; chown www-data:www-data /var/www/html ; chmod 777 /var/www/html\n#  #<autogenerated>##\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\nRUN set -eux ; apt-get update ; apt-get install --no-install-recommends apache2 -y ; rm -rf /var/lib/apt/lists/* ; sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" ; . \"$APACHE_ENVVARS\" ; for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\"; do rm -rvf \"$dir\" ;mkdir -p \"$dir\" ;chown \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ;chmod 777 \"$dir\" ; done ; rm -rvf /var/www/html/* ; ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" ; ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" ; ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\" ; chown -R --no-dereference \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$APACHE_LOG_DIR\"\n#   Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event \\\n && a2enmod mpm_prefork\n#   PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo '<FilesMatch \\.php$>' ;echo '\\tSetHandler application/x-httpd-php' ;echo '</FilesMatch>' ;echo ;echo 'DirectoryIndex disabled' ;echo 'DirectoryIndex index.php index.html' ;echo ;echo '<Directory /var/www/>' ;echo '\\tOptions -Indexes' ;echo '\\tAllowOverride All' ;echo '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n && a2enconf docker-php\nENV PHP_EXTRA_BUILD_DEPS=\"apache2-dev\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2 --disable-cgi\"\n#  #</autogenerated>##\n#   Apply stack smash protection to functions using local buffers and alloca()\n#   Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n#   Enable optimization (-O2)\n#   Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n#   Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n#   https://github.com/docker-library/php/issues/272\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D\"\n#  ENV PHP_VERSION 7.3.5\n#  ENV PHP_URL=\"https://www.php.net/get/php-7.3.5.tar.xz/from/this/mirror\" PHP_ASC_URL=\"https://www.php.net/get/php-7.3.5.tar.xz.asc/from/this/mirror\"\n#  ENV PHP_SHA256=\"e1011838a46fd4a195c8453b333916622d7ff5bce4aca2d9d99afac142db2472\" PHP_MD5=\"\"\nRUN set -xe ; fetchDeps=' git wget ' ; if ! command -v gpg > /dev/null; then fetchDeps=\"$fetchDeps dirmngr gnupg \" ; fi ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; git clone http://git.php.net/repository/php-src.git php ; cd php ; git checkout PHP-7.4 ; ./buildconf --force ; rm -rf .git ; cd /usr/src ; tar -cJf php.tar.xz php ; rm -rf php ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps\nCOPY docker-php-source /usr/local/bin/\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends bison libcurl4-openssl-dev libedit-dev libonig-dev libsodium-dev libsqlite3-dev libssl-dev libxml2-dev zlib1g-dev libffi-dev ${PHP_EXTRA_BUILD_DEPS:-} -y ; sed -e 's/stretch/buster/g' /etc/apt/sources.list > /etc/apt/sources.list.d/buster.list; { echo 'Package: *' ;echo 'Pin: release n=buster' ;echo 'Pin-Priority: -10' ;echo ;echo 'Package: libargon2*' ;echo 'Pin: release n=buster' ;echo 'Pin-Priority: 990' ; } > /etc/apt/preferences.d/argon2-buster; apt-get update ; apt-get install --no-install-recommends libargon2-dev -y ; rm -rf /var/lib/apt/lists/* ; export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" ; docker-php-source extract ; cd /usr/src/php ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" ; if [ ! -d /usr/include/curl ] ; then ln -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl ; fi ; ./configure --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --with-ffi --enable-option-checking=fatal --with-mhash --enable-ftp --enable-mbstring --enable-mysqlnd --with-password-argon2 --with-sodium --with-curl --with-libedit --with-openssl --with-zlib --with-pear $( test \"$gnuArch\" = 's390x-linux-gnu' \\\n && echo '--without-pcre-jit' ;) --with-libdir=\"lib/$debMultiarch\" ${PHP_EXTRA_CONFIGURE_ARGS:-} ; make -j \"$( nproc ;)\" ; find -type f -name '*.a' -delete ; make install ; find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; make clean ; cp -v php.ini-* \"$PHP_INI_DIR/\" ; cd / ; docker-php-source delete ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; find /usr/local -type f -executable -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; php --version ; pecl update-channels ; rm -rf /tmp/pear ~/.pearrc\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\n#   sodium was built as a shared module (so that it can be replaced later if so desired), so let's enable it too (https://github.com/docker-library/php/issues/598)\n#   RUN docker-php-ext-enable sodium\nENTRYPOINT [\"docker-php-entrypoint\"]\n#  #<autogenerated>##\nRUN docker-php-ext-install opcache \\\n && mv /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini\nCOPY apache2-foreground /usr/local/bin/\nCOPY index.php /var/www/html/index.php\nCOPY preload.php /var/www/html/preload.php\nCOPY php.ini-nextphp /usr/local/etc/php/conf.d/php-nextphp.ini\nCOPY flag /flag\nWORKDIR /var/www/html\nRUN a2enmod dump_io \\\n && { echo 'LogLevel dumpio:trace7' ;echo 'DumpIOInput On' ; } | tee \"$APACHE_CONFDIR/conf-available/dumpio.conf\" \\\n && a2enconf dumpio \\\n && chown root:root /var/www/html \\\n && chmod 0755 -R /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n#  #</autogenerated>##\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM debian:stretch-slim\n#  prevent Debian's PHP packages from being installed\n#  https://github.com/docker-library/php/pull/542\nRUN set -eux ; { echo 'Package: php*' ;echo 'Pin: release *' ;echo 'Pin-Priority: -1' ; } > /etc/apt/preferences.d/no-debian-php\n#  dependencies required for running \"phpize\"\n#  (see persistent deps below)\nENV PHPIZE_DEPS=\"autoconf  dpkg-dev  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\n#  persistent / runtime deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl xz-utils $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN set -eux ; mkdir -p \"$PHP_INI_DIR/conf.d\" ; [ ! -d /var/www/html ] ; mkdir -p /var/www/html ; chown www-data:www-data /var/www/html ; chmod 777 /var/www/html\n# #<autogenerated>##\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\nRUN set -eux ; apt-get update ; apt-get install --no-install-recommends apache2 -y ; rm -rf /var/lib/apt/lists/* ; sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" ; . \"$APACHE_ENVVARS\" ; for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\"; do rm -rvf \"$dir\" ;mkdir -p \"$dir\" ;chown \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ;chmod 777 \"$dir\" ; done ; rm -rvf /var/www/html/* ; ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" ; ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" ; ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\" ; chown -R --no-dereference \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$APACHE_LOG_DIR\"\n#  Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event \\\n && a2enmod mpm_prefork\n#  PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo '<FilesMatch \\.php$>' ;echo '\\tSetHandler application/x-httpd-php' ;echo '</FilesMatch>' ;echo ;echo 'DirectoryIndex disabled' ;echo 'DirectoryIndex index.php index.html' ;echo ;echo '<Directory /var/www/>' ;echo '\\tOptions -Indexes' ;echo '\\tAllowOverride All' ;echo '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n && a2enconf docker-php\nENV PHP_EXTRA_BUILD_DEPS=\"apache2-dev\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2 --disable-cgi\"\n# #</autogenerated>##\n#  Apply stack smash protection to functions using local buffers and alloca()\n#  Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n#  Enable optimization (-O2)\n#  Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n#  Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n#  https://github.com/docker-library/php/issues/272\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D\"\n# ENV PHP_VERSION 7.3.5\n# ENV PHP_URL=\"https://www.php.net/get/php-7.3.5.tar.xz/from/this/mirror\" PHP_ASC_URL=\"https://www.php.net/get/php-7.3.5.tar.xz.asc/from/this/mirror\"\n# ENV PHP_SHA256=\"e1011838a46fd4a195c8453b333916622d7ff5bce4aca2d9d99afac142db2472\" PHP_MD5=\"\"\nRUN set -xe ; fetchDeps=' git wget ' ; if ! command -v gpg > /dev/null; then fetchDeps=\"$fetchDeps dirmngr gnupg \" ; fi ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; git clone http://git.php.net/repository/php-src.git php ; cd php ; git checkout PHP-7.4 ; ./buildconf --force ; rm -rf .git ; cd /usr/src ; tar -cJf php.tar.xz php ; rm -rf php ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps\nCOPY docker-php-source /usr/local/bin/\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends bison libcurl4-openssl-dev libedit-dev libonig-dev libsodium-dev libsqlite3-dev libssl-dev libxml2-dev zlib1g-dev libffi-dev ${PHP_EXTRA_BUILD_DEPS:-} -y ; sed -e 's/stretch/buster/g' /etc/apt/sources.list > /etc/apt/sources.list.d/buster.list; { echo 'Package: *' ;echo 'Pin: release n=buster' ;echo 'Pin-Priority: -10' ;echo ;echo 'Package: libargon2*' ;echo 'Pin: release n=buster' ;echo 'Pin-Priority: 990' ; } > /etc/apt/preferences.d/argon2-buster; apt-get update ; apt-get install --no-install-recommends libargon2-dev -y ; rm -rf /var/lib/apt/lists/* ; export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" ; docker-php-source extract ; cd /usr/src/php ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" ; if [ ! -d /usr/include/curl ] ; then ln -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl ; fi ; ./configure --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --with-ffi --enable-option-checking=fatal --with-mhash --enable-ftp --enable-mbstring --enable-mysqlnd --with-password-argon2 --with-sodium --with-curl --with-libedit --with-openssl --with-zlib --with-pear $( test \"$gnuArch\" = 's390x-linux-gnu' \\\n && echo '--without-pcre-jit' ;) --with-libdir=\"lib/$debMultiarch\" ${PHP_EXTRA_CONFIGURE_ARGS:-} ; make -j \"$( nproc ;)\" ; find -type f -name '*.a' -delete ; make install ; find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; make clean ; cp -v php.ini-* \"$PHP_INI_DIR/\" ; cd / ; docker-php-source delete ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; find /usr/local -type f -executable -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; php --version ; pecl update-channels ; rm -rf /tmp/pear ~/.pearrc\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\n#  sodium was built as a shared module (so that it can be replaced later if so desired), so let's enable it too (https://github.com/docker-library/php/issues/598)\n#  RUN docker-php-ext-enable sodium\nENTRYPOINT [\"docker-php-entrypoint\"]\n# #<autogenerated>##\nRUN docker-php-ext-install opcache \\\n && mv /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini\nCOPY apache2-foreground /usr/local/bin/\nCOPY index.php /var/www/html/index.php\nCOPY preload.php /var/www/html/preload.php\nCOPY php.ini-nextphp /usr/local/etc/php/conf.d/php-nextphp.ini\nCOPY flag /flag\nWORKDIR /var/www/html\nRUN a2enmod dump_io \\\n && { echo 'LogLevel dumpio:trace7' ;echo 'DumpIOInput On' ; } | tee \"$APACHE_CONFDIR/conf-available/dumpio.conf\" \\\n && a2enconf dumpio \\\n && chown root:root /var/www/html \\\n && chmod 0755 -R /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n# #</autogenerated>##\n","injectedSmells":[],"originalDockerfileHash":"9e7ab414086d5b571f33c67af3caa6c5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM debian:stretch-slim\n#   prevent Debian's PHP packages from being installed\n#   https://github.com/docker-library/php/pull/542\nRUN set -eux ; { echo 'Package: php*' ;echo 'Pin: release *' ;echo 'Pin-Priority: -1' ; } > /etc/apt/preferences.d/no-debian-php\n#   dependencies required for running \"phpize\"\n#   (see persistent deps below)\nENV PHPIZE_DEPS=\"autoconf  dpkg-dev  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\n#   persistent / runtime deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl xz-utils $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN set -eux ; mkdir -p \"$PHP_INI_DIR/conf.d\" ; [ ! -d /var/www/html ] ; mkdir -p /var/www/html ; chown www-data:www-data /var/www/html ; chmod 777 /var/www/html\n#  #<autogenerated>##\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\nRUN set -eux ; apt-get update ; apt-get install --no-install-recommends apache2 -y ; rm -rf /var/lib/apt/lists/* ; sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" ; . \"$APACHE_ENVVARS\" ; for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\"; do rm -rvf \"$dir\" ;mkdir -p \"$dir\" ;chown \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ;chmod 777 \"$dir\" ; done ; rm -rvf /var/www/html/* ; ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" ; ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" ; ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\" ; chown -R --no-dereference \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$APACHE_LOG_DIR\"\n#   Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event \\\n && a2enmod mpm_prefork\n#   PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo '<FilesMatch \\.php$>' ;echo '\\tSetHandler application/x-httpd-php' ;echo '</FilesMatch>' ;echo ;echo 'DirectoryIndex disabled' ;echo 'DirectoryIndex index.php index.html' ;echo ;echo '<Directory /var/www/>' ;echo '\\tOptions -Indexes' ;echo '\\tAllowOverride All' ;echo '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n && a2enconf docker-php\nENV PHP_EXTRA_BUILD_DEPS=\"apache2-dev\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2 --disable-cgi\"\n#  #</autogenerated>##\n#   Apply stack smash protection to functions using local buffers and alloca()\n#   Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n#   Enable optimization (-O2)\n#   Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n#   Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n#   https://github.com/docker-library/php/issues/272\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D\"\n#  ENV PHP_VERSION 7.3.5\n#  ENV PHP_URL=\"https://www.php.net/get/php-7.3.5.tar.xz/from/this/mirror\" PHP_ASC_URL=\"https://www.php.net/get/php-7.3.5.tar.xz.asc/from/this/mirror\"\n#  ENV PHP_SHA256=\"e1011838a46fd4a195c8453b333916622d7ff5bce4aca2d9d99afac142db2472\" PHP_MD5=\"\"\nRUN set -xe ; fetchDeps=' git wget ' ; if ! command -v gpg > /dev/null; then fetchDeps=\"$fetchDeps dirmngr gnupg \" ; fi ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; git clone http://git.php.net/repository/php-src.git php ; cd php ; git checkout PHP-7.4 ; ./buildconf --force ; rm -rf .git ; cd /usr/src ; tar -cJf php.tar.xz php ; rm -rf php ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps\nCOPY docker-php-source /usr/local/bin/\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends bison libcurl4-openssl-dev libedit-dev libonig-dev libsodium-dev libsqlite3-dev libssl-dev libxml2-dev zlib1g-dev libffi-dev ${PHP_EXTRA_BUILD_DEPS:-} -y ; sed -e 's/stretch/buster/g' /etc/apt/sources.list > /etc/apt/sources.list.d/buster.list; { echo 'Package: *' ;echo 'Pin: release n=buster' ;echo 'Pin-Priority: -10' ;echo ;echo 'Package: libargon2*' ;echo 'Pin: release n=buster' ;echo 'Pin-Priority: 990' ; } > /etc/apt/preferences.d/argon2-buster; apt-get update ; apt-get install --no-install-recommends libargon2-dev -y ; rm -rf /var/lib/apt/lists/* ; export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" ; docker-php-source extract ; cd /usr/src/php ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" ; if [ ! -d /usr/include/curl ] ; then ln -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl ; fi ; ./configure --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --with-ffi --enable-option-checking=fatal --with-mhash --enable-ftp --enable-mbstring --enable-mysqlnd --with-password-argon2 --with-sodium --with-curl --with-libedit --with-openssl --with-zlib --with-pear $( test \"$gnuArch\" = 's390x-linux-gnu' \\\n && echo '--without-pcre-jit' ;) --with-libdir=\"lib/$debMultiarch\" ${PHP_EXTRA_CONFIGURE_ARGS:-} ; make -j \"$( nproc ;)\" ; find -type f -name '*.a' -delete ; make install ; find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; make clean ; cp -v php.ini-* \"$PHP_INI_DIR/\" ; cd / ; docker-php-source delete ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; find /usr/local -type f -executable -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; php --version ; pecl update-channels ; rm -rf /tmp/pear ~/.pearrc\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\n#   sodium was built as a shared module (so that it can be replaced later if so desired), so let's enable it too (https://github.com/docker-library/php/issues/598)\n#   RUN docker-php-ext-enable sodium\nENTRYPOINT [\"docker-php-entrypoint\"]\n#  #<autogenerated>##\nRUN docker-php-ext-install opcache \\\n && mv /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini\nCOPY apache2-foreground /usr/local/bin/\nCOPY index.php /var/www/html/index.php\nCOPY preload.php /var/www/html/preload.php\nCOPY php.ini-nextphp /usr/local/etc/php/conf.d/php-nextphp.ini\nCOPY flag /flag\nWORKDIR /var/www/html\nRUN a2enmod dump_io \\\n && { echo 'LogLevel dumpio:trace7' ;echo 'DumpIOInput On' ; } | tee \"$APACHE_CONFDIR/conf-available/dumpio.conf\" \\\n && a2enconf dumpio \\\n && chown root:root /var/www/html \\\n && chmod 0755 -R /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n#  #</autogenerated>##\n","originalDockerfileUglifiedHash":"bda2b9da19adc0d8c765dfd423d96b8a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1011ca9bda6d40ffbbbdd700ee69c60d7edd3e6f.dockerfile"}