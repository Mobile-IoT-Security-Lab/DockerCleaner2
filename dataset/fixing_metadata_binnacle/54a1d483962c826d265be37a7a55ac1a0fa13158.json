{"seed":1971672593,"processedDockerfileHash":"1863229b254e571a5d0a0eec11fd5b16","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ${FROM_IMAGE}\n#   see http://label-schema.org/rc1/\nLABEL org.label-schema.name=\"php\" \\\n      org.label-schema.version=\"0.1\" \\\n      org.label-schema.description=\"Core PHP image\" \\\n      org.label-schema.vendor=\"Claranet GmbH\" \\\n      org.label-schema.schema-version=\"1.1.18\" \\\n      author1=\"Fabian Dörk <fabian.doerk@de.clara.net>\" \\\n      author2=\"Tony Fahrion <tony.fahrion@de.clara.net>\"\n#   GENERAL\nARG ERROR_EXIT_CODE=1\nARG ENABLE_CLEANUP=true\nENV WORKDIR=\"/app\" \\\n    BUILD_LOG=\"/app/logs/build.log\" \\\n    ENABLE_PATCHES=\"true\"\n#   GCP\nARG ENABLE_GCP\nENV ENABLE_GCP=\"${ENABLE_GCP:-0}\" \\\n    GOOGLE_ASSET_BUCKET_ENABLED=\"false\" \\\n    ASSET_BUCKET_NAME=\"to-be-defined\" \\\n    ASSET_VERSION=\"${ASSET_VERSION:-e.g.-commit-sha1}\"\n#   OS\n#   libtcmalloc: to increase php-fpm and nginx performance\n#   busybox-static: provides crond, the normal package does not!\n#   ssmtp: synchronouse mailer, very handy in CLI scripts on docker\nENV PATH=\"${PATH}:${WORKDIR}/docker/bin\" \\\n    BUILD_PACKAGES=\"ccache build-essential unzip\" \\\n    SYSTEM_PACKAGES=\"ssmtp busybox-static netcat vim less tree libtcmalloc-minimal4 git postgresql-client gettext nginx\" \\\n    JESSIE_PACKAGE_MAP=\"libpng16-16:libpng12-0 libicu57:libicu52 libmagickwand-6.q16-3:libmagickwand-6.q16-2 libmagickcore-6.q16-3:libmagickcore-6.q16-2 npm:\" \\\n    ENABLE_NEWRELIC=\"false\"\n#   NGINX\nENV NGINX_SITES_AVAILABLE=\"/etc/nginx/sites-available\" \\\n    NGINX_SITES_ENABLED=\"/etc/nginx/sites-enabled\" \\\n    DISABLE_NGINX_DAEMON=\"false\" \\\n    PHPFPM_HOST=\"127.0.0.1\" \\\n    PHPFPM_PORT=\"9000\" \\\n    DOCUMENT_ROOT=\"${WORKDIR}/public\" \\\n    COMPRESS_FILE_MATCH=\"^.*\\.(css|js|xml|csv|txt|md|html)\\$\" \\\n    COMPRESS_FILE_PATHS=\"public\"\n#   NODEJS\nENV ENABLE_NODEJS=\"true\" \\\n    NODEJS_VERSION=\"8\" \\\n    ENABLE_BOWER=\"true\" \\\n    NPM=\"npm\" \\\n    NPM_BUILD_PACKAGES=\"\" \\\n    NPM_ARGS=\"\"\n#   PHP\nENV PHP=\"php\" \\\n    FPM=\"php-fpm\" \\\n    NEWRELIC_PHP_VERSION=\"php5-8.0.0.204\" \\\n    PHP_EXTENSIONS_STARTUP_ONLY=\"xdebug APCu imagick redis\" \\\n    PHP_EXTENSIONS_STARTUP_ENABLE=\"\" \\\n    PHP_EXTENSIONS=\"bcmath bz2 gd gmp intl json mbstring opcache dom curl pgsql pdo_pgsql pdo_mysql ldap soap zip xdebug-2.6.1 imagick-3.4.3 redis-3.1.6 APCu\" \\\n    PHP_BUILD_PACKAGES=\"re2c libmagickwand-6.q16-dev libbz2-dev libldap2-dev libgmp-dev libicu-dev libpq-dev libpq-dev libreadline6-dev libedit-dev libxml2-dev libcurl4-openssl-dev zlib1g-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev\" \\\n    SYSTEM_PACKAGES=\"${SYSTEM_PACKAGES} libldap-2.4-2 libpng16-16 libicu57 libjpeg62-turbo libfreetype6 libmagickwand-6.q16-3 libmagickcore-6.q16-3\" \\\n    PHP_INI_DIR=\"/usr/local/etc/php\" \\\n    PHP_INI_ALLOW_URL_FOPEN=\"Off\" \\\n    PHP_INI_DATE_TIMEZONE=\"UTC\" \\\n    PHP_INI_INCLUDE_PATH=\".:${WORKDIR}:/usr/local/lib/php\" \\\n    PHP_INI_MAX_EXECUTION_TIME=\"600\" \\\n    PHP_INI_MAX_INPUT_TIME=\"60\" \\\n    PHP_INI_MAX_INPUT_VARS=\"1000\" \\\n    PHP_INI_MEMORY_LIMIT=\"256M\" \\\n    PHP_INI_ERROR_LOG=\"php://stderr\" \\\n    PHP_INI_POST_MAX_SIZE=\"256M\" \\\n    PHP_INI_APC_ENABLED=\"0\" \\\n    PHP_INI_APC_SHM_SIZE=\"50M\" \\\n    PHP_INI_OPCACHE_ENABLE=\"0\" \\\n    PHP_INI_OPCACHE_ENABLE_CLI=\"0\" \\\n    PHP_INI_OPCACHE_MEMORY_CONSUMPTION=\"1024M\" \\\n    PHP_INI_OPCACHE_OPTIMIZATION_LEVEL=\"-1\" \\\n    PHP_INI_OPCACHE_VALIDATE_TIMESTAMPS=\"1\" \\\n    PHP_INI_FILE_UPLOADS=\"On\" \\\n    PHP_INI_UPLOAD_MAX_FILESIZE=\"64M\" \\\n    PHP_INI_MAX_FILE_UPLOADS=\"100\" \\\n    PHP_INI_SHORT_OPEN_TAG=\"False\" \\\n    PHP_INI_NEWRELIC_APPNAME=\"myapp\" \\\n    PHP_INI_NEWRELIC_FRAMEWORK=\"symfony2\" \\\n    PHP_INI_NEWRELIC_LICENSE=\"xxx\" \\\n    BLACKFIRE_AGENT=\"blackfire:8707\" \\\n    CONSOLE=\"exec_console\" \\\n    CODECEPT=\"${WORKDIR}/vendor/bin/codecept\" \\\n    CODECEPTION_ARGS=\"\" \\\n    COMPOSER_VERSION=\"1.6.5\" \\\n    COMPOSER_ARGS=\"--no-dev\" \\\n    COMPOSER_DUMP_ARGS=\"--optimize --classmap-authoritative --no-dev --apcu\"\n#   SMTP\n#   https://symfony.com/doc/current/reference/configuration/swiftmailer.html\nENV ENABLE_SMTP=\"false\" \\\n    SMTP_ENCRYPTION=\"\" \\\n    SMTP_AUTH_METHOD=\"plain\" \\\n    SMTP_HOST=\"smtp\" \\\n    SMTP_USERNAME=\"\" \\\n    SMTP_PASSWORD=\"\" \\\n    SMTP_PORT=\"25\" \\\n    SMTP_TIMEOUT=\"10\"\nCOPY docker/*.sh ${WORKDIR}/docker/\nCOPY docker/build.d/base ${WORKDIR}/docker/build.d/base\nCOPY docker/shared_steps ${WORKDIR}/docker/shared_steps\nRUN mkdir -p ${WORKDIR}/logs /run/php ; ln -s ${WORKDIR}/docker/entrypoint.sh /entrypoint.sh\nARG RUN_BUILD_BASE=\"true\"\nRUN if [ \"${RUN_BUILD_BASE}\" = \"true\" ] ; then /entrypoint.sh build base || exit ${ERROR_EXIT_CODE} ; fi\nCOPY . ${WORKDIR}/\nCOPY docker/etc /etc\nCOPY docker/usr /usr\nCOPY docker ${WORKDIR}/docker\n#   Clear ENV\n#   This makes it easier to reuse e.g. the install_system_packages.sh step in `deps`\n#   and provide an easy way to our customers to install additional system packages\nENV SYSTEM_PACKAGES=\"\" \\\n    PHP_EXTENSIONS=\"\"\n#   80 => nginx\n#   9000 => php-fpm\nEXPOSE 80/tcp 9000/tcp\nWORKDIR ${WORKDIR}\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"help\"]\n#   provide some onbuild generic things\nONBUILD ARG GITLAB_SERVER_NAME\nONBUILD ARG GITLAB_USER=gitlab-ci-token\nONBUILD ARG GITLAB_TOKEN\nONBUILD ARG ENABLE_CLEANUP=true\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ${FROM_IMAGE}\n#  see http://label-schema.org/rc1/\nLABEL org.label-schema.name=\"php\" \\\n      org.label-schema.version=\"0.1\" \\\n      org.label-schema.description=\"Core PHP image\" \\\n      org.label-schema.vendor=\"Claranet GmbH\" \\\n      org.label-schema.schema-version=\"1.1.18\" \\\n      author1=\"Fabian Dörk <fabian.doerk@de.clara.net>\" \\\n      author2=\"Tony Fahrion <tony.fahrion@de.clara.net>\"\n#  GENERAL\nARG ERROR_EXIT_CODE=1\nARG ENABLE_CLEANUP=true\nENV WORKDIR=\"/app\" \\\n    BUILD_LOG=\"/app/logs/build.log\" \\\n    ENABLE_PATCHES=\"true\"\n#  GCP\nARG ENABLE_GCP\nENV ENABLE_GCP=\"${ENABLE_GCP:-0}\" \\\n    GOOGLE_ASSET_BUCKET_ENABLED=\"false\" \\\n    ASSET_BUCKET_NAME=\"to-be-defined\" \\\n    ASSET_VERSION=\"${ASSET_VERSION:-e.g.-commit-sha1}\"\n#  OS\n#  libtcmalloc: to increase php-fpm and nginx performance\n#  busybox-static: provides crond, the normal package does not!\n#  ssmtp: synchronouse mailer, very handy in CLI scripts on docker\nENV PATH=\"${PATH}:${WORKDIR}/docker/bin\" \\\n    BUILD_PACKAGES=\"ccache build-essential unzip\" \\\n    SYSTEM_PACKAGES=\"ssmtp busybox-static netcat vim less tree libtcmalloc-minimal4 git postgresql-client gettext nginx\" \\\n    JESSIE_PACKAGE_MAP=\"libpng16-16:libpng12-0 libicu57:libicu52 libmagickwand-6.q16-3:libmagickwand-6.q16-2 libmagickcore-6.q16-3:libmagickcore-6.q16-2 npm:\" \\\n    ENABLE_NEWRELIC=\"false\"\n#  NGINX\nENV NGINX_SITES_AVAILABLE=\"/etc/nginx/sites-available\" \\\n    NGINX_SITES_ENABLED=\"/etc/nginx/sites-enabled\" \\\n    DISABLE_NGINX_DAEMON=\"false\" \\\n    PHPFPM_HOST=\"127.0.0.1\" \\\n    PHPFPM_PORT=\"9000\" \\\n    DOCUMENT_ROOT=\"${WORKDIR}/public\" \\\n    COMPRESS_FILE_MATCH=\"^.*\\.(css|js|xml|csv|txt|md|html)\\$\" \\\n    COMPRESS_FILE_PATHS=\"public\"\n#  NODEJS\nENV ENABLE_NODEJS=\"true\" \\\n    NODEJS_VERSION=\"8\" \\\n    ENABLE_BOWER=\"true\" \\\n    NPM=\"npm\" \\\n    NPM_BUILD_PACKAGES=\"\" \\\n    NPM_ARGS=\"\"\n#  PHP\nENV PHP=\"php\" \\\n    FPM=\"php-fpm\" \\\n    NEWRELIC_PHP_VERSION=\"php5-8.0.0.204\" \\\n    PHP_EXTENSIONS_STARTUP_ONLY=\"xdebug APCu imagick redis\" \\\n    PHP_EXTENSIONS_STARTUP_ENABLE=\"\" \\\n    PHP_EXTENSIONS=\"bcmath bz2 gd gmp intl json mbstring opcache dom curl pgsql pdo_pgsql pdo_mysql ldap soap zip xdebug-2.6.1 imagick-3.4.3 redis-3.1.6 APCu\" \\\n    PHP_BUILD_PACKAGES=\"re2c libmagickwand-6.q16-dev libbz2-dev libldap2-dev libgmp-dev libicu-dev libpq-dev libpq-dev libreadline6-dev libedit-dev libxml2-dev libcurl4-openssl-dev zlib1g-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev\" \\\n    SYSTEM_PACKAGES=\"${SYSTEM_PACKAGES} libldap-2.4-2 libpng16-16 libicu57 libjpeg62-turbo libfreetype6 libmagickwand-6.q16-3 libmagickcore-6.q16-3\" \\\n    PHP_INI_DIR=\"/usr/local/etc/php\" \\\n    PHP_INI_ALLOW_URL_FOPEN=\"Off\" \\\n    PHP_INI_DATE_TIMEZONE=\"UTC\" \\\n    PHP_INI_INCLUDE_PATH=\".:${WORKDIR}:/usr/local/lib/php\" \\\n    PHP_INI_MAX_EXECUTION_TIME=\"600\" \\\n    PHP_INI_MAX_INPUT_TIME=\"60\" \\\n    PHP_INI_MAX_INPUT_VARS=\"1000\" \\\n    PHP_INI_MEMORY_LIMIT=\"256M\" \\\n    PHP_INI_ERROR_LOG=\"php://stderr\" \\\n    PHP_INI_POST_MAX_SIZE=\"256M\" \\\n    PHP_INI_APC_ENABLED=\"0\" \\\n    PHP_INI_APC_SHM_SIZE=\"50M\" \\\n    PHP_INI_OPCACHE_ENABLE=\"0\" \\\n    PHP_INI_OPCACHE_ENABLE_CLI=\"0\" \\\n    PHP_INI_OPCACHE_MEMORY_CONSUMPTION=\"1024M\" \\\n    PHP_INI_OPCACHE_OPTIMIZATION_LEVEL=\"-1\" \\\n    PHP_INI_OPCACHE_VALIDATE_TIMESTAMPS=\"1\" \\\n    PHP_INI_FILE_UPLOADS=\"On\" \\\n    PHP_INI_UPLOAD_MAX_FILESIZE=\"64M\" \\\n    PHP_INI_MAX_FILE_UPLOADS=\"100\" \\\n    PHP_INI_SHORT_OPEN_TAG=\"False\" \\\n    PHP_INI_NEWRELIC_APPNAME=\"myapp\" \\\n    PHP_INI_NEWRELIC_FRAMEWORK=\"symfony2\" \\\n    PHP_INI_NEWRELIC_LICENSE=\"xxx\" \\\n    BLACKFIRE_AGENT=\"blackfire:8707\" \\\n    CONSOLE=\"exec_console\" \\\n    CODECEPT=\"${WORKDIR}/vendor/bin/codecept\" \\\n    CODECEPTION_ARGS=\"\" \\\n    COMPOSER_VERSION=\"1.6.5\" \\\n    COMPOSER_ARGS=\"--no-dev\" \\\n    COMPOSER_DUMP_ARGS=\"--optimize --classmap-authoritative --no-dev --apcu\"\n#  SMTP\n#  https://symfony.com/doc/current/reference/configuration/swiftmailer.html\nENV ENABLE_SMTP=\"false\" \\\n    SMTP_ENCRYPTION=\"\" \\\n    SMTP_AUTH_METHOD=\"plain\" \\\n    SMTP_HOST=\"smtp\" \\\n    SMTP_USERNAME=\"\" \\\n    SMTP_PASSWORD=\"\" \\\n    SMTP_PORT=\"25\" \\\n    SMTP_TIMEOUT=\"10\"\nCOPY docker/*.sh ${WORKDIR}/docker/\nCOPY docker/build.d/base ${WORKDIR}/docker/build.d/base\nCOPY docker/shared_steps ${WORKDIR}/docker/shared_steps\nRUN mkdir -p ${WORKDIR}/logs /run/php ; ln -s ${WORKDIR}/docker/entrypoint.sh /entrypoint.sh\nARG RUN_BUILD_BASE=\"true\"\nRUN if [ \"${RUN_BUILD_BASE}\" = \"true\" ] ; then /entrypoint.sh build base || exit ${ERROR_EXIT_CODE} ; fi\nCOPY . ${WORKDIR}/\nCOPY docker/etc /etc\nCOPY docker/usr /usr\nCOPY docker ${WORKDIR}/docker\n#  Clear ENV\n#  This makes it easier to reuse e.g. the install_system_packages.sh step in `deps`\n#  and provide an easy way to our customers to install additional system packages\nENV SYSTEM_PACKAGES=\"\" \\\n    PHP_EXTENSIONS=\"\"\n#  80 => nginx\n#  9000 => php-fpm\nEXPOSE 80/tcp 9000/tcp\nWORKDIR ${WORKDIR}\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"help\"]\n#  provide some onbuild generic things\nONBUILD ARG GITLAB_SERVER_NAME\nONBUILD ARG GITLAB_USER=gitlab-ci-token\nONBUILD ARG GITLAB_TOKEN\nONBUILD ARG ENABLE_CLEANUP=true\n","injectedSmells":[],"originalDockerfileHash":"210856901a66ce848f25fd8d75855611","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ${FROM_IMAGE}\n#   see http://label-schema.org/rc1/\nLABEL org.label-schema.name=\"php\" \\\n      org.label-schema.version=\"0.1\" \\\n      org.label-schema.description=\"Core PHP image\" \\\n      org.label-schema.vendor=\"Claranet GmbH\" \\\n      org.label-schema.schema-version=\"1.1.18\" \\\n      author1=\"Fabian Dörk <fabian.doerk@de.clara.net>\" \\\n      author2=\"Tony Fahrion <tony.fahrion@de.clara.net>\"\n#   GENERAL\nARG ERROR_EXIT_CODE=1\nARG ENABLE_CLEANUP=true\nENV WORKDIR=\"/app\" \\\n    BUILD_LOG=\"/app/logs/build.log\" \\\n    ENABLE_PATCHES=\"true\"\n#   GCP\nARG ENABLE_GCP\nENV ENABLE_GCP=\"${ENABLE_GCP:-0}\" \\\n    GOOGLE_ASSET_BUCKET_ENABLED=\"false\" \\\n    ASSET_BUCKET_NAME=\"to-be-defined\" \\\n    ASSET_VERSION=\"${ASSET_VERSION:-e.g.-commit-sha1}\"\n#   OS\n#   libtcmalloc: to increase php-fpm and nginx performance\n#   busybox-static: provides crond, the normal package does not!\n#   ssmtp: synchronouse mailer, very handy in CLI scripts on docker\nENV PATH=\"${PATH}:${WORKDIR}/docker/bin\" \\\n    BUILD_PACKAGES=\"ccache build-essential unzip\" \\\n    SYSTEM_PACKAGES=\"ssmtp busybox-static netcat vim less tree libtcmalloc-minimal4 git postgresql-client gettext nginx\" \\\n    JESSIE_PACKAGE_MAP=\"libpng16-16:libpng12-0 libicu57:libicu52 libmagickwand-6.q16-3:libmagickwand-6.q16-2 libmagickcore-6.q16-3:libmagickcore-6.q16-2 npm:\" \\\n    ENABLE_NEWRELIC=\"false\"\n#   NGINX\nENV NGINX_SITES_AVAILABLE=\"/etc/nginx/sites-available\" \\\n    NGINX_SITES_ENABLED=\"/etc/nginx/sites-enabled\" \\\n    DISABLE_NGINX_DAEMON=\"false\" \\\n    PHPFPM_HOST=\"127.0.0.1\" \\\n    PHPFPM_PORT=\"9000\" \\\n    DOCUMENT_ROOT=\"${WORKDIR}/public\" \\\n    COMPRESS_FILE_MATCH=\"^.*\\.(css|js|xml|csv|txt|md|html)\\$\" \\\n    COMPRESS_FILE_PATHS=\"public\"\n#   NODEJS\nENV ENABLE_NODEJS=\"true\" \\\n    NODEJS_VERSION=\"8\" \\\n    ENABLE_BOWER=\"true\" \\\n    NPM=\"npm\" \\\n    NPM_BUILD_PACKAGES=\"\" \\\n    NPM_ARGS=\"\"\n#   PHP\nENV PHP=\"php\" \\\n    FPM=\"php-fpm\" \\\n    NEWRELIC_PHP_VERSION=\"php5-8.0.0.204\" \\\n    PHP_EXTENSIONS_STARTUP_ONLY=\"xdebug APCu imagick redis\" \\\n    PHP_EXTENSIONS_STARTUP_ENABLE=\"\" \\\n    PHP_EXTENSIONS=\"bcmath bz2 gd gmp intl json mbstring opcache dom curl pgsql pdo_pgsql pdo_mysql ldap soap zip xdebug-2.6.1 imagick-3.4.3 redis-3.1.6 APCu\" \\\n    PHP_BUILD_PACKAGES=\"re2c libmagickwand-6.q16-dev libbz2-dev libldap2-dev libgmp-dev libicu-dev libpq-dev libpq-dev libreadline6-dev libedit-dev libxml2-dev libcurl4-openssl-dev zlib1g-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev\" \\\n    SYSTEM_PACKAGES=\"${SYSTEM_PACKAGES} libldap-2.4-2 libpng16-16 libicu57 libjpeg62-turbo libfreetype6 libmagickwand-6.q16-3 libmagickcore-6.q16-3\" \\\n    PHP_INI_DIR=\"/usr/local/etc/php\" \\\n    PHP_INI_ALLOW_URL_FOPEN=\"Off\" \\\n    PHP_INI_DATE_TIMEZONE=\"UTC\" \\\n    PHP_INI_INCLUDE_PATH=\".:${WORKDIR}:/usr/local/lib/php\" \\\n    PHP_INI_MAX_EXECUTION_TIME=\"600\" \\\n    PHP_INI_MAX_INPUT_TIME=\"60\" \\\n    PHP_INI_MAX_INPUT_VARS=\"1000\" \\\n    PHP_INI_MEMORY_LIMIT=\"256M\" \\\n    PHP_INI_ERROR_LOG=\"php://stderr\" \\\n    PHP_INI_POST_MAX_SIZE=\"256M\" \\\n    PHP_INI_APC_ENABLED=\"0\" \\\n    PHP_INI_APC_SHM_SIZE=\"50M\" \\\n    PHP_INI_OPCACHE_ENABLE=\"0\" \\\n    PHP_INI_OPCACHE_ENABLE_CLI=\"0\" \\\n    PHP_INI_OPCACHE_MEMORY_CONSUMPTION=\"1024M\" \\\n    PHP_INI_OPCACHE_OPTIMIZATION_LEVEL=\"-1\" \\\n    PHP_INI_OPCACHE_VALIDATE_TIMESTAMPS=\"1\" \\\n    PHP_INI_FILE_UPLOADS=\"On\" \\\n    PHP_INI_UPLOAD_MAX_FILESIZE=\"64M\" \\\n    PHP_INI_MAX_FILE_UPLOADS=\"100\" \\\n    PHP_INI_SHORT_OPEN_TAG=\"False\" \\\n    PHP_INI_NEWRELIC_APPNAME=\"myapp\" \\\n    PHP_INI_NEWRELIC_FRAMEWORK=\"symfony2\" \\\n    PHP_INI_NEWRELIC_LICENSE=\"xxx\" \\\n    BLACKFIRE_AGENT=\"blackfire:8707\" \\\n    CONSOLE=\"exec_console\" \\\n    CODECEPT=\"${WORKDIR}/vendor/bin/codecept\" \\\n    CODECEPTION_ARGS=\"\" \\\n    COMPOSER_VERSION=\"1.6.5\" \\\n    COMPOSER_ARGS=\"--no-dev\" \\\n    COMPOSER_DUMP_ARGS=\"--optimize --classmap-authoritative --no-dev --apcu\"\n#   SMTP\n#   https://symfony.com/doc/current/reference/configuration/swiftmailer.html\nENV ENABLE_SMTP=\"false\" \\\n    SMTP_ENCRYPTION=\"\" \\\n    SMTP_AUTH_METHOD=\"plain\" \\\n    SMTP_HOST=\"smtp\" \\\n    SMTP_USERNAME=\"\" \\\n    SMTP_PASSWORD=\"\" \\\n    SMTP_PORT=\"25\" \\\n    SMTP_TIMEOUT=\"10\"\nCOPY docker/*.sh ${WORKDIR}/docker/\nCOPY docker/build.d/base ${WORKDIR}/docker/build.d/base\nCOPY docker/shared_steps ${WORKDIR}/docker/shared_steps\nRUN mkdir -p ${WORKDIR}/logs /run/php ; ln -s ${WORKDIR}/docker/entrypoint.sh /entrypoint.sh\nARG RUN_BUILD_BASE=\"true\"\nRUN if [ \"${RUN_BUILD_BASE}\" = \"true\" ] ; then /entrypoint.sh build base || exit ${ERROR_EXIT_CODE} ; fi\nCOPY . ${WORKDIR}/\nCOPY docker/etc /etc\nCOPY docker/usr /usr\nCOPY docker ${WORKDIR}/docker\n#   Clear ENV\n#   This makes it easier to reuse e.g. the install_system_packages.sh step in `deps`\n#   and provide an easy way to our customers to install additional system packages\nENV SYSTEM_PACKAGES=\"\" \\\n    PHP_EXTENSIONS=\"\"\n#   80 => nginx\n#   9000 => php-fpm\nEXPOSE 80/tcp 9000/tcp\nWORKDIR ${WORKDIR}\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"help\"]\n#   provide some onbuild generic things\nONBUILD ARG GITLAB_SERVER_NAME\nONBUILD ARG GITLAB_USER=gitlab-ci-token\nONBUILD ARG GITLAB_TOKEN\nONBUILD ARG ENABLE_CLEANUP=true\n","originalDockerfileUglifiedHash":"1baa6c2a39fd567537522d94705f420a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/54a1d483962c826d265be37a7a55ac1a0fa13158.dockerfile"}