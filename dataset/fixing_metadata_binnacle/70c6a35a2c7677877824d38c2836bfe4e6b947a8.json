{"seed":2469493362,"processedDockerfileHash":"c3986cd7bca286a437e5c46983158fe6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#  ###########################################################\n#   Dockerfile to build Pwntools container\n#   Based on Ubuntu\n#  ###########################################################\nFROM pwntools/pwntools:stable\nMAINTAINER Maintainer Gallopsled et al.\nUSER root\nRUN :\n#   Use UTF-8\nRUN (apt-get update ;apt-get install --no-install-recommends locales=2.31-13+deb11u5 -y )\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   Dependencies from .travis.yml addons -> apt -> packages\nRUN (apt-get update ;apt-get install --no-install-recommends ash=0.5.11+git20200708+dd9ef66-5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends bash=5.1-2+deb11u1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends dash=0.5.11+git20200708+dd9ef66-5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gcc-multilib=4:10.2.1-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gcc-arm-linux-gnueabi=4:10.2.1-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gcc-aarch64-linux-gnu=4:10.2.1-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gcc-mips-linux-gnu=4:10.2.0-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gcc-powerpc-linux-gnu=4:10.2.1-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gcc=4:10.2.1-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gdb=10.1-1.7 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends ksh=2020.0.0+really93u+20120801-9 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends lib32stdc++6=10.2.1-6 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libc6-dev-i386=2.31-13+deb11u5 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends mksh=59c-9+b2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends pandoc=2.9.2.1-1+b1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends zsh=5.8-6+deb11u1 -y )\n#   Dependencies from travis/install.sh\nRUN (apt-get update ;apt-get install --no-install-recommends binutils=2.35.2-2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends qemu-user-static=1:5.2+dfsg-11+deb11u2 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends binutils-* -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libcapstone3 -y )\n#   Required for various other things\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.74.0-1.3+deb11u7 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.21-1+deb11u1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends unzip=6.0-26+deb11u1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-8-jre-headless -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libxml2-dev=2.9.10+dfsg-6.7+deb11u3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libxslt1-dev=1.1.34-4+deb11u1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends ssh=1:8.4p1-5+deb11u1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends lsb-release=11.1.0 -y )\n#  ==============================================================================\n#                                 ANDROID EMULATOR\n#  ==============================================================================\n#   Android emulator from travis/install.sh\nWORKDIR /usr/local\nRUN wget -nv https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz ; tar xf android-sdk_r24.4.1-linux.tgz ; rm -f android-sdk_r24.4.1-linux.tgz\nRUN ln -s android-sdk-linux android-sdk\nENV PATH=\"/usr/local/android-sdk/tools:$PATH\"\nENV PATH=\"/usr/local/android-sdk/platform-tools:$PATH\"\nRUN wget -nv https://dl.google.com/android/repository/android-ndk-r13b-linux-x86_64.zip ; unzip android-ndk-r13b-linux-x86_64.zip ; rm -f android-ndk-r13b-linux-x86_64.zip\nRUN ln -s android-ndk-r13b android-ndk\n#   Ensure that all executables can be run by other users e.g. travis\nRUN find android-sdk/ -perm 744 -type f -executable | xargs chmod +x\nENV NDK=\"/usr/local/android-ndk\"\nENV PATH=\"$NDK:$PATH\"\nRUN echo y | android update sdk --no-ui --all --filter platform-tools,extra-android-support\nRUN echo y | android update sdk --no-ui --all --filter android-21\nRUN echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21\n#   Upgrade pip\nRUN pip install pip==23.1 --upgrade\n#  ==============================================================================\n#                            PWNTOOLS TEST REQUIREMENTS\n#  ==============================================================================\n#   Install pwntools from 'dev', to get all of the latest dependencies\n#   Then uninstall pwntools so we have a clean slate, but still have\n#   all of its dependencies installed.\nWORKDIR /root\nRUN git clone https://github.com/Gallopsled/pwntools\nWORKDIR /root/pwntools\nRUN pip install --upgrade --editable .\nRUN pip install --upgrade --requirement docs/requirements.txt\nRUN pip uninstall --yes pwntools\nWORKDIR /root\nRUN rm -rf pwntools\n#  ==============================================================================\n#                             PWNTOOLS SSH TEST SETUP\n#  ==============================================================================\n#   Start the container as travis\nRUN useradd -m travis\nRUN echo \"travis ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers.d/travis\n#   Set up SSH stuff so we can SSH into localhost\nUSER travis\nWORKDIR /home/travis\nRUN ssh-keygen -t rsa -f ~/.ssh/travis -N ''\nRUN echo 'from=\"127.0.0.1\"' $( cat .ssh/travis.pub ;) > .ssh/authorized_keys\nRUN echo Host \"example.pwnme\\n User travis\\n HostName 127.0.0.1\\n IdentityFile ~/.ssh/travis\\n\" > ~/.ssh/config\n#  ==============================================================================\n#                              ANDROID EMULATOR SETUP\n#  ==============================================================================\nRUN echo no | android --silent create avd --name android-armeabi-v7a --target android-21 --force --snapshot --abi armeabi-v7a\nRUN emulator64-arm -avd android-armeabi-v7a -no-window -no-boot-anim -no-skin -no-audio -no-window -no-snapshot &; adb wait-for-device ; adb shell id ; adb shell getprop ; adb emu kill\n#   Final touchup\nUSER root\nRUN (apt-get update ;apt-get install --no-install-recommends strace=5.10-1 nano=5.4-2+deb11u2 vim=2:8.2.2434-3+deb11u1 tmux=3.1c-1+deb11u1 -y )\n#   Entry point\nUSER travis\nRUN mkdir /home/travis/pwntools\nWORKDIR /home/travis/pwntools\nCOPY run.sh .\nCOPY pwntools.tar.gz .\nRUN tar xf pwntools.tar.gz\nRUN sudo rm -f pwntools.tar.gz\nRUN sudo pip install -U -e .\nENTRYPOINT bash run.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###########################################################\n#  Dockerfile to build Pwntools container\n#  Based on Ubuntu\n# ###########################################################\nFROM pwntools/pwntools:stable\nMAINTAINER Maintainer Gallopsled et al.\nUSER root\nRUN apt-get update\n#  Use UTF-8\nRUN apt-get install locales -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#  Dependencies from .travis.yml addons -> apt -> packages\nRUN apt-get install ash -y\nRUN apt-get install bash -y\nRUN apt-get install dash -y\nRUN apt-get install gcc-multilib -y\nRUN apt-get install gcc-arm-linux-gnueabi -y\nRUN apt-get install gcc-aarch64-linux-gnu -y\nRUN apt-get install gcc-mips-linux-gnu -y\nRUN apt-get install gcc-powerpc-linux-gnu -y\nRUN apt-get install gcc -y\nRUN apt-get install gdb -y\nRUN apt-get install ksh -y\nRUN apt-get install lib32stdc++6 -y\nRUN apt-get install libc6-dev-i386 -y\nRUN apt-get install mksh -y\nRUN apt-get install pandoc -y\nRUN apt-get install zsh -y\n#  Dependencies from travis/install.sh\nRUN apt-get install binutils -y\nRUN apt-get install qemu-user-static -y\nRUN apt-get install binutils-* -y\nRUN apt-get install libcapstone3 -y\n#  Required for various other things\nRUN apt-get install curl -y\nRUN apt-get install wget -y\nRUN apt-get install unzip -y\nRUN apt-get install openjdk-8-jre-headless -y\nRUN apt-get install libxml2-dev -y\nRUN apt-get install libxslt1-dev -y\nRUN apt-get install ssh -y\nRUN apt-get install lsb-release -y\n# ==============================================================================\n#                                ANDROID EMULATOR\n# ==============================================================================\n#  Android emulator from travis/install.sh\nWORKDIR /usr/local\nRUN wget -nv https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz ; tar xf android-sdk_r24.4.1-linux.tgz ; rm -f android-sdk_r24.4.1-linux.tgz\nRUN ln -s android-sdk-linux android-sdk\nENV PATH=\"/usr/local/android-sdk/tools:$PATH\"\nENV PATH=\"/usr/local/android-sdk/platform-tools:$PATH\"\nRUN wget -nv https://dl.google.com/android/repository/android-ndk-r13b-linux-x86_64.zip ; unzip android-ndk-r13b-linux-x86_64.zip ; rm -f android-ndk-r13b-linux-x86_64.zip\nRUN ln -s android-ndk-r13b android-ndk\n#  Ensure that all executables can be run by other users e.g. travis\nRUN find android-sdk/ -perm 744 -type f -executable | xargs chmod +x\nENV NDK=\"/usr/local/android-ndk\"\nENV PATH=\"$NDK:$PATH\"\nRUN echo y | android update sdk --no-ui --all --filter platform-tools,extra-android-support\nRUN echo y | android update sdk --no-ui --all --filter android-21\nRUN echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21\n#  Upgrade pip\nRUN pip install pip --upgrade\n# ==============================================================================\n#                           PWNTOOLS TEST REQUIREMENTS\n# ==============================================================================\n#  Install pwntools from 'dev', to get all of the latest dependencies\n#  Then uninstall pwntools so we have a clean slate, but still have\n#  all of its dependencies installed.\nWORKDIR /root\nRUN git clone https://github.com/Gallopsled/pwntools\nWORKDIR /root/pwntools\nRUN pip install --upgrade --editable .\nRUN pip install --upgrade --requirement docs/requirements.txt\nRUN pip uninstall --yes pwntools\nWORKDIR /root\nRUN rm -rf pwntools\n# ==============================================================================\n#                            PWNTOOLS SSH TEST SETUP\n# ==============================================================================\n#  Start the container as travis\nRUN useradd -m travis\nRUN echo \"travis ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers.d/travis\n#  Set up SSH stuff so we can SSH into localhost\nUSER travis\nWORKDIR /home/travis\nRUN ssh-keygen -t rsa -f ~/.ssh/travis -N ''\nRUN echo 'from=\"127.0.0.1\"' $( cat .ssh/travis.pub ;) > .ssh/authorized_keys\nRUN echo Host \"example.pwnme\\n User travis\\n HostName 127.0.0.1\\n IdentityFile ~/.ssh/travis\\n\" > ~/.ssh/config\n# ==============================================================================\n#                             ANDROID EMULATOR SETUP\n# ==============================================================================\nRUN echo no | android --silent create avd --name android-armeabi-v7a --target android-21 --force --snapshot --abi armeabi-v7a\nRUN emulator64-arm -avd android-armeabi-v7a -no-window -no-boot-anim -no-skin -no-audio -no-window -no-snapshot &; adb wait-for-device ; adb shell id ; adb shell getprop ; adb emu kill\n#  Final touchup\nUSER root\nRUN apt-get install strace nano vim tmux -y\n#  Entry point\nUSER travis\nRUN mkdir /home/travis/pwntools\nWORKDIR /home/travis/pwntools\nADD run.sh .\nCOPY pwntools.tar.gz .\nRUN tar xf pwntools.tar.gz\nRUN sudo rm -f pwntools.tar.gz\nRUN sudo pip install -U -e .\nENTRYPOINT bash run.sh\n","injectedSmells":[],"originalDockerfileHash":"16c5cf689d3d9fe330a1963693317a72","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###########################################################\n#   Dockerfile to build Pwntools container\n#   Based on Ubuntu\n#  ###########################################################\nFROM pwntools/pwntools:stable\nMAINTAINER Maintainer Gallopsled et al.\nUSER root\nRUN apt-get update\n#   Use UTF-8\nRUN apt-get install locales -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   Dependencies from .travis.yml addons -> apt -> packages\nRUN apt-get install ash -y\nRUN apt-get install bash -y\nRUN apt-get install dash -y\nRUN apt-get install gcc-multilib -y\nRUN apt-get install gcc-arm-linux-gnueabi -y\nRUN apt-get install gcc-aarch64-linux-gnu -y\nRUN apt-get install gcc-mips-linux-gnu -y\nRUN apt-get install gcc-powerpc-linux-gnu -y\nRUN apt-get install gcc -y\nRUN apt-get install gdb -y\nRUN apt-get install ksh -y\nRUN apt-get install lib32stdc++6 -y\nRUN apt-get install libc6-dev-i386 -y\nRUN apt-get install mksh -y\nRUN apt-get install pandoc -y\nRUN apt-get install zsh -y\n#   Dependencies from travis/install.sh\nRUN apt-get install binutils -y\nRUN apt-get install qemu-user-static -y\nRUN apt-get install binutils-* -y\nRUN apt-get install libcapstone3 -y\n#   Required for various other things\nRUN apt-get install curl -y\nRUN apt-get install wget -y\nRUN apt-get install unzip -y\nRUN apt-get install openjdk-8-jre-headless -y\nRUN apt-get install libxml2-dev -y\nRUN apt-get install libxslt1-dev -y\nRUN apt-get install ssh -y\nRUN apt-get install lsb-release -y\n#  ==============================================================================\n#                                 ANDROID EMULATOR\n#  ==============================================================================\n#   Android emulator from travis/install.sh\nWORKDIR /usr/local\nRUN wget -nv https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz ; tar xf android-sdk_r24.4.1-linux.tgz ; rm -f android-sdk_r24.4.1-linux.tgz\nRUN ln -s android-sdk-linux android-sdk\nENV PATH=\"/usr/local/android-sdk/tools:$PATH\"\nENV PATH=\"/usr/local/android-sdk/platform-tools:$PATH\"\nRUN wget -nv https://dl.google.com/android/repository/android-ndk-r13b-linux-x86_64.zip ; unzip android-ndk-r13b-linux-x86_64.zip ; rm -f android-ndk-r13b-linux-x86_64.zip\nRUN ln -s android-ndk-r13b android-ndk\n#   Ensure that all executables can be run by other users e.g. travis\nRUN find android-sdk/ -perm 744 -type f -executable | xargs chmod +x\nENV NDK=\"/usr/local/android-ndk\"\nENV PATH=\"$NDK:$PATH\"\nRUN echo y | android update sdk --no-ui --all --filter platform-tools,extra-android-support\nRUN echo y | android update sdk --no-ui --all --filter android-21\nRUN echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21\n#   Upgrade pip\nRUN pip install pip --upgrade\n#  ==============================================================================\n#                            PWNTOOLS TEST REQUIREMENTS\n#  ==============================================================================\n#   Install pwntools from 'dev', to get all of the latest dependencies\n#   Then uninstall pwntools so we have a clean slate, but still have\n#   all of its dependencies installed.\nWORKDIR /root\nRUN git clone https://github.com/Gallopsled/pwntools\nWORKDIR /root/pwntools\nRUN pip install --upgrade --editable .\nRUN pip install --upgrade --requirement docs/requirements.txt\nRUN pip uninstall --yes pwntools\nWORKDIR /root\nRUN rm -rf pwntools\n#  ==============================================================================\n#                             PWNTOOLS SSH TEST SETUP\n#  ==============================================================================\n#   Start the container as travis\nRUN useradd -m travis\nRUN echo \"travis ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers.d/travis\n#   Set up SSH stuff so we can SSH into localhost\nUSER travis\nWORKDIR /home/travis\nRUN ssh-keygen -t rsa -f ~/.ssh/travis -N ''\nRUN echo 'from=\"127.0.0.1\"' $( cat .ssh/travis.pub ;) > .ssh/authorized_keys\nRUN echo Host \"example.pwnme\\n User travis\\n HostName 127.0.0.1\\n IdentityFile ~/.ssh/travis\\n\" > ~/.ssh/config\n#  ==============================================================================\n#                              ANDROID EMULATOR SETUP\n#  ==============================================================================\nRUN echo no | android --silent create avd --name android-armeabi-v7a --target android-21 --force --snapshot --abi armeabi-v7a\nRUN emulator64-arm -avd android-armeabi-v7a -no-window -no-boot-anim -no-skin -no-audio -no-window -no-snapshot &; adb wait-for-device ; adb shell id ; adb shell getprop ; adb emu kill\n#   Final touchup\nUSER root\nRUN apt-get install strace nano vim tmux -y\n#   Entry point\nUSER travis\nRUN mkdir /home/travis/pwntools\nWORKDIR /home/travis/pwntools\nADD run.sh .\nCOPY pwntools.tar.gz .\nRUN tar xf pwntools.tar.gz\nRUN sudo rm -f pwntools.tar.gz\nRUN sudo pip install -U -e .\nENTRYPOINT bash run.sh\n","originalDockerfileUglifiedHash":"48c1f5bf1001a782abd45316ed4b0383","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/70c6a35a2c7677877824d38c2836bfe4e6b947a8.dockerfile"}