{"seed":2874830739,"processedDockerfileHash":"55cab84c0eed74e20c75511e38cf83ec","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  airgeddon Dockerfile\n#  Base image\nFROM parrotsec/parrot:latest\n#  Credits & Data\nLABEL name=\"airgeddon\" \\\n      author=\"v1s1t0r <v1s1t0r.1s.h3r3@gmail.com>\" \\\n      maintainer=\"OscarAkaElvis <oscar.alfonso.diaz@gmail.com>\" \\\n      description=\"This is a multi-use bash script for Linux systems to audit wireless networks.\"\n#  Env vars\nENV AIRGEDDON_URL=\"https://github.com/v1s1t0r1sh3r3/airgeddon.git\"\nENV HASHCAT2_URL=\"https://github.com/v1s1t0r1sh3r3/hashcat2.0.git\"\nENV BETTERCAP162_URL=\"https://github.com/v1s1t0r1sh3r3/bettercap1.6.2.git\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Update system\nRUN :\n#  Set locales\nRUN (apt-get update ;apt-get install --no-install-recommends locales=2.37-0ubuntu2 -y ) \\\n && locale-gen en_US.UTF-8 \\\n && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n && echo 'LANG=\"en_US.UTF-8\"' > /etc/default/locale \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=en_US.UTF-8\n#  Env vars for locales\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#  Install airgeddon essential tools\nRUN (apt-get update ;apt-get install --no-install-recommends gawk=1:5.2.1-2 net-tools=2.10-0.1ubuntu3 wireless-tools=30~pre9-13.1ubuntu4 iw=5.19-1 aircrack-ng=1:1.7-5 xterm=379-1ubuntu1 iproute2=6.1.0-1ubuntu2 -y )\n#  Install airgeddon internal tools\nRUN (apt-get update ;apt-get install --no-install-recommends ethtool=1:6.1-1 pciutils=1:3.9.0-4 usbutils=1:014-1build1 rfkill=2.38.1-4ubuntu1 x11-utils=7.7+5build2 wget=1.21.3-1ubuntu1 ccze=0.2.1-7 x11-xserver-utils=7.7+9build1 -y )\n#  Install update tools\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.88.1-7ubuntu1 git=1:2.39.2-1ubuntu1 -y )\n#  Install airgeddon optional tools\nRUN (apt-get update ;apt-get install --no-install-recommends crunch=3.6-3 hashcat=6.2.6+ds1-1 mdk4=4.2-3ubuntu1 hostapd=2:2.10-12 lighttpd=1.4.67-1ubuntu2 iptables=1.8.7-1ubuntu7 nftables=1.0.6-2 ettercap-text-only=1:0.8.3.1-11 sslstrip isc-dhcp-server=4.4.3-P1-1ubuntu1 dsniff=2.4b1+debian-31 reaver=1.6.5-1 bully=1.4.00-2ubuntu1 pixiewps=1.4.2-5 expect=5.45.4-2build1 hostapd-wpe asleap john=1.8.0-4ubuntu3 -y )\n#  Install needed Ruby gems\nRUN (apt-get update ;apt-get install --no-install-recommends beef-xss bettercap=2.32.0-1ubuntu1 ruby-packetfu=1.1.11-2.1 ruby-colorize=0.8.1-1.1 ruby-net-dns=0.9.1-2 ruby-em-proxy ruby-network-interface -y )\n#  Env var for display\nENV DISPLAY=\":0\"\n#  Create volume dir for external files\nRUN mkdir /io\nVOLUME /io\n#  Set workdir\nWORKDIR /opt/\n#  airgeddon install method 1 (only one method can be used, other must be commented)\n#  Install airgeddon (Docker Hub automated build process)\nRUN mkdir airgeddon\nCOPY . /opt/airgeddon\n#  airgeddon install method 2 (only one method can be used, other must be commented)\n#  Install airgeddon (manual image build)\n#  Uncomment git clone line and one of the ENV vars to select branch (master->latest, dev->beta)\n#  ENV BRANCH=\"master\"\n#  ENV BRANCH=\"dev\"\n#  RUN git clone -b ${BRANCH} ${AIRGEDDON_URL}\n#  Remove auto update\nRUN sed -i 's|AIRGEDDON_AUTO_UPDATE=true|AIRGEDDON_AUTO_UPDATE=false|' airgeddon/.airgeddonrc\n#  Force use of iptables\nRUN sed -i 's|AIRGEDDON_FORCE_IPTABLES=false|AIRGEDDON_FORCE_IPTABLES=true|' airgeddon/.airgeddonrc\n#  Make bash script files executable\nRUN chmod +x airgeddon/*.sh\n#  Downgrade Hashcat\nRUN git clone ${HASHCAT2_URL} \\\n && cp /opt/hashcat2.0/hashcat /usr/bin/ \\\n && chmod +x /usr/bin/hashcat\n#  Downgrade Bettercap\nRUN git clone ${BETTERCAP162_URL} \\\n && dpkg -i /opt/bettercap1.6.2/bettercap_1.6.2-0parrot1_all.deb\n#  Clean packages\nRUN apt-get clean \\\n && apt-get autoclean \\\n && apt-get autoremove -y\n#  Clean files\nRUN rm -rf /opt/airgeddon/imgs > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/.github > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/.editorconfig > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/CONTRIBUTING.md > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/CODE_OF_CONDUCT.md > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/pindb_checksum.txt > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/Dockerfile > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/binaries > /dev/null 2>&1 \\\n && rm -rf /opt/hashcat2.0 > /dev/null 2>&1 \\\n && rm -rf /opt/bettercap1.6.2 > /dev/null 2>&1 \\\n && rm -rf /tmp/* > /dev/null 2>&1 \\\n && rm -rf /var/lib/apt/lists/* > /dev/null 2>&1\n#  Expose BeEF control panel port\nEXPOSE 3000/tcp\n#  Start command (launching airgeddon)\nCMD [\"/bin/bash\", \"-c\", \"/opt/airgeddon/airgeddon.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# airgeddon Dockerfile\n# Base image\nFROM parrotsec/parrot:latest\n# Credits & Data\nLABEL name=\"airgeddon\" \\\n      author=\"v1s1t0r <v1s1t0r.1s.h3r3@gmail.com>\" \\\n      maintainer=\"OscarAkaElvis <oscar.alfonso.diaz@gmail.com>\" \\\n      description=\"This is a multi-use bash script for Linux systems to audit wireless networks.\"\n# Env vars\nENV AIRGEDDON_URL=\"https://github.com/v1s1t0r1sh3r3/airgeddon.git\"\nENV HASHCAT2_URL=\"https://github.com/v1s1t0r1sh3r3/hashcat2.0.git\"\nENV BETTERCAP162_URL=\"https://github.com/v1s1t0r1sh3r3/bettercap1.6.2.git\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# Update system\nRUN apt-get update\n# Set locales\nRUN apt-get -y install locales \\\n && locale-gen en_US.UTF-8 \\\n && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n && echo 'LANG=\"en_US.UTF-8\"' > /etc/default/locale \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=en_US.UTF-8\n# Env vars for locales\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n# Install airgeddon essential tools\nRUN apt-get -y install gawk net-tools wireless-tools iw aircrack-ng xterm iproute2\n# Install airgeddon internal tools\nRUN apt-get -y install ethtool pciutils usbutils rfkill x11-utils wget ccze x11-xserver-utils\n# Install update tools\nRUN apt-get -y install curl git\n# Install airgeddon optional tools\nRUN apt-get -y install crunch hashcat mdk4 hostapd lighttpd iptables nftables ettercap-text-only sslstrip isc-dhcp-server dsniff reaver bully pixiewps expect hostapd-wpe asleap john\n# Install needed Ruby gems\nRUN apt-get -y install beef-xss bettercap ruby-packetfu ruby-colorize ruby-net-dns ruby-em-proxy ruby-network-interface\n# Env var for display\nENV DISPLAY=\":0\"\n# Create volume dir for external files\nRUN mkdir /io\nVOLUME /io\n# Set workdir\nWORKDIR /opt/\n# airgeddon install method 1 (only one method can be used, other must be commented)\n# Install airgeddon (Docker Hub automated build process)\nRUN mkdir airgeddon\nCOPY . /opt/airgeddon\n# airgeddon install method 2 (only one method can be used, other must be commented)\n# Install airgeddon (manual image build)\n# Uncomment git clone line and one of the ENV vars to select branch (master->latest, dev->beta)\n# ENV BRANCH=\"master\"\n# ENV BRANCH=\"dev\"\n# RUN git clone -b ${BRANCH} ${AIRGEDDON_URL}\n# Remove auto update\nRUN sed -i 's|AIRGEDDON_AUTO_UPDATE=true|AIRGEDDON_AUTO_UPDATE=false|' airgeddon/.airgeddonrc\n# Force use of iptables\nRUN sed -i 's|AIRGEDDON_FORCE_IPTABLES=false|AIRGEDDON_FORCE_IPTABLES=true|' airgeddon/.airgeddonrc\n# Make bash script files executable\nRUN chmod +x airgeddon/*.sh\n# Downgrade Hashcat\nRUN git clone ${HASHCAT2_URL} \\\n && cp /opt/hashcat2.0/hashcat /usr/bin/ \\\n && chmod +x /usr/bin/hashcat\n# Downgrade Bettercap\nRUN git clone ${BETTERCAP162_URL} \\\n && dpkg -i /opt/bettercap1.6.2/bettercap_1.6.2-0parrot1_all.deb\n# Clean packages\nRUN apt-get clean \\\n && apt-get autoclean \\\n && apt-get autoremove -y\n# Clean files\nRUN rm -rf /opt/airgeddon/imgs > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/.github > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/.editorconfig > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/CONTRIBUTING.md > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/CODE_OF_CONDUCT.md > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/pindb_checksum.txt > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/Dockerfile > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/binaries > /dev/null 2>&1 \\\n && rm -rf /opt/hashcat2.0 > /dev/null 2>&1 \\\n && rm -rf /opt/bettercap1.6.2 > /dev/null 2>&1 \\\n && rm -rf /tmp/* > /dev/null 2>&1 \\\n && rm -rf /var/lib/apt/lists/* > /dev/null 2>&1\n# Expose BeEF control panel port\nEXPOSE 3000/tcp\n# Start command (launching airgeddon)\nCMD [\"/bin/bash\", \"-c\", \"/opt/airgeddon/airgeddon.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"fb321515967da39d8dc5b362ab5a6f93","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  airgeddon Dockerfile\n#  Base image\nFROM parrotsec/parrot:latest\n#  Credits & Data\nLABEL name=\"airgeddon\" \\\n      author=\"v1s1t0r <v1s1t0r.1s.h3r3@gmail.com>\" \\\n      maintainer=\"OscarAkaElvis <oscar.alfonso.diaz@gmail.com>\" \\\n      description=\"This is a multi-use bash script for Linux systems to audit wireless networks.\"\n#  Env vars\nENV AIRGEDDON_URL=\"https://github.com/v1s1t0r1sh3r3/airgeddon.git\"\nENV HASHCAT2_URL=\"https://github.com/v1s1t0r1sh3r3/hashcat2.0.git\"\nENV BETTERCAP162_URL=\"https://github.com/v1s1t0r1sh3r3/bettercap1.6.2.git\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Update system\nRUN apt-get update\n#  Set locales\nRUN apt-get install locales -y \\\n && locale-gen en_US.UTF-8 \\\n && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n && echo 'LANG=\"en_US.UTF-8\"' > /etc/default/locale \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=en_US.UTF-8\n#  Env vars for locales\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#  Install airgeddon essential tools\nRUN apt-get install gawk net-tools wireless-tools iw aircrack-ng xterm iproute2 -y\n#  Install airgeddon internal tools\nRUN apt-get install ethtool pciutils usbutils rfkill x11-utils wget ccze x11-xserver-utils -y\n#  Install update tools\nRUN apt-get install curl git -y\n#  Install airgeddon optional tools\nRUN apt-get install crunch hashcat mdk4 hostapd lighttpd iptables nftables ettercap-text-only sslstrip isc-dhcp-server dsniff reaver bully pixiewps expect hostapd-wpe asleap john -y\n#  Install needed Ruby gems\nRUN apt-get install beef-xss bettercap ruby-packetfu ruby-colorize ruby-net-dns ruby-em-proxy ruby-network-interface -y\n#  Env var for display\nENV DISPLAY=\":0\"\n#  Create volume dir for external files\nRUN mkdir /io\nVOLUME /io\n#  Set workdir\nWORKDIR /opt/\n#  airgeddon install method 1 (only one method can be used, other must be commented)\n#  Install airgeddon (Docker Hub automated build process)\nRUN mkdir airgeddon\nCOPY . /opt/airgeddon\n#  airgeddon install method 2 (only one method can be used, other must be commented)\n#  Install airgeddon (manual image build)\n#  Uncomment git clone line and one of the ENV vars to select branch (master->latest, dev->beta)\n#  ENV BRANCH=\"master\"\n#  ENV BRANCH=\"dev\"\n#  RUN git clone -b ${BRANCH} ${AIRGEDDON_URL}\n#  Remove auto update\nRUN sed -i 's|AIRGEDDON_AUTO_UPDATE=true|AIRGEDDON_AUTO_UPDATE=false|' airgeddon/.airgeddonrc\n#  Force use of iptables\nRUN sed -i 's|AIRGEDDON_FORCE_IPTABLES=false|AIRGEDDON_FORCE_IPTABLES=true|' airgeddon/.airgeddonrc\n#  Make bash script files executable\nRUN chmod +x airgeddon/*.sh\n#  Downgrade Hashcat\nRUN git clone ${HASHCAT2_URL} \\\n && cp /opt/hashcat2.0/hashcat /usr/bin/ \\\n && chmod +x /usr/bin/hashcat\n#  Downgrade Bettercap\nRUN git clone ${BETTERCAP162_URL} \\\n && dpkg -i /opt/bettercap1.6.2/bettercap_1.6.2-0parrot1_all.deb\n#  Clean packages\nRUN apt-get clean \\\n && apt-get autoclean \\\n && apt-get autoremove -y\n#  Clean files\nRUN rm -rf /opt/airgeddon/imgs > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/.github > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/.editorconfig > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/CONTRIBUTING.md > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/CODE_OF_CONDUCT.md > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/pindb_checksum.txt > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/Dockerfile > /dev/null 2>&1 \\\n && rm -rf /opt/airgeddon/binaries > /dev/null 2>&1 \\\n && rm -rf /opt/hashcat2.0 > /dev/null 2>&1 \\\n && rm -rf /opt/bettercap1.6.2 > /dev/null 2>&1 \\\n && rm -rf /tmp/* > /dev/null 2>&1 \\\n && rm -rf /var/lib/apt/lists/* > /dev/null 2>&1\n#  Expose BeEF control panel port\nEXPOSE 3000/tcp\n#  Start command (launching airgeddon)\nCMD [\"/bin/bash\", \"-c\", \"/opt/airgeddon/airgeddon.sh\"]\n","originalDockerfileUglifiedHash":"331a8fa751433c4dacd19a8b5a3b0d21","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3837ec2513c6ea9901138d691036cc034355af23.dockerfile"}