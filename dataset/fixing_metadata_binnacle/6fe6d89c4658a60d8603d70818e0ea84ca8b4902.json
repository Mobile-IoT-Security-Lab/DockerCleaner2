{"seed":2836911417,"processedDockerfileHash":"d6b261f970c25f8deb47eec02b1beb13","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   DOCKER-VERION:\t1.9.1\n#   DESCRIPTION:\t\tImage with private webpagetest (www.webpagetest.org)\n#   TO_BUILD:\t\tdocker build -rm -t wpt .\n#   TO_RUN:\t\tdocker run -d --publish 80:80 --volume /tmp/wpt/results:/var/www/html/results webpagetest\nFROM centos:centos6\nMAINTAINER Yunkyung Lee <yunkyung@gmail.com>\n#   for httpd, php \nRUN yum install -y httpd\nRUN yum install -y php php-devel php-pear php-mysql php-mbstring php-gd php-imap php-odbc php-xmlrpc php-xml\nRUN yum install -y gd gd-devel php-gd\n#   PHP\nRUN sed -ri 's/zlib.output_compression = Off/zlib.output_compression = On/g' /etc/php.ini\nRUN sed -ri 's/upload_max_filesize = 2M/upload_max_filesize = 10M/g' /etc/php.ini\nRUN sed -ri 's/post_max_size = 8M/post_max_size = 15M/g' /etc/php.ini\nRUN sed -ri 's/memory_limit = 128M/memory_limit = -1/g' /etc/php.ini\n#   System Utilities\n#   ffmpeg for video recording\n#   based on Julien Rottenberg <julien@rottenberg.info>\n#   based on docker image  rottenberg/ffmpeg\n#   From https://trac.ffmpeg.org/wiki/CompilationGuide/Centos\nENV FFMPEG_VERSION=\"2.8\"\nENV MPLAYER_VERSION=\"1.1.1\"\nENV YASM_VERSION=\"1.2.0\"\nENV LAME_VERSION=\"3.99.5\"\nENV FAAC_VERSION=\"1.28\"\nENV XVID_VERSION=\"1.3.3\"\nENV FDKAAC_VERSION=\"0.1.3\"\nENV EXIFTOOL_VERSION=\"9.75\"\n#   from https://github.com/WPO-Foundation/webpagetest base on pmeenan\nENV WPT_VERSION=\"2.18\"\nENV SRC=\"/usr/local\"\nENV LD_LIBRARY_PATH=\"${SRC}/lib\"\nENV PKG_CONFIG_PATH=\"${SRC}/lib/pkgconfig\"\nENV PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:  \"\nRUN bash -c 'set -euo pipefail'\nRUN yum install -y autoconf automake gcc gcc-c++ git libtool make nasm pkgconfig zlib-devel tar curl wget bzip2\n#   yasm\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://www.tortall.net/projects/yasm/releases/yasm-${YASM_VERSION}.tar.gz \\\n && tar xzvf yasm-${YASM_VERSION}.tar.gz \\\n && cd yasm-${YASM_VERSION} \\\n && ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   x264\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \\\n && tar xvf last_x264.tar.bz2 \\\n && cd x264* \\\n && ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" --enable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   libmp3lame\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os http://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz \\\n && tar xzvf lame-${LAME_VERSION}.tar.gz \\\n && cd lame-${LAME_VERSION} \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-shared --enable-nasm \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   faac + http://stackoverflow.com/a/4320377\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os http://downloads.sourceforge.net/faac/faac-${FAAC_VERSION}.tar.gz \\\n && tar xzvf faac-${FAAC_VERSION}.tar.gz \\\n && cd faac-${FAAC_VERSION} \\\n && sed -i '126d' common/mp4v2/mpeg4ip.h \\\n && ./bootstrap \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   xvid\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \\\n && tar xzvf xvidcore-${XVID_VERSION}.tar.gz \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   fdk-aac\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -s https://codeload.github.com/mstorsjo/fdk-aac/tar.gz/v${FDKAAC_VERSION} | tar zxvf - \\\n && cd fdk-aac-${FDKAAC_VERSION} \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   ffmpeg\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && tar xzvf ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && cd ffmpeg-${FFMPEG_VERSION} \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --extra-libs=-ldl --enable-version3 --enable-libfaac --enable-libmp3lame --enable-libx264 --enable-libxvid --enable-gpl --enable-postproc --enable-nonfree --enable-avresample --enable-libfdk_aac --disable-debug --enable-small \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf ${DIR}\n#   mplayer\n#  RUN DIR=$(mktemp -d) && cd ${DIR} && \\\n#                curl -Os http://mplayerhq.hu/MPlayer/releases/MPlayer-${MPLAYER_VERSION}.tar.xz && \\\n#                tar xvf MPlayer-${MPLAYER_VERSION}.tar.xz && \\\n#                cd MPlayer-${MPLAYER_VERSION} && \\\n#                ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" && \\\n#                make && \\\n#                make install && \\\n#                rm -rf ${DIR}\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/libc.conf\n#  # install ImageMagick\nRUN yum install -y ImageMagick ImageMagick-devel ImageMagick-perl\n#  # install Jpegtran \nRUN yum -y install libjpeg-turbo-devel libjpeg-turbo-static libjpeg-turbo\n#  # install exiftool\nRUN yum install -y perl-devel\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://owl.phy.queensu.ca/~phil/exiftool/Image-ExifTool-${EXIFTOOL_VERSION}.tar.gz \\\n && tar xvf Image-ExifTool-${EXIFTOOL_VERSION}.tar.gz \\\n && cd Image-ExifTool-${EXIFTOOL_VERSION} \\\n && perl Makefile.PL \\\n && make install \\\n && cp -r exiftool lib /usr/bin \\\n && rm -rf ${DIR}\n#   Filesystem setting\nRUN mkdir -p /var/www/html/tmp \\\n && chmod 777 /var/www/html/tmp \\\n && mkdir -p /var/www/html/dat \\\n && chmod 777 /var/www/html/dat \\\n && mkdir -p /var/www/html/results \\\n && chmod 777 /var/www/html/results \\\n && mkdir -p /var/www/html/work/jobs \\\n && chmod 777 /var/www/html/work/jobs \\\n && mkdir -p /var/www/html/work/video \\\n && chmod 777 /var/www/html/work/video \\\n && mkdir -p /var/www/html/logs \\\n && chmod 777 /var/www/html/logs\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os https://github.com/WPO-Foundation/webpagetest/archive/WebPageTest-${WPT_VERSION}.tar.gz \\\n && tar xvf WebPageTest-${WPT_VERSION}.tar.gz \\\n && cd webpagetest-WebPageTest-${WPT_VERSION} \\\n && cp -r www/* /var/www/html/\nCOPY locations.ini /var/www/html/settings/\nCOPY connectivity.ini /var/www/html/settings/\nCOPY settings.ini /var/www/html/settings/\n#   test results store volume\nVOLUME [\"/var/www/html/results\"] \nEXPOSE 80/tcp\nCMD [\"/usr/sbin/httpd\", \"-k\", \"start\", \"-D\", \"FOREGROUND\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  DOCKER-VERION:\t1.9.1\n#  DESCRIPTION:\t\tImage with private webpagetest (www.webpagetest.org)\n#  TO_BUILD:\t\tdocker build -rm -t wpt .\n#  TO_RUN:\t\tdocker run -d --publish 80:80 --volume /tmp/wpt/results:/var/www/html/results webpagetest\nFROM centos:centos6\nMAINTAINER Yunkyung Lee <yunkyung@gmail.com>\n#  for httpd, php \nRUN yum install -y httpd\nRUN yum install -y php php-devel php-pear php-mysql php-mbstring php-gd php-imap php-odbc php-xmlrpc php-xml\nRUN yum install -y gd gd-devel php-gd\n#  PHP\nRUN sed -ri 's/zlib.output_compression = Off/zlib.output_compression = On/g' /etc/php.ini\nRUN sed -ri 's/upload_max_filesize = 2M/upload_max_filesize = 10M/g' /etc/php.ini\nRUN sed -ri 's/post_max_size = 8M/post_max_size = 15M/g' /etc/php.ini\nRUN sed -ri 's/memory_limit = 128M/memory_limit = -1/g' /etc/php.ini\n#  System Utilities\n#  ffmpeg for video recording\n#  based on Julien Rottenberg <julien@rottenberg.info>\n#  based on docker image  rottenberg/ffmpeg\n#  From https://trac.ffmpeg.org/wiki/CompilationGuide/Centos\nENV FFMPEG_VERSION=\"2.8\"\nENV MPLAYER_VERSION=\"1.1.1\"\nENV YASM_VERSION=\"1.2.0\"\nENV LAME_VERSION=\"3.99.5\"\nENV FAAC_VERSION=\"1.28\"\nENV XVID_VERSION=\"1.3.3\"\nENV FDKAAC_VERSION=\"0.1.3\"\nENV EXIFTOOL_VERSION=\"9.75\"\n#  from https://github.com/WPO-Foundation/webpagetest base on pmeenan\nENV WPT_VERSION=\"2.18\"\nENV SRC=\"/usr/local\"\nENV LD_LIBRARY_PATH=\"${SRC}/lib\"\nENV PKG_CONFIG_PATH=\"${SRC}/lib/pkgconfig\"\nENV PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:  \"\nRUN bash -c 'set -euo pipefail'\nRUN yum install -y autoconf automake gcc gcc-c++ git libtool make nasm pkgconfig zlib-devel tar curl wget bzip2\n#  yasm\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://www.tortall.net/projects/yasm/releases/yasm-${YASM_VERSION}.tar.gz \\\n && tar xzvf yasm-${YASM_VERSION}.tar.gz \\\n && cd yasm-${YASM_VERSION} \\\n && ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#  x264\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \\\n && tar xvf last_x264.tar.bz2 \\\n && cd x264* \\\n && ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" --enable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#  libmp3lame\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os http://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz \\\n && tar xzvf lame-${LAME_VERSION}.tar.gz \\\n && cd lame-${LAME_VERSION} \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-shared --enable-nasm \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#  faac + http://stackoverflow.com/a/4320377\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os http://downloads.sourceforge.net/faac/faac-${FAAC_VERSION}.tar.gz \\\n && tar xzvf faac-${FAAC_VERSION}.tar.gz \\\n && cd faac-${FAAC_VERSION} \\\n && sed -i '126d' common/mp4v2/mpeg4ip.h \\\n && ./bootstrap \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  xvid\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \\\n && tar xzvf xvidcore-${XVID_VERSION}.tar.gz \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  fdk-aac\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -s https://codeload.github.com/mstorsjo/fdk-aac/tar.gz/v${FDKAAC_VERSION} | tar zxvf - \\\n && cd fdk-aac-${FDKAAC_VERSION} \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#  ffmpeg\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && tar xzvf ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && cd ffmpeg-${FFMPEG_VERSION} \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --extra-libs=-ldl --enable-version3 --enable-libfaac --enable-libmp3lame --enable-libx264 --enable-libxvid --enable-gpl --enable-postproc --enable-nonfree --enable-avresample --enable-libfdk_aac --disable-debug --enable-small \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf ${DIR}\n#  mplayer\n# RUN DIR=$(mktemp -d) && cd ${DIR} && \\\n#               curl -Os http://mplayerhq.hu/MPlayer/releases/MPlayer-${MPLAYER_VERSION}.tar.xz && \\\n#               tar xvf MPlayer-${MPLAYER_VERSION}.tar.xz && \\\n#               cd MPlayer-${MPLAYER_VERSION} && \\\n#               ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" && \\\n#               make && \\\n#               make install && \\\n#               rm -rf ${DIR}\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/libc.conf\n# # install ImageMagick\nRUN yum install -y ImageMagick ImageMagick-devel ImageMagick-perl\n# # install Jpegtran \nRUN yum -y install libjpeg-turbo-devel libjpeg-turbo-static libjpeg-turbo\n# # install exiftool\nRUN yum install -y perl-devel\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://owl.phy.queensu.ca/~phil/exiftool/Image-ExifTool-${EXIFTOOL_VERSION}.tar.gz \\\n && tar xvf Image-ExifTool-${EXIFTOOL_VERSION}.tar.gz \\\n && cd Image-ExifTool-${EXIFTOOL_VERSION} \\\n && perl Makefile.PL \\\n && make install \\\n && cp -r exiftool lib /usr/bin \\\n && rm -rf ${DIR}\n#  Filesystem setting\nRUN mkdir -p /var/www/html/tmp \\\n && chmod 777 /var/www/html/tmp \\\n && mkdir -p /var/www/html/dat \\\n && chmod 777 /var/www/html/dat \\\n && mkdir -p /var/www/html/results \\\n && chmod 777 /var/www/html/results \\\n && mkdir -p /var/www/html/work/jobs \\\n && chmod 777 /var/www/html/work/jobs \\\n && mkdir -p /var/www/html/work/video \\\n && chmod 777 /var/www/html/work/video \\\n && mkdir -p /var/www/html/logs \\\n && chmod 777 /var/www/html/logs\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os https://github.com/WPO-Foundation/webpagetest/archive/WebPageTest-${WPT_VERSION}.tar.gz \\\n && tar xvf WebPageTest-${WPT_VERSION}.tar.gz \\\n && cd webpagetest-WebPageTest-${WPT_VERSION} \\\n && cp -r www/* /var/www/html/\nCOPY locations.ini /var/www/html/settings/\nCOPY connectivity.ini /var/www/html/settings/\nCOPY settings.ini /var/www/html/settings/\n#  test results store volume\nVOLUME [\"/var/www/html/results\"] \nEXPOSE 80/tcp\nCMD [\"/usr/sbin/httpd\", \"-k\", \"start\", \"-D\", \"FOREGROUND\"]\n","injectedSmells":[],"originalDockerfileHash":"cc250b177fc18814a7a179a2a917d539","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   DOCKER-VERION:\t1.9.1\n#   DESCRIPTION:\t\tImage with private webpagetest (www.webpagetest.org)\n#   TO_BUILD:\t\tdocker build -rm -t wpt .\n#   TO_RUN:\t\tdocker run -d --publish 80:80 --volume /tmp/wpt/results:/var/www/html/results webpagetest\nFROM centos:centos6\nMAINTAINER Yunkyung Lee <yunkyung@gmail.com>\n#   for httpd, php \nRUN yum install -y httpd\nRUN yum install -y php php-devel php-pear php-mysql php-mbstring php-gd php-imap php-odbc php-xmlrpc php-xml\nRUN yum install -y gd gd-devel php-gd\n#   PHP\nRUN sed -ri 's/zlib.output_compression = Off/zlib.output_compression = On/g' /etc/php.ini\nRUN sed -ri 's/upload_max_filesize = 2M/upload_max_filesize = 10M/g' /etc/php.ini\nRUN sed -ri 's/post_max_size = 8M/post_max_size = 15M/g' /etc/php.ini\nRUN sed -ri 's/memory_limit = 128M/memory_limit = -1/g' /etc/php.ini\n#   System Utilities\n#   ffmpeg for video recording\n#   based on Julien Rottenberg <julien@rottenberg.info>\n#   based on docker image  rottenberg/ffmpeg\n#   From https://trac.ffmpeg.org/wiki/CompilationGuide/Centos\nENV FFMPEG_VERSION=\"2.8\"\nENV MPLAYER_VERSION=\"1.1.1\"\nENV YASM_VERSION=\"1.2.0\"\nENV LAME_VERSION=\"3.99.5\"\nENV FAAC_VERSION=\"1.28\"\nENV XVID_VERSION=\"1.3.3\"\nENV FDKAAC_VERSION=\"0.1.3\"\nENV EXIFTOOL_VERSION=\"9.75\"\n#   from https://github.com/WPO-Foundation/webpagetest base on pmeenan\nENV WPT_VERSION=\"2.18\"\nENV SRC=\"/usr/local\"\nENV LD_LIBRARY_PATH=\"${SRC}/lib\"\nENV PKG_CONFIG_PATH=\"${SRC}/lib/pkgconfig\"\nENV PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:  \"\nRUN bash -c 'set -euo pipefail'\nRUN yum install -y autoconf automake gcc gcc-c++ git libtool make nasm pkgconfig zlib-devel tar curl wget bzip2\n#   yasm\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://www.tortall.net/projects/yasm/releases/yasm-${YASM_VERSION}.tar.gz \\\n && tar xzvf yasm-${YASM_VERSION}.tar.gz \\\n && cd yasm-${YASM_VERSION} \\\n && ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   x264\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \\\n && tar xvf last_x264.tar.bz2 \\\n && cd x264* \\\n && ./configure --prefix=\"$SRC\" --bindir=\"${SRC}/bin\" --enable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   libmp3lame\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os http://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz \\\n && tar xzvf lame-${LAME_VERSION}.tar.gz \\\n && cd lame-${LAME_VERSION} \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-shared --enable-nasm \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   faac + http://stackoverflow.com/a/4320377\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os http://downloads.sourceforge.net/faac/faac-${FAAC_VERSION}.tar.gz \\\n && tar xzvf faac-${FAAC_VERSION}.tar.gz \\\n && cd faac-${FAAC_VERSION} \\\n && sed -i '126d' common/mp4v2/mpeg4ip.h \\\n && ./bootstrap \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   xvid\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \\\n && tar xzvf xvidcore-${XVID_VERSION}.tar.gz \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   fdk-aac\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -s https://codeload.github.com/mstorsjo/fdk-aac/tar.gz/v${FDKAAC_VERSION} | tar zxvf - \\\n && cd fdk-aac-${FDKAAC_VERSION} \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   ffmpeg\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && tar xzvf ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && cd ffmpeg-${FFMPEG_VERSION} \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --extra-libs=-ldl --enable-version3 --enable-libfaac --enable-libmp3lame --enable-libx264 --enable-libxvid --enable-gpl --enable-postproc --enable-nonfree --enable-avresample --enable-libfdk_aac --disable-debug --enable-small \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf ${DIR}\n#   mplayer\n#  RUN DIR=$(mktemp -d) && cd ${DIR} && \\\n#                curl -Os http://mplayerhq.hu/MPlayer/releases/MPlayer-${MPLAYER_VERSION}.tar.xz && \\\n#                tar xvf MPlayer-${MPLAYER_VERSION}.tar.xz && \\\n#                cd MPlayer-${MPLAYER_VERSION} && \\\n#                ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" && \\\n#                make && \\\n#                make install && \\\n#                rm -rf ${DIR}\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/libc.conf\n#  # install ImageMagick\nRUN yum install -y ImageMagick ImageMagick-devel ImageMagick-perl\n#  # install Jpegtran \nRUN yum -y install libjpeg-turbo-devel libjpeg-turbo-static libjpeg-turbo\n#  # install exiftool\nRUN yum install -y perl-devel\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os http://owl.phy.queensu.ca/~phil/exiftool/Image-ExifTool-${EXIFTOOL_VERSION}.tar.gz \\\n && tar xvf Image-ExifTool-${EXIFTOOL_VERSION}.tar.gz \\\n && cd Image-ExifTool-${EXIFTOOL_VERSION} \\\n && perl Makefile.PL \\\n && make install \\\n && cp -r exiftool lib /usr/bin \\\n && rm -rf ${DIR}\n#   Filesystem setting\nRUN mkdir -p /var/www/html/tmp \\\n && chmod 777 /var/www/html/tmp \\\n && mkdir -p /var/www/html/dat \\\n && chmod 777 /var/www/html/dat \\\n && mkdir -p /var/www/html/results \\\n && chmod 777 /var/www/html/results \\\n && mkdir -p /var/www/html/work/jobs \\\n && chmod 777 /var/www/html/work/jobs \\\n && mkdir -p /var/www/html/work/video \\\n && chmod 777 /var/www/html/work/video \\\n && mkdir -p /var/www/html/logs \\\n && chmod 777 /var/www/html/logs\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -L -Os https://github.com/WPO-Foundation/webpagetest/archive/WebPageTest-${WPT_VERSION}.tar.gz \\\n && tar xvf WebPageTest-${WPT_VERSION}.tar.gz \\\n && cd webpagetest-WebPageTest-${WPT_VERSION} \\\n && cp -r www/* /var/www/html/\nCOPY locations.ini /var/www/html/settings/\nCOPY connectivity.ini /var/www/html/settings/\nCOPY settings.ini /var/www/html/settings/\n#   test results store volume\nVOLUME [\"/var/www/html/results\"] \nEXPOSE 80/tcp\nCMD [\"/usr/sbin/httpd\", \"-k\", \"start\", \"-D\", \"FOREGROUND\"]\n","originalDockerfileUglifiedHash":"d137489f4b91f6a720f45d61cbe60923","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6fe6d89c4658a60d8603d70818e0ea84ca8b4902.dockerfile"}