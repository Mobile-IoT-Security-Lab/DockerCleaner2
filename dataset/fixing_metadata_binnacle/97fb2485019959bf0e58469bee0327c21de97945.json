{"seed":2118514779,"processedDockerfileHash":"2b50780df622c81c7fb2d8cd81055a70","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#  upstream https://github.com/jenkinsci/docker-jnlp-slave\nFROM debian:stretch\nMAINTAINER 若虚 <slpcat@qq.com>\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\" \\\n    SSH_KNOWN_HOSTS=\"github.com\"\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils curl dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  openjdk8 apt-get install -y openjdk-8-jdk-headless\n#   Add Oracle Java PPA\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.2-1+deb9u1 apt-transport-https=1.4.11 gnupg2=2.1.18-8~deb9u4 ca-certificates=20200601~deb9u2 -y ) \\\n && echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main' > /etc/apt/sources.list.d/webupd8team-ubuntu-java.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 \\\n && apt-get update -y \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && (apt-get update ;apt-get install --no-install-recommends libpq-dev=9.6.24-0+deb9u1 oracle-java8-installer -y ) \\\n && rm -f /var/cache/oracle-jdk8-installer/jdk-*.tar.g\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential=12.3 bzip2=1.0.6-8.1 sudo=1.8.19p1-2.1+deb9u3 git=1:2.11.0-3+deb9u7 iptables=1.6.0+snapshot20161117-6 jq=1.5+dfsg-1.3 unzip=6.0-21+deb9u2 zip=3.0-11+b1 -y )\nARG MAVEN_VERSION=3.5.3\nARG USER_HOME_DIR=\"/root\"\nARG SHA=b52956373fab1dd4277926507ab189fb797b3bc51a2a267a193c931fffad8408\n#  ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n && echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n && rm -f /tmp/apache-maven.tar.gz \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\nCOPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\n#  Install Docker in Docker\nRUN curl -fsSL https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;)/gpg | apt-key add - \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;) $( lsb_release -cs ;) stable\" \\\n && apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends docker-ce -y )\nCOPY daemon.json /etc/docker/daemon.json\n#   jenkins slave\nENV HOME=\"/home/jenkins\"\nRUN groupadd -g 10000 jenkins \\\n && useradd -c \"Jenkins user\" -d $HOME -u 10000 -g 10000 -m jenkins \\\n && usermod -a -G docker jenkins \\\n && sed -i '/^root/a\\jenkins ALL=(ALL:ALL) NOPASSWD:ALL' /etc/sudoers\nLABEL Description=\"This is a base image, which provides the Jenkins agent executable (slave.jar)\" \\\n      Vendor=\"Jenkins project\" \\\n      Version=\"3.20\"\nARG VERSION=3.20\nARG AGENT_WORKDIR=/home/jenkins/agent\nRUN curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar \\\n && chmod 755 /usr/share/jenkins \\\n && chmod 644 /usr/share/jenkins/slave.jar\nCOPY jenkins-slave /usr/local/bin/jenkins-slave\nUSER jenkins\nENV AGENT_WORKDIR=\"${AGENT_WORKDIR}\"\nRUN mkdir /home/jenkins/.jenkins \\\n && mkdir -p ${AGENT_WORKDIR}\nVOLUME /home/jenkins/.jenkins\nVOLUME ${AGENT_WORKDIR}\nWORKDIR /home/jenkins\nENTRYPOINT [\"jenkins-slave\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/jenkinsci/docker-jnlp-slave\nFROM debian:stretch\nMAINTAINER 若虚 <slpcat@qq.com>\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\" \\\n    SSH_KNOWN_HOSTS=\"github.com\"\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list\n#  Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils curl dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n# openjdk8 apt-get install -y openjdk-8-jdk-headless\n#  Add Oracle Java PPA\nRUN apt-get update -y \\\n && apt-get install software-properties-common apt-transport-https gnupg2 ca-certificates -y \\\n && echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main' > /etc/apt/sources.list.d/webupd8team-ubuntu-java.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 \\\n && apt-get update -y \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && apt-get install libpq-dev oracle-java8-installer -y \\\n && rm -f /var/cache/oracle-jdk8-installer/jdk-*.tar.g\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get install build-essential bzip2 sudo git iptables jq unzip zip -y\nARG MAVEN_VERSION=3.5.3\nARG USER_HOME_DIR=\"/root\"\nARG SHA=b52956373fab1dd4277926507ab189fb797b3bc51a2a267a193c931fffad8408\n# ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n && echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n && rm -f /tmp/apache-maven.tar.gz \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\nCOPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\n# Install Docker in Docker\nRUN curl -fsSL https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;)/gpg | apt-key add - \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;) $( lsb_release -cs ;) stable\" \\\n && apt-get update -y \\\n && apt-get install docker-ce -y\nCOPY daemon.json /etc/docker/daemon.json\n#  jenkins slave\nENV HOME=\"/home/jenkins\"\nRUN groupadd -g 10000 jenkins \\\n && useradd -c \"Jenkins user\" -d $HOME -u 10000 -g 10000 -m jenkins \\\n && usermod -a -G docker jenkins \\\n && sed -i '/^root/a\\jenkins ALL=(ALL:ALL) NOPASSWD:ALL' /etc/sudoers\nLABEL Description=\"This is a base image, which provides the Jenkins agent executable (slave.jar)\" \\\n      Vendor=\"Jenkins project\" \\\n      Version=\"3.20\"\nARG VERSION=3.20\nARG AGENT_WORKDIR=/home/jenkins/agent\nRUN curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar \\\n && chmod 755 /usr/share/jenkins \\\n && chmod 644 /usr/share/jenkins/slave.jar\nCOPY jenkins-slave /usr/local/bin/jenkins-slave\nUSER jenkins\nENV AGENT_WORKDIR=\"${AGENT_WORKDIR}\"\nRUN mkdir /home/jenkins/.jenkins \\\n && mkdir -p ${AGENT_WORKDIR}\nVOLUME /home/jenkins/.jenkins\nVOLUME ${AGENT_WORKDIR}\nWORKDIR /home/jenkins\nENTRYPOINT [\"jenkins-slave\"]\n","injectedSmells":[],"originalDockerfileHash":"b6c3b764cb49c616048047127e45f85b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/jenkinsci/docker-jnlp-slave\nFROM debian:stretch\nMAINTAINER 若虚 <slpcat@qq.com>\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\" \\\n    SSH_KNOWN_HOSTS=\"github.com\"\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils curl dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  openjdk8 apt-get install -y openjdk-8-jdk-headless\n#   Add Oracle Java PPA\nRUN apt-get update -y \\\n && apt-get install software-properties-common apt-transport-https gnupg2 ca-certificates -y \\\n && echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main' > /etc/apt/sources.list.d/webupd8team-ubuntu-java.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 \\\n && apt-get update -y \\\n && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && apt-get install libpq-dev oracle-java8-installer -y \\\n && rm -f /var/cache/oracle-jdk8-installer/jdk-*.tar.g\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get install build-essential bzip2 sudo git iptables jq unzip zip -y\nARG MAVEN_VERSION=3.5.3\nARG USER_HOME_DIR=\"/root\"\nARG SHA=b52956373fab1dd4277926507ab189fb797b3bc51a2a267a193c931fffad8408\n#  ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n && echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n && rm -f /tmp/apache-maven.tar.gz \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\nCOPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\n#  Install Docker in Docker\nRUN curl -fsSL https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;)/gpg | apt-key add - \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;) $( lsb_release -cs ;) stable\" \\\n && apt-get update -y \\\n && apt-get install docker-ce -y\nCOPY daemon.json /etc/docker/daemon.json\n#   jenkins slave\nENV HOME=\"/home/jenkins\"\nRUN groupadd -g 10000 jenkins \\\n && useradd -c \"Jenkins user\" -d $HOME -u 10000 -g 10000 -m jenkins \\\n && usermod -a -G docker jenkins \\\n && sed -i '/^root/a\\jenkins ALL=(ALL:ALL) NOPASSWD:ALL' /etc/sudoers\nLABEL Description=\"This is a base image, which provides the Jenkins agent executable (slave.jar)\" \\\n      Vendor=\"Jenkins project\" \\\n      Version=\"3.20\"\nARG VERSION=3.20\nARG AGENT_WORKDIR=/home/jenkins/agent\nRUN curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar \\\n && chmod 755 /usr/share/jenkins \\\n && chmod 644 /usr/share/jenkins/slave.jar\nCOPY jenkins-slave /usr/local/bin/jenkins-slave\nUSER jenkins\nENV AGENT_WORKDIR=\"${AGENT_WORKDIR}\"\nRUN mkdir /home/jenkins/.jenkins \\\n && mkdir -p ${AGENT_WORKDIR}\nVOLUME /home/jenkins/.jenkins\nVOLUME ${AGENT_WORKDIR}\nWORKDIR /home/jenkins\nENTRYPOINT [\"jenkins-slave\"]\n","originalDockerfileUglifiedHash":"f4aa8434d1efba4d5b9896f514ace285","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/97fb2485019959bf0e58469bee0327c21de97945.dockerfile"}