{"seed":128966233,"processedDockerfileHash":"f44414570949fcb76a2907654e2083cc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2019 Google LLC.\n#   This is used to build the DeepVariant release docker image.\n#   It can also be used to build local images, especially if you've made changes\n#   to the code.\n#   Example command:\n#   $ git clone https://github.com/google/deepvariant.git\n#   $ cd deepvariant\n#   $ sudo docker build -t deepvariant .\n#\n#   To build for GPU, use a command like:\n#   $ sudo docker build --build-arg=FROM_IMAGE=nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04 --build-arg=DV_GPU_BUILD=1 -t deepvariant_gpu .\nARG FROM_IMAGE=ubuntu:16.04\nARG DV_GPU_BUILD=0\nARG VERSION=0.8.0\nFROM ${FROM_IMAGE} AS builder\nLABEL maintainer=\"https://github.com/google/deepvariant/issues\"\nARG DV_GPU_BUILD\nENV DV_GPU_BUILD=\"${DV_GPU_BUILD}\"\n#   Copying DeepVariant source code\nCOPY . /opt/deepvariant\nWORKDIR /opt/deepvariant\nRUN ./build-prereq.sh \\\n && PATH=\"${HOME}/bin:${PATH}\" ./build_release_binaries.sh\nFROM ${FROM_IMAGE}\nARG DV_GPU_BUILD\nARG VERSION\nENV DV_GPU_BUILD=\"${DV_GPU_BUILD}\"\nENV VERSION=\"${VERSION}\"\nWORKDIR /opt/\nCOPY --from=builder /opt/deepvariant/bazel-genfiles/licenses.zip .\nWORKDIR /opt/deepvariant/bin/\nCOPY --from=builder /opt/deepvariant/run-prereq.sh .\nCOPY --from=builder /opt/deepvariant/settings.sh .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/make_examples.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/call_variants.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/postprocess_variants.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/model_train.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/model_eval.zip .\nCOPY --from=builder /opt/deepvariant/scripts/run_deepvariant.py .\nRUN ./run-prereq.sh\n#   Create shell wrappers for python zip files for easier use.\nRUN BASH_HEADER='#!/bin/bash' \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/make_examples.zip \"$@\"' > /opt/deepvariant/bin/make_examples \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/call_variants.zip \"$@\"' > /opt/deepvariant/bin/call_variants \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/postprocess_variants.zip \"$@\"' > /opt/deepvariant/bin/postprocess_variants \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/model_train.zip \"$@\"' > /opt/deepvariant/bin/model_train \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/model_eval.zip \"$@\"' > /opt/deepvariant/bin/model_eval \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python -u /opt/deepvariant/bin/run_deepvariant.py \"$@\"' > /opt/deepvariant/bin/run_deepvariant \\\n && chmod +x /opt/deepvariant/bin/make_examples /opt/deepvariant/bin/call_variants /opt/deepvariant/bin/postprocess_variants /opt/deepvariant/bin/model_train /opt/deepvariant/bin/model_eval /opt/deepvariant/bin/run_deepvariant\n#   Copy models\nWORKDIR /opt/models/wgs\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.data-00000-of-00001\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.index\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.meta\nRUN chmod +r /opt/models/wgs/model.ckpt*\nWORKDIR /opt/models/wes\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.data-00000-of-00001\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.index\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.meta\nRUN chmod +r /opt/models/wes/model.ckpt*\nWORKDIR /opt/models/pacbio\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.data-00000-of-00001\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.index\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document . https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.meta\nRUN chmod +r /opt/models/pacbio/model.ckpt*\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends python-pip parallel=20221122+ds-2 -y \\\n && python -m pip uninstall -y pip \\\n && python -m pip install pip==9.0.3 \\\n && pip install absl-py==0.7.1\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2019 Google LLC.\n#  This is used to build the DeepVariant release docker image.\n#  It can also be used to build local images, especially if you've made changes\n#  to the code.\n#  Example command:\n#  $ git clone https://github.com/google/deepvariant.git\n#  $ cd deepvariant\n#  $ sudo docker build -t deepvariant .\n#\n#  To build for GPU, use a command like:\n#  $ sudo docker build --build-arg=FROM_IMAGE=nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04 --build-arg=DV_GPU_BUILD=1 -t deepvariant_gpu .\nARG FROM_IMAGE=ubuntu:16.04\nARG DV_GPU_BUILD=0\nARG VERSION=0.8.0\nFROM ${FROM_IMAGE} AS builder\nLABEL maintainer=\"https://github.com/google/deepvariant/issues\"\nARG DV_GPU_BUILD\nENV DV_GPU_BUILD=\"${DV_GPU_BUILD}\"\n#  Copying DeepVariant source code\nCOPY . /opt/deepvariant\nWORKDIR /opt/deepvariant\nRUN ./build-prereq.sh \\\n && PATH=\"${HOME}/bin:${PATH}\" ./build_release_binaries.sh\nFROM ${FROM_IMAGE}\nARG DV_GPU_BUILD\nARG VERSION\nENV DV_GPU_BUILD=\"${DV_GPU_BUILD}\"\nENV VERSION=\"${VERSION}\"\nWORKDIR /opt/\nCOPY --from=builder /opt/deepvariant/bazel-genfiles/licenses.zip .\nWORKDIR /opt/deepvariant/bin/\nCOPY --from=builder /opt/deepvariant/run-prereq.sh .\nCOPY --from=builder /opt/deepvariant/settings.sh .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/make_examples.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/call_variants.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/postprocess_variants.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/model_train.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/model_eval.zip .\nCOPY --from=builder /opt/deepvariant/scripts/run_deepvariant.py .\nRUN ./run-prereq.sh\n#  Create shell wrappers for python zip files for easier use.\nRUN BASH_HEADER='#!/bin/bash' \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/make_examples.zip \"$@\"' > /opt/deepvariant/bin/make_examples \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/call_variants.zip \"$@\"' > /opt/deepvariant/bin/call_variants \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/postprocess_variants.zip \"$@\"' > /opt/deepvariant/bin/postprocess_variants \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/model_train.zip \"$@\"' > /opt/deepvariant/bin/model_train \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/model_eval.zip \"$@\"' > /opt/deepvariant/bin/model_eval \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python -u /opt/deepvariant/bin/run_deepvariant.py \"$@\"' > /opt/deepvariant/bin/run_deepvariant \\\n && chmod +x /opt/deepvariant/bin/make_examples /opt/deepvariant/bin/call_variants /opt/deepvariant/bin/postprocess_variants /opt/deepvariant/bin/model_train /opt/deepvariant/bin/model_eval /opt/deepvariant/bin/run_deepvariant\n#  Copy models\nWORKDIR /opt/models/wgs\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.meta .\nRUN chmod +r /opt/models/wgs/model.ckpt*\nWORKDIR /opt/models/wes\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.meta .\nRUN chmod +r /opt/models/wes/model.ckpt*\nWORKDIR /opt/models/pacbio\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.meta .\nRUN chmod +r /opt/models/pacbio/model.ckpt*\nRUN apt-get update -y \\\n && apt-get install python-pip parallel -y \\\n && python -m pip uninstall -y pip \\\n && python -m pip install pip==9.0.3 \\\n && pip install absl-py==0.7.1\n","injectedSmells":[],"originalDockerfileHash":"ce543ac4dd2696261283ab3f07afde59","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2019 Google LLC.\n#   This is used to build the DeepVariant release docker image.\n#   It can also be used to build local images, especially if you've made changes\n#   to the code.\n#   Example command:\n#   $ git clone https://github.com/google/deepvariant.git\n#   $ cd deepvariant\n#   $ sudo docker build -t deepvariant .\n#\n#   To build for GPU, use a command like:\n#   $ sudo docker build --build-arg=FROM_IMAGE=nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04 --build-arg=DV_GPU_BUILD=1 -t deepvariant_gpu .\nARG FROM_IMAGE=ubuntu:16.04\nARG DV_GPU_BUILD=0\nARG VERSION=0.8.0\nFROM ${FROM_IMAGE} AS builder\nLABEL maintainer=\"https://github.com/google/deepvariant/issues\"\nARG DV_GPU_BUILD\nENV DV_GPU_BUILD=\"${DV_GPU_BUILD}\"\n#   Copying DeepVariant source code\nCOPY . /opt/deepvariant\nWORKDIR /opt/deepvariant\nRUN ./build-prereq.sh \\\n && PATH=\"${HOME}/bin:${PATH}\" ./build_release_binaries.sh\nFROM ${FROM_IMAGE}\nARG DV_GPU_BUILD\nARG VERSION\nENV DV_GPU_BUILD=\"${DV_GPU_BUILD}\"\nENV VERSION=\"${VERSION}\"\nWORKDIR /opt/\nCOPY --from=builder /opt/deepvariant/bazel-genfiles/licenses.zip .\nWORKDIR /opt/deepvariant/bin/\nCOPY --from=builder /opt/deepvariant/run-prereq.sh .\nCOPY --from=builder /opt/deepvariant/settings.sh .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/make_examples.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/call_variants.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/postprocess_variants.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/model_train.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/model_eval.zip .\nCOPY --from=builder /opt/deepvariant/scripts/run_deepvariant.py .\nRUN ./run-prereq.sh\n#   Create shell wrappers for python zip files for easier use.\nRUN BASH_HEADER='#!/bin/bash' \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/make_examples.zip \"$@\"' > /opt/deepvariant/bin/make_examples \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/call_variants.zip \"$@\"' > /opt/deepvariant/bin/call_variants \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/postprocess_variants.zip \"$@\"' > /opt/deepvariant/bin/postprocess_variants \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/model_train.zip \"$@\"' > /opt/deepvariant/bin/model_train \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python /opt/deepvariant/bin/model_eval.zip \"$@\"' > /opt/deepvariant/bin/model_eval \\\n && printf \"%s\\n%s\\n\" \"${BASH_HEADER}\" 'python -u /opt/deepvariant/bin/run_deepvariant.py \"$@\"' > /opt/deepvariant/bin/run_deepvariant \\\n && chmod +x /opt/deepvariant/bin/make_examples /opt/deepvariant/bin/call_variants /opt/deepvariant/bin/postprocess_variants /opt/deepvariant/bin/model_train /opt/deepvariant/bin/model_eval /opt/deepvariant/bin/run_deepvariant\n#   Copy models\nWORKDIR /opt/models/wgs\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.meta .\nRUN chmod +r /opt/models/wgs/model.ckpt*\nWORKDIR /opt/models/wes\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.meta .\nRUN chmod +r /opt/models/wes/model.ckpt*\nWORKDIR /opt/models/pacbio\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.meta .\nRUN chmod +r /opt/models/pacbio/model.ckpt*\nRUN apt-get update -y \\\n && apt-get install python-pip parallel -y \\\n && python -m pip uninstall -y pip \\\n && python -m pip install pip==9.0.3 \\\n && pip install absl-py==0.7.1\n","originalDockerfileUglifiedHash":"7a63f0e5dad67073d7d0b67e9780cf04","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0b54715ef3b05ff97b5e09f36db7f786bfbf04ba.dockerfile"}