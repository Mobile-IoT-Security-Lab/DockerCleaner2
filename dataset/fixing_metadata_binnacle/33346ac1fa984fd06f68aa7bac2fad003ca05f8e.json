{"seed":679709210,"processedDockerfileHash":"66ec4c050823ac4c7c6dccf9cb088ae3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#    Copyright 2018 The Kubernetes Authors.\n#\n#    Licensed under the Apache License, Version 2.0 (the \"License\");\n#    you may not use this file except in compliance with the License.\n#    You may obtain a copy of the License at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#    limitations under the License.\n#   Build the following into binaries for darwin and then host them in a tar.gz file in an alpine image\n#   - apiserver\n#   - kubectl\n#   - kube-controller-manager\n#   - etcd\n#   - *-gen code generators\n#   - reference-docs\n#   Build k8s.io/kubernetes binaries\nFROM golang:1.9-stretch AS kubernetes-darwin\n#   Install tools\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends rsync -y )\nRUN go get github.com/jteeuwen/go-bindata/go-bindata\nENV CGO=\"0\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/kubernetes/kubernetes $GOPATH/src/k8s.io/kubernetes --depth=1 -b release-1.9\nWORKDIR /go/src/k8s.io/kubernetes\n#   Build for linux first otherwise it won't work for darwin - :(\nENV KUBE_BUILD_PLATFORMS=\"linux/amd64\"\nRUN make WHAT=cmd/kube-apiserver\nENV KUBE_BUILD_PLATFORMS=\"darwin/amd64\"\nRUN make WHAT=cmd/kube-apiserver\nRUN cp _output/local/bin/$KUBE_BUILD_PLATFORMS/kube-apiserver $DEST\nENV KUBE_BUILD_PLATFORMS=\"linux/amd64\"\nRUN make WHAT=cmd/kube-controller-manager\nENV KUBE_BUILD_PLATFORMS=\"darwin/amd64\"\nRUN make WHAT=cmd/kube-controller-manager\nRUN cp _output/local/bin/$KUBE_BUILD_PLATFORMS/kube-controller-manager $DEST\nENV KUBE_BUILD_PLATFORMS=\"linux/amd64\"\nRUN make WHAT=cmd/kubectl\nENV KUBE_BUILD_PLATFORMS=\"darwin/amd64\"\nRUN make WHAT=cmd/kubectl\nRUN cp _output/local/bin/$KUBE_BUILD_PLATFORMS/kubectl $DEST\n#   Build coreos/etcd binaries\nFROM golang:1.10-stretch AS etcd-darwin\nENV CGO=\"0\"\nENV GOOS=\"darwin\"\nENV GOARCH=\"amd64\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/coreos/etcd $GOPATH/src/github.com/coreos/etcd --depth=1\nRUN go build -o $DEST/etcd github.com/coreos/etcd\n#   Build k8s.io/code-generator binaries\nFROM golang:1.10-stretch AS code-generator-darwin\nENV CGO=\"0\"\nENV GOOS=\"darwin\"\nENV GOARCH=\"amd64\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/kubernetes/code-generator $GOPATH/src/k8s.io/code-generator --depth=1 -b release-1.9\nRUN go build -o $DEST/client-gen k8s.io/code-generator/cmd/client-gen\nRUN go build -o $DEST/conversion-gen k8s.io/code-generator/cmd/conversion-gen\nRUN go build -o $DEST/deepcopy-gen k8s.io/code-generator/cmd/deepcopy-gen\nRUN go build -o $DEST/defaulter-gen k8s.io/code-generator/cmd/defaulter-gen\nRUN go build -o $DEST/informer-gen k8s.io/code-generator/cmd/informer-gen\nRUN go build -o $DEST/lister-gen k8s.io/code-generator/cmd/lister-gen\nRUN go build -o $DEST/openapi-gen k8s.io/code-generator/cmd/openapi-gen\n#   Build kubernetes-incubator/reference-docs binaries\nFROM golang:1.10-stretch AS reference-docs-darwin\nENV CGO=\"0\"\nENV GOOS=\"darwin\"\nENV GOARCH=\"amd64\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/kubernetes-incubator/reference-docs $GOPATH/src/github.com/kubernetes-incubator/reference-docs --depth=1\nRUN go build -o $DEST/gen-apidocs github.com/kubernetes-incubator/reference-docs/gen-apidocs\n#   Copy all binaries into a single tar.gz file\nFROM golang:1.10-stretch AS darwin\nRUN mkdir -p /usr/local/kubebuilder/bin/\nCOPY --from=etcd-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nCOPY --from=kubernetes-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nCOPY --from=code-generator-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nCOPY --from=reference-docs-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nWORKDIR /usr/local\nRUN tar -czvf /kubebuilder_darwin_amd64.tar.gz kubebuilder/\n#   Host the tar.gz file in a thin image\nFROM alpine:3.7\nCOPY --from=darwin /kubebuilder_darwin_amd64.tar.gz /kubebuilder_darwin_amd64.tar.gz\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#   Copyright 2018 The Kubernetes Authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#  Build the following into binaries for darwin and then host them in a tar.gz file in an alpine image\n#  - apiserver\n#  - kubectl\n#  - kube-controller-manager\n#  - etcd\n#  - *-gen code generators\n#  - reference-docs\n#  Build k8s.io/kubernetes binaries\nFROM golang:1.9-stretch AS kubernetes-darwin\n#  Install tools\nRUN apt-get update\nRUN apt-get install rsync -y\nRUN go get github.com/jteeuwen/go-bindata/go-bindata\nENV CGO=\"0\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/kubernetes/kubernetes $GOPATH/src/k8s.io/kubernetes --depth=1 -b release-1.9\nWORKDIR /go/src/k8s.io/kubernetes\n#  Build for linux first otherwise it won't work for darwin - :(\nENV KUBE_BUILD_PLATFORMS=\"linux/amd64\"\nRUN make WHAT=cmd/kube-apiserver\nENV KUBE_BUILD_PLATFORMS=\"darwin/amd64\"\nRUN make WHAT=cmd/kube-apiserver\nRUN cp _output/local/bin/$KUBE_BUILD_PLATFORMS/kube-apiserver $DEST\nENV KUBE_BUILD_PLATFORMS=\"linux/amd64\"\nRUN make WHAT=cmd/kube-controller-manager\nENV KUBE_BUILD_PLATFORMS=\"darwin/amd64\"\nRUN make WHAT=cmd/kube-controller-manager\nRUN cp _output/local/bin/$KUBE_BUILD_PLATFORMS/kube-controller-manager $DEST\nENV KUBE_BUILD_PLATFORMS=\"linux/amd64\"\nRUN make WHAT=cmd/kubectl\nENV KUBE_BUILD_PLATFORMS=\"darwin/amd64\"\nRUN make WHAT=cmd/kubectl\nRUN cp _output/local/bin/$KUBE_BUILD_PLATFORMS/kubectl $DEST\n#  Build coreos/etcd binaries\nFROM golang:1.10-stretch AS etcd-darwin\nENV CGO=\"0\"\nENV GOOS=\"darwin\"\nENV GOARCH=\"amd64\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/coreos/etcd $GOPATH/src/github.com/coreos/etcd --depth=1\nRUN go build -o $DEST/etcd github.com/coreos/etcd\n#  Build k8s.io/code-generator binaries\nFROM golang:1.10-stretch AS code-generator-darwin\nENV CGO=\"0\"\nENV GOOS=\"darwin\"\nENV GOARCH=\"amd64\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/kubernetes/code-generator $GOPATH/src/k8s.io/code-generator --depth=1 -b release-1.9\nRUN go build -o $DEST/client-gen k8s.io/code-generator/cmd/client-gen\nRUN go build -o $DEST/conversion-gen k8s.io/code-generator/cmd/conversion-gen\nRUN go build -o $DEST/deepcopy-gen k8s.io/code-generator/cmd/deepcopy-gen\nRUN go build -o $DEST/defaulter-gen k8s.io/code-generator/cmd/defaulter-gen\nRUN go build -o $DEST/informer-gen k8s.io/code-generator/cmd/informer-gen\nRUN go build -o $DEST/lister-gen k8s.io/code-generator/cmd/lister-gen\nRUN go build -o $DEST/openapi-gen k8s.io/code-generator/cmd/openapi-gen\n#  Build kubernetes-incubator/reference-docs binaries\nFROM golang:1.10-stretch AS reference-docs-darwin\nENV CGO=\"0\"\nENV GOOS=\"darwin\"\nENV GOARCH=\"amd64\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/kubernetes-incubator/reference-docs $GOPATH/src/github.com/kubernetes-incubator/reference-docs --depth=1\nRUN go build -o $DEST/gen-apidocs github.com/kubernetes-incubator/reference-docs/gen-apidocs\n#  Copy all binaries into a single tar.gz file\nFROM golang:1.10-stretch AS darwin\nRUN mkdir -p /usr/local/kubebuilder/bin/\nCOPY --from=etcd-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nCOPY --from=kubernetes-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nCOPY --from=code-generator-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nCOPY --from=reference-docs-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nWORKDIR /usr/local\nRUN tar -czvf /kubebuilder_darwin_amd64.tar.gz kubebuilder/\n#  Host the tar.gz file in a thin image\nFROM alpine:3.7\nCOPY --from=darwin /kubebuilder_darwin_amd64.tar.gz /kubebuilder_darwin_amd64.tar.gz\n","injectedSmells":[],"originalDockerfileHash":"54ea30ce33394e3e9f21d57228838a1a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#    Copyright 2018 The Kubernetes Authors.\n#\n#    Licensed under the Apache License, Version 2.0 (the \"License\");\n#    you may not use this file except in compliance with the License.\n#    You may obtain a copy of the License at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#    limitations under the License.\n#   Build the following into binaries for darwin and then host them in a tar.gz file in an alpine image\n#   - apiserver\n#   - kubectl\n#   - kube-controller-manager\n#   - etcd\n#   - *-gen code generators\n#   - reference-docs\n#   Build k8s.io/kubernetes binaries\nFROM golang:1.9-stretch AS kubernetes-darwin\n#   Install tools\nRUN apt-get update\nRUN apt-get install rsync -y\nRUN go get github.com/jteeuwen/go-bindata/go-bindata\nENV CGO=\"0\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/kubernetes/kubernetes $GOPATH/src/k8s.io/kubernetes --depth=1 -b release-1.9\nWORKDIR /go/src/k8s.io/kubernetes\n#   Build for linux first otherwise it won't work for darwin - :(\nENV KUBE_BUILD_PLATFORMS=\"linux/amd64\"\nRUN make WHAT=cmd/kube-apiserver\nENV KUBE_BUILD_PLATFORMS=\"darwin/amd64\"\nRUN make WHAT=cmd/kube-apiserver\nRUN cp _output/local/bin/$KUBE_BUILD_PLATFORMS/kube-apiserver $DEST\nENV KUBE_BUILD_PLATFORMS=\"linux/amd64\"\nRUN make WHAT=cmd/kube-controller-manager\nENV KUBE_BUILD_PLATFORMS=\"darwin/amd64\"\nRUN make WHAT=cmd/kube-controller-manager\nRUN cp _output/local/bin/$KUBE_BUILD_PLATFORMS/kube-controller-manager $DEST\nENV KUBE_BUILD_PLATFORMS=\"linux/amd64\"\nRUN make WHAT=cmd/kubectl\nENV KUBE_BUILD_PLATFORMS=\"darwin/amd64\"\nRUN make WHAT=cmd/kubectl\nRUN cp _output/local/bin/$KUBE_BUILD_PLATFORMS/kubectl $DEST\n#   Build coreos/etcd binaries\nFROM golang:1.10-stretch AS etcd-darwin\nENV CGO=\"0\"\nENV GOOS=\"darwin\"\nENV GOARCH=\"amd64\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/coreos/etcd $GOPATH/src/github.com/coreos/etcd --depth=1\nRUN go build -o $DEST/etcd github.com/coreos/etcd\n#   Build k8s.io/code-generator binaries\nFROM golang:1.10-stretch AS code-generator-darwin\nENV CGO=\"0\"\nENV GOOS=\"darwin\"\nENV GOARCH=\"amd64\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/kubernetes/code-generator $GOPATH/src/k8s.io/code-generator --depth=1 -b release-1.9\nRUN go build -o $DEST/client-gen k8s.io/code-generator/cmd/client-gen\nRUN go build -o $DEST/conversion-gen k8s.io/code-generator/cmd/conversion-gen\nRUN go build -o $DEST/deepcopy-gen k8s.io/code-generator/cmd/deepcopy-gen\nRUN go build -o $DEST/defaulter-gen k8s.io/code-generator/cmd/defaulter-gen\nRUN go build -o $DEST/informer-gen k8s.io/code-generator/cmd/informer-gen\nRUN go build -o $DEST/lister-gen k8s.io/code-generator/cmd/lister-gen\nRUN go build -o $DEST/openapi-gen k8s.io/code-generator/cmd/openapi-gen\n#   Build kubernetes-incubator/reference-docs binaries\nFROM golang:1.10-stretch AS reference-docs-darwin\nENV CGO=\"0\"\nENV GOOS=\"darwin\"\nENV GOARCH=\"amd64\"\nENV DEST=\"/usr/local/kubebuilder/bin/\"\nRUN mkdir -p $DEST || echo \"\"\nRUN git clone https://github.com/kubernetes-incubator/reference-docs $GOPATH/src/github.com/kubernetes-incubator/reference-docs --depth=1\nRUN go build -o $DEST/gen-apidocs github.com/kubernetes-incubator/reference-docs/gen-apidocs\n#   Copy all binaries into a single tar.gz file\nFROM golang:1.10-stretch AS darwin\nRUN mkdir -p /usr/local/kubebuilder/bin/\nCOPY --from=etcd-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nCOPY --from=kubernetes-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nCOPY --from=code-generator-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nCOPY --from=reference-docs-darwin /usr/local/kubebuilder/bin/* /usr/local/kubebuilder/bin/\nWORKDIR /usr/local\nRUN tar -czvf /kubebuilder_darwin_amd64.tar.gz kubebuilder/\n#   Host the tar.gz file in a thin image\nFROM alpine:3.7\nCOPY --from=darwin /kubebuilder_darwin_amd64.tar.gz /kubebuilder_darwin_amd64.tar.gz\n","originalDockerfileUglifiedHash":"4d0bf5ddcd2ca31e3d5c4b0cbbcc252d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/33346ac1fa984fd06f68aa7bac2fad003ca05f8e.dockerfile"}