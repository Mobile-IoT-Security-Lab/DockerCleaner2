{"seed":1644237333,"processedDockerfileHash":"044f26ca1689b9afc564235802b1a8f9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG PHP_VERSION=7.2.6\nFROM php:${PHP_VERSION}-fpm-alpine3.7\nLABEL maintainer=\"khs1994-docker/lnmp <khs1994@khs1994.com>\"\nENV TZ=\"Asia/Shanghai\" \\\n    APP_ENV=\"development\"\n#   构建变量默认值为原始值，笔记本构建统一使用 docker-compose 构建\n#   国内镜像地址在 docker-compose.yml 中定义\nARG ALPINE_URL=dl-cdn.alpinelinux.org\nRUN sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n && set -xe \\\n && KHS1994_PHP_FPM_APKS=\" git openssh-client bash tini tzdata \" \\\n && KHS1994_PHP_FPM_RUN_DEPS=\" libmemcached libpq libzip libpng freetype libjpeg-turbo yaml \" \\\n && KHS1994_PHP_FPM_BUILD_DEPS=\" libressl-dev libmemcached-dev cyrus-sasl-dev postgresql-dev libzip-dev libpng-dev freetype-dev libjpeg-turbo-dev yaml-dev \" \\\n && apk add $KHS1994_PHP_FPM_RUN_DEPS --no-cache --virtual .khs1994-php-fpm-run-deps \\\n && apk add linux-headers --no-cache \\\n && apk add $KHS1994_PHP_FPM_APKS --no-cache --virtual .khs1994-php-fpm-apks \\\n && apk add $KHS1994_PHP_FPM_BUILD_DEPS --no-cache --virtual .khs1994-php-fpm-build-deps \\\n && docker-php-ext-configure zip --with-libzip \\\n && docker-php-ext-configure gd --disable-gd-jis-conv --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j\"$( nproc ;)\" bcmath pdo_pgsql pdo_mysql zip gd pcntl \\\n && apk add $PHPIZE_DEPS --no-cache --virtual .build-deps \\\n && pecl install mongodb igbinary redis memcached xdebug yaml swoole \\\n && docker-php-ext-enable mongodb redis memcached xdebug yaml igbinary opcache swoole \\\n && apk del .build-deps linux-headers .khs1994-php-fpm-build-deps \\\n && rm -rf /tmp/*\n#   config opcache\n#   && echo 'opcache.enable_cli=1' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini \\\n#   && echo 'opcache.file_cache=/tmp' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini\n#   install composer\nENV COMPOSER_ALLOW_SUPERUSER=\"1\" \\\n    COMPOSER_HOME=\"/tmp\" \\\n    COMPOSER_VERSION=\"1.6.5\" \\\n    PS1=\"[\\u@\\h \\w]# \"\n#   https://github.com/composer/docker\nRUN echo \"memory_limit=-1\" > \"$PHP_INI_DIR/conf.d/memory-limit.ini\" \\\n && echo \"date.timezone=${PHP_TIMEZONE:-PRC}\" > \"$PHP_INI_DIR/conf.d/date_timezone.ini\" \\\n && curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/b107d959a5924af895807021fcef4ffec5a76aa9/web/installer \\\n && php -r \" $signature = '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061'; $hash = hash('SHA384', file_get_contents('/tmp/installer.php')); if (!hash_equals($signature, $hash)) { unlink('/tmp/installer.php'); echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL; exit(1); }\" \\\n && php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && composer --ansi --version --no-interaction \\\n && curl -fsSL https://raw.githubusercontent.com/composer/docker/master/1.6/docker-entrypoint.sh > /docker-entrypoint.composer.sh \\\n && chmod +x /docker-entrypoint.composer.sh \\\n && composer config -g repo.packagist composer https://packagist.phpcomposer.com \\\n && composer global require --prefer-dist \"laravel/installer\" \\\n && composer global require --prefer-dist \"friendsofphp/php-cs-fixer\" \\\n && curl -fsSL http://get.sensiolabs.org/sami.phar > /usr/local/bin/sami \\\n && ln -sf /tmp/vendor/bin/* /usr/local/bin \\\n && chmod +x /usr/local/bin/sami \\\n && rm -rf /tmp/cache /tmp/.htaccess /tmp/installer.php /tmp/*.pub \\\n && mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.default \\\n && mkdir -p /var/log/php-fpm \\\n && ln -sf /dev/stdout /var/log/php-fpm/access.log \\\n && ln -sf /dev/stderr /var/log/php-fpm/error.log \\\n && ln -sf /dev/stderr /var/log/php-fpm/xdebug-remote.log \\\n && chmod -R 777 /var/log/php-fpm\nWORKDIR /app\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"ARG PHP_VERSION=7.2.6\nFROM php:${PHP_VERSION}-fpm-alpine3.7\nLABEL maintainer=\"khs1994-docker/lnmp <khs1994@khs1994.com>\"\nENV TZ=\"Asia/Shanghai\" \\\n    APP_ENV=\"development\"\n#  构建变量默认值为原始值，笔记本构建统一使用 docker-compose 构建\n#  国内镜像地址在 docker-compose.yml 中定义\nARG ALPINE_URL=dl-cdn.alpinelinux.org\nRUN sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n && set -xe \\\n && KHS1994_PHP_FPM_APKS=\" git openssh-client bash tini tzdata \" \\\n && KHS1994_PHP_FPM_RUN_DEPS=\" libmemcached libpq libzip libpng freetype libjpeg-turbo yaml \" \\\n && KHS1994_PHP_FPM_BUILD_DEPS=\" libressl-dev libmemcached-dev cyrus-sasl-dev postgresql-dev libzip-dev libpng-dev freetype-dev libjpeg-turbo-dev yaml-dev \" \\\n && apk add --no-cache --virtual .khs1994-php-fpm-run-deps $KHS1994_PHP_FPM_RUN_DEPS \\\n && apk add --no-cache linux-headers \\\n && apk add --no-cache --virtual .khs1994-php-fpm-apks $KHS1994_PHP_FPM_APKS \\\n && apk add --no-cache --virtual .khs1994-php-fpm-build-deps $KHS1994_PHP_FPM_BUILD_DEPS \\\n && docker-php-ext-configure zip --with-libzip \\\n && docker-php-ext-configure gd --disable-gd-jis-conv --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j\"$( nproc ;)\" bcmath pdo_pgsql pdo_mysql zip gd pcntl \\\n && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n && pecl install mongodb igbinary redis memcached xdebug yaml swoole \\\n && docker-php-ext-enable mongodb redis memcached xdebug yaml igbinary opcache swoole \\\n && apk del .build-deps linux-headers .khs1994-php-fpm-build-deps \\\n && rm -rf /tmp/*\n#  config opcache\n#  && echo 'opcache.enable_cli=1' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini \\\n#  && echo 'opcache.file_cache=/tmp' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini\n#  install composer\nENV COMPOSER_ALLOW_SUPERUSER=\"1\" \\\n    COMPOSER_HOME=\"/tmp\" \\\n    COMPOSER_VERSION=\"1.6.5\" \\\n    PS1=\"[\\u@\\h \\w]# \"\n#  https://github.com/composer/docker\nRUN echo \"memory_limit=-1\" > \"$PHP_INI_DIR/conf.d/memory-limit.ini\" \\\n && echo \"date.timezone=${PHP_TIMEZONE:-PRC}\" > \"$PHP_INI_DIR/conf.d/date_timezone.ini\" \\\n && curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/b107d959a5924af895807021fcef4ffec5a76aa9/web/installer \\\n && php -r \" $signature = '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061'; $hash = hash('SHA384', file_get_contents('/tmp/installer.php')); if (!hash_equals($signature, $hash)) { unlink('/tmp/installer.php'); echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL; exit(1); }\" \\\n && php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && composer --ansi --version --no-interaction \\\n && curl -fsSL https://raw.githubusercontent.com/composer/docker/master/1.6/docker-entrypoint.sh > /docker-entrypoint.composer.sh \\\n && chmod +x /docker-entrypoint.composer.sh \\\n && composer config -g repo.packagist composer https://packagist.phpcomposer.com \\\n && composer global require --prefer-dist \"laravel/installer\" \\\n && composer global require --prefer-dist \"friendsofphp/php-cs-fixer\" \\\n && curl -fsSL http://get.sensiolabs.org/sami.phar > /usr/local/bin/sami \\\n && ln -sf /tmp/vendor/bin/* /usr/local/bin \\\n && chmod +x /usr/local/bin/sami \\\n && rm -rf /tmp/cache /tmp/.htaccess /tmp/installer.php /tmp/*.pub \\\n && mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.default \\\n && mkdir -p /var/log/php-fpm \\\n && ln -sf /dev/stdout /var/log/php-fpm/access.log \\\n && ln -sf /dev/stderr /var/log/php-fpm/error.log \\\n && ln -sf /dev/stderr /var/log/php-fpm/xdebug-remote.log \\\n && chmod -R 777 /var/log/php-fpm\nWORKDIR /app\n","injectedSmells":[],"originalDockerfileHash":"334e343e267fef83ad97971462011215","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG PHP_VERSION=7.2.6\nFROM php:${PHP_VERSION}-fpm-alpine3.7\nLABEL maintainer=\"khs1994-docker/lnmp <khs1994@khs1994.com>\"\nENV TZ=\"Asia/Shanghai\" \\\n    APP_ENV=\"development\"\n#   构建变量默认值为原始值，笔记本构建统一使用 docker-compose 构建\n#   国内镜像地址在 docker-compose.yml 中定义\nARG ALPINE_URL=dl-cdn.alpinelinux.org\nRUN sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n && set -xe \\\n && KHS1994_PHP_FPM_APKS=\" git openssh-client bash tini tzdata \" \\\n && KHS1994_PHP_FPM_RUN_DEPS=\" libmemcached libpq libzip libpng freetype libjpeg-turbo yaml \" \\\n && KHS1994_PHP_FPM_BUILD_DEPS=\" libressl-dev libmemcached-dev cyrus-sasl-dev postgresql-dev libzip-dev libpng-dev freetype-dev libjpeg-turbo-dev yaml-dev \" \\\n && apk add --no-cache --virtual .khs1994-php-fpm-run-deps $KHS1994_PHP_FPM_RUN_DEPS \\\n && apk add --no-cache linux-headers \\\n && apk add --no-cache --virtual .khs1994-php-fpm-apks $KHS1994_PHP_FPM_APKS \\\n && apk add --no-cache --virtual .khs1994-php-fpm-build-deps $KHS1994_PHP_FPM_BUILD_DEPS \\\n && docker-php-ext-configure zip --with-libzip \\\n && docker-php-ext-configure gd --disable-gd-jis-conv --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j\"$( nproc ;)\" bcmath pdo_pgsql pdo_mysql zip gd pcntl \\\n && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n && pecl install mongodb igbinary redis memcached xdebug yaml swoole \\\n && docker-php-ext-enable mongodb redis memcached xdebug yaml igbinary opcache swoole \\\n && apk del .build-deps linux-headers .khs1994-php-fpm-build-deps \\\n && rm -rf /tmp/*\n#   config opcache\n#   && echo 'opcache.enable_cli=1' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini \\\n#   && echo 'opcache.file_cache=/tmp' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini\n#   install composer\nENV COMPOSER_ALLOW_SUPERUSER=\"1\" \\\n    COMPOSER_HOME=\"/tmp\" \\\n    COMPOSER_VERSION=\"1.6.5\" \\\n    PS1=\"[\\u@\\h \\w]# \"\n#   https://github.com/composer/docker\nRUN echo \"memory_limit=-1\" > \"$PHP_INI_DIR/conf.d/memory-limit.ini\" \\\n && echo \"date.timezone=${PHP_TIMEZONE:-PRC}\" > \"$PHP_INI_DIR/conf.d/date_timezone.ini\" \\\n && curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/b107d959a5924af895807021fcef4ffec5a76aa9/web/installer \\\n && php -r \" $signature = '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061'; $hash = hash('SHA384', file_get_contents('/tmp/installer.php')); if (!hash_equals($signature, $hash)) { unlink('/tmp/installer.php'); echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL; exit(1); }\" \\\n && php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && composer --ansi --version --no-interaction \\\n && curl -fsSL https://raw.githubusercontent.com/composer/docker/master/1.6/docker-entrypoint.sh > /docker-entrypoint.composer.sh \\\n && chmod +x /docker-entrypoint.composer.sh \\\n && composer config -g repo.packagist composer https://packagist.phpcomposer.com \\\n && composer global require --prefer-dist \"laravel/installer\" \\\n && composer global require --prefer-dist \"friendsofphp/php-cs-fixer\" \\\n && curl -fsSL http://get.sensiolabs.org/sami.phar > /usr/local/bin/sami \\\n && ln -sf /tmp/vendor/bin/* /usr/local/bin \\\n && chmod +x /usr/local/bin/sami \\\n && rm -rf /tmp/cache /tmp/.htaccess /tmp/installer.php /tmp/*.pub \\\n && mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.default \\\n && mkdir -p /var/log/php-fpm \\\n && ln -sf /dev/stdout /var/log/php-fpm/access.log \\\n && ln -sf /dev/stderr /var/log/php-fpm/error.log \\\n && ln -sf /dev/stderr /var/log/php-fpm/xdebug-remote.log \\\n && chmod -R 777 /var/log/php-fpm\nWORKDIR /app\n","originalDockerfileUglifiedHash":"9655e4715b64ccccc800869cb6d1905f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b624014b81a3d047140d3c0672871e245a018084.dockerfile"}