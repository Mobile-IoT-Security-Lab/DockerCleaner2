{"seed":652871130,"processedDockerfileHash":"81b56ab406ab023fa7f66851cd080b51","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  https://github.com/CircleCI-Public/circleci-dockerfiles/blob/master/golang/images/1.12.4/Dockerfile\nFROM golang:1.12.4\n#   make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Debian Jessie is EOL'd and original repos don't work.\n#   Switch to the archive mirror until we can get people to\n#   switch to Stretch.\nRUN if grep -q Debian /etc/os-release \\\n && grep -q jessie /etc/os-release ; then rm /etc/apt/sources.list \\\n && echo \"deb http://archive.debian.org/debian/ jessie main\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/debian-security jessie/updates main\" >> /etc/apt/sources.list; fi\n#   Make sure PATH includes ~/.local/bin\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839155\nRUN echo 'PATH=\"$HOME/.local/bin:$PATH\"' >> /etc/profile.d/user-local-path.sh\n#   man directory is missing in some base images\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install --no-install-recommends git apt locales sudo openssh-client ca-certificates tar gzip net-tools netcat unzip zip bzip2 gnupg curl wget -y\n#   Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#   install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   Install Docker\n#   Docker.com returns the URL of the latest binary when you hit a directory listing\n#   We curl this URL and `grep` the version out.\n#   The output looks like this:\n#  >    # To install, run the following commands as root:\n#  >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#  >\n#  >    # Then start docker in daemon mode:\n#  >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#   BEGIN IMAGE CUSTOMIZATIONS\nRUN curl https://raw.githubusercontent.com/golang/dep/master/install.sh | INSTALL_DIRECTORY=/usr/local/bin sh\nRUN curl -sSL https://github.com/gotestyourself/gotestsum/releases/download/v0.3.4/gotestsum_0.3.4_linux_amd64.tar.gz | tar -xz -C /usr/local/bin gotestsum\n#  Add kubectl cli\nRUN curl -L https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#  Add helm client\nRUN curl -L https://storage.googleapis.com/kubernetes-helm/helm-v2.12.2-linux-amd64.tar.gz -o helm.tar.gz \\\n && tar zxf helm.tar.gz \\\n && mv linux-amd64/helm /usr/local/bin \\\n && rm -rf helm.tar.gz linux-amd64\nARG OPERATOR_SDK_VERSION\n#   Install Operator SDK\nRUN mkdir -p $GOPATH/src/github.com/operator-framework \\\n && go get -u github.com/operator-framework/operator-sdk || true \\\n && cd $GOPATH/src/github.com/operator-framework/operator-sdk \\\n && git checkout $OPERATOR_SDK_VERSION \\\n && make dep \\\n && make install \\\n && make clean \\\n && rm -rf vendor \\\n && rm -rf .git \\\n && go clean \\\n && rm -rf /root/.cache \\\n && rm -rf /go/pkg/dep/sources/\n#   END IMAGE CUSTOMIZATIONS\n#  USER circleci\nWORKDIR /go/src/github.com/Orange-OpenSource/cassandra-k8s-operator\nCMD [\"/bin/sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# https://github.com/CircleCI-Public/circleci-dockerfiles/blob/master/golang/images/1.12.4/Dockerfile\nFROM golang:1.12.4\n#  make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Debian Jessie is EOL'd and original repos don't work.\n#  Switch to the archive mirror until we can get people to\n#  switch to Stretch.\nRUN if grep -q Debian /etc/os-release \\\n && grep -q jessie /etc/os-release ; then rm /etc/apt/sources.list \\\n && echo \"deb http://archive.debian.org/debian/ jessie main\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/debian-security jessie/updates main\" >> /etc/apt/sources.list; fi\n#  Make sure PATH includes ~/.local/bin\n#  https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839155\nRUN echo 'PATH=\"$HOME/.local/bin:$PATH\"' >> /etc/profile.d/user-local-path.sh\n#  man directory is missing in some base images\n#  https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install git apt locales sudo openssh-client ca-certificates tar gzip net-tools netcat unzip zip bzip2 gnupg curl wget -y\n#  Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#  Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#  install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#  Install Docker\n#  Docker.com returns the URL of the latest binary when you hit a directory listing\n#  We curl this URL and `grep` the version out.\n#  The output looks like this:\n# >    # To install, run the following commands as root:\n# >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n# >\n# >    # Then start docker in daemon mode:\n# >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#  BEGIN IMAGE CUSTOMIZATIONS\nRUN curl https://raw.githubusercontent.com/golang/dep/master/install.sh | INSTALL_DIRECTORY=/usr/local/bin sh\nRUN curl -sSL https://github.com/gotestyourself/gotestsum/releases/download/v0.3.4/gotestsum_0.3.4_linux_amd64.tar.gz | tar -xz -C /usr/local/bin gotestsum\n# Add kubectl cli\nRUN curl -L https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n# Add helm client\nRUN curl -L https://storage.googleapis.com/kubernetes-helm/helm-v2.12.2-linux-amd64.tar.gz -o helm.tar.gz \\\n && tar zxf helm.tar.gz \\\n && mv linux-amd64/helm /usr/local/bin \\\n && rm -rf helm.tar.gz linux-amd64\nARG OPERATOR_SDK_VERSION\n#  Install Operator SDK\nRUN mkdir -p $GOPATH/src/github.com/operator-framework \\\n && go get -u github.com/operator-framework/operator-sdk || true \\\n && cd $GOPATH/src/github.com/operator-framework/operator-sdk \\\n && git checkout $OPERATOR_SDK_VERSION \\\n && make dep \\\n && make install \\\n && make clean \\\n && rm -rf vendor \\\n && rm -rf .git \\\n && go clean \\\n && rm -rf /root/.cache \\\n && rm -rf /go/pkg/dep/sources/\n#  END IMAGE CUSTOMIZATIONS\n# USER circleci\nWORKDIR /go/src/github.com/Orange-OpenSource/cassandra-k8s-operator\nCMD [\"/bin/sh\"]\n","injectedSmells":[],"originalDockerfileHash":"c04f3d036d4e23f02277366a26ea05da","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  https://github.com/CircleCI-Public/circleci-dockerfiles/blob/master/golang/images/1.12.4/Dockerfile\nFROM golang:1.12.4\n#   make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Debian Jessie is EOL'd and original repos don't work.\n#   Switch to the archive mirror until we can get people to\n#   switch to Stretch.\nRUN if grep -q Debian /etc/os-release \\\n && grep -q jessie /etc/os-release ; then rm /etc/apt/sources.list \\\n && echo \"deb http://archive.debian.org/debian/ jessie main\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/debian-security jessie/updates main\" >> /etc/apt/sources.list; fi\n#   Make sure PATH includes ~/.local/bin\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839155\nRUN echo 'PATH=\"$HOME/.local/bin:$PATH\"' >> /etc/profile.d/user-local-path.sh\n#   man directory is missing in some base images\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install git apt locales sudo openssh-client ca-certificates tar gzip net-tools netcat unzip zip bzip2 gnupg curl wget -y\n#   Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#   install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   Install Docker\n#   Docker.com returns the URL of the latest binary when you hit a directory listing\n#   We curl this URL and `grep` the version out.\n#   The output looks like this:\n#  >    # To install, run the following commands as root:\n#  >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#  >\n#  >    # Then start docker in daemon mode:\n#  >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#   BEGIN IMAGE CUSTOMIZATIONS\nRUN curl https://raw.githubusercontent.com/golang/dep/master/install.sh | INSTALL_DIRECTORY=/usr/local/bin sh\nRUN curl -sSL https://github.com/gotestyourself/gotestsum/releases/download/v0.3.4/gotestsum_0.3.4_linux_amd64.tar.gz | tar -xz -C /usr/local/bin gotestsum\n#  Add kubectl cli\nRUN curl -L https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#  Add helm client\nRUN curl -L https://storage.googleapis.com/kubernetes-helm/helm-v2.12.2-linux-amd64.tar.gz -o helm.tar.gz \\\n && tar zxf helm.tar.gz \\\n && mv linux-amd64/helm /usr/local/bin \\\n && rm -rf helm.tar.gz linux-amd64\nARG OPERATOR_SDK_VERSION\n#   Install Operator SDK\nRUN mkdir -p $GOPATH/src/github.com/operator-framework \\\n && go get -u github.com/operator-framework/operator-sdk || true \\\n && cd $GOPATH/src/github.com/operator-framework/operator-sdk \\\n && git checkout $OPERATOR_SDK_VERSION \\\n && make dep \\\n && make install \\\n && make clean \\\n && rm -rf vendor \\\n && rm -rf .git \\\n && go clean \\\n && rm -rf /root/.cache \\\n && rm -rf /go/pkg/dep/sources/\n#   END IMAGE CUSTOMIZATIONS\n#  USER circleci\nWORKDIR /go/src/github.com/Orange-OpenSource/cassandra-k8s-operator\nCMD [\"/bin/sh\"]\n","originalDockerfileUglifiedHash":"f292b4aad5a88b40befaf12288d18105","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f4508dc7e1698f29323eb3c5266037e81da571f7.dockerfile"}