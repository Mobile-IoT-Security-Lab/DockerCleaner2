{"seed":2539146237,"processedDockerfileHash":"3149625e8f14e3e9ef6d5fe52f1aae5a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:0.9.11\n#   c.f. https://github.com/phusion/baseimage-docker\nMAINTAINER Akimichi Tatsukawa <akimichi.tatsukawa@gmail.com>\nENV REFRESHED_AT=\"2016-10-24(Mon)\"\n#  # Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nRUN sed -i~ -e 's;http://archive.ubuntu.com/ubuntu;http://ftp.jaist.ac.jp/pub/Linux/ubuntu;' /etc/apt/sources.list\nRUN :\n#  # Japanese Environment\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y language-pack-ja\nENV LANG=\"ja_JP.UTF-8\"\nRUN update-locale LANG=ja_JP.UTF-8\nRUN (mv /etc/localtime /etc/localtime.org \\\n && ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime )\n#  # Development Environment\nENV EDITOR=\"vim\"\nRUN update-alternatives --set editor /usr/bin/vim.basic\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y git wget curl unzip build-essential python-dev rake\nCOPY .profile /root\nRUN mkdir -p /workspace/nodejs \\\n && mkdir -p /workspace/scala \\\n && mkdir -p /workspace/haskell\n#  ########################\n#  # sbt インストール\n#  ########################\nENV SCALA_VERSION=\"2.11.7\"\nENV SBT_VERSION=\"0.13.8\"\nCOPY build.sbt /workspace/scala\nCOPY project /workspace/scala/project\nCOPY src /workspace/scala/src\n#   INSTALL JAVA 7 add webupd8 repository\nRUN echo \"===> add webupd8 repository...\" \\\n && echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee /etc/apt/sources.list.d/webupd8team-java.list \\\n && echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 \\\n && : \\\n && echo \"===> install Java\" \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes oracle-java7-installer oracle-java7-set-default \\\n && echo \"===> clean up...\" \\\n && rm -rf /var/cache/oracle-jdk7-installer \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   scala\nRUN cd /root \\\n && curl -o scala-$SCALA_VERSION.tgz http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz \\\n && tar -xf scala-$SCALA_VERSION.tgz \\\n && rm scala-$SCALA_VERSION.tgz\n#    sbt\nWORKDIR /workspace/scala\nRUN curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb \\\n && dpkg -i sbt-$SBT_VERSION.deb \\\n && rm sbt-$SBT_VERSION.deb \\\n && :\nRUN sbt update\n#  ##############################\n#   Install nvm with node and npm\n#  ##############################\nENV NODE_VERSION=\"0.12.0\"\n#   COPY test /workspace/nodejs/test\n#   COPY lib /workspace/nodejs/lib\n#   COPY .nvmrc gulpfile.js package.json /workspace/nodejs/\nRUN touch $HOME/.ssh/known_hosts\nRUN ssh-keyscan github.com >> $HOME/.ssh/known_hosts\nRUN git clone https://github.com/akimichi/functionaljs.git /workspace/nodejs\n#   install node.js \nWORKDIR /workspace/nodejs\nRUN add-apt-repository ppa:chris-lea/node.js \\\n && :\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs\n#   Replace shell with bash so we can source files\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nWORKDIR /root\n#   setup the nvm environment\n#   Install nvm with node and npm\nRUN git clone https://github.com/creationix/nvm.git $HOME/.nvm\nRUN bash \\\n && source $HOME/.nvm/nvm.sh \\\n && nvm install v$NODE_VERSION \\\n && nvm alias default v$NODE_VERSION \\\n && nvm use default\nENV NODE_PATH=\"$NVM_DIR/v$NODE_VERSION/lib/node_modules\"\nENV PATH=\"$NVM_DIR/v$NODE_VERSION/bin:$PATH\"\nRUN npm install node-gyp@9.3.1 -g \\\n && npm install mocha@10.2.0 -g \\\n && npm install gulp@4.0.2 -g \\\n && npm install coffee-script@1.12.7 -g\nWORKDIR /workspace\nRUN cd /workspace/nodejs \\\n && npm install\n#  ################\n#   install haskell\n#  ################\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get dist-upgrade -qqy \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common -qqy ) \\\n && add-apt-repository -y ppa:hvr/ghc \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends cabal-install-1.22 ghc-7.10.2 happy-1.19.5 alex-3.1.4 -qqy ) \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && apt-get autoclean \\\n && rm -rf /usr/share/man/?? \\\n && rm -rf /usr/share/man/??_*\nENV PATH=\"${HOME}/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.2/bin:${PATH}\"\nWORKDIR /workspace/haskell\nRUN wget https://www.stackage.org/lts/cabal.config\n#   install stackage\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442\nRUN echo 'deb http://download.fpcomplete.com/ubuntu trusty main' | tee /etc/apt/sources.list.d/fpco.list\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends stack -y )\nCOPY src /workspace/haskell/src/\nCOPY functionaljs.cabal Setup.hs LICENSE /workspace/haskell/\nRUN stack init\nRUN stack setup\n#   cabal\nRUN cabal update\nRUN cabal install 'cabal-install >= 0.10'\nRUN cabal install\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nVOLUME /workspace\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:0.9.11\n#  c.f. https://github.com/phusion/baseimage-docker\nMAINTAINER Akimichi Tatsukawa <akimichi.tatsukawa@gmail.com>\nENV REFRESHED_AT=\"2016-10-24(Mon)\"\n# # Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nRUN sed -i~ -e 's;http://archive.ubuntu.com/ubuntu;http://ftp.jaist.ac.jp/pub/Linux/ubuntu;' /etc/apt/sources.list\nRUN apt-get update -yqq\n# # Japanese Environment\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y language-pack-ja\nENV LANG=\"ja_JP.UTF-8\"\nRUN update-locale LANG=ja_JP.UTF-8\nRUN (mv /etc/localtime /etc/localtime.org \\\n && ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime )\n# # Development Environment\nENV EDITOR=\"vim\"\nRUN update-alternatives --set editor /usr/bin/vim.basic\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y git wget curl unzip build-essential python-dev rake\nCOPY .profile /root\nRUN mkdir -p /workspace/nodejs \\\n && mkdir -p /workspace/scala \\\n && mkdir -p /workspace/haskell\n# ########################\n# # sbt インストール\n# ########################\nENV SCALA_VERSION=\"2.11.7\"\nENV SBT_VERSION=\"0.13.8\"\nCOPY build.sbt /workspace/scala\nCOPY project /workspace/scala/project\nCOPY src /workspace/scala/src\n#  INSTALL JAVA 7 add webupd8 repository\nRUN echo \"===> add webupd8 repository...\" \\\n && echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee /etc/apt/sources.list.d/webupd8team-java.list \\\n && echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 \\\n && apt-get update \\\n && echo \"===> install Java\" \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes oracle-java7-installer oracle-java7-set-default \\\n && echo \"===> clean up...\" \\\n && rm -rf /var/cache/oracle-jdk7-installer \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  scala\nRUN cd /root \\\n && curl -o scala-$SCALA_VERSION.tgz http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz \\\n && tar -xf scala-$SCALA_VERSION.tgz \\\n && rm scala-$SCALA_VERSION.tgz\n#   sbt\nWORKDIR /workspace/scala\nRUN curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb \\\n && dpkg -i sbt-$SBT_VERSION.deb \\\n && rm sbt-$SBT_VERSION.deb \\\n && apt-get update\nRUN sbt update\n# ##############################\n#  Install nvm with node and npm\n# ##############################\nENV NODE_VERSION=\"0.12.0\"\n#  COPY test /workspace/nodejs/test\n#  COPY lib /workspace/nodejs/lib\n#  COPY .nvmrc gulpfile.js package.json /workspace/nodejs/\nRUN touch $HOME/.ssh/known_hosts\nRUN ssh-keyscan github.com >> $HOME/.ssh/known_hosts\nRUN git clone https://github.com/akimichi/functionaljs.git /workspace/nodejs\n#  install node.js \nWORKDIR /workspace/nodejs\nRUN add-apt-repository ppa:chris-lea/node.js \\\n && apt-get update -qq\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs\n#  Replace shell with bash so we can source files\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nWORKDIR /root\n#  setup the nvm environment\n#  Install nvm with node and npm\nRUN git clone https://github.com/creationix/nvm.git $HOME/.nvm\nRUN bash \\\n && source $HOME/.nvm/nvm.sh \\\n && nvm install v$NODE_VERSION \\\n && nvm alias default v$NODE_VERSION \\\n && nvm use default\nENV NODE_PATH=\"$NVM_DIR/v$NODE_VERSION/lib/node_modules\"\nENV PATH=\"$NVM_DIR/v$NODE_VERSION/bin:$PATH\"\nRUN npm install node-gyp -g \\\n && npm install mocha -g \\\n && npm install gulp -g \\\n && npm install coffee-script -g\nWORKDIR /workspace\nRUN cd /workspace/nodejs \\\n && npm install\n# ################\n#  install haskell\n# ################\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get dist-upgrade -qqy \\\n && apt-get install --no-install-recommends software-properties-common -qqy \\\n && add-apt-repository -y ppa:hvr/ghc \\\n && apt-get update \\\n && apt-get install cabal-install-1.22 ghc-7.10.2 happy-1.19.5 alex-3.1.4 -qqy \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && apt-get autoclean \\\n && rm -rf /usr/share/man/?? \\\n && rm -rf /usr/share/man/??_*\nENV PATH=\"${HOME}/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.2/bin:${PATH}\"\nWORKDIR /workspace/haskell\nRUN wget https://www.stackage.org/lts/cabal.config\n#  install stackage\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442\nRUN echo 'deb http://download.fpcomplete.com/ubuntu trusty main' | tee /etc/apt/sources.list.d/fpco.list\nRUN apt-get update \\\n && apt-get install stack -y\nCOPY src /workspace/haskell/src/\nCOPY functionaljs.cabal Setup.hs LICENSE /workspace/haskell/\nRUN stack init\nRUN stack setup\n#  cabal\nRUN cabal update\nRUN cabal install 'cabal-install >= 0.10'\nRUN cabal install\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nVOLUME /workspace\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"89fc3b8401b8ceb06172b8b397584bfd","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:0.9.11\n#   c.f. https://github.com/phusion/baseimage-docker\nMAINTAINER Akimichi Tatsukawa <akimichi.tatsukawa@gmail.com>\nENV REFRESHED_AT=\"2016-10-24(Mon)\"\n#  # Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nRUN sed -i~ -e 's;http://archive.ubuntu.com/ubuntu;http://ftp.jaist.ac.jp/pub/Linux/ubuntu;' /etc/apt/sources.list\nRUN apt-get update -yqq\n#  # Japanese Environment\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y language-pack-ja\nENV LANG=\"ja_JP.UTF-8\"\nRUN update-locale LANG=ja_JP.UTF-8\nRUN (mv /etc/localtime /etc/localtime.org \\\n && ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime )\n#  # Development Environment\nENV EDITOR=\"vim\"\nRUN update-alternatives --set editor /usr/bin/vim.basic\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y git wget curl unzip build-essential python-dev rake\nCOPY .profile /root\nRUN mkdir -p /workspace/nodejs \\\n && mkdir -p /workspace/scala \\\n && mkdir -p /workspace/haskell\n#  ########################\n#  # sbt インストール\n#  ########################\nENV SCALA_VERSION=\"2.11.7\"\nENV SBT_VERSION=\"0.13.8\"\nCOPY build.sbt /workspace/scala\nCOPY project /workspace/scala/project\nCOPY src /workspace/scala/src\n#   INSTALL JAVA 7 add webupd8 repository\nRUN echo \"===> add webupd8 repository...\" \\\n && echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee /etc/apt/sources.list.d/webupd8team-java.list \\\n && echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 \\\n && apt-get update \\\n && echo \"===> install Java\" \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes oracle-java7-installer oracle-java7-set-default \\\n && echo \"===> clean up...\" \\\n && rm -rf /var/cache/oracle-jdk7-installer \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   scala\nRUN cd /root \\\n && curl -o scala-$SCALA_VERSION.tgz http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz \\\n && tar -xf scala-$SCALA_VERSION.tgz \\\n && rm scala-$SCALA_VERSION.tgz\n#    sbt\nWORKDIR /workspace/scala\nRUN curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb \\\n && dpkg -i sbt-$SBT_VERSION.deb \\\n && rm sbt-$SBT_VERSION.deb \\\n && apt-get update\nRUN sbt update\n#  ##############################\n#   Install nvm with node and npm\n#  ##############################\nENV NODE_VERSION=\"0.12.0\"\n#   COPY test /workspace/nodejs/test\n#   COPY lib /workspace/nodejs/lib\n#   COPY .nvmrc gulpfile.js package.json /workspace/nodejs/\nRUN touch $HOME/.ssh/known_hosts\nRUN ssh-keyscan github.com >> $HOME/.ssh/known_hosts\nRUN git clone https://github.com/akimichi/functionaljs.git /workspace/nodejs\n#   install node.js \nWORKDIR /workspace/nodejs\nRUN add-apt-repository ppa:chris-lea/node.js \\\n && apt-get update -qq\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs\n#   Replace shell with bash so we can source files\nRUN rm /bin/sh \\\n && ln -s /bin/bash /bin/sh\nWORKDIR /root\n#   setup the nvm environment\n#   Install nvm with node and npm\nRUN git clone https://github.com/creationix/nvm.git $HOME/.nvm\nRUN bash \\\n && source $HOME/.nvm/nvm.sh \\\n && nvm install v$NODE_VERSION \\\n && nvm alias default v$NODE_VERSION \\\n && nvm use default\nENV NODE_PATH=\"$NVM_DIR/v$NODE_VERSION/lib/node_modules\"\nENV PATH=\"$NVM_DIR/v$NODE_VERSION/bin:$PATH\"\nRUN npm install node-gyp -g \\\n && npm install mocha -g \\\n && npm install gulp -g \\\n && npm install coffee-script -g\nWORKDIR /workspace\nRUN cd /workspace/nodejs \\\n && npm install\n#  ################\n#   install haskell\n#  ################\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get dist-upgrade -qqy \\\n && apt-get install --no-install-recommends software-properties-common -qqy \\\n && add-apt-repository -y ppa:hvr/ghc \\\n && apt-get update \\\n && apt-get install cabal-install-1.22 ghc-7.10.2 happy-1.19.5 alex-3.1.4 -qqy \\\n && apt-get autoremove -qqy \\\n && apt-get clean \\\n && apt-get autoclean \\\n && rm -rf /usr/share/man/?? \\\n && rm -rf /usr/share/man/??_*\nENV PATH=\"${HOME}/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.2/bin:${PATH}\"\nWORKDIR /workspace/haskell\nRUN wget https://www.stackage.org/lts/cabal.config\n#   install stackage\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442\nRUN echo 'deb http://download.fpcomplete.com/ubuntu trusty main' | tee /etc/apt/sources.list.d/fpco.list\nRUN apt-get update \\\n && apt-get install stack -y\nCOPY src /workspace/haskell/src/\nCOPY functionaljs.cabal Setup.hs LICENSE /workspace/haskell/\nRUN stack init\nRUN stack setup\n#   cabal\nRUN cabal update\nRUN cabal install 'cabal-install >= 0.10'\nRUN cabal install\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nVOLUME /workspace\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"874b22cf4e194ca0729554ba3652a931","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ab1712c36ed8319d84414f99fe73bbf650156dcf.dockerfile"}