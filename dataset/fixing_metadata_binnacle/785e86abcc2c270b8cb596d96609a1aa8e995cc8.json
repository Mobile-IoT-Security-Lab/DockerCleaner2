{"seed":3610620753,"processedDockerfileHash":"9ec62ccb0477c61731d4275ef01de8d1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##############################\n#   Build the FFmpeg-build image.\nFROM alpine:3.8 AS build\nARG FFMPEG_VERSION=ffmpeg-snapshot.tar.bz2\nARG AOM_VERSION=master\nARG PREFIX=/opt/ffmpeg\nARG PKG_CONFIG_PATH=/opt/ffmpeg/lib64/pkgconfig\nARG LD_LIBRARY_PATH=/opt/ffmpeg/lib\nARG MAKEFLAGS=\"-j4\"\n#   FFmpeg build dependencies.\nRUN apk add build-base=0.5-r1 cmake=3.11.1-r2 freetype-dev=2.9.1-r1 lame-dev=3.100-r0 libogg-dev=1.3.3-r2 libass=0.13.7-r1 libass-dev=0.13.7-r1 libvpx-dev=1.6.1-r0 libvorbis-dev=1.3.6-r2 libwebp-dev=1.0.0-r0 libtheora-dev=1.1.1-r13 libtool=2.4.6-r5 opus-dev=1.2.1-r1 perl=5.26.3-r0 pkgconf=1.5.3-r0 pkgconfig python rtmpdump-dev=2.4_git20160909-r5 wget=1.20.3-r0 x264-dev=20180304-r1 x265-dev=2.7-r1 yasm=1.3.0-r1 --update\n#   Install fdk-aac from testing.\nRUN echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \\\n && apk add fdk-aac-dev --update\n#   Build libaom for av1.\nRUN mkdir -p /tmp/aom \\\n && cd /tmp/ \\\n && wget https://aomedia.googlesource.com/aom/+archive/${AOM_VERSION}.tar.gz \\\n && tar zxf ${AOM_VERSION}.tar.gz \\\n && rm ${AOM_VERSION}.tar.gz \\\n && rm -rf CMakeCache.txt CMakeFiles \\\n && mkdir -p ./aom_build \\\n && cd ./aom_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 .. \\\n && make \\\n && make install\n#   Get ffmpeg source.\nRUN cd /tmp/ \\\n && wget https://ffmpeg.org/releases/${FFMPEG_VERSION} \\\n && tar xjvf ${FFMPEG_VERSION} \\\n && rm ${FFMPEG_VERSION}\n#   Compile ffmpeg.\nRUN cd /tmp/ffmpeg \\\n && ./configure --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libaom --enable-libmp3lame --enable-libx264 --enable-libx265 --enable-libvpx --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk-aac --enable-libass --enable-libwebp --enable-librtmp --enable-postproc --enable-avresample --enable-libfreetype --enable-openssl --disable-debug --disable-doc --disable-ffplay --extra-cflags=\"-I${PREFIX}/include\" --extra-ldflags=\"-L${PREFIX}/lib\" --extra-libs=\"-lpthread -lm\" --prefix=\"${PREFIX}\" \\\n && make \\\n && make install \\\n && make distclean\n#   Cleanup.\nRUN rm -rf /var/cache/apk/* /tmp/*\n#  #########################\n#   Build the release image.\nFROM alpine:3.8\nLABEL MAINTAINER=\"Alfred Gutierrez <alf.g.jr@gmail.com>\"\nENV PATH=\"/opt/ffmpeg/bin:$PATH\"\nRUN apk add ca-certificates=20191127-r2 openssl=1.0.2u-r0 pcre=8.42-r0 lame=3.100-r0 libogg=1.3.3-r2 libass=0.13.7-r1 libvpx=1.6.1-r0 libvorbis=1.3.6-r2 libwebp=1.0.0-r0 libtheora=1.1.1-r13 opus=1.2.1-r1 rtmpdump=2.4_git20160909-r5 x264-dev=20180304-r1 x265-dev=2.7-r1 --update\nCOPY --from=build /opt/ffmpeg /opt/ffmpeg\nCOPY --from=build /opt/ffmpeg/lib64/libaom.so.0 /usr/lib/libaom.so.0\nCOPY --from=build /usr/lib/libfdk-aac.so.2 /usr/lib/libfdk-aac.so.2\nCMD [\"/opt/ffmpeg/bin/ffmpeg\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##############################\n#  Build the FFmpeg-build image.\nFROM alpine:3.8 AS build\nARG FFMPEG_VERSION=ffmpeg-snapshot.tar.bz2\nARG AOM_VERSION=master\nARG PREFIX=/opt/ffmpeg\nARG PKG_CONFIG_PATH=/opt/ffmpeg/lib64/pkgconfig\nARG LD_LIBRARY_PATH=/opt/ffmpeg/lib\nARG MAKEFLAGS=\"-j4\"\n#  FFmpeg build dependencies.\nRUN apk add --update build-base cmake freetype-dev lame-dev libogg-dev libass libass-dev libvpx-dev libvorbis-dev libwebp-dev libtheora-dev libtool opus-dev perl pkgconf pkgconfig python rtmpdump-dev wget x264-dev x265-dev yasm\n#  Install fdk-aac from testing.\nRUN echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \\\n && apk add --update fdk-aac-dev\n#  Build libaom for av1.\nRUN mkdir -p /tmp/aom \\\n && cd /tmp/ \\\n && wget https://aomedia.googlesource.com/aom/+archive/${AOM_VERSION}.tar.gz \\\n && tar zxf ${AOM_VERSION}.tar.gz \\\n && rm ${AOM_VERSION}.tar.gz \\\n && rm -rf CMakeCache.txt CMakeFiles \\\n && mkdir -p ./aom_build \\\n && cd ./aom_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 .. \\\n && make \\\n && make install\n#  Get ffmpeg source.\nRUN cd /tmp/ \\\n && wget https://ffmpeg.org/releases/${FFMPEG_VERSION} \\\n && tar xjvf ${FFMPEG_VERSION} \\\n && rm ${FFMPEG_VERSION}\n#  Compile ffmpeg.\nRUN cd /tmp/ffmpeg \\\n && ./configure --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libaom --enable-libmp3lame --enable-libx264 --enable-libx265 --enable-libvpx --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk-aac --enable-libass --enable-libwebp --enable-librtmp --enable-postproc --enable-avresample --enable-libfreetype --enable-openssl --disable-debug --disable-doc --disable-ffplay --extra-cflags=\"-I${PREFIX}/include\" --extra-ldflags=\"-L${PREFIX}/lib\" --extra-libs=\"-lpthread -lm\" --prefix=\"${PREFIX}\" \\\n && make \\\n && make install \\\n && make distclean\n#  Cleanup.\nRUN rm -rf /var/cache/apk/* /tmp/*\n# #########################\n#  Build the release image.\nFROM alpine:3.8\nLABEL MAINTAINER=\"Alfred Gutierrez <alf.g.jr@gmail.com>\"\nENV PATH=\"/opt/ffmpeg/bin:$PATH\"\nRUN apk add --update ca-certificates openssl pcre lame libogg libass libvpx libvorbis libwebp libtheora opus rtmpdump x264-dev x265-dev\nCOPY --from=build /opt/ffmpeg /opt/ffmpeg\nCOPY --from=build /opt/ffmpeg/lib64/libaom.so.0 /usr/lib/libaom.so.0\nCOPY --from=build /usr/lib/libfdk-aac.so.2 /usr/lib/libfdk-aac.so.2\nCMD [\"/opt/ffmpeg/bin/ffmpeg\"]\n","injectedSmells":[],"originalDockerfileHash":"f9ffa2007e692531a6b78bebd735b351","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##############################\n#   Build the FFmpeg-build image.\nFROM alpine:3.8 AS build\nARG FFMPEG_VERSION=ffmpeg-snapshot.tar.bz2\nARG AOM_VERSION=master\nARG PREFIX=/opt/ffmpeg\nARG PKG_CONFIG_PATH=/opt/ffmpeg/lib64/pkgconfig\nARG LD_LIBRARY_PATH=/opt/ffmpeg/lib\nARG MAKEFLAGS=\"-j4\"\n#   FFmpeg build dependencies.\nRUN apk add --update build-base cmake freetype-dev lame-dev libogg-dev libass libass-dev libvpx-dev libvorbis-dev libwebp-dev libtheora-dev libtool opus-dev perl pkgconf pkgconfig python rtmpdump-dev wget x264-dev x265-dev yasm\n#   Install fdk-aac from testing.\nRUN echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \\\n && apk add --update fdk-aac-dev\n#   Build libaom for av1.\nRUN mkdir -p /tmp/aom \\\n && cd /tmp/ \\\n && wget https://aomedia.googlesource.com/aom/+archive/${AOM_VERSION}.tar.gz \\\n && tar zxf ${AOM_VERSION}.tar.gz \\\n && rm ${AOM_VERSION}.tar.gz \\\n && rm -rf CMakeCache.txt CMakeFiles \\\n && mkdir -p ./aom_build \\\n && cd ./aom_build \\\n && cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 .. \\\n && make \\\n && make install\n#   Get ffmpeg source.\nRUN cd /tmp/ \\\n && wget https://ffmpeg.org/releases/${FFMPEG_VERSION} \\\n && tar xjvf ${FFMPEG_VERSION} \\\n && rm ${FFMPEG_VERSION}\n#   Compile ffmpeg.\nRUN cd /tmp/ffmpeg \\\n && ./configure --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libaom --enable-libmp3lame --enable-libx264 --enable-libx265 --enable-libvpx --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk-aac --enable-libass --enable-libwebp --enable-librtmp --enable-postproc --enable-avresample --enable-libfreetype --enable-openssl --disable-debug --disable-doc --disable-ffplay --extra-cflags=\"-I${PREFIX}/include\" --extra-ldflags=\"-L${PREFIX}/lib\" --extra-libs=\"-lpthread -lm\" --prefix=\"${PREFIX}\" \\\n && make \\\n && make install \\\n && make distclean\n#   Cleanup.\nRUN rm -rf /var/cache/apk/* /tmp/*\n#  #########################\n#   Build the release image.\nFROM alpine:3.8\nLABEL MAINTAINER=\"Alfred Gutierrez <alf.g.jr@gmail.com>\"\nENV PATH=\"/opt/ffmpeg/bin:$PATH\"\nRUN apk add --update ca-certificates openssl pcre lame libogg libass libvpx libvorbis libwebp libtheora opus rtmpdump x264-dev x265-dev\nCOPY --from=build /opt/ffmpeg /opt/ffmpeg\nCOPY --from=build /opt/ffmpeg/lib64/libaom.so.0 /usr/lib/libaom.so.0\nCOPY --from=build /usr/lib/libfdk-aac.so.2 /usr/lib/libfdk-aac.so.2\nCMD [\"/opt/ffmpeg/bin/ffmpeg\"]\n","originalDockerfileUglifiedHash":"236f4ac6b519b95c54854ac7f11751ac","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/785e86abcc2c270b8cb596d96609a1aa8e995cc8.dockerfile"}