{"seed":4096337500,"processedDockerfileHash":"3d1f1e8b434f4eac235bb047a74092dd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER mislav.novakovic@sartura.hr\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 cmake=3.5.1-1ubuntu3 build-essential=12.1ubuntu2 vim=2:7.4.1689-3ubuntu1.5 supervisor=3.2.0-2ubuntu0.2 libpcre3-dev=2:8.38-3.1 pkg-config=0.29.1-0ubuntu1 libavl-dev=0.3.5-3 libev-dev=1:4.22-1 libprotobuf-c-dev=1.2.1-1 protobuf-c-compiler=1.2.1-1 libssh-dev=0.6.3-4.3ubuntu0.6 libssl-dev=1.0.2g-1ubuntu4.20 swig=3.0.8-0ubuntu3 python-dev=2.7.12-1~16.04 -y\n#   add netconf user\nRUN adduser --system netconf \\\n && echo \"netconf:netconf\" | chpasswd\n#   generate ssh keys for netconf user\nRUN mkdir -p /home/netconf/.ssh \\\n && ssh-keygen -A \\\n && ssh-keygen -t dsa -P '' -f /home/netconf/.ssh/id_dsa \\\n && cat /home/netconf/.ssh/id_dsa.pub > /home/netconf/.ssh/authorized_keys\n#   use /opt/dev as working directory\nRUN mkdir /opt/dev\nWORKDIR /opt/dev\n#   libyang\nRUN git clone -b devel https://github.com/CESNET/libyang.git \\\n && cd libyang \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   sysrepo\nRUN git clone -b devel https://github.com/sysrepo/sysrepo.git \\\n && cd sysrepo \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_TESTS=OFF -DREPOSITORY_LOC:PATH=/etc/sysrepo .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   libssh\nRUN git clone http://git.libssh.org/projects/libssh.git \\\n && cd libssh \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   libnetconf2\nRUN git clone -b devel https://github.com/CESNET/libnetconf2.git \\\n && cd libnetconf2 \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   keystore\nRUN cd /opt/dev \\\n && git clone https://github.com/CESNET/Netopeer2.git \\\n && cd Netopeer2 \\\n && cd keystored \\\n && mkdir build \\\n && cd build \\\n && git checkout devel-server \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   netopeer2\nRUN cd /opt/dev \\\n && cd Netopeer2/server \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && cd ../../cli \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install\n#   remove old swig\nRUN apt-get purge --auto-remove swig -y\n#   install node 4 and tools for swig build\nRUN apt-get update \\\n && apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 npm=3.5.2-0ubuntu4 byacc=20140715-1 autoconf=2.69-9 yodl=3.06.00-1 -y\n#   link nodejs to node\nRUN ln -s `which nodejs ` /usr/bin/node\n#   latest SWIG version with pull request\nRUN cd /opt/dev \\\n && git clone https://github.com/swig/swig.git \\\n && cd swig \\\n && git fetch origin pull/236/head:javascript_sharedptr \\\n && git checkout javascript_sharedptr \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make -j2 \\\n && make install\n#   libyang\nRUN cd /opt/dev/libyang/build \\\n && cmake -DENABLE_STATIC=ON -DGEN_LANGUAGE_BINDINGS=ON -DGEN_JAVASCRIPT_BINDINGS=ON -DGEN_PYTHON_BINDINGS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE:String=\"Release\" .. \\\n && make -j2 \\\n && make install \\\n && cd swig/javascript \\\n && npm install --unsafe-perm \\\n && node test.js \\\n && ldconfig\nENV EDITOR=\"vim\"\nEXPOSE 830/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER mislav.novakovic@sartura.hr\nRUN apt-get update \\\n && apt-get install git cmake build-essential vim supervisor libpcre3-dev pkg-config libavl-dev libev-dev libprotobuf-c-dev protobuf-c-compiler libssh-dev libssl-dev swig python-dev -y\n#  add netconf user\nRUN adduser --system netconf \\\n && echo \"netconf:netconf\" | chpasswd\n#  generate ssh keys for netconf user\nRUN mkdir -p /home/netconf/.ssh \\\n && ssh-keygen -A \\\n && ssh-keygen -t dsa -P '' -f /home/netconf/.ssh/id_dsa \\\n && cat /home/netconf/.ssh/id_dsa.pub > /home/netconf/.ssh/authorized_keys\n#  use /opt/dev as working directory\nRUN mkdir /opt/dev\nWORKDIR /opt/dev\n#  libyang\nRUN git clone -b devel https://github.com/CESNET/libyang.git \\\n && cd libyang \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#  sysrepo\nRUN git clone -b devel https://github.com/sysrepo/sysrepo.git \\\n && cd sysrepo \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_TESTS=OFF -DREPOSITORY_LOC:PATH=/etc/sysrepo .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#  libssh\nRUN git clone http://git.libssh.org/projects/libssh.git \\\n && cd libssh \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#  libnetconf2\nRUN git clone -b devel https://github.com/CESNET/libnetconf2.git \\\n && cd libnetconf2 \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#  keystore\nRUN cd /opt/dev \\\n && git clone https://github.com/CESNET/Netopeer2.git \\\n && cd Netopeer2 \\\n && cd keystored \\\n && mkdir build \\\n && cd build \\\n && git checkout devel-server \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#  netopeer2\nRUN cd /opt/dev \\\n && cd Netopeer2/server \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && cd ../../cli \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install\n#  remove old swig\nRUN apt-get purge --auto-remove swig -y\n#  install node 4 and tools for swig build\nRUN apt-get update \\\n && apt-get install nodejs npm byacc autoconf yodl -y\n#  link nodejs to node\nRUN ln -s `which nodejs ` /usr/bin/node\n#  latest SWIG version with pull request\nRUN cd /opt/dev \\\n && git clone https://github.com/swig/swig.git \\\n && cd swig \\\n && git fetch origin pull/236/head:javascript_sharedptr \\\n && git checkout javascript_sharedptr \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make -j2 \\\n && make install\n#  libyang\nRUN cd /opt/dev/libyang/build \\\n && cmake -DENABLE_STATIC=ON -DGEN_LANGUAGE_BINDINGS=ON -DGEN_JAVASCRIPT_BINDINGS=ON -DGEN_PYTHON_BINDINGS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE:String=\"Release\" .. \\\n && make -j2 \\\n && make install \\\n && cd swig/javascript \\\n && npm install --unsafe-perm \\\n && node test.js \\\n && ldconfig\nENV EDITOR=\"vim\"\nEXPOSE 830/tcp\n","injectedSmells":[],"originalDockerfileHash":"9c02f944755c4d746779709ff429265c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER mislav.novakovic@sartura.hr\nRUN apt-get update \\\n && apt-get install git cmake build-essential vim supervisor libpcre3-dev pkg-config libavl-dev libev-dev libprotobuf-c-dev protobuf-c-compiler libssh-dev libssl-dev swig python-dev -y\n#   add netconf user\nRUN adduser --system netconf \\\n && echo \"netconf:netconf\" | chpasswd\n#   generate ssh keys for netconf user\nRUN mkdir -p /home/netconf/.ssh \\\n && ssh-keygen -A \\\n && ssh-keygen -t dsa -P '' -f /home/netconf/.ssh/id_dsa \\\n && cat /home/netconf/.ssh/id_dsa.pub > /home/netconf/.ssh/authorized_keys\n#   use /opt/dev as working directory\nRUN mkdir /opt/dev\nWORKDIR /opt/dev\n#   libyang\nRUN git clone -b devel https://github.com/CESNET/libyang.git \\\n && cd libyang \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   sysrepo\nRUN git clone -b devel https://github.com/sysrepo/sysrepo.git \\\n && cd sysrepo \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_TESTS=OFF -DREPOSITORY_LOC:PATH=/etc/sysrepo .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   libssh\nRUN git clone http://git.libssh.org/projects/libssh.git \\\n && cd libssh \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   libnetconf2\nRUN git clone -b devel https://github.com/CESNET/libnetconf2.git \\\n && cd libnetconf2 \\\n && mkdir build \\\n && cd build \\\n && git checkout devel \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   keystore\nRUN cd /opt/dev \\\n && git clone https://github.com/CESNET/Netopeer2.git \\\n && cd Netopeer2 \\\n && cd keystored \\\n && mkdir build \\\n && cd build \\\n && git checkout devel-server \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && ldconfig\n#   netopeer2\nRUN cd /opt/dev \\\n && cd Netopeer2/server \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install \\\n && cd ../../cli \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. \\\n && make -j2 \\\n && make install\n#   remove old swig\nRUN apt-get purge --auto-remove swig -y\n#   install node 4 and tools for swig build\nRUN apt-get update \\\n && apt-get install nodejs npm byacc autoconf yodl -y\n#   link nodejs to node\nRUN ln -s `which nodejs ` /usr/bin/node\n#   latest SWIG version with pull request\nRUN cd /opt/dev \\\n && git clone https://github.com/swig/swig.git \\\n && cd swig \\\n && git fetch origin pull/236/head:javascript_sharedptr \\\n && git checkout javascript_sharedptr \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make -j2 \\\n && make install\n#   libyang\nRUN cd /opt/dev/libyang/build \\\n && cmake -DENABLE_STATIC=ON -DGEN_LANGUAGE_BINDINGS=ON -DGEN_JAVASCRIPT_BINDINGS=ON -DGEN_PYTHON_BINDINGS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE:String=\"Release\" .. \\\n && make -j2 \\\n && make install \\\n && cd swig/javascript \\\n && npm install --unsafe-perm \\\n && node test.js \\\n && ldconfig\nENV EDITOR=\"vim\"\nEXPOSE 830/tcp\n","originalDockerfileUglifiedHash":"6f5325a94be191f2ff1acea320a4095e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/506e5e5052b6021f34d2e225fae0365d2e9268ed.dockerfile"}