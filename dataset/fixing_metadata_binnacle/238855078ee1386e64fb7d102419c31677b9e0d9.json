{"seed":577457715,"processedDockerfileHash":"d34a7dab7d8c189631bd575b18991cfd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copied from https://github.com/docker-library/golang/blob/ff7c350f62/1.11/alpine3.9/Dockerfile\n#   and modified to apply a patch to the tls library and build padcheck.go\n#   LICENSE notice from https://github.com/docker-library/golang/blob/ff7c350f62/LICENSE follows:\n#   Copyright (c) 2014 Docker, Inc. All rights reserved.\n#   Redistribution and use in source and binary forms, with or without\n#   modification, are permitted provided that the following conditions are\n#   met:\n#      * Redistributions of source code must retain the above copyright\n#   notice, this list of conditions and the following disclaimer.\n#      * Redistributions in binary form must reproduce the above\n#   copyright notice, this list of conditions and the following disclaimer\n#   in the documentation and/or other materials provided with the\n#   distribution.\n#      * Neither the name of Docker, Inc. nor the names of its\n#   contributors may be used to endorse or promote products derived from\n#   this software without specific prior written permission.\n#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n#   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n#   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n#   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n#   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n#   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n#   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n#   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n#   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nFROM alpine:3.9\nRUN apk add ca-certificates=20191127-r2 --no-cache\n#   set up nsswitch.conf for Go's \"netgo\" implementation\n#   - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275\n#   - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf\nRUN [ ! -e /etc/nsswitch.conf ] \\\n && echo 'hosts: files dns' > /etc/nsswitch.conf\nCOPY ./paddingmodes-go1.11.diff /tmp/paddingmodes-go1.11.diff\nENV GOLANG_VERSION=\"1.11.5\"\nRUN set -eux ; apk add bash=4.4.19-r1 gcc=8.3.0-r0 musl-dev=1.1.20-r6 openssl=1.1.1k-r0 go=1.11.5-r0 --no-cache --virtual .build-deps ; export GOROOT_BOOTSTRAP=\"$( go env GOROOT ;)\" GOOS=\"$( go env GOOS ;)\" GOARCH=\"$( go env GOARCH ;)\" GOHOSTOS=\"$( go env GOHOSTOS ;)\" GOHOSTARCH=\"$( go env GOHOSTARCH ;)\" ; apkArch=\"$( apk --print-arch ;)\" ; case \"$apkArch\" in (armhf) export GOARM='6' ;;(x86) export GO386='387' ;; esac ; wget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\" ; echo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c - ; tar -C /usr/local -xzf go.tgz ; rm go.tgz ; cd /usr/local/go/src ; patch -p2 < /tmp/paddingmodes-go1.11.diff; rm /tmp/paddingmodes-go1.11.diff ; ./make.bash ; rm -rf /usr/local/go/pkg/bootstrap /usr/local/go/pkg/obj ; apk del .build-deps ; export PATH=\"/usr/local/go/bin:$PATH\" ; go version\nENV GOPATH=\"/go\"\nENV GOBIN=\"$GOPATH/bin\"\nENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$PATH\"\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \\\n && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\nCOPY padcheck.go /go/src\nRUN cd /go/src \\\n && go install padcheck.go\nENTRYPOINT [\"/go/bin/padcheck\"]\nCMD [\"-h\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copied from https://github.com/docker-library/golang/blob/ff7c350f62/1.11/alpine3.9/Dockerfile\n#  and modified to apply a patch to the tls library and build padcheck.go\n#  LICENSE notice from https://github.com/docker-library/golang/blob/ff7c350f62/LICENSE follows:\n#  Copyright (c) 2014 Docker, Inc. All rights reserved.\n#  Redistribution and use in source and binary forms, with or without\n#  modification, are permitted provided that the following conditions are\n#  met:\n#     * Redistributions of source code must retain the above copyright\n#  notice, this list of conditions and the following disclaimer.\n#     * Redistributions in binary form must reproduce the above\n#  copyright notice, this list of conditions and the following disclaimer\n#  in the documentation and/or other materials provided with the\n#  distribution.\n#     * Neither the name of Docker, Inc. nor the names of its\n#  contributors may be used to endorse or promote products derived from\n#  this software without specific prior written permission.\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nFROM alpine:3.9\nRUN apk add --no-cache ca-certificates\n#  set up nsswitch.conf for Go's \"netgo\" implementation\n#  - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275\n#  - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf\nRUN [ ! -e /etc/nsswitch.conf ] \\\n && echo 'hosts: files dns' > /etc/nsswitch.conf\nCOPY ./paddingmodes-go1.11.diff /tmp/paddingmodes-go1.11.diff\nENV GOLANG_VERSION=\"1.11.5\"\nRUN set -eux ; apk add --no-cache --virtual .build-deps bash gcc musl-dev openssl go ; export GOROOT_BOOTSTRAP=\"$( go env GOROOT ;)\" GOOS=\"$( go env GOOS ;)\" GOARCH=\"$( go env GOARCH ;)\" GOHOSTOS=\"$( go env GOHOSTOS ;)\" GOHOSTARCH=\"$( go env GOHOSTARCH ;)\" ; apkArch=\"$( apk --print-arch ;)\" ; case \"$apkArch\" in (armhf) export GOARM='6' ;;(x86) export GO386='387' ;; esac ; wget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\" ; echo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c - ; tar -C /usr/local -xzf go.tgz ; rm go.tgz ; cd /usr/local/go/src ; patch -p2 < /tmp/paddingmodes-go1.11.diff; rm /tmp/paddingmodes-go1.11.diff ; ./make.bash ; rm -rf /usr/local/go/pkg/bootstrap /usr/local/go/pkg/obj ; apk del .build-deps ; export PATH=\"/usr/local/go/bin:$PATH\" ; go version\nENV GOPATH=\"/go\"\nENV GOBIN=\"$GOPATH/bin\"\nENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$PATH\"\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \\\n && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\nCOPY padcheck.go /go/src\nRUN cd /go/src \\\n && go install padcheck.go\nENTRYPOINT [\"/go/bin/padcheck\"]\nCMD [\"-h\"]\n","injectedSmells":[],"originalDockerfileHash":"5e0433dab124ba5c9b94e985226b4e33","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copied from https://github.com/docker-library/golang/blob/ff7c350f62/1.11/alpine3.9/Dockerfile\n#   and modified to apply a patch to the tls library and build padcheck.go\n#   LICENSE notice from https://github.com/docker-library/golang/blob/ff7c350f62/LICENSE follows:\n#   Copyright (c) 2014 Docker, Inc. All rights reserved.\n#   Redistribution and use in source and binary forms, with or without\n#   modification, are permitted provided that the following conditions are\n#   met:\n#      * Redistributions of source code must retain the above copyright\n#   notice, this list of conditions and the following disclaimer.\n#      * Redistributions in binary form must reproduce the above\n#   copyright notice, this list of conditions and the following disclaimer\n#   in the documentation and/or other materials provided with the\n#   distribution.\n#      * Neither the name of Docker, Inc. nor the names of its\n#   contributors may be used to endorse or promote products derived from\n#   this software without specific prior written permission.\n#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n#   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n#   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n#   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n#   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n#   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n#   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n#   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n#   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nFROM alpine:3.9\nRUN apk add --no-cache ca-certificates\n#   set up nsswitch.conf for Go's \"netgo\" implementation\n#   - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275\n#   - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf\nRUN [ ! -e /etc/nsswitch.conf ] \\\n && echo 'hosts: files dns' > /etc/nsswitch.conf\nCOPY ./paddingmodes-go1.11.diff /tmp/paddingmodes-go1.11.diff\nENV GOLANG_VERSION=\"1.11.5\"\nRUN set -eux ; apk add --no-cache --virtual .build-deps bash gcc musl-dev openssl go ; export GOROOT_BOOTSTRAP=\"$( go env GOROOT ;)\" GOOS=\"$( go env GOOS ;)\" GOARCH=\"$( go env GOARCH ;)\" GOHOSTOS=\"$( go env GOHOSTOS ;)\" GOHOSTARCH=\"$( go env GOHOSTARCH ;)\" ; apkArch=\"$( apk --print-arch ;)\" ; case \"$apkArch\" in (armhf) export GOARM='6' ;;(x86) export GO386='387' ;; esac ; wget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\" ; echo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c - ; tar -C /usr/local -xzf go.tgz ; rm go.tgz ; cd /usr/local/go/src ; patch -p2 < /tmp/paddingmodes-go1.11.diff; rm /tmp/paddingmodes-go1.11.diff ; ./make.bash ; rm -rf /usr/local/go/pkg/bootstrap /usr/local/go/pkg/obj ; apk del .build-deps ; export PATH=\"/usr/local/go/bin:$PATH\" ; go version\nENV GOPATH=\"/go\"\nENV GOBIN=\"$GOPATH/bin\"\nENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$PATH\"\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \\\n && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\nCOPY padcheck.go /go/src\nRUN cd /go/src \\\n && go install padcheck.go\nENTRYPOINT [\"/go/bin/padcheck\"]\nCMD [\"-h\"]\n","originalDockerfileUglifiedHash":"739b0730a237077bd3eeee9022c08e02","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/238855078ee1386e64fb7d102419c31677b9e0d9.dockerfile"}