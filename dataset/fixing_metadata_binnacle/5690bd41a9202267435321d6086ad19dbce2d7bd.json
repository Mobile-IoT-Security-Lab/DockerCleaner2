{"seed":911245500,"processedDockerfileHash":"7c36e58ebc5ac302f239530fc23655ed","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Dockerfile_p4\n#   Builds docker container to build/run Juniper P4 Agent\n#\n#   Created by Sandesh Kumar Sodhi, December 2017\n#   Copyright (c) [2017] Juniper Networks, Inc. All rights reserved.\n#\n#   All rights reserved.\n#\n#   Notice and Disclaimer: This code is licensed to you under the Apache\n#   License 2.0 (the \"License\"). You may not use this code except in compliance\n#   with the License. This code is not an official Juniper product. You can\n#   obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Third-Party Code: This code may depend on other components under separate\n#   copyright notice and license terms. Your use of the source code for those\n#   components is subject to the terms and conditions of the respective license\n#   as noted in the Third-Party source code file.\n#\nFROM ubuntu:16.04\nLABEL maintainer=\"\\\"Sandesh Kumar Sodhi\\\"\"\n#\n#   Build\n#\n#   [sudo] docker build -f Dockerfile_p4 -t juniper-p4 .\n#\n#   Run:\n#\n#   [sudo] docker run --name jnprp4 --privileged -i -t juniper-p4 /bin/bash\n#\n#\n#\nARG DEBIAN_FRONTEND=noninteractive\n#   \n#   Note:\n#   While adding new package to the list, maintain the alphanumeric sorted order.\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-9 automake=1:1.15-4ubuntu1 bsdmainutils=9.0.6ubuntu3 build-essential=12.1ubuntu2 ca-certificates=20210119~16.04.1 curl=7.47.0-1ubuntu2.19 ethtool=1:4.5-1 expect=5.45-7 g++=4:5.3.1-1ubuntu1 gdb=7.11.1-0ubuntu1~16.5 git=1:2.7.4-0ubuntu1.10 gdebi-core=0.9.5.7ubuntu1 iputils-ping=3:20121221-5ubuntu2 less=481-2.1ubuntu0.2 libboost-all-dev=1.58.0.1ubuntu1 libevent-pthreads-2.0-5=2.0.21-stable-2ubuntu0.16.04.1 libjsoncpp-dev=1.7.2-1 libnet1-dev=1.1.6+dfsg-3 libpcap-dev=1.7.4-2ubuntu0.1 libssl-dev=1.0.2g-1ubuntu4.20 libtool=2.4.6-0.1 libxml2-utils=2.9.3+dfsg1-1ubuntu0.7 libyaml-cpp-dev=0.5.2-4ubuntu1~16.04.4 nano=2.5.3-2ubuntu2 net-tools=1.60-26ubuntu1 nmap=7.01-2ubuntu2 openssh-client=1:7.2p2-4ubuntu2.10 openssl=1.0.2g-1ubuntu4.20 pkg-config=0.29.1-0ubuntu1 psmisc=22.21-2.1ubuntu0.1 python-lxml=3.5.0-1ubuntu0.4 realpath=8.25-2ubuntu3~16.04 sed=4.2.2-7 software-properties-common=0.96.20.10 ssh=1:7.2p2-4ubuntu2.10 sshpass=1.05-1 tcpdump=4.9.3-0ubuntu0.16.04.1 telnet=0.17-40 tmux=2.1-3build1 tdom=0.8.3-1 tree=1.7.0-3 unzip=6.0-20ubuntu1.1 vim=2:7.4.1689-3ubuntu1.5 wget=1.17.1-1ubuntu1.5 -y\n#   Clang related packages\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository -y \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends clang-6.0=1:6.0-1ubuntu2~16.04.1 clang-format-6.0=1:6.0-1ubuntu2~16.04.1 clang-tidy-6.0=1:6.0-1ubuntu2~16.04.1 -y\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 10\nRUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 10\nRUN update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 10\nRUN update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-6.0 10\n#\n#   Packages needed for p4c\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends bison=2:3.0.4.dfsg-1 cmake=3.5.1-1ubuntu3 flex=2.6.0-11 libgc-dev=1:7.4.2-7.3ubuntu0.1 libgmp-dev=2:6.1.0+dfsg-2 libfl-dev=2.6.0-11 -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends python=2.7.12-1~16.04 pylint=1.5.2-1ubuntu1 python-pip=8.1.1-2ubuntu0.6 python3-pip=8.1.1-2ubuntu0.6 python-scapy=2.2.0-1 -y\nRUN pip install pip==23.1 --upgrade\nRUN pip install setuptools==67.6.1 -U\nRUN pip install scapy==2.5.0\nRUN pip install ipaddr==2.2.0\nRUN pip install gcovr==6.0\nRUN pip install lxml==4.9.2\nRUN pip3 install grpcio-tools\nRUN pip3 install prompt-toolkit\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 git=1:2.7.4-0ubuntu1.10 -y\nRUN mkdir -p /root/downloads\nRUN cd /root/downloads \\\n && git clone -b $( curl -L https://grpc.io/release ;) https://github.com/grpc/grpc\nRUN cd /root/downloads/grpc \\\n && git fetch \\\n && git checkout v1.8.1\nRUN cd /root/downloads/grpc \\\n && git submodule update --init\nRUN cd /root/downloads/grpc \\\n && make\nRUN cd /root/downloads/grpc \\\n && make install\nRUN cd /root/downloads/grpc/third_party/protobuf/ \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#\n#   GTEST\n#\nRUN cd /root/downloads \\\n && wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz\nRUN cd /root/downloads \\\n && tar xzf release-1.8.0.tar.gz\n#\n#   pyang\n#\nRUN cd /root/downloads \\\n && git clone https://github.com/mbj4668/pyang.git\nRUN cd /root/downloads/pyang \\\n && python setup.py install\n#\n#   GO\n#\nRUN cd /root/downloads \\\n && wget https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz\nRUN cd /root/downloads \\\n && tar -C /usr/local -xzf go1.9.2.linux-amd64.tar.gz\nRUN mkdir -p /root/go\nENV PATH=\"$PATH:/usr/local/go/bin\"\nENV GOPATH=\"/root/go\"\n#\n#   ygot\n#\nRUN cd /root/go \\\n && go get github.com/golang/protobuf/proto\nRUN cd /root/go \\\n && go get github.com/openconfig/gnmi ; exit 0\nRUN cd /root/go \\\n && go get github.com/openconfig/goyang\nRUN cd /root/go \\\n && go get google.golang.org/grpc\nRUN cd /root/go \\\n && go get github.com/golang/glog\nRUN cd /root/go \\\n && go get github.com/kylelemons/godebug ; exit 0\nRUN cd /root/go/src \\\n && go get github.com/openconfig/ygot ; exit 0\nRUN cd /root/go/src/github.com/openconfig/ygot/proto_generator \\\n && go build\n#\n#   Opentracing\n#\nRUN cd /root/downloads \\\n && git clone https://github.com/opentracing/opentracing-cpp\nRUN cd /root/downloads/opentracing-cpp \\\n && mkdir .build\nRUN cd /root/downloads/opentracing-cpp/.build \\\n && cmake ..\nRUN cd /root/downloads/opentracing-cpp/.build \\\n && make\nRUN cd /root/downloads/opentracing-cpp/.build \\\n && make install\n#\n#   Jaeger\n#\n#   Install thrift first. Note Jaeger works only with Thrift 0.9.3\n#   https://github.com/jaegertracing/jaeger-client-cpp/issues/45\n#\nRUN cd /root/downloads \\\n && git clone https://github.com/apache/thrift\nRUN cd /root/downloads/thrift \\\n && git checkout 0.9.3\nRUN cd /root/downloads/thrift \\\n && ./bootstrap.sh\nRUN cd /root/downloads/thrift \\\n && ./configure --with-cpp --with-java=no --with-python=no --with-lua=no --with-perl=no --enable-shared=yes --enable-static=no --enable-tutorial=no --with-qt4=no\nRUN cd /root/downloads/thrift \\\n && make -s\nRUN cd /root/downloads/thrift \\\n && make install\n#   Now install cpp client for Jaeger\nRUN cd /root/downloads \\\n && git clone https://github.com/jaegertracing/cpp-client\nRUN cd /root/downloads/cpp-client \\\n && git checkout v0.3.0\nRUN cd /root/downloads/cpp-client \\\n && mkdir .build\nRUN cd /root/downloads/cpp-client/.build \\\n && cmake ..\nRUN cd /root/downloads/cpp-client/.build \\\n && make\nRUN cd /root/downloads/cpp-client/.build \\\n && make install\nCOPY env/bash_aliases /root/.bash_aliases\nCOPY env/vimrc /root/.vimrc\nCOPY env/tmux.conf /root/.tmux.conf\nCOPY entrypoint.sh /root/entrypoint.sh\nENTRYPOINT [\"/root/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Dockerfile_p4\n#  Builds docker container to build/run Juniper P4 Agent\n#\n#  Created by Sandesh Kumar Sodhi, December 2017\n#  Copyright (c) [2017] Juniper Networks, Inc. All rights reserved.\n#\n#  All rights reserved.\n#\n#  Notice and Disclaimer: This code is licensed to you under the Apache\n#  License 2.0 (the \"License\"). You may not use this code except in compliance\n#  with the License. This code is not an official Juniper product. You can\n#  obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Third-Party Code: This code may depend on other components under separate\n#  copyright notice and license terms. Your use of the source code for those\n#  components is subject to the terms and conditions of the respective license\n#  as noted in the Third-Party source code file.\n#\nFROM ubuntu:16.04\nLABEL maintainer=\"\\\"Sandesh Kumar Sodhi\\\"\"\n#\n#  Build\n#\n#  [sudo] docker build -f Dockerfile_p4 -t juniper-p4 .\n#\n#  Run:\n#\n#  [sudo] docker run --name jnprp4 --privileged -i -t juniper-p4 /bin/bash\n#\n#\n#\nARG DEBIAN_FRONTEND=noninteractive\n#  \n#  Note:\n#  While adding new package to the list, maintain the alphanumeric sorted order.\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf automake bsdmainutils build-essential ca-certificates curl ethtool expect g++ gdb git gdebi-core iputils-ping less libboost-all-dev libevent-pthreads-2.0-5 libjsoncpp-dev libnet1-dev libpcap-dev libssl-dev libtool libxml2-utils libyaml-cpp-dev nano net-tools nmap openssh-client openssl pkg-config psmisc python-lxml realpath sed software-properties-common ssh sshpass tcpdump telnet tmux tdom tree unzip vim wget -y\n#  Clang related packages\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository -y \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends clang-6.0 clang-format-6.0 clang-tidy-6.0 -y\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 10\nRUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 10\nRUN update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 10\nRUN update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-6.0 10\n#\n#  Packages needed for p4c\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends bison cmake flex libgc-dev libgmp-dev libfl-dev -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends python pylint python-pip python3-pip python-scapy -y\nRUN pip install pip --upgrade\nRUN pip install setuptools -U\nRUN pip install scapy\nRUN pip install ipaddr\nRUN pip install gcovr\nRUN pip install lxml\nRUN pip3 install grpcio-tools\nRUN pip3 install prompt-toolkit\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl git -y\nRUN mkdir -p /root/downloads\nRUN cd /root/downloads \\\n && git clone -b $( curl -L https://grpc.io/release ;) https://github.com/grpc/grpc\nRUN cd /root/downloads/grpc \\\n && git fetch \\\n && git checkout v1.8.1\nRUN cd /root/downloads/grpc \\\n && git submodule update --init\nRUN cd /root/downloads/grpc \\\n && make\nRUN cd /root/downloads/grpc \\\n && make install\nRUN cd /root/downloads/grpc/third_party/protobuf/ \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#\n#  GTEST\n#\nRUN cd /root/downloads \\\n && wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz\nRUN cd /root/downloads \\\n && tar xzf release-1.8.0.tar.gz\n#\n#  pyang\n#\nRUN cd /root/downloads \\\n && git clone https://github.com/mbj4668/pyang.git\nRUN cd /root/downloads/pyang \\\n && python setup.py install\n#\n#  GO\n#\nRUN cd /root/downloads \\\n && wget https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz\nRUN cd /root/downloads \\\n && tar -C /usr/local -xzf go1.9.2.linux-amd64.tar.gz\nRUN mkdir -p /root/go\nENV PATH=\"$PATH:/usr/local/go/bin\"\nENV GOPATH=\"/root/go\"\n#\n#  ygot\n#\nRUN cd /root/go \\\n && go get github.com/golang/protobuf/proto\nRUN cd /root/go \\\n && go get github.com/openconfig/gnmi ; exit 0\nRUN cd /root/go \\\n && go get github.com/openconfig/goyang\nRUN cd /root/go \\\n && go get google.golang.org/grpc\nRUN cd /root/go \\\n && go get github.com/golang/glog\nRUN cd /root/go \\\n && go get github.com/kylelemons/godebug ; exit 0\nRUN cd /root/go/src \\\n && go get github.com/openconfig/ygot ; exit 0\nRUN cd /root/go/src/github.com/openconfig/ygot/proto_generator \\\n && go build\n#\n#  Opentracing\n#\nRUN cd /root/downloads \\\n && git clone https://github.com/opentracing/opentracing-cpp\nRUN cd /root/downloads/opentracing-cpp \\\n && mkdir .build\nRUN cd /root/downloads/opentracing-cpp/.build \\\n && cmake ..\nRUN cd /root/downloads/opentracing-cpp/.build \\\n && make\nRUN cd /root/downloads/opentracing-cpp/.build \\\n && make install\n#\n#  Jaeger\n#\n#  Install thrift first. Note Jaeger works only with Thrift 0.9.3\n#  https://github.com/jaegertracing/jaeger-client-cpp/issues/45\n#\nRUN cd /root/downloads \\\n && git clone https://github.com/apache/thrift\nRUN cd /root/downloads/thrift \\\n && git checkout 0.9.3\nRUN cd /root/downloads/thrift \\\n && ./bootstrap.sh\nRUN cd /root/downloads/thrift \\\n && ./configure --with-cpp --with-java=no --with-python=no --with-lua=no --with-perl=no --enable-shared=yes --enable-static=no --enable-tutorial=no --with-qt4=no\nRUN cd /root/downloads/thrift \\\n && make -s\nRUN cd /root/downloads/thrift \\\n && make install\n#  Now install cpp client for Jaeger\nRUN cd /root/downloads \\\n && git clone https://github.com/jaegertracing/cpp-client\nRUN cd /root/downloads/cpp-client \\\n && git checkout v0.3.0\nRUN cd /root/downloads/cpp-client \\\n && mkdir .build\nRUN cd /root/downloads/cpp-client/.build \\\n && cmake ..\nRUN cd /root/downloads/cpp-client/.build \\\n && make\nRUN cd /root/downloads/cpp-client/.build \\\n && make install\nCOPY env/bash_aliases /root/.bash_aliases\nCOPY env/vimrc /root/.vimrc\nCOPY env/tmux.conf /root/.tmux.conf\nCOPY entrypoint.sh /root/entrypoint.sh\nENTRYPOINT [\"/root/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"7e5a50715338806a9d026dd8365080bc","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Dockerfile_p4\n#   Builds docker container to build/run Juniper P4 Agent\n#\n#   Created by Sandesh Kumar Sodhi, December 2017\n#   Copyright (c) [2017] Juniper Networks, Inc. All rights reserved.\n#\n#   All rights reserved.\n#\n#   Notice and Disclaimer: This code is licensed to you under the Apache\n#   License 2.0 (the \"License\"). You may not use this code except in compliance\n#   with the License. This code is not an official Juniper product. You can\n#   obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Third-Party Code: This code may depend on other components under separate\n#   copyright notice and license terms. Your use of the source code for those\n#   components is subject to the terms and conditions of the respective license\n#   as noted in the Third-Party source code file.\n#\nFROM ubuntu:16.04\nLABEL maintainer=\"\\\"Sandesh Kumar Sodhi\\\"\"\n#\n#   Build\n#\n#   [sudo] docker build -f Dockerfile_p4 -t juniper-p4 .\n#\n#   Run:\n#\n#   [sudo] docker run --name jnprp4 --privileged -i -t juniper-p4 /bin/bash\n#\n#\n#\nARG DEBIAN_FRONTEND=noninteractive\n#   \n#   Note:\n#   While adding new package to the list, maintain the alphanumeric sorted order.\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf automake bsdmainutils build-essential ca-certificates curl ethtool expect g++ gdb git gdebi-core iputils-ping less libboost-all-dev libevent-pthreads-2.0-5 libjsoncpp-dev libnet1-dev libpcap-dev libssl-dev libtool libxml2-utils libyaml-cpp-dev nano net-tools nmap openssh-client openssl pkg-config psmisc python-lxml realpath sed software-properties-common ssh sshpass tcpdump telnet tmux tdom tree unzip vim wget -y\n#   Clang related packages\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository -y \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends clang-6.0 clang-format-6.0 clang-tidy-6.0 -y\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 10\nRUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 10\nRUN update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 10\nRUN update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-6.0 10\n#\n#   Packages needed for p4c\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends bison cmake flex libgc-dev libgmp-dev libfl-dev -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends python pylint python-pip python3-pip python-scapy -y\nRUN pip install pip --upgrade\nRUN pip install setuptools -U\nRUN pip install scapy\nRUN pip install ipaddr\nRUN pip install gcovr\nRUN pip install lxml\nRUN pip3 install grpcio-tools\nRUN pip3 install prompt-toolkit\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl git -y\nRUN mkdir -p /root/downloads\nRUN cd /root/downloads \\\n && git clone -b $( curl -L https://grpc.io/release ;) https://github.com/grpc/grpc\nRUN cd /root/downloads/grpc \\\n && git fetch \\\n && git checkout v1.8.1\nRUN cd /root/downloads/grpc \\\n && git submodule update --init\nRUN cd /root/downloads/grpc \\\n && make\nRUN cd /root/downloads/grpc \\\n && make install\nRUN cd /root/downloads/grpc/third_party/protobuf/ \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#\n#   GTEST\n#\nRUN cd /root/downloads \\\n && wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz\nRUN cd /root/downloads \\\n && tar xzf release-1.8.0.tar.gz\n#\n#   pyang\n#\nRUN cd /root/downloads \\\n && git clone https://github.com/mbj4668/pyang.git\nRUN cd /root/downloads/pyang \\\n && python setup.py install\n#\n#   GO\n#\nRUN cd /root/downloads \\\n && wget https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz\nRUN cd /root/downloads \\\n && tar -C /usr/local -xzf go1.9.2.linux-amd64.tar.gz\nRUN mkdir -p /root/go\nENV PATH=\"$PATH:/usr/local/go/bin\"\nENV GOPATH=\"/root/go\"\n#\n#   ygot\n#\nRUN cd /root/go \\\n && go get github.com/golang/protobuf/proto\nRUN cd /root/go \\\n && go get github.com/openconfig/gnmi ; exit 0\nRUN cd /root/go \\\n && go get github.com/openconfig/goyang\nRUN cd /root/go \\\n && go get google.golang.org/grpc\nRUN cd /root/go \\\n && go get github.com/golang/glog\nRUN cd /root/go \\\n && go get github.com/kylelemons/godebug ; exit 0\nRUN cd /root/go/src \\\n && go get github.com/openconfig/ygot ; exit 0\nRUN cd /root/go/src/github.com/openconfig/ygot/proto_generator \\\n && go build\n#\n#   Opentracing\n#\nRUN cd /root/downloads \\\n && git clone https://github.com/opentracing/opentracing-cpp\nRUN cd /root/downloads/opentracing-cpp \\\n && mkdir .build\nRUN cd /root/downloads/opentracing-cpp/.build \\\n && cmake ..\nRUN cd /root/downloads/opentracing-cpp/.build \\\n && make\nRUN cd /root/downloads/opentracing-cpp/.build \\\n && make install\n#\n#   Jaeger\n#\n#   Install thrift first. Note Jaeger works only with Thrift 0.9.3\n#   https://github.com/jaegertracing/jaeger-client-cpp/issues/45\n#\nRUN cd /root/downloads \\\n && git clone https://github.com/apache/thrift\nRUN cd /root/downloads/thrift \\\n && git checkout 0.9.3\nRUN cd /root/downloads/thrift \\\n && ./bootstrap.sh\nRUN cd /root/downloads/thrift \\\n && ./configure --with-cpp --with-java=no --with-python=no --with-lua=no --with-perl=no --enable-shared=yes --enable-static=no --enable-tutorial=no --with-qt4=no\nRUN cd /root/downloads/thrift \\\n && make -s\nRUN cd /root/downloads/thrift \\\n && make install\n#   Now install cpp client for Jaeger\nRUN cd /root/downloads \\\n && git clone https://github.com/jaegertracing/cpp-client\nRUN cd /root/downloads/cpp-client \\\n && git checkout v0.3.0\nRUN cd /root/downloads/cpp-client \\\n && mkdir .build\nRUN cd /root/downloads/cpp-client/.build \\\n && cmake ..\nRUN cd /root/downloads/cpp-client/.build \\\n && make\nRUN cd /root/downloads/cpp-client/.build \\\n && make install\nCOPY env/bash_aliases /root/.bash_aliases\nCOPY env/vimrc /root/.vimrc\nCOPY env/tmux.conf /root/.tmux.conf\nCOPY entrypoint.sh /root/entrypoint.sh\nENTRYPOINT [\"/root/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"ac2495460cfd3974e2dbb6472e73378c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5690bd41a9202267435321d6086ad19dbce2d7bd.dockerfile"}