{"seed":325321474,"processedDockerfileHash":"1f7f7361d6872b8d75a23332e97bfd4c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Build image\nFROM ubuntu:16.04 AS build-env\n#   install base packages, supervisor, cron, logrotate\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends autoconf=2.69-9 build-essential=12.1ubuntu2 gcc=4:5.3.1-1ubuntu1 git=1:2.7.4-0ubuntu1.10 libjansson-dev=2.7-3ubuntu0.1 make=4.1-6 openssl=1.0.2g-1ubuntu4.20 software-properties-common=0.96.20.10 unzip=6.0-20ubuntu1.1 wget=1.17.1-1ubuntu1.5 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -yq )\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    ZEPHIR_VERSION=\"0.11.12\" \\\n    ZEPHIR_PARSER_VERSION=\"v1.3.1\" \\\n    NGINX_VERSION=\"1.16.0\" \\\n    NGINX_USER=\"www-data\" \\\n    NGINX_CONF_PATH=\"/etc/nginx\" \\\n    NGINX_LOG_PATH=\"/var/log/nginx\" \\\n    NGINX_BUILD=\"Ubuntu\" \\\n    PCRE_VERSION=\"8.43\" \\\n    PCRE_PATH=\"/var/lib/pcre\" \\\n    OPENSSL_VERSION=\"openssl-1.0.2o\"\nRUN LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php \\\n && :\n#   PHP 7.2 with dependencies\nRUN apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y -f --no-install-recommends jq libc6-dev libexpat-dev libgeoip-dev libpcre3-dev libssh2-1-dev libssl-dev libxslt1-dev libyaml-dev lsb-release php7.2-cli php7.2-common php7.2-dev php7.2-xml re2c\n#   Nginx dependencies\nRUN apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y -f --no-install-recommends libexpat-dev libmaxminddb-dev mmdb-bin libmaxminddb0\n#   Turn the detached message off\nRUN git config --global advice.detachedHead false\nCOPY ./installers /installers\n#   Build custom extensions and move it to /artifacts folder\nRUN mkdir /artifacts \\\n && bash /installers/zephir-parser.sh \\\n && bash /installers/zephir.sh \\\n && bash /installers/pinba.sh\n#   Update openssl from openssl 1.0.2g to 1.0.2o\nRUN bash /installers/openssl.sh\n#   configure NGINX from source\nRUN bash /installers/nginx.sh\nCOPY ./configs/etc/nginx/nginx.conf /etc/nginx/nginx.conf\n#   Application image\nFROM phalconphp/base:ubuntu-16.04\nLABEL description=\"Application image to use for production with PHP and Nginx\" \\\n      maintainer=\"Serghei Iakovlev <serghei@phalconphp.com>\" \\\n      vendor=\"Phalcon\" \\\n      name=\"com.phalconphp.images.ubuntu-16.04.php-7.2\"\nARG GITHUB_TOKEN\nARG GITHUB_USER\nARG PINBA_SERVER\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    FPM_MAX_CHILDREN=\"32\" \\\n    FPM_START_SERVERS=\"6\" \\\n    FPM_MIN_SPARE_SERVERS=\"2\" \\\n    FPM_MAX_SPARE_SERVERS=\"8\" \\\n    FPM_PROCESS_IDLE_TIMEOUT=\"5\" \\\n    FPM_MAX_REQUEST=\"1024\" \\\n    PATH=\"/root/composer/vendor/bin:$PATH\" \\\n    COMPOSER_HOME=\"/root/composer\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\" \\\n    PCRE_PATH=\"/var/lib/pcre\" \\\n    PINBA_SERVER=\"${PINBA_SERVER:-}\" \\\n    GITHUB_USER=\"${GITHUB_USER:-}\"\n#   TODO: HEALTHCHECK\nCOPY ./configs/etc/dpkg/dpkg.cfg.d/ /etc/dpkg/dpkg.cfg.d/\nRUN LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php\n#   Install php 7.2 with libs and other software\nRUN : \\\n && apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y -f --no-install-recommends dnsutils iproute2 libc6-dev libgeoip-dev libpcre3-dev libssh2-1-dev libssl-dev libyaml-dev lsb-release php-amqp php-apcu-bc php-igbinary php-memcache php-pear php-sodium php-ssh2 php-xdebug php-yaml php7.2-bcmath php7.2-cgi php7.2-cli php7.2-common php7.2-curl php7.2-dba php7.2-dev php7.2-fpm php7.2-gd php7.2-gmp php7.2-imagick php7.2-imap php7.2-intl php7.2-json php7.2-mbstring php7.2-memcached php7.2-mongodb php7.2-msgpack php7.2-mysql php7.2-odbc php7.2-opcache php7.2-pgsql php7.2-phalcon php7.2-pspell php7.2-recode php7.2-redis php7.2-soap php7.2-tidy php7.2-xml php7.2-zip software-properties-common swig tmpreaper unzip wget\n#   Create required directories\nRUN mkdir -p /app /tmp/xdebug-{profile,outpt} /run/php /var/log/php /var/lib/nginx/{cache,proxy} $COMPOSER_HOME\nCOPY --from=build-env /artifacts/ /\nCOPY ./configs/etc/php/7.2/ /etc/php/7.2/\nRUN wget -qO- https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && chmod +x /usr/local/bin/composer\n#   Disable following modules by default\nRUN phpdismod -v 7.2 apcu_bc \\\n && phpdismod -v 7.2 apcu \\\n && phpdismod -v 7.2 mongodb \\\n && phpdismod -v 7.2 pinba \\\n && phpdismod -v 7.2 xdebug\n#   Nginx with GeoIP setup\nRUN (apt-get update ;apt-get install --no-install-recommends libjansson-dev=2.7-3ubuntu0.1 libmaxminddb0=1.0.4-2.1 mmdb-bin=1.0.4-2.1 nginx=1.10.3-0ubuntu0.16.04.5 openssl=1.0.2g-1ubuntu4.20 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -y )\nRUN mkdir -p /usr/share/GeoIP \\\n && wget -qO - http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz | gunzip -c > /usr/share/GeoIP/maxmind-city.mmdb \\\n && wget -qO - http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz | gunzip -c > /usr/share/GeoIP/maxmind-country.mmdb\nCOPY --from=build-env $PCRE_PATH $PCRE_PATH\nCOPY --from=build-env /usr/sbin/nginx /usr/sbin/nginx\nCOPY ./configs/etc/nginx/ /etc/nginx/\n#   Supervisor && logrotate\nCOPY ./configs/etc/supervisor/ /etc/supervisor/\nCOPY ./configs/etc/logrotate.d/ /etc/logrotate.d/\n#   Startup scripts\nCOPY ./entrypoint.sh /entrypoint.sh\nCOPY ./entrypoint.d /entrypoint.d\n#   Final check and preparing entrypoint\nRUN echo \\\n && nginx -v \\\n && php --version | head -n 1 \\\n && composer --version --no-ansi \\\n && zephir --version \\\n && php -r 'echo \"Phalcon \" . \\Phalcon\\Version::get() . \"\\n\";' \\\n && echo -n \"Zephir Parser \" \\\n && php -d extension=`php-config --extension-dir `/zephir_parser.so --ri \"Zephir Parser\" | grep Version | awk '{print $3}' \\\n && echo \\\n && chmod +x /entrypoint.sh\n#   Cleanup\nRUN apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /tmp/* /var/tmp/* \\\n && rm -rf /usr/share/doc/* \\\n && rm -rf /usr/share/man/* \\\n && rm -rf /usr/share/locale/* \\\n && rm -f /var/log/php7.2-fpm.log \\\n && find /var/cache/apt/archives /var/lib/apt/lists -not -name lock -type f -delete \\\n && find /var/cache -type f -not -name lock -delete \\\n && find /var/log -type f | while read f ; do echo -n '' > ${f}; done\nVOLUME /app  /var/log/nginx  /var/log/php  /tmp/xdebug-profile  /tmp/xdebug-outupt  /var/lib/nginx/cache  /var/lib/nginx/proxy\nWORKDIR /app\n#   Local Variables:\n#   tab-width: 4\n#   End:\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Build image\nFROM ubuntu:16.04 AS build-env\n#  install base packages, supervisor, cron, logrotate\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends autoconf build-essential gcc git libjansson-dev make openssl software-properties-common unzip wget zlib1g-dev -yq\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    ZEPHIR_VERSION=\"0.11.12\" \\\n    ZEPHIR_PARSER_VERSION=\"v1.3.1\" \\\n    NGINX_VERSION=\"1.16.0\" \\\n    NGINX_USER=\"www-data\" \\\n    NGINX_CONF_PATH=\"/etc/nginx\" \\\n    NGINX_LOG_PATH=\"/var/log/nginx\" \\\n    NGINX_BUILD=\"Ubuntu\" \\\n    PCRE_VERSION=\"8.43\" \\\n    PCRE_PATH=\"/var/lib/pcre\" \\\n    OPENSSL_VERSION=\"openssl-1.0.2o\"\nRUN LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php \\\n && apt-get update -y\n#  PHP 7.2 with dependencies\nRUN apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y -f --no-install-recommends jq libc6-dev libexpat-dev libgeoip-dev libpcre3-dev libssh2-1-dev libssl-dev libxslt1-dev libyaml-dev lsb-release php7.2-cli php7.2-common php7.2-dev php7.2-xml re2c\n#  Nginx dependencies\nRUN apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y -f --no-install-recommends libexpat-dev libmaxminddb-dev mmdb-bin libmaxminddb0\n#  Turn the detached message off\nRUN git config --global advice.detachedHead false\nCOPY ./installers /installers\n#  Build custom extensions and move it to /artifacts folder\nRUN mkdir /artifacts \\\n && bash /installers/zephir-parser.sh \\\n && bash /installers/zephir.sh \\\n && bash /installers/pinba.sh\n#  Update openssl from openssl 1.0.2g to 1.0.2o\nRUN bash /installers/openssl.sh\n#  configure NGINX from source\nRUN bash /installers/nginx.sh\nCOPY ./configs/etc/nginx/nginx.conf /etc/nginx/nginx.conf\n#  Application image\nFROM phalconphp/base:ubuntu-16.04\nLABEL description=\"Application image to use for production with PHP and Nginx\" \\\n      maintainer=\"Serghei Iakovlev <serghei@phalconphp.com>\" \\\n      vendor=\"Phalcon\" \\\n      name=\"com.phalconphp.images.ubuntu-16.04.php-7.2\"\nARG GITHUB_TOKEN\nARG GITHUB_USER\nARG PINBA_SERVER\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    FPM_MAX_CHILDREN=\"32\" \\\n    FPM_START_SERVERS=\"6\" \\\n    FPM_MIN_SPARE_SERVERS=\"2\" \\\n    FPM_MAX_SPARE_SERVERS=\"8\" \\\n    FPM_PROCESS_IDLE_TIMEOUT=\"5\" \\\n    FPM_MAX_REQUEST=\"1024\" \\\n    PATH=\"/root/composer/vendor/bin:$PATH\" \\\n    COMPOSER_HOME=\"/root/composer\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\" \\\n    PCRE_PATH=\"/var/lib/pcre\" \\\n    PINBA_SERVER=\"${PINBA_SERVER:-}\" \\\n    GITHUB_USER=\"${GITHUB_USER:-}\" \\\n    GITHUB_TOKEN=\"${GITHUB_TOKEN:-}\"\n#  TODO: HEALTHCHECK\nCOPY ./configs/etc/dpkg/dpkg.cfg.d/ /etc/dpkg/dpkg.cfg.d/\nRUN LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php\n#  Install php 7.2 with libs and other software\nRUN apt-get update -y \\\n && apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y -f --no-install-recommends dnsutils iproute2 libc6-dev libgeoip-dev libpcre3-dev libssh2-1-dev libssl-dev libyaml-dev lsb-release php-amqp php-apcu-bc php-igbinary php-memcache php-pear php-sodium php-ssh2 php-xdebug php-yaml php7.2-bcmath php7.2-cgi php7.2-cli php7.2-common php7.2-curl php7.2-dba php7.2-dev php7.2-fpm php7.2-gd php7.2-gmp php7.2-imagick php7.2-imap php7.2-intl php7.2-json php7.2-mbstring php7.2-memcached php7.2-mongodb php7.2-msgpack php7.2-mysql php7.2-odbc php7.2-opcache php7.2-pgsql php7.2-phalcon php7.2-pspell php7.2-recode php7.2-redis php7.2-soap php7.2-tidy php7.2-xml php7.2-zip software-properties-common swig tmpreaper unzip wget\n#  Create required directories\nRUN mkdir -p /app /tmp/xdebug-{profile,outpt} /run/php /var/log/php /var/lib/nginx/{cache,proxy} $COMPOSER_HOME\nCOPY --from=build-env /artifacts/ /\nCOPY ./configs/etc/php/7.2/ /etc/php/7.2/\nRUN wget -qO- https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && chmod +x /usr/local/bin/composer\n#  Disable following modules by default\nRUN phpdismod -v 7.2 apcu_bc \\\n && phpdismod -v 7.2 apcu \\\n && phpdismod -v 7.2 mongodb \\\n && phpdismod -v 7.2 pinba \\\n && phpdismod -v 7.2 xdebug\n#  Nginx with GeoIP setup\nRUN apt-get install libjansson-dev libmaxminddb0 mmdb-bin nginx openssl zlib1g-dev -y\nRUN mkdir -p /usr/share/GeoIP \\\n && wget -qO - http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz | gunzip -c > /usr/share/GeoIP/maxmind-city.mmdb \\\n && wget -qO - http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz | gunzip -c > /usr/share/GeoIP/maxmind-country.mmdb\nCOPY --from=build-env $PCRE_PATH $PCRE_PATH\nCOPY --from=build-env /usr/sbin/nginx /usr/sbin/nginx\nCOPY ./configs/etc/nginx/ /etc/nginx/\n#  Supervisor && logrotate\nCOPY ./configs/etc/supervisor/ /etc/supervisor/\nCOPY ./configs/etc/logrotate.d/ /etc/logrotate.d/\n#  Startup scripts\nCOPY ./entrypoint.sh /entrypoint.sh\nCOPY ./entrypoint.d /entrypoint.d\n#  Final check and preparing entrypoint\nRUN echo \\\n && nginx -v \\\n && php --version | head -n 1 \\\n && composer --version --no-ansi \\\n && zephir --version \\\n && php -r 'echo \"Phalcon \" . \\Phalcon\\Version::get() . \"\\n\";' \\\n && echo -n \"Zephir Parser \" \\\n && php -d extension=`php-config --extension-dir `/zephir_parser.so --ri \"Zephir Parser\" | grep Version | awk '{print $3}' \\\n && echo \\\n && chmod +x /entrypoint.sh\n#  Cleanup\nRUN apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /tmp/* /var/tmp/* \\\n && rm -rf /usr/share/doc/* \\\n && rm -rf /usr/share/man/* \\\n && rm -rf /usr/share/locale/* \\\n && rm -f /var/log/php7.2-fpm.log \\\n && find /var/cache/apt/archives /var/lib/apt/lists -not -name lock -type f -delete \\\n && find /var/cache -type f -not -name lock -delete \\\n && find /var/log -type f | while read f ; do echo -n '' > ${f}; done\nVOLUME /app  /var/log/nginx  /var/log/php  /tmp/xdebug-profile  /tmp/xdebug-outupt  /var/lib/nginx/cache  /var/lib/nginx/proxy\nWORKDIR /app\n#  Local Variables:\n#  tab-width: 4\n#  End:\n","injectedSmells":[],"originalDockerfileHash":"e4d201ccbfcfc5e6fa06bae213640302","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build image\nFROM ubuntu:16.04 AS build-env\n#   install base packages, supervisor, cron, logrotate\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends autoconf build-essential gcc git libjansson-dev make openssl software-properties-common unzip wget zlib1g-dev -yq\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    ZEPHIR_VERSION=\"0.11.12\" \\\n    ZEPHIR_PARSER_VERSION=\"v1.3.1\" \\\n    NGINX_VERSION=\"1.16.0\" \\\n    NGINX_USER=\"www-data\" \\\n    NGINX_CONF_PATH=\"/etc/nginx\" \\\n    NGINX_LOG_PATH=\"/var/log/nginx\" \\\n    NGINX_BUILD=\"Ubuntu\" \\\n    PCRE_VERSION=\"8.43\" \\\n    PCRE_PATH=\"/var/lib/pcre\" \\\n    OPENSSL_VERSION=\"openssl-1.0.2o\"\nRUN LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php \\\n && apt-get update -y\n#   PHP 7.2 with dependencies\nRUN apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y -f --no-install-recommends jq libc6-dev libexpat-dev libgeoip-dev libpcre3-dev libssh2-1-dev libssl-dev libxslt1-dev libyaml-dev lsb-release php7.2-cli php7.2-common php7.2-dev php7.2-xml re2c\n#   Nginx dependencies\nRUN apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y -f --no-install-recommends libexpat-dev libmaxminddb-dev mmdb-bin libmaxminddb0\n#   Turn the detached message off\nRUN git config --global advice.detachedHead false\nCOPY ./installers /installers\n#   Build custom extensions and move it to /artifacts folder\nRUN mkdir /artifacts \\\n && bash /installers/zephir-parser.sh \\\n && bash /installers/zephir.sh \\\n && bash /installers/pinba.sh\n#   Update openssl from openssl 1.0.2g to 1.0.2o\nRUN bash /installers/openssl.sh\n#   configure NGINX from source\nRUN bash /installers/nginx.sh\nCOPY ./configs/etc/nginx/nginx.conf /etc/nginx/nginx.conf\n#   Application image\nFROM phalconphp/base:ubuntu-16.04\nLABEL description=\"Application image to use for production with PHP and Nginx\" \\\n      maintainer=\"Serghei Iakovlev <serghei@phalconphp.com>\" \\\n      vendor=\"Phalcon\" \\\n      name=\"com.phalconphp.images.ubuntu-16.04.php-7.2\"\nARG GITHUB_TOKEN\nARG GITHUB_USER\nARG PINBA_SERVER\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    FPM_MAX_CHILDREN=\"32\" \\\n    FPM_START_SERVERS=\"6\" \\\n    FPM_MIN_SPARE_SERVERS=\"2\" \\\n    FPM_MAX_SPARE_SERVERS=\"8\" \\\n    FPM_PROCESS_IDLE_TIMEOUT=\"5\" \\\n    FPM_MAX_REQUEST=\"1024\" \\\n    PATH=\"/root/composer/vendor/bin:$PATH\" \\\n    COMPOSER_HOME=\"/root/composer\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\" \\\n    PCRE_PATH=\"/var/lib/pcre\" \\\n    PINBA_SERVER=\"${PINBA_SERVER:-}\" \\\n    GITHUB_USER=\"${GITHUB_USER:-}\" \\\n    GITHUB_TOKEN=\"${GITHUB_TOKEN:-}\"\n#   TODO: HEALTHCHECK\nCOPY ./configs/etc/dpkg/dpkg.cfg.d/ /etc/dpkg/dpkg.cfg.d/\nRUN LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php\n#   Install php 7.2 with libs and other software\nRUN apt-get update -y \\\n && apt-get -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" install -y -f --no-install-recommends dnsutils iproute2 libc6-dev libgeoip-dev libpcre3-dev libssh2-1-dev libssl-dev libyaml-dev lsb-release php-amqp php-apcu-bc php-igbinary php-memcache php-pear php-sodium php-ssh2 php-xdebug php-yaml php7.2-bcmath php7.2-cgi php7.2-cli php7.2-common php7.2-curl php7.2-dba php7.2-dev php7.2-fpm php7.2-gd php7.2-gmp php7.2-imagick php7.2-imap php7.2-intl php7.2-json php7.2-mbstring php7.2-memcached php7.2-mongodb php7.2-msgpack php7.2-mysql php7.2-odbc php7.2-opcache php7.2-pgsql php7.2-phalcon php7.2-pspell php7.2-recode php7.2-redis php7.2-soap php7.2-tidy php7.2-xml php7.2-zip software-properties-common swig tmpreaper unzip wget\n#   Create required directories\nRUN mkdir -p /app /tmp/xdebug-{profile,outpt} /run/php /var/log/php /var/lib/nginx/{cache,proxy} $COMPOSER_HOME\nCOPY --from=build-env /artifacts/ /\nCOPY ./configs/etc/php/7.2/ /etc/php/7.2/\nRUN wget -qO- https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && chmod +x /usr/local/bin/composer\n#   Disable following modules by default\nRUN phpdismod -v 7.2 apcu_bc \\\n && phpdismod -v 7.2 apcu \\\n && phpdismod -v 7.2 mongodb \\\n && phpdismod -v 7.2 pinba \\\n && phpdismod -v 7.2 xdebug\n#   Nginx with GeoIP setup\nRUN apt-get install libjansson-dev libmaxminddb0 mmdb-bin nginx openssl zlib1g-dev -y\nRUN mkdir -p /usr/share/GeoIP \\\n && wget -qO - http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz | gunzip -c > /usr/share/GeoIP/maxmind-city.mmdb \\\n && wget -qO - http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz | gunzip -c > /usr/share/GeoIP/maxmind-country.mmdb\nCOPY --from=build-env $PCRE_PATH $PCRE_PATH\nCOPY --from=build-env /usr/sbin/nginx /usr/sbin/nginx\nCOPY ./configs/etc/nginx/ /etc/nginx/\n#   Supervisor && logrotate\nCOPY ./configs/etc/supervisor/ /etc/supervisor/\nCOPY ./configs/etc/logrotate.d/ /etc/logrotate.d/\n#   Startup scripts\nCOPY ./entrypoint.sh /entrypoint.sh\nCOPY ./entrypoint.d /entrypoint.d\n#   Final check and preparing entrypoint\nRUN echo \\\n && nginx -v \\\n && php --version | head -n 1 \\\n && composer --version --no-ansi \\\n && zephir --version \\\n && php -r 'echo \"Phalcon \" . \\Phalcon\\Version::get() . \"\\n\";' \\\n && echo -n \"Zephir Parser \" \\\n && php -d extension=`php-config --extension-dir `/zephir_parser.so --ri \"Zephir Parser\" | grep Version | awk '{print $3}' \\\n && echo \\\n && chmod +x /entrypoint.sh\n#   Cleanup\nRUN apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /tmp/* /var/tmp/* \\\n && rm -rf /usr/share/doc/* \\\n && rm -rf /usr/share/man/* \\\n && rm -rf /usr/share/locale/* \\\n && rm -f /var/log/php7.2-fpm.log \\\n && find /var/cache/apt/archives /var/lib/apt/lists -not -name lock -type f -delete \\\n && find /var/cache -type f -not -name lock -delete \\\n && find /var/log -type f | while read f ; do echo -n '' > ${f}; done\nVOLUME /app  /var/log/nginx  /var/log/php  /tmp/xdebug-profile  /tmp/xdebug-outupt  /var/lib/nginx/cache  /var/lib/nginx/proxy\nWORKDIR /app\n#   Local Variables:\n#   tab-width: 4\n#   End:\n","originalDockerfileUglifiedHash":"63ce3a07e9b5106c9267dc9d9bd25029","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9dbbc700172749674ab5692aeeceef75eef8f419.dockerfile"}