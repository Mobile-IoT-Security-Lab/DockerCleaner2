{"seed":2758340459,"processedDockerfileHash":"4be925c55f82376ad5281d4dcb055443","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   uIota Dockerfile\n#\n#   The resulting image will contain everything needed to build uIota FW.\n#\n#   Setup: (only needed once per Dockerfile change)\n#   1. install docker, add yourself to docker group, enable docker, relogin\n#   2. # docker build -t uiota-build .\n#\n#   Usage:\n#   3. cd to riot root\n#   4. # docker run -i -t -u $UID -v $(pwd):/data/riotbuild uiota-build ./dist/tools/compile_test/compile_test.py\nFROM debian:stretch\nMAINTAINER Kristoffer Ek <stoffer@skulp.net>\n#   unrar is non-free\nRUN \"echo\" \"deb http://http.us.debian.org/debian stretch non-free\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends aptitude=0.8.7-1 autoconf=2.69-10 automake=1:1.15-6 bash=4.4-5 bison=2:3.0.4.dfsg-1+b1 bzip2=1.0.6-8.1 flex=2.6.1-1.3 g++=4:6.3.0-4 gawk=1:4.1.4+dfsg-1 gcc=4:6.3.0-4 git=1:2.11.0-3+deb9u7 gnupg=2.1.18-8~deb9u4 gperf=3.0.4-2+b1 help2man=1.47.4 joe=4.4-1 libexpat-dev libtool=2.4.6-2 libtool-bin=2.4.6-2 make=4.1-9.1 ncurses-dev nano=2.7.4-1 python=2.7.13-2 python-dev=2.7.13-2 python-serial=3.2.1-1 sed=4.4-1 texinfo=6.3.0.dfsg.1-1+b2 unrar unzip=6.0-21+deb9u2 vim=2:8.0.0197-4+deb9u7 wget=1.18-5+deb9u3 splint=3.1.2.dfsg1-4 sudo=1.8.19p1-2.1+deb9u3 screen=4.5.0-6+deb9u1 software-properties-common=0.96.20.2-1+deb9u1 -y )\n#   Java\nRUN echo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu bionic main\" > /etc/apt/sources.list.d/linuxuprising-java.list \\\n && :\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A\nRUN echo oracle-java11-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections\nRUN echo oracle-java11-installer shared/accepted-oracle-licence-v1-2 boolean true | sudo /usr/bin/debconf-set-selections\nRUN (apt-get update ;apt-get install --no-install-recommends oracle-java11-set-default -y --allow-unauthenticated )\n#   Adduser `meterlogger`\nRUN perl -pi -e 's/^#?\\%sudo\\W+ALL=\\(ALL\\:ALL\\)\\W+ALL/\\%sudo\\tALL=\\(ALL\\:ALL\\) NOPASSWD\\: ALL/' /etc/sudoers\nRUN adduser --disabled-password --gecos \"\" meterlogger \\\n && usermod -a -G dialout meterlogger\nRUN usermod -a -G sudo meterlogger\n#   Create our main work directory\nRUN mkdir /meterlogger\nRUN chown -R meterlogger:meterlogger /meterlogger\n#   Crosstool demands non-root user for compilation\nUSER meterlogger\n#   esp-open-sdk\nRUN cd /meterlogger \\\n && git clone --recursive https://github.com/nabovarme/esp-open-sdk.git \\\n && cd /meterlogger/esp-open-sdk \\\n && git checkout sdk-v2.2.x\nRUN rm -fr /meterlogger/esp-open-sdk/esp-open-lwip\nRUN cd /meterlogger/esp-open-sdk \\\n && git clone https://github.com/nabovarme/esp-open-lwip.git \\\n && cd /meterlogger/esp-open-sdk/esp-open-lwip \\\n && git checkout dns_cache\nRUN cd /meterlogger/esp-open-sdk \\\n && make STANDALONE=y\n#   EspStackTraceDecoder.jar\nRUN cd /meterlogger \\\n && wget https://github.com/littleyoda/EspStackTraceDecoder/releases/download/untagged-59a763238a6cedfe0362/EspStackTraceDecoder.jar\n#   meterlogger\nRUN cd /meterlogger \\\n && git clone --recursive https://github.com/nabovarme/MeterLogger.git \\\n && cd /meterlogger/MeterLogger \\\n && git checkout dns_cache\nUSER root\n#   Export ENV\nENV PATH=\"/meterlogger/esp-open-sdk/xtensa-lx106-elf/bin:$PATH\"\nENV XTENSA_TOOLS_ROOT=\"/meterlogger/esp-open-sdk/xtensa-lx106-elf/bin\"\nENV SDK_BASE=\"/meterlogger/esp-open-sdk/sdk\"\nWORKDIR /meterlogger/MeterLogger\nCMD cp /meterlogger/esp-open-sdk/xtensa-lx106-elf/bin/esptool.py /meterlogger/MeterLogger/tools/ \\\n && cd /meterlogger/MeterLogger \\\n && eval $BUILD_ENV make clean all\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  uIota Dockerfile\n#\n#  The resulting image will contain everything needed to build uIota FW.\n#\n#  Setup: (only needed once per Dockerfile change)\n#  1. install docker, add yourself to docker group, enable docker, relogin\n#  2. # docker build -t uiota-build .\n#\n#  Usage:\n#  3. cd to riot root\n#  4. # docker run -i -t -u $UID -v $(pwd):/data/riotbuild uiota-build ./dist/tools/compile_test/compile_test.py\nFROM debian:stretch\nMAINTAINER Kristoffer Ek <stoffer@skulp.net>\n#  unrar is non-free\nRUN \"echo\" \"deb http://http.us.debian.org/debian stretch non-free\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install aptitude autoconf automake bash bison bzip2 flex g++ gawk gcc git gnupg gperf help2man joe libexpat-dev libtool libtool-bin make ncurses-dev nano python python-dev python-serial sed texinfo unrar unzip vim wget splint sudo screen software-properties-common -y\n#  Java\nRUN echo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu bionic main\" > /etc/apt/sources.list.d/linuxuprising-java.list \\\n && apt-get update\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A\nRUN echo oracle-java11-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections\nRUN echo oracle-java11-installer shared/accepted-oracle-licence-v1-2 boolean true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install oracle-java11-set-default -y --allow-unauthenticated\n#  Adduser `meterlogger`\nRUN perl -pi -e 's/^#?\\%sudo\\W+ALL=\\(ALL\\:ALL\\)\\W+ALL/\\%sudo\\tALL=\\(ALL\\:ALL\\) NOPASSWD\\: ALL/' /etc/sudoers\nRUN adduser --disabled-password --gecos \"\" meterlogger \\\n && usermod -a -G dialout meterlogger\nRUN usermod -a -G sudo meterlogger\n#  Create our main work directory\nRUN mkdir /meterlogger\nRUN chown -R meterlogger:meterlogger /meterlogger\n#  Crosstool demands non-root user for compilation\nUSER meterlogger\n#  esp-open-sdk\nRUN cd /meterlogger \\\n && git clone --recursive https://github.com/nabovarme/esp-open-sdk.git \\\n && cd /meterlogger/esp-open-sdk \\\n && git checkout sdk-v2.2.x\nRUN rm -fr /meterlogger/esp-open-sdk/esp-open-lwip\nRUN cd /meterlogger/esp-open-sdk \\\n && git clone https://github.com/nabovarme/esp-open-lwip.git \\\n && cd /meterlogger/esp-open-sdk/esp-open-lwip \\\n && git checkout dns_cache\nRUN cd /meterlogger/esp-open-sdk \\\n && make STANDALONE=y\n#  EspStackTraceDecoder.jar\nRUN cd /meterlogger \\\n && wget https://github.com/littleyoda/EspStackTraceDecoder/releases/download/untagged-59a763238a6cedfe0362/EspStackTraceDecoder.jar\n#  meterlogger\nRUN cd /meterlogger \\\n && git clone --recursive https://github.com/nabovarme/MeterLogger.git \\\n && cd /meterlogger/MeterLogger \\\n && git checkout dns_cache\nUSER root\n#  Export ENV\nENV PATH=\"/meterlogger/esp-open-sdk/xtensa-lx106-elf/bin:$PATH\"\nENV XTENSA_TOOLS_ROOT=\"/meterlogger/esp-open-sdk/xtensa-lx106-elf/bin\"\nENV SDK_BASE=\"/meterlogger/esp-open-sdk/sdk\"\nWORKDIR /meterlogger/MeterLogger\nCMD cp /meterlogger/esp-open-sdk/xtensa-lx106-elf/bin/esptool.py /meterlogger/MeterLogger/tools/ \\\n && cd /meterlogger/MeterLogger \\\n && eval $BUILD_ENV make clean all\n","injectedSmells":[],"originalDockerfileHash":"8b1135d19b417870d5d9c637a468ef6b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   uIota Dockerfile\n#\n#   The resulting image will contain everything needed to build uIota FW.\n#\n#   Setup: (only needed once per Dockerfile change)\n#   1. install docker, add yourself to docker group, enable docker, relogin\n#   2. # docker build -t uiota-build .\n#\n#   Usage:\n#   3. cd to riot root\n#   4. # docker run -i -t -u $UID -v $(pwd):/data/riotbuild uiota-build ./dist/tools/compile_test/compile_test.py\nFROM debian:stretch\nMAINTAINER Kristoffer Ek <stoffer@skulp.net>\n#   unrar is non-free\nRUN \"echo\" \"deb http://http.us.debian.org/debian stretch non-free\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install aptitude autoconf automake bash bison bzip2 flex g++ gawk gcc git gnupg gperf help2man joe libexpat-dev libtool libtool-bin make ncurses-dev nano python python-dev python-serial sed texinfo unrar unzip vim wget splint sudo screen software-properties-common -y\n#   Java\nRUN echo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu bionic main\" > /etc/apt/sources.list.d/linuxuprising-java.list \\\n && apt-get update\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A\nRUN echo oracle-java11-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections\nRUN echo oracle-java11-installer shared/accepted-oracle-licence-v1-2 boolean true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install oracle-java11-set-default -y --allow-unauthenticated\n#   Adduser `meterlogger`\nRUN perl -pi -e 's/^#?\\%sudo\\W+ALL=\\(ALL\\:ALL\\)\\W+ALL/\\%sudo\\tALL=\\(ALL\\:ALL\\) NOPASSWD\\: ALL/' /etc/sudoers\nRUN adduser --disabled-password --gecos \"\" meterlogger \\\n && usermod -a -G dialout meterlogger\nRUN usermod -a -G sudo meterlogger\n#   Create our main work directory\nRUN mkdir /meterlogger\nRUN chown -R meterlogger:meterlogger /meterlogger\n#   Crosstool demands non-root user for compilation\nUSER meterlogger\n#   esp-open-sdk\nRUN cd /meterlogger \\\n && git clone --recursive https://github.com/nabovarme/esp-open-sdk.git \\\n && cd /meterlogger/esp-open-sdk \\\n && git checkout sdk-v2.2.x\nRUN rm -fr /meterlogger/esp-open-sdk/esp-open-lwip\nRUN cd /meterlogger/esp-open-sdk \\\n && git clone https://github.com/nabovarme/esp-open-lwip.git \\\n && cd /meterlogger/esp-open-sdk/esp-open-lwip \\\n && git checkout dns_cache\nRUN cd /meterlogger/esp-open-sdk \\\n && make STANDALONE=y\n#   EspStackTraceDecoder.jar\nRUN cd /meterlogger \\\n && wget https://github.com/littleyoda/EspStackTraceDecoder/releases/download/untagged-59a763238a6cedfe0362/EspStackTraceDecoder.jar\n#   meterlogger\nRUN cd /meterlogger \\\n && git clone --recursive https://github.com/nabovarme/MeterLogger.git \\\n && cd /meterlogger/MeterLogger \\\n && git checkout dns_cache\nUSER root\n#   Export ENV\nENV PATH=\"/meterlogger/esp-open-sdk/xtensa-lx106-elf/bin:$PATH\"\nENV XTENSA_TOOLS_ROOT=\"/meterlogger/esp-open-sdk/xtensa-lx106-elf/bin\"\nENV SDK_BASE=\"/meterlogger/esp-open-sdk/sdk\"\nWORKDIR /meterlogger/MeterLogger\nCMD cp /meterlogger/esp-open-sdk/xtensa-lx106-elf/bin/esptool.py /meterlogger/MeterLogger/tools/ \\\n && cd /meterlogger/MeterLogger \\\n && eval $BUILD_ENV make clean all\n","originalDockerfileUglifiedHash":"de01a8f4ca74ed830c2aca102a8901f0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/624cb7ba1a7766aaaef96fd83a980b71483d74ed.dockerfile"}