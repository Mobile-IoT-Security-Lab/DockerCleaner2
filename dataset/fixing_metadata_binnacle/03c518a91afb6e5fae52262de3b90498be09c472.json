{"seed":3081672864,"processedDockerfileHash":"73aea72ffaf58d737dc29716a9bac5c3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM lsiobase/nginx:arm64v8-3.9\n#   set version label\nARG BUILD_DATE\nARG VERSION\nARG CERTBOT_VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"aptalca\"\n#   environment settings\nENV DHLEVEL=\"2048\" \\\n    ONLY_SUBDOMAINS=\"false\" \\\n    AWS_CONFIG_FILE=\"/config/dns-conf/route53.ini\"\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=\"2\"\nRUN echo \"**** install runtime packages ****\" \\\n && apk add curl fail2ban gnupg memcached nginx nginx-mod-http-echo nginx-mod-http-fancyindex nginx-mod-http-geoip nginx-mod-http-headers-more nginx-mod-http-image-filter nginx-mod-http-lua nginx-mod-http-lua-upstream nginx-mod-http-nchan nginx-mod-http-perl nginx-mod-http-redis2 nginx-mod-http-set-misc nginx-mod-http-upload-progress nginx-mod-http-xslt-filter nginx-mod-mail nginx-mod-rtmp nginx-mod-stream nginx-mod-stream-geoip nginx-vim php7-bz2 php7-ctype php7-curl php7-dom php7-exif php7-gd php7-iconv php7-intl php7-mcrypt php7-memcached php7-mysqli php7-mysqlnd php7-opcache php7-pdo_mysql php7-pdo_pgsql php7-pdo_sqlite php7-pecl-redis php7-pgsql php7-phar php7-posix php7-soap php7-sockets php7-sqlite3 php7-tokenizer php7-xml php7-xmlreader php7-zip py3-cryptography py3-future py3-pip --no-cache --upgrade \\\n && echo \"**** install certbot plugins ****\" \\\n && if [ -z ${CERTBOT_VERSION+x} ] ; then CERTBOT=\"certbot\" ; else CERTBOT=\"certbot==${CERTBOT_VERSION}\" ; fi \\\n && pip3 install -U pip \\\n && pip3 install -U ${CERTBOT} certbot-dns-cloudflare certbot-dns-cloudxns certbot-dns-digitalocean certbot-dns-dnsimple certbot-dns-dnsmadeeasy certbot-dns-google certbot-dns-luadns certbot-dns-nsone certbot-dns-ovh certbot-dns-rfc2136 certbot-dns-route53 requests \\\n && echo \"**** remove unnecessary fail2ban filters ****\" \\\n && rm /etc/fail2ban/jail.d/alpine-ssh.conf \\\n && echo \"**** copy fail2ban default action and filter to /default ****\" \\\n && mkdir -p /defaults/fail2ban \\\n && mv /etc/fail2ban/action.d /defaults/fail2ban/ \\\n && mv /etc/fail2ban/filter.d /defaults/fail2ban/ \\\n && echo \"**** copy proxy confs to /default ****\" \\\n && mkdir -p /defaults/proxy-confs \\\n && curl -o /tmp/proxy.tar.gz -L \"https://github.com/linuxserver/reverse-proxy-confs/tarball/master\" \\\n && tar xf /tmp/proxy.tar.gz -C /defaults/proxy-confs --strip-components=1 --exclude=linux*/.gitattributes --exclude=linux*/.github --exclude=linux*/.gitignore --exclude=linux*/LICENSE \\\n && echo \"**** configure nginx ****\" \\\n && rm -f /etc/nginx/conf.d/default.conf \\\n && echo \"**** cleanup ****\" \\\n && for cleanfiles in *.pyc *.pyo; do find /usr/lib/python3.* -iname \"${cleanfiles}\" -exec rm -f '{}' + ; done \\\n && rm -rf /tmp/* /root/.cache\n#   add local files\nCOPY root/ /\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM lsiobase/nginx:arm64v8-3.9\n#  set version label\nARG BUILD_DATE\nARG VERSION\nARG CERTBOT_VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"aptalca\"\n#  environment settings\nENV DHLEVEL=\"2048\" \\\n    ONLY_SUBDOMAINS=\"false\" \\\n    AWS_CONFIG_FILE=\"/config/dns-conf/route53.ini\"\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=\"2\"\nRUN echo \"**** install runtime packages ****\" \\\n && apk add --no-cache --upgrade curl fail2ban gnupg memcached nginx nginx-mod-http-echo nginx-mod-http-fancyindex nginx-mod-http-geoip nginx-mod-http-headers-more nginx-mod-http-image-filter nginx-mod-http-lua nginx-mod-http-lua-upstream nginx-mod-http-nchan nginx-mod-http-perl nginx-mod-http-redis2 nginx-mod-http-set-misc nginx-mod-http-upload-progress nginx-mod-http-xslt-filter nginx-mod-mail nginx-mod-rtmp nginx-mod-stream nginx-mod-stream-geoip nginx-vim php7-bz2 php7-ctype php7-curl php7-dom php7-exif php7-gd php7-iconv php7-intl php7-mcrypt php7-memcached php7-mysqli php7-mysqlnd php7-opcache php7-pdo_mysql php7-pdo_pgsql php7-pdo_sqlite php7-pecl-redis php7-pgsql php7-phar php7-posix php7-soap php7-sockets php7-sqlite3 php7-tokenizer php7-xml php7-xmlreader php7-zip py3-cryptography py3-future py3-pip \\\n && echo \"**** install certbot plugins ****\" \\\n && if [ -z ${CERTBOT_VERSION+x} ] ; then CERTBOT=\"certbot\" ; else CERTBOT=\"certbot==${CERTBOT_VERSION}\" ; fi \\\n && pip3 install -U pip \\\n && pip3 install -U ${CERTBOT} certbot-dns-cloudflare certbot-dns-cloudxns certbot-dns-digitalocean certbot-dns-dnsimple certbot-dns-dnsmadeeasy certbot-dns-google certbot-dns-luadns certbot-dns-nsone certbot-dns-ovh certbot-dns-rfc2136 certbot-dns-route53 requests \\\n && echo \"**** remove unnecessary fail2ban filters ****\" \\\n && rm /etc/fail2ban/jail.d/alpine-ssh.conf \\\n && echo \"**** copy fail2ban default action and filter to /default ****\" \\\n && mkdir -p /defaults/fail2ban \\\n && mv /etc/fail2ban/action.d /defaults/fail2ban/ \\\n && mv /etc/fail2ban/filter.d /defaults/fail2ban/ \\\n && echo \"**** copy proxy confs to /default ****\" \\\n && mkdir -p /defaults/proxy-confs \\\n && curl -o /tmp/proxy.tar.gz -L \"https://github.com/linuxserver/reverse-proxy-confs/tarball/master\" \\\n && tar xf /tmp/proxy.tar.gz -C /defaults/proxy-confs --strip-components=1 --exclude=linux*/.gitattributes --exclude=linux*/.github --exclude=linux*/.gitignore --exclude=linux*/LICENSE \\\n && echo \"**** configure nginx ****\" \\\n && rm -f /etc/nginx/conf.d/default.conf \\\n && echo \"**** cleanup ****\" \\\n && for cleanfiles in *.pyc *.pyo; do find /usr/lib/python3.* -iname \"${cleanfiles}\" -exec rm -f '{}' + ; done \\\n && rm -rf /tmp/* /root/.cache\n#  add local files\nCOPY root/ /\n","injectedSmells":[],"originalDockerfileHash":"71c4a2fe7a70c5a87bde9f66b7ae98a0","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM lsiobase/nginx:arm64v8-3.9\n#   set version label\nARG BUILD_DATE\nARG VERSION\nARG CERTBOT_VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"aptalca\"\n#   environment settings\nENV DHLEVEL=\"2048\" \\\n    ONLY_SUBDOMAINS=\"false\" \\\n    AWS_CONFIG_FILE=\"/config/dns-conf/route53.ini\"\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=\"2\"\nRUN echo \"**** install runtime packages ****\" \\\n && apk add --no-cache --upgrade curl fail2ban gnupg memcached nginx nginx-mod-http-echo nginx-mod-http-fancyindex nginx-mod-http-geoip nginx-mod-http-headers-more nginx-mod-http-image-filter nginx-mod-http-lua nginx-mod-http-lua-upstream nginx-mod-http-nchan nginx-mod-http-perl nginx-mod-http-redis2 nginx-mod-http-set-misc nginx-mod-http-upload-progress nginx-mod-http-xslt-filter nginx-mod-mail nginx-mod-rtmp nginx-mod-stream nginx-mod-stream-geoip nginx-vim php7-bz2 php7-ctype php7-curl php7-dom php7-exif php7-gd php7-iconv php7-intl php7-mcrypt php7-memcached php7-mysqli php7-mysqlnd php7-opcache php7-pdo_mysql php7-pdo_pgsql php7-pdo_sqlite php7-pecl-redis php7-pgsql php7-phar php7-posix php7-soap php7-sockets php7-sqlite3 php7-tokenizer php7-xml php7-xmlreader php7-zip py3-cryptography py3-future py3-pip \\\n && echo \"**** install certbot plugins ****\" \\\n && if [ -z ${CERTBOT_VERSION+x} ] ; then CERTBOT=\"certbot\" ; else CERTBOT=\"certbot==${CERTBOT_VERSION}\" ; fi \\\n && pip3 install -U pip \\\n && pip3 install -U ${CERTBOT} certbot-dns-cloudflare certbot-dns-cloudxns certbot-dns-digitalocean certbot-dns-dnsimple certbot-dns-dnsmadeeasy certbot-dns-google certbot-dns-luadns certbot-dns-nsone certbot-dns-ovh certbot-dns-rfc2136 certbot-dns-route53 requests \\\n && echo \"**** remove unnecessary fail2ban filters ****\" \\\n && rm /etc/fail2ban/jail.d/alpine-ssh.conf \\\n && echo \"**** copy fail2ban default action and filter to /default ****\" \\\n && mkdir -p /defaults/fail2ban \\\n && mv /etc/fail2ban/action.d /defaults/fail2ban/ \\\n && mv /etc/fail2ban/filter.d /defaults/fail2ban/ \\\n && echo \"**** copy proxy confs to /default ****\" \\\n && mkdir -p /defaults/proxy-confs \\\n && curl -o /tmp/proxy.tar.gz -L \"https://github.com/linuxserver/reverse-proxy-confs/tarball/master\" \\\n && tar xf /tmp/proxy.tar.gz -C /defaults/proxy-confs --strip-components=1 --exclude=linux*/.gitattributes --exclude=linux*/.github --exclude=linux*/.gitignore --exclude=linux*/LICENSE \\\n && echo \"**** configure nginx ****\" \\\n && rm -f /etc/nginx/conf.d/default.conf \\\n && echo \"**** cleanup ****\" \\\n && for cleanfiles in *.pyc *.pyo; do find /usr/lib/python3.* -iname \"${cleanfiles}\" -exec rm -f '{}' + ; done \\\n && rm -rf /tmp/* /root/.cache\n#   add local files\nCOPY root/ /\n","originalDockerfileUglifiedHash":"4972a23f43cd4c8fbded6fe2174ed74e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/03c518a91afb6e5fae52262de3b90498be09c472.dockerfile"}