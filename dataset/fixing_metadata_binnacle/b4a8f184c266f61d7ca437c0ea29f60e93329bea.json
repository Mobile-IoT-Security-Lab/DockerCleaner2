{"seed":17106716,"processedDockerfileHash":"a7bd42354bcf4aaa99a1fcde16c87242","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\n#   ------------------------------------------------------\n#   --- Environments and base directories\n#   Environments\n#   - Language\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TOOL_VER_BITRISE_CLI=\"1.21.0\" \\\n    TOOL_VER_RUBY=\"2.3.4\" \\\n    TOOL_VER_GO=\"1.8.1\"\n#   ------------------------------------------------------\n#   --- Base pre-installed tools\nRUN :\n#   Generate proper EN US UTF-8 locale\n#   Install the \"locales\" package - required for locale-gen\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y locales \\\n && locale-gen en_US.UTF-8\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install git mercurial curl wget rsync sudo expect python build-essential\n#   ------------------------------------------------------\n#   --- Pre-installed but not through apt-get\n#   install Ruby from source\n#    from source: mainly because of GEM native extensions,\n#    this is the most reliable way to use Ruby on Ubuntu if GEM native extensions are required\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev libsqlite3-dev \\\n && cd ${BITRISE_PREP_DIR} \\\n && wget -q http://cache.ruby-lang.org/pub/ruby/ruby-${TOOL_VER_RUBY}.tar.gz \\\n && tar -xvzf ruby-${TOOL_VER_RUBY}.tar.gz \\\n && cd ruby-${TOOL_VER_RUBY} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd ${BITRISE_PREP_DIR} \\\n && rm -rf ruby-${TOOL_VER_RUBY} \\\n && rm ruby-${TOOL_VER_RUBY}.tar.gz \\\n && gem install bundler --version 2.4.12 --no-document \\\n && gem update --system --no-document\n#   install Go\n#    from official binary package\nRUN wget -q https://storage.googleapis.com/golang/go${TOOL_VER_GO}.linux-amd64.tar.gz -O go-bins.tar.gz \\\n && tar -C /usr/local -xvzf go-bins.tar.gz \\\n && rm go-bins.tar.gz\n#   ENV setup\nENV PATH=\"$PATH:/usr/local/go/bin\"\n#   Go Workspace dirs & envs\n#   From the official Golang Dockerfile\n#    https://github.com/docker-library/golang\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:$PATH\"\n#   755 because Ruby complains if 777 (warning: Insecure world writable dir ... in PATH)\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \\\n && chmod -R 755 \"$GOPATH\"\n#   Install NodeJS\n#    from official docs: https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\n#  RUN curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\n#  RUN sudo apt-get install -y nodejs\n#   ------------------------------------------------------\n#   --- Bitrise CLI\n#\n#   Install Bitrise CLI\nRUN wget -q https://github.com/bitrise-io/bitrise/releases/download/${TOOL_VER_BITRISE_CLI}/bitrise-$( uname -s ;)-$( uname -m ;) -O /usr/local/bin/bitrise \\\n && chmod +x /usr/local/bin/bitrise \\\n && bitrise setup \\\n && bitrise envman -version \\\n && bitrise stepman -version \\\n && bitrise stepman setup -c https://github.com/bitrise-io/bitrise-steplib.git \\\n && bitrise stepman update\n#   Project specific\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install ruby-dev nodejs liblzma-dev\nWORKDIR /go/src/github.com/bitrise-io/bitrise-workflow-editor\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\n#  ------------------------------------------------------\n#  --- Environments and base directories\n#  Environments\n#  - Language\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TOOL_VER_BITRISE_CLI=\"1.21.0\" \\\n    TOOL_VER_RUBY=\"2.3.4\" \\\n    TOOL_VER_GO=\"1.8.1\"\n#  ------------------------------------------------------\n#  --- Base pre-installed tools\nRUN apt-get update -qq\n#  Generate proper EN US UTF-8 locale\n#  Install the \"locales\" package - required for locale-gen\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y locales \\\n && locale-gen en_US.UTF-8\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install git mercurial curl wget rsync sudo expect python build-essential\n#  ------------------------------------------------------\n#  --- Pre-installed but not through apt-get\n#  install Ruby from source\n#   from source: mainly because of GEM native extensions,\n#   this is the most reliable way to use Ruby on Ubuntu if GEM native extensions are required\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev libsqlite3-dev \\\n && cd ${BITRISE_PREP_DIR} \\\n && wget -q http://cache.ruby-lang.org/pub/ruby/ruby-${TOOL_VER_RUBY}.tar.gz \\\n && tar -xvzf ruby-${TOOL_VER_RUBY}.tar.gz \\\n && cd ruby-${TOOL_VER_RUBY} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd ${BITRISE_PREP_DIR} \\\n && rm -rf ruby-${TOOL_VER_RUBY} \\\n && rm ruby-${TOOL_VER_RUBY}.tar.gz \\\n && gem install bundler --no-document \\\n && gem update --system --no-document\n#  install Go\n#   from official binary package\nRUN wget -q https://storage.googleapis.com/golang/go${TOOL_VER_GO}.linux-amd64.tar.gz -O go-bins.tar.gz \\\n && tar -C /usr/local -xvzf go-bins.tar.gz \\\n && rm go-bins.tar.gz\n#  ENV setup\nENV PATH=\"$PATH:/usr/local/go/bin\"\n#  Go Workspace dirs & envs\n#  From the official Golang Dockerfile\n#   https://github.com/docker-library/golang\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:$PATH\"\n#  755 because Ruby complains if 777 (warning: Insecure world writable dir ... in PATH)\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \\\n && chmod -R 755 \"$GOPATH\"\n#  Install NodeJS\n#   from official docs: https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\n# RUN curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\n# RUN sudo apt-get install -y nodejs\n#  ------------------------------------------------------\n#  --- Bitrise CLI\n#\n#  Install Bitrise CLI\nRUN wget -q https://github.com/bitrise-io/bitrise/releases/download/${TOOL_VER_BITRISE_CLI}/bitrise-$( uname -s ;)-$( uname -m ;) -O /usr/local/bin/bitrise \\\n && chmod +x /usr/local/bin/bitrise \\\n && bitrise setup \\\n && bitrise envman -version \\\n && bitrise stepman -version \\\n && bitrise stepman setup -c https://github.com/bitrise-io/bitrise-steplib.git \\\n && bitrise stepman update\n#  Project specific\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install ruby-dev nodejs liblzma-dev\nWORKDIR /go/src/github.com/bitrise-io/bitrise-workflow-editor\n","injectedSmells":[],"originalDockerfileHash":"8ff51b2a7c2dae15ca20f2690105071c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\n#   ------------------------------------------------------\n#   --- Environments and base directories\n#   Environments\n#   - Language\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TOOL_VER_BITRISE_CLI=\"1.21.0\" \\\n    TOOL_VER_RUBY=\"2.3.4\" \\\n    TOOL_VER_GO=\"1.8.1\"\n#   ------------------------------------------------------\n#   --- Base pre-installed tools\nRUN apt-get update -qq\n#   Generate proper EN US UTF-8 locale\n#   Install the \"locales\" package - required for locale-gen\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y locales \\\n && locale-gen en_US.UTF-8\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install git mercurial curl wget rsync sudo expect python build-essential\n#   ------------------------------------------------------\n#   --- Pre-installed but not through apt-get\n#   install Ruby from source\n#    from source: mainly because of GEM native extensions,\n#    this is the most reliable way to use Ruby on Ubuntu if GEM native extensions are required\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev libsqlite3-dev \\\n && cd ${BITRISE_PREP_DIR} \\\n && wget -q http://cache.ruby-lang.org/pub/ruby/ruby-${TOOL_VER_RUBY}.tar.gz \\\n && tar -xvzf ruby-${TOOL_VER_RUBY}.tar.gz \\\n && cd ruby-${TOOL_VER_RUBY} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && cd ${BITRISE_PREP_DIR} \\\n && rm -rf ruby-${TOOL_VER_RUBY} \\\n && rm ruby-${TOOL_VER_RUBY}.tar.gz \\\n && gem install bundler --no-document \\\n && gem update --system --no-document\n#   install Go\n#    from official binary package\nRUN wget -q https://storage.googleapis.com/golang/go${TOOL_VER_GO}.linux-amd64.tar.gz -O go-bins.tar.gz \\\n && tar -C /usr/local -xvzf go-bins.tar.gz \\\n && rm go-bins.tar.gz\n#   ENV setup\nENV PATH=\"$PATH:/usr/local/go/bin\"\n#   Go Workspace dirs & envs\n#   From the official Golang Dockerfile\n#    https://github.com/docker-library/golang\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:$PATH\"\n#   755 because Ruby complains if 777 (warning: Insecure world writable dir ... in PATH)\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \\\n && chmod -R 755 \"$GOPATH\"\n#   Install NodeJS\n#    from official docs: https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\n#  RUN curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\n#  RUN sudo apt-get install -y nodejs\n#   ------------------------------------------------------\n#   --- Bitrise CLI\n#\n#   Install Bitrise CLI\nRUN wget -q https://github.com/bitrise-io/bitrise/releases/download/${TOOL_VER_BITRISE_CLI}/bitrise-$( uname -s ;)-$( uname -m ;) -O /usr/local/bin/bitrise \\\n && chmod +x /usr/local/bin/bitrise \\\n && bitrise setup \\\n && bitrise envman -version \\\n && bitrise stepman -version \\\n && bitrise stepman setup -c https://github.com/bitrise-io/bitrise-steplib.git \\\n && bitrise stepman update\n#   Project specific\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install ruby-dev nodejs liblzma-dev\nWORKDIR /go/src/github.com/bitrise-io/bitrise-workflow-editor\n","originalDockerfileUglifiedHash":"320abec0b840787c1e7aaeb5bf9f552f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b4a8f184c266f61d7ca437c0ea29f60e93329bea.dockerfile"}