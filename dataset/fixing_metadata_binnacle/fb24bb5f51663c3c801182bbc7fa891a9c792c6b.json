{"seed":2235902625,"processedDockerfileHash":"7a55641b9ce83d5e56f2ed9177446508","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:bionic AS builder\nMAINTAINER Howard Butler <howard@hobu.co>\nARG PDAL_VERSION=master\nARG DESTDIR=\"/build\"\nARG tiledb_version=1.4.1\nENV CC=\"gcc\"\nENV CXX=\"g++\"\nRUN apt-get update -qq ; apt-get -qq remove postgis ; (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.24.32.20 -y --fix-missing )\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends build-essential ca-certificates cmake curl gfortran git libgeotiff-dev libarpack2-dev libflann-dev libhdf5-serial-dev liblapack-dev libtiff5-dev openssh-client python3-dev python3-numpy wget automake libtool libspatialite-dev libsqlite3-mod-spatialite libhdf5-dev libboost-filesystem1.65-dev libboost-iostreams1.65-dev libboost-program-options1.65-dev libboost-system1.65-dev libboost-thread1.65-dev clang libproj-dev libc6-dev libnetcdf-dev libpng-dev libjpeg-dev libgif-dev libwebp-dev libhdf4-alt-dev libhdf5-dev unixodbc-dev libsqlite3-dev libltdl-dev libcurl4-openssl-dev libspatialite-dev cython python3-pip time ninja-build python3-setuptools unzip libeigen3-dev libxml2-dev libssl-dev liblzma-dev libzstd1-dev pkg-config libgdal-dev bash-completion\nRUN git clone https://github.com/LASzip/LASzip.git laszip ; cd laszip ; git checkout 3.4.1 ; cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ -DCMAKE_BUILD_TYPE=\"Release\" . ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf laszip\nRUN git clone https://github.com/hobu/laz-perf.git ; cd laz-perf ; mkdir build ; cd build ; cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /laz-perf\nRUN mkdir /nitro ; cd /nitro ; git clone https://github.com/hobu/nitro ; cd nitro ; mkdir build ; cd build ; cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /nitro\nRUN git clone --depth 1 --branch v0.4.6 https://github.com/gadomski/fgt.git \\\n && cd fgt \\\n && cmake . -DWITH_TESTS=OFF -DBUILD_SHARED_LIBS=ON -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /fgt\nRUN git clone --depth 1 --branch v0.5.1 https://github.com/gadomski/cpd.git \\\n && cd cpd \\\n && cmake . -DWITH_TESTS=OFF -DWITH_FGT=ON -DCMAKE_SYSTEM_PREFIX_PATH=\"${DESTDIR}/usr\" -DCMAKE_CXX_FLAGS=\"-isystem ${DESTDIR}/usr/include\" -DWITH_STRICT_WARNINGS=OFF -DWITH_DOCS=OFF -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /cpd\n#  RUN \\\n#      wget https://github.com/TileDB-Inc/TileDB/archive/${tiledb_version}.tar.gz; \\\n#      tar xzf ${tiledb_version}.tar.gz; \\\n#      rm ${tiledb_version}.tar.gz; \\\n#      cd TileDB-${tiledb_version}; \\\n#      mkdir build; \\\n#      cd build; \\\n#      ../bootstrap --prefix=/usr --enable-s3; \\\n#      make -j2; \\\n#      make install-tiledb; \\\n#      DESTDIR=/ make install-tiledb; \\\n#      cd /; \\\n#      rm -rf TileDB-${tiledb_version};\nRUN git clone --depth 1 --branch ${PDAL_VERSION} https://github.com/PDAL/PDAL.git pdal-git ; cd pdal-git ; mkdir build ; cd build ; cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ -DBUILD_PLUGIN_CPD=ON -DBUILD_PLUGIN_MBIO=OFF -DBUILD_PLUGIN_GREYHOUND=ON -DBUILD_PLUGIN_I3S=ON -DBUILD_PLUGIN_HEXBIN=ON -DBUILD_PLUGIN_ICEBRIDGE=ON -DBUILD_PLUGIN_MRSID=OFF -DBUILD_PLUGIN_NITF=ON -DBUILD_PLUGIN_OCI=OFF -DBUILD_PLUGIN_PCL=OFF -DBUILD_PLUGIN_PGPOINTCLOUD=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBUILD_PLUGIN_SQLITE=ON -DBUILD_PLUGIN_RIVLIB=OFF -DBUILD_PLUGIN_PYTHON=ON -DBUILD_PLUGIN_TILEDB=OFF -DENABLE_CTEST=OFF -DWITH_LAZPERF=ON -DWITH_LASZIP=ON -DWITH_ZSTD=ON -DWITH_ZLIB=ON -DWITH_TESTS=OFF -DWITH_PDAL_JNI=OFF -DCMAKE_BUILD_TYPE=Release ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /pdal-git\n#\n#   Haru hasn't been updated for years.  This tag is the head.\n#\nRUN git clone https://github.com/libharu/libharu \\\n && cd libharu \\\n && git checkout d84867ebf9f3de6afd661d2cdaff102457fbc371 \\\n && mkdir build \\\n && cd build \\\n && cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH:FILEPATH=\"${DESTDIR}\" -DCMAKE_SYSTEM_PREFIX_PATH=\"${DESTDIR}/usr\" -DCMAKE_CXX_FLAGS=\"-isystem ${DESTDIR}/usr/include\" .. ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /libharu\nRUN git clone https://github.com/PDAL/PRC \\\n && cd PRC \\\n && mkdir build \\\n && cd build \\\n && CXXFLAGS=\"-fno-stack-protector\" CFLAGS=\"-fno-stack-protector\" cmake -DCMAKE_INSTALL_PREFIX=/usr/ -DPDAL_DIR=\"/usr/lib/pdal/cmake\" -DCMAKE_BUILD_TYPE=Release .. -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /PRC\nRUN git clone https://github.com/pubgeo/pubgeo.git \\\n && cd pubgeo \\\n && mkdir build \\\n && cd build \\\n && CXXFLAGS=\"-fno-stack-protector\" CFLAGS=\"-fno-stack-protector\" cmake -DCMAKE_INSTALL_PREFIX=/usr/ -DPDAL_DIR=\"/usr/lib/pdal/cmake\" -DCMAKE_BUILD_TYPE=Release .. -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /pubgeo\nFROM ubuntu:bionic AS runner\nRUN : ; DEBIAN_FRONTEND=noninteractive apt-get install -y sudo curl vim unzip unixodbc libgeotiff2 libgeotiff-epsg libexpat1 libxml2 libwebp6 netcdf-bin libhdf4-0-alt libgif7 libdapclient6v5 libspatialite7 libsqlite3-mod-spatialite spatialite-bin libtiff5 libflann1.9 libssl1.1 libpython2.7 libproj-dev proj-bin gdal-bin proj-data zlib1g libpng16-16 python3-setuptools liblzma5 libzstd1 libhdf5-cpp-100 ; rm -rf /var/lib/apt/lists/*\nRUN date\nCOPY --from=builder /build/usr/bin/ /usr/bin/\nCOPY --from=builder /build/usr/lib/ /usr/lib/\nCOPY --from=builder /build/usr/include/ /usr/include/\nRUN curl -LOs http://download.osgeo.org/proj/proj-datumgrid-1.8.zip \\\n && unzip -j -u -o proj-datumgrid-1.8.zip -d /usr/share/proj \\\n && rm proj-datumgrid-1.8.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-europe-1.2.zip \\\n && unzip -j -u -o proj-datumgrid-europe-1.2.zip -d /usr/share/proj \\\n && rm proj-datumgrid-europe-1.2.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-oceania-1.0.zip \\\n && unzip -j -u -o proj-datumgrid-oceania-1.0.zip -d /usr/share/proj \\\n && rm proj-datumgrid-oceania-1.0.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-world-1.0.zip \\\n && unzip -j -u -o proj-datumgrid-world-1.0.zip -d /usr/share/proj \\\n && rm proj-datumgrid-world-1.0.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-north-america-1.2.zip \\\n && unzip -j -u -o proj-datumgrid-north-america-1.2.zip -d /usr/share/proj \\\n && rm proj-datumgrid-north-america-1.2.zip\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:bionic AS builder\nMAINTAINER Howard Butler <howard@hobu.co>\nARG PDAL_VERSION=master\nARG DESTDIR=\"/build\"\nARG tiledb_version=1.4.1\nENV CC=\"gcc\"\nENV CXX=\"g++\"\nRUN apt-get update -qq ; apt-get -qq remove postgis ; apt-get install --no-install-recommends software-properties-common -y --fix-missing\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends build-essential ca-certificates cmake curl gfortran git libgeotiff-dev libarpack2-dev libflann-dev libhdf5-serial-dev liblapack-dev libtiff5-dev openssh-client python3-dev python3-numpy wget automake libtool libspatialite-dev libsqlite3-mod-spatialite libhdf5-dev libboost-filesystem1.65-dev libboost-iostreams1.65-dev libboost-program-options1.65-dev libboost-system1.65-dev libboost-thread1.65-dev clang libproj-dev libc6-dev libnetcdf-dev libpng-dev libjpeg-dev libgif-dev libwebp-dev libhdf4-alt-dev libhdf5-dev unixodbc-dev libsqlite3-dev libltdl-dev libcurl4-openssl-dev libspatialite-dev cython python3-pip time ninja-build python3-setuptools unzip libeigen3-dev libxml2-dev libssl-dev liblzma-dev libzstd1-dev pkg-config libgdal-dev bash-completion\nRUN git clone https://github.com/LASzip/LASzip.git laszip ; cd laszip ; git checkout 3.4.1 ; cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ -DCMAKE_BUILD_TYPE=\"Release\" . ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf laszip\nRUN git clone https://github.com/hobu/laz-perf.git ; cd laz-perf ; mkdir build ; cd build ; cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /laz-perf\nRUN mkdir /nitro ; cd /nitro ; git clone https://github.com/hobu/nitro ; cd nitro ; mkdir build ; cd build ; cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /nitro\nRUN git clone --depth 1 --branch v0.4.6 https://github.com/gadomski/fgt.git \\\n && cd fgt \\\n && cmake . -DWITH_TESTS=OFF -DBUILD_SHARED_LIBS=ON -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /fgt\nRUN git clone --depth 1 --branch v0.5.1 https://github.com/gadomski/cpd.git \\\n && cd cpd \\\n && cmake . -DWITH_TESTS=OFF -DWITH_FGT=ON -DCMAKE_SYSTEM_PREFIX_PATH=\"${DESTDIR}/usr\" -DCMAKE_CXX_FLAGS=\"-isystem ${DESTDIR}/usr/include\" -DWITH_STRICT_WARNINGS=OFF -DWITH_DOCS=OFF -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /cpd\n# RUN \\\n#     wget https://github.com/TileDB-Inc/TileDB/archive/${tiledb_version}.tar.gz; \\\n#     tar xzf ${tiledb_version}.tar.gz; \\\n#     rm ${tiledb_version}.tar.gz; \\\n#     cd TileDB-${tiledb_version}; \\\n#     mkdir build; \\\n#     cd build; \\\n#     ../bootstrap --prefix=/usr --enable-s3; \\\n#     make -j2; \\\n#     make install-tiledb; \\\n#     DESTDIR=/ make install-tiledb; \\\n#     cd /; \\\n#     rm -rf TileDB-${tiledb_version};\nRUN git clone --depth 1 --branch ${PDAL_VERSION} https://github.com/PDAL/PDAL.git pdal-git ; cd pdal-git ; mkdir build ; cd build ; cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ -DBUILD_PLUGIN_CPD=ON -DBUILD_PLUGIN_MBIO=OFF -DBUILD_PLUGIN_GREYHOUND=ON -DBUILD_PLUGIN_I3S=ON -DBUILD_PLUGIN_HEXBIN=ON -DBUILD_PLUGIN_ICEBRIDGE=ON -DBUILD_PLUGIN_MRSID=OFF -DBUILD_PLUGIN_NITF=ON -DBUILD_PLUGIN_OCI=OFF -DBUILD_PLUGIN_PCL=OFF -DBUILD_PLUGIN_PGPOINTCLOUD=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBUILD_PLUGIN_SQLITE=ON -DBUILD_PLUGIN_RIVLIB=OFF -DBUILD_PLUGIN_PYTHON=ON -DBUILD_PLUGIN_TILEDB=OFF -DENABLE_CTEST=OFF -DWITH_LAZPERF=ON -DWITH_LASZIP=ON -DWITH_ZSTD=ON -DWITH_ZLIB=ON -DWITH_TESTS=OFF -DWITH_PDAL_JNI=OFF -DCMAKE_BUILD_TYPE=Release ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /pdal-git\n#\n#  Haru hasn't been updated for years.  This tag is the head.\n#\nRUN git clone https://github.com/libharu/libharu \\\n && cd libharu \\\n && git checkout d84867ebf9f3de6afd661d2cdaff102457fbc371 \\\n && mkdir build \\\n && cd build \\\n && cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH:FILEPATH=\"${DESTDIR}\" -DCMAKE_SYSTEM_PREFIX_PATH=\"${DESTDIR}/usr\" -DCMAKE_CXX_FLAGS=\"-isystem ${DESTDIR}/usr/include\" .. ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /libharu\nRUN git clone https://github.com/PDAL/PRC \\\n && cd PRC \\\n && mkdir build \\\n && cd build \\\n && CXXFLAGS=\"-fno-stack-protector\" CFLAGS=\"-fno-stack-protector\" cmake -DCMAKE_INSTALL_PREFIX=/usr/ -DPDAL_DIR=\"/usr/lib/pdal/cmake\" -DCMAKE_BUILD_TYPE=Release .. -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /PRC\nRUN git clone https://github.com/pubgeo/pubgeo.git \\\n && cd pubgeo \\\n && mkdir build \\\n && cd build \\\n && CXXFLAGS=\"-fno-stack-protector\" CFLAGS=\"-fno-stack-protector\" cmake -DCMAKE_INSTALL_PREFIX=/usr/ -DPDAL_DIR=\"/usr/lib/pdal/cmake\" -DCMAKE_BUILD_TYPE=Release .. -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /pubgeo\nFROM ubuntu:bionic AS runner\nRUN apt-get update ; DEBIAN_FRONTEND=noninteractive apt-get install -y sudo curl vim unzip unixodbc libgeotiff2 libgeotiff-epsg libexpat1 libxml2 libwebp6 netcdf-bin libhdf4-0-alt libgif7 libdapclient6v5 libspatialite7 libsqlite3-mod-spatialite spatialite-bin libtiff5 libflann1.9 libssl1.1 libpython2.7 libproj-dev proj-bin gdal-bin proj-data zlib1g libpng16-16 python3-setuptools liblzma5 libzstd1 libhdf5-cpp-100 ; rm -rf /var/lib/apt/lists/*\nRUN date\nCOPY --from=builder /build/usr/bin/ /usr/bin/\nCOPY --from=builder /build/usr/lib/ /usr/lib/\nCOPY --from=builder /build/usr/include/ /usr/include/\nRUN curl -LOs http://download.osgeo.org/proj/proj-datumgrid-1.8.zip \\\n && unzip -j -u -o proj-datumgrid-1.8.zip -d /usr/share/proj \\\n && rm proj-datumgrid-1.8.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-europe-1.2.zip \\\n && unzip -j -u -o proj-datumgrid-europe-1.2.zip -d /usr/share/proj \\\n && rm proj-datumgrid-europe-1.2.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-oceania-1.0.zip \\\n && unzip -j -u -o proj-datumgrid-oceania-1.0.zip -d /usr/share/proj \\\n && rm proj-datumgrid-oceania-1.0.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-world-1.0.zip \\\n && unzip -j -u -o proj-datumgrid-world-1.0.zip -d /usr/share/proj \\\n && rm proj-datumgrid-world-1.0.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-north-america-1.2.zip \\\n && unzip -j -u -o proj-datumgrid-north-america-1.2.zip -d /usr/share/proj \\\n && rm proj-datumgrid-north-america-1.2.zip\n","injectedSmells":[],"originalDockerfileHash":"724d3b05e5e29ffb1102f97985452aa1","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:bionic AS builder\nMAINTAINER Howard Butler <howard@hobu.co>\nARG PDAL_VERSION=master\nARG DESTDIR=\"/build\"\nARG tiledb_version=1.4.1\nENV CC=\"gcc\"\nENV CXX=\"g++\"\nRUN apt-get update -qq ; apt-get -qq remove postgis ; apt-get install --no-install-recommends software-properties-common -y --fix-missing\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends build-essential ca-certificates cmake curl gfortran git libgeotiff-dev libarpack2-dev libflann-dev libhdf5-serial-dev liblapack-dev libtiff5-dev openssh-client python3-dev python3-numpy wget automake libtool libspatialite-dev libsqlite3-mod-spatialite libhdf5-dev libboost-filesystem1.65-dev libboost-iostreams1.65-dev libboost-program-options1.65-dev libboost-system1.65-dev libboost-thread1.65-dev clang libproj-dev libc6-dev libnetcdf-dev libpng-dev libjpeg-dev libgif-dev libwebp-dev libhdf4-alt-dev libhdf5-dev unixodbc-dev libsqlite3-dev libltdl-dev libcurl4-openssl-dev libspatialite-dev cython python3-pip time ninja-build python3-setuptools unzip libeigen3-dev libxml2-dev libssl-dev liblzma-dev libzstd1-dev pkg-config libgdal-dev bash-completion\nRUN git clone https://github.com/LASzip/LASzip.git laszip ; cd laszip ; git checkout 3.4.1 ; cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ -DCMAKE_BUILD_TYPE=\"Release\" . ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf laszip\nRUN git clone https://github.com/hobu/laz-perf.git ; cd laz-perf ; mkdir build ; cd build ; cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=\"Release\" ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /laz-perf\nRUN mkdir /nitro ; cd /nitro ; git clone https://github.com/hobu/nitro ; cd nitro ; mkdir build ; cd build ; cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /nitro\nRUN git clone --depth 1 --branch v0.4.6 https://github.com/gadomski/fgt.git \\\n && cd fgt \\\n && cmake . -DWITH_TESTS=OFF -DBUILD_SHARED_LIBS=ON -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /fgt\nRUN git clone --depth 1 --branch v0.5.1 https://github.com/gadomski/cpd.git \\\n && cd cpd \\\n && cmake . -DWITH_TESTS=OFF -DWITH_FGT=ON -DCMAKE_SYSTEM_PREFIX_PATH=\"${DESTDIR}/usr\" -DCMAKE_CXX_FLAGS=\"-isystem ${DESTDIR}/usr/include\" -DWITH_STRICT_WARNINGS=OFF -DWITH_DOCS=OFF -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /cpd\n#  RUN \\\n#      wget https://github.com/TileDB-Inc/TileDB/archive/${tiledb_version}.tar.gz; \\\n#      tar xzf ${tiledb_version}.tar.gz; \\\n#      rm ${tiledb_version}.tar.gz; \\\n#      cd TileDB-${tiledb_version}; \\\n#      mkdir build; \\\n#      cd build; \\\n#      ../bootstrap --prefix=/usr --enable-s3; \\\n#      make -j2; \\\n#      make install-tiledb; \\\n#      DESTDIR=/ make install-tiledb; \\\n#      cd /; \\\n#      rm -rf TileDB-${tiledb_version};\nRUN git clone --depth 1 --branch ${PDAL_VERSION} https://github.com/PDAL/PDAL.git pdal-git ; cd pdal-git ; mkdir build ; cd build ; cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ -DBUILD_PLUGIN_CPD=ON -DBUILD_PLUGIN_MBIO=OFF -DBUILD_PLUGIN_GREYHOUND=ON -DBUILD_PLUGIN_I3S=ON -DBUILD_PLUGIN_HEXBIN=ON -DBUILD_PLUGIN_ICEBRIDGE=ON -DBUILD_PLUGIN_MRSID=OFF -DBUILD_PLUGIN_NITF=ON -DBUILD_PLUGIN_OCI=OFF -DBUILD_PLUGIN_PCL=OFF -DBUILD_PLUGIN_PGPOINTCLOUD=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBUILD_PLUGIN_SQLITE=ON -DBUILD_PLUGIN_RIVLIB=OFF -DBUILD_PLUGIN_PYTHON=ON -DBUILD_PLUGIN_TILEDB=OFF -DENABLE_CTEST=OFF -DWITH_LAZPERF=ON -DWITH_LASZIP=ON -DWITH_ZSTD=ON -DWITH_ZLIB=ON -DWITH_TESTS=OFF -DWITH_PDAL_JNI=OFF -DCMAKE_BUILD_TYPE=Release ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /pdal-git\n#\n#   Haru hasn't been updated for years.  This tag is the head.\n#\nRUN git clone https://github.com/libharu/libharu \\\n && cd libharu \\\n && git checkout d84867ebf9f3de6afd661d2cdaff102457fbc371 \\\n && mkdir build \\\n && cd build \\\n && cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/ -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH:FILEPATH=\"${DESTDIR}\" -DCMAKE_SYSTEM_PREFIX_PATH=\"${DESTDIR}/usr\" -DCMAKE_CXX_FLAGS=\"-isystem ${DESTDIR}/usr/include\" .. ; ninja ; ninja install ; DESTDIR=/ ninja install ; rm -rf /libharu\nRUN git clone https://github.com/PDAL/PRC \\\n && cd PRC \\\n && mkdir build \\\n && cd build \\\n && CXXFLAGS=\"-fno-stack-protector\" CFLAGS=\"-fno-stack-protector\" cmake -DCMAKE_INSTALL_PREFIX=/usr/ -DPDAL_DIR=\"/usr/lib/pdal/cmake\" -DCMAKE_BUILD_TYPE=Release .. -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /PRC\nRUN git clone https://github.com/pubgeo/pubgeo.git \\\n && cd pubgeo \\\n && mkdir build \\\n && cd build \\\n && CXXFLAGS=\"-fno-stack-protector\" CFLAGS=\"-fno-stack-protector\" cmake -DCMAKE_INSTALL_PREFIX=/usr/ -DPDAL_DIR=\"/usr/lib/pdal/cmake\" -DCMAKE_BUILD_TYPE=Release .. -G \"Ninja\" \\\n && ninja \\\n && ninja install \\\n && DESTDIR=/ ninja install \\\n && rm -rf /pubgeo\nFROM ubuntu:bionic AS runner\nRUN apt-get update ; DEBIAN_FRONTEND=noninteractive apt-get install -y sudo curl vim unzip unixodbc libgeotiff2 libgeotiff-epsg libexpat1 libxml2 libwebp6 netcdf-bin libhdf4-0-alt libgif7 libdapclient6v5 libspatialite7 libsqlite3-mod-spatialite spatialite-bin libtiff5 libflann1.9 libssl1.1 libpython2.7 libproj-dev proj-bin gdal-bin proj-data zlib1g libpng16-16 python3-setuptools liblzma5 libzstd1 libhdf5-cpp-100 ; rm -rf /var/lib/apt/lists/*\nRUN date\nCOPY --from=builder /build/usr/bin/ /usr/bin/\nCOPY --from=builder /build/usr/lib/ /usr/lib/\nCOPY --from=builder /build/usr/include/ /usr/include/\nRUN curl -LOs http://download.osgeo.org/proj/proj-datumgrid-1.8.zip \\\n && unzip -j -u -o proj-datumgrid-1.8.zip -d /usr/share/proj \\\n && rm proj-datumgrid-1.8.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-europe-1.2.zip \\\n && unzip -j -u -o proj-datumgrid-europe-1.2.zip -d /usr/share/proj \\\n && rm proj-datumgrid-europe-1.2.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-oceania-1.0.zip \\\n && unzip -j -u -o proj-datumgrid-oceania-1.0.zip -d /usr/share/proj \\\n && rm proj-datumgrid-oceania-1.0.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-world-1.0.zip \\\n && unzip -j -u -o proj-datumgrid-world-1.0.zip -d /usr/share/proj \\\n && rm proj-datumgrid-world-1.0.zip ; curl -LOs http://download.osgeo.org/proj/proj-datumgrid-north-america-1.2.zip \\\n && unzip -j -u -o proj-datumgrid-north-america-1.2.zip -d /usr/share/proj \\\n && rm proj-datumgrid-north-america-1.2.zip\n","originalDockerfileUglifiedHash":"043ce0c064141ce6729ea8ff5198e46d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fb24bb5f51663c3c801182bbc7fa891a9c792c6b.dockerfile"}