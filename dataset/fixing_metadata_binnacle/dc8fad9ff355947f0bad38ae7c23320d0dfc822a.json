{"seed":3285552365,"processedDockerfileHash":"f72fd1f1b97fe1eda309537232890cb1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.9.2\nENV WORKDIR=\"/mnt\"\nARG M4B_TOOL_DOWNLOAD_LINK=\"https://github.com/sandreas/m4b-tool/releases/latest/download/m4b-tool.phar\"\nARG FFMPEG_VERSION=4.1\nARG PREFIX=/ffmpeg_build\nRUN echo \"---- INSTALL BUILD DEPENDENCIES ----\" \\\n && apk add autoconf=2.69-r2 automake=1.16.1-r0 boost-dev=1.67.0-r2 build-base=0.5-r1 gcc=8.3.0-r0 lame-dev=3.100-r0 libogg-dev=1.3.3-r2 yasm=1.3.0-r1 nasm=2.13.03-r0 yasm-dev=1.3.0-r1 zlib-dev=1.2.11-r1 freetype-dev=2.9.1-r3 libogg-dev=1.3.3-r2 libtheora-dev=1.1.1-r13 libvorbis-dev=1.3.6-r2 openssl-dev=1.1.1k-r0 opus-dev=1.3-r0 git=2.20.4-r0 tar=1.32-r0 wget=1.20.3-r0 --no-cache --update --upgrade --virtual=build-dependencies \\\n && echo \"---- INSTALL RUNTIME PACKAGES ----\" \\\n && apk add bzip2=1.0.6-r7 ca-certificates=20191127-r2 coreutils=8.30-r0 curl=7.64.0-r5 file=5.36-r1 libtool=2.4.6-r5 freetype=2.9.1-r3 lame=3.100-r0 libogg=1.3.3-r2 libvpx=1.6.1-r1 libvorbis=1.3.6-r2 libtheora=1.1.1-r13 libvorbis=1.3.6-r2 openssl=1.1.1k-r0 opus=1.3-r0 pcre=8.42-r2 php7-cli php7-dom=7.2.33-r0 php7-intl=7.2.33-r0 php7-json=7.2.33-r0 php7-xml=7.2.33-r0 php7-curl=7.2.33-r0 php7-mbstring=7.2.33-r0 php7-simplexml=7.2.33-r0 php7-phar=7.2.33-r0 pkgconf=1.6.0-r0 pkgconfig --no-cache --update --upgrade \\\n && echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \\\n && apk add fdk-aac-dev --update \\\n && echo \"date.timezone = UTC\" >> /etc/php7/php.ini \\\n && echo \"---- COMPILE FFMPEG ----\" \\\n && cd /tmp/ \\\n && wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && rm ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && cd /tmp/ffmpeg-${FFMPEG_VERSION} \\\n && ./configure --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libmp3lame --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk_aac --enable-avresample --enable-libfreetype --enable-openssl --disable-debug --disable-doc --disable-ffplay --prefix=\"/tmp${PREFIX}\" --extra-cflags=\"-I/tmp${PREFIX}/include\" --extra-ldflags=\"-L/tmp${PREFIX}/lib\" --extra-libs=\"-lpthread -lm\" --bindir=\"/usr/local/bin/\" \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf /tmp/* \\\n && echo \"---- COMPILE SANDREAS MP4V2 ----\" \\\n && cd /tmp/ \\\n && wget https://github.com/sandreas/mp4v2/archive/master.zip \\\n && unzip master.zip \\\n && rm master.zip \\\n && cd mp4v2-master \\\n && ./configure \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf /tmp/* \\\n && echo \"---- COMPILE FDKAAC ----\" \\\n && cd /tmp/ \\\n && wget https://github.com/nu774/fdkaac/archive/1.0.0.tar.gz \\\n && tar xzf 1.0.0.tar.gz \\\n && rm 1.0.0.tar.gz \\\n && cd fdkaac-1.0.0 \\\n && autoreconf -i \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/* \\\n && echo \"---- REMOVE BUILD DEPENDENCIES ----\" \\\n && apk del --purge build-dependencies\n#   workaround to copy a local m4b-tool.phar IF it exists\nCOPY ./Dockerfile ./dist/m4b-tool.phar* /tmp/\nRUN echo \"---- INSTALL M4B-TOOL ----\" \\\n && if [ ! -f /tmp/m4b-tool.phar ] ; then wget \"${M4B_TOOL_DOWNLOAD_LINK}\" -O /tmp/m4b-tool.phar ; fi \\\n && mv /tmp/m4b-tool.phar /usr/local/bin/m4b-tool \\\n && chmod +x /usr/local/bin/m4b-tool\nWORKDIR ${WORKDIR}\nCMD [\"list\"]\nENTRYPOINT [\"m4b-tool\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.9.2\nENV WORKDIR=\"/mnt\"\nARG M4B_TOOL_DOWNLOAD_LINK=\"https://github.com/sandreas/m4b-tool/releases/latest/download/m4b-tool.phar\"\nARG FFMPEG_VERSION=4.1\nARG PREFIX=/ffmpeg_build\nRUN echo \"---- INSTALL BUILD DEPENDENCIES ----\" \\\n && apk add --no-cache --update --upgrade --virtual=build-dependencies autoconf automake boost-dev build-base gcc lame-dev libogg-dev yasm nasm yasm-dev zlib-dev freetype-dev libogg-dev libtheora-dev libvorbis-dev openssl-dev opus-dev git tar wget \\\n && echo \"---- INSTALL RUNTIME PACKAGES ----\" \\\n && apk add --no-cache --update --upgrade bzip2 ca-certificates coreutils curl file libtool freetype lame libogg libvpx libvorbis libtheora libvorbis openssl opus pcre php7-cli php7-dom php7-intl php7-json php7-xml php7-curl php7-mbstring php7-simplexml php7-phar pkgconf pkgconfig \\\n && echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \\\n && apk add --update fdk-aac-dev \\\n && echo \"date.timezone = UTC\" >> /etc/php7/php.ini \\\n && echo \"---- COMPILE FFMPEG ----\" \\\n && cd /tmp/ \\\n && wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && rm ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && cd /tmp/ffmpeg-${FFMPEG_VERSION} \\\n && ./configure --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libmp3lame --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk_aac --enable-avresample --enable-libfreetype --enable-openssl --disable-debug --disable-doc --disable-ffplay --prefix=\"/tmp${PREFIX}\" --extra-cflags=\"-I/tmp${PREFIX}/include\" --extra-ldflags=\"-L/tmp${PREFIX}/lib\" --extra-libs=\"-lpthread -lm\" --bindir=\"/usr/local/bin/\" \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf /tmp/* \\\n && echo \"---- COMPILE SANDREAS MP4V2 ----\" \\\n && cd /tmp/ \\\n && wget https://github.com/sandreas/mp4v2/archive/master.zip \\\n && unzip master.zip \\\n && rm master.zip \\\n && cd mp4v2-master \\\n && ./configure \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf /tmp/* \\\n && echo \"---- COMPILE FDKAAC ----\" \\\n && cd /tmp/ \\\n && wget https://github.com/nu774/fdkaac/archive/1.0.0.tar.gz \\\n && tar xzf 1.0.0.tar.gz \\\n && rm 1.0.0.tar.gz \\\n && cd fdkaac-1.0.0 \\\n && autoreconf -i \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/* \\\n && echo \"---- REMOVE BUILD DEPENDENCIES ----\" \\\n && apk del --purge build-dependencies\n#  workaround to copy a local m4b-tool.phar IF it exists\nADD ./Dockerfile ./dist/m4b-tool.phar* /tmp/\nRUN echo \"---- INSTALL M4B-TOOL ----\" \\\n && if [ ! -f /tmp/m4b-tool.phar ] ; then wget \"${M4B_TOOL_DOWNLOAD_LINK}\" -O /tmp/m4b-tool.phar ; fi \\\n && mv /tmp/m4b-tool.phar /usr/local/bin/m4b-tool \\\n && chmod +x /usr/local/bin/m4b-tool\nWORKDIR ${WORKDIR}\nCMD [\"list\"]\nENTRYPOINT [\"m4b-tool\"]\n","injectedSmells":[],"originalDockerfileHash":"dc0370d038423ca8ed6e624cc3d58ced","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.9.2\nENV WORKDIR=\"/mnt\"\nARG M4B_TOOL_DOWNLOAD_LINK=\"https://github.com/sandreas/m4b-tool/releases/latest/download/m4b-tool.phar\"\nARG FFMPEG_VERSION=4.1\nARG PREFIX=/ffmpeg_build\nRUN echo \"---- INSTALL BUILD DEPENDENCIES ----\" \\\n && apk add --no-cache --update --upgrade --virtual=build-dependencies autoconf automake boost-dev build-base gcc lame-dev libogg-dev yasm nasm yasm-dev zlib-dev freetype-dev libogg-dev libtheora-dev libvorbis-dev openssl-dev opus-dev git tar wget \\\n && echo \"---- INSTALL RUNTIME PACKAGES ----\" \\\n && apk add --no-cache --update --upgrade bzip2 ca-certificates coreutils curl file libtool freetype lame libogg libvpx libvorbis libtheora libvorbis openssl opus pcre php7-cli php7-dom php7-intl php7-json php7-xml php7-curl php7-mbstring php7-simplexml php7-phar pkgconf pkgconfig \\\n && echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \\\n && apk add --update fdk-aac-dev \\\n && echo \"date.timezone = UTC\" >> /etc/php7/php.ini \\\n && echo \"---- COMPILE FFMPEG ----\" \\\n && cd /tmp/ \\\n && wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && rm ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && cd /tmp/ffmpeg-${FFMPEG_VERSION} \\\n && ./configure --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libmp3lame --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk_aac --enable-avresample --enable-libfreetype --enable-openssl --disable-debug --disable-doc --disable-ffplay --prefix=\"/tmp${PREFIX}\" --extra-cflags=\"-I/tmp${PREFIX}/include\" --extra-ldflags=\"-L/tmp${PREFIX}/lib\" --extra-libs=\"-lpthread -lm\" --bindir=\"/usr/local/bin/\" \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf /tmp/* \\\n && echo \"---- COMPILE SANDREAS MP4V2 ----\" \\\n && cd /tmp/ \\\n && wget https://github.com/sandreas/mp4v2/archive/master.zip \\\n && unzip master.zip \\\n && rm master.zip \\\n && cd mp4v2-master \\\n && ./configure \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf /tmp/* \\\n && echo \"---- COMPILE FDKAAC ----\" \\\n && cd /tmp/ \\\n && wget https://github.com/nu774/fdkaac/archive/1.0.0.tar.gz \\\n && tar xzf 1.0.0.tar.gz \\\n && rm 1.0.0.tar.gz \\\n && cd fdkaac-1.0.0 \\\n && autoreconf -i \\\n && ./configure \\\n && make \\\n && make install \\\n && rm -rf /tmp/* \\\n && echo \"---- REMOVE BUILD DEPENDENCIES ----\" \\\n && apk del --purge build-dependencies\n#   workaround to copy a local m4b-tool.phar IF it exists\nADD ./Dockerfile ./dist/m4b-tool.phar* /tmp/\nRUN echo \"---- INSTALL M4B-TOOL ----\" \\\n && if [ ! -f /tmp/m4b-tool.phar ] ; then wget \"${M4B_TOOL_DOWNLOAD_LINK}\" -O /tmp/m4b-tool.phar ; fi \\\n && mv /tmp/m4b-tool.phar /usr/local/bin/m4b-tool \\\n && chmod +x /usr/local/bin/m4b-tool\nWORKDIR ${WORKDIR}\nCMD [\"list\"]\nENTRYPOINT [\"m4b-tool\"]\n","originalDockerfileUglifiedHash":"437b44c03e4247a07cc9602d614e4d60","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dc8fad9ff355947f0bad38ae7c23320d0dfc822a.dockerfile"}