{"seed":94950425,"processedDockerfileHash":"f18e9b6edd03b6728dba9fd0e0453b48","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.9\nLABEL repository.hub=\"alexmasterov/alpine-libv8:6.8\" \\\n      repository.url=\"https://github.com/AlexMasterov/dockerfiles\" \\\n      maintainer=\"Alex Masterov <alex.masterow@gmail.com>\"\nARG V8_VERSION=6.8.104\nARG V8_DIR=/usr/local/v8\nARG BUILD_COMMIT=fb6dc3aba5f080908acb63b6dcd544c25051d793\nARG BUILDTOOLS_COMMIT=b7d53a93026d04002ca0705b5bf002de79c72165\nARG ICU_COMMIT=e4194dc7bbb3305d84cbb1b294274ca70d230721\nARG GTEST_COMMIT=a6f06bf2fd3b832822cd4e9e554b7d47f32ec084\nARG TRACE_EVENT_COMMIT=211b3ed9d0481b4caddbee1322321b86a483ca1f\nARG GYP_COMMIT=d61a9397e668fa9843c4aa7da9e79460fe590bfb\nARG CLANG_COMMIT=ec200e7a8308f301ade483408bcc79ca17ceb11e\nARG JINJA2_COMMIT=45571de473282bd1d8b63a8dfcb1fd268d0635d2\nARG MARKUPSAFE_COMMIT=8f45f5cfa0009d2a70589bcda0349b8cb2b72783\nARG GN_SOURCE=https://www.dropbox.com/s/3ublwqh4h9dit9t/alpine-gn-80e00be.tar.gz\nARG V8_SOURCE=https://chromium.googlesource.com/v8/v8/+archive/${V8_VERSION}.tar.gz\nENV V8_VERSION=\"${V8_VERSION}\" \\\n    V8_DIR=\"${V8_DIR}\"\nRUN set -x \\\n && apk add curl=7.64.0-r5 g++=8.3.0-r0 gcc=8.3.0-r0 glib-dev=2.58.1-r3 icu-dev=62.1-r1 linux-headers=4.18.13-r1 make=4.2.1-r2 ninja=1.8.2-r1 python tar=1.32-r0 xz=5.2.4-r0 --update --virtual .v8-build-dependencies \\\n && : \"---------- V8 ----------\" \\\n && mkdir -p /tmp/v8 \\\n && curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xmz -C /tmp/v8 \\\n && : \"---------- Dependencies ----------\" \\\n && DEPS=\" chromium/buildtools.git@${BUILDTOOLS_COMMIT}:buildtools; chromium/src/build.git@${BUILD_COMMIT}:build; chromium/src/base/trace_event/common.git@${TRACE_EVENT_COMMIT}:base/trace_event/common; chromium/src/tools/clang.git@${CLANG_COMMIT}:tools/clang; chromium/src/third_party/jinja2.git@${JINJA2_COMMIT}:third_party/jinja2; chromium/src/third_party/markupsafe.git@${MARKUPSAFE_COMMIT}:third_party/markupsafe; chromium/deps/icu.git@${ICU_COMMIT}:third_party/icu; external/gyp.git@${GYP_COMMIT}:tools/gyp; external/github.com/google/googletest.git@${GTEST_COMMIT}:third_party/googletest/src \" \\\n && while [ \"${DEPS}\" ] ; do dep=\"${DEPS%%;*}\" link=\"${dep%%:*}\" url=\"${link%%@*}\" url=\"${url#\"${url%%[![:space:]]*}\"}\" hash=\"${link#*@}\" dir=\"${dep#*:}\" ;[ -n \"${dep}\" ] \\\n && dep_url=\"https://chromium.googlesource.com/${url}/+archive/${hash}.tar.gz\" \\\n && dep_dir=\"/tmp/v8/${dir}\" \\\n && mkdir -p ${dep_dir} \\\n && curl -fSL --connect-timeout 30 ${dep_url} | tar xmz -C ${dep_dir} &;[ \"${DEPS}\" = \"${dep}\" ] \\\n && DEPS='' || DEPS=\"${DEPS#*;}\" ; done ; wait \\\n && : \"---------- Downloads the current stable Linux sysroot ----------\" \\\n && /tmp/v8/build/linux/sysroot_scripts/install-sysroot.py --arch=amd64 \\\n && : \"---------- Proper GN ----------\" \\\n && apk add libevent=2.1.8-r6 libexecinfo=1.1-r0 libstdc++=8.3.0-r0 --virtual .gn-runtime-dependencies \\\n && curl -fSL --connect-timeout 30 ${GN_SOURCE} | tar xmz -C /tmp/v8/buildtools/linux64/ \\\n && : \"---------- Build instructions ----------\" \\\n && cd /tmp/v8 \\\n && ./tools/dev/v8gen.py x64.release -- binutils_path=\\\"/usr/bin\\\" target_os=\\\"linux\\\" target_cpu=\\\"x64\\\" v8_target_cpu=\\\"x64\\\" v8_use_external_startup_data=false v8_enable_future=true is_official_build=true is_component_build=true is_cfi=false is_clang=false use_custom_libcxx=false use_sysroot=false use_gold=false use_allocator_shim=false treat_warnings_as_errors=false symbol_level=0 \\\n && : \"---------- Build ----------\" \\\n && ninja d8 -C out.gn/x64.release/ -j $( getconf _NPROCESSORS_ONLN ;) \\\n && : \"---------- Extract shared libraries ----------\" \\\n && mkdir -p ${V8_DIR}/include ${V8_DIR}/lib \\\n && cp -R /tmp/v8/include/* ${V8_DIR}/include/ \\\n && (cd /tmp/v8/out.gn/x64.release ;cp lib*.so icudtl.dat ${V8_DIR}/lib/ ) \\\n && : \"---------- Removing build dependencies, clean temporary files ----------\" \\\n && apk del .v8-build-dependencies .gn-runtime-dependencies \\\n && rm -rf /var/cache/apk/* /var/tmp/* /tmp/*\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.9\nLABEL repository.hub=\"alexmasterov/alpine-libv8:6.8\" \\\n      repository.url=\"https://github.com/AlexMasterov/dockerfiles\" \\\n      maintainer=\"Alex Masterov <alex.masterow@gmail.com>\"\nARG V8_VERSION=6.8.104\nARG V8_DIR=/usr/local/v8\nARG BUILD_COMMIT=fb6dc3aba5f080908acb63b6dcd544c25051d793\nARG BUILDTOOLS_COMMIT=b7d53a93026d04002ca0705b5bf002de79c72165\nARG ICU_COMMIT=e4194dc7bbb3305d84cbb1b294274ca70d230721\nARG GTEST_COMMIT=a6f06bf2fd3b832822cd4e9e554b7d47f32ec084\nARG TRACE_EVENT_COMMIT=211b3ed9d0481b4caddbee1322321b86a483ca1f\nARG GYP_COMMIT=d61a9397e668fa9843c4aa7da9e79460fe590bfb\nARG CLANG_COMMIT=ec200e7a8308f301ade483408bcc79ca17ceb11e\nARG JINJA2_COMMIT=45571de473282bd1d8b63a8dfcb1fd268d0635d2\nARG MARKUPSAFE_COMMIT=8f45f5cfa0009d2a70589bcda0349b8cb2b72783\nARG GN_SOURCE=https://www.dropbox.com/s/3ublwqh4h9dit9t/alpine-gn-80e00be.tar.gz\nARG V8_SOURCE=https://chromium.googlesource.com/v8/v8/+archive/${V8_VERSION}.tar.gz\nENV V8_VERSION=\"${V8_VERSION}\" \\\n    V8_DIR=\"${V8_DIR}\"\nRUN set -x \\\n && apk add --update --virtual .v8-build-dependencies curl g++ gcc glib-dev icu-dev linux-headers make ninja python tar xz \\\n && : \"---------- V8 ----------\" \\\n && mkdir -p /tmp/v8 \\\n && curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xmz -C /tmp/v8 \\\n && : \"---------- Dependencies ----------\" \\\n && DEPS=\" chromium/buildtools.git@${BUILDTOOLS_COMMIT}:buildtools; chromium/src/build.git@${BUILD_COMMIT}:build; chromium/src/base/trace_event/common.git@${TRACE_EVENT_COMMIT}:base/trace_event/common; chromium/src/tools/clang.git@${CLANG_COMMIT}:tools/clang; chromium/src/third_party/jinja2.git@${JINJA2_COMMIT}:third_party/jinja2; chromium/src/third_party/markupsafe.git@${MARKUPSAFE_COMMIT}:third_party/markupsafe; chromium/deps/icu.git@${ICU_COMMIT}:third_party/icu; external/gyp.git@${GYP_COMMIT}:tools/gyp; external/github.com/google/googletest.git@${GTEST_COMMIT}:third_party/googletest/src \" \\\n && while [ \"${DEPS}\" ] ; do dep=\"${DEPS%%;*}\" link=\"${dep%%:*}\" url=\"${link%%@*}\" url=\"${url#\"${url%%[![:space:]]*}\"}\" hash=\"${link#*@}\" dir=\"${dep#*:}\" ;[ -n \"${dep}\" ] \\\n && dep_url=\"https://chromium.googlesource.com/${url}/+archive/${hash}.tar.gz\" \\\n && dep_dir=\"/tmp/v8/${dir}\" \\\n && mkdir -p ${dep_dir} \\\n && curl -fSL --connect-timeout 30 ${dep_url} | tar xmz -C ${dep_dir} &;[ \"${DEPS}\" = \"${dep}\" ] \\\n && DEPS='' || DEPS=\"${DEPS#*;}\" ; done ; wait \\\n && : \"---------- Downloads the current stable Linux sysroot ----------\" \\\n && /tmp/v8/build/linux/sysroot_scripts/install-sysroot.py --arch=amd64 \\\n && : \"---------- Proper GN ----------\" \\\n && apk add --virtual .gn-runtime-dependencies libevent libexecinfo libstdc++ \\\n && curl -fSL --connect-timeout 30 ${GN_SOURCE} | tar xmz -C /tmp/v8/buildtools/linux64/ \\\n && : \"---------- Build instructions ----------\" \\\n && cd /tmp/v8 \\\n && ./tools/dev/v8gen.py x64.release -- binutils_path=\\\"/usr/bin\\\" target_os=\\\"linux\\\" target_cpu=\\\"x64\\\" v8_target_cpu=\\\"x64\\\" v8_use_external_startup_data=false v8_enable_future=true is_official_build=true is_component_build=true is_cfi=false is_clang=false use_custom_libcxx=false use_sysroot=false use_gold=false use_allocator_shim=false treat_warnings_as_errors=false symbol_level=0 \\\n && : \"---------- Build ----------\" \\\n && ninja d8 -C out.gn/x64.release/ -j $( getconf _NPROCESSORS_ONLN ;) \\\n && : \"---------- Extract shared libraries ----------\" \\\n && mkdir -p ${V8_DIR}/include ${V8_DIR}/lib \\\n && cp -R /tmp/v8/include/* ${V8_DIR}/include/ \\\n && (cd /tmp/v8/out.gn/x64.release ;cp lib*.so icudtl.dat ${V8_DIR}/lib/ ) \\\n && : \"---------- Removing build dependencies, clean temporary files ----------\" \\\n && apk del .v8-build-dependencies .gn-runtime-dependencies \\\n && rm -rf /var/cache/apk/* /var/tmp/* /tmp/*\n","injectedSmells":[],"originalDockerfileHash":"c622b48999ae1f5c6f67eb0805a8d419","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.9\nLABEL repository.hub=\"alexmasterov/alpine-libv8:6.8\" \\\n      repository.url=\"https://github.com/AlexMasterov/dockerfiles\" \\\n      maintainer=\"Alex Masterov <alex.masterow@gmail.com>\"\nARG V8_VERSION=6.8.104\nARG V8_DIR=/usr/local/v8\nARG BUILD_COMMIT=fb6dc3aba5f080908acb63b6dcd544c25051d793\nARG BUILDTOOLS_COMMIT=b7d53a93026d04002ca0705b5bf002de79c72165\nARG ICU_COMMIT=e4194dc7bbb3305d84cbb1b294274ca70d230721\nARG GTEST_COMMIT=a6f06bf2fd3b832822cd4e9e554b7d47f32ec084\nARG TRACE_EVENT_COMMIT=211b3ed9d0481b4caddbee1322321b86a483ca1f\nARG GYP_COMMIT=d61a9397e668fa9843c4aa7da9e79460fe590bfb\nARG CLANG_COMMIT=ec200e7a8308f301ade483408bcc79ca17ceb11e\nARG JINJA2_COMMIT=45571de473282bd1d8b63a8dfcb1fd268d0635d2\nARG MARKUPSAFE_COMMIT=8f45f5cfa0009d2a70589bcda0349b8cb2b72783\nARG GN_SOURCE=https://www.dropbox.com/s/3ublwqh4h9dit9t/alpine-gn-80e00be.tar.gz\nARG V8_SOURCE=https://chromium.googlesource.com/v8/v8/+archive/${V8_VERSION}.tar.gz\nENV V8_VERSION=\"${V8_VERSION}\" \\\n    V8_DIR=\"${V8_DIR}\"\nRUN set -x \\\n && apk add --update --virtual .v8-build-dependencies curl g++ gcc glib-dev icu-dev linux-headers make ninja python tar xz \\\n && : \"---------- V8 ----------\" \\\n && mkdir -p /tmp/v8 \\\n && curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xmz -C /tmp/v8 \\\n && : \"---------- Dependencies ----------\" \\\n && DEPS=\" chromium/buildtools.git@${BUILDTOOLS_COMMIT}:buildtools; chromium/src/build.git@${BUILD_COMMIT}:build; chromium/src/base/trace_event/common.git@${TRACE_EVENT_COMMIT}:base/trace_event/common; chromium/src/tools/clang.git@${CLANG_COMMIT}:tools/clang; chromium/src/third_party/jinja2.git@${JINJA2_COMMIT}:third_party/jinja2; chromium/src/third_party/markupsafe.git@${MARKUPSAFE_COMMIT}:third_party/markupsafe; chromium/deps/icu.git@${ICU_COMMIT}:third_party/icu; external/gyp.git@${GYP_COMMIT}:tools/gyp; external/github.com/google/googletest.git@${GTEST_COMMIT}:third_party/googletest/src \" \\\n && while [ \"${DEPS}\" ] ; do dep=\"${DEPS%%;*}\" link=\"${dep%%:*}\" url=\"${link%%@*}\" url=\"${url#\"${url%%[![:space:]]*}\"}\" hash=\"${link#*@}\" dir=\"${dep#*:}\" ;[ -n \"${dep}\" ] \\\n && dep_url=\"https://chromium.googlesource.com/${url}/+archive/${hash}.tar.gz\" \\\n && dep_dir=\"/tmp/v8/${dir}\" \\\n && mkdir -p ${dep_dir} \\\n && curl -fSL --connect-timeout 30 ${dep_url} | tar xmz -C ${dep_dir} &;[ \"${DEPS}\" = \"${dep}\" ] \\\n && DEPS='' || DEPS=\"${DEPS#*;}\" ; done ; wait \\\n && : \"---------- Downloads the current stable Linux sysroot ----------\" \\\n && /tmp/v8/build/linux/sysroot_scripts/install-sysroot.py --arch=amd64 \\\n && : \"---------- Proper GN ----------\" \\\n && apk add --virtual .gn-runtime-dependencies libevent libexecinfo libstdc++ \\\n && curl -fSL --connect-timeout 30 ${GN_SOURCE} | tar xmz -C /tmp/v8/buildtools/linux64/ \\\n && : \"---------- Build instructions ----------\" \\\n && cd /tmp/v8 \\\n && ./tools/dev/v8gen.py x64.release -- binutils_path=\\\"/usr/bin\\\" target_os=\\\"linux\\\" target_cpu=\\\"x64\\\" v8_target_cpu=\\\"x64\\\" v8_use_external_startup_data=false v8_enable_future=true is_official_build=true is_component_build=true is_cfi=false is_clang=false use_custom_libcxx=false use_sysroot=false use_gold=false use_allocator_shim=false treat_warnings_as_errors=false symbol_level=0 \\\n && : \"---------- Build ----------\" \\\n && ninja d8 -C out.gn/x64.release/ -j $( getconf _NPROCESSORS_ONLN ;) \\\n && : \"---------- Extract shared libraries ----------\" \\\n && mkdir -p ${V8_DIR}/include ${V8_DIR}/lib \\\n && cp -R /tmp/v8/include/* ${V8_DIR}/include/ \\\n && (cd /tmp/v8/out.gn/x64.release ;cp lib*.so icudtl.dat ${V8_DIR}/lib/ ) \\\n && : \"---------- Removing build dependencies, clean temporary files ----------\" \\\n && apk del .v8-build-dependencies .gn-runtime-dependencies \\\n && rm -rf /var/cache/apk/* /var/tmp/* /tmp/*\n","originalDockerfileUglifiedHash":"c622b48999ae1f5c6f67eb0805a8d419","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a62b0184d091af1014ce9ba519a67ac34c8a0953.dockerfile"}