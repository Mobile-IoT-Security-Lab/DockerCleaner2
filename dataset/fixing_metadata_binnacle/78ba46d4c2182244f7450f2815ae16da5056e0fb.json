{"seed":771403984,"processedDockerfileHash":"7d39ce223ca0024d7fba79971841b520","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM gcr.io/google-appengine/debian9\n#   explicitly set user/group IDs\nRUN groupadd -r postgres --gid=999 \\\n && useradd -r -g postgres --uid=999 postgres\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg=2.2.40-1ubuntu2 dirmngr=2.2.40-1ubuntu2 -y ;rm -rf /var/lib/apt/lists/* ; fi\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20230311 wget=1.21.3-1ubuntu1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net ha.pool.sks-keyservers.net pgp.mit.edu na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80; do gpg --no-tty --keyserver $server --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && found=\"yes\" \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales=2.37-0ubuntu2 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; found='' ; for server in pool.sks-keyservers.net ha.pool.sks-keyservers.net pgp.mit.edu na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80; do gpg --no-tty --keyserver ${server} --recv-keys \"$key\" \\\n && found=\"yes\" \\\n && break ; done ; test -n \"$found\" ; gpg --no-tty --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nENV PG_MAJOR=\"11\"\nENV PG_VERSION=\"11.3*\"\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql-common=248 -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n && apt-get install --no-install-recommends postgresql-$PG_MAJOR=$PG_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod g+s /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM gcr.io/google-appengine/debian9\n#  explicitly set user/group IDs\nRUN groupadd -r postgres --gid=999 \\\n && useradd -r -g postgres --uid=999 postgres\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#  grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net ha.pool.sks-keyservers.net pgp.mit.edu na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80; do gpg --no-tty --keyserver $server --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && found=\"yes\" \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#  make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; found='' ; for server in pool.sks-keyservers.net ha.pool.sks-keyservers.net pgp.mit.edu na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80; do gpg --no-tty --keyserver ${server} --recv-keys \"$key\" \\\n && found=\"yes\" \\\n && break ; done ; test -n \"$found\" ; gpg --no-tty --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nENV PG_MAJOR=\"11\"\nENV PG_VERSION=\"11.3*\"\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n && apt-get install postgresql-common -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n && apt-get install postgresql-$PG_MAJOR=$PG_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#  make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod g+s /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\n","injectedSmells":[],"originalDockerfileHash":"120d15d92cb18bc233a6ccc42dfab0d0","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM gcr.io/google-appengine/debian9\n#   explicitly set user/group IDs\nRUN groupadd -r postgres --gid=999 \\\n && useradd -r -g postgres --uid=999 postgres\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net ha.pool.sks-keyservers.net pgp.mit.edu na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80; do gpg --no-tty --keyserver $server --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && found=\"yes\" \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; found='' ; for server in pool.sks-keyservers.net ha.pool.sks-keyservers.net pgp.mit.edu na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80; do gpg --no-tty --keyserver ${server} --recv-keys \"$key\" \\\n && found=\"yes\" \\\n && break ; done ; test -n \"$found\" ; gpg --no-tty --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nENV PG_MAJOR=\"11\"\nENV PG_VERSION=\"11.3*\"\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n && apt-get install postgresql-common -y \\\n && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n && apt-get install postgresql-$PG_MAJOR=$PG_VERSION -y \\\n && rm -rf /var/lib/apt/lists/*\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod g+s /var/run/postgresql\nENV PATH=\"/usr/lib/postgresql/$PG_MAJOR/bin:$PATH\"\nENV PGDATA=\"/var/lib/postgresql/data\"\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\n","originalDockerfileUglifiedHash":"1541a0e27c7116061250d0510be3d19e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/78ba46d4c2182244f7450f2815ae16da5056e0fb.dockerfile"}