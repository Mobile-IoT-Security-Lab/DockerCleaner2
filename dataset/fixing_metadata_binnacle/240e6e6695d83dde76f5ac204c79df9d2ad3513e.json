{"seed":637998950,"processedDockerfileHash":"80750b3deda0c989bd634d6ef91f5f68","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.7\nARG BUILD_CORES\nENV UID=\"991\" \\\n    GID=\"991\"\nARG NGINX_VER=1.15.0\nARG PHP_VER=7.2.6\nARG LIBICONV_VERSION=1.15\nARG OPENSSL_VERSION=1.1.1-pre8\nARG GPG_NGINX=\"B0F4 2533 73F8 F6F5 10D4  2178 520A 9993 A1C0 52F8\"\nLABEL description=\"nginx + php image based on Alpine\" \\\n      maintainer=\"Starbix\" \\\n      php_version=\"PHP v$PHP_VER built from source\" \\\n      nginx_version=\"nginx v$NGINX_VER built from source\" \\\n      openssl_version=\"OpenSSL v$OPENSSL_VERSION from source\"\nARG PHP_MIRROR=https://secure.php.net\nARG NGINX_CONF=\"  --with-http_ssl_module  --with-http_v2_module  --with-http_gzip_static_module  --with-http_stub_status_module  --with-http_sub_module  --with-threads  --with-file-aio  --with-pcre-jit  --without-http_geo_module  --without-http_split_clients_module  --without-http_memcached_module  --without-http_empty_gif_module  --without-http_browser_module\"\nARG NGINX_3RD_PARTY_MODULES=\"  --add-module=/tmp/headers-more-nginx-module  --add-module=/tmp/ngx_brotli  --add-module=/tmp/nginx-ct\"\n#   --add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION}\"\nARG PHP_CONF=\"  --prefix=/usr  --libdir=/usr/lib/php  --datadir=/usr/share/php  --sysconfdir=/php/etc  --localstatedir=/php/var  --with-pear=/usr/share/php  --with-config-file-scan-dir=/php/conf.d  --with-config-file-path=/php  --with-pic  --disable-short-tags  --without-readline  --enable-bcmath=shared  --enable-fpm  --enable-mysqlnd  --enable-mbstring  --with-curl  --with-libedit  --with-openssl  --with-iconv=/usr/local  --with-gd  --with-jpeg-dir  --with-png-dir  --with-webp-dir  --with-xpm-dir=no  --with-freetype-dir  --enable-gd-native-ttf  --disable-gd-jis-conv  --with-zlib\"\nARG PHP_EXT_LIST=\"  mysqli  ctype  dom  json  xml  mbstring  posix  xmlwriter  zip  zlib  sqlite3  pdo_sqlite  pdo  pdo_mysql  pcntl  curl  fileinfo  bz2  intl  openssl  ldap  simplexml  pgsql  ftp  exif  session  gmp\"\nARG CUSTOM_BUILD_PKGS=\"  freetype-dev  openldap-dev  gmp-dev  icu-dev  postgresql-dev  libpng-dev  libwebp-dev  gd-dev  libjpeg-turbo-dev  libxpm-dev  libedit-dev  libxml2-dev  libressl-dev  libbz2  sqlite-dev\"\nARG CUSTOM_PKGS=\"  freetype  openldap  gmp  bzip2-dev  icu  python-dev  libpq\"\nCOPY rootfs /\nRUN NB_CORES=${BUILD_CORES-$( getconf _NPROCESSORS_CONF ;)} \\\n && apk -U upgrade \\\n && BUILD_DEPS=\" linux-headers libtool build-base pcre-dev zlib-dev wget gnupg autoconf gcc g++ libc-dev make pkgconf curl-dev ca-certificates go cmake automake file jemalloc-dev patch re2c ${CUSTOM_BUILD_PKGS}\" \\\n && apk add s6=2.6.1.1-r0 su-exec=0.2-r0 curl=7.61.1-r3 jemalloc=5.0.1-r0 libedit=20170329.3.1-r3 libxml2=2.9.8-r1 libressl=2.6.5-r0 libwebp=0.6.0-r1 gd=2.2.5-r3 git=2.15.4-r0 pcre=8.41-r1 zlib=1.2.11-r1 ${BUILD_DEPS} ${CUSTOM_PKGS} -U \\\n && cd /tmp \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz.asc/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz.asc \\\n && wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz -O /tmp/libiconv-${LIBICONV_VERSION}.tar.gz \\\n && OPENSSL_TARBALL=\"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && wget https://www.openssl.org/source/${OPENSSL_TARBALL} \\\n && mkdir -p /php/conf.d \\\n && mkdir -p /usr/src \\\n && tar xzf ${OPENSSL_TARBALL} -C /usr/src \\\n && tar xzf /tmp/nginx-${NGINX_VER}.tar.gz -C /usr/src \\\n && tar xzvf /tmp/php-${PHP_VER}.tar.gz -C /usr/src \\\n && tar xzf /tmp/libiconv-${LIBICONV_VERSION}.tar.gz -C /usr/src \\\n && cd /tmp \\\n && git clone --recurse-submodules https://github.com/eustas/ngx_brotli --depth=1 \\\n && cd ngx_brotli/deps/brotli \\\n && mkdir out \\\n && cd out \\\n && ../configure-cmake \\\n && make \\\n && make install \\\n && cd /tmp \\\n && git clone https://github.com/openresty/headers-more-nginx-module --depth=1 \\\n && git clone https://github.com/grahamedgecombe/nginx-ct --depth=1 \\\n && cd /usr/src/nginx-${NGINX_VER} \\\n && wget https://raw.githubusercontent.com/cloudflare/sslconfig/master/patches/nginx__1.11.5_dynamic_tls_records.patch \\\n && patch -p1 < nginx__1.11.5_dynamic_tls_records.patch \\\n && wget https://raw.githubusercontent.com/kn007/patch/master/nginx_auto_using_PRIORITIZE_CHACHA.patch \\\n && patch -p1 < nginx_auto_using_PRIORITIZE_CHACHA.patch \\\n && wget https://raw.githubusercontent.com/kn007/patch/master/nginx__1.13.10_http2_hpack.patch \\\n && patch -p1 < nginx__1.13.10_http2_hpack.patch \\\n && ./configure --prefix=/nginx --sbin-path=/usr/local/sbin/nginx --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -Wno-deprecated-declarations\" --with-ld-opt=\"-lrt -ljemalloc -Wl,-Bsymbolic-functions -Wl,-z,relro\" --with-openssl-opt='no-async enable-ec_nistp_64_gcc_128 no-shared no-ssl3 no-comp no-idea no-weak-ssl-ciphers -DOPENSSL_NO_HEARTBEATS -O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2' --with-openssl=/usr/src/openssl-${OPENSSL_VERSION} --http-log-path=/nginx/logs/nginx_access.log --error-log-path=/nginx/logs/nginx_error.log --pid-path=/nginx/run/nginx.pid --lock-path=/nginx/run/nginx.lock ${NGINX_CONF} ${NGINX_3RD_PARTY_MODULES} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && make clean \\\n && strip -s /usr/local/sbin/nginx \\\n && mkdir -p /tmp/go/bin \\\n && export GOPATH=/tmp/go \\\n && export GOBIN=$GOPATH/bin \\\n && go get github.com/grahamedgecombe/ct-submit \\\n && mv /tmp/go/bin/ct-submit /usr/local/bin/ct-submit \\\n && cd /usr/src/libiconv-${LIBICONV_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && libtool --finish /usr/local/lib \\\n && mv /usr/src/php-${PHP_VER} /usr/src/php \\\n && cd /usr/src/php \\\n && ./configure CFLAGS=\"-O3 -fstack-protector-strong\" ${PHP_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && cd /tmp \\\n && wget https://raw.githubusercontent.com/Starbix/nginx-amplify-agent/master/packages/install-source.sh \\\n && chmod u+x install-source.sh \\\n && ./install-source.sh \\\n && cd /usr/lib/python2.7/site-packages/nginx_amplify_agent-*-py2.7.egg/amplify/agent/managers \\\n && rm -rf abstract.py \\\n && wget https://raw.githubusercontent.com/Starbix/nginx-amplify-agent/master/amplify/agent/managers/abstract.py \\\n && chmod u+x /usr/local/bin/* /etc/s6.d/*/* \\\n && sync \\\n && docker-php-ext-install ${PHP_EXT_LIST} \\\n && apk del ${BUILD_DEPS} \\\n && rm -rf /tmp/* /var/cache/apk/* /usr/src/* \\\n && mkdir -p /nginx/logs /nginx/client_body_temp /nginx/fastcgi_temp /nginx/proxy_temp /nginx/scgi_temp /nginx/uwsgi_temp /nginx/run /php/php-fpm.d /php/logs /php/run /php/session \\\n && chown -R ${UID}:${GID} /nginx/*\nEXPOSE 8000/tcp 4430/tcp\nCMD [\"run.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.7\nARG BUILD_CORES\nENV UID=\"991\" \\\n    GID=\"991\"\nARG NGINX_VER=1.15.0\nARG PHP_VER=7.2.6\nARG LIBICONV_VERSION=1.15\nARG OPENSSL_VERSION=1.1.1-pre8\nARG GPG_NGINX=\"B0F4 2533 73F8 F6F5 10D4  2178 520A 9993 A1C0 52F8\"\nLABEL description=\"nginx + php image based on Alpine\" \\\n      maintainer=\"Starbix\" \\\n      php_version=\"PHP v$PHP_VER built from source\" \\\n      nginx_version=\"nginx v$NGINX_VER built from source\" \\\n      openssl_version=\"OpenSSL v$OPENSSL_VERSION from source\"\nARG PHP_MIRROR=https://secure.php.net\nARG NGINX_CONF=\"  --with-http_ssl_module  --with-http_v2_module  --with-http_gzip_static_module  --with-http_stub_status_module  --with-http_sub_module  --with-threads  --with-file-aio  --with-pcre-jit  --without-http_geo_module  --without-http_split_clients_module  --without-http_memcached_module  --without-http_empty_gif_module  --without-http_browser_module\"\nARG NGINX_3RD_PARTY_MODULES=\"  --add-module=/tmp/headers-more-nginx-module  --add-module=/tmp/ngx_brotli  --add-module=/tmp/nginx-ct\"\n#  --add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION}\"\nARG PHP_CONF=\"  --prefix=/usr  --libdir=/usr/lib/php  --datadir=/usr/share/php  --sysconfdir=/php/etc  --localstatedir=/php/var  --with-pear=/usr/share/php  --with-config-file-scan-dir=/php/conf.d  --with-config-file-path=/php  --with-pic  --disable-short-tags  --without-readline  --enable-bcmath=shared  --enable-fpm  --enable-mysqlnd  --enable-mbstring  --with-curl  --with-libedit  --with-openssl  --with-iconv=/usr/local  --with-gd  --with-jpeg-dir  --with-png-dir  --with-webp-dir  --with-xpm-dir=no  --with-freetype-dir  --enable-gd-native-ttf  --disable-gd-jis-conv  --with-zlib\"\nARG PHP_EXT_LIST=\"  mysqli  ctype  dom  json  xml  mbstring  posix  xmlwriter  zip  zlib  sqlite3  pdo_sqlite  pdo  pdo_mysql  pcntl  curl  fileinfo  bz2  intl  openssl  ldap  simplexml  pgsql  ftp  exif  session  gmp\"\nARG CUSTOM_BUILD_PKGS=\"  freetype-dev  openldap-dev  gmp-dev  icu-dev  postgresql-dev  libpng-dev  libwebp-dev  gd-dev  libjpeg-turbo-dev  libxpm-dev  libedit-dev  libxml2-dev  libressl-dev  libbz2  sqlite-dev\"\nARG CUSTOM_PKGS=\"  freetype  openldap  gmp  bzip2-dev  icu  python-dev  libpq\"\nCOPY rootfs /\nRUN NB_CORES=${BUILD_CORES-$( getconf _NPROCESSORS_CONF ;)} \\\n && apk -U upgrade \\\n && BUILD_DEPS=\" linux-headers libtool build-base pcre-dev zlib-dev wget gnupg autoconf gcc g++ libc-dev make pkgconf curl-dev ca-certificates go cmake automake file jemalloc-dev patch re2c ${CUSTOM_BUILD_PKGS}\" \\\n && apk -U add ${BUILD_DEPS} s6 su-exec curl jemalloc libedit libxml2 libressl libwebp gd git pcre zlib ${CUSTOM_PKGS} \\\n && cd /tmp \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz.asc/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz.asc \\\n && wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz -O /tmp/libiconv-${LIBICONV_VERSION}.tar.gz \\\n && OPENSSL_TARBALL=\"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && wget https://www.openssl.org/source/${OPENSSL_TARBALL} \\\n && mkdir -p /php/conf.d \\\n && mkdir -p /usr/src \\\n && tar xzf ${OPENSSL_TARBALL} -C /usr/src \\\n && tar xzf /tmp/nginx-${NGINX_VER}.tar.gz -C /usr/src \\\n && tar xzvf /tmp/php-${PHP_VER}.tar.gz -C /usr/src \\\n && tar xzf /tmp/libiconv-${LIBICONV_VERSION}.tar.gz -C /usr/src \\\n && cd /tmp \\\n && git clone --recurse-submodules https://github.com/eustas/ngx_brotli --depth=1 \\\n && cd ngx_brotli/deps/brotli \\\n && mkdir out \\\n && cd out \\\n && ../configure-cmake \\\n && make \\\n && make install \\\n && cd /tmp \\\n && git clone https://github.com/openresty/headers-more-nginx-module --depth=1 \\\n && git clone https://github.com/grahamedgecombe/nginx-ct --depth=1 \\\n && cd /usr/src/nginx-${NGINX_VER} \\\n && wget https://raw.githubusercontent.com/cloudflare/sslconfig/master/patches/nginx__1.11.5_dynamic_tls_records.patch \\\n && patch -p1 < nginx__1.11.5_dynamic_tls_records.patch \\\n && wget https://raw.githubusercontent.com/kn007/patch/master/nginx_auto_using_PRIORITIZE_CHACHA.patch \\\n && patch -p1 < nginx_auto_using_PRIORITIZE_CHACHA.patch \\\n && wget https://raw.githubusercontent.com/kn007/patch/master/nginx__1.13.10_http2_hpack.patch \\\n && patch -p1 < nginx__1.13.10_http2_hpack.patch \\\n && ./configure --prefix=/nginx --sbin-path=/usr/local/sbin/nginx --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -Wno-deprecated-declarations\" --with-ld-opt=\"-lrt -ljemalloc -Wl,-Bsymbolic-functions -Wl,-z,relro\" --with-openssl-opt='no-async enable-ec_nistp_64_gcc_128 no-shared no-ssl3 no-comp no-idea no-weak-ssl-ciphers -DOPENSSL_NO_HEARTBEATS -O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2' --with-openssl=/usr/src/openssl-${OPENSSL_VERSION} --http-log-path=/nginx/logs/nginx_access.log --error-log-path=/nginx/logs/nginx_error.log --pid-path=/nginx/run/nginx.pid --lock-path=/nginx/run/nginx.lock ${NGINX_CONF} ${NGINX_3RD_PARTY_MODULES} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && make clean \\\n && strip -s /usr/local/sbin/nginx \\\n && mkdir -p /tmp/go/bin \\\n && export GOPATH=/tmp/go \\\n && export GOBIN=$GOPATH/bin \\\n && go get github.com/grahamedgecombe/ct-submit \\\n && mv /tmp/go/bin/ct-submit /usr/local/bin/ct-submit \\\n && cd /usr/src/libiconv-${LIBICONV_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && libtool --finish /usr/local/lib \\\n && mv /usr/src/php-${PHP_VER} /usr/src/php \\\n && cd /usr/src/php \\\n && ./configure CFLAGS=\"-O3 -fstack-protector-strong\" ${PHP_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && cd /tmp \\\n && wget https://raw.githubusercontent.com/Starbix/nginx-amplify-agent/master/packages/install-source.sh \\\n && chmod u+x install-source.sh \\\n && ./install-source.sh \\\n && cd /usr/lib/python2.7/site-packages/nginx_amplify_agent-*-py2.7.egg/amplify/agent/managers \\\n && rm -rf abstract.py \\\n && wget https://raw.githubusercontent.com/Starbix/nginx-amplify-agent/master/amplify/agent/managers/abstract.py \\\n && chmod u+x /usr/local/bin/* /etc/s6.d/*/* \\\n && sync \\\n && docker-php-ext-install ${PHP_EXT_LIST} \\\n && apk del ${BUILD_DEPS} \\\n && rm -rf /tmp/* /var/cache/apk/* /usr/src/* \\\n && mkdir -p /nginx/logs /nginx/client_body_temp /nginx/fastcgi_temp /nginx/proxy_temp /nginx/scgi_temp /nginx/uwsgi_temp /nginx/run /php/php-fpm.d /php/logs /php/run /php/session \\\n && chown -R ${UID}:${GID} /nginx/*\nEXPOSE 8000/tcp 4430/tcp\nCMD [\"run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"65152c3f3331376e7322719d26071766","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.7\nARG BUILD_CORES\nENV UID=\"991\" \\\n    GID=\"991\"\nARG NGINX_VER=1.15.0\nARG PHP_VER=7.2.6\nARG LIBICONV_VERSION=1.15\nARG OPENSSL_VERSION=1.1.1-pre8\nARG GPG_NGINX=\"B0F4 2533 73F8 F6F5 10D4  2178 520A 9993 A1C0 52F8\"\nLABEL description=\"nginx + php image based on Alpine\" \\\n      maintainer=\"Starbix\" \\\n      php_version=\"PHP v$PHP_VER built from source\" \\\n      nginx_version=\"nginx v$NGINX_VER built from source\" \\\n      openssl_version=\"OpenSSL v$OPENSSL_VERSION from source\"\nARG PHP_MIRROR=https://secure.php.net\nARG NGINX_CONF=\"  --with-http_ssl_module  --with-http_v2_module  --with-http_gzip_static_module  --with-http_stub_status_module  --with-http_sub_module  --with-threads  --with-file-aio  --with-pcre-jit  --without-http_geo_module  --without-http_split_clients_module  --without-http_memcached_module  --without-http_empty_gif_module  --without-http_browser_module\"\nARG NGINX_3RD_PARTY_MODULES=\"  --add-module=/tmp/headers-more-nginx-module  --add-module=/tmp/ngx_brotli  --add-module=/tmp/nginx-ct\"\n#   --add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION}\"\nARG PHP_CONF=\"  --prefix=/usr  --libdir=/usr/lib/php  --datadir=/usr/share/php  --sysconfdir=/php/etc  --localstatedir=/php/var  --with-pear=/usr/share/php  --with-config-file-scan-dir=/php/conf.d  --with-config-file-path=/php  --with-pic  --disable-short-tags  --without-readline  --enable-bcmath=shared  --enable-fpm  --enable-mysqlnd  --enable-mbstring  --with-curl  --with-libedit  --with-openssl  --with-iconv=/usr/local  --with-gd  --with-jpeg-dir  --with-png-dir  --with-webp-dir  --with-xpm-dir=no  --with-freetype-dir  --enable-gd-native-ttf  --disable-gd-jis-conv  --with-zlib\"\nARG PHP_EXT_LIST=\"  mysqli  ctype  dom  json  xml  mbstring  posix  xmlwriter  zip  zlib  sqlite3  pdo_sqlite  pdo  pdo_mysql  pcntl  curl  fileinfo  bz2  intl  openssl  ldap  simplexml  pgsql  ftp  exif  session  gmp\"\nARG CUSTOM_BUILD_PKGS=\"  freetype-dev  openldap-dev  gmp-dev  icu-dev  postgresql-dev  libpng-dev  libwebp-dev  gd-dev  libjpeg-turbo-dev  libxpm-dev  libedit-dev  libxml2-dev  libressl-dev  libbz2  sqlite-dev\"\nARG CUSTOM_PKGS=\"  freetype  openldap  gmp  bzip2-dev  icu  python-dev  libpq\"\nCOPY rootfs /\nRUN NB_CORES=${BUILD_CORES-$( getconf _NPROCESSORS_CONF ;)} \\\n && apk -U upgrade \\\n && BUILD_DEPS=\" linux-headers libtool build-base pcre-dev zlib-dev wget gnupg autoconf gcc g++ libc-dev make pkgconf curl-dev ca-certificates go cmake automake file jemalloc-dev patch re2c ${CUSTOM_BUILD_PKGS}\" \\\n && apk -U add ${BUILD_DEPS} s6 su-exec curl jemalloc libedit libxml2 libressl libwebp gd git pcre zlib ${CUSTOM_PKGS} \\\n && cd /tmp \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget http://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz.asc/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz.asc \\\n && wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz -O /tmp/libiconv-${LIBICONV_VERSION}.tar.gz \\\n && OPENSSL_TARBALL=\"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && wget https://www.openssl.org/source/${OPENSSL_TARBALL} \\\n && mkdir -p /php/conf.d \\\n && mkdir -p /usr/src \\\n && tar xzf ${OPENSSL_TARBALL} -C /usr/src \\\n && tar xzf /tmp/nginx-${NGINX_VER}.tar.gz -C /usr/src \\\n && tar xzvf /tmp/php-${PHP_VER}.tar.gz -C /usr/src \\\n && tar xzf /tmp/libiconv-${LIBICONV_VERSION}.tar.gz -C /usr/src \\\n && cd /tmp \\\n && git clone --recurse-submodules https://github.com/eustas/ngx_brotli --depth=1 \\\n && cd ngx_brotli/deps/brotli \\\n && mkdir out \\\n && cd out \\\n && ../configure-cmake \\\n && make \\\n && make install \\\n && cd /tmp \\\n && git clone https://github.com/openresty/headers-more-nginx-module --depth=1 \\\n && git clone https://github.com/grahamedgecombe/nginx-ct --depth=1 \\\n && cd /usr/src/nginx-${NGINX_VER} \\\n && wget https://raw.githubusercontent.com/cloudflare/sslconfig/master/patches/nginx__1.11.5_dynamic_tls_records.patch \\\n && patch -p1 < nginx__1.11.5_dynamic_tls_records.patch \\\n && wget https://raw.githubusercontent.com/kn007/patch/master/nginx_auto_using_PRIORITIZE_CHACHA.patch \\\n && patch -p1 < nginx_auto_using_PRIORITIZE_CHACHA.patch \\\n && wget https://raw.githubusercontent.com/kn007/patch/master/nginx__1.13.10_http2_hpack.patch \\\n && patch -p1 < nginx__1.13.10_http2_hpack.patch \\\n && ./configure --prefix=/nginx --sbin-path=/usr/local/sbin/nginx --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -Wno-deprecated-declarations\" --with-ld-opt=\"-lrt -ljemalloc -Wl,-Bsymbolic-functions -Wl,-z,relro\" --with-openssl-opt='no-async enable-ec_nistp_64_gcc_128 no-shared no-ssl3 no-comp no-idea no-weak-ssl-ciphers -DOPENSSL_NO_HEARTBEATS -O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2' --with-openssl=/usr/src/openssl-${OPENSSL_VERSION} --http-log-path=/nginx/logs/nginx_access.log --error-log-path=/nginx/logs/nginx_error.log --pid-path=/nginx/run/nginx.pid --lock-path=/nginx/run/nginx.lock ${NGINX_CONF} ${NGINX_3RD_PARTY_MODULES} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && make clean \\\n && strip -s /usr/local/sbin/nginx \\\n && mkdir -p /tmp/go/bin \\\n && export GOPATH=/tmp/go \\\n && export GOBIN=$GOPATH/bin \\\n && go get github.com/grahamedgecombe/ct-submit \\\n && mv /tmp/go/bin/ct-submit /usr/local/bin/ct-submit \\\n && cd /usr/src/libiconv-${LIBICONV_VERSION} \\\n && ./configure --prefix=/usr/local \\\n && make \\\n && make install \\\n && libtool --finish /usr/local/lib \\\n && mv /usr/src/php-${PHP_VER} /usr/src/php \\\n && cd /usr/src/php \\\n && ./configure CFLAGS=\"-O3 -fstack-protector-strong\" ${PHP_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && cd /tmp \\\n && wget https://raw.githubusercontent.com/Starbix/nginx-amplify-agent/master/packages/install-source.sh \\\n && chmod u+x install-source.sh \\\n && ./install-source.sh \\\n && cd /usr/lib/python2.7/site-packages/nginx_amplify_agent-*-py2.7.egg/amplify/agent/managers \\\n && rm -rf abstract.py \\\n && wget https://raw.githubusercontent.com/Starbix/nginx-amplify-agent/master/amplify/agent/managers/abstract.py \\\n && chmod u+x /usr/local/bin/* /etc/s6.d/*/* \\\n && sync \\\n && docker-php-ext-install ${PHP_EXT_LIST} \\\n && apk del ${BUILD_DEPS} \\\n && rm -rf /tmp/* /var/cache/apk/* /usr/src/* \\\n && mkdir -p /nginx/logs /nginx/client_body_temp /nginx/fastcgi_temp /nginx/proxy_temp /nginx/scgi_temp /nginx/uwsgi_temp /nginx/run /php/php-fpm.d /php/logs /php/run /php/session \\\n && chown -R ${UID}:${GID} /nginx/*\nEXPOSE 8000/tcp 4430/tcp\nCMD [\"run.sh\"]\n","originalDockerfileUglifiedHash":"ec42aaa376c0b0e5a1dbbaef3e43b968","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/240e6e6695d83dde76f5ac204c79df9d2ad3513e.dockerfile"}