{"seed":3838329477,"processedDockerfileHash":"5d9d0a2f47811831c2d40009a9a7eac6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:9\nMAINTAINER Tanel Alumae <alumae@gmail.com>\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends autoconf automake bzip2 g++ gfortran git libatlas3-base libtool-bin make python2.7 python3 python-pip python-dev python3-dev sox ffmpeg subversion wget zlib1g-dev -y ) \\\n && apt-get clean autoclean \\\n && apt-get autoremove -y \\\n && ln -s -f /usr/bin/python3 /usr/bin/python ; ln -s -f bash /bin/sh\nWORKDIR /opt\nRUN git clone https://github.com/kaldi-asr/kaldi \\\n && cd /opt/kaldi/tools \\\n && make -j8 \\\n && cd /opt/kaldi/src \\\n && ./configure --shared \\\n && sed -i '/-g # -O0 -DKALDI_PARANOID/c\\-O3 -DNDEBUG' kaldi.mk \\\n && make -j8 depend \\\n && make -j8\nRUN (apt-get update ;apt-get install --no-install-recommends python3-setuptools -y ) \\\n && cd /tmp \\\n && git clone https://github.com/google/re2 \\\n && cd /tmp/re2 \\\n && make -j4 \\\n && make install \\\n && cd /tmp \\\n && wget http://www.openfst.org/twiki/pub/FST/FstDownload/openfst-1.6.9.tar.gz \\\n && tar zxvf openfst-1.6.9.tar.gz \\\n && cd openfst-1.6.9 \\\n && ./configure --enable-grm \\\n && make -j8 \\\n && make install \\\n && cd /tmp \\\n && wget http://www.opengrm.org/twiki/pub/GRM/PyniniDownload/pynini-2.0.0.tar.gz \\\n && tar zxvf pynini-2.0.0.tar.gz \\\n && cd pynini-2.0.0 \\\n && python setup.py install \\\n && rm -rf /tmp/re2 /tmp/openfst-1.6.9.tar.gz /tmp/pynini-2.0.0.tar.gz /tmp/openfst-1.6.9 /tmp/pynini-2.0.0\nRUN git clone https://github.com/alumae/et-g2p-fst.git\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y locales\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-8-jre-headless -y )\nRUN echo 6 > /dev/null \\\n && git clone https://github.com/alumae/kaldi-offline-transcriber.git\nCOPY Makefile.options /opt/kaldi-offline-transcriber/Makefile.options\nRUN cd /opt/kaldi-offline-transcriber \\\n && wget -q -O - http://bark.phon.ioc.ee/tanel/kaldi-offline-transcriber-data-2018-09-12.tgz | tar xvz\nRUN cd /opt/kaldi/tools \\\n && extras/install_pocolm.sh\nENV HOME=\"/opt\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nRUN (apt-get update ;apt-get install --no-install-recommends python3-numpy -y ) \\\n && cd /opt/kaldi-offline-transcriber \\\n && make .init\nRUN ln -s -f /usr/bin/python2 /usr/bin/python \\\n && (apt-get update ;apt-get install --no-install-recommends python-numpy python-scipy python3-simplejson python3-pytest -y ) \\\n && pip2 install theano --no-deps\n#   Set up punctuator    \nRUN echo 1 > /dev/null \\\n && cd /opt/kaldi-offline-transcriber \\\n && wget -q -O - http://bark.phon.ioc.ee/tanel/est_punct2.tar.gz | tar xvz \\\n && echo 'DO_PUNCTUATION=yes' >> /opt/kaldi-offline-transcriber/Makefile.options \\\n && echo 'PUNCTUATE_JSON_CMD=(cd punctuator-data/est_punct2/; temp_file1=$$(mktemp); temp_file2=$$(mktemp); cat > $$temp_file1; python2 punctuator_pad_emb_json.py Model_stage2p_final_563750_h256_lr0.02.pcl $$temp_file1 $$temp_file2 > /dev/stderr; cat $$temp_file2; rm $$temp_file1 $$temp_file2)' >> /opt/kaldi-offline-transcriber/Makefile.options\n#   Do a final git pull. This is actually not needed if building from scratch\nRUN echo 7 > /dev/null \\\n && cd /opt/kaldi-offline-transcriber \\\n && git pull\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:9\nMAINTAINER Tanel Alumae <alumae@gmail.com>\nRUN apt-get update \\\n && apt-get install autoconf automake bzip2 g++ gfortran git libatlas3-base libtool-bin make python2.7 python3 python-pip python-dev python3-dev sox ffmpeg subversion wget zlib1g-dev -y \\\n && apt-get clean autoclean \\\n && apt-get autoremove -y \\\n && ln -s -f /usr/bin/python3 /usr/bin/python ; ln -s -f bash /bin/sh\nWORKDIR /opt\nRUN git clone https://github.com/kaldi-asr/kaldi \\\n && cd /opt/kaldi/tools \\\n && make -j8 \\\n && cd /opt/kaldi/src \\\n && ./configure --shared \\\n && sed -i '/-g # -O0 -DKALDI_PARANOID/c\\-O3 -DNDEBUG' kaldi.mk \\\n && make -j8 depend \\\n && make -j8\nRUN apt-get install python3-setuptools -y \\\n && cd /tmp \\\n && git clone https://github.com/google/re2 \\\n && cd /tmp/re2 \\\n && make -j4 \\\n && make install \\\n && cd /tmp \\\n && wget http://www.openfst.org/twiki/pub/FST/FstDownload/openfst-1.6.9.tar.gz \\\n && tar zxvf openfst-1.6.9.tar.gz \\\n && cd openfst-1.6.9 \\\n && ./configure --enable-grm \\\n && make -j8 \\\n && make install \\\n && cd /tmp \\\n && wget http://www.opengrm.org/twiki/pub/GRM/PyniniDownload/pynini-2.0.0.tar.gz \\\n && tar zxvf pynini-2.0.0.tar.gz \\\n && cd pynini-2.0.0 \\\n && python setup.py install \\\n && rm -rf /tmp/re2 /tmp/openfst-1.6.9.tar.gz /tmp/pynini-2.0.0.tar.gz /tmp/openfst-1.6.9 /tmp/pynini-2.0.0\nRUN git clone https://github.com/alumae/et-g2p-fst.git\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y locales\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nRUN apt-get install openjdk-8-jre-headless -y\nRUN echo 6 > /dev/null \\\n && git clone https://github.com/alumae/kaldi-offline-transcriber.git\nCOPY Makefile.options /opt/kaldi-offline-transcriber/Makefile.options\nRUN cd /opt/kaldi-offline-transcriber \\\n && wget -q -O - http://bark.phon.ioc.ee/tanel/kaldi-offline-transcriber-data-2018-09-12.tgz | tar xvz\nRUN cd /opt/kaldi/tools \\\n && extras/install_pocolm.sh\nENV HOME=\"/opt\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nRUN apt-get install python3-numpy -y \\\n && cd /opt/kaldi-offline-transcriber \\\n && make .init\nRUN ln -s -f /usr/bin/python2 /usr/bin/python \\\n && apt-get install python-numpy python-scipy python3-simplejson python3-pytest -y \\\n && pip2 install theano --no-deps\n#  Set up punctuator    \nRUN echo 1 > /dev/null \\\n && cd /opt/kaldi-offline-transcriber \\\n && wget -q -O - http://bark.phon.ioc.ee/tanel/est_punct2.tar.gz | tar xvz \\\n && echo 'DO_PUNCTUATION=yes' >> /opt/kaldi-offline-transcriber/Makefile.options \\\n && echo 'PUNCTUATE_JSON_CMD=(cd punctuator-data/est_punct2/; temp_file1=$$(mktemp); temp_file2=$$(mktemp); cat > $$temp_file1; python2 punctuator_pad_emb_json.py Model_stage2p_final_563750_h256_lr0.02.pcl $$temp_file1 $$temp_file2 > /dev/stderr; cat $$temp_file2; rm $$temp_file1 $$temp_file2)' >> /opt/kaldi-offline-transcriber/Makefile.options\n#  Do a final git pull. This is actually not needed if building from scratch\nRUN echo 7 > /dev/null \\\n && cd /opt/kaldi-offline-transcriber \\\n && git pull\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"0927c1062179a63996577799e4c84285","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:9\nMAINTAINER Tanel Alumae <alumae@gmail.com>\nRUN apt-get update \\\n && apt-get install autoconf automake bzip2 g++ gfortran git libatlas3-base libtool-bin make python2.7 python3 python-pip python-dev python3-dev sox ffmpeg subversion wget zlib1g-dev -y \\\n && apt-get clean autoclean \\\n && apt-get autoremove -y \\\n && ln -s -f /usr/bin/python3 /usr/bin/python ; ln -s -f bash /bin/sh\nWORKDIR /opt\nRUN git clone https://github.com/kaldi-asr/kaldi \\\n && cd /opt/kaldi/tools \\\n && make -j8 \\\n && cd /opt/kaldi/src \\\n && ./configure --shared \\\n && sed -i '/-g # -O0 -DKALDI_PARANOID/c\\-O3 -DNDEBUG' kaldi.mk \\\n && make -j8 depend \\\n && make -j8\nRUN apt-get install python3-setuptools -y \\\n && cd /tmp \\\n && git clone https://github.com/google/re2 \\\n && cd /tmp/re2 \\\n && make -j4 \\\n && make install \\\n && cd /tmp \\\n && wget http://www.openfst.org/twiki/pub/FST/FstDownload/openfst-1.6.9.tar.gz \\\n && tar zxvf openfst-1.6.9.tar.gz \\\n && cd openfst-1.6.9 \\\n && ./configure --enable-grm \\\n && make -j8 \\\n && make install \\\n && cd /tmp \\\n && wget http://www.opengrm.org/twiki/pub/GRM/PyniniDownload/pynini-2.0.0.tar.gz \\\n && tar zxvf pynini-2.0.0.tar.gz \\\n && cd pynini-2.0.0 \\\n && python setup.py install \\\n && rm -rf /tmp/re2 /tmp/openfst-1.6.9.tar.gz /tmp/pynini-2.0.0.tar.gz /tmp/openfst-1.6.9 /tmp/pynini-2.0.0\nRUN git clone https://github.com/alumae/et-g2p-fst.git\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y locales\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nRUN apt-get install openjdk-8-jre-headless -y\nRUN echo 6 > /dev/null \\\n && git clone https://github.com/alumae/kaldi-offline-transcriber.git\nCOPY Makefile.options /opt/kaldi-offline-transcriber/Makefile.options\nRUN cd /opt/kaldi-offline-transcriber \\\n && wget -q -O - http://bark.phon.ioc.ee/tanel/kaldi-offline-transcriber-data-2018-09-12.tgz | tar xvz\nRUN cd /opt/kaldi/tools \\\n && extras/install_pocolm.sh\nENV HOME=\"/opt\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nRUN apt-get install python3-numpy -y \\\n && cd /opt/kaldi-offline-transcriber \\\n && make .init\nRUN ln -s -f /usr/bin/python2 /usr/bin/python \\\n && apt-get install python-numpy python-scipy python3-simplejson python3-pytest -y \\\n && pip2 install theano --no-deps\n#   Set up punctuator    \nRUN echo 1 > /dev/null \\\n && cd /opt/kaldi-offline-transcriber \\\n && wget -q -O - http://bark.phon.ioc.ee/tanel/est_punct2.tar.gz | tar xvz \\\n && echo 'DO_PUNCTUATION=yes' >> /opt/kaldi-offline-transcriber/Makefile.options \\\n && echo 'PUNCTUATE_JSON_CMD=(cd punctuator-data/est_punct2/; temp_file1=$$(mktemp); temp_file2=$$(mktemp); cat > $$temp_file1; python2 punctuator_pad_emb_json.py Model_stage2p_final_563750_h256_lr0.02.pcl $$temp_file1 $$temp_file2 > /dev/stderr; cat $$temp_file2; rm $$temp_file1 $$temp_file2)' >> /opt/kaldi-offline-transcriber/Makefile.options\n#   Do a final git pull. This is actually not needed if building from scratch\nRUN echo 7 > /dev/null \\\n && cd /opt/kaldi-offline-transcriber \\\n && git pull\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"c537f22d0a8e509d18a4abe7eb140a3c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/07840d0ab4d41645303879f42fe6eb2a49cb29d9.dockerfile"}