{"seed":3782858744,"processedDockerfileHash":"ecb16f4a7282cbddd2b69974cef76ea8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed to the Apache Software Foundation (ASF) under one or more\n#   contributor license agreements.  See the NOTICE file distributed with\n#   this work for additional information regarding copyright ownership.\n#   The ASF licenses this file to You under the Apache License, Version 2.0\n#   (the \"License\"); you may not use this file except in compliance with\n#   the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:16.04\nMAINTAINER Apache Software Foundation <dev@zeppelin.apache.org>\n#   `Z_VERSION` will be updated by `dev/change_zeppelin_version.sh`\nENV Z_VERSION=\"0.9.0-SNAPSHOT\"\nENV LOG_TAG=\"[ZEPPELIN_${Z_VERSION}]:\" \\\n    Z_HOME=\"/zeppelin\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN echo \"$LOG_TAG update and install basic packages\" \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 -y \\\n && locale-gen $LANG \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y \\\n && apt-get -y autoclean \\\n && apt-get -y dist-upgrade \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 -y\nRUN echo \"$LOG_TAG install tini related packages\" \\\n && apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 curl=7.47.0-1ubuntu2.19 grep=2.25-1~16.04.1 sed=4.2.2-7 dpkg=1.18.4ubuntu1.7 -y \\\n && TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\\\"\" | sed 's:^..\\\\(.*\\\\).$:\\\\1:' ` \\\n && curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb \\\n && dpkg -i tini.deb \\\n && rm tini.deb\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nRUN echo \"$LOG_TAG Install java8\" \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   should install conda first before numpy, matploylib since pip and python will be installed by conda\nRUN echo \"$LOG_TAG Install miniconda2 related packages\" \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends bzip2=1.0.6-8ubuntu0.2 ca-certificates=20210119~16.04.1 libglib2.0-0=2.48.2-0ubuntu4.8 libxext6=2:1.3.3-1 libsm6=2:1.2.2-1 libxrender1=1:0.9.9-0ubuntu1 git=1:2.7.4-0ubuntu1.10 mercurial=3.7.3-1ubuntu1.2 subversion=1.9.3-2ubuntu1.3 -y \\\n && echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/bash ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN echo \"$LOG_TAG Install python related packages\" \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends python-dev=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 -y \\\n && apt-get install --no-install-recommends gfortran=4:5.3.1-1ubuntu1 -y \\\n && apt-get install --no-install-recommends libblas-dev=3.6.0-2ubuntu2 libatlas-dev=3.10.2-9 liblapack-dev=3.6.0-2ubuntu2 -y \\\n && apt-get install --no-install-recommends libpng-dev libfreetype6-dev=2.6.1-0.1ubuntu2.5 libxft-dev=2.3.2-1 -y \\\n && apt-get install --no-install-recommends python-tk=2.7.12-1~16.04 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libxslt-dev zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -y \\\n && pip install numpy==1.12.1 pandas==0.21.1 matplotlib==2.1.1 pandasql==0.7.3 ipython==5.4.1 jupyter_client==5.1.0 ipykernel==4.7.0 bokeh==0.12.10 ggplot==0.11.5 grpcio==1.8.2 bkzep==0.4.0\nRUN echo \"$LOG_TAG Install R related packages\" \\\n && echo \"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/\" | tee -a /etc/apt/sources.list \\\n && gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9 \\\n && gpg -a --export E084DAB9 | apt-key add - \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends r-base=3.2.3-4 r-base-dev=3.2.3-4 -y \\\n && R -e \"install.packages('knitr', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('ggplot2', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('googleVis', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('data.table', repos='http://cran.us.r-project.org')\" \\\n && apt-get install --no-install-recommends libcurl4-gnutls-dev=7.47.0-1ubuntu2.19 libssl-dev=1.0.2g-1ubuntu4.20 -y \\\n && R -e \"install.packages('devtools', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('Rcpp', repos='http://cran.us.r-project.org')\" \\\n && Rscript -e \"library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')\"\n#   Install kubectl\nRUN apt-get install --no-install-recommends apt-transport-https=1.2.35 -y \\\n && curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends kubectl -y\nRUN echo \"$LOG_TAG Cleanup\" \\\n && apt-get autoclean \\\n && apt-get clean\nRUN echo \"$LOG_TAG Download Zeppelin binary\" \\\n && wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz http://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && mv /zeppelin-${Z_VERSION}-bin-all ${Z_HOME}\nCOPY log4j.properties ${Z_HOME}/conf/\nEXPOSE 8080/tcp\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\nWORKDIR ${Z_HOME}\nCMD [\"bin/zeppelin.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed to the Apache Software Foundation (ASF) under one or more\n#  contributor license agreements.  See the NOTICE file distributed with\n#  this work for additional information regarding copyright ownership.\n#  The ASF licenses this file to You under the Apache License, Version 2.0\n#  (the \"License\"); you may not use this file except in compliance with\n#  the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM ubuntu:16.04\nMAINTAINER Apache Software Foundation <dev@zeppelin.apache.org>\n#  `Z_VERSION` will be updated by `dev/change_zeppelin_version.sh`\nENV Z_VERSION=\"0.9.0-SNAPSHOT\"\nENV LOG_TAG=\"[ZEPPELIN_${Z_VERSION}]:\" \\\n    Z_HOME=\"/zeppelin\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN echo \"$LOG_TAG update and install basic packages\" \\\n && apt-get update -y \\\n && apt-get install locales -y \\\n && locale-gen $LANG \\\n && apt-get install software-properties-common -y \\\n && apt-get -y autoclean \\\n && apt-get -y dist-upgrade \\\n && apt-get install build-essential -y\nRUN echo \"$LOG_TAG install tini related packages\" \\\n && apt-get install wget curl grep sed dpkg -y \\\n && TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\\\"\" | sed 's:^..\\\\(.*\\\\).$:\\\\1:' ` \\\n && curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb \\\n && dpkg -i tini.deb \\\n && rm tini.deb\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nRUN echo \"$LOG_TAG Install java8\" \\\n && apt-get update -y \\\n && apt-get install openjdk-8-jdk -y \\\n && rm -rf /var/lib/apt/lists/*\n#  should install conda first before numpy, matploylib since pip and python will be installed by conda\nRUN echo \"$LOG_TAG Install miniconda2 related packages\" \\\n && apt-get update -y \\\n && apt-get install bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion -y \\\n && echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/bash ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN echo \"$LOG_TAG Install python related packages\" \\\n && apt-get update -y \\\n && apt-get install python-dev python-pip -y \\\n && apt-get install gfortran -y \\\n && apt-get install libblas-dev libatlas-dev liblapack-dev -y \\\n && apt-get install libpng-dev libfreetype6-dev libxft-dev -y \\\n && apt-get install python-tk libxml2-dev libxslt-dev zlib1g-dev -y \\\n && pip install numpy==1.12.1 pandas==0.21.1 matplotlib==2.1.1 pandasql==0.7.3 ipython==5.4.1 jupyter_client==5.1.0 ipykernel==4.7.0 bokeh==0.12.10 ggplot==0.11.5 grpcio==1.8.2 bkzep==0.4.0\nRUN echo \"$LOG_TAG Install R related packages\" \\\n && echo \"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/\" | tee -a /etc/apt/sources.list \\\n && gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9 \\\n && gpg -a --export E084DAB9 | apt-key add - \\\n && apt-get update -y \\\n && apt-get install r-base r-base-dev -y \\\n && R -e \"install.packages('knitr', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('ggplot2', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('googleVis', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('data.table', repos='http://cran.us.r-project.org')\" \\\n && apt-get install libcurl4-gnutls-dev libssl-dev -y \\\n && R -e \"install.packages('devtools', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('Rcpp', repos='http://cran.us.r-project.org')\" \\\n && Rscript -e \"library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')\"\n#  Install kubectl\nRUN apt-get install apt-transport-https -y \\\n && curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list \\\n && apt-get update \\\n && apt-get install kubectl -y\nRUN echo \"$LOG_TAG Cleanup\" \\\n && apt-get autoclean \\\n && apt-get clean\nRUN echo \"$LOG_TAG Download Zeppelin binary\" \\\n && wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz http://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && mv /zeppelin-${Z_VERSION}-bin-all ${Z_HOME}\nCOPY log4j.properties ${Z_HOME}/conf/\nEXPOSE 8080/tcp\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\nWORKDIR ${Z_HOME}\nCMD [\"bin/zeppelin.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"82838dfbb1f3cd79df125b1be179d7f8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed to the Apache Software Foundation (ASF) under one or more\n#   contributor license agreements.  See the NOTICE file distributed with\n#   this work for additional information regarding copyright ownership.\n#   The ASF licenses this file to You under the Apache License, Version 2.0\n#   (the \"License\"); you may not use this file except in compliance with\n#   the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:16.04\nMAINTAINER Apache Software Foundation <dev@zeppelin.apache.org>\n#   `Z_VERSION` will be updated by `dev/change_zeppelin_version.sh`\nENV Z_VERSION=\"0.9.0-SNAPSHOT\"\nENV LOG_TAG=\"[ZEPPELIN_${Z_VERSION}]:\" \\\n    Z_HOME=\"/zeppelin\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN echo \"$LOG_TAG update and install basic packages\" \\\n && apt-get update -y \\\n && apt-get install locales -y \\\n && locale-gen $LANG \\\n && apt-get install software-properties-common -y \\\n && apt-get -y autoclean \\\n && apt-get -y dist-upgrade \\\n && apt-get install build-essential -y\nRUN echo \"$LOG_TAG install tini related packages\" \\\n && apt-get install wget curl grep sed dpkg -y \\\n && TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\\\"\" | sed 's:^..\\\\(.*\\\\).$:\\\\1:' ` \\\n && curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb \\\n && dpkg -i tini.deb \\\n && rm tini.deb\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nRUN echo \"$LOG_TAG Install java8\" \\\n && apt-get update -y \\\n && apt-get install openjdk-8-jdk -y \\\n && rm -rf /var/lib/apt/lists/*\n#   should install conda first before numpy, matploylib since pip and python will be installed by conda\nRUN echo \"$LOG_TAG Install miniconda2 related packages\" \\\n && apt-get update -y \\\n && apt-get install bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion -y \\\n && echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/bash ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN echo \"$LOG_TAG Install python related packages\" \\\n && apt-get update -y \\\n && apt-get install python-dev python-pip -y \\\n && apt-get install gfortran -y \\\n && apt-get install libblas-dev libatlas-dev liblapack-dev -y \\\n && apt-get install libpng-dev libfreetype6-dev libxft-dev -y \\\n && apt-get install python-tk libxml2-dev libxslt-dev zlib1g-dev -y \\\n && pip install numpy==1.12.1 pandas==0.21.1 matplotlib==2.1.1 pandasql==0.7.3 ipython==5.4.1 jupyter_client==5.1.0 ipykernel==4.7.0 bokeh==0.12.10 ggplot==0.11.5 grpcio==1.8.2 bkzep==0.4.0\nRUN echo \"$LOG_TAG Install R related packages\" \\\n && echo \"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/\" | tee -a /etc/apt/sources.list \\\n && gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9 \\\n && gpg -a --export E084DAB9 | apt-key add - \\\n && apt-get update -y \\\n && apt-get install r-base r-base-dev -y \\\n && R -e \"install.packages('knitr', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('ggplot2', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('googleVis', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('data.table', repos='http://cran.us.r-project.org')\" \\\n && apt-get install libcurl4-gnutls-dev libssl-dev -y \\\n && R -e \"install.packages('devtools', repos='http://cran.us.r-project.org')\" \\\n && R -e \"install.packages('Rcpp', repos='http://cran.us.r-project.org')\" \\\n && Rscript -e \"library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')\"\n#   Install kubectl\nRUN apt-get install apt-transport-https -y \\\n && curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list \\\n && apt-get update \\\n && apt-get install kubectl -y\nRUN echo \"$LOG_TAG Cleanup\" \\\n && apt-get autoclean \\\n && apt-get clean\nRUN echo \"$LOG_TAG Download Zeppelin binary\" \\\n && wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz http://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n && mv /zeppelin-${Z_VERSION}-bin-all ${Z_HOME}\nCOPY log4j.properties ${Z_HOME}/conf/\nEXPOSE 8080/tcp\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\nWORKDIR ${Z_HOME}\nCMD [\"bin/zeppelin.sh\"]\n","originalDockerfileUglifiedHash":"66f256544dfebb82ce83ed7ccc8048e9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b05df71aea7f7f6920a02b647bb458df50c606ac.dockerfile"}