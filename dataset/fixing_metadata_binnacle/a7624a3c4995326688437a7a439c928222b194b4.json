{"seed":1270801301,"processedDockerfileHash":"8e6d7c9af2d59d7fd6dacb83872f532f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Run the Ubiquiti UniFi Controller in a container\n#\n#   Setup a local directory to store your unifi controller config:\n#   \tmkdir -p ~/.config/unifi/\n#   \tchmod -R 0700 ~/.config/unifi/\n#\n#   If you have already been using a locally installed unifi controller,\n#   copy the contents of your existing unifi config:\n#  \tcp -R /var/lib/unifi/* ~/.config/unifi/\t# Linux\n#  \tcp -R ~/Library/Application\\ Support/UniFi/* ~/.config/unifi/ # MacOS\n#\n#   Build the docker image (from directory with this Dockerfile & entrypoint.sh):\n#  \tdocker build -t unifi .\n#\n#   Start a unifi controller container:\n#  \tdocker run \\ # interactive mode isn't necessary\n#  \t\t-v ~/.config/unifi:/config \\ # for persistent config\n#  \t\t-p 8080:8080 -p 8443:8443 -p 8843:8843 -p 8880:8880 -p 3478:3478/udp \\\n#  \t\t--name unifi \\\n#  \t\tunifi\n#\n#   Access the controller in your browser at: https://127.0.0.1:8443\n#\n#   If existing devices are showing up as \"disconnected\" once logged in,\n#   SSH into each device and run:\n#   \tset-inform http://ip_of_docker_host:8080/inform\n#\nFROM ubuntu:16.04\n#   environment settings\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   install deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20210119~16.04.1 dirmngr=2.1.11-6ubuntu2.1 gnupg=1.4.20-1ubuntu3.3 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install gosu\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true ; apt-get purge -y --auto-remove $fetchDeps\n#   add mongo repo\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6 \\\n && echo \"deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse\" >> /etc/apt/sources.list.d/mongo.list\n#   install packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends binutils=2.26.1-1ubuntu1~16.04.8 jsvc=1.0.15-6 mongodb-org-server openjdk-8-jre-headless=8u292-b10-0ubuntu1~16.04.1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   unifi version\n#   From: https://www.ubnt.com/download/unifi/\nENV UNIFI_VERSION=\"\\\"5.10.23\\\"\"\n#   install unifi\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -o /tmp/unifi.deb -L \"http://dl.ubnt.com/unifi/${UNIFI_VERSION}/unifi_sysvinit_all.deb\" \\\n && dpkg -i /tmp/unifi.deb \\\n && rm -rf /tmp/unifi.deb \\\n && echo \"Build complete.\"\nWORKDIR /config\n#   3478 - STUN\n#   8080 - device inform (http)\n#   8443 - web management (https)\n#   8843 - guest portal (https)\n#   8880 - guest portal (http)\n#   6789 - throughput / mobile speedtest (tcp)\n#   ref https://help.ubnt.com/hc/en-us/articles/218506997-UniFi-Ports-Used\nEXPOSE 3478/udp 8080/tcp 8081/tcp 8443/tcp 8843/tcp 8880/tcp 6789/tcp\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"java\", \"-Xmx1024M\", \"-jar\", \"/usr/lib/unifi/lib/ace.jar\", \"start\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Run the Ubiquiti UniFi Controller in a container\n#\n#  Setup a local directory to store your unifi controller config:\n#  \tmkdir -p ~/.config/unifi/\n#  \tchmod -R 0700 ~/.config/unifi/\n#\n#  If you have already been using a locally installed unifi controller,\n#  copy the contents of your existing unifi config:\n# \tcp -R /var/lib/unifi/* ~/.config/unifi/\t# Linux\n# \tcp -R ~/Library/Application\\ Support/UniFi/* ~/.config/unifi/ # MacOS\n#\n#  Build the docker image (from directory with this Dockerfile & entrypoint.sh):\n# \tdocker build -t unifi .\n#\n#  Start a unifi controller container:\n# \tdocker run \\ # interactive mode isn't necessary\n# \t\t-v ~/.config/unifi:/config \\ # for persistent config\n# \t\t-p 8080:8080 -p 8443:8443 -p 8843:8843 -p 8880:8880 -p 3478:3478/udp \\\n# \t\t--name unifi \\\n# \t\tunifi\n#\n#  Access the controller in your browser at: https://127.0.0.1:8443\n#\n#  If existing devices are showing up as \"disconnected\" once logged in,\n#  SSH into each device and run:\n#  \tset-inform http://ip_of_docker_host:8080/inform\n#\nFROM ubuntu:16.04\n#  environment settings\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  install deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates dirmngr gnupg -y \\\n && rm -rf /var/lib/apt/lists/*\n#  install gosu\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true ; apt-get purge -y --auto-remove $fetchDeps\n#  add mongo repo\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6 \\\n && echo \"deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse\" >> /etc/apt/sources.list.d/mongo.list\n#  install packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends binutils jsvc mongodb-org-server openjdk-8-jre-headless -y \\\n && rm -rf /var/lib/apt/lists/*\n#  unifi version\n#  From: https://www.ubnt.com/download/unifi/\nENV UNIFI_VERSION=\"\\\"5.10.23\\\"\"\n#  install unifi\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -o /tmp/unifi.deb -L \"http://dl.ubnt.com/unifi/${UNIFI_VERSION}/unifi_sysvinit_all.deb\" \\\n && dpkg -i /tmp/unifi.deb \\\n && rm -rf /tmp/unifi.deb \\\n && echo \"Build complete.\"\nWORKDIR /config\n#  3478 - STUN\n#  8080 - device inform (http)\n#  8443 - web management (https)\n#  8843 - guest portal (https)\n#  8880 - guest portal (http)\n#  6789 - throughput / mobile speedtest (tcp)\n#  ref https://help.ubnt.com/hc/en-us/articles/218506997-UniFi-Ports-Used\nEXPOSE 3478/udp 8080/tcp 8081/tcp 8443/tcp 8843/tcp 8880/tcp 6789/tcp\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"java\", \"-Xmx1024M\", \"-jar\", \"/usr/lib/unifi/lib/ace.jar\", \"start\"]\n","injectedSmells":[],"originalDockerfileHash":"c742a9aae50f97400064fdf74bbee395","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Run the Ubiquiti UniFi Controller in a container\n#\n#   Setup a local directory to store your unifi controller config:\n#   \tmkdir -p ~/.config/unifi/\n#   \tchmod -R 0700 ~/.config/unifi/\n#\n#   If you have already been using a locally installed unifi controller,\n#   copy the contents of your existing unifi config:\n#  \tcp -R /var/lib/unifi/* ~/.config/unifi/\t# Linux\n#  \tcp -R ~/Library/Application\\ Support/UniFi/* ~/.config/unifi/ # MacOS\n#\n#   Build the docker image (from directory with this Dockerfile & entrypoint.sh):\n#  \tdocker build -t unifi .\n#\n#   Start a unifi controller container:\n#  \tdocker run \\ # interactive mode isn't necessary\n#  \t\t-v ~/.config/unifi:/config \\ # for persistent config\n#  \t\t-p 8080:8080 -p 8443:8443 -p 8843:8843 -p 8880:8880 -p 3478:3478/udp \\\n#  \t\t--name unifi \\\n#  \t\tunifi\n#\n#   Access the controller in your browser at: https://127.0.0.1:8443\n#\n#   If existing devices are showing up as \"disconnected\" once logged in,\n#   SSH into each device and run:\n#   \tset-inform http://ip_of_docker_host:8080/inform\n#\nFROM ubuntu:16.04\n#   environment settings\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   install deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates dirmngr gnupg -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install gosu\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true ; apt-get purge -y --auto-remove $fetchDeps\n#   add mongo repo\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6 \\\n && echo \"deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse\" >> /etc/apt/sources.list.d/mongo.list\n#   install packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends binutils jsvc mongodb-org-server openjdk-8-jre-headless -y \\\n && rm -rf /var/lib/apt/lists/*\n#   unifi version\n#   From: https://www.ubnt.com/download/unifi/\nENV UNIFI_VERSION=\"\\\"5.10.23\\\"\"\n#   install unifi\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -o /tmp/unifi.deb -L \"http://dl.ubnt.com/unifi/${UNIFI_VERSION}/unifi_sysvinit_all.deb\" \\\n && dpkg -i /tmp/unifi.deb \\\n && rm -rf /tmp/unifi.deb \\\n && echo \"Build complete.\"\nWORKDIR /config\n#   3478 - STUN\n#   8080 - device inform (http)\n#   8443 - web management (https)\n#   8843 - guest portal (https)\n#   8880 - guest portal (http)\n#   6789 - throughput / mobile speedtest (tcp)\n#   ref https://help.ubnt.com/hc/en-us/articles/218506997-UniFi-Ports-Used\nEXPOSE 3478/udp 8080/tcp 8081/tcp 8443/tcp 8843/tcp 8880/tcp 6789/tcp\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"java\", \"-Xmx1024M\", \"-jar\", \"/usr/lib/unifi/lib/ace.jar\", \"start\"]\n","originalDockerfileUglifiedHash":"72d4074c81ba8e9a0a30422b05737ebd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a7624a3c4995326688437a7a439c928222b194b4.dockerfile"}