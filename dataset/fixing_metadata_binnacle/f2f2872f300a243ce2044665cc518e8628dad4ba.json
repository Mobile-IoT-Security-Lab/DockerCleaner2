{"seed":3953452929,"processedDockerfileHash":"ab1aca4ffa96fc6a603546f0e946ece6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 git-core=1:2.7.4-0ubuntu1.10 xz-utils=5.1.1alpha+20120614-2ubuntu2 build-essential=12.1ubuntu2 wget=1.17.1-1ubuntu1.5 unzip=6.0-20ubuntu1.1 sudo=1.8.16-0ubuntu1.10 gnupg2=2.1.11-6ubuntu2.1 dirmngr=2.1.11-6ubuntu2.1 -y\n#   Add \"rvm\" as system group, to avoid conflicts with host GIDs typically starting with 1000\nRUN groupadd -r rvm \\\n && useradd -r -g rvm -G sudo -p \"\" --create-home rvm \\\n && echo \"source /etc/profile.d/rvm.sh\" >> /etc/rubybashrc\nUSER rvm\n#   install rvm, RVM 1.26.0+ has signed releases, source rvm for usage outside of package scripts\nRUN gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \\\n && (curl -L http://get.rvm.io | sudo bash -s stable ) \\\n && bash -c \" source /etc/rubybashrc \\\n && rvmsudo rvm cleanup all \"\n#   Import patch files for ruby and gems\nCOPY build/patches /home/rvm/patches/\nENV BASH_ENV=\"/etc/rubybashrc\"\n#   install rubies and fix permissions on\nRUN bash -c \" export CFLAGS='-s -O3 -fno-fast-math -fPIC' \\\n && for v in 2.5.3 ; do rvm install $v --patch $( echo ~/patches/ruby-$v/* | tr ' ' ',' ;); done \\\n && rvm cleanup all \\\n && find /usr/local/rvm -type d -print0 | sudo xargs -0 chmod g+sw \"\n#   Install rake-compiler and typical gems in all Rubies\n#   do not generate documentation for gems\nRUN echo \"gem: --no-ri --no-rdoc\" >> ~/.gemrc \\\n && bash -c \" rvm all do gem install --no-document bundler 'bundler:~>1.16' rake-compiler hoe mini_portile rubygems-tasks mini_portile2 \\\n && find /usr/local/rvm -type d -print0 | sudo xargs -0 chmod g+sw \"\n#   Install rake-compiler's cross rubies in global dir instead of /root\nRUN sudo mkdir -p /usr/local/rake-compiler \\\n && sudo chown rvm.rvm /usr/local/rake-compiler \\\n && ln -s /usr/local/rake-compiler ~/.rake-compiler\n#   Add cross compilers for Windows and Linux\nUSER root\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends gcc-mingw-w64-x86-64=5.3.1-8ubuntu3+17 gcc-mingw-w64-i686=5.3.1-8ubuntu3+17 g++-mingw-w64-x86-64=5.3.1-8ubuntu3+17 g++-mingw-w64-i686=5.3.1-8ubuntu3+17 gcc-multilib=4:5.3.1-1ubuntu1 g++-multilib=4:5.3.1-1ubuntu1 moreutils=0.57-1 -y\n#   Create dev tools i686-linux-gnu-*\nCOPY build/mk_i686.rb /root/\nRUN bash -c \" rvm alias create default 2.5.3 \\\n && rvm use default \\\n && ruby /root/mk_i686.rb \"\nUSER rvm\n#   Patch rake-compiler to build and install static libraries for Linux rubies\nRUN cd /usr/local/rvm/gems/ruby-2.5.3/gems/rake-compiler-1.0.7 \\\n && (git apply /home/rvm/patches/rake-compiler-1.0.7/*.diff || true )\nENV XRUBIES=\"2.6.0 2.5.0 2.4.0 2.3.0 2.2.2\"\n#   First do downloads sequentially since they can not run in parallel\n#   Then build all xruby versions in parallel\n#   Then cleanup all build artifacts\nRUN for rv in $XRUBIES; do bash -c \"rake-compiler /home/rvm/.rake-compiler/sources/ruby-$rv/Makefile.in VERSION=$rv HOST=x86_64-linux-gnu\" ; done ; for rv in $XRUBIES; do for host in i686-linux-gnu x86_64-linux-gnu i686-w64-mingw32 x86_64-w64-mingw32; do echo -n \"'rake-compiler cross-ruby VERSION=$rv HOST=$host' \" >> ~/xbuild_rubies; done ; done \\\n && cat ~/xbuild_rubies ; bash -c \" export CFLAGS='-s -O1 -fno-omit-frame-pointer -fno-fast-math' \\\n && parallel -- $( cat ~/xbuild_rubies ;) \\\n && rm -rf ~/.rake-compiler/builds ~/.rake-compiler/sources \\\n && find /usr/local/rvm -type d -print0 | sudo xargs -0 chmod g+sw \"\n#   Avoid linking against libruby shared object.\n#   See also https://github.com/rake-compiler/rake-compiler-dock/issues/13\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name libruby.so | xargs rm\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name libruby-static.a | while read f ; do cp $f `echo $f | sed s/-static// ` ; done\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name libruby.a | while read f ; do ar t $f | xargs ar d $f ; done\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name mkmf.rb | while read f ; do sed -i ':a;N;$!ba;s/TRY_LINK = [^\\n]*\\n[^\\n]*\\n[^\\n]*LOCAL_LIBS)/& -lruby-static/' $f ; done\n#   RubyInstaller doesn't install libgcc -> link it static.\nRUN find /usr/local/rake-compiler/ruby/*mingw*/ -name rbconfig.rb | while read f ; do sed -i 's/.\"LDFLAGS\". = \"/&-static-libgcc /' $f ; done\nUSER root\n#   Add more libraries and tools to support cross build\nRUN dpkg --add-architecture i386 \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends libc6-dev:i386 libudev-dev=229-4ubuntu21.31 libudev-dev:i386 cmake=3.5.1-1ubuntu3 -y\n#   Fix paths in rake-compiler/config.yml and add rvm and mingw-tools to the global bashrc\nRUN sed -i -- \"s:/root/.rake-compiler:/usr/local/rake-compiler:g\" /usr/local/rake-compiler/config.yml \\\n && echo \"source /etc/profile.d/rvm.sh\" >> /etc/bash.bashrc\n#   # Install wrappers for strip commands as a workaround for \"Protocol error\" in boot2docker.\nCOPY build/strip_wrapper /root/\nRUN mv /usr/bin/i686-w64-mingw32-strip /usr/bin/i686-w64-mingw32-strip.bin \\\n && mv /usr/bin/x86_64-w64-mingw32-strip /usr/bin/x86_64-w64-mingw32-strip.bin \\\n && ln /root/strip_wrapper /usr/bin/i686-w64-mingw32-strip \\\n && ln /root/strip_wrapper /usr/bin/x86_64-w64-mingw32-strip\n#   Install SIGINT forwarder\nCOPY build/sigfw.c /root/\nRUN gcc $HOME/sigfw.c -o /usr/local/bin/sigfw\n#   Install user mapper\nCOPY build/runas /usr/local/bin/\n#   Install sudoers configuration\nCOPY build/sudoers /etc/sudoers.d/rake-compiler-dock\nENV RUBY_CC_VERSION=\"2.6.0:2.5.0:2.4.0:2.3.0:2.2.2\"\nCMD bash\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nRUN apt-get update -y \\\n && apt-get install curl git-core xz-utils build-essential wget unzip sudo gnupg2 dirmngr -y\n#  Add \"rvm\" as system group, to avoid conflicts with host GIDs typically starting with 1000\nRUN groupadd -r rvm \\\n && useradd -r -g rvm -G sudo -p \"\" --create-home rvm \\\n && echo \"source /etc/profile.d/rvm.sh\" >> /etc/rubybashrc\nUSER rvm\n#  install rvm, RVM 1.26.0+ has signed releases, source rvm for usage outside of package scripts\nRUN gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \\\n && (curl -L http://get.rvm.io | sudo bash -s stable ) \\\n && bash -c \" source /etc/rubybashrc \\\n && rvmsudo rvm cleanup all \"\n#  Import patch files for ruby and gems\nCOPY build/patches /home/rvm/patches/\nENV BASH_ENV=\"/etc/rubybashrc\"\n#  install rubies and fix permissions on\nRUN bash -c \" export CFLAGS='-s -O3 -fno-fast-math -fPIC' \\\n && for v in 2.5.3 ; do rvm install $v --patch $(echo ~/patches/ruby-$v/* | tr ' ' ','); done \\\n && rvm cleanup all \\\n && find /usr/local/rvm -type d -print0 | sudo xargs -0 chmod g+sw \"\n#  Install rake-compiler and typical gems in all Rubies\n#  do not generate documentation for gems\nRUN echo \"gem: --no-ri --no-rdoc\" >> ~/.gemrc \\\n && bash -c \" rvm all do gem install --no-document bundler 'bundler:~>1.16' rake-compiler hoe mini_portile rubygems-tasks mini_portile2 \\\n && find /usr/local/rvm -type d -print0 | sudo xargs -0 chmod g+sw \"\n#  Install rake-compiler's cross rubies in global dir instead of /root\nRUN sudo mkdir -p /usr/local/rake-compiler \\\n && sudo chown rvm.rvm /usr/local/rake-compiler \\\n && ln -s /usr/local/rake-compiler ~/.rake-compiler\n#  Add cross compilers for Windows and Linux\nUSER root\nRUN apt-get update -y \\\n && apt-get install gcc-mingw-w64-x86-64 gcc-mingw-w64-i686 g++-mingw-w64-x86-64 g++-mingw-w64-i686 gcc-multilib g++-multilib moreutils -y\n#  Create dev tools i686-linux-gnu-*\nCOPY build/mk_i686.rb /root/\nRUN bash -c \" rvm alias create default 2.5.3 \\\n && rvm use default \\\n && ruby /root/mk_i686.rb \"\nUSER rvm\n#  Patch rake-compiler to build and install static libraries for Linux rubies\nRUN cd /usr/local/rvm/gems/ruby-2.5.3/gems/rake-compiler-1.0.7 \\\n && (git apply /home/rvm/patches/rake-compiler-1.0.7/*.diff || true )\nENV XRUBIES=\"2.6.0 2.5.0 2.4.0 2.3.0 2.2.2\"\n#  First do downloads sequentially since they can not run in parallel\n#  Then build all xruby versions in parallel\n#  Then cleanup all build artifacts\nRUN for rv in $XRUBIES; do bash -c \"rake-compiler /home/rvm/.rake-compiler/sources/ruby-$rv/Makefile.in VERSION=$rv HOST=x86_64-linux-gnu\" ; done ; for rv in $XRUBIES; do for host in i686-linux-gnu x86_64-linux-gnu i686-w64-mingw32 x86_64-w64-mingw32; do echo -n \"'rake-compiler cross-ruby VERSION=$rv HOST=$host' \" >> ~/xbuild_rubies; done ; done \\\n && cat ~/xbuild_rubies ; bash -c \" export CFLAGS='-s -O1 -fno-omit-frame-pointer -fno-fast-math' \\\n && parallel -- $( cat ~/xbuild_rubies ;) \\\n && rm -rf ~/.rake-compiler/builds ~/.rake-compiler/sources \\\n && find /usr/local/rvm -type d -print0 | sudo xargs -0 chmod g+sw \"\n#  Avoid linking against libruby shared object.\n#  See also https://github.com/rake-compiler/rake-compiler-dock/issues/13\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name libruby.so | xargs rm\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name libruby-static.a | while read f ; do cp $f `echo $f | sed s/-static// ` ; done\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name libruby.a | while read f ; do ar t $f | xargs ar d $f ; done\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name mkmf.rb | while read f ; do sed -i ':a;N;$!ba;s/TRY_LINK = [^\\n]*\\n[^\\n]*\\n[^\\n]*LOCAL_LIBS)/& -lruby-static/' $f ; done\n#  RubyInstaller doesn't install libgcc -> link it static.\nRUN find /usr/local/rake-compiler/ruby/*mingw*/ -name rbconfig.rb | while read f ; do sed -i 's/.\"LDFLAGS\". = \"/&-static-libgcc /' $f ; done\nUSER root\n#  Add more libraries and tools to support cross build\nRUN dpkg --add-architecture i386 \\\n && apt-get update -y \\\n && apt-get install libc6-dev:i386 libudev-dev libudev-dev:i386 cmake -y\n#  Fix paths in rake-compiler/config.yml and add rvm and mingw-tools to the global bashrc\nRUN sed -i -- \"s:/root/.rake-compiler:/usr/local/rake-compiler:g\" /usr/local/rake-compiler/config.yml \\\n && echo \"source /etc/profile.d/rvm.sh\" >> /etc/bash.bashrc\n#  # Install wrappers for strip commands as a workaround for \"Protocol error\" in boot2docker.\nCOPY build/strip_wrapper /root/\nRUN mv /usr/bin/i686-w64-mingw32-strip /usr/bin/i686-w64-mingw32-strip.bin \\\n && mv /usr/bin/x86_64-w64-mingw32-strip /usr/bin/x86_64-w64-mingw32-strip.bin \\\n && ln /root/strip_wrapper /usr/bin/i686-w64-mingw32-strip \\\n && ln /root/strip_wrapper /usr/bin/x86_64-w64-mingw32-strip\n#  Install SIGINT forwarder\nCOPY build/sigfw.c /root/\nRUN gcc $HOME/sigfw.c -o /usr/local/bin/sigfw\n#  Install user mapper\nCOPY build/runas /usr/local/bin/\n#  Install sudoers configuration\nCOPY build/sudoers /etc/sudoers.d/rake-compiler-dock\nENV RUBY_CC_VERSION=\"2.6.0:2.5.0:2.4.0:2.3.0:2.2.2\"\nCMD bash\n","injectedSmells":[],"originalDockerfileHash":"9cde55ffc36e5c498930469ceba4e781","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nRUN apt-get update -y \\\n && apt-get install curl git-core xz-utils build-essential wget unzip sudo gnupg2 dirmngr -y\n#   Add \"rvm\" as system group, to avoid conflicts with host GIDs typically starting with 1000\nRUN groupadd -r rvm \\\n && useradd -r -g rvm -G sudo -p \"\" --create-home rvm \\\n && echo \"source /etc/profile.d/rvm.sh\" >> /etc/rubybashrc\nUSER rvm\n#   install rvm, RVM 1.26.0+ has signed releases, source rvm for usage outside of package scripts\nRUN gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \\\n && (curl -L http://get.rvm.io | sudo bash -s stable ) \\\n && bash -c \" source /etc/rubybashrc \\\n && rvmsudo rvm cleanup all \"\n#   Import patch files for ruby and gems\nCOPY build/patches /home/rvm/patches/\nENV BASH_ENV=\"/etc/rubybashrc\"\n#   install rubies and fix permissions on\nRUN bash -c \" export CFLAGS='-s -O3 -fno-fast-math -fPIC' \\\n && for v in 2.5.3 ; do rvm install $v --patch $( echo ~/patches/ruby-$v/* | tr ' ' ',' ;); done \\\n && rvm cleanup all \\\n && find /usr/local/rvm -type d -print0 | sudo xargs -0 chmod g+sw \"\n#   Install rake-compiler and typical gems in all Rubies\n#   do not generate documentation for gems\nRUN echo \"gem: --no-ri --no-rdoc\" >> ~/.gemrc \\\n && bash -c \" rvm all do gem install --no-document bundler 'bundler:~>1.16' rake-compiler hoe mini_portile rubygems-tasks mini_portile2 \\\n && find /usr/local/rvm -type d -print0 | sudo xargs -0 chmod g+sw \"\n#   Install rake-compiler's cross rubies in global dir instead of /root\nRUN sudo mkdir -p /usr/local/rake-compiler \\\n && sudo chown rvm.rvm /usr/local/rake-compiler \\\n && ln -s /usr/local/rake-compiler ~/.rake-compiler\n#   Add cross compilers for Windows and Linux\nUSER root\nRUN apt-get update -y \\\n && apt-get install gcc-mingw-w64-x86-64 gcc-mingw-w64-i686 g++-mingw-w64-x86-64 g++-mingw-w64-i686 gcc-multilib g++-multilib moreutils -y\n#   Create dev tools i686-linux-gnu-*\nCOPY build/mk_i686.rb /root/\nRUN bash -c \" rvm alias create default 2.5.3 \\\n && rvm use default \\\n && ruby /root/mk_i686.rb \"\nUSER rvm\n#   Patch rake-compiler to build and install static libraries for Linux rubies\nRUN cd /usr/local/rvm/gems/ruby-2.5.3/gems/rake-compiler-1.0.7 \\\n && (git apply /home/rvm/patches/rake-compiler-1.0.7/*.diff || true )\nENV XRUBIES=\"2.6.0 2.5.0 2.4.0 2.3.0 2.2.2\"\n#   First do downloads sequentially since they can not run in parallel\n#   Then build all xruby versions in parallel\n#   Then cleanup all build artifacts\nRUN for rv in $XRUBIES; do bash -c \"rake-compiler /home/rvm/.rake-compiler/sources/ruby-$rv/Makefile.in VERSION=$rv HOST=x86_64-linux-gnu\" ; done ; for rv in $XRUBIES; do for host in i686-linux-gnu x86_64-linux-gnu i686-w64-mingw32 x86_64-w64-mingw32; do echo -n \"'rake-compiler cross-ruby VERSION=$rv HOST=$host' \" >> ~/xbuild_rubies; done ; done \\\n && cat ~/xbuild_rubies ; bash -c \" export CFLAGS='-s -O1 -fno-omit-frame-pointer -fno-fast-math' \\\n && parallel -- $( cat ~/xbuild_rubies ;) \\\n && rm -rf ~/.rake-compiler/builds ~/.rake-compiler/sources \\\n && find /usr/local/rvm -type d -print0 | sudo xargs -0 chmod g+sw \"\n#   Avoid linking against libruby shared object.\n#   See also https://github.com/rake-compiler/rake-compiler-dock/issues/13\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name libruby.so | xargs rm\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name libruby-static.a | while read f ; do cp $f `echo $f | sed s/-static// ` ; done\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name libruby.a | while read f ; do ar t $f | xargs ar d $f ; done\nRUN find /usr/local/rake-compiler/ruby/*linux*/ -name mkmf.rb | while read f ; do sed -i ':a;N;$!ba;s/TRY_LINK = [^\\n]*\\n[^\\n]*\\n[^\\n]*LOCAL_LIBS)/& -lruby-static/' $f ; done\n#   RubyInstaller doesn't install libgcc -> link it static.\nRUN find /usr/local/rake-compiler/ruby/*mingw*/ -name rbconfig.rb | while read f ; do sed -i 's/.\"LDFLAGS\". = \"/&-static-libgcc /' $f ; done\nUSER root\n#   Add more libraries and tools to support cross build\nRUN dpkg --add-architecture i386 \\\n && apt-get update -y \\\n && apt-get install libc6-dev:i386 libudev-dev libudev-dev:i386 cmake -y\n#   Fix paths in rake-compiler/config.yml and add rvm and mingw-tools to the global bashrc\nRUN sed -i -- \"s:/root/.rake-compiler:/usr/local/rake-compiler:g\" /usr/local/rake-compiler/config.yml \\\n && echo \"source /etc/profile.d/rvm.sh\" >> /etc/bash.bashrc\n#   # Install wrappers for strip commands as a workaround for \"Protocol error\" in boot2docker.\nCOPY build/strip_wrapper /root/\nRUN mv /usr/bin/i686-w64-mingw32-strip /usr/bin/i686-w64-mingw32-strip.bin \\\n && mv /usr/bin/x86_64-w64-mingw32-strip /usr/bin/x86_64-w64-mingw32-strip.bin \\\n && ln /root/strip_wrapper /usr/bin/i686-w64-mingw32-strip \\\n && ln /root/strip_wrapper /usr/bin/x86_64-w64-mingw32-strip\n#   Install SIGINT forwarder\nCOPY build/sigfw.c /root/\nRUN gcc $HOME/sigfw.c -o /usr/local/bin/sigfw\n#   Install user mapper\nCOPY build/runas /usr/local/bin/\n#   Install sudoers configuration\nCOPY build/sudoers /etc/sudoers.d/rake-compiler-dock\nENV RUBY_CC_VERSION=\"2.6.0:2.5.0:2.4.0:2.3.0:2.2.2\"\nCMD bash\n","originalDockerfileUglifiedHash":"3c0df35794b9ee3bddc5f234a560a228","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f2f2872f300a243ce2044665cc518e8628dad4ba.dockerfile"}