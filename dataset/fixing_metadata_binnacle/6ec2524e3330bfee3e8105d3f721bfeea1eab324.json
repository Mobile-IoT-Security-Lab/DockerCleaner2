{"seed":457452117,"processedDockerfileHash":"84ea62ad185924dccff0ee47fba97efd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM alpine:3.4\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkgconf  re2c\"\nRUN apk add ca-certificates=20161130-r0 curl=7.60.0-r1 tar=1.29-r1 apache2=2.4.33-r0 gettext=0.19.7-r3 bash=4.3.42-r5 xz=5.2.2-r1 --no-cache --virtual .persistent-deps\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\n#  #<autogenerated>##\n#  #</autogenerated>##\n#   Apply stack smash protection to functions using local buffers and alloca()\n#   Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n#   Enable optimization (-O2)\n#   Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n#   Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n#   https://github.com/docker-library/php/issues/272\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2\"\nENV PHP_VERSION=\"5.3.29\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\" \\\n    PHP_ASC_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz.asc/from/this/mirror\"\nRUN set -xe ; apk add gnupg=2.1.12-r1 openssl=1.0.2n-r0 --no-cache --virtual .fetch-deps ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" ; apk del .fetch-deps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && apk add curl-dev=7.60.0-r1 libedit-dev=20150325.3.1-r3 libxml2-dev=2.9.5-r0 openssl-dev=1.0.2n-r0 sqlite-dev=3.13.0-r2 apache2-dev=2.4.33-r0 $PHPIZE_DEPS --no-cache --virtual .build-deps \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( getconf _NPROCESSORS_ONLN ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --no-cache --virtual .php-rundeps \\\n && apk del .build-deps\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\nCOPY envvars $APACHE_ENVVARS\nRUN set -ex \\\n && sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" /var/www/html; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done \\\n && rm -fr /var/www/localhost\n#   logs should go to stdout / stderr\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n#   PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo -e '<FilesMatch \\.php$>' ;echo -e '\\tSetHandler application/x-httpd-php' ;echo -e '</FilesMatch>' ;echo ;echo -e 'DirectoryIndex disabled' ;echo -e 'DirectoryIndex index.php index.html' ;echo ;echo -e '<Directory /var/www/>' ;echo -e '\\tOptions -Indexes' ;echo -e '\\tAllowOverride All' ;echo -e '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf.d/php.conf\"\n#   Fix DocumentRoot and PHP module loading\nRUN sed -i 's@^DocumentRoot \"/var/www/localhost/htdocs\"@DocumentRoot \"/var/www/html\"@' /etc/apache2/httpd.conf \\\n && sed -i 's@<Directory \"/var/www/localhost/htdocs\">@<Directory \"/var/www/html\">@' /etc/apache2/httpd.conf \\\n && sed -i 's@LoadModule php5_module lib/apache2/libphp5.so@LoadModule php5_module modules/libphp5.so@' /etc/apache2/httpd.conf\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-php-entrypoint\"]\nCOPY apache2-foreground /usr/local/bin/\nCOPY httpd.conf /usr/local/etc/httpd.conf.tpl\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM alpine:3.4\n#  persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkgconf  re2c\"\nRUN apk add --no-cache --virtual .persistent-deps ca-certificates curl tar apache2 gettext bash xz\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\n# #<autogenerated>##\n# #</autogenerated>##\n#  Apply stack smash protection to functions using local buffers and alloca()\n#  Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n#  Enable optimization (-O2)\n#  Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n#  Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n#  https://github.com/docker-library/php/issues/272\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2\"\nENV PHP_VERSION=\"5.3.29\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\" \\\n    PHP_ASC_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz.asc/from/this/mirror\"\nRUN set -xe ; apk add --no-cache --virtual .fetch-deps gnupg openssl ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" ; apk del .fetch-deps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS curl-dev libedit-dev libxml2-dev openssl-dev sqlite-dev apache2-dev \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( getconf _NPROCESSORS_ONLN ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .php-rundeps $runDeps \\\n && apk del .build-deps\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\nCOPY envvars $APACHE_ENVVARS\nRUN set -ex \\\n && sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" /var/www/html; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done \\\n && rm -fr /var/www/localhost\n#  logs should go to stdout / stderr\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n#  PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo -e '<FilesMatch \\.php$>' ;echo -e '\\tSetHandler application/x-httpd-php' ;echo -e '</FilesMatch>' ;echo ;echo -e 'DirectoryIndex disabled' ;echo -e 'DirectoryIndex index.php index.html' ;echo ;echo -e '<Directory /var/www/>' ;echo -e '\\tOptions -Indexes' ;echo -e '\\tAllowOverride All' ;echo -e '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf.d/php.conf\"\n#  Fix DocumentRoot and PHP module loading\nRUN sed -i 's@^DocumentRoot \"/var/www/localhost/htdocs\"@DocumentRoot \"/var/www/html\"@' /etc/apache2/httpd.conf \\\n && sed -i 's@<Directory \"/var/www/localhost/htdocs\">@<Directory \"/var/www/html\">@' /etc/apache2/httpd.conf \\\n && sed -i 's@LoadModule php5_module lib/apache2/libphp5.so@LoadModule php5_module modules/libphp5.so@' /etc/apache2/httpd.conf\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-php-entrypoint\"]\nCOPY apache2-foreground /usr/local/bin/\nCOPY httpd.conf /usr/local/etc/httpd.conf.tpl\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n","injectedSmells":[],"originalDockerfileHash":"67766c1a84fd1a352d3b7f771b442a55","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM alpine:3.4\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkgconf  re2c\"\nRUN apk add --no-cache --virtual .persistent-deps ca-certificates curl tar apache2 gettext bash xz\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\n#  #<autogenerated>##\n#  #</autogenerated>##\n#   Apply stack smash protection to functions using local buffers and alloca()\n#   Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n#   Enable optimization (-O2)\n#   Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n#   Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n#   https://github.com/docker-library/php/issues/272\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--with-apxs2\"\nENV PHP_VERSION=\"5.3.29\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\" \\\n    PHP_ASC_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz.asc/from/this/mirror\"\nRUN set -xe ; apk add --no-cache --virtual .fetch-deps gnupg openssl ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" ; apk del .fetch-deps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS curl-dev libedit-dev libxml2-dev openssl-dev sqlite-dev apache2-dev \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( getconf _NPROCESSORS_ONLN ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .php-rundeps $runDeps \\\n && apk del .build-deps\nENV APACHE_CONFDIR=\"/etc/apache2\"\nENV APACHE_ENVVARS=\"$APACHE_CONFDIR/envvars\"\nCOPY envvars $APACHE_ENVVARS\nRUN set -ex \\\n && sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n && . \"$APACHE_ENVVARS\" \\\n && for dir in \"$APACHE_LOCK_DIR\" \"$APACHE_RUN_DIR\" \"$APACHE_LOG_DIR\" /var/www/html; do rm -rvf \"$dir\" \\\n && mkdir -p \"$dir\" \\\n && chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\" ; done \\\n && rm -fr /var/www/localhost\n#   logs should go to stdout / stderr\nRUN set -ex \\\n && . \"$APACHE_ENVVARS\" \\\n && ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n && ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n#   PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { echo -e '<FilesMatch \\.php$>' ;echo -e '\\tSetHandler application/x-httpd-php' ;echo -e '</FilesMatch>' ;echo ;echo -e 'DirectoryIndex disabled' ;echo -e 'DirectoryIndex index.php index.html' ;echo ;echo -e '<Directory /var/www/>' ;echo -e '\\tOptions -Indexes' ;echo -e '\\tAllowOverride All' ;echo -e '</Directory>' ; } | tee \"$APACHE_CONFDIR/conf.d/php.conf\"\n#   Fix DocumentRoot and PHP module loading\nRUN sed -i 's@^DocumentRoot \"/var/www/localhost/htdocs\"@DocumentRoot \"/var/www/html\"@' /etc/apache2/httpd.conf \\\n && sed -i 's@<Directory \"/var/www/localhost/htdocs\">@<Directory \"/var/www/html\">@' /etc/apache2/httpd.conf \\\n && sed -i 's@LoadModule php5_module lib/apache2/libphp5.so@LoadModule php5_module modules/libphp5.so@' /etc/apache2/httpd.conf\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-php-entrypoint\"]\nCOPY apache2-foreground /usr/local/bin/\nCOPY httpd.conf /usr/local/etc/httpd.conf.tpl\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nCMD [\"apache2-foreground\"]\n","originalDockerfileUglifiedHash":"0e6ff7a3ae6008a1ae0c81a4b727c5b9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6ec2524e3330bfee3e8105d3f721bfeea1eab324.dockerfile"}