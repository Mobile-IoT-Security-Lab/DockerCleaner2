{"seed":3157656815,"processedDockerfileHash":"44e8bb20e7d9734846b701a48b18f4d6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   cusspvz/magento.docker\n#   Magento 2.0 over alpine, nginx, php-fpm and mariadb\n#\nFROM alpine:latest\nMAINTAINER José Moreira <jose.moreira@findhit.com>\nENV DOMAIN=\"docker.local\"\nENV REDIRECT_TO_WWW_DOMAIN=\"0\"\n#\n#   Install packages\n#\nRUN echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk add curl=7.88.1-r1 openssl=3.0.8-r3 git=2.38.4-r1 supervisor=4.2.4-r0 ca-certificates=20220614-r4 nginx=1.22.1-r0 composer@testing php-fpm php-phar php-openssl php-curl php-json php-xml php-zlib php-gd php-ctype php-dom php-mcrypt php-iconv php-intl php-xsl php-zip mysql=10.6.12-r0 mysql-client=10.6.12-r0 php-pdo_mysql --update \\\n && rm -fR /var/cache/apk/*\n#\n#   MySQL Server\n#\nENV MYSQL_HOST=\"localhost\"\nENV MYSQL_PORT=\"3306\"\nENV MYSQL_DATABASE=\"magento\"\nENV MYSQL_USERNAME=\"root\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nRUN /usr/bin/mysql_install_db \\\n && chown -R mysql:mysql /var/lib/mysql \\\n && /usr/bin/mysqld_safe &; MYSQL_PID=$! ; sleep 20 \\\n && /usr/bin/mysqladmin -u root password $MYSQL_PASSWORD \\\n && kill $MYSQL_PID\nVOLUME /var/lib/mysql\nEXPOSE 3306/tcp\n#\n#   Magento configs\n#\nARG MAGENTO_VERSION=2.0.4\nARG MAGENTO_PUBLIC_KEY=ffc9f467961151f41827c02bc7a9b669\nARG MAGENTO_PRIVATE_KEY=4f64aaa7771b441ef5d72e941c350542\nENV MAGENTO_ROOT=\"/magento\" \\\n    MAGENTO_USER=\"magento\" \\\n    MAGENTO_USER_ID=\"1000\" \\\n    MAGENTO_GROUP=\"magento\" \\\n    MAGENTO_GROUP_ID=\"1000\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV MAGENTO_ADMIN_URI=\"admin\" \\\n    MAGENTO_ADMIN_EMAIL=\"admin@example.org\" \\\n    MAGENTO_ADMIN_FIRSTNAME=\"John\" \\\n    MAGENTO_ADMIN_LASTNAME=\"Doe\" \\\n    MAGENTO_ADMIN_USERNAME=\"admin\" \\\n    MAGENTO_LANGUAGE=\"en_US\" \\\n    MAGENTO_TIMEZONE=\"Europe/Lisbon\" \\\n    MAGENTO_CURRENCY=\"EUR\" \\\n    MAGENTO_ADMIN_USERNAME=\"admin\" \\\n    MAGENTO_ADMIN_USERNAME=\"admin\"\nRUN mkdir -p ~/.composer \\\n && echo \"{ \\\"http-basic\\\": { \\\"repo.magento.com\\\": { \\\"username\\\": \\\"$MAGENTO_PUBLIC_KEY\\\", \\\"password\\\": \\\"$MAGENTO_PRIVATE_KEY\\\" } } }\" > ~/.composer/auth.json \\\n && git clone https://github.com/magento/magento2.git $MAGENTO_ROOT \\\n && cd $MAGENTO_ROOT \\\n && composer install\nVOLUME /magento/app/etc /magento/pub\n#\n#   Nginx Server\n#\nENV NGINX_PORT=\"80\"\nRUN mkdir /tmp/nginx\nEXPOSE 80/tcp\n#\n#   PHP Configuration\n#\nENV PHP_INI=\"/etc/php/php.ini\"\nRUN sed 's,;always_populate_raw_post_data,always_populate_raw_post_data,g' -i $PHP_INI \\\n && sed 's,memory_limit = 128M,memory_limit = 256M,g' -i $PHP_INI\n#   Must be kept until it is fixed\n#   https://github.com/zendframework/zend-stdlib/issues/58\nRUN sed \"s,=> GLOB_BRACE,=> defined('GLOB_BRACE') ? GLOB_BRACE : 0,g\" -i /magento/vendor/zendframework/zend-stdlib/src/Glob.php\nCOPY start.sh /scripts/start.sh\nCOPY setup.sh /scripts/setup.sh\nRUN chmod +x /scripts/start.sh /scripts/setup.sh\n#\n#   Scalability\n#\nENV NODES=\"\\\"\nCMD [\"/scripts/start.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  cusspvz/magento.docker\n#  Magento 2.0 over alpine, nginx, php-fpm and mariadb\n#\nFROM alpine:latest\nMAINTAINER José Moreira <jose.moreira@findhit.com>\nENV DOMAIN=\"docker.local\"\nENV REDIRECT_TO_WWW_DOMAIN=\"0\"\n#\n#  Install packages\n#\nRUN echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk add --update curl openssl git supervisor ca-certificates nginx composer@testing php-fpm php-phar php-openssl php-curl php-json php-xml php-zlib php-gd php-ctype php-dom php-mcrypt php-iconv php-intl php-xsl php-zip mysql mysql-client php-pdo_mysql \\\n && rm -fR /var/cache/apk/*\n#\n#  MySQL Server\n#\nENV MYSQL_HOST=\"localhost\"\nENV MYSQL_PORT=\"3306\"\nENV MYSQL_DATABASE=\"magento\"\nENV MYSQL_USERNAME=\"root\"\nENV MYSQL_PASSWORD=\"ThisShouldBeChangableLater\"\nRUN /usr/bin/mysql_install_db \\\n && chown -R mysql:mysql /var/lib/mysql \\\n && /usr/bin/mysqld_safe &; MYSQL_PID=$! ; sleep 20 \\\n && /usr/bin/mysqladmin -u root password $MYSQL_PASSWORD \\\n && kill $MYSQL_PID\nVOLUME /var/lib/mysql\nEXPOSE 3306/tcp\n#\n#  Magento configs\n#\nARG MAGENTO_VERSION=2.0.4\nARG MAGENTO_PUBLIC_KEY=ffc9f467961151f41827c02bc7a9b669\nARG MAGENTO_PRIVATE_KEY=4f64aaa7771b441ef5d72e941c350542\nENV MAGENTO_ROOT=\"/magento\" \\\n    MAGENTO_USER=\"magento\" \\\n    MAGENTO_USER_ID=\"1000\" \\\n    MAGENTO_GROUP=\"magento\" \\\n    MAGENTO_GROUP_ID=\"1000\"\nENV MAGENTO_ADMIN_URI=\"admin\" \\\n    MAGENTO_ADMIN_EMAIL=\"admin@example.org\" \\\n    MAGENTO_ADMIN_FIRSTNAME=\"John\" \\\n    MAGENTO_ADMIN_LASTNAME=\"Doe\" \\\n    MAGENTO_ADMIN_USERNAME=\"admin\" \\\n    MAGENTO_ADMIN_PASSWORD=\"admin123\" \\\n    MAGENTO_LANGUAGE=\"en_US\" \\\n    MAGENTO_TIMEZONE=\"Europe/Lisbon\" \\\n    MAGENTO_CURRENCY=\"EUR\" \\\n    MAGENTO_ADMIN_USERNAME=\"admin\" \\\n    MAGENTO_ADMIN_USERNAME=\"admin\"\nRUN mkdir -p ~/.composer \\\n && echo \"{ \\\"http-basic\\\": { \\\"repo.magento.com\\\": { \\\"username\\\": \\\"$MAGENTO_PUBLIC_KEY\\\", \\\"password\\\": \\\"$MAGENTO_PRIVATE_KEY\\\" } } }\" > ~/.composer/auth.json \\\n && git clone https://github.com/magento/magento2.git $MAGENTO_ROOT \\\n && cd $MAGENTO_ROOT \\\n && composer install\nVOLUME /magento/app/etc /magento/pub\n#\n#  Nginx Server\n#\nENV NGINX_PORT=\"80\"\nRUN mkdir /tmp/nginx\nEXPOSE 80/tcp\n#\n#  PHP Configuration\n#\nENV PHP_INI=\"/etc/php/php.ini\"\nRUN sed 's,;always_populate_raw_post_data,always_populate_raw_post_data,g' -i $PHP_INI \\\n && sed 's,memory_limit = 128M,memory_limit = 256M,g' -i $PHP_INI\n#  Must be kept until it is fixed\n#  https://github.com/zendframework/zend-stdlib/issues/58\nRUN sed \"s,=> GLOB_BRACE,=> defined('GLOB_BRACE') ? GLOB_BRACE : 0,g\" -i /magento/vendor/zendframework/zend-stdlib/src/Glob.php\nADD start.sh /scripts/start.sh\nADD setup.sh /scripts/setup.sh\nRUN chmod +x /scripts/start.sh /scripts/setup.sh\n#\n#  Scalability\n#\nENV NODES=\"\"\\\"\"\nCMD [\"/scripts/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"ae70cac21ae0358c1731aff5bc3604ef","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   cusspvz/magento.docker\n#   Magento 2.0 over alpine, nginx, php-fpm and mariadb\n#\nFROM alpine:latest\nMAINTAINER José Moreira <jose.moreira@findhit.com>\nENV DOMAIN=\"docker.local\"\nENV REDIRECT_TO_WWW_DOMAIN=\"0\"\n#\n#   Install packages\n#\nRUN echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk add --update curl openssl git supervisor ca-certificates nginx composer@testing php-fpm php-phar php-openssl php-curl php-json php-xml php-zlib php-gd php-ctype php-dom php-mcrypt php-iconv php-intl php-xsl php-zip mysql mysql-client php-pdo_mysql \\\n && rm -fR /var/cache/apk/*\n#\n#   MySQL Server\n#\nENV MYSQL_HOST=\"localhost\"\nENV MYSQL_PORT=\"3306\"\nENV MYSQL_DATABASE=\"magento\"\nENV MYSQL_USERNAME=\"root\"\nENV MYSQL_PASSWORD=\"ThisShouldBeChangableLater\"\nRUN /usr/bin/mysql_install_db \\\n && chown -R mysql:mysql /var/lib/mysql \\\n && /usr/bin/mysqld_safe &; MYSQL_PID=$! ; sleep 20 \\\n && /usr/bin/mysqladmin -u root password $MYSQL_PASSWORD \\\n && kill $MYSQL_PID\nVOLUME /var/lib/mysql\nEXPOSE 3306/tcp\n#\n#   Magento configs\n#\nARG MAGENTO_VERSION=2.0.4\nARG MAGENTO_PUBLIC_KEY=ffc9f467961151f41827c02bc7a9b669\nARG MAGENTO_PRIVATE_KEY=4f64aaa7771b441ef5d72e941c350542\nENV MAGENTO_ROOT=\"/magento\" \\\n    MAGENTO_USER=\"magento\" \\\n    MAGENTO_USER_ID=\"1000\" \\\n    MAGENTO_GROUP=\"magento\" \\\n    MAGENTO_GROUP_ID=\"1000\"\nENV MAGENTO_ADMIN_URI=\"admin\" \\\n    MAGENTO_ADMIN_EMAIL=\"admin@example.org\" \\\n    MAGENTO_ADMIN_FIRSTNAME=\"John\" \\\n    MAGENTO_ADMIN_LASTNAME=\"Doe\" \\\n    MAGENTO_ADMIN_USERNAME=\"admin\" \\\n    MAGENTO_ADMIN_PASSWORD=\"admin123\" \\\n    MAGENTO_LANGUAGE=\"en_US\" \\\n    MAGENTO_TIMEZONE=\"Europe/Lisbon\" \\\n    MAGENTO_CURRENCY=\"EUR\" \\\n    MAGENTO_ADMIN_USERNAME=\"admin\" \\\n    MAGENTO_ADMIN_USERNAME=\"admin\"\nRUN mkdir -p ~/.composer \\\n && echo \"{ \\\"http-basic\\\": { \\\"repo.magento.com\\\": { \\\"username\\\": \\\"$MAGENTO_PUBLIC_KEY\\\", \\\"password\\\": \\\"$MAGENTO_PRIVATE_KEY\\\" } } }\" > ~/.composer/auth.json \\\n && git clone https://github.com/magento/magento2.git $MAGENTO_ROOT \\\n && cd $MAGENTO_ROOT \\\n && composer install\nVOLUME /magento/app/etc /magento/pub\n#\n#   Nginx Server\n#\nENV NGINX_PORT=\"80\"\nRUN mkdir /tmp/nginx\nEXPOSE 80/tcp\n#\n#   PHP Configuration\n#\nENV PHP_INI=\"/etc/php/php.ini\"\nRUN sed 's,;always_populate_raw_post_data,always_populate_raw_post_data,g' -i $PHP_INI \\\n && sed 's,memory_limit = 128M,memory_limit = 256M,g' -i $PHP_INI\n#   Must be kept until it is fixed\n#   https://github.com/zendframework/zend-stdlib/issues/58\nRUN sed \"s,=> GLOB_BRACE,=> defined('GLOB_BRACE') ? GLOB_BRACE : 0,g\" -i /magento/vendor/zendframework/zend-stdlib/src/Glob.php\nADD start.sh /scripts/start.sh\nADD setup.sh /scripts/setup.sh\nRUN chmod +x /scripts/start.sh /scripts/setup.sh\n#\n#   Scalability\n#\nENV NODES=\"\\\"\nCMD [\"/scripts/start.sh\"]\n","originalDockerfileUglifiedHash":"70c1b390922a080d7bcece6a1e0ab460","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/10b09b59de854c4f0f41695a01159b438b30b311.dockerfile"}