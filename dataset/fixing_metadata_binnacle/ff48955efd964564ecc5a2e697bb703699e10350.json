{"seed":1148894408,"processedDockerfileHash":"ee7284c155c6a17fe70b7c05294d37bf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Copyright (c) 2003-2019 Rony Shapiro <ronys@pwsafe.org>.\n#   All rights reserved. Use of the code is allowed under the\n#   Artistic License 2.0 terms, as specified in the LICENSE file\n#   distributed with this code, or available from\n#   http://www.opensource.org/licenses/artistic-license-2.0.php\n#\n#   This Dockerfile written by JP Vossen and generously donated to the project.\n#\n#   Here is how to run it. It works, but is a tad ugly, I assume due to \n#   default GTK themes:\n#   ----\n#   ~/working/docker/passwordsafe$ sudo docker run --net=host \n#   --env=\"DISPLAY\" --volume=\"$HOME/.Xauthority:/root/.Xauthority:rw\" \n#   --volume=\"$HOME/.pwsafe:/root/.pwsafe:rw\" passwordsafe\n#   ----\n#\n#   See: https://hub.docker.com/_/debian and\n#   https://hub.docker.com/_/ubuntu\nFROM ubuntu:18.04\n#   Build with: sudo docker build -t passwordsafe .\n#   --or--      sudo docker build -t passwordsafe:1.08BETA .\n#   Run with: sudo docker run --net=host --env=\"DISPLAY\" --volume=\"$HOME/.Xauthority:/root/.Xauthority:rw\" --volume=\"$HOME/.pwsafe:/root/.pwsafe:rw\" passwordsafe\nLABEL maintainer=\"The Passwordsafe Project <Passwordsafe-linux@lists.sourceforge.net>\"\n#   Install deps for PWSafe (LOTS and LOTS!)\n#   See https://docs.docker.com/develop/develop-images/dockerfile_best-practices#apt-get\nRUN apt-get update \\\n && apt-get install --no-install-recommends libwxgtk3.0-0v5=3.0.4+dfsg-3 libxtst6=2:1.2.3-1 libxerces-c3.2=3.2.0+debian-2 libykpers-1-1=1.18.0-1 libqrencode3=3.4.4-1build1 libcurl4=7.58.0-2ubuntu3.24 locales=2.27-3ubuntu1.6 -qy \\\n && rm -rf /var/lib/apt/lists/*\n#   Set the locale, per http://jaredmarkell.com/docker-and-locales/\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   Avoid: (pwsafe:8): Gtk-WARNING **: *: Attempting to set the permissions of `/root/.local/share', but failed: No such file or directory\nRUN mkdir -p /root/.local/share\n#   This is here to leave everything above UNCHANGED as much as possible\n#   to allow layer caching to work at build time!\nARG deb_file=passwordsafe-ubuntu18-1.08.1-BETA.amd64.deb\nLABEL pwsafe=\"$deb_file\"\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /tmp/$deb_file https://github.com/pwsafe/pwsafe/releases/download/1.08.1BETA/$deb_file\nRUN dpkg -i /tmp/$deb_file \\\n && rm /tmp/$deb_file\nCMD /usr/bin/pwsafe\n#   ----\n#   \n#   A non-cached build that actually has to do the APT installs takes about \n#   5 minutes, most of which is `apt-get` \"Setting up...\".\n#   \n#   Build:\n#   ----\n#\n#   ~/working/docker/passwordsafe$ time sudo docker build -t \n#   passwordsafe:1.08BETA .\n#   Sending build context to Docker daemon  3.584kB\n#   Step 1/13 : FROM ubuntu:18.04\n#     ---> 1d9c17228a9e\n#   Step 2/13 : LABEL \"maintainer\"=\"The Passwordsafe Project \n#   <Passwordsafe-linux@lists.sourceforge.net>\"\n#     ---> Using cache\n#     ---> 7740484d49d6\n#   Step 3/13 : RUN apt-get update     && apt-get install -qy \n#   libwxgtk3.0-0v5 libxtst6 libxerces-c3.2 libykpers-1-1 libqrencode3 \n#   libcurl4 locales     && rm -rf /var/lib/apt/lists/*\n#     ---> Using cache\n#     ---> a27408669b39\n#   Step 4/13 : RUN locale-gen en_US.UTF-8\n#     ---> Using cache\n#     ---> 5a77b0e1353a\n#   Step 5/13 : ENV LANG en_US.UTF-8\n#     ---> Using cache\n#     ---> 2f130971ca1f\n#   Step 6/13 : ENV LANGUAGE en_US:en\n#     ---> Using cache\n#     ---> 5e3b97476bcb\n#   Step 7/13 : ENV LC_ALL en_US.UTF-8\n#     ---> Using cache\n#     ---> 3fab6d434cb1\n#   Step 8/13 : RUN mkdir -p /root/.local/share\n#     ---> Using cache\n#     ---> 853a2a59033b\n#   Step 9/13 : ARG deb_file=passwordsafe-ubuntu18-1.08.1-BETA.amd64.deb\n#     ---> Using cache\n#     ---> b8c13697e68e\n#   Step 10/13 : LABEL \"pwsafe\"=\"$deb_file\"\n#     ---> Using cache\n#     ---> a04a7de3ab67\n#   Step 11/13 : ADD \n#   https://github.com/pwsafe/pwsafe/releases/download/1.08.1BETA/$deb_file \n#     /tmp/$deb_file\n#   Downloading  11.26MB/11.26MB\n#     ---> Using cache\n#     ---> d75d25d248ca\n#   Step 12/13 : RUN dpkg -i /tmp/$deb_file && rm /tmp/$deb_file\n#     ---> Using cache\n#     ---> 5d88cddbe9b4\n#   Step 13/13 : CMD /usr/bin/pwsafe\n#     ---> Using cache\n#     ---> 00b895e642f0\n#   Successfully built 00b895e642f0\n#   Successfully tagged passwordsafe:1.08.1BETA\n#   \n#   real    0m3.823s\n#   user    0m0.120s\n#   sys     0m0.040\n#   ----\n#   \n#   The image is not small because of the large amount of stuff that gets \n#   pulled in to meet the deps:\n#   ----\n#   ~/working/docker/passwordsafe$ sudo docker image list\n#   REPOSITORY       TAG        IMAGE ID         CREATED             SIZE\n#   passwordsafe     1.08BETA   00b895e642f0     2 minutes ago       359MB\n#   passwordsafe     latest     00b895e642f0     2 minutes ago       359MB\n#   <none>           <none>     852d5e907158     29 minutes ago      359MB\n#   <none>           <none>     9d5272a16c46     About an hour ago   359MB\n#   ...\n#   ubuntu           18.04      1d9c17228a9e     7 days ago          86.7MB\n#   ----\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Copyright (c) 2003-2019 Rony Shapiro <ronys@pwsafe.org>.\n#  All rights reserved. Use of the code is allowed under the\n#  Artistic License 2.0 terms, as specified in the LICENSE file\n#  distributed with this code, or available from\n#  http://www.opensource.org/licenses/artistic-license-2.0.php\n#\n#  This Dockerfile written by JP Vossen and generously donated to the project.\n#\n#  Here is how to run it. It works, but is a tad ugly, I assume due to \n#  default GTK themes:\n#  ----\n#  ~/working/docker/passwordsafe$ sudo docker run --net=host \n#  --env=\"DISPLAY\" --volume=\"$HOME/.Xauthority:/root/.Xauthority:rw\" \n#  --volume=\"$HOME/.pwsafe:/root/.pwsafe:rw\" passwordsafe\n#  ----\n#\n#  See: https://hub.docker.com/_/debian and\n#  https://hub.docker.com/_/ubuntu\nFROM ubuntu:18.04\n#  Build with: sudo docker build -t passwordsafe .\n#  --or--      sudo docker build -t passwordsafe:1.08BETA .\n#  Run with: sudo docker run --net=host --env=\"DISPLAY\" --volume=\"$HOME/.Xauthority:/root/.Xauthority:rw\" --volume=\"$HOME/.pwsafe:/root/.pwsafe:rw\" passwordsafe\nLABEL maintainer=\"The Passwordsafe Project <Passwordsafe-linux@lists.sourceforge.net>\"\n#  Install deps for PWSafe (LOTS and LOTS!)\n#  See https://docs.docker.com/develop/develop-images/dockerfile_best-practices#apt-get\nRUN apt-get update \\\n && apt-get install libwxgtk3.0-0v5 libxtst6 libxerces-c3.2 libykpers-1-1 libqrencode3 libcurl4 locales -qy \\\n && rm -rf /var/lib/apt/lists/*\n#  Set the locale, per http://jaredmarkell.com/docker-and-locales/\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#  Avoid: (pwsafe:8): Gtk-WARNING **: *: Attempting to set the permissions of `/root/.local/share', but failed: No such file or directory\nRUN mkdir -p /root/.local/share\n#  This is here to leave everything above UNCHANGED as much as possible\n#  to allow layer caching to work at build time!\nARG deb_file=passwordsafe-ubuntu18-1.08.1-BETA.amd64.deb\nLABEL pwsafe=\"$deb_file\"\nADD https://github.com/pwsafe/pwsafe/releases/download/1.08.1BETA/$deb_file /tmp/$deb_file\nRUN dpkg -i /tmp/$deb_file \\\n && rm /tmp/$deb_file\nCMD /usr/bin/pwsafe\n#  ----\n#  \n#  A non-cached build that actually has to do the APT installs takes about \n#  5 minutes, most of which is `apt-get` \"Setting up...\".\n#  \n#  Build:\n#  ----\n#\n#  ~/working/docker/passwordsafe$ time sudo docker build -t \n#  passwordsafe:1.08BETA .\n#  Sending build context to Docker daemon  3.584kB\n#  Step 1/13 : FROM ubuntu:18.04\n#    ---> 1d9c17228a9e\n#  Step 2/13 : LABEL \"maintainer\"=\"The Passwordsafe Project \n#  <Passwordsafe-linux@lists.sourceforge.net>\"\n#    ---> Using cache\n#    ---> 7740484d49d6\n#  Step 3/13 : RUN apt-get update     && apt-get install -qy \n#  libwxgtk3.0-0v5 libxtst6 libxerces-c3.2 libykpers-1-1 libqrencode3 \n#  libcurl4 locales     && rm -rf /var/lib/apt/lists/*\n#    ---> Using cache\n#    ---> a27408669b39\n#  Step 4/13 : RUN locale-gen en_US.UTF-8\n#    ---> Using cache\n#    ---> 5a77b0e1353a\n#  Step 5/13 : ENV LANG en_US.UTF-8\n#    ---> Using cache\n#    ---> 2f130971ca1f\n#  Step 6/13 : ENV LANGUAGE en_US:en\n#    ---> Using cache\n#    ---> 5e3b97476bcb\n#  Step 7/13 : ENV LC_ALL en_US.UTF-8\n#    ---> Using cache\n#    ---> 3fab6d434cb1\n#  Step 8/13 : RUN mkdir -p /root/.local/share\n#    ---> Using cache\n#    ---> 853a2a59033b\n#  Step 9/13 : ARG deb_file=passwordsafe-ubuntu18-1.08.1-BETA.amd64.deb\n#    ---> Using cache\n#    ---> b8c13697e68e\n#  Step 10/13 : LABEL \"pwsafe\"=\"$deb_file\"\n#    ---> Using cache\n#    ---> a04a7de3ab67\n#  Step 11/13 : ADD \n#  https://github.com/pwsafe/pwsafe/releases/download/1.08.1BETA/$deb_file \n#    /tmp/$deb_file\n#  Downloading  11.26MB/11.26MB\n#    ---> Using cache\n#    ---> d75d25d248ca\n#  Step 12/13 : RUN dpkg -i /tmp/$deb_file && rm /tmp/$deb_file\n#    ---> Using cache\n#    ---> 5d88cddbe9b4\n#  Step 13/13 : CMD /usr/bin/pwsafe\n#    ---> Using cache\n#    ---> 00b895e642f0\n#  Successfully built 00b895e642f0\n#  Successfully tagged passwordsafe:1.08.1BETA\n#  \n#  real    0m3.823s\n#  user    0m0.120s\n#  sys     0m0.040\n#  ----\n#  \n#  The image is not small because of the large amount of stuff that gets \n#  pulled in to meet the deps:\n#  ----\n#  ~/working/docker/passwordsafe$ sudo docker image list\n#  REPOSITORY       TAG        IMAGE ID         CREATED             SIZE\n#  passwordsafe     1.08BETA   00b895e642f0     2 minutes ago       359MB\n#  passwordsafe     latest     00b895e642f0     2 minutes ago       359MB\n#  <none>           <none>     852d5e907158     29 minutes ago      359MB\n#  <none>           <none>     9d5272a16c46     About an hour ago   359MB\n#  ...\n#  ubuntu           18.04      1d9c17228a9e     7 days ago          86.7MB\n#  ----\n","injectedSmells":[],"originalDockerfileHash":"743a49d3ff3333de11dee8da447abcc8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Copyright (c) 2003-2019 Rony Shapiro <ronys@pwsafe.org>.\n#   All rights reserved. Use of the code is allowed under the\n#   Artistic License 2.0 terms, as specified in the LICENSE file\n#   distributed with this code, or available from\n#   http://www.opensource.org/licenses/artistic-license-2.0.php\n#\n#   This Dockerfile written by JP Vossen and generously donated to the project.\n#\n#   Here is how to run it. It works, but is a tad ugly, I assume due to \n#   default GTK themes:\n#   ----\n#   ~/working/docker/passwordsafe$ sudo docker run --net=host \n#   --env=\"DISPLAY\" --volume=\"$HOME/.Xauthority:/root/.Xauthority:rw\" \n#   --volume=\"$HOME/.pwsafe:/root/.pwsafe:rw\" passwordsafe\n#   ----\n#\n#   See: https://hub.docker.com/_/debian and\n#   https://hub.docker.com/_/ubuntu\nFROM ubuntu:18.04\n#   Build with: sudo docker build -t passwordsafe .\n#   --or--      sudo docker build -t passwordsafe:1.08BETA .\n#   Run with: sudo docker run --net=host --env=\"DISPLAY\" --volume=\"$HOME/.Xauthority:/root/.Xauthority:rw\" --volume=\"$HOME/.pwsafe:/root/.pwsafe:rw\" passwordsafe\nLABEL maintainer=\"The Passwordsafe Project <Passwordsafe-linux@lists.sourceforge.net>\"\n#   Install deps for PWSafe (LOTS and LOTS!)\n#   See https://docs.docker.com/develop/develop-images/dockerfile_best-practices#apt-get\nRUN apt-get update \\\n && apt-get install libwxgtk3.0-0v5 libxtst6 libxerces-c3.2 libykpers-1-1 libqrencode3 libcurl4 locales -qy \\\n && rm -rf /var/lib/apt/lists/*\n#   Set the locale, per http://jaredmarkell.com/docker-and-locales/\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   Avoid: (pwsafe:8): Gtk-WARNING **: *: Attempting to set the permissions of `/root/.local/share', but failed: No such file or directory\nRUN mkdir -p /root/.local/share\n#   This is here to leave everything above UNCHANGED as much as possible\n#   to allow layer caching to work at build time!\nARG deb_file=passwordsafe-ubuntu18-1.08.1-BETA.amd64.deb\nLABEL pwsafe=\"$deb_file\"\nADD https://github.com/pwsafe/pwsafe/releases/download/1.08.1BETA/$deb_file /tmp/$deb_file\nRUN dpkg -i /tmp/$deb_file \\\n && rm /tmp/$deb_file\nCMD /usr/bin/pwsafe\n#   ----\n#   \n#   A non-cached build that actually has to do the APT installs takes about \n#   5 minutes, most of which is `apt-get` \"Setting up...\".\n#   \n#   Build:\n#   ----\n#\n#   ~/working/docker/passwordsafe$ time sudo docker build -t \n#   passwordsafe:1.08BETA .\n#   Sending build context to Docker daemon  3.584kB\n#   Step 1/13 : FROM ubuntu:18.04\n#     ---> 1d9c17228a9e\n#   Step 2/13 : LABEL \"maintainer\"=\"The Passwordsafe Project \n#   <Passwordsafe-linux@lists.sourceforge.net>\"\n#     ---> Using cache\n#     ---> 7740484d49d6\n#   Step 3/13 : RUN apt-get update     && apt-get install -qy \n#   libwxgtk3.0-0v5 libxtst6 libxerces-c3.2 libykpers-1-1 libqrencode3 \n#   libcurl4 locales     && rm -rf /var/lib/apt/lists/*\n#     ---> Using cache\n#     ---> a27408669b39\n#   Step 4/13 : RUN locale-gen en_US.UTF-8\n#     ---> Using cache\n#     ---> 5a77b0e1353a\n#   Step 5/13 : ENV LANG en_US.UTF-8\n#     ---> Using cache\n#     ---> 2f130971ca1f\n#   Step 6/13 : ENV LANGUAGE en_US:en\n#     ---> Using cache\n#     ---> 5e3b97476bcb\n#   Step 7/13 : ENV LC_ALL en_US.UTF-8\n#     ---> Using cache\n#     ---> 3fab6d434cb1\n#   Step 8/13 : RUN mkdir -p /root/.local/share\n#     ---> Using cache\n#     ---> 853a2a59033b\n#   Step 9/13 : ARG deb_file=passwordsafe-ubuntu18-1.08.1-BETA.amd64.deb\n#     ---> Using cache\n#     ---> b8c13697e68e\n#   Step 10/13 : LABEL \"pwsafe\"=\"$deb_file\"\n#     ---> Using cache\n#     ---> a04a7de3ab67\n#   Step 11/13 : ADD \n#   https://github.com/pwsafe/pwsafe/releases/download/1.08.1BETA/$deb_file \n#     /tmp/$deb_file\n#   Downloading  11.26MB/11.26MB\n#     ---> Using cache\n#     ---> d75d25d248ca\n#   Step 12/13 : RUN dpkg -i /tmp/$deb_file && rm /tmp/$deb_file\n#     ---> Using cache\n#     ---> 5d88cddbe9b4\n#   Step 13/13 : CMD /usr/bin/pwsafe\n#     ---> Using cache\n#     ---> 00b895e642f0\n#   Successfully built 00b895e642f0\n#   Successfully tagged passwordsafe:1.08.1BETA\n#   \n#   real    0m3.823s\n#   user    0m0.120s\n#   sys     0m0.040\n#   ----\n#   \n#   The image is not small because of the large amount of stuff that gets \n#   pulled in to meet the deps:\n#   ----\n#   ~/working/docker/passwordsafe$ sudo docker image list\n#   REPOSITORY       TAG        IMAGE ID         CREATED             SIZE\n#   passwordsafe     1.08BETA   00b895e642f0     2 minutes ago       359MB\n#   passwordsafe     latest     00b895e642f0     2 minutes ago       359MB\n#   <none>           <none>     852d5e907158     29 minutes ago      359MB\n#   <none>           <none>     9d5272a16c46     About an hour ago   359MB\n#   ...\n#   ubuntu           18.04      1d9c17228a9e     7 days ago          86.7MB\n#   ----\n","originalDockerfileUglifiedHash":"1724a9ef22c296fb8baca86c55b692b2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ff48955efd964564ecc5a2e697bb703699e10350.dockerfile"}