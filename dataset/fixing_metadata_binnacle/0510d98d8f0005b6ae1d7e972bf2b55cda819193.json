{"seed":2405856254,"processedDockerfileHash":"d7d16854e5dddb081a934614a44e1540","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2016 - 2017 Huawei Technologies Co., Ltd. All rights reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#   \n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM docker.io/phusion/baseimage:0.9.21\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c \"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils php-curl $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nARG php_version\nENV PHP_VERSION=\"${php_version}\"\nRUN echo \"PHP version found: $PHP_VERSION\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\"\nCOPY php-${PHP_VERSION}.sha256 /tmp/\nRUN set -xe ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" ; PHP_SHA256=$( cat /tmp/php-$PHP_VERSION.sha256 ;) ; if [ -n \"$PHP_SHA256\" ] ; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - ; fi ; apt-get purge -y --auto-remove $fetchDeps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\nUSER root\nRUN apt-get update \\\n && apt-get install --no-install-recommends git php-mongodb -y\nRUN php -r \"copy('https://install.phpcomposer.com/installer', 'composer-setup.php');\" ; php composer-setup.php ; php -r \"unlink('composer-setup.php');\" ; mv composer.phar /usr/local/bin/composer ; apt-get install --no-install-recommends unzip -y\nENTRYPOINT [\"docker-php-entrypoint\"]\n#  #<autogenerated>##\nCMD [\"php\", \"-a\"]\n#  #</autogenerated>##\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2016 - 2017 Huawei Technologies Co., Ltd. All rights reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#  \n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM docker.io/phusion/baseimage:0.9.21\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c \"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils php-curl $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nARG php_version\nENV PHP_VERSION=\"${php_version}\"\nRUN echo \"PHP version found: $PHP_VERSION\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\"\nCOPY php-${PHP_VERSION}.sha256 /tmp/\nRUN set -xe ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" ; PHP_SHA256=$( cat /tmp/php-$PHP_VERSION.sha256 ;) ; if [ -n \"$PHP_SHA256\" ] ; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - ; fi ; apt-get purge -y --auto-remove $fetchDeps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\nUSER root\nRUN apt-get update \\\n && apt-get install git php-mongodb -y\nRUN php -r \"copy('https://install.phpcomposer.com/installer', 'composer-setup.php');\" ; php composer-setup.php ; php -r \"unlink('composer-setup.php');\" ; mv composer.phar /usr/local/bin/composer ; apt-get install --no-install-recommends unzip -y\nENTRYPOINT [\"docker-php-entrypoint\"]\n# #<autogenerated>##\nCMD [\"php\", \"-a\"]\n# #</autogenerated>##\n","injectedSmells":[],"originalDockerfileHash":"d28cfc21b0bc0366493526188f6673fe","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2016 - 2017 Huawei Technologies Co., Ltd. All rights reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#   \n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM docker.io/phusion/baseimage:0.9.21\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c \"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils php-curl $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nARG php_version\nENV PHP_VERSION=\"${php_version}\"\nRUN echo \"PHP version found: $PHP_VERSION\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\"\nCOPY php-${PHP_VERSION}.sha256 /tmp/\nRUN set -xe ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" ; PHP_SHA256=$( cat /tmp/php-$PHP_VERSION.sha256 ;) ; if [ -n \"$PHP_SHA256\" ] ; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c - ; fi ; apt-get purge -y --auto-remove $fetchDeps\nCOPY docker-php-source /usr/local/bin/\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib $PHP_EXTRA_CONFIGURE_ARGS \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && docker-php-source delete \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\nUSER root\nRUN apt-get update \\\n && apt-get install git php-mongodb -y\nRUN php -r \"copy('https://install.phpcomposer.com/installer', 'composer-setup.php');\" ; php composer-setup.php ; php -r \"unlink('composer-setup.php');\" ; mv composer.phar /usr/local/bin/composer ; apt-get install --no-install-recommends unzip -y\nENTRYPOINT [\"docker-php-entrypoint\"]\n#  #<autogenerated>##\nCMD [\"php\", \"-a\"]\n#  #</autogenerated>##\n","originalDockerfileUglifiedHash":"581f6e8791504630977ec022fa461d3a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0510d98d8f0005b6ae1d7e972bf2b55cda819193.dockerfile"}