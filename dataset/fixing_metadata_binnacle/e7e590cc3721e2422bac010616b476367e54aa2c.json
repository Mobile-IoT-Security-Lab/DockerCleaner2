{"seed":659581996,"processedDockerfileHash":"b8c2f9dfb220d02130749875c697ba20","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM opensuse/leap:42.3\n#   Install the base toolchain we need to build anything (clang, cmake, make and the like)\n#   this does not include libraries that we need to compile different projects, we'd like\n#   them in a different layer.\nRUN zypper -n install cmake gcc-c++ gdb hostname lldb-devel llvm-clang llvm-devel python python-xml sudo wget which \\\n && ln -s /usr/bin/clang++ /usr/bin/clang++-3.5 \\\n && zypper clean -a\n#   Install tools used by the VSO build automation.\nRUN zypper -n install git npm nodejs tar zip \\\n && zypper clean -a \\\n && npm install azure-cli@0.10.20 -g --unsafe-perm=true \\\n && npm cache clean -f\n#   Build and install liblldb development files\nRUN zypper -n install doxygen libedit-devel libxml2-devel python-argparse python-devel readline-devel swig \\\n && wget http://releases.llvm.org/3.9.1/cfe-3.9.1.src.tar.xz \\\n && wget http://releases.llvm.org/3.9.1/llvm-3.9.1.src.tar.xz \\\n && wget http://releases.llvm.org/3.9.1/lldb-3.9.1.src.tar.xz \\\n && tar -xf llvm-3.9.1.src.tar.xz \\\n && mkdir llvm-3.9.1.src/tools/clang \\\n && mkdir llvm-3.9.1.src/tools/lldb \\\n && tar -xf cfe-3.9.1.src.tar.xz --strip 1 -C llvm-3.9.1.src/tools/clang \\\n && tar -xf lldb-3.9.1.src.tar.xz --strip 1 -C llvm-3.9.1.src/tools/lldb \\\n && rm cfe-3.9.1.src.tar.xz \\\n && rm lldb-3.9.1.src.tar.xz \\\n && rm llvm-3.9.1.src.tar.xz \\\n && mkdir llvmbuild \\\n && cd llvmbuild \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DLLDB_DISABLE_CURSES=1 -DLLVM_LIBDIR_SUFFIX=64 -DLLVM_ENABLE_EH=1 -DLLVM_ENABLE_RTTI=1 -DLLVM_BUILD_DOCS=0 ../llvm-3.9.1.src \\\n && make -j $(($( getconf _NPROCESSORS_ONLN ;) + 1)) \\\n && make install \\\n && cd .. \\\n && rm -r llvmbuild \\\n && rm -r llvm-3.9.1.src \\\n && zypper -n rm doxygen libedit-devel libxml2-devel ncurses-devel python-argparse python-devel readline-devel swig \\\n && zypper clean -a\n#   Dependencies of CoreCLR and CoreFX.\nRUN zypper -n install --force-resolution glibc-locale krb5-devel libcurl-devel libgdiplus0 libicu-devel libnuma-devel libunwind-devel libuuid-devel lttng-ust-devel libopenssl-devel uuid-devel \\\n && zypper clean -a \\\n && /sbin/ldconfig\n#   Until OpenSuse.42.3 official packages are available, we have to restore the ubuntu ones instead.\nENV __PUBLISH_RID=\"ubuntu.14.04-x64\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM opensuse/leap:42.3\n#  Install the base toolchain we need to build anything (clang, cmake, make and the like)\n#  this does not include libraries that we need to compile different projects, we'd like\n#  them in a different layer.\nRUN zypper -n install cmake gcc-c++ gdb hostname lldb-devel llvm-clang llvm-devel python python-xml sudo wget which \\\n && ln -s /usr/bin/clang++ /usr/bin/clang++-3.5 \\\n && zypper clean -a\n#  Install tools used by the VSO build automation.\nRUN zypper -n install git npm nodejs tar zip \\\n && zypper clean -a \\\n && npm install azure-cli -g --unsafe-perm=true \\\n && npm cache clean -f\n#  Build and install liblldb development files\nRUN zypper -n install doxygen libedit-devel libxml2-devel python-argparse python-devel readline-devel swig \\\n && wget http://releases.llvm.org/3.9.1/cfe-3.9.1.src.tar.xz \\\n && wget http://releases.llvm.org/3.9.1/llvm-3.9.1.src.tar.xz \\\n && wget http://releases.llvm.org/3.9.1/lldb-3.9.1.src.tar.xz \\\n && tar -xf llvm-3.9.1.src.tar.xz \\\n && mkdir llvm-3.9.1.src/tools/clang \\\n && mkdir llvm-3.9.1.src/tools/lldb \\\n && tar -xf cfe-3.9.1.src.tar.xz --strip 1 -C llvm-3.9.1.src/tools/clang \\\n && tar -xf lldb-3.9.1.src.tar.xz --strip 1 -C llvm-3.9.1.src/tools/lldb \\\n && rm cfe-3.9.1.src.tar.xz \\\n && rm lldb-3.9.1.src.tar.xz \\\n && rm llvm-3.9.1.src.tar.xz \\\n && mkdir llvmbuild \\\n && cd llvmbuild \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DLLDB_DISABLE_CURSES=1 -DLLVM_LIBDIR_SUFFIX=64 -DLLVM_ENABLE_EH=1 -DLLVM_ENABLE_RTTI=1 -DLLVM_BUILD_DOCS=0 ../llvm-3.9.1.src \\\n && make -j $(($( getconf _NPROCESSORS_ONLN ;) + 1)) \\\n && make install \\\n && cd .. \\\n && rm -r llvmbuild \\\n && rm -r llvm-3.9.1.src \\\n && zypper -n rm doxygen libedit-devel libxml2-devel ncurses-devel python-argparse python-devel readline-devel swig \\\n && zypper clean -a\n#  Dependencies of CoreCLR and CoreFX.\nRUN zypper -n install --force-resolution glibc-locale krb5-devel libcurl-devel libgdiplus0 libicu-devel libnuma-devel libunwind-devel libuuid-devel lttng-ust-devel libopenssl-devel uuid-devel \\\n && zypper clean -a \\\n && /sbin/ldconfig\n#  Until OpenSuse.42.3 official packages are available, we have to restore the ubuntu ones instead.\nENV __PUBLISH_RID=\"ubuntu.14.04-x64\"\n","injectedSmells":[],"originalDockerfileHash":"ca2921eea60bc78a8ac841a927506c2c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM opensuse/leap:42.3\n#   Install the base toolchain we need to build anything (clang, cmake, make and the like)\n#   this does not include libraries that we need to compile different projects, we'd like\n#   them in a different layer.\nRUN zypper -n install cmake gcc-c++ gdb hostname lldb-devel llvm-clang llvm-devel python python-xml sudo wget which \\\n && ln -s /usr/bin/clang++ /usr/bin/clang++-3.5 \\\n && zypper clean -a\n#   Install tools used by the VSO build automation.\nRUN zypper -n install git npm nodejs tar zip \\\n && zypper clean -a \\\n && npm install azure-cli -g --unsafe-perm=true \\\n && npm cache clean -f\n#   Build and install liblldb development files\nRUN zypper -n install doxygen libedit-devel libxml2-devel python-argparse python-devel readline-devel swig \\\n && wget http://releases.llvm.org/3.9.1/cfe-3.9.1.src.tar.xz \\\n && wget http://releases.llvm.org/3.9.1/llvm-3.9.1.src.tar.xz \\\n && wget http://releases.llvm.org/3.9.1/lldb-3.9.1.src.tar.xz \\\n && tar -xf llvm-3.9.1.src.tar.xz \\\n && mkdir llvm-3.9.1.src/tools/clang \\\n && mkdir llvm-3.9.1.src/tools/lldb \\\n && tar -xf cfe-3.9.1.src.tar.xz --strip 1 -C llvm-3.9.1.src/tools/clang \\\n && tar -xf lldb-3.9.1.src.tar.xz --strip 1 -C llvm-3.9.1.src/tools/lldb \\\n && rm cfe-3.9.1.src.tar.xz \\\n && rm lldb-3.9.1.src.tar.xz \\\n && rm llvm-3.9.1.src.tar.xz \\\n && mkdir llvmbuild \\\n && cd llvmbuild \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DLLDB_DISABLE_CURSES=1 -DLLVM_LIBDIR_SUFFIX=64 -DLLVM_ENABLE_EH=1 -DLLVM_ENABLE_RTTI=1 -DLLVM_BUILD_DOCS=0 ../llvm-3.9.1.src \\\n && make -j $(($( getconf _NPROCESSORS_ONLN ;) + 1)) \\\n && make install \\\n && cd .. \\\n && rm -r llvmbuild \\\n && rm -r llvm-3.9.1.src \\\n && zypper -n rm doxygen libedit-devel libxml2-devel ncurses-devel python-argparse python-devel readline-devel swig \\\n && zypper clean -a\n#   Dependencies of CoreCLR and CoreFX.\nRUN zypper -n install --force-resolution glibc-locale krb5-devel libcurl-devel libgdiplus0 libicu-devel libnuma-devel libunwind-devel libuuid-devel lttng-ust-devel libopenssl-devel uuid-devel \\\n && zypper clean -a \\\n && /sbin/ldconfig\n#   Until OpenSuse.42.3 official packages are available, we have to restore the ubuntu ones instead.\nENV __PUBLISH_RID=\"ubuntu.14.04-x64\"\n","originalDockerfileUglifiedHash":"9d03b3a2d1c25449c4447831fc371718","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e7e590cc3721e2422bac010616b476367e54aa2c.dockerfile"}