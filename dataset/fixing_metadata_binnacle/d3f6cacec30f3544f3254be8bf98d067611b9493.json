{"seed":816386600,"processedDockerfileHash":"369722fc2c92f625ab5a42ba7f8318ae","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"ARG IMAGE=debian:stretch-slim\nFROM $IMAGE\nLABEL maintainer=\"NGINX Docker Maintainers <docker-maint@nginx.com>\"\nENV NGINX_VERSION=\"1.16.0\"\nENV NJS_VERSION=\"0.3.2\"\nENV PKG_RELEASE=\"1~stretch\"\nRUN set -x \\\n && addgroup --system --gid 101 nginx \\\n && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx \\\n && apt-get update \\\n && apt-get install --no-install-recommends gnupg1=1.4.23-1.1build2 apt-transport-https=2.6.0 ca-certificates=20230311 --no-install-suggests -y \\\n && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 ; found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $NGINX_GPGKEY\" >&2 \\\n && exit 1 ; apt-get remove --purge --auto-remove -y gnupg1 \\\n && rm -rf /var/lib/apt/lists/* \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && nginxPackages=\" nginx=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-perl=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-${PKG_RELEASE} \" \\\n && case \"$dpkgArch\" in (amd64|i386) echo \"deb https://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && apt-get update ;;(*) echo \"deb-src https://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chmod 777 \"$tempDir\" \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get build-dep -y $nginxPackages \\\n && (cd \"$tempDir\" \\\n && DEB_BUILD_OPTIONS=\"nocheck parallel=$( nproc ;)\" apt-get source --compile $nginxPackages ) \\\n && apt-mark showmanual | xargs apt-mark auto > /dev/null \\\n && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; } \\\n && ls -lAFh \"$tempDir\" \\\n && (cd \"$tempDir\" \\\n && dpkg-scanpackages . > Packages) \\\n && grep '^Package: ' \"$tempDir/Packages\" \\\n && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \\\n && apt-get -o Acquire::GzipIndexes=false update ;; esac \\\n && apt-get install --no-install-recommends gettext-base=0.21-11 $nginxPackages --no-install-suggests -y \\\n && apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \\\n && if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove \\\n && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#   implement changes required to run NGINX as an unprivileged user\nRUN sed -i -e '/listen/!b' -e '/80;/!b' -e 's/80;/8080;/' /etc/nginx/conf.d/default.conf \\\n && sed -i -e '/user/!b' -e '/nginx/!b' -e '/nginx/d' /etc/nginx/nginx.conf \\\n && sed -i 's!/var/run/nginx.pid!/tmp/nginx.pid!g' /etc/nginx/nginx.conf \\\n && sed -i \"/^http {/a \\ proxy_temp_path /tmp/proxy_temp;\\n client_body_temp_path /tmp/client_temp;\\n fastcgi_temp_path /tmp/fastcgi_temp;\\n uwsgi_temp_path /tmp/uwsgi_temp;\\n scgi_temp_path /tmp/scgi_temp;\\n\" /etc/nginx/nginx.conf\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 8080/tcp\nSTOPSIGNAL SIGTERM\nUSER 101\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG IMAGE=debian:stretch-slim\nFROM $IMAGE\nLABEL maintainer=\"NGINX Docker Maintainers <docker-maint@nginx.com>\"\nENV NGINX_VERSION=\"1.16.0\"\nENV NJS_VERSION=\"0.3.2\"\nENV PKG_RELEASE=\"1~stretch\"\nRUN set -x \\\n && addgroup --system --gid 101 nginx \\\n && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx \\\n && apt-get update \\\n && apt-get install --no-install-recommends gnupg1 apt-transport-https ca-certificates --no-install-suggests -y \\\n && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 ; found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $NGINX_GPGKEY\" >&2 \\\n && exit 1 ; apt-get remove --purge --auto-remove -y gnupg1 \\\n && rm -rf /var/lib/apt/lists/* \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && nginxPackages=\" nginx=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-perl=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-${PKG_RELEASE} \" \\\n && case \"$dpkgArch\" in (amd64|i386) echo \"deb https://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && apt-get update ;;(*) echo \"deb-src https://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chmod 777 \"$tempDir\" \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get build-dep -y $nginxPackages \\\n && (cd \"$tempDir\" \\\n && DEB_BUILD_OPTIONS=\"nocheck parallel=$( nproc ;)\" apt-get source --compile $nginxPackages ) \\\n && apt-mark showmanual | xargs apt-mark auto > /dev/null \\\n && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; } \\\n && ls -lAFh \"$tempDir\" \\\n && (cd \"$tempDir\" \\\n && dpkg-scanpackages . > Packages) \\\n && grep '^Package: ' \"$tempDir/Packages\" \\\n && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \\\n && apt-get -o Acquire::GzipIndexes=false update ;; esac \\\n && apt-get install --no-install-recommends gettext-base $nginxPackages --no-install-suggests -y \\\n && apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \\\n && if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove \\\n && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#  implement changes required to run NGINX as an unprivileged user\nRUN sed -i -e '/listen/!b' -e '/80;/!b' -e 's/80;/8080;/' /etc/nginx/conf.d/default.conf \\\n && sed -i -e '/user/!b' -e '/nginx/!b' -e '/nginx/d' /etc/nginx/nginx.conf \\\n && sed -i 's!/var/run/nginx.pid!/tmp/nginx.pid!g' /etc/nginx/nginx.conf \\\n && sed -i \"/^http {/a \\ proxy_temp_path /tmp/proxy_temp;\\n client_body_temp_path /tmp/client_temp;\\n fastcgi_temp_path /tmp/fastcgi_temp;\\n uwsgi_temp_path /tmp/uwsgi_temp;\\n scgi_temp_path /tmp/scgi_temp;\\n\" /etc/nginx/nginx.conf\n#  forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 8080/tcp\nSTOPSIGNAL SIGTERM\nUSER 101\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"d084ad16d4878e30ff9652c630a91228","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG IMAGE=debian:stretch-slim\nFROM $IMAGE\nLABEL maintainer=\"NGINX Docker Maintainers <docker-maint@nginx.com>\"\nENV NGINX_VERSION=\"1.16.0\"\nENV NJS_VERSION=\"0.3.2\"\nENV PKG_RELEASE=\"1~stretch\"\nRUN set -x \\\n && addgroup --system --gid 101 nginx \\\n && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx \\\n && apt-get update \\\n && apt-get install --no-install-recommends gnupg1 apt-transport-https ca-certificates --no-install-suggests -y \\\n && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 ; found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $NGINX_GPGKEY from $server\" ;apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $NGINX_GPGKEY\" >&2 \\\n && exit 1 ; apt-get remove --purge --auto-remove -y gnupg1 \\\n && rm -rf /var/lib/apt/lists/* \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && nginxPackages=\" nginx=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-perl=${NGINX_VERSION}-${PKG_RELEASE} nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-${PKG_RELEASE} \" \\\n && case \"$dpkgArch\" in (amd64|i386) echo \"deb https://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && apt-get update ;;(*) echo \"deb-src https://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list.d/nginx.list \\\n && tempDir=\"$( mktemp -d ;)\" \\\n && chmod 777 \"$tempDir\" \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get build-dep -y $nginxPackages \\\n && (cd \"$tempDir\" \\\n && DEB_BUILD_OPTIONS=\"nocheck parallel=$( nproc ;)\" apt-get source --compile $nginxPackages ) \\\n && apt-mark showmanual | xargs apt-mark auto > /dev/null \\\n && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; } \\\n && ls -lAFh \"$tempDir\" \\\n && (cd \"$tempDir\" \\\n && dpkg-scanpackages . > Packages) \\\n && grep '^Package: ' \"$tempDir/Packages\" \\\n && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list \\\n && apt-get -o Acquire::GzipIndexes=false update ;; esac \\\n && apt-get install --no-install-recommends gettext-base $nginxPackages --no-install-suggests -y \\\n && apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \\\n && if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove \\\n && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#   implement changes required to run NGINX as an unprivileged user\nRUN sed -i -e '/listen/!b' -e '/80;/!b' -e 's/80;/8080;/' /etc/nginx/conf.d/default.conf \\\n && sed -i -e '/user/!b' -e '/nginx/!b' -e '/nginx/d' /etc/nginx/nginx.conf \\\n && sed -i 's!/var/run/nginx.pid!/tmp/nginx.pid!g' /etc/nginx/nginx.conf \\\n && sed -i \"/^http {/a \\ proxy_temp_path /tmp/proxy_temp;\\n client_body_temp_path /tmp/client_temp;\\n fastcgi_temp_path /tmp/fastcgi_temp;\\n uwsgi_temp_path /tmp/uwsgi_temp;\\n scgi_temp_path /tmp/scgi_temp;\\n\" /etc/nginx/nginx.conf\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 8080/tcp\nSTOPSIGNAL SIGTERM\nUSER 101\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"95631a7707292f6365c4d3b0af5502b0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d3f6cacec30f3544f3254be8bf98d067611b9493.dockerfile"}