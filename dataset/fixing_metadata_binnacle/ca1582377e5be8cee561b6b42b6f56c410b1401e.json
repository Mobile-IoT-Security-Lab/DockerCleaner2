{"seed":3172875957,"processedDockerfileHash":"8589e6655ffeca7cef999661a0395909","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\nARG BASE_IMAGE=ubuntu:18.04@sha256:de774a3145f7ca4f0bd144c7d4ffb2931e06634f11529653b23eba85aef8e378\nFROM $BASE_IMAGE\nARG TF_PACKAGE=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.7.0-cp36-cp36m-linux_x86_64.whl\nARG TF_PACKAGE_PY_27=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.7.0-cp27-none-linux_x86_64.whl\nARG TF_SERVING_VERSION=0.0.0\nARG TFMA_VERSION\nARG TFDV_VERSION\nARG PIPELINE_SDK_PACKAGE=https://storage.googleapis.com/ml-pipeline/release/0.1.8/kfp.tar.gz\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/$NB_USER\"\nENV NB_PREFIX=\"/\"\n#   We prefer to have a global conda install\n#   to minimize the amount of content in $HOME\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\n#   Export args as environment variables.\n#   This is solely to make them available to install.sh\nENV TF_PACKAGE=\"$TF_PACKAGE\"\nENV TF_PACKAGE_27=\"$TF_PACKAGE_PY_27\"\nENV TF_SERVING_VERSION=\"$TF_PACKAGE_PY_27\"\nENV TFMA_VERSION=\"$TFMA_VERSION\"\nENV TFDV_VERSION=\"$TFDV_VERSION\"\nENV PIPELINE_SDK_PACKAGE=\"$PIPELINE_SDK_PACKAGE\"\n#   Use bash instead of sh\nSHELL [\"/bin/bash\", \"-c\"]\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=2.6.0 build-essential=12.9ubuntu3 bzip2=1.0.8-5build1 ca-certificates=20230311 curl=7.88.1-7ubuntu1 g++=4:12.2.0-3ubuntu1 git=1:2.39.2-1ubuntu1 gnupg=2.2.40-1ubuntu2 graphviz=2.42.2-7build3 locales=2.37-0ubuntu2 lsb-release=12.0-1ubuntu1 openssh-client=1:9.0p1-1ubuntu8 sudo=1.9.13p1-1ubuntu2 unzip=6.0-27ubuntu1 vim=2:9.0.1000-4ubuntu2 wget=1.21.3-1ubuntu1 zip=3.0-13 -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV DOCKER_CREDENTIAL_GCR_VERSION=\"1.4.3\"\nRUN curl -LO https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${DOCKER_CREDENTIAL_GCR_VERSION}/docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz \\\n && tar -zxvf docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz \\\n && mv docker-credential-gcr /usr/local/bin/docker-credential-gcr \\\n && rm docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz \\\n && chmod +x /usr/local/bin/docker-credential-gcr\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Create jovyan user with UID=1000 and in the 'users' group\n#   but allow for non-initial launches of the notebook to have\n#   $HOME provided by the contents of a PV\nRUN useradd -M -s /bin/bash -N -u $NB_UID $NB_USER \\\n && chown -R ${NB_USER}:users /usr/local/bin \\\n && mkdir -p $HOME\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" > /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-cloud-sdk kubectl -y\n#   Install Tini - used as entrypoint for container\nRUN cd /tmp \\\n && wget --quiet https://github.com/krallin/tini/releases/download/v0.18.0/tini \\\n && echo \"12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   Install conda as jovyan user and check the md5 sum provided on the download site\n#   After Miniconda v4.5.4 the default Python version is no longer 3.6, but TensorFlow\n#   still doesn't support Python 3.7. If we still like to upgrade Miniconda we need\n#   to add the line \"conda install python==3.6\" to RUN command below\nENV MINICONDA_VERSION=\"4.5.4\"\nRUN cd /tmp \\\n && mkdir -p $CONDA_DIR \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"a946ea1d0c4a642ddf0c3a26a18bb16d *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p ${CONDA_DIR} \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && conda config --system --prepend channels conda-forge \\\n && conda config --system --set auto_update_conda false \\\n && conda config --system --set show_channel_urls true \\\n && conda update --all \\\n && conda update conda \\\n && conda clean -tipsy\n#   NOTE: Beyond this point be careful of breaking out\n#   or otherwise adding new layers with RUN, chown, etc.\n#   The image size can grow significantly.\n#   Install base python3 packages\nRUN pip install pip==19.0.1 --upgrade \\\n && pip install jupyter==1.0.0 jupyter-console==6.0.0 jupyterhub==3.1.1 jupyterlab==3.6.3 xgboost==1.7.5 git+https://github.com/kubeflow/fairing@a9bb9d5cc1c9f1d75efa31198ddbdccfe176b7bf ${TF_PACKAGE} ${PIPELINE_SDK_PACKAGE} --no-cache-dir \\\n && conda clean -tipsy\n#   NB: the COPY chown can't expand a bash variable for NB_USER\nCOPY --chown=jovyan:users requirements.txt /tmp\n#   Install python2 and ipython2 kernel for jupyter notebook\n#   Install tf packages which only support py2\nCOPY --chown=jovyan:users install.sh /tmp/\nRUN chmod a+rx /tmp/install.sh \\\n && /tmp/install.sh\n#   Add basic config\nCOPY --chown=jovyan:users jupyter_notebook_config.py /tmp\n#   Wipe $HOME for PVC detection later\nWORKDIR $HOME\nRUN rm -fr $( ls -A $HOME ;)\n#   Copy over init scripts\nCOPY --chown=jovyan:users pvc-check.sh /usr/local/bin/\nRUN chmod a+rx /usr/local/bin/*\nRUN docker-credential-gcr configure-docker \\\n && chown jovyan:users $HOME/.docker/config.json\n#   Configure container startup\nEXPOSE 8888/tcp\nUSER jovyan\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"sh\", \"-c\", \"jupyter\", \"notebook\", \"--notebook-dir=/home/jovyan\", \"--ip=0.0.0.0\", \"--no-browser\", \"--allow-root\", \"--port=8888\", \"--NotebookApp.token=''\", \"--NotebookApp.password=''\", \"--NotebookApp.allow_origin='*'\", \"--NotebookApp.base_url=${NB_PREFIX}\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) Jupyter Development Team.\n#  Distributed under the terms of the Modified BSD License.\nARG BASE_IMAGE=ubuntu:18.04@sha256:de774a3145f7ca4f0bd144c7d4ffb2931e06634f11529653b23eba85aef8e378\nFROM $BASE_IMAGE\nARG TF_PACKAGE=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.7.0-cp36-cp36m-linux_x86_64.whl\nARG TF_PACKAGE_PY_27=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.7.0-cp27-none-linux_x86_64.whl\nARG TF_SERVING_VERSION=0.0.0\nARG TFMA_VERSION\nARG TFDV_VERSION\nARG PIPELINE_SDK_PACKAGE=https://storage.googleapis.com/ml-pipeline/release/0.1.8/kfp.tar.gz\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/$NB_USER\"\nENV NB_PREFIX=\"/\"\n#  We prefer to have a global conda install\n#  to minimize the amount of content in $HOME\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\n#  Export args as environment variables.\n#  This is solely to make them available to install.sh\nENV TF_PACKAGE=\"$TF_PACKAGE\"\nENV TF_PACKAGE_27=\"$TF_PACKAGE_PY_27\"\nENV TF_SERVING_VERSION=\"$TF_PACKAGE_PY_27\"\nENV TFMA_VERSION=\"$TFMA_VERSION\"\nENV TFDV_VERSION=\"$TFDV_VERSION\"\nENV PIPELINE_SDK_PACKAGE=\"$PIPELINE_SDK_PACKAGE\"\n#  Use bash instead of sh\nSHELL [\"/bin/bash\", \"-c\"]\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https build-essential bzip2 ca-certificates curl g++ git gnupg graphviz locales lsb-release openssh-client sudo unzip vim wget zip -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV DOCKER_CREDENTIAL_GCR_VERSION=\"1.4.3\"\nRUN curl -LO https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${DOCKER_CREDENTIAL_GCR_VERSION}/docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz \\\n && tar -zxvf docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz \\\n && mv docker-credential-gcr /usr/local/bin/docker-credential-gcr \\\n && rm docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz \\\n && chmod +x /usr/local/bin/docker-credential-gcr\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#  Create jovyan user with UID=1000 and in the 'users' group\n#  but allow for non-initial launches of the notebook to have\n#  $HOME provided by the contents of a PV\nRUN useradd -M -s /bin/bash -N -u $NB_UID $NB_USER \\\n && chown -R ${NB_USER}:users /usr/local/bin \\\n && mkdir -p $HOME\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" > /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install google-cloud-sdk kubectl -y\n#  Install Tini - used as entrypoint for container\nRUN cd /tmp \\\n && wget --quiet https://github.com/krallin/tini/releases/download/v0.18.0/tini \\\n && echo \"12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#  Install conda as jovyan user and check the md5 sum provided on the download site\n#  After Miniconda v4.5.4 the default Python version is no longer 3.6, but TensorFlow\n#  still doesn't support Python 3.7. If we still like to upgrade Miniconda we need\n#  to add the line \"conda install python==3.6\" to RUN command below\nENV MINICONDA_VERSION=\"4.5.4\"\nRUN cd /tmp \\\n && mkdir -p $CONDA_DIR \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"a946ea1d0c4a642ddf0c3a26a18bb16d *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p ${CONDA_DIR} \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && conda config --system --prepend channels conda-forge \\\n && conda config --system --set auto_update_conda false \\\n && conda config --system --set show_channel_urls true \\\n && conda update --all \\\n && conda update conda \\\n && conda clean -tipsy\n#  NOTE: Beyond this point be careful of breaking out\n#  or otherwise adding new layers with RUN, chown, etc.\n#  The image size can grow significantly.\n#  Install base python3 packages\nRUN pip install pip==19.0.1 --upgrade \\\n && pip install jupyter jupyter-console==6.0.0 jupyterhub jupyterlab xgboost git+https://github.com/kubeflow/fairing@a9bb9d5cc1c9f1d75efa31198ddbdccfe176b7bf ${TF_PACKAGE} ${PIPELINE_SDK_PACKAGE} --no-cache-dir \\\n && conda clean -tipsy\n#  NB: the COPY chown can't expand a bash variable for NB_USER\nCOPY --chown=jovyan:users requirements.txt /tmp\n#  Install python2 and ipython2 kernel for jupyter notebook\n#  Install tf packages which only support py2\nCOPY --chown=jovyan:users install.sh /tmp/\nRUN chmod a+rx /tmp/install.sh \\\n && /tmp/install.sh\n#  Add basic config\nCOPY --chown=jovyan:users jupyter_notebook_config.py /tmp\n#  Wipe $HOME for PVC detection later\nWORKDIR $HOME\nRUN rm -fr $( ls -A $HOME ;)\n#  Copy over init scripts\nCOPY --chown=jovyan:users pvc-check.sh /usr/local/bin/\nRUN chmod a+rx /usr/local/bin/*\nRUN docker-credential-gcr configure-docker \\\n && chown jovyan:users $HOME/.docker/config.json\n#  Configure container startup\nEXPOSE 8888/tcp\nUSER jovyan\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"sh\", \"-c\", \"jupyter\", \"notebook\", \"--notebook-dir=/home/jovyan\", \"--ip=0.0.0.0\", \"--no-browser\", \"--allow-root\", \"--port=8888\", \"--NotebookApp.token=''\", \"--NotebookApp.password=''\", \"--NotebookApp.allow_origin='*'\", \"--NotebookApp.base_url=${NB_PREFIX}\"]\n","injectedSmells":[],"originalDockerfileHash":"52a38a07e6993075131bde0fbd1e3eb5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\nARG BASE_IMAGE=ubuntu:18.04@sha256:de774a3145f7ca4f0bd144c7d4ffb2931e06634f11529653b23eba85aef8e378\nFROM $BASE_IMAGE\nARG TF_PACKAGE=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.7.0-cp36-cp36m-linux_x86_64.whl\nARG TF_PACKAGE_PY_27=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.7.0-cp27-none-linux_x86_64.whl\nARG TF_SERVING_VERSION=0.0.0\nARG TFMA_VERSION\nARG TFDV_VERSION\nARG PIPELINE_SDK_PACKAGE=https://storage.googleapis.com/ml-pipeline/release/0.1.8/kfp.tar.gz\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/$NB_USER\"\nENV NB_PREFIX=\"/\"\n#   We prefer to have a global conda install\n#   to minimize the amount of content in $HOME\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\n#   Export args as environment variables.\n#   This is solely to make them available to install.sh\nENV TF_PACKAGE=\"$TF_PACKAGE\"\nENV TF_PACKAGE_27=\"$TF_PACKAGE_PY_27\"\nENV TF_SERVING_VERSION=\"$TF_PACKAGE_PY_27\"\nENV TFMA_VERSION=\"$TFMA_VERSION\"\nENV TFDV_VERSION=\"$TFDV_VERSION\"\nENV PIPELINE_SDK_PACKAGE=\"$PIPELINE_SDK_PACKAGE\"\n#   Use bash instead of sh\nSHELL [\"/bin/bash\", \"-c\"]\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https build-essential bzip2 ca-certificates curl g++ git gnupg graphviz locales lsb-release openssh-client sudo unzip vim wget zip -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV DOCKER_CREDENTIAL_GCR_VERSION=\"1.4.3\"\nRUN curl -LO https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${DOCKER_CREDENTIAL_GCR_VERSION}/docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz \\\n && tar -zxvf docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz \\\n && mv docker-credential-gcr /usr/local/bin/docker-credential-gcr \\\n && rm docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz \\\n && chmod +x /usr/local/bin/docker-credential-gcr\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Create jovyan user with UID=1000 and in the 'users' group\n#   but allow for non-initial launches of the notebook to have\n#   $HOME provided by the contents of a PV\nRUN useradd -M -s /bin/bash -N -u $NB_UID $NB_USER \\\n && chown -R ${NB_USER}:users /usr/local/bin \\\n && mkdir -p $HOME\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" > /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install google-cloud-sdk kubectl -y\n#   Install Tini - used as entrypoint for container\nRUN cd /tmp \\\n && wget --quiet https://github.com/krallin/tini/releases/download/v0.18.0/tini \\\n && echo \"12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855 *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n#   Install conda as jovyan user and check the md5 sum provided on the download site\n#   After Miniconda v4.5.4 the default Python version is no longer 3.6, but TensorFlow\n#   still doesn't support Python 3.7. If we still like to upgrade Miniconda we need\n#   to add the line \"conda install python==3.6\" to RUN command below\nENV MINICONDA_VERSION=\"4.5.4\"\nRUN cd /tmp \\\n && mkdir -p $CONDA_DIR \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"a946ea1d0c4a642ddf0c3a26a18bb16d *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p ${CONDA_DIR} \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && conda config --system --prepend channels conda-forge \\\n && conda config --system --set auto_update_conda false \\\n && conda config --system --set show_channel_urls true \\\n && conda update --all \\\n && conda update conda \\\n && conda clean -tipsy\n#   NOTE: Beyond this point be careful of breaking out\n#   or otherwise adding new layers with RUN, chown, etc.\n#   The image size can grow significantly.\n#   Install base python3 packages\nRUN pip install pip==19.0.1 --upgrade \\\n && pip install jupyter jupyter-console==6.0.0 jupyterhub jupyterlab xgboost git+https://github.com/kubeflow/fairing@a9bb9d5cc1c9f1d75efa31198ddbdccfe176b7bf ${TF_PACKAGE} ${PIPELINE_SDK_PACKAGE} --no-cache-dir \\\n && conda clean -tipsy\n#   NB: the COPY chown can't expand a bash variable for NB_USER\nCOPY --chown=jovyan:users requirements.txt /tmp\n#   Install python2 and ipython2 kernel for jupyter notebook\n#   Install tf packages which only support py2\nCOPY --chown=jovyan:users install.sh /tmp/\nRUN chmod a+rx /tmp/install.sh \\\n && /tmp/install.sh\n#   Add basic config\nCOPY --chown=jovyan:users jupyter_notebook_config.py /tmp\n#   Wipe $HOME for PVC detection later\nWORKDIR $HOME\nRUN rm -fr $( ls -A $HOME ;)\n#   Copy over init scripts\nCOPY --chown=jovyan:users pvc-check.sh /usr/local/bin/\nRUN chmod a+rx /usr/local/bin/*\nRUN docker-credential-gcr configure-docker \\\n && chown jovyan:users $HOME/.docker/config.json\n#   Configure container startup\nEXPOSE 8888/tcp\nUSER jovyan\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"sh\", \"-c\", \"jupyter\", \"notebook\", \"--notebook-dir=/home/jovyan\", \"--ip=0.0.0.0\", \"--no-browser\", \"--allow-root\", \"--port=8888\", \"--NotebookApp.token=''\", \"--NotebookApp.password=''\", \"--NotebookApp.allow_origin='*'\", \"--NotebookApp.base_url=${NB_PREFIX}\"]\n","originalDockerfileUglifiedHash":"3a568a7ce9d730969e223f172f7403fd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ca1582377e5be8cee561b6b42b6f56c410b1401e.dockerfile"}