{"seed":1804011790,"processedDockerfileHash":"5de2e814911262c5a155564b9001dfb5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  !BuildTag: openqa_dev\nFROM opensuse:42.3\n#   Define environment variable\nENV NAME=\"openQA test environment\"\nENV LANG=\"en_US.UTF-8\"\nRUN zypper ar -f -G \"http://download.opensuse.org/repositories/devel:/openQA:/Leap:/42.3/openSUSE_Leap_42.3\" devel_openqa\nRUN zypper in -y -C glibc-i18ndata glibc-locale automake curl fftw3-devel gcc gcc-c++ git gmp-devel gzip libexpat-devel libsndfile-devel libssh2-1 libssh2-devel libtheora-devel libtool libxml2-devel make opencv-devel patch postgresql-devel qemu qemu-tools qemu-kvm tar optipng sqlite3 postgresql-server which chromedriver xorg-x11-fonts 'rubygem(sass)' perl sudo 'perl(App::cpanminus)' 'perl(Archive::Extract)' 'perl(BSD::Resource)' 'perl(CSS::Minifier::XS)' 'perl(Carp::Always)' 'perl(Class::Accessor::Fast)' 'perl(Config)' 'perl(Config::IniFiles)' 'perl(Config::Tiny)' 'perl(Cpanel::JSON::XS)' 'perl(Crypt::DES)' 'perl(Cwd)' 'perl(DBD::Pg)' 'perl(DBD::SQLite)' 'perl(DBIx::Class)' 'perl(DBIx::Class::DeploymentHandler)' 'perl(DBIx::Class::DynamicDefault)' 'perl(DBIx::Class::OptimisticLocking)' 'perl(DBIx::Class::Schema::Config)' 'perl(Data::Dump)' 'perl(Data::Dumper)' 'perl(Digest::MD5) >= 2.55' 'perl(Data::OptList)' 'perl(DateTime::Format::Pg)' 'perl(DateTime::Format::SQLite)' 'perl(Devel::Cover)' 'perl(Devel::Cover::Report::Codecov)' 'perl(ExtUtils::MakeMaker) >= 7.12' 'perl(Exception::Class)' 'perl(File::Copy::Recursive)' 'perl(File::Touch)' 'perl(IO::Scalar)' 'perl(IO::Socket::SSL)' 'perl(IPC::Run)' 'perl(IPC::System::Simple)' 'perl(JSON::XS)' 'perl(JavaScript::Minifier::XS)' 'perl(LWP::Protocol::https)' 'perl(Minion)' 'perl(Module::CPANfile)' 'perl(Mojo::IOLoop::ReadWriteProcess)' 'perl(Mojo::Pg)' 'perl(Mojo::RabbitMQ::Client)' 'perl(Mojo::SQLite)' 'perl(Minion::Backend::SQLite)' 'perl(Mojolicious)' 'perl(Mojolicious::Plugin::AssetPack)' 'perl(Mojolicious::Plugin::RenderFile)' 'perl(JSON::Validator)' 'perl(YAML::XS) >= 0.67' 'perl(Net::OpenID::Consumer)' 'perl(Net::SNMP)' 'perl(Net::SSH2)' 'perl(Perl::Critic)' 'perl(Perl::Critic::Freenode)' 'perl(Perl::Tidy)' 'perl(Pod::POM)' 'perl(Pod::Coverage)' 'perl(SQL::SplitStatement)' 'perl(SQL::Translator)' 'perl(Selenium::Remote::Driver)' 'perl(Socket::MsgHdr)' 'perl(Sort::Versions)' 'perl(Test::Compile)' 'perl(Test::Fatal)' 'perl(Test::Pod)' 'perl(Test::Mock::Time)' 'perl(Test::MockModule)' 'perl(Test::MockObject)' 'perl(Test::Output)' 'perl(Socket::MsgHdr)' 'perl(Test::Warnings)' 'perl(Text::Markdown)' 'perl(Time::ParseDate)' 'perl(XSLoader) >= 0.24' 'perl(XML::SemanticDiff)' 'TimeDate' perl-Archive-Extract perl-Test-Simple 'perl(aliased)' systemd-sysvinit systemd libudev1 tack\nVOLUME [\"/sys/fs/cgroup\", \"/run\"]\nCMD [\"/sbin/init\"]\nENV OPENQA_DIR=\"/opt/openqa\"\nENV NORMAL_USER=\"squamata\"\nRUN echo \"$NORMAL_USER ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN mkdir -p /home/$NORMAL_USER\nRUN useradd -r -d /home/$NORMAL_USER -g users --uid=1000 $NORMAL_USER\nRUN chown $NORMAL_USER:users /home/$NORMAL_USER\nVOLUME [ \"/opt/openqa\" ]\n#   explicitly set user/group IDs\nRUN mkdir -p /opt/testing_area\nRUN chown -R $NORMAL_USER:users /opt/testing_area\nENTRYPOINT [\"/bin/bash\"]\nWORKDIR $OPENQA_DIR\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# !BuildTag: openqa_dev\nFROM opensuse:42.3\n#  Define environment variable\nENV NAME=\"openQA test environment\"\nENV LANG=\"en_US.UTF-8\"\nRUN zypper ar -f -G \"http://download.opensuse.org/repositories/devel:/openQA:/Leap:/42.3/openSUSE_Leap_42.3\" devel_openqa\nRUN zypper in -y -C glibc-i18ndata glibc-locale automake curl fftw3-devel gcc gcc-c++ git gmp-devel gzip libexpat-devel libsndfile-devel libssh2-1 libssh2-devel libtheora-devel libtool libxml2-devel make opencv-devel patch postgresql-devel qemu qemu-tools qemu-kvm tar optipng sqlite3 postgresql-server which chromedriver xorg-x11-fonts 'rubygem(sass)' perl sudo 'perl(App::cpanminus)' 'perl(Archive::Extract)' 'perl(BSD::Resource)' 'perl(CSS::Minifier::XS)' 'perl(Carp::Always)' 'perl(Class::Accessor::Fast)' 'perl(Config)' 'perl(Config::IniFiles)' 'perl(Config::Tiny)' 'perl(Cpanel::JSON::XS)' 'perl(Crypt::DES)' 'perl(Cwd)' 'perl(DBD::Pg)' 'perl(DBD::SQLite)' 'perl(DBIx::Class)' 'perl(DBIx::Class::DeploymentHandler)' 'perl(DBIx::Class::DynamicDefault)' 'perl(DBIx::Class::OptimisticLocking)' 'perl(DBIx::Class::Schema::Config)' 'perl(Data::Dump)' 'perl(Data::Dumper)' 'perl(Digest::MD5) >= 2.55' 'perl(Data::OptList)' 'perl(DateTime::Format::Pg)' 'perl(DateTime::Format::SQLite)' 'perl(Devel::Cover)' 'perl(Devel::Cover::Report::Codecov)' 'perl(ExtUtils::MakeMaker) >= 7.12' 'perl(Exception::Class)' 'perl(File::Copy::Recursive)' 'perl(File::Touch)' 'perl(IO::Scalar)' 'perl(IO::Socket::SSL)' 'perl(IPC::Run)' 'perl(IPC::System::Simple)' 'perl(JSON::XS)' 'perl(JavaScript::Minifier::XS)' 'perl(LWP::Protocol::https)' 'perl(Minion)' 'perl(Module::CPANfile)' 'perl(Mojo::IOLoop::ReadWriteProcess)' 'perl(Mojo::Pg)' 'perl(Mojo::RabbitMQ::Client)' 'perl(Mojo::SQLite)' 'perl(Minion::Backend::SQLite)' 'perl(Mojolicious)' 'perl(Mojolicious::Plugin::AssetPack)' 'perl(Mojolicious::Plugin::RenderFile)' 'perl(JSON::Validator)' 'perl(YAML::XS) >= 0.67' 'perl(Net::OpenID::Consumer)' 'perl(Net::SNMP)' 'perl(Net::SSH2)' 'perl(Perl::Critic)' 'perl(Perl::Critic::Freenode)' 'perl(Perl::Tidy)' 'perl(Pod::POM)' 'perl(Pod::Coverage)' 'perl(SQL::SplitStatement)' 'perl(SQL::Translator)' 'perl(Selenium::Remote::Driver)' 'perl(Socket::MsgHdr)' 'perl(Sort::Versions)' 'perl(Test::Compile)' 'perl(Test::Fatal)' 'perl(Test::Pod)' 'perl(Test::Mock::Time)' 'perl(Test::MockModule)' 'perl(Test::MockObject)' 'perl(Test::Output)' 'perl(Socket::MsgHdr)' 'perl(Test::Warnings)' 'perl(Text::Markdown)' 'perl(Time::ParseDate)' 'perl(XSLoader) >= 0.24' 'perl(XML::SemanticDiff)' 'TimeDate' perl-Archive-Extract perl-Test-Simple 'perl(aliased)' systemd-sysvinit systemd libudev1 tack\nVOLUME [\"/sys/fs/cgroup\", \"/run\"]\nCMD [\"/sbin/init\"]\nENV OPENQA_DIR=\"/opt/openqa\"\nENV NORMAL_USER=\"squamata\"\nRUN echo \"$NORMAL_USER ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN mkdir -p /home/$NORMAL_USER\nRUN useradd -r -d /home/$NORMAL_USER -g users --uid=1000 $NORMAL_USER\nRUN chown $NORMAL_USER:users /home/$NORMAL_USER\nVOLUME [ \"/opt/openqa\" ]\n#  explicitly set user/group IDs\nRUN mkdir -p /opt/testing_area\nRUN chown -R $NORMAL_USER:users /opt/testing_area\nENTRYPOINT [\"/bin/bash\"]\nWORKDIR $OPENQA_DIR\n","injectedSmells":[],"originalDockerfileHash":"a899a22264c6f87500b9db7a6b87090e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  !BuildTag: openqa_dev\nFROM opensuse:42.3\n#   Define environment variable\nENV NAME=\"openQA test environment\"\nENV LANG=\"en_US.UTF-8\"\nRUN zypper ar -f -G \"http://download.opensuse.org/repositories/devel:/openQA:/Leap:/42.3/openSUSE_Leap_42.3\" devel_openqa\nRUN zypper in -y -C glibc-i18ndata glibc-locale automake curl fftw3-devel gcc gcc-c++ git gmp-devel gzip libexpat-devel libsndfile-devel libssh2-1 libssh2-devel libtheora-devel libtool libxml2-devel make opencv-devel patch postgresql-devel qemu qemu-tools qemu-kvm tar optipng sqlite3 postgresql-server which chromedriver xorg-x11-fonts 'rubygem(sass)' perl sudo 'perl(App::cpanminus)' 'perl(Archive::Extract)' 'perl(BSD::Resource)' 'perl(CSS::Minifier::XS)' 'perl(Carp::Always)' 'perl(Class::Accessor::Fast)' 'perl(Config)' 'perl(Config::IniFiles)' 'perl(Config::Tiny)' 'perl(Cpanel::JSON::XS)' 'perl(Crypt::DES)' 'perl(Cwd)' 'perl(DBD::Pg)' 'perl(DBD::SQLite)' 'perl(DBIx::Class)' 'perl(DBIx::Class::DeploymentHandler)' 'perl(DBIx::Class::DynamicDefault)' 'perl(DBIx::Class::OptimisticLocking)' 'perl(DBIx::Class::Schema::Config)' 'perl(Data::Dump)' 'perl(Data::Dumper)' 'perl(Digest::MD5) >= 2.55' 'perl(Data::OptList)' 'perl(DateTime::Format::Pg)' 'perl(DateTime::Format::SQLite)' 'perl(Devel::Cover)' 'perl(Devel::Cover::Report::Codecov)' 'perl(ExtUtils::MakeMaker) >= 7.12' 'perl(Exception::Class)' 'perl(File::Copy::Recursive)' 'perl(File::Touch)' 'perl(IO::Scalar)' 'perl(IO::Socket::SSL)' 'perl(IPC::Run)' 'perl(IPC::System::Simple)' 'perl(JSON::XS)' 'perl(JavaScript::Minifier::XS)' 'perl(LWP::Protocol::https)' 'perl(Minion)' 'perl(Module::CPANfile)' 'perl(Mojo::IOLoop::ReadWriteProcess)' 'perl(Mojo::Pg)' 'perl(Mojo::RabbitMQ::Client)' 'perl(Mojo::SQLite)' 'perl(Minion::Backend::SQLite)' 'perl(Mojolicious)' 'perl(Mojolicious::Plugin::AssetPack)' 'perl(Mojolicious::Plugin::RenderFile)' 'perl(JSON::Validator)' 'perl(YAML::XS) >= 0.67' 'perl(Net::OpenID::Consumer)' 'perl(Net::SNMP)' 'perl(Net::SSH2)' 'perl(Perl::Critic)' 'perl(Perl::Critic::Freenode)' 'perl(Perl::Tidy)' 'perl(Pod::POM)' 'perl(Pod::Coverage)' 'perl(SQL::SplitStatement)' 'perl(SQL::Translator)' 'perl(Selenium::Remote::Driver)' 'perl(Socket::MsgHdr)' 'perl(Sort::Versions)' 'perl(Test::Compile)' 'perl(Test::Fatal)' 'perl(Test::Pod)' 'perl(Test::Mock::Time)' 'perl(Test::MockModule)' 'perl(Test::MockObject)' 'perl(Test::Output)' 'perl(Socket::MsgHdr)' 'perl(Test::Warnings)' 'perl(Text::Markdown)' 'perl(Time::ParseDate)' 'perl(XSLoader) >= 0.24' 'perl(XML::SemanticDiff)' 'TimeDate' perl-Archive-Extract perl-Test-Simple 'perl(aliased)' systemd-sysvinit systemd libudev1 tack\nVOLUME [\"/sys/fs/cgroup\", \"/run\"]\nCMD [\"/sbin/init\"]\nENV OPENQA_DIR=\"/opt/openqa\"\nENV NORMAL_USER=\"squamata\"\nRUN echo \"$NORMAL_USER ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN mkdir -p /home/$NORMAL_USER\nRUN useradd -r -d /home/$NORMAL_USER -g users --uid=1000 $NORMAL_USER\nRUN chown $NORMAL_USER:users /home/$NORMAL_USER\nVOLUME [ \"/opt/openqa\" ]\n#   explicitly set user/group IDs\nRUN mkdir -p /opt/testing_area\nRUN chown -R $NORMAL_USER:users /opt/testing_area\nENTRYPOINT [\"/bin/bash\"]\nWORKDIR $OPENQA_DIR\n","originalDockerfileUglifiedHash":"26d555860592570d63ef0d8ef137ccdf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a9d196029873f657daef10a0b218639b31f2fd2c.dockerfile"}