{"seed":4054091640,"processedDockerfileHash":"81f6b3629a6f350340af17f9e15776d0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM openjdk:8-jdk\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget=1.21-1+deb11u1 git=1:2.30.2-1+deb11u2 maven=3.6.3-5 python gcc=4:10.2.1-1 python-dev python-setuptools=44.1.1-1 -y --fix-missing \\\n && /usr/bin/easy_install -U pip \\\n && /usr/local/bin/pip install crcmod\nMAINTAINER MacArthur Lab\nCOPY settings.xml /root/.m2/settings.xml\nCOPY entrypoint.sh /root/bin/entrypoint.sh\nENV MVN=\"mvn\"\n#  first get Exomiser built in the local maven for matchbox to import in\n#  ---------------------------------------------------------------------------\n#   _n.b._ check that the tag here is the same as the exomiser.version declared in the pom\nRUN git clone https://github.com/exomiser/Exomiser\nWORKDIR Exomiser\nRUN $MVN -DskipTests=true clean install\n#  now matchbox (and it will see Exomiser in local maven repo)\n#  ---------------------------------------------------------------------------\nRUN git clone https://github.com/macarthur-lab/matchbox\nWORKDIR matchbox\nRUN $MVN -Dmaven.test.skip=true clean install package\nENV MATCHBOX_JAR=\"/Exomiser/matchbox/target/matchbox-0.1.0.jar\"\nENV MATCHBOX_CONFIG_DIR=\"/Exomiser/matchbox/config\"\nENV MATCHBOX_DEPLOYMENT_CONFIG_DIR=\"/matchbox_deployment/config\"\n#  Now get support data for Exomiser models (for now, cpying, switch with wget)\n#  -----------------------------------------------------\n#  ----first get gsutils to interface with google\nRUN wget https://storage.googleapis.com/pub/gsutil.tar.gz \\\n && mkdir /root/gsutils_dir \\\n && tar xfz gsutil.tar.gz -C /root/gsutils_dir \\\n && rm gsutil.tar.gz \\\n && export PATH=${PATH}:/root/gsutils_dir/gsutil\n#  ----now get the data and untar it\nWORKDIR data\nRUN /root/gsutils_dir/gsutil/gsutil -m -o GSUtil:parallel_composite_upload_threshold=150M cp gs://seqr-reference-data/1807_phenotype.tar.gz data.local.tar.gz \\\n && tar -xzf data.local.tar.gz \\\n && rm data.local.tar.gz \\\n && pwd \\\n && ls -l \\\n && /root/gsutils_dir/gsutil/gsutil -m -o GSUtil:parallel_composite_upload_threshold=150M cp gs://seqr-reference-data/gene_symbol_to_ensembl_id_map.txt gene_symbol_to_ensembl_id_map.txt \\\n && pwd \\\n && ls -l\n#  Now set matchbox up for deployment and copy over jar and config files\n#  ---------------------------------------------------------------------------\nWORKDIR /matchbox_deployment\nRUN cp -rf $MATCHBOX_CONFIG_DIR . \\\n && cp $MATCHBOX_JAR .\n#  ############################################\n#                                             #\n#   Please note the EXOMISER_DATA_DIR         #\n#   value. The file system path with ref      #\n#   data (viewable by docker daemon) must     #  \n#   be mounted to this location in            #\n#   container at the docker run step          #\n#                                             #\n#  ############################################\nENV EXOMISER_DATA_DIR=\"/Exomiser/matchbox/data\"\nENV EXOMISER_PHENOTYPE_DATA_VERSION=\"1807\"\n#  ############################################\n#                                             #\n#   This defines if matches that have no      #\n#   genotypes in common, BUT have a high      #\n#   phenotype score should be returned as     #\n#   results                                   #\n#                                             #\n#  ############################################\nENV ALLOW_NO_GENE_IN_COMMON_MATCHES=\"false\"\n#  ############################################\n#                                             #\n#   Environment variables for Mongo           #\n#   connection. Please populate before        #\n#   doing docker build command                #\n#                                             #\n#  ############################################\nENV MONGODB_HOSTNAME=\"\"\nENV MONGODB_PORT=\"\"\nENV MONGODB_USERNAME=\"\"\nENV MONGODB_PASSWORD=\"\"\nENV MONGODB_DATABASE=\"\"\n#  ############################################\n#                                             #\n#   This port is exposed by container         #\n#                                             #\n#  ############################################\nARG MATCHBOX_SERVICE_PORT\nENV MATCHBOX_SERVICE_PORT=\"$MATCHBOX_SERVICE_PORT\"\nEXPOSE $MATCHBOX_SERVICE_PORT\nCMD [\"/root/bin/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openjdk:8-jdk\nRUN apt-get update \\\n && apt-get install wget git maven python gcc python-dev python-setuptools -y --fix-missing \\\n && /usr/bin/easy_install -U pip \\\n && /usr/local/bin/pip install crcmod\nMAINTAINER MacArthur Lab\nCOPY settings.xml /root/.m2/settings.xml\nCOPY entrypoint.sh /root/bin/entrypoint.sh\nENV MVN=\"mvn\"\n# first get Exomiser built in the local maven for matchbox to import in\n# ---------------------------------------------------------------------------\n#  _n.b._ check that the tag here is the same as the exomiser.version declared in the pom\nRUN git clone https://github.com/exomiser/Exomiser\nWORKDIR Exomiser\nRUN $MVN -DskipTests=true clean install\n# now matchbox (and it will see Exomiser in local maven repo)\n# ---------------------------------------------------------------------------\nRUN git clone https://github.com/macarthur-lab/matchbox\nWORKDIR matchbox\nRUN $MVN -Dmaven.test.skip=true clean install package\nENV MATCHBOX_JAR=\"/Exomiser/matchbox/target/matchbox-0.1.0.jar\"\nENV MATCHBOX_CONFIG_DIR=\"/Exomiser/matchbox/config\"\nENV MATCHBOX_DEPLOYMENT_CONFIG_DIR=\"/matchbox_deployment/config\"\n# Now get support data for Exomiser models (for now, cpying, switch with wget)\n# -----------------------------------------------------\n# ----first get gsutils to interface with google\nRUN wget https://storage.googleapis.com/pub/gsutil.tar.gz \\\n && mkdir /root/gsutils_dir \\\n && tar xfz gsutil.tar.gz -C /root/gsutils_dir \\\n && rm gsutil.tar.gz \\\n && export PATH=${PATH}:/root/gsutils_dir/gsutil\n# ----now get the data and untar it\nWORKDIR data\nRUN /root/gsutils_dir/gsutil/gsutil -m -o GSUtil:parallel_composite_upload_threshold=150M cp gs://seqr-reference-data/1807_phenotype.tar.gz data.local.tar.gz \\\n && tar -xzf data.local.tar.gz \\\n && rm data.local.tar.gz \\\n && pwd \\\n && ls -l \\\n && /root/gsutils_dir/gsutil/gsutil -m -o GSUtil:parallel_composite_upload_threshold=150M cp gs://seqr-reference-data/gene_symbol_to_ensembl_id_map.txt gene_symbol_to_ensembl_id_map.txt \\\n && pwd \\\n && ls -l\n# Now set matchbox up for deployment and copy over jar and config files\n# ---------------------------------------------------------------------------\nWORKDIR /matchbox_deployment\nRUN cp -rf $MATCHBOX_CONFIG_DIR . \\\n && cp $MATCHBOX_JAR .\n# ############################################\n#                                            #\n#  Please note the EXOMISER_DATA_DIR         #\n#  value. The file system path with ref      #\n#  data (viewable by docker daemon) must     #  \n#  be mounted to this location in            #\n#  container at the docker run step          #\n#                                            #\n# ############################################\nENV EXOMISER_DATA_DIR=\"/Exomiser/matchbox/data\"\nENV EXOMISER_PHENOTYPE_DATA_VERSION=\"1807\"\n# ############################################\n#                                            #\n#  This defines if matches that have no      #\n#  genotypes in common, BUT have a high      #\n#  phenotype score should be returned as     #\n#  results                                   #\n#                                            #\n# ############################################\nENV ALLOW_NO_GENE_IN_COMMON_MATCHES=\"false\"\n# ############################################\n#                                            #\n#  Environment variables for Mongo           #\n#  connection. Please populate before        #\n#  doing docker build command                #\n#                                            #\n# ############################################\nENV MONGODB_HOSTNAME=\"\"\nENV MONGODB_PORT=\"\"\nENV MONGODB_USERNAME=\"\"\nENV MONGODB_PASSWORD=\"\"\nENV MONGODB_DATABASE=\"\"\n# ############################################\n#                                            #\n#  This port is exposed by container         #\n#                                            #\n# ############################################\nARG MATCHBOX_SERVICE_PORT\nENV MATCHBOX_SERVICE_PORT=\"$MATCHBOX_SERVICE_PORT\"\nEXPOSE $MATCHBOX_SERVICE_PORT\nCMD [\"/root/bin/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"d6d19fa294d835b489ca1741f1a48778","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openjdk:8-jdk\nRUN apt-get update \\\n && apt-get install wget git maven python gcc python-dev python-setuptools -y --fix-missing \\\n && /usr/bin/easy_install -U pip \\\n && /usr/local/bin/pip install crcmod\nMAINTAINER MacArthur Lab\nCOPY settings.xml /root/.m2/settings.xml\nCOPY entrypoint.sh /root/bin/entrypoint.sh\nENV MVN=\"mvn\"\n#  first get Exomiser built in the local maven for matchbox to import in\n#  ---------------------------------------------------------------------------\n#   _n.b._ check that the tag here is the same as the exomiser.version declared in the pom\nRUN git clone https://github.com/exomiser/Exomiser\nWORKDIR Exomiser\nRUN $MVN -DskipTests=true clean install\n#  now matchbox (and it will see Exomiser in local maven repo)\n#  ---------------------------------------------------------------------------\nRUN git clone https://github.com/macarthur-lab/matchbox\nWORKDIR matchbox\nRUN $MVN -Dmaven.test.skip=true clean install package\nENV MATCHBOX_JAR=\"/Exomiser/matchbox/target/matchbox-0.1.0.jar\"\nENV MATCHBOX_CONFIG_DIR=\"/Exomiser/matchbox/config\"\nENV MATCHBOX_DEPLOYMENT_CONFIG_DIR=\"/matchbox_deployment/config\"\n#  Now get support data for Exomiser models (for now, cpying, switch with wget)\n#  -----------------------------------------------------\n#  ----first get gsutils to interface with google\nRUN wget https://storage.googleapis.com/pub/gsutil.tar.gz \\\n && mkdir /root/gsutils_dir \\\n && tar xfz gsutil.tar.gz -C /root/gsutils_dir \\\n && rm gsutil.tar.gz \\\n && export PATH=${PATH}:/root/gsutils_dir/gsutil\n#  ----now get the data and untar it\nWORKDIR data\nRUN /root/gsutils_dir/gsutil/gsutil -m -o GSUtil:parallel_composite_upload_threshold=150M cp gs://seqr-reference-data/1807_phenotype.tar.gz data.local.tar.gz \\\n && tar -xzf data.local.tar.gz \\\n && rm data.local.tar.gz \\\n && pwd \\\n && ls -l \\\n && /root/gsutils_dir/gsutil/gsutil -m -o GSUtil:parallel_composite_upload_threshold=150M cp gs://seqr-reference-data/gene_symbol_to_ensembl_id_map.txt gene_symbol_to_ensembl_id_map.txt \\\n && pwd \\\n && ls -l\n#  Now set matchbox up for deployment and copy over jar and config files\n#  ---------------------------------------------------------------------------\nWORKDIR /matchbox_deployment\nRUN cp -rf $MATCHBOX_CONFIG_DIR . \\\n && cp $MATCHBOX_JAR .\n#  ############################################\n#                                             #\n#   Please note the EXOMISER_DATA_DIR         #\n#   value. The file system path with ref      #\n#   data (viewable by docker daemon) must     #  \n#   be mounted to this location in            #\n#   container at the docker run step          #\n#                                             #\n#  ############################################\nENV EXOMISER_DATA_DIR=\"/Exomiser/matchbox/data\"\nENV EXOMISER_PHENOTYPE_DATA_VERSION=\"1807\"\n#  ############################################\n#                                             #\n#   This defines if matches that have no      #\n#   genotypes in common, BUT have a high      #\n#   phenotype score should be returned as     #\n#   results                                   #\n#                                             #\n#  ############################################\nENV ALLOW_NO_GENE_IN_COMMON_MATCHES=\"false\"\n#  ############################################\n#                                             #\n#   Environment variables for Mongo           #\n#   connection. Please populate before        #\n#   doing docker build command                #\n#                                             #\n#  ############################################\nENV MONGODB_HOSTNAME=\"\"\nENV MONGODB_PORT=\"\"\nENV MONGODB_USERNAME=\"\"\nENV MONGODB_PASSWORD=\"\"\nENV MONGODB_DATABASE=\"\"\n#  ############################################\n#                                             #\n#   This port is exposed by container         #\n#                                             #\n#  ############################################\nARG MATCHBOX_SERVICE_PORT\nENV MATCHBOX_SERVICE_PORT=\"$MATCHBOX_SERVICE_PORT\"\nEXPOSE $MATCHBOX_SERVICE_PORT\nCMD [\"/root/bin/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"7ca29e796891db769f69a6efc788e819","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c972867bb6ef085de249ac254efff08c9c0f8540.dockerfile"}