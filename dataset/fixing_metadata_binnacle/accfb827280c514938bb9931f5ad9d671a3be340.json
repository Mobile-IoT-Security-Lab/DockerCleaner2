{"seed":4117450289,"processedDockerfileHash":"ecb9d217018a95ecdf4e82a1266ea671","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   \n#   Docker image for Tesseract 4 (and Leptonica) from source code\n#   https://github.com/tesseract-ocr/tesseract/wiki/Compiling#linux\n#   http://www.leptonica.org/source/README.html\n#   based on https://github.com/tesseract-shadow/tesseract-ocr-compilation/blob/master/Dockerfile\n#\nFROM ubuntu:16.04\n#   [ install dependencies ]\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-9 autoconf-archive=20150925-1 automake=1:1.15-4ubuntu1 build-essential=12.1ubuntu2 checkinstall=1.6.2-4ubuntu1 cmake=3.5.1-1ubuntu3 g++=4:5.3.1-1ubuntu1 git=1:2.7.4-0ubuntu1.10 libcairo2-dev=1.14.6-1 libcairo2-dev=1.14.6-1 libicu-dev=55.1-7ubuntu0.5 libicu-dev=55.1-7ubuntu0.5 libjpeg8-dev=8c-2ubuntu8 libjpeg8-dev=8c-2ubuntu8 libpango1.0-dev=1.38.1-1 libpango1.0-dev=1.38.1-1 libpng12-dev=1.2.54-1ubuntu1.1 libpng12-dev=1.2.54-1ubuntu1.1 libtiff5-dev=4.0.6-1ubuntu0.8 libtiff5-dev=4.0.6-1ubuntu0.8 libtool=2.4.6-0.1 nano=2.5.3-2ubuntu2 pkg-config=0.29.1-0ubuntu1 python-dev=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 python3-dev=3.5.1-3 python3-pip=8.1.1-2ubuntu0.6 python-tk=2.7.12-1~16.04 python3-tk=3.5.1-1 screen=4.3.1-2ubuntu0.1 wget=1.17.1-1ubuntu1.5 xzgv=0.9.1-3 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -y\n#   [ Install ZSH ]\nRUN apt-get install --no-install-recommends zsh=5.1.1-1ubuntu2.3 -y\nRUN git clone git://github.com/robbyrussell/oh-my-zsh.git /root/.oh-my-zsh\nRUN cp /root/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\nRUN chsh -s /bin/zsh\n#   [ Install Python packages ]\nRUN pip3 install -U setuptools packaging pyparsing six cython numpy sklearn scikit-image scikit-learn imutils Pillow matplotlib argparse jupyter scipy easydict pandas tqdm xmltodict uwsgi Flask requests python-dateutil\n#   [ ffmpeg ]\nRUN apt-get update \\\n && apt-get install --no-install-recommends ffmpeg=7:2.8.17-0ubuntu0.1 -y --upgrade\n#   [ install Leptonica ]\nENV BASE_DIR=\"/opt\"\n#   install leptonica\nWORKDIR ${BASE_DIR}\nRUN git clone https://github.com/DanBloomberg/leptonica.git\nRUN mkdir leptonica/build \\\n && cd leptonica/build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_PROG=1 .. \\\n && make -j$( nproc ;) \\\n && make install\nWORKDIR ${BASE_DIR}\nRUN git clone https://github.com/tesseract-ocr/tesseract.git\nRUN mkdir tesseract/build \\\n && cd tesseract/build \\\n && PKG_CONFIG_PATH=/usr/local/lib/pkgconfig cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DLeptonica_BUILD_DIR=/opt/leptonica/build .. \\\n && make -j$( nproc ;) \\\n && make install \\\n && export LD_LIBRARY_PATH=/opt/tesseract/build:$LD_LIBRARY_PATH \\\n && ldconfig\n#   [ Download Tesseract data ]\nENV TESSDATA_PREFIX=\"/usr/local/share/tessdata\"\nRUN mkdir ${TESSDATA_PREFIX}\n#   osd\tOrientation and script detection\nRUN wget -O ${TESSDATA_PREFIX}/osd.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/osd.traineddata\n#   equ\tMath / equation detection\nRUN wget -O ${TESSDATA_PREFIX}/equ.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/equ.traineddata\n#   eng English\nRUN wget -O ${TESSDATA_PREFIX}/eng.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/eng.traineddata\n#   ara Arabic\nRUN wget -O ${TESSDATA_PREFIX}/ara.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/ara.traineddata\n#   other languages: https://github.com/tesseract-ocr/tesseract/wiki/Data-Files\n#   [ update config ]\nRUN adduser --disabled-password --gecos \"\" docker \\\n && echo 'docker ALL=NOPASSWD: ALL' >> /etc/sudoers \\\n && su -c 'python3 -c \"import matplotlib.pyplot\"' docker \\\n && echo 'ln -f /dev/null /dev/raw1394 2>/dev/null' >> /etc/bash.bashrc \\\n && echo 'export PATH=/work/bin:/root/bin:${PATH}' >> /etc/bash.bashrc\n#   https://github.com/tesseract-ocr/tesseract/wiki/APIExample\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  \n#  Docker image for Tesseract 4 (and Leptonica) from source code\n#  https://github.com/tesseract-ocr/tesseract/wiki/Compiling#linux\n#  http://www.leptonica.org/source/README.html\n#  based on https://github.com/tesseract-shadow/tesseract-ocr-compilation/blob/master/Dockerfile\n#\nFROM ubuntu:16.04\n#  [ install dependencies ]\nRUN apt-get update \\\n && apt-get install autoconf autoconf-archive automake build-essential checkinstall cmake g++ git libcairo2-dev libcairo2-dev libicu-dev libicu-dev libjpeg8-dev libjpeg8-dev libpango1.0-dev libpango1.0-dev libpng12-dev libpng12-dev libtiff5-dev libtiff5-dev libtool nano pkg-config python-dev python-pip python3-dev python3-pip python-tk python3-tk screen wget xzgv zlib1g-dev -y\n#  [ Install ZSH ]\nRUN apt-get install -y zsh\nRUN git clone git://github.com/robbyrussell/oh-my-zsh.git /root/.oh-my-zsh\nRUN cp /root/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\nRUN chsh -s /bin/zsh\n#  [ Install Python packages ]\nRUN pip3 install -U setuptools packaging pyparsing six cython numpy sklearn scikit-image scikit-learn imutils Pillow matplotlib argparse jupyter scipy easydict pandas tqdm xmltodict uwsgi Flask requests python-dateutil\n#  [ ffmpeg ]\nRUN apt-get update \\\n && apt-get install ffmpeg -y --upgrade\n#  [ install Leptonica ]\nENV BASE_DIR=\"/opt\"\n#  install leptonica\nWORKDIR ${BASE_DIR}\nRUN git clone https://github.com/DanBloomberg/leptonica.git\nRUN mkdir leptonica/build \\\n && cd leptonica/build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_PROG=1 .. \\\n && make -j$( nproc ;) \\\n && make install\nWORKDIR ${BASE_DIR}\nRUN git clone https://github.com/tesseract-ocr/tesseract.git\nRUN mkdir tesseract/build \\\n && cd tesseract/build \\\n && PKG_CONFIG_PATH=/usr/local/lib/pkgconfig cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DLeptonica_BUILD_DIR=/opt/leptonica/build .. \\\n && make -j$( nproc ;) \\\n && make install \\\n && export LD_LIBRARY_PATH=/opt/tesseract/build:$LD_LIBRARY_PATH \\\n && ldconfig\n#  [ Download Tesseract data ]\nENV TESSDATA_PREFIX=\"/usr/local/share/tessdata\"\nRUN mkdir ${TESSDATA_PREFIX}\n#  osd\tOrientation and script detection\nRUN wget -O ${TESSDATA_PREFIX}/osd.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/osd.traineddata\n#  equ\tMath / equation detection\nRUN wget -O ${TESSDATA_PREFIX}/equ.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/equ.traineddata\n#  eng English\nRUN wget -O ${TESSDATA_PREFIX}/eng.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/eng.traineddata\n#  ara Arabic\nRUN wget -O ${TESSDATA_PREFIX}/ara.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/ara.traineddata\n#  other languages: https://github.com/tesseract-ocr/tesseract/wiki/Data-Files\n#  [ update config ]\nRUN adduser --disabled-password --gecos \"\" docker \\\n && echo 'docker ALL=NOPASSWD: ALL' >> /etc/sudoers \\\n && su -c 'python3 -c \"import matplotlib.pyplot\"' docker \\\n && echo 'ln -f /dev/null /dev/raw1394 2>/dev/null' >> /etc/bash.bashrc \\\n && echo 'export PATH=/work/bin:/root/bin:${PATH}' >> /etc/bash.bashrc\n#  https://github.com/tesseract-ocr/tesseract/wiki/APIExample\n","injectedSmells":[],"originalDockerfileHash":"a6f88b7d4eb50d0f2a33790ef56b4e31","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   \n#   Docker image for Tesseract 4 (and Leptonica) from source code\n#   https://github.com/tesseract-ocr/tesseract/wiki/Compiling#linux\n#   http://www.leptonica.org/source/README.html\n#   based on https://github.com/tesseract-shadow/tesseract-ocr-compilation/blob/master/Dockerfile\n#\nFROM ubuntu:16.04\n#   [ install dependencies ]\nRUN apt-get update \\\n && apt-get install autoconf autoconf-archive automake build-essential checkinstall cmake g++ git libcairo2-dev libcairo2-dev libicu-dev libicu-dev libjpeg8-dev libjpeg8-dev libpango1.0-dev libpango1.0-dev libpng12-dev libpng12-dev libtiff5-dev libtiff5-dev libtool nano pkg-config python-dev python-pip python3-dev python3-pip python-tk python3-tk screen wget xzgv zlib1g-dev -y\n#   [ Install ZSH ]\nRUN apt-get install zsh -y\nRUN git clone git://github.com/robbyrussell/oh-my-zsh.git /root/.oh-my-zsh\nRUN cp /root/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\nRUN chsh -s /bin/zsh\n#   [ Install Python packages ]\nRUN pip3 install -U setuptools packaging pyparsing six cython numpy sklearn scikit-image scikit-learn imutils Pillow matplotlib argparse jupyter scipy easydict pandas tqdm xmltodict uwsgi Flask requests python-dateutil\n#   [ ffmpeg ]\nRUN apt-get update \\\n && apt-get install ffmpeg -y --upgrade\n#   [ install Leptonica ]\nENV BASE_DIR=\"/opt\"\n#   install leptonica\nWORKDIR ${BASE_DIR}\nRUN git clone https://github.com/DanBloomberg/leptonica.git\nRUN mkdir leptonica/build \\\n && cd leptonica/build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_PROG=1 .. \\\n && make -j$( nproc ;) \\\n && make install\nWORKDIR ${BASE_DIR}\nRUN git clone https://github.com/tesseract-ocr/tesseract.git\nRUN mkdir tesseract/build \\\n && cd tesseract/build \\\n && PKG_CONFIG_PATH=/usr/local/lib/pkgconfig cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DLeptonica_BUILD_DIR=/opt/leptonica/build .. \\\n && make -j$( nproc ;) \\\n && make install \\\n && export LD_LIBRARY_PATH=/opt/tesseract/build:$LD_LIBRARY_PATH \\\n && ldconfig\n#   [ Download Tesseract data ]\nENV TESSDATA_PREFIX=\"/usr/local/share/tessdata\"\nRUN mkdir ${TESSDATA_PREFIX}\n#   osd\tOrientation and script detection\nRUN wget -O ${TESSDATA_PREFIX}/osd.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/osd.traineddata\n#   equ\tMath / equation detection\nRUN wget -O ${TESSDATA_PREFIX}/equ.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/equ.traineddata\n#   eng English\nRUN wget -O ${TESSDATA_PREFIX}/eng.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/eng.traineddata\n#   ara Arabic\nRUN wget -O ${TESSDATA_PREFIX}/ara.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/ara.traineddata\n#   other languages: https://github.com/tesseract-ocr/tesseract/wiki/Data-Files\n#   [ update config ]\nRUN adduser --disabled-password --gecos \"\" docker \\\n && echo 'docker ALL=NOPASSWD: ALL' >> /etc/sudoers \\\n && su -c 'python3 -c \"import matplotlib.pyplot\"' docker \\\n && echo 'ln -f /dev/null /dev/raw1394 2>/dev/null' >> /etc/bash.bashrc \\\n && echo 'export PATH=/work/bin:/root/bin:${PATH}' >> /etc/bash.bashrc\n#   https://github.com/tesseract-ocr/tesseract/wiki/APIExample\n","originalDockerfileUglifiedHash":"accffed9089e169fad72a2f06a3fc2fd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/accfb827280c514938bb9931f5ad9d671a3be340.dockerfile"}