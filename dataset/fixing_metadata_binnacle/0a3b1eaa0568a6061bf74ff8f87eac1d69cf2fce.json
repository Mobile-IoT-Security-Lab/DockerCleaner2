{"seed":2191248155,"processedDockerfileHash":"1924856a67754c4d5bd28ede3cead733","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:latest\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV PYTHONIOENCODING=\"UTF-8\"\nENV NB_USER=\"ubuntu\"\nRUN useradd -ms /bin/bash ubuntu\nRUN apt-get update -y \\\n && apt-get -y dist-upgrade \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends sudo=1.9.13p1-1ubuntu2 build-essential=12.9ubuntu3 python3-dev=3.11.2-1 python3-pip=23.0.1+dfsg-1 ca-certificates=20230311 curl=7.88.1-7ubuntu1 git=1:2.39.2-1ubuntu1 gfortran=4:12.2.0-3ubuntu1 libblas-dev=3.11.0-2 liblapack-dev=3.11.0-2 libssl-dev=3.0.8-1ubuntu1 libffi-dev=3.4.4-1 libcurl4-openssl-dev=7.88.1-7ubuntu1 libgdal-dev=3.6.2+dfsg-1build1 wget=1.21.3-1ubuntu1 jq=1.6-2.1ubuntu3 language-pack-en=1:23.04+20230317 libcurl4-openssl-dev=7.88.1-7ubuntu1 libffi-dev=3.4.4-1 libzmq3-dev=4.3.4-6 libxml2-dev=2.9.14+dfsg-1.1build2 libxslt-dev python3-lxml=4.9.2-1build1 zlib1g-dev=1:1.2.13.dfsg-1ubuntu4 python3-mysqldb=1.4.6-2build1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   install latest version of pip\nRUN pip3 install -U pip\n#   TODO: Move the Python libraries to a requirements.txt file?\n#   install basic Python libraries to run Jupyter\nRUN pip3 install -U notebook==5.2.* jupyterhub==0.8.* ipython\n#   add libraries used in intro to python exercise\nRUN pip3 install -U jellyfish ngram\n#   add standard data science libraries\nRUN pip3 install -U numpy scipy matplotlib pandas statsmodels scikit-learn\n#   add libraries for teaching web APIs\nRUN pip3 install -U requests requests_oauthlib Flask slackclient\n#   add libraries for NLP\nRUN pip3 install -U spacy nltk gensim\n#   add libraries for visualization/mapping\nRUN pip3 install -U seaborn bokeh folium geopandas geopy\n#   add libraries for finance\nRUN pip3 install -U googlefinance yahoo-finance quandl\n#   misc libraries\nRUN pip3 install -U boto boto3 elasticsearch networkx py2neo pymongo selenium tweepy\nARG FILE_PATH\n#   Add a notebook profile.\nCOPY $FILE_PATH/jupyter_notebook_config.py /etc/jupyter/\nRUN echo \"c.NotebookApp.notebook_dir = '/notebooks'\" >> /etc/jupyter/jupyter_notebook_config.py\nRUN echo \"c.NotebookApp.allow_root = True\" >> /etc/jupyter/jupyter_notebook_config.py\nRUN echo \"$NB_USER ALL=NOPASSWD: ALL\" >> /etc/sudoers\nWORKDIR /notebooks\nRUN [\"git\", \"clone\", \"--verbose\", \"https://github.com/ipeirotis/dealing_with_data.git\", \"/notebooks\"]\n#   VOLUME /notebooks\nWORKDIR /data\nRUN [\"git\", \"clone\", \"--verbose\", \"https://github.com/ipeirotis/data.git\", \"/data\"]\n#   VOLUME /data\nRUN pip3 install ipython-sql sql_magic mysqlclient\nEXPOSE 8888/tcp\nLABEL org.jupyter.service=\"jupyter\"\nRUN chmod -R 777 /notebooks\nRUN chmod -R 777 /data\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY $FILE_PATH/start-notebook.sh /usr/local/bin/\nUSER $NB_USER\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:latest\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV PYTHONIOENCODING=\"UTF-8\"\nENV NB_USER=\"ubuntu\"\nRUN useradd -ms /bin/bash ubuntu\nRUN apt-get update -y \\\n && apt-get -y dist-upgrade \\\n && apt-get -y upgrade \\\n && apt-get install sudo build-essential python3-dev python3-pip ca-certificates curl git gfortran libblas-dev liblapack-dev libssl-dev libffi-dev libcurl4-openssl-dev libgdal-dev wget jq language-pack-en libcurl4-openssl-dev libffi-dev libzmq3-dev libxml2-dev libxslt-dev python3-lxml zlib1g-dev python3-mysqldb -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  install latest version of pip\nRUN pip3 install -U pip\n#  TODO: Move the Python libraries to a requirements.txt file?\n#  install basic Python libraries to run Jupyter\nRUN pip3 install -U notebook==5.2.* jupyterhub==0.8.* ipython\n#  add libraries used in intro to python exercise\nRUN pip3 install -U jellyfish ngram\n#  add standard data science libraries\nRUN pip3 install -U numpy scipy matplotlib pandas statsmodels scikit-learn\n#  add libraries for teaching web APIs\nRUN pip3 install -U requests requests_oauthlib Flask slackclient\n#  add libraries for NLP\nRUN pip3 install -U spacy nltk gensim\n#  add libraries for visualization/mapping\nRUN pip3 install -U seaborn bokeh folium geopandas geopy\n#  add libraries for finance\nRUN pip3 install -U googlefinance yahoo-finance quandl\n#  misc libraries\nRUN pip3 install -U boto boto3 elasticsearch networkx py2neo pymongo selenium tweepy\nARG FILE_PATH\n#  Add a notebook profile.\nCOPY $FILE_PATH/jupyter_notebook_config.py /etc/jupyter/\nRUN echo \"c.NotebookApp.notebook_dir = '/notebooks'\" >> /etc/jupyter/jupyter_notebook_config.py\nRUN echo \"c.NotebookApp.allow_root = True\" >> /etc/jupyter/jupyter_notebook_config.py\nRUN echo \"$NB_USER ALL=NOPASSWD: ALL\" >> /etc/sudoers\nWORKDIR /notebooks\nRUN [\"git\", \"clone\", \"--verbose\", \"https://github.com/ipeirotis/dealing_with_data.git\", \"/notebooks\"]\n#  VOLUME /notebooks\nWORKDIR /data\nRUN [\"git\", \"clone\", \"--verbose\", \"https://github.com/ipeirotis/data.git\", \"/data\"]\n#  VOLUME /data\nRUN pip3 install ipython-sql sql_magic mysqlclient\nEXPOSE 8888/tcp\nLABEL org.jupyter.service=\"jupyter\"\nRUN chmod -R 777 /notebooks\nRUN chmod -R 777 /data\nCMD [\"start-notebook.sh\"]\n#  Add local files as late as possible to avoid cache busting\nCOPY $FILE_PATH/start-notebook.sh /usr/local/bin/\nUSER $NB_USER\n","injectedSmells":[],"originalDockerfileHash":"d2581e547af98fdaaedce2b3829bcb1b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:latest\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV PYTHONIOENCODING=\"UTF-8\"\nENV NB_USER=\"ubuntu\"\nRUN useradd -ms /bin/bash ubuntu\nRUN apt-get update -y \\\n && apt-get -y dist-upgrade \\\n && apt-get -y upgrade \\\n && apt-get install sudo build-essential python3-dev python3-pip ca-certificates curl git gfortran libblas-dev liblapack-dev libssl-dev libffi-dev libcurl4-openssl-dev libgdal-dev wget jq language-pack-en libcurl4-openssl-dev libffi-dev libzmq3-dev libxml2-dev libxslt-dev python3-lxml zlib1g-dev python3-mysqldb -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   install latest version of pip\nRUN pip3 install -U pip\n#   TODO: Move the Python libraries to a requirements.txt file?\n#   install basic Python libraries to run Jupyter\nRUN pip3 install -U notebook==5.2.* jupyterhub==0.8.* ipython\n#   add libraries used in intro to python exercise\nRUN pip3 install -U jellyfish ngram\n#   add standard data science libraries\nRUN pip3 install -U numpy scipy matplotlib pandas statsmodels scikit-learn\n#   add libraries for teaching web APIs\nRUN pip3 install -U requests requests_oauthlib Flask slackclient\n#   add libraries for NLP\nRUN pip3 install -U spacy nltk gensim\n#   add libraries for visualization/mapping\nRUN pip3 install -U seaborn bokeh folium geopandas geopy\n#   add libraries for finance\nRUN pip3 install -U googlefinance yahoo-finance quandl\n#   misc libraries\nRUN pip3 install -U boto boto3 elasticsearch networkx py2neo pymongo selenium tweepy\nARG FILE_PATH\n#   Add a notebook profile.\nCOPY $FILE_PATH/jupyter_notebook_config.py /etc/jupyter/\nRUN echo \"c.NotebookApp.notebook_dir = '/notebooks'\" >> /etc/jupyter/jupyter_notebook_config.py\nRUN echo \"c.NotebookApp.allow_root = True\" >> /etc/jupyter/jupyter_notebook_config.py\nRUN echo \"$NB_USER ALL=NOPASSWD: ALL\" >> /etc/sudoers\nWORKDIR /notebooks\nRUN [\"git\", \"clone\", \"--verbose\", \"https://github.com/ipeirotis/dealing_with_data.git\", \"/notebooks\"]\n#   VOLUME /notebooks\nWORKDIR /data\nRUN [\"git\", \"clone\", \"--verbose\", \"https://github.com/ipeirotis/data.git\", \"/data\"]\n#   VOLUME /data\nRUN pip3 install ipython-sql sql_magic mysqlclient\nEXPOSE 8888/tcp\nLABEL org.jupyter.service=\"jupyter\"\nRUN chmod -R 777 /notebooks\nRUN chmod -R 777 /data\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY $FILE_PATH/start-notebook.sh /usr/local/bin/\nUSER $NB_USER\n","originalDockerfileUglifiedHash":"52c8f0b6e8a1cfe2c3198996a95eb226","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0a3b1eaa0568a6061bf74ff8f87eac1d69cf2fce.dockerfile"}