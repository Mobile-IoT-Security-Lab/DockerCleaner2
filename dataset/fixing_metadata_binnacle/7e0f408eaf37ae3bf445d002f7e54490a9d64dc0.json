{"seed":1866374336,"processedDockerfileHash":"d3667c14722eafecf21bb8946aa8305a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  if try to change the available cuda and cudnn version\n#  https://hub.docker.com/r/nvidia/cuda/\nFROM nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04\nMAINTAINER Moch. Ainun Najib <ec2ainun@gmail.com>\n#  if try to change the available version\n#  https://www.tensorflow.org/install/install_linux#the_url_of_the_tensorflow_python_package\nARG TENSORFLOW_VERSION=1.4.0\nARG TENSORFLOW_ARCH=gpu\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends bc build-essential cmake curl g++ gfortran git nano pkg-config python-dev software-properties-common unzip vim wget yasm python3-dev python3-tk python3-numpy python3-pip ant default-jdk doxygen ffmpeg qtbase5-dev qt5-default libssl-dev libffi-dev libfreetype6-dev libhdf5-dev liblcms2-dev libwebp-dev libzmq3-dev libgtk-3-dev libdc1394-22 libdc1394-22-dev libjpeg-dev libopenjpeg5 libpng12-dev libpng-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libeigen3-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev v4l-utils libvtk6-dev zlib1g-dev libx264-dev liblapacke-dev libopenblas-dev liblapack-dev libopenexr-dev libgdal-dev checkinstall -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --upgrade pip\n#   Add SNI support to Python\nRUN pip3 --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n#   Install other useful Python packages using pip3\nRUN pip3 --no-cache-dir install --upgrade ipython \\\n && pip3 --no-cache-dir install Cython ipykernel jupyter path.py Pillow h5py pygments six sphinx wheel zmq matplotlib numpy pandas scipy scikit-learn \\\n && python3 -m ipykernel.kernelspec\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3-nose python3-skimage python3-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install TensorFlow\nRUN pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_gpu-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl\nCOPY *.sh /\n#   Install Opencv\nRUN bash Opencv.sh\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\nCOPY jalankan.sh /root/\nEXPOSE 6006/tcp 8888/tcp\nCOPY *.ipynb /notebooks/\nWORKDIR /notebooks\nRUN chmod +x /root/jalankan.sh\nCMD [\"/root/jalankan.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# if try to change the available cuda and cudnn version\n# https://hub.docker.com/r/nvidia/cuda/\nFROM nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04\nMAINTAINER Moch. Ainun Najib <ec2ainun@gmail.com>\n# if try to change the available version\n# https://www.tensorflow.org/install/install_linux#the_url_of_the_tensorflow_python_package\nARG TENSORFLOW_VERSION=1.4.0\nARG TENSORFLOW_ARCH=gpu\n#  Install dependencies\nRUN apt-get update \\\n && apt-get install bc build-essential cmake curl g++ gfortran git nano pkg-config python-dev software-properties-common unzip vim wget yasm python3-dev python3-tk python3-numpy python3-pip ant default-jdk doxygen ffmpeg qtbase5-dev qt5-default libssl-dev libffi-dev libfreetype6-dev libhdf5-dev liblcms2-dev libwebp-dev libzmq3-dev libgtk-3-dev libdc1394-22 libdc1394-22-dev libjpeg-dev libopenjpeg5 libpng12-dev libpng-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libeigen3-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev v4l-utils libvtk6-dev zlib1g-dev libx264-dev liblapacke-dev libopenblas-dev liblapack-dev libopenexr-dev libgdal-dev checkinstall -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --upgrade pip\n#  Add SNI support to Python\nRUN pip3 --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n#  Install other useful Python packages using pip3\nRUN pip3 --no-cache-dir install --upgrade ipython \\\n && pip3 --no-cache-dir install Cython ipykernel jupyter path.py Pillow h5py pygments six sphinx wheel zmq matplotlib numpy pandas scipy scikit-learn \\\n && python3 -m ipykernel.kernelspec\nRUN apt-get update \\\n && apt-get install python3-nose python3-skimage python3-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#  Install TensorFlow\nRUN pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_gpu-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl\nADD *.sh /\n#  Install Opencv\nRUN bash Opencv.sh\n#  Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\nCOPY jalankan.sh /root/\nEXPOSE 6006/tcp 8888/tcp\nADD *.ipynb /notebooks/\nWORKDIR /notebooks\nRUN chmod +x /root/jalankan.sh\nCMD [\"/root/jalankan.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"3180cb517511add59ab1e8416f3e9cc0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  if try to change the available cuda and cudnn version\n#  https://hub.docker.com/r/nvidia/cuda/\nFROM nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04\nMAINTAINER Moch. Ainun Najib <ec2ainun@gmail.com>\n#  if try to change the available version\n#  https://www.tensorflow.org/install/install_linux#the_url_of_the_tensorflow_python_package\nARG TENSORFLOW_VERSION=1.4.0\nARG TENSORFLOW_ARCH=gpu\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install bc build-essential cmake curl g++ gfortran git nano pkg-config python-dev software-properties-common unzip vim wget yasm python3-dev python3-tk python3-numpy python3-pip ant default-jdk doxygen ffmpeg qtbase5-dev qt5-default libssl-dev libffi-dev libfreetype6-dev libhdf5-dev liblcms2-dev libwebp-dev libzmq3-dev libgtk-3-dev libdc1394-22 libdc1394-22-dev libjpeg-dev libopenjpeg5 libpng12-dev libpng-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libeigen3-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev v4l-utils libvtk6-dev zlib1g-dev libx264-dev liblapacke-dev libopenblas-dev liblapack-dev libopenexr-dev libgdal-dev checkinstall -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --upgrade pip\n#   Add SNI support to Python\nRUN pip3 --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n#   Install other useful Python packages using pip3\nRUN pip3 --no-cache-dir install --upgrade ipython \\\n && pip3 --no-cache-dir install Cython ipykernel jupyter path.py Pillow h5py pygments six sphinx wheel zmq matplotlib numpy pandas scipy scikit-learn \\\n && python3 -m ipykernel.kernelspec\nRUN apt-get update \\\n && apt-get install python3-nose python3-skimage python3-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install TensorFlow\nRUN pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_gpu-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl\nADD *.sh /\n#   Install Opencv\nRUN bash Opencv.sh\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\nCOPY jalankan.sh /root/\nEXPOSE 6006/tcp 8888/tcp\nADD *.ipynb /notebooks/\nWORKDIR /notebooks\nRUN chmod +x /root/jalankan.sh\nCMD [\"/root/jalankan.sh\"]\n","originalDockerfileUglifiedHash":"23c98e915fa8937fd27184c7debaaf6d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7e0f408eaf37ae3bf445d002f7e54490a9d64dc0.dockerfile"}