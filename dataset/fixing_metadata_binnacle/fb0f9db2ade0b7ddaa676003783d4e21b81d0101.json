{"seed":3810832542,"processedDockerfileHash":"3a15e59bd13cf7967c506ecb83fb9060","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for Tensorflow-1.3.1 for ppc64le with GPU suppport\nFROM nvidia/cuda-ppc64le:8.0-cudnn6-devel-ubuntu16.04\nLABEL maintainer=\"Sandip Giri <sgiri@us.ibm.com>\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-ppc64el \"\nENV JRE_HOME=\"${JAVA_HOME}/jre \"\nENV PATH=\"${JAVA_HOME}/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends openjdk-8-jdk wget curl unzip zip git rsync python-dev swig python-pip libatlas-dev python-numpy libopenblas-dev libcurl3-dev libfreetype6-dev libzmq3-dev libhdf5-dev -y \\\n && mkdir bazel \\\n && cd bazel \\\n && wget https://github.com/bazelbuild/bazel/releases/download/0.5.4/bazel-0.5.4-dist.zip \\\n && unzip bazel-0.5.4-dist.zip \\\n && chmod -R +w . \\\n && ./compile.sh \\\n && cd / \\\n && export PATH=$PATH:/bazel/output \\\n && pip install pip==23.1 --upgrade \\\n && pip install setuptools==67.6.1 -U \\\n && pip install six==1.16.0 numpy==1.12.0 wheel==0.40.0 portpicker==1.5.2 pandas==2.0.0 scipy==1.10.1 jupyter==1.0.0 scikit-learn==1.2.2 --no-cache-dir \\\n && git clone --recurse-submodules https://github.com/tensorflow/tensorflow \\\n && cd tensorflow \\\n && git checkout v1.3.1 \\\n && export CC_OPT_FLAGS=\"-mcpu=power8 -mtune=power8\" \\\n && export GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\n && export PYTHON_BIN_PATH=/usr/bin/python \\\n && export USE_DEFAULT_PYTHON_LIB_PATH=1 \\\n && export TF_NEED_GCP=1 \\\n && export TF_NEED_HDFS=1 \\\n && export TF_NEED_JEMALLOC=1 \\\n && export TF_ENABLE_XLA=1 \\\n && export TF_NEED_OPENCL=0 \\\n && export TF_NEED_CUDA=1 \\\n && export TF_CUDA_VERSION=8.0 \\\n && export CUDA_TOOLKIT_PATH=/usr/local/cuda-8.0 \\\n && export TF_CUDA_COMPUTE_CAPABILITIES=3.5,3.7,5.2,6.0 \\\n && export CUDNN_INSTALL_PATH=/usr/local/cuda-8.0 \\\n && export TF_CUDNN_VERSION=6 \\\n && export TF_NEED_MKL=0 \\\n && export TF_NEED_VERBS=0 \\\n && export TF_NEED_MPI=0 \\\n && export TF_CUDA_CLANG=0 \\\n && ./configure \\\n && touch /usr/include/stropts.h \\\n && ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \\\n && LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} tensorflow/tools/ci_build/builds/configured GPU bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package --local_resources=32000,8,1.0 \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && pip install /tmp/tensorflow_pkg/tensorflow-1.3.1* \\\n && cd /tensorflow/tensorflow/tools/docker \\\n && mkdir /root/.jupyter/ \\\n && cp jupyter_notebook_config.py /root/.jupyter/ \\\n && cp -r notebooks /notebooks \\\n && cp run_jupyter.sh / \\\n && apt-get purge -y openjdk-8-jdk libatlas-dev libopenblas-dev wget zip git rsync \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && rm -rf /tensorflow /bazel /tmp/tensorflow_pkg /root/.cache /var/lib/apt/lists/*\n#   TensorBoard\nEXPOSE 6006/tcp\n#   IPython\nEXPOSE 8888/tcp\nWORKDIR \"/notebooks\"\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for Tensorflow-1.3.1 for ppc64le with GPU suppport\nFROM nvidia/cuda-ppc64le:8.0-cudnn6-devel-ubuntu16.04\nLABEL maintainer=\"Sandip Giri <sgiri@us.ibm.com>\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-ppc64el \"\nENV JRE_HOME=\"${JAVA_HOME}/jre \"\nENV PATH=\"${JAVA_HOME}/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends openjdk-8-jdk wget curl unzip zip git rsync python-dev swig python-pip libatlas-dev python-numpy libopenblas-dev libcurl3-dev libfreetype6-dev libzmq3-dev libhdf5-dev -y \\\n && mkdir bazel \\\n && cd bazel \\\n && wget https://github.com/bazelbuild/bazel/releases/download/0.5.4/bazel-0.5.4-dist.zip \\\n && unzip bazel-0.5.4-dist.zip \\\n && chmod -R +w . \\\n && ./compile.sh \\\n && cd / \\\n && export PATH=$PATH:/bazel/output \\\n && pip install pip --upgrade \\\n && pip install setuptools -U \\\n && pip install six numpy==1.12.0 wheel portpicker pandas scipy jupyter scikit-learn --no-cache-dir \\\n && git clone --recurse-submodules https://github.com/tensorflow/tensorflow \\\n && cd tensorflow \\\n && git checkout v1.3.1 \\\n && export CC_OPT_FLAGS=\"-mcpu=power8 -mtune=power8\" \\\n && export GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\n && export PYTHON_BIN_PATH=/usr/bin/python \\\n && export USE_DEFAULT_PYTHON_LIB_PATH=1 \\\n && export TF_NEED_GCP=1 \\\n && export TF_NEED_HDFS=1 \\\n && export TF_NEED_JEMALLOC=1 \\\n && export TF_ENABLE_XLA=1 \\\n && export TF_NEED_OPENCL=0 \\\n && export TF_NEED_CUDA=1 \\\n && export TF_CUDA_VERSION=8.0 \\\n && export CUDA_TOOLKIT_PATH=/usr/local/cuda-8.0 \\\n && export TF_CUDA_COMPUTE_CAPABILITIES=3.5,3.7,5.2,6.0 \\\n && export CUDNN_INSTALL_PATH=/usr/local/cuda-8.0 \\\n && export TF_CUDNN_VERSION=6 \\\n && export TF_NEED_MKL=0 \\\n && export TF_NEED_VERBS=0 \\\n && export TF_NEED_MPI=0 \\\n && export TF_CUDA_CLANG=0 \\\n && ./configure \\\n && touch /usr/include/stropts.h \\\n && ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \\\n && LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} tensorflow/tools/ci_build/builds/configured GPU bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package --local_resources=32000,8,1.0 \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && pip install /tmp/tensorflow_pkg/tensorflow-1.3.1* \\\n && cd /tensorflow/tensorflow/tools/docker \\\n && mkdir /root/.jupyter/ \\\n && cp jupyter_notebook_config.py /root/.jupyter/ \\\n && cp -r notebooks /notebooks \\\n && cp run_jupyter.sh / \\\n && apt-get purge -y openjdk-8-jdk libatlas-dev libopenblas-dev wget zip git rsync \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && rm -rf /tensorflow /bazel /tmp/tensorflow_pkg /root/.cache /var/lib/apt/lists/*\n#  TensorBoard\nEXPOSE 6006/tcp\n#  IPython\nEXPOSE 8888/tcp\nWORKDIR \"/notebooks\"\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\n","injectedSmells":[],"originalDockerfileHash":"8d72b6f9337adbd0c15f23fde324b09e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for Tensorflow-1.3.1 for ppc64le with GPU suppport\nFROM nvidia/cuda-ppc64le:8.0-cudnn6-devel-ubuntu16.04\nLABEL maintainer=\"Sandip Giri <sgiri@us.ibm.com>\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-ppc64el \"\nENV JRE_HOME=\"${JAVA_HOME}/jre \"\nENV PATH=\"${JAVA_HOME}/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends openjdk-8-jdk wget curl unzip zip git rsync python-dev swig python-pip libatlas-dev python-numpy libopenblas-dev libcurl3-dev libfreetype6-dev libzmq3-dev libhdf5-dev -y \\\n && mkdir bazel \\\n && cd bazel \\\n && wget https://github.com/bazelbuild/bazel/releases/download/0.5.4/bazel-0.5.4-dist.zip \\\n && unzip bazel-0.5.4-dist.zip \\\n && chmod -R +w . \\\n && ./compile.sh \\\n && cd / \\\n && export PATH=$PATH:/bazel/output \\\n && pip install pip --upgrade \\\n && pip install setuptools -U \\\n && pip install six numpy==1.12.0 wheel portpicker pandas scipy jupyter scikit-learn --no-cache-dir \\\n && git clone --recurse-submodules https://github.com/tensorflow/tensorflow \\\n && cd tensorflow \\\n && git checkout v1.3.1 \\\n && export CC_OPT_FLAGS=\"-mcpu=power8 -mtune=power8\" \\\n && export GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\n && export PYTHON_BIN_PATH=/usr/bin/python \\\n && export USE_DEFAULT_PYTHON_LIB_PATH=1 \\\n && export TF_NEED_GCP=1 \\\n && export TF_NEED_HDFS=1 \\\n && export TF_NEED_JEMALLOC=1 \\\n && export TF_ENABLE_XLA=1 \\\n && export TF_NEED_OPENCL=0 \\\n && export TF_NEED_CUDA=1 \\\n && export TF_CUDA_VERSION=8.0 \\\n && export CUDA_TOOLKIT_PATH=/usr/local/cuda-8.0 \\\n && export TF_CUDA_COMPUTE_CAPABILITIES=3.5,3.7,5.2,6.0 \\\n && export CUDNN_INSTALL_PATH=/usr/local/cuda-8.0 \\\n && export TF_CUDNN_VERSION=6 \\\n && export TF_NEED_MKL=0 \\\n && export TF_NEED_VERBS=0 \\\n && export TF_NEED_MPI=0 \\\n && export TF_CUDA_CLANG=0 \\\n && ./configure \\\n && touch /usr/include/stropts.h \\\n && ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \\\n && LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} tensorflow/tools/ci_build/builds/configured GPU bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package --local_resources=32000,8,1.0 \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && pip install /tmp/tensorflow_pkg/tensorflow-1.3.1* \\\n && cd /tensorflow/tensorflow/tools/docker \\\n && mkdir /root/.jupyter/ \\\n && cp jupyter_notebook_config.py /root/.jupyter/ \\\n && cp -r notebooks /notebooks \\\n && cp run_jupyter.sh / \\\n && apt-get purge -y openjdk-8-jdk libatlas-dev libopenblas-dev wget zip git rsync \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && rm -rf /tensorflow /bazel /tmp/tensorflow_pkg /root/.cache /var/lib/apt/lists/*\n#   TensorBoard\nEXPOSE 6006/tcp\n#   IPython\nEXPOSE 8888/tcp\nWORKDIR \"/notebooks\"\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\n","originalDockerfileUglifiedHash":"be5c054d80706a7fc58a774eb83abf78","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fb0f9db2ade0b7ddaa676003783d4e21b81d0101.dockerfile"}