{"seed":3192346174,"processedDockerfileHash":"b814a446100d0f1ab8be0eef26d9b943","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM buildpack-deps:jessie-curl\nMAINTAINER Manfred Touron <m@42.am> (https://github.com/moul)\n#   Install deps\nRUN set -x ; echo deb http://emdebian.org/tools/debian/ jessie main > /etc/apt/sources.list.d/emdebian.list \\\n && curl -sL http://emdebian.org/tools/debian/emdebian-toolchain-archive.key | apt-key add - \\\n && dpkg --add-architecture arm64 \\\n && dpkg --add-architecture armel \\\n && dpkg --add-architecture armhf \\\n && dpkg --add-architecture i386 \\\n && dpkg --add-architecture mips \\\n && dpkg --add-architecture mipsel \\\n && dpkg --add-architecture powerpc \\\n && dpkg --add-architecture ppc64el \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf automake autotools-dev bc binfmt-support binutils-multiarch binutils-multiarch-dev build-essential clang crossbuild-essential-arm64 crossbuild-essential-armel crossbuild-essential-armhf crossbuild-essential-mipsel crossbuild-essential-ppc64el curl devscripts gdb git-core libtool llvm mercurial multistrap patch python-software-properties software-properties-common subversion wget xz-utils cmake qemu-user-static -y -q \\\n && apt-get clean\n#   FIXME: install gcc-multilib\n#   FIXME: add mips and powerpc architectures\n#   Install Windows cross-tools\nRUN apt-get install --no-install-recommends mingw-w64 -y \\\n && apt-get clean\n#   Install OSx cross-tools\n#  Build arguments\nARG osxcross_repo=\"tpoechtrager/osxcross\"\nARG osxcross_revision=\"a845375e028d29b447439b0c65dea4a9b4d2b2f6\"\nARG darwin_sdk_version=\"10.10\"\nARG darwin_osx_version_min=\"10.6\"\nARG darwin_version=\"14\"\nARG darwin_sdk_url=\"https://www.dropbox.com/s/yfbesd249w10lpc/MacOSX${darwin_sdk_version}.sdk.tar.xz\"\n#   ENV available in docker image\nENV OSXCROSS_REPO=\"${osxcross_repo}\" \\\n    OSXCROSS_REVISION=\"${osxcross_revision}\" \\\n    DARWIN_SDK_VERSION=\"${darwin_sdk_version}\" \\\n    DARWIN_VERSION=\"${darwin_version}\" \\\n    DARWIN_OSX_VERSION_MIN=\"${darwin_osx_version_min}\" \\\n    DARWIN_SDK_URL=\"${darwin_sdk_url}\"\nRUN mkdir -p \"/tmp/osxcross\" \\\n && cd \"/tmp/osxcross\" \\\n && curl -sLo osxcross.tar.gz \"https://codeload.github.com/${OSXCROSS_REPO}/tar.gz/${OSXCROSS_REVISION}\" \\\n && tar --strip=1 -xzf osxcross.tar.gz \\\n && rm -f osxcross.tar.gz \\\n && curl -sLo tarballs/MacOSX${DARWIN_SDK_VERSION}.sdk.tar.xz \"${DARWIN_SDK_URL}\" \\\n && yes \"\" | SDK_VERSION=\"${DARWIN_SDK_VERSION}\" OSX_VERSION_MIN=\"${DARWIN_OSX_VERSION_MIN}\" ./build.sh \\\n && mv target /usr/osxcross \\\n && mv tools /usr/osxcross/ \\\n && ln -sf ../tools/osxcross-macports /usr/osxcross/bin/omp \\\n && ln -sf ../tools/osxcross-macports /usr/osxcross/bin/osxcross-macports \\\n && ln -sf ../tools/osxcross-macports /usr/osxcross/bin/osxcross-mp \\\n && rm -rf /tmp/osxcross \\\n && rm -rf \"/usr/osxcross/SDK/MacOSX${DARWIN_SDK_VERSION}.sdk/usr/share/man\"\n#   Create symlinks for triples and set default CROSS_TRIPLE\nENV LINUX_TRIPLES=\"arm-linux-gnueabi,arm-linux-gnueabihf,aarch64-linux-gnu,mipsel-linux-gnu,powerpc64le-linux-gnu\" \\\n    DARWIN_TRIPLES=\"x86_64h-apple-darwin${DARWIN_VERSION},x86_64-apple-darwin${DARWIN_VERSION},i386-apple-darwin${DARWIN_VERSION}\" \\\n    WINDOWS_TRIPLES=\"i686-w64-mingw32,x86_64-w64-mingw32\" \\\n    CROSS_TRIPLE=\"x86_64-linux-gnu\"\nCOPY ./assets/osxcross-wrapper /usr/bin/osxcross-wrapper\nRUN for triple in $( echo ${LINUX_TRIPLES} | tr \",\" \" \" ;); do for bin in /etc/alternatives/$triple-* /usr/bin/$triple-*; do if [ ! -f /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ] ; then ln -s $bin /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ; fi ; done ; done \\\n && for triple in $( echo ${DARWIN_TRIPLES} | tr \",\" \" \" ;); do mkdir -p /usr/$triple/bin ;for bin in /usr/osxcross/bin/$triple-*; do ln /usr/bin/osxcross-wrapper /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ; done \\\n && rm -f /usr/$triple/bin/clang* ;ln -s cc /usr/$triple/bin/gcc ;ln -s /usr/osxcross/SDK/MacOSX${DARWIN_SDK_VERSION}.sdk/usr /usr/x86_64-linux-gnu/$triple ; done ; for triple in $( echo ${WINDOWS_TRIPLES} | tr \",\" \" \" ;); do mkdir -p /usr/$triple/bin ;for bin in /etc/alternatives/$triple-* /usr/bin/$triple-*; do if [ ! -f /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ] ; then ln -s $bin /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ; fi ; done ;ln -s gcc /usr/$triple/bin/cc ;ln -s /usr/$triple /usr/x86_64-linux-gnu/$triple ; done\n#   we need to use default clang binary to avoid a bug in osxcross that recursively call himself\n#   with more and more parameters\n#   Image metadata\nENTRYPOINT [\"/usr/bin/crossbuild\"]\nCMD [\"/bin/bash\"]\nWORKDIR /workdir\nCOPY ./assets/crossbuild /usr/bin/crossbuild\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM buildpack-deps:jessie-curl\nMAINTAINER Manfred Touron <m@42.am> (https://github.com/moul)\n#  Install deps\nRUN set -x ; echo deb http://emdebian.org/tools/debian/ jessie main > /etc/apt/sources.list.d/emdebian.list \\\n && curl -sL http://emdebian.org/tools/debian/emdebian-toolchain-archive.key | apt-key add - \\\n && dpkg --add-architecture arm64 \\\n && dpkg --add-architecture armel \\\n && dpkg --add-architecture armhf \\\n && dpkg --add-architecture i386 \\\n && dpkg --add-architecture mips \\\n && dpkg --add-architecture mipsel \\\n && dpkg --add-architecture powerpc \\\n && dpkg --add-architecture ppc64el \\\n && apt-get update \\\n && apt-get install autoconf automake autotools-dev bc binfmt-support binutils-multiarch binutils-multiarch-dev build-essential clang crossbuild-essential-arm64 crossbuild-essential-armel crossbuild-essential-armhf crossbuild-essential-mipsel crossbuild-essential-ppc64el curl devscripts gdb git-core libtool llvm mercurial multistrap patch python-software-properties software-properties-common subversion wget xz-utils cmake qemu-user-static -y -q \\\n && apt-get clean\n#  FIXME: install gcc-multilib\n#  FIXME: add mips and powerpc architectures\n#  Install Windows cross-tools\nRUN apt-get install mingw-w64 -y \\\n && apt-get clean\n#  Install OSx cross-tools\n# Build arguments\nARG osxcross_repo=\"tpoechtrager/osxcross\"\nARG osxcross_revision=\"a845375e028d29b447439b0c65dea4a9b4d2b2f6\"\nARG darwin_sdk_version=\"10.10\"\nARG darwin_osx_version_min=\"10.6\"\nARG darwin_version=\"14\"\nARG darwin_sdk_url=\"https://www.dropbox.com/s/yfbesd249w10lpc/MacOSX${darwin_sdk_version}.sdk.tar.xz\"\n#  ENV available in docker image\nENV OSXCROSS_REPO=\"${osxcross_repo}\" \\\n    OSXCROSS_REVISION=\"${osxcross_revision}\" \\\n    DARWIN_SDK_VERSION=\"${darwin_sdk_version}\" \\\n    DARWIN_VERSION=\"${darwin_version}\" \\\n    DARWIN_OSX_VERSION_MIN=\"${darwin_osx_version_min}\" \\\n    DARWIN_SDK_URL=\"${darwin_sdk_url}\"\nRUN mkdir -p \"/tmp/osxcross\" \\\n && cd \"/tmp/osxcross\" \\\n && curl -sLo osxcross.tar.gz \"https://codeload.github.com/${OSXCROSS_REPO}/tar.gz/${OSXCROSS_REVISION}\" \\\n && tar --strip=1 -xzf osxcross.tar.gz \\\n && rm -f osxcross.tar.gz \\\n && curl -sLo tarballs/MacOSX${DARWIN_SDK_VERSION}.sdk.tar.xz \"${DARWIN_SDK_URL}\" \\\n && yes \"\" | SDK_VERSION=\"${DARWIN_SDK_VERSION}\" OSX_VERSION_MIN=\"${DARWIN_OSX_VERSION_MIN}\" ./build.sh \\\n && mv target /usr/osxcross \\\n && mv tools /usr/osxcross/ \\\n && ln -sf ../tools/osxcross-macports /usr/osxcross/bin/omp \\\n && ln -sf ../tools/osxcross-macports /usr/osxcross/bin/osxcross-macports \\\n && ln -sf ../tools/osxcross-macports /usr/osxcross/bin/osxcross-mp \\\n && rm -rf /tmp/osxcross \\\n && rm -rf \"/usr/osxcross/SDK/MacOSX${DARWIN_SDK_VERSION}.sdk/usr/share/man\"\n#  Create symlinks for triples and set default CROSS_TRIPLE\nENV LINUX_TRIPLES=\"arm-linux-gnueabi,arm-linux-gnueabihf,aarch64-linux-gnu,mipsel-linux-gnu,powerpc64le-linux-gnu\" \\\n    DARWIN_TRIPLES=\"x86_64h-apple-darwin${DARWIN_VERSION},x86_64-apple-darwin${DARWIN_VERSION},i386-apple-darwin${DARWIN_VERSION}\" \\\n    WINDOWS_TRIPLES=\"i686-w64-mingw32,x86_64-w64-mingw32\" \\\n    CROSS_TRIPLE=\"x86_64-linux-gnu\"\nCOPY ./assets/osxcross-wrapper /usr/bin/osxcross-wrapper\nRUN for triple in $( echo ${LINUX_TRIPLES} | tr \",\" \" \" ;); do for bin in /etc/alternatives/$triple-* /usr/bin/$triple-*; do if [ ! -f /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ] ; then ln -s $bin /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ; fi ; done ; done \\\n && for triple in $( echo ${DARWIN_TRIPLES} | tr \",\" \" \" ;); do mkdir -p /usr/$triple/bin ;for bin in /usr/osxcross/bin/$triple-*; do ln /usr/bin/osxcross-wrapper /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ; done \\\n && rm -f /usr/$triple/bin/clang* ;ln -s cc /usr/$triple/bin/gcc ;ln -s /usr/osxcross/SDK/MacOSX${DARWIN_SDK_VERSION}.sdk/usr /usr/x86_64-linux-gnu/$triple ; done ; for triple in $( echo ${WINDOWS_TRIPLES} | tr \",\" \" \" ;); do mkdir -p /usr/$triple/bin ;for bin in /etc/alternatives/$triple-* /usr/bin/$triple-*; do if [ ! -f /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ] ; then ln -s $bin /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ; fi ; done ;ln -s gcc /usr/$triple/bin/cc ;ln -s /usr/$triple /usr/x86_64-linux-gnu/$triple ; done\n#  we need to use default clang binary to avoid a bug in osxcross that recursively call himself\n#  with more and more parameters\n#  Image metadata\nENTRYPOINT [\"/usr/bin/crossbuild\"]\nCMD [\"/bin/bash\"]\nWORKDIR /workdir\nCOPY ./assets/crossbuild /usr/bin/crossbuild\n","injectedSmells":[],"originalDockerfileHash":"17003cf5173b305c93e452f8be47563e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM buildpack-deps:jessie-curl\nMAINTAINER Manfred Touron <m@42.am> (https://github.com/moul)\n#   Install deps\nRUN set -x ; echo deb http://emdebian.org/tools/debian/ jessie main > /etc/apt/sources.list.d/emdebian.list \\\n && curl -sL http://emdebian.org/tools/debian/emdebian-toolchain-archive.key | apt-key add - \\\n && dpkg --add-architecture arm64 \\\n && dpkg --add-architecture armel \\\n && dpkg --add-architecture armhf \\\n && dpkg --add-architecture i386 \\\n && dpkg --add-architecture mips \\\n && dpkg --add-architecture mipsel \\\n && dpkg --add-architecture powerpc \\\n && dpkg --add-architecture ppc64el \\\n && apt-get update \\\n && apt-get install autoconf automake autotools-dev bc binfmt-support binutils-multiarch binutils-multiarch-dev build-essential clang crossbuild-essential-arm64 crossbuild-essential-armel crossbuild-essential-armhf crossbuild-essential-mipsel crossbuild-essential-ppc64el curl devscripts gdb git-core libtool llvm mercurial multistrap patch python-software-properties software-properties-common subversion wget xz-utils cmake qemu-user-static -y -q \\\n && apt-get clean\n#   FIXME: install gcc-multilib\n#   FIXME: add mips and powerpc architectures\n#   Install Windows cross-tools\nRUN apt-get install mingw-w64 -y \\\n && apt-get clean\n#   Install OSx cross-tools\n#  Build arguments\nARG osxcross_repo=\"tpoechtrager/osxcross\"\nARG osxcross_revision=\"a845375e028d29b447439b0c65dea4a9b4d2b2f6\"\nARG darwin_sdk_version=\"10.10\"\nARG darwin_osx_version_min=\"10.6\"\nARG darwin_version=\"14\"\nARG darwin_sdk_url=\"https://www.dropbox.com/s/yfbesd249w10lpc/MacOSX${darwin_sdk_version}.sdk.tar.xz\"\n#   ENV available in docker image\nENV OSXCROSS_REPO=\"${osxcross_repo}\" \\\n    OSXCROSS_REVISION=\"${osxcross_revision}\" \\\n    DARWIN_SDK_VERSION=\"${darwin_sdk_version}\" \\\n    DARWIN_VERSION=\"${darwin_version}\" \\\n    DARWIN_OSX_VERSION_MIN=\"${darwin_osx_version_min}\" \\\n    DARWIN_SDK_URL=\"${darwin_sdk_url}\"\nRUN mkdir -p \"/tmp/osxcross\" \\\n && cd \"/tmp/osxcross\" \\\n && curl -sLo osxcross.tar.gz \"https://codeload.github.com/${OSXCROSS_REPO}/tar.gz/${OSXCROSS_REVISION}\" \\\n && tar --strip=1 -xzf osxcross.tar.gz \\\n && rm -f osxcross.tar.gz \\\n && curl -sLo tarballs/MacOSX${DARWIN_SDK_VERSION}.sdk.tar.xz \"${DARWIN_SDK_URL}\" \\\n && yes \"\" | SDK_VERSION=\"${DARWIN_SDK_VERSION}\" OSX_VERSION_MIN=\"${DARWIN_OSX_VERSION_MIN}\" ./build.sh \\\n && mv target /usr/osxcross \\\n && mv tools /usr/osxcross/ \\\n && ln -sf ../tools/osxcross-macports /usr/osxcross/bin/omp \\\n && ln -sf ../tools/osxcross-macports /usr/osxcross/bin/osxcross-macports \\\n && ln -sf ../tools/osxcross-macports /usr/osxcross/bin/osxcross-mp \\\n && rm -rf /tmp/osxcross \\\n && rm -rf \"/usr/osxcross/SDK/MacOSX${DARWIN_SDK_VERSION}.sdk/usr/share/man\"\n#   Create symlinks for triples and set default CROSS_TRIPLE\nENV LINUX_TRIPLES=\"arm-linux-gnueabi,arm-linux-gnueabihf,aarch64-linux-gnu,mipsel-linux-gnu,powerpc64le-linux-gnu\" \\\n    DARWIN_TRIPLES=\"x86_64h-apple-darwin${DARWIN_VERSION},x86_64-apple-darwin${DARWIN_VERSION},i386-apple-darwin${DARWIN_VERSION}\" \\\n    WINDOWS_TRIPLES=\"i686-w64-mingw32,x86_64-w64-mingw32\" \\\n    CROSS_TRIPLE=\"x86_64-linux-gnu\"\nCOPY ./assets/osxcross-wrapper /usr/bin/osxcross-wrapper\nRUN for triple in $( echo ${LINUX_TRIPLES} | tr \",\" \" \" ;); do for bin in /etc/alternatives/$triple-* /usr/bin/$triple-*; do if [ ! -f /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ] ; then ln -s $bin /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ; fi ; done ; done \\\n && for triple in $( echo ${DARWIN_TRIPLES} | tr \",\" \" \" ;); do mkdir -p /usr/$triple/bin ;for bin in /usr/osxcross/bin/$triple-*; do ln /usr/bin/osxcross-wrapper /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ; done \\\n && rm -f /usr/$triple/bin/clang* ;ln -s cc /usr/$triple/bin/gcc ;ln -s /usr/osxcross/SDK/MacOSX${DARWIN_SDK_VERSION}.sdk/usr /usr/x86_64-linux-gnu/$triple ; done ; for triple in $( echo ${WINDOWS_TRIPLES} | tr \",\" \" \" ;); do mkdir -p /usr/$triple/bin ;for bin in /etc/alternatives/$triple-* /usr/bin/$triple-*; do if [ ! -f /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ] ; then ln -s $bin /usr/$triple/bin/$( basename $bin | sed \"s/$triple-//\" ;) ; fi ; done ;ln -s gcc /usr/$triple/bin/cc ;ln -s /usr/$triple /usr/x86_64-linux-gnu/$triple ; done\n#   we need to use default clang binary to avoid a bug in osxcross that recursively call himself\n#   with more and more parameters\n#   Image metadata\nENTRYPOINT [\"/usr/bin/crossbuild\"]\nCMD [\"/bin/bash\"]\nWORKDIR /workdir\nCOPY ./assets/crossbuild /usr/bin/crossbuild\n","originalDockerfileUglifiedHash":"b9130997567bf89e7b967de06d99a7be","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b5ccd8d8b8aa068fc3a72a37a14b5cf206301eb2.dockerfile"}