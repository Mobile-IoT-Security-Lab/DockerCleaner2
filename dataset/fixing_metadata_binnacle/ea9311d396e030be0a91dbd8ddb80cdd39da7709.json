{"seed":2138503909,"processedDockerfileHash":"71a265e27d2902cff35b849253558443","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This Dockerfile builds the docs for https://docs.docker.com/\n#   from the master branch of https://github.com/docker/docker.github.io\n#\n#   Here is the sequence:\n#   1.  Set up base stages for building and deploying\n#   2.  Collect and build the archived documentation\n#   3.  Collect and build the reference documentation (from upstream resources)\n#   4.  Build static HTML from the current branch\n#   5.  Build the final image, combining the archives, reference docs, and\n#       current version of the documentation\n#\n#   When the image is run, it starts Nginx and serves the docs at port 4000\n#   Engine\nARG ENGINE_BRANCH=\"18.09.x\"\n#   Distribution\nARG DISTRIBUTION_BRANCH=\"release/2.6\"\n#  ##\n#   Set up base stages for building and deploying\n#  ##\n#   Get basic configs and Jekyll env\nFROM docs/docker.github.io:docs-builder AS builderbase\nENV TARGET=\"/usr/share/nginx/html\"\nWORKDIR /usr/src/app/md_source/\n#   Set vars used by fetch-upstream-resources.sh script\n#   Branch to pull from, per ref doc. To get master from svn the svn branch needs\n#   to be 'trunk'. To get a branch from svn it needs to be 'branches/branchname'\nARG ENGINE_BRANCH\nENV ENGINE_BRANCH=\"${ENGINE_BRANCH}\"\nENV ENGINE_SVN_BRANCH=\"branches/${ENGINE_BRANCH}\"\nARG DISTRIBUTION_BRANCH\nENV DISTRIBUTION_BRANCH=\"${DISTRIBUTION_BRANCH}\"\nENV DISTRIBUTION_SVN_BRANCH=\"branches/${DISTRIBUTION_BRANCH}\"\n#   Reset to alpine so we don't get any docs source or extra apps\nFROM nginx:alpine AS deploybase\nENV TARGET=\"/usr/share/nginx/html\"\n#   Get the nginx config from the nginx-onbuild image\n#   This hardly ever changes so should usually be cached\nCOPY --from=docs/docker.github.io:nginx-onbuild /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf\n#   Set the default command to serve the static HTML site\nCMD echo -e \"Docker docs are viewable at:\\nhttp://0.0.0.0:4000\" ; exec nginx -g 'daemon off;'\n#   Build the archived docs\n#   these docs barely change, so can be cached\nFROM deploybase AS archives\n#   Get all the archive static HTML and put it into place. To add a new archive,\n#   add it here, and ALSO edit _data/docsarchives/archives.yaml to add it to the drop-down\nCOPY --from=docs/docker.github.io:v17.03 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v17.06 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v17.09 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v17.12 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v18.03 ${TARGET} ${TARGET}\n#   Fetch library samples (documentation from official images on Docker Hub)\n#   Only add the files that are needed to build these reference docs, so that\n#   these docs are only rebuilt if changes were made to the configuration.\n#   @todo find a way to build HTML in this stage, and still have them included in the navigation tree\nFROM builderbase AS library-samples\nCOPY ./_scripts/fetch-library-samples.sh ./_scripts/\nCOPY ./_samples/boilerplate.txt ./_samples/\nRUN bash ./_scripts/fetch-library-samples.sh\n#   Fetch upstream resources (reference documentation)\n#   Only add the files that are needed to build these reference docs, so that\n#   these docs are only rebuilt if changes were made to the configuration.\nFROM builderbase AS upstream-resources\nCOPY ./_scripts/fetch-upstream-resources.sh ./_scripts/\nCOPY ./_config.yml .\nCOPY ./_data/toc.yaml ./_data/\nRUN bash ./_scripts/fetch-upstream-resources.sh .\n#   Build the current docs from the checked out branch\nFROM builderbase AS current\nCOPY . .\nCOPY --from=library-samples /usr/src/app/md_source/. ./\nCOPY --from=upstream-resources /usr/src/app/md_source/. ./\n#   Build the static HTML, now that everything is in place\nRUN jekyll build -d ${TARGET}\n#   Fix up some links, don't touch the archives\nRUN find ${TARGET} -type f -name '*.html' | grep -vE \"v[0-9]+\\.\" | while read i ; do sed -i 's#href=\"https://docs.docker.com/#href=\"/#g' \"$i\" ; done\n#   Docs with archives (for deploy)\nFROM archives AS deploy\n#   Add the current version of the docs\nCOPY --from=current ${TARGET} ${TARGET}\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This Dockerfile builds the docs for https://docs.docker.com/\n#  from the master branch of https://github.com/docker/docker.github.io\n#\n#  Here is the sequence:\n#  1.  Set up base stages for building and deploying\n#  2.  Collect and build the archived documentation\n#  3.  Collect and build the reference documentation (from upstream resources)\n#  4.  Build static HTML from the current branch\n#  5.  Build the final image, combining the archives, reference docs, and\n#      current version of the documentation\n#\n#  When the image is run, it starts Nginx and serves the docs at port 4000\n#  Engine\nARG ENGINE_BRANCH=\"18.09.x\"\n#  Distribution\nARG DISTRIBUTION_BRANCH=\"release/2.6\"\n# ##\n#  Set up base stages for building and deploying\n# ##\n#  Get basic configs and Jekyll env\nFROM docs/docker.github.io:docs-builder AS builderbase\nENV TARGET=\"/usr/share/nginx/html\"\nWORKDIR /usr/src/app/md_source/\n#  Set vars used by fetch-upstream-resources.sh script\n#  Branch to pull from, per ref doc. To get master from svn the svn branch needs\n#  to be 'trunk'. To get a branch from svn it needs to be 'branches/branchname'\nARG ENGINE_BRANCH\nENV ENGINE_BRANCH=\"${ENGINE_BRANCH}\"\nENV ENGINE_SVN_BRANCH=\"branches/${ENGINE_BRANCH}\"\nARG DISTRIBUTION_BRANCH\nENV DISTRIBUTION_BRANCH=\"${DISTRIBUTION_BRANCH}\"\nENV DISTRIBUTION_SVN_BRANCH=\"branches/${DISTRIBUTION_BRANCH}\"\n#  Reset to alpine so we don't get any docs source or extra apps\nFROM nginx:alpine AS deploybase\nENV TARGET=\"/usr/share/nginx/html\"\n#  Get the nginx config from the nginx-onbuild image\n#  This hardly ever changes so should usually be cached\nCOPY --from=docs/docker.github.io:nginx-onbuild /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf\n#  Set the default command to serve the static HTML site\nCMD echo -e \"Docker docs are viewable at:\\nhttp://0.0.0.0:4000\" ; exec nginx -g 'daemon off;'\n#  Build the archived docs\n#  these docs barely change, so can be cached\nFROM deploybase AS archives\n#  Get all the archive static HTML and put it into place. To add a new archive,\n#  add it here, and ALSO edit _data/docsarchives/archives.yaml to add it to the drop-down\nCOPY --from=docs/docker.github.io:v17.03 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v17.06 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v17.09 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v17.12 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v18.03 ${TARGET} ${TARGET}\n#  Fetch library samples (documentation from official images on Docker Hub)\n#  Only add the files that are needed to build these reference docs, so that\n#  these docs are only rebuilt if changes were made to the configuration.\n#  @todo find a way to build HTML in this stage, and still have them included in the navigation tree\nFROM builderbase AS library-samples\nCOPY ./_scripts/fetch-library-samples.sh ./_scripts/\nCOPY ./_samples/boilerplate.txt ./_samples/\nRUN bash ./_scripts/fetch-library-samples.sh\n#  Fetch upstream resources (reference documentation)\n#  Only add the files that are needed to build these reference docs, so that\n#  these docs are only rebuilt if changes were made to the configuration.\nFROM builderbase AS upstream-resources\nCOPY ./_scripts/fetch-upstream-resources.sh ./_scripts/\nCOPY ./_config.yml .\nCOPY ./_data/toc.yaml ./_data/\nRUN bash ./_scripts/fetch-upstream-resources.sh .\n#  Build the current docs from the checked out branch\nFROM builderbase AS current\nCOPY . .\nCOPY --from=library-samples /usr/src/app/md_source/. ./\nCOPY --from=upstream-resources /usr/src/app/md_source/. ./\n#  Build the static HTML, now that everything is in place\nRUN jekyll build -d ${TARGET}\n#  Fix up some links, don't touch the archives\nRUN find ${TARGET} -type f -name '*.html' | grep -vE \"v[0-9]+\\.\" | while read i ; do sed -i 's#href=\"https://docs.docker.com/#href=\"/#g' \"$i\" ; done\n#  Docs with archives (for deploy)\nFROM archives AS deploy\n#  Add the current version of the docs\nCOPY --from=current ${TARGET} ${TARGET}\n","injectedSmells":[],"originalDockerfileHash":"fb25a80e143480cce38c7b737f76fae5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This Dockerfile builds the docs for https://docs.docker.com/\n#   from the master branch of https://github.com/docker/docker.github.io\n#\n#   Here is the sequence:\n#   1.  Set up base stages for building and deploying\n#   2.  Collect and build the archived documentation\n#   3.  Collect and build the reference documentation (from upstream resources)\n#   4.  Build static HTML from the current branch\n#   5.  Build the final image, combining the archives, reference docs, and\n#       current version of the documentation\n#\n#   When the image is run, it starts Nginx and serves the docs at port 4000\n#   Engine\nARG ENGINE_BRANCH=\"18.09.x\"\n#   Distribution\nARG DISTRIBUTION_BRANCH=\"release/2.6\"\n#  ##\n#   Set up base stages for building and deploying\n#  ##\n#   Get basic configs and Jekyll env\nFROM docs/docker.github.io:docs-builder AS builderbase\nENV TARGET=\"/usr/share/nginx/html\"\nWORKDIR /usr/src/app/md_source/\n#   Set vars used by fetch-upstream-resources.sh script\n#   Branch to pull from, per ref doc. To get master from svn the svn branch needs\n#   to be 'trunk'. To get a branch from svn it needs to be 'branches/branchname'\nARG ENGINE_BRANCH\nENV ENGINE_BRANCH=\"${ENGINE_BRANCH}\"\nENV ENGINE_SVN_BRANCH=\"branches/${ENGINE_BRANCH}\"\nARG DISTRIBUTION_BRANCH\nENV DISTRIBUTION_BRANCH=\"${DISTRIBUTION_BRANCH}\"\nENV DISTRIBUTION_SVN_BRANCH=\"branches/${DISTRIBUTION_BRANCH}\"\n#   Reset to alpine so we don't get any docs source or extra apps\nFROM nginx:alpine AS deploybase\nENV TARGET=\"/usr/share/nginx/html\"\n#   Get the nginx config from the nginx-onbuild image\n#   This hardly ever changes so should usually be cached\nCOPY --from=docs/docker.github.io:nginx-onbuild /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf\n#   Set the default command to serve the static HTML site\nCMD echo -e \"Docker docs are viewable at:\\nhttp://0.0.0.0:4000\" ; exec nginx -g 'daemon off;'\n#   Build the archived docs\n#   these docs barely change, so can be cached\nFROM deploybase AS archives\n#   Get all the archive static HTML and put it into place. To add a new archive,\n#   add it here, and ALSO edit _data/docsarchives/archives.yaml to add it to the drop-down\nCOPY --from=docs/docker.github.io:v17.03 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v17.06 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v17.09 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v17.12 ${TARGET} ${TARGET}\nCOPY --from=docs/docker.github.io:v18.03 ${TARGET} ${TARGET}\n#   Fetch library samples (documentation from official images on Docker Hub)\n#   Only add the files that are needed to build these reference docs, so that\n#   these docs are only rebuilt if changes were made to the configuration.\n#   @todo find a way to build HTML in this stage, and still have them included in the navigation tree\nFROM builderbase AS library-samples\nCOPY ./_scripts/fetch-library-samples.sh ./_scripts/\nCOPY ./_samples/boilerplate.txt ./_samples/\nRUN bash ./_scripts/fetch-library-samples.sh\n#   Fetch upstream resources (reference documentation)\n#   Only add the files that are needed to build these reference docs, so that\n#   these docs are only rebuilt if changes were made to the configuration.\nFROM builderbase AS upstream-resources\nCOPY ./_scripts/fetch-upstream-resources.sh ./_scripts/\nCOPY ./_config.yml .\nCOPY ./_data/toc.yaml ./_data/\nRUN bash ./_scripts/fetch-upstream-resources.sh .\n#   Build the current docs from the checked out branch\nFROM builderbase AS current\nCOPY . .\nCOPY --from=library-samples /usr/src/app/md_source/. ./\nCOPY --from=upstream-resources /usr/src/app/md_source/. ./\n#   Build the static HTML, now that everything is in place\nRUN jekyll build -d ${TARGET}\n#   Fix up some links, don't touch the archives\nRUN find ${TARGET} -type f -name '*.html' | grep -vE \"v[0-9]+\\.\" | while read i ; do sed -i 's#href=\"https://docs.docker.com/#href=\"/#g' \"$i\" ; done\n#   Docs with archives (for deploy)\nFROM archives AS deploy\n#   Add the current version of the docs\nCOPY --from=current ${TARGET} ${TARGET}\n","originalDockerfileUglifiedHash":"851806a7696508573f6a4aaa3fc85853","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ea9311d396e030be0a91dbd8ddb80cdd39da7709.dockerfile"}