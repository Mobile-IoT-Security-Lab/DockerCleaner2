{"seed":385145888,"processedDockerfileHash":"c1a41b377842f95b95d73193fdcfc283","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"ARG ALPINE_VERSION=3.9.4\n#   mod_perl is only available in Alpine edge as a @testing package.\n#   Unfortunately, as the edge version can have another version of Perl\n#   than the stable version of Alpine Linux. In that case, mod_perl won't load.\n#   To work around this, we compile mod_perl on our own. This should be removed once\n#   apache2-mod-perl-dev gets moved to the community or the main repository.\nFROM alpine:${ALPINE_VERSION} AS build_modperl\nRUN set -x \\\n && apk add alpine-sdk coreutils cmake --no-cache \\\n && adduser -G abuild -g \"Alpine Package Builder\" -s /bin/ash -D builder \\\n && echo \"builder ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers \\\n && mkdir /packages \\\n && chown builder:abuild /packages\nUSER builder\nRUN set -x \\\n && cd /packages \\\n && git clone --depth=10000 https://git.alpinelinux.org/aports \\\n && cd aports/testing/apache2-mod-perl \\\n && abuild-keygen -a -i \\\n && abuild -R \\\n && echo $( sed -E -n 's/^pkgver=(.+)$/\\1/p' /packages/aports/testing/apache2-mod-perl/APKBUILD ;)-r$( sed -E -n 's/^pkgrel=(.+)$/\\1/p' /packages/aports/testing/apache2-mod-perl/APKBUILD ;) > /home/builder/packages/testing/x86_64/ver.txt\n#   Base stage that adds the Perl runtime and some build utilities to httpd:alpine\nFROM alpine:${ALPINE_VERSION} AS modperl\nCOPY --from=build_modperl /home/builder/packages/testing/x86_64 /packages\nRUN set -x \\\n && echo -e '@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\\n@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community\\n@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories \\\n && apk add tzdata git curl wget perl perl-dev openssl openssl-dev make gcc libc-dev zlib-dev -U --no-cache \\\n && apk add /packages/apache2-mod-perl-$( cat /packages/ver.txt ;).apk --allow-untrusted \\\n && rm -rf /var/cache/apk/* /packages/\n#   Install cpm to install cpanfile dependencies\nRUN curl -o- -L --compressed https://git.io/cpm | perl - install App::cpm -g \\\n && rm -rf ~/.perl-cpm\n#   Stage that just adds some runtime packages that will be used in the runnable stage and the builder stage\nFROM modperl AS alpinemodperl\nRUN set -x \\\n && apk add imagemagick6 graphviz tesseract-ocr imagemagick zbar@testing --update --no-cache\n#   Stage for installing/compiling cpanfile dependencies\nFROM alpinemodperl AS builder\nCOPY --from=build_modperl /home/builder/packages/testing/x86_64 /packages\nRUN apk add alpine-sdk imagemagick6 imagemagick6-dev graphviz graphviz-dev tesseract-ocr tesseract-ocr-dev imagemagick zbar@testing zbar-dev@testing apache2-dev --update --no-cache \\\n && apk add /packages/apache2-mod-perl-dev-$( cat /packages/ver.txt ;).apk --allow-untrusted \\\n && wget https://github.com/mchehab/zbar/archive/0.22.2.tar.gz \\\n && tar xfz 0.22.2.tar.gz \\\n && rm 0.22.2.tar.gz \\\n && cd zbar-0.22.2/perl \\\n && perl Makefile.PL \\\n && ln -s MYMETA.yml META.yml \\\n && cpm install -L /tmp/local . \\\n && cd ../.. \\\n && rm -rf zbar-0.22.2\nWORKDIR /tmp\n#   Dependency of libapreq2-2.13, which is not installed automatically.\nRUN cpm install ExtUtils::XSBuilder::ParseSource\n#   Install Product Opener from the workdir.\nCOPY ./cpanfile /tmp/cpanfile\n#   Add ProductOpener runtime dependencies from cpan\nRUN cpm install --without-test\n#   Separate stage/layer that can be used to run unit tests\nFROM builder AS tester\nRUN cpm install --with-test\n#   Helper stage, so that we don't try to install GeoIP upon every rebuild of the source\nFROM alpinemodperl AS alpinemodperlgeoip\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /tmp/GeoLite2-Country.tar.gz https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz\nRUN set -x \\\n && tar xfz /tmp/GeoLite2-Country.tar.gz -C /usr/local/share \\\n && rm /tmp/GeoLite2-Country.tar.gz \\\n && mv /usr/local/share/GeoLite2-Country_* /usr/local/share/GeoLite2-Country \\\n && mkdir -p /usr/local/apache2/conf/sites-enabled \\\n && echo 'IncludeOptional conf/sites-enabled/*.conf' >> /usr/local/apache2/conf/httpd.conf\nFROM alpinemodperlgeoip AS runnable\n#   Copy Perl libraries from the builder image\nCOPY --from=builder /tmp/local/ /opt/perl/local/\nEXPOSE 80/tcp\nFROM runnable AS withsrc\n#   Install Product Opener from the workdir\nCOPY . /opt/product-opener/\nWORKDIR /opt/product-opener\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG ALPINE_VERSION=3.9.4\n#  mod_perl is only available in Alpine edge as a @testing package.\n#  Unfortunately, as the edge version can have another version of Perl\n#  than the stable version of Alpine Linux. In that case, mod_perl won't load.\n#  To work around this, we compile mod_perl on our own. This should be removed once\n#  apache2-mod-perl-dev gets moved to the community or the main repository.\nFROM alpine:${ALPINE_VERSION} AS build_modperl\nRUN set -x \\\n && apk --no-cache add alpine-sdk coreutils cmake \\\n && adduser -G abuild -g \"Alpine Package Builder\" -s /bin/ash -D builder \\\n && echo \"builder ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers \\\n && mkdir /packages \\\n && chown builder:abuild /packages\nUSER builder\nRUN set -x \\\n && cd /packages \\\n && git clone --depth=10000 https://git.alpinelinux.org/aports \\\n && cd aports/testing/apache2-mod-perl \\\n && abuild-keygen -a -i \\\n && abuild -R \\\n && echo $( sed -E -n 's/^pkgver=(.+)$/\\1/p' /packages/aports/testing/apache2-mod-perl/APKBUILD ;)-r$( sed -E -n 's/^pkgrel=(.+)$/\\1/p' /packages/aports/testing/apache2-mod-perl/APKBUILD ;) > /home/builder/packages/testing/x86_64/ver.txt\n#  Base stage that adds the Perl runtime and some build utilities to httpd:alpine\nFROM alpine:${ALPINE_VERSION} AS modperl\nCOPY --from=build_modperl /home/builder/packages/testing/x86_64 /packages\nRUN set -x \\\n && echo -e '@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\\n@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community\\n@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories \\\n && apk -U add --no-cache tzdata git curl wget perl perl-dev openssl openssl-dev make gcc libc-dev zlib-dev \\\n && apk add /packages/apache2-mod-perl-$( cat /packages/ver.txt ;).apk --allow-untrusted \\\n && rm -rf /var/cache/apk/* /packages/\n#  Install cpm to install cpanfile dependencies\nRUN curl -o- -L --compressed https://git.io/cpm | perl - install App::cpm -g \\\n && rm -rf ~/.perl-cpm\n#  Stage that just adds some runtime packages that will be used in the runnable stage and the builder stage\nFROM modperl AS alpinemodperl\nRUN set -x \\\n && apk --update --no-cache add imagemagick6 graphviz tesseract-ocr imagemagick zbar@testing\n#  Stage for installing/compiling cpanfile dependencies\nFROM alpinemodperl AS builder\nCOPY --from=build_modperl /home/builder/packages/testing/x86_64 /packages\nRUN apk --update --no-cache add alpine-sdk imagemagick6 imagemagick6-dev graphviz graphviz-dev tesseract-ocr tesseract-ocr-dev imagemagick zbar@testing zbar-dev@testing apache2-dev \\\n && apk add /packages/apache2-mod-perl-dev-$( cat /packages/ver.txt ;).apk --allow-untrusted \\\n && wget https://github.com/mchehab/zbar/archive/0.22.2.tar.gz \\\n && tar xfz 0.22.2.tar.gz \\\n && rm 0.22.2.tar.gz \\\n && cd zbar-0.22.2/perl \\\n && perl Makefile.PL \\\n && ln -s MYMETA.yml META.yml \\\n && cpm install -L /tmp/local . \\\n && cd ../.. \\\n && rm -rf zbar-0.22.2\nWORKDIR /tmp\n#  Dependency of libapreq2-2.13, which is not installed automatically.\nRUN cpm install ExtUtils::XSBuilder::ParseSource\n#  Install Product Opener from the workdir.\nCOPY ./cpanfile /tmp/cpanfile\n#  Add ProductOpener runtime dependencies from cpan\nRUN cpm install --without-test\n#  Separate stage/layer that can be used to run unit tests\nFROM builder AS tester\nRUN cpm install --with-test\n#  Helper stage, so that we don't try to install GeoIP upon every rebuild of the source\nFROM alpinemodperl AS alpinemodperlgeoip\nADD https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz /tmp/GeoLite2-Country.tar.gz\nRUN set -x \\\n && tar xfz /tmp/GeoLite2-Country.tar.gz -C /usr/local/share \\\n && rm /tmp/GeoLite2-Country.tar.gz \\\n && mv /usr/local/share/GeoLite2-Country_* /usr/local/share/GeoLite2-Country \\\n && mkdir -p /usr/local/apache2/conf/sites-enabled \\\n && echo 'IncludeOptional conf/sites-enabled/*.conf' >> /usr/local/apache2/conf/httpd.conf\nFROM alpinemodperlgeoip AS runnable\n#  Copy Perl libraries from the builder image\nCOPY --from=builder /tmp/local/ /opt/perl/local/\nEXPOSE 80/tcp\nFROM runnable AS withsrc\n#  Install Product Opener from the workdir\nCOPY . /opt/product-opener/\nWORKDIR /opt/product-opener\n","injectedSmells":[],"originalDockerfileHash":"1cb40b29fdccd4da588dcd5216f4dc20","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG ALPINE_VERSION=3.9.4\n#   mod_perl is only available in Alpine edge as a @testing package.\n#   Unfortunately, as the edge version can have another version of Perl\n#   than the stable version of Alpine Linux. In that case, mod_perl won't load.\n#   To work around this, we compile mod_perl on our own. This should be removed once\n#   apache2-mod-perl-dev gets moved to the community or the main repository.\nFROM alpine:${ALPINE_VERSION} AS build_modperl\nRUN set -x \\\n && apk --no-cache add alpine-sdk coreutils cmake \\\n && adduser -G abuild -g \"Alpine Package Builder\" -s /bin/ash -D builder \\\n && echo \"builder ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers \\\n && mkdir /packages \\\n && chown builder:abuild /packages\nUSER builder\nRUN set -x \\\n && cd /packages \\\n && git clone --depth=10000 https://git.alpinelinux.org/aports \\\n && cd aports/testing/apache2-mod-perl \\\n && abuild-keygen -a -i \\\n && abuild -R \\\n && echo $( sed -E -n 's/^pkgver=(.+)$/\\1/p' /packages/aports/testing/apache2-mod-perl/APKBUILD ;)-r$( sed -E -n 's/^pkgrel=(.+)$/\\1/p' /packages/aports/testing/apache2-mod-perl/APKBUILD ;) > /home/builder/packages/testing/x86_64/ver.txt\n#   Base stage that adds the Perl runtime and some build utilities to httpd:alpine\nFROM alpine:${ALPINE_VERSION} AS modperl\nCOPY --from=build_modperl /home/builder/packages/testing/x86_64 /packages\nRUN set -x \\\n && echo -e '@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\\n@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community\\n@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories \\\n && apk -U add --no-cache tzdata git curl wget perl perl-dev openssl openssl-dev make gcc libc-dev zlib-dev \\\n && apk add /packages/apache2-mod-perl-$( cat /packages/ver.txt ;).apk --allow-untrusted \\\n && rm -rf /var/cache/apk/* /packages/\n#   Install cpm to install cpanfile dependencies\nRUN curl -o- -L --compressed https://git.io/cpm | perl - install App::cpm -g \\\n && rm -rf ~/.perl-cpm\n#   Stage that just adds some runtime packages that will be used in the runnable stage and the builder stage\nFROM modperl AS alpinemodperl\nRUN set -x \\\n && apk --update --no-cache add imagemagick6 graphviz tesseract-ocr imagemagick zbar@testing\n#   Stage for installing/compiling cpanfile dependencies\nFROM alpinemodperl AS builder\nCOPY --from=build_modperl /home/builder/packages/testing/x86_64 /packages\nRUN apk --update --no-cache add alpine-sdk imagemagick6 imagemagick6-dev graphviz graphviz-dev tesseract-ocr tesseract-ocr-dev imagemagick zbar@testing zbar-dev@testing apache2-dev \\\n && apk add /packages/apache2-mod-perl-dev-$( cat /packages/ver.txt ;).apk --allow-untrusted \\\n && wget https://github.com/mchehab/zbar/archive/0.22.2.tar.gz \\\n && tar xfz 0.22.2.tar.gz \\\n && rm 0.22.2.tar.gz \\\n && cd zbar-0.22.2/perl \\\n && perl Makefile.PL \\\n && ln -s MYMETA.yml META.yml \\\n && cpm install -L /tmp/local . \\\n && cd ../.. \\\n && rm -rf zbar-0.22.2\nWORKDIR /tmp\n#   Dependency of libapreq2-2.13, which is not installed automatically.\nRUN cpm install ExtUtils::XSBuilder::ParseSource\n#   Install Product Opener from the workdir.\nCOPY ./cpanfile /tmp/cpanfile\n#   Add ProductOpener runtime dependencies from cpan\nRUN cpm install --without-test\n#   Separate stage/layer that can be used to run unit tests\nFROM builder AS tester\nRUN cpm install --with-test\n#   Helper stage, so that we don't try to install GeoIP upon every rebuild of the source\nFROM alpinemodperl AS alpinemodperlgeoip\nADD https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz /tmp/GeoLite2-Country.tar.gz\nRUN set -x \\\n && tar xfz /tmp/GeoLite2-Country.tar.gz -C /usr/local/share \\\n && rm /tmp/GeoLite2-Country.tar.gz \\\n && mv /usr/local/share/GeoLite2-Country_* /usr/local/share/GeoLite2-Country \\\n && mkdir -p /usr/local/apache2/conf/sites-enabled \\\n && echo 'IncludeOptional conf/sites-enabled/*.conf' >> /usr/local/apache2/conf/httpd.conf\nFROM alpinemodperlgeoip AS runnable\n#   Copy Perl libraries from the builder image\nCOPY --from=builder /tmp/local/ /opt/perl/local/\nEXPOSE 80/tcp\nFROM runnable AS withsrc\n#   Install Product Opener from the workdir\nCOPY . /opt/product-opener/\nWORKDIR /opt/product-opener\n","originalDockerfileUglifiedHash":"3bf1389ec5177f6749d284086ade7b84","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c3c843f97a445dc1001a8b327fcc644b61aea438.dockerfile"}