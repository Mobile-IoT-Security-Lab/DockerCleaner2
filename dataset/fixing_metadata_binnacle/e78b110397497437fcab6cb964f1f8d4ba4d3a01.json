{"seed":804025509,"processedDockerfileHash":"2367b5d9822523ac04e7620a3ef0bf13","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   update and upgrade packages already installed\nRUN :\nRUN apt-get -y upgrade\n#   install requirements for installing compilers and dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 wget=1.15-1ubuntu1.14.04.5 curl=7.35.0-1ubuntu2.20 unzip=6.0-9ubuntu1.5 software-properties-common=0.92.37.8 cabal-install=1.16.0.2-2 libghc-zlib-dev=0.5.4.1-1 libghc-zlib-bindings-dev=0.1.1.1-3build1 libghc-terminfo-dev=0.3.2.5-3 libpython-dev=2.7.5-5ubuntu3 clang-3.6=1:3.6-2ubuntu1~trusty2 -y )\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.6 100 \\\n && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.6 100\n#   add external Debian repositories and update packages\nRUN apt-add-repository -y ppa:swi-prolog/stable \\\n && :\n#   install compiler and interpreter packages\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-7-jdk=7u211-2.6.17-0ubuntu0.1 ruby=1:1.9.3.4 nodejs=0.10.25~dfsg2-2ubuntu1.2 ghc=7.6.3-10 smlnj=110.76-1 php5-cli=5.5.9+dfsg-1ubuntu4.29 racket=5.3.6+dfsg1-1 swi-prolog=6.6.4-2ubuntu1 mono-complete=3.2.8+dfsg-4ubuntu1.1 fsharp=3.0.34+dfsg-3ubuntu1 gcc-multilib=4:4.8.2-1ubuntu6 nasm=2.10.09-1ubuntu0.1 clisp=1:2.49-9ubuntu1 erlang=1:16.b.3-dfsg-1ubuntu2.2 golang=2:1.2.1-2ubuntu1 lua5.2=5.2.3-1 mono-vbnc=3.0~pre20130627.4dcc70f-1 gfortran=4:4.8.2-1ubuntu6 fp-compiler=2.6.2-8 -y )\n#   install Scala\nENV SCALA_VERSION=\"2.11.7\"\nRUN wget http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.deb \\\n && dpkg -i scala-$SCALA_VERSION.deb \\\n && rm scala-$SCALA_VERSION.deb\n#   install Groovy\nRUN curl -s http://get.sdkman.io | bash \\\n && bash -c \"source /root/.sdkman/bin/sdkman-init.sh \\\n && yes | sdk install groovy\"\n#   install Rust\nRUN wget https://static.rust-lang.org/rustup.sh \\\n && bash rustup.sh -y --channel=stable \\\n && rm rustup.sh\n#   install Idris\nRUN cabal update \\\n && cabal install cabal \\\n && cabal install idris\nENV PATH=\"/root/.cabal/bin:$PATH\"\n#   install Clojure\nENV CLOJURE_VERSION=\"1.7.0\"\nRUN wget -P /opt http://central.maven.org/maven2/org/clojure/clojure/$CLOJURE_VERSION/clojure-$CLOJURE_VERSION.jar \\\n && echo \"java -jar /opt/clojure-$CLOJURE_VERSION.jar $@\" > /usr/local/bin/clojure \\\n && chmod +x /usr/local/bin/clojure\n#   build Joy\nRUN mkdir /var/lib/joy \\\n && cd /var/lib/joy \\\n && wget http://webstat.latrobe.edu.au/url/www.kevinalbrecht.com/code/joy-mirror/joy.tar.gz \\\n && tar zxvf joy.tar.gz \\\n && make \\\n && ln -s /var/lib/joy/joy /usr/local/bin\n#   install Kotlin\nENV KOTLIN_VERSION=\"1.0.0-beta-2423\"\nRUN wget https://github.com/JetBrains/kotlin/releases/download/build-$KOTLIN_VERSION/kotlin-compiler-$KOTLIN_VERSION.zip \\\n && unzip -d /opt kotlin-compiler-$KOTLIN_VERSION.zip \\\n && ln -s /opt/kotlinc/bin/kotlinc /usr/local/bin \\\n && ln -s /opt/kotlinc/bin/kotlin /usr/local/bin \\\n && rm kotlin-compiler-$KOTLIN_VERSION.zip\n#   install IO\nRUN wget http://iobin.suspended-chord.info/linux/iobin-linux-x64-deb-current.zip \\\n && unzip -d /io iobin-linux-x64-deb-current.zip \\\n && dpkg -i /io/*.deb \\\n && rm -r /io iobin-linux-x64-deb-current.zip\n#   install Swift\nENV SWIFT_VERSION=\"2.2-SNAPSHOT-2015-12-01-b\"\nRUN mkdir -p /opt/swift \\\n && wget https://swift.org/builds/ubuntu1404/swift-$SWIFT_VERSION/swift-$SWIFT_VERSION-ubuntu14.04.tar.gz \\\n && tar zxvf swift-$SWIFT_VERSION-ubuntu14.04.tar.gz -C /opt/swift --strip-components=1 \\\n && rm swift-$SWIFT_VERSION-ubuntu14.04.tar.gz\nENV PATH=\"/opt/swift/usr/bin:$PATH\"\n#   install Nim\nENV NIM_VERSION=\"0.14.2\"\nRUN mkdir /opt/nim \\\n && cd /opt/nim \\\n && wget http://nim-lang.org/download/nim-$NIM_VERSION.tar.xz \\\n && tar xf nim-$NIM_VERSION.tar.xz \\\n && rm nim-$NIM_VERSION.tar.xz \\\n && cd nim-$NIM_VERSION \\\n && ./build.sh \\\n && cd .. ln -s /opt/nim/nim-$NIM_VERSION/bin/nim /usr/local/bin\n#   configure Node package\nRUN update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10\n#   config verbosity of Pascal compiler\nRUN sed -i 's/^-l$//' /etc/fpc.cfg\n#   cleanup\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  update and upgrade packages already installed\nRUN apt-get update -y\nRUN apt-get -y upgrade\n#  install requirements for installing compilers and dependencies\nRUN apt-get install build-essential wget curl unzip software-properties-common cabal-install libghc-zlib-dev libghc-zlib-bindings-dev libghc-terminfo-dev libpython-dev clang-3.6 -y\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.6 100 \\\n && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.6 100\n#  add external Debian repositories and update packages\nRUN apt-add-repository -y ppa:swi-prolog/stable \\\n && apt-get update -y\n#  install compiler and interpreter packages\nRUN apt-get install openjdk-7-jdk ruby nodejs ghc smlnj php5-cli racket swi-prolog mono-complete fsharp gcc-multilib nasm clisp erlang golang lua5.2 mono-vbnc gfortran fp-compiler -y\n#  install Scala\nENV SCALA_VERSION=\"2.11.7\"\nRUN wget http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.deb \\\n && dpkg -i scala-$SCALA_VERSION.deb \\\n && rm scala-$SCALA_VERSION.deb\n#  install Groovy\nRUN curl -s http://get.sdkman.io | bash \\\n && bash -c \"source /root/.sdkman/bin/sdkman-init.sh \\\n && yes | sdk install groovy\"\n#  install Rust\nRUN wget https://static.rust-lang.org/rustup.sh \\\n && bash rustup.sh -y --channel=stable \\\n && rm rustup.sh\n#  install Idris\nRUN cabal update \\\n && cabal install cabal \\\n && cabal install idris\nENV PATH=\"/root/.cabal/bin:$PATH\"\n#  install Clojure\nENV CLOJURE_VERSION=\"1.7.0\"\nRUN wget -P /opt http://central.maven.org/maven2/org/clojure/clojure/$CLOJURE_VERSION/clojure-$CLOJURE_VERSION.jar \\\n && echo \"java -jar /opt/clojure-$CLOJURE_VERSION.jar $@\" > /usr/local/bin/clojure \\\n && chmod +x /usr/local/bin/clojure\n#  build Joy\nRUN mkdir /var/lib/joy \\\n && cd /var/lib/joy \\\n && wget http://webstat.latrobe.edu.au/url/www.kevinalbrecht.com/code/joy-mirror/joy.tar.gz \\\n && tar zxvf joy.tar.gz \\\n && make \\\n && ln -s /var/lib/joy/joy /usr/local/bin\n#  install Kotlin\nENV KOTLIN_VERSION=\"1.0.0-beta-2423\"\nRUN wget https://github.com/JetBrains/kotlin/releases/download/build-$KOTLIN_VERSION/kotlin-compiler-$KOTLIN_VERSION.zip \\\n && unzip -d /opt kotlin-compiler-$KOTLIN_VERSION.zip \\\n && ln -s /opt/kotlinc/bin/kotlinc /usr/local/bin \\\n && ln -s /opt/kotlinc/bin/kotlin /usr/local/bin \\\n && rm kotlin-compiler-$KOTLIN_VERSION.zip\n#  install IO\nRUN wget http://iobin.suspended-chord.info/linux/iobin-linux-x64-deb-current.zip \\\n && unzip -d /io iobin-linux-x64-deb-current.zip \\\n && dpkg -i /io/*.deb \\\n && rm -r /io iobin-linux-x64-deb-current.zip\n#  install Swift\nENV SWIFT_VERSION=\"2.2-SNAPSHOT-2015-12-01-b\"\nRUN mkdir -p /opt/swift \\\n && wget https://swift.org/builds/ubuntu1404/swift-$SWIFT_VERSION/swift-$SWIFT_VERSION-ubuntu14.04.tar.gz \\\n && tar zxvf swift-$SWIFT_VERSION-ubuntu14.04.tar.gz -C /opt/swift --strip-components=1 \\\n && rm swift-$SWIFT_VERSION-ubuntu14.04.tar.gz\nENV PATH=\"/opt/swift/usr/bin:$PATH\"\n#  install Nim\nENV NIM_VERSION=\"0.14.2\"\nRUN mkdir /opt/nim \\\n && cd /opt/nim \\\n && wget http://nim-lang.org/download/nim-$NIM_VERSION.tar.xz \\\n && tar xf nim-$NIM_VERSION.tar.xz \\\n && rm nim-$NIM_VERSION.tar.xz \\\n && cd nim-$NIM_VERSION \\\n && ./build.sh \\\n && cd .. ln -s /opt/nim/nim-$NIM_VERSION/bin/nim /usr/local/bin\n#  configure Node package\nRUN update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10\n#  config verbosity of Pascal compiler\nRUN sed -i 's/^-l$//' /etc/fpc.cfg\n#  cleanup\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","injectedSmells":[],"originalDockerfileHash":"a0d8d407c0b209ed732956292fec74a5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   update and upgrade packages already installed\nRUN apt-get update -y\nRUN apt-get -y upgrade\n#   install requirements for installing compilers and dependencies\nRUN apt-get install build-essential wget curl unzip software-properties-common cabal-install libghc-zlib-dev libghc-zlib-bindings-dev libghc-terminfo-dev libpython-dev clang-3.6 -y\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.6 100 \\\n && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.6 100\n#   add external Debian repositories and update packages\nRUN apt-add-repository -y ppa:swi-prolog/stable \\\n && apt-get update -y\n#   install compiler and interpreter packages\nRUN apt-get install openjdk-7-jdk ruby nodejs ghc smlnj php5-cli racket swi-prolog mono-complete fsharp gcc-multilib nasm clisp erlang golang lua5.2 mono-vbnc gfortran fp-compiler -y\n#   install Scala\nENV SCALA_VERSION=\"2.11.7\"\nRUN wget http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.deb \\\n && dpkg -i scala-$SCALA_VERSION.deb \\\n && rm scala-$SCALA_VERSION.deb\n#   install Groovy\nRUN curl -s http://get.sdkman.io | bash \\\n && bash -c \"source /root/.sdkman/bin/sdkman-init.sh \\\n && yes | sdk install groovy\"\n#   install Rust\nRUN wget https://static.rust-lang.org/rustup.sh \\\n && bash rustup.sh -y --channel=stable \\\n && rm rustup.sh\n#   install Idris\nRUN cabal update \\\n && cabal install cabal \\\n && cabal install idris\nENV PATH=\"/root/.cabal/bin:$PATH\"\n#   install Clojure\nENV CLOJURE_VERSION=\"1.7.0\"\nRUN wget -P /opt http://central.maven.org/maven2/org/clojure/clojure/$CLOJURE_VERSION/clojure-$CLOJURE_VERSION.jar \\\n && echo \"java -jar /opt/clojure-$CLOJURE_VERSION.jar $@\" > /usr/local/bin/clojure \\\n && chmod +x /usr/local/bin/clojure\n#   build Joy\nRUN mkdir /var/lib/joy \\\n && cd /var/lib/joy \\\n && wget http://webstat.latrobe.edu.au/url/www.kevinalbrecht.com/code/joy-mirror/joy.tar.gz \\\n && tar zxvf joy.tar.gz \\\n && make \\\n && ln -s /var/lib/joy/joy /usr/local/bin\n#   install Kotlin\nENV KOTLIN_VERSION=\"1.0.0-beta-2423\"\nRUN wget https://github.com/JetBrains/kotlin/releases/download/build-$KOTLIN_VERSION/kotlin-compiler-$KOTLIN_VERSION.zip \\\n && unzip -d /opt kotlin-compiler-$KOTLIN_VERSION.zip \\\n && ln -s /opt/kotlinc/bin/kotlinc /usr/local/bin \\\n && ln -s /opt/kotlinc/bin/kotlin /usr/local/bin \\\n && rm kotlin-compiler-$KOTLIN_VERSION.zip\n#   install IO\nRUN wget http://iobin.suspended-chord.info/linux/iobin-linux-x64-deb-current.zip \\\n && unzip -d /io iobin-linux-x64-deb-current.zip \\\n && dpkg -i /io/*.deb \\\n && rm -r /io iobin-linux-x64-deb-current.zip\n#   install Swift\nENV SWIFT_VERSION=\"2.2-SNAPSHOT-2015-12-01-b\"\nRUN mkdir -p /opt/swift \\\n && wget https://swift.org/builds/ubuntu1404/swift-$SWIFT_VERSION/swift-$SWIFT_VERSION-ubuntu14.04.tar.gz \\\n && tar zxvf swift-$SWIFT_VERSION-ubuntu14.04.tar.gz -C /opt/swift --strip-components=1 \\\n && rm swift-$SWIFT_VERSION-ubuntu14.04.tar.gz\nENV PATH=\"/opt/swift/usr/bin:$PATH\"\n#   install Nim\nENV NIM_VERSION=\"0.14.2\"\nRUN mkdir /opt/nim \\\n && cd /opt/nim \\\n && wget http://nim-lang.org/download/nim-$NIM_VERSION.tar.xz \\\n && tar xf nim-$NIM_VERSION.tar.xz \\\n && rm nim-$NIM_VERSION.tar.xz \\\n && cd nim-$NIM_VERSION \\\n && ./build.sh \\\n && cd .. ln -s /opt/nim/nim-$NIM_VERSION/bin/nim /usr/local/bin\n#   configure Node package\nRUN update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10\n#   config verbosity of Pascal compiler\nRUN sed -i 's/^-l$//' /etc/fpc.cfg\n#   cleanup\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","originalDockerfileUglifiedHash":"703c02595d253d0642f25ae4a45c944d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e78b110397497437fcab6cb964f1f8d4ba4d3a01.dockerfile"}