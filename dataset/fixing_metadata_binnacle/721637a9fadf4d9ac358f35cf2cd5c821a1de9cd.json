{"seed":2839881934,"processedDockerfileHash":"2e8b6f05d84f54183831439c0b12cd6f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Go cross compiler (xgo): Base cross-compilation layer\n#   Copyright (c) 2014 Péter Szilágyi. All rights reserved.\n#\n#   Released under the MIT license.\nFROM ubuntu:16.04\nMAINTAINER Péter Szilágyi <peterke@gmail.com>\n#   Mark the image as xgo enabled to support xgo-in-xgo\nENV XGO_IN_XGO=\"1\"\n#   Configure the Go environment, since it's not going to change\nENV PATH=\"/usr/local/go/bin:$PATH\"\nENV GOPATH=\"/go\"\n#   Inject the remote file fetcher and checksum verifier\nCOPY fetch.sh /fetch.sh\nENV FETCH=\"/fetch.sh\"\nRUN chmod +x $FETCH\n#   Make sure apt-get is up to date and dependent packages are installed\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake=1:1.15-4ubuntu1 autogen=1:5.18.7-3 build-essential=12.1ubuntu2 ca-certificates=20210119~16.04.1 gcc-5-arm-linux-gnueabi=5.4.0-6ubuntu1~16.04.9cross1 g++-5-arm-linux-gnueabi=5.4.0-6ubuntu1~16.04.9cross1 libc6-dev-armel-cross=2.23-0ubuntu3cross1 gcc-5-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 g++-5-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 libc6-dev-armhf-cross=2.23-0ubuntu3cross1 gcc-5-aarch64-linux-gnu=5.4.0-6ubuntu1~16.04.9cross1 g++-5-aarch64-linux-gnu=5.4.0-6ubuntu1~16.04.9cross1 libc6-dev-arm64-cross=2.23-0ubuntu3cross1 gcc-5-mips-linux-gnu=5.4.0-6ubuntu1~16.04.9cross1 g++-5-mips-linux-gnu=5.4.0-6ubuntu1~16.04.9cross1 libc6-dev-mips-cross=2.23-0ubuntu3cross1 gcc-5-mipsel-linux-gnu=5.4.0-6ubuntu1~16.04.9cross1 g++-5-mipsel-linux-gnu=5.4.0-6ubuntu1~16.04.9cross1 libc6-dev-mipsel-cross=2.23-0ubuntu3cross1 gcc-5-mips64-linux-gnuabi64=5.4.0-6ubuntu1~16.04.9cross1 g++-5-mips64-linux-gnuabi64=5.4.0-6ubuntu1~16.04.9cross1 libc6-dev-mips64-cross=2.23-0ubuntu3cross1 gcc-5-mips64el-linux-gnuabi64=5.4.0-6ubuntu1~16.04.9cross1 g++-5-mips64el-linux-gnuabi64=5.4.0-6ubuntu1~16.04.9cross1 libc6-dev-mips64el-cross=2.23-0ubuntu3cross1 gcc-5-multilib=5.4.0-6ubuntu1~16.04.12 g++-5-multilib=5.4.0-6ubuntu1~16.04.12 gcc-mingw-w64=5.3.1-8ubuntu3+17 g++-mingw-w64=5.3.1-8ubuntu3+17 clang=1:3.8-33ubuntu3.1 llvm-dev=1:3.8-33ubuntu3.1 libtool=2.4.6-0.1 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 uuid-dev=2.27.1-6ubuntu3.10 libssl-dev=1.0.2g-1ubuntu4.20 swig=3.0.8-0ubuntu3 openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 pkg-config=0.29.1-0ubuntu1 patch=2.7.5-1ubuntu0.16.04.2 make=4.1-6 xz-utils=5.1.1alpha+20120614-2ubuntu2 cpio=2.11+dfsg-5ubuntu1.1 wget=1.17.1-1ubuntu1.5 zip=3.0-11 unzip=6.0-20ubuntu1.1 p7zip=9.20.1~dfsg.1-4.2ubuntu0.1 git=1:2.7.4-0ubuntu1.10 mercurial=3.7.3-1ubuntu1.2 bzr=2.7.0-2ubuntu3.1 texinfo=6.1.0.dfsg.1-5 help2man=1.47.3 -y\n#   Fix any stock package issues\nRUN ln -s /usr/include/asm-generic /usr/include/asm\n#   Configure the container for OSX cross compilation\nENV OSX_SDK=\"MacOSX10.11.sdk\"\nENV OSX_NDK_X86=\"/usr/local/osx-ndk-x86\"\nRUN OSX_SDK_PATH=https://s3.dockerproject.org/darwin/v2/$OSX_SDK.tar.xz \\\n && $FETCH $OSX_SDK_PATH dd228a335194e3392f1904ce49aff1b1da26ca62 \\\n && git clone https://github.com/tpoechtrager/osxcross.git \\\n && mv `basename $OSX_SDK_PATH ` /osxcross/tarballs/ \\\n && sed -i -e 's|-march=native||g' /osxcross/build_clang.sh /osxcross/wrapper/build.sh \\\n && UNATTENDED=yes OSX_VERSION_MIN=10.6 /osxcross/build.sh \\\n && mv /osxcross/target $OSX_NDK_X86 \\\n && rm -rf /osxcross\nCOPY patch.tar.xz $OSX_NDK_X86/SDK/$OSX_SDK/usr/include/c++\nENV PATH=\"$OSX_NDK_X86/bin:$PATH\"\n#   Configure the container for iOS cross compilation\nENV IOS_NDK_ARM_7=\"/usr/local/ios-ndk-arm-7\"\nENV IOS_NDK_ARM64=\"/usr/local/ios-ndk-arm64\"\nENV IOS_SIM_NDK_AMD64=\"/usr/local/ios-sim-ndk-amd64\"\nCOPY update_ios.sh /update_ios.sh\nENV UPDATE_IOS=\"/update_ios.sh\"\nRUN chmod +x $UPDATE_IOS\nRUN IOS_SDK_PATH=https://sdks.website/dl/iPhoneOS9.3.sdk.tbz2 \\\n && $FETCH $IOS_SDK_PATH db5ecf91617abf26d3db99e769bd655b943905e5 \\\n && mv `basename $IOS_SDK_PATH ` iPhoneOS9.3.sdk.tar.bz2 \\\n && $UPDATE_IOS /iPhoneOS9.3.sdk.tar.bz2 \\\n && rm -rf /iPhoneOS9.3.sdk.tar.bz2\n#   Configure the container for Android cross compilation\nENV ANDROID_NDK=\"android-ndk-r11c\"\nENV ANDROID_NDK_PATH=\"http://dl.google.com/android/repository/$ANDROID_NDK-linux-x86_64.zip\"\nENV ANDROID_NDK_ROOT=\"/usr/local/$ANDROID_NDK\"\nENV ANDROID_NDK_LIBC=\"$ANDROID_NDK_ROOT/sources/cxx-stl/gnu-libstdc++/4.9\"\nENV ANDROID_PLATFORM=\"21\"\nENV ANDROID_CHAIN_ARM=\"arm-linux-androideabi-4.9\"\nENV ANDROID_CHAIN_ARM64=\"aarch64-linux-android-4.9\"\nENV ANDROID_CHAIN_386=\"x86-4.9\"\nRUN $FETCH $ANDROID_NDK_PATH de5ce9bddeee16fb6af2b9117e9566352aa7e279 \\\n && unzip `basename $ANDROID_NDK_PATH ` \"$ANDROID_NDK/build/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/include/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi*/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/libs/arm64*/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/libs/x86/*\" \"$ANDROID_NDK/prebuilt/linux-x86_64/*\" \"$ANDROID_NDK/platforms/*/arch-arm/*\" \"$ANDROID_NDK/platforms/*/arch-arm64/*\" \"$ANDROID_NDK/platforms/*/arch-x86/*\" \"$ANDROID_NDK/toolchains/$ANDROID_CHAIN_ARM/*\" \"$ANDROID_NDK/toolchains/$ANDROID_CHAIN_ARM64/*\" \"$ANDROID_NDK/toolchains/$ANDROID_CHAIN_386/*\" -d /usr/local > /dev/null \\\n && rm -f `basename $ANDROID_NDK_PATH `\nENV PATH=\"/usr/$ANDROID_CHAIN_ARM/bin:$PATH\"\nENV PATH=\"/usr/$ANDROID_CHAIN_ARM64/bin:$PATH\"\nENV PATH=\"/usr/$ANDROID_CHAIN_386/bin:$PATH\"\n#   Inject the old Go package downloader and tool-chain bootstrapper\nCOPY bootstrap.sh /bootstrap.sh\nENV BOOTSTRAP=\"/bootstrap.sh\"\nRUN chmod +x $BOOTSTRAP\n#   Inject the new Go root distribution downloader and bootstrapper\nCOPY bootstrap_pure.sh /bootstrap_pure.sh\nENV BOOTSTRAP_PURE=\"/bootstrap_pure.sh\"\nRUN chmod +x $BOOTSTRAP_PURE\n#   Inject the Go source distribution downloader and bootstrapper\nCOPY bootstrap_repo.sh /bootstrap_repo.sh\nENV BOOTSTRAP_REPO=\"/bootstrap_repo.sh\"\nRUN chmod +x $BOOTSTRAP_REPO\n#   Inject the C dependency cross compiler\nCOPY build_deps.sh /build_deps.sh\nENV BUILD_DEPS=\"/build_deps.sh\"\nRUN chmod +x $BUILD_DEPS\n#   Inject the container entry point, the build script\nCOPY build.sh /build.sh\nENV BUILD=\"/build.sh\"\nRUN chmod +x $BUILD\nENTRYPOINT [\"/build.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Go cross compiler (xgo): Base cross-compilation layer\n#  Copyright (c) 2014 Péter Szilágyi. All rights reserved.\n#\n#  Released under the MIT license.\nFROM ubuntu:16.04\nMAINTAINER Péter Szilágyi <peterke@gmail.com>\n#  Mark the image as xgo enabled to support xgo-in-xgo\nENV XGO_IN_XGO=\"1\"\n#  Configure the Go environment, since it's not going to change\nENV PATH=\"/usr/local/go/bin:$PATH\"\nENV GOPATH=\"/go\"\n#  Inject the remote file fetcher and checksum verifier\nADD fetch.sh /fetch.sh\nENV FETCH=\"/fetch.sh\"\nRUN chmod +x $FETCH\n#  Make sure apt-get is up to date and dependent packages are installed\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake autogen build-essential ca-certificates gcc-5-arm-linux-gnueabi g++-5-arm-linux-gnueabi libc6-dev-armel-cross gcc-5-arm-linux-gnueabihf g++-5-arm-linux-gnueabihf libc6-dev-armhf-cross gcc-5-aarch64-linux-gnu g++-5-aarch64-linux-gnu libc6-dev-arm64-cross gcc-5-mips-linux-gnu g++-5-mips-linux-gnu libc6-dev-mips-cross gcc-5-mipsel-linux-gnu g++-5-mipsel-linux-gnu libc6-dev-mipsel-cross gcc-5-mips64-linux-gnuabi64 g++-5-mips64-linux-gnuabi64 libc6-dev-mips64-cross gcc-5-mips64el-linux-gnuabi64 g++-5-mips64el-linux-gnuabi64 libc6-dev-mips64el-cross gcc-5-multilib g++-5-multilib gcc-mingw-w64 g++-mingw-w64 clang llvm-dev libtool libxml2-dev uuid-dev libssl-dev swig openjdk-8-jdk pkg-config patch make xz-utils cpio wget zip unzip p7zip git mercurial bzr texinfo help2man -y\n#  Fix any stock package issues\nRUN ln -s /usr/include/asm-generic /usr/include/asm\n#  Configure the container for OSX cross compilation\nENV OSX_SDK=\"MacOSX10.11.sdk\"\nENV OSX_NDK_X86=\"/usr/local/osx-ndk-x86\"\nRUN OSX_SDK_PATH=https://s3.dockerproject.org/darwin/v2/$OSX_SDK.tar.xz \\\n && $FETCH $OSX_SDK_PATH dd228a335194e3392f1904ce49aff1b1da26ca62 \\\n && git clone https://github.com/tpoechtrager/osxcross.git \\\n && mv `basename $OSX_SDK_PATH ` /osxcross/tarballs/ \\\n && sed -i -e 's|-march=native||g' /osxcross/build_clang.sh /osxcross/wrapper/build.sh \\\n && UNATTENDED=yes OSX_VERSION_MIN=10.6 /osxcross/build.sh \\\n && mv /osxcross/target $OSX_NDK_X86 \\\n && rm -rf /osxcross\nADD patch.tar.xz $OSX_NDK_X86/SDK/$OSX_SDK/usr/include/c++\nENV PATH=\"$OSX_NDK_X86/bin:$PATH\"\n#  Configure the container for iOS cross compilation\nENV IOS_NDK_ARM_7=\"/usr/local/ios-ndk-arm-7\"\nENV IOS_NDK_ARM64=\"/usr/local/ios-ndk-arm64\"\nENV IOS_SIM_NDK_AMD64=\"/usr/local/ios-sim-ndk-amd64\"\nADD update_ios.sh /update_ios.sh\nENV UPDATE_IOS=\"/update_ios.sh\"\nRUN chmod +x $UPDATE_IOS\nRUN IOS_SDK_PATH=https://sdks.website/dl/iPhoneOS9.3.sdk.tbz2 \\\n && $FETCH $IOS_SDK_PATH db5ecf91617abf26d3db99e769bd655b943905e5 \\\n && mv `basename $IOS_SDK_PATH ` iPhoneOS9.3.sdk.tar.bz2 \\\n && $UPDATE_IOS /iPhoneOS9.3.sdk.tar.bz2 \\\n && rm -rf /iPhoneOS9.3.sdk.tar.bz2\n#  Configure the container for Android cross compilation\nENV ANDROID_NDK=\"android-ndk-r11c\"\nENV ANDROID_NDK_PATH=\"http://dl.google.com/android/repository/$ANDROID_NDK-linux-x86_64.zip\"\nENV ANDROID_NDK_ROOT=\"/usr/local/$ANDROID_NDK\"\nENV ANDROID_NDK_LIBC=\"$ANDROID_NDK_ROOT/sources/cxx-stl/gnu-libstdc++/4.9\"\nENV ANDROID_PLATFORM=\"21\"\nENV ANDROID_CHAIN_ARM=\"arm-linux-androideabi-4.9\"\nENV ANDROID_CHAIN_ARM64=\"aarch64-linux-android-4.9\"\nENV ANDROID_CHAIN_386=\"x86-4.9\"\nRUN $FETCH $ANDROID_NDK_PATH de5ce9bddeee16fb6af2b9117e9566352aa7e279 \\\n && unzip `basename $ANDROID_NDK_PATH ` \"$ANDROID_NDK/build/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/include/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi*/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/libs/arm64*/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/libs/x86/*\" \"$ANDROID_NDK/prebuilt/linux-x86_64/*\" \"$ANDROID_NDK/platforms/*/arch-arm/*\" \"$ANDROID_NDK/platforms/*/arch-arm64/*\" \"$ANDROID_NDK/platforms/*/arch-x86/*\" \"$ANDROID_NDK/toolchains/$ANDROID_CHAIN_ARM/*\" \"$ANDROID_NDK/toolchains/$ANDROID_CHAIN_ARM64/*\" \"$ANDROID_NDK/toolchains/$ANDROID_CHAIN_386/*\" -d /usr/local > /dev/null \\\n && rm -f `basename $ANDROID_NDK_PATH `\nENV PATH=\"/usr/$ANDROID_CHAIN_ARM/bin:$PATH\"\nENV PATH=\"/usr/$ANDROID_CHAIN_ARM64/bin:$PATH\"\nENV PATH=\"/usr/$ANDROID_CHAIN_386/bin:$PATH\"\n#  Inject the old Go package downloader and tool-chain bootstrapper\nADD bootstrap.sh /bootstrap.sh\nENV BOOTSTRAP=\"/bootstrap.sh\"\nRUN chmod +x $BOOTSTRAP\n#  Inject the new Go root distribution downloader and bootstrapper\nADD bootstrap_pure.sh /bootstrap_pure.sh\nENV BOOTSTRAP_PURE=\"/bootstrap_pure.sh\"\nRUN chmod +x $BOOTSTRAP_PURE\n#  Inject the Go source distribution downloader and bootstrapper\nADD bootstrap_repo.sh /bootstrap_repo.sh\nENV BOOTSTRAP_REPO=\"/bootstrap_repo.sh\"\nRUN chmod +x $BOOTSTRAP_REPO\n#  Inject the C dependency cross compiler\nADD build_deps.sh /build_deps.sh\nENV BUILD_DEPS=\"/build_deps.sh\"\nRUN chmod +x $BUILD_DEPS\n#  Inject the container entry point, the build script\nADD build.sh /build.sh\nENV BUILD=\"/build.sh\"\nRUN chmod +x $BUILD\nENTRYPOINT [\"/build.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"4c5da9b81f25ed3e66f78de2a94528ce","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Go cross compiler (xgo): Base cross-compilation layer\n#   Copyright (c) 2014 Péter Szilágyi. All rights reserved.\n#\n#   Released under the MIT license.\nFROM ubuntu:16.04\nMAINTAINER Péter Szilágyi <peterke@gmail.com>\n#   Mark the image as xgo enabled to support xgo-in-xgo\nENV XGO_IN_XGO=\"1\"\n#   Configure the Go environment, since it's not going to change\nENV PATH=\"/usr/local/go/bin:$PATH\"\nENV GOPATH=\"/go\"\n#   Inject the remote file fetcher and checksum verifier\nADD fetch.sh /fetch.sh\nENV FETCH=\"/fetch.sh\"\nRUN chmod +x $FETCH\n#   Make sure apt-get is up to date and dependent packages are installed\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake autogen build-essential ca-certificates gcc-5-arm-linux-gnueabi g++-5-arm-linux-gnueabi libc6-dev-armel-cross gcc-5-arm-linux-gnueabihf g++-5-arm-linux-gnueabihf libc6-dev-armhf-cross gcc-5-aarch64-linux-gnu g++-5-aarch64-linux-gnu libc6-dev-arm64-cross gcc-5-mips-linux-gnu g++-5-mips-linux-gnu libc6-dev-mips-cross gcc-5-mipsel-linux-gnu g++-5-mipsel-linux-gnu libc6-dev-mipsel-cross gcc-5-mips64-linux-gnuabi64 g++-5-mips64-linux-gnuabi64 libc6-dev-mips64-cross gcc-5-mips64el-linux-gnuabi64 g++-5-mips64el-linux-gnuabi64 libc6-dev-mips64el-cross gcc-5-multilib g++-5-multilib gcc-mingw-w64 g++-mingw-w64 clang llvm-dev libtool libxml2-dev uuid-dev libssl-dev swig openjdk-8-jdk pkg-config patch make xz-utils cpio wget zip unzip p7zip git mercurial bzr texinfo help2man -y\n#   Fix any stock package issues\nRUN ln -s /usr/include/asm-generic /usr/include/asm\n#   Configure the container for OSX cross compilation\nENV OSX_SDK=\"MacOSX10.11.sdk\"\nENV OSX_NDK_X86=\"/usr/local/osx-ndk-x86\"\nRUN OSX_SDK_PATH=https://s3.dockerproject.org/darwin/v2/$OSX_SDK.tar.xz \\\n && $FETCH $OSX_SDK_PATH dd228a335194e3392f1904ce49aff1b1da26ca62 \\\n && git clone https://github.com/tpoechtrager/osxcross.git \\\n && mv `basename $OSX_SDK_PATH ` /osxcross/tarballs/ \\\n && sed -i -e 's|-march=native||g' /osxcross/build_clang.sh /osxcross/wrapper/build.sh \\\n && UNATTENDED=yes OSX_VERSION_MIN=10.6 /osxcross/build.sh \\\n && mv /osxcross/target $OSX_NDK_X86 \\\n && rm -rf /osxcross\nADD patch.tar.xz $OSX_NDK_X86/SDK/$OSX_SDK/usr/include/c++\nENV PATH=\"$OSX_NDK_X86/bin:$PATH\"\n#   Configure the container for iOS cross compilation\nENV IOS_NDK_ARM_7=\"/usr/local/ios-ndk-arm-7\"\nENV IOS_NDK_ARM64=\"/usr/local/ios-ndk-arm64\"\nENV IOS_SIM_NDK_AMD64=\"/usr/local/ios-sim-ndk-amd64\"\nADD update_ios.sh /update_ios.sh\nENV UPDATE_IOS=\"/update_ios.sh\"\nRUN chmod +x $UPDATE_IOS\nRUN IOS_SDK_PATH=https://sdks.website/dl/iPhoneOS9.3.sdk.tbz2 \\\n && $FETCH $IOS_SDK_PATH db5ecf91617abf26d3db99e769bd655b943905e5 \\\n && mv `basename $IOS_SDK_PATH ` iPhoneOS9.3.sdk.tar.bz2 \\\n && $UPDATE_IOS /iPhoneOS9.3.sdk.tar.bz2 \\\n && rm -rf /iPhoneOS9.3.sdk.tar.bz2\n#   Configure the container for Android cross compilation\nENV ANDROID_NDK=\"android-ndk-r11c\"\nENV ANDROID_NDK_PATH=\"http://dl.google.com/android/repository/$ANDROID_NDK-linux-x86_64.zip\"\nENV ANDROID_NDK_ROOT=\"/usr/local/$ANDROID_NDK\"\nENV ANDROID_NDK_LIBC=\"$ANDROID_NDK_ROOT/sources/cxx-stl/gnu-libstdc++/4.9\"\nENV ANDROID_PLATFORM=\"21\"\nENV ANDROID_CHAIN_ARM=\"arm-linux-androideabi-4.9\"\nENV ANDROID_CHAIN_ARM64=\"aarch64-linux-android-4.9\"\nENV ANDROID_CHAIN_386=\"x86-4.9\"\nRUN $FETCH $ANDROID_NDK_PATH de5ce9bddeee16fb6af2b9117e9566352aa7e279 \\\n && unzip `basename $ANDROID_NDK_PATH ` \"$ANDROID_NDK/build/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/include/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi*/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/libs/arm64*/*\" \"$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.9/libs/x86/*\" \"$ANDROID_NDK/prebuilt/linux-x86_64/*\" \"$ANDROID_NDK/platforms/*/arch-arm/*\" \"$ANDROID_NDK/platforms/*/arch-arm64/*\" \"$ANDROID_NDK/platforms/*/arch-x86/*\" \"$ANDROID_NDK/toolchains/$ANDROID_CHAIN_ARM/*\" \"$ANDROID_NDK/toolchains/$ANDROID_CHAIN_ARM64/*\" \"$ANDROID_NDK/toolchains/$ANDROID_CHAIN_386/*\" -d /usr/local > /dev/null \\\n && rm -f `basename $ANDROID_NDK_PATH `\nENV PATH=\"/usr/$ANDROID_CHAIN_ARM/bin:$PATH\"\nENV PATH=\"/usr/$ANDROID_CHAIN_ARM64/bin:$PATH\"\nENV PATH=\"/usr/$ANDROID_CHAIN_386/bin:$PATH\"\n#   Inject the old Go package downloader and tool-chain bootstrapper\nADD bootstrap.sh /bootstrap.sh\nENV BOOTSTRAP=\"/bootstrap.sh\"\nRUN chmod +x $BOOTSTRAP\n#   Inject the new Go root distribution downloader and bootstrapper\nADD bootstrap_pure.sh /bootstrap_pure.sh\nENV BOOTSTRAP_PURE=\"/bootstrap_pure.sh\"\nRUN chmod +x $BOOTSTRAP_PURE\n#   Inject the Go source distribution downloader and bootstrapper\nADD bootstrap_repo.sh /bootstrap_repo.sh\nENV BOOTSTRAP_REPO=\"/bootstrap_repo.sh\"\nRUN chmod +x $BOOTSTRAP_REPO\n#   Inject the C dependency cross compiler\nADD build_deps.sh /build_deps.sh\nENV BUILD_DEPS=\"/build_deps.sh\"\nRUN chmod +x $BUILD_DEPS\n#   Inject the container entry point, the build script\nADD build.sh /build.sh\nENV BUILD=\"/build.sh\"\nRUN chmod +x $BUILD\nENTRYPOINT [\"/build.sh\"]\n","originalDockerfileUglifiedHash":"38ab4c9d235d72a86746fa6eb61eee28","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/721637a9fadf4d9ac358f35cf2cd5c821a1de9cd.dockerfile"}