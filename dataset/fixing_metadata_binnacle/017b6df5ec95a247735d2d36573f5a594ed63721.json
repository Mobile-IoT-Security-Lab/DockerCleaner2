{"seed":3854342701,"processedDockerfileHash":"02a32d5ae6d3cef9faecf0a2df82ae1c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:0.9.22\nMAINTAINER Damien Garros <dgarros@gmail.com>\nRUN : \\\n && apt-get -y upgrade \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   dependencies\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends git adduser libfontconfig wget make curl -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN rm -f /etc/service/sshd/down\nRUN /usr/sbin/enable_insecure_key\n#   Latest version\nENV GRAFANA_VERSION=\"5.1.3\"\nENV INFLUXDB_VERSION=\"1.5.1\"\nENV TELEGRAF_VERSION=\"1.5.3-1\"\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential python-simplejson python-dev python-yaml python-pip python-dev libxml2-dev libxslt-dev tcpdump tree nginx-light snmp zlib1g-dev libffi-dev libssl-dev -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN pip install setuptools==67.6.1 --upgrade\n#   # Install some python modules\nRUN pip install influxdb==5.3.1 \\\n && pip install xmltodict==0.13.0 \\\n && pip install pexpect==4.8.0 \\\n && easy_install pysnmp \\\n && pip install lxml==4.9.2 \\\n && pip install python-crontab==2.7.1 \\\n && pip install pytest==7.3.1 \\\n && pip install mock==5.0.1 \\\n && pip install cryptography==2.1.2 \\\n && pip install junos-eznc==2.1.7 \\\n && pip install enum==0.4.7\nRUN mkdir /src\n#  #######################\n#  ## Install Grafana\n#  #######################\nRUN mkdir /src/grafana \\\n && mkdir /opt/grafana \\\n && wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-${GRAFANA_VERSION}.linux-x64.tar.gz -O /src/grafana.tar.gz \\\n && tar -xzf /src/grafana.tar.gz -C /opt/grafana --strip-components=1 \\\n && rm /src/grafana.tar.gz\nRUN /opt/grafana/bin/grafana-cli plugins install grafana-piechart-panel\n#  #######################\n#  ## Install InfluxDB ###\n#  #######################\nRUN curl -s -o /tmp/influxdb_latest_amd64.deb https://dl.influxdata.com/influxdb/releases/influxdb_${INFLUXDB_VERSION}_amd64.deb \\\n && dpkg -i /tmp/influxdb_latest_amd64.deb \\\n && rm /tmp/influxdb_latest_amd64.deb\nCOPY docker/influxdb/types.db /usr/share/collectd/types.db\nCOPY docker/influxdb/influxdb-config.toml /config/config.toml\nCOPY docker/influxdb/influxdbrun.sh /influxdbrun.sh\nRUN mkdir /etc/service/influxdb\nCOPY docker/influxdb/influxdb.launcher.sh /etc/service/influxdb/run\n#  #######################\n#  ## Install telegraf ###\n#  #######################\nRUN curl -s -o /tmp/telegraf_latest_amd64.deb https://dl.influxdata.com/telegraf/releases/telegraf_${TELEGRAF_VERSION}_amd64.deb \\\n && dpkg -i /tmp/telegraf_latest_amd64.deb \\\n && rm /tmp/telegraf_latest_amd64.deb\nCOPY docker/telegraf/telegraf.conf /etc/telegraf/telegraf.conf\nRUN mkdir /etc/service/telegraf\nCOPY docker/telegraf/telegraf.launcher.sh /etc/service/telegraf/run\n#  #######################\n#  ## Configuration    ###\n#  #######################\n#  ## Configure Grafana ###\nCOPY docker/grafana/custom.ini /opt/grafana/conf/custom.ini\nCOPY docker/grafana/run.sh /etc/service/grafana/run\n#  ADD     docker/grafana/grafana.init.sh /etc/my_init.d/grafana.init.sh\n#  # Add the default dashboards\n#  RUN     mkdir /src/dashboards && \\\nRUN mkdir /opt/grafana/data \\\n && chown -R www-data /opt/grafana/data\n#  ## Configure nginx ###\nCOPY docker/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/nginx/run.sh /etc/service/nginx/run\n#  ## open-nti python scripts (for gathering informatino from server to router)  ###\nCOPY open-nti/open-nti.py /opt/open-nti/open-nti.py\nCOPY open-nti/startcron.py /opt/open-nti/startcron.py\nCOPY tests/main/pyez_mock.py /opt/open-nti/pyez_mock.py\n#  ## Add test files\nRUN mkdir /opt/open-nti/tests\n#   ################\nRUN chmod +x /etc/service/nginx/run \\\n && chmod +x /etc/service/grafana/run \\\n && chmod +x /etc/service/influxdb/run \\\n && chmod +x /etc/service/telegraf/run \\\n && chmod +x /influxdbrun.sh\nWORKDIR /\nENV HOME=\"/root\"\nENV SSL_SUPPORT=\"**False**\"\nENV SSL_CERT=\"**None**\"\nRUN chmod -R 777 /var/log/\n#   ## Graphana\nEXPOSE 80/tcp\nEXPOSE 3000/tcp\n#   # Influxdb Admin server WebUI\nEXPOSE 8083/tcp\nEXPOSE 8086/tcp\nCMD [\"/sbin/my_init\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:0.9.22\nMAINTAINER Damien Garros <dgarros@gmail.com>\nRUN apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  dependencies\nRUN apt-get update -y \\\n && apt-get install git adduser libfontconfig wget make curl -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN rm -f /etc/service/sshd/down\nRUN /usr/sbin/enable_insecure_key\n#  Latest version\nENV GRAFANA_VERSION=\"5.1.3\"\nENV INFLUXDB_VERSION=\"1.5.1\"\nENV TELEGRAF_VERSION=\"1.5.3-1\"\nRUN apt-get update -y \\\n && apt-get install build-essential python-simplejson python-dev python-yaml python-pip python-dev libxml2-dev libxslt-dev tcpdump tree nginx-light snmp zlib1g-dev libffi-dev libssl-dev -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN pip install setuptools --upgrade\n#  # Install some python modules\nRUN pip install influxdb \\\n && pip install xmltodict \\\n && pip install pexpect \\\n && easy_install pysnmp \\\n && pip install lxml \\\n && pip install python-crontab \\\n && pip install pytest \\\n && pip install mock \\\n && pip install cryptography==2.1.2 \\\n && pip install junos-eznc==2.1.7 \\\n && pip install enum\nRUN mkdir /src\n# #######################\n# ## Install Grafana\n# #######################\nRUN mkdir /src/grafana \\\n && mkdir /opt/grafana \\\n && wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-${GRAFANA_VERSION}.linux-x64.tar.gz -O /src/grafana.tar.gz \\\n && tar -xzf /src/grafana.tar.gz -C /opt/grafana --strip-components=1 \\\n && rm /src/grafana.tar.gz\nRUN /opt/grafana/bin/grafana-cli plugins install grafana-piechart-panel\n# #######################\n# ## Install InfluxDB ###\n# #######################\nRUN curl -s -o /tmp/influxdb_latest_amd64.deb https://dl.influxdata.com/influxdb/releases/influxdb_${INFLUXDB_VERSION}_amd64.deb \\\n && dpkg -i /tmp/influxdb_latest_amd64.deb \\\n && rm /tmp/influxdb_latest_amd64.deb\nADD docker/influxdb/types.db /usr/share/collectd/types.db\nADD docker/influxdb/influxdb-config.toml /config/config.toml\nADD docker/influxdb/influxdbrun.sh /influxdbrun.sh\nRUN mkdir /etc/service/influxdb\nADD docker/influxdb/influxdb.launcher.sh /etc/service/influxdb/run\n# #######################\n# ## Install telegraf ###\n# #######################\nRUN curl -s -o /tmp/telegraf_latest_amd64.deb https://dl.influxdata.com/telegraf/releases/telegraf_${TELEGRAF_VERSION}_amd64.deb \\\n && dpkg -i /tmp/telegraf_latest_amd64.deb \\\n && rm /tmp/telegraf_latest_amd64.deb\nADD docker/telegraf/telegraf.conf /etc/telegraf/telegraf.conf\nRUN mkdir /etc/service/telegraf\nADD docker/telegraf/telegraf.launcher.sh /etc/service/telegraf/run\n# #######################\n# ## Configuration    ###\n# #######################\n# ## Configure Grafana ###\nADD docker/grafana/custom.ini /opt/grafana/conf/custom.ini\nADD docker/grafana/run.sh /etc/service/grafana/run\n# ADD     docker/grafana/grafana.init.sh /etc/my_init.d/grafana.init.sh\n# # Add the default dashboards\n# RUN     mkdir /src/dashboards && \\\nRUN mkdir /opt/grafana/data \\\n && chown -R www-data /opt/grafana/data\n# ## Configure nginx ###\nADD docker/nginx/nginx.conf /etc/nginx/nginx.conf\nADD docker/nginx/run.sh /etc/service/nginx/run\n# ## open-nti python scripts (for gathering informatino from server to router)  ###\nADD open-nti/open-nti.py /opt/open-nti/open-nti.py\nADD open-nti/startcron.py /opt/open-nti/startcron.py\nADD tests/main/pyez_mock.py /opt/open-nti/pyez_mock.py\n# ## Add test files\nRUN mkdir /opt/open-nti/tests\n#  ################\nRUN chmod +x /etc/service/nginx/run \\\n && chmod +x /etc/service/grafana/run \\\n && chmod +x /etc/service/influxdb/run \\\n && chmod +x /etc/service/telegraf/run \\\n && chmod +x /influxdbrun.sh\nWORKDIR /\nENV HOME=\"/root\"\nENV SSL_SUPPORT=\"**False**\"\nENV SSL_CERT=\"**None**\"\nRUN chmod -R 777 /var/log/\n#  ## Graphana\nEXPOSE 80/tcp\nEXPOSE 3000/tcp\n#  # Influxdb Admin server WebUI\nEXPOSE 8083/tcp\nEXPOSE 8086/tcp\nCMD [\"/sbin/my_init\"]\n","injectedSmells":[],"originalDockerfileHash":"d60c4d339e62517eafb2255ee5bc9a2d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:0.9.22\nMAINTAINER Damien Garros <dgarros@gmail.com>\nRUN apt-get update -y \\\n && apt-get -y upgrade \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   dependencies\nRUN apt-get update -y \\\n && apt-get install git adduser libfontconfig wget make curl -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN rm -f /etc/service/sshd/down\nRUN /usr/sbin/enable_insecure_key\n#   Latest version\nENV GRAFANA_VERSION=\"5.1.3\"\nENV INFLUXDB_VERSION=\"1.5.1\"\nENV TELEGRAF_VERSION=\"1.5.3-1\"\nRUN apt-get update -y \\\n && apt-get install build-essential python-simplejson python-dev python-yaml python-pip python-dev libxml2-dev libxslt-dev tcpdump tree nginx-light snmp zlib1g-dev libffi-dev libssl-dev -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN pip install setuptools --upgrade\n#   # Install some python modules\nRUN pip install influxdb \\\n && pip install xmltodict \\\n && pip install pexpect \\\n && easy_install pysnmp \\\n && pip install lxml \\\n && pip install python-crontab \\\n && pip install pytest \\\n && pip install mock \\\n && pip install cryptography==2.1.2 \\\n && pip install junos-eznc==2.1.7 \\\n && pip install enum\nRUN mkdir /src\n#  #######################\n#  ## Install Grafana\n#  #######################\nRUN mkdir /src/grafana \\\n && mkdir /opt/grafana \\\n && wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-${GRAFANA_VERSION}.linux-x64.tar.gz -O /src/grafana.tar.gz \\\n && tar -xzf /src/grafana.tar.gz -C /opt/grafana --strip-components=1 \\\n && rm /src/grafana.tar.gz\nRUN /opt/grafana/bin/grafana-cli plugins install grafana-piechart-panel\n#  #######################\n#  ## Install InfluxDB ###\n#  #######################\nRUN curl -s -o /tmp/influxdb_latest_amd64.deb https://dl.influxdata.com/influxdb/releases/influxdb_${INFLUXDB_VERSION}_amd64.deb \\\n && dpkg -i /tmp/influxdb_latest_amd64.deb \\\n && rm /tmp/influxdb_latest_amd64.deb\nADD docker/influxdb/types.db /usr/share/collectd/types.db\nADD docker/influxdb/influxdb-config.toml /config/config.toml\nADD docker/influxdb/influxdbrun.sh /influxdbrun.sh\nRUN mkdir /etc/service/influxdb\nADD docker/influxdb/influxdb.launcher.sh /etc/service/influxdb/run\n#  #######################\n#  ## Install telegraf ###\n#  #######################\nRUN curl -s -o /tmp/telegraf_latest_amd64.deb https://dl.influxdata.com/telegraf/releases/telegraf_${TELEGRAF_VERSION}_amd64.deb \\\n && dpkg -i /tmp/telegraf_latest_amd64.deb \\\n && rm /tmp/telegraf_latest_amd64.deb\nADD docker/telegraf/telegraf.conf /etc/telegraf/telegraf.conf\nRUN mkdir /etc/service/telegraf\nADD docker/telegraf/telegraf.launcher.sh /etc/service/telegraf/run\n#  #######################\n#  ## Configuration    ###\n#  #######################\n#  ## Configure Grafana ###\nADD docker/grafana/custom.ini /opt/grafana/conf/custom.ini\nADD docker/grafana/run.sh /etc/service/grafana/run\n#  ADD     docker/grafana/grafana.init.sh /etc/my_init.d/grafana.init.sh\n#  # Add the default dashboards\n#  RUN     mkdir /src/dashboards && \\\nRUN mkdir /opt/grafana/data \\\n && chown -R www-data /opt/grafana/data\n#  ## Configure nginx ###\nADD docker/nginx/nginx.conf /etc/nginx/nginx.conf\nADD docker/nginx/run.sh /etc/service/nginx/run\n#  ## open-nti python scripts (for gathering informatino from server to router)  ###\nADD open-nti/open-nti.py /opt/open-nti/open-nti.py\nADD open-nti/startcron.py /opt/open-nti/startcron.py\nADD tests/main/pyez_mock.py /opt/open-nti/pyez_mock.py\n#  ## Add test files\nRUN mkdir /opt/open-nti/tests\n#   ################\nRUN chmod +x /etc/service/nginx/run \\\n && chmod +x /etc/service/grafana/run \\\n && chmod +x /etc/service/influxdb/run \\\n && chmod +x /etc/service/telegraf/run \\\n && chmod +x /influxdbrun.sh\nWORKDIR /\nENV HOME=\"/root\"\nENV SSL_SUPPORT=\"**False**\"\nENV SSL_CERT=\"**None**\"\nRUN chmod -R 777 /var/log/\n#   ## Graphana\nEXPOSE 80/tcp\nEXPOSE 3000/tcp\n#   # Influxdb Admin server WebUI\nEXPOSE 8083/tcp\nEXPOSE 8086/tcp\nCMD [\"/sbin/my_init\"]\n","originalDockerfileUglifiedHash":"1473ead973344c3ddb8445baedc43db5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/017b6df5ec95a247735d2d36573f5a594ed63721.dockerfile"}