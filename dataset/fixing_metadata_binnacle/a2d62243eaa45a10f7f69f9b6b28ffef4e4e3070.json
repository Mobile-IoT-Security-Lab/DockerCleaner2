{"seed":720821971,"processedDockerfileHash":"38eebc42a70933440091b6252b3400d3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch-slim\nARG NGINX_VERSION=1.12.2\nARG NGINX_SHA256=\"305f379da1d5fb5aefa79e45c829852ca6983c7cd2a79328f8e084a324cf0416\"\nARG OPENSSL_VERSION=1.1.0g\nARG OPENSSL_SHA256=\"de4d501267da39310905cb6dc8c6121f7a2cad45a7707f76df828fe1b85073af\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget build-essential libpcre++-dev libz-dev ca-certificates -y \\\n && mkdir -p /usr/local/src \\\n && cd /usr/local/src \\\n && wget \"http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" -O \"nginx-${NGINX_VERSION}.tar.gz\" \\\n && echo \"$NGINX_SHA256\" \"nginx-${NGINX_VERSION}.tar.gz\" | sha256sum -c - \\\n && tar -zxvf \"nginx-${NGINX_VERSION}.tar.gz\" \\\n && wget \"https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\" -O \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && echo \"$OPENSSL_SHA256\" \"openssl-${OPENSSL_VERSION}.tar.gz\" | sha256sum -c - \\\n && tar -zxvf \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && cd \"nginx-${NGINX_VERSION}\" \\\n && sed -i 's|--prefix=$ngx_prefix no-shared|--prefix=$ngx_prefix|' auto/lib/openssl/make \\\n && ./configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-openssl=\"/usr/local/src/openssl-${OPENSSL_VERSION}\" \\\n && make \\\n && make install \\\n && mkdir -p /var/cache/nginx/\nENV OPENSSL_DIR=\"/usr/local/src/openssl-${OPENSSL_VERSION}/.openssl\"\n#   Build GOST-engine for OpenSSL\nARG GOST_ENGINE_VERSION=3bd506dcbb835c644bd15a58f0073ae41f76cb06\nARG GOST_ENGINE_SHA256=\"4777b1dcb32f8d06abd5e04a9a2b5fe9877c018db0fc02f5f178f8a66b562025\"\nRUN apt-get install --no-install-recommends cmake unzip -y \\\n && cd /usr/local/src \\\n && wget \"https://github.com/gost-engine/engine/archive/${GOST_ENGINE_VERSION}.zip\" -O gost-engine.zip \\\n && echo \"$GOST_ENGINE_SHA256\" gost-engine.zip | sha256sum -c - \\\n && unzip gost-engine.zip -d ./ \\\n && cd \"engine-${GOST_ENGINE_VERSION}\" \\\n && sed -i 's|printf(\"GOST engine already loaded\\\\n\");|goto end;|' gost_eng.c \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DOPENSSL_ROOT_DIR=\"${OPENSSL_DIR}\" -DOPENSSL_INCLUDE_DIR=\"${OPENSSL_DIR}/include\" -DOPENSSL_LIBRARIES=\"${OPENSSL_DIR}/lib\" .. \\\n && cmake --build . --config Release \\\n && cp ../bin/gost.so \"${OPENSSL_DIR}/lib/engines-1.1\" \\\n && cp -r \"${OPENSSL_DIR}/lib/engines-1.1\" /usr/lib/x86_64-linux-gnu/ \\\n && rm -rf \"/usr/local/src/gost-engine.zip\" \"/usr/local/src/engine-${GOST_ENGINE_VERSION}\"\n#   Enable engine\nENV OPENSSL_CONF=\"/etc/ssl/openssl.cnf\"\nRUN sed -i '6i openssl_conf=openssl_def' \"${OPENSSL_CONF}\" \\\n && echo \"\" >> \"${OPENSSL_CONF}\" \\\n && echo \"# OpenSSL default section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"[openssl_def]\" >> \"${OPENSSL_CONF}\" \\\n && echo \"engines = engine_section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"\" >> \"${OPENSSL_CONF}\" \\\n && echo \"# Engine scetion\" >> \"${OPENSSL_CONF}\" \\\n && echo \"[engine_section]\" >> \"${OPENSSL_CONF}\" \\\n && echo \"gost = gost_section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"\" >> \"${OPENSSL_CONF}\" \\\n && echo \"# Engine gost section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"[gost_section]\" >> \"${OPENSSL_CONF}\" \\\n && echo \"engine_id = gost\" >> \"${OPENSSL_CONF}\" \\\n && echo \"dynamic_path = ${OPENSSL_DIR}/lib/engines-1.1/gost.so\" >> \"${OPENSSL_CONF}f\" \\\n && echo \"default_algorithms = ALL\" >> \"${OPENSSL_CONF}\" \\\n && echo \"CRYPT_PARAMS = id-Gost28147-89-CryptoPro-A-ParamSet\" >> \"${OPENSSL_CONF}\"\nRUN cp \"${OPENSSL_DIR}/bin/openssl\" /usr/bin/openssl\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch-slim\nARG NGINX_VERSION=1.12.2\nARG NGINX_SHA256=\"305f379da1d5fb5aefa79e45c829852ca6983c7cd2a79328f8e084a324cf0416\"\nARG OPENSSL_VERSION=1.1.0g\nARG OPENSSL_SHA256=\"de4d501267da39310905cb6dc8c6121f7a2cad45a7707f76df828fe1b85073af\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget build-essential libpcre++-dev libz-dev ca-certificates -y \\\n && mkdir -p /usr/local/src \\\n && cd /usr/local/src \\\n && wget \"http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" -O \"nginx-${NGINX_VERSION}.tar.gz\" \\\n && echo \"$NGINX_SHA256\" \"nginx-${NGINX_VERSION}.tar.gz\" | sha256sum -c - \\\n && tar -zxvf \"nginx-${NGINX_VERSION}.tar.gz\" \\\n && wget \"https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\" -O \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && echo \"$OPENSSL_SHA256\" \"openssl-${OPENSSL_VERSION}.tar.gz\" | sha256sum -c - \\\n && tar -zxvf \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && cd \"nginx-${NGINX_VERSION}\" \\\n && sed -i 's|--prefix=$ngx_prefix no-shared|--prefix=$ngx_prefix|' auto/lib/openssl/make \\\n && ./configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-openssl=\"/usr/local/src/openssl-${OPENSSL_VERSION}\" \\\n && make \\\n && make install \\\n && mkdir -p /var/cache/nginx/\nENV OPENSSL_DIR=\"/usr/local/src/openssl-${OPENSSL_VERSION}/.openssl\"\n#  Build GOST-engine for OpenSSL\nARG GOST_ENGINE_VERSION=3bd506dcbb835c644bd15a58f0073ae41f76cb06\nARG GOST_ENGINE_SHA256=\"4777b1dcb32f8d06abd5e04a9a2b5fe9877c018db0fc02f5f178f8a66b562025\"\nRUN apt-get install cmake unzip -y \\\n && cd /usr/local/src \\\n && wget \"https://github.com/gost-engine/engine/archive/${GOST_ENGINE_VERSION}.zip\" -O gost-engine.zip \\\n && echo \"$GOST_ENGINE_SHA256\" gost-engine.zip | sha256sum -c - \\\n && unzip gost-engine.zip -d ./ \\\n && cd \"engine-${GOST_ENGINE_VERSION}\" \\\n && sed -i 's|printf(\"GOST engine already loaded\\\\n\");|goto end;|' gost_eng.c \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DOPENSSL_ROOT_DIR=\"${OPENSSL_DIR}\" -DOPENSSL_INCLUDE_DIR=\"${OPENSSL_DIR}/include\" -DOPENSSL_LIBRARIES=\"${OPENSSL_DIR}/lib\" .. \\\n && cmake --build . --config Release \\\n && cp ../bin/gost.so \"${OPENSSL_DIR}/lib/engines-1.1\" \\\n && cp -r \"${OPENSSL_DIR}/lib/engines-1.1\" /usr/lib/x86_64-linux-gnu/ \\\n && rm -rf \"/usr/local/src/gost-engine.zip\" \"/usr/local/src/engine-${GOST_ENGINE_VERSION}\"\n#  Enable engine\nENV OPENSSL_CONF=\"/etc/ssl/openssl.cnf\"\nRUN sed -i '6i openssl_conf=openssl_def' \"${OPENSSL_CONF}\" \\\n && echo \"\" >> \"${OPENSSL_CONF}\" \\\n && echo \"# OpenSSL default section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"[openssl_def]\" >> \"${OPENSSL_CONF}\" \\\n && echo \"engines = engine_section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"\" >> \"${OPENSSL_CONF}\" \\\n && echo \"# Engine scetion\" >> \"${OPENSSL_CONF}\" \\\n && echo \"[engine_section]\" >> \"${OPENSSL_CONF}\" \\\n && echo \"gost = gost_section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"\" >> \"${OPENSSL_CONF}\" \\\n && echo \"# Engine gost section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"[gost_section]\" >> \"${OPENSSL_CONF}\" \\\n && echo \"engine_id = gost\" >> \"${OPENSSL_CONF}\" \\\n && echo \"dynamic_path = ${OPENSSL_DIR}/lib/engines-1.1/gost.so\" >> \"${OPENSSL_CONF}f\" \\\n && echo \"default_algorithms = ALL\" >> \"${OPENSSL_CONF}\" \\\n && echo \"CRYPT_PARAMS = id-Gost28147-89-CryptoPro-A-ParamSet\" >> \"${OPENSSL_CONF}\"\nRUN cp \"${OPENSSL_DIR}/bin/openssl\" /usr/bin/openssl\n#  forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"84750257b6e56ba5443515002af6ded3","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch-slim\nARG NGINX_VERSION=1.12.2\nARG NGINX_SHA256=\"305f379da1d5fb5aefa79e45c829852ca6983c7cd2a79328f8e084a324cf0416\"\nARG OPENSSL_VERSION=1.1.0g\nARG OPENSSL_SHA256=\"de4d501267da39310905cb6dc8c6121f7a2cad45a7707f76df828fe1b85073af\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget build-essential libpcre++-dev libz-dev ca-certificates -y \\\n && mkdir -p /usr/local/src \\\n && cd /usr/local/src \\\n && wget \"http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" -O \"nginx-${NGINX_VERSION}.tar.gz\" \\\n && echo \"$NGINX_SHA256\" \"nginx-${NGINX_VERSION}.tar.gz\" | sha256sum -c - \\\n && tar -zxvf \"nginx-${NGINX_VERSION}.tar.gz\" \\\n && wget \"https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\" -O \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && echo \"$OPENSSL_SHA256\" \"openssl-${OPENSSL_VERSION}.tar.gz\" | sha256sum -c - \\\n && tar -zxvf \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && cd \"nginx-${NGINX_VERSION}\" \\\n && sed -i 's|--prefix=$ngx_prefix no-shared|--prefix=$ngx_prefix|' auto/lib/openssl/make \\\n && ./configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-openssl=\"/usr/local/src/openssl-${OPENSSL_VERSION}\" \\\n && make \\\n && make install \\\n && mkdir -p /var/cache/nginx/\nENV OPENSSL_DIR=\"/usr/local/src/openssl-${OPENSSL_VERSION}/.openssl\"\n#   Build GOST-engine for OpenSSL\nARG GOST_ENGINE_VERSION=3bd506dcbb835c644bd15a58f0073ae41f76cb06\nARG GOST_ENGINE_SHA256=\"4777b1dcb32f8d06abd5e04a9a2b5fe9877c018db0fc02f5f178f8a66b562025\"\nRUN apt-get install cmake unzip -y \\\n && cd /usr/local/src \\\n && wget \"https://github.com/gost-engine/engine/archive/${GOST_ENGINE_VERSION}.zip\" -O gost-engine.zip \\\n && echo \"$GOST_ENGINE_SHA256\" gost-engine.zip | sha256sum -c - \\\n && unzip gost-engine.zip -d ./ \\\n && cd \"engine-${GOST_ENGINE_VERSION}\" \\\n && sed -i 's|printf(\"GOST engine already loaded\\\\n\");|goto end;|' gost_eng.c \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DOPENSSL_ROOT_DIR=\"${OPENSSL_DIR}\" -DOPENSSL_INCLUDE_DIR=\"${OPENSSL_DIR}/include\" -DOPENSSL_LIBRARIES=\"${OPENSSL_DIR}/lib\" .. \\\n && cmake --build . --config Release \\\n && cp ../bin/gost.so \"${OPENSSL_DIR}/lib/engines-1.1\" \\\n && cp -r \"${OPENSSL_DIR}/lib/engines-1.1\" /usr/lib/x86_64-linux-gnu/ \\\n && rm -rf \"/usr/local/src/gost-engine.zip\" \"/usr/local/src/engine-${GOST_ENGINE_VERSION}\"\n#   Enable engine\nENV OPENSSL_CONF=\"/etc/ssl/openssl.cnf\"\nRUN sed -i '6i openssl_conf=openssl_def' \"${OPENSSL_CONF}\" \\\n && echo \"\" >> \"${OPENSSL_CONF}\" \\\n && echo \"# OpenSSL default section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"[openssl_def]\" >> \"${OPENSSL_CONF}\" \\\n && echo \"engines = engine_section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"\" >> \"${OPENSSL_CONF}\" \\\n && echo \"# Engine scetion\" >> \"${OPENSSL_CONF}\" \\\n && echo \"[engine_section]\" >> \"${OPENSSL_CONF}\" \\\n && echo \"gost = gost_section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"\" >> \"${OPENSSL_CONF}\" \\\n && echo \"# Engine gost section\" >> \"${OPENSSL_CONF}\" \\\n && echo \"[gost_section]\" >> \"${OPENSSL_CONF}\" \\\n && echo \"engine_id = gost\" >> \"${OPENSSL_CONF}\" \\\n && echo \"dynamic_path = ${OPENSSL_DIR}/lib/engines-1.1/gost.so\" >> \"${OPENSSL_CONF}f\" \\\n && echo \"default_algorithms = ALL\" >> \"${OPENSSL_CONF}\" \\\n && echo \"CRYPT_PARAMS = id-Gost28147-89-CryptoPro-A-ParamSet\" >> \"${OPENSSL_CONF}\"\nRUN cp \"${OPENSSL_DIR}/bin/openssl\" /usr/bin/openssl\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80/tcp\nSTOPSIGNAL SIGTERM\nCMD [\"nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"98cddcceb9ef066d99b8776119c327e4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a2d62243eaa45a10f7f69f9b6b28ffef4e4e3070.dockerfile"}