{"seed":4259196442,"processedDockerfileHash":"38e39c2d8a79c056426763ae9bfbd49e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:sid\nMAINTAINER Grigory Pomadchin <daunnc@gmail.com>\nRUN set -ex \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends openjdk-8-jdk ca-certificates-java -y\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-amd64\"\n#   Install PDAL and Python deps https://tracker.debian.org/pkg/pdal\nRUN apt-get install --no-install-recommends pdal libpdal-dev bash gcc g++ cmake -y\nRUN apt-get install --no-install-recommends wget curl python-pip python3 python3-pip -y\n#   Install GDAL\nENV ROOTDIR=\"/usr/local\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV GDAL_VERSION=\"2.4.0\"\nENV OPENJPEG_VERSION=\"2.3.0\"\n#   Load assets\nWORKDIR $ROOTDIR/\nRUN mkdir -p $ROOTDIR/src\nRUN wget -qO- http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz | tar -xzC $ROOTDIR/src/\nRUN wget -qO- https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | tar -xzC $ROOTDIR/src/\nRUN set -ex \\\n && deps=\" python-dev python3-dev python-numpy python3-numpy bash-completion libspatialite-dev libpq-dev libcurl4-gnutls-dev libproj-dev libxml2-dev libgeos-dev libnetcdf-dev libpoppler-dev libhdf4-alt-dev libhdf5-serial-dev \" \\\n && buildDeps=\" build-essential cmake swig ant pkg-config \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps $deps -y \\\n && cd src/openjpeg-${OPENJPEG_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$ROOTDIR \\\n && make -j3 \\\n && make -j3 install \\\n && make -j3 clean \\\n && cd $ROOTDIR \\\n && rm -Rf src/openjpeg* \\\n && cd src/gdal-${GDAL_VERSION} \\\n && ./configure --with-python --with-spatialite --with-pg --with-curl --with-java --with-poppler --with-openjpeg=$ROOTDIR \\\n && make -j3 \\\n && make -j3 install \\\n && ldconfig \\\n && cd $ROOTDIR/src/gdal-${GDAL_VERSION}/swig/java \\\n && make -j3 \\\n && make -j3 install \\\n && cd $ROOTDIR/src/gdal-${GDAL_VERSION}/swig/python \\\n && python3 setup.py build \\\n && python3 setup.py install \\\n && cd $ROOTDIR \\\n && rm -Rf src/gdal* \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Spark\nENV PYSPARK_PYTHON=\"/usr/bin/python3\"\nENV PYSPARK_DRIVER_PYTHON=\"/usr/bin/python3\"\nENV SPARK_HOME=\"/opt/spark\"\nENV SPARK_CONF_DIR=\"$SPARK_HOME/conf\"\nENV PATH=\"$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin\"\nRUN set -x \\\n && mkdir -p $SPARK_HOME $SPARK_CONF_DIR \\\n && curl -sS -# http://mirror.metrocast.net/apache/spark/spark-2.4.1/spark-2.4.1-bin-hadoop2.7.tgz | tar -xz -C ${SPARK_HOME} --strip-components=1\nCOPY ./fs /\nRUN mkdir -p /data/spark\nVOLUME [ \"/data/spark\" ]\nWORKDIR \"${SPARK_HOME}\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:sid\nMAINTAINER Grigory Pomadchin <daunnc@gmail.com>\nRUN set -ex \\\n && apt-get update -y \\\n && apt-get install openjdk-8-jdk ca-certificates-java -y\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-amd64\"\n#  Install PDAL and Python deps https://tracker.debian.org/pkg/pdal\nRUN apt-get install pdal libpdal-dev bash gcc g++ cmake -y\nRUN apt-get install wget curl python-pip python3 python3-pip -y\n#  Install GDAL\nENV ROOTDIR=\"/usr/local\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV GDAL_VERSION=\"2.4.0\"\nENV OPENJPEG_VERSION=\"2.3.0\"\n#  Load assets\nWORKDIR $ROOTDIR/\nRUN mkdir -p $ROOTDIR/src\nRUN wget -qO- http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz | tar -xzC $ROOTDIR/src/\nRUN wget -qO- https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | tar -xzC $ROOTDIR/src/\nRUN set -ex \\\n && deps=\" python-dev python3-dev python-numpy python3-numpy bash-completion libspatialite-dev libpq-dev libcurl4-gnutls-dev libproj-dev libxml2-dev libgeos-dev libnetcdf-dev libpoppler-dev libhdf4-alt-dev libhdf5-serial-dev \" \\\n && buildDeps=\" build-essential cmake swig ant pkg-config \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps $deps -y \\\n && cd src/openjpeg-${OPENJPEG_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$ROOTDIR \\\n && make -j3 \\\n && make -j3 install \\\n && make -j3 clean \\\n && cd $ROOTDIR \\\n && rm -Rf src/openjpeg* \\\n && cd src/gdal-${GDAL_VERSION} \\\n && ./configure --with-python --with-spatialite --with-pg --with-curl --with-java --with-poppler --with-openjpeg=$ROOTDIR \\\n && make -j3 \\\n && make -j3 install \\\n && ldconfig \\\n && cd $ROOTDIR/src/gdal-${GDAL_VERSION}/swig/java \\\n && make -j3 \\\n && make -j3 install \\\n && cd $ROOTDIR/src/gdal-${GDAL_VERSION}/swig/python \\\n && python3 setup.py build \\\n && python3 setup.py install \\\n && cd $ROOTDIR \\\n && rm -Rf src/gdal* \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /var/lib/apt/lists/*\n#  Install Spark\nENV PYSPARK_PYTHON=\"/usr/bin/python3\"\nENV PYSPARK_DRIVER_PYTHON=\"/usr/bin/python3\"\nENV SPARK_HOME=\"/opt/spark\"\nENV SPARK_CONF_DIR=\"$SPARK_HOME/conf\"\nENV PATH=\"$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin\"\nRUN set -x \\\n && mkdir -p $SPARK_HOME $SPARK_CONF_DIR \\\n && curl -sS -# http://mirror.metrocast.net/apache/spark/spark-2.4.1/spark-2.4.1-bin-hadoop2.7.tgz | tar -xz -C ${SPARK_HOME} --strip-components=1\nCOPY ./fs /\nRUN mkdir -p /data/spark\nVOLUME [ \"/data/spark\" ]\nWORKDIR \"${SPARK_HOME}\"\n","injectedSmells":[],"originalDockerfileHash":"f3176aa12732a05598be98d6fdde2e1a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:sid\nMAINTAINER Grigory Pomadchin <daunnc@gmail.com>\nRUN set -ex \\\n && apt-get update -y \\\n && apt-get install openjdk-8-jdk ca-certificates-java -y\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-amd64\"\n#   Install PDAL and Python deps https://tracker.debian.org/pkg/pdal\nRUN apt-get install pdal libpdal-dev bash gcc g++ cmake -y\nRUN apt-get install wget curl python-pip python3 python3-pip -y\n#   Install GDAL\nENV ROOTDIR=\"/usr/local\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nENV GDAL_VERSION=\"2.4.0\"\nENV OPENJPEG_VERSION=\"2.3.0\"\n#   Load assets\nWORKDIR $ROOTDIR/\nRUN mkdir -p $ROOTDIR/src\nRUN wget -qO- http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz | tar -xzC $ROOTDIR/src/\nRUN wget -qO- https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | tar -xzC $ROOTDIR/src/\nRUN set -ex \\\n && deps=\" python-dev python3-dev python-numpy python3-numpy bash-completion libspatialite-dev libpq-dev libcurl4-gnutls-dev libproj-dev libxml2-dev libgeos-dev libnetcdf-dev libpoppler-dev libhdf4-alt-dev libhdf5-serial-dev \" \\\n && buildDeps=\" build-essential cmake swig ant pkg-config \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps $deps -y \\\n && cd src/openjpeg-${OPENJPEG_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$ROOTDIR \\\n && make -j3 \\\n && make -j3 install \\\n && make -j3 clean \\\n && cd $ROOTDIR \\\n && rm -Rf src/openjpeg* \\\n && cd src/gdal-${GDAL_VERSION} \\\n && ./configure --with-python --with-spatialite --with-pg --with-curl --with-java --with-poppler --with-openjpeg=$ROOTDIR \\\n && make -j3 \\\n && make -j3 install \\\n && ldconfig \\\n && cd $ROOTDIR/src/gdal-${GDAL_VERSION}/swig/java \\\n && make -j3 \\\n && make -j3 install \\\n && cd $ROOTDIR/src/gdal-${GDAL_VERSION}/swig/python \\\n && python3 setup.py build \\\n && python3 setup.py install \\\n && cd $ROOTDIR \\\n && rm -Rf src/gdal* \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Spark\nENV PYSPARK_PYTHON=\"/usr/bin/python3\"\nENV PYSPARK_DRIVER_PYTHON=\"/usr/bin/python3\"\nENV SPARK_HOME=\"/opt/spark\"\nENV SPARK_CONF_DIR=\"$SPARK_HOME/conf\"\nENV PATH=\"$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin\"\nRUN set -x \\\n && mkdir -p $SPARK_HOME $SPARK_CONF_DIR \\\n && curl -sS -# http://mirror.metrocast.net/apache/spark/spark-2.4.1/spark-2.4.1-bin-hadoop2.7.tgz | tar -xz -C ${SPARK_HOME} --strip-components=1\nCOPY ./fs /\nRUN mkdir -p /data/spark\nVOLUME [ \"/data/spark\" ]\nWORKDIR \"${SPARK_HOME}\"\n","originalDockerfileUglifiedHash":"26be56de468fcaa79fab25d2d42088d6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/50ea3efc1c7e4e10203ce293b9781c93b4827b2d.dockerfile"}