{"seed":3659964910,"processedDockerfileHash":"91a7a7c8ab341b9124d19d13848f360f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#   based on https://github.com/kivy/python-for-android/blob/master/Dockerfile\nFROM ubuntu:18.04\nENV ANDROID_HOME=\"/opt/android\"\n#   configure locale\nRUN apt-get update -qq > /dev/null \\\n && apt-get install --no-install-recommends locales=2.27-3ubuntu1.6 -qq --yes \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 unzip=6.0-21ubuntu1.2 ca-certificates=20211016ubuntu0.18.04.1 -y -qq \\\n && apt-get -y autoremove\nENV ANDROID_NDK_HOME=\"${ANDROID_HOME}/android-ndk\"\nENV ANDROID_NDK_VERSION=\"17c\"\nENV ANDROID_NDK_HOME_V=\"${ANDROID_NDK_HOME}-r${ANDROID_NDK_VERSION}\"\n#   get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_ARCHIVE=\"android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\"\nENV ANDROID_NDK_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_NDK_ARCHIVE}\"\n#   download and install Android NDK\nRUN curl --location --progress-bar \"${ANDROID_NDK_DL_URL}\" --output \"${ANDROID_NDK_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_NDK_HOME_V}\" \\\n && unzip -q \"${ANDROID_NDK_ARCHIVE}\" -d \"${ANDROID_HOME}\" \\\n && ln -sfn \"${ANDROID_NDK_HOME_V}\" \"${ANDROID_NDK_HOME}\" \\\n && rm -rf \"${ANDROID_NDK_ARCHIVE}\"\nENV ANDROID_SDK_HOME=\"${ANDROID_HOME}/android-sdk\"\n#   get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"4333796\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"28.0.3\"\nENV ANDROID_SDK_TOOLS_ARCHIVE=\"sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\"\nENV ANDROID_SDK_TOOLS_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#   download and install Android SDK\nRUN curl --location --progress-bar \"${ANDROID_SDK_TOOLS_DL_URL}\" --output \"${ANDROID_SDK_TOOLS_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_SDK_HOME}\" \\\n && unzip -q \"${ANDROID_SDK_TOOLS_ARCHIVE}\" -d \"${ANDROID_SDK_HOME}\" \\\n && rm -rf \"${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#   update Android SDK, install Android API, Build Tools...\nRUN mkdir --parents \"${ANDROID_SDK_HOME}/.android/\" \\\n && echo '### User Sources for Android SDK Manager' > \"${ANDROID_SDK_HOME}/.android/repositories.cfg\"\n#   accept Android licenses (JDK necessary!)\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends openjdk-8-jdk=8u362-ga-0ubuntu1~18.04.1 -y -qq \\\n && apt-get -y autoremove\nRUN yes | \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null\n#   download platforms, API, build tools\nRUN \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-24\" > /dev/null \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-28\" > /dev/null \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"extras;android;m2repository\" > /dev/null \\\n && chmod +x \"${ANDROID_SDK_HOME}/tools/bin/avdmanager\"\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}/wspace\" \\\n    PATH=\"${HOME_DIR}/.local/bin:${PATH}\"\n#   install system dependencies\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends python3=3.6.7-1~18.04 virtualenv=15.1.0+ds-1.1 python3-pip=9.0.1-2.3~ubuntu1.18.04.8 python3-setuptools=39.0.1-2ubuntu0.1 git=1:2.17.1-1ubuntu0.17 wget=1.19.4-1ubuntu2.2 lbzip2=2.5-2 patch=2.7.6-2ubuntu1.1 sudo=1.8.21p2-3ubuntu1.5 software-properties-common=0.96.24.32.20 -y -qq \\\n && apt-get -y autoremove\n#   install kivy\nRUN add-apt-repository ppa:kivy-team/kivy \\\n && apt-get update -y -qq \\\n && apt-get install --no-install-recommends python3-kivy=1.9.1-1build3 -y -qq \\\n && apt-get -y autoremove \\\n && apt-get -y clean\nRUN python3 -m pip install image\n#   build dependencies\n#   https://buildozer.readthedocs.io/en/latest/installation.html#android-on-ubuntu-16-04-64bit\nRUN dpkg --add-architecture i386 \\\n && apt-get update -y -qq \\\n && apt-get install --no-install-recommends build-essential=12.4ubuntu1 ccache=3.4.1-1 git=1:2.17.1-1ubuntu0.17 python3=3.6.7-1~18.04 python3-dev=3.6.7-1~18.04 libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libidn11:i386 zip=3.0-11build1 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 zlib1g:i386 -y -qq \\\n && apt-get -y autoremove \\\n && apt-get -y clean\n#   specific recipes dependencies (e.g. libffi requires autoreconf binary)\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends libffi-dev=3.2.1-8 autoconf=2.69-11 automake=1:1.15.1-3ubuntu2 cmake=3.10.2-1ubuntu2.18.04.2 gettext=0.19.8.1-6ubuntu0.3 libltdl-dev=2.4.6-2 libtool=2.4.6-2 pkg-config=0.29.1-0ubuntu2 -y -qq \\\n && apt-get -y autoremove \\\n && apt-get -y clean\n#   prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n#   with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nWORKDIR ${WORK_DIR}\n#   user needs ownership/write access to these directories\nRUN chown --recursive ${USER} ${WORK_DIR} ${ANDROID_SDK_HOME}\nRUN chown ${USER} /opt\nUSER ${USER}\nRUN python3 -m pip install --upgrade cython==0.28.6\nRUN python3 -m pip install --upgrade pip\nRUN python3 -m pip install --user wheel\n#   prepare git\nRUN git config --global user.name \"John Doe\" \\\n && git config --global user.email johndoe@example.com\n#   install buildozer\nRUN cd /opt \\\n && git clone https://github.com/kivy/buildozer \\\n && cd buildozer \\\n && git checkout 678b1bf52cf63daa51b06e86a43ea4e2ea8a0b24 \\\n && python3 -m pip install --user -e .\n#   install python-for-android\nRUN cd /opt \\\n && git clone https://github.com/kivy/python-for-android \\\n && cd python-for-android \\\n && git remote add sombernight https://github.com/SomberNight/python-for-android \\\n && git fetch --all \\\n && git checkout ccb0f8e1bab36f1b7d1508216b4b4afb076e614f \\\n && git cherry-pick d7f722e4e5d4b3e6f5b1733c95e6a433f78ee570 \\\n && git cherry-pick ed20e196fbcdce718a180f88f23bb2d165c4c5d8 \\\n && python3 -m pip install --user -e .\n#   build env vars\nENV USE_SDK_WRAPPER=\"1\"\nENV GRADLE_OPTS=\"-Xmx1536M -Dorg.gradle.jvmargs='-Xmx1536M'\"\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  based on https://github.com/kivy/python-for-android/blob/master/Dockerfile\nFROM ubuntu:18.04\nENV ANDROID_HOME=\"/opt/android\"\n#  configure locale\nRUN apt-get update -qq > /dev/null \\\n && apt-get install -qq --yes --no-install-recommends locales \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN apt-get -y update -qq \\\n && apt-get -y install -qq --no-install-recommends curl unzip ca-certificates \\\n && apt-get -y autoremove\nENV ANDROID_NDK_HOME=\"${ANDROID_HOME}/android-ndk\"\nENV ANDROID_NDK_VERSION=\"17c\"\nENV ANDROID_NDK_HOME_V=\"${ANDROID_NDK_HOME}-r${ANDROID_NDK_VERSION}\"\n#  get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_ARCHIVE=\"android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\"\nENV ANDROID_NDK_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_NDK_ARCHIVE}\"\n#  download and install Android NDK\nRUN curl --location --progress-bar \"${ANDROID_NDK_DL_URL}\" --output \"${ANDROID_NDK_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_NDK_HOME_V}\" \\\n && unzip -q \"${ANDROID_NDK_ARCHIVE}\" -d \"${ANDROID_HOME}\" \\\n && ln -sfn \"${ANDROID_NDK_HOME_V}\" \"${ANDROID_NDK_HOME}\" \\\n && rm -rf \"${ANDROID_NDK_ARCHIVE}\"\nENV ANDROID_SDK_HOME=\"${ANDROID_HOME}/android-sdk\"\n#  get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"4333796\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"28.0.3\"\nENV ANDROID_SDK_TOOLS_ARCHIVE=\"sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\"\nENV ANDROID_SDK_TOOLS_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#  download and install Android SDK\nRUN curl --location --progress-bar \"${ANDROID_SDK_TOOLS_DL_URL}\" --output \"${ANDROID_SDK_TOOLS_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_SDK_HOME}\" \\\n && unzip -q \"${ANDROID_SDK_TOOLS_ARCHIVE}\" -d \"${ANDROID_SDK_HOME}\" \\\n && rm -rf \"${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#  update Android SDK, install Android API, Build Tools...\nRUN mkdir --parents \"${ANDROID_SDK_HOME}/.android/\" \\\n && echo '### User Sources for Android SDK Manager' > \"${ANDROID_SDK_HOME}/.android/repositories.cfg\"\n#  accept Android licenses (JDK necessary!)\nRUN apt-get -y update -qq \\\n && apt-get -y install -qq --no-install-recommends openjdk-8-jdk \\\n && apt-get -y autoremove\nRUN yes | \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null\n#  download platforms, API, build tools\nRUN \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-24\" > /dev/null \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-28\" > /dev/null \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"extras;android;m2repository\" > /dev/null \\\n && chmod +x \"${ANDROID_SDK_HOME}/tools/bin/avdmanager\"\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}/wspace\" \\\n    PATH=\"${HOME_DIR}/.local/bin:${PATH}\"\n#  install system dependencies\nRUN apt-get -y update -qq \\\n && apt-get -y install -qq --no-install-recommends python3 virtualenv python3-pip python3-setuptools git wget lbzip2 patch sudo software-properties-common \\\n && apt-get -y autoremove\n#  install kivy\nRUN add-apt-repository ppa:kivy-team/kivy \\\n && apt-get -y update -qq \\\n && apt-get -y install -qq --no-install-recommends python3-kivy \\\n && apt-get -y autoremove \\\n && apt-get -y clean\nRUN python3 -m pip install image\n#  build dependencies\n#  https://buildozer.readthedocs.io/en/latest/installation.html#android-on-ubuntu-16-04-64bit\nRUN dpkg --add-architecture i386 \\\n && apt-get -y update -qq \\\n && apt-get -y install -qq --no-install-recommends build-essential ccache git python3 python3-dev libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libidn11:i386 zip zlib1g-dev zlib1g:i386 \\\n && apt-get -y autoremove \\\n && apt-get -y clean\n#  specific recipes dependencies (e.g. libffi requires autoreconf binary)\nRUN apt-get -y update -qq \\\n && apt-get -y install -qq --no-install-recommends libffi-dev autoconf automake cmake gettext libltdl-dev libtool pkg-config \\\n && apt-get -y autoremove \\\n && apt-get -y clean\n#  prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n#  with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nWORKDIR ${WORK_DIR}\n#  user needs ownership/write access to these directories\nRUN chown --recursive ${USER} ${WORK_DIR} ${ANDROID_SDK_HOME}\nRUN chown ${USER} /opt\nUSER ${USER}\nRUN python3 -m pip install --upgrade cython==0.28.6\nRUN python3 -m pip install --upgrade pip\nRUN python3 -m pip install --user wheel\n#  prepare git\nRUN git config --global user.name \"John Doe\" \\\n && git config --global user.email johndoe@example.com\n#  install buildozer\nRUN cd /opt \\\n && git clone https://github.com/kivy/buildozer \\\n && cd buildozer \\\n && git checkout 678b1bf52cf63daa51b06e86a43ea4e2ea8a0b24 \\\n && python3 -m pip install --user -e .\n#  install python-for-android\nRUN cd /opt \\\n && git clone https://github.com/kivy/python-for-android \\\n && cd python-for-android \\\n && git remote add sombernight https://github.com/SomberNight/python-for-android \\\n && git fetch --all \\\n && git checkout ccb0f8e1bab36f1b7d1508216b4b4afb076e614f \\\n && git cherry-pick d7f722e4e5d4b3e6f5b1733c95e6a433f78ee570 \\\n && git cherry-pick ed20e196fbcdce718a180f88f23bb2d165c4c5d8 \\\n && python3 -m pip install --user -e .\n#  build env vars\nENV USE_SDK_WRAPPER=\"1\"\nENV GRADLE_OPTS=\"-Xmx1536M -Dorg.gradle.jvmargs='-Xmx1536M'\"\n","injectedSmells":[],"originalDockerfileHash":"b66556b649468949d56da7b9da26a1ee","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   based on https://github.com/kivy/python-for-android/blob/master/Dockerfile\nFROM ubuntu:18.04\nENV ANDROID_HOME=\"/opt/android\"\n#   configure locale\nRUN apt-get update -qq > /dev/null \\\n && apt-get install --no-install-recommends locales -qq --yes \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends curl unzip ca-certificates -y -qq \\\n && apt-get -y autoremove\nENV ANDROID_NDK_HOME=\"${ANDROID_HOME}/android-ndk\"\nENV ANDROID_NDK_VERSION=\"17c\"\nENV ANDROID_NDK_HOME_V=\"${ANDROID_NDK_HOME}-r${ANDROID_NDK_VERSION}\"\n#   get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_ARCHIVE=\"android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\"\nENV ANDROID_NDK_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_NDK_ARCHIVE}\"\n#   download and install Android NDK\nRUN curl --location --progress-bar \"${ANDROID_NDK_DL_URL}\" --output \"${ANDROID_NDK_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_NDK_HOME_V}\" \\\n && unzip -q \"${ANDROID_NDK_ARCHIVE}\" -d \"${ANDROID_HOME}\" \\\n && ln -sfn \"${ANDROID_NDK_HOME_V}\" \"${ANDROID_NDK_HOME}\" \\\n && rm -rf \"${ANDROID_NDK_ARCHIVE}\"\nENV ANDROID_SDK_HOME=\"${ANDROID_HOME}/android-sdk\"\n#   get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"4333796\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"28.0.3\"\nENV ANDROID_SDK_TOOLS_ARCHIVE=\"sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\"\nENV ANDROID_SDK_TOOLS_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#   download and install Android SDK\nRUN curl --location --progress-bar \"${ANDROID_SDK_TOOLS_DL_URL}\" --output \"${ANDROID_SDK_TOOLS_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_SDK_HOME}\" \\\n && unzip -q \"${ANDROID_SDK_TOOLS_ARCHIVE}\" -d \"${ANDROID_SDK_HOME}\" \\\n && rm -rf \"${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#   update Android SDK, install Android API, Build Tools...\nRUN mkdir --parents \"${ANDROID_SDK_HOME}/.android/\" \\\n && echo '### User Sources for Android SDK Manager' > \"${ANDROID_SDK_HOME}/.android/repositories.cfg\"\n#   accept Android licenses (JDK necessary!)\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends openjdk-8-jdk -y -qq \\\n && apt-get -y autoremove\nRUN yes | \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null\n#   download platforms, API, build tools\nRUN \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-24\" > /dev/null \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-28\" > /dev/null \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"extras;android;m2repository\" > /dev/null \\\n && chmod +x \"${ANDROID_SDK_HOME}/tools/bin/avdmanager\"\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}/wspace\" \\\n    PATH=\"${HOME_DIR}/.local/bin:${PATH}\"\n#   install system dependencies\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends python3 virtualenv python3-pip python3-setuptools git wget lbzip2 patch sudo software-properties-common -y -qq \\\n && apt-get -y autoremove\n#   install kivy\nRUN add-apt-repository ppa:kivy-team/kivy \\\n && apt-get update -y -qq \\\n && apt-get install --no-install-recommends python3-kivy -y -qq \\\n && apt-get -y autoremove \\\n && apt-get -y clean\nRUN python3 -m pip install image\n#   build dependencies\n#   https://buildozer.readthedocs.io/en/latest/installation.html#android-on-ubuntu-16-04-64bit\nRUN dpkg --add-architecture i386 \\\n && apt-get update -y -qq \\\n && apt-get install --no-install-recommends build-essential ccache git python3 python3-dev libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libidn11:i386 zip zlib1g-dev zlib1g:i386 -y -qq \\\n && apt-get -y autoremove \\\n && apt-get -y clean\n#   specific recipes dependencies (e.g. libffi requires autoreconf binary)\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends libffi-dev autoconf automake cmake gettext libltdl-dev libtool pkg-config -y -qq \\\n && apt-get -y autoremove \\\n && apt-get -y clean\n#   prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n#   with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nWORKDIR ${WORK_DIR}\n#   user needs ownership/write access to these directories\nRUN chown --recursive ${USER} ${WORK_DIR} ${ANDROID_SDK_HOME}\nRUN chown ${USER} /opt\nUSER ${USER}\nRUN python3 -m pip install --upgrade cython==0.28.6\nRUN python3 -m pip install --upgrade pip\nRUN python3 -m pip install --user wheel\n#   prepare git\nRUN git config --global user.name \"John Doe\" \\\n && git config --global user.email johndoe@example.com\n#   install buildozer\nRUN cd /opt \\\n && git clone https://github.com/kivy/buildozer \\\n && cd buildozer \\\n && git checkout 678b1bf52cf63daa51b06e86a43ea4e2ea8a0b24 \\\n && python3 -m pip install --user -e .\n#   install python-for-android\nRUN cd /opt \\\n && git clone https://github.com/kivy/python-for-android \\\n && cd python-for-android \\\n && git remote add sombernight https://github.com/SomberNight/python-for-android \\\n && git fetch --all \\\n && git checkout ccb0f8e1bab36f1b7d1508216b4b4afb076e614f \\\n && git cherry-pick d7f722e4e5d4b3e6f5b1733c95e6a433f78ee570 \\\n && git cherry-pick ed20e196fbcdce718a180f88f23bb2d165c4c5d8 \\\n && python3 -m pip install --user -e .\n#   build env vars\nENV USE_SDK_WRAPPER=\"1\"\nENV GRADLE_OPTS=\"-Xmx1536M -Dorg.gradle.jvmargs='-Xmx1536M'\"\n","originalDockerfileUglifiedHash":"5a119993d90e9a47af31955970fab031","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5e1f55e83dd315cde94f00e738b024e74ff741ba.dockerfile"}