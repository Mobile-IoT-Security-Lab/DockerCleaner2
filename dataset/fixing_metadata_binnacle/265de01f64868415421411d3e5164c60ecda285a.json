{"seed":3393366196,"processedDockerfileHash":"3d6baf5d509b3cc4095a001e9fc88bbe","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:buster\nLABEL LAST_MODIFIED=\"20180403\"\n#   runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20200601~deb10u2 inetutils-syslogd=2:1.9.4-7+deb10u2 libcurl4=7.64.0-4+deb10u5 liblua5.3-0=5.3.3-1.1 libssl1.1=1.1.1n-0+deb10u4 openssl=1.1.1n-0+deb10u4 procps=2:3.3.15-2 python3=3.7.3-1 runit=2.1.2-25 gnupg-agent=2.2.12-1+deb10u2 socat=1.7.3.2-2 make=4.2.1-1.2 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV TINI_VERSION=\"v0.18.0\" \\\n    TINI_GPG_KEY=\"595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends dirmngr=2.2.12-1+deb10u2 gpg=2.2.12-1+deb10u2 wget=1.20.1-1.1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64\" \\\n && wget -O tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$TINI_GPG_KEY\" || gpg --keyserver pool.sks-keyservers.net --recv-keys \"$TINI_GPG_KEY\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$TINI_GPG_KEY\" || gpg --keyserver pgp.mit.edu --recv-keys \"$TINI_GPG_KEY\" \\\n && gpg --batch --verify tini.asc tini \\\n && rm -rf \"$GNUPGHOME\" tini.asc \\\n && mv tini /usr/bin/tini \\\n && chmod +x /usr/bin/tini \\\n && tini -- true \\\n && apt-get purge -y --auto-remove dirmngr gpg wget\nENV HAPROXY_MAJOR=\"1.9\" \\\n    HAPROXY_VERSION=\"1.9.8\" \\\n    HAPROXY_MD5=\"efd17947e2c6d1fb26a0987968b1bc6a\"\nCOPY requirements.txt /marathon-lb/\nRUN set -x \\\n && buildDeps=' build-essential gcc libcurl4-openssl-dev libffi-dev liblua5.3-dev libpcre3-dev libssl-dev python3-dev python3-pip python3-setuptools wget zlib1g-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O haproxy.tar.gz \"https://www.haproxy.org/download/$HAPROXY_MAJOR/src/haproxy-$HAPROXY_VERSION.tar.gz\" \\\n && echo \"$HAPROXY_MD5 haproxy.tar.gz\" | md5sum -c \\\n && mkdir -p /usr/src/haproxy \\\n && tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1 \\\n && rm haproxy.tar.gz \\\n && make -C /usr/src/haproxy TARGET=linux2628 ARCH=x86_64 USE_LUA=1 LUA_INC=/usr/include/lua5.3/ USE_OPENSSL=1 USE_PCRE_JIT=1 USE_PCRE=1 USE_REGPARM=1 USE_STATIC_PCRE=1 USE_ZLIB=1 all install-bin \\\n && rm -rf /usr/src/haproxy \\\n && pip3 install --no-cache --upgrade --force-reinstall -r /marathon-lb/requirements.txt \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && apt-get update \\\n && apt-get install --no-install-recommends python3=3.7.3-1 -y\nCOPY . /marathon-lb\nWORKDIR /marathon-lb\nENTRYPOINT [\"tini\", \"-g\", \"--\", \"/marathon-lb/run\"]\nCMD [\"sse\", \"--health-check\", \"--group\", \"external\"]\nEXPOSE 80/tcp 443/tcp 9090/tcp 9091/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:buster\nLABEL LAST_MODIFIED=\"20180403\"\n#  runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates inetutils-syslogd libcurl4 liblua5.3-0 libssl1.1 openssl procps python3 runit gnupg-agent socat make -y \\\n && rm -rf /var/lib/apt/lists/*\nENV TINI_VERSION=\"v0.18.0\" \\\n    TINI_GPG_KEY=\"595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends dirmngr gpg wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64\" \\\n && wget -O tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$TINI_GPG_KEY\" || gpg --keyserver pool.sks-keyservers.net --recv-keys \"$TINI_GPG_KEY\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$TINI_GPG_KEY\" || gpg --keyserver pgp.mit.edu --recv-keys \"$TINI_GPG_KEY\" \\\n && gpg --batch --verify tini.asc tini \\\n && rm -rf \"$GNUPGHOME\" tini.asc \\\n && mv tini /usr/bin/tini \\\n && chmod +x /usr/bin/tini \\\n && tini -- true \\\n && apt-get purge -y --auto-remove dirmngr gpg wget\nENV HAPROXY_MAJOR=\"1.9\" \\\n    HAPROXY_VERSION=\"1.9.8\" \\\n    HAPROXY_MD5=\"efd17947e2c6d1fb26a0987968b1bc6a\"\nCOPY requirements.txt /marathon-lb/\nRUN set -x \\\n && buildDeps=' build-essential gcc libcurl4-openssl-dev libffi-dev liblua5.3-dev libpcre3-dev libssl-dev python3-dev python3-pip python3-setuptools wget zlib1g-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O haproxy.tar.gz \"https://www.haproxy.org/download/$HAPROXY_MAJOR/src/haproxy-$HAPROXY_VERSION.tar.gz\" \\\n && echo \"$HAPROXY_MD5 haproxy.tar.gz\" | md5sum -c \\\n && mkdir -p /usr/src/haproxy \\\n && tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1 \\\n && rm haproxy.tar.gz \\\n && make -C /usr/src/haproxy TARGET=linux2628 ARCH=x86_64 USE_LUA=1 LUA_INC=/usr/include/lua5.3/ USE_OPENSSL=1 USE_PCRE_JIT=1 USE_PCRE=1 USE_REGPARM=1 USE_STATIC_PCRE=1 USE_ZLIB=1 all install-bin \\\n && rm -rf /usr/src/haproxy \\\n && pip3 install --no-cache --upgrade --force-reinstall -r /marathon-lb/requirements.txt \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && apt-get update \\\n && apt-get install --no-install-recommends python3 -y\nCOPY . /marathon-lb\nWORKDIR /marathon-lb\nENTRYPOINT [\"tini\", \"-g\", \"--\", \"/marathon-lb/run\"]\nCMD [\"sse\", \"--health-check\", \"--group\", \"external\"]\nEXPOSE 80/tcp 443/tcp 9090/tcp 9091/tcp\n","injectedSmells":[],"originalDockerfileHash":"384148f9a4939afe19fe0a95ca42a8b4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:buster\nLABEL LAST_MODIFIED=\"20180403\"\n#   runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates inetutils-syslogd libcurl4 liblua5.3-0 libssl1.1 openssl procps python3 runit gnupg-agent socat make -y \\\n && rm -rf /var/lib/apt/lists/*\nENV TINI_VERSION=\"v0.18.0\" \\\n    TINI_GPG_KEY=\"595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends dirmngr gpg wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64\" \\\n && wget -O tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$TINI_GPG_KEY\" || gpg --keyserver pool.sks-keyservers.net --recv-keys \"$TINI_GPG_KEY\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$TINI_GPG_KEY\" || gpg --keyserver pgp.mit.edu --recv-keys \"$TINI_GPG_KEY\" \\\n && gpg --batch --verify tini.asc tini \\\n && rm -rf \"$GNUPGHOME\" tini.asc \\\n && mv tini /usr/bin/tini \\\n && chmod +x /usr/bin/tini \\\n && tini -- true \\\n && apt-get purge -y --auto-remove dirmngr gpg wget\nENV HAPROXY_MAJOR=\"1.9\" \\\n    HAPROXY_VERSION=\"1.9.8\" \\\n    HAPROXY_MD5=\"efd17947e2c6d1fb26a0987968b1bc6a\"\nCOPY requirements.txt /marathon-lb/\nRUN set -x \\\n && buildDeps=' build-essential gcc libcurl4-openssl-dev libffi-dev liblua5.3-dev libpcre3-dev libssl-dev python3-dev python3-pip python3-setuptools wget zlib1g-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O haproxy.tar.gz \"https://www.haproxy.org/download/$HAPROXY_MAJOR/src/haproxy-$HAPROXY_VERSION.tar.gz\" \\\n && echo \"$HAPROXY_MD5 haproxy.tar.gz\" | md5sum -c \\\n && mkdir -p /usr/src/haproxy \\\n && tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1 \\\n && rm haproxy.tar.gz \\\n && make -C /usr/src/haproxy TARGET=linux2628 ARCH=x86_64 USE_LUA=1 LUA_INC=/usr/include/lua5.3/ USE_OPENSSL=1 USE_PCRE_JIT=1 USE_PCRE=1 USE_REGPARM=1 USE_STATIC_PCRE=1 USE_ZLIB=1 all install-bin \\\n && rm -rf /usr/src/haproxy \\\n && pip3 install --no-cache --upgrade --force-reinstall -r /marathon-lb/requirements.txt \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && apt-get update \\\n && apt-get install --no-install-recommends python3 -y\nCOPY . /marathon-lb\nWORKDIR /marathon-lb\nENTRYPOINT [\"tini\", \"-g\", \"--\", \"/marathon-lb/run\"]\nCMD [\"sse\", \"--health-check\", \"--group\", \"external\"]\nEXPOSE 80/tcp 443/tcp 9090/tcp 9091/tcp\n","originalDockerfileUglifiedHash":"8fa72c06cafdab75ffa2c80c249b4fe3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/265de01f64868415421411d3e5164c60ecda285a.dockerfile"}