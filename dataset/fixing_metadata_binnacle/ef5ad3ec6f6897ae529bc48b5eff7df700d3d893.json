{"seed":1717801625,"processedDockerfileHash":"1b35cbb0903307d557f8f17d2c87f55d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:edge\nLABEL repository.hub=\"alexmasterov/alpine-nginx-tarantool\" \\\n      repository.url=\"https://github.com/AlexMasterov/dockerfiles\" \\\n      maintainer=\"Alex Masterov <alex.masterow@gmail.com>\"\nARG NGINX_VERSION=1.15.0\nARG NGINX_CONFIG=/etc/nginx\nARG LUAJIT_BRANCH=tarantool-1.7\nARG LUAROCKS_TAG=2.4.4\nARG DEVELKIT_MODULE_TAG=v0.3.0\nARG LUA_MODULE_TAG=v0.10.12\nARG TARANTOOL_UPSTREAM_TAG=v2.6-rc3\nENV LUAJIT_LIB=\"/usr/local/lib\" \\\n    LUAJIT_INC=\"/usr/local/include/luajit-2.1\"\nRUN set -x \\\n && apk add tini=0.19.0-r1 --update \\\n && addgroup -g 82 -S nginx \\\n && adduser -u 82 -S -D -h /var/cache/nginx -s /sbin/nologin -G nginx nginx\nRUN set -x \\\n && apk add cmake=3.26.3-r0 curl=8.0.1-r1 g++=12.2.1_git20220924-r9 gcc=12.2.1_git20220924-r9 git=2.40.0-r0 libressl-dev=3.7.2-r0 linux-headers=6.2-r0 make=4.4.1-r0 pcre-dev=8.45-r2 zlib-dev=1.2.13-r0 --virtual .nginx-build-dependencies \\\n && : \"---------- Build flags ----------\" \\\n && export LDFLAGS=\"-Wl,-O2 -Wl,--hash-style=both -pie\" \\\n && export CFLAGS=\"-O2 -march=native -fstack-protector-strong -fpic -fpie\" \\\n && export MAKEFLAGS=\"-j $( expr $( getconf _NPROCESSORS_ONLN ;) + 1 ;)\" \\\n && : \"---------- LuaJIT ----------\" \\\n && apk add libgcc=12.2.1_git20220924-r9 --virtual .luajit-runtime-dependencies \\\n && git clone -b ${LUAJIT_BRANCH} --depth 1 https://github.com/tarantool/luajit.git /tmp/luajit \\\n && cd /tmp/luajit \\\n && make CFLAGS+=\"-fPIC\" XCFLAGS+=\"-DLUAJIT_ENABLE_GC64\" \\\n && make install \\\n && ln -sf /usr/local/bin/luajit-2.1.0-beta3 /usr/local/bin/lua \\\n && : \"---------- LuaRocks ----------\" \\\n && git clone -b ${LUAROCKS_TAG} --depth 1 https://github.com/luarocks/luarocks.git /tmp/luarocks \\\n && cd /tmp/luarocks \\\n && ./configure --with-lua-bin=/usr/local/bin --with-lua-include=/usr/local/include/luajit-2.1 \\\n && make build \\\n && make install \\\n && : \"---------- Nginx Development Kit ----------\" \\\n && DEVELKIT_MODULE_DIR=\"/tmp/devel-kit\" \\\n && DEVELKIT_MODULE_GIT=\"https://github.com/simpl/ngx_devel_kit.git\" \\\n && git clone -o ${DEVELKIT_MODULE_TAG} --depth 1 ${DEVELKIT_MODULE_GIT} ${DEVELKIT_MODULE_DIR} \\\n && : \"---------- Nginx Lua Module ----------\" \\\n && LUA_MODULE_DIR=\"/tmp/lua-module\" \\\n && LUA_MODULE_GIT=\"https://github.com/openresty/lua-nginx-module.git\" \\\n && git clone -o ${LUA_MODULE_TAG} --depth 1 ${LUA_MODULE_GIT} ${LUA_MODULE_DIR} \\\n && : \"---------- Nginx Tarantool Module ----------\" \\\n && TARANTOOL_UPSTREAM_GIT=\"https://github.com/tarantool/nginx_upstream_module.git\" \\\n && TARANTOOL_UPSTREAM_DIR=\"/tmp/nginx_upstream_module\" \\\n && git clone --depth 1 ${TARANTOOL_UPSTREAM_GIT} ${TARANTOOL_UPSTREAM_DIR} \\\n && git clone --depth 1 https://github.com/lloyd/yajl.git /tmp/yajl \\\n && cd /tmp/yajl \\\n && cmake -DCMAKE_BUILD_TYPE=Release . \\\n && make \\\n && make install \\\n && : \"---------- Msgpuck ----------\" \\\n && git clone --depth 1 https://github.com/rtsisyk/msgpuck.git /tmp/msgpuck \\\n && cd /tmp/msgpuck \\\n && cmake -DCMAKE_BUILD_TYPE=Release . \\\n && make \\\n && make install \\\n && : \"---------- Nginx ----------\" \\\n && NGINX_SOURCE=\"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" \\\n && curl -fSL --connect-timeout 30 ${NGINX_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/nginx-${NGINX_VERSION} \\\n && ./configure --prefix=${NGINX_CONFIG} --conf-path=${NGINX_CONFIG}/nginx.conf --modules-path=/usr/lib/nginx/modules --sbin-path=/usr/sbin/nginx --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --without-http_autoindex_module --without-http_ssi_module --without-mail_imap_module --without-mail_pop3_module --without-mail_smtp_module --with-file-aio --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_v2_module --with-pcre --with-pcre-jit --with-stream --with-stream_ssl_module --with-threads --with-cc-opt=\"-flto\" --add-module=${DEVELKIT_MODULE_DIR} --add-module=${LUA_MODULE_DIR} \\\n && make \\\n && make install \\\n && runtimeDeps=\"$( scanelf --needed --nobanner --recursive /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add ${runtimeDeps} --virtual .nginx-runtime-dependencies \\\n && : \"---------- Removing build dependencies, clean temporary files ----------\" \\\n && apk del .nginx-build-dependencies \\\n && rm -rf /var/cache/apk/* /var/tmp/* /tmp/*\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"nginx\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:edge\nLABEL repository.hub=\"alexmasterov/alpine-nginx-tarantool\" \\\n      repository.url=\"https://github.com/AlexMasterov/dockerfiles\" \\\n      maintainer=\"Alex Masterov <alex.masterow@gmail.com>\"\nARG NGINX_VERSION=1.15.0\nARG NGINX_CONFIG=/etc/nginx\nARG LUAJIT_BRANCH=tarantool-1.7\nARG LUAROCKS_TAG=2.4.4\nARG DEVELKIT_MODULE_TAG=v0.3.0\nARG LUA_MODULE_TAG=v0.10.12\nARG TARANTOOL_UPSTREAM_TAG=v2.6-rc3\nENV LUAJIT_LIB=\"/usr/local/lib\" \\\n    LUAJIT_INC=\"/usr/local/include/luajit-2.1\"\nRUN set -x \\\n && apk add --update tini \\\n && addgroup -g 82 -S nginx \\\n && adduser -u 82 -S -D -h /var/cache/nginx -s /sbin/nologin -G nginx nginx\nRUN set -x \\\n && apk add --virtual .nginx-build-dependencies cmake curl g++ gcc git libressl-dev linux-headers make pcre-dev zlib-dev \\\n && : \"---------- Build flags ----------\" \\\n && export LDFLAGS=\"-Wl,-O2 -Wl,--hash-style=both -pie\" \\\n && export CFLAGS=\"-O2 -march=native -fstack-protector-strong -fpic -fpie\" \\\n && export MAKEFLAGS=\"-j $( expr $( getconf _NPROCESSORS_ONLN ;) + 1 ;)\" \\\n && : \"---------- LuaJIT ----------\" \\\n && apk add --virtual .luajit-runtime-dependencies libgcc \\\n && git clone -b ${LUAJIT_BRANCH} --depth 1 https://github.com/tarantool/luajit.git /tmp/luajit \\\n && cd /tmp/luajit \\\n && make CFLAGS+=\"-fPIC\" XCFLAGS+=\"-DLUAJIT_ENABLE_GC64\" \\\n && make install \\\n && ln -sf /usr/local/bin/luajit-2.1.0-beta3 /usr/local/bin/lua \\\n && : \"---------- LuaRocks ----------\" \\\n && git clone -b ${LUAROCKS_TAG} --depth 1 https://github.com/luarocks/luarocks.git /tmp/luarocks \\\n && cd /tmp/luarocks \\\n && ./configure --with-lua-bin=/usr/local/bin --with-lua-include=/usr/local/include/luajit-2.1 \\\n && make build \\\n && make install \\\n && : \"---------- Nginx Development Kit ----------\" \\\n && DEVELKIT_MODULE_DIR=\"/tmp/devel-kit\" \\\n && DEVELKIT_MODULE_GIT=\"https://github.com/simpl/ngx_devel_kit.git\" \\\n && git clone -o ${DEVELKIT_MODULE_TAG} --depth 1 ${DEVELKIT_MODULE_GIT} ${DEVELKIT_MODULE_DIR} \\\n && : \"---------- Nginx Lua Module ----------\" \\\n && LUA_MODULE_DIR=\"/tmp/lua-module\" \\\n && LUA_MODULE_GIT=\"https://github.com/openresty/lua-nginx-module.git\" \\\n && git clone -o ${LUA_MODULE_TAG} --depth 1 ${LUA_MODULE_GIT} ${LUA_MODULE_DIR} \\\n && : \"---------- Nginx Tarantool Module ----------\" \\\n && TARANTOOL_UPSTREAM_GIT=\"https://github.com/tarantool/nginx_upstream_module.git\" \\\n && TARANTOOL_UPSTREAM_DIR=\"/tmp/nginx_upstream_module\" \\\n && git clone --depth 1 ${TARANTOOL_UPSTREAM_GIT} ${TARANTOOL_UPSTREAM_DIR} \\\n && git clone --depth 1 https://github.com/lloyd/yajl.git /tmp/yajl \\\n && cd /tmp/yajl \\\n && cmake -DCMAKE_BUILD_TYPE=Release . \\\n && make \\\n && make install \\\n && : \"---------- Msgpuck ----------\" \\\n && git clone --depth 1 https://github.com/rtsisyk/msgpuck.git /tmp/msgpuck \\\n && cd /tmp/msgpuck \\\n && cmake -DCMAKE_BUILD_TYPE=Release . \\\n && make \\\n && make install \\\n && : \"---------- Nginx ----------\" \\\n && NGINX_SOURCE=\"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" \\\n && curl -fSL --connect-timeout 30 ${NGINX_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/nginx-${NGINX_VERSION} \\\n && ./configure --prefix=${NGINX_CONFIG} --conf-path=${NGINX_CONFIG}/nginx.conf --modules-path=/usr/lib/nginx/modules --sbin-path=/usr/sbin/nginx --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --without-http_autoindex_module --without-http_ssi_module --without-mail_imap_module --without-mail_pop3_module --without-mail_smtp_module --with-file-aio --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_v2_module --with-pcre --with-pcre-jit --with-stream --with-stream_ssl_module --with-threads --with-cc-opt=\"-flto\" --add-module=${DEVELKIT_MODULE_DIR} --add-module=${LUA_MODULE_DIR} \\\n && make \\\n && make install \\\n && runtimeDeps=\"$( scanelf --needed --nobanner --recursive /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .nginx-runtime-dependencies ${runtimeDeps} \\\n && : \"---------- Removing build dependencies, clean temporary files ----------\" \\\n && apk del .nginx-build-dependencies \\\n && rm -rf /var/cache/apk/* /var/tmp/* /tmp/*\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"nginx\"]\n","injectedSmells":[],"originalDockerfileHash":"a6ae0280f2c8743d1778951f66639299","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:edge\nLABEL repository.hub=\"alexmasterov/alpine-nginx-tarantool\" \\\n      repository.url=\"https://github.com/AlexMasterov/dockerfiles\" \\\n      maintainer=\"Alex Masterov <alex.masterow@gmail.com>\"\nARG NGINX_VERSION=1.15.0\nARG NGINX_CONFIG=/etc/nginx\nARG LUAJIT_BRANCH=tarantool-1.7\nARG LUAROCKS_TAG=2.4.4\nARG DEVELKIT_MODULE_TAG=v0.3.0\nARG LUA_MODULE_TAG=v0.10.12\nARG TARANTOOL_UPSTREAM_TAG=v2.6-rc3\nENV LUAJIT_LIB=\"/usr/local/lib\" \\\n    LUAJIT_INC=\"/usr/local/include/luajit-2.1\"\nRUN set -x \\\n && apk add --update tini \\\n && addgroup -g 82 -S nginx \\\n && adduser -u 82 -S -D -h /var/cache/nginx -s /sbin/nologin -G nginx nginx\nRUN set -x \\\n && apk add --virtual .nginx-build-dependencies cmake curl g++ gcc git libressl-dev linux-headers make pcre-dev zlib-dev \\\n && : \"---------- Build flags ----------\" \\\n && export LDFLAGS=\"-Wl,-O2 -Wl,--hash-style=both -pie\" \\\n && export CFLAGS=\"-O2 -march=native -fstack-protector-strong -fpic -fpie\" \\\n && export MAKEFLAGS=\"-j $( expr $( getconf _NPROCESSORS_ONLN ;) + 1 ;)\" \\\n && : \"---------- LuaJIT ----------\" \\\n && apk add --virtual .luajit-runtime-dependencies libgcc \\\n && git clone -b ${LUAJIT_BRANCH} --depth 1 https://github.com/tarantool/luajit.git /tmp/luajit \\\n && cd /tmp/luajit \\\n && make CFLAGS+=\"-fPIC\" XCFLAGS+=\"-DLUAJIT_ENABLE_GC64\" \\\n && make install \\\n && ln -sf /usr/local/bin/luajit-2.1.0-beta3 /usr/local/bin/lua \\\n && : \"---------- LuaRocks ----------\" \\\n && git clone -b ${LUAROCKS_TAG} --depth 1 https://github.com/luarocks/luarocks.git /tmp/luarocks \\\n && cd /tmp/luarocks \\\n && ./configure --with-lua-bin=/usr/local/bin --with-lua-include=/usr/local/include/luajit-2.1 \\\n && make build \\\n && make install \\\n && : \"---------- Nginx Development Kit ----------\" \\\n && DEVELKIT_MODULE_DIR=\"/tmp/devel-kit\" \\\n && DEVELKIT_MODULE_GIT=\"https://github.com/simpl/ngx_devel_kit.git\" \\\n && git clone -o ${DEVELKIT_MODULE_TAG} --depth 1 ${DEVELKIT_MODULE_GIT} ${DEVELKIT_MODULE_DIR} \\\n && : \"---------- Nginx Lua Module ----------\" \\\n && LUA_MODULE_DIR=\"/tmp/lua-module\" \\\n && LUA_MODULE_GIT=\"https://github.com/openresty/lua-nginx-module.git\" \\\n && git clone -o ${LUA_MODULE_TAG} --depth 1 ${LUA_MODULE_GIT} ${LUA_MODULE_DIR} \\\n && : \"---------- Nginx Tarantool Module ----------\" \\\n && TARANTOOL_UPSTREAM_GIT=\"https://github.com/tarantool/nginx_upstream_module.git\" \\\n && TARANTOOL_UPSTREAM_DIR=\"/tmp/nginx_upstream_module\" \\\n && git clone --depth 1 ${TARANTOOL_UPSTREAM_GIT} ${TARANTOOL_UPSTREAM_DIR} \\\n && git clone --depth 1 https://github.com/lloyd/yajl.git /tmp/yajl \\\n && cd /tmp/yajl \\\n && cmake -DCMAKE_BUILD_TYPE=Release . \\\n && make \\\n && make install \\\n && : \"---------- Msgpuck ----------\" \\\n && git clone --depth 1 https://github.com/rtsisyk/msgpuck.git /tmp/msgpuck \\\n && cd /tmp/msgpuck \\\n && cmake -DCMAKE_BUILD_TYPE=Release . \\\n && make \\\n && make install \\\n && : \"---------- Nginx ----------\" \\\n && NGINX_SOURCE=\"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" \\\n && curl -fSL --connect-timeout 30 ${NGINX_SOURCE} | tar xz -C /tmp \\\n && cd /tmp/nginx-${NGINX_VERSION} \\\n && ./configure --prefix=${NGINX_CONFIG} --conf-path=${NGINX_CONFIG}/nginx.conf --modules-path=/usr/lib/nginx/modules --sbin-path=/usr/sbin/nginx --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --without-http_autoindex_module --without-http_ssi_module --without-mail_imap_module --without-mail_pop3_module --without-mail_smtp_module --with-file-aio --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_v2_module --with-pcre --with-pcre-jit --with-stream --with-stream_ssl_module --with-threads --with-cc-opt=\"-flto\" --add-module=${DEVELKIT_MODULE_DIR} --add-module=${LUA_MODULE_DIR} \\\n && make \\\n && make install \\\n && runtimeDeps=\"$( scanelf --needed --nobanner --recursive /usr/sbin/nginx /usr/lib/nginx/modules/*.so | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .nginx-runtime-dependencies ${runtimeDeps} \\\n && : \"---------- Removing build dependencies, clean temporary files ----------\" \\\n && apk del .nginx-build-dependencies \\\n && rm -rf /var/cache/apk/* /var/tmp/* /tmp/*\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"nginx\"]\n","originalDockerfileUglifiedHash":"a6ae0280f2c8743d1778951f66639299","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ef5ad3ec6f6897ae529bc48b5eff7df700d3d893.dockerfile"}