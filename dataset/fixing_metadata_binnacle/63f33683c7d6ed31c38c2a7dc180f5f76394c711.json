{"seed":1915966110,"processedDockerfileHash":"9d3e359e1da8b844dc70ce8c34b37a66","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM raspbian/stretch:latest\n#   install name\nARG install_name=TOKENPAY_INSTALLER_RASPBIAN_ARM64\n#   system dependant paths\nARG bin_path=/usr/bin\nARG icon_path=/usr/share/icons\nARG desktop_path=~/.local/share/applications\n#   filenames to copy to install folder\nARG fname_install=install.sh\nARG fname_uninstall=uninstall.sh\nARG fname_desktop=tokenpay.desktop\nARG fname_icon=tokenpay_icon.png\nARG fname_guiwallet=tokenpay\nARG fname_deamonwallet=tokenpayd\nARG fname_ssl=libssl.so.1.1\nARG fname_crypto=libcrypto.so.1.1\nARG fname_webinstall=web_install.sh\n#   parallel build or not, tune this if need be (use -j1 on rpi, else it'll crash)\nARG parralel_build=-j1\n#   package manager\nARG pckg_manager=apt-get\n#   package list\nARG apt_pckg_list=\"build-essential  libtool autotools-dev automake  pkg-config zlib1g-dev libevent-dev  bsdmainutils git libboost-all-dev  libseccomp-dev libcap-dev libminiupnpc-dev  libqt5gui5 libqt5core5a libqt5webkit5-dev  libqt5dbus5 qttools5-dev qttools5-dev-tools  libprotobuf-dev protobuf-compiler libqrencode-dev  libssl-dev qt5-default g++-6 gcc-6 wget\"\n#   dependencies\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends ${apt_pckg_list} -y )\nRUN rm /usr/bin/g++ \\\n && rm /usr/bin/gcc\nRUN ln -s /usr/bin/g++-6 /usr/bin/g++\nRUN ln -s /usr/bin/gcc-6 /usr/bin/gcc\n#   openssl\nRUN wget https://www.openssl.org/source/openssl-1.1.0e.tar.gz \\\n && tar xzf openssl-1.1.0e.tar.gz\nRUN cd openssl-1.1.0e \\\n && ./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' \\\n && make \\\n && make install\n#   tpay\nRUN git clone --recurse-submodules https://github.com/tokenpay/tokenpay\nRUN cd tokenpay \\\n && ./autogen.sh \\\n && ./configure --enable-gui \\\n && make\n#   make the ARM installer\nRUN mkdir /${install_name}\nRUN cd /${install_name} \\\n && strip --strip-debug /tokenpay/src/${fname_guiwallet} \\\n && strip --strip-debug /tokenpay/src/${fname_deamonwallet} \\\n && cp /tokenpay/src/${fname_guiwallet} . \\\n && cp /tokenpay/src/${fname_deamonwallet} . \\\n && cp /openssl-1.1.0e/${fname_crypto} . \\\n && cp /openssl-1.1.0e/${fname_ssl} . \\\n && cp /tokenpay/src/qt/res/icons/${fname_icon} .\n#   leave this file blank\nRUN touch /${install_name}/tokenpay.conf\n#   build the tokenpay.desktop\nRUN touch /${install_name}/${fname_desktop}\nRUN echo \"#!/usr/bin/env xdg-open\" > /${install_name}/${fname_desktop} \\\n && echo \"[Desktop Entry]\" >> /${install_name}/${fname_desktop} \\\n && echo \"Version=1.0\" >> /${install_name}/${fname_desktop} \\\n && echo \"Type=Application\" >> /${install_name}/${fname_desktop} \\\n && echo \"Terminal=false\" >> /${install_name}/${fname_desktop} \\\n && echo \"Exec=tokenpay\" >> /${install_name}/${fname_desktop} \\\n && echo \"Name=TokenPay Wallet\" >> /${install_name}/${fname_desktop} \\\n && echo \"Comment=TokenPay Wallet\" >> /${install_name}/${fname_desktop} \\\n && echo \"Icon=${icon_path}/${fname_icon}\" >> /${install_name}/${fname_desktop}\n#    build the ${fname_install} script\nRUN echo \"#!/bin/sh\" > /${install_name}/${fname_install}\nRUN echo \"TPAYD_BIN=./${fname_deamonwallet}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_BIN=./${fname_guiwallet}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_ICO=./${fname_icon}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_DSK=./${fname_desktop}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_BINPATH=${bin_path}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_ICOPATH=${icon_path}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_DSKPATH=${desktop_path}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_LIBPATH=/usr/lib/\" >> /${install_name}/${fname_install}\nRUN echo \"${pckg_manager} install -y ${apt_pckg_list}\" >> /${install_name}/${fname_install}\n#   copy crypto libs to /usr/lib\nRUN echo \"echo \\\"Copying crypto libs to ${TPAY_LIBPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ./${fname_crypto} ${TPAY_LIBPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"cp ./${fname_ssl} ${TPAY_LIBPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpay binary to ${TPAY_BINPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_BIN} ${TPAY_BINPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpayd binary to ${TPAY_BINPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_BIN} ${TPAY_BINPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpay icon to ${TPAY_ICOPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_ICO} ${TPAY_ICOPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpay.desktop to ${TPAY_DSKPATH}\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_DSK} ${TPAY_DSKPATH}\" >> /${install_name}/${fname_install}\n#    build the ${fname_uninstall} script\nRUN echo \"#!/bin/sh\" > /${install_name}/${fname_uninstall}\n#    as for now, don't remove ~/.tokenpay folder, maybe the user just want to re-install the wallet for some reason\nRUN echo \"rm -rf ${bin_path}/${fname_deamonwallet} ${bin_path}/${fname_guiwallet} ${icon_path}/${fname_icon} ${desktop_path}/${fname_desktop}\" >> /${install_name}/${fname_uninstall}\n#   build the web install script\nRUN echo \"apt-get install -y build-essential libtool autotools-dev automake pkg-config zlib1g-dev libevent-dev bsdmainutils git libboost-all-dev libseccomp-dev libcap-dev libminiupnpc-dev libqt5gui5 libqt5core5a libqt5webkit5-dev libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler libqrencode-dev libssl-dev qt5-default wget\" > ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpay > /usr/bin/tokenpay\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpayd > /usr/bin/tokenpayd\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpay_icon.png > /usr/share/icons/tokenpay_icon.png\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpay.desktop > /home/$SUDO_USER/.local/share/applications/tokenpay.desktop\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/libssl.so.1.1 > /usr/local/lib/libssl.so.1.1\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/libcrypto.so.1.1 > /usr/local/lib/libcrypto.so.1.1\" >> ${install_name}/${fname_webinstall}\nRUN echo \"mkdir /home/$SUDO_USER/.tokenpay\" >> ${install_name}/${fname_webinstall}\nRUN echo \"touch /home/$SUDO_USER/.tokenpay/tokenpay.conf\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chown -R $SUDO_USER /home/$SUDO_USER/.tokenpay/\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/share/icons/tokenpay_icon.png\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /home/$SUDO_USER/.local/share/applications/tokenpay.desktop\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/bin/tokenpay\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/bin/tokenpayd\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/local/lib/libssl.so.1.1\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/local/lib/libcrypto.so.1.1\" >> ${install_name}/${fname_webinstall}\n#    build the installer archive\nRUN tar czf ${install_name}.tar.gz ${install_name}\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM raspbian/stretch:latest\n#  install name\nARG install_name=TOKENPAY_INSTALLER_RASPBIAN_ARM64\n#  system dependant paths\nARG bin_path=/usr/bin\nARG icon_path=/usr/share/icons\nARG desktop_path=~/.local/share/applications\n#  filenames to copy to install folder\nARG fname_install=install.sh\nARG fname_uninstall=uninstall.sh\nARG fname_desktop=tokenpay.desktop\nARG fname_icon=tokenpay_icon.png\nARG fname_guiwallet=tokenpay\nARG fname_deamonwallet=tokenpayd\nARG fname_ssl=libssl.so.1.1\nARG fname_crypto=libcrypto.so.1.1\nARG fname_webinstall=web_install.sh\n#  parallel build or not, tune this if need be (use -j1 on rpi, else it'll crash)\nARG parralel_build=-j1\n#  package manager\nARG pckg_manager=apt-get\n#  package list\nARG apt_pckg_list=\"build-essential  libtool autotools-dev automake  pkg-config zlib1g-dev libevent-dev  bsdmainutils git libboost-all-dev  libseccomp-dev libcap-dev libminiupnpc-dev  libqt5gui5 libqt5core5a libqt5webkit5-dev  libqt5dbus5 qttools5-dev qttools5-dev-tools  libprotobuf-dev protobuf-compiler libqrencode-dev  libssl-dev qt5-default g++-6 gcc-6 wget\"\n#  dependencies\nRUN apt-get update\nRUN apt-get install ${apt_pckg_list} -y\nRUN rm /usr/bin/g++ \\\n && rm /usr/bin/gcc\nRUN ln -s /usr/bin/g++-6 /usr/bin/g++\nRUN ln -s /usr/bin/gcc-6 /usr/bin/gcc\n#  openssl\nRUN wget https://www.openssl.org/source/openssl-1.1.0e.tar.gz \\\n && tar xzf openssl-1.1.0e.tar.gz\nRUN cd openssl-1.1.0e \\\n && ./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' \\\n && make \\\n && make install\n#  tpay\nRUN git clone --recurse-submodules https://github.com/tokenpay/tokenpay\nRUN cd tokenpay \\\n && ./autogen.sh \\\n && ./configure --enable-gui \\\n && make\n#  make the ARM installer\nRUN mkdir /${install_name}\nRUN cd /${install_name} \\\n && strip --strip-debug /tokenpay/src/${fname_guiwallet} \\\n && strip --strip-debug /tokenpay/src/${fname_deamonwallet} \\\n && cp /tokenpay/src/${fname_guiwallet} . \\\n && cp /tokenpay/src/${fname_deamonwallet} . \\\n && cp /openssl-1.1.0e/${fname_crypto} . \\\n && cp /openssl-1.1.0e/${fname_ssl} . \\\n && cp /tokenpay/src/qt/res/icons/${fname_icon} .\n#  leave this file blank\nRUN touch /${install_name}/tokenpay.conf\n#  build the tokenpay.desktop\nRUN touch /${install_name}/${fname_desktop}\nRUN echo \"#!/usr/bin/env xdg-open\" > /${install_name}/${fname_desktop} \\\n && echo \"[Desktop Entry]\" >> /${install_name}/${fname_desktop} \\\n && echo \"Version=1.0\" >> /${install_name}/${fname_desktop} \\\n && echo \"Type=Application\" >> /${install_name}/${fname_desktop} \\\n && echo \"Terminal=false\" >> /${install_name}/${fname_desktop} \\\n && echo \"Exec=tokenpay\" >> /${install_name}/${fname_desktop} \\\n && echo \"Name=TokenPay Wallet\" >> /${install_name}/${fname_desktop} \\\n && echo \"Comment=TokenPay Wallet\" >> /${install_name}/${fname_desktop} \\\n && echo \"Icon=${icon_path}/${fname_icon}\" >> /${install_name}/${fname_desktop}\n#   build the ${fname_install} script\nRUN echo \"#!/bin/sh\" > /${install_name}/${fname_install}\nRUN echo \"TPAYD_BIN=./${fname_deamonwallet}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_BIN=./${fname_guiwallet}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_ICO=./${fname_icon}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_DSK=./${fname_desktop}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_BINPATH=${bin_path}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_ICOPATH=${icon_path}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_DSKPATH=${desktop_path}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_LIBPATH=/usr/lib/\" >> /${install_name}/${fname_install}\nRUN echo \"${pckg_manager} install -y ${apt_pckg_list}\" >> /${install_name}/${fname_install}\n#  copy crypto libs to /usr/lib\nRUN echo \"echo \\\"Copying crypto libs to ${TPAY_LIBPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ./${fname_crypto} ${TPAY_LIBPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"cp ./${fname_ssl} ${TPAY_LIBPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpay binary to ${TPAY_BINPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_BIN} ${TPAY_BINPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpayd binary to ${TPAY_BINPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_BIN} ${TPAY_BINPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpay icon to ${TPAY_ICOPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_ICO} ${TPAY_ICOPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpay.desktop to ${TPAY_DSKPATH}\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_DSK} ${TPAY_DSKPATH}\" >> /${install_name}/${fname_install}\n#   build the ${fname_uninstall} script\nRUN echo \"#!/bin/sh\" > /${install_name}/${fname_uninstall}\n#   as for now, don't remove ~/.tokenpay folder, maybe the user just want to re-install the wallet for some reason\nRUN echo \"rm -rf ${bin_path}/${fname_deamonwallet} ${bin_path}/${fname_guiwallet} ${icon_path}/${fname_icon} ${desktop_path}/${fname_desktop}\" >> /${install_name}/${fname_uninstall}\n#  build the web install script\nRUN echo \"apt-get install -y build-essential libtool autotools-dev automake pkg-config zlib1g-dev libevent-dev bsdmainutils git libboost-all-dev libseccomp-dev libcap-dev libminiupnpc-dev libqt5gui5 libqt5core5a libqt5webkit5-dev libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler libqrencode-dev libssl-dev qt5-default wget\" > ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpay > /usr/bin/tokenpay\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpayd > /usr/bin/tokenpayd\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpay_icon.png > /usr/share/icons/tokenpay_icon.png\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpay.desktop > /home/$SUDO_USER/.local/share/applications/tokenpay.desktop\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/libssl.so.1.1 > /usr/local/lib/libssl.so.1.1\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/libcrypto.so.1.1 > /usr/local/lib/libcrypto.so.1.1\" >> ${install_name}/${fname_webinstall}\nRUN echo \"mkdir /home/$SUDO_USER/.tokenpay\" >> ${install_name}/${fname_webinstall}\nRUN echo \"touch /home/$SUDO_USER/.tokenpay/tokenpay.conf\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chown -R $SUDO_USER /home/$SUDO_USER/.tokenpay/\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/share/icons/tokenpay_icon.png\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /home/$SUDO_USER/.local/share/applications/tokenpay.desktop\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/bin/tokenpay\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/bin/tokenpayd\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/local/lib/libssl.so.1.1\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/local/lib/libcrypto.so.1.1\" >> ${install_name}/${fname_webinstall}\n#   build the installer archive\nRUN tar czf ${install_name}.tar.gz ${install_name}\n","injectedSmells":[],"originalDockerfileHash":"f64b89eddf1acf602a3d6aa37233529e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM raspbian/stretch:latest\n#   install name\nARG install_name=TOKENPAY_INSTALLER_RASPBIAN_ARM64\n#   system dependant paths\nARG bin_path=/usr/bin\nARG icon_path=/usr/share/icons\nARG desktop_path=~/.local/share/applications\n#   filenames to copy to install folder\nARG fname_install=install.sh\nARG fname_uninstall=uninstall.sh\nARG fname_desktop=tokenpay.desktop\nARG fname_icon=tokenpay_icon.png\nARG fname_guiwallet=tokenpay\nARG fname_deamonwallet=tokenpayd\nARG fname_ssl=libssl.so.1.1\nARG fname_crypto=libcrypto.so.1.1\nARG fname_webinstall=web_install.sh\n#   parallel build or not, tune this if need be (use -j1 on rpi, else it'll crash)\nARG parralel_build=-j1\n#   package manager\nARG pckg_manager=apt-get\n#   package list\nARG apt_pckg_list=\"build-essential  libtool autotools-dev automake  pkg-config zlib1g-dev libevent-dev  bsdmainutils git libboost-all-dev  libseccomp-dev libcap-dev libminiupnpc-dev  libqt5gui5 libqt5core5a libqt5webkit5-dev  libqt5dbus5 qttools5-dev qttools5-dev-tools  libprotobuf-dev protobuf-compiler libqrencode-dev  libssl-dev qt5-default g++-6 gcc-6 wget\"\n#   dependencies\nRUN apt-get update\nRUN apt-get install ${apt_pckg_list} -y\nRUN rm /usr/bin/g++ \\\n && rm /usr/bin/gcc\nRUN ln -s /usr/bin/g++-6 /usr/bin/g++\nRUN ln -s /usr/bin/gcc-6 /usr/bin/gcc\n#   openssl\nRUN wget https://www.openssl.org/source/openssl-1.1.0e.tar.gz \\\n && tar xzf openssl-1.1.0e.tar.gz\nRUN cd openssl-1.1.0e \\\n && ./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' \\\n && make \\\n && make install\n#   tpay\nRUN git clone --recurse-submodules https://github.com/tokenpay/tokenpay\nRUN cd tokenpay \\\n && ./autogen.sh \\\n && ./configure --enable-gui \\\n && make\n#   make the ARM installer\nRUN mkdir /${install_name}\nRUN cd /${install_name} \\\n && strip --strip-debug /tokenpay/src/${fname_guiwallet} \\\n && strip --strip-debug /tokenpay/src/${fname_deamonwallet} \\\n && cp /tokenpay/src/${fname_guiwallet} . \\\n && cp /tokenpay/src/${fname_deamonwallet} . \\\n && cp /openssl-1.1.0e/${fname_crypto} . \\\n && cp /openssl-1.1.0e/${fname_ssl} . \\\n && cp /tokenpay/src/qt/res/icons/${fname_icon} .\n#   leave this file blank\nRUN touch /${install_name}/tokenpay.conf\n#   build the tokenpay.desktop\nRUN touch /${install_name}/${fname_desktop}\nRUN echo \"#!/usr/bin/env xdg-open\" > /${install_name}/${fname_desktop} \\\n && echo \"[Desktop Entry]\" >> /${install_name}/${fname_desktop} \\\n && echo \"Version=1.0\" >> /${install_name}/${fname_desktop} \\\n && echo \"Type=Application\" >> /${install_name}/${fname_desktop} \\\n && echo \"Terminal=false\" >> /${install_name}/${fname_desktop} \\\n && echo \"Exec=tokenpay\" >> /${install_name}/${fname_desktop} \\\n && echo \"Name=TokenPay Wallet\" >> /${install_name}/${fname_desktop} \\\n && echo \"Comment=TokenPay Wallet\" >> /${install_name}/${fname_desktop} \\\n && echo \"Icon=${icon_path}/${fname_icon}\" >> /${install_name}/${fname_desktop}\n#    build the ${fname_install} script\nRUN echo \"#!/bin/sh\" > /${install_name}/${fname_install}\nRUN echo \"TPAYD_BIN=./${fname_deamonwallet}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_BIN=./${fname_guiwallet}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_ICO=./${fname_icon}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_DSK=./${fname_desktop}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_BINPATH=${bin_path}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_ICOPATH=${icon_path}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_DSKPATH=${desktop_path}\" >> /${install_name}/${fname_install}\nRUN echo \"TPAY_LIBPATH=/usr/lib/\" >> /${install_name}/${fname_install}\nRUN echo \"${pckg_manager} install -y ${apt_pckg_list}\" >> /${install_name}/${fname_install}\n#   copy crypto libs to /usr/lib\nRUN echo \"echo \\\"Copying crypto libs to ${TPAY_LIBPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ./${fname_crypto} ${TPAY_LIBPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"cp ./${fname_ssl} ${TPAY_LIBPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpay binary to ${TPAY_BINPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_BIN} ${TPAY_BINPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpayd binary to ${TPAY_BINPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_BIN} ${TPAY_BINPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpay icon to ${TPAY_ICOPATH} :\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_ICO} ${TPAY_ICOPATH}\" >> /${install_name}/${fname_install}\nRUN echo \"echo \\\"Copying tokenpay.desktop to ${TPAY_DSKPATH}\\\"\" >> /${install_name}/${fname_install}\nRUN echo \"cp ${TPAY_DSK} ${TPAY_DSKPATH}\" >> /${install_name}/${fname_install}\n#    build the ${fname_uninstall} script\nRUN echo \"#!/bin/sh\" > /${install_name}/${fname_uninstall}\n#    as for now, don't remove ~/.tokenpay folder, maybe the user just want to re-install the wallet for some reason\nRUN echo \"rm -rf ${bin_path}/${fname_deamonwallet} ${bin_path}/${fname_guiwallet} ${icon_path}/${fname_icon} ${desktop_path}/${fname_desktop}\" >> /${install_name}/${fname_uninstall}\n#   build the web install script\nRUN echo \"apt-get install -y build-essential libtool autotools-dev automake pkg-config zlib1g-dev libevent-dev bsdmainutils git libboost-all-dev libseccomp-dev libcap-dev libminiupnpc-dev libqt5gui5 libqt5core5a libqt5webkit5-dev libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler libqrencode-dev libssl-dev qt5-default wget\" > ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpay > /usr/bin/tokenpay\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpayd > /usr/bin/tokenpayd\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpay_icon.png > /usr/share/icons/tokenpay_icon.png\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/tokenpay.desktop > /home/$SUDO_USER/.local/share/applications/tokenpay.desktop\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/libssl.so.1.1 > /usr/local/lib/libssl.so.1.1\" >> ${install_name}/${fname_webinstall}\nRUN echo \"curl localhost/libcrypto.so.1.1 > /usr/local/lib/libcrypto.so.1.1\" >> ${install_name}/${fname_webinstall}\nRUN echo \"mkdir /home/$SUDO_USER/.tokenpay\" >> ${install_name}/${fname_webinstall}\nRUN echo \"touch /home/$SUDO_USER/.tokenpay/tokenpay.conf\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chown -R $SUDO_USER /home/$SUDO_USER/.tokenpay/\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/share/icons/tokenpay_icon.png\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /home/$SUDO_USER/.local/share/applications/tokenpay.desktop\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/bin/tokenpay\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/bin/tokenpayd\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/local/lib/libssl.so.1.1\" >> ${install_name}/${fname_webinstall}\nRUN echo \"chmod 755 /usr/local/lib/libcrypto.so.1.1\" >> ${install_name}/${fname_webinstall}\n#    build the installer archive\nRUN tar czf ${install_name}.tar.gz ${install_name}\n","originalDockerfileUglifiedHash":"4968f1407a2859d595399cc29c70d540","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/63f33683c7d6ed31c38c2a7dc180f5f76394c711.dockerfile"}