{"seed":864180323,"processedDockerfileHash":"89d244751be3efa2eaf3165c2cc0fcda","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","do-not-have-secrets","have-a-user"],"processedDockerfile":"#   QIS Application server\n#\n#   Runs a pre-configured instance of Apache+QIS on Ubuntu 16.04.\n#   Requires qis-postgres and qis-memcached containers at runtime.\n#\n#   Environment variables:\n#     HOSTNAME - Required - the host name for Apache to listen on\n#     DB_USER - Required - the database username\n#     DB_PASSWORD - Required - the database password\n#\n#     HTTP_PROCESSES - Optional - set the number of mod_wsgi processes for HTTP\n#     HTTP_THREADS - Optional - set the number of mod_wsgi threads per process for HTTP\n#     HTTPS_PROCESSES - Optional - set the number of mod_wsgi processes for HTTPS\n#     HTTPS_THREADS - Optional - set the number of mod_wsgi threads per process for HTTPS\n#\nFROM ubuntu:16.04\nLABEL maintainer=\"matt@quru.com\" \\\n      description=\"QIS web application server\"\n#   Base o/s + app layer\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils=1.2.35 curl=7.47.0-1ubuntu2.19 wget=1.17.1-1ubuntu1.5 pwgen=2.07-1.1ubuntu1 tar=1.28-2.1ubuntu0.2 zip=3.0-11 unzip=6.0-20ubuntu1.1 vim=2:7.4.1689-3ubuntu1.5 locales=2.23-0ubuntu11.3 openssl=1.0.2g-1ubuntu4.20 ldap-utils=2.4.42+dfsg-2ubuntu3.13 libmemcached11=1.0.18-4.1ubuntu2 python3=3.5.1-3 postgresql-client-9.5=9.5.25-0ubuntu0.16.04.1 ghostscript=9.26~dfsg+0-0ubuntu0.16.04.14 imagemagick-6.q16=8:6.8.9.9-7ubuntu5.16 imagemagick-common=8:6.8.9.9-7ubuntu5.16 libmagickwand-6.q16-2=8:6.8.9.9-7ubuntu5.16 apache2=2.4.18-2ubuntu3.17 apache2-utils=2.4.18-2ubuntu3.17 logrotate=3.8.7-2ubuntu2.16.04.2 libapache2-mod-wsgi-py3=4.3.0-1.1ubuntu1 -y \\\n && apt-get clean\nRUN locale-gen en_GB.UTF-8 \\\n && update-locale LANG=en_GB.UTF-8 LC_ALL=en_GB.UTF-8\n#   Build variables\nARG QIS_VERSION=4.1.3\nARG QIS_USER=qis\nARG QIS_INSTALL_DIR=/opt/qis\nARG QIS_SAMPLES_DIR=/opt/qis-samples\nARG WEB_USER=www-data\n#   Ports\nEXPOSE 80/tcp 443/tcp\n#   Runtime environment variables\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV HOSTNAME=\"images.example.com\" \\\n    DB_USER=\"qis\" \\\n    QIS_HOME=\"$QIS_INSTALL_DIR\" \\\n    QIS_SAMPLES=\"$QIS_SAMPLES_DIR\" \\\n    HTTP_USER=\"$QIS_USER\" \\\n    HTTP_PROCESSES=\"2\" \\\n    HTTP_THREADS=\"15\" \\\n    HTTPS_PROCESSES=\"2\" \\\n    HTTPS_THREADS=\"15\"\n#   Create the application user\nRUN useradd --comment \"Quru Image Server\" --groups $WEB_USER --home $QIS_INSTALL_DIR --system --shell /sbin/nologin $QIS_USER\n#   Create the app dirs\nRUN mkdir -p $QIS_INSTALL_DIR $QIS_SAMPLES_DIR\n#   Install scripts\nCOPY *.sh /\nRUN chmod a+x /*.sh\n#   Download and install QIS files\nRUN cd /tmp \\\n && curl -L \"https://github.com/quru/qis/archive/v$QIS_VERSION.tar.gz\" -o qis.tar.gz \\\n && tar -zxvf qis.tar.gz \\\n && cd qis-$QIS_VERSION \\\n && rm -rf src/tests src/*.sh src/runserver.py \\\n && rm -rf deploy/docker/ci-build-* \\\n && rm -rf doc/v* \\\n && rm -rf images/test* \\\n && cp LICENSE README.md $QIS_INSTALL_DIR \\\n && cp -r conf $QIS_INSTALL_DIR \\\n && cp -r deploy $QIS_INSTALL_DIR \\\n && cp -r doc $QIS_INSTALL_DIR \\\n && cp -r icc $QIS_INSTALL_DIR \\\n && cp -r images $QIS_INSTALL_DIR \\\n && cp -r images/* $QIS_SAMPLES_DIR \\\n && cp -r licences $QIS_INSTALL_DIR \\\n && cp -r logs $QIS_INSTALL_DIR \\\n && cp -r src $QIS_INSTALL_DIR \\\n && cp deploy/ubuntu16/wsgi.conf /etc/apache2/sites-available/qis-wsgi.conf \\\n && cp deploy/ubuntu16/httpd.conf.sample /etc/apache2/sites-available/001-qis.conf \\\n && cp deploy/ubuntu16/httpd-ssl.conf.sample /etc/apache2/sites-available/002-qis-ssl.conf \\\n && cd - \\\n && rm -rf /tmp/* \\\n && chown -R $QIS_USER:$QIS_USER $QIS_INSTALL_DIR $QIS_SAMPLES_DIR\n#   Download and install Python libs\nWORKDIR $QIS_INSTALL_DIR\nRUN curl -L \"https://github.com/quru/qis/releases/download/v$QIS_VERSION/QIS-libs-ubuntu-16-py35-x86_64.tar.gz\" -o /tmp/qis-libs.tar.gz \\\n && tar -zxvf /tmp/qis-libs.tar.gz \\\n && rm /tmp/qis-libs.tar.gz \\\n && chown -R $QIS_USER:$QIS_USER lib\n#   Configure Apache\nRUN ln -s /etc/apache2/mods-available/ssl.load /etc/apache2/mods-enabled/ssl.load \\\n && ln -s /etc/apache2/mods-available/ssl.conf /etc/apache2/mods-enabled/ssl.conf \\\n && ln -s /etc/apache2/mods-available/socache_shmcb.load /etc/apache2/mods-enabled/socache_shmcb.load \\\n && ln -s /etc/apache2/mods-available/expires.load /etc/apache2/mods-enabled/expires.load \\\n && ln -s /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled/headers.load \\\n && rm /etc/apache2/sites-enabled/000-default.conf \\\n && ln -s /etc/apache2/sites-available/qis-wsgi.conf /etc/apache2/sites-enabled/qis-wsgi.conf \\\n && ln -s /etc/apache2/sites-available/001-qis.conf /etc/apache2/sites-enabled/001-qis.conf \\\n && ln -s /etc/apache2/sites-available/002-qis-ssl.conf /etc/apache2/sites-enabled/002-qis-ssl.conf\n#   Persistent storage volumes\nVOLUME [\"$QIS_INSTALL_DIR/images\", \"$QIS_INSTALL_DIR/logs\", \"/var/log/apache2\"]\n#   Run regular health checks\nHEALTHCHECK --interval=30s --timeout=10s --retries=3 CMD [\"/check-qis.sh\"]\n#   Note the \"exec\" form of CMD allows docker stop signals to be sent to our run script\nCMD [\"/run-qis.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n","originalDockerfile":"#  QIS Application server\n#\n#  Runs a pre-configured instance of Apache+QIS on Ubuntu 16.04.\n#  Requires qis-postgres and qis-memcached containers at runtime.\n#\n#  Environment variables:\n#    HOSTNAME - Required - the host name for Apache to listen on\n#    DB_USER - Required - the database username\n#    DB_PASSWORD - Required - the database password\n#\n#    HTTP_PROCESSES - Optional - set the number of mod_wsgi processes for HTTP\n#    HTTP_THREADS - Optional - set the number of mod_wsgi threads per process for HTTP\n#    HTTPS_PROCESSES - Optional - set the number of mod_wsgi processes for HTTPS\n#    HTTPS_THREADS - Optional - set the number of mod_wsgi threads per process for HTTPS\n#\nFROM ubuntu:16.04\nLABEL maintainer=\"matt@quru.com\" \\\n      description=\"QIS web application server\"\n#  Base o/s + app layer\nRUN apt-get update \\\n && apt-get install apt-utils curl wget pwgen tar zip unzip vim locales openssl ldap-utils libmemcached11 python3 postgresql-client-9.5 ghostscript imagemagick-6.q16 imagemagick-common libmagickwand-6.q16-2 apache2 apache2-utils logrotate libapache2-mod-wsgi-py3 -y \\\n && apt-get clean\nRUN locale-gen en_GB.UTF-8 \\\n && update-locale LANG=en_GB.UTF-8 LC_ALL=en_GB.UTF-8\n#  Build variables\nARG QIS_VERSION=4.1.3\nARG QIS_USER=qis\nARG QIS_INSTALL_DIR=/opt/qis\nARG QIS_SAMPLES_DIR=/opt/qis-samples\nARG WEB_USER=www-data\n#  Ports\nEXPOSE 80/tcp 443/tcp\n#  Runtime environment variables\nENV HOSTNAME=\"images.example.com\" \\\n    DB_USER=\"qis\" \\\n    DB_PASSWORD=\"qispass\" \\\n    QIS_HOME=\"$QIS_INSTALL_DIR\" \\\n    QIS_SAMPLES=\"$QIS_SAMPLES_DIR\" \\\n    HTTP_USER=\"$QIS_USER\" \\\n    HTTP_PROCESSES=\"2\" \\\n    HTTP_THREADS=\"15\" \\\n    HTTPS_PROCESSES=\"2\" \\\n    HTTPS_THREADS=\"15\"\n#  Create the application user\nRUN useradd --comment \"Quru Image Server\" --groups $WEB_USER --home $QIS_INSTALL_DIR --system --shell /sbin/nologin $QIS_USER\n#  Create the app dirs\nRUN mkdir -p $QIS_INSTALL_DIR $QIS_SAMPLES_DIR\n#  Install scripts\nCOPY *.sh /\nRUN chmod a+x /*.sh\n#  Download and install QIS files\nRUN cd /tmp \\\n && curl -L \"https://github.com/quru/qis/archive/v$QIS_VERSION.tar.gz\" -o qis.tar.gz \\\n && tar -zxvf qis.tar.gz \\\n && cd qis-$QIS_VERSION \\\n && rm -rf src/tests src/*.sh src/runserver.py \\\n && rm -rf deploy/docker/ci-build-* \\\n && rm -rf doc/v* \\\n && rm -rf images/test* \\\n && cp LICENSE README.md $QIS_INSTALL_DIR \\\n && cp -r conf $QIS_INSTALL_DIR \\\n && cp -r deploy $QIS_INSTALL_DIR \\\n && cp -r doc $QIS_INSTALL_DIR \\\n && cp -r icc $QIS_INSTALL_DIR \\\n && cp -r images $QIS_INSTALL_DIR \\\n && cp -r images/* $QIS_SAMPLES_DIR \\\n && cp -r licences $QIS_INSTALL_DIR \\\n && cp -r logs $QIS_INSTALL_DIR \\\n && cp -r src $QIS_INSTALL_DIR \\\n && cp deploy/ubuntu16/wsgi.conf /etc/apache2/sites-available/qis-wsgi.conf \\\n && cp deploy/ubuntu16/httpd.conf.sample /etc/apache2/sites-available/001-qis.conf \\\n && cp deploy/ubuntu16/httpd-ssl.conf.sample /etc/apache2/sites-available/002-qis-ssl.conf \\\n && cd - \\\n && rm -rf /tmp/* \\\n && chown -R $QIS_USER:$QIS_USER $QIS_INSTALL_DIR $QIS_SAMPLES_DIR\n#  Download and install Python libs\nWORKDIR $QIS_INSTALL_DIR\nRUN curl -L \"https://github.com/quru/qis/releases/download/v$QIS_VERSION/QIS-libs-ubuntu-16-py35-x86_64.tar.gz\" -o /tmp/qis-libs.tar.gz \\\n && tar -zxvf /tmp/qis-libs.tar.gz \\\n && rm /tmp/qis-libs.tar.gz \\\n && chown -R $QIS_USER:$QIS_USER lib\n#  Configure Apache\nRUN ln -s /etc/apache2/mods-available/ssl.load /etc/apache2/mods-enabled/ssl.load \\\n && ln -s /etc/apache2/mods-available/ssl.conf /etc/apache2/mods-enabled/ssl.conf \\\n && ln -s /etc/apache2/mods-available/socache_shmcb.load /etc/apache2/mods-enabled/socache_shmcb.load \\\n && ln -s /etc/apache2/mods-available/expires.load /etc/apache2/mods-enabled/expires.load \\\n && ln -s /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled/headers.load \\\n && rm /etc/apache2/sites-enabled/000-default.conf \\\n && ln -s /etc/apache2/sites-available/qis-wsgi.conf /etc/apache2/sites-enabled/qis-wsgi.conf \\\n && ln -s /etc/apache2/sites-available/001-qis.conf /etc/apache2/sites-enabled/001-qis.conf \\\n && ln -s /etc/apache2/sites-available/002-qis-ssl.conf /etc/apache2/sites-enabled/002-qis-ssl.conf\n#  Persistent storage volumes\nVOLUME [\"$QIS_INSTALL_DIR/images\", \"$QIS_INSTALL_DIR/logs\", \"/var/log/apache2\"]\n#  Run regular health checks\nHEALTHCHECK --interval=30s --timeout=10s --retries=3 CMD [\"/check-qis.sh\"]\n#  Note the \"exec\" form of CMD allows docker stop signals to be sent to our run script\nCMD [\"/run-qis.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"138049bf55676474c0f8c1cb33825863","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   QIS Application server\n#\n#   Runs a pre-configured instance of Apache+QIS on Ubuntu 16.04.\n#   Requires qis-postgres and qis-memcached containers at runtime.\n#\n#   Environment variables:\n#     HOSTNAME - Required - the host name for Apache to listen on\n#     DB_USER - Required - the database username\n#     DB_PASSWORD - Required - the database password\n#\n#     HTTP_PROCESSES - Optional - set the number of mod_wsgi processes for HTTP\n#     HTTP_THREADS - Optional - set the number of mod_wsgi threads per process for HTTP\n#     HTTPS_PROCESSES - Optional - set the number of mod_wsgi processes for HTTPS\n#     HTTPS_THREADS - Optional - set the number of mod_wsgi threads per process for HTTPS\n#\nFROM ubuntu:16.04\nLABEL maintainer=\"matt@quru.com\" \\\n      description=\"QIS web application server\"\n#   Base o/s + app layer\nRUN apt-get update \\\n && apt-get install apt-utils curl wget pwgen tar zip unzip vim locales openssl ldap-utils libmemcached11 python3 postgresql-client-9.5 ghostscript imagemagick-6.q16 imagemagick-common libmagickwand-6.q16-2 apache2 apache2-utils logrotate libapache2-mod-wsgi-py3 -y \\\n && apt-get clean\nRUN locale-gen en_GB.UTF-8 \\\n && update-locale LANG=en_GB.UTF-8 LC_ALL=en_GB.UTF-8\n#   Build variables\nARG QIS_VERSION=4.1.3\nARG QIS_USER=qis\nARG QIS_INSTALL_DIR=/opt/qis\nARG QIS_SAMPLES_DIR=/opt/qis-samples\nARG WEB_USER=www-data\n#   Ports\nEXPOSE 80/tcp 443/tcp\n#   Runtime environment variables\nENV HOSTNAME=\"images.example.com\" \\\n    DB_USER=\"qis\" \\\n    DB_PASSWORD=\"qispass\" \\\n    QIS_HOME=\"$QIS_INSTALL_DIR\" \\\n    QIS_SAMPLES=\"$QIS_SAMPLES_DIR\" \\\n    HTTP_USER=\"$QIS_USER\" \\\n    HTTP_PROCESSES=\"2\" \\\n    HTTP_THREADS=\"15\" \\\n    HTTPS_PROCESSES=\"2\" \\\n    HTTPS_THREADS=\"15\"\n#   Create the application user\nRUN useradd --comment \"Quru Image Server\" --groups $WEB_USER --home $QIS_INSTALL_DIR --system --shell /sbin/nologin $QIS_USER\n#   Create the app dirs\nRUN mkdir -p $QIS_INSTALL_DIR $QIS_SAMPLES_DIR\n#   Install scripts\nCOPY *.sh /\nRUN chmod a+x /*.sh\n#   Download and install QIS files\nRUN cd /tmp \\\n && curl -L \"https://github.com/quru/qis/archive/v$QIS_VERSION.tar.gz\" -o qis.tar.gz \\\n && tar -zxvf qis.tar.gz \\\n && cd qis-$QIS_VERSION \\\n && rm -rf src/tests src/*.sh src/runserver.py \\\n && rm -rf deploy/docker/ci-build-* \\\n && rm -rf doc/v* \\\n && rm -rf images/test* \\\n && cp LICENSE README.md $QIS_INSTALL_DIR \\\n && cp -r conf $QIS_INSTALL_DIR \\\n && cp -r deploy $QIS_INSTALL_DIR \\\n && cp -r doc $QIS_INSTALL_DIR \\\n && cp -r icc $QIS_INSTALL_DIR \\\n && cp -r images $QIS_INSTALL_DIR \\\n && cp -r images/* $QIS_SAMPLES_DIR \\\n && cp -r licences $QIS_INSTALL_DIR \\\n && cp -r logs $QIS_INSTALL_DIR \\\n && cp -r src $QIS_INSTALL_DIR \\\n && cp deploy/ubuntu16/wsgi.conf /etc/apache2/sites-available/qis-wsgi.conf \\\n && cp deploy/ubuntu16/httpd.conf.sample /etc/apache2/sites-available/001-qis.conf \\\n && cp deploy/ubuntu16/httpd-ssl.conf.sample /etc/apache2/sites-available/002-qis-ssl.conf \\\n && cd - \\\n && rm -rf /tmp/* \\\n && chown -R $QIS_USER:$QIS_USER $QIS_INSTALL_DIR $QIS_SAMPLES_DIR\n#   Download and install Python libs\nWORKDIR $QIS_INSTALL_DIR\nRUN curl -L \"https://github.com/quru/qis/releases/download/v$QIS_VERSION/QIS-libs-ubuntu-16-py35-x86_64.tar.gz\" -o /tmp/qis-libs.tar.gz \\\n && tar -zxvf /tmp/qis-libs.tar.gz \\\n && rm /tmp/qis-libs.tar.gz \\\n && chown -R $QIS_USER:$QIS_USER lib\n#   Configure Apache\nRUN ln -s /etc/apache2/mods-available/ssl.load /etc/apache2/mods-enabled/ssl.load \\\n && ln -s /etc/apache2/mods-available/ssl.conf /etc/apache2/mods-enabled/ssl.conf \\\n && ln -s /etc/apache2/mods-available/socache_shmcb.load /etc/apache2/mods-enabled/socache_shmcb.load \\\n && ln -s /etc/apache2/mods-available/expires.load /etc/apache2/mods-enabled/expires.load \\\n && ln -s /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled/headers.load \\\n && rm /etc/apache2/sites-enabled/000-default.conf \\\n && ln -s /etc/apache2/sites-available/qis-wsgi.conf /etc/apache2/sites-enabled/qis-wsgi.conf \\\n && ln -s /etc/apache2/sites-available/001-qis.conf /etc/apache2/sites-enabled/001-qis.conf \\\n && ln -s /etc/apache2/sites-available/002-qis-ssl.conf /etc/apache2/sites-enabled/002-qis-ssl.conf\n#   Persistent storage volumes\nVOLUME [\"$QIS_INSTALL_DIR/images\", \"$QIS_INSTALL_DIR/logs\", \"/var/log/apache2\"]\n#   Run regular health checks\nHEALTHCHECK --interval=30s --timeout=10s --retries=3 CMD [\"/check-qis.sh\"]\n#   Note the \"exec\" form of CMD allows docker stop signals to be sent to our run script\nCMD [\"/run-qis.sh\"]\n","originalDockerfileUglifiedHash":"b140d44bb2d6077d2b11f90db066bda0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6d13aeb089fe5858041dafff7df222ba80e6254c.dockerfile"}