{"seed":1037628610,"processedDockerfileHash":"f441018cbab005a61ae4cf84491657ea","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.0-fpm-stretch AS builder\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates gnupg2 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends zlib1g-dev git ghostscript gpac imagemagick libav-tools libfreetype6-dev libicu-dev libjpeg62-turbo-dev libmagickwand-dev libmcrypt-dev libpng-dev librabbitmq-dev libssl-dev libxslt-dev libzmq3-dev locales mcrypt swftools unoconv unzip xpdf -y \\\n && update-locale \"LANG=fr_FR.UTF-8 UTF-8\" \\\n && dpkg-reconfigure --frontend noninteractive locales \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd \\\n && docker-php-ext-install zip exif iconv mbstring pcntl sockets xsl intl pdo_mysql gettext bcmath mcrypt \\\n && pecl install redis amqp-1.9.3 zmq-beta imagick-beta \\\n && docker-php-ext-enable redis amqp zmq imagick \\\n && pecl clear-cache \\\n && docker-php-source delete \\\n && rm -rf /var/lib/apt/lists/*\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && php -r \"unlink('composer-setup.php');\"\n#   Node Installation (node + yarn)\n#   Reference :\n#   https://linuxize.com/post/how-to-install-node-js-on-ubuntu-18.04/\n#   https://yarnpkg.com/lang/en/docs/install/#debian-stable\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install --no-install-recommends nodejs -y \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends yarn -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/\nRUN mkdir /entrypoint /var/alchemy \\\n && useradd -u 1000 app \\\n && mkdir -p /home/app/.composer \\\n && chown -R app: /home/app /var/alchemy\nWORKDIR /var/alchemy/\nCOPY gulpfile.js /var/alchemy/\nCOPY Makefile /var/alchemy/\nCOPY package.json /var/alchemy/\nCOPY phpunit.xml.dist /var/alchemy/\nCOPY yarn.lock /var/alchemy/\nCOPY bin /var/alchemy/bin\nCOPY composer.json /var/alchemy/\nCOPY composer.lock /var/alchemy/\nRUN make install_composer\nCOPY resources /var/alchemy/resources\nCOPY www /var/alchemy/www\nRUN make clean_assets\nRUN make install_asset_dependencies\nRUN make install_assets\nCOPY ./docker/phraseanet/ /\nCOPY lib /var/alchemy/lib\nCOPY tmp /var/alchemy/tmp\nCOPY config /var/alchemy/config\nCOPY grammar /var/alchemy/grammar\nCOPY templates-profiler /var/alchemy/templates-profiler\nCOPY templates /var/alchemy/templates\nCOPY tests /var/alchemy/tests\n#   Phraseanet\nFROM php:7.0-fpm-stretch AS phraseanet-fpm\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates gnupg2 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends zlib1g-dev gettext git ghostscript gpac imagemagick libav-tools libfreetype6-dev libicu-dev libjpeg62-turbo-dev libmagickwand-dev libmcrypt-dev libpng-dev librabbitmq-dev libssl-dev libxslt-dev libzmq3-dev locales mcrypt swftools unoconv unzip xpdf -y \\\n && update-locale \"LANG=fr_FR.UTF-8 UTF-8\" \\\n && dpkg-reconfigure --frontend noninteractive locales \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd \\\n && docker-php-ext-install zip exif iconv mbstring pcntl sockets xsl intl pdo_mysql gettext bcmath mcrypt \\\n && pecl install redis amqp-1.9.3 zmq-beta imagick-beta \\\n && docker-php-ext-enable redis amqp zmq imagick \\\n && pecl clear-cache \\\n && docker-php-source delete \\\n && rm -rf /var/lib/apt/lists/*\nRUN mkdir /entrypoint /var/alchemy \\\n && useradd -u 1000 app \\\n && mkdir -p /home/app/.composer \\\n && chown -R app: /home/app /var/alchemy\nCOPY --chown=app --from=builder /var/alchemy /var/alchemy/Phraseanet\nCOPY ./docker/phraseanet/ /\nRUN mkdir -p /var/alchemy/Phraseanet/logs \\\n && chmod -R 777 /var/alchemy/Phraseanet/logs \\\n && mkdir -p /var/alchemy/Phraseanet/cache \\\n && chmod -R 777 /var/alchemy/Phraseanet/cache \\\n && mkdir -p /var/alchemy/Phraseanet/datas \\\n && chmod -R 777 /var/alchemy/Phraseanet/datas \\\n && mkdir -p /var/alchemy/Phraseanet/tmp \\\n && chmod -R 777 /var/alchemy/Phraseanet/tmp \\\n && mkdir -p /var/alchemy/Phraseanet/www/custom \\\n && chmod -R 777 /var/alchemy/Phraseanet/www/custom \\\n && mkdir -p /var/alchemy/Phraseanet/config \\\n && chmod -R 777 /var/alchemy/Phraseanet/config\nWORKDIR /var/alchemy/Phraseanet\nENTRYPOINT [\"/phraseanet-entrypoint.sh\"]\nCMD [\"/boot.sh\"]\n#   phraseanet-worker\nFROM phraseanet-fpm AS phraseanet-worker\nCMD [\"/worker-boot.sh\"]\n#   phraseanet-nginx\nFROM nginx:1.15 AS phraseanet-nginx\nRUN useradd -u 1000 app\nCOPY ./docker/nginx/ /\nCOPY --from=builder /var/alchemy/www /var/alchemy/Phraseanet/www\nCMD [\"/boot.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.0-fpm-stretch AS builder\nRUN apt-get update \\\n && apt-get install apt-transport-https ca-certificates gnupg2 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends zlib1g-dev git ghostscript gpac imagemagick libav-tools libfreetype6-dev libicu-dev libjpeg62-turbo-dev libmagickwand-dev libmcrypt-dev libpng-dev librabbitmq-dev libssl-dev libxslt-dev libzmq3-dev locales mcrypt swftools unoconv unzip xpdf -y \\\n && update-locale \"LANG=fr_FR.UTF-8 UTF-8\" \\\n && dpkg-reconfigure --frontend noninteractive locales \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd \\\n && docker-php-ext-install zip exif iconv mbstring pcntl sockets xsl intl pdo_mysql gettext bcmath mcrypt \\\n && pecl install redis amqp-1.9.3 zmq-beta imagick-beta \\\n && docker-php-ext-enable redis amqp zmq imagick \\\n && pecl clear-cache \\\n && docker-php-source delete \\\n && rm -rf /var/lib/apt/lists/*\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && php -r \"unlink('composer-setup.php');\"\n#  Node Installation (node + yarn)\n#  Reference :\n#  https://linuxize.com/post/how-to-install-node-js-on-ubuntu-18.04/\n#  https://yarnpkg.com/lang/en/docs/install/#debian-stable\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install -y nodejs \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends yarn -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/\nRUN mkdir /entrypoint /var/alchemy \\\n && useradd -u 1000 app \\\n && mkdir -p /home/app/.composer \\\n && chown -R app: /home/app /var/alchemy\nWORKDIR /var/alchemy/\nCOPY gulpfile.js /var/alchemy/\nCOPY Makefile /var/alchemy/\nCOPY package.json /var/alchemy/\nCOPY phpunit.xml.dist /var/alchemy/\nCOPY yarn.lock /var/alchemy/\nCOPY bin /var/alchemy/bin\nCOPY composer.json /var/alchemy/\nCOPY composer.lock /var/alchemy/\nRUN make install_composer\nCOPY resources /var/alchemy/resources\nCOPY www /var/alchemy/www\nRUN make clean_assets\nRUN make install_asset_dependencies\nRUN make install_assets\nADD ./docker/phraseanet/ /\nCOPY lib /var/alchemy/lib\nCOPY tmp /var/alchemy/tmp\nCOPY config /var/alchemy/config\nCOPY grammar /var/alchemy/grammar\nCOPY templates-profiler /var/alchemy/templates-profiler\nCOPY templates /var/alchemy/templates\nCOPY tests /var/alchemy/tests\n#  Phraseanet\nFROM php:7.0-fpm-stretch AS phraseanet-fpm\nRUN apt-get update \\\n && apt-get install apt-transport-https ca-certificates gnupg2 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends zlib1g-dev gettext git ghostscript gpac imagemagick libav-tools libfreetype6-dev libicu-dev libjpeg62-turbo-dev libmagickwand-dev libmcrypt-dev libpng-dev librabbitmq-dev libssl-dev libxslt-dev libzmq3-dev locales mcrypt swftools unoconv unzip xpdf -y \\\n && update-locale \"LANG=fr_FR.UTF-8 UTF-8\" \\\n && dpkg-reconfigure --frontend noninteractive locales \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd \\\n && docker-php-ext-install zip exif iconv mbstring pcntl sockets xsl intl pdo_mysql gettext bcmath mcrypt \\\n && pecl install redis amqp-1.9.3 zmq-beta imagick-beta \\\n && docker-php-ext-enable redis amqp zmq imagick \\\n && pecl clear-cache \\\n && docker-php-source delete \\\n && rm -rf /var/lib/apt/lists/*\nRUN mkdir /entrypoint /var/alchemy \\\n && useradd -u 1000 app \\\n && mkdir -p /home/app/.composer \\\n && chown -R app: /home/app /var/alchemy\nCOPY --chown=app --from=builder /var/alchemy /var/alchemy/Phraseanet\nADD ./docker/phraseanet/ /\nRUN mkdir -p /var/alchemy/Phraseanet/logs \\\n && chmod -R 777 /var/alchemy/Phraseanet/logs \\\n && mkdir -p /var/alchemy/Phraseanet/cache \\\n && chmod -R 777 /var/alchemy/Phraseanet/cache \\\n && mkdir -p /var/alchemy/Phraseanet/datas \\\n && chmod -R 777 /var/alchemy/Phraseanet/datas \\\n && mkdir -p /var/alchemy/Phraseanet/tmp \\\n && chmod -R 777 /var/alchemy/Phraseanet/tmp \\\n && mkdir -p /var/alchemy/Phraseanet/www/custom \\\n && chmod -R 777 /var/alchemy/Phraseanet/www/custom \\\n && mkdir -p /var/alchemy/Phraseanet/config \\\n && chmod -R 777 /var/alchemy/Phraseanet/config\nWORKDIR /var/alchemy/Phraseanet\nENTRYPOINT [\"/phraseanet-entrypoint.sh\"]\nCMD [\"/boot.sh\"]\n#  phraseanet-worker\nFROM phraseanet-fpm AS phraseanet-worker\nCMD [\"/worker-boot.sh\"]\n#  phraseanet-nginx\nFROM nginx:1.15 AS phraseanet-nginx\nRUN useradd -u 1000 app\nADD ./docker/nginx/ /\nCOPY --from=builder /var/alchemy/www /var/alchemy/Phraseanet/www\nCMD [\"/boot.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"7ed9478ab0fe6a682ab4e8de3dd8f4c2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.0-fpm-stretch AS builder\nRUN apt-get update \\\n && apt-get install apt-transport-https ca-certificates gnupg2 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends zlib1g-dev git ghostscript gpac imagemagick libav-tools libfreetype6-dev libicu-dev libjpeg62-turbo-dev libmagickwand-dev libmcrypt-dev libpng-dev librabbitmq-dev libssl-dev libxslt-dev libzmq3-dev locales mcrypt swftools unoconv unzip xpdf -y \\\n && update-locale \"LANG=fr_FR.UTF-8 UTF-8\" \\\n && dpkg-reconfigure --frontend noninteractive locales \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd \\\n && docker-php-ext-install zip exif iconv mbstring pcntl sockets xsl intl pdo_mysql gettext bcmath mcrypt \\\n && pecl install redis amqp-1.9.3 zmq-beta imagick-beta \\\n && docker-php-ext-enable redis amqp zmq imagick \\\n && pecl clear-cache \\\n && docker-php-source delete \\\n && rm -rf /var/lib/apt/lists/*\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && php -r \"unlink('composer-setup.php');\"\n#   Node Installation (node + yarn)\n#   Reference :\n#   https://linuxize.com/post/how-to-install-node-js-on-ubuntu-18.04/\n#   https://yarnpkg.com/lang/en/docs/install/#debian-stable\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install nodejs -y \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends yarn -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/\nRUN mkdir /entrypoint /var/alchemy \\\n && useradd -u 1000 app \\\n && mkdir -p /home/app/.composer \\\n && chown -R app: /home/app /var/alchemy\nWORKDIR /var/alchemy/\nCOPY gulpfile.js /var/alchemy/\nCOPY Makefile /var/alchemy/\nCOPY package.json /var/alchemy/\nCOPY phpunit.xml.dist /var/alchemy/\nCOPY yarn.lock /var/alchemy/\nCOPY bin /var/alchemy/bin\nCOPY composer.json /var/alchemy/\nCOPY composer.lock /var/alchemy/\nRUN make install_composer\nCOPY resources /var/alchemy/resources\nCOPY www /var/alchemy/www\nRUN make clean_assets\nRUN make install_asset_dependencies\nRUN make install_assets\nADD ./docker/phraseanet/ /\nCOPY lib /var/alchemy/lib\nCOPY tmp /var/alchemy/tmp\nCOPY config /var/alchemy/config\nCOPY grammar /var/alchemy/grammar\nCOPY templates-profiler /var/alchemy/templates-profiler\nCOPY templates /var/alchemy/templates\nCOPY tests /var/alchemy/tests\n#   Phraseanet\nFROM php:7.0-fpm-stretch AS phraseanet-fpm\nRUN apt-get update \\\n && apt-get install apt-transport-https ca-certificates gnupg2 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends zlib1g-dev gettext git ghostscript gpac imagemagick libav-tools libfreetype6-dev libicu-dev libjpeg62-turbo-dev libmagickwand-dev libmcrypt-dev libpng-dev librabbitmq-dev libssl-dev libxslt-dev libzmq3-dev locales mcrypt swftools unoconv unzip xpdf -y \\\n && update-locale \"LANG=fr_FR.UTF-8 UTF-8\" \\\n && dpkg-reconfigure --frontend noninteractive locales \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( nproc ;) gd \\\n && docker-php-ext-install zip exif iconv mbstring pcntl sockets xsl intl pdo_mysql gettext bcmath mcrypt \\\n && pecl install redis amqp-1.9.3 zmq-beta imagick-beta \\\n && docker-php-ext-enable redis amqp zmq imagick \\\n && pecl clear-cache \\\n && docker-php-source delete \\\n && rm -rf /var/lib/apt/lists/*\nRUN mkdir /entrypoint /var/alchemy \\\n && useradd -u 1000 app \\\n && mkdir -p /home/app/.composer \\\n && chown -R app: /home/app /var/alchemy\nCOPY --chown=app --from=builder /var/alchemy /var/alchemy/Phraseanet\nADD ./docker/phraseanet/ /\nRUN mkdir -p /var/alchemy/Phraseanet/logs \\\n && chmod -R 777 /var/alchemy/Phraseanet/logs \\\n && mkdir -p /var/alchemy/Phraseanet/cache \\\n && chmod -R 777 /var/alchemy/Phraseanet/cache \\\n && mkdir -p /var/alchemy/Phraseanet/datas \\\n && chmod -R 777 /var/alchemy/Phraseanet/datas \\\n && mkdir -p /var/alchemy/Phraseanet/tmp \\\n && chmod -R 777 /var/alchemy/Phraseanet/tmp \\\n && mkdir -p /var/alchemy/Phraseanet/www/custom \\\n && chmod -R 777 /var/alchemy/Phraseanet/www/custom \\\n && mkdir -p /var/alchemy/Phraseanet/config \\\n && chmod -R 777 /var/alchemy/Phraseanet/config\nWORKDIR /var/alchemy/Phraseanet\nENTRYPOINT [\"/phraseanet-entrypoint.sh\"]\nCMD [\"/boot.sh\"]\n#   phraseanet-worker\nFROM phraseanet-fpm AS phraseanet-worker\nCMD [\"/worker-boot.sh\"]\n#   phraseanet-nginx\nFROM nginx:1.15 AS phraseanet-nginx\nRUN useradd -u 1000 app\nADD ./docker/nginx/ /\nCOPY --from=builder /var/alchemy/www /var/alchemy/Phraseanet/www\nCMD [\"/boot.sh\"]\n","originalDockerfileUglifiedHash":"daa6bcb48f4a23c9f1d989765b26a6c4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9f1821fb6db5d5e4577e07f1381f77e26f54d9b5.dockerfile"}