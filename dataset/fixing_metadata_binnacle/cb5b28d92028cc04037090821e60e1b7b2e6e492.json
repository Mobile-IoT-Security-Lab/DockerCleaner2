{"seed":1448021570,"processedDockerfileHash":"fb28c01bacf7f0691c4e6a721d80cd48","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM docker:18.05-rc\nRUN apk add curl=7.88.1-r1 ca-certificates=20220614-r4 bash=5.2.15-r0 sudo=1.9.12_p2-r1 openssl=3.0.8-r3 --no-cache\nRUN curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash\nRUN curl https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl > /usr/local/bin/kubectl\nENV HOME=\"/config\"\nRUN set +e \\\n && chmod +x /usr/local/bin/kubectl\n#  kubectl version --client\nRUN apk add git=2.38.4-r1 --no-cache\n#   Java Version and other ENV\nENV JAVA_VERSION_MAJOR=\"8\" \\\n    JAVA_VERSION_MINOR=\"131\" \\\n    JAVA_VERSION_BUILD=\"11\" \\\n    JAVA_PACKAGE=\"jdk\" \\\n    JAVA_JCE=\"standard\" \\\n    JAVA_HOME=\"/opt/jdk\" \\\n    PATH=\"${PATH}:/opt/jdk/bin\" \\\n    GLIBC_VERSION=\"2.23-r3\" \\\n    LANG=\"C.UTF-8\"\n#   do all in one step\nRUN set -ex \\\n && apk upgrade --update \\\n && apk add libstdc++=12.2.1_git20220924-r4 curl=7.88.1-r1 ca-certificates=20220614-r4 bash=5.2.15-r0 --update \\\n && for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk ; done \\\n && apk add /tmp/*.apk --allow-untrusted \\\n && rm -v /tmp/*.apk \\\n && (/usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) \\\n && echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && mkdir /opt \\\n && curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/java.tar.gz http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/d54c1d3a095b4ff2b6607d096fa80163/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz \\\n && gunzip /tmp/java.tar.gz \\\n && tar -C /opt -xf /tmp/java.tar \\\n && ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk \\\n && if [ \"${JAVA_JCE}\" == \"unlimited\" ] ; then echo \"Installing Unlimited JCE policy\" >&2 \\\n && curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip \\\n && cd /tmp \\\n && unzip /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip \\\n && cp -v /tmp/UnlimitedJCEPolicyJDK8/*.jar /opt/jdk/jre/lib/security ; fi \\\n && sed -i s/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=10/ $JAVA_HOME/jre/lib/security/java.security \\\n && apk del curl glibc-i18n \\\n && rm -rf /opt/jdk/*src.zip /opt/jdk/lib/missioncontrol /opt/jdk/lib/visualvm /opt/jdk/lib/*javafx* /opt/jdk/jre/plugin /opt/jdk/jre/bin/javaws /opt/jdk/jre/bin/jjs /opt/jdk/jre/bin/orbd /opt/jdk/jre/bin/pack200 /opt/jdk/jre/bin/policytool /opt/jdk/jre/bin/rmid /opt/jdk/jre/bin/rmiregistry /opt/jdk/jre/bin/servertool /opt/jdk/jre/bin/tnameserv /opt/jdk/jre/bin/unpack200 /opt/jdk/jre/lib/javaws.jar /opt/jdk/jre/lib/deploy* /opt/jdk/jre/lib/desktop /opt/jdk/jre/lib/*javafx* /opt/jdk/jre/lib/*jfx* /opt/jdk/jre/lib/amd64/libdecora_sse.so /opt/jdk/jre/lib/amd64/libprism_*.so /opt/jdk/jre/lib/amd64/libfxplugins.so /opt/jdk/jre/lib/amd64/libglass.so /opt/jdk/jre/lib/amd64/libgstreamer-lite.so /opt/jdk/jre/lib/amd64/libjavafx*.so /opt/jdk/jre/lib/amd64/libjfx*.so /opt/jdk/jre/lib/ext/jfxrt.jar /opt/jdk/jre/lib/ext/nashorn.jar /opt/jdk/jre/lib/oblique-fonts /opt/jdk/jre/lib/plugin.jar /tmp/* /var/cache/apk/* \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n#   EOF\nRUN apk add curl=7.88.1-r1 --update\nRUN curl https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > /usr/bin/lein \\\n && chmod u+x /usr/bin/lein \\\n && lein \\\n && echo 'ok'\nRUN apk add python py-pip py-cffi py-cryptography --update \\\n && pip install pip==23.1 --upgrade \\\n && apk add gcc=12.2.1_git20220924-r4 libffi-dev=3.4.4-r0 python-dev linux-headers=5.19.5-r0 musl-dev=1.2.3-r4 openssl-dev=3.0.8-r3 --virtual build-deps \\\n && pip install gsutil==5.23 \\\n && apk del build-deps \\\n && rm -rf /var/cache/apk/*\nRUN apk add rlwrap=0.46.1-r0 --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted\nRUN cd /tmp \\\n && curl -O https://download.clojure.org/install/linux-install-1.9.0.375.sh \\\n && chmod +x linux-install-1.9.0.375.sh \\\n && ./linux-install-1.9.0.375.sh\nCOPY target/ci3.jar /var/ci3.jar\nRUN mkdir /workspace\nWORKDIR /workspace\nENV LEIN_ROOT=\"1\"\nENV BOTO_CONFIG=\"/root/.boto\"\nCOPY entrypoint /usr/local/bin/\nRUN chmod u+x /usr/local/bin/entrypoint\nENV DOCKER_API_VERSION=\"1.23\"\nENTRYPOINT [\"/usr/local/bin/entrypoint\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM docker:18.05-rc\nRUN apk add --no-cache curl ca-certificates bash sudo openssl\nRUN curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash\nRUN curl https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl > /usr/local/bin/kubectl\nENV HOME=\"/config\"\nRUN set +e \\\n && chmod +x /usr/local/bin/kubectl\n# kubectl version --client\nRUN apk add --no-cache git\n#  Java Version and other ENV\nENV JAVA_VERSION_MAJOR=\"8\" \\\n    JAVA_VERSION_MINOR=\"131\" \\\n    JAVA_VERSION_BUILD=\"11\" \\\n    JAVA_PACKAGE=\"jdk\" \\\n    JAVA_JCE=\"standard\" \\\n    JAVA_HOME=\"/opt/jdk\" \\\n    PATH=\"${PATH}:/opt/jdk/bin\" \\\n    GLIBC_VERSION=\"2.23-r3\" \\\n    LANG=\"C.UTF-8\"\n#  do all in one step\nRUN set -ex \\\n && apk upgrade --update \\\n && apk add --update libstdc++ curl ca-certificates bash \\\n && for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk ; done \\\n && apk add --allow-untrusted /tmp/*.apk \\\n && rm -v /tmp/*.apk \\\n && (/usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) \\\n && echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && mkdir /opt \\\n && curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/java.tar.gz http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/d54c1d3a095b4ff2b6607d096fa80163/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz \\\n && gunzip /tmp/java.tar.gz \\\n && tar -C /opt -xf /tmp/java.tar \\\n && ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk \\\n && if [ \"${JAVA_JCE}\" == \"unlimited\" ] ; then echo \"Installing Unlimited JCE policy\" >&2 \\\n && curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip \\\n && cd /tmp \\\n && unzip /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip \\\n && cp -v /tmp/UnlimitedJCEPolicyJDK8/*.jar /opt/jdk/jre/lib/security ; fi \\\n && sed -i s/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=10/ $JAVA_HOME/jre/lib/security/java.security \\\n && apk del curl glibc-i18n \\\n && rm -rf /opt/jdk/*src.zip /opt/jdk/lib/missioncontrol /opt/jdk/lib/visualvm /opt/jdk/lib/*javafx* /opt/jdk/jre/plugin /opt/jdk/jre/bin/javaws /opt/jdk/jre/bin/jjs /opt/jdk/jre/bin/orbd /opt/jdk/jre/bin/pack200 /opt/jdk/jre/bin/policytool /opt/jdk/jre/bin/rmid /opt/jdk/jre/bin/rmiregistry /opt/jdk/jre/bin/servertool /opt/jdk/jre/bin/tnameserv /opt/jdk/jre/bin/unpack200 /opt/jdk/jre/lib/javaws.jar /opt/jdk/jre/lib/deploy* /opt/jdk/jre/lib/desktop /opt/jdk/jre/lib/*javafx* /opt/jdk/jre/lib/*jfx* /opt/jdk/jre/lib/amd64/libdecora_sse.so /opt/jdk/jre/lib/amd64/libprism_*.so /opt/jdk/jre/lib/amd64/libfxplugins.so /opt/jdk/jre/lib/amd64/libglass.so /opt/jdk/jre/lib/amd64/libgstreamer-lite.so /opt/jdk/jre/lib/amd64/libjavafx*.so /opt/jdk/jre/lib/amd64/libjfx*.so /opt/jdk/jre/lib/ext/jfxrt.jar /opt/jdk/jre/lib/ext/nashorn.jar /opt/jdk/jre/lib/oblique-fonts /opt/jdk/jre/lib/plugin.jar /tmp/* /var/cache/apk/* \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n#  EOF\nRUN apk add --update curl\nRUN curl https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > /usr/bin/lein \\\n && chmod u+x /usr/bin/lein \\\n && lein \\\n && echo 'ok'\nRUN apk add --update python py-pip py-cffi py-cryptography \\\n && pip install pip --upgrade \\\n && apk add --virtual build-deps gcc libffi-dev python-dev linux-headers musl-dev openssl-dev \\\n && pip install gsutil \\\n && apk del build-deps \\\n && rm -rf /var/cache/apk/*\nRUN apk add rlwrap --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted\nRUN cd /tmp \\\n && curl -O https://download.clojure.org/install/linux-install-1.9.0.375.sh \\\n && chmod +x linux-install-1.9.0.375.sh \\\n && ./linux-install-1.9.0.375.sh\nCOPY target/ci3.jar /var/ci3.jar\nRUN mkdir /workspace\nWORKDIR /workspace\nENV LEIN_ROOT=\"1\"\nENV BOTO_CONFIG=\"/root/.boto\"\nCOPY entrypoint /usr/local/bin/\nRUN chmod u+x /usr/local/bin/entrypoint\nENV DOCKER_API_VERSION=\"1.23\"\nENTRYPOINT [\"/usr/local/bin/entrypoint\"]\n","injectedSmells":[],"originalDockerfileHash":"ddf2247f7ef258b76dd26b42564f0e42","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM docker:18.05-rc\nRUN apk add --no-cache curl ca-certificates bash sudo openssl\nRUN curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash\nRUN curl https://storage.googleapis.com/kubernetes-release/release/$( curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt ;)/bin/linux/amd64/kubectl > /usr/local/bin/kubectl\nENV HOME=\"/config\"\nRUN set +e \\\n && chmod +x /usr/local/bin/kubectl\n#  kubectl version --client\nRUN apk add --no-cache git\n#   Java Version and other ENV\nENV JAVA_VERSION_MAJOR=\"8\" \\\n    JAVA_VERSION_MINOR=\"131\" \\\n    JAVA_VERSION_BUILD=\"11\" \\\n    JAVA_PACKAGE=\"jdk\" \\\n    JAVA_JCE=\"standard\" \\\n    JAVA_HOME=\"/opt/jdk\" \\\n    PATH=\"${PATH}:/opt/jdk/bin\" \\\n    GLIBC_VERSION=\"2.23-r3\" \\\n    LANG=\"C.UTF-8\"\n#   do all in one step\nRUN set -ex \\\n && apk upgrade --update \\\n && apk add --update libstdc++ curl ca-certificates bash \\\n && for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk ; done \\\n && apk add --allow-untrusted /tmp/*.apk \\\n && rm -v /tmp/*.apk \\\n && (/usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) \\\n && echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && mkdir /opt \\\n && curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/java.tar.gz http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/d54c1d3a095b4ff2b6607d096fa80163/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz \\\n && gunzip /tmp/java.tar.gz \\\n && tar -C /opt -xf /tmp/java.tar \\\n && ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk \\\n && if [ \"${JAVA_JCE}\" == \"unlimited\" ] ; then echo \"Installing Unlimited JCE policy\" >&2 \\\n && curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip \\\n && cd /tmp \\\n && unzip /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip \\\n && cp -v /tmp/UnlimitedJCEPolicyJDK8/*.jar /opt/jdk/jre/lib/security ; fi \\\n && sed -i s/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=10/ $JAVA_HOME/jre/lib/security/java.security \\\n && apk del curl glibc-i18n \\\n && rm -rf /opt/jdk/*src.zip /opt/jdk/lib/missioncontrol /opt/jdk/lib/visualvm /opt/jdk/lib/*javafx* /opt/jdk/jre/plugin /opt/jdk/jre/bin/javaws /opt/jdk/jre/bin/jjs /opt/jdk/jre/bin/orbd /opt/jdk/jre/bin/pack200 /opt/jdk/jre/bin/policytool /opt/jdk/jre/bin/rmid /opt/jdk/jre/bin/rmiregistry /opt/jdk/jre/bin/servertool /opt/jdk/jre/bin/tnameserv /opt/jdk/jre/bin/unpack200 /opt/jdk/jre/lib/javaws.jar /opt/jdk/jre/lib/deploy* /opt/jdk/jre/lib/desktop /opt/jdk/jre/lib/*javafx* /opt/jdk/jre/lib/*jfx* /opt/jdk/jre/lib/amd64/libdecora_sse.so /opt/jdk/jre/lib/amd64/libprism_*.so /opt/jdk/jre/lib/amd64/libfxplugins.so /opt/jdk/jre/lib/amd64/libglass.so /opt/jdk/jre/lib/amd64/libgstreamer-lite.so /opt/jdk/jre/lib/amd64/libjavafx*.so /opt/jdk/jre/lib/amd64/libjfx*.so /opt/jdk/jre/lib/ext/jfxrt.jar /opt/jdk/jre/lib/ext/nashorn.jar /opt/jdk/jre/lib/oblique-fonts /opt/jdk/jre/lib/plugin.jar /tmp/* /var/cache/apk/* \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n#   EOF\nRUN apk add --update curl\nRUN curl https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > /usr/bin/lein \\\n && chmod u+x /usr/bin/lein \\\n && lein \\\n && echo 'ok'\nRUN apk add --update python py-pip py-cffi py-cryptography \\\n && pip install pip --upgrade \\\n && apk add --virtual build-deps gcc libffi-dev python-dev linux-headers musl-dev openssl-dev \\\n && pip install gsutil \\\n && apk del build-deps \\\n && rm -rf /var/cache/apk/*\nRUN apk add rlwrap --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted\nRUN cd /tmp \\\n && curl -O https://download.clojure.org/install/linux-install-1.9.0.375.sh \\\n && chmod +x linux-install-1.9.0.375.sh \\\n && ./linux-install-1.9.0.375.sh\nCOPY target/ci3.jar /var/ci3.jar\nRUN mkdir /workspace\nWORKDIR /workspace\nENV LEIN_ROOT=\"1\"\nENV BOTO_CONFIG=\"/root/.boto\"\nCOPY entrypoint /usr/local/bin/\nRUN chmod u+x /usr/local/bin/entrypoint\nENV DOCKER_API_VERSION=\"1.23\"\nENTRYPOINT [\"/usr/local/bin/entrypoint\"]\n","originalDockerfileUglifiedHash":"f799768d6d3863ce0a9275514de2321a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cb5b28d92028cc04037090821e60e1b7b2e6e492.dockerfile"}