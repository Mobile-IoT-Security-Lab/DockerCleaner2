{"seed":1208385570,"processedDockerfileHash":"a4dc6ed4ebc0179d4866ff7fec1150ab","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.9.4 AS base_stage\nLABEL maintainer=\"beardedeagle <randy@heroictek.com>\"\n#   Important!  Update this no-op ENV variable when this Dockerfile\n#   is updated with the current date. It will force refresh of all\n#   of the base images.\nENV REFRESHED_AT=\"2019-06-24\" \\\n    OTP_VER=\"22.0.4\" \\\n    REBAR3_VER=\"3.11.1\" \\\n    TERM=\"xterm\" \\\n    LANG=\"C.UTF-8\"\nRUN set -xe \\\n && apk --update --no-cache upgrade \\\n && apk add bash=4.4.19-r1 openssl=1.1.1k-r0 lksctp-tools=1.0.17-r0 --no-cache \\\n && rm -rf /root/.cache \\\n && rm -rf /var/cache/apk/*\nFROM base_stage AS deps_stage\nRUN set -xe \\\n && apk add autoconf=2.69-r2 bash-dev=4.4.19-r1 binutils-gold=2.31.1-r2 ca-certificates=20191127-r2 curl=7.64.0-r5 curl-dev=7.64.0-r5 dpkg=1.19.2-r0 dpkg-dev=1.19.2-r0 g++=8.3.0-r0 gcc=8.3.0-r0 libc-dev=0.7.1-r0 openssl-dev=1.1.1k-r0 linux-headers=4.18.13-r1 lksctp-tools-dev=1.0.17-r0 make=4.2.1-r2 musl=1.1.20-r6 musl-dev=1.1.20-r6 ncurses=6.1_p20190105-r0 ncurses-dev=6.1_p20190105-r0 rsync=3.1.3-r1 tar=1.32-r0 unixodbc=2.3.7-r0 unixodbc-dev=2.3.7-r0 zlib=1.2.11-r1 zlib-dev=1.2.11-r1 --no-cache --virtual .build-deps \\\n && update-ca-certificates --fresh\nFROM deps_stage AS erlang_stage\nRUN set -xe \\\n && OTP_DOWNLOAD_URL=\"https://github.com/erlang/otp/archive/OTP-${OTP_VER}.tar.gz\" \\\n && OTP_DOWNLOAD_SHA256=\"71b2fe49ed5ac386ebc189dd2e5f4b95b11b4427936be0e3c5695a903ea9ffcd\" \\\n && curl -fSL -o otp-src.tar.gz \"$OTP_DOWNLOAD_URL\" \\\n && echo \"$OTP_DOWNLOAD_SHA256 otp-src.tar.gz\" | sha256sum -c - \\\n && export ERL_TOP=\"/usr/src/otp_src_${OTP_VER%%@*}\" \\\n && mkdir -vp $ERL_TOP \\\n && tar -xzf otp-src.tar.gz -C $ERL_TOP --strip-components=1 \\\n && rm otp-src.tar.gz \\\n && (cd $ERL_TOP \\\n && ./otp_build autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --without-javac --without-wx --without-debugger --without-observer --without-jinterface --without-cosEvent --without-cosEventDomain --without-cosFileTransfer --without-cosNotification --without-cosProperty --without-cosTime --without-cosTransactions --without-et --without-gs --without-ic --without-megaco --without-orber --without-percept --without-typer --enable-threads --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-kernel-poll --enable-hipe \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install ) \\\n && rm -rf $ERL_TOP \\\n && find /usr/local -regex '/usr/local/lib/erlang/\\(lib/\\|erts-\\).*/\\(man\\|doc\\|obj\\|c_src\\|emacs\\|info\\|examples\\)' | xargs rm -rf \\\n && find /usr/local -name src | xargs -r find | grep -v '\\.hrl$' | xargs rm -v || true \\\n && find /usr/local -name src | xargs -r find | xargs rmdir -vp || true \\\n && scanelf --nobanner -E ET_EXEC -BF '%F' --recursive /usr/local | xargs -r strip --strip-all \\\n && scanelf --nobanner -E ET_DYN -BF '%F' --recursive /usr/local | xargs -r strip --strip-unneeded \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --virtual $runDeps\nFROM erlang_stage AS rebar3_stage\nRUN set -xe \\\n && REBAR3_DOWNLOAD_URL=\"https://github.com/erlang/rebar3/archive/${REBAR3_VER}.tar.gz\" \\\n && REBAR3_DOWNLOAD_SHA256=\"a1822db5210b96b5f8ef10e433b22df19c5fc54dfd847bcaab86c65151ce4171\" \\\n && curl -fSL -o rebar3-src.tar.gz \"$REBAR3_DOWNLOAD_URL\" \\\n && echo \"$REBAR3_DOWNLOAD_SHA256 rebar3-src.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/rebar3-src \\\n && tar -xzf rebar3-src.tar.gz -C /usr/src/rebar3-src --strip-components=1 \\\n && rm rebar3-src.tar.gz \\\n && cd /usr/src/rebar3-src \\\n && HOME=$PWD ./bootstrap \\\n && install -v ./rebar3 /usr/local/bin/\nFROM deps_stage AS stage\nCOPY --from=rebar3_stage /usr/local /opt/rebar3\nRUN set -xe \\\n && rsync -a /opt/rebar3/ /usr/local \\\n && apk del .build-deps \\\n && rm -rf /root/.cache \\\n && rm -rf /var/cache/apk/*\nFROM base_stage\nCOPY --from=stage /usr/local /usr/local\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.9.4 AS base_stage\nLABEL maintainer=\"beardedeagle <randy@heroictek.com>\"\n#  Important!  Update this no-op ENV variable when this Dockerfile\n#  is updated with the current date. It will force refresh of all\n#  of the base images.\nENV REFRESHED_AT=\"2019-06-24\" \\\n    OTP_VER=\"22.0.4\" \\\n    REBAR3_VER=\"3.11.1\" \\\n    TERM=\"xterm\" \\\n    LANG=\"C.UTF-8\"\nRUN set -xe \\\n && apk --update --no-cache upgrade \\\n && apk add --no-cache bash openssl lksctp-tools \\\n && rm -rf /root/.cache \\\n && rm -rf /var/cache/apk/*\nFROM base_stage AS deps_stage\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps autoconf bash-dev binutils-gold ca-certificates curl curl-dev dpkg dpkg-dev g++ gcc libc-dev openssl-dev linux-headers lksctp-tools-dev make musl musl-dev ncurses ncurses-dev rsync tar unixodbc unixodbc-dev zlib zlib-dev \\\n && update-ca-certificates --fresh\nFROM deps_stage AS erlang_stage\nRUN set -xe \\\n && OTP_DOWNLOAD_URL=\"https://github.com/erlang/otp/archive/OTP-${OTP_VER}.tar.gz\" \\\n && OTP_DOWNLOAD_SHA256=\"71b2fe49ed5ac386ebc189dd2e5f4b95b11b4427936be0e3c5695a903ea9ffcd\" \\\n && curl -fSL -o otp-src.tar.gz \"$OTP_DOWNLOAD_URL\" \\\n && echo \"$OTP_DOWNLOAD_SHA256 otp-src.tar.gz\" | sha256sum -c - \\\n && export ERL_TOP=\"/usr/src/otp_src_${OTP_VER%%@*}\" \\\n && mkdir -vp $ERL_TOP \\\n && tar -xzf otp-src.tar.gz -C $ERL_TOP --strip-components=1 \\\n && rm otp-src.tar.gz \\\n && (cd $ERL_TOP \\\n && ./otp_build autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --without-javac --without-wx --without-debugger --without-observer --without-jinterface --without-cosEvent --without-cosEventDomain --without-cosFileTransfer --without-cosNotification --without-cosProperty --without-cosTime --without-cosTransactions --without-et --without-gs --without-ic --without-megaco --without-orber --without-percept --without-typer --enable-threads --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-kernel-poll --enable-hipe \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install ) \\\n && rm -rf $ERL_TOP \\\n && find /usr/local -regex '/usr/local/lib/erlang/\\(lib/\\|erts-\\).*/\\(man\\|doc\\|obj\\|c_src\\|emacs\\|info\\|examples\\)' | xargs rm -rf \\\n && find /usr/local -name src | xargs -r find | grep -v '\\.hrl$' | xargs rm -v || true \\\n && find /usr/local -name src | xargs -r find | xargs rmdir -vp || true \\\n && scanelf --nobanner -E ET_EXEC -BF '%F' --recursive /usr/local | xargs -r strip --strip-all \\\n && scanelf --nobanner -E ET_DYN -BF '%F' --recursive /usr/local | xargs -r strip --strip-unneeded \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --virtual $runDeps\nFROM erlang_stage AS rebar3_stage\nRUN set -xe \\\n && REBAR3_DOWNLOAD_URL=\"https://github.com/erlang/rebar3/archive/${REBAR3_VER}.tar.gz\" \\\n && REBAR3_DOWNLOAD_SHA256=\"a1822db5210b96b5f8ef10e433b22df19c5fc54dfd847bcaab86c65151ce4171\" \\\n && curl -fSL -o rebar3-src.tar.gz \"$REBAR3_DOWNLOAD_URL\" \\\n && echo \"$REBAR3_DOWNLOAD_SHA256 rebar3-src.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/rebar3-src \\\n && tar -xzf rebar3-src.tar.gz -C /usr/src/rebar3-src --strip-components=1 \\\n && rm rebar3-src.tar.gz \\\n && cd /usr/src/rebar3-src \\\n && HOME=$PWD ./bootstrap \\\n && install -v ./rebar3 /usr/local/bin/\nFROM deps_stage AS stage\nCOPY --from=rebar3_stage /usr/local /opt/rebar3\nRUN set -xe \\\n && rsync -a /opt/rebar3/ /usr/local \\\n && apk del .build-deps \\\n && rm -rf /root/.cache \\\n && rm -rf /var/cache/apk/*\nFROM base_stage\nCOPY --from=stage /usr/local /usr/local\n","injectedSmells":[],"originalDockerfileHash":"1fc05d5b31a10415babe59b848068022","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.9.4 AS base_stage\nLABEL maintainer=\"beardedeagle <randy@heroictek.com>\"\n#   Important!  Update this no-op ENV variable when this Dockerfile\n#   is updated with the current date. It will force refresh of all\n#   of the base images.\nENV REFRESHED_AT=\"2019-06-24\" \\\n    OTP_VER=\"22.0.4\" \\\n    REBAR3_VER=\"3.11.1\" \\\n    TERM=\"xterm\" \\\n    LANG=\"C.UTF-8\"\nRUN set -xe \\\n && apk --update --no-cache upgrade \\\n && apk add --no-cache bash openssl lksctp-tools \\\n && rm -rf /root/.cache \\\n && rm -rf /var/cache/apk/*\nFROM base_stage AS deps_stage\nRUN set -xe \\\n && apk add --no-cache --virtual .build-deps autoconf bash-dev binutils-gold ca-certificates curl curl-dev dpkg dpkg-dev g++ gcc libc-dev openssl-dev linux-headers lksctp-tools-dev make musl musl-dev ncurses ncurses-dev rsync tar unixodbc unixodbc-dev zlib zlib-dev \\\n && update-ca-certificates --fresh\nFROM deps_stage AS erlang_stage\nRUN set -xe \\\n && OTP_DOWNLOAD_URL=\"https://github.com/erlang/otp/archive/OTP-${OTP_VER}.tar.gz\" \\\n && OTP_DOWNLOAD_SHA256=\"71b2fe49ed5ac386ebc189dd2e5f4b95b11b4427936be0e3c5695a903ea9ffcd\" \\\n && curl -fSL -o otp-src.tar.gz \"$OTP_DOWNLOAD_URL\" \\\n && echo \"$OTP_DOWNLOAD_SHA256 otp-src.tar.gz\" | sha256sum -c - \\\n && export ERL_TOP=\"/usr/src/otp_src_${OTP_VER%%@*}\" \\\n && mkdir -vp $ERL_TOP \\\n && tar -xzf otp-src.tar.gz -C $ERL_TOP --strip-components=1 \\\n && rm otp-src.tar.gz \\\n && (cd $ERL_TOP \\\n && ./otp_build autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --without-javac --without-wx --without-debugger --without-observer --without-jinterface --without-cosEvent --without-cosEventDomain --without-cosFileTransfer --without-cosNotification --without-cosProperty --without-cosTime --without-cosTransactions --without-et --without-gs --without-ic --without-megaco --without-orber --without-percept --without-typer --enable-threads --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-kernel-poll --enable-hipe \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install ) \\\n && rm -rf $ERL_TOP \\\n && find /usr/local -regex '/usr/local/lib/erlang/\\(lib/\\|erts-\\).*/\\(man\\|doc\\|obj\\|c_src\\|emacs\\|info\\|examples\\)' | xargs rm -rf \\\n && find /usr/local -name src | xargs -r find | grep -v '\\.hrl$' | xargs rm -v || true \\\n && find /usr/local -name src | xargs -r find | xargs rmdir -vp || true \\\n && scanelf --nobanner -E ET_EXEC -BF '%F' --recursive /usr/local | xargs -r strip --strip-all \\\n && scanelf --nobanner -E ET_DYN -BF '%F' --recursive /usr/local | xargs -r strip --strip-unneeded \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --virtual $runDeps\nFROM erlang_stage AS rebar3_stage\nRUN set -xe \\\n && REBAR3_DOWNLOAD_URL=\"https://github.com/erlang/rebar3/archive/${REBAR3_VER}.tar.gz\" \\\n && REBAR3_DOWNLOAD_SHA256=\"a1822db5210b96b5f8ef10e433b22df19c5fc54dfd847bcaab86c65151ce4171\" \\\n && curl -fSL -o rebar3-src.tar.gz \"$REBAR3_DOWNLOAD_URL\" \\\n && echo \"$REBAR3_DOWNLOAD_SHA256 rebar3-src.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/rebar3-src \\\n && tar -xzf rebar3-src.tar.gz -C /usr/src/rebar3-src --strip-components=1 \\\n && rm rebar3-src.tar.gz \\\n && cd /usr/src/rebar3-src \\\n && HOME=$PWD ./bootstrap \\\n && install -v ./rebar3 /usr/local/bin/\nFROM deps_stage AS stage\nCOPY --from=rebar3_stage /usr/local /opt/rebar3\nRUN set -xe \\\n && rsync -a /opt/rebar3/ /usr/local \\\n && apk del .build-deps \\\n && rm -rf /root/.cache \\\n && rm -rf /var/cache/apk/*\nFROM base_stage\nCOPY --from=stage /usr/local /usr/local\n","originalDockerfileUglifiedHash":"b5d5254f4c6280713983fc66036fa8fd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fa83e2e3712cfbfeeca602f5a8669c9db5aa86ed.dockerfile"}