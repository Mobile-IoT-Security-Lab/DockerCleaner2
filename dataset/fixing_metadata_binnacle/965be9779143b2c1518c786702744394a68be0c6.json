{"seed":12082932,"processedDockerfileHash":"25749a008775fb6b49dd92ea47f93d80","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  upstream https://github.com/carlossg/docker-maven/tree/master/jdk-8\nFROM centos:7\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nCOPY epel.repo /etc/yum.repos.d/\nCOPY java.sh /etc/profile.d/\n#   set timezone\nRUN ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\nRUN yum update -y \\\n && yum install -y wget \\\n && wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u171-b11/512cd62ec5174c3487ac17c61aaa89e8/jdk-8u171-linux-x64.rpm \\\n && rpm -ivh jdk-8u171-linux-x64.rpm \\\n && rm jdk-8u171-linux-x64.rpm\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nENV JAVA_HOME=\"/usr/java/jdk1.8.0_161\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#   let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\nRUN yum install -y gcc gcc-c++ autoconf automake make which zlib zlib-devel pcre-devel apr-devel openssl-devel\n#   runtime dependencies for Tomcat Native Libraries\n#   Tomcat Native 1.2+ requires a newer version of OpenSSL than debian:jessie has available\n#   > checking OpenSSL library version >= 1.0.2...\n#   > configure: error: Your version of OpenSSL is not compatible with this version of tcnative\n#   see http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5046024.html (and following discussion)\n#   and https://github.com/docker-library/tomcat/pull/31\n#  ENV OPENSSL_VERSION 1.1.0h\n#  RUN \\\n#      yum install -y gcc gcc-c++ autoconf automake make which zlib zlib-devel pcre-devel apr-devel && \\\n#      wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz && \\\n#      tar xzf openssl-${OPENSSL_VERSION}.tar.gz && \\\n#      cd openssl-${OPENSSL_VERSION} && \\\n#      ./Configure linux-x86_64 shared no-ssl2 no-ssl3 no-comp enable-ec_nistp_64_gcc_128 -Wl,-rpath,/usr/local/lib64 && \\\n#      make -j \"$(nproc)\" && \\\n#      make install && \\\n#      #mv /usr/bin/openssl /usr/bin/openssl.bak\n#      #mv /usr/include/openssl /usr/include/openssl.bak\n#      ln -s /usr/local/bin/openssl /usr/bin/openssl && \\\n#      ln -s /usr/local/include/openssl /usr/include/openssl && \\\n#      export CFLAGS=\"-I/usr/local/include/ -L/usr/local/lib -L/usr/local/lib64 -Wl,-rpath,/usr/local/lib64 -lssl -lcrypto\" && \\\n#      export CXXFLAGS=\"-I/usr/local/include/ -L/usr/local/lib -L/usr/local/lib64 -Wl,-rpath,/usr/local/lib64 -lssl -lcrypto\" && \\\n#      #update ldconfig\n#      echo \"/usr/local/lib\" >> /etc/ld.so.conf && \\\n#      echo \"/usr/local/lib64\" >> /etc/ld.so.conf && \\\n#      ldconfig -V\n#   see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#   see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nENV TOMCAT_MAJOR=\"8\"\nENV TOMCAT_VERSION=\"8.0.50\"\nENV TOMCAT_SHA512=\"c8923e610f1d3f7f13d5d0cc765a97ef1b5b34a527b57dfb7058f0bd65555cec748b83198859e6bba41b29cc3d5071ed05618097edc5d6cfad2f380f8230e7f5\"\nENV TOMCAT_TGZ_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -eux ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; success= ; for url in $TOMCAT_TGZ_URLS; do if wget -O tomcat.tar.gz \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; echo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c - ; success= ; for url in $TOMCAT_ASC_URLS; do if wget -O tomcat.tar.gz.asc \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz ; tar -xvf tomcat.tar.gz --strip-components=1 ; rm bin/*.bat ; rm tomcat.tar.gz* ; rm -rf \"$GNUPGHOME\" ; nativeBuildDir=\"$( mktemp -d ;)\" ; tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 ; (export CATALINA_HOME=\"$PWD\" ;cd \"$nativeBuildDir/native\" ;./configure --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$JAVA_HOME\" --with-ssl=yes ;make -j \"$( nproc ;)\" ;make install ) ; rm -rf \"$nativeBuildDir\" ; rm bin/tomcat-native.tar.gz ; find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +\n#   verify Tomcat Native is working properly\nRUN set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\nARG MAVEN_VERSION=3.5.3\nARG DUBBO_VERSION=2.5.10\nARG USER_HOME_DIR=\"/root\"\nARG SHA=b52956373fab1dd4277926507ab189fb797b3bc51a2a267a193c931fffad8408\n#  ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n && echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n && rm -f /tmp/apache-maven.tar.gz \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\n#  COPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\n#   Add deps & patch file\n#  ADD alibaba-m2-deps.tar.gz /root/.m2/repository/com/alibaba/\n#  COPY patch.diff /opt/dubbo/patch.diff\nWORKDIR /opt\n#   Install from Dubbo source code\nRUN wget https://github.com/apache/incubator-dubbo/archive/dubbo-${DUBBO_VERSION}.zip \\\n && unzip dubbo-${DUBBO_VERSION}.zip \\\n && cd incubator-dubbo-dubbo-${DUBBO_VERSION} \\\n && mvn package -Dmaven.test.skip=true \\\n && mkdir /opt/dubbo-dist \\\n && mv /opt/dubbo/dubbo/target/dubbo-2.5.3.jar /opt/dubbo-dist/dubbo-2.5.3.jar \\\n && mv /opt/dubbo/dubbo-simple/dubbo-monitor-simple/target/dubbo-monitor-simple-2.5.3-assembly.tar.gz /opt/dubbo-dist/dubbo-monitor-simple-2.5.3-assembly.tar.gz \\\n && mv /opt/dubbo/dubbo-admin/target/dubbo-admin-2.5.3.war /opt/dubbo-dist/dubbo-admin-2.5.3.war \\\n && mv /opt/dubbo/dubbo-demo/dubbo-demo-provider/target/dubbo-demo-provider-2.5.3-assembly.tar.gz /opt/dubbo-dist/dubbo-demo-provider-2.5.3-assembly.tar.gz \\\n && rm -rf /opt/dubbo \\\n && rm -rf /root/.m2\nEXPOSE 8080/tcp\nCMD [\"catalina.sh\", \"run\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/carlossg/docker-maven/tree/master/jdk-8\nFROM centos:7\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nCOPY epel.repo /etc/yum.repos.d/\nCOPY java.sh /etc/profile.d/\n#  set timezone\nRUN ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\nRUN yum update -y \\\n && yum install -y wget \\\n && wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u171-b11/512cd62ec5174c3487ac17c61aaa89e8/jdk-8u171-linux-x64.rpm \\\n && rpm -ivh jdk-8u171-linux-x64.rpm \\\n && rm jdk-8u171-linux-x64.rpm\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nENV JAVA_HOME=\"/usr/java/jdk1.8.0_161\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#  let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\nRUN yum install -y gcc gcc-c++ autoconf automake make which zlib zlib-devel pcre-devel apr-devel openssl-devel\n#  runtime dependencies for Tomcat Native Libraries\n#  Tomcat Native 1.2+ requires a newer version of OpenSSL than debian:jessie has available\n#  > checking OpenSSL library version >= 1.0.2...\n#  > configure: error: Your version of OpenSSL is not compatible with this version of tcnative\n#  see http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5046024.html (and following discussion)\n#  and https://github.com/docker-library/tomcat/pull/31\n# ENV OPENSSL_VERSION 1.1.0h\n# RUN \\\n#     yum install -y gcc gcc-c++ autoconf automake make which zlib zlib-devel pcre-devel apr-devel && \\\n#     wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz && \\\n#     tar xzf openssl-${OPENSSL_VERSION}.tar.gz && \\\n#     cd openssl-${OPENSSL_VERSION} && \\\n#     ./Configure linux-x86_64 shared no-ssl2 no-ssl3 no-comp enable-ec_nistp_64_gcc_128 -Wl,-rpath,/usr/local/lib64 && \\\n#     make -j \"$(nproc)\" && \\\n#     make install && \\\n#     #mv /usr/bin/openssl /usr/bin/openssl.bak\n#     #mv /usr/include/openssl /usr/include/openssl.bak\n#     ln -s /usr/local/bin/openssl /usr/bin/openssl && \\\n#     ln -s /usr/local/include/openssl /usr/include/openssl && \\\n#     export CFLAGS=\"-I/usr/local/include/ -L/usr/local/lib -L/usr/local/lib64 -Wl,-rpath,/usr/local/lib64 -lssl -lcrypto\" && \\\n#     export CXXFLAGS=\"-I/usr/local/include/ -L/usr/local/lib -L/usr/local/lib64 -Wl,-rpath,/usr/local/lib64 -lssl -lcrypto\" && \\\n#     #update ldconfig\n#     echo \"/usr/local/lib\" >> /etc/ld.so.conf && \\\n#     echo \"/usr/local/lib64\" >> /etc/ld.so.conf && \\\n#     ldconfig -V\n#  see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#  see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nENV TOMCAT_MAJOR=\"8\"\nENV TOMCAT_VERSION=\"8.0.50\"\nENV TOMCAT_SHA512=\"c8923e610f1d3f7f13d5d0cc765a97ef1b5b34a527b57dfb7058f0bd65555cec748b83198859e6bba41b29cc3d5071ed05618097edc5d6cfad2f380f8230e7f5\"\nENV TOMCAT_TGZ_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -eux ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; success= ; for url in $TOMCAT_TGZ_URLS; do if wget -O tomcat.tar.gz \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; echo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c - ; success= ; for url in $TOMCAT_ASC_URLS; do if wget -O tomcat.tar.gz.asc \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz ; tar -xvf tomcat.tar.gz --strip-components=1 ; rm bin/*.bat ; rm tomcat.tar.gz* ; rm -rf \"$GNUPGHOME\" ; nativeBuildDir=\"$( mktemp -d ;)\" ; tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 ; (export CATALINA_HOME=\"$PWD\" ;cd \"$nativeBuildDir/native\" ;./configure --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$JAVA_HOME\" --with-ssl=yes ;make -j \"$( nproc ;)\" ;make install ) ; rm -rf \"$nativeBuildDir\" ; rm bin/tomcat-native.tar.gz ; find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +\n#  verify Tomcat Native is working properly\nRUN set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\nARG MAVEN_VERSION=3.5.3\nARG DUBBO_VERSION=2.5.10\nARG USER_HOME_DIR=\"/root\"\nARG SHA=b52956373fab1dd4277926507ab189fb797b3bc51a2a267a193c931fffad8408\n# ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n && echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n && rm -f /tmp/apache-maven.tar.gz \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\n# COPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\n#  Add deps & patch file\n# ADD alibaba-m2-deps.tar.gz /root/.m2/repository/com/alibaba/\n# COPY patch.diff /opt/dubbo/patch.diff\nWORKDIR /opt\n#  Install from Dubbo source code\nRUN wget https://github.com/apache/incubator-dubbo/archive/dubbo-${DUBBO_VERSION}.zip \\\n && unzip dubbo-${DUBBO_VERSION}.zip \\\n && cd incubator-dubbo-dubbo-${DUBBO_VERSION} \\\n && mvn package -Dmaven.test.skip=true \\\n && mkdir /opt/dubbo-dist \\\n && mv /opt/dubbo/dubbo/target/dubbo-2.5.3.jar /opt/dubbo-dist/dubbo-2.5.3.jar \\\n && mv /opt/dubbo/dubbo-simple/dubbo-monitor-simple/target/dubbo-monitor-simple-2.5.3-assembly.tar.gz /opt/dubbo-dist/dubbo-monitor-simple-2.5.3-assembly.tar.gz \\\n && mv /opt/dubbo/dubbo-admin/target/dubbo-admin-2.5.3.war /opt/dubbo-dist/dubbo-admin-2.5.3.war \\\n && mv /opt/dubbo/dubbo-demo/dubbo-demo-provider/target/dubbo-demo-provider-2.5.3-assembly.tar.gz /opt/dubbo-dist/dubbo-demo-provider-2.5.3-assembly.tar.gz \\\n && rm -rf /opt/dubbo \\\n && rm -rf /root/.m2\nEXPOSE 8080/tcp\nCMD [\"catalina.sh\", \"run\"]\n","injectedSmells":[],"originalDockerfileHash":"7a498973f3c4c100082eb0ac00b85ef4","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/carlossg/docker-maven/tree/master/jdk-8\nFROM centos:7\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nCOPY epel.repo /etc/yum.repos.d/\nCOPY java.sh /etc/profile.d/\n#   set timezone\nRUN ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\nRUN yum update -y \\\n && yum install -y wget \\\n && wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u171-b11/512cd62ec5174c3487ac17c61aaa89e8/jdk-8u171-linux-x64.rpm \\\n && rpm -ivh jdk-8u171-linux-x64.rpm \\\n && rm jdk-8u171-linux-x64.rpm\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nENV JAVA_HOME=\"/usr/java/jdk1.8.0_161\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#   let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\nRUN yum install -y gcc gcc-c++ autoconf automake make which zlib zlib-devel pcre-devel apr-devel openssl-devel\n#   runtime dependencies for Tomcat Native Libraries\n#   Tomcat Native 1.2+ requires a newer version of OpenSSL than debian:jessie has available\n#   > checking OpenSSL library version >= 1.0.2...\n#   > configure: error: Your version of OpenSSL is not compatible with this version of tcnative\n#   see http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5046024.html (and following discussion)\n#   and https://github.com/docker-library/tomcat/pull/31\n#  ENV OPENSSL_VERSION 1.1.0h\n#  RUN \\\n#      yum install -y gcc gcc-c++ autoconf automake make which zlib zlib-devel pcre-devel apr-devel && \\\n#      wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz && \\\n#      tar xzf openssl-${OPENSSL_VERSION}.tar.gz && \\\n#      cd openssl-${OPENSSL_VERSION} && \\\n#      ./Configure linux-x86_64 shared no-ssl2 no-ssl3 no-comp enable-ec_nistp_64_gcc_128 -Wl,-rpath,/usr/local/lib64 && \\\n#      make -j \"$(nproc)\" && \\\n#      make install && \\\n#      #mv /usr/bin/openssl /usr/bin/openssl.bak\n#      #mv /usr/include/openssl /usr/include/openssl.bak\n#      ln -s /usr/local/bin/openssl /usr/bin/openssl && \\\n#      ln -s /usr/local/include/openssl /usr/include/openssl && \\\n#      export CFLAGS=\"-I/usr/local/include/ -L/usr/local/lib -L/usr/local/lib64 -Wl,-rpath,/usr/local/lib64 -lssl -lcrypto\" && \\\n#      export CXXFLAGS=\"-I/usr/local/include/ -L/usr/local/lib -L/usr/local/lib64 -Wl,-rpath,/usr/local/lib64 -lssl -lcrypto\" && \\\n#      #update ldconfig\n#      echo \"/usr/local/lib\" >> /etc/ld.so.conf && \\\n#      echo \"/usr/local/lib64\" >> /etc/ld.so.conf && \\\n#      ldconfig -V\n#   see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#   see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nENV TOMCAT_MAJOR=\"8\"\nENV TOMCAT_VERSION=\"8.0.50\"\nENV TOMCAT_SHA512=\"c8923e610f1d3f7f13d5d0cc765a97ef1b5b34a527b57dfb7058f0bd65555cec748b83198859e6bba41b29cc3d5071ed05618097edc5d6cfad2f380f8230e7f5\"\nENV TOMCAT_TGZ_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -eux ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; success= ; for url in $TOMCAT_TGZ_URLS; do if wget -O tomcat.tar.gz \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; echo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c - ; success= ; for url in $TOMCAT_ASC_URLS; do if wget -O tomcat.tar.gz.asc \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz ; tar -xvf tomcat.tar.gz --strip-components=1 ; rm bin/*.bat ; rm tomcat.tar.gz* ; rm -rf \"$GNUPGHOME\" ; nativeBuildDir=\"$( mktemp -d ;)\" ; tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 ; (export CATALINA_HOME=\"$PWD\" ;cd \"$nativeBuildDir/native\" ;./configure --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$JAVA_HOME\" --with-ssl=yes ;make -j \"$( nproc ;)\" ;make install ) ; rm -rf \"$nativeBuildDir\" ; rm bin/tomcat-native.tar.gz ; find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +\n#   verify Tomcat Native is working properly\nRUN set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\nARG MAVEN_VERSION=3.5.3\nARG DUBBO_VERSION=2.5.10\nARG USER_HOME_DIR=\"/root\"\nARG SHA=b52956373fab1dd4277926507ab189fb797b3bc51a2a267a193c931fffad8408\n#  ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n && echo \"${SHA} /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n && rm -f /tmp/apache-maven.tar.gz \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME=\"/usr/share/maven\"\nENV MAVEN_CONFIG=\"\\\"$USER_HOME_DIR/.m2\\\"\"\n#  COPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\n#   Add deps & patch file\n#  ADD alibaba-m2-deps.tar.gz /root/.m2/repository/com/alibaba/\n#  COPY patch.diff /opt/dubbo/patch.diff\nWORKDIR /opt\n#   Install from Dubbo source code\nRUN wget https://github.com/apache/incubator-dubbo/archive/dubbo-${DUBBO_VERSION}.zip \\\n && unzip dubbo-${DUBBO_VERSION}.zip \\\n && cd incubator-dubbo-dubbo-${DUBBO_VERSION} \\\n && mvn package -Dmaven.test.skip=true \\\n && mkdir /opt/dubbo-dist \\\n && mv /opt/dubbo/dubbo/target/dubbo-2.5.3.jar /opt/dubbo-dist/dubbo-2.5.3.jar \\\n && mv /opt/dubbo/dubbo-simple/dubbo-monitor-simple/target/dubbo-monitor-simple-2.5.3-assembly.tar.gz /opt/dubbo-dist/dubbo-monitor-simple-2.5.3-assembly.tar.gz \\\n && mv /opt/dubbo/dubbo-admin/target/dubbo-admin-2.5.3.war /opt/dubbo-dist/dubbo-admin-2.5.3.war \\\n && mv /opt/dubbo/dubbo-demo/dubbo-demo-provider/target/dubbo-demo-provider-2.5.3-assembly.tar.gz /opt/dubbo-dist/dubbo-demo-provider-2.5.3-assembly.tar.gz \\\n && rm -rf /opt/dubbo \\\n && rm -rf /root/.m2\nEXPOSE 8080/tcp\nCMD [\"catalina.sh\", \"run\"]\n","originalDockerfileUglifiedHash":"65fd9043783727d92247f9ee87a535b8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/965be9779143b2c1518c786702744394a68be0c6.dockerfile"}