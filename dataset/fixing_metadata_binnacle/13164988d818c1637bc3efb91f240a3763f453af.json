{"seed":3341561938,"processedDockerfileHash":"deb4b287ad6441635cc5bcfabcfa1a30","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This content is part of the native-dockerfiles project and released under the MIT License (see attached LICENSE file)\n#   (c) 2015-2017 Thomas Mayer\n#   Get the latest version at https://github.com/thomaszbz/native-dockerfiles-typo3\nFROM debian:stretch\nMAINTAINER Thomas Mayer \"thomas.mayer@2bis10.de\"\nLABEL Description=\"Provides basic test environment for TYPO3 CMS developers\"\n#   IMPORTANT: replace \"1000\" with your UID/GID (must correspond to file share's user).\n#   Your UID/GID will render the webadmin to have ownership of the files in the context of the docker guest system.\nENV SHARE_USER=\"webadmin\"\nENV SHARE_UID=\"1000\"\nENV SHARE_GROUP=\"webadmin\"\nENV SHARE_GID=\"1000\"\n#   Add webadmin user and webadmin's home directory\n#\n#   webadmin is owner of files in the shares in the context of the docker guest. When file permissions are set right\n#      - webadmin has write access (by ownership)\n#      - www-data only has read access to most files (by group)\n#   If webadmin needs write access to files or directories, you need to give write permissions to the\n#   group of webadmin (which is actually your personal group on the host system)\n#   That way, you can simulate permissions for www-data when using a webadmin-like non-root-user on a production system.\nRUN groupadd --gid $SHARE_GID $SHARE_GROUP\nRUN adduser --system --quiet --disabled-password --gid $SHARE_GID --uid $SHARE_UID $SHARE_USER\nRUN mkdir -p /var/webadmin\nRUN chown $SHARE_USER:$SHARE_GROUP /var/webadmin\n#   create DocumentRoot folder and folder for TYPO3 extensions\nRUN mkdir -p /var/www/typo3/typo3conf/ext\n#   Basic settings for TYPO3's install tool in file AdditionalConfiguration.php\n#   If you want to edit these values values you need to remove this file first (or parts of it).\nRUN echo \"<?php\\n$GLOBALS['TYPO3_CONF_VARS']['SYS']['systemLocale']='en_US.UTF-8';\\n$GLOBALS['TYPO3_CONF_VARS']['GFX']['im_version_5']='gm';\\n\" > /var/www/typo3/typo3conf/AdditionalConfiguration.php\n#   Create TYPO3's symlink structure. These are dead links until we mount the file shares (which will be done\n#   after the provision has completed).\nRUN cd /var/www/typo3 \\\n && ln -s ../../webadmin/typo3_src typo3_src \\\n && ln -s typo3_src/index.php index.php \\\n && ln -s typo3_src/typo3 typo3\n#   Give webadmin read and write access to DocumentRoot directory structure\n#   This has no effect to files in the file share which are not mounted at this time.\nRUN chown -R webadmin:webadmin /var/www/typo3\n#   Make sure we are not asked for a MySQL password while we provision\n#   queried with a\n#   apt-get install debconf-utils\n#   debconf-get-selections | grep mariadb\n#   enter noninteractive mode\n#   ENV DEBIAN_FRONTEND noninteractive\n#   Update apt sources and installed packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt-get upgrade -y\n#   Create and configure locales\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y locales\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_TYPE=\"en_US.UTF-8\"\nRUN echo 'en_US.UTF-8' > /etc/default/locale \\\n && echo 'LANGUAGE=en_US.UTF-8' >> /etc/environment \\\n && echo 'LC_ALL=en_US.UTF-8' >> /etc/environment \\\n && echo 'LANG=en_US.UTF-8' >> /etc/environment \\\n && echo 'LC_TYPE=en_US.UTF-8' >> /etc/environment \\\n && sed --in-place 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n && locale-gen \\\n && update-locale\n#   Install basic packages every GNU/Linux developer system should have\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget curl net-tools vim git man-db inotify-tools locate\n#   Install MySQL or MariaDB\nRUN { echo \"mariadb-server-10.1 mysql-server/root_password password {{password}}\" ;echo \"mariadb-server-10.1 mysql-server/root_password_again password {{password}}\" ; } | debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mariadb-server mariadb-client \\\n && service mysql start \\\n && { echo \"GRANT ALL PRIVILEGES ON *.* to 'admin'@'localhost' IDENTIFIED VIA mysql_native_password USING '*91C9ACF388E2B2FF6A52A25DFCA4B1160583989B' WITH GRANT OPTION;\" ;echo \"FLUSH PRIVILEGES;\" ; } | mysql\n#   Install Apache webserver packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y apache2 apache2-utils\n#   Install PHP packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y php7.0 php7.0-cli libapache2-mod-php7.0 php7.0-mysql php7.0-curl php7.0-gd php7.0-opcache php7.0-xml php7.0-dom php7.0-zip php7.0-mbstring php7.0-soap php-apcu\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y graphicsmagick\n#   Configure Apache default vHost\n#     DocumentRoot /var/www/typo3\nRUN sed --in-place 's!/var/www/html!/var/www/typo3\\n\\t<Directory /var/www/typo3>\\n\\t\\tAllowOverride Indexes FileInfo\\n\\t\\t<IfModule mod_php7.c>\\n\\t\\t\\tphp_admin_value upload_max_filesize \"10M\"\\n\\t\\t\\tphp_admin_value post_max_size \"15M\"\\n\\t\\t\\tphp_admin_value max_execution_time \"240\"\\n\\t\\t\\tphp_admin_value max_input_vars \"1500\"\\n\\t\\t\\tphp_admin_value always_populate_raw_post_data \"-1\"\\n\\t\\t</IfModule>\\n\\t</Directory>!g' /etc/apache2/sites-available/000-default.conf\nRUN chgrp -R www-data /var/www/typo3 \\\n && chmod 775 /var/www/typo3 \\\n && chgrp -R www-data /var/www/typo3/typo3conf \\\n && chmod -R 775 /var/www/typo3/typo3conf\n#   apcu cache gets 128MB of memory (default was 32 MB)\nRUN echo \"apc.shm_size=128M\" > /etc/php/7.0/apache2/conf.d/20-apcu-custom.ini\n#   Enable PHP modules\nRUN a2enmod rewrite\nRUN a2enmod expires\n#   Restart apache to let changes take effect and to test if it still runs (we don't want to roll out a broken image)\nRUN service apache2 restart\n#   Let www-data eventually read/write files from the shares via group permissions\nRUN gpasswd -a www-data webadmin\n#   Let webadmin eventually read/write files created by www-data via group permissions\nRUN gpasswd -a webadmin www-data\n#   Install composer globally\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#   reenter interactive mode\n#   ENV DEBIAN_FRONTEND teletype\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This content is part of the native-dockerfiles project and released under the MIT License (see attached LICENSE file)\n#  (c) 2015-2017 Thomas Mayer\n#  Get the latest version at https://github.com/thomaszbz/native-dockerfiles-typo3\nFROM debian:stretch\nMAINTAINER Thomas Mayer \"thomas.mayer@2bis10.de\"\nLABEL Description=\"Provides basic test environment for TYPO3 CMS developers\"\n#  IMPORTANT: replace \"1000\" with your UID/GID (must correspond to file share's user).\n#  Your UID/GID will render the webadmin to have ownership of the files in the context of the docker guest system.\nENV SHARE_USER=\"webadmin\"\nENV SHARE_UID=\"1000\"\nENV SHARE_GROUP=\"webadmin\"\nENV SHARE_GID=\"1000\"\n#  Add webadmin user and webadmin's home directory\n#\n#  webadmin is owner of files in the shares in the context of the docker guest. When file permissions are set right\n#     - webadmin has write access (by ownership)\n#     - www-data only has read access to most files (by group)\n#  If webadmin needs write access to files or directories, you need to give write permissions to the\n#  group of webadmin (which is actually your personal group on the host system)\n#  That way, you can simulate permissions for www-data when using a webadmin-like non-root-user on a production system.\nRUN groupadd --gid $SHARE_GID $SHARE_GROUP\nRUN adduser --system --quiet --disabled-password --gid $SHARE_GID --uid $SHARE_UID $SHARE_USER\nRUN mkdir -p /var/webadmin\nRUN chown $SHARE_USER:$SHARE_GROUP /var/webadmin\n#  create DocumentRoot folder and folder for TYPO3 extensions\nRUN mkdir -p /var/www/typo3/typo3conf/ext\n#  Basic settings for TYPO3's install tool in file AdditionalConfiguration.php\n#  If you want to edit these values values you need to remove this file first (or parts of it).\nRUN echo \"<?php\\n$GLOBALS['TYPO3_CONF_VARS']['SYS']['systemLocale']='en_US.UTF-8';\\n$GLOBALS['TYPO3_CONF_VARS']['GFX']['im_version_5']='gm';\\n\" > /var/www/typo3/typo3conf/AdditionalConfiguration.php\n#  Create TYPO3's symlink structure. These are dead links until we mount the file shares (which will be done\n#  after the provision has completed).\nRUN cd /var/www/typo3 \\\n && ln -s ../../webadmin/typo3_src typo3_src \\\n && ln -s typo3_src/index.php index.php \\\n && ln -s typo3_src/typo3 typo3\n#  Give webadmin read and write access to DocumentRoot directory structure\n#  This has no effect to files in the file share which are not mounted at this time.\nRUN chown -R webadmin:webadmin /var/www/typo3\n#  Make sure we are not asked for a MySQL password while we provision\n#  queried with a\n#  apt-get install debconf-utils\n#  debconf-get-selections | grep mariadb\n#  enter noninteractive mode\n#  ENV DEBIAN_FRONTEND noninteractive\n#  Update apt sources and installed packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt-get upgrade -y\n#  Create and configure locales\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y locales\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_TYPE=\"en_US.UTF-8\"\nRUN echo 'en_US.UTF-8' > /etc/default/locale \\\n && echo 'LANGUAGE=en_US.UTF-8' >> /etc/environment \\\n && echo 'LC_ALL=en_US.UTF-8' >> /etc/environment \\\n && echo 'LANG=en_US.UTF-8' >> /etc/environment \\\n && echo 'LC_TYPE=en_US.UTF-8' >> /etc/environment \\\n && sed --in-place 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n && locale-gen \\\n && update-locale\n#  Install basic packages every GNU/Linux developer system should have\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget curl net-tools vim git man-db inotify-tools locate\n#  Install MySQL or MariaDB\nRUN { echo \"mariadb-server-10.1 mysql-server/root_password password {{password}}\" ;echo \"mariadb-server-10.1 mysql-server/root_password_again password {{password}}\" ; } | debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mariadb-server mariadb-client \\\n && service mysql start \\\n && { echo \"GRANT ALL PRIVILEGES ON *.* to 'admin'@'localhost' IDENTIFIED VIA mysql_native_password USING '*91C9ACF388E2B2FF6A52A25DFCA4B1160583989B' WITH GRANT OPTION;\" ;echo \"FLUSH PRIVILEGES;\" ; } | mysql\n#  Install Apache webserver packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y apache2 apache2-utils\n#  Install PHP packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y php7.0 php7.0-cli libapache2-mod-php7.0 php7.0-mysql php7.0-curl php7.0-gd php7.0-opcache php7.0-xml php7.0-dom php7.0-zip php7.0-mbstring php7.0-soap php-apcu\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y graphicsmagick\n#  Configure Apache default vHost\n#    DocumentRoot /var/www/typo3\nRUN sed --in-place 's!/var/www/html!/var/www/typo3\\n\\t<Directory /var/www/typo3>\\n\\t\\tAllowOverride Indexes FileInfo\\n\\t\\t<IfModule mod_php7.c>\\n\\t\\t\\tphp_admin_value upload_max_filesize \"10M\"\\n\\t\\t\\tphp_admin_value post_max_size \"15M\"\\n\\t\\t\\tphp_admin_value max_execution_time \"240\"\\n\\t\\t\\tphp_admin_value max_input_vars \"1500\"\\n\\t\\t\\tphp_admin_value always_populate_raw_post_data \"-1\"\\n\\t\\t</IfModule>\\n\\t</Directory>!g' /etc/apache2/sites-available/000-default.conf\nRUN chgrp -R www-data /var/www/typo3 \\\n && chmod 775 /var/www/typo3 \\\n && chgrp -R www-data /var/www/typo3/typo3conf \\\n && chmod -R 775 /var/www/typo3/typo3conf\n#  apcu cache gets 128MB of memory (default was 32 MB)\nRUN echo \"apc.shm_size=128M\" > /etc/php/7.0/apache2/conf.d/20-apcu-custom.ini\n#  Enable PHP modules\nRUN a2enmod rewrite\nRUN a2enmod expires\n#  Restart apache to let changes take effect and to test if it still runs (we don't want to roll out a broken image)\nRUN service apache2 restart\n#  Let www-data eventually read/write files from the shares via group permissions\nRUN gpasswd -a www-data webadmin\n#  Let webadmin eventually read/write files created by www-data via group permissions\nRUN gpasswd -a webadmin www-data\n#  Install composer globally\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#  reenter interactive mode\n#  ENV DEBIAN_FRONTEND teletype\n","injectedSmells":[],"originalDockerfileHash":"6719aaf62b3188c389331efbc72c3052","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This content is part of the native-dockerfiles project and released under the MIT License (see attached LICENSE file)\n#   (c) 2015-2017 Thomas Mayer\n#   Get the latest version at https://github.com/thomaszbz/native-dockerfiles-typo3\nFROM debian:stretch\nMAINTAINER Thomas Mayer \"thomas.mayer@2bis10.de\"\nLABEL Description=\"Provides basic test environment for TYPO3 CMS developers\"\n#   IMPORTANT: replace \"1000\" with your UID/GID (must correspond to file share's user).\n#   Your UID/GID will render the webadmin to have ownership of the files in the context of the docker guest system.\nENV SHARE_USER=\"webadmin\"\nENV SHARE_UID=\"1000\"\nENV SHARE_GROUP=\"webadmin\"\nENV SHARE_GID=\"1000\"\n#   Add webadmin user and webadmin's home directory\n#\n#   webadmin is owner of files in the shares in the context of the docker guest. When file permissions are set right\n#      - webadmin has write access (by ownership)\n#      - www-data only has read access to most files (by group)\n#   If webadmin needs write access to files or directories, you need to give write permissions to the\n#   group of webadmin (which is actually your personal group on the host system)\n#   That way, you can simulate permissions for www-data when using a webadmin-like non-root-user on a production system.\nRUN groupadd --gid $SHARE_GID $SHARE_GROUP\nRUN adduser --system --quiet --disabled-password --gid $SHARE_GID --uid $SHARE_UID $SHARE_USER\nRUN mkdir -p /var/webadmin\nRUN chown $SHARE_USER:$SHARE_GROUP /var/webadmin\n#   create DocumentRoot folder and folder for TYPO3 extensions\nRUN mkdir -p /var/www/typo3/typo3conf/ext\n#   Basic settings for TYPO3's install tool in file AdditionalConfiguration.php\n#   If you want to edit these values values you need to remove this file first (or parts of it).\nRUN echo \"<?php\\n$GLOBALS['TYPO3_CONF_VARS']['SYS']['systemLocale']='en_US.UTF-8';\\n$GLOBALS['TYPO3_CONF_VARS']['GFX']['im_version_5']='gm';\\n\" > /var/www/typo3/typo3conf/AdditionalConfiguration.php\n#   Create TYPO3's symlink structure. These are dead links until we mount the file shares (which will be done\n#   after the provision has completed).\nRUN cd /var/www/typo3 \\\n && ln -s ../../webadmin/typo3_src typo3_src \\\n && ln -s typo3_src/index.php index.php \\\n && ln -s typo3_src/typo3 typo3\n#   Give webadmin read and write access to DocumentRoot directory structure\n#   This has no effect to files in the file share which are not mounted at this time.\nRUN chown -R webadmin:webadmin /var/www/typo3\n#   Make sure we are not asked for a MySQL password while we provision\n#   queried with a\n#   apt-get install debconf-utils\n#   debconf-get-selections | grep mariadb\n#   enter noninteractive mode\n#   ENV DEBIAN_FRONTEND noninteractive\n#   Update apt sources and installed packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt-get upgrade -y\n#   Create and configure locales\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y locales\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_TYPE=\"en_US.UTF-8\"\nRUN echo 'en_US.UTF-8' > /etc/default/locale \\\n && echo 'LANGUAGE=en_US.UTF-8' >> /etc/environment \\\n && echo 'LC_ALL=en_US.UTF-8' >> /etc/environment \\\n && echo 'LANG=en_US.UTF-8' >> /etc/environment \\\n && echo 'LC_TYPE=en_US.UTF-8' >> /etc/environment \\\n && sed --in-place 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n && locale-gen \\\n && update-locale\n#   Install basic packages every GNU/Linux developer system should have\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget curl net-tools vim git man-db inotify-tools locate\n#   Install MySQL or MariaDB\nRUN { echo \"mariadb-server-10.1 mysql-server/root_password password {{password}}\" ;echo \"mariadb-server-10.1 mysql-server/root_password_again password {{password}}\" ; } | debconf-set-selections \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mariadb-server mariadb-client \\\n && service mysql start \\\n && { echo \"GRANT ALL PRIVILEGES ON *.* to 'admin'@'localhost' IDENTIFIED VIA mysql_native_password USING '*91C9ACF388E2B2FF6A52A25DFCA4B1160583989B' WITH GRANT OPTION;\" ;echo \"FLUSH PRIVILEGES;\" ; } | mysql\n#   Install Apache webserver packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y apache2 apache2-utils\n#   Install PHP packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y php7.0 php7.0-cli libapache2-mod-php7.0 php7.0-mysql php7.0-curl php7.0-gd php7.0-opcache php7.0-xml php7.0-dom php7.0-zip php7.0-mbstring php7.0-soap php-apcu\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y graphicsmagick\n#   Configure Apache default vHost\n#     DocumentRoot /var/www/typo3\nRUN sed --in-place 's!/var/www/html!/var/www/typo3\\n\\t<Directory /var/www/typo3>\\n\\t\\tAllowOverride Indexes FileInfo\\n\\t\\t<IfModule mod_php7.c>\\n\\t\\t\\tphp_admin_value upload_max_filesize \"10M\"\\n\\t\\t\\tphp_admin_value post_max_size \"15M\"\\n\\t\\t\\tphp_admin_value max_execution_time \"240\"\\n\\t\\t\\tphp_admin_value max_input_vars \"1500\"\\n\\t\\t\\tphp_admin_value always_populate_raw_post_data \"-1\"\\n\\t\\t</IfModule>\\n\\t</Directory>!g' /etc/apache2/sites-available/000-default.conf\nRUN chgrp -R www-data /var/www/typo3 \\\n && chmod 775 /var/www/typo3 \\\n && chgrp -R www-data /var/www/typo3/typo3conf \\\n && chmod -R 775 /var/www/typo3/typo3conf\n#   apcu cache gets 128MB of memory (default was 32 MB)\nRUN echo \"apc.shm_size=128M\" > /etc/php/7.0/apache2/conf.d/20-apcu-custom.ini\n#   Enable PHP modules\nRUN a2enmod rewrite\nRUN a2enmod expires\n#   Restart apache to let changes take effect and to test if it still runs (we don't want to roll out a broken image)\nRUN service apache2 restart\n#   Let www-data eventually read/write files from the shares via group permissions\nRUN gpasswd -a www-data webadmin\n#   Let webadmin eventually read/write files created by www-data via group permissions\nRUN gpasswd -a webadmin www-data\n#   Install composer globally\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#   reenter interactive mode\n#   ENV DEBIAN_FRONTEND teletype\n","originalDockerfileUglifiedHash":"cf20af43710b0ea4690594f16d1d3952","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/13164988d818c1637bc3efb91f240a3763f453af.dockerfile"}