{"seed":3068393300,"processedDockerfileHash":"29230feb7214d9e9779abc37d9b586dd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 cmake=3.5.1-1ubuntu3 git=1:2.7.4-0ubuntu1.10 wget=1.17.1-1ubuntu1.5 libatlas-base-dev=3.10.2-9 libboost-all-dev=1.58.0.1ubuntu1 libgflags-dev=2.1.2-3 libgoogle-glog-dev=0.3.4-0.1 libhdf5-serial-dev=1.8.16+docs-4ubuntu1.1 libleveldb-dev=1.18-5 liblmdb-dev=0.9.17-3 libopencv-dev=2.4.9.1+dfsg-1.5ubuntu1.1 libprotobuf-dev=2.6.1-1.3 libsnappy-dev=1.1.3-2 protobuf-compiler=2.6.1-1.3 python-dev=2.7.12-1~16.04 python-numpy=1:1.11.0-1ubuntu1 python-pip=8.1.1-2ubuntu0.6 python-setuptools=20.7.0-1 python-scipy=0.17.0-1 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV CAFFE_ROOT=\"/opt/caffe\"\nWORKDIR $CAFFE_ROOT\n#   FIXME: use ARG instead of ENV once DockerHub supports this\nENV CLONE_TAG=\"master\"\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/jaketaylorpro/caffe.git . \\\n && pip install pip==23.1 --upgrade \\\n && cd python \\\n && for req in $( cat requirements.txt ;) pydot; do pip install $req ; done \\\n && cd .. \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 .. \\\n && make -j\"$( nproc ;)\"\nRUN /opt/caffe/scripts/download_model_binary.py models/bvlc_reference_caffenet\nRUN /opt/caffe/data/ilsvrc12/get_ilsvrc_aux.sh\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nENTRYPOINT [\"./build/examples/cpp_classification/classification.bin\", \"models/bvlc_reference_caffenet/deploy.prototxt\", \"models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel\", \"data/ilsvrc12/imagenet_mean.binaryproto\", \"data/ilsvrc12/synset_words.txt\", \"/envoyai/input/image.jpg\"]\nLABEL com.envoyai.metadata-version=\"2\"\nLABEL com.envoyai.nvidia=\"false\"\nLABEL com.envoyai.info=\"name: Caffe Example C++ Classification\\ntitle: Caffe C++ Classification Example adapted for the EnvoyAI platform.\\nauthor: Caffe adapted by EnvoyAI Staff\\norganization: Caffe and EnvoyAI\\ndata-source: ilsvrc training set\\nalgorithm: Neural Net\\nlinks: you can download a frog picture <a href='http://zso3597.cias.rit.edu/256/week4/project1/images/frog.jpg'>here</a>\"\nLABEL com.envoyai.schema-in=\"image.jpg:\\n title: Input Image\\n mime-type: image/jpeg\"\nLABEL com.envoyai.schema-out=\"guess0:\\n title: First Guess\\n type: string \\nconf0:\\n title: First Guess Confidence\\n type: percentage\\nguess1:\\n title: Second Guess\\n type: string \\nconf1:\\n title: Second Guess Confidence\\n type: percentage\\nguess3:\\n title: Third Guess\\n type: string \\nconf3:\\n title: Third Guess Confidence\\n type: percentage\"\nLABEL com.envoyai.display=\"source-display-group:\\n display-elements:\\n - title: Input Image\\n id: input-image\\n content:\\n pointer:\\n source: input\\n property: image.jpg\\nresults-display-group:\\n presentation: tile\\n display-elements:\\n - title: First Guess\\n id: guess-0\\n content:\\n pointer:\\n source: output\\n property: guess0\\n associated-values:\\n - value:\\n pointer:\\n source: output\\n property: conf0\\n unit: percentage\\n label: Confidence\\n - title: Second Guess\\n id: guess-1\\n content:\\n pointer:\\n source: output\\n property: guess1\\n associated-values:\\n - value:\\n pointer:\\n source: output\\n property: conf1\\n unit: percentage\\n label: Confidence\\n - title: Third Guess\\n id: guess-2\\n content:\\n pointer:\\n source: output\\n property: guess2\\n associated-values:\\n - value:\\n pointer:\\n source: output\\n property: conf2\\n unit: percentage\\n label: Confidence\"\nLABEL com.envoyai.selector=\"selector-type: choose-one-display-element\\nselector-config:\\n choose-options:\\n - guess-0\\n - guess-1\\n - guess-2\\n default-option: guess-0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential cmake git wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy -y \\\n && rm -rf /var/lib/apt/lists/*\nENV CAFFE_ROOT=\"/opt/caffe\"\nWORKDIR $CAFFE_ROOT\n#  FIXME: use ARG instead of ENV once DockerHub supports this\nENV CLONE_TAG=\"master\"\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/jaketaylorpro/caffe.git . \\\n && pip install pip --upgrade \\\n && cd python \\\n && for req in $( cat requirements.txt ;) pydot; do pip install $req ; done \\\n && cd .. \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 .. \\\n && make -j\"$( nproc ;)\"\nRUN /opt/caffe/scripts/download_model_binary.py models/bvlc_reference_caffenet\nRUN /opt/caffe/data/ilsvrc12/get_ilsvrc_aux.sh\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nENTRYPOINT [\"./build/examples/cpp_classification/classification.bin\", \"models/bvlc_reference_caffenet/deploy.prototxt\", \"models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel\", \"data/ilsvrc12/imagenet_mean.binaryproto\", \"data/ilsvrc12/synset_words.txt\", \"/envoyai/input/image.jpg\"]\nLABEL com.envoyai.metadata-version=\"2\"\nLABEL com.envoyai.nvidia=\"false\"\nLABEL com.envoyai.info=\"name: Caffe Example C++ Classification\\ntitle: Caffe C++ Classification Example adapted for the EnvoyAI platform.\\nauthor: Caffe adapted by EnvoyAI Staff\\norganization: Caffe and EnvoyAI\\ndata-source: ilsvrc training set\\nalgorithm: Neural Net\\nlinks: you can download a frog picture <a href='http://zso3597.cias.rit.edu/256/week4/project1/images/frog.jpg'>here</a>\"\nLABEL com.envoyai.schema-in=\"image.jpg:\\n title: Input Image\\n mime-type: image/jpeg\"\nLABEL com.envoyai.schema-out=\"guess0:\\n title: First Guess\\n type: string \\nconf0:\\n title: First Guess Confidence\\n type: percentage\\nguess1:\\n title: Second Guess\\n type: string \\nconf1:\\n title: Second Guess Confidence\\n type: percentage\\nguess3:\\n title: Third Guess\\n type: string \\nconf3:\\n title: Third Guess Confidence\\n type: percentage\"\nLABEL com.envoyai.display=\"source-display-group:\\n display-elements:\\n - title: Input Image\\n id: input-image\\n content:\\n pointer:\\n source: input\\n property: image.jpg\\nresults-display-group:\\n presentation: tile\\n display-elements:\\n - title: First Guess\\n id: guess-0\\n content:\\n pointer:\\n source: output\\n property: guess0\\n associated-values:\\n - value:\\n pointer:\\n source: output\\n property: conf0\\n unit: percentage\\n label: Confidence\\n - title: Second Guess\\n id: guess-1\\n content:\\n pointer:\\n source: output\\n property: guess1\\n associated-values:\\n - value:\\n pointer:\\n source: output\\n property: conf1\\n unit: percentage\\n label: Confidence\\n - title: Third Guess\\n id: guess-2\\n content:\\n pointer:\\n source: output\\n property: guess2\\n associated-values:\\n - value:\\n pointer:\\n source: output\\n property: conf2\\n unit: percentage\\n label: Confidence\"\nLABEL com.envoyai.selector=\"selector-type: choose-one-display-element\\nselector-config:\\n choose-options:\\n - guess-0\\n - guess-1\\n - guess-2\\n default-option: guess-0\"\n","injectedSmells":[],"originalDockerfileHash":"2a73560fe1c165b34e8d1800b6e3f754","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential cmake git wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy -y \\\n && rm -rf /var/lib/apt/lists/*\nENV CAFFE_ROOT=\"/opt/caffe\"\nWORKDIR $CAFFE_ROOT\n#   FIXME: use ARG instead of ENV once DockerHub supports this\nENV CLONE_TAG=\"master\"\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/jaketaylorpro/caffe.git . \\\n && pip install pip --upgrade \\\n && cd python \\\n && for req in $( cat requirements.txt ;) pydot; do pip install $req ; done \\\n && cd .. \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 .. \\\n && make -j\"$( nproc ;)\"\nRUN /opt/caffe/scripts/download_model_binary.py models/bvlc_reference_caffenet\nRUN /opt/caffe/data/ilsvrc12/get_ilsvrc_aux.sh\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\"\nENV PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\nENTRYPOINT [\"./build/examples/cpp_classification/classification.bin\", \"models/bvlc_reference_caffenet/deploy.prototxt\", \"models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel\", \"data/ilsvrc12/imagenet_mean.binaryproto\", \"data/ilsvrc12/synset_words.txt\", \"/envoyai/input/image.jpg\"]\nLABEL com.envoyai.metadata-version=\"2\"\nLABEL com.envoyai.nvidia=\"false\"\nLABEL com.envoyai.info=\"name: Caffe Example C++ Classification\\ntitle: Caffe C++ Classification Example adapted for the EnvoyAI platform.\\nauthor: Caffe adapted by EnvoyAI Staff\\norganization: Caffe and EnvoyAI\\ndata-source: ilsvrc training set\\nalgorithm: Neural Net\\nlinks: you can download a frog picture <a href='http://zso3597.cias.rit.edu/256/week4/project1/images/frog.jpg'>here</a>\"\nLABEL com.envoyai.schema-in=\"image.jpg:\\n title: Input Image\\n mime-type: image/jpeg\"\nLABEL com.envoyai.schema-out=\"guess0:\\n title: First Guess\\n type: string \\nconf0:\\n title: First Guess Confidence\\n type: percentage\\nguess1:\\n title: Second Guess\\n type: string \\nconf1:\\n title: Second Guess Confidence\\n type: percentage\\nguess3:\\n title: Third Guess\\n type: string \\nconf3:\\n title: Third Guess Confidence\\n type: percentage\"\nLABEL com.envoyai.display=\"source-display-group:\\n display-elements:\\n - title: Input Image\\n id: input-image\\n content:\\n pointer:\\n source: input\\n property: image.jpg\\nresults-display-group:\\n presentation: tile\\n display-elements:\\n - title: First Guess\\n id: guess-0\\n content:\\n pointer:\\n source: output\\n property: guess0\\n associated-values:\\n - value:\\n pointer:\\n source: output\\n property: conf0\\n unit: percentage\\n label: Confidence\\n - title: Second Guess\\n id: guess-1\\n content:\\n pointer:\\n source: output\\n property: guess1\\n associated-values:\\n - value:\\n pointer:\\n source: output\\n property: conf1\\n unit: percentage\\n label: Confidence\\n - title: Third Guess\\n id: guess-2\\n content:\\n pointer:\\n source: output\\n property: guess2\\n associated-values:\\n - value:\\n pointer:\\n source: output\\n property: conf2\\n unit: percentage\\n label: Confidence\"\nLABEL com.envoyai.selector=\"selector-type: choose-one-display-element\\nselector-config:\\n choose-options:\\n - guess-0\\n - guess-1\\n - guess-2\\n default-option: guess-0\"\n","originalDockerfileUglifiedHash":"56652957719c5fc28f492fd66b0d87b1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/74e2f6e1be94b27f03a60178024b57b83f6ecf4c.dockerfile"}