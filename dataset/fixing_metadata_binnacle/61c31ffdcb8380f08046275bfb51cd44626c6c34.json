{"seed":437252730,"processedDockerfileHash":"06c36e583c5cca9befbb906929cc6d09","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\n#  ## SYSTEM DEPENDENCIES\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\"\n#   Everything from `make` onwards in apt-get install is only installed to ensure\n#   Python support works with all packages (which may require specific libraries\n#   at install time).\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends build-essential=12.4ubuntu1 dirmngr=2.2.4-1ubuntu1.6 git=1:2.17.1-1ubuntu0.17 bzr=2.7.0+bzr6622-10 mercurial=4.5.3-1ubuntu2.2 gnupg2=2.2.4-1ubuntu1.6 curl=7.58.0-2ubuntu3.24 wget=1.19.4-1ubuntu2.2 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 liblzma-dev=5.2.2-1.3ubuntu0.1 tzdata=2022g-0ubuntu0.18.04 zip=3.0-11build1 unzip=6.0-21ubuntu1.2 locales=2.27-3ubuntu1.6 openssh-client=1:7.6p1-4ubuntu0.7 make=4.1-9.1ubuntu1 libpq-dev=10.23-0ubuntu0.18.04.1 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 libbz2-dev=1.0.6-8.1ubuntu0.2 libffi-dev=3.2.1-8 libreadline-dev=7.0-3 libsqlite3-dev=3.22.0-1ubuntu0.7 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 llvm=1:6.0-41~exp5~ubuntu1 libncurses5-dev=6.1-1ubuntu1.18.04 libncursesw5-dev=6.1-1ubuntu1.18.04 libmysqlclient-dev=5.7.41-0ubuntu0.18.04.1 xz-utils=5.2.2-1.3ubuntu0.1 tk-dev=8.6.0+9 libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 libxmlsec1-dev=1.2.25-1build1 libgeos-dev=3.6.2-1build2 python3-enchant=2.0.0-1 -y \\\n && locale-gen en_US.UTF-8\n#  ## RUBY\n#   Install Ruby 2.6.2, update RubyGems, and install Bundler\nENV BUNDLE_SILENCE_ROOT_WARNING=\"1\"\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C3173AA6 \\\n && echo \"deb http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu bionic main\" > /etc/apt/sources.list.d/brightbox.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends ruby2.6 ruby2.6-dev -y \\\n && gem update --system 3.0.3 \\\n && gem install bundler --version 1.17.3 --no-document\n#  ## PYTHON\n#   Install Python 2.7 and 3.7 with pyenv. Using pyenv lets us support multiple Pythons\nENV PYENV_ROOT=\"/usr/local/.pyenv\" \\\n    PATH=\"/usr/local/.pyenv/bin:$PATH\"\nRUN git clone https://github.com/pyenv/pyenv.git /usr/local/.pyenv \\\n && cd /usr/local/.pyenv \\\n && git checkout v1.2.11 \\\n && cd - \\\n && pyenv install 3.7.3 \\\n && pyenv install 2.7.16 \\\n && pyenv global 3.7.3\n#  ## JAVASCRIPT\n#   Install Node 10.0 and Yarn\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install --no-install-recommends nodejs=8.10.0~dfsg-2ubuntu0.4 -y \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends yarn -y\n#  ## ELM\n#   Install Elm 0.18 and Elm 0.19\nENV PATH=\"$PATH:/node_modules/.bin\"\nRUN npm install elm@0.18.0 \\\n && wget \"https://github.com/elm/compiler/releases/download/0.19.0/binaries-for-linux.tar.gz\" \\\n && tar xzf binaries-for-linux.tar.gz \\\n && mv elm /usr/local/bin/elm19 \\\n && rm -f binaries-for-linux.tar.gz\n#  ## PHP\n#   Install PHP 7.3 and Composer\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nRUN echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu bionic main\" >> /etc/apt/sources.list.d/ondrej-php.list \\\n && echo \"deb-src http://ppa.launchpad.net/ondrej/php/ubuntu bionic main\" >> /etc/apt/sources.list.d/ondrej-php.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n && apt-get update \\\n && apt-get install --no-install-recommends php7.3 php7.3-xml php7.3-json php7.3-zip php7.3-mbstring php7.3-intl php7.3-common php7.3-gettext php7.3-curl php7.3-bcmath php7.3-gmp php7.3-imagick php7.3-gd php7.3-redis php7.3-soap php7.3-ldap php7.3-memcached php7.3-sqlite3 php7.3-apcu php7.3-tidy php7.3-mongodb php7.3-zmq php7.3-mysql php7.3-imap php7.3-geoip -y \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#  ## GO\n#   Install Go and dep\nRUN curl https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz | tar -xz -C /opt \\\n && wget -O /opt/go/bin/dep https://github.com/golang/dep/releases/download/0.5.2/dep-linux-amd64 \\\n && chmod +x /opt/go/bin/dep \\\n && mkdir /opt/go/gopath\nENV PATH=\"/opt/go/bin:$PATH\" \\\n    GOPATH=\"/opt/go/gopath\"\n#  ## ELIXIR\n#   Install Erlang, Elixir and Hex\nENV PATH=\"$PATH:/usr/local/elixir/bin\"\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb \\\n && dpkg -i erlang-solutions_1.0_all.deb \\\n && apt-get update \\\n && apt-get install --no-install-recommends esl-erlang -y \\\n && wget https://github.com/elixir-lang/elixir/releases/download/v1.8.1/Precompiled.zip \\\n && unzip -d /usr/local/elixir -x Precompiled.zip \\\n && rm -f Precompiled.zip \\\n && mix local.hex --force\n#  ## RUST\n#   Install Rust 1.33.0\n#   RUSTUP_USE_CURL is necessary because rustup <=1.17.0 doesn't support proxy\n#   authentication. We can remove it once something later than 1.17.0 is out as\n#   https://github.com/rust-lang/rustup.rs/pull/1746 should have fixed the issue.\nENV RUSTUP_HOME=\"/opt/rust\" \\\n    PATH=\"${PATH}:/opt/rust/bin\" \\\n    RUSTUP_USE_CURL=\"1\"\nRUN export CARGO_HOME=/opt/rust ; curl https://sh.rustup.rs -sSf | sh -s -- -y\n#  ## NEW NATIVE HELPERS\nCOPY terraform/helpers /opt/terraform/helpers\nCOPY python/helpers /opt/python/helpers\nCOPY dep/helpers /opt/dep/helpers\nCOPY go_modules/helpers /opt/go_modules/helpers\nCOPY hex/helpers /opt/hex/helpers\nCOPY composer/helpers /opt/composer/helpers\nCOPY npm_and_yarn/helpers /opt/npm_and_yarn/helpers\nENV DEPENDABOT_NATIVE_HELPERS_PATH=\"/opt\" \\\n    PATH=\"$PATH:/opt/terraform/bin:/opt/python/bin:/opt/go_modules/bin:/opt/dep/bin\" \\\n    MIX_HOME=\"/opt/hex/mix\"\nRUN bash /opt/terraform/helpers/build /opt/terraform \\\n && bash /opt/python/helpers/build /opt/python \\\n && bash /opt/dep/helpers/build /opt/dep \\\n && bash /opt/go_modules/helpers/build /opt/go_modules \\\n && bash /opt/npm_and_yarn/helpers/build /opt/npm_and_yarn \\\n && bash /opt/hex/helpers/build /opt/hex \\\n && bash /opt/composer/helpers/build /opt/composer\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\n# ## SYSTEM DEPENDENCIES\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\"\n#  Everything from `make` onwards in apt-get install is only installed to ensure\n#  Python support works with all packages (which may require specific libraries\n#  at install time).\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends build-essential dirmngr git bzr mercurial gnupg2 curl wget zlib1g-dev liblzma-dev tzdata zip unzip locales openssh-client make libpq-dev libssl-dev libbz2-dev libffi-dev libreadline-dev libsqlite3-dev libcurl4-openssl-dev llvm libncurses5-dev libncursesw5-dev libmysqlclient-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libgeos-dev python3-enchant -y \\\n && locale-gen en_US.UTF-8\n# ## RUBY\n#  Install Ruby 2.6.2, update RubyGems, and install Bundler\nENV BUNDLE_SILENCE_ROOT_WARNING=\"1\"\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C3173AA6 \\\n && echo \"deb http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu bionic main\" > /etc/apt/sources.list.d/brightbox.list \\\n && apt-get update \\\n && apt-get install ruby2.6 ruby2.6-dev -y \\\n && gem update --system 3.0.3 \\\n && gem install bundler --version 1.17.3 --no-document\n# ## PYTHON\n#  Install Python 2.7 and 3.7 with pyenv. Using pyenv lets us support multiple Pythons\nENV PYENV_ROOT=\"/usr/local/.pyenv\" \\\n    PATH=\"/usr/local/.pyenv/bin:$PATH\"\nRUN git clone https://github.com/pyenv/pyenv.git /usr/local/.pyenv \\\n && cd /usr/local/.pyenv \\\n && git checkout v1.2.11 \\\n && cd - \\\n && pyenv install 3.7.3 \\\n && pyenv install 2.7.16 \\\n && pyenv global 3.7.3\n# ## JAVASCRIPT\n#  Install Node 10.0 and Yarn\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install nodejs -y \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install yarn -y\n# ## ELM\n#  Install Elm 0.18 and Elm 0.19\nENV PATH=\"$PATH:/node_modules/.bin\"\nRUN npm install elm@0.18.0 \\\n && wget \"https://github.com/elm/compiler/releases/download/0.19.0/binaries-for-linux.tar.gz\" \\\n && tar xzf binaries-for-linux.tar.gz \\\n && mv elm /usr/local/bin/elm19 \\\n && rm -f binaries-for-linux.tar.gz\n# ## PHP\n#  Install PHP 7.3 and Composer\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nRUN echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu bionic main\" >> /etc/apt/sources.list.d/ondrej-php.list \\\n && echo \"deb-src http://ppa.launchpad.net/ondrej/php/ubuntu bionic main\" >> /etc/apt/sources.list.d/ondrej-php.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n && apt-get update \\\n && apt-get install php7.3 php7.3-xml php7.3-json php7.3-zip php7.3-mbstring php7.3-intl php7.3-common php7.3-gettext php7.3-curl php7.3-bcmath php7.3-gmp php7.3-imagick php7.3-gd php7.3-redis php7.3-soap php7.3-ldap php7.3-memcached php7.3-sqlite3 php7.3-apcu php7.3-tidy php7.3-mongodb php7.3-zmq php7.3-mysql php7.3-imap php7.3-geoip -y \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n# ## GO\n#  Install Go and dep\nRUN curl https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz | tar -xz -C /opt \\\n && wget -O /opt/go/bin/dep https://github.com/golang/dep/releases/download/0.5.2/dep-linux-amd64 \\\n && chmod +x /opt/go/bin/dep \\\n && mkdir /opt/go/gopath\nENV PATH=\"/opt/go/bin:$PATH\" \\\n    GOPATH=\"/opt/go/gopath\"\n# ## ELIXIR\n#  Install Erlang, Elixir and Hex\nENV PATH=\"$PATH:/usr/local/elixir/bin\"\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb \\\n && dpkg -i erlang-solutions_1.0_all.deb \\\n && apt-get update \\\n && apt-get install esl-erlang -y \\\n && wget https://github.com/elixir-lang/elixir/releases/download/v1.8.1/Precompiled.zip \\\n && unzip -d /usr/local/elixir -x Precompiled.zip \\\n && rm -f Precompiled.zip \\\n && mix local.hex --force\n# ## RUST\n#  Install Rust 1.33.0\n#  RUSTUP_USE_CURL is necessary because rustup <=1.17.0 doesn't support proxy\n#  authentication. We can remove it once something later than 1.17.0 is out as\n#  https://github.com/rust-lang/rustup.rs/pull/1746 should have fixed the issue.\nENV RUSTUP_HOME=\"/opt/rust\" \\\n    PATH=\"${PATH}:/opt/rust/bin\" \\\n    RUSTUP_USE_CURL=\"1\"\nRUN export CARGO_HOME=/opt/rust ; curl https://sh.rustup.rs -sSf | sh -s -- -y\n# ## NEW NATIVE HELPERS\nCOPY terraform/helpers /opt/terraform/helpers\nCOPY python/helpers /opt/python/helpers\nCOPY dep/helpers /opt/dep/helpers\nCOPY go_modules/helpers /opt/go_modules/helpers\nCOPY hex/helpers /opt/hex/helpers\nCOPY composer/helpers /opt/composer/helpers\nCOPY npm_and_yarn/helpers /opt/npm_and_yarn/helpers\nENV DEPENDABOT_NATIVE_HELPERS_PATH=\"/opt\" \\\n    PATH=\"$PATH:/opt/terraform/bin:/opt/python/bin:/opt/go_modules/bin:/opt/dep/bin\" \\\n    MIX_HOME=\"/opt/hex/mix\"\nRUN bash /opt/terraform/helpers/build /opt/terraform \\\n && bash /opt/python/helpers/build /opt/python \\\n && bash /opt/dep/helpers/build /opt/dep \\\n && bash /opt/go_modules/helpers/build /opt/go_modules \\\n && bash /opt/npm_and_yarn/helpers/build /opt/npm_and_yarn \\\n && bash /opt/hex/helpers/build /opt/hex \\\n && bash /opt/composer/helpers/build /opt/composer\n","injectedSmells":[],"originalDockerfileHash":"fe6eb1ca9ac1330d932a9c451a0ff27a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\n#  ## SYSTEM DEPENDENCIES\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\"\n#   Everything from `make` onwards in apt-get install is only installed to ensure\n#   Python support works with all packages (which may require specific libraries\n#   at install time).\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends build-essential dirmngr git bzr mercurial gnupg2 curl wget zlib1g-dev liblzma-dev tzdata zip unzip locales openssh-client make libpq-dev libssl-dev libbz2-dev libffi-dev libreadline-dev libsqlite3-dev libcurl4-openssl-dev llvm libncurses5-dev libncursesw5-dev libmysqlclient-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libgeos-dev python3-enchant -y \\\n && locale-gen en_US.UTF-8\n#  ## RUBY\n#   Install Ruby 2.6.2, update RubyGems, and install Bundler\nENV BUNDLE_SILENCE_ROOT_WARNING=\"1\"\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C3173AA6 \\\n && echo \"deb http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu bionic main\" > /etc/apt/sources.list.d/brightbox.list \\\n && apt-get update \\\n && apt-get install ruby2.6 ruby2.6-dev -y \\\n && gem update --system 3.0.3 \\\n && gem install bundler --version 1.17.3 --no-document\n#  ## PYTHON\n#   Install Python 2.7 and 3.7 with pyenv. Using pyenv lets us support multiple Pythons\nENV PYENV_ROOT=\"/usr/local/.pyenv\" \\\n    PATH=\"/usr/local/.pyenv/bin:$PATH\"\nRUN git clone https://github.com/pyenv/pyenv.git /usr/local/.pyenv \\\n && cd /usr/local/.pyenv \\\n && git checkout v1.2.11 \\\n && cd - \\\n && pyenv install 3.7.3 \\\n && pyenv install 2.7.16 \\\n && pyenv global 3.7.3\n#  ## JAVASCRIPT\n#   Install Node 10.0 and Yarn\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install nodejs -y \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install yarn -y\n#  ## ELM\n#   Install Elm 0.18 and Elm 0.19\nENV PATH=\"$PATH:/node_modules/.bin\"\nRUN npm install elm@0.18.0 \\\n && wget \"https://github.com/elm/compiler/releases/download/0.19.0/binaries-for-linux.tar.gz\" \\\n && tar xzf binaries-for-linux.tar.gz \\\n && mv elm /usr/local/bin/elm19 \\\n && rm -f binaries-for-linux.tar.gz\n#  ## PHP\n#   Install PHP 7.3 and Composer\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nRUN echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu bionic main\" >> /etc/apt/sources.list.d/ondrej-php.list \\\n && echo \"deb-src http://ppa.launchpad.net/ondrej/php/ubuntu bionic main\" >> /etc/apt/sources.list.d/ondrej-php.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n && apt-get update \\\n && apt-get install php7.3 php7.3-xml php7.3-json php7.3-zip php7.3-mbstring php7.3-intl php7.3-common php7.3-gettext php7.3-curl php7.3-bcmath php7.3-gmp php7.3-imagick php7.3-gd php7.3-redis php7.3-soap php7.3-ldap php7.3-memcached php7.3-sqlite3 php7.3-apcu php7.3-tidy php7.3-mongodb php7.3-zmq php7.3-mysql php7.3-imap php7.3-geoip -y \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#  ## GO\n#   Install Go and dep\nRUN curl https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz | tar -xz -C /opt \\\n && wget -O /opt/go/bin/dep https://github.com/golang/dep/releases/download/0.5.2/dep-linux-amd64 \\\n && chmod +x /opt/go/bin/dep \\\n && mkdir /opt/go/gopath\nENV PATH=\"/opt/go/bin:$PATH\" \\\n    GOPATH=\"/opt/go/gopath\"\n#  ## ELIXIR\n#   Install Erlang, Elixir and Hex\nENV PATH=\"$PATH:/usr/local/elixir/bin\"\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb \\\n && dpkg -i erlang-solutions_1.0_all.deb \\\n && apt-get update \\\n && apt-get install esl-erlang -y \\\n && wget https://github.com/elixir-lang/elixir/releases/download/v1.8.1/Precompiled.zip \\\n && unzip -d /usr/local/elixir -x Precompiled.zip \\\n && rm -f Precompiled.zip \\\n && mix local.hex --force\n#  ## RUST\n#   Install Rust 1.33.0\n#   RUSTUP_USE_CURL is necessary because rustup <=1.17.0 doesn't support proxy\n#   authentication. We can remove it once something later than 1.17.0 is out as\n#   https://github.com/rust-lang/rustup.rs/pull/1746 should have fixed the issue.\nENV RUSTUP_HOME=\"/opt/rust\" \\\n    PATH=\"${PATH}:/opt/rust/bin\" \\\n    RUSTUP_USE_CURL=\"1\"\nRUN export CARGO_HOME=/opt/rust ; curl https://sh.rustup.rs -sSf | sh -s -- -y\n#  ## NEW NATIVE HELPERS\nCOPY terraform/helpers /opt/terraform/helpers\nCOPY python/helpers /opt/python/helpers\nCOPY dep/helpers /opt/dep/helpers\nCOPY go_modules/helpers /opt/go_modules/helpers\nCOPY hex/helpers /opt/hex/helpers\nCOPY composer/helpers /opt/composer/helpers\nCOPY npm_and_yarn/helpers /opt/npm_and_yarn/helpers\nENV DEPENDABOT_NATIVE_HELPERS_PATH=\"/opt\" \\\n    PATH=\"$PATH:/opt/terraform/bin:/opt/python/bin:/opt/go_modules/bin:/opt/dep/bin\" \\\n    MIX_HOME=\"/opt/hex/mix\"\nRUN bash /opt/terraform/helpers/build /opt/terraform \\\n && bash /opt/python/helpers/build /opt/python \\\n && bash /opt/dep/helpers/build /opt/dep \\\n && bash /opt/go_modules/helpers/build /opt/go_modules \\\n && bash /opt/npm_and_yarn/helpers/build /opt/npm_and_yarn \\\n && bash /opt/hex/helpers/build /opt/hex \\\n && bash /opt/composer/helpers/build /opt/composer\n","originalDockerfileUglifiedHash":"b8cf64c88a796b9f7d7d2a9495a40eab","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/61c31ffdcb8380f08046275bfb51cd44626c6c34.dockerfile"}