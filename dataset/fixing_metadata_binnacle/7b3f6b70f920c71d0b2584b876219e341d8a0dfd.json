{"seed":2933699085,"processedDockerfileHash":"12617e7ae230c6de0e951057abb356d9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends apache2=2.4.18-2ubuntu3.17 cron=3.0pl1-128ubuntu2 curl=7.47.0-1ubuntu2.19 libpcre3-dev=2:8.38-3.1 git-core=1:2.7.4-0ubuntu1.10 mysql-client=5.7.33-0ubuntu0.16.04.1 postfix=3.1.0-3ubuntu0.4 rsync=3.1.1-3ubuntu1.3 sudo=1.8.16-0ubuntu1.10 unzip=6.0-20ubuntu1.1 vim=2:7.4.1689-3ubuntu1.5 wget=1.17.1-1ubuntu1.5 -y -qq )\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nRUN apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y -qq )\nRUN add-apt-repository ppa:ondrej/php \\\n && add-apt-repository ppa:ondrej/apache2 \\\n && :\n#   PHP 7.2\nRUN (apt-get update ;apt-get install --no-install-recommends php7.2 php7.2-cli php7.2-curl php7.2-fpm php7.2-gd php7.2-json php7.2-mbstring php7.2-mysql php7.2-sqlite3 php7.2-xml -y -qq )\n#   PHP 7.1\nRUN (apt-get update ;apt-get install --no-install-recommends php7.1 php7.1-cli php7.1-curl php7.1-fpm php7.1-gd php7.1-json php7.1-mbstring php7.1-mysql php7.1-sqlite3 php7.1-xml -y -qq )\n#   PHP 7.0\nRUN (apt-get update ;apt-get install --no-install-recommends php7.0=7.0.33-0ubuntu0.16.04.16 php7.0-cli=7.0.33-0ubuntu0.16.04.16 php7.0-curl=7.0.33-0ubuntu0.16.04.16 php7.0-fpm=7.0.33-0ubuntu0.16.04.16 php7.0-gd=7.0.33-0ubuntu0.16.04.16 php7.0-json=7.0.33-0ubuntu0.16.04.16 php7.0-mbstring=7.0.33-0ubuntu0.16.04.16 php7.0-mysql=7.0.33-0ubuntu0.16.04.16 php7.0-sqlite3=7.0.33-0ubuntu0.16.04.16 php7.0-xml=7.0.33-0ubuntu0.16.04.16 -y -qq )\n#   PHP 5.6\nRUN (apt-get update ;apt-get install --no-install-recommends php5.6 php5.6-cli php5.6-curl php5.6-fpm php5.6-gd php5.6-json php5.6-mbstring php5.6-mysql php5.6-sqlite3 php5.6-xml -y -qq )\nRUN a2enmod mpm_event proxy_fcgi setenvif\n#   Use --build-arg option when running docker build to set these variables.\n#   If wish to \"mount\" a volume to your host, set AEGIR_UID and AEGIR_GIT to your local user's UID.\n#   There are both ARG and ENV lines to make sure the value persists.\n#   See https://docs.docker.com/engine/reference/builder/#/arg\nARG AEGIR_UID=1000\nENV AEGIR_UID=\"${AEGIR_UID:-1000}\"\nRUN echo \"Creating user aegir with UID $AEGIR_UID and GID $AEGIR_GID\"\nRUN addgroup --gid $AEGIR_UID aegir\nRUN adduser --uid $AEGIR_UID --gid $AEGIR_UID --system --shell /bin/bash --home /var/aegir aegir\nRUN adduser aegir www-data\nRUN a2enmod rewrite\nRUN a2enmod ssl\nRUN ln -s /var/aegir/config/apache.conf /etc/apache2/conf-available/aegir.conf\nRUN ln -s /etc/apache2/conf-available/aegir.conf /etc/apache2/conf-enabled/aegir.conf\nCOPY sudoers-aegir /etc/sudoers.d/aegir\nRUN chmod 0440 /etc/sudoers.d/aegir\nRUN wget https://raw.githubusercontent.com/composer/getcomposer.org/35ca72b506eba32c0baed4d283a5f834968e5ade/web/installer -O - -q | php -- --quiet\nRUN cp composer.phar /usr/local/bin/composer\nRUN wget https://github.com/drush-ops/drush/releases/download/8.1.16/drush.phar -O - -q > /usr/local/bin/drush\nRUN chmod +x /usr/local/bin/composer\nRUN chmod +x /usr/local/bin/drush\n#   Install fix-permissions and fix-ownership scripts\nRUN wget http://cgit.drupalcode.org/hosting_tasks_extra/plain/fix_permissions/scripts/standalone-install-fix-permissions-ownership.sh\nRUN bash standalone-install-fix-permissions-ownership.sh\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nCOPY run-tests.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/run-tests.sh\n#  COPY docker-entrypoint-tests.sh /usr/local/bin/\n#  RUN chmod +x /usr/local/bin/docker-entrypoint-tests.sh\nCOPY docker-entrypoint-queue.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint-queue.sh\n#   Prepare Aegir Logs folder.\nRUN mkdir /var/log/aegir\nRUN chown aegir:aegir /var/log/aegir\nRUN echo 'Hello, Aegir.' > /var/log/aegir/system.log\n#   Don't install provision. Downstream tags will do this with the right version.\n#  # Install Provision for all.\n#  ENV PROVISION_VERSION 7.x-3.x\n#  RUN mkdir -p /usr/share/drush/commands\n#  RUN drush dl --destination=/usr/share/drush/commands provision-$PROVISION_VERSION -y\nENV REGISTRY_REBUILD_VERSION=\"7.x-2.5\"\nRUN drush dl --destination=/usr/share/drush/commands registry_rebuild-$REGISTRY_REBUILD_VERSION -y\nUSER aegir\nRUN mkdir /var/aegir/config\nRUN mkdir /var/aegir/.drush\n#   You may change this environment at run time. User UID 1 is created with this email address.\nENV AEGIR_CLIENT_EMAIL=\"aegir@aegir.local.computer\"\nENV AEGIR_CLIENT_NAME=\"admin\"\nENV AEGIR_PROFILE=\"hostmaster\"\nENV AEGIR_VERSION=\"7.x-3.x\"\nENV PROVISION_VERSION=\"7.x-3.x\"\nENV AEGIR_WORKING_COPY=\"0\"\nENV AEGIR_HTTP_SERVICE_TYPE=\"apache\"\n#   Must be fixed across versions so we can upgrade containers.\nENV AEGIR_HOSTMASTER_ROOT=\"/var/aegir/hostmaster\"\nWORKDIR /var/aegir\n#   The Hostname of the database server to use\nENV AEGIR_DATABASE_SERVER=\"database\"\n#   For dev images (7.x-3.x branch)\nENV AEGIR_MAKEFILE=\"http://cgit.drupalcode.org/provision/plain/aegir.make\"\n#   For Releases:\n#   ENV AEGIR_MAKEFILE http://cgit.drupalcode.org/provision/plain/aegir-release.make?h=$AEGIR_VERSION\nVOLUME /var/aegir\n#   docker-entrypoint.sh waits for mysql and runs hostmaster install\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"drush\", \"@hostmaster\", \"hosting-queued\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get install apache2 cron curl libpcre3-dev git-core mysql-client postfix rsync sudo unzip vim wget -y -qq\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nRUN apt-get update -qq \\\n && apt-get install software-properties-common -y -qq\nRUN add-apt-repository ppa:ondrej/php \\\n && add-apt-repository ppa:ondrej/apache2 \\\n && apt-get update -qq\n#  PHP 7.2\nRUN apt-get install php7.2 php7.2-cli php7.2-curl php7.2-fpm php7.2-gd php7.2-json php7.2-mbstring php7.2-mysql php7.2-sqlite3 php7.2-xml -y -qq\n#  PHP 7.1\nRUN apt-get install php7.1 php7.1-cli php7.1-curl php7.1-fpm php7.1-gd php7.1-json php7.1-mbstring php7.1-mysql php7.1-sqlite3 php7.1-xml -y -qq\n#  PHP 7.0\nRUN apt-get install php7.0 php7.0-cli php7.0-curl php7.0-fpm php7.0-gd php7.0-json php7.0-mbstring php7.0-mysql php7.0-sqlite3 php7.0-xml -y -qq\n#  PHP 5.6\nRUN apt-get install php5.6 php5.6-cli php5.6-curl php5.6-fpm php5.6-gd php5.6-json php5.6-mbstring php5.6-mysql php5.6-sqlite3 php5.6-xml -y -qq\nRUN a2enmod mpm_event proxy_fcgi setenvif\n#  Use --build-arg option when running docker build to set these variables.\n#  If wish to \"mount\" a volume to your host, set AEGIR_UID and AEGIR_GIT to your local user's UID.\n#  There are both ARG and ENV lines to make sure the value persists.\n#  See https://docs.docker.com/engine/reference/builder/#/arg\nARG AEGIR_UID=1000\nENV AEGIR_UID=\"${AEGIR_UID:-1000}\"\nRUN echo \"Creating user aegir with UID $AEGIR_UID and GID $AEGIR_GID\"\nRUN addgroup --gid $AEGIR_UID aegir\nRUN adduser --uid $AEGIR_UID --gid $AEGIR_UID --system --shell /bin/bash --home /var/aegir aegir\nRUN adduser aegir www-data\nRUN a2enmod rewrite\nRUN a2enmod ssl\nRUN ln -s /var/aegir/config/apache.conf /etc/apache2/conf-available/aegir.conf\nRUN ln -s /etc/apache2/conf-available/aegir.conf /etc/apache2/conf-enabled/aegir.conf\nCOPY sudoers-aegir /etc/sudoers.d/aegir\nRUN chmod 0440 /etc/sudoers.d/aegir\nRUN wget https://raw.githubusercontent.com/composer/getcomposer.org/35ca72b506eba32c0baed4d283a5f834968e5ade/web/installer -O - -q | php -- --quiet\nRUN cp composer.phar /usr/local/bin/composer\nRUN wget https://github.com/drush-ops/drush/releases/download/8.1.16/drush.phar -O - -q > /usr/local/bin/drush\nRUN chmod +x /usr/local/bin/composer\nRUN chmod +x /usr/local/bin/drush\n#  Install fix-permissions and fix-ownership scripts\nRUN wget http://cgit.drupalcode.org/hosting_tasks_extra/plain/fix_permissions/scripts/standalone-install-fix-permissions-ownership.sh\nRUN bash standalone-install-fix-permissions-ownership.sh\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nCOPY run-tests.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/run-tests.sh\n# COPY docker-entrypoint-tests.sh /usr/local/bin/\n# RUN chmod +x /usr/local/bin/docker-entrypoint-tests.sh\nCOPY docker-entrypoint-queue.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint-queue.sh\n#  Prepare Aegir Logs folder.\nRUN mkdir /var/log/aegir\nRUN chown aegir:aegir /var/log/aegir\nRUN echo 'Hello, Aegir.' > /var/log/aegir/system.log\n#  Don't install provision. Downstream tags will do this with the right version.\n# # Install Provision for all.\n# ENV PROVISION_VERSION 7.x-3.x\n# RUN mkdir -p /usr/share/drush/commands\n# RUN drush dl --destination=/usr/share/drush/commands provision-$PROVISION_VERSION -y\nENV REGISTRY_REBUILD_VERSION=\"7.x-2.5\"\nRUN drush dl --destination=/usr/share/drush/commands registry_rebuild-$REGISTRY_REBUILD_VERSION -y\nUSER aegir\nRUN mkdir /var/aegir/config\nRUN mkdir /var/aegir/.drush\n#  You may change this environment at run time. User UID 1 is created with this email address.\nENV AEGIR_CLIENT_EMAIL=\"aegir@aegir.local.computer\"\nENV AEGIR_CLIENT_NAME=\"admin\"\nENV AEGIR_PROFILE=\"hostmaster\"\nENV AEGIR_VERSION=\"7.x-3.x\"\nENV PROVISION_VERSION=\"7.x-3.x\"\nENV AEGIR_WORKING_COPY=\"0\"\nENV AEGIR_HTTP_SERVICE_TYPE=\"apache\"\n#  Must be fixed across versions so we can upgrade containers.\nENV AEGIR_HOSTMASTER_ROOT=\"/var/aegir/hostmaster\"\nWORKDIR /var/aegir\n#  The Hostname of the database server to use\nENV AEGIR_DATABASE_SERVER=\"database\"\n#  For dev images (7.x-3.x branch)\nENV AEGIR_MAKEFILE=\"http://cgit.drupalcode.org/provision/plain/aegir.make\"\n#  For Releases:\n#  ENV AEGIR_MAKEFILE http://cgit.drupalcode.org/provision/plain/aegir-release.make?h=$AEGIR_VERSION\nVOLUME /var/aegir\n#  docker-entrypoint.sh waits for mysql and runs hostmaster install\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"drush\", \"@hostmaster\", \"hosting-queued\"]\n","injectedSmells":[],"originalDockerfileHash":"009af6b672a5a5df63189a95aedcb20d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -qq \\\n && apt-get install apache2 cron curl libpcre3-dev git-core mysql-client postfix rsync sudo unzip vim wget -y -qq\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nRUN apt-get update -qq \\\n && apt-get install software-properties-common -y -qq\nRUN add-apt-repository ppa:ondrej/php \\\n && add-apt-repository ppa:ondrej/apache2 \\\n && apt-get update -qq\n#   PHP 7.2\nRUN apt-get install php7.2 php7.2-cli php7.2-curl php7.2-fpm php7.2-gd php7.2-json php7.2-mbstring php7.2-mysql php7.2-sqlite3 php7.2-xml -y -qq\n#   PHP 7.1\nRUN apt-get install php7.1 php7.1-cli php7.1-curl php7.1-fpm php7.1-gd php7.1-json php7.1-mbstring php7.1-mysql php7.1-sqlite3 php7.1-xml -y -qq\n#   PHP 7.0\nRUN apt-get install php7.0 php7.0-cli php7.0-curl php7.0-fpm php7.0-gd php7.0-json php7.0-mbstring php7.0-mysql php7.0-sqlite3 php7.0-xml -y -qq\n#   PHP 5.6\nRUN apt-get install php5.6 php5.6-cli php5.6-curl php5.6-fpm php5.6-gd php5.6-json php5.6-mbstring php5.6-mysql php5.6-sqlite3 php5.6-xml -y -qq\nRUN a2enmod mpm_event proxy_fcgi setenvif\n#   Use --build-arg option when running docker build to set these variables.\n#   If wish to \"mount\" a volume to your host, set AEGIR_UID and AEGIR_GIT to your local user's UID.\n#   There are both ARG and ENV lines to make sure the value persists.\n#   See https://docs.docker.com/engine/reference/builder/#/arg\nARG AEGIR_UID=1000\nENV AEGIR_UID=\"${AEGIR_UID:-1000}\"\nRUN echo \"Creating user aegir with UID $AEGIR_UID and GID $AEGIR_GID\"\nRUN addgroup --gid $AEGIR_UID aegir\nRUN adduser --uid $AEGIR_UID --gid $AEGIR_UID --system --shell /bin/bash --home /var/aegir aegir\nRUN adduser aegir www-data\nRUN a2enmod rewrite\nRUN a2enmod ssl\nRUN ln -s /var/aegir/config/apache.conf /etc/apache2/conf-available/aegir.conf\nRUN ln -s /etc/apache2/conf-available/aegir.conf /etc/apache2/conf-enabled/aegir.conf\nCOPY sudoers-aegir /etc/sudoers.d/aegir\nRUN chmod 0440 /etc/sudoers.d/aegir\nRUN wget https://raw.githubusercontent.com/composer/getcomposer.org/35ca72b506eba32c0baed4d283a5f834968e5ade/web/installer -O - -q | php -- --quiet\nRUN cp composer.phar /usr/local/bin/composer\nRUN wget https://github.com/drush-ops/drush/releases/download/8.1.16/drush.phar -O - -q > /usr/local/bin/drush\nRUN chmod +x /usr/local/bin/composer\nRUN chmod +x /usr/local/bin/drush\n#   Install fix-permissions and fix-ownership scripts\nRUN wget http://cgit.drupalcode.org/hosting_tasks_extra/plain/fix_permissions/scripts/standalone-install-fix-permissions-ownership.sh\nRUN bash standalone-install-fix-permissions-ownership.sh\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nCOPY run-tests.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/run-tests.sh\n#  COPY docker-entrypoint-tests.sh /usr/local/bin/\n#  RUN chmod +x /usr/local/bin/docker-entrypoint-tests.sh\nCOPY docker-entrypoint-queue.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint-queue.sh\n#   Prepare Aegir Logs folder.\nRUN mkdir /var/log/aegir\nRUN chown aegir:aegir /var/log/aegir\nRUN echo 'Hello, Aegir.' > /var/log/aegir/system.log\n#   Don't install provision. Downstream tags will do this with the right version.\n#  # Install Provision for all.\n#  ENV PROVISION_VERSION 7.x-3.x\n#  RUN mkdir -p /usr/share/drush/commands\n#  RUN drush dl --destination=/usr/share/drush/commands provision-$PROVISION_VERSION -y\nENV REGISTRY_REBUILD_VERSION=\"7.x-2.5\"\nRUN drush dl --destination=/usr/share/drush/commands registry_rebuild-$REGISTRY_REBUILD_VERSION -y\nUSER aegir\nRUN mkdir /var/aegir/config\nRUN mkdir /var/aegir/.drush\n#   You may change this environment at run time. User UID 1 is created with this email address.\nENV AEGIR_CLIENT_EMAIL=\"aegir@aegir.local.computer\"\nENV AEGIR_CLIENT_NAME=\"admin\"\nENV AEGIR_PROFILE=\"hostmaster\"\nENV AEGIR_VERSION=\"7.x-3.x\"\nENV PROVISION_VERSION=\"7.x-3.x\"\nENV AEGIR_WORKING_COPY=\"0\"\nENV AEGIR_HTTP_SERVICE_TYPE=\"apache\"\n#   Must be fixed across versions so we can upgrade containers.\nENV AEGIR_HOSTMASTER_ROOT=\"/var/aegir/hostmaster\"\nWORKDIR /var/aegir\n#   The Hostname of the database server to use\nENV AEGIR_DATABASE_SERVER=\"database\"\n#   For dev images (7.x-3.x branch)\nENV AEGIR_MAKEFILE=\"http://cgit.drupalcode.org/provision/plain/aegir.make\"\n#   For Releases:\n#   ENV AEGIR_MAKEFILE http://cgit.drupalcode.org/provision/plain/aegir-release.make?h=$AEGIR_VERSION\nVOLUME /var/aegir\n#   docker-entrypoint.sh waits for mysql and runs hostmaster install\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"drush\", \"@hostmaster\", \"hosting-queued\"]\n","originalDockerfileUglifiedHash":"61100408bdf87f0f8cec1a5aaedf831a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7b3f6b70f920c71d0b2584b876219e341d8a0dfd.dockerfile"}