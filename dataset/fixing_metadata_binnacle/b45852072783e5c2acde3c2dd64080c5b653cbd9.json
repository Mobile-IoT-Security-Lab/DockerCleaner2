{"seed":2125064760,"processedDockerfileHash":"0b62ea19be5057923f2a9aa34983ca1f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM amazonlinux:latest\nENV SCALA_VERSION=\"2.11.12\"\nWORKDIR /build/\nRUN yum install -y -q -e 0 java-1.8.0 \\\n && yum install -y -q -e 0 tar.x86_64 \\\n && yum install -y -q -e 0 gzip gunzip\nRUN curl -O http://downloads.typesafe.com/scala/${SCALA_VERSION}/scala-${SCALA_VERSION}.tgz\nRUN ls -al\nRUN tar -xzvf scala-${SCALA_VERSION}.tgz \\\n && rm -rf scala-${SCALA_VERSION}.tgz \\\n && echo \"export SCALA_HOME=/home/ec2-user/scala-${SCALA_VERSION}\" >> ~/.bashrc \\\n && echo \"export PATH=$PATH:/home/ec2-user/scala-${SCALA_VERSION}/bin\" >> ~/.bashrc\n#  SBT\nRUN curl https://bintray.com/sbt/rpm/rpm | tee /etc/yum.repos.d/bintray-sbt-rpm.repo\nRUN yum install -y -q -e 0 sbt\nWORKDIR /build/warm/\nCOPY warm/build.sbt warm/main.scala /build/warm/\nCOPY warm/project/build.properties warm/project/plugin.sbt /build/warm/project/\nRUN sbt compile\nWORKDIR /build/runtime/\nRUN yum install -y -q yum-utils\nRUN yum-config-manager --enable epel > /dev/null\nRUN yum -y update\nRUN yum -y group install \"development tools\"\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nRUN echo $'[alonid-llvm-3.9.0] \\nname=Copr repo for llvm-3.9.0 owned by alonid \\nbaseurl=https://copr-be.cloud.fedoraproject.org/results/alonid/llvm-3.9.0/epel-7-$basearch/ \\ntype=rpm-md \\nskip_if_unavailable=True \\ngpgcheck=1 \\ngpgkey=https://copr-be.cloud.fedoraproject.org/results/alonid/llvm-3.9.0/pubkey.gpg \\nrepo_gpgcheck=0 \\nenabled=1 \\nenabled_metadata=1' >> /etc/yum.repos.d/epel.repo\nRUN yum install -y clang-3.9.0\nRUN yum install -y llvm-3.9.0 llvm-3.9.0-devel\nRUN yum install -y zip which libunwind libunwind-devel python-pip jq libcurl-devel\nRUN pip install awscli==1.27.114\nRUN mkdir -p /build/runtime/lib/ \\\n && cp /usr/lib64/libunwind.so /build/runtime/lib/libunwind.so.8 \\\n && cp /usr/lib64/libunwind-x86_64.so.8 /build/runtime/lib/libunwind-x86_64.so.8\nRUN yum install -y libidn libidn-devel \\\n && cp /usr/lib64/libidn.so.11 lib/libidn.so.11\nRUN yum install -y git make openssl-devel\nRUN curl -O -L https://github.com/curl/curl/releases/download/curl-7_62_0/curl-7.62.0.tar.gz \\\n && tar -zxvf curl-7.62.0.tar.gz\nRUN curl -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_0_2l.tar.gz \\\n && tar -zxvf OpenSSL_1_0_2l.tar.gz\nRUN git clone https://github.com/google/re2.git\nWORKDIR /build/runtime/re2/\nENV LD_LIBRARY_PATH=\"/usr/local/lib:$LD_LIBRARY_PATH\"\nENV PATH=\"/opt/llvm-3.9.0/bin:${PATH}\" \\\n    CXX=\"/opt/llvm-3.9.0/bin/clang++\" \\\n    LDFLAGS=\"-static-libstdc++\"\nRUN make \\\n && make install\nRUN cp /usr/local/lib/libre2.so.0 /build/runtime/lib/libre2.so.0\nWORKDIR /build/runtime/openssl-OpenSSL_1_0_2l\nRUN ./config --prefix=/opt/lib/ssl --openssldir=/opt/lib/ssl shared zlib\nRUN make \\\n && make install\nWORKDIR /build/runtime/curl-7.62.0/\nENV LD_LIBRARY_PATH=\"/opt/lib:/usr/lib64:$LD_LIBRARY_PATH\"\nRUN mkdir -p /build/runtime/lib/ssl \\\n && cp -r /opt/lib/ssl/lib /build/runtime/lib/ssl/lib\nRUN ./configure --prefix=$( /build/runtime ;) --with-ssl=/opt/lib/ssl \\\n && make \\\n && make install\n#   RUN cp /lib/libcurl.so.4  /build/runtime/lib/libcurl.so.4 && cp /usr/lib64/libcrypto.so.10 /build/runtime/lib/libcyrpto.so.10 && cp /usr/lib64/libssl.so.10 /build/runtime/lib/libssl.so.10\nRUN cp /lib/libcurl.so.4 /build/runtime/lib/libcurl.so.4 \\\n && cp /opt/lib/ssl/lib/libcrypto.so.1.0.0 /build/runtime/lib/libcrypto.so.1.0.0 \\\n && cp /opt/lib/ssl/lib/libssl.so.1.0.0 /build/runtime/lib/libssl.so.1.0.0\nWORKDIR /build/runtime/\nCOPY bootstrap /build/runtime/\nRUN zip runtime.zip bootstrap lib/libunwind.so.8 lib/libunwind-x86_64.so.8 lib/libre2.so.0 lib/libidn.so.11 lib/libcurl.so.4 lib/libcrypto.so.1.0.0 lib/libssl.so.1.0.0\nRUN mkdir -p /build/main\nCOPY *.sh /build/main/\nENV LD_LIBRARY_PATH=\"/opt/lib/ssl/lib:/usr/local/lib:$LD_LIBRARY_PATH\" \\\n    PATH=\"/opt/llvm-3.9.0/bin:${PATH}\"\nWORKDIR /build/main/\n#   WORKDIR /build/main/\n#   ADD project/build.properties project/plugin.sbt /build/main/project/\n#   ADD build.sbt *.scala scripts/init.sh scripts/update.sh scripts/delete.sh scripts/invoke.sh /build/main/\n#   ENV LD_LIBRARY_PATH=/opt/lib/ssl/lib:/usr/local/lib:$LD_LIBRARY_PATH\n#   ENV PATH=\"/opt/llvm-3.9.0/bin:${PATH}\" \n#   RUN sbt nativeLink\n#   RUN zip function.zip target/scala-2.11/main-out \n#   ENV FUNCTION_NAME=native_test RUNTIME_NAME=native_test_runtime\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM amazonlinux:latest\nENV SCALA_VERSION=\"2.11.12\"\nWORKDIR /build/\nRUN yum install -y -q -e 0 java-1.8.0 \\\n && yum install -y -q -e 0 tar.x86_64 \\\n && yum install -y -q -e 0 gzip gunzip\nRUN curl -O http://downloads.typesafe.com/scala/${SCALA_VERSION}/scala-${SCALA_VERSION}.tgz\nRUN ls -al\nRUN tar -xzvf scala-${SCALA_VERSION}.tgz \\\n && rm -rf scala-${SCALA_VERSION}.tgz \\\n && echo \"export SCALA_HOME=/home/ec2-user/scala-${SCALA_VERSION}\" >> ~/.bashrc \\\n && echo \"export PATH=$PATH:/home/ec2-user/scala-${SCALA_VERSION}/bin\" >> ~/.bashrc\n# SBT\nRUN curl https://bintray.com/sbt/rpm/rpm | tee /etc/yum.repos.d/bintray-sbt-rpm.repo\nRUN yum install -y -q -e 0 sbt\nWORKDIR /build/warm/\nADD warm/build.sbt warm/main.scala /build/warm/\nADD warm/project/build.properties warm/project/plugin.sbt /build/warm/project/\nRUN sbt compile\nWORKDIR /build/runtime/\nRUN yum install -y -q yum-utils\nRUN yum-config-manager --enable epel > /dev/null\nRUN yum -y update\nRUN yum -y group install \"development tools\"\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nRUN echo $'[alonid-llvm-3.9.0] \\nname=Copr repo for llvm-3.9.0 owned by alonid \\nbaseurl=https://copr-be.cloud.fedoraproject.org/results/alonid/llvm-3.9.0/epel-7-$basearch/ \\ntype=rpm-md \\nskip_if_unavailable=True \\ngpgcheck=1 \\ngpgkey=https://copr-be.cloud.fedoraproject.org/results/alonid/llvm-3.9.0/pubkey.gpg \\nrepo_gpgcheck=0 \\nenabled=1 \\nenabled_metadata=1' >> /etc/yum.repos.d/epel.repo\nRUN yum install -y clang-3.9.0\nRUN yum install -y llvm-3.9.0 llvm-3.9.0-devel\nRUN yum install -y zip which libunwind libunwind-devel python-pip jq libcurl-devel\nRUN pip install awscli\nRUN mkdir -p /build/runtime/lib/ \\\n && cp /usr/lib64/libunwind.so /build/runtime/lib/libunwind.so.8 \\\n && cp /usr/lib64/libunwind-x86_64.so.8 /build/runtime/lib/libunwind-x86_64.so.8\nRUN yum install -y libidn libidn-devel \\\n && cp /usr/lib64/libidn.so.11 lib/libidn.so.11\nRUN yum install -y git make openssl-devel\nRUN curl -O -L https://github.com/curl/curl/releases/download/curl-7_62_0/curl-7.62.0.tar.gz \\\n && tar -zxvf curl-7.62.0.tar.gz\nRUN curl -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_0_2l.tar.gz \\\n && tar -zxvf OpenSSL_1_0_2l.tar.gz\nRUN git clone https://github.com/google/re2.git\nWORKDIR /build/runtime/re2/\nENV LD_LIBRARY_PATH=\"/usr/local/lib:$LD_LIBRARY_PATH\"\nENV PATH=\"/opt/llvm-3.9.0/bin:${PATH}\" \\\n    CXX=\"/opt/llvm-3.9.0/bin/clang++\" \\\n    LDFLAGS=\"-static-libstdc++\"\nRUN make \\\n && make install\nRUN cp /usr/local/lib/libre2.so.0 /build/runtime/lib/libre2.so.0\nWORKDIR /build/runtime/openssl-OpenSSL_1_0_2l\nRUN ./config --prefix=/opt/lib/ssl --openssldir=/opt/lib/ssl shared zlib\nRUN make \\\n && make install\nWORKDIR /build/runtime/curl-7.62.0/\nENV LD_LIBRARY_PATH=\"/opt/lib:/usr/lib64:$LD_LIBRARY_PATH\"\nRUN mkdir -p /build/runtime/lib/ssl \\\n && cp -r /opt/lib/ssl/lib /build/runtime/lib/ssl/lib\nRUN ./configure --prefix=$( /build/runtime ;) --with-ssl=/opt/lib/ssl \\\n && make \\\n && make install\n#  RUN cp /lib/libcurl.so.4  /build/runtime/lib/libcurl.so.4 && cp /usr/lib64/libcrypto.so.10 /build/runtime/lib/libcyrpto.so.10 && cp /usr/lib64/libssl.so.10 /build/runtime/lib/libssl.so.10\nRUN cp /lib/libcurl.so.4 /build/runtime/lib/libcurl.so.4 \\\n && cp /opt/lib/ssl/lib/libcrypto.so.1.0.0 /build/runtime/lib/libcrypto.so.1.0.0 \\\n && cp /opt/lib/ssl/lib/libssl.so.1.0.0 /build/runtime/lib/libssl.so.1.0.0\nWORKDIR /build/runtime/\nADD bootstrap /build/runtime/\nRUN zip runtime.zip bootstrap lib/libunwind.so.8 lib/libunwind-x86_64.so.8 lib/libre2.so.0 lib/libidn.so.11 lib/libcurl.so.4 lib/libcrypto.so.1.0.0 lib/libssl.so.1.0.0\nRUN mkdir -p /build/main\nADD *.sh /build/main/\nENV LD_LIBRARY_PATH=\"/opt/lib/ssl/lib:/usr/local/lib:$LD_LIBRARY_PATH\" \\\n    PATH=\"/opt/llvm-3.9.0/bin:${PATH}\"\nWORKDIR /build/main/\n#  WORKDIR /build/main/\n#  ADD project/build.properties project/plugin.sbt /build/main/project/\n#  ADD build.sbt *.scala scripts/init.sh scripts/update.sh scripts/delete.sh scripts/invoke.sh /build/main/\n#  ENV LD_LIBRARY_PATH=/opt/lib/ssl/lib:/usr/local/lib:$LD_LIBRARY_PATH\n#  ENV PATH=\"/opt/llvm-3.9.0/bin:${PATH}\" \n#  RUN sbt nativeLink\n#  RUN zip function.zip target/scala-2.11/main-out \n#  ENV FUNCTION_NAME=native_test RUNTIME_NAME=native_test_runtime\n","injectedSmells":[],"originalDockerfileHash":"3db769c6d53b6823aa7030537ea9ea38","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM amazonlinux:latest\nENV SCALA_VERSION=\"2.11.12\"\nWORKDIR /build/\nRUN yum install -y -q -e 0 java-1.8.0 \\\n && yum install -y -q -e 0 tar.x86_64 \\\n && yum install -y -q -e 0 gzip gunzip\nRUN curl -O http://downloads.typesafe.com/scala/${SCALA_VERSION}/scala-${SCALA_VERSION}.tgz\nRUN ls -al\nRUN tar -xzvf scala-${SCALA_VERSION}.tgz \\\n && rm -rf scala-${SCALA_VERSION}.tgz \\\n && echo \"export SCALA_HOME=/home/ec2-user/scala-${SCALA_VERSION}\" >> ~/.bashrc \\\n && echo \"export PATH=$PATH:/home/ec2-user/scala-${SCALA_VERSION}/bin\" >> ~/.bashrc\n#  SBT\nRUN curl https://bintray.com/sbt/rpm/rpm | tee /etc/yum.repos.d/bintray-sbt-rpm.repo\nRUN yum install -y -q -e 0 sbt\nWORKDIR /build/warm/\nADD warm/build.sbt warm/main.scala /build/warm/\nADD warm/project/build.properties warm/project/plugin.sbt /build/warm/project/\nRUN sbt compile\nWORKDIR /build/runtime/\nRUN yum install -y -q yum-utils\nRUN yum-config-manager --enable epel > /dev/null\nRUN yum -y update\nRUN yum -y group install \"development tools\"\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nRUN echo $'[alonid-llvm-3.9.0] \\nname=Copr repo for llvm-3.9.0 owned by alonid \\nbaseurl=https://copr-be.cloud.fedoraproject.org/results/alonid/llvm-3.9.0/epel-7-$basearch/ \\ntype=rpm-md \\nskip_if_unavailable=True \\ngpgcheck=1 \\ngpgkey=https://copr-be.cloud.fedoraproject.org/results/alonid/llvm-3.9.0/pubkey.gpg \\nrepo_gpgcheck=0 \\nenabled=1 \\nenabled_metadata=1' >> /etc/yum.repos.d/epel.repo\nRUN yum install -y clang-3.9.0\nRUN yum install -y llvm-3.9.0 llvm-3.9.0-devel\nRUN yum install -y zip which libunwind libunwind-devel python-pip jq libcurl-devel\nRUN pip install awscli\nRUN mkdir -p /build/runtime/lib/ \\\n && cp /usr/lib64/libunwind.so /build/runtime/lib/libunwind.so.8 \\\n && cp /usr/lib64/libunwind-x86_64.so.8 /build/runtime/lib/libunwind-x86_64.so.8\nRUN yum install -y libidn libidn-devel \\\n && cp /usr/lib64/libidn.so.11 lib/libidn.so.11\nRUN yum install -y git make openssl-devel\nRUN curl -O -L https://github.com/curl/curl/releases/download/curl-7_62_0/curl-7.62.0.tar.gz \\\n && tar -zxvf curl-7.62.0.tar.gz\nRUN curl -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_0_2l.tar.gz \\\n && tar -zxvf OpenSSL_1_0_2l.tar.gz\nRUN git clone https://github.com/google/re2.git\nWORKDIR /build/runtime/re2/\nENV LD_LIBRARY_PATH=\"/usr/local/lib:$LD_LIBRARY_PATH\"\nENV PATH=\"/opt/llvm-3.9.0/bin:${PATH}\" \\\n    CXX=\"/opt/llvm-3.9.0/bin/clang++\" \\\n    LDFLAGS=\"-static-libstdc++\"\nRUN make \\\n && make install\nRUN cp /usr/local/lib/libre2.so.0 /build/runtime/lib/libre2.so.0\nWORKDIR /build/runtime/openssl-OpenSSL_1_0_2l\nRUN ./config --prefix=/opt/lib/ssl --openssldir=/opt/lib/ssl shared zlib\nRUN make \\\n && make install\nWORKDIR /build/runtime/curl-7.62.0/\nENV LD_LIBRARY_PATH=\"/opt/lib:/usr/lib64:$LD_LIBRARY_PATH\"\nRUN mkdir -p /build/runtime/lib/ssl \\\n && cp -r /opt/lib/ssl/lib /build/runtime/lib/ssl/lib\nRUN ./configure --prefix=$( /build/runtime ;) --with-ssl=/opt/lib/ssl \\\n && make \\\n && make install\n#   RUN cp /lib/libcurl.so.4  /build/runtime/lib/libcurl.so.4 && cp /usr/lib64/libcrypto.so.10 /build/runtime/lib/libcyrpto.so.10 && cp /usr/lib64/libssl.so.10 /build/runtime/lib/libssl.so.10\nRUN cp /lib/libcurl.so.4 /build/runtime/lib/libcurl.so.4 \\\n && cp /opt/lib/ssl/lib/libcrypto.so.1.0.0 /build/runtime/lib/libcrypto.so.1.0.0 \\\n && cp /opt/lib/ssl/lib/libssl.so.1.0.0 /build/runtime/lib/libssl.so.1.0.0\nWORKDIR /build/runtime/\nADD bootstrap /build/runtime/\nRUN zip runtime.zip bootstrap lib/libunwind.so.8 lib/libunwind-x86_64.so.8 lib/libre2.so.0 lib/libidn.so.11 lib/libcurl.so.4 lib/libcrypto.so.1.0.0 lib/libssl.so.1.0.0\nRUN mkdir -p /build/main\nADD *.sh /build/main/\nENV LD_LIBRARY_PATH=\"/opt/lib/ssl/lib:/usr/local/lib:$LD_LIBRARY_PATH\" \\\n    PATH=\"/opt/llvm-3.9.0/bin:${PATH}\"\nWORKDIR /build/main/\n#   WORKDIR /build/main/\n#   ADD project/build.properties project/plugin.sbt /build/main/project/\n#   ADD build.sbt *.scala scripts/init.sh scripts/update.sh scripts/delete.sh scripts/invoke.sh /build/main/\n#   ENV LD_LIBRARY_PATH=/opt/lib/ssl/lib:/usr/local/lib:$LD_LIBRARY_PATH\n#   ENV PATH=\"/opt/llvm-3.9.0/bin:${PATH}\" \n#   RUN sbt nativeLink\n#   RUN zip function.zip target/scala-2.11/main-out \n#   ENV FUNCTION_NAME=native_test RUNTIME_NAME=native_test_runtime\n","originalDockerfileUglifiedHash":"713065c33e09f03e6bcae1508c9205fb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b45852072783e5c2acde3c2dd64080c5b653cbd9.dockerfile"}