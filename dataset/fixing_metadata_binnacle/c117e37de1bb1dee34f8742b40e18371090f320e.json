{"seed":1085850387,"processedDockerfileHash":"4541f03bc781a1b281bc416fde7e35bc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   ==================================================================\n#   module list\n#   ------------------------------------------------------------------\n#   + python         3.6   (apt)\n#   + tensorflow-gpu 1.8   (pip)\n#   + keras          2.2.2 (pip)\n#   + opencv         3.4.2 (git)\n#   ==================================================================\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends libcudnn7=7.0.5.15-1+cuda9.0 libcudnn7-dev=7.0.5.15-1+cuda9.0 -y --allow-downgrades --allow-change-held-packages ) \\\n && rm -rf /var/lib/apt/lists/*\nRUN : \\\n && export DEBIAN_FRONTEND=noninteractive APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && $APT_INSTALL build-essential ca-certificates cmake wget git vim unzip software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && : \\\n && $APT_INSTALL python3.6 python3.6-dev \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools numpy scipy pandas scikit-learn matplotlib Cython tqdm==4.14.0 pillow==4.1.1 \\\n && wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz \\\n && tar -zxf ~/boost.tar.gz -C ~ \\\n && cd ~/boost_* \\\n && ./bootstrap.sh --with-python=python3.6 \\\n && ./b2 install --prefix=/usr/local \\\n && $PIP_INSTALL tensorflow-gpu==1.8.0 h5py keras==2.2.2 \\\n && $APT_INSTALL libatlas-base-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libprotobuf-dev libsnappy-dev protobuf-compiler \\\n && $GIT_CLONE --branch 3.4.2 https://github.com/opencv/opencv ~/opencv \\\n && mkdir -p ~/opencv/build \\\n && cd ~/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_IPP=OFF -D WITH_CUDA=OFF -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF .. \\\n && make -j\"$( nproc ;)\" install \\\n && cd ~\n#   ==================================================================\n#   config & cleanup\n#   ------------------------------------------------------------------\nRUN ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\nCOPY ./models/* models/\nCOPY ./train.py train.py\nCOPY ./utils.py utils.py\nCOPY ./predict.py predict.py\nENTRYPOINT [\"bash\"]\nEXPOSE 8000/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  ==================================================================\n#  module list\n#  ------------------------------------------------------------------\n#  + python         3.6   (apt)\n#  + tensorflow-gpu 1.8   (pip)\n#  + keras          2.2.2 (pip)\n#  + opencv         3.4.2 (git)\n#  ==================================================================\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn7=7.0.5.15-1+cuda9.0 libcudnn7-dev=7.0.5.15-1+cuda9.0 -y --allow-downgrades --allow-change-held-packages \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update \\\n && export DEBIAN_FRONTEND=noninteractive APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && $APT_INSTALL build-essential ca-certificates cmake wget git vim unzip software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && $APT_INSTALL python3.6 python3.6-dev \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools numpy scipy pandas scikit-learn matplotlib Cython tqdm==4.14.0 pillow==4.1.1 \\\n && wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz \\\n && tar -zxf ~/boost.tar.gz -C ~ \\\n && cd ~/boost_* \\\n && ./bootstrap.sh --with-python=python3.6 \\\n && ./b2 install --prefix=/usr/local \\\n && $PIP_INSTALL tensorflow-gpu==1.8.0 h5py keras==2.2.2 \\\n && $APT_INSTALL libatlas-base-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libprotobuf-dev libsnappy-dev protobuf-compiler \\\n && $GIT_CLONE --branch 3.4.2 https://github.com/opencv/opencv ~/opencv \\\n && mkdir -p ~/opencv/build \\\n && cd ~/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_IPP=OFF -D WITH_CUDA=OFF -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF .. \\\n && make -j\"$( nproc ;)\" install \\\n && cd ~\n#  ==================================================================\n#  config & cleanup\n#  ------------------------------------------------------------------\nRUN ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\nCOPY ./models/* models/\nCOPY ./train.py train.py\nCOPY ./utils.py utils.py\nCOPY ./predict.py predict.py\nENTRYPOINT [\"bash\"]\nEXPOSE 8000/tcp\n","injectedSmells":[],"originalDockerfileHash":"65353262e7e98098d627d7ca40b8c313","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ==================================================================\n#   module list\n#   ------------------------------------------------------------------\n#   + python         3.6   (apt)\n#   + tensorflow-gpu 1.8   (pip)\n#   + keras          2.2.2 (pip)\n#   + opencv         3.4.2 (git)\n#   ==================================================================\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn7=7.0.5.15-1+cuda9.0 libcudnn7-dev=7.0.5.15-1+cuda9.0 -y --allow-downgrades --allow-change-held-packages \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update \\\n && export DEBIAN_FRONTEND=noninteractive APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && $APT_INSTALL build-essential ca-certificates cmake wget git vim unzip software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && $APT_INSTALL python3.6 python3.6-dev \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools numpy scipy pandas scikit-learn matplotlib Cython tqdm==4.14.0 pillow==4.1.1 \\\n && wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz \\\n && tar -zxf ~/boost.tar.gz -C ~ \\\n && cd ~/boost_* \\\n && ./bootstrap.sh --with-python=python3.6 \\\n && ./b2 install --prefix=/usr/local \\\n && $PIP_INSTALL tensorflow-gpu==1.8.0 h5py keras==2.2.2 \\\n && $APT_INSTALL libatlas-base-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libprotobuf-dev libsnappy-dev protobuf-compiler \\\n && $GIT_CLONE --branch 3.4.2 https://github.com/opencv/opencv ~/opencv \\\n && mkdir -p ~/opencv/build \\\n && cd ~/opencv/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_IPP=OFF -D WITH_CUDA=OFF -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF .. \\\n && make -j\"$( nproc ;)\" install \\\n && cd ~\n#   ==================================================================\n#   config & cleanup\n#   ------------------------------------------------------------------\nRUN ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\nCOPY ./models/* models/\nCOPY ./train.py train.py\nCOPY ./utils.py utils.py\nCOPY ./predict.py predict.py\nENTRYPOINT [\"bash\"]\nEXPOSE 8000/tcp\n","originalDockerfileUglifiedHash":"a7e04945a4004e4867fc5d0846787ea4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c117e37de1bb1dee34f8742b40e18371090f320e.dockerfile"}