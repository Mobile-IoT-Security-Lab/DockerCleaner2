{"seed":1190722285,"processedDockerfileHash":"3dafa74a6b5661c130c3cb44af8ffb7f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nMAINTAINER Moch. Ainun Najib <ec2ainun@gmail.com>\nARG TENSORFLOW_VERSION=1.2.0\nARG TENSORFLOW_ARCH=gpu\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg5 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev qt5-default libvtk6-dev zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev libtbb-dev libeigen3-dev python3-dev python3-tk python3-numpy python3-pip ant default-jdk doxygen -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --upgrade pip\n#   Add SNI support to Python\nRUN pip3 --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n#   Install other useful Python packages using pip3\nRUN pip3 --no-cache-dir install --upgrade ipython \\\n && pip3 --no-cache-dir install Cython ipykernel jupyter path.py Pillow h5py pygments six sphinx wheel zmq matplotlib numpy pandas scipy scikit-learn opencv-contrib-python \\\n && python3 -m ipykernel.kernelspec\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3-nose python3-skimage python3-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install TensorFlow\nRUN pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_gpu-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\nCOPY jalankan.sh /root/\nEXPOSE 6006/tcp 8888/tcp\nCOPY *.ipynb /notebooks/\nWORKDIR /notebooks\nRUN chmod +x /root/jalankan.sh\nCMD [\"/root/jalankan.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nMAINTAINER Moch. Ainun Najib <ec2ainun@gmail.com>\nARG TENSORFLOW_VERSION=1.2.0\nARG TENSORFLOW_ARCH=gpu\n#  Install dependencies\nRUN apt-get update \\\n && apt-get install bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg5 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev qt5-default libvtk6-dev zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev libtbb-dev libeigen3-dev python3-dev python3-tk python3-numpy python3-pip ant default-jdk doxygen -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --upgrade pip\n#  Add SNI support to Python\nRUN pip3 --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n#  Install other useful Python packages using pip3\nRUN pip3 --no-cache-dir install --upgrade ipython \\\n && pip3 --no-cache-dir install Cython ipykernel jupyter path.py Pillow h5py pygments six sphinx wheel zmq matplotlib numpy pandas scipy scikit-learn opencv-contrib-python \\\n && python3 -m ipykernel.kernelspec\nRUN apt-get update \\\n && apt-get install python3-nose python3-skimage python3-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#  Install TensorFlow\nRUN pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_gpu-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl\n#  Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\nCOPY jalankan.sh /root/\nEXPOSE 6006/tcp 8888/tcp\nADD *.ipynb /notebooks/\nWORKDIR /notebooks\nRUN chmod +x /root/jalankan.sh\nCMD [\"/root/jalankan.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"11afcb252489a71f012f11d346f8faed","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nMAINTAINER Moch. Ainun Najib <ec2ainun@gmail.com>\nARG TENSORFLOW_VERSION=1.2.0\nARG TENSORFLOW_ARCH=gpu\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg5 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev qt5-default libvtk6-dev zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev libtbb-dev libeigen3-dev python3-dev python3-tk python3-numpy python3-pip ant default-jdk doxygen -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --upgrade pip\n#   Add SNI support to Python\nRUN pip3 --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n#   Install other useful Python packages using pip3\nRUN pip3 --no-cache-dir install --upgrade ipython \\\n && pip3 --no-cache-dir install Cython ipykernel jupyter path.py Pillow h5py pygments six sphinx wheel zmq matplotlib numpy pandas scipy scikit-learn opencv-contrib-python \\\n && python3 -m ipykernel.kernelspec\nRUN apt-get update \\\n && apt-get install python3-nose python3-skimage python3-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install TensorFlow\nRUN pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_gpu-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\nCOPY jalankan.sh /root/\nEXPOSE 6006/tcp 8888/tcp\nADD *.ipynb /notebooks/\nWORKDIR /notebooks\nRUN chmod +x /root/jalankan.sh\nCMD [\"/root/jalankan.sh\"]\n","originalDockerfileUglifiedHash":"8f41625010b1e15c6719fbe167322ca1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3d81e2f1e3474cfd98e6cb3183e2e67a879323f4.dockerfile"}