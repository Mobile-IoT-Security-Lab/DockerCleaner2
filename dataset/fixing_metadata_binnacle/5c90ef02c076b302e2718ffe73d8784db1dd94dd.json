{"seed":349662710,"processedDockerfileHash":"f3381954a76a0477357cc49aeeb920b0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##############################################################################################\n#   \n#   Dockerfile for single container Hyrax\n#\n#\n#   Some shell state reference:\n#   set -f # \"set -o noglob\"  Disable file name generation using metacharacters (globbing).\n#   set -v # \"set -o verbose\" Prints shell input lines as they are read.\n#   set -x # \"set -o xtrace\"  Print command traces before executing command.\n#   set -e #  Exit on error.\n#\n#   In general use \"set -e\" when running commands that matter and don't use\n#   it for debugging stuff.\n#\n#   Set one or more individual labels\nFROM centos:7\nLABEL vendor=\"OPeNDAP Incorporated\"\nLABEL org.opendap.hyrax.version=\"1.15.1\"\n#   24 September 2018\nLABEL org.opendap.hyrax.release-date=\"2018-11-26\"\nLABEL org.opendap.hyrax.version.is-production=\"true\"\nMAINTAINER support@opendap.org\nUSER root\n#\n#   The --build-arg USE_NCWMS can be set to \"true\" in order to \n#   add the ncWMS application to the build.\nARG USE_NCWMS\nENV USE_NCWMS=\"${USE_NCWMS:-\\\"false\\\"}\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"NCWMS: ENABLED\" ; else echo \"NCWMS: DISABLED\" ; fi\nARG DEVELOPER_MODE\nENV DEVELOPER_MODE=\"${DEVELOPER_MODE:-\\\"false\\\"}\"\nRUN set -e \\\n && if [ $DEVELOPER_MODE = \"true\" ] ; then echo \"DEVELOPER_MODE: ENABLED\" ; else echo \"DEVELOPER_MODE: DISABLED\" ; fi\n#   Update and install the needful.\nRUN set -e \\\n && yum -y install tomcat unzip which \\\n && yum -y update \\\n && yum clean all\n#   Tomcat environment (Tomcat installed above by via yum)\nENV CATALINA_HOME=\"/usr/share/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN echo \"CATALINA_HOME: $CATALINA_HOME\"\n#   Installs the OPeNDAP security public key.\n#   TODO: We should get this from a well known key-server instead.\nRUN echo \"Adding OPeNDAP Public Security Key\"\nENV OPENDAP_PUBLIC_KEY_FILE=\"security_at_opendap.org.pub.asc\"\nENV OPENDAP_PUBLIC_KEY_URL=\"https://www.opendap.org/${OPENDAP_PUBLIC_KEY_FILE}\"\nRUN set -e \\\n && curl -s $OPENDAP_PUBLIC_KEY_URL > $OPENDAP_PUBLIC_KEY_FILE \\\n && gpg --import $OPENDAP_PUBLIC_KEY_FILE\n#   HYRAX VERSION INFO\n#   Note: for Hyrax-1.13.5 only the OLFS changed from 1.13.4\n#   This means for the sake of this download we need to get \n#   the RPM's from the old location, 1.13.4\nENV HYRAX_VERSION=\"1.15\"\nENV LIBDAP_VERSION=\"3.20.1-1\"\nENV BES_VERSION=\"3.20.1-1\"\nENV OLFS_VERSION=\"1.18.1\"\n#   RELEASE URLs\n#   https://www.opendap.org/pub/binary/hyrax-1.15/centos-7.x/libdap-3.20.1-1.el7.x86_64.rpm\n#   https://www.opendap.org/pub/binary/hyrax-1.15/centos-7.x/bes-3.20.1-1.static.el7.x86_64.rpm\nENV LIBDAP_RPM=\"https://www.opendap.org/pub/binary/hyrax-${HYRAX_VERSION}/centos-7.x/libdap-${LIBDAP_VERSION}.el7.x86_64.rpm\"\nENV BES_RPM=\"https://www.opendap.org/pub/binary/hyrax-${HYRAX_VERSION}/centos-7.x/bes-${BES_VERSION}.static.el7.x86_64.rpm\"\nENV OLFS_WAR_URL=\"https://www.opendap.org/pub/olfs/olfs-${OLFS_VERSION}-webapp.tgz\"\n#  ##############################################################\n#   Retrieve, verify, and install Libdap\nRUN set -e \\\n && echo \"Retrieving, verifying, and installing libdap. rpm: $LIBDAP_RPM\" \\\n && curl -s $LIBDAP_RPM > ./libdap.rpm \\\n && curl -s $LIBDAP_RPM.sig > ./libdap.rpm.sig \\\n && gpg -v --verify ./libdap.rpm.sig ./libdap.rpm \\\n && ls -l ./libdap* \\\n && yum -y install ./libdap.rpm \\\n && rm -f libdap.*\n#   gpg --keyserver certserver.pgp.com --recv-keys \n#  ##############################################################\n#   Retrieve, verify, and install the BES\nRUN set -e \\\n && echo \"Retrieving, verifying, and installing besd. rpm: $BES_RPM\" \\\n && curl -s ${BES_RPM} > ./bes.rpm \\\n && curl -s ${BES_RPM}.sig > ./bes.rpm.sig \\\n && gpg -v --verify ./bes.rpm.sig ./bes.rpm \\\n && ls -l ./bes* \\\n && yum -y install ./bes.rpm \\\n && rm -f bes.*\nRUN echo \"besdaemon is here: \"`which besdaemon `\n#  ##############################################################\n#   Retrieve, verify, and install the OLFS web application\nRUN set -e \\\n && echo \"Retrieving And Installing OLFS-${OLFS_VERSION}\" \\\n && curl -sfSL ${OLFS_WAR_URL} > olfs-${OLFS_VERSION}.tgz \\\n && curl -sfSL ${OLFS_WAR_URL}.sig > olfs-${OLFS_VERSION}.tgz.sig \\\n && echo \"Verifying tarball...\" \\\n && gpg --verify olfs-${OLFS_VERSION}.tgz.sig olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking tarball...\" \\\n && tar -C /dev/shm -xzf olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking warfile...\" \\\n && unzip -o /dev/shm/olfs-${OLFS_VERSION}-webapp/opendap.war -d ${CATALINA_HOME}/webapps/opendap/ \\\n && echo \"Cleaning up.\" \\\n && rm -rf /dev/shm/* olfs-${OLFS_VERSION}.tgz*\n#   Fix ownership and access permissions\nRUN set -e \\\n && mkdir -p ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs \\\n && chown -R tomcat:tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs \\\n && chmod 700 ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs\n#  ##############################################################\n#   retrieve and install the ncWMS web application\n#\n#   This is ncWMS-2.2.2\nENV NCWMS_WAR_URL=\"http://search.maven.org/remotecontent?filepath=uk/ac/rdg/resc/ncWMS/2.2.2/ncWMS-2.2.2.war\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"Installing ncWMS...\" ;curl -sfSL ${NCWMS_WAR_URL} -o /dev/shm/ncWMS.war ;unzip -o /dev/shm/ncWMS.war -d ${CATALINA_HOME}/webapps/ncWMS2/ ;rm -rf /dev/shm/* ; else echo \"ncWMS will NOT be installed.\" ; fi\n#   set a default ncWMS admin if DEVELOPER_MODE is enabled.\nRUN set -e \\\n && if [ ${DEVELOPER_MODE} = \"true\" ] \\\n && [ $USE_NCWMS = \"true\" ] ; then echo \"DEVELOPER MODE: Adding ncWMS admin credentials\" ;sed -i 'sX</tomcat-users>X<role rolename=\"ncWMS-admin\"/> <user username=\"admin\" password=\"admin\" roles=\"ncWMS-admin\"/> </tomcat-users>X' ${CATALINA_HOME}/conf/tomcat-users.xml ; else echo \"No ncWMS admin credentials installed.\" ; fi\n#\n#   make ncWMS work without further configuration \n#   @TODO We will need to adjust this target if we \n#   decide to run as a different (not root) user.\nCOPY ncWMS_config.xml /root/.ncWMS2/config.xml\nRUN chmod +r /root/.ncWMS2/config.xml\nCOPY olfs_viewers.xml /tmp/olfs_viewers.xml\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then mv /tmp/olfs_viewers.xml ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/viewers.xml ; else echo \"Skipping OLFS/ncWMS confguration installation.\" ; fi\n#  ##############################################################\nCOPY entrypoint.sh /\nRUN set -e \\\n && chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nEXPOSE 8080/tcp\nEXPOSE 8443/tcp\nEXPOSE 10022/tcp\nEXPOSE 11002/tcp\n#   can't use USER with entrypoint that needs root\n#   use gosu or, as done, enable bes user write so the entrypoint does not need root\nRUN set -e \\\n && chown -R bes /etc/bes\nUSER root\nCMD [\"-\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##############################################################################################\n#  \n#  Dockerfile for single container Hyrax\n#\n#\n#  Some shell state reference:\n#  set -f # \"set -o noglob\"  Disable file name generation using metacharacters (globbing).\n#  set -v # \"set -o verbose\" Prints shell input lines as they are read.\n#  set -x # \"set -o xtrace\"  Print command traces before executing command.\n#  set -e #  Exit on error.\n#\n#  In general use \"set -e\" when running commands that matter and don't use\n#  it for debugging stuff.\n#\n#  Set one or more individual labels\nFROM centos:7\nLABEL vendor=\"OPeNDAP Incorporated\"\nLABEL org.opendap.hyrax.version=\"1.15.1\"\n#  24 September 2018\nLABEL org.opendap.hyrax.release-date=\"2018-11-26\"\nLABEL org.opendap.hyrax.version.is-production=\"true\"\nMAINTAINER support@opendap.org\nUSER root\n#\n#  The --build-arg USE_NCWMS can be set to \"true\" in order to \n#  add the ncWMS application to the build.\nARG USE_NCWMS\nENV USE_NCWMS=\"${USE_NCWMS:-\\\"false\\\"}\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"NCWMS: ENABLED\" ; else echo \"NCWMS: DISABLED\" ; fi\nARG DEVELOPER_MODE\nENV DEVELOPER_MODE=\"${DEVELOPER_MODE:-\\\"false\\\"}\"\nRUN set -e \\\n && if [ $DEVELOPER_MODE = \"true\" ] ; then echo \"DEVELOPER_MODE: ENABLED\" ; else echo \"DEVELOPER_MODE: DISABLED\" ; fi\n#  Update and install the needful.\nRUN set -e \\\n && yum -y install tomcat unzip which \\\n && yum -y update \\\n && yum clean all\n#  Tomcat environment (Tomcat installed above by via yum)\nENV CATALINA_HOME=\"/usr/share/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN echo \"CATALINA_HOME: $CATALINA_HOME\"\n#  Installs the OPeNDAP security public key.\n#  TODO: We should get this from a well known key-server instead.\nRUN echo \"Adding OPeNDAP Public Security Key\"\nENV OPENDAP_PUBLIC_KEY_FILE=\"security_at_opendap.org.pub.asc\"\nENV OPENDAP_PUBLIC_KEY_URL=\"https://www.opendap.org/${OPENDAP_PUBLIC_KEY_FILE}\"\nRUN set -e \\\n && curl -s $OPENDAP_PUBLIC_KEY_URL > $OPENDAP_PUBLIC_KEY_FILE \\\n && gpg --import $OPENDAP_PUBLIC_KEY_FILE\n#  HYRAX VERSION INFO\n#  Note: for Hyrax-1.13.5 only the OLFS changed from 1.13.4\n#  This means for the sake of this download we need to get \n#  the RPM's from the old location, 1.13.4\nENV HYRAX_VERSION=\"1.15\"\nENV LIBDAP_VERSION=\"3.20.1-1\"\nENV BES_VERSION=\"3.20.1-1\"\nENV OLFS_VERSION=\"1.18.1\"\n#  RELEASE URLs\n#  https://www.opendap.org/pub/binary/hyrax-1.15/centos-7.x/libdap-3.20.1-1.el7.x86_64.rpm\n#  https://www.opendap.org/pub/binary/hyrax-1.15/centos-7.x/bes-3.20.1-1.static.el7.x86_64.rpm\nENV LIBDAP_RPM=\"https://www.opendap.org/pub/binary/hyrax-${HYRAX_VERSION}/centos-7.x/libdap-${LIBDAP_VERSION}.el7.x86_64.rpm\"\nENV BES_RPM=\"https://www.opendap.org/pub/binary/hyrax-${HYRAX_VERSION}/centos-7.x/bes-${BES_VERSION}.static.el7.x86_64.rpm\"\nENV OLFS_WAR_URL=\"https://www.opendap.org/pub/olfs/olfs-${OLFS_VERSION}-webapp.tgz\"\n# ##############################################################\n#  Retrieve, verify, and install Libdap\nRUN set -e \\\n && echo \"Retrieving, verifying, and installing libdap. rpm: $LIBDAP_RPM\" \\\n && curl -s $LIBDAP_RPM > ./libdap.rpm \\\n && curl -s $LIBDAP_RPM.sig > ./libdap.rpm.sig \\\n && gpg -v --verify ./libdap.rpm.sig ./libdap.rpm \\\n && ls -l ./libdap* \\\n && yum -y install ./libdap.rpm \\\n && rm -f libdap.*\n#  gpg --keyserver certserver.pgp.com --recv-keys \n# ##############################################################\n#  Retrieve, verify, and install the BES\nRUN set -e \\\n && echo \"Retrieving, verifying, and installing besd. rpm: $BES_RPM\" \\\n && curl -s ${BES_RPM} > ./bes.rpm \\\n && curl -s ${BES_RPM}.sig > ./bes.rpm.sig \\\n && gpg -v --verify ./bes.rpm.sig ./bes.rpm \\\n && ls -l ./bes* \\\n && yum -y install ./bes.rpm \\\n && rm -f bes.*\nRUN echo \"besdaemon is here: \"`which besdaemon `\n# ##############################################################\n#  Retrieve, verify, and install the OLFS web application\nRUN set -e \\\n && echo \"Retrieving And Installing OLFS-${OLFS_VERSION}\" \\\n && curl -sfSL ${OLFS_WAR_URL} > olfs-${OLFS_VERSION}.tgz \\\n && curl -sfSL ${OLFS_WAR_URL}.sig > olfs-${OLFS_VERSION}.tgz.sig \\\n && echo \"Verifying tarball...\" \\\n && gpg --verify olfs-${OLFS_VERSION}.tgz.sig olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking tarball...\" \\\n && tar -C /dev/shm -xzf olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking warfile...\" \\\n && unzip -o /dev/shm/olfs-${OLFS_VERSION}-webapp/opendap.war -d ${CATALINA_HOME}/webapps/opendap/ \\\n && echo \"Cleaning up.\" \\\n && rm -rf /dev/shm/* olfs-${OLFS_VERSION}.tgz*\n#  Fix ownership and access permissions\nRUN set -e \\\n && mkdir -p ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs \\\n && chown -R tomcat:tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs \\\n && chmod 700 ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs\n# ##############################################################\n#  retrieve and install the ncWMS web application\n#\n#  This is ncWMS-2.2.2\nENV NCWMS_WAR_URL=\"http://search.maven.org/remotecontent?filepath=uk/ac/rdg/resc/ncWMS/2.2.2/ncWMS-2.2.2.war\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"Installing ncWMS...\" ;curl -sfSL ${NCWMS_WAR_URL} -o /dev/shm/ncWMS.war ;unzip -o /dev/shm/ncWMS.war -d ${CATALINA_HOME}/webapps/ncWMS2/ ;rm -rf /dev/shm/* ; else echo \"ncWMS will NOT be installed.\" ; fi\n#  set a default ncWMS admin if DEVELOPER_MODE is enabled.\nRUN set -e \\\n && if [ ${DEVELOPER_MODE} = \"true\" ] \\\n && [ $USE_NCWMS = \"true\" ] ; then echo \"DEVELOPER MODE: Adding ncWMS admin credentials\" ;sed -i 'sX</tomcat-users>X<role rolename=\"ncWMS-admin\"/> <user username=\"admin\" password=\"admin\" roles=\"ncWMS-admin\"/> </tomcat-users>X' ${CATALINA_HOME}/conf/tomcat-users.xml ; else echo \"No ncWMS admin credentials installed.\" ; fi\n#\n#  make ncWMS work without further configuration \n#  @TODO We will need to adjust this target if we \n#  decide to run as a different (not root) user.\nCOPY ncWMS_config.xml /root/.ncWMS2/config.xml\nRUN chmod +r /root/.ncWMS2/config.xml\nCOPY olfs_viewers.xml /tmp/olfs_viewers.xml\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then mv /tmp/olfs_viewers.xml ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/viewers.xml ; else echo \"Skipping OLFS/ncWMS confguration installation.\" ; fi\n# ##############################################################\nCOPY entrypoint.sh /\nRUN set -e \\\n && chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nEXPOSE 8080/tcp\nEXPOSE 8443/tcp\nEXPOSE 10022/tcp\nEXPOSE 11002/tcp\n#  can't use USER with entrypoint that needs root\n#  use gosu or, as done, enable bes user write so the entrypoint does not need root\nRUN set -e \\\n && chown -R bes /etc/bes\nUSER root\nCMD [\"-\"]\n","injectedSmells":[],"originalDockerfileHash":"743fb8a9ca77beda67216c3c14d76df6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##############################################################################################\n#   \n#   Dockerfile for single container Hyrax\n#\n#\n#   Some shell state reference:\n#   set -f # \"set -o noglob\"  Disable file name generation using metacharacters (globbing).\n#   set -v # \"set -o verbose\" Prints shell input lines as they are read.\n#   set -x # \"set -o xtrace\"  Print command traces before executing command.\n#   set -e #  Exit on error.\n#\n#   In general use \"set -e\" when running commands that matter and don't use\n#   it for debugging stuff.\n#\n#   Set one or more individual labels\nFROM centos:7\nLABEL vendor=\"OPeNDAP Incorporated\"\nLABEL org.opendap.hyrax.version=\"1.15.1\"\n#   24 September 2018\nLABEL org.opendap.hyrax.release-date=\"2018-11-26\"\nLABEL org.opendap.hyrax.version.is-production=\"true\"\nMAINTAINER support@opendap.org\nUSER root\n#\n#   The --build-arg USE_NCWMS can be set to \"true\" in order to \n#   add the ncWMS application to the build.\nARG USE_NCWMS\nENV USE_NCWMS=\"${USE_NCWMS:-\\\"false\\\"}\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"NCWMS: ENABLED\" ; else echo \"NCWMS: DISABLED\" ; fi\nARG DEVELOPER_MODE\nENV DEVELOPER_MODE=\"${DEVELOPER_MODE:-\\\"false\\\"}\"\nRUN set -e \\\n && if [ $DEVELOPER_MODE = \"true\" ] ; then echo \"DEVELOPER_MODE: ENABLED\" ; else echo \"DEVELOPER_MODE: DISABLED\" ; fi\n#   Update and install the needful.\nRUN set -e \\\n && yum -y install tomcat unzip which \\\n && yum -y update \\\n && yum clean all\n#   Tomcat environment (Tomcat installed above by via yum)\nENV CATALINA_HOME=\"/usr/share/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN echo \"CATALINA_HOME: $CATALINA_HOME\"\n#   Installs the OPeNDAP security public key.\n#   TODO: We should get this from a well known key-server instead.\nRUN echo \"Adding OPeNDAP Public Security Key\"\nENV OPENDAP_PUBLIC_KEY_FILE=\"security_at_opendap.org.pub.asc\"\nENV OPENDAP_PUBLIC_KEY_URL=\"https://www.opendap.org/${OPENDAP_PUBLIC_KEY_FILE}\"\nRUN set -e \\\n && curl -s $OPENDAP_PUBLIC_KEY_URL > $OPENDAP_PUBLIC_KEY_FILE \\\n && gpg --import $OPENDAP_PUBLIC_KEY_FILE\n#   HYRAX VERSION INFO\n#   Note: for Hyrax-1.13.5 only the OLFS changed from 1.13.4\n#   This means for the sake of this download we need to get \n#   the RPM's from the old location, 1.13.4\nENV HYRAX_VERSION=\"1.15\"\nENV LIBDAP_VERSION=\"3.20.1-1\"\nENV BES_VERSION=\"3.20.1-1\"\nENV OLFS_VERSION=\"1.18.1\"\n#   RELEASE URLs\n#   https://www.opendap.org/pub/binary/hyrax-1.15/centos-7.x/libdap-3.20.1-1.el7.x86_64.rpm\n#   https://www.opendap.org/pub/binary/hyrax-1.15/centos-7.x/bes-3.20.1-1.static.el7.x86_64.rpm\nENV LIBDAP_RPM=\"https://www.opendap.org/pub/binary/hyrax-${HYRAX_VERSION}/centos-7.x/libdap-${LIBDAP_VERSION}.el7.x86_64.rpm\"\nENV BES_RPM=\"https://www.opendap.org/pub/binary/hyrax-${HYRAX_VERSION}/centos-7.x/bes-${BES_VERSION}.static.el7.x86_64.rpm\"\nENV OLFS_WAR_URL=\"https://www.opendap.org/pub/olfs/olfs-${OLFS_VERSION}-webapp.tgz\"\n#  ##############################################################\n#   Retrieve, verify, and install Libdap\nRUN set -e \\\n && echo \"Retrieving, verifying, and installing libdap. rpm: $LIBDAP_RPM\" \\\n && curl -s $LIBDAP_RPM > ./libdap.rpm \\\n && curl -s $LIBDAP_RPM.sig > ./libdap.rpm.sig \\\n && gpg -v --verify ./libdap.rpm.sig ./libdap.rpm \\\n && ls -l ./libdap* \\\n && yum -y install ./libdap.rpm \\\n && rm -f libdap.*\n#   gpg --keyserver certserver.pgp.com --recv-keys \n#  ##############################################################\n#   Retrieve, verify, and install the BES\nRUN set -e \\\n && echo \"Retrieving, verifying, and installing besd. rpm: $BES_RPM\" \\\n && curl -s ${BES_RPM} > ./bes.rpm \\\n && curl -s ${BES_RPM}.sig > ./bes.rpm.sig \\\n && gpg -v --verify ./bes.rpm.sig ./bes.rpm \\\n && ls -l ./bes* \\\n && yum -y install ./bes.rpm \\\n && rm -f bes.*\nRUN echo \"besdaemon is here: \"`which besdaemon `\n#  ##############################################################\n#   Retrieve, verify, and install the OLFS web application\nRUN set -e \\\n && echo \"Retrieving And Installing OLFS-${OLFS_VERSION}\" \\\n && curl -sfSL ${OLFS_WAR_URL} > olfs-${OLFS_VERSION}.tgz \\\n && curl -sfSL ${OLFS_WAR_URL}.sig > olfs-${OLFS_VERSION}.tgz.sig \\\n && echo \"Verifying tarball...\" \\\n && gpg --verify olfs-${OLFS_VERSION}.tgz.sig olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking tarball...\" \\\n && tar -C /dev/shm -xzf olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking warfile...\" \\\n && unzip -o /dev/shm/olfs-${OLFS_VERSION}-webapp/opendap.war -d ${CATALINA_HOME}/webapps/opendap/ \\\n && echo \"Cleaning up.\" \\\n && rm -rf /dev/shm/* olfs-${OLFS_VERSION}.tgz*\n#   Fix ownership and access permissions\nRUN set -e \\\n && mkdir -p ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs \\\n && chown -R tomcat:tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs \\\n && chmod 700 ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs\n#  ##############################################################\n#   retrieve and install the ncWMS web application\n#\n#   This is ncWMS-2.2.2\nENV NCWMS_WAR_URL=\"http://search.maven.org/remotecontent?filepath=uk/ac/rdg/resc/ncWMS/2.2.2/ncWMS-2.2.2.war\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"Installing ncWMS...\" ;curl -sfSL ${NCWMS_WAR_URL} -o /dev/shm/ncWMS.war ;unzip -o /dev/shm/ncWMS.war -d ${CATALINA_HOME}/webapps/ncWMS2/ ;rm -rf /dev/shm/* ; else echo \"ncWMS will NOT be installed.\" ; fi\n#   set a default ncWMS admin if DEVELOPER_MODE is enabled.\nRUN set -e \\\n && if [ ${DEVELOPER_MODE} = \"true\" ] \\\n && [ $USE_NCWMS = \"true\" ] ; then echo \"DEVELOPER MODE: Adding ncWMS admin credentials\" ;sed -i 'sX</tomcat-users>X<role rolename=\"ncWMS-admin\"/> <user username=\"admin\" password=\"admin\" roles=\"ncWMS-admin\"/> </tomcat-users>X' ${CATALINA_HOME}/conf/tomcat-users.xml ; else echo \"No ncWMS admin credentials installed.\" ; fi\n#\n#   make ncWMS work without further configuration \n#   @TODO We will need to adjust this target if we \n#   decide to run as a different (not root) user.\nCOPY ncWMS_config.xml /root/.ncWMS2/config.xml\nRUN chmod +r /root/.ncWMS2/config.xml\nCOPY olfs_viewers.xml /tmp/olfs_viewers.xml\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then mv /tmp/olfs_viewers.xml ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/viewers.xml ; else echo \"Skipping OLFS/ncWMS confguration installation.\" ; fi\n#  ##############################################################\nCOPY entrypoint.sh /\nRUN set -e \\\n && chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nEXPOSE 8080/tcp\nEXPOSE 8443/tcp\nEXPOSE 10022/tcp\nEXPOSE 11002/tcp\n#   can't use USER with entrypoint that needs root\n#   use gosu or, as done, enable bes user write so the entrypoint does not need root\nRUN set -e \\\n && chown -R bes /etc/bes\nUSER root\nCMD [\"-\"]\n","originalDockerfileUglifiedHash":"a473094fe575f679e8f9ce0c94c73d1e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5c90ef02c076b302e2718ffe73d8784db1dd94dd.dockerfile"}