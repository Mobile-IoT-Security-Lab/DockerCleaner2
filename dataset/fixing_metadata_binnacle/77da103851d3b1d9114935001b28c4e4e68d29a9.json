{"seed":1264041758,"processedDockerfileHash":"c950e65df9119addf816fa6eaaa8bb20","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER TuRzAm\n#   Var for first config\n#   Server Name\nENV SESSIONNAME=\"\\\"Ark Docker\\\"\"\n#   Map name\nENV SERVERMAP=\"\\\"TheIsland\\\"\"\n#   Server password\nENV SERVERPASSWORD=\"\\\"\n#   Admin password\nENV ADMINPASSWORD=\"\\\"adminpassword\\\"\"\n#   Nb Players\nENV NBPLAYERS=\"70\"\n#   If the server is updating when start with docker start\nENV UPDATEONSTART=\"1\"\n#   if the server is backup when start with docker start\nENV BACKUPONSTART=\"1\"\n#    Tag on github for ark server tools\nENV GIT_TAG=\"v1.5\"\n#   Server PORT (you can't remap with docker, it doesn't work)\nENV SERVERPORT=\"27015\"\n#   Steam port (you can't remap with docker, it doesn't work)\nENV STEAMPORT=\"7778\"\n#   if the server should backup after stopping\nENV BACKUPONSTOP=\"0\"\n#   If the server warn the players before stopping\nENV WARNONSTOP=\"0\"\n#   UID of the user steam\nENV UID=\"1000\"\n#   GID of the user steam\nENV GID=\"1000\"\n#   Install dependencies \nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 lib32gcc1=1:4.9.3-0ubuntu4 lsof=4.86+dfsg-1ubuntu2 git=1:1.9.1-1ubuntu0.10 -y\n#   Enable passwordless sudo for users under the \"sudo\" group\nRUN sed -i.bkp -e 's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers /etc/sudoers\n#   Run commands as the steam user\nRUN adduser --disabled-login --shell /bin/bash --gecos \"\" steam\n#   Add to sudo group\nRUN usermod -a -G sudo steam\n#   Copy & rights to folders\nCOPY run.sh /home/steam/run.sh\nCOPY user.sh /home/steam/user.sh\nCOPY crontab /home/steam/crontab\nCOPY arkmanager-user.cfg /home/steam/arkmanager.cfg\nRUN touch /root/.bash_profile\nRUN chmod 777 /home/steam/run.sh\nRUN chmod 777 /home/steam/user.sh\nRUN mkdir /ark\n#   We use the git method, because api github has a limit ;)\nRUN git clone https://github.com/FezVrasta/ark-server-tools.git /home/steam/ark-server-tools\nWORKDIR /home/steam/ark-server-tools/\nRUN git checkout $GIT_TAG\n#   Install \nWORKDIR /home/steam/ark-server-tools/tools\nRUN chmod +x install.sh\nRUN ./install.sh steam\n#   Allow crontab to call arkmanager\nRUN ln -s /usr/local/bin/arkmanager /usr/bin/arkmanager\n#   Define default config file in /etc/arkmanager\nCOPY arkmanager-system.cfg /etc/arkmanager/arkmanager.cfg\n#   Define default config file in /etc/arkmanager\nCOPY instance.cfg /etc/arkmanager/instances/main.cfg\nRUN chown steam -R /ark \\\n && chmod 755 -R /ark\n#  USER steam \n#   download steamcmd\nRUN mkdir /home/steam/steamcmd \\\n && cd /home/steam/steamcmd \\\n && curl http://media.steampowered.com/installer/steamcmd_linux.tar.gz | tar -vxz\n#   First run is on anonymous to download the app\n#   We can't download from docker hub anymore -_-\n#  RUN /home/steam/steamcmd/steamcmd.sh +login anonymous +quit\nEXPOSE ${STEAMPORT} 32330/tcp ${SERVERPORT}\n#   Add UDP\nEXPOSE ${STEAMPORT}/udp ${SERVERPORT}/udp\nVOLUME /ark \n#   Change the working directory to /arkd\nWORKDIR /ark\n#   Update game launch the game.\nENTRYPOINT [\"/home/steam/user.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER TuRzAm\n#  Var for first config\n#  Server Name\nENV SESSIONNAME=\"\\\"Ark Docker\\\"\"\n#  Map name\nENV SERVERMAP=\"\\\"TheIsland\\\"\"\n#  Server password\nENV SERVERPASSWORD=\"\"\\\"\"\n#  Admin password\nENV ADMINPASSWORD=\"\\\"adminpassword\\\"\"\n#  Nb Players\nENV NBPLAYERS=\"70\"\n#  If the server is updating when start with docker start\nENV UPDATEONSTART=\"1\"\n#  if the server is backup when start with docker start\nENV BACKUPONSTART=\"1\"\n#   Tag on github for ark server tools\nENV GIT_TAG=\"v1.5\"\n#  Server PORT (you can't remap with docker, it doesn't work)\nENV SERVERPORT=\"27015\"\n#  Steam port (you can't remap with docker, it doesn't work)\nENV STEAMPORT=\"7778\"\n#  if the server should backup after stopping\nENV BACKUPONSTOP=\"0\"\n#  If the server warn the players before stopping\nENV WARNONSTOP=\"0\"\n#  UID of the user steam\nENV UID=\"1000\"\n#  GID of the user steam\nENV GID=\"1000\"\n#  Install dependencies \nRUN apt-get update \\\n && apt-get install curl lib32gcc1 lsof git -y\n#  Enable passwordless sudo for users under the \"sudo\" group\nRUN sed -i.bkp -e 's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers /etc/sudoers\n#  Run commands as the steam user\nRUN adduser --disabled-login --shell /bin/bash --gecos \"\" steam\n#  Add to sudo group\nRUN usermod -a -G sudo steam\n#  Copy & rights to folders\nCOPY run.sh /home/steam/run.sh\nCOPY user.sh /home/steam/user.sh\nCOPY crontab /home/steam/crontab\nCOPY arkmanager-user.cfg /home/steam/arkmanager.cfg\nRUN touch /root/.bash_profile\nRUN chmod 777 /home/steam/run.sh\nRUN chmod 777 /home/steam/user.sh\nRUN mkdir /ark\n#  We use the git method, because api github has a limit ;)\nRUN git clone https://github.com/FezVrasta/ark-server-tools.git /home/steam/ark-server-tools\nWORKDIR /home/steam/ark-server-tools/\nRUN git checkout $GIT_TAG\n#  Install \nWORKDIR /home/steam/ark-server-tools/tools\nRUN chmod +x install.sh\nRUN ./install.sh steam\n#  Allow crontab to call arkmanager\nRUN ln -s /usr/local/bin/arkmanager /usr/bin/arkmanager\n#  Define default config file in /etc/arkmanager\nCOPY arkmanager-system.cfg /etc/arkmanager/arkmanager.cfg\n#  Define default config file in /etc/arkmanager\nCOPY instance.cfg /etc/arkmanager/instances/main.cfg\nRUN chown steam -R /ark \\\n && chmod 755 -R /ark\n# USER steam \n#  download steamcmd\nRUN mkdir /home/steam/steamcmd \\\n && cd /home/steam/steamcmd \\\n && curl http://media.steampowered.com/installer/steamcmd_linux.tar.gz | tar -vxz\n#  First run is on anonymous to download the app\n#  We can't download from docker hub anymore -_-\n# RUN /home/steam/steamcmd/steamcmd.sh +login anonymous +quit\nEXPOSE ${STEAMPORT} 32330/tcp ${SERVERPORT}\n#  Add UDP\nEXPOSE ${STEAMPORT}/udp ${SERVERPORT}/udp\nVOLUME /ark \n#  Change the working directory to /arkd\nWORKDIR /ark\n#  Update game launch the game.\nENTRYPOINT [\"/home/steam/user.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"fc5eb630a04177dcc8e1f4a94b57bf1e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER TuRzAm\n#   Var for first config\n#   Server Name\nENV SESSIONNAME=\"\\\"Ark Docker\\\"\"\n#   Map name\nENV SERVERMAP=\"\\\"TheIsland\\\"\"\n#   Server password\nENV SERVERPASSWORD=\"\\\"\n#   Admin password\nENV ADMINPASSWORD=\"\\\"adminpassword\\\"\"\n#   Nb Players\nENV NBPLAYERS=\"70\"\n#   If the server is updating when start with docker start\nENV UPDATEONSTART=\"1\"\n#   if the server is backup when start with docker start\nENV BACKUPONSTART=\"1\"\n#    Tag on github for ark server tools\nENV GIT_TAG=\"v1.5\"\n#   Server PORT (you can't remap with docker, it doesn't work)\nENV SERVERPORT=\"27015\"\n#   Steam port (you can't remap with docker, it doesn't work)\nENV STEAMPORT=\"7778\"\n#   if the server should backup after stopping\nENV BACKUPONSTOP=\"0\"\n#   If the server warn the players before stopping\nENV WARNONSTOP=\"0\"\n#   UID of the user steam\nENV UID=\"1000\"\n#   GID of the user steam\nENV GID=\"1000\"\n#   Install dependencies \nRUN apt-get update \\\n && apt-get install curl lib32gcc1 lsof git -y\n#   Enable passwordless sudo for users under the \"sudo\" group\nRUN sed -i.bkp -e 's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers /etc/sudoers\n#   Run commands as the steam user\nRUN adduser --disabled-login --shell /bin/bash --gecos \"\" steam\n#   Add to sudo group\nRUN usermod -a -G sudo steam\n#   Copy & rights to folders\nCOPY run.sh /home/steam/run.sh\nCOPY user.sh /home/steam/user.sh\nCOPY crontab /home/steam/crontab\nCOPY arkmanager-user.cfg /home/steam/arkmanager.cfg\nRUN touch /root/.bash_profile\nRUN chmod 777 /home/steam/run.sh\nRUN chmod 777 /home/steam/user.sh\nRUN mkdir /ark\n#   We use the git method, because api github has a limit ;)\nRUN git clone https://github.com/FezVrasta/ark-server-tools.git /home/steam/ark-server-tools\nWORKDIR /home/steam/ark-server-tools/\nRUN git checkout $GIT_TAG\n#   Install \nWORKDIR /home/steam/ark-server-tools/tools\nRUN chmod +x install.sh\nRUN ./install.sh steam\n#   Allow crontab to call arkmanager\nRUN ln -s /usr/local/bin/arkmanager /usr/bin/arkmanager\n#   Define default config file in /etc/arkmanager\nCOPY arkmanager-system.cfg /etc/arkmanager/arkmanager.cfg\n#   Define default config file in /etc/arkmanager\nCOPY instance.cfg /etc/arkmanager/instances/main.cfg\nRUN chown steam -R /ark \\\n && chmod 755 -R /ark\n#  USER steam \n#   download steamcmd\nRUN mkdir /home/steam/steamcmd \\\n && cd /home/steam/steamcmd \\\n && curl http://media.steampowered.com/installer/steamcmd_linux.tar.gz | tar -vxz\n#   First run is on anonymous to download the app\n#   We can't download from docker hub anymore -_-\n#  RUN /home/steam/steamcmd/steamcmd.sh +login anonymous +quit\nEXPOSE ${STEAMPORT} 32330/tcp ${SERVERPORT}\n#   Add UDP\nEXPOSE ${STEAMPORT}/udp ${SERVERPORT}/udp\nVOLUME /ark \n#   Change the working directory to /arkd\nWORKDIR /ark\n#   Update game launch the game.\nENTRYPOINT [\"/home/steam/user.sh\"]\n","originalDockerfileUglifiedHash":"d37a316da92db4db8ed78be177b48c48","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/77da103851d3b1d9114935001b28c4e4e68d29a9.dockerfile"}