{"seed":1245566190,"processedDockerfileHash":"565063e323ae7622db753fb5af551016","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nENV release_name=\"xenial\"\nENV etcd_version=\"2.3.5\"\nENV redis_version=\"3.0.7\"\nENV ocaml_version=\"4.07.1+default-unsafe-string\"\n#   force our apt to use look at mirrors (by prepending a mirrors line)\n#   RUN sed 's@archive.ubuntu.com@ubuntu.mirror.atratoip.net@' -i /etc/apt/sources.list\nRUN sed -i \"1s;^;deb mirror://mirrors.ubuntu.com/mirrors.txt ${release_name}-updates main restricted universe multiverse\\n;\" /etc/apt/sources.list\nRUN sed -i \"1s;^;deb mirror://mirrors.ubuntu.com/mirrors.txt ${release_name} main restricted universe multiverse\\n;\" /etc/apt/sources.list\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential m4 apt-utils libffi-dev libssl-dev libbz2-dev libgmp3-dev libev-dev libsnappy-dev libxen-dev help2man pkg-config time aspcud wget curl darcs git unzip automake python-dev python-pip debhelper psmisc sudo libtool iptables net-tools ncurses-dev tzdata librdmacm-dev protobuf-compiler socat\nARG HOST_UID\nRUN useradd jenkins -u $HOST_UID -g root --create-home\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" > /etc/sudoers.d/jenkins\nRUN pip install pip==23.1 --upgrade\nRUN pip install fabric==3.0.0 junit-xml==1.9 nose==1.3.7 simplejson==3.19.1 python-etcd==0.4.5 --disable-pip-version-check\n#   Install etcd:\nRUN wget -q https://github.com/coreos/etcd/releases/download/v${etcd_version}/etcd-v${etcd_version}-linux-amd64.tar.gz -O - | tar zxf - \\\n && cp etcd-v${etcd_version}-linux-amd64/etcd /usr/bin \\\n && cp etcd-v${etcd_version}-linux-amd64/etcdctl /usr/bin \\\n && rm -rf etcd-*\n#   Install redis:\nRUN wget -q http://download.redis.io/releases/redis-${redis_version}.tar.gz -O - | tar zxf - \\\n && make -j$( nproc 2> /dev/null || echo 1 ;) -C redis-${redis_version} \\\n && cp redis-${redis_version}/src/redis-server /usr/bin \\\n && cp redis-${redis_version}/src/redis-cli /usr/bin \\\n && rm -rf redis-${redis_version}\nRUN wget https://github.com/ocaml/opam/releases/download/2.0.3/opam-2.0.3-x86_64-linux \\\n && mv opam-2.0.3-x86_64-linux /usr/bin/opam \\\n && chmod a+x /usr/bin/opam\nUSER jenkins\nENV OPAMROOT=\"/home/jenkins/OPAM\"\n#   The special variable NO_PROXY contains host and port for accessing\n#   the hosts SSH_AUTH_SOCK\nENV SSH_AUTH_SOCK=\"/tmp/auth.sock\"\nRUN mkdir /home/jenkins/.ssh\nRUN echo \"\\nHost *\\n StrictHostKeyChecking=no\" >> /home/jenkins/.ssh/config\nENV opam_env=\"opam config env --root=${OPAMROOT}\"\nRUN opam init --root ${OPAMROOT} --compiler=${ocaml_version} --disable-sandboxing\nCOPY opam.switch opam.switch\nCOPY opam-repository ovs-opam-repository\nRUN socat UNIX-LISTEN:${SSH_AUTH_SOCK},unlink-early,mode=777,fork TCP:${NO_PROXY} &; eval `${opam_env} ` \\\n && opam repo add ovs ovs-opam-repository \\\n && opam update -v\nRUN socat UNIX-LISTEN:${SSH_AUTH_SOCK},unlink-early,mode=777,fork TCP:${NO_PROXY} &; eval `${opam_env} ` \\\n && export OPAMROOT=${OPAMROOT} \\\n && opam switch import opam.switch -y --strict\nRUN eval ${opam_env} \\\n && export OPAMROOT=${OPAMROOT} \\\n && opam list \\\n && opam switch export /home/jenkins/opam.switch.out \\\n && ls \\\n && cat /home/jenkins/opam.switch.out\nRUN opam list \\\n && bash -c 'diff opam.switch <(opam switch export -)'\nENTRYPOINT [\"/home/jenkins/arakoon/docker/docker-entrypoint.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nENV release_name=\"xenial\"\nENV etcd_version=\"2.3.5\"\nENV redis_version=\"3.0.7\"\nENV ocaml_version=\"4.07.1+default-unsafe-string\"\n#  force our apt to use look at mirrors (by prepending a mirrors line)\n#  RUN sed 's@archive.ubuntu.com@ubuntu.mirror.atratoip.net@' -i /etc/apt/sources.list\nRUN sed -i \"1s;^;deb mirror://mirrors.ubuntu.com/mirrors.txt ${release_name}-updates main restricted universe multiverse\\n;\" /etc/apt/sources.list\nRUN sed -i \"1s;^;deb mirror://mirrors.ubuntu.com/mirrors.txt ${release_name} main restricted universe multiverse\\n;\" /etc/apt/sources.list\nRUN apt-get update -y \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential m4 apt-utils libffi-dev libssl-dev libbz2-dev libgmp3-dev libev-dev libsnappy-dev libxen-dev help2man pkg-config time aspcud wget curl darcs git unzip automake python-dev python-pip debhelper psmisc sudo libtool iptables net-tools ncurses-dev tzdata librdmacm-dev protobuf-compiler socat\nARG HOST_UID\nRUN useradd jenkins -u $HOST_UID -g root --create-home\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" > /etc/sudoers.d/jenkins\nRUN pip install pip --upgrade\nRUN pip install fabric junit-xml nose simplejson python-etcd --disable-pip-version-check\n#  Install etcd:\nRUN wget -q https://github.com/coreos/etcd/releases/download/v${etcd_version}/etcd-v${etcd_version}-linux-amd64.tar.gz -O - | tar zxf - \\\n && cp etcd-v${etcd_version}-linux-amd64/etcd /usr/bin \\\n && cp etcd-v${etcd_version}-linux-amd64/etcdctl /usr/bin \\\n && rm -rf etcd-*\n#  Install redis:\nRUN wget -q http://download.redis.io/releases/redis-${redis_version}.tar.gz -O - | tar zxf - \\\n && make -j$( nproc 2> /dev/null || echo 1 ;) -C redis-${redis_version} \\\n && cp redis-${redis_version}/src/redis-server /usr/bin \\\n && cp redis-${redis_version}/src/redis-cli /usr/bin \\\n && rm -rf redis-${redis_version}\nRUN wget https://github.com/ocaml/opam/releases/download/2.0.3/opam-2.0.3-x86_64-linux \\\n && mv opam-2.0.3-x86_64-linux /usr/bin/opam \\\n && chmod a+x /usr/bin/opam\nUSER jenkins\nENV OPAMROOT=\"/home/jenkins/OPAM\"\n#  The special variable NO_PROXY contains host and port for accessing\n#  the hosts SSH_AUTH_SOCK\nENV SSH_AUTH_SOCK=\"/tmp/auth.sock\"\nRUN mkdir /home/jenkins/.ssh\nRUN echo \"\\nHost *\\n StrictHostKeyChecking=no\" >> /home/jenkins/.ssh/config\nENV opam_env=\"opam config env --root=${OPAMROOT}\"\nRUN opam init --root ${OPAMROOT} --compiler=${ocaml_version} --disable-sandboxing\nADD opam.switch opam.switch\nADD opam-repository ovs-opam-repository\nRUN socat UNIX-LISTEN:${SSH_AUTH_SOCK},unlink-early,mode=777,fork TCP:${NO_PROXY} &; eval `${opam_env} ` \\\n && opam repo add ovs ovs-opam-repository \\\n && opam update -v\nRUN socat UNIX-LISTEN:${SSH_AUTH_SOCK},unlink-early,mode=777,fork TCP:${NO_PROXY} &; eval `${opam_env} ` \\\n && export OPAMROOT=${OPAMROOT} \\\n && opam switch import opam.switch -y --strict\nRUN eval ${opam_env} \\\n && export OPAMROOT=${OPAMROOT} \\\n && opam list \\\n && opam switch export /home/jenkins/opam.switch.out \\\n && ls \\\n && cat /home/jenkins/opam.switch.out\nRUN opam list \\\n && bash -c 'diff opam.switch <(opam switch export -)'\nENTRYPOINT [\"/home/jenkins/arakoon/docker/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"ff698221d6fddeee3e7a56cb4a3dd4ee","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nENV release_name=\"xenial\"\nENV etcd_version=\"2.3.5\"\nENV redis_version=\"3.0.7\"\nENV ocaml_version=\"4.07.1+default-unsafe-string\"\n#   force our apt to use look at mirrors (by prepending a mirrors line)\n#   RUN sed 's@archive.ubuntu.com@ubuntu.mirror.atratoip.net@' -i /etc/apt/sources.list\nRUN sed -i \"1s;^;deb mirror://mirrors.ubuntu.com/mirrors.txt ${release_name}-updates main restricted universe multiverse\\n;\" /etc/apt/sources.list\nRUN sed -i \"1s;^;deb mirror://mirrors.ubuntu.com/mirrors.txt ${release_name} main restricted universe multiverse\\n;\" /etc/apt/sources.list\nRUN apt-get update -y \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential m4 apt-utils libffi-dev libssl-dev libbz2-dev libgmp3-dev libev-dev libsnappy-dev libxen-dev help2man pkg-config time aspcud wget curl darcs git unzip automake python-dev python-pip debhelper psmisc sudo libtool iptables net-tools ncurses-dev tzdata librdmacm-dev protobuf-compiler socat\nARG HOST_UID\nRUN useradd jenkins -u $HOST_UID -g root --create-home\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" > /etc/sudoers.d/jenkins\nRUN pip install pip --upgrade\nRUN pip install fabric junit-xml nose simplejson python-etcd --disable-pip-version-check\n#   Install etcd:\nRUN wget -q https://github.com/coreos/etcd/releases/download/v${etcd_version}/etcd-v${etcd_version}-linux-amd64.tar.gz -O - | tar zxf - \\\n && cp etcd-v${etcd_version}-linux-amd64/etcd /usr/bin \\\n && cp etcd-v${etcd_version}-linux-amd64/etcdctl /usr/bin \\\n && rm -rf etcd-*\n#   Install redis:\nRUN wget -q http://download.redis.io/releases/redis-${redis_version}.tar.gz -O - | tar zxf - \\\n && make -j$( nproc 2> /dev/null || echo 1 ;) -C redis-${redis_version} \\\n && cp redis-${redis_version}/src/redis-server /usr/bin \\\n && cp redis-${redis_version}/src/redis-cli /usr/bin \\\n && rm -rf redis-${redis_version}\nRUN wget https://github.com/ocaml/opam/releases/download/2.0.3/opam-2.0.3-x86_64-linux \\\n && mv opam-2.0.3-x86_64-linux /usr/bin/opam \\\n && chmod a+x /usr/bin/opam\nUSER jenkins\nENV OPAMROOT=\"/home/jenkins/OPAM\"\n#   The special variable NO_PROXY contains host and port for accessing\n#   the hosts SSH_AUTH_SOCK\nENV SSH_AUTH_SOCK=\"/tmp/auth.sock\"\nRUN mkdir /home/jenkins/.ssh\nRUN echo \"\\nHost *\\n StrictHostKeyChecking=no\" >> /home/jenkins/.ssh/config\nENV opam_env=\"opam config env --root=${OPAMROOT}\"\nRUN opam init --root ${OPAMROOT} --compiler=${ocaml_version} --disable-sandboxing\nADD opam.switch opam.switch\nADD opam-repository ovs-opam-repository\nRUN socat UNIX-LISTEN:${SSH_AUTH_SOCK},unlink-early,mode=777,fork TCP:${NO_PROXY} &; eval `${opam_env} ` \\\n && opam repo add ovs ovs-opam-repository \\\n && opam update -v\nRUN socat UNIX-LISTEN:${SSH_AUTH_SOCK},unlink-early,mode=777,fork TCP:${NO_PROXY} &; eval `${opam_env} ` \\\n && export OPAMROOT=${OPAMROOT} \\\n && opam switch import opam.switch -y --strict\nRUN eval ${opam_env} \\\n && export OPAMROOT=${OPAMROOT} \\\n && opam list \\\n && opam switch export /home/jenkins/opam.switch.out \\\n && ls \\\n && cat /home/jenkins/opam.switch.out\nRUN opam list \\\n && bash -c 'diff opam.switch <(opam switch export -)'\nENTRYPOINT [\"/home/jenkins/arakoon/docker/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"8db453d8d12dda56f43cff152fc961c8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/704ad8fe900891975dc806a6fc5f937c96a39a9c.dockerfile"}