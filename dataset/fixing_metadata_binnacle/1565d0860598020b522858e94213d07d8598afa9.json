{"seed":762077465,"processedDockerfileHash":"1426ea814e55f260ae2bb10d547855ae","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"FROM nginx:1.15.12-alpine\nEXPOSE 8000/tcp\nCMD [\"/sbin/entrypoint.sh\"]\nARG cachet_ver\nARG archive_url\nENV cachet_ver=\"${cachet_ver:-2.4}\"\nENV archive_url=\"${archive_url:-https://github.com/cachethq/Cachet/archive/${cachet_ver}.tar.gz}\"\nENV COMPOSER_VERSION=\"1.6.3\"\nRUN apk add postgresql-client postgresql mysql-client php7 php7-redis php7-apcu php7-bcmath php7-dom php7-ctype php7-curl php7-fpm php7-fileinfo php7-gd php7-iconv php7-intl php7-json sqlite php7-mbstring php7-mcrypt php7-mysqlnd php7-opcache php7-openssl php7-pdo php7-pdo_mysql php7-pdo_pgsql php7-pdo_sqlite php7-phar php7-posix php7-session php7-sqlite3 php7-simplexml php7-soap php7-xml php7-xmlwriter php7-zip php7-zlib php7-tokenizer wget sqlite git curl bash grep supervisor --no-cache --update\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && ln -sf /dev/stdout /var/log/php7/error.log \\\n && ln -sf /dev/stderr /var/log/php7/error.log\nRUN adduser -S -s /bin/bash -u 1001 -G root www-data\nRUN touch /var/run/nginx.pid \\\n && chown -R www-data:root /var/run/nginx.pid /etc/php7/php-fpm.d\nRUN mkdir -p /var/www/html \\\n && mkdir -p /usr/share/nginx/cache \\\n && mkdir -p /var/cache/nginx \\\n && mkdir -p /var/lib/nginx \\\n && chown -R www-data:root /var/www /usr/share/nginx/cache /var/cache/nginx /var/lib/nginx/\n#   Install composer\nRUN wget https://getcomposer.org/installer -O /tmp/composer-setup.php \\\n && wget https://composer.github.io/installer.sig -O /tmp/composer-setup.sig \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n && php /tmp/composer-setup.php --version=$COMPOSER_VERSION --install-dir=bin \\\n && php -r \"unlink('/tmp/composer-setup.php');\"\nWORKDIR /var/www/html/\nUSER 1001\nRUN wget ${archive_url} \\\n && tar xzf ${cachet_ver}.tar.gz --strip-components=1 \\\n && chown -R www-data:root /var/www/html \\\n && rm -r ${cachet_ver}.tar.gz \\\n && php /bin/composer.phar global require \"hirak/prestissimo:^0.3\" \\\n && php /bin/composer.phar install -o \\\n && rm -rf bootstrap/cache/*\nCOPY conf/php-fpm-pool.conf /etc/php7/php-fpm.d/www.conf\nCOPY conf/supervisord.conf /etc/supervisor/supervisord.conf\nCOPY conf/nginx.conf /etc/nginx/nginx.conf\nCOPY conf/nginx-site.conf /etc/nginx/conf.d/default.conf\nCOPY conf/.env.docker /var/www/html/.env\nCOPY entrypoint.sh /sbin/entrypoint.sh\nUSER root\nRUN chmod g+rwx /var/run/nginx.pid \\\n && chmod -R g+rw /var/www /usr/share/nginx/cache /var/cache/nginx /var/lib/nginx/ /etc/php7/php-fpm.d storage\nUSER 1001\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM nginx:1.15.12-alpine\nEXPOSE 8000/tcp\nCMD [\"/sbin/entrypoint.sh\"]\nARG cachet_ver\nARG archive_url\nENV cachet_ver=\"${cachet_ver:-2.4}\"\nENV archive_url=\"${archive_url:-https://github.com/cachethq/Cachet/archive/${cachet_ver}.tar.gz}\"\nENV COMPOSER_VERSION=\"1.6.3\"\nRUN apk add --no-cache --update postgresql-client postgresql mysql-client php7 php7-redis php7-apcu php7-bcmath php7-dom php7-ctype php7-curl php7-fpm php7-fileinfo php7-gd php7-iconv php7-intl php7-json sqlite php7-mbstring php7-mcrypt php7-mysqlnd php7-opcache php7-openssl php7-pdo php7-pdo_mysql php7-pdo_pgsql php7-pdo_sqlite php7-phar php7-posix php7-session php7-sqlite3 php7-simplexml php7-soap php7-xml php7-xmlwriter php7-zip php7-zlib php7-tokenizer wget sqlite git curl bash grep supervisor\n#  forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && ln -sf /dev/stdout /var/log/php7/error.log \\\n && ln -sf /dev/stderr /var/log/php7/error.log\nRUN adduser -S -s /bin/bash -u 1001 -G root www-data\nRUN touch /var/run/nginx.pid \\\n && chown -R www-data:root /var/run/nginx.pid /etc/php7/php-fpm.d\nRUN mkdir -p /var/www/html \\\n && mkdir -p /usr/share/nginx/cache \\\n && mkdir -p /var/cache/nginx \\\n && mkdir -p /var/lib/nginx \\\n && chown -R www-data:root /var/www /usr/share/nginx/cache /var/cache/nginx /var/lib/nginx/\n#  Install composer\nRUN wget https://getcomposer.org/installer -O /tmp/composer-setup.php \\\n && wget https://composer.github.io/installer.sig -O /tmp/composer-setup.sig \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n && php /tmp/composer-setup.php --version=$COMPOSER_VERSION --install-dir=bin \\\n && php -r \"unlink('/tmp/composer-setup.php');\"\nWORKDIR /var/www/html/\nUSER 1001\nRUN wget ${archive_url} \\\n && tar xzf ${cachet_ver}.tar.gz --strip-components=1 \\\n && chown -R www-data:root /var/www/html \\\n && rm -r ${cachet_ver}.tar.gz \\\n && php /bin/composer.phar global require \"hirak/prestissimo:^0.3\" \\\n && php /bin/composer.phar install -o \\\n && rm -rf bootstrap/cache/*\nCOPY conf/php-fpm-pool.conf /etc/php7/php-fpm.d/www.conf\nCOPY conf/supervisord.conf /etc/supervisor/supervisord.conf\nCOPY conf/nginx.conf /etc/nginx/nginx.conf\nCOPY conf/nginx-site.conf /etc/nginx/conf.d/default.conf\nCOPY conf/.env.docker /var/www/html/.env\nCOPY entrypoint.sh /sbin/entrypoint.sh\nUSER root\nRUN chmod g+rwx /var/run/nginx.pid \\\n && chmod -R g+rw /var/www /usr/share/nginx/cache /var/cache/nginx /var/lib/nginx/ /etc/php7/php-fpm.d storage\nUSER 1001\n","injectedSmells":[],"originalDockerfileHash":"e7794b90b93d8004bc87536d2d6c6119","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nginx:1.15.12-alpine\nEXPOSE 8000/tcp\nCMD [\"/sbin/entrypoint.sh\"]\nARG cachet_ver\nARG archive_url\nENV cachet_ver=\"${cachet_ver:-2.4}\"\nENV archive_url=\"${archive_url:-https://github.com/cachethq/Cachet/archive/${cachet_ver}.tar.gz}\"\nENV COMPOSER_VERSION=\"1.6.3\"\nRUN apk add --no-cache --update postgresql-client postgresql mysql-client php7 php7-redis php7-apcu php7-bcmath php7-dom php7-ctype php7-curl php7-fpm php7-fileinfo php7-gd php7-iconv php7-intl php7-json sqlite php7-mbstring php7-mcrypt php7-mysqlnd php7-opcache php7-openssl php7-pdo php7-pdo_mysql php7-pdo_pgsql php7-pdo_sqlite php7-phar php7-posix php7-session php7-sqlite3 php7-simplexml php7-soap php7-xml php7-xmlwriter php7-zip php7-zlib php7-tokenizer wget sqlite git curl bash grep supervisor\n#   forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && ln -sf /dev/stdout /var/log/php7/error.log \\\n && ln -sf /dev/stderr /var/log/php7/error.log\nRUN adduser -S -s /bin/bash -u 1001 -G root www-data\nRUN touch /var/run/nginx.pid \\\n && chown -R www-data:root /var/run/nginx.pid /etc/php7/php-fpm.d\nRUN mkdir -p /var/www/html \\\n && mkdir -p /usr/share/nginx/cache \\\n && mkdir -p /var/cache/nginx \\\n && mkdir -p /var/lib/nginx \\\n && chown -R www-data:root /var/www /usr/share/nginx/cache /var/cache/nginx /var/lib/nginx/\n#   Install composer\nRUN wget https://getcomposer.org/installer -O /tmp/composer-setup.php \\\n && wget https://composer.github.io/installer.sig -O /tmp/composer-setup.sig \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n && php /tmp/composer-setup.php --version=$COMPOSER_VERSION --install-dir=bin \\\n && php -r \"unlink('/tmp/composer-setup.php');\"\nWORKDIR /var/www/html/\nUSER 1001\nRUN wget ${archive_url} \\\n && tar xzf ${cachet_ver}.tar.gz --strip-components=1 \\\n && chown -R www-data:root /var/www/html \\\n && rm -r ${cachet_ver}.tar.gz \\\n && php /bin/composer.phar global require \"hirak/prestissimo:^0.3\" \\\n && php /bin/composer.phar install -o \\\n && rm -rf bootstrap/cache/*\nCOPY conf/php-fpm-pool.conf /etc/php7/php-fpm.d/www.conf\nCOPY conf/supervisord.conf /etc/supervisor/supervisord.conf\nCOPY conf/nginx.conf /etc/nginx/nginx.conf\nCOPY conf/nginx-site.conf /etc/nginx/conf.d/default.conf\nCOPY conf/.env.docker /var/www/html/.env\nCOPY entrypoint.sh /sbin/entrypoint.sh\nUSER root\nRUN chmod g+rwx /var/run/nginx.pid \\\n && chmod -R g+rw /var/www /usr/share/nginx/cache /var/cache/nginx /var/lib/nginx/ /etc/php7/php-fpm.d storage\nUSER 1001\n","originalDockerfileUglifiedHash":"3c5c3d8eff9dad1b38b22a00bce83af6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1565d0860598020b522858e94213d07d8598afa9.dockerfile"}