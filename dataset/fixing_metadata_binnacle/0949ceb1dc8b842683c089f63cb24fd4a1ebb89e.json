{"seed":938840583,"processedDockerfileHash":"ce75d9a4345e6d794b4023216ca88685","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG alpine_image\nARG debian_image\nFROM ${debian_image} AS debian\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.9ubuntu3 libevent-core-2.0-5 libevent-dev=2.1.12-stable-8ubuntu3 libevent-extra-2.0-5 libevent-openssl-2.0-5 libevent-pthreads-2.0-5 libpcre3-dev=2:8.39-15 automake=1:1.16.5-1.3 libtool=2.4.7-5 pkg-config=1.8.1-1ubuntu2 git=1:2.39.2-1ubuntu1 software-properties-common=0.99.35 apt-transport-https=2.6.0 curl=7.88.1-7ubuntu1 -y \\\n && (pkg-config || true )\nRUN add-apt-repository \"deb http://apt.llvm.org/jessie/ llvm-toolchain-jessie-4.0 main\" \\\n && curl -sSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends llvm-4.0-dev -y\nARG previous_crystal_release\nCOPY ${previous_crystal_release} /tmp/crystal.tar.gz\nENV PATH=\"${PATH}:/tmp/crystal/bin\"\nRUN mkdir -p /tmp/crystal \\\n && tar xz -f /tmp/crystal.tar.gz -C /tmp/crystal --strip-component=1 \\\n && crystal --version\nARG release\nENV CFLAGS=\"-fPIC -pipe ${release:+-O2}\"\n#   Build libgc\nARG gc_version\nARG libatomic_ops_version\nCOPY files/feature-thread-stackbottom.patch /tmp/\nRUN git clone https://github.com/ivmai/bdwgc \\\n && cd bdwgc \\\n && git checkout ${gc_version} \\\n && git clone https://github.com/ivmai/libatomic_ops \\\n && (cd libatomic_ops \\\n && git checkout ${libatomic_ops_version} ) \\\n && patch -p1 < /tmp/feature-thread-stackbottom.patch \\\n && ./autogen.sh \\\n && ./configure --disable-debug --disable-shared --enable-large-config \\\n && make -j$( nproc ;)\n#   Cross-compile crystal and build libcrystal.a\nARG crystal_sha1\nARG musl_target\nRUN git clone https://github.com/crystal-lang/crystal \\\n && cd crystal \\\n && git checkout ${crystal_sha1} \\\n && make deps \\\n && bin/crystal build src/compiler/crystal.cr -D without_openssl -D without_zlib --cross-compile --target ${musl_target} -o /crystal-musl\nFROM ${alpine_image}\n#   Install dependencies\nRUN apk add llvm4-dev llvm4-static zlib-dev=1.2.13-r0 yaml-dev=0.2.5-r0 pcre-dev=8.45-r2 libevent-dev=2.1.12-r5 git=2.38.4-r1 gcc=12.2.1_git20220924-r4 g++=12.2.1_git20220924-r4 make=4.3-r1 automake=1.16.5-r1 libtool=2.4.7-r1 autoconf=2.71-r1 bash=5.2.15-r0 coreutils=9.1-r0 --no-cache\nARG release\nENV CFLAGS=\"-fPIC -pipe ${release:+-O2}\"\n#   Build libgc (again, this time for musl)\nARG gc_version\nARG libatomic_ops_version\nRUN git clone https://github.com/ivmai/bdwgc \\\n && cd bdwgc \\\n && git checkout ${gc_version} \\\n && git clone https://github.com/ivmai/libatomic_ops \\\n && (cd libatomic_ops \\\n && git checkout ${libatomic_ops_version} ) \\\n && ./autogen.sh \\\n && ./configure --disable-debug --disable-shared --enable-large-config \\\n && make -j$( nproc ;) CFLAGS=-DNO_GETCONTEXT\nENV LIBRARY_PATH=\"/bdwgc/.libs/\"\nENV PATH=\"/usr/lib/llvm4/bin:$PATH\"\nRUN llvm-config --version\n#   Build crystal\nCOPY --from=debian /crystal-musl.o /\nARG crystal_version\nARG crystal_sha1\nARG gnu_target\nRUN git clone https://github.com/crystal-lang/crystal \\\n && cd crystal \\\n && git checkout ${crystal_sha1} \\\n && make deps \\\n && mkdir -p .build/crystal-musl \\\n && cc '/crystal-musl.o' -o '.build/crystal-musl/crystal' -rdynamic src/llvm/ext/llvm_ext.o `llvm-config --libs --system-libs --ldflags ` -lstdc++ -lpcre -lm -lgc -lpthread src/ext/libcrystal.a -levent -lrt \\\n && export PATH=.build/crystal-musl/:$PATH \\\n && make crystal stats=true static=true ${release:+release=true} CRYSTAL_CONFIG_TARGET=${gnu_target} \\\n && ([ \"$( ldd .build/crystal | wc -l ;)\" -eq \"1\" ] || { echo './build/crystal is not statically linked' ;ldd .build/crystal ;exit 1 ; } )\n#   Build shards\nARG shards_version\nARG musl_target\nRUN git clone https://github.com/crystal-lang/shards \\\n && cd shards \\\n && git checkout ${shards_version} \\\n && echo 'require \"llvm/lib_llvm\"; require \"llvm/enums\"; require \"./src/shards\"' > hack.cr \\\n && /crystal/bin/crystal build --stats --target ${musl_target} hack.cr -o shards --static ${release:+--release}\nCOPY files/crystal-wrapper /output/bin/crystal\nCOPY --from=debian /bdwgc/.libs/libgc.a /libgc-debian.a\nCOPY --from=debian /crystal/src/ext/libcrystal.a /libcrystal-debian.a\nARG package_iteration\nRUN rm -Rf /crystal/src/{llvm/ext/llvm_ext.o,ext/sigfault.o,ext/libcrystal.a} \\\n && mv /libcrystal-debian.a /crystal/src/ext/libcrystal.a \\\n && mkdir -p /output/lib/crystal/lib/ \\\n && cp /libgc-debian.a /output/lib/crystal/lib/libgc.a \\\n && mkdir -p /output/lib/crystal/bin/ \\\n && cp /crystal/.build/crystal /output/lib/crystal/bin/crystal \\\n && cp /shards/shards /output/lib/crystal/bin/shards \\\n && ln -s ../lib/crystal/bin/shards /output/bin/shards \\\n && mkdir -p /output/share/crystal/ \\\n && cp -r /crystal/src /output/share/crystal/src \\\n && mkdir -p /output/share/doc/crystal/ \\\n && cp -r /crystal/samples /output/share/doc/crystal/examples \\\n && mkdir -p /output/share/man/man1/ /output/share/man/man5/ \\\n && cp /crystal/man/crystal.1 /output/share/man/man1/crystal.1 \\\n && cp /shards/man/shards.1 /output/share/man/man1/shards.1 \\\n && cp /shards/man/shard.yml.5 /output/share/man/man5/shard.yml.5 \\\n && gzip -9 /output/share/man/man1/crystal.1 /output/share/man/man1/shards.1 /output/share/man/man5/shard.yml.5 \\\n && mkdir -p /output/share/licenses/crystal/ \\\n && cp /crystal/LICENSE /output/share/licenses/crystal/LICENSE \\\n && mv /output /crystal-${crystal_version}-${package_iteration} \\\n && mkdir /output \\\n && tar -cvf /output/crystal-${crystal_version}-${package_iteration}.tar /crystal-${crystal_version}-${package_iteration}\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG alpine_image\nARG debian_image\nFROM ${debian_image} AS debian\nRUN apt-get update \\\n && apt-get install build-essential libevent-core-2.0-5 libevent-dev libevent-extra-2.0-5 libevent-openssl-2.0-5 libevent-pthreads-2.0-5 libpcre3-dev automake libtool pkg-config git software-properties-common apt-transport-https curl -y \\\n && (pkg-config || true )\nRUN add-apt-repository \"deb http://apt.llvm.org/jessie/ llvm-toolchain-jessie-4.0 main\" \\\n && curl -sSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && apt-get update \\\n && apt-get install llvm-4.0-dev -y\nARG previous_crystal_release\nADD ${previous_crystal_release} /tmp/crystal.tar.gz\nENV PATH=\"${PATH}:/tmp/crystal/bin\"\nRUN mkdir -p /tmp/crystal \\\n && tar xz -f /tmp/crystal.tar.gz -C /tmp/crystal --strip-component=1 \\\n && crystal --version\nARG release\nENV CFLAGS=\"-fPIC -pipe ${release:+-O2}\"\n#  Build libgc\nARG gc_version\nARG libatomic_ops_version\nCOPY files/feature-thread-stackbottom.patch /tmp/\nRUN git clone https://github.com/ivmai/bdwgc \\\n && cd bdwgc \\\n && git checkout ${gc_version} \\\n && git clone https://github.com/ivmai/libatomic_ops \\\n && (cd libatomic_ops \\\n && git checkout ${libatomic_ops_version} ) \\\n && patch -p1 < /tmp/feature-thread-stackbottom.patch \\\n && ./autogen.sh \\\n && ./configure --disable-debug --disable-shared --enable-large-config \\\n && make -j$( nproc ;)\n#  Cross-compile crystal and build libcrystal.a\nARG crystal_sha1\nARG musl_target\nRUN git clone https://github.com/crystal-lang/crystal \\\n && cd crystal \\\n && git checkout ${crystal_sha1} \\\n && make deps \\\n && bin/crystal build src/compiler/crystal.cr -D without_openssl -D without_zlib --cross-compile --target ${musl_target} -o /crystal-musl\nFROM ${alpine_image}\n#  Install dependencies\nRUN apk add --no-cache llvm4-dev llvm4-static zlib-dev yaml-dev pcre-dev libevent-dev git gcc g++ make automake libtool autoconf bash coreutils\nARG release\nENV CFLAGS=\"-fPIC -pipe ${release:+-O2}\"\n#  Build libgc (again, this time for musl)\nARG gc_version\nARG libatomic_ops_version\nRUN git clone https://github.com/ivmai/bdwgc \\\n && cd bdwgc \\\n && git checkout ${gc_version} \\\n && git clone https://github.com/ivmai/libatomic_ops \\\n && (cd libatomic_ops \\\n && git checkout ${libatomic_ops_version} ) \\\n && ./autogen.sh \\\n && ./configure --disable-debug --disable-shared --enable-large-config \\\n && make -j$( nproc ;) CFLAGS=-DNO_GETCONTEXT\nENV LIBRARY_PATH=\"/bdwgc/.libs/\"\nENV PATH=\"/usr/lib/llvm4/bin:$PATH\"\nRUN llvm-config --version\n#  Build crystal\nCOPY --from=debian /crystal-musl.o /\nARG crystal_version\nARG crystal_sha1\nARG gnu_target\nRUN git clone https://github.com/crystal-lang/crystal \\\n && cd crystal \\\n && git checkout ${crystal_sha1} \\\n && make deps \\\n && mkdir -p .build/crystal-musl \\\n && cc '/crystal-musl.o' -o '.build/crystal-musl/crystal' -rdynamic src/llvm/ext/llvm_ext.o `llvm-config --libs --system-libs --ldflags ` -lstdc++ -lpcre -lm -lgc -lpthread src/ext/libcrystal.a -levent -lrt \\\n && export PATH=.build/crystal-musl/:$PATH \\\n && make crystal stats=true static=true ${release:+release=true} CRYSTAL_CONFIG_TARGET=${gnu_target} \\\n && ([ \"$( ldd .build/crystal | wc -l ;)\" -eq \"1\" ] || { echo './build/crystal is not statically linked' ;ldd .build/crystal ;exit 1 ; } )\n#  Build shards\nARG shards_version\nARG musl_target\nRUN git clone https://github.com/crystal-lang/shards \\\n && cd shards \\\n && git checkout ${shards_version} \\\n && echo 'require \"llvm/lib_llvm\"; require \"llvm/enums\"; require \"./src/shards\"' > hack.cr \\\n && /crystal/bin/crystal build --stats --target ${musl_target} hack.cr -o shards --static ${release:+--release}\nCOPY files/crystal-wrapper /output/bin/crystal\nCOPY --from=debian /bdwgc/.libs/libgc.a /libgc-debian.a\nCOPY --from=debian /crystal/src/ext/libcrystal.a /libcrystal-debian.a\nARG package_iteration\nRUN rm -Rf /crystal/src/{llvm/ext/llvm_ext.o,ext/sigfault.o,ext/libcrystal.a} \\\n && mv /libcrystal-debian.a /crystal/src/ext/libcrystal.a \\\n && mkdir -p /output/lib/crystal/lib/ \\\n && cp /libgc-debian.a /output/lib/crystal/lib/libgc.a \\\n && mkdir -p /output/lib/crystal/bin/ \\\n && cp /crystal/.build/crystal /output/lib/crystal/bin/crystal \\\n && cp /shards/shards /output/lib/crystal/bin/shards \\\n && ln -s ../lib/crystal/bin/shards /output/bin/shards \\\n && mkdir -p /output/share/crystal/ \\\n && cp -r /crystal/src /output/share/crystal/src \\\n && mkdir -p /output/share/doc/crystal/ \\\n && cp -r /crystal/samples /output/share/doc/crystal/examples \\\n && mkdir -p /output/share/man/man1/ /output/share/man/man5/ \\\n && cp /crystal/man/crystal.1 /output/share/man/man1/crystal.1 \\\n && cp /shards/man/shards.1 /output/share/man/man1/shards.1 \\\n && cp /shards/man/shard.yml.5 /output/share/man/man5/shard.yml.5 \\\n && gzip -9 /output/share/man/man1/crystal.1 /output/share/man/man1/shards.1 /output/share/man/man5/shard.yml.5 \\\n && mkdir -p /output/share/licenses/crystal/ \\\n && cp /crystal/LICENSE /output/share/licenses/crystal/LICENSE \\\n && mv /output /crystal-${crystal_version}-${package_iteration} \\\n && mkdir /output \\\n && tar -cvf /output/crystal-${crystal_version}-${package_iteration}.tar /crystal-${crystal_version}-${package_iteration}\n","injectedSmells":[],"originalDockerfileHash":"23ce1b6d0af7edc3b92195ee37f59207","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG alpine_image\nARG debian_image\nFROM ${debian_image} AS debian\nRUN apt-get update \\\n && apt-get install build-essential libevent-core-2.0-5 libevent-dev libevent-extra-2.0-5 libevent-openssl-2.0-5 libevent-pthreads-2.0-5 libpcre3-dev automake libtool pkg-config git software-properties-common apt-transport-https curl -y \\\n && (pkg-config || true )\nRUN add-apt-repository \"deb http://apt.llvm.org/jessie/ llvm-toolchain-jessie-4.0 main\" \\\n && curl -sSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && apt-get update \\\n && apt-get install llvm-4.0-dev -y\nARG previous_crystal_release\nADD ${previous_crystal_release} /tmp/crystal.tar.gz\nENV PATH=\"${PATH}:/tmp/crystal/bin\"\nRUN mkdir -p /tmp/crystal \\\n && tar xz -f /tmp/crystal.tar.gz -C /tmp/crystal --strip-component=1 \\\n && crystal --version\nARG release\nENV CFLAGS=\"-fPIC -pipe ${release:+-O2}\"\n#   Build libgc\nARG gc_version\nARG libatomic_ops_version\nCOPY files/feature-thread-stackbottom.patch /tmp/\nRUN git clone https://github.com/ivmai/bdwgc \\\n && cd bdwgc \\\n && git checkout ${gc_version} \\\n && git clone https://github.com/ivmai/libatomic_ops \\\n && (cd libatomic_ops \\\n && git checkout ${libatomic_ops_version} ) \\\n && patch -p1 < /tmp/feature-thread-stackbottom.patch \\\n && ./autogen.sh \\\n && ./configure --disable-debug --disable-shared --enable-large-config \\\n && make -j$( nproc ;)\n#   Cross-compile crystal and build libcrystal.a\nARG crystal_sha1\nARG musl_target\nRUN git clone https://github.com/crystal-lang/crystal \\\n && cd crystal \\\n && git checkout ${crystal_sha1} \\\n && make deps \\\n && bin/crystal build src/compiler/crystal.cr -D without_openssl -D without_zlib --cross-compile --target ${musl_target} -o /crystal-musl\nFROM ${alpine_image}\n#   Install dependencies\nRUN apk add --no-cache llvm4-dev llvm4-static zlib-dev yaml-dev pcre-dev libevent-dev git gcc g++ make automake libtool autoconf bash coreutils\nARG release\nENV CFLAGS=\"-fPIC -pipe ${release:+-O2}\"\n#   Build libgc (again, this time for musl)\nARG gc_version\nARG libatomic_ops_version\nRUN git clone https://github.com/ivmai/bdwgc \\\n && cd bdwgc \\\n && git checkout ${gc_version} \\\n && git clone https://github.com/ivmai/libatomic_ops \\\n && (cd libatomic_ops \\\n && git checkout ${libatomic_ops_version} ) \\\n && ./autogen.sh \\\n && ./configure --disable-debug --disable-shared --enable-large-config \\\n && make -j$( nproc ;) CFLAGS=-DNO_GETCONTEXT\nENV LIBRARY_PATH=\"/bdwgc/.libs/\"\nENV PATH=\"/usr/lib/llvm4/bin:$PATH\"\nRUN llvm-config --version\n#   Build crystal\nCOPY --from=debian /crystal-musl.o /\nARG crystal_version\nARG crystal_sha1\nARG gnu_target\nRUN git clone https://github.com/crystal-lang/crystal \\\n && cd crystal \\\n && git checkout ${crystal_sha1} \\\n && make deps \\\n && mkdir -p .build/crystal-musl \\\n && cc '/crystal-musl.o' -o '.build/crystal-musl/crystal' -rdynamic src/llvm/ext/llvm_ext.o `llvm-config --libs --system-libs --ldflags ` -lstdc++ -lpcre -lm -lgc -lpthread src/ext/libcrystal.a -levent -lrt \\\n && export PATH=.build/crystal-musl/:$PATH \\\n && make crystal stats=true static=true ${release:+release=true} CRYSTAL_CONFIG_TARGET=${gnu_target} \\\n && ([ \"$( ldd .build/crystal | wc -l ;)\" -eq \"1\" ] || { echo './build/crystal is not statically linked' ;ldd .build/crystal ;exit 1 ; } )\n#   Build shards\nARG shards_version\nARG musl_target\nRUN git clone https://github.com/crystal-lang/shards \\\n && cd shards \\\n && git checkout ${shards_version} \\\n && echo 'require \"llvm/lib_llvm\"; require \"llvm/enums\"; require \"./src/shards\"' > hack.cr \\\n && /crystal/bin/crystal build --stats --target ${musl_target} hack.cr -o shards --static ${release:+--release}\nCOPY files/crystal-wrapper /output/bin/crystal\nCOPY --from=debian /bdwgc/.libs/libgc.a /libgc-debian.a\nCOPY --from=debian /crystal/src/ext/libcrystal.a /libcrystal-debian.a\nARG package_iteration\nRUN rm -Rf /crystal/src/{llvm/ext/llvm_ext.o,ext/sigfault.o,ext/libcrystal.a} \\\n && mv /libcrystal-debian.a /crystal/src/ext/libcrystal.a \\\n && mkdir -p /output/lib/crystal/lib/ \\\n && cp /libgc-debian.a /output/lib/crystal/lib/libgc.a \\\n && mkdir -p /output/lib/crystal/bin/ \\\n && cp /crystal/.build/crystal /output/lib/crystal/bin/crystal \\\n && cp /shards/shards /output/lib/crystal/bin/shards \\\n && ln -s ../lib/crystal/bin/shards /output/bin/shards \\\n && mkdir -p /output/share/crystal/ \\\n && cp -r /crystal/src /output/share/crystal/src \\\n && mkdir -p /output/share/doc/crystal/ \\\n && cp -r /crystal/samples /output/share/doc/crystal/examples \\\n && mkdir -p /output/share/man/man1/ /output/share/man/man5/ \\\n && cp /crystal/man/crystal.1 /output/share/man/man1/crystal.1 \\\n && cp /shards/man/shards.1 /output/share/man/man1/shards.1 \\\n && cp /shards/man/shard.yml.5 /output/share/man/man5/shard.yml.5 \\\n && gzip -9 /output/share/man/man1/crystal.1 /output/share/man/man1/shards.1 /output/share/man/man5/shard.yml.5 \\\n && mkdir -p /output/share/licenses/crystal/ \\\n && cp /crystal/LICENSE /output/share/licenses/crystal/LICENSE \\\n && mv /output /crystal-${crystal_version}-${package_iteration} \\\n && mkdir /output \\\n && tar -cvf /output/crystal-${crystal_version}-${package_iteration}.tar /crystal-${crystal_version}-${package_iteration}\n","originalDockerfileUglifiedHash":"0c8851c6dbe8a216b40a83d9eebf8ebe","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0949ceb1dc8b842683c089f63cb24fd4a1ebb89e.dockerfile"}