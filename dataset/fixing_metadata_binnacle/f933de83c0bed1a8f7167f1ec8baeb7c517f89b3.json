{"seed":3580417749,"processedDockerfileHash":"60145dc07cb71be1cf0047c6fc424901","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  -------------------------------------------------------\n#   $VERSION: [v1.1-8] $\n#   $DATE:    [Wed Dec 27,2017 - 06:18:00PM -0600] $\n#   $AUTHOR:  [mhassan2 <mhassan@splunk.com>] $\n#  Increase OSX default docker size link:\n#  https://forums.docker.com/t/increase-docker-container-disk-space-on-os-x/26725/2\n#  https://github.com/docker/dceu_tutorials/blob/master/07-volumes.md\n#  To build (from build dir): (11-15 mins)\n#  time docker build --no-cache=true -f Dockerfile.datafabric -t splunknbox/splunk_datafabric .\n#  To run: (cached: 3sec  Download: 5 mins)\n#  time docker run -d --name=DF01 --hostname=DF01 -p 2122:22 -p 8000:8000 -p 8020:8020 -p 8030:8030 -p 8032:8032 -p 8088:8088 -p 9090:9090 -p 50070:50070 splunknbox/splunk_datafabric\n#  OR\n#  time docker run -d --name=DF01 --hostname=DF01 -p 2122:22 -p 8000:8000 -p 9090:9090 -p 50070:50070 splunknbox/splunk_datafabric\n#  Push to splunknbox repo on docker hub: (~115 mins)\n#  time docker push splunknbox/splunk_datafabric\n#  -------------------------------------------------------\n#  --------COLORES ESCAPE CODES------------\n#  for i in `seq 1 100`; do printf \"\\033[48;5;${i}m${i} \"; done\n#  NC='\\033[0m' # No Color\n#  Black=\"\\033[0;30m\";             White=\"\\033[1;37m\"\n#  Red=\"\\033[0;31m\";               LightRed=\"\\033[1;31m\"\n#  Green=\"\\033[0;32m\";             LightGreen=\"\\033[1;32m\"\n#  BrownOrange=\"\\033[0;33m\";       Yellow=\"\\033[1;33m\"\n#  Blue=\"\\033[0;34m\";              LightBlue=\"\\033[1;34m\"\n#  Purple=\"\\033[0;35m\";            LightPurple=\"\\033[1;35m\"\n#  Cyan=\"\\033[0;36m\";              LightCyan=\"\\033[1;36m\"\n#  LightGray=\"\\033[0;37m\";         DarkGray=\"\\033[1;30m\"\n#  BlackOnGreen=\"\\033[30;48;5;82m\"\n#  WhiteOnBurg=\"\\033[30;48;5;88m\"\n#\n#  BoldWhiteOnRed=\"\\033[1;1;5;41m\"\n#  BoldWhiteOnGreen=\"\\033[1;1;5;42m\"\n#  BoldWhiteOnYellow=\"\\033[1;1;5;43m\"\n#  BoldWhiteOnBlue=\"\\033[1;1;5;44m\"\n#  BoldWhiteOnPink=\"\\033[1;1;5;45m\"\n#  BoldWhiteOnTurquoise=\"\\033[1;1;5;46m\"\n#  BoldYellowOnBlue=\"\\033[1;33;44m\"\n#  BoldYellowOnPurple=\"\\033[1;33;44m\"\n#  LABEL com.splunk.version=\"0.3-beta\"\n#  LABEL vendor=\"Splunk>\"\n#  LABEL com.splunk.release-date=\"2017-02-12\"\n#  LABEL com.splunk.version.is-production=\"\"\nFROM debian:jessie\nENV GIT_VERSION=\"$VERSION: [v1.1-8] $\"\nENV CONTAINER_VER=\"1.0\"\nMAINTAINER mhassan@splunk.com version: $CONTAINER_VER\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"linux\"\n#  ENV SPLUNK_VERSION=\"6.4.3\" SPLUNK_BUILD=\"b03109c2bad4\"\n#  ENV SPLUNK_VERSION=\"6.4.4\" SPLUNK_BUILD=\"b53a5c14bb5e\"\n#  ENV SPLUNK_VERSION=\"6.5.0\" SPLUNK_BUILD=\"59c8927def0f\"\n#  ENV SPLUNK_VERSION=\"6.5.1\" SPLUNK_BUILD=\"f74036626f0c\"\n#  ENV SPLUNK_VERSION=\"6.5.2\" SPLUNK_BUILD=\"67571ef4b87d\"\n#  ENV SPLUNK_VERSION=\"6.5.3\" SPLUNK_BUILD=\"36937ad027d4\"\n#  ENV SPLUNK_VERSION=\"6.5.4\" SPLUNK_BUILD=\"adb84211dd7c\"\n#  ENV SPLUNK_VERSION=\"6.5.5\" SPLUNK_BUILD=\"586c3ec08cfb\"\n#  ENV SPLUNK_VERSION=\"6.6.0\" SPLUNK_BUILD=\"1c4f3bbe1aea\"\n#  ENV SPLUNK_VERSION=\"6.6.1\" SPLUNK_BUILD=\"aeae3fe0c5af\"\n#  ENV SPLUNK_VERSION=\"6.6.2\" SPLUNK_BUILD=\"4b804538c686\"\n#  ENV SPLUNK_VERSION=\"6.6.3\" SPLUNK_BUILD=\"e21ee54bc796\"\n#  ENV SPLUNK_VERSION=\"7.0.0\" SPLUNK_BUILD=\"c8a78efdd40f\"\nENV SPLUNK_VERSION=\"7.0.1\" \\\n    SPLUNK_BUILD=\"2b5b15c4ee89\"\nENV SPLUNK_PRODUCT=\"splunk\"\nENV SPLUNK_FILENAME=\"splunk-${SPLUNK_VERSION}-${SPLUNK_BUILD}-Linux-x86_64.tgz\"\nENV SPLUNK_HOME=\"/opt/splunk\"\nENV SPLUNK_GROUP=\"splunk\"\nENV SPLUNK_USER=\"splunk\"\nENV SPLUNK_BACKUP_DEFAULT_ETC=\"/var/opt/splunk\"\nRUN printf \"\\033[1;33m\\n\\n-------------------- Installing Misc Stuff ---------------------\\n\"\nRUN : \\\n && printf \"\\033[1;33m\"\nRUN (apt-get update ;apt-get install --no-install-recommends apt-utils lsb-release curl -qq -y ) \\\n && apt-get update \\\n && printf \"\\033[1;33m\"\n#  RUN apt-get -qq update && printf \"\\033[1;33m\"\nRUN (apt-get update ;apt-get install --no-install-recommends wget sudo vim net-tools telnet dnsutils -qq -y ) \\\n && apt-get update -qq\nCOPY configs/containers.bashrc /root/.bashrc\nCOPY configs/containers.vimrc /root/.vimrc\nCOPY configs/environment /etc\nRUN printf \"\\033[1;32m\\n\\n-------------------- Installing Splunk ---------------------\\n\"\n#   add splunk:splunk user\nRUN groupadd -r ${SPLUNK_GROUP} \\\n && useradd -r -m -g ${SPLUNK_GROUP} ${SPLUNK_USER}\n#   make the \"en_US.UTF-8\" locale so splunk will be utf-8 enabled by default\nRUN (apt-get update ;apt-get install --no-install-recommends locales -qq -y ) \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#   pdfgen dependency\nRUN (apt-get update ;apt-get install --no-install-recommends libgssapi-krb5-2 -qq -y )\nRUN : \\\n && printf \"\\033[1;32m\"\n#   Download official Splunk release, verify checksum and unzip in /opt/splunk\n#   Also backup etc folder, so it will be later copied to the linked volume\nRUN mkdir -p ${SPLUNK_HOME} \\\n && wget -qO /tmp/${SPLUNK_FILENAME} https://download.splunk.com/products/${SPLUNK_PRODUCT}/releases/${SPLUNK_VERSION}/linux/${SPLUNK_FILENAME} \\\n && wget -qO /tmp/${SPLUNK_FILENAME}.md5 https://download.splunk.com/products/${SPLUNK_PRODUCT}/releases/${SPLUNK_VERSION}/linux/${SPLUNK_FILENAME}.md5 \\\n && (cd /tmp \\\n && md5sum -c ${SPLUNK_FILENAME}.md5 ) \\\n && tar -xzf /tmp/${SPLUNK_FILENAME} --strip 1 -C ${SPLUNK_HOME} \\\n && rm /tmp/${SPLUNK_FILENAME} \\\n && rm /tmp/${SPLUNK_FILENAME}.md5 \\\n && mkdir -p /var/opt/splunk \\\n && cp -R ${SPLUNK_HOME}/etc ${SPLUNK_BACKUP_DEFAULT_ETC} \\\n && rm -fR ${SPLUNK_HOME}/etc \\\n && chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} ${SPLUNK_HOME} \\\n && chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} ${SPLUNK_BACKUP_DEFAULT_ETC} \\\n && rm -rf /var/lib/apt/lists/*\n#      && apt-get purge -y --auto-remove wget \\\nCOPY scripts/splunk_web_conf.sh /sbin/splunk_web_conf.sh\nRUN chmod +x /sbin/splunk_web_conf.sh\nCOPY scripts/splunk_first_run.sh /sbin/splunk_first_run.sh\nRUN chmod +x /sbin/splunk_first_run.sh\nCOPY scripts/splunk /etc/init.d\nRUN chmod +x /etc/init.d/splunk\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;32m\\n\\n-------------------- Downloading WORLD database ---------------------\\n\"\nRUN wget -qO /tmp/world.sql.gz http://downloads.mysql.com/docs/world.sql.gz\n#  COPY Packages_download/world.sql.gz  /tmp\n#  COPY scripts/startup_mysql.sh /sbin/startup_mysql.sh\n#  RUN chmod +x /sbin/startup_mysql.sh\nRUN gunzip /tmp/world.sql.gz\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;34m\\n\\n-------------------- Installing MySQL ---------------------\\n\"\nRUN : \\\n && printf \"\\033[1;34m\"\nRUN (apt-get update ;apt-get install --no-install-recommends mysql-server -qq -y )\n#  copy the customized mysql startup script\nCOPY scripts/mysql /etc/init.d/mysql\nRUN chmod +x /etc/init.d/mysql\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;36m\\n\\n-------------------- Installing supervisord ---------------------\\n\"\nRUN : \\\n && printf \"\\033[1;36m\"\nRUN (apt-get update ;apt-get install --no-install-recommends supervisor -qq -y )\nCOPY configs/supervisord.conf /etc/supervisor/supervisord.conf\n#  configure built-in webserver\n#  RUN mkdir -p /etc/nginx/sites-available/\n#  RUN mkdir -p /etc/nginx/sites-enable/\n#  COPY configs/supervisord.web /etc/nginx/sites-available/supervisord\n#  RUN  ln -s /etc/nginx/sites-available/supervisord /etc/nginx/sites-enable/supervisord\n#  --------------------------------------------------------------\n#  http://www.webupd8.org/2014/03/how-to-install-oracle-java-8-in-debian.html\nRUN printf \"\\033[1;33m\\n\\n-------------------- Installing Java 8 ---------------------\\n\"\n#  RUN apt-get update\t&& apt-get install -y software-properties-common && apt-get update\nRUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list\nRUN echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886\nRUN printf \"\\033[1;33m\"\nRUN : \\\n && printf \"\\033[1;33\"\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN (apt-get update ;apt-get install --no-install-recommends oracle-java8-installer -qq -y )\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;32m\\n\\n-------------------- Installing splunk apps: DBconnect, MySQL driver & Kafka add-on ---------------------\\n\"\n#  order of splunk apps install is important. First DBconnet then the MySQL driver\n#  DBconnect App 3.11\nCOPY splunk_apps/splunk-db-connect_311.tgz /tmp/splunk-db-connect_311.tgz\nRUN tar -zxf /tmp/splunk-db-connect_311.tgz -C /var/opt/splunk/etc/apps\nRUN rm -f /tmp/splunk-db-connect_311.tgz\n#  MySQL java driver\nRUN wget -qO /tmp/mysql-connector-java-5.1.44.tar.gz https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.44.tar.gz\n#  COPY Packages_download/mysql-connector-java-5.1.44.tar.gz  /tmp\nRUN tar -zxf /tmp/mysql-connector-java-5.1.44.tar.gz -C /var/opt/splunk/etc/apps/splunk_app_db_connect/drivers/\nRUN rm -f /tmp/mysql-connector-java-5.1.44.tar.gz\n#  Kafka add-on\n#  COPY splunk_apps/splunk-add-on-for-kafka_110.tgz /tmp/splunk-add-on-for-kafka_110.tgz\n#  RUN tar -zxf /tmp/splunk-add-on-for-kafka_110.tgz -C /var/opt/splunk/etc/apps\n#  RUN rm -f /tmp/splunk-add-on-for-kafka_110.tgz\n#  Kafka connect app (beta)\n#  COPY splunk_apps/kafka-connect-splunk.tar.gz /tmp\n#  RUN tar -zxf /tmp/kafka-connect-splunk.tar.gz -C /var/opt/splunk/etc/apps\n#  RUN rm -f /tmp/kafka-connect-splunk.tar.gz\n#  Configuring indexers [include hadoop vidx]\nCOPY splunk_apps/indexes.tgz /tmp/indexes.tgz\nRUN tar xzf /tmp/indexes.tgz -C /opt/splunk\n#  Install Splunk apps [dbconnect 2.x, kafka addon,] & dashboards [search app]\nCOPY splunk_apps/apps_configs.tgz /tmp/apps_configs.tgz\nRUN tar xzf /tmp/apps_configs.tgz -C /var/opt/splunk/etc/apps/\nRUN mkdir -p /var/opt/splunk/etc/apps/user-prefs/local\nCOPY configs/user-prefs.conf /var/opt/splunk/etc/apps/user-prefs/local\nRUN chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} /var/opt/splunk/etc/apps\nRUN rm -f /tmp/indexes.tgz /tmp/apps_configs.tgz\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;36m\\n\\n-------------------- Installing & Configuring sshd ---------------------\\n\"\nRUN (apt-get update ;apt-get install --no-install-recommends openssh-server rsync -qq -y )\nRUN : \\\n && printf \"\\033[1;36m\"\n#  passwordless ssh login\nRUN ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa\nRUN cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\nRUN chmod 0600 ~/.ssh/authorized_keys\nRUN echo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config\nRUN echo \"UserKnownHostsFile=/dev/null\" >> /etc/ssh/ssh_config\n#  RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN echo \"ListenAddress 0.0.0.0\" >> /etc/ssh/sshd_config\n#  Share static host keys so we dont get ssh warning with different builds\nCOPY configs/ssh_host_keys.tgz /tmp/ssh_host_keys.tgz\nRUN tar -zxf /tmp/ssh_host_keys.tgz -C /etc/ssh\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nRUN echo root:splunk123 | chpasswd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\nRUN rm -f /tmp/ssh_host_keys.tgz\nCOPY scripts/ssh /etc/init.d/\nRUN chmod +x /etc/init.d/ssh\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;37m\\n\\n-------------------- Installing Hadoop(Yarn) ---------------------\\n\"\n#  force hadoop to use different ssh port\n#  ENV HADOOP_SSH_OPTS \"-p 2122\"\n#  Make the default user \"splunk\" that write to hdfs to address the permission issue\nENV HADOOP_USER_NAME=\"splunk\"\n#  Download sample hadoop data\nRUN wget -qO /tmp/Hunkdata.json.gz http://www.splunk.com/web_assets/hunk/Hunkdata.json.gz\n#  COPY Packages_download/Hunkdata.json.gz /tmp\nCOPY /data/avro_07_31_2017.avro /tmp/avro_07_31_2017.avro\nCOPY /data/avro_08_01_2017.avro /tmp/avro_08_01_2017.avro\nRUN wget -qO /tmp/hadoop-2.9.0.tar.gz http://apache.claz.org/hadoop/common/hadoop-2.9.0/hadoop-2.9.0.tar.gz\n#  COPY Packages_download/hadoop-2.9.0.tar.gz /tmp\nRUN tar -zxf /tmp/hadoop-2.9.0.tar.gz -C /opt\nRUN rm -f /tmp/hadoop-2.9.0.tar.gz\n#  Customization\nRUN mkdir -p /opt/hadoop-2.9.0/etc/input\nRUN cp /opt/hadoop-2.9.0/etc/hadoop/*.xml /opt/hadoop-2.9.0/etc/input/\n#  RUN /bin/bash -c \"/opt/hadoop-2.9.0/bin/hadoop jar /opt/hadoop-2.9.0/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.9.0.jar grep input output 'dfs[a-z.]+'\"\nCOPY configs/core-site.xml /opt/hadoop-2.9.0/etc/hadoop/core-site.xml\nCOPY configs/hdfs-site.xml /opt/hadoop-2.9.0/etc/hadoop/hdfs-site.xml\nCOPY configs/mapred-site.xml /opt/hadoop-2.9.0/etc/hadoop/mapred-site.xml\nCOPY configs/yarn-site.xml /opt/hadoop-2.9.0/etc/hadoop/yarn-site.xml\n#  Format HDFS\nRUN /opt/hadoop-2.9.0/bin/hdfs namenode -format -force\n#  RUN printf \"\\033[0;36m\"\n#  COPY scripts/startup_hadoop.sh /sbin/startup_hadoop.sh\n#  RUN chmod +x /sbin/startup_hadoop.sh\nCOPY scripts/hadoop /etc/init.d/\nCOPY scripts/yarn /etc/init.d/\nCOPY scripts/start-yarn.sh /opt/hadoop-2.9.0/sbin/\nCOPY scripts/stop-yarn.sh /opt/hadoop-2.9.0/sbin/\nCOPY scripts/start-dfs.sh /opt/hadoop-2.9.0/sbin/\nCOPY scripts/stop-dfs.sh /opt/hadoop-2.9.0/sbin/\nRUN chmod +x /etc/init.d/hadoop\nRUN chmod +x /etc/init.d/yarn\nRUN chmod +x /opt/hadoop-2.9.0/sbin/start-yarn.sh\nRUN chmod +x /opt/hadoop-2.9.0/sbin/stop-yarn.sh\nRUN chmod +x /opt/hadoop-2.9.0/sbin/start-dfs.sh\nRUN chmod +x /opt/hadoop-2.9.0/sbin/stop-dfs.sh\n#  --------------------------------------------------------------\n#  >>>>>> disable Zookeeper install. It is embemded in Kafka install <<<<<<\n#  https://www.tutorialspoint.com/apache_kafka/apache_kafka_basic_operations.htm\n#  RUN printf \"\\033[1;36m\\n\\n-------------------- Installing ZooKeeper ---------------------\\n\"\n#  RUN wget -qO /tmp/zookeeper-3.4.11.tar.gz  http://apache.claz.org/zookeeper/zookeeper-3.4.11/zookeeper-3.4.11.tar.gz\n#  COPY Packages_download/zookeeper-3.4.11.tar.gz  /tmp\n#  RUN tar -zxf /tmp/zookeeper-3.4.11.tar.gz -C /opt\n#  RUN rm -f /tmp/zookeeper-3.4.11.tar.gz\n#  Customization\n#  COPY configs/zoo.cfg /opt/zookeeper-3.4.11/conf/zoo.cfg\n#  --------------------------------------------------------------\n#  >>>>>> disable Zookeeper install. It is embemded in Kafka install <<<<<<\nRUN printf \"\\033[1;33m\\n\\n-------------------- Installing Kafka ---------------------\\n\"\nRUN wget -qO /tmp/kafka_2.11-1.0.0.tgz http://apache.claz.org/kafka/1.0.0/kafka_2.11-1.0.0.tgz\n#  COPY Packages_download/kafka_2.11-1.0.0.tgz /tmp\nRUN tar -zxf /tmp/kafka_2.11-1.0.0.tgz -C /opt\nRUN rm -f /tmp/kafka_2.11-1.0.0.tgz\nCOPY data/sample_kafka.log /tmp/sample_kafka.log\n#  COPY scripts/startup_zoo_kafka.sh /sbin/startup_zoo_kafka.sh\n#  RUN chmod +x /sbin/startup_zoo_kafka.sh\nCOPY scripts/zookeeper-server-start.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/zookeeper-server-stop.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/kafka-server-stop.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/kafka-server-start.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/kafka /etc/init.d/\nCOPY scripts/zookeeper /etc/init.d/\nRUN chmod +x /etc/init.d/kafka\nRUN chmod +x /etc/init.d/zookeeper\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/zookeeper-server-start.sh\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/zookeeper-server-stop.sh\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/kafka-server-stop.sh\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/kafka-server-start.sh\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;34m\\n\\n-------------------- Installing Apache NIFI ---------------------\\n\"\nRUN wget -qO /tmp/nifi-1.4.0-bin.tar.gz http://apache.claz.org/nifi/1.4.0/nifi-1.4.0-bin.tar.gz\n#  COPY Packages_download/nifi-1.4.0-bin.tar.gz /tmp\nRUN tar -xzf /tmp/nifi-1.4.0-bin.tar.gz -C /opt\nRUN rm -f /tmp/nifi-1.4.0-bin.tar.gz\n#  need uuidgen command for nifi UI configuration\n#  RUN apt-get -qq install -y uuid-runtime\n#  create nifi data directory with sample access combined logs\nRUN mkdir /opt/nifi-1.4.0/splunk_sample_data\nCOPY data/access.log /opt/nifi-1.4.0/splunk_sample_data/access1.log\nCOPY data/access.log /opt/nifi-1.4.0/splunk_sample_data/access2.log\nCOPY data/access.log /opt/nifi-1.4.0/splunk_sample_data/access3.log\nCOPY configs/flow.xml.gz /opt/nifi-1.4.0/conf\n#  COPY scripts/startup_nifi.sh /sbin/startup_nifi.sh\n#  RUN chmod +x /sbin/startup_nifi.sh\nCOPY scripts/nifi /etc/init.d/\nCOPY scripts/nifi.sh /opt/nifi-1.4.0/bin/\nRUN chmod +x /etc/init.d/nifi\nRUN chmod +x /opt/nifi-1.4.0/bin/nifi.sh\n#  nifi customization\nRUN echo \"java=/usr/lib/jvm/java-8-oracle/\" >> /opt/nifi-1.4.0/conf/bootstrap\nRUN echo \"\" >> /opt/nifi-1.4.0/bin/nifi-env.sh\n#  this template will be manually imported in the UI (file is loaded from local disk)\nCOPY configs/Splunk_HEC_TCP_RESTQuery.xml /tmp/Splunk_HEC_TCP_RESTQuery.xml\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-8-oracle/\" >> /opt/nifi-1.4.0/bin/nifi-env.sh\n#  change default nifi port to 9090\nRUN sed -i 's/nifi.web.http.port=8080/nifi.web.http.port=9090/' /opt/nifi-1.4.0/conf/nifi.properties\n#  --------------------------------------------------------------\n#  clean up /tmp\nRUN printf \"\\033[1;37m\\n\\n-------------------- /tmp cleanup ---------------------\\n\"\n#  \t/tmp/Hunkdata.json.gz /tmp/world.sql  dont remove now. will be used with startup scripts later\n#  COPY configs/local.tar /tmp\n#  RUN tar -xvf /tmp/local.tar /opt/splunk/etc/apps/splunk_app_db_connect/local/\n#  startup scripts with be kicked off from supervisord.conf\n#   Ports Splunk Web, Splunk Daemon, KVStore, Splunk Indexing Port, Network Input, HTTP Event Collector\nEXPOSE 8000/tcp 8089/tcp 8191/tcp 9997/tcp 1514/udp 8088/tcp 9088/tcp\n#  MySQL\nEXPOSE 3306/tcp\n#  supervisord web\nEXPOSE 9001/tcp\n#  Hadoop: Resource mgr:8088  namednode:50070  hdfs:9000\nEXPOSE 50070/tcp 9000/tcp 8088/tcp 2122/tcp\n#   Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#   Mapred ports\nEXPOSE 10020/tcp 19888/tcp\n#  Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp 10020/tcp 19888/tcp 10200/tcp\n#  Other ports\nEXPOSE 49707/tcp 2122/tcp\n#  NIFI\nEXPOSE 9090/tcp\nWORKDIR /opt/splunk\n#   Configurations folder, var folder for everything (indexes, logs, kvstore)\nVOLUME [ \"/opt/splunk/etc\", \"/opt/splunk/var\", \"/var/lib/mysql\" ]\nCMD [\"/usr/bin/supervisord\"]\nRUN printf \"\\033[1;33m\\n\\n-------------------- We are done baby! ---------------------\\033[0m\\n\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# -------------------------------------------------------\n#  $VERSION: [v1.1-8] $\n#  $DATE:    [Wed Dec 27,2017 - 06:18:00PM -0600] $\n#  $AUTHOR:  [mhassan2 <mhassan@splunk.com>] $\n# Increase OSX default docker size link:\n# https://forums.docker.com/t/increase-docker-container-disk-space-on-os-x/26725/2\n# https://github.com/docker/dceu_tutorials/blob/master/07-volumes.md\n# To build (from build dir): (11-15 mins)\n# time docker build --no-cache=true -f Dockerfile.datafabric -t splunknbox/splunk_datafabric .\n# To run: (cached: 3sec  Download: 5 mins)\n# time docker run -d --name=DF01 --hostname=DF01 -p 2122:22 -p 8000:8000 -p 8020:8020 -p 8030:8030 -p 8032:8032 -p 8088:8088 -p 9090:9090 -p 50070:50070 splunknbox/splunk_datafabric\n# OR\n# time docker run -d --name=DF01 --hostname=DF01 -p 2122:22 -p 8000:8000 -p 9090:9090 -p 50070:50070 splunknbox/splunk_datafabric\n# Push to splunknbox repo on docker hub: (~115 mins)\n# time docker push splunknbox/splunk_datafabric\n# -------------------------------------------------------\n# --------COLORES ESCAPE CODES------------\n# for i in `seq 1 100`; do printf \"\\033[48;5;${i}m${i} \"; done\n# NC='\\033[0m' # No Color\n# Black=\"\\033[0;30m\";             White=\"\\033[1;37m\"\n# Red=\"\\033[0;31m\";               LightRed=\"\\033[1;31m\"\n# Green=\"\\033[0;32m\";             LightGreen=\"\\033[1;32m\"\n# BrownOrange=\"\\033[0;33m\";       Yellow=\"\\033[1;33m\"\n# Blue=\"\\033[0;34m\";              LightBlue=\"\\033[1;34m\"\n# Purple=\"\\033[0;35m\";            LightPurple=\"\\033[1;35m\"\n# Cyan=\"\\033[0;36m\";              LightCyan=\"\\033[1;36m\"\n# LightGray=\"\\033[0;37m\";         DarkGray=\"\\033[1;30m\"\n# BlackOnGreen=\"\\033[30;48;5;82m\"\n# WhiteOnBurg=\"\\033[30;48;5;88m\"\n#\n# BoldWhiteOnRed=\"\\033[1;1;5;41m\"\n# BoldWhiteOnGreen=\"\\033[1;1;5;42m\"\n# BoldWhiteOnYellow=\"\\033[1;1;5;43m\"\n# BoldWhiteOnBlue=\"\\033[1;1;5;44m\"\n# BoldWhiteOnPink=\"\\033[1;1;5;45m\"\n# BoldWhiteOnTurquoise=\"\\033[1;1;5;46m\"\n# BoldYellowOnBlue=\"\\033[1;33;44m\"\n# BoldYellowOnPurple=\"\\033[1;33;44m\"\n# LABEL com.splunk.version=\"0.3-beta\"\n# LABEL vendor=\"Splunk>\"\n# LABEL com.splunk.release-date=\"2017-02-12\"\n# LABEL com.splunk.version.is-production=\"\"\nFROM debian:jessie\nENV GIT_VERSION=\"$VERSION: [v1.1-8] $\"\nENV CONTAINER_VER=\"1.0\"\nMAINTAINER mhassan@splunk.com version: $CONTAINER_VER\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"linux\"\n# ENV SPLUNK_VERSION=\"6.4.3\" SPLUNK_BUILD=\"b03109c2bad4\"\n# ENV SPLUNK_VERSION=\"6.4.4\" SPLUNK_BUILD=\"b53a5c14bb5e\"\n# ENV SPLUNK_VERSION=\"6.5.0\" SPLUNK_BUILD=\"59c8927def0f\"\n# ENV SPLUNK_VERSION=\"6.5.1\" SPLUNK_BUILD=\"f74036626f0c\"\n# ENV SPLUNK_VERSION=\"6.5.2\" SPLUNK_BUILD=\"67571ef4b87d\"\n# ENV SPLUNK_VERSION=\"6.5.3\" SPLUNK_BUILD=\"36937ad027d4\"\n# ENV SPLUNK_VERSION=\"6.5.4\" SPLUNK_BUILD=\"adb84211dd7c\"\n# ENV SPLUNK_VERSION=\"6.5.5\" SPLUNK_BUILD=\"586c3ec08cfb\"\n# ENV SPLUNK_VERSION=\"6.6.0\" SPLUNK_BUILD=\"1c4f3bbe1aea\"\n# ENV SPLUNK_VERSION=\"6.6.1\" SPLUNK_BUILD=\"aeae3fe0c5af\"\n# ENV SPLUNK_VERSION=\"6.6.2\" SPLUNK_BUILD=\"4b804538c686\"\n# ENV SPLUNK_VERSION=\"6.6.3\" SPLUNK_BUILD=\"e21ee54bc796\"\n# ENV SPLUNK_VERSION=\"7.0.0\" SPLUNK_BUILD=\"c8a78efdd40f\"\nENV SPLUNK_VERSION=\"7.0.1\" \\\n    SPLUNK_BUILD=\"2b5b15c4ee89\"\nENV SPLUNK_PRODUCT=\"splunk\"\nENV SPLUNK_FILENAME=\"splunk-${SPLUNK_VERSION}-${SPLUNK_BUILD}-Linux-x86_64.tgz\"\nENV SPLUNK_HOME=\"/opt/splunk\"\nENV SPLUNK_GROUP=\"splunk\"\nENV SPLUNK_USER=\"splunk\"\nENV SPLUNK_BACKUP_DEFAULT_ETC=\"/var/opt/splunk\"\nRUN printf \"\\033[1;33m\\n\\n-------------------- Installing Misc Stuff ---------------------\\n\"\nRUN apt-get update -qq \\\n && printf \"\\033[1;33m\"\nRUN apt-get install apt-utils lsb-release curl -qq -y \\\n && apt-get update \\\n && printf \"\\033[1;33m\"\n# RUN apt-get -qq update && printf \"\\033[1;33m\"\nRUN apt-get install wget sudo vim net-tools telnet dnsutils -qq -y \\\n && apt-get update -qq\nCOPY configs/containers.bashrc /root/.bashrc\nCOPY configs/containers.vimrc /root/.vimrc\nCOPY configs/environment /etc\nRUN printf \"\\033[1;32m\\n\\n-------------------- Installing Splunk ---------------------\\n\"\n#  add splunk:splunk user\nRUN groupadd -r ${SPLUNK_GROUP} \\\n && useradd -r -m -g ${SPLUNK_GROUP} ${SPLUNK_USER}\n#  make the \"en_US.UTF-8\" locale so splunk will be utf-8 enabled by default\nRUN apt-get install locales -qq -y \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#  pdfgen dependency\nRUN apt-get install libgssapi-krb5-2 -qq -y\nRUN apt-get update -qq \\\n && printf \"\\033[1;32m\"\n#  Download official Splunk release, verify checksum and unzip in /opt/splunk\n#  Also backup etc folder, so it will be later copied to the linked volume\nRUN mkdir -p ${SPLUNK_HOME} \\\n && wget -qO /tmp/${SPLUNK_FILENAME} https://download.splunk.com/products/${SPLUNK_PRODUCT}/releases/${SPLUNK_VERSION}/linux/${SPLUNK_FILENAME} \\\n && wget -qO /tmp/${SPLUNK_FILENAME}.md5 https://download.splunk.com/products/${SPLUNK_PRODUCT}/releases/${SPLUNK_VERSION}/linux/${SPLUNK_FILENAME}.md5 \\\n && (cd /tmp \\\n && md5sum -c ${SPLUNK_FILENAME}.md5 ) \\\n && tar -xzf /tmp/${SPLUNK_FILENAME} --strip 1 -C ${SPLUNK_HOME} \\\n && rm /tmp/${SPLUNK_FILENAME} \\\n && rm /tmp/${SPLUNK_FILENAME}.md5 \\\n && mkdir -p /var/opt/splunk \\\n && cp -R ${SPLUNK_HOME}/etc ${SPLUNK_BACKUP_DEFAULT_ETC} \\\n && rm -fR ${SPLUNK_HOME}/etc \\\n && chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} ${SPLUNK_HOME} \\\n && chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} ${SPLUNK_BACKUP_DEFAULT_ETC} \\\n && rm -rf /var/lib/apt/lists/*\n#     && apt-get purge -y --auto-remove wget \\\nCOPY scripts/splunk_web_conf.sh /sbin/splunk_web_conf.sh\nRUN chmod +x /sbin/splunk_web_conf.sh\nCOPY scripts/splunk_first_run.sh /sbin/splunk_first_run.sh\nRUN chmod +x /sbin/splunk_first_run.sh\nCOPY scripts/splunk /etc/init.d\nRUN chmod +x /etc/init.d/splunk\n# --------------------------------------------------------------\nRUN printf \"\\033[1;32m\\n\\n-------------------- Downloading WORLD database ---------------------\\n\"\nRUN wget -qO /tmp/world.sql.gz http://downloads.mysql.com/docs/world.sql.gz\n# COPY Packages_download/world.sql.gz  /tmp\n# COPY scripts/startup_mysql.sh /sbin/startup_mysql.sh\n# RUN chmod +x /sbin/startup_mysql.sh\nRUN gunzip /tmp/world.sql.gz\n# --------------------------------------------------------------\nRUN printf \"\\033[1;34m\\n\\n-------------------- Installing MySQL ---------------------\\n\"\nRUN apt-get update -qq \\\n && printf \"\\033[1;34m\"\nRUN apt-get install mysql-server -qq -y\n# copy the customized mysql startup script\nCOPY scripts/mysql /etc/init.d/mysql\nRUN chmod +x /etc/init.d/mysql\n# --------------------------------------------------------------\nRUN printf \"\\033[1;36m\\n\\n-------------------- Installing supervisord ---------------------\\n\"\nRUN apt-get update -qq \\\n && printf \"\\033[1;36m\"\nRUN apt-get install supervisor -qq -y\nCOPY configs/supervisord.conf /etc/supervisor/supervisord.conf\n# configure built-in webserver\n# RUN mkdir -p /etc/nginx/sites-available/\n# RUN mkdir -p /etc/nginx/sites-enable/\n# COPY configs/supervisord.web /etc/nginx/sites-available/supervisord\n# RUN  ln -s /etc/nginx/sites-available/supervisord /etc/nginx/sites-enable/supervisord\n# --------------------------------------------------------------\n# http://www.webupd8.org/2014/03/how-to-install-oracle-java-8-in-debian.html\nRUN printf \"\\033[1;33m\\n\\n-------------------- Installing Java 8 ---------------------\\n\"\n# RUN apt-get update\t&& apt-get install -y software-properties-common && apt-get update\nRUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list\nRUN echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886\nRUN printf \"\\033[1;33m\"\nRUN apt-get update -qq \\\n && printf \"\\033[1;33\"\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install oracle-java8-installer -qq -y\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\n# --------------------------------------------------------------\nRUN printf \"\\033[1;32m\\n\\n-------------------- Installing splunk apps: DBconnect, MySQL driver & Kafka add-on ---------------------\\n\"\n# order of splunk apps install is important. First DBconnet then the MySQL driver\n# DBconnect App 3.11\nCOPY splunk_apps/splunk-db-connect_311.tgz /tmp/splunk-db-connect_311.tgz\nRUN tar -zxf /tmp/splunk-db-connect_311.tgz -C /var/opt/splunk/etc/apps\nRUN rm -f /tmp/splunk-db-connect_311.tgz\n# MySQL java driver\nRUN wget -qO /tmp/mysql-connector-java-5.1.44.tar.gz https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.44.tar.gz\n# COPY Packages_download/mysql-connector-java-5.1.44.tar.gz  /tmp\nRUN tar -zxf /tmp/mysql-connector-java-5.1.44.tar.gz -C /var/opt/splunk/etc/apps/splunk_app_db_connect/drivers/\nRUN rm -f /tmp/mysql-connector-java-5.1.44.tar.gz\n# Kafka add-on\n# COPY splunk_apps/splunk-add-on-for-kafka_110.tgz /tmp/splunk-add-on-for-kafka_110.tgz\n# RUN tar -zxf /tmp/splunk-add-on-for-kafka_110.tgz -C /var/opt/splunk/etc/apps\n# RUN rm -f /tmp/splunk-add-on-for-kafka_110.tgz\n# Kafka connect app (beta)\n# COPY splunk_apps/kafka-connect-splunk.tar.gz /tmp\n# RUN tar -zxf /tmp/kafka-connect-splunk.tar.gz -C /var/opt/splunk/etc/apps\n# RUN rm -f /tmp/kafka-connect-splunk.tar.gz\n# Configuring indexers [include hadoop vidx]\nCOPY splunk_apps/indexes.tgz /tmp/indexes.tgz\nRUN tar xzf /tmp/indexes.tgz -C /opt/splunk\n# Install Splunk apps [dbconnect 2.x, kafka addon,] & dashboards [search app]\nCOPY splunk_apps/apps_configs.tgz /tmp/apps_configs.tgz\nRUN tar xzf /tmp/apps_configs.tgz -C /var/opt/splunk/etc/apps/\nRUN mkdir -p /var/opt/splunk/etc/apps/user-prefs/local\nCOPY configs/user-prefs.conf /var/opt/splunk/etc/apps/user-prefs/local\nRUN chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} /var/opt/splunk/etc/apps\nRUN rm -f /tmp/indexes.tgz /tmp/apps_configs.tgz\n# --------------------------------------------------------------\nRUN printf \"\\033[1;36m\\n\\n-------------------- Installing & Configuring sshd ---------------------\\n\"\nRUN apt-get install openssh-server rsync -qq -y\nRUN apt-get update -qq \\\n && printf \"\\033[1;36m\"\n# passwordless ssh login\nRUN ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa\nRUN cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\nRUN chmod 0600 ~/.ssh/authorized_keys\nRUN echo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config\nRUN echo \"UserKnownHostsFile=/dev/null\" >> /etc/ssh/ssh_config\n# RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN echo \"ListenAddress 0.0.0.0\" >> /etc/ssh/sshd_config\n# Share static host keys so we dont get ssh warning with different builds\nCOPY configs/ssh_host_keys.tgz /tmp/ssh_host_keys.tgz\nRUN tar -zxf /tmp/ssh_host_keys.tgz -C /etc/ssh\n#  SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nRUN echo root:splunk123 | chpasswd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\nRUN rm -f /tmp/ssh_host_keys.tgz\nCOPY scripts/ssh /etc/init.d/\nRUN chmod +x /etc/init.d/ssh\n# --------------------------------------------------------------\nRUN printf \"\\033[1;37m\\n\\n-------------------- Installing Hadoop(Yarn) ---------------------\\n\"\n# force hadoop to use different ssh port\n# ENV HADOOP_SSH_OPTS \"-p 2122\"\n# Make the default user \"splunk\" that write to hdfs to address the permission issue\nENV HADOOP_USER_NAME=\"splunk\"\n# Download sample hadoop data\nRUN wget -qO /tmp/Hunkdata.json.gz http://www.splunk.com/web_assets/hunk/Hunkdata.json.gz\n# COPY Packages_download/Hunkdata.json.gz /tmp\nCOPY /data/avro_07_31_2017.avro /tmp/avro_07_31_2017.avro\nCOPY /data/avro_08_01_2017.avro /tmp/avro_08_01_2017.avro\nRUN wget -qO /tmp/hadoop-2.9.0.tar.gz http://apache.claz.org/hadoop/common/hadoop-2.9.0/hadoop-2.9.0.tar.gz\n# COPY Packages_download/hadoop-2.9.0.tar.gz /tmp\nRUN tar -zxf /tmp/hadoop-2.9.0.tar.gz -C /opt\nRUN rm -f /tmp/hadoop-2.9.0.tar.gz\n# Customization\nRUN mkdir -p /opt/hadoop-2.9.0/etc/input\nRUN cp /opt/hadoop-2.9.0/etc/hadoop/*.xml /opt/hadoop-2.9.0/etc/input/\n# RUN /bin/bash -c \"/opt/hadoop-2.9.0/bin/hadoop jar /opt/hadoop-2.9.0/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.9.0.jar grep input output 'dfs[a-z.]+'\"\nCOPY configs/core-site.xml /opt/hadoop-2.9.0/etc/hadoop/core-site.xml\nCOPY configs/hdfs-site.xml /opt/hadoop-2.9.0/etc/hadoop/hdfs-site.xml\nCOPY configs/mapred-site.xml /opt/hadoop-2.9.0/etc/hadoop/mapred-site.xml\nCOPY configs/yarn-site.xml /opt/hadoop-2.9.0/etc/hadoop/yarn-site.xml\n# Format HDFS\nRUN /opt/hadoop-2.9.0/bin/hdfs namenode -format -force\n# RUN printf \"\\033[0;36m\"\n# COPY scripts/startup_hadoop.sh /sbin/startup_hadoop.sh\n# RUN chmod +x /sbin/startup_hadoop.sh\nCOPY scripts/hadoop /etc/init.d/\nCOPY scripts/yarn /etc/init.d/\nCOPY scripts/start-yarn.sh /opt/hadoop-2.9.0/sbin/\nCOPY scripts/stop-yarn.sh /opt/hadoop-2.9.0/sbin/\nCOPY scripts/start-dfs.sh /opt/hadoop-2.9.0/sbin/\nCOPY scripts/stop-dfs.sh /opt/hadoop-2.9.0/sbin/\nRUN chmod +x /etc/init.d/hadoop\nRUN chmod +x /etc/init.d/yarn\nRUN chmod +x /opt/hadoop-2.9.0/sbin/start-yarn.sh\nRUN chmod +x /opt/hadoop-2.9.0/sbin/stop-yarn.sh\nRUN chmod +x /opt/hadoop-2.9.0/sbin/start-dfs.sh\nRUN chmod +x /opt/hadoop-2.9.0/sbin/stop-dfs.sh\n# --------------------------------------------------------------\n# >>>>>> disable Zookeeper install. It is embemded in Kafka install <<<<<<\n# https://www.tutorialspoint.com/apache_kafka/apache_kafka_basic_operations.htm\n# RUN printf \"\\033[1;36m\\n\\n-------------------- Installing ZooKeeper ---------------------\\n\"\n# RUN wget -qO /tmp/zookeeper-3.4.11.tar.gz  http://apache.claz.org/zookeeper/zookeeper-3.4.11/zookeeper-3.4.11.tar.gz\n# COPY Packages_download/zookeeper-3.4.11.tar.gz  /tmp\n# RUN tar -zxf /tmp/zookeeper-3.4.11.tar.gz -C /opt\n# RUN rm -f /tmp/zookeeper-3.4.11.tar.gz\n# Customization\n# COPY configs/zoo.cfg /opt/zookeeper-3.4.11/conf/zoo.cfg\n# --------------------------------------------------------------\n# >>>>>> disable Zookeeper install. It is embemded in Kafka install <<<<<<\nRUN printf \"\\033[1;33m\\n\\n-------------------- Installing Kafka ---------------------\\n\"\nRUN wget -qO /tmp/kafka_2.11-1.0.0.tgz http://apache.claz.org/kafka/1.0.0/kafka_2.11-1.0.0.tgz\n# COPY Packages_download/kafka_2.11-1.0.0.tgz /tmp\nRUN tar -zxf /tmp/kafka_2.11-1.0.0.tgz -C /opt\nRUN rm -f /tmp/kafka_2.11-1.0.0.tgz\nCOPY data/sample_kafka.log /tmp/sample_kafka.log\n# COPY scripts/startup_zoo_kafka.sh /sbin/startup_zoo_kafka.sh\n# RUN chmod +x /sbin/startup_zoo_kafka.sh\nCOPY scripts/zookeeper-server-start.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/zookeeper-server-stop.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/kafka-server-stop.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/kafka-server-start.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/kafka /etc/init.d/\nCOPY scripts/zookeeper /etc/init.d/\nRUN chmod +x /etc/init.d/kafka\nRUN chmod +x /etc/init.d/zookeeper\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/zookeeper-server-start.sh\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/zookeeper-server-stop.sh\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/kafka-server-stop.sh\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/kafka-server-start.sh\n# --------------------------------------------------------------\nRUN printf \"\\033[1;34m\\n\\n-------------------- Installing Apache NIFI ---------------------\\n\"\nRUN wget -qO /tmp/nifi-1.4.0-bin.tar.gz http://apache.claz.org/nifi/1.4.0/nifi-1.4.0-bin.tar.gz\n# COPY Packages_download/nifi-1.4.0-bin.tar.gz /tmp\nRUN tar -xzf /tmp/nifi-1.4.0-bin.tar.gz -C /opt\nRUN rm -f /tmp/nifi-1.4.0-bin.tar.gz\n# need uuidgen command for nifi UI configuration\n# RUN apt-get -qq install -y uuid-runtime\n# create nifi data directory with sample access combined logs\nRUN mkdir /opt/nifi-1.4.0/splunk_sample_data\nCOPY data/access.log /opt/nifi-1.4.0/splunk_sample_data/access1.log\nCOPY data/access.log /opt/nifi-1.4.0/splunk_sample_data/access2.log\nCOPY data/access.log /opt/nifi-1.4.0/splunk_sample_data/access3.log\nCOPY configs/flow.xml.gz /opt/nifi-1.4.0/conf\n# COPY scripts/startup_nifi.sh /sbin/startup_nifi.sh\n# RUN chmod +x /sbin/startup_nifi.sh\nCOPY scripts/nifi /etc/init.d/\nCOPY scripts/nifi.sh /opt/nifi-1.4.0/bin/\nRUN chmod +x /etc/init.d/nifi\nRUN chmod +x /opt/nifi-1.4.0/bin/nifi.sh\n# nifi customization\nRUN echo \"java=/usr/lib/jvm/java-8-oracle/\" >> /opt/nifi-1.4.0/conf/bootstrap\nRUN echo \"\" >> /opt/nifi-1.4.0/bin/nifi-env.sh\n# this template will be manually imported in the UI (file is loaded from local disk)\nCOPY configs/Splunk_HEC_TCP_RESTQuery.xml /tmp/Splunk_HEC_TCP_RESTQuery.xml\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-8-oracle/\" >> /opt/nifi-1.4.0/bin/nifi-env.sh\n# change default nifi port to 9090\nRUN sed -i 's/nifi.web.http.port=8080/nifi.web.http.port=9090/' /opt/nifi-1.4.0/conf/nifi.properties\n# --------------------------------------------------------------\n# clean up /tmp\nRUN printf \"\\033[1;37m\\n\\n-------------------- /tmp cleanup ---------------------\\n\"\n# \t/tmp/Hunkdata.json.gz /tmp/world.sql  dont remove now. will be used with startup scripts later\n# COPY configs/local.tar /tmp\n# RUN tar -xvf /tmp/local.tar /opt/splunk/etc/apps/splunk_app_db_connect/local/\n# startup scripts with be kicked off from supervisord.conf\n#  Ports Splunk Web, Splunk Daemon, KVStore, Splunk Indexing Port, Network Input, HTTP Event Collector\nEXPOSE 8000/tcp 8089/tcp 8191/tcp 9997/tcp 1514/udp 8088/tcp 9088/tcp\n# MySQL\nEXPOSE 3306/tcp\n# supervisord web\nEXPOSE 9001/tcp\n# Hadoop: Resource mgr:8088  namednode:50070  hdfs:9000\nEXPOSE 50070/tcp 9000/tcp 8088/tcp 2122/tcp\n#  Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#  Mapred ports\nEXPOSE 10020/tcp 19888/tcp\n# Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp 10020/tcp 19888/tcp 10200/tcp\n# Other ports\nEXPOSE 49707/tcp 2122/tcp\n# NIFI\nEXPOSE 9090/tcp\nWORKDIR /opt/splunk\n#  Configurations folder, var folder for everything (indexes, logs, kvstore)\nVOLUME [ \"/opt/splunk/etc\", \"/opt/splunk/var\", \"/var/lib/mysql\" ]\nCMD [\"/usr/bin/supervisord\"]\nRUN printf \"\\033[1;33m\\n\\n-------------------- We are done baby! ---------------------\\033[0m\\n\"\n","injectedSmells":[],"originalDockerfileHash":"072d81a68adfea22917f9ef3d568d6d5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  -------------------------------------------------------\n#   $VERSION: [v1.1-8] $\n#   $DATE:    [Wed Dec 27,2017 - 06:18:00PM -0600] $\n#   $AUTHOR:  [mhassan2 <mhassan@splunk.com>] $\n#  Increase OSX default docker size link:\n#  https://forums.docker.com/t/increase-docker-container-disk-space-on-os-x/26725/2\n#  https://github.com/docker/dceu_tutorials/blob/master/07-volumes.md\n#  To build (from build dir): (11-15 mins)\n#  time docker build --no-cache=true -f Dockerfile.datafabric -t splunknbox/splunk_datafabric .\n#  To run: (cached: 3sec  Download: 5 mins)\n#  time docker run -d --name=DF01 --hostname=DF01 -p 2122:22 -p 8000:8000 -p 8020:8020 -p 8030:8030 -p 8032:8032 -p 8088:8088 -p 9090:9090 -p 50070:50070 splunknbox/splunk_datafabric\n#  OR\n#  time docker run -d --name=DF01 --hostname=DF01 -p 2122:22 -p 8000:8000 -p 9090:9090 -p 50070:50070 splunknbox/splunk_datafabric\n#  Push to splunknbox repo on docker hub: (~115 mins)\n#  time docker push splunknbox/splunk_datafabric\n#  -------------------------------------------------------\n#  --------COLORES ESCAPE CODES------------\n#  for i in `seq 1 100`; do printf \"\\033[48;5;${i}m${i} \"; done\n#  NC='\\033[0m' # No Color\n#  Black=\"\\033[0;30m\";             White=\"\\033[1;37m\"\n#  Red=\"\\033[0;31m\";               LightRed=\"\\033[1;31m\"\n#  Green=\"\\033[0;32m\";             LightGreen=\"\\033[1;32m\"\n#  BrownOrange=\"\\033[0;33m\";       Yellow=\"\\033[1;33m\"\n#  Blue=\"\\033[0;34m\";              LightBlue=\"\\033[1;34m\"\n#  Purple=\"\\033[0;35m\";            LightPurple=\"\\033[1;35m\"\n#  Cyan=\"\\033[0;36m\";              LightCyan=\"\\033[1;36m\"\n#  LightGray=\"\\033[0;37m\";         DarkGray=\"\\033[1;30m\"\n#  BlackOnGreen=\"\\033[30;48;5;82m\"\n#  WhiteOnBurg=\"\\033[30;48;5;88m\"\n#\n#  BoldWhiteOnRed=\"\\033[1;1;5;41m\"\n#  BoldWhiteOnGreen=\"\\033[1;1;5;42m\"\n#  BoldWhiteOnYellow=\"\\033[1;1;5;43m\"\n#  BoldWhiteOnBlue=\"\\033[1;1;5;44m\"\n#  BoldWhiteOnPink=\"\\033[1;1;5;45m\"\n#  BoldWhiteOnTurquoise=\"\\033[1;1;5;46m\"\n#  BoldYellowOnBlue=\"\\033[1;33;44m\"\n#  BoldYellowOnPurple=\"\\033[1;33;44m\"\n#  LABEL com.splunk.version=\"0.3-beta\"\n#  LABEL vendor=\"Splunk>\"\n#  LABEL com.splunk.release-date=\"2017-02-12\"\n#  LABEL com.splunk.version.is-production=\"\"\nFROM debian:jessie\nENV GIT_VERSION=\"$VERSION: [v1.1-8] $\"\nENV CONTAINER_VER=\"1.0\"\nMAINTAINER mhassan@splunk.com version: $CONTAINER_VER\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"linux\"\n#  ENV SPLUNK_VERSION=\"6.4.3\" SPLUNK_BUILD=\"b03109c2bad4\"\n#  ENV SPLUNK_VERSION=\"6.4.4\" SPLUNK_BUILD=\"b53a5c14bb5e\"\n#  ENV SPLUNK_VERSION=\"6.5.0\" SPLUNK_BUILD=\"59c8927def0f\"\n#  ENV SPLUNK_VERSION=\"6.5.1\" SPLUNK_BUILD=\"f74036626f0c\"\n#  ENV SPLUNK_VERSION=\"6.5.2\" SPLUNK_BUILD=\"67571ef4b87d\"\n#  ENV SPLUNK_VERSION=\"6.5.3\" SPLUNK_BUILD=\"36937ad027d4\"\n#  ENV SPLUNK_VERSION=\"6.5.4\" SPLUNK_BUILD=\"adb84211dd7c\"\n#  ENV SPLUNK_VERSION=\"6.5.5\" SPLUNK_BUILD=\"586c3ec08cfb\"\n#  ENV SPLUNK_VERSION=\"6.6.0\" SPLUNK_BUILD=\"1c4f3bbe1aea\"\n#  ENV SPLUNK_VERSION=\"6.6.1\" SPLUNK_BUILD=\"aeae3fe0c5af\"\n#  ENV SPLUNK_VERSION=\"6.6.2\" SPLUNK_BUILD=\"4b804538c686\"\n#  ENV SPLUNK_VERSION=\"6.6.3\" SPLUNK_BUILD=\"e21ee54bc796\"\n#  ENV SPLUNK_VERSION=\"7.0.0\" SPLUNK_BUILD=\"c8a78efdd40f\"\nENV SPLUNK_VERSION=\"7.0.1\" \\\n    SPLUNK_BUILD=\"2b5b15c4ee89\"\nENV SPLUNK_PRODUCT=\"splunk\"\nENV SPLUNK_FILENAME=\"splunk-${SPLUNK_VERSION}-${SPLUNK_BUILD}-Linux-x86_64.tgz\"\nENV SPLUNK_HOME=\"/opt/splunk\"\nENV SPLUNK_GROUP=\"splunk\"\nENV SPLUNK_USER=\"splunk\"\nENV SPLUNK_BACKUP_DEFAULT_ETC=\"/var/opt/splunk\"\nRUN printf \"\\033[1;33m\\n\\n-------------------- Installing Misc Stuff ---------------------\\n\"\nRUN apt-get update -qq \\\n && printf \"\\033[1;33m\"\nRUN apt-get install apt-utils lsb-release curl -qq -y \\\n && apt-get update \\\n && printf \"\\033[1;33m\"\n#  RUN apt-get -qq update && printf \"\\033[1;33m\"\nRUN apt-get install wget sudo vim net-tools telnet dnsutils -qq -y \\\n && apt-get update -qq\nCOPY configs/containers.bashrc /root/.bashrc\nCOPY configs/containers.vimrc /root/.vimrc\nCOPY configs/environment /etc\nRUN printf \"\\033[1;32m\\n\\n-------------------- Installing Splunk ---------------------\\n\"\n#   add splunk:splunk user\nRUN groupadd -r ${SPLUNK_GROUP} \\\n && useradd -r -m -g ${SPLUNK_GROUP} ${SPLUNK_USER}\n#   make the \"en_US.UTF-8\" locale so splunk will be utf-8 enabled by default\nRUN apt-get install locales -qq -y \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\n#   pdfgen dependency\nRUN apt-get install libgssapi-krb5-2 -qq -y\nRUN apt-get update -qq \\\n && printf \"\\033[1;32m\"\n#   Download official Splunk release, verify checksum and unzip in /opt/splunk\n#   Also backup etc folder, so it will be later copied to the linked volume\nRUN mkdir -p ${SPLUNK_HOME} \\\n && wget -qO /tmp/${SPLUNK_FILENAME} https://download.splunk.com/products/${SPLUNK_PRODUCT}/releases/${SPLUNK_VERSION}/linux/${SPLUNK_FILENAME} \\\n && wget -qO /tmp/${SPLUNK_FILENAME}.md5 https://download.splunk.com/products/${SPLUNK_PRODUCT}/releases/${SPLUNK_VERSION}/linux/${SPLUNK_FILENAME}.md5 \\\n && (cd /tmp \\\n && md5sum -c ${SPLUNK_FILENAME}.md5 ) \\\n && tar -xzf /tmp/${SPLUNK_FILENAME} --strip 1 -C ${SPLUNK_HOME} \\\n && rm /tmp/${SPLUNK_FILENAME} \\\n && rm /tmp/${SPLUNK_FILENAME}.md5 \\\n && mkdir -p /var/opt/splunk \\\n && cp -R ${SPLUNK_HOME}/etc ${SPLUNK_BACKUP_DEFAULT_ETC} \\\n && rm -fR ${SPLUNK_HOME}/etc \\\n && chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} ${SPLUNK_HOME} \\\n && chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} ${SPLUNK_BACKUP_DEFAULT_ETC} \\\n && rm -rf /var/lib/apt/lists/*\n#      && apt-get purge -y --auto-remove wget \\\nCOPY scripts/splunk_web_conf.sh /sbin/splunk_web_conf.sh\nRUN chmod +x /sbin/splunk_web_conf.sh\nCOPY scripts/splunk_first_run.sh /sbin/splunk_first_run.sh\nRUN chmod +x /sbin/splunk_first_run.sh\nCOPY scripts/splunk /etc/init.d\nRUN chmod +x /etc/init.d/splunk\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;32m\\n\\n-------------------- Downloading WORLD database ---------------------\\n\"\nRUN wget -qO /tmp/world.sql.gz http://downloads.mysql.com/docs/world.sql.gz\n#  COPY Packages_download/world.sql.gz  /tmp\n#  COPY scripts/startup_mysql.sh /sbin/startup_mysql.sh\n#  RUN chmod +x /sbin/startup_mysql.sh\nRUN gunzip /tmp/world.sql.gz\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;34m\\n\\n-------------------- Installing MySQL ---------------------\\n\"\nRUN apt-get update -qq \\\n && printf \"\\033[1;34m\"\nRUN apt-get install mysql-server -qq -y\n#  copy the customized mysql startup script\nCOPY scripts/mysql /etc/init.d/mysql\nRUN chmod +x /etc/init.d/mysql\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;36m\\n\\n-------------------- Installing supervisord ---------------------\\n\"\nRUN apt-get update -qq \\\n && printf \"\\033[1;36m\"\nRUN apt-get install supervisor -qq -y\nCOPY configs/supervisord.conf /etc/supervisor/supervisord.conf\n#  configure built-in webserver\n#  RUN mkdir -p /etc/nginx/sites-available/\n#  RUN mkdir -p /etc/nginx/sites-enable/\n#  COPY configs/supervisord.web /etc/nginx/sites-available/supervisord\n#  RUN  ln -s /etc/nginx/sites-available/supervisord /etc/nginx/sites-enable/supervisord\n#  --------------------------------------------------------------\n#  http://www.webupd8.org/2014/03/how-to-install-oracle-java-8-in-debian.html\nRUN printf \"\\033[1;33m\\n\\n-------------------- Installing Java 8 ---------------------\\n\"\n#  RUN apt-get update\t&& apt-get install -y software-properties-common && apt-get update\nRUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list\nRUN echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886\nRUN printf \"\\033[1;33m\"\nRUN apt-get update -qq \\\n && printf \"\\033[1;33\"\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install oracle-java8-installer -qq -y\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-oracle\"\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;32m\\n\\n-------------------- Installing splunk apps: DBconnect, MySQL driver & Kafka add-on ---------------------\\n\"\n#  order of splunk apps install is important. First DBconnet then the MySQL driver\n#  DBconnect App 3.11\nCOPY splunk_apps/splunk-db-connect_311.tgz /tmp/splunk-db-connect_311.tgz\nRUN tar -zxf /tmp/splunk-db-connect_311.tgz -C /var/opt/splunk/etc/apps\nRUN rm -f /tmp/splunk-db-connect_311.tgz\n#  MySQL java driver\nRUN wget -qO /tmp/mysql-connector-java-5.1.44.tar.gz https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.44.tar.gz\n#  COPY Packages_download/mysql-connector-java-5.1.44.tar.gz  /tmp\nRUN tar -zxf /tmp/mysql-connector-java-5.1.44.tar.gz -C /var/opt/splunk/etc/apps/splunk_app_db_connect/drivers/\nRUN rm -f /tmp/mysql-connector-java-5.1.44.tar.gz\n#  Kafka add-on\n#  COPY splunk_apps/splunk-add-on-for-kafka_110.tgz /tmp/splunk-add-on-for-kafka_110.tgz\n#  RUN tar -zxf /tmp/splunk-add-on-for-kafka_110.tgz -C /var/opt/splunk/etc/apps\n#  RUN rm -f /tmp/splunk-add-on-for-kafka_110.tgz\n#  Kafka connect app (beta)\n#  COPY splunk_apps/kafka-connect-splunk.tar.gz /tmp\n#  RUN tar -zxf /tmp/kafka-connect-splunk.tar.gz -C /var/opt/splunk/etc/apps\n#  RUN rm -f /tmp/kafka-connect-splunk.tar.gz\n#  Configuring indexers [include hadoop vidx]\nCOPY splunk_apps/indexes.tgz /tmp/indexes.tgz\nRUN tar xzf /tmp/indexes.tgz -C /opt/splunk\n#  Install Splunk apps [dbconnect 2.x, kafka addon,] & dashboards [search app]\nCOPY splunk_apps/apps_configs.tgz /tmp/apps_configs.tgz\nRUN tar xzf /tmp/apps_configs.tgz -C /var/opt/splunk/etc/apps/\nRUN mkdir -p /var/opt/splunk/etc/apps/user-prefs/local\nCOPY configs/user-prefs.conf /var/opt/splunk/etc/apps/user-prefs/local\nRUN chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} /var/opt/splunk/etc/apps\nRUN rm -f /tmp/indexes.tgz /tmp/apps_configs.tgz\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;36m\\n\\n-------------------- Installing & Configuring sshd ---------------------\\n\"\nRUN apt-get install openssh-server rsync -qq -y\nRUN apt-get update -qq \\\n && printf \"\\033[1;36m\"\n#  passwordless ssh login\nRUN ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa\nRUN cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\nRUN chmod 0600 ~/.ssh/authorized_keys\nRUN echo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config\nRUN echo \"UserKnownHostsFile=/dev/null\" >> /etc/ssh/ssh_config\n#  RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN echo \"ListenAddress 0.0.0.0\" >> /etc/ssh/sshd_config\n#  Share static host keys so we dont get ssh warning with different builds\nCOPY configs/ssh_host_keys.tgz /tmp/ssh_host_keys.tgz\nRUN tar -zxf /tmp/ssh_host_keys.tgz -C /etc/ssh\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nRUN echo root:splunk123 | chpasswd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\nRUN rm -f /tmp/ssh_host_keys.tgz\nCOPY scripts/ssh /etc/init.d/\nRUN chmod +x /etc/init.d/ssh\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;37m\\n\\n-------------------- Installing Hadoop(Yarn) ---------------------\\n\"\n#  force hadoop to use different ssh port\n#  ENV HADOOP_SSH_OPTS \"-p 2122\"\n#  Make the default user \"splunk\" that write to hdfs to address the permission issue\nENV HADOOP_USER_NAME=\"splunk\"\n#  Download sample hadoop data\nRUN wget -qO /tmp/Hunkdata.json.gz http://www.splunk.com/web_assets/hunk/Hunkdata.json.gz\n#  COPY Packages_download/Hunkdata.json.gz /tmp\nCOPY /data/avro_07_31_2017.avro /tmp/avro_07_31_2017.avro\nCOPY /data/avro_08_01_2017.avro /tmp/avro_08_01_2017.avro\nRUN wget -qO /tmp/hadoop-2.9.0.tar.gz http://apache.claz.org/hadoop/common/hadoop-2.9.0/hadoop-2.9.0.tar.gz\n#  COPY Packages_download/hadoop-2.9.0.tar.gz /tmp\nRUN tar -zxf /tmp/hadoop-2.9.0.tar.gz -C /opt\nRUN rm -f /tmp/hadoop-2.9.0.tar.gz\n#  Customization\nRUN mkdir -p /opt/hadoop-2.9.0/etc/input\nRUN cp /opt/hadoop-2.9.0/etc/hadoop/*.xml /opt/hadoop-2.9.0/etc/input/\n#  RUN /bin/bash -c \"/opt/hadoop-2.9.0/bin/hadoop jar /opt/hadoop-2.9.0/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.9.0.jar grep input output 'dfs[a-z.]+'\"\nCOPY configs/core-site.xml /opt/hadoop-2.9.0/etc/hadoop/core-site.xml\nCOPY configs/hdfs-site.xml /opt/hadoop-2.9.0/etc/hadoop/hdfs-site.xml\nCOPY configs/mapred-site.xml /opt/hadoop-2.9.0/etc/hadoop/mapred-site.xml\nCOPY configs/yarn-site.xml /opt/hadoop-2.9.0/etc/hadoop/yarn-site.xml\n#  Format HDFS\nRUN /opt/hadoop-2.9.0/bin/hdfs namenode -format -force\n#  RUN printf \"\\033[0;36m\"\n#  COPY scripts/startup_hadoop.sh /sbin/startup_hadoop.sh\n#  RUN chmod +x /sbin/startup_hadoop.sh\nCOPY scripts/hadoop /etc/init.d/\nCOPY scripts/yarn /etc/init.d/\nCOPY scripts/start-yarn.sh /opt/hadoop-2.9.0/sbin/\nCOPY scripts/stop-yarn.sh /opt/hadoop-2.9.0/sbin/\nCOPY scripts/start-dfs.sh /opt/hadoop-2.9.0/sbin/\nCOPY scripts/stop-dfs.sh /opt/hadoop-2.9.0/sbin/\nRUN chmod +x /etc/init.d/hadoop\nRUN chmod +x /etc/init.d/yarn\nRUN chmod +x /opt/hadoop-2.9.0/sbin/start-yarn.sh\nRUN chmod +x /opt/hadoop-2.9.0/sbin/stop-yarn.sh\nRUN chmod +x /opt/hadoop-2.9.0/sbin/start-dfs.sh\nRUN chmod +x /opt/hadoop-2.9.0/sbin/stop-dfs.sh\n#  --------------------------------------------------------------\n#  >>>>>> disable Zookeeper install. It is embemded in Kafka install <<<<<<\n#  https://www.tutorialspoint.com/apache_kafka/apache_kafka_basic_operations.htm\n#  RUN printf \"\\033[1;36m\\n\\n-------------------- Installing ZooKeeper ---------------------\\n\"\n#  RUN wget -qO /tmp/zookeeper-3.4.11.tar.gz  http://apache.claz.org/zookeeper/zookeeper-3.4.11/zookeeper-3.4.11.tar.gz\n#  COPY Packages_download/zookeeper-3.4.11.tar.gz  /tmp\n#  RUN tar -zxf /tmp/zookeeper-3.4.11.tar.gz -C /opt\n#  RUN rm -f /tmp/zookeeper-3.4.11.tar.gz\n#  Customization\n#  COPY configs/zoo.cfg /opt/zookeeper-3.4.11/conf/zoo.cfg\n#  --------------------------------------------------------------\n#  >>>>>> disable Zookeeper install. It is embemded in Kafka install <<<<<<\nRUN printf \"\\033[1;33m\\n\\n-------------------- Installing Kafka ---------------------\\n\"\nRUN wget -qO /tmp/kafka_2.11-1.0.0.tgz http://apache.claz.org/kafka/1.0.0/kafka_2.11-1.0.0.tgz\n#  COPY Packages_download/kafka_2.11-1.0.0.tgz /tmp\nRUN tar -zxf /tmp/kafka_2.11-1.0.0.tgz -C /opt\nRUN rm -f /tmp/kafka_2.11-1.0.0.tgz\nCOPY data/sample_kafka.log /tmp/sample_kafka.log\n#  COPY scripts/startup_zoo_kafka.sh /sbin/startup_zoo_kafka.sh\n#  RUN chmod +x /sbin/startup_zoo_kafka.sh\nCOPY scripts/zookeeper-server-start.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/zookeeper-server-stop.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/kafka-server-stop.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/kafka-server-start.sh /opt/kafka_2.11-1.0.0/bin\nCOPY scripts/kafka /etc/init.d/\nCOPY scripts/zookeeper /etc/init.d/\nRUN chmod +x /etc/init.d/kafka\nRUN chmod +x /etc/init.d/zookeeper\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/zookeeper-server-start.sh\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/zookeeper-server-stop.sh\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/kafka-server-stop.sh\nRUN chmod +x /opt/kafka_2.11-1.0.0/bin/kafka-server-start.sh\n#  --------------------------------------------------------------\nRUN printf \"\\033[1;34m\\n\\n-------------------- Installing Apache NIFI ---------------------\\n\"\nRUN wget -qO /tmp/nifi-1.4.0-bin.tar.gz http://apache.claz.org/nifi/1.4.0/nifi-1.4.0-bin.tar.gz\n#  COPY Packages_download/nifi-1.4.0-bin.tar.gz /tmp\nRUN tar -xzf /tmp/nifi-1.4.0-bin.tar.gz -C /opt\nRUN rm -f /tmp/nifi-1.4.0-bin.tar.gz\n#  need uuidgen command for nifi UI configuration\n#  RUN apt-get -qq install -y uuid-runtime\n#  create nifi data directory with sample access combined logs\nRUN mkdir /opt/nifi-1.4.0/splunk_sample_data\nCOPY data/access.log /opt/nifi-1.4.0/splunk_sample_data/access1.log\nCOPY data/access.log /opt/nifi-1.4.0/splunk_sample_data/access2.log\nCOPY data/access.log /opt/nifi-1.4.0/splunk_sample_data/access3.log\nCOPY configs/flow.xml.gz /opt/nifi-1.4.0/conf\n#  COPY scripts/startup_nifi.sh /sbin/startup_nifi.sh\n#  RUN chmod +x /sbin/startup_nifi.sh\nCOPY scripts/nifi /etc/init.d/\nCOPY scripts/nifi.sh /opt/nifi-1.4.0/bin/\nRUN chmod +x /etc/init.d/nifi\nRUN chmod +x /opt/nifi-1.4.0/bin/nifi.sh\n#  nifi customization\nRUN echo \"java=/usr/lib/jvm/java-8-oracle/\" >> /opt/nifi-1.4.0/conf/bootstrap\nRUN echo \"\" >> /opt/nifi-1.4.0/bin/nifi-env.sh\n#  this template will be manually imported in the UI (file is loaded from local disk)\nCOPY configs/Splunk_HEC_TCP_RESTQuery.xml /tmp/Splunk_HEC_TCP_RESTQuery.xml\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-8-oracle/\" >> /opt/nifi-1.4.0/bin/nifi-env.sh\n#  change default nifi port to 9090\nRUN sed -i 's/nifi.web.http.port=8080/nifi.web.http.port=9090/' /opt/nifi-1.4.0/conf/nifi.properties\n#  --------------------------------------------------------------\n#  clean up /tmp\nRUN printf \"\\033[1;37m\\n\\n-------------------- /tmp cleanup ---------------------\\n\"\n#  \t/tmp/Hunkdata.json.gz /tmp/world.sql  dont remove now. will be used with startup scripts later\n#  COPY configs/local.tar /tmp\n#  RUN tar -xvf /tmp/local.tar /opt/splunk/etc/apps/splunk_app_db_connect/local/\n#  startup scripts with be kicked off from supervisord.conf\n#   Ports Splunk Web, Splunk Daemon, KVStore, Splunk Indexing Port, Network Input, HTTP Event Collector\nEXPOSE 8000/tcp 8089/tcp 8191/tcp 9997/tcp 1514/udp 8088/tcp 9088/tcp\n#  MySQL\nEXPOSE 3306/tcp\n#  supervisord web\nEXPOSE 9001/tcp\n#  Hadoop: Resource mgr:8088  namednode:50070  hdfs:9000\nEXPOSE 50070/tcp 9000/tcp 8088/tcp 2122/tcp\n#   Hdfs ports\nEXPOSE 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp 8020/tcp 9000/tcp\n#   Mapred ports\nEXPOSE 10020/tcp 19888/tcp\n#  Yarn ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp 10020/tcp 19888/tcp 10200/tcp\n#  Other ports\nEXPOSE 49707/tcp 2122/tcp\n#  NIFI\nEXPOSE 9090/tcp\nWORKDIR /opt/splunk\n#   Configurations folder, var folder for everything (indexes, logs, kvstore)\nVOLUME [ \"/opt/splunk/etc\", \"/opt/splunk/var\", \"/var/lib/mysql\" ]\nCMD [\"/usr/bin/supervisord\"]\nRUN printf \"\\033[1;33m\\n\\n-------------------- We are done baby! ---------------------\\033[0m\\n\"\n","originalDockerfileUglifiedHash":"f6796ee67e362ca64954c5c8964917fa","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f933de83c0bed1a8f7167f1ec8baeb7c517f89b3.dockerfile"}