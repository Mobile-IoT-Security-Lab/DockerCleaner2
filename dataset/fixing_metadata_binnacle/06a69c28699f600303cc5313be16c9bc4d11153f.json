{"seed":941101959,"processedDockerfileHash":"8ce10f308445d0d13eae283f3f5d2aef","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\n#   update\nRUN :\nRUN apt-get upgrade -y\n#   basic\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:2.17.1-1ubuntu0.17 wget=1.19.4-1ubuntu2.2 zsh=5.4.2-3ubuntu3.2 vim=2:8.0.1453-1ubuntu1.11 -y )\n#   only install python3 \n#   install python3 and pip3 and map to python and pip RUN apt-get install -y python3\nRUN ln -s /usr/bin/python3.6 /usr/bin/python\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends python3-pip=9.0.1-2.3~ubuntu1.18.04.8 -y )\nRUN ln -s /usr/bin/pip3 /usr/bin/pip\n#   install some basic pip packages\nRUN pip install ipython==8.12.0\nRUN pip install r2pipe==1.8.0\nRUN pip install git+https://github.com/arthaud/python3-pwntools.git\nRUN pip install frida-tools==12.1.1\n#   developing\nRUN (apt-get update ;apt-get install --no-install-recommends make=4.1-9.1ubuntu1 gcc=4:7.4.0-1ubuntu2.3 g++=4:7.4.0-1ubuntu2.3 cmake=3.10.2-1ubuntu2.18.04.2 -y )\n#   install oh-my-zsh with autosuggestions\nRUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true\nRUN sed -i -e 's/THEME=\"robbyrussell\"/THEME=\"avit\"/g' /root/.zshrc\nRUN git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions\nRUN echo 'source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh' >> /root/.zshrc\nRUN echo 'cd /root' >> /root/.zshrc\n#  ###############################################################################\n#   Basic Tools\n#  ###############################################################################\n#   make gitrepo directory\nRUN mkdir /root/git-repos\n#   install r2\nRUN git clone https://github.com/radare/radare2.git /root/git-repos/radare2\nRUN ./root/git-repos/radare2/sys/install.sh\n#   install keystone from source\nRUN git clone https://github.com/keystone-engine/keystone.git /root/git-repos/keystone\nRUN mkdir /root/git-repos/keystone/build\nRUN cd /root/git-repos/keystone/build \\\n && ../make-share.sh \\\n && make install\nRUN cd /root/git-repos/keystone/bindings/python \\\n && make install\nRUN ln -s /root/git-repos/keystone/build/llvm/lib/libkeystone.so /usr/local/lib/python3.6/dist-packages/keystone\n#   install capstone from source\nRUN git clone https://github.com/aquynh/capstone.git /root/git-repos/capstone\nRUN cd /root/git-repos/capstone \\\n && ./make.sh\nRUN cd /root/git-repos/capstone \\\n && ./make.sh install\nRUN cd /root/git-repos/capstone/bindings/python \\\n && make install\n#   install unicorn from source (it needs python2.x for installation)\n#   Note: python3 is not tested, for installation it needs python2 (28.2.2019)\n#   but it worked with my code snippets so I will try with python3\nRUN git clone https://github.com/unicorn-engine/unicorn.git /root/git-repos/unicorn\nRUN (apt-get update ;apt-get install --no-install-recommends python=2.7.15~rc1-1 -y )\nRUN cd /root/git-repos/unicorn \\\n && ./make.sh\nRUN cd /root/git-repos/unicorn \\\n && ./make.sh install\nRUN apt-get remove -y python2.7\nRUN apt-get autoremove -y\nRUN ln -s /usr/bin/python3.6 /usr/bin/python\nRUN cd /root/git-repos/unicorn/bindings/python \\\n && make install3\n#   Issue I faced:\n#  Traceback (most recent call last):\n#    File \"x86_sample.py\", line 634, in <module>\n#      test_i386_context_save()\n#    File \"x86_sample.py\", line 443, in test_i386_context_save\n#      mu.mem_write(address, code)\n#    File \"/usr/local/lib/python3.6/dist-packages/unicorn-1.0.2-py3.6.egg/unicorn/unicorn.py\", line 438, in mem_write\n#  ctypes.ArgumentError: argument 3: <class 'TypeError'>: wrong type\n#\n#   this happens when the code has the wrong type, for example\n#   code = '\\x40' -> not working\n#   code = \"\\x40\" -> not working\n#   code = b'\\x40' -> working\n#   code = b\"\\x40\" -> working\n#   install ropper (needs filebytes)\nRUN git clone https://github.com/sashs/Ropper.git /root/git-repos/ropper\nRUN pip install filebytes==0.10.2\nRUN cd /root/git-repos/ropper \\\n && python setup.py install\n#   install binwalk\n#  RUN git clone https://github.com/ReFirmLabs/binwalk.git /root/git-repos/binwalk\n#  RUN cd /root/git-repos/binwalk && python setup.py install\n#  RUN pip install pylzma\n#   install Triton\n#  https://github.com/JonathanSalwan/Triton/\n#   pwndbg (for heapanlysis)\nRUN git clone https://github.com/pwndbg/pwndbg.git /root/git-repos/pwndbg\nRUN cd /root/git-repos/pwndbg \\\n && ./setup.sh\n#  ###############################################################################\n#   Reversing ARM-Binaries ToolChain\n#  ###############################################################################\n#  RUN apt-get install -y qemu\n#  RUN apt-get install -y gcc-arm-linux-gnueabi g++-arm-linux-gnueabi\n#   Tested with:\n#   qemu-arm -singlestep -L /usr/arm-linux-gnueabi/ -g 1234 <binary> <args>  &\n#   r2 -a arm -b 32 -d gdb://127.0.0.1:1234\n#   works for static and dynamic linked binaries\n#   don't forget to add -L /usr/arm-linux-gnueabi for dynimcally linked binaries\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\n#  update\nRUN apt-get update\nRUN apt-get upgrade -y\n#  basic\nRUN apt-get install git wget zsh vim -y\n#  only install python3 \n#  install python3 and pip3 and map to python and pip RUN apt-get install -y python3\nRUN ln -s /usr/bin/python3.6 /usr/bin/python\nRUN apt-get update --fix-missing\nRUN apt-get install python3-pip -y\nRUN ln -s /usr/bin/pip3 /usr/bin/pip\n#  install some basic pip packages\nRUN pip install ipython\nRUN pip install r2pipe\nRUN pip install git+https://github.com/arthaud/python3-pwntools.git\nRUN pip install frida-tools\n#  developing\nRUN apt-get install make gcc g++ cmake -y\n#  install oh-my-zsh with autosuggestions\nRUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true\nRUN sed -i -e 's/THEME=\"robbyrussell\"/THEME=\"avit\"/g' /root/.zshrc\nRUN git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions\nRUN echo 'source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh' >> /root/.zshrc\nRUN echo 'cd /root' >> /root/.zshrc\n# ###############################################################################\n#  Basic Tools\n# ###############################################################################\n#  make gitrepo directory\nRUN mkdir /root/git-repos\n#  install r2\nRUN git clone https://github.com/radare/radare2.git /root/git-repos/radare2\nRUN ./root/git-repos/radare2/sys/install.sh\n#  install keystone from source\nRUN git clone https://github.com/keystone-engine/keystone.git /root/git-repos/keystone\nRUN mkdir /root/git-repos/keystone/build\nRUN cd /root/git-repos/keystone/build \\\n && ../make-share.sh \\\n && make install\nRUN cd /root/git-repos/keystone/bindings/python \\\n && make install\nRUN ln -s /root/git-repos/keystone/build/llvm/lib/libkeystone.so /usr/local/lib/python3.6/dist-packages/keystone\n#  install capstone from source\nRUN git clone https://github.com/aquynh/capstone.git /root/git-repos/capstone\nRUN cd /root/git-repos/capstone \\\n && ./make.sh\nRUN cd /root/git-repos/capstone \\\n && ./make.sh install\nRUN cd /root/git-repos/capstone/bindings/python \\\n && make install\n#  install unicorn from source (it needs python2.x for installation)\n#  Note: python3 is not tested, for installation it needs python2 (28.2.2019)\n#  but it worked with my code snippets so I will try with python3\nRUN git clone https://github.com/unicorn-engine/unicorn.git /root/git-repos/unicorn\nRUN apt-get install python -y\nRUN cd /root/git-repos/unicorn \\\n && ./make.sh\nRUN cd /root/git-repos/unicorn \\\n && ./make.sh install\nRUN apt-get remove -y python2.7\nRUN apt-get autoremove -y\nRUN ln -s /usr/bin/python3.6 /usr/bin/python\nRUN cd /root/git-repos/unicorn/bindings/python \\\n && make install3\n#  Issue I faced:\n# Traceback (most recent call last):\n#   File \"x86_sample.py\", line 634, in <module>\n#     test_i386_context_save()\n#   File \"x86_sample.py\", line 443, in test_i386_context_save\n#     mu.mem_write(address, code)\n#   File \"/usr/local/lib/python3.6/dist-packages/unicorn-1.0.2-py3.6.egg/unicorn/unicorn.py\", line 438, in mem_write\n# ctypes.ArgumentError: argument 3: <class 'TypeError'>: wrong type\n#\n#  this happens when the code has the wrong type, for example\n#  code = '\\x40' -> not working\n#  code = \"\\x40\" -> not working\n#  code = b'\\x40' -> working\n#  code = b\"\\x40\" -> working\n#  install ropper (needs filebytes)\nRUN git clone https://github.com/sashs/Ropper.git /root/git-repos/ropper\nRUN pip install filebytes\nRUN cd /root/git-repos/ropper \\\n && python setup.py install\n#  install binwalk\n# RUN git clone https://github.com/ReFirmLabs/binwalk.git /root/git-repos/binwalk\n# RUN cd /root/git-repos/binwalk && python setup.py install\n# RUN pip install pylzma\n#  install Triton\n# https://github.com/JonathanSalwan/Triton/\n#  pwndbg (for heapanlysis)\nRUN git clone https://github.com/pwndbg/pwndbg.git /root/git-repos/pwndbg\nRUN cd /root/git-repos/pwndbg \\\n && ./setup.sh\n# ###############################################################################\n#  Reversing ARM-Binaries ToolChain\n# ###############################################################################\n# RUN apt-get install -y qemu\n# RUN apt-get install -y gcc-arm-linux-gnueabi g++-arm-linux-gnueabi\n#  Tested with:\n#  qemu-arm -singlestep -L /usr/arm-linux-gnueabi/ -g 1234 <binary> <args>  &\n#  r2 -a arm -b 32 -d gdb://127.0.0.1:1234\n#  works for static and dynamic linked binaries\n#  don't forget to add -L /usr/arm-linux-gnueabi for dynimcally linked binaries\n","injectedSmells":[],"originalDockerfileHash":"8df67f87dbff52034800c3aa38181387","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\n#   update\nRUN apt-get update\nRUN apt-get upgrade -y\n#   basic\nRUN apt-get install git wget zsh vim -y\n#   only install python3 \n#   install python3 and pip3 and map to python and pip RUN apt-get install -y python3\nRUN ln -s /usr/bin/python3.6 /usr/bin/python\nRUN apt-get update --fix-missing\nRUN apt-get install python3-pip -y\nRUN ln -s /usr/bin/pip3 /usr/bin/pip\n#   install some basic pip packages\nRUN pip install ipython\nRUN pip install r2pipe\nRUN pip install git+https://github.com/arthaud/python3-pwntools.git\nRUN pip install frida-tools\n#   developing\nRUN apt-get install make gcc g++ cmake -y\n#   install oh-my-zsh with autosuggestions\nRUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true\nRUN sed -i -e 's/THEME=\"robbyrussell\"/THEME=\"avit\"/g' /root/.zshrc\nRUN git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions\nRUN echo 'source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh' >> /root/.zshrc\nRUN echo 'cd /root' >> /root/.zshrc\n#  ###############################################################################\n#   Basic Tools\n#  ###############################################################################\n#   make gitrepo directory\nRUN mkdir /root/git-repos\n#   install r2\nRUN git clone https://github.com/radare/radare2.git /root/git-repos/radare2\nRUN ./root/git-repos/radare2/sys/install.sh\n#   install keystone from source\nRUN git clone https://github.com/keystone-engine/keystone.git /root/git-repos/keystone\nRUN mkdir /root/git-repos/keystone/build\nRUN cd /root/git-repos/keystone/build \\\n && ../make-share.sh \\\n && make install\nRUN cd /root/git-repos/keystone/bindings/python \\\n && make install\nRUN ln -s /root/git-repos/keystone/build/llvm/lib/libkeystone.so /usr/local/lib/python3.6/dist-packages/keystone\n#   install capstone from source\nRUN git clone https://github.com/aquynh/capstone.git /root/git-repos/capstone\nRUN cd /root/git-repos/capstone \\\n && ./make.sh\nRUN cd /root/git-repos/capstone \\\n && ./make.sh install\nRUN cd /root/git-repos/capstone/bindings/python \\\n && make install\n#   install unicorn from source (it needs python2.x for installation)\n#   Note: python3 is not tested, for installation it needs python2 (28.2.2019)\n#   but it worked with my code snippets so I will try with python3\nRUN git clone https://github.com/unicorn-engine/unicorn.git /root/git-repos/unicorn\nRUN apt-get install python -y\nRUN cd /root/git-repos/unicorn \\\n && ./make.sh\nRUN cd /root/git-repos/unicorn \\\n && ./make.sh install\nRUN apt-get remove -y python2.7\nRUN apt-get autoremove -y\nRUN ln -s /usr/bin/python3.6 /usr/bin/python\nRUN cd /root/git-repos/unicorn/bindings/python \\\n && make install3\n#   Issue I faced:\n#  Traceback (most recent call last):\n#    File \"x86_sample.py\", line 634, in <module>\n#      test_i386_context_save()\n#    File \"x86_sample.py\", line 443, in test_i386_context_save\n#      mu.mem_write(address, code)\n#    File \"/usr/local/lib/python3.6/dist-packages/unicorn-1.0.2-py3.6.egg/unicorn/unicorn.py\", line 438, in mem_write\n#  ctypes.ArgumentError: argument 3: <class 'TypeError'>: wrong type\n#\n#   this happens when the code has the wrong type, for example\n#   code = '\\x40' -> not working\n#   code = \"\\x40\" -> not working\n#   code = b'\\x40' -> working\n#   code = b\"\\x40\" -> working\n#   install ropper (needs filebytes)\nRUN git clone https://github.com/sashs/Ropper.git /root/git-repos/ropper\nRUN pip install filebytes\nRUN cd /root/git-repos/ropper \\\n && python setup.py install\n#   install binwalk\n#  RUN git clone https://github.com/ReFirmLabs/binwalk.git /root/git-repos/binwalk\n#  RUN cd /root/git-repos/binwalk && python setup.py install\n#  RUN pip install pylzma\n#   install Triton\n#  https://github.com/JonathanSalwan/Triton/\n#   pwndbg (for heapanlysis)\nRUN git clone https://github.com/pwndbg/pwndbg.git /root/git-repos/pwndbg\nRUN cd /root/git-repos/pwndbg \\\n && ./setup.sh\n#  ###############################################################################\n#   Reversing ARM-Binaries ToolChain\n#  ###############################################################################\n#  RUN apt-get install -y qemu\n#  RUN apt-get install -y gcc-arm-linux-gnueabi g++-arm-linux-gnueabi\n#   Tested with:\n#   qemu-arm -singlestep -L /usr/arm-linux-gnueabi/ -g 1234 <binary> <args>  &\n#   r2 -a arm -b 32 -d gdb://127.0.0.1:1234\n#   works for static and dynamic linked binaries\n#   don't forget to add -L /usr/arm-linux-gnueabi for dynimcally linked binaries\n","originalDockerfileUglifiedHash":"adb86ebdeac9a7b78d8e8833d504f179","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/06a69c28699f600303cc5313be16c9bc4d11153f.dockerfile"}