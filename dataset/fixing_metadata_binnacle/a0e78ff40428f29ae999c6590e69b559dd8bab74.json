{"seed":1640275412,"processedDockerfileHash":"92e7116c65d43b390bb98030254c478d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Docker best practices/commands:\n#   https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/\nFROM alpine:3.5\nRUN adduser -Ds /bin/bash docker\n#  ##############################################################################\nUSER docker\nCOPY . /home/docker/hubot-core-org/\nRUN mkdir -p /home/docker/hubot/node_modules\nRUN chmod 777 /home/docker/hubot/\nRUN chmod 777 /home/docker/hubot/node_modules\nWORKDIR /home/docker/hubot\n#  ##############################################################################\nUSER root\n#  http://askubuntu.com/questions/506158/unable-to-initialize-frontend-dialog-when-using-ssh\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG http_proxy\nARG https_proxy\n#   Steps from:\n#   https://github.com/HewlettPackard/hpe-oneview-hubot/wiki/Getting-Started\n#   1. Clone repo\n#   2. Install node.js + npm (etc.)\nRUN apk add curl=7.61.1-r1 libcurl=7.61.1-r1 sudo=1.8.19_p1-r0 bash=4.3.46-r5 php5-curl=5.6.38-r0 --no-cache\n#  RUN curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\n#  RUN apk add --no-cache aptitude\n#  RUN aptitude install -y\nRUN apk add jq=1.5-r4 nodejs=6.9.5-r2 --no-cache\nRUN npm config set proxy $http_proxy\nRUN npm config set http-proxy $http_proxy\nRUN npm config set https-proxy $http_proxy\n#   3. Install Hubot\nRUN npm install yo@4.3.1 generator-hubot@0.4.0 css-what@6.1.0 css-select@5.1.0 -g\n#  ##############################################################################\nUSER docker\nRUN npm config set proxy $http_proxy\nRUN npm config set http-proxy $http_proxy\nRUN npm config set https-proxy $http_proxy\nRUN echo \"n\" | yo hubot --defaults --name=\"bot\" --adapter=slack\n#  ##############################################################################\nUSER root\n#   Avoid warnings for deprecated dependencies:\nRUN npm install minimatch@^3.0.2 -g ; npm install graceful-fs@^4.0.0 -g\nRUN npm install gulp@4.0.2 ; npm install gulp-task-listing@^1.0.1\n#   To install avoid cross-device link not permitted...\nRUN cd /usr/lib/node_modules/npm ; npm install fs-extra@11.1.1 ; sed -i -e s/graceful-fs/fs-extra/ -e s/fs.rename/fs.move/ ./lib/utils/rename.js\n#  ##############################################################################\nUSER docker\nRUN npm install hubot@2.x amqp@^0.2.6 d3@^4.2.7 jsdom@^9.8.0 svg2png@^4.0.0 fuzzyset.js@0.0.1 nlp_compromise@^6.5.0 request@^2.75.0 request-promise@^4.1.1\nRUN npm install del@^2.2.2\n#  ##############################################################################\nUSER root\n#   4. Install gulp (etc.)\nWORKDIR /home/docker/hubot-core-org\n#   To install avoid cross-device link not permitted...\nRUN cd /usr/lib/node_modules/npm ; npm install fs-extra@11.1.1 ; sed -i -e s/graceful-fs/fs-extra/ -e s/fs.rename/fs.move/ ./lib/utils/rename.js\n#   Avoid warnings for deprecated dependencies:\nRUN npm install minimatch@^3.0.2 ; npm install graceful-fs@^4.0.0\nRUN npm install gulp@4.0.2 -g ; npm install ; npm install gulp@4.0.2 ; npm install gulp-task-listing@^1.0.1 ; npm install gulp-util@^3.0.7\nRUN npm install hubot@2.x amqp@^0.2.6 d3@^4.2.7 jsdom@^9.8.0 svg2png@^4.0.0 fuzzyset.js@0.0.1 nlp_compromise@^6.5.0 request@^2.75.0 request-promise@^4.1.1 del@^2.2.2\n#   5. Copy config file\n#   6. Update IP (docker_run.sh handles this)\n#   7. Run gulp watch (docker_go.sh handles this, called by docker_run.sh)\n#   8. Run bin/hubot (docker_go.sh handles this, called by docker_run.sh)\n#   9. Test your bot (instructions presented by docker_go.sh)\nCOPY docker_entry.sh /usr/local/bin/\nCOPY docker_go.sh /go.sh\nENTRYPOINT [\"sh\", \"/usr/local/bin/docker_entry.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Docker best practices/commands:\n#  https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/\nFROM alpine:3.5\nRUN adduser -Ds /bin/bash docker\n# ##############################################################################\nUSER docker\nCOPY . /home/docker/hubot-core-org/\nRUN mkdir -p /home/docker/hubot/node_modules\nRUN chmod 777 /home/docker/hubot/\nRUN chmod 777 /home/docker/hubot/node_modules\nWORKDIR /home/docker/hubot\n# ##############################################################################\nUSER root\n# http://askubuntu.com/questions/506158/unable-to-initialize-frontend-dialog-when-using-ssh\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG http_proxy\nARG https_proxy\n#  Steps from:\n#  https://github.com/HewlettPackard/hpe-oneview-hubot/wiki/Getting-Started\n#  1. Clone repo\n#  2. Install node.js + npm (etc.)\nRUN apk --no-cache add curl libcurl sudo bash php5-curl\n# RUN curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\n# RUN apk add --no-cache aptitude\n# RUN aptitude install -y\nRUN apk --no-cache add jq nodejs\nRUN npm config set proxy $http_proxy\nRUN npm config set http-proxy $http_proxy\nRUN npm config set https-proxy $http_proxy\n#  3. Install Hubot\nRUN npm install yo generator-hubot css-what css-select -g\n# ##############################################################################\nUSER docker\nRUN npm config set proxy $http_proxy\nRUN npm config set http-proxy $http_proxy\nRUN npm config set https-proxy $http_proxy\nRUN echo \"n\" | yo hubot --defaults --name=\"bot\" --adapter=slack\n# ##############################################################################\nUSER root\n#  Avoid warnings for deprecated dependencies:\nRUN npm install minimatch@^3.0.2 -g ; npm install graceful-fs@^4.0.0 -g\nRUN npm install gulp ; npm install gulp-task-listing@^1.0.1\n#  To install avoid cross-device link not permitted...\nRUN cd /usr/lib/node_modules/npm ; npm install fs-extra ; sed -i -e s/graceful-fs/fs-extra/ -e s/fs.rename/fs.move/ ./lib/utils/rename.js\n# ##############################################################################\nUSER docker\nRUN npm install hubot@2.x amqp@^0.2.6 d3@^4.2.7 jsdom@^9.8.0 svg2png@^4.0.0 fuzzyset.js@0.0.1 nlp_compromise@^6.5.0 request@^2.75.0 request-promise@^4.1.1\nRUN npm install del@^2.2.2\n# ##############################################################################\nUSER root\n#  4. Install gulp (etc.)\nWORKDIR /home/docker/hubot-core-org\n#  To install avoid cross-device link not permitted...\nRUN cd /usr/lib/node_modules/npm ; npm install fs-extra ; sed -i -e s/graceful-fs/fs-extra/ -e s/fs.rename/fs.move/ ./lib/utils/rename.js\n#  Avoid warnings for deprecated dependencies:\nRUN npm install minimatch@^3.0.2 ; npm install graceful-fs@^4.0.0\nRUN npm install gulp -g ; npm install ; npm install gulp ; npm install gulp-task-listing@^1.0.1 ; npm install gulp-util@^3.0.7\nRUN npm install hubot@2.x amqp@^0.2.6 d3@^4.2.7 jsdom@^9.8.0 svg2png@^4.0.0 fuzzyset.js@0.0.1 nlp_compromise@^6.5.0 request@^2.75.0 request-promise@^4.1.1 del@^2.2.2\n#  5. Copy config file\n#  6. Update IP (docker_run.sh handles this)\n#  7. Run gulp watch (docker_go.sh handles this, called by docker_run.sh)\n#  8. Run bin/hubot (docker_go.sh handles this, called by docker_run.sh)\n#  9. Test your bot (instructions presented by docker_go.sh)\nCOPY docker_entry.sh /usr/local/bin/\nCOPY docker_go.sh /go.sh\nENTRYPOINT [\"sh\", \"/usr/local/bin/docker_entry.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"29925ba524480b8b9bf8e0c461c49dd4","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Docker best practices/commands:\n#   https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/\nFROM alpine:3.5\nRUN adduser -Ds /bin/bash docker\n#  ##############################################################################\nUSER docker\nCOPY . /home/docker/hubot-core-org/\nRUN mkdir -p /home/docker/hubot/node_modules\nRUN chmod 777 /home/docker/hubot/\nRUN chmod 777 /home/docker/hubot/node_modules\nWORKDIR /home/docker/hubot\n#  ##############################################################################\nUSER root\n#  http://askubuntu.com/questions/506158/unable-to-initialize-frontend-dialog-when-using-ssh\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG http_proxy\nARG https_proxy\n#   Steps from:\n#   https://github.com/HewlettPackard/hpe-oneview-hubot/wiki/Getting-Started\n#   1. Clone repo\n#   2. Install node.js + npm (etc.)\nRUN apk --no-cache add curl libcurl sudo bash php5-curl\n#  RUN curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\n#  RUN apk add --no-cache aptitude\n#  RUN aptitude install -y\nRUN apk --no-cache add jq nodejs\nRUN npm config set proxy $http_proxy\nRUN npm config set http-proxy $http_proxy\nRUN npm config set https-proxy $http_proxy\n#   3. Install Hubot\nRUN npm install yo generator-hubot css-what css-select -g\n#  ##############################################################################\nUSER docker\nRUN npm config set proxy $http_proxy\nRUN npm config set http-proxy $http_proxy\nRUN npm config set https-proxy $http_proxy\nRUN echo \"n\" | yo hubot --defaults --name=\"bot\" --adapter=slack\n#  ##############################################################################\nUSER root\n#   Avoid warnings for deprecated dependencies:\nRUN npm install minimatch@^3.0.2 -g ; npm install graceful-fs@^4.0.0 -g\nRUN npm install gulp ; npm install gulp-task-listing@^1.0.1\n#   To install avoid cross-device link not permitted...\nRUN cd /usr/lib/node_modules/npm ; npm install fs-extra ; sed -i -e s/graceful-fs/fs-extra/ -e s/fs.rename/fs.move/ ./lib/utils/rename.js\n#  ##############################################################################\nUSER docker\nRUN npm install hubot@2.x amqp@^0.2.6 d3@^4.2.7 jsdom@^9.8.0 svg2png@^4.0.0 fuzzyset.js@0.0.1 nlp_compromise@^6.5.0 request@^2.75.0 request-promise@^4.1.1\nRUN npm install del@^2.2.2\n#  ##############################################################################\nUSER root\n#   4. Install gulp (etc.)\nWORKDIR /home/docker/hubot-core-org\n#   To install avoid cross-device link not permitted...\nRUN cd /usr/lib/node_modules/npm ; npm install fs-extra ; sed -i -e s/graceful-fs/fs-extra/ -e s/fs.rename/fs.move/ ./lib/utils/rename.js\n#   Avoid warnings for deprecated dependencies:\nRUN npm install minimatch@^3.0.2 ; npm install graceful-fs@^4.0.0\nRUN npm install gulp -g ; npm install ; npm install gulp ; npm install gulp-task-listing@^1.0.1 ; npm install gulp-util@^3.0.7\nRUN npm install hubot@2.x amqp@^0.2.6 d3@^4.2.7 jsdom@^9.8.0 svg2png@^4.0.0 fuzzyset.js@0.0.1 nlp_compromise@^6.5.0 request@^2.75.0 request-promise@^4.1.1 del@^2.2.2\n#   5. Copy config file\n#   6. Update IP (docker_run.sh handles this)\n#   7. Run gulp watch (docker_go.sh handles this, called by docker_run.sh)\n#   8. Run bin/hubot (docker_go.sh handles this, called by docker_run.sh)\n#   9. Test your bot (instructions presented by docker_go.sh)\nCOPY docker_entry.sh /usr/local/bin/\nCOPY docker_go.sh /go.sh\nENTRYPOINT [\"sh\", \"/usr/local/bin/docker_entry.sh\"]\n","originalDockerfileUglifiedHash":"2dd977c73cfa5e41f7b5a8b3f7610f7a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a0e78ff40428f29ae999c6590e69b559dd8bab74.dockerfile"}