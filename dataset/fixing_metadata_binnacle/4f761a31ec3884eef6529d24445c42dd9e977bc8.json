{"seed":1339461269,"processedDockerfileHash":"1065b88884c607887dcc0dc6106483f9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\n#  ###################################################\n#  # Build environment (for manual devving)         ##\n#  ###################################################\nENV TOOLCHAINDIR=\"/usr/src/arm-linux-3.3/toolchain_gnueabi-4.4.0_ARMv5TE/usr/bin\"\nENV PATH=\"${TOOLCHAINDIR}:${PATH}:$HOME/.composer/vendor/mediamonks/composer-vendor-cleaner/bin\"\nENV TARGET=\"arm-unknown-linux-uclibcgnueabi\"\nENV AR=\"${TARGET}-ar\"\nENV AS=\"${TARGET}-as\"\nENV CC=\"${TARGET}-gcc\"\nENV CXX=\"${TARGET}-g++\"\nENV LD=\"${TARGET}-ld\"\nENV NM=\"${TARGET}-nm\"\nENV RANLIB=\"${TARGET}-ranlib\"\nENV STRIP=\"${TARGET}-strip\"\nENV TOPDIR=\"/env\"\nENV SOURCEDIR=\"${TOPDIR}/src\"\nENV PREFIXDIR=\"${TOPDIR}/prefix\"\nENV BUILDDIR=\"${TOPDIR}/build\"\nENV INSTALLDIR=\"${TOPDIR}/sdcard/firmware/bin\"\nENV WEBROOT=\"${TOPDIR}/sdcard/firmware/www\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  ###################################################\n#  # Source utils in profile                        ##\n#  ###################################################\nRUN echo \"source /env/tools/dev/helpers.sh\" >> /root/.bashrc\n#  ###################################################\n#  # Install dependencies and requirements          ##\n#  ###################################################\nRUN echo \"*** Install required packages\" \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends autoconf=2.69-11 ca-certificates=20211016ubuntu0.18.04.1 bison=2:3.0.4.dfsg-1build1 build-essential=12.4ubuntu1 cpio=2.12+dfsg-6ubuntu0.18.04.4 curl=7.58.0-2ubuntu3.24 file=1:5.32-2ubuntu0.4 flex=2.6.4-6 gawk=1:4.1.4+dfsg-1build1 gettext=0.19.8.1-6ubuntu0.3 git=1:2.17.1-1ubuntu0.17 jq=1.5+dfsg-2 libtool=2.4.6-2 lib32z1-dev=1:1.2.11.dfsg-0ubuntu2.2 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 locales=2.27-3ubuntu1.6 make=4.1-9.1ubuntu1 ncurses-dev openssl=1.1.1-1ubuntu2.1~18.04.21 pkg-config=0.29.1-0ubuntu2 python3=3.6.7-1~18.04 python=2.7.15~rc1-1 python3-pip=9.0.1-2.3~ubuntu1.18.04.8 python-pip=9.0.1-2.3~ubuntu1.18.04.8 python3-dev=3.6.7-1~18.04 python-dev=2.7.15~rc1-1 rsync=3.1.2-2.1ubuntu1.6 texi2html=1.82+dfsg1-5 texinfo=6.5.0.dfsg.1-2 tofrodos=1.7.13+ds-3 unrar=1:5.5.8-1 unzip=6.0-21ubuntu1.2 vim=2:8.0.1453-1ubuntu1.11 wget=1.19.4-1ubuntu2.2 zip=3.0-11build1 -qq -y \\\n && apt-get clean\n#  ###################################################\n#  # Configure locales                              ##\n#  ###################################################\nRUN locale-gen en_US.UTF-8\n#  ###################################################\n#  # Download and unpack toolchain                  ##\n#  ###################################################\nRUN echo \"*** Downloading toolchain\" \\\n && mkdir -p /usr/src/arm-linux-3.3 \\\n && curl -qs --output /tmp/toolchain.tgz https://fliphess.com/toolchain/Software/Embedded_Linux/source/toolchain_gnueabi-4.4.0_ARMv5TE.tgz\nRUN echo \"*** Unpacking Toolchain\" \\\n && cd /usr/src/arm-linux-3.3 \\\n && tar xzf /tmp/toolchain.tgz\n#  ###################################################\n#  # Set workdir and copy files                     ##\n#  ###################################################\nWORKDIR /env\nCOPY . .\n#  ###################################################\n#  #                                                ##\n#  ###################################################\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\n# ###################################################\n# # Build environment (for manual devving)         ##\n# ###################################################\nENV TOOLCHAINDIR=\"/usr/src/arm-linux-3.3/toolchain_gnueabi-4.4.0_ARMv5TE/usr/bin\"\nENV PATH=\"${TOOLCHAINDIR}:${PATH}:$HOME/.composer/vendor/mediamonks/composer-vendor-cleaner/bin\"\nENV TARGET=\"arm-unknown-linux-uclibcgnueabi\"\nENV AR=\"${TARGET}-ar\"\nENV AS=\"${TARGET}-as\"\nENV CC=\"${TARGET}-gcc\"\nENV CXX=\"${TARGET}-g++\"\nENV LD=\"${TARGET}-ld\"\nENV NM=\"${TARGET}-nm\"\nENV RANLIB=\"${TARGET}-ranlib\"\nENV STRIP=\"${TARGET}-strip\"\nENV TOPDIR=\"/env\"\nENV SOURCEDIR=\"${TOPDIR}/src\"\nENV PREFIXDIR=\"${TOPDIR}/prefix\"\nENV BUILDDIR=\"${TOPDIR}/build\"\nENV INSTALLDIR=\"${TOPDIR}/sdcard/firmware/bin\"\nENV WEBROOT=\"${TOPDIR}/sdcard/firmware/www\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# ###################################################\n# # Source utils in profile                        ##\n# ###################################################\nRUN echo \"source /env/tools/dev/helpers.sh\" >> /root/.bashrc\n# ###################################################\n# # Install dependencies and requirements          ##\n# ###################################################\nRUN echo \"*** Install required packages\" \\\n && apt-get update -qq \\\n && apt-get install autoconf ca-certificates bison build-essential cpio curl file flex gawk gettext git jq libtool lib32z1-dev libcurl4-openssl-dev libssl-dev locales make ncurses-dev openssl pkg-config python3 python python3-pip python-pip python3-dev python-dev rsync texi2html texinfo tofrodos unrar unzip vim wget zip -qq -y \\\n && apt-get clean\n# ###################################################\n# # Configure locales                              ##\n# ###################################################\nRUN locale-gen en_US.UTF-8\n# ###################################################\n# # Download and unpack toolchain                  ##\n# ###################################################\nRUN echo \"*** Downloading toolchain\" \\\n && mkdir -p /usr/src/arm-linux-3.3 \\\n && curl -qs --output /tmp/toolchain.tgz https://fliphess.com/toolchain/Software/Embedded_Linux/source/toolchain_gnueabi-4.4.0_ARMv5TE.tgz\nRUN echo \"*** Unpacking Toolchain\" \\\n && cd /usr/src/arm-linux-3.3 \\\n && tar xzf /tmp/toolchain.tgz\n# ###################################################\n# # Set workdir and copy files                     ##\n# ###################################################\nWORKDIR /env\nCOPY . .\n# ###################################################\n# #                                                ##\n# ###################################################\n","injectedSmells":[],"originalDockerfileHash":"358a409844329dfd78219d5f4fd68e95","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\n#  ###################################################\n#  # Build environment (for manual devving)         ##\n#  ###################################################\nENV TOOLCHAINDIR=\"/usr/src/arm-linux-3.3/toolchain_gnueabi-4.4.0_ARMv5TE/usr/bin\"\nENV PATH=\"${TOOLCHAINDIR}:${PATH}:$HOME/.composer/vendor/mediamonks/composer-vendor-cleaner/bin\"\nENV TARGET=\"arm-unknown-linux-uclibcgnueabi\"\nENV AR=\"${TARGET}-ar\"\nENV AS=\"${TARGET}-as\"\nENV CC=\"${TARGET}-gcc\"\nENV CXX=\"${TARGET}-g++\"\nENV LD=\"${TARGET}-ld\"\nENV NM=\"${TARGET}-nm\"\nENV RANLIB=\"${TARGET}-ranlib\"\nENV STRIP=\"${TARGET}-strip\"\nENV TOPDIR=\"/env\"\nENV SOURCEDIR=\"${TOPDIR}/src\"\nENV PREFIXDIR=\"${TOPDIR}/prefix\"\nENV BUILDDIR=\"${TOPDIR}/build\"\nENV INSTALLDIR=\"${TOPDIR}/sdcard/firmware/bin\"\nENV WEBROOT=\"${TOPDIR}/sdcard/firmware/www\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  ###################################################\n#  # Source utils in profile                        ##\n#  ###################################################\nRUN echo \"source /env/tools/dev/helpers.sh\" >> /root/.bashrc\n#  ###################################################\n#  # Install dependencies and requirements          ##\n#  ###################################################\nRUN echo \"*** Install required packages\" \\\n && apt-get update -qq \\\n && apt-get install autoconf ca-certificates bison build-essential cpio curl file flex gawk gettext git jq libtool lib32z1-dev libcurl4-openssl-dev libssl-dev locales make ncurses-dev openssl pkg-config python3 python python3-pip python-pip python3-dev python-dev rsync texi2html texinfo tofrodos unrar unzip vim wget zip -qq -y \\\n && apt-get clean\n#  ###################################################\n#  # Configure locales                              ##\n#  ###################################################\nRUN locale-gen en_US.UTF-8\n#  ###################################################\n#  # Download and unpack toolchain                  ##\n#  ###################################################\nRUN echo \"*** Downloading toolchain\" \\\n && mkdir -p /usr/src/arm-linux-3.3 \\\n && curl -qs --output /tmp/toolchain.tgz https://fliphess.com/toolchain/Software/Embedded_Linux/source/toolchain_gnueabi-4.4.0_ARMv5TE.tgz\nRUN echo \"*** Unpacking Toolchain\" \\\n && cd /usr/src/arm-linux-3.3 \\\n && tar xzf /tmp/toolchain.tgz\n#  ###################################################\n#  # Set workdir and copy files                     ##\n#  ###################################################\nWORKDIR /env\nCOPY . .\n#  ###################################################\n#  #                                                ##\n#  ###################################################\n","originalDockerfileUglifiedHash":"7de5755332c7cc0cdfec668366e18bdf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4f761a31ec3884eef6529d24445c42dd9e977bc8.dockerfile"}