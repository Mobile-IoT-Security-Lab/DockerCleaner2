{"seed":2982565474,"processedDockerfileHash":"ce778246fb3276678fe42ff3d472a208","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"#   Copyright (c) IBM Corporation 2016 \n#   Distributed under the terms of the Modified BSD License.\n#   Ubuntu image \nFROM ppc64le/ubuntu:trusty\nLABEL maintainer=\"Ilsiyar Gaynutdinov <ilsiyar_gaynutdinov@ru.ibm.com>\"\nUSER root\n#   Install all OS dependencies for notebook server that starts but lacks all\n#   features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends build-essential=11.6ubuntu6 bzip2=1.0.6-5 ca-certificates=20170717~14.04.2 cmake=2.8.12.2-0ubuntu3 git=1:1.9.1-1ubuntu0.10 locales=2.13+git20120306-12.1 sudo=1.8.9p5-1ubuntu1.4 wget=1.15-1ubuntu1.14.04.5 -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"LANGUAGE=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"LC_TYPE=en_US.UTF-8\" >> /etc/default/locale\nRUN locale-gen en_US en_US.UTF-8\n#  build and install Tini for ppc64le\nRUN wget https://github.com/krallin/tini/archive/v0.10.0.tar.gz \\\n && tar zxvf v0.10.0.tar.gz \\\n && rm -rf v0.10.0.tar.gz\nWORKDIR tini-0.10.0/\nRUN cmake . \\\n && make install\nRUN mv ./tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\nWORKDIR ..\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nENV SHELL=\"/bin/bash\"\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/$NB_USER\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Create jovyan user with UID=1000 and in the 'users' group\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER $CONDA_DIR\nUSER $NB_UID\n#   Setup jovyan home directory\nRUN mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/.jupyter \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc\n#   Install conda as jovyan\nRUN cd /tmp \\\n && mkdir -p $CONDA_DIR \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-ppc64le.sh \\\n && /bin/bash Miniconda3-4.2.12-Linux-ppc64le.sh -f -b -p $CONDA_DIR \\\n && rm -rf Miniconda3-4.2.12-Linux-ppc64le.sh \\\n && $CONDA_DIR/bin/conda install --quiet --yes conda=4.2.12 \\\n && $CONDA_DIR/bin/conda config --system --add channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && conda clean -tipsy\n#   Install Jupyter notebook and Hub\nRUN yes | pip install pip==23.1 --upgrade\nRUN yes | pip install 'notebook==5.2.*' 'jupyterhub==0.7.*' 'jupyterlab==0.18.*' --quiet --no-cache-dir\nUSER root\nEXPOSE 8888/tcp\nWORKDIR /home/$NB_USER/work\nRUN echo \"ALL ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\n#   Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\n#   Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) IBM Corporation 2016 \n#  Distributed under the terms of the Modified BSD License.\n#  Ubuntu image \nFROM ppc64le/ubuntu:trusty\nLABEL maintainer=\"Ilsiyar Gaynutdinov <ilsiyar_gaynutdinov@ru.ibm.com>\"\nUSER root\n#  Install all OS dependencies for notebook server that starts but lacks all\n#  features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends build-essential bzip2 ca-certificates cmake git locales sudo wget -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"LANGUAGE=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"LC_TYPE=en_US.UTF-8\" >> /etc/default/locale\nRUN locale-gen en_US en_US.UTF-8\n# build and install Tini for ppc64le\nRUN wget https://github.com/krallin/tini/archive/v0.10.0.tar.gz \\\n && tar zxvf v0.10.0.tar.gz \\\n && rm -rf v0.10.0.tar.gz\nWORKDIR tini-0.10.0/\nRUN cmake . \\\n && make install\nRUN mv ./tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\nWORKDIR ..\n#  Configure environment\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nENV SHELL=\"/bin/bash\"\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/$NB_USER\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#  Create jovyan user with UID=1000 and in the 'users' group\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER $CONDA_DIR\nUSER $NB_UID\n#  Setup jovyan home directory\nRUN mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/.jupyter \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc\n#  Install conda as jovyan\nRUN cd /tmp \\\n && mkdir -p $CONDA_DIR \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-ppc64le.sh \\\n && /bin/bash Miniconda3-4.2.12-Linux-ppc64le.sh -f -b -p $CONDA_DIR \\\n && rm -rf Miniconda3-4.2.12-Linux-ppc64le.sh \\\n && $CONDA_DIR/bin/conda install --quiet --yes conda=4.2.12 \\\n && $CONDA_DIR/bin/conda config --system --add channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && conda clean -tipsy\n#  Install Jupyter notebook and Hub\nRUN yes | pip install pip --upgrade\nRUN yes | pip install 'notebook==5.2.*' 'jupyterhub==0.7.*' 'jupyterlab==0.18.*' --quiet --no-cache-dir\nUSER root\nEXPOSE 8888/tcp\nWORKDIR /home/$NB_USER/work\nRUN echo \"ALL ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\n#  Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#  Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\n#  Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n","injectedSmells":[],"originalDockerfileHash":"31547ec6188c2feb510a7eb0b1c65662","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) IBM Corporation 2016 \n#   Distributed under the terms of the Modified BSD License.\n#   Ubuntu image \nFROM ppc64le/ubuntu:trusty\nLABEL maintainer=\"Ilsiyar Gaynutdinov <ilsiyar_gaynutdinov@ru.ibm.com>\"\nUSER root\n#   Install all OS dependencies for notebook server that starts but lacks all\n#   features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -yq dist-upgrade \\\n && apt-get install --no-install-recommends build-essential bzip2 ca-certificates cmake git locales sudo wget -yq \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"LANGUAGE=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"LC_TYPE=en_US.UTF-8\" >> /etc/default/locale\nRUN locale-gen en_US en_US.UTF-8\n#  build and install Tini for ppc64le\nRUN wget https://github.com/krallin/tini/archive/v0.10.0.tar.gz \\\n && tar zxvf v0.10.0.tar.gz \\\n && rm -rf v0.10.0.tar.gz\nWORKDIR tini-0.10.0/\nRUN cmake . \\\n && make install\nRUN mv ./tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\nWORKDIR ..\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nENV SHELL=\"/bin/bash\"\nENV NB_USER=\"jovyan\"\nENV NB_UID=\"1000\"\nENV HOME=\"/home/$NB_USER\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n#   Create jovyan user with UID=1000 and in the 'users' group\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER $CONDA_DIR\nUSER $NB_UID\n#   Setup jovyan home directory\nRUN mkdir /home/$NB_USER/work \\\n && mkdir /home/$NB_USER/.jupyter \\\n && echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc\n#   Install conda as jovyan\nRUN cd /tmp \\\n && mkdir -p $CONDA_DIR \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-ppc64le.sh \\\n && /bin/bash Miniconda3-4.2.12-Linux-ppc64le.sh -f -b -p $CONDA_DIR \\\n && rm -rf Miniconda3-4.2.12-Linux-ppc64le.sh \\\n && $CONDA_DIR/bin/conda install --quiet --yes conda=4.2.12 \\\n && $CONDA_DIR/bin/conda config --system --add channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && conda clean -tipsy\n#   Install Jupyter notebook and Hub\nRUN yes | pip install pip --upgrade\nRUN yes | pip install 'notebook==5.2.*' 'jupyterhub==0.7.*' 'jupyterlab==0.18.*' --quiet --no-cache-dir\nUSER root\nEXPOSE 8888/tcp\nWORKDIR /home/$NB_USER/work\nRUN echo \"ALL ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\n#   Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\n#   Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n","originalDockerfileUglifiedHash":"544fc44ca37a4df66bd13404a8d55ddb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a10db854f961fe09f2ffd008095e3c6a724d92ac.dockerfile"}