{"seed":149869317,"processedDockerfileHash":"30a43ef83b1c74273c2bf383884c41c4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Docker Image for HFOS\n#\n#   This image essentially packages up HFOS along with mongodb\n#   into a Docker Image/Container.\n#\n#   Usage Examples::\n#\n#   To run your instance and see if the backend starts:\n#       $ docker run -i -t hackerfleet/hfos /bin/bash -c \"/etc/init.d/mongodb start && hfos_launcher.py\"\n#\n#   To investigate problems on the docker container, i.e. get a shell:\n#       $ docker run -i -t --name hfos-test-live -t hackerfleet/hfos\n#\n#   If you want to run a productive instance with working SSL:\n#       $ docker run -i -p 127.0.0.1:443:443 -t hackerfleet/hfos /bin/bash -c \"/etc/init.d/mongodb start && \\\n#         python3 hfos_launcher.py --port 443 --cert /etc/ssl/certs/hfos/selfsigned.pem --log 10 --dev\"\n#\n#   VERSION: 1.1.2\n#\n#   Last Updated: 20170712\nFROM debian:experimental\nMAINTAINER Heiko 'riot' Weinen <riot@c-base.org>\n#   Install dependencies\nRUN echo \"deb ftp://ftp2.de.debian.org/debian unstable main\" > /etc/apt/sources.list\nRUN echo \"deb ftp://ftp2.de.debian.org/debian experimental main\" > /etc/apt/sources.list.d/experimental.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends git bzip2 npm nodejs-legacy libfontconfig build-essential gdal-bin locales python-gdal enchant python3-virtualenv python3-dev python3-pymongo python3-bson-ext python3-pip python3-wheel python3-urwid python3-setuptools python3-setuptools-scm python3-setuptools-git python3-serial python3-openssl -qy\nRUN echo \"C.UTF-8\" > /etc/locale.gen\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\nRUN locale-gen\n#   Get a very recent mongodb\nRUN apt-get install --no-install-recommends experimental mongodb -qy -t\nRUN apt-get clean\n#   Activate mongodb\nRUN echo smallfiles = true >> /etc/mongodb.conf\n#   The next one was necessary on one installation, but that could've been due to a weird mongodb release\n#  RUN echo setParameter = textSearchEnabled = true >> /etc/mongodb.conf\n#   Create virtual environment\n#  RUN python3 /usr/lib/python3/dist-packages/virtualenv.py -p /usr/bin/python3.5 --system-site-packages venv\nRUN useradd -ms /bin/bash hfos\nWORKDIR /home/hfos\n#   Copy repository\nCOPY . hfos\nWORKDIR hfos\n#   Fetch Frontend\nRUN git submodule init \\\n && git submodule update\n#   Install HFOS\nRUN pip3 install -r requirements-dev.txt\nRUN python3 setup.py develop\n#   Upgrade npm (from ancient Debian version to 4.6.1 which has a proven track record at assembling the frontend)\nRUN npm install npm@4.6.1 -g\n#   Install HFOS\nRUN python3 -u hfos_manage.py install cert\nRUN python3 -u hfos_manage.py install var\n#   Rest might need a running db\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install modules\n#   Temporary hack, until we have provisioning obey dependencies again:\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install provisions -p system\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install provisions -p user\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install provisions\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install docs\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install frontend --rebuild --dev\n#    Services\nEXPOSE 443/tcp\n#   There is a frontend development server with hot reloading which can be started with\n#     $ hfos/frontend/npm run start\n#   If you want to run the frontend development live server, uncomment this:\n#\n#   EXPOSE 8081\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Docker Image for HFOS\n#\n#  This image essentially packages up HFOS along with mongodb\n#  into a Docker Image/Container.\n#\n#  Usage Examples::\n#\n#  To run your instance and see if the backend starts:\n#      $ docker run -i -t hackerfleet/hfos /bin/bash -c \"/etc/init.d/mongodb start && hfos_launcher.py\"\n#\n#  To investigate problems on the docker container, i.e. get a shell:\n#      $ docker run -i -t --name hfos-test-live -t hackerfleet/hfos\n#\n#  If you want to run a productive instance with working SSL:\n#      $ docker run -i -p 127.0.0.1:443:443 -t hackerfleet/hfos /bin/bash -c \"/etc/init.d/mongodb start && \\\n#        python3 hfos_launcher.py --port 443 --cert /etc/ssl/certs/hfos/selfsigned.pem --log 10 --dev\"\n#\n#  VERSION: 1.1.2\n#\n#  Last Updated: 20170712\nFROM debian:experimental\nMAINTAINER Heiko 'riot' Weinen <riot@c-base.org>\n#  Install dependencies\nRUN echo \"deb ftp://ftp2.de.debian.org/debian unstable main\" > /etc/apt/sources.list\nRUN echo \"deb ftp://ftp2.de.debian.org/debian experimental main\" > /etc/apt/sources.list.d/experimental.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends git bzip2 npm nodejs-legacy libfontconfig build-essential gdal-bin locales python-gdal enchant python3-virtualenv python3-dev python3-pymongo python3-bson-ext python3-pip python3-wheel python3-urwid python3-setuptools python3-setuptools-scm python3-setuptools-git python3-serial python3-openssl -qy\nRUN echo \"C.UTF-8\" > /etc/locale.gen\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\nRUN locale-gen\n#  Get a very recent mongodb\nRUN apt-get install experimental mongodb -qy -t\nRUN apt-get clean\n#  Activate mongodb\nRUN echo smallfiles = true >> /etc/mongodb.conf\n#  The next one was necessary on one installation, but that could've been due to a weird mongodb release\n# RUN echo setParameter = textSearchEnabled = true >> /etc/mongodb.conf\n#  Create virtual environment\n# RUN python3 /usr/lib/python3/dist-packages/virtualenv.py -p /usr/bin/python3.5 --system-site-packages venv\nRUN useradd -ms /bin/bash hfos\nWORKDIR /home/hfos\n#  Copy repository\nCOPY . hfos\nWORKDIR hfos\n#  Fetch Frontend\nRUN git submodule init \\\n && git submodule update\n#  Install HFOS\nRUN pip3 install -r requirements-dev.txt\nRUN python3 setup.py develop\n#  Upgrade npm (from ancient Debian version to 4.6.1 which has a proven track record at assembling the frontend)\nRUN npm install npm@4.6.1 -g\n#  Install HFOS\nRUN python3 -u hfos_manage.py install cert\nRUN python3 -u hfos_manage.py install var\n#  Rest might need a running db\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install modules\n#  Temporary hack, until we have provisioning obey dependencies again:\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install provisions -p system\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install provisions -p user\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install provisions\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install docs\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install frontend --rebuild --dev\n#   Services\nEXPOSE 443/tcp\n#  There is a frontend development server with hot reloading which can be started with\n#    $ hfos/frontend/npm run start\n#  If you want to run the frontend development live server, uncomment this:\n#\n#  EXPOSE 8081\n","injectedSmells":[],"originalDockerfileHash":"7d24f105cc22727d1d6c623d08eed305","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Docker Image for HFOS\n#\n#   This image essentially packages up HFOS along with mongodb\n#   into a Docker Image/Container.\n#\n#   Usage Examples::\n#\n#   To run your instance and see if the backend starts:\n#       $ docker run -i -t hackerfleet/hfos /bin/bash -c \"/etc/init.d/mongodb start && hfos_launcher.py\"\n#\n#   To investigate problems on the docker container, i.e. get a shell:\n#       $ docker run -i -t --name hfos-test-live -t hackerfleet/hfos\n#\n#   If you want to run a productive instance with working SSL:\n#       $ docker run -i -p 127.0.0.1:443:443 -t hackerfleet/hfos /bin/bash -c \"/etc/init.d/mongodb start && \\\n#         python3 hfos_launcher.py --port 443 --cert /etc/ssl/certs/hfos/selfsigned.pem --log 10 --dev\"\n#\n#   VERSION: 1.1.2\n#\n#   Last Updated: 20170712\nFROM debian:experimental\nMAINTAINER Heiko 'riot' Weinen <riot@c-base.org>\n#   Install dependencies\nRUN echo \"deb ftp://ftp2.de.debian.org/debian unstable main\" > /etc/apt/sources.list\nRUN echo \"deb ftp://ftp2.de.debian.org/debian experimental main\" > /etc/apt/sources.list.d/experimental.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends git bzip2 npm nodejs-legacy libfontconfig build-essential gdal-bin locales python-gdal enchant python3-virtualenv python3-dev python3-pymongo python3-bson-ext python3-pip python3-wheel python3-urwid python3-setuptools python3-setuptools-scm python3-setuptools-git python3-serial python3-openssl -qy\nRUN echo \"C.UTF-8\" > /etc/locale.gen\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\nRUN locale-gen\n#   Get a very recent mongodb\nRUN apt-get install experimental mongodb -qy -t\nRUN apt-get clean\n#   Activate mongodb\nRUN echo smallfiles = true >> /etc/mongodb.conf\n#   The next one was necessary on one installation, but that could've been due to a weird mongodb release\n#  RUN echo setParameter = textSearchEnabled = true >> /etc/mongodb.conf\n#   Create virtual environment\n#  RUN python3 /usr/lib/python3/dist-packages/virtualenv.py -p /usr/bin/python3.5 --system-site-packages venv\nRUN useradd -ms /bin/bash hfos\nWORKDIR /home/hfos\n#   Copy repository\nCOPY . hfos\nWORKDIR hfos\n#   Fetch Frontend\nRUN git submodule init \\\n && git submodule update\n#   Install HFOS\nRUN pip3 install -r requirements-dev.txt\nRUN python3 setup.py develop\n#   Upgrade npm (from ancient Debian version to 4.6.1 which has a proven track record at assembling the frontend)\nRUN npm install npm@4.6.1 -g\n#   Install HFOS\nRUN python3 -u hfos_manage.py install cert\nRUN python3 -u hfos_manage.py install var\n#   Rest might need a running db\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install modules\n#   Temporary hack, until we have provisioning obey dependencies again:\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install provisions -p system\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install provisions -p user\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install provisions\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install docs\nRUN /etc/init.d/mongodb start \\\n && python3 -u hfos_manage.py install frontend --rebuild --dev\n#    Services\nEXPOSE 443/tcp\n#   There is a frontend development server with hot reloading which can be started with\n#     $ hfos/frontend/npm run start\n#   If you want to run the frontend development live server, uncomment this:\n#\n#   EXPOSE 8081\n","originalDockerfileUglifiedHash":"5800a2f76f8ff5dc28f1986f8b526253","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/578d90a69a337e4b40f490191af18c4dc51b39cd.dockerfile"}