{"seed":4045474586,"processedDockerfileHash":"91a2bd2620754e137cee3f977ecc5e10","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Inherit from Heroku's stack\nFROM heroku/heroku:16\n#   Internally, we arbitrarily use port 3000\nENV PORT=\"3000\"\n#   Which versions?\nENV PHP_VERSION=\"7.3.0\"\nENV HTTPD_VERSION=\"2.4.37\"\nENV NGINX_VERSION=\"1.8.1\"\nENV COMPOSER_VERSION=\"1.2.1\"\nENV NODE_ENGINE=\"8.14.0\"\nENV REDIS_EXT_VERSION=\"4.2.0\"\nENV IMAGICK_EXT_VERSION=\"3.4.3\"\nENV PATH=\"/app/heroku/node/bin:/app/user/node_modules/.bin:$PATH\"\n#   Create some needed directories\nRUN mkdir -p /app/.heroku/php /app/heroku/node /app/.profile.d\nWORKDIR /app/user\n#   so we can run PHP in here\nENV PATH=\"/app/.heroku/php/bin:/app/.heroku/php/sbin:$PATH\"\n#   Install Apache\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/apache-$HTTPD_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Config\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/apache2/httpd.conf.default > /app/.heroku/php/etc/apache2/httpd.conf\n#   FPM socket permissions workaround when run as root\nRUN echo \"\\nGroup root\\n\" >> /app/.heroku/php/etc/apache2/httpd.conf\n#   Install Nginx\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-16-stable/nginx-$NGINX_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Config\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/nginx/nginx.conf.default > /app/.heroku/php/etc/nginx/nginx.conf\n#   FPM socket permissions workaround when run as root\nRUN echo \"\\nuser nobody root;\\n\" >> /app/.heroku/php/etc/nginx/nginx.conf\n#   Install PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/php-$PHP_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Config\nRUN mkdir -p /app/.heroku/php/etc/php/conf.d\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/master/support/build/_conf/php/php.ini > /app/.heroku/php/etc/php/php.ini\n#   Install Redis extension for PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/extensions/no-debug-non-zts-20180731/redis-$REDIS_EXT_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Install ImageMagick extension for PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/extensions/no-debug-non-zts-20180731/imagick-$IMAGICK_EXT_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Enable all optional exts & change upload settings\nRUN echo \"\\nupload_max_filesize = 100M \\npost_max_size = 100M \\nmemory_limit = 200M \\nmax_execution_time = 60 \\nmax_input_time = 60 \\nuser_ini.cache_ttl = 30 \\nopcache.enable_cli = 1 \\nopcache.validate_timestamps = 1 \\nopcache.revalidate_freq = 0 \\nopcache.fast_shutdown = 0 \\nextension=bcmath.so \\nextension=calendar.so \\nextension=exif.so \\nextension=ftp.so \\nextension=gd.so \\nextension=gettext.so \\nextension=intl.so \\nextension=mbstring.so \\nextension=pcntl.so \\nextension=redis.so \\nextension=shmop.so \\nextension=soap.so \\nextension=sqlite3.so \\nextension=pdo_sqlite.so \\nextension=xmlrpc.so \\nextension=xsl.so\\n\" >> /app/.heroku/php/etc/php/php.ini\n#   Enable timestamps validation for opcache for development\nRUN sed -i /opcache.validate_timestamps/d /app/.heroku/php/etc/php/conf.d/010-ext-zend_opcache.ini\n#   Install Composer\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-16-stable/composer-$COMPOSER_VERSION.tar.gz | tar xz -C /app/.heroku/php\nRUN composer self-update\n#   Install Node.js\nRUN curl -s https://s3pository.heroku.com/node/v$NODE_ENGINE/node-v$NODE_ENGINE-linux-x64.tar.gz | tar --strip-components=1 -xz -C /app/heroku/node\n#   Export the node path in .profile.d\nRUN echo \"export PATH=\\\"/app/heroku/node/bin:/app/user/node_modules/.bin:$PATH\\\"\" > /app/.profile.d/nodejs.sh\n#   Install yarn package manager\nRUN npm install yarn@1.22.19 --global\n#   Copy composer json and lock files\nCOPY composer.json /app/user/\nCOPY composer.lock /app/user/\n#   Run pre-install hooks\nRUN composer run-script pre-install-cmd\n#   Remove composer json and lock file\nRUN rm composer.*\n#   Export heroku bin\nENV PATH=\"/app/user/bin:$PATH\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Inherit from Heroku's stack\nFROM heroku/heroku:16\n#  Internally, we arbitrarily use port 3000\nENV PORT=\"3000\"\n#  Which versions?\nENV PHP_VERSION=\"7.3.0\"\nENV HTTPD_VERSION=\"2.4.37\"\nENV NGINX_VERSION=\"1.8.1\"\nENV COMPOSER_VERSION=\"1.2.1\"\nENV NODE_ENGINE=\"8.14.0\"\nENV REDIS_EXT_VERSION=\"4.2.0\"\nENV IMAGICK_EXT_VERSION=\"3.4.3\"\nENV PATH=\"/app/heroku/node/bin:/app/user/node_modules/.bin:$PATH\"\n#  Create some needed directories\nRUN mkdir -p /app/.heroku/php /app/heroku/node /app/.profile.d\nWORKDIR /app/user\n#  so we can run PHP in here\nENV PATH=\"/app/.heroku/php/bin:/app/.heroku/php/sbin:$PATH\"\n#  Install Apache\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/apache-$HTTPD_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#  Config\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/apache2/httpd.conf.default > /app/.heroku/php/etc/apache2/httpd.conf\n#  FPM socket permissions workaround when run as root\nRUN echo \"\\nGroup root\\n\" >> /app/.heroku/php/etc/apache2/httpd.conf\n#  Install Nginx\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-16-stable/nginx-$NGINX_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#  Config\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/nginx/nginx.conf.default > /app/.heroku/php/etc/nginx/nginx.conf\n#  FPM socket permissions workaround when run as root\nRUN echo \"\\nuser nobody root;\\n\" >> /app/.heroku/php/etc/nginx/nginx.conf\n#  Install PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/php-$PHP_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#  Config\nRUN mkdir -p /app/.heroku/php/etc/php/conf.d\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/master/support/build/_conf/php/php.ini > /app/.heroku/php/etc/php/php.ini\n#  Install Redis extension for PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/extensions/no-debug-non-zts-20180731/redis-$REDIS_EXT_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#  Install ImageMagick extension for PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/extensions/no-debug-non-zts-20180731/imagick-$IMAGICK_EXT_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#  Enable all optional exts & change upload settings\nRUN echo \"\\nupload_max_filesize = 100M \\npost_max_size = 100M \\nmemory_limit = 200M \\nmax_execution_time = 60 \\nmax_input_time = 60 \\nuser_ini.cache_ttl = 30 \\nopcache.enable_cli = 1 \\nopcache.validate_timestamps = 1 \\nopcache.revalidate_freq = 0 \\nopcache.fast_shutdown = 0 \\nextension=bcmath.so \\nextension=calendar.so \\nextension=exif.so \\nextension=ftp.so \\nextension=gd.so \\nextension=gettext.so \\nextension=intl.so \\nextension=mbstring.so \\nextension=pcntl.so \\nextension=redis.so \\nextension=shmop.so \\nextension=soap.so \\nextension=sqlite3.so \\nextension=pdo_sqlite.so \\nextension=xmlrpc.so \\nextension=xsl.so\\n\" >> /app/.heroku/php/etc/php/php.ini\n#  Enable timestamps validation for opcache for development\nRUN sed -i /opcache.validate_timestamps/d /app/.heroku/php/etc/php/conf.d/010-ext-zend_opcache.ini\n#  Install Composer\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-16-stable/composer-$COMPOSER_VERSION.tar.gz | tar xz -C /app/.heroku/php\nRUN composer self-update\n#  Install Node.js\nRUN curl -s https://s3pository.heroku.com/node/v$NODE_ENGINE/node-v$NODE_ENGINE-linux-x64.tar.gz | tar --strip-components=1 -xz -C /app/heroku/node\n#  Export the node path in .profile.d\nRUN echo \"export PATH=\\\"/app/heroku/node/bin:/app/user/node_modules/.bin:$PATH\\\"\" > /app/.profile.d/nodejs.sh\n#  Install yarn package manager\nRUN npm install yarn --global\n#  Copy composer json and lock files\nCOPY composer.json /app/user/\nCOPY composer.lock /app/user/\n#  Run pre-install hooks\nRUN composer run-script pre-install-cmd\n#  Remove composer json and lock file\nRUN rm composer.*\n#  Export heroku bin\nENV PATH=\"/app/user/bin:$PATH\"\n","injectedSmells":[],"originalDockerfileHash":"40ca4ea101cb3b4500854a01f1210b1a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Inherit from Heroku's stack\nFROM heroku/heroku:16\n#   Internally, we arbitrarily use port 3000\nENV PORT=\"3000\"\n#   Which versions?\nENV PHP_VERSION=\"7.3.0\"\nENV HTTPD_VERSION=\"2.4.37\"\nENV NGINX_VERSION=\"1.8.1\"\nENV COMPOSER_VERSION=\"1.2.1\"\nENV NODE_ENGINE=\"8.14.0\"\nENV REDIS_EXT_VERSION=\"4.2.0\"\nENV IMAGICK_EXT_VERSION=\"3.4.3\"\nENV PATH=\"/app/heroku/node/bin:/app/user/node_modules/.bin:$PATH\"\n#   Create some needed directories\nRUN mkdir -p /app/.heroku/php /app/heroku/node /app/.profile.d\nWORKDIR /app/user\n#   so we can run PHP in here\nENV PATH=\"/app/.heroku/php/bin:/app/.heroku/php/sbin:$PATH\"\n#   Install Apache\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/apache-$HTTPD_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Config\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/apache2/httpd.conf.default > /app/.heroku/php/etc/apache2/httpd.conf\n#   FPM socket permissions workaround when run as root\nRUN echo \"\\nGroup root\\n\" >> /app/.heroku/php/etc/apache2/httpd.conf\n#   Install Nginx\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-16-stable/nginx-$NGINX_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Config\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/nginx/nginx.conf.default > /app/.heroku/php/etc/nginx/nginx.conf\n#   FPM socket permissions workaround when run as root\nRUN echo \"\\nuser nobody root;\\n\" >> /app/.heroku/php/etc/nginx/nginx.conf\n#   Install PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/php-$PHP_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Config\nRUN mkdir -p /app/.heroku/php/etc/php/conf.d\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/master/support/build/_conf/php/php.ini > /app/.heroku/php/etc/php/php.ini\n#   Install Redis extension for PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/extensions/no-debug-non-zts-20180731/redis-$REDIS_EXT_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Install ImageMagick extension for PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-heroku-16-stable/extensions/no-debug-non-zts-20180731/imagick-$IMAGICK_EXT_VERSION.tar.gz | tar xz -C /app/.heroku/php\n#   Enable all optional exts & change upload settings\nRUN echo \"\\nupload_max_filesize = 100M \\npost_max_size = 100M \\nmemory_limit = 200M \\nmax_execution_time = 60 \\nmax_input_time = 60 \\nuser_ini.cache_ttl = 30 \\nopcache.enable_cli = 1 \\nopcache.validate_timestamps = 1 \\nopcache.revalidate_freq = 0 \\nopcache.fast_shutdown = 0 \\nextension=bcmath.so \\nextension=calendar.so \\nextension=exif.so \\nextension=ftp.so \\nextension=gd.so \\nextension=gettext.so \\nextension=intl.so \\nextension=mbstring.so \\nextension=pcntl.so \\nextension=redis.so \\nextension=shmop.so \\nextension=soap.so \\nextension=sqlite3.so \\nextension=pdo_sqlite.so \\nextension=xmlrpc.so \\nextension=xsl.so\\n\" >> /app/.heroku/php/etc/php/php.ini\n#   Enable timestamps validation for opcache for development\nRUN sed -i /opcache.validate_timestamps/d /app/.heroku/php/etc/php/conf.d/010-ext-zend_opcache.ini\n#   Install Composer\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-16-stable/composer-$COMPOSER_VERSION.tar.gz | tar xz -C /app/.heroku/php\nRUN composer self-update\n#   Install Node.js\nRUN curl -s https://s3pository.heroku.com/node/v$NODE_ENGINE/node-v$NODE_ENGINE-linux-x64.tar.gz | tar --strip-components=1 -xz -C /app/heroku/node\n#   Export the node path in .profile.d\nRUN echo \"export PATH=\\\"/app/heroku/node/bin:/app/user/node_modules/.bin:$PATH\\\"\" > /app/.profile.d/nodejs.sh\n#   Install yarn package manager\nRUN npm install yarn --global\n#   Copy composer json and lock files\nCOPY composer.json /app/user/\nCOPY composer.lock /app/user/\n#   Run pre-install hooks\nRUN composer run-script pre-install-cmd\n#   Remove composer json and lock file\nRUN rm composer.*\n#   Export heroku bin\nENV PATH=\"/app/user/bin:$PATH\"\n","originalDockerfileUglifiedHash":"39aeb1c9f41ff2f7570ad38db27505b0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a525c929cd3f4c5c76e5f0824c5ccc38b66be91e.dockerfile"}