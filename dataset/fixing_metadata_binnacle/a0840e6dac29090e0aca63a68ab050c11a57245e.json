{"seed":2706946919,"processedDockerfileHash":"6d212fa14b906c08335dd99a02c7aea6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","do-not-have-secrets","have-a-healthcheck"],"processedDockerfile":"FROM adhoc/odoo-ubuntu:9.0\nMAINTAINER Juan Jose Scarafia <jjs@adhoc.com.ar>\nUSER root\n#   Install some deps (if we install with no-recommends later we have some errors with pip)\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-pip git locales -y\n#   Generate locale (es_AR for right odoo es_AR language config, and C.UTF-8 for postgres and general locale data)\n#   TODO better C.UTF-8 or en_US.UTF-8?\nRUN locale-gen en_US.UTF-8 \\\n && update-locale\nRUN locale-gen es_AR.UTF-8 \\\n && update-locale\nRUN echo 'LANG=\"en_US.UTF-8\"' > /etc/default/locale\nENV LANG=\"es_AR.UTF-8  \"\nENV LANGUAGE=\"es_AR:es:en_US:en  \"\nENV LC_ALL=\"es_AR.UTF-8\"\n#   sudo and other useful tools\nRUN apt-get install --no-install-recommends sudo nano htop ssh wget unzip iputils-ping telnet -y\n#   we update postgres-client to 9.6 because we use 9.6 postgres and if not database backup wont work, we need wget to run this\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql-client-9.6 -y\n#   update pip and install setuptools (required for intalling pip requirements)\nRUN pip install pip==23.1 --upgrade\nRUN pip install setuptools==67.6.1 --upgrade\n#   Workers and longpolling dependencies\nRUN apt-get install --no-install-recommends python-gevent -y\nRUN pip install psycogreen==1.0.2\n#  # Install pip dependencies for adhoc used odoo repositories\n#   RUN pip install openupgradelib\nRUN pip install git+https://github.com/OCA/openupgradelib/@master\n#   used by many pip packages\nRUN apt-get install --no-install-recommends python-dev build-essential -y\n#   odoo-extra\nRUN apt-get install --no-install-recommends python-matplotlib font-manager -y\nRUN pip install simplejson==3.19.1\n#   odoo argentina (nuevo modulo de FE)\nRUN apt-get install --no-install-recommends swig libffi-dev libssl-dev python-m2crypto python-httplib2 -y\n#   este deberiamos borrarlo porque tarda, es para pyOpenSSL que no deberia ser necesario si usamos pyafipws\n#   odoo-saas (para pycurl)\nRUN apt-get install --no-install-recommends libcurl4-openssl-dev parallel -y\n#   aeroo direct print\nRUN apt-get install --no-install-recommends libcups2-dev -y\n#  # Clean apt-get (copied from odoo)\nRUN apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Make auto_install = False for various modules\nRUN sed -i \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/im_odoo_support/__openerp__.py\n#   Leave this module installable\n#   RUN sed  -i  \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/base_import/__openerp__.py\nRUN sed -i \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/portal/__openerp__.py\nRUN sed -i \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/procurement_jit/__openerp__.py\n#   create directory for odoo files\nRUN mkdir -p /opt/odoo\nRUN chown -R odoo /opt/odoo\n#   changing user is required by odoo which won't start with root\nUSER odoo\nENV ETC_DIR=\"/opt/odoo/etc\"\nENV DATA_DIR=\"/opt/odoo/data\"\nENV CUSTOM_ADDONS=\"/opt/odoo/custom-addons\"\nENV EXTRA_ADDONS=\"/opt/odoo/extra-addons\"\nRUN mkdir -p ${ETC_DIR}\nRUN mkdir -p ${DATA_DIR}\nRUN mkdir -p ${CUSTOM_ADDONS}\nRUN mkdir -p ${EXTRA_ADDONS}\nUSER root\n#   Mount persistent directories\nVOLUME [\"${DATA_DIR}\", \"${CUSTOM_ADDONS}\"]\n#   no tendriamos porque montar \"/opt/odoo/etc\" ya que la idea es que se reconstruya el conf dinamicamente\n#   rplace  entrypoint script and replace Odoo configuration file (new name)\nENV RESOURCES=\"/opt/odoo/resources/\"\nCOPY ./resources/ ${RESOURCES}\nRUN chown -R odoo ${RESOURCES}\n#   change entrypoint\nENTRYPOINT [\"/opt/odoo/resources/entrypoint.sh\"]\nCMD [\"odoo.py\"]\n#   Variables used by the launch scripts\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV ODOO_SERVER=\"odoo.py\" \\\n    ODOO_CONF=\"/opt/odoo/etc/odoo.conf\" \\\n    FIXDBS=\"False\" \\\n    DB_MAXCONN=\"64\" \\\n    MAX_CRON_THREADS=\"1\" \\\n    SMTP_SERVER=\"localhost\" \\\n    SMTP_PORT=\"25\" \\\n    SMTP_SSL=\"False\" \\\n    SMTP_USER=\"False\" \\\n    UNACCENT=\"True\" \\\n    PGUSER=\"odoo\" \\\n    PGHOST=\"db\" \\\n    PGPORT=\"5432\" \\\n    WORKERS=\"6\" \\\n    SERVER_MODE=\"test\" \\\n    DISABLE_SESSION_GC=\"false\" \\\n    FILESTORE_OPERATIONS_THREADS=\"3\" \\\n    FILESTORE_COPY_HARD_LINK=\"True\" \\\n    PROXY_MODE=\"True\" \\\n    WITHOUT_DEMO=\"True\" \\\n    DBFILTER=\".*\" \\\n    LIMIT_TIME_CPU=\"1600\" \\\n    LIMIT_TIME_REAL=\"3200\" \\\n    LIMIT_MEMORY_HARD=\"2684354560\" \\\n    LIMIT_MEMORY_SOFT=\"2147483648\" \\\n    AEROO_DOCS_HOST=\"aeroo\" \\\n    AFIP_HOMO_PKEY_FILE=\"/opt/odoo/backups/homo.pkey\" \\\n    AFIP_HOMO_CERT_FILE=\"/opt/odoo/backups/homo.cert\" \\\n    AFIP_PROD_PKEY_FILE=\"/opt/odoo/backups/prod.pkey\" \\\n    AFIP_PROD_CERT_FILE=\"/opt/odoo/backups/prod.cert\" \\\n    DB_TEMPLATE=\"template1\"\n#   odoo server use this env var as default conf, check if v9 or v10 rename it\nENV OPENERP_SERVER=\"$ODOO_CONF\"\nUSER odoo\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM adhoc/odoo-ubuntu:9.0\nMAINTAINER Juan Jose Scarafia <jjs@adhoc.com.ar>\nUSER root\n#  Install some deps (if we install with no-recommends later we have some errors with pip)\nRUN apt-get update \\\n && apt-get install python-pip git locales -y\n#  Generate locale (es_AR for right odoo es_AR language config, and C.UTF-8 for postgres and general locale data)\n#  TODO better C.UTF-8 or en_US.UTF-8?\nRUN locale-gen en_US.UTF-8 \\\n && update-locale\nRUN locale-gen es_AR.UTF-8 \\\n && update-locale\nRUN echo 'LANG=\"en_US.UTF-8\"' > /etc/default/locale\nENV LANG=\"es_AR.UTF-8  \"\nENV LANGUAGE=\"es_AR:es:en_US:en  \"\nENV LC_ALL=\"es_AR.UTF-8\"\n#  sudo and other useful tools\nRUN apt-get install sudo nano htop ssh wget unzip iputils-ping telnet -y\n#  we update postgres-client to 9.6 because we use 9.6 postgres and if not database backup wont work, we need wget to run this\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN apt-get update \\\n && apt-get install postgresql-client-9.6 -y\n#  update pip and install setuptools (required for intalling pip requirements)\nRUN pip install pip --upgrade\nRUN pip install setuptools --upgrade\n#  Workers and longpolling dependencies\nRUN apt-get install python-gevent -y\nRUN pip install psycogreen\n# # Install pip dependencies for adhoc used odoo repositories\n#  RUN pip install openupgradelib\nRUN pip install git+https://github.com/OCA/openupgradelib/@master\n#  used by many pip packages\nRUN apt-get install python-dev build-essential -y\n#  odoo-extra\nRUN apt-get install python-matplotlib font-manager -y\nRUN pip install simplejson\n#  odoo argentina (nuevo modulo de FE)\nRUN apt-get install swig libffi-dev libssl-dev python-m2crypto python-httplib2 -y\n#  este deberiamos borrarlo porque tarda, es para pyOpenSSL que no deberia ser necesario si usamos pyafipws\n#  odoo-saas (para pycurl)\nRUN apt-get install libcurl4-openssl-dev parallel -y\n#  aeroo direct print\nRUN apt-get install libcups2-dev -y\n# # Clean apt-get (copied from odoo)\nRUN apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Make auto_install = False for various modules\nRUN sed -i \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/im_odoo_support/__openerp__.py\n#  Leave this module installable\n#  RUN sed  -i  \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/base_import/__openerp__.py\nRUN sed -i \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/portal/__openerp__.py\nRUN sed -i \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/procurement_jit/__openerp__.py\n#  create directory for odoo files\nRUN mkdir -p /opt/odoo\nRUN chown -R odoo /opt/odoo\n#  changing user is required by odoo which won't start with root\nUSER odoo\nENV ETC_DIR=\"/opt/odoo/etc\"\nENV DATA_DIR=\"/opt/odoo/data\"\nENV CUSTOM_ADDONS=\"/opt/odoo/custom-addons\"\nENV EXTRA_ADDONS=\"/opt/odoo/extra-addons\"\nRUN mkdir -p ${ETC_DIR}\nRUN mkdir -p ${DATA_DIR}\nRUN mkdir -p ${CUSTOM_ADDONS}\nRUN mkdir -p ${EXTRA_ADDONS}\nUSER root\n#  Mount persistent directories\nVOLUME [\"${DATA_DIR}\", \"${CUSTOM_ADDONS}\"]\n#  no tendriamos porque montar \"/opt/odoo/etc\" ya que la idea es que se reconstruya el conf dinamicamente\n#  rplace  entrypoint script and replace Odoo configuration file (new name)\nENV RESOURCES=\"/opt/odoo/resources/\"\nCOPY ./resources/ ${RESOURCES}\nRUN chown -R odoo ${RESOURCES}\n#  change entrypoint\nENTRYPOINT [\"/opt/odoo/resources/entrypoint.sh\"]\nCMD [\"odoo.py\"]\n#  Variables used by the launch scripts\nENV ODOO_SERVER=\"odoo.py\" \\\n    ODOO_CONF=\"/opt/odoo/etc/odoo.conf\" \\\n    FIXDBS=\"False\" \\\n    DB_MAXCONN=\"64\" \\\n    MAX_CRON_THREADS=\"1\" \\\n    SMTP_SERVER=\"localhost\" \\\n    SMTP_PORT=\"25\" \\\n    SMTP_SSL=\"False\" \\\n    SMTP_USER=\"False\" \\\n    SMTP_PASSWORD=\"False\" \\\n    UNACCENT=\"True\" \\\n    PGUSER=\"odoo\" \\\n    PGPASSWORD=\"odoo\" \\\n    PGHOST=\"db\" \\\n    PGPORT=\"5432\" \\\n    WORKERS=\"6\" \\\n    ADMIN_PASSWORD=\"admin\" \\\n    SERVER_MODE=\"test\" \\\n    DISABLE_SESSION_GC=\"false\" \\\n    FILESTORE_OPERATIONS_THREADS=\"3\" \\\n    FILESTORE_COPY_HARD_LINK=\"True\" \\\n    PROXY_MODE=\"True\" \\\n    WITHOUT_DEMO=\"True\" \\\n    DBFILTER=\".*\" \\\n    LIMIT_TIME_CPU=\"1600\" \\\n    LIMIT_TIME_REAL=\"3200\" \\\n    LIMIT_MEMORY_HARD=\"2684354560\" \\\n    LIMIT_MEMORY_SOFT=\"2147483648\" \\\n    AEROO_DOCS_HOST=\"aeroo\" \\\n    AFIP_HOMO_PKEY_FILE=\"/opt/odoo/backups/homo.pkey\" \\\n    AFIP_HOMO_CERT_FILE=\"/opt/odoo/backups/homo.cert\" \\\n    AFIP_PROD_PKEY_FILE=\"/opt/odoo/backups/prod.pkey\" \\\n    AFIP_PROD_CERT_FILE=\"/opt/odoo/backups/prod.cert\" \\\n    DB_TEMPLATE=\"template1\"\n#  odoo server use this env var as default conf, check if v9 or v10 rename it\nENV OPENERP_SERVER=\"$ODOO_CONF\"\nUSER odoo\n","injectedSmells":[],"originalDockerfileHash":"097eae9afa8efed40fcf08a5a158bb67","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM adhoc/odoo-ubuntu:9.0\nMAINTAINER Juan Jose Scarafia <jjs@adhoc.com.ar>\nUSER root\n#   Install some deps (if we install with no-recommends later we have some errors with pip)\nRUN apt-get update \\\n && apt-get install python-pip git locales -y\n#   Generate locale (es_AR for right odoo es_AR language config, and C.UTF-8 for postgres and general locale data)\n#   TODO better C.UTF-8 or en_US.UTF-8?\nRUN locale-gen en_US.UTF-8 \\\n && update-locale\nRUN locale-gen es_AR.UTF-8 \\\n && update-locale\nRUN echo 'LANG=\"en_US.UTF-8\"' > /etc/default/locale\nENV LANG=\"es_AR.UTF-8  \"\nENV LANGUAGE=\"es_AR:es:en_US:en  \"\nENV LC_ALL=\"es_AR.UTF-8\"\n#   sudo and other useful tools\nRUN apt-get install sudo nano htop ssh wget unzip iputils-ping telnet -y\n#   we update postgres-client to 9.6 because we use 9.6 postgres and if not database backup wont work, we need wget to run this\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN apt-get update \\\n && apt-get install postgresql-client-9.6 -y\n#   update pip and install setuptools (required for intalling pip requirements)\nRUN pip install pip --upgrade\nRUN pip install setuptools --upgrade\n#   Workers and longpolling dependencies\nRUN apt-get install python-gevent -y\nRUN pip install psycogreen\n#  # Install pip dependencies for adhoc used odoo repositories\n#   RUN pip install openupgradelib\nRUN pip install git+https://github.com/OCA/openupgradelib/@master\n#   used by many pip packages\nRUN apt-get install python-dev build-essential -y\n#   odoo-extra\nRUN apt-get install python-matplotlib font-manager -y\nRUN pip install simplejson\n#   odoo argentina (nuevo modulo de FE)\nRUN apt-get install swig libffi-dev libssl-dev python-m2crypto python-httplib2 -y\n#   este deberiamos borrarlo porque tarda, es para pyOpenSSL que no deberia ser necesario si usamos pyafipws\n#   odoo-saas (para pycurl)\nRUN apt-get install libcurl4-openssl-dev parallel -y\n#   aeroo direct print\nRUN apt-get install libcups2-dev -y\n#  # Clean apt-get (copied from odoo)\nRUN apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Make auto_install = False for various modules\nRUN sed -i \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/im_odoo_support/__openerp__.py\n#   Leave this module installable\n#   RUN sed  -i  \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/base_import/__openerp__.py\nRUN sed -i \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/portal/__openerp__.py\nRUN sed -i \"s/'auto_install': True/'auto_install': False/\" /usr/lib/python2.7/dist-packages/openerp/addons/procurement_jit/__openerp__.py\n#   create directory for odoo files\nRUN mkdir -p /opt/odoo\nRUN chown -R odoo /opt/odoo\n#   changing user is required by odoo which won't start with root\nUSER odoo\nENV ETC_DIR=\"/opt/odoo/etc\"\nENV DATA_DIR=\"/opt/odoo/data\"\nENV CUSTOM_ADDONS=\"/opt/odoo/custom-addons\"\nENV EXTRA_ADDONS=\"/opt/odoo/extra-addons\"\nRUN mkdir -p ${ETC_DIR}\nRUN mkdir -p ${DATA_DIR}\nRUN mkdir -p ${CUSTOM_ADDONS}\nRUN mkdir -p ${EXTRA_ADDONS}\nUSER root\n#   Mount persistent directories\nVOLUME [\"${DATA_DIR}\", \"${CUSTOM_ADDONS}\"]\n#   no tendriamos porque montar \"/opt/odoo/etc\" ya que la idea es que se reconstruya el conf dinamicamente\n#   rplace  entrypoint script and replace Odoo configuration file (new name)\nENV RESOURCES=\"/opt/odoo/resources/\"\nCOPY ./resources/ ${RESOURCES}\nRUN chown -R odoo ${RESOURCES}\n#   change entrypoint\nENTRYPOINT [\"/opt/odoo/resources/entrypoint.sh\"]\nCMD [\"odoo.py\"]\n#   Variables used by the launch scripts\nENV ODOO_SERVER=\"odoo.py\" \\\n    ODOO_CONF=\"/opt/odoo/etc/odoo.conf\" \\\n    FIXDBS=\"False\" \\\n    DB_MAXCONN=\"64\" \\\n    MAX_CRON_THREADS=\"1\" \\\n    SMTP_SERVER=\"localhost\" \\\n    SMTP_PORT=\"25\" \\\n    SMTP_SSL=\"False\" \\\n    SMTP_USER=\"False\" \\\n    SMTP_PASSWORD=\"False\" \\\n    UNACCENT=\"True\" \\\n    PGUSER=\"odoo\" \\\n    PGPASSWORD=\"odoo\" \\\n    PGHOST=\"db\" \\\n    PGPORT=\"5432\" \\\n    WORKERS=\"6\" \\\n    ADMIN_PASSWORD=\"admin\" \\\n    SERVER_MODE=\"test\" \\\n    DISABLE_SESSION_GC=\"false\" \\\n    FILESTORE_OPERATIONS_THREADS=\"3\" \\\n    FILESTORE_COPY_HARD_LINK=\"True\" \\\n    PROXY_MODE=\"True\" \\\n    WITHOUT_DEMO=\"True\" \\\n    DBFILTER=\".*\" \\\n    LIMIT_TIME_CPU=\"1600\" \\\n    LIMIT_TIME_REAL=\"3200\" \\\n    LIMIT_MEMORY_HARD=\"2684354560\" \\\n    LIMIT_MEMORY_SOFT=\"2147483648\" \\\n    AEROO_DOCS_HOST=\"aeroo\" \\\n    AFIP_HOMO_PKEY_FILE=\"/opt/odoo/backups/homo.pkey\" \\\n    AFIP_HOMO_CERT_FILE=\"/opt/odoo/backups/homo.cert\" \\\n    AFIP_PROD_PKEY_FILE=\"/opt/odoo/backups/prod.pkey\" \\\n    AFIP_PROD_CERT_FILE=\"/opt/odoo/backups/prod.cert\" \\\n    DB_TEMPLATE=\"template1\"\n#   odoo server use this env var as default conf, check if v9 or v10 rename it\nENV OPENERP_SERVER=\"$ODOO_CONF\"\nUSER odoo\n","originalDockerfileUglifiedHash":"7eb7d1df96a91bcf46d0634ad78c1f01","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a0840e6dac29090e0aca63a68ab050c11a57245e.dockerfile"}