{"seed":2661207639,"processedDockerfileHash":"00c0f8b3b6b24391e0fafb6634c80c84","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial\n#  ###################\n#   Install node and dependencies\n#   From: https://github.com/nodejs/docker-node/blob/master/6.11/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg=1.4.20-1ubuntu3.3 curl=7.47.0-1ubuntu2.19 ca-certificates=20210119~16.04.1 xz-utils=5.1.1alpha+20120614-2ubuntu2 wget=1.17.1-1ubuntu1.5 libgtk2.0-0=2.24.30-1ubuntu1.16.04.2 libgconf-2-4=3.2.6-3ubuntu6 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"6.11.3\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#  ###################\n#   Download fonts\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends fontconfig=2.11.94-0ubuntu1.1 fonts-ipafont-gothic=00303-13ubuntu1 fonts-ipafont-mincho=00303-13ubuntu1 subversion=1.9.3-2ubuntu1.3 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean \\\n && cd /usr/share/fonts/truetype \\\n && for font in https://github.com/google/fonts/trunk/apache/droidsansmono https://github.com/google/fonts/trunk/apache/droidsans https://github.com/google/fonts/trunk/apache/droidserif https://github.com/google/fonts/trunk/apache/roboto https://github.com/google/fonts/trunk/apache/opensans https://github.com/google/fonts/trunk/ofl/gravitasone https://github.com/google/fonts/trunk/ofl/oldstandardtt https://github.com/google/fonts/trunk/ofl/ptsansnarrow https://github.com/google/fonts/trunk/ofl/raleway https://github.com/google/fonts/trunk/ofl/overpass; do svn checkout $font ; done \\\n && mkdir /usr/share/fonts/user \\\n && fc-cache -fv \\\n && apt-get --auto-remove -y remove subversion\n#  ###################\n#   Download mathjax (same version as plotly.js extras/)\nRUN curl -L https://github.com/plotly/plotly.js/archive/master.tar.gz | tar -xvzf - --strip-components=3 plotly.js-master/dist/extras/mathjax\n#  ###################\n#   Copy and set up Orca\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends google-chrome-stable xvfb=2:1.18.4-0ubuntu0.12 poppler-utils=0.41.0-0ubuntu1.16 git=1:2.7.4-0ubuntu1.10 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nCOPY package.json /var/www/image-exporter/\nCOPY bin /var/www/image-exporter/bin\nCOPY src /var/www/image-exporter/src\nWORKDIR /var/www/image-exporter\nRUN npm install \\\n && mkdir build\n#  ###################\n#   Install and configure monit\nCOPY deployment/monitrc /etc\nRUN cd /opt \\\n && wget -q -O - https://mmonit.com/monit/dist/binary/5.25.1/monit-5.25.1-linux-x64.tar.gz | tar xvzf - \\\n && ln -s monit-* monit \\\n && chmod 600 /etc/monitrc\n#  ###################\n#   Install latest stable Inkscape\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.10 python-software-properties=0.96.20.10 -y \\\n && add-apt-repository -y ppa:inkscape.dev/stable \\\n && apt-get update \\\n && apt-get install --no-install-recommends inkscape=0.92.4+68~ubuntu16.04.1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#   Copy Inkscape defaults\nCOPY deployment/preferences.xml /root/.config/inkscape/\n#  ###################\n#   Download geo-assets (same version as plotly.js extras/)\nRUN wget https://raw.githubusercontent.com/plotly/plotly.js/master/dist/plotly-geo-assets.js -O /plotly-geo-assets.js\n#  ###################\n#   Configure ImageMagick policy\nCOPY deployment/ImageMagickPolicy.xml /etc/ImageMagick-6/policy.xml\n#  ###################\n#   Add entrypoint script\nCOPY deployment/entrypoint.sh /\n#   Add server script\nCOPY deployment/run_server /\n#   Symlink to entrypoint\nRUN ln -s /entrypoint.sh /usr/bin/orca\nEXPOSE 9091/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"--mathjax\", \"/mathjax/MathJax.js\", \"--topojson\", \"/plotly-geo-assets.js\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial\n# ###################\n#  Install node and dependencies\n#  From: https://github.com/nodejs/docker-node/blob/master/6.11/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg curl ca-certificates xz-utils wget libgtk2.0-0 libgconf-2-4 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#  gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"6.11.3\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n# ###################\n#  Download fonts\nRUN apt-get update -y \\\n && apt-get install fontconfig fonts-ipafont-gothic fonts-ipafont-mincho subversion -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean \\\n && cd /usr/share/fonts/truetype \\\n && for font in https://github.com/google/fonts/trunk/apache/droidsansmono https://github.com/google/fonts/trunk/apache/droidsans https://github.com/google/fonts/trunk/apache/droidserif https://github.com/google/fonts/trunk/apache/roboto https://github.com/google/fonts/trunk/apache/opensans https://github.com/google/fonts/trunk/ofl/gravitasone https://github.com/google/fonts/trunk/ofl/oldstandardtt https://github.com/google/fonts/trunk/ofl/ptsansnarrow https://github.com/google/fonts/trunk/ofl/raleway https://github.com/google/fonts/trunk/ofl/overpass; do svn checkout $font ; done \\\n && mkdir /usr/share/fonts/user \\\n && fc-cache -fv \\\n && apt-get --auto-remove -y remove subversion\n# ###################\n#  Download mathjax (same version as plotly.js extras/)\nRUN curl -L https://github.com/plotly/plotly.js/archive/master.tar.gz | tar -xvzf - --strip-components=3 plotly.js-master/dist/extras/mathjax\n# ###################\n#  Copy and set up Orca\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && apt-get update -y \\\n && apt-get install google-chrome-stable xvfb poppler-utils git -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nCOPY package.json /var/www/image-exporter/\nCOPY bin /var/www/image-exporter/bin\nCOPY src /var/www/image-exporter/src\nWORKDIR /var/www/image-exporter\nRUN npm install \\\n && mkdir build\n# ###################\n#  Install and configure monit\nCOPY deployment/monitrc /etc\nRUN cd /opt \\\n && wget -q -O - https://mmonit.com/monit/dist/binary/5.25.1/monit-5.25.1-linux-x64.tar.gz | tar xvzf - \\\n && ln -s monit-* monit \\\n && chmod 600 /etc/monitrc\n# ###################\n#  Install latest stable Inkscape\nRUN apt-get update \\\n && apt-get install software-properties-common python-software-properties -y \\\n && add-apt-repository -y ppa:inkscape.dev/stable \\\n && apt-get update \\\n && apt-get install inkscape=0.92.4+68~ubuntu16.04.1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#  Copy Inkscape defaults\nCOPY deployment/preferences.xml /root/.config/inkscape/\n# ###################\n#  Download geo-assets (same version as plotly.js extras/)\nRUN wget https://raw.githubusercontent.com/plotly/plotly.js/master/dist/plotly-geo-assets.js -O /plotly-geo-assets.js\n# ###################\n#  Configure ImageMagick policy\nCOPY deployment/ImageMagickPolicy.xml /etc/ImageMagick-6/policy.xml\n# ###################\n#  Add entrypoint script\nCOPY deployment/entrypoint.sh /\n#  Add server script\nCOPY deployment/run_server /\n#  Symlink to entrypoint\nRUN ln -s /entrypoint.sh /usr/bin/orca\nEXPOSE 9091/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"--mathjax\", \"/mathjax/MathJax.js\", \"--topojson\", \"/plotly-geo-assets.js\"]\n","injectedSmells":[],"originalDockerfileHash":"0009404c65e6d65653734edb9e9ece57","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial\n#  ###################\n#   Install node and dependencies\n#   From: https://github.com/nodejs/docker-node/blob/master/6.11/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg curl ca-certificates xz-utils wget libgtk2.0-0 libgconf-2-4 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"6.11.3\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#  ###################\n#   Download fonts\nRUN apt-get update -y \\\n && apt-get install fontconfig fonts-ipafont-gothic fonts-ipafont-mincho subversion -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean \\\n && cd /usr/share/fonts/truetype \\\n && for font in https://github.com/google/fonts/trunk/apache/droidsansmono https://github.com/google/fonts/trunk/apache/droidsans https://github.com/google/fonts/trunk/apache/droidserif https://github.com/google/fonts/trunk/apache/roboto https://github.com/google/fonts/trunk/apache/opensans https://github.com/google/fonts/trunk/ofl/gravitasone https://github.com/google/fonts/trunk/ofl/oldstandardtt https://github.com/google/fonts/trunk/ofl/ptsansnarrow https://github.com/google/fonts/trunk/ofl/raleway https://github.com/google/fonts/trunk/ofl/overpass; do svn checkout $font ; done \\\n && mkdir /usr/share/fonts/user \\\n && fc-cache -fv \\\n && apt-get --auto-remove -y remove subversion\n#  ###################\n#   Download mathjax (same version as plotly.js extras/)\nRUN curl -L https://github.com/plotly/plotly.js/archive/master.tar.gz | tar -xvzf - --strip-components=3 plotly.js-master/dist/extras/mathjax\n#  ###################\n#   Copy and set up Orca\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && apt-get update -y \\\n && apt-get install google-chrome-stable xvfb poppler-utils git -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nCOPY package.json /var/www/image-exporter/\nCOPY bin /var/www/image-exporter/bin\nCOPY src /var/www/image-exporter/src\nWORKDIR /var/www/image-exporter\nRUN npm install \\\n && mkdir build\n#  ###################\n#   Install and configure monit\nCOPY deployment/monitrc /etc\nRUN cd /opt \\\n && wget -q -O - https://mmonit.com/monit/dist/binary/5.25.1/monit-5.25.1-linux-x64.tar.gz | tar xvzf - \\\n && ln -s monit-* monit \\\n && chmod 600 /etc/monitrc\n#  ###################\n#   Install latest stable Inkscape\nRUN apt-get update \\\n && apt-get install software-properties-common python-software-properties -y \\\n && add-apt-repository -y ppa:inkscape.dev/stable \\\n && apt-get update \\\n && apt-get install inkscape=0.92.4+68~ubuntu16.04.1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#   Copy Inkscape defaults\nCOPY deployment/preferences.xml /root/.config/inkscape/\n#  ###################\n#   Download geo-assets (same version as plotly.js extras/)\nRUN wget https://raw.githubusercontent.com/plotly/plotly.js/master/dist/plotly-geo-assets.js -O /plotly-geo-assets.js\n#  ###################\n#   Configure ImageMagick policy\nCOPY deployment/ImageMagickPolicy.xml /etc/ImageMagick-6/policy.xml\n#  ###################\n#   Add entrypoint script\nCOPY deployment/entrypoint.sh /\n#   Add server script\nCOPY deployment/run_server /\n#   Symlink to entrypoint\nRUN ln -s /entrypoint.sh /usr/bin/orca\nEXPOSE 9091/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"--mathjax\", \"/mathjax/MathJax.js\", \"--topojson\", \"/plotly-geo-assets.js\"]\n","originalDockerfileUglifiedHash":"f4b1530a6bfcdb0e39980c4eef950dc0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/07e37aa29f9437f164dd9e5d8c3f0c71466b05a3.dockerfile"}